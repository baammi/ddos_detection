source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r15 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208009521
@global_var_1001d00c.3 = global i32 0
@global_var_1001d01c.4 = local_unnamed_addr global i32* @global_var_1001d00c.3
@global_var_1001d1f8.6 = global i32 0
@global_var_10000584.7 = constant [3 x i8] c";{\00"
@global_var_100005a4.8 = constant i32 939524096
@global_var_1001d184.10 = local_unnamed_addr global i32 0
@global_var_1001d188.12 = local_unnamed_addr global i32 0
@global_var_10000fcc.13 = constant i32 939524096
@global_var_10001584.14 = constant i32 939524096
@global_var_10001888.15 = constant [3 x i8] c"8`\00"
@global_var_10001908.16 = constant [3 x i8] c"8`\00"
@global_var_10001c58.17 = constant i32 939524096
@global_var_1000203c.18 = constant i32 939524096
@global_var_10002260.19 = constant i32 939524096
@global_var_1000260c.20 = constant i32 939524104
@global_var_10002630.21 = constant [3 x i8] c"9 \00"
@global_var_1000294c.22 = constant i32 939524096
@global_var_1000296c.23 = constant i32 939524096
@global_var_1000304c.24 = constant i32 939524096
@global_var_1000378c.25 = constant [3 x i8] c"8`\00"
@global_var_10003c34.26 = constant [3 x i8] c"9!\00"
@global_var_1001d194.27 = local_unnamed_addr global i32 0
@global_var_10003ea4.28 = constant [3 x i8] c"8`\00"
@global_var_10003eac.29 = constant [3 x i8] c"8`\00"
@global_var_10003fac.30 = constant i32 956301312
@global_var_1000c460.31 = constant i32 788529152
@global_var_100042f8.32 = constant [3 x i8] c"8`\00"
@global_var_10004300.33 = constant [3 x i8] c"8`\00"
@global_var_10004308.34 = constant [3 x i8] c"8`\00"
@global_var_10004310.35 = constant [3 x i8] c"8`\00"
@global_var_1000437c.36 = constant [3 x i8] c"8`\00"
@global_var_10004384.37 = constant [3 x i8] c"8`\00"
@global_var_100044d4.38 = constant i32 939524118
@global_var_10004510.39 = constant [3 x i8] c"8`\00"
@global_var_1001d18c.40 = local_unnamed_addr global i32 0
@global_var_1001d190.41 = local_unnamed_addr global i32 0
@global_var_10004544.42 = constant [3 x i8] c"8`\00"
@global_var_100045c0.43 = constant [3 x i8] c"8`\00"
@global_var_100045c8.44 = constant [3 x i8] c"8`\00"
@global_var_10004634.45 = constant i32 1207982409
@global_var_100046d0.46 = constant [3 x i8] c"8`\00"
@global_var_10004760.47 = constant [3 x i8] c"8`\00"
@global_var_10004768.48 = constant [3 x i8] c"8`\00"
@global_var_100047d8.49 = constant [3 x i8] c"8`\00"
@global_var_100047e0.50 = constant i32 1207980769
@global_var_10004894.51 = constant [3 x i8] c"8`\00"
@global_var_1000489c.52 = constant [3 x i8] c"8`\00"
@global_var_100048a4.53 = constant [3 x i8] c"8`\00"
@global_var_100048ac.54 = constant [3 x i8] c"8`\00"
@global_var_100048b4.55 = constant [3 x i8] c"8`\00"
@global_var_100048bc.56 = constant [3 x i8] c"8`\00"
@global_var_100048c4.57 = constant [3 x i8] c"8`\00"
@global_var_100048cc.58 = constant [3 x i8] c"8`\00"
@global_var_100048d4.59 = constant [3 x i8] c"8`\00"
@global_var_100048dc.60 = constant [3 x i8] c"8`\00"
@global_var_100048e4.61 = constant [3 x i8] c"8`\00"
@global_var_10004ae4.62 = constant [3 x i8] c"8`\00"
@global_var_10004aec.63 = constant [3 x i8] c"8`\00"
@global_var_10004af4.64 = constant [3 x i8] c"8`\00"
@global_var_10004afc.65 = constant [3 x i8] c"8`\00"
@global_var_10004b04.66 = constant [3 x i8] c"8`\00"
@global_var_10004b0c.67 = constant [3 x i8] c"8`\00"
@global_var_10004b14.68 = constant [3 x i8] c"8`\00"
@global_var_10004b1c.69 = constant [3 x i8] c"8`\00"
@global_var_10004b24.70 = constant [3 x i8] c"8`\00"
@global_var_10004b2c.71 = constant [3 x i8] c"8`\00"
@global_var_10004b34.72 = constant [3 x i8] c"8`\00"
@global_var_10004b68.73 = constant [3 x i8] c"8`\00"
@global_var_1001d168.74 = local_unnamed_addr global i32 268473716
@global_var_1001d160.75 = local_unnamed_addr global i32 -1
@global_var_10004ff4.77 = constant [3 x i8] c"8`\00"
@global_var_10005004.78 = constant [3 x i8] c"8`\00"
@global_var_1000507c.79 = constant i32 1207962421
@global_var_1001d260.80 = global i32 0
@global_var_1001d264.81 = local_unnamed_addr global i32 0
@global_var_100050cc.82 = constant [3 x i8] c"8`\00"
@global_var_100050d4.83 = constant [3 x i8] c"8`\00"
@global_var_1001d262.84 = local_unnamed_addr global i32 0
@global_var_1001d198.85 = local_unnamed_addr global i32 0
@global_var_1000515c.86 = constant [3 x i8] c"8`\00"
@global_var_100051b8.87 = constant [3 x i8] c"8`\00"
@global_var_100051f0.88 = constant [3 x i8] c"8`\00"
@global_var_100051f8.89 = constant [3 x i8] c"8`\00"
@global_var_100052b4.90 = constant i32 1207976641
@global_var_100052f0.91 = constant i32 1207961337
@global_var_1000530c.92 = constant [3 x i8] c";a\00"
@global_var_10005370.93 = constant i32 1207961129
@global_var_100053c4.94 = constant [3 x i8] c"8`\00"
@global_var_1000c464.95 = constant i32 167772160
@global_var_100053fc.96 = constant [3 x i8] c"8`\00"
@global_var_10005410.97 = constant i32 1207977577
@global_var_100054b0.98 = constant [3 x i8] c":`\00"
@global_var_100054c0.99 = constant [3 x i8] c"8`\00"
@global_var_100054c8.100 = constant [3 x i8] c"8`\00"
@global_var_1001d164.101 = local_unnamed_addr global i32 -1
@global_var_10005688.103 = constant i32 939589631
@global_var_10005740.104 = constant i32 939589631
@global_var_10005788.105 = constant i32 939589631
@global_var_10005868.106 = constant i32 939589631
@global_var_10005874.107 = constant i32 1006685388
@global_var_100058ac.108 = constant i32 1207961633
@global_var_100058b4.109 = constant [3 x i8] c"|q\00"
@global_var_100058c0.110 = constant [3 x i8] c"8`\00"
@global_var_1000c468.111 = constant i32 1
@global_var_1001d21c.112 = local_unnamed_addr global i32 0
@global_var_1001d210.113 = local_unnamed_addr global i32 0
@global_var_1001d218.114 = local_unnamed_addr global i32 0
@global_var_1001d214.115 = local_unnamed_addr global i32 0
@global_var_10005c1c.116 = constant [3 x i8] c"9A\00"
@global_var_10005ca0.117 = constant i32 939524096
@global_var_10005cd4.118 = constant i32 1006665728
@global_var_10005d00.119 = constant i32 939524098
@global_var_10005d48.120 = constant [3 x i8] c"8`\00"
@global_var_10005dbc.121 = constant i32 939524128
@global_var_10005e68.122 = constant [3 x i8] c"8c\00"
@global_var_1001d1b8.123 = local_unnamed_addr global i32 0
@global_var_1001d1ac.124 = local_unnamed_addr global i32 0
@global_var_1001d1a0.125 = local_unnamed_addr global i32 0
@global_var_1001d1a4.126 = local_unnamed_addr global i32 0
@global_var_10006478.128 = constant [3 x i8] c"8`\00"
@global_var_10006494.129 = constant i32 939524096
@global_var_1001d1b0.130 = local_unnamed_addr global i32 0
@global_var_1001d1b4.131 = local_unnamed_addr global i32 0
@global_var_1001d220.132 = global i32 0
@global_var_1001d234.133 = global i32 0
@global_var_1001d222.134 = local_unnamed_addr global i32 0
@global_var_1001d240.135 = local_unnamed_addr global i32 0
@global_var_1001d229.136 = local_unnamed_addr global i32 0
@global_var_1001d228.137 = local_unnamed_addr global i32 0
@global_var_1001d224.138 = local_unnamed_addr global i32 0
@global_var_1000c7e4.139 = constant [5 x i8] c"PMMV\00"
@global_var_1000c940.141 = constant i32 0
@global_var_1000c988.142 = constant [6 x i8] c"CFOKL\00"
@global_var_1001d242.143 = local_unnamed_addr global i32 0
@global_var_1000c480.144 = constant i32 437918234
@global_var_1000c490.145 = constant [8 x i8] c"FGDCWNV\00"
@global_var_1000c4a4.146 = constant i32 319820054
@global_var_1000c470.147 = constant i32 1514213655
@global_var_1000c4ac.148 = constant i32 387322128
@global_var_1000c478.149 = constant [6 x i8] c"TKXZT\00"
@global_var_1000c4b4.150 = constant [8 x i8] c"QWRRMPV\00"
@global_var_1000c488.151 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_1000c498.152 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_1000ca0c.153 = constant i32 319820054
@global_var_1000c4bc.154 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_1000c4c8.155 = constant i32 319820054
@global_var_1000c4d0.156 = constant [5 x i8] c"WQGP\00"
@global_var_1000c4d8.157 = constant [5 x i8] c"RCQQ\00"
@global_var_10006808.158 = constant i32 1040191489
@global_var_1000c634.159 = constant i32 320017171
@global_var_1000c4e0.160 = constant i32 1128681291
@global_var_1000c4ec.161 = constant [9 x i8] c"QOACFOKL\00"
@global_var_1000c4f8.162 = constant i32 336860180
@global_var_1000c508.163 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_1000c500.164 = constant i32 1229870099
@global_var_1000c518.165 = constant [7 x i8] c"OGKLQO\00"
@global_var_1000c520.166 = constant [4 x i8] c"@WJ\00"
@global_var_1000c524.167 = constant [7 x i8] c"RW@NKA\00"
@global_var_1000c534.168 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_1000c540.169 = constant [6 x i8] c"EWGQV\00"
@global_var_1000c52c.171 = constant [8 x i8] c"QGPTKAG\00"
@global_var_1000c560.173 = constant [5 x i8] c"W@LV\00"
@global_var_1000c548.175 = constant i32 1128681291
@global_var_1000c550.176 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_1000c568.177 = constant i32 1229870099
@global_var_1000c570.178 = constant i32 2018920215
@global_var_1000c5b4.179 = constant i32 358041711
@global_var_1000c578.180 = constant i32 1246433559
@global_var_1000c580.181 = constant [6 x i8] c"HT@XF\00"
@global_var_1000c630.182 = constant i32 320017171
@global_var_1000c588.183 = constant [5 x i8] c"CLIM\00"
@global_var_1000c590.184 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_1000c598.185 = constant [9 x i8] c"AJCLEGOG\00"
@global_var_1000c5a4.186 = constant i32 358041711
@global_var_1000c5c4.187 = constant [7 x i8] c"Q[QVGO\00"
@global_var_1000c5cc.188 = constant [5 x i8] c"KIU@\00"
@global_var_1000c5d4.189 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_1000c5e0.190 = constant [8 x i8] c"PGCNVGI\00"
@global_var_1000c5e8.191 = constant i32 303174162
@global_var_1000c5f4.192 = constant i32 303174162
@global_var_1000c5fc.193 = constant i32 320017171
@global_var_1000c604.194 = constant i32 1128681291
@global_var_1000c49c.195 = constant [5 x i8] c"VGAJ\00"
@global_var_1000c610.196 = constant i32 454761243
@global_var_1000c690.197 = constant [7 x i8] c"Q[LLGV\00"
@global_var_1000c61c.198 = constant [6 x i8] c"oGKLQ\00"
@global_var_1000c624.199 = constant [4 x i8] c"hta\00"
@global_var_1000c81c.200 = constant [6 x i8] c"cFOKL\00"
@global_var_1000c628.201 = constant i32 370216979
@global_var_1000c63c.202 = constant [7 x i8] c"WVQVCP\00"
@global_var_1000c644.203 = constant [9 x i8] c"XMMOCFQN\00"
@global_var_1000c650.204 = constant i32 1128681291
@global_var_1000c658.205 = constant i32 1263669266
@global_var_1000c660.206 = constant i32 1263669522
@global_var_1000c668.207 = constant i32 1263670802
@global_var_1000c670.208 = constant [7 x i8] c"@KLVGA\00"
@global_var_1000c678.209 = constant [8 x i8] c"VQWLCOK\00"
@global_var_1000c680.210 = constant i32 1128284435
@global_var_1000c688.211 = constant i32 269750803
@global_var_1000c698.212 = constant [9 x i8] c"@C[CLFQN\00"
@global_var_1000c6a4.213 = constant [6 x i8] c"SWQGP\00"
@global_var_1000c79c.214 = constant i32 319820032
@global_var_1000c6b4.215 = constant [8 x i8] c"oCLCEGP\00"
@global_var_1000c6ac.216 = constant i32 319820054
@global_var_1000c6bc.217 = constant [4 x i8] c"CFO\00"
@global_var_1000c6c0.218 = constant [8 x i8] c"OCLCEGP\00"
@global_var_1000c6c8.219 = constant [7 x i8] c"DPKGLF\00"
@global_var_1000c6d0.220 = constant [4 x i8] c"CRA\00"
@global_var_1000c6e8.221 = constant [7 x i8] c"CQAGLF\00"
@global_var_1000c6d4.222 = constant i32 1296518731
@global_var_1000c6e0.223 = constant [5 x i8] c"VKLK\00"
@global_var_1000c6f0.224 = constant i32 1712287307
@global_var_1000c700.225 = constant [6 x i8] c"NMEKL\00"
@global_var_1000c6f8.226 = constant [6 x i8] c"FNKLI\00"
@global_var_1000c708.227 = constant i32 55594317
@global_var_1000c710.228 = constant [9 x i8] c"AC@NGAMO\00"
@global_var_1000c71c.229 = constant [7 x i8] c"PMWVGP\00"
@global_var_1000c724.230 = constant [8 x i8] c"LGVMRKC\00"
@global_var_1000c72c.231 = constant [7 x i8] c"Q[QCFO\00"
@global_var_1000c734.232 = constant [8 x i8] c"CLKAWQV\00"
@global_var_1000c73c.233 = constant [6 x i8] c"FG@WE\00"
@global_var_1000c744.234 = constant [10 x i8] c"F\0CG\0C@\0CW\0CE\00"
@global_var_1000c750.235 = constant [5 x i8] c"GAJM\00"
@global_var_1000c760.236 = constant [7 x i8] c"QUKVAJ\00"
@global_var_1000c758.237 = constant [5 x i8] c"FKCE\00"
@global_var_1000c768.238 = constant [7 x i8] c"VGNLGV\00"
@global_var_1000c730.239 = constant [3 x i8] c"FO\00"
@global_var_1000c770.240 = constant i32 319820054
@global_var_1000c77c.241 = constant [5 x i8] c"VMMP\00"
@global_var_1000c7f8.242 = constant [6 x i8] c"cfokl\00"
@global_var_1000c784.243 = constant [7 x i8] c"ACNTKL\00"
@global_var_1000c78c.244 = constant i32 319820054
@global_var_1000c798.245 = constant i32 1347243350
@global_var_1000c7a0.246 = constant i32 1128941398
@global_var_1000c7ac.247 = constant i32 337318939
@global_var_1000c7b4.248 = constant i32 1380128535
@global_var_1000c7c0.249 = constant i32 319820051
@global_var_1000c7c8.250 = constant i32 1886219638
@global_var_1000c7d0.251 = constant [7 x i8] c"CNRKLG\00"
@global_var_1000c7d8.252 = constant i32 1482049307
@global_var_1000c7e0.253 = constant i32 1074991122
@global_var_1000c7ec.254 = constant [9 x i8] c"rcqqumpf\00"
@global_var_1000c800.255 = constant [8 x i8] c"LGVEGCP\00"
@global_var_1000c808.256 = constant i32 1414927122
@global_var_1000c810.257 = constant [4 x i8] c"K@O\00"
@global_var_1000c864.258 = constant [6 x i8] c"Cfokl\00"
@global_var_1000c814.259 = constant [7 x i8] c"T[CVVC\00"
@global_var_1000c824.260 = constant i32 1129726230
@global_var_1000c82c.261 = constant [7 x i8] c"OKAPMQ\00"
@global_var_1000c834.262 = constant [6 x i8] c"QGVWR\00"
@global_var_1000c83c.263 = constant [8 x i8] c"AMOACQV\00"
@global_var_1000c844.264 = constant [4 x i8] c"RMQ\00"
@global_var_1000c848.265 = constant [4 x i8] c"UUU\00"
@global_var_1000c84c.266 = constant i32 270144018
@global_var_1000c854.267 = constant [5 x i8] c"w`lv\00"
@global_var_1000c85c.268 = constant [7 x i8] c"LGVOCL\00"
@global_var_1000c86c.269 = constant [7 x i8] c"FCGOML\00"
@global_var_1000c874.270 = constant [5 x i8] c"FGOM\00"
@global_var_1000c87c.271 = constant [6 x i8] c"CPPKQ\00"
@global_var_1000c900.272 = constant i32 1077956934
@global_var_1000c884.273 = constant [8 x i8] c"nKLIQ[Q\00"
@global_var_1000c88c.274 = constant [7 x i8] c"ANKGLV\00"
@global_var_1000c894.275 = constant [6 x i8] c"AKQAM\00"
@global_var_1000c89c.276 = constant [6 x i8] c"akqam\00"
@global_var_1000c8a4.277 = constant [6 x i8] c"QWRGP\00"
@global_var_1000c8ac.278 = constant [5 x i8] c"QWPV\00"
@global_var_1000c8b4.279 = constant i32 353638166
@global_var_1000c648.280 = constant [5 x i8] c"CFQN\00"
@global_var_1000c8bc.281 = constant i32 1128681806
@global_var_1000c8c8.282 = constant [7 x i8] c"RCVPMN\00"
@global_var_1000c8d0.283 = constant i32 1329926423
@global_var_1000c8d8.284 = constant [7 x i8] c"OGPNKL\00"
@global_var_1000c8e0.285 = constant [9 x i8] c"LGVCFOKL\00"
@global_var_1000c8ec.286 = constant [9 x i8] c"JGUNRCAI\00"
@global_var_1000c8f8.287 = constant [7 x i8] c"lGVkaQ\00"
@global_var_1000c90c.288 = constant [5 x i8] c"lwnn\00"
@global_var_1000c914.289 = constant [9 x i8] c"CFOKLVVF\00"
@global_var_1000c920.290 = constant [9 x i8] c"MRGPCVMP\00"
@global_var_1000c92c.291 = constant [9 x i8] c"rNAOqRkR\00"
@global_var_1000c938.292 = constant i32 269488144
@global_var_1000c944.293 = constant [9 x i8] c"QGAWPKV[\00"
@global_var_1000c950.294 = constant [9 x i8] c"OMWLVQ[Q\00"
@global_var_1000c95c.295 = constant [8 x i8] c"OGOMVGA\00"
@global_var_1000c964.296 = constant i32 1852918615
@global_var_1000c974.297 = constant i32 293038199
@global_var_1000c984.298 = constant [10 x i8] c"OWQGCFOKL\00"
@global_var_1000c990.299 = constant i32 1867993415
@global_var_1000c99c.300 = constant [10 x i8] c"QVMPUCVAJ\00"
@global_var_1000c9a8.301 = constant [11 x i8] c"QRGAKCNKQV\00"
@global_var_1000c9b4.302 = constant [10 x i8] c"CFOKLRNFV\00"
@global_var_1000c9c0.303 = constant [10 x i8] c"RNFVCFOKL\00"
@global_var_1000c9cc.304 = constant i32 1095385932
@global_var_1000c9d8.305 = constant [13 x i8] c"VGNGAMOCFOKL\00"
@global_var_1000c9e8.306 = constant [13 x i8] c"CFOKLVGNGAMO\00"
@global_var_1000c9f8.307 = constant i32 1514213652
@global_var_1000ca00.308 = constant [7 x i8] c"CLVQNS\00"
@global_var_1000ca08.309 = constant i32 1482376006
@global_var_1001d22c.310 = local_unnamed_addr global i32 0
@global_var_1000ca24.311 = constant i32 -20316
@global_var_1001d230.312 = local_unnamed_addr global i32 0
@global_var_1001d22a.313 = local_unnamed_addr global i32 0
@global_var_1001d244.314 = local_unnamed_addr global i32 0
@global_var_1001d238.315 = local_unnamed_addr global i32 0
@global_var_10007894.316 = constant i32 939524096
@global_var_10007a34.317 = constant [3 x i8] c"8`\00"
@global_var_10007c0c.321 = constant [3 x i8] c"8`\00"
@global_var_1001d270.344 = global i32 0
@global_var_1001d16c.345 = local_unnamed_addr global i32 -559038737
@global_var_1000ca60.346 = constant [10 x i8] c"XOCR\0CZ[X\22\00"
@global_var_1000cb0c.347 = constant i32 1158890304
@global_var_1000cb24.348 = constant [9 x i8] c"CQQUMPF\22\00"
@global_var_10008b34.349 = constant [3 x i8] c"8`\00"
@global_var_1001d288.350 = local_unnamed_addr global i32 0
@global_var_1001d28c.351 = local_unnamed_addr global i32 0
@global_var_1000ca6c.352 = constant [3 x i8] c"\225\00"
@global_var_10008b58.353 = constant [3 x i8] c"8`\00"
@global_var_1001d290.354 = local_unnamed_addr global i32 0
@global_var_1001d294.355 = local_unnamed_addr global i32 0
@global_var_10008b7c.356 = constant [3 x i8] c"8`\00"
@global_var_1001d300.357 = local_unnamed_addr global i32 0
@global_var_1001d304.358 = local_unnamed_addr global i32 0
@global_var_1000ca70.359 = constant i32 -1715011584
@global_var_10008ba0.360 = constant [3 x i8] c"8`\00"
@global_var_1001d308.361 = local_unnamed_addr global i32 0
@global_var_1001d30c.362 = local_unnamed_addr global i32 0
@global_var_1000ca74.363 = constant i32 1313558870
@global_var_10008bc8.364 = constant [3 x i8] c"8`\00"
@global_var_1001d280.365 = local_unnamed_addr global i32 0
@global_var_1001d284.366 = local_unnamed_addr global i32 0
@global_var_1000ca84.367 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_10008bf0.368 = constant [3 x i8] c"8`\00"
@global_var_1001d2a0.369 = local_unnamed_addr global i32 0
@global_var_1000ca9c.370 = constant [15 x i8] c"\0DRPMA\0DLGV\0DVAR\22\00"
@global_var_1001d2a4.371 = local_unnamed_addr global i32 0
@global_var_1000ca8c.372 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_10008c18.373 = constant [3 x i8] c"8`\00"
@global_var_1001d2a8.374 = local_unnamed_addr global i32 0
@global_var_1001d2ac.375 = local_unnamed_addr global i32 0
@global_var_1000ca94.376 = constant [5 x i8] c"\0DDF\22\00"
@global_var_10008c40.377 = constant i32 939524100
@global_var_1001d2b4.378 = local_unnamed_addr global i32 0
@global_var_1001d2b0.379 = local_unnamed_addr global i32 0
@global_var_10008c64.380 = constant [3 x i8] c"8`\00"
@global_var_1001d2b8.381 = local_unnamed_addr global i32 0
@global_var_1001d2bc.382 = local_unnamed_addr global i32 0
@global_var_1000caac.383 = constant [7 x i8] c"\0DOCRQ\22\00"
@global_var_10008c88.384 = constant [3 x i8] c"8`\00"
@global_var_1001d2c0.385 = local_unnamed_addr global i32 0
@global_var_1000cb30.386 = constant [15 x i8] c"\0DFGT\0DUCVAJFME\22\00"
@global_var_1001d2c4.387 = local_unnamed_addr global i32 0
@global_var_1000cab4.388 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_10008cb0.389 = constant [3 x i8] c"8`\00"
@global_var_1001d2c8.390 = local_unnamed_addr global i32 0
@global_var_1001d2cc.391 = local_unnamed_addr global i32 0
@global_var_1000cac0.392 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_10008cd8.393 = constant [3 x i8] c"8`\00"
@global_var_1001d2d0.394 = local_unnamed_addr global i32 0
@global_var_1000cb40.395 = constant [20 x i8] c"\0DFGT\0DOKQA\0DUCVAJFME\22\00"
@global_var_1001d2d4.396 = local_unnamed_addr global i32 0
@global_var_1000cac8.397 = constant [17 x i8] c"\0DRPMA\0DLGV\0DPMWVG\22\00"
@global_var_10008d00.398 = constant [3 x i8] c"8`\00"
@global_var_1001d2d8.399 = local_unnamed_addr global i32 0
@global_var_1001d2dc.400 = local_unnamed_addr global i32 0
@global_var_1000cadc.401 = constant [15 x i8] c"\0DRPMA\0DARWKLDM\22\00"
@global_var_10008d24.402 = constant [3 x i8] c"8`\00"
@global_var_1001d2e0.403 = local_unnamed_addr global i32 0
@global_var_1001d2e4.404 = local_unnamed_addr global i32 0
@global_var_1000caec.405 = constant [10 x i8] c"`memokrq\22\00"
@global_var_10008d48.406 = constant [3 x i8] c"8`\00"
@global_var_1001d2e8.407 = local_unnamed_addr global i32 0
@global_var_1001d2ec.408 = local_unnamed_addr global i32 0
@global_var_1000caf8.409 = constant [20 x i8] c"\0DGVA\0DPA\0CF\0DPA\0CNMACN\22\00"
@global_var_10008d6c.410 = constant [3 x i8] c"8`\00"
@global_var_1001d2f0.411 = local_unnamed_addr global i32 0
@global_var_1001d2f4.412 = local_unnamed_addr global i32 0
@global_var_10008d8c.413 = constant [3 x i8] c"8`\00"
@global_var_1001d2f8.414 = local_unnamed_addr global i32 0
@global_var_1001d2fc.415 = local_unnamed_addr global i32 0
@global_var_10008dac.416 = constant [3 x i8] c"8`\00"
@global_var_10008dcc.417 = constant [3 x i8] c"8`\00"
@global_var_10008dec.418 = constant [3 x i8] c"8`\00"
@global_var_1001d310.419 = local_unnamed_addr global i32 0
@global_var_1001d314.420 = local_unnamed_addr global i32 0
@global_var_1000cb54.421 = constant i32 222709588
@global_var_10008e10.422 = constant [3 x i8] c"8`\00"
@global_var_1001d318.423 = local_unnamed_addr global i32 0
@global_var_1001d31c.424 = local_unnamed_addr global i32 0
@global_var_1000cb6c.425 = constant i32 222709588
@global_var_10008e34.426 = constant [3 x i8] c"8`\00"
@global_var_1001d320.427 = local_unnamed_addr global i32 0
@global_var_1001d324.428 = local_unnamed_addr global i32 0
@global_var_1000cb84.429 = constant [15 x i8] c"\0DFGT\0DLGVQNKLI\22\00"
@global_var_10008e58.430 = constant [3 x i8] c"8`\00"
@global_var_1001d328.431 = local_unnamed_addr global i32 0
@global_var_1001d32c.432 = local_unnamed_addr global i32 0
@global_var_1000cb94.433 = constant i32 1885827693
@global_var_10008e7c.434 = constant i32 939524109
@global_var_1000cba4.435 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_10008ea8.436 = constant [3 x i8] c"8`\00"
@global_var_1000cbb0.437 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_10008ecc.438 = constant [3 x i8] c"8`\00"
@global_var_1000cbbc.439 = constant i32 2119833370
@global_var_10008ef0.440 = constant i32 939524129
@global_var_1000cbe0.441 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_10008f18.442 = constant [3 x i8] c"8`\00"
@global_var_1000cbec.443 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_10008f3c.444 = constant i32 939524107
@global_var_10008f60.445 = constant [3 x i8] c"8`\00"
@global_var_1000cbf8.446 = constant [11 x i8] c"FTPjGNRGP\22\00"
@global_var_10008f84.447 = constant [3 x i8] c"8`\00"
@global_var_1000cc04.448 = constant [7 x i8] c"QJGNN\22\00"
@global_var_10008fa8.449 = constant [3 x i8] c"8`\00"
@global_var_1000cc0c.450 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_10008fcc.451 = constant [3 x i8] c"8`\00"
@global_var_1000cc14.452 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_10008ff0.453 = constant [3 x i8] c"8`\00"
@global_var_1000cc1c.454 = constant [4 x i8] c"QJ\22\00"
@global_var_10009014.455 = constant i32 939524099
@global_var_1000cc20.456 = constant i32 222317388
@global_var_1000903c.457 = constant [3 x i8] c"8`\00"
@global_var_1001d330.458 = local_unnamed_addr global i32 0
@global_var_1001d334.459 = local_unnamed_addr global i32 0
@global_var_1000cc34.460 = constant i32 1869312099
@global_var_10009060.461 = constant [3 x i8] c"8`\00"
@global_var_1001d338.462 = local_unnamed_addr global i32 0
@global_var_1001d33c.463 = local_unnamed_addr global i32 0
@global_var_1000cc50.464 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_10009084.465 = constant [3 x i8] c"8`\00"
@global_var_1001d340.466 = local_unnamed_addr global i32 0
@global_var_1001d344.467 = local_unnamed_addr global i32 0
@global_var_1000cc5c.468 = constant i32 222317388
@global_var_100090a8.469 = constant [3 x i8] c"8`\00"
@global_var_1001d348.470 = local_unnamed_addr global i32 0
@global_var_1001d34c.471 = local_unnamed_addr global i32 0
@global_var_1000cc70.472 = constant i32 222317388
@global_var_100090cc.473 = constant i32 939524118
@global_var_1001d354.474 = local_unnamed_addr global i32 0
@global_var_1001d350.475 = local_unnamed_addr global i32 0
@global_var_100090f0.476 = constant [3 x i8] c"8`\00"
@global_var_1001d368.477 = local_unnamed_addr global i32 0
@global_var_1001d36c.478 = local_unnamed_addr global i32 0
@global_var_1000cc88.479 = constant [6 x i8] c"MEKL\22\00"
@global_var_10009114.480 = constant [3 x i8] c"8`\00"
@global_var_1001d370.481 = local_unnamed_addr global i32 0
@global_var_1001d374.482 = local_unnamed_addr global i32 0
@global_var_1000cc90.483 = constant [7 x i8] c"GLVGP\22\00"
@global_var_10009138.484 = constant [3 x i8] c"8`\00"
@global_var_1001d378.485 = local_unnamed_addr global i32 0
@global_var_1001d37c.486 = local_unnamed_addr global i32 0
@global_var_1000cc98.487 = constant i32 1987136855
@global_var_1000915c.488 = constant i32 939524117
@global_var_1001d35c.489 = local_unnamed_addr global i32 0
@global_var_1001d358.490 = local_unnamed_addr global i32 0
@global_var_1000ccb0.491 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_10009184.492 = constant i32 939524113
@global_var_1001d364.493 = local_unnamed_addr global i32 0
@global_var_1001d360.494 = local_unnamed_addr global i32 0
@global_var_1000ccc4.495 = constant i32 1279479623
@global_var_100091ac.496 = constant i32 939524108
@global_var_100091d0.497 = constant [3 x i8] c"8`\00"
@global_var_100091f0.498 = constant [3 x i8] c"8`\00"
@global_var_1001d3b8.499 = local_unnamed_addr global i32 0
@global_var_1001d3bc.500 = local_unnamed_addr global i32 0
@global_var_10009598.501 = constant i32 939524096
@global_var_100098e0.502 = constant i32 1207959564
@global_var_10009dbc.503 = constant i32 939524118
@global_var_1000b4e0.504 = constant [3 x i8] c"8`\00"
@global_var_10009f14.505 = constant i32 939524105
@global_var_10009f30.506 = constant i32 939589631
@global_var_1000a058.507 = constant i32 1207959797
@global_var_1000a05c.508 = constant i32 939524108
@global_var_1001d1dc.509 = global i32 0
@global_var_1000a7d4.510 = constant i32 939524118
@global_var_1000a85c.511 = constant i32 939524118
@global_var_1001d410.512 = global i32 0
@global_var_1001d248.513 = global i32 0
@global_var_1001d170 = external global i32
@global_var_1000cde0.515 = constant i32 33554944
@global_var_1001d1cc.516 = local_unnamed_addr global i32 0
@global_var_1001d490.517 = global i32 0
@global_var_1000aab8.518 = constant i32 939524108
@global_var_1000ab0c.519 = constant i32 939524108
@global_var_1000abc0.520 = constant [3 x i8] c"8`\00"
@global_var_1000ac6c.521 = constant [3 x i8] c"8`\00"
@global_var_1000af94.522 = constant i32 1207959640
@global_var_1000afd0.523 = constant i32 1207959580
@global_var_1001d17c.524 = local_unnamed_addr global i32* @global_var_1000cde0.515
@global_var_1000b1c4.525 = constant i32 939524130
@global_var_1001d130.526 = global i32 0
@global_var_1001d1c0.527 = local_unnamed_addr global i32 0
@global_var_1000b258.528 = constant i32 1207960053
@global_var_1000b25c.529 = constant [3 x i8] c"= \00"
@global_var_1001d000.530 = global i32 -1
@global_var_1001d1d0.531 = local_unnamed_addr global i32 0
@global_var_1001d1d4.532 = local_unnamed_addr global i32 0
@global_var_1000ccd4.533 = constant [10 x i8] c"/dev/null\00"
@global_var_1001d1d8.534 = local_unnamed_addr global i32 0
@global_var_1001d1c4.536 = local_unnamed_addr global i32 0
@global_var_1001d1c8.537 = local_unnamed_addr global i32 0
@global_var_1000b7f8.538 = constant i32 939524096
@global_var_1000ba84.540 = constant i32 939524118
@global_var_1000bc80.541 = constant i32 939589631
@global_var_1001d1f0.542 = local_unnamed_addr global i32 0
@global_var_1001d148.543 = global i32 0
@global_var_1000c1a4.544 = constant i32 939524129
@global_var_1001d1e4.545 = local_unnamed_addr global i32 0
@global_var_1000c218.546 = constant [3 x i8] c"8`\00"
@global_var_1000c250.547 = constant i32 939524129
@global_var_1001d1e8.548 = local_unnamed_addr global i32 0
@global_var_1001d1ec.549 = local_unnamed_addr global i32 0
@global_var_1001d004.550 = global i32 0
@global_var_1001d1f4.2 = local_unnamed_addr global i8 0
@global_var_1001d180.9 = local_unnamed_addr global i8 0
@global_var_1001d181.11 = global i8 0
@global_var_1001d020.76 = local_unnamed_addr global i8 1
@global_var_1001d19c.102 = local_unnamed_addr global i8 0
@global_var_1001d1a8.127 = global i16 0
@global_var_1001d236.140 = local_unnamed_addr global i16 0
@global_var_1000c4b0.318 = constant i8 19
@global_var_1000c4b1.319 = constant i8 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000c3d4(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001d1f4.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001d01c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001d01c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001d01c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001d1f4.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001d1f4.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268554256 to i32*), align 16
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268554256
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_1000b5cc(i32 268456448, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268485696, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000238:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10000244 = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10000244)
  %v1_10000248 = add i32 %tmp, 4
  %v2_10000248 = inttoptr i32 %v1_10000248 to i8*
  %v3_10000248 = load i8, i8* %v2_10000248, align 1
  %v4_10000248 = zext i8 %v3_10000248 to i32
  %v4_10000250 = icmp eq i32 %v4_10000248, %arg3
  br i1 %v4_10000250, label %dec_label_pc_10000278, label %dec_label_pc_1000026c.preheader

dec_label_pc_1000026c.preheader:                  ; preds = %dec_label_pc_10000238
  %v0_10000270.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000026c

dec_label_pc_1000025c:                            ; preds = %dec_label_pc_1000026c
  %v1_1000025c = add i32 %v0_1000025c.in, 12
  %v2_1000025c = inttoptr i32 %v1_1000025c to i8*
  %v3_1000025c = load i8, i8* %v2_1000025c, align 1
  %v4_1000025c = zext i8 %v3_1000025c to i32
  %v4_10000264 = icmp eq i32 %v4_1000025c, %arg3
  br i1 %v4_10000264, label %dec_label_pc_10000278, label %dec_label_pc_1000026c

dec_label_pc_1000026c:                            ; preds = %dec_label_pc_1000026c.preheader, %dec_label_pc_1000025c
  %v0_10000270 = phi i32 [ %v0_10000270.pre, %dec_label_pc_1000026c.preheader ], [ %v1_10000270, %dec_label_pc_1000025c ]
  %v0_1000025c.in = phi i32 [ %tmp, %dec_label_pc_1000026c.preheader ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v0_1000025c = add i32 %v0_1000025c.in, 8
  %v1_10000270 = add i32 %v0_10000270, -1
  store i32 %v1_10000270, i32* %ctr.global-to-local, align 4
  %v2_10000270 = icmp eq i32 %v1_10000270, 0
  br i1 %v2_10000270, label %dec_label_pc_10000274, label %dec_label_pc_1000025c

dec_label_pc_10000274:                            ; preds = %dec_label_pc_1000026c
  ret i32 %arg4

dec_label_pc_10000278:                            ; preds = %dec_label_pc_1000025c, %dec_label_pc_10000238
  %v0_10000278 = phi i32 [ %tmp, %dec_label_pc_10000238 ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v1_10000278 = inttoptr i32 %v0_10000278 to i32*
  %v2_10000278 = load i32, i32* %v1_10000278, align 4
  ret i32 %v2_10000278

; uselistorder directives
  uselistorder i32 %v1_10000270, { 2, 1, 0 }
  uselistorder i32 %v0_1000025c.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000026c, { 1, 0 }
}

define i32 @function_10000280(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000280:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100002c4, label %dec_label_pc_10000298

dec_label_pc_10000298:                            ; preds = %dec_label_pc_10000280
  %v0_10000298 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000298 = add i32 %v0_10000298, 4
  %v2_10000298 = inttoptr i32 %v1_10000298 to i8*
  %v3_10000298 = load i8, i8* %v2_10000298, align 1
  %v4_10000298 = zext i8 %v3_10000298 to i32
  %v4_100002a0 = icmp eq i32 %v4_10000298, %arg3
  br i1 %v4_100002a0, label %dec_label_pc_100002d8, label %dec_label_pc_100002bc

dec_label_pc_100002ac:                            ; preds = %dec_label_pc_100002bc
  %v1_100002ac = add i32 %v0_100002ac.in, 12
  %v2_100002ac = inttoptr i32 %v1_100002ac to i8*
  %v3_100002ac = load i8, i8* %v2_100002ac, align 1
  %v4_100002ac = zext i8 %v3_100002ac to i32
  %v4_100002b4 = icmp eq i32 %v4_100002ac, %arg3
  br i1 %v4_100002b4, label %dec_label_pc_100002d8, label %dec_label_pc_100002bc

dec_label_pc_100002bc:                            ; preds = %dec_label_pc_10000298, %dec_label_pc_100002ac
  %v0_100002c0 = phi i32 [ %v1_100002c0, %dec_label_pc_100002ac ], [ %arg1, %dec_label_pc_10000298 ]
  %v0_100002ac.in = phi i32 [ %v0_100002ac, %dec_label_pc_100002ac ], [ %v0_10000298, %dec_label_pc_10000298 ]
  %v0_100002ac = add i32 %v0_100002ac.in, 8
  store i32 %v0_100002ac, i32* %r4.global-to-local, align 4
  %v1_100002c0 = add i32 %v0_100002c0, -1
  %v2_100002c0 = icmp eq i32 %v1_100002c0, 0
  br i1 %v2_100002c0, label %dec_label_pc_100002c4, label %dec_label_pc_100002ac

dec_label_pc_100002c4:                            ; preds = %dec_label_pc_100002bc, %dec_label_pc_100002d8, %dec_label_pc_10000280
  ret i32 %arg4

dec_label_pc_100002d8:                            ; preds = %dec_label_pc_100002ac, %dec_label_pc_10000298
  %v0_100002d8 = phi i32 [ %v0_10000298, %dec_label_pc_10000298 ], [ %v0_100002ac, %dec_label_pc_100002ac ]
  %v1_100002d8 = inttoptr i32 %v0_100002d8 to i32*
  %v2_100002d8 = load i32, i32* %v1_100002d8, align 4
  %v3_100002dc = icmp eq i32 %v2_100002d8, 0
  br i1 %v3_100002dc, label %dec_label_pc_100002c4, label %dec_label_pc_100002e4

dec_label_pc_100002e4:                            ; preds = %dec_label_pc_100002d8
  store i32 268436200, i32* @lr, align 4
  %v1_100002e4 = call i32 @function_1000a4e4(i32 %v2_100002d8)
  ret i32 %v1_100002e4

; uselistorder directives
  uselistorder i32 %v1_100002c0, { 1, 0 }
  uselistorder i32 %v0_100002ac, { 1, 0, 2 }
  uselistorder i32 %v0_100002ac.in, { 1, 0 }
  uselistorder i32 %v0_10000298, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100002c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100002bc, { 1, 0 }
}

define i32 @function_10000300(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000300:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_10000344, label %dec_label_pc_10000318

dec_label_pc_10000318:                            ; preds = %dec_label_pc_10000300
  %v0_10000318 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000318 = add i32 %v0_10000318, 4
  %v2_10000318 = inttoptr i32 %v1_10000318 to i8*
  %v3_10000318 = load i8, i8* %v2_10000318, align 1
  %v4_10000318 = zext i8 %v3_10000318 to i32
  %v4_10000320 = icmp eq i32 %v4_10000318, %arg3
  br i1 %v4_10000320, label %dec_label_pc_10000358, label %dec_label_pc_1000033c

dec_label_pc_1000032c:                            ; preds = %dec_label_pc_1000033c
  %v1_1000032c = add i32 %v0_1000032c.in, 12
  %v2_1000032c = inttoptr i32 %v1_1000032c to i8*
  %v3_1000032c = load i8, i8* %v2_1000032c, align 1
  %v4_1000032c = zext i8 %v3_1000032c to i32
  %v4_10000334 = icmp eq i32 %v4_1000032c, %arg3
  br i1 %v4_10000334, label %dec_label_pc_10000358, label %dec_label_pc_1000033c

dec_label_pc_1000033c:                            ; preds = %dec_label_pc_10000318, %dec_label_pc_1000032c
  %v0_10000340 = phi i32 [ %v1_10000340, %dec_label_pc_1000032c ], [ %arg1, %dec_label_pc_10000318 ]
  %v0_1000032c.in = phi i32 [ %v0_1000032c, %dec_label_pc_1000032c ], [ %v0_10000318, %dec_label_pc_10000318 ]
  %v0_1000032c = add i32 %v0_1000032c.in, 8
  store i32 %v0_1000032c, i32* %r4.global-to-local, align 4
  %v1_10000340 = add i32 %v0_10000340, -1
  %v2_10000340 = icmp eq i32 %v1_10000340, 0
  br i1 %v2_10000340, label %dec_label_pc_10000344, label %dec_label_pc_1000032c

dec_label_pc_10000344:                            ; preds = %dec_label_pc_1000033c, %dec_label_pc_10000358, %dec_label_pc_10000300
  ret i32 %arg4

dec_label_pc_10000358:                            ; preds = %dec_label_pc_1000032c, %dec_label_pc_10000318
  %v0_10000358 = phi i32 [ %v0_10000318, %dec_label_pc_10000318 ], [ %v0_1000032c, %dec_label_pc_1000032c ]
  %v1_10000358 = inttoptr i32 %v0_10000358 to i32*
  %v2_10000358 = load i32, i32* %v1_10000358, align 4
  store i32 %v2_10000358, i32* @r3, align 4
  %v3_1000035c = icmp eq i32 %v2_10000358, 0
  br i1 %v3_1000035c, label %dec_label_pc_10000344, label %dec_label_pc_10000364

dec_label_pc_10000364:                            ; preds = %dec_label_pc_10000358
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268436332, i32* @lr, align 4
  %v2_10000368 = call i32 @function_10009398(i32 %v2_10000358, i32 10)
  ret i32 %v2_10000368

; uselistorder directives
  uselistorder i32 %v1_10000340, { 1, 0 }
  uselistorder i32 %v0_1000032c, { 1, 0, 2 }
  uselistorder i32 %v0_1000032c.in, { 1, 0 }
  uselistorder i32 %v0_10000318, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10000344, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000033c, { 1, 0 }
}

define i32 @function_10000384(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000384:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10000384 = call i32 @__asm_mfcr()
  store i32 %v0_10000384, i32* %r3.global-to-local, align 4
  %v0_10000394 = load i32, i32* @r30, align 4
  %v0_100003c4 = load i32, i32* @r28, align 4
  %v0_100003c8 = load i32, i32* @r29, align 4
  %tmp30 = icmp ult i32 %arg2, 4
  br i1 %tmp30, label %dec_label_pc_100003e4, label %dec_label_pc_100003d8

dec_label_pc_100003d8:                            ; preds = %dec_label_pc_10000384
  %v3_100003d8 = icmp eq i32 %arg2, 4
  %v1_100003dc = inttoptr i32 %v0_10000384 to i32*
  %v2_100003dc = load i32, i32* %v1_100003dc, align 4
  store i32 %v2_100003dc, i32* %r25.global-to-local, align 4
  br i1 %v3_100003d8, label %dec_label_pc_100003e4, label %dec_label_pc_1000042c

dec_label_pc_100003e4:                            ; preds = %dec_label_pc_100003d8, %dec_label_pc_100005c8, %dec_label_pc_10000444, %dec_label_pc_10000438, %dec_label_pc_1000042c, %dec_label_pc_10000384, %dec_label_pc_100005fc
  %v1_100003f8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10000384)
  store i32 %v0_100003c4, i32* @r28, align 4
  store i32 %v0_100003c8, i32* @r29, align 4
  store i32 %v0_10000394, i32* @r30, align 4
  %v0_10000428 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000428

dec_label_pc_1000042c:                            ; preds = %dec_label_pc_100003d8
  %v3_1000042c = icmp eq i32 %arg2, 5
  %v1_10000430 = add i32 %v0_10000384, 4
  %v2_10000430 = inttoptr i32 %v1_10000430 to i8*
  %v3_10000430 = load i8, i8* %v2_10000430, align 1
  %v4_10000430 = zext i8 %v3_10000430 to i32
  store i32 %v4_10000430, i32* %r22.global-to-local, align 4
  br i1 %v3_1000042c, label %dec_label_pc_100003e4, label %dec_label_pc_10000438

dec_label_pc_10000438:                            ; preds = %dec_label_pc_1000042c
  %v1_10000438 = add i32 %v0_10000384, 5
  %v2_10000438 = inttoptr i32 %v1_10000438 to i8*
  %v3_10000438 = load i8, i8* %v2_10000438, align 1
  %v4_10000438 = zext i8 %v3_10000438 to i32
  store i32 %v4_10000438, i32* %r26.global-to-local, align 4
  %v3_1000043c = icmp eq i8 %v3_10000438, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000043c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000043c, label %dec_label_pc_100003e4, label %dec_label_pc_10000444

dec_label_pc_10000444:                            ; preds = %dec_label_pc_10000438
  %v1_10000444 = mul nuw nsw i32 %v4_10000438, 5
  store i32 %v1_10000444, i32* %r27.global-to-local, align 4
  %v1_10000448 = add i32 %arg2, -6
  store i32 %v1_10000448, i32* @r28, align 4
  %v2_1000044c = icmp ult i32 %v1_10000448, %v1_10000444
  br i1 %v2_1000044c, label %dec_label_pc_100003e4, label %dec_label_pc_10000454

dec_label_pc_10000454:                            ; preds = %dec_label_pc_10000444
  store i32 %v4_10000438, i32* %r3.global-to-local, align 4
  store i32 24, i32* %r4.global-to-local, align 4
  store i32 268436576, i32* @lr, align 4
  %v2_1000045c = call i32 @function_1000aadc(i32 %v4_10000438, i32 24)
  store i32 %v2_1000045c, i32* %r3.global-to-local, align 4
  %v0_10000460 = load i32, i32* @r31, align 4
  %v1_10000460 = add i32 %v0_10000460, 6
  store i32 %v1_10000460, i32* @r29, align 4
  store i32 %v2_1000045c, i32* %r20.global-to-local, align 4
  %v0_10000468 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000468 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000468 = or i1 %v0_10000468, %v1_10000468
  br i1 %v2_10000468, label %dec_label_pc_100004c4thread-pre-split, label %dec_label_pc_1000046c

dec_label_pc_1000046c:                            ; preds = %dec_label_pc_10000454
  %v1_1000046c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v2_1000045c, i32* %r11.global-to-local, align 4
  %tmp35 = mul i32 %v1_1000046c, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp35, i32* %r9.global-to-local, align 4
  store i32 %tmp35, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10000494

dec_label_pc_10000494:                            ; preds = %dec_label_pc_10000494.dec_label_pc_10000494_crit_edge, %dec_label_pc_1000046c
  %v2_100004a0 = phi i32 [ %v1_100004b0, %dec_label_pc_10000494.dec_label_pc_10000494_crit_edge ], [ %v2_1000045c, %dec_label_pc_1000046c ]
  %v0_1000049c = phi i32 [ %v0_10000494.pre, %dec_label_pc_10000494.dec_label_pc_10000494_crit_edge ], [ %v1_10000460, %dec_label_pc_1000046c ]
  %v1_10000494 = add i32 %v0_1000049c, 4
  %v2_10000494 = inttoptr i32 %v1_10000494 to i8*
  %v3_10000494 = load i8, i8* %v2_10000494, align 1
  %v1_10000498 = inttoptr i32 %v0_1000049c to i32*
  %v2_10000498 = load i32, i32* %v1_10000498, align 4
  store i32 %v2_10000498, i32* %r9.global-to-local, align 4
  %v1_1000049c = add i32 %v0_1000049c, 5
  store i32 %v1_1000049c, i32* @r29, align 4
  %v3_100004a0 = add i32 %v2_100004a0, 20
  %v4_100004a0 = inttoptr i32 %v3_100004a0 to i8*
  store i8 %v3_10000494, i8* %v4_100004a0, align 1
  %v0_100004a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004a4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004a4 = add i32 %v1_100004a4, 4
  %v3_100004a4 = inttoptr i32 %v2_100004a4 to i32*
  store i32 %v0_100004a4, i32* %v3_100004a4, align 4
  %v0_100004a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004a8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004a8 = add i32 %v1_100004a8, 16
  %v3_100004a8 = inttoptr i32 %v2_100004a8 to i32*
  store i32 %v0_100004a8, i32* %v3_100004a8, align 4
  %v0_100004ac = load i32, i32* %r10.global-to-local, align 4
  %v1_100004ac = trunc i32 %v0_100004ac to i16
  %v2_100004ac = load i32, i32* %r11.global-to-local, align 4
  %v3_100004ac = inttoptr i32 %v2_100004ac to i16*
  store i16 %v1_100004ac, i16* %v3_100004ac, align 2
  %v0_100004b0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004b0 = add i32 %v0_100004b0, 24
  store i32 %v1_100004b0, i32* %r11.global-to-local, align 4
  %v0_100004b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100004b4 = add i32 %v0_100004b4, -1
  store i32 %v1_100004b4, i32* %ctr.global-to-local, align 4
  %v2_100004b4 = icmp eq i32 %v1_100004b4, 0
  br i1 %v2_100004b4, label %dec_label_pc_100004b8, label %dec_label_pc_10000494.dec_label_pc_10000494_crit_edge

dec_label_pc_10000494.dec_label_pc_10000494_crit_edge: ; preds = %dec_label_pc_10000494
  %v0_10000494.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10000494

dec_label_pc_100004b8:                            ; preds = %dec_label_pc_10000494
  %v0_100004b8 = load i32, i32* %r26.global-to-local, align 4
  %v1_100004b8 = mul i32 %v0_100004b8, -5
  %v0_100004bc = load i32, i32* @r30, align 4
  %v2_100004bc = add i32 %v0_100004bc, %v1_100004b8
  store i32 %v2_100004bc, i32* %r9.global-to-local, align 4
  %v1_100004c0 = add i32 %v2_100004bc, -6
  store i32 %v1_100004c0, i32* @r28, align 4
  br label %dec_label_pc_100004c4

dec_label_pc_100004c4thread-pre-split:            ; preds = %dec_label_pc_10000454
  %v0_100004c4.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_100004c4

dec_label_pc_100004c4:                            ; preds = %dec_label_pc_100004c4thread-pre-split, %dec_label_pc_100004b8
  %v0_100004c4 = phi i32 [ %v0_100004c4.pr, %dec_label_pc_100004c4thread-pre-split ], [ %v1_100004c0, %dec_label_pc_100004b8 ]
  %v3_100004c4 = icmp eq i32 %v0_100004c4, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_100004c4, label %dec_label_pc_100005b8, label %dec_label_pc_100004d0

dec_label_pc_100004d0:                            ; preds = %dec_label_pc_100004c4
  %v0_100004d0 = load i32, i32* @r29, align 4
  %v1_100004d0 = inttoptr i32 %v0_100004d0 to i8*
  %v2_100004d0 = load i8, i8* %v1_100004d0, align 1
  %v3_100004d0 = zext i8 %v2_100004d0 to i32
  store i32 %v3_100004d0, i32* @r23, align 4
  %v3_100004d4 = icmp eq i8 %v2_100004d0, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100004d4, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100004d4, label %dec_label_pc_100005a0, label %dec_label_pc_100004dc

dec_label_pc_100004dc:                            ; preds = %dec_label_pc_100004d0
  store i32 %v3_100004d0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 268436712, i32* @lr, align 4
  %v2_100004e4 = call i32 @function_1000aadc(i32 %v3_100004d0, i32 8)
  store i32 %v2_100004e4, i32* %r3.global-to-local, align 4
  store i32 %v2_100004e4, i32* %r21.global-to-local, align 4
  %v0_100004ec = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004ec = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004ec = or i1 %v0_100004ec, %v1_100004ec
  br i1 %v2_100004ec, label %dec_label_pc_100005a0, label %dec_label_pc_100004f0

dec_label_pc_100004f0:                            ; preds = %dec_label_pc_100004dc
  %v0_100004f0 = load i32, i32* @r28, align 4
  %v1_100004f0 = add i32 %v0_100004f0, -1
  %v4_100004f0 = icmp eq i32 %v1_100004f0, 0
  store i32 %v1_100004f0, i32* %ctr.global-to-local, align 4
  br i1 %v4_100004f0, label %dec_label_pc_100005b8, label %dec_label_pc_100004fc

dec_label_pc_100004fc:                            ; preds = %dec_label_pc_100004f0
  %v0_100004fc = load i32, i32* @r29, align 4
  %v1_100004fc = add i32 %v0_100004fc, 1
  %v2_100004fc = inttoptr i32 %v1_100004fc to i8*
  %v3_100004fc = load i8, i8* %v2_100004fc, align 1
  store i32 %v1_100004fc, i32* %r9.global-to-local, align 4
  %v3_10000504 = add i32 %v2_100004e4, 4
  %v4_10000504 = inttoptr i32 %v3_10000504 to i8*
  store i8 %v3_100004fc, i8* %v4_10000504, align 1
  %v0_10000508 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000508 = add i32 %v0_10000508, -1
  store i32 %v1_10000508, i32* %ctr.global-to-local, align 4
  %v2_10000508 = icmp eq i32 %v1_10000508, 0
  br i1 %v2_10000508, label %dec_label_pc_100005b8, label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_100004fc
  store i32 %v1_10000508, i32* %r11.global-to-local, align 4
  %v0_10000510 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000510 = add i32 %v0_10000510, 1
  %v2_10000510 = inttoptr i32 %v1_10000510 to i8*
  %v3_10000510 = load i8, i8* %v2_10000510, align 1
  %v4_10000510 = zext i8 %v3_10000510 to i32
  store i32 %v1_10000510, i32* %r4.global-to-local, align 4
  %v1_10000518 = add i32 %v0_10000508, -2
  store i32 %v1_10000518, i32* @r28, align 4
  %v2_1000051c = icmp slt i32 %v1_10000518, %v4_10000510
  br i1 %v2_1000051c, label %dec_label_pc_100005b8, label %dec_label_pc_10000524

dec_label_pc_10000524:                            ; preds = %dec_label_pc_1000050c
  %v1_10000524 = add i32 %v0_10000510, 2
  store i32 %v1_10000524, i32* @r29, align 4
  %v0_10000528 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000528 = add i32 %v0_10000528, 8
  store i32 %v1_10000528, i32* %r24.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10000578

dec_label_pc_10000538:                            ; preds = %dec_label_pc_10000578
  %v0_10000538 = load i32, i32* @r31, align 4
  %v1_10000538 = load i32, i32* @r28, align 4
  %v2_10000538 = sub i32 %v1_10000538, %v0_10000538
  store i32 %v2_10000538, i32* %r9.global-to-local, align 4
  %v5_10000538 = icmp eq i32 %v2_10000538, 0
  br i1 %v5_10000538, label %dec_label_pc_100005b8, label %dec_label_pc_10000540

dec_label_pc_10000540:                            ; preds = %dec_label_pc_10000538
  %v1_10000540 = load i32, i32* @r29, align 4
  %v2_10000540 = add i32 %v1_10000540, %v0_10000538
  %v3_10000540 = inttoptr i32 %v2_10000540 to i8*
  %v4_10000540 = load i8, i8* %v3_10000540, align 1
  %v0_10000544 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v2_10000540, i32* %r4.global-to-local, align 4
  %v3_1000054c = add i32 %v0_10000544, 4
  %v4_1000054c = inttoptr i32 %v3_1000054c to i8*
  store i8 %v4_10000540, i8* %v4_1000054c, align 1
  %v0_10000550 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000550 = add i32 %v0_10000550, -1
  %v4_10000550 = icmp eq i32 %v1_10000550, 0
  br i1 %v4_10000550, label %dec_label_pc_100005b8, label %dec_label_pc_10000558

dec_label_pc_10000558:                            ; preds = %dec_label_pc_10000540
  %v0_10000558 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000558 = add i32 %v0_10000558, 1
  %v2_10000558 = inttoptr i32 %v1_10000558 to i8*
  %v3_10000558 = load i8, i8* %v2_10000558, align 1
  %v4_10000558 = zext i8 %v3_10000558 to i32
  store i32 %v1_10000550, i32* %r9.global-to-local, align 4
  %v1_10000560 = add i32 %v0_10000550, -2
  store i32 %v1_10000560, i32* @r28, align 4
  store i32 %v1_10000558, i32* %r4.global-to-local, align 4
  %v2_10000568 = icmp slt i32 %v1_10000560, %v4_10000558
  %v0_1000056c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000056c = add i32 %v0_1000056c, 8
  store i32 %v1_1000056c, i32* %r24.global-to-local, align 4
  br i1 %v2_10000568, label %dec_label_pc_100005b8, label %dec_label_pc_10000574

dec_label_pc_10000574:                            ; preds = %dec_label_pc_10000558
  %v1_10000574 = add i32 %v0_10000558, 2
  store i32 %v1_10000574, i32* @r29, align 4
  br label %dec_label_pc_10000578

dec_label_pc_10000578:                            ; preds = %dec_label_pc_10000524, %dec_label_pc_10000574
  %v0_1000057c = phi i32 [ %v4_10000510, %dec_label_pc_10000524 ], [ %v4_10000558, %dec_label_pc_10000574 ]
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_1000057c = add nuw nsw i32 %v0_1000057c, 1
  store i32 %v1_1000057c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000584.7 to i32), i32* @lr, align 4
  %v2_10000580 = call i32 @function_1000aadc(i32 %v1_1000057c, i32 1)
  store i32 %v2_10000580, i32* %r3.global-to-local, align 4
  %v0_10000584 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000584 = add i32 %v0_10000584, 1
  store i32 %v1_10000584, i32* %r27.global-to-local, align 4
  %v1_10000588 = load i32, i32* @r30, align 4
  %v2_10000588 = inttoptr i32 %v1_10000588 to i32*
  store i32 %v2_10000580, i32* %v2_10000588, align 4
  %v0_1000058c = load i32, i32* @r29, align 4
  store i32 %v0_1000058c, i32* %r4.global-to-local, align 4
  %v0_10000590 = load i32, i32* @r31, align 4
  store i32 268436888, i32* @lr, align 4
  %v3_10000594 = call i32 @function_100092f4(i32 %v2_10000580, i32 %v0_1000058c, i32 %v0_10000590)
  store i32 %v3_10000594, i32* %r3.global-to-local, align 4
  %v0_10000598 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000598 = load i32, i32* @r23, align 4
  %v4_10000598 = icmp eq i32 %v0_10000598, %v1_10000598
  br i1 %v4_10000598, label %dec_label_pc_100005a0, label %dec_label_pc_10000538

dec_label_pc_100005a0:                            ; preds = %dec_label_pc_10000578, %dec_label_pc_100004dc, %dec_label_pc_100004d0
  %v0_100005a0 = call i32 @function_1000a14c()
  store i32 %v0_100005a0, i32* %r3.global-to-local, align 4
  %v2_100005a8 = inttoptr i32 %v0_100005a0 to i32*
  store i32 0, i32* %v2_100005a8, align 4
  store i32 268436912, i32* @lr, align 4
  %v0_100005ac = call i32 @function_10009a78()
  store i32 %v0_100005ac, i32* %r3.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_100005ac, 1
  br i1 %tmp32, label %dec_label_pc_10000608, label %dec_label_pc_100005b8

dec_label_pc_100005b8:                            ; preds = %dec_label_pc_10000558, %dec_label_pc_10000540, %dec_label_pc_10000538, %dec_label_pc_10000608, %dec_label_pc_100005a0, %dec_label_pc_1000050c, %dec_label_pc_100004fc, %dec_label_pc_100004f0, %dec_label_pc_100004c4
  %v0_100005b8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100005b8 = icmp eq i32 %v0_100005b8, 0
  br i1 %v3_100005b8, label %dec_label_pc_100005c8, label %dec_label_pc_100005c0

dec_label_pc_100005c0:                            ; preds = %dec_label_pc_100005b8
  store i32 %v0_100005b8, i32* @r3, align 4
  store i32 268436936, i32* @lr, align 4
  %v0_100005c4 = call i32 @function_1000ab4c()
  store i32 %v0_100005c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005c8

dec_label_pc_100005c8:                            ; preds = %dec_label_pc_100005b8, %dec_label_pc_100005c0
  %v0_100005c8 = load i32, i32* %r21.global-to-local, align 4
  %v3_100005c8 = icmp eq i32 %v0_100005c8, 0
  br i1 %v3_100005c8, label %dec_label_pc_100003e4, label %dec_label_pc_100005d0

dec_label_pc_100005d0:                            ; preds = %dec_label_pc_100005c8
  %v0_100005d0 = load i32, i32* @r23, align 4
  %tmp33 = icmp slt i32 %v0_100005d0, 1
  br i1 %tmp33, label %dec_label_pc_100005fc, label %dec_label_pc_100005d8

dec_label_pc_100005d8:                            ; preds = %dec_label_pc_100005d0
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100005dc

dec_label_pc_100005dc:                            ; preds = %dec_label_pc_100005f0, %dec_label_pc_100005d8
  %v0_100005f412 = phi i32 [ %v0_100005d0, %dec_label_pc_100005d8 ], [ %v0_100005f4, %dec_label_pc_100005f0 ]
  %v0_100005e0 = phi i32 [ %v0_100005c8, %dec_label_pc_100005d8 ], [ %v0_100005fc.pre, %dec_label_pc_100005f0 ]
  %v0_100005dc = phi i32 [ 0, %dec_label_pc_100005d8 ], [ %v1_100005f0, %dec_label_pc_100005f0 ]
  %v1_100005dc = mul i32 %v0_100005dc, 8
  %v2_100005e0 = add i32 %v1_100005dc, %v0_100005e0
  %v3_100005e0 = inttoptr i32 %v2_100005e0 to i32*
  %v4_100005e0 = load i32, i32* %v3_100005e0, align 4
  store i32 %v4_100005e0, i32* @r3, align 4
  %v3_100005e4 = icmp eq i32 %v4_100005e0, 0
  br i1 %v3_100005e4, label %dec_label_pc_100005f0, label %dec_label_pc_100005ec

dec_label_pc_100005ec:                            ; preds = %dec_label_pc_100005dc
  store i32 268436976, i32* @lr, align 4
  %v0_100005ec = call i32 @function_1000ab4c()
  store i32 %v0_100005ec, i32* %r3.global-to-local, align 4
  %v0_100005f0.pre = load i32, i32* @r31, align 4
  %v0_100005f4.pre = load i32, i32* @r23, align 4
  %v0_100005fc.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_100005f0

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005dc, %dec_label_pc_100005ec
  %v0_100005fc.pre = phi i32 [ %v0_100005e0, %dec_label_pc_100005dc ], [ %v0_100005fc.pre.pre, %dec_label_pc_100005ec ]
  %v0_100005f4 = phi i32 [ %v0_100005f412, %dec_label_pc_100005dc ], [ %v0_100005f4.pre, %dec_label_pc_100005ec ]
  %v0_100005f0 = phi i32 [ %v0_100005dc, %dec_label_pc_100005dc ], [ %v0_100005f0.pre, %dec_label_pc_100005ec ]
  %v1_100005f0 = add i32 %v0_100005f0, 1
  store i32 %v1_100005f0, i32* @r31, align 4
  %v4_100005f4 = icmp eq i32 %v0_100005f4, %v1_100005f0
  br i1 %v4_100005f4, label %dec_label_pc_100005fc, label %dec_label_pc_100005dc

dec_label_pc_100005fc:                            ; preds = %dec_label_pc_100005f0, %dec_label_pc_100005d0
  %v0_100005fc = phi i32 [ %v0_100005c8, %dec_label_pc_100005d0 ], [ %v0_100005fc.pre, %dec_label_pc_100005f0 ]
  store i32 %v0_100005fc, i32* @r3, align 4
  store i32 268436996, i32* @lr, align 4
  %v0_10000600 = call i32 @function_1000ab4c()
  store i32 %v0_10000600, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100003e4

dec_label_pc_10000608:                            ; preds = %dec_label_pc_100005a0
  %v3_10000608 = icmp eq i32 %v0_100005ac, -1
  br i1 %v3_10000608, label %dec_label_pc_100005b8, label %dec_label_pc_10000610

dec_label_pc_10000610:                            ; preds = %dec_label_pc_10000608
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10000614 = load i8, i8* @global_var_1001d180.9, align 1
  %v4_10000614 = zext i8 %v3_10000614 to i32
  %v3_10000618 = icmp eq i8 %v3_10000614, 0
  br i1 %v3_10000618, label %dec_label_pc_10000660, label %dec_label_pc_10000620

dec_label_pc_10000620:                            ; preds = %dec_label_pc_10000610
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v4_10000614, i32* %ctr.global-to-local, align 4
  %v3_10000628 = load i32, i32* @global_var_1001d184.10, align 4
  store i32 %v3_10000628, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10000630 = inttoptr i32 %v3_10000628 to i32*
  %v2_10000630 = load i32, i32* %v1_10000630, align 4
  store i32 %v2_10000630, i32* %r9.global-to-local, align 4
  %v1_10000634 = add i32 %v2_10000630, 4
  %v2_10000634 = inttoptr i32 %v1_10000634 to i8*
  %v3_10000634 = load i8, i8* %v2_10000634, align 1
  %v4_10000634 = zext i8 %v3_10000634 to i32
  %v1_10000638 = load i32, i32* %r22.global-to-local, align 4
  %v4_10000638 = icmp eq i32 %v4_10000634, %v1_10000638
  br i1 %v4_10000638, label %dec_label_pc_10000668, label %dec_label_pc_10000658

dec_label_pc_10000644:                            ; preds = %dec_label_pc_10000658
  %v1_10000644 = mul i32 %v1_10000658, 4
  store i32 %v1_10000644, i32* %r9.global-to-local, align 4
  %v2_10000648 = add i32 %v1_10000644, %v3_10000628
  %v3_10000648 = inttoptr i32 %v2_10000648 to i32*
  %v4_10000648 = load i32, i32* %v3_10000648, align 4
  store i32 %v4_10000648, i32* %r9.global-to-local, align 4
  %v1_1000064c = add i32 %v4_10000648, 4
  %v2_1000064c = inttoptr i32 %v1_1000064c to i8*
  %v3_1000064c = load i8, i8* %v2_1000064c, align 1
  %v4_1000064c = zext i8 %v3_1000064c to i32
  %v4_10000650 = icmp eq i32 %v4_1000064c, %v1_10000638
  br i1 %v4_10000650, label %dec_label_pc_10000668, label %dec_label_pc_10000658

dec_label_pc_10000658:                            ; preds = %dec_label_pc_10000620, %dec_label_pc_10000644
  %v0_1000065c = phi i32 [ %v1_1000065c, %dec_label_pc_10000644 ], [ %v4_10000614, %dec_label_pc_10000620 ]
  %v0_10000658 = phi i32 [ %v1_10000658, %dec_label_pc_10000644 ], [ 0, %dec_label_pc_10000620 ]
  %v1_10000658 = add i32 %v0_10000658, 1
  store i32 %v1_10000658, i32* %r11.global-to-local, align 4
  %v1_1000065c = add i32 %v0_1000065c, -1
  store i32 %v1_1000065c, i32* %ctr.global-to-local, align 4
  %v2_1000065c = icmp eq i32 %v1_1000065c, 0
  br i1 %v2_1000065c, label %dec_label_pc_10000660, label %dec_label_pc_10000644

dec_label_pc_10000660:                            ; preds = %dec_label_pc_10000658, %dec_label_pc_10000610, %dec_label_pc_10000668
  %v0_10000664 = call i32 @function_1000b1f4()
  store i32 %v0_10000664, i32* %r3.global-to-local, align 4
  %v0_10000668.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10000668

dec_label_pc_10000668:                            ; preds = %dec_label_pc_10000644, %dec_label_pc_10000620, %dec_label_pc_10000660
  %v0_10000668 = phi i32 [ %v2_10000630, %dec_label_pc_10000620 ], [ %v0_10000668.pre, %dec_label_pc_10000660 ], [ %v4_10000648, %dec_label_pc_10000644 ]
  %v1_10000668 = inttoptr i32 %v0_10000668 to i32*
  %v2_10000668 = load i32, i32* %v1_10000668, align 4
  store i32 %v2_10000668, i32* %r9.global-to-local, align 4
  %v0_1000066c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000066c, i32* %r3.global-to-local, align 4
  %v0_10000670 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10000670, i32* %r4.global-to-local, align 4
  store i32 %v2_10000668, i32* %ctr.global-to-local, align 4
  call void @__pseudo_call(i32 %v2_10000668)
  br label %dec_label_pc_10000660

; uselistorder directives
  uselistorder i32 %v2_10000668, { 1, 0, 2 }
  uselistorder i32 %v1_1000065c, { 2, 1, 0 }
  uselistorder i32 %v1_10000658, { 2, 0, 1 }
  uselistorder i32 %v1_10000644, { 1, 0 }
  uselistorder i32 %v1_100005f0, { 1, 2, 0 }
  uselistorder i32 %v0_100005f4, { 1, 0 }
  uselistorder i32 %v0_100005dc, { 1, 0 }
  uselistorder i32 %v4_10000558, { 1, 0 }
  uselistorder i32 %v1_10000508, { 0, 2, 1 }
  uselistorder i32 %v3_100004d0, { 1, 0, 2 }
  uselistorder i32 %v1_100004b4, { 1, 0 }
  uselistorder i32 %v1_100004b0, { 1, 0 }
  uselistorder i32 %v0_1000049c, { 0, 2, 1 }
  uselistorder i32 %tmp35, { 1, 0 }
  uselistorder i32 %v4_10000438, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10000384, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r4.global-to-local, { 1, 5, 6, 2, 3, 4, 7, 8, 9, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12, 13, 14, 16, 17, 15, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10000668, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000660, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000658, { 1, 0 }
  uselistorder label %dec_label_pc_100005f0, { 1, 0 }
  uselistorder label %dec_label_pc_100005c8, { 1, 0 }
  uselistorder label %dec_label_pc_100005b8, { 3, 4, 0, 1, 2, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10000578, { 1, 0 }
  uselistorder label %dec_label_pc_100003e4, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_1000068c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000068c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_10000690 = load i32, i32* @lr, align 4
  store i32 %v0_10000690, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_100006ac = load i32, i32* @r28, align 4
  store i32 268437176, i32* @lr, align 4
  %v2_100006b4 = call i32 @function_1000aadc(i32 1, i32 8)
  %v3_100006b8 = load i8, i8* @global_var_1001d180.9, align 1
  %v4_100006b8 = zext i8 %v3_100006b8 to i32
  store i32 %v4_100006b8, i32* %r4.global-to-local, align 4
  store i32 %v2_100006b4, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100006cc = load i32, i32* @global_var_1001d184.10, align 4
  %v2_100006d0 = inttoptr i32 %v2_100006b4 to i32*
  store i32 268446700, i32* %v2_100006d0, align 4
  %v0_100006d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100006d4 = mul i32 %v0_100006d4, 4
  store i32 %v1_100006d4, i32* %r4.global-to-local, align 4
  %v0_100006d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100006d8 = trunc i32 %v0_100006d8 to i8
  %v2_100006d8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100006d8 = add i32 %v2_100006d8, 4
  %v4_100006d8 = inttoptr i32 %v3_100006d8 to i8*
  store i8 %v1_100006d8, i8* %v4_100006d8, align 1
  %v0_100006dc = load i32, i32* %r4.global-to-local, align 4
  %v1_100006dc = add i32 %v0_100006dc, 4
  store i32 %v1_100006dc, i32* %r4.global-to-local, align 4
  store i32 268437220, i32* @lr, align 4
  %v3_100006e0 = call i32 @function_1000ac4c(i32 %v3_100006cc, i32 %v1_100006dc, i32 268446700)
  %v3_100006e4 = load i8, i8* @global_var_1001d180.9, align 1
  %v4_100006e4 = zext i8 %v3_100006e4 to i32
  store i32 %v3_100006e0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d181.11 to i32), i32* %r0.global-to-local, align 4
  %v1_100006f4 = mul nuw nsw i32 %v4_100006e4, 4
  %v0_100006f8 = load i32, i32* @r28, align 4
  %v3_100006f8 = add i32 %v1_100006f4, %v3_100006e0
  %v4_100006f8 = inttoptr i32 %v3_100006f8 to i32*
  store i32 %v0_100006f8, i32* %v4_100006f8, align 4
  %v0_10000700 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000700, i32* @global_var_1001d184.10, align 4
  %v0_10000704 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000704 = trunc i32 %v0_10000704 to i8
  store i8 %v1_10000704, i8* @global_var_1001d180.9, align 1
  store i32 268437260, i32* @lr, align 4
  %v2_10000708 = call i32 @function_1000aadc(i32 1, i32 8)
  %v3_1000070c = load i8, i8* @global_var_1001d180.9, align 1
  %v4_1000070c = zext i8 %v3_1000070c to i32
  store i32 %v4_1000070c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000708, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_10000720 = load i32, i32* @global_var_1001d184.10, align 4
  %v2_10000724 = inttoptr i32 %v2_10000708 to i32*
  store i32 268448004, i32* %v2_10000724, align 4
  %v0_10000728 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000728 = mul i32 %v0_10000728, 4
  store i32 %v1_10000728, i32* %r4.global-to-local, align 4
  %v0_1000072c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000072c = trunc i32 %v0_1000072c to i8
  %v2_1000072c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000072c = add i32 %v2_1000072c, 4
  %v4_1000072c = inttoptr i32 %v3_1000072c to i8*
  store i8 %v1_1000072c, i8* %v4_1000072c, align 1
  %v0_10000730 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000730 = add i32 %v0_10000730, 4
  store i32 %v1_10000730, i32* %r4.global-to-local, align 4
  store i32 268437304, i32* @lr, align 4
  %v3_10000734 = call i32 @function_1000ac4c(i32 %v3_10000720, i32 %v1_10000730, i32 268448004)
  %v3_10000738 = load i8, i8* @global_var_1001d180.9, align 1
  %v4_10000738 = zext i8 %v3_10000738 to i32
  store i32 %v3_10000734, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d181.11 to i32), i32* %r0.global-to-local, align 4
  %v1_10000748 = mul nuw nsw i32 %v4_10000738, 4
  %v0_1000074c = load i32, i32* @r28, align 4
  %v3_1000074c = add i32 %v1_10000748, %v3_10000734
  %v4_1000074c = inttoptr i32 %v3_1000074c to i32*
  store i32 %v0_1000074c, i32* %v4_1000074c, align 4
  %v0_10000754 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000754, i32* @global_var_1001d184.10, align 4
  %v0_10000758 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000758 = trunc i32 %v0_10000758 to i8
  store i8 %v1_10000758, i8* @global_var_1001d180.9, align 1
  store i32 268437344, i32* @lr, align 4
  %v2_1000075c = call i32 @function_1000aadc(i32 1, i32 8)
  %v3_10000760 = load i8, i8* @global_var_1001d180.9, align 1
  %v4_10000760 = zext i8 %v3_10000760 to i32
  store i32 %v4_10000760, i32* %r4.global-to-local, align 4
  store i32 %v2_1000075c, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10000774 = load i32, i32* @global_var_1001d184.10, align 4
  %v2_10000778 = inttoptr i32 %v2_1000075c to i32*
  store i32 268449220, i32* %v2_10000778, align 4
  %v0_1000077c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000077c = mul i32 %v0_1000077c, 4
  store i32 %v1_1000077c, i32* %r4.global-to-local, align 4
  %v0_10000780 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000780 = trunc i32 %v0_10000780 to i8
  %v2_10000780 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000780 = add i32 %v2_10000780, 4
  %v4_10000780 = inttoptr i32 %v3_10000780 to i8*
  store i8 %v1_10000780, i8* %v4_10000780, align 1
  %v0_10000784 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000784 = add i32 %v0_10000784, 4
  store i32 %v1_10000784, i32* %r4.global-to-local, align 4
  store i32 268437388, i32* @lr, align 4
  %v3_10000788 = call i32 @function_1000ac4c(i32 %v3_10000774, i32 %v1_10000784, i32 268449220)
  %v3_1000078c = load i8, i8* @global_var_1001d180.9, align 1
  %v4_1000078c = zext i8 %v3_1000078c to i32
  store i32 %v3_10000788, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d181.11 to i32), i32* %r0.global-to-local, align 4
  %v1_1000079c = mul nuw nsw i32 %v4_1000078c, 4
  %v0_100007a0 = load i32, i32* @r28, align 4
  %v3_100007a0 = add i32 %v1_1000079c, %v3_10000788
  %v4_100007a0 = inttoptr i32 %v3_100007a0 to i32*
  store i32 %v0_100007a0, i32* %v4_100007a0, align 4
  %v0_100007a8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007a8, i32* @global_var_1001d184.10, align 4
  %v0_100007ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100007ac = trunc i32 %v0_100007ac to i8
  store i8 %v1_100007ac, i8* @global_var_1001d180.9, align 1
  store i32 268437428, i32* @lr, align 4
  %v2_100007b0 = call i32 @function_1000aadc(i32 1, i32 8)
  %v3_100007b4 = load i8, i8* @global_var_1001d180.9, align 1
  %v4_100007b4 = zext i8 %v3_100007b4 to i32
  store i32 %v4_100007b4, i32* %r4.global-to-local, align 4
  store i32 %v2_100007b0, i32* %r28.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_100007c8 = load i32, i32* @global_var_1001d184.10, align 4
  %v2_100007cc = inttoptr i32 %v2_100007b0 to i32*
  store i32 268445800, i32* %v2_100007cc, align 4
  %v0_100007d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d0 = mul i32 %v0_100007d0, 4
  store i32 %v1_100007d0, i32* %r4.global-to-local, align 4
  %v0_100007d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007d4 = trunc i32 %v0_100007d4 to i8
  %v2_100007d4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100007d4 = add i32 %v2_100007d4, 4
  %v4_100007d4 = inttoptr i32 %v3_100007d4 to i8*
  store i8 %v1_100007d4, i8* %v4_100007d4, align 1
  %v0_100007d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d8 = add i32 %v0_100007d8, 4
  store i32 %v1_100007d8, i32* %r4.global-to-local, align 4
  store i32 268437472, i32* @lr, align 4
  %v3_100007dc = call i32 @function_1000ac4c(i32 %v3_100007c8, i32 %v1_100007d8, i32 268445800)
  %v3_100007e0 = load i8, i8* @global_var_1001d180.9, align 1
  %v4_100007e0 = zext i8 %v3_100007e0 to i32
  store i32 %v3_100007dc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d181.11 to i32), i32* %r0.global-to-local, align 4
  %v1_100007f0 = mul nuw nsw i32 %v4_100007e0, 4
  %v0_100007f4 = load i32, i32* @r28, align 4
  %v3_100007f4 = add i32 %v1_100007f0, %v3_100007dc
  %v4_100007f4 = inttoptr i32 %v3_100007f4 to i32*
  store i32 %v0_100007f4, i32* %v4_100007f4, align 4
  %v0_100007fc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007fc, i32* @global_var_1001d184.10, align 4
  %v0_10000800 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000800 = trunc i32 %v0_10000800 to i8
  store i8 %v1_10000800, i8* @global_var_1001d180.9, align 1
  store i32 268437512, i32* @lr, align 4
  %v2_10000804 = call i32 @function_1000aadc(i32 1, i32 8)
  %v3_10000808 = load i8, i8* @global_var_1001d180.9, align 1
  %v4_10000808 = zext i8 %v3_10000808 to i32
  store i32 %v4_10000808, i32* %r4.global-to-local, align 4
  store i32 %v2_10000804, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_1000081c = load i32, i32* @global_var_1001d184.10, align 4
  %v2_10000820 = inttoptr i32 %v2_10000804 to i32*
  store i32 268444280, i32* %v2_10000820, align 4
  %v0_10000824 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000824 = mul i32 %v0_10000824, 4
  store i32 %v1_10000824, i32* %r4.global-to-local, align 4
  %v0_10000828 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000828 = trunc i32 %v0_10000828 to i8
  %v2_10000828 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000828 = add i32 %v2_10000828, 4
  %v4_10000828 = inttoptr i32 %v3_10000828 to i8*
  store i8 %v1_10000828, i8* %v4_10000828, align 1
  %v0_1000082c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000082c = add i32 %v0_1000082c, 4
  store i32 %v1_1000082c, i32* %r4.global-to-local, align 4
  store i32 268437556, i32* @lr, align 4
  %v3_10000830 = call i32 @function_1000ac4c(i32 %v3_1000081c, i32 %v1_1000082c, i32 268444280)
  %v3_10000834 = load i8, i8* @global_var_1001d180.9, align 1
  %v4_10000834 = zext i8 %v3_10000834 to i32
  store i32 %v3_10000830, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d181.11 to i32), i32* %r0.global-to-local, align 4
  %v1_10000844 = mul nuw nsw i32 %v4_10000834, 4
  %v0_10000848 = load i32, i32* @r28, align 4
  %v3_10000848 = add i32 %v1_10000844, %v3_10000830
  %v4_10000848 = inttoptr i32 %v3_10000848 to i32*
  store i32 %v0_10000848, i32* %v4_10000848, align 4
  %v0_10000850 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000850, i32* @global_var_1001d184.10, align 4
  %v0_10000854 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000854 = trunc i32 %v0_10000854 to i8
  store i8 %v1_10000854, i8* @global_var_1001d180.9, align 1
  store i32 268437596, i32* @lr, align 4
  %v2_10000858 = call i32 @function_1000aadc(i32 1, i32 8)
  %v3_1000085c = load i8, i8* @global_var_1001d180.9, align 1
  %v4_1000085c = zext i8 %v3_1000085c to i32
  store i32 %v4_1000085c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000858, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10000870 = load i32, i32* @global_var_1001d184.10, align 4
  %v2_10000874 = inttoptr i32 %v2_10000858 to i32*
  store i32 268442724, i32* %v2_10000874, align 4
  %v0_10000878 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000878 = mul i32 %v0_10000878, 4
  store i32 %v1_10000878, i32* %r4.global-to-local, align 4
  %v0_1000087c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000087c = trunc i32 %v0_1000087c to i8
  %v2_1000087c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000087c = add i32 %v2_1000087c, 4
  %v4_1000087c = inttoptr i32 %v3_1000087c to i8*
  store i8 %v1_1000087c, i8* %v4_1000087c, align 1
  %v0_10000880 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000880 = add i32 %v0_10000880, 4
  store i32 %v1_10000880, i32* %r4.global-to-local, align 4
  store i32 268437640, i32* @lr, align 4
  %v3_10000884 = call i32 @function_1000ac4c(i32 %v3_10000870, i32 %v1_10000880, i32 268442724)
  %v3_10000888 = load i8, i8* @global_var_1001d180.9, align 1
  %v4_10000888 = zext i8 %v3_10000888 to i32
  store i32 %v3_10000884, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d181.11 to i32), i32* %r0.global-to-local, align 4
  %v1_10000898 = mul nuw nsw i32 %v4_10000888, 4
  %v0_1000089c = load i32, i32* @r28, align 4
  %v3_1000089c = add i32 %v1_10000898, %v3_10000884
  %v4_1000089c = inttoptr i32 %v3_1000089c to i32*
  store i32 %v0_1000089c, i32* %v4_1000089c, align 4
  %v0_100008a4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008a4, i32* @global_var_1001d184.10, align 4
  %v0_100008a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008a8 = trunc i32 %v0_100008a8 to i8
  store i8 %v1_100008a8, i8* @global_var_1001d180.9, align 1
  store i32 268437680, i32* @lr, align 4
  %v2_100008ac = call i32 @function_1000aadc(i32 1, i32 8)
  %v3_100008b0 = load i8, i8* @global_var_1001d180.9, align 1
  %v4_100008b0 = zext i8 %v3_100008b0 to i32
  store i32 %v4_100008b0, i32* %r4.global-to-local, align 4
  store i32 %v2_100008ac, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_100008c4 = load i32, i32* @global_var_1001d184.10, align 4
  %v2_100008c8 = inttoptr i32 %v2_100008ac to i32*
  store i32 268440988, i32* %v2_100008c8, align 4
  %v0_100008cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100008cc = mul i32 %v0_100008cc, 4
  store i32 %v1_100008cc, i32* %r4.global-to-local, align 4
  %v0_100008d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008d0 = trunc i32 %v0_100008d0 to i8
  %v2_100008d0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100008d0 = add i32 %v2_100008d0, 4
  %v4_100008d0 = inttoptr i32 %v3_100008d0 to i8*
  store i8 %v1_100008d0, i8* %v4_100008d0, align 1
  %v0_100008d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100008d4 = add i32 %v0_100008d4, 4
  store i32 %v1_100008d4, i32* %r4.global-to-local, align 4
  store i32 268437724, i32* @lr, align 4
  %v3_100008d8 = call i32 @function_1000ac4c(i32 %v3_100008c4, i32 %v1_100008d4, i32 268440988)
  %v3_100008dc = load i8, i8* @global_var_1001d180.9, align 1
  %v4_100008dc = zext i8 %v3_100008dc to i32
  store i32 %v3_100008d8, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d181.11 to i32), i32* %r0.global-to-local, align 4
  %v1_100008ec = mul nuw nsw i32 %v4_100008dc, 4
  %v0_100008f0 = load i32, i32* @r28, align 4
  %v3_100008f0 = add i32 %v1_100008ec, %v3_100008d8
  %v4_100008f0 = inttoptr i32 %v3_100008f0 to i32*
  store i32 %v0_100008f0, i32* %v4_100008f0, align 4
  %v0_100008f8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008f8, i32* @global_var_1001d184.10, align 4
  %v0_100008fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100008fc = trunc i32 %v0_100008fc to i8
  store i8 %v1_100008fc, i8* @global_var_1001d180.9, align 1
  store i32 268437764, i32* @lr, align 4
  %v2_10000900 = call i32 @function_1000aadc(i32 1, i32 8)
  %v3_10000904 = load i8, i8* @global_var_1001d180.9, align 1
  %v4_10000904 = zext i8 %v3_10000904 to i32
  store i32 %v4_10000904, i32* %r4.global-to-local, align 4
  store i32 %v2_10000900, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10000918 = load i32, i32* @global_var_1001d184.10, align 4
  %v2_1000091c = inttoptr i32 %v2_10000900 to i32*
  store i32 268439524, i32* %v2_1000091c, align 4
  %v0_10000920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000920 = mul i32 %v0_10000920, 4
  store i32 %v1_10000920, i32* %r4.global-to-local, align 4
  %v0_10000924 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000924 = trunc i32 %v0_10000924 to i8
  %v2_10000924 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000924 = add i32 %v2_10000924, 4
  %v4_10000924 = inttoptr i32 %v3_10000924 to i8*
  store i8 %v1_10000924, i8* %v4_10000924, align 1
  %v0_10000928 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000928 = add i32 %v0_10000928, 4
  store i32 %v1_10000928, i32* %r4.global-to-local, align 4
  store i32 268437808, i32* @lr, align 4
  %v3_1000092c = call i32 @function_1000ac4c(i32 %v3_10000918, i32 %v1_10000928, i32 268439524)
  %v3_10000930 = load i8, i8* @global_var_1001d180.9, align 1
  %v4_10000930 = zext i8 %v3_10000930 to i32
  store i32 %v3_1000092c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d181.11 to i32), i32* %r0.global-to-local, align 4
  %v1_10000940 = mul nuw nsw i32 %v4_10000930, 4
  %v0_10000944 = load i32, i32* @r28, align 4
  %v3_10000944 = add i32 %v1_10000940, %v3_1000092c
  %v4_10000944 = inttoptr i32 %v3_10000944 to i32*
  store i32 %v0_10000944, i32* %v4_10000944, align 4
  %v0_1000094c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000094c = trunc i32 %v0_1000094c to i8
  store i8 %v1_1000094c, i8* @global_var_1001d180.9, align 1
  %v0_10000950 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000950, i32* @global_var_1001d184.10, align 4
  store i32 268437848, i32* @lr, align 4
  %v2_10000954 = call i32 @function_1000aadc(i32 1, i32 8)
  %v3_10000958 = load i8, i8* @global_var_1001d180.9, align 1
  %v4_10000958 = zext i8 %v3_10000958 to i32
  store i32 %v4_10000958, i32* %r4.global-to-local, align 4
  store i32 %v2_10000954, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_1000096c = load i32, i32* @global_var_1001d184.10, align 4
  %v2_10000970 = inttoptr i32 %v2_10000954 to i32*
  store i32 268437948, i32* %v2_10000970, align 4
  %v0_10000974 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000974 = mul i32 %v0_10000974, 4
  store i32 %v1_10000974, i32* %r4.global-to-local, align 4
  %v0_10000978 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000978 = trunc i32 %v0_10000978 to i8
  %v2_10000978 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000978 = add i32 %v2_10000978, 4
  %v4_10000978 = inttoptr i32 %v3_10000978 to i8*
  store i8 %v1_10000978, i8* %v4_10000978, align 1
  %v0_1000097c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000097c = add i32 %v0_1000097c, 4
  store i32 %v1_1000097c, i32* %r4.global-to-local, align 4
  store i32 268437892, i32* @lr, align 4
  %v3_10000980 = call i32 @function_1000ac4c(i32 %v3_1000096c, i32 %v1_1000097c, i32 268437948)
  %v3_10000984 = load i8, i8* @global_var_1001d180.9, align 1
  %v4_10000984 = zext i8 %v3_10000984 to i32
  store i32 %v3_10000980, i32* @global_var_1001d184.10, align 4
  store i32 ptrtoint (i8* @global_var_1001d181.11 to i32), i32* %r0.global-to-local, align 4
  %v1_10000990 = mul nuw nsw i32 %v4_10000984, 4
  %v0_10000994 = load i32, i32* @r28, align 4
  %v3_10000994 = add i32 %v1_10000990, %v3_10000980
  %v4_10000994 = inttoptr i32 %v3_10000994 to i32*
  store i32 %v0_10000994, i32* %v4_10000994, align 4
  %v0_1000099c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000099c = trunc i32 %v0_1000099c to i8
  store i8 %v1_1000099c, i8* @global_var_1001d180.9, align 1
  store i32 %v0_10000690, i32* %r0.global-to-local, align 4
  store i32 %v0_100006ac, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001d181.11 to i32), { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001d180.9, { 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_100009bc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100009bc:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-106 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_100009c0 = load i32, i32* @lr, align 4
  store i32 %v0_100009c0, i32* %r0.global-to-local, align 4
  %v0_100009c4 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r22.global-to-local, align 4
  %v0_100009d8 = load i32, i32* @r27, align 4
  store i32 %v0_100009c4, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_100009e8 = load i32, i32* %r0.global-to-local, align 4
  %v0_10000a04 = load i32, i32* @r24, align 4
  store i32 %arg3, i32* @r25, align 4
  %v0_10000a10 = load i32, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000a1c = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  %v0_10000a24 = load i32, i32* @r30, align 4
  %v0_10000a28 = load i32, i32* @r31, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 268438080, i32* @lr, align 4
  %v2_10000a3c = call i32 @function_1000aadc(i32 %arg2, i32 4)
  store i32 %v2_10000a3c, i32* %r20.global-to-local, align 4
  %v0_10000a44 = load i32, i32* @r29, align 4
  %v0_10000a50 = load i32, i32* @r28, align 4
  store i32 %v0_10000a50, i32* %r3.global-to-local, align 4
  store i32 268438104, i32* @lr, align 4
  %v4_10000a54 = inttoptr i32 %v0_10000a44 to i32*
  %v5_10000a54 = call i32 @function_10000300(i32 %v0_10000a50, i32* %v4_10000a54, i32 2, i32 0)
  %v5_10000a64 = trunc i32 %v5_10000a54 to i8
  %v0_10000a6c = load i32, i32* @r29, align 4
  %v0_10000a70 = load i32, i32* @r28, align 4
  store i32 %v0_10000a70, i32* %r3.global-to-local, align 4
  store i32 268438136, i32* @lr, align 4
  %v4_10000a74 = inttoptr i32 %v0_10000a6c to i32*
  %v5_10000a74 = call i32 @function_10000300(i32 %v0_10000a70, i32* %v4_10000a74, i32 3, i32 65535)
  %v0_10000a78 = load i32, i32* @r29, align 4
  store i32 %v5_10000a74, i32* %r24.global-to-local, align 4
  %v0_10000a88 = load i32, i32* @r28, align 4
  store i32 %v0_10000a88, i32* %r3.global-to-local, align 4
  store i32 268438160, i32* @lr, align 4
  %v4_10000a8c = inttoptr i32 %v0_10000a78 to i32*
  %v5_10000a8c = call i32 @function_10000300(i32 %v0_10000a88, i32* %v4_10000a8c, i32 4, i32 64)
  %v0_10000a90 = load i32, i32* @r29, align 4
  %v1_10000a9c = urem i32 %v5_10000a8c, 256
  store i32 %v1_10000a9c, i32* %r14.global-to-local, align 4
  %v0_10000aa0 = load i32, i32* @r28, align 4
  store i32 %v0_10000aa0, i32* %r3.global-to-local, align 4
  store i32 268438184, i32* @lr, align 4
  %v4_10000aa4 = inttoptr i32 %v0_10000a90 to i32*
  %v5_10000aa4 = call i32 @function_10000300(i32 %v0_10000aa0, i32* %v4_10000aa4, i32 5, i32 1)
  %v0_10000ab4 = load i32, i32* @r29, align 4
  %v1_10000ab8 = urem i32 %v5_10000aa4, 256
  store i32 %v1_10000ab8, i32* %r23.global-to-local, align 4
  %v0_10000abc = load i32, i32* @r28, align 4
  store i32 %v0_10000abc, i32* %r3.global-to-local, align 4
  store i32 268438212, i32* @lr, align 4
  %v4_10000ac0 = inttoptr i32 %v0_10000ab4 to i32*
  %v5_10000ac0 = call i32 @function_10000300(i32 %v0_10000abc, i32* %v4_10000ac0, i32 6, i32 65535)
  %v0_10000ac8 = load i32, i32* @r29, align 4
  store i32 %v5_10000ac0, i32* %r26.global-to-local, align 4
  %v0_10000ad8 = load i32, i32* @r28, align 4
  store i32 %v0_10000ad8, i32* %r3.global-to-local, align 4
  store i32 268438240, i32* @lr, align 4
  %v4_10000adc = inttoptr i32 %v0_10000ac8 to i32*
  %v5_10000adc = call i32 @function_10000300(i32 %v0_10000ad8, i32* %v4_10000adc, i32 7, i32 65535)
  %v0_10000ae0 = load i32, i32* @r29, align 4
  store i32 %v5_10000adc, i32* %r30.global-to-local, align 4
  %v0_10000af0 = load i32, i32* @r28, align 4
  store i32 %v0_10000af0, i32* %r3.global-to-local, align 4
  store i32 268438264, i32* @lr, align 4
  %v4_10000af4 = inttoptr i32 %v0_10000ae0 to i32*
  %v5_10000af4 = call i32 @function_10000300(i32 %v0_10000af0, i32* %v4_10000af4, i32 0, i32 512)
  %v0_10000af8 = load i32, i32* @r29, align 4
  store i32 %v5_10000af4, i32* %r18.global-to-local, align 4
  %v0_10000b08 = load i32, i32* @r28, align 4
  store i32 %v0_10000b08, i32* %r3.global-to-local, align 4
  store i32 268438288, i32* @lr, align 4
  %v4_10000b0c = inttoptr i32 %v0_10000af8 to i32*
  %v5_10000b0c = call i32 @function_10000300(i32 %v0_10000b08, i32* %v4_10000b0c, i32 1, i32 1)
  %v0_10000b10 = load i32, i32* @r29, align 4
  %v1_10000b14 = urem i32 %v5_10000b0c, 256
  %v0_10000b24 = load i32, i32* @r28, align 4
  store i32 %v0_10000b24, i32* %r3.global-to-local, align 4
  store i32 268438316, i32* @lr, align 4
  %v4_10000b28 = inttoptr i32 %v0_10000b10 to i32*
  %v5_10000b28 = call i32 @function_10000300(i32 %v0_10000b24, i32* %v4_10000b28, i32 18, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10000b30 = load i32, i32* @global_var_1001d188.12, align 4
  %v0_10000b34 = load i32, i32* @r29, align 4
  store i32 %v5_10000b28, i32* @r31, align 4
  %v0_10000b40 = load i32, i32* @r28, align 4
  store i32 %v0_10000b40, i32* %r3.global-to-local, align 4
  store i32 268438344, i32* @lr, align 4
  %v4_10000b44 = inttoptr i32 %v0_10000b34 to i32*
  %v5_10000b44 = call i32 @function_10000300(i32 %v0_10000b40, i32* %v4_10000b44, i32 19, i32 %v3_10000b30)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268438356, i32* @lr, align 4
  %v0_10000b50 = call i32 @function_10009e00()
  %v1_10000b58 = load i32, i32* %r27.global-to-local, align 4
  %v2_10000b58 = add i32 %v1_10000b58, %v0_10000b50
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438380, i32* @lr, align 4
  %v3_10000b68 = call i32 @function_1000a780(i32 2, i32 3, i32 6)
  store i32 %v3_10000b68, i32* %r3.global-to-local, align 4
  %v1_10000b6c = icmp slt i32 %v3_10000b68, -1
  %v3_10000b6c = icmp eq i32 %v3_10000b68, -1
  store i1 %v1_10000b6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b6c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10000b68, i32* %r21.global-to-local, align 4
  br i1 %v3_10000b6c, label %dec_label_pc_10000ed4, label %dec_label_pc_10000b78

dec_label_pc_10000b78:                            ; preds = %dec_label_pc_100009bc
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10000b84 = ptrtoint i32* %stack_var_-120 to i32
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268438420, i32* @lr, align 4
  %v4_10000b90 = call i32 @function_1000a744(i32 0, i32 3, i32 %v2_10000b84, i32 4)
  store i32 %v4_10000b90, i32* %r3.global-to-local, align 4
  %v1_10000b94 = icmp slt i32 %v4_10000b90, -1
  %v3_10000b94 = icmp eq i32 %v4_10000b90, -1
  store i1 %v1_10000b94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000b94, label %dec_label_pc_10000fd8, label %dec_label_pc_10000b9c

dec_label_pc_10000b9c:                            ; preds = %dec_label_pc_10000b78
  %v0_10000b9c = load i32, i32* %r19.global-to-local, align 4
  %v1_10000b9c = icmp slt i32 %v0_10000b9c, 0
  %v3_10000b9c = icmp eq i32 %v0_10000b9c, 0
  store i1 %v1_10000b9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b9c, i1* %cr7_eq.global-to-local, align 1
  %v0_10000ba0 = load i32, i32* @r31, align 4
  %v1_10000ba0 = urem i32 %v0_10000ba0, 256
  store i32 %v1_10000ba0, i32* @r31, align 4
  %v0_10000ba4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000ba4, i32* %stack_var_-120, align 4
  %v0_10000ba8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000ba8 = urem i32 %v0_10000ba8, 65536
  store i32 %v1_10000ba8, i32* @r24, align 4
  %v0_10000bac = call i32 @__asm_mfcr()
  store i32 %v0_10000bac, i32* %r3.global-to-local, align 4
  %v1_10000bb0 = mul i32 %v0_10000bac, 268435456
  store i32 %v1_10000bb0, i32* %r0.global-to-local, align 4
  %v0_10000bb4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000bb4 = urem i32 %v0_10000bb4, 65536
  store i32 %v1_10000bb4, i32* %r16.global-to-local, align 4
  %v0_10000bb8 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000bb8 = urem i32 %v0_10000bb8, 65536
  store i32 %v1_10000bb8, i32* %r17.global-to-local, align 4
  %v0_10000bbc = load i32, i32* @r31, align 4
  %v0_10000bc4 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10000bc4 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10000bc4 = or i1 %v0_10000bc4, %v1_10000bc4
  br i1 %v2_10000bc4, label %dec_label_pc_10000d30.preheader, label %dec_label_pc_10000bc8

dec_label_pc_10000bc8:                            ; preds = %dec_label_pc_10000b9c
  %v0_10000bc8 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000bc8 = icmp eq i32 %v0_10000bc8, 0
  store i1 %v3_10000bc8, i1* %cr3_eq.global-to-local, align 1
  %v3_10000bcc = icmp eq i32 %v0_10000bbc, 0
  store i1 %v3_10000bcc, i1* %cr4_eq.global-to-local, align 1
  %v0_10000bd0 = load i32, i32* %r18.global-to-local, align 4
  %v1_10000bd0 = urem i32 %v0_10000bd0, 65536
  %v0_10000bd4 = load i32, i32* @r24, align 4
  %v1_10000bd4 = sub i32 -1, %v0_10000bd4
  store i32 %v1_10000bd4, i32* %r11.global-to-local, align 4
  %v1_10000bdc = add nuw nsw i32 %v1_10000bd0, 66
  store i32 %v1_10000bdc, i32* %r0.global-to-local, align 4
  %v1_10000be0 = add nuw nsw i32 %v1_10000bd0, 28
  store i32 %v1_10000be0, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10000bd0, 66
  %v1_10000be4 = urem i32 %fold, 65536
  store i32 %v1_10000be4, i32* %r23.global-to-local, align 4
  %fold5 = add i32 %v0_10000bd0, 28
  %v1_10000be8 = urem i32 %fold5, 65536
  store i32 %v1_10000be8, i32* %r26.global-to-local, align 4
  %v1_10000bec = urem i32 %v1_10000bd4, 65536
  store i32 %v1_10000bec, i32* %r27.global-to-local, align 4
  %fold6 = add i32 %v0_10000bd0, 8
  %v1_10000bf0 = urem i32 %fold6, 65536
  store i32 %v1_10000bf0, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r22.global-to-local, align 4
  %v4_10000c78 = sext i8 %v5_10000a64 to i32
  br label %dec_label_pc_10000c2c

dec_label_pc_10000c04:                            ; preds = %dec_label_pc_10000cf0
  %v0_10000c04 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000c04 = add i32 %v0_10000c04, 16
  %v2_10000c04 = inttoptr i32 %v1_10000c04 to i32*
  %v3_10000c04 = load i32, i32* %v2_10000c04, align 4
  store i32 %v3_10000c04, i32* %r0.global-to-local, align 4
  %v0_10000c08 = load i32, i32* @r28, align 4
  %v1_10000c08 = trunc i32 %v0_10000c08 to i16
  %v2_10000c08 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000c08 = add i32 %v2_10000c08, 4
  %v4_10000c08 = inttoptr i32 %v3_10000c08 to i16*
  store i16 %v1_10000c08, i16* %v4_10000c08, align 2
  %v0_10000c0c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000c0c = load i32, i32* %r30.global-to-local, align 4
  %v2_10000c0c = add i32 %v1_10000c0c, 16
  %v3_10000c0c = inttoptr i32 %v2_10000c0c to i32*
  store i32 %v0_10000c0c, i32* %v3_10000c0c, align 4
  %v0_10000c10 = load i32, i32* %r16.global-to-local, align 4
  %v1_10000c10 = trunc i32 %v0_10000c10 to i16
  %v2_10000c10 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000c10 = inttoptr i32 %v2_10000c10 to i16*
  store i16 %v1_10000c10, i16* %v3_10000c10, align 2
  %v3_10000c14 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10000c14, i32* %r9.global-to-local, align 4
  %v0_10000c18 = load i32, i32* %r17.global-to-local, align 4
  %v1_10000c18 = trunc i32 %v0_10000c18 to i16
  %v2_10000c18 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000c18 = add i32 %v2_10000c18, 2
  %v4_10000c18 = inttoptr i32 %v3_10000c18 to i16*
  store i16 %v1_10000c18, i16* %v4_10000c18, align 2
  %v0_10000c1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10000c1c = add i32 %v0_10000c1c, 1
  %v1_10000c20 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000c20 = icmp slt i32 %v1_10000c1c, %v1_10000c20
  %v4_10000c20 = icmp eq i32 %v1_10000c1c, %v1_10000c20
  store i1 %v2_10000c20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000c20, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10000c1c, i32* %stack_var_-120, align 4
  br i1 %v2_10000c20, label %dec_label_pc_10000c2c, label %dec_label_pc_10000d30.preheader

dec_label_pc_10000c2c:                            ; preds = %dec_label_pc_10000c04, %dec_label_pc_10000d0c, %dec_label_pc_10000bc8
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268438584, i32* @lr, align 4
  %v2_10000c34 = call i32 @function_1000aadc(i32 1510, i32 4)
  store i32 %v2_10000c34, i32* %r3.global-to-local, align 4
  %v3_10000c38 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10000c38, i32* %r9.global-to-local, align 4
  %v0_10000c3c = load i32, i32* @r31, align 4
  %v1_10000c3c = mul i32 %v0_10000c3c, 4
  store i32 %v1_10000c3c, i32* %r0.global-to-local, align 4
  %v1_10000c40 = load i32, i32* %r20.global-to-local, align 4
  %v3_10000c40 = add i32 %v1_10000c40, %v1_10000c3c
  %v4_10000c40 = inttoptr i32 %v3_10000c40 to i32*
  store i32 %v2_10000c34, i32* %v4_10000c40, align 4
  %v0_10000c44 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000c44 = mul i32 %v0_10000c44, 4
  store i32 %v1_10000c44, i32* %r9.global-to-local, align 4
  %v1_10000c48 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000c48 = add i32 %v1_10000c48, %v1_10000c44
  %v3_10000c48 = inttoptr i32 %v2_10000c48 to i32*
  %v4_10000c48 = load i32, i32* %v3_10000c48, align 4
  store i32 %v4_10000c48, i32* %r31.global-to-local, align 4
  %v1_10000c4c = inttoptr i32 %v4_10000c48 to i32*
  %v2_10000c4c = load i32, i32* %v1_10000c4c, align 4
  store i32 %v2_10000c4c, i32* %r0.global-to-local, align 4
  %v1_10000c50 = add i32 %v4_10000c48, 38
  store i32 %v1_10000c50, i32* %r30.global-to-local, align 4
  %v0_10000c54 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000c54 = trunc i32 %v0_10000c54 to i8
  %v3_10000c54 = add i32 %v4_10000c48, 8
  %v4_10000c54 = inttoptr i32 %v3_10000c54 to i8*
  store i8 %v1_10000c54, i8* %v4_10000c54, align 1
  %v0_10000c58 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000c58 = add i32 %v0_10000c58, 58
  store i32 %v1_10000c58, i32* %r29.global-to-local, align 4
  %v1_10000c5c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000c5c, i32* %r0.global-to-local, align 4
  %v0_10000c60 = load i32, i32* @r24, align 4
  %v1_10000c60 = trunc i32 %v0_10000c60 to i16
  %v2_10000c60 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000c60 = add i32 %v2_10000c60, 4
  %v4_10000c60 = inttoptr i32 %v3_10000c60 to i16*
  store i16 %v1_10000c60, i16* %v4_10000c60, align 2
  %v1_10000c64 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10000c68 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000c68 = add i32 %v0_10000c68, 20
  store i32 %v1_10000c68, i32* %r9.global-to-local, align 4
  %v2_10000c6c = inttoptr i32 %v0_10000c68 to i32*
  store i32 %v1_10000c64, i32* %v2_10000c6c, align 4
  %v0_10000c70 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000c70 = add i32 %v0_10000c70, 24
  store i32 %v1_10000c70, i32* %r11.global-to-local, align 4
  %v0_10000c74 = load i32, i32* %r23.global-to-local, align 4
  %v1_10000c74 = trunc i32 %v0_10000c74 to i16
  %v3_10000c74 = add i32 %v0_10000c70, 2
  %v4_10000c74 = inttoptr i32 %v3_10000c74 to i16*
  store i16 %v1_10000c74, i16* %v4_10000c74, align 2
  store i32 %v4_10000c78, i32* %r0.global-to-local, align 4
  %v2_10000c7c = load i32, i32* %r31.global-to-local, align 4
  %v3_10000c7c = add i32 %v2_10000c7c, 1
  %v4_10000c7c = inttoptr i32 %v3_10000c7c to i8*
  store i8 %v5_10000a64, i8* %v4_10000c7c, align 1
  %v0_10000c80 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000c80, label %dec_label_pc_10000c8c, label %dec_label_pc_10000c84

dec_label_pc_10000c84:                            ; preds = %dec_label_pc_10000c2c
  %v2_10000c88 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000c88 = add i32 %v2_10000c88, 6
  %v4_10000c88 = inttoptr i32 %v3_10000c88 to i16*
  store i16 16384, i16* %v4_10000c88, align 2
  br label %dec_label_pc_10000c8c

dec_label_pc_10000c8c:                            ; preds = %dec_label_pc_10000c2c, %dec_label_pc_10000c84
  %v2_10000c90 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000c90 = add i32 %v2_10000c90, 9
  %v4_10000c90 = inttoptr i32 %v3_10000c90 to i8*
  store i8 47, i8* %v4_10000c90, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_10000c98 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000c98 = add i32 %v2_10000c98, 2
  %v4_10000c98 = inttoptr i32 %v3_10000c98 to i16*
  store i16 25944, i16* %v4_10000c98, align 2
  %v2_10000ca0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10000ca0 = add i32 %v2_10000ca0, 12
  %v4_10000ca0 = inttoptr i32 %v3_10000ca0 to i16*
  store i16 2048, i16* %v4_10000ca0, align 2
  %v3_10000ca4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10000ca4, i32* %r9.global-to-local, align 4
  %v0_10000ca8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000ca8 = add i32 %v0_10000ca8, 38
  %v2_10000ca8 = inttoptr i32 %v1_10000ca8 to i32*
  %v3_10000ca8 = load i32, i32* %v2_10000ca8, align 4
  store i32 %v3_10000ca8, i32* %r0.global-to-local, align 4
  %v1_10000cb0 = mul i32 %v3_10000ca4, 24
  store i32 %v1_10000cb0, i32* %r9.global-to-local, align 4
  %v1_10000cb4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000cb4, i32* %r0.global-to-local, align 4
  %v1_10000cb8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000cb8 = add i32 %v1_10000cb8, 12
  %v3_10000cb8 = inttoptr i32 %v2_10000cb8 to i32*
  store i32 %v5_10000b44, i32* %v3_10000cb8, align 4
  %v0_10000cbc = load i32, i32* %r9.global-to-local, align 4
  %v1_10000cbc = load i32, i32* @r25, align 4
  %v2_10000cbc = add i32 %v1_10000cbc, %v0_10000cbc
  store i32 %v2_10000cbc, i32* %r9.global-to-local, align 4
  %v1_10000cc0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10000cc0, i32* %r0.global-to-local, align 4
  %v0_10000cc4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000cc4 = add i32 %v0_10000cc4, 16
  %v2_10000cc4 = inttoptr i32 %v1_10000cc4 to i32*
  %v3_10000cc4 = load i32, i32* %v2_10000cc4, align 4
  store i32 %v3_10000cc4, i32* %r11.global-to-local, align 4
  %v1_10000cc8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000cc8 = add i32 %v1_10000cc8, 38
  %v3_10000cc8 = inttoptr i32 %v2_10000cc8 to i32*
  store i32 %v1_10000cc0, i32* %v3_10000cc8, align 4
  %v0_10000ccc = load i32, i32* %r11.global-to-local, align 4
  %v1_10000ccc = load i32, i32* %r31.global-to-local, align 4
  %v2_10000ccc = add i32 %v1_10000ccc, 16
  %v3_10000ccc = inttoptr i32 %v2_10000ccc to i32*
  store i32 %v0_10000ccc, i32* %v3_10000ccc, align 4
  store i32 %v4_10000c78, i32* %r11.global-to-local, align 4
  %v0_10000cd4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000cd4 = trunc i32 %v0_10000cd4 to i16
  %v2_10000cd4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000cd4 = add i32 %v2_10000cd4, 2
  %v4_10000cd4 = inttoptr i32 %v3_10000cd4 to i16*
  store i16 %v1_10000cd4, i16* %v4_10000cd4, align 2
  %v0_10000cd8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10000cd8 = trunc i32 %v0_10000cd8 to i8
  %v2_10000cd8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000cd8 = add i32 %v2_10000cd8, 1
  %v4_10000cd8 = inttoptr i32 %v3_10000cd8 to i8*
  store i8 %v1_10000cd8, i8* %v4_10000cd8, align 1
  %v0_10000cdc = load i32, i32* %r27.global-to-local, align 4
  %v1_10000cdc = trunc i32 %v0_10000cdc to i16
  %v2_10000cdc = load i32, i32* %r30.global-to-local, align 4
  %v3_10000cdc = add i32 %v2_10000cdc, 4
  %v4_10000cdc = inttoptr i32 %v3_10000cdc to i16*
  store i16 %v1_10000cdc, i16* %v4_10000cdc, align 2
  %v0_10000ce0 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000ce0 = trunc i32 %v0_10000ce0 to i8
  %v2_10000ce0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000ce0 = add i32 %v2_10000ce0, 8
  %v4_10000ce0 = inttoptr i32 %v3_10000ce0 to i8*
  store i8 %v1_10000ce0, i8* %v4_10000ce0, align 1
  %v0_10000ce4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000ce4, label %dec_label_pc_10000cf0, label %dec_label_pc_10000ce8

dec_label_pc_10000ce8:                            ; preds = %dec_label_pc_10000c8c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10000cec = load i32, i32* %r30.global-to-local, align 4
  %v3_10000cec = add i32 %v2_10000cec, 6
  %v4_10000cec = inttoptr i32 %v3_10000cec to i16*
  store i16 16384, i16* %v4_10000cec, align 2
  br label %dec_label_pc_10000cf0

dec_label_pc_10000cf0:                            ; preds = %dec_label_pc_10000c8c, %dec_label_pc_10000ce8
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10000cf4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000cf4 = add i32 %v2_10000cf4, 9
  %v4_10000cf4 = inttoptr i32 %v3_10000cf4 to i8*
  store i8 17, i8* %v4_10000cf4, align 1
  %v0_10000cf8 = call i32 @function_10005998()
  store i32 %v0_10000cf8, i32* %r3.global-to-local, align 4
  %v1_10000cfc = add i32 %v0_10000cf8, -1024
  store i32 %v1_10000cfc, i32* %r0.global-to-local, align 4
  %v1_10000d00 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000d00 = add i32 %v1_10000d00, 12
  %v3_10000d00 = inttoptr i32 %v2_10000d00 to i32*
  store i32 %v0_10000cf8, i32* %v3_10000d00, align 4
  %v0_10000d04 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000d04 = sub i32 -1, %v0_10000d04
  store i32 %v1_10000d04, i32* %r0.global-to-local, align 4
  %v0_10000d08 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10000d08, label %dec_label_pc_10000d0c, label %dec_label_pc_10000c04

dec_label_pc_10000d0c:                            ; preds = %dec_label_pc_10000cf0
  %v1_10000d0c = load i32, i32* %r30.global-to-local, align 4
  %v2_10000d0c = add i32 %v1_10000d0c, 16
  %v3_10000d0c = inttoptr i32 %v2_10000d0c to i32*
  store i32 %v1_10000d04, i32* %v3_10000d0c, align 4
  %v0_10000d10 = load i32, i32* @r28, align 4
  %v1_10000d10 = trunc i32 %v0_10000d10 to i16
  %v2_10000d10 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d10 = add i32 %v2_10000d10, 4
  %v4_10000d10 = inttoptr i32 %v3_10000d10 to i16*
  store i16 %v1_10000d10, i16* %v4_10000d10, align 2
  %v3_10000d14 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10000d14, i32* %r9.global-to-local, align 4
  %v0_10000d18 = load i32, i32* %r16.global-to-local, align 4
  %v1_10000d18 = trunc i32 %v0_10000d18 to i16
  %v2_10000d18 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d18 = inttoptr i32 %v2_10000d18 to i16*
  store i16 %v1_10000d18, i16* %v3_10000d18, align 2
  %v0_10000d1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10000d1c = add i32 %v0_10000d1c, 1
  store i32 %v1_10000d1c, i32* @r31, align 4
  %v0_10000d20 = load i32, i32* %r17.global-to-local, align 4
  %v1_10000d20 = trunc i32 %v0_10000d20 to i16
  %v2_10000d20 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d20 = add i32 %v2_10000d20, 2
  %v4_10000d20 = inttoptr i32 %v3_10000d20 to i16*
  store i16 %v1_10000d20, i16* %v4_10000d20, align 2
  %v0_10000d24 = load i32, i32* @r31, align 4
  %v1_10000d24 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000d24 = icmp slt i32 %v0_10000d24, %v1_10000d24
  %v4_10000d24 = icmp eq i32 %v0_10000d24, %v1_10000d24
  store i1 %v2_10000d24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000d24, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10000d24, i32* %stack_var_-120, align 4
  br i1 %v2_10000d24, label %dec_label_pc_10000c2c, label %dec_label_pc_10000d30.preheader

dec_label_pc_10000d30.preheader:                  ; preds = %dec_label_pc_10000d0c, %dec_label_pc_10000c04, %dec_label_pc_10000b9c
  %v2_10000d3c = urem i32 %v0_10000bac, 16
  %v1_10000d44 = mul nuw i32 %v2_10000d3c, 268435456
  %v2_10000d50 = ptrtoint i32* %stack_var_-108 to i32
  %v2_10000d58 = ptrtoint i32* %stack_var_-106 to i32
  %v2_10000dec = ptrtoint i32* %stack_var_-116 to i32
  %v2_10000e00 = ptrtoint i32* %stack_var_-112 to i32
  %v3_10000d60 = icmp eq i32 %v0_10000bbc, 0
  %v3_10000d64 = icmp eq i32 %v5_10000b44, -1
  %v3_10000d6c = icmp eq i32 %v1_10000b14, 0
  br label %dec_label_pc_10000d30

dec_label_pc_10000d30:                            ; preds = %dec_label_pc_10000d30.preheader, %dec_label_pc_10000ec0
  store i32 0, i32* %stack_var_-120, align 4
  store i32 %v2_10000d3c, i32* %r0.global-to-local, align 4
  %v1_10000d40 = call %0 @__asm_mtcrf(i32 1, i32 %v2_10000d3c)
  store i32 %v1_10000d44, i32* %r0.global-to-local, align 4
  %v0_10000d48 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10000d48 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10000d48 = or i1 %v0_10000d48, %v1_10000d48
  br i1 %v2_10000d48, label %dec_label_pc_10000ec0, label %dec_label_pc_10000d4c

dec_label_pc_10000d4c:                            ; preds = %dec_label_pc_10000d30
  store i32 %v0_10000bbc, i32* %r0.global-to-local, align 4
  store i32 %v2_10000d50, i32* %r14.global-to-local, align 4
  store i32 %v1_10000b14, i32* %r11.global-to-local, align 4
  store i1 %v3_10000d60, i1* %cr4_eq.global-to-local, align 1
  store i1 %v3_10000d64, i1* %cr3_eq.global-to-local, align 1
  %v0_10000d68 = load i32, i32* %r18.global-to-local, align 4
  %v1_10000d68 = add i32 %v0_10000d68, 8
  store i32 %v1_10000d68, i32* %r22.global-to-local, align 4
  store i1 %v3_10000d6c, i1* %cr2_eq.global-to-local, align 1
  %v1_10000d70 = add i32 %v0_10000d68, 66
  store i32 %v1_10000d70, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_10000d7c

dec_label_pc_10000d7c:                            ; preds = %dec_label_pc_10000e30, %dec_label_pc_10000d4c
  %v0_10000d7c = phi i32 [ %v1_10000eb0, %dec_label_pc_10000e30 ], [ 0, %dec_label_pc_10000d4c ]
  %v1_10000d7c = mul i32 %v0_10000d7c, 24
  store i32 %v1_10000d7c, i32* %r0.global-to-local, align 4
  %v1_10000d80 = mul i32 %v0_10000d7c, 4
  store i32 %v1_10000d80, i32* %r11.global-to-local, align 4
  %v1_10000d84 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000d84 = add i32 %v1_10000d84, %v1_10000d80
  %v3_10000d84 = inttoptr i32 %v2_10000d84 to i32*
  %v4_10000d84 = load i32, i32* %v3_10000d84, align 4
  store i32 %v4_10000d84, i32* @r28, align 4
  %v1_10000d88 = load i32, i32* @r25, align 4
  %v2_10000d88 = add i32 %v1_10000d88, %v1_10000d7c
  %v1_10000d8c = add i32 %v2_10000d88, 20
  %v2_10000d8c = inttoptr i32 %v1_10000d8c to i8*
  %v3_10000d8c = load i8, i8* %v2_10000d8c, align 1
  %v4_10000d8c = zext i8 %v3_10000d8c to i32
  store i32 %v4_10000d8c, i32* %r9.global-to-local, align 4
  %v1_10000d90 = add i32 %v4_10000d84, 24
  store i32 %v1_10000d90, i32* @r31, align 4
  %v1_10000d94 = add i32 %v4_10000d84, 38
  store i32 %v1_10000d94, i32* @r27, align 4
  %v1_10000d98 = add i32 %v4_10000d84, 58
  store i32 %v1_10000d98, i32* @r30, align 4
  %v1_10000d9c = icmp ult i8 %v3_10000d8c, 31
  %v3_10000d9c = icmp eq i8 %v3_10000d8c, 31
  store i1 %v1_10000d9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000d9c, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10000d8c, 32
  br i1 %tmp39, label %dec_label_pc_10000f34, label %dec_label_pc_10000da4

dec_label_pc_10000da4:                            ; preds = %dec_label_pc_10000d7c
  %v0_10000da4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000da4, label %dec_label_pc_10000f5c, label %dec_label_pc_10000da8

dec_label_pc_10000da8:                            ; preds = %dec_label_pc_10000f34, %dec_label_pc_10000da4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10000db0 = load i32, i32* @r24, align 4
  %v2_10000db0 = icmp slt i32 %v0_10000db0, 65535
  %v4_10000db0 = icmp eq i32 %v0_10000db0, 65535
  store i1 %v2_10000db0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000db0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000db0, label %dec_label_pc_10000f74, label %dec_label_pc_10000db8

dec_label_pc_10000db8:                            ; preds = %dec_label_pc_10000f5c, %dec_label_pc_10000da8
  %v1_10000db8 = phi i32 [ %v1_10000f6c, %dec_label_pc_10000f5c ], [ 65535, %dec_label_pc_10000da8 ]
  %v0_10000db8 = load i32, i32* %r16.global-to-local, align 4
  %v2_10000db8 = icmp slt i32 %v0_10000db8, %v1_10000db8
  %v4_10000db8 = icmp eq i32 %v0_10000db8, %v1_10000db8
  store i1 %v2_10000db8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000db8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000db8, label %dec_label_pc_10000f94, label %dec_label_pc_10000dc0

dec_label_pc_10000dc0:                            ; preds = %dec_label_pc_10000f74.dec_label_pc_10000dc0_crit_edge, %dec_label_pc_10000db8
  %v1_10000dc0 = phi i32 [ %v1_10000dc0.pre, %dec_label_pc_10000f74.dec_label_pc_10000dc0_crit_edge ], [ %v1_10000db8, %dec_label_pc_10000db8 ]
  %v0_10000dc0 = load i32, i32* %r17.global-to-local, align 4
  %v2_10000dc0 = icmp slt i32 %v0_10000dc0, %v1_10000dc0
  %v4_10000dc0 = icmp eq i32 %v0_10000dc0, %v1_10000dc0
  store i1 %v2_10000dc0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000dc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000dc0, label %dec_label_pc_10000fa4, label %dec_label_pc_10000dc8

dec_label_pc_10000dc8:                            ; preds = %dec_label_pc_10000f94, %dec_label_pc_10000dc0
  %v0_10000dc8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10000dc8, label %dec_label_pc_10000fb0, label %dec_label_pc_10000dcc

dec_label_pc_10000dcc:                            ; preds = %dec_label_pc_10000fa4, %dec_label_pc_10000dc8
  %v0_10000dcc = load i32, i32* @r28, align 4
  %v1_10000dcc = add i32 %v0_10000dcc, 16
  %v2_10000dcc = inttoptr i32 %v1_10000dcc to i32*
  %v3_10000dcc = load i32, i32* %v2_10000dcc, align 4
  store i32 %v3_10000dcc, i32* %r0.global-to-local, align 4
  %v1_10000dd0 = load i32, i32* @r27, align 4
  %v2_10000dd0 = add i32 %v1_10000dd0, 16
  %v3_10000dd0 = inttoptr i32 %v2_10000dd0 to i32*
  store i32 %v3_10000dcc, i32* %v3_10000dd0, align 4
  br label %dec_label_pc_10000dd4

dec_label_pc_10000dd4:                            ; preds = %dec_label_pc_10000fb0, %dec_label_pc_10000dcc
  %v0_10000dd4 = call i32 @function_10005998()
  store i32 %v0_10000dd4, i32* %r3.global-to-local, align 4
  store i32 %v0_10000dd4, i32* %stack_var_-116, align 4
  %v0_10000ddc = call i32 @function_10005998()
  store i32 %v0_10000ddc, i32* %r3.global-to-local, align 4
  store i32 %v0_10000ddc, i32* %stack_var_-112, align 4
  %v0_10000de4 = call i32 @function_10005998()
  store i32 %v0_10000de4, i32* %stack_var_-108, align 4
  %v0_10000df0 = load i32, i32* @r31, align 4
  store i32 %v0_10000df0, i32* %r3.global-to-local, align 4
  store i32 268439036, i32* @lr, align 4
  %v3_10000df8 = call i32 @function_100092f4(i32 %v0_10000df0, i32 %v2_10000dec, i32 4)
  %v0_10000dfc = load i32, i32* @r31, align 4
  %v1_10000dfc = add i32 %v0_10000dfc, 6
  store i32 %v1_10000dfc, i32* %r3.global-to-local, align 4
  store i32 268439052, i32* @lr, align 4
  %v3_10000e08 = call i32 @function_100092f4(i32 %v1_10000dfc, i32 %v2_10000e00, i32 4)
  %v0_10000e0c = load i32, i32* @r31, align 4
  %v1_10000e0c = add i32 %v0_10000e0c, 4
  store i32 %v1_10000e0c, i32* %r3.global-to-local, align 4
  store i32 268439068, i32* @lr, align 4
  %v3_10000e18 = call i32 @function_100092f4(i32 %v1_10000e0c, i32 %v2_10000d50, i32 2)
  %v0_10000e1c = load i32, i32* @r31, align 4
  %v1_10000e1c = add i32 %v0_10000e1c, 10
  store i32 %v1_10000e1c, i32* %r3.global-to-local, align 4
  store i32 268439084, i32* @lr, align 4
  %v3_10000e28 = call i32 @function_100092f4(i32 %v1_10000e1c, i32 %v2_10000d58, i32 2)
  store i32 %v3_10000e28, i32* %r3.global-to-local, align 4
  %v0_10000e2c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000e2c, label %dec_label_pc_10000e30, label %dec_label_pc_10000fbc

dec_label_pc_10000e30:                            ; preds = %dec_label_pc_10000dd4, %dec_label_pc_10000fbc
  %v0_10000e30 = load i32, i32* @r26, align 4
  %v1_10000e30 = trunc i32 %v0_10000e30 to i16
  %v2_10000e30 = load i32, i32* @r28, align 4
  %v3_10000e30 = add i32 %v2_10000e30, 10
  %v4_10000e30 = inttoptr i32 %v3_10000e30 to i16*
  store i16 %v1_10000e30, i16* %v4_10000e30, align 2
  %v0_10000e38 = load i32, i32* @r28, align 4
  store i32 %v0_10000e38, i32* @r3, align 4
  %v2_10000e3c = call i32 @function_10003ca8(i32 %v0_10000e38, i32 20)
  %v3_10000e3c = trunc i32 %v2_10000e3c to i16
  %v3_10000e44 = load i32, i32* @r28, align 4
  %v4_10000e44 = add i32 %v3_10000e44, 10
  %v5_10000e44 = inttoptr i32 %v4_10000e44 to i16*
  store i16 %v3_10000e3c, i16* %v5_10000e44, align 2
  %v0_10000e48 = load i32, i32* @r27, align 4
  store i32 %v0_10000e48, i32* @r3, align 4
  %v0_10000e4c = load i32, i32* @r26, align 4
  %v1_10000e4c = trunc i32 %v0_10000e4c to i16
  %v3_10000e4c = add i32 %v0_10000e48, 10
  %v4_10000e4c = inttoptr i32 %v3_10000e4c to i16*
  store i16 %v1_10000e4c, i16* %v4_10000e4c, align 2
  %v2_10000e50 = call i32 @function_10003ca8(i32 %v0_10000e48, i32 20)
  %v3_10000e50 = trunc i32 %v2_10000e50 to i16
  %v0_10000e54 = load i32, i32* @r30, align 4
  store i32 %v0_10000e54, i32* @r4, align 4
  %v3_10000e58 = load i32, i32* @r27, align 4
  %v4_10000e58 = add i32 %v3_10000e58, 10
  %v5_10000e58 = inttoptr i32 %v4_10000e58 to i16*
  store i16 %v3_10000e50, i16* %v5_10000e58, align 2
  %v0_10000e5c = load i32, i32* %r22.global-to-local, align 4
  %v0_10000e60 = load i32, i32* @r26, align 4
  %v1_10000e60 = trunc i32 %v0_10000e60 to i16
  %v2_10000e60 = load i32, i32* @r30, align 4
  %v3_10000e60 = add i32 %v2_10000e60, 6
  %v4_10000e60 = inttoptr i32 %v3_10000e60 to i16*
  store i16 %v1_10000e60, i16* %v4_10000e60, align 2
  %v0_10000e64 = load i32, i32* @r27, align 4
  store i32 %v0_10000e64, i32* %r3.global-to-local, align 4
  %v0_10000e68 = load i32, i32* @r30, align 4
  %v1_10000e68 = add i32 %v0_10000e68, 4
  %v2_10000e68 = inttoptr i32 %v1_10000e68 to i16*
  %v3_10000e68 = load i16, i16* %v2_10000e68, align 2
  %v4_10000e68 = zext i16 %v3_10000e68 to i32
  %v4_10000e6c = call i32 @function_10003d0c(i32 %v0_10000e64, i32 %v0_10000e54, i32 %v4_10000e68, i32 %v0_10000e5c)
  %v5_10000e6c = trunc i32 %v4_10000e6c to i16
  store i32 %v4_10000e6c, i32* %r3.global-to-local, align 4
  %v3_10000e70 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10000e70, i32* %r0.global-to-local, align 4
  %v0_10000e74 = load i32, i32* @r28, align 4
  %v1_10000e74 = add i32 %v0_10000e74, 16
  %v2_10000e74 = inttoptr i32 %v1_10000e74 to i32*
  %v3_10000e74 = load i32, i32* %v2_10000e74, align 4
  store i32 %v3_10000e74, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10000e7c = mul i32 %v3_10000e70, 24
  store i32 %v1_10000e7c, i32* %r0.global-to-local, align 4
  %v3_10000e80 = load i32, i32* @r30, align 4
  %v4_10000e80 = add i32 %v3_10000e80, 6
  %v5_10000e80 = inttoptr i32 %v4_10000e80 to i16*
  store i16 %v5_10000e6c, i16* %v5_10000e80, align 2
  %v0_10000e84 = load i32, i32* @r28, align 4
  %v0_10000e88 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10000e88, i32* %r3.global-to-local, align 4
  %v0_10000e8c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000e8c = load i32, i32* @r25, align 4
  %v2_10000e8c = add i32 %v1_10000e8c, %v0_10000e8c
  %v0_10000e90 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000e90 = trunc i32 %v0_10000e90 to i16
  %v5_10000e90 = inttoptr i32 %v2_10000e8c to i16*
  store i16 %v3_10000e90, i16* %v5_10000e90, align 2
  %v0_10000e94 = load i32, i32* %r11.global-to-local, align 4
  %v2_10000e94 = add i32 %v2_10000e8c, 4
  %v3_10000e94 = inttoptr i32 %v2_10000e94 to i32*
  store i32 %v0_10000e94, i32* %v3_10000e94, align 4
  %v0_10000e98 = load i32, i32* %r23.global-to-local, align 4
  %v0_10000e9c = load i32, i32* @r26, align 4
  %v1_10000e9c = trunc i32 %v0_10000e9c to i16
  %v3_10000e9c = add i32 %v2_10000e8c, 2
  %v4_10000e9c = inttoptr i32 %v3_10000e9c to i16*
  store i16 %v1_10000e9c, i16* %v4_10000e9c, align 2
  store i32 268439212, i32* @lr, align 4
  %v6_10000ea8 = call i32 @function_1000a704(i32 %v0_10000e88, i32 %v0_10000e84, i32 %v0_10000e98, i32 16384, i32 %v2_10000e8c, i32 16)
  store i32 %v6_10000ea8, i32* %r3.global-to-local, align 4
  %v3_10000eac = load i32, i32* %stack_var_-120, align 4
  %v1_10000eb0 = add i32 %v3_10000eac, 1
  store i32 %v1_10000eb0, i32* %r9.global-to-local, align 4
  %v1_10000eb4 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000eb4 = icmp slt i32 %v1_10000eb0, %v1_10000eb4
  %v4_10000eb4 = icmp eq i32 %v1_10000eb0, %v1_10000eb4
  store i1 %v2_10000eb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000eb4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10000eb0, i32* %stack_var_-120, align 4
  br i1 %v2_10000eb4, label %dec_label_pc_10000d7c, label %dec_label_pc_10000ec0

dec_label_pc_10000ec0:                            ; preds = %dec_label_pc_10000e30, %dec_label_pc_10000d30
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268439240, i32* @lr, align 4
  %v0_10000ec4 = call i32 @function_10009e00()
  store i32 %v0_10000ec4, i32* %r3.global-to-local, align 4
  store i32 %v2_10000b58, i32* %r0.global-to-local, align 4
  %v2_10000ecc = icmp slt i32 %v2_10000b58, %v0_10000ec4
  %v4_10000ecc = icmp eq i32 %v2_10000b58, %v0_10000ec4
  store i1 %v2_10000ecc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000ecc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000ecc, label %dec_label_pc_10000ed4, label %dec_label_pc_10000d30

dec_label_pc_10000ed4:                            ; preds = %dec_label_pc_10000ec0, %dec_label_pc_100009bc, %dec_label_pc_10000fd8
  store i32 %v0_100009e8, i32* %r0.global-to-local, align 4
  %v1_10000ee8 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100009c4)
  store i32 %v0_10000a04, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a10, i32* %r26.global-to-local, align 4
  store i32 %v0_100009d8, i32* %r27.global-to-local, align 4
  store i32 %v0_10000a1c, i32* %r29.global-to-local, align 4
  store i32 %v0_10000a24, i32* %r30.global-to-local, align 4
  store i32 %v0_10000a28, i32* %r31.global-to-local, align 4
  %v0_10000f30 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000f30

dec_label_pc_10000f34:                            ; preds = %dec_label_pc_10000d7c
  %v1_10000f34 = add i32 %v2_10000d88, 16
  %v2_10000f34 = inttoptr i32 %v1_10000f34 to i32*
  %v3_10000f34 = load i32, i32* %v2_10000f34, align 4
  store i32 %v3_10000f34, i32* %r29.global-to-local, align 4
  %v0_10000f38 = call i32 @function_10005998()
  store i32 %v0_10000f38, i32* %r3.global-to-local, align 4
  %v3_10000f3c = load i32, i32* %stack_var_-120, align 4
  %v1_10000f40 = mul i32 %v3_10000f3c, 24
  %v1_10000f44 = load i32, i32* @r25, align 4
  %v2_10000f44 = add i32 %v1_10000f44, %v1_10000f40
  store i32 %v2_10000f44, i32* %r9.global-to-local, align 4
  %v1_10000f48 = add i32 %v2_10000f44, 20
  %v2_10000f48 = inttoptr i32 %v1_10000f48 to i8*
  %v3_10000f48 = load i8, i8* %v2_10000f48, align 1
  %v4_10000f48 = zext i8 %v3_10000f48 to i32
  store i32 %v4_10000f48, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10000f48, 64
  %v2_10000f4c = zext i8 %tmp to i32
  %v3_10000f4c = lshr i32 %v0_10000f38, %v2_10000f4c
  store i32 %v3_10000f4c, i32* %r3.global-to-local, align 4
  %v0_10000f50 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000f50 = add i32 %v3_10000f4c, %v0_10000f50
  store i32 %v2_10000f50, i32* %r29.global-to-local, align 4
  %v1_10000f54 = load i32, i32* @r28, align 4
  %v2_10000f54 = add i32 %v1_10000f54, 16
  %v3_10000f54 = inttoptr i32 %v2_10000f54 to i32*
  store i32 %v2_10000f50, i32* %v3_10000f54, align 4
  %v0_10000f58 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000f58, label %dec_label_pc_10000f5c, label %dec_label_pc_10000da8

dec_label_pc_10000f5c:                            ; preds = %dec_label_pc_10000f34, %dec_label_pc_10000da4
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10000f60 = call i32 @function_10005998()
  store i32 %v0_10000f60, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10000f68 = load i32, i32* @r28, align 4
  %v2_10000f68 = add i32 %v1_10000f68, 12
  %v3_10000f68 = inttoptr i32 %v2_10000f68 to i32*
  store i32 %v0_10000f60, i32* %v3_10000f68, align 4
  %v0_10000f6c = load i32, i32* @r24, align 4
  %v1_10000f6c = load i32, i32* %r29.global-to-local, align 4
  %v2_10000f6c = icmp slt i32 %v0_10000f6c, %v1_10000f6c
  %v4_10000f6c = icmp eq i32 %v0_10000f6c, %v1_10000f6c
  store i1 %v2_10000f6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000f6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f6c, label %dec_label_pc_10000f74, label %dec_label_pc_10000db8

dec_label_pc_10000f74:                            ; preds = %dec_label_pc_10000f5c, %dec_label_pc_10000da8
  %v0_10000f74 = call i32 @function_10005998()
  %v0_10000f78 = load i32, i32* %r16.global-to-local, align 4
  %v1_10000f78 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000f78 = icmp slt i32 %v0_10000f78, %v1_10000f78
  %v4_10000f78 = icmp eq i32 %v0_10000f78, %v1_10000f78
  store i1 %v2_10000f78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000f78, i1* %cr7_eq.global-to-local, align 1
  %v1_10000f7c = urem i32 %v0_10000f74, 65536
  store i32 %v1_10000f7c, i32* %r3.global-to-local, align 4
  %v1_10000f80 = add nsw i32 %v1_10000f7c, -1000
  store i32 %v1_10000f80, i32* %r0.global-to-local, align 4
  %v1_10000f84 = trunc i32 %v0_10000f74 to i16
  %v2_10000f84 = load i32, i32* @r28, align 4
  %v3_10000f84 = add i32 %v2_10000f84, 4
  %v4_10000f84 = inttoptr i32 %v3_10000f84 to i16*
  store i16 %v1_10000f84, i16* %v4_10000f84, align 2
  %v0_10000f88 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000f88 = sub i32 -1, %v0_10000f88
  store i32 %v1_10000f88, i32* %r0.global-to-local, align 4
  %v1_10000f8c = trunc i32 %v1_10000f88 to i16
  %v2_10000f8c = load i32, i32* @r27, align 4
  %v3_10000f8c = add i32 %v2_10000f8c, 4
  %v4_10000f8c = inttoptr i32 %v3_10000f8c to i16*
  store i16 %v1_10000f8c, i16* %v4_10000f8c, align 2
  br i1 %v4_10000f78, label %dec_label_pc_10000f94, label %dec_label_pc_10000f74.dec_label_pc_10000dc0_crit_edge

dec_label_pc_10000f74.dec_label_pc_10000dc0_crit_edge: ; preds = %dec_label_pc_10000f74
  %v1_10000dc0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10000dc0

dec_label_pc_10000f94:                            ; preds = %dec_label_pc_10000f74, %dec_label_pc_10000db8
  %v0_10000f94 = call i32 @function_10005998()
  %v1_10000f94 = trunc i32 %v0_10000f94 to i16
  store i32 %v0_10000f94, i32* %r3.global-to-local, align 4
  %v0_10000f98 = load i32, i32* %r17.global-to-local, align 4
  %v1_10000f98 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000f98 = icmp slt i32 %v0_10000f98, %v1_10000f98
  %v4_10000f98 = icmp eq i32 %v0_10000f98, %v1_10000f98
  store i1 %v2_10000f98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000f98, i1* %cr7_eq.global-to-local, align 1
  %v3_10000f9c = load i32, i32* @r28, align 4
  %v4_10000f9c = add i32 %v3_10000f9c, 58
  %v5_10000f9c = inttoptr i32 %v4_10000f9c to i16*
  store i16 %v1_10000f94, i16* %v5_10000f9c, align 2
  br i1 %v4_10000f98, label %dec_label_pc_10000fa4, label %dec_label_pc_10000dc8

dec_label_pc_10000fa4:                            ; preds = %dec_label_pc_10000f94, %dec_label_pc_10000dc0
  %v0_10000fa4 = call i32 @function_10005998()
  %v1_10000fa4 = trunc i32 %v0_10000fa4 to i16
  store i32 %v0_10000fa4, i32* %r3.global-to-local, align 4
  %v3_10000fa8 = load i32, i32* @r30, align 4
  %v4_10000fa8 = add i32 %v3_10000fa8, 2
  %v5_10000fa8 = inttoptr i32 %v4_10000fa8 to i16*
  store i16 %v1_10000fa4, i16* %v5_10000fa8, align 2
  %v0_10000fac = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10000fac, label %dec_label_pc_10000fb0, label %dec_label_pc_10000dcc

dec_label_pc_10000fb0:                            ; preds = %dec_label_pc_10000fa4, %dec_label_pc_10000dc8
  %v0_10000fb0 = call i32 @function_10005998()
  store i32 %v0_10000fb0, i32* %r3.global-to-local, align 4
  %v1_10000fb4 = load i32, i32* @r27, align 4
  %v2_10000fb4 = add i32 %v1_10000fb4, 16
  %v3_10000fb4 = inttoptr i32 %v2_10000fb4 to i32*
  store i32 %v0_10000fb0, i32* %v3_10000fb4, align 4
  br label %dec_label_pc_10000dd4

dec_label_pc_10000fbc:                            ; preds = %dec_label_pc_10000dd4
  %v0_10000fbc = load i32, i32* @r30, align 4
  %v1_10000fbc = add i32 %v0_10000fbc, 8
  store i32 %v1_10000fbc, i32* @r29, align 4
  %v0_10000fc0 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10000fc0, i32* @r4, align 4
  store i32 %v1_10000fbc, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10000fcc.13 to i32), i32* @lr, align 4
  %v0_10000fc8 = call i32 @function_10005a58()
  store i32 %v0_10000fc8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10000fd0 = load i32, i32* @r29, align 4
  %v2_10000fd0 = load i32, i32* %r18.global-to-local, align 4
  %v4_10000fd0 = add i32 %v2_10000fd0, %v1_10000fd0
  %v5_10000fd0 = inttoptr i32 %v4_10000fd0 to i8*
  store i8 0, i8* %v5_10000fd0, align 1
  br label %dec_label_pc_10000e30

dec_label_pc_10000fd8:                            ; preds = %dec_label_pc_10000b78
  %v0_10000fd8 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10000fd8, i32* %r3.global-to-local, align 4
  store i32 268439520, i32* @lr, align 4
  %v0_10000fdc = call i32 @function_10009a30()
  store i32 %v0_10000fdc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000ed4

; uselistorder directives
  uselistorder i32 %v0_10000fa4, { 1, 0 }
  uselistorder i32 %v0_10000f94, { 1, 0 }
  uselistorder i32 %v1_10000f88, { 1, 0 }
  uselistorder i32 %v1_10000f7c, { 1, 0 }
  uselistorder i32 %v0_10000f74, { 1, 0 }
  uselistorder i32 %v1_10000f6c, { 1, 2, 0 }
  uselistorder i32 %v0_10000ec4, { 1, 0, 2 }
  uselistorder i32 %v1_10000eb0, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10000e8c, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10000e6c, { 1, 0 }
  uselistorder i32 %v1_10000dc0, { 1, 0 }
  uselistorder i32 %v1_10000db8, { 0, 2, 1 }
  uselistorder i32 %v4_10000d84, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000d80, { 1, 0 }
  uselistorder i32 %v2_10000d3c, { 2, 1, 0 }
  uselistorder i32 %v1_10000d04, { 1, 0 }
  uselistorder i32 %v1_10000c44, { 1, 0 }
  uselistorder i32 %v1_10000c3c, { 1, 0 }
  uselistorder i32 %v1_10000c1c, { 0, 2, 1 }
  uselistorder i32 %v1_10000bd0, { 1, 0 }
  uselistorder i32 %v0_10000bd0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10000bbc, { 2, 1, 0 }
  uselistorder i32 %v4_10000b90, { 1, 0, 2 }
  uselistorder i32 %v3_10000b68, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10000b58, { 1, 2, 0 }
  uselistorder i32 %v5_10000b44, { 1, 0 }
  uselistorder i8 %v5_10000a64, { 1, 0 }
  uselistorder i32* %stack_var_-120, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 8, 9, 20, 21 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 29, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27, 0, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 1 }
  uselistorder i32* %r29.global-to-local, { 8, 7, 9, 0, 1, 3, 2, 4, 5, 6, 10, 11, 12, 13, 17, 14, 15, 16 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 15, 16, 30, 31, 32, 33, 34 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ed4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000e30, { 1, 0 }
  uselistorder label %dec_label_pc_10000d30, { 1, 0 }
  uselistorder label %dec_label_pc_10000cf0, { 1, 0 }
  uselistorder label %dec_label_pc_10000c8c, { 1, 0 }
  uselistorder label %dec_label_pc_10000c2c, { 1, 0, 2 }
}

define i32 @function_10000fe4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000fe4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10000fe8 = load i32, i32* @lr, align 4
  store i32 %v0_10000fe8, i32* %r0.global-to-local, align 4
  %v0_10000fec = call i32 @__asm_mfcr()
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001000 = load i32, i32* @r27, align 4
  store i32 %v0_10000fec, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_10001010 = load i32, i32* %r0.global-to-local, align 4
  %v0_1000102c = load i32, i32* @r24, align 4
  %v0_10001030 = load i32, i32* @r25, align 4
  store i32 %arg3, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001044 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  %v0_1000104c = load i32, i32* @r30, align 4
  %v0_10001050 = load i32, i32* @r31, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 268439656, i32* @lr, align 4
  %v2_10001064 = call i32 @function_1000aadc(i32 %arg2, i32 4)
  store i32 %v2_10001064, i32* %r21.global-to-local, align 4
  %v0_1000106c = load i32, i32* @r29, align 4
  %v0_10001078 = load i32, i32* @r28, align 4
  store i32 %v0_10001078, i32* %r3.global-to-local, align 4
  store i32 268439680, i32* @lr, align 4
  %v4_1000107c = inttoptr i32 %v0_1000106c to i32*
  %v5_1000107c = call i32 @function_10000300(i32 %v0_10001078, i32* %v4_1000107c, i32 2, i32 0)
  %v5_1000108c = trunc i32 %v5_1000107c to i8
  %v0_10001094 = load i32, i32* @r29, align 4
  %v0_10001098 = load i32, i32* @r28, align 4
  store i32 %v0_10001098, i32* %r3.global-to-local, align 4
  store i32 268439712, i32* @lr, align 4
  %v4_1000109c = inttoptr i32 %v0_10001094 to i32*
  %v5_1000109c = call i32 @function_10000300(i32 %v0_10001098, i32* %v4_1000109c, i32 3, i32 65535)
  %v0_100010a0 = load i32, i32* @r29, align 4
  store i32 %v5_1000109c, i32* %r25.global-to-local, align 4
  %v0_100010b0 = load i32, i32* @r28, align 4
  store i32 %v0_100010b0, i32* %r3.global-to-local, align 4
  store i32 268439736, i32* @lr, align 4
  %v4_100010b4 = inttoptr i32 %v0_100010a0 to i32*
  %v5_100010b4 = call i32 @function_10000300(i32 %v0_100010b0, i32* %v4_100010b4, i32 4, i32 64)
  %v0_100010b8 = load i32, i32* @r29, align 4
  %v1_100010c4 = urem i32 %v5_100010b4, 256
  store i32 %v1_100010c4, i32* %r14.global-to-local, align 4
  %v0_100010c8 = load i32, i32* @r28, align 4
  store i32 %v0_100010c8, i32* %r3.global-to-local, align 4
  store i32 268439760, i32* @lr, align 4
  %v4_100010cc = inttoptr i32 %v0_100010b8 to i32*
  %v5_100010cc = call i32 @function_10000300(i32 %v0_100010c8, i32* %v4_100010cc, i32 5, i32 1)
  %v0_100010dc = load i32, i32* @r29, align 4
  %v1_100010e0 = urem i32 %v5_100010cc, 256
  store i32 %v1_100010e0, i32* %r23.global-to-local, align 4
  %v0_100010e4 = load i32, i32* @r28, align 4
  store i32 %v0_100010e4, i32* %r3.global-to-local, align 4
  store i32 268439788, i32* @lr, align 4
  %v4_100010e8 = inttoptr i32 %v0_100010dc to i32*
  %v5_100010e8 = call i32 @function_10000300(i32 %v0_100010e4, i32* %v4_100010e8, i32 6, i32 65535)
  %v0_100010f0 = load i32, i32* @r29, align 4
  store i32 %v5_100010e8, i32* %r24.global-to-local, align 4
  %v0_10001100 = load i32, i32* @r28, align 4
  store i32 %v0_10001100, i32* %r3.global-to-local, align 4
  store i32 268439816, i32* @lr, align 4
  %v4_10001104 = inttoptr i32 %v0_100010f0 to i32*
  %v5_10001104 = call i32 @function_10000300(i32 %v0_10001100, i32* %v4_10001104, i32 7, i32 65535)
  %v0_10001108 = load i32, i32* @r29, align 4
  store i32 %v5_10001104, i32* %r30.global-to-local, align 4
  %v0_10001118 = load i32, i32* @r28, align 4
  store i32 %v0_10001118, i32* %r3.global-to-local, align 4
  store i32 268439840, i32* @lr, align 4
  %v4_1000111c = inttoptr i32 %v0_10001108 to i32*
  %v5_1000111c = call i32 @function_10000300(i32 %v0_10001118, i32* %v4_1000111c, i32 0, i32 512)
  %v0_10001120 = load i32, i32* @r29, align 4
  store i32 %v5_1000111c, i32* %r19.global-to-local, align 4
  %v0_10001130 = load i32, i32* @r28, align 4
  store i32 %v0_10001130, i32* %r3.global-to-local, align 4
  store i32 268439864, i32* @lr, align 4
  %v4_10001134 = inttoptr i32 %v0_10001120 to i32*
  %v5_10001134 = call i32 @function_10000300(i32 %v0_10001130, i32* %v4_10001134, i32 1, i32 1)
  %v0_10001138 = load i32, i32* @r29, align 4
  %v1_1000113c = urem i32 %v5_10001134, 256
  %v0_1000114c = load i32, i32* @r28, align 4
  store i32 %v0_1000114c, i32* %r3.global-to-local, align 4
  store i32 268439892, i32* @lr, align 4
  %v4_10001150 = inttoptr i32 %v0_10001138 to i32*
  %v5_10001150 = call i32 @function_10000300(i32 %v0_1000114c, i32* %v4_10001150, i32 18, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001158 = load i32, i32* @global_var_1001d188.12, align 4
  %v0_1000115c = load i32, i32* @r29, align 4
  store i32 %v5_10001150, i32* @r31, align 4
  %v0_10001168 = load i32, i32* @r28, align 4
  store i32 %v0_10001168, i32* %r3.global-to-local, align 4
  store i32 268439920, i32* @lr, align 4
  %v4_1000116c = inttoptr i32 %v0_1000115c to i32*
  %v5_1000116c = call i32 @function_10000300(i32 %v0_10001168, i32* %v4_1000116c, i32 19, i32 %v3_10001158)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268439932, i32* @lr, align 4
  %v0_10001178 = call i32 @function_10009e00()
  %v1_10001180 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001180 = add i32 %v1_10001180, %v0_10001178
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268439956, i32* @lr, align 4
  %v3_10001190 = call i32 @function_1000a780(i32 2, i32 3, i32 6)
  store i32 %v3_10001190, i32* %r3.global-to-local, align 4
  %v1_10001194 = icmp slt i32 %v3_10001190, -1
  %v3_10001194 = icmp eq i32 %v3_10001190, -1
  store i1 %v1_10001194, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001194, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001190, i32* %r22.global-to-local, align 4
  br i1 %v3_10001194, label %dec_label_pc_1000148c, label %dec_label_pc_100011a0

dec_label_pc_100011a0:                            ; preds = %dec_label_pc_10000fe4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100011ac = ptrtoint i32* %stack_var_-120 to i32
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268439996, i32* @lr, align 4
  %v4_100011b8 = call i32 @function_1000a744(i32 0, i32 3, i32 %v2_100011ac, i32 4)
  store i32 %v4_100011b8, i32* %r3.global-to-local, align 4
  %v1_100011bc = icmp slt i32 %v4_100011b8, -1
  %v3_100011bc = icmp eq i32 %v4_100011b8, -1
  store i1 %v1_100011bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100011bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100011bc, label %dec_label_pc_10001590, label %dec_label_pc_100011c4

dec_label_pc_100011c4:                            ; preds = %dec_label_pc_100011a0
  %v0_100011c4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100011c4 = icmp slt i32 %v0_100011c4, 0
  %v3_100011c4 = icmp eq i32 %v0_100011c4, 0
  store i1 %v1_100011c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100011c4, i1* %cr7_eq.global-to-local, align 1
  %v0_100011c8 = load i32, i32* @r31, align 4
  %v1_100011c8 = urem i32 %v0_100011c8, 256
  store i32 %v1_100011c8, i32* @r31, align 4
  %v0_100011cc = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_100011cc, i32* %stack_var_-120, align 4
  %v0_100011d0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100011d0 = urem i32 %v0_100011d0, 65536
  store i32 %v1_100011d0, i32* @r25, align 4
  %v0_100011d4 = call i32 @__asm_mfcr()
  store i32 %v0_100011d4, i32* %r3.global-to-local, align 4
  %v1_100011d8 = mul i32 %v0_100011d4, 268435456
  store i32 %v1_100011d8, i32* %r0.global-to-local, align 4
  %v0_100011dc = load i32, i32* %r24.global-to-local, align 4
  %v1_100011dc = urem i32 %v0_100011dc, 65536
  store i32 %v1_100011dc, i32* %r17.global-to-local, align 4
  %v0_100011e0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100011e0 = urem i32 %v0_100011e0, 65536
  store i32 %v1_100011e0, i32* %r18.global-to-local, align 4
  %v0_100011e4 = load i32, i32* @r31, align 4
  %v0_100011ec = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100011ec = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100011ec = or i1 %v0_100011ec, %v1_100011ec
  br i1 %v2_100011ec, label %dec_label_pc_1000134c.preheader, label %dec_label_pc_100011f0

dec_label_pc_100011f0:                            ; preds = %dec_label_pc_100011c4
  %v0_100011f0 = load i32, i32* %r23.global-to-local, align 4
  %v3_100011f0 = icmp eq i32 %v0_100011f0, 0
  store i1 %v3_100011f0, i1* %cr3_eq.global-to-local, align 1
  %v3_100011f4 = icmp eq i32 %v0_100011e4, 0
  store i1 %v3_100011f4, i1* %cr4_eq.global-to-local, align 1
  %v0_100011f8 = load i32, i32* %r19.global-to-local, align 4
  %v1_100011f8 = urem i32 %v0_100011f8, 65536
  %v0_100011fc = load i32, i32* @r25, align 4
  %v1_100011fc = sub i32 -1, %v0_100011fc
  store i32 %v1_100011fc, i32* %r11.global-to-local, align 4
  %v1_10001204 = add nuw nsw i32 %v1_100011f8, 52
  store i32 %v1_10001204, i32* %r0.global-to-local, align 4
  %v1_10001208 = add nuw nsw i32 %v1_100011f8, 28
  store i32 %v1_10001208, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_100011f8, 52
  %v1_1000120c = urem i32 %fold, 65536
  store i32 %v1_1000120c, i32* %r23.global-to-local, align 4
  %fold5 = add i32 %v0_100011f8, 28
  %v1_10001210 = urem i32 %fold5, 65536
  store i32 %v1_10001210, i32* %r24.global-to-local, align 4
  %v1_10001214 = urem i32 %v1_100011fc, 65536
  store i32 %v1_10001214, i32* %r27.global-to-local, align 4
  %fold6 = add i32 %v0_100011f8, 8
  %v1_10001218 = urem i32 %fold6, 65536
  store i32 %v1_10001218, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_1000129c = sext i8 %v5_1000108c to i32
  br label %dec_label_pc_10001254

dec_label_pc_1000122c:                            ; preds = %dec_label_pc_1000130c
  %v0_1000122c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000122c = add i32 %v0_1000122c, 16
  %v2_1000122c = inttoptr i32 %v1_1000122c to i32*
  %v3_1000122c = load i32, i32* %v2_1000122c, align 4
  store i32 %v3_1000122c, i32* %r0.global-to-local, align 4
  %v0_10001230 = load i32, i32* @r28, align 4
  %v1_10001230 = trunc i32 %v0_10001230 to i16
  %v2_10001230 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001230 = add i32 %v2_10001230, 4
  %v4_10001230 = inttoptr i32 %v3_10001230 to i16*
  store i16 %v1_10001230, i16* %v4_10001230, align 2
  %v0_10001234 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001234 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001234 = add i32 %v1_10001234, 16
  %v3_10001234 = inttoptr i32 %v2_10001234 to i32*
  store i32 %v0_10001234, i32* %v3_10001234, align 4
  %v0_10001238 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001238 = trunc i32 %v0_10001238 to i16
  %v2_10001238 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001238 = inttoptr i32 %v2_10001238 to i16*
  store i16 %v1_10001238, i16* %v3_10001238, align 2
  %v3_1000123c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000123c, i32* %r9.global-to-local, align 4
  %v0_10001240 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001240 = trunc i32 %v0_10001240 to i16
  %v2_10001240 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001240 = add i32 %v2_10001240, 2
  %v4_10001240 = inttoptr i32 %v3_10001240 to i16*
  store i16 %v1_10001240, i16* %v4_10001240, align 2
  %v0_10001244 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001244 = add i32 %v0_10001244, 1
  %v1_10001248 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001248 = icmp slt i32 %v1_10001244, %v1_10001248
  %v4_10001248 = icmp eq i32 %v1_10001244, %v1_10001248
  store i1 %v2_10001248, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001248, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001244, i32* %stack_var_-120, align 4
  br i1 %v2_10001248, label %dec_label_pc_10001254, label %dec_label_pc_1000134c.preheader

dec_label_pc_10001254:                            ; preds = %dec_label_pc_1000122c, %dec_label_pc_10001328, %dec_label_pc_100011f0
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268440160, i32* @lr, align 4
  %v2_1000125c = call i32 @function_1000aadc(i32 1510, i32 4)
  store i32 %v2_1000125c, i32* %r3.global-to-local, align 4
  %v3_10001260 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10001260, i32* %r9.global-to-local, align 4
  %v0_10001264 = load i32, i32* @r31, align 4
  %v1_10001264 = mul i32 %v0_10001264, 4
  store i32 %v1_10001264, i32* %r0.global-to-local, align 4
  %v1_10001268 = load i32, i32* %r21.global-to-local, align 4
  %v3_10001268 = add i32 %v1_10001268, %v1_10001264
  %v4_10001268 = inttoptr i32 %v3_10001268 to i32*
  store i32 %v2_1000125c, i32* %v4_10001268, align 4
  %v0_1000126c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000126c = mul i32 %v0_1000126c, 4
  store i32 %v1_1000126c, i32* %r9.global-to-local, align 4
  %v1_10001270 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001270 = add i32 %v1_10001270, %v1_1000126c
  %v3_10001270 = inttoptr i32 %v2_10001270 to i32*
  %v4_10001270 = load i32, i32* %v3_10001270, align 4
  store i32 %v4_10001270, i32* %r29.global-to-local, align 4
  %v1_10001274 = inttoptr i32 %v4_10001270 to i32*
  %v2_10001274 = load i32, i32* %v1_10001274, align 4
  store i32 %v2_10001274, i32* %r0.global-to-local, align 4
  %v1_10001278 = add i32 %v4_10001270, 24
  store i32 %v1_10001278, i32* %r31.global-to-local, align 4
  %v0_1000127c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000127c = trunc i32 %v0_1000127c to i8
  %v3_1000127c = add i32 %v4_10001270, 8
  %v4_1000127c = inttoptr i32 %v3_1000127c to i8*
  store i8 %v1_1000127c, i8* %v4_1000127c, align 1
  %v0_10001280 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001280 = add i32 %v0_10001280, 44
  store i32 %v1_10001280, i32* %r30.global-to-local, align 4
  %v1_10001284 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001284, i32* %r0.global-to-local, align 4
  %v0_10001288 = load i32, i32* @r25, align 4
  %v1_10001288 = trunc i32 %v0_10001288 to i16
  %v2_10001288 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001288 = add i32 %v2_10001288, 4
  %v4_10001288 = inttoptr i32 %v3_10001288 to i16*
  store i16 %v1_10001288, i16* %v4_10001288, align 2
  %v1_1000128c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10001290 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001290 = add i32 %v0_10001290, 20
  store i32 %v1_10001290, i32* %r9.global-to-local, align 4
  %v2_10001294 = inttoptr i32 %v0_10001290 to i32*
  store i32 %v1_1000128c, i32* %v2_10001294, align 4
  %v0_10001298 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001298 = trunc i32 %v0_10001298 to i16
  %v2_10001298 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001298 = add i32 %v2_10001298, 2
  %v4_10001298 = inttoptr i32 %v3_10001298 to i16*
  store i16 %v1_10001298, i16* %v4_10001298, align 2
  store i32 %v4_1000129c, i32* %r0.global-to-local, align 4
  %v2_100012a0 = load i32, i32* %r29.global-to-local, align 4
  %v3_100012a0 = add i32 %v2_100012a0, 1
  %v4_100012a0 = inttoptr i32 %v3_100012a0 to i8*
  store i8 %v5_1000108c, i8* %v4_100012a0, align 1
  %v0_100012a4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100012a4, label %dec_label_pc_100012b0, label %dec_label_pc_100012a8

dec_label_pc_100012a8:                            ; preds = %dec_label_pc_10001254
  %v2_100012ac = load i32, i32* %r29.global-to-local, align 4
  %v3_100012ac = add i32 %v2_100012ac, 6
  %v4_100012ac = inttoptr i32 %v3_100012ac to i16*
  store i16 16384, i16* %v4_100012ac, align 2
  br label %dec_label_pc_100012b0

dec_label_pc_100012b0:                            ; preds = %dec_label_pc_10001254, %dec_label_pc_100012a8
  store i32 47, i32* %r11.global-to-local, align 4
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_100012b8 = load i32, i32* %r29.global-to-local, align 4
  %v3_100012b8 = add i32 %v2_100012b8, 9
  %v4_100012b8 = inttoptr i32 %v3_100012b8 to i8*
  store i8 47, i8* %v4_100012b8, align 1
  %v0_100012bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100012bc = trunc i32 %v0_100012bc to i16
  %v2_100012bc = load i32, i32* %r9.global-to-local, align 4
  %v3_100012bc = add i32 %v2_100012bc, 2
  %v4_100012bc = inttoptr i32 %v3_100012bc to i16*
  store i16 %v1_100012bc, i16* %v4_100012bc, align 2
  %v3_100012c0 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100012c0, i32* %r9.global-to-local, align 4
  %v0_100012c4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100012c4 = add i32 %v0_100012c4, 24
  %v2_100012c4 = inttoptr i32 %v1_100012c4 to i32*
  %v3_100012c4 = load i32, i32* %v2_100012c4, align 4
  store i32 %v3_100012c4, i32* %r0.global-to-local, align 4
  %v1_100012cc = mul i32 %v3_100012c0, 24
  store i32 %v1_100012cc, i32* %r9.global-to-local, align 4
  %v1_100012d0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100012d0, i32* %r0.global-to-local, align 4
  %v1_100012d4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100012d4 = add i32 %v1_100012d4, 12
  %v3_100012d4 = inttoptr i32 %v2_100012d4 to i32*
  store i32 %v5_1000116c, i32* %v3_100012d4, align 4
  %v0_100012d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100012d8 = load i32, i32* @r26, align 4
  %v2_100012d8 = add i32 %v1_100012d8, %v0_100012d8
  store i32 %v2_100012d8, i32* %r9.global-to-local, align 4
  %v1_100012dc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100012dc, i32* %r0.global-to-local, align 4
  %v0_100012e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100012e0 = add i32 %v0_100012e0, 16
  %v2_100012e0 = inttoptr i32 %v1_100012e0 to i32*
  %v3_100012e0 = load i32, i32* %v2_100012e0, align 4
  store i32 %v3_100012e0, i32* %r11.global-to-local, align 4
  %v1_100012e4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100012e4 = add i32 %v1_100012e4, 24
  %v3_100012e4 = inttoptr i32 %v2_100012e4 to i32*
  store i32 %v1_100012dc, i32* %v3_100012e4, align 4
  %v0_100012e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100012e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100012e8 = add i32 %v1_100012e8, 16
  %v3_100012e8 = inttoptr i32 %v2_100012e8 to i32*
  store i32 %v0_100012e8, i32* %v3_100012e8, align 4
  store i32 %v4_1000129c, i32* %r11.global-to-local, align 4
  %v0_100012f0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100012f0 = trunc i32 %v0_100012f0 to i16
  %v2_100012f0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100012f0 = add i32 %v2_100012f0, 2
  %v4_100012f0 = inttoptr i32 %v3_100012f0 to i16*
  store i16 %v1_100012f0, i16* %v4_100012f0, align 2
  %v0_100012f4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100012f4 = trunc i32 %v0_100012f4 to i8
  %v2_100012f4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100012f4 = add i32 %v2_100012f4, 1
  %v4_100012f4 = inttoptr i32 %v3_100012f4 to i8*
  store i8 %v1_100012f4, i8* %v4_100012f4, align 1
  %v0_100012f8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100012f8 = trunc i32 %v0_100012f8 to i16
  %v2_100012f8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100012f8 = add i32 %v2_100012f8, 4
  %v4_100012f8 = inttoptr i32 %v3_100012f8 to i16*
  store i16 %v1_100012f8, i16* %v4_100012f8, align 2
  %v0_100012fc = load i32, i32* %r14.global-to-local, align 4
  %v1_100012fc = trunc i32 %v0_100012fc to i8
  %v2_100012fc = load i32, i32* %r31.global-to-local, align 4
  %v3_100012fc = add i32 %v2_100012fc, 8
  %v4_100012fc = inttoptr i32 %v3_100012fc to i8*
  store i8 %v1_100012fc, i8* %v4_100012fc, align 1
  %v0_10001300 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001300, label %dec_label_pc_1000130c, label %dec_label_pc_10001304

dec_label_pc_10001304:                            ; preds = %dec_label_pc_100012b0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001308 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001308 = add i32 %v2_10001308, 6
  %v4_10001308 = inttoptr i32 %v3_10001308 to i16*
  store i16 16384, i16* %v4_10001308, align 2
  br label %dec_label_pc_1000130c

dec_label_pc_1000130c:                            ; preds = %dec_label_pc_100012b0, %dec_label_pc_10001304
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10001310 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001310 = add i32 %v2_10001310, 9
  %v4_10001310 = inttoptr i32 %v3_10001310 to i8*
  store i8 17, i8* %v4_10001310, align 1
  %v0_10001314 = call i32 @function_10005998()
  store i32 %v0_10001314, i32* %r3.global-to-local, align 4
  %v1_10001318 = add i32 %v0_10001314, -1024
  store i32 %v1_10001318, i32* %r0.global-to-local, align 4
  %v1_1000131c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000131c = add i32 %v1_1000131c, 12
  %v3_1000131c = inttoptr i32 %v2_1000131c to i32*
  store i32 %v0_10001314, i32* %v3_1000131c, align 4
  %v0_10001320 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001320 = sub i32 -1, %v0_10001320
  store i32 %v1_10001320, i32* %r0.global-to-local, align 4
  %v0_10001324 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001324, label %dec_label_pc_10001328, label %dec_label_pc_1000122c

dec_label_pc_10001328:                            ; preds = %dec_label_pc_1000130c
  %v1_10001328 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001328 = add i32 %v1_10001328, 16
  %v3_10001328 = inttoptr i32 %v2_10001328 to i32*
  store i32 %v1_10001320, i32* %v3_10001328, align 4
  %v0_1000132c = load i32, i32* @r28, align 4
  %v1_1000132c = trunc i32 %v0_1000132c to i16
  %v2_1000132c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000132c = add i32 %v2_1000132c, 4
  %v4_1000132c = inttoptr i32 %v3_1000132c to i16*
  store i16 %v1_1000132c, i16* %v4_1000132c, align 2
  %v3_10001330 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10001330, i32* %r9.global-to-local, align 4
  %v0_10001334 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001334 = trunc i32 %v0_10001334 to i16
  %v2_10001334 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001334 = inttoptr i32 %v2_10001334 to i16*
  store i16 %v1_10001334, i16* %v3_10001334, align 2
  %v0_10001338 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001338 = add i32 %v0_10001338, 1
  store i32 %v1_10001338, i32* @r31, align 4
  %v0_1000133c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000133c = trunc i32 %v0_1000133c to i16
  %v2_1000133c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000133c = add i32 %v2_1000133c, 2
  %v4_1000133c = inttoptr i32 %v3_1000133c to i16*
  store i16 %v1_1000133c, i16* %v4_1000133c, align 2
  %v0_10001340 = load i32, i32* @r31, align 4
  %v1_10001340 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001340 = icmp slt i32 %v0_10001340, %v1_10001340
  %v4_10001340 = icmp eq i32 %v0_10001340, %v1_10001340
  store i1 %v2_10001340, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001340, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10001340, i32* %stack_var_-120, align 4
  br i1 %v2_10001340, label %dec_label_pc_10001254, label %dec_label_pc_1000134c.preheader

dec_label_pc_1000134c.preheader:                  ; preds = %dec_label_pc_10001328, %dec_label_pc_1000122c, %dec_label_pc_100011c4
  %v2_10001358 = urem i32 %v0_100011d4, 16
  %v1_10001360 = mul nuw i32 %v2_10001358, 268435456
  %v3_1000137c = icmp eq i32 %v0_100011e4, 0
  %v3_10001380 = icmp eq i32 %v5_1000116c, -1
  %v3_10001388 = icmp eq i32 %v1_1000113c, 0
  br label %dec_label_pc_1000134c

dec_label_pc_1000134c:                            ; preds = %dec_label_pc_1000134c.preheader, %dec_label_pc_10001478
  store i32 0, i32* %stack_var_-120, align 4
  store i32 %v2_10001358, i32* %r0.global-to-local, align 4
  %v1_1000135c = call %0 @__asm_mtcrf(i32 1, i32 %v2_10001358)
  store i32 %v1_10001360, i32* %r0.global-to-local, align 4
  %v0_10001364 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10001364 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10001364 = or i1 %v0_10001364, %v1_10001364
  br i1 %v2_10001364, label %dec_label_pc_10001478, label %dec_label_pc_10001368

dec_label_pc_10001368:                            ; preds = %dec_label_pc_1000134c
  store i32 %v0_100011e4, i32* %r0.global-to-local, align 4
  %v0_1000136c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000136c = add i32 %v0_1000136c, 8
  store i32 %v1_1000136c, i32* %r23.global-to-local, align 4
  %v1_10001374 = add i32 %v0_1000136c, 52
  store i32 %v1_10001374, i32* @r24, align 4
  store i32 %v1_1000113c, i32* %r11.global-to-local, align 4
  store i1 %v3_1000137c, i1* %cr4_eq.global-to-local, align 1
  store i1 %v3_10001380, i1* %cr2_eq.global-to-local, align 1
  store i32 0, i32* %r9.global-to-local, align 4
  store i1 %v3_10001388, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10001390

dec_label_pc_10001390:                            ; preds = %dec_label_pc_100013e8, %dec_label_pc_10001368
  %v0_10001390 = phi i32 [ %v1_10001468, %dec_label_pc_100013e8 ], [ 0, %dec_label_pc_10001368 ]
  %v1_10001390 = mul i32 %v0_10001390, 24
  store i32 %v1_10001390, i32* %r0.global-to-local, align 4
  %v1_10001394 = mul i32 %v0_10001390, 4
  store i32 %v1_10001394, i32* %r11.global-to-local, align 4
  %v1_10001398 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001398 = add i32 %v1_10001398, %v1_10001394
  %v3_10001398 = inttoptr i32 %v2_10001398 to i32*
  %v4_10001398 = load i32, i32* %v3_10001398, align 4
  store i32 %v4_10001398, i32* @r28, align 4
  %v1_1000139c = load i32, i32* @r26, align 4
  %v2_1000139c = add i32 %v1_1000139c, %v1_10001390
  %v1_100013a0 = add i32 %v2_1000139c, 20
  %v2_100013a0 = inttoptr i32 %v1_100013a0 to i8*
  %v3_100013a0 = load i8, i8* %v2_100013a0, align 1
  %v4_100013a0 = zext i8 %v3_100013a0 to i32
  store i32 %v4_100013a0, i32* %r9.global-to-local, align 4
  %v1_100013a4 = add i32 %v4_10001398, 24
  store i32 %v1_100013a4, i32* @r27, align 4
  %v1_100013a8 = add i32 %v4_10001398, 44
  store i32 %v1_100013a8, i32* @r31, align 4
  %v1_100013ac = icmp ult i8 %v3_100013a0, 31
  %v3_100013ac = icmp eq i8 %v3_100013a0, 31
  store i1 %v1_100013ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100013ac, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_100013a0, 32
  br i1 %tmp35, label %dec_label_pc_100014ec, label %dec_label_pc_100013b4

dec_label_pc_100013b4:                            ; preds = %dec_label_pc_10001390
  %v0_100013b4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100013b4, label %dec_label_pc_10001514, label %dec_label_pc_100013b8

dec_label_pc_100013b8:                            ; preds = %dec_label_pc_100014ec, %dec_label_pc_100013b4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_100013c0 = load i32, i32* @r25, align 4
  %v2_100013c0 = icmp slt i32 %v0_100013c0, 65535
  %v4_100013c0 = icmp eq i32 %v0_100013c0, 65535
  store i1 %v2_100013c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100013c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100013c0, label %dec_label_pc_1000152c, label %dec_label_pc_100013c8

dec_label_pc_100013c8:                            ; preds = %dec_label_pc_10001514, %dec_label_pc_100013b8
  %v1_100013c8 = phi i32 [ %v1_10001524, %dec_label_pc_10001514 ], [ 65535, %dec_label_pc_100013b8 ]
  %v0_100013c8 = load i32, i32* %r17.global-to-local, align 4
  %v2_100013c8 = icmp slt i32 %v0_100013c8, %v1_100013c8
  %v4_100013c8 = icmp eq i32 %v0_100013c8, %v1_100013c8
  store i1 %v2_100013c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100013c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100013c8, label %dec_label_pc_1000154c, label %dec_label_pc_100013d0

dec_label_pc_100013d0:                            ; preds = %dec_label_pc_1000152c.dec_label_pc_100013d0_crit_edge, %dec_label_pc_100013c8
  %v1_100013d0 = phi i32 [ %v1_100013d0.pre, %dec_label_pc_1000152c.dec_label_pc_100013d0_crit_edge ], [ %v1_100013c8, %dec_label_pc_100013c8 ]
  %v0_100013d0 = load i32, i32* %r18.global-to-local, align 4
  %v2_100013d0 = icmp slt i32 %v0_100013d0, %v1_100013d0
  %v4_100013d0 = icmp eq i32 %v0_100013d0, %v1_100013d0
  store i1 %v2_100013d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100013d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100013d0, label %dec_label_pc_1000155c, label %dec_label_pc_100013d8

dec_label_pc_100013d8:                            ; preds = %dec_label_pc_1000154c, %dec_label_pc_100013d0
  %v0_100013d8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100013d8, label %dec_label_pc_10001568, label %dec_label_pc_100013dc

dec_label_pc_100013dc:                            ; preds = %dec_label_pc_1000155c, %dec_label_pc_100013d8
  %v0_100013dc = load i32, i32* @r28, align 4
  %v1_100013dc = add i32 %v0_100013dc, 16
  %v2_100013dc = inttoptr i32 %v1_100013dc to i32*
  %v3_100013dc = load i32, i32* %v2_100013dc, align 4
  store i32 %v3_100013dc, i32* %r0.global-to-local, align 4
  %v1_100013e0 = load i32, i32* @r27, align 4
  %v2_100013e0 = add i32 %v1_100013e0, 16
  %v3_100013e0 = inttoptr i32 %v2_100013e0 to i32*
  store i32 %v3_100013dc, i32* %v3_100013e0, align 4
  %v0_100013e4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100013e4, label %dec_label_pc_100013e8, label %dec_label_pc_10001574

dec_label_pc_100013e8:                            ; preds = %dec_label_pc_100013dc, %dec_label_pc_10001568, %dec_label_pc_10001574
  %v0_100013e8 = load i32, i32* @r30, align 4
  %v1_100013e8 = trunc i32 %v0_100013e8 to i16
  %v2_100013e8 = load i32, i32* @r28, align 4
  %v3_100013e8 = add i32 %v2_100013e8, 10
  %v4_100013e8 = inttoptr i32 %v3_100013e8 to i16*
  store i16 %v1_100013e8, i16* %v4_100013e8, align 2
  %v0_100013f0 = load i32, i32* @r28, align 4
  store i32 %v0_100013f0, i32* @r3, align 4
  %v2_100013f4 = call i32 @function_10003ca8(i32 %v0_100013f0, i32 20)
  %v3_100013f4 = trunc i32 %v2_100013f4 to i16
  %v3_100013fc = load i32, i32* @r28, align 4
  %v4_100013fc = add i32 %v3_100013fc, 10
  %v5_100013fc = inttoptr i32 %v4_100013fc to i16*
  store i16 %v3_100013f4, i16* %v5_100013fc, align 2
  %v0_10001400 = load i32, i32* @r27, align 4
  store i32 %v0_10001400, i32* @r3, align 4
  %v0_10001404 = load i32, i32* @r30, align 4
  %v1_10001404 = trunc i32 %v0_10001404 to i16
  %v3_10001404 = add i32 %v0_10001400, 10
  %v4_10001404 = inttoptr i32 %v3_10001404 to i16*
  store i16 %v1_10001404, i16* %v4_10001404, align 2
  %v2_10001408 = call i32 @function_10003ca8(i32 %v0_10001400, i32 20)
  %v3_10001408 = trunc i32 %v2_10001408 to i16
  %v0_1000140c = load i32, i32* @r31, align 4
  store i32 %v0_1000140c, i32* @r4, align 4
  %v3_10001410 = load i32, i32* @r27, align 4
  %v4_10001410 = add i32 %v3_10001410, 10
  %v5_10001410 = inttoptr i32 %v4_10001410 to i16*
  store i16 %v3_10001408, i16* %v5_10001410, align 2
  %v0_10001414 = load i32, i32* %r23.global-to-local, align 4
  %v0_10001418 = load i32, i32* @r30, align 4
  %v1_10001418 = trunc i32 %v0_10001418 to i16
  %v2_10001418 = load i32, i32* @r31, align 4
  %v3_10001418 = add i32 %v2_10001418, 6
  %v4_10001418 = inttoptr i32 %v3_10001418 to i16*
  store i16 %v1_10001418, i16* %v4_10001418, align 2
  %v0_1000141c = load i32, i32* @r27, align 4
  store i32 %v0_1000141c, i32* %r3.global-to-local, align 4
  %v0_10001420 = load i32, i32* @r31, align 4
  %v1_10001420 = add i32 %v0_10001420, 4
  %v2_10001420 = inttoptr i32 %v1_10001420 to i16*
  %v3_10001420 = load i16, i16* %v2_10001420, align 2
  %v4_10001420 = zext i16 %v3_10001420 to i32
  %v4_10001424 = call i32 @function_10003d0c(i32 %v0_1000141c, i32 %v0_1000140c, i32 %v4_10001420, i32 %v0_10001414)
  %v5_10001424 = trunc i32 %v4_10001424 to i16
  store i32 %v4_10001424, i32* %r3.global-to-local, align 4
  %v3_10001428 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10001428, i32* %r0.global-to-local, align 4
  %v0_1000142c = load i32, i32* @r28, align 4
  %v1_1000142c = add i32 %v0_1000142c, 16
  %v2_1000142c = inttoptr i32 %v1_1000142c to i32*
  %v3_1000142c = load i32, i32* %v2_1000142c, align 4
  store i32 %v3_1000142c, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001434 = mul i32 %v3_10001428, 24
  store i32 %v1_10001434, i32* %r0.global-to-local, align 4
  %v3_10001438 = load i32, i32* @r31, align 4
  %v4_10001438 = add i32 %v3_10001438, 6
  %v5_10001438 = inttoptr i32 %v4_10001438 to i16*
  store i16 %v5_10001424, i16* %v5_10001438, align 2
  %v0_1000143c = load i32, i32* @r28, align 4
  %v0_10001440 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10001440, i32* %r3.global-to-local, align 4
  %v0_10001444 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001444 = load i32, i32* @r26, align 4
  %v2_10001444 = add i32 %v1_10001444, %v0_10001444
  %v0_10001448 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001448 = trunc i32 %v0_10001448 to i16
  %v5_10001448 = inttoptr i32 %v2_10001444 to i16*
  store i16 %v3_10001448, i16* %v5_10001448, align 2
  %v0_1000144c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000144c = add i32 %v2_10001444, 4
  %v3_1000144c = inttoptr i32 %v2_1000144c to i32*
  store i32 %v0_1000144c, i32* %v3_1000144c, align 4
  %v0_10001450 = load i32, i32* @r24, align 4
  %v0_10001454 = load i32, i32* @r30, align 4
  %v1_10001454 = trunc i32 %v0_10001454 to i16
  %v3_10001454 = add i32 %v2_10001444, 2
  %v4_10001454 = inttoptr i32 %v3_10001454 to i16*
  store i16 %v1_10001454, i16* %v4_10001454, align 2
  store i32 268440676, i32* @lr, align 4
  %v6_10001460 = call i32 @function_1000a704(i32 %v0_10001440, i32 %v0_1000143c, i32 %v0_10001450, i32 16384, i32 %v2_10001444, i32 16)
  store i32 %v6_10001460, i32* %r3.global-to-local, align 4
  %v3_10001464 = load i32, i32* %stack_var_-120, align 4
  %v1_10001468 = add i32 %v3_10001464, 1
  store i32 %v1_10001468, i32* %r9.global-to-local, align 4
  %v1_1000146c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000146c = icmp slt i32 %v1_10001468, %v1_1000146c
  %v4_1000146c = icmp eq i32 %v1_10001468, %v1_1000146c
  store i1 %v2_1000146c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000146c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001468, i32* %stack_var_-120, align 4
  br i1 %v2_1000146c, label %dec_label_pc_10001390, label %dec_label_pc_10001478

dec_label_pc_10001478:                            ; preds = %dec_label_pc_100013e8, %dec_label_pc_1000134c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268440704, i32* @lr, align 4
  %v0_1000147c = call i32 @function_10009e00()
  store i32 %v0_1000147c, i32* %r3.global-to-local, align 4
  store i32 %v2_10001180, i32* %r0.global-to-local, align 4
  %v2_10001484 = icmp slt i32 %v2_10001180, %v0_1000147c
  %v4_10001484 = icmp eq i32 %v2_10001180, %v0_1000147c
  store i1 %v2_10001484, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001484, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001484, label %dec_label_pc_1000148c, label %dec_label_pc_1000134c

dec_label_pc_1000148c:                            ; preds = %dec_label_pc_10001478, %dec_label_pc_10000fe4, %dec_label_pc_10001590
  store i32 %v0_10001010, i32* %r0.global-to-local, align 4
  %v1_100014a0 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10000fec)
  store i32 %v0_1000102c, i32* %r24.global-to-local, align 4
  store i32 %v0_10001030, i32* %r25.global-to-local, align 4
  store i32 %v0_10001000, i32* %r27.global-to-local, align 4
  store i32 %v0_10001044, i32* %r29.global-to-local, align 4
  store i32 %v0_1000104c, i32* %r30.global-to-local, align 4
  store i32 %v0_10001050, i32* %r31.global-to-local, align 4
  %v0_100014e8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100014e8

dec_label_pc_100014ec:                            ; preds = %dec_label_pc_10001390
  %v1_100014ec = add i32 %v2_1000139c, 16
  %v2_100014ec = inttoptr i32 %v1_100014ec to i32*
  %v3_100014ec = load i32, i32* %v2_100014ec, align 4
  store i32 %v3_100014ec, i32* %r29.global-to-local, align 4
  %v0_100014f0 = call i32 @function_10005998()
  store i32 %v0_100014f0, i32* %r3.global-to-local, align 4
  %v3_100014f4 = load i32, i32* %stack_var_-120, align 4
  %v1_100014f8 = mul i32 %v3_100014f4, 24
  %v1_100014fc = load i32, i32* @r26, align 4
  %v2_100014fc = add i32 %v1_100014fc, %v1_100014f8
  store i32 %v2_100014fc, i32* %r9.global-to-local, align 4
  %v1_10001500 = add i32 %v2_100014fc, 20
  %v2_10001500 = inttoptr i32 %v1_10001500 to i8*
  %v3_10001500 = load i8, i8* %v2_10001500, align 1
  %v4_10001500 = zext i8 %v3_10001500 to i32
  store i32 %v4_10001500, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001500, 64
  %v2_10001504 = zext i8 %tmp to i32
  %v3_10001504 = lshr i32 %v0_100014f0, %v2_10001504
  store i32 %v3_10001504, i32* %r3.global-to-local, align 4
  %v0_10001508 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001508 = add i32 %v3_10001504, %v0_10001508
  store i32 %v2_10001508, i32* %r29.global-to-local, align 4
  %v1_1000150c = load i32, i32* @r28, align 4
  %v2_1000150c = add i32 %v1_1000150c, 16
  %v3_1000150c = inttoptr i32 %v2_1000150c to i32*
  store i32 %v2_10001508, i32* %v3_1000150c, align 4
  %v0_10001510 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001510, label %dec_label_pc_10001514, label %dec_label_pc_100013b8

dec_label_pc_10001514:                            ; preds = %dec_label_pc_100014ec, %dec_label_pc_100013b4
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10001518 = call i32 @function_10005998()
  store i32 %v0_10001518, i32* %r3.global-to-local, align 4
  %v0_1000151c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000151c = or i32 %v0_1000151c, 65535
  store i32 %v1_1000151c, i32* %r29.global-to-local, align 4
  %v1_10001520 = load i32, i32* @r28, align 4
  %v2_10001520 = add i32 %v1_10001520, 12
  %v3_10001520 = inttoptr i32 %v2_10001520 to i32*
  store i32 %v0_10001518, i32* %v3_10001520, align 4
  %v0_10001524 = load i32, i32* @r25, align 4
  %v1_10001524 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001524 = icmp slt i32 %v0_10001524, %v1_10001524
  %v4_10001524 = icmp eq i32 %v0_10001524, %v1_10001524
  store i1 %v2_10001524, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001524, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001524, label %dec_label_pc_1000152c, label %dec_label_pc_100013c8

dec_label_pc_1000152c:                            ; preds = %dec_label_pc_10001514, %dec_label_pc_100013b8
  %v0_1000152c = call i32 @function_10005998()
  %v0_10001530 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001530 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001530 = icmp slt i32 %v0_10001530, %v1_10001530
  %v4_10001530 = icmp eq i32 %v0_10001530, %v1_10001530
  store i1 %v2_10001530, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001530, i1* %cr7_eq.global-to-local, align 1
  %v1_10001534 = urem i32 %v0_1000152c, 65536
  store i32 %v1_10001534, i32* %r3.global-to-local, align 4
  %v1_10001538 = add nsw i32 %v1_10001534, -1000
  store i32 %v1_10001538, i32* %r0.global-to-local, align 4
  %v1_1000153c = trunc i32 %v0_1000152c to i16
  %v2_1000153c = load i32, i32* @r28, align 4
  %v3_1000153c = add i32 %v2_1000153c, 4
  %v4_1000153c = inttoptr i32 %v3_1000153c to i16*
  store i16 %v1_1000153c, i16* %v4_1000153c, align 2
  %v0_10001540 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001540 = sub i32 -1, %v0_10001540
  store i32 %v1_10001540, i32* %r0.global-to-local, align 4
  %v1_10001544 = trunc i32 %v1_10001540 to i16
  %v2_10001544 = load i32, i32* @r27, align 4
  %v3_10001544 = add i32 %v2_10001544, 4
  %v4_10001544 = inttoptr i32 %v3_10001544 to i16*
  store i16 %v1_10001544, i16* %v4_10001544, align 2
  br i1 %v4_10001530, label %dec_label_pc_1000154c, label %dec_label_pc_1000152c.dec_label_pc_100013d0_crit_edge

dec_label_pc_1000152c.dec_label_pc_100013d0_crit_edge: ; preds = %dec_label_pc_1000152c
  %v1_100013d0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100013d0

dec_label_pc_1000154c:                            ; preds = %dec_label_pc_1000152c, %dec_label_pc_100013c8
  %v0_1000154c = call i32 @function_10005998()
  %v1_1000154c = trunc i32 %v0_1000154c to i16
  store i32 %v0_1000154c, i32* %r3.global-to-local, align 4
  %v0_10001550 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001550 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001550 = icmp slt i32 %v0_10001550, %v1_10001550
  %v4_10001550 = icmp eq i32 %v0_10001550, %v1_10001550
  store i1 %v2_10001550, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001550, i1* %cr7_eq.global-to-local, align 1
  %v3_10001554 = load i32, i32* @r28, align 4
  %v4_10001554 = add i32 %v3_10001554, 44
  %v5_10001554 = inttoptr i32 %v4_10001554 to i16*
  store i16 %v1_1000154c, i16* %v5_10001554, align 2
  br i1 %v4_10001550, label %dec_label_pc_1000155c, label %dec_label_pc_100013d8

dec_label_pc_1000155c:                            ; preds = %dec_label_pc_1000154c, %dec_label_pc_100013d0
  %v0_1000155c = call i32 @function_10005998()
  %v1_1000155c = trunc i32 %v0_1000155c to i16
  store i32 %v0_1000155c, i32* %r3.global-to-local, align 4
  %v3_10001560 = load i32, i32* @r31, align 4
  %v4_10001560 = add i32 %v3_10001560, 2
  %v5_10001560 = inttoptr i32 %v4_10001560 to i16*
  store i16 %v1_1000155c, i16* %v5_10001560, align 2
  %v0_10001564 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001564, label %dec_label_pc_10001568, label %dec_label_pc_100013dc

dec_label_pc_10001568:                            ; preds = %dec_label_pc_1000155c, %dec_label_pc_100013d8
  %v0_10001568 = call i32 @function_10005998()
  store i32 %v0_10001568, i32* %r3.global-to-local, align 4
  %v1_1000156c = load i32, i32* @r27, align 4
  %v2_1000156c = add i32 %v1_1000156c, 16
  %v3_1000156c = inttoptr i32 %v2_1000156c to i32*
  store i32 %v0_10001568, i32* %v3_1000156c, align 4
  %v0_10001570 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001570, label %dec_label_pc_100013e8, label %dec_label_pc_10001574

dec_label_pc_10001574:                            ; preds = %dec_label_pc_100013dc, %dec_label_pc_10001568
  %v0_10001574 = load i32, i32* @r31, align 4
  %v1_10001574 = add i32 %v0_10001574, 8
  store i32 %v1_10001574, i32* @r29, align 4
  %v0_10001578 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_10001578, i32* @r4, align 4
  store i32 %v1_10001574, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10001584.14 to i32), i32* @lr, align 4
  %v0_10001580 = call i32 @function_10005a58()
  store i32 %v0_10001580, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10001588 = load i32, i32* @r29, align 4
  %v2_10001588 = load i32, i32* %r19.global-to-local, align 4
  %v4_10001588 = add i32 %v2_10001588, %v1_10001588
  %v5_10001588 = inttoptr i32 %v4_10001588 to i8*
  store i8 0, i8* %v5_10001588, align 1
  br label %dec_label_pc_100013e8

dec_label_pc_10001590:                            ; preds = %dec_label_pc_100011a0
  %v0_10001590 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10001590, i32* %r3.global-to-local, align 4
  store i32 268440984, i32* @lr, align 4
  %v0_10001594 = call i32 @function_10009a30()
  store i32 %v0_10001594, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000148c

; uselistorder directives
  uselistorder i32 %v0_1000155c, { 1, 0 }
  uselistorder i32 %v0_1000154c, { 1, 0 }
  uselistorder i32 %v1_10001540, { 1, 0 }
  uselistorder i32 %v1_10001534, { 1, 0 }
  uselistorder i32 %v0_1000152c, { 1, 0 }
  uselistorder i32 %v1_10001524, { 1, 2, 0 }
  uselistorder i32 %v0_1000147c, { 1, 0, 2 }
  uselistorder i32 %v1_10001468, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10001444, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10001424, { 1, 0 }
  uselistorder i32 %v1_100013d0, { 1, 0 }
  uselistorder i32 %v1_100013c8, { 0, 2, 1 }
  uselistorder i32 %v4_10001398, { 1, 0, 2 }
  uselistorder i32 %v1_10001394, { 1, 0 }
  uselistorder i32 %v2_10001358, { 2, 1, 0 }
  uselistorder i32 %v1_10001320, { 1, 0 }
  uselistorder i32 %v1_1000126c, { 1, 0 }
  uselistorder i32 %v1_10001264, { 1, 0 }
  uselistorder i32 %v1_10001244, { 0, 2, 1 }
  uselistorder i32 %v1_100011f8, { 1, 0 }
  uselistorder i32 %v0_100011f8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_100011e4, { 2, 0, 1 }
  uselistorder i32 %v4_100011b8, { 1, 0, 2 }
  uselistorder i32 %v3_10001190, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10001180, { 1, 2, 0 }
  uselistorder i32 %v5_1000116c, { 1, 0 }
  uselistorder i8 %v5_1000108c, { 1, 0 }
  uselistorder i32* %stack_var_-120, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i32* %r9.global-to-local, { 17, 18, 19, 20, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 21 }
  uselistorder i32* %r31.global-to-local, { 11, 0, 2, 3, 4, 5, 8, 6, 7, 9, 1, 10 }
  uselistorder i32* %r30.global-to-local, { 7, 0, 1, 2, 6, 3, 4, 5, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 3, 4, 5, 1, 6, 7, 8, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r29.global-to-local, { 15, 14, 16, 17, 18, 20, 21, 19, 22, 23, 24, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1 }
  uselistorder i32* %r27.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %r24.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %r20.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r19.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32* %r18.global-to-local, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32* %r11.global-to-local, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 4, 5, 20, 21, 22, 34, 35 }
  uselistorder i1* %cr7_lt.global-to-local, { 9, 10, 11, 13, 14, 15, 0, 1, 2, 12, 3, 4, 5, 6, 7, 8 }
  uselistorder i1* %cr7_eq.global-to-local, { 9, 10, 11, 13, 14, 15, 0, 1, 2, 12, 3, 4, 5, 6, 7, 8 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr2_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10001574, { 1, 0 }
  uselistorder label %dec_label_pc_1000148c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100013e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000134c, { 1, 0 }
  uselistorder label %dec_label_pc_1000130c, { 1, 0 }
  uselistorder label %dec_label_pc_100012b0, { 1, 0 }
  uselistorder label %dec_label_pc_10001254, { 1, 0, 2 }
}

define i32 @function_1000159c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000159c:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr2_lt.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i16 @__decompiler_undefined_function_2()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %v0_100015a0 = load i32, i32* @lr, align 4
  store i32 %v0_100015a0, i32* %r0.global-to-local, align 4
  %v0_100015a4 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r21.global-to-local, align 4
  %v0_100015b0 = load i32, i32* @r25, align 4
  %v0_100015b8 = load i32, i32* @r27, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 %v0_100015a4, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_100015c8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r22.global-to-local, align 4
  %v0_100015fc = load i32, i32* @r26, align 4
  store i32 %arg5, i32* @r28, align 4
  %v0_10001608 = load i32, i32* @r29, align 4
  store i32 %arg4, i32* @r29, align 4
  store i32 0, i32* %stack_var_-424, align 4
  store i32 268441120, i32* @lr, align 4
  %v2_1000161c = call i32 @function_1000aadc(i32 %arg2, i32 16)
  store i32 %v2_1000161c, i32* %r19.global-to-local, align 4
  %v0_10001628 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10001628, i32* %r3.global-to-local, align 4
  store i32 268441136, i32* @lr, align 4
  %v2_1000162c = call i32 @function_1000aadc(i32 %v0_10001628, i32 4)
  %v0_10001630 = load i32, i32* @r28, align 4
  store i32 %v2_1000162c, i32* %r20.global-to-local, align 4
  %v0_10001640 = load i32, i32* @r29, align 4
  store i32 %v0_10001640, i32* %r3.global-to-local, align 4
  store i32 268441160, i32* @lr, align 4
  %v4_10001644 = inttoptr i32 %v0_10001630 to i32*
  %v5_10001644 = call i32 @function_10000300(i32 %v0_10001640, i32* %v4_10001644, i32 2, i32 0)
  %v5_10001654 = trunc i32 %v5_10001644 to i8
  %v0_1000165c = load i32, i32* @r28, align 4
  %v0_10001660 = load i32, i32* @r29, align 4
  store i32 %v0_10001660, i32* %r3.global-to-local, align 4
  store i32 268441192, i32* @lr, align 4
  %v4_10001664 = inttoptr i32 %v0_1000165c to i32*
  %v5_10001664 = call i32 @function_10000300(i32 %v0_10001660, i32* %v4_10001664, i32 3, i32 65535)
  %v0_10001668 = load i32, i32* @r28, align 4
  store i32 %v5_10001664, i32* %r26.global-to-local, align 4
  %v0_10001678 = load i32, i32* @r29, align 4
  store i32 %v0_10001678, i32* %r3.global-to-local, align 4
  store i32 268441216, i32* @lr, align 4
  %v4_1000167c = inttoptr i32 %v0_10001668 to i32*
  %v5_1000167c = call i32 @function_10000300(i32 %v0_10001678, i32* %v4_1000167c, i32 4, i32 64)
  %v0_10001680 = load i32, i32* @r28, align 4
  %v0_10001694 = load i32, i32* @r29, align 4
  store i32 %v0_10001694, i32* %r3.global-to-local, align 4
  store i32 268441244, i32* @lr, align 4
  %v4_10001698 = inttoptr i32 %v0_10001680 to i32*
  %v5_10001698 = call i32 @function_10000300(i32 %v0_10001694, i32* %v4_10001698, i32 5, i32 1)
  %v1_100016a0 = urem i32 %v5_10001698, 256
  %v0_100016ac = load i32, i32* @r28, align 4
  %v0_100016b4 = load i32, i32* @r29, align 4
  store i32 %v0_100016b4, i32* %r3.global-to-local, align 4
  store i32 268441276, i32* @lr, align 4
  %v4_100016b8 = inttoptr i32 %v0_100016ac to i32*
  %v5_100016b8 = call i32 @function_10000300(i32 %v0_100016b4, i32* %v4_100016b8, i32 7, i32 65535)
  %v0_100016bc = load i32, i32* @r28, align 4
  %v1_100016c8 = urem i32 %v5_100016b8, 65536
  store i32 %v1_100016c8, i32* @r24, align 4
  %v0_100016cc = load i32, i32* @r29, align 4
  store i32 %v0_100016cc, i32* %r3.global-to-local, align 4
  store i32 268441300, i32* @lr, align 4
  %v4_100016d0 = inttoptr i32 %v0_100016bc to i32*
  %v5_100016d0 = call i32 @function_10000300(i32 %v0_100016cc, i32* %v4_100016d0, i32 10, i32 0)
  %v0_100016d4 = load i32, i32* @r28, align 4
  %v1_100016d8 = urem i32 %v5_100016d0, 256
  %v0_100016e8 = load i32, i32* @r29, align 4
  store i32 %v0_100016e8, i32* %r3.global-to-local, align 4
  store i32 268441328, i32* @lr, align 4
  %v4_100016ec = inttoptr i32 %v0_100016d4 to i32*
  %v5_100016ec = call i32 @function_10000300(i32 %v0_100016e8, i32* %v4_100016ec, i32 11, i32 1)
  %v0_100016f0 = load i32, i32* @r28, align 4
  %v1_100016f4 = urem i32 %v5_100016ec, 256
  %v0_10001704 = load i32, i32* @r29, align 4
  store i32 %v0_10001704, i32* %r3.global-to-local, align 4
  store i32 268441356, i32* @lr, align 4
  %v4_10001708 = inttoptr i32 %v0_100016f0 to i32*
  %v5_10001708 = call i32 @function_10000300(i32 %v0_10001704, i32* %v4_10001708, i32 12, i32 1)
  %v0_1000170c = load i32, i32* @r28, align 4
  %v1_10001718 = urem i32 %v5_10001708, 256
  %v0_1000171c = load i32, i32* @r29, align 4
  store i32 %v0_1000171c, i32* %r3.global-to-local, align 4
  store i32 268441380, i32* @lr, align 4
  %v4_10001720 = inttoptr i32 %v0_1000170c to i32*
  %v5_10001720 = call i32 @function_10000300(i32 %v0_1000171c, i32* %v4_10001720, i32 13, i32 0)
  %v0_10001724 = load i32, i32* @r28, align 4
  %v1_10001730 = urem i32 %v5_10001720, 256
  %v0_10001734 = load i32, i32* @r29, align 4
  store i32 %v0_10001734, i32* %r3.global-to-local, align 4
  store i32 268441404, i32* @lr, align 4
  %v4_10001738 = inttoptr i32 %v0_10001724 to i32*
  %v5_10001738 = call i32 @function_10000300(i32 %v0_10001734, i32* %v4_10001738, i32 14, i32 0)
  %v0_1000173c = load i32, i32* @r28, align 4
  %v1_10001748 = urem i32 %v5_10001738, 256
  store i32 %v1_10001748, i32* %r18.global-to-local, align 4
  %v0_1000174c = load i32, i32* @r29, align 4
  store i32 %v0_1000174c, i32* %r3.global-to-local, align 4
  store i32 268441428, i32* @lr, align 4
  %v4_10001750 = inttoptr i32 %v0_1000173c to i32*
  %v5_10001750 = call i32 @function_10000300(i32 %v0_1000174c, i32* %v4_10001750, i32 15, i32 0)
  %v0_1000175c = load i32, i32* @r28, align 4
  %v1_10001760 = urem i32 %v5_10001750, 256
  store i32 %v1_10001760, i32* %r23.global-to-local, align 4
  %v0_10001764 = load i32, i32* @r29, align 4
  store i32 %v0_10001764, i32* %r3.global-to-local, align 4
  store i32 268441452, i32* @lr, align 4
  %v4_10001768 = inttoptr i32 %v0_1000175c to i32*
  %v5_10001768 = call i32 @function_10000300(i32 %v0_10001764, i32* %v4_10001768, i32 0, i32 768)
  %v0_1000176c = load i32, i32* @r28, align 4
  store i32 %v5_10001768, i32* @r30, align 4
  %v0_1000177c = load i32, i32* @r29, align 4
  store i32 %v0_1000177c, i32* %r3.global-to-local, align 4
  store i32 268441476, i32* @lr, align 4
  %v4_10001780 = inttoptr i32 %v0_1000176c to i32*
  %v5_10001780 = call i32 @function_10000300(i32 %v0_1000177c, i32* %v4_10001780, i32 1, i32 1)
  %v1_10001784 = urem i32 %v5_10001780, 256
  store i32 %v1_10001784, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268441488, i32* @lr, align 4
  %v0_1000178c = call i32 @function_10009e00()
  %v1_10001794 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001794 = add i32 %v1_10001794, %v0_1000178c
  store i32 %v2_10001794, i32* %r17.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441508, i32* @lr, align 4
  %v3_100017a0 = call i32 @function_1000a780(i32 2, i32 3, i32 6)
  store i32 %v3_100017a0, i32* %r3.global-to-local, align 4
  %v3_100017a4 = icmp eq i32 %v3_100017a0, -1
  store i1 %v3_100017a4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100017a0, i32* @r31, align 4
  br i1 %v3_100017a4, label %dec_label_pc_10001a58, label %dec_label_pc_100017b0

dec_label_pc_100017b0:                            ; preds = %dec_label_pc_1000159c
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100017bc = ptrtoint i32* %stack_var_-424 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-424, align 4
  store i32 268441548, i32* @lr, align 4
  %v4_100017c8 = call i32 @function_1000a744(i32 0, i32 3, i32 %v2_100017bc, i32 4)
  store i32 %v4_100017c8, i32* %r3.global-to-local, align 4
  %v3_100017cc = icmp eq i32 %v4_100017c8, -1
  store i1 %v3_100017cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100017cc, label %dec_label_pc_10001a50, label %dec_label_pc_100017d4

dec_label_pc_100017d4:                            ; preds = %dec_label_pc_100017b0
  %v0_100017d4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100017d4 = icmp slt i32 %v0_100017d4, 0
  %v3_100017d4 = icmp eq i32 %v0_100017d4, 0
  store i1 %v1_100017d4, i1* %cr2_lt.global-to-local, align 1
  store i1 %v3_100017d4, i1* %cr2_eq.global-to-local, align 1
  %v0_100017d8 = load i32, i32* %r26.global-to-local, align 4
  %v1_100017d8 = urem i32 %v0_100017d8, 65536
  store i32 %v1_100017d8, i32* %r26.global-to-local, align 4
  %v0_100017dc = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100017dc, i32* %stack_var_-424, align 4
  %v5_100017e0 = trunc i32 %v0_100017d8 to i16
  %tmp48 = icmp slt i32 %v0_100017d4, 1
  br i1 %tmp48, label %dec_label_pc_100017d4.dec_label_pc_10001938.preheader_crit_edge, label %dec_label_pc_100017e8

dec_label_pc_100017d4.dec_label_pc_10001938.preheader_crit_edge: ; preds = %dec_label_pc_100017d4
  %.pre = sext i16 %v5_100017e0 to i32
  br label %dec_label_pc_10001938.preheader

dec_label_pc_100017e8:                            ; preds = %dec_label_pc_100017d4
  %v2_100017ec = ptrtoint i32* %stack_var_-400 to i32
  %v2_100017f4 = ptrtoint i32* %stack_var_-384 to i32
  %v0_100017f8 = load i32, i32* @r24, align 4
  %v4_100017f8 = icmp eq i32 %v0_100017f8, 65535
  store i1 %v4_100017f8, i1* %cr4_eq.global-to-local, align 1
  %v0_100017fc = load i32, i32* @r30, align 4
  %v1_100017fc = add i32 %v0_100017fc, 40
  store i32 %v1_100017fc, i32* %r0.global-to-local, align 4
  %v5_10001800 = trunc i32 %v1_100017fc to i16
  %v2_10001804 = ptrtoint i32* %stack_var_-420 to i32
  %v4_100018e0 = zext i16 %tmp10 to i32
  %v1_10001a34 = and i32 %tmp9, 1179648
  %v3_10001b68 = icmp eq i32 %v1_100016a0, 0
  %v4_10001b84 = sext i16 %v5_100017e0 to i32
  %sext = mul i32 %v5_1000167c, 16777216
  %v4_10001b98 = sdiv i32 %sext, 16777216
  %v1_10001a38 = and i32 %tmp9, 327680
  %v3_10001a38 = icmp eq i32 %v1_10001a38, 0
  %v4_10001a40 = icmp eq i32 %v1_10001a34, 1179648
  br label %dec_label_pc_10001808

dec_label_pc_10001808:                            ; preds = %dec_label_pc_10001924, %dec_label_pc_100017e8
  %stack_var_-120.0 = phi i32 [ %tmp, %dec_label_pc_100017e8 ], [ %stack_var_-120.1, %dec_label_pc_10001924 ]
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441624, i32* @lr, align 4
  %v3_10001814 = call i32 @function_1000a780(i32 2, i32 1, i32 0)
  store i32 %v3_10001814, i32* %r3.global-to-local, align 4
  %v3_10001818 = icmp eq i32 %v3_10001814, -1
  store i1 %v3_10001818, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001814, i32* @r28, align 4
  br i1 %v3_10001818, label %dec_label_pc_10001924, label %dec_label_pc_10001824

dec_label_pc_10001824:                            ; preds = %dec_label_pc_10001808, %dec_label_pc_10001900
  store i32 3, i32* @r4, align 4
  store i32 268441652, i32* @lr, align 4
  %v1_10001830 = call i32 @function_10009948(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_1000183c = load i32, i32* @r28, align 4
  store i32 %v0_1000183c, i32* %r3.global-to-local, align 4
  store i32 268441672, i32* @lr, align 4
  %v2_10001844 = call i32 @function_10009948(i32 %v0_1000183c)
  store i32 %v2_10001844, i32* %r3.global-to-local, align 4
  %v3_10001848 = load i32, i32* %stack_var_-424, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001850 = mul i32 %v3_10001848, 24
  store i32 %v1_10001850, i32* %r0.global-to-local, align 4
  %v0_10001858 = load i32, i32* %r22.global-to-local, align 4
  %v2_10001858 = add i32 %v0_10001858, %v1_10001850
  store i32 %v2_10001858, i32* %r11.global-to-local, align 4
  %v1_1000185c = add i32 %v2_10001858, 20
  %v2_1000185c = inttoptr i32 %v1_1000185c to i8*
  %v3_1000185c = load i8, i8* %v2_1000185c, align 1
  %v4_1000185c = zext i8 %v3_1000185c to i32
  store i32 %v4_1000185c, i32* %r9.global-to-local, align 4
  %v3_10001860 = icmp eq i8 %v3_1000185c, 31
  store i1 %v3_10001860, i1* %cr7_eq.global-to-local, align 1
  %tmp49 = icmp ult i8 %v3_1000185c, 32
  %v1_10001ab8 = add i32 %v2_10001858, 16
  %v2_10001ab8 = inttoptr i32 %v1_10001ab8 to i32*
  %v3_10001ab8 = load i32, i32* %v2_10001ab8, align 4
  br i1 %tmp49, label %dec_label_pc_10001ab8, label %dec_label_pc_10001868

dec_label_pc_10001868:                            ; preds = %dec_label_pc_10001824
  store i32 %v3_10001ab8, i32* %r0.global-to-local, align 4
  %v0_10001870 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001870, label %dec_label_pc_10001ae0, label %dec_label_pc_10001874

dec_label_pc_10001874:                            ; preds = %dec_label_pc_10001ab8, %dec_label_pc_10001868
  %stack_var_-412.0 = phi i32 [ %v2_10001ad4, %dec_label_pc_10001ab8 ], [ %v3_10001ab8, %dec_label_pc_10001868 ]
  %v0_10001874 = load i32, i32* @r24, align 4
  %v1_10001874 = trunc i32 %v0_10001874 to i16
  br label %dec_label_pc_10001878

dec_label_pc_10001878:                            ; preds = %dec_label_pc_10001ae0, %dec_label_pc_10001874
  %stack_var_-412.1 = phi i32 [ %stack_var_-412.2, %dec_label_pc_10001ae0 ], [ %stack_var_-412.0, %dec_label_pc_10001874 ]
  %storemerge = phi i16 [ %v1_10001ae0, %dec_label_pc_10001ae0 ], [ %v1_10001874, %dec_label_pc_10001874 ]
  %v0_10001880 = load i32, i32* @r28, align 4
  store i32 %v0_10001880, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001888.15 to i32), i32* @lr, align 4
  %v0_10001884 = call i32 @function_1000a580()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268441744, i32* @lr, align 4
  %v0_1000188c = call i32 @function_10009e00()
  store i32 %v0_1000188c, i32* %r3.global-to-local, align 4
  store i32 %v0_1000188c, i32* %r29.global-to-local, align 4
  %v4_100018d4 = icmp eq i32 %tmp11, %stack_var_-412.1
  %v4_100018e4 = zext i16 %storemerge to i32
  %v4_100018e8 = icmp eq i16 %storemerge, %tmp10
  %v4_100018d4.not = xor i1 %v4_100018d4, true
  br label %dec_label_pc_10001894

dec_label_pc_10001894:                            ; preds = %dec_label_pc_100018f0, %dec_label_pc_10001878
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_100017ec, i32* %r7.global-to-local, align 4
  store i32 %v2_10001804, i32* %r8.global-to-local, align 4
  %v0_100018ac = load i32, i32* @r31, align 4
  store i32 %v0_100018ac, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-420, align 4
  store i32 268441784, i32* @lr, align 4
  %v6_100018b4 = call i32 @function_1000a68c(i32 %v0_100018ac, i32 %v2_100017f4, i32 256, i32 16384, i32 %v2_100017ec, i32 %v2_10001804)
  store i32 %v6_100018b4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_100018c0 = icmp eq i32 %v6_100018b4, -1
  store i1 %v3_100018c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100018c0, label %dec_label_pc_10001a58, label %dec_label_pc_100018cc

dec_label_pc_100018cc:                            ; preds = %dec_label_pc_10001894
  store i32 %tmp11, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-412.1, i32* %r0.global-to-local, align 4
  store i1 %v4_100018d4, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i32 %v6_100018b4, 41
  %or.cond = or i1 %tmp50, %v4_100018d4.not
  br i1 %or.cond, label %dec_label_pc_100018f0, label %dec_label_pc_100018e0

dec_label_pc_100018e0:                            ; preds = %dec_label_pc_100018cc
  store i32 %v4_100018e0, i32* %r0.global-to-local, align 4
  store i32 %v4_100018e4, i32* %r8.global-to-local, align 4
  store i1 %v4_100018e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100018e8, label %dec_label_pc_10001a30, label %dec_label_pc_100018f0

dec_label_pc_100018f0:                            ; preds = %dec_label_pc_100018cc, %dec_label_pc_10001a48, %dec_label_pc_100018e0
  store i32 268441844, i32* @lr, align 4
  %v0_100018f0 = call i32 @function_10009e00()
  %v0_100018f4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018f4 = sub i32 %v0_100018f0, %v0_100018f4
  store i32 %v2_100018f4, i32* %r3.global-to-local, align 4
  %v3_100018f8 = icmp eq i32 %v2_100018f4, 10
  store i1 %v3_100018f8, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp slt i32 %v2_100018f4, 11
  br i1 %tmp51, label %dec_label_pc_10001894, label %dec_label_pc_10001900

dec_label_pc_10001900:                            ; preds = %dec_label_pc_10001a48, %dec_label_pc_100018f0
  %v0_10001900 = load i32, i32* @r28, align 4
  store i32 %v0_10001900, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001908.16 to i32), i32* @lr, align 4
  %v0_10001904 = call i32 @function_10009a30()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441880, i32* @lr, align 4
  %v3_10001914 = call i32 @function_1000a780(i32 2, i32 1, i32 0)
  store i32 %v3_10001914, i32* %r3.global-to-local, align 4
  %v3_10001918 = icmp eq i32 %v3_10001914, -1
  store i1 %v3_10001918, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001914, i32* @r28, align 4
  br i1 %v3_10001918, label %dec_label_pc_10001924, label %dec_label_pc_10001824

dec_label_pc_10001924:                            ; preds = %dec_label_pc_10001900, %dec_label_pc_10001808, %dec_label_pc_10001bb4
  %stack_var_-120.1 = phi i32 [ %stack_var_-120.0, %dec_label_pc_10001808 ], [ %v0_10001ba4, %dec_label_pc_10001bb4 ], [ %stack_var_-120.0, %dec_label_pc_10001900 ]
  %v3_10001924 = load i32, i32* %stack_var_-424, align 4
  %v1_10001928 = add i32 %v3_10001924, 1
  store i32 %v1_10001928, i32* %r9.global-to-local, align 4
  %v1_1000192c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000192c = icmp slt i32 %v1_10001928, %v1_1000192c
  %v4_1000192c = icmp eq i32 %v1_10001928, %v1_1000192c
  store i1 %v4_1000192c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001928, i32* %stack_var_-424, align 4
  br i1 %v2_1000192c, label %dec_label_pc_10001808, label %dec_label_pc_10001938.preheader

dec_label_pc_10001938.preheader:                  ; preds = %dec_label_pc_10001924, %dec_label_pc_100017d4.dec_label_pc_10001938.preheader_crit_edge
  %v4_10001944.pre-phi = phi i32 [ %.pre, %dec_label_pc_100017d4.dec_label_pc_10001938.preheader_crit_edge ], [ %v4_10001b84, %dec_label_pc_10001924 ]
  br label %dec_label_pc_10001938

dec_label_pc_10001938:                            ; preds = %dec_label_pc_10001938.preheader, %dec_label_pc_10001af8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-424, align 4
  %v0_10001940 = load i1, i1* %cr2_eq.global-to-local, align 1
  %v1_10001940 = load i1, i1* %cr2_lt.global-to-local, align 1
  %v2_10001940 = or i1 %v0_10001940, %v1_10001940
  br i1 %v2_10001940, label %dec_label_pc_10001af8, label %dec_label_pc_10001944

dec_label_pc_10001944:                            ; preds = %dec_label_pc_10001938
  store i32 %v4_10001944.pre-phi, i32* %r9.global-to-local, align 4
  %v0_1000194c = load i32, i32* %r16.global-to-local, align 4
  %v3_1000194c = icmp eq i32 %v0_1000194c, 0
  store i1 %v3_1000194c, i1* %cr4_eq.global-to-local, align 1
  %v0_10001950 = load i32, i32* @r30, align 4
  %v1_10001950 = add i32 %v0_10001950, 20
  store i32 %v1_10001950, i32* @r26, align 4
  store i1 false, i1* %cr3_eq.global-to-local, align 1
  %v1_10001958 = urem i32 %v1_10001950, 65536
  store i32 %v1_10001958, i32* %r23.global-to-local, align 4
  %v1_1000195c = add i32 %v0_10001950, 40
  store i32 %v1_1000195c, i32* @r25, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* @r24, align 4
  br label %dec_label_pc_10001a04

dec_label_pc_10001970:                            ; preds = %dec_label_pc_10001a18, %dec_label_pc_10001a24
  %v0_10001970 = load i32, i32* @r24, align 4
  %v1_10001970 = trunc i32 %v0_10001970 to i16
  %v2_10001970 = load i32, i32* @r29, align 4
  %v3_10001970 = add i32 %v2_10001970, 10
  %v4_10001970 = inttoptr i32 %v3_10001970 to i16*
  store i16 %v1_10001970, i16* %v4_10001970, align 2
  %v0_10001978 = load i32, i32* @r29, align 4
  store i32 %v0_10001978, i32* @r3, align 4
  %v2_1000197c = call i32 @function_10003ca8(i32 %v0_10001978, i32 20)
  %v3_1000197c = trunc i32 %v2_1000197c to i16
  store i32 %v2_1000197c, i32* %r3.global-to-local, align 4
  %v3_10001980 = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_10001980, i32* %r9.global-to-local, align 4
  %v3_10001984 = load i32, i32* @r29, align 4
  %v4_10001984 = add i32 %v3_10001984, 10
  %v5_10001984 = inttoptr i32 %v4_10001984 to i16*
  store i16 %v3_1000197c, i16* %v5_10001984, align 2
  %v0_10001988 = load i32, i32* @r28, align 4
  store i32 %v0_10001988, i32* @r4, align 4
  %v0_1000198c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000198c = mul i32 %v0_1000198c, 16
  store i32 %v1_1000198c, i32* %r9.global-to-local, align 4
  %v0_10001990 = load i32, i32* @r24, align 4
  %v1_10001990 = trunc i32 %v0_10001990 to i16
  %v3_10001990 = add i32 %v0_10001988, 16
  %v4_10001990 = inttoptr i32 %v3_10001990 to i16*
  store i16 %v1_10001990, i16* %v4_10001990, align 2
  %v0_10001994 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001994 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001994 = add i32 %v1_10001994, %v0_10001994
  store i32 %v2_10001994, i32* %r9.global-to-local, align 4
  %v0_10001998 = load i32, i32* %r23.global-to-local, align 4
  %v1_1000199c = add i32 %v2_10001994, 4
  %v2_1000199c = inttoptr i32 %v1_1000199c to i32*
  %v3_1000199c = load i32, i32* %v2_1000199c, align 4
  store i32 %v3_1000199c, i32* %r11.global-to-local, align 4
  %v0_100019a0 = load i32, i32* @r26, align 4
  %v0_100019a4 = load i32, i32* @r29, align 4
  store i32 %v0_100019a4, i32* %r3.global-to-local, align 4
  %v1_100019a8 = load i32, i32* @r28, align 4
  %v2_100019a8 = add i32 %v1_100019a8, 4
  %v3_100019a8 = inttoptr i32 %v2_100019a8 to i32*
  store i32 %v3_1000199c, i32* %v3_100019a8, align 4
  %v0_100019ac = load i32, i32* %r11.global-to-local, align 4
  %v1_100019ac = add i32 %v0_100019ac, 1
  store i32 %v1_100019ac, i32* %r11.global-to-local, align 4
  %v1_100019b0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100019b0 = add i32 %v1_100019b0, 4
  %v3_100019b0 = inttoptr i32 %v2_100019b0 to i32*
  store i32 %v1_100019ac, i32* %v3_100019b0, align 4
  %v0_100019b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100019b4 = add i32 %v0_100019b4, 8
  %v2_100019b4 = inttoptr i32 %v1_100019b4 to i32*
  %v3_100019b4 = load i32, i32* %v2_100019b4, align 4
  store i32 %v3_100019b4, i32* %r0.global-to-local, align 4
  %v1_100019b8 = load i32, i32* @r28, align 4
  %v2_100019b8 = add i32 %v1_100019b8, 8
  %v3_100019b8 = inttoptr i32 %v2_100019b8 to i32*
  store i32 %v3_100019b4, i32* %v3_100019b8, align 4
  %v4_100019bc = call i32 @function_10003d0c(i32 %v0_100019a4, i32 %v0_10001988, i32 %v0_10001998, i32 %v0_100019a0)
  %v5_100019bc = trunc i32 %v4_100019bc to i16
  store i32 %v4_100019bc, i32* %r3.global-to-local, align 4
  %v3_100019c0 = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_100019c0, i32* %r7.global-to-local, align 4
  %v0_100019c4 = load i32, i32* @r28, align 4
  %v1_100019c4 = add i32 %v0_100019c4, 2
  %v2_100019c4 = inttoptr i32 %v1_100019c4 to i16*
  %v3_100019c4 = load i16, i16* %v2_100019c4, align 2
  %v4_100019c4 = zext i16 %v3_100019c4 to i32
  store i32 %v4_100019c4, i32* %r0.global-to-local, align 4
  %v0_100019c8 = load i32, i32* @r29, align 4
  %v1_100019cc = mul i32 %v3_100019c0, 24
  store i32 %v1_100019cc, i32* %r7.global-to-local, align 4
  %v4_100019d0 = add i32 %v0_100019c4, 16
  %v5_100019d0 = inttoptr i32 %v4_100019d0 to i16*
  store i16 %v5_100019bc, i16* %v5_100019d0, align 2
  %v0_100019d4 = load i32, i32* @r25, align 4
  %v0_100019d8 = load i32, i32* @r31, align 4
  store i32 %v0_100019d8, i32* %r3.global-to-local, align 4
  %v0_100019dc = load i32, i32* %r7.global-to-local, align 4
  %v1_100019dc = load i32, i32* %r22.global-to-local, align 4
  %v2_100019dc = add i32 %v1_100019dc, %v0_100019dc
  store i32 %v2_100019dc, i32* %r7.global-to-local, align 4
  %v0_100019e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100019e4 = trunc i32 %v0_100019e4 to i16
  %v3_100019e4 = add i32 %v2_100019dc, 2
  %v4_100019e4 = inttoptr i32 %v3_100019e4 to i16*
  store i16 %v1_100019e4, i16* %v4_100019e4, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268442096, i32* @lr, align 4
  %v6_100019ec = call i32 @function_1000a704(i32 %v0_100019d8, i32 %v0_100019c8, i32 %v0_100019d4, i32 16384, i32 %v2_100019dc, i32 16)
  store i32 %v6_100019ec, i32* %r3.global-to-local, align 4
  %v3_100019f0 = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_100019f0, i32* %r9.global-to-local, align 4
  %v1_100019f4 = add i32 %v3_100019f0, 1
  store i32 %v1_100019f4, i32* %r0.global-to-local, align 4
  %v1_100019f8 = load i32, i32* %r21.global-to-local, align 4
  %v2_100019f8 = icmp slt i32 %v1_100019f4, %v1_100019f8
  %v4_100019f8 = icmp eq i32 %v1_100019f4, %v1_100019f8
  store i1 %v4_100019f8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100019f4, i32* %stack_var_-424, align 4
  br i1 %v2_100019f8, label %dec_label_pc_10001970.dec_label_pc_10001a04_crit_edge, label %dec_label_pc_10001af8

dec_label_pc_10001970.dec_label_pc_10001a04_crit_edge: ; preds = %dec_label_pc_10001970
  %v0_10001a14.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10001a04

dec_label_pc_10001a04:                            ; preds = %dec_label_pc_10001970.dec_label_pc_10001a04_crit_edge, %dec_label_pc_10001944
  %v0_10001a14 = phi i1 [ %v0_10001a14.pre, %dec_label_pc_10001970.dec_label_pc_10001a04_crit_edge ], [ false, %dec_label_pc_10001944 ]
  %v0_10001a04 = phi i32 [ %v1_100019f4, %dec_label_pc_10001970.dec_label_pc_10001a04_crit_edge ], [ 0, %dec_label_pc_10001944 ]
  %v1_10001a04 = mul i32 %v0_10001a04, 4
  store i32 %v1_10001a04, i32* %r0.global-to-local, align 4
  %v0_10001a08 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001a08 = add i32 %v0_10001a08, %v1_10001a04
  %v3_10001a08 = inttoptr i32 %v2_10001a08 to i32*
  %v4_10001a08 = load i32, i32* %v3_10001a08, align 4
  store i32 %v4_10001a08, i32* @r29, align 4
  %v1_10001a0c = add i32 %v4_10001a08, 40
  store i32 %v1_10001a0c, i32* @r27, align 4
  %v1_10001a10 = add i32 %v4_10001a08, 20
  store i32 %v1_10001a10, i32* @r28, align 4
  br i1 %v0_10001a14, label %dec_label_pc_10001aec, label %dec_label_pc_10001a18

dec_label_pc_10001a18:                            ; preds = %dec_label_pc_10001a04, %dec_label_pc_10001aec
  %v0_10001a18 = phi i32 [ %v1_10001a0c, %dec_label_pc_10001a04 ], [ %v0_10001a18.pre, %dec_label_pc_10001aec ]
  store i32 %v0_10001a18, i32* @r3, align 4
  %v0_10001a1c = load i32, i32* @r30, align 4
  store i32 %v0_10001a1c, i32* @r4, align 4
  %v0_10001a20 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001a20, label %dec_label_pc_10001970, label %dec_label_pc_10001a24

dec_label_pc_10001a24:                            ; preds = %dec_label_pc_10001a18
  store i32 268442152, i32* @lr, align 4
  %v0_10001a24 = call i32 @function_10005a58()
  store i32 %v0_10001a24, i32* %r3.global-to-local, align 4
  %v0_10001a28 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001a28 = load i32, i32* @r27, align 4
  %v2_10001a28 = load i32, i32* @r30, align 4
  %v3_10001a28 = trunc i32 %v0_10001a28 to i8
  %v4_10001a28 = add i32 %v2_10001a28, %v1_10001a28
  %v5_10001a28 = inttoptr i32 %v4_10001a28 to i8*
  store i8 %v3_10001a28, i8* %v5_10001a28, align 1
  br label %dec_label_pc_10001970

dec_label_pc_10001a30:                            ; preds = %dec_label_pc_100018e0
  store i32 %tmp9, i32* %r9.global-to-local, align 4
  store i32 %v1_10001a34, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10001a40, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a40, label %dec_label_pc_10001b0c, label %dec_label_pc_10001a48

dec_label_pc_10001a48:                            ; preds = %dec_label_pc_10001a30
  br i1 %v3_10001a38, label %dec_label_pc_100018f0, label %dec_label_pc_10001900

dec_label_pc_10001a50:                            ; preds = %dec_label_pc_100017b0
  %v0_10001a50 = load i32, i32* @r31, align 4
  store i32 %v0_10001a50, i32* %r3.global-to-local, align 4
  store i32 268442200, i32* @lr, align 4
  %v0_10001a54 = call i32 @function_10009a30()
  store i32 %v0_10001a54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001a58

dec_label_pc_10001a58:                            ; preds = %dec_label_pc_10001894, %dec_label_pc_10001af8, %dec_label_pc_1000159c, %dec_label_pc_10001a50
  store i32 %v0_100015c8, i32* %r0.global-to-local, align 4
  %v1_10001a6c = call %0 @__asm_mtcrf(i32 56, i32 %v0_100015a4)
  store i32 %v0_100015b0, i32* %r25.global-to-local, align 4
  store i32 %v0_100015fc, i32* %r26.global-to-local, align 4
  store i32 %v0_100015b8, i32* %r27.global-to-local, align 4
  store i32 %v0_10001608, i32* %r29.global-to-local, align 4
  %v0_10001ab4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001ab4

dec_label_pc_10001ab8:                            ; preds = %dec_label_pc_10001824
  store i32 %v3_10001ab8, i32* %r29.global-to-local, align 4
  %v0_10001abc = call i32 @function_10005998()
  store i32 %v0_10001abc, i32* %r3.global-to-local, align 4
  %v3_10001ac0 = load i32, i32* %stack_var_-424, align 4
  %v1_10001ac4 = mul i32 %v3_10001ac0, 24
  %v1_10001ac8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10001ac8 = add i32 %v1_10001ac8, %v1_10001ac4
  store i32 %v2_10001ac8, i32* %r9.global-to-local, align 4
  %v1_10001acc = add i32 %v2_10001ac8, 20
  %v2_10001acc = inttoptr i32 %v1_10001acc to i8*
  %v3_10001acc = load i8, i8* %v2_10001acc, align 1
  %v4_10001acc = zext i8 %v3_10001acc to i32
  store i32 %v4_10001acc, i32* %r0.global-to-local, align 4
  %tmp53 = urem i8 %v3_10001acc, 64
  %v2_10001ad0 = zext i8 %tmp53 to i32
  %v3_10001ad0 = lshr i32 %v0_10001abc, %v2_10001ad0
  store i32 %v3_10001ad0, i32* %r3.global-to-local, align 4
  %v0_10001ad4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001ad4 = add i32 %v3_10001ad0, %v0_10001ad4
  store i32 %v2_10001ad4, i32* %r29.global-to-local, align 4
  %v0_10001adc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001adc, label %dec_label_pc_10001ae0, label %dec_label_pc_10001874

dec_label_pc_10001ae0:                            ; preds = %dec_label_pc_10001ab8, %dec_label_pc_10001868
  %stack_var_-412.2 = phi i32 [ %v2_10001ad4, %dec_label_pc_10001ab8 ], [ %v3_10001ab8, %dec_label_pc_10001868 ]
  %v0_10001ae0 = call i32 @function_10005998()
  %v1_10001ae0 = trunc i32 %v0_10001ae0 to i16
  store i32 %v0_10001ae0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001878

dec_label_pc_10001aec:                            ; preds = %dec_label_pc_10001a04
  %v0_10001aec = call i32 @function_10005998()
  %v1_10001aec = trunc i32 %v0_10001aec to i16
  store i32 %v0_10001aec, i32* %r3.global-to-local, align 4
  %v3_10001af0 = load i32, i32* @r29, align 4
  %v4_10001af0 = add i32 %v3_10001af0, 4
  %v5_10001af0 = inttoptr i32 %v4_10001af0 to i16*
  store i16 %v1_10001aec, i16* %v5_10001af0, align 2
  %v0_10001a18.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10001a18

dec_label_pc_10001af8:                            ; preds = %dec_label_pc_10001970, %dec_label_pc_10001938
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268442368, i32* @lr, align 4
  %v0_10001afc = call i32 @function_10009e00()
  store i32 %v0_10001afc, i32* %r3.global-to-local, align 4
  %v0_10001b00 = load i32, i32* %r17.global-to-local, align 4
  %v2_10001b00 = icmp slt i32 %v0_10001b00, %v0_10001afc
  %v4_10001b00 = icmp eq i32 %v0_10001b00, %v0_10001afc
  store i1 %v4_10001b00, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001b00, label %dec_label_pc_10001a58, label %dec_label_pc_10001938

dec_label_pc_10001b0c:                            ; preds = %dec_label_pc_10001a30
  %v3_10001b0c = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_10001b0c, i32* %r29.global-to-local, align 4
  store i32 %stack_var_-120.0, i32* %r9.global-to-local, align 4
  store i32 %v1_100017fc, i32* @r3, align 4
  %v1_10001b18 = add i32 %stack_var_-120.0, 2
  %v2_10001b18 = inttoptr i32 %v1_10001b18 to i16*
  %v3_10001b18 = load i16, i16* %v2_10001b18, align 2
  %v4_10001b18 = zext i16 %v3_10001b18 to i32
  store i32 %v4_10001b18, i32* %r11.global-to-local, align 4
  %v1_10001b1c = mul i32 %v3_10001b0c, 16
  store i32 %v1_10001b1c, i32* %r9.global-to-local, align 4
  %v1_10001b20 = load i32, i32* %r19.global-to-local, align 4
  %v3_10001b20 = add i32 %v1_10001b20, %v1_10001b1c
  %v4_10001b20 = inttoptr i32 %v3_10001b20 to i32*
  store i32 %tmp11, i32* %v4_10001b20, align 4
  %v0_10001b24 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001b24 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001b24 = add i32 %v1_10001b24, %v0_10001b24
  store i32 %v2_10001b24, i32* %r9.global-to-local, align 4
  store i32 %stack_var_-120.0, i32* %r10.global-to-local, align 4
  %v0_10001b2c = load i32, i32* %r29.global-to-local, align 4
  %v1_10001b2c = mul i32 %v0_10001b2c, 4
  store i32 %v1_10001b2c, i32* @r29, align 4
  %v0_10001b30 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001b30 = trunc i32 %v0_10001b30 to i16
  %v3_10001b30 = add i32 %v2_10001b24, 12
  %v4_10001b30 = inttoptr i32 %v3_10001b30 to i16*
  store i16 %v1_10001b30, i16* %v4_10001b30, align 2
  %v0_10001b34 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001b34 = add i32 %v0_10001b34, 4
  %v2_10001b34 = inttoptr i32 %v1_10001b34 to i32*
  %v3_10001b34 = load i32, i32* %v2_10001b34, align 4
  store i32 %v3_10001b34, i32* %r0.global-to-local, align 4
  %v0_10001b38 = load i32, i32* %r8.global-to-local, align 4
  %v1_10001b38 = trunc i32 %v0_10001b38 to i16
  %v2_10001b38 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001b38 = add i32 %v2_10001b38, 14
  %v4_10001b38 = inttoptr i32 %v3_10001b38 to i16*
  store i16 %v1_10001b38, i16* %v4_10001b38, align 2
  %v0_10001b3c = load i32, i32* %r0.global-to-local, align 4
  %v1_10001b3c = load i32, i32* %r9.global-to-local, align 4
  %v2_10001b3c = add i32 %v1_10001b3c, 4
  %v3_10001b3c = inttoptr i32 %v2_10001b3c to i32*
  store i32 %v0_10001b3c, i32* %v3_10001b3c, align 4
  %v0_10001b40 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001b40 = add i32 %v0_10001b40, 8
  %v2_10001b40 = inttoptr i32 %v1_10001b40 to i32*
  %v3_10001b40 = load i32, i32* %v2_10001b40, align 4
  store i32 %v3_10001b40, i32* %r0.global-to-local, align 4
  %v1_10001b44 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001b44 = add i32 %v1_10001b44, 8
  %v3_10001b44 = inttoptr i32 %v2_10001b44 to i32*
  store i32 %v3_10001b40, i32* %v3_10001b44, align 4
  store i32 268442444, i32* @lr, align 4
  %v0_10001b48 = call i32 @function_1000a984()
  store i32 %v0_10001b48, i32* %r3.global-to-local, align 4
  %v3_10001b4c = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_10001b4c, i32* %r0.global-to-local, align 4
  %v1_10001b50 = load i32, i32* @r29, align 4
  %v2_10001b50 = load i32, i32* %r20.global-to-local, align 4
  %v3_10001b50 = add i32 %v2_10001b50, %v1_10001b50
  %v4_10001b50 = inttoptr i32 %v3_10001b50 to i32*
  store i32 %v0_10001b48, i32* %v4_10001b50, align 4
  %v0_10001b54 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001b54 = mul i32 %v0_10001b54, 4
  store i32 %v1_10001b54, i32* %r0.global-to-local, align 4
  %v0_10001b58 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001b58 = add i32 %v0_10001b58, %v1_10001b54
  %v3_10001b58 = inttoptr i32 %v2_10001b58 to i32*
  %v4_10001b58 = load i32, i32* %v3_10001b58, align 4
  store i32 %v4_10001b58, i32* %r10.global-to-local, align 4
  store i32 %v1_100016a0, i32* %r0.global-to-local, align 4
  %v1_10001b60 = inttoptr i32 %v4_10001b58 to i32*
  %v2_10001b60 = load i32, i32* %v1_10001b60, align 4
  store i32 %v2_10001b60, i32* %r9.global-to-local, align 4
  %v1_10001b64 = add i32 %v4_10001b58, 40
  store i32 %v1_10001b64, i32* @r29, align 4
  store i1 %v3_10001b68, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10001b70 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001b70, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10001b78 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10001b7c = load i32, i32* %r10.global-to-local, align 4
  %v2_10001b7c = inttoptr i32 %v1_10001b7c to i32*
  store i32 %v1_10001b78, i32* %v2_10001b7c, align 4
  store i32 %v4_10001b84, i32* %r9.global-to-local, align 4
  %v2_10001b88 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001b88 = add i32 %v2_10001b88, 1
  %v4_10001b88 = inttoptr i32 %v3_10001b88 to i8*
  store i8 %v5_10001654, i8* %v4_10001b88, align 1
  %v0_10001b8c = load i32, i32* %r10.global-to-local, align 4
  %v1_10001b8c = add i32 %v0_10001b8c, 20
  store i32 %v1_10001b8c, i32* %r11.global-to-local, align 4
  %v0_10001b90 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001b90 = trunc i32 %v0_10001b90 to i16
  %v3_10001b90 = add i32 %v0_10001b8c, 4
  %v4_10001b90 = inttoptr i32 %v3_10001b90 to i16*
  store i16 %v1_10001b90, i16* %v4_10001b90, align 2
  store i32 %v1_100017fc, i32* %r0.global-to-local, align 4
  store i32 %v4_10001b98, i32* %r9.global-to-local, align 4
  %v2_10001b9c = load i32, i32* %r10.global-to-local, align 4
  %v3_10001b9c = add i32 %v2_10001b9c, 2
  %v4_10001b9c = inttoptr i32 %v3_10001b9c to i16*
  store i16 %v5_10001800, i16* %v4_10001b9c, align 2
  %v0_10001ba0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001ba0 = trunc i32 %v0_10001ba0 to i8
  %v2_10001ba0 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001ba0 = add i32 %v2_10001ba0, 8
  %v4_10001ba0 = inttoptr i32 %v3_10001ba0 to i8*
  store i8 %v1_10001ba0, i8* %v4_10001ba0, align 1
  %v0_10001ba4 = load i32, i32* %r11.global-to-local, align 4
  %v0_10001ba8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001ba8, label %dec_label_pc_10001bb4, label %dec_label_pc_10001bac

dec_label_pc_10001bac:                            ; preds = %dec_label_pc_10001b0c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001bb0 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001bb0 = add i32 %v2_10001bb0, 6
  %v4_10001bb0 = inttoptr i32 %v3_10001bb0 to i16*
  store i16 16384, i16* %v4_10001bb0, align 2
  br label %dec_label_pc_10001bb4

dec_label_pc_10001bb4:                            ; preds = %dec_label_pc_10001b0c, %dec_label_pc_10001bac
  %v2_10001bbc = load i32, i32* %r10.global-to-local, align 4
  %v3_10001bbc = add i32 %v2_10001bbc, 9
  %v4_10001bbc = inttoptr i32 %v3_10001bbc to i8*
  store i8 6, i8* %v4_10001bbc, align 1
  %v3_10001bc0 = load i32, i32* @global_var_1001d188.12, align 4
  store i32 %v3_10001bc0, i32* %r0.global-to-local, align 4
  %v1_10001bc4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10001bc4 = add i32 %v1_10001bc4, 12
  %v3_10001bc4 = inttoptr i32 %v2_10001bc4 to i32*
  store i32 %v3_10001bc0, i32* %v3_10001bc4, align 4
  %v3_10001bc8 = load i32, i32* %stack_var_-424, align 4
  %v1_10001bcc = mul i32 %v3_10001bc8, 16
  store i32 %v1_10001bcc, i32* %r9.global-to-local, align 4
  %v1_10001bd0 = load i32, i32* %r19.global-to-local, align 4
  %v2_10001bd0 = add i32 %v1_10001bd0, %v1_10001bcc
  %v3_10001bd0 = inttoptr i32 %v2_10001bd0 to i32*
  %v4_10001bd0 = load i32, i32* %v3_10001bd0, align 4
  store i32 %v4_10001bd0, i32* %r0.global-to-local, align 4
  store i32 %v2_10001bd0, i32* %r9.global-to-local, align 4
  %v1_10001bd8 = add i32 %v2_10001bd0, 12
  %v2_10001bd8 = inttoptr i32 %v1_10001bd8 to i16*
  %v3_10001bd8 = load i16, i16* %v2_10001bd8, align 2
  %v4_10001bd8 = zext i16 %v3_10001bd8 to i32
  store i32 %v4_10001bd8, i32* %r11.global-to-local, align 4
  %v1_10001bdc = load i32, i32* %r10.global-to-local, align 4
  %v2_10001bdc = add i32 %v1_10001bdc, 16
  %v3_10001bdc = inttoptr i32 %v2_10001bdc to i32*
  store i32 %v4_10001bd0, i32* %v3_10001bdc, align 4
  %v0_10001be0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001be0 = trunc i32 %v0_10001be0 to i16
  %v2_10001be0 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001be0 = add i32 %v2_10001be0, 20
  %v4_10001be0 = inttoptr i32 %v3_10001be0 to i16*
  store i16 %v1_10001be0, i16* %v4_10001be0, align 2
  %v0_10001be4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001be4 = add i32 %v0_10001be4, 8
  %v2_10001be4 = inttoptr i32 %v1_10001be4 to i32*
  %v3_10001be4 = load i32, i32* %v2_10001be4, align 4
  store i32 %v3_10001be4, i32* %r0.global-to-local, align 4
  store i32 %v0_10001ba4, i32* %r10.global-to-local, align 4
  %v1_10001bec = add i32 %v0_10001ba4, 12
  %v2_10001bec = inttoptr i32 %v1_10001bec to i32*
  %v3_10001bec = load i32, i32* %v2_10001bec, align 4
  store i32 %v3_10001bec, i32* %r11.global-to-local, align 4
  %v2_10001bf0 = add i32 %v0_10001ba4, 4
  %v3_10001bf0 = inttoptr i32 %v2_10001bf0 to i32*
  store i32 %v3_10001be4, i32* %v3_10001bf0, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10001bf8 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10001bf8, i32* %r11.global-to-local, align 4
  %v0_10001bfc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001bfc = add i32 %v0_10001bfc, 14
  %v2_10001bfc = inttoptr i32 %v1_10001bfc to i16*
  %v3_10001bfc = load i16, i16* %v2_10001bfc, align 2
  %v4_10001bfc = zext i16 %v3_10001bfc to i32
  store i32 %v4_10001bfc, i32* %r0.global-to-local, align 4
  %v1_10001c00 = add i32 %v0_10001bfc, 4
  %v2_10001c00 = inttoptr i32 %v1_10001c00 to i32*
  %v3_10001c00 = load i32, i32* %v2_10001c00, align 4
  store i32 %v3_10001c00, i32* %r10.global-to-local, align 4
  %v1_10001c04 = or i32 %v1_10001bf8, 1114112
  store i32 %v1_10001c04, i32* %r11.global-to-local, align 4
  store i32 %v0_10001ba4, i32* %r9.global-to-local, align 4
  %v3_10001c0c = add i32 %v0_10001ba4, 2
  %v4_10001c0c = inttoptr i32 %v3_10001c0c to i16*
  store i16 %v3_10001bfc, i16* %v4_10001c0c, align 2
  %v0_10001c10 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001c10 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001c10 = add i32 %v1_10001c10, 8
  %v3_10001c10 = inttoptr i32 %v2_10001c10 to i32*
  store i32 %v0_10001c10, i32* %v3_10001c10, align 4
  %v0_10001c14 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001c14 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001c14 = add i32 %v1_10001c14, 12
  %v3_10001c14 = inttoptr i32 %v2_10001c14 to i32*
  store i32 %v0_10001c14, i32* %v3_10001c14, align 4
  %v0_10001c18 = call i32 @function_10005998()
  %v1_10001c18 = trunc i32 %v0_10001c18 to i16
  store i32 %v0_10001ba4, i32* %r9.global-to-local, align 4
  store i32 %v1_100016d8, i32* %r10.global-to-local, align 4
  %v0_10001c24 = load i32, i32* @r30, align 4
  store i32 %v0_10001c24, i32* @r4, align 4
  %v4_10001c28 = add i32 %v0_10001ba4, 14
  %v5_10001c28 = inttoptr i32 %v4_10001c28 to i16*
  store i16 %v1_10001c18, i16* %v5_10001c28, align 2
  %v0_10001c2c = load i32, i32* @r29, align 4
  store i32 %v0_10001c2c, i32* @r3, align 4
  store i32 %v1_100016f4, i32* %r11.global-to-local, align 4
  %v0_10001c34 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001c34 = add i32 %v0_10001c34, 12
  %v2_10001c34 = inttoptr i32 %v1_10001c34 to i32*
  %v3_10001c34 = load i32, i32* %v2_10001c34, align 4
  store i32 %v3_10001c34, i32* %r0.global-to-local, align 4
  %v1_10001c38 = call i32 @__asm_rlwimi(i32 %v1_100016d8, i32 21, i32 10, i32 10)
  store i32 %v1_10001c38, i32* %r0.global-to-local, align 4
  %v1_10001c3c = call i32 @__asm_rlwimi(i32 %v1_100016f4, i32 20, i32 11, i32 11)
  store i32 %v1_10001c3c, i32* %r0.global-to-local, align 4
  %v1_10001c40 = call i32 @__asm_rlwimi(i32 %v1_10001718, i32 19, i32 12, i32 12)
  store i32 %v1_10001c40, i32* %r0.global-to-local, align 4
  %v1_10001c44 = call i32 @__asm_rlwimi(i32 %v1_10001730, i32 18, i32 13, i32 13)
  store i32 %v1_10001c44, i32* %r0.global-to-local, align 4
  %v1_10001c48 = call i32 @__asm_rlwimi(i32 %v1_10001748, i32 17, i32 14, i32 14)
  store i32 %v1_10001c48, i32* %r0.global-to-local, align 4
  %v1_10001c4c = call i32 @__asm_rlwimi(i32 %v1_10001760, i32 16, i32 15, i32 15)
  store i32 %v1_10001c4c, i32* %r0.global-to-local, align 4
  %v1_10001c50 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001c50 = add i32 %v1_10001c50, 12
  %v3_10001c50 = inttoptr i32 %v2_10001c50 to i32*
  store i32 %v1_10001c4c, i32* %v3_10001c50, align 4
  store i32 ptrtoint (i32* @global_var_10001c58.17 to i32), i32* @lr, align 4
  %v0_10001c54 = call i32 @function_10005a58()
  store i32 %v0_10001c54, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10001c5c = load i32, i32* @r29, align 4
  %v2_10001c5c = load i32, i32* @r30, align 4
  %v4_10001c5c = add i32 %v2_10001c5c, %v1_10001c5c
  %v5_10001c5c = inttoptr i32 %v4_10001c5c to i8*
  store i8 0, i8* %v5_10001c5c, align 1
  br label %dec_label_pc_10001924

; uselistorder directives
  uselistorder i32 %v2_10001bd0, { 1, 0, 2 }
  uselistorder i32 %v1_10001bcc, { 1, 0 }
  uselistorder i32 %v0_10001ba4, { 1, 2, 4, 3, 7, 6, 5, 0 }
  uselistorder i32 %v1_10001b54, { 1, 0 }
  uselistorder i32 %v1_10001b1c, { 1, 0 }
  uselistorder i32 %v0_10001afc, { 1, 0, 2 }
  uselistorder i32 %v0_10001aec, { 1, 0 }
  uselistorder i32 %v0_10001ae0, { 1, 0 }
  uselistorder i32 %v2_10001ad4, { 1, 2, 0 }
  uselistorder i32 %v1_10001a04, { 1, 0 }
  uselistorder i32 %v1_100019f4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v4_100019bc, { 1, 0 }
  uselistorder i32 %v0_10001988, { 1, 0, 2 }
  uselistorder i32 %v2_1000197c, { 1, 0 }
  uselistorder i32 %v1_10001928, { 0, 2, 1, 3 }
  uselistorder i1 %v4_100018d4, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10001ab8, { 1, 3, 0, 2 }
  uselistorder i32 %stack_var_-120.0, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v4_10001b84, { 1, 0 }
  uselistorder i32 %v1_10001a34, { 1, 0 }
  uselistorder i32 %v1_100017fc, { 1, 0, 2, 3 }
  uselistorder i16 %v5_100017e0, { 1, 0 }
  uselistorder i32 %v0_100017d8, { 1, 0 }
  uselistorder i32 %v1_10001760, { 1, 0 }
  uselistorder i32 %v1_10001748, { 1, 0 }
  uselistorder i32 %v1_100016a0, { 1, 0 }
  uselistorder i32* %stack_var_-424, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i16 %tmp10, { 1, 0 }
  uselistorder i32 %tmp9, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 30, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 27, 28, 29, 30, 31, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr4_eq.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 1179648, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001bb4, { 1, 0 }
  uselistorder label %dec_label_pc_10001a58, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_10001a18, { 1, 0 }
  uselistorder label %dec_label_pc_10001970, { 1, 0 }
  uselistorder label %dec_label_pc_10001938, { 1, 0 }
  uselistorder label %dec_label_pc_10001924, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100018f0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001824, { 1, 0 }
}

define i32 @function_10001c64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10001c64:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr2_lt.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10001c64 = load i32, i32* @lr, align 4
  store i32 %v0_10001c64, i32* %r0.global-to-local, align 4
  %v0_10001c6c = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001c78 = load i32, i32* @r27, align 4
  store i32 %v0_10001c6c, i32* %r27.global-to-local, align 4
  %v0_10001c80 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10001cbc = load i32, i32* @r24, align 4
  %v0_10001cc0 = load i32, i32* @r25, align 4
  %v0_10001cc4 = load i32, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001cd0 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268442856, i32* @lr, align 4
  %v2_10001ce4 = call i32 @function_1000aadc(i32 %arg2, i32 4)
  %v0_10001ce8 = load i32, i32* @r29, align 4
  store i32 %v2_10001ce4, i32* %r21.global-to-local, align 4
  %v0_10001cf8 = load i32, i32* @r28, align 4
  store i32 %v0_10001cf8, i32* %r3.global-to-local, align 4
  store i32 268442880, i32* @lr, align 4
  %v4_10001cfc = inttoptr i32 %v0_10001ce8 to i32*
  %v5_10001cfc = call i32 @function_10000300(i32 %v0_10001cf8, i32* %v4_10001cfc, i32 2, i32 0)
  %v5_10001d0c = trunc i32 %v5_10001cfc to i8
  %v0_10001d14 = load i32, i32* @r29, align 4
  %v0_10001d18 = load i32, i32* @r28, align 4
  store i32 %v0_10001d18, i32* %r3.global-to-local, align 4
  store i32 268442912, i32* @lr, align 4
  %v4_10001d1c = inttoptr i32 %v0_10001d14 to i32*
  %v5_10001d1c = call i32 @function_10000300(i32 %v0_10001d18, i32* %v4_10001d1c, i32 3, i32 65535)
  %v0_10001d20 = load i32, i32* @r29, align 4
  store i32 %v5_10001d1c, i32* %r17.global-to-local, align 4
  %v0_10001d30 = load i32, i32* @r28, align 4
  store i32 %v0_10001d30, i32* %r3.global-to-local, align 4
  store i32 268442936, i32* @lr, align 4
  %v4_10001d34 = inttoptr i32 %v0_10001d20 to i32*
  %v5_10001d34 = call i32 @function_10000300(i32 %v0_10001d30, i32* %v4_10001d34, i32 4, i32 64)
  %v0_10001d38 = load i32, i32* @r29, align 4
  %v5_10001d44 = trunc i32 %v5_10001d34 to i8
  %v0_10001d4c = load i32, i32* @r28, align 4
  store i32 %v0_10001d4c, i32* %r3.global-to-local, align 4
  store i32 268442964, i32* @lr, align 4
  %v4_10001d50 = inttoptr i32 %v0_10001d38 to i32*
  %v5_10001d50 = call i32 @function_10000300(i32 %v0_10001d4c, i32* %v4_10001d50, i32 5, i32 0)
  %v1_10001d58 = urem i32 %v5_10001d50, 256
  %v0_10001d68 = load i32, i32* @r29, align 4
  %v0_10001d6c = load i32, i32* @r28, align 4
  store i32 %v0_10001d6c, i32* %r3.global-to-local, align 4
  store i32 268442996, i32* @lr, align 4
  %v4_10001d70 = inttoptr i32 %v0_10001d68 to i32*
  %v5_10001d70 = call i32 @function_10000300(i32 %v0_10001d6c, i32* %v4_10001d70, i32 6, i32 65535)
  %v0_10001d78 = load i32, i32* @r29, align 4
  store i32 %v5_10001d70, i32* %r18.global-to-local, align 4
  %v0_10001d88 = load i32, i32* @r28, align 4
  store i32 %v0_10001d88, i32* %r3.global-to-local, align 4
  store i32 268443024, i32* @lr, align 4
  %v4_10001d8c = inttoptr i32 %v0_10001d78 to i32*
  %v5_10001d8c = call i32 @function_10000300(i32 %v0_10001d88, i32* %v4_10001d8c, i32 7, i32 65535)
  %v0_10001d94 = load i32, i32* @r29, align 4
  store i32 %v5_10001d8c, i32* %r19.global-to-local, align 4
  %v0_10001da4 = load i32, i32* @r28, align 4
  store i32 %v0_10001da4, i32* %r3.global-to-local, align 4
  store i32 268443052, i32* @lr, align 4
  %v4_10001da8 = inttoptr i32 %v0_10001d94 to i32*
  %v5_10001da8 = call i32 @function_10000300(i32 %v0_10001da4, i32* %v4_10001da8, i32 16, i32 65535)
  %v0_10001db0 = load i32, i32* @r29, align 4
  store i32 %v5_10001da8, i32* %r16.global-to-local, align 4
  %v0_10001dc0 = load i32, i32* @r28, align 4
  store i32 %v0_10001dc0, i32* %r3.global-to-local, align 4
  store i32 268443080, i32* @lr, align 4
  %v4_10001dc4 = inttoptr i32 %v0_10001db0 to i32*
  %v5_10001dc4 = call i32 @function_10000300(i32 %v0_10001dc0, i32* %v4_10001dc4, i32 17, i32 65535)
  %v0_10001dc8 = load i32, i32* @r29, align 4
  store i32 %v5_10001dc4, i32* %r15.global-to-local, align 4
  %v0_10001dd8 = load i32, i32* @r28, align 4
  store i32 %v0_10001dd8, i32* %r3.global-to-local, align 4
  store i32 268443104, i32* @lr, align 4
  %v4_10001ddc = inttoptr i32 %v0_10001dc8 to i32*
  %v5_10001ddc = call i32 @function_10000300(i32 %v0_10001dd8, i32* %v4_10001ddc, i32 10, i32 0)
  %v0_10001de0 = load i32, i32* @r29, align 4
  %v0_10001df0 = load i32, i32* @r28, align 4
  store i32 %v0_10001df0, i32* %r3.global-to-local, align 4
  store i32 268443128, i32* @lr, align 4
  %v4_10001df4 = inttoptr i32 %v0_10001de0 to i32*
  %v5_10001df4 = call i32 @function_10000300(i32 %v0_10001df0, i32* %v4_10001df4, i32 11, i32 1)
  %v0_10001df8 = load i32, i32* @r29, align 4
  store i32 %v5_10001df4, i32* %r14.global-to-local, align 4
  %v0_10001e08 = load i32, i32* @r28, align 4
  store i32 %v0_10001e08, i32* %r3.global-to-local, align 4
  store i32 268443152, i32* @lr, align 4
  %v4_10001e0c = inttoptr i32 %v0_10001df8 to i32*
  %v5_10001e0c = call i32 @function_10000300(i32 %v0_10001e08, i32* %v4_10001e0c, i32 12, i32 0)
  %v0_10001e10 = load i32, i32* @r29, align 4
  store i32 %v5_10001e0c, i32* %r23.global-to-local, align 4
  %v0_10001e20 = load i32, i32* @r28, align 4
  store i32 %v0_10001e20, i32* %r3.global-to-local, align 4
  store i32 268443176, i32* @lr, align 4
  %v4_10001e24 = inttoptr i32 %v0_10001e10 to i32*
  %v5_10001e24 = call i32 @function_10000300(i32 %v0_10001e20, i32* %v4_10001e24, i32 13, i32 0)
  %v0_10001e28 = load i32, i32* @r29, align 4
  store i32 %v5_10001e24, i32* %r24.global-to-local, align 4
  %v0_10001e38 = load i32, i32* @r28, align 4
  store i32 %v0_10001e38, i32* %r3.global-to-local, align 4
  store i32 268443200, i32* @lr, align 4
  %v4_10001e3c = inttoptr i32 %v0_10001e28 to i32*
  %v5_10001e3c = call i32 @function_10000300(i32 %v0_10001e38, i32* %v4_10001e3c, i32 14, i32 0)
  %v0_10001e40 = load i32, i32* @r29, align 4
  store i32 %v5_10001e3c, i32* %r26.global-to-local, align 4
  %v0_10001e50 = load i32, i32* @r28, align 4
  store i32 %v0_10001e50, i32* %r3.global-to-local, align 4
  store i32 268443224, i32* @lr, align 4
  %v4_10001e54 = inttoptr i32 %v0_10001e40 to i32*
  %v5_10001e54 = call i32 @function_10000300(i32 %v0_10001e50, i32* %v4_10001e54, i32 15, i32 0)
  %v0_10001e58 = load i32, i32* @r29, align 4
  store i32 %v5_10001e54, i32* %r25.global-to-local, align 4
  %v0_10001e68 = load i32, i32* @r28, align 4
  store i32 %v0_10001e68, i32* %r3.global-to-local, align 4
  store i32 268443248, i32* @lr, align 4
  %v4_10001e6c = inttoptr i32 %v0_10001e58 to i32*
  %v5_10001e6c = call i32 @function_10000300(i32 %v0_10001e68, i32* %v4_10001e6c, i32 0, i32 512)
  %v0_10001e70 = load i32, i32* @r29, align 4
  store i32 %v5_10001e6c, i32* @r30, align 4
  %v0_10001e80 = load i32, i32* @r28, align 4
  store i32 %v0_10001e80, i32* %r3.global-to-local, align 4
  store i32 268443272, i32* @lr, align 4
  %v4_10001e84 = inttoptr i32 %v0_10001e70 to i32*
  %v5_10001e84 = call i32 @function_10000300(i32 %v0_10001e80, i32* %v4_10001e84, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001e8c = load i32, i32* @global_var_1001d188.12, align 4
  %v1_10001e90 = urem i32 %v5_10001e84, 256
  %v0_10001e94 = load i32, i32* @r29, align 4
  %v0_10001ea0 = load i32, i32* @r28, align 4
  store i32 %v0_10001ea0, i32* %r3.global-to-local, align 4
  store i32 268443304, i32* @lr, align 4
  %v5_10001ea4 = inttoptr i32 %v0_10001e94 to i32*
  %v6_10001ea4 = call i32 @function_10000280(i32 %v0_10001ea0, i32* %v5_10001ea4, i32 19, i32 %v3_10001e8c, i32 268566528)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268443316, i32* @lr, align 4
  %v0_10001eb0 = call i32 @function_10009e00()
  %v1_10001eb8 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001eb8 = add i32 %v1_10001eb8, %v0_10001eb0
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268443340, i32* @lr, align 4
  %v3_10001ec8 = call i32 @function_1000a780(i32 2, i32 3, i32 6)
  store i32 %v3_10001ec8, i32* %r3.global-to-local, align 4
  %v3_10001ecc = icmp eq i32 %v3_10001ec8, -1
  store i32 %v3_10001ec8, i32* %r22.global-to-local, align 4
  br i1 %v3_10001ecc, label %dec_label_pc_10002164, label %dec_label_pc_10001ed8

dec_label_pc_10001ed8:                            ; preds = %dec_label_pc_10001c64
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001ee4 = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268443380, i32* @lr, align 4
  %v4_10001ef0 = call i32 @function_1000a744(i32 0, i32 3, i32 %v2_10001ee4, i32 4)
  store i32 %v4_10001ef0, i32* %r3.global-to-local, align 4
  %v3_10001ef4 = icmp eq i32 %v4_10001ef0, -1
  br i1 %v3_10001ef4, label %dec_label_pc_1000226c, label %dec_label_pc_10001efc

dec_label_pc_10001efc:                            ; preds = %dec_label_pc_10001ed8
  %v0_10001efc = load i32, i32* %r20.global-to-local, align 4
  %v1_10001efc = icmp slt i32 %v0_10001efc, 0
  %v3_10001efc = icmp eq i32 %v0_10001efc, 0
  store i1 %v1_10001efc, i1* %cr2_lt.global-to-local, align 1
  store i1 %v3_10001efc, i1* %cr2_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10001f08 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001f08 = urem i32 %v0_10001f08, 65536
  store i32 %v1_10001f08, i32* %r17.global-to-local, align 4
  %v0_10001f0c = load i32, i32* %r18.global-to-local, align 4
  %v1_10001f0c = urem i32 %v0_10001f0c, 65536
  store i32 %v1_10001f0c, i32* %r18.global-to-local, align 4
  %v0_10001f10 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001f10 = urem i32 %v0_10001f10, 65536
  store i32 %v1_10001f10, i32* %r19.global-to-local, align 4
  %tmp39 = icmp slt i32 %v0_10001efc, 1
  br i1 %tmp39, label %dec_label_pc_10002058.preheader, label %dec_label_pc_10001f18

dec_label_pc_10001f18:                            ; preds = %dec_label_pc_10001efc
  %v0_10001f1c = load i32, i32* %r23.global-to-local, align 4
  %v1_10001f1c = urem i32 %v0_10001f1c, 256
  store i32 %v1_10001f1c, i32* %r0.global-to-local, align 4
  %v3_10001f24 = icmp eq i32 %v1_10001f1c, 0
  store i1 %v3_10001f24, i1* %cr4_eq.global-to-local, align 1
  %v1_10001f28 = urem i32 %v5_10001ddc, 2
  %v0_10001f2c = load i32, i32* %r25.global-to-local, align 4
  %v1_10001f2c = urem i32 %v0_10001f2c, 2
  %v0_10001f34 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001f34 = urem i32 %v0_10001f34, 2
  store i32 %v1_10001f34, i32* %r11.global-to-local, align 4
  %v3_10001f38 = icmp eq i32 %v1_10001d58, 0
  store i1 %v3_10001f38, i1* %cr3_eq.global-to-local, align 1
  %v0_10001f40 = load i32, i32* @r30, align 4
  %v1_10001f40 = add i32 %v0_10001f40, 40
  store i32 %v1_10001f40, i32* %r9.global-to-local, align 4
  %v0_10001f44 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001f44 = urem i32 %v0_10001f44, 2
  store i32 %v1_10001f44, i32* %r14.global-to-local, align 4
  %v0_10001f48 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001f48 = urem i32 %v0_10001f48, 2
  %v1_10001f4c = urem i32 %v0_10001f1c, 2
  %v1_10001f50 = urem i32 %v1_10001f40, 65536
  store i32 %v1_10001f50, i32* @r24, align 4
  store i32 0, i32* @r29, align 4
  store i32 5, i32* %r23.global-to-local, align 4
  %v4_10001fa0 = sext i8 %v5_10001d44 to i32
  %v4_10001fa8 = sext i8 %v5_10001d0c to i32
  br label %dec_label_pc_10001f5c

dec_label_pc_10001f5c:                            ; preds = %dec_label_pc_10002038, %dec_label_pc_10001f18
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268443496, i32* @lr, align 4
  %v2_10001f64 = call i32 @function_1000aadc(i32 1510, i32 1)
  store i32 %v2_10001f64, i32* %r3.global-to-local, align 4
  %v3_10001f68 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10001f68, i32* %r9.global-to-local, align 4
  %v0_10001f6c = load i32, i32* @r29, align 4
  %v1_10001f6c = mul i32 %v0_10001f6c, 4
  store i32 %v1_10001f6c, i32* %r0.global-to-local, align 4
  %v1_10001f70 = load i32, i32* %r21.global-to-local, align 4
  %v3_10001f70 = add i32 %v1_10001f70, %v1_10001f6c
  %v4_10001f70 = inttoptr i32 %v3_10001f70 to i32*
  store i32 %v2_10001f64, i32* %v4_10001f70, align 4
  %v0_10001f74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001f74 = mul i32 %v0_10001f74, 4
  store i32 %v1_10001f74, i32* %r9.global-to-local, align 4
  %v1_10001f78 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001f78 = add i32 %v1_10001f78, %v1_10001f74
  %v3_10001f78 = inttoptr i32 %v2_10001f78 to i32*
  %v4_10001f78 = load i32, i32* %v3_10001f78, align 4
  store i32 %v4_10001f78, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10001f80 = inttoptr i32 %v4_10001f78 to i32*
  %v2_10001f80 = load i32, i32* %v1_10001f80, align 4
  store i32 %v2_10001f80, i32* %r0.global-to-local, align 4
  %v1_10001f84 = add i32 %v4_10001f78, 20
  store i32 %v1_10001f84, i32* @r29, align 4
  %v0_10001f88 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001f88 = trunc i32 %v0_10001f88 to i16
  %v3_10001f88 = add i32 %v4_10001f78, 4
  %v4_10001f88 = inttoptr i32 %v3_10001f88 to i16*
  store i16 %v1_10001f88, i16* %v4_10001f88, align 2
  %v0_10001f8c = load i32, i32* %r11.global-to-local, align 4
  %v1_10001f8c = add i32 %v0_10001f8c, 40
  store i32 %v1_10001f8c, i32* @r28, align 4
  %v1_10001f90 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001f90, i32* %r0.global-to-local, align 4
  %v1_10001f94 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v2_10001f98 = inttoptr i32 %v0_10001f8c to i32*
  store i32 %v1_10001f94, i32* %v2_10001f98, align 4
  %v0_10001f9c = load i32, i32* @r24, align 4
  %v1_10001f9c = trunc i32 %v0_10001f9c to i16
  %v2_10001f9c = load i32, i32* %r11.global-to-local, align 4
  %v3_10001f9c = add i32 %v2_10001f9c, 2
  %v4_10001f9c = inttoptr i32 %v3_10001f9c to i16*
  store i16 %v1_10001f9c, i16* %v4_10001f9c, align 2
  store i32 %v4_10001fa0, i32* %r0.global-to-local, align 4
  %v2_10001fa4 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fa4 = add i32 %v2_10001fa4, 8
  %v4_10001fa4 = inttoptr i32 %v3_10001fa4 to i8*
  store i8 %v5_10001d44, i8* %v4_10001fa4, align 1
  store i32 %v4_10001fa8, i32* %r9.global-to-local, align 4
  %v2_10001fac = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fac = add i32 %v2_10001fac, 1
  %v4_10001fac = inttoptr i32 %v3_10001fac to i8*
  store i8 %v5_10001d0c, i8* %v4_10001fac, align 1
  %v0_10001fb0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001fb0, label %dec_label_pc_10001fbc, label %dec_label_pc_10001fb4

dec_label_pc_10001fb4:                            ; preds = %dec_label_pc_10001f5c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001fb8 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fb8 = add i32 %v2_10001fb8, 6
  %v4_10001fb8 = inttoptr i32 %v3_10001fb8 to i16*
  store i16 16384, i16* %v4_10001fb8, align 2
  br label %dec_label_pc_10001fbc

dec_label_pc_10001fbc:                            ; preds = %dec_label_pc_10001f5c, %dec_label_pc_10001fb4
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10001fc0 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001fc0 = trunc i32 %v0_10001fc0 to i16
  %v2_10001fc0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fc0 = add i32 %v2_10001fc0, 20
  %v4_10001fc0 = inttoptr i32 %v3_10001fc0 to i16*
  store i16 %v1_10001fc0, i16* %v4_10001fc0, align 2
  %v0_10001fc4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001fc4 = trunc i32 %v0_10001fc4 to i8
  %v2_10001fc4 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fc4 = add i32 %v2_10001fc4, 9
  %v4_10001fc4 = inttoptr i32 %v3_10001fc4 to i8*
  store i8 %v1_10001fc4, i8* %v4_10001fc4, align 1
  %v0_10001fc8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001fc8 = trunc i32 %v0_10001fc8 to i16
  %v2_10001fc8 = load i32, i32* @r29, align 4
  %v3_10001fc8 = add i32 %v2_10001fc8, 2
  %v4_10001fc8 = inttoptr i32 %v3_10001fc8 to i16*
  store i16 %v1_10001fc8, i16* %v4_10001fc8, align 2
  store i32 %v6_10001ea4, i32* %r0.global-to-local, align 4
  %v1_10001fd0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001fd0 = add i32 %v1_10001fd0, 12
  %v3_10001fd0 = inttoptr i32 %v2_10001fd0 to i32*
  store i32 %v6_10001ea4, i32* %v3_10001fd0, align 4
  %v3_10001fd4 = load i32, i32* %stack_var_-136, align 4
  %v1_10001fd8 = mul i32 %v3_10001fd4, 24
  %v1_10001fdc = load i32, i32* @r31, align 4
  %v2_10001fdc = add i32 %v1_10001fdc, %v1_10001fd8
  store i32 %v2_10001fdc, i32* %r9.global-to-local, align 4
  %v1_10001fe0 = add i32 %v2_10001fdc, 16
  %v2_10001fe0 = inttoptr i32 %v1_10001fe0 to i32*
  %v3_10001fe0 = load i32, i32* %v2_10001fe0, align 4
  store i32 %v3_10001fe0, i32* %r0.global-to-local, align 4
  store i32 %v1_10001f28, i32* %r9.global-to-local, align 4
  %v1_10001fe8 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001fe8 = add i32 %v1_10001fe8, 16
  %v3_10001fe8 = inttoptr i32 %v2_10001fe8 to i32*
  store i32 %v3_10001fe0, i32* %v3_10001fe8, align 4
  store i32 %v1_10001f34, i32* %r11.global-to-local, align 4
  %v0_10001ff0 = load i32, i32* @r29, align 4
  %v1_10001ff0 = add i32 %v0_10001ff0, 12
  %v2_10001ff0 = inttoptr i32 %v1_10001ff0 to i32*
  %v3_10001ff0 = load i32, i32* %v2_10001ff0, align 4
  store i32 %v3_10001ff0, i32* %r0.global-to-local, align 4
  %v0_10001ff4 = load i32, i32* %r16.global-to-local, align 4
  %v2_10001ff4 = add i32 %v0_10001ff0, 4
  %v3_10001ff4 = inttoptr i32 %v2_10001ff4 to i32*
  store i32 %v0_10001ff4, i32* %v3_10001ff4, align 4
  %v1_10001ff8 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10001ff8, i32* %r0.global-to-local, align 4
  %v1_10001ffc = call i32 @__asm_rlwimi(i32 %v1_10001f28, i32 21, i32 10, i32 10)
  store i32 %v1_10001ffc, i32* %r0.global-to-local, align 4
  %v1_10002000 = call i32 @__asm_rlwimi(i32 %v1_10001f34, i32 20, i32 11, i32 11)
  store i32 %v1_10002000, i32* %r0.global-to-local, align 4
  %v1_10002004 = call i32 @__asm_rlwimi(i32 %v1_10001f4c, i32 19, i32 12, i32 12)
  store i32 %v1_10002004, i32* %r0.global-to-local, align 4
  %v1_10002008 = call i32 @__asm_rlwimi(i32 %v1_10001f44, i32 18, i32 13, i32 13)
  store i32 %v1_10002008, i32* %r0.global-to-local, align 4
  %v1_1000200c = call i32 @__asm_rlwimi(i32 %v1_10001f48, i32 17, i32 14, i32 14)
  store i32 %v1_1000200c, i32* %r0.global-to-local, align 4
  %v1_10002010 = call i32 @__asm_rlwimi(i32 %v1_10001f2c, i32 16, i32 15, i32 15)
  store i32 %v1_10002010, i32* %r0.global-to-local, align 4
  %v1_10002014 = load i32, i32* @r29, align 4
  %v2_10002014 = add i32 %v1_10002014, 12
  %v3_10002014 = inttoptr i32 %v2_10002014 to i32*
  store i32 %v1_10002010, i32* %v3_10002014, align 4
  %v0_10002018 = call i32 @function_10005998()
  %v1_10002018 = trunc i32 %v0_10002018 to i16
  %v0_1000201c = load i32, i32* @r30, align 4
  store i32 %v0_1000201c, i32* @r4, align 4
  %v3_10002020 = load i32, i32* @r29, align 4
  %v4_10002020 = add i32 %v3_10002020, 14
  %v5_10002020 = inttoptr i32 %v4_10002020 to i16*
  store i16 %v1_10002018, i16* %v5_10002020, align 2
  %v0_10002024 = load i32, i32* @r28, align 4
  store i32 %v0_10002024, i32* @r3, align 4
  %v0_10002028 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002028, label %dec_label_pc_10002038, label %dec_label_pc_1000202c

dec_label_pc_1000202c:                            ; preds = %dec_label_pc_10001fbc
  %v0_1000202c = load i32, i32* @r29, align 4
  %v1_1000202c = add i32 %v0_1000202c, 12
  %v2_1000202c = inttoptr i32 %v1_1000202c to i32*
  %v3_1000202c = load i32, i32* %v2_1000202c, align 4
  %v1_10002030 = or i32 %v3_1000202c, 524288
  store i32 %v1_10002030, i32* %r0.global-to-local, align 4
  store i32 %v1_10002030, i32* %v2_1000202c, align 4
  br label %dec_label_pc_10002038

dec_label_pc_10002038:                            ; preds = %dec_label_pc_10001fbc, %dec_label_pc_1000202c
  store i32 ptrtoint (i32* @global_var_1000203c.18 to i32), i32* @lr, align 4
  %v0_10002038 = call i32 @function_10005a58()
  store i32 %v0_10002038, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10002040 = load i32, i32* @r28, align 4
  %v2_10002040 = load i32, i32* @r30, align 4
  %v4_10002040 = add i32 %v2_10002040, %v1_10002040
  %v5_10002040 = inttoptr i32 %v4_10002040 to i8*
  store i8 0, i8* %v5_10002040, align 1
  %v3_10002044 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002044, i32* %r9.global-to-local, align 4
  %v1_10002048 = add i32 %v3_10002044, 1
  store i32 %v1_10002048, i32* @r29, align 4
  %v1_1000204c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000204c = icmp slt i32 %v1_10002048, %v1_1000204c
  store i32 %v1_10002048, i32* %stack_var_-136, align 4
  br i1 %v2_1000204c, label %dec_label_pc_10001f5c, label %dec_label_pc_10002058.preheader

dec_label_pc_10002058.preheader:                  ; preds = %dec_label_pc_10002038, %dec_label_pc_10001efc
  %v3_10002074 = icmp eq i32 %v6_10001ea4, -1
  %v3_1000207c = icmp eq i32 %v1_10001e90, 0
  br label %dec_label_pc_10002058

dec_label_pc_10002058:                            ; preds = %dec_label_pc_10002058.preheader, %dec_label_pc_10002150
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10002060 = load i1, i1* %cr2_eq.global-to-local, align 1
  %v1_10002060 = load i1, i1* %cr2_lt.global-to-local, align 1
  %v2_10002060 = or i1 %v0_10002060, %v1_10002060
  br i1 %v2_10002060, label %dec_label_pc_10002150, label %dec_label_pc_10002064

dec_label_pc_10002064:                            ; preds = %dec_label_pc_10002058
  store i32 %v6_10001ea4, i32* %r0.global-to-local, align 4
  %v0_10002068 = load i32, i32* @r30, align 4
  %v1_10002068 = add i32 %v0_10002068, 20
  store i32 %v1_10002068, i32* @r26, align 4
  %v1_10002070 = urem i32 %v1_10002068, 65536
  store i32 %v1_10002070, i32* @r24, align 4
  store i1 %v3_10002074, i1* %cr3_eq.global-to-local, align 1
  %v1_10002078 = add i32 %v0_10002068, 40
  store i32 %v1_10002078, i32* @r25, align 4
  store i1 %v3_1000207c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10002088

dec_label_pc_10002088:                            ; preds = %dec_label_pc_100020e0, %dec_label_pc_10002064
  %v0_10002088 = phi i32 [ %v1_10002140, %dec_label_pc_100020e0 ], [ 0, %dec_label_pc_10002064 ]
  %v1_10002088 = mul i32 %v0_10002088, 24
  store i32 %v1_10002088, i32* %r0.global-to-local, align 4
  %v1_1000208c = mul i32 %v0_10002088, 4
  store i32 %v1_1000208c, i32* %r11.global-to-local, align 4
  %v1_10002090 = load i32, i32* %r21.global-to-local, align 4
  %v2_10002090 = add i32 %v1_10002090, %v1_1000208c
  %v3_10002090 = inttoptr i32 %v2_10002090 to i32*
  %v4_10002090 = load i32, i32* %v3_10002090, align 4
  store i32 %v4_10002090, i32* @r28, align 4
  %v1_10002094 = load i32, i32* @r31, align 4
  %v2_10002094 = add i32 %v1_10002094, %v1_10002088
  %v1_10002098 = add i32 %v2_10002094, 20
  %v2_10002098 = inttoptr i32 %v1_10002098 to i8*
  %v3_10002098 = load i8, i8* %v2_10002098, align 1
  %v4_10002098 = zext i8 %v3_10002098 to i32
  store i32 %v4_10002098, i32* %r9.global-to-local, align 4
  %v1_1000209c = add i32 %v4_10002090, 20
  store i32 %v1_1000209c, i32* @r27, align 4
  %tmp40 = icmp ult i8 %v3_10002098, 32
  br i1 %tmp40, label %dec_label_pc_100021c4, label %dec_label_pc_100020a8

dec_label_pc_100020a8:                            ; preds = %dec_label_pc_10002088
  %v0_100020a8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100020a8, label %dec_label_pc_100021ec, label %dec_label_pc_100020ac

dec_label_pc_100020ac:                            ; preds = %dec_label_pc_100021c4, %dec_label_pc_100020a8
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_100020b4 = load i32, i32* %r17.global-to-local, align 4
  %v4_100020b4 = icmp eq i32 %v0_100020b4, 65535
  br i1 %v4_100020b4, label %dec_label_pc_10002204, label %dec_label_pc_100020bc

dec_label_pc_100020bc:                            ; preds = %dec_label_pc_100021ec, %dec_label_pc_100020ac
  %v1_100020bc = phi i32 [ %v1_100021fc, %dec_label_pc_100021ec ], [ 65535, %dec_label_pc_100020ac ]
  %v0_100020bc = load i32, i32* %r18.global-to-local, align 4
  %v4_100020bc = icmp eq i32 %v0_100020bc, %v1_100020bc
  br i1 %v4_100020bc, label %dec_label_pc_10002214, label %dec_label_pc_100020c4

dec_label_pc_100020c4:                            ; preds = %dec_label_pc_10002204.dec_label_pc_100020c4_crit_edge, %dec_label_pc_100020bc
  %v1_100020c4 = phi i32 [ %v1_100020c4.pre, %dec_label_pc_10002204.dec_label_pc_100020c4_crit_edge ], [ %v1_100020bc, %dec_label_pc_100020bc ]
  %v0_100020c4 = load i32, i32* %r19.global-to-local, align 4
  %v4_100020c4 = icmp eq i32 %v0_100020c4, %v1_100020c4
  br i1 %v4_100020c4, label %dec_label_pc_10002224, label %dec_label_pc_100020cc

dec_label_pc_100020cc:                            ; preds = %dec_label_pc_10002214.dec_label_pc_100020cc_crit_edge, %dec_label_pc_100020c4
  %v1_100020cc = phi i32 [ %v1_100020cc.pre, %dec_label_pc_10002214.dec_label_pc_100020cc_crit_edge ], [ %v1_100020c4, %dec_label_pc_100020c4 ]
  %v0_100020cc = load i32, i32* %r16.global-to-local, align 4
  %v4_100020cc = icmp eq i32 %v0_100020cc, %v1_100020cc
  br i1 %v4_100020cc, label %dec_label_pc_10002234, label %dec_label_pc_100020d4

dec_label_pc_100020d4:                            ; preds = %dec_label_pc_10002224.dec_label_pc_100020d4_crit_edge, %dec_label_pc_100020cc
  %v1_100020d4 = phi i32 [ %v1_100020d4.pre, %dec_label_pc_10002224.dec_label_pc_100020d4_crit_edge ], [ %v1_100020cc, %dec_label_pc_100020cc ]
  %v0_100020d4 = load i32, i32* %r15.global-to-local, align 4
  %v4_100020d4 = icmp eq i32 %v0_100020d4, %v1_100020d4
  br i1 %v4_100020d4, label %dec_label_pc_10002244, label %dec_label_pc_100020dc

dec_label_pc_100020dc:                            ; preds = %dec_label_pc_10002234, %dec_label_pc_100020d4
  %v0_100020dc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100020dc, label %dec_label_pc_100020e0, label %dec_label_pc_10002250

dec_label_pc_100020e0:                            ; preds = %dec_label_pc_100020dc, %dec_label_pc_10002244, %dec_label_pc_10002250
  %v0_100020e0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100020e0 = trunc i32 %v0_100020e0 to i16
  %v2_100020e0 = load i32, i32* @r28, align 4
  %v3_100020e0 = add i32 %v2_100020e0, 10
  %v4_100020e0 = inttoptr i32 %v3_100020e0 to i16*
  store i16 %v1_100020e0, i16* %v4_100020e0, align 2
  %v0_100020e8 = load i32, i32* @r28, align 4
  store i32 %v0_100020e8, i32* @r3, align 4
  %v2_100020ec = call i32 @function_10003ca8(i32 %v0_100020e8, i32 20)
  %v3_100020ec = trunc i32 %v2_100020ec to i16
  %v0_100020f0 = load i32, i32* @r27, align 4
  store i32 %v0_100020f0, i32* @r4, align 4
  %v3_100020f4 = load i32, i32* @r28, align 4
  %v4_100020f4 = add i32 %v3_100020f4, 10
  %v5_100020f4 = inttoptr i32 %v4_100020f4 to i16*
  store i16 %v3_100020ec, i16* %v5_100020f4, align 2
  %v0_100020f8 = load i32, i32* @r24, align 4
  %v0_100020fc = load i32, i32* %r23.global-to-local, align 4
  %v1_100020fc = trunc i32 %v0_100020fc to i16
  %v2_100020fc = load i32, i32* @r27, align 4
  %v3_100020fc = add i32 %v2_100020fc, 16
  %v4_100020fc = inttoptr i32 %v3_100020fc to i16*
  store i16 %v1_100020fc, i16* %v4_100020fc, align 2
  %v0_10002100 = load i32, i32* @r26, align 4
  %v0_10002104 = load i32, i32* @r28, align 4
  store i32 %v0_10002104, i32* %r3.global-to-local, align 4
  %v4_10002108 = call i32 @function_10003d0c(i32 %v0_10002104, i32 %v0_100020f0, i32 %v0_100020f8, i32 %v0_10002100)
  %v5_10002108 = trunc i32 %v4_10002108 to i16
  store i32 %v4_10002108, i32* %r3.global-to-local, align 4
  %v3_1000210c = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_1000210c, i32* %r7.global-to-local, align 4
  %v0_10002110 = load i32, i32* @r27, align 4
  %v1_10002110 = add i32 %v0_10002110, 2
  %v2_10002110 = inttoptr i32 %v1_10002110 to i16*
  %v3_10002110 = load i16, i16* %v2_10002110, align 2
  %v4_10002110 = zext i16 %v3_10002110 to i32
  store i32 %v4_10002110, i32* %r0.global-to-local, align 4
  %v0_10002114 = load i32, i32* @r28, align 4
  %v1_10002118 = mul i32 %v3_1000210c, 24
  store i32 %v1_10002118, i32* %r7.global-to-local, align 4
  %v4_1000211c = add i32 %v0_10002110, 16
  %v5_1000211c = inttoptr i32 %v4_1000211c to i16*
  store i16 %v5_10002108, i16* %v5_1000211c, align 2
  %v0_10002120 = load i32, i32* @r25, align 4
  %v0_10002124 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002124, i32* %r3.global-to-local, align 4
  %v0_10002128 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002128 = load i32, i32* @r31, align 4
  %v2_10002128 = add i32 %v1_10002128, %v0_10002128
  store i32 %v2_10002128, i32* %r7.global-to-local, align 4
  %v0_10002130 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002130 = trunc i32 %v0_10002130 to i16
  %v3_10002130 = add i32 %v2_10002128, 2
  %v4_10002130 = inttoptr i32 %v3_10002130 to i16*
  store i16 %v1_10002130, i16* %v4_10002130, align 2
  store i32 268443964, i32* @lr, align 4
  %v6_10002138 = call i32 @function_1000a704(i32 %v0_10002124, i32 %v0_10002114, i32 %v0_10002120, i32 16384, i32 %v2_10002128, i32 16)
  store i32 %v6_10002138, i32* %r3.global-to-local, align 4
  %v3_1000213c = load i32, i32* %stack_var_-136, align 4
  %v1_10002140 = add i32 %v3_1000213c, 1
  store i32 %v1_10002140, i32* %r9.global-to-local, align 4
  %v1_10002144 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002144 = icmp slt i32 %v1_10002140, %v1_10002144
  store i32 %v1_10002140, i32* %stack_var_-136, align 4
  br i1 %v2_10002144, label %dec_label_pc_10002088, label %dec_label_pc_10002150

dec_label_pc_10002150:                            ; preds = %dec_label_pc_100020e0, %dec_label_pc_10002058
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268443992, i32* @lr, align 4
  %v0_10002154 = call i32 @function_10009e00()
  store i32 %v0_10002154, i32* %r3.global-to-local, align 4
  store i32 %v2_10001eb8, i32* %r0.global-to-local, align 4
  %v2_1000215c = icmp slt i32 %v2_10001eb8, %v0_10002154
  br i1 %v2_1000215c, label %dec_label_pc_10002164, label %dec_label_pc_10002058

dec_label_pc_10002164:                            ; preds = %dec_label_pc_10002150, %dec_label_pc_10001c64, %dec_label_pc_1000226c
  store i32 %v0_10001c80, i32* %r0.global-to-local, align 4
  %v1_10002178 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001c6c)
  store i32 %v0_10001cbc, i32* %r24.global-to-local, align 4
  store i32 %v0_10001cc0, i32* %r25.global-to-local, align 4
  store i32 %v0_10001cc4, i32* %r26.global-to-local, align 4
  store i32 %v0_10001c78, i32* %r27.global-to-local, align 4
  store i32 %v0_10001cd0, i32* %r29.global-to-local, align 4
  %v0_100021c0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100021c0

dec_label_pc_100021c4:                            ; preds = %dec_label_pc_10002088
  %v1_100021c4 = add i32 %v2_10002094, 16
  %v2_100021c4 = inttoptr i32 %v1_100021c4 to i32*
  %v3_100021c4 = load i32, i32* %v2_100021c4, align 4
  store i32 %v3_100021c4, i32* %r29.global-to-local, align 4
  %v0_100021c8 = call i32 @function_10005998()
  store i32 %v0_100021c8, i32* %r3.global-to-local, align 4
  %v3_100021cc = load i32, i32* %stack_var_-136, align 4
  %v1_100021d0 = mul i32 %v3_100021cc, 24
  %v1_100021d4 = load i32, i32* @r31, align 4
  %v2_100021d4 = add i32 %v1_100021d4, %v1_100021d0
  store i32 %v2_100021d4, i32* %r9.global-to-local, align 4
  %v1_100021d8 = add i32 %v2_100021d4, 20
  %v2_100021d8 = inttoptr i32 %v1_100021d8 to i8*
  %v3_100021d8 = load i8, i8* %v2_100021d8, align 1
  %v4_100021d8 = zext i8 %v3_100021d8 to i32
  store i32 %v4_100021d8, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100021d8, 64
  %v2_100021dc = zext i8 %tmp to i32
  %v3_100021dc = lshr i32 %v0_100021c8, %v2_100021dc
  store i32 %v3_100021dc, i32* %r3.global-to-local, align 4
  %v0_100021e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100021e0 = add i32 %v3_100021dc, %v0_100021e0
  store i32 %v2_100021e0, i32* %r29.global-to-local, align 4
  %v1_100021e4 = load i32, i32* @r28, align 4
  %v2_100021e4 = add i32 %v1_100021e4, 16
  %v3_100021e4 = inttoptr i32 %v2_100021e4 to i32*
  store i32 %v2_100021e0, i32* %v3_100021e4, align 4
  %v0_100021e8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100021e8, label %dec_label_pc_100021ec, label %dec_label_pc_100020ac

dec_label_pc_100021ec:                            ; preds = %dec_label_pc_100021c4, %dec_label_pc_100020a8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100021f0 = call i32 @function_10005998()
  store i32 %v0_100021f0, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_100021f8 = load i32, i32* @r28, align 4
  %v2_100021f8 = add i32 %v1_100021f8, 12
  %v3_100021f8 = inttoptr i32 %v2_100021f8 to i32*
  store i32 %v0_100021f0, i32* %v3_100021f8, align 4
  %v0_100021fc = load i32, i32* %r17.global-to-local, align 4
  %v1_100021fc = load i32, i32* %r29.global-to-local, align 4
  %v4_100021fc = icmp eq i32 %v0_100021fc, %v1_100021fc
  br i1 %v4_100021fc, label %dec_label_pc_10002204, label %dec_label_pc_100020bc

dec_label_pc_10002204:                            ; preds = %dec_label_pc_100021ec, %dec_label_pc_100020ac
  %v0_10002204 = call i32 @function_10005998()
  %v1_10002204 = trunc i32 %v0_10002204 to i16
  store i32 %v0_10002204, i32* %r3.global-to-local, align 4
  %v0_10002208 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002208 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002208 = icmp eq i32 %v0_10002208, %v1_10002208
  %v3_1000220c = load i32, i32* @r28, align 4
  %v4_1000220c = add i32 %v3_1000220c, 4
  %v5_1000220c = inttoptr i32 %v4_1000220c to i16*
  store i16 %v1_10002204, i16* %v5_1000220c, align 2
  br i1 %v4_10002208, label %dec_label_pc_10002214, label %dec_label_pc_10002204.dec_label_pc_100020c4_crit_edge

dec_label_pc_10002204.dec_label_pc_100020c4_crit_edge: ; preds = %dec_label_pc_10002204
  %v1_100020c4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100020c4

dec_label_pc_10002214:                            ; preds = %dec_label_pc_10002204, %dec_label_pc_100020bc
  %v0_10002214 = call i32 @function_10005998()
  %v1_10002214 = trunc i32 %v0_10002214 to i16
  store i32 %v0_10002214, i32* %r3.global-to-local, align 4
  %v0_10002218 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002218 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002218 = icmp eq i32 %v0_10002218, %v1_10002218
  %v3_1000221c = load i32, i32* @r28, align 4
  %v4_1000221c = add i32 %v3_1000221c, 20
  %v5_1000221c = inttoptr i32 %v4_1000221c to i16*
  store i16 %v1_10002214, i16* %v5_1000221c, align 2
  br i1 %v4_10002218, label %dec_label_pc_10002224, label %dec_label_pc_10002214.dec_label_pc_100020cc_crit_edge

dec_label_pc_10002214.dec_label_pc_100020cc_crit_edge: ; preds = %dec_label_pc_10002214
  %v1_100020cc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100020cc

dec_label_pc_10002224:                            ; preds = %dec_label_pc_10002214, %dec_label_pc_100020c4
  %v0_10002224 = call i32 @function_10005998()
  %v1_10002224 = trunc i32 %v0_10002224 to i16
  store i32 %v0_10002224, i32* %r3.global-to-local, align 4
  %v0_10002228 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002228 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002228 = icmp eq i32 %v0_10002228, %v1_10002228
  %v3_1000222c = load i32, i32* @r27, align 4
  %v4_1000222c = add i32 %v3_1000222c, 2
  %v5_1000222c = inttoptr i32 %v4_1000222c to i16*
  store i16 %v1_10002224, i16* %v5_1000222c, align 2
  br i1 %v4_10002228, label %dec_label_pc_10002234, label %dec_label_pc_10002224.dec_label_pc_100020d4_crit_edge

dec_label_pc_10002224.dec_label_pc_100020d4_crit_edge: ; preds = %dec_label_pc_10002224
  %v1_100020d4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100020d4

dec_label_pc_10002234:                            ; preds = %dec_label_pc_10002224, %dec_label_pc_100020cc
  %v0_10002234 = call i32 @function_10005998()
  store i32 %v0_10002234, i32* %r3.global-to-local, align 4
  %v0_10002238 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002238 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002238 = icmp eq i32 %v0_10002238, %v1_10002238
  %v1_1000223c = load i32, i32* @r27, align 4
  %v2_1000223c = add i32 %v1_1000223c, 4
  %v3_1000223c = inttoptr i32 %v2_1000223c to i32*
  store i32 %v0_10002234, i32* %v3_1000223c, align 4
  br i1 %v4_10002238, label %dec_label_pc_10002244, label %dec_label_pc_100020dc

dec_label_pc_10002244:                            ; preds = %dec_label_pc_10002234, %dec_label_pc_100020d4
  %v0_10002244 = call i32 @function_10005998()
  store i32 %v0_10002244, i32* %r3.global-to-local, align 4
  %v1_10002248 = load i32, i32* @r27, align 4
  %v2_10002248 = add i32 %v1_10002248, 8
  %v3_10002248 = inttoptr i32 %v2_10002248 to i32*
  store i32 %v0_10002244, i32* %v3_10002248, align 4
  %v0_1000224c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000224c, label %dec_label_pc_100020e0, label %dec_label_pc_10002250

dec_label_pc_10002250:                            ; preds = %dec_label_pc_100020dc, %dec_label_pc_10002244
  %v0_10002250 = load i32, i32* @r28, align 4
  %v1_10002250 = add i32 %v0_10002250, 40
  store i32 %v1_10002250, i32* @r29, align 4
  %v0_10002254 = load i32, i32* @r30, align 4
  store i32 %v0_10002254, i32* @r4, align 4
  store i32 %v1_10002250, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10002260.19 to i32), i32* @lr, align 4
  %v0_1000225c = call i32 @function_10005a58()
  store i32 %v0_1000225c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10002264 = load i32, i32* @r29, align 4
  %v2_10002264 = load i32, i32* @r30, align 4
  %v4_10002264 = add i32 %v2_10002264, %v1_10002264
  %v5_10002264 = inttoptr i32 %v4_10002264 to i8*
  store i8 0, i8* %v5_10002264, align 1
  br label %dec_label_pc_100020e0

dec_label_pc_1000226c:                            ; preds = %dec_label_pc_10001ed8
  %v0_1000226c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_1000226c, i32* %r3.global-to-local, align 4
  store i32 268444276, i32* @lr, align 4
  %v0_10002270 = call i32 @function_10009a30()
  store i32 %v0_10002270, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002164

; uselistorder directives
  uselistorder i32 %v0_10002224, { 1, 0 }
  uselistorder i32 %v0_10002214, { 1, 0 }
  uselistorder i32 %v0_10002204, { 1, 0 }
  uselistorder i32 %v1_100021fc, { 1, 0 }
  uselistorder i32 %v1_10002140, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002108, { 1, 0 }
  uselistorder i32 %v1_1000208c, { 1, 0 }
  uselistorder i32 %v1_10001f74, { 1, 0 }
  uselistorder i32 %v1_10001f6c, { 1, 0 }
  uselistorder i32 %v1_10001f44, { 1, 0 }
  uselistorder i32 %v1_10001f34, { 2, 1, 0 }
  uselistorder i32 %v1_10001f1c, { 1, 0 }
  uselistorder i32 %v2_10001eb8, { 1, 0 }
  uselistorder i32 %v6_10001ea4, { 3, 0, 2, 1 }
  uselistorder i8 %v5_10001d44, { 1, 0 }
  uselistorder i8 %v5_10001d0c, { 1, 0 }
  uselistorder i32* %stack_var_-136, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 22, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32* %r29.global-to-local, { 10, 8, 11, 9, 12, 7, 13, 0, 1, 3, 2, 4, 5, 6, 14 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_10002250, { 1, 0 }
  uselistorder label %dec_label_pc_10002164, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100020e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002058, { 1, 0 }
  uselistorder label %dec_label_pc_10002038, { 1, 0 }
  uselistorder label %dec_label_pc_10001fbc, { 1, 0 }
}

define i32 @function_10002278(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10002278:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr2_lt.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10002278 = load i32, i32* @lr, align 4
  store i32 %v0_10002278, i32* %r0.global-to-local, align 4
  %v0_10002280 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r24.global-to-local, align 4
  store i32 %v0_10002280, i32* %r27.global-to-local, align 4
  %v0_10002294 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_100022dc = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100022e4 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268444412, i32* @lr, align 4
  %v2_100022f8 = call i32 @function_1000aadc(i32 %arg2, i32 4)
  %v0_100022fc = load i32, i32* @r29, align 4
  store i32 %v2_100022f8, i32* %r25.global-to-local, align 4
  %v0_1000230c = load i32, i32* @r28, align 4
  store i32 %v0_1000230c, i32* %r3.global-to-local, align 4
  store i32 268444436, i32* @lr, align 4
  %v4_10002310 = inttoptr i32 %v0_100022fc to i32*
  %v5_10002310 = call i32 @function_10000300(i32 %v0_1000230c, i32* %v4_10002310, i32 2, i32 0)
  %v5_10002320 = trunc i32 %v5_10002310 to i8
  %v0_10002328 = load i32, i32* @r29, align 4
  %v0_1000232c = load i32, i32* @r28, align 4
  store i32 %v0_1000232c, i32* %r3.global-to-local, align 4
  store i32 268444468, i32* @lr, align 4
  %v4_10002330 = inttoptr i32 %v0_10002328 to i32*
  %v5_10002330 = call i32 @function_10000300(i32 %v0_1000232c, i32* %v4_10002330, i32 3, i32 65535)
  %v0_10002334 = load i32, i32* @r29, align 4
  store i32 %v5_10002330, i32* %r21.global-to-local, align 4
  %v0_10002344 = load i32, i32* @r28, align 4
  store i32 %v0_10002344, i32* %r3.global-to-local, align 4
  store i32 268444492, i32* @lr, align 4
  %v4_10002348 = inttoptr i32 %v0_10002334 to i32*
  %v5_10002348 = call i32 @function_10000300(i32 %v0_10002344, i32* %v4_10002348, i32 4, i32 64)
  %v0_1000234c = load i32, i32* @r29, align 4
  %v5_10002358 = trunc i32 %v5_10002348 to i8
  %v0_10002360 = load i32, i32* @r28, align 4
  store i32 %v0_10002360, i32* %r3.global-to-local, align 4
  store i32 268444520, i32* @lr, align 4
  %v4_10002364 = inttoptr i32 %v0_1000234c to i32*
  %v5_10002364 = call i32 @function_10000300(i32 %v0_10002360, i32* %v4_10002364, i32 5, i32 1)
  %v1_1000236c = urem i32 %v5_10002364, 256
  %v0_1000237c = load i32, i32* @r29, align 4
  %v0_10002380 = load i32, i32* @r28, align 4
  store i32 %v0_10002380, i32* %r3.global-to-local, align 4
  store i32 268444552, i32* @lr, align 4
  %v4_10002384 = inttoptr i32 %v0_1000237c to i32*
  %v5_10002384 = call i32 @function_10000300(i32 %v0_10002380, i32* %v4_10002384, i32 6, i32 65535)
  %v0_1000238c = load i32, i32* @r29, align 4
  store i32 %v5_10002384, i32* %r22.global-to-local, align 4
  %v0_1000239c = load i32, i32* @r28, align 4
  store i32 %v0_1000239c, i32* %r3.global-to-local, align 4
  store i32 268444580, i32* @lr, align 4
  %v4_100023a0 = inttoptr i32 %v0_1000238c to i32*
  %v5_100023a0 = call i32 @function_10000300(i32 %v0_1000239c, i32* %v4_100023a0, i32 7, i32 65535)
  %v0_100023a8 = load i32, i32* @r29, align 4
  store i32 %v5_100023a0, i32* %r23.global-to-local, align 4
  %v0_100023b8 = load i32, i32* @r28, align 4
  store i32 %v0_100023b8, i32* %r3.global-to-local, align 4
  store i32 268444608, i32* @lr, align 4
  %v4_100023bc = inttoptr i32 %v0_100023a8 to i32*
  %v5_100023bc = call i32 @function_10000300(i32 %v0_100023b8, i32* %v4_100023bc, i32 16, i32 65535)
  %v0_100023c0 = load i32, i32* @r29, align 4
  store i32 %v5_100023bc, i32* %r20.global-to-local, align 4
  %v0_100023d0 = load i32, i32* @r28, align 4
  store i32 %v0_100023d0, i32* %r3.global-to-local, align 4
  store i32 268444632, i32* @lr, align 4
  %v4_100023d4 = inttoptr i32 %v0_100023c0 to i32*
  %v5_100023d4 = call i32 @function_10000300(i32 %v0_100023d0, i32* %v4_100023d4, i32 17, i32 0)
  %v0_100023d8 = load i32, i32* @r29, align 4
  store i32 %v5_100023d4, i32* %r19.global-to-local, align 4
  %v0_100023e8 = load i32, i32* @r28, align 4
  store i32 %v0_100023e8, i32* %r3.global-to-local, align 4
  store i32 268444656, i32* @lr, align 4
  %v4_100023ec = inttoptr i32 %v0_100023d8 to i32*
  %v5_100023ec = call i32 @function_10000300(i32 %v0_100023e8, i32* %v4_100023ec, i32 10, i32 0)
  %v0_100023f0 = load i32, i32* @r29, align 4
  store i32 %v5_100023ec, i32* %r14.global-to-local, align 4
  %v0_10002400 = load i32, i32* @r28, align 4
  store i32 %v0_10002400, i32* %r3.global-to-local, align 4
  store i32 268444680, i32* @lr, align 4
  %v4_10002404 = inttoptr i32 %v0_100023f0 to i32*
  %v5_10002404 = call i32 @function_10000300(i32 %v0_10002400, i32* %v4_10002404, i32 11, i32 0)
  %v0_10002408 = load i32, i32* @r29, align 4
  store i32 %v5_10002404, i32* %r15.global-to-local, align 4
  %v0_10002418 = load i32, i32* @r28, align 4
  store i32 %v0_10002418, i32* %r3.global-to-local, align 4
  store i32 268444704, i32* @lr, align 4
  %v4_1000241c = inttoptr i32 %v0_10002408 to i32*
  %v5_1000241c = call i32 @function_10000300(i32 %v0_10002418, i32* %v4_1000241c, i32 12, i32 0)
  %v0_10002420 = load i32, i32* @r29, align 4
  store i32 %v5_1000241c, i32* %r16.global-to-local, align 4
  %v0_10002430 = load i32, i32* @r28, align 4
  store i32 %v0_10002430, i32* %r3.global-to-local, align 4
  store i32 268444728, i32* @lr, align 4
  %v4_10002434 = inttoptr i32 %v0_10002420 to i32*
  %v5_10002434 = call i32 @function_10000300(i32 %v0_10002430, i32* %v4_10002434, i32 13, i32 0)
  %v0_10002438 = load i32, i32* @r29, align 4
  store i32 %v5_10002434, i32* %r17.global-to-local, align 4
  %v0_10002448 = load i32, i32* @r28, align 4
  store i32 %v0_10002448, i32* %r3.global-to-local, align 4
  store i32 268444752, i32* @lr, align 4
  %v4_1000244c = inttoptr i32 %v0_10002438 to i32*
  %v5_1000244c = call i32 @function_10000300(i32 %v0_10002448, i32* %v4_1000244c, i32 14, i32 1)
  %v0_10002450 = load i32, i32* @r29, align 4
  store i32 %v5_1000244c, i32* %r18.global-to-local, align 4
  %v0_10002460 = load i32, i32* @r28, align 4
  store i32 %v0_10002460, i32* %r3.global-to-local, align 4
  store i32 268444776, i32* @lr, align 4
  %v4_10002464 = inttoptr i32 %v0_10002450 to i32*
  %v5_10002464 = call i32 @function_10000300(i32 %v0_10002460, i32* %v4_10002464, i32 15, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000246c = load i32, i32* @global_var_1001d188.12, align 4
  %v0_10002470 = load i32, i32* @r29, align 4
  store i32 %v5_10002464, i32* %r30.global-to-local, align 4
  %v0_1000247c = load i32, i32* @r28, align 4
  store i32 %v0_1000247c, i32* %r3.global-to-local, align 4
  store i32 268444804, i32* @lr, align 4
  %v5_10002480 = inttoptr i32 %v0_10002470 to i32*
  %v6_10002480 = call i32 @function_10000280(i32 %v0_1000247c, i32* %v5_10002480, i32 19, i32 %v3_1000246c, i32 268566528)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268444816, i32* @lr, align 4
  %v0_1000248c = call i32 @function_10009e00()
  %v1_10002494 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002494 = add i32 %v1_10002494, %v0_1000248c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444840, i32* @lr, align 4
  %v3_100024a4 = call i32 @function_1000a780(i32 2, i32 3, i32 6)
  store i32 %v3_100024a4, i32* %r3.global-to-local, align 4
  %v3_100024a8 = icmp eq i32 %v3_100024a4, -1
  store i32 %v3_100024a4, i32* %r26.global-to-local, align 4
  br i1 %v3_100024a8, label %dec_label_pc_10002764, label %dec_label_pc_100024b4

dec_label_pc_100024b4:                            ; preds = %dec_label_pc_10002278
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100024c0 = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268444880, i32* @lr, align 4
  %v4_100024cc = call i32 @function_1000a744(i32 0, i32 3, i32 %v2_100024c0, i32 4)
  store i32 %v4_100024cc, i32* %r3.global-to-local, align 4
  %v3_100024d0 = icmp eq i32 %v4_100024cc, -1
  br i1 %v3_100024d0, label %dec_label_pc_1000285c, label %dec_label_pc_100024d8

dec_label_pc_100024d8:                            ; preds = %dec_label_pc_100024b4
  %v0_100024d8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100024d8 = icmp slt i32 %v0_100024d8, 0
  %v3_100024d8 = icmp eq i32 %v0_100024d8, 0
  store i1 %v1_100024d8, i1* %cr2_lt.global-to-local, align 1
  store i1 %v3_100024d8, i1* %cr2_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100024e0 = load i32, i32* %r14.global-to-local, align 4
  %v1_100024e0 = urem i32 %v0_100024e0, 256
  store i32 %v1_100024e0, i32* %r14.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_100024e8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100024e8 = urem i32 %v0_100024e8, 65536
  store i32 %v1_100024e8, i32* %r21.global-to-local, align 4
  %v0_100024ec = load i32, i32* %r22.global-to-local, align 4
  %v1_100024ec = urem i32 %v0_100024ec, 65536
  store i32 %v1_100024ec, i32* %r22.global-to-local, align 4
  %v0_100024f0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100024f0 = urem i32 %v0_100024f0, 65536
  store i32 %v1_100024f0, i32* %r23.global-to-local, align 4
  %tmp39 = icmp slt i32 %v0_100024d8, 1
  br i1 %tmp39, label %dec_label_pc_10002664.preheader, label %dec_label_pc_100024fc

dec_label_pc_100024fc:                            ; preds = %dec_label_pc_100024d8
  %v0_10002500 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002500 = urem i32 %v0_10002500, 2
  %v0_10002508 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002508 = urem i32 %v0_10002508, 2
  store i32 %v1_10002508, i32* %r0.global-to-local, align 4
  %v3_1000250c = icmp eq i32 %v1_1000236c, 0
  store i1 %v3_1000250c, i1* %cr4_eq.global-to-local, align 1
  %v0_10002510 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002510 = urem i32 %v0_10002510, 2
  %v0_10002518 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002518 = urem i32 %v0_10002518, 2
  store i32 %v1_10002518, i32* %r14.global-to-local, align 4
  store i32 %v1_100024e0, i32* %r9.global-to-local, align 4
  %v0_10002520 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002520 = urem i32 %v0_10002520, 2
  store i32 %v1_10002520, i32* %r15.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_1000252c = urem i32 %v0_100024e0, 2
  store i32 %v1_1000252c, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r30.global-to-local, align 4
  store i32 6, i32* %r27.global-to-local, align 4
  store i32 10, i32* %r18.global-to-local, align 4
  store i32 2, i32* %r17.global-to-local, align 4
  store i32 3, i32* %r16.global-to-local, align 4
  %v4_10002588 = sext i8 %v5_10002320 to i32
  %v4_10002590 = sext i8 %v5_10002358 to i32
  br label %dec_label_pc_10002544

dec_label_pc_10002544:                            ; preds = %dec_label_pc_100025a4, %dec_label_pc_100024fc
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268445008, i32* @lr, align 4
  %v2_1000254c = call i32 @function_1000aadc(i32 128, i32 1)
  store i32 %v2_1000254c, i32* %r3.global-to-local, align 4
  %v3_10002550 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002550, i32* %r9.global-to-local, align 4
  %v0_10002554 = load i32, i32* @r29, align 4
  %v1_10002554 = mul i32 %v0_10002554, 4
  store i32 %v1_10002554, i32* %r0.global-to-local, align 4
  %v1_10002558 = load i32, i32* %r25.global-to-local, align 4
  %v3_10002558 = add i32 %v1_10002558, %v1_10002554
  %v4_10002558 = inttoptr i32 %v3_10002558 to i32*
  store i32 %v2_1000254c, i32* %v4_10002558, align 4
  %v0_1000255c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000255c = mul i32 %v0_1000255c, 4
  store i32 %v1_1000255c, i32* %r9.global-to-local, align 4
  %v1_10002560 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002560 = add i32 %v1_10002560, %v1_1000255c
  %v3_10002560 = inttoptr i32 %v2_10002560 to i32*
  %v4_10002560 = load i32, i32* %v3_10002560, align 4
  store i32 %v4_10002560, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002568 = inttoptr i32 %v4_10002560 to i32*
  %v2_10002568 = load i32, i32* %v1_10002568, align 4
  store i32 %v2_10002568, i32* %r0.global-to-local, align 4
  %v1_1000256c = add i32 %v4_10002560, 20
  store i32 %v1_1000256c, i32* %r11.global-to-local, align 4
  %v0_10002570 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002570 = trunc i32 %v0_10002570 to i16
  %v3_10002570 = add i32 %v4_10002560, 4
  %v4_10002570 = inttoptr i32 %v3_10002570 to i16*
  store i16 %v1_10002570, i16* %v4_10002570, align 2
  %v2_10002574 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v2_10002574, i32* %r0.global-to-local, align 4
  %v1_10002578 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_10002580 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002580 = inttoptr i32 %v1_10002580 to i32*
  store i32 %v1_10002578, i32* %v2_10002580, align 4
  %v0_10002584 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002584 = trunc i32 %v0_10002584 to i16
  %v2_10002584 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002584 = add i32 %v2_10002584, 2
  %v4_10002584 = inttoptr i32 %v3_10002584 to i16*
  store i16 %v1_10002584, i16* %v4_10002584, align 2
  store i32 %v4_10002588, i32* %r0.global-to-local, align 4
  %v2_1000258c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000258c = add i32 %v2_1000258c, 1
  %v4_1000258c = inttoptr i32 %v3_1000258c to i8*
  store i8 %v5_10002320, i8* %v4_1000258c, align 1
  store i32 %v4_10002590, i32* %r9.global-to-local, align 4
  %v2_10002594 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002594 = add i32 %v2_10002594, 8
  %v4_10002594 = inttoptr i32 %v3_10002594 to i8*
  store i8 %v5_10002358, i8* %v4_10002594, align 1
  %v0_10002598 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002598, label %dec_label_pc_100025a4, label %dec_label_pc_1000259c

dec_label_pc_1000259c:                            ; preds = %dec_label_pc_10002544
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100025a0 = load i32, i32* %r29.global-to-local, align 4
  %v3_100025a0 = add i32 %v2_100025a0, 6
  %v4_100025a0 = inttoptr i32 %v3_100025a0 to i16*
  store i16 16384, i16* %v4_100025a0, align 2
  br label %dec_label_pc_100025a4

dec_label_pc_100025a4:                            ; preds = %dec_label_pc_10002544, %dec_label_pc_1000259c
  %v0_100025a4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100025a4 = trunc i32 %v0_100025a4 to i8
  %v2_100025a4 = load i32, i32* %r29.global-to-local, align 4
  %v3_100025a4 = add i32 %v2_100025a4, 9
  %v4_100025a4 = inttoptr i32 %v3_100025a4 to i8*
  store i8 %v1_100025a4, i8* %v4_100025a4, align 1
  %v0_100025a8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100025a8 = trunc i32 %v0_100025a8 to i16
  %v2_100025a8 = load i32, i32* %r29.global-to-local, align 4
  %v3_100025a8 = add i32 %v2_100025a8, 20
  %v4_100025a8 = inttoptr i32 %v3_100025a8 to i16*
  store i16 %v1_100025a8, i16* %v4_100025a8, align 2
  store i32 %v6_10002480, i32* %r0.global-to-local, align 4
  %v0_100025b0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100025b0 = trunc i32 %v0_100025b0 to i16
  %v2_100025b0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100025b0 = add i32 %v2_100025b0, 2
  %v4_100025b0 = inttoptr i32 %v3_100025b0 to i16*
  store i16 %v1_100025b0, i16* %v4_100025b0, align 2
  %v0_100025b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100025b4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100025b4 = add i32 %v1_100025b4, 12
  %v3_100025b4 = inttoptr i32 %v2_100025b4 to i32*
  store i32 %v0_100025b4, i32* %v3_100025b4, align 4
  %v3_100025b8 = load i32, i32* %stack_var_-136, align 4
  %v1_100025bc = mul i32 %v3_100025b8, 24
  %v1_100025c0 = load i32, i32* @r31, align 4
  %v2_100025c0 = add i32 %v1_100025c0, %v1_100025bc
  store i32 %v2_100025c0, i32* %r9.global-to-local, align 4
  %v1_100025c4 = add i32 %v2_100025c0, 16
  %v2_100025c4 = inttoptr i32 %v1_100025c4 to i32*
  %v3_100025c4 = load i32, i32* %v2_100025c4, align 4
  store i32 %v3_100025c4, i32* %r0.global-to-local, align 4
  store i32 %v1_10002500, i32* %r9.global-to-local, align 4
  %v1_100025cc = load i32, i32* %r29.global-to-local, align 4
  %v2_100025cc = add i32 %v1_100025cc, 16
  %v3_100025cc = inttoptr i32 %v2_100025cc to i32*
  store i32 %v3_100025c4, i32* %v3_100025cc, align 4
  %v0_100025d0 = load i32, i32* %r20.global-to-local, align 4
  %v1_100025d0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100025d0 = add i32 %v1_100025d0, 4
  %v3_100025d0 = inttoptr i32 %v2_100025d0 to i32*
  store i32 %v0_100025d0, i32* %v3_100025d0, align 4
  %v0_100025d4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100025d4 = add i32 %v0_100025d4, 12
  %v2_100025d4 = inttoptr i32 %v1_100025d4 to i32*
  %v3_100025d4 = load i32, i32* %v2_100025d4, align 4
  store i32 %v3_100025d4, i32* %r0.global-to-local, align 4
  %v2_100025d8 = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v2_100025d8, i32* %r0.global-to-local, align 4
  %v1_100025dc = call i32 @__asm_rlwimi(i32 %v1_1000252c, i32 21, i32 10, i32 10)
  store i32 %v1_100025dc, i32* %r0.global-to-local, align 4
  %v1_100025e0 = call i32 @__asm_rlwimi(i32 %v1_10002500, i32 20, i32 11, i32 11)
  store i32 %v1_100025e0, i32* %r0.global-to-local, align 4
  store i32 %v1_10002510, i32* %r9.global-to-local, align 4
  %v1_100025e8 = call i32 @__asm_rlwimi(i32 %v1_10002510, i32 19, i32 12, i32 12)
  store i32 %v1_100025e8, i32* %r0.global-to-local, align 4
  store i32 %v1_10002508, i32* %r9.global-to-local, align 4
  %v1_100025f0 = call i32 @__asm_rlwimi(i32 %v1_10002508, i32 18, i32 13, i32 13)
  store i32 %v1_100025f0, i32* %r0.global-to-local, align 4
  %v1_100025f4 = call i32 @__asm_rlwimi(i32 %v1_10002518, i32 17, i32 14, i32 14)
  store i32 %v1_100025f4, i32* %r0.global-to-local, align 4
  %v1_100025f8 = call i32 @__asm_rlwimi(i32 %v1_10002520, i32 16, i32 15, i32 15)
  store i32 %v1_100025f8, i32* %r0.global-to-local, align 4
  %v1_100025fc = load i32, i32* %r11.global-to-local, align 4
  %v2_100025fc = add i32 %v1_100025fc, 12
  %v3_100025fc = inttoptr i32 %v2_100025fc to i32*
  store i32 %v1_100025f8, i32* %v3_100025fc, align 4
  %v0_10002600 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002600 = trunc i32 %v0_10002600 to i8
  %v2_10002600 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002600 = add i32 %v2_10002600, 40
  %v4_10002600 = inttoptr i32 %v3_10002600 to i8*
  store i8 %v1_10002600, i8* %v4_10002600, align 1
  %v3_10002604 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002604 = add i32 %v3_10002604, 41
  %v5_10002604 = inttoptr i32 %v4_10002604 to i8*
  store i8 4, i8* %v5_10002604, align 1
  %v0_10002608 = call i32 @function_10005998()
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10002610 = urem i32 %v0_10002608, 16
  store i32 %v1_10002610, i32* %r3.global-to-local, align 4
  %v2_10002614 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002614 = add i32 %v2_10002614, 46
  %v4_10002614 = inttoptr i32 %v3_10002614 to i8*
  store i8 8, i8* %v4_10002614, align 1
  %v0_10002618 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002618 = add i32 %v0_10002618, 1400
  store i32 %v1_10002618, i32* %r3.global-to-local, align 4
  %v3_1000261c = load i32, i32* %r29.global-to-local, align 4
  %v4_1000261c = add i32 %v3_1000261c, 44
  %v5_1000261c = inttoptr i32 %v4_1000261c to i8*
  store i8 4, i8* %v5_1000261c, align 1
  %v0_10002620 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002620 = trunc i32 %v0_10002620 to i16
  %v2_10002620 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002620 = add i32 %v2_10002620, 42
  %v4_10002620 = inttoptr i32 %v3_10002620 to i16*
  store i16 %v1_10002620, i16* %v4_10002620, align 2
  %v0_10002624 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002624 = trunc i32 %v0_10002624 to i8
  %v2_10002624 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002624 = add i32 %v2_10002624, 45
  %v4_10002624 = inttoptr i32 %v3_10002624 to i8*
  store i8 %v1_10002624, i8* %v4_10002624, align 1
  %v3_10002628 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002628 = add i32 %v3_10002628, 47
  %v5_10002628 = inttoptr i32 %v4_10002628 to i8*
  store i8 10, i8* %v5_10002628, align 1
  %v0_1000262c = call i32 @function_10005998()
  store i32 %v0_1000262c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10002638 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002638 = add i32 %v1_10002638, 48
  %v3_10002638 = inttoptr i32 %v2_10002638 to i32*
  store i32 %v0_1000262c, i32* %v3_10002638, align 4
  %v0_1000263c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000263c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000263c = add i32 %v1_1000263c, 52
  %v3_1000263c = inttoptr i32 %v2_1000263c to i32*
  store i32 %v0_1000263c, i32* %v3_1000263c, align 4
  %v0_10002640 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002640 = trunc i32 %v0_10002640 to i8
  %v2_10002640 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002640 = add i32 %v2_10002640, 56
  %v4_10002640 = inttoptr i32 %v3_10002640 to i8*
  store i8 %v1_10002640, i8* %v4_10002640, align 1
  %v0_10002644 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002644 = trunc i32 %v0_10002644 to i8
  %v2_10002644 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002644 = add i32 %v2_10002644, 59
  %v4_10002644 = inttoptr i32 %v3_10002644 to i8*
  store i8 %v1_10002644, i8* %v4_10002644, align 1
  %v0_10002648 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002648 = trunc i32 %v0_10002648 to i8
  %v2_10002648 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002648 = add i32 %v2_10002648, 57
  %v4_10002648 = inttoptr i32 %v3_10002648 to i8*
  store i8 %v1_10002648, i8* %v4_10002648, align 1
  %v0_1000264c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000264c = trunc i32 %v0_1000264c to i8
  %v2_1000264c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000264c = add i32 %v2_1000264c, 58
  %v4_1000264c = inttoptr i32 %v3_1000264c to i8*
  store i8 %v1_1000264c, i8* %v4_1000264c, align 1
  %v3_10002650 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002650, i32* %r9.global-to-local, align 4
  %v1_10002654 = add i32 %v3_10002650, 1
  store i32 %v1_10002654, i32* @r29, align 4
  %v1_10002658 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002658 = icmp slt i32 %v1_10002654, %v1_10002658
  store i32 %v1_10002654, i32* %stack_var_-136, align 4
  br i1 %v2_10002658, label %dec_label_pc_10002544, label %dec_label_pc_10002664.preheader

dec_label_pc_10002664.preheader:                  ; preds = %dec_label_pc_100025a4, %dec_label_pc_100024d8
  %v3_1000267c = icmp eq i32 %v6_10002480, -1
  %v3_10002680 = icmp eq i32 %v1_100024e0, 0
  br label %dec_label_pc_10002664

dec_label_pc_10002664:                            ; preds = %dec_label_pc_10002664.preheader, %dec_label_pc_10002750
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_1000266c = load i1, i1* %cr2_eq.global-to-local, align 1
  %v1_1000266c = load i1, i1* %cr2_lt.global-to-local, align 1
  %v2_1000266c = or i1 %v0_1000266c, %v1_1000266c
  br i1 %v2_1000266c, label %dec_label_pc_10002750, label %dec_label_pc_10002670

dec_label_pc_10002670:                            ; preds = %dec_label_pc_10002664
  store i32 %v6_10002480, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  store i1 %v3_1000267c, i1* %cr3_eq.global-to-local, align 1
  store i1 %v3_10002680, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10002688

dec_label_pc_10002688:                            ; preds = %dec_label_pc_100026e0, %dec_label_pc_10002670
  %v0_10002688 = phi i32 [ %v1_10002740, %dec_label_pc_100026e0 ], [ 0, %dec_label_pc_10002670 ]
  %v1_10002688 = mul i32 %v0_10002688, 24
  store i32 %v1_10002688, i32* %r0.global-to-local, align 4
  %v1_1000268c = mul i32 %v0_10002688, 4
  store i32 %v1_1000268c, i32* %r11.global-to-local, align 4
  %v1_10002690 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002690 = add i32 %v1_10002690, %v1_1000268c
  %v3_10002690 = inttoptr i32 %v2_10002690 to i32*
  %v4_10002690 = load i32, i32* %v3_10002690, align 4
  store i32 %v4_10002690, i32* %r28.global-to-local, align 4
  %v1_10002694 = load i32, i32* @r31, align 4
  %v2_10002694 = add i32 %v1_10002694, %v1_10002688
  %v1_10002698 = add i32 %v2_10002694, 20
  %v2_10002698 = inttoptr i32 %v1_10002698 to i8*
  %v3_10002698 = load i8, i8* %v2_10002698, align 1
  %v4_10002698 = zext i8 %v3_10002698 to i32
  store i32 %v4_10002698, i32* %r9.global-to-local, align 4
  %v1_1000269c = add i32 %v4_10002690, 20
  store i32 %v1_1000269c, i32* %r27.global-to-local, align 4
  %tmp40 = icmp ult i8 %v3_10002698, 32
  br i1 %tmp40, label %dec_label_pc_100027c4, label %dec_label_pc_100026a8

dec_label_pc_100026a8:                            ; preds = %dec_label_pc_10002688
  %v0_100026a8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100026a8, label %dec_label_pc_100027ec, label %dec_label_pc_100026ac

dec_label_pc_100026ac:                            ; preds = %dec_label_pc_100027c4, %dec_label_pc_100026a8
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_100026b4 = load i32, i32* %r21.global-to-local, align 4
  %v4_100026b4 = icmp eq i32 %v0_100026b4, 65535
  br i1 %v4_100026b4, label %dec_label_pc_10002804, label %dec_label_pc_100026bc

dec_label_pc_100026bc:                            ; preds = %dec_label_pc_100027ec, %dec_label_pc_100026ac
  %v1_100026bc = phi i32 [ %v1_100027fc, %dec_label_pc_100027ec ], [ 65535, %dec_label_pc_100026ac ]
  %v0_100026bc = load i32, i32* %r22.global-to-local, align 4
  %v4_100026bc = icmp eq i32 %v0_100026bc, %v1_100026bc
  br i1 %v4_100026bc, label %dec_label_pc_10002814, label %dec_label_pc_100026c4

dec_label_pc_100026c4:                            ; preds = %dec_label_pc_10002804.dec_label_pc_100026c4_crit_edge, %dec_label_pc_100026bc
  %v1_100026c4 = phi i32 [ %v1_100026c4.pre, %dec_label_pc_10002804.dec_label_pc_100026c4_crit_edge ], [ %v1_100026bc, %dec_label_pc_100026bc ]
  %v0_100026c4 = load i32, i32* %r23.global-to-local, align 4
  %v4_100026c4 = icmp eq i32 %v0_100026c4, %v1_100026c4
  br i1 %v4_100026c4, label %dec_label_pc_10002824, label %dec_label_pc_100026cc

dec_label_pc_100026cc:                            ; preds = %dec_label_pc_10002814.dec_label_pc_100026cc_crit_edge, %dec_label_pc_100026c4
  %v1_100026cc = phi i32 [ %v1_100026cc.pre, %dec_label_pc_10002814.dec_label_pc_100026cc_crit_edge ], [ %v1_100026c4, %dec_label_pc_100026c4 ]
  %v0_100026cc = load i32, i32* %r20.global-to-local, align 4
  %v4_100026cc = icmp eq i32 %v0_100026cc, %v1_100026cc
  br i1 %v4_100026cc, label %dec_label_pc_10002834, label %dec_label_pc_100026d4

dec_label_pc_100026d4:                            ; preds = %dec_label_pc_10002824.dec_label_pc_100026d4_crit_edge, %dec_label_pc_100026cc
  %v1_100026d4 = phi i32 [ %v1_100026d4.pre, %dec_label_pc_10002824.dec_label_pc_100026d4_crit_edge ], [ %v1_100026cc, %dec_label_pc_100026cc ]
  %v0_100026d4 = load i32, i32* %r19.global-to-local, align 4
  %v4_100026d4 = icmp eq i32 %v0_100026d4, %v1_100026d4
  br i1 %v4_100026d4, label %dec_label_pc_10002844, label %dec_label_pc_100026dc

dec_label_pc_100026dc:                            ; preds = %dec_label_pc_10002834, %dec_label_pc_100026d4
  %v0_100026dc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100026dc, label %dec_label_pc_100026e0, label %dec_label_pc_10002850

dec_label_pc_100026e0:                            ; preds = %dec_label_pc_100026dc, %dec_label_pc_10002844, %dec_label_pc_10002850
  %v0_100026e0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100026e0 = trunc i32 %v0_100026e0 to i16
  %v2_100026e0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100026e0 = add i32 %v2_100026e0, 10
  %v4_100026e0 = inttoptr i32 %v3_100026e0 to i16*
  store i16 %v1_100026e0, i16* %v4_100026e0, align 2
  %v0_100026e8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100026e8, i32* @r3, align 4
  %v2_100026ec = call i32 @function_10003ca8(i32 %v0_100026e8, i32 20)
  %v3_100026ec = trunc i32 %v2_100026ec to i16
  %v0_100026f0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100026f0, i32* @r4, align 4
  %v4_100026f4 = add i32 %v0_100026e8, 10
  %v5_100026f4 = inttoptr i32 %v4_100026f4 to i16*
  store i16 %v3_100026ec, i16* %v5_100026f4, align 2
  %v0_100026fc = load i32, i32* %r30.global-to-local, align 4
  %v1_100026fc = trunc i32 %v0_100026fc to i16
  %v2_100026fc = load i32, i32* %r27.global-to-local, align 4
  %v3_100026fc = add i32 %v2_100026fc, 16
  %v4_100026fc = inttoptr i32 %v3_100026fc to i16*
  store i16 %v1_100026fc, i16* %v4_100026fc, align 2
  %v0_10002704 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002704, i32* %r3.global-to-local, align 4
  %v4_10002708 = call i32 @function_10003d0c(i32 %v0_10002704, i32 %v0_100026f0, i32 40, i32 40)
  %v5_10002708 = trunc i32 %v4_10002708 to i16
  store i32 %v4_10002708, i32* %r3.global-to-local, align 4
  %v3_1000270c = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_1000270c, i32* %r7.global-to-local, align 4
  %v0_10002710 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002710 = add i32 %v0_10002710, 2
  %v2_10002710 = inttoptr i32 %v1_10002710 to i16*
  %v3_10002710 = load i16, i16* %v2_10002710, align 2
  %v4_10002710 = zext i16 %v3_10002710 to i32
  store i32 %v4_10002710, i32* %r0.global-to-local, align 4
  %v0_10002714 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002718 = mul i32 %v3_1000270c, 24
  store i32 %v1_10002718, i32* %r7.global-to-local, align 4
  %v4_1000271c = add i32 %v0_10002710, 16
  %v5_1000271c = inttoptr i32 %v4_1000271c to i16*
  store i16 %v5_10002708, i16* %v5_1000271c, align 2
  %v0_10002724 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10002724, i32* %r3.global-to-local, align 4
  %v0_10002728 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002728 = load i32, i32* @r31, align 4
  %v2_10002728 = add i32 %v1_10002728, %v0_10002728
  store i32 %v2_10002728, i32* %r7.global-to-local, align 4
  %v0_10002730 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002730 = trunc i32 %v0_10002730 to i16
  %v3_10002730 = add i32 %v2_10002728, 2
  %v4_10002730 = inttoptr i32 %v3_10002730 to i16*
  store i16 %v1_10002730, i16* %v4_10002730, align 2
  store i32 268445500, i32* @lr, align 4
  %v6_10002738 = call i32 @function_1000a704(i32 %v0_10002724, i32 %v0_10002714, i32 60, i32 16384, i32 %v2_10002728, i32 16)
  store i32 %v6_10002738, i32* %r3.global-to-local, align 4
  %v3_1000273c = load i32, i32* %stack_var_-136, align 4
  %v1_10002740 = add i32 %v3_1000273c, 1
  store i32 %v1_10002740, i32* %r9.global-to-local, align 4
  %v1_10002744 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002744 = icmp slt i32 %v1_10002740, %v1_10002744
  store i32 %v1_10002740, i32* %stack_var_-136, align 4
  br i1 %v2_10002744, label %dec_label_pc_10002688, label %dec_label_pc_10002750

dec_label_pc_10002750:                            ; preds = %dec_label_pc_100026e0, %dec_label_pc_10002664
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268445528, i32* @lr, align 4
  %v0_10002754 = call i32 @function_10009e00()
  store i32 %v0_10002754, i32* %r3.global-to-local, align 4
  store i32 %v2_10002494, i32* %r0.global-to-local, align 4
  %v2_1000275c = icmp slt i32 %v2_10002494, %v0_10002754
  br i1 %v2_1000275c, label %dec_label_pc_10002764, label %dec_label_pc_10002664

dec_label_pc_10002764:                            ; preds = %dec_label_pc_10002750, %dec_label_pc_10002278, %dec_label_pc_1000285c
  store i32 %v0_10002294, i32* %r0.global-to-local, align 4
  %v1_10002778 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002280)
  store i32 %v0_100022dc, i32* %r28.global-to-local, align 4
  store i32 %v0_100022e4, i32* %r29.global-to-local, align 4
  %v0_100027c0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100027c0

dec_label_pc_100027c4:                            ; preds = %dec_label_pc_10002688
  %v1_100027c4 = add i32 %v2_10002694, 16
  %v2_100027c4 = inttoptr i32 %v1_100027c4 to i32*
  %v3_100027c4 = load i32, i32* %v2_100027c4, align 4
  store i32 %v3_100027c4, i32* %r29.global-to-local, align 4
  %v0_100027c8 = call i32 @function_10005998()
  store i32 %v0_100027c8, i32* %r3.global-to-local, align 4
  %v3_100027cc = load i32, i32* %stack_var_-136, align 4
  %v1_100027d0 = mul i32 %v3_100027cc, 24
  %v1_100027d4 = load i32, i32* @r31, align 4
  %v2_100027d4 = add i32 %v1_100027d4, %v1_100027d0
  store i32 %v2_100027d4, i32* %r9.global-to-local, align 4
  %v1_100027d8 = add i32 %v2_100027d4, 20
  %v2_100027d8 = inttoptr i32 %v1_100027d8 to i8*
  %v3_100027d8 = load i8, i8* %v2_100027d8, align 1
  %v4_100027d8 = zext i8 %v3_100027d8 to i32
  store i32 %v4_100027d8, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100027d8, 64
  %v2_100027dc = zext i8 %tmp to i32
  %v3_100027dc = lshr i32 %v0_100027c8, %v2_100027dc
  store i32 %v3_100027dc, i32* %r3.global-to-local, align 4
  %v0_100027e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100027e0 = add i32 %v3_100027dc, %v0_100027e0
  store i32 %v2_100027e0, i32* %r29.global-to-local, align 4
  %v1_100027e4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100027e4 = add i32 %v1_100027e4, 16
  %v3_100027e4 = inttoptr i32 %v2_100027e4 to i32*
  store i32 %v2_100027e0, i32* %v3_100027e4, align 4
  %v0_100027e8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100027e8, label %dec_label_pc_100027ec, label %dec_label_pc_100026ac

dec_label_pc_100027ec:                            ; preds = %dec_label_pc_100027c4, %dec_label_pc_100026a8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100027f0 = call i32 @function_10005998()
  store i32 %v0_100027f0, i32* %r3.global-to-local, align 4
  %v0_100027f4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100027f4 = or i32 %v0_100027f4, 65535
  store i32 %v1_100027f4, i32* %r29.global-to-local, align 4
  %v1_100027f8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100027f8 = add i32 %v1_100027f8, 12
  %v3_100027f8 = inttoptr i32 %v2_100027f8 to i32*
  store i32 %v0_100027f0, i32* %v3_100027f8, align 4
  %v0_100027fc = load i32, i32* %r21.global-to-local, align 4
  %v1_100027fc = load i32, i32* %r29.global-to-local, align 4
  %v4_100027fc = icmp eq i32 %v0_100027fc, %v1_100027fc
  br i1 %v4_100027fc, label %dec_label_pc_10002804, label %dec_label_pc_100026bc

dec_label_pc_10002804:                            ; preds = %dec_label_pc_100027ec, %dec_label_pc_100026ac
  %v0_10002804 = call i32 @function_10005998()
  %v1_10002804 = trunc i32 %v0_10002804 to i16
  store i32 %v0_10002804, i32* %r3.global-to-local, align 4
  %v0_10002808 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002808 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002808 = icmp eq i32 %v0_10002808, %v1_10002808
  %v3_1000280c = load i32, i32* %r28.global-to-local, align 4
  %v4_1000280c = add i32 %v3_1000280c, 4
  %v5_1000280c = inttoptr i32 %v4_1000280c to i16*
  store i16 %v1_10002804, i16* %v5_1000280c, align 2
  br i1 %v4_10002808, label %dec_label_pc_10002814, label %dec_label_pc_10002804.dec_label_pc_100026c4_crit_edge

dec_label_pc_10002804.dec_label_pc_100026c4_crit_edge: ; preds = %dec_label_pc_10002804
  %v1_100026c4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100026c4

dec_label_pc_10002814:                            ; preds = %dec_label_pc_10002804, %dec_label_pc_100026bc
  %v0_10002814 = call i32 @function_10005998()
  %v1_10002814 = trunc i32 %v0_10002814 to i16
  store i32 %v0_10002814, i32* %r3.global-to-local, align 4
  %v0_10002818 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002818 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002818 = icmp eq i32 %v0_10002818, %v1_10002818
  %v3_1000281c = load i32, i32* %r28.global-to-local, align 4
  %v4_1000281c = add i32 %v3_1000281c, 20
  %v5_1000281c = inttoptr i32 %v4_1000281c to i16*
  store i16 %v1_10002814, i16* %v5_1000281c, align 2
  br i1 %v4_10002818, label %dec_label_pc_10002824, label %dec_label_pc_10002814.dec_label_pc_100026cc_crit_edge

dec_label_pc_10002814.dec_label_pc_100026cc_crit_edge: ; preds = %dec_label_pc_10002814
  %v1_100026cc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100026cc

dec_label_pc_10002824:                            ; preds = %dec_label_pc_10002814, %dec_label_pc_100026c4
  %v0_10002824 = call i32 @function_10005998()
  %v1_10002824 = trunc i32 %v0_10002824 to i16
  store i32 %v0_10002824, i32* %r3.global-to-local, align 4
  %v0_10002828 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002828 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002828 = icmp eq i32 %v0_10002828, %v1_10002828
  %v3_1000282c = load i32, i32* %r27.global-to-local, align 4
  %v4_1000282c = add i32 %v3_1000282c, 2
  %v5_1000282c = inttoptr i32 %v4_1000282c to i16*
  store i16 %v1_10002824, i16* %v5_1000282c, align 2
  br i1 %v4_10002828, label %dec_label_pc_10002834, label %dec_label_pc_10002824.dec_label_pc_100026d4_crit_edge

dec_label_pc_10002824.dec_label_pc_100026d4_crit_edge: ; preds = %dec_label_pc_10002824
  %v1_100026d4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100026d4

dec_label_pc_10002834:                            ; preds = %dec_label_pc_10002824, %dec_label_pc_100026cc
  %v0_10002834 = call i32 @function_10005998()
  store i32 %v0_10002834, i32* %r3.global-to-local, align 4
  %v0_10002838 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002838 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002838 = icmp eq i32 %v0_10002838, %v1_10002838
  %v1_1000283c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000283c = add i32 %v1_1000283c, 4
  %v3_1000283c = inttoptr i32 %v2_1000283c to i32*
  store i32 %v0_10002834, i32* %v3_1000283c, align 4
  br i1 %v4_10002838, label %dec_label_pc_10002844, label %dec_label_pc_100026dc

dec_label_pc_10002844:                            ; preds = %dec_label_pc_10002834, %dec_label_pc_100026d4
  %v0_10002844 = call i32 @function_10005998()
  store i32 %v0_10002844, i32* %r3.global-to-local, align 4
  %v1_10002848 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002848 = add i32 %v1_10002848, 8
  %v3_10002848 = inttoptr i32 %v2_10002848 to i32*
  store i32 %v0_10002844, i32* %v3_10002848, align 4
  %v0_1000284c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000284c, label %dec_label_pc_100026e0, label %dec_label_pc_10002850

dec_label_pc_10002850:                            ; preds = %dec_label_pc_100026dc, %dec_label_pc_10002844
  %v0_10002850 = call i32 @function_10005998()
  %v1_10002850 = trunc i32 %v0_10002850 to i16
  store i32 %v0_10002850, i32* %r3.global-to-local, align 4
  %v3_10002854 = load i32, i32* %r27.global-to-local, align 4
  %v4_10002854 = add i32 %v3_10002854, 18
  %v5_10002854 = inttoptr i32 %v4_10002854 to i16*
  store i16 %v1_10002850, i16* %v5_10002854, align 2
  br label %dec_label_pc_100026e0

dec_label_pc_1000285c:                            ; preds = %dec_label_pc_100024b4
  %v0_1000285c = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_1000285c, i32* %r3.global-to-local, align 4
  store i32 268445796, i32* @lr, align 4
  %v0_10002860 = call i32 @function_10009a30()
  store i32 %v0_10002860, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002764

; uselistorder directives
  uselistorder i32 %v0_10002850, { 1, 0 }
  uselistorder i32 %v0_10002824, { 1, 0 }
  uselistorder i32 %v0_10002814, { 1, 0 }
  uselistorder i32 %v0_10002804, { 1, 0 }
  uselistorder i32 %v1_100027fc, { 1, 0 }
  uselistorder i32 %v1_10002740, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002708, { 1, 0 }
  uselistorder i32 %v1_1000268c, { 1, 0 }
  uselistorder i32 %v1_1000255c, { 1, 0 }
  uselistorder i32 %v1_10002554, { 1, 0 }
  uselistorder i32 %v1_1000252c, { 1, 0 }
  uselistorder i32 %v1_10002520, { 1, 0 }
  uselistorder i32 %v1_10002518, { 1, 0 }
  uselistorder i32 %v1_10002508, { 2, 1, 0 }
  uselistorder i32 %v1_100024e0, { 1, 2, 0 }
  uselistorder i32 %v2_10002494, { 1, 0 }
  uselistorder i32 %v6_10002480, { 1, 2, 0 }
  uselistorder i8 %v5_10002358, { 1, 0 }
  uselistorder i8 %v5_10002320, { 1, 0 }
  uselistorder i32* %stack_var_-136, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0 }
  uselistorder i32* %r29.global-to-local, { 11, 9, 12, 10, 13, 8, 14, 0, 1, 3, 4, 2, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 8, 13, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 26, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32 }
  uselistorder label %dec_label_pc_10002850, { 1, 0 }
  uselistorder label %dec_label_pc_10002764, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100026e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002664, { 1, 0 }
  uselistorder label %dec_label_pc_100025a4, { 1, 0 }
}

define i32 @function_10002868(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10002868:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %v0_10002870 = call i32 @__asm_mfcr()
  %v0_1000287c = load i32, i32* @r27, align 4
  store i32 %v0_10002870, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_100028b0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100028b8 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268445908, i32* @lr, align 4
  %v2_100028d0 = call i32 @function_1000aadc(i32 %arg2, i32 4)
  store i32 %v2_100028d0, i32* @r24, align 4
  %v0_100028dc = load i32, i32* @r30, align 4
  store i32 %v0_100028dc, i32* %r3.global-to-local, align 4
  store i32 268445924, i32* @lr, align 4
  %v2_100028e0 = call i32 @function_1000aadc(i32 %v0_100028dc, i32 4)
  %v0_100028e8 = load i32, i32* @r29, align 4
  store i32 %v2_100028e0, i32* @r26, align 4
  %v0_100028f8 = load i32, i32* @r28, align 4
  store i32 %v0_100028f8, i32* %r3.global-to-local, align 4
  store i32 268445952, i32* @lr, align 4
  %v4_100028fc = inttoptr i32 %v0_100028e8 to i32*
  %v5_100028fc = call i32 @function_10000300(i32 %v0_100028f8, i32* %v4_100028fc, i32 7, i32 65535)
  %v0_10002908 = load i32, i32* @r29, align 4
  %v1_10002910 = urem i32 %v5_100028fc, 65536
  store i32 %v1_10002910, i32* %r20.global-to-local, align 4
  %v0_10002914 = load i32, i32* @r28, align 4
  store i32 %v0_10002914, i32* %r3.global-to-local, align 4
  store i32 268445980, i32* @lr, align 4
  %v4_10002918 = inttoptr i32 %v0_10002908 to i32*
  %v5_10002918 = call i32 @function_10000300(i32 %v0_10002914, i32* %v4_10002918, i32 6, i32 65535)
  %v0_1000291c = load i32, i32* @r29, align 4
  %v1_10002920 = urem i32 %v5_10002918, 65536
  store i32 %v1_10002920, i32* @r25, align 4
  %v0_1000292c = load i32, i32* @r28, align 4
  store i32 %v0_1000292c, i32* %r3.global-to-local, align 4
  store i32 268446004, i32* @lr, align 4
  %v4_10002930 = inttoptr i32 %v0_1000291c to i32*
  %v5_10002930 = call i32 @function_10000300(i32 %v0_1000292c, i32* %v4_10002930, i32 0, i32 512)
  %v0_10002934 = load i32, i32* @r29, align 4
  %v1_10002940 = urem i32 %v5_10002930, 65536
  store i32 %v1_10002940, i32* %r23.global-to-local, align 4
  %v0_10002944 = load i32, i32* @r28, align 4
  store i32 %v0_10002944, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000294c.22 to i32), i32* @lr, align 4
  %v4_10002948 = inttoptr i32 %v0_10002934 to i32*
  %v5_10002948 = call i32 @function_10000300(i32 %v0_10002944, i32* %v4_10002948, i32 1, i32 1)
  %v1_10002950 = urem i32 %v5_10002948, 256
  store i32 %v1_10002950, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 ptrtoint (i32* @global_var_1000296c.23 to i32), i32* @lr, align 4
  %v0_10002968 = call i32 @function_10009e00()
  store i32 %v0_10002968, i32* %r3.global-to-local, align 4
  %v1_10002970 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002970 = add i32 %v1_10002970, %v0_10002968
  store i32 %v2_10002970, i32* %r18.global-to-local, align 4
  %v0_10002978 = load i32, i32* @r25, align 4
  %v4_10002978 = icmp eq i32 %v0_10002978, 65535
  br i1 %v4_10002978, label %dec_label_pc_10002b98, label %dec_label_pc_10002980

dec_label_pc_10002980:                            ; preds = %dec_label_pc_10002868, %dec_label_pc_10002b98
  %v0_10002980 = load i32, i32* @r30, align 4
  %v1_10002980 = icmp slt i32 %v0_10002980, 0
  %v3_10002980 = icmp eq i32 %v0_10002980, 0
  store i1 %v1_10002980, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002980, i1* %cr4_eq.global-to-local, align 1
  %tmp34 = icmp slt i32 %v0_10002980, 1
  br i1 %tmp34, label %dec_label_pc_10002b38, label %dec_label_pc_10002988

dec_label_pc_10002988:                            ; preds = %dec_label_pc_10002980
  %v0_1000298c = load i32, i32* @r31, align 4
  store i32 %v0_1000298c, i32* @r29, align 4
  %v0_10002998 = load i32, i32* %r20.global-to-local, align 4
  %v4_10002998 = icmp eq i32 %v0_10002998, 65535
  store i32 0, i32* @r28, align 4
  store i32 2, i32* %r21.global-to-local, align 4
  %v2_10002ab0 = ptrtoint i32* %stack_var_-88 to i32
  br i1 %v4_10002998, label %dec_label_pc_10002a80, label %dec_label_pc_100029d0

dec_label_pc_100029b0:                            ; preds = %dec_label_pc_10002a10, %dec_label_pc_10002a2c
  %v0_100029b0 = load i32, i32* @r28, align 4
  %v1_100029b0 = load i32, i32* @r26, align 4
  %v2_100029b0 = add i32 %v1_100029b0, %v0_100029b0
  %v3_100029b0 = inttoptr i32 %v2_100029b0 to i32*
  %v4_100029b0 = load i32, i32* %v3_100029b0, align 4
  store i32 %v4_100029b0, i32* @r3, align 4
  %v1_100029bc = add i32 %v0_100029b0, 4
  store i32 %v1_100029bc, i32* @r28, align 4
  store i32 268446148, i32* @lr, align 4
  %v0_100029c0 = call i32 @function_1000a580()
  store i32 %v0_100029c0, i32* %r3.global-to-local, align 4
  %v0_100029c4 = load i32, i32* @r31, align 4
  %v1_100029c4 = load i32, i32* @r30, align 4
  %v4_100029c4 = icmp eq i32 %v0_100029c4, %v1_100029c4
  %v0_100029c8 = load i32, i32* @r29, align 4
  %v1_100029c8 = add i32 %v0_100029c8, 24
  store i32 %v1_100029c8, i32* @r29, align 4
  br i1 %v4_100029c4, label %dec_label_pc_10002b00, label %dec_label_pc_100029d0

dec_label_pc_100029d0:                            ; preds = %dec_label_pc_10002988, %dec_label_pc_100029b0
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 268446180, i32* @lr, align 4
  %v2_100029e0 = call i32 @function_1000aadc(i32 65535, i32 1)
  %v0_100029e4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100029e4 = trunc i32 %v0_100029e4 to i16
  %v2_100029e4 = load i32, i32* @r29, align 4
  %v3_100029e4 = add i32 %v2_100029e4, 2
  %v4_100029e4 = inttoptr i32 %v3_100029e4 to i16*
  store i16 %v1_100029e4, i16* %v4_100029e4, align 2
  %v1_100029e8 = load i32, i32* @r28, align 4
  %v2_100029e8 = load i32, i32* @r24, align 4
  %v3_100029e8 = add i32 %v2_100029e8, %v1_100029e8
  %v4_100029e8 = inttoptr i32 %v3_100029e8 to i32*
  store i32 %v2_100029e0, i32* %v4_100029e8, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268446204, i32* @lr, align 4
  %v3_100029f8 = call i32 @function_1000a780(i32 2, i32 2, i32 17)
  store i32 %v3_100029f8, i32* %r3.global-to-local, align 4
  %v3_10002a00 = icmp eq i32 %v3_100029f8, -1
  %v1_10002a08 = load i32, i32* @r28, align 4
  %v2_10002a08 = load i32, i32* @r26, align 4
  %v3_10002a08 = add i32 %v2_10002a08, %v1_10002a08
  %v4_10002a08 = inttoptr i32 %v3_10002a08 to i32*
  store i32 %v3_100029f8, i32* %v4_10002a08, align 4
  br i1 %v3_10002a00, label %dec_label_pc_10002b48, label %dec_label_pc_10002a10

dec_label_pc_10002a10:                            ; preds = %dec_label_pc_100029d0
  %v0_10002a10 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002a10, i32* %stack_var_-88, align 4
  store i32 268446240, i32* @lr, align 4
  %v0_10002a1c = load i32, i32* %r3.global-to-local, align 4
  %v3_10002a1c = call i32 @function_1000a54c(i32 %v0_10002a1c, i32 %v2_10002ab0, i32 16)
  store i32 %v3_10002a1c, i32* %r3.global-to-local, align 4
  %v0_10002a20 = load i32, i32* @r29, align 4
  %v1_10002a20 = add i32 %v0_10002a20, 20
  %v2_10002a20 = inttoptr i32 %v1_10002a20 to i8*
  %v3_10002a20 = load i8, i8* %v2_10002a20, align 1
  %v2_10002a24 = icmp ugt i8 %v3_10002a20, 31
  br i1 %v2_10002a24, label %dec_label_pc_100029b0, label %dec_label_pc_10002a2c

dec_label_pc_10002a2c:                            ; preds = %dec_label_pc_10002a10
  %v1_10002a2c = add i32 %v0_10002a20, 16
  %v2_10002a2c = inttoptr i32 %v1_10002a2c to i32*
  %v3_10002a2c = load i32, i32* %v2_10002a2c, align 4
  store i32 %v3_10002a2c, i32* %r27.global-to-local, align 4
  %v0_10002a30 = call i32 @function_10005998()
  store i32 %v0_10002a30, i32* %r3.global-to-local, align 4
  %v0_10002a34 = load i32, i32* @r29, align 4
  %v1_10002a34 = add i32 %v0_10002a34, 20
  %v2_10002a34 = inttoptr i32 %v1_10002a34 to i8*
  %v3_10002a34 = load i8, i8* %v2_10002a34, align 1
  %tmp = urem i8 %v3_10002a34, 64
  %v2_10002a38 = zext i8 %tmp to i32
  %v3_10002a38 = lshr i32 %v0_10002a30, %v2_10002a38
  %v0_10002a3c = load i32, i32* %r27.global-to-local, align 4
  %v2_10002a3c = add i32 %v3_10002a38, %v0_10002a3c
  store i32 %v2_10002a3c, i32* %r3.global-to-local, align 4
  %v2_10002a40 = add i32 %v0_10002a34, 4
  %v3_10002a40 = inttoptr i32 %v2_10002a40 to i32*
  store i32 %v2_10002a3c, i32* %v3_10002a40, align 4
  br label %dec_label_pc_100029b0

dec_label_pc_10002a48:                            ; preds = %dec_label_pc_10002ac4
  %v1_10002a48 = add i32 %v0_10002ad4, 16
  %v2_10002a48 = inttoptr i32 %v1_10002a48 to i32*
  %v3_10002a48 = load i32, i32* %v2_10002a48, align 4
  store i32 %v3_10002a48, i32* %r27.global-to-local, align 4
  %v0_10002a4c = call i32 @function_10005998()
  store i32 %v0_10002a4c, i32* %r3.global-to-local, align 4
  %v0_10002a50 = load i32, i32* @r29, align 4
  %v1_10002a50 = add i32 %v0_10002a50, 20
  %v2_10002a50 = inttoptr i32 %v1_10002a50 to i8*
  %v3_10002a50 = load i8, i8* %v2_10002a50, align 1
  %tmp39 = urem i8 %v3_10002a50, 64
  %v2_10002a5c = zext i8 %tmp39 to i32
  %v3_10002a5c = lshr i32 %v0_10002a4c, %v2_10002a5c
  %v0_10002a60 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002a60 = add i32 %v0_10002a60, %v3_10002a5c
  store i32 %v2_10002a60, i32* %r3.global-to-local, align 4
  %v2_10002a64 = add i32 %v0_10002a50, 4
  %v3_10002a64 = inttoptr i32 %v2_10002a64 to i32*
  store i32 %v2_10002a60, i32* %v3_10002a64, align 4
  %v0_10002a68 = load i32, i32* @r29, align 4
  %v1_10002a68 = add i32 %v0_10002a68, 24
  store i32 %v1_10002a68, i32* @r29, align 4
  %v0_10002a6c = load i32, i32* @r28, align 4
  %v1_10002a6c = load i32, i32* @r26, align 4
  %v2_10002a6c = add i32 %v1_10002a6c, %v0_10002a6c
  %v3_10002a6c = inttoptr i32 %v2_10002a6c to i32*
  %v4_10002a6c = load i32, i32* %v3_10002a6c, align 4
  store i32 %v4_10002a6c, i32* @r3, align 4
  %v1_10002a70 = add i32 %v0_10002a6c, 4
  store i32 %v1_10002a70, i32* @r28, align 4
  store i32 268446328, i32* @lr, align 4
  %v0_10002a74 = call i32 @function_1000a580()
  store i32 %v0_10002a74, i32* %r3.global-to-local, align 4
  %v0_10002a78 = load i32, i32* @r31, align 4
  %v1_10002a78 = load i32, i32* @r30, align 4
  %v4_10002a78 = icmp eq i32 %v0_10002a78, %v1_10002a78
  br i1 %v4_10002a78, label %dec_label_pc_10002b00, label %dec_label_pc_10002a80

dec_label_pc_10002a80:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a48, %dec_label_pc_10002988
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 268446356, i32* @lr, align 4
  %v2_10002a90 = call i32 @function_1000aadc(i32 65535, i32 1)
  store i32 %v2_10002a90, i32* %r3.global-to-local, align 4
  %v1_10002a94 = load i32, i32* @r28, align 4
  %v2_10002a94 = load i32, i32* @r24, align 4
  %v3_10002a94 = add i32 %v2_10002a94, %v1_10002a94
  %v4_10002a94 = inttoptr i32 %v3_10002a94 to i32*
  store i32 %v2_10002a90, i32* %v4_10002a94, align 4
  %v0_10002a98 = call i32 @function_10005998()
  %v1_10002a98 = trunc i32 %v0_10002a98 to i16
  %v3_10002a9c = load i32, i32* @r29, align 4
  %v4_10002a9c = add i32 %v3_10002a9c, 2
  %v5_10002a9c = inttoptr i32 %v4_10002a9c to i16*
  store i16 %v1_10002a98, i16* %v5_10002a9c, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268446384, i32* @lr, align 4
  %v3_10002aac = call i32 @function_1000a780(i32 2, i32 2, i32 17)
  store i32 %v3_10002aac, i32* %r3.global-to-local, align 4
  %v3_10002ab4 = icmp eq i32 %v3_10002aac, -1
  %v1_10002abc = load i32, i32* @r28, align 4
  %v2_10002abc = load i32, i32* @r26, align 4
  %v3_10002abc = add i32 %v2_10002abc, %v1_10002abc
  %v4_10002abc = inttoptr i32 %v3_10002abc to i32*
  store i32 %v3_10002aac, i32* %v4_10002abc, align 4
  br i1 %v3_10002ab4, label %dec_label_pc_10002b48, label %dec_label_pc_10002ac4

dec_label_pc_10002ac4:                            ; preds = %dec_label_pc_10002a80
  %v0_10002ac4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002ac4, i32* %stack_var_-88, align 4
  store i32 268446420, i32* @lr, align 4
  %v0_10002ad0 = load i32, i32* %r3.global-to-local, align 4
  %v3_10002ad0 = call i32 @function_1000a54c(i32 %v0_10002ad0, i32 %v2_10002ab0, i32 16)
  store i32 %v3_10002ad0, i32* %r3.global-to-local, align 4
  %v0_10002ad4 = load i32, i32* @r29, align 4
  %v1_10002ad4 = add i32 %v0_10002ad4, 20
  %v2_10002ad4 = inttoptr i32 %v1_10002ad4 to i8*
  %v3_10002ad4 = load i8, i8* %v2_10002ad4, align 1
  %tmp35 = icmp ult i8 %v3_10002ad4, 32
  br i1 %tmp35, label %dec_label_pc_10002a48, label %dec_label_pc_10002ae0

dec_label_pc_10002ae0:                            ; preds = %dec_label_pc_10002ac4
  %v0_10002ae0 = load i32, i32* @r28, align 4
  %v1_10002ae0 = load i32, i32* @r26, align 4
  %v2_10002ae0 = add i32 %v1_10002ae0, %v0_10002ae0
  %v3_10002ae0 = inttoptr i32 %v2_10002ae0 to i32*
  %v4_10002ae0 = load i32, i32* %v3_10002ae0, align 4
  store i32 %v4_10002ae0, i32* @r3, align 4
  %v1_10002aec = add i32 %v0_10002ae0, 4
  store i32 %v1_10002aec, i32* @r28, align 4
  store i32 268446452, i32* @lr, align 4
  %v0_10002af0 = call i32 @function_1000a580()
  store i32 %v0_10002af0, i32* %r3.global-to-local, align 4
  %v0_10002af4 = load i32, i32* @r31, align 4
  %v1_10002af4 = load i32, i32* @r30, align 4
  %v4_10002af4 = icmp eq i32 %v0_10002af4, %v1_10002af4
  %v0_10002af8 = load i32, i32* @r29, align 4
  %v1_10002af8 = add i32 %v0_10002af8, 24
  store i32 %v1_10002af8, i32* @r29, align 4
  br i1 %v4_10002af4, label %dec_label_pc_10002b00, label %dec_label_pc_10002a80

dec_label_pc_10002b00:                            ; preds = %dec_label_pc_100029b0, %dec_label_pc_10002ae0, %dec_label_pc_10002a48, %dec_label_pc_10002b38
  %v0_10002b00 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002b00 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002b00 = or i1 %v0_10002b00, %v1_10002b00
  br i1 %v2_10002b00, label %dec_label_pc_10002b38, label %dec_label_pc_10002b04

dec_label_pc_10002b04:                            ; preds = %dec_label_pc_10002b00
  %v0_10002b04 = load i32, i32* %r19.global-to-local, align 4
  %v3_10002b04 = icmp eq i32 %v0_10002b04, 0
  br i1 %v3_10002b04, label %dec_label_pc_10002b0c, label %dec_label_pc_10002ba4

dec_label_pc_10002b0c:                            ; preds = %dec_label_pc_10002b04
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002b14

dec_label_pc_10002b14:                            ; preds = %dec_label_pc_10002b14.dec_label_pc_10002b14_crit_edge, %dec_label_pc_10002b0c
  %v0_10002b18 = phi i32 [ %v0_10002b30, %dec_label_pc_10002b14.dec_label_pc_10002b14_crit_edge ], [ 0, %dec_label_pc_10002b0c ]
  %v0_10002b28 = phi i32 [ %v0_10002b14.pre, %dec_label_pc_10002b14.dec_label_pc_10002b14_crit_edge ], [ 0, %dec_label_pc_10002b0c ]
  %v1_10002b14 = load i32, i32* @r26, align 4
  %v2_10002b14 = add i32 %v1_10002b14, %v0_10002b28
  %v3_10002b14 = inttoptr i32 %v2_10002b14 to i32*
  %v4_10002b14 = load i32, i32* %v3_10002b14, align 4
  store i32 %v4_10002b14, i32* %r3.global-to-local, align 4
  %v1_10002b18 = add i32 %v0_10002b18, 1
  store i32 %v1_10002b18, i32* %r28.global-to-local, align 4
  %v1_10002b1c = load i32, i32* @r24, align 4
  %v2_10002b1c = add i32 %v1_10002b1c, %v0_10002b28
  %v3_10002b1c = inttoptr i32 %v2_10002b1c to i32*
  %v4_10002b1c = load i32, i32* %v3_10002b1c, align 4
  %v0_10002b20 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002b28 = add i32 %v0_10002b28, 4
  store i32 %v1_10002b28, i32* %r29.global-to-local, align 4
  store i32 268446512, i32* @lr, align 4
  %v4_10002b2c = call i32 @function_1000a6cc(i32 %v4_10002b14, i32 %v4_10002b1c, i32 %v0_10002b20, i32 16384)
  store i32 %v4_10002b2c, i32* %r3.global-to-local, align 4
  %v0_10002b30 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002b30 = load i32, i32* @r30, align 4
  %v4_10002b30 = icmp eq i32 %v0_10002b30, %v1_10002b30
  br i1 %v4_10002b30, label %dec_label_pc_10002b38, label %dec_label_pc_10002b14.dec_label_pc_10002b14_crit_edge

dec_label_pc_10002b14.dec_label_pc_10002b14_crit_edge: ; preds = %dec_label_pc_10002b14
  %v0_10002b14.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002b14

dec_label_pc_10002b38:                            ; preds = %dec_label_pc_10002bb0, %dec_label_pc_10002b14, %dec_label_pc_10002b00, %dec_label_pc_10002980
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268446528, i32* @lr, align 4
  %v0_10002b3c = call i32 @function_10009e00()
  store i32 %v0_10002b3c, i32* %r3.global-to-local, align 4
  %v0_10002b40 = load i32, i32* %r18.global-to-local, align 4
  %v2_10002b40 = icmp slt i32 %v0_10002b40, %v0_10002b3c
  br i1 %v2_10002b40, label %dec_label_pc_10002b48, label %dec_label_pc_10002b00

dec_label_pc_10002b48:                            ; preds = %dec_label_pc_100029d0, %dec_label_pc_10002a80, %dec_label_pc_10002b38
  %v1_10002b5c = call %0 @__asm_mtcrf(i32 8, i32 %v0_10002870)
  store i32 %v0_1000287c, i32* %r27.global-to-local, align 4
  store i32 %v0_100028b0, i32* %r28.global-to-local, align 4
  store i32 %v0_100028b8, i32* %r29.global-to-local, align 4
  %v0_10002b94 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002b94

dec_label_pc_10002b98:                            ; preds = %dec_label_pc_10002868
  %v0_10002b98 = call i32 @function_10005998()
  store i32 %v0_10002b98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002980

dec_label_pc_10002ba4:                            ; preds = %dec_label_pc_10002b04
  store i32 0, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10002bb0

dec_label_pc_10002bb0:                            ; preds = %dec_label_pc_10002bb0.dec_label_pc_10002bb0_crit_edge, %dec_label_pc_10002ba4
  %v0_10002bb8 = phi i32 [ %v0_10002be0, %dec_label_pc_10002bb0.dec_label_pc_10002bb0_crit_edge ], [ 0, %dec_label_pc_10002ba4 ]
  %v0_10002bb0 = phi i32 [ %v0_10002bb0.pre, %dec_label_pc_10002bb0.dec_label_pc_10002bb0_crit_edge ], [ 0, %dec_label_pc_10002ba4 ]
  %v1_10002bb0 = load i32, i32* @r24, align 4
  %v2_10002bb0 = add i32 %v1_10002bb0, %v0_10002bb0
  %v3_10002bb0 = inttoptr i32 %v2_10002bb0 to i32*
  %v4_10002bb0 = load i32, i32* %v3_10002bb0, align 4
  store i32 %v4_10002bb0, i32* @r29, align 4
  %v0_10002bb4 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002bb4, i32* @r4, align 4
  %v1_10002bb8 = add i32 %v0_10002bb8, 1
  store i32 %v1_10002bb8, i32* @r31, align 4
  store i32 %v4_10002bb0, i32* @r3, align 4
  store i32 268446660, i32* @lr, align 4
  %v0_10002bc0 = call i32 @function_10005a58()
  store i32 %v0_10002bc0, i32* %r3.global-to-local, align 4
  %v0_10002bc4 = load i32, i32* @r27, align 4
  %v1_10002bc4 = load i32, i32* @r29, align 4
  %v2_10002bc4 = load i32, i32* %r23.global-to-local, align 4
  %v3_10002bc4 = trunc i32 %v0_10002bc4 to i8
  %v4_10002bc4 = add i32 %v2_10002bc4, %v1_10002bc4
  %v5_10002bc4 = inttoptr i32 %v4_10002bc4 to i8*
  store i8 %v3_10002bc4, i8* %v5_10002bc4, align 1
  %v0_10002bc8 = load i32, i32* @r29, align 4
  %v0_10002bcc = load i32, i32* %r23.global-to-local, align 4
  %v0_10002bd0 = load i32, i32* @r28, align 4
  %v1_10002bd0 = load i32, i32* @r26, align 4
  %v2_10002bd0 = add i32 %v1_10002bd0, %v0_10002bd0
  %v3_10002bd0 = inttoptr i32 %v2_10002bd0 to i32*
  %v4_10002bd0 = load i32, i32* %v3_10002bd0, align 4
  store i32 %v4_10002bd0, i32* %r3.global-to-local, align 4
  %v1_10002bd8 = add i32 %v0_10002bd0, 4
  store i32 %v1_10002bd8, i32* @r28, align 4
  store i32 268446688, i32* @lr, align 4
  %v4_10002bdc = call i32 @function_1000a6cc(i32 %v4_10002bd0, i32 %v0_10002bc8, i32 %v0_10002bcc, i32 16384)
  store i32 %v4_10002bdc, i32* %r3.global-to-local, align 4
  %v0_10002be0 = load i32, i32* @r31, align 4
  %v1_10002be0 = load i32, i32* @r30, align 4
  %v4_10002be0 = icmp eq i32 %v0_10002be0, %v1_10002be0
  br i1 %v4_10002be0, label %dec_label_pc_10002b38, label %dec_label_pc_10002bb0.dec_label_pc_10002bb0_crit_edge

dec_label_pc_10002bb0.dec_label_pc_10002bb0_crit_edge: ; preds = %dec_label_pc_10002bb0
  %v0_10002bb0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10002bb0

; uselistorder directives
  uselistorder i32 %v0_10002be0, { 1, 0 }
  uselistorder i32 %v0_10002bd0, { 1, 0 }
  uselistorder i32 %v0_10002b30, { 1, 0 }
  uselistorder i32 %v0_10002b28, { 2, 0, 1 }
  uselistorder i32 %v0_10002ae0, { 1, 0 }
  uselistorder i32 %v0_10002ad4, { 1, 0 }
  uselistorder i32 %v0_10002a6c, { 1, 0 }
  uselistorder i32 %v0_100029b0, { 1, 0 }
  uselistorder i32 %v2_10002ab0, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 24, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 10, 11, 12, 19, 20, 22, 23, 25, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10002b48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002b00, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100029d0, { 1, 0 }
  uselistorder label %dec_label_pc_100029b0, { 1, 0 }
  uselistorder label %dec_label_pc_10002980, { 1, 0 }
}

define i32 @function_10002bec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10002bec:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr2_lt.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10002bec = load i32, i32* @lr, align 4
  store i32 %v0_10002bec, i32* %r0.global-to-local, align 4
  %v0_10002bf4 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r18.global-to-local, align 4
  %v0_10002c00 = load i32, i32* @r27, align 4
  store i32 %v0_10002bf4, i32* %r27.global-to-local, align 4
  %v0_10002c08 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10002c3c = load i32, i32* @r25, align 4
  %v0_10002c40 = load i32, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002c4c = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  %v0_10002c54 = load i32, i32* @r30, align 4
  store i32 268446832, i32* @lr, align 4
  %v2_10002c6c = call i32 @function_1000aadc(i32 %arg2, i32 4)
  store i32 %v2_10002c6c, i32* %r19.global-to-local, align 4
  %v0_10002c74 = load i32, i32* @r29, align 4
  %v0_10002c80 = load i32, i32* @r28, align 4
  store i32 %v0_10002c80, i32* %r3.global-to-local, align 4
  store i32 268446856, i32* @lr, align 4
  %v4_10002c84 = inttoptr i32 %v0_10002c74 to i32*
  %v5_10002c84 = call i32 @function_10000300(i32 %v0_10002c80, i32* %v4_10002c84, i32 2, i32 0)
  %v0_10002c94 = load i32, i32* @r29, align 4
  %v1_10002c98 = urem i32 %v5_10002c84, 256
  store i32 %v1_10002c98, i32* %r15.global-to-local, align 4
  %v0_10002c9c = load i32, i32* @r28, align 4
  store i32 %v0_10002c9c, i32* %r3.global-to-local, align 4
  store i32 268446884, i32* @lr, align 4
  %v4_10002ca0 = inttoptr i32 %v0_10002c94 to i32*
  %v5_10002ca0 = call i32 @function_10000300(i32 %v0_10002c9c, i32* %v4_10002ca0, i32 3, i32 65535)
  %v0_10002ca4 = load i32, i32* @r29, align 4
  store i32 %v5_10002ca0, i32* %r23.global-to-local, align 4
  %v0_10002cb4 = load i32, i32* @r28, align 4
  store i32 %v0_10002cb4, i32* %r3.global-to-local, align 4
  store i32 268446908, i32* @lr, align 4
  %v4_10002cb8 = inttoptr i32 %v0_10002ca4 to i32*
  %v5_10002cb8 = call i32 @function_10000300(i32 %v0_10002cb4, i32* %v4_10002cb8, i32 4, i32 64)
  %v0_10002cbc = load i32, i32* @r29, align 4
  %v1_10002cc8 = urem i32 %v5_10002cb8, 256
  store i32 %v1_10002cc8, i32* %r16.global-to-local, align 4
  %v0_10002ccc = load i32, i32* @r28, align 4
  store i32 %v0_10002ccc, i32* %r3.global-to-local, align 4
  store i32 268446932, i32* @lr, align 4
  %v4_10002cd0 = inttoptr i32 %v0_10002cbc to i32*
  %v5_10002cd0 = call i32 @function_10000300(i32 %v0_10002ccc, i32* %v4_10002cd0, i32 5, i32 0)
  %v1_10002cd8 = urem i32 %v5_10002cd0, 256
  %v0_10002ce8 = load i32, i32* @r29, align 4
  %v0_10002cec = load i32, i32* @r28, align 4
  store i32 %v0_10002cec, i32* %r3.global-to-local, align 4
  store i32 268446964, i32* @lr, align 4
  %v4_10002cf0 = inttoptr i32 %v0_10002ce8 to i32*
  %v5_10002cf0 = call i32 @function_10000300(i32 %v0_10002cec, i32* %v4_10002cf0, i32 6, i32 65535)
  %v0_10002cf8 = load i32, i32* @r29, align 4
  store i32 %v5_10002cf0, i32* %r25.global-to-local, align 4
  %v0_10002d08 = load i32, i32* @r28, align 4
  store i32 %v0_10002d08, i32* %r3.global-to-local, align 4
  store i32 268446992, i32* @lr, align 4
  %v4_10002d0c = inttoptr i32 %v0_10002cf8 to i32*
  %v5_10002d0c = call i32 @function_10000300(i32 %v0_10002d08, i32* %v4_10002d0c, i32 7, i32 65535)
  %v0_10002d10 = load i32, i32* @r29, align 4
  store i32 %v5_10002d0c, i32* %r26.global-to-local, align 4
  %v0_10002d20 = load i32, i32* @r28, align 4
  store i32 %v0_10002d20, i32* %r3.global-to-local, align 4
  store i32 268447016, i32* @lr, align 4
  %v4_10002d24 = inttoptr i32 %v0_10002d10 to i32*
  %v5_10002d24 = call i32 @function_10000300(i32 %v0_10002d20, i32* %v4_10002d24, i32 0, i32 512)
  %v0_10002d28 = load i32, i32* @r29, align 4
  store i32 %v5_10002d24, i32* %r30.global-to-local, align 4
  %v0_10002d38 = load i32, i32* @r28, align 4
  store i32 %v0_10002d38, i32* %r3.global-to-local, align 4
  store i32 268447040, i32* @lr, align 4
  %v4_10002d3c = inttoptr i32 %v0_10002d28 to i32*
  %v5_10002d3c = call i32 @function_10000300(i32 %v0_10002d38, i32* %v4_10002d3c, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10002d44 = load i32, i32* @global_var_1001d188.12, align 4
  %v1_10002d48 = urem i32 %v5_10002d3c, 256
  %v0_10002d4c = load i32, i32* @r29, align 4
  %v0_10002d58 = load i32, i32* @r28, align 4
  store i32 %v0_10002d58, i32* %r3.global-to-local, align 4
  store i32 268447072, i32* @lr, align 4
  %v4_10002d5c = inttoptr i32 %v0_10002d4c to i32*
  %v5_10002d5c = call i32 @function_10000300(i32 %v0_10002d58, i32* %v4_10002d5c, i32 19, i32 %v3_10002d44)
  store i32 %v5_10002d5c, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268447084, i32* @lr, align 4
  %v0_10002d68 = call i32 @function_10009e00()
  %v1_10002d70 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002d70 = add i32 %v1_10002d70, %v0_10002d68
  store i32 %v2_10002d70, i32* %r14.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447104, i32* @lr, align 4
  %v3_10002d7c = call i32 @function_1000a780(i32 2, i32 3, i32 17)
  store i32 %v3_10002d7c, i32* %r3.global-to-local, align 4
  %v3_10002d80 = icmp eq i32 %v3_10002d7c, -1
  store i32 %v3_10002d7c, i32* %r20.global-to-local, align 4
  br i1 %v3_10002d80, label %dec_label_pc_10002f70, label %dec_label_pc_10002d8c

dec_label_pc_10002d8c:                            ; preds = %dec_label_pc_10002bec
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002d98 = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268447144, i32* @lr, align 4
  %v4_10002da4 = call i32 @function_1000a744(i32 0, i32 3, i32 %v2_10002d98, i32 4)
  store i32 %v4_10002da4, i32* %r3.global-to-local, align 4
  %v3_10002da8 = icmp eq i32 %v4_10002da4, -1
  br i1 %v3_10002da8, label %dec_label_pc_10003060, label %dec_label_pc_10002db0

dec_label_pc_10002db0:                            ; preds = %dec_label_pc_10002d8c
  %v0_10002db0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002db0 = urem i32 %v0_10002db0, 65536
  store i32 %v1_10002db0, i32* @r24, align 4
  %v0_10002db4 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002db4 = urem i32 %v0_10002db4, 65536
  store i32 %v1_10002db4, i32* %r21.global-to-local, align 4
  %v2_10002db8 = icmp ugt i32 %v1_10002db0, 1460
  %v0_10002dbc = load i32, i32* %r25.global-to-local, align 4
  %v1_10002dbc = urem i32 %v0_10002dbc, 65536
  store i32 %v1_10002dbc, i32* %r22.global-to-local, align 4
  %v0_10002dc0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002dc0 = urem i32 %v0_10002dc0, 65536
  store i32 %v1_10002dc0, i32* %r23.global-to-local, align 4
  br i1 %v2_10002db8, label %dec_label_pc_10003058, label %dec_label_pc_10002dc8

dec_label_pc_10002dc8:                            ; preds = %dec_label_pc_10002db0, %dec_label_pc_10003058
  %v0_10002de8 = phi i32 [ %v1_10002db0, %dec_label_pc_10002db0 ], [ 1460, %dec_label_pc_10003058 ]
  %v0_10002dc8 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002dc8 = icmp slt i32 %v0_10002dc8, 0
  %v3_10002dc8 = icmp eq i32 %v0_10002dc8, 0
  store i1 %v1_10002dc8, i1* %cr2_lt.global-to-local, align 1
  store i1 %v3_10002dc8, i1* %cr2_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp30 = icmp slt i32 %v0_10002dc8, 1
  br i1 %tmp30, label %dec_label_pc_10002e80.preheader, label %dec_label_pc_10002dd8

dec_label_pc_10002dd8:                            ; preds = %dec_label_pc_10002dc8
  %v1_10002ddc = add nuw nsw i32 %v0_10002de8, 8
  store i32 %v1_10002ddc, i32* %r9.global-to-local, align 4
  %v1_10002de0 = urem i32 %v1_10002ddc, 65536
  store i32 %v1_10002de0, i32* %r26.global-to-local, align 4
  %v3_10002de4 = icmp eq i32 %v1_10002cd8, 0
  %v1_10002de8 = add nuw nsw i32 %v0_10002de8, 28
  store i32 %v1_10002de8, i32* %r0.global-to-local, align 4
  %v1_10002dec = urem i32 %v1_10002de8, 65536
  store i32 %v1_10002dec, i32* %r25.global-to-local, align 4
  br i1 %v3_10002de4, label %dec_label_pc_10002df4, label %dec_label_pc_1000306c

dec_label_pc_10002df4:                            ; preds = %dec_label_pc_10002dd8
  store i32 0, i32* @r29, align 4
  store i32 4, i32* %r27.global-to-local, align 4
  store i32 5, i32* %r30.global-to-local, align 4
  store i32 17, i32* @r28, align 4
  br label %dec_label_pc_10002e04

dec_label_pc_10002e04:                            ; preds = %dec_label_pc_10002e04, %dec_label_pc_10002df4
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268447248, i32* @lr, align 4
  %v2_10002e0c = call i32 @function_1000aadc(i32 1510, i32 1)
  store i32 %v2_10002e0c, i32* %r3.global-to-local, align 4
  %v3_10002e10 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002e10, i32* %r9.global-to-local, align 4
  %v0_10002e14 = load i32, i32* @r29, align 4
  %v1_10002e14 = mul i32 %v0_10002e14, 4
  store i32 %v1_10002e14, i32* %r0.global-to-local, align 4
  %v1_10002e18 = load i32, i32* %r19.global-to-local, align 4
  %v3_10002e18 = add i32 %v1_10002e18, %v1_10002e14
  %v4_10002e18 = inttoptr i32 %v3_10002e18 to i32*
  store i32 %v2_10002e0c, i32* %v4_10002e18, align 4
  %v0_10002e1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e1c = mul i32 %v0_10002e1c, 4
  store i32 %v1_10002e1c, i32* %r9.global-to-local, align 4
  %v1_10002e20 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002e20 = add i32 %v1_10002e20, %v1_10002e1c
  %v3_10002e20 = inttoptr i32 %v2_10002e20 to i32*
  %v4_10002e20 = load i32, i32* %v3_10002e20, align 4
  store i32 %v4_10002e20, i32* %r11.global-to-local, align 4
  %v1_10002e24 = inttoptr i32 %v4_10002e20 to i32*
  %v2_10002e24 = load i32, i32* %v1_10002e24, align 4
  store i32 %v2_10002e24, i32* %r0.global-to-local, align 4
  %v1_10002e28 = add i32 %v4_10002e20, 20
  store i32 %v1_10002e28, i32* %r10.global-to-local, align 4
  %v0_10002e2c = load i32, i32* %r16.global-to-local, align 4
  %v1_10002e2c = trunc i32 %v0_10002e2c to i8
  %v3_10002e2c = add i32 %v4_10002e20, 8
  %v4_10002e2c = inttoptr i32 %v3_10002e2c to i8*
  store i8 %v1_10002e2c, i8* %v4_10002e2c, align 1
  %v1_10002e30 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002e30, i32* %r0.global-to-local, align 4
  %v0_10002e34 = load i32, i32* @r28, align 4
  %v1_10002e34 = trunc i32 %v0_10002e34 to i8
  %v2_10002e34 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002e34 = add i32 %v2_10002e34, 9
  %v4_10002e34 = inttoptr i32 %v3_10002e34 to i8*
  store i8 %v1_10002e34, i8* %v4_10002e34, align 1
  %v1_10002e38 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002e38, i32* %r0.global-to-local, align 4
  %v0_10002e3c = load i32, i32* %r17.global-to-local, align 4
  %v1_10002e3c = load i32, i32* %r11.global-to-local, align 4
  %v2_10002e3c = add i32 %v1_10002e3c, 12
  %v3_10002e3c = inttoptr i32 %v2_10002e3c to i32*
  store i32 %v0_10002e3c, i32* %v3_10002e3c, align 4
  %v1_10002e40 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002e40 = inttoptr i32 %v1_10002e40 to i32*
  store i32 %v1_10002e38, i32* %v2_10002e40, align 4
  %v0_10002e44 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002e44 = trunc i32 %v0_10002e44 to i8
  %v2_10002e44 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002e44 = add i32 %v2_10002e44, 1
  %v4_10002e44 = inttoptr i32 %v3_10002e44 to i8*
  store i8 %v1_10002e44, i8* %v4_10002e44, align 1
  %v0_10002e48 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002e48 = trunc i32 %v0_10002e48 to i16
  %v2_10002e48 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002e48 = add i32 %v2_10002e48, 2
  %v4_10002e48 = inttoptr i32 %v3_10002e48 to i16*
  store i16 %v1_10002e48, i16* %v4_10002e48, align 2
  %v3_10002e4c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002e4c, i32* %r9.global-to-local, align 4
  %v0_10002e50 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002e50 = trunc i32 %v0_10002e50 to i16
  %v2_10002e50 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002e50 = add i32 %v2_10002e50, 4
  %v4_10002e50 = inttoptr i32 %v3_10002e50 to i16*
  store i16 %v1_10002e50, i16* %v4_10002e50, align 2
  %v0_10002e54 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e54 = add i32 %v0_10002e54, 1
  store i32 %v1_10002e54, i32* @r29, align 4
  %v1_10002e58 = mul i32 %v0_10002e54, 24
  store i32 %v1_10002e58, i32* %r9.global-to-local, align 4
  %v1_10002e5c = load i32, i32* %r18.global-to-local, align 4
  %v2_10002e5c = icmp slt i32 %v1_10002e54, %v1_10002e5c
  %v0_10002e60 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002e60 = trunc i32 %v0_10002e60 to i16
  %v2_10002e60 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002e60 = add i32 %v2_10002e60, 20
  %v4_10002e60 = inttoptr i32 %v3_10002e60 to i16*
  store i16 %v1_10002e60, i16* %v4_10002e60, align 2
  %v0_10002e64 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e64 = load i32, i32* @r31, align 4
  %v2_10002e64 = add i32 %v1_10002e64, %v0_10002e64
  store i32 %v2_10002e64, i32* %r9.global-to-local, align 4
  %v0_10002e68 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002e68 = trunc i32 %v0_10002e68 to i16
  %v2_10002e68 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002e68 = add i32 %v2_10002e68, 4
  %v4_10002e68 = inttoptr i32 %v3_10002e68 to i16*
  store i16 %v1_10002e68, i16* %v4_10002e68, align 2
  %v0_10002e6c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e6c = add i32 %v0_10002e6c, 16
  %v2_10002e6c = inttoptr i32 %v1_10002e6c to i32*
  %v3_10002e6c = load i32, i32* %v2_10002e6c, align 4
  store i32 %v3_10002e6c, i32* %r0.global-to-local, align 4
  %v0_10002e70 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002e70 = trunc i32 %v0_10002e70 to i16
  %v2_10002e70 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002e70 = add i32 %v2_10002e70, 2
  %v4_10002e70 = inttoptr i32 %v3_10002e70 to i16*
  store i16 %v1_10002e70, i16* %v4_10002e70, align 2
  %v0_10002e74 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002e74 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002e74 = add i32 %v1_10002e74, 16
  %v3_10002e74 = inttoptr i32 %v2_10002e74 to i32*
  store i32 %v0_10002e74, i32* %v3_10002e74, align 4
  %v0_10002e78 = load i32, i32* @r29, align 4
  store i32 %v0_10002e78, i32* %stack_var_-104, align 4
  br i1 %v2_10002e5c, label %dec_label_pc_10002e04, label %dec_label_pc_10002e80.preheader

dec_label_pc_10002e80.preheader:                  ; preds = %dec_label_pc_1000307c, %dec_label_pc_10002e04, %dec_label_pc_10002dc8
  %v3_10002e9c = icmp eq i32 %v1_10002d48, 0
  br label %dec_label_pc_10002e80

dec_label_pc_10002e80:                            ; preds = %dec_label_pc_10002e80.preheader, %dec_label_pc_10002f60
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10002e88 = load i1, i1* %cr2_eq.global-to-local, align 1
  %v1_10002e88 = load i1, i1* %cr2_lt.global-to-local, align 1
  %v2_10002e88 = or i1 %v0_10002e88, %v1_10002e88
  br i1 %v2_10002e88, label %dec_label_pc_10002f60, label %dec_label_pc_10002e8c

dec_label_pc_10002e8c:                            ; preds = %dec_label_pc_10002e80
  store i32 %v1_10002d48, i32* %r0.global-to-local, align 4
  %v0_10002e90 = load i32, i32* %r17.global-to-local, align 4
  %v3_10002e90 = icmp eq i32 %v0_10002e90, -1
  store i1 %v3_10002e90, i1* %cr3_eq.global-to-local, align 1
  %v0_10002e94 = load i32, i32* @r24, align 4
  %v1_10002e94 = add i32 %v0_10002e94, 8
  store i32 %v1_10002e94, i32* @r26, align 4
  %v1_10002e98 = add i32 %v0_10002e94, 28
  store i32 %v1_10002e98, i32* @r30, align 4
  store i1 %v3_10002e9c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  br label %dec_label_pc_10002ea8

dec_label_pc_10002ea8:                            ; preds = %dec_label_pc_10002ef0, %dec_label_pc_10002e8c
  %v0_10002ea8 = phi i32 [ %v1_10002f50, %dec_label_pc_10002ef0 ], [ 0, %dec_label_pc_10002e8c ]
  %v1_10002ea8 = mul i32 %v0_10002ea8, 24
  store i32 %v1_10002ea8, i32* %r0.global-to-local, align 4
  %v1_10002eac = mul i32 %v0_10002ea8, 4
  store i32 %v1_10002eac, i32* %r11.global-to-local, align 4
  %v1_10002eb0 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002eb0 = add i32 %v1_10002eb0, %v1_10002eac
  %v3_10002eb0 = inttoptr i32 %v2_10002eb0 to i32*
  %v4_10002eb0 = load i32, i32* %v3_10002eb0, align 4
  store i32 %v4_10002eb0, i32* @r28, align 4
  %v1_10002eb4 = load i32, i32* @r31, align 4
  %v2_10002eb4 = add i32 %v1_10002eb4, %v1_10002ea8
  store i32 %v2_10002eb4, i32* %r10.global-to-local, align 4
  %v1_10002eb8 = add i32 %v2_10002eb4, 20
  %v2_10002eb8 = inttoptr i32 %v1_10002eb8 to i8*
  %v3_10002eb8 = load i8, i8* %v2_10002eb8, align 1
  %v4_10002eb8 = zext i8 %v3_10002eb8 to i32
  store i32 %v4_10002eb8, i32* %r9.global-to-local, align 4
  %v1_10002ebc = add i32 %v4_10002eb0, 20
  store i32 %v1_10002ebc, i32* @r27, align 4
  %tmp31 = icmp ult i8 %v3_10002eb8, 32
  br i1 %tmp31, label %dec_label_pc_10002fd0, label %dec_label_pc_10002ec8

dec_label_pc_10002ec8:                            ; preds = %dec_label_pc_10002ea8
  %v0_10002ec8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002ec8, label %dec_label_pc_10002ff8, label %dec_label_pc_10002ecc

dec_label_pc_10002ecc:                            ; preds = %dec_label_pc_10002fd0, %dec_label_pc_10002ec8
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10002ed4 = load i32, i32* %r21.global-to-local, align 4
  %v4_10002ed4 = icmp eq i32 %v0_10002ed4, 65535
  br i1 %v4_10002ed4, label %dec_label_pc_10003010, label %dec_label_pc_10002edc

dec_label_pc_10002edc:                            ; preds = %dec_label_pc_10002ff8, %dec_label_pc_10002ecc
  %v1_10002edc = phi i32 [ %v1_10003008, %dec_label_pc_10002ff8 ], [ 65535, %dec_label_pc_10002ecc ]
  %v0_10002edc = load i32, i32* %r22.global-to-local, align 4
  %v4_10002edc = icmp eq i32 %v0_10002edc, %v1_10002edc
  br i1 %v4_10002edc, label %dec_label_pc_10003020, label %dec_label_pc_10002ee4

dec_label_pc_10002ee4:                            ; preds = %dec_label_pc_10003010.dec_label_pc_10002ee4_crit_edge, %dec_label_pc_10002edc
  %v1_10002ee4 = phi i32 [ %v1_10002ee4.pre, %dec_label_pc_10003010.dec_label_pc_10002ee4_crit_edge ], [ %v1_10002edc, %dec_label_pc_10002edc ]
  %v0_10002ee4 = load i32, i32* %r23.global-to-local, align 4
  %v4_10002ee4 = icmp eq i32 %v0_10002ee4, %v1_10002ee4
  br i1 %v4_10002ee4, label %dec_label_pc_10003030, label %dec_label_pc_10002eec

dec_label_pc_10002eec:                            ; preds = %dec_label_pc_10003020, %dec_label_pc_10002ee4
  %v0_10002eec = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002eec, label %dec_label_pc_10002ef0, label %dec_label_pc_1000303c

dec_label_pc_10002ef0:                            ; preds = %dec_label_pc_10002eec, %dec_label_pc_10003030, %dec_label_pc_1000303c
  %v0_10002ef0 = load i32, i32* @r25, align 4
  %v1_10002ef0 = trunc i32 %v0_10002ef0 to i16
  %v2_10002ef0 = load i32, i32* @r28, align 4
  %v3_10002ef0 = add i32 %v2_10002ef0, 10
  %v4_10002ef0 = inttoptr i32 %v3_10002ef0 to i16*
  store i16 %v1_10002ef0, i16* %v4_10002ef0, align 2
  %v0_10002ef8 = load i32, i32* @r28, align 4
  store i32 %v0_10002ef8, i32* @r3, align 4
  %v2_10002efc = call i32 @function_10003ca8(i32 %v0_10002ef8, i32 20)
  %v3_10002efc = trunc i32 %v2_10002efc to i16
  %v0_10002f00 = load i32, i32* @r27, align 4
  store i32 %v0_10002f00, i32* @r4, align 4
  %v3_10002f04 = load i32, i32* @r28, align 4
  %v4_10002f04 = add i32 %v3_10002f04, 10
  %v5_10002f04 = inttoptr i32 %v4_10002f04 to i16*
  store i16 %v3_10002efc, i16* %v5_10002f04, align 2
  %v0_10002f08 = load i32, i32* @r26, align 4
  %v0_10002f0c = load i32, i32* @r25, align 4
  %v1_10002f0c = trunc i32 %v0_10002f0c to i16
  %v2_10002f0c = load i32, i32* @r27, align 4
  %v3_10002f0c = add i32 %v2_10002f0c, 6
  %v4_10002f0c = inttoptr i32 %v3_10002f0c to i16*
  store i16 %v1_10002f0c, i16* %v4_10002f0c, align 2
  %v0_10002f10 = load i32, i32* @r28, align 4
  store i32 %v0_10002f10, i32* %r3.global-to-local, align 4
  %v0_10002f14 = load i32, i32* @r27, align 4
  %v1_10002f14 = add i32 %v0_10002f14, 4
  %v2_10002f14 = inttoptr i32 %v1_10002f14 to i16*
  %v3_10002f14 = load i16, i16* %v2_10002f14, align 2
  %v4_10002f14 = zext i16 %v3_10002f14 to i32
  %v4_10002f18 = call i32 @function_10003d0c(i32 %v0_10002f10, i32 %v0_10002f00, i32 %v4_10002f14, i32 %v0_10002f08)
  %v5_10002f18 = trunc i32 %v4_10002f18 to i16
  store i32 %v4_10002f18, i32* %r3.global-to-local, align 4
  %v3_10002f1c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002f1c, i32* %r7.global-to-local, align 4
  %v0_10002f20 = load i32, i32* @r27, align 4
  %v1_10002f20 = add i32 %v0_10002f20, 2
  %v2_10002f20 = inttoptr i32 %v1_10002f20 to i16*
  %v3_10002f20 = load i16, i16* %v2_10002f20, align 2
  %v4_10002f20 = zext i16 %v3_10002f20 to i32
  store i32 %v4_10002f20, i32* %r0.global-to-local, align 4
  %v0_10002f24 = load i32, i32* @r28, align 4
  %v1_10002f28 = mul i32 %v3_10002f1c, 24
  store i32 %v1_10002f28, i32* %r7.global-to-local, align 4
  %v4_10002f2c = add i32 %v0_10002f20, 6
  %v5_10002f2c = inttoptr i32 %v4_10002f2c to i16*
  store i16 %v5_10002f18, i16* %v5_10002f2c, align 2
  %v0_10002f30 = load i32, i32* @r30, align 4
  %v0_10002f34 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10002f34, i32* %r3.global-to-local, align 4
  %v0_10002f38 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002f38 = load i32, i32* @r31, align 4
  %v2_10002f38 = add i32 %v1_10002f38, %v0_10002f38
  store i32 %v2_10002f38, i32* %r7.global-to-local, align 4
  %v0_10002f40 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002f40 = trunc i32 %v0_10002f40 to i16
  %v3_10002f40 = add i32 %v2_10002f38, 2
  %v4_10002f40 = inttoptr i32 %v3_10002f40 to i16*
  store i16 %v1_10002f40, i16* %v4_10002f40, align 2
  store i32 268447564, i32* @lr, align 4
  %v6_10002f48 = call i32 @function_1000a704(i32 %v0_10002f34, i32 %v0_10002f24, i32 %v0_10002f30, i32 16384, i32 %v2_10002f38, i32 16)
  store i32 %v6_10002f48, i32* %r3.global-to-local, align 4
  %v3_10002f4c = load i32, i32* %stack_var_-104, align 4
  %v1_10002f50 = add i32 %v3_10002f4c, 1
  store i32 %v1_10002f50, i32* %r9.global-to-local, align 4
  %v1_10002f54 = load i32, i32* %r18.global-to-local, align 4
  %v2_10002f54 = icmp slt i32 %v1_10002f50, %v1_10002f54
  store i32 %v1_10002f50, i32* %stack_var_-104, align 4
  br i1 %v2_10002f54, label %dec_label_pc_10002ea8, label %dec_label_pc_10002f60

dec_label_pc_10002f60:                            ; preds = %dec_label_pc_10002ef0, %dec_label_pc_10002e80
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268447592, i32* @lr, align 4
  %v0_10002f64 = call i32 @function_10009e00()
  store i32 %v0_10002f64, i32* %r3.global-to-local, align 4
  %v0_10002f68 = load i32, i32* %r14.global-to-local, align 4
  %v2_10002f68 = icmp slt i32 %v0_10002f68, %v0_10002f64
  br i1 %v2_10002f68, label %dec_label_pc_10002f70, label %dec_label_pc_10002e80

dec_label_pc_10002f70:                            ; preds = %dec_label_pc_10002f60, %dec_label_pc_10002bec, %dec_label_pc_10003060
  store i32 %v0_10002c08, i32* %r0.global-to-local, align 4
  %v1_10002f84 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002bf4)
  store i32 %v0_10002c3c, i32* %r25.global-to-local, align 4
  store i32 %v0_10002c40, i32* %r26.global-to-local, align 4
  store i32 %v0_10002c00, i32* %r27.global-to-local, align 4
  store i32 %v0_10002c4c, i32* %r29.global-to-local, align 4
  store i32 %v0_10002c54, i32* %r30.global-to-local, align 4
  %v0_10002fcc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002fcc

dec_label_pc_10002fd0:                            ; preds = %dec_label_pc_10002ea8
  %v1_10002fd0 = add i32 %v2_10002eb4, 16
  %v2_10002fd0 = inttoptr i32 %v1_10002fd0 to i32*
  %v3_10002fd0 = load i32, i32* %v2_10002fd0, align 4
  store i32 %v3_10002fd0, i32* %r29.global-to-local, align 4
  %v0_10002fd4 = call i32 @function_10005998()
  store i32 %v0_10002fd4, i32* %r3.global-to-local, align 4
  %v3_10002fd8 = load i32, i32* %stack_var_-104, align 4
  %v1_10002fdc = mul i32 %v3_10002fd8, 24
  %v1_10002fe0 = load i32, i32* @r31, align 4
  %v2_10002fe0 = add i32 %v1_10002fe0, %v1_10002fdc
  store i32 %v2_10002fe0, i32* %r9.global-to-local, align 4
  %v1_10002fe4 = add i32 %v2_10002fe0, 20
  %v2_10002fe4 = inttoptr i32 %v1_10002fe4 to i8*
  %v3_10002fe4 = load i8, i8* %v2_10002fe4, align 1
  %v4_10002fe4 = zext i8 %v3_10002fe4 to i32
  store i32 %v4_10002fe4, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10002fe4, 64
  %v2_10002fe8 = zext i8 %tmp to i32
  %v3_10002fe8 = lshr i32 %v0_10002fd4, %v2_10002fe8
  store i32 %v3_10002fe8, i32* %r3.global-to-local, align 4
  %v0_10002fec = load i32, i32* %r29.global-to-local, align 4
  %v2_10002fec = add i32 %v3_10002fe8, %v0_10002fec
  store i32 %v2_10002fec, i32* %r29.global-to-local, align 4
  %v1_10002ff0 = load i32, i32* @r28, align 4
  %v2_10002ff0 = add i32 %v1_10002ff0, 16
  %v3_10002ff0 = inttoptr i32 %v2_10002ff0 to i32*
  store i32 %v2_10002fec, i32* %v3_10002ff0, align 4
  %v0_10002ff4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002ff4, label %dec_label_pc_10002ff8, label %dec_label_pc_10002ecc

dec_label_pc_10002ff8:                            ; preds = %dec_label_pc_10002fd0, %dec_label_pc_10002ec8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10002ffc = call i32 @function_10005998()
  store i32 %v0_10002ffc, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10003004 = load i32, i32* @r28, align 4
  %v2_10003004 = add i32 %v1_10003004, 12
  %v3_10003004 = inttoptr i32 %v2_10003004 to i32*
  store i32 %v0_10002ffc, i32* %v3_10003004, align 4
  %v0_10003008 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003008 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003008 = icmp eq i32 %v0_10003008, %v1_10003008
  br i1 %v4_10003008, label %dec_label_pc_10003010, label %dec_label_pc_10002edc

dec_label_pc_10003010:                            ; preds = %dec_label_pc_10002ff8, %dec_label_pc_10002ecc
  %v0_10003010 = call i32 @function_10005998()
  %v1_10003010 = trunc i32 %v0_10003010 to i16
  store i32 %v0_10003010, i32* %r3.global-to-local, align 4
  %v0_10003014 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003014 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003014 = icmp eq i32 %v0_10003014, %v1_10003014
  %v3_10003018 = load i32, i32* @r28, align 4
  %v4_10003018 = add i32 %v3_10003018, 4
  %v5_10003018 = inttoptr i32 %v4_10003018 to i16*
  store i16 %v1_10003010, i16* %v5_10003018, align 2
  br i1 %v4_10003014, label %dec_label_pc_10003020, label %dec_label_pc_10003010.dec_label_pc_10002ee4_crit_edge

dec_label_pc_10003010.dec_label_pc_10002ee4_crit_edge: ; preds = %dec_label_pc_10003010
  %v1_10002ee4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002ee4

dec_label_pc_10003020:                            ; preds = %dec_label_pc_10003010, %dec_label_pc_10002edc
  %v0_10003020 = call i32 @function_10005998()
  %v1_10003020 = trunc i32 %v0_10003020 to i16
  store i32 %v0_10003020, i32* %r3.global-to-local, align 4
  %v0_10003024 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003024 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003024 = icmp eq i32 %v0_10003024, %v1_10003024
  %v3_10003028 = load i32, i32* @r28, align 4
  %v4_10003028 = add i32 %v3_10003028, 20
  %v5_10003028 = inttoptr i32 %v4_10003028 to i16*
  store i16 %v1_10003020, i16* %v5_10003028, align 2
  br i1 %v4_10003024, label %dec_label_pc_10003030, label %dec_label_pc_10002eec

dec_label_pc_10003030:                            ; preds = %dec_label_pc_10003020, %dec_label_pc_10002ee4
  %v0_10003030 = call i32 @function_10005998()
  %v1_10003030 = trunc i32 %v0_10003030 to i16
  store i32 %v0_10003030, i32* %r3.global-to-local, align 4
  %v3_10003034 = load i32, i32* @r27, align 4
  %v4_10003034 = add i32 %v3_10003034, 2
  %v5_10003034 = inttoptr i32 %v4_10003034 to i16*
  store i16 %v1_10003030, i16* %v5_10003034, align 2
  %v0_10003038 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003038, label %dec_label_pc_10002ef0, label %dec_label_pc_1000303c

dec_label_pc_1000303c:                            ; preds = %dec_label_pc_10002eec, %dec_label_pc_10003030
  %v0_1000303c = load i32, i32* @r28, align 4
  %v1_1000303c = add i32 %v0_1000303c, 28
  store i32 %v1_1000303c, i32* @r29, align 4
  %v0_10003040 = load i32, i32* @r24, align 4
  store i32 %v0_10003040, i32* @r4, align 4
  store i32 %v1_1000303c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000304c.24 to i32), i32* @lr, align 4
  %v0_10003048 = call i32 @function_10005a58()
  store i32 %v0_10003048, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10003050 = load i32, i32* @r29, align 4
  %v2_10003050 = load i32, i32* @r24, align 4
  %v4_10003050 = add i32 %v2_10003050, %v1_10003050
  %v5_10003050 = inttoptr i32 %v4_10003050 to i8*
  store i8 0, i8* %v5_10003050, align 1
  br label %dec_label_pc_10002ef0

dec_label_pc_10003058:                            ; preds = %dec_label_pc_10002db0
  store i32 1460, i32* @r24, align 4
  br label %dec_label_pc_10002dc8

dec_label_pc_10003060:                            ; preds = %dec_label_pc_10002d8c
  %v0_10003060 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10003060, i32* %r3.global-to-local, align 4
  store i32 268447848, i32* @lr, align 4
  %v0_10003064 = call i32 @function_10009a30()
  store i32 %v0_10003064, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002f70

dec_label_pc_1000306c:                            ; preds = %dec_label_pc_10002dd8
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 16384, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000307c

dec_label_pc_1000307c:                            ; preds = %dec_label_pc_1000307c, %dec_label_pc_1000306c
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268447880, i32* @lr, align 4
  %v2_10003084 = call i32 @function_1000aadc(i32 1510, i32 1)
  store i32 %v2_10003084, i32* %r3.global-to-local, align 4
  %v3_10003088 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003088, i32* %r9.global-to-local, align 4
  %v0_1000308c = load i32, i32* @r30, align 4
  %v1_1000308c = mul i32 %v0_1000308c, 4
  store i32 %v1_1000308c, i32* %r0.global-to-local, align 4
  %v1_10003090 = load i32, i32* %r19.global-to-local, align 4
  %v3_10003090 = add i32 %v1_10003090, %v1_1000308c
  %v4_10003090 = inttoptr i32 %v3_10003090 to i32*
  store i32 %v2_10003084, i32* %v4_10003090, align 4
  %v0_10003094 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003094 = mul i32 %v0_10003094, 4
  store i32 %v1_10003094, i32* %r9.global-to-local, align 4
  %v1_10003098 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003098 = add i32 %v1_10003098, %v1_10003094
  %v3_10003098 = inttoptr i32 %v2_10003098 to i32*
  %v4_10003098 = load i32, i32* %v3_10003098, align 4
  store i32 %v4_10003098, i32* %r11.global-to-local, align 4
  %v1_1000309c = inttoptr i32 %v4_10003098 to i32*
  %v2_1000309c = load i32, i32* %v1_1000309c, align 4
  store i32 %v2_1000309c, i32* %r0.global-to-local, align 4
  %v1_100030a0 = add i32 %v4_10003098, 20
  store i32 %v1_100030a0, i32* %r10.global-to-local, align 4
  %v0_100030a4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100030a4 = trunc i32 %v0_100030a4 to i8
  %v3_100030a4 = add i32 %v4_10003098, 8
  %v4_100030a4 = inttoptr i32 %v3_100030a4 to i8*
  store i8 %v1_100030a4, i8* %v4_100030a4, align 1
  %v1_100030a8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100030a8, i32* %r0.global-to-local, align 4
  %v0_100030ac = load i32, i32* %r17.global-to-local, align 4
  %v1_100030ac = load i32, i32* %r11.global-to-local, align 4
  %v2_100030ac = add i32 %v1_100030ac, 12
  %v3_100030ac = inttoptr i32 %v2_100030ac to i32*
  store i32 %v0_100030ac, i32* %v3_100030ac, align 4
  %v1_100030b0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100030b4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100030b4 = trunc i32 %v0_100030b4 to i16
  %v2_100030b4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030b4 = add i32 %v2_100030b4, 4
  %v4_100030b4 = inttoptr i32 %v3_100030b4 to i16*
  store i16 %v1_100030b4, i16* %v4_100030b4, align 2
  %v1_100030b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100030b8 = inttoptr i32 %v1_100030b8 to i32*
  store i32 %v1_100030b0, i32* %v2_100030b8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100030c0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030c0 = add i32 %v2_100030c0, 9
  %v4_100030c0 = inttoptr i32 %v3_100030c0 to i8*
  store i8 17, i8* %v4_100030c0, align 1
  %v0_100030c4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100030c4 = trunc i32 %v0_100030c4 to i8
  %v2_100030c4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030c4 = add i32 %v2_100030c4, 1
  %v4_100030c4 = inttoptr i32 %v3_100030c4 to i8*
  store i8 %v1_100030c4, i8* %v4_100030c4, align 1
  %v0_100030c8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100030c8 = trunc i32 %v0_100030c8 to i16
  %v2_100030c8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030c8 = add i32 %v2_100030c8, 2
  %v4_100030c8 = inttoptr i32 %v3_100030c8 to i16*
  store i16 %v1_100030c8, i16* %v4_100030c8, align 2
  %v3_100030cc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100030cc, i32* %r9.global-to-local, align 4
  %v0_100030d0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100030d0 = trunc i32 %v0_100030d0 to i16
  %v2_100030d0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030d0 = add i32 %v2_100030d0, 6
  %v4_100030d0 = inttoptr i32 %v3_100030d0 to i16*
  store i16 %v1_100030d0, i16* %v4_100030d0, align 2
  %v0_100030d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100030d4 = add i32 %v0_100030d4, 1
  store i32 %v1_100030d4, i32* %r30.global-to-local, align 4
  %v1_100030d8 = mul i32 %v0_100030d4, 24
  store i32 %v1_100030d8, i32* %r9.global-to-local, align 4
  %v1_100030dc = load i32, i32* %r18.global-to-local, align 4
  %v2_100030dc = icmp slt i32 %v1_100030d4, %v1_100030dc
  %v0_100030e0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100030e0 = trunc i32 %v0_100030e0 to i16
  %v2_100030e0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030e0 = add i32 %v2_100030e0, 20
  %v4_100030e0 = inttoptr i32 %v3_100030e0 to i16*
  store i16 %v1_100030e0, i16* %v4_100030e0, align 2
  %v0_100030e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100030e4 = load i32, i32* @r31, align 4
  %v2_100030e4 = add i32 %v1_100030e4, %v0_100030e4
  store i32 %v2_100030e4, i32* %r9.global-to-local, align 4
  %v0_100030e8 = load i32, i32* %r26.global-to-local, align 4
  %v1_100030e8 = trunc i32 %v0_100030e8 to i16
  %v2_100030e8 = load i32, i32* %r10.global-to-local, align 4
  %v3_100030e8 = add i32 %v2_100030e8, 4
  %v4_100030e8 = inttoptr i32 %v3_100030e8 to i16*
  store i16 %v1_100030e8, i16* %v4_100030e8, align 2
  %v0_100030ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100030ec = add i32 %v0_100030ec, 16
  %v2_100030ec = inttoptr i32 %v1_100030ec to i32*
  %v3_100030ec = load i32, i32* %v2_100030ec, align 4
  store i32 %v3_100030ec, i32* %r0.global-to-local, align 4
  %v0_100030f0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100030f0 = trunc i32 %v0_100030f0 to i16
  %v2_100030f0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100030f0 = add i32 %v2_100030f0, 2
  %v4_100030f0 = inttoptr i32 %v3_100030f0 to i16*
  store i16 %v1_100030f0, i16* %v4_100030f0, align 2
  %v0_100030f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100030f4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100030f4 = add i32 %v1_100030f4, 16
  %v3_100030f4 = inttoptr i32 %v2_100030f4 to i32*
  store i32 %v0_100030f4, i32* %v3_100030f4, align 4
  %v0_100030f8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100030f8, i32* %stack_var_-104, align 4
  br i1 %v2_100030dc, label %dec_label_pc_1000307c, label %dec_label_pc_10002e80.preheader

; uselistorder directives
  uselistorder i32 %v1_10003094, { 1, 0 }
  uselistorder i32 %v1_1000308c, { 1, 0 }
  uselistorder i32 %v0_10003030, { 1, 0 }
  uselistorder i32 %v0_10003020, { 1, 0 }
  uselistorder i32 %v0_10003010, { 1, 0 }
  uselistorder i32 %v1_10003008, { 1, 0 }
  uselistorder i32 %v1_10002f50, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002f18, { 1, 0 }
  uselistorder i32 %v1_10002eac, { 1, 0 }
  uselistorder i32 %v1_10002e1c, { 1, 0 }
  uselistorder i32 %v1_10002e14, { 1, 0 }
  uselistorder i32 %v1_10002db0, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 21, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 9, 8, 10, 1, 2, 4, 3, 5, 6, 7, 11 }
  uselistorder i32* %r26.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i32 1460, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000303c, { 1, 0 }
  uselistorder label %dec_label_pc_10002f70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002ef0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002e80, { 1, 0 }
  uselistorder label %dec_label_pc_10002dc8, { 1, 0 }
}

define i32 @function_10003104(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10003104:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %v0_10003108 = load i32, i32* @lr, align 4
  store i32 %v0_10003108, i32* %r0.global-to-local, align 4
  %v0_1000310c = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r20.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 %v0_1000310c, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_10003130 = load i32, i32* %r0.global-to-local, align 4
  %v0_10003158 = load i32, i32* @r28, align 4
  store i32 %arg5, i32* @r28, align 4
  %v0_10003160 = load i32, i32* @r29, align 4
  store i32 %arg4, i32* @r29, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 268448136, i32* @lr, align 4
  %v2_10003184 = call i32 @function_1000aadc(i32 %arg2, i32 4)
  store i32 %v2_10003184, i32* %r21.global-to-local, align 4
  %v0_1000318c = load i32, i32* @r28, align 4
  %v0_10003190 = load i32, i32* @r29, align 4
  store i32 %v0_10003190, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268448160, i32* @lr, align 4
  %v4_1000319c = inttoptr i32 %v0_1000318c to i32*
  %v5_1000319c = call i32 @function_10000300(i32 %v0_10003190, i32* %v4_1000319c, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_100031ac = load i32, i32* @r28, align 4
  %v1_100031b0 = urem i32 %v5_1000319c, 256
  store i32 %v1_100031b0, i32* %r18.global-to-local, align 4
  %v0_100031b4 = load i32, i32* @r29, align 4
  store i32 %v0_100031b4, i32* %r3.global-to-local, align 4
  store i32 268448188, i32* @lr, align 4
  %v4_100031b8 = inttoptr i32 %v0_100031ac to i32*
  %v5_100031b8 = call i32 @function_10000300(i32 %v0_100031b4, i32* %v4_100031b8, i32 3, i32 65535)
  %v0_100031bc = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_100031b8, i32* %r24.global-to-local, align 4
  %v0_100031cc = load i32, i32* @r29, align 4
  store i32 %v0_100031cc, i32* %r3.global-to-local, align 4
  store i32 268448212, i32* @lr, align 4
  %v4_100031d0 = inttoptr i32 %v0_100031bc to i32*
  %v5_100031d0 = call i32 @function_10000300(i32 %v0_100031cc, i32* %v4_100031d0, i32 4, i32 64)
  %v0_100031d4 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_100031e0 = urem i32 %v5_100031d0, 256
  store i32 %v1_100031e0, i32* %r19.global-to-local, align 4
  %v0_100031e4 = load i32, i32* @r29, align 4
  store i32 %v0_100031e4, i32* %r3.global-to-local, align 4
  store i32 268448236, i32* @lr, align 4
  %v4_100031e8 = inttoptr i32 %v0_100031d4 to i32*
  %v5_100031e8 = call i32 @function_10000300(i32 %v0_100031e4, i32* %v4_100031e8, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_100031f8 = load i32, i32* @r28, align 4
  %v1_100031fc = urem i32 %v5_100031e8, 256
  store i32 %v1_100031fc, i32* %r16.global-to-local, align 4
  %v0_10003200 = load i32, i32* @r29, align 4
  store i32 %v0_10003200, i32* %r3.global-to-local, align 4
  store i32 268448264, i32* @lr, align 4
  %v4_10003204 = inttoptr i32 %v0_100031f8 to i32*
  %v5_10003204 = call i32 @function_10000300(i32 %v0_10003200, i32* %v4_10003204, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_10003210 = load i32, i32* @r28, align 4
  store i32 %v5_10003204, i32* %r25.global-to-local, align 4
  %v0_10003218 = load i32, i32* @r29, align 4
  store i32 %v0_10003218, i32* %r3.global-to-local, align 4
  store i32 268448288, i32* @lr, align 4
  %v4_1000321c = inttoptr i32 %v0_10003210 to i32*
  %v5_1000321c = call i32 @function_10000300(i32 %v0_10003218, i32* %v4_1000321c, i32 7, i32 27015)
  %v0_10003220 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003220, i32* %stack_var_-100, align 4
  store i32 %v5_1000321c, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268448304, i32* @lr, align 4
  %v0_1000322c = call i32 @function_10009e00()
  %v1_10003230 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003230 = add i32 %v1_10003230, %v0_1000322c
  store i32 %v2_10003230, i32* %r17.global-to-local, align 4
  store i32 29, i32* %r3.global-to-local, align 4
  store i32 268448316, i32* @lr, align 4
  %v1_10003238 = call i32 @function_100089f4(i32 29)
  store i32 29, i32* %r3.global-to-local, align 4
  %v3_10003244 = call i32 @function_10008940(i32 29, i32* nonnull %stack_var_-100)
  store i32 %v3_10003244, i32* @r29, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448348, i32* @lr, align 4
  %v3_10003258 = call i32 @function_1000a780(i32 2, i32 3, i32 17)
  store i32 %v3_10003258, i32* %r3.global-to-local, align 4
  %v3_1000325c = icmp eq i32 %v3_10003258, -1
  store i32 %v3_10003258, i32* %r22.global-to-local, align 4
  br i1 %v3_1000325c, label %dec_label_pc_10003558, label %dec_label_pc_10003268

dec_label_pc_10003268:                            ; preds = %dec_label_pc_10003104
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10003274 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10003274, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268448388, i32* @lr, align 4
  %v4_10003280 = call i32 @function_1000a744(i32 0, i32 3, i32 %v2_10003274, i32 4)
  store i32 %v4_10003280, i32* %r3.global-to-local, align 4
  %v3_10003284 = icmp eq i32 %v4_10003280, -1
  br i1 %v3_10003284, label %dec_label_pc_100035b8, label %dec_label_pc_1000328c

dec_label_pc_1000328c:                            ; preds = %dec_label_pc_10003268
  %v0_1000328c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000328c = icmp slt i32 %v0_1000328c, 0
  %v3_1000328c = icmp eq i32 %v0_1000328c, 0
  store i1 %v1_1000328c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000328c, i1* %cr4_eq.global-to-local, align 1
  %v0_10003290 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003290 = urem i32 %v0_10003290, 65536
  store i32 %v1_10003290, i32* %r23.global-to-local, align 4
  %v0_10003294 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003294, i32* %stack_var_-104, align 4
  %v0_10003298 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003298 = urem i32 %v0_10003298, 65536
  store i32 %v1_10003298, i32* %r24.global-to-local, align 4
  %v0_1000329c = load i32, i32* @r31, align 4
  %v1_1000329c = urem i32 %v0_1000329c, 65536
  store i32 %v1_1000329c, i32* %r25.global-to-local, align 4
  %tmp28 = icmp slt i32 %v0_1000328c, 1
  br i1 %tmp28, label %dec_label_pc_10003370, label %dec_label_pc_100032a4

dec_label_pc_100032a4:                            ; preds = %dec_label_pc_1000328c
  %v0_100032a4 = load i32, i32* %r16.global-to-local, align 4
  %v3_100032a4 = icmp eq i32 %v0_100032a4, 0
  store i32 4, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r27.global-to-local, align 4
  store i32 16384, i32* %r26.global-to-local, align 4
  store i32 17, i32* %r16.global-to-local, align 4
  store i32 -1, i32* %r15.global-to-local, align 4
  br i1 %v3_100032a4, label %dec_label_pc_100032c8, label %dec_label_pc_10003498

dec_label_pc_100032c8:                            ; preds = %dec_label_pc_100032a4, %dec_label_pc_100032c8
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268448468, i32* @lr, align 4
  %v2_100032d0 = call i32 @function_1000aadc(i32 128, i32 1)
  %v3_100032d4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100032d4, i32* %r9.global-to-local, align 4
  %v0_100032d8 = load i32, i32* @r31, align 4
  %v1_100032d8 = mul i32 %v0_100032d8, 4
  store i32 %v1_100032d8, i32* %r0.global-to-local, align 4
  %v1_100032e0 = load i32, i32* %r21.global-to-local, align 4
  %v3_100032e0 = add i32 %v1_100032e0, %v1_100032d8
  %v4_100032e0 = inttoptr i32 %v3_100032e0 to i32*
  store i32 %v2_100032d0, i32* %v4_100032e0, align 4
  %v0_100032e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100032e4 = mul i32 %v0_100032e4, 4
  store i32 %v1_100032e4, i32* %r3.global-to-local, align 4
  %v1_100032e8 = load i32, i32* %r21.global-to-local, align 4
  %v2_100032e8 = add i32 %v1_100032e8, %v1_100032e4
  %v3_100032e8 = inttoptr i32 %v2_100032e8 to i32*
  %v4_100032e8 = load i32, i32* %v3_100032e8, align 4
  store i32 %v4_100032e8, i32* %r3.global-to-local, align 4
  %v1_100032ec = inttoptr i32 %v4_100032e8 to i32*
  %v2_100032ec = load i32, i32* %v1_100032ec, align 4
  store i32 %v2_100032ec, i32* %r0.global-to-local, align 4
  %v1_100032f0 = add i32 %v4_100032e8, 20
  store i32 %v1_100032f0, i32* %r8.global-to-local, align 4
  %v0_100032f4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100032f4 = trunc i32 %v0_100032f4 to i16
  %v3_100032f4 = add i32 %v4_100032e8, 4
  %v4_100032f4 = inttoptr i32 %v3_100032f4 to i16*
  store i16 %v1_100032f4, i16* %v4_100032f4, align 2
  %v1_100032f8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100032f8, i32* %r0.global-to-local, align 4
  %v0_100032fc = load i32, i32* %r24.global-to-local, align 4
  %v1_100032fc = trunc i32 %v0_100032fc to i16
  %v2_100032fc = load i32, i32* %r3.global-to-local, align 4
  %v3_100032fc = add i32 %v2_100032fc, 20
  %v4_100032fc = inttoptr i32 %v3_100032fc to i16*
  store i16 %v1_100032fc, i16* %v4_100032fc, align 2
  %v1_10003300 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10003304 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003304 = inttoptr i32 %v1_10003304 to i32*
  store i32 %v1_10003300, i32* %v2_10003304, align 4
  %v0_10003308 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003308 = trunc i32 %v0_10003308 to i8
  %v2_10003308 = load i32, i32* %r3.global-to-local, align 4
  %v3_10003308 = add i32 %v2_10003308, 1
  %v4_10003308 = inttoptr i32 %v3_10003308 to i8*
  store i8 %v1_10003308, i8* %v4_10003308, align 1
  %v3_1000330c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000330c, i32* %r9.global-to-local, align 4
  %v0_10003310 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003310 = trunc i32 %v0_10003310 to i8
  %v2_10003310 = load i32, i32* %r3.global-to-local, align 4
  %v3_10003310 = add i32 %v2_10003310, 8
  %v4_10003310 = inttoptr i32 %v3_10003310 to i8*
  store i8 %v1_10003310, i8* %v4_10003310, align 1
  %v0_10003314 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003314 = trunc i32 %v0_10003314 to i8
  %v2_10003314 = load i32, i32* %r3.global-to-local, align 4
  %v3_10003314 = add i32 %v2_10003314, 9
  %v4_10003314 = inttoptr i32 %v3_10003314 to i8*
  store i8 %v1_10003314, i8* %v4_10003314, align 1
  %v0_10003318 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003318 = add i32 %v0_10003318, 32
  %v1_1000331c = trunc i32 %v1_10003318 to i16
  %v2_1000331c = load i32, i32* %r3.global-to-local, align 4
  %v3_1000331c = add i32 %v2_1000331c, 2
  %v4_1000331c = inttoptr i32 %v3_1000331c to i16*
  store i16 %v1_1000331c, i16* %v4_1000331c, align 2
  %v3_10003320 = load i32, i32* %stack_var_-104, align 4
  %v3_10003324 = load i32, i32* @global_var_1001d188.12, align 4
  store i32 %v3_10003324, i32* %r0.global-to-local, align 4
  %v1_10003328 = mul i32 %v3_10003320, 24
  store i32 %v1_10003328, i32* %r9.global-to-local, align 4
  %v0_1000332c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000332c = trunc i32 %v0_1000332c to i16
  %v2_1000332c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000332c = add i32 %v2_1000332c, 2
  %v4_1000332c = inttoptr i32 %v3_1000332c to i16*
  store i16 %v1_1000332c, i16* %v4_1000332c, align 2
  %v0_10003330 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003330 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003330 = add i32 %v1_10003330, 12
  %v3_10003330 = inttoptr i32 %v2_10003330 to i32*
  store i32 %v0_10003330, i32* %v3_10003330, align 4
  %v0_10003334 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003334 = load i32, i32* @r30, align 4
  %v2_10003334 = add i32 %v1_10003334, %v0_10003334
  store i32 %v2_10003334, i32* %r9.global-to-local, align 4
  %v1_10003338 = add i32 %v2_10003334, 16
  %v2_10003338 = inttoptr i32 %v1_10003338 to i32*
  %v3_10003338 = load i32, i32* %v2_10003338, align 4
  store i32 %v3_10003338, i32* %r9.global-to-local, align 4
  %v3_1000333c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000333c, i32* %r11.global-to-local, align 4
  %v1_10003340 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003340 = add i32 %v1_10003340, 16
  %v3_10003340 = inttoptr i32 %v2_10003340 to i32*
  store i32 %v3_10003338, i32* %v3_10003340, align 4
  %v0_10003344 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003344 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003344 = add i32 %v1_10003344, 28
  %v3_10003344 = inttoptr i32 %v2_10003344 to i32*
  store i32 %v0_10003344, i32* %v3_10003344, align 4
  %v0_10003348 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003348 = add i32 %v0_10003348, 12
  store i32 %v1_10003348, i32* %r0.global-to-local, align 4
  %v1_1000334c = trunc i32 %v1_10003348 to i16
  %v2_1000334c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000334c = add i32 %v2_1000334c, 4
  %v4_1000334c = inttoptr i32 %v3_1000334c to i16*
  store i16 %v1_1000334c, i16* %v4_1000334c, align 2
  %v0_10003350 = load i32, i32* %r3.global-to-local, align 4
  %v1_10003350 = add i32 %v0_10003350, 32
  store i32 %v1_10003350, i32* %r3.global-to-local, align 4
  %v3_10003354 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10003354, i32* %r5.global-to-local, align 4
  store i32 268448604, i32* @lr, align 4
  %v3_10003358 = call i32 @function_100092f4(i32 %v1_10003350, i32 %v3_10003354, i32 %v3_10003354)
  store i32 %v3_10003358, i32* %r3.global-to-local, align 4
  %v3_1000335c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000335c, i32* %r9.global-to-local, align 4
  %v1_10003360 = add i32 %v3_1000335c, 1
  %v1_10003364 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003364 = icmp slt i32 %v1_10003360, %v1_10003364
  store i32 %v1_10003360, i32* %stack_var_-104, align 4
  br i1 %v2_10003364, label %dec_label_pc_100032c8, label %dec_label_pc_10003370

dec_label_pc_10003370:                            ; preds = %dec_label_pc_1000328c, %dec_label_pc_100032c8, %dec_label_pc_10003498, %dec_label_pc_10003548
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10003378 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003378 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003378 = or i1 %v0_10003378, %v1_10003378
  br i1 %v2_10003378, label %dec_label_pc_10003548, label %dec_label_pc_1000337c

dec_label_pc_1000337c:                            ; preds = %dec_label_pc_10003370
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003418

dec_label_pc_10003388:                            ; preds = %dec_label_pc_10003418
  %v0_10003388 = load i32, i32* %r23.global-to-local, align 4
  %v4_10003388 = icmp eq i32 %v0_10003388, 65535
  br i1 %v4_10003388, label %dec_label_pc_1000346c, label %dec_label_pc_10003390

dec_label_pc_10003390:                            ; preds = %dec_label_pc_10003440.dec_label_pc_10003390_crit_edge, %dec_label_pc_10003388
  %v1_10003390 = phi i32 [ %v1_10003390.pre, %dec_label_pc_10003440.dec_label_pc_10003390_crit_edge ], [ 65535, %dec_label_pc_10003388 ]
  %v0_10003390 = load i32, i32* %r24.global-to-local, align 4
  %v4_10003390 = icmp eq i32 %v0_10003390, %v1_10003390
  br i1 %v4_10003390, label %dec_label_pc_1000347c, label %dec_label_pc_10003398

dec_label_pc_10003398:                            ; preds = %dec_label_pc_1000346c.dec_label_pc_10003398_crit_edge, %dec_label_pc_10003390
  %v1_10003398 = phi i32 [ %v1_10003398.pre, %dec_label_pc_1000346c.dec_label_pc_10003398_crit_edge ], [ %v1_10003390, %dec_label_pc_10003390 ]
  %v0_10003398 = load i32, i32* %r25.global-to-local, align 4
  %v4_10003398 = icmp eq i32 %v0_10003398, %v1_10003398
  br i1 %v4_10003398, label %dec_label_pc_1000348c, label %dec_label_pc_100033a0

dec_label_pc_100033a0:                            ; preds = %dec_label_pc_1000347c, %dec_label_pc_10003398, %dec_label_pc_1000348c
  %v0_100033a0 = load i32, i32* %r26.global-to-local, align 4
  %v1_100033a0 = trunc i32 %v0_100033a0 to i16
  %v2_100033a0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100033a0 = add i32 %v2_100033a0, 10
  %v4_100033a0 = inttoptr i32 %v3_100033a0 to i16*
  store i16 %v1_100033a0, i16* %v4_100033a0, align 2
  %v0_100033a8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100033a8, i32* @r3, align 4
  %v2_100033ac = call i32 @function_10003ca8(i32 %v0_100033a8, i32 20)
  %v3_100033ac = trunc i32 %v2_100033ac to i16
  store i32 %v2_100033ac, i32* %r3.global-to-local, align 4
  %v3_100033b0 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_100033b0, i32* %r6.global-to-local, align 4
  %v3_100033b4 = load i32, i32* %r28.global-to-local, align 4
  %v4_100033b4 = add i32 %v3_100033b4, 10
  %v5_100033b4 = inttoptr i32 %v4_100033b4 to i16*
  store i16 %v3_100033ac, i16* %v5_100033b4, align 2
  %v0_100033b8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100033b8, i32* @r4, align 4
  %v0_100033bc = load i32, i32* %r26.global-to-local, align 4
  %v1_100033bc = trunc i32 %v0_100033bc to i16
  %v3_100033bc = add i32 %v0_100033b8, 6
  %v4_100033bc = inttoptr i32 %v3_100033bc to i16*
  store i16 %v1_100033bc, i16* %v4_100033bc, align 2
  %v0_100033c0 = load i32, i32* %r6.global-to-local, align 4
  %v1_100033c0 = add i32 %v0_100033c0, 12
  store i32 %v1_100033c0, i32* %r6.global-to-local, align 4
  %v0_100033c4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100033c4 = add i32 %v0_100033c4, 4
  %v2_100033c4 = inttoptr i32 %v1_100033c4 to i16*
  %v3_100033c4 = load i16, i16* %v2_100033c4, align 2
  %v4_100033c4 = zext i16 %v3_100033c4 to i32
  store i32 %v4_100033c4, i32* %r5.global-to-local, align 4
  %v0_100033c8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100033c8, i32* %r3.global-to-local, align 4
  %v4_100033cc = call i32 @function_10003d0c(i32 %v0_100033c8, i32 %v0_100033b8, i32 %v4_100033c4, i32 %v1_100033c0)
  %v5_100033cc = trunc i32 %v4_100033cc to i16
  store i32 %v4_100033cc, i32* %r3.global-to-local, align 4
  %v3_100033d0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100033d0, i32* %r7.global-to-local, align 4
  %v0_100033d4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100033d4 = add i32 %v0_100033d4, 2
  %v2_100033d4 = inttoptr i32 %v1_100033d4 to i16*
  %v3_100033d4 = load i16, i16* %v2_100033d4, align 2
  %v4_100033d4 = zext i16 %v3_100033d4 to i32
  store i32 %v4_100033d4, i32* %r0.global-to-local, align 4
  %v0_100033d8 = load i32, i32* %r28.global-to-local, align 4
  %v1_100033dc = mul i32 %v3_100033d0, 24
  store i32 %v1_100033dc, i32* %r7.global-to-local, align 4
  %v3_100033e0 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_100033e0, i32* %r5.global-to-local, align 4
  %v4_100033e4 = add i32 %v0_100033d4, 6
  %v5_100033e4 = inttoptr i32 %v4_100033e4 to i16*
  store i16 %v5_100033cc, i16* %v5_100033e4, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_100033ec = load i32, i32* %r7.global-to-local, align 4
  %v1_100033ec = load i32, i32* @r30, align 4
  %v2_100033ec = add i32 %v1_100033ec, %v0_100033ec
  store i32 %v2_100033ec, i32* %r7.global-to-local, align 4
  %v0_100033f0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100033f0 = add i32 %v0_100033f0, 32
  store i32 %v1_100033f0, i32* %r5.global-to-local, align 4
  %v0_100033f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100033f4 = trunc i32 %v0_100033f4 to i16
  %v3_100033f4 = add i32 %v2_100033ec, 2
  %v4_100033f4 = inttoptr i32 %v3_100033f4 to i16*
  store i16 %v1_100033f4, i16* %v4_100033f4, align 2
  %v0_100033f8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100033f8, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268448772, i32* @lr, align 4
  %v6_10003400 = call i32 @function_1000a704(i32 %v0_100033f8, i32 %v0_100033d8, i32 %v1_100033f0, i32 16384, i32 %v2_100033ec, i32 16)
  store i32 %v6_10003400, i32* %r3.global-to-local, align 4
  %v3_10003404 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003404, i32* %r9.global-to-local, align 4
  %v1_10003408 = add i32 %v3_10003404, 1
  store i32 %v1_10003408, i32* %r11.global-to-local, align 4
  %v1_1000340c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000340c = icmp slt i32 %v1_10003408, %v1_1000340c
  store i32 %v1_10003408, i32* %stack_var_-104, align 4
  br i1 %v2_1000340c, label %dec_label_pc_10003418, label %dec_label_pc_10003548

dec_label_pc_10003418:                            ; preds = %dec_label_pc_100033a0, %dec_label_pc_1000337c
  %v0_10003428 = phi i32 [ %v1_10003408, %dec_label_pc_100033a0 ], [ 0, %dec_label_pc_1000337c ]
  %v1_10003418 = mul i32 %v0_10003428, 24
  store i32 65535, i32* @r31, align 4
  %v1_10003424 = load i32, i32* @r30, align 4
  %v2_10003424 = add i32 %v1_10003424, %v1_10003418
  %v1_10003428 = mul i32 %v0_10003428, 4
  store i32 %v1_10003428, i32* %r0.global-to-local, align 4
  %v1_1000342c = add i32 %v2_10003424, 20
  %v2_1000342c = inttoptr i32 %v1_1000342c to i8*
  %v3_1000342c = load i8, i8* %v2_1000342c, align 1
  %v4_1000342c = zext i8 %v3_1000342c to i32
  store i32 %v4_1000342c, i32* %r9.global-to-local, align 4
  %v0_10003430 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003430 = add i32 %v0_10003430, %v1_10003428
  %v3_10003430 = inttoptr i32 %v2_10003430 to i32*
  %v4_10003430 = load i32, i32* %v3_10003430, align 4
  store i32 %v4_10003430, i32* %r28.global-to-local, align 4
  %v2_10003434 = icmp ugt i8 %v3_1000342c, 31
  %v1_10003438 = add i32 %v4_10003430, 20
  store i32 %v1_10003438, i32* %r27.global-to-local, align 4
  br i1 %v2_10003434, label %dec_label_pc_10003388, label %dec_label_pc_10003440

dec_label_pc_10003440:                            ; preds = %dec_label_pc_10003418
  %v1_10003440 = add i32 %v2_10003424, 16
  %v2_10003440 = inttoptr i32 %v1_10003440 to i32*
  %v3_10003440 = load i32, i32* %v2_10003440, align 4
  store i32 %v3_10003440, i32* %r29.global-to-local, align 4
  %v0_10003444 = call i32 @function_10005998()
  store i32 %v0_10003444, i32* %r3.global-to-local, align 4
  %v3_10003448 = load i32, i32* %stack_var_-104, align 4
  %v0_1000344c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000344c = load i32, i32* @r31, align 4
  %v4_1000344c = icmp eq i32 %v0_1000344c, %v1_1000344c
  %v1_10003450 = mul i32 %v3_10003448, 24
  %v1_10003454 = load i32, i32* @r30, align 4
  %v2_10003454 = add i32 %v1_10003454, %v1_10003450
  store i32 %v2_10003454, i32* %r9.global-to-local, align 4
  %v1_10003458 = add i32 %v2_10003454, 20
  %v2_10003458 = inttoptr i32 %v1_10003458 to i8*
  %v3_10003458 = load i8, i8* %v2_10003458, align 1
  %v4_10003458 = zext i8 %v3_10003458 to i32
  store i32 %v4_10003458, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003458, 64
  %v2_1000345c = zext i8 %tmp to i32
  %v3_1000345c = lshr i32 %v0_10003444, %v2_1000345c
  store i32 %v3_1000345c, i32* %r3.global-to-local, align 4
  %v0_10003460 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003460 = add i32 %v3_1000345c, %v0_10003460
  store i32 %v2_10003460, i32* %r29.global-to-local, align 4
  %v1_10003464 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003464 = add i32 %v1_10003464, 16
  %v3_10003464 = inttoptr i32 %v2_10003464 to i32*
  store i32 %v2_10003460, i32* %v3_10003464, align 4
  br i1 %v4_1000344c, label %dec_label_pc_1000346c, label %dec_label_pc_10003440.dec_label_pc_10003390_crit_edge

dec_label_pc_10003440.dec_label_pc_10003390_crit_edge: ; preds = %dec_label_pc_10003440
  %v1_10003390.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10003390

dec_label_pc_1000346c:                            ; preds = %dec_label_pc_10003440, %dec_label_pc_10003388
  %v0_1000346c = call i32 @function_10005998()
  %v1_1000346c = trunc i32 %v0_1000346c to i16
  store i32 %v0_1000346c, i32* %r3.global-to-local, align 4
  %v0_10003470 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003470 = load i32, i32* @r31, align 4
  %v4_10003470 = icmp eq i32 %v0_10003470, %v1_10003470
  %v3_10003474 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003474 = add i32 %v3_10003474, 4
  %v5_10003474 = inttoptr i32 %v4_10003474 to i16*
  store i16 %v1_1000346c, i16* %v5_10003474, align 2
  br i1 %v4_10003470, label %dec_label_pc_1000347c, label %dec_label_pc_1000346c.dec_label_pc_10003398_crit_edge

dec_label_pc_1000346c.dec_label_pc_10003398_crit_edge: ; preds = %dec_label_pc_1000346c
  %v1_10003398.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10003398

dec_label_pc_1000347c:                            ; preds = %dec_label_pc_1000346c, %dec_label_pc_10003390
  %v0_1000347c = call i32 @function_10005998()
  %v1_1000347c = trunc i32 %v0_1000347c to i16
  store i32 %v0_1000347c, i32* %r3.global-to-local, align 4
  %v0_10003480 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003480 = load i32, i32* @r31, align 4
  %v4_10003480 = icmp eq i32 %v0_10003480, %v1_10003480
  %v3_10003484 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003484 = add i32 %v3_10003484, 20
  %v5_10003484 = inttoptr i32 %v4_10003484 to i16*
  store i16 %v1_1000347c, i16* %v5_10003484, align 2
  br i1 %v4_10003480, label %dec_label_pc_1000348c, label %dec_label_pc_100033a0

dec_label_pc_1000348c:                            ; preds = %dec_label_pc_1000347c, %dec_label_pc_10003398
  %v0_1000348c = call i32 @function_10005998()
  %v1_1000348c = trunc i32 %v0_1000348c to i16
  store i32 %v0_1000348c, i32* %r3.global-to-local, align 4
  %v3_10003490 = load i32, i32* %r27.global-to-local, align 4
  %v4_10003490 = add i32 %v3_10003490, 2
  %v5_10003490 = inttoptr i32 %v4_10003490 to i16*
  store i16 %v1_1000348c, i16* %v5_10003490, align 2
  br label %dec_label_pc_100033a0

dec_label_pc_10003498:                            ; preds = %dec_label_pc_100032a4, %dec_label_pc_10003498
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268448932, i32* @lr, align 4
  %v2_100034a0 = call i32 @function_1000aadc(i32 128, i32 1)
  %v3_100034a4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100034a4, i32* %r9.global-to-local, align 4
  %v0_100034a8 = load i32, i32* @r31, align 4
  %v1_100034a8 = mul i32 %v0_100034a8, 4
  store i32 %v1_100034a8, i32* %r0.global-to-local, align 4
  %v1_100034b0 = load i32, i32* %r21.global-to-local, align 4
  %v3_100034b0 = add i32 %v1_100034b0, %v1_100034a8
  %v4_100034b0 = inttoptr i32 %v3_100034b0 to i32*
  store i32 %v2_100034a0, i32* %v4_100034b0, align 4
  %v0_100034b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100034b4 = mul i32 %v0_100034b4, 4
  store i32 %v1_100034b4, i32* %r3.global-to-local, align 4
  %v1_100034b8 = load i32, i32* %r21.global-to-local, align 4
  %v2_100034b8 = add i32 %v1_100034b8, %v1_100034b4
  %v3_100034b8 = inttoptr i32 %v2_100034b8 to i32*
  %v4_100034b8 = load i32, i32* %v3_100034b8, align 4
  store i32 %v4_100034b8, i32* %r3.global-to-local, align 4
  %v1_100034bc = inttoptr i32 %v4_100034b8 to i32*
  %v2_100034bc = load i32, i32* %v1_100034bc, align 4
  store i32 %v2_100034bc, i32* %r0.global-to-local, align 4
  %v1_100034c0 = add i32 %v4_100034b8, 20
  store i32 %v1_100034c0, i32* %r8.global-to-local, align 4
  %v0_100034c4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100034c4 = trunc i32 %v0_100034c4 to i16
  %v3_100034c4 = add i32 %v4_100034b8, 4
  %v4_100034c4 = inttoptr i32 %v3_100034c4 to i16*
  store i16 %v1_100034c4, i16* %v4_100034c4, align 2
  %v1_100034c8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100034c8, i32* %r0.global-to-local, align 4
  %v0_100034cc = load i32, i32* %r26.global-to-local, align 4
  %v1_100034cc = trunc i32 %v0_100034cc to i16
  %v2_100034cc = load i32, i32* %r3.global-to-local, align 4
  %v3_100034cc = add i32 %v2_100034cc, 6
  %v4_100034cc = inttoptr i32 %v3_100034cc to i16*
  store i16 %v1_100034cc, i16* %v4_100034cc, align 2
  %v1_100034d0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100034d4 = load i32, i32* %r24.global-to-local, align 4
  %v1_100034d4 = trunc i32 %v0_100034d4 to i16
  %v2_100034d4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100034d4 = add i32 %v2_100034d4, 20
  %v4_100034d4 = inttoptr i32 %v3_100034d4 to i16*
  store i16 %v1_100034d4, i16* %v4_100034d4, align 2
  %v1_100034d8 = load i32, i32* %r3.global-to-local, align 4
  %v2_100034d8 = inttoptr i32 %v1_100034d8 to i32*
  store i32 %v1_100034d0, i32* %v2_100034d8, align 4
  %v0_100034dc = load i32, i32* %r18.global-to-local, align 4
  %v1_100034dc = trunc i32 %v0_100034dc to i8
  %v2_100034dc = load i32, i32* %r3.global-to-local, align 4
  %v3_100034dc = add i32 %v2_100034dc, 1
  %v4_100034dc = inttoptr i32 %v3_100034dc to i8*
  store i8 %v1_100034dc, i8* %v4_100034dc, align 1
  %v3_100034e0 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_100034e0, i32* %r9.global-to-local, align 4
  %v0_100034e4 = load i32, i32* %r19.global-to-local, align 4
  %v1_100034e4 = trunc i32 %v0_100034e4 to i8
  %v2_100034e4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100034e4 = add i32 %v2_100034e4, 8
  %v4_100034e4 = inttoptr i32 %v3_100034e4 to i8*
  store i8 %v1_100034e4, i8* %v4_100034e4, align 1
  %v0_100034e8 = load i32, i32* %r16.global-to-local, align 4
  %v1_100034e8 = trunc i32 %v0_100034e8 to i8
  %v2_100034e8 = load i32, i32* %r3.global-to-local, align 4
  %v3_100034e8 = add i32 %v2_100034e8, 9
  %v4_100034e8 = inttoptr i32 %v3_100034e8 to i8*
  store i8 %v1_100034e8, i8* %v4_100034e8, align 1
  %v0_100034ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100034ec = add i32 %v0_100034ec, 32
  %v1_100034f0 = trunc i32 %v1_100034ec to i16
  %v2_100034f0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100034f0 = add i32 %v2_100034f0, 2
  %v4_100034f0 = inttoptr i32 %v3_100034f0 to i16*
  store i16 %v1_100034f0, i16* %v4_100034f0, align 2
  %v3_100034f4 = load i32, i32* %stack_var_-104, align 4
  %v3_100034f8 = load i32, i32* @global_var_1001d188.12, align 4
  store i32 %v3_100034f8, i32* %r0.global-to-local, align 4
  %v1_100034fc = mul i32 %v3_100034f4, 24
  store i32 %v1_100034fc, i32* %r9.global-to-local, align 4
  %v0_10003500 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003500 = trunc i32 %v0_10003500 to i16
  %v2_10003500 = load i32, i32* %r8.global-to-local, align 4
  %v3_10003500 = add i32 %v2_10003500, 2
  %v4_10003500 = inttoptr i32 %v3_10003500 to i16*
  store i16 %v1_10003500, i16* %v4_10003500, align 2
  %v0_10003504 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003504 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003504 = add i32 %v1_10003504, 12
  %v3_10003504 = inttoptr i32 %v2_10003504 to i32*
  store i32 %v0_10003504, i32* %v3_10003504, align 4
  %v0_10003508 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003508 = load i32, i32* @r30, align 4
  %v2_10003508 = add i32 %v1_10003508, %v0_10003508
  store i32 %v2_10003508, i32* %r9.global-to-local, align 4
  %v1_1000350c = add i32 %v2_10003508, 16
  %v2_1000350c = inttoptr i32 %v1_1000350c to i32*
  %v3_1000350c = load i32, i32* %v2_1000350c, align 4
  store i32 %v3_1000350c, i32* %r9.global-to-local, align 4
  %v3_10003510 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10003510, i32* %r11.global-to-local, align 4
  %v1_10003514 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003514 = add i32 %v1_10003514, 16
  %v3_10003514 = inttoptr i32 %v2_10003514 to i32*
  store i32 %v3_1000350c, i32* %v3_10003514, align 4
  %v0_10003518 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003518 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003518 = add i32 %v1_10003518, 28
  %v3_10003518 = inttoptr i32 %v2_10003518 to i32*
  store i32 %v0_10003518, i32* %v3_10003518, align 4
  %v0_1000351c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000351c = add i32 %v0_1000351c, 12
  store i32 %v1_1000351c, i32* %r0.global-to-local, align 4
  %v1_10003520 = trunc i32 %v1_1000351c to i16
  %v2_10003520 = load i32, i32* %r8.global-to-local, align 4
  %v3_10003520 = add i32 %v2_10003520, 4
  %v4_10003520 = inttoptr i32 %v3_10003520 to i16*
  store i16 %v1_10003520, i16* %v4_10003520, align 2
  %v0_10003524 = load i32, i32* %r3.global-to-local, align 4
  %v1_10003524 = add i32 %v0_10003524, 32
  store i32 %v1_10003524, i32* %r3.global-to-local, align 4
  %v3_10003528 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10003528, i32* %r5.global-to-local, align 4
  store i32 268449072, i32* @lr, align 4
  %v3_1000352c = call i32 @function_100092f4(i32 %v1_10003524, i32 %v3_10003528, i32 %v3_10003528)
  store i32 %v3_1000352c, i32* %r3.global-to-local, align 4
  %v3_10003530 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003530, i32* %r9.global-to-local, align 4
  %v1_10003534 = add i32 %v3_10003530, 1
  %v1_10003538 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003538 = icmp slt i32 %v1_10003534, %v1_10003538
  store i32 %v1_10003534, i32* %stack_var_-104, align 4
  br i1 %v2_10003538, label %dec_label_pc_10003498, label %dec_label_pc_10003370

dec_label_pc_10003548:                            ; preds = %dec_label_pc_100033a0, %dec_label_pc_10003370
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268449104, i32* @lr, align 4
  %v0_1000354c = call i32 @function_10009e00()
  store i32 %v0_1000354c, i32* %r3.global-to-local, align 4
  %v0_10003550 = load i32, i32* %r17.global-to-local, align 4
  %v2_10003550 = icmp slt i32 %v0_10003550, %v0_1000354c
  br i1 %v2_10003550, label %dec_label_pc_10003558, label %dec_label_pc_10003370

dec_label_pc_10003558:                            ; preds = %dec_label_pc_10003548, %dec_label_pc_10003104, %dec_label_pc_100035b8
  store i32 %v0_10003130, i32* %r0.global-to-local, align 4
  %v1_1000356c = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000310c)
  store i32 %v0_10003158, i32* %r28.global-to-local, align 4
  store i32 %v0_10003160, i32* %r29.global-to-local, align 4
  %v0_100035b4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100035b4

dec_label_pc_100035b8:                            ; preds = %dec_label_pc_10003268
  %v0_100035b8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100035b8, i32* %r3.global-to-local, align 4
  store i32 268449216, i32* @lr, align 4
  %v0_100035bc = call i32 @function_10009a30()
  store i32 %v0_100035bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003558

; uselistorder directives
  uselistorder i32 %v1_100034b4, { 1, 0 }
  uselistorder i32 %v1_100034a8, { 1, 0 }
  uselistorder i32 %v0_1000348c, { 1, 0 }
  uselistorder i32 %v0_1000347c, { 1, 0 }
  uselistorder i32 %v0_1000346c, { 1, 0 }
  uselistorder i32 %v1_10003428, { 1, 0 }
  uselistorder i32 %v1_10003408, { 1, 0, 2, 3 }
  uselistorder i32 %v4_100033cc, { 1, 0 }
  uselistorder i32 %v2_100033ac, { 1, 0 }
  uselistorder i32 %v1_100032e4, { 1, 0 }
  uselistorder i32 %v1_100032d8, { 1, 0 }
  uselistorder i32* %stack_var_-100, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* %stack_var_-104, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 47, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 0 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 9, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %r26.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32* %r22.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i8 31, { 0, 3, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_10003558, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003498, { 1, 0 }
  uselistorder label %dec_label_pc_100033a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003370, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100032c8, { 1, 0 }
}

define i32 @function_100035c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100035c4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2200 = alloca i32, align 4
  %stack_var_-2196 = alloca i32, align 4
  %stack_var_-2164 = alloca i32, align 4
  %v0_100035c4 = load i32, i32* @lr, align 4
  store i32 %v0_100035c4, i32* %r0.global-to-local, align 4
  %v0_100035cc = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r19.global-to-local, align 4
  %v0_100035d8 = load i32, i32* @r26, align 4
  store i32 %v0_100035cc, i32* %r26.global-to-local, align 4
  %v0_100035e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2200, align 4
  store i32 %arg3, i32* %r17.global-to-local, align 4
  %v0_10003614 = load i32, i32* @r24, align 4
  %v0_10003618 = load i32, i32* @r25, align 4
  store i32 %arg5, i32* @r28, align 4
  %v0_10003624 = load i32, i32* @r29, align 4
  store i32 %arg4, i32* @r29, align 4
  %v0_1000362c = load i32, i32* @r31, align 4
  %v0_1000363c = load i32, i32* @r27, align 4
  %v0_10003640 = load i32, i32* @r30, align 4
  store i32 268449352, i32* @lr, align 4
  %v2_10003644 = call i32 @function_1000aadc(i32 %arg2, i32 4)
  store i32 %v2_10003644, i32* %r20.global-to-local, align 4
  %v0_1000364c = load i32, i32* @r28, align 4
  %v0_10003658 = load i32, i32* @r29, align 4
  store i32 %v0_10003658, i32* %r3.global-to-local, align 4
  store i32 268449376, i32* @lr, align 4
  %v4_1000365c = inttoptr i32 %v0_1000364c to i32*
  %v5_1000365c = call i32 @function_10000300(i32 %v0_10003658, i32* %v4_1000365c, i32 2, i32 0)
  %v0_10003668 = load i32, i32* @r28, align 4
  %v5_10003670 = trunc i32 %v5_1000365c to i8
  %v0_10003678 = load i32, i32* @r29, align 4
  store i32 %v0_10003678, i32* %r3.global-to-local, align 4
  store i32 268449408, i32* @lr, align 4
  %v4_1000367c = inttoptr i32 %v0_10003668 to i32*
  %v5_1000367c = call i32 @function_10000300(i32 %v0_10003678, i32* %v4_1000367c, i32 3, i32 65535)
  %v0_10003680 = load i32, i32* @r28, align 4
  store i32 %v5_1000367c, i32* %r14.global-to-local, align 4
  %v0_10003690 = load i32, i32* @r29, align 4
  store i32 %v0_10003690, i32* %r3.global-to-local, align 4
  store i32 268449432, i32* @lr, align 4
  %v4_10003694 = inttoptr i32 %v0_10003680 to i32*
  %v5_10003694 = call i32 @function_10000300(i32 %v0_10003690, i32* %v4_10003694, i32 4, i32 64)
  %v0_10003698 = load i32, i32* @r28, align 4
  %v5_100036a4 = trunc i32 %v5_10003694 to i8
  %v0_100036ac = load i32, i32* @r29, align 4
  store i32 %v0_100036ac, i32* %r3.global-to-local, align 4
  store i32 268449460, i32* @lr, align 4
  %v4_100036b0 = inttoptr i32 %v0_10003698 to i32*
  %v5_100036b0 = call i32 @function_10000300(i32 %v0_100036ac, i32* %v4_100036b0, i32 5, i32 0)
  %v0_100036b8 = load i32, i32* @r28, align 4
  %v1_100036c4 = urem i32 %v5_100036b0, 256
  store i32 %v1_100036c4, i32* %r25.global-to-local, align 4
  %v0_100036c8 = load i32, i32* @r29, align 4
  store i32 %v0_100036c8, i32* %r3.global-to-local, align 4
  store i32 268449488, i32* @lr, align 4
  %v4_100036cc = inttoptr i32 %v0_100036b8 to i32*
  %v5_100036cc = call i32 @function_10000300(i32 %v0_100036c8, i32* %v4_100036cc, i32 6, i32 65535)
  %v0_100036d0 = load i32, i32* @r28, align 4
  store i32 %v5_100036cc, i32* %r15.global-to-local, align 4
  %v0_100036e0 = load i32, i32* @r29, align 4
  store i32 %v0_100036e0, i32* %r3.global-to-local, align 4
  store i32 268449512, i32* @lr, align 4
  %v4_100036e4 = inttoptr i32 %v0_100036d0 to i32*
  %v5_100036e4 = call i32 @function_10000300(i32 %v0_100036e0, i32* %v4_100036e4, i32 7, i32 53)
  %v0_100036ec = load i32, i32* @r28, align 4
  store i32 %v5_100036e4, i32* %r16.global-to-local, align 4
  %v0_100036fc = load i32, i32* @r29, align 4
  store i32 %v0_100036fc, i32* %r3.global-to-local, align 4
  store i32 268449540, i32* @lr, align 4
  %v4_10003700 = inttoptr i32 %v0_100036ec to i32*
  %v5_10003700 = call i32 @function_10000300(i32 %v0_100036fc, i32* %v4_10003700, i32 9, i32 65535)
  %v0_10003704 = load i32, i32* @r28, align 4
  store i32 %v5_10003700, i32* %r22.global-to-local, align 4
  %v0_10003714 = load i32, i32* @r29, align 4
  store i32 %v0_10003714, i32* %r3.global-to-local, align 4
  store i32 268449564, i32* @lr, align 4
  %v4_10003718 = inttoptr i32 %v0_10003704 to i32*
  %v5_10003718 = call i32 @function_10000300(i32 %v0_10003714, i32* %v4_10003718, i32 0, i32 12)
  %v0_10003724 = load i32, i32* @r28, align 4
  store i32 %v5_10003718, i32* %r24.global-to-local, align 4
  %v0_1000372c = load i32, i32* @r29, align 4
  store i32 %v0_1000372c, i32* %r3.global-to-local, align 4
  store i32 268449588, i32* @lr, align 4
  %v4_10003730 = inttoptr i32 %v0_10003724 to i32*
  %v5_10003730 = call i32 @function_10000238(i32 %v0_1000372c, i32* %v4_10003730, i32 8, i32 0)
  store i32 %v5_10003730, i32* @r28, align 4
  store i32 30, i32* %r3.global-to-local, align 4
  store i32 268449600, i32* @lr, align 4
  %v1_1000373c = call i32 @function_100089f4(i32 30)
  store i32 30, i32* %r3.global-to-local, align 4
  %v3_10003748 = call i32 @function_10008940(i32 30, i32* null)
  store i32 %v3_10003748, i32* %r3.global-to-local, align 4
  store i32 268449624, i32* @lr, align 4
  %v2_10003754 = call i32 @function_10009b98(i32 %v3_10003748, i32 0)
  store i32 %v2_10003754, i32* @r31, align 4
  store i32 30, i32* %r3.global-to-local, align 4
  store i32 268449636, i32* @lr, align 4
  %v1_10003760 = call i32 @function_10008968(i32 30)
  store i32 %v1_10003760, i32* %r3.global-to-local, align 4
  %v0_10003764 = load i32, i32* @r31, align 4
  %v1_10003764 = icmp slt i32 %v0_10003764, 0
  %v3_10003764 = icmp eq i32 %v0_10003764, 0
  store i1 %v1_10003764, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10003764, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10003764, label %dec_label_pc_10003834, label %dec_label_pc_1000376c

dec_label_pc_1000376c:                            ; preds = %dec_label_pc_100035c4
  %v2_1000376c = ptrtoint i32* %stack_var_-2164 to i32
  store i32 %v2_1000376c, i32* %r27.global-to-local, align 4
  store i32 %v0_10003764, i32* %r3.global-to-local, align 4
  store i32 268449664, i32* @lr, align 4
  %v3_1000377c = call i32 @function_10009c68(i32 %v0_10003764, i32 %v2_1000376c, i32 2048)
  store i32 %v3_1000377c, i32* %r30.global-to-local, align 4
  %v0_10003784 = load i32, i32* @r31, align 4
  store i32 %v0_10003784, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000378c.25 to i32), i32* @lr, align 4
  %v0_10003788 = call i32 @function_10009a30()
  store i32 31, i32* %r3.global-to-local, align 4
  store i32 268449684, i32* @lr, align 4
  %v1_10003790 = call i32 @function_100089f4(i32 31)
  store i32 31, i32* %r3.global-to-local, align 4
  %v3_1000379c = call i32 @function_10008940(i32 31, i32* null)
  %v0_100037a0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_1000376c, i32* %r3.global-to-local, align 4
  %v3_100037ac = bitcast i32* %stack_var_-2164 to i8*
  %v4_100037ac = call i32 @function_10009620(i8* %v3_100037ac, i32 %v0_100037a0, i32 %v3_1000379c)
  store i32 %v4_100037ac, i32* @r31, align 4
  store i32 31, i32* %r3.global-to-local, align 4
  store i32 268449724, i32* @lr, align 4
  %v1_100037b8 = call i32 @function_10008968(i32 31)
  store i32 %v1_100037b8, i32* %r3.global-to-local, align 4
  %v0_100037bc = load i32, i32* @r31, align 4
  %v1_100037bc = icmp slt i32 %v0_100037bc, -1
  %v3_100037bc = icmp eq i32 %v0_100037bc, -1
  store i1 %v1_100037bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100037bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100037bc, label %dec_label_pc_10003834, label %dec_label_pc_100037c4

dec_label_pc_100037c4:                            ; preds = %dec_label_pc_1000376c
  %v0_100037c4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100037c4 = icmp slt i32 %v0_100037c4, %v0_100037bc
  %v3_100037c4 = icmp sgt i32 %v0_100037c4, %v0_100037bc
  %v4_100037c4 = icmp eq i32 %v0_100037c4, %v0_100037bc
  store i1 %v2_100037c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100037c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100037c4, label %dec_label_pc_100037cc, label %dec_label_pc_10003834

dec_label_pc_100037cc:                            ; preds = %dec_label_pc_100037c4
  %v2_100037cc = sub i32 %v0_100037c4, %v0_100037bc
  store i32 %v2_100037cc, i32* %r0.global-to-local, align 4
  %v1_100037d0 = add i32 %v0_100037c4, -1
  store i32 %v1_100037d0, i32* %r3.global-to-local, align 4
  store i32 %v2_100037cc, i32* %ctr.global-to-local, align 4
  store i32 %v0_100037bc, i32* %r29.global-to-local, align 4
  %v0_100037dc = load i32, i32* %r27.global-to-local, align 4
  %v2_100037dc = add i32 %v0_100037dc, %v0_100037bc
  store i32 %v2_100037dc, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_100037e4 = ptrtoint i32* %stack_var_-2196 to i32
  store i32 %v2_100037e4, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100037e8

dec_label_pc_100037e8:                            ; preds = %dec_label_pc_1000382c, %dec_label_pc_100037cc
  %v0_10003830 = phi i32 [ %v1_10003830, %dec_label_pc_1000382c ], [ %v2_100037cc, %dec_label_pc_100037cc ]
  %v0_1000382c = phi i32 [ %v1_1000382c, %dec_label_pc_1000382c ], [ %v0_100037bc, %dec_label_pc_100037cc ]
  %v0_100037f4 = phi i32 [ %v1_100037f4, %dec_label_pc_1000382c ], [ %v2_100037dc, %dec_label_pc_100037cc ]
  %v0_100037e8 = phi i32 [ %v0_100037e85, %dec_label_pc_1000382c ], [ 0, %dec_label_pc_100037cc ]
  %v1_100037e8 = icmp slt i32 %v0_100037e8, 0
  %v3_100037e8 = icmp eq i32 %v0_100037e8, 0
  store i1 %v1_100037e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100037e8, i1* %cr7_eq.global-to-local, align 1
  %v1_100037ec = inttoptr i32 %v0_100037f4 to i8*
  %v2_100037ec = load i8, i8* %v1_100037ec, align 1
  %v3_100037ec = zext i8 %v2_100037ec to i32
  store i32 %v3_100037ec, i32* %r9.global-to-local, align 4
  %v4_100037f0 = icmp eq i32 %v1_100037d0, %v0_1000382c
  %v1_100037f4 = add i32 %v0_100037f4, 1
  store i32 %v1_100037f4, i32* %r11.global-to-local, align 4
  br i1 %v3_100037e8, label %dec_label_pc_10003804, label %dec_label_pc_10003814

dec_label_pc_10003804:                            ; preds = %dec_label_pc_100037e8
  %v1_10003804 = icmp ult i8 %v2_100037ec, 9
  %v3_10003804 = icmp eq i8 %v2_100037ec, 9
  store i1 %v1_10003804, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10003804, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_100037ec, label %dec_label_pc_10003810 [
    i8 32, label %dec_label_pc_1000382c
    i8 9, label %dec_label_pc_1000382c
  ]

dec_label_pc_10003810:                            ; preds = %dec_label_pc_10003804
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10003814

dec_label_pc_10003814:                            ; preds = %dec_label_pc_100037e8, %dec_label_pc_10003810
  %v0_100037e86 = phi i32 [ %v0_100037e8, %dec_label_pc_100037e8 ], [ 1, %dec_label_pc_10003810 ]
  %v1_10003814 = add nuw nsw i32 %v3_100037ec, 208
  %v1_10003818 = urem i32 %v1_10003814, 256
  store i32 %v1_10003818, i32* %r0.global-to-local, align 4
  %v1_1000381c = icmp ult i32 %v1_10003818, 9
  %v2_1000381c = icmp ugt i32 %v1_10003818, 9
  %v3_1000381c = icmp eq i32 %v1_10003818, 9
  store i1 %v1_1000381c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000381c, i1* %cr7_eq.global-to-local, align 1
  %v3_100037f8.not = icmp ne i8 %v2_100037ec, 46
  %brmerge.not = and i1 %v3_100037f8.not, %v2_1000381c
  %brmerge25 = or i1 %v4_100037f0, %brmerge.not
  br i1 %brmerge25, label %dec_label_pc_10003c20, label %dec_label_pc_1000382c

dec_label_pc_1000382c:                            ; preds = %dec_label_pc_10003814, %dec_label_pc_10003804, %dec_label_pc_10003804
  %v0_100037e85 = phi i32 [ 0, %dec_label_pc_10003804 ], [ 0, %dec_label_pc_10003804 ], [ %v0_100037e86, %dec_label_pc_10003814 ]
  %v1_1000382c = add i32 %v0_1000382c, 1
  store i32 %v1_1000382c, i32* %r29.global-to-local, align 4
  %v1_10003830 = add i32 %v0_10003830, -1
  store i32 %v1_10003830, i32* %ctr.global-to-local, align 4
  %v2_10003830 = icmp eq i32 %v1_10003830, 0
  br i1 %v2_10003830, label %dec_label_pc_10003834, label %dec_label_pc_100037e8

dec_label_pc_10003834:                            ; preds = %dec_label_pc_1000382c, %dec_label_pc_100037c4, %dec_label_pc_1000376c, %dec_label_pc_100035c4
  %v0_10003834 = call i32 @function_10005998()
  %v1_10003838 = urem i32 %v0_10003834, 4
  store i32 %v1_10003838, i32* %r3.global-to-local, align 4
  %v1_1000383c = icmp eq i32 %v1_10003838, 0
  %v3_1000383c = icmp eq i32 %v1_10003838, 1
  store i1 %v1_1000383c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000383c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000383c, label %dec_label_pc_10003868, label %dec_label_pc_10003844

dec_label_pc_10003844:                            ; preds = %dec_label_pc_10003834
  store i1 %v1_1000383c, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1000383c, label %dec_label_pc_10003c84, label %dec_label_pc_1000384c

dec_label_pc_1000384c:                            ; preds = %dec_label_pc_10003844
  %v2_1000384c = icmp eq i32 %v1_10003838, 3
  %v3_1000384c = icmp eq i32 %v1_10003838, 2
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000384c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000384c, label %dec_label_pc_10003c90, label %dec_label_pc_10003854

dec_label_pc_10003854:                            ; preds = %dec_label_pc_1000384c
  %v1_10003854 = icmp ne i32 %v1_10003838, 3
  store i1 %v1_10003854, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000384c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000384c, label %dec_label_pc_1000385c, label %dec_label_pc_10003870

dec_label_pc_1000385c:                            ; preds = %dec_label_pc_10003854
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10003870

dec_label_pc_10003868:                            ; preds = %dec_label_pc_10003834
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10003870

dec_label_pc_10003870:                            ; preds = %dec_label_pc_10003854, %dec_label_pc_10003c90, %dec_label_pc_10003c84, %dec_label_pc_10003c20, %dec_label_pc_1000385c, %dec_label_pc_10003868
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268449912, i32* @lr, align 4
  %v0_10003874 = call i32 @function_10009e00()
  %v0_10003878 = load i32, i32* @r28, align 4
  %v1_10003878 = icmp slt i32 %v0_10003878, 0
  %v3_10003878 = icmp eq i32 %v0_10003878, 0
  store i1 %v1_10003878, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10003878, i1* %cr7_eq.global-to-local, align 1
  %v1_1000387c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000387c = add i32 %v1_1000387c, %v0_10003874
  store i32 %v2_1000387c, i32* %r3.global-to-local, align 4
  br i1 %v3_10003878, label %dec_label_pc_10003b84, label %dec_label_pc_10003888

dec_label_pc_10003888:                            ; preds = %dec_label_pc_10003870
  store i32 %v0_10003878, i32* %r3.global-to-local, align 4
  store i32 268449936, i32* @lr, align 4
  %v1_1000388c = inttoptr i32 %v0_10003878 to i8*
  %v2_1000388c = call i32 @function_10009270(i8* %v1_1000388c)
  store i32 %v2_1000388c, i32* %r18.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268449956, i32* @lr, align 4
  %v3_100038a0 = call i32 @function_1000a780(i32 2, i32 3, i32 17)
  store i32 %v3_100038a0, i32* %r3.global-to-local, align 4
  %v1_100038a4 = icmp slt i32 %v3_100038a0, -1
  %v3_100038a4 = icmp eq i32 %v3_100038a0, -1
  store i1 %v1_100038a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100038a4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100038a0, i32* %r23.global-to-local, align 4
  br i1 %v3_100038a4, label %dec_label_pc_10003b84, label %dec_label_pc_100038b0

dec_label_pc_100038b0:                            ; preds = %dec_label_pc_10003888
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100038bc = ptrtoint i32* %stack_var_-2200 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2200, align 4
  store i32 268449996, i32* @lr, align 4
  %v4_100038c8 = call i32 @function_1000a744(i32 0, i32 3, i32 %v2_100038bc, i32 4)
  store i32 %v4_100038c8, i32* %r3.global-to-local, align 4
  %v1_100038cc = icmp slt i32 %v4_100038c8, -1
  %v3_100038cc = icmp eq i32 %v4_100038c8, -1
  store i1 %v1_100038cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100038cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100038cc, label %dec_label_pc_10003c9c, label %dec_label_pc_100038d4

dec_label_pc_100038d4:                            ; preds = %dec_label_pc_100038b0
  %v0_100038d4 = load i32, i32* %r19.global-to-local, align 4
  %v1_100038d4 = icmp slt i32 %v0_100038d4, 0
  %v3_100038d4 = icmp eq i32 %v0_100038d4, 0
  store i1 %v1_100038d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100038d4, i1* %cr7_eq.global-to-local, align 1
  %v0_100038d8 = load i32, i32* %r14.global-to-local, align 4
  %v1_100038d8 = urem i32 %v0_100038d8, 65536
  store i32 %v1_100038d8, i32* %r14.global-to-local, align 4
  %v5_100038dc = trunc i32 %v0_100038d8 to i16
  %v0_100038e0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100038e0 = urem i32 %v0_100038e0, 256
  store i32 %v1_100038e0, i32* @r30, align 4
  %v0_100038e4 = call i32 @__asm_mfcr()
  store i32 %v0_100038e4, i32* %r3.global-to-local, align 4
  %v0_100038ec = load i32, i32* %r15.global-to-local, align 4
  %v1_100038ec = urem i32 %v0_100038ec, 65536
  store i32 %v1_100038ec, i32* %r14.global-to-local, align 4
  %v0_100038f0 = load i32, i32* %r16.global-to-local, align 4
  %v1_100038f0 = urem i32 %v0_100038f0, 65536
  store i32 %v1_100038f0, i32* %r15.global-to-local, align 4
  %v0_100038f4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100038f4 = urem i32 %v0_100038f4, 65536
  store i32 %v1_100038f4, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2200, align 4
  %v0_10003904 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10003904 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10003904 = or i1 %v0_10003904, %v1_10003904
  br i1 %v2_10003904, label %dec_label_pc_10003a68.preheader, label %dec_label_pc_10003908

dec_label_pc_10003908:                            ; preds = %dec_label_pc_100038d4
  %v0_10003908 = load i32, i32* @r30, align 4
  %v1_10003908 = load i32, i32* %r18.global-to-local, align 4
  %v2_10003908 = add i32 %v1_10003908, %v0_10003908
  %v1_1000390c = icmp slt i32 %v1_10003908, 0
  %v3_1000390c = icmp eq i32 %v1_10003908, 0
  store i1 %v1_1000390c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000390c, i1* %cr4_eq.global-to-local, align 1
  %v1_10003910 = urem i32 %v2_10003908, 65536
  %v0_10003914 = load i32, i32* %r25.global-to-local, align 4
  %v3_10003914 = icmp eq i32 %v0_10003914, 0
  store i1 %v3_10003914, i1* %cr3_eq.global-to-local, align 1
  %v1_10003918 = add nuw nsw i32 %v1_10003910, 27
  store i32 %v1_10003918, i32* %r0.global-to-local, align 4
  %v1_1000391c = add nuw nsw i32 %v1_10003910, 47
  store i32 %v1_1000391c, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10003908, 47
  %v1_10003920 = urem i32 %fold, 65536
  store i32 %v1_10003920, i32* %r24.global-to-local, align 4
  %fold4 = add i32 %v2_10003908, 27
  %v1_10003924 = urem i32 %fold4, 65536
  store i32 %v1_10003924, i32* %r25.global-to-local, align 4
  %v1_10003928 = add i32 %v1_10003908, 1
  store i32 %v1_10003928, i32* %r26.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268566528, i32* %r22.global-to-local, align 4
  store i32 1, i32* %r27.global-to-local, align 4
  %v4_1000398c = sext i8 %v5_100036a4 to i32
  br label %dec_label_pc_10003938

dec_label_pc_10003938:                            ; preds = %dec_label_pc_10003c54, %dec_label_pc_10003a44, %dec_label_pc_10003908
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268450116, i32* @lr, align 4
  %v2_10003940 = call i32 @function_1000aadc(i32 600, i32 1)
  store i32 %v2_10003940, i32* %r3.global-to-local, align 4
  %v3_10003944 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_10003944, i32* %r0.global-to-local, align 4
  %v0_10003948 = load i32, i32* @r31, align 4
  %v1_10003948 = mul i32 %v0_10003948, 4
  store i32 %v1_10003948, i32* %r9.global-to-local, align 4
  %v2_1000394c = load i32, i32* %r20.global-to-local, align 4
  %v3_1000394c = add i32 %v2_1000394c, %v1_10003948
  %v4_1000394c = inttoptr i32 %v3_1000394c to i32*
  store i32 %v2_10003940, i32* %v4_1000394c, align 4
  %v0_10003950 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003950 = mul i32 %v0_10003950, 4
  store i32 %v1_10003950, i32* %r0.global-to-local, align 4
  %v0_10003954 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003954 = add i32 %v0_10003954, %v1_10003950
  %v3_10003954 = inttoptr i32 %v2_10003954 to i32*
  %v4_10003954 = load i32, i32* %v3_10003954, align 4
  store i32 %v4_10003954, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000395c = inttoptr i32 %v4_10003954 to i32*
  %v2_1000395c = load i32, i32* %v1_1000395c, align 4
  store i32 %v2_1000395c, i32* %r9.global-to-local, align 4
  %v1_10003960 = add i32 %v4_10003954, 20
  store i32 %v1_10003960, i32* %r10.global-to-local, align 4
  %v1_10003964 = add i32 %v4_10003954, 28
  store i32 %v1_10003964, i32* %r8.global-to-local, align 4
  %v1_10003968 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003968, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10003970 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10003970, i32* %r9.global-to-local, align 4
  %v1_10003974 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003974 = inttoptr i32 %v1_10003974 to i32*
  store i32 %v1_10003970, i32* %v2_10003974, align 4
  %v0_10003978 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003978 = trunc i32 %v0_10003978 to i16
  %v2_10003978 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003978 = add i32 %v2_10003978, 2
  %v4_10003978 = inttoptr i32 %v3_10003978 to i16*
  store i16 %v1_10003978, i16* %v4_10003978, align 2
  %v2_10003980 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003980 = add i32 %v2_10003980, 4
  %v4_10003980 = inttoptr i32 %v3_10003980 to i16*
  store i16 %v5_100038dc, i16* %v4_10003980, align 2
  %v2_10003988 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003988 = add i32 %v2_10003988, 1
  %v4_10003988 = inttoptr i32 %v3_10003988 to i8*
  store i8 %v5_10003670, i8* %v4_10003988, align 1
  store i32 %v4_1000398c, i32* %r0.global-to-local, align 4
  %v2_10003990 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003990 = add i32 %v2_10003990, 8
  %v4_10003990 = inttoptr i32 %v3_10003990 to i8*
  store i8 %v5_100036a4, i8* %v4_10003990, align 1
  %v0_10003994 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003994, label %dec_label_pc_100039a0, label %dec_label_pc_10003998

dec_label_pc_10003998:                            ; preds = %dec_label_pc_10003938
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000399c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000399c = add i32 %v2_1000399c, 6
  %v4_1000399c = inttoptr i32 %v3_1000399c to i16*
  store i16 16384, i16* %v4_1000399c, align 2
  br label %dec_label_pc_100039a0

dec_label_pc_100039a0:                            ; preds = %dec_label_pc_10003938, %dec_label_pc_10003998
  %v0_100039a4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100039a4 = add i32 %v0_100039a4, 41
  store i32 %v1_100039a4, i32* %r9.global-to-local, align 4
  %v3_100039a8 = add i32 %v0_100039a4, 9
  %v4_100039a8 = inttoptr i32 %v3_100039a8 to i8*
  store i8 17, i8* %v4_100039a8, align 1
  %v0_100039ac = load i32, i32* %r9.global-to-local, align 4
  %v1_100039ac = load i32, i32* @r30, align 4
  %v2_100039ac = add i32 %v1_100039ac, %v0_100039ac
  store i32 %v2_100039ac, i32* %r29.global-to-local, align 4
  %v0_100039b0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100039b0 = trunc i32 %v0_100039b0 to i16
  %v2_100039b0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100039b0 = add i32 %v2_100039b0, 4
  %v4_100039b0 = inttoptr i32 %v3_100039b0 to i16*
  store i16 %v1_100039b0, i16* %v4_100039b0, align 2
  %v0_100039b4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100039b4 = add i32 %v0_100039b4, 1
  store i32 %v1_100039b4, i32* %r31.global-to-local, align 4
  %v3_100039b8 = load i32, i32* @global_var_1001d188.12, align 4
  store i32 %v3_100039b8, i32* %r0.global-to-local, align 4
  store i32 %v1_100039b4, i32* %r3.global-to-local, align 4
  %v0_100039c0 = load i32, i32* %r15.global-to-local, align 4
  %v1_100039c0 = trunc i32 %v0_100039c0 to i16
  %v2_100039c0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100039c0 = add i32 %v2_100039c0, 2
  %v4_100039c0 = inttoptr i32 %v3_100039c0 to i16*
  store i16 %v1_100039c0, i16* %v4_100039c0, align 2
  %v0_100039c4 = load i32, i32* @r28, align 4
  %v0_100039c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100039c8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100039c8 = add i32 %v1_100039c8, 12
  %v3_100039c8 = inttoptr i32 %v2_100039c8 to i32*
  store i32 %v0_100039c8, i32* %v3_100039c8, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_100039d0 = load i32, i32* %r14.global-to-local, align 4
  %v1_100039d0 = trunc i32 %v0_100039d0 to i16
  %v2_100039d0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100039d0 = add i32 %v2_100039d0, 20
  %v4_100039d0 = inttoptr i32 %v3_100039d0 to i16*
  store i16 %v1_100039d0, i16* %v4_100039d0, align 2
  %v0_100039d4 = load i32, i32* %r26.global-to-local, align 4
  %v0_100039d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100039d8 = trunc i32 %v0_100039d8 to i16
  %v2_100039d8 = load i32, i32* %r8.global-to-local, align 4
  %v3_100039d8 = add i32 %v2_100039d8, 2
  %v4_100039d8 = inttoptr i32 %v3_100039d8 to i16*
  store i16 %v1_100039d8, i16* %v4_100039d8, align 2
  %v0_100039dc = load i32, i32* %r27.global-to-local, align 4
  %v1_100039dc = trunc i32 %v0_100039dc to i16
  %v2_100039dc = load i32, i32* %r8.global-to-local, align 4
  %v3_100039dc = add i32 %v2_100039dc, 4
  %v4_100039dc = inttoptr i32 %v3_100039dc to i16*
  store i16 %v1_100039dc, i16* %v4_100039dc, align 2
  %v0_100039e0 = load i32, i32* @r21, align 4
  %v1_100039e0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100039e0 = add i32 %v1_100039e0, 16
  %v3_100039e0 = inttoptr i32 %v2_100039e0 to i32*
  store i32 %v0_100039e0, i32* %v3_100039e0, align 4
  %v0_100039e4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100039e4 = trunc i32 %v0_100039e4 to i16
  %v2_100039e4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100039e4 = add i32 %v2_100039e4, 28
  %v4_100039e4 = inttoptr i32 %v3_100039e4 to i16*
  store i16 %v1_100039e4, i16* %v4_100039e4, align 2
  %v0_100039e8 = load i32, i32* @r30, align 4
  %v1_100039e8 = trunc i32 %v0_100039e8 to i8
  %v2_100039e8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100039e8 = add i32 %v2_100039e8, 40
  %v4_100039e8 = inttoptr i32 %v3_100039e8 to i8*
  store i8 %v1_100039e8, i8* %v4_100039e8, align 1
  store i32 268450288, i32* @lr, align 4
  %v3_100039ec = call i32 @function_100092f4(i32 %v1_100039b4, i32 %v0_100039c4, i32 %v0_100039d4)
  store i32 %v3_100039ec, i32* %r3.global-to-local, align 4
  %v0_100039f0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100039f0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100039f0 = or i1 %v0_100039f0, %v1_100039f0
  br i1 %v2_100039f0, label %dec_label_pc_10003c54, label %dec_label_pc_100039f4

dec_label_pc_100039f4:                            ; preds = %dec_label_pc_100039a0
  %v0_100039f4 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_100039f4, i32* %ctr.global-to-local, align 4
  %v0_100039f8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100039f8, i32* %r3.global-to-local, align 4
  %v0_100039fc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100039fc, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10003a1c.outer

dec_label_pc_10003a1c.outer:                      ; preds = %dec_label_pc_10003a2c, %dec_label_pc_100039f4
  %v2_10003a2c.ph = phi i32 [ %v0_10003a34, %dec_label_pc_10003a2c ], [ %v0_100039fc, %dec_label_pc_100039f4 ]
  %v0_10003a18.ph = phi i32 [ %v1_10003a40, %dec_label_pc_10003a2c ], [ %v0_100039f4, %dec_label_pc_100039f4 ]
  %v0_10003a14.ph = phi i32 [ %v1_10003a3c, %dec_label_pc_10003a2c ], [ %v0_100039f8, %dec_label_pc_100039f4 ]
  %v0_10003a10.ph = phi i32 [ %v1_10003a30, %dec_label_pc_10003a2c ], [ 0, %dec_label_pc_100039f4 ]
  %v1_10003a1c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10003a1c

dec_label_pc_10003a0c:                            ; preds = %dec_label_pc_10003a1c
  %v1_10003a0c = urem i32 %v1_10003a20, 256
  store i32 %v1_10003a0c, i32* %r8.global-to-local, align 4
  %v1_10003a10 = add i32 %v0_10003a10, 1
  store i32 %v1_10003a10, i32* %r11.global-to-local, align 4
  %v1_10003a14 = add i32 %v0_10003a14, 1
  store i32 %v1_10003a14, i32* %r3.global-to-local, align 4
  %v1_10003a18 = add i32 %v0_10003a18, -1
  store i32 %v1_10003a18, i32* %ctr.global-to-local, align 4
  %v2_10003a18 = icmp eq i32 %v1_10003a18, 0
  br i1 %v2_10003a18, label %dec_label_pc_10003a44.loopexit, label %dec_label_pc_10003a1c

dec_label_pc_10003a1c:                            ; preds = %dec_label_pc_10003a1c.outer, %dec_label_pc_10003a0c
  %v0_10003a18 = phi i32 [ %v1_10003a18, %dec_label_pc_10003a0c ], [ %v0_10003a18.ph, %dec_label_pc_10003a1c.outer ]
  %v0_10003a14 = phi i32 [ %v1_10003a14, %dec_label_pc_10003a0c ], [ %v0_10003a14.ph, %dec_label_pc_10003a1c.outer ]
  %v0_10003a2c = phi i32 [ %v1_10003a0c, %dec_label_pc_10003a0c ], [ 0, %dec_label_pc_10003a1c.outer ]
  %v0_10003a10 = phi i32 [ %v1_10003a10, %dec_label_pc_10003a0c ], [ %v0_10003a10.ph, %dec_label_pc_10003a1c.outer ]
  %v2_10003a1c = add i32 %v1_10003a1c.pre, %v0_10003a10
  %v3_10003a1c = inttoptr i32 %v2_10003a1c to i8*
  %v4_10003a1c = load i8, i8* %v3_10003a1c, align 1
  %v5_10003a1c = zext i8 %v4_10003a1c to i32
  store i32 %v5_10003a1c, i32* %r0.global-to-local, align 4
  %v1_10003a20 = add nuw nsw i32 %v0_10003a2c, 1
  store i32 %v1_10003a20, i32* %r9.global-to-local, align 4
  %v1_10003a24 = icmp ult i8 %v4_10003a1c, 46
  %v3_10003a24 = icmp eq i8 %v4_10003a1c, 46
  store i1 %v1_10003a24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10003a24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003a24, label %dec_label_pc_10003a2c, label %dec_label_pc_10003a0c

dec_label_pc_10003a2c:                            ; preds = %dec_label_pc_10003a1c
  %v1_10003a2c = trunc i32 %v0_10003a2c to i8
  %v3_10003a2c = inttoptr i32 %v2_10003a2c.ph to i8*
  store i8 %v1_10003a2c, i8* %v3_10003a2c, align 1
  %v0_10003a30 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003a30 = add i32 %v0_10003a30, 1
  store i32 %v1_10003a30, i32* %r11.global-to-local, align 4
  %v0_10003a34 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10003a34, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v1_10003a3c = add i32 %v0_10003a34, 1
  store i32 %v1_10003a3c, i32* %r3.global-to-local, align 4
  %v0_10003a40 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10003a40 = add i32 %v0_10003a40, -1
  store i32 %v1_10003a40, i32* %ctr.global-to-local, align 4
  %v2_10003a40 = icmp eq i32 %v1_10003a40, 0
  br i1 %v2_10003a40, label %dec_label_pc_10003a44, label %dec_label_pc_10003a1c.outer

dec_label_pc_10003a44.loopexit:                   ; preds = %dec_label_pc_10003a0c
  %extract.t.le = trunc i32 %v1_10003a20 to i8
  br label %dec_label_pc_10003a44

dec_label_pc_10003a44:                            ; preds = %dec_label_pc_10003a2c, %dec_label_pc_10003a44.loopexit
  %v2_10003a44 = phi i32 [ %v2_10003a2c.ph, %dec_label_pc_10003a44.loopexit ], [ %v0_10003a34, %dec_label_pc_10003a2c ]
  %v0_10003a44.off0 = phi i8 [ %extract.t.le, %dec_label_pc_10003a44.loopexit ], [ 0, %dec_label_pc_10003a2c ]
  %v3_10003a44 = inttoptr i32 %v2_10003a44 to i8*
  store i8 %v0_10003a44.off0, i8* %v3_10003a44, align 1
  %v0_10003a48 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003a48 = load i32, i32* %r18.global-to-local, align 4
  %v2_10003a48 = add i32 %v1_10003a48, %v0_10003a48
  store i32 %v2_10003a48, i32* %r9.global-to-local, align 4
  %v0_10003a4c = load i32, i32* %r27.global-to-local, align 4
  %v1_10003a4c = trunc i32 %v0_10003a4c to i16
  %v3_10003a4c = add i32 %v2_10003a48, 4
  %v4_10003a4c = inttoptr i32 %v3_10003a4c to i16*
  store i16 %v1_10003a4c, i16* %v4_10003a4c, align 2
  %v3_10003a50 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_10003a50, i32* %r11.global-to-local, align 4
  %v0_10003a54 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003a54 = trunc i32 %v0_10003a54 to i16
  %v2_10003a54 = load i32, i32* %r9.global-to-local, align 4
  %v3_10003a54 = add i32 %v2_10003a54, 2
  %v4_10003a54 = inttoptr i32 %v3_10003a54 to i16*
  store i16 %v1_10003a54, i16* %v4_10003a54, align 2
  %v0_10003a58 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003a58 = add i32 %v0_10003a58, 1
  %v1_10003a5c = load i32, i32* %r19.global-to-local, align 4
  %v2_10003a5c = icmp slt i32 %v1_10003a58, %v1_10003a5c
  %v4_10003a5c = icmp eq i32 %v1_10003a58, %v1_10003a5c
  store i1 %v2_10003a5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10003a5c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003a58, i32* %stack_var_-2200, align 4
  br i1 %v2_10003a5c, label %dec_label_pc_10003938, label %dec_label_pc_10003a68.preheader

dec_label_pc_10003a68.preheader:                  ; preds = %dec_label_pc_10003a44, %dec_label_pc_10003c54, %dec_label_pc_100038d4
  %v4_10003a88.pre-phi = sext i16 %v5_100038dc to i32
  %v2_10003a74 = urem i32 %v0_100038e4, 16
  %v1_10003a7c = mul nuw i32 %v2_10003a74, 268435456
  br label %dec_label_pc_10003a68

dec_label_pc_10003a68:                            ; preds = %dec_label_pc_10003a68.preheader, %dec_label_pc_10003b70
  store i32 0, i32* %stack_var_-2200, align 4
  store i32 %v2_10003a74, i32* %r0.global-to-local, align 4
  %v1_10003a78 = call %0 @__asm_mtcrf(i32 1, i32 %v2_10003a74)
  store i32 %v1_10003a7c, i32* %r0.global-to-local, align 4
  %v0_10003a80 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10003a80 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10003a80 = or i1 %v0_10003a80, %v1_10003a80
  br i1 %v2_10003a80, label %dec_label_pc_10003b70, label %dec_label_pc_10003a84

dec_label_pc_10003a84:                            ; preds = %dec_label_pc_10003a68
  store i32 %v4_10003a88.pre-phi, i32* %r11.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  %v0_10003a90 = load i32, i32* @r30, align 4
  %v1_10003a90 = load i32, i32* %r18.global-to-local, align 4
  %v2_10003a90 = add i32 %v1_10003a90, %v0_10003a90
  store i32 %v2_10003a90, i32* %r9.global-to-local, align 4
  %v0_10003a94 = load i32, i32* %r15.global-to-local, align 4
  %v2_10003a94 = icmp slt i32 %v0_10003a94, 65535
  %v4_10003a94 = icmp eq i32 %v0_10003a94, 65535
  store i1 %v2_10003a94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10003a94, i1* %cr7_eq.global-to-local, align 1
  store i1 false, i1* %cr2_eq.global-to-local, align 1
  %v0_10003a9c = load i32, i32* %r14.global-to-local, align 4
  %v4_10003a9c = icmp eq i32 %v0_10003a9c, 65535
  store i1 %v4_10003a9c, i1* %cr3_eq.global-to-local, align 1
  %v0_10003aa0 = load i32, i32* %r16.global-to-local, align 4
  %v2_10003aa0 = icmp slt i32 %v0_10003aa0, 65535
  %v4_10003aa0 = icmp eq i32 %v0_10003aa0, 65535
  store i1 %v2_10003aa0, i1* %cr4_lt.global-to-local, align 1
  store i1 %v4_10003aa0, i1* %cr4_eq.global-to-local, align 1
  %v0_10003aa4 = call i32 @__asm_mfcr()
  store i32 %v0_10003aa4, i32* %r3.global-to-local, align 4
  %v1_10003aa8 = mul i32 %v0_10003aa4, 268435456
  store i32 %v1_10003aa8, i32* @r24, align 4
  %v0_10003aac = load i32, i32* %r9.global-to-local, align 4
  %v1_10003aac = add i32 %v0_10003aac, 47
  store i32 %v1_10003aac, i32* @r25, align 4
  %v1_10003ab0 = add i32 %v0_10003aac, 27
  store i32 %v1_10003ab0, i32* @r27, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 0, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10003ac0

dec_label_pc_10003ac0:                            ; preds = %dec_label_pc_10003aec, %dec_label_pc_10003a84
  %v0_10003ac0 = phi i32 [ %v1_10003b60, %dec_label_pc_10003aec ], [ 0, %dec_label_pc_10003a84 ]
  %v1_10003ac0 = mul i32 %v0_10003ac0, 4
  store i32 %v1_10003ac0, i32* %r0.global-to-local, align 4
  %v0_10003ac4 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003ac4 = add i32 %v0_10003ac4, %v1_10003ac0
  %v3_10003ac4 = inttoptr i32 %v2_10003ac4 to i32*
  %v4_10003ac4 = load i32, i32* %v3_10003ac4, align 4
  store i32 %v4_10003ac4, i32* @r29, align 4
  %v1_10003ac8 = add i32 %v4_10003ac4, 20
  store i32 %v1_10003ac8, i32* @r28, align 4
  %v1_10003acc = add i32 %v4_10003ac4, 41
  store i32 %v1_10003acc, i32* @r31, align 4
  %v0_10003ad0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003ad0, label %dec_label_pc_10003be4, label %dec_label_pc_10003ad4

dec_label_pc_10003ad4:                            ; preds = %dec_label_pc_10003ac0
  %v0_10003ad4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003ad4, label %dec_label_pc_10003bf0, label %dec_label_pc_10003ad8

dec_label_pc_10003ad8:                            ; preds = %dec_label_pc_10003be4, %dec_label_pc_10003ad4
  %v0_10003ad8 = load i32, i32* @r24, align 4
  %v1_10003ad8 = mul i32 %v0_10003ad8, 16
  %v2_10003ad8 = udiv i32 %v0_10003ad8, 268435456
  %v3_10003ad8 = or i32 %v2_10003ad8, %v1_10003ad8
  store i32 %v3_10003ad8, i32* %r24.global-to-local, align 4
  %v1_10003adc = call %0 @__asm_mtcrf(i32 1, i32 %v3_10003ad8)
  %v1_10003ae0 = mul nuw i32 %v2_10003ad8, 268435456
  %v2_10003ae0 = urem i32 %v0_10003ad8, 268435456
  %v3_10003ae0 = or i32 %v1_10003ae0, %v2_10003ae0
  store i32 %v3_10003ae0, i32* @r24, align 4
  %v0_10003ae4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003ae4, label %dec_label_pc_10003c08, label %dec_label_pc_10003ae8

dec_label_pc_10003ae8:                            ; preds = %dec_label_pc_10003bf0, %dec_label_pc_10003ad8
  %v0_10003ae8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003ae8, label %dec_label_pc_10003c14, label %dec_label_pc_10003aec

dec_label_pc_10003aec:                            ; preds = %dec_label_pc_10003c08, %dec_label_pc_10003ae8, %dec_label_pc_10003c14
  %v0_10003aec = load i32, i32* @r31, align 4
  store i32 %v0_10003aec, i32* @r3, align 4
  %v0_10003af0 = load i32, i32* @r30, align 4
  store i32 %v0_10003af0, i32* @r4, align 4
  store i32 268450552, i32* @lr, align 4
  %v0_10003af4 = call i32 @function_10005a58()
  %v0_10003af8 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003af8 = load i32, i32* @r31, align 4
  %v2_10003af8 = load i32, i32* @r30, align 4
  %v3_10003af8 = trunc i32 %v0_10003af8 to i8
  %v4_10003af8 = add i32 %v2_10003af8, %v1_10003af8
  %v5_10003af8 = inttoptr i32 %v4_10003af8 to i8*
  store i8 %v3_10003af8, i8* %v5_10003af8, align 1
  %v0_10003afc = load i32, i32* @r26, align 4
  %v1_10003afc = trunc i32 %v0_10003afc to i16
  %v2_10003afc = load i32, i32* @r29, align 4
  %v3_10003afc = add i32 %v2_10003afc, 10
  %v4_10003afc = inttoptr i32 %v3_10003afc to i16*
  store i16 %v1_10003afc, i16* %v4_10003afc, align 2
  %v0_10003b04 = load i32, i32* @r29, align 4
  store i32 %v0_10003b04, i32* @r3, align 4
  %v2_10003b08 = call i32 @function_10003ca8(i32 %v0_10003b04, i32 20)
  %v3_10003b08 = trunc i32 %v2_10003b08 to i16
  %v0_10003b0c = load i32, i32* @r28, align 4
  store i32 %v0_10003b0c, i32* @r4, align 4
  %v3_10003b10 = load i32, i32* @r29, align 4
  %v4_10003b10 = add i32 %v3_10003b10, 10
  %v5_10003b10 = inttoptr i32 %v4_10003b10 to i16*
  store i16 %v3_10003b08, i16* %v5_10003b10, align 2
  %v0_10003b14 = load i32, i32* @r27, align 4
  %v0_10003b18 = load i32, i32* @r26, align 4
  %v1_10003b18 = trunc i32 %v0_10003b18 to i16
  %v2_10003b18 = load i32, i32* @r28, align 4
  %v3_10003b18 = add i32 %v2_10003b18, 6
  %v4_10003b18 = inttoptr i32 %v3_10003b18 to i16*
  store i16 %v1_10003b18, i16* %v4_10003b18, align 2
  %v0_10003b1c = load i32, i32* @r29, align 4
  store i32 %v0_10003b1c, i32* %r3.global-to-local, align 4
  %v0_10003b20 = load i32, i32* @r28, align 4
  %v1_10003b20 = add i32 %v0_10003b20, 4
  %v2_10003b20 = inttoptr i32 %v1_10003b20 to i16*
  %v3_10003b20 = load i16, i16* %v2_10003b20, align 2
  %v4_10003b20 = zext i16 %v3_10003b20 to i32
  %v4_10003b24 = call i32 @function_10003d0c(i32 %v0_10003b1c, i32 %v0_10003b0c, i32 %v4_10003b20, i32 %v0_10003b14)
  %v5_10003b24 = trunc i32 %v4_10003b24 to i16
  store i32 %v4_10003b24, i32* %r3.global-to-local, align 4
  %v3_10003b28 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_10003b28, i32* %r7.global-to-local, align 4
  %v0_10003b2c = load i32, i32* @r28, align 4
  %v1_10003b2c = add i32 %v0_10003b2c, 2
  %v2_10003b2c = inttoptr i32 %v1_10003b2c to i16*
  %v3_10003b2c = load i16, i16* %v2_10003b2c, align 2
  %v4_10003b2c = zext i16 %v3_10003b2c to i32
  store i32 %v4_10003b2c, i32* %r0.global-to-local, align 4
  %v0_10003b30 = load i32, i32* @r29, align 4
  %v1_10003b34 = mul i32 %v3_10003b28, 24
  store i32 %v1_10003b34, i32* %r7.global-to-local, align 4
  %v4_10003b38 = add i32 %v0_10003b2c, 6
  %v5_10003b38 = inttoptr i32 %v4_10003b38 to i16*
  store i16 %v5_10003b24, i16* %v5_10003b38, align 2
  %v0_10003b3c = load i32, i32* @r25, align 4
  %v0_10003b40 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003b40, i32* %r3.global-to-local, align 4
  %v0_10003b44 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003b44 = load i32, i32* %r17.global-to-local, align 4
  %v2_10003b44 = add i32 %v1_10003b44, %v0_10003b44
  store i32 %v2_10003b44, i32* %r7.global-to-local, align 4
  %v0_10003b4c = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b4c = trunc i32 %v0_10003b4c to i16
  %v3_10003b4c = add i32 %v2_10003b44, 2
  %v4_10003b4c = inttoptr i32 %v3_10003b4c to i16*
  store i16 %v1_10003b4c, i16* %v4_10003b4c, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_10003b54 = load i32, i32* @r21, align 4
  %v2_10003b54 = add i32 %v2_10003b44, 4
  %v3_10003b54 = inttoptr i32 %v2_10003b54 to i32*
  store i32 %v0_10003b54, i32* %v3_10003b54, align 4
  store i32 268450652, i32* @lr, align 4
  %v6_10003b58 = call i32 @function_1000a704(i32 %v0_10003b40, i32 %v0_10003b30, i32 %v0_10003b3c, i32 16384, i32 %v2_10003b44, i32 16)
  store i32 %v6_10003b58, i32* %r3.global-to-local, align 4
  %v3_10003b5c = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_10003b5c, i32* %r9.global-to-local, align 4
  %v1_10003b60 = add i32 %v3_10003b5c, 1
  store i32 %v1_10003b60, i32* %r0.global-to-local, align 4
  %v1_10003b64 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003b64 = icmp slt i32 %v1_10003b60, %v1_10003b64
  %v4_10003b64 = icmp eq i32 %v1_10003b60, %v1_10003b64
  store i1 %v2_10003b64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10003b64, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003b60, i32* %stack_var_-2200, align 4
  br i1 %v2_10003b64, label %dec_label_pc_10003ac0, label %dec_label_pc_10003b70

dec_label_pc_10003b70:                            ; preds = %dec_label_pc_10003aec, %dec_label_pc_10003a68
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268450680, i32* @lr, align 4
  %v0_10003b74 = call i32 @function_10009e00()
  store i32 %v0_10003b74, i32* %r3.global-to-local, align 4
  store i32 %v2_1000387c, i32* %r0.global-to-local, align 4
  %v2_10003b7c = icmp slt i32 %v2_1000387c, %v0_10003b74
  %v4_10003b7c = icmp eq i32 %v2_1000387c, %v0_10003b74
  store i1 %v2_10003b7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10003b7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10003b7c, label %dec_label_pc_10003b84, label %dec_label_pc_10003a68

dec_label_pc_10003b84:                            ; preds = %dec_label_pc_10003b70, %dec_label_pc_10003888, %dec_label_pc_10003870, %dec_label_pc_10003c9c
  store i32 %v0_100035e0, i32* %r0.global-to-local, align 4
  %v1_10003b98 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100035cc)
  store i32 %v0_10003614, i32* %r24.global-to-local, align 4
  store i32 %v0_10003618, i32* %r25.global-to-local, align 4
  store i32 %v0_100035d8, i32* %r26.global-to-local, align 4
  store i32 %v0_1000363c, i32* %r27.global-to-local, align 4
  store i32 %v0_10003624, i32* %r29.global-to-local, align 4
  store i32 %v0_10003640, i32* %r30.global-to-local, align 4
  store i32 %v0_1000362c, i32* %r31.global-to-local, align 4
  %v0_10003be0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003be0

dec_label_pc_10003be4:                            ; preds = %dec_label_pc_10003ac0
  %v0_10003be4 = call i32 @function_10005998()
  %v1_10003be4 = trunc i32 %v0_10003be4 to i16
  store i32 %v0_10003be4, i32* %r3.global-to-local, align 4
  %v3_10003be8 = load i32, i32* @r29, align 4
  %v4_10003be8 = add i32 %v3_10003be8, 4
  %v5_10003be8 = inttoptr i32 %v4_10003be8 to i16*
  store i16 %v1_10003be4, i16* %v5_10003be8, align 2
  %v0_10003bec = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003bec, label %dec_label_pc_10003bf0, label %dec_label_pc_10003ad8

dec_label_pc_10003bf0:                            ; preds = %dec_label_pc_10003be4, %dec_label_pc_10003ad4
  %v0_10003bf0 = call i32 @function_10005998()
  %v1_10003bf0 = trunc i32 %v0_10003bf0 to i16
  store i32 %v0_10003bf0, i32* %r3.global-to-local, align 4
  %v0_10003bf4 = load i32, i32* @r24, align 4
  %v1_10003bf4 = mul i32 %v0_10003bf4, 16
  %v2_10003bf4 = udiv i32 %v0_10003bf4, 268435456
  %v3_10003bf4 = or i32 %v2_10003bf4, %v1_10003bf4
  store i32 %v3_10003bf4, i32* %r24.global-to-local, align 4
  %v1_10003bf8 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10003bf4)
  %v1_10003bfc = mul nuw i32 %v2_10003bf4, 268435456
  %v2_10003bfc = urem i32 %v0_10003bf4, 268435456
  %v3_10003bfc = or i32 %v1_10003bfc, %v2_10003bfc
  store i32 %v3_10003bfc, i32* @r24, align 4
  %v3_10003c00 = load i32, i32* @r29, align 4
  %v4_10003c00 = add i32 %v3_10003c00, 20
  %v5_10003c00 = inttoptr i32 %v4_10003c00 to i16*
  store i16 %v1_10003bf0, i16* %v5_10003c00, align 2
  %v0_10003c04 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003c04, label %dec_label_pc_10003c08, label %dec_label_pc_10003ae8

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003bf0, %dec_label_pc_10003ad8
  %v0_10003c08 = call i32 @function_10005998()
  %v1_10003c08 = trunc i32 %v0_10003c08 to i16
  store i32 %v0_10003c08, i32* %r3.global-to-local, align 4
  %v3_10003c0c = load i32, i32* @r28, align 4
  %v4_10003c0c = add i32 %v3_10003c0c, 2
  %v5_10003c0c = inttoptr i32 %v4_10003c0c to i16*
  store i16 %v1_10003c08, i16* %v5_10003c0c, align 2
  %v0_10003c10 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003c10, label %dec_label_pc_10003c14, label %dec_label_pc_10003aec

dec_label_pc_10003c14:                            ; preds = %dec_label_pc_10003c08, %dec_label_pc_10003ae8
  %v0_10003c14 = call i32 @function_10005998()
  %v1_10003c14 = trunc i32 %v0_10003c14 to i16
  store i32 %v0_10003c14, i32* %r3.global-to-local, align 4
  %v3_10003c18 = load i32, i32* @r29, align 4
  %v4_10003c18 = add i32 %v3_10003c18, 28
  %v5_10003c18 = inttoptr i32 %v4_10003c18 to i16*
  store i16 %v1_10003c14, i16* %v5_10003c18, align 2
  br label %dec_label_pc_10003aec

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003814
  %v2_10003c20 = sub i32 %v0_1000382c, %v0_100037bc
  store i32 %v2_10003c20, i32* %r29.global-to-local, align 4
  store i32 %v2_100037e4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003c34.26 to i32), i32* @lr, align 4
  %v3_10003c30 = call i32 @function_100092f4(i32 %v2_100037e4, i32 %v2_100037dc, i32 %v2_10003c20)
  %v2_10003c34 = ptrtoint i32* %stack_var_-2200 to i32
  %v2_10003c38 = add i32 %v2_10003c20, %v2_10003c34
  store i32 %v2_10003c38, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10003c40 = add i32 %v2_10003c38, 4
  %v4_10003c40 = inttoptr i32 %v3_10003c40 to i8*
  store i8 0, i8* %v4_10003c40, align 1
  store i32 %v2_100037e4, i32* %r3.global-to-local, align 4
  store i32 268450892, i32* @lr, align 4
  %v1_10003c48 = call i32 @function_1000a4e4(i32 %v2_100037e4)
  store i32 %v1_10003c48, i32* %r3.global-to-local, align 4
  store i32 %v1_10003c48, i32* @r21, align 4
  br label %dec_label_pc_10003870

dec_label_pc_10003c54:                            ; preds = %dec_label_pc_100039a0
  %v0_10003c54 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10003c54, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_10003c5c = inttoptr i32 %v0_10003c54 to i8*
  store i8 0, i8* %v3_10003c5c, align 1
  %v0_10003c60 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003c60 = load i32, i32* %r18.global-to-local, align 4
  %v2_10003c60 = add i32 %v1_10003c60, %v0_10003c60
  store i32 %v2_10003c60, i32* %r9.global-to-local, align 4
  %v0_10003c64 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003c64 = trunc i32 %v0_10003c64 to i16
  %v3_10003c64 = add i32 %v2_10003c60, 4
  %v4_10003c64 = inttoptr i32 %v3_10003c64 to i16*
  store i16 %v1_10003c64, i16* %v4_10003c64, align 2
  %v3_10003c68 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_10003c68, i32* %r11.global-to-local, align 4
  %v0_10003c6c = load i32, i32* %r27.global-to-local, align 4
  %v1_10003c6c = trunc i32 %v0_10003c6c to i16
  %v2_10003c6c = load i32, i32* %r9.global-to-local, align 4
  %v3_10003c6c = add i32 %v2_10003c6c, 2
  %v4_10003c6c = inttoptr i32 %v3_10003c6c to i16*
  store i16 %v1_10003c6c, i16* %v4_10003c6c, align 2
  %v0_10003c70 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003c70 = add i32 %v0_10003c70, 1
  %v1_10003c74 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003c74 = icmp slt i32 %v1_10003c70, %v1_10003c74
  %v4_10003c74 = icmp eq i32 %v1_10003c70, %v1_10003c74
  store i1 %v2_10003c74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10003c74, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003c70, i32* %stack_var_-2200, align 4
  br i1 %v2_10003c74, label %dec_label_pc_10003938, label %dec_label_pc_10003a68.preheader

dec_label_pc_10003c84:                            ; preds = %dec_label_pc_10003844
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10003870

dec_label_pc_10003c90:                            ; preds = %dec_label_pc_1000384c
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10003870

dec_label_pc_10003c9c:                            ; preds = %dec_label_pc_100038b0
  %v0_10003c9c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003c9c, i32* %r3.global-to-local, align 4
  store i32 268450980, i32* @lr, align 4
  %v0_10003ca0 = call i32 @function_10009a30()
  store i32 %v0_10003ca0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003b84

; uselistorder directives
  uselistorder i32 %v1_10003c70, { 0, 2, 1 }
  uselistorder i32 %v0_10003c14, { 1, 0 }
  uselistorder i32 %v0_10003c08, { 1, 0 }
  uselistorder i32 %v0_10003bf4, { 2, 1, 0 }
  uselistorder i32 %v0_10003bf0, { 1, 0 }
  uselistorder i32 %v0_10003be4, { 1, 0 }
  uselistorder i32 %v0_10003b74, { 1, 0, 2 }
  uselistorder i32 %v1_10003b60, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10003b24, { 1, 0 }
  uselistorder i32 %v0_10003ad8, { 2, 1, 0 }
  uselistorder i32 %v1_10003ac0, { 1, 0 }
  uselistorder i32 %v2_10003a74, { 2, 1, 0 }
  uselistorder i32 %v1_10003a58, { 0, 2, 1 }
  uselistorder i32 %v1_10003a40, { 2, 1, 0 }
  uselistorder i32 %v1_10003a3c, { 1, 0 }
  uselistorder i32 %v0_10003a34, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10003a30, { 1, 0 }
  uselistorder i32 %v1_10003a20, { 1, 2, 0 }
  uselistorder i32 %v1_10003a18, { 0, 2, 1 }
  uselistorder i32 %v1_10003a0c, { 1, 0 }
  uselistorder i32 %v1_10003950, { 1, 0 }
  uselistorder i32 %v1_10003948, { 1, 0 }
  uselistorder i32 %v2_10003908, { 1, 2, 0 }
  uselistorder i32 %v1_10003908, { 1, 3, 2, 0 }
  uselistorder i32 %v0_100038d8, { 1, 0 }
  uselistorder i32 %v4_100038c8, { 1, 0, 2 }
  uselistorder i32 %v3_100038a0, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1000387c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10003878, { 1, 0, 2, 3 }
  uselistorder i1 %v2_1000384c, { 1, 0 }
  uselistorder i1 %v1_1000383c, { 1, 0, 2 }
  uselistorder i32 %v1_10003838, { 5, 3, 4, 1, 2, 0 }
  uselistorder i32 %v1_10003830, { 2, 1, 0 }
  uselistorder i32 %v1_1000382c, { 1, 0 }
  uselistorder i32 %v1_10003818, { 1, 2, 3, 0 }
  uselistorder i32 %v1_100037f4, { 1, 0 }
  uselistorder i32 %v0_100037e8, { 2, 1, 0 }
  uselistorder i32 %v2_100037e4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_100037c4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_100037bc, { 1, 2, 0, 3, 4, 7, 6, 5, 8, 9 }
  uselistorder i32 %v0_10003764, { 1, 0, 2, 3 }
  uselistorder i8 %v5_100036a4, { 1, 0 }
  uselistorder i32* %stack_var_-2200, { 0, 1, 12, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 29, 12, 13, 14, 15, 16, 17, 0, 18, 20, 19, 21, 22, 23, 24, 25, 2, 26, 27, 28, 31, 30, 32, 33, 34, 35, 36, 37, 38, 40, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 1 }
  uselistorder i32* %r29.global-to-local, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r27.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 15, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 3, 1, 2, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 (i32)* @function_1000a4e4, { 1, 0 }
  uselistorder i32 47, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_10000300, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79 }
  uselistorder label %dec_label_pc_10003b84, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10003aec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003a68, { 1, 0 }
  uselistorder label %dec_label_pc_10003a68.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003a44, { 1, 0 }
  uselistorder label %dec_label_pc_10003a1c, { 1, 0 }
  uselistorder label %dec_label_pc_100039a0, { 1, 0 }
  uselistorder label %dec_label_pc_10003870, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_10003814, { 1, 0 }
}

define i32 @function_10003ca8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10003ca8:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10003cdc, label %dec_label_pc_10003cb4

dec_label_pc_10003cb4:                            ; preds = %dec_label_pc_10003ca8
  %v1_10003cb4 = add i32 %arg1, -2
  %v1_10003cb8 = udiv i32 %v1_10003cb4, 2
  %v1_10003cbc = add nuw i32 %v1_10003cb8, 1
  %v0_10003cc8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10003cc8

dec_label_pc_10003cc8:                            ; preds = %dec_label_pc_10003cc8, %dec_label_pc_10003cb4
  %v0_10003cd8 = phi i32 [ %v1_10003cd8, %dec_label_pc_10003cc8 ], [ %v1_10003cbc, %dec_label_pc_10003cb4 ]
  %v0_10003cd4 = phi i32 [ %v2_10003cd4, %dec_label_pc_10003cc8 ], [ 0, %dec_label_pc_10003cb4 ]
  %v0_10003cd0 = phi i32 [ %v1_10003cd0, %dec_label_pc_10003cc8 ], [ %v0_10003cc8.pre, %dec_label_pc_10003cb4 ]
  %v1_10003cc8 = inttoptr i32 %v0_10003cd0 to i16*
  %v2_10003cc8 = load i16, i16* %v1_10003cc8, align 2
  %v3_10003cc8 = zext i16 %v2_10003cc8 to i32
  %v1_10003cd0 = add i32 %v0_10003cd0, 2
  store i32 %v1_10003cd0, i32* @r3, align 4
  %v2_10003cd4 = add i32 %v3_10003cc8, %v0_10003cd4
  %v1_10003cd8 = add i32 %v0_10003cd8, -1
  %v2_10003cd8 = icmp eq i32 %v1_10003cd8, 0
  br i1 %v2_10003cd8, label %dec_label_pc_10003cdc.loopexit, label %dec_label_pc_10003cc8

dec_label_pc_10003cdc.loopexit:                   ; preds = %dec_label_pc_10003cc8
  %tmp11 = mul i32 %v1_10003cb8, -2
  %tmp10 = add i32 %v1_10003cb4, %tmp11
  br label %dec_label_pc_10003cdc

dec_label_pc_10003cdc:                            ; preds = %dec_label_pc_10003cdc.loopexit, %dec_label_pc_10003ca8
  %v0_10003ce8 = phi i32 [ 0, %dec_label_pc_10003ca8 ], [ %v2_10003cd4, %dec_label_pc_10003cdc.loopexit ]
  %v0_10003cdc = phi i32 [ %arg1, %dec_label_pc_10003ca8 ], [ %tmp10, %dec_label_pc_10003cdc.loopexit ]
  %v3_10003cdc = icmp eq i32 %v0_10003cdc, 1
  br i1 %v3_10003cdc, label %dec_label_pc_10003ce4, label %dec_label_pc_10003cec

dec_label_pc_10003ce4:                            ; preds = %dec_label_pc_10003cdc
  %v0_10003ce4 = load i32, i32* @r3, align 4
  %v1_10003ce4 = add i32 %v0_10003ce4, 1
  %v2_10003ce4 = inttoptr i32 %v1_10003ce4 to i8*
  %v3_10003ce4 = load i8, i8* %v2_10003ce4, align 1
  %v4_10003ce4 = zext i8 %v3_10003ce4 to i32
  %v2_10003ce8 = add i32 %v4_10003ce4, %v0_10003ce8
  br label %dec_label_pc_10003cec

dec_label_pc_10003cec:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003ce4
  %v0_10003cec = phi i32 [ %v0_10003ce8, %dec_label_pc_10003cdc ], [ %v2_10003ce8, %dec_label_pc_10003ce4 ]
  %v1_10003cec = urem i32 %v0_10003cec, 65536
  %v1_10003cf0 = udiv i32 %v0_10003cec, 65536
  %v2_10003cf4 = add nuw nsw i32 %v1_10003cec, %v1_10003cf0
  %v1_10003cf8 = udiv i32 %v2_10003cf4, 65536
  %v2_10003cfc = add nuw nsw i32 %v1_10003cf8, %v2_10003cf4
  %v1_10003d00 = urem i32 %v2_10003cfc, 65536
  %v1_10003d04 = xor i32 %v1_10003d00, 65535
  ret i32 %v1_10003d04

; uselistorder directives
  uselistorder i32 %v2_10003cf4, { 1, 0 }
  uselistorder i32 %v0_10003ce8, { 1, 0 }
  uselistorder i32 %v1_10003cd8, { 1, 0 }
  uselistorder i32 %v1_10003cd0, { 1, 0 }
  uselistorder label %dec_label_pc_10003cec, { 1, 0 }
}

define i32 @function_10003d0c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003d0c:
  %r0.global-to-local = alloca i32, align 4
  %v1_10003d10 = add i32 %arg1, 12
  %v2_10003d10 = inttoptr i32 %v1_10003d10 to i32*
  %v3_10003d10 = load i32, i32* %v2_10003d10, align 4
  %v1_10003d14 = add i32 %arg1, 16
  %v2_10003d14 = inttoptr i32 %v1_10003d14 to i32*
  %v3_10003d14 = load i32, i32* %v2_10003d14, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10003d50, label %dec_label_pc_10003d1c

dec_label_pc_10003d1c:                            ; preds = %dec_label_pc_10003d0c
  %v1_10003d1c = add i32 %arg3, -2
  %v1_10003d24 = icmp slt i32 %v1_10003d1c, 0
  %v1_10003d28 = udiv i32 %v1_10003d1c, 2
  %v1_10003d2c = add nuw i32 %v1_10003d28, 1
  br i1 %v1_10003d24, label %dec_label_pc_10003db8, label %dec_label_pc_10003d38.preheader

dec_label_pc_10003d38.preheader:                  ; preds = %dec_label_pc_10003db8, %dec_label_pc_10003d1c
  %v0_10003d4c4 = phi i32 [ 1, %dec_label_pc_10003db8 ], [ %v1_10003d2c, %dec_label_pc_10003d1c ]
  %v0_10003d38.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10003d38

dec_label_pc_10003d38:                            ; preds = %dec_label_pc_10003d38.preheader, %dec_label_pc_10003d38
  %v0_10003d4c = phi i32 [ %v0_10003d4c4, %dec_label_pc_10003d38.preheader ], [ %v1_10003d4c, %dec_label_pc_10003d38 ]
  %v0_10003d48 = phi i32 [ 0, %dec_label_pc_10003d38.preheader ], [ %v2_10003d48, %dec_label_pc_10003d38 ]
  %v0_10003d40 = phi i32 [ %v0_10003d38.pre, %dec_label_pc_10003d38.preheader ], [ %v1_10003d40, %dec_label_pc_10003d38 ]
  %v1_10003d38 = inttoptr i32 %v0_10003d40 to i16*
  %v2_10003d38 = load i16, i16* %v1_10003d38, align 2
  %v3_10003d38 = zext i16 %v2_10003d38 to i32
  store i32 %v3_10003d38, i32* %r0.global-to-local, align 4
  %v1_10003d40 = add i32 %v0_10003d40, 2
  %v2_10003d48 = add i32 %v3_10003d38, %v0_10003d48
  %v1_10003d4c = add i32 %v0_10003d4c, -1
  %v2_10003d4c = icmp eq i32 %v1_10003d4c, 0
  br i1 %v2_10003d4c, label %dec_label_pc_10003d50.loopexit, label %dec_label_pc_10003d38

dec_label_pc_10003d50.loopexit:                   ; preds = %dec_label_pc_10003d38
  %tmp14 = mul i32 %v0_10003d4c4, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10003d44 = icmp eq i32 %tmp13, 1
  br i1 %v3_10003d44, label %dec_label_pc_10003da4, label %dec_label_pc_10003d54

dec_label_pc_10003d50:                            ; preds = %dec_label_pc_10003d0c
  %v3_10003d0c = icmp eq i32 %arg3, 1
  br i1 %v3_10003d0c, label %dec_label_pc_10003d50.dec_label_pc_10003da4_crit_edge, label %dec_label_pc_10003d54

dec_label_pc_10003d50.dec_label_pc_10003da4_crit_edge: ; preds = %dec_label_pc_10003d50
  %v0_10003da4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10003da4

dec_label_pc_10003d54:                            ; preds = %dec_label_pc_10003d50.loopexit, %dec_label_pc_10003d50, %dec_label_pc_10003da4
  %v0_10003d6c = phi i32 [ 0, %dec_label_pc_10003d50 ], [ %v2_10003da8, %dec_label_pc_10003da4 ], [ %v2_10003d48, %dec_label_pc_10003d50.loopexit ]
  %v1_10003d54 = urem i32 %v3_10003d10, 65536
  %v1_10003d58 = udiv i32 %v3_10003d10, 65536
  %v2_10003d5c = add nuw nsw i32 %v1_10003d54, %v1_10003d58
  store i32 %v2_10003d5c, i32* %r0.global-to-local, align 4
  %v1_10003d60 = urem i32 %v3_10003d14, 65536
  %v1_10003d64 = add i32 %arg1, 9
  %v2_10003d64 = inttoptr i32 %v1_10003d64 to i8*
  %v3_10003d64 = load i8, i8* %v2_10003d64, align 1
  %v4_10003d64 = zext i8 %v3_10003d64 to i32
  %v1_10003d68 = udiv i32 %v3_10003d14, 65536
  %v2_10003d6c = add i32 %v0_10003d6c, %v1_10003d68
  %v2_10003d74 = add i32 %v2_10003d6c, %v4_10003d64
  %v2_10003d70 = add i32 %v2_10003d5c, %arg2
  %v2_10003d78 = add i32 %v2_10003d70, %v1_10003d60
  %v2_10003d7c = add i32 %v2_10003d78, %v2_10003d74
  store i32 %v2_10003d7c, i32* %r0.global-to-local, align 4
  %v1_10003d80 = call i32 @__asm_rlwinm.(i32 %v2_10003d7c, i32 16, i32 16, i32 31)
  %v4_10003d80 = icmp eq i32 %v1_10003d80, 0
  br i1 %v4_10003d80, label %dec_label_pc_10003d98, label %dec_label_pc_10003d88

dec_label_pc_10003d88:                            ; preds = %dec_label_pc_10003d54, %dec_label_pc_10003d88
  %v1_10003d8c = phi i32 [ %v1_10003d90, %dec_label_pc_10003d88 ], [ %v1_10003d80, %dec_label_pc_10003d54 ]
  %v0_10003d88 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003d88 = urem i32 %v0_10003d88, 65536
  %v2_10003d8c = add i32 %v1_10003d88, %v1_10003d8c
  store i32 %v2_10003d8c, i32* %r0.global-to-local, align 4
  %v1_10003d90 = call i32 @__asm_rlwinm.(i32 %v2_10003d8c, i32 16, i32 16, i32 31)
  %v4_10003d90 = icmp eq i32 %v1_10003d90, 0
  br i1 %v4_10003d90, label %dec_label_pc_10003d98, label %dec_label_pc_10003d88

dec_label_pc_10003d98:                            ; preds = %dec_label_pc_10003d88, %dec_label_pc_10003d54
  %v0_10003d98 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003d98 = urem i32 %v0_10003d98, 65536
  %v1_10003d9c = xor i32 %v1_10003d98, 65535
  ret i32 %v1_10003d9c

dec_label_pc_10003da4:                            ; preds = %dec_label_pc_10003d50.dec_label_pc_10003da4_crit_edge, %dec_label_pc_10003d50.loopexit
  %v0_10003da4 = phi i32 [ %v1_10003d40, %dec_label_pc_10003d50.loopexit ], [ %v0_10003da4.pre, %dec_label_pc_10003d50.dec_label_pc_10003da4_crit_edge ]
  %v0_10003da810 = phi i32 [ %v2_10003d48, %dec_label_pc_10003d50.loopexit ], [ 0, %dec_label_pc_10003d50.dec_label_pc_10003da4_crit_edge ]
  %v1_10003da4 = inttoptr i32 %v0_10003da4 to i8*
  %v2_10003da4 = load i8, i8* %v1_10003da4, align 1
  %v3_10003da4 = zext i8 %v2_10003da4 to i32
  store i32 %v3_10003da4, i32* %r0.global-to-local, align 4
  %v2_10003da8 = add i32 %v3_10003da4, %v0_10003da810
  br label %dec_label_pc_10003d54

dec_label_pc_10003db8:                            ; preds = %dec_label_pc_10003d1c
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10003d38.preheader

; uselistorder directives
  uselistorder i32 %v1_10003d90, { 1, 0 }
  uselistorder i32 %v1_10003d4c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003d88, { 1, 0 }
  uselistorder label %dec_label_pc_10003d54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003d38, { 1, 0 }
}

define i32 @function_10003dc4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10003dc4:
  %v3_10003dd8 = load i32, i32* @global_var_1001d194.27, align 4
  store i32 268451296, i32* @lr, align 4
  %v2_10003ddc = call i32 @function_10009b50(i32 %v3_10003dd8, i32 9)
  ret i32 %v2_10003ddc
}

define i32 @function_10003df0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10003df0:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_10003e00 = load i32, i32* @r27, align 4
  %v2_10003e04 = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_10003e04, i32* @r27, align 4
  %v2_10003e0c = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10003e10 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10003e20 = load i32, i32* @r25, align 4
  %v2_10003e24 = ptrtoint i8* %stack_var_-8776 to i32
  %v0_10003e28 = load i32, i32* @r30, align 4
  %v2_10003e2c = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10003e2c, i32* @r30, align 4
  %v0_10003e30 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_10003e38 = load i32, i32* @r23, align 4
  %v0_10003e40 = load i32, i32* @r28, align 4
  store i32 268451400, i32* @lr, align 4
  %v3_10003e44 = call i32 @function_1000a234(i32 %v2_10003e04, i32 0, i32 4096)
  store i32 268451416, i32* @lr, align 4
  %v3_10003e54 = call i32 @function_1000a234(i32 %v2_10003e0c, i32 0, i32 4096)
  store i32 268451432, i32* @lr, align 4
  %v3_10003e64 = call i32 @function_1000a234(i32 %v2_10003e2c, i32 0, i32 513)
  %v0_10003e70 = load i32, i32* @r29, align 4
  %v0_10003e74 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003e74, i32* %stack_var_-8792, align 4
  %v3_10003e84 = trunc i32 %v0_10003e70 to i8
  %v4_10003e84 = call i32 @function_1000974c(i8 %v3_10003e84, i32 16, i32 %v2_10003e24)
  store i32 268451472, i32* @lr, align 4
  %v2_10003e8c = call i32 @function_10009270(i8* nonnull %stack_var_-8776)
  %v3_10003e90 = icmp eq i32 %v2_10003e8c, 2
  br i1 %v3_10003e90, label %dec_label_pc_100043c4, label %dec_label_pc_10003e98

dec_label_pc_10003e98:                            ; preds = %dec_label_pc_10003df0, %dec_label_pc_100043c4
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003ea4.28 to i32), i32* @lr, align 4
  %v1_10003ea0 = call i32 @function_100089f4(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10003eac.29 to i32), i32* @lr, align 4
  %v1_10003ea8 = call i32 @function_100089f4(i32 7)
  store i32 268451508, i32* @lr, align 4
  %v1_10003eb0 = call i32 @function_100089f4(i32 8)
  %v3_10003ebc = call i32 @function_10008940(i32 6, i32* null)
  store i32 268451532, i32* @lr, align 4
  %v2_10003ec8 = call i32 @function_10009b98(i32 %v3_10003ebc, i32 0)
  %v3_10003ecc = icmp eq i32 %v2_10003ec8, -1
  store i32 %v2_10003ec8, i32* @r28, align 4
  br i1 %v3_10003ecc, label %dec_label_pc_10004318, label %dec_label_pc_10003ed8

dec_label_pc_10003ed8:                            ; preds = %dec_label_pc_10003e98
  %v2_10003ed8 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_10003ed8, i32* %r26.global-to-local, align 4
  store i32 268451564, i32* @lr, align 4
  %v4_10003ee899 = call i32 @function_100094d0(i8* nonnull %stack_var_-8760, i32 512, i32 %v2_10003ec8)
  %v3_10003eec101 = icmp eq i32 %v4_10003ee899, 0
  br i1 %v3_10003eec101, label %dec_label_pc_10004098.loopexit, label %dec_label_pc_10003ef4

dec_label_pc_10003ef4:                            ; preds = %dec_label_pc_10003ed8, %dec_label_pc_10003edc.backedge
  %v3_10003ef4 = load i8, i8* %stack_var_-8760, align 1
  %v3_10003ef8 = icmp eq i8 %v3_10003ef4, 0
  br i1 %v3_10003ef8, label %dec_label_pc_10003edc.backedge, label %dec_label_pc_10003f00

dec_label_pc_10003edc.backedge:                   ; preds = %dec_label_pc_10003f14, %dec_label_pc_10003ef4, %dec_label_pc_10003f84, %dec_label_pc_1000401c, %dec_label_pc_1000406c
  %v0_10003ee4.pre = load i32, i32* @r28, align 4
  store i32 268451564, i32* @lr, align 4
  %v4_10003ee8 = call i32 @function_100094d0(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_10003ee4.pre)
  %v3_10003eec = icmp eq i32 %v4_10003ee8, 0
  br i1 %v3_10003eec, label %dec_label_pc_10004098.loopexit, label %dec_label_pc_10003ef4

dec_label_pc_10003f00:                            ; preds = %dec_label_pc_10003ef4
  %v3_10003f00 = icmp eq i8 %v3_10003ef4, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_10003f00, label %dec_label_pc_10003f34, label %dec_label_pc_10003f10

dec_label_pc_10003f10:                            ; preds = %dec_label_pc_10003f00
  %v1_10003f18.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10003f14

dec_label_pc_10003f14:                            ; preds = %dec_label_pc_10003f28, %dec_label_pc_10003f10
  %v0_10003f14 = phi i32 [ %v1_10003f14, %dec_label_pc_10003f28 ], [ 0, %dec_label_pc_10003f10 ]
  %v1_10003f14 = add i32 %v0_10003f14, 1
  %v2_10003f18 = add i32 %v1_10003f14, %v1_10003f18.pre
  %v3_10003f18 = inttoptr i32 %v2_10003f18 to i8*
  %v4_10003f18 = load i8, i8* %v3_10003f18, align 1
  %v3_10003f1c = icmp eq i8 %v4_10003f18, 0
  br i1 %v3_10003f1c, label %dec_label_pc_10003edc.backedge, label %dec_label_pc_10003f28

dec_label_pc_10003f28:                            ; preds = %dec_label_pc_10003f14
  %v3_10003f20 = icmp eq i8 %v4_10003f18, 58
  br i1 %v3_10003f20, label %dec_label_pc_10003f2c, label %dec_label_pc_10003f14

dec_label_pc_10003f2c:                            ; preds = %dec_label_pc_10003f28
  %v1_10003f2c = add i32 %v0_10003f14, 4
  store i32 %v1_10003f2c, i32* @r31, align 4
  %v1_10003f30 = add i32 %v0_10003f14, 3
  br label %dec_label_pc_10003f34

dec_label_pc_10003f34:                            ; preds = %dec_label_pc_10003f00, %dec_label_pc_10003f2c
  %v1_10003f8c = phi i32 [ 2, %dec_label_pc_10003f00 ], [ %v1_10003f30, %dec_label_pc_10003f2c ]
  %v0_10003f34 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003f34 = add i32 %v0_10003f34, %v1_10003f8c
  %v1_10003f3c = add i32 %v2_10003f34, 32
  %v2_10003f3c = inttoptr i32 %v1_10003f3c to i8*
  %v3_10003f3c = load i8, i8* %v2_10003f3c, align 1
  %v3_10003f40 = icmp eq i8 %v3_10003f3c, 0
  br i1 %v3_10003f40, label %dec_label_pc_10003f84, label %dec_label_pc_10003f48

dec_label_pc_10003f48:                            ; preds = %dec_label_pc_10003f34
  %v3_10003f48 = icmp eq i8 %v3_10003f3c, 32
  %v1_10003f4c = add i32 %v1_10003f8c, 1
  store i32 %v1_10003f4c, i32* @r31, align 4
  br i1 %v3_10003f48, label %dec_label_pc_10003f84, label %dec_label_pc_10003f54

dec_label_pc_10003f54:                            ; preds = %dec_label_pc_10003f48
  %v0_10003f5c = load i32, i32* @r30, align 4
  %v2_10003f5c = add i32 %v0_10003f5c, %v1_10003f4c
  br label %dec_label_pc_10003f68

dec_label_pc_10003f68:                            ; preds = %dec_label_pc_10003f68, %dec_label_pc_10003f54
  %v0_10003f6c = phi i32 [ %v1_10003f6c, %dec_label_pc_10003f68 ], [ %v1_10003f8c, %dec_label_pc_10003f54 ]
  %v0_10003f70 = phi i32 [ %v1_10003f70, %dec_label_pc_10003f68 ], [ %v2_10003f5c, %dec_label_pc_10003f54 ]
  %v1_10003f68 = inttoptr i32 %v0_10003f70 to i8*
  %v2_10003f68 = load i8, i8* %v1_10003f68, align 1
  %v1_10003f6c = add i32 %v0_10003f6c, 1
  %v1_10003f70 = add i32 %v0_10003f70, 1
  %tmp60 = or i8 %v2_10003f68, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_10003f80, label %dec_label_pc_10003f68

dec_label_pc_10003f80:                            ; preds = %dec_label_pc_10003f68
  %v1_10003f80 = add i32 %v0_10003f6c, 2
  store i32 %v1_10003f80, i32* @r31, align 4
  br label %dec_label_pc_10003f84

dec_label_pc_10003f84:                            ; preds = %dec_label_pc_10003f48, %dec_label_pc_10003f34, %dec_label_pc_10003f80
  %v1_10003f84 = phi i32 [ %v1_10003f8c, %dec_label_pc_10003f48 ], [ %v1_10003f8c, %dec_label_pc_10003f34 ], [ %v1_10003f6c, %dec_label_pc_10003f80 ]
  %v2_10003f84 = add i32 %v1_10003f84, %v0_10003f34
  %v0_10003f8c = load i32, i32* @r30, align 4
  %v2_10003f8c = add i32 %v0_10003f8c, %v1_10003f8c
  store i32 %v2_10003f8c, i32* @r29, align 4
  %v3_10003f90 = add i32 %v2_10003f84, 32
  %v4_10003f90 = inttoptr i32 %v3_10003f90 to i8*
  store i8 0, i8* %v4_10003f90, align 1
  %v0_10003f94 = load i32, i32* @r29, align 4
  store i32 268451740, i32* @lr, align 4
  %v1_10003f98 = inttoptr i32 %v0_10003f94 to i8*
  %v2_10003f98 = call i32 @function_10009270(i8* %v1_10003f98)
  %v0_10003fa4 = load i32, i32* @r29, align 4
  %v3_10003fa8 = inttoptr i32 %v0_10003fa4 to i8*
  %v4_10003fa8 = call i32 @function_10009620(i8* %v3_10003fa8, i32 %v2_10003f98, i32 %v2_10003e24)
  %v3_10003fb0 = icmp eq i32 %v4_10003fa8, -1
  br i1 %v3_10003fb0, label %dec_label_pc_10003edc.backedge, label %dec_label_pc_10003fbc.preheader

dec_label_pc_10003fbc.preheader:                  ; preds = %dec_label_pc_10003f84
  %v0_10003fbc.pre = load i32, i32* @r31, align 4
  %v0_10003fc4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10003fbc.outer

dec_label_pc_10003fbc.outer:                      ; preds = %dec_label_pc_10004368, %dec_label_pc_10003fbc.preheader
  %v0_10003fd828.ph = phi i32 [ %v1_10004350, %dec_label_pc_10004368 ], [ 0, %dec_label_pc_10003fbc.preheader ]
  %v0_10003fbc.ph = phi i32 [ %v1_1000407476, %dec_label_pc_10004368 ], [ %v0_10003fbc.pre, %dec_label_pc_10003fbc.preheader ]
  %v0_1000401c.ph = phi i32 [ 1, %dec_label_pc_10004368 ], [ 0, %dec_label_pc_10003fbc.preheader ]
  br label %dec_label_pc_10003fbc

dec_label_pc_10003fbc:                            ; preds = %dec_label_pc_10003fbc.outer, %dec_label_pc_10004358
  %v0_10003fd828 = phi i32 [ %v1_10004350, %dec_label_pc_10004358 ], [ %v0_10003fd828.ph, %dec_label_pc_10003fbc.outer ]
  %v0_10003fbc = phi i32 [ %v1_1000407476, %dec_label_pc_10004358 ], [ %v0_10003fbc.ph, %dec_label_pc_10003fbc.outer ]
  %v1_10003fbc = add i32 %v0_10003fbc, 1
  %v2_10003fc4 = add i32 %v1_10003fbc, %v0_10003fc4.pre
  %v1_10003ff068 = inttoptr i32 %v2_10003fc4 to i8*
  %v2_10003ff069 = load i8, i8* %v1_10003ff068, align 1
  store i32 %v1_10003fbc, i32* @r31, align 4
  %v3_10003ff871 = icmp eq i8 %v2_10003ff069, 0
  br i1 %v3_10003ff871, label %dec_label_pc_1000401c, label %dec_label_pc_10004008

dec_label_pc_10003fcc:                            ; preds = %dec_label_pc_10004008
  %v3_10003ffc79 = icmp eq i8 %v3_10003ffc79.in, 9
  br i1 %v3_10003ffc79, label %dec_label_pc_1000400c, label %dec_label_pc_10003fd8

dec_label_pc_10003fd8:                            ; preds = %dec_label_pc_10003fcc
  %v3_10003fcc = icmp eq i32 %v0_10003fcc75, 1
  br i1 %v3_10003fcc, label %dec_label_pc_10004350, label %dec_label_pc_10003fe0

dec_label_pc_10003fe0:                            ; preds = %dec_label_pc_10003fd8, %dec_label_pc_10004350
  %v0_10003fe0 = phi i32 [ %v1_10004350, %dec_label_pc_10004350 ], [ %v0_1000400c74, %dec_label_pc_10003fd8 ]
  %v2_10003fe0 = icmp sgt i32 %v0_10003fe0, 6
  br i1 %v2_10003fe0, label %dec_label_pc_1000401c, label %dec_label_pc_10003fec

dec_label_pc_10003fec:                            ; preds = %dec_label_pc_1000400c, %dec_label_pc_10003fe0
  %v0_10003fd827 = phi i32 [ %v0_1000400c74, %dec_label_pc_1000400c ], [ %v0_10003fe0, %dec_label_pc_10003fe0 ]
  %v0_10003fcc25 = phi i32 [ 1, %dec_label_pc_1000400c ], [ 0, %dec_label_pc_10003fe0 ]
  %v0_10003ff022 = add i32 %v0_1000401478, 1
  %v1_10003fec = add i32 %v1_1000407476, 1
  %v1_10003ff0 = inttoptr i32 %v0_10003ff022 to i8*
  %v2_10003ff0 = load i8, i8* %v1_10003ff0, align 1
  store i32 %v1_10003fec, i32* @r31, align 4
  %v3_10003ff8 = icmp eq i8 %v2_10003ff0, 0
  br i1 %v3_10003ff8, label %dec_label_pc_1000401c, label %dec_label_pc_10004008

dec_label_pc_10004008:                            ; preds = %dec_label_pc_10003fbc, %dec_label_pc_10003fec
  %v3_10003ffc79.in = phi i8 [ %v2_10003ff0, %dec_label_pc_10003fec ], [ %v2_10003ff069, %dec_label_pc_10003fbc ]
  %v3_1000400080.in = phi i8 [ %v2_10003ff0, %dec_label_pc_10003fec ], [ %v2_10003ff069, %dec_label_pc_10003fbc ]
  %v0_1000401478 = phi i32 [ %v0_10003ff022, %dec_label_pc_10003fec ], [ %v2_10003fc4, %dec_label_pc_10003fbc ]
  %v1_1000407476 = phi i32 [ %v1_10003fec, %dec_label_pc_10003fec ], [ %v1_10003fbc, %dec_label_pc_10003fbc ]
  %v0_10003fcc75 = phi i32 [ %v0_10003fcc25, %dec_label_pc_10003fec ], [ 0, %dec_label_pc_10003fbc ]
  %v0_1000400c74 = phi i32 [ %v0_10003fd827, %dec_label_pc_10003fec ], [ %v0_10003fd828, %dec_label_pc_10003fbc ]
  %v3_1000400080 = icmp eq i8 %v3_1000400080.in, 32
  br i1 %v3_1000400080, label %dec_label_pc_1000400c, label %dec_label_pc_10003fcc

dec_label_pc_1000400c:                            ; preds = %dec_label_pc_10004008, %dec_label_pc_10003fcc
  %tmp62 = icmp slt i32 %v0_1000400c74, 7
  br i1 %tmp62, label %dec_label_pc_10003fec, label %dec_label_pc_1000401c

dec_label_pc_1000401c:                            ; preds = %dec_label_pc_10003fec, %dec_label_pc_10003fe0, %dec_label_pc_1000400c, %dec_label_pc_10003fbc
  %v1_10004074.lcssa = phi i32 [ %v1_10003fbc, %dec_label_pc_10003fbc ], [ %v1_1000407476, %dec_label_pc_1000400c ], [ %v1_1000407476, %dec_label_pc_10003fe0 ], [ %v1_10003fec, %dec_label_pc_10003fec ]
  %v3_1000401c = icmp eq i32 %v0_1000401c.ph, 0
  br i1 %v3_1000401c, label %dec_label_pc_10003edc.backedge, label %dec_label_pc_10004028

dec_label_pc_10004028:                            ; preds = %dec_label_pc_1000401c
  %v0_10004028 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004028 = add i32 %v0_10004028, %v1_10004074.lcssa
  %v1_1000402c = add i32 %v2_10004028, 32
  %v2_1000402c = inttoptr i32 %v1_1000402c to i8*
  %v3_1000402c = load i8, i8* %v2_1000402c, align 1
  %v3_10004030 = icmp eq i8 %v3_1000402c, 0
  br i1 %v3_10004030, label %dec_label_pc_1000406c, label %dec_label_pc_10004038

dec_label_pc_10004038:                            ; preds = %dec_label_pc_10004028
  %v3_10004038 = icmp eq i8 %v3_1000402c, 32
  br i1 %v3_10004038, label %dec_label_pc_1000406c, label %dec_label_pc_10004040

dec_label_pc_10004040:                            ; preds = %dec_label_pc_10004038
  %v1_10004040 = add i32 %v1_10004074.lcssa, 1
  %v2_10004044 = add i32 %v1_10004040, %v0_10003fc4.pre
  %v1_1000405488 = inttoptr i32 %v2_10004044 to i8*
  %v2_1000405489 = load i8, i8* %v1_1000405488, align 1
  store i32 %v1_10004040, i32* %r31.global-to-local, align 4
  %tmp6394 = or i8 %v2_1000405489, 32
  %tmp6495 = icmp eq i8 %tmp6394, 32
  br i1 %tmp6495, label %dec_label_pc_1000406c, label %dec_label_pc_10004050

dec_label_pc_10004050:                            ; preds = %dec_label_pc_10004040, %dec_label_pc_10004050
  %v1_1000405c97.in = phi i32 [ %v1_1000405c97, %dec_label_pc_10004050 ], [ %v2_10004044, %dec_label_pc_10004040 ]
  %v0_1000405096 = phi i32 [ %v1_10004050, %dec_label_pc_10004050 ], [ %v1_10004040, %dec_label_pc_10004040 ]
  %v1_1000405c97 = add i32 %v1_1000405c97.in, 1
  %v1_10004050 = add i32 %v0_1000405096, 1
  %v1_10004054 = inttoptr i32 %v1_1000405c97 to i8*
  %v2_10004054 = load i8, i8* %v1_10004054, align 1
  store i32 %v1_10004050, i32* %r31.global-to-local, align 4
  %tmp63 = or i8 %v2_10004054, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_1000406c, label %dec_label_pc_10004050

dec_label_pc_1000406c:                            ; preds = %dec_label_pc_10004040, %dec_label_pc_10004050, %dec_label_pc_10004038, %dec_label_pc_10004028
  %v1_1000406c = phi i32 [ %v1_10004074.lcssa, %dec_label_pc_10004038 ], [ %v1_10004074.lcssa, %dec_label_pc_10004028 ], [ %v1_10004040, %dec_label_pc_10004040 ], [ %v1_10004050, %dec_label_pc_10004050 ]
  %v2_1000406c = add i32 %v1_1000406c, %v0_10004028
  %v2_10004074 = add i32 %v1_10004074.lcssa, %v0_10003fc4.pre
  store i32 %v2_10004074, i32* @r31, align 4
  %v3_10004078 = add i32 %v2_1000406c, 32
  %v4_10004078 = inttoptr i32 %v3_10004078 to i8*
  store i8 0, i8* %v4_10004078, align 1
  %v0_1000407c = load i32, i32* @r31, align 4
  store i32 268451972, i32* @lr, align 4
  %v1_10004080 = inttoptr i32 %v0_1000407c to i8*
  %v2_10004080 = call i32 @function_10009270(i8* %v1_10004080)
  %v2_10004084 = icmp sgt i32 %v2_10004080, 15
  br i1 %v2_10004084, label %dec_label_pc_10003edc.backedge, label %dec_label_pc_1000408c

dec_label_pc_1000408c:                            ; preds = %dec_label_pc_1000406c
  %v0_1000408c = load i32, i32* @r31, align 4
  store i32 %v2_10003ed8, i32* @r3, align 4
  %v2_10004094 = bitcast i32* %stack_var_-8792 to i8*
  %v3_10004094 = call i32 @function_10009298(i8* %v2_10004094, i32 %v0_1000408c)
  br label %dec_label_pc_10004098

dec_label_pc_10004098.loopexit:                   ; preds = %dec_label_pc_10003edc.backedge, %dec_label_pc_10003ed8
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_10004098

dec_label_pc_10004098:                            ; preds = %dec_label_pc_10004098.loopexit, %dec_label_pc_1000408c
  %v1_100040a4.pre-phi = phi i8* [ %.pre, %dec_label_pc_10004098.loopexit ], [ %v2_10004094, %dec_label_pc_1000408c ]
  store i32 268452000, i32* @lr, align 4
  %v0_1000409c = call i32 @function_10009a30()
  store i32 268452008, i32* @lr, align 4
  %v2_100040a4 = call i32 @function_10009270(i8* %v1_100040a4.pre-phi)
  %v3_100040a8 = icmp eq i32 %v2_100040a4, 0
  br i1 %v3_100040a8, label %dec_label_pc_10004370, label %dec_label_pc_100040b0

dec_label_pc_100040b0:                            ; preds = %dec_label_pc_10004098
  %v3_100040b8 = call i32 @function_10008940(i32 6, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268452036, i32* @lr, align 4
  %v1_100040c0 = call i32 @function_10009f7c(i32 %v3_100040b8)
  store i32 %v1_100040c0, i32* @r23, align 4
  %v3_100040c4 = icmp eq i32 %v1_100040c0, 0
  br i1 %v3_100040c4, label %dec_label_pc_100042f8, label %dec_label_pc_100040cc

dec_label_pc_100040cc:                            ; preds = %dec_label_pc_100040b0
  store i32 0, i32* @r28, align 4
  store i32 268452056, i32* @lr, align 4
  %v1_100040d47 = inttoptr i32 %v1_100040c0 to i32*
  %v2_100040d48 = call i32 @function_1000a08c(i32* %v1_100040d47)
  %v3_100040d811 = icmp eq i32 %v2_100040d48, 0
  br i1 %v3_100040d811, label %dec_label_pc_100042ec, label %dec_label_pc_100040e0.preheader.lr.ph

dec_label_pc_100040e0.preheader.lr.ph:            ; preds = %dec_label_pc_100040cc
  %v2_10004114 = bitcast i32* %stack_var_-8247 to i8*
  %v1_10004284 = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_100040e0.preheader

dec_label_pc_100040d0.loopexit:                   ; preds = %dec_label_pc_100040e8, %dec_label_pc_10004100, %dec_label_pc_10004168
  %v0_100040d0 = load i32, i32* @r23, align 4
  store i32 268452056, i32* @lr, align 4
  %v1_100040d4 = inttoptr i32 %v0_100040d0 to i32*
  %v2_100040d4 = call i32 @function_1000a08c(i32* %v1_100040d4)
  %v3_100040d8 = icmp eq i32 %v2_100040d4, 0
  br i1 %v3_100040d8, label %dec_label_pc_100042ec, label %dec_label_pc_100040e0.preheader

dec_label_pc_100040e0.preheader:                  ; preds = %dec_label_pc_100040e0.preheader.lr.ph, %dec_label_pc_100040d0.loopexit
  %v0_100040e835 = phi i32 [ %v2_100040d48, %dec_label_pc_100040e0.preheader.lr.ph ], [ %v2_100040d4, %dec_label_pc_100040d0.loopexit ]
  br label %dec_label_pc_100040e0

dec_label_pc_100040e0:                            ; preds = %dec_label_pc_100040e0.preheader, %dec_label_pc_100042d4
  %v0_100040e8 = phi i32 [ %v0_100040e835, %dec_label_pc_100040e0.preheader ], [ %v2_100042e0, %dec_label_pc_100042d4 ]
  %v0_100040e0 = load i32, i32* @r28, align 4
  %v3_100040e0 = icmp eq i32 %v0_100040e0, 0
  br i1 %v3_100040e0, label %dec_label_pc_100040e8, label %dec_label_pc_100042ec

dec_label_pc_100040e8:                            ; preds = %dec_label_pc_100040e0
  %v1_100040e8 = add i32 %v0_100040e8, 11
  %v2_100040e8 = inttoptr i32 %v1_100040e8 to i8*
  %v3_100040e8 = load i8, i8* %v2_100040e8, align 1
  %v4_100040e8 = zext i8 %v3_100040e8 to i32
  store i32 %v1_100040e8, i32* @r30, align 4
  %v1_100040f0 = add nuw nsw i32 %v4_100040e8, 208
  %v1_100040f4 = urem i32 %v1_100040f0, 256
  %v2_100040f8 = icmp ugt i32 %v1_100040f4, 9
  br i1 %v2_100040f8, label %dec_label_pc_100040d0.loopexit, label %dec_label_pc_10004100

dec_label_pc_10004100:                            ; preds = %dec_label_pc_100040e8
  %v3_10004108 = call i32 @function_10008940(i32 6, i32* null)
  store i32 %v2_10003e04, i32* @r3, align 4
  %v3_10004114 = call i32 @function_10009298(i8* %v2_10004114, i32 %v3_10004108)
  store i32 268452128, i32* @lr, align 4
  %v2_1000411c = call i32 @function_10009270(i8* %v2_10004114)
  %v0_10004120 = load i32, i32* @r30, align 4
  %v0_10004124 = load i32, i32* @r27, align 4
  %v2_10004124 = add i32 %v0_10004124, %v2_1000411c
  store i32 %v2_10004124, i32* @r3, align 4
  %v2_10004128 = inttoptr i32 %v2_10004124 to i8*
  %v3_10004128 = call i32 @function_10009298(i8* %v2_10004128, i32 %v0_10004120)
  store i32 268452148, i32* @lr, align 4
  %v2_10004130 = call i32 @function_10009270(i8* %v2_10004114)
  %v3_10004140 = call i32 @function_10008940(i32 7, i32* null)
  %v0_10004148 = load i32, i32* @r27, align 4
  %v2_10004148 = add i32 %v2_10004130, %v0_10004148
  store i32 %v2_10004148, i32* @r3, align 4
  %v2_1000414c = inttoptr i32 %v2_10004148 to i8*
  %v3_1000414c = call i32 @function_10009298(i8* %v2_1000414c, i32 %v3_10004140)
  store i32 4096, i32* @r5, align 4
  store i32 268452192, i32* @lr, align 4
  %v3_1000415c = call i32 @function_10009cb0(i32 %v2_10003e04, i32 %v2_10003e0c, i32 4096)
  %v3_10004160 = icmp eq i32 %v3_1000415c, -1
  br i1 %v3_10004160, label %dec_label_pc_100040d0.loopexit, label %dec_label_pc_10004168

dec_label_pc_10004168:                            ; preds = %dec_label_pc_10004100
  %v3_10004170 = call i32 @function_10008940(i32 6, i32* null)
  store i32 %v2_10003e04, i32* @r3, align 4
  %v3_1000417c = call i32 @function_10009298(i8* %v2_10004114, i32 %v3_10004170)
  store i32 268452232, i32* @lr, align 4
  %v2_10004184 = call i32 @function_10009270(i8* %v2_10004114)
  %v0_10004188 = load i32, i32* @r30, align 4
  %v0_1000418c = load i32, i32* @r27, align 4
  %v2_1000418c = add i32 %v0_1000418c, %v2_10004184
  store i32 %v2_1000418c, i32* @r3, align 4
  %v2_10004190 = inttoptr i32 %v2_1000418c to i8*
  %v3_10004190 = call i32 @function_10009298(i8* %v2_10004190, i32 %v0_10004188)
  store i32 268452252, i32* @lr, align 4
  %v2_10004198 = call i32 @function_10009270(i8* %v2_10004114)
  %v3_100041a8 = call i32 @function_10008940(i32 8, i32* null)
  %v0_100041b0 = load i32, i32* @r27, align 4
  %v2_100041b0 = add i32 %v2_10004198, %v0_100041b0
  store i32 %v2_100041b0, i32* @r3, align 4
  %v2_100041b4 = inttoptr i32 %v2_100041b0 to i8*
  %v3_100041b4 = call i32 @function_10009298(i8* %v2_100041b4, i32 %v3_100041a8)
  store i32 268452288, i32* @lr, align 4
  %v1_100041bc = call i32 @function_10009f7c(i32 %v2_10003e04)
  store i32 %v1_100041bc, i32* @r25, align 4
  %v3_100041c0 = icmp eq i32 %v1_100041bc, 0
  br i1 %v3_100041c0, label %dec_label_pc_100040d0.loopexit, label %dec_label_pc_100041c8

dec_label_pc_100041c8.loopexit:                   ; preds = %dec_label_pc_100041e8, %dec_label_pc_10004284
  %v0_100041c8.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_100041c8

dec_label_pc_100041c8:                            ; preds = %dec_label_pc_10004168, %dec_label_pc_100041c8.loopexit
  %v0_100041c8 = phi i32 [ %v0_100041c8.pre, %dec_label_pc_100041c8.loopexit ], [ %v1_100041bc, %dec_label_pc_10004168 ]
  store i32 268452304, i32* @lr, align 4
  %v1_100041cc = inttoptr i32 %v0_100041c8 to i32*
  %v2_100041cc = call i32 @function_1000a08c(i32* %v1_100041cc)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_100041cc, i32* @r31, align 4
  %v3_100041d4 = icmp eq i32 %v2_100041cc, 0
  %v0_100041d8 = load i32, i32* @r28, align 4
  store i32 %v2_10003e0c, i32* @r3, align 4
  %v3_100041d8.not = icmp ne i32 %v0_100041d8, 0
  %brmerge = or i1 %v3_100041d4, %v3_100041d8.not
  br i1 %brmerge, label %dec_label_pc_100042d4, label %dec_label_pc_100041e8

dec_label_pc_100041e8:                            ; preds = %dec_label_pc_100041c8
  store i32 268452332, i32* @lr, align 4
  %v0_100041e8 = call i32 @function_10009318()
  %v3_100041f4 = call i32 @function_10008940(i32 6, i32* null)
  store i32 %v2_10003e04, i32* @r3, align 4
  %v3_10004200 = call i32 @function_10009298(i8* %v2_10004114, i32 %v3_100041f4)
  store i32 268452364, i32* @lr, align 4
  %v2_10004208 = call i32 @function_10009270(i8* %v2_10004114)
  %v0_1000420c = load i32, i32* @r30, align 4
  %v0_10004210 = load i32, i32* @r27, align 4
  %v2_10004210 = add i32 %v0_10004210, %v2_10004208
  store i32 %v2_10004210, i32* @r3, align 4
  %v2_10004214 = inttoptr i32 %v2_10004210 to i8*
  %v3_10004214 = call i32 @function_10009298(i8* %v2_10004214, i32 %v0_1000420c)
  store i32 268452384, i32* @lr, align 4
  %v2_1000421c = call i32 @function_10009270(i8* %v2_10004114)
  %v3_1000422c = call i32 @function_10008940(i32 8, i32* null)
  %v0_10004234 = load i32, i32* @r27, align 4
  %v2_10004234 = add i32 %v2_1000421c, %v0_10004234
  store i32 %v2_10004234, i32* @r3, align 4
  %v2_10004238 = inttoptr i32 %v2_10004234 to i8*
  %v3_10004238 = call i32 @function_10009298(i8* %v2_10004238, i32 %v3_1000422c)
  store i32 268452420, i32* @lr, align 4
  %v2_10004240 = call i32 @function_10009270(i8* %v2_10004114)
  %v0_1000424c = load i32, i32* @r27, align 4
  %v2_1000424c = add i32 %v0_1000424c, %v2_10004240
  store i32 %v2_1000424c, i32* @r3, align 4
  %v2_10004250 = inttoptr i32 %v2_1000424c to i8*
  %v3_10004250 = call i32 @function_10009298(i8* %v2_10004250, i32 ptrtoint (i32* @global_var_1000c460.31 to i32))
  store i32 268452444, i32* @lr, align 4
  %v2_10004258 = call i32 @function_10009270(i8* %v2_10004114)
  %v0_1000425c = load i32, i32* @r31, align 4
  %v1_1000425c = add i32 %v0_1000425c, 11
  %v0_10004260 = load i32, i32* @r27, align 4
  %v2_10004260 = add i32 %v0_10004260, %v2_10004258
  store i32 %v2_10004260, i32* @r3, align 4
  %v2_10004264 = inttoptr i32 %v2_10004260 to i8*
  %v3_10004264 = call i32 @function_10009298(i8* %v2_10004264, i32 %v1_1000425c)
  store i32 268452472, i32* @lr, align 4
  %v3_10004274 = call i32 @function_10009cb0(i32 %v2_10003e04, i32 %v2_10003e0c, i32 4096)
  %v3_10004278 = icmp eq i32 %v3_10004274, -1
  br i1 %v3_10004278, label %dec_label_pc_100041c8.loopexit, label %dec_label_pc_10004284

dec_label_pc_10004284:                            ; preds = %dec_label_pc_100041e8
  store i32 268452488, i32* @lr, align 4
  %v2_10004284 = call i32 @function_10009270(i8* %v1_10004284)
  %v4_10004294 = call i32 @function_10009620(i8* %v1_10004284, i32 %v2_10004284, i32 %v2_10003ed8)
  %v3_1000429c = icmp eq i32 %v4_10004294, -1
  %v0_100042a0 = load i32, i32* @r30, align 4
  store i32 %v0_100042a0, i32* @r3, align 4
  br i1 %v3_1000429c, label %dec_label_pc_100041c8.loopexit, label %dec_label_pc_100042a8

dec_label_pc_100042a8:                            ; preds = %dec_label_pc_10004284
  store i32 268452524, i32* @lr, align 4
  %v2_100042a8 = call i32 @function_10009398(i32 %v0_100042a0, i32 10)
  store i32 268452532, i32* @lr, align 4
  %v2_100042b0 = call i32 @function_10009b50(i32 %v2_100042a8, i32 9)
  %v0_100042b4 = load i32, i32* @r25, align 4
  store i32 268452540, i32* @lr, align 4
  %v1_100042b8 = inttoptr i32 %v0_100042b4 to i32*
  %v2_100042b8 = call i32 @function_1000a08c(i32* %v1_100042b8)
  store i32 1, i32* @r28, align 4
  store i32 %v2_100042b8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100042d4

dec_label_pc_100042d4:                            ; preds = %dec_label_pc_100041c8, %dec_label_pc_100042a8
  %v0_100042d4 = load i32, i32* @r25, align 4
  store i32 268452572, i32* @lr, align 4
  %v1_100042d8 = inttoptr i32 %v0_100042d4 to i32*
  %v2_100042d8 = call i32 @function_10009ed8(i32* %v1_100042d8)
  %v0_100042dc = load i32, i32* @r23, align 4
  store i32 268452580, i32* @lr, align 4
  %v1_100042e0 = inttoptr i32 %v0_100042dc to i32*
  %v2_100042e0 = call i32 @function_1000a08c(i32* %v1_100042e0)
  %v3_100042e4 = icmp eq i32 %v2_100042e0, 0
  br i1 %v3_100042e4, label %dec_label_pc_100042ec, label %dec_label_pc_100040e0

dec_label_pc_100042ec:                            ; preds = %dec_label_pc_100040d0.loopexit, %dec_label_pc_100042d4, %dec_label_pc_100040e0, %dec_label_pc_100040cc
  %v0_100042ec = load i32, i32* @r23, align 4
  %v0_100042f0 = load i32, i32* @r28, align 4
  %v1_100042f0 = urem i32 %v0_100042f0, 256
  store i32 %v1_100042f0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100042f8.32 to i32), i32* @lr, align 4
  %v1_100042f4 = inttoptr i32 %v0_100042ec to i32*
  %v2_100042f4 = call i32 @function_10009ed8(i32* %v1_100042f4)
  br label %dec_label_pc_100042f8

dec_label_pc_100042f8:                            ; preds = %dec_label_pc_100040b0, %dec_label_pc_100042ec
  store i32 ptrtoint ([3 x i8]* @global_var_10004300.33 to i32), i32* @lr, align 4
  %v1_100042fc = call i32 @function_1000b278(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10004308.34 to i32), i32* @lr, align 4
  %v1_10004304 = call i32 @function_10008968(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10004310.35 to i32), i32* @lr, align 4
  %v1_1000430c = call i32 @function_10008968(i32 7)
  store i32 268452632, i32* @lr, align 4
  %v1_10004314 = call i32 @function_10008968(i32 8)
  br label %dec_label_pc_10004318

dec_label_pc_10004318:                            ; preds = %dec_label_pc_10003e98, %dec_label_pc_100042f8
  %v0_1000431c = load i32, i32* @r31, align 4
  store i32 %v0_10003e38, i32* @r23, align 4
  store i32 %v0_10003e20, i32* @r25, align 4
  store i32 %v0_10003e00, i32* @r27, align 4
  store i32 %v0_10003e40, i32* @r28, align 4
  store i32 %v0_10003e10, i32* @r29, align 4
  store i32 %v0_10003e28, i32* @r30, align 4
  store i32 %v0_10003e30, i32* @r31, align 4
  ret i32 %v0_1000431c

dec_label_pc_10004350:                            ; preds = %dec_label_pc_10003fd8
  %v3_10003fd8 = icmp eq i32 %v0_1000400c74, 0
  %v1_10004350 = add i32 %v0_1000400c74, 1
  br i1 %v3_10003fd8, label %dec_label_pc_10004358, label %dec_label_pc_10003fe0

dec_label_pc_10004358:                            ; preds = %dec_label_pc_10004350
  %v0_10004358 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004358 = add i32 %v0_10004358, %v1_1000407476
  %v1_1000435c = add i32 %v2_10004358, 33
  %v2_1000435c = inttoptr i32 %v1_1000435c to i8*
  %v3_1000435c = load i8, i8* %v2_1000435c, align 1
  %v3_10004360 = icmp eq i8 %v3_1000435c, 65
  br i1 %v3_10004360, label %dec_label_pc_10004368, label %dec_label_pc_10003fbc

dec_label_pc_10004368:                            ; preds = %dec_label_pc_10004358
  br label %dec_label_pc_10003fbc.outer

dec_label_pc_10004370:                            ; preds = %dec_label_pc_10004098
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000437c.36 to i32), i32* @lr, align 4
  %v1_10004378 = call i32 @function_10008968(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10004384.37 to i32), i32* @lr, align 4
  %v1_10004380 = call i32 @function_10008968(i32 7)
  store i32 268452748, i32* @lr, align 4
  %v1_10004388 = call i32 @function_10008968(i32 8)
  %v0_10004390 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003e38, i32* @r23, align 4
  store i32 %v0_10003e20, i32* @r25, align 4
  store i32 %v0_10003e00, i32* @r27, align 4
  store i32 %v0_10003e40, i32* @r28, align 4
  store i32 %v0_10003e10, i32* @r29, align 4
  store i32 %v0_10003e28, i32* @r30, align 4
  store i32 %v0_10003e30, i32* @r31, align 4
  ret i32 %v0_10004390

dec_label_pc_100043c4:                            ; preds = %dec_label_pc_10003df0
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_10003e98

; uselistorder directives
  uselistorder i32 %v2_100042e0, { 1, 0 }
  uselistorder i32 %v1_10004050, { 0, 2, 1 }
  uselistorder i32 %v1_10004074.lcssa, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_1000400c74, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_1000407476, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_10003ff022, { 1, 0 }
  uselistorder i32 %v1_10003f8c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_10003ed8, { 1, 0, 2 }
  uselistorder i32 %v2_10003e24, { 1, 0 }
  uselistorder i32 %v2_10003e04, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 7, 8, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32* %r26.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32)* @function_10009398, { 1, 0 }
  uselistorder i32 268452056, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_100094d0, { 1, 0 }
  uselistorder i32 268451564, { 1, 0 }
  uselistorder label %dec_label_pc_10004318, { 1, 0 }
  uselistorder label %dec_label_pc_100042f8, { 1, 0 }
  uselistorder label %dec_label_pc_100042ec, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100042d4, { 1, 0 }
  uselistorder label %dec_label_pc_100041c8, { 1, 0 }
  uselistorder label %dec_label_pc_100041c8.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_100040e0, { 1, 0 }
  uselistorder label %dec_label_pc_100040e0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100040d0.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000406c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10004050, { 1, 0 }
  uselistorder label %dec_label_pc_1000401c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10004008, { 1, 0 }
  uselistorder label %dec_label_pc_10003fe0, { 1, 0 }
  uselistorder label %dec_label_pc_10003fbc, { 1, 0 }
  uselistorder label %dec_label_pc_10003f84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003f34, { 1, 0 }
  uselistorder label %dec_label_pc_10003edc.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10003ef4, { 1, 0 }
  uselistorder label %dec_label_pc_10003e98, { 1, 0 }
}

define i32 @function_100043e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100043e8:
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-8476 = alloca i32, align 4
  %stack_var_-8480 = alloca i32, align 4
  %stack_var_-8484 = alloca i32, align 4
  %stack_var_-8488 = alloca i32, align 4
  %stack_var_-8456 = alloca i32, align 4
  %stack_var_-8444 = alloca i32, align 4
  %stack_var_-8448 = alloca i32, align 4
  %stack_var_-8452 = alloca i32, align 4
  %stack_var_-8472 = alloca i32, align 4
  %stack_var_-8460 = alloca i32, align 4
  %stack_var_-8464 = alloca i32, align 4
  %stack_var_-8468 = alloca i32, align 4
  %stack_var_-8280 = alloca i32, align 4
  %stack_var_-8408 = alloca i32, align 4
  %stack_var_-8344 = alloca i32, align 4
  %stack_var_-8424 = alloca i32, align 4
  %stack_var_-4184 = alloca i32, align 4
  %stack_var_-8440 = alloca i32, align 4
  %v0_100043f4 = load i32, i32* @r28, align 4
  %v0_10004428 = load i32, i32* @r25, align 4
  %v0_1000442c = load i32, i32* @r26, align 4
  %v0_10004430 = load i32, i32* @r27, align 4
  %v0_10004434 = load i32, i32* @r29, align 4
  %v0_10004438 = load i32, i32* @r30, align 4
  %v0_1000443c = load i32, i32* @r31, align 4
  store i32 268452932, i32* @lr, align 4
  %v0_10004440 = call i32 @function_10009e00()
  store i32 %v0_10004440, i32* @r28, align 4
  store i32 268452940, i32* @lr, align 4
  %v0_10004448 = call i32 @function_10009a78()
  store i32 %v0_10004448, i32* @global_var_1001d194.27, align 4
  %tmp177 = icmp slt i32 %v0_10004448, 1
  br i1 %tmp177, label %dec_label_pc_100044b4, label %dec_label_pc_1000445c

dec_label_pc_1000445c:                            ; preds = %dec_label_pc_10004620, %dec_label_pc_10004510, %dec_label_pc_100044b4, %dec_label_pc_100043e8
  %v0_100044b0 = phi i32 [ -1, %dec_label_pc_10004510 ], [ -1, %dec_label_pc_100044b4 ], [ %v0_10004448, %dec_label_pc_100043e8 ], [ 0, %dec_label_pc_10004620 ]
  store i32 %v0_10004428, i32* @r25, align 4
  store i32 %v0_1000442c, i32* @r26, align 4
  store i32 %v0_10004430, i32* @r27, align 4
  store i32 %v0_100043f4, i32* @r28, align 4
  store i32 %v0_10004434, i32* @r29, align 4
  store i32 %v0_10004438, i32* @r30, align 4
  store i32 %v0_1000443c, i32* @r31, align 4
  ret i32 %v0_100044b0

dec_label_pc_100044b4:                            ; preds = %dec_label_pc_100043e8
  %v3_100044b4 = icmp eq i32 %v0_10004448, -1
  br i1 %v3_100044b4, label %dec_label_pc_1000445c, label %dec_label_pc_100044bc

dec_label_pc_100044bc:                            ; preds = %dec_label_pc_100044b4
  store i32 0, i32* @r30, align 4
  store i32 2, i32* %stack_var_-8440, align 4
  store i32 ptrtoint (i32* @global_var_100044d4.38 to i32), i32* @lr, align 4
  %v1_100044d0 = call i32 @function_10003df0(i32 22)
  store i32 268453100, i32* @lr, align 4
  %v3_100044e8 = call i32 @function_1000a780(i32 2, i32 1, i32 0)
  %v3_100044ec = icmp eq i32 %v3_100044e8, -1
  store i32 %v3_100044e8, i32* @r31, align 4
  br i1 %v3_100044ec, label %dec_label_pc_10004510, label %dec_label_pc_100044f8

dec_label_pc_100044f8:                            ; preds = %dec_label_pc_100044bc
  %v2_100044f8 = ptrtoint i32* %stack_var_-8440 to i32
  store i32 268453124, i32* @lr, align 4
  %v3_10004500 = call i32 @function_1000a54c(i32 %v2_100044f8, i32 16, i32 16)
  %v0_10004504 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004510.39 to i32), i32* @lr, align 4
  %v2_1000450c = call i32 @function_1000a624(i32 %v0_10004504, i32 1)
  br label %dec_label_pc_10004510

dec_label_pc_10004510:                            ; preds = %dec_label_pc_100044bc, %dec_label_pc_100044f8
  %v2_10004514 = ptrtoint i32* %stack_var_-4184 to i32
  store i32 %v2_10004514, i32* %r24.global-to-local, align 4
  store i32 268453148, i32* @lr, align 4
  %v1_10004518 = call i32 @function_1000b278(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 268453156, i32* @lr, align 4
  %v0_10004520 = call i32 @function_1000a984()
  store i32 %v0_10004520, i32* %r11.global-to-local, align 4
  %v0_10004530 = load i32, i32* @r30, align 4
  %v1_10004530 = trunc i32 %v0_10004530 to i8
  %v3_10004530 = inttoptr i32 %v0_10004520 to i8*
  store i8 %v1_10004530, i8* %v3_10004530, align 1
  %v0_10004534 = load i32, i32* @r30, align 4
  store i32 %v0_10004534, i32* @global_var_1001d18c.40, align 4
  %v0_1000453c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000453c, i32* @global_var_1001d190.41, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004544.42 to i32), i32* @lr, align 4
  %v1_10004540 = call i32 @function_100089f4(i32 6)
  store i32 268453196, i32* @lr, align 4
  %v1_10004548 = call i32 @function_100089f4(i32 7)
  %v3_10004554 = call i32 @function_10008940(i32 6, i32* null)
  store i32 %v2_10004514, i32* @r3, align 4
  %v2_10004560 = bitcast i32* %stack_var_-4184 to i8*
  %v3_10004560 = call i32 @function_10009298(i8* %v2_10004560, i32 %v3_10004554)
  %v0_10004564 = load i32, i32* %r24.global-to-local, align 4
  %v2_10004564 = add i32 %v0_10004564, %v3_10004560
  store i32 %v2_10004564, i32* %r29.global-to-local, align 4
  store i32 268453228, i32* @lr, align 4
  %v0_10004568 = call i32 @function_10009ac0()
  %v2_1000456c = ptrtoint i32* %stack_var_-8424 to i32
  %v3_10004574 = trunc i32 %v0_10004568 to i8
  %v4_10004574 = call i32 @function_1000974c(i8 %v3_10004574, i32 10, i32 %v2_1000456c)
  store i32 %v2_10004564, i32* @r3, align 4
  %v2_10004580 = inttoptr i32 %v2_10004564 to i8*
  %v3_10004580 = call i32 @function_10009298(i8* %v2_10004580, i32 %v4_10004574)
  %v0_10004588 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004588 = add i32 %v0_10004588, %v3_10004580
  store i32 %v2_10004588, i32* %r29.global-to-local, align 4
  %v3_10004590 = call i32 @function_10008940(i32 7, i32* null)
  store i32 %v2_10004588, i32* @r3, align 4
  %v2_1000459c = inttoptr i32 %v2_10004588 to i8*
  %v3_1000459c = call i32 @function_10009298(i8* %v2_1000459c, i32 %v3_10004590)
  store i32 %v3_1000459c, i32* @r31, align 4
  store i32 268453300, i32* @lr, align 4
  %v2_100045b0 = call i32 @function_10009b98(i32 %v2_10004514, i32 0)
  %v3_100045b4 = icmp eq i32 %v2_100045b0, -1
  br i1 %v3_100045b4, label %dec_label_pc_1000445c, label %dec_label_pc_100045bc

dec_label_pc_100045bc:                            ; preds = %dec_label_pc_10004510
  store i32 ptrtoint ([3 x i8]* @global_var_100045c0.43 to i32), i32* @lr, align 4
  %v0_100045bc = call i32 @function_10009a30()
  store i32 ptrtoint ([3 x i8]* @global_var_100045c8.44 to i32), i32* @lr, align 4
  %v1_100045c4 = call i32 @function_10008968(i32 6)
  store i32 268453328, i32* @lr, align 4
  %v1_100045cc = call i32 @function_10008968(i32 7)
  %v3_100045d4 = load i32, i32* @global_var_1001d190.41, align 4
  store i32 268453348, i32* @lr, align 4
  %v3_100045e0 = call i32 @function_10009cb0(i32 %v2_10004514, i32 %v3_100045d4, i32 4095)
  %v3_100045e4 = icmp eq i32 %v3_100045e0, -1
  br i1 %v3_100045e4, label %dec_label_pc_100045f8, label %dec_label_pc_100045ec

dec_label_pc_100045ec:                            ; preds = %dec_label_pc_100045bc
  store i32 268566528, i32* %r11.global-to-local, align 4
  %v3_100045f0 = load i32, i32* @global_var_1001d190.41, align 4
  %v0_100045f4 = load i32, i32* @r30, align 4
  %v3_100045f4 = trunc i32 %v0_100045f4 to i8
  %v4_100045f4 = add i32 %v3_100045f0, %v3_100045e0
  %v5_100045f4 = inttoptr i32 %v4_100045f4 to i8*
  store i8 %v3_100045f4, i8* %v5_100045f4, align 1
  br label %dec_label_pc_100045f8

dec_label_pc_100045f8:                            ; preds = %dec_label_pc_100045bc, %dec_label_pc_100045ec
  %v0_100045f8 = load i32, i32* %r29.global-to-local, align 4
  %v1_100045f8 = load i32, i32* @r31, align 4
  %v2_100045f8 = add i32 %v1_100045f8, %v0_100045f8
  store i32 %v2_10004514, i32* @r3, align 4
  %v0_10004600 = load i32, i32* %r24.global-to-local, align 4
  %v2_10004600 = sub i32 %v2_100045f8, %v0_10004600
  store i32 %v2_10004600, i32* @r4, align 4
  %v0_10004604 = load i32, i32* @r28, align 4
  store i32 %v0_10004604, i32* %r29.global-to-local, align 4
  store i32 268453388, i32* @lr, align 4
  %v0_10004608 = call i32 @function_10009318()
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v2_10004614 = ptrtoint i32* %stack_var_-8344 to i32
  %v2_10004618 = ptrtoint i32* %stack_var_-8408 to i32
  store i32 %v2_10004618, i32* %r18.global-to-local, align 4
  %v2_1000461c = ptrtoint i32* %stack_var_-8280 to i32
  %v2_100046ec = bitcast i32* %stack_var_-8344 to i8*
  %v2_10004730 = bitcast i32* %stack_var_-8408 to i8*
  %v3_100047b8 = bitcast i32* %stack_var_-8280 to i8*
  br label %dec_label_pc_10004620

dec_label_pc_10004620:                            ; preds = %dec_label_pc_100046b0, %dec_label_pc_100045f8
  store i32 268453416, i32* @lr, align 4
  %v1_10004624 = call i32 @function_100089f4(i32 6)
  %v3_10004630 = call i32 @function_10008940(i32 6, i32* null)
  store i32 268453432, i32* @lr, align 4
  %v1_10004634 = call i32 @function_10009f7c(i32 %v3_10004630)
  store i32 %v1_10004634, i32* @r27, align 4
  %v3_10004638 = icmp eq i32 %v1_10004634, 0
  br i1 %v3_10004638, label %dec_label_pc_1000445c, label %dec_label_pc_10004640

dec_label_pc_10004640:                            ; preds = %dec_label_pc_10004620
  store i32 268453448, i32* @lr, align 4
  %v1_10004644 = call i32 @function_10008968(i32 6)
  %v0_1000464845 = load i32, i32* @r27, align 4
  store i32 268453456, i32* @lr, align 4
  %v1_1000464c46 = inttoptr i32 %v0_1000464845 to i32*
  %v2_1000464c47 = call i32 @function_1000a08c(i32* %v1_1000464c46)
  %v3_1000465050 = icmp eq i32 %v2_1000464c47, 0
  br i1 %v3_1000465050, label %dec_label_pc_100046b0, label %dec_label_pc_10004658.preheader

dec_label_pc_10004658.preheader:                  ; preds = %dec_label_pc_10004640, %dec_label_pc_10004648.backedge
  %v0_1000465861 = phi i32 [ %v2_1000464c, %dec_label_pc_10004648.backedge ], [ %v2_1000464c47, %dec_label_pc_10004640 ]
  br label %dec_label_pc_10004658

dec_label_pc_10004658:                            ; preds = %dec_label_pc_10004658.preheader, %dec_label_pc_1000469c
  %v0_1000466c = phi i32 [ %v0_1000465861, %dec_label_pc_10004658.preheader ], [ %v2_100046a4, %dec_label_pc_1000469c ]
  %v1_10004658 = add i32 %v0_1000466c, 11
  %v2_10004658 = inttoptr i32 %v1_10004658 to i8*
  %v3_10004658 = load i8, i8* %v2_10004658, align 1
  %v4_10004658 = zext i8 %v3_10004658 to i32
  %v1_1000465c = add nuw nsw i32 %v4_10004658, 208
  %v1_10004660 = urem i32 %v1_1000465c, 256
  %v2_10004664 = icmp ugt i32 %v1_10004660, 9
  br i1 %v2_10004664, label %dec_label_pc_10004648.backedge, label %dec_label_pc_1000466c

dec_label_pc_1000466c:                            ; preds = %dec_label_pc_10004658
  store i32 268453500, i32* @lr, align 4
  %v3_10004678 = call i32 @function_1000b02c(i8* %v2_10004658, i32 %v1_10004660)
  %v0_1000467c = load i32, i32* @r28, align 4
  %v2_1000467c = icmp slt i32 %v0_1000467c, %v3_10004678
  store i32 %v3_10004678, i32* %r30.global-to-local, align 4
  br i1 %v2_1000467c, label %dec_label_pc_100046bc, label %dec_label_pc_10004688

dec_label_pc_10004688:                            ; preds = %dec_label_pc_1000466c
  store i32 268453520, i32* @lr, align 4
  %v0_1000468c = call i32 @function_10009e00()
  %v0_10004690 = load i32, i32* @r29, align 4
  %v2_10004690 = sub i32 %v0_1000468c, %v0_10004690
  %tmp178 = icmp slt i32 %v2_10004690, 601
  br i1 %tmp178, label %dec_label_pc_1000481c, label %dec_label_pc_1000469c

dec_label_pc_1000469c:                            ; preds = %dec_label_pc_10004688
  %v0_1000469c = load i32, i32* @r27, align 4
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 268453544, i32* @lr, align 4
  %v1_100046a4 = inttoptr i32 %v0_1000469c to i32*
  %v2_100046a4 = call i32 @function_1000a08c(i32* %v1_100046a4)
  %v3_100046a8 = icmp eq i32 %v2_100046a4, 0
  br i1 %v3_100046a8, label %dec_label_pc_100046b0, label %dec_label_pc_10004658

dec_label_pc_100046b0:                            ; preds = %dec_label_pc_10004648.backedge, %dec_label_pc_1000469c, %dec_label_pc_10004640
  %v0_100046b0 = load i32, i32* @r27, align 4
  store i32 268453560, i32* @lr, align 4
  %v1_100046b4 = inttoptr i32 %v0_100046b0 to i32*
  %v2_100046b4 = call i32 @function_10009ed8(i32* %v1_100046b4)
  br label %dec_label_pc_10004620

dec_label_pc_100046bc:                            ; preds = %dec_label_pc_1000466c
  store i32 268453572, i32* @lr, align 4
  %v0_100046c0 = call i32 @function_10009e00()
  store i32 %v0_100046c0, i32* %r19.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100046d0.46 to i32), i32* @lr, align 4
  %v1_100046cc = call i32 @function_100089f4(i32 6)
  store i32 268453592, i32* @lr, align 4
  %v1_100046d4 = call i32 @function_100089f4(i32 7)
  %v3_100046e0 = call i32 @function_10008940(i32 6, i32* null)
  store i32 %v2_10004614, i32* @r3, align 4
  %v3_100046ec = call i32 @function_10009298(i8* %v2_100046ec, i32 %v3_100046e0)
  %v0_100046f0 = load i32, i32* @r31, align 4
  %v0_100046f4 = load i32, i32* @r25, align 4
  %v2_100046f4 = add i32 %v0_100046f4, %v3_100046ec
  store i32 %v2_100046f4, i32* %r28.global-to-local, align 4
  store i32 %v2_100046f4, i32* @r3, align 4
  %v2_100046fc = inttoptr i32 %v2_100046f4 to i8*
  %v3_100046fc = call i32 @function_10009298(i8* %v2_100046fc, i32 %v0_100046f0)
  store i32 %v3_100046fc, i32* %r29.global-to-local, align 4
  %v3_1000470c = call i32 @function_10008940(i32 7, i32* null)
  %v2_10004714 = add i32 %v3_100046fc, %v2_100046f4
  store i32 %v2_10004714, i32* @r3, align 4
  %v2_10004718 = inttoptr i32 %v2_10004714 to i8*
  %v3_10004718 = call i32 @function_10009298(i8* %v2_10004718, i32 %v3_1000470c)
  %v3_10004724 = call i32 @function_10008940(i32 6, i32* null)
  store i32 %v2_10004618, i32* @r3, align 4
  %v3_10004730 = call i32 @function_10009298(i8* %v2_10004730, i32 %v3_10004724)
  %v0_10004734 = load i32, i32* @r31, align 4
  %v0_10004738 = load i32, i32* %r18.global-to-local, align 4
  %v2_10004738 = add i32 %v0_10004738, %v3_10004730
  store i32 %v2_10004738, i32* %r28.global-to-local, align 4
  store i32 %v2_10004738, i32* @r3, align 4
  %v2_10004740 = inttoptr i32 %v2_10004738 to i8*
  %v3_10004740 = call i32 @function_10009298(i8* %v2_10004740, i32 %v0_10004734)
  store i32 %v3_10004740, i32* %r29.global-to-local, align 4
  %v3_10004750 = call i32 @function_10008940(i32 11, i32* null)
  %v2_10004758 = add i32 %v3_10004740, %v2_10004738
  store i32 %v2_10004758, i32* @r3, align 4
  %v2_1000475c = inttoptr i32 %v2_10004758 to i8*
  %v3_1000475c = call i32 @function_10009298(i8* %v2_1000475c, i32 %v3_10004750)
  store i32 ptrtoint ([3 x i8]* @global_var_10004768.48 to i32), i32* @lr, align 4
  %v1_10004764 = call i32 @function_10008968(i32 6)
  store i32 268453744, i32* @lr, align 4
  %v1_1000476c = call i32 @function_10008968(i32 7)
  store i32 4095, i32* @r5, align 4
  store i32 268453760, i32* @lr, align 4
  %v3_1000477c = call i32 @function_10009cb0(i32 %v2_10004614, i32 %v2_1000461c, i32 4095)
  %v3_10004780 = icmp eq i32 %v3_1000477c, -1
  store i32 %v3_1000477c, i32* %r29.global-to-local, align 4
  br i1 %v3_10004780, label %dec_label_pc_10004870, label %dec_label_pc_1000478c

dec_label_pc_1000478c:                            ; preds = %dec_label_pc_100046bc
  %v0_1000478c = load i32, i32* @r1, align 4
  %v2_1000478c = add i32 %v0_1000478c, %v3_1000477c
  %v3_10004794 = add i32 %v2_1000478c, 216
  %v4_10004794 = inttoptr i32 %v3_10004794 to i8*
  store i8 0, i8* %v4_10004794, align 1
  store i32 268453792, i32* @lr, align 4
  %v1_1000479c = call i32 @function_100089f4(i32 12)
  %v3_100047a8 = call i32 @function_10008940(i32 12, i32* null)
  %v0_100047ac = load i32, i32* %r29.global-to-local, align 4
  %v1_100047ac = add i32 %v0_100047ac, -1
  %v4_100047b8 = call i32 @function_10009620(i8* %v3_100047b8, i32 %v1_100047ac, i32 %v3_100047a8)
  %v3_100047bc = icmp eq i32 %v4_100047b8, -1
  br i1 %v3_100047bc, label %dec_label_pc_100047d8, label %dec_label_pc_100047c4

dec_label_pc_100047c4:                            ; preds = %dec_label_pc_1000478c
  store i32 268453836, i32* @lr, align 4
  %v1_100047c8 = call i32 @function_10009e48(i32 %v2_1000461c)
  %v0_100047cc = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100047d8.49 to i32), i32* @lr, align 4
  %v2_100047d4 = call i32 @function_10009b50(i32 %v0_100047cc, i32 9)
  br label %dec_label_pc_100047d8

dec_label_pc_100047d8:                            ; preds = %dec_label_pc_1000478c, %dec_label_pc_100047c4
  store i32 ptrtoint (i32* @global_var_100047e0.50 to i32), i32* @lr, align 4
  %v1_100047dc = call i32 @function_10008968(i32 12)
  store i32 268453860, i32* @lr, align 4
  %v0_100047e0 = call i32 @function_10009ac0()
  %v0_100047e4 = load i32, i32* %r30.global-to-local, align 4
  %v4_100047e4 = icmp eq i32 %v0_100047e4, %v0_100047e0
  br i1 %v4_100047e4, label %dec_label_pc_10004810, label %dec_label_pc_100047ec

dec_label_pc_100047ec:                            ; preds = %dec_label_pc_100047d8
  store i32 268453872, i32* @lr, align 4
  %v0_100047ec = call i32 @function_10009b08()
  %v0_100047f0 = load i32, i32* %r30.global-to-local, align 4
  %v4_100047f0 = icmp eq i32 %v0_100047f0, %v0_100047ec
  br i1 %v4_100047f0, label %dec_label_pc_10004810, label %dec_label_pc_100047f8

dec_label_pc_100047f8:                            ; preds = %dec_label_pc_100047ec
  %v3_10004800 = load i32, i32* @global_var_1001d190.41, align 4
  %v4_10004804 = call i32 @function_100096cc(i8* %v3_100047b8, i32 %v3_10004800, i32 268566528)
  %v3_10004808 = icmp eq i32 %v4_10004804, 0
  br i1 %v3_10004808, label %dec_label_pc_1000484c, label %dec_label_pc_100047f8.dec_label_pc_10004810_crit_edge

dec_label_pc_100047f8.dec_label_pc_10004810_crit_edge: ; preds = %dec_label_pc_100047f8
  %v0_10004810.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004810

dec_label_pc_10004810:                            ; preds = %dec_label_pc_100047f8.dec_label_pc_10004810_crit_edge, %dec_label_pc_100047ec, %dec_label_pc_100047d8
  %v0_10004810 = phi i32 [ %v0_10004810.pre, %dec_label_pc_100047f8.dec_label_pc_10004810_crit_edge ], [ %v0_100047ec, %dec_label_pc_100047ec ], [ %v0_100047e0, %dec_label_pc_100047d8 ]
  store i32 %v0_10004810, i32* %r28.global-to-local, align 4
  %v0_10004814 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_10004814, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004648.backedge

dec_label_pc_10004648.backedge:                   ; preds = %dec_label_pc_10004658, %dec_label_pc_10004810, %dec_label_pc_10004840, %dec_label_pc_10004b4c, %dec_label_pc_1000481c, %dec_label_pc_10004824
  %v0_10004648 = load i32, i32* @r27, align 4
  store i32 268453456, i32* @lr, align 4
  %v1_1000464c = inttoptr i32 %v0_10004648 to i32*
  %v2_1000464c = call i32 @function_1000a08c(i32* %v1_1000464c)
  %v3_10004650 = icmp eq i32 %v2_1000464c, 0
  br i1 %v3_10004650, label %dec_label_pc_100046b0, label %dec_label_pc_10004658.preheader

dec_label_pc_1000481c:                            ; preds = %dec_label_pc_10004688
  %v0_1000481c = load i32, i32* %r30.global-to-local, align 4
  %tmp179 = icmp slt i32 %v0_1000481c, 401
  br i1 %tmp179, label %dec_label_pc_10004648.backedge, label %dec_label_pc_10004824

dec_label_pc_10004824:                            ; preds = %dec_label_pc_1000481c
  %v0_1000482c = load i32, i32* @r26, align 4
  %v1_10004830 = urem i32 %v0_1000482c, 10
  %v4_10004838 = icmp eq i32 %v1_10004830, 0
  br i1 %v4_10004838, label %dec_label_pc_10004840, label %dec_label_pc_10004648.backedge

dec_label_pc_10004840:                            ; preds = %dec_label_pc_10004824
  store i32 268453960, i32* @lr, align 4
  %v1_10004844 = call i32 @function_1000b278(i32 1)
  br label %dec_label_pc_10004648.backedge

dec_label_pc_1000484c:                            ; preds = %dec_label_pc_100047f8
  store i32 268453980, i32* @lr, align 4
  %v2_10004858 = call i32 @function_10009b98(i32 %v2_1000461c, i32 0)
  %v3_1000485c = icmp eq i32 %v2_10004858, -1
  store i32 %v2_10004858, i32* @r31, align 4
  br i1 %v3_1000485c, label %dec_label_pc_10004e38, label %dec_label_pc_10004868

dec_label_pc_10004868:                            ; preds = %dec_label_pc_1000484c, %dec_label_pc_10004e38
  store i32 268454000, i32* @lr, align 4
  %v0_1000486c = call i32 @function_10009a30()
  br label %dec_label_pc_10004870

dec_label_pc_10004870:                            ; preds = %dec_label_pc_100046bc, %dec_label_pc_10004868
  store i32 268454016, i32* @lr, align 4
  %v2_1000487c = call i32 @function_10009b98(i32 %v2_10004614, i32 0)
  %v3_10004880 = icmp eq i32 %v2_1000487c, -1
  store i32 %v2_1000487c, i32* %r29.global-to-local, align 4
  br i1 %v3_10004880, label %dec_label_pc_10004b4c, label %dec_label_pc_1000488c

dec_label_pc_1000488c:                            ; preds = %dec_label_pc_10004870
  store i32 ptrtoint ([3 x i8]* @global_var_10004894.51 to i32), i32* @lr, align 4
  %v1_10004890 = call i32 @function_100089f4(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_1000489c.52 to i32), i32* @lr, align 4
  %v1_10004898 = call i32 @function_100089f4(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_100048a4.53 to i32), i32* @lr, align 4
  %v1_100048a0 = call i32 @function_100089f4(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_100048ac.54 to i32), i32* @lr, align 4
  %v1_100048a8 = call i32 @function_100089f4(i32 16)
  store i32 ptrtoint ([3 x i8]* @global_var_100048b4.55 to i32), i32* @lr, align 4
  %v1_100048b0 = call i32 @function_100089f4(i32 17)
  store i32 ptrtoint ([3 x i8]* @global_var_100048bc.56 to i32), i32* @lr, align 4
  %v1_100048b8 = call i32 @function_100089f4(i32 18)
  store i32 ptrtoint ([3 x i8]* @global_var_100048c4.57 to i32), i32* @lr, align 4
  %v1_100048c0 = call i32 @function_100089f4(i32 19)
  store i32 ptrtoint ([3 x i8]* @global_var_100048cc.58 to i32), i32* @lr, align 4
  %v1_100048c8 = call i32 @function_100089f4(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_100048d4.59 to i32), i32* @lr, align 4
  %v1_100048d0 = call i32 @function_100089f4(i32 21)
  store i32 ptrtoint ([3 x i8]* @global_var_100048dc.60 to i32), i32* @lr, align 4
  %v1_100048d8 = call i32 @function_100089f4(i32 22)
  store i32 ptrtoint ([3 x i8]* @global_var_100048e4.61 to i32), i32* @lr, align 4
  %v1_100048e0 = call i32 @function_100089f4(i32 23)
  store i32 268454124, i32* @lr, align 4
  %v1_100048e8 = call i32 @function_100089f4(i32 42)
  %v3_100048f4 = call i32 @function_10008940(i32 13, i32* nonnull %stack_var_-8468)
  store i32 %v3_100048f4, i32* @r31, align 4
  %v3_10004904 = call i32 @function_10008940(i32 14, i32* nonnull %stack_var_-8464)
  store i32 %v3_10004904, i32* %r28.global-to-local, align 4
  %v3_10004914 = call i32 @function_10008940(i32 15, i32* nonnull %stack_var_-8460)
  store i32 %v3_10004914, i32* %r23.global-to-local, align 4
  %v3_10004924 = call i32 @function_10008940(i32 16, i32* nonnull %stack_var_-8472)
  store i32 %v3_10004924, i32* %r22.global-to-local, align 4
  %v3_10004934 = call i32 @function_10008940(i32 17, i32* nonnull %stack_var_-8452)
  store i32 %v3_10004934, i32* %r21.global-to-local, align 4
  %v3_10004944 = call i32 @function_10008940(i32 18, i32* nonnull %stack_var_-8448)
  store i32 %v3_10004944, i32* %r20.global-to-local, align 4
  %v3_10004954 = call i32 @function_10008940(i32 19, i32* nonnull %stack_var_-8444)
  store i32 %v3_10004954, i32* %r16.global-to-local, align 4
  %v3_10004964 = call i32 @function_10008940(i32 20, i32* nonnull %stack_var_-8456)
  store i32 %v3_10004964, i32* %r15.global-to-local, align 4
  %v3_10004974 = call i32 @function_10008940(i32 21, i32* nonnull %stack_var_-8488)
  store i32 %v3_10004974, i32* %r14.global-to-local, align 4
  %v3_10004984 = call i32 @function_10008940(i32 22, i32* nonnull %stack_var_-8484)
  %v3_10004994 = call i32 @function_10008940(i32 23, i32* nonnull %stack_var_-8480)
  %v3_100049a4 = call i32 @function_10008940(i32 42, i32* nonnull %stack_var_-8476)
  %v0_100049ac194 = load i32, i32* %r29.global-to-local, align 4
  store i32 268454332, i32* @lr, align 4
  %v3_100049b8195 = call i32 @function_10009c68(i32 %v0_100049ac194, i32 %v2_10004514, i32 4096)
  %tmp180197 = icmp slt i32 %v3_100049b8195, 1
  br i1 %tmp180197, label %dec_label_pc_10004adc, label %dec_label_pc_100049c4

dec_label_pc_100049c4:                            ; preds = %dec_label_pc_1000488c, %dec_label_pc_100049ac.backedge
  %v3_100049b8198 = phi i32 [ %v3_100049b8, %dec_label_pc_100049ac.backedge ], [ %v3_100049b8195, %dec_label_pc_1000488c ]
  %v3_100049bc199.in = phi i32 [ %v3_100049b8, %dec_label_pc_100049ac.backedge ], [ %v3_100049b8195, %dec_label_pc_1000488c ]
  %v3_100049bc199 = icmp eq i32 %v3_100049bc199.in, 0
  %v3_100049c4 = load i32, i32* %stack_var_-8468, align 4
  %v2_100049c8 = icmp slt i32 %v3_100049b8198, %v3_100049c4
  br i1 %v2_100049c8, label %dec_label_pc_10004a08, label %dec_label_pc_100049d0

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_100049c4
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_100049e4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100049e4

dec_label_pc_100049e4:                            ; preds = %dec_label_pc_100049d0, %dec_label_pc_10004a00
  %v0_10004a04 = phi i32 [ %v3_100049b8198, %dec_label_pc_100049d0 ], [ %v1_10004a04, %dec_label_pc_10004a00 ]
  %v0_10004a00 = phi i32 [ %v2_10004514, %dec_label_pc_100049d0 ], [ %v1_10004a00, %dec_label_pc_10004a00 ]
  %v1_100049e4 = phi i32 [ 0, %dec_label_pc_100049d0 ], [ %v1_100049e465, %dec_label_pc_10004a00 ]
  %v2_100049e4 = add i32 %v1_100049e4, %v0_100049e4.pre
  %v3_100049e4 = inttoptr i32 %v2_100049e4 to i8*
  %v4_100049e4 = load i8, i8* %v3_100049e4, align 1
  %v1_100049e8 = add i32 %v1_100049e4, 1
  store i32 %v1_100049e8, i32* %r11.global-to-local, align 4
  %v1_100049ec = inttoptr i32 %v0_10004a00 to i8*
  %v2_100049ec = load i8, i8* %v1_100049ec, align 1
  %v4_100049f4 = icmp eq i8 %v2_100049ec, %v4_100049e4
  br i1 %v4_100049f4, label %dec_label_pc_10004ad4, label %dec_label_pc_100049fc

dec_label_pc_100049fc:                            ; preds = %dec_label_pc_100049e4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004a00

dec_label_pc_10004a00:                            ; preds = %dec_label_pc_10004ad4, %dec_label_pc_100049fc
  %v1_100049e465 = phi i32 [ %v1_100049e8, %dec_label_pc_10004ad4 ], [ 0, %dec_label_pc_100049fc ]
  %v1_10004a00 = add i32 %v0_10004a00, 1
  %v1_10004a04 = add i32 %v0_10004a04, -1
  %v2_10004a04 = icmp eq i32 %v1_10004a04, 0
  br i1 %v2_10004a04, label %dec_label_pc_10004a08, label %dec_label_pc_100049e4

dec_label_pc_10004a08:                            ; preds = %dec_label_pc_10004a00, %dec_label_pc_100049c4
  %v3_10004a08 = load i32, i32* %stack_var_-8464, align 4
  %v2_10004a0c = icmp slt i32 %v3_100049b8198, %v3_10004a08
  br i1 %v2_10004a0c, label %dec_label_pc_10004a4c, label %dec_label_pc_10004a14

dec_label_pc_10004a14:                            ; preds = %dec_label_pc_10004a08
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100049bc199, label %dec_label_pc_10004a4c, label %dec_label_pc_10004a28.preheader

dec_label_pc_10004a28.preheader:                  ; preds = %dec_label_pc_10004a14
  %v0_10004a28.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10004a28

dec_label_pc_10004a28:                            ; preds = %dec_label_pc_10004a28.preheader, %dec_label_pc_10004a48
  %v0_10004a48 = phi i32 [ %v3_100049b8198, %dec_label_pc_10004a28.preheader ], [ %v1_10004a48, %dec_label_pc_10004a48 ]
  %storemerge.in = phi i32 [ %v2_10004514, %dec_label_pc_10004a28.preheader ], [ %storemerge, %dec_label_pc_10004a48 ]
  %v1_10004a28 = phi i32 [ 0, %dec_label_pc_10004a28.preheader ], [ %v1_10004a2871, %dec_label_pc_10004a48 ]
  %v2_10004a28 = add i32 %v1_10004a28, %v0_10004a28.pre
  %v3_10004a28 = inttoptr i32 %v2_10004a28 to i8*
  %v4_10004a28 = load i8, i8* %v3_10004a28, align 1
  %v1_10004a2c = add i32 %v1_10004a28, 1
  store i32 %v1_10004a2c, i32* %r11.global-to-local, align 4
  %v1_10004a30 = inttoptr i32 %storemerge.in to i8*
  %v2_10004a30 = load i8, i8* %v1_10004a30, align 1
  %v4_10004a38 = icmp eq i8 %v2_10004a30, %v4_10004a28
  br i1 %v4_10004a38, label %dec_label_pc_10004b78, label %dec_label_pc_10004a40

dec_label_pc_10004a40:                            ; preds = %dec_label_pc_10004a28
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004a48

dec_label_pc_10004a48:                            ; preds = %dec_label_pc_10004b78, %dec_label_pc_10004a40
  %v1_10004a2871 = phi i32 [ %v1_10004a2c, %dec_label_pc_10004b78 ], [ 0, %dec_label_pc_10004a40 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_10004a48 = add i32 %v0_10004a48, -1
  %v2_10004a48 = icmp eq i32 %v1_10004a48, 0
  br i1 %v2_10004a48, label %dec_label_pc_10004a4c, label %dec_label_pc_10004a28

dec_label_pc_10004a4c:                            ; preds = %dec_label_pc_10004a48, %dec_label_pc_10004a14, %dec_label_pc_10004a08
  %v3_10004a4c = load i32, i32* %stack_var_-8460, align 4
  %v2_10004a50 = icmp slt i32 %v3_100049b8198, %v3_10004a4c
  br i1 %v2_10004a50, label %dec_label_pc_10004a90, label %dec_label_pc_10004a58

dec_label_pc_10004a58:                            ; preds = %dec_label_pc_10004a4c
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100049bc199, label %dec_label_pc_10004a90, label %dec_label_pc_10004a6c.preheader

dec_label_pc_10004a6c.preheader:                  ; preds = %dec_label_pc_10004a58
  %v0_10004a6c.pre = load i32, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10004a6c

dec_label_pc_10004a6c:                            ; preds = %dec_label_pc_10004a6c.preheader, %dec_label_pc_10004a8c
  %v0_10004a8c = phi i32 [ %v3_100049b8198, %dec_label_pc_10004a6c.preheader ], [ %v1_10004a8c, %dec_label_pc_10004a8c ]
  %storemerge3.in = phi i32 [ %v2_10004514, %dec_label_pc_10004a6c.preheader ], [ %storemerge3, %dec_label_pc_10004a8c ]
  %v1_10004a6c = phi i32 [ 0, %dec_label_pc_10004a6c.preheader ], [ %v1_10004a6c77, %dec_label_pc_10004a8c ]
  %v2_10004a6c = add i32 %v1_10004a6c, %v0_10004a6c.pre
  %v3_10004a6c = inttoptr i32 %v2_10004a6c to i8*
  %v4_10004a6c = load i8, i8* %v3_10004a6c, align 1
  %v1_10004a70 = add i32 %v1_10004a6c, 1
  store i32 %v1_10004a70, i32* %r11.global-to-local, align 4
  %v1_10004a74 = inttoptr i32 %storemerge3.in to i8*
  %v2_10004a74 = load i8, i8* %v1_10004a74, align 1
  %v4_10004a7c = icmp eq i8 %v2_10004a74, %v4_10004a6c
  br i1 %v4_10004a7c, label %dec_label_pc_10004b84, label %dec_label_pc_10004a84

dec_label_pc_10004a84:                            ; preds = %dec_label_pc_10004a6c
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004a8c

dec_label_pc_10004a8c:                            ; preds = %dec_label_pc_10004b84, %dec_label_pc_10004a84
  %v1_10004a6c77 = phi i32 [ %v1_10004a70, %dec_label_pc_10004b84 ], [ 0, %dec_label_pc_10004a84 ]
  %storemerge3 = add i32 %storemerge3.in, 1
  %v1_10004a8c = add i32 %v0_10004a8c, -1
  %v2_10004a8c = icmp eq i32 %v1_10004a8c, 0
  br i1 %v2_10004a8c, label %dec_label_pc_10004a90, label %dec_label_pc_10004a6c

dec_label_pc_10004a90:                            ; preds = %dec_label_pc_10004a8c, %dec_label_pc_10004a58, %dec_label_pc_10004a4c
  %v3_10004a90 = load i32, i32* %stack_var_-8472, align 4
  %v2_10004a94 = icmp slt i32 %v3_100049b8198, %v3_10004a90
  br i1 %v2_10004a94, label %dec_label_pc_10004b9c, label %dec_label_pc_10004a9c

dec_label_pc_10004a9c:                            ; preds = %dec_label_pc_10004a90
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100049bc199, label %dec_label_pc_10004b9c, label %dec_label_pc_10004ab0.lr.ph

dec_label_pc_10004ab0.lr.ph:                      ; preds = %dec_label_pc_10004a9c
  %v0_10004ab0.pre = load i32, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10004ab0

dec_label_pc_10004ab0:                            ; preds = %dec_label_pc_10004ab0.lr.ph, %dec_label_pc_10004aac.backedge
  %v0_10004aac = phi i32 [ %v3_100049b8198, %dec_label_pc_10004ab0.lr.ph ], [ %v1_10004aac, %dec_label_pc_10004aac.backedge ]
  %storemerge51.in = phi i32 [ %v2_10004514, %dec_label_pc_10004ab0.lr.ph ], [ %storemerge51, %dec_label_pc_10004aac.backedge ]
  %v1_10004ab0 = phi i32 [ 0, %dec_label_pc_10004ab0.lr.ph ], [ %v1_10004ab083, %dec_label_pc_10004aac.backedge ]
  %v2_10004ab0 = add i32 %v1_10004ab0, %v0_10004ab0.pre
  %v3_10004ab0 = inttoptr i32 %v2_10004ab0 to i8*
  %v4_10004ab0 = load i8, i8* %v3_10004ab0, align 1
  %v1_10004ab4 = add i32 %v1_10004ab0, 1
  store i32 %v1_10004ab4, i32* %r11.global-to-local, align 4
  %v1_10004ab8 = inttoptr i32 %storemerge51.in to i8*
  %v2_10004ab8 = load i8, i8* %v1_10004ab8, align 1
  %v4_10004ac0 = icmp eq i8 %v2_10004ab8, %v4_10004ab0
  br i1 %v4_10004ac0, label %dec_label_pc_10004b90, label %dec_label_pc_10004ac8

dec_label_pc_10004ac8:                            ; preds = %dec_label_pc_10004ab0
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004aac.backedge

dec_label_pc_10004aac.backedge:                   ; preds = %dec_label_pc_10004b90, %dec_label_pc_10004ac8
  %v1_10004ab083 = phi i32 [ 0, %dec_label_pc_10004ac8 ], [ %v1_10004ab4, %dec_label_pc_10004b90 ]
  %storemerge51 = add i32 %storemerge51.in, 1
  %v1_10004aac = add i32 %v0_10004aac, -1
  %v2_10004aac = icmp eq i32 %v1_10004aac, 0
  br i1 %v2_10004aac, label %dec_label_pc_10004b9c, label %dec_label_pc_10004ab0

dec_label_pc_10004ad4:                            ; preds = %dec_label_pc_100049e4
  %v4_100049f0 = icmp eq i32 %v3_100049c4, %v1_100049e8
  br i1 %v4_100049f0, label %dec_label_pc_10004adc, label %dec_label_pc_10004a00

dec_label_pc_10004adc:                            ; preds = %dec_label_pc_1000488c, %dec_label_pc_100049ac.backedge, %dec_label_pc_10004ad4, %dec_label_pc_10004b78, %dec_label_pc_10004b84, %dec_label_pc_10004b90, %dec_label_pc_10004be0, %dec_label_pc_10004c30, %dec_label_pc_10004c80, %dec_label_pc_10004cd0, %dec_label_pc_10004d20, %dec_label_pc_10004d74, %dec_label_pc_10004dc8, %dec_label_pc_10004e1c
  %storemerge4 = phi i32 [ 1, %dec_label_pc_10004e1c ], [ 1, %dec_label_pc_10004dc8 ], [ 1, %dec_label_pc_10004d74 ], [ 1, %dec_label_pc_10004d20 ], [ 1, %dec_label_pc_10004cd0 ], [ 1, %dec_label_pc_10004c80 ], [ 1, %dec_label_pc_10004c30 ], [ 1, %dec_label_pc_10004be0 ], [ 1, %dec_label_pc_10004b90 ], [ 1, %dec_label_pc_10004b84 ], [ 1, %dec_label_pc_10004b78 ], [ 1, %dec_label_pc_10004ad4 ], [ 0, %dec_label_pc_100049ac.backedge ], [ 0, %dec_label_pc_1000488c ]
  store i32 %storemerge4, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004ae4.62 to i32), i32* @lr, align 4
  %v1_10004ae0 = call i32 @function_10008968(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10004aec.63 to i32), i32* @lr, align 4
  %v1_10004ae8 = call i32 @function_10008968(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_10004af4.64 to i32), i32* @lr, align 4
  %v1_10004af0 = call i32 @function_10008968(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_10004afc.65 to i32), i32* @lr, align 4
  %v1_10004af8 = call i32 @function_10008968(i32 16)
  store i32 ptrtoint ([3 x i8]* @global_var_10004b04.66 to i32), i32* @lr, align 4
  %v1_10004b00 = call i32 @function_10008968(i32 17)
  store i32 ptrtoint ([3 x i8]* @global_var_10004b0c.67 to i32), i32* @lr, align 4
  %v1_10004b08 = call i32 @function_10008968(i32 18)
  store i32 ptrtoint ([3 x i8]* @global_var_10004b14.68 to i32), i32* @lr, align 4
  %v1_10004b10 = call i32 @function_10008968(i32 19)
  store i32 ptrtoint ([3 x i8]* @global_var_10004b1c.69 to i32), i32* @lr, align 4
  %v1_10004b18 = call i32 @function_10008968(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_10004b24.70 to i32), i32* @lr, align 4
  %v1_10004b20 = call i32 @function_10008968(i32 21)
  store i32 ptrtoint ([3 x i8]* @global_var_10004b2c.71 to i32), i32* @lr, align 4
  %v1_10004b28 = call i32 @function_10008968(i32 22)
  store i32 ptrtoint ([3 x i8]* @global_var_10004b34.72 to i32), i32* @lr, align 4
  %v1_10004b30 = call i32 @function_10008968(i32 23)
  store i32 268454716, i32* @lr, align 4
  %v1_10004b38 = call i32 @function_10008968(i32 42)
  store i32 268454724, i32* @lr, align 4
  %v0_10004b40 = call i32 @function_10009a30()
  %v0_10004b44 = load i32, i32* @r31, align 4
  %v3_10004b44 = icmp eq i32 %v0_10004b44, 0
  br i1 %v3_10004b44, label %dec_label_pc_10004b4c, label %dec_label_pc_10004e28

dec_label_pc_10004b4c:                            ; preds = %dec_label_pc_10004adc, %dec_label_pc_10004870, %dec_label_pc_10004e28
  store i32 64, i32* @r4, align 4
  store i32 %v2_10004614, i32* @r3, align 4
  store i32 268454744, i32* @lr, align 4
  %v0_10004b54 = call i32 @function_10009318()
  store i32 %v2_10004618, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_10004b60 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10004b60, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004b68.73 to i32), i32* @lr, align 4
  %v0_10004b64 = call i32 @function_10009318()
  store i32 268454768, i32* @lr, align 4
  %v1_10004b6c = call i32 @function_1000b278(i32 1)
  %v0_10004b70 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_10004b70, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004648.backedge

dec_label_pc_10004b78:                            ; preds = %dec_label_pc_10004a28
  %v4_10004a34 = icmp eq i32 %v3_10004a08, %v1_10004a2c
  br i1 %v4_10004a34, label %dec_label_pc_10004adc, label %dec_label_pc_10004a48

dec_label_pc_10004b84:                            ; preds = %dec_label_pc_10004a6c
  %v4_10004a78 = icmp eq i32 %v3_10004a4c, %v1_10004a70
  br i1 %v4_10004a78, label %dec_label_pc_10004adc, label %dec_label_pc_10004a8c

dec_label_pc_10004b90:                            ; preds = %dec_label_pc_10004ab0
  %v4_10004abc = icmp eq i32 %v3_10004a90, %v1_10004ab4
  br i1 %v4_10004abc, label %dec_label_pc_10004adc, label %dec_label_pc_10004aac.backedge

dec_label_pc_10004b9c:                            ; preds = %dec_label_pc_10004aac.backedge, %dec_label_pc_10004a9c, %dec_label_pc_10004a90
  %v3_10004b9c = load i32, i32* %stack_var_-8452, align 4
  %v2_10004ba0 = icmp slt i32 %v3_100049b8198, %v3_10004b9c
  br i1 %v2_10004ba0, label %dec_label_pc_10004bec, label %dec_label_pc_10004ba8

dec_label_pc_10004ba8:                            ; preds = %dec_label_pc_10004b9c
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100049bc199, label %dec_label_pc_10004bec, label %dec_label_pc_10004bbc.lr.ph

dec_label_pc_10004bbc.lr.ph:                      ; preds = %dec_label_pc_10004ba8
  %v0_10004bbc.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10004bbc

dec_label_pc_10004bbc:                            ; preds = %dec_label_pc_10004bbc.lr.ph, %dec_label_pc_10004bb8.backedge
  %v0_10004bb8 = phi i32 [ %v3_100049b8198, %dec_label_pc_10004bbc.lr.ph ], [ %v1_10004bb8, %dec_label_pc_10004bb8.backedge ]
  %storemerge52.in = phi i32 [ %v2_10004514, %dec_label_pc_10004bbc.lr.ph ], [ %storemerge52, %dec_label_pc_10004bb8.backedge ]
  %v1_10004bbc = phi i32 [ 0, %dec_label_pc_10004bbc.lr.ph ], [ %v1_10004bbc89, %dec_label_pc_10004bb8.backedge ]
  %v2_10004bbc = add i32 %v1_10004bbc, %v0_10004bbc.pre
  %v3_10004bbc = inttoptr i32 %v2_10004bbc to i8*
  %v4_10004bbc = load i8, i8* %v3_10004bbc, align 1
  %v1_10004bc0 = add i32 %v1_10004bbc, 1
  store i32 %v1_10004bc0, i32* %r11.global-to-local, align 4
  %v1_10004bc4 = inttoptr i32 %storemerge52.in to i8*
  %v2_10004bc4 = load i8, i8* %v1_10004bc4, align 1
  %v4_10004bcc = icmp eq i8 %v2_10004bc4, %v4_10004bbc
  br i1 %v4_10004bcc, label %dec_label_pc_10004be0, label %dec_label_pc_10004bd4

dec_label_pc_10004bd4:                            ; preds = %dec_label_pc_10004bbc
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004bb8.backedge

dec_label_pc_10004bb8.backedge:                   ; preds = %dec_label_pc_10004be0, %dec_label_pc_10004bd4
  %v1_10004bbc89 = phi i32 [ 0, %dec_label_pc_10004bd4 ], [ %v1_10004bc0, %dec_label_pc_10004be0 ]
  %storemerge52 = add i32 %storemerge52.in, 1
  %v1_10004bb8 = add i32 %v0_10004bb8, -1
  %v2_10004bb8 = icmp eq i32 %v1_10004bb8, 0
  br i1 %v2_10004bb8, label %dec_label_pc_10004bec, label %dec_label_pc_10004bbc

dec_label_pc_10004be0:                            ; preds = %dec_label_pc_10004bbc
  %v4_10004bc8 = icmp eq i32 %v3_10004b9c, %v1_10004bc0
  br i1 %v4_10004bc8, label %dec_label_pc_10004adc, label %dec_label_pc_10004bb8.backedge

dec_label_pc_10004bec:                            ; preds = %dec_label_pc_10004bb8.backedge, %dec_label_pc_10004ba8, %dec_label_pc_10004b9c
  %v3_10004bec = load i32, i32* %stack_var_-8448, align 4
  %v2_10004bf0 = icmp slt i32 %v3_100049b8198, %v3_10004bec
  br i1 %v2_10004bf0, label %dec_label_pc_10004c3c, label %dec_label_pc_10004bf8

dec_label_pc_10004bf8:                            ; preds = %dec_label_pc_10004bec
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100049bc199, label %dec_label_pc_10004c3c, label %dec_label_pc_10004c0c.lr.ph

dec_label_pc_10004c0c.lr.ph:                      ; preds = %dec_label_pc_10004bf8
  %v0_10004c0c.pre = load i32, i32* %r20.global-to-local, align 4
  br label %dec_label_pc_10004c0c

dec_label_pc_10004c0c:                            ; preds = %dec_label_pc_10004c0c.lr.ph, %dec_label_pc_10004c08.backedge
  %v0_10004c08 = phi i32 [ %v3_100049b8198, %dec_label_pc_10004c0c.lr.ph ], [ %v1_10004c08, %dec_label_pc_10004c08.backedge ]
  %storemerge53.in = phi i32 [ %v2_10004514, %dec_label_pc_10004c0c.lr.ph ], [ %storemerge53, %dec_label_pc_10004c08.backedge ]
  %v1_10004c0c = phi i32 [ 0, %dec_label_pc_10004c0c.lr.ph ], [ %v1_10004c0c95, %dec_label_pc_10004c08.backedge ]
  %v2_10004c0c = add i32 %v1_10004c0c, %v0_10004c0c.pre
  %v3_10004c0c = inttoptr i32 %v2_10004c0c to i8*
  %v4_10004c0c = load i8, i8* %v3_10004c0c, align 1
  %v1_10004c10 = add i32 %v1_10004c0c, 1
  store i32 %v1_10004c10, i32* %r11.global-to-local, align 4
  %v1_10004c14 = inttoptr i32 %storemerge53.in to i8*
  %v2_10004c14 = load i8, i8* %v1_10004c14, align 1
  %v4_10004c1c = icmp eq i8 %v2_10004c14, %v4_10004c0c
  br i1 %v4_10004c1c, label %dec_label_pc_10004c30, label %dec_label_pc_10004c24

dec_label_pc_10004c24:                            ; preds = %dec_label_pc_10004c0c
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004c08.backedge

dec_label_pc_10004c08.backedge:                   ; preds = %dec_label_pc_10004c30, %dec_label_pc_10004c24
  %v1_10004c0c95 = phi i32 [ 0, %dec_label_pc_10004c24 ], [ %v1_10004c10, %dec_label_pc_10004c30 ]
  %storemerge53 = add i32 %storemerge53.in, 1
  %v1_10004c08 = add i32 %v0_10004c08, -1
  %v2_10004c08 = icmp eq i32 %v1_10004c08, 0
  br i1 %v2_10004c08, label %dec_label_pc_10004c3c, label %dec_label_pc_10004c0c

dec_label_pc_10004c30:                            ; preds = %dec_label_pc_10004c0c
  %v4_10004c18 = icmp eq i32 %v3_10004bec, %v1_10004c10
  br i1 %v4_10004c18, label %dec_label_pc_10004adc, label %dec_label_pc_10004c08.backedge

dec_label_pc_10004c3c:                            ; preds = %dec_label_pc_10004c08.backedge, %dec_label_pc_10004bf8, %dec_label_pc_10004bec
  %v3_10004c3c = load i32, i32* %stack_var_-8444, align 4
  %v2_10004c40 = icmp slt i32 %v3_100049b8198, %v3_10004c3c
  br i1 %v2_10004c40, label %dec_label_pc_10004c8c, label %dec_label_pc_10004c48

dec_label_pc_10004c48:                            ; preds = %dec_label_pc_10004c3c
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100049bc199, label %dec_label_pc_10004c8c, label %dec_label_pc_10004c5c.lr.ph

dec_label_pc_10004c5c.lr.ph:                      ; preds = %dec_label_pc_10004c48
  %v0_10004c5c.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10004c5c

dec_label_pc_10004c5c:                            ; preds = %dec_label_pc_10004c5c.lr.ph, %dec_label_pc_10004c58.backedge
  %v0_10004c58 = phi i32 [ %v3_100049b8198, %dec_label_pc_10004c5c.lr.ph ], [ %v1_10004c58, %dec_label_pc_10004c58.backedge ]
  %storemerge54.in = phi i32 [ %v2_10004514, %dec_label_pc_10004c5c.lr.ph ], [ %storemerge54, %dec_label_pc_10004c58.backedge ]
  %v1_10004c5c = phi i32 [ 0, %dec_label_pc_10004c5c.lr.ph ], [ %v1_10004c5c101, %dec_label_pc_10004c58.backedge ]
  %v2_10004c5c = add i32 %v1_10004c5c, %v0_10004c5c.pre
  %v3_10004c5c = inttoptr i32 %v2_10004c5c to i8*
  %v4_10004c5c = load i8, i8* %v3_10004c5c, align 1
  %v1_10004c60 = add i32 %v1_10004c5c, 1
  store i32 %v1_10004c60, i32* %r11.global-to-local, align 4
  %v1_10004c64 = inttoptr i32 %storemerge54.in to i8*
  %v2_10004c64 = load i8, i8* %v1_10004c64, align 1
  %v4_10004c6c = icmp eq i8 %v2_10004c64, %v4_10004c5c
  br i1 %v4_10004c6c, label %dec_label_pc_10004c80, label %dec_label_pc_10004c74

dec_label_pc_10004c74:                            ; preds = %dec_label_pc_10004c5c
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004c58.backedge

dec_label_pc_10004c58.backedge:                   ; preds = %dec_label_pc_10004c80, %dec_label_pc_10004c74
  %v1_10004c5c101 = phi i32 [ 0, %dec_label_pc_10004c74 ], [ %v1_10004c60, %dec_label_pc_10004c80 ]
  %storemerge54 = add i32 %storemerge54.in, 1
  %v1_10004c58 = add i32 %v0_10004c58, -1
  %v2_10004c58 = icmp eq i32 %v1_10004c58, 0
  br i1 %v2_10004c58, label %dec_label_pc_10004c8c, label %dec_label_pc_10004c5c

dec_label_pc_10004c80:                            ; preds = %dec_label_pc_10004c5c
  %v4_10004c68 = icmp eq i32 %v3_10004c3c, %v1_10004c60
  br i1 %v4_10004c68, label %dec_label_pc_10004adc, label %dec_label_pc_10004c58.backedge

dec_label_pc_10004c8c:                            ; preds = %dec_label_pc_10004c58.backedge, %dec_label_pc_10004c48, %dec_label_pc_10004c3c
  %v3_10004c8c = load i32, i32* %stack_var_-8456, align 4
  %v2_10004c90 = icmp slt i32 %v3_100049b8198, %v3_10004c8c
  br i1 %v2_10004c90, label %dec_label_pc_10004cdc, label %dec_label_pc_10004c98

dec_label_pc_10004c98:                            ; preds = %dec_label_pc_10004c8c
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100049bc199, label %dec_label_pc_10004cdc, label %dec_label_pc_10004cac.lr.ph

dec_label_pc_10004cac.lr.ph:                      ; preds = %dec_label_pc_10004c98
  %v0_10004cac.pre = load i32, i32* %r15.global-to-local, align 4
  br label %dec_label_pc_10004cac

dec_label_pc_10004cac:                            ; preds = %dec_label_pc_10004cac.lr.ph, %dec_label_pc_10004ca8.backedge
  %v0_10004ca8 = phi i32 [ %v3_100049b8198, %dec_label_pc_10004cac.lr.ph ], [ %v1_10004ca8, %dec_label_pc_10004ca8.backedge ]
  %storemerge55.in = phi i32 [ %v2_10004514, %dec_label_pc_10004cac.lr.ph ], [ %storemerge55, %dec_label_pc_10004ca8.backedge ]
  %v1_10004cac = phi i32 [ 0, %dec_label_pc_10004cac.lr.ph ], [ %v1_10004cac107, %dec_label_pc_10004ca8.backedge ]
  %v2_10004cac = add i32 %v1_10004cac, %v0_10004cac.pre
  %v3_10004cac = inttoptr i32 %v2_10004cac to i8*
  %v4_10004cac = load i8, i8* %v3_10004cac, align 1
  %v1_10004cb0 = add i32 %v1_10004cac, 1
  store i32 %v1_10004cb0, i32* %r11.global-to-local, align 4
  %v1_10004cb4 = inttoptr i32 %storemerge55.in to i8*
  %v2_10004cb4 = load i8, i8* %v1_10004cb4, align 1
  %v4_10004cbc = icmp eq i8 %v2_10004cb4, %v4_10004cac
  br i1 %v4_10004cbc, label %dec_label_pc_10004cd0, label %dec_label_pc_10004cc4

dec_label_pc_10004cc4:                            ; preds = %dec_label_pc_10004cac
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004ca8.backedge

dec_label_pc_10004ca8.backedge:                   ; preds = %dec_label_pc_10004cd0, %dec_label_pc_10004cc4
  %v1_10004cac107 = phi i32 [ 0, %dec_label_pc_10004cc4 ], [ %v1_10004cb0, %dec_label_pc_10004cd0 ]
  %storemerge55 = add i32 %storemerge55.in, 1
  %v1_10004ca8 = add i32 %v0_10004ca8, -1
  %v2_10004ca8 = icmp eq i32 %v1_10004ca8, 0
  br i1 %v2_10004ca8, label %dec_label_pc_10004cdc, label %dec_label_pc_10004cac

dec_label_pc_10004cd0:                            ; preds = %dec_label_pc_10004cac
  %v4_10004cb8 = icmp eq i32 %v3_10004c8c, %v1_10004cb0
  br i1 %v4_10004cb8, label %dec_label_pc_10004adc, label %dec_label_pc_10004ca8.backedge

dec_label_pc_10004cdc:                            ; preds = %dec_label_pc_10004ca8.backedge, %dec_label_pc_10004c98, %dec_label_pc_10004c8c
  %v3_10004cdc = load i32, i32* %stack_var_-8488, align 4
  %v2_10004ce0 = icmp slt i32 %v3_100049b8198, %v3_10004cdc
  br i1 %v2_10004ce0, label %dec_label_pc_10004d2c, label %dec_label_pc_10004ce8

dec_label_pc_10004ce8:                            ; preds = %dec_label_pc_10004cdc
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100049bc199, label %dec_label_pc_10004d2c, label %dec_label_pc_10004cfc.lr.ph

dec_label_pc_10004cfc.lr.ph:                      ; preds = %dec_label_pc_10004ce8
  %v0_10004cfc.pre = load i32, i32* %r14.global-to-local, align 4
  br label %dec_label_pc_10004cfc

dec_label_pc_10004cfc:                            ; preds = %dec_label_pc_10004cfc.lr.ph, %dec_label_pc_10004cf8.backedge
  %v0_10004cf8 = phi i32 [ %v3_100049b8198, %dec_label_pc_10004cfc.lr.ph ], [ %v1_10004cf8, %dec_label_pc_10004cf8.backedge ]
  %storemerge56.in = phi i32 [ %v2_10004514, %dec_label_pc_10004cfc.lr.ph ], [ %storemerge56, %dec_label_pc_10004cf8.backedge ]
  %v1_10004cfc = phi i32 [ 0, %dec_label_pc_10004cfc.lr.ph ], [ %v1_10004cfc113, %dec_label_pc_10004cf8.backedge ]
  %v2_10004cfc = add i32 %v1_10004cfc, %v0_10004cfc.pre
  %v3_10004cfc = inttoptr i32 %v2_10004cfc to i8*
  %v4_10004cfc = load i8, i8* %v3_10004cfc, align 1
  %v1_10004d00 = add i32 %v1_10004cfc, 1
  store i32 %v1_10004d00, i32* %r11.global-to-local, align 4
  %v1_10004d04 = inttoptr i32 %storemerge56.in to i8*
  %v2_10004d04 = load i8, i8* %v1_10004d04, align 1
  %v4_10004d0c = icmp eq i8 %v2_10004d04, %v4_10004cfc
  br i1 %v4_10004d0c, label %dec_label_pc_10004d20, label %dec_label_pc_10004d14

dec_label_pc_10004d14:                            ; preds = %dec_label_pc_10004cfc
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004cf8.backedge

dec_label_pc_10004cf8.backedge:                   ; preds = %dec_label_pc_10004d20, %dec_label_pc_10004d14
  %v1_10004cfc113 = phi i32 [ 0, %dec_label_pc_10004d14 ], [ %v1_10004d00, %dec_label_pc_10004d20 ]
  %storemerge56 = add i32 %storemerge56.in, 1
  %v1_10004cf8 = add i32 %v0_10004cf8, -1
  %v2_10004cf8 = icmp eq i32 %v1_10004cf8, 0
  br i1 %v2_10004cf8, label %dec_label_pc_10004d2c, label %dec_label_pc_10004cfc

dec_label_pc_10004d20:                            ; preds = %dec_label_pc_10004cfc
  %v4_10004d08 = icmp eq i32 %v3_10004cdc, %v1_10004d00
  br i1 %v4_10004d08, label %dec_label_pc_10004adc, label %dec_label_pc_10004cf8.backedge

dec_label_pc_10004d2c:                            ; preds = %dec_label_pc_10004cf8.backedge, %dec_label_pc_10004ce8, %dec_label_pc_10004cdc
  %v3_10004d2c = load i32, i32* %stack_var_-8484, align 4
  %v2_10004d30 = icmp slt i32 %v3_100049b8198, %v3_10004d2c
  br i1 %v2_10004d30, label %dec_label_pc_10004d80, label %dec_label_pc_10004d38

dec_label_pc_10004d38:                            ; preds = %dec_label_pc_10004d2c
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100049bc199, label %dec_label_pc_10004d80, label %dec_label_pc_10004d4c

dec_label_pc_10004d4c:                            ; preds = %dec_label_pc_10004d38, %dec_label_pc_10004d48.backedge
  %v0_10004d48 = phi i32 [ %v1_10004d48, %dec_label_pc_10004d48.backedge ], [ %v3_100049b8198, %dec_label_pc_10004d38 ]
  %storemerge57.in = phi i32 [ %storemerge57, %dec_label_pc_10004d48.backedge ], [ %v2_10004514, %dec_label_pc_10004d38 ]
  %v0_10004d50 = phi i32 [ %v0_10004d50118, %dec_label_pc_10004d48.backedge ], [ 0, %dec_label_pc_10004d38 ]
  %v2_10004d50 = add i32 %v0_10004d50, %v3_10004984
  %v3_10004d50 = inttoptr i32 %v2_10004d50 to i8*
  %v4_10004d50 = load i8, i8* %v3_10004d50, align 1
  %v1_10004d54 = add i32 %v0_10004d50, 1
  store i32 %v1_10004d54, i32* %r11.global-to-local, align 4
  %v1_10004d58 = inttoptr i32 %storemerge57.in to i8*
  %v2_10004d58 = load i8, i8* %v1_10004d58, align 1
  %v4_10004d60 = icmp eq i8 %v2_10004d58, %v4_10004d50
  br i1 %v4_10004d60, label %dec_label_pc_10004d74, label %dec_label_pc_10004d68

dec_label_pc_10004d68:                            ; preds = %dec_label_pc_10004d4c
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004d48.backedge

dec_label_pc_10004d48.backedge:                   ; preds = %dec_label_pc_10004d74, %dec_label_pc_10004d68
  %v0_10004d50118 = phi i32 [ 0, %dec_label_pc_10004d68 ], [ %v1_10004d54, %dec_label_pc_10004d74 ]
  %storemerge57 = add i32 %storemerge57.in, 1
  %v1_10004d48 = add i32 %v0_10004d48, -1
  %v2_10004d48 = icmp eq i32 %v1_10004d48, 0
  br i1 %v2_10004d48, label %dec_label_pc_10004d80, label %dec_label_pc_10004d4c

dec_label_pc_10004d74:                            ; preds = %dec_label_pc_10004d4c
  %v4_10004d5c = icmp eq i32 %v3_10004d2c, %v1_10004d54
  br i1 %v4_10004d5c, label %dec_label_pc_10004adc, label %dec_label_pc_10004d48.backedge

dec_label_pc_10004d80:                            ; preds = %dec_label_pc_10004d48.backedge, %dec_label_pc_10004d38, %dec_label_pc_10004d2c
  %v3_10004d80 = load i32, i32* %stack_var_-8480, align 4
  %v2_10004d84 = icmp slt i32 %v3_100049b8198, %v3_10004d80
  br i1 %v2_10004d84, label %dec_label_pc_10004dd4, label %dec_label_pc_10004d8c

dec_label_pc_10004d8c:                            ; preds = %dec_label_pc_10004d80
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100049bc199, label %dec_label_pc_10004dd4, label %dec_label_pc_10004da0

dec_label_pc_10004da0:                            ; preds = %dec_label_pc_10004d8c, %dec_label_pc_10004d9c.backedge
  %v0_10004d9c = phi i32 [ %v1_10004d9c, %dec_label_pc_10004d9c.backedge ], [ %v3_100049b8198, %dec_label_pc_10004d8c ]
  %storemerge58.in = phi i32 [ %storemerge58, %dec_label_pc_10004d9c.backedge ], [ %v2_10004514, %dec_label_pc_10004d8c ]
  %v0_10004da4 = phi i32 [ %v0_10004da4123, %dec_label_pc_10004d9c.backedge ], [ 0, %dec_label_pc_10004d8c ]
  %v2_10004da4 = add i32 %v0_10004da4, %v3_10004994
  %v3_10004da4 = inttoptr i32 %v2_10004da4 to i8*
  %v4_10004da4 = load i8, i8* %v3_10004da4, align 1
  %v1_10004da8 = add i32 %v0_10004da4, 1
  store i32 %v1_10004da8, i32* %r11.global-to-local, align 4
  %v1_10004dac = inttoptr i32 %storemerge58.in to i8*
  %v2_10004dac = load i8, i8* %v1_10004dac, align 1
  %v4_10004db4 = icmp eq i8 %v2_10004dac, %v4_10004da4
  br i1 %v4_10004db4, label %dec_label_pc_10004dc8, label %dec_label_pc_10004dbc

dec_label_pc_10004dbc:                            ; preds = %dec_label_pc_10004da0
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004d9c.backedge

dec_label_pc_10004d9c.backedge:                   ; preds = %dec_label_pc_10004dc8, %dec_label_pc_10004dbc
  %v0_10004da4123 = phi i32 [ 0, %dec_label_pc_10004dbc ], [ %v1_10004da8, %dec_label_pc_10004dc8 ]
  %storemerge58 = add i32 %storemerge58.in, 1
  %v1_10004d9c = add i32 %v0_10004d9c, -1
  %v2_10004d9c = icmp eq i32 %v1_10004d9c, 0
  br i1 %v2_10004d9c, label %dec_label_pc_10004dd4, label %dec_label_pc_10004da0

dec_label_pc_10004dc8:                            ; preds = %dec_label_pc_10004da0
  %v4_10004db0 = icmp eq i32 %v3_10004d80, %v1_10004da8
  br i1 %v4_10004db0, label %dec_label_pc_10004adc, label %dec_label_pc_10004d9c.backedge

dec_label_pc_10004dd4:                            ; preds = %dec_label_pc_10004d9c.backedge, %dec_label_pc_10004d8c, %dec_label_pc_10004d80
  %v3_10004dd4 = load i32, i32* %stack_var_-8476, align 4
  %v2_10004dd8 = icmp slt i32 %v3_100049b8198, %v3_10004dd4
  br i1 %v2_10004dd8, label %dec_label_pc_100049ac.backedge, label %dec_label_pc_10004de0

dec_label_pc_10004de0:                            ; preds = %dec_label_pc_10004dd4
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100049bc199, label %dec_label_pc_100049ac.backedge, label %dec_label_pc_10004df4

dec_label_pc_100049ac.backedge:                   ; preds = %dec_label_pc_10004df0.backedge, %dec_label_pc_10004de0, %dec_label_pc_10004dd4
  %v0_100049ac = load i32, i32* %r29.global-to-local, align 4
  store i32 268454332, i32* @lr, align 4
  %v3_100049b8 = call i32 @function_10009c68(i32 %v0_100049ac, i32 %v2_10004514, i32 4096)
  %tmp180 = icmp slt i32 %v3_100049b8, 1
  br i1 %tmp180, label %dec_label_pc_10004adc, label %dec_label_pc_100049c4

dec_label_pc_10004df4:                            ; preds = %dec_label_pc_10004de0, %dec_label_pc_10004df0.backedge
  %v0_10004df0 = phi i32 [ %v1_10004df0, %dec_label_pc_10004df0.backedge ], [ %v3_100049b8198, %dec_label_pc_10004de0 ]
  %storemerge59.in = phi i32 [ %storemerge59, %dec_label_pc_10004df0.backedge ], [ %v2_10004514, %dec_label_pc_10004de0 ]
  %v0_10004df8 = phi i32 [ %v0_10004df8128, %dec_label_pc_10004df0.backedge ], [ 0, %dec_label_pc_10004de0 ]
  %v2_10004df8 = add i32 %v0_10004df8, %v3_100049a4
  %v3_10004df8 = inttoptr i32 %v2_10004df8 to i8*
  %v4_10004df8 = load i8, i8* %v3_10004df8, align 1
  %v1_10004dfc = add i32 %v0_10004df8, 1
  store i32 %v1_10004dfc, i32* %r11.global-to-local, align 4
  %v1_10004e00 = inttoptr i32 %storemerge59.in to i8*
  %v2_10004e00 = load i8, i8* %v1_10004e00, align 1
  %v4_10004e08 = icmp eq i8 %v2_10004e00, %v4_10004df8
  br i1 %v4_10004e08, label %dec_label_pc_10004e1c, label %dec_label_pc_10004e10

dec_label_pc_10004e10:                            ; preds = %dec_label_pc_10004df4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004df0.backedge

dec_label_pc_10004df0.backedge:                   ; preds = %dec_label_pc_10004e1c, %dec_label_pc_10004e10
  %v0_10004df8128 = phi i32 [ 0, %dec_label_pc_10004e10 ], [ %v1_10004dfc, %dec_label_pc_10004e1c ]
  %storemerge59 = add i32 %storemerge59.in, 1
  %v1_10004df0 = add i32 %v0_10004df0, -1
  %v2_10004df0 = icmp eq i32 %v1_10004df0, 0
  br i1 %v2_10004df0, label %dec_label_pc_100049ac.backedge, label %dec_label_pc_10004df4

dec_label_pc_10004e1c:                            ; preds = %dec_label_pc_10004df4
  %v4_10004e04 = icmp eq i32 %v3_10004dd4, %v1_10004dfc
  br i1 %v4_10004e04, label %dec_label_pc_10004adc, label %dec_label_pc_10004df0.backedge

dec_label_pc_10004e28:                            ; preds = %dec_label_pc_10004adc
  %v0_10004e28 = load i32, i32* %r30.global-to-local, align 4
  store i32 268455476, i32* @lr, align 4
  %v2_10004e30 = call i32 @function_10009b50(i32 %v0_10004e28, i32 9)
  br label %dec_label_pc_10004b4c

dec_label_pc_10004e38:                            ; preds = %dec_label_pc_1000484c
  %v0_10004e38 = load i32, i32* %r30.global-to-local, align 4
  store i32 268455492, i32* @lr, align 4
  %v2_10004e40 = call i32 @function_10009b50(i32 %v0_10004e38, i32 9)
  br label %dec_label_pc_10004868

; uselistorder directives
  uselistorder i32 %v1_10004df0, { 1, 0 }
  uselistorder i32 %v1_10004dfc, { 1, 0, 2 }
  uselistorder i32 %v0_10004df8, { 1, 0 }
  uselistorder i32 %v3_100049b8, { 2, 1, 0 }
  uselistorder i32 %v1_10004d9c, { 1, 0 }
  uselistorder i32 %v1_10004da8, { 1, 0, 2 }
  uselistorder i32 %v0_10004da4, { 1, 0 }
  uselistorder i32 %v1_10004d48, { 1, 0 }
  uselistorder i32 %v1_10004d54, { 1, 0, 2 }
  uselistorder i32 %v0_10004d50, { 1, 0 }
  uselistorder i32 %v1_10004cf8, { 1, 0 }
  uselistorder i32 %v1_10004d00, { 1, 0, 2 }
  uselistorder i32 %v1_10004cfc, { 1, 0 }
  uselistorder i32 %v1_10004ca8, { 1, 0 }
  uselistorder i32 %v1_10004cb0, { 1, 0, 2 }
  uselistorder i32 %v1_10004cac, { 1, 0 }
  uselistorder i32 %v1_10004c58, { 1, 0 }
  uselistorder i32 %v1_10004c60, { 1, 0, 2 }
  uselistorder i32 %v1_10004c5c, { 1, 0 }
  uselistorder i32 %v1_10004c08, { 1, 0 }
  uselistorder i32 %v1_10004c10, { 1, 0, 2 }
  uselistorder i32 %v1_10004c0c, { 1, 0 }
  uselistorder i32 %v1_10004bb8, { 1, 0 }
  uselistorder i32 %v1_10004bc0, { 1, 0, 2 }
  uselistorder i32 %v1_10004bbc, { 1, 0 }
  uselistorder i32 %v1_10004aac, { 1, 0 }
  uselistorder i32 %v1_10004ab4, { 1, 0, 2 }
  uselistorder i32 %v1_10004ab0, { 1, 0 }
  uselistorder i32 %v1_10004a8c, { 1, 0 }
  uselistorder i32 %v1_10004a6c, { 1, 0 }
  uselistorder i32 %v1_10004a48, { 1, 0 }
  uselistorder i32 %v1_10004a28, { 1, 0 }
  uselistorder i32 %v1_10004a04, { 1, 0 }
  uselistorder i32 %v1_100049e4, { 1, 0 }
  uselistorder i1 %v3_100049bc199, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32 %v3_100049b8198, { 0, 14, 1, 8, 2, 5, 23, 7, 22, 12, 21, 3, 20, 10, 19, 4, 18, 13, 17, 11, 16, 9, 15, 6 }
  uselistorder i32 %v2_1000464c, { 1, 0 }
  uselistorder i32 %v2_100046a4, { 1, 0 }
  uselistorder i32 %v1_10004660, { 1, 0 }
  uselistorder i32 %v2_1000461c, { 1, 0, 2 }
  uselistorder i32 %v2_10004588, { 1, 0, 2 }
  uselistorder i32 %v2_10004564, { 1, 0, 2 }
  uselistorder i32 %v2_10004514, { 0, 13, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 14, 15, 16, 17, 18 }
  uselistorder i32 %v0_10004448, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-8440, { 1, 0 }
  uselistorder i32* %stack_var_-8468, { 1, 0 }
  uselistorder i32* %stack_var_-8464, { 1, 0 }
  uselistorder i32* %stack_var_-8460, { 1, 0 }
  uselistorder i32* %stack_var_-8472, { 1, 0 }
  uselistorder i32* %stack_var_-8452, { 1, 0 }
  uselistorder i32* %stack_var_-8448, { 1, 0 }
  uselistorder i32* %stack_var_-8444, { 1, 0 }
  uselistorder i32* %stack_var_-8456, { 1, 0 }
  uselistorder i32* %stack_var_-8488, { 1, 0 }
  uselistorder i32* %stack_var_-8484, { 1, 0 }
  uselistorder i32* %stack_var_-8480, { 1, 0 }
  uselistorder i32* %stack_var_-8476, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6, 8 }
  uselistorder i32* %r29.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 19, 18, 20, 22, 21, 23, 25, 24, 26, 28, 27, 29, 31, 30, 32, 34, 33, 35, 36, 37, 38 }
  uselistorder i32 268454332, { 1, 0 }
  uselistorder i32 (i32*)* @function_1000a08c, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268453456, { 1, 0 }
  uselistorder i32 (i32)* @function_10009f7c, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009cb0, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10004df4, { 1, 0 }
  uselistorder label %dec_label_pc_10004da0, { 1, 0 }
  uselistorder label %dec_label_pc_10004d4c, { 1, 0 }
  uselistorder label %dec_label_pc_10004cfc, { 1, 0 }
  uselistorder label %dec_label_pc_10004cac, { 1, 0 }
  uselistorder label %dec_label_pc_10004c5c, { 1, 0 }
  uselistorder label %dec_label_pc_10004c0c, { 1, 0 }
  uselistorder label %dec_label_pc_10004bbc, { 1, 0 }
  uselistorder label %dec_label_pc_10004b4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004adc, { 13, 1, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder label %dec_label_pc_10004ab0, { 1, 0 }
  uselistorder label %dec_label_pc_10004a6c, { 1, 0 }
  uselistorder label %dec_label_pc_10004a28, { 1, 0 }
  uselistorder label %dec_label_pc_100049e4, { 1, 0 }
  uselistorder label %dec_label_pc_100049c4, { 1, 0 }
  uselistorder label %dec_label_pc_10004870, { 1, 0 }
  uselistorder label %dec_label_pc_10004868, { 1, 0 }
  uselistorder label %dec_label_pc_10004648.backedge, { 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_100047d8, { 1, 0 }
  uselistorder label %dec_label_pc_10004658, { 1, 0 }
  uselistorder label %dec_label_pc_10004658.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100045f8, { 1, 0 }
  uselistorder label %dec_label_pc_10004510, { 1, 0 }
}

define i32 @function_10004e50() local_unnamed_addr {
dec_label_pc_10004e50:
  store i32 268456016, i32* @global_var_1001d168.74, align 4
  %v0_10004e60 = load i32, i32* @r3, align 4
  ret i32 %v0_10004e60
}

define i32 @function_10004e64(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004e64:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v0_10004e84 = load i32, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  store i32 268566528, i32* @r28, align 4
  %v0_10004e94 = load i32, i32* @r31, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_10004ea0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10004ea0, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268455596, i32* @lr, align 4
  %v3_10004ea8 = call i32 @function_1000a780(i32 2, i32 1, i32 0)
  %v3_10004eac = icmp eq i32 %v3_10004ea8, -1
  store i32 %v3_10004ea8, i32* @global_var_1001d160.75, align 4
  br i1 %v3_10004eac, label %dec_label_pc_10004f5c, label %dec_label_pc_10004ec8

dec_label_pc_10004ec8:                            ; preds = %dec_label_pc_10004e64
  %v2_10004eb0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268455628, i32* @lr, align 4
  %v5_10004ec8 = call i32 @function_1000a744(i32 %v3_10004ea8, i32 1, i32 2, i32 %v2_10004eb0)
  %v3_10004ecc = load i32, i32* @global_var_1001d160.75, align 4
  store i32 3, i32* @r4, align 4
  store i32 268455652, i32* @lr, align 4
  %v2_10004ee0 = call i32 @function_10009948(i32 %v3_10004ecc)
  store i32 4, i32* @r4, align 4
  store i32 268455672, i32* @lr, align 4
  %v2_10004ef4 = call i32 @function_10009948(i32 %v3_10004ecc)
  %v3_10004ef8 = load i8, i8* @global_var_1001d020.76, align 1
  %v3_10004f00 = icmp eq i8 %v3_10004ef8, 0
  br i1 %v3_10004f00, label %dec_label_pc_10004f80, label %dec_label_pc_10004f0c

dec_label_pc_10004f0c:                            ; preds = %dec_label_pc_10004ec8
  store i32 2, i32* %stack_var_-52, align 4
  %v0_10004f20 = call i32 @function_1000a14c()
  %v0_10004f24 = load i32, i32* @r27, align 4
  %v2_10004f24 = inttoptr i32 %v0_10004f20 to i32*
  store i32 %v0_10004f24, i32* %v2_10004f24, align 4
  store i32 %v0_10004f20, i32* @r29, align 4
  %v3_10004f34 = load i32, i32* @global_var_1001d160.75, align 4
  store i32 268455740, i32* @lr, align 4
  %v3_10004f38 = call i32 @function_1000a54c(i32 %v3_10004f34, i32 %v2_10004ea0, i32 16)
  %v3_10004f40 = icmp eq i32 %v3_10004f38, -1
  br i1 %v3_10004f40, label %dec_label_pc_10004fc8, label %dec_label_pc_10004f4c

dec_label_pc_10004f4c:                            ; preds = %dec_label_pc_10004f80, %dec_label_pc_10004f0c
  %v3_10004f54 = load i32, i32* @global_var_1001d160.75, align 4
  store i32 268455772, i32* @lr, align 4
  %v2_10004f58 = call i32 @function_1000a624(i32 %v3_10004f54, i32 1)
  br label %dec_label_pc_10004f5c

dec_label_pc_10004f5c:                            ; preds = %dec_label_pc_10004e64, %dec_label_pc_10004f4c
  %v0_10004f7c = phi i32 [ -1, %dec_label_pc_10004e64 ], [ %v2_10004f58, %dec_label_pc_10004f4c ]
  store i32 %v0_10004e84, i32* @r28, align 4
  store i32 %v0_10004e94, i32* @r31, align 4
  ret i32 %v0_10004f7c

dec_label_pc_10004f80:                            ; preds = %dec_label_pc_10004ec8
  store i32 2, i32* %stack_var_-52, align 4
  %v0_10004f9c = call i32 @function_1000a14c()
  %v0_10004fa0 = load i32, i32* @r27, align 4
  %v2_10004fa0 = inttoptr i32 %v0_10004f9c to i32*
  store i32 %v0_10004fa0, i32* %v2_10004fa0, align 4
  store i32 %v0_10004f9c, i32* @r29, align 4
  %v3_10004fb0 = load i32, i32* @global_var_1001d160.75, align 4
  store i32 268455864, i32* @lr, align 4
  %v3_10004fb4 = call i32 @function_1000a54c(i32 %v3_10004fb0, i32 %v2_10004ea0, i32 16)
  %v3_10004fbc = icmp eq i32 %v3_10004fb4, -1
  br i1 %v3_10004fbc, label %dec_label_pc_10004fc8, label %dec_label_pc_10004f4c

dec_label_pc_10004fc8:                            ; preds = %dec_label_pc_10004f80, %dec_label_pc_10004f0c
  %v0_10004fc8 = load i32, i32* @r29, align 4
  %v1_10004fc8 = inttoptr i32 %v0_10004fc8 to i32*
  %v2_10004fc8 = load i32, i32* %v1_10004fc8, align 4
  %v3_10004fcc = load i32, i32* @global_var_1001d160.75, align 4
  store i32 %v3_10004fcc, i32* @r3, align 4
  %v3_10004fd0 = icmp eq i32 %v2_10004fc8, 99
  br i1 %v3_10004fd0, label %dec_label_pc_10005038, label %dec_label_pc_10004fd8

dec_label_pc_10004fd8:                            ; preds = %dec_label_pc_10005038, %dec_label_pc_10004fc8, %dec_label_pc_10005044
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004ff4.77 to i32), i32* @lr, align 4
  %v0_10004ff0 = call i32 @function_1000a580()
  store i32 268455932, i32* @lr, align 4
  %v1_10004ff8 = call i32 @function_1000b278(i32 5)
  store i32 ptrtoint ([3 x i8]* @global_var_10005004.78 to i32), i32* @lr, align 4
  %v0_10005000 = call i32 @function_10009a30()
  store i32 268455952, i32* @lr, align 4
  %v1_1000500c = call i32 @function_10003df0(i32 48101)
  store i32 268455956, i32* @lr, align 4
  %v1_10005010 = call i32 @function_10004e64(i32 %v1_1000500c)
  store i32 %v0_10004e84, i32* @r28, align 4
  store i32 %v0_10004e94, i32* @r31, align 4
  ret i32 %v1_10005010

dec_label_pc_10005038:                            ; preds = %dec_label_pc_10004fc8
  %v3_10005038 = load i8, i8* @global_var_1001d020.76, align 1
  %v3_1000503c = icmp eq i8 %v3_10005038, 0
  br i1 %v3_1000503c, label %dec_label_pc_10004fd8, label %dec_label_pc_10005044

dec_label_pc_10005044:                            ; preds = %dec_label_pc_10005038
  %v0_10005048 = load i32, i32* @r27, align 4
  %v1_10005048 = trunc i32 %v0_10005048 to i8
  store i8 %v1_10005048, i8* @global_var_1001d020.76, align 1
  br label %dec_label_pc_10004fd8

; uselistorder directives
  uselistorder i32 %v2_10004ea0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32)* @function_10003df0, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000a624, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000a54c, { 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001d020.76, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004fd8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004f5c, { 1, 0 }
}

define i32 @function_10005050() local_unnamed_addr {
dec_label_pc_10005050:
  %r28.global-to-local = alloca i32, align 4
  store i32 268456048, i32* @lr, align 4
  %v1_1000506c = call i32 @function_100089f4(i32 3)
  %v3_10005078 = call i32 @function_10008940(i32 3, i32* null)
  store i32 268456064, i32* @lr, align 4
  %v1_1000507c = call i32 @function_10005bb0(i32 %v3_10005078)
  store i32 %v1_1000507c, i32* @r31, align 4
  store i32 268456076, i32* @lr, align 4
  %v1_10005088 = call i32 @function_10008968(i32 3)
  %v0_1000508c = load i32, i32* @r31, align 4
  %v3_1000508c = icmp eq i32 %v0_1000508c, 0
  br i1 %v3_1000508c, label %dec_label_pc_100050f0, label %dec_label_pc_10005094

dec_label_pc_10005094:                            ; preds = %dec_label_pc_10005050
  %v1_10005094 = add i32 %v0_1000508c, 4
  %v2_10005094 = inttoptr i32 %v1_10005094 to i32*
  %v3_10005094 = load i32, i32* %v2_10005094, align 4
  store i32 %v3_10005094, i32* %r28.global-to-local, align 4
  %v0_10005098 = call i32 @function_10005998()
  %v0_1000509c = load i32, i32* @r31, align 4
  %v1_1000509c = inttoptr i32 %v0_1000509c to i8*
  %v2_1000509c = load i8, i8* %v1_1000509c, align 1
  %v3_1000509c = zext i8 %v2_1000509c to i32
  %v2_100050a8 = urem i32 %v0_10005098, %v3_1000509c
  %v1_100050bc = mul nuw nsw i32 %v2_100050a8, 4
  %v1_100050c0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100050c0 = add i32 %v1_100050c0, %v1_100050bc
  %v3_100050c0 = inttoptr i32 %v2_100050c0 to i32*
  %v4_100050c0 = load i32, i32* %v3_100050c0, align 4
  store i32 %v4_100050c0, i32* @global_var_1001d264.81, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100050cc.82 to i32), i32* @lr, align 4
  %v1_100050c8 = call i32 @function_10005b6c(i32 %v0_1000509c)
  store i32 ptrtoint ([3 x i8]* @global_var_100050d4.83 to i32), i32* @lr, align 4
  %v1_100050d0 = call i32 @function_100089f4(i32 4)
  %v3_100050dc = call i32 @function_10008940(i32 4, i32* null)
  %v4_100050dc = inttoptr i32 %v3_100050dc to i16*
  %v3_100050e0 = load i16, i16* %v4_100050dc, align 2
  store i16 %v3_100050e0, i16* bitcast (i32* @global_var_1001d262.84 to i16*), align 4
  store i32 268456176, i32* @lr, align 4
  %v1_100050ec = call i32 @function_10008968(i32 4)
  br label %dec_label_pc_100050f0

dec_label_pc_100050f0:                            ; preds = %dec_label_pc_10005050, %dec_label_pc_10005094
  %v0_10005108 = phi i32 [ %v1_10005088, %dec_label_pc_10005050 ], [ %v1_100050ec, %dec_label_pc_10005094 ]
  ret i32 %v0_10005108

; uselistorder directives
  uselistorder label %dec_label_pc_100050f0, { 1, 0 }
}

define i32 @function_1000510c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000510c:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r20.global-to-local, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r16.global-to-local, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1612 = alloca i32, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1608 = alloca i32, align 4
  %stack_var_-1264 = alloca i32, align 4
  %stack_var_-1392 = alloca i32, align 4
  %stack_var_-1620 = alloca i32, align 4
  %stack_var_-1624 = alloca i16, align 2
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000510c = load i32, i32* @lr, align 4
  store i32 %v0_1000510c, i32* %r0.global-to-local, align 4
  %v0_10005114 = load i32, i32* @r31, align 4
  store i32 268456224, i32* @lr, align 4
  %v0_1000511c = call i32 @function_10009a78()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_1000511c, i32* @global_var_1001d198.85, align 4
  %tmp47 = icmp slt i32 %v0_1000511c, 1
  br i1 %tmp47, label %dec_label_pc_10005144, label %dec_label_pc_10005130

dec_label_pc_10005130:                            ; preds = %dec_label_pc_10005144, %dec_label_pc_1000510c
  store i32 %v0_1000510c, i32* %r0.global-to-local, align 4
  store i32 %v0_10005114, i32* @r31, align 4
  ret i32 %v0_1000511c

dec_label_pc_10005144:                            ; preds = %dec_label_pc_1000510c
  %v3_10005144 = icmp eq i32 %v0_1000511c, -1
  br i1 %v3_10005144, label %dec_label_pc_10005130, label %dec_label_pc_1000514c

dec_label_pc_1000514c:                            ; preds = %dec_label_pc_10005144
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000515c.86 to i32), i32* @lr, align 4
  %v1_10005158 = call i32 @function_100089f4(i32 13)
  store i32 268456292, i32* @lr, align 4
  %v1_10005160 = call i32 @function_100089f4(i32 14)
  %v3_1000516c = call i32 @function_10008940(i32 13, i32* null)
  store i32 268456316, i32* @lr, align 4
  %v2_10005178 = call i32 @function_10009b98(i32 %v3_1000516c, i32 2)
  %v3_1000517c = icmp eq i32 %v2_10005178, -1
  store i32 %v2_10005178, i32* @r31, align 4
  br i1 %v3_1000517c, label %dec_label_pc_100051c4, label %dec_label_pc_10005188

dec_label_pc_10005188:                            ; preds = %dec_label_pc_100051c4, %dec_label_pc_1000514c
  %v0_1000518c = phi i32 [ %v2_100051d8, %dec_label_pc_100051c4 ], [ %v2_10005178, %dec_label_pc_1000514c ]
  %v2_10005194 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10005194, i32* %r5.global-to-local, align 4
  store i32 268456352, i32* @lr, align 4
  %v3_1000519c = call i32 @function_10009860(i32 %v0_1000518c, i32 -2147199228, i32 %v2_10005194)
  br label %dec_label_pc_100051a0

dec_label_pc_100051a0:                            ; preds = %dec_label_pc_100051a0, %dec_label_pc_10005188
  %v0_100051a4 = load i32, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100051b8.87 to i32), i32* @lr, align 4
  %v3_100051b4 = call i32 @function_10009860(i32 %v0_100051a4, i32 -2147199227, i32 0)
  store i32 268456384, i32* @lr, align 4
  %v1_100051bc = call i32 @function_1000b278(i32 10)
  br label %dec_label_pc_100051a0

dec_label_pc_100051c4:                            ; preds = %dec_label_pc_1000514c
  %v3_100051cc = call i32 @function_10008940(i32 14, i32* null)
  store i32 268456412, i32* @lr, align 4
  %v2_100051d8 = call i32 @function_10009b98(i32 %v3_100051cc, i32 2)
  %v3_100051dc = icmp eq i32 %v2_100051d8, -1
  store i32 %v2_100051d8, i32* @r31, align 4
  br i1 %v3_100051dc, label %dec_label_pc_100051e8, label %dec_label_pc_10005188

dec_label_pc_100051e8:                            ; preds = %dec_label_pc_100051c4
  store i32 ptrtoint ([3 x i8]* @global_var_100051f0.88 to i32), i32* @lr, align 4
  %v1_100051ec = call i32 @function_10008968(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_100051f8.89 to i32), i32* @lr, align 4
  %v1_100051f4 = call i32 @function_10008968(i32 14)
  %v0_100051fc = call i32 @function_1000b1f4()
  %v0_10005204 = load i32, i32* @lr, align 4
  %v0_10005208 = load i32, i32* @r29, align 4
  %v2_1000520c = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_1000520c, i32* @r29, align 4
  %v0_10005210 = load i32, i32* @r28, align 4
  store i32 %v0_100051fc, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-1620, align 4
  %v0_10005230 = load i32, i32* @r22, align 4
  store i32 268566528, i32* @r22, align 4
  %v0_10005238 = load i32, i32* @r24, align 4
  %v2_1000523c = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_1000523c, i32* @r24, align 4
  %v0_10005240 = load i32, i32* @r25, align 4
  store i32 268566528, i32* @r25, align 4
  %v0_10005248 = load i32, i32* @r31, align 4
  store i32 2, i32* @r31, align 4
  %v0_10005250 = load i32, i32* @r15, align 4
  %v0_10005254 = load i32, i32* %r16.global-to-local, align 4
  %v0_10005258 = load i32, i32* %r17.global-to-local, align 4
  %v0_1000525c = load i32, i32* %r18.global-to-local, align 4
  %v0_10005260 = load i32, i32* %r19.global-to-local, align 4
  %v0_10005264 = load i32, i32* %r20.global-to-local, align 4
  %v0_10005268 = load i32, i32* @r23, align 4
  %v0_1000526c = load i32, i32* @r26, align 4
  %v0_10005270 = load i32, i32* @r27, align 4
  %v0_10005274 = load i32, i32* @r30, align 4
  store i32 268456572, i32* @lr, align 4
  %v1_10005278 = call i32 @function_1000a800(i32 %v2_1000520c)
  store i32 %v2_1000520c, i32* @r3, align 4
  store i32 268456584, i32* @lr, align 4
  %v2_10005284 = call i32 @function_1000a7b4(i32 %v2_1000520c, i32 2)
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268456600, i32* @lr, align 4
  %v3_10005294 = call i32 @function_10009d88(i32 0, i32 %v2_1000520c, i32 0)
  store i32 268456612, i32* @lr, align 4
  %v2_100052a0 = call i32 @function_1000a82c(i32 17, i32 1)
  store i32 ptrtoint (i32* @global_var_100052b4.90 to i32), i32* @lr, align 4
  %v2_100052b0 = call i32 @function_1000a82c(i32 5, i32 268455504)
  store i32 268456632, i32* @lr, align 4
  %v1_100052b4 = call i32 @function_10009574(i32 %v2_100052b0)
  store i32 1105119797, i32* %r9.global-to-local, align 4
  store i32 1105119797, i32* @global_var_1001d264.81, align 4
  store i16 80, i16* bitcast (i32* @global_var_1001d262.84 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_100052b4, i32* @global_var_1001d188.12, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001d260.80 to i16*), align 4
  store i32 268456672, i32* @lr, align 4
  %v2_100052dc = call i32 @function_10008a80(i32 %v1_100052b4, i32 1105119797)
  store i32 268456016, i32* %r9.global-to-local, align 4
  store i32 268456016, i32* @global_var_1001d168.74, align 4
  store i32 ptrtoint (i32* @global_var_100052f0.91 to i32), i32* @lr, align 4
  %v1_100052ec = call i32 @function_10004e64(i32 %v2_100052dc)
  store i32 268456692, i32* @lr, align 4
  %v1_100052f0 = call i32 @function_100059e8(i32 %v1_100052ec)
  store i32 %v2_1000523c, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268456704, i32* @lr, align 4
  %v0_100052fc = call i32 @function_10009318()
  %v0_10005300 = load i32, i32* @r28, align 4
  %v3_10005300 = icmp eq i32 %v0_10005300, 2
  br i1 %v3_10005300, label %dec_label_pc_10005474, label %dec_label_pc_10005308

dec_label_pc_10005308:                            ; preds = %dec_label_pc_100051e8, %dec_label_pc_10005474, %dec_label_pc_10005484
  %v0_10005308 = call i32 @function_10005998()
  %v2_1000530c = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_1000530c, i32* @r27, align 4
  store i32 %v0_10005308, i32* %r29.global-to-local, align 4
  %v0_10005314 = load i32, i32* @r31, align 4
  %v1_10005314 = inttoptr i32 %v0_10005314 to i32*
  %v2_10005314 = load i32, i32* %v1_10005314, align 4
  %v2_10005318 = ptrtoint i16* %stack_var_-1624 to i32
  store i32 %v2_10005318, i32* @r30, align 4
  store i32 0, i32* @r26, align 4
  store i32 268456740, i32* @lr, align 4
  %v1_10005320 = inttoptr i32 %v2_10005314 to i8*
  %v2_10005320 = call i32 @function_10009270(i8* %v1_10005320)
  store i32 %v2_10005320, i32* %r28.global-to-local, align 4
  %v0_10005328 = load i32, i32* @r31, align 4
  %v1_10005328 = inttoptr i32 %v0_10005328 to i32*
  %v2_10005328 = load i32, i32* %v1_10005328, align 4
  %v1_1000532c = sub i32 20, %v2_10005320
  store i32 %v1_1000532c, i32* @r28, align 4
  store i32 268456756, i32* @lr, align 4
  %v1_10005330 = inttoptr i32 %v2_10005328 to i8*
  %v2_10005330 = call i32 @function_10009270(i8* %v1_10005330)
  %v0_10005334 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005334 = load i32, i32* @r28, align 4
  %v2_10005334 = urem i32 %v0_10005334, %v1_10005334
  %v2_10005338 = sub i32 %v0_10005334, %v2_10005334
  store i32 %v2_10005338, i32* %r0.global-to-local, align 4
  %v2_10005340 = add i32 %v2_10005334, %v2_10005330
  store i32 %v2_1000530c, i32* @r3, align 4
  store i32 %v2_10005340, i32* @r4, align 4
  %v0_1000534c = load i32, i32* @r30, align 4
  %v2_1000534c = add i32 %v0_1000534c, %v2_10005340
  store i32 %v2_1000534c, i32* @r29, align 4
  store i32 268456788, i32* @lr, align 4
  %v0_10005350 = call i32 @function_10005a58()
  %v0_10005354 = load i32, i32* @r31, align 4
  %v1_10005354 = inttoptr i32 %v0_10005354 to i32*
  %v2_10005354 = load i32, i32* %v1_10005354, align 4
  store i32 %v2_10005354, i32* @r3, align 4
  %v0_10005358 = load i32, i32* @r26, align 4
  %v1_10005358 = trunc i32 %v0_10005358 to i8
  %v2_10005358 = load i32, i32* @r29, align 4
  %v3_10005358 = add i32 %v2_10005358, 40
  %v4_10005358 = inttoptr i32 %v3_10005358 to i8*
  store i8 %v1_10005358, i8* %v4_10005358, align 1
  %v2_10005360 = inttoptr i32 %v2_10005354 to i8*
  %v3_10005360 = call i32 @function_10009298(i8* %v2_10005360, i32 %v2_1000530c)
  store i32 32, i32* @r4, align 4
  store i32 %v2_1000530c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10005370.93 to i32), i32* @lr, align 4
  %v0_1000536c = call i32 @function_10009318()
  %v0_10005370 = call i32 @function_10005998()
  store i32 %v0_10005370, i32* %r28.global-to-local, align 4
  %v0_10005378 = load i32, i32* @r31, align 4
  %v1_10005378 = inttoptr i32 %v0_10005378 to i32*
  %v2_10005378 = load i32, i32* %v1_10005378, align 4
  store i32 268456832, i32* @lr, align 4
  %v1_1000537c = inttoptr i32 %v2_10005378 to i8*
  %v2_1000537c = call i32 @function_10009270(i8* %v1_1000537c)
  store i32 %v2_1000537c, i32* %r29.global-to-local, align 4
  %v0_10005384 = load i32, i32* @r31, align 4
  %v1_10005384 = inttoptr i32 %v0_10005384 to i32*
  %v2_10005384 = load i32, i32* %v1_10005384, align 4
  %v1_10005388 = sub i32 20, %v2_1000537c
  store i32 %v1_10005388, i32* @r29, align 4
  store i32 268456848, i32* @lr, align 4
  %v1_1000538c = inttoptr i32 %v2_10005384 to i8*
  %v2_1000538c = call i32 @function_10009270(i8* %v1_1000538c)
  %v0_10005390 = load i32, i32* %r28.global-to-local, align 4
  %v1_10005390 = load i32, i32* @r29, align 4
  %v2_10005390 = urem i32 %v0_10005390, %v1_10005390
  %v2_10005394 = sub i32 %v0_10005390, %v2_10005390
  store i32 %v2_10005394, i32* %r0.global-to-local, align 4
  %v2_1000539c = add i32 %v2_10005390, %v2_1000538c
  store i32 %v2_1000530c, i32* @r3, align 4
  store i32 %v2_1000539c, i32* @r4, align 4
  %v0_100053a8 = load i32, i32* @r30, align 4
  %v2_100053a8 = add i32 %v0_100053a8, %v2_1000539c
  store i32 %v2_100053a8, i32* @r28, align 4
  store i32 268456880, i32* @lr, align 4
  %v0_100053ac = call i32 @function_10005a58()
  %v0_100053b0 = load i32, i32* @r26, align 4
  %v1_100053b0 = trunc i32 %v0_100053b0 to i8
  %v2_100053b0 = load i32, i32* @r28, align 4
  %v3_100053b0 = add i32 %v2_100053b0, 40
  %v4_100053b0 = inttoptr i32 %v3_100053b0 to i8*
  store i8 %v1_100053b0, i8* %v4_100053b0, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_100053c4.94 to i32), i32* @lr, align 4
  %v2_100053c0 = call i32 @function_10009c20(i32 15, i32 %v2_1000530c)
  store i32 268456908, i32* @lr, align 4
  %v1_100053c8 = call i32 @function_100089f4(i32 2)
  %v3_100053d4 = call i32 @function_10008940(i32 2, i32* nonnull %stack_var_-1620)
  %v3_100053d8 = load i32, i32* %stack_var_-1620, align 4
  store i32 %v3_100053d8, i32* %r5.global-to-local, align 4
  store i32 268456936, i32* @lr, align 4
  %v3_100053e4 = call i32 @function_10009e90(i32 1, i32 %v3_100053d4, i32 %v3_100053d8)
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100053fc.96 to i32), i32* @lr, align 4
  %v3_100053f8 = call i32 @function_10009e90(i32 1, i32 ptrtoint (i32* @global_var_1000c464.95 to i32), i32 1)
  store i32 268456964, i32* @lr, align 4
  %v1_10005400 = call i32 @function_10008968(i32 2)
  store i32 268456968, i32* @lr, align 4
  %v1_10005404 = call i32 @function_1000068c(i32 %v1_10005400)
  store i32 268456972, i32* @lr, align 4
  %v1_10005408 = call i32 @function_100043e8(i32 %v1_10005404)
  store i32 ptrtoint (i32* @global_var_10005410.97 to i32), i32* @lr, align 4
  %v1_1000540c = call i32 @function_1000510c(i32 %v1_10005408)
  store i32 268456980, i32* @lr, align 4
  %v0_10005410 = call i32 @function_10009a78()
  %tmp48 = icmp slt i32 %v0_10005410, 1
  br i1 %tmp48, label %dec_label_pc_100054ac, label %dec_label_pc_1000541c

dec_label_pc_1000541c:                            ; preds = %dec_label_pc_10005308
  store i32 %v0_10005204, i32* %r0.global-to-local, align 4
  store i32 %v0_10005250, i32* @r15, align 4
  store i32 %v0_10005254, i32* %r16.global-to-local, align 4
  store i32 %v0_10005258, i32* %r17.global-to-local, align 4
  store i32 %v0_1000525c, i32* %r18.global-to-local, align 4
  store i32 %v0_10005260, i32* %r19.global-to-local, align 4
  store i32 %v0_10005264, i32* %r20.global-to-local, align 4
  store i32 %v0_10005230, i32* @r22, align 4
  store i32 %v0_10005268, i32* @r23, align 4
  store i32 %v0_10005238, i32* @r24, align 4
  store i32 %v0_10005240, i32* @r25, align 4
  store i32 %v0_1000526c, i32* @r26, align 4
  store i32 %v0_10005270, i32* @r27, align 4
  store i32 %v0_10005210, i32* @r28, align 4
  store i32 %v0_10005208, i32* @r29, align 4
  store i32 %v0_10005274, i32* @r30, align 4
  store i32 %v0_10005248, i32* @r31, align 4
  ret i32 0

dec_label_pc_10005474:                            ; preds = %dec_label_pc_100051e8
  %v0_10005474 = load i32, i32* @r31, align 4
  %v1_10005474 = add i32 %v0_10005474, 4
  %v2_10005474 = inttoptr i32 %v1_10005474 to i32*
  %v3_10005474 = load i32, i32* %v2_10005474, align 4
  store i32 268457084, i32* @lr, align 4
  %v1_10005478 = inttoptr i32 %v3_10005474 to i8*
  %v2_10005478 = call i32 @function_10009270(i8* %v1_10005478)
  %v2_1000547c = icmp sgt i32 %v2_10005478, 31
  br i1 %v2_1000547c, label %dec_label_pc_10005308, label %dec_label_pc_10005484

dec_label_pc_10005484:                            ; preds = %dec_label_pc_10005474
  %v0_10005484 = load i32, i32* @r31, align 4
  %v1_10005484 = add i32 %v0_10005484, 4
  %v2_10005484 = inttoptr i32 %v1_10005484 to i32*
  %v3_10005484 = load i32, i32* %v2_10005484, align 4
  store i32 %v2_1000523c, i32* @r3, align 4
  %v2_1000548c = bitcast i32* %stack_var_-1552 to i8*
  %v3_1000548c = call i32 @function_10009298(i8* %v2_1000548c, i32 %v3_10005484)
  %v0_10005490 = load i32, i32* @r31, align 4
  %v1_10005490 = add i32 %v0_10005490, 4
  %v2_10005490 = inttoptr i32 %v1_10005490 to i32*
  %v3_10005490 = load i32, i32* %v2_10005490, align 4
  store i32 %v3_10005490, i32* %r29.global-to-local, align 4
  store i32 268457116, i32* @lr, align 4
  %v1_10005498 = inttoptr i32 %v3_10005490 to i8*
  %v2_10005498 = call i32 @function_10009270(i8* %v1_10005498)
  store i32 %v2_10005498, i32* @r4, align 4
  store i32 %v3_10005490, i32* @r3, align 4
  store i32 268457128, i32* @lr, align 4
  %v0_100054a4 = call i32 @function_10009318()
  br label %dec_label_pc_10005308

dec_label_pc_100054ac:                            ; preds = %dec_label_pc_10005308
  store i32 ptrtoint ([3 x i8]* @global_var_100054b0.98 to i32), i32* @lr, align 4
  %v1_100054ac = call i32 @function_10009d40(i32 %v0_10005410)
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 %v1_100054ac, i32* %r17.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100054c0.99 to i32), i32* @lr, align 4
  %v0_100054bc = call i32 @function_10009a30()
  store i32 ptrtoint ([3 x i8]* @global_var_100054c8.100 to i32), i32* @lr, align 4
  %v0_100054c4 = call i32 @function_10009a30()
  store i32 268457168, i32* @lr, align 4
  %v0_100054cc = call i32 @function_10009a30()
  %v2_100054d0 = ptrtoint i32* %stack_var_-1392 to i32
  store i32 %v2_100054d0, i32* @r28, align 4
  store i32 268457176, i32* @lr, align 4
  %v1_100054d4 = call i32 @function_1000068c(i32 %v0_100054cc)
  %v2_100054d8 = ptrtoint i32* %stack_var_-1264 to i32
  store i32 %v2_100054d8, i32* @r29, align 4
  store i32 268457184, i32* @lr, align 4
  %v1_100054dc = call i32 @function_100043e8(i32 %v1_100054d4)
  store i32 268566528, i32* %r20.global-to-local, align 4
  store i32 268457192, i32* @lr, align 4
  %v1_100054e4 = call i32 @function_1000510c(i32 %v1_100054dc)
  store i32 268566528, i32* @r26, align 4
  store i32 268457200, i32* @lr, align 4
  %v1_100054ec = call i32 @function_10006390(i32 %v1_100054e4)
  store i32 268566528, i32* %r18.global-to-local, align 4
  %v2_100054f4 = ptrtoint i32* %stack_var_-1608 to i32
  %v2_100054f8 = ptrtoint i32* %stack_var_-1616 to i32
  store i32 %v2_100054f8, i32* %r16.global-to-local, align 4
  %v2_10005750 = ptrtoint i32* %stack_var_-1136 to i32
  %v2_10005844 = ptrtoint i32* %stack_var_-1612 to i32
  %v1_100058cc = bitcast i32* %stack_var_-1552 to i8*
  %v2_100058a0 = ptrtoint i32* %stack_var_-1600 to i32
  br label %dec_label_pc_100054fc

dec_label_pc_100054fc:                            ; preds = %dec_label_pc_10005934, %dec_label_pc_10005958, %dec_label_pc_10005928, %dec_label_pc_100058c8, %dec_label_pc_100056d4, %dec_label_pc_100056c4, %dec_label_pc_100055b4, %dec_label_pc_1000598c, %dec_label_pc_10005940, %dec_label_pc_10005914, %dec_label_pc_10005860, %dec_label_pc_10005788, %dec_label_pc_10005688, %dec_label_pc_100054ac
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000550c50 = load i32, i32* @r28, align 4
  %v4_1000550c52 = inttoptr i32 %v2_1000550c50 to i32*
  store i32 0, i32* %v4_1000550c52, align 4
  %v0_1000551053 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000551054 = add i32 %v0_1000551053, 4
  store i32 %v1_1000551054, i32* %r9.global-to-local, align 4
  %v0_1000551455 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000551456 = add i32 %v0_1000551455, -1
  store i32 %v1_1000551456, i32* %ctr.global-to-local, align 4
  %v2_1000551457 = icmp eq i32 %v1_1000551456, 0
  br i1 %v2_1000551457, label %dec_label_pc_10005518, label %dec_label_pc_1000550c.dec_label_pc_1000550c_crit_edge

dec_label_pc_1000550c.dec_label_pc_1000550c_crit_edge: ; preds = %dec_label_pc_100054fc, %dec_label_pc_1000550c.dec_label_pc_1000550c_crit_edge
  %v1_1000551058 = phi i32 [ %v1_10005510, %dec_label_pc_1000550c.dec_label_pc_1000550c_crit_edge ], [ %v1_1000551054, %dec_label_pc_100054fc ]
  %v0_1000550c.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_1000550c = load i32, i32* @r28, align 4
  %v3_1000550c = add i32 %v2_1000550c, %v1_1000551058
  %v4_1000550c = inttoptr i32 %v3_1000550c to i32*
  store i32 %v0_1000550c.pre, i32* %v4_1000550c, align 4
  %v0_10005510 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005510 = add i32 %v0_10005510, 4
  store i32 %v1_10005510, i32* %r9.global-to-local, align 4
  %v0_10005514 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005514 = add i32 %v0_10005514, -1
  store i32 %v1_10005514, i32* %ctr.global-to-local, align 4
  %v2_10005514 = icmp eq i32 %v1_10005514, 0
  br i1 %v2_10005514, label %dec_label_pc_10005518, label %dec_label_pc_1000550c.dec_label_pc_1000550c_crit_edge

dec_label_pc_10005518:                            ; preds = %dec_label_pc_1000550c.dec_label_pc_1000550c_crit_edge, %dec_label_pc_100054fc
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000552859 = load i32, i32* @r29, align 4
  %v4_1000552861 = inttoptr i32 %v2_1000552859 to i32*
  store i32 0, i32* %v4_1000552861, align 4
  %v0_1000552c62 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000552c63 = add i32 %v0_1000552c62, 4
  store i32 %v1_1000552c63, i32* %r9.global-to-local, align 4
  %v0_1000553064 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000553065 = add i32 %v0_1000553064, -1
  store i32 %v1_1000553065, i32* %ctr.global-to-local, align 4
  %v2_1000553066 = icmp eq i32 %v1_1000553065, 0
  br i1 %v2_1000553066, label %dec_label_pc_10005534, label %dec_label_pc_10005528.dec_label_pc_10005528_crit_edge

dec_label_pc_10005528.dec_label_pc_10005528_crit_edge: ; preds = %dec_label_pc_10005518, %dec_label_pc_10005528.dec_label_pc_10005528_crit_edge
  %v1_1000552c67 = phi i32 [ %v1_1000552c, %dec_label_pc_10005528.dec_label_pc_10005528_crit_edge ], [ %v1_1000552c63, %dec_label_pc_10005518 ]
  %v0_10005528.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005528 = load i32, i32* @r29, align 4
  %v3_10005528 = add i32 %v2_10005528, %v1_1000552c67
  %v4_10005528 = inttoptr i32 %v3_10005528 to i32*
  store i32 %v0_10005528.pre, i32* %v4_10005528, align 4
  %v0_1000552c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000552c = add i32 %v0_1000552c, 4
  store i32 %v1_1000552c, i32* %r9.global-to-local, align 4
  %v0_10005530 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005530 = add i32 %v0_10005530, -1
  store i32 %v1_10005530, i32* %ctr.global-to-local, align 4
  %v2_10005530 = icmp eq i32 %v1_10005530, 0
  br i1 %v2_10005530, label %dec_label_pc_10005534, label %dec_label_pc_10005528.dec_label_pc_10005528_crit_edge

dec_label_pc_10005534:                            ; preds = %dec_label_pc_10005528.dec_label_pc_10005528_crit_edge, %dec_label_pc_10005518
  %v3_10005534 = load i32, i32* @global_var_1001d160.75, align 4
  %v3_10005538 = icmp eq i32 %v3_10005534, -1
  br i1 %v3_10005538, label %dec_label_pc_10005560, label %dec_label_pc_10005540

dec_label_pc_10005540:                            ; preds = %dec_label_pc_10005534
  %v1_10005540 = call i32 @__asm_rlwinm(i32 %v3_10005534, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005548 = load i32, i32* @r30, align 4
  %v2_10005548 = add i32 %v1_10005548, %v1_10005540
  %v1_1000554c = urem i32 %v3_10005534, 32
  %v1_10005550 = add i32 %v2_10005548, 232
  %v2_10005550 = inttoptr i32 %v1_10005550 to i32*
  %v3_10005550 = load i32, i32* %v2_10005550, align 4
  %v3_10005554 = shl i32 1, %v1_1000554c
  store i32 %v3_10005554, i32* %r0.global-to-local, align 4
  %v2_10005558 = or i32 %v3_10005550, %v3_10005554
  store i32 %v2_10005558, i32* %r9.global-to-local, align 4
  store i32 %v2_10005558, i32* %v2_10005550, align 4
  br label %dec_label_pc_10005560

dec_label_pc_10005560:                            ; preds = %dec_label_pc_10005534, %dec_label_pc_10005540
  %v3_10005560 = load i32, i32* @global_var_1001d164.101, align 4
  store i32 %v3_10005560, i32* %r0.global-to-local, align 4
  %v3_10005568 = icmp eq i32 %v3_10005560, -1
  br i1 %v3_10005568, label %dec_label_pc_100057a0, label %dec_label_pc_10005570

dec_label_pc_10005570:                            ; preds = %dec_label_pc_100057a0, %dec_label_pc_10005560, %dec_label_pc_100057f8
  %v3_1000569c = phi i32 [ -1, %dec_label_pc_100057a0 ], [ %v3_10005560, %dec_label_pc_10005560 ], [ %v3_1000569c.pre, %dec_label_pc_100057f8 ]
  %v3_10005570 = load i8, i8* @global_var_1001d19c.102, align 1
  %v3_10005574 = icmp eq i8 %v3_10005570, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100056a4 = call i32 @__asm_rlwinm(i32 %v3_1000569c, i32 29, i32 3, i32 29)
  %v1_100056a8 = urem i32 %v3_1000569c, 32
  %v1_100056ac = load i32, i32* @r30, align 4
  %v2_100056ac = add i32 %v1_100056ac, %v1_100056a4
  %v0_100056b0 = load i32, i32* %r0.global-to-local, align 4
  %v3_100056b0 = shl i32 %v0_100056b0, %v1_100056a8
  store i32 %v3_100056b0, i32* %r0.global-to-local, align 4
  br i1 %v3_10005574, label %dec_label_pc_1000569c, label %dec_label_pc_1000557c

dec_label_pc_1000557c:                            ; preds = %dec_label_pc_10005570
  %v1_10005594 = add i32 %v2_100056ac, 360
  %v2_10005594 = inttoptr i32 %v1_10005594 to i32*
  %v3_10005594 = load i32, i32* %v2_10005594, align 4
  %v2_10005598 = or i32 %v3_10005594, %v3_100056b0
  store i32 %v2_10005598, i32* %r9.global-to-local, align 4
  store i32 %v2_10005598, i32* %v2_10005594, align 4
  br label %dec_label_pc_100055a0

dec_label_pc_100055a0:                            ; preds = %dec_label_pc_1000569c, %dec_label_pc_1000557c
  %v3_100055a0 = load i32, i32* @global_var_1001d164.101, align 4
  store i32 %v3_100055a0, i32* %r0.global-to-local, align 4
  %v3_100055a4 = load i32, i32* @global_var_1001d160.75, align 4
  %v2_100055a8 = icmp slt i32 %v3_100055a4, %v3_100055a0
  br i1 %v2_100055a8, label %dec_label_pc_100055b0, label %dec_label_pc_100055b4

dec_label_pc_100055b0:                            ; preds = %dec_label_pc_100055a0
  br label %dec_label_pc_100055b4

dec_label_pc_100055b4:                            ; preds = %dec_label_pc_100055a0, %dec_label_pc_100055b0
  %v0_100055bc = phi i32 [ %v3_100055a4, %dec_label_pc_100055a0 ], [ %v3_100055a0, %dec_label_pc_100055b0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_100055bc = add i32 %v0_100055bc, 1
  store i32 %v2_100054d8, i32* %r5.global-to-local, align 4
  store i32 10, i32* %stack_var_-1608, align 4
  store i32 268457436, i32* @lr, align 4
  %v5_100055d8 = call i32 @function_10009cf8(i32 %v1_100055bc, i32 %v2_100054d0, i32 %v2_100054d8, i32 0, i32 %v2_100054f4)
  %v6_100055d8 = trunc i32 %v5_100055d8 to i16
  %v4_100055dc = icmp eq i16 %v6_100055d8, -1
  br i1 %v4_100055dc, label %dec_label_pc_100054fc, label %dec_label_pc_100055e4

dec_label_pc_100055e4:                            ; preds = %dec_label_pc_100055b4
  %v4_100055e4 = icmp eq i16 %v6_100055d8, 0
  br i1 %v4_100055e4, label %dec_label_pc_100055ec, label %dec_label_pc_10005618

dec_label_pc_100055ec:                            ; preds = %dec_label_pc_100055e4
  %v0_100055f0 = load i32, i32* %r19.global-to-local, align 4
  store i16 0, i16* %stack_var_-1624, align 2
  %v2_10005600 = srem i32 %v0_100055f0, 6
  %v1_10005604 = sub i32 %v0_100055f0, %v2_10005600
  store i32 %v1_10005604, i32* %r9.global-to-local, align 4
  store i32 %v2_10005600, i32* %r0.global-to-local, align 4
  %v1_1000560c = add i32 %v0_100055f0, 1
  store i32 %v1_1000560c, i32* %r19.global-to-local, align 4
  %v3_10005610 = icmp eq i32 %v2_10005600, 0
  br i1 %v3_10005610, label %dec_label_pc_10005814, label %dec_label_pc_10005618

dec_label_pc_10005618:                            ; preds = %dec_label_pc_100055e4, %dec_label_pc_100055ec, %dec_label_pc_10005814
  %v3_10005618 = load i32, i32* @global_var_1001d160.75, align 4
  %v3_1000561c = icmp eq i32 %v3_10005618, -1
  br i1 %v3_1000561c, label %dec_label_pc_10005640, label %dec_label_pc_10005624

dec_label_pc_10005624:                            ; preds = %dec_label_pc_10005618
  %v1_10005624 = call i32 @__asm_rlwinm(i32 %v3_10005618, i32 29, i32 3, i32 29)
  %v1_10005628 = urem i32 %v3_10005618, 32
  %v1_1000562c = load i32, i32* @r30, align 4
  %v2_1000562c = add i32 %v1_1000562c, %v1_10005624
  store i32 %v2_1000562c, i32* %r9.global-to-local, align 4
  %v1_10005630 = add i32 %v2_1000562c, 232
  %v2_10005630 = inttoptr i32 %v1_10005630 to i32*
  %v3_10005630 = load i32, i32* %v2_10005630, align 4
  %v3_10005634 = lshr i32 %v3_10005630, %v1_10005628
  store i32 %v3_10005634, i32* %r0.global-to-local, align 4
  %v1_10005638 = urem i32 %v3_10005634, 2
  store i32 %v1_10005638, i32* %r9.global-to-local, align 4
  %v3_10005638 = icmp eq i32 %v1_10005638, 0
  br i1 %v3_10005638, label %dec_label_pc_10005640, label %dec_label_pc_10005898

dec_label_pc_10005640:                            ; preds = %dec_label_pc_10005624, %dec_label_pc_10005618
  %v3_10005640 = load i8, i8* @global_var_1001d19c.102, align 1
  %v4_10005640 = zext i8 %v3_10005640 to i32
  store i32 %v4_10005640, i32* @r31, align 4
  %v3_10005644 = icmp eq i8 %v3_10005640, 0
  %v3_100056c4 = load i32, i32* @global_var_1001d164.101, align 4
  br i1 %v3_10005644, label %dec_label_pc_100056c4, label %dec_label_pc_1000564c

dec_label_pc_1000564c:                            ; preds = %dec_label_pc_10005640
  store i32 268566528, i32* @r31, align 4
  %v1_10005654 = call i32 @__asm_rlwinm(i32 %v3_100056c4, i32 29, i32 3, i32 29)
  %v1_10005658 = urem i32 %v3_100056c4, 32
  %v1_1000565c = load i32, i32* @r30, align 4
  %v2_1000565c = add i32 %v1_1000565c, %v1_10005654
  store i32 %v2_1000565c, i32* %r9.global-to-local, align 4
  %v1_10005660 = add i32 %v2_1000565c, 360
  %v2_10005660 = inttoptr i32 %v1_10005660 to i32*
  %v3_10005660 = load i32, i32* %v2_10005660, align 4
  %v3_10005664 = lshr i32 %v3_10005660, %v1_10005658
  store i32 %v3_10005664, i32* %r0.global-to-local, align 4
  %v1_1000566c = urem i32 %v3_10005664, 2
  %v3_1000566c = icmp eq i32 %v1_1000566c, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* @global_var_1001d19c.102, align 1
  br i1 %v3_1000566c, label %dec_label_pc_1000567c, label %dec_label_pc_10005830

dec_label_pc_1000567c:                            ; preds = %dec_label_pc_1000564c
  %v3_1000567c = icmp eq i32 %v3_100056c4, -1
  br i1 %v3_1000567c, label %dec_label_pc_10005688, label %dec_label_pc_10005684

dec_label_pc_10005684:                            ; preds = %dec_label_pc_1000567c
  store i32 ptrtoint (i32* @global_var_10005688.103 to i32), i32* @lr, align 4
  %v0_10005684 = call i32 @function_10009a30()
  br label %dec_label_pc_10005688

dec_label_pc_10005688:                            ; preds = %dec_label_pc_1000567c, %dec_label_pc_10005684
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001d164.101, align 4
  store i32 268457624, i32* @lr, align 4
  %v1_10005694 = call i32 @function_1000b278(i32 1)
  br label %dec_label_pc_100054fc

dec_label_pc_1000569c:                            ; preds = %dec_label_pc_10005570
  %v1_100056b4 = add i32 %v2_100056ac, 232
  %v2_100056b4 = inttoptr i32 %v1_100056b4 to i32*
  %v3_100056b4 = load i32, i32* %v2_100056b4, align 4
  %v2_100056b8 = or i32 %v3_100056b4, %v3_100056b0
  store i32 %v2_100056b8, i32* %r9.global-to-local, align 4
  store i32 %v2_100056b8, i32* %v2_100056b4, align 4
  br label %dec_label_pc_100055a0

dec_label_pc_100056c4:                            ; preds = %dec_label_pc_10005640
  %v3_100056cc = icmp eq i32 %v3_100056c4, -1
  br i1 %v3_100056cc, label %dec_label_pc_100054fc, label %dec_label_pc_100056d4

dec_label_pc_100056d4:                            ; preds = %dec_label_pc_100056c4
  %v1_100056d4 = call i32 @__asm_rlwinm(i32 %v3_100056c4, i32 29, i32 3, i32 29)
  %v1_100056d8 = urem i32 %v3_100056c4, 32
  %v1_100056dc = load i32, i32* @r30, align 4
  %v2_100056dc = add i32 %v1_100056dc, %v1_100056d4
  store i32 %v2_100056dc, i32* %r9.global-to-local, align 4
  %v1_100056e0 = add i32 %v2_100056dc, 232
  %v2_100056e0 = inttoptr i32 %v1_100056e0 to i32*
  %v3_100056e0 = load i32, i32* %v2_100056e0, align 4
  %v3_100056e4 = lshr i32 %v3_100056e0, %v1_100056d8
  store i32 %v3_100056e4, i32* %r0.global-to-local, align 4
  %v1_100056e8 = urem i32 %v3_100056e4, 2
  store i32 %v1_100056e8, i32* %r9.global-to-local, align 4
  %v3_100056e8 = icmp eq i32 %v1_100056e8, 0
  br i1 %v3_100056e8, label %dec_label_pc_100054fc, label %dec_label_pc_100056f0

dec_label_pc_100056f0:                            ; preds = %dec_label_pc_100056d4
  %v0_100056f0 = call i32 @function_1000a14c()
  %v0_100056f8 = load i32, i32* @r31, align 4
  %v2_100056f8 = inttoptr i32 %v0_100056f0 to i32*
  store i32 %v0_100056f8, i32* %v2_100056f8, align 4
  store i32 %v0_100056f0, i32* @r23, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  %v3_10005708 = load i32, i32* @global_var_1001d164.101, align 4
  store i32 268457744, i32* @lr, align 4
  %v4_1000570c = call i32 @function_1000a654(i32 %v3_10005708, i32 %v2_10005318, i32 2, i32 16386)
  %v3_10005710 = icmp eq i32 %v4_1000570c, -1
  br i1 %v3_10005710, label %dec_label_pc_10005928, label %dec_label_pc_10005718

dec_label_pc_10005718:                            ; preds = %dec_label_pc_100056f0
  %v3_10005718 = icmp eq i32 %v4_1000570c, 0
  br i1 %v3_10005718, label %dec_label_pc_10005778, label %dec_label_pc_10005720

dec_label_pc_10005720:                            ; preds = %dec_label_pc_10005718
  %v3_10005720 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005720 = sext i16 %v3_10005720 to i32
  store i32 %v4_10005720, i32* %r5.global-to-local, align 4
  %v1_10005724 = urem i32 %v4_10005720, 65536
  store i32 %v1_10005724, i32* %r0.global-to-local, align 4
  %v3_10005728 = icmp eq i32 %v1_10005724, 0
  br i1 %v3_10005728, label %dec_label_pc_10005940, label %dec_label_pc_10005730

dec_label_pc_10005730:                            ; preds = %dec_label_pc_10005720
  %tmp49 = icmp ult i32 %v1_10005724, 1025
  br i1 %tmp49, label %dec_label_pc_1000574c, label %dec_label_pc_10005738

dec_label_pc_10005738:                            ; preds = %dec_label_pc_10005730
  store i32 ptrtoint (i32* @global_var_10005740.104 to i32), i32* @lr, align 4
  %v0_1000573c = call i32 @function_10009a30()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001d164.101, align 4
  %v3_10005748 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005748 = sext i16 %v3_10005748 to i32
  store i32 %v4_10005748, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000574c

dec_label_pc_1000574c:                            ; preds = %dec_label_pc_10005730, %dec_label_pc_10005738
  %v0_1000574c = load i32, i32* @r31, align 4
  %v1_1000574c = load i32, i32* @r23, align 4
  %v2_1000574c = inttoptr i32 %v1_1000574c to i32*
  store i32 %v0_1000574c, i32* %v2_1000574c, align 4
  store i32 %v2_10005750, i32* @r31, align 4
  %v0_10005754 = load i32, i32* %r5.global-to-local, align 4
  %v1_10005754 = urem i32 %v0_10005754, 65536
  store i32 %v1_10005754, i32* %r5.global-to-local, align 4
  %v3_1000575c = load i32, i32* @global_var_1001d164.101, align 4
  store i32 268457832, i32* @lr, align 4
  %v4_10005764 = call i32 @function_1000a654(i32 %v3_1000575c, i32 %v2_10005750, i32 %v1_10005754, i32 16386)
  %v3_10005768 = icmp eq i32 %v4_10005764, -1
  br i1 %v3_10005768, label %dec_label_pc_10005928, label %dec_label_pc_10005770

dec_label_pc_10005770:                            ; preds = %dec_label_pc_1000574c
  %v3_10005770 = icmp eq i32 %v4_10005764, 0
  br i1 %v3_10005770, label %dec_label_pc_10005778, label %dec_label_pc_10005958

dec_label_pc_10005778:                            ; preds = %dec_label_pc_10005934, %dec_label_pc_10005770, %dec_label_pc_10005718
  %v3_10005778 = load i32, i32* @global_var_1001d164.101, align 4
  %v3_1000577c = icmp eq i32 %v3_10005778, -1
  br i1 %v3_1000577c, label %dec_label_pc_10005788, label %dec_label_pc_10005784

dec_label_pc_10005784:                            ; preds = %dec_label_pc_10005778
  store i32 ptrtoint (i32* @global_var_10005788.105 to i32), i32* @lr, align 4
  %v0_10005784 = call i32 @function_10009a30()
  br label %dec_label_pc_10005788

dec_label_pc_10005788:                            ; preds = %dec_label_pc_10005778, %dec_label_pc_10005784
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001d164.101, align 4
  store i32 268457884, i32* @lr, align 4
  %v1_10005798 = call i32 @function_1000b278(i32 1)
  br label %dec_label_pc_100054fc

dec_label_pc_100057a0:                            ; preds = %dec_label_pc_10005560
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268457904, i32* @lr, align 4
  %v3_100057ac = call i32 @function_1000a780(i32 2, i32 1, i32 0)
  %v3_100057b0 = icmp eq i32 %v3_100057ac, -1
  store i32 %v3_100057ac, i32* @r31, align 4
  store i32 %v3_100057ac, i32* @global_var_1001d164.101, align 4
  br i1 %v3_100057b0, label %dec_label_pc_10005570, label %dec_label_pc_100057c0

dec_label_pc_100057c0:                            ; preds = %dec_label_pc_100057a0
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268457936, i32* @lr, align 4
  %v1_100057cc = call i32 @function_10009948(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_100057d4 = or i32 %v1_100057cc, 2048
  store i32 %v1_100057d4, i32* %r5.global-to-local, align 4
  %v0_100057d8 = load i32, i32* @r31, align 4
  store i32 268457956, i32* @lr, align 4
  %v2_100057e0 = call i32 @function_10009948(i32 %v0_100057d8)
  %v3_100057e4 = load i32, i32* @global_var_1001d168.74, align 4
  store i32 %v3_100057e4, i32* %r0.global-to-local, align 4
  %v3_100057e8 = icmp eq i32 %v3_100057e4, 0
  br i1 %v3_100057e8, label %dec_label_pc_100057f8, label %dec_label_pc_100057f0

dec_label_pc_100057f0:                            ; preds = %dec_label_pc_100057c0
  store i32 %v3_100057e4, i32* %ctr.global-to-local, align 4
  store i32 268457976, i32* @lr, align 4
  %v2_100057f4 = call i32 @function_10009574(i32 %v2_100057e0)
  br label %dec_label_pc_100057f8

dec_label_pc_100057f8:                            ; preds = %dec_label_pc_100057c0, %dec_label_pc_100057f0
  %v3_100057f8 = load i32, i32* @global_var_1001d164.101, align 4
  store i32 %v3_100057f8, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r5.global-to-local, align 4
  store i8 1, i8* @global_var_1001d19c.102, align 1
  store i32 268458000, i32* @lr, align 4
  %v0_1000580c = call i32 @function_1000a580()
  %v3_1000569c.pre = load i32, i32* @global_var_1001d164.101, align 4
  br label %dec_label_pc_10005570

dec_label_pc_10005814:                            ; preds = %dec_label_pc_100055ec
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000581c = load i32, i32* @global_var_1001d164.101, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268458028, i32* @lr, align 4
  %v4_10005828 = call i32 @function_1000a6cc(i32 %v3_1000581c, i32 %v2_10005318, i32 2, i32 16384)
  br label %dec_label_pc_10005618

dec_label_pc_10005830:                            ; preds = %dec_label_pc_1000564c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 0, i32* %stack_var_-1616, align 4
  store i32 4, i32* %stack_var_-1612, align 4
  store i32 268458068, i32* @lr, align 4
  %v5_10005850 = call i32 @function_1000a5e8(i32 1, i32 4, i32 %v2_100054f8, i32 %v2_10005844, i32 4)
  %v3_10005854 = load i32, i32* %stack_var_-1616, align 4
  store i32 %v3_10005854, i32* %r0.global-to-local, align 4
  %v3_10005858 = icmp eq i32 %v3_10005854, 0
  br i1 %v3_10005858, label %dec_label_pc_100058c8, label %dec_label_pc_10005860

dec_label_pc_10005860:                            ; preds = %dec_label_pc_10005830
  store i32 ptrtoint (i32* @global_var_10005868.106 to i32), i32* @lr, align 4
  %v0_10005864 = call i32 @function_10009a30()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001d164.101, align 4
  %v0_10005870 = call i32 @function_10005998()
  %v1_10005870 = sext i32 %v0_10005870 to i64
  %v5_1000587c = mul nuw nsw i64 %v1_10005870, 3435973837
  %v1_100058802 = udiv i64 %v5_1000587c, 34359738368
  %v1_10005880 = trunc i64 %v1_100058802 to i32
  %v1_10005884 = mul i32 %v1_10005880, 10
  store i32 %v1_10005884, i32* %r0.global-to-local, align 4
  %v3_10005888 = sub i32 %v0_10005870, %v1_10005884
  %v1_1000588c = add i32 %v3_10005888, 1
  store i32 268458132, i32* @lr, align 4
  %v1_10005890 = call i32 @function_1000b278(i32 %v1_1000588c)
  br label %dec_label_pc_100054fc

dec_label_pc_10005898:                            ; preds = %dec_label_pc_10005624
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_100054f8, i32* %r5.global-to-local, align 4
  store i32 16, i32* %stack_var_-1616, align 4
  store i32 ptrtoint (i32* @global_var_100058ac.108 to i32), i32* @lr, align 4
  %v3_100058a8 = call i32 @function_1000a518(i32 %v2_100058a0, i32 %v2_100054f8, i32 %v1_10005638)
  store i32 268458160, i32* @lr, align 4
  %v1_100058ac = call i32 @function_100060cc(i32 %v3_100058a8)
  store i32 ptrtoint ([3 x i8]* @global_var_100058b4.109 to i32), i32* @lr, align 4
  %v1_100058b0 = call i32 @function_10003dc4(i32 %v1_100058ac)
  %v0_100058b4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100058b4 = sub i32 0, %v0_100058b4
  store i32 ptrtoint ([3 x i8]* @global_var_100058c0.110 to i32), i32* @lr, align 4
  %v2_100058bc = call i32 @function_10009b50(i32 %v1_100058b4, i32 9)
  %v0_100058c4 = call i32 @function_1000b1f4()
  br label %dec_label_pc_100058c8

dec_label_pc_100058c8:                            ; preds = %dec_label_pc_10005830, %dec_label_pc_10005898
  store i32 268458192, i32* @lr, align 4
  %v2_100058cc = call i32 @function_10009270(i8* %v1_100058cc)
  %v3_100058cc = trunc i32 %v2_100058cc to i16
  store i16 %v3_100058cc, i16* %stack_var_-1624, align 2
  store i32 268458200, i32* @lr, align 4
  %v2_100058d4 = call i32 @function_10009574(i32 %v2_100058cc)
  store i32 %v2_100058d4, i32* @global_var_1001d188.12, align 4
  %v0_100058e0 = load i32, i32* @r31, align 4
  %v1_100058e0 = add i32 %v0_100058e0, -11932
  %v2_100058e0 = inttoptr i32 %v1_100058e0 to i32*
  %v3_100058e0 = load i32, i32* %v2_100058e0, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268458228, i32* @lr, align 4
  %v4_100058f0 = call i32 @function_1000a6cc(i32 %v3_100058e0, i32 ptrtoint (i32* @global_var_1000c468.111 to i32), i32 4, i32 16384)
  %v0_100058f4 = load i32, i32* @r31, align 4
  %v1_100058f4 = add i32 %v0_100058f4, -11932
  %v2_100058f4 = inttoptr i32 %v1_100058f4 to i32*
  %v3_100058f4 = load i32, i32* %v2_100058f4, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268458248, i32* @lr, align 4
  %v4_10005904 = call i32 @function_1000a6cc(i32 %v3_100058f4, i32 %v2_10005318, i32 1, i32 16384)
  %v3_10005908 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005908 = sext i16 %v3_10005908 to i32
  store i32 %v4_10005908, i32* %r5.global-to-local, align 4
  %v3_1000590c = icmp eq i16 %v3_10005908, 0
  br i1 %v3_1000590c, label %dec_label_pc_100054fc, label %dec_label_pc_10005914

dec_label_pc_10005914:                            ; preds = %dec_label_pc_100058c8
  %v0_10005914 = load i32, i32* @r31, align 4
  %v1_10005914 = add i32 %v0_10005914, -11932
  %v2_10005914 = inttoptr i32 %v1_10005914 to i32*
  %v3_10005914 = load i32, i32* %v2_10005914, align 4
  store i32 268458276, i32* @lr, align 4
  %v4_10005920 = call i32 @function_1000a6cc(i32 %v3_10005914, i32 %v2_1000523c, i32 %v4_10005908, i32 16384)
  br label %dec_label_pc_100054fc

dec_label_pc_10005928:                            ; preds = %dec_label_pc_1000574c, %dec_label_pc_100056f0
  %v0_10005928 = load i32, i32* @r23, align 4
  %v1_10005928 = inttoptr i32 %v0_10005928 to i32*
  %v2_10005928 = load i32, i32* %v1_10005928, align 4
  %v3_1000592c = icmp eq i32 %v2_10005928, 11
  br i1 %v3_1000592c, label %dec_label_pc_100054fc, label %dec_label_pc_10005934

dec_label_pc_10005934:                            ; preds = %dec_label_pc_10005928
  %v3_10005934 = icmp eq i32 %v2_10005928, 4
  br i1 %v3_10005934, label %dec_label_pc_100054fc, label %dec_label_pc_10005778

dec_label_pc_10005940:                            ; preds = %dec_label_pc_10005720
  %v3_10005940 = load i32, i32* @global_var_1001d164.101, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268458324, i32* @lr, align 4
  %v4_10005950 = call i32 @function_1000a654(i32 %v3_10005940, i32 %v2_10005318, i32 2, i32 16384)
  br label %dec_label_pc_100054fc

dec_label_pc_10005958:                            ; preds = %dec_label_pc_10005770
  %v3_10005958 = load i32, i32* @global_var_1001d164.101, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268458348, i32* @lr, align 4
  %v4_10005968 = call i32 @function_1000a654(i32 %v3_10005958, i32 %v2_10005318, i32 2, i32 16384)
  %v3_1000596c = load i32, i32* @global_var_1001d164.101, align 4
  %v3_10005970 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005970 = sext i16 %v3_10005970 to i32
  store i32 %v4_10005970, i32* %r5.global-to-local, align 4
  store i32 268458368, i32* @lr, align 4
  %v4_1000597c = call i32 @function_1000a654(i32 %v3_1000596c, i32 %v2_10005750, i32 %v4_10005970, i32 16384)
  %v3_10005980 = load i16, i16* %stack_var_-1624, align 2
  %v3_10005984 = icmp eq i16 %v3_10005980, 0
  br i1 %v3_10005984, label %dec_label_pc_100054fc, label %dec_label_pc_1000598c

dec_label_pc_1000598c:                            ; preds = %dec_label_pc_10005958
  %v4_10005980 = sext i16 %v3_10005980 to i32
  store i32 268458388, i32* @lr, align 4
  %v2_10005990 = call i32 @function_10000384(i32 %v2_10005750, i32 %v4_10005980)
  br label %dec_label_pc_100054fc

; uselistorder directives
  uselistorder i16 %v3_10005980, { 1, 0 }
  uselistorder i32 %v3_100057ac, { 1, 0, 2 }
  uselistorder i32 %v1_10005754, { 1, 0 }
  uselistorder i32 %v1_10005724, { 2, 1, 0 }
  uselistorder i32 %v1_100056e8, { 1, 0 }
  uselistorder i32 %v3_100056c4, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v1_10005638, { 2, 1, 0 }
  uselistorder i32 %v2_10005600, { 1, 0, 2 }
  uselistorder i32 %v0_100055f0, { 2, 0, 1 }
  uselistorder i32 %v2_100056ac, { 1, 0 }
  uselistorder i32 %v1_10005530, { 1, 0 }
  uselistorder i32 %v1_1000552c, { 1, 0 }
  uselistorder i32 %v1_10005514, { 1, 0 }
  uselistorder i32 %v1_10005510, { 1, 0 }
  uselistorder i32 %v2_100054f8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10005318, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v1_100052b4, { 1, 0 }
  uselistorder i32 %v2_1000520c, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_100051d8, { 1, 2, 0 }
  uselistorder i32 %v0_1000511c, { 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-1552, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1624, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1620, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 26, 18, 19, 20, 23, 24, 21, 22, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 18, 17, 19, 20, 21, 22, 23, 12, 13, 14 }
  uselistorder i32* %r29.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r20.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r19.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %r18.global-to-local, { 3, 1, 0, 2 }
  uselistorder i32* %r17.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r16.global-to-local, { 3, 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 16386, { 1, 0 }
  uselistorder i8* @global_var_1001d19c.102, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001d164.101, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16 }
  uselistorder i32 (i32)* @function_1000510c, { 1, 0 }
  uselistorder i32 (i32)* @function_100043e8, { 1, 0 }
  uselistorder i32 (i32)* @function_1000068c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009e90, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_10009298, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 ()* @function_10005a58, { 2, 10, 9, 8, 7, 6, 5, 4, 3, 0, 1 }
  uselistorder i32 (i32)* @function_10004e64, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000a82c, { 1, 0 }
  uselistorder label %dec_label_pc_100058c8, { 1, 0 }
  uselistorder label %dec_label_pc_100057f8, { 1, 0 }
  uselistorder label %dec_label_pc_10005788, { 1, 0 }
  uselistorder label %dec_label_pc_1000574c, { 1, 0 }
  uselistorder label %dec_label_pc_10005688, { 1, 0 }
  uselistorder label %dec_label_pc_10005618, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100055b4, { 1, 0 }
  uselistorder label %dec_label_pc_10005570, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005560, { 1, 0 }
  uselistorder label %dec_label_pc_10005528.dec_label_pc_10005528_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000550c.dec_label_pc_1000550c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100054fc, { 7, 1, 8, 0, 2, 9, 3, 10, 11, 4, 5, 12, 6, 13 }
  uselistorder label %dec_label_pc_10005308, { 2, 1, 0 }
}

define i32 @function_10005998() local_unnamed_addr {
dec_label_pc_10005998:
  %v3_100059a0 = load i32, i32* @global_var_1001d21c.112, align 4
  %v3_100059a8 = load i32, i32* @global_var_1001d210.113, align 4
  %v1_100059b0 = udiv i32 %v3_100059a0, 524288
  %v3_100059b4 = load i32, i32* @global_var_1001d218.114, align 4
  %v1_100059b8 = mul i32 %v3_100059a8, 2048
  %v2_100059bc = xor i32 %v1_100059b0, %v3_100059a0
  %v2_100059c0 = xor i32 %v1_100059b8, %v3_100059a8
  %v3_100059c4 = load i32, i32* @global_var_1001d214.115, align 4
  %v2_100059c8 = xor i32 %v2_100059bc, %v2_100059c0
  %v1_100059cc = udiv i32 %v2_100059c0, 256
  %v2_100059d0 = xor i32 %v2_100059c8, %v1_100059cc
  store i32 %v3_100059c4, i32* @global_var_1001d210.113, align 4
  store i32 %v3_100059b4, i32* @global_var_1001d214.115, align 4
  store i32 %v3_100059a0, i32* @global_var_1001d218.114, align 4
  store i32 %v2_100059d0, i32* @global_var_1001d21c.112, align 4
  ret i32 %v2_100059d0

; uselistorder directives
  uselistorder i32 %v2_100059d0, { 1, 0 }
  uselistorder i32 %v3_100059a8, { 1, 0 }
  uselistorder i32 %v3_100059a0, { 2, 1, 0 }
}

define i32 @function_100059e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100059e8:
  store i32 268458504, i32* @lr, align 4
  %v0_10005a04 = call i32 @function_10009e00()
  store i32 %v0_10005a04, i32* @global_var_1001d210.113, align 4
  store i32 268458516, i32* @lr, align 4
  %v0_10005a10 = call i32 @function_10009ac0()
  store i32 268458524, i32* @lr, align 4
  %v0_10005a18 = call i32 @function_10009b08()
  %v2_10005a1c = xor i32 %v0_10005a10, %v0_10005a18
  store i32 %v2_10005a1c, i32* @global_var_1001d214.115, align 4
  store i32 268458536, i32* @lr, align 4
  %v1_10005a24 = call i32 @function_1000a158(i32 %v0_10005a18)
  %v3_10005a28 = load i32, i32* @global_var_1001d214.115, align 4
  %v2_10005a38 = xor i32 %v3_10005a28, %v1_10005a24
  store i32 %v2_10005a38, i32* @global_var_1001d21c.112, align 4
  store i32 %v1_10005a24, i32* @global_var_1001d218.114, align 4
  ret i32 %v1_10005a24

; uselistorder directives
  uselistorder i32 %v1_10005a24, { 2, 1, 0 }
  uselistorder i32 %v0_10005a18, { 1, 0 }
  uselistorder i32 ()* @function_10009b08, { 1, 0 }
}

define i32 @function_10005a58() local_unnamed_addr {
dec_label_pc_10005a58:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10005a64 = load i32, i32* @r3, align 4
  store i32 %v0_10005a64, i32* %r31.global-to-local, align 4
  %v2_10005a74 = ptrtoint i32* %stack_var_-72 to i32
  %v0_10005a7c = load i32, i32* @r4, align 4
  store i32 268458648, i32* @lr, align 4
  %v1_10005a94 = call i32 @function_100089f4(i32 41)
  %v3_10005aa0 = call i32 @function_10008940(i32 41, i32* null)
  %v2_10005aac = inttoptr i32 %v3_10005aa0 to i8*
  %v3_10005aac = call i32 @function_1000a2c4(i32 %v2_10005a74, i8* %v2_10005aac)
  %v3_10005ab0 = icmp eq i32 %v0_10005a7c, 0
  br i1 %v3_10005ab0, label %dec_label_pc_10005b34, label %dec_label_pc_10005ab8

dec_label_pc_10005ab8:                            ; preds = %dec_label_pc_10005a58
  %v1_10005ab8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005ab8 = add i32 %v1_10005ab8, %v0_10005a7c
  store i32 %v2_10005ab8, i32* %r26.global-to-local, align 4
  %v1_10005b0c = bitcast i32* %stack_var_-72 to i8*
  br label %dec_label_pc_10005acc

dec_label_pc_10005acc:                            ; preds = %dec_label_pc_10005acc, %dec_label_pc_10005ab8
  %v3_10005acc = load i32, i32* @global_var_1001d21c.112, align 4
  %v3_10005ad4 = load i32, i32* @global_var_1001d210.113, align 4
  %v1_10005ad8 = udiv i32 %v3_10005acc, 524288
  %v3_10005adc = load i32, i32* @global_var_1001d218.114, align 4
  %v1_10005ae0 = mul i32 %v3_10005ad4, 2048
  %v2_10005ae4 = xor i32 %v1_10005ad8, %v3_10005acc
  %v2_10005ae8 = xor i32 %v1_10005ae0, %v3_10005ad4
  %v3_10005aec = load i32, i32* @global_var_1001d214.115, align 4
  %v2_10005af0 = xor i32 %v2_10005ae4, %v2_10005ae8
  %v1_10005af4 = udiv i32 %v2_10005ae8, 256
  %v2_10005af8 = xor i32 %v2_10005af0, %v1_10005af4
  store i32 %v2_10005af8, i32* %r29.global-to-local, align 4
  store i32 %v3_10005aec, i32* @global_var_1001d210.113, align 4
  store i32 %v2_10005af8, i32* @global_var_1001d21c.112, align 4
  store i32 %v3_10005adc, i32* @global_var_1001d214.115, align 4
  store i32 %v3_10005acc, i32* @global_var_1001d218.114, align 4
  store i32 268458768, i32* @lr, align 4
  %v2_10005b0c = call i32 @function_10009270(i8* %v1_10005b0c)
  %v0_10005b10 = load i32, i32* %r29.global-to-local, align 4
  %v2_10005b10 = urem i32 %v0_10005b10, %v2_10005b0c
  store i32 %v2_10005b10, i32* %r29.global-to-local, align 4
  %v0_10005b1c = load i32, i32* @r1, align 4
  %v2_10005b1c = add i32 %v0_10005b1c, %v2_10005b10
  %v1_10005b20 = add i32 %v2_10005b1c, 8
  %v2_10005b20 = inttoptr i32 %v1_10005b20 to i8*
  %v3_10005b20 = load i8, i8* %v2_10005b20, align 1
  %v2_10005b24 = load i32, i32* %r31.global-to-local, align 4
  %v3_10005b24 = inttoptr i32 %v2_10005b24 to i8*
  store i8 %v3_10005b20, i8* %v3_10005b24, align 1
  %v0_10005b28 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005b28 = add i32 %v0_10005b28, 1
  store i32 %v1_10005b28, i32* %r31.global-to-local, align 4
  %v1_10005b2c = load i32, i32* %r26.global-to-local, align 4
  %v4_10005b2c = icmp eq i32 %v1_10005b28, %v1_10005b2c
  br i1 %v4_10005b2c, label %dec_label_pc_10005b34, label %dec_label_pc_10005acc

dec_label_pc_10005b34:                            ; preds = %dec_label_pc_10005acc, %dec_label_pc_10005a58
  store i32 268458812, i32* @lr, align 4
  %v1_10005b38 = call i32 @function_10008968(i32 41)
  ret i32 %v1_10005b38

; uselistorder directives
  uselistorder i32 %v3_10005ad4, { 1, 0 }
  uselistorder i32 %v3_10005acc, { 2, 1, 0 }
  uselistorder i32 %v0_10005a7c, { 1, 0 }
  uselistorder i32 (i32)* @function_10008968, { 0, 1, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 5, 4, 3, 2, 9, 8, 7, 6 }
  uselistorder i32 (i32, i32*)* @function_10008940, { 36, 35, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32)* @function_100089f4, { 0, 1, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 41, { 2, 3, 1, 4, 5, 6, 0 }
}

define i32 @function_10005b6c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005b6c:
  store i32 %arg1, i32* @r31, align 4
  %v3_10005b78 = icmp eq i32 %arg1, 0
  br i1 %v3_10005b78, label %dec_label_pc_10005b9c, label %dec_label_pc_10005b84

dec_label_pc_10005b84:                            ; preds = %dec_label_pc_10005b6c
  %v1_10005b84 = add i32 %arg1, 4
  %v2_10005b84 = inttoptr i32 %v1_10005b84 to i32*
  %v3_10005b84 = load i32, i32* %v2_10005b84, align 4
  store i32 %v3_10005b84, i32* @r3, align 4
  %v3_10005b88 = icmp eq i32 %v3_10005b84, 0
  br i1 %v3_10005b88, label %dec_label_pc_10005b94, label %dec_label_pc_10005b90

dec_label_pc_10005b90:                            ; preds = %dec_label_pc_10005b84
  store i32 268458900, i32* @lr, align 4
  %v0_10005b90 = call i32 @function_1000ab4c()
  %v0_10005b94.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005b94

dec_label_pc_10005b94:                            ; preds = %dec_label_pc_10005b84, %dec_label_pc_10005b90
  %v0_10005b94 = phi i32 [ %arg1, %dec_label_pc_10005b84 ], [ %v0_10005b94.pre, %dec_label_pc_10005b90 ]
  store i32 %v0_10005b94, i32* @r3, align 4
  store i32 268458908, i32* @lr, align 4
  %v0_10005b98 = call i32 @function_1000ab4c()
  br label %dec_label_pc_10005b9c

dec_label_pc_10005b9c:                            ; preds = %dec_label_pc_10005b6c, %dec_label_pc_10005b94
  %v0_10005bac = phi i32 [ 0, %dec_label_pc_10005b6c ], [ %v0_10005b98, %dec_label_pc_10005b94 ]
  ret i32 %v0_10005bac

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10005b9c, { 1, 0 }
  uselistorder label %dec_label_pc_10005b94, { 1, 0 }
}

define i32 @function_10005bb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005bb0:
  %cr4_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp60 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-4308 = alloca i32, align 4
  %stack_var_-4312 = alloca i32, align 4
  %stack_var_-2096 = alloca i32, align 4
  %stack_var_-2108 = alloca i16, align 2
  %stack_var_-4284 = alloca i32, align 4
  %stack_var_-4300 = alloca i32, align 4
  %stack_var_-4143 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %v0_10005bb4 = load i32, i32* @lr, align 4
  store i32 %v0_10005bb4, i32* %r0.global-to-local, align 4
  %v0_10005bb8 = call i32 @__asm_mfcr()
  %v0_10005bc0 = load i32, i32* @r29, align 4
  store i32 %v0_10005bb8, i32* @r29, align 4
  %v2_10005bd4 = ptrtoint i32* %stack_var_-4156 to i32
  %v2_10005bdc = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v2_10005bdc, i32* %r26.global-to-local, align 4
  %v0_10005be0 = load i32, i32* %r0.global-to-local, align 4
  %v0_10005c00 = load i32, i32* @r28, align 4
  store i32 268459024, i32* @lr, align 4
  %v2_10005c0c = call i32 @function_1000aadc(i32 1, i32 8)
  store i32 %v2_10005c0c, i32* %r25.global-to-local, align 4
  %v0_10005c14 = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005c1c.116 to i32), i32* @lr, align 4
  %v1_10005c18 = inttoptr i32 %v0_10005c14 to i8*
  %v2_10005c18 = call i32 @function_10009270(i8* %v1_10005c18)
  %v2_10005c1c = ptrtoint i32* %stack_var_-4143 to i32
  store i32 %v2_10005c1c, i32* %r10.global-to-local, align 4
  %v1_10005c20 = add i32 %v2_10005c18, 1
  store i32 %v2_10005bdc, i32* %r7.global-to-local, align 4
  %v1_10005c2c = add i32 %v2_10005c18, 2
  store i32 %v1_10005c2c, i32* %ctr.global-to-local, align 4
  %tmp94 = icmp sgt i32 %v1_10005c20, -1
  br i1 %tmp94, label %dec_label_pc_10005c54.preheader, label %dec_label_pc_10005c54.preheader.thread

dec_label_pc_10005c54.preheader:                  ; preds = %dec_label_pc_10005bb0
  %v3_10005c28 = icmp eq i32 %v1_10005c20, 0
  %v1_10005c5413 = or i32 %v2_10005c1c, 1
  store i32 %v1_10005c5413, i32* %r11.global-to-local, align 4
  store i32 %v1_10005c20, i32* %ctr.global-to-local, align 4
  br i1 %v3_10005c28, label %dec_label_pc_10005c84, label %dec_label_pc_10005c5c.lr.ph

dec_label_pc_10005c5c.lr.ph:                      ; preds = %dec_label_pc_10005c54.preheader
  %v0_10005c5c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10005c5c

dec_label_pc_10005c40:                            ; preds = %dec_label_pc_10005c6c
  %v3_10005c40 = inttoptr i32 %v2_10005c40 to i8*
  store i8 %v2_10005c5c, i8* %v3_10005c40, align 1
  %v0_10005c44 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005c44 = urem i32 %v0_10005c44, 256
  %v0_10005c48 = load i32, i32* %r10.global-to-local, align 4
  %v1_10005c48 = add i32 %v0_10005c48, 1
  store i32 %v1_10005c48, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005c4c

dec_label_pc_10005c4c:                            ; preds = %dec_label_pc_10005c74, %dec_label_pc_10005c40
  %v0_10005c50 = phi i32 [ %v0_10005c50.pre, %dec_label_pc_10005c74 ], [ %v1_10005c48, %dec_label_pc_10005c40 ]
  %v0_10005c6c20 = phi i32 [ 0, %dec_label_pc_10005c74 ], [ %v1_10005c44, %dec_label_pc_10005c40 ]
  %v0_10005c4c = load i32, i32* @r29, align 4
  %v1_10005c4c = add i32 %v0_10005c4c, 1
  store i32 %v1_10005c4c, i32* @r29, align 4
  store i32 %v0_10005c50, i32* %r10.global-to-local, align 4
  %v1_10005c54 = add i32 %v0_10005c50, 1
  store i32 %v1_10005c54, i32* %r11.global-to-local, align 4
  %v0_10005c58 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005c58 = add i32 %v0_10005c58, -1
  store i32 %v1_10005c58, i32* %ctr.global-to-local, align 4
  %v2_10005c58 = icmp eq i32 %v1_10005c58, 0
  br i1 %v2_10005c58, label %dec_label_pc_10005c84, label %dec_label_pc_10005c5c

dec_label_pc_10005c5c:                            ; preds = %dec_label_pc_10005c5c.lr.ph, %dec_label_pc_10005c4c
  %v2_10005c40 = phi i32 [ %v2_10005c1c, %dec_label_pc_10005c5c.lr.ph ], [ %v0_10005c50, %dec_label_pc_10005c4c ]
  %v0_10005c74 = phi i32 [ 0, %dec_label_pc_10005c5c.lr.ph ], [ %v0_10005c6c20, %dec_label_pc_10005c4c ]
  %v0_10005c5c = phi i32 [ %v0_10005c5c.pre, %dec_label_pc_10005c5c.lr.ph ], [ %v1_10005c4c, %dec_label_pc_10005c4c ]
  %v1_10005c5c = inttoptr i32 %v0_10005c5c to i8*
  %v2_10005c5c = load i8, i8* %v1_10005c5c, align 1
  %v3_10005c5c = zext i8 %v2_10005c5c to i32
  store i32 %v3_10005c5c, i32* %r0.global-to-local, align 4
  %v3_10005c60 = icmp eq i8 %v2_10005c5c, 46
  br i1 %v3_10005c60, label %dec_label_pc_10005c74, label %dec_label_pc_10005c6c

dec_label_pc_10005c6c:                            ; preds = %dec_label_pc_10005c5c
  %v3_10005c64 = icmp eq i8 %v2_10005c5c, 0
  %v1_10005c6c = add nsw i32 %v0_10005c74, 1
  store i32 %v1_10005c6c, i32* %r9.global-to-local, align 4
  br i1 %v3_10005c64, label %dec_label_pc_10005c74, label %dec_label_pc_10005c40

dec_label_pc_10005c74:                            ; preds = %dec_label_pc_10005c6c, %dec_label_pc_10005c5c
  %v1_10005c74 = trunc i32 %v0_10005c74 to i8
  %v2_10005c74 = load i32, i32* %r7.global-to-local, align 4
  %v3_10005c74 = inttoptr i32 %v2_10005c74 to i8*
  store i8 %v1_10005c74, i8* %v3_10005c74, align 1
  %v0_10005c78 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10005c78, i32* %r7.global-to-local, align 4
  %v0_10005c50.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005c4c

dec_label_pc_10005c84:                            ; preds = %dec_label_pc_10005c4c, %dec_label_pc_10005c54.preheader.thread, %dec_label_pc_10005c54.preheader
  %v2_10005c8c = phi i32 [ %v2_10005c1c, %dec_label_pc_10005c54.preheader ], [ %v2_10005c1c, %dec_label_pc_10005c54.preheader.thread ], [ %v0_10005c50, %dec_label_pc_10005c4c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10005c8c = inttoptr i32 %v2_10005c8c to i8*
  store i8 0, i8* %v3_10005c8c, align 1
  %v2_10005c90 = ptrtoint i32* %stack_var_-4300 to i32
  store i32 -1, i32* @r30, align 4
  store i32 1, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10005ca0.117 to i32), i32* @lr, align 4
  %v1_10005c9c = bitcast i32* %stack_var_-4144 to i8*
  %v2_10005c9c = call i32 @function_10009270(i8* %v1_10005c9c)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10005ca4 = load i32, i32* %r26.global-to-local, align 4
  %v2_10005ca4 = add i32 %v0_10005ca4, %v2_10005c9c
  store i32 %v2_10005ca4, i32* %r29.global-to-local, align 4
  %v0_10005cb0 = load i32, i32* @r30, align 4
  %v3_10005cb0 = icmp eq i32 %v0_10005cb0, -1
  store i1 %v3_10005cb0, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-4300, align 4
  %v2_10005cb8 = ptrtoint i32* %stack_var_-4284 to i32
  store i32 %v2_10005cb8, i32* @r31, align 4
  %v2_10005cc0 = ptrtoint i16* %stack_var_-2108 to i32
  store i32 %v2_10005cc0, i32* %r19.global-to-local, align 4
  store i32 268459212, i32* @lr, align 4
  %v2_10005cc8 = call i32 @function_10009270(i8* %v1_10005c9c)
  %v1_10005ccc = add i32 %v2_10005cc8, 17
  store i32 %v1_10005ccc, i32* %r23.global-to-local, align 4
  %v0_10005cd0 = call i32 @function_10005998()
  %v1_10005cd0 = sext i32 %v0_10005cd0 to i64
  store i32 16, i32* @r4, align 4
  %v5_10005ce4 = mul nuw nsw i64 %v1_10005cd0, 2147516417
  store i32 %v2_10005c90, i32* @r3, align 4
  %v2_10005cec = ptrtoint i32* %stack_var_-2096 to i32
  store i32 %v2_10005cec, i32* %r20.global-to-local, align 4
  %v1_10005cf02 = udiv i64 %v5_10005ce4, 140737488355328
  %v1_10005cf0 = trunc i64 %v1_10005cf02 to i32
  store i32 %v1_10005cf0, i32* %r0.global-to-local, align 4
  %v2_10005cf4 = add i32 %v1_10005cf0, %v0_10005cd0
  store i32 %v2_10005cf4, i32* %r9.global-to-local, align 4
  %v1_10005cf8 = urem i32 %v2_10005cf4, 65536
  store i32 %v1_10005cf8, i32* %r22.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10005d00.119 to i32), i32* @lr, align 4
  %v0_10005cfc = call i32 @function_10009318()
  store i32 2, i32* %stack_var_-4300, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  store i32 134744072, i32* %r11.global-to-local, align 4
  %v0_10005d14 = load i32, i32* %r29.global-to-local, align 4
  store i32 53, i32* %r9.global-to-local, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_10005d2c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10005d2c, i32* %stack_var_-4156, align 4
  %v3_10005d34 = add i32 %v0_10005d14, 3
  %v4_10005d34 = inttoptr i32 %v3_10005d34 to i16*
  store i16 1, i16* %v4_10005d34, align 2
  %v0_10005d38 = load i32, i32* %r10.global-to-local, align 4
  %v1_10005d38 = trunc i32 %v0_10005d38 to i16
  %v2_10005d38 = load i32, i32* %r29.global-to-local, align 4
  %v3_10005d38 = add i32 %v2_10005d38, 1
  %v4_10005d38 = inttoptr i32 %v3_10005d38 to i16*
  store i16 %v1_10005d38, i16* %v4_10005d38, align 2
  %v2_10005ddc = ptrtoint i32* %stack_var_-4312 to i32
  %v2_10005e10 = ptrtoint i32* %stack_var_-4308 to i32
  %v1_10005f00 = bitcast i32* %stack_var_-2096 to i8*
  %v4_10005f18 = zext i16 %tmp60 to i32
  %v3_10005f1c = icmp eq i16 %tmp60, 0
  br label %dec_label_pc_10005d3c

dec_label_pc_10005d3c:                            ; preds = %dec_label_pc_10005e7c, %dec_label_pc_10005c84
  %v0_10005d3c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10005d3c, label %dec_label_pc_10005d48, label %dec_label_pc_10005d40

dec_label_pc_10005d40:                            ; preds = %dec_label_pc_10005d3c
  store i32 ptrtoint ([3 x i8]* @global_var_10005d48.120 to i32), i32* @lr, align 4
  %v0_10005d44 = call i32 @function_10009a30()
  br label %dec_label_pc_10005d48

dec_label_pc_10005d48:                            ; preds = %dec_label_pc_10005d3c, %dec_label_pc_10005d40
  store i32 268459352, i32* @lr, align 4
  %v3_10005d54 = call i32 @function_1000a780(i32 2, i32 2, i32 0)
  store i32 %v3_10005d54, i32* @r3, align 4
  %v3_10005d58 = icmp eq i32 %v3_10005d54, -1
  store i1 %v3_10005d58, i1* %cr4_eq.global-to-local, align 1
  store i32 %v3_10005d54, i32* @r30, align 4
  br i1 %v3_10005d58, label %dec_label_pc_10005e84, label %dec_label_pc_10005d64

dec_label_pc_10005d64:                            ; preds = %dec_label_pc_10005d48
  store i32 268459376, i32* @lr, align 4
  %v0_10005d6c = call i32 @function_1000a580()
  %v3_10005d70 = icmp eq i32 %v0_10005d6c, -1
  br i1 %v3_10005d70, label %dec_label_pc_10005e84, label %dec_label_pc_10005d78

dec_label_pc_10005d78:                            ; preds = %dec_label_pc_10005d64
  %v0_10005d78 = load i32, i32* @r30, align 4
  %v0_10005d80 = load i32, i32* %r23.global-to-local, align 4
  store i32 268459404, i32* @lr, align 4
  %v4_10005d88 = call i32 @function_1000a6cc(i32 %v0_10005d78, i32 %v2_10005bd4, i32 %v0_10005d80, i32 16384)
  %v3_10005d8c = icmp eq i32 %v4_10005d88, -1
  br i1 %v3_10005d8c, label %dec_label_pc_10005e84, label %dec_label_pc_10005d94

dec_label_pc_10005d94:                            ; preds = %dec_label_pc_10005d78
  %v0_10005d94 = load i32, i32* @r30, align 4
  store i32 %v0_10005d94, i32* @r4, align 4
  store i32 268459432, i32* @lr, align 4
  %v2_10005da4 = call i32 @function_10009948(i32 3)
  %v0_10005da8 = load i32, i32* @r30, align 4
  store i32 %v0_10005da8, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10005dbc.121 to i32), i32* @lr, align 4
  %v2_10005db8 = call i32 @function_10009948(i32 4)
  store i32 32, i32* %r0.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10005dcc139 = load i32, i32* @r31, align 4
  %v4_10005dcc141 = inttoptr i32 %v2_10005dcc139 to i32*
  store i32 0, i32* %v4_10005dcc141, align 4
  %v0_10005dd0142 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005dd0143 = add i32 %v0_10005dd0142, 4
  store i32 %v1_10005dd0143, i32* %r9.global-to-local, align 4
  %v0_10005dd4144 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005dd4145 = add i32 %v0_10005dd4144, -1
  store i32 %v1_10005dd4145, i32* %ctr.global-to-local, align 4
  %v2_10005dd4146 = icmp eq i32 %v1_10005dd4145, 0
  br i1 %v2_10005dd4146, label %dec_label_pc_10005dd8, label %dec_label_pc_10005dcc.dec_label_pc_10005dcc_crit_edge

dec_label_pc_10005dcc.dec_label_pc_10005dcc_crit_edge: ; preds = %dec_label_pc_10005d94, %dec_label_pc_10005dcc.dec_label_pc_10005dcc_crit_edge
  %v1_10005dd0147 = phi i32 [ %v1_10005dd0, %dec_label_pc_10005dcc.dec_label_pc_10005dcc_crit_edge ], [ %v1_10005dd0143, %dec_label_pc_10005d94 ]
  %v0_10005dcc.pre = load i32, i32* %r11.global-to-local, align 4
  %v2_10005dcc = load i32, i32* @r31, align 4
  %v3_10005dcc = add i32 %v2_10005dcc, %v1_10005dd0147
  %v4_10005dcc = inttoptr i32 %v3_10005dcc to i32*
  store i32 %v0_10005dcc.pre, i32* %v4_10005dcc, align 4
  %v0_10005dd0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005dd0 = add i32 %v0_10005dd0, 4
  store i32 %v1_10005dd0, i32* %r9.global-to-local, align 4
  %v0_10005dd4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005dd4 = add i32 %v0_10005dd4, -1
  store i32 %v1_10005dd4, i32* %ctr.global-to-local, align 4
  %v2_10005dd4 = icmp eq i32 %v1_10005dd4, 0
  br i1 %v2_10005dd4, label %dec_label_pc_10005dd8, label %dec_label_pc_10005dcc.dec_label_pc_10005dcc_crit_edge

dec_label_pc_10005dd8:                            ; preds = %dec_label_pc_10005dcc.dec_label_pc_10005dcc_crit_edge, %dec_label_pc_10005d94
  %v0_10005dd8 = load i32, i32* @r30, align 4
  %v1_10005dd8 = call i32 @__asm_rlwinm(i32 %v0_10005dd8, i32 29, i32 3, i32 29)
  store i32 %v1_10005dd8, i32* %r9.global-to-local, align 4
  store i32 %v2_10005ddc, i32* %r0.global-to-local, align 4
  %v2_10005de0 = add i32 %v1_10005dd8, %v2_10005ddc
  store i32 %v2_10005de0, i32* %r29.global-to-local, align 4
  %v0_10005de4 = load i32, i32* @r30, align 4
  %v1_10005de4 = urem i32 %v0_10005de4, 32
  store i32 %v1_10005de4, i32* %r28.global-to-local, align 4
  %v1_10005de8 = add i32 %v2_10005de0, 28
  %v2_10005de8 = inttoptr i32 %v1_10005de8 to i32*
  %v3_10005de8 = load i32, i32* %v2_10005de8, align 4
  %v3_10005df0 = shl i32 1, %v1_10005de4
  %v1_10005df4 = add i32 %v0_10005de4, 1
  %v2_10005df8 = or i32 %v3_10005df0, %v3_10005de8
  store i32 %v2_10005df8, i32* %r9.global-to-local, align 4
  store i32 %v2_10005df8, i32* %v2_10005de8, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 %v2_10005e10, i32* %r7.global-to-local, align 4
  store i32 5, i32* %stack_var_-4308, align 4
  store i32 268459552, i32* @lr, align 4
  %v5_10005e1c = call i32 @function_10009cf8(i32 %v1_10005df4, i32 %v2_10005cb8, i32 0, i32 0, i32 %v2_10005e10)
  %v3_10005e20 = icmp eq i32 %v5_10005e1c, -1
  br i1 %v3_10005e20, label %dec_label_pc_10005e94, label %dec_label_pc_10005e28

dec_label_pc_10005e28:                            ; preds = %dec_label_pc_10005dd8
  %v3_10005e28 = icmp eq i32 %v5_10005e1c, 0
  br i1 %v3_10005e28, label %dec_label_pc_10005e74, label %dec_label_pc_10005e30

dec_label_pc_10005e30:                            ; preds = %dec_label_pc_10005e28
  %v0_10005e30 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005e30 = add i32 %v0_10005e30, 28
  %v2_10005e30 = inttoptr i32 %v1_10005e30 to i32*
  %v3_10005e30 = load i32, i32* %v2_10005e30, align 4
  %v1_10005e34 = load i32, i32* %r28.global-to-local, align 4
  %v2_10005e34 = urem i32 %v1_10005e34, 32
  %v3_10005e34 = sub i32 0, %v1_10005e34
  %v4_10005e34 = urem i32 %v3_10005e34, 32
  %v5_10005e34 = shl i32 %v3_10005e30, %v4_10005e34
  %v6_10005e34 = xor i32 %v4_10005e34, 31
  %v7_10005e34 = lshr i32 %v3_10005e30, %v6_10005e34
  %v8_10005e34 = udiv i32 %v7_10005e34, 2
  %v9_10005e34 = or i32 %v8_10005e34, %v5_10005e34
  %v10_10005e34 = and i32 %v1_10005e34, 32
  %v11_10005e34 = icmp ne i32 %v10_10005e34, 0
  %v12_10005e34 = lshr i32 -1, %v2_10005e34
  %v13_10005e34 = select i1 %v11_10005e34, i32 0, i32 %v12_10005e34
  %v14_10005e34 = and i32 %v9_10005e34, %v13_10005e34
  %v15_10005e34 = ashr i32 %v3_10005e30, 31
  %v16_10005e34 = sub i32 -1, %v13_10005e34
  %v17_10005e34 = and i32 %v15_10005e34, %v16_10005e34
  %v18_10005e34 = or i32 %v14_10005e34, %v17_10005e34
  store i32 %v18_10005e34, i32* %r0.global-to-local, align 4
  %v1_10005e38 = urem i32 %v18_10005e34, 2
  store i32 %v1_10005e38, i32* %r9.global-to-local, align 4
  %v3_10005e38 = icmp eq i32 %v1_10005e38, 0
  br i1 %v3_10005e38, label %dec_label_pc_10005e94, label %dec_label_pc_10005e40

dec_label_pc_10005e40:                            ; preds = %dec_label_pc_10005e30
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_10005e54 = load i32, i32* @r30, align 4
  store i32 268459612, i32* @lr, align 4
  %v6_10005e58 = call i32 @function_1000a68c(i32 %v0_10005e54, i32 %v2_10005cc0, i32 2048, i32 16384, i32 0, i32 0)
  store i32 %v6_10005e58, i32* %r29.global-to-local, align 4
  %v0_10005e60 = load i32, i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005e68.122 to i32), i32* @lr, align 4
  %v1_10005e64 = inttoptr i32 %v0_10005e60 to i8*
  %v2_10005e64 = call i32 @function_10009270(i8* %v1_10005e64)
  %v1_10005e68 = add i32 %v2_10005e64, 17
  %v2_10005e6c = icmp ult i32 %v6_10005e58, %v1_10005e68
  br i1 %v2_10005e6c, label %dec_label_pc_10005e74, label %dec_label_pc_10005ef8

dec_label_pc_10005e74:                            ; preds = %dec_label_pc_10005ef8, %dec_label_pc_10005e40, %dec_label_pc_10005f18, %dec_label_pc_10005e28
  %v0_10005e74 = load i32, i32* %r27.global-to-local, align 4
  %v3_10005e74 = icmp eq i32 %v0_10005e74, 5
  br i1 %v3_10005e74, label %dec_label_pc_10005e94, label %dec_label_pc_10005e7c

dec_label_pc_10005e7c:                            ; preds = %dec_label_pc_10005e84, %dec_label_pc_10005e74
  %v0_10005e7c = phi i32 [ %v0_10005e8c, %dec_label_pc_10005e84 ], [ %v0_10005e74, %dec_label_pc_10005e74 ]
  %v1_10005e7c = add i32 %v0_10005e7c, 1
  store i32 %v1_10005e7c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10005d3c

dec_label_pc_10005e84:                            ; preds = %dec_label_pc_10005d78, %dec_label_pc_10005d64, %dec_label_pc_10005d48
  store i32 268459660, i32* @lr, align 4
  %v1_10005e88 = call i32 @function_1000b278(i32 1)
  %v0_10005e8c = load i32, i32* %r27.global-to-local, align 4
  %v3_10005e8c = icmp eq i32 %v0_10005e8c, 5
  br i1 %v3_10005e8c, label %dec_label_pc_10005e94, label %dec_label_pc_10005e7c

dec_label_pc_10005e94:                            ; preds = %dec_label_pc_10005e84, %dec_label_pc_10005e74, %dec_label_pc_10005e30, %dec_label_pc_10005dd8, %dec_label_pc_10005f24.backedge, %dec_label_pc_10005f24.preheader
  store i32 268459676, i32* @lr, align 4
  %v0_10005e98 = call i32 @function_10009a30()
  %v0_10005e9c = load i32, i32* %r25.global-to-local, align 4
  %v1_10005e9c = inttoptr i32 %v0_10005e9c to i8*
  %v2_10005e9c = load i8, i8* %v1_10005e9c, align 1
  %v3_10005e9c = zext i8 %v2_10005e9c to i32
  store i32 %v3_10005e9c, i32* %r0.global-to-local, align 4
  %v3_10005ea0 = icmp eq i8 %v2_10005e9c, 0
  br i1 %v3_10005ea0, label %dec_label_pc_10006010, label %dec_label_pc_10005ea8

dec_label_pc_10005ea8:                            ; preds = %dec_label_pc_10005e94, %dec_label_pc_10006020
  %v0_10005eac = phi i32 [ %v0_10005e9c, %dec_label_pc_10005e94 ], [ 0, %dec_label_pc_10006020 ]
  store i32 %v0_10005be0, i32* %r0.global-to-local, align 4
  %v1_10005ec0 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10005bb8)
  store i32 %v0_10005c00, i32* %r28.global-to-local, align 4
  store i32 %v0_10005bc0, i32* %r29.global-to-local, align 4
  ret i32 %v0_10005eac

dec_label_pc_10005ef8:                            ; preds = %dec_label_pc_10005e40
  store i32 %v2_10005cec, i32* %r26.global-to-local, align 4
  store i32 268459780, i32* @lr, align 4
  %v2_10005f00 = call i32 @function_10009270(i8* %v1_10005f00)
  %v3_10005f04 = load i16, i16* %stack_var_-2108, align 2
  %v4_10005f04 = sext i16 %v3_10005f04 to i32
  store i32 %v4_10005f04, i32* %r0.global-to-local, align 4
  %v0_10005f08 = load i32, i32* %r20.global-to-local, align 4
  %v1_10005f0c = load i32, i32* %r22.global-to-local, align 4
  %v4_10005f0c = icmp eq i32 %v4_10005f04, %v1_10005f0c
  %v2_10005f08 = add i32 %v2_10005f00, 5
  %v1_10005f10 = add i32 %v2_10005f08, %v0_10005f08
  br i1 %v4_10005f0c, label %dec_label_pc_10005f18, label %dec_label_pc_10005e74

dec_label_pc_10005f18:                            ; preds = %dec_label_pc_10005ef8
  store i32 %v4_10005f18, i32* %r28.global-to-local, align 4
  br i1 %v3_10005f1c, label %dec_label_pc_10005e74, label %dec_label_pc_10005f24.preheader

dec_label_pc_10005f24.preheader:                  ; preds = %dec_label_pc_10005f18
  %v1_10005f248 = add nsw i32 %v4_10005f18, -1
  store i32 %v1_10005f248, i32* %r0.global-to-local, align 4
  %v1_10005f2c9 = urem i32 %v1_10005f248, 65536
  store i32 %v1_10005f2c9, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_10005f3411 = icmp eq i32 %v1_10005f2c9, 65535
  br i1 %v4_10005f3411, label %dec_label_pc_10005e94, label %dec_label_pc_10005f3c

dec_label_pc_10005f3c:                            ; preds = %dec_label_pc_10005f24.preheader, %dec_label_pc_10005f24.backedge
  %v0_10005f2449 = phi i32 [ %v1_10005f2c, %dec_label_pc_10005f24.backedge ], [ %v1_10005f2c9, %dec_label_pc_10005f24.preheader ]
  %v0_10005f98 = phi i32 [ %storemerge, %dec_label_pc_10005f24.backedge ], [ %v1_10005f10, %dec_label_pc_10005f24.preheader ]
  store i32 %v0_10005f98, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_10005f48110 = inttoptr i32 %v0_10005f98 to i8*
  %v2_10005f48111 = load i8, i8* %v1_10005f48110, align 1
  %v3_10005f48112 = zext i8 %v2_10005f48111 to i32
  store i32 %v3_10005f48112, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10005f50113 = icmp eq i8 %v2_10005f48111, 0
  br i1 %v3_10005f50113, label %dec_label_pc_10005f94, label %dec_label_pc_10005f60.preheader

dec_label_pc_10005f60.preheader:                  ; preds = %dec_label_pc_10005f3c, %dec_label_pc_10006030
  %v2_10005f48119 = phi i8 [ %v2_10005f48, %dec_label_pc_10006030 ], [ %v2_10005f48111, %dec_label_pc_10005f3c ]
  %v3_10005f58122.in = phi i8 [ %v2_10005f48, %dec_label_pc_10006030 ], [ %v2_10005f48111, %dec_label_pc_10005f3c ]
  %v1_10005f54121.in = phi i32 [ %v3_10005f48, %dec_label_pc_10006030 ], [ %v3_10005f48112, %dec_label_pc_10005f3c ]
  %v1_10005f4c120 = phi i32 [ %v1_10005f4c, %dec_label_pc_10006030 ], [ 1, %dec_label_pc_10005f3c ]
  %v0_10005f48118 = phi i32 [ %v1_10006034, %dec_label_pc_10006030 ], [ %v0_10005f98, %dec_label_pc_10005f3c ]
  %v0_10005f4c117 = phi i32 [ %v0_10005f4c28, %dec_label_pc_10006030 ], [ 0, %dec_label_pc_10005f3c ]
  %v0_10005f94116 = phi i32 [ %v2_10006030, %dec_label_pc_10006030 ], [ 1, %dec_label_pc_10005f3c ]
  br label %dec_label_pc_10005f60

dec_label_pc_10005f60:                            ; preds = %dec_label_pc_10005f60.preheader, %dec_label_pc_10005f64
  %v1_10006030 = phi i32 [ 0, %dec_label_pc_10005f64 ], [ %v1_10005f4c120, %dec_label_pc_10005f60.preheader ]
  %v0_10005f70.in = phi i32 [ %v3_10005f80, %dec_label_pc_10005f64 ], [ %v1_10005f54121.in, %dec_label_pc_10005f60.preheader ]
  %v0_10006034 = phi i32 [ %v2_10005f7c, %dec_label_pc_10005f64 ], [ %v0_10005f48118, %dec_label_pc_10005f60.preheader ]
  %v0_10005f60.in = phi i8 [ %v2_10005f80, %dec_label_pc_10005f64 ], [ %v3_10005f58122.in, %dec_label_pc_10005f60.preheader ]
  %v1_10005f60.in = phi i8 [ %v2_10005f80, %dec_label_pc_10005f64 ], [ %v2_10005f48119, %dec_label_pc_10005f60.preheader ]
  %v0_10005f4c28 = phi i32 [ 1, %dec_label_pc_10005f64 ], [ %v0_10005f4c117, %dec_label_pc_10005f60.preheader ]
  %v0_10005f60 = icmp eq i8 %v0_10005f60.in, -65
  %v1_10005f60 = icmp ult i8 %v1_10005f60.in, -65
  %v2_10005f60 = or i1 %v0_10005f60, %v1_10005f60
  br i1 %v2_10005f60, label %dec_label_pc_10006030, label %dec_label_pc_10005f64

dec_label_pc_10005f64:                            ; preds = %dec_label_pc_10005f60
  %v0_10005f70 = mul nuw nsw i32 %v0_10005f70.in, 256
  %v1_10005f64 = add i32 %v0_10006034, 1
  %v2_10005f64 = inttoptr i32 %v1_10005f64 to i8*
  %v3_10005f64 = load i8, i8* %v2_10005f64, align 1
  %v4_10005f64 = zext i8 %v3_10005f64 to i32
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10005f70 = or i32 %v4_10005f64, -49152
  %v1_10005f78 = add nsw i32 %v2_10005f70, %v0_10005f70
  %v0_10005f7c = load i32, i32* %r19.global-to-local, align 4
  %v2_10005f7c = add i32 %v1_10005f78, %v0_10005f7c
  store i32 %v2_10005f7c, i32* %r9.global-to-local, align 4
  %v1_10005f80 = inttoptr i32 %v2_10005f7c to i8*
  %v2_10005f80 = load i8, i8* %v1_10005f80, align 1
  %v3_10005f80 = zext i8 %v2_10005f80 to i32
  store i32 %v3_10005f80, i32* %r0.global-to-local, align 4
  %v3_10005f84 = icmp eq i8 %v2_10005f80, 0
  br i1 %v3_10005f84, label %dec_label_pc_10005f94, label %dec_label_pc_10005f60

dec_label_pc_10005f94:                            ; preds = %dec_label_pc_10005f3c, %dec_label_pc_10006030, %dec_label_pc_10005f64
  %v0_10005f94103 = phi i32 [ %v0_10005f94116, %dec_label_pc_10005f64 ], [ 1, %dec_label_pc_10005f3c ], [ %v2_10006030, %dec_label_pc_10006030 ]
  %v1_10005f94 = phi i32 [ 1, %dec_label_pc_10005f64 ], [ 0, %dec_label_pc_10005f3c ], [ %v0_10005f4c28, %dec_label_pc_10006030 ]
  %v2_10005f94 = add i32 %v1_10005f94, %v0_10005f94103
  store i32 %v2_10005f94, i32* %r10.global-to-local, align 4
  %v2_10005f98 = add i32 %v2_10005f94, %v0_10005f98
  %v3_10005f98 = inttoptr i32 %v2_10005f98 to i16*
  %v4_10005f98 = load i16, i16* %v3_10005f98, align 2
  %v5_10005f98 = zext i16 %v4_10005f98 to i32
  store i32 %v5_10005f98, i32* %r0.global-to-local, align 4
  %v1_10005fa0 = add i32 %v2_10005f98, 10
  store i32 %v1_10005fa0, i32* @r29, align 4
  %v3_10005fa4 = icmp eq i16 %v4_10005f98, 1
  br i1 %v3_10005fa4, label %dec_label_pc_10006048, label %dec_label_pc_10005fac

dec_label_pc_10005fac:                            ; preds = %dec_label_pc_10006048, %dec_label_pc_10005f94
  store i32 %v1_10005fa0, i32* %r9.global-to-local, align 4
  %v1_10005fb8124 = inttoptr i32 %v1_10005fa0 to i8*
  %v2_10005fb8125 = load i8, i8* %v1_10005fb8124, align 1
  %v3_10005fb8126 = zext i8 %v2_10005fb8125 to i32
  store i32 %v3_10005fb8126, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10005fc0127 = icmp eq i8 %v2_10005fb8125, 0
  %v1_10005fc4128 = mul nuw nsw i32 %v3_10005fb8126, 256
  store i32 %v1_10005fc4128, i32* %r10.global-to-local, align 4
  br i1 %v3_10005fc0127, label %dec_label_pc_10006004, label %dec_label_pc_10005fd0.preheader

dec_label_pc_10005fd0.preheader:                  ; preds = %dec_label_pc_10005fac, %dec_label_pc_1000603c
  %v2_10005fb8133 = phi i8 [ %v2_10005fb8, %dec_label_pc_1000603c ], [ %v2_10005fb8125, %dec_label_pc_10005fac ]
  %v3_10005fc8136.in = phi i8 [ %v2_10005fb8, %dec_label_pc_1000603c ], [ %v2_10005fb8125, %dec_label_pc_10005fac ]
  %v1_10005fc4135 = phi i32 [ %v1_10005fc4, %dec_label_pc_1000603c ], [ %v1_10005fc4128, %dec_label_pc_10005fac ]
  %v1_10005fbc134 = phi i32 [ %v1_10005fbc, %dec_label_pc_1000603c ], [ 1, %dec_label_pc_10005fac ]
  %v0_10005fb8132 = phi i32 [ %v1_10006040, %dec_label_pc_1000603c ], [ %v1_10005fa0, %dec_label_pc_10005fac ]
  %v0_10005fbc131 = phi i32 [ %v0_10005fbc38, %dec_label_pc_1000603c ], [ 0, %dec_label_pc_10005fac ]
  %v0_10006004130 = phi i32 [ %v2_1000603c, %dec_label_pc_1000603c ], [ 1, %dec_label_pc_10005fac ]
  br label %dec_label_pc_10005fd0

dec_label_pc_10005fd0:                            ; preds = %dec_label_pc_10005fd0.preheader, %dec_label_pc_10005fd4
  %v1_1000603c = phi i32 [ 0, %dec_label_pc_10005fd4 ], [ %v1_10005fbc134, %dec_label_pc_10005fd0.preheader ]
  %v0_10005fe0 = phi i32 [ %v1_10005ff8, %dec_label_pc_10005fd4 ], [ %v1_10005fc4135, %dec_label_pc_10005fd0.preheader ]
  %v0_10006040 = phi i32 [ %v2_10005fec, %dec_label_pc_10005fd4 ], [ %v0_10005fb8132, %dec_label_pc_10005fd0.preheader ]
  %v0_10005fd0.in = phi i8 [ %v2_10005ff0, %dec_label_pc_10005fd4 ], [ %v3_10005fc8136.in, %dec_label_pc_10005fd0.preheader ]
  %v1_10005fd0.in = phi i8 [ %v2_10005ff0, %dec_label_pc_10005fd4 ], [ %v2_10005fb8133, %dec_label_pc_10005fd0.preheader ]
  %v0_10005fbc38 = phi i32 [ 1, %dec_label_pc_10005fd4 ], [ %v0_10005fbc131, %dec_label_pc_10005fd0.preheader ]
  %v0_10005fd0 = icmp eq i8 %v0_10005fd0.in, -65
  %v1_10005fd0 = icmp ult i8 %v1_10005fd0.in, -65
  %v2_10005fd0 = or i1 %v0_10005fd0, %v1_10005fd0
  br i1 %v2_10005fd0, label %dec_label_pc_1000603c, label %dec_label_pc_10005fd4

dec_label_pc_10005fd4:                            ; preds = %dec_label_pc_10005fd0
  %v1_10005fd4 = add i32 %v0_10006040, 1
  %v2_10005fd4 = inttoptr i32 %v1_10005fd4 to i8*
  %v3_10005fd4 = load i8, i8* %v2_10005fd4, align 1
  %v4_10005fd4 = zext i8 %v3_10005fd4 to i32
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10005fe0 = or i32 %v4_10005fd4, -49152
  %v1_10005fe8 = add nsw i32 %v2_10005fe0, %v0_10005fe0
  %v0_10005fec = load i32, i32* %r19.global-to-local, align 4
  %v2_10005fec = add i32 %v1_10005fe8, %v0_10005fec
  store i32 %v2_10005fec, i32* %r9.global-to-local, align 4
  %v1_10005ff0 = inttoptr i32 %v2_10005fec to i8*
  %v2_10005ff0 = load i8, i8* %v1_10005ff0, align 1
  %v3_10005ff0 = zext i8 %v2_10005ff0 to i32
  store i32 %v3_10005ff0, i32* %r0.global-to-local, align 4
  %v3_10005ff4 = icmp eq i8 %v2_10005ff0, 0
  %v1_10005ff8 = mul nuw nsw i32 %v3_10005ff0, 256
  store i32 %v1_10005ff8, i32* %r10.global-to-local, align 4
  br i1 %v3_10005ff4, label %dec_label_pc_10006004, label %dec_label_pc_10005fd0

dec_label_pc_10006004:                            ; preds = %dec_label_pc_10005fac, %dec_label_pc_1000603c, %dec_label_pc_10005fd4
  %v0_10006004109 = phi i32 [ %v0_10006004130, %dec_label_pc_10005fd4 ], [ 1, %dec_label_pc_10005fac ], [ %v2_1000603c, %dec_label_pc_1000603c ]
  %v1_10006004 = phi i32 [ 1, %dec_label_pc_10005fd4 ], [ 0, %dec_label_pc_10005fac ], [ %v0_10005fbc38, %dec_label_pc_1000603c ]
  %v2_10006004 = add i32 %v1_10006004, %v0_10006004109
  %v2_10006008 = add i32 %v2_10006004, %v1_10005fa0
  br label %dec_label_pc_10005f24.backedge

dec_label_pc_10005f24.backedge:                   ; preds = %dec_label_pc_10006004, %dec_label_pc_100060b4
  %v0_10005f24 = phi i32 [ %v0_10005f2449, %dec_label_pc_10006004 ], [ %v0_10005f24.pre, %dec_label_pc_100060b4 ]
  %storemerge = phi i32 [ %v2_10006008, %dec_label_pc_10006004 ], [ %v2_100060b8, %dec_label_pc_100060b4 ]
  %v1_10005f24 = add i32 %v0_10005f24, -1
  store i32 %v1_10005f24, i32* %r0.global-to-local, align 4
  %v1_10005f2c = urem i32 %v1_10005f24, 65536
  store i32 %v1_10005f2c, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_10005f34 = icmp eq i32 %v1_10005f2c, 65535
  br i1 %v4_10005f34, label %dec_label_pc_10005e94, label %dec_label_pc_10005f3c

dec_label_pc_10006010:                            ; preds = %dec_label_pc_10005e94
  %v1_10006010 = add i32 %v0_10005e9c, 4
  %v2_10006010 = inttoptr i32 %v1_10006010 to i32*
  %v3_10006010 = load i32, i32* %v2_10006010, align 4
  store i32 %v3_10006010, i32* @r3, align 4
  %v3_10006014 = icmp eq i32 %v3_10006010, 0
  br i1 %v3_10006014, label %dec_label_pc_10006020, label %dec_label_pc_1000601c

dec_label_pc_1000601c:                            ; preds = %dec_label_pc_10006010
  store i32 268460064, i32* @lr, align 4
  %v0_1000601c = call i32 @function_1000ab4c()
  %v0_10006020.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_10006020

dec_label_pc_10006020:                            ; preds = %dec_label_pc_10006010, %dec_label_pc_1000601c
  %v0_10006020 = phi i32 [ %v0_10005e9c, %dec_label_pc_10006010 ], [ %v0_10006020.pre, %dec_label_pc_1000601c ]
  store i32 %v0_10006020, i32* @r3, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 268460076, i32* @lr, align 4
  %v0_10006028 = call i32 @function_1000ab4c()
  br label %dec_label_pc_10005ea8

dec_label_pc_10006030:                            ; preds = %dec_label_pc_10005f60
  %v2_10006030 = add i32 %v1_10006030, %v0_10005f94116
  store i32 %v2_10006030, i32* %r10.global-to-local, align 4
  %v1_10006034 = add i32 %v0_10006034, 1
  store i32 %v1_10006034, i32* %r9.global-to-local, align 4
  %v1_10005f48 = inttoptr i32 %v1_10006034 to i8*
  %v2_10005f48 = load i8, i8* %v1_10005f48, align 1
  %v3_10005f48 = zext i8 %v2_10005f48 to i32
  store i32 %v3_10005f48, i32* %r0.global-to-local, align 4
  %v1_10005f4c = xor i32 %v0_10005f4c28, 1
  store i32 %v1_10005f4c, i32* %r11.global-to-local, align 4
  %v3_10005f50 = icmp eq i8 %v2_10005f48, 0
  br i1 %v3_10005f50, label %dec_label_pc_10005f94, label %dec_label_pc_10005f60.preheader

dec_label_pc_1000603c:                            ; preds = %dec_label_pc_10005fd0
  %v2_1000603c = add i32 %v1_1000603c, %v0_10006004130
  %v1_10006040 = add i32 %v0_10006040, 1
  store i32 %v1_10006040, i32* %r9.global-to-local, align 4
  %v1_10005fb8 = inttoptr i32 %v1_10006040 to i8*
  %v2_10005fb8 = load i8, i8* %v1_10005fb8, align 1
  %v3_10005fb8 = zext i8 %v2_10005fb8 to i32
  store i32 %v3_10005fb8, i32* %r0.global-to-local, align 4
  %v1_10005fbc = xor i32 %v0_10005fbc38, 1
  store i32 %v1_10005fbc, i32* %r11.global-to-local, align 4
  %v3_10005fc0 = icmp eq i8 %v2_10005fb8, 0
  %v1_10005fc4 = mul nuw nsw i32 %v3_10005fb8, 256
  store i32 %v1_10005fc4, i32* %r10.global-to-local, align 4
  br i1 %v3_10005fc0, label %dec_label_pc_10006004, label %dec_label_pc_10005fd0.preheader

dec_label_pc_10006048:                            ; preds = %dec_label_pc_10005f94
  %v1_10006048 = add i32 %v2_10005f98, 2
  %v2_10006048 = inttoptr i32 %v1_10006048 to i16*
  %v3_10006048 = load i16, i16* %v2_10006048, align 2
  %v4_10006048 = zext i16 %v3_10006048 to i32
  store i32 %v4_10006048, i32* %r0.global-to-local, align 4
  %v3_1000604c = icmp eq i16 %v3_10006048, 1
  br i1 %v3_1000604c, label %dec_label_pc_10006054, label %dec_label_pc_10005fac

dec_label_pc_10006054:                            ; preds = %dec_label_pc_10006048
  %v1_10006054 = add i32 %v2_10005f98, 8
  %v2_10006054 = inttoptr i32 %v1_10006054 to i16*
  %v3_10006054 = load i16, i16* %v2_10006054, align 2
  %v4_10006054 = zext i16 %v3_10006054 to i32
  store i32 %v4_10006054, i32* %r0.global-to-local, align 4
  %v3_10006058 = icmp eq i16 %v3_10006054, 4
  br i1 %v3_10006058, label %dec_label_pc_10006060, label %dec_label_pc_100060b4

dec_label_pc_10006060:                            ; preds = %dec_label_pc_10006054
  %v2_10006060 = inttoptr i32 %v1_10005fa0 to i8*
  %v3_10006060 = load i8, i8* %v2_10006060, align 1
  %v4_10006060 = zext i8 %v3_10006060 to i32
  store i32 %v4_10006060, i32* %r0.global-to-local, align 4
  store i32 %v4_10006060, i32* %stack_var_-4312, align 4
  %v1_10006068 = add i32 %v2_10005f98, 11
  %v2_10006068 = inttoptr i32 %v1_10006068 to i8*
  %v3_10006068 = load i8, i8* %v2_10006068, align 1
  %v4_10006068 = zext i8 %v3_10006068 to i32
  store i32 %v4_10006068, i32* %r9.global-to-local, align 4
  %v1_10006070 = add i32 %v2_10005f98, 12
  %v2_10006070 = inttoptr i32 %v1_10006070 to i8*
  %v3_10006070 = load i8, i8* %v2_10006070, align 1
  %v4_10006070 = zext i8 %v3_10006070 to i32
  store i32 %v4_10006070, i32* %r0.global-to-local, align 4
  %v1_10006078 = add i32 %v2_10005f98, 13
  %v2_10006078 = inttoptr i32 %v1_10006078 to i8*
  %v3_10006078 = load i8, i8* %v2_10006078, align 1
  %v4_10006078 = zext i8 %v3_10006078 to i32
  store i32 %v4_10006078, i32* %r9.global-to-local, align 4
  %v0_10006080 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006080 = inttoptr i32 %v0_10006080 to i8*
  %v2_10006080 = load i8, i8* %v1_10006080, align 1
  %v3_10006080 = zext i8 %v2_10006080 to i32
  %v1_10006084 = add i32 %v0_10006080, 4
  %v2_10006084 = inttoptr i32 %v1_10006084 to i32*
  %v3_10006084 = load i32, i32* %v2_10006084, align 4
  %v1_10006088 = mul nuw nsw i32 %v3_10006080, 4
  %v1_1000608c = add nuw nsw i32 %v1_10006088, 4
  store i32 268460180, i32* @lr, align 4
  %v3_10006090 = sext i8 %v3_10006078 to i32
  %v4_10006090 = call i32 @function_1000ac4c(i32 %v3_10006084, i32 %v1_1000608c, i32 %v3_10006090)
  %v0_10006094 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006094 = inttoptr i32 %v0_10006094 to i8*
  %v2_10006094 = load i8, i8* %v1_10006094, align 1
  %v3_10006094 = zext i8 %v2_10006094 to i32
  %v3_10006098 = load i32, i32* %stack_var_-4312, align 4
  store i32 %v3_10006098, i32* %r0.global-to-local, align 4
  %v1_1000609c = add nuw nsw i32 %v3_10006094, 1
  store i32 %v1_1000609c, i32* %r11.global-to-local, align 4
  %v1_100060a0 = mul nuw nsw i32 %v3_10006094, 4
  store i32 %v1_100060a0, i32* %r9.global-to-local, align 4
  %v3_100060a4 = add i32 %v1_100060a0, %v4_10006090
  %v4_100060a4 = inttoptr i32 %v3_100060a4 to i32*
  store i32 %v3_10006098, i32* %v4_100060a4, align 4
  %v0_100060a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100060a8 = trunc i32 %v0_100060a8 to i8
  %v2_100060a8 = load i32, i32* %r25.global-to-local, align 4
  %v3_100060a8 = inttoptr i32 %v2_100060a8 to i8*
  store i8 %v1_100060a8, i8* %v3_100060a8, align 1
  %v1_100060ac = load i32, i32* %r25.global-to-local, align 4
  %v2_100060ac = add i32 %v1_100060ac, 4
  %v3_100060ac = inttoptr i32 %v2_100060ac to i32*
  store i32 %v4_10006090, i32* %v3_100060ac, align 4
  %v0_100060b0 = load i32, i32* @r31, align 4
  %v1_100060b0 = add i32 %v0_100060b0, 8
  %v2_100060b0 = inttoptr i32 %v1_100060b0 to i16*
  %v3_100060b0 = load i16, i16* %v2_100060b0, align 2
  %v4_100060b0 = zext i16 %v3_100060b0 to i32
  store i32 %v4_100060b0, i32* %r0.global-to-local, align 4
  %v0_100060b8.pre = load i32, i32* @r29, align 4
  %v0_10005f24.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100060b4

dec_label_pc_100060b4:                            ; preds = %dec_label_pc_10006054, %dec_label_pc_10006060
  %v0_10005f24.pre = phi i32 [ %v0_10005f2449, %dec_label_pc_10006054 ], [ %v0_10005f24.pre.pre, %dec_label_pc_10006060 ]
  %v0_100060b8 = phi i32 [ %v1_10005fa0, %dec_label_pc_10006054 ], [ %v0_100060b8.pre, %dec_label_pc_10006060 ]
  %v0_100060b4 = phi i32 [ %v4_10006054, %dec_label_pc_10006054 ], [ %v4_100060b0, %dec_label_pc_10006060 ]
  store i32 %v0_100060b4, i32* %r0.global-to-local, align 4
  %v2_100060b8 = add i32 %v0_100060b4, %v0_100060b8
  br label %dec_label_pc_10005f24.backedge

dec_label_pc_10005c54.preheader.thread:           ; preds = %dec_label_pc_10005bb0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005c541355 = or i32 %v2_10005c1c, 1
  store i32 %v1_10005c541355, i32* %r11.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10005c84

; uselistorder directives
  uselistorder i32 %v1_100060a0, { 1, 0 }
  uselistorder i32 %v4_10006090, { 1, 0 }
  uselistorder i32 %v1_10005fbc, { 1, 0 }
  uselistorder i8 %v2_10005fb8, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10006040, { 1, 2, 0 }
  uselistorder i32 %v2_1000603c, { 1, 0 }
  uselistorder i32 %v1_10005f4c, { 1, 0 }
  uselistorder i32 %v3_10005f48, { 1, 0 }
  uselistorder i8 %v2_10005f48, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10006034, { 1, 2, 0 }
  uselistorder i32 %v2_10006030, { 2, 1, 0 }
  uselistorder i32 %v1_10005f2c, { 1, 0, 2 }
  uselistorder i8 %v2_10005ff0, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10005fec, { 1, 2, 0 }
  uselistorder i32 %v0_10005fbc38, { 2, 0, 1 }
  uselistorder i32 %v0_10006004130, { 1, 0 }
  uselistorder i32 %v1_10005fc4128, { 1, 0 }
  uselistorder i32 %v1_10005fa0, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %v3_10005f80, { 1, 0 }
  uselistorder i8 %v2_10005f80, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10005f7c, { 1, 2, 0 }
  uselistorder i32 %v0_10005f4c28, { 2, 0, 1 }
  uselistorder i32 %v0_10005f94116, { 1, 0 }
  uselistorder i32 %v0_10005f98, { 2, 0, 1, 3 }
  uselistorder i32 %v1_10005f2c9, { 2, 1, 0 }
  uselistorder i32 %v0_10005e9c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10005e8c, { 1, 0 }
  uselistorder i32 %v1_10005e38, { 1, 0 }
  uselistorder i32 %v4_10005e34, { 1, 0 }
  uselistorder i32 %v1_10005e34, { 1, 2, 0 }
  uselistorder i32 %v3_10005e30, { 2, 1, 0 }
  uselistorder i32 %v1_10005de4, { 1, 0 }
  uselistorder i32 %v0_10005de4, { 1, 0 }
  uselistorder i32 %v1_10005dd4, { 1, 0 }
  uselistorder i32 %v1_10005dd0, { 1, 0 }
  uselistorder i8 %v2_10005c5c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10005c58, { 1, 0 }
  uselistorder i32 %v0_10005c50, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10005c20, { 0, 2, 1 }
  uselistorder i32 %v2_10005c1c, { 2, 0, 1, 4, 3, 5 }
  uselistorder i32 %v0_10005bb8, { 1, 0 }
  uselistorder i16* %stack_var_-2108, { 1, 0 }
  uselistorder i16 %tmp60, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 0, 11, 12, 16, 13, 21, 22, 14, 15, 17, 18, 20, 19 }
  uselistorder i32* %r28.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r25.global-to-local, { 2, 3, 5, 4, 0, 1, 6, 7 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 5, 7, 4, 15, 6, 14, 8, 9, 10, 12, 13, 11, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 9, 30, 11, 12, 29, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 8, 9, 3, 4, 6, 5, 0, 7 }
  uselistorder i8 -65, { 2, 0, 3, 1 }
  uselistorder i32 65535, { 42, 43, 13, 14, 44, 45, 4, 3, 5, 47, 46, 48, 15, 16, 17, 49, 6, 7, 18, 50, 19, 51, 0, 8, 52, 53, 20, 21, 22, 56, 57, 54, 55, 58, 59, 23, 24, 71, 9, 60, 61, 25, 26, 27, 28, 1, 10, 62, 63, 29, 30, 31, 32, 33, 64, 34, 35, 72, 11, 66, 65, 67, 36, 37, 38, 2, 12, 69, 68, 70, 39, 40, 41 }
  uselistorder i32 (i32)* @function_1000b278, { 7, 9, 1, 0, 8, 6, 5, 4, 3, 2 }
  uselistorder i16 1, { 1, 2, 0 }
  uselistorder i32 53, { 1, 0 }
  uselistorder label %dec_label_pc_100060b4, { 1, 0 }
  uselistorder label %dec_label_pc_10006020, { 1, 0 }
  uselistorder label %dec_label_pc_10005f24.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10006004, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10005fd0, { 1, 0 }
  uselistorder label %dec_label_pc_10005fd0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10005f94, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10005f60, { 1, 0 }
  uselistorder label %dec_label_pc_10005f60.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10005f3c, { 1, 0 }
  uselistorder label %dec_label_pc_10005ea8, { 1, 0 }
  uselistorder label %dec_label_pc_10005e94, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10005e74, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10005dcc.dec_label_pc_10005dcc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005d48, { 1, 0 }
  uselistorder label %dec_label_pc_10005c84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10005c5c, { 1, 0 }
}

define i32 @function_100060cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_100060cc:
  %v3_100060e0 = load i32, i32* @global_var_1001d1b8.123, align 4
  store i32 268460264, i32* @lr, align 4
  %v2_100060e4 = call i32 @function_10009b50(i32 %v3_100060e0, i32 9)
  ret i32 %v2_100060e4
}

define i32 @function_100060f8() local_unnamed_addr {
dec_label_pc_100060f8:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10006100 = load i32, i32* @r31, align 4
  %v0_10006104 = load i32, i32* @r3, align 4
  store i32 %v0_10006104, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10006114 = add i32 %v0_10006104, 4
  %v2_10006114 = inttoptr i32 %v1_10006114 to i32*
  %v3_10006114 = load i32, i32* %v2_10006114, align 4
  %v3_1000611c = icmp eq i32 %v3_10006114, -1
  br i1 %v3_1000611c, label %dec_label_pc_10006134, label %dec_label_pc_10006130

dec_label_pc_10006130:                            ; preds = %dec_label_pc_100060f8
  store i32 268460340, i32* @lr, align 4
  %v0_10006130 = call i32 @function_10009a30()
  br label %dec_label_pc_10006134

dec_label_pc_10006134:                            ; preds = %dec_label_pc_100060f8, %dec_label_pc_10006130
  store i32 268460356, i32* @lr, align 4
  %v3_10006140 = call i32 @function_1000a780(i32 2, i32 1, i32 0)
  store i32 256, i32* @r4, align 4
  %v0_1000614c = load i32, i32* @r31, align 4
  %v1_1000614c = add i32 %v0_1000614c, 28
  store i32 %v1_1000614c, i32* @r3, align 4
  %v3_10006150 = icmp eq i32 %v3_10006140, -1
  %v2_10006154 = add i32 %v0_1000614c, 4
  %v3_10006154 = inttoptr i32 %v2_10006154 to i32*
  store i32 %v3_10006140, i32* %v3_10006154, align 4
  br i1 %v3_10006150, label %dec_label_pc_10006134.dec_label_pc_100061cc_crit_edge, label %dec_label_pc_1000615c

dec_label_pc_10006134.dec_label_pc_100061cc_crit_edge: ; preds = %dec_label_pc_10006134
  %v0_100061e0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100061cc

dec_label_pc_1000615c:                            ; preds = %dec_label_pc_10006134
  %v0_1000615c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000615c = load i32, i32* @r31, align 4
  %v2_1000615c = add i32 %v1_1000615c, 24
  %v3_1000615c = inttoptr i32 %v2_1000615c to i32*
  store i32 %v0_1000615c, i32* %v3_1000615c, align 4
  store i32 268460388, i32* @lr, align 4
  %v0_10006160 = call i32 @function_10009318()
  %v0_10006164 = load i32, i32* @r31, align 4
  %v1_10006164 = add i32 %v0_10006164, 4
  %v2_10006164 = inttoptr i32 %v1_10006164 to i32*
  %v3_10006164 = load i32, i32* %v2_10006164, align 4
  store i32 %v3_10006164, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268460412, i32* @lr, align 4
  %v2_10006178 = call i32 @function_10009948(i32 %v3_10006164)
  store i32 4, i32* @r4, align 4
  store i32 268460432, i32* @lr, align 4
  %v2_1000618c = call i32 @function_10009948(i32 %v3_10006164)
  %v3_10006194 = load i32, i32* @global_var_1001d1ac.124, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_1000619c = load i32, i32* @r31, align 4
  %v2_100061a4 = add i32 %v0_1000619c, 8
  %v3_100061a4 = inttoptr i32 %v2_100061a4 to i32*
  store i32 %v3_10006194, i32* %v3_100061a4, align 4
  %v0_100061ac = load i32, i32* %r9.global-to-local, align 4
  %v1_100061ac = load i32, i32* @r31, align 4
  %v2_100061ac = add i32 %v1_100061ac, 12
  %v3_100061ac = inttoptr i32 %v2_100061ac to i32*
  store i32 %v0_100061ac, i32* %v3_100061ac, align 4
  %v0_100061b4 = load i32, i32* @r31, align 4
  %v1_100061b4 = add i32 %v0_100061b4, 4
  %v2_100061b4 = inttoptr i32 %v1_100061b4 to i32*
  %v3_100061b4 = load i32, i32* %v2_100061b4, align 4
  store i32 %v3_100061b4, i32* @r3, align 4
  %v1_100061b8 = add i32 %v0_100061b4, 16
  %v2_100061b8 = inttoptr i32 %v1_100061b8 to i32*
  %v3_100061b8 = load i32, i32* %v2_100061b8, align 4
  store i32 %v3_100061b8, i32* %r9.global-to-local, align 4
  store i32 268460492, i32* @lr, align 4
  %v0_100061c8 = call i32 @function_1000a580()
  br label %dec_label_pc_100061cc

dec_label_pc_100061cc:                            ; preds = %dec_label_pc_10006134.dec_label_pc_100061cc_crit_edge, %dec_label_pc_1000615c
  %v0_100061e0 = phi i32 [ %v0_100061e0.pre, %dec_label_pc_10006134.dec_label_pc_100061cc_crit_edge ], [ %v0_100061c8, %dec_label_pc_1000615c ]
  store i32 %v0_10006100, i32* @r31, align 4
  ret i32 %v0_100061e0

; uselistorder directives
  uselistorder i32 ()* @function_10009318, { 8, 5, 0, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_100061cc, { 1, 0 }
  uselistorder label %dec_label_pc_10006134, { 1, 0 }
}

define i32 @function_100061e4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100061e4:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100061e8 = load i32, i32* @lr, align 4
  store i32 %v0_100061e8, i32* %r0.global-to-local, align 4
  %v3_100061f4 = load i32, i32* @global_var_1001d1a0.125, align 4
  %v1_10006200 = mul i32 %v3_100061f4, 16
  store i32 %v1_10006200, i32* %r9.global-to-local, align 4
  %v0_10006204 = load i32, i32* @r28, align 4
  %v3_1000620c = load i32, i32* @global_var_1001d1a4.126, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_10006218 = add i32 %v1_10006200, 16
  %v0_10006230 = load i32, i32* @r29, align 4
  %v0_10006234 = load i32, i32* @r30, align 4
  store i32 268460608, i32* @lr, align 4
  %v3_1000623c = call i32 @function_1000ac4c(i32 %v3_1000620c, i32 %v1_10006218, i32 %v1_10006200)
  store i32 %v3_1000623c, i32* %r25.global-to-local, align 4
  %v0_10006244 = load i32, i32* @r28, align 4
  store i32 %v3_1000623c, i32* @global_var_1001d1a4.126, align 4
  %v3_1000624c = load i32, i32* @global_var_1001d1a0.125, align 4
  store i32 %v3_1000624c, i32* %r24.global-to-local, align 4
  store i32 268460628, i32* @lr, align 4
  %v1_10006250 = inttoptr i32 %v0_10006244 to i8*
  %v2_10006250 = call i32 @function_10009270(i8* %v1_10006250)
  %sext = mul i32 %v2_10006250, 16777216
  %v1_10006254 = sdiv i32 %sext, 16777216
  %v2_10006254 = add nsw i32 %v1_10006254, 1
  store i32 %v2_10006254, i32* @r29, align 4
  store i32 %v1_10006254, i32* @r30, align 4
  store i32 %v2_10006254, i32* @r3, align 4
  store i32 268460644, i32* @lr, align 4
  %v0_10006260 = call i32 @function_1000a984()
  %v0_10006264 = load i32, i32* @r28, align 4
  %v0_10006268 = load i32, i32* @r29, align 4
  store i32 %v0_10006260, i32* %r31.global-to-local, align 4
  store i32 268460660, i32* @lr, align 4
  %v3_10006270 = call i32 @function_100092f4(i32 %v0_10006264, i32 %v0_10006268, i32 %v0_10006268)
  %v0_10006274 = load i32, i32* @r30, align 4
  %tmp21 = icmp slt i32 %v0_10006274, 1
  %extract.t6 = trunc i32 %v0_10006274 to i8
  br i1 %tmp21, label %dec_label_pc_10006298, label %dec_label_pc_1000627c

dec_label_pc_1000627c:                            ; preds = %dec_label_pc_100061e4
  store i32 %v0_10006274, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006284

dec_label_pc_10006284:                            ; preds = %dec_label_pc_10006284, %dec_label_pc_1000627c
  %v1_1000628c = phi i32 [ %v1_10006290, %dec_label_pc_10006284 ], [ 0, %dec_label_pc_1000627c ]
  %v1_10006284 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006284 = add i32 %v1_10006284, %v1_1000628c
  %v3_10006284 = inttoptr i32 %v2_10006284 to i8*
  %v4_10006284 = load i8, i8* %v3_10006284, align 1
  %v5_10006284 = zext i8 %v4_10006284 to i32
  %v1_10006288 = xor i32 %v5_10006284, 34
  store i32 %v1_10006288, i32* %r0.global-to-local, align 4
  %v3_1000628c = trunc i32 %v1_10006288 to i8
  store i8 %v3_1000628c, i8* %v3_10006284, align 1
  %v0_10006290 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006290 = add i32 %v0_10006290, 1
  store i32 %v1_10006290, i32* %r9.global-to-local, align 4
  %v0_10006294 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006294 = add i32 %v0_10006294, -1
  store i32 %v1_10006294, i32* %ctr.global-to-local, align 4
  %v2_10006294 = icmp eq i32 %v1_10006294, 0
  br i1 %v2_10006294, label %dec_label_pc_10006298.loopexit, label %dec_label_pc_10006284

dec_label_pc_10006298.loopexit:                   ; preds = %dec_label_pc_10006284
  %v0_100062b0.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_100062b0.pre to i8
  br label %dec_label_pc_10006298

dec_label_pc_10006298:                            ; preds = %dec_label_pc_10006298.loopexit, %dec_label_pc_100061e4
  %v0_100062b0.off0 = phi i8 [ %extract.t, %dec_label_pc_10006298.loopexit ], [ %extract.t6, %dec_label_pc_100061e4 ]
  %v3_10006298 = load i32, i32* @global_var_1001d1a0.125, align 4
  %v0_1000629c = load i32, i32* %r23.global-to-local, align 4
  %v3_100062a0 = load i32, i32* @global_var_1001d1a4.126, align 4
  %v1_100062a4 = mul i32 %v3_10006298, 16
  %v2_100062a8 = add i32 %v3_100062a0, %v1_100062a4
  store i32 %v2_100062a8, i32* %r9.global-to-local, align 4
  %v0_100062ac = load i32, i32* %r24.global-to-local, align 4
  %v1_100062ac = mul i32 %v0_100062ac, 16
  store i32 %v1_100062ac, i32* %r0.global-to-local, align 4
  %v3_100062b0 = add i32 %v2_100062a8, 12
  %v4_100062b0 = inttoptr i32 %v3_100062b0 to i8*
  store i8 %v0_100062b0.off0, i8* %v4_100062b0, align 1
  %v0_100062b4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100062b4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100062b4 = load i32, i32* %r0.global-to-local, align 4
  %v3_100062b4 = add i32 %v2_100062b4, %v1_100062b4
  %v4_100062b4 = inttoptr i32 %v3_100062b4 to i32*
  store i32 %v0_100062b4, i32* %v4_100062b4, align 4
  %v3_100062b8 = load i32, i32* @global_var_1001d1a0.125, align 4
  store i32 %v3_100062b8, i32* @r30, align 4
  %v3_100062bc = load i32, i32* @global_var_1001d1a4.126, align 4
  store i32 %v3_100062bc, i32* %r25.global-to-local, align 4
  store i32 268460740, i32* @lr, align 4
  %v1_100062c0 = inttoptr i32 %v0_1000629c to i8*
  %v2_100062c0 = call i32 @function_10009270(i8* %v1_100062c0)
  %sext1 = mul i32 %v2_100062c0, 16777216
  %v1_100062c4 = sdiv i32 %sext1, 16777216
  %v2_100062c4 = add nsw i32 %v1_100062c4, 1
  store i32 %v2_100062c4, i32* @r29, align 4
  store i32 %v1_100062c4, i32* @r28, align 4
  store i32 %v2_100062c4, i32* @r3, align 4
  store i32 268460756, i32* @lr, align 4
  %v0_100062d0 = call i32 @function_1000a984()
  %v0_100062d4 = load i32, i32* %r23.global-to-local, align 4
  %v0_100062d8 = load i32, i32* @r29, align 4
  store i32 %v0_100062d0, i32* %r31.global-to-local, align 4
  store i32 268460772, i32* @lr, align 4
  %v3_100062e0 = call i32 @function_100092f4(i32 %v0_100062d4, i32 %v0_100062d8, i32 %v0_100062d8)
  %v0_100062e4 = load i32, i32* @r28, align 4
  %tmp22 = icmp slt i32 %v0_100062e4, 1
  %extract.t8 = trunc i32 %v0_100062e4 to i8
  br i1 %tmp22, label %dec_label_pc_10006308, label %dec_label_pc_100062ec

dec_label_pc_100062ec:                            ; preds = %dec_label_pc_10006298
  store i32 %v0_100062e4, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100062f4

dec_label_pc_100062f4:                            ; preds = %dec_label_pc_100062f4, %dec_label_pc_100062ec
  %v1_100062fc = phi i32 [ %v1_10006300, %dec_label_pc_100062f4 ], [ 0, %dec_label_pc_100062ec ]
  %v1_100062f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100062f4 = add i32 %v1_100062f4, %v1_100062fc
  %v3_100062f4 = inttoptr i32 %v2_100062f4 to i8*
  %v4_100062f4 = load i8, i8* %v3_100062f4, align 1
  %v5_100062f4 = zext i8 %v4_100062f4 to i32
  %v1_100062f8 = xor i32 %v5_100062f4, 34
  store i32 %v1_100062f8, i32* %r0.global-to-local, align 4
  %v3_100062fc = trunc i32 %v1_100062f8 to i8
  store i8 %v3_100062fc, i8* %v3_100062f4, align 1
  %v0_10006300 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006300 = add i32 %v0_10006300, 1
  store i32 %v1_10006300, i32* %r9.global-to-local, align 4
  %v0_10006304 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006304 = add i32 %v0_10006304, -1
  store i32 %v1_10006304, i32* %ctr.global-to-local, align 4
  %v2_10006304 = icmp eq i32 %v1_10006304, 0
  br i1 %v2_10006304, label %dec_label_pc_10006308.loopexit, label %dec_label_pc_100062f4

dec_label_pc_10006308.loopexit:                   ; preds = %dec_label_pc_100062f4
  %v0_1000631c.pre = load i32, i32* @r28, align 4
  %extract.t7 = trunc i32 %v0_1000631c.pre to i8
  br label %dec_label_pc_10006308

dec_label_pc_10006308:                            ; preds = %dec_label_pc_10006308.loopexit, %dec_label_pc_10006298
  %v0_1000631c.off0 = phi i8 [ %extract.t7, %dec_label_pc_10006308.loopexit ], [ %extract.t8, %dec_label_pc_10006298 ]
  %v3_10006308 = load i32, i32* @global_var_1001d1a0.125, align 4
  %v3_10006310 = load i32, i32* @global_var_1001d1a4.126, align 4
  %v1_10006314 = mul i32 %v3_10006308, 16
  %v2_10006318 = or i32 %v1_10006314, 13
  %v3_1000631c = add i32 %v2_10006318, %v3_10006310
  %v4_1000631c = inttoptr i32 %v3_1000631c to i8*
  store i8 %v0_1000631c.off0, i8* %v4_1000631c, align 1
  %v0_10006320 = load i32, i32* @r30, align 4
  %v1_10006320 = mul i32 %v0_10006320, 16
  %v1_10006324 = load i32, i32* %r25.global-to-local, align 4
  %v2_10006324 = add i32 %v1_10006324, %v1_10006320
  store i32 %v2_10006324, i32* %r9.global-to-local, align 4
  %v3_10006328 = load i32, i32* @global_var_1001d1a0.125, align 4
  %v3_1000632c = load i32, i32* @global_var_1001d1a4.126, align 4
  %v1_10006330 = mul i32 %v3_10006328, 16
  %v3_10006334 = load i16, i16* @global_var_1001d1a8.127, align 2
  %v4_10006334 = zext i16 %v3_10006334 to i32
  store i32 %v4_10006334, i32* %r7.global-to-local, align 4
  %v2_10006338 = add i32 %v3_1000632c, %v1_10006330
  store i32 %v2_10006338, i32* %r11.global-to-local, align 4
  store i32 %v0_100061e8, i32* %r0.global-to-local, align 4
  %v1_10006340 = add i32 %v3_10006328, 1
  store i32 %v1_10006340, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001d1a8.127 to i32), i32* %r8.global-to-local, align 4
  %v0_10006348 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006348 = add i32 %v2_10006324, 4
  %v3_10006348 = inttoptr i32 %v2_10006348 to i32*
  store i32 %v0_10006348, i32* %v3_10006348, align 4
  %v0_10006350 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006350, i32* @global_var_1001d1a0.125, align 4
  store i32 %v0_10006204, i32* @r28, align 4
  store i32 %v0_10006230, i32* @r29, align 4
  store i32 %v0_10006234, i32* @r30, align 4
  %v0_10006380 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006380 = trunc i32 %v0_10006380 to i16
  %v2_10006380 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006380 = add i32 %v2_10006380, 10
  %v4_10006380 = inttoptr i32 %v3_10006380 to i16*
  store i16 %v1_10006380, i16* %v4_10006380, align 2
  %v0_10006384 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006384 = trunc i32 %v0_10006384 to i16
  %v2_10006384 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006384 = add i32 %v2_10006384, 8
  %v4_10006384 = inttoptr i32 %v3_10006384 to i16*
  store i16 %v1_10006384, i16* %v4_10006384, align 2
  %v0_10006388 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006388 = trunc i32 %v0_10006388 to i16
  store i16 %v1_10006388, i16* @global_var_1001d1a8.127, align 2
  ret i32 %v3_100062e0

; uselistorder directives
  uselistorder i32 %v3_10006328, { 1, 0 }
  uselistorder i32 %v1_10006304, { 1, 0 }
  uselistorder i32 %v1_10006300, { 1, 0 }
  uselistorder i32 %v0_100062e4, { 1, 0, 2 }
  uselistorder i32 %v1_10006294, { 1, 0 }
  uselistorder i32 %v1_10006290, { 1, 0 }
  uselistorder i32 %v0_10006274, { 1, 0, 2 }
  uselistorder i32 %v1_10006200, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*)* @function_10009270, { 0, 1, 7, 8, 9, 10, 11, 28, 2, 26, 27, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 (i32, i32, i32)* @function_1000ac4c, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10006390(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006390:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i16 @__decompiler_undefined_function_2()
  %tmp59 = call i16 @__decompiler_undefined_function_2()
  %tmp60 = call i8 @__decompiler_undefined_function_1()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-1920 = alloca i32, align 4
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1908 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1928 = alloca i32, align 4
  %stack_var_-1888 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1744 = alloca i32, align 4
  %stack_var_-1916 = alloca i64, align 8
  %v0_10006390 = load i32, i32* @lr, align 4
  store i32 %v0_10006390, i32* %r0.global-to-local, align 4
  %v0_10006398 = call i32 @__asm_mfcr()
  store i32 %v0_10006398, i32* %r3.global-to-local, align 4
  %v0_100063a0 = load i32, i32* @r15, align 4
  %v0_100063d4 = load i32, i32* @r28, align 4
  %v0_100063d8 = load i32, i32* @r29, align 4
  %v0_100063dc = load i32, i32* @r30, align 4
  %v0_100063e4 = load i32, i32* %r0.global-to-local, align 4
  store i32 268461040, i32* @lr, align 4
  %v0_100063ec = call i32 @function_10009a78()
  store i32 %v0_100063ec, i32* %r3.global-to-local, align 4
  %v1_100063f0 = icmp slt i32 %v0_100063ec, 0
  %v3_100063f0 = icmp eq i32 %v0_100063ec, 0
  store i1 %v1_100063f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100063f0, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_100063ec, i32* @global_var_1001d1b8.123, align 4
  %tmp103 = icmp slt i32 %v0_100063ec, 1
  br i1 %tmp103, label %dec_label_pc_10006460, label %dec_label_pc_10006400

dec_label_pc_10006400:                            ; preds = %dec_label_pc_10006460, %dec_label_pc_10006390
  store i32 %v0_100063e4, i32* %r0.global-to-local, align 4
  store i32 %v0_100063a0, i32* %r15.global-to-local, align 4
  %v1_10006414 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006398)
  store i32 %v0_100063d4, i32* @r28, align 4
  store i32 %v0_100063d8, i32* @r29, align 4
  store i32 %v0_100063dc, i32* @r30, align 4
  ret i32 %v0_100063ec

dec_label_pc_10006460:                            ; preds = %dec_label_pc_10006390
  %v1_10006460 = icmp slt i32 %v0_100063ec, -1
  %v3_10006460 = icmp eq i32 %v0_100063ec, -1
  store i1 %v1_10006460, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006460, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006460, label %dec_label_pc_10006400, label %dec_label_pc_10006468

dec_label_pc_10006468:                            ; preds = %dec_label_pc_10006460
  store i32 268461164, i32* @lr, align 4
  %v1_10006468 = call i32 @function_10009574(i32 %v0_100063ec)
  store i32 %v1_10006468, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v1_10006468, i32* @global_var_1001d188.12, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006478.128 to i32), i32* @lr, align 4
  %v1_10006474 = call i32 @function_100059e8(i32 %v1_10006468)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268461184, i32* @lr, align 4
  %v0_1000647c = call i32 @function_10009e00()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_1000647c, i32* @global_var_1001d1ac.124, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006494.129 to i32), i32* @lr, align 4
  %v2_10006490 = call i32 @function_1000aadc(i32 256, i32 288)
  store i32 %v2_10006490, i32* %r3.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 256, i32* %ctr.global-to-local, align 4
  store i32 %v2_10006490, i32* @global_var_1001d1b0.130, align 4
  store i32 %v2_10006490, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100064c0 = add i32 %v2_10006490, 4
  store i32 %v1_100064c0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100064c4

dec_label_pc_100064c4:                            ; preds = %dec_label_pc_100064c4.dec_label_pc_100064c4_crit_edge, %dec_label_pc_10006468
  %v1_100064d8 = phi i32 [ %v1_100064e0, %dec_label_pc_100064c4.dec_label_pc_100064c4_crit_edge ], [ %v1_100064c0, %dec_label_pc_10006468 ]
  %v0_100064d8 = phi i32 [ %v0_100064d8.pre, %dec_label_pc_100064c4.dec_label_pc_100064c4_crit_edge ], [ -1, %dec_label_pc_10006468 ]
  %v1_100064d4 = phi i32 [ %v1_100064d4.pre, %dec_label_pc_100064c4.dec_label_pc_100064c4_crit_edge ], [ %v2_10006490, %dec_label_pc_10006468 ]
  %v0_100064d0 = phi i32 [ %v0_100064e4, %dec_label_pc_100064c4.dec_label_pc_100064c4_crit_edge ], [ 0, %dec_label_pc_10006468 ]
  %v1_100064c4 = mul i32 %v0_100064d0, 256
  store i32 %v1_100064c4, i32* %r0.global-to-local, align 4
  %v2_100064cc = mul i32 %v0_100064d0, 288
  %v1_100064d0 = add i32 %v0_100064d0, 1
  store i32 %v1_100064d0, i32* %r10.global-to-local, align 4
  %v2_100064d4 = add i32 %v2_100064cc, %v1_100064d4
  store i32 %v2_100064d4, i32* %r9.global-to-local, align 4
  %v2_100064d8 = inttoptr i32 %v1_100064d8 to i32*
  store i32 %v0_100064d8, i32* %v2_100064d8, align 4
  %v0_100064dc = load i32, i32* %r7.global-to-local, align 4
  %v1_100064dc = load i32, i32* %r9.global-to-local, align 4
  %v2_100064dc = add i32 %v1_100064dc, 12
  %v3_100064dc = inttoptr i32 %v2_100064dc to i32*
  store i32 %v0_100064dc, i32* %v3_100064dc, align 4
  %v0_100064e0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100064e0 = add i32 %v0_100064e0, 288
  store i32 %v1_100064e0, i32* %r11.global-to-local, align 4
  %v0_100064e4 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100064e4, i32* %r9.global-to-local, align 4
  %v0_100064e8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100064e8 = add i32 %v0_100064e8, -1
  store i32 %v1_100064e8, i32* %ctr.global-to-local, align 4
  %v2_100064e8 = icmp eq i32 %v1_100064e8, 0
  br i1 %v2_100064e8, label %dec_label_pc_100064ec, label %dec_label_pc_100064c4.dec_label_pc_100064c4_crit_edge

dec_label_pc_100064c4.dec_label_pc_100064c4_crit_edge: ; preds = %dec_label_pc_100064c4
  %v1_100064d4.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_100064d8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100064c4

dec_label_pc_100064ec:                            ; preds = %dec_label_pc_100064c4
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i64 256, i64* %stack_var_-1916, align 8
  store i32 268461316, i32* @lr, align 4
  %v3_10006500 = call i32 @function_1000a780(i32 2, i32 3, i32 6)
  store i32 %v3_10006500, i32* %r3.global-to-local, align 4
  %v1_10006504 = icmp slt i32 %v3_10006500, -1
  %v3_10006504 = icmp eq i32 %v3_10006500, -1
  store i1 %v1_10006504, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006504, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10006500, i32* @r29, align 4
  store i32 %v3_10006500, i32* @global_var_1001d1b4.131, align 4
  br i1 %v3_10006504, label %dec_label_pc_10007c0c, label %dec_label_pc_10006518

dec_label_pc_10006518:                            ; preds = %dec_label_pc_100064ec
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268461352, i32* @lr, align 4
  %v1_10006524 = call i32 @function_10009948(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_1000652c = or i32 %v1_10006524, 2048
  store i32 %v1_1000652c, i32* %r5.global-to-local, align 4
  %v0_10006530 = load i32, i32* @r29, align 4
  store i32 %v0_10006530, i32* %r3.global-to-local, align 4
  store i32 268461372, i32* @lr, align 4
  %v2_10006538 = call i32 @function_10009948(i32 %v0_10006530)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006540 = load i32, i32* @global_var_1001d1b4.131, align 4
  store i32 %v3_10006540, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10006550 = ptrtoint i64* %stack_var_-1916 to i32
  store i32 %v2_10006550, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1916, align 8
  store i32 268461408, i32* @lr, align 4
  %v5_1000655c = call i32 @function_1000a744(i32 %v3_10006540, i32 0, i32 3, i32 %v2_10006550)
  store i32 %v5_1000655c, i32* %r3.global-to-local, align 4
  %v1_10006560 = icmp slt i32 %v5_1000655c, 0
  %v3_10006560 = icmp eq i32 %v5_1000655c, 0
  store i1 %v1_10006560, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006560, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006560, label %dec_label_pc_10006568, label %dec_label_pc_10008918

dec_label_pc_10006568:                            ; preds = %dec_label_pc_10006518, %dec_label_pc_10006568
  %v0_10006568 = call i32 @function_10005998()
  %v1_1000656c = urem i32 %v0_10006568, 65536
  store i32 %v1_1000656c, i32* %r3.global-to-local, align 4
  %v1_10006570 = icmp ult i32 %v1_1000656c, 1023
  %v3_10006570 = icmp eq i32 %v1_1000656c, 1023
  store i1 %v1_10006570, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006570, i1* %cr7_eq.global-to-local, align 1
  %tmp104 = icmp ult i32 %v1_1000656c, 1024
  br i1 %tmp104, label %dec_label_pc_10006568, label %dec_label_pc_1000657c

dec_label_pc_1000657c:                            ; preds = %dec_label_pc_10006568
  %v5_10006574.le = trunc i32 %v0_10006568 to i16
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_10006584 = load i32, i32* @global_var_1001d220.132, align 4
  store i32 %v3_10006584, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001d220.132 to i32), i32* @r30, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10006594 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10006594, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v1_1000659c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000659c, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_1000659c, i32* @global_var_1001d220.132, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001d222.134 to i16*), align 4
  %v0_100065b0 = call i32 @function_10005998()
  %v1_100065b0 = trunc i32 %v0_100065b0 to i16
  store i32 %v0_100065b0, i32* %r3.global-to-local, align 4
  %v3_100065b4 = load i32, i32* @global_var_1001d240.135, align 4
  store i32 %v3_100065b4, i32* %r11.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i8 6, i8* bitcast (i32* @global_var_1001d229.136 to i8*), align 4
  %v1_100065c4 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_100065c4, i32* %r11.global-to-local, align 4
  %v0_100065c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100065c8 = trunc i32 %v0_100065c8 to i8
  store i8 %v1_100065c8, i8* bitcast (i32* @global_var_1001d228.137 to i8*), align 4
  store i16 %v1_100065b0, i16* bitcast (i32* @global_var_1001d224.138 to i16*), align 4
  store i32 %v1_100065c4, i32* @global_var_1001d240.135, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000c7e4.139 to i32), i32* @r28, align 4
  store i16 23, i16* @global_var_1001d236.140, align 2
  store i32 ptrtoint (i32* @global_var_1000c940.141 to i32), i32* @r26, align 4
  %v4_100065e4 = sext i16 %v5_10006574.le to i32
  store i32 %v4_100065e4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000c988.142 to i32), i32* @r27, align 4
  store i32 268500992, i32* %r25.global-to-local, align 4
  store i16 %v5_10006574.le, i16* bitcast (i32* @global_var_1001d234.133 to i16*), align 4
  %v0_100065f8 = call i32 @function_10005998()
  %v1_100065f8 = trunc i32 %v0_100065f8 to i16
  store i16 %v1_100065f8, i16* bitcast (i32* @global_var_1001d242.143 to i16*), align 4
  %v0_10006600 = load i32, i32* @r26, align 4
  %v0_10006604 = load i32, i32* @r28, align 4
  store i32 %v0_10006604, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  %v3_1000660c = load i32, i32* @global_var_1001d240.135, align 4
  store i32 ptrtoint (i32* @global_var_1000c480.144 to i32), i32* @r25, align 4
  %v1_1000661c = or i32 %v3_1000660c, 131072
  store i32 %v1_1000661c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000c490.145 to i32), i32* @r24, align 4
  store i32 %v1_1000661c, i32* @global_var_1001d240.135, align 4
  store i32 ptrtoint (i32* @global_var_1000c4a4.146 to i32), i32* @r23, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268461624, i32* @lr, align 4
  %v4_10006634 = call i32 @function_100061e4(i32 %v0_10006604, i32 %v0_10006600, i32 4)
  %v0_10006638 = load i32, i32* @r27, align 4
  store i32 %v0_10006638, i32* %r3.global-to-local, align 4
  %v0_1000663c = load i32, i32* @r26, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268461640, i32* @lr, align 4
  %v4_10006644 = call i32 @function_100061e4(i32 %v0_10006638, i32 %v0_1000663c, i32 5)
  %v0_10006650 = load i32, i32* @r28, align 4
  store i32 %v0_10006650, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c4ac.148 to i32), i32* @r22, align 4
  store i32 268461664, i32* @lr, align 4
  %v4_1000665c = call i32 @function_100061e4(i32 %v0_10006650, i32 ptrtoint (i32* @global_var_1000c470.147 to i32), i32 10)
  store i32 9, i32* %r5.global-to-local, align 4
  %v0_1000666c = load i32, i32* @r28, align 4
  store i32 %v0_1000666c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000c4b4.150 to i32), i32* @r29, align 4
  store i32 268461688, i32* @lr, align 4
  %v5_10006674 = call i32 @function_100061e4(i32 %v0_1000666c, i32 ptrtoint ([6 x i8]* @global_var_1000c478.149 to i32), i32 9)
  %v0_10006678 = load i32, i32* @r28, align 4
  store i32 %v0_10006678, i32* %r3.global-to-local, align 4
  %v0_1000667c = load i32, i32* @r27, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268461704, i32* @lr, align 4
  %v5_10006684 = call i32 @function_100061e4(i32 %v0_10006678, i32 %v0_1000667c, i32 8)
  %v0_10006688 = load i32, i32* @r27, align 4
  store i32 %v0_10006688, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268461720, i32* @lr, align 4
  %v5_10006694 = call i32 @function_100061e4(i32 %v0_10006688, i32 %v0_10006688, i32 7)
  %v0_10006698 = load i32, i32* @r25, align 4
  %v0_1000669c = load i32, i32* @r28, align 4
  store i32 %v0_1000669c, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268461736, i32* @lr, align 4
  %v4_100066a4 = call i32 @function_100061e4(i32 %v0_1000669c, i32 %v0_10006698, i32 6)
  %v0_100066b0 = load i32, i32* @r28, align 4
  store i32 %v0_100066b0, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* %r21.global-to-local, align 4
  store i32 268461760, i32* @lr, align 4
  %v5_100066bc = call i32 @function_100061e4(i32 %v0_100066b0, i32 ptrtoint ([8 x i8]* @global_var_1000c488.151 to i32), i32 5)
  %v0_100066c0 = load i32, i32* @r28, align 4
  store i32 %v0_100066c0, i32* %r3.global-to-local, align 4
  %v0_100066c4 = load i32, i32* @r24, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268461776, i32* @lr, align 4
  %v5_100066cc = call i32 @function_100061e4(i32 %v0_100066c0, i32 %v0_100066c4, i32 5)
  %v0_100066d8 = load i32, i32* @r28, align 4
  store i32 %v0_100066d8, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ca0c.153 to i32), i32* %r21.global-to-local, align 4
  store i32 268461800, i32* @lr, align 4
  %v5_100066e4 = call i32 @function_100061e4(i32 %v0_100066d8, i32 ptrtoint ([9 x i8]* @global_var_1000c498.152 to i32), i32 5)
  %v0_100066e8 = load i32, i32* @r28, align 4
  store i32 %v0_100066e8, i32* %r3.global-to-local, align 4
  %v0_100066ec = load i32, i32* @r23, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268461816, i32* @lr, align 4
  %v4_100066f4 = call i32 @function_100061e4(i32 %v0_100066e8, i32 %v0_100066ec, i32 5)
  %v0_100066f8 = load i32, i32* @r22, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  %v0_10006700 = load i32, i32* @r28, align 4
  store i32 %v0_10006700, i32* %r3.global-to-local, align 4
  store i32 268461832, i32* @lr, align 4
  %v4_10006704 = call i32 @function_100061e4(i32 %v0_10006700, i32 %v0_100066f8, i32 5)
  %v0_10006708 = load i32, i32* @r24, align 4
  store i32 %v0_10006708, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268461848, i32* @lr, align 4
  %v5_10006714 = call i32 @function_100061e4(i32 %v0_10006708, i32 %v0_10006708, i32 7)
  %v0_10006718 = load i32, i32* @r24, align 4
  store i32 %v0_10006718, i32* %r3.global-to-local, align 4
  %v0_1000671c = load i32, i32* @r26, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268461864, i32* @lr, align 4
  %v4_10006724 = call i32 @function_100061e4(i32 %v0_10006718, i32 %v0_1000671c, i32 7)
  %v0_10006728 = load i32, i32* @r29, align 4
  store i32 %v0_10006728, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268461880, i32* @lr, align 4
  %v5_10006734 = call i32 @function_100061e4(i32 %v0_10006728, i32 %v0_10006728, i32 5)
  %v0_10006738 = load i32, i32* @r29, align 4
  store i32 %v0_10006738, i32* %r3.global-to-local, align 4
  %v0_1000673c = load i32, i32* @r27, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268461896, i32* @lr, align 4
  %v5_10006744 = call i32 @function_100061e4(i32 %v0_10006738, i32 %v0_1000673c, i32 7)
  %v0_10006748 = load i32, i32* @r29, align 4
  store i32 %v0_10006748, i32* %r3.global-to-local, align 4
  %v0_1000674c = load i32, i32* %r21.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268461912, i32* @lr, align 4
  %v4_10006754 = call i32 @function_100061e4(i32 %v0_10006748, i32 %v0_1000674c, i32 7)
  %v0_1000675c = load i32, i32* @r29, align 4
  store i32 %v0_1000675c, i32* %r3.global-to-local, align 4
  %v0_10006760 = load i32, i32* @r23, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000c4bc.154 to i32), i32* %r20.global-to-local, align 4
  store i32 268461936, i32* @lr, align 4
  %v4_1000676c = call i32 @function_100061e4(i32 %v0_1000675c, i32 %v0_10006760, i32 7)
  %v0_10006770 = load i32, i32* @r29, align 4
  %v0_10006774 = load i32, i32* @r27, align 4
  store i32 %v0_10006774, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268461952, i32* @lr, align 4
  %v5_1000677c = call i32 @function_100061e4(i32 %v0_10006774, i32 %v0_10006770, i32 7)
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_10006788 = load i32, i32* @r27, align 4
  store i32 %v0_10006788, i32* %r3.global-to-local, align 4
  %v0_1000678c = load i32, i32* %r20.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c4c8.155 to i32), i32* %r19.global-to-local, align 4
  store i32 268461976, i32* @lr, align 4
  %v5_10006794 = call i32 @function_100061e4(i32 %v0_10006788, i32 %v0_1000678c, i32 4)
  %v0_1000679c = load i32, i32* @r28, align 4
  store i32 %v0_1000679c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000c4d0.156 to i32), i32* %r18.global-to-local, align 4
  store i32 268462000, i32* @lr, align 4
  %v5_100067ac = call i32 @function_100061e4(i32 %v0_1000679c, i32 %v0_1000679c, i32 4)
  %v0_100067b0 = load i32, i32* @r28, align 4
  store i32 %v0_100067b0, i32* %r3.global-to-local, align 4
  %v0_100067b4 = load i32, i32* %r19.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268462016, i32* @lr, align 4
  %v4_100067bc = call i32 @function_100061e4(i32 %v0_100067b0, i32 %v0_100067b4, i32 4)
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_100067c4 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_100067c4, i32* %r3.global-to-local, align 4
  %v0_100067c8 = load i32, i32* @r26, align 4
  store i32 268462032, i32* @lr, align 4
  %v4_100067cc = call i32 @function_100061e4(i32 %v0_100067c4, i32 %v0_100067c8, i32 4)
  store i32 %v0_100067c4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000c4d8.157 to i32), i32* %r17.global-to-local, align 4
  store i32 268462056, i32* @lr, align 4
  %v5_100067e4 = call i32 @function_100061e4(i32 %v0_100067c4, i32 %v0_100067c4, i32 4)
  %v0_100067e8 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_100067e8, i32* %r3.global-to-local, align 4
  %v0_100067ec = load i32, i32* @r23, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268462072, i32* @lr, align 4
  %v4_100067f4 = call i32 @function_100061e4(i32 %v0_100067e8, i32 %v0_100067ec, i32 6)
  %v0_100067f8 = load i32, i32* @r28, align 4
  store i32 %v0_100067f8, i32* %r3.global-to-local, align 4
  %v0_100067fc = load i32, i32* %r17.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006808.158 to i32), i32* @lr, align 4
  %v5_10006804 = call i32 @function_100061e4(i32 %v0_100067f8, i32 %v0_100067fc, i32 3)
  store i32 ptrtoint (i32* @global_var_1000c634.159 to i32), i32* %r16.global-to-local, align 4
  %v0_10006818 = load i32, i32* @r27, align 4
  store i32 %v0_10006818, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* %r15.global-to-local, align 4
  store i32 268462120, i32* @lr, align 4
  %v4_10006824 = call i32 @function_100061e4(i32 %v0_10006818, i32 ptrtoint (i32* @global_var_1000c4e0.160 to i32), i32 3)
  %v0_10006828 = load i32, i32* %r16.global-to-local, align 4
  %v0_1000682c = load i32, i32* @r28, align 4
  store i32 %v0_1000682c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268462136, i32* @lr, align 4
  %v4_10006834 = call i32 @function_100061e4(i32 %v0_1000682c, i32 %v0_10006828, i32 4)
  store i32 8, i32* %r5.global-to-local, align 4
  %v0_10006844 = load i32, i32* @r27, align 4
  store i32 %v0_10006844, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c4f8.162 to i32), i32* %r15.global-to-local, align 4
  store i32 268462160, i32* @lr, align 4
  %v5_1000684c = call i32 @function_100061e4(i32 %v0_10006844, i32 ptrtoint ([9 x i8]* @global_var_1000c4ec.161 to i32), i32 8)
  %v0_10006850 = load i32, i32* %r16.global-to-local, align 4
  %v0_10006854 = load i32, i32* @r27, align 4
  store i32 %v0_10006854, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268462176, i32* @lr, align 4
  %v4_1000685c = call i32 @function_100061e4(i32 %v0_10006854, i32 %v0_10006850, i32 2)
  %v0_10006860 = load i32, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  %v0_10006868 = load i32, i32* @r28, align 4
  store i32 %v0_10006868, i32* %r3.global-to-local, align 4
  store i32 268462192, i32* @lr, align 4
  %v4_1000686c = call i32 @function_100061e4(i32 %v0_10006868, i32 %v0_10006860, i32 2)
  %v0_10006870 = load i32, i32* @r28, align 4
  store i32 %v0_10006870, i32* %r3.global-to-local, align 4
  %v0_10006874 = load i32, i32* %r20.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268462208, i32* @lr, align 4
  %v5_1000687c = call i32 @function_100061e4(i32 %v0_10006870, i32 %v0_10006874, i32 2)
  %v0_10006880 = load i32, i32* %r21.global-to-local, align 4
  %v0_10006884 = load i32, i32* @r28, align 4
  store i32 %v0_10006884, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268462224, i32* @lr, align 4
  %v4_1000688c = call i32 @function_100061e4(i32 %v0_10006884, i32 %v0_10006880, i32 4)
  store i32 ptrtoint ([14 x i8]* @global_var_1000c508.163 to i32), i32* @r29, align 4
  %v0_100068a0 = load i32, i32* @r28, align 4
  store i32 %v0_100068a0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* %r14.global-to-local, align 4
  store i32 268462256, i32* @lr, align 4
  %v4_100068ac = call i32 @function_100061e4(i32 %v0_100068a0, i32 ptrtoint (i32* @global_var_1000c500.164 to i32), i32 1)
  store i32 ptrtoint ([7 x i8]* @global_var_1000c518.165 to i32), i32* %r14.global-to-local, align 4
  %v0_100068b4 = load i32, i32* @r29, align 4
  store i32 %v0_100068b4, i32* %r3.global-to-local, align 4
  %v0_100068b8 = load i32, i32* @r26, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  store i32 268462276, i32* @lr, align 4
  %v4_100068c0 = call i32 @function_100061e4(i32 %v0_100068b4, i32 %v0_100068b8, i32 13)
  %v0_100068c4 = load i32, i32* @r29, align 4
  store i32 %v0_100068c4, i32* %r3.global-to-local, align 4
  %v0_100068c8 = load i32, i32* %r14.global-to-local, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  store i32 268462292, i32* @lr, align 4
  %v5_100068d0 = call i32 @function_100061e4(i32 %v0_100068c4, i32 %v0_100068c8, i32 13)
  %v0_100068d8 = load i32, i32* @r29, align 4
  store i32 %v0_100068d8, i32* %r3.global-to-local, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  store i32 268462312, i32* @lr, align 4
  %v5_100068e4 = call i32 @function_100061e4(i32 %v0_100068d8, i32 ptrtoint ([4 x i8]* @global_var_1000c520.166 to i32), i32 13)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_100068f0 = load i32, i32* @r29, align 4
  store i32 %v0_100068f0, i32* %r3.global-to-local, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000c52c.171 to i32), i32* @r29, align 4
  store i32 268462340, i32* @lr, align 4
  %v5_10006900 = call i32 @function_100061e4(i32 %v0_100068f0, i32 ptrtoint ([7 x i8]* @global_var_1000c524.167 to i32), i32 13)
  %v0_10006904 = load i32, i32* @r29, align 4
  store i32 %v0_10006904, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268462356, i32* @lr, align 4
  %v5_10006910 = call i32 @function_100061e4(i32 %v0_10006904, i32 %v0_10006904, i32 1)
  %v0_10006914 = load i32, i32* @r29, align 4
  %v0_10006918 = load i32, i32* @r27, align 4
  store i32 %v0_10006918, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268462372, i32* @lr, align 4
  %v5_10006920 = call i32 @function_100061e4(i32 %v0_10006918, i32 %v0_10006914, i32 7)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1000c534.168 to i32), i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000c560.173 to i32), i32* @r29, align 4
  store i32 268462400, i32* @lr, align 4
  %v4_1000693c = call i32 @function_100061e4(i32 ptrtoint ([11 x i8]* @global_var_1000c534.168 to i32), i32 10, i32 10)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000c540.169 to i32), i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  %v0_1000694c = load i32, i32* @r26, align 4
  store i32 268462420, i32* @lr, align 4
  %v4_10006950 = call i32 @function_100061e4(i32 ptrtoint ([6 x i8]* @global_var_1000c540.169 to i32), i32 %v0_1000694c, i32 5)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000c540.169 to i32), i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268462440, i32* @lr, align 4
  %v4_10006964 = call i32 @function_100061e4(i32 ptrtoint ([6 x i8]* @global_var_1000c540.169 to i32), i32 5, i32 5)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000c540.169 to i32), i32* %r3.global-to-local, align 4
  %v0_10006970 = load i32, i32* %r19.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268462460, i32* @lr, align 4
  %v4_10006978 = call i32 @function_100061e4(i32 ptrtoint ([6 x i8]* @global_var_1000c540.169 to i32), i32 %v0_10006970, i32 5)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000c540.169 to i32), i32* %r3.global-to-local, align 4
  %v0_10006984 = load i32, i32* @r23, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268462480, i32* @lr, align 4
  %v4_1000698c = call i32 @function_100061e4(i32 ptrtoint ([6 x i8]* @global_var_1000c540.169 to i32), i32 %v0_10006984, i32 6)
  store i32 ptrtoint (i32* @global_var_1000c548.175 to i32), i32* %r3.global-to-local, align 4
  %v0_10006998 = load i32, i32* %r20.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268462500, i32* @lr, align 4
  %v4_100069a0 = call i32 @function_100061e4(i32 ptrtoint (i32* @global_var_1000c548.175 to i32), i32 %v0_10006998, i32 1)
  %v0_100069a8 = load i32, i32* %r21.global-to-local, align 4
  store i32 ptrtoint ([14 x i8]* @global_var_1000c550.176 to i32), i32* %r3.global-to-local, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  store i32 268462520, i32* @lr, align 4
  %v4_100069b4 = call i32 @function_100061e4(i32 ptrtoint ([14 x i8]* @global_var_1000c550.176 to i32), i32 %v0_100069a8, i32 13)
  %v0_100069b8 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100069b8, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268462536, i32* @lr, align 4
  %v3_100069c4 = call i32 @function_100061e4(i32 %v0_100069b8, i32 %v0_100069b8, i32 6)
  %v0_100069c8 = load i32, i32* @r25, align 4
  store i32 %v0_100069c8, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268462552, i32* @lr, align 4
  %v3_100069d4 = call i32 @function_100061e4(i32 %v0_100069c8, i32 %v0_100069c8, i32 6)
  %v0_100069d8 = load i32, i32* @r29, align 4
  store i32 %v0_100069d8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268462568, i32* @lr, align 4
  %v5_100069e4 = call i32 @function_100061e4(i32 %v0_100069d8, i32 %v0_100069d8, i32 4)
  %v0_100069e8 = load i32, i32* @r29, align 4
  %v0_100069ec = load i32, i32* @r28, align 4
  store i32 %v0_100069ec, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268462584, i32* @lr, align 4
  %v5_100069f4 = call i32 @function_100061e4(i32 %v0_100069ec, i32 %v0_100069e8, i32 4)
  %v0_10006a00 = load i32, i32* @r28, align 4
  store i32 %v0_10006a00, i32* %r3.global-to-local, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268462608, i32* @lr, align 4
  %v4_10006a0c = call i32 @function_100061e4(i32 %v0_10006a00, i32 ptrtoint (i32* @global_var_1000c568.177 to i32), i32 11)
  %v0_10006a18 = load i32, i32* @r28, align 4
  store i32 %v0_10006a18, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c5b4.179 to i32), i32* @r29, align 4
  store i32 268462632, i32* @lr, align 4
  %v4_10006a24 = call i32 @function_100061e4(i32 %v0_10006a18, i32 ptrtoint (i32* @global_var_1000c570.178 to i32), i32 10)
  %v0_10006a30 = load i32, i32* @r28, align 4
  store i32 %v0_10006a30, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268462656, i32* @lr, align 4
  %v4_10006a3c = call i32 @function_100061e4(i32 %v0_10006a30, i32 ptrtoint (i32* @global_var_1000c578.180 to i32), i32 10)
  %v0_10006a48 = load i32, i32* @r28, align 4
  store i32 %v0_10006a48, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c630.182 to i32), i32* @r25, align 4
  store i32 268462680, i32* @lr, align 4
  %v5_10006a54 = call i32 @function_100061e4(i32 %v0_10006a48, i32 ptrtoint ([6 x i8]* @global_var_1000c580.181 to i32), i32 9)
  %v0_10006a60 = load i32, i32* @r28, align 4
  store i32 %v0_10006a60, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  %v2_10006a68 = ptrtoint i32* %stack_var_-1744 to i32
  store i32 %v2_10006a68, i32* @r15, align 4
  store i32 268462704, i32* @lr, align 4
  %v5_10006a6c = call i32 @function_100061e4(i32 %v0_10006a60, i32 ptrtoint ([5 x i8]* @global_var_1000c588.183 to i32), i32 8)
  %v0_10006a78 = load i32, i32* @r28, align 4
  store i32 %v0_10006a78, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268462724, i32* @lr, align 4
  %v5_10006a80 = call i32 @function_100061e4(i32 %v0_10006a78, i32 ptrtoint ([6 x i8]* @global_var_1000c590.184 to i32), i32 9)
  %v0_10006a8c = load i32, i32* @r28, align 4
  store i32 %v0_10006a8c, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268462744, i32* @lr, align 4
  %v5_10006a94 = call i32 @function_100061e4(i32 %v0_10006a8c, i32 ptrtoint ([9 x i8]* @global_var_1000c598.185 to i32), i32 12)
  %v0_10006aa0 = load i32, i32* @r28, align 4
  store i32 %v0_10006aa0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268462764, i32* @lr, align 4
  %v4_10006aa8 = call i32 @function_100061e4(i32 %v0_10006aa0, i32 ptrtoint (i32* @global_var_1000c5a4.186 to i32), i32 1)
  %v0_10006aac = load i32, i32* @r29, align 4
  %v0_10006ab0 = load i32, i32* @r28, align 4
  store i32 %v0_10006ab0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268462780, i32* @lr, align 4
  %v4_10006ab8 = call i32 @function_100061e4(i32 %v0_10006ab0, i32 %v0_10006aac, i32 1)
  %v0_10006ac4 = load i32, i32* @r28, align 4
  store i32 %v0_10006ac4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268462800, i32* @lr, align 4
  %v5_10006acc = call i32 @function_100061e4(i32 %v0_10006ac4, i32 ptrtoint ([7 x i8]* @global_var_1000c5c4.187 to i32), i32 1)
  %v0_10006ad8 = load i32, i32* @r28, align 4
  store i32 %v0_10006ad8, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268462820, i32* @lr, align 4
  %v5_10006ae0 = call i32 @function_100061e4(i32 %v0_10006ad8, i32 ptrtoint ([5 x i8]* @global_var_1000c5cc.188 to i32), i32 1)
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_10006af0 = load i32, i32* @r28, align 4
  store i32 %v0_10006af0, i32* %r3.global-to-local, align 4
  store i32 268462840, i32* @lr, align 4
  %v5_10006af4 = call i32 @function_100061e4(i32 %v0_10006af0, i32 ptrtoint ([9 x i8]* @global_var_1000c5d4.189 to i32), i32 1)
  %v0_10006af8 = load i32, i32* @r28, align 4
  store i32 %v0_10006af8, i32* %r3.global-to-local, align 4
  %v0_10006afc = load i32, i32* %r18.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268462856, i32* @lr, align 4
  %v5_10006b04 = call i32 @function_100061e4(i32 %v0_10006af8, i32 %v0_10006afc, i32 1)
  %v0_10006b10 = load i32, i32* @r28, align 4
  store i32 %v0_10006b10, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268462876, i32* @lr, align 4
  %v5_10006b18 = call i32 @function_100061e4(i32 %v0_10006b10, i32 ptrtoint ([8 x i8]* @global_var_1000c5e0.190 to i32), i32 1)
  %v0_10006b24 = load i32, i32* @r28, align 4
  store i32 %v0_10006b24, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268462896, i32* @lr, align 4
  %v4_10006b2c = call i32 @function_100061e4(i32 %v0_10006b24, i32 ptrtoint (i32* @global_var_1000c5e8.191 to i32), i32 8)
  %v0_10006b38 = load i32, i32* @r28, align 4
  store i32 %v0_10006b38, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268462916, i32* @lr, align 4
  %v4_10006b40 = call i32 @function_100061e4(i32 %v0_10006b38, i32 ptrtoint (i32* @global_var_1000c5f4.192 to i32), i32 6)
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_10006b50 = load i32, i32* @r27, align 4
  store i32 %v0_10006b50, i32* %r3.global-to-local, align 4
  store i32 268462936, i32* @lr, align 4
  %v4_10006b54 = call i32 @function_100061e4(i32 %v0_10006b50, i32 ptrtoint (i32* @global_var_1000c5fc.193 to i32), i32 1)
  %v0_10006b58 = load i32, i32* %r21.global-to-local, align 4
  %v0_10006b5c = load i32, i32* @r27, align 4
  store i32 %v0_10006b5c, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268462952, i32* @lr, align 4
  %v4_10006b64 = call i32 @function_100061e4(i32 %v0_10006b5c, i32 %v0_10006b58, i32 5)
  %v0_10006b68 = load i32, i32* @r27, align 4
  store i32 %v0_10006b68, i32* %r3.global-to-local, align 4
  %v0_10006b6c = load i32, i32* %r19.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268462968, i32* @lr, align 4
  %v4_10006b74 = call i32 @function_100061e4(i32 %v0_10006b68, i32 %v0_10006b6c, i32 1)
  %v0_10006b78 = load i32, i32* @r22, align 4
  %v0_10006b7c = load i32, i32* @r27, align 4
  store i32 %v0_10006b7c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268462984, i32* @lr, align 4
  %v4_10006b84 = call i32 @function_100061e4(i32 %v0_10006b7c, i32 %v0_10006b78, i32 1)
  %v0_10006b88 = load i32, i32* @r27, align 4
  store i32 %v0_10006b88, i32* %r3.global-to-local, align 4
  %v0_10006b8c = load i32, i32* @r23, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268463000, i32* @lr, align 4
  %v4_10006b94 = call i32 @function_100061e4(i32 %v0_10006b88, i32 %v0_10006b8c, i32 1)
  %v0_10006b98 = load i32, i32* @r29, align 4
  %v0_10006b9c = load i32, i32* @r27, align 4
  store i32 %v0_10006b9c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268463016, i32* @lr, align 4
  %v4_10006ba4 = call i32 @function_100061e4(i32 %v0_10006b9c, i32 %v0_10006b98, i32 1)
  store i32 8, i32* %r5.global-to-local, align 4
  %v0_10006bb4 = load i32, i32* @r27, align 4
  store i32 %v0_10006bb4, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268463040, i32* @lr, align 4
  %v4_10006bbc = call i32 @function_100061e4(i32 %v0_10006bb4, i32 ptrtoint (i32* @global_var_1000c604.194 to i32), i32 8)
  %v0_10006bc0 = load i32, i32* @r27, align 4
  store i32 %v0_10006bc0, i32* %r3.global-to-local, align 4
  %v0_10006bc4 = load i32, i32* %r17.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268463056, i32* @lr, align 4
  %v5_10006bcc = call i32 @function_100061e4(i32 %v0_10006bc0, i32 %v0_10006bc4, i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1000c49c.195 to i32), i32* @r29, align 4
  %v0_10006bd4 = load i32, i32* %r14.global-to-local, align 4
  %v0_10006bd8 = load i32, i32* @r27, align 4
  store i32 %v0_10006bd8, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268463080, i32* @lr, align 4
  %v5_10006be4 = call i32 @function_100061e4(i32 %v0_10006bd8, i32 %v0_10006bd4, i32 1)
  %v0_10006be8 = load i32, i32* @r29, align 4
  %v0_10006bec = load i32, i32* @r27, align 4
  store i32 %v0_10006bec, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268463096, i32* @lr, align 4
  %v5_10006bf4 = call i32 @function_100061e4(i32 %v0_10006bec, i32 %v0_10006be8, i32 5)
  %v0_10006c00 = load i32, i32* @r27, align 4
  store i32 %v0_10006c00, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000c690.197 to i32), i32* @r22, align 4
  store i32 268463120, i32* @lr, align 4
  %v4_10006c0c = call i32 @function_100061e4(i32 %v0_10006c00, i32 ptrtoint (i32* @global_var_1000c610.196 to i32), i32 8)
  %v0_10006c18 = load i32, i32* @r27, align 4
  store i32 %v0_10006c18, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* %r21.global-to-local, align 4
  store i32 268463144, i32* @lr, align 4
  %v5_10006c24 = call i32 @function_100061e4(i32 %v0_10006c18, i32 ptrtoint ([6 x i8]* @global_var_1000c61c.198 to i32), i32 5)
  %v0_10006c30 = load i32, i32* @r27, align 4
  store i32 %v0_10006c30, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000c81c.200 to i32), i32* %r21.global-to-local, align 4
  store i32 268463168, i32* @lr, align 4
  %v5_10006c3c = call i32 @function_100061e4(i32 %v0_10006c30, i32 ptrtoint ([4 x i8]* @global_var_1000c624.199 to i32), i32 5)
  %v0_10006c48 = load i32, i32* @r27, align 4
  store i32 %v0_10006c48, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  %v2_10006c50 = ptrtoint i32* %stack_var_-1616 to i32
  store i32 %v2_10006c50, i32* %r14.global-to-local, align 4
  store i32 268463192, i32* @lr, align 4
  %v4_10006c54 = call i32 @function_100061e4(i32 %v0_10006c48, i32 ptrtoint (i32* @global_var_1000c628.201 to i32), i32 5)
  %v0_10006c58 = load i32, i32* @r27, align 4
  store i32 %v0_10006c58, i32* %r3.global-to-local, align 4
  %v0_10006c5c = load i32, i32* @r25, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268463208, i32* @lr, align 4
  %v4_10006c64 = call i32 @function_100061e4(i32 %v0_10006c58, i32 %v0_10006c5c, i32 8)
  %v0_10006c70 = load i32, i32* @r27, align 4
  store i32 %v0_10006c70, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268463228, i32* @lr, align 4
  %v5_10006c78 = call i32 @function_100061e4(i32 %v0_10006c70, i32 ptrtoint ([7 x i8]* @global_var_1000c63c.202 to i32), i32 6)
  %v0_10006c84 = load i32, i32* @r27, align 4
  store i32 %v0_10006c84, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268463248, i32* @lr, align 4
  %v5_10006c8c = call i32 @function_100061e4(i32 %v0_10006c84, i32 ptrtoint ([9 x i8]* @global_var_1000c644.203 to i32), i32 8)
  %v0_10006c98 = load i32, i32* @r27, align 4
  store i32 %v0_10006c98, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268463268, i32* @lr, align 4
  %v4_10006ca0 = call i32 @function_100061e4(i32 %v0_10006c98, i32 ptrtoint (i32* @global_var_1000c650.204 to i32), i32 7)
  %v0_10006cac = load i32, i32* @r27, align 4
  store i32 %v0_10006cac, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268463288, i32* @lr, align 4
  %v4_10006cb4 = call i32 @function_100061e4(i32 %v0_10006cac, i32 ptrtoint (i32* @global_var_1000c658.205 to i32), i32 5)
  %v0_10006cc0 = load i32, i32* @r27, align 4
  store i32 %v0_10006cc0, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268463308, i32* @lr, align 4
  %v4_10006cc8 = call i32 @function_100061e4(i32 %v0_10006cc0, i32 ptrtoint (i32* @global_var_1000c660.206 to i32), i32 6)
  %v0_10006cd4 = load i32, i32* @r27, align 4
  store i32 %v0_10006cd4, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268463328, i32* @lr, align 4
  %v4_10006cdc = call i32 @function_100061e4(i32 %v0_10006cd4, i32 ptrtoint (i32* @global_var_1000c668.207 to i32), i32 5)
  %v0_10006ce8 = load i32, i32* @r27, align 4
  store i32 %v0_10006ce8, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268463348, i32* @lr, align 4
  %v5_10006cf0 = call i32 @function_100061e4(i32 %v0_10006ce8, i32 ptrtoint ([7 x i8]* @global_var_1000c670.208 to i32), i32 6)
  %v0_10006cfc = load i32, i32* @r27, align 4
  store i32 %v0_10006cfc, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268463368, i32* @lr, align 4
  %v5_10006d04 = call i32 @function_100061e4(i32 %v0_10006cfc, i32 ptrtoint ([8 x i8]* @global_var_1000c678.209 to i32), i32 7)
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10006d14 = load i32, i32* @r27, align 4
  store i32 %v0_10006d14, i32* %r3.global-to-local, align 4
  store i32 268463388, i32* @lr, align 4
  %v4_10006d18 = call i32 @function_100061e4(i32 %v0_10006d14, i32 ptrtoint (i32* @global_var_1000c680.210 to i32), i32 6)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10006d24 = load i32, i32* @r27, align 4
  store i32 %v0_10006d24, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268463408, i32* @lr, align 4
  %v5_10006d2c = call i32 @function_100061e4(i32 %v0_10006d24, i32 ptrtoint ([7 x i8]* @global_var_1000c524.167 to i32), i32 6)
  %v0_10006d38 = load i32, i32* @r27, align 4
  store i32 %v0_10006d38, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268463428, i32* @lr, align 4
  %v4_10006d40 = call i32 @function_100061e4(i32 %v0_10006d38, i32 ptrtoint (i32* @global_var_1000c688.211 to i32), i32 6)
  %v0_10006d44 = load i32, i32* @r22, align 4
  %v0_10006d48 = load i32, i32* @r27, align 4
  store i32 %v0_10006d48, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268463444, i32* @lr, align 4
  %v5_10006d50 = call i32 @function_100061e4(i32 %v0_10006d48, i32 %v0_10006d44, i32 7)
  %v0_10006d5c = load i32, i32* @r27, align 4
  store i32 %v0_10006d5c, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268463464, i32* @lr, align 4
  %v5_10006d64 = call i32 @function_100061e4(i32 %v0_10006d5c, i32 ptrtoint ([9 x i8]* @global_var_1000c698.212 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1000c6a4.213 to i32), i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268463484, i32* @lr, align 4
  %v4_10006d78 = call i32 @function_100061e4(i32 ptrtoint ([6 x i8]* @global_var_1000c6a4.213 to i32), i32 5, i32 5)
  %v0_10006d7c = load i32, i32* @r29, align 4
  store i32 %v0_10006d7c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268463500, i32* @lr, align 4
  %v5_10006d88 = call i32 @function_100061e4(i32 %v0_10006d7c, i32 %v0_10006d7c, i32 4)
  %v0_10006d8c = load i32, i32* @r29, align 4
  store i32 %v0_10006d8c, i32* %r3.global-to-local, align 4
  %v0_10006d90 = load i32, i32* @r26, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268463516, i32* @lr, align 4
  %v4_10006d98 = call i32 @function_100061e4(i32 %v0_10006d8c, i32 %v0_10006d90, i32 1)
  %v0_10006da4 = load i32, i32* @r28, align 4
  store i32 %v0_10006da4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268463540, i32* @lr, align 4
  %v4_10006db0 = call i32 @function_100061e4(i32 %v0_10006da4, i32 ptrtoint (i32* @global_var_1000c79c.214 to i32), i32 1)
  store i32 ptrtoint ([8 x i8]* @global_var_1000c6b4.215 to i32), i32* @r29, align 4
  %v0_10006dc0 = load i32, i32* @r28, align 4
  store i32 %v0_10006dc0, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268463564, i32* @lr, align 4
  %v4_10006dc8 = call i32 @function_100061e4(i32 %v0_10006dc0, i32 ptrtoint (i32* @global_var_1000c6ac.216 to i32), i32 7)
  %v0_10006dcc = load i32, i32* @r29, align 4
  store i32 %v0_10006dcc, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  %v0_10006dd4 = load i32, i32* @r26, align 4
  store i32 268463580, i32* @lr, align 4
  %v4_10006dd8 = call i32 @function_100061e4(i32 %v0_10006dcc, i32 %v0_10006dd4, i32 7)
  %v0_10006ddc = load i32, i32* @r29, align 4
  store i32 %v0_10006ddc, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268463596, i32* @lr, align 4
  %v5_10006de8 = call i32 @function_100061e4(i32 %v0_10006ddc, i32 %v0_10006ddc, i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_1000c6bc.217 to i32), i32* %r3.global-to-local, align 4
  %v0_10006df4 = load i32, i32* @r26, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268463620, i32* @lr, align 4
  %v4_10006e00 = call i32 @function_100061e4(i32 ptrtoint ([4 x i8]* @global_var_1000c6bc.217 to i32), i32 %v0_10006df4, i32 3)
  store i32 ptrtoint ([8 x i8]* @global_var_1000c6c0.218 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268463644, i32* @lr, align 4
  %v5_10006e18 = call i32 @function_100061e4(i32 ptrtoint ([8 x i8]* @global_var_1000c6c0.218 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000c6c8.219 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_1000c6d0.220 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000c6e8.221 to i32), i32* @r29, align 4
  store i32 268463668, i32* @lr, align 4
  %v4_10006e30 = call i32 @function_100061e4(i32 ptrtoint ([4 x i8]* @global_var_1000c6d0.220 to i32), i32 3, i32 3)
  %v0_10006e3c = load i32, i32* @r28, align 4
  store i32 %v0_10006e3c, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268463688, i32* @lr, align 4
  %v4_10006e44 = call i32 @function_100061e4(i32 %v0_10006e3c, i32 ptrtoint (i32* @global_var_1000c6d4.222 to i32), i32 10)
  %v0_10006e50 = load i32, i32* @r28, align 4
  store i32 %v0_10006e50, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268463708, i32* @lr, align 4
  %v5_10006e58 = call i32 @function_100061e4(i32 %v0_10006e50, i32 ptrtoint ([5 x i8]* @global_var_1000c6e0.223 to i32), i32 4)
  %v0_10006e5c = load i32, i32* @r29, align 4
  store i32 %v0_10006e5c, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268463724, i32* @lr, align 4
  %v5_10006e68 = call i32 @function_100061e4(i32 %v0_10006e5c, i32 %v0_10006e5c, i32 6)
  %v0_10006e6c = load i32, i32* @r29, align 4
  %v0_10006e70 = load i32, i32* @r26, align 4
  store i32 %v0_10006e70, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268463740, i32* @lr, align 4
  %v4_10006e78 = call i32 @function_100061e4(i32 %v0_10006e70, i32 %v0_10006e6c, i32 6)
  store i32 ptrtoint (i32* @global_var_1000c6f0.224 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268463764, i32* @lr, align 4
  %v3_10006e90 = call i32 @function_100061e4(i32 ptrtoint (i32* @global_var_1000c6f0.224 to i32), i32 6, i32 6)
  store i32 ptrtoint ([6 x i8]* @global_var_1000c700.225 to i32), i32* @r29, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000c6f8.226 to i32), i32* %r3.global-to-local, align 4
  %v0_10006ea0 = load i32, i32* @r24, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268463788, i32* @lr, align 4
  %v5_10006ea8 = call i32 @function_100061e4(i32 ptrtoint ([6 x i8]* @global_var_1000c6f8.226 to i32), i32 %v0_10006ea0, i32 7)
  %v0_10006eac = load i32, i32* @r29, align 4
  store i32 %v0_10006eac, i32* %r3.global-to-local, align 4
  %v0_10006eb0 = load i32, i32* %r18.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268463804, i32* @lr, align 4
  %v5_10006eb8 = call i32 @function_100061e4(i32 %v0_10006eac, i32 %v0_10006eb0, i32 5)
  %v0_10006ebc = load i32, i32* @r29, align 4
  store i32 %v0_10006ebc, i32* %r3.global-to-local, align 4
  %v0_10006ec0 = load i32, i32* %r17.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268463820, i32* @lr, align 4
  %v5_10006ec8 = call i32 @function_100061e4(i32 %v0_10006ebc, i32 %v0_10006ec0, i32 5)
  %v0_10006ecc = load i32, i32* @r29, align 4
  store i32 %v0_10006ecc, i32* %r3.global-to-local, align 4
  %v0_10006ed0 = load i32, i32* @r27, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268463836, i32* @lr, align 4
  %v5_10006ed8 = call i32 @function_100061e4(i32 %v0_10006ecc, i32 %v0_10006ed0, i32 5)
  store i32 ptrtoint (i32* @global_var_1000c708.227 to i32), i32* %r3.global-to-local, align 4
  %v0_10006ee4 = load i32, i32* @r26, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268463860, i32* @lr, align 4
  %v3_10006ef0 = call i32 @function_100061e4(i32 ptrtoint (i32* @global_var_1000c708.227 to i32), i32 %v0_10006ee4, i32 5)
  store i32 ptrtoint ([9 x i8]* @global_var_1000c710.228 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268463884, i32* @lr, align 4
  %v5_10006f08 = call i32 @function_100061e4(i32 ptrtoint ([9 x i8]* @global_var_1000c710.228 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000c71c.229 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_1000c724.230 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000c72c.231 to i32), i32* @r29, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268463908, i32* @lr, align 4
  %v4_10006f20 = call i32 @function_100061e4(i32 ptrtoint ([8 x i8]* @global_var_1000c724.230 to i32), i32 7, i32 7)
  %v0_10006f24 = load i32, i32* @r29, align 4
  store i32 %v0_10006f24, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268463924, i32* @lr, align 4
  %v5_10006f30 = call i32 @function_100061e4(i32 %v0_10006f24, i32 %v0_10006f24, i32 7)
  %v0_10006f38 = load i32, i32* @r29, align 4
  store i32 %v0_10006f38, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268463948, i32* @lr, align 4
  %v5_10006f48 = call i32 @function_100061e4(i32 %v0_10006f38, i32 ptrtoint ([8 x i8]* @global_var_1000c734.232 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1000c73c.233 to i32), i32* @r29, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000c73c.233 to i32), i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268463972, i32* @lr, align 4
  %v5_10006f60 = call i32 @function_100061e4(i32 ptrtoint ([6 x i8]* @global_var_1000c73c.233 to i32), i32 ptrtoint ([10 x i8]* @global_var_1000c744.234 to i32), i32 9)
  %v0_10006f64 = load i32, i32* @r29, align 4
  store i32 %v0_10006f64, i32* %r3.global-to-local, align 4
  %v0_10006f68 = load i32, i32* @r22, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268463988, i32* @lr, align 4
  %v5_10006f70 = call i32 @function_100061e4(i32 %v0_10006f64, i32 %v0_10006f68, i32 6)
  store i32 ptrtoint ([5 x i8]* @global_var_1000c750.235 to i32), i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268464012, i32* @lr, align 4
  %v4_10006f88 = call i32 @function_100061e4(i32 ptrtoint ([5 x i8]* @global_var_1000c750.235 to i32), i32 4, i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_1000c760.236 to i32), i32* @r29, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000c758.237 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268464036, i32* @lr, align 4
  %v5_10006fa0 = call i32 @function_100061e4(i32 ptrtoint ([5 x i8]* @global_var_1000c758.237 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000c760.236 to i32), i32 6)
  %v0_10006fa4 = load i32, i32* @r29, align 4
  %v0_10006fa8 = load i32, i32* @r27, align 4
  store i32 %v0_10006fa8, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268464056, i32* @lr, align 4
  %v5_10006fb4 = call i32 @function_100061e4(i32 %v0_10006fa8, i32 %v0_10006fa4, i32 6)
  store i32 ptrtoint ([7 x i8]* @global_var_1000c768.238 to i32), i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c730.239 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268464084, i32* @lr, align 4
  %v5_10006fd0 = call i32 @function_100061e4(i32 ptrtoint ([3 x i8]* @global_var_1000c730.239 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000c768.238 to i32), i32 6)
  store i32 ptrtoint (i32* @global_var_1000c770.240 to i32), i32* @r22, align 4
  %v0_10006fd8 = load i32, i32* @r29, align 4
  store i32 %v0_10006fd8, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268464108, i32* @lr, align 4
  %v5_10006fe8 = call i32 @function_100061e4(i32 %v0_10006fd8, i32 %v0_10006fd8, i32 6)
  store i32 10, i32* %r5.global-to-local, align 4
  %v0_10006ff0 = load i32, i32* @r27, align 4
  store i32 %v0_10006ff0, i32* %r3.global-to-local, align 4
  %v0_10006ff4 = load i32, i32* @r22, align 4
  store i32 268464124, i32* @lr, align 4
  %v4_10006ff8 = call i32 @function_100061e4(i32 %v0_10006ff0, i32 %v0_10006ff4, i32 10)
  %v0_10006ffc = load i32, i32* @r28, align 4
  store i32 %v0_10006ffc, i32* %r3.global-to-local, align 4
  %v0_10007000 = load i32, i32* @r22, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268464140, i32* @lr, align 4
  %v4_10007008 = call i32 @function_100061e4(i32 %v0_10006ffc, i32 %v0_10007000, i32 10)
  %v0_10007014 = load i32, i32* @r28, align 4
  store i32 %v0_10007014, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000c7f8.242 to i32), i32* @r29, align 4
  store i32 268464164, i32* @lr, align 4
  %v5_10007020 = call i32 @function_100061e4(i32 %v0_10007014, i32 ptrtoint ([5 x i8]* @global_var_1000c77c.241 to i32), i32 4)
  %v0_1000702c = load i32, i32* @r28, align 4
  store i32 %v0_1000702c, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268464184, i32* @lr, align 4
  %v5_10007034 = call i32 @function_100061e4(i32 %v0_1000702c, i32 ptrtoint ([7 x i8]* @global_var_1000c784.243 to i32), i32 6)
  %v0_10007040 = load i32, i32* @r28, align 4
  store i32 %v0_10007040, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268464204, i32* @lr, align 4
  %v4_10007048 = call i32 @function_100061e4(i32 %v0_10007040, i32 ptrtoint (i32* @global_var_1000c78c.244 to i32), i32 8)
  %v0_10007054 = load i32, i32* @r28, align 4
  store i32 %v0_10007054, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268464224, i32* @lr, align 4
  %v4_1000705c = call i32 @function_100061e4(i32 %v0_10007054, i32 ptrtoint (i32* @global_var_1000c798.245 to i32), i32 7)
  %v0_10007068 = load i32, i32* @r28, align 4
  store i32 %v0_10007068, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268464244, i32* @lr, align 4
  %v4_10007070 = call i32 @function_100061e4(i32 %v0_10007068, i32 ptrtoint (i32* @global_var_1000c7a0.246 to i32), i32 8)
  %v0_1000707c = load i32, i32* @r28, align 4
  store i32 %v0_1000707c, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268464264, i32* @lr, align 4
  %v4_10007084 = call i32 @function_100061e4(i32 %v0_1000707c, i32 ptrtoint (i32* @global_var_1000c7ac.247 to i32), i32 6)
  %v0_10007090 = load i32, i32* @r28, align 4
  store i32 %v0_10007090, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268464284, i32* @lr, align 4
  %v4_10007098 = call i32 @function_100061e4(i32 %v0_10007090, i32 ptrtoint (i32* @global_var_1000c7b4.248 to i32), i32 8)
  %v0_100070a4 = load i32, i32* @r28, align 4
  store i32 %v0_100070a4, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268464304, i32* @lr, align 4
  %v4_100070ac = call i32 @function_100061e4(i32 %v0_100070a4, i32 ptrtoint (i32* @global_var_1000c7c0.249 to i32), i32 6)
  %v0_100070b8 = load i32, i32* @r28, align 4
  store i32 %v0_100070b8, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268464324, i32* @lr, align 4
  %v4_100070c0 = call i32 @function_100061e4(i32 %v0_100070b8, i32 ptrtoint (i32* @global_var_1000c7c8.250 to i32), i32 7)
  %v0_100070cc = load i32, i32* @r28, align 4
  store i32 %v0_100070cc, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268464344, i32* @lr, align 4
  %v5_100070d4 = call i32 @function_100061e4(i32 %v0_100070cc, i32 ptrtoint ([7 x i8]* @global_var_1000c7d0.251 to i32), i32 6)
  %v0_100070e0 = load i32, i32* @r28, align 4
  store i32 %v0_100070e0, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268464364, i32* @lr, align 4
  %v4_100070e8 = call i32 @function_100061e4(i32 %v0_100070e0, i32 ptrtoint (i32* @global_var_1000c7d8.252 to i32), i32 7)
  %v0_100070f4 = load i32, i32* @r28, align 4
  store i32 %v0_100070f4, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268464384, i32* @lr, align 4
  %v4_100070fc = call i32 @function_100061e4(i32 %v0_100070f4, i32 ptrtoint (i32* @global_var_1000c7e0.253 to i32), i32 8)
  %v0_10007108 = load i32, i32* @r28, align 4
  store i32 %v0_10007108, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268464404, i32* @lr, align 4
  %v5_10007110 = call i32 @function_100061e4(i32 %v0_10007108, i32 ptrtoint ([9 x i8]* @global_var_1000c7ec.254 to i32), i32 8)
  %v0_10007114 = load i32, i32* @r29, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  %v0_1000711c = load i32, i32* @r27, align 4
  store i32 %v0_1000711c, i32* %r3.global-to-local, align 4
  store i32 268464420, i32* @lr, align 4
  %v5_10007120 = call i32 @function_100061e4(i32 %v0_1000711c, i32 %v0_10007114, i32 5)
  %v0_10007124 = load i32, i32* @r29, align 4
  store i32 %v0_10007124, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268464436, i32* @lr, align 4
  %v5_10007130 = call i32 @function_100061e4(i32 %v0_10007124, i32 %v0_10007124, i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1000c800.255 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268464460, i32* @lr, align 4
  %v4_10007148 = call i32 @function_100061e4(i32 ptrtoint ([8 x i8]* @global_var_1000c800.255 to i32), i32 7, i32 7)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c808.256 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268464484, i32* @lr, align 4
  %v4_10007160 = call i32 @function_100061e4(i32 ptrtoint (i32* @global_var_1000c808.256 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000c524.167 to i32), i32 6)
  store i32 ptrtoint ([4 x i8]* @global_var_1000c810.257 to i32), i32* %r3.global-to-local, align 4
  %v0_1000716c = load i32, i32* %r20.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000c864.258 to i32), i32* @r29, align 4
  store i32 268464508, i32* @lr, align 4
  %v5_10007178 = call i32 @function_100061e4(i32 ptrtoint ([4 x i8]* @global_var_1000c810.257 to i32), i32 %v0_1000716c, i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_1000c814.259 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268464528, i32* @lr, align 4
  %v4_1000718c = call i32 @function_100061e4(i32 ptrtoint ([7 x i8]* @global_var_1000c814.259 to i32), i32 6, i32 6)
  %v0_10007198 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10007198, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268464548, i32* @lr, align 4
  %v4_100071a0 = call i32 @function_100061e4(i32 %v0_10007198, i32 ptrtoint (i32* @global_var_1000c824.260 to i32), i32 6)
  store i32 ptrtoint ([7 x i8]* @global_var_1000c82c.261 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268464568, i32* @lr, align 4
  %v4_100071b4 = call i32 @function_100061e4(i32 ptrtoint ([7 x i8]* @global_var_1000c82c.261 to i32), i32 6, i32 6)
  store i32 ptrtoint ([6 x i8]* @global_var_1000c834.262 to i32), i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268464588, i32* @lr, align 4
  %v4_100071c8 = call i32 @function_100061e4(i32 ptrtoint ([6 x i8]* @global_var_1000c834.262 to i32), i32 5, i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1000c83c.263 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268464608, i32* @lr, align 4
  %v4_100071dc = call i32 @function_100061e4(i32 ptrtoint ([8 x i8]* @global_var_1000c83c.263 to i32), i32 7, i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_1000c844.264 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 268464628, i32* @lr, align 4
  %v4_100071f0 = call i32 @function_100061e4(i32 ptrtoint ([4 x i8]* @global_var_1000c844.264 to i32), i32 3, i32 3)
  store i32 ptrtoint ([4 x i8]* @global_var_1000c848.265 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 268464648, i32* @lr, align 4
  %v4_10007204 = call i32 @function_100061e4(i32 ptrtoint ([4 x i8]* @global_var_1000c848.265 to i32), i32 3, i32 3)
  store i32 ptrtoint (i32* @global_var_1000c84c.266 to i32), i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268464668, i32* @lr, align 4
  %v3_10007218 = call i32 @function_100061e4(i32 ptrtoint (i32* @global_var_1000c84c.266 to i32), i32 4, i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1000c854.267 to i32), i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268464688, i32* @lr, align 4
  %v4_1000722c = call i32 @function_100061e4(i32 ptrtoint ([5 x i8]* @global_var_1000c854.267 to i32), i32 4, i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_1000c85c.268 to i32), i32* %r3.global-to-local, align 4
  %v0_10007238 = load i32, i32* @r26, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268464708, i32* @lr, align 4
  %v4_10007240 = call i32 @function_100061e4(i32 ptrtoint ([7 x i8]* @global_var_1000c85c.268 to i32), i32 %v0_10007238, i32 6)
  %v0_10007244 = load i32, i32* %r16.global-to-local, align 4
  %v0_10007248 = load i32, i32* @r29, align 4
  store i32 %v0_10007248, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268464724, i32* @lr, align 4
  %v4_10007250 = call i32 @function_100061e4(i32 %v0_10007248, i32 %v0_10007244, i32 5)
  %v0_10007254 = load i32, i32* @r29, align 4
  store i32 %v0_10007254, i32* %r3.global-to-local, align 4
  %v0_1000725c = load i32, i32* @r23, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000c86c.269 to i32), i32* @r29, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268464748, i32* @lr, align 4
  %v4_10007268 = call i32 @function_100061e4(i32 %v0_10007254, i32 %v0_1000725c, i32 6)
  %v0_1000726c = load i32, i32* @r29, align 4
  store i32 %v0_1000726c, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10007274 = load i32, i32* @r26, align 4
  store i32 268464764, i32* @lr, align 4
  %v4_10007278 = call i32 @function_100061e4(i32 %v0_1000726c, i32 %v0_10007274, i32 6)
  %v0_1000727c = load i32, i32* @r29, align 4
  store i32 %v0_1000727c, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268464780, i32* @lr, align 4
  %v5_10007288 = call i32 @function_100061e4(i32 %v0_1000727c, i32 %v0_1000727c, i32 6)
  store i32 ptrtoint ([5 x i8]* @global_var_1000c874.270 to i32), i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268464804, i32* @lr, align 4
  %v4_100072a0 = call i32 @function_100061e4(i32 ptrtoint ([5 x i8]* @global_var_1000c874.270 to i32), i32 4, i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1000c87c.271 to i32), i32* %r3.global-to-local, align 4
  %v0_100072ac = load i32, i32* @r27, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c900.272 to i32), i32* @r29, align 4
  store i32 268464828, i32* @lr, align 4
  %v5_100072b8 = call i32 @function_100061e4(i32 ptrtoint ([6 x i8]* @global_var_1000c87c.271 to i32), i32 %v0_100072ac, i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1000c884.273 to i32), i32* %r3.global-to-local, align 4
  %v0_100072c4 = load i32, i32* @r27, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* %r16.global-to-local, align 4
  store i32 268464852, i32* @lr, align 4
  %v5_100072d0 = call i32 @function_100061e4(i32 ptrtoint ([8 x i8]* @global_var_1000c884.273 to i32), i32 %v0_100072c4, i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_1000c88c.274 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268464872, i32* @lr, align 4
  %v4_100072e4 = call i32 @function_100061e4(i32 ptrtoint ([7 x i8]* @global_var_1000c88c.274 to i32), i32 6, i32 6)
  store i32 ptrtoint ([6 x i8]* @global_var_1000c894.275 to i32), i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268464896, i32* @lr, align 4
  %v5_100072fc = call i32 @function_100061e4(i32 ptrtoint ([6 x i8]* @global_var_1000c894.275 to i32), i32 ptrtoint ([6 x i8]* @global_var_1000c89c.276 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1000c8a4.277 to i32), i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268464920, i32* @lr, align 4
  %v5_10007314 = call i32 @function_100061e4(i32 ptrtoint ([6 x i8]* @global_var_1000c8a4.277 to i32), i32 ptrtoint ([5 x i8]* @global_var_1000c8ac.278 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_1000c8b4.279 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268464940, i32* @lr, align 4
  %v3_10007328 = call i32 @function_100061e4(i32 ptrtoint (i32* @global_var_1000c8b4.279 to i32), i32 7, i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1000c648.280 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268464964, i32* @lr, align 4
  %v4_10007340 = call i32 @function_100061e4(i32 ptrtoint ([5 x i8]* @global_var_1000c648.280 to i32), i32 ptrtoint (i32* @global_var_1000c8bc.281 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_1000c8c8.282 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268464984, i32* @lr, align 4
  %v4_10007354 = call i32 @function_100061e4(i32 ptrtoint ([7 x i8]* @global_var_1000c8c8.282 to i32), i32 6, i32 6)
  store i32 ptrtoint (i32* @global_var_1000c8d0.283 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268465008, i32* @lr, align 4
  %v4_1000736c = call i32 @function_100061e4(i32 ptrtoint (i32* @global_var_1000c8d0.283 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000c8d8.284 to i32), i32 6)
  %v0_10007378 = load i32, i32* @r26, align 4
  store i32 %v0_10007378, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268465028, i32* @lr, align 4
  %v4_10007380 = call i32 @function_100061e4(i32 %v0_10007378, i32 ptrtoint ([9 x i8]* @global_var_1000c8e0.285 to i32), i32 8)
  %v0_1000738c = load i32, i32* @r26, align 4
  store i32 %v0_1000738c, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268465048, i32* @lr, align 4
  %v4_10007394 = call i32 @function_100061e4(i32 %v0_1000738c, i32 ptrtoint ([9 x i8]* @global_var_1000c8ec.286 to i32), i32 8)
  %v0_1000739c = load i32, i32* @r26, align 4
  store i32 %v0_1000739c, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268465068, i32* @lr, align 4
  %v4_100073a8 = call i32 @function_100061e4(i32 %v0_1000739c, i32 ptrtoint ([7 x i8]* @global_var_1000c8f8.287 to i32), i32 6)
  %v0_100073b0 = load i32, i32* @r29, align 4
  store i32 %v0_100073b0, i32* %r3.global-to-local, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  store i32 268465088, i32* @lr, align 4
  %v4_100073bc = call i32 @function_100061e4(i32 %v0_100073b0, i32 ptrtoint ([5 x i8]* @global_var_1000c90c.288 to i32), i32 11)
  store i32 ptrtoint ([9 x i8]* @global_var_1000c914.289 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268465108, i32* @lr, align 4
  %v4_100073d0 = call i32 @function_100061e4(i32 ptrtoint ([9 x i8]* @global_var_1000c914.289 to i32), i32 8, i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1000c920.290 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268465128, i32* @lr, align 4
  %v4_100073e4 = call i32 @function_100061e4(i32 ptrtoint ([9 x i8]* @global_var_1000c920.290 to i32), i32 8, i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1000c92c.291 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268465148, i32* @lr, align 4
  %v4_100073f8 = call i32 @function_100061e4(i32 ptrtoint ([9 x i8]* @global_var_1000c92c.291 to i32), i32 8, i32 8)
  %v0_100073fc = load i32, i32* @r25, align 4
  store i32 %v0_100073fc, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268465164, i32* @lr, align 4
  %v3_10007408 = call i32 @function_100061e4(i32 %v0_100073fc, i32 %v0_100073fc, i32 8)
  store i32 ptrtoint (i32* @global_var_1000c938.292 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268465184, i32* @lr, align 4
  %v3_1000741c = call i32 @function_100061e4(i32 ptrtoint (i32* @global_var_1000c938.292 to i32), i32 8, i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1000c944.293 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268465204, i32* @lr, align 4
  %v4_10007430 = call i32 @function_100061e4(i32 ptrtoint ([9 x i8]* @global_var_1000c944.293 to i32), i32 8, i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1000c950.294 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268465224, i32* @lr, align 4
  %v4_10007444 = call i32 @function_100061e4(i32 ptrtoint ([9 x i8]* @global_var_1000c950.294 to i32), i32 8, i32 8)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000c95c.295 to i32), i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268465248, i32* @lr, align 4
  %v5_1000745c = call i32 @function_100061e4(i32 ptrtoint ([8 x i8]* @global_var_1000c95c.295 to i32), i32 ptrtoint ([11 x i8]* @global_var_1000c534.168 to i32), i32 10)
  %v0_10007468 = load i32, i32* @r28, align 4
  store i32 %v0_10007468, i32* %r3.global-to-local, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  store i32 268465268, i32* @lr, align 4
  %v4_10007470 = call i32 @function_100061e4(i32 %v0_10007468, i32 ptrtoint (i32* @global_var_1000c964.296 to i32), i32 13)
  %v0_10007478 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10007478, i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268465288, i32* @lr, align 4
  %v4_10007484 = call i32 @function_100061e4(i32 %v0_10007478, i32 ptrtoint (i32* @global_var_1000c974.297 to i32), i32 14)
  store i32 ptrtoint ([10 x i8]* @global_var_1000c984.298 to i32), i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268465312, i32* @lr, align 4
  %v4_1000749c = call i32 @function_100061e4(i32 ptrtoint ([10 x i8]* @global_var_1000c984.298 to i32), i32 ptrtoint (i32* @global_var_1000c990.299 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1000c99c.300 to i32), i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268465336, i32* @lr, align 4
  %v5_100074b4 = call i32 @function_100061e4(i32 ptrtoint ([10 x i8]* @global_var_1000c99c.300 to i32), i32 ptrtoint ([11 x i8]* @global_var_1000c9a8.301 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1000c9b4.302 to i32), i32* %r3.global-to-local, align 4
  %v0_100074c0 = load i32, i32* @r22, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268465356, i32* @lr, align 4
  %v4_100074c8 = call i32 @function_100061e4(i32 ptrtoint ([10 x i8]* @global_var_1000c9b4.302 to i32), i32 %v0_100074c0, i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1000c9c0.303 to i32), i32* %r3.global-to-local, align 4
  %v0_100074d4 = load i32, i32* @r22, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268465376, i32* @lr, align 4
  %v4_100074dc = call i32 @function_100061e4(i32 ptrtoint ([10 x i8]* @global_var_1000c9c0.303 to i32), i32 %v0_100074d4, i32 10)
  %v0_100074e4 = load i32, i32* @r29, align 4
  store i32 %v0_100074e4, i32* %r3.global-to-local, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268465400, i32* @lr, align 4
  %v3_100074f4 = call i32 @function_100061e4(i32 %v0_100074e4, i32 ptrtoint (i32* @global_var_1000c9cc.304 to i32), i32 11)
  store i32 ptrtoint ([13 x i8]* @global_var_1000c9d8.305 to i32), i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268465424, i32* @lr, align 4
  %v5_1000750c = call i32 @function_100061e4(i32 ptrtoint ([13 x i8]* @global_var_1000c9d8.305 to i32), i32 ptrtoint ([13 x i8]* @global_var_1000c9e8.306 to i32), i32 12)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000c540.169 to i32), i32* %r3.global-to-local, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  store i32 268465448, i32* @lr, align 4
  %v4_10007524 = call i32 @function_100061e4(i32 ptrtoint ([6 x i8]* @global_var_1000c540.169 to i32), i32 ptrtoint (i32* @global_var_1000c9f8.307 to i32), i32 13)
  %v0_1000752c = load i32, i32* @r24, align 4
  store i32 %v0_1000752c, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ca08.309 to i32), i32* @r29, align 4
  store i32 268465472, i32* @lr, align 4
  %v5_1000753c = call i32 @function_100061e4(i32 %v0_1000752c, i32 ptrtoint ([7 x i8]* @global_var_1000ca00.308 to i32), i32 15)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1000c534.168 to i32), i32* %r3.global-to-local, align 4
  store i32 20, i32* %r5.global-to-local, align 4
  %v0_1000754c = load i32, i32* @r29, align 4
  store i32 268465492, i32* @lr, align 4
  %v4_10007550 = call i32 @function_100061e4(i32 ptrtoint ([11 x i8]* @global_var_1000c534.168 to i32), i32 %v0_1000754c, i32 20)
  %v0_10007554 = load i32, i32* @r28, align 4
  store i32 %v0_10007554, i32* %r3.global-to-local, align 4
  %v0_10007558 = load i32, i32* @r29, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268465508, i32* @lr, align 4
  %v4_10007560 = call i32 @function_100061e4(i32 %v0_10007554, i32 %v0_10007558, i32 14)
  store i32 %v4_10007560, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007564

dec_label_pc_10007564:                            ; preds = %dec_label_pc_10007a50, %dec_label_pc_1000657c
  %stack_var_-88.0 = phi i16 [ %v5_10006574.le, %dec_label_pc_1000657c ], [ %stack_var_-88.4, %dec_label_pc_10007a50 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007568 = load i32, i32* @global_var_1001d1ac.124, align 4
  store i32 %v3_10007568, i32* @r29, align 4
  %v0_1000756c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000756c = icmp slt i32 %v0_1000756c, %v3_10007568
  %v4_1000756c = icmp eq i32 %v0_1000756c, %v3_10007568
  store i1 %v2_1000756c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000756c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000756c, label %dec_label_pc_10007764, label %dec_label_pc_10007574

dec_label_pc_10007574:                            ; preds = %dec_label_pc_10007564
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10007578 = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v2_10007578, i32* @r26, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 0, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10007588

dec_label_pc_10007588:                            ; preds = %dec_label_pc_10007690.dec_label_pc_10007588_crit_edge, %dec_label_pc_10007574
  %v0_10007588 = phi i32 [ %v0_10007588.pre, %dec_label_pc_10007690.dec_label_pc_10007588_crit_edge ], [ 0, %dec_label_pc_10007574 ]
  %stack_var_-88.1 = phi i16 [ %stack_var_-88.3, %dec_label_pc_10007690.dec_label_pc_10007588_crit_edge ], [ %stack_var_-88.0, %dec_label_pc_10007574 ]
  store i32 %v0_10007588, i32* %stack_var_-1888, align 4
  %v0_10007598 = call i32 @function_10005998()
  %v1_10007598 = trunc i32 %v0_10007598 to i16
  store i32 %v0_10007598, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i16 %v1_10007598, i16* bitcast (i32* @global_var_1001d224.138 to i16*), align 4
  %v3_100075a4 = load i32, i32* @global_var_1001d188.12, align 4
  store i32 %v3_100075a4, i32* %r0.global-to-local, align 4
  store i32 %v3_100075a4, i32* @global_var_1001d22c.310, align 4
  br label %dec_label_pc_100075ac.preheader

dec_label_pc_100075ac.preheader:                  ; preds = %dec_label_pc_10007588, %dec_label_pc_10007c14
  %stack_var_-88.2.ph = phi i16 [ %stack_var_-88.1, %dec_label_pc_10007588 ], [ %stack_var_-88.6, %dec_label_pc_10007c14 ]
  br label %dec_label_pc_100075ac

dec_label_pc_100075ac:                            ; preds = %dec_label_pc_10007c5c, %dec_label_pc_10007c48, %dec_label_pc_10007c3c, %dec_label_pc_10007c28, %dec_label_pc_10007688, %dec_label_pc_10007680, %dec_label_pc_10007678, %dec_label_pc_10007670, %dec_label_pc_10007668, %dec_label_pc_10007660, %dec_label_pc_10007658, %dec_label_pc_10007650, %dec_label_pc_10007648, %dec_label_pc_10007640, %dec_label_pc_10007638, %dec_label_pc_10007628, %dec_label_pc_10007620, %dec_label_pc_100075f0, %dec_label_pc_100075e8, %dec_label_pc_100075d8, %dec_label_pc_100075d0, %dec_label_pc_100075c8, %dec_label_pc_100075ac, %dec_label_pc_100075ac.preheader
  %v0_100075ac = call i32 @function_10005998()
  store i32 %v0_100075ac, i32* %r3.global-to-local, align 4
  %v1_100075b0 = urem i32 %v0_100075ac, 256
  store i32 %v1_100075b0, i32* %r11.global-to-local, align 4
  %v1_100075b4 = udiv i32 %v0_100075ac, 16777216
  store i32 %v1_100075b4, i32* %r10.global-to-local, align 4
  %v1_100075b8 = icmp ult i32 %v1_100075b0, 127
  %v3_100075b8 = icmp eq i32 %v1_100075b0, 127
  store i1 %v1_100075b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100075b8, i1* %cr7_eq.global-to-local, align 1
  %v1_100075bc = call i32 @__asm_rlwinm(i32 %v0_100075ac, i32 24, i32 24, i32 31)
  store i32 %v1_100075bc, i32* @r9, align 4
  %v1_100075c0 = call i32 @__asm_rlwinm(i32 %v0_100075ac, i32 16, i32 24, i32 31)
  store i32 %v1_100075c0, i32* %r3.global-to-local, align 4
  %v0_100075c4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100075c4, label %dec_label_pc_100075ac, label %dec_label_pc_100075c8

dec_label_pc_100075c8:                            ; preds = %dec_label_pc_100075ac
  %v0_100075c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100075c8 = icmp slt i32 %v0_100075c8, 0
  %v3_100075c8 = icmp eq i32 %v0_100075c8, 0
  store i1 %v1_100075c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100075c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100075c8, label %dec_label_pc_100075ac, label %dec_label_pc_100075d0

dec_label_pc_100075d0:                            ; preds = %dec_label_pc_100075c8
  %v1_100075d0 = icmp slt i32 %v0_100075c8, 3
  %v3_100075d0 = icmp eq i32 %v0_100075c8, 3
  store i1 %v1_100075d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100075d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100075d0, label %dec_label_pc_100075ac, label %dec_label_pc_100075d8

dec_label_pc_100075d8:                            ; preds = %dec_label_pc_100075d0
  %v1_100075d8 = add i32 %v0_100075c8, 241
  %v1_100075dc = urem i32 %v1_100075d8, 256
  store i32 %v1_100075dc, i32* %r0.global-to-local, align 4
  %v1_100075e0 = icmp eq i32 %v1_100075dc, 0
  %v3_100075e0 = icmp eq i32 %v1_100075dc, 1
  store i1 %v1_100075e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100075e0, i1* %cr7_eq.global-to-local, align 1
  %tmp105 = or i32 %v1_100075dc, 1
  %tmp106 = icmp eq i32 %tmp105, 1
  br i1 %tmp106, label %dec_label_pc_100075ac, label %dec_label_pc_100075e8

dec_label_pc_100075e8:                            ; preds = %dec_label_pc_100075d8
  %v1_100075e8 = icmp slt i32 %v0_100075c8, 56
  %v3_100075e8 = icmp eq i32 %v0_100075c8, 56
  store i1 %v1_100075e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100075e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100075e8, label %dec_label_pc_100075ac, label %dec_label_pc_100075f0

dec_label_pc_100075f0:                            ; preds = %dec_label_pc_100075e8
  %v1_100075f0 = icmp slt i32 %v0_100075c8, 10
  %v3_100075f0 = icmp eq i32 %v0_100075c8, 10
  store i1 %v1_100075f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100075f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100075f0, label %dec_label_pc_100075ac, label %dec_label_pc_100075f8

dec_label_pc_100075f8:                            ; preds = %dec_label_pc_100075f0
  %v1_100075f8 = icmp slt i32 %v0_100075c8, 192
  %v3_100075f8 = icmp eq i32 %v0_100075c8, 192
  store i1 %v1_100075f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100075f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100075f8, label %dec_label_pc_10007c14, label %dec_label_pc_10007600

dec_label_pc_10007600:                            ; preds = %dec_label_pc_100075f8
  %v1_10007600 = icmp slt i32 %v0_100075c8, 172
  %v3_10007600 = icmp eq i32 %v0_100075c8, 172
  store i1 %v1_10007600, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007600, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007600, label %dec_label_pc_10007c20, label %dec_label_pc_10007608

dec_label_pc_10007608:                            ; preds = %dec_label_pc_10007600
  %v1_10007608 = icmp slt i32 %v0_100075c8, 100
  %v3_10007608 = icmp eq i32 %v0_100075c8, 100
  store i1 %v1_10007608, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007608, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007608, label %dec_label_pc_10007c34, label %dec_label_pc_10007610

dec_label_pc_10007610:                            ; preds = %dec_label_pc_10007608
  %v1_10007610 = icmp slt i32 %v0_100075c8, 169
  %v3_10007610 = icmp eq i32 %v0_100075c8, 169
  store i1 %v1_10007610, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007610, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007610, label %dec_label_pc_10007c48, label %dec_label_pc_10007618

dec_label_pc_10007618:                            ; preds = %dec_label_pc_10007610
  %v1_10007618 = icmp slt i32 %v0_100075c8, 198
  %v3_10007618 = icmp eq i32 %v0_100075c8, 198
  store i1 %v1_10007618, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007618, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007618, label %dec_label_pc_10007c54, label %dec_label_pc_10007620

dec_label_pc_10007620:                            ; preds = %dec_label_pc_10007618
  %v1_10007620 = icmp ult i32 %v0_100075c8, 223
  %v2_10007620 = icmp ugt i32 %v0_100075c8, 223
  %v3_10007620 = icmp eq i32 %v0_100075c8, 223
  store i1 %v1_10007620, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007620, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007620, label %dec_label_pc_100075ac, label %dec_label_pc_10007628

dec_label_pc_10007628:                            ; preds = %dec_label_pc_10007620
  %v1_10007628 = add i32 %v0_100075c8, 250
  %v1_1000762c = urem i32 %v1_10007628, 256
  store i32 %v1_1000762c, i32* %r0.global-to-local, align 4
  %v1_10007630 = icmp eq i32 %v1_1000762c, 0
  %v3_10007630 = icmp eq i32 %v1_1000762c, 1
  store i1 %v1_10007630, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007630, i1* %cr7_eq.global-to-local, align 1
  %tmp107 = or i32 %v1_1000762c, 1
  %tmp108 = icmp eq i32 %tmp107, 1
  br i1 %tmp108, label %dec_label_pc_100075ac, label %dec_label_pc_10007638

dec_label_pc_10007638:                            ; preds = %dec_label_pc_10007628
  %v1_10007638 = icmp slt i32 %v0_100075c8, 11
  %v3_10007638 = icmp eq i32 %v0_100075c8, 11
  store i1 %v1_10007638, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007638, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007638, label %dec_label_pc_100075ac, label %dec_label_pc_10007640

dec_label_pc_10007640:                            ; preds = %dec_label_pc_10007638
  %v1_10007640 = icmp slt i32 %v0_100075c8, 21
  %v3_10007640 = icmp eq i32 %v0_100075c8, 21
  store i1 %v1_10007640, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007640, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007640, label %dec_label_pc_100075ac, label %dec_label_pc_10007648

dec_label_pc_10007648:                            ; preds = %dec_label_pc_10007640
  %v1_10007648 = icmp slt i32 %v0_100075c8, 22
  %v3_10007648 = icmp eq i32 %v0_100075c8, 22
  store i1 %v1_10007648, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007648, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007648, label %dec_label_pc_100075ac, label %dec_label_pc_10007650

dec_label_pc_10007650:                            ; preds = %dec_label_pc_10007648
  %v1_10007650 = icmp slt i32 %v0_100075c8, 26
  %v3_10007650 = icmp eq i32 %v0_100075c8, 26
  store i1 %v1_10007650, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007650, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007650, label %dec_label_pc_100075ac, label %dec_label_pc_10007658

dec_label_pc_10007658:                            ; preds = %dec_label_pc_10007650
  %v1_10007658 = icmp slt i32 %v0_100075c8, 28
  %v3_10007658 = icmp eq i32 %v0_100075c8, 28
  store i1 %v1_10007658, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007658, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007658, label %dec_label_pc_100075ac, label %dec_label_pc_10007660

dec_label_pc_10007660:                            ; preds = %dec_label_pc_10007658
  %v1_10007660 = icmp slt i32 %v0_100075c8, 29
  %v3_10007660 = icmp eq i32 %v0_100075c8, 29
  store i1 %v1_10007660, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007660, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007660, label %dec_label_pc_100075ac, label %dec_label_pc_10007668

dec_label_pc_10007668:                            ; preds = %dec_label_pc_10007660
  %v1_10007668 = icmp slt i32 %v0_100075c8, 30
  %v3_10007668 = icmp eq i32 %v0_100075c8, 30
  store i1 %v1_10007668, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007668, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007668, label %dec_label_pc_100075ac, label %dec_label_pc_10007670

dec_label_pc_10007670:                            ; preds = %dec_label_pc_10007668
  %v1_10007670 = icmp slt i32 %v0_100075c8, 33
  %v3_10007670 = icmp eq i32 %v0_100075c8, 33
  store i1 %v1_10007670, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007670, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007670, label %dec_label_pc_100075ac, label %dec_label_pc_10007678

dec_label_pc_10007678:                            ; preds = %dec_label_pc_10007670
  %v1_10007678 = icmp slt i32 %v0_100075c8, 55
  %v3_10007678 = icmp eq i32 %v0_100075c8, 55
  store i1 %v1_10007678, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007678, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007678, label %dec_label_pc_100075ac, label %dec_label_pc_10007680

dec_label_pc_10007680:                            ; preds = %dec_label_pc_10007678
  %v1_10007680 = icmp slt i32 %v0_100075c8, 214
  %v3_10007680 = icmp eq i32 %v0_100075c8, 214
  store i1 %v1_10007680, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007680, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007680, label %dec_label_pc_100075ac, label %dec_label_pc_10007688

dec_label_pc_10007688:                            ; preds = %dec_label_pc_10007680
  %v1_10007688 = icmp slt i32 %v0_100075c8, 215
  %v3_10007688 = icmp eq i32 %v0_100075c8, 215
  store i1 %v1_10007688, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007688, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007688, label %dec_label_pc_100075ac, label %dec_label_pc_10007688.dec_label_pc_10007690.loopexit_crit_edge

dec_label_pc_10007688.dec_label_pc_10007690.loopexit_crit_edge: ; preds = %dec_label_pc_10007688
  %v0_10007694.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10007690

dec_label_pc_10007690:                            ; preds = %dec_label_pc_10007c5c, %dec_label_pc_10007c48, %dec_label_pc_10007c3c, %dec_label_pc_10007c28, %dec_label_pc_10007c54, %dec_label_pc_10007c34, %dec_label_pc_10007c20, %dec_label_pc_10007688.dec_label_pc_10007690.loopexit_crit_edge, %dec_label_pc_10007c14.dec_label_pc_10007690_crit_edge
  %v0_1000769c = phi i32 [ %v0_1000769c18, %dec_label_pc_10007c14.dec_label_pc_10007690_crit_edge ], [ %v1_100075c0, %dec_label_pc_10007688.dec_label_pc_10007690.loopexit_crit_edge ], [ %v1_100075c0, %dec_label_pc_10007c20 ], [ %v1_100075c0, %dec_label_pc_10007c34 ], [ %v1_100075c0, %dec_label_pc_10007c54 ], [ %v1_100075c0, %dec_label_pc_10007c28 ], [ %v1_100075c0, %dec_label_pc_10007c3c ], [ %v1_100075c0, %dec_label_pc_10007c48 ], [ %v1_100075c0, %dec_label_pc_10007c5c ]
  %v0_10007694 = phi i32 [ %v0_10007c14, %dec_label_pc_10007c14.dec_label_pc_10007690_crit_edge ], [ %v0_10007694.pre.pre, %dec_label_pc_10007688.dec_label_pc_10007690.loopexit_crit_edge ], [ %v0_10007c20, %dec_label_pc_10007c20 ], [ %v0_10007c34, %dec_label_pc_10007c34 ], [ %v0_10007c54, %dec_label_pc_10007c54 ], [ %v0_10007c20, %dec_label_pc_10007c28 ], [ %v0_10007c34, %dec_label_pc_10007c3c ], [ %v0_10007c48, %dec_label_pc_10007c48 ], [ %v0_10007c54, %dec_label_pc_10007c5c ]
  %v0_10007690 = phi i32 [ %v0_10007690.pre, %dec_label_pc_10007c14.dec_label_pc_10007690_crit_edge ], [ %v0_100075c8, %dec_label_pc_10007688.dec_label_pc_10007690.loopexit_crit_edge ], [ 172, %dec_label_pc_10007c20 ], [ 100, %dec_label_pc_10007c34 ], [ 198, %dec_label_pc_10007c54 ], [ 172, %dec_label_pc_10007c28 ], [ 100, %dec_label_pc_10007c3c ], [ 169, %dec_label_pc_10007c48 ], [ 198, %dec_label_pc_10007c5c ]
  %stack_var_-88.3 = phi i16 [ %stack_var_-88.6, %dec_label_pc_10007c14.dec_label_pc_10007690_crit_edge ], [ %stack_var_-88.2.ph, %dec_label_pc_10007688.dec_label_pc_10007690.loopexit_crit_edge ], [ %stack_var_-88.2.ph, %dec_label_pc_10007c20 ], [ %stack_var_-88.2.ph, %dec_label_pc_10007c34 ], [ %stack_var_-88.2.ph, %dec_label_pc_10007c54 ], [ %stack_var_-88.2.ph, %dec_label_pc_10007c28 ], [ %stack_var_-88.2.ph, %dec_label_pc_10007c3c ], [ %stack_var_-88.2.ph, %dec_label_pc_10007c48 ], [ %stack_var_-88.2.ph, %dec_label_pc_10007c5c ]
  %v1_10007690 = mul i32 %v0_10007690, 16777216
  %v1_10007694 = mul i32 %v0_10007694, 65536
  %v2_10007698 = or i32 %v1_10007690, %v1_10007694
  %v1_1000769c = mul i32 %v0_1000769c, 256
  %v1_100076a0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100076a0 = or i32 %v2_10007698, %v1_100076a0
  store i32 %v2_100076a0, i32* %r0.global-to-local, align 4
  %v0_100076a4 = load i32, i32* @r30, align 4
  store i32 %v0_100076a4, i32* @r3, align 4
  %v2_100076a8 = or i32 %v2_100076a0, %v1_1000769c
  store i32 %v2_100076a8, i32* %r9.global-to-local, align 4
  store i32 %v2_100076a8, i32* @global_var_1001d230.312, align 4
  %v0_100076b4 = load i32, i32* @r27, align 4
  %v1_100076b4 = trunc i32 %v0_100076b4 to i16
  store i16 %v1_100076b4, i16* bitcast (i32* @global_var_1001d22a.313 to i16*), align 4
  %v2_100076b8 = call i32 @function_10003ca8(i32 %v0_100076a4, i32 20)
  %v3_100076b8 = trunc i32 %v2_100076b8 to i16
  %v3_100076bc = load i64, i64* %stack_var_-1916, align 8
  %v4_100076bc = trunc i64 %v3_100076bc to i32
  store i32 %v4_100076bc, i32* %r9.global-to-local, align 4
  store i16 %v3_100076b8, i16* bitcast (i32* @global_var_1001d22a.313 to i16*), align 4
  %v4_100076cc = mul nsw i64 %v3_100076bc, 1717986919
  %v5_100076cc = udiv i64 %v4_100076cc, 4294967296
  %v6_100076cc = trunc i64 %v5_100076cc to i32
  %tmp = icmp slt i32 %v4_100076bc, 0
  %v1_100076d0 = zext i1 %tmp to i32
  %v2_100076d0 = ashr i32 %v4_100076bc, 31
  %v3_100076d0 = and i32 %v2_100076d0, -2
  %v4_100076d0 = or i32 %v3_100076d0, %v1_100076d0
  store i32 %v4_100076d0, i32* %r11.global-to-local, align 4
  %v1_100076d447 = udiv i64 %v4_100076cc, 17179869184
  %v1_100076d4 = trunc i64 %v1_100076d447 to i32
  %v2_100076d4 = ashr i32 %v6_100076cc, 31
  %v3_100076d4 = and i32 %v2_100076d4, -1073741824
  %v4_100076d4 = or i32 %v3_100076d4, %v1_100076d4
  %v2_100076d8 = sub nsw i32 %v4_100076d4, %v4_100076d0
  %v1_100076dc = mul i32 %v2_100076d8, 10
  %v2_100076e0 = icmp slt i32 %v4_100076bc, %v1_100076dc
  %v4_100076e0 = icmp eq i32 %v4_100076bc, %v1_100076dc
  store i1 %v2_100076e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100076e0, i1* %cr7_eq.global-to-local, align 1
  %.5 = select i1 %v4_100076e0, i16 2323, i16 23
  store i16 %.5, i16* @global_var_1001d236.140, align 2
  %v3_100076f0 = load i32, i32* @global_var_1001d230.312, align 4
  store i32 %v3_100076f0, i32* %r0.global-to-local, align 4
  %v0_100076f4 = load i32, i32* @r31, align 4
  store i32 %v0_100076f4, i32* @r4, align 4
  %v0_100076f8 = load i32, i32* @r27, align 4
  %v1_100076f8 = trunc i32 %v0_100076f8 to i16
  store i16 %v1_100076f8, i16* bitcast (i32* @global_var_1001d244.314 to i16*), align 4
  store i32 20, i32* %r5.global-to-local, align 4
  store i32 %v3_100076f0, i32* @global_var_1001d238.315, align 4
  store i32 20, i32* %r6.global-to-local, align 4
  %v0_10007708 = load i32, i32* @r30, align 4
  store i32 %v0_10007708, i32* %r3.global-to-local, align 4
  %v4_1000770c = call i32 @function_10003d0c(i32 %v0_10007708, i32 %v0_100076f4, i32 20, i32 20)
  %v5_1000770c = trunc i32 %v4_1000770c to i16
  store i32 268566528, i32* %r10.global-to-local, align 4
  store i16 %v5_1000770c, i16* bitcast (i32* @global_var_1001d244.314 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_1000771c = load i32, i32* @global_var_1001d230.312, align 4
  store i32 %v3_1000771c, i32* %r9.global-to-local, align 4
  %v0_10007720 = load i32, i32* @r30, align 4
  %v3_10007724 = load i16, i16* @global_var_1001d236.140, align 2
  %v4_10007724 = zext i16 %v3_10007724 to i32
  store i32 %v4_10007724, i32* %r11.global-to-local, align 4
  store i32 40, i32* %r5.global-to-local, align 4
  %v3_1000772c = load i32, i32* @global_var_1001d1b4.131, align 4
  store i32 %v3_1000772c, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007734 = load i32, i32* @r26, align 4
  store i32 %v0_10007734, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1888, align 4
  store i32 268465996, i32* @lr, align 4
  %v6_10007748 = call i32 @function_1000a704(i32 %v3_1000772c, i32 %v0_10007720, i32 40, i32 16384, i32 %v0_10007734, i32 16)
  store i32 %v6_10007748, i32* %r3.global-to-local, align 4
  %v3_1000774c = load i64, i64* %stack_var_-1916, align 8
  %v4_1000774c = trunc i64 %v3_1000774c to i32
  %v1_10007750 = add i32 %v4_1000774c, 1
  store i32 %v1_10007750, i32* %r9.global-to-local, align 4
  %v1_10007754 = icmp slt i32 %v1_10007750, 383
  %v3_10007754 = icmp eq i32 %v1_10007750, 383
  store i1 %v1_10007754, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007754, i1* %cr7_eq.global-to-local, align 1
  %v5_10007758 = sext i32 %v1_10007750 to i64
  store i64 %v5_10007758, i64* %stack_var_-1916, align 8
  %tmp109 = icmp slt i32 %v1_10007750, 384
  br i1 %tmp109, label %dec_label_pc_10007690.dec_label_pc_10007588_crit_edge, label %dec_label_pc_10007760

dec_label_pc_10007690.dec_label_pc_10007588_crit_edge: ; preds = %dec_label_pc_10007690
  %v0_10007588.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10007588

dec_label_pc_10007760:                            ; preds = %dec_label_pc_10007690
  %v0_10007760 = load i32, i32* @r29, align 4
  store i32 %v0_10007760, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10007764

dec_label_pc_10007764:                            ; preds = %dec_label_pc_10007564, %dec_label_pc_10007760
  %stack_var_-88.4 = phi i16 [ %stack_var_-88.3, %dec_label_pc_10007760 ], [ %stack_var_-88.0, %dec_label_pc_10007564 ]
  %v0_10007764 = call i32 @function_1000a14c()
  store i32 %v0_10007764, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 %v0_10007764, i32* %r22.global-to-local, align 4
  %v1_1000777c = ptrtoint i32* %stack_var_-1616 to i32
  %v4_100077c8 = zext i8 %tmp60 to i32
  %v1_100077cc = icmp ult i8 %tmp60, 6
  %v3_100077cc = icmp eq i8 %tmp60, 6
  %v4_100077d4 = zext i16 %tmp59 to i32
  %v1_100077dc = icmp ult i16 %tmp59, 23
  %v3_100077dc = icmp eq i16 %tmp59, 23
  %v4_100077ec = zext i16 %tmp58 to i32
  %v4_100077f0 = sext i16 %stack_var_-88.4 to i32
  %v2_100077f4 = icmp slt i32 %v4_100077ec, %v4_100077f0
  %v4_100077f4 = icmp eq i32 %v4_100077ec, %v4_100077f0
  %v1_10007800 = and i32 %tmp57, 131072
  %v3_10007800 = icmp eq i32 %v1_10007800, 0
  %v1_10007828 = add i32 %tmp56, -1
  %v2_1000782c = icmp slt i32 %v1_10007828, %tmp55
  %v4_1000782c = icmp eq i32 %v1_10007828, %tmp55
  %v1_10007808 = and i32 %tmp57, 1048576
  %v3_10007808 = icmp eq i32 %v1_10007808, 0
  %v1_10007810 = and i32 %tmp57, 262144
  %v3_10007810 = icmp eq i32 %v1_10007810, 0
  %v1_10007818 = and i32 %tmp57, 65536
  %v3_10007818 = icmp eq i32 %v1_10007818, 0
  %v1_100077e4 = icmp ult i16 %tmp59, 2323
  %v3_100077e4 = icmp eq i16 %tmp59, 2323
  br label %dec_label_pc_10007770

dec_label_pc_10007770:                            ; preds = %dec_label_pc_10007820, %dec_label_pc_10007818, %dec_label_pc_10007810, %dec_label_pc_100077ec, %dec_label_pc_100077e4, %dec_label_pc_100077c8, %dec_label_pc_100077b4, %dec_label_pc_10007808, %dec_label_pc_100077fc, %dec_label_pc_100077ac, %dec_label_pc_10007764
  %v1_10007778 = phi i32 [ %v0_10007764, %dec_label_pc_10007764 ], [ %v0_100077a0, %dec_label_pc_100077ac ], [ %v0_100077a0, %dec_label_pc_100077fc ], [ %v0_100077a0, %dec_label_pc_10007808 ], [ %v0_100077a0, %dec_label_pc_100077b4 ], [ %v0_100077a0, %dec_label_pc_100077c8 ], [ %v0_100077a0, %dec_label_pc_100077e4 ], [ %v0_100077a0, %dec_label_pc_100077ec ], [ %v0_100077a0, %dec_label_pc_10007810 ], [ %v0_100077a0, %dec_label_pc_10007818 ], [ %v0_100077a0, %dec_label_pc_10007820 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_10007778 = inttoptr i32 %v1_10007778 to i32*
  store i32 0, i32* %v2_10007778, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v3_10007788 = load i32, i32* @global_var_1001d1b4.131, align 4
  store i32 %v3_10007788, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268466072, i32* @lr, align 4
  %v6_10007794 = call i32 @function_1000a68c(i32 %v3_10007788, i32 %v1_1000777c, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_10007794, i32* %r3.global-to-local, align 4
  %tmp110 = icmp slt i32 %v6_10007794, 1
  br i1 %tmp110, label %dec_label_pc_100078c4, label %dec_label_pc_100077a0

dec_label_pc_100077a0:                            ; preds = %dec_label_pc_10007770, %dec_label_pc_10007888
  %v0_100077ac = phi i32 [ %v6_100078b8, %dec_label_pc_10007888 ], [ %v6_10007794, %dec_label_pc_10007770 ]
  %v0_100077a0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100077a0 = inttoptr i32 %v0_100077a0 to i32*
  %v2_100077a0 = load i32, i32* %v1_100077a0, align 4
  store i32 %v2_100077a0, i32* %r0.global-to-local, align 4
  %v1_100077a4 = icmp slt i32 %v2_100077a0, 11
  %v3_100077a4 = icmp eq i32 %v2_100077a0, 11
  store i1 %v1_100077a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100077a4, label %dec_label_pc_100078c4, label %dec_label_pc_100077ac

dec_label_pc_100077ac:                            ; preds = %dec_label_pc_100077a0
  %v1_100077ac = icmp ult i32 %v0_100077ac, 39
  %v3_100077ac = icmp eq i32 %v0_100077ac, 39
  store i1 %v1_100077ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077ac, i1* %cr7_eq.global-to-local, align 1
  %tmp111 = icmp ult i32 %v0_100077ac, 40
  br i1 %tmp111, label %dec_label_pc_10007770, label %dec_label_pc_100077b4

dec_label_pc_100077b4:                            ; preds = %dec_label_pc_100077ac
  %v3_100077b8 = load i32, i32* @global_var_1001d188.12, align 4
  store i32 %v3_100077b8, i32* %r0.global-to-local, align 4
  store i32 %tmp61, i32* %r9.global-to-local, align 4
  %v2_100077c0 = icmp slt i32 %tmp61, %v3_100077b8
  %v4_100077c0 = icmp eq i32 %tmp61, %v3_100077b8
  store i1 %v2_100077c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100077c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100077c0, label %dec_label_pc_100077c8, label %dec_label_pc_10007770

dec_label_pc_100077c8:                            ; preds = %dec_label_pc_100077b4
  store i32 %v4_100077c8, i32* %r0.global-to-local, align 4
  store i1 %v1_100077cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100077cc, label %dec_label_pc_100077d4, label %dec_label_pc_10007770

dec_label_pc_100077d4:                            ; preds = %dec_label_pc_100077c8
  store i32 %v4_100077d4, i32* %r8.global-to-local, align 4
  store i32 %v4_100077d4, i32* %r0.global-to-local, align 4
  store i1 %v1_100077dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100077dc, label %dec_label_pc_100077ec, label %dec_label_pc_100077e4

dec_label_pc_100077e4:                            ; preds = %dec_label_pc_100077d4
  store i1 %v1_100077e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100077e4, label %dec_label_pc_100077ec, label %dec_label_pc_10007770

dec_label_pc_100077ec:                            ; preds = %dec_label_pc_100077e4, %dec_label_pc_100077d4
  store i32 %v4_100077ec, i32* %r0.global-to-local, align 4
  store i32 %v4_100077f0, i32* %r10.global-to-local, align 4
  store i1 %v2_100077f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100077f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100077f4, label %dec_label_pc_100077fc, label %dec_label_pc_10007770

dec_label_pc_100077fc:                            ; preds = %dec_label_pc_100077ec
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v1_10007800, i32* %r11.global-to-local, align 4
  br i1 %v3_10007800, label %dec_label_pc_10007770, label %dec_label_pc_10007808

dec_label_pc_10007808:                            ; preds = %dec_label_pc_100077fc
  store i32 %v1_10007808, i32* %r9.global-to-local, align 4
  br i1 %v3_10007808, label %dec_label_pc_10007770, label %dec_label_pc_10007810

dec_label_pc_10007810:                            ; preds = %dec_label_pc_10007808
  store i32 %v1_10007810, i32* %r10.global-to-local, align 4
  br i1 %v3_10007810, label %dec_label_pc_10007818, label %dec_label_pc_10007770

dec_label_pc_10007818:                            ; preds = %dec_label_pc_10007810
  store i32 %v1_10007818, i32* %r11.global-to-local, align 4
  br i1 %v3_10007818, label %dec_label_pc_10007820, label %dec_label_pc_10007770

dec_label_pc_10007820:                            ; preds = %dec_label_pc_10007818
  store i32 %tmp56, i32* %r9.global-to-local, align 4
  store i32 %tmp55, i32* %r0.global-to-local, align 4
  store i32 %v1_10007828, i32* %r10.global-to-local, align 4
  store i1 %v2_1000782c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000782c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000782c, label %dec_label_pc_10007834, label %dec_label_pc_10007770

dec_label_pc_10007834:                            ; preds = %dec_label_pc_10007820
  %v0_10007834 = load i32, i32* @r29, align 4
  %v1_10007834 = icmp slt i32 %v0_10007834, 255
  %v2_10007834 = icmp sgt i32 %v0_10007834, 255
  %v3_10007834 = icmp eq i32 %v0_10007834, 255
  store i1 %v1_10007834, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007834, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007834, label %dec_label_pc_100078c4, label %dec_label_pc_1000783c

dec_label_pc_1000783c:                            ; preds = %dec_label_pc_10007834
  %v3_10007844 = load i32, i32* @global_var_1001d1b0.130, align 4
  store i32 %v3_10007844, i32* %r11.global-to-local, align 4
  %v1_10007848 = mul i32 %v0_10007834, 256
  store i32 %v1_10007848, i32* %r9.global-to-local, align 4
  %v2_1000784c = mul i32 %v0_10007834, 288
  store i32 %v2_1000784c, i32* %r0.global-to-local, align 4
  %v2_10007850 = add i32 %v3_10007844, %v2_1000784c
  store i32 %v2_10007850, i32* @r3, align 4
  %v1_10007854 = add i32 %v2_10007850, 12
  %v2_10007854 = inttoptr i32 %v1_10007854 to i32*
  %v3_10007854 = load i32, i32* %v2_10007854, align 4
  store i32 %v3_10007854, i32* %r9.global-to-local, align 4
  %v1_10007858 = icmp slt i32 %v3_10007854, 0
  %v3_10007858 = icmp eq i32 %v3_10007854, 0
  store i1 %v1_10007858, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007858, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007858, label %dec_label_pc_10007888, label %dec_label_pc_10007860

dec_label_pc_10007860:                            ; preds = %dec_label_pc_1000783c
  %v1_10007860 = sub i32 256, %v0_10007834
  store i32 %v1_10007860, i32* %r11.global-to-local, align 4
  %v1_10007864 = add i32 %v2_10007850, 288
  store i32 %v1_10007864, i32* %r9.global-to-local, align 4
  store i32 %v1_10007860, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000786c

dec_label_pc_1000786c:                            ; preds = %dec_label_pc_10007874, %dec_label_pc_10007860
  %v0_10007874 = phi i32 [ %v1_1000787c, %dec_label_pc_10007874 ], [ %v1_10007864, %dec_label_pc_10007860 ]
  %v0_10007870 = phi i32 [ %v1_10007870, %dec_label_pc_10007874 ], [ %v1_10007860, %dec_label_pc_10007860 ]
  %v0_1000786c = phi i32 [ %v1_1000786c, %dec_label_pc_10007874 ], [ %v0_10007834, %dec_label_pc_10007860 ]
  %v1_1000786c = add i32 %v0_1000786c, 1
  store i32 %v1_1000786c, i32* @r29, align 4
  %v1_10007870 = add i32 %v0_10007870, -1
  store i32 %v1_10007870, i32* %ctr.global-to-local, align 4
  %v2_10007870 = icmp eq i32 %v1_10007870, 0
  br i1 %v2_10007870, label %dec_label_pc_100078c4, label %dec_label_pc_10007874

dec_label_pc_10007874:                            ; preds = %dec_label_pc_1000786c
  %v1_10007874 = add i32 %v0_10007874, 12
  %v2_10007874 = inttoptr i32 %v1_10007874 to i32*
  %v3_10007874 = load i32, i32* %v2_10007874, align 4
  store i32 %v3_10007874, i32* %r0.global-to-local, align 4
  store i32 %v0_10007874, i32* @r3, align 4
  %v1_1000787c = add i32 %v0_10007874, 288
  store i32 %v1_1000787c, i32* %r9.global-to-local, align 4
  %v1_10007880 = icmp slt i32 %v3_10007874, 0
  %v3_10007880 = icmp eq i32 %v3_10007874, 0
  store i1 %v1_10007880, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007880, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007880, label %dec_label_pc_10007888, label %dec_label_pc_1000786c

dec_label_pc_10007888:                            ; preds = %dec_label_pc_10007874, %dec_label_pc_1000783c
  %v1_10007888 = phi i32 [ %v2_10007850, %dec_label_pc_1000783c ], [ %v0_10007874, %dec_label_pc_10007874 ]
  %v2_10007888 = add i32 %v1_10007888, 16
  %v3_10007888 = inttoptr i32 %v2_10007888 to i32*
  store i32 %tmp55, i32* %v3_10007888, align 4
  %v0_1000788c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000788c = trunc i32 %v0_1000788c to i16
  %v2_1000788c = load i32, i32* @r3, align 4
  %v3_1000788c = add i32 %v2_1000788c, 20
  %v4_1000788c = inttoptr i32 %v3_1000788c to i16*
  store i16 %v1_1000788c, i16* %v4_1000788c, align 2
  store i32 ptrtoint (i32* @global_var_10007894.316 to i32), i32* @lr, align 4
  %v0_10007890 = call i32 @function_100060f8()
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007898 = load i32, i32* %r22.global-to-local, align 4
  %v2_10007898 = inttoptr i32 %v1_10007898 to i32*
  store i32 0, i32* %v2_10007898, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  %v3_100078a8 = load i32, i32* @global_var_1001d1b4.131, align 4
  store i32 %v3_100078a8, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268466364, i32* @lr, align 4
  %v6_100078b8 = call i32 @function_1000a68c(i32 %v3_100078a8, i32 %v1_1000777c, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_100078b8, i32* %r3.global-to-local, align 4
  %v2_100078bc = icmp sgt i32 %v6_100078b8, 0
  br i1 %v2_100078bc, label %dec_label_pc_100077a0, label %dec_label_pc_100078c4

dec_label_pc_100078c4:                            ; preds = %dec_label_pc_10007770, %dec_label_pc_10007888, %dec_label_pc_10007834, %dec_label_pc_100077a0, %dec_label_pc_1000786c
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_100078dc137 = load i32, i32* @r1, align 4
  %v3_100078dc138 = add i32 %v2_100078dc137, 64
  %v4_100078dc139 = inttoptr i32 %v3_100078dc138 to i32*
  store i32 0, i32* %v4_100078dc139, align 4
  %v0_100078e0140 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100078e0141 = add i32 %v0_100078e0140, -1
  store i32 %v1_100078e0141, i32* %ctr.global-to-local, align 4
  %v2_100078e0142 = icmp eq i32 %v1_100078e0141, 0
  br i1 %v2_100078e0142, label %dec_label_pc_100078e4, label %dec_label_pc_100078d4.dec_label_pc_100078d4_crit_edge

dec_label_pc_100078d4.dec_label_pc_100078d4_crit_edge: ; preds = %dec_label_pc_100078c4, %dec_label_pc_100078d4.dec_label_pc_100078d4_crit_edge
  %v0_100078d4.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100078dc.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_100078d4 = add i32 %v0_100078d4.pre, 64
  store i32 %v1_100078d4, i32* %r11.global-to-local, align 4
  %v1_100078d8 = add i32 %v0_100078d4.pre, 4
  store i32 %v1_100078d8, i32* %r9.global-to-local, align 4
  %v2_100078dc = load i32, i32* @r1, align 4
  %v3_100078dc = add i32 %v2_100078dc, %v1_100078d4
  %v4_100078dc = inttoptr i32 %v3_100078dc to i32*
  store i32 %v0_100078dc.pre, i32* %v4_100078dc, align 4
  %v0_100078e0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100078e0 = add i32 %v0_100078e0, -1
  store i32 %v1_100078e0, i32* %ctr.global-to-local, align 4
  %v2_100078e0 = icmp eq i32 %v1_100078e0, 0
  br i1 %v2_100078e0, label %dec_label_pc_100078e4, label %dec_label_pc_100078d4.dec_label_pc_100078d4_crit_edge

dec_label_pc_100078e4:                            ; preds = %dec_label_pc_100078d4.dec_label_pc_100078d4_crit_edge, %dec_label_pc_100078c4
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100078f4

dec_label_pc_100078f4:                            ; preds = %dec_label_pc_100078f4, %dec_label_pc_100078e4
  %v1_100078f4 = phi i32 [ 0, %dec_label_pc_100078e4 ], [ %v1_100078f8, %dec_label_pc_100078f4 ]
  %v0_100078f4 = phi i32 [ 0, %dec_label_pc_100078e4 ], [ %v0_10007900, %dec_label_pc_100078f4 ]
  %v2_100078f4 = load i32, i32* @r15, align 4
  %v3_100078f4 = add i32 %v2_100078f4, %v1_100078f4
  %v4_100078f4 = inttoptr i32 %v3_100078f4 to i32*
  store i32 %v0_100078f4, i32* %v4_100078f4, align 4
  %v0_100078f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100078f8 = add i32 %v0_100078f8, 4
  store i32 %v1_100078f8, i32* %r9.global-to-local, align 4
  %v0_100078fc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100078fc = add i32 %v0_100078fc, -1
  store i32 %v1_100078fc, i32* %ctr.global-to-local, align 4
  %v2_100078fc = icmp eq i32 %v1_100078fc, 0
  %v0_10007900 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_100078fc, label %dec_label_pc_10007900, label %dec_label_pc_100078f4

dec_label_pc_10007900:                            ; preds = %dec_label_pc_100078f4
  %v5_10007900 = sext i32 %v0_10007900 to i64
  store i64 %v5_10007900, i64* %stack_var_-1916, align 8
  store i32 0, i32* @r27, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  %v2_10007c88 = ptrtoint i32* %stack_var_-1928 to i32
  br label %dec_label_pc_1000796c

dec_label_pc_1000791c:                            ; preds = %dec_label_pc_10007994
  %v1_1000791c = icmp slt i32 %v3_10007988, 1
  store i1 %v1_1000791c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000798c, i1* %cr7_eq.global-to-local, align 1
  %v1_10007c84 = add i32 %v2_10007984, 4
  %v2_10007c84 = inttoptr i32 %v1_10007c84 to i32*
  %v3_10007c84 = load i32, i32* %v2_10007c84, align 4
  store i32 %v3_10007c84, i32* %r3.global-to-local, align 4
  br i1 %v3_1000798c, label %dec_label_pc_10007c84, label %dec_label_pc_10007924

dec_label_pc_10007924:                            ; preds = %dec_label_pc_1000791c
  store i32 %v2_10007c88, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_10007c84, 65536
  %v1_10007930 = sdiv i32 %sext, 65536
  %v2_10007930 = call i32 @__asm_rlwinm(i32 %v1_10007930, i32 29, i32 3, i32 29)
  %v0_10007934 = load i32, i32* @r27, align 4
  %v3_10007934 = icmp slt i32 %v0_10007934, %v1_10007930
  %v5_10007934 = icmp eq i32 %v0_10007934, %v1_10007930
  store i1 %v3_10007934, i1* %cr7_lt.global-to-local, align 1
  store i1 %v5_10007934, i1* %cr7_eq.global-to-local, align 1
  %v1_10007938 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007938 = add i32 %v1_10007938, %v2_10007930
  store i32 %v2_10007938, i32* %r11.global-to-local, align 4
  %v2_1000793c = urem i32 %v3_10007c84, 32
  store i32 %v2_1000793c, i32* %r10.global-to-local, align 4
  %v1_10007940 = add i32 %v2_10007938, 56
  %v2_10007940 = inttoptr i32 %v1_10007940 to i32*
  %v3_10007940 = load i32, i32* %v2_10007940, align 4
  %v0_10007944 = load i32, i32* %r0.global-to-local, align 4
  %v3_10007944 = shl i32 %v0_10007944, %v2_1000793c
  store i32 %v3_10007944, i32* %r0.global-to-local, align 4
  %v2_10007948 = or i32 %v3_10007944, %v3_10007940
  store i32 %v2_10007948, i32* %r9.global-to-local, align 4
  store i32 %v2_10007948, i32* %v2_10007940, align 4
  br i1 %v3_10007934, label %dec_label_pc_10007954, label %dec_label_pc_10007958

dec_label_pc_10007954:                            ; preds = %dec_label_pc_10007924
  store i32 %v1_10007930, i32* @r27, align 4
  br label %dec_label_pc_10007958

dec_label_pc_10007958:                            ; preds = %dec_label_pc_10007c84, %dec_label_pc_10007924, %dec_label_pc_10007c74, %dec_label_pc_10007cb8, %dec_label_pc_10007cb0, %dec_label_pc_10007954
  %v3_10007958 = load i64, i64* %stack_var_-1916, align 8
  %v4_10007958 = trunc i64 %v3_10007958 to i32
  store i32 %v4_10007958, i32* %r9.global-to-local, align 4
  %v1_1000795c = add i32 %v4_10007958, 1
  store i32 %v1_1000795c, i32* %r0.global-to-local, align 4
  %v1_10007960 = icmp slt i32 %v1_1000795c, 255
  %v2_10007960 = icmp sgt i32 %v1_1000795c, 255
  %v3_10007960 = icmp eq i32 %v1_1000795c, 255
  store i1 %v1_10007960, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007960, i1* %cr7_eq.global-to-local, align 1
  %v5_10007964 = sext i32 %v1_1000795c to i64
  store i64 %v5_10007964, i64* %stack_var_-1916, align 8
  br i1 %v2_10007960, label %dec_label_pc_100079fc, label %dec_label_pc_1000796c

dec_label_pc_1000796c:                            ; preds = %dec_label_pc_100079e0, %dec_label_pc_10007958, %dec_label_pc_10007900
  %v0_10007970 = phi i32 [ 0, %dec_label_pc_10007900 ], [ %v1_1000795c, %dec_label_pc_10007958 ], [ %v1_100079ec, %dec_label_pc_100079e0 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_10007974 = load i32, i32* @global_var_1001d1b0.130, align 4
  store i32 %v3_10007974, i32* %r9.global-to-local, align 4
  %v2_1000797c = mul i32 %v0_10007970, 288
  store i32 %v2_1000797c, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_10007984 = add i32 %v3_10007974, %v2_1000797c
  store i32 %v2_10007984, i32* @r29, align 4
  %v1_10007988 = add i32 %v2_10007984, 12
  %v2_10007988 = inttoptr i32 %v1_10007988 to i32*
  %v3_10007988 = load i32, i32* %v2_10007988, align 4
  store i32 %v3_10007988, i32* %r10.global-to-local, align 4
  %v1_1000798c = icmp eq i32 %v3_10007988, 0
  %v3_1000798c = icmp eq i32 %v3_10007988, 1
  store i1 %v1_1000798c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000798c, i1* %cr7_eq.global-to-local, align 1
  %tmp113 = or i32 %v3_10007988, 1
  %tmp114 = icmp eq i32 %tmp113, 1
  br i1 %tmp114, label %dec_label_pc_10007c74, label %dec_label_pc_10007994

dec_label_pc_10007994:                            ; preds = %dec_label_pc_1000796c, %dec_label_pc_10007c7c
  %v1_100079a4 = phi i32 [ 30, %dec_label_pc_1000796c ], [ 5, %dec_label_pc_10007c7c ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007998 = load i32, i32* @global_var_1001d1ac.124, align 4
  store i32 %v3_10007998, i32* %r0.global-to-local, align 4
  %v1_1000799c = add i32 %v2_10007984, 8
  %v2_1000799c = inttoptr i32 %v1_1000799c to i32*
  %v3_1000799c = load i32, i32* %v2_1000799c, align 4
  store i32 %v3_1000799c, i32* %r9.global-to-local, align 4
  %v2_100079a0 = sub i32 %v3_10007998, %v3_1000799c
  store i32 %v2_100079a0, i32* %r0.global-to-local, align 4
  %v2_100079a4 = icmp ult i32 %v2_100079a0, %v1_100079a4
  %v3_100079a4 = icmp ugt i32 %v2_100079a0, %v1_100079a4
  %v4_100079a4 = icmp eq i32 %v2_100079a0, %v1_100079a4
  store i1 %v2_100079a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100079a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100079a4, label %dec_label_pc_100079ac, label %dec_label_pc_1000791c

dec_label_pc_100079ac:                            ; preds = %dec_label_pc_10007994
  %v1_100079ac = add i32 %v2_10007984, 4
  %v2_100079ac = inttoptr i32 %v1_100079ac to i32*
  %v3_100079ac = load i32, i32* %v2_100079ac, align 4
  store i32 %v3_100079ac, i32* %r3.global-to-local, align 4
  store i32 268466612, i32* @lr, align 4
  %v0_100079b0 = call i32 @function_10009a30()
  store i32 %v0_100079b0, i32* %r3.global-to-local, align 4
  %v0_100079b4 = load i32, i32* @r29, align 4
  %v1_100079b4 = add i32 %v0_100079b4, 12
  %v2_100079b4 = inttoptr i32 %v1_100079b4 to i32*
  %v3_100079b4 = load i32, i32* %v2_100079b4, align 4
  store i32 %v3_100079b4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_100079bc = icmp ult i32 %v3_100079b4, 2
  %v3_100079bc = icmp eq i32 %v3_100079b4, 2
  store i1 %v1_100079bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100079bc, i1* %cr7_eq.global-to-local, align 1
  %v2_100079c0 = add i32 %v0_100079b4, 4
  %v3_100079c0 = inttoptr i32 %v2_100079c0 to i32*
  store i32 -1, i32* %v3_100079c0, align 4
  %tmp115 = icmp ult i32 %v3_100079b4, 3
  br i1 %tmp115, label %dec_label_pc_10007cb8, label %dec_label_pc_100079c8

dec_label_pc_100079c8:                            ; preds = %dec_label_pc_100079ac
  %v0_100079c8 = load i32, i32* @r29, align 4
  %v1_100079c8 = add i32 %v0_100079c8, 284
  %v2_100079c8 = inttoptr i32 %v1_100079c8 to i8*
  %v3_100079c8 = load i8, i8* %v2_100079c8, align 1
  %v4_100079c8 = zext i8 %v3_100079c8 to i32
  %v1_100079cc = add nuw nsw i32 %v4_100079c8, 1
  %v1_100079d0 = urem i32 %v1_100079cc, 256
  store i32 %v1_100079d0, i32* %r9.global-to-local, align 4
  %v1_100079d4 = icmp ult i32 %v1_100079d0, 10
  %v3_100079d4 = icmp eq i32 %v1_100079d0, 10
  store i1 %v1_100079d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100079d4, i1* %cr7_eq.global-to-local, align 1
  %v1_100079d8 = trunc i32 %v1_100079cc to i8
  store i8 %v1_100079d8, i8* %v2_100079c8, align 1
  %v0_100079dc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100079dc, label %dec_label_pc_10007cb8, label %dec_label_pc_100079e0

dec_label_pc_100079e0:                            ; preds = %dec_label_pc_100079c8
  %v0_100079e0 = load i32, i32* @r29, align 4
  store i32 %v0_100079e0, i32* @r3, align 4
  store i32 268466664, i32* @lr, align 4
  %v0_100079e4 = call i32 @function_100060f8()
  store i32 %v0_100079e4, i32* %r3.global-to-local, align 4
  %v3_100079e8 = load i64, i64* %stack_var_-1916, align 8
  %v4_100079e8 = trunc i64 %v3_100079e8 to i32
  store i32 %v4_100079e8, i32* %r9.global-to-local, align 4
  %v1_100079ec = add i32 %v4_100079e8, 1
  store i32 %v1_100079ec, i32* %r0.global-to-local, align 4
  %v1_100079f0 = icmp slt i32 %v1_100079ec, 255
  %v3_100079f0 = icmp eq i32 %v1_100079ec, 255
  store i1 %v1_100079f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100079f0, i1* %cr7_eq.global-to-local, align 1
  %v5_100079f4 = sext i32 %v1_100079ec to i64
  store i64 %v5_100079f4, i64* %stack_var_-1916, align 8
  %tmp116 = icmp slt i32 %v1_100079ec, 256
  br i1 %tmp116, label %dec_label_pc_1000796c, label %dec_label_pc_100079fc

dec_label_pc_100079fc:                            ; preds = %dec_label_pc_100079e0, %dec_label_pc_10007958
  %v0_100079fc = load i32, i32* @r27, align 4
  %v1_100079fc = load i32, i32* %r28.global-to-local, align 4
  %v2_100079fc = icmp slt i32 %v0_100079fc, %v1_100079fc
  %v4_100079fc = icmp eq i32 %v0_100079fc, %v1_100079fc
  store i1 %v2_100079fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100079fc, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v0_100079fc, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-1908, align 4
  br i1 %v2_100079fc, label %dec_label_pc_10007a18, label %dec_label_pc_10007a1c

dec_label_pc_10007a18:                            ; preds = %dec_label_pc_100079fc
  store i32 %v1_100079fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007a1c

dec_label_pc_10007a1c:                            ; preds = %dec_label_pc_100079fc, %dec_label_pc_10007a18
  %v0_10007a2c = phi i32 [ %v0_100079fc, %dec_label_pc_100079fc ], [ %v1_100079fc, %dec_label_pc_10007a18 ]
  %v2_10007a1c = ptrtoint i32* %stack_var_-1872 to i32
  %v1_10007a20 = ptrtoint i32* %stack_var_-1744 to i32
  store i32 %v1_10007a20, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_10007a28 = ptrtoint i32* %stack_var_-1908 to i32
  store i32 %v2_10007a28, i32* %r7.global-to-local, align 4
  %v1_10007a2c = add i32 %v0_10007a2c, 1
  store i32 %v1_10007a2c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007a34.317 to i32), i32* @lr, align 4
  %v5_10007a30 = call i32 @function_10009cf8(i32 %v1_10007a2c, i32 %v2_10007a1c, i32 %v1_10007a20, i32 0, i32 %v2_10007a28)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268466748, i32* @lr, align 4
  %v0_10007a38 = call i32 @function_10009e00()
  store i32 %v0_10007a38, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10007a38, i32* @global_var_1001d1ac.124, align 4
  %v0_10007a48 = load i32, i32* %r29.global-to-local, align 4
  %v5_10007a48 = sext i32 %v0_10007a48 to i64
  store i64 %v5_10007a48, i64* %stack_var_-1916, align 8
  %v2_10008738 = ptrtoint i32* %stack_var_-1920 to i32
  %v2_1000873c = ptrtoint i32* %stack_var_-1912 to i32
  br label %dec_label_pc_10007a64

dec_label_pc_10007a50:                            ; preds = %dec_label_pc_10007ac8, %dec_label_pc_10008600, %dec_label_pc_10007aa8, %dec_label_pc_10007a64, %dec_label_pc_100088ec, %dec_label_pc_100087e8, %dec_label_pc_10008634
  %v3_10007a50 = load i64, i64* %stack_var_-1916, align 8
  %v4_10007a50 = trunc i64 %v3_10007a50 to i32
  store i32 %v4_10007a50, i32* %r9.global-to-local, align 4
  %v1_10007a54 = add i32 %v4_10007a50, 1
  store i32 %v1_10007a54, i32* %r0.global-to-local, align 4
  %v1_10007a58 = icmp slt i32 %v1_10007a54, 255
  %v2_10007a58 = icmp sgt i32 %v1_10007a54, 255
  %v3_10007a58 = icmp eq i32 %v1_10007a54, 255
  store i1 %v1_10007a58, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007a58, i1* %cr7_eq.global-to-local, align 1
  %v5_10007a5c = sext i32 %v1_10007a54 to i64
  store i64 %v5_10007a5c, i64* %stack_var_-1916, align 8
  br i1 %v2_10007a58, label %dec_label_pc_10007564, label %dec_label_pc_10007a64

dec_label_pc_10007a64:                            ; preds = %dec_label_pc_10007a50, %dec_label_pc_10007a1c
  %v0_10007a68 = phi i32 [ %v1_10007a54, %dec_label_pc_10007a50 ], [ 0, %dec_label_pc_10007a1c ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_10007a68 = mul i32 %v0_10007a68, 256
  store i32 %v1_10007a68, i32* %r11.global-to-local, align 4
  %v3_10007a6c = load i32, i32* @global_var_1001d1b0.130, align 4
  store i32 %v3_10007a6c, i32* %r9.global-to-local, align 4
  %v2_10007a74 = mul i32 %v0_10007a68, 288
  store i32 %v2_10007a74, i32* %r0.global-to-local, align 4
  %v2_10007a78 = add i32 %v3_10007a6c, %v2_10007a74
  store i32 %v2_10007a78, i32* @r28, align 4
  %v1_10007a7c = add i32 %v2_10007a78, 4
  %v2_10007a7c = inttoptr i32 %v1_10007a7c to i32*
  %v3_10007a7c = load i32, i32* %v2_10007a7c, align 4
  store i32 %v3_10007a7c, i32* %r3.global-to-local, align 4
  %v1_10007a80 = icmp slt i32 %v3_10007a7c, -1
  %v3_10007a80 = icmp eq i32 %v3_10007a7c, -1
  store i1 %v1_10007a80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007a80, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007a80, label %dec_label_pc_10007a50, label %dec_label_pc_10007a88

dec_label_pc_10007a88:                            ; preds = %dec_label_pc_10007a64
  store i32 %v2_10007c88, i32* %r11.global-to-local, align 4
  %v1_10007a8c = call i32 @__asm_rlwinm(i32 %v3_10007a7c, i32 29, i32 3, i32 29)
  %v1_10007a90 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007a90 = add i32 %v1_10007a90, %v1_10007a8c
  store i32 %v2_10007a90, i32* %r9.global-to-local, align 4
  %v0_10007a94 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007a94 = urem i32 %v0_10007a94, 32
  store i32 %v1_10007a94, i32* %r11.global-to-local, align 4
  %v1_10007a98 = add i32 %v2_10007a90, 184
  %v2_10007a98 = inttoptr i32 %v1_10007a98 to i32*
  %v3_10007a98 = load i32, i32* %v2_10007a98, align 4
  %v3_10007a9c = lshr i32 %v3_10007a98, %v1_10007a94
  store i32 %v3_10007a9c, i32* %r0.global-to-local, align 4
  %v1_10007aa0 = urem i32 %v3_10007a9c, 2
  store i32 %v1_10007aa0, i32* %r9.global-to-local, align 4
  %v3_10007aa0 = icmp eq i32 %v1_10007aa0, 0
  br i1 %v3_10007aa0, label %dec_label_pc_10007aa8, label %dec_label_pc_10008728

dec_label_pc_10007aa8:                            ; preds = %dec_label_pc_10007a88, %dec_label_pc_100087c0
  %v0_10007aac = phi i32 [ %v0_10007a94, %dec_label_pc_10007a88 ], [ %v0_10007aac.pre, %dec_label_pc_100087c0 ]
  store i32 %v2_10007c88, i32* %r0.global-to-local, align 4
  %v1_10007aac = call i32 @__asm_rlwinm(i32 %v0_10007aac, i32 29, i32 3, i32 29)
  %v1_10007ab0 = load i32, i32* %r0.global-to-local, align 4
  %v2_10007ab0 = add i32 %v1_10007ab0, %v1_10007aac
  store i32 %v2_10007ab0, i32* %r9.global-to-local, align 4
  %v0_10007ab4 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007ab4 = urem i32 %v0_10007ab4, 32
  store i32 %v1_10007ab4, i32* %r11.global-to-local, align 4
  %v1_10007ab8 = add i32 %v2_10007ab0, 56
  %v2_10007ab8 = inttoptr i32 %v1_10007ab8 to i32*
  %v3_10007ab8 = load i32, i32* %v2_10007ab8, align 4
  %v3_10007abc = lshr i32 %v3_10007ab8, %v1_10007ab4
  store i32 %v3_10007abc, i32* %r0.global-to-local, align 4
  %v1_10007ac0 = urem i32 %v3_10007abc, 2
  store i32 %v1_10007ac0, i32* %r9.global-to-local, align 4
  %v3_10007ac0 = icmp eq i32 %v1_10007ac0, 0
  br i1 %v3_10007ac0, label %dec_label_pc_10007a50, label %dec_label_pc_10007ac8.preheader

dec_label_pc_10007ac8.preheader:                  ; preds = %dec_label_pc_10007aa8
  %v0_10007ac8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10007ac8

dec_label_pc_10007ac8:                            ; preds = %dec_label_pc_10007ac8.preheader, %dec_label_pc_10007b34
  %v0_10008650 = phi i32 [ %v0_10007ac8.pre, %dec_label_pc_10007ac8.preheader ], [ %v0_10007b4c, %dec_label_pc_10007b34 ]
  %v1_10007ac8 = add i32 %v0_10008650, 12
  %v2_10007ac8 = inttoptr i32 %v1_10007ac8 to i32*
  %v3_10007ac8 = load i32, i32* %v2_10007ac8, align 4
  store i32 %v3_10007ac8, i32* %r10.global-to-local, align 4
  %v1_10007acc = icmp slt i32 %v3_10007ac8, 0
  %v3_10007acc = icmp eq i32 %v3_10007ac8, 0
  store i1 %v1_10007acc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007acc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007acc, label %dec_label_pc_10007a50, label %dec_label_pc_10007ad4

dec_label_pc_10007ad4:                            ; preds = %dec_label_pc_10007ac8
  %v1_10007ad4 = add i32 %v0_10008650, 24
  %v2_10007ad4 = inttoptr i32 %v1_10007ad4 to i32*
  %v3_10007ad4 = load i32, i32* %v2_10007ad4, align 4
  store i32 %v3_10007ad4, i32* %r0.global-to-local, align 4
  %v1_10007ad8 = add i32 %v0_10008650, 28
  store i32 %v1_10007ad8, i32* %r24.global-to-local, align 4
  %v1_10007adc = icmp slt i32 %v3_10007ad4, 256
  %v3_10007adc = icmp eq i32 %v3_10007ad4, 256
  store i1 %v1_10007adc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007adc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007adc, label %dec_label_pc_10008648, label %dec_label_pc_10007ae4

dec_label_pc_10007ae4:                            ; preds = %dec_label_pc_10007ad4, %dec_label_pc_10008648
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_10007aec = load i32, i32* %r22.global-to-local, align 4
  %v2_10007aec = inttoptr i32 %v1_10007aec to i32*
  store i32 0, i32* %v2_10007aec, align 4
  %v0_10007af0 = load i32, i32* @r28, align 4
  %v1_10007af0 = add i32 %v0_10007af0, 24
  %v2_10007af0 = inttoptr i32 %v1_10007af0 to i32*
  %v3_10007af0 = load i32, i32* %v2_10007af0, align 4
  store i32 %v3_10007af0, i32* %r5.global-to-local, align 4
  %v1_10007af4 = add i32 %v0_10007af0, 4
  %v2_10007af4 = inttoptr i32 %v1_10007af4 to i32*
  %v3_10007af4 = load i32, i32* %v2_10007af4, align 4
  store i32 %v3_10007af4, i32* %r3.global-to-local, align 4
  %v0_10007af8 = load i32, i32* %r24.global-to-local, align 4
  %v2_10007af8 = add i32 %v0_10007af8, %v3_10007af0
  store i32 %v2_10007af8, i32* @r29, align 4
  %v1_10007afc = sub i32 256, %v3_10007af0
  store i32 %v1_10007afc, i32* %r5.global-to-local, align 4
  store i32 268466952, i32* @lr, align 4
  %v4_10007b04 = call i32 @function_1000a654(i32 %v3_10007af4, i32 %v2_10007af8, i32 %v1_10007afc, i32 16384)
  store i32 %v4_10007b04, i32* %r3.global-to-local, align 4
  %tmp118 = icmp slt i32 %v4_10007b04, 1
  br i1 %tmp118, label %dec_label_pc_100085f4, label %dec_label_pc_10007b10

dec_label_pc_10007b10:                            ; preds = %dec_label_pc_10007ae4
  store i32 %v4_10007b04, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007b1c

dec_label_pc_10007b1c:                            ; preds = %dec_label_pc_10007b2c, %dec_label_pc_10007b10
  %v0_10007b3043 = phi i32 [ %v1_10007b30, %dec_label_pc_10007b2c ], [ %v4_10007b04, %dec_label_pc_10007b10 ]
  %v1_10007b28 = phi i32 [ %v1_10007b2c, %dec_label_pc_10007b2c ], [ 0, %dec_label_pc_10007b10 ]
  %v1_10007b1c = load i32, i32* @r29, align 4
  %v2_10007b1c = add i32 %v1_10007b1c, %v1_10007b28
  %v3_10007b1c = inttoptr i32 %v2_10007b1c to i8*
  %v4_10007b1c = load i8, i8* %v3_10007b1c, align 1
  %v5_10007b1c = zext i8 %v4_10007b1c to i32
  store i32 %v5_10007b1c, i32* %r0.global-to-local, align 4
  %v3_10007b20 = icmp eq i8 %v4_10007b1c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007b20, label %dec_label_pc_10007b28, label %dec_label_pc_10007b2c

dec_label_pc_10007b28:                            ; preds = %dec_label_pc_10007b1c
  %v0_10007b28 = load i32, i32* %r11.global-to-local, align 4
  %v3_10007b28 = trunc i32 %v0_10007b28 to i8
  store i8 %v3_10007b28, i8* %v3_10007b1c, align 1
  %v0_10007b2c.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10007b30.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007b2c

dec_label_pc_10007b2c:                            ; preds = %dec_label_pc_10007b1c, %dec_label_pc_10007b28
  %v0_10007b30 = phi i32 [ %v0_10007b3043, %dec_label_pc_10007b1c ], [ %v0_10007b30.pre, %dec_label_pc_10007b28 ]
  %v0_10007b2c = phi i32 [ %v1_10007b28, %dec_label_pc_10007b1c ], [ %v0_10007b2c.pre, %dec_label_pc_10007b28 ]
  %v1_10007b2c = add i32 %v0_10007b2c, 1
  store i32 %v1_10007b2c, i32* %r9.global-to-local, align 4
  %v1_10007b30 = add i32 %v0_10007b30, -1
  store i32 %v1_10007b30, i32* %ctr.global-to-local, align 4
  %v2_10007b30 = icmp eq i32 %v1_10007b30, 0
  br i1 %v2_10007b30, label %dec_label_pc_10007b34, label %dec_label_pc_10007b1c

dec_label_pc_10007b34:                            ; preds = %dec_label_pc_10007b2c, %dec_label_pc_100085f8
  %v0_10007b34 = load i32, i32* @r28, align 4
  %v1_10007b34 = add i32 %v0_10007b34, 24
  %v2_10007b34 = inttoptr i32 %v1_10007b34 to i32*
  %v3_10007b34 = load i32, i32* %v2_10007b34, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007b3c = load i32, i32* @global_var_1001d1ac.124, align 4
  store i32 %v3_10007b3c, i32* %r0.global-to-local, align 4
  %v2_10007b40 = add i32 %v3_10007b34, %v4_10007b04
  store i32 %v2_10007b40, i32* %r5.global-to-local, align 4
  store i32 %v2_10007b40, i32* %v2_10007b34, align 4
  %v0_10007b48 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007b48 = load i32, i32* @r28, align 4
  %v2_10007b48 = add i32 %v1_10007b48, 8
  %v3_10007b48 = inttoptr i32 %v2_10007b48 to i32*
  store i32 %v0_10007b48, i32* %v3_10007b48, align 4
  %v0_10007b4c = load i32, i32* @r28, align 4
  %v1_10007b4c = add i32 %v0_10007b4c, 12
  %v2_10007b4c = inttoptr i32 %v1_10007b4c to i32*
  %v3_10007b4c = load i32, i32* %v2_10007b4c, align 4
  store i32 %v3_10007b4c, i32* %r10.global-to-local, align 4
  %v1_10007b50 = icmp ult i32 %v3_10007b4c, 10
  %v2_10007b50 = icmp ugt i32 %v3_10007b4c, 10
  %v3_10007b50 = icmp eq i32 %v3_10007b4c, 10
  store i1 %v1_10007b50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007b50, label %dec_label_pc_10007ac8, label %dec_label_pc_10007b58

dec_label_pc_10007b58:                            ; preds = %dec_label_pc_10007b34
  store i32 ptrtoint (i32* @global_var_1000ca24.311 to i32), i32* %r11.global-to-local, align 4
  %v1_10007b5c = mul i32 %v3_10007b4c, 4
  store i32 %v1_10007b5c, i32* %r0.global-to-local, align 4
  %v2_10007b60 = add i32 %v1_10007b5c, ptrtoint (i32* @global_var_1000ca24.311 to i32)
  %v3_10007b60 = inttoptr i32 %v2_10007b60 to i32*
  %v4_10007b60 = load i32, i32* %v3_10007b60, align 4
  %v2_10007b64 = add i32 %v4_10007b60, ptrtoint (i32* @global_var_1000ca24.311 to i32)
  store i32 %v2_10007b64, i32* %r9.global-to-local, align 4
  store i32 %v2_10007b64, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10007b64)
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007b80 = load i32, i32* @r26, align 4
  store i32 %v0_10007b80, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-1912, align 4
  store i32 268467084, i32* @lr, align 4
  %v4_10007b88 = call i32 @function_1000a6cc(i32 %v0_10007b80, i32 %v2_1000873c, i32 1, i32 16384)
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007b98 = load i32, i32* @r26, align 4
  store i32 %v0_10007b98, i32* %r3.global-to-local, align 4
  store i32 268467104, i32* @lr, align 4
  %v4_10007b9c = call i32 @function_1000a6cc(i32 %v0_10007b98, i32 %v2_10008738, i32 4, i32 16384)
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007bac = load i32, i32* @r26, align 4
  store i32 %v0_10007bac, i32* %r3.global-to-local, align 4
  store i32 268467124, i32* @lr, align 4
  %v4_10007bb0 = call i32 @function_1000a6cc(i32 %v0_10007bac, i32 %v2_10007c88, i32 2, i32 16384)
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007bc0 = load i32, i32* @r26, align 4
  store i32 %v0_10007bc0, i32* %r3.global-to-local, align 4
  store i32 268467144, i32* @lr, align 4
  %v5_10007bc4 = call i32 @function_1000a6cc(i32 %v0_10007bc0, i32 sext (i8 ptrtoint (i8* @global_var_1000c4b0.318 to i8) to i32), i32 1, i32 16384)
  store i32 19, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007bd4 = load i32, i32* @r26, align 4
  store i32 %v0_10007bd4, i32* %r3.global-to-local, align 4
  store i32 268467164, i32* @lr, align 4
  %v5_10007bd8 = call i32 @function_1000a6cc(i32 %v0_10007bd4, i32 319820054, i32 19, i32 16384)
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007be8 = load i32, i32* @r26, align 4
  store i32 %v0_10007be8, i32* %r3.global-to-local, align 4
  store i32 268467184, i32* @lr, align 4
  %v5_10007bec = call i32 @function_1000a6cc(i32 %v0_10007be8, i32 sext (i8 ptrtoint (i8* @global_var_1000c4b1.319 to i8) to i32), i32 1, i32 16384)
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_10007bf8 = load i32, i32* @r26, align 4
  store i32 %v0_10007bf8, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 268467204, i32* @lr, align 4
  %v5_10007c00 = call i32 @function_1000a6cc(i32 %v0_10007bf8, i32 387186688, i32 0, i32 16384)
  %v0_10007c04 = load i32, i32* @r26, align 4
  store i32 %v0_10007c04, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007c0c.321 to i32), i32* @lr, align 4
  %v0_10007c08 = call i32 @function_10009a30()
  store i32 %v0_10007c08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007c0c

dec_label_pc_10007c0c:                            ; preds = %dec_label_pc_100064ec, %dec_label_pc_10008918, %dec_label_pc_10007b58
  %stack_var_-88.5 = phi i16 [ %tmp66, %dec_label_pc_100064ec ], [ %stack_var_-88.4, %dec_label_pc_10007b58 ], [ %tmp66, %dec_label_pc_10008918 ]
  %v0_10007c10 = call i32 @function_1000b1f4()
  store i32 %v0_10007c10, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007c14

dec_label_pc_10007c14:                            ; preds = %dec_label_pc_100075f8, %dec_label_pc_10007c0c
  %v0_1000769c18 = phi i32 [ %v0_10007c10, %dec_label_pc_10007c0c ], [ %v1_100075c0, %dec_label_pc_100075f8 ]
  %stack_var_-88.6 = phi i16 [ %stack_var_-88.5, %dec_label_pc_10007c0c ], [ %stack_var_-88.2.ph, %dec_label_pc_100075f8 ]
  %v0_10007c14 = load i32, i32* @r9, align 4
  %v1_10007c14 = icmp slt i32 %v0_10007c14, 168
  %v3_10007c14 = icmp eq i32 %v0_10007c14, 168
  store i1 %v1_10007c14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c14, label %dec_label_pc_100075ac.preheader, label %dec_label_pc_10007c14.dec_label_pc_10007690_crit_edge

dec_label_pc_10007c14.dec_label_pc_10007690_crit_edge: ; preds = %dec_label_pc_10007c14
  %v0_10007690.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007690

dec_label_pc_10007c20:                            ; preds = %dec_label_pc_10007600
  %v0_10007c20 = load i32, i32* @r9, align 4
  %v1_10007c20 = icmp ult i32 %v0_10007c20, 15
  %v3_10007c20 = icmp eq i32 %v0_10007c20, 15
  store i1 %v1_10007c20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c20, i1* %cr7_eq.global-to-local, align 1
  %tmp119 = icmp ult i32 %v0_10007c20, 16
  br i1 %tmp119, label %dec_label_pc_10007690, label %dec_label_pc_10007c28

dec_label_pc_10007c28:                            ; preds = %dec_label_pc_10007c20
  %v1_10007c28 = icmp ult i32 %v0_10007c20, 31
  %v3_10007c28 = icmp eq i32 %v0_10007c20, 31
  store i1 %v1_10007c28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c28, i1* %cr7_eq.global-to-local, align 1
  %tmp120 = icmp ult i32 %v0_10007c20, 32
  br i1 %tmp120, label %dec_label_pc_100075ac, label %dec_label_pc_10007690

dec_label_pc_10007c34:                            ; preds = %dec_label_pc_10007608
  %v0_10007c34 = load i32, i32* @r9, align 4
  %v1_10007c34 = icmp ult i32 %v0_10007c34, 63
  %v3_10007c34 = icmp eq i32 %v0_10007c34, 63
  store i1 %v1_10007c34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c34, i1* %cr7_eq.global-to-local, align 1
  %tmp121 = icmp ult i32 %v0_10007c34, 64
  br i1 %tmp121, label %dec_label_pc_10007690, label %dec_label_pc_10007c3c

dec_label_pc_10007c3c:                            ; preds = %dec_label_pc_10007c34
  %v1_10007c3c = icmp ult i32 %v0_10007c34, 126
  %v3_10007c3c = icmp eq i32 %v0_10007c34, 126
  store i1 %v1_10007c3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c3c, i1* %cr7_eq.global-to-local, align 1
  %tmp122 = icmp ult i32 %v0_10007c34, 127
  br i1 %tmp122, label %dec_label_pc_100075ac, label %dec_label_pc_10007690

dec_label_pc_10007c48:                            ; preds = %dec_label_pc_10007610
  %v0_10007c48 = load i32, i32* @r9, align 4
  %v1_10007c48 = icmp slt i32 %v0_10007c48, 255
  %v3_10007c48 = icmp eq i32 %v0_10007c48, 255
  store i1 %v1_10007c48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c48, label %dec_label_pc_100075ac, label %dec_label_pc_10007690

dec_label_pc_10007c54:                            ; preds = %dec_label_pc_10007618
  %v0_10007c54 = load i32, i32* @r9, align 4
  %v1_10007c54 = icmp ult i32 %v0_10007c54, 17
  %v3_10007c54 = icmp eq i32 %v0_10007c54, 17
  store i1 %v1_10007c54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c54, i1* %cr7_eq.global-to-local, align 1
  %tmp123 = icmp ult i32 %v0_10007c54, 18
  br i1 %tmp123, label %dec_label_pc_10007690, label %dec_label_pc_10007c5c

dec_label_pc_10007c5c:                            ; preds = %dec_label_pc_10007c54
  %v1_10007c5c = icmp eq i32 %v0_10007c54, 18
  %v3_10007c5c = icmp eq i32 %v0_10007c54, 19
  store i1 %v1_10007c5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c5c, i1* %cr7_eq.global-to-local, align 1
  %tmp124 = icmp ult i32 %v0_10007c54, 20
  br i1 %tmp124, label %dec_label_pc_100075ac, label %dec_label_pc_10007690

dec_label_pc_10007c74:                            ; preds = %dec_label_pc_1000796c
  %v1_10007c74 = icmp slt i32 %v3_10007988, 0
  store i1 %v1_10007c74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_1000798c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1000798c, label %dec_label_pc_10007958, label %dec_label_pc_10007c7c

dec_label_pc_10007c7c:                            ; preds = %dec_label_pc_10007c74
  store i32 5, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007994

dec_label_pc_10007c84:                            ; preds = %dec_label_pc_1000791c
  store i32 %v2_10007c88, i32* %r0.global-to-local, align 4
  %v1_10007c8c = call i32 @__asm_rlwinm(i32 %v3_10007c84, i32 29, i32 3, i32 29)
  %v0_10007c90 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007c90 = icmp slt i32 %v0_10007c90, %v3_10007c84
  %v4_10007c90 = icmp eq i32 %v0_10007c90, %v3_10007c84
  store i1 %v2_10007c90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007c90, i1* %cr7_eq.global-to-local, align 1
  %v1_10007c94 = load i32, i32* %r0.global-to-local, align 4
  %v2_10007c94 = add i32 %v1_10007c94, %v1_10007c8c
  store i32 %v2_10007c94, i32* %r11.global-to-local, align 4
  %v1_10007c98 = urem i32 %v3_10007c84, 32
  store i32 %v1_10007c98, i32* %r0.global-to-local, align 4
  %v1_10007c9c = add i32 %v2_10007c94, 184
  %v2_10007c9c = inttoptr i32 %v1_10007c9c to i32*
  %v3_10007c9c = load i32, i32* %v2_10007c9c, align 4
  %v0_10007ca0 = load i32, i32* %r10.global-to-local, align 4
  %v3_10007ca0 = shl i32 %v0_10007ca0, %v1_10007c98
  store i32 %v3_10007ca0, i32* %r0.global-to-local, align 4
  %v2_10007ca4 = or i32 %v3_10007ca0, %v3_10007c9c
  store i32 %v2_10007ca4, i32* %r9.global-to-local, align 4
  store i32 %v2_10007ca4, i32* %v2_10007c9c, align 4
  br i1 %v2_10007c90, label %dec_label_pc_10007cb0, label %dec_label_pc_10007958

dec_label_pc_10007cb0:                            ; preds = %dec_label_pc_10007c84
  store i32 %v3_10007c84, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10007958

dec_label_pc_10007cb8:                            ; preds = %dec_label_pc_100079c8, %dec_label_pc_100079ac
  %v0_10007cb8 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007cb8 = load i32, i32* @r29, align 4
  %v2_10007cb8 = add i32 %v1_10007cb8, 12
  %v3_10007cb8 = inttoptr i32 %v2_10007cb8 to i32*
  store i32 %v0_10007cb8, i32* %v3_10007cb8, align 4
  %v0_10007cbc = load i32, i32* @r26, align 4
  %v1_10007cbc = trunc i32 %v0_10007cbc to i8
  %v2_10007cbc = load i32, i32* @r29, align 4
  %v3_10007cbc = add i32 %v2_10007cbc, 284
  %v4_10007cbc = inttoptr i32 %v3_10007cbc to i8*
  store i8 %v1_10007cbc, i8* %v4_10007cbc, align 1
  br label %dec_label_pc_10007958

dec_label_pc_100085f4:                            ; preds = %dec_label_pc_10007ae4
  %v3_10007b08 = icmp eq i32 %v4_10007b04, 0
  br i1 %v3_10007b08, label %dec_label_pc_100088e0, label %dec_label_pc_100085f8

dec_label_pc_100085f8:                            ; preds = %dec_label_pc_100085f4
  %v1_100085f8 = icmp slt i32 %v4_10007b04, -1
  %v3_100085f8 = icmp eq i32 %v4_10007b04, -1
  store i1 %v1_100085f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085f8, label %dec_label_pc_10008600, label %dec_label_pc_10007b34

dec_label_pc_10008600:                            ; preds = %dec_label_pc_100085f8
  %v0_10008600 = load i32, i32* %r22.global-to-local, align 4
  %v1_10008600 = inttoptr i32 %v0_10008600 to i32*
  %v2_10008600 = load i32, i32* %v1_10008600, align 4
  store i32 %v2_10008600, i32* %r0.global-to-local, align 4
  %v1_10008604 = icmp slt i32 %v2_10008600, 11
  %v3_10008604 = icmp eq i32 %v2_10008600, 11
  store i1 %v1_10008604, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008604, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008604, label %dec_label_pc_10007a50, label %dec_label_pc_1000860c

dec_label_pc_1000860c:                            ; preds = %dec_label_pc_10008600, %dec_label_pc_100088e0
  %v0_1000860c = load i32, i32* @r28, align 4
  %v1_1000860c = add i32 %v0_1000860c, 4
  %v2_1000860c = inttoptr i32 %v1_1000860c to i32*
  %v3_1000860c = load i32, i32* %v2_1000860c, align 4
  store i32 %v3_1000860c, i32* %r3.global-to-local, align 4
  store i32 268469780, i32* @lr, align 4
  %v0_10008610 = call i32 @function_10009a30()
  store i32 %v0_10008610, i32* %r3.global-to-local, align 4
  %v0_10008614 = load i32, i32* @r28, align 4
  %v1_10008614 = add i32 %v0_10008614, 284
  %v2_10008614 = inttoptr i32 %v1_10008614 to i8*
  %v3_10008614 = load i8, i8* %v2_10008614, align 1
  %v4_10008614 = zext i8 %v3_10008614 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000861c = add nuw nsw i32 %v4_10008614, 1
  store i32 %v1_1000861c, i32* %r9.global-to-local, align 4
  %v2_10008620 = add i32 %v0_10008614, 4
  %v3_10008620 = inttoptr i32 %v2_10008620 to i32*
  store i32 -1, i32* %v3_10008620, align 4
  %v0_10008624 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008624 = urem i32 %v0_10008624, 256
  store i32 %v1_10008624, i32* %r9.global-to-local, align 4
  %v1_10008628 = icmp ult i32 %v1_10008624, 9
  %v3_10008628 = icmp eq i32 %v1_10008624, 9
  store i1 %v1_10008628, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008628, i1* %cr7_eq.global-to-local, align 1
  %v1_1000862c = trunc i32 %v0_10008624 to i8
  %v2_1000862c = load i32, i32* @r28, align 4
  %v3_1000862c = add i32 %v2_1000862c, 284
  %v4_1000862c = inttoptr i32 %v3_1000862c to i8*
  store i8 %v1_1000862c, i8* %v4_1000862c, align 1
  %v0_10008630 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10008630 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10008630 = or i1 %v0_10008630, %v1_10008630
  br i1 %v2_10008630, label %dec_label_pc_100088ec, label %dec_label_pc_10008634

dec_label_pc_10008634:                            ; preds = %dec_label_pc_1000860c
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000863c = load i32, i32* @r28, align 4
  %v2_1000863c = add i32 %v1_1000863c, 12
  %v3_1000863c = inttoptr i32 %v2_1000863c to i32*
  store i32 0, i32* %v3_1000863c, align 4
  %v0_10008640 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008640 = trunc i32 %v0_10008640 to i8
  %v2_10008640 = load i32, i32* @r28, align 4
  %v3_10008640 = add i32 %v2_10008640, 284
  %v4_10008640 = inttoptr i32 %v3_10008640 to i8*
  store i8 %v1_10008640, i8* %v4_10008640, align 1
  br label %dec_label_pc_10007a50

dec_label_pc_10008648:                            ; preds = %dec_label_pc_10007ad4
  store i32 192, i32* %r5.global-to-local, align 4
  store i32 %v1_10007ad8, i32* %r3.global-to-local, align 4
  %v1_10008650 = add i32 %v0_10008650, 92
  store i32 268469848, i32* @lr, align 4
  %v3_10008654 = call i32 @function_1000a190(i32 %v1_10007ad8, i32 %v1_10008650, i32 192)
  store i32 %v3_10008654, i32* %r3.global-to-local, align 4
  %v0_10008658 = load i32, i32* @r28, align 4
  %v1_10008658 = add i32 %v0_10008658, 24
  %v2_10008658 = inttoptr i32 %v1_10008658 to i32*
  %v3_10008658 = load i32, i32* %v2_10008658, align 4
  store i32 %v3_10008658, i32* %r9.global-to-local, align 4
  %v1_1000865c = add i32 %v3_10008658, -64
  store i32 %v1_1000865c, i32* %r5.global-to-local, align 4
  store i32 %v1_1000865c, i32* %v2_10008658, align 4
  br label %dec_label_pc_10007ae4

dec_label_pc_10008728:                            ; preds = %dec_label_pc_10007a88
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 %v2_10008738, i32* %r6.global-to-local, align 4
  store i32 %v2_1000873c, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1912, align 4
  store i32 0, i32* %stack_var_-1920, align 4
  store i32 268470092, i32* @lr, align 4
  %v5_10008748 = call i32 @function_1000a5e8(i32 1, i32 4, i32 %v2_10008738, i32 %v2_1000873c, i32 %v1_10007aa0)
  store i32 %v5_10008748, i32* %r3.global-to-local, align 4
  %v3_1000874c = load i32, i32* %stack_var_-1920, align 4
  store i32 %v3_1000874c, i32* %r0.global-to-local, align 4
  %v2_10008750 = or i32 %v3_1000874c, %v5_10008748
  store i32 %v2_10008750, i32* %r9.global-to-local, align 4
  %v5_10008750 = icmp eq i32 %v2_10008750, 0
  br i1 %v5_10008750, label %dec_label_pc_10008758, label %dec_label_pc_100087e8

dec_label_pc_10008758:                            ; preds = %dec_label_pc_10008728
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_1000875c = load i32, i32* @r28, align 4
  %v2_1000875c = add i32 %v1_1000875c, 12
  %v3_1000875c = inttoptr i32 %v2_1000875c to i32*
  store i32 2, i32* %v3_1000875c, align 4
  %v0_10008760 = call i32 @function_10005998()
  %v3_10008768 = load i16, i16* @global_var_1001d1a8.127, align 2
  %v4_10008768 = zext i16 %v3_10008768 to i32
  store i32 %v4_10008768, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10008770 = load i32, i32* @global_var_1001d1a0.125, align 4
  store i32 %v3_10008770, i32* %r10.global-to-local, align 4
  %v1_10008778 = icmp slt i32 %v3_10008770, 0
  %v3_10008778 = icmp eq i32 %v3_10008770, 0
  store i1 %v1_10008778, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008778, i1* %cr7_eq.global-to-local, align 1
  %v2_10008774 = urem i32 %v0_10008760, %v4_10008768
  %v2_1000877c = sub i32 %v0_10008760, %v2_10008774
  store i32 %v2_1000877c, i32* %r0.global-to-local, align 4
  store i32 %v2_10008774, i32* %r3.global-to-local, align 4
  %tmp126 = icmp slt i32 %v3_10008770, 1
  br i1 %tmp126, label %dec_label_pc_100088d8, label %dec_label_pc_1000878c

dec_label_pc_1000878c:                            ; preds = %dec_label_pc_10008758
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_10008770, i32* %ctr.global-to-local, align 4
  %v3_10008794 = load i32, i32* @global_var_1001d1a4.126, align 4
  store i32 %v3_10008794, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100087a4

dec_label_pc_1000879c:                            ; preds = %dec_label_pc_100087b4, %dec_label_pc_100087a4
  %v4_100087b810 = phi i1 [ %v4_100087b8, %dec_label_pc_100087b4 ], [ %v4_100087ac, %dec_label_pc_100087a4 ]
  %v2_100087b88 = phi i1 [ %v2_100087b8, %dec_label_pc_100087b4 ], [ %v2_100087ac, %dec_label_pc_100087a4 ]
  %v1_1000879c = add i32 %v0_1000879c, 16
  store i32 %v1_1000879c, i32* %r0.global-to-local, align 4
  %v1_100087a0 = add i32 %v0_100087a0, -1
  store i32 %v1_100087a0, i32* %ctr.global-to-local, align 4
  %v2_100087a0 = icmp eq i32 %v1_100087a0, 0
  br i1 %v2_100087a0, label %dec_label_pc_100088d8.loopexit, label %dec_label_pc_100087a4

dec_label_pc_100087a4:                            ; preds = %dec_label_pc_1000879c, %dec_label_pc_1000878c
  %v0_100087a0 = phi i32 [ %v1_100087a0, %dec_label_pc_1000879c ], [ %v3_10008770, %dec_label_pc_1000878c ]
  %v0_1000879c = phi i32 [ %v1_1000879c, %dec_label_pc_1000879c ], [ %v3_10008794, %dec_label_pc_1000878c ]
  store i32 %v0_1000879c, i32* %r9.global-to-local, align 4
  %v1_100087a8 = add i32 %v0_1000879c, 8
  %v2_100087a8 = inttoptr i32 %v1_100087a8 to i16*
  %v3_100087a8 = load i16, i16* %v2_100087a8, align 2
  %v4_100087a8 = zext i16 %v3_100087a8 to i32
  store i32 %v4_100087a8, i32* %r0.global-to-local, align 4
  %v2_100087ac = icmp ult i32 %v4_100087a8, %v2_10008774
  %v3_100087ac = icmp ugt i32 %v4_100087a8, %v2_10008774
  %v4_100087ac = icmp eq i32 %v4_100087a8, %v2_10008774
  br i1 %v3_100087ac, label %dec_label_pc_1000879c, label %dec_label_pc_100087b4

dec_label_pc_100087b4:                            ; preds = %dec_label_pc_100087a4
  %v1_100087b4 = add i32 %v0_1000879c, 10
  %v2_100087b4 = inttoptr i32 %v1_100087b4 to i16*
  %v3_100087b4 = load i16, i16* %v2_100087b4, align 2
  %v4_100087b4 = zext i16 %v3_100087b4 to i32
  store i32 %v4_100087b4, i32* %r0.global-to-local, align 4
  %v2_100087b8 = icmp ult i32 %v4_100087b4, %v2_10008774
  %v3_100087b8 = icmp ugt i32 %v4_100087b4, %v2_10008774
  %v4_100087b8 = icmp eq i32 %v4_100087b4, %v2_10008774
  br i1 %v3_100087b8, label %dec_label_pc_100087c0.loopexit, label %dec_label_pc_1000879c

dec_label_pc_100087c0.loopexit:                   ; preds = %dec_label_pc_100087b4
  store i1 %v2_100087b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100087b8, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100087c0

dec_label_pc_100087c0:                            ; preds = %dec_label_pc_100087c0.loopexit, %dec_label_pc_100088d8
  %v0_100087c8 = phi i32 [ %v0_1000879c, %dec_label_pc_100087c0.loopexit ], [ 0, %dec_label_pc_100088d8 ]
  %v0_100087c0 = load i32, i32* @r28, align 4
  %v1_100087c0 = add i32 %v0_100087c0, 4
  %v2_100087c0 = inttoptr i32 %v1_100087c0 to i32*
  %v3_100087c0 = load i32, i32* %v2_100087c0, align 4
  store i32 %v3_100087c0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_100087c8 = inttoptr i32 %v0_100087c0 to i32*
  store i32 %v0_100087c8, i32* %v2_100087c8, align 4
  %v0_100087cc = load i32, i32* %r5.global-to-local, align 4
  %v1_100087cc = load i32, i32* @r28, align 4
  %v2_100087cc = add i32 %v1_100087cc, 24
  %v3_100087cc = inttoptr i32 %v2_100087cc to i32*
  store i32 %v0_100087cc, i32* %v3_100087cc, align 4
  %v0_10007aac.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007aa8

dec_label_pc_100087e8:                            ; preds = %dec_label_pc_10008728
  %v0_100087e8 = load i32, i32* @r28, align 4
  %v1_100087e8 = add i32 %v0_100087e8, 4
  %v2_100087e8 = inttoptr i32 %v1_100087e8 to i32*
  %v3_100087e8 = load i32, i32* %v2_100087e8, align 4
  store i32 %v3_100087e8, i32* %r3.global-to-local, align 4
  store i32 268470256, i32* @lr, align 4
  %v0_100087ec = call i32 @function_10009a30()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100087f8 = load i32, i32* @r28, align 4
  %v2_100087f8 = add i32 %v1_100087f8, 4
  %v3_100087f8 = inttoptr i32 %v2_100087f8 to i32*
  store i32 -1, i32* %v3_100087f8, align 4
  %v0_100087fc = load i32, i32* %r10.global-to-local, align 4
  %v1_100087fc = load i32, i32* @r28, align 4
  %v2_100087fc = add i32 %v1_100087fc, 12
  %v3_100087fc = inttoptr i32 %v2_100087fc to i32*
  store i32 %v0_100087fc, i32* %v3_100087fc, align 4
  %v0_10008800 = load i32, i32* %r29.global-to-local, align 4
  %v1_10008800 = trunc i32 %v0_10008800 to i8
  %v2_10008800 = load i32, i32* @r28, align 4
  %v3_10008800 = add i32 %v2_10008800, 284
  %v4_10008800 = inttoptr i32 %v3_10008800 to i8*
  store i8 %v1_10008800, i8* %v4_10008800, align 1
  br label %dec_label_pc_10007a50

dec_label_pc_100088d8.loopexit:                   ; preds = %dec_label_pc_1000879c
  store i1 %v2_100087b88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100087b810, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100088d8

dec_label_pc_100088d8:                            ; preds = %dec_label_pc_100088d8.loopexit, %dec_label_pc_10008758
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100087c0

dec_label_pc_100088e0:                            ; preds = %dec_label_pc_100085f4
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_100088e4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100088e4 = inttoptr i32 %v1_100088e4 to i32*
  store i32 104, i32* %v2_100088e4, align 4
  br label %dec_label_pc_1000860c

dec_label_pc_100088ec:                            ; preds = %dec_label_pc_1000860c
  %v0_100088ec = load i32, i32* @r28, align 4
  store i32 %v0_100088ec, i32* @r3, align 4
  store i32 268470516, i32* @lr, align 4
  %v0_100088f0 = call i32 @function_100060f8()
  store i32 %v0_100088f0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007a50

dec_label_pc_10008918:                            ; preds = %dec_label_pc_10006518
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000891c = load i32, i32* @global_var_1001d1b4.131, align 4
  store i32 %v3_1000891c, i32* %r3.global-to-local, align 4
  store i32 268470564, i32* @lr, align 4
  %v0_10008920 = call i32 @function_10009a30()
  store i32 %v0_10008920, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007c0c

; uselistorder directives
  uselistorder i32 %v4_100087b4, { 2, 1, 0, 3 }
  uselistorder i32 %v4_100087a8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1000879c, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v1_100087a0, { 0, 2, 1 }
  uselistorder i32 %v2_10008774, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_10008770, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_10008624, { 1, 2, 0 }
  uselistorder i32 %v0_10008624, { 1, 0 }
  uselistorder i32 %v2_10008600, { 1, 0, 2 }
  uselistorder i32 %v1_10007c98, { 1, 0 }
  uselistorder i32 %v0_10007c54, { 4, 3, 2, 5, 6, 7, 0, 1 }
  uselistorder i32 %v0_10007c48, { 1, 2, 0 }
  uselistorder i32 %v0_10007c34, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10007c20, { 4, 3, 2, 5, 6, 7, 0, 1 }
  uselistorder i32 %v0_10007c14, { 1, 2, 0 }
  uselistorder i16 %stack_var_-88.6, { 1, 0 }
  uselistorder i32 %v1_10007b5c, { 1, 0 }
  uselistorder i32 %v3_10007b4c, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10007b4c, { 1, 0 }
  uselistorder i32 %v1_10007b30, { 2, 1, 0 }
  uselistorder i32 %v1_10007b2c, { 1, 0 }
  uselistorder i32 %v1_10007b28, { 1, 0 }
  uselistorder i32 %v4_10007b04, { 3, 2, 6, 0, 1, 4, 5, 7 }
  uselistorder i32 %v3_10007af0, { 1, 0, 2 }
  uselistorder i32 %v1_10007ad8, { 1, 0, 2 }
  uselistorder i32 %v3_10007ad4, { 1, 0, 2 }
  uselistorder i32 %v3_10007ac8, { 1, 0, 2 }
  uselistorder i32 %v0_10008650, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10007ac0, { 1, 0 }
  uselistorder i32 %v1_10007ab4, { 1, 0 }
  uselistorder i32 %v1_10007aa0, { 2, 1, 0 }
  uselistorder i32 %v1_10007a94, { 1, 0 }
  uselistorder i32 %v0_10007a94, { 1, 0 }
  uselistorder i32 %v3_10007a7c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10007a68, { 1, 0 }
  uselistorder i32 %v1_10007a54, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_1000873c, { 1, 2, 0 }
  uselistorder i32 %v2_10008738, { 1, 2, 0 }
  uselistorder i32 %v1_100079ec, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_100079d0, { 1, 2, 0 }
  uselistorder i32 %v1_100079cc, { 1, 0 }
  uselistorder i32 %v3_100079b4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100079a0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100079a4, { 2, 1, 0 }
  uselistorder i1 %v3_1000798c, { 2, 0, 1 }
  uselistorder i1 %v1_1000798c, { 1, 0, 2 }
  uselistorder i32 %v3_10007988, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v2_10007984, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_1000795c, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v2_1000793c, { 1, 0 }
  uselistorder i32 %v3_10007c84, { 5, 0, 4, 3, 6, 2, 1, 7 }
  uselistorder i32 %v2_10007c88, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v1_100078fc, { 1, 0 }
  uselistorder i32 %v1_100078f8, { 1, 0 }
  uselistorder i32 %v1_100078e0, { 1, 0 }
  uselistorder i32 %v6_100078b8, { 1, 2, 0 }
  uselistorder i32 %v1_1000787c, { 1, 0 }
  uselistorder i32 %v3_10007874, { 1, 0, 2 }
  uselistorder i32 %v1_10007870, { 2, 1, 0 }
  uselistorder i32 %v1_1000786c, { 1, 0 }
  uselistorder i32 %v0_10007874, { 0, 3, 2, 1 }
  uselistorder i32 %v3_10007854, { 1, 0, 2 }
  uselistorder i32 %v0_10007834, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v3_100077b8, { 1, 0, 2 }
  uselistorder i32 %v2_100077a0, { 1, 0, 2 }
  uselistorder i32 %v0_100077a0, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_100077ac, { 2, 1, 0 }
  uselistorder i1 %v3_100077e4, { 1, 0 }
  uselistorder i32 %v1_10007818, { 1, 0 }
  uselistorder i32 %v1_10007810, { 1, 0 }
  uselistorder i32 %v1_10007808, { 1, 0 }
  uselistorder i32 %v1_10007828, { 2, 1, 0 }
  uselistorder i32 %v1_10007800, { 1, 0 }
  uselistorder i32 %v4_100077f0, { 2, 1, 0 }
  uselistorder i32 %v4_100077ec, { 2, 1, 0 }
  uselistorder i16 %stack_var_-88.4, { 2, 1, 0 }
  uselistorder i32 %v1_10007750, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_100076dc, { 1, 0 }
  uselistorder i32 %v4_100076bc, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_1000762c, { 3, 1, 2, 0 }
  uselistorder i32 %v1_100075dc, { 3, 1, 2, 0 }
  uselistorder i32 %v0_100075c8, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 26, 25, 24, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 41, 43, 42, 44, 45 }
  uselistorder i32 %v1_100075b0, { 1, 2, 0 }
  uselistorder i32 %v0_100075ac, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10007598, { 1, 0 }
  uselistorder i32 %v3_10007568, { 1, 0, 2 }
  uselistorder i16 %stack_var_-88.0, { 1, 0 }
  uselistorder i32 %v0_100073fc, { 1, 0, 2 }
  uselistorder i32 %v0_100069c8, { 1, 0, 2 }
  uselistorder i32 %v0_100069b8, { 1, 0, 2 }
  uselistorder i32 %v0_100067c4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_100065b0, { 1, 0 }
  uselistorder i16 %v5_10006574.le, { 0, 2, 1 }
  uselistorder i32 %v1_1000656c, { 3, 1, 2, 0 }
  uselistorder i32 %v0_10006568, { 1, 0 }
  uselistorder i32 %v5_1000655c, { 1, 0, 2 }
  uselistorder i32 %v3_10006500, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_100064e8, { 1, 0 }
  uselistorder i32 %v0_100064e4, { 1, 0 }
  uselistorder i32 %v1_100064e0, { 1, 0 }
  uselistorder i32 %v0_100064d0, { 1, 2, 0 }
  uselistorder i32 %v2_10006490, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_100063ec, { 5, 3, 2, 4, 0, 1, 7, 6, 8 }
  uselistorder i64* %stack_var_-1916, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1908, { 1, 0 }
  uselistorder i32 %tmp61, { 1, 2, 0 }
  uselistorder i8 %tmp60, { 2, 1, 0 }
  uselistorder i16 %tmp59, { 0, 1, 4, 3, 2 }
  uselistorder i32 %tmp57, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 30, 32, 31, 26, 27, 28, 29, 33, 34, 35, 36, 74, 75, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 67, 68, 69, 71, 72, 73 }
  uselistorder i32* %r6.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r5.global-to-local, { 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5, 217, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216 }
  uselistorder i32* %r3.global-to-local, { 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 3, 4, 5, 6, 7, 8, 9, 10, 257, 27, 28, 29, 30, 31, 32, 34, 33, 36, 35, 37, 38, 39, 25, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 118, 120, 121, 122, 123, 124, 126, 125, 127, 129, 128, 130, 131, 132, 133, 135, 134, 136, 137, 139, 138, 140, 141, 142, 143, 144, 146, 145, 147, 148, 150, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 164, 166, 167, 168, 169, 170, 172, 171, 173, 175, 174, 177, 176, 178, 179, 180, 181, 183, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 198, 200, 201, 202, 203, 204, 205, 206, 208, 207, 209, 211, 210, 212, 213, 215, 214, 216, 217, 218, 219, 220, 222, 221, 223, 225, 224, 226, 227, 228, 229, 230, 231, 232, 234, 233, 236, 235, 238, 237, 239, 240, 242, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 2, 256, 1, 0 }
  uselistorder i32* %r18.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 25, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 29, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 38, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 35, 36, 37, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* %cr7_lt.global-to-local, { 69, 68, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 28, 29, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74 }
  uselistorder i1* %cr7_eq.global-to-local, { 71, 70, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 29, 30, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76 }
  uselistorder i16* @global_var_1001d1a8.127, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000a5e8, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000a6cc, { 13, 12, 11, 10, 9, 8, 7, 2, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000a654, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10009cf8, { 2, 1, 0 }
  uselistorder i32 ()* @function_100060f8, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1000a68c, { 3, 2, 1, 0 }
  uselistorder i32 1514, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1000a704, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 16384, { 22, 31, 9, 32, 8, 33, 7, 34, 6, 35, 0, 36, 1, 37, 2, 38, 3, 39, 4, 40, 5, 41, 10, 23, 26, 27, 25, 28, 29, 30, 24, 11, 42, 12, 43, 44, 45, 13, 15, 14, 16, 46, 17, 47, 48, 19, 18, 20, 49, 21, 50 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10003d0c, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32)* @function_10003ca8, { 10, 9, 8, 7, 6, 5, 4, 1, 0, 3, 2 }
  uselistorder i32 198, { 1, 0, 2, 3 }
  uselistorder i32 172, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1000c540.169 to i32), { 1, 5, 2, 6, 3, 7, 4, 8, 0, 9 }
  uselistorder i32 ptrtoint ([11 x i8]* @global_var_1000c534.168 to i32), { 0, 3, 1, 2, 4 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1000c524.167 to i32), { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100061e4, { 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001d236.140, { 2, 0, 1 }
  uselistorder i16 23, { 1, 2, 0, 3 }
  uselistorder i32 65536, { 1, 0, 67, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 17, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66 }
  uselistorder i32 ()* @function_10005998, { 67, 66, 65, 64, 63, 62, 58, 61, 60, 59, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 40, 41, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 5, 4, 3, 2, 1, 0, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000a744, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 2048, { 4, 2, 0, 1, 5, 3, 6 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4 }
  uselistorder i32 ()* @function_10009e00, { 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i32 (i32)* @function_100059e8, { 1, 0 }
  uselistorder i32 (i32)* @function_10009574, { 2, 1, 3, 0 }
  uselistorder i32 ()* @function_10009a78, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_100087c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000860c, { 1, 0 }
  uselistorder label %dec_label_pc_10007c14, { 1, 0 }
  uselistorder label %dec_label_pc_10007c0c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10007b34, { 1, 0 }
  uselistorder label %dec_label_pc_10007b2c, { 1, 0 }
  uselistorder label %dec_label_pc_10007ae4, { 1, 0 }
  uselistorder label %dec_label_pc_10007ac8, { 1, 0 }
  uselistorder label %dec_label_pc_10007aa8, { 1, 0 }
  uselistorder label %dec_label_pc_10007a50, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10007a1c, { 1, 0 }
  uselistorder label %dec_label_pc_10007994, { 1, 0 }
  uselistorder label %dec_label_pc_10007958, { 3, 4, 0, 2, 5, 1 }
  uselistorder label %dec_label_pc_100078d4.dec_label_pc_100078d4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100078c4, { 1, 4, 2, 3, 0 }
  uselistorder label %dec_label_pc_100077a0, { 1, 0 }
  uselistorder label %dec_label_pc_10007770, { 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 10 }
  uselistorder label %dec_label_pc_10007764, { 1, 0 }
  uselistorder label %dec_label_pc_10007690, { 0, 4, 1, 2, 5, 3, 6, 8, 7 }
  uselistorder label %dec_label_pc_100075ac.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006568, { 1, 0 }
}

define i32 @function_10008940(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10008940:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10008940 = icmp eq i32* %arg2, null
  %v1_10008948 = mul i32 %arg1, 8
  store i32 %v1_10008948, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001d270.344 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_10008940, label %dec_label_pc_10008960, label %dec_label_pc_10008958

dec_label_pc_10008958:                            ; preds = %dec_label_pc_10008940
  %v1_10008958 = add i32 %v1_10008948, add (i32 ptrtoint (i32* @global_var_1001d270.344 to i32), i32 4)
  %v2_10008958 = inttoptr i32 %v1_10008958 to i16*
  %v3_10008958 = load i16, i16* %v2_10008958, align 4
  %v4_10008958 = zext i16 %v3_10008958 to i32
  store i32 %v4_10008958, i32* %arg2, align 4
  %v0_10008960.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10008960.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008960

dec_label_pc_10008960:                            ; preds = %dec_label_pc_10008940, %dec_label_pc_10008958
  %v1_10008960 = phi i32 [ ptrtoint (i32* @global_var_1001d270.344 to i32), %dec_label_pc_10008940 ], [ %v1_10008960.pre, %dec_label_pc_10008958 ]
  %v0_10008960 = phi i32 [ %v1_10008948, %dec_label_pc_10008940 ], [ %v0_10008960.pre, %dec_label_pc_10008958 ]
  %v2_10008960 = add i32 %v0_10008960, %v1_10008960
  %v3_10008960 = inttoptr i32 %v2_10008960 to i32*
  %v4_10008960 = load i32, i32* %v3_10008960, align 4
  store i32 %v4_10008960, i32* %r3.global-to-local, align 4
  ret i32 %v4_10008960

; uselistorder directives
  uselistorder i32 %v1_10008948, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008960, { 1, 0 }
}

define i32 @function_10008968(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008968:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_1000896c = mul i32 %arg1, 8
  %v2_10008974 = add i32 %v1_1000896c, ptrtoint (i32* @global_var_1001d270.344 to i32)
  %v1_1000897c = add i32 %v1_1000896c, add (i32 ptrtoint (i32* @global_var_1001d270.344 to i32), i32 4)
  %v2_1000897c = inttoptr i32 %v1_1000897c to i16*
  %v3_1000897c = load i16, i16* %v2_1000897c, align 4
  %v3_10008980 = icmp eq i16 %v3_1000897c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008980, i1* %cr7_eq.global-to-local, align 1
  %v3_10008984 = load i32, i32* @global_var_1001d16c.345, align 4
  %v1_10008988 = udiv i32 %v3_10008984, 16777216
  store i32 %v1_10008988, i32* @r5, align 4
  %v1_1000898c = urem i32 %v3_10008984, 256
  store i32 %v1_1000898c, i32* %r6.global-to-local, align 4
  %v1_10008990 = call i32 @__asm_rlwinm(i32 %v3_10008984, i32 24, i32 24, i32 31)
  %v1_10008994 = call i32 @__asm_rlwinm(i32 %v3_10008984, i32 16, i32 24, i32 31)
  %v0_10008998 = load i32, i32* @lr, align 4
  %v1_10008998 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10008998 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10008998 = or i1 %v1_10008998, %v2_10008998
  call void @__pseudo_cond_branch(i1 %v3_10008998, i32 %v0_10008998)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100089a0 = inttoptr i32 %v2_10008974 to i32*
  br label %dec_label_pc_100089a0

dec_label_pc_100089a0:                            ; preds = %dec_label_pc_100089a0, %dec_label_pc_10008968
  %v1_100089ac = phi i32 [ %v1_100089e0, %dec_label_pc_100089a0 ], [ 0, %dec_label_pc_10008968 ]
  %v2_100089a0 = load i32, i32* %v1_100089a0, align 4
  %v2_100089a4 = add i32 %v2_100089a0, %v1_100089ac
  %v3_100089a4 = inttoptr i32 %v2_100089a4 to i8*
  %v4_100089a4 = load i8, i8* %v3_100089a4, align 1
  %v5_100089a4 = zext i8 %v4_100089a4 to i32
  %v0_100089a8 = load i32, i32* %r6.global-to-local, align 4
  %v2_100089a8 = xor i32 %v0_100089a8, %v5_100089a4
  %v3_100089ac = trunc i32 %v2_100089a8 to i8
  store i8 %v3_100089ac, i8* %v3_100089a4, align 1
  %v2_100089b0 = load i32, i32* %v1_100089a0, align 4
  %v0_100089b4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100089b4 = add i32 %v0_100089b4, %v2_100089b0
  %v3_100089b4 = inttoptr i32 %v2_100089b4 to i8*
  %v4_100089b4 = load i8, i8* %v3_100089b4, align 1
  %v5_100089b4 = zext i8 %v4_100089b4 to i32
  %v2_100089b8 = xor i32 %v5_100089b4, %v1_10008990
  %v3_100089bc = trunc i32 %v2_100089b8 to i8
  store i8 %v3_100089bc, i8* %v3_100089b4, align 1
  %v2_100089c0 = load i32, i32* %v1_100089a0, align 4
  %v0_100089c4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100089c4 = add i32 %v0_100089c4, %v2_100089c0
  %v3_100089c4 = inttoptr i32 %v2_100089c4 to i8*
  %v4_100089c4 = load i8, i8* %v3_100089c4, align 1
  %v5_100089c4 = zext i8 %v4_100089c4 to i32
  %v2_100089c8 = xor i32 %v5_100089c4, %v1_10008994
  %v3_100089cc = trunc i32 %v2_100089c8 to i8
  store i8 %v3_100089cc, i8* %v3_100089c4, align 1
  %v2_100089d0 = load i32, i32* %v1_100089a0, align 4
  %v0_100089d4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100089d4 = add i32 %v0_100089d4, %v2_100089d0
  %v3_100089d4 = inttoptr i32 %v2_100089d4 to i8*
  %v4_100089d4 = load i8, i8* %v3_100089d4, align 1
  %v5_100089d4 = zext i8 %v4_100089d4 to i32
  %v0_100089d8 = load i32, i32* @r5, align 4
  %v2_100089d8 = xor i32 %v0_100089d8, %v5_100089d4
  %v3_100089dc = trunc i32 %v2_100089d8 to i8
  store i8 %v3_100089dc, i8* %v3_100089d4, align 1
  %v0_100089e0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100089e0 = add i32 %v0_100089e0, 1
  store i32 %v1_100089e0, i32* %r10.global-to-local, align 4
  %v3_100089e4 = load i16, i16* %v2_1000897c, align 4
  %v4_100089e4 = zext i16 %v3_100089e4 to i32
  %v2_100089e8 = icmp slt i32 %v4_100089e4, %v1_100089e0
  %v3_100089e8 = icmp sgt i32 %v4_100089e4, %v1_100089e0
  %v4_100089e8 = icmp eq i32 %v4_100089e4, %v1_100089e0
  store i1 %v2_100089e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100089e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100089e8, label %dec_label_pc_100089a0, label %dec_label_pc_100089f0

dec_label_pc_100089f0:                            ; preds = %dec_label_pc_100089a0
  ret i32 %v2_10008974

; uselistorder directives
  uselistorder i32 %v4_100089e4, { 2, 1, 0 }
  uselistorder i32 %v1_100089e0, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10008984, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000896c, { 1, 0 }
}

define i32 @function_100089f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100089f4:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_100089f8 = mul i32 %arg1, 8
  %v2_10008a00 = add i32 %v1_100089f8, ptrtoint (i32* @global_var_1001d270.344 to i32)
  %v1_10008a08 = add i32 %v1_100089f8, add (i32 ptrtoint (i32* @global_var_1001d270.344 to i32), i32 4)
  %v2_10008a08 = inttoptr i32 %v1_10008a08 to i16*
  %v3_10008a08 = load i16, i16* %v2_10008a08, align 4
  %v3_10008a0c = icmp eq i16 %v3_10008a08, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008a0c, i1* %cr7_eq.global-to-local, align 1
  %v3_10008a10 = load i32, i32* @global_var_1001d16c.345, align 4
  %v1_10008a14 = udiv i32 %v3_10008a10, 16777216
  store i32 %v1_10008a14, i32* @r5, align 4
  %v1_10008a18 = urem i32 %v3_10008a10, 256
  store i32 %v1_10008a18, i32* %r6.global-to-local, align 4
  %v1_10008a1c = call i32 @__asm_rlwinm(i32 %v3_10008a10, i32 24, i32 24, i32 31)
  %v1_10008a20 = call i32 @__asm_rlwinm(i32 %v3_10008a10, i32 16, i32 24, i32 31)
  %v0_10008a24 = load i32, i32* @lr, align 4
  %v1_10008a24 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10008a24 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10008a24 = or i1 %v1_10008a24, %v2_10008a24
  call void @__pseudo_cond_branch(i1 %v3_10008a24, i32 %v0_10008a24)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10008a2c = inttoptr i32 %v2_10008a00 to i32*
  br label %dec_label_pc_10008a2c

dec_label_pc_10008a2c:                            ; preds = %dec_label_pc_10008a2c, %dec_label_pc_100089f4
  %v1_10008a38 = phi i32 [ %v1_10008a6c, %dec_label_pc_10008a2c ], [ 0, %dec_label_pc_100089f4 ]
  %v2_10008a2c = load i32, i32* %v1_10008a2c, align 4
  %v2_10008a30 = add i32 %v2_10008a2c, %v1_10008a38
  %v3_10008a30 = inttoptr i32 %v2_10008a30 to i8*
  %v4_10008a30 = load i8, i8* %v3_10008a30, align 1
  %v5_10008a30 = zext i8 %v4_10008a30 to i32
  %v0_10008a34 = load i32, i32* %r6.global-to-local, align 4
  %v2_10008a34 = xor i32 %v0_10008a34, %v5_10008a30
  %v3_10008a38 = trunc i32 %v2_10008a34 to i8
  store i8 %v3_10008a38, i8* %v3_10008a30, align 1
  %v2_10008a3c = load i32, i32* %v1_10008a2c, align 4
  %v0_10008a40 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008a40 = add i32 %v0_10008a40, %v2_10008a3c
  %v3_10008a40 = inttoptr i32 %v2_10008a40 to i8*
  %v4_10008a40 = load i8, i8* %v3_10008a40, align 1
  %v5_10008a40 = zext i8 %v4_10008a40 to i32
  %v2_10008a44 = xor i32 %v5_10008a40, %v1_10008a1c
  %v3_10008a48 = trunc i32 %v2_10008a44 to i8
  store i8 %v3_10008a48, i8* %v3_10008a40, align 1
  %v2_10008a4c = load i32, i32* %v1_10008a2c, align 4
  %v0_10008a50 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008a50 = add i32 %v0_10008a50, %v2_10008a4c
  %v3_10008a50 = inttoptr i32 %v2_10008a50 to i8*
  %v4_10008a50 = load i8, i8* %v3_10008a50, align 1
  %v5_10008a50 = zext i8 %v4_10008a50 to i32
  %v2_10008a54 = xor i32 %v5_10008a50, %v1_10008a20
  %v3_10008a58 = trunc i32 %v2_10008a54 to i8
  store i8 %v3_10008a58, i8* %v3_10008a50, align 1
  %v2_10008a5c = load i32, i32* %v1_10008a2c, align 4
  %v0_10008a60 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008a60 = add i32 %v0_10008a60, %v2_10008a5c
  %v3_10008a60 = inttoptr i32 %v2_10008a60 to i8*
  %v4_10008a60 = load i8, i8* %v3_10008a60, align 1
  %v5_10008a60 = zext i8 %v4_10008a60 to i32
  %v0_10008a64 = load i32, i32* @r5, align 4
  %v2_10008a64 = xor i32 %v0_10008a64, %v5_10008a60
  %v3_10008a68 = trunc i32 %v2_10008a64 to i8
  store i8 %v3_10008a68, i8* %v3_10008a60, align 1
  %v0_10008a6c = load i32, i32* %r10.global-to-local, align 4
  %v1_10008a6c = add i32 %v0_10008a6c, 1
  store i32 %v1_10008a6c, i32* %r10.global-to-local, align 4
  %v3_10008a70 = load i16, i16* %v2_10008a08, align 4
  %v4_10008a70 = zext i16 %v3_10008a70 to i32
  %v2_10008a74 = icmp slt i32 %v4_10008a70, %v1_10008a6c
  %v3_10008a74 = icmp sgt i32 %v4_10008a70, %v1_10008a6c
  %v4_10008a74 = icmp eq i32 %v4_10008a70, %v1_10008a6c
  store i1 %v2_10008a74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008a74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008a74, label %dec_label_pc_10008a2c, label %dec_label_pc_10008a7c

dec_label_pc_10008a7c:                            ; preds = %dec_label_pc_10008a2c
  ret i32 %v2_10008a00

; uselistorder directives
  uselistorder i32 %v4_10008a70, { 2, 1, 0 }
  uselistorder i32 %v1_10008a6c, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10008a10, { 2, 3, 1, 0 }
  uselistorder i32 %v2_10008a00, { 1, 0 }
  uselistorder i32 %v1_100089f8, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6, 9, 8 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001d270.344 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001d270.344 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_10008a80(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008a80:
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 9, i32* @r3, align 4
  %v0_10008a8c = load i32, i32* @r28, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1000ca60.346 to i32), i32* @r28, align 4
  store i32 24, i32* %r14.global-to-local, align 4
  store i32 6, i32* %r15.global-to-local, align 4
  store i32 23, i32* %r16.global-to-local, align 4
  store i32 9, i32* %r17.global-to-local, align 4
  store i32 19, i32* %r18.global-to-local, align 4
  store i32 14, i32* %r19.global-to-local, align 4
  store i32 8, i32* %r21.global-to-local, align 4
  store i32 7, i32* %r22.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000cb0c.347 to i32), i32* %r20.global-to-local, align 4
  store i32 268500992, i32* %r24.global-to-local, align 4
  store i32 2, i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000cb24.348 to i32), i32* %r25.global-to-local, align 4
  %v0_10008b14 = load i32, i32* @r30, align 4
  %v0_10008b1c = load i32, i32* @r31, align 4
  store i32 268471076, i32* @lr, align 4
  %v0_10008b20 = call i32 @function_1000a984()
  %v0_10008b24 = load i32, i32* @r28, align 4
  store i32 %v0_10008b20, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008b34.349 to i32), i32* @lr, align 4
  %v4_10008b30 = call i32 @function_100092f4(i32 %v0_10008b24, i32 9, i32 9)
  store i32 2, i32* @r3, align 4
  store i32 %v0_10008b20, i32* @global_var_1001d288.350, align 4
  %v0_10008b3c = load i32, i32* %r17.global-to-local, align 4
  %v1_10008b3c = trunc i32 %v0_10008b3c to i16
  store i16 %v1_10008b3c, i16* bitcast (i32* @global_var_1001d28c.351 to i16*), align 4
  store i32 268471108, i32* @lr, align 4
  %v0_10008b40 = call i32 @function_1000a984()
  store i32 %v0_10008b40, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008b58.353 to i32), i32* @lr, align 4
  %v4_10008b54 = call i32 @function_100092f4(i32 ptrtoint ([3 x i8]* @global_var_1000ca6c.352 to i32), i32 2, i32 2)
  store i32 9, i32* @r3, align 4
  store i32 %v0_10008b40, i32* @global_var_1001d290.354, align 4
  store i32 5, i32* @r30, align 4
  %v0_10008b64 = load i32, i32* %r26.global-to-local, align 4
  %v1_10008b64 = trunc i32 %v0_10008b64 to i16
  store i16 %v1_10008b64, i16* bitcast (i32* @global_var_1001d294.355 to i16*), align 4
  store i32 268471148, i32* @lr, align 4
  %v0_10008b68 = call i32 @function_1000a984()
  %v0_10008b6c = load i32, i32* @r28, align 4
  store i32 %v0_10008b68, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008b7c.356 to i32), i32* @lr, align 4
  %v4_10008b78 = call i32 @function_100092f4(i32 %v0_10008b6c, i32 9, i32 9)
  store i32 2, i32* @r3, align 4
  store i32 %v0_10008b68, i32* @global_var_1001d300.357, align 4
  %v0_10008b84 = load i32, i32* %r17.global-to-local, align 4
  %v1_10008b84 = trunc i32 %v0_10008b84 to i16
  store i16 %v1_10008b84, i16* bitcast (i32* @global_var_1001d304.358 to i16*), align 4
  store i32 268471180, i32* @lr, align 4
  %v0_10008b88 = call i32 @function_1000a984()
  store i32 %v0_10008b88, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ba0.360 to i32), i32* @lr, align 4
  %v3_10008b9c = call i32 @function_100092f4(i32 ptrtoint (i32* @global_var_1000ca70.359 to i32), i32 2, i32 2)
  store i32 15, i32* @r3, align 4
  %v0_10008ba4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008ba4, i32* @global_var_1001d308.361, align 4
  store i32 15, i32* %r27.global-to-local, align 4
  %v0_10008bac = load i32, i32* %r26.global-to-local, align 4
  %v1_10008bac = trunc i32 %v0_10008bac to i16
  store i16 %v1_10008bac, i16* bitcast (i32* @global_var_1001d30c.362 to i16*), align 4
  store i32 268471220, i32* @lr, align 4
  %v0_10008bb0 = call i32 @function_1000a984()
  store i32 %v0_10008bb0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008bc8.364 to i32), i32* @lr, align 4
  %v3_10008bc4 = call i32 @function_100092f4(i32 ptrtoint (i32* @global_var_1000ca74.363 to i32), i32 15, i32 15)
  store i32 7, i32* @r3, align 4
  %v0_10008bcc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008bcc, i32* @global_var_1001d280.365, align 4
  store i32 268500992, i32* %r26.global-to-local, align 4
  %v0_10008bd4 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008bd4 = trunc i32 %v0_10008bd4 to i16
  store i16 %v1_10008bd4, i16* bitcast (i32* @global_var_1001d284.366 to i16*), align 4
  store i32 268471260, i32* @lr, align 4
  %v0_10008bd8 = call i32 @function_1000a984()
  store i32 %v0_10008bd8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008bf0.368 to i32), i32* @lr, align 4
  %v4_10008bec = call i32 @function_100092f4(i32 ptrtoint ([8 x i8]* @global_var_1000ca84.367 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_10008bf4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008bf4, i32* @global_var_1001d2a0.369, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1000ca9c.370 to i32), i32* %r26.global-to-local, align 4
  %v0_10008bfc = load i32, i32* %r22.global-to-local, align 4
  %v1_10008bfc = trunc i32 %v0_10008bfc to i16
  store i16 %v1_10008bfc, i16* bitcast (i32* @global_var_1001d2a4.371 to i16*), align 4
  store i32 268471300, i32* @lr, align 4
  %v0_10008c00 = call i32 @function_1000a984()
  store i32 %v0_10008c00, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008c18.373 to i32), i32* @lr, align 4
  %v4_10008c14 = call i32 @function_100092f4(i32 ptrtoint ([6 x i8]* @global_var_1000ca8c.372 to i32), i32 5, i32 5)
  store i32 4, i32* @r3, align 4
  %v0_10008c1c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008c1c, i32* @global_var_1001d2a8.374, align 4
  %v0_10008c24 = load i32, i32* @r30, align 4
  %v1_10008c24 = trunc i32 %v0_10008c24 to i16
  store i16 %v1_10008c24, i16* bitcast (i32* @global_var_1001d2ac.375 to i16*), align 4
  store i32 268471340, i32* @lr, align 4
  %v0_10008c28 = call i32 @function_1000a984()
  store i32 %v0_10008c28, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008c40.377 to i32), i32* @lr, align 4
  %v4_10008c3c = call i32 @function_100092f4(i32 ptrtoint ([5 x i8]* @global_var_1000ca94.376 to i32), i32 4, i32 4)
  store i32 14, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001d2b4.378 to i16*), align 4
  %v0_10008c4c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008c4c, i32* @global_var_1001d2b0.379, align 4
  store i32 268471380, i32* @lr, align 4
  %v0_10008c50 = call i32 @function_1000a984()
  %v0_10008c54 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10008c50, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008c64.380 to i32), i32* @lr, align 4
  %v4_10008c60 = call i32 @function_100092f4(i32 %v0_10008c54, i32 14, i32 14)
  store i32 6, i32* @r3, align 4
  %v0_10008c68 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008c68, i32* @global_var_1001d2b8.381, align 4
  %v0_10008c6c = load i32, i32* %r19.global-to-local, align 4
  %v1_10008c6c = trunc i32 %v0_10008c6c to i16
  store i16 %v1_10008c6c, i16* bitcast (i32* @global_var_1001d2bc.382 to i16*), align 4
  store i32 268471412, i32* @lr, align 4
  %v0_10008c70 = call i32 @function_1000a984()
  store i32 %v0_10008c70, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008c88.384 to i32), i32* @lr, align 4
  %v4_10008c84 = call i32 @function_100092f4(i32 ptrtoint ([7 x i8]* @global_var_1000caac.383 to i32), i32 6, i32 6)
  store i32 8, i32* @r3, align 4
  %v0_10008c8c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008c8c, i32* @global_var_1001d2c0.385, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1000cb30.386 to i32), i32* %r24.global-to-local, align 4
  %v0_10008c94 = load i32, i32* %r15.global-to-local, align 4
  %v1_10008c94 = trunc i32 %v0_10008c94 to i16
  store i16 %v1_10008c94, i16* bitcast (i32* @global_var_1001d2c4.387 to i16*), align 4
  store i32 268471452, i32* @lr, align 4
  %v0_10008c98 = call i32 @function_1000a984()
  store i32 %v0_10008c98, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008cb0.389 to i32), i32* @lr, align 4
  %v4_10008cac = call i32 @function_100092f4(i32 ptrtoint ([9 x i8]* @global_var_1000cab4.388 to i32), i32 8, i32 8)
  store i32 7, i32* @r3, align 4
  %v0_10008cb4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008cb4, i32* @global_var_1001d2c8.390, align 4
  store i32 268500992, i32* %r23.global-to-local, align 4
  %v0_10008cbc = load i32, i32* %r21.global-to-local, align 4
  %v1_10008cbc = trunc i32 %v0_10008cbc to i16
  store i16 %v1_10008cbc, i16* bitcast (i32* @global_var_1001d2cc.391 to i16*), align 4
  store i32 268471492, i32* @lr, align 4
  %v0_10008cc0 = call i32 @function_1000a984()
  store i32 %v0_10008cc0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008cd8.393 to i32), i32* @lr, align 4
  %v4_10008cd4 = call i32 @function_100092f4(i32 ptrtoint ([8 x i8]* @global_var_1000cac0.392 to i32), i32 7, i32 7)
  store i32 16, i32* @r3, align 4
  %v0_10008cdc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008cdc, i32* @global_var_1001d2d0.394, align 4
  store i32 ptrtoint ([20 x i8]* @global_var_1000cb40.395 to i32), i32* %r23.global-to-local, align 4
  %v0_10008ce4 = load i32, i32* %r22.global-to-local, align 4
  %v1_10008ce4 = trunc i32 %v0_10008ce4 to i16
  store i16 %v1_10008ce4, i16* bitcast (i32* @global_var_1001d2d4.396 to i16*), align 4
  store i32 268471532, i32* @lr, align 4
  %v0_10008ce8 = call i32 @function_1000a984()
  store i32 %v0_10008ce8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008d00.398 to i32), i32* @lr, align 4
  %v4_10008cfc = call i32 @function_100092f4(i32 ptrtoint ([17 x i8]* @global_var_1000cac8.397 to i32), i32 16, i32 16)
  store i32 14, i32* @r3, align 4
  %v0_10008d04 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d04, i32* @global_var_1001d2d8.399, align 4
  %v0_10008d08 = load i32, i32* @r31, align 4
  %v1_10008d08 = trunc i32 %v0_10008d08 to i16
  store i16 %v1_10008d08, i16* bitcast (i32* @global_var_1001d2dc.400 to i16*), align 4
  store i32 268471568, i32* @lr, align 4
  %v0_10008d0c = call i32 @function_1000a984()
  store i32 %v0_10008d0c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008d24.402 to i32), i32* @lr, align 4
  %v4_10008d20 = call i32 @function_100092f4(i32 ptrtoint ([15 x i8]* @global_var_1000cadc.401 to i32), i32 14, i32 14)
  store i32 9, i32* @r3, align 4
  %v0_10008d28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d28, i32* @global_var_1001d2e0.403, align 4
  %v0_10008d2c = load i32, i32* %r19.global-to-local, align 4
  %v1_10008d2c = trunc i32 %v0_10008d2c to i16
  store i16 %v1_10008d2c, i16* bitcast (i32* @global_var_1001d2e4.404 to i16*), align 4
  store i32 268471604, i32* @lr, align 4
  %v0_10008d30 = call i32 @function_1000a984()
  store i32 %v0_10008d30, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008d48.406 to i32), i32* @lr, align 4
  %v4_10008d44 = call i32 @function_100092f4(i32 ptrtoint ([10 x i8]* @global_var_1000caec.405 to i32), i32 9, i32 9)
  store i32 19, i32* @r3, align 4
  %v0_10008d4c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d4c, i32* @global_var_1001d2e8.407, align 4
  %v0_10008d50 = load i32, i32* %r17.global-to-local, align 4
  %v1_10008d50 = trunc i32 %v0_10008d50 to i16
  store i16 %v1_10008d50, i16* bitcast (i32* @global_var_1001d2ec.408 to i16*), align 4
  store i32 268471640, i32* @lr, align 4
  %v0_10008d54 = call i32 @function_1000a984()
  store i32 %v0_10008d54, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008d6c.410 to i32), i32* @lr, align 4
  %v4_10008d68 = call i32 @function_100092f4(i32 ptrtoint ([20 x i8]* @global_var_1000caf8.409 to i32), i32 19, i32 19)
  store i32 23, i32* @r3, align 4
  %v0_10008d70 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d70, i32* @global_var_1001d2f0.411, align 4
  %v0_10008d74 = load i32, i32* %r18.global-to-local, align 4
  %v1_10008d74 = trunc i32 %v0_10008d74 to i16
  store i16 %v1_10008d74, i16* bitcast (i32* @global_var_1001d2f4.412 to i16*), align 4
  store i32 268471676, i32* @lr, align 4
  %v0_10008d78 = call i32 @function_1000a984()
  %v0_10008d7c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10008d78, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008d8c.413 to i32), i32* @lr, align 4
  %v3_10008d88 = call i32 @function_100092f4(i32 %v0_10008d7c, i32 23, i32 23)
  store i32 8, i32* @r3, align 4
  %v0_10008d90 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d90, i32* @global_var_1001d2f8.414, align 4
  %v0_10008d94 = load i32, i32* %r16.global-to-local, align 4
  %v1_10008d94 = trunc i32 %v0_10008d94 to i16
  store i16 %v1_10008d94, i16* bitcast (i32* @global_var_1001d2fc.415 to i16*), align 4
  store i32 268471708, i32* @lr, align 4
  %v0_10008d98 = call i32 @function_1000a984()
  %v0_10008d9c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10008d98, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008dac.416 to i32), i32* @lr, align 4
  %v4_10008da8 = call i32 @function_100092f4(i32 %v0_10008d9c, i32 8, i32 8)
  store i32 14, i32* @r3, align 4
  %v0_10008db0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008db0, i32* @global_var_1001d300.357, align 4
  %v0_10008db4 = load i32, i32* %r21.global-to-local, align 4
  %v1_10008db4 = trunc i32 %v0_10008db4 to i16
  store i16 %v1_10008db4, i16* bitcast (i32* @global_var_1001d304.358 to i16*), align 4
  store i32 268471740, i32* @lr, align 4
  %v0_10008db8 = call i32 @function_1000a984()
  %v0_10008dbc = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10008db8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008dcc.417 to i32), i32* @lr, align 4
  %v4_10008dc8 = call i32 @function_100092f4(i32 %v0_10008dbc, i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_10008dd0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008dd0, i32* @global_var_1001d308.361, align 4
  %v0_10008dd4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10008dd4 = trunc i32 %v0_10008dd4 to i16
  store i16 %v1_10008dd4, i16* bitcast (i32* @global_var_1001d30c.362 to i16*), align 4
  store i32 268471772, i32* @lr, align 4
  %v0_10008dd8 = call i32 @function_1000a984()
  %v0_10008ddc = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10008dd8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008dec.418 to i32), i32* @lr, align 4
  %v4_10008de8 = call i32 @function_100092f4(i32 %v0_10008ddc, i32 19, i32 19)
  store i32 23, i32* @r3, align 4
  %v0_10008df0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008df0, i32* @global_var_1001d310.419, align 4
  %v0_10008df4 = load i32, i32* %r18.global-to-local, align 4
  %v1_10008df4 = trunc i32 %v0_10008df4 to i16
  store i16 %v1_10008df4, i16* bitcast (i32* @global_var_1001d314.420 to i16*), align 4
  store i32 268471804, i32* @lr, align 4
  %v0_10008df8 = call i32 @function_1000a984()
  store i32 %v0_10008df8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008e10.422 to i32), i32* @lr, align 4
  %v3_10008e0c = call i32 @function_100092f4(i32 ptrtoint (i32* @global_var_1000cb54.421 to i32), i32 23, i32 23)
  store i32 24, i32* @r3, align 4
  %v0_10008e14 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008e14, i32* @global_var_1001d318.423, align 4
  %v0_10008e18 = load i32, i32* %r16.global-to-local, align 4
  %v1_10008e18 = trunc i32 %v0_10008e18 to i16
  store i16 %v1_10008e18, i16* bitcast (i32* @global_var_1001d31c.424 to i16*), align 4
  store i32 268471840, i32* @lr, align 4
  %v0_10008e1c = call i32 @function_1000a984()
  store i32 %v0_10008e1c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008e34.426 to i32), i32* @lr, align 4
  %v3_10008e30 = call i32 @function_100092f4(i32 ptrtoint (i32* @global_var_1000cb6c.425 to i32), i32 24, i32 24)
  store i32 15, i32* @r3, align 4
  %v0_10008e38 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008e38, i32* @global_var_1001d320.427, align 4
  %v0_10008e3c = load i32, i32* %r14.global-to-local, align 4
  %v1_10008e3c = trunc i32 %v0_10008e3c to i16
  store i16 %v1_10008e3c, i16* bitcast (i32* @global_var_1001d324.428 to i16*), align 4
  store i32 268471876, i32* @lr, align 4
  %v0_10008e40 = call i32 @function_1000a984()
  store i32 %v0_10008e40, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008e58.430 to i32), i32* @lr, align 4
  %v4_10008e54 = call i32 @function_100092f4(i32 ptrtoint ([15 x i8]* @global_var_1000cb84.429 to i32), i32 15, i32 15)
  store i32 13, i32* @r3, align 4
  %v0_10008e5c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008e5c, i32* @global_var_1001d328.431, align 4
  %v0_10008e60 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008e60 = trunc i32 %v0_10008e60 to i16
  store i16 %v1_10008e60, i16* bitcast (i32* @global_var_1001d32c.432 to i16*), align 4
  store i32 268471912, i32* @lr, align 4
  %v0_10008e64 = call i32 @function_1000a984()
  store i32 %v0_10008e64, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008e7c.434 to i32), i32* @lr, align 4
  %v3_10008e78 = call i32 @function_100092f4(i32 ptrtoint (i32* @global_var_1000cb94.433 to i32), i32 13, i32 13)
  store i32 10, i32* @r3, align 4
  store i16 13, i16* bitcast (i32* @global_var_1001d2d4.396 to i16*), align 4
  %v0_10008e88 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008e88, i32* @global_var_1001d2d0.394, align 4
  store i32 268471952, i32* @lr, align 4
  %v0_10008e8c = call i32 @function_1000a984()
  store i32 %v0_10008e8c, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ea8.436 to i32), i32* @lr, align 4
  %v4_10008ea4 = call i32 @function_100092f4(i32 ptrtoint ([11 x i8]* @global_var_1000cba4.435 to i32), i32 10, i32 10)
  store i32 10, i32* @r3, align 4
  %v0_10008eac = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008eac, i32* @global_var_1001d2d8.399, align 4
  store i16 10, i16* bitcast (i32* @global_var_1001d2dc.400 to i16*), align 4
  store i32 268471992, i32* @lr, align 4
  %v0_10008eb4 = call i32 @function_1000a984()
  store i32 %v0_10008eb4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ecc.438 to i32), i32* @lr, align 4
  %v4_10008ec8 = call i32 @function_100092f4(i32 ptrtoint ([11 x i8]* @global_var_1000cbb0.437 to i32), i32 10, i32 10)
  store i32 33, i32* @r3, align 4
  %v0_10008ed0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008ed0, i32* @global_var_1001d2e0.403, align 4
  %v0_10008ed4 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008ed4 = trunc i32 %v0_10008ed4 to i16
  store i16 %v1_10008ed4, i16* bitcast (i32* @global_var_1001d2e4.404 to i16*), align 4
  store i32 268472028, i32* @lr, align 4
  %v0_10008ed8 = call i32 @function_1000a984()
  store i32 %v0_10008ed8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008ef0.440 to i32), i32* @lr, align 4
  %v3_10008eec = call i32 @function_100092f4(i32 ptrtoint (i32* @global_var_1000cbbc.439 to i32), i32 33, i32 33)
  store i32 8, i32* @r3, align 4
  store i16 33, i16* bitcast (i32* @global_var_1001d2ec.408 to i16*), align 4
  %v0_10008efc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008efc, i32* @global_var_1001d2e8.407, align 4
  store i32 268472068, i32* @lr, align 4
  %v0_10008f00 = call i32 @function_1000a984()
  store i32 %v0_10008f00, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008f18.442 to i32), i32* @lr, align 4
  %v4_10008f14 = call i32 @function_100092f4(i32 ptrtoint ([9 x i8]* @global_var_1000cbe0.441 to i32), i32 8, i32 8)
  store i32 11, i32* @r3, align 4
  %v0_10008f1c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008f1c, i32* @global_var_1001d2f0.411, align 4
  %v0_10008f20 = load i32, i32* %r21.global-to-local, align 4
  %v1_10008f20 = trunc i32 %v0_10008f20 to i16
  store i16 %v1_10008f20, i16* bitcast (i32* @global_var_1001d2f4.412 to i16*), align 4
  store i32 268472104, i32* @lr, align 4
  %v0_10008f24 = call i32 @function_1000a984()
  store i32 %v0_10008f24, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008f3c.444 to i32), i32* @lr, align 4
  %v4_10008f38 = call i32 @function_100092f4(i32 ptrtoint ([12 x i8]* @global_var_1000cbec.443 to i32), i32 11, i32 11)
  store i32 14, i32* @r3, align 4
  store i16 11, i16* bitcast (i32* @global_var_1001d2fc.415 to i16*), align 4
  %v0_10008f48 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008f48, i32* @global_var_1001d2f8.414, align 4
  store i32 268472144, i32* @lr, align 4
  %v0_10008f4c = call i32 @function_1000a984()
  %v0_10008f50 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10008f4c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008f60.445 to i32), i32* @lr, align 4
  %v4_10008f5c = call i32 @function_100092f4(i32 %v0_10008f50, i32 14, i32 14)
  store i32 10, i32* @r3, align 4
  %v0_10008f64 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008f64, i32* @global_var_1001d2b8.381, align 4
  %v0_10008f68 = load i32, i32* %r19.global-to-local, align 4
  %v1_10008f68 = trunc i32 %v0_10008f68 to i16
  store i16 %v1_10008f68, i16* bitcast (i32* @global_var_1001d2bc.382 to i16*), align 4
  store i32 268472176, i32* @lr, align 4
  %v0_10008f6c = call i32 @function_1000a984()
  store i32 %v0_10008f6c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008f84.447 to i32), i32* @lr, align 4
  %v4_10008f80 = call i32 @function_100092f4(i32 ptrtoint ([11 x i8]* @global_var_1000cbf8.446 to i32), i32 10, i32 10)
  store i32 6, i32* @r3, align 4
  %v0_10008f88 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008f88, i32* @global_var_1001d2b8.381, align 4
  %v0_10008f8c = load i32, i32* %r27.global-to-local, align 4
  %v1_10008f8c = trunc i32 %v0_10008f8c to i16
  store i16 %v1_10008f8c, i16* bitcast (i32* @global_var_1001d2bc.382 to i16*), align 4
  store i32 268472212, i32* @lr, align 4
  %v0_10008f90 = call i32 @function_1000a984()
  store i32 %v0_10008f90, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008fa8.449 to i32), i32* @lr, align 4
  %v4_10008fa4 = call i32 @function_100092f4(i32 ptrtoint ([7 x i8]* @global_var_1000cc04.448 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  %v0_10008fac = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008fac, i32* @global_var_1001d310.419, align 4
  %v0_10008fb0 = load i32, i32* %r15.global-to-local, align 4
  %v1_10008fb0 = trunc i32 %v0_10008fb0 to i16
  store i16 %v1_10008fb0, i16* bitcast (i32* @global_var_1001d314.420 to i16*), align 4
  store i32 268472248, i32* @lr, align 4
  %v0_10008fb4 = call i32 @function_1000a984()
  store i32 %v0_10008fb4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008fcc.451 to i32), i32* @lr, align 4
  %v4_10008fc8 = call i32 @function_100092f4(i32 ptrtoint ([8 x i8]* @global_var_1000cc0c.450 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_10008fd0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008fd0, i32* @global_var_1001d318.423, align 4
  %v0_10008fd4 = load i32, i32* %r22.global-to-local, align 4
  %v1_10008fd4 = trunc i32 %v0_10008fd4 to i16
  store i16 %v1_10008fd4, i16* bitcast (i32* @global_var_1001d31c.424 to i16*), align 4
  store i32 268472284, i32* @lr, align 4
  %v0_10008fd8 = call i32 @function_1000a984()
  store i32 %v0_10008fd8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ff0.453 to i32), i32* @lr, align 4
  %v4_10008fec = call i32 @function_100092f4(i32 ptrtoint ([8 x i8]* @global_var_1000cc14.452 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_10008ff4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008ff4, i32* @global_var_1001d320.427, align 4
  %v0_10008ff8 = load i32, i32* %r22.global-to-local, align 4
  %v1_10008ff8 = trunc i32 %v0_10008ff8 to i16
  store i16 %v1_10008ff8, i16* bitcast (i32* @global_var_1001d324.428 to i16*), align 4
  store i32 268472320, i32* @lr, align 4
  %v0_10008ffc = call i32 @function_1000a984()
  store i32 %v0_10008ffc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009014.455 to i32), i32* @lr, align 4
  %v4_10009010 = call i32 @function_100092f4(i32 ptrtoint ([4 x i8]* @global_var_1000cc1c.454 to i32), i32 3, i32 3)
  store i32 19, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001d32c.432 to i16*), align 4
  %v0_10009020 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009020, i32* @global_var_1001d328.431, align 4
  store i32 268472360, i32* @lr, align 4
  %v0_10009024 = call i32 @function_1000a984()
  store i32 %v0_10009024, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000903c.457 to i32), i32* @lr, align 4
  %v3_10009038 = call i32 @function_100092f4(i32 ptrtoint (i32* @global_var_1000cc20.456 to i32), i32 19, i32 19)
  store i32 24, i32* @r3, align 4
  %v0_10009040 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009040, i32* @global_var_1001d330.458, align 4
  %v0_10009044 = load i32, i32* %r18.global-to-local, align 4
  %v1_10009044 = trunc i32 %v0_10009044 to i16
  store i16 %v1_10009044, i16* bitcast (i32* @global_var_1001d334.459 to i16*), align 4
  store i32 268472396, i32* @lr, align 4
  %v0_10009048 = call i32 @function_1000a984()
  store i32 %v0_10009048, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009060.461 to i32), i32* @lr, align 4
  %v3_1000905c = call i32 @function_100092f4(i32 ptrtoint (i32* @global_var_1000cc34.460 to i32), i32 24, i32 24)
  store i32 9, i32* @r3, align 4
  %v0_10009064 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009064, i32* @global_var_1001d338.462, align 4
  %v0_10009068 = load i32, i32* %r14.global-to-local, align 4
  %v1_10009068 = trunc i32 %v0_10009068 to i16
  store i16 %v1_10009068, i16* bitcast (i32* @global_var_1001d33c.463 to i16*), align 4
  store i32 268472432, i32* @lr, align 4
  %v0_1000906c = call i32 @function_1000a984()
  store i32 %v0_1000906c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009084.465 to i32), i32* @lr, align 4
  %v4_10009080 = call i32 @function_100092f4(i32 ptrtoint ([10 x i8]* @global_var_1000cc50.464 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  %v0_10009088 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009088, i32* @global_var_1001d340.466, align 4
  %v0_1000908c = load i32, i32* %r17.global-to-local, align 4
  %v1_1000908c = trunc i32 %v0_1000908c to i16
  store i16 %v1_1000908c, i16* bitcast (i32* @global_var_1001d344.467 to i16*), align 4
  store i32 268472468, i32* @lr, align 4
  %v0_10009090 = call i32 @function_1000a984()
  store i32 %v0_10009090, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100090a8.469 to i32), i32* @lr, align 4
  %v3_100090a4 = call i32 @function_100092f4(i32 ptrtoint (i32* @global_var_1000cc5c.468 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  %v0_100090ac = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100090ac, i32* @global_var_1001d348.470, align 4
  %v0_100090b0 = load i32, i32* @r31, align 4
  %v1_100090b0 = trunc i32 %v0_100090b0 to i16
  store i16 %v1_100090b0, i16* bitcast (i32* @global_var_1001d34c.471 to i16*), align 4
  store i32 268472504, i32* @lr, align 4
  %v0_100090b4 = call i32 @function_1000a984()
  store i32 %v0_100090b4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100090cc.473 to i32), i32* @lr, align 4
  %v3_100090c8 = call i32 @function_100092f4(i32 ptrtoint (i32* @global_var_1000cc70.472 to i32), i32 22, i32 22)
  store i32 8, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001d354.474 to i16*), align 4
  %v0_100090d8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100090d8, i32* @global_var_1001d350.475, align 4
  store i32 268472544, i32* @lr, align 4
  %v0_100090dc = call i32 @function_1000a984()
  %v0_100090e0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100090dc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100090f0.476 to i32), i32* @lr, align 4
  %v4_100090ec = call i32 @function_100092f4(i32 %v0_100090e0, i32 8, i32 8)
  store i32 5, i32* @r3, align 4
  %v0_100090f4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100090f4, i32* @global_var_1001d368.477, align 4
  %v0_100090f8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100090f8 = trunc i32 %v0_100090f8 to i16
  store i16 %v1_100090f8, i16* bitcast (i32* @global_var_1001d36c.478 to i16*), align 4
  store i32 268472576, i32* @lr, align 4
  %v0_100090fc = call i32 @function_1000a984()
  store i32 %v0_100090fc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009114.480 to i32), i32* @lr, align 4
  %v4_10009110 = call i32 @function_100092f4(i32 ptrtoint ([6 x i8]* @global_var_1000cc88.479 to i32), i32 5, i32 5)
  store i32 6, i32* @r3, align 4
  %v0_10009118 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009118, i32* @global_var_1001d370.481, align 4
  %v0_1000911c = load i32, i32* @r30, align 4
  %v1_1000911c = trunc i32 %v0_1000911c to i16
  store i16 %v1_1000911c, i16* bitcast (i32* @global_var_1001d374.482 to i16*), align 4
  store i32 268472612, i32* @lr, align 4
  %v0_10009120 = call i32 @function_1000a984()
  store i32 %v0_10009120, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009138.484 to i32), i32* @lr, align 4
  %v4_10009134 = call i32 @function_100092f4(i32 ptrtoint ([7 x i8]* @global_var_1000cc90.483 to i32), i32 6, i32 6)
  store i32 21, i32* @r3, align 4
  %v0_1000913c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000913c, i32* @global_var_1001d378.485, align 4
  %v0_10009140 = load i32, i32* %r15.global-to-local, align 4
  %v1_10009140 = trunc i32 %v0_10009140 to i16
  store i16 %v1_10009140, i16* bitcast (i32* @global_var_1001d37c.486 to i16*), align 4
  store i32 268472648, i32* @lr, align 4
  %v0_10009144 = call i32 @function_1000a984()
  store i32 %v0_10009144, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000915c.488 to i32), i32* @lr, align 4
  %v3_10009158 = call i32 @function_100092f4(i32 ptrtoint (i32* @global_var_1000cc98.487 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001d35c.489 to i16*), align 4
  %v0_10009168 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009168, i32* @global_var_1001d358.490, align 4
  store i32 268472688, i32* @lr, align 4
  %v0_1000916c = call i32 @function_1000a984()
  store i32 %v0_1000916c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009184.492 to i32), i32* @lr, align 4
  %v4_10009180 = call i32 @function_100092f4(i32 ptrtoint ([18 x i8]* @global_var_1000ccb0.491 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001d364.493 to i16*), align 4
  %v0_10009190 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009190, i32* @global_var_1001d360.494, align 4
  store i32 268472728, i32* @lr, align 4
  %v0_10009194 = call i32 @function_1000a984()
  store i32 %v0_10009194, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100091ac.496 to i32), i32* @lr, align 4
  %v3_100091a8 = call i32 @function_100092f4(i32 ptrtoint (i32* @global_var_1000ccc4.495 to i32), i32 12, i32 12)
  store i32 14, i32* @r3, align 4
  store i16 12, i16* bitcast (i32* @global_var_1001d36c.478 to i16*), align 4
  %v0_100091b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100091b8, i32* @global_var_1001d368.477, align 4
  store i32 268472768, i32* @lr, align 4
  %v0_100091bc = call i32 @function_1000a984()
  %v0_100091c0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100091bc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100091d0.497 to i32), i32* @lr, align 4
  %v4_100091cc = call i32 @function_100092f4(i32 %v0_100091c0, i32 14, i32 14)
  store i32 23, i32* @r3, align 4
  %v0_100091d4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100091d4, i32* @global_var_1001d2d8.399, align 4
  %v0_100091d8 = load i32, i32* %r19.global-to-local, align 4
  %v1_100091d8 = trunc i32 %v0_100091d8 to i16
  store i16 %v1_100091d8, i16* bitcast (i32* @global_var_1001d2dc.400 to i16*), align 4
  store i32 268472800, i32* @lr, align 4
  %v0_100091dc = call i32 @function_1000a984()
  %v0_100091e0 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100091dc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100091f0.498 to i32), i32* @lr, align 4
  %v3_100091ec = call i32 @function_100092f4(i32 %v0_100091e0, i32 23, i32 23)
  store i32 19, i32* @r3, align 4
  %v0_100091f4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100091f4, i32* @global_var_1001d3b8.499, align 4
  %v0_100091f8 = load i32, i32* %r16.global-to-local, align 4
  %v1_100091f8 = trunc i32 %v0_100091f8 to i16
  store i16 %v1_100091f8, i16* bitcast (i32* @global_var_1001d3bc.500 to i16*), align 4
  store i32 268472832, i32* @lr, align 4
  %v0_100091fc = call i32 @function_1000a984()
  %v0_10009200 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100091fc, i32* %r28.global-to-local, align 4
  store i32 268472848, i32* @lr, align 4
  %v4_1000920c = call i32 @function_100092f4(i32 %v0_10009200, i32 19, i32 19)
  %v0_10009214 = load i32, i32* %r18.global-to-local, align 4
  %v1_10009214 = trunc i32 %v0_10009214 to i16
  store i16 %v1_10009214, i16* bitcast (i32* @global_var_1001d2e4.404 to i16*), align 4
  %v0_10009218 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009218, i32* @global_var_1001d2e0.403, align 4
  store i32 %v0_10008a8c, i32* @r28, align 4
  store i32 %v0_10008b14, i32* @r30, align 4
  store i32 %v0_10008b1c, i32* @r31, align 4
  ret i32 %v4_1000920c

; uselistorder directives
  uselistorder i32 21, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10 }
  uselistorder i32 (i32, i32, i32)* @function_100092f4, { 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10009270(i8* %arg1) local_unnamed_addr {
dec_label_pc_10009270:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10009270 = load i8, i8* %arg1, align 1
  %v3_1000927c = icmp eq i8 %v3_10009270, 0
  %v0_10009280 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000927c, i32 %v0_10009280)
  br label %dec_label_pc_10009284

dec_label_pc_10009284:                            ; preds = %dec_label_pc_10009284, %dec_label_pc_10009270
  %v0_10009284 = phi i32 [ %v1_10009284, %dec_label_pc_10009284 ], [ 0, %dec_label_pc_10009270 ]
  %v1_10009284 = add i32 %v0_10009284, 1
  %v2_10009288 = add i32 %v1_10009284, %tmp
  %v3_10009288 = inttoptr i32 %v2_10009288 to i8*
  %v4_10009288 = load i8, i8* %v3_10009288, align 1
  %v3_1000928c = icmp eq i8 %v4_10009288, 0
  br i1 %v3_1000928c, label %dec_label_pc_10009294, label %dec_label_pc_10009284

dec_label_pc_10009294:                            ; preds = %dec_label_pc_10009284
  ret i32 %v1_10009284
}

define i32 @function_10009298(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009298:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10009298 = load i8, i8* %arg1, align 1
  %v3_1000929c = icmp eq i8 %v2_10009298, 0
  br i1 %v3_1000929c, label %dec_label_pc_100092e8, label %dec_label_pc_100092a4

dec_label_pc_100092a4:                            ; preds = %dec_label_pc_10009298
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100092a8

dec_label_pc_100092a8:                            ; preds = %dec_label_pc_100092a8, %dec_label_pc_100092a4
  %v0_100092a8 = phi i32 [ %v1_100092a8, %dec_label_pc_100092a8 ], [ 0, %dec_label_pc_100092a4 ]
  %v1_100092a8 = add i32 %v0_100092a8, 1
  store i32 %v1_100092a8, i32* %r9.global-to-local, align 4
  %v2_100092ac = add i32 %v1_100092a8, %tmp
  %v3_100092ac = inttoptr i32 %v2_100092ac to i8*
  %v4_100092ac = load i8, i8* %v3_100092ac, align 1
  %v3_100092b0 = icmp eq i8 %v4_100092ac, 0
  br i1 %v3_100092b0, label %dec_label_pc_100092b8, label %dec_label_pc_100092a8

dec_label_pc_100092b8:                            ; preds = %dec_label_pc_100092a8
  %v3_100092b8 = icmp eq i32 %v1_100092a8, -1
  br i1 %v3_100092b8, label %dec_label_pc_100092e0, label %dec_label_pc_100092c0

dec_label_pc_100092c0:                            ; preds = %dec_label_pc_100092b8
  %phitmp = add i32 %v0_100092a8, 2
  br label %dec_label_pc_100092c4

dec_label_pc_100092c4:                            ; preds = %dec_label_pc_100092e8, %dec_label_pc_100092c0
  %v0_100092c4 = phi i32 [ 1, %dec_label_pc_100092e8 ], [ %phitmp, %dec_label_pc_100092c0 ]
  store i32 %v0_100092c4, i32* %ctr.global-to-local, align 4
  %v2_100092d4.pre = load i32, i32* @r3, align 4
  %v2_100092cc8 = load i8, i8* %arg1, align 1
  %v1_100092d010 = add i32 %tmp, 1
  store i32 %v1_100092d010, i32* %r4.global-to-local, align 4
  %v3_100092d411 = inttoptr i32 %v2_100092d4.pre to i8*
  store i8 %v2_100092cc8, i8* %v3_100092d411, align 1
  %v0_100092d812 = load i32, i32* @r3, align 4
  %v1_100092d813 = add i32 %v0_100092d812, 1
  store i32 %v1_100092d813, i32* %r3.global-to-local, align 4
  %v0_100092dc14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100092dc15 = add i32 %v0_100092dc14, -1
  store i32 %v1_100092dc15, i32* %ctr.global-to-local, align 4
  %v2_100092dc16 = icmp eq i32 %v1_100092dc15, 0
  br i1 %v2_100092dc16, label %dec_label_pc_100092e0.loopexit, label %dec_label_pc_100092cc.dec_label_pc_100092cc_crit_edge

dec_label_pc_100092cc.dec_label_pc_100092cc_crit_edge: ; preds = %dec_label_pc_100092c4, %dec_label_pc_100092cc.dec_label_pc_100092cc_crit_edge
  %v1_100092d817 = phi i32 [ %v1_100092d8, %dec_label_pc_100092cc.dec_label_pc_100092cc_crit_edge ], [ %v1_100092d813, %dec_label_pc_100092c4 ]
  %v0_100092cc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_100092cc = inttoptr i32 %v0_100092cc.pre to i8*
  %v2_100092cc = load i8, i8* %v1_100092cc, align 1
  %v1_100092d0 = add i32 %v0_100092cc.pre, 1
  store i32 %v1_100092d0, i32* %r4.global-to-local, align 4
  %v3_100092d4 = inttoptr i32 %v1_100092d817 to i8*
  store i8 %v2_100092cc, i8* %v3_100092d4, align 1
  %v0_100092d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100092d8 = add i32 %v0_100092d8, 1
  store i32 %v1_100092d8, i32* %r3.global-to-local, align 4
  %v0_100092dc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100092dc = add i32 %v0_100092dc, -1
  store i32 %v1_100092dc, i32* %ctr.global-to-local, align 4
  %v2_100092dc = icmp eq i32 %v1_100092dc, 0
  br i1 %v2_100092dc, label %dec_label_pc_100092e0.loopexit, label %dec_label_pc_100092cc.dec_label_pc_100092cc_crit_edge

dec_label_pc_100092e0.loopexit:                   ; preds = %dec_label_pc_100092cc.dec_label_pc_100092cc_crit_edge, %dec_label_pc_100092c4
  %v0_100092e0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100092e0

dec_label_pc_100092e0:                            ; preds = %dec_label_pc_100092e0.loopexit, %dec_label_pc_100092b8
  %v0_100092e0 = phi i32 [ %v0_100092e0.pre, %dec_label_pc_100092e0.loopexit ], [ -1, %dec_label_pc_100092b8 ]
  store i32 %v0_100092e0, i32* %r3.global-to-local, align 4
  ret i32 %v0_100092e0

dec_label_pc_100092e8:                            ; preds = %dec_label_pc_10009298
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100092c4

; uselistorder directives
  uselistorder i32 %v0_100092e0, { 1, 0 }
  uselistorder i32 %v1_100092dc, { 1, 0 }
  uselistorder i32 %v1_100092d8, { 1, 0 }
  uselistorder i32 %v1_100092a8, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_100092cc.dec_label_pc_100092cc_crit_edge, { 1, 0 }
}

define i32 @function_100092f4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100092f4:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_100092f4 = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_100092fc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100092f4, i32 %v0_100092fc)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009304

dec_label_pc_10009304:                            ; preds = %dec_label_pc_10009304, %dec_label_pc_100092f4
  %v0_10009304 = phi i32 [ %v1_1000930c, %dec_label_pc_10009304 ], [ 0, %dec_label_pc_100092f4 ]
  %v2_10009304 = add i32 %v0_10009304, %arg2
  %v3_10009304 = inttoptr i32 %v2_10009304 to i8*
  %v4_10009304 = load i8, i8* %v3_10009304, align 1
  %v4_10009308 = add i32 %v0_10009304, %arg1
  %v5_10009308 = inttoptr i32 %v4_10009308 to i8*
  store i8 %v4_10009304, i8* %v5_10009308, align 1
  %v0_1000930c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000930c = add i32 %v0_1000930c, 1
  store i32 %v1_1000930c, i32* %r9.global-to-local, align 4
  %v0_10009310 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009310 = add i32 %v0_10009310, -1
  store i32 %v1_10009310, i32* %ctr.global-to-local, align 4
  %v2_10009310 = icmp eq i32 %v1_10009310, 0
  br i1 %v2_10009310, label %dec_label_pc_10009314, label %dec_label_pc_10009304

dec_label_pc_10009314:                            ; preds = %dec_label_pc_10009304
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10009310, { 1, 0 }
  uselistorder i32 %v1_1000930c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10009318() local_unnamed_addr {
dec_label_pc_10009318:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10009318 = load i32, i32* @r4, align 4
  store i32 %v0_10009318, i32* %r0.global-to-local, align 4
  %v3_10009318 = icmp eq i32 %v0_10009318, 0
  store i32 %v0_10009318, i32* %ctr.global-to-local, align 4
  %v0_10009320 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009318, i32 %v0_10009320)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000932c3 = load i32, i32* @r3, align 4
  %v5_1000932c4 = inttoptr i32 %v2_1000932c3 to i8*
  store i8 0, i8* %v5_1000932c4, align 1
  %v0_100093305 = load i32, i32* %r9.global-to-local, align 4
  %v1_100093306 = add i32 %v0_100093305, 1
  store i32 %v1_100093306, i32* %r9.global-to-local, align 4
  %v0_100093347 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100093348 = add i32 %v0_100093347, -1
  store i32 %v1_100093348, i32* %ctr.global-to-local, align 4
  %v2_100093349 = icmp eq i32 %v1_100093348, 0
  br i1 %v2_100093349, label %dec_label_pc_10009338, label %dec_label_pc_1000932c.dec_label_pc_1000932c_crit_edge

dec_label_pc_1000932c.dec_label_pc_1000932c_crit_edge: ; preds = %dec_label_pc_10009318, %dec_label_pc_1000932c.dec_label_pc_1000932c_crit_edge
  %v1_1000933010 = phi i32 [ %v1_10009330, %dec_label_pc_1000932c.dec_label_pc_1000932c_crit_edge ], [ %v1_100093306, %dec_label_pc_10009318 ]
  %v0_1000932c.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_1000932c.pre to i8
  %v2_1000932c = load i32, i32* @r3, align 4
  %v4_1000932c = add i32 %v2_1000932c, %v1_1000933010
  %v5_1000932c = inttoptr i32 %v4_1000932c to i8*
  store i8 %extract.t, i8* %v5_1000932c, align 1
  %v0_10009330 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009330 = add i32 %v0_10009330, 1
  store i32 %v1_10009330, i32* %r9.global-to-local, align 4
  %v0_10009334 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009334 = add i32 %v0_10009334, -1
  store i32 %v1_10009334, i32* %ctr.global-to-local, align 4
  %v2_10009334 = icmp eq i32 %v1_10009334, 0
  br i1 %v2_10009334, label %dec_label_pc_10009338, label %dec_label_pc_1000932c.dec_label_pc_1000932c_crit_edge

dec_label_pc_10009338:                            ; preds = %dec_label_pc_1000932c.dec_label_pc_1000932c_crit_edge, %dec_label_pc_10009318
  %v0_10009338 = load i32, i32* @r3, align 4
  ret i32 %v0_10009338

; uselistorder directives
  uselistorder i32 %v1_10009334, { 1, 0 }
  uselistorder i32 %v1_10009330, { 1, 0 }
  uselistorder i32 %v0_10009318, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000932c.dec_label_pc_1000932c_crit_edge, { 1, 0 }
}

define i32 @function_1000933c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000933c:
  %v3_1000933c = icmp sgt i32 %arg4, %arg2
  br i1 %v3_1000933c, label %dec_label_pc_10009348, label %dec_label_pc_10009350

dec_label_pc_10009348:                            ; preds = %dec_label_pc_1000936c, %dec_label_pc_1000933c, %dec_label_pc_10009350
  ret i32 -1

dec_label_pc_10009350:                            ; preds = %dec_label_pc_1000933c
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_10009348, label %dec_label_pc_10009358

dec_label_pc_10009358:                            ; preds = %dec_label_pc_10009350
  br label %dec_label_pc_10009374

dec_label_pc_10009368:                            ; preds = %dec_label_pc_10009374
  br label %dec_label_pc_1000936c

dec_label_pc_1000936c:                            ; preds = %dec_label_pc_1000938c, %dec_label_pc_10009368
  %v0_100093741 = phi i32 [ %v1_10009378, %dec_label_pc_1000938c ], [ 0, %dec_label_pc_10009368 ]
  %v1_1000936c = add i32 %v0_10009390, 1
  %v1_10009370 = add i32 %v0_10009370, -1
  %v2_10009370 = icmp eq i32 %v1_10009370, 0
  br i1 %v2_10009370, label %dec_label_pc_10009348, label %dec_label_pc_10009374

dec_label_pc_10009374:                            ; preds = %dec_label_pc_1000936c, %dec_label_pc_10009358
  %v0_10009370 = phi i32 [ %v1_10009370, %dec_label_pc_1000936c ], [ %arg2, %dec_label_pc_10009358 ]
  %v0_10009390 = phi i32 [ %v1_1000936c, %dec_label_pc_1000936c ], [ 0, %dec_label_pc_10009358 ]
  %v0_10009374 = phi i32 [ %v0_100093741, %dec_label_pc_1000936c ], [ 0, %dec_label_pc_10009358 ]
  %v2_10009374 = add i32 %v0_10009374, %arg3
  %v3_10009374 = inttoptr i32 %v2_10009374 to i8*
  %v4_10009374 = load i8, i8* %v3_10009374, align 1
  %v1_10009378 = add i32 %v0_10009374, 1
  %v2_1000937c = add i32 %v0_10009390, %arg1
  %v3_1000937c = inttoptr i32 %v2_1000937c to i8*
  %v4_1000937c = load i8, i8* %v3_1000937c, align 1
  %v4_10009384 = icmp eq i8 %v4_1000937c, %v4_10009374
  br i1 %v4_10009384, label %dec_label_pc_1000938c, label %dec_label_pc_10009368

dec_label_pc_1000938c:                            ; preds = %dec_label_pc_10009374
  %v4_10009380 = icmp eq i32 %v1_10009378, %arg4
  br i1 %v4_10009380, label %dec_label_pc_10009390, label %dec_label_pc_1000936c

dec_label_pc_10009390:                            ; preds = %dec_label_pc_1000938c
  %v1_10009390 = add i32 %v0_10009390, 1
  ret i32 %v1_10009390

; uselistorder directives
  uselistorder i32 %v0_10009374, { 1, 0 }
  uselistorder label %dec_label_pc_10009348, { 0, 2, 1 }
}

define i32 @function_10009398(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_10009398.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10009398

dec_label_pc_10009398:                            ; preds = %dec_label_pc_100093b4, %dec_label_pc_10009398, %bb
  %v0_10009398 = phi i32 [ %v0_10009398.pre, %bb ], [ %v1_1000939c, %dec_label_pc_10009398 ], [ %v1_1000939c, %dec_label_pc_100093b4 ]
  %v1_10009398 = inttoptr i32 %v0_10009398 to i8*
  %v2_10009398 = load i8, i8* %v1_10009398, align 1
  %v1_1000939c = add i32 %v0_10009398, 1
  %v3_100093a8 = icmp eq i8 %v2_10009398, 32
  br i1 %v3_100093a8, label %dec_label_pc_10009398, label %dec_label_pc_100093b4

dec_label_pc_100093b4:                            ; preds = %dec_label_pc_10009398
  %v2_10009398.off = add i8 %v2_10009398, -9
  %tmp = icmp ult i8 %v2_10009398.off, 2
  br i1 %tmp, label %dec_label_pc_10009398, label %dec_label_pc_100093c0

dec_label_pc_100093c0:                            ; preds = %dec_label_pc_100093b4
  %v3_100093c0 = icmp eq i8 %v2_10009398, 45
  br i1 %v3_100093c0, label %dec_label_pc_1000946c, label %dec_label_pc_100093c8

dec_label_pc_100093c8:                            ; preds = %dec_label_pc_100093c0
  %v3_100093c8 = icmp eq i8 %v2_10009398, 43
  br i1 %v3_100093c8, label %dec_label_pc_100094c4, label %dec_label_pc_100093d0

dec_label_pc_100093d0:                            ; preds = %dec_label_pc_100093c8, %dec_label_pc_100094c4
  %v0_1000946026 = phi i32 [ %v1_1000939c, %dec_label_pc_100093c8 ], [ %v1_100094c8, %dec_label_pc_100094c4 ]
  %v0_100093f05.in = phi i8 [ %v2_10009398, %dec_label_pc_100093c8 ], [ %v2_100094c4, %dec_label_pc_100094c4 ]
  br label %dec_label_pc_100093dc

dec_label_pc_100093dc:                            ; preds = %dec_label_pc_1000946c, %dec_label_pc_100093d0
  %v0_1000946025 = phi i32 [ %v1_10009474, %dec_label_pc_1000946c ], [ %v0_1000946026, %dec_label_pc_100093d0 ]
  %v0_100093f04.in = phi i8 [ %v2_1000946c, %dec_label_pc_1000946c ], [ %v0_100093f05.in, %dec_label_pc_100093d0 ]
  %v0_100094b4 = phi i32 [ 1, %dec_label_pc_1000946c ], [ 0, %dec_label_pc_100093d0 ]
  %v1_100093ec = phi i32 [ -2147483648, %dec_label_pc_1000946c ], [ 2147483647, %dec_label_pc_100093d0 ]
  %v2_100093dc = udiv i32 %v1_100093ec, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_100093e8 = mul i32 %v2_100093dc, %arg1
  %v2_100093ec = sub i32 %v1_100093ec, %v2_100093e8
  br label %dec_label_pc_100093f0

dec_label_pc_100093f0:                            ; preds = %dec_label_pc_10009460, %dec_label_pc_100093dc
  %v0_10009460 = phi i32 [ %v1_10009464, %dec_label_pc_10009460 ], [ %v0_1000946025, %dec_label_pc_100093dc ]
  %v0_10009454 = phi i32 [ %v0_1000944c17, %dec_label_pc_10009460 ], [ 0, %dec_label_pc_100093dc ]
  %v0_10009444 = phi i32 [ %v0_100094a411, %dec_label_pc_10009460 ], [ 0, %dec_label_pc_100093dc ]
  %v0_1000943c = phi i32 [ %v0_100094989, %dec_label_pc_10009460 ], [ 0, %dec_label_pc_100093dc ]
  %v1_10009430.in = phi i8 [ %v2_10009460, %dec_label_pc_10009460 ], [ %v0_100093f04.in, %dec_label_pc_100093dc ]
  %v1_10009430 = zext i8 %v1_10009430.in to i32
  %v1_100093f4 = add nsw i32 %v1_10009430, -48
  %fold = add nuw nsw i32 %v1_10009430, 208
  %v1_100093fc = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_100093fc, 10
  br i1 %tmp27, label %dec_label_pc_10009434, label %dec_label_pc_10009408

dec_label_pc_10009408:                            ; preds = %dec_label_pc_100093f0
  %v1_10009408 = add nuw nsw i32 %v1_10009430, 191
  %v1_1000940c = urem i32 %v1_10009408, 256
  %tmp28 = icmp ult i32 %v1_1000940c, 26
  br i1 %tmp28, label %dec_label_pc_10009430, label %dec_label_pc_1000941c

dec_label_pc_1000941c:                            ; preds = %dec_label_pc_10009408
  %v1_1000941c = add nuw nsw i32 %v1_10009430, 159
  %v1_10009420 = urem i32 %v1_1000941c, 256
  %v2_10009424 = icmp ugt i32 %v1_10009420, 25
  br i1 %v2_10009424, label %dec_label_pc_10009498, label %dec_label_pc_1000942c

dec_label_pc_1000942c:                            ; preds = %dec_label_pc_1000941c
  br label %dec_label_pc_10009430

dec_label_pc_10009430:                            ; preds = %dec_label_pc_10009408, %dec_label_pc_1000942c
  %v0_10009430 = phi i32 [ 55, %dec_label_pc_10009408 ], [ 87, %dec_label_pc_1000942c ]
  %v2_10009430 = sub nsw i32 %v1_10009430, %v0_10009430
  br label %dec_label_pc_10009434

dec_label_pc_10009434:                            ; preds = %dec_label_pc_100093f0, %dec_label_pc_10009430
  %v1_1000945c = phi i32 [ %v1_100093f4, %dec_label_pc_100093f0 ], [ %v2_10009430, %dec_label_pc_10009430 ]
  %v2_10009434 = icmp slt i32 %v1_1000945c, %arg1
  br i1 %v2_10009434, label %dec_label_pc_1000943c, label %dec_label_pc_10009498

dec_label_pc_1000943c:                            ; preds = %dec_label_pc_10009434
  %v1_1000943c = icmp slt i32 %v0_1000943c, 0
  br i1 %v1_1000943c, label %dec_label_pc_10009480, label %dec_label_pc_10009444

dec_label_pc_10009444:                            ; preds = %dec_label_pc_1000943c
  %v3_10009444 = icmp ugt i32 %v0_10009444, %v2_100093dc
  br i1 %v3_10009444, label %dec_label_pc_10009480, label %dec_label_pc_1000944c

dec_label_pc_1000944c:                            ; preds = %dec_label_pc_10009444
  %v4_1000944c = icmp eq i32 %v0_10009454, %v2_100093dc
  br i1 %v4_1000944c, label %dec_label_pc_10009488, label %dec_label_pc_10009454

dec_label_pc_10009454:                            ; preds = %dec_label_pc_10009488, %dec_label_pc_1000944c
  %v2_10009454 = mul i32 %v0_10009454, %arg1
  %v2_1000945c = add i32 %v1_1000945c, %v2_10009454
  store i32 %v2_1000945c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009460

dec_label_pc_10009460:                            ; preds = %dec_label_pc_10009488, %dec_label_pc_10009480, %dec_label_pc_10009454
  %v0_1000944c17 = phi i32 [ %v2_100093dc, %dec_label_pc_10009488 ], [ %v0_10009454, %dec_label_pc_10009480 ], [ %v2_1000945c, %dec_label_pc_10009454 ]
  %v0_100094a411 = phi i32 [ %v2_100093dc, %dec_label_pc_10009488 ], [ %v0_10009444, %dec_label_pc_10009480 ], [ %v2_1000945c, %dec_label_pc_10009454 ]
  %v0_100094989 = phi i32 [ -1, %dec_label_pc_10009488 ], [ -1, %dec_label_pc_10009480 ], [ 1, %dec_label_pc_10009454 ]
  %v1_10009460 = inttoptr i32 %v0_10009460 to i8*
  %v2_10009460 = load i8, i8* %v1_10009460, align 1
  %v1_10009464 = add i32 %v0_10009460, 1
  br label %dec_label_pc_100093f0

dec_label_pc_1000946c:                            ; preds = %dec_label_pc_100093c0
  %v1_1000946c = inttoptr i32 %v1_1000939c to i8*
  %v2_1000946c = load i8, i8* %v1_1000946c, align 1
  %v1_10009474 = add i32 %v0_10009398, 2
  br label %dec_label_pc_100093dc

dec_label_pc_10009480:                            ; preds = %dec_label_pc_10009444, %dec_label_pc_1000943c
  br label %dec_label_pc_10009460

dec_label_pc_10009488:                            ; preds = %dec_label_pc_1000944c
  %v3_10009488 = icmp sgt i32 %v1_1000945c, %v2_100093ec
  br i1 %v3_10009488, label %dec_label_pc_10009460, label %dec_label_pc_10009454

dec_label_pc_10009498:                            ; preds = %dec_label_pc_10009434, %dec_label_pc_1000941c
  %v1_10009498 = icmp slt i32 %v0_1000943c, 0
  br i1 %v1_10009498, label %dec_label_pc_100094b4, label %dec_label_pc_100094a0

dec_label_pc_100094a0:                            ; preds = %dec_label_pc_10009498
  %v3_100094a0 = icmp eq i32 %v0_100094b4, 0
  %v0_100094a8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100094a0, i32 %v0_100094a8)
  %v0_100094ac = load i32, i32* %r5.global-to-local, align 4
  %v1_100094ac = sub i32 0, %v0_100094ac
  ret i32 %v1_100094ac

dec_label_pc_100094b4:                            ; preds = %dec_label_pc_10009498
  %v1_100094b4 = xor i32 %v0_100094b4, 1
  %v2_100094bc = sub nuw i32 -2147483648, %v1_100094b4
  ret i32 %v2_100094bc

dec_label_pc_100094c4:                            ; preds = %dec_label_pc_100093c8
  %v1_100094c4 = inttoptr i32 %v1_1000939c to i8*
  %v2_100094c4 = load i8, i8* %v1_100094c4, align 1
  %v1_100094c8 = add i32 %v0_10009398, 2
  br label %dec_label_pc_100093d0

; uselistorder directives
  uselistorder i32 %v2_1000945c, { 1, 0, 2 }
  uselistorder i32 %v1_1000945c, { 1, 0, 2 }
  uselistorder i32 %v1_10009430, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_10009454, { 2, 0, 1 }
  uselistorder i32 %v0_10009460, { 1, 0 }
  uselistorder i32 %v2_100093dc, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_1000939c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10009398, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 208, { 1, 0, 2, 3 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 32, { 11, 4, 5, 1, 2, 6, 0, 7, 8, 9, 3, 12, 13, 14, 15, 16, 17, 10 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10009434, { 1, 0 }
  uselistorder label %dec_label_pc_10009430, { 1, 0 }
  uselistorder label %dec_label_pc_100093d0, { 1, 0 }
}

define i32 @function_100094d0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100094d0:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_100094fc = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_10009504

dec_label_pc_10009504:                            ; preds = %dec_label_pc_10009530.dec_label_pc_10009504_crit_edge, %dec_label_pc_100094d0
  %v0_10009508 = phi i32 [ %v0_10009508.pre, %dec_label_pc_10009530.dec_label_pc_10009504_crit_edge ], [ %arg3, %dec_label_pc_100094d0 ]
  %v0_10009504 = phi i32 [ %v1_1000951c, %dec_label_pc_10009530.dec_label_pc_10009504_crit_edge ], [ %tmp, %dec_label_pc_100094d0 ]
  store i32 1, i32* @r5, align 4
  store i32 268473620, i32* @lr, align 4
  %v4_10009510 = call i32 @function_10009c68(i32 %v0_10009508, i32 %v0_10009504, i32 1)
  %v0_10009514 = load i32, i32* @r31, align 4
  %v3_10009518 = icmp eq i32 %v4_10009510, 1
  %v1_1000951c = add i32 %v0_10009514, 1
  store i32 %v1_1000951c, i32* @r31, align 4
  %v0_10009524 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10009518, label %dec_label_pc_10009524, label %dec_label_pc_1000953c

dec_label_pc_10009524:                            ; preds = %dec_label_pc_10009504
  %v1_10009524 = add i32 %v0_10009524, 1
  store i32 %v1_10009524, i32* %r30.global-to-local, align 4
  %v0_10009528 = load i32, i32* %r28.global-to-local, align 4
  %v3_10009528 = icmp sgt i32 %v0_10009528, %v1_10009524
  br i1 %v3_10009528, label %dec_label_pc_10009530, label %dec_label_pc_1000953c

dec_label_pc_10009530:                            ; preds = %dec_label_pc_10009524
  %v1_10009530 = inttoptr i32 %v0_10009514 to i8*
  %v2_10009530 = load i8, i8* %v1_10009530, align 1
  %v3_10009534 = icmp eq i8 %v2_10009530, 10
  br i1 %v3_10009534, label %dec_label_pc_1000953c, label %dec_label_pc_10009530.dec_label_pc_10009504_crit_edge

dec_label_pc_10009530.dec_label_pc_10009504_crit_edge: ; preds = %dec_label_pc_10009530
  %v0_10009508.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10009504

dec_label_pc_1000953c:                            ; preds = %dec_label_pc_10009504, %dec_label_pc_10009530, %dec_label_pc_10009524
  %v1_10009544 = phi i32 [ %v1_10009524, %dec_label_pc_10009530 ], [ %v1_10009524, %dec_label_pc_10009524 ], [ %v0_10009524, %dec_label_pc_10009504 ]
  %tmp12 = icmp slt i32 %v1_10009544, 0
  %v1_1000953c = zext i1 %tmp12 to i32
  %v2_1000953c = ashr i32 %v1_10009544, 31
  %v3_1000953c = and i32 %v2_1000953c, -2
  %v4_1000953c = or i32 %v3_1000953c, %v1_1000953c
  %v2_10009544 = xor i32 %v4_1000953c, %v1_10009544
  %v2_1000954c = sub i32 %v4_1000953c, %v2_10009544
  %tmp13 = icmp slt i32 %v2_1000954c, 0
  %v1_10009554 = zext i1 %tmp13 to i32
  %v2_10009554 = ashr i32 %v2_1000954c, 31
  %v3_10009554 = and i32 %v2_10009554, -2
  %v4_10009554 = or i32 %v3_10009554, %v1_10009554
  %v0_1000955c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000955c = and i32 %v4_10009554, %v0_1000955c
  store i32 %v0_100094fc, i32* @r31, align 4
  ret i32 %v2_1000955c

; uselistorder directives
  uselistorder i32 %v2_1000954c, { 1, 0 }
  uselistorder i32 %v4_1000953c, { 1, 0 }
  uselistorder i32 %v1_10009544, { 1, 2, 0 }
  uselistorder i32 %v1_1000951c, { 1, 0 }
  uselistorder i8 10, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009c68, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_1000953c, { 1, 2, 0 }
}

define i32 @function_10009574(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009574:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_1000958c = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_10009594 = call i32 @function_1000a14c()
  %v2_100095a0 = inttoptr i32 %v0_10009594 to i32*
  store i32 0, i32* %v2_100095a0, align 4
  store i32 268473776, i32* @lr, align 4
  %v3_100095ac = call i32 @function_1000a780(i32 2, i32 2, i32 0)
  store i32 %v3_100095ac, i32* @r3, align 4
  %v3_100095b4 = icmp eq i32 %v3_100095ac, -1
  store i32 %v3_100095ac, i32* @r31, align 4
  br i1 %v3_100095b4, label %dec_label_pc_10009604, label %dec_label_pc_100095d0

dec_label_pc_100095d0:                            ; preds = %dec_label_pc_10009574
  %v2_10009580 = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268473832, i32* @lr, align 4
  %v0_100095e4 = call i32 @function_1000a580()
  %v2_100095ec = ptrtoint i32* %stack_var_-40 to i32
  %v0_100095f0 = load i32, i32* @r31, align 4
  store i32 268473848, i32* @lr, align 4
  %v3_100095f4 = call i32 @function_1000a5b4(i32 %v0_100095f0, i32 %v2_10009580, i32 %v2_100095ec)
  store i32 268473856, i32* @lr, align 4
  %v0_100095fc = call i32 @function_10009a30()
  br label %dec_label_pc_10009604

dec_label_pc_10009604:                            ; preds = %dec_label_pc_10009574, %dec_label_pc_100095d0
  %v0_10009604 = phi i32 [ 0, %dec_label_pc_10009574 ], [ 134744072, %dec_label_pc_100095d0 ]
  store i32 %v0_1000958c, i32* @r31, align 4
  ret i32 %v0_10009604

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_1000a580, { 8, 7, 5, 6, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000a780, { 18, 16, 17, 15, 1, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder label %dec_label_pc_10009604, { 1, 0 }
}

define i32 @function_10009620(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009620:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_10009620 = load i8, i8* %tmp, align 1
  %v3_1000962c = icmp eq i8 %v3_10009620, 0
  br i1 %v3_1000962c, label %dec_label_pc_10009644, label %dec_label_pc_10009634

dec_label_pc_10009634:                            ; preds = %dec_label_pc_10009620, %dec_label_pc_10009634
  %v0_10009634 = phi i32 [ %v1_10009634, %dec_label_pc_10009634 ], [ 0, %dec_label_pc_10009620 ]
  %v1_10009634 = add i32 %v0_10009634, 1
  %v3_10009638 = add i32 %v1_10009634, %arg3
  %v4_10009638 = inttoptr i32 %v3_10009638 to i8*
  %v5_10009638 = load i8, i8* %v4_10009638, align 1
  %v3_1000963c = icmp eq i8 %v5_10009638, 0
  br i1 %v3_1000963c, label %dec_label_pc_10009644, label %dec_label_pc_10009634

dec_label_pc_10009644:                            ; preds = %dec_label_pc_10009634, %dec_label_pc_10009620
  %v0_1000967411 = phi i32 [ 0, %dec_label_pc_10009620 ], [ %v1_10009634, %dec_label_pc_10009634 ]
  %v1_10009644 = icmp slt i32 %arg2, 0
  %v1_10009648 = add i32 %arg2, 1
  br i1 %v1_10009644, label %dec_label_pc_100096c0, label %dec_label_pc_1000965c

dec_label_pc_1000965c:                            ; preds = %dec_label_pc_10009644, %dec_label_pc_100096c0, %dec_label_pc_100096b4
  %v2_100096688 = phi i32 [ %v1_1000966c, %dec_label_pc_100096b4 ], [ 0, %dec_label_pc_100096c0 ], [ 0, %dec_label_pc_10009644 ]
  %v0_100096606 = phi i32 [ %v1_10009664, %dec_label_pc_100096b4 ], [ %tmp16, %dec_label_pc_100096c0 ], [ %tmp16, %dec_label_pc_10009644 ]
  %v0_1000965c = phi i32 [ %v0_100096a8, %dec_label_pc_100096b4 ], [ 1, %dec_label_pc_100096c0 ], [ %v1_10009648, %dec_label_pc_10009644 ]
  %v1_1000965c = add i32 %v0_1000965c, -1
  %v2_1000965c = icmp eq i32 %v1_1000965c, 0
  br i1 %v2_1000965c, label %dec_label_pc_100096ac, label %dec_label_pc_10009660

dec_label_pc_10009660:                            ; preds = %dec_label_pc_1000965c, %dec_label_pc_100096a4
  %v2_10009668 = phi i32 [ 0, %dec_label_pc_100096a4 ], [ %v2_100096688, %dec_label_pc_1000965c ]
  %v0_10009660 = phi i32 [ %v1_10009664, %dec_label_pc_100096a4 ], [ %v0_100096606, %dec_label_pc_1000965c ]
  %v0_100096a8 = phi i32 [ %v1_100096a8, %dec_label_pc_100096a4 ], [ %v1_1000965c, %dec_label_pc_1000965c ]
  %v1_10009660 = inttoptr i32 %v0_10009660 to i8*
  %v2_10009660 = load i8, i8* %v1_10009660, align 1
  %v3_10009660 = zext i8 %v2_10009660 to i32
  %v1_10009664 = add i32 %v0_10009660, 1
  %v3_10009668 = add i32 %v2_10009668, %arg3
  %v4_10009668 = inttoptr i32 %v3_10009668 to i8*
  %v5_10009668 = load i8, i8* %v4_10009668, align 1
  %v6_10009668 = zext i8 %v5_10009668 to i32
  %v1_1000966c = add i32 %v2_10009668, 1
  %v1_10009670 = add nuw nsw i32 %v3_10009660, 191
  %v1_10009678 = urem i32 %v1_10009670, 256
  %v2_1000967c = icmp ugt i32 %v1_10009678, 25
  %v1_10009680 = add nuw nsw i32 %v6_10009668, 191
  %v1_10009684 = urem i32 %v1_10009680, 256
  %v2_10009688 = icmp ugt i32 %v1_10009684, 25
  br i1 %v2_1000967c, label %dec_label_pc_10009694, label %dec_label_pc_10009690

dec_label_pc_10009690:                            ; preds = %dec_label_pc_10009660
  %v1_10009690 = or i32 %v3_10009660, 96
  br i1 %v2_10009688, label %dec_label_pc_1000969c, label %dec_label_pc_10009698

dec_label_pc_10009694:                            ; preds = %dec_label_pc_10009660
  br i1 %v2_10009688, label %dec_label_pc_1000969c, label %dec_label_pc_10009698

dec_label_pc_10009698:                            ; preds = %dec_label_pc_10009690, %dec_label_pc_10009694
  %v0_1000969c13 = phi i32 [ %v1_10009690, %dec_label_pc_10009690 ], [ %v3_10009660, %dec_label_pc_10009694 ]
  %v1_10009698 = or i32 %v6_10009668, 96
  br label %dec_label_pc_1000969c

dec_label_pc_1000969c:                            ; preds = %dec_label_pc_10009690, %dec_label_pc_10009694, %dec_label_pc_10009698
  %v1_1000969c = phi i32 [ %v6_10009668, %dec_label_pc_10009690 ], [ %v6_10009668, %dec_label_pc_10009694 ], [ %v1_10009698, %dec_label_pc_10009698 ]
  %v0_1000969c = phi i32 [ %v1_10009690, %dec_label_pc_10009690 ], [ %v3_10009660, %dec_label_pc_10009694 ], [ %v0_1000969c13, %dec_label_pc_10009698 ]
  %v4_1000969c = icmp eq i32 %v0_1000969c, %v1_1000969c
  br i1 %v4_1000969c, label %dec_label_pc_100096b4, label %dec_label_pc_100096a4

dec_label_pc_100096a4:                            ; preds = %dec_label_pc_1000969c
  %v1_100096a8 = add i32 %v0_100096a8, -1
  %v2_100096a8 = icmp eq i32 %v1_100096a8, 0
  br i1 %v2_100096a8, label %dec_label_pc_100096ac, label %dec_label_pc_10009660

dec_label_pc_100096ac:                            ; preds = %dec_label_pc_1000965c, %dec_label_pc_100096a4
  ret i32 -1

dec_label_pc_100096b4:                            ; preds = %dec_label_pc_1000969c
  %v4_10009674.le = icmp eq i32 %v0_1000967411, %v1_1000966c
  br i1 %v4_10009674.le, label %dec_label_pc_100096b8, label %dec_label_pc_1000965c

dec_label_pc_100096b8:                            ; preds = %dec_label_pc_100096b4
  %v2_100096b8 = sub i32 %v1_10009664, %tmp16
  ret i32 %v2_100096b8

dec_label_pc_100096c0:                            ; preds = %dec_label_pc_10009644
  br label %dec_label_pc_1000965c

; uselistorder directives
  uselistorder i32 %v1_100096a8, { 1, 0 }
  uselistorder i32 %v1_10009690, { 1, 0 }
  uselistorder i1 %v2_10009688, { 1, 0 }
  uselistorder i32 %v1_1000966c, { 1, 0 }
  uselistorder i32 %v3_10009660, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100096a8, { 1, 0 }
  uselistorder i32 %v0_10009660, { 1, 0 }
  uselistorder i32 %v2_10009668, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_100096ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000969c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009698, { 1, 0 }
  uselistorder label %dec_label_pc_10009660, { 1, 0 }
  uselistorder label %dec_label_pc_1000965c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009634, { 1, 0 }
}

define i32 @function_100096cc(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100096cc:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_100096cc = load i8, i8* %arg1, align 1
  %v3_100096d4 = icmp eq i8 %v2_100096cc, 0
  br i1 %v3_100096d4, label %dec_label_pc_100096ec, label %dec_label_pc_100096dc

dec_label_pc_100096dc:                            ; preds = %dec_label_pc_100096cc, %dec_label_pc_100096dc
  %v0_100096dc = phi i32 [ %v1_100096dc, %dec_label_pc_100096dc ], [ 0, %dec_label_pc_100096cc ]
  %v1_100096dc = add i32 %v0_100096dc, 1
  %v2_100096e0 = add i32 %v1_100096dc, %tmp
  %v3_100096e0 = inttoptr i32 %v2_100096e0 to i8*
  %v4_100096e0 = load i8, i8* %v3_100096e0, align 1
  %v3_100096e4 = icmp eq i8 %v4_100096e0, 0
  br i1 %v3_100096e4, label %dec_label_pc_100096ec, label %dec_label_pc_100096dc

dec_label_pc_100096ec:                            ; preds = %dec_label_pc_100096dc, %dec_label_pc_100096cc
  %v0_1000970c = phi i32 [ 0, %dec_label_pc_100096cc ], [ %v1_100096dc, %dec_label_pc_100096dc ]
  %v1_100096ec = inttoptr i32 %arg2 to i8*
  %v2_100096ec = load i8, i8* %v1_100096ec, align 1
  %v3_100096f4 = icmp eq i8 %v2_100096ec, 0
  br i1 %v3_100096f4, label %dec_label_pc_1000970c, label %dec_label_pc_100096fc

dec_label_pc_100096fc:                            ; preds = %dec_label_pc_100096ec, %dec_label_pc_100096fc
  %v0_100096fc = phi i32 [ %v1_100096fc, %dec_label_pc_100096fc ], [ 0, %dec_label_pc_100096ec ]
  %v1_100096fc = add i32 %v0_100096fc, 1
  %v2_10009700 = add i32 %v1_100096fc, %arg2
  %v3_10009700 = inttoptr i32 %v2_10009700 to i8*
  %v4_10009700 = load i8, i8* %v3_10009700, align 1
  %v3_10009704 = icmp eq i8 %v4_10009700, 0
  br i1 %v3_10009704, label %dec_label_pc_1000970c, label %dec_label_pc_100096fc

dec_label_pc_1000970c:                            ; preds = %dec_label_pc_100096fc, %dec_label_pc_100096ec
  %v0_10009710 = phi i32 [ 0, %dec_label_pc_100096ec ], [ %v1_100096fc, %dec_label_pc_100096fc ]
  %v4_1000970c = icmp eq i32 %v0_1000970c, %v0_10009710
  br i1 %v4_1000970c, label %dec_label_pc_10009724, label %dec_label_pc_1000971c

dec_label_pc_1000971c:                            ; preds = %dec_label_pc_10009728, %dec_label_pc_1000970c
  ret i32 0

dec_label_pc_10009724:                            ; preds = %dec_label_pc_1000970c
  %v2_10009724 = icmp eq i32 %v0_1000970c, 0
  br i1 %v2_10009724, label %dec_label_pc_10009744, label %dec_label_pc_10009728

dec_label_pc_10009728:                            ; preds = %dec_label_pc_10009724, %dec_label_pc_10009740
  %v0_10009740 = phi i32 [ %v1_10009740, %dec_label_pc_10009740 ], [ %v0_1000970c, %dec_label_pc_10009724 ]
  %v0_10009730 = phi i32 [ %v1_10009734, %dec_label_pc_10009740 ], [ %arg2, %dec_label_pc_10009724 ]
  %v0_10009728 = phi i32 [ %v1_1000972c, %dec_label_pc_10009740 ], [ %tmp, %dec_label_pc_10009724 ]
  %v1_10009728 = inttoptr i32 %v0_10009728 to i8*
  %v2_10009728 = load i8, i8* %v1_10009728, align 1
  %v1_10009730 = inttoptr i32 %v0_10009730 to i8*
  %v2_10009730 = load i8, i8* %v1_10009730, align 1
  %v4_10009738 = icmp eq i8 %v2_10009728, %v2_10009730
  br i1 %v4_10009738, label %dec_label_pc_10009740, label %dec_label_pc_1000971c

dec_label_pc_10009740:                            ; preds = %dec_label_pc_10009728
  %v1_10009734 = add i32 %v0_10009730, 1
  %v1_1000972c = add i32 %v0_10009728, 1
  %v1_10009740 = add i32 %v0_10009740, -1
  %v2_10009740 = icmp eq i32 %v1_10009740, 0
  br i1 %v2_10009740, label %dec_label_pc_10009744, label %dec_label_pc_10009728

dec_label_pc_10009744:                            ; preds = %dec_label_pc_10009740, %dec_label_pc_10009724
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10009740, { 1, 0 }
  uselistorder i32 %v0_10009728, { 1, 0 }
  uselistorder i32 %v0_10009730, { 1, 0 }
  uselistorder label %dec_label_pc_10009728, { 1, 0 }
  uselistorder label %dec_label_pc_100096fc, { 1, 0 }
  uselistorder label %dec_label_pc_100096dc, { 1, 0 }
}

define i32 @function_1000974c(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000974c:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000974c = icmp eq i32 %arg3, 0
  %v4_10009750 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10009750, i32* %stack_var_-64, align 4
  %v5_10009750 = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_1000974c, label %dec_label_pc_1000976c, label %dec_label_pc_10009758

dec_label_pc_10009758:                            ; preds = %dec_label_pc_1000974c
  %v0_10009758 = load i32, i32* %r3.global-to-local, align 4
  %v3_10009758 = icmp eq i32 %v0_10009758, 0
  store i1 %v3_10009758, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_10009758, label %dec_label_pc_10009760, label %dec_label_pc_10009778

dec_label_pc_10009760:                            ; preds = %dec_label_pc_10009758
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_10009764 = add i32 %arg3, 1
  %v5_10009764 = inttoptr i32 %v4_10009764 to i8*
  store i8 0, i8* %v5_10009764, align 1
  %v0_10009768 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009768 = trunc i32 %v0_10009768 to i8
  store i8 %v1_10009768, i8* %tmp, align 1
  br label %dec_label_pc_1000976c

dec_label_pc_1000976c:                            ; preds = %dec_label_pc_100097f8, %dec_label_pc_1000974c, %dec_label_pc_10009760
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10009778:                            ; preds = %dec_label_pc_10009758
  %v2_10009758 = icmp sgt i32 %v0_10009758, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10009778.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_10009758, %v3_10009778.not
  br i1 %brmerge, label %dec_label_pc_1000978c, label %dec_label_pc_10009840

dec_label_pc_1000978c:                            ; preds = %dec_label_pc_10009778, %dec_label_pc_10009840
  %v0_100097902 = phi i32 [ %v0_10009758, %dec_label_pc_10009778 ], [ %v1_10009840, %dec_label_pc_10009840 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10009778 ], [ 1, %dec_label_pc_10009840 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009790

dec_label_pc_10009790:                            ; preds = %dec_label_pc_100097bc.dec_label_pc_10009790_crit_edge, %dec_label_pc_1000978c
  %v1_10009794 = phi i32 [ %v1_10009794.pre, %dec_label_pc_100097bc.dec_label_pc_10009790_crit_edge ], [ 32, %dec_label_pc_1000978c ]
  %v0_10009794 = phi i32 [ %v0_10009794.pre, %dec_label_pc_100097bc.dec_label_pc_10009790_crit_edge ], [ %v5_10009750, %dec_label_pc_1000978c ]
  %v1_100097a4 = phi i32 [ %v0_10009790.pre, %dec_label_pc_100097bc.dec_label_pc_10009790_crit_edge ], [ %v0_100097902, %dec_label_pc_1000978c ]
  %v2_10009790 = udiv i32 %v1_100097a4, %arg2
  %v2_10009794 = add i32 %v0_10009794, %v1_10009794
  store i32 %v2_10009794, i32* %r11.global-to-local, align 4
  %v1_10009798 = add i32 %v1_10009794, -1
  store i32 %v1_10009798, i32* %r10.global-to-local, align 4
  %v2_1000979c = mul i32 %v2_10009790, %arg2
  %v3_100097a0 = icmp ult i32 %v1_100097a4, %arg2
  store i1 %v3_100097a0, i1* %cr6_eq.global-to-local, align 1
  %v2_100097a4 = sub i32 %v1_100097a4, %v2_1000979c
  store i32 %v2_100097a4, i32* %r9.global-to-local, align 4
  store i32 %v2_10009790, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_100097a4, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_100097a4
  %v0_100097bc.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_100097bc = add i32 %v2_10009794, 8
  %v4_100097bc = inttoptr i32 %v3_100097bc to i8*
  store i8 %v0_100097bc.off0, i8* %v4_100097bc, align 1
  %v0_100097c0 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_100097c0, label %dec_label_pc_100097c4, label %dec_label_pc_100097bc.dec_label_pc_10009790_crit_edge

dec_label_pc_100097bc.dec_label_pc_10009790_crit_edge: ; preds = %dec_label_pc_10009790
  %v0_10009790.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10009794.pre = load i32, i32* @r1, align 4
  %v1_10009794.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009790

dec_label_pc_100097c4:                            ; preds = %dec_label_pc_10009790
  %v0_100097c4 = load i32, i32* %r8.global-to-local, align 4
  %v3_100097c4 = icmp eq i32 %v0_100097c4, 0
  br i1 %v3_100097c4, label %dec_label_pc_100097cc, label %dec_label_pc_1000982c

dec_label_pc_100097cc:                            ; preds = %dec_label_pc_100097c4
  %v0_100097cc = load i32, i32* %r10.global-to-local, align 4
  %v1_100097cc = add i32 %v0_100097cc, 1
  store i32 %v1_100097cc, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100097d0

dec_label_pc_100097d0:                            ; preds = %dec_label_pc_1000982c, %dec_label_pc_100097cc
  %v1_100097d8 = phi i32 [ %v1_100097d4.pre, %dec_label_pc_1000982c ], [ %v1_100097cc, %dec_label_pc_100097cc ]
  %v2_100097d0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100097d0, i32* %r9.global-to-local, align 4
  %v2_100097d4 = add i32 %v1_100097d8, %v2_100097d0
  %v3_100097d4 = inttoptr i32 %v2_100097d4 to i8*
  %v4_100097d4 = load i8, i8* %v3_100097d4, align 1
  %v5_100097d4 = zext i8 %v4_100097d4 to i32
  store i32 %v5_100097d4, i32* %r0.global-to-local, align 4
  store i32 %v2_100097d4, i32* %r9.global-to-local, align 4
  %v3_100097dc = icmp eq i8 %v4_100097d4, 0
  br i1 %v3_100097dc, label %dec_label_pc_10009854, label %dec_label_pc_100097e4

dec_label_pc_100097e4:                            ; preds = %dec_label_pc_100097d0
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100097e8

dec_label_pc_100097e8:                            ; preds = %dec_label_pc_100097e8, %dec_label_pc_100097e4
  %v0_100097e8 = phi i32 [ %v1_100097e8, %dec_label_pc_100097e8 ], [ 0, %dec_label_pc_100097e4 ]
  %v1_100097e8 = add i32 %v0_100097e8, 1
  store i32 %v1_100097e8, i32* %r10.global-to-local, align 4
  %v2_100097ec = add i32 %v1_100097e8, %v2_100097d4
  %v3_100097ec = inttoptr i32 %v2_100097ec to i8*
  %v4_100097ec = load i8, i8* %v3_100097ec, align 1
  %v5_100097ec = zext i8 %v4_100097ec to i32
  store i32 %v5_100097ec, i32* %r0.global-to-local, align 4
  %v3_100097f0 = icmp eq i8 %v4_100097ec, 0
  br i1 %v3_100097f0, label %dec_label_pc_100097f8, label %dec_label_pc_100097e8

dec_label_pc_100097f8:                            ; preds = %dec_label_pc_100097e8
  %v3_100097f8 = icmp eq i32 %v1_100097e8, -1
  br i1 %v3_100097f8, label %dec_label_pc_1000976c, label %dec_label_pc_10009800

dec_label_pc_10009800:                            ; preds = %dec_label_pc_100097f8
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_100097e8, 2
  br label %dec_label_pc_10009804

dec_label_pc_10009804:                            ; preds = %dec_label_pc_10009854, %dec_label_pc_10009800
  %v0_10009804 = phi i32 [ 1, %dec_label_pc_10009854 ], [ %phitmp, %dec_label_pc_10009800 ]
  store i32 %v0_10009804, i32* %r10.global-to-local, align 4
  store i32 %v0_10009804, i32* %ctr.global-to-local, align 4
  %v2_1000980c24 = load i8, i8* %v3_100097d4, align 1
  %v3_1000980c25 = zext i8 %v2_1000980c24 to i32
  store i32 %v3_1000980c25, i32* %r0.global-to-local, align 4
  %v1_1000981026 = add i32 %v2_100097d4, 1
  store i32 %v1_1000981026, i32* %r9.global-to-local, align 4
  store i8 %v2_1000980c24, i8* %tmp, align 1
  %v0_1000981828 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000981829 = add i32 %v0_1000981828, 1
  store i32 %v1_1000981829, i32* %r11.global-to-local, align 4
  %v0_1000981c30 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000981c31 = add i32 %v0_1000981c30, -1
  store i32 %v1_1000981c31, i32* %ctr.global-to-local, align 4
  %v2_1000981c32 = icmp eq i32 %v1_1000981c31, 0
  br i1 %v2_1000981c32, label %dec_label_pc_10009820, label %dec_label_pc_1000980c.dec_label_pc_1000980c_crit_edge

dec_label_pc_1000980c.dec_label_pc_1000980c_crit_edge: ; preds = %dec_label_pc_10009804, %dec_label_pc_1000980c.dec_label_pc_1000980c_crit_edge
  %v1_1000981833 = phi i32 [ %v1_10009818, %dec_label_pc_1000980c.dec_label_pc_1000980c_crit_edge ], [ %v1_1000981829, %dec_label_pc_10009804 ]
  %v0_1000980c.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000980c = inttoptr i32 %v0_1000980c.pre to i8*
  %v2_1000980c = load i8, i8* %v1_1000980c, align 1
  %v3_1000980c = zext i8 %v2_1000980c to i32
  store i32 %v3_1000980c, i32* %r0.global-to-local, align 4
  %v1_10009810 = add i32 %v0_1000980c.pre, 1
  store i32 %v1_10009810, i32* %r9.global-to-local, align 4
  %v3_10009814 = inttoptr i32 %v1_1000981833 to i8*
  store i8 %v2_1000980c, i8* %v3_10009814, align 1
  %v0_10009818 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009818 = add i32 %v0_10009818, 1
  store i32 %v1_10009818, i32* %r11.global-to-local, align 4
  %v0_1000981c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000981c = add i32 %v0_1000981c, -1
  store i32 %v1_1000981c, i32* %ctr.global-to-local, align 4
  %v2_1000981c = icmp eq i32 %v1_1000981c, 0
  br i1 %v2_1000981c, label %dec_label_pc_10009820, label %dec_label_pc_1000980c.dec_label_pc_1000980c_crit_edge

dec_label_pc_10009820:                            ; preds = %dec_label_pc_1000980c.dec_label_pc_1000980c_crit_edge, %dec_label_pc_10009804
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_1000982c:                            ; preds = %dec_label_pc_100097c4
  %v0_1000982c.pre = load i32, i32* @r1, align 4
  %v1_1000982c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000982c = add i32 %v1_1000982c.pre, %v0_1000982c.pre
  store i32 %v2_1000982c, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_10009834 = add i32 %v2_1000982c, 8
  %v4_10009834 = inttoptr i32 %v3_10009834 to i8*
  store i8 45, i8* %v4_10009834, align 1
  %v1_100097d4.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100097d0

dec_label_pc_10009840:                            ; preds = %dec_label_pc_10009778
  %v1_10009840 = sub i32 0, %v0_10009758
  store i32 %v1_10009840, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000978c

dec_label_pc_10009854:                            ; preds = %dec_label_pc_100097d0
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009804

; uselistorder directives
  uselistorder i32 %v1_10009840, { 1, 0 }
  uselistorder i32 %v1_1000981c, { 1, 0 }
  uselistorder i32 %v1_10009818, { 1, 0 }
  uselistorder i32 %v0_10009804, { 1, 0 }
  uselistorder i32 %v1_100097e8, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10009790, { 1, 0 }
  uselistorder i32 %v1_100097a4, { 1, 0, 2 }
  uselistorder i32 %v1_10009794, { 1, 0 }
  uselistorder i32 %v0_10009758, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 3, 2, 0, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 1, 3, 2, 0, 4, 5, 6 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 6, 9, 2, 3, 5, 4, 8, 7, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1000980c.dec_label_pc_1000980c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000978c, { 1, 0 }
  uselistorder label %dec_label_pc_1000976c, { 0, 2, 1 }
}

define i32 @function_10009860(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009860:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10009870 = icmp eq i32 %arg2, -2143521772
  %v2_10009884 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009884, i32* %stack_var_-32, align 4
  br i1 %v4_10009870, label %dec_label_pc_100098e4, label %dec_label_pc_100098a4

dec_label_pc_100098a4:                            ; preds = %dec_label_pc_10009860
  %v3_100098a4 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_100098a4, label %dec_label_pc_100098bc, label %dec_label_pc_100098ac

dec_label_pc_100098ac:                            ; preds = %dec_label_pc_100098a4
  %v3_100098b0 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_100098b0, label %dec_label_pc_100098d8, label %dec_label_pc_10009904

dec_label_pc_100098bc:                            ; preds = %dec_label_pc_100098a4
  %v1_100098bc = xor i32 %arg2, -2143551488
  %v3_100098c0 = icmp eq i32 %v1_100098bc, 29717
  br i1 %v3_100098c0, label %dec_label_pc_100098f4, label %dec_label_pc_100098c8

dec_label_pc_100098c8:                            ; preds = %dec_label_pc_100098bc
  %v3_100098cc = icmp eq i32 %v1_100098bc, 29718
  br i1 %v3_100098cc, label %dec_label_pc_100098fc, label %dec_label_pc_10009904

dec_label_pc_100098d8:                            ; preds = %dec_label_pc_100098ac
  store i32 ptrtoint (i32* @global_var_100098e0.502 to i32), i32* @lr, align 4
  %v2_100098dc = inttoptr i32 %arg3 to i32*
  %v3_100098dc = call i32 @function_1000a2e4(i32* %v2_100098dc, i32 %arg1)
  br label %dec_label_pc_100098ec

dec_label_pc_100098e4:                            ; preds = %dec_label_pc_10009860
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_100098e8

dec_label_pc_100098e8:                            ; preds = %dec_label_pc_100098fc, %dec_label_pc_100098f4, %dec_label_pc_100098e4
  store i32 268474604, i32* @lr, align 4
  %v0_100098e8 = call i32 @function_1000a380()
  br label %dec_label_pc_100098ec

dec_label_pc_100098ec:                            ; preds = %dec_label_pc_100098d8, %dec_label_pc_100098e8
  %storemerge = phi i32 [ %v0_100098e8, %dec_label_pc_100098e8 ], [ %v3_100098dc, %dec_label_pc_100098d8 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009930

dec_label_pc_100098f4:                            ; preds = %dec_label_pc_100098bc
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_100098e8

dec_label_pc_100098fc:                            ; preds = %dec_label_pc_100098c8
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_100098e8

dec_label_pc_10009904:                            ; preds = %dec_label_pc_100098c8, %dec_label_pc_100098ac
  %v0_10009914 = call i32 @__asm_mfcr()
  %v1_10009918 = and i32 %v0_10009914, 268435456
  %v3_10009918 = icmp eq i32 %v1_10009918, 0
  store i32 %v0_10009914, i32* %r31.global-to-local, align 4
  br i1 %v3_10009918, label %dec_label_pc_10009930, label %dec_label_pc_10009924

dec_label_pc_10009924:                            ; preds = %dec_label_pc_10009904
  %v0_10009924 = call i32 @function_1000a14c()
  %v0_10009928 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009928 = inttoptr i32 %v0_10009924 to i32*
  store i32 %v0_10009928, i32* %v2_10009928, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009930

dec_label_pc_10009930:                            ; preds = %dec_label_pc_10009904, %dec_label_pc_100098ec, %dec_label_pc_10009924
  %v0_10009934 = phi i32 [ %v0_10009914, %dec_label_pc_10009904 ], [ %storemerge, %dec_label_pc_100098ec ], [ -1, %dec_label_pc_10009924 ]
  ret i32 %v0_10009934

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10009930, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100098ec, { 1, 0 }
}

define i32 @function_10009948(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009948:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_1000995c = load i32, i32* @r4, align 4
  %v1_1000995c = add i32 %v0_1000995c, -12
  %v2_10009960 = icmp ugt i32 %v1_1000995c, 2
  %v2_10009968 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009968, i32* %stack_var_-32, align 4
  br i1 %v2_10009960, label %dec_label_pc_10009994, label %dec_label_pc_10009984

dec_label_pc_10009984:                            ; preds = %dec_label_pc_10009948
  store i32 268474764, i32* @lr, align 4
  %v2_10009988 = call i32 @function_100099cc(i32 3)
  store i32 %v2_10009988, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100099b4

dec_label_pc_10009994:                            ; preds = %dec_label_pc_10009948
  %v0_10009998 = call i32 @__asm_mfcr()
  %v1_1000999c = and i32 %v0_10009998, 268435456
  %v3_1000999c = icmp eq i32 %v1_1000999c, 0
  store i32 %v0_10009998, i32* %r31.global-to-local, align 4
  br i1 %v3_1000999c, label %dec_label_pc_100099b4, label %dec_label_pc_100099a8

dec_label_pc_100099a8:                            ; preds = %dec_label_pc_10009994
  %v0_100099a8 = call i32 @function_1000a14c()
  %v0_100099ac = load i32, i32* %r31.global-to-local, align 4
  %v2_100099ac = inttoptr i32 %v0_100099a8 to i32*
  store i32 %v0_100099ac, i32* %v2_100099ac, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100099b4

dec_label_pc_100099b4:                            ; preds = %dec_label_pc_10009994, %dec_label_pc_10009984, %dec_label_pc_100099a8
  %v0_100099b8 = phi i32 [ %v0_10009998, %dec_label_pc_10009994 ], [ %v2_10009988, %dec_label_pc_10009984 ], [ -1, %dec_label_pc_100099a8 ]
  ret i32 %v0_100099b8

; uselistorder directives
  uselistorder label %dec_label_pc_100099b4, { 2, 0, 1 }
}

define i32 @function_100099cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_100099cc:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_100099e4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100099e4, i32* %stack_var_-32, align 4
  %v0_10009a00 = call i32 @__asm_mfcr()
  %v1_10009a04 = and i32 %v0_10009a00, 268435456
  %v3_10009a04 = icmp eq i32 %v1_10009a04, 0
  store i32 %v0_10009a00, i32* %r31.global-to-local, align 4
  br i1 %v3_10009a04, label %dec_label_pc_10009a1c, label %dec_label_pc_10009a10

dec_label_pc_10009a10:                            ; preds = %dec_label_pc_100099cc
  %v0_10009a10 = call i32 @function_1000a14c()
  %v0_10009a14 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009a14 = inttoptr i32 %v0_10009a10 to i32*
  store i32 %v0_10009a14, i32* %v2_10009a14, align 4
  br label %dec_label_pc_10009a1c

dec_label_pc_10009a1c:                            ; preds = %dec_label_pc_100099cc, %dec_label_pc_10009a10
  %v0_10009a2c = phi i32 [ %v0_10009a00, %dec_label_pc_100099cc ], [ -1, %dec_label_pc_10009a10 ]
  ret i32 %v0_10009a2c

; uselistorder directives
  uselistorder label %dec_label_pc_10009a1c, { 1, 0 }
}

define i32 @function_10009a30() local_unnamed_addr {
dec_label_pc_10009a30:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009a48 = call i32 @__asm_mfcr()
  %v1_10009a4c = and i32 %v0_10009a48, 268435456
  %v3_10009a4c = icmp eq i32 %v1_10009a4c, 0
  store i32 %v0_10009a48, i32* %r31.global-to-local, align 4
  br i1 %v3_10009a4c, label %dec_label_pc_10009a64, label %dec_label_pc_10009a58

dec_label_pc_10009a58:                            ; preds = %dec_label_pc_10009a30
  %v0_10009a58 = call i32 @function_1000a14c()
  %v0_10009a5c = load i32, i32* %r31.global-to-local, align 4
  %v2_10009a5c = inttoptr i32 %v0_10009a58 to i32*
  store i32 %v0_10009a5c, i32* %v2_10009a5c, align 4
  br label %dec_label_pc_10009a64

dec_label_pc_10009a64:                            ; preds = %dec_label_pc_10009a30, %dec_label_pc_10009a58
  %v0_10009a74 = phi i32 [ %v0_10009a48, %dec_label_pc_10009a30 ], [ -1, %dec_label_pc_10009a58 ]
  ret i32 %v0_10009a74

; uselistorder directives
  uselistorder label %dec_label_pc_10009a64, { 1, 0 }
}

define i32 @function_10009a78() local_unnamed_addr {
dec_label_pc_10009a78:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009a90 = call i32 @__asm_mfcr()
  %v1_10009a94 = and i32 %v0_10009a90, 268435456
  %v3_10009a94 = icmp eq i32 %v1_10009a94, 0
  store i32 %v0_10009a90, i32* %r31.global-to-local, align 4
  br i1 %v3_10009a94, label %dec_label_pc_10009aac, label %dec_label_pc_10009aa0

dec_label_pc_10009aa0:                            ; preds = %dec_label_pc_10009a78
  %v0_10009aa0 = call i32 @function_1000a14c()
  %v0_10009aa4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009aa4 = inttoptr i32 %v0_10009aa0 to i32*
  store i32 %v0_10009aa4, i32* %v2_10009aa4, align 4
  br label %dec_label_pc_10009aac

dec_label_pc_10009aac:                            ; preds = %dec_label_pc_10009a78, %dec_label_pc_10009aa0
  %v0_10009abc = phi i32 [ %v0_10009a90, %dec_label_pc_10009a78 ], [ -1, %dec_label_pc_10009aa0 ]
  ret i32 %v0_10009abc

; uselistorder directives
  uselistorder label %dec_label_pc_10009aac, { 1, 0 }
}

define i32 @function_10009ac0() local_unnamed_addr {
dec_label_pc_10009ac0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009ad8 = call i32 @__asm_mfcr()
  %v1_10009adc = and i32 %v0_10009ad8, 268435456
  %v3_10009adc = icmp eq i32 %v1_10009adc, 0
  store i32 %v0_10009ad8, i32* %r31.global-to-local, align 4
  br i1 %v3_10009adc, label %dec_label_pc_10009af4, label %dec_label_pc_10009ae8

dec_label_pc_10009ae8:                            ; preds = %dec_label_pc_10009ac0
  %v0_10009ae8 = call i32 @function_1000a14c()
  %v0_10009aec = load i32, i32* %r31.global-to-local, align 4
  %v2_10009aec = inttoptr i32 %v0_10009ae8 to i32*
  store i32 %v0_10009aec, i32* %v2_10009aec, align 4
  br label %dec_label_pc_10009af4

dec_label_pc_10009af4:                            ; preds = %dec_label_pc_10009ac0, %dec_label_pc_10009ae8
  %v0_10009b04 = phi i32 [ %v0_10009ad8, %dec_label_pc_10009ac0 ], [ -1, %dec_label_pc_10009ae8 ]
  ret i32 %v0_10009b04

; uselistorder directives
  uselistorder label %dec_label_pc_10009af4, { 1, 0 }
}

define i32 @function_10009b08() local_unnamed_addr {
dec_label_pc_10009b08:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009b20 = call i32 @__asm_mfcr()
  %v1_10009b24 = and i32 %v0_10009b20, 268435456
  %v3_10009b24 = icmp eq i32 %v1_10009b24, 0
  store i32 %v0_10009b20, i32* %r31.global-to-local, align 4
  br i1 %v3_10009b24, label %dec_label_pc_10009b3c, label %dec_label_pc_10009b30

dec_label_pc_10009b30:                            ; preds = %dec_label_pc_10009b08
  %v0_10009b30 = call i32 @function_1000a14c()
  %v0_10009b34 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009b34 = inttoptr i32 %v0_10009b30 to i32*
  store i32 %v0_10009b34, i32* %v2_10009b34, align 4
  br label %dec_label_pc_10009b3c

dec_label_pc_10009b3c:                            ; preds = %dec_label_pc_10009b08, %dec_label_pc_10009b30
  %v0_10009b4c = phi i32 [ %v0_10009b20, %dec_label_pc_10009b08 ], [ -1, %dec_label_pc_10009b30 ]
  ret i32 %v0_10009b4c

; uselistorder directives
  uselistorder label %dec_label_pc_10009b3c, { 1, 0 }
}

define i32 @function_10009b50(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009b50:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009b68 = call i32 @__asm_mfcr()
  %v1_10009b6c = and i32 %v0_10009b68, 268435456
  %v3_10009b6c = icmp eq i32 %v1_10009b6c, 0
  store i32 %v0_10009b68, i32* %r31.global-to-local, align 4
  br i1 %v3_10009b6c, label %dec_label_pc_10009b84, label %dec_label_pc_10009b78

dec_label_pc_10009b78:                            ; preds = %dec_label_pc_10009b50
  %v0_10009b78 = call i32 @function_1000a14c()
  %v0_10009b7c = load i32, i32* %r31.global-to-local, align 4
  %v2_10009b7c = inttoptr i32 %v0_10009b78 to i32*
  store i32 %v0_10009b7c, i32* %v2_10009b7c, align 4
  br label %dec_label_pc_10009b84

dec_label_pc_10009b84:                            ; preds = %dec_label_pc_10009b50, %dec_label_pc_10009b78
  %v0_10009b94 = phi i32 [ %v0_10009b68, %dec_label_pc_10009b50 ], [ -1, %dec_label_pc_10009b78 ]
  ret i32 %v0_10009b94

; uselistorder directives
  uselistorder label %dec_label_pc_10009b84, { 1, 0 }
}

define i32 @function_10009b98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009b98:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10009bac = and i32 %arg2, 64
  %v3_10009bac = icmp eq i32 %v1_10009bac, 0
  br i1 %v3_10009bac, label %dec_label_pc_10009bd8, label %dec_label_pc_10009bbc

dec_label_pc_10009bbc:                            ; preds = %dec_label_pc_10009b98
  %v2_10009bc4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009bc4, i32* %stack_var_-32, align 4
  %v0_10009bd4 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10009bd8

dec_label_pc_10009bd8:                            ; preds = %dec_label_pc_10009b98, %dec_label_pc_10009bbc
  %v0_10009bd8 = phi i32 [ 0, %dec_label_pc_10009b98 ], [ %v0_10009bd4, %dec_label_pc_10009bbc ]
  store i32 %v0_10009bd8, i32* @r5, align 4
  %v0_10009be0 = call i32 @__asm_mfcr()
  %v1_10009be4 = and i32 %v0_10009be0, 268435456
  %v3_10009be4 = icmp eq i32 %v1_10009be4, 0
  store i32 %v0_10009be0, i32* %r31.global-to-local, align 4
  br i1 %v3_10009be4, label %dec_label_pc_10009bfc, label %dec_label_pc_10009bf0

dec_label_pc_10009bf0:                            ; preds = %dec_label_pc_10009bd8
  %v0_10009bf0 = call i32 @function_1000a14c()
  %v0_10009bf4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009bf4 = inttoptr i32 %v0_10009bf0 to i32*
  store i32 %v0_10009bf4, i32* %v2_10009bf4, align 4
  br label %dec_label_pc_10009bfc

dec_label_pc_10009bfc:                            ; preds = %dec_label_pc_10009bd8, %dec_label_pc_10009bf0
  %v0_10009c0c = phi i32 [ %v0_10009be0, %dec_label_pc_10009bd8 ], [ -1, %dec_label_pc_10009bf0 ]
  ret i32 %v0_10009c0c

; uselistorder directives
  uselistorder label %dec_label_pc_10009bfc, { 1, 0 }
  uselistorder label %dec_label_pc_10009bd8, { 1, 0 }
}

define i32 @function_10009c10(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009c10:
  store i32 %arg1, i32* @r5, align 4
  %v2_10009c1c = call i32 @function_10009b98(i32 577, i32 577)
  ret i32 %v2_10009c1c
}

define i32 @function_10009c20(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009c20:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009c38 = call i32 @__asm_mfcr()
  %v1_10009c3c = and i32 %v0_10009c38, 268435456
  %v3_10009c3c = icmp eq i32 %v1_10009c3c, 0
  store i32 %v0_10009c38, i32* %r31.global-to-local, align 4
  br i1 %v3_10009c3c, label %dec_label_pc_10009c54, label %dec_label_pc_10009c48

dec_label_pc_10009c48:                            ; preds = %dec_label_pc_10009c20
  %v0_10009c48 = call i32 @function_1000a14c()
  %v0_10009c4c = load i32, i32* %r31.global-to-local, align 4
  %v2_10009c4c = inttoptr i32 %v0_10009c48 to i32*
  store i32 %v0_10009c4c, i32* %v2_10009c4c, align 4
  br label %dec_label_pc_10009c54

dec_label_pc_10009c54:                            ; preds = %dec_label_pc_10009c20, %dec_label_pc_10009c48
  %v0_10009c64 = phi i32 [ %v0_10009c38, %dec_label_pc_10009c20 ], [ -1, %dec_label_pc_10009c48 ]
  ret i32 %v0_10009c64

; uselistorder directives
  uselistorder label %dec_label_pc_10009c54, { 1, 0 }
}

define i32 @function_10009c68(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009c68:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009c80 = call i32 @__asm_mfcr()
  %v1_10009c84 = and i32 %v0_10009c80, 268435456
  %v3_10009c84 = icmp eq i32 %v1_10009c84, 0
  store i32 %v0_10009c80, i32* %r31.global-to-local, align 4
  br i1 %v3_10009c84, label %dec_label_pc_10009c9c, label %dec_label_pc_10009c90

dec_label_pc_10009c90:                            ; preds = %dec_label_pc_10009c68
  %v0_10009c90 = call i32 @function_1000a14c()
  %v0_10009c94 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009c94 = inttoptr i32 %v0_10009c90 to i32*
  store i32 %v0_10009c94, i32* %v2_10009c94, align 4
  br label %dec_label_pc_10009c9c

dec_label_pc_10009c9c:                            ; preds = %dec_label_pc_10009c68, %dec_label_pc_10009c90
  %v0_10009cac = phi i32 [ %v0_10009c80, %dec_label_pc_10009c68 ], [ -1, %dec_label_pc_10009c90 ]
  ret i32 %v0_10009cac

; uselistorder directives
  uselistorder label %dec_label_pc_10009c9c, { 1, 0 }
}

define i32 @function_10009cb0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009cb0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009cc8 = call i32 @__asm_mfcr()
  %v1_10009ccc = and i32 %v0_10009cc8, 268435456
  %v3_10009ccc = icmp eq i32 %v1_10009ccc, 0
  store i32 %v0_10009cc8, i32* %r31.global-to-local, align 4
  br i1 %v3_10009ccc, label %dec_label_pc_10009ce4, label %dec_label_pc_10009cd8

dec_label_pc_10009cd8:                            ; preds = %dec_label_pc_10009cb0
  %v0_10009cd8 = call i32 @function_1000a14c()
  %v0_10009cdc = load i32, i32* %r31.global-to-local, align 4
  %v2_10009cdc = inttoptr i32 %v0_10009cd8 to i32*
  store i32 %v0_10009cdc, i32* %v2_10009cdc, align 4
  br label %dec_label_pc_10009ce4

dec_label_pc_10009ce4:                            ; preds = %dec_label_pc_10009cb0, %dec_label_pc_10009cd8
  %v0_10009cf4 = phi i32 [ %v0_10009cc8, %dec_label_pc_10009cb0 ], [ -1, %dec_label_pc_10009cd8 ]
  ret i32 %v0_10009cf4

; uselistorder directives
  uselistorder label %dec_label_pc_10009ce4, { 1, 0 }
}

define i32 @function_10009cf8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10009cf8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009d10 = call i32 @__asm_mfcr()
  %v1_10009d14 = and i32 %v0_10009d10, 268435456
  %v3_10009d14 = icmp eq i32 %v1_10009d14, 0
  store i32 %v0_10009d10, i32* %r31.global-to-local, align 4
  br i1 %v3_10009d14, label %dec_label_pc_10009d2c, label %dec_label_pc_10009d20

dec_label_pc_10009d20:                            ; preds = %dec_label_pc_10009cf8
  %v0_10009d20 = call i32 @function_1000a14c()
  %v0_10009d24 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009d24 = inttoptr i32 %v0_10009d20 to i32*
  store i32 %v0_10009d24, i32* %v2_10009d24, align 4
  br label %dec_label_pc_10009d2c

dec_label_pc_10009d2c:                            ; preds = %dec_label_pc_10009cf8, %dec_label_pc_10009d20
  %v0_10009d3c = phi i32 [ %v0_10009d10, %dec_label_pc_10009cf8 ], [ -1, %dec_label_pc_10009d20 ]
  ret i32 %v0_10009d3c

; uselistorder directives
  uselistorder label %dec_label_pc_10009d2c, { 1, 0 }
}

define i32 @function_10009d40(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009d40:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009d58 = call i32 @__asm_mfcr()
  %v1_10009d5c = and i32 %v0_10009d58, 268435456
  %v3_10009d5c = icmp eq i32 %v1_10009d5c, 0
  store i32 %v0_10009d58, i32* %r31.global-to-local, align 4
  br i1 %v3_10009d5c, label %dec_label_pc_10009d74, label %dec_label_pc_10009d68

dec_label_pc_10009d68:                            ; preds = %dec_label_pc_10009d40
  %v0_10009d68 = call i32 @function_1000a14c()
  %v0_10009d6c = load i32, i32* %r31.global-to-local, align 4
  %v2_10009d6c = inttoptr i32 %v0_10009d68 to i32*
  store i32 %v0_10009d6c, i32* %v2_10009d6c, align 4
  br label %dec_label_pc_10009d74

dec_label_pc_10009d74:                            ; preds = %dec_label_pc_10009d40, %dec_label_pc_10009d68
  %v0_10009d84 = phi i32 [ %v0_10009d58, %dec_label_pc_10009d40 ], [ -1, %dec_label_pc_10009d68 ]
  ret i32 %v0_10009d84

; uselistorder directives
  uselistorder label %dec_label_pc_10009d74, { 1, 0 }
}

define i32 @function_10009d88(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009d88:
  %r31.global-to-local = alloca i32, align 4
  %v3_10009d88 = icmp eq i32 %arg2, 0
  br i1 %v3_10009d88, label %dec_label_pc_10009dc8, label %dec_label_pc_10009db0

dec_label_pc_10009db0:                            ; preds = %dec_label_pc_10009d88
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10009dc8, label %dec_label_pc_10009db8

dec_label_pc_10009db8:                            ; preds = %dec_label_pc_10009db0
  %v0_10009db8 = call i32 @function_1000a14c()
  %v2_10009dc0 = inttoptr i32 %v0_10009db8 to i32*
  store i32 22, i32* %v2_10009dc0, align 4
  %v0_10009dec.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009de8

dec_label_pc_10009dc8:                            ; preds = %dec_label_pc_10009db0, %dec_label_pc_10009d88
  %v0_10009dcc = call i32 @__asm_mfcr()
  %v1_10009dd0 = and i32 %v0_10009dcc, 268435456
  %v3_10009dd0 = icmp eq i32 %v1_10009dd0, 0
  store i32 %v0_10009dcc, i32* %r31.global-to-local, align 4
  br i1 %v3_10009dd0, label %dec_label_pc_10009de8, label %dec_label_pc_10009ddc

dec_label_pc_10009ddc:                            ; preds = %dec_label_pc_10009dc8
  %v0_10009ddc = call i32 @function_1000a14c()
  %v0_10009de0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009de0 = inttoptr i32 %v0_10009ddc to i32*
  store i32 %v0_10009de0, i32* %v2_10009de0, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009de8

dec_label_pc_10009de8:                            ; preds = %dec_label_pc_10009dc8, %dec_label_pc_10009db8, %dec_label_pc_10009ddc
  %v0_10009dec = phi i32 [ %v0_10009dcc, %dec_label_pc_10009dc8 ], [ %v0_10009dec.pre, %dec_label_pc_10009db8 ], [ -1, %dec_label_pc_10009ddc ]
  ret i32 %v0_10009dec

; uselistorder directives
  uselistorder label %dec_label_pc_10009de8, { 2, 0, 1 }
}

define i32 @function_10009e00() local_unnamed_addr {
dec_label_pc_10009e00:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009e18 = call i32 @__asm_mfcr()
  %v1_10009e1c = and i32 %v0_10009e18, 268435456
  %v3_10009e1c = icmp eq i32 %v1_10009e1c, 0
  store i32 %v0_10009e18, i32* %r31.global-to-local, align 4
  br i1 %v3_10009e1c, label %dec_label_pc_10009e34, label %dec_label_pc_10009e28

dec_label_pc_10009e28:                            ; preds = %dec_label_pc_10009e00
  %v0_10009e28 = call i32 @function_1000a14c()
  %v0_10009e2c = load i32, i32* %r31.global-to-local, align 4
  %v2_10009e2c = inttoptr i32 %v0_10009e28 to i32*
  store i32 %v0_10009e2c, i32* %v2_10009e2c, align 4
  br label %dec_label_pc_10009e34

dec_label_pc_10009e34:                            ; preds = %dec_label_pc_10009e00, %dec_label_pc_10009e28
  %v0_10009e44 = phi i32 [ %v0_10009e18, %dec_label_pc_10009e00 ], [ -1, %dec_label_pc_10009e28 ]
  ret i32 %v0_10009e44

; uselistorder directives
  uselistorder label %dec_label_pc_10009e34, { 1, 0 }
}

define i32 @function_10009e48(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009e48:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009e60 = call i32 @__asm_mfcr()
  %v1_10009e64 = and i32 %v0_10009e60, 268435456
  %v3_10009e64 = icmp eq i32 %v1_10009e64, 0
  store i32 %v0_10009e60, i32* %r31.global-to-local, align 4
  br i1 %v3_10009e64, label %dec_label_pc_10009e7c, label %dec_label_pc_10009e70

dec_label_pc_10009e70:                            ; preds = %dec_label_pc_10009e48
  %v0_10009e70 = call i32 @function_1000a14c()
  %v0_10009e74 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009e74 = inttoptr i32 %v0_10009e70 to i32*
  store i32 %v0_10009e74, i32* %v2_10009e74, align 4
  br label %dec_label_pc_10009e7c

dec_label_pc_10009e7c:                            ; preds = %dec_label_pc_10009e48, %dec_label_pc_10009e70
  %v0_10009e8c = phi i32 [ %v0_10009e60, %dec_label_pc_10009e48 ], [ -1, %dec_label_pc_10009e70 ]
  ret i32 %v0_10009e8c

; uselistorder directives
  uselistorder label %dec_label_pc_10009e7c, { 1, 0 }
}

define i32 @function_10009e90(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009e90:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009ea8 = call i32 @__asm_mfcr()
  %v1_10009eac = and i32 %v0_10009ea8, 268435456
  %v3_10009eac = icmp eq i32 %v1_10009eac, 0
  store i32 %v0_10009ea8, i32* %r31.global-to-local, align 4
  br i1 %v3_10009eac, label %dec_label_pc_10009ec4, label %dec_label_pc_10009eb8

dec_label_pc_10009eb8:                            ; preds = %dec_label_pc_10009e90
  %v0_10009eb8 = call i32 @function_1000a14c()
  %v0_10009ebc = load i32, i32* %r31.global-to-local, align 4
  %v2_10009ebc = inttoptr i32 %v0_10009eb8 to i32*
  store i32 %v0_10009ebc, i32* %v2_10009ebc, align 4
  br label %dec_label_pc_10009ec4

dec_label_pc_10009ec4:                            ; preds = %dec_label_pc_10009e90, %dec_label_pc_10009eb8
  %v0_10009ed4 = phi i32 [ %v0_10009ea8, %dec_label_pc_10009e90 ], [ -1, %dec_label_pc_10009eb8 ]
  ret i32 %v0_10009ed4

; uselistorder directives
  uselistorder label %dec_label_pc_10009ec4, { 1, 0 }
}

define i32 @function_10009ed8(i32* %arg1) local_unnamed_addr {
dec_label_pc_10009ed8:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009ef4 = ptrtoint i32* %stack_var_-40 to i32
  %v2_10009efc = load i32, i32* %arg1, align 4
  store i32 %v2_10009ef4, i32* @r3, align 4
  %v3_10009f08 = icmp eq i32 %v2_10009efc, -1
  br i1 %v3_10009f08, label %dec_label_pc_10009f10, label %dec_label_pc_10009f24

dec_label_pc_10009f10:                            ; preds = %dec_label_pc_10009ed8
  %v0_10009f10 = call i32 @function_1000a14c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009f1c = inttoptr i32 %v0_10009f10 to i32*
  store i32 9, i32* %v2_10009f1c, align 4
  %v0_10009f68.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f64

dec_label_pc_10009f24:                            ; preds = %dec_label_pc_10009ed8
  %v3_10009f24 = call i32 @function_1000b4e8(i32 %v2_10009ef4, i32 ptrtoint ([3 x i8]* @global_var_1000b4e0.504 to i32))
  %v0_10009f2c = call i32 @function_1000b4e0()
  %v0_10009f34 = load i32, i32* @r31, align 4
  %v1_10009f34 = inttoptr i32 %v0_10009f34 to i32*
  %v2_10009f34 = load i32, i32* %v1_10009f34, align 4
  store i32 %v2_10009f34, i32* @r29, align 4
  store i32 -1, i32* %v1_10009f34, align 4
  store i32 %v2_10009ef4, i32* @r3, align 4
  %v2_10009f44 = call i32 @function_1000b4e8(i32 %v2_10009ef4, i32 1)
  %v0_10009f48 = load i32, i32* @r31, align 4
  %v1_10009f48 = add i32 %v0_10009f48, 12
  %v2_10009f48 = inttoptr i32 %v1_10009f48 to i32*
  %v3_10009f48 = load i32, i32* %v2_10009f48, align 4
  store i32 %v3_10009f48, i32* @r3, align 4
  store i32 268476240, i32* @lr, align 4
  %v0_10009f4c = call i32 @function_1000ab4c()
  %v0_10009f50 = load i32, i32* @r31, align 4
  store i32 %v0_10009f50, i32* @r3, align 4
  store i32 268476248, i32* @lr, align 4
  %v0_10009f54 = call i32 @function_1000ab4c()
  store i32 268476256, i32* @lr, align 4
  %v0_10009f5c = call i32 @function_10009a30()
  store i32 %v0_10009f5c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f64

dec_label_pc_10009f64:                            ; preds = %dec_label_pc_10009f10, %dec_label_pc_10009f24
  %v0_10009f68 = phi i32 [ %v0_10009f68.pre, %dec_label_pc_10009f10 ], [ %v0_10009f5c, %dec_label_pc_10009f24 ]
  ret i32 %v0_10009f68

; uselistorder directives
  uselistorder i32 %v2_10009ef4, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10009f64, { 1, 0 }
}

define i32 @function_10009f7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009f7c:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_10009f7c = load i32, i32* @lr, align 4
  store i32 %v0_10009f7c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268476316, i32* @lr, align 4
  %v2_10009f98 = call i32 @function_10009b98(i32 18432, i32 18432)
  %v1_10009f9c = icmp slt i32 %v2_10009f98, 0
  br i1 %v1_10009f9c, label %dec_label_pc_1000a074, label %dec_label_pc_10009fa4

dec_label_pc_10009fa4:                            ; preds = %dec_label_pc_10009f7c
  %v2_10009fa4 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10009fa4, i32* @r4, align 4
  store i32 268476332, i32* @lr, align 4
  %v1_10009fa8 = call i32 @function_1000b8bc(i32 %v2_10009fa4)
  %v1_10009fac = icmp slt i32 %v1_10009fa8, 0
  br i1 %v1_10009fac, label %dec_label_pc_10009fd0, label %dec_label_pc_10009fb4

dec_label_pc_10009fb4:                            ; preds = %dec_label_pc_10009fa4
  %v0_10009fb4 = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268476360, i32* @lr, align 4
  %v2_10009fc4 = call i32 @function_10009948(i32 %v0_10009fb4)
  %tmp5 = icmp sgt i32 %v2_10009fc4, -1
  br i1 %tmp5, label %dec_label_pc_10009ff0, label %dec_label_pc_10009fd0

dec_label_pc_10009fd0:                            ; preds = %dec_label_pc_10009fb4, %dec_label_pc_10009fa4
  %v0_10009fd0 = call i32 @function_1000a14c()
  store i32 0, i32* @r31, align 4
  store i32 %v0_10009fd0, i32* @r28, align 4
  %v1_10009fe0 = inttoptr i32 %v0_10009fd0 to i32*
  %v2_10009fe0 = load i32, i32* %v1_10009fe0, align 4
  store i32 268476392, i32* @lr, align 4
  %v0_10009fe4 = call i32 @function_10009a30()
  %v1_10009fe8 = load i32, i32* @r28, align 4
  %v2_10009fe8 = inttoptr i32 %v1_10009fe8 to i32*
  store i32 %v2_10009fe0, i32* %v2_10009fe8, align 4
  br label %dec_label_pc_1000a074

dec_label_pc_10009ff0:                            ; preds = %dec_label_pc_10009fb4
  store i32 48, i32* @r3, align 4
  store i32 268476408, i32* @lr, align 4
  %v0_10009ff4 = call i32 @function_1000a984()
  store i32 %v0_10009ff4, i32* %r31.global-to-local, align 4
  %v3_10009ff8 = icmp eq i32 %v0_10009ff4, 0
  br i1 %v3_10009ff8, label %dec_label_pc_1000a04c, label %dec_label_pc_1000a000

dec_label_pc_1000a000:                            ; preds = %dec_label_pc_10009ff0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000a004 = load i32, i32* @r29, align 4
  %v2_1000a004 = inttoptr i32 %v0_10009ff4 to i32*
  store i32 %v0_1000a004, i32* %v2_1000a004, align 4
  %v0_1000a008 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a008 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a008 = add i32 %v1_1000a008, 4
  %v3_1000a008 = inttoptr i32 %v2_1000a008 to i32*
  store i32 %v0_1000a008, i32* %v3_1000a008, align 4
  %v0_1000a00c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a00c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a00c = add i32 %v1_1000a00c, 16
  %v3_1000a00c = inttoptr i32 %v2_1000a00c to i32*
  store i32 %v0_1000a00c, i32* %v3_1000a00c, align 4
  %v0_1000a010 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a010 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a010 = add i32 %v1_1000a010, 8
  %v3_1000a010 = inttoptr i32 %v2_1000a010 to i32*
  store i32 %v0_1000a010, i32* %v3_1000a010, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_1000a018 = icmp ugt i32 %tmp, 511
  %v1_1000a01c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a01c = add i32 %v1_1000a01c, 20
  %v3_1000a01c = inttoptr i32 %v2_1000a01c to i32*
  store i32 %tmp, i32* %v3_1000a01c, align 4
  br i1 %v2_1000a018, label %dec_label_pc_1000a02c, label %dec_label_pc_1000a024

dec_label_pc_1000a024:                            ; preds = %dec_label_pc_1000a000
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_1000a028 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a028 = add i32 %v1_1000a028, 20
  %v3_1000a028 = inttoptr i32 %v2_1000a028 to i32*
  store i32 512, i32* %v3_1000a028, align 4
  br label %dec_label_pc_1000a02c

dec_label_pc_1000a02c:                            ; preds = %dec_label_pc_1000a000, %dec_label_pc_1000a024
  %v0_1000a02c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a02c = add i32 %v0_1000a02c, 20
  %v2_1000a02c = inttoptr i32 %v1_1000a02c to i32*
  %v3_1000a02c = load i32, i32* %v2_1000a02c, align 4
  store i32 268476472, i32* @lr, align 4
  %v2_1000a034 = call i32 @function_1000aadc(i32 1, i32 %v3_1000a02c)
  %v3_1000a038 = icmp eq i32 %v2_1000a034, 0
  %v1_1000a03c = load i32, i32* @r31, align 4
  %v2_1000a03c = add i32 %v1_1000a03c, 12
  %v3_1000a03c = inttoptr i32 %v2_1000a03c to i32*
  store i32 %v2_1000a034, i32* %v3_1000a03c, align 4
  br i1 %v3_1000a038, label %dec_label_pc_1000a044, label %dec_label_pc_1000a068

dec_label_pc_1000a044:                            ; preds = %dec_label_pc_1000a02c
  %v0_1000a044 = load i32, i32* @r31, align 4
  store i32 %v0_1000a044, i32* @r3, align 4
  store i32 268476492, i32* @lr, align 4
  %v0_1000a048 = call i32 @function_1000ab4c()
  br label %dec_label_pc_1000a04c

dec_label_pc_1000a04c:                            ; preds = %dec_label_pc_10009ff0, %dec_label_pc_1000a044
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_1000a058.507 to i32), i32* @lr, align 4
  %v0_1000a054 = call i32 @function_10009a30()
  %v0_1000a058 = call i32 @function_1000a14c()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_1000a060 = inttoptr i32 %v0_1000a058 to i32*
  store i32 12, i32* %v2_1000a060, align 4
  br label %dec_label_pc_1000a074

dec_label_pc_1000a068:                            ; preds = %dec_label_pc_1000a02c
  %v0_1000a070 = call i32 @function_1000b4e0()
  br label %dec_label_pc_1000a074

dec_label_pc_1000a074:                            ; preds = %dec_label_pc_10009f7c, %dec_label_pc_1000a04c, %dec_label_pc_10009fd0, %dec_label_pc_1000a068
  store i32 %v0_10009f7c, i32* %r0.global-to-local, align 4
  %v0_1000a078 = load i32, i32* @r31, align 4
  ret i32 %v0_1000a078

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_1000aadc, { 34, 36, 35, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 0, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 512, { 6, 8, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @function_10009a30, { 19, 18, 17, 32, 31, 30, 29, 33, 28, 27, 25, 24, 26, 7, 6, 5, 4, 3, 2, 23, 22, 21, 20, 16, 15, 14, 13, 12, 11, 10, 9, 8, 0, 1 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_1000a074, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a04c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a02c, { 1, 0 }
}

define i32 @function_1000a08c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1000a08c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_1000a090 = load i32, i32* @lr, align 4
  store i32 %v0_1000a090, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000a0a8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000a0a8, i32* @r3, align 4
  %v3_1000a0b4 = call i32 @function_1000b4e8(i32 %v2_1000a0a8, i32 ptrtoint ([3 x i8]* @global_var_1000b4e0.504 to i32))
  %v0_1000a0bc = call i32 @function_1000b4e0()
  br label %dec_label_pc_1000a0c0

dec_label_pc_1000a0c0:                            ; preds = %dec_label_pc_1000a0fc, %dec_label_pc_1000a08c
  %v0_1000a0c0 = load i32, i32* @r31, align 4
  %v1_1000a0c0 = add i32 %v0_1000a0c0, 4
  %v2_1000a0c0 = inttoptr i32 %v1_1000a0c0 to i32*
  %v3_1000a0c0 = load i32, i32* %v2_1000a0c0, align 4
  store i32 %v3_1000a0c0, i32* %r0.global-to-local, align 4
  %v1_1000a0c4 = add i32 %v0_1000a0c0, 8
  %v2_1000a0c4 = inttoptr i32 %v1_1000a0c4 to i32*
  %v3_1000a0c4 = load i32, i32* %v2_1000a0c4, align 4
  store i32 %v3_1000a0c4, i32* %r9.global-to-local, align 4
  %v3_1000a0c8 = icmp ugt i32 %v3_1000a0c4, %v3_1000a0c0
  br i1 %v3_1000a0c8, label %dec_label_pc_1000a0fc, label %dec_label_pc_1000a0d0

dec_label_pc_1000a0d0:                            ; preds = %dec_label_pc_1000a0c0
  %v1_1000a0d0 = inttoptr i32 %v0_1000a0c0 to i32*
  %v2_1000a0d0 = load i32, i32* %v1_1000a0d0, align 4
  store i32 %v2_1000a0d0, i32* @r3, align 4
  %v1_1000a0d4 = add i32 %v0_1000a0c0, 12
  %v2_1000a0d4 = inttoptr i32 %v1_1000a0d4 to i32*
  %v3_1000a0d4 = load i32, i32* %v2_1000a0d4, align 4
  %v1_1000a0d8 = add i32 %v0_1000a0c0, 20
  %v2_1000a0d8 = inttoptr i32 %v1_1000a0d8 to i32*
  %v3_1000a0d8 = load i32, i32* %v2_1000a0d8, align 4
  store i32 %v3_1000a0d8, i32* @r5, align 4
  store i32 268476640, i32* @lr, align 4
  %v4_1000a0dc = inttoptr i32 %v2_1000a0d0 to i32*
  %v5_1000a0dc = call i32 @function_1000b930(i32* %v4_1000a0dc, i32 %v3_1000a0d4, i32 %v3_1000a0d8, i32 %v3_1000a0c4)
  %v2_1000a0e0 = icmp sgt i32 %v5_1000a0dc, 0
  br i1 %v2_1000a0e0, label %dec_label_pc_1000a0f0, label %dec_label_pc_1000a0e8

dec_label_pc_1000a0e8:                            ; preds = %dec_label_pc_1000a0d0
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_1000a128

dec_label_pc_1000a0f0:                            ; preds = %dec_label_pc_1000a0d0
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000a0f4 = load i32, i32* @r31, align 4
  %v2_1000a0f4 = add i32 %v1_1000a0f4, 8
  %v3_1000a0f4 = inttoptr i32 %v2_1000a0f4 to i32*
  store i32 %v5_1000a0dc, i32* %v3_1000a0f4, align 4
  %v0_1000a0f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a0f8 = load i32, i32* @r31, align 4
  %v2_1000a0f8 = add i32 %v1_1000a0f8, 4
  %v3_1000a0f8 = inttoptr i32 %v2_1000a0f8 to i32*
  store i32 %v0_1000a0f8, i32* %v3_1000a0f8, align 4
  %v0_1000a0fc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a0fc

dec_label_pc_1000a0fc:                            ; preds = %dec_label_pc_1000a0c0, %dec_label_pc_1000a0f0
  %v1_1000a110 = phi i32 [ %v0_1000a0c0, %dec_label_pc_1000a0c0 ], [ %v0_1000a0fc.pre, %dec_label_pc_1000a0f0 ]
  %v1_1000a0fc = add i32 %v1_1000a110, 4
  %v2_1000a0fc = inttoptr i32 %v1_1000a0fc to i32*
  %v3_1000a0fc = load i32, i32* %v2_1000a0fc, align 4
  store i32 %v3_1000a0fc, i32* %r9.global-to-local, align 4
  %v1_1000a100 = add i32 %v1_1000a110, 12
  %v2_1000a100 = inttoptr i32 %v1_1000a100 to i32*
  %v3_1000a100 = load i32, i32* %v2_1000a100, align 4
  store i32 %v3_1000a100, i32* %r11.global-to-local, align 4
  %v2_1000a104 = add i32 %v3_1000a100, %v3_1000a0fc
  store i32 %v2_1000a104, i32* @r29, align 4
  %v1_1000a108 = add i32 %v2_1000a104, 8
  %v2_1000a108 = inttoptr i32 %v1_1000a108 to i16*
  %v3_1000a108 = load i16, i16* %v2_1000a108, align 2
  %v4_1000a108 = zext i16 %v3_1000a108 to i32
  %v2_1000a10c = add i32 %v4_1000a108, %v3_1000a0fc
  store i32 %v2_1000a10c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000a10c, i32* %v2_1000a0fc, align 4
  %v0_1000a114 = load i32, i32* @r29, align 4
  %v1_1000a114 = add i32 %v0_1000a114, 4
  %v2_1000a114 = inttoptr i32 %v1_1000a114 to i32*
  %v3_1000a114 = load i32, i32* %v2_1000a114, align 4
  store i32 %v3_1000a114, i32* %r0.global-to-local, align 4
  %v1_1000a118 = load i32, i32* @r31, align 4
  %v2_1000a118 = add i32 %v1_1000a118, 16
  %v3_1000a118 = inttoptr i32 %v2_1000a118 to i32*
  store i32 %v3_1000a114, i32* %v3_1000a118, align 4
  %v0_1000a11c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a11c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a11c = add i32 %v1_1000a11c, %v0_1000a11c
  %v3_1000a11c = inttoptr i32 %v2_1000a11c to i32*
  %v4_1000a11c = load i32, i32* %v3_1000a11c, align 4
  store i32 %v4_1000a11c, i32* %r0.global-to-local, align 4
  %v3_1000a120 = icmp eq i32 %v4_1000a11c, 0
  br i1 %v3_1000a120, label %dec_label_pc_1000a0c0, label %dec_label_pc_1000a128

dec_label_pc_1000a128:                            ; preds = %dec_label_pc_1000a0fc, %dec_label_pc_1000a0e8
  store i32 %v2_1000a0a8, i32* @r3, align 4
  %v2_1000a130 = call i32 @function_1000b4e8(i32 %v2_1000a0a8, i32 1)
  store i32 %v0_1000a090, i32* %r0.global-to-local, align 4
  %v0_1000a138 = load i32, i32* @r29, align 4
  ret i32 %v0_1000a138

; uselistorder directives
  uselistorder i32 %v1_1000a110, { 1, 0 }
  uselistorder i32 %v0_1000a0c0, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_1000a0a8, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000a0fc, { 1, 0 }
}

define i32 @function_1000a14c() local_unnamed_addr {
dec_label_pc_1000a14c:
  ret i32 ptrtoint (i32* @global_var_1001d1dc.509 to i32)
}

define i32 @function_1000a158(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a158:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_1000a160 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268476780, i32* @lr, align 4
  %v1_1000a168 = call i32 @function_1000bd70(i32 %v2_1000a160)
  %v3_1000a170 = load i32, i32* %stack_var_-24, align 4
  %v2_1000a174 = add i32 %v3_1000a170, %tmp
  %v1_1000a17c = mul i32 %v2_1000a174, 10000
  %v1_1000a188 = and i32 %v1_1000a17c, 2147483632
  ret i32 %v1_1000a188
}

define i32 @function_1000a190(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a190:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000a190 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_1000a190, label %dec_label_pc_1000a1a4, label %dec_label_pc_1000a1a0

dec_label_pc_1000a1a0:                            ; preds = %dec_label_pc_1000a190
  %v0_1000a1a0 = call i32 @function_1000bf34()
  store i32 %v0_1000a1a0, i32* @r3, align 4
  br label %dec_label_pc_1000a1a4

dec_label_pc_1000a1a4:                            ; preds = %dec_label_pc_1000a190, %dec_label_pc_1000a1a0
  %v1_1000a1a4 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000a1a4, i32* %r9.global-to-local, align 4
  %v4_1000a1a4 = icmp eq i32 %v1_1000a1a4, 0
  %v2_1000a1a8 = add i32 %arg3, %arg2
  store i32 %v2_1000a1a8, i32* %r4.global-to-local, align 4
  %v0_1000a1ac = load i32, i32* @r3, align 4
  %v2_1000a1ac = add i32 %v0_1000a1ac, %arg3
  store i32 %v2_1000a1ac, i32* %r10.global-to-local, align 4
  br i1 %v4_1000a1a4, label %dec_label_pc_1000a1d4, label %dec_label_pc_1000a1b4

dec_label_pc_1000a1b4:                            ; preds = %dec_label_pc_1000a1a4
  %v1_1000a1b4 = urem i32 %v2_1000a1ac, 4
  %v3_1000a1b4 = icmp eq i32 %v1_1000a1b4, 0
  br i1 %v3_1000a1b4, label %dec_label_pc_1000a1bc, label %dec_label_pc_1000a208

dec_label_pc_1000a1bc:                            ; preds = %dec_label_pc_1000a220.dec_label_pc_1000a1bc_crit_edge, %dec_label_pc_1000a1b4
  %v1_1000a1c8.pre = phi i32 [ %v1_1000a1c8.pre.pre, %dec_label_pc_1000a220.dec_label_pc_1000a1bc_crit_edge ], [ %v2_1000a1ac, %dec_label_pc_1000a1b4 ]
  %v0_1000a1bc = phi i32 [ %v1_1000a220, %dec_label_pc_1000a220.dec_label_pc_1000a1bc_crit_edge ], [ %v1_1000a1a4, %dec_label_pc_1000a1b4 ]
  store i32 %v0_1000a1bc, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a1c0

dec_label_pc_1000a1c0:                            ; preds = %dec_label_pc_1000a1c0, %dec_label_pc_1000a1bc
  %v1_1000a1c8 = phi i32 [ %v2_1000a1cc, %dec_label_pc_1000a1c0 ], [ %v1_1000a1c8.pre, %dec_label_pc_1000a1bc ]
  %v0_1000a1c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a1c0 = add i32 %v0_1000a1c0, -4
  %v2_1000a1c0 = inttoptr i32 %v1_1000a1c0 to i32*
  %v3_1000a1c0 = load i32, i32* %v2_1000a1c0, align 4
  %v1_1000a1c4 = add i32 %v0_1000a1c0, -8
  %v2_1000a1c4 = inttoptr i32 %v1_1000a1c4 to i32*
  %v3_1000a1c4 = load i32, i32* %v2_1000a1c4, align 4
  store i32 %v3_1000a1c4, i32* %r9.global-to-local, align 4
  store i32 %v1_1000a1c4, i32* %r4.global-to-local, align 4
  %v2_1000a1c8 = add i32 %v1_1000a1c8, -4
  %v3_1000a1c8 = inttoptr i32 %v2_1000a1c8 to i32*
  store i32 %v3_1000a1c0, i32* %v3_1000a1c8, align 4
  %v0_1000a1cc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a1cc = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a1cc = add i32 %v1_1000a1cc, -8
  %v3_1000a1cc = inttoptr i32 %v2_1000a1cc to i32*
  store i32 %v0_1000a1cc, i32* %v3_1000a1cc, align 4
  store i32 %v2_1000a1cc, i32* %r10.global-to-local, align 4
  %v0_1000a1d0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a1d0 = add i32 %v0_1000a1d0, -1
  store i32 %v1_1000a1d0, i32* %ctr.global-to-local, align 4
  %v2_1000a1d0 = icmp eq i32 %v1_1000a1d0, 0
  br i1 %v2_1000a1d0, label %dec_label_pc_1000a1d4, label %dec_label_pc_1000a1c0

dec_label_pc_1000a1d4:                            ; preds = %dec_label_pc_1000a1c0, %dec_label_pc_1000a220, %dec_label_pc_1000a1a4
  %v0_1000a1d4 = load i32, i32* @r11, align 4
  %v1_1000a1d4 = urem i32 %v0_1000a1d4, 8
  store i32 %v1_1000a1d4, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_1000a1d4, 4
  br i1 %tmp, label %dec_label_pc_1000a1ec, label %dec_label_pc_1000a1e0

dec_label_pc_1000a1e0:                            ; preds = %dec_label_pc_1000a1d4
  %v0_1000a1e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a1e0 = add i32 %v0_1000a1e0, -4
  %v2_1000a1e0 = inttoptr i32 %v1_1000a1e0 to i32*
  %v3_1000a1e0 = load i32, i32* %v2_1000a1e0, align 4
  store i32 %v1_1000a1e0, i32* %r4.global-to-local, align 4
  %v1_1000a1e4 = add nsw i32 %v1_1000a1d4, -4
  store i32 %v1_1000a1e4, i32* %r5.global-to-local, align 4
  %v1_1000a1e8 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a1e8 = add i32 %v1_1000a1e8, -4
  %v3_1000a1e8 = inttoptr i32 %v2_1000a1e8 to i32*
  store i32 %v3_1000a1e0, i32* %v3_1000a1e8, align 4
  store i32 %v2_1000a1e8, i32* %r10.global-to-local, align 4
  %v0_1000a1ec.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a1ec

dec_label_pc_1000a1ec:                            ; preds = %dec_label_pc_1000a1d4, %dec_label_pc_1000a1e0
  %v0_1000a1f4 = phi i32 [ %v1_1000a1d4, %dec_label_pc_1000a1d4 ], [ %v0_1000a1ec.pre, %dec_label_pc_1000a1e0 ]
  %v3_1000a1ec = icmp eq i32 %v0_1000a1f4, 0
  br i1 %v3_1000a1ec, label %dec_label_pc_1000a22c, label %dec_label_pc_1000a1f4

dec_label_pc_1000a1f4:                            ; preds = %dec_label_pc_1000a1ec
  store i32 %v0_1000a1f4, i32* %ctr.global-to-local, align 4
  %v2_1000a1fc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a1f8

dec_label_pc_1000a1f8:                            ; preds = %dec_label_pc_1000a1f8, %dec_label_pc_1000a1f4
  %v2_1000a1fc = phi i32 [ %v3_1000a1fc, %dec_label_pc_1000a1f8 ], [ %v2_1000a1fc.pre, %dec_label_pc_1000a1f4 ]
  %v0_1000a1f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a1f8 = add i32 %v0_1000a1f8, -1
  %v2_1000a1f8 = inttoptr i32 %v1_1000a1f8 to i8*
  %v3_1000a1f8 = load i8, i8* %v2_1000a1f8, align 1
  store i32 %v1_1000a1f8, i32* %r4.global-to-local, align 4
  %v3_1000a1fc = add i32 %v2_1000a1fc, -1
  %v4_1000a1fc = inttoptr i32 %v3_1000a1fc to i8*
  store i8 %v3_1000a1f8, i8* %v4_1000a1fc, align 1
  store i32 %v3_1000a1fc, i32* %r10.global-to-local, align 4
  %v0_1000a200 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a200 = add i32 %v0_1000a200, -1
  store i32 %v1_1000a200, i32* %ctr.global-to-local, align 4
  %v2_1000a200 = icmp eq i32 %v1_1000a200, 0
  br i1 %v2_1000a200, label %dec_label_pc_1000a22c, label %dec_label_pc_1000a1f8

dec_label_pc_1000a208:                            ; preds = %dec_label_pc_1000a1b4
  %v1_1000a208 = sub nsw i32 4, %v1_1000a1b4
  store i32 %v1_1000a208, i32* %ctr.global-to-local, align 4
  %v2_1000a210 = sub i32 %arg3, %v1_1000a208
  store i32 %v2_1000a210, i32* @r11, align 4
  %v1_1000a2148 = add i32 %v2_1000a1a8, -1
  %v2_1000a2149 = inttoptr i32 %v1_1000a2148 to i8*
  %v3_1000a21410 = load i8, i8* %v2_1000a2149, align 1
  store i32 %v1_1000a2148, i32* %r4.global-to-local, align 4
  %v3_1000a21812 = add i32 %v2_1000a1ac, -1
  %v4_1000a21813 = inttoptr i32 %v3_1000a21812 to i8*
  store i8 %v3_1000a21410, i8* %v4_1000a21813, align 1
  store i32 %v3_1000a21812, i32* %r10.global-to-local, align 4
  %v0_1000a21c14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a21c15 = add i32 %v0_1000a21c14, -1
  store i32 %v1_1000a21c15, i32* %ctr.global-to-local, align 4
  %v2_1000a21c16 = icmp eq i32 %v1_1000a21c15, 0
  br i1 %v2_1000a21c16, label %dec_label_pc_1000a220, label %dec_label_pc_1000a214.dec_label_pc_1000a214_crit_edge

dec_label_pc_1000a214.dec_label_pc_1000a214_crit_edge: ; preds = %dec_label_pc_1000a208, %dec_label_pc_1000a214.dec_label_pc_1000a214_crit_edge
  %v3_1000a21817 = phi i32 [ %v3_1000a218, %dec_label_pc_1000a214.dec_label_pc_1000a214_crit_edge ], [ %v3_1000a21812, %dec_label_pc_1000a208 ]
  %v0_1000a214.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a214 = add i32 %v0_1000a214.pre, -1
  %v2_1000a214 = inttoptr i32 %v1_1000a214 to i8*
  %v3_1000a214 = load i8, i8* %v2_1000a214, align 1
  store i32 %v1_1000a214, i32* %r4.global-to-local, align 4
  %v3_1000a218 = add i32 %v3_1000a21817, -1
  %v4_1000a218 = inttoptr i32 %v3_1000a218 to i8*
  store i8 %v3_1000a214, i8* %v4_1000a218, align 1
  store i32 %v3_1000a218, i32* %r10.global-to-local, align 4
  %v0_1000a21c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a21c = add i32 %v0_1000a21c, -1
  store i32 %v1_1000a21c, i32* %ctr.global-to-local, align 4
  %v2_1000a21c = icmp eq i32 %v1_1000a21c, 0
  br i1 %v2_1000a21c, label %dec_label_pc_1000a220, label %dec_label_pc_1000a214.dec_label_pc_1000a214_crit_edge

dec_label_pc_1000a220:                            ; preds = %dec_label_pc_1000a214.dec_label_pc_1000a214_crit_edge, %dec_label_pc_1000a208
  %v0_1000a220 = load i32, i32* @r11, align 4
  %v1_1000a220 = call i32 @__asm_rlwinm.(i32 %v0_1000a220, i32 29, i32 3, i32 31)
  store i32 %v1_1000a220, i32* %r9.global-to-local, align 4
  %v4_1000a220 = icmp eq i32 %v1_1000a220, 0
  br i1 %v4_1000a220, label %dec_label_pc_1000a1d4, label %dec_label_pc_1000a220.dec_label_pc_1000a1bc_crit_edge

dec_label_pc_1000a220.dec_label_pc_1000a1bc_crit_edge: ; preds = %dec_label_pc_1000a220
  %v1_1000a1c8.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a1bc

dec_label_pc_1000a22c:                            ; preds = %dec_label_pc_1000a1f8, %dec_label_pc_1000a1ec
  %v0_1000a22c = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_1000a22c

; uselistorder directives
  uselistorder i32 %v1_1000a220, { 1, 2, 0 }
  uselistorder i32 %v1_1000a21c, { 1, 0 }
  uselistorder i32 %v3_1000a218, { 1, 2, 0 }
  uselistorder i32 %v1_1000a200, { 1, 0 }
  uselistorder i32 %v3_1000a1fc, { 1, 2, 0 }
  uselistorder i32 %v1_1000a1d4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000a1d0, { 1, 0 }
  uselistorder i32 %v2_1000a1cc, { 1, 2, 0 }
  uselistorder i32 %v1_1000a1b4, { 1, 0 }
  uselistorder i32 %v2_1000a1ac, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 8, 9, 1, 5, 2, 7, 3, 6, 4 }
  uselistorder i32* %r10.global-to-local, { 6, 0, 9, 1, 5, 2, 7, 3, 8, 4 }
  uselistorder i32* %ctr.global-to-local, { 0, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 2, 0, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_1000a214.dec_label_pc_1000a214_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a1a4, { 1, 0 }
}

define i32 @function_1000a234(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a234:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000a234 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000a234, i32* %r9.global-to-local, align 4
  %v4_1000a234 = icmp eq i32 %v1_1000a234, 0
  %v1_1000a23c = add i32 %arg1, -4
  store i32 %v1_1000a23c, i32* %r11.global-to-local, align 4
  %v1_1000a240 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000a244 = call i32 @__asm_rlwimi(i32 %v1_1000a240, i32 16, i32 0, i32 15)
  %v2_1000a244 = trunc i32 %v1_1000a244 to i8
  br i1 %v4_1000a234, label %dec_label_pc_1000a26c, label %dec_label_pc_1000a24c

dec_label_pc_1000a24c:                            ; preds = %dec_label_pc_1000a234
  %v0_1000a24c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a24c = urem i32 %v0_1000a24c, 4
  %v3_1000a24c = icmp eq i32 %v1_1000a24c, 0
  br i1 %v3_1000a24c, label %dec_label_pc_1000a24c.dec_label_pc_1000a254_crit_edge, label %dec_label_pc_1000a29c

dec_label_pc_1000a24c.dec_label_pc_1000a254_crit_edge: ; preds = %dec_label_pc_1000a24c
  %v0_1000a254.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a254

dec_label_pc_1000a254:                            ; preds = %dec_label_pc_1000a2b4.dec_label_pc_1000a254_crit_edge, %dec_label_pc_1000a24c.dec_label_pc_1000a254_crit_edge
  %v0_1000a258.pre = phi i32 [ %v0_1000a24c, %dec_label_pc_1000a24c.dec_label_pc_1000a254_crit_edge ], [ %v0_1000a258.pre.pre, %dec_label_pc_1000a2b4.dec_label_pc_1000a254_crit_edge ]
  %v0_1000a254 = phi i32 [ %v0_1000a254.pre, %dec_label_pc_1000a24c.dec_label_pc_1000a254_crit_edge ], [ %v1_1000a2b4, %dec_label_pc_1000a2b4.dec_label_pc_1000a254_crit_edge ]
  store i32 %v0_1000a254, i32* %ctr.global-to-local, align 4
  %v1_1000a25c = sext i8 %v2_1000a244 to i32
  br label %dec_label_pc_1000a258

dec_label_pc_1000a258:                            ; preds = %dec_label_pc_1000a258, %dec_label_pc_1000a254
  %v0_1000a258 = phi i32 [ %v1_1000a264, %dec_label_pc_1000a258 ], [ %v0_1000a258.pre, %dec_label_pc_1000a254 ]
  %v1_1000a258 = add i32 %v0_1000a258, 4
  store i32 %v1_1000a258, i32* %r9.global-to-local, align 4
  %v4_1000a25c = inttoptr i32 %v1_1000a258 to i32*
  store i32 %v1_1000a25c, i32* %v4_1000a25c, align 4
  %v2_1000a260 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000a260 = add i32 %v2_1000a260, 4
  %v4_1000a260 = inttoptr i32 %v3_1000a260 to i32*
  store i32 %v1_1000a25c, i32* %v4_1000a260, align 4
  %v0_1000a264 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a264 = add i32 %v0_1000a264, 4
  store i32 %v1_1000a264, i32* %r11.global-to-local, align 4
  %v0_1000a268 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a268 = add i32 %v0_1000a268, -1
  store i32 %v1_1000a268, i32* %ctr.global-to-local, align 4
  %v2_1000a268 = icmp eq i32 %v1_1000a268, 0
  br i1 %v2_1000a268, label %dec_label_pc_1000a26c, label %dec_label_pc_1000a258

dec_label_pc_1000a26c:                            ; preds = %dec_label_pc_1000a258, %dec_label_pc_1000a2b4, %dec_label_pc_1000a234
  %v0_1000a26c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a26c = urem i32 %v0_1000a26c, 8
  store i32 %v1_1000a26c, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000a26c, 4
  br i1 %tmp, label %dec_label_pc_1000a280, label %dec_label_pc_1000a278

dec_label_pc_1000a278:                            ; preds = %dec_label_pc_1000a26c
  %v1_1000a278 = sext i8 %v2_1000a244 to i32
  %v2_1000a278 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000a278 = add i32 %v2_1000a278, 4
  %v4_1000a278 = inttoptr i32 %v3_1000a278 to i32*
  store i32 %v1_1000a278, i32* %v4_1000a278, align 4
  store i32 %v3_1000a278, i32* %r11.global-to-local, align 4
  %v0_1000a27c = load i32, i32* @r5, align 4
  %v1_1000a27c = add i32 %v0_1000a27c, -4
  store i32 %v1_1000a27c, i32* @r5, align 4
  br label %dec_label_pc_1000a280

dec_label_pc_1000a280:                            ; preds = %dec_label_pc_1000a26c, %dec_label_pc_1000a278
  %v0_1000a280 = phi i32 [ %v1_1000a26c, %dec_label_pc_1000a26c ], [ %v1_1000a27c, %dec_label_pc_1000a278 ]
  %v3_1000a280 = icmp eq i32 %v0_1000a280, 0
  %v0_1000a284 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a280, i32 %v0_1000a284)
  %v0_1000a288 = load i32, i32* @r5, align 4
  store i32 %v0_1000a288, i32* %ctr.global-to-local, align 4
  %v0_1000a28c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a28c = add i32 %v0_1000a28c, 3
  store i32 %v1_1000a28c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a290

dec_label_pc_1000a290:                            ; preds = %dec_label_pc_1000a290, %dec_label_pc_1000a280
  %v3_1000a290 = phi i32 [ %v4_1000a290, %dec_label_pc_1000a290 ], [ %v1_1000a28c, %dec_label_pc_1000a280 ]
  %v4_1000a290 = add i32 %v3_1000a290, 1
  %v5_1000a290 = inttoptr i32 %v4_1000a290 to i8*
  store i8 %v2_1000a244, i8* %v5_1000a290, align 1
  store i32 %v4_1000a290, i32* %r9.global-to-local, align 4
  %v0_1000a294 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a294 = add i32 %v0_1000a294, -1
  store i32 %v1_1000a294, i32* %ctr.global-to-local, align 4
  %v2_1000a294 = icmp eq i32 %v1_1000a294, 0
  br i1 %v2_1000a294, label %dec_label_pc_1000a2c0, label %dec_label_pc_1000a290

dec_label_pc_1000a29c:                            ; preds = %dec_label_pc_1000a24c
  %v1_1000a29c = sub nsw i32 4, %v1_1000a24c
  store i32 %v1_1000a29c, i32* %ctr.global-to-local, align 4
  %v1_1000a2a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000a2a4 = sub i32 %v1_1000a2a4, %v1_1000a29c
  store i32 %v2_1000a2a4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a2a8

dec_label_pc_1000a2a8:                            ; preds = %dec_label_pc_1000a2a8, %dec_label_pc_1000a29c
  %v3_1000a2a8 = phi i32 [ %v1_1000a2ac, %dec_label_pc_1000a2a8 ], [ %v0_1000a24c, %dec_label_pc_1000a29c ]
  %v4_1000a2a8 = add i32 %v3_1000a2a8, 4
  %v5_1000a2a8 = inttoptr i32 %v4_1000a2a8 to i8*
  store i8 %v2_1000a244, i8* %v5_1000a2a8, align 1
  %v0_1000a2ac = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a2ac = add i32 %v0_1000a2ac, 1
  store i32 %v1_1000a2ac, i32* %r11.global-to-local, align 4
  %v0_1000a2b0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a2b0 = add i32 %v0_1000a2b0, -1
  store i32 %v1_1000a2b0, i32* %ctr.global-to-local, align 4
  %v2_1000a2b0 = icmp eq i32 %v1_1000a2b0, 0
  br i1 %v2_1000a2b0, label %dec_label_pc_1000a2b4, label %dec_label_pc_1000a2a8

dec_label_pc_1000a2b4:                            ; preds = %dec_label_pc_1000a2a8
  %v0_1000a2b4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a2b4 = call i32 @__asm_rlwinm.(i32 %v0_1000a2b4, i32 29, i32 3, i32 31)
  store i32 %v1_1000a2b4, i32* %r9.global-to-local, align 4
  %v4_1000a2b4 = icmp eq i32 %v1_1000a2b4, 0
  br i1 %v4_1000a2b4, label %dec_label_pc_1000a26c, label %dec_label_pc_1000a2b4.dec_label_pc_1000a254_crit_edge

dec_label_pc_1000a2b4.dec_label_pc_1000a254_crit_edge: ; preds = %dec_label_pc_1000a2b4
  %v0_1000a258.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a254

dec_label_pc_1000a2c0:                            ; preds = %dec_label_pc_1000a290
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000a2b4, { 1, 2, 0 }
  uselistorder i32 %v1_1000a2b0, { 1, 0 }
  uselistorder i32 %v1_1000a2ac, { 1, 0 }
  uselistorder i32 %v1_1000a294, { 1, 0 }
  uselistorder i32 %v4_1000a290, { 1, 2, 0 }
  uselistorder i32 %v1_1000a26c, { 2, 1, 0 }
  uselistorder i32 %v1_1000a268, { 1, 0 }
  uselistorder i32 %v1_1000a264, { 1, 0 }
  uselistorder i32 %v1_1000a24c, { 1, 0 }
  uselistorder i32 %v0_1000a24c, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 48, 49, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000a280, { 1, 0 }
  uselistorder label %dec_label_pc_1000a26c, { 1, 0, 2 }
}

define i32 @function_1000a2c4(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_1000a2c4:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1000a2c4 = add i32 %arg1, -1
  %v1_1000a2c8 = sub i32 %v2_1000a2c4, %tmp
  store i32 %v1_1000a2c8, i32* %r9.global-to-local, align 4
  %v2_1000a2cc4 = load i8, i8* %arg2, align 1
  %v1_1000a2d06 = add i32 %tmp, 1
  store i32 %v1_1000a2d06, i32* %r4.global-to-local, align 4
  %v3_1000a2d47 = icmp eq i8 %v2_1000a2cc4, 0
  store i1 %v3_1000a2d47, i1* %cr7_eq.global-to-local, align 1
  %v5_1000a2d88 = inttoptr i32 %arg1 to i8*
  store i8 %v2_1000a2cc4, i8* %v5_1000a2d88, align 1
  %v0_1000a2dc9 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a2dc9, label %dec_label_pc_1000a2e0, label %dec_label_pc_1000a2cc.dec_label_pc_1000a2cc_crit_edge

dec_label_pc_1000a2cc.dec_label_pc_1000a2cc_crit_edge: ; preds = %dec_label_pc_1000a2c4, %dec_label_pc_1000a2cc.dec_label_pc_1000a2cc_crit_edge
  %v0_1000a2cc.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1000a2d8.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a2cc = inttoptr i32 %v0_1000a2cc.pre to i8*
  %v2_1000a2cc = load i8, i8* %v1_1000a2cc, align 1
  %v1_1000a2d0 = add i32 %v0_1000a2cc.pre, 1
  store i32 %v1_1000a2d0, i32* %r4.global-to-local, align 4
  %v3_1000a2d4 = icmp eq i8 %v2_1000a2cc, 0
  store i1 %v3_1000a2d4, i1* %cr7_eq.global-to-local, align 1
  %v4_1000a2d8 = add i32 %v1_1000a2d0, %v2_1000a2d8.pre
  %v5_1000a2d8 = inttoptr i32 %v4_1000a2d8 to i8*
  store i8 %v2_1000a2cc, i8* %v5_1000a2d8, align 1
  %v0_1000a2dc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a2dc, label %dec_label_pc_1000a2e0, label %dec_label_pc_1000a2cc.dec_label_pc_1000a2cc_crit_edge

dec_label_pc_1000a2e0:                            ; preds = %dec_label_pc_1000a2cc.dec_label_pc_1000a2cc_crit_edge, %dec_label_pc_1000a2c4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a2cc.dec_label_pc_1000a2cc_crit_edge, { 1, 0 }
}

define i32 @function_1000a2e4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a2e4:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_1()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000a2e8 = load i32, i32* @lr, align 4
  store i32 %v0_1000a2e8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000a2f8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268477196, i32* @lr, align 4
  %v3_1000a308 = call i32 @function_10009860(i32 1076655123, i32 %v2_1000a2f8, i32 %v2_1000a2f8)
  %v2_1000a30c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000a30c, i32* @r4, align 4
  store i32 %v3_1000a308, i32* @r30, align 4
  %v3_1000a310 = icmp eq i32 %v3_1000a308, 0
  %v0_1000a318 = load i32, i32* @r31, align 4
  br i1 %v3_1000a310, label %dec_label_pc_1000a320, label %dec_label_pc_1000a368

dec_label_pc_1000a320:                            ; preds = %dec_label_pc_1000a2e4
  %v1_1000a318 = add i32 %v0_1000a318, 17
  %v3_1000a338 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000a338, i32* %r0.global-to-local, align 4
  %v2_1000a33c = add i32 %v0_1000a318, 4
  %v3_1000a33c = inttoptr i32 %v2_1000a33c to i32*
  store i32 %tmp7, i32* %v3_1000a33c, align 4
  %v0_1000a340 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a340 = load i32, i32* @r31, align 4
  %v2_1000a340 = inttoptr i32 %v1_1000a340 to i32*
  store i32 %v0_1000a340, i32* %v2_1000a340, align 4
  %v0_1000a344 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a344 = load i32, i32* @r31, align 4
  %v2_1000a344 = add i32 %v1_1000a344, 8
  %v3_1000a344 = inttoptr i32 %v2_1000a344 to i32*
  store i32 %v0_1000a344, i32* %v3_1000a344, align 4
  %v0_1000a348 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a348 = load i32, i32* @r31, align 4
  %v2_1000a348 = add i32 %v1_1000a348, 12
  %v3_1000a348 = inttoptr i32 %v2_1000a348 to i32*
  store i32 %v0_1000a348, i32* %v3_1000a348, align 4
  %v3_1000a34c = load i32, i32* @r31, align 4
  %v4_1000a34c = add i32 %v3_1000a34c, 16
  %v5_1000a34c = inttoptr i32 %v4_1000a34c to i8*
  store i8 %tmp4, i8* %v5_1000a34c, align 1
  %v1_1000a350 = load i32, i32* @r31, align 4
  %v2_1000a350 = add i32 %v1_1000a350, 52
  %v3_1000a350 = inttoptr i32 %v2_1000a350 to i32*
  store i32 %tmp3, i32* %v3_1000a350, align 4
  %v1_1000a354 = load i32, i32* @r31, align 4
  %v2_1000a354 = add i32 %v1_1000a354, 56
  %v3_1000a354 = inttoptr i32 %v2_1000a354 to i32*
  store i32 %tmp2, i32* %v3_1000a354, align 4
  store i32 268477276, i32* @lr, align 4
  %v6_1000a358 = sext i8 %tmp4 to i32
  %v8_1000a358 = call i32 @function_1000bfd0(i32 %v1_1000a318, i32 %v2_1000a30c, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000a358, i32 %tmp7)
  store i32 268477288, i32* @lr, align 4
  %v3_1000a364 = call i32 @function_1000a234(i32 %v8_1000a358, i32 0, i32 13)
  %v0_1000a36c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a368

dec_label_pc_1000a368:                            ; preds = %dec_label_pc_1000a2e4, %dec_label_pc_1000a320
  %v0_1000a36c = phi i32 [ %v3_1000a308, %dec_label_pc_1000a2e4 ], [ %v0_1000a36c.pre, %dec_label_pc_1000a320 ]
  store i32 %v0_1000a2e8, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a36c

; uselistorder directives
  uselistorder i32 %v2_1000a2f8, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 8, 9, 10, 21, 11, 22, 12, 23, 13, 24, 2, 25, 3, 26, 4, 27, 14, 28, 0, 1, 15, 16, 17, 18, 19, 20, 29, 30, 5, 31, 32, 6, 33, 34, 7 }
  uselistorder label %dec_label_pc_1000a368, { 1, 0 }
}

define i32 @function_1000a380() local_unnamed_addr {
dec_label_pc_1000a380:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000a380 = load i32, i32* @r4, align 4
  %v3_1000a380 = icmp eq i32 %v0_1000a380, 1
  %v0_1000a390 = load i32, i32* @r3, align 4
  store i32 %v0_1000a390, i32* %r27.global-to-local, align 4
  %v0_1000a398 = load i32, i32* @r5, align 4
  store i32 %v0_1000a398, i32* @r31, align 4
  br i1 %v3_1000a380, label %dec_label_pc_1000a3bc, label %dec_label_pc_1000a3a0

dec_label_pc_1000a3a0:                            ; preds = %dec_label_pc_1000a380
  %v3_1000a3a0 = icmp eq i32 %v0_1000a380, 2
  br i1 %v3_1000a3a0, label %dec_label_pc_1000a3dc, label %dec_label_pc_1000a3a8

dec_label_pc_1000a3a8:                            ; preds = %dec_label_pc_1000a3a0
  %v3_1000a3a8 = icmp eq i32 %v0_1000a380, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000a3a8, label %dec_label_pc_1000a3e4, label %dec_label_pc_1000a3c8

dec_label_pc_1000a3bc:                            ; preds = %dec_label_pc_1000a380
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000a3e4

dec_label_pc_1000a3c8:                            ; preds = %dec_label_pc_1000a3a8
  %v0_1000a3c8 = call i32 @function_1000a14c()
  store i32 -1, i32* @r28, align 4
  %v2_1000a3d4 = inttoptr i32 %v0_1000a3c8 to i32*
  store i32 22, i32* %v2_1000a3d4, align 4
  br label %dec_label_pc_1000a4cc

dec_label_pc_1000a3dc:                            ; preds = %dec_label_pc_1000a3a0
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000a3e4

dec_label_pc_1000a3e4:                            ; preds = %dec_label_pc_1000a3a8, %dec_label_pc_1000a3bc, %dec_label_pc_1000a3dc
  %v1_1000a3e4 = inttoptr i32 %v0_1000a398 to i32*
  %v2_1000a3e4 = load i32, i32* %v1_1000a3e4, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000a3ec = add i32 %v0_1000a398, 4
  %v2_1000a3ec = inttoptr i32 %v1_1000a3ec to i32*
  %v3_1000a3ec = load i32, i32* %v2_1000a3ec, align 4
  store i32 %v3_1000a3ec, i32* %r9.global-to-local, align 4
  %v1_1000a3f0 = add i32 %v0_1000a398, 17
  store i32 %v1_1000a3f0, i32* @r4, align 4
  %v1_1000a3f4 = add i32 %v0_1000a398, 8
  %v2_1000a3f4 = inttoptr i32 %v1_1000a3f4 to i32*
  %v3_1000a3f4 = load i32, i32* %v2_1000a3f4, align 4
  %v2_1000a3f8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000a3f8, i32* @r3, align 4
  %v2_1000a400 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000a3e4, i32* %stack_var_-72, align 4
  store i32 268477488, i32* @lr, align 4
  %v0_1000a42c = call i32 @function_1000bf34()
  %v0_1000a430 = load i32, i32* %r27.global-to-local, align 4
  %v0_1000a434 = load i32, i32* @r30, align 4
  store i32 268477508, i32* @lr, align 4
  %v3_1000a440 = call i32 @function_10009860(i32 %v0_1000a430, i32 %v0_1000a434, i32 %v2_1000a400)
  store i32 %v3_1000a440, i32* @r28, align 4
  %v3_1000a444 = icmp eq i32 %v3_1000a440, 0
  br i1 %v3_1000a444, label %dec_label_pc_1000a44c, label %dec_label_pc_1000a4cc

dec_label_pc_1000a44c:                            ; preds = %dec_label_pc_1000a3e4
  %v0_1000a44c = load i32, i32* @r30, align 4
  %v3_1000a450 = icmp eq i32 %v0_1000a44c, -2144570348
  br i1 %v3_1000a450, label %dec_label_pc_1000a458, label %dec_label_pc_1000a4c8

dec_label_pc_1000a458:                            ; preds = %dec_label_pc_1000a44c
  %v0_1000a458 = call i32 @function_1000a14c()
  store i32 %v0_1000a458, i32* @r29, align 4
  %v0_1000a468 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a470 = inttoptr i32 %v0_1000a458 to i32*
  %v2_1000a470 = load i32, i32* %v1_1000a470, align 4
  store i32 %v2_1000a470, i32* @r30, align 4
  store i32 268477564, i32* @lr, align 4
  %v3_1000a478 = call i32 @function_10009860(i32 %v0_1000a468, i32 1076655123, i32 %v2_1000a400)
  %v3_1000a47c = icmp eq i32 %v3_1000a478, 0
  br i1 %v3_1000a47c, label %dec_label_pc_1000a48c, label %dec_label_pc_1000a484

dec_label_pc_1000a484:                            ; preds = %dec_label_pc_1000a458
  %v0_1000a484 = load i32, i32* @r30, align 4
  %v1_1000a484 = load i32, i32* @r29, align 4
  %v2_1000a484 = inttoptr i32 %v1_1000a484 to i32*
  store i32 %v0_1000a484, i32* %v2_1000a484, align 4
  br label %dec_label_pc_1000a4cc

dec_label_pc_1000a48c:                            ; preds = %dec_label_pc_1000a458
  %v0_1000a48c = load i32, i32* @r31, align 4
  %v1_1000a48c = add i32 %v0_1000a48c, 8
  %v2_1000a48c = inttoptr i32 %v1_1000a48c to i32*
  %v3_1000a48c = load i32, i32* %v2_1000a48c, align 4
  %v1_1000a494 = call i32 @__asm_rlwinm(i32 %v3_1000a48c, i32 0, i32 19, i32 20)
  %v1_1000a498 = call i32 @__asm_rlwinm(i32 %v3_1000a3f4, i32 0, i32 19, i32 20)
  store i32 %v1_1000a498, i32* %r9.global-to-local, align 4
  %v4_1000a49c = icmp eq i32 %v1_1000a494, %v1_1000a498
  br i1 %v4_1000a49c, label %dec_label_pc_1000a4a4, label %dec_label_pc_1000a4b8

dec_label_pc_1000a4a4:                            ; preds = %dec_label_pc_1000a48c
  %v1_1000a4a4 = and i32 %v3_1000a48c, 768
  store i32 %v1_1000a4a4, i32* %r9.global-to-local, align 4
  %v3_1000a4a4 = icmp eq i32 %v1_1000a4a4, 0
  br i1 %v3_1000a4a4, label %dec_label_pc_1000a4c8, label %dec_label_pc_1000a4ac

dec_label_pc_1000a4ac:                            ; preds = %dec_label_pc_1000a4a4
  %v1_1000a4ac = call i32 @__asm_rlwinm(i32 %v3_1000a3f4, i32 0, i32 22, i32 23)
  %v0_1000a4b0 = load i32, i32* %r9.global-to-local, align 4
  %v4_1000a4b0 = icmp eq i32 %v0_1000a4b0, %v1_1000a4ac
  br i1 %v4_1000a4b0, label %dec_label_pc_1000a4c8, label %dec_label_pc_1000a4b8

dec_label_pc_1000a4b8:                            ; preds = %dec_label_pc_1000a48c, %dec_label_pc_1000a4ac
  store i32 -1, i32* @r28, align 4
  %v1_1000a4c0 = load i32, i32* @r29, align 4
  %v2_1000a4c0 = inttoptr i32 %v1_1000a4c0 to i32*
  store i32 22, i32* %v2_1000a4c0, align 4
  br label %dec_label_pc_1000a4cc

dec_label_pc_1000a4c8:                            ; preds = %dec_label_pc_1000a44c, %dec_label_pc_1000a4ac, %dec_label_pc_1000a4a4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000a4cc

dec_label_pc_1000a4cc:                            ; preds = %dec_label_pc_1000a3e4, %dec_label_pc_1000a4b8, %dec_label_pc_1000a484, %dec_label_pc_1000a3c8, %dec_label_pc_1000a4c8
  %v0_1000a4d0 = load i32, i32* @r28, align 4
  ret i32 %v0_1000a4d0

; uselistorder directives
  uselistorder i32 %v0_1000a398, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009860, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a4cc, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000a4c8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a4b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3e4, { 2, 1, 0 }
}

define i32 @function_1000a4e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a4e4:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000a4ec = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000a4ec, i32* @r4, align 4
  store i32 268477688, i32* @lr, align 4
  %v1_1000a4f4 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000a4f4 = call i32 @function_1000c004(i8* %v1_1000a4f4)
  %v3_1000a4f8 = icmp eq i32 %v2_1000a4f4, 0
  br i1 %v3_1000a4f8, label %dec_label_pc_1000a508, label %dec_label_pc_1000a504

dec_label_pc_1000a504:                            ; preds = %dec_label_pc_1000a4e4
  %v3_1000a504 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000a508

dec_label_pc_1000a508:                            ; preds = %dec_label_pc_1000a4e4, %dec_label_pc_1000a504
  %v0_1000a514 = phi i32 [ -1, %dec_label_pc_1000a4e4 ], [ %v3_1000a504, %dec_label_pc_1000a504 ]
  ret i32 %v0_1000a514

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a508, { 1, 0 }
}

define i32 @function_1000a518(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a518:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a52c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268477756, i32* @lr, align 4
  %v2_1000a538 = call i32 @function_1000b838(i32 5, i32 %v2_1000a52c)
  ret i32 %v2_1000a538

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a54c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a54c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a560 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268477808, i32* @lr, align 4
  %v2_1000a56c = call i32 @function_1000b838(i32 2, i32 %v2_1000a560)
  ret i32 %v2_1000a56c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a580() local_unnamed_addr {
dec_label_pc_1000a580:
  %stack_var_-24 = alloca i32, align 4
  %v0_1000a588 = load i32, i32* @r3, align 4
  store i32 %v0_1000a588, i32* %stack_var_-24, align 4
  %v2_1000a594 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268477860, i32* @lr, align 4
  %v2_1000a5a0 = call i32 @function_1000b838(i32 3, i32 %v2_1000a594)
  ret i32 %v2_1000a5a0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a5b4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a5b4:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a5c8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268477912, i32* @lr, align 4
  %v2_1000a5d4 = call i32 @function_1000b838(i32 6, i32 %v2_1000a5c8)
  ret i32 %v2_1000a5d4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a5e8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000a5e8:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000a5fc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268477972, i32* @lr, align 4
  %v2_1000a610 = call i32 @function_1000b838(i32 15, i32 %v2_1000a5fc)
  ret i32 %v2_1000a610

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 26, 5, 6, 13, 7, 8, 14, 15, 16, 17, 1, 18, 9, 10, 11, 12, 19, 20, 21, 2, 22, 23, 3, 24, 25, 4 }
}

define i32 @function_1000a624(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a624:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a638 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268478020, i32* @lr, align 4
  %v2_1000a640 = call i32 @function_1000b838(i32 4, i32 %v2_1000a638)
  ret i32 %v2_1000a640

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a654(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a654:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a668 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268478076, i32* @lr, align 4
  %v2_1000a678 = call i32 @function_1000b838(i32 10, i32 %v2_1000a668)
  ret i32 %v2_1000a678

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a68c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000a68c:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000a6a0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268478140, i32* @lr, align 4
  %v2_1000a6b8 = call i32 @function_1000b838(i32 12, i32 %v2_1000a6a0)
  ret i32 %v2_1000a6b8

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000a6cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a6cc:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a6e0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268478196, i32* @lr, align 4
  %v2_1000a6f0 = call i32 @function_1000b838(i32 9, i32 %v2_1000a6e0)
  ret i32 %v2_1000a6f0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 0, 10, 11, 12, 22, 13, 14, 23, 2, 1, 24, 4, 3, 25, 26, 27, 28, 5, 29, 15, 30, 16, 31, 6, 32, 7, 17, 18, 19, 20, 33, 21, 34, 8, 48, 35, 36, 37, 38, 9, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50 }
}

define i32 @function_1000a704(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000a704:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000a718 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268478260, i32* @lr, align 4
  %v2_1000a730 = call i32 @function_1000b838(i32 11, i32 %v2_1000a718)
  ret i32 %v2_1000a730

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000a744(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a744:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000a758 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268478320, i32* @lr, align 4
  %v2_1000a76c = call i32 @function_1000b838(i32 14, i32 %v2_1000a758)
  ret i32 %v2_1000a76c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000a780(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a780:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a794 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268478372, i32* @lr, align 4
  %v2_1000a7a0 = call i32 @function_1000b838(i32 1, i32 %v2_1000a794)
  ret i32 %v2_1000a7a0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000b838, { 2, 1, 0, 6, 4, 11, 7, 10, 9, 3, 5, 8 }
}

define i32 @function_1000a7b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a7b4:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000a7e4, label %dec_label_pc_1000a7d0

dec_label_pc_1000a7d0:                            ; preds = %dec_label_pc_1000a7b4
  %v0_1000a7d0 = call i32 @function_1000a14c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000a7dc = inttoptr i32 %v0_1000a7d0 to i32*
  store i32 22, i32* %v2_1000a7dc, align 4
  %v0_1000a7f0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a7ec

dec_label_pc_1000a7e4:                            ; preds = %dec_label_pc_1000a7b4
  %v0_1000a7e4 = call i32 @function_1000a934()
  store i32 %v0_1000a7e4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a7ec

dec_label_pc_1000a7ec:                            ; preds = %dec_label_pc_1000a7d0, %dec_label_pc_1000a7e4
  %v0_1000a7f0 = phi i32 [ %v0_1000a7f0.pre, %dec_label_pc_1000a7d0 ], [ %v0_1000a7e4, %dec_label_pc_1000a7e4 ]
  ret i32 %v0_1000a7f0

; uselistorder directives
  uselistorder label %dec_label_pc_1000a7ec, { 1, 0 }
}

define i32 @function_1000a800(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a800:
  store i32 268478488, i32* @lr, align 4
  %v3_1000a814 = call i32 @function_1000a234(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_1000a82c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a82c:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1000a82c = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a82c, label %dec_label_pc_1000a858, label %dec_label_pc_1000a848

dec_label_pc_1000a848:                            ; preds = %dec_label_pc_1000a82c
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000a858, label %dec_label_pc_1000a850

dec_label_pc_1000a850:                            ; preds = %dec_label_pc_1000a848
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000a888.lr.ph, label %dec_label_pc_1000a858

dec_label_pc_1000a858:                            ; preds = %dec_label_pc_1000a850, %dec_label_pc_1000a848, %dec_label_pc_1000a82c
  %v0_1000a858 = call i32 @function_1000a14c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000a864 = inttoptr i32 %v0_1000a858 to i32*
  store i32 22, i32* %v2_1000a864, align 4
  %v0_1000a8f8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a8f4

dec_label_pc_1000a888.lr.ph:                      ; preds = %dec_label_pc_1000a850
  %v2_1000a878 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000a878, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000a88822 = add i32 %v2_1000a878, 128
  %v3_1000a88823 = inttoptr i32 %v2_1000a88822 to i32*
  store i32 0, i32* %v3_1000a88823, align 4
  %v0_1000a88c24 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a88c25 = add i32 %v0_1000a88c24, -1
  store i32 %v1_1000a88c25, i32* %r11.global-to-local, align 4
  %v1_1000a89026 = mul i32 %v1_1000a88c25, 4
  %v1_1000a89427 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a89428 = add i32 %v1_1000a89427, %v1_1000a89026
  store i32 %v2_1000a89428, i32* %r9.global-to-local, align 4
  %v0_1000a89829 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a89830 = add i32 %v0_1000a89829, -1
  store i32 %v1_1000a89830, i32* %ctr.global-to-local, align 4
  %v2_1000a89831 = icmp eq i32 %v1_1000a89830, 0
  br i1 %v2_1000a89831, label %dec_label_pc_1000a89c, label %dec_label_pc_1000a888.dec_label_pc_1000a888_crit_edge

dec_label_pc_1000a888.dec_label_pc_1000a888_crit_edge: ; preds = %dec_label_pc_1000a888.lr.ph, %dec_label_pc_1000a888.dec_label_pc_1000a888_crit_edge
  %v2_1000a89432 = phi i32 [ %v2_1000a894, %dec_label_pc_1000a888.dec_label_pc_1000a888_crit_edge ], [ %v2_1000a89428, %dec_label_pc_1000a888.lr.ph ]
  %v0_1000a888.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a888 = add i32 %v2_1000a89432, 4
  %v3_1000a888 = inttoptr i32 %v2_1000a888 to i32*
  store i32 %v0_1000a888.pre, i32* %v3_1000a888, align 4
  %v0_1000a88c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a88c = add i32 %v0_1000a88c, -1
  store i32 %v1_1000a88c, i32* %r11.global-to-local, align 4
  %v1_1000a890 = mul i32 %v1_1000a88c, 4
  %v1_1000a894 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a894 = add i32 %v1_1000a894, %v1_1000a890
  store i32 %v2_1000a894, i32* %r9.global-to-local, align 4
  %v0_1000a898 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a898 = add i32 %v0_1000a898, -1
  store i32 %v1_1000a898, i32* %ctr.global-to-local, align 4
  %v2_1000a898 = icmp eq i32 %v1_1000a898, 0
  br i1 %v2_1000a898, label %dec_label_pc_1000a89c, label %dec_label_pc_1000a888.dec_label_pc_1000a888_crit_edge

dec_label_pc_1000a89c:                            ; preds = %dec_label_pc_1000a888.dec_label_pc_1000a888_crit_edge, %dec_label_pc_1000a888.lr.ph
  %v0_1000a8a0.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a89c = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1000a89c, i32* @r3, align 4
  store i32 %v0_1000a8a0.pre, i32* @r4, align 4
  %v0_1000a8a4 = call i32 @function_1000a934()
  %v1_1000a8a8 = icmp slt i32 %v0_1000a8a4, 0
  br i1 %v1_1000a8a8, label %dec_label_pc_1000a8f0, label %dec_label_pc_1000a8b0

dec_label_pc_1000a8b0:                            ; preds = %dec_label_pc_1000a89c
  %v0_1000a8b4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a8bc = call i32 @function_1000a90c(i32 ptrtoint (i32* @global_var_1001d410.512 to i32), i32 %v0_1000a8b4)
  %v2_1000a8c8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268478688, i32* @lr, align 4
  %v4_1000a8dc = call i32 @function_1000c0c4(i32 %v0_1000a8b4, i32* nonnull %stack_var_-296, i32 %v2_1000a8c8)
  %v1_1000a8e0 = icmp slt i32 %v4_1000a8dc, 0
  br i1 %v1_1000a8e0, label %dec_label_pc_1000a8f0, label %dec_label_pc_1000a8e8

dec_label_pc_1000a8e8:                            ; preds = %dec_label_pc_1000a8b0
  %v3_1000a8e8 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000a8e8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a8f4

dec_label_pc_1000a8f0:                            ; preds = %dec_label_pc_1000a8b0, %dec_label_pc_1000a89c
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a8f4

dec_label_pc_1000a8f4:                            ; preds = %dec_label_pc_1000a8e8, %dec_label_pc_1000a858, %dec_label_pc_1000a8f0
  %v0_1000a8f8 = phi i32 [ %v3_1000a8e8, %dec_label_pc_1000a8e8 ], [ %v0_1000a8f8.pre, %dec_label_pc_1000a858 ], [ -1, %dec_label_pc_1000a8f0 ]
  ret i32 %v0_1000a8f8

; uselistorder directives
  uselistorder i32 %v1_1000a898, { 1, 0 }
  uselistorder i32 %v2_1000a894, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a8f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a888.dec_label_pc_1000a888_crit_edge, { 1, 0 }
}

define i32 @function_1000a90c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a90c:
  %v1_1000a90c = add i32 %arg2, -1
  %v1_1000a910 = call i32 @__asm_rlwinm(i32 %v1_1000a90c, i32 29, i32 3, i32 29)
  %v1_1000a914 = urem i32 %v1_1000a90c, 32
  %v2_1000a918 = add i32 %v1_1000a910, %arg1
  %v3_1000a918 = inttoptr i32 %v2_1000a918 to i32*
  %v4_1000a918 = load i32, i32* %v3_1000a918, align 4
  %v3_1000a920 = shl i32 1, %v1_1000a914
  %v2_1000a924 = and i32 %v4_1000a918, %v3_1000a920
  %v2_1000a928 = icmp ne i32 %v2_1000a924, 0
  %v5_1000a92c = zext i1 %v2_1000a928 to i32
  ret i32 %v5_1000a92c
}

define i32 @function_1000a934() local_unnamed_addr {
dec_label_pc_1000a934:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000a934 = load i32, i32* @r4, align 4
  %v1_1000a934 = add i32 %v0_1000a934, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000a93c = call i32 @__asm_rlwinm(i32 %v1_1000a934, i32 29, i32 3, i32 29)
  %v1_1000a940 = urem i32 %v1_1000a934, 32
  %v1_1000a944 = load i32, i32* @r3, align 4
  %v2_1000a944 = add i32 %v1_1000a944, %v1_1000a93c
  %v3_1000a944 = inttoptr i32 %v2_1000a944 to i32*
  %v4_1000a944 = load i32, i32* %v3_1000a944, align 4
  %v0_1000a948 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000a948 = shl i32 %v0_1000a948, %v1_1000a940
  store i32 %v3_1000a948, i32* %r0.global-to-local, align 4
  %v2_1000a94c = or i32 %v3_1000a948, %v4_1000a944
  store i32 %v2_1000a94c, i32* %v3_1000a944, align 4
  ret i32 0
}

define i32 @function_1000a95c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a95c:
  %v1_1000a95c = add i32 %arg2, -1
  %v1_1000a964 = call i32 @__asm_rlwinm(i32 %v1_1000a95c, i32 29, i32 3, i32 29)
  %v1_1000a968 = urem i32 %v1_1000a95c, 32
  %v2_1000a96c = add i32 %v1_1000a964, %arg1
  %v3_1000a96c = inttoptr i32 %v2_1000a96c to i32*
  %v4_1000a96c = load i32, i32* %v3_1000a96c, align 4
  %v3_1000a970 = shl i32 -2, %v1_1000a968
  %v4_1000a970 = sub nsw i32 32, %v1_1000a968
  %v5_1000a970 = lshr i32 -2, %v4_1000a970
  %v6_1000a970 = or i32 %v5_1000a970, %v3_1000a970
  %v2_1000a974 = and i32 %v6_1000a970, %v4_1000a96c
  store i32 %v2_1000a974, i32* %v3_1000a96c, align 4
  ret i32 0
}

define i32 @function_1000a984() local_unnamed_addr {
dec_label_pc_1000a984:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000a984 = load i32, i32* @r3, align 4
  %v3_1000a984 = icmp eq i32 %v0_1000a984, 0
  br i1 %v3_1000a984, label %dec_label_pc_1000a9a0.thread, label %dec_label_pc_1000a9a0

dec_label_pc_1000a9a0.thread:                     ; preds = %dec_label_pc_1000a984
  br label %dec_label_pc_1000a9ac

dec_label_pc_1000a9a0:                            ; preds = %dec_label_pc_1000a984
  %v3_1000a9a4 = icmp ugt i32 %v0_1000a984, -8
  br i1 %v3_1000a9a4, label %dec_label_pc_1000aab4, label %dec_label_pc_1000a9ac

dec_label_pc_1000a9ac:                            ; preds = %dec_label_pc_1000a9a0.thread, %dec_label_pc_1000a9a0
  %v0_1000a9b016 = phi i32 [ 1, %dec_label_pc_1000a9a0.thread ], [ %v0_1000a984, %dec_label_pc_1000a9a0 ]
  %v1_1000a9b0 = add i32 %v0_1000a9b016, 4
  store i32 ptrtoint (i32* @global_var_1001d248.513 to i32), i32* @r29, align 4
  store i32 %v1_1000a9b0, i32* %stack_var_-40, align 4
  %v0_1000a9c0 = call i32 @function_1000b4e0()
  %v2_1000a9c8 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000a9d0 = call i32 @function_1000ad7c(i32* inttoptr (i32 268554608 to i32*), i32 %v2_1000a9c8)
  store i32 %v3_1000a9d0, i32* %r31.global-to-local, align 4
  %v0_1000a9dc = call i32 @function_1000b4e0()
  %v3_1000a9e0 = icmp eq i32 %v3_1000a9d0, 0
  br i1 %v3_1000a9e0, label %dec_label_pc_1000a9e8, label %dec_label_pc_1000aa98.thread

dec_label_pc_1000aa98.thread:                     ; preds = %dec_label_pc_1000a9ac
  br label %dec_label_pc_1000aaac

dec_label_pc_1000a9e8:                            ; preds = %dec_label_pc_1000a9ac
  %v3_1000a9ec = load i32, i32* @global_var_1001d1cc.516, align 4
  store i32 %v3_1000a9ec, i32* %r31.global-to-local, align 4
  %v3_1000a9f0 = load i32, i32* %stack_var_-40, align 4
  %v2_1000a9f4 = icmp ult i32 %v3_1000a9f0, %v3_1000a9ec
  br i1 %v2_1000a9f4, label %dec_label_pc_1000aa0c, label %dec_label_pc_1000a9fc

dec_label_pc_1000a9fc:                            ; preds = %dec_label_pc_1000a9e8
  %v1_1000aa00 = sub i32 0, %v3_1000a9ec
  %v2_1000a9fc = add i32 %v3_1000a9ec, -1
  %v1_1000aa04 = add i32 %v2_1000a9fc, %v3_1000a9f0
  %v2_1000aa08 = and i32 %v1_1000aa04, %v1_1000aa00
  store i32 %v2_1000aa08, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000aa0c

dec_label_pc_1000aa0c:                            ; preds = %dec_label_pc_1000a9e8, %dec_label_pc_1000a9fc
  %v0_1000aa18 = call i32 @function_1000b4e0()
  %v0_1000aa1c = load i32, i32* %r31.global-to-local, align 4
  store i32 268479012, i32* @lr, align 4
  %v1_1000aa20 = call i32 @function_1000bd00(i32 %v0_1000aa1c)
  %v3_1000aa24 = icmp eq i32 %v1_1000aa20, -1
  br i1 %v3_1000aa24, label %dec_label_pc_1000aa44, label %dec_label_pc_1000aa2c

dec_label_pc_1000aa2c:                            ; preds = %dec_label_pc_1000aa0c
  %v1_1000aa2c = add i32 %v1_1000aa20, 3
  %v1_1000aa30 = call i32 @__asm_rlwinm(i32 %v1_1000aa2c, i32 0, i32 0, i32 29)
  store i32 %v1_1000aa30, i32* @r30, align 4
  %v4_1000aa34 = icmp eq i32 %v1_1000aa30, %v1_1000aa20
  br i1 %v4_1000aa34, label %dec_label_pc_1000aa44, label %dec_label_pc_1000aa3c

dec_label_pc_1000aa3c:                            ; preds = %dec_label_pc_1000aa2c
  %v2_1000aa3c = sub i32 %v1_1000aa30, %v1_1000aa20
  store i32 268479044, i32* @lr, align 4
  %v1_1000aa40 = call i32 @function_1000bd00(i32 %v2_1000aa3c)
  br label %dec_label_pc_1000aa44

dec_label_pc_1000aa44:                            ; preds = %dec_label_pc_1000aa2c, %dec_label_pc_1000aa0c, %dec_label_pc_1000aa3c
  %v0_1000aa4c = call i32 @function_1000b4e0()
  %v0_1000aa50 = load i32, i32* @r30, align 4
  %v3_1000aa50 = icmp eq i32 %v0_1000aa50, -1
  br i1 %v3_1000aa50, label %dec_label_pc_1000aab4, label %dec_label_pc_1000aa98

dec_label_pc_1000aa98:                            ; preds = %dec_label_pc_1000aa44
  store i32 ptrtoint (i32* @global_var_1001d248.513 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001d170 to i32), i32* @r29, align 4
  %v0_1000aa6c = call i32 @function_1000b4e0()
  %v0_1000aa70 = load i32, i32* @r31, align 4
  %v0_1000aa74 = load i32, i32* @r30, align 4
  %v0_1000aa78 = load i32, i32* @r29, align 4
  store i32 268479104, i32* @lr, align 4
  %v3_1000aa7c = inttoptr i32 %v0_1000aa78 to i32*
  %v4_1000aa7c = call i32 @function_1000af00(i32* %v3_1000aa7c, i32 %v0_1000aa74, i32 %v0_1000aa70)
  %v0_1000aa80 = load i32, i32* @r29, align 4
  %v2_1000aa88 = inttoptr i32 %v0_1000aa80 to i32*
  %v3_1000aa88 = call i32 @function_1000ad7c(i32* %v2_1000aa88, i32 %v2_1000a9c8)
  store i32 %v3_1000aa88, i32* %r31.global-to-local, align 4
  %v0_1000aa94 = call i32 @function_1000b4e0()
  %v3_1000aa98 = icmp eq i32 %v3_1000aa88, 0
  br i1 %v3_1000aa98, label %dec_label_pc_1000aaac.thread, label %dec_label_pc_1000aaac

dec_label_pc_1000aaac.thread:                     ; preds = %dec_label_pc_1000aa98
  br label %dec_label_pc_1000aab4

dec_label_pc_1000aaac:                            ; preds = %dec_label_pc_1000aa98, %dec_label_pc_1000aa98.thread
  %v0_1000aaac.pr6 = phi i32 [ %v3_1000a9d0, %dec_label_pc_1000aa98.thread ], [ %v3_1000aa88, %dec_label_pc_1000aa98 ]
  %v3_1000aaa0 = load i32, i32* %stack_var_-40, align 4
  %v2_1000aaa4 = inttoptr i32 %v0_1000aaac.pr6 to i32*
  store i32 %v3_1000aaa0, i32* %v2_1000aaa4, align 4
  %v0_1000aaa8 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000aaa8 = add i32 %v0_1000aaa8, 4
  store i32 %v1_1000aaa8, i32* @r31, align 4
  %v3_1000aaac = icmp eq i32 %v1_1000aaa8, 0
  br i1 %v3_1000aaac, label %dec_label_pc_1000aab4, label %dec_label_pc_1000aac4

dec_label_pc_1000aab4:                            ; preds = %dec_label_pc_1000aaac.thread, %dec_label_pc_1000aaac, %dec_label_pc_1000aa44, %dec_label_pc_1000a9a0
  %v0_1000aab4 = call i32 @function_1000a14c()
  %v2_1000aabc = inttoptr i32 %v0_1000aab4 to i32*
  store i32 12, i32* %v2_1000aabc, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000aac4

dec_label_pc_1000aac4:                            ; preds = %dec_label_pc_1000aaac, %dec_label_pc_1000aab4
  %v0_1000aac8 = phi i32 [ %v1_1000aaa8, %dec_label_pc_1000aaac ], [ 0, %dec_label_pc_1000aab4 ]
  ret i32 %v0_1000aac8

; uselistorder directives
  uselistorder i32 %v1_1000aaa8, { 1, 0, 2 }
  uselistorder i32 %v1_1000aa30, { 1, 0, 2 }
  uselistorder i32 %v1_1000aa20, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000a9ec, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000a9d0, { 1, 0, 2 }
  uselistorder i32 %v0_1000a984, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000aac4, { 1, 0 }
  uselistorder label %dec_label_pc_1000aab4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000aa44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000aa0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a9ac, { 1, 0 }
}

define i32 @function_1000aadc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000aadc:
  %v3_1000aadc = icmp eq i32 %arg1, 0
  %v2_1000aaec = mul i32 %arg2, %arg1
  store i32 %v2_1000aaec, i32* @r31, align 4
  br i1 %v3_1000aadc, label %dec_label_pc_1000ab18, label %dec_label_pc_1000aaf8

dec_label_pc_1000aaf8:                            ; preds = %dec_label_pc_1000aadc
  %v2_1000aaf8 = udiv i32 %v2_1000aaec, %arg1
  store i32 0, i32* @r30, align 4
  %v4_1000ab00 = icmp eq i32 %v2_1000aaf8, %arg2
  br i1 %v4_1000ab00, label %dec_label_pc_1000ab18, label %dec_label_pc_1000ab08

dec_label_pc_1000ab08:                            ; preds = %dec_label_pc_1000aaf8
  %v0_1000ab08 = call i32 @function_1000a14c()
  %v2_1000ab10 = inttoptr i32 %v0_1000ab08 to i32*
  store i32 12, i32* %v2_1000ab10, align 4
  br label %dec_label_pc_1000ab34

dec_label_pc_1000ab18:                            ; preds = %dec_label_pc_1000aaf8, %dec_label_pc_1000aadc
  store i32 %v2_1000aaec, i32* @r3, align 4
  store i32 268479264, i32* @lr, align 4
  %v0_1000ab1c = call i32 @function_1000a984()
  %v0_1000ab20 = load i32, i32* @r31, align 4
  store i32 %v0_1000ab1c, i32* @r30, align 4
  %v3_1000ab24 = icmp eq i32 %v0_1000ab1c, 0
  br i1 %v3_1000ab24, label %dec_label_pc_1000ab34, label %dec_label_pc_1000ab30

dec_label_pc_1000ab30:                            ; preds = %dec_label_pc_1000ab18
  store i32 268479284, i32* @lr, align 4
  %v3_1000ab30 = call i32 @function_1000a234(i32 0, i32 %v0_1000ab20, i32 %v0_1000ab20)
  br label %dec_label_pc_1000ab34

dec_label_pc_1000ab34:                            ; preds = %dec_label_pc_1000ab18, %dec_label_pc_1000ab08, %dec_label_pc_1000ab30
  %v0_1000ab38 = load i32, i32* @r30, align 4
  ret i32 %v0_1000ab38

; uselistorder directives
  uselistorder i32 %v0_1000ab20, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ab34, { 2, 0, 1 }
}

define i32 @function_1000ab4c() local_unnamed_addr {
dec_label_pc_1000ab4c:
  %v0_1000ab4c = load i32, i32* @r3, align 4
  %v3_1000ab4c = icmp eq i32 %v0_1000ab4c, 0
  br i1 %v3_1000ab4c, label %dec_label_pc_1000ac38, label %dec_label_pc_1000ab64

dec_label_pc_1000ab64:                            ; preds = %dec_label_pc_1000ab4c
  %v1_1000ab68 = add i32 %v0_1000ab4c, -4
  %v2_1000ab68 = inttoptr i32 %v1_1000ab68 to i32*
  %v3_1000ab68 = load i32, i32* %v2_1000ab68, align 4
  store i32 %v3_1000ab68, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_1000ab7c = call i32 @function_1000b4e0()
  %v0_1000ab84 = load i32, i32* @r28, align 4
  store i32 268479376, i32* @lr, align 4
  %v4_1000ab8c = call i32 @function_1000af00(i32* nonnull @global_var_1001d170, i32 %v1_1000ab68, i32 %v0_1000ab84)
  %v3_1000ab94 = load i32, i32* @global_var_1001d1cc.516, align 4
  store i32 %v4_1000ab8c, i32* @r29, align 4
  %v1_1000ab9c = inttoptr i32 %v4_1000ab8c to i32*
  %v2_1000ab9c = load i32, i32* %v1_1000ab9c, align 4
  store i32 %v2_1000ab9c, i32* @r27, align 4
  %v1_1000aba0 = mul i32 %v3_1000ab94, 8
  %v2_1000aba4 = icmp ult i32 %v2_1000ab9c, %v1_1000aba0
  br i1 %v2_1000aba4, label %dec_label_pc_1000abd8, label %dec_label_pc_1000abac

dec_label_pc_1000abac:                            ; preds = %dec_label_pc_1000ab64
  store i32 ptrtoint (i32* @global_var_1001d490.517 to i32), i32* @r28, align 4
  %v0_1000abbc = call i32 @function_1000b4e0()
  store i32 268479432, i32* @lr, align 4
  %v1_1000abc4 = call i32 @function_1000bd00(i32 0)
  %v0_1000abc8 = load i32, i32* @r31, align 4
  %v4_1000abc8 = icmp eq i32 %v0_1000abc8, %v1_1000abc4
  br i1 %v4_1000abc8, label %dec_label_pc_1000abe0, label %dec_label_pc_1000abd0

dec_label_pc_1000abd0:                            ; preds = %dec_label_pc_1000abac
  %v0_1000abd4 = call i32 @function_1000b4e0()
  br label %dec_label_pc_1000abd8

dec_label_pc_1000abd8:                            ; preds = %dec_label_pc_1000ab64, %dec_label_pc_1000abd0
  br label %dec_label_pc_1000ac34

dec_label_pc_1000abe0:                            ; preds = %dec_label_pc_1000abac
  %v0_1000abe0 = load i32, i32* @r29, align 4
  %v1_1000abe0 = add i32 %v0_1000abe0, 4
  %v2_1000abe0 = inttoptr i32 %v1_1000abe0 to i32*
  %v3_1000abe0 = load i32, i32* %v2_1000abe0, align 4
  %v3_1000abe4 = icmp eq i32 %v3_1000abe0, 0
  br i1 %v3_1000abe4, label %dec_label_pc_1000abf4, label %dec_label_pc_1000abec

dec_label_pc_1000abec:                            ; preds = %dec_label_pc_1000abe0
  %v1_1000abec = add i32 %v0_1000abe0, 8
  %v2_1000abec = inttoptr i32 %v1_1000abec to i32*
  %v3_1000abec = load i32, i32* %v2_1000abec, align 4
  %v2_1000abf0 = add i32 %v3_1000abe0, 8
  %v3_1000abf0 = inttoptr i32 %v2_1000abf0 to i32*
  store i32 %v3_1000abec, i32* %v3_1000abf0, align 4
  %v0_1000abf4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000abf4

dec_label_pc_1000abf4:                            ; preds = %dec_label_pc_1000abe0, %dec_label_pc_1000abec
  %v0_1000abf4 = phi i32 [ %v0_1000abe0, %dec_label_pc_1000abe0 ], [ %v0_1000abf4.pre, %dec_label_pc_1000abec ]
  %v1_1000abf4 = add i32 %v0_1000abf4, 8
  %v2_1000abf4 = inttoptr i32 %v1_1000abf4 to i32*
  %v3_1000abf4 = load i32, i32* %v2_1000abf4, align 4
  %v1_1000abf8 = add i32 %v0_1000abf4, 4
  %v2_1000abf8 = inttoptr i32 %v1_1000abf8 to i32*
  %v3_1000abf8 = load i32, i32* %v2_1000abf8, align 4
  %v3_1000abfc = icmp eq i32 %v3_1000abf4, 0
  br i1 %v3_1000abfc, label %dec_label_pc_1000ac0c, label %dec_label_pc_1000ac04

dec_label_pc_1000ac04:                            ; preds = %dec_label_pc_1000abf4
  %v2_1000ac04 = add i32 %v3_1000abf4, 4
  %v3_1000ac04 = inttoptr i32 %v2_1000ac04 to i32*
  store i32 %v3_1000abf8, i32* %v3_1000ac04, align 4
  br label %dec_label_pc_1000ac10

dec_label_pc_1000ac0c:                            ; preds = %dec_label_pc_1000abf4
  store i32 %v3_1000abf8, i32* @global_var_1001d170, align 4
  br label %dec_label_pc_1000ac10

dec_label_pc_1000ac10:                            ; preds = %dec_label_pc_1000ac04, %dec_label_pc_1000ac0c
  %v0_1000ac18 = call i32 @function_1000b4e0()
  %v0_1000ac1c = load i32, i32* @r27, align 4
  %v1_1000ac1c = load i32, i32* @r29, align 4
  %v0_1000ac24 = load i32, i32* @r31, align 4
  %v2_1000ac1c = sub i32 12, %v0_1000ac1c
  %v1_1000ac20 = add i32 %v2_1000ac1c, %v1_1000ac1c
  %v2_1000ac24 = sub i32 %v1_1000ac20, %v0_1000ac24
  store i32 268479532, i32* @lr, align 4
  %v1_1000ac28 = call i32 @function_1000bd00(i32 %v2_1000ac24)
  br label %dec_label_pc_1000ac34

dec_label_pc_1000ac34:                            ; preds = %dec_label_pc_1000abd8, %dec_label_pc_1000ac10
  %v0_1000ac34 = call i32 @function_1000b4e0()
  br label %dec_label_pc_1000ac38

dec_label_pc_1000ac38:                            ; preds = %dec_label_pc_1000ab4c, %dec_label_pc_1000ac34
  %.0 = phi i32 [ undef, %dec_label_pc_1000ab4c ], [ %v0_1000ac34, %dec_label_pc_1000ac34 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000abf4, { 1, 0 }
  uselistorder i32 (i32)* @function_1000bd00, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000ac38, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac34, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac10, { 1, 0 }
  uselistorder label %dec_label_pc_1000abf4, { 1, 0 }
  uselistorder label %dec_label_pc_1000abd8, { 1, 0 }
}

define i32 @function_1000ac4c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000ac4c:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_1000ac4c = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000ac4c, label %dec_label_pc_1000ac68, label %dec_label_pc_1000ac74

dec_label_pc_1000ac68:                            ; preds = %dec_label_pc_1000ac4c
  store i32 ptrtoint ([3 x i8]* @global_var_1000ac6c.521 to i32), i32* @lr, align 4
  %v0_1000ac68 = call i32 @function_1000ab4c()
  br label %dec_label_pc_1000ac80

dec_label_pc_1000ac74:                            ; preds = %dec_label_pc_1000ac4c
  %v3_1000ac74 = icmp eq i32 %arg1, 0
  br i1 %v3_1000ac74, label %dec_label_pc_1000ac80, label %dec_label_pc_1000ac8c

dec_label_pc_1000ac80:                            ; preds = %dec_label_pc_1000ac74, %dec_label_pc_1000ac68
  %storemerge = phi i32 [ 0, %dec_label_pc_1000ac68 ], [ %arg2, %dec_label_pc_1000ac74 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268479620, i32* @lr, align 4
  %v0_1000ac80 = call i32 @function_1000a984()
  store i32 %v0_1000ac80, i32* @r28, align 4
  br label %dec_label_pc_1000ad64

dec_label_pc_1000ac8c:                            ; preds = %dec_label_pc_1000ac74
  %v1_1000ac8c = add i32 %arg2, 7
  %v1_1000ac90 = add i32 %arg1, -4
  store i32 %v1_1000ac90, i32* %r27.global-to-local, align 4
  %v1_1000ac94 = call i32 @__asm_rlwinm(i32 %v1_1000ac8c, i32 0, i32 0, i32 29)
  store i32 %v1_1000ac94, i32* @r31, align 4
  %v2_1000ac98 = inttoptr i32 %v1_1000ac90 to i32*
  %v3_1000ac98 = load i32, i32* %v2_1000ac98, align 4
  store i32 %v3_1000ac98, i32* @r30, align 4
  %v2_1000ac9c = icmp ugt i32 %v1_1000ac94, 11
  br i1 %v2_1000ac9c, label %dec_label_pc_1000aca8, label %dec_label_pc_1000aca4

dec_label_pc_1000aca4:                            ; preds = %dec_label_pc_1000ac8c
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_1000aca8

dec_label_pc_1000aca8:                            ; preds = %dec_label_pc_1000ac8c, %dec_label_pc_1000aca4
  %v0_1000ad28 = phi i32 [ %v1_1000ac94, %dec_label_pc_1000ac8c ], [ 12, %dec_label_pc_1000aca4 ]
  %v3_1000aca8 = icmp ugt i32 %v0_1000ad28, %v3_1000ac98
  br i1 %v3_1000aca8, label %dec_label_pc_1000acb0, label %dec_label_pc_1000ad28

dec_label_pc_1000acb0:                            ; preds = %dec_label_pc_1000aca8
  store i32 ptrtoint (i32* @global_var_1001d248.513 to i32), i32* @r29, align 4
  %v0_1000acbc = call i32 @function_1000b4e0()
  %v0_1000acc4 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000acc4 = load i32, i32* @r30, align 4
  %v2_1000acc4 = add i32 %v1_1000acc4, %v0_1000acc4
  %v1_1000acc8 = load i32, i32* @r31, align 4
  %v2_1000acc8 = sub i32 %v1_1000acc8, %v1_1000acc4
  %v4_1000acd0 = call i32 @function_1000ae1c(i32* nonnull @global_var_1001d170, i32 %v2_1000acc4, i32 %v2_1000acc8)
  store i32 %v4_1000acd0, i32* %r27.global-to-local, align 4
  %v0_1000acdc = call i32 @function_1000b4e0()
  %v3_1000ace0 = icmp eq i32 %v4_1000acd0, 0
  br i1 %v3_1000ace0, label %dec_label_pc_1000acf4, label %dec_label_pc_1000ace8

dec_label_pc_1000ace8:                            ; preds = %dec_label_pc_1000acb0
  %v0_1000ace8 = load i32, i32* @r30, align 4
  %v2_1000ace8 = add i32 %v0_1000ace8, %v4_1000acd0
  %v1_1000acec = load i32, i32* @r28, align 4
  %v2_1000acec = add i32 %v1_1000acec, -4
  %v3_1000acec = inttoptr i32 %v2_1000acec to i32*
  store i32 %v2_1000ace8, i32* %v3_1000acec, align 4
  br label %dec_label_pc_1000ad64

dec_label_pc_1000acf4:                            ; preds = %dec_label_pc_1000acb0
  %v0_1000acf4 = load i32, i32* @r31, align 4
  %v1_1000acf4 = add i32 %v0_1000acf4, -4
  store i32 %v1_1000acf4, i32* @r3, align 4
  store i32 268479740, i32* @lr, align 4
  %v0_1000acf8 = call i32 @function_1000a984()
  store i32 %v0_1000acf8, i32* @r3, align 4
  store i32 %v0_1000acf8, i32* @r31, align 4
  %v3_1000acfc = icmp eq i32 %v0_1000acf8, 0
  br i1 %v3_1000acfc, label %dec_label_pc_1000ad04, label %dec_label_pc_1000ad0c

dec_label_pc_1000ad04:                            ; preds = %dec_label_pc_1000acf4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000ad64

dec_label_pc_1000ad0c:                            ; preds = %dec_label_pc_1000acf4
  %v0_1000ad0c = load i32, i32* @r28, align 4
  store i32 %v0_1000ad0c, i32* @r4, align 4
  %v0_1000ad10 = load i32, i32* @r30, align 4
  %v1_1000ad10 = add i32 %v0_1000ad10, -4
  store i32 %v1_1000ad10, i32* @r5, align 4
  store i32 268479768, i32* @lr, align 4
  %v0_1000ad14 = call i32 @function_1000bf34()
  %v0_1000ad18 = load i32, i32* @r28, align 4
  store i32 %v0_1000ad18, i32* @r3, align 4
  store i32 268479776, i32* @lr, align 4
  %v0_1000ad1c = call i32 @function_1000ab4c()
  %v0_1000ad20 = load i32, i32* @r31, align 4
  store i32 %v0_1000ad20, i32* @r28, align 4
  br label %dec_label_pc_1000ad64

dec_label_pc_1000ad28:                            ; preds = %dec_label_pc_1000aca8
  %v1_1000ad28 = add i32 %v0_1000ad28, 28
  %v3_1000ad2c = icmp ugt i32 %v1_1000ad28, %v3_1000ac98
  br i1 %v3_1000ad2c, label %dec_label_pc_1000ad64, label %dec_label_pc_1000ad34

dec_label_pc_1000ad34:                            ; preds = %dec_label_pc_1000ad28
  store i32 ptrtoint (i32* @global_var_1001d248.513 to i32), i32* @r29, align 4
  %v0_1000ad40 = call i32 @function_1000b4e0()
  %v0_1000ad48 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000ad48 = load i32, i32* @r31, align 4
  %v2_1000ad48 = add i32 %v1_1000ad48, %v0_1000ad48
  %v1_1000ad4c = load i32, i32* @r30, align 4
  %v2_1000ad4c = sub i32 %v1_1000ad4c, %v1_1000ad48
  store i32 268479832, i32* @lr, align 4
  %v4_1000ad54 = call i32 @function_1000af00(i32* nonnull @global_var_1001d170, i32 %v2_1000ad48, i32 %v2_1000ad4c)
  %v0_1000ad5c = call i32 @function_1000b4e0()
  %v0_1000ad60 = load i32, i32* @r31, align 4
  %v1_1000ad60 = load i32, i32* @r28, align 4
  %v2_1000ad60 = add i32 %v1_1000ad60, -4
  %v3_1000ad60 = inttoptr i32 %v2_1000ad60 to i32*
  store i32 %v0_1000ad60, i32* %v3_1000ad60, align 4
  br label %dec_label_pc_1000ad64

dec_label_pc_1000ad64:                            ; preds = %dec_label_pc_1000ad28, %dec_label_pc_1000ad0c, %dec_label_pc_1000ad04, %dec_label_pc_1000ace8, %dec_label_pc_1000ac80, %dec_label_pc_1000ad34
  %v0_1000ad68 = load i32, i32* @r28, align 4
  ret i32 %v0_1000ad68

; uselistorder directives
  uselistorder i32 %v1_1000ad48, { 1, 0 }
  uselistorder i32 %v4_1000acd0, { 1, 0, 2 }
  uselistorder i32 %v1_1000acc4, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32, i32)* @function_1000af00, { 0, 2, 1 }
  uselistorder i32* @global_var_1001d170, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_1000a984, { 2, 1, 0, 4, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3 }
  uselistorder i32 ()* @function_1000ab4c, { 4, 3, 7, 6, 5, 11, 10, 9, 8, 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000ad64, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000aca8, { 1, 0 }
}

define i32 @function_1000ad7c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ad7c:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000ad7c = inttoptr i32 %arg2 to i32*
  %v2_1000ad7c = load i32, i32* %v1_1000ad7c, align 4
  %v1_1000ad80 = add i32 %v2_1000ad7c, 3
  store i32 %v1_1000ad80, i32* %r9.global-to-local, align 4
  %v1_1000ad84 = call i32 @__asm_rlwinm(i32 %v1_1000ad80, i32 0, i32 0, i32 29)
  %v2_1000ad88 = icmp ugt i32 %v1_1000ad84, 11
  br i1 %v2_1000ad88, label %dec_label_pc_1000ae0c.preheader, label %dec_label_pc_1000ad90

dec_label_pc_1000ad90:                            ; preds = %dec_label_pc_1000ad7c
  br label %dec_label_pc_1000ae0c.preheader

dec_label_pc_1000ae0c.preheader:                  ; preds = %dec_label_pc_1000ad7c, %dec_label_pc_1000ad90
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000ad90 ], [ %v1_1000ad84, %dec_label_pc_1000ad7c ]
  %v0_1000adf0 = phi i32 [ 12, %dec_label_pc_1000ad90 ], [ %v1_1000ad84, %dec_label_pc_1000ad7c ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000ae0c5 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000ae0c5, label %dec_label_pc_1000ae14, label %dec_label_pc_1000ad9c

dec_label_pc_1000ad9c:                            ; preds = %dec_label_pc_1000ae0c.preheader, %dec_label_pc_1000ae08
  %v0_1000ae08 = phi i32 [ %storemerge, %dec_label_pc_1000ae08 ], [ %storemerge2, %dec_label_pc_1000ae0c.preheader ]
  %v1_1000ad9c = inttoptr i32 %v0_1000ae08 to i32*
  %v2_1000ad9c = load i32, i32* %v1_1000ad9c, align 4
  store i32 %v2_1000ad9c, i32* %r10.global-to-local, align 4
  %v2_1000ada0 = icmp ult i32 %v2_1000ad9c, %v0_1000adf0
  br i1 %v2_1000ada0, label %dec_label_pc_1000ae08, label %dec_label_pc_1000ada8

dec_label_pc_1000ada8:                            ; preds = %dec_label_pc_1000ad9c
  %v1_1000ada8 = add i32 %v0_1000adf0, 44
  %v2_1000adac = icmp ult i32 %v2_1000ad9c, %v1_1000ada8
  br i1 %v2_1000adac, label %dec_label_pc_1000adb4, label %dec_label_pc_1000adf0

dec_label_pc_1000adb4:                            ; preds = %dec_label_pc_1000ada8
  %v1_1000adb4 = add i32 %v0_1000ae08, 4
  %v2_1000adb4 = inttoptr i32 %v1_1000adb4 to i32*
  %v3_1000adb4 = load i32, i32* %v2_1000adb4, align 4
  store i32 %v3_1000adb4, i32* %r11.global-to-local, align 4
  %v3_1000adb8 = icmp eq i32 %v3_1000adb4, 0
  br i1 %v3_1000adb8, label %dec_label_pc_1000adc8, label %dec_label_pc_1000adc0

dec_label_pc_1000adc0:                            ; preds = %dec_label_pc_1000adb4
  %v1_1000adc0 = add i32 %v0_1000ae08, 8
  %v2_1000adc0 = inttoptr i32 %v1_1000adc0 to i32*
  %v3_1000adc0 = load i32, i32* %v2_1000adc0, align 4
  %v2_1000adc4 = add i32 %v3_1000adb4, 8
  %v3_1000adc4 = inttoptr i32 %v2_1000adc4 to i32*
  store i32 %v3_1000adc0, i32* %v3_1000adc4, align 4
  %v0_1000adc8.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000ade4.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000adc8

dec_label_pc_1000adc8:                            ; preds = %dec_label_pc_1000adb4, %dec_label_pc_1000adc0
  %v0_1000ade4 = phi i32 [ %v2_1000ad9c, %dec_label_pc_1000adb4 ], [ %v0_1000ade4.pre, %dec_label_pc_1000adc0 ]
  %v0_1000adc8 = phi i32 [ %v0_1000ae08, %dec_label_pc_1000adb4 ], [ %v0_1000adc8.pre, %dec_label_pc_1000adc0 ]
  %v1_1000adc8 = add i32 %v0_1000adc8, 8
  %v2_1000adc8 = inttoptr i32 %v1_1000adc8 to i32*
  %v3_1000adc8 = load i32, i32* %v2_1000adc8, align 4
  %v1_1000adcc = add i32 %v0_1000adc8, 4
  %v2_1000adcc = inttoptr i32 %v1_1000adcc to i32*
  %v3_1000adcc = load i32, i32* %v2_1000adcc, align 4
  %v3_1000add0 = icmp eq i32 %v3_1000adc8, 0
  store i32 %v0_1000ade4, i32* %r11.global-to-local, align 4
  br i1 %v3_1000add0, label %dec_label_pc_1000ade4, label %dec_label_pc_1000add8

dec_label_pc_1000add8:                            ; preds = %dec_label_pc_1000adc8
  %v2_1000addc = add i32 %v3_1000adc8, 4
  %v3_1000addc = inttoptr i32 %v2_1000addc to i32*
  store i32 %v3_1000adcc, i32* %v3_1000addc, align 4
  br label %dec_label_pc_1000adf8

dec_label_pc_1000ade4:                            ; preds = %dec_label_pc_1000adc8
  store i32 %v3_1000adcc, i32* %arg1, align 4
  br label %dec_label_pc_1000adf8

dec_label_pc_1000adf0:                            ; preds = %dec_label_pc_1000ada8
  %v2_1000adf0 = sub i32 %v2_1000ad9c, %v0_1000adf0
  store i32 %v2_1000adf0, i32* %v1_1000ad9c, align 4
  br label %dec_label_pc_1000adf8

dec_label_pc_1000adf8:                            ; preds = %dec_label_pc_1000ade4, %dec_label_pc_1000add8, %dec_label_pc_1000adf0
  %v0_1000adf8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000adf8 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000adf8 = sub i32 %v1_1000adf8, %v0_1000adf8
  store i32 %v2_1000adf8, i32* %r9.global-to-local, align 4
  %v0_1000adfc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000adfc, i32* %v1_1000ad7c, align 4
  %v0_1000ae00 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ae00 = add i32 %v0_1000ae00, 12
  ret i32 %v1_1000ae00

dec_label_pc_1000ae08:                            ; preds = %dec_label_pc_1000ad9c
  %v1_1000ae08 = add i32 %v0_1000ae08, 4
  %storemerge.in = inttoptr i32 %v1_1000ae08 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000ae0c = icmp eq i32 %storemerge, 0
  br i1 %v3_1000ae0c, label %dec_label_pc_1000ae0c.dec_label_pc_1000ae14_crit_edge, label %dec_label_pc_1000ad9c

dec_label_pc_1000ae0c.dec_label_pc_1000ae14_crit_edge: ; preds = %dec_label_pc_1000ae08
  br label %dec_label_pc_1000ae14

dec_label_pc_1000ae14:                            ; preds = %dec_label_pc_1000ae0c.dec_label_pc_1000ae14_crit_edge, %dec_label_pc_1000ae0c.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000adc8, { 1, 0 }
  uselistorder i32 %v2_1000ad9c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000ae08, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000adf0, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000adf8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000adc8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad9c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae0c.preheader, { 1, 0 }
}

define i32 @function_1000ae1c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000ae1c:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000ae1c = load i32, i32* %arg1, align 4
  store i32 %v2_1000ae1c, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_1000ae24 = add i32 %arg3, 3
  %v3_1000aea83 = icmp eq i32 %v2_1000ae1c, 0
  br i1 %v3_1000aea83, label %dec_label_pc_1000aeb0, label %dec_label_pc_1000ae2c

dec_label_pc_1000ae2c:                            ; preds = %dec_label_pc_1000ae1c, %dec_label_pc_1000aea4
  %v0_1000aea4 = phi i32 [ %v3_1000aea4, %dec_label_pc_1000aea4 ], [ %v2_1000ae1c, %dec_label_pc_1000ae1c ]
  %v1_1000ae2c = inttoptr i32 %v0_1000aea4 to i32*
  %v2_1000ae2c = load i32, i32* %v1_1000ae2c, align 4
  %v2_1000ae30 = sub i32 %v0_1000aea4, %v2_1000ae2c
  %v1_1000ae34 = add i32 %v2_1000ae30, 12
  %v3_1000ae38 = icmp ugt i32 %v1_1000ae34, %arg2
  br i1 %v3_1000ae38, label %dec_label_pc_1000aea4, label %dec_label_pc_1000ae40

dec_label_pc_1000ae40:                            ; preds = %dec_label_pc_1000ae2c
  %v4_1000ae38 = icmp eq i32 %v1_1000ae34, %arg2
  br i1 %v4_1000ae38, label %dec_label_pc_1000ae48, label %dec_label_pc_1000aeb0

dec_label_pc_1000ae48:                            ; preds = %dec_label_pc_1000ae40
  %v1_1000ae48 = call i32 @__asm_rlwinm(i32 %v1_1000ae24, i32 0, i32 0, i32 29)
  %v2_1000ae4c = icmp ult i32 %v2_1000ae2c, %v1_1000ae48
  br i1 %v2_1000ae4c, label %dec_label_pc_1000aeb0, label %dec_label_pc_1000ae54

dec_label_pc_1000ae54:                            ; preds = %dec_label_pc_1000ae48
  %v1_1000ae54 = add i32 %v1_1000ae48, 44
  %v2_1000ae58 = icmp ult i32 %v2_1000ae2c, %v1_1000ae54
  br i1 %v2_1000ae58, label %dec_label_pc_1000ae60, label %dec_label_pc_1000ae94

dec_label_pc_1000ae60:                            ; preds = %dec_label_pc_1000ae54
  %v0_1000ae60 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ae60 = add i32 %v0_1000ae60, 4
  %v2_1000ae60 = inttoptr i32 %v1_1000ae60 to i32*
  %v3_1000ae60 = load i32, i32* %v2_1000ae60, align 4
  %v3_1000ae64 = icmp eq i32 %v3_1000ae60, 0
  br i1 %v3_1000ae64, label %dec_label_pc_1000ae74, label %dec_label_pc_1000ae6c

dec_label_pc_1000ae6c:                            ; preds = %dec_label_pc_1000ae60
  %v1_1000ae6c = add i32 %v0_1000ae60, 8
  %v2_1000ae6c = inttoptr i32 %v1_1000ae6c to i32*
  %v3_1000ae6c = load i32, i32* %v2_1000ae6c, align 4
  %v2_1000ae70 = add i32 %v3_1000ae60, 8
  %v3_1000ae70 = inttoptr i32 %v2_1000ae70 to i32*
  store i32 %v3_1000ae6c, i32* %v3_1000ae70, align 4
  %v0_1000ae74.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000ae74

dec_label_pc_1000ae74:                            ; preds = %dec_label_pc_1000ae60, %dec_label_pc_1000ae6c
  %v0_1000ae74 = phi i32 [ %v0_1000ae60, %dec_label_pc_1000ae60 ], [ %v0_1000ae74.pre, %dec_label_pc_1000ae6c ]
  %v1_1000ae74 = add i32 %v0_1000ae74, 8
  %v2_1000ae74 = inttoptr i32 %v1_1000ae74 to i32*
  %v3_1000ae74 = load i32, i32* %v2_1000ae74, align 4
  %v1_1000ae78 = add i32 %v0_1000ae74, 4
  %v2_1000ae78 = inttoptr i32 %v1_1000ae78 to i32*
  %v3_1000ae78 = load i32, i32* %v2_1000ae78, align 4
  %v3_1000ae7c = icmp eq i32 %v3_1000ae74, 0
  br i1 %v3_1000ae7c, label %dec_label_pc_1000ae8c, label %dec_label_pc_1000ae84

dec_label_pc_1000ae84:                            ; preds = %dec_label_pc_1000ae74
  %v2_1000ae84 = add i32 %v3_1000ae74, 4
  %v3_1000ae84 = inttoptr i32 %v2_1000ae84 to i32*
  store i32 %v3_1000ae78, i32* %v3_1000ae84, align 4
  ret i32 %v2_1000ae2c

dec_label_pc_1000ae8c:                            ; preds = %dec_label_pc_1000ae74
  %v1_1000ae8c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ae8c = inttoptr i32 %v1_1000ae8c to i32*
  store i32 %v3_1000ae78, i32* %v2_1000ae8c, align 4
  ret i32 %v2_1000ae2c

dec_label_pc_1000ae94:                            ; preds = %dec_label_pc_1000ae54
  %v2_1000ae94 = sub i32 %v2_1000ae2c, %v1_1000ae48
  %v1_1000ae9c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000ae9c = inttoptr i32 %v1_1000ae9c to i32*
  store i32 %v2_1000ae94, i32* %v2_1000ae9c, align 4
  ret i32 %v1_1000ae48

dec_label_pc_1000aea4:                            ; preds = %dec_label_pc_1000ae2c
  %v1_1000aea4 = add i32 %v0_1000aea4, 4
  %v2_1000aea4 = inttoptr i32 %v1_1000aea4 to i32*
  %v3_1000aea4 = load i32, i32* %v2_1000aea4, align 4
  store i32 %v3_1000aea4, i32* %r11.global-to-local, align 4
  %v3_1000aea8 = icmp eq i32 %v3_1000aea4, 0
  br i1 %v3_1000aea8, label %dec_label_pc_1000aea8.dec_label_pc_1000aeb0.loopexit_crit_edge, label %dec_label_pc_1000ae2c

dec_label_pc_1000aea8.dec_label_pc_1000aeb0.loopexit_crit_edge: ; preds = %dec_label_pc_1000aea4
  br label %dec_label_pc_1000aeb0

dec_label_pc_1000aeb0:                            ; preds = %dec_label_pc_1000ae1c, %dec_label_pc_1000aea8.dec_label_pc_1000aeb0.loopexit_crit_edge, %dec_label_pc_1000ae40, %dec_label_pc_1000ae48
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000aea4, { 1, 2, 0 }
  uselistorder i32 %v0_1000ae74, { 1, 0 }
  uselistorder i32 %v1_1000ae48, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000ae2c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1000aea4, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000aeb0, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000ae74, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae2c, { 1, 0 }
}

define i32 @function_1000aeb8(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000aeb8:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000aeb8 = icmp eq i32 %arg3, 0
  %v2_1000aebc = add i32 %arg2, 4
  %v3_1000aebc = inttoptr i32 %v2_1000aebc to i32*
  store i32 %arg4, i32* %v3_1000aebc, align 4
  %v2_1000aec0 = add i32 %arg2, 8
  %v3_1000aec0 = inttoptr i32 %v2_1000aec0 to i32*
  store i32 %arg3, i32* %v3_1000aec0, align 4
  br i1 %v3_1000aeb8, label %dec_label_pc_1000aed0, label %dec_label_pc_1000aec8

dec_label_pc_1000aec8:                            ; preds = %dec_label_pc_1000aeb8
  %v2_1000aec8 = add i32 %arg3, 4
  %v3_1000aec8 = inttoptr i32 %v2_1000aec8 to i32*
  store i32 %arg2, i32* %v3_1000aec8, align 4
  br label %dec_label_pc_1000aed4

dec_label_pc_1000aed0:                            ; preds = %dec_label_pc_1000aeb8
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000aed4

dec_label_pc_1000aed4:                            ; preds = %dec_label_pc_1000aec8, %dec_label_pc_1000aed0
  %v3_1000aed4 = icmp eq i32 %arg4, 0
  %v0_1000aed8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000aed4, i32 %v0_1000aed8)
  %v2_1000aedc = add i32 %arg4, 8
  %v3_1000aedc = inttoptr i32 %v2_1000aedc to i32*
  store i32 %arg2, i32* %v3_1000aedc, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000aed4, { 1, 0 }
}

define i32 @function_1000aee4(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000aee4:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000aee4 = icmp eq i32 %arg3, 0
  br i1 %v3_1000aee4, label %dec_label_pc_1000aef4, label %dec_label_pc_1000aeec

dec_label_pc_1000aeec:                            ; preds = %dec_label_pc_1000aee4
  %v2_1000aeec = add i32 %arg3, 4
  %v3_1000aeec = inttoptr i32 %v2_1000aeec to i32*
  store i32 %arg2, i32* %v3_1000aeec, align 4
  br label %dec_label_pc_1000aef8

dec_label_pc_1000aef4:                            ; preds = %dec_label_pc_1000aee4
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000aef8

dec_label_pc_1000aef8:                            ; preds = %dec_label_pc_1000aeec, %dec_label_pc_1000aef4
  %v2_1000aef8 = add i32 %arg2, 8
  %v3_1000aef8 = inttoptr i32 %v2_1000aef8 to i32*
  store i32 %arg3, i32* %v3_1000aef8, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000aef8, { 1, 0 }
}

define i32 @function_1000af00(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000af00:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000af18 = load i32, i32* %arg1, align 4
  store i32 %v2_1000af18, i32* @r31, align 4
  %v2_1000af1c = add i32 %arg3, %arg2
  store i32 %v2_1000af1c, i32* %r3.global-to-local, align 4
  %v3_1000af307 = icmp eq i32 %v2_1000af18, 0
  %v1_1000af348 = add i32 %v2_1000af18, 12
  %tmp69 = icmp uge i32 %v1_1000af348, %arg2
  %or.cond10 = or i1 %v3_1000af307, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000af40, label %dec_label_pc_1000af28

dec_label_pc_1000af28:                            ; preds = %dec_label_pc_1000af00, %dec_label_pc_1000af28
  %v0_1000af8811 = phi i32 [ %v3_1000af2c, %dec_label_pc_1000af28 ], [ %v2_1000af18, %dec_label_pc_1000af00 ]
  store i32 %v0_1000af8811, i32* %r11.global-to-local, align 4
  %v1_1000af2c = add i32 %v0_1000af8811, 4
  %v2_1000af2c = inttoptr i32 %v1_1000af2c to i32*
  %v3_1000af2c = load i32, i32* %v2_1000af2c, align 4
  store i32 %v3_1000af2c, i32* @r31, align 4
  %v3_1000af30 = icmp eq i32 %v3_1000af2c, 0
  %v1_1000af34 = add i32 %v3_1000af2c, 12
  %tmp6 = icmp uge i32 %v1_1000af34, %arg2
  %or.cond = or i1 %v3_1000af30, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000af40, label %dec_label_pc_1000af28

dec_label_pc_1000af40:                            ; preds = %dec_label_pc_1000af28, %dec_label_pc_1000af00
  %v0_1000af7c.lcssa = phi i32 [ 0, %dec_label_pc_1000af00 ], [ %v0_1000af8811, %dec_label_pc_1000af28 ]
  %v0_1000af88.lcssa = phi i32 [ %v2_1000af18, %dec_label_pc_1000af00 ], [ %v3_1000af2c, %dec_label_pc_1000af28 ]
  %v3_1000af30.lcssa = phi i1 [ %v3_1000af307, %dec_label_pc_1000af00 ], [ %v3_1000af30, %dec_label_pc_1000af28 ]
  br i1 %v3_1000af30.lcssa, label %dec_label_pc_1000aff8, label %dec_label_pc_1000af48

dec_label_pc_1000af48:                            ; preds = %dec_label_pc_1000af40
  %v1_1000af48 = inttoptr i32 %v0_1000af88.lcssa to i32*
  %v2_1000af48 = load i32, i32* %v1_1000af48, align 4
  %v2_1000af4c = sub i32 %v0_1000af88.lcssa, %v2_1000af48
  %v1_1000af50 = add i32 %v2_1000af4c, 12
  %v3_1000af54 = icmp ugt i32 %v1_1000af50, %v2_1000af1c
  br i1 %v3_1000af54, label %dec_label_pc_1000aff8, label %dec_label_pc_1000af5c

dec_label_pc_1000af5c:                            ; preds = %dec_label_pc_1000af48
  %v4_1000af54 = icmp eq i32 %v1_1000af50, %v2_1000af1c
  %v2_1000af60 = add i32 %v2_1000af48, %arg3
  store i32 %v2_1000af60, i32* @r29, align 4
  br i1 %v4_1000af54, label %dec_label_pc_1000af68, label %dec_label_pc_1000af98

dec_label_pc_1000af68:                            ; preds = %dec_label_pc_1000af5c
  %v3_1000af68 = icmp eq i32 %v0_1000af7c.lcssa, 0
  br i1 %v3_1000af68, label %dec_label_pc_1000afec, label %dec_label_pc_1000af70

dec_label_pc_1000af70:                            ; preds = %dec_label_pc_1000af68
  %v1_1000af70 = add i32 %v0_1000af7c.lcssa, 12
  %v4_1000af74 = icmp eq i32 %v1_1000af70, %arg2
  br i1 %v4_1000af74, label %dec_label_pc_1000af7c, label %dec_label_pc_1000afec

dec_label_pc_1000af7c:                            ; preds = %dec_label_pc_1000af70
  %v1_1000af7c = inttoptr i32 %v0_1000af7c.lcssa to i32*
  %v2_1000af7c = load i32, i32* %v1_1000af7c, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000af84 = add i32 %v0_1000af7c.lcssa, 8
  %v2_1000af84 = inttoptr i32 %v1_1000af84 to i32*
  %v3_1000af84 = load i32, i32* %v2_1000af84, align 4
  %v2_1000af8c = add i32 %v2_1000af7c, %v2_1000af60
  store i32 %v2_1000af8c, i32* @r29, align 4
  %v5_1000af90 = call i32 @function_1000aee4(i32* %arg1, i32 %v0_1000af88.lcssa, i32 %v3_1000af84, i32 %v2_1000af1c)
  store i32 %v5_1000af90, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000afec

dec_label_pc_1000af98:                            ; preds = %dec_label_pc_1000af5c
  %v1_1000af98 = add i32 %v0_1000af88.lcssa, 4
  %v2_1000af98 = inttoptr i32 %v1_1000af98 to i32*
  %v3_1000af98 = load i32, i32* %v2_1000af98, align 4
  %v3_1000af9c = icmp eq i32 %v3_1000af98, 0
  br i1 %v3_1000af9c, label %dec_label_pc_1000afd4, label %dec_label_pc_1000afa4

dec_label_pc_1000afa4:                            ; preds = %dec_label_pc_1000af98
  %v1_1000afa4 = inttoptr i32 %v3_1000af98 to i32*
  %v2_1000afa4 = load i32, i32* %v1_1000afa4, align 4
  %v2_1000afa8 = sub i32 %v3_1000af98, %v2_1000afa4
  %v1_1000afac = add i32 %v2_1000afa8, 12
  %v4_1000afb0 = icmp eq i32 %v2_1000af1c, %v1_1000afac
  br i1 %v4_1000afb0, label %dec_label_pc_1000afb8, label %dec_label_pc_1000afd4

dec_label_pc_1000afb8:                            ; preds = %dec_label_pc_1000afa4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000afc4 = add i32 %v2_1000afa4, %v2_1000af60
  store i32 %v2_1000afc4, i32* @r29, align 4
  store i32 %v3_1000af98, i32* @r31, align 4
  %v5_1000afcc = call i32 @function_1000aee4(i32* %arg1, i32 %v3_1000af98, i32 %v0_1000af7c.lcssa, i32 %v2_1000af1c)
  store i32 %v5_1000afcc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000afec

dec_label_pc_1000afd4:                            ; preds = %dec_label_pc_1000afa4, %dec_label_pc_1000af98
  %v2_1000afd4 = add i32 %v0_1000af88.lcssa, %arg3
  store i32 %v2_1000afd4, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268480492, i32* @lr, align 4
  %v5_1000afe8 = call i32 @function_1000aeb8(i32* %arg1, i32 %v2_1000afd4, i32 %v0_1000af7c.lcssa, i32 %v3_1000af98)
  store i32 %v5_1000afe8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000afec

dec_label_pc_1000afec:                            ; preds = %dec_label_pc_1000af70, %dec_label_pc_1000af68, %dec_label_pc_1000afb8, %dec_label_pc_1000af7c, %dec_label_pc_1000afd4
  %v0_1000afec = load i32, i32* @r31, align 4
  store i32 %v0_1000afec, i32* @r30, align 4
  %v0_1000aff0 = load i32, i32* @r29, align 4
  %v2_1000aff0 = inttoptr i32 %v0_1000afec to i32*
  store i32 %v0_1000aff0, i32* %v2_1000aff0, align 4
  br label %dec_label_pc_1000b014

dec_label_pc_1000aff8:                            ; preds = %dec_label_pc_1000af48, %dec_label_pc_1000af40
  %v2_1000aff8 = add i32 %v2_1000af1c, -12
  %v3_1000aff8 = inttoptr i32 %v2_1000aff8 to i32*
  store i32 %arg3, i32* %v3_1000aff8, align 4
  %v0_1000affc = load i32, i32* %r3.global-to-local, align 4
  %v1_1000affc = add i32 %v0_1000affc, -12
  store i32 %v1_1000affc, i32* @r30, align 4
  %v0_1000b000 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000b004 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000b004, i32* %r3.global-to-local, align 4
  %v0_1000b008 = load i32, i32* @r31, align 4
  store i32 268480532, i32* @lr, align 4
  %v4_1000b010 = inttoptr i32 %v0_1000b004 to i32*
  %v5_1000b010 = call i32 @function_1000aeb8(i32* %v4_1000b010, i32 %v1_1000affc, i32 %v0_1000b000, i32 %v0_1000b008)
  store i32 %v5_1000b010, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b014

dec_label_pc_1000b014:                            ; preds = %dec_label_pc_1000afec, %dec_label_pc_1000aff8
  %v0_1000b018 = load i32, i32* @r30, align 4
  store i32 %v0_1000b018, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000b018

; uselistorder directives
  uselistorder i32 %v3_1000af98, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000af50, { 1, 0 }
  uselistorder i32 %v0_1000af88.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000af7c.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000af2c, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000af1c, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000b014, { 1, 0 }
  uselistorder label %dec_label_pc_1000afec, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000af28, { 1, 0 }
}

define i32 @function_1000b02c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b02c:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @r25, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000b064 = load i32, i32* bitcast (i32** @global_var_1001d17c.524 to i32*), align 4
  %v2_1000b07027 = load i8, i8* %arg1, align 1
  %v3_1000b07028 = zext i8 %v2_1000b07027 to i32
  %v1_1000b07429 = mul nuw nsw i32 %v3_1000b07028, 2
  %v2_1000b07830 = add i32 %v1_1000b07429, %v3_1000b064
  %v3_1000b07831 = inttoptr i32 %v2_1000b07830 to i16*
  %v4_1000b07832 = load i16, i16* %v3_1000b07831, align 2
  %v1_1000b07c34 = and i16 %v4_1000b07832, 32
  %v3_1000b07c35 = icmp eq i16 %v1_1000b07c34, 0
  br i1 %v3_1000b07c35, label %dec_label_pc_1000b084, label %dec_label_pc_1000b06c

dec_label_pc_1000b06c:                            ; preds = %dec_label_pc_1000b02c, %dec_label_pc_1000b06c
  %v0_1000b0a436 = phi i32 [ %v1_1000b06c, %dec_label_pc_1000b06c ], [ %tmp, %dec_label_pc_1000b02c ]
  %v1_1000b06c = add i32 %v0_1000b0a436, 1
  store i32 %v1_1000b06c, i32* %r31.global-to-local, align 4
  %v1_1000b070 = inttoptr i32 %v1_1000b06c to i8*
  %v2_1000b070 = load i8, i8* %v1_1000b070, align 1
  %v3_1000b070 = zext i8 %v2_1000b070 to i32
  %v1_1000b074 = mul nuw nsw i32 %v3_1000b070, 2
  %v2_1000b078 = add i32 %v1_1000b074, %v3_1000b064
  %v3_1000b078 = inttoptr i32 %v2_1000b078 to i16*
  %v4_1000b078 = load i16, i16* %v3_1000b078, align 2
  %v1_1000b07c = and i16 %v4_1000b078, 32
  %v3_1000b07c = icmp eq i16 %v1_1000b07c, 0
  br i1 %v3_1000b07c, label %dec_label_pc_1000b084, label %dec_label_pc_1000b06c

dec_label_pc_1000b084:                            ; preds = %dec_label_pc_1000b06c, %dec_label_pc_1000b02c
  %v0_1000b0a4.lcssa = phi i32 [ %tmp, %dec_label_pc_1000b02c ], [ %v1_1000b06c, %dec_label_pc_1000b06c ]
  %v2_1000b070.lcssa = phi i8 [ %v2_1000b07027, %dec_label_pc_1000b02c ], [ %v2_1000b070, %dec_label_pc_1000b06c ]
  %v3_1000b084 = icmp eq i8 %v2_1000b070.lcssa, 43
  br i1 %v3_1000b084, label %dec_label_pc_1000b0a4, label %dec_label_pc_1000b08c

dec_label_pc_1000b08c:                            ; preds = %dec_label_pc_1000b084
  %v3_1000b08c = icmp eq i8 %v2_1000b070.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000b08c, label %dec_label_pc_1000b0a4, label %dec_label_pc_1000b0a8

dec_label_pc_1000b0a4:                            ; preds = %dec_label_pc_1000b084, %dec_label_pc_1000b08c
  %storemerge = phi i32 [ 1, %dec_label_pc_1000b08c ], [ 0, %dec_label_pc_1000b084 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000b0a4 = add i32 %v0_1000b0a4.lcssa, 1
  store i32 %v1_1000b0a4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b0a8

dec_label_pc_1000b0a8:                            ; preds = %dec_label_pc_1000b08c, %dec_label_pc_1000b0a4
  %v1_1000b0a8 = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_1000b0a8 = icmp eq i32 %v1_1000b0a8, 0
  br i1 %v4_1000b0a8, label %dec_label_pc_1000b0b4, label %dec_label_pc_1000b0a8.dec_label_pc_1000b0f0_crit_edge

dec_label_pc_1000b0a8.dec_label_pc_1000b0f0_crit_edge: ; preds = %dec_label_pc_1000b0a8
  %v0_1000b0f0.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000b0f0

dec_label_pc_1000b0b4:                            ; preds = %dec_label_pc_1000b0a8
  %v0_1000b0b4 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b0b4 = inttoptr i32 %v0_1000b0b4 to i8*
  %v2_1000b0b4 = load i8, i8* %v1_1000b0b4, align 1
  %v0_1000b0b8 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b0b8 = add i32 %v0_1000b0b8, 10
  store i32 %v1_1000b0b8, i32* %r30.global-to-local, align 4
  %v3_1000b0bc = icmp eq i8 %v2_1000b0b4, 48
  br i1 %v3_1000b0bc, label %dec_label_pc_1000b0c4, label %dec_label_pc_1000b0e4

dec_label_pc_1000b0c4:                            ; preds = %dec_label_pc_1000b0b4
  %v1_1000b0c4 = add i32 %v0_1000b0b4, 1
  %v2_1000b0c4 = inttoptr i32 %v1_1000b0c4 to i8*
  %v3_1000b0c4 = load i8, i8* %v2_1000b0c4, align 1
  %v4_1000b0c4 = zext i8 %v3_1000b0c4 to i32
  store i32 %v1_1000b0c4, i32* %r31.global-to-local, align 4
  %v1_1000b0c8 = add i32 %v0_1000b0b8, 8
  store i32 %v1_1000b0c8, i32* %r30.global-to-local, align 4
  %v1_1000b0cc = or i32 %v4_1000b0c4, 32
  %v3_1000b0d4 = icmp eq i32 %v1_1000b0cc, 120
  br i1 %v3_1000b0d4, label %dec_label_pc_1000b0dc, label %dec_label_pc_1000b0e4

dec_label_pc_1000b0dc:                            ; preds = %dec_label_pc_1000b0c4
  %v1_1000b0dc = mul i32 %v1_1000b0c8, 2
  store i32 %v1_1000b0dc, i32* %r30.global-to-local, align 4
  %v1_1000b0e0 = add i32 %v0_1000b0b4, 2
  store i32 %v1_1000b0e0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b0e4

dec_label_pc_1000b0e4:                            ; preds = %dec_label_pc_1000b0c4, %dec_label_pc_1000b0b4, %dec_label_pc_1000b0dc
  %v0_1000b19815 = phi i32 [ %v1_1000b0c4, %dec_label_pc_1000b0dc ], [ %tmp, %dec_label_pc_1000b0b4 ], [ %v1_1000b0c4, %dec_label_pc_1000b0c4 ]
  %v0_1000b0e4 = phi i32 [ %v1_1000b0dc, %dec_label_pc_1000b0dc ], [ %v1_1000b0b8, %dec_label_pc_1000b0b4 ], [ %v1_1000b0c8, %dec_label_pc_1000b0c4 ]
  %tmp22 = icmp slt i32 %v0_1000b0e4, 17
  br i1 %tmp22, label %dec_label_pc_1000b0f0, label %dec_label_pc_1000b0ec

dec_label_pc_1000b0ec:                            ; preds = %dec_label_pc_1000b0e4
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000b0f0

dec_label_pc_1000b0f0:                            ; preds = %dec_label_pc_1000b0a8.dec_label_pc_1000b0f0_crit_edge, %dec_label_pc_1000b0e4, %dec_label_pc_1000b0ec
  %v0_1000b19814 = phi i32 [ %tmp, %dec_label_pc_1000b0a8.dec_label_pc_1000b0f0_crit_edge ], [ %v0_1000b19815, %dec_label_pc_1000b0e4 ], [ %v0_1000b19815, %dec_label_pc_1000b0ec ]
  %v1_1000b104 = phi i32 [ %v0_1000b0f0.pre, %dec_label_pc_1000b0a8.dec_label_pc_1000b0f0_crit_edge ], [ %v0_1000b0e4, %dec_label_pc_1000b0e4 ], [ 16, %dec_label_pc_1000b0ec ]
  %v1_1000b0f0 = add i32 %v1_1000b104, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000b0f8 = icmp ugt i32 %v1_1000b0f0, 34
  br i1 %v2_1000b0f8, label %dec_label_pc_1000b190, label %dec_label_pc_1000b100

dec_label_pc_1000b100:                            ; preds = %dec_label_pc_1000b0f0
  %v2_1000b104 = udiv i32 -1, %v1_1000b104
  store i32 %v2_1000b104, i32* @r29, align 4
  %v2_1000b108 = mul i32 %v2_1000b104, %v1_1000b104
  %v1_1000b10c = sub i32 -1, %v2_1000b108
  %v1_1000b110 = urem i32 %v1_1000b10c, 256
  store i32 %v1_1000b110, i32* @r27, align 4
  %v0_1000b11c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b11c

dec_label_pc_1000b118:                            ; preds = %dec_label_pc_1000b184, %dec_label_pc_1000b16c
  %v1_1000b120.pre = phi i32 [ %v1_1000b124, %dec_label_pc_1000b184 ], [ %v1_1000b120.pre.pre, %dec_label_pc_1000b16c ]
  %v0_1000b120.pre = phi i32 [ %v2_1000b188, %dec_label_pc_1000b184 ], [ %v0_1000b120.pre.pre, %dec_label_pc_1000b16c ]
  %v0_1000b118 = phi i32 [ %v1_1000b128, %dec_label_pc_1000b184 ], [ %v0_1000b118.pre, %dec_label_pc_1000b16c ]
  br label %dec_label_pc_1000b11c

dec_label_pc_1000b11c:                            ; preds = %dec_label_pc_1000b100, %dec_label_pc_1000b118
  %v0_1000b19812 = phi i32 [ %v0_1000b19814, %dec_label_pc_1000b100 ], [ %v0_1000b118, %dec_label_pc_1000b118 ]
  %v0_1000b128 = phi i32 [ %v0_1000b11c.pre, %dec_label_pc_1000b100 ], [ %v0_1000b118, %dec_label_pc_1000b118 ]
  %v1_1000b124 = phi i32 [ %v2_1000b104, %dec_label_pc_1000b100 ], [ %v1_1000b120.pre, %dec_label_pc_1000b118 ]
  %v0_1000b184 = phi i32 [ 0, %dec_label_pc_1000b100 ], [ %v0_1000b120.pre, %dec_label_pc_1000b118 ]
  %v1_1000b11c = inttoptr i32 %v0_1000b128 to i8*
  %v2_1000b11c = load i8, i8* %v1_1000b11c, align 1
  %v3_1000b11c = zext i8 %v2_1000b11c to i32
  %v3_1000b120 = icmp ugt i32 %v0_1000b184, %v1_1000b124
  %v1_1000b128 = add i32 %v0_1000b128, 1
  store i32 %v1_1000b128, i32* %r31.global-to-local, align 4
  %v1_1000b12c = add nsw i32 %v3_1000b11c, -48
  %v1_1000b130 = or i32 %v3_1000b11c, 32
  %v1_1000b134 = urem i32 %v1_1000b12c, 256
  %tmp23 = icmp ult i32 %v1_1000b134, 10
  br i1 %tmp23, label %dec_label_pc_1000b154, label %dec_label_pc_1000b144

dec_label_pc_1000b144:                            ; preds = %dec_label_pc_1000b11c
  %tmp24 = icmp ult i32 %v1_1000b130, 97
  br i1 %tmp24, label %dec_label_pc_1000b154, label %dec_label_pc_1000b150

dec_label_pc_1000b150:                            ; preds = %dec_label_pc_1000b144
  %v1_1000b144 = add nsw i32 %v1_1000b130, -87
  %v1_1000b150 = urem i32 %v1_1000b144, 256
  br label %dec_label_pc_1000b154

dec_label_pc_1000b154:                            ; preds = %dec_label_pc_1000b144, %dec_label_pc_1000b11c, %dec_label_pc_1000b150
  %v1_1000b188 = phi i32 [ 40, %dec_label_pc_1000b144 ], [ %v1_1000b134, %dec_label_pc_1000b11c ], [ %v1_1000b150, %dec_label_pc_1000b150 ]
  %v1_1000b154 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b154 = icmp slt i32 %v1_1000b188, %v1_1000b154
  br i1 %v2_1000b154, label %dec_label_pc_1000b15c, label %dec_label_pc_1000b190

dec_label_pc_1000b15c:                            ; preds = %dec_label_pc_1000b154
  br i1 %v3_1000b120, label %dec_label_pc_1000b16c, label %dec_label_pc_1000b160

dec_label_pc_1000b160:                            ; preds = %dec_label_pc_1000b15c
  %v1_1000b160 = load i32, i32* @r27, align 4
  %v0_1000b164.not = icmp ne i32 %v0_1000b184, %v1_1000b124
  %tmp25 = icmp ule i32 %v1_1000b188, %v1_1000b160
  %or.cond = or i1 %tmp25, %v0_1000b164.not
  br i1 %or.cond, label %dec_label_pc_1000b184, label %dec_label_pc_1000b16c

dec_label_pc_1000b16c:                            ; preds = %dec_label_pc_1000b160, %dec_label_pc_1000b15c
  %v0_1000b16c = call i32 @function_1000a14c()
  %v0_1000b170 = load i32, i32* @r28, align 4
  %v1_1000b170 = load i32, i32* @r26, align 4
  %v2_1000b170 = and i32 %v1_1000b170, %v0_1000b170
  store i32 %v2_1000b170, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000b17c = inttoptr i32 %v0_1000b16c to i32*
  store i32 34, i32* %v2_1000b17c, align 4
  %v0_1000b118.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000b120.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000b120.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000b118

dec_label_pc_1000b184:                            ; preds = %dec_label_pc_1000b160
  %v2_1000b184 = mul i32 %v1_1000b154, %v0_1000b184
  %v2_1000b188 = add i32 %v2_1000b184, %v1_1000b188
  store i32 %v2_1000b188, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000b118

dec_label_pc_1000b190:                            ; preds = %dec_label_pc_1000b154, %dec_label_pc_1000b0f0
  %v0_1000b198 = phi i32 [ %v0_1000b19814, %dec_label_pc_1000b0f0 ], [ %v0_1000b19812, %dec_label_pc_1000b154 ]
  %v0_1000b190 = load i32, i32* @r25, align 4
  %v3_1000b190 = icmp eq i32 %v0_1000b190, 0
  br i1 %v3_1000b190, label %dec_label_pc_1000b19c, label %dec_label_pc_1000b198

dec_label_pc_1000b198:                            ; preds = %dec_label_pc_1000b190
  %v2_1000b198 = inttoptr i32 %v0_1000b190 to i32*
  store i32 %v0_1000b198, i32* %v2_1000b198, align 4
  br label %dec_label_pc_1000b19c

dec_label_pc_1000b19c:                            ; preds = %dec_label_pc_1000b190, %dec_label_pc_1000b198
  %v0_1000b19c = load i32, i32* @r26, align 4
  %v3_1000b19c = icmp eq i32 %v0_1000b19c, 0
  %v0_1000b1a0 = load i32, i32* @r28, align 4
  %v1_1000b1a0 = sub i32 0, %v0_1000b1a0
  %tmp40 = lshr i32 %v1_1000b1a0, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_1000b1e0.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000b19c, label %dec_label_pc_1000b1d0, label %dec_label_pc_1000b1b8

dec_label_pc_1000b1b8:                            ; preds = %dec_label_pc_1000b19c
  %v3_1000b1b8 = icmp ugt i32 %v0_1000b1e0.pre.pre, %tmp41
  br i1 %v3_1000b1b8, label %dec_label_pc_1000b1c0, label %dec_label_pc_1000b1d0

dec_label_pc_1000b1c0:                            ; preds = %dec_label_pc_1000b1b8
  %v0_1000b1c0 = call i32 @function_1000a14c()
  %v2_1000b1c8 = inttoptr i32 %v0_1000b1c0 to i32*
  store i32 34, i32* %v2_1000b1c8, align 4
  %v0_1000b1cc = load i32, i32* @r31, align 4
  store i32 %v0_1000b1cc, i32* %r8.global-to-local, align 4
  %v0_1000b1d0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000b1d0

dec_label_pc_1000b1d0:                            ; preds = %dec_label_pc_1000b19c, %dec_label_pc_1000b1b8, %dec_label_pc_1000b1c0
  %v0_1000b1e0.pre = phi i32 [ %v0_1000b1e0.pre.pre, %dec_label_pc_1000b1b8 ], [ %v0_1000b1cc, %dec_label_pc_1000b1c0 ], [ %v0_1000b1e0.pre.pre, %dec_label_pc_1000b19c ]
  %v0_1000b1d0 = phi i32 [ %v0_1000b1a0, %dec_label_pc_1000b1b8 ], [ %v0_1000b1d0.pre, %dec_label_pc_1000b1c0 ], [ %v0_1000b1a0, %dec_label_pc_1000b19c ]
  %v3_1000b1d0 = icmp eq i32 %v0_1000b1d0, 0
  br i1 %v3_1000b1d0, label %dec_label_pc_1000b1dc, label %dec_label_pc_1000b1d8

dec_label_pc_1000b1d8:                            ; preds = %dec_label_pc_1000b1d0
  %v1_1000b1d8 = sub i32 0, %v0_1000b1e0.pre
  store i32 %v1_1000b1d8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000b1dc

dec_label_pc_1000b1dc:                            ; preds = %dec_label_pc_1000b1d0, %dec_label_pc_1000b1d8
  %v0_1000b1e0 = phi i32 [ %v1_1000b1d8, %dec_label_pc_1000b1d8 ], [ %v0_1000b1e0.pre, %dec_label_pc_1000b1d0 ]
  ret i32 %v0_1000b1e0

; uselistorder directives
  uselistorder i32 %v0_1000b1e0.pre, { 1, 0 }
  uselistorder i32 %v0_1000b1e0.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000b188, { 1, 0 }
  uselistorder i32 %v1_1000b134, { 1, 0 }
  uselistorder i32 %v1_1000b130, { 1, 0 }
  uselistorder i32 %v1_1000b128, { 1, 0 }
  uselistorder i32 %v3_1000b11c, { 1, 0 }
  uselistorder i32 %v0_1000b184, { 1, 0, 2 }
  uselistorder i32 %v1_1000b124, { 0, 2, 1 }
  uselistorder i32 %v0_1000b118, { 1, 0 }
  uselistorder i32 %v2_1000b104, { 1, 0, 2 }
  uselistorder i32 %v1_1000b0dc, { 1, 0 }
  uselistorder i32 %v1_1000b0c8, { 1, 0, 2 }
  uselistorder i8 %v2_1000b070.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000b06c, { 0, 2, 3, 1 }
  uselistorder i32 %v3_1000b064, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 5, 1, 0, 2, 3, 6, 4, 7 }
  uselistorder i32 34, { 0, 1, 4, 2, 3 }
  uselistorder i32 26, { 3, 0, 1, 2 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000b1dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b1d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b19c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b154, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b11c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b0f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b0e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b0a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b0a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b06c, { 1, 0 }
}

define i32 @function_1000b1f4() local_unnamed_addr {
dec_label_pc_1000b1f4:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000b20c = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000b218 = load i32, i32* @r3, align 4
  store i32 %v0_1000b218, i32* @r31, align 4
  store i32 %v2_1000b20c, i32* @r3, align 4
  %v3_1000b224 = call i32 @function_1000b4e8(i32 %v2_1000b20c, i32 ptrtoint ([3 x i8]* @global_var_1000b4e0.504 to i32))
  %v0_1000b22c = call i32 @function_1000b4e0()
  %v3_1000b234 = load i32, i32* @global_var_1001d1c0.527, align 4
  %v3_1000b238 = icmp eq i32 %v3_1000b234, 0
  br i1 %v3_1000b238, label %dec_label_pc_1000b24c, label %dec_label_pc_1000b240

dec_label_pc_1000b240:                            ; preds = %dec_label_pc_1000b1f4
  %v0_1000b240 = load i32, i32* @r31, align 4
  %v3_1000b248 = call i32 @unknown_0(i32 %v0_1000b240, i32 268566528)
  br label %dec_label_pc_1000b24c

dec_label_pc_1000b24c:                            ; preds = %dec_label_pc_1000b1f4, %dec_label_pc_1000b240
  store i32 %v2_1000b20c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_1000b254 = call i32 @function_1000b4e8(i32 %v2_1000b20c, i32 1)
  store i32 %v2_1000b254, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000b25c.529 to i32), i32* @lr, align 4
  %v1_1000b258 = call i32 @function_1000b44c(i32 %v2_1000b254)
  %v0_1000b270 = load i32, i32* @r31, align 4
  %v1_1000b274 = call i32 @function_1000b880(i32 %v0_1000b270)
  ret i32 %v1_1000b274

; uselistorder directives
  uselistorder i32 %v2_1000b20c, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000b4e8, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000b24c, { 1, 0 }
}

define i32 @function_1000b278(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b278:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000b278 = icmp eq i32 %arg1, 0
  br i1 %v3_1000b278, label %dec_label_pc_1000b42c, label %dec_label_pc_1000b2a8.lr.ph

dec_label_pc_1000b2a8.lr.ph:                      ; preds = %dec_label_pc_1000b278
  %v2_1000b29c = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000b29c, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000b2a842 = add i32 %v2_1000b29c, 132
  %v3_1000b2a843 = inttoptr i32 %v2_1000b2a842 to i32*
  store i32 0, i32* %v3_1000b2a843, align 4
  %v0_1000b2ac44 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b2ac45 = add i32 %v0_1000b2ac44, -1
  store i32 %v1_1000b2ac45, i32* %r11.global-to-local, align 4
  %v1_1000b2b046 = mul i32 %v1_1000b2ac45, 4
  %v1_1000b2b447 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000b2b448 = add i32 %v1_1000b2b447, %v1_1000b2b046
  %v0_1000b2b849 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b2b850 = add i32 %v0_1000b2b849, -1
  store i32 %v1_1000b2b850, i32* %ctr.global-to-local, align 4
  %v2_1000b2b851 = icmp eq i32 %v1_1000b2b850, 0
  br i1 %v2_1000b2b851, label %dec_label_pc_1000b2bc, label %dec_label_pc_1000b2a8.dec_label_pc_1000b2a8_crit_edge

dec_label_pc_1000b2a8.dec_label_pc_1000b2a8_crit_edge: ; preds = %dec_label_pc_1000b2a8.lr.ph, %dec_label_pc_1000b2a8.dec_label_pc_1000b2a8_crit_edge
  %v2_1000b2b452 = phi i32 [ %v2_1000b2b4, %dec_label_pc_1000b2a8.dec_label_pc_1000b2a8_crit_edge ], [ %v2_1000b2b448, %dec_label_pc_1000b2a8.lr.ph ]
  %v0_1000b2a8.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b2a8 = add i32 %v2_1000b2b452, 8
  %v3_1000b2a8 = inttoptr i32 %v2_1000b2a8 to i32*
  store i32 %v0_1000b2a8.pre, i32* %v3_1000b2a8, align 4
  %v0_1000b2ac = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b2ac = add i32 %v0_1000b2ac, -1
  store i32 %v1_1000b2ac, i32* %r11.global-to-local, align 4
  %v1_1000b2b0 = mul i32 %v1_1000b2ac, 4
  %v1_1000b2b4 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000b2b4 = add i32 %v1_1000b2b4, %v1_1000b2b0
  %v0_1000b2b8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b2b8 = add i32 %v0_1000b2b8, -1
  store i32 %v1_1000b2b8, i32* %ctr.global-to-local, align 4
  %v2_1000b2b8 = icmp eq i32 %v1_1000b2b8, 0
  br i1 %v2_1000b2b8, label %dec_label_pc_1000b2bc, label %dec_label_pc_1000b2a8.dec_label_pc_1000b2a8_crit_edge

dec_label_pc_1000b2bc:                            ; preds = %dec_label_pc_1000b2a8.dec_label_pc_1000b2a8_crit_edge, %dec_label_pc_1000b2a8.lr.ph
  %v0_1000b2d0.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b2bc = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000b2bc, i32* @r29, align 4
  store i32 %v2_1000b2bc, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000b2d0.pre, i32* %stack_var_-440, align 4
  %v0_1000b2d4 = call i32 @function_1000a934()
  store i32 %v0_1000b2d4, i32* %r3.global-to-local, align 4
  %v1_1000b2d8 = icmp slt i32 %v0_1000b2d4, 0
  br i1 %v1_1000b2d8, label %dec_label_pc_1000b434, label %dec_label_pc_1000b2e0

dec_label_pc_1000b2e0:                            ; preds = %dec_label_pc_1000b2bc
  %v2_1000b2e0 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000b2e0, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268481268, i32* @lr, align 4
  %v3_1000b2f0 = call i32 @function_10009d88(i32 0, i32 %v2_1000b2bc, i32 %v2_1000b2e0)
  store i32 %v3_1000b2f0, i32* %r3.global-to-local, align 4
  %v3_1000b2f4 = icmp eq i32 %v3_1000b2f0, 0
  br i1 %v3_1000b2f4, label %dec_label_pc_1000b2fc, label %dec_label_pc_1000b434

dec_label_pc_1000b2fc:                            ; preds = %dec_label_pc_1000b2e0
  store i32 %v2_1000b2e0, i32* %r3.global-to-local, align 4
  %v2_1000b304 = call i32 @function_1000a90c(i32 %v2_1000b2e0, i32 17)
  store i32 %v2_1000b304, i32* %r3.global-to-local, align 4
  %v3_1000b308 = icmp eq i32 %v2_1000b304, 0
  br i1 %v3_1000b308, label %dec_label_pc_1000b328.lr.ph, label %dec_label_pc_1000b3f4

dec_label_pc_1000b328.lr.ph:                      ; preds = %dec_label_pc_1000b2fc
  store i32 %v2_1000b29c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000b2a843, align 4
  %v0_1000b32c33 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b32c34 = add i32 %v0_1000b32c33, -1
  store i32 %v1_1000b32c34, i32* %r11.global-to-local, align 4
  %v1_1000b33035 = mul i32 %v1_1000b32c34, 4
  %v1_1000b33436 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b33437 = add i32 %v1_1000b33436, %v1_1000b33035
  %v0_1000b33838 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b33839 = add i32 %v0_1000b33838, -1
  store i32 %v1_1000b33839, i32* %ctr.global-to-local, align 4
  %v2_1000b33840 = icmp eq i32 %v1_1000b33839, 0
  br i1 %v2_1000b33840, label %dec_label_pc_1000b33c, label %dec_label_pc_1000b328.dec_label_pc_1000b328_crit_edge

dec_label_pc_1000b328.dec_label_pc_1000b328_crit_edge: ; preds = %dec_label_pc_1000b328.lr.ph, %dec_label_pc_1000b328.dec_label_pc_1000b328_crit_edge
  %v2_1000b33441 = phi i32 [ %v2_1000b334, %dec_label_pc_1000b328.dec_label_pc_1000b328_crit_edge ], [ %v2_1000b33437, %dec_label_pc_1000b328.lr.ph ]
  %v0_1000b328.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b328 = add i32 %v2_1000b33441, 8
  %v3_1000b328 = inttoptr i32 %v2_1000b328 to i32*
  store i32 %v0_1000b328.pre, i32* %v3_1000b328, align 4
  %v0_1000b32c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b32c = add i32 %v0_1000b32c, -1
  store i32 %v1_1000b32c, i32* %r11.global-to-local, align 4
  %v1_1000b330 = mul i32 %v1_1000b32c, 4
  %v1_1000b334 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b334 = add i32 %v1_1000b334, %v1_1000b330
  %v0_1000b338 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b338 = add i32 %v0_1000b338, -1
  store i32 %v1_1000b338, i32* %ctr.global-to-local, align 4
  %v2_1000b338 = icmp eq i32 %v1_1000b338, 0
  br i1 %v2_1000b338, label %dec_label_pc_1000b33c, label %dec_label_pc_1000b328.dec_label_pc_1000b328_crit_edge

dec_label_pc_1000b33c:                            ; preds = %dec_label_pc_1000b328.dec_label_pc_1000b328_crit_edge, %dec_label_pc_1000b328.lr.ph
  store i32 %v2_1000b2bc, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000b344 = call i32 @function_1000a934()
  store i32 %v0_1000b344, i32* %r3.global-to-local, align 4
  %v1_1000b348 = icmp slt i32 %v0_1000b344, 0
  br i1 %v1_1000b348, label %dec_label_pc_1000b434, label %dec_label_pc_1000b350

dec_label_pc_1000b350:                            ; preds = %dec_label_pc_1000b33c
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000b358 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268481376, i32* @lr, align 4
  %v4_1000b35c = call i32 @function_1000c0c4(i32 17, i32* null, i32 %v2_1000b358)
  store i32 %v4_1000b35c, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000b35c, -1
  br i1 %tmp30, label %dec_label_pc_1000b390, label %dec_label_pc_1000b368

dec_label_pc_1000b368:                            ; preds = %dec_label_pc_1000b350
  %v0_1000b368 = call i32 @function_1000a14c()
  store i32 %v0_1000b368, i32* %r3.global-to-local, align 4
  %v1_1000b370 = inttoptr i32 %v0_1000b368 to i32*
  %v2_1000b370 = load i32, i32* %v1_1000b370, align 4
  store i32 %v2_1000b370, i32* @r28, align 4
  store i32 %v0_1000b368, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268481412, i32* @lr, align 4
  %v3_1000b380 = call i32 @function_10009d88(i32 2, i32 %v2_1000b2e0, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000b388 = load i32, i32* @r28, align 4
  %v1_1000b388 = load i32, i32* @r29, align 4
  %v2_1000b388 = inttoptr i32 %v1_1000b388 to i32*
  store i32 %v0_1000b388, i32* %v2_1000b388, align 4
  %v0_1000b448.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b438

dec_label_pc_1000b390:                            ; preds = %dec_label_pc_1000b350
  %v3_1000b390 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1000b2e0, i32* @r28, align 4
  %v3_1000b39c = icmp eq i32 %v3_1000b390, 1
  br i1 %v3_1000b39c, label %dec_label_pc_1000b3a4, label %dec_label_pc_1000b3d8

dec_label_pc_1000b3a4:                            ; preds = %dec_label_pc_1000b390
  store i32 %v2_1000b29c, i32* %r3.global-to-local, align 4
  store i32 268481456, i32* @lr, align 4
  %v2_1000b3ac = call i32 @function_1000bcb8(i32 %v2_1000b29c, i32 %v2_1000b29c)
  store i32 %v2_1000b3ac, i32* %r3.global-to-local, align 4
  store i32 %v2_1000b3ac, i32* @r31, align 4
  %v0_1000b3b4 = call i32 @function_1000a14c()
  store i32 %v0_1000b3b4, i32* %r3.global-to-local, align 4
  store i32 %v0_1000b3b4, i32* @r29, align 4
  %v1_1000b3c4 = inttoptr i32 %v0_1000b3b4 to i32*
  %v2_1000b3c4 = load i32, i32* %v1_1000b3c4, align 4
  store i32 %v2_1000b3c4, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268481488, i32* @lr, align 4
  %v3_1000b3cc = call i32 @function_10009d88(i32 2, i32 %v2_1000b2e0, i32 0)
  store i32 %v3_1000b3cc, i32* %r3.global-to-local, align 4
  %v0_1000b3d0 = load i32, i32* @r28, align 4
  %v1_1000b3d0 = load i32, i32* @r29, align 4
  %v2_1000b3d0 = inttoptr i32 %v1_1000b3d0 to i32*
  store i32 %v0_1000b3d0, i32* %v2_1000b3d0, align 4
  %v0_1000b400.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b400

dec_label_pc_1000b3d8:                            ; preds = %dec_label_pc_1000b390
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268481512, i32* @lr, align 4
  %v3_1000b3e4 = call i32 @function_10009d88(i32 2, i32 %v2_1000b2e0, i32 0)
  br label %dec_label_pc_1000b3f4

dec_label_pc_1000b3f4:                            ; preds = %dec_label_pc_1000b2fc, %dec_label_pc_1000b3d8
  store i32 %v2_1000b29c, i32* %r3.global-to-local, align 4
  store i32 268481532, i32* @lr, align 4
  %v2_1000b3f8 = call i32 @function_1000bcb8(i32 %v2_1000b29c, i32 %v2_1000b29c)
  store i32 %v2_1000b3f8, i32* %r3.global-to-local, align 4
  store i32 %v2_1000b3f8, i32* @r31, align 4
  br label %dec_label_pc_1000b400

dec_label_pc_1000b400:                            ; preds = %dec_label_pc_1000b3a4, %dec_label_pc_1000b3f4
  %v0_1000b400 = phi i32 [ %v0_1000b400.pr, %dec_label_pc_1000b3a4 ], [ %v2_1000b3f8, %dec_label_pc_1000b3f4 ]
  %v3_1000b400 = icmp eq i32 %v0_1000b400, 0
  br i1 %v3_1000b400, label %dec_label_pc_1000b42c, label %dec_label_pc_1000b408

dec_label_pc_1000b408:                            ; preds = %dec_label_pc_1000b400
  %v3_1000b418 = load i32, i32* %stack_var_-440, align 4
  %v0_1000b41c = call i32 @__asm_mfcr()
  store i32 %v0_1000b41c, i32* %r3.global-to-local, align 4
  %v1_1000b420 = call i32 @__asm_rlwinm(i32 %v0_1000b41c, i32 30, i32 31, i32 31)
  %v2_1000b424 = add i32 %v3_1000b418, %v1_1000b420
  store i32 %v2_1000b424, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b438

dec_label_pc_1000b42c:                            ; preds = %dec_label_pc_1000b400, %dec_label_pc_1000b278
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b438

dec_label_pc_1000b434:                            ; preds = %dec_label_pc_1000b2e0, %dec_label_pc_1000b33c, %dec_label_pc_1000b2bc
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b438

dec_label_pc_1000b438:                            ; preds = %dec_label_pc_1000b42c, %dec_label_pc_1000b408, %dec_label_pc_1000b368, %dec_label_pc_1000b434
  %v0_1000b448 = phi i32 [ 0, %dec_label_pc_1000b42c ], [ %v2_1000b424, %dec_label_pc_1000b408 ], [ %v0_1000b448.pre, %dec_label_pc_1000b368 ], [ -1, %dec_label_pc_1000b434 ]
  ret i32 %v0_1000b448

; uselistorder directives
  uselistorder i32 %v1_1000b338, { 1, 0 }
  uselistorder i32 %v2_1000b2e0, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_1000b2b8, { 1, 0 }
  uselistorder i32 %v2_1000b29c, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 2, 6, 1, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32, i32)* @function_1000bcb8, { 1, 0 }
  uselistorder i32 17, { 2, 32, 33, 3, 34, 4, 16, 17, 5, 6, 18, 19, 20, 21, 22, 7, 8, 9, 10, 11, 23, 12, 24, 25, 26, 13, 15, 14, 27, 0, 28, 1, 29, 30, 31 }
  uselistorder label %dec_label_pc_1000b438, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b434, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b400, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b328.dec_label_pc_1000b328_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b2a8.dec_label_pc_1000b2a8_crit_edge, { 1, 0 }
}

define i32 @function_1000b44c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b49c:
  %v3_1000b4a0 = load i32, i32* @global_var_1001d1d0.531, align 4
  %v3_1000b4a4 = icmp eq i32 %v3_1000b4a0, 0
  br i1 %v3_1000b4a4, label %dec_label_pc_1000b4b4, label %dec_label_pc_1000b4ac

dec_label_pc_1000b4ac:                            ; preds = %dec_label_pc_1000b49c
  %v2_1000b4b0 = load i32, i32* @r4, align 4
  %v3_1000b4b0 = call i32 @unknown_0(i32 268566528, i32 %v2_1000b4b0)
  store i32 %v3_1000b4b0, i32* @r3, align 4
  br label %dec_label_pc_1000b4b4

dec_label_pc_1000b4b4:                            ; preds = %dec_label_pc_1000b49c, %dec_label_pc_1000b4ac
  %v3_1000b4b8 = load i32, i32* @global_var_1001d1d4.532, align 4
  %v3_1000b4bc = icmp eq i32 %v3_1000b4b8, 0
  br i1 %v3_1000b4bc, label %dec_label_pc_1000b4b4.dec_label_pc_1000b4cc_crit_edge, label %dec_label_pc_1000b4c4

dec_label_pc_1000b4b4.dec_label_pc_1000b4cc_crit_edge: ; preds = %dec_label_pc_1000b4b4
  %v0_1000b4dc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000b4cc

dec_label_pc_1000b4c4:                            ; preds = %dec_label_pc_1000b4b4
  %v2_1000b4c8 = load i32, i32* @r4, align 4
  %v3_1000b4c8 = call i32 @unknown_0(i32 268566528, i32 %v2_1000b4c8)
  br label %dec_label_pc_1000b4cc

dec_label_pc_1000b4cc:                            ; preds = %dec_label_pc_1000b4b4.dec_label_pc_1000b4cc_crit_edge, %dec_label_pc_1000b4c4
  %v0_1000b4dc = phi i32 [ %v0_1000b4dc.pre, %dec_label_pc_1000b4b4.dec_label_pc_1000b4cc_crit_edge ], [ %v3_1000b4c8, %dec_label_pc_1000b4c4 ]
  ret i32 %v0_1000b4dc

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b4cc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b4b4, { 1, 0 }
}

define i32 @function_1000b4e0() local_unnamed_addr {
dec_label_pc_1000b4e0:
  ret i32 0
}

define i32 @function_1000b4e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b4e8:
  %v0_1000b4e8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b4e8
}

define i32 @function_1000b4ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b4ec:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268481808, i32* @lr, align 4
  %v1_1000b50c = call i32 @function_10009948(i32 1)
  %v3_1000b510 = icmp eq i32 %v1_1000b50c, -1
  br i1 %v3_1000b510, label %dec_label_pc_1000b518, label %dec_label_pc_1000b538

dec_label_pc_1000b518:                            ; preds = %dec_label_pc_1000b4ec
  %v0_1000b51c = load i32, i32* @r30, align 4
  store i32 268481836, i32* @lr, align 4
  %v3_1000b528 = call i32 @function_10009b98(i32 ptrtoint ([10 x i8]* @global_var_1000ccd4.533 to i32), i32 %v0_1000b51c)
  %v1_1000b52c = load i32, i32* @r31, align 4
  %v4_1000b52c = icmp eq i32 %v3_1000b528, %v1_1000b52c
  br i1 %v4_1000b52c, label %dec_label_pc_1000b538, label %dec_label_pc_1000b534

dec_label_pc_1000b534:                            ; preds = %dec_label_pc_1000b518
  %v1_1000b534 = call i32 @function_1000c188(i32 %v3_1000b528)
  br label %dec_label_pc_1000b538

dec_label_pc_1000b538:                            ; preds = %dec_label_pc_1000b4ec, %dec_label_pc_1000b518, %dec_label_pc_1000b534
  %v0_1000b548 = phi i32 [ %v1_1000b50c, %dec_label_pc_1000b4ec ], [ %v3_1000b528, %dec_label_pc_1000b518 ], [ %v1_1000b534, %dec_label_pc_1000b534 ]
  ret i32 %v0_1000b548

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10009b98, { 0, 3, 9, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 (i32)* @function_10009948, { 0, 3, 11, 10, 13, 12, 7, 6, 9, 8, 5, 4, 2, 1 }
  uselistorder label %dec_label_pc_1000b538, { 2, 1, 0 }
}

define i32 @function_1000b54c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b54c:
  %v3_1000b56c = load i32, i32* @global_var_1001d1d8.534, align 4
  %v3_1000b570 = icmp eq i32 %v3_1000b56c, 0
  br i1 %v3_1000b570, label %dec_label_pc_1000b594, label %dec_label_pc_1000b5b8

dec_label_pc_1000b594:                            ; preds = %dec_label_pc_1000b54c
  store i32 1, i32* @global_var_1001d1d8.534, align 4
  store i32 4096, i32* @global_var_1001d1cc.516, align 4
  br label %dec_label_pc_1000b5b8

dec_label_pc_1000b5b8:                            ; preds = %dec_label_pc_1000b594, %dec_label_pc_1000b54c
  %v0_1000b5c8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b5c8
}

define i32 @function_1000b5cc(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000b5cc:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000b5e4 = mul i32 %arg2, 4
  %v2_1000b5e8 = add i32 %tmp, %v1_1000b5e4
  %v0_1000b5ec = load i32, i32* @r9, align 4
  store i32 %v0_1000b5ec, i32* @global_var_1001d1c4.536, align 4
  %v1_1000b5f0 = add i32 %v2_1000b5e8, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000b5f0, i32* @global_var_1001d1c8.537, align 4
  store i32 %arg6, i32* @global_var_1001d1d4.532, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_1000b610 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000b618 = icmp eq i32 %v1_1000b5f0, %v2_1000b610
  br i1 %v4_1000b618, label %dec_label_pc_1000b620, label %dec_label_pc_1000b624

dec_label_pc_1000b620:                            ; preds = %dec_label_pc_1000b5cc
  store i32 %v2_1000b5e8, i32* @global_var_1001d1c8.537, align 4
  br label %dec_label_pc_1000b624

dec_label_pc_1000b624:                            ; preds = %dec_label_pc_1000b5cc, %dec_label_pc_1000b620
  %v2_1000b624 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268482100, i32* @lr, align 4
  %v3_1000b630 = call i32 @function_1000a234(i32 %v2_1000b624, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001d1c8.537, align 4
  br label %dec_label_pc_1000b640

dec_label_pc_1000b640:                            ; preds = %dec_label_pc_1000b640, %dec_label_pc_1000b624
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000b624 ], [ %v1_1000b644, %dec_label_pc_1000b640 ]
  %v1_1000b640 = inttoptr i32 %storemerge to i32*
  %v2_1000b640 = load i32, i32* %v1_1000b640, align 4
  %v1_1000b644 = add i32 %storemerge, 4
  %v3_1000b648 = icmp eq i32 %v2_1000b640, 0
  br i1 %v3_1000b648, label %dec_label_pc_1000b650, label %dec_label_pc_1000b640

dec_label_pc_1000b650:                            ; preds = %dec_label_pc_1000b640
  store i32 %v1_1000b644, i32* %r29.global-to-local, align 4
  %v1_1000b67c12 = inttoptr i32 %v1_1000b644 to i32*
  %v2_1000b67c13 = load i32, i32* %v1_1000b67c12, align 4
  %v3_1000b68016 = icmp eq i32 %v2_1000b67c13, 0
  br i1 %v3_1000b68016, label %dec_label_pc_1000b688, label %dec_label_pc_1000b658

dec_label_pc_1000b658:                            ; preds = %dec_label_pc_1000b650, %dec_label_pc_1000b678
  %v0_1000b66c = phi i32 [ %v1_1000b678, %dec_label_pc_1000b678 ], [ %v1_1000b644, %dec_label_pc_1000b650 ]
  %v0_1000b660 = phi i32 [ %v2_1000b67c, %dec_label_pc_1000b678 ], [ %v2_1000b67c13, %dec_label_pc_1000b650 ]
  %v2_1000b658 = icmp ugt i32 %v0_1000b660, 14
  br i1 %v2_1000b658, label %dec_label_pc_1000b678, label %dec_label_pc_1000b660

dec_label_pc_1000b660:                            ; preds = %dec_label_pc_1000b658
  %v1_1000b660 = mul i32 %v0_1000b660, 8
  %v2_1000b668 = add i32 %v1_1000b660, %v2_1000b624
  store i32 %v2_1000b668, i32* @r3, align 4
  store i32 %v0_1000b66c, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268482168, i32* @lr, align 4
  %v0_1000b674 = call i32 @function_1000bf34()
  %v0_1000b678.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000b678

dec_label_pc_1000b678:                            ; preds = %dec_label_pc_1000b658, %dec_label_pc_1000b660
  %v0_1000b678 = phi i32 [ %v0_1000b66c, %dec_label_pc_1000b658 ], [ %v0_1000b678.pre, %dec_label_pc_1000b660 ]
  %v1_1000b678 = add i32 %v0_1000b678, 8
  store i32 %v1_1000b678, i32* %r29.global-to-local, align 4
  %v1_1000b67c = inttoptr i32 %v1_1000b678 to i32*
  %v2_1000b67c = load i32, i32* %v1_1000b67c, align 4
  %v3_1000b680 = icmp eq i32 %v2_1000b67c, 0
  br i1 %v3_1000b680, label %dec_label_pc_1000b688, label %dec_label_pc_1000b658

dec_label_pc_1000b688:                            ; preds = %dec_label_pc_1000b678, %dec_label_pc_1000b650
  %v1_1000b68c = call i32 @function_1000c2d8(i32 %v2_1000b624)
  store i32 %v1_1000b68c, i32* @r3, align 4
  store i32 268482196, i32* @lr, align 4
  %v1_1000b690 = call i32 @function_1000b54c(i32 %v1_1000b68c)
  %v3_1000b698 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000b698, label %dec_label_pc_1000b6a0, label %dec_label_pc_1000b6a4

dec_label_pc_1000b6a0:                            ; preds = %dec_label_pc_1000b688
  br label %dec_label_pc_1000b6a4

dec_label_pc_1000b6a4:                            ; preds = %dec_label_pc_1000b688, %dec_label_pc_1000b6a0
  %v0_1000b6ac = phi i32 [ %tmp27, %dec_label_pc_1000b688 ], [ 4096, %dec_label_pc_1000b6a0 ]
  store i32 %v0_1000b6ac, i32* @global_var_1001d1cc.516, align 4
  %v3_1000b6b0 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000b6b0, label %dec_label_pc_1000b6b8, label %dec_label_pc_1000b6ec

dec_label_pc_1000b6b8:                            ; preds = %dec_label_pc_1000b6a4
  store i32 268482236, i32* @lr, align 4
  %v1_1000b6b8 = call i32 @function_1000bbf0(i32 268566528)
  store i32 %v1_1000b6b8, i32* %r29.global-to-local, align 4
  store i32 268482244, i32* @lr, align 4
  %v0_1000b6c0 = call i32 @function_1000bb60()
  %v4_1000b6c4 = icmp eq i32 %v1_1000b6b8, %v0_1000b6c0
  br i1 %v4_1000b6c4, label %dec_label_pc_1000b6cc, label %dec_label_pc_1000b708

dec_label_pc_1000b6cc:                            ; preds = %dec_label_pc_1000b6b8
  store i32 268482256, i32* @lr, align 4
  %v1_1000b6cc = call i32 @function_1000bba8(i32 %v0_1000b6c0)
  store i32 %v1_1000b6cc, i32* %r29.global-to-local, align 4
  store i32 268482264, i32* @lr, align 4
  %v0_1000b6d4 = call i32 @function_1000bb18()
  %v4_1000b6d8 = icmp eq i32 %v1_1000b6cc, %v0_1000b6d4
  br i1 %v4_1000b6d8, label %dec_label_pc_1000b6e0.thread, label %dec_label_pc_1000b708

dec_label_pc_1000b6e0.thread:                     ; preds = %dec_label_pc_1000b6cc
  br label %dec_label_pc_1000b738

dec_label_pc_1000b6ec:                            ; preds = %dec_label_pc_1000b6a4
  %v4_1000b6f0 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000b6f0, label %dec_label_pc_1000b6f8, label %dec_label_pc_1000b708

dec_label_pc_1000b6f8:                            ; preds = %dec_label_pc_1000b6ec
  br label %dec_label_pc_1000b708

dec_label_pc_1000b708:                            ; preds = %dec_label_pc_1000b6f8, %dec_label_pc_1000b6ec, %dec_label_pc_1000b6cc, %dec_label_pc_1000b6b8
  store i32 268482328, i32* @lr, align 4
  %v2_1000b714 = call i32 @function_1000b4ec(i32 0, i32 32768)
  store i32 268482344, i32* @lr, align 4
  %v2_1000b724 = call i32 @function_1000b4ec(i32 1, i32 32770)
  store i32 268482360, i32* @lr, align 4
  %v2_1000b734 = call i32 @function_1000b4ec(i32 2, i32 32770)
  br label %dec_label_pc_1000b738

dec_label_pc_1000b738:                            ; preds = %dec_label_pc_1000b6e0.thread, %dec_label_pc_1000b708
  %v0_1000b744 = load i32, i32* @r30, align 4
  %v1_1000b744 = inttoptr i32 %v0_1000b744 to i32*
  %v2_1000b744 = load i32, i32* %v1_1000b744, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000b744, i32* inttoptr (i32 268554612 to i32*), align 4
  %v0_1000b764 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000b764, i32* @global_var_1001d1d0.531, align 4
  br i1 false, label %dec_label_pc_1000b76c, label %dec_label_pc_1000b7e4

dec_label_pc_1000b76c:                            ; preds = %dec_label_pc_1000b738, %dec_label_pc_1000b76c
  br i1 undef, label %dec_label_pc_1000b76c, label %dec_label_pc_1000b7e4

dec_label_pc_1000b7e4:                            ; preds = %dec_label_pc_1000b76c, %dec_label_pc_1000b738
  %v0_1000b790 = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000b790)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000b7f4 = call i32 @function_1000a14c()
  %v2_1000b7fc = inttoptr i32 %v0_1000b7f4 to i32*
  store i32 0, i32* %v2_1000b7fc, align 4
  %v0_1000b828 = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000b828)
  %v0_1000b834 = call i32 @function_1000b1f4()
  ret i32 %v0_1000b834

; uselistorder directives
  uselistorder i32 %v2_1000b67c, { 1, 0 }
  uselistorder i32 %v1_1000b678, { 2, 1, 0 }
  uselistorder i32 %v1_1000b644, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000b624, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_1000b1f4, { 0, 4, 3, 2, 1 }
  uselistorder i1 false, { 0, 6, 7, 8, 2, 1, 3, 4, 5, 9, 10 }
  uselistorder i32 (i32, i32)* @function_1000b4ec, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 40, 0, 2, 1, 22, 4, 3, 23, 6, 5, 24, 12, 13, 25, 8, 7, 26, 27, 14, 28, 15, 29, 16, 17, 18, 19, 20, 21, 30, 31, 9, 32, 33, 34, 10, 35, 36, 37, 38, 39, 11 }
  uselistorder i32* @r9, { 7, 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_1000b76c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b738, { 1, 0 }
  uselistorder label %dec_label_pc_1000b6a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b678, { 1, 0 }
  uselistorder label %dec_label_pc_1000b658, { 1, 0 }
  uselistorder label %dec_label_pc_1000b624, { 1, 0 }
}

define i32 @function_1000b838(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b838:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b850 = call i32 @__asm_mfcr()
  %v1_1000b854 = and i32 %v0_1000b850, 268435456
  %v3_1000b854 = icmp eq i32 %v1_1000b854, 0
  store i32 %v0_1000b850, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b854, label %dec_label_pc_1000b86c, label %dec_label_pc_1000b860

dec_label_pc_1000b860:                            ; preds = %dec_label_pc_1000b838
  %v0_1000b860 = call i32 @function_1000a14c()
  %v0_1000b864 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b864 = inttoptr i32 %v0_1000b860 to i32*
  store i32 %v0_1000b864, i32* %v2_1000b864, align 4
  br label %dec_label_pc_1000b86c

dec_label_pc_1000b86c:                            ; preds = %dec_label_pc_1000b838, %dec_label_pc_1000b860
  %v0_1000b87c = phi i32 [ %v0_1000b850, %dec_label_pc_1000b838 ], [ -1, %dec_label_pc_1000b860 ]
  ret i32 %v0_1000b87c

; uselistorder directives
  uselistorder label %dec_label_pc_1000b86c, { 1, 0 }
}

define i32 @function_1000b880(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b880:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000b894

dec_label_pc_1000b894:                            ; preds = %dec_label_pc_1000b894.backedge, %dec_label_pc_1000b880
  %v0_1000b8a0 = call i32 @__asm_mfcr()
  %v1_1000b8a4 = and i32 %v0_1000b8a0, 268435456
  %v3_1000b8a4 = icmp eq i32 %v1_1000b8a4, 0
  store i32 %v0_1000b8a0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b8a4, label %dec_label_pc_1000b894.backedge, label %dec_label_pc_1000b8b0

dec_label_pc_1000b8b0:                            ; preds = %dec_label_pc_1000b894
  %v0_1000b8b0 = call i32 @function_1000a14c()
  %v0_1000b8b4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b8b4 = inttoptr i32 %v0_1000b8b0 to i32*
  store i32 %v0_1000b8b4, i32* %v2_1000b8b4, align 4
  br label %dec_label_pc_1000b894.backedge

dec_label_pc_1000b894.backedge:                   ; preds = %dec_label_pc_1000b8b0, %dec_label_pc_1000b894
  br label %dec_label_pc_1000b894
}

define i32 @function_1000b8bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b8bc:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000b8c8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000b8c8, i32* @r29, align 4
  %v0_1000b8d0 = load i32, i32* @r4, align 4
  store i32 %v0_1000b8d0, i32* @r30, align 4
  %v0_1000b8e0 = call i32 @__asm_mfcr()
  %v1_1000b8e4 = and i32 %v0_1000b8e0, 268435456
  %v3_1000b8e4 = icmp eq i32 %v1_1000b8e4, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000b8e0, i32* @r31, align 4
  br i1 %v3_1000b8e4, label %dec_label_pc_1000b900, label %dec_label_pc_1000b8f4

dec_label_pc_1000b8f4:                            ; preds = %dec_label_pc_1000b8bc
  %v0_1000b8f4 = call i32 @function_1000a14c()
  %v0_1000b8f8 = load i32, i32* @r31, align 4
  %v2_1000b8f8 = inttoptr i32 %v0_1000b8f4 to i32*
  store i32 %v0_1000b8f8, i32* %v2_1000b8f8, align 4
  br label %dec_label_pc_1000b918

dec_label_pc_1000b900:                            ; preds = %dec_label_pc_1000b8bc
  %v3_1000b900 = icmp eq i32 %v0_1000b8e0, 0
  store i32 %v0_1000b8e0, i32* @r28, align 4
  br i1 %v3_1000b900, label %dec_label_pc_1000b914, label %dec_label_pc_1000b918

dec_label_pc_1000b914:                            ; preds = %dec_label_pc_1000b900
  %v0_1000b908 = load i32, i32* @r30, align 4
  store i32 268482840, i32* @lr, align 4
  %v4_1000b914 = call i32 @function_1000be84(i32* nonnull %stack_var_-104, i32 %v0_1000b908, i32 0)
  br label %dec_label_pc_1000b918

dec_label_pc_1000b918:                            ; preds = %dec_label_pc_1000b900, %dec_label_pc_1000b8f4, %dec_label_pc_1000b914
  %v0_1000b91c = load i32, i32* @r28, align 4
  ret i32 %v0_1000b91c

; uselistorder directives
  uselistorder i32 %v0_1000b8e0, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000b918, { 2, 0, 1 }
}

define i32 @function_1000b930(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b930:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000b944 = call i32 @function_1000b9c0()
  store i32 %v0_1000b944, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000b944, 1
  br i1 %tmp18, label %dec_label_pc_1000b9a8, label %dec_label_pc_1000b950

dec_label_pc_1000b950:                            ; preds = %dec_label_pc_1000b930
  %v0_1000b950 = load i32, i32* @r31, align 4
  %v2_1000b950 = add i32 %v0_1000b950, %v0_1000b944
  store i32 %v2_1000b950, i32* %r29.global-to-local, align 4
  %v2_1000b9983 = icmp ult i32 %v0_1000b950, %v2_1000b950
  br i1 %v2_1000b9983, label %dec_label_pc_1000b958, label %dec_label_pc_1000b9a8

dec_label_pc_1000b958:                            ; preds = %dec_label_pc_1000b950, %dec_label_pc_1000b958
  %v1_1000b968 = phi i32 [ %v2_1000b994, %dec_label_pc_1000b958 ], [ %v0_1000b950, %dec_label_pc_1000b950 ]
  %v1_1000b99c10.in = phi i32 [ %v2_1000b994, %dec_label_pc_1000b958 ], [ %v0_1000b950, %dec_label_pc_1000b950 ]
  %v1_1000b9a011.in = phi i32 [ %v2_1000b994, %dec_label_pc_1000b958 ], [ %v0_1000b950, %dec_label_pc_1000b950 ]
  %v1_1000b99c10 = add i32 %v1_1000b99c10.in, 11
  %v1_1000b9a011 = add i32 %v1_1000b9a011.in, 19
  %v1_1000b958 = add i32 %v1_1000b968, 4
  %v2_1000b958 = inttoptr i32 %v1_1000b958 to i32*
  %v3_1000b958 = load i32, i32* %v2_1000b958, align 4
  store i32 %v3_1000b958, i32* %r11.global-to-local, align 4
  %v1_1000b95c = add i32 %v1_1000b968, 12
  %v2_1000b95c = inttoptr i32 %v1_1000b95c to i32*
  %v3_1000b95c = load i32, i32* %v2_1000b95c, align 4
  %v1_1000b960 = add i32 %v1_1000b968, 16
  %v2_1000b960 = inttoptr i32 %v1_1000b960 to i16*
  %v3_1000b960 = load i16, i16* %v2_1000b960, align 2
  %v4_1000b960 = zext i16 %v3_1000b960 to i32
  store i32 %v4_1000b960, i32* %r5.global-to-local, align 4
  %v1_1000b964 = add i32 %v1_1000b968, 18
  %v2_1000b964 = inttoptr i32 %v1_1000b964 to i8*
  %v3_1000b964 = load i8, i8* %v2_1000b964, align 1
  %v4_1000b964 = zext i8 %v3_1000b964 to i32
  store i32 %v4_1000b964, i32* %r9.global-to-local, align 4
  store i32 %v3_1000b95c, i32* %v2_1000b958, align 4
  %v0_1000b96c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b96c = load i32, i32* @r31, align 4
  %v2_1000b96c = inttoptr i32 %v1_1000b96c to i32*
  store i32 %v0_1000b96c, i32* %v2_1000b96c, align 4
  %v0_1000b970 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b970 = trunc i32 %v0_1000b970 to i8
  %v2_1000b970 = load i32, i32* @r31, align 4
  %v3_1000b970 = add i32 %v2_1000b970, 10
  %v4_1000b970 = inttoptr i32 %v3_1000b970 to i8*
  store i8 %v1_1000b970, i8* %v4_1000b970, align 1
  %v0_1000b974 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b974 = trunc i32 %v0_1000b974 to i16
  %v2_1000b974 = load i32, i32* @r31, align 4
  %v3_1000b974 = add i32 %v2_1000b974, 8
  %v4_1000b974 = inttoptr i32 %v3_1000b974 to i16*
  store i16 %v1_1000b974, i16* %v4_1000b974, align 2
  %v0_1000b978 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b978 = add i32 %v0_1000b978, -19
  store i32 %v1_1000b978, i32* %r5.global-to-local, align 4
  store i32 268482944, i32* @lr, align 4
  %v3_1000b97c = call i32 @function_1000a190(i32 %v1_1000b99c10, i32 %v1_1000b9a011, i32 %v1_1000b978)
  %v0_1000b980 = load i32, i32* @r31, align 4
  %v1_1000b980 = add i32 %v0_1000b980, 8
  %v2_1000b980 = inttoptr i32 %v1_1000b980 to i16*
  %v3_1000b980 = load i16, i16* %v2_1000b980, align 2
  %v4_1000b980 = zext i16 %v3_1000b980 to i32
  store i32 %v4_1000b980, i32* %r5.global-to-local, align 4
  store i32 268482960, i32* @lr, align 4
  %v3_1000b98c = call i32 @function_1000a190(i32 %v0_1000b980, i32 %v0_1000b980, i32 %v4_1000b980)
  %v0_1000b990 = load i32, i32* @r31, align 4
  %v1_1000b990 = add i32 %v0_1000b990, 8
  %v2_1000b990 = inttoptr i32 %v1_1000b990 to i16*
  %v3_1000b990 = load i16, i16* %v2_1000b990, align 2
  %v4_1000b990 = zext i16 %v3_1000b990 to i32
  %v2_1000b994 = add i32 %v4_1000b990, %v0_1000b990
  store i32 %v2_1000b994, i32* @r31, align 4
  %v1_1000b998 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b998 = icmp ult i32 %v2_1000b994, %v1_1000b998
  br i1 %v2_1000b998, label %dec_label_pc_1000b958, label %dec_label_pc_1000b998.dec_label_pc_1000b9a8.loopexit_crit_edge

dec_label_pc_1000b998.dec_label_pc_1000b9a8.loopexit_crit_edge: ; preds = %dec_label_pc_1000b958
  %v0_1000b9ac.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000b9a8

dec_label_pc_1000b9a8:                            ; preds = %dec_label_pc_1000b950, %dec_label_pc_1000b998.dec_label_pc_1000b9a8.loopexit_crit_edge, %dec_label_pc_1000b930
  %v0_1000b9ac = phi i32 [ %v0_1000b944, %dec_label_pc_1000b930 ], [ %v0_1000b9ac.pre.pre, %dec_label_pc_1000b998.dec_label_pc_1000b9a8.loopexit_crit_edge ], [ %v0_1000b944, %dec_label_pc_1000b950 ]
  ret i32 %v0_1000b9ac

; uselistorder directives
  uselistorder i32 %v2_1000b994, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000b980, { 1, 0, 2 }
  uselistorder i32 %v1_1000b968, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000b950, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000b944, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_1000a190, { 1, 0, 2 }
  uselistorder i32 11, { 0, 34, 33, 2, 6, 7, 13, 14, 15, 16, 17, 18, 19, 8, 20, 9, 21, 10, 22, 1, 23, 11, 24, 25, 26, 27, 28, 3, 29, 30, 4, 31, 32, 12, 5 }
  uselistorder label %dec_label_pc_1000b9a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b958, { 1, 0 }
}

define i32 @function_1000b9c0() local_unnamed_addr {
dec_label_pc_1000b9c0:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000b9c4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000b9c4, i32* %stack_var_-48, align 4
  %v5_1000b9c4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000b9c4, i32* %r9.global-to-local, align 4
  %v0_1000b9d0 = load i32, i32* @r5, align 4
  %v1_1000b9d0 = add i32 %v0_1000b9d0, 30
  %v1_1000b9d4 = call i32 @__asm_rlwinm(i32 %v1_1000b9d0, i32 0, i32 0, i32 27)
  store i32 %v5_1000b9c4, i32* @r31, align 4
  %v1_1000b9e4 = load i32, i32* @r1, align 4
  %v3_1000b9e4 = sub i32 %v1_1000b9e4, %v1_1000b9d4
  %v4_1000b9e4 = inttoptr i32 %v3_1000b9e4 to i32*
  store i32 %v4_1000b9c4, i32* %v4_1000b9e4, align 4
  %v0_1000b9e8 = load i32, i32* @r4, align 4
  store i32 %v0_1000b9e8, i32* @r28, align 4
  %v0_1000b9ec = load i32, i32* @r5, align 4
  store i32 %v0_1000b9ec, i32* @r23, align 4
  %v0_1000b9f0 = load i32, i32* @r3, align 4
  store i32 %v0_1000b9f0, i32* @r22, align 4
  %v1_1000b9f4 = add i32 %v3_1000b9e4, 23
  %v1_1000b9f8 = call i32 @__asm_rlwinm(i32 %v1_1000b9f4, i32 0, i32 0, i32 27)
  store i32 %v1_1000b9f8, i32* @r27, align 4
  store i32 %v1_1000b9f8, i32* %r4.global-to-local, align 4
  %v0_1000ba08 = call i32 @__asm_mfcr()
  %v1_1000ba0c = and i32 %v0_1000ba08, 268435456
  store i32 %v1_1000ba0c, i32* %r9.global-to-local, align 4
  %v3_1000ba0c = icmp eq i32 %v1_1000ba0c, 0
  store i32 %v0_1000ba08, i32* %r30.global-to-local, align 4
  br i1 %v3_1000ba0c, label %dec_label_pc_1000ba24, label %dec_label_pc_1000ba18

dec_label_pc_1000ba18:                            ; preds = %dec_label_pc_1000b9c0
  %v0_1000ba18 = call i32 @function_1000a14c()
  %v0_1000ba1c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ba1c = inttoptr i32 %v0_1000ba18 to i32*
  store i32 %v0_1000ba1c, i32* %v2_1000ba1c, align 4
  br label %dec_label_pc_1000ba30

dec_label_pc_1000ba24:                            ; preds = %dec_label_pc_1000b9c0
  %v3_1000ba24 = icmp eq i32 %v0_1000ba08, -1
  store i32 %v0_1000ba08, i32* %r24.global-to-local, align 4
  br i1 %v3_1000ba24, label %dec_label_pc_1000ba30, label %dec_label_pc_1000ba38

dec_label_pc_1000ba30:                            ; preds = %dec_label_pc_1000ba24, %dec_label_pc_1000ba18
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000bafc

dec_label_pc_1000ba38:                            ; preds = %dec_label_pc_1000ba24
  %v0_1000ba38 = load i32, i32* @r28, align 4
  store i32 %v0_1000ba38, i32* %r29.global-to-local, align 4
  store i32 %v1_1000b9f8, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* @r26, align 4
  %v2_1000bae012 = add i32 %v0_1000ba08, %v1_1000b9f8
  %v1_1000bae413 = load i32, i32* @r23, align 4
  %v2_1000bae414 = add i32 %v1_1000bae413, %v0_1000ba38
  store i32 %v2_1000bae414, i32* %r10.global-to-local, align 4
  %v2_1000bae815 = icmp ult i32 %v1_1000b9f8, %v2_1000bae012
  %v1_1000baec17 = add i32 %v0_1000ba38, 19
  store i32 %v1_1000baec17, i32* @r3, align 4
  %v1_1000baf018 = add i32 %v1_1000b9f8, 19
  store i32 %v1_1000baf018, i32* @r4, align 4
  br i1 %v2_1000bae815, label %dec_label_pc_1000ba4c, label %dec_label_pc_1000baf8

dec_label_pc_1000ba4c:                            ; preds = %dec_label_pc_1000ba38, %dec_label_pc_1000ba94
  %v0_1000ba4c19 = phi i32 [ %v2_1000badc, %dec_label_pc_1000ba94 ], [ %v1_1000b9f8, %dec_label_pc_1000ba38 ]
  %v1_1000ba4c = add i32 %v0_1000ba4c19, 16
  %v2_1000ba4c = inttoptr i32 %v1_1000ba4c to i16*
  %v3_1000ba4c = load i16, i16* %v2_1000ba4c, align 2
  %v4_1000ba4c = zext i16 %v3_1000ba4c to i32
  %v1_1000ba50 = add nuw nsw i32 %v4_1000ba4c, 7
  store i32 %v1_1000ba50, i32* %r9.global-to-local, align 4
  %v1_1000ba54 = call i32 @__asm_rlwinm(i32 %v1_1000ba50, i32 0, i32 0, i32 28)
  %v0_1000ba58 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000ba58 = add i32 %v1_1000ba54, %v0_1000ba58
  store i32 %v3_1000ba58, i32* %r11.global-to-local, align 4
  %v1_1000ba5c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000ba5c = icmp ugt i32 %v3_1000ba58, %v1_1000ba5c
  br i1 %v3_1000ba5c, label %dec_label_pc_1000ba64, label %dec_label_pc_1000ba94

dec_label_pc_1000ba64:                            ; preds = %dec_label_pc_1000ba4c
  %v0_1000ba64 = load i32, i32* @r22, align 4
  %v0_1000ba68 = load i32, i32* @r25, align 4
  %v0_1000ba6c = load i32, i32* @r26, align 4
  store i32 268483192, i32* @lr, align 4
  %v4_1000ba74 = call i32 @function_1000bc38(i32 %v0_1000ba64, i32 %v0_1000ba68, i32 %v0_1000ba6c, i32 0)
  %v0_1000ba78 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000ba78 = load i32, i32* @r28, align 4
  %v4_1000ba78 = icmp eq i32 %v0_1000ba78, %v1_1000ba78
  br i1 %v4_1000ba78, label %dec_label_pc_1000ba80, label %dec_label_pc_1000baf8

dec_label_pc_1000ba80:                            ; preds = %dec_label_pc_1000ba64
  %v0_1000ba80 = call i32 @function_1000a14c()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000ba8c = inttoptr i32 %v0_1000ba80 to i32*
  store i32 22, i32* %v2_1000ba8c, align 4
  %v0_1000bb00.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000bafc

dec_label_pc_1000ba94:                            ; preds = %dec_label_pc_1000ba4c
  %v2_1000ba54 = trunc i32 %v1_1000ba54 to i16
  %v0_1000ba94 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000ba94 = inttoptr i32 %v0_1000ba94 to i32*
  %v2_1000ba94 = load i32, i32* %v1_1000ba94, align 4
  store i32 %v2_1000ba94, i32* %r9.global-to-local, align 4
  %v1_1000ba98 = add i32 %v0_1000ba94, 4
  %v2_1000ba98 = inttoptr i32 %v1_1000ba98 to i32*
  %v3_1000ba98 = load i32, i32* %v2_1000ba98, align 4
  store i32 %v3_1000ba98, i32* %r10.global-to-local, align 4
  %v1_1000ba9c = add i32 %v0_1000ba94, 8
  %v2_1000ba9c = inttoptr i32 %v1_1000ba9c to i32*
  %v3_1000ba9c = load i32, i32* %v2_1000ba9c, align 4
  store i32 %v3_1000ba9c, i32* @r25, align 4
  %v1_1000baa0 = add i32 %v0_1000ba94, 12
  %v2_1000baa0 = inttoptr i32 %v1_1000baa0 to i32*
  %v3_1000baa0 = load i32, i32* %v2_1000baa0, align 4
  store i32 %v3_1000baa0, i32* @r26, align 4
  %v2_1000baa4 = inttoptr i32 %v0_1000ba58 to i32*
  store i32 %v2_1000ba94, i32* %v2_1000baa4, align 4
  %v0_1000baa8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000baa8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000baa8 = add i32 %v1_1000baa8, 4
  %v3_1000baa8 = inttoptr i32 %v2_1000baa8 to i32*
  store i32 %v0_1000baa8, i32* %v3_1000baa8, align 4
  %v0_1000baac = load i32, i32* %r30.global-to-local, align 4
  %v1_1000baac = add i32 %v0_1000baac, 8
  %v2_1000baac = inttoptr i32 %v1_1000baac to i32*
  %v3_1000baac = load i32, i32* %v2_1000baac, align 4
  store i32 %v3_1000baac, i32* %r9.global-to-local, align 4
  %v1_1000bab0 = add i32 %v0_1000baac, 12
  %v2_1000bab0 = inttoptr i32 %v1_1000bab0 to i32*
  %v3_1000bab0 = load i32, i32* %v2_1000bab0, align 4
  store i32 %v3_1000bab0, i32* %r10.global-to-local, align 4
  %v3_1000bab4 = load i32, i32* %r29.global-to-local, align 4
  %v4_1000bab4 = add i32 %v3_1000bab4, 16
  %v5_1000bab4 = inttoptr i32 %v4_1000bab4 to i16*
  store i16 %v2_1000ba54, i16* %v5_1000bab4, align 2
  %v0_1000bab8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bab8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bab8 = add i32 %v1_1000bab8, 8
  %v3_1000bab8 = inttoptr i32 %v2_1000bab8 to i32*
  store i32 %v0_1000bab8, i32* %v3_1000bab8, align 4
  %v0_1000babc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000babc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000babc = add i32 %v1_1000babc, 12
  %v3_1000babc = inttoptr i32 %v2_1000babc to i32*
  store i32 %v0_1000babc, i32* %v3_1000babc, align 4
  %v0_1000bac0 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000bac0 = add i32 %v0_1000bac0, 18
  %v2_1000bac0 = inttoptr i32 %v1_1000bac0 to i8*
  %v3_1000bac0 = load i8, i8* %v2_1000bac0, align 1
  %v2_1000bac4 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000bac4 = add i32 %v2_1000bac4, 18
  %v4_1000bac4 = inttoptr i32 %v3_1000bac4 to i8*
  store i8 %v3_1000bac0, i8* %v4_1000bac4, align 1
  %v0_1000bac8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000bac8, i32* %r29.global-to-local, align 4
  %v0_1000bacc = load i32, i32* %r30.global-to-local, align 4
  %v1_1000bacc = add i32 %v0_1000bacc, 16
  %v2_1000bacc = inttoptr i32 %v1_1000bacc to i16*
  %v3_1000bacc = load i16, i16* %v2_1000bacc, align 2
  %v4_1000bacc = zext i16 %v3_1000bacc to i32
  %v1_1000bad0 = add nsw i32 %v4_1000bacc, -19
  store i32 %v1_1000bad0, i32* @r5, align 4
  store i32 268483288, i32* @lr, align 4
  %v0_1000bad4 = call i32 @function_1000bf34()
  %v0_1000bad8 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000bad8 = add i32 %v0_1000bad8, 16
  %v2_1000bad8 = inttoptr i32 %v1_1000bad8 to i16*
  %v3_1000bad8 = load i16, i16* %v2_1000bad8, align 2
  %v4_1000bad8 = zext i16 %v3_1000bad8 to i32
  %v2_1000badc = add i32 %v4_1000bad8, %v0_1000bad8
  store i32 %v2_1000badc, i32* %r30.global-to-local, align 4
  %v1_1000bae0.pre = load i32, i32* %r24.global-to-local, align 4
  %v0_1000bae4.pre = load i32, i32* @r28, align 4
  %v0_1000baec.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bae0 = add i32 %v1_1000bae0.pre, %v1_1000b9f8
  %v1_1000bae4 = load i32, i32* @r23, align 4
  %v2_1000bae4 = add i32 %v1_1000bae4, %v0_1000bae4.pre
  store i32 %v2_1000bae4, i32* %r10.global-to-local, align 4
  %v2_1000bae8 = icmp ult i32 %v2_1000badc, %v2_1000bae0
  %v1_1000baec = add i32 %v0_1000baec.pre, 19
  store i32 %v1_1000baec, i32* @r3, align 4
  %v1_1000baf0 = add i32 %v2_1000badc, 19
  store i32 %v1_1000baf0, i32* @r4, align 4
  br i1 %v2_1000bae8, label %dec_label_pc_1000ba4c, label %dec_label_pc_1000baf8

dec_label_pc_1000baf8:                            ; preds = %dec_label_pc_1000ba38, %dec_label_pc_1000ba94, %dec_label_pc_1000ba64
  %v1_1000baf8 = phi i32 [ %v0_1000ba78, %dec_label_pc_1000ba64 ], [ %v0_1000ba38, %dec_label_pc_1000ba38 ], [ %v0_1000baec.pre, %dec_label_pc_1000ba94 ]
  %v0_1000baf8 = phi i32 [ %v1_1000ba78, %dec_label_pc_1000ba64 ], [ %v0_1000ba38, %dec_label_pc_1000ba38 ], [ %v0_1000bae4.pre, %dec_label_pc_1000ba94 ]
  %v2_1000baf8 = sub i32 %v1_1000baf8, %v0_1000baf8
  store i32 %v2_1000baf8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000bafc

dec_label_pc_1000bafc:                            ; preds = %dec_label_pc_1000ba80, %dec_label_pc_1000ba30, %dec_label_pc_1000baf8
  %v0_1000bb00 = phi i32 [ %v0_1000bb00.pre, %dec_label_pc_1000ba80 ], [ -1, %dec_label_pc_1000ba30 ], [ %v2_1000baf8, %dec_label_pc_1000baf8 ]
  %v0_1000bafc = load i32, i32* @r1, align 4
  %v1_1000bafc = inttoptr i32 %v0_1000bafc to i32*
  %v2_1000bafc = load i32, i32* %v1_1000bafc, align 4
  store i32 %v2_1000bafc, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000bb00

; uselistorder directives
  uselistorder i32 %v2_1000badc, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000ba94, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000ba54, { 1, 0 }
  uselistorder i32 %v0_1000ba08, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_1000b9f8, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 7, 8, 9, 0, 3, 4, 5, 6, 10, 11, 12, 13, 1, 2 }
  uselistorder i32 22, { 0, 1, 2, 3, 12, 4, 5, 6, 7, 13, 14, 15, 8, 9, 10, 11 }
  uselistorder i32 7, { 90, 104, 20, 21, 58, 22, 23, 59, 24, 25, 60, 26, 27, 61, 62, 28, 29, 63, 1, 64, 30, 31, 65, 32, 33, 66, 34, 67, 35, 68, 36, 69, 2, 70, 3, 71, 37, 38, 72, 4, 73, 5, 74, 6, 75, 7, 76, 39, 77, 40, 78, 41, 79, 42, 80, 43, 81, 44, 82, 8, 83, 45, 84, 9, 85, 46, 86, 10, 87, 11, 88, 89, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 56, 91, 12, 92, 93, 13, 94, 95, 96, 14, 15, 97, 16, 98, 17, 99, 57, 100, 101, 18, 102, 103, 19, 105 }
  uselistorder i32 19, { 31, 32, 1, 2, 0, 22, 23, 24, 4, 6, 5, 25, 14, 15, 26, 8, 7, 27, 16, 17, 28, 29, 30, 3, 18, 19, 20, 21, 9, 33, 10, 34, 11, 35, 12, 13 }
  uselistorder i32* @r26, { 42, 43, 44, 35, 36, 37, 77, 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 55, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i32* @r25, { 15, 16, 17, 10, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 18, 19, 20, 21, 0, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32* @r27, { 69, 61, 62, 122, 123, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 63, 64, 1, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121 }
  uselistorder i32 23, { 14, 9, 15, 0, 1, 10, 2, 3, 11, 4, 5, 12, 13, 6, 7, 8 }
  uselistorder i32* @r22, { 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* @r23, { 14, 0, 15, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25 }
  uselistorder i32* @r1, { 5, 6, 1, 2, 3, 0, 7, 4, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 16, 17, 18, 27, 23, 25, 24, 26, 0, 29, 28, 1, 2, 3, 19, 20, 21, 22, 4, 5, 6, 7, 8, 9, 15, 10, 12, 13, 11, 14, 30 }
  uselistorder i32 27, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 30, { 7, 11, 0, 4, 5, 6, 1, 8, 2, 9, 3, 10 }
  uselistorder label %dec_label_pc_1000bafc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000baf8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000ba4c, { 1, 0 }
}

define i32 @function_1000bb18() local_unnamed_addr {
dec_label_pc_1000bb18:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000bb30 = call i32 @__asm_mfcr()
  %v1_1000bb34 = and i32 %v0_1000bb30, 268435456
  %v3_1000bb34 = icmp eq i32 %v1_1000bb34, 0
  store i32 %v0_1000bb30, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bb34, label %dec_label_pc_1000bb4c, label %dec_label_pc_1000bb40

dec_label_pc_1000bb40:                            ; preds = %dec_label_pc_1000bb18
  %v0_1000bb40 = call i32 @function_1000a14c()
  %v0_1000bb44 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bb44 = inttoptr i32 %v0_1000bb40 to i32*
  store i32 %v0_1000bb44, i32* %v2_1000bb44, align 4
  br label %dec_label_pc_1000bb4c

dec_label_pc_1000bb4c:                            ; preds = %dec_label_pc_1000bb18, %dec_label_pc_1000bb40
  %v0_1000bb5c = phi i32 [ %v0_1000bb30, %dec_label_pc_1000bb18 ], [ -1, %dec_label_pc_1000bb40 ]
  ret i32 %v0_1000bb5c

; uselistorder directives
  uselistorder label %dec_label_pc_1000bb4c, { 1, 0 }
}

define i32 @function_1000bb60() local_unnamed_addr {
dec_label_pc_1000bb60:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000bb78 = call i32 @__asm_mfcr()
  %v1_1000bb7c = and i32 %v0_1000bb78, 268435456
  %v3_1000bb7c = icmp eq i32 %v1_1000bb7c, 0
  store i32 %v0_1000bb78, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bb7c, label %dec_label_pc_1000bb94, label %dec_label_pc_1000bb88

dec_label_pc_1000bb88:                            ; preds = %dec_label_pc_1000bb60
  %v0_1000bb88 = call i32 @function_1000a14c()
  %v0_1000bb8c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bb8c = inttoptr i32 %v0_1000bb88 to i32*
  store i32 %v0_1000bb8c, i32* %v2_1000bb8c, align 4
  br label %dec_label_pc_1000bb94

dec_label_pc_1000bb94:                            ; preds = %dec_label_pc_1000bb60, %dec_label_pc_1000bb88
  %v0_1000bba4 = phi i32 [ %v0_1000bb78, %dec_label_pc_1000bb60 ], [ -1, %dec_label_pc_1000bb88 ]
  ret i32 %v0_1000bba4

; uselistorder directives
  uselistorder label %dec_label_pc_1000bb94, { 1, 0 }
}

define i32 @function_1000bba8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bba8:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000bbc0 = call i32 @__asm_mfcr()
  %v1_1000bbc4 = and i32 %v0_1000bbc0, 268435456
  %v3_1000bbc4 = icmp eq i32 %v1_1000bbc4, 0
  store i32 %v0_1000bbc0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bbc4, label %dec_label_pc_1000bbdc, label %dec_label_pc_1000bbd0

dec_label_pc_1000bbd0:                            ; preds = %dec_label_pc_1000bba8
  %v0_1000bbd0 = call i32 @function_1000a14c()
  %v0_1000bbd4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bbd4 = inttoptr i32 %v0_1000bbd0 to i32*
  store i32 %v0_1000bbd4, i32* %v2_1000bbd4, align 4
  br label %dec_label_pc_1000bbdc

dec_label_pc_1000bbdc:                            ; preds = %dec_label_pc_1000bba8, %dec_label_pc_1000bbd0
  %v0_1000bbec = phi i32 [ %v0_1000bbc0, %dec_label_pc_1000bba8 ], [ -1, %dec_label_pc_1000bbd0 ]
  ret i32 %v0_1000bbec

; uselistorder directives
  uselistorder label %dec_label_pc_1000bbdc, { 1, 0 }
}

define i32 @function_1000bbf0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bbf0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000bc08 = call i32 @__asm_mfcr()
  %v1_1000bc0c = and i32 %v0_1000bc08, 268435456
  %v3_1000bc0c = icmp eq i32 %v1_1000bc0c, 0
  store i32 %v0_1000bc08, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bc0c, label %dec_label_pc_1000bc24, label %dec_label_pc_1000bc18

dec_label_pc_1000bc18:                            ; preds = %dec_label_pc_1000bbf0
  %v0_1000bc18 = call i32 @function_1000a14c()
  %v0_1000bc1c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bc1c = inttoptr i32 %v0_1000bc18 to i32*
  store i32 %v0_1000bc1c, i32* %v2_1000bc1c, align 4
  br label %dec_label_pc_1000bc24

dec_label_pc_1000bc24:                            ; preds = %dec_label_pc_1000bbf0, %dec_label_pc_1000bc18
  %v0_1000bc34 = phi i32 [ %v0_1000bc08, %dec_label_pc_1000bbf0 ], [ -1, %dec_label_pc_1000bc18 ]
  ret i32 %v0_1000bc34

; uselistorder directives
  uselistorder label %dec_label_pc_1000bc24, { 1, 0 }
}

define i32 @function_1000bc38(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000bc38:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000bc38 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000bc64 = call i32 @__asm_mfcr()
  %v1_1000bc68 = and i32 %v0_1000bc64, 268435456
  %v3_1000bc68 = icmp eq i32 %v1_1000bc68, 0
  store i32 %v0_1000bc64, i32* %r31.global-to-local, align 4
  store i32 %v0_1000bc64, i32* %r0.global-to-local, align 4
  br i1 %v3_1000bc68, label %dec_label_pc_1000bc8c, label %dec_label_pc_1000bc7c

dec_label_pc_1000bc7c:                            ; preds = %dec_label_pc_1000bc38
  %v0_1000bc7c = call i32 @function_1000a14c()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000bc84 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bc84 = inttoptr i32 %v0_1000bc7c to i32*
  store i32 %v0_1000bc84, i32* %v2_1000bc84, align 4
  %v0_1000bc90.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000bc90

dec_label_pc_1000bc8c:                            ; preds = %dec_label_pc_1000bc38
  %v3_1000bc74 = icmp eq i32 %v0_1000bc64, 0
  br i1 %v3_1000bc74, label %dec_label_pc_1000bc9c, label %dec_label_pc_1000bc90

dec_label_pc_1000bc90:                            ; preds = %dec_label_pc_1000bc8c, %dec_label_pc_1000bc7c
  %v0_1000bc90 = phi i32 [ %v0_1000bc64, %dec_label_pc_1000bc8c ], [ %v0_1000bc90.pre, %dec_label_pc_1000bc7c ]
  %tmp = icmp slt i32 %v0_1000bc90, 0
  %v1_1000bc94 = zext i1 %tmp to i32
  %v2_1000bc94 = ashr i32 %v0_1000bc90, 31
  %v3_1000bc94 = and i32 %v2_1000bc94, -2
  %v4_1000bc94 = or i32 %v3_1000bc94, %v1_1000bc94
  br label %dec_label_pc_1000bca4

dec_label_pc_1000bc9c:                            ; preds = %dec_label_pc_1000bc8c
  %v3_1000bc9c = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000bca4

dec_label_pc_1000bca4:                            ; preds = %dec_label_pc_1000bc90, %dec_label_pc_1000bc9c
  %v0_1000bcb4 = phi i32 [ %v4_1000bc94, %dec_label_pc_1000bc90 ], [ %v3_1000bc9c, %dec_label_pc_1000bc9c ]
  store i32 %v0_1000bc38, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000bcb4

; uselistorder directives
  uselistorder i32 %v0_1000bc90, { 1, 0 }
  uselistorder i32 %v0_1000bc64, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 7, 1, 0, 9, 10, 6, 2, 11, 3, 12, 4, 5 }
  uselistorder label %dec_label_pc_1000bca4, { 1, 0 }
}

define i32 @function_1000bcb8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000bcb8:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000bcd0 = call i32 @__asm_mfcr()
  %v1_1000bcd4 = and i32 %v0_1000bcd0, 268435456
  %v3_1000bcd4 = icmp eq i32 %v1_1000bcd4, 0
  store i32 %v0_1000bcd0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bcd4, label %dec_label_pc_1000bcec, label %dec_label_pc_1000bce0

dec_label_pc_1000bce0:                            ; preds = %dec_label_pc_1000bcb8
  %v0_1000bce0 = call i32 @function_1000a14c()
  %v0_1000bce4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bce4 = inttoptr i32 %v0_1000bce0 to i32*
  store i32 %v0_1000bce4, i32* %v2_1000bce4, align 4
  br label %dec_label_pc_1000bcec

dec_label_pc_1000bcec:                            ; preds = %dec_label_pc_1000bcb8, %dec_label_pc_1000bce0
  %v0_1000bcfc = phi i32 [ %v0_1000bcd0, %dec_label_pc_1000bcb8 ], [ -1, %dec_label_pc_1000bce0 ]
  ret i32 %v0_1000bcfc

; uselistorder directives
  uselistorder label %dec_label_pc_1000bcec, { 1, 0 }
}

define i32 @function_1000bd00(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bd00:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000bd1c = load i32, i32* @global_var_1001d1f0.542, align 4
  %v3_1000bd20 = icmp eq i32 %v3_1000bd1c, 0
  br i1 %v3_1000bd20, label %dec_label_pc_1000bd28, label %dec_label_pc_1000bd34

dec_label_pc_1000bd28:                            ; preds = %dec_label_pc_1000bd00
  store i32 268483884, i32* @lr, align 4
  %v1_1000bd28 = call i32 @function_1000c2f4(i32 0)
  %v1_1000bd2c = icmp slt i32 %v1_1000bd28, 0
  br i1 %v1_1000bd2c, label %dec_label_pc_1000bd54, label %dec_label_pc_1000bd28.dec_label_pc_1000bd34_crit_edge

dec_label_pc_1000bd28.dec_label_pc_1000bd34_crit_edge: ; preds = %dec_label_pc_1000bd28
  %v0_1000bd34.pre = load i32, i32* @r30, align 4
  %v3_1000bd38.pre = load i32, i32* @global_var_1001d1f0.542, align 4
  br label %dec_label_pc_1000bd34

dec_label_pc_1000bd34:                            ; preds = %dec_label_pc_1000bd28.dec_label_pc_1000bd34_crit_edge, %dec_label_pc_1000bd00
  %v3_1000bd38 = phi i32 [ %v3_1000bd38.pre, %dec_label_pc_1000bd28.dec_label_pc_1000bd34_crit_edge ], [ %v3_1000bd1c, %dec_label_pc_1000bd00 ]
  %v1_1000bd40 = phi i32 [ %v0_1000bd34.pre, %dec_label_pc_1000bd28.dec_label_pc_1000bd34_crit_edge ], [ %arg1, %dec_label_pc_1000bd00 ]
  %v3_1000bd34 = icmp eq i32 %v1_1000bd40, 0
  store i32 %v3_1000bd38, i32* @r31, align 4
  br i1 %v3_1000bd34, label %dec_label_pc_1000bd58, label %dec_label_pc_1000bd48

dec_label_pc_1000bd48:                            ; preds = %dec_label_pc_1000bd34
  %v2_1000bd40 = add i32 %v1_1000bd40, %v3_1000bd38
  store i32 268483916, i32* @lr, align 4
  %v1_1000bd48 = call i32 @function_1000c2f4(i32 %v2_1000bd40)
  %tmp6 = icmp sgt i32 %v1_1000bd48, -1
  br i1 %tmp6, label %dec_label_pc_1000bd48.dec_label_pc_1000bd58_crit_edge, label %dec_label_pc_1000bd54

dec_label_pc_1000bd48.dec_label_pc_1000bd58_crit_edge: ; preds = %dec_label_pc_1000bd48
  %v0_1000bd5c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000bd58

dec_label_pc_1000bd54:                            ; preds = %dec_label_pc_1000bd48, %dec_label_pc_1000bd28
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000bd58

dec_label_pc_1000bd58:                            ; preds = %dec_label_pc_1000bd48.dec_label_pc_1000bd58_crit_edge, %dec_label_pc_1000bd34, %dec_label_pc_1000bd54
  %v0_1000bd5c = phi i32 [ %v0_1000bd5c.pre, %dec_label_pc_1000bd48.dec_label_pc_1000bd58_crit_edge ], [ %v3_1000bd38, %dec_label_pc_1000bd34 ], [ -1, %dec_label_pc_1000bd54 ]
  ret i32 %v0_1000bd5c

; uselistorder directives
  uselistorder i32 %v3_1000bd38, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000c2f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd58, { 2, 0, 1 }
}

define i32 @function_1000bd70(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bd70:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000bd88 = call i32 @__asm_mfcr()
  %v1_1000bd8c = and i32 %v0_1000bd88, 268435456
  %v3_1000bd8c = icmp eq i32 %v1_1000bd8c, 0
  store i32 %v0_1000bd88, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bd8c, label %dec_label_pc_1000bda4, label %dec_label_pc_1000bd98

dec_label_pc_1000bd98:                            ; preds = %dec_label_pc_1000bd70
  %v0_1000bd98 = call i32 @function_1000a14c()
  %v0_1000bd9c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bd9c = inttoptr i32 %v0_1000bd98 to i32*
  store i32 %v0_1000bd9c, i32* %v2_1000bd9c, align 4
  br label %dec_label_pc_1000bda4

dec_label_pc_1000bda4:                            ; preds = %dec_label_pc_1000bd70, %dec_label_pc_1000bd98
  %v0_1000bdb4 = phi i32 [ %v0_1000bd88, %dec_label_pc_1000bd70 ], [ -1, %dec_label_pc_1000bd98 ]
  ret i32 %v0_1000bdb4

; uselistorder directives
  uselistorder label %dec_label_pc_1000bda4, { 1, 0 }
}

define i32 @function_1000bdb8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000bdb8:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268484064, i32* @lr, align 4
  %v3_1000bddc = call i32 @function_1000a234(i32 %arg2, i32 0, i32 104)
  %v2_1000bde0 = load i32, i32* %arg1, align 4
  %v1_1000bde4 = add i32 %tmp, 4
  %v2_1000bde4 = inttoptr i32 %v1_1000bde4 to i32*
  %v3_1000bde4 = load i32, i32* %v2_1000bde4, align 4
  store i32 %v3_1000bde4, i32* %r10.global-to-local, align 4
  %v1_1000bde8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bde8 = inttoptr i32 %v1_1000bde8 to i32*
  store i32 %v2_1000bde0, i32* %v2_1000bde8, align 4
  %v0_1000bdec = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bdec = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bdec = add i32 %v1_1000bdec, 4
  %v3_1000bdec = inttoptr i32 %v2_1000bdec to i32*
  store i32 %v0_1000bdec, i32* %v3_1000bdec, align 4
  %v0_1000bdf0 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000bdf0 = add i32 %v0_1000bdf0, 8
  %v2_1000bdf0 = inttoptr i32 %v1_1000bdf0 to i32*
  %v3_1000bdf0 = load i32, i32* %v2_1000bdf0, align 4
  %v1_1000bdf4 = add i32 %v0_1000bdf0, 12
  %v2_1000bdf4 = inttoptr i32 %v1_1000bdf4 to i32*
  %v3_1000bdf4 = load i32, i32* %v2_1000bdf4, align 4
  store i32 %v3_1000bdf4, i32* %r10.global-to-local, align 4
  %v1_1000bdf8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bdf8 = add i32 %v1_1000bdf8, 8
  %v3_1000bdf8 = inttoptr i32 %v2_1000bdf8 to i32*
  store i32 %v3_1000bdf0, i32* %v3_1000bdf8, align 4
  %v0_1000bdfc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bdfc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bdfc = add i32 %v1_1000bdfc, 12
  %v3_1000bdfc = inttoptr i32 %v2_1000bdfc to i32*
  store i32 %v0_1000bdfc, i32* %v3_1000bdfc, align 4
  %v0_1000be00 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000be00 = add i32 %v0_1000be00, 16
  %v2_1000be00 = inttoptr i32 %v1_1000be00 to i32*
  %v3_1000be00 = load i32, i32* %v2_1000be00, align 4
  %v1_1000be04 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000be04 = add i32 %v1_1000be04, 16
  %v3_1000be04 = inttoptr i32 %v2_1000be04 to i32*
  store i32 %v3_1000be00, i32* %v3_1000be04, align 4
  %v0_1000be08 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000be08 = add i32 %v0_1000be08, 20
  %v2_1000be08 = inttoptr i32 %v1_1000be08 to i32*
  %v3_1000be08 = load i32, i32* %v2_1000be08, align 4
  %v1_1000be0c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000be0c = add i32 %v1_1000be0c, 20
  %v3_1000be0c = inttoptr i32 %v2_1000be0c to i32*
  store i32 %v3_1000be08, i32* %v3_1000be0c, align 4
  %v0_1000be10 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000be10 = add i32 %v0_1000be10, 24
  %v2_1000be10 = inttoptr i32 %v1_1000be10 to i32*
  %v3_1000be10 = load i32, i32* %v2_1000be10, align 4
  %v1_1000be14 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000be14 = add i32 %v1_1000be14, 24
  %v3_1000be14 = inttoptr i32 %v2_1000be14 to i32*
  store i32 %v3_1000be10, i32* %v3_1000be14, align 4
  %v0_1000be18 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000be18 = add i32 %v0_1000be18, 28
  %v2_1000be18 = inttoptr i32 %v1_1000be18 to i32*
  %v3_1000be18 = load i32, i32* %v2_1000be18, align 4
  %v1_1000be1c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000be1c = add i32 %v1_1000be1c, 28
  %v3_1000be1c = inttoptr i32 %v2_1000be1c to i32*
  store i32 %v3_1000be18, i32* %v3_1000be1c, align 4
  %v0_1000be20 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000be20 = add i32 %v0_1000be20, 32
  %v2_1000be20 = inttoptr i32 %v1_1000be20 to i32*
  %v3_1000be20 = load i32, i32* %v2_1000be20, align 4
  %v1_1000be24 = add i32 %v0_1000be20, 36
  %v2_1000be24 = inttoptr i32 %v1_1000be24 to i32*
  %v3_1000be24 = load i32, i32* %v2_1000be24, align 4
  store i32 %v3_1000be24, i32* %r10.global-to-local, align 4
  %v1_1000be28 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000be28 = add i32 %v1_1000be28, 32
  %v3_1000be28 = inttoptr i32 %v2_1000be28 to i32*
  store i32 %v3_1000be20, i32* %v3_1000be28, align 4
  %v0_1000be2c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000be2c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000be2c = add i32 %v1_1000be2c, 36
  %v3_1000be2c = inttoptr i32 %v2_1000be2c to i32*
  store i32 %v0_1000be2c, i32* %v3_1000be2c, align 4
  %v0_1000be30 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000be30 = add i32 %v0_1000be30, 48
  %v2_1000be30 = inttoptr i32 %v1_1000be30 to i32*
  %v3_1000be30 = load i32, i32* %v2_1000be30, align 4
  %v1_1000be34 = add i32 %v0_1000be30, 52
  %v2_1000be34 = inttoptr i32 %v1_1000be34 to i32*
  %v3_1000be34 = load i32, i32* %v2_1000be34, align 4
  store i32 %v3_1000be34, i32* %r10.global-to-local, align 4
  %v1_1000be38 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000be38 = add i32 %v1_1000be38, 48
  %v3_1000be38 = inttoptr i32 %v2_1000be38 to i32*
  store i32 %v3_1000be30, i32* %v3_1000be38, align 4
  %v0_1000be3c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000be3c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000be3c = add i32 %v1_1000be3c, 52
  %v3_1000be3c = inttoptr i32 %v2_1000be3c to i32*
  store i32 %v0_1000be3c, i32* %v3_1000be3c, align 4
  %v0_1000be40 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000be40 = add i32 %v0_1000be40, 56
  %v2_1000be40 = inttoptr i32 %v1_1000be40 to i32*
  %v3_1000be40 = load i32, i32* %v2_1000be40, align 4
  %v1_1000be44 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000be44 = add i32 %v1_1000be44, 56
  %v3_1000be44 = inttoptr i32 %v2_1000be44 to i32*
  store i32 %v3_1000be40, i32* %v3_1000be44, align 4
  %v0_1000be48 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000be48 = add i32 %v0_1000be48, 64
  %v2_1000be48 = inttoptr i32 %v1_1000be48 to i32*
  %v3_1000be48 = load i32, i32* %v2_1000be48, align 4
  %v1_1000be4c = add i32 %v0_1000be48, 68
  %v2_1000be4c = inttoptr i32 %v1_1000be4c to i32*
  %v3_1000be4c = load i32, i32* %v2_1000be4c, align 4
  store i32 %v3_1000be4c, i32* %r10.global-to-local, align 4
  %v1_1000be50 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000be50 = add i32 %v1_1000be50, 64
  %v3_1000be50 = inttoptr i32 %v2_1000be50 to i32*
  store i32 %v3_1000be48, i32* %v3_1000be50, align 4
  %v0_1000be54 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000be54 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000be54 = add i32 %v1_1000be54, 68
  %v3_1000be54 = inttoptr i32 %v2_1000be54 to i32*
  store i32 %v0_1000be54, i32* %v3_1000be54, align 4
  %v0_1000be58 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000be58 = add i32 %v0_1000be58, 72
  %v2_1000be58 = inttoptr i32 %v1_1000be58 to i32*
  %v3_1000be58 = load i32, i32* %v2_1000be58, align 4
  %v1_1000be5c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000be5c = add i32 %v1_1000be5c, 72
  %v3_1000be5c = inttoptr i32 %v2_1000be5c to i32*
  store i32 %v3_1000be58, i32* %v3_1000be5c, align 4
  %v0_1000be60 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000be60 = add i32 %v0_1000be60, 80
  %v2_1000be60 = inttoptr i32 %v1_1000be60 to i32*
  %v3_1000be60 = load i32, i32* %v2_1000be60, align 4
  %v1_1000be64 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000be64 = add i32 %v1_1000be64, 80
  %v3_1000be64 = inttoptr i32 %v2_1000be64 to i32*
  store i32 %v3_1000be60, i32* %v3_1000be64, align 4
  %v0_1000be68 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000be68 = add i32 %v0_1000be68, 88
  %v2_1000be68 = inttoptr i32 %v1_1000be68 to i32*
  %v3_1000be68 = load i32, i32* %v2_1000be68, align 4
  %v1_1000be6c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000be6c = add i32 %v1_1000be6c, 88
  %v3_1000be6c = inttoptr i32 %v2_1000be6c to i32*
  store i32 %v3_1000be68, i32* %v3_1000be6c, align 4
  ret i32 %v3_1000bddc

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 0, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 10, 9, 8, 11, 12 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000be84(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000be84:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000be88 = load i32, i32* @lr, align 4
  store i32 %v0_1000be88, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268484268, i32* @lr, align 4
  %v3_1000bea8 = call i32 @function_1000a234(i32 %arg2, i32 0, i32 88)
  %v0_1000beac = load i32, i32* @r28, align 4
  %v1_1000beac = inttoptr i32 %v0_1000beac to i32*
  %v2_1000beac = load i32, i32* %v1_1000beac, align 4
  store i32 %v2_1000beac, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000beb4 = load i32, i32* @r29, align 4
  %v2_1000beb4 = add i32 %v1_1000beb4, 4
  %v3_1000beb4 = inttoptr i32 %v2_1000beb4 to i32*
  store i32 %v2_1000beac, i32* %v3_1000beb4, align 4
  %v0_1000beb8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000beb8 = load i32, i32* @r29, align 4
  %v2_1000beb8 = inttoptr i32 %v1_1000beb8 to i32*
  store i32 %v0_1000beb8, i32* %v2_1000beb8, align 4
  %v0_1000bebc = load i32, i32* @r28, align 4
  %v1_1000bebc = add i32 %v0_1000bebc, 4
  %v2_1000bebc = inttoptr i32 %v1_1000bebc to i32*
  %v3_1000bebc = load i32, i32* %v2_1000bebc, align 4
  store i32 %v3_1000bebc, i32* %r0.global-to-local, align 4
  %v1_1000bec0 = load i32, i32* @r29, align 4
  %v2_1000bec0 = add i32 %v1_1000bec0, 12
  %v3_1000bec0 = inttoptr i32 %v2_1000bec0 to i32*
  store i32 %v3_1000bebc, i32* %v3_1000bec0, align 4
  %v0_1000bec4 = load i32, i32* @r28, align 4
  %v1_1000bec4 = add i32 %v0_1000bec4, 8
  %v2_1000bec4 = inttoptr i32 %v1_1000bec4 to i32*
  %v3_1000bec4 = load i32, i32* %v2_1000bec4, align 4
  store i32 %v3_1000bec4, i32* %r0.global-to-local, align 4
  %v1_1000bec8 = load i32, i32* @r29, align 4
  %v2_1000bec8 = add i32 %v1_1000bec8, 16
  %v3_1000bec8 = inttoptr i32 %v2_1000bec8 to i32*
  store i32 %v3_1000bec4, i32* %v3_1000bec8, align 4
  %v0_1000becc = load i32, i32* @r28, align 4
  %v1_1000becc = add i32 %v0_1000becc, 12
  %v2_1000becc = inttoptr i32 %v1_1000becc to i16*
  %v3_1000becc = load i16, i16* %v2_1000becc, align 2
  %v4_1000becc = zext i16 %v3_1000becc to i32
  store i32 %v4_1000becc, i32* %r0.global-to-local, align 4
  %v1_1000bed0 = load i32, i32* @r29, align 4
  %v2_1000bed0 = add i32 %v1_1000bed0, 20
  %v3_1000bed0 = inttoptr i32 %v2_1000bed0 to i32*
  store i32 %v4_1000becc, i32* %v3_1000bed0, align 4
  %v0_1000bed4 = load i32, i32* @r28, align 4
  %v1_1000bed4 = add i32 %v0_1000bed4, 16
  %v2_1000bed4 = inttoptr i32 %v1_1000bed4 to i32*
  %v3_1000bed4 = load i32, i32* %v2_1000bed4, align 4
  store i32 %v3_1000bed4, i32* %r0.global-to-local, align 4
  %v1_1000bed8 = load i32, i32* @r29, align 4
  %v2_1000bed8 = add i32 %v1_1000bed8, 24
  %v3_1000bed8 = inttoptr i32 %v2_1000bed8 to i32*
  store i32 %v3_1000bed4, i32* %v3_1000bed8, align 4
  %v0_1000bedc = load i32, i32* @r28, align 4
  %v1_1000bedc = add i32 %v0_1000bedc, 20
  %v2_1000bedc = inttoptr i32 %v1_1000bedc to i32*
  %v3_1000bedc = load i32, i32* %v2_1000bedc, align 4
  store i32 %v3_1000bedc, i32* %r0.global-to-local, align 4
  %v1_1000bee0 = load i32, i32* @r29, align 4
  %v2_1000bee0 = add i32 %v1_1000bee0, 28
  %v3_1000bee0 = inttoptr i32 %v2_1000bee0 to i32*
  store i32 %v3_1000bedc, i32* %v3_1000bee0, align 4
  %v0_1000bee4 = load i32, i32* @r28, align 4
  %v1_1000bee4 = add i32 %v0_1000bee4, 24
  %v2_1000bee4 = inttoptr i32 %v1_1000bee4 to i32*
  %v3_1000bee4 = load i32, i32* %v2_1000bee4, align 4
  store i32 %v3_1000bee4, i32* %r0.global-to-local, align 4
  %v0_1000bee8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bee8 = load i32, i32* @r29, align 4
  %v2_1000bee8 = add i32 %v1_1000bee8, 32
  %v3_1000bee8 = inttoptr i32 %v2_1000bee8 to i32*
  store i32 %v0_1000bee8, i32* %v3_1000bee8, align 4
  %v0_1000beec = load i32, i32* %r0.global-to-local, align 4
  %v1_1000beec = load i32, i32* @r29, align 4
  %v2_1000beec = add i32 %v1_1000beec, 36
  %v3_1000beec = inttoptr i32 %v2_1000beec to i32*
  store i32 %v0_1000beec, i32* %v3_1000beec, align 4
  %v0_1000bef0 = load i32, i32* @r28, align 4
  %v1_1000bef0 = add i32 %v0_1000bef0, 28
  %v2_1000bef0 = inttoptr i32 %v1_1000bef0 to i32*
  %v3_1000bef0 = load i32, i32* %v2_1000bef0, align 4
  store i32 %v3_1000bef0, i32* %r0.global-to-local, align 4
  %v1_1000bef4 = load i32, i32* @r29, align 4
  %v2_1000bef4 = add i32 %v1_1000bef4, 44
  %v3_1000bef4 = inttoptr i32 %v2_1000bef4 to i32*
  store i32 %v3_1000bef0, i32* %v3_1000bef4, align 4
  %v0_1000bef8 = load i32, i32* @r28, align 4
  %v1_1000bef8 = add i32 %v0_1000bef8, 32
  %v2_1000bef8 = inttoptr i32 %v1_1000bef8 to i32*
  %v3_1000bef8 = load i32, i32* %v2_1000bef8, align 4
  store i32 %v3_1000bef8, i32* %r0.global-to-local, align 4
  %v1_1000befc = load i32, i32* @r29, align 4
  %v2_1000befc = add i32 %v1_1000befc, 48
  %v3_1000befc = inttoptr i32 %v2_1000befc to i32*
  store i32 %v3_1000bef8, i32* %v3_1000befc, align 4
  %v0_1000bf00 = load i32, i32* @r28, align 4
  %v1_1000bf00 = add i32 %v0_1000bf00, 36
  %v2_1000bf00 = inttoptr i32 %v1_1000bf00 to i32*
  %v3_1000bf00 = load i32, i32* %v2_1000bf00, align 4
  store i32 %v3_1000bf00, i32* %r0.global-to-local, align 4
  %v1_1000bf04 = load i32, i32* @r29, align 4
  %v2_1000bf04 = add i32 %v1_1000bf04, 52
  %v3_1000bf04 = inttoptr i32 %v2_1000bf04 to i32*
  store i32 %v3_1000bf00, i32* %v3_1000bf04, align 4
  %v0_1000bf08 = load i32, i32* @r28, align 4
  %v1_1000bf08 = add i32 %v0_1000bf08, 40
  %v2_1000bf08 = inttoptr i32 %v1_1000bf08 to i32*
  %v3_1000bf08 = load i32, i32* %v2_1000bf08, align 4
  store i32 %v3_1000bf08, i32* %r0.global-to-local, align 4
  %v1_1000bf0c = load i32, i32* @r29, align 4
  %v2_1000bf0c = add i32 %v1_1000bf0c, 56
  %v3_1000bf0c = inttoptr i32 %v2_1000bf0c to i32*
  store i32 %v3_1000bf08, i32* %v3_1000bf0c, align 4
  %v0_1000bf10 = load i32, i32* @r28, align 4
  %v1_1000bf10 = add i32 %v0_1000bf10, 48
  %v2_1000bf10 = inttoptr i32 %v1_1000bf10 to i32*
  %v3_1000bf10 = load i32, i32* %v2_1000bf10, align 4
  store i32 %v3_1000bf10, i32* %r0.global-to-local, align 4
  %v1_1000bf14 = load i32, i32* @r29, align 4
  %v2_1000bf14 = add i32 %v1_1000bf14, 64
  %v3_1000bf14 = inttoptr i32 %v2_1000bf14 to i32*
  store i32 %v3_1000bf10, i32* %v3_1000bf14, align 4
  %v0_1000bf18 = load i32, i32* @r28, align 4
  %v1_1000bf18 = add i32 %v0_1000bf18, 56
  %v2_1000bf18 = inttoptr i32 %v1_1000bf18 to i32*
  %v3_1000bf18 = load i32, i32* %v2_1000bf18, align 4
  %v1_1000bf1c = load i32, i32* @r29, align 4
  %v2_1000bf1c = add i32 %v1_1000bf1c, 72
  %v3_1000bf1c = inttoptr i32 %v2_1000bf1c to i32*
  store i32 %v3_1000bf18, i32* %v3_1000bf1c, align 4
  store i32 %v0_1000be88, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000bea8

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 18, 12, 13, 2, 20, 11, 14, 0, 1, 15, 16, 17, 3, 4, 19, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 56, { 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 40, { 9, 0, 4, 1, 5, 6, 7, 8, 10, 3, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 52, { 4, 1, 2, 3, 5, 6, 0, 7 }
  uselistorder i32 48, { 3, 4, 1, 2, 5, 0, 6, 7 }
  uselistorder i32 36, { 2, 3, 0, 1 }
  uselistorder i32 24, { 20, 21, 5, 6, 0, 1, 7, 2, 3, 8, 9, 65, 66, 67, 68, 69, 70, 10, 11, 12, 13, 14, 16, 17, 18, 19, 15, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 75, 76, 77, 78, 79, 4, 80 }
  uselistorder i32 20, { 28, 29, 18, 19, 20, 21, 30, 31, 32, 33, 6, 22, 0, 1, 23, 24, 2, 3, 25, 26, 27, 7, 8, 9, 34, 10, 35, 36, 37, 38, 39, 40, 41, 42, 43, 11, 44, 45, 46, 47, 48, 49, 12, 50, 51, 52, 53, 55, 54, 56, 57, 58, 59, 13, 60, 61, 62, 63, 64, 65, 66, 14, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 15, 78, 79, 80, 4, 16, 81, 82, 83, 5, 17, 84, 85, 86 }
  uselistorder i32 16, { 61, 62, 46, 47, 63, 64, 65, 66, 67, 15, 60, 48, 138, 139, 68, 69, 32, 33, 34, 49, 35, 36, 50, 119, 120, 51, 37, 53, 17, 54, 55, 13, 0, 14, 1, 2, 56, 3, 52, 59, 38, 57, 58, 39, 40, 41, 42, 43, 44, 45, 18, 121, 122, 123, 124, 125, 4, 19, 70, 5, 6, 71, 72, 73, 74, 75, 20, 76, 77, 78, 79, 80, 81, 82, 21, 83, 84, 23, 85, 86, 22, 87, 88, 25, 89, 90, 7, 91, 92, 93, 24, 94, 95, 27, 96, 97, 98, 99, 100, 26, 101, 102, 8, 9, 29, 104, 105, 106, 10, 16, 107, 103, 28, 108, 109, 110, 30, 111, 112, 113, 11, 114, 117, 118, 115, 116, 126, 127, 128, 31, 129, 130, 131, 12, 132, 135, 136, 133, 134, 137 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000bf34() local_unnamed_addr {
dec_label_pc_1000bf34:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000bf34 = load i32, i32* @r5, align 4
  %v1_1000bf34 = call i32 @__asm_rlwinm.(i32 %v0_1000bf34, i32 29, i32 3, i32 31)
  store i32 %v1_1000bf34, i32* %r9.global-to-local, align 4
  %v4_1000bf34 = icmp eq i32 %v1_1000bf34, 0
  %v0_1000bf38 = load i32, i32* @r4, align 4
  %v1_1000bf38 = add i32 %v0_1000bf38, -4
  store i32 %v1_1000bf38, i32* %r4.global-to-local, align 4
  %v0_1000bf3c = load i32, i32* @r3, align 4
  %v1_1000bf3c = add i32 %v0_1000bf3c, -4
  store i32 %v1_1000bf3c, i32* @r11, align 4
  br i1 %v4_1000bf34, label %dec_label_pc_1000bf64, label %dec_label_pc_1000bf44

dec_label_pc_1000bf44:                            ; preds = %dec_label_pc_1000bf34
  %v1_1000bf44 = urem i32 %v1_1000bf3c, 4
  %v3_1000bf44 = icmp eq i32 %v1_1000bf44, 0
  br i1 %v3_1000bf44, label %dec_label_pc_1000bf4c, label %dec_label_pc_1000bfa0

dec_label_pc_1000bf4c:                            ; preds = %dec_label_pc_1000bfc0.dec_label_pc_1000bf4c_crit_edge, %dec_label_pc_1000bf44
  %v1_1000bf58.pre = phi i32 [ %v1_1000bf3c, %dec_label_pc_1000bf44 ], [ %v1_1000bf58.pre.pre, %dec_label_pc_1000bfc0.dec_label_pc_1000bf4c_crit_edge ]
  %v0_1000bf4c = phi i32 [ %v1_1000bf34, %dec_label_pc_1000bf44 ], [ %v1_1000bfc0, %dec_label_pc_1000bfc0.dec_label_pc_1000bf4c_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000bf44 ], [ %v2_1000bfa8, %dec_label_pc_1000bfc0.dec_label_pc_1000bf4c_crit_edge ]
  store i32 %v0_1000bf4c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000bf50

dec_label_pc_1000bf50:                            ; preds = %dec_label_pc_1000bf50, %dec_label_pc_1000bf4c
  %v1_1000bf58 = phi i32 [ %v2_1000bf5c, %dec_label_pc_1000bf50 ], [ %v1_1000bf58.pre, %dec_label_pc_1000bf4c ]
  %v0_1000bf50 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000bf50 = add i32 %v0_1000bf50, 4
  %v2_1000bf50 = inttoptr i32 %v1_1000bf50 to i32*
  %v3_1000bf50 = load i32, i32* %v2_1000bf50, align 4
  %v1_1000bf54 = add i32 %v0_1000bf50, 8
  %v2_1000bf54 = inttoptr i32 %v1_1000bf54 to i32*
  %v3_1000bf54 = load i32, i32* %v2_1000bf54, align 4
  store i32 %v3_1000bf54, i32* %r9.global-to-local, align 4
  store i32 %v1_1000bf54, i32* %r4.global-to-local, align 4
  %v2_1000bf58 = add i32 %v1_1000bf58, 4
  %v3_1000bf58 = inttoptr i32 %v2_1000bf58 to i32*
  store i32 %v3_1000bf50, i32* %v3_1000bf58, align 4
  %v0_1000bf5c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bf5c = load i32, i32* @r11, align 4
  %v2_1000bf5c = add i32 %v1_1000bf5c, 8
  %v3_1000bf5c = inttoptr i32 %v2_1000bf5c to i32*
  store i32 %v0_1000bf5c, i32* %v3_1000bf5c, align 4
  store i32 %v2_1000bf5c, i32* @r11, align 4
  %v0_1000bf60 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bf60 = add i32 %v0_1000bf60, -1
  store i32 %v1_1000bf60, i32* %ctr.global-to-local, align 4
  %v2_1000bf60 = icmp eq i32 %v1_1000bf60, 0
  br i1 %v2_1000bf60, label %dec_label_pc_1000bf64, label %dec_label_pc_1000bf50

dec_label_pc_1000bf64:                            ; preds = %dec_label_pc_1000bf50, %dec_label_pc_1000bfc0, %dec_label_pc_1000bf34
  %.1 = phi i32 [ undef, %dec_label_pc_1000bf34 ], [ %v2_1000bfa8, %dec_label_pc_1000bfc0 ], [ %.0, %dec_label_pc_1000bf50 ]
  %v1_1000bf64 = urem i32 %.1, 8
  store i32 %v1_1000bf64, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000bf64, 4
  br i1 %tmp, label %dec_label_pc_1000bf7c, label %dec_label_pc_1000bf70

dec_label_pc_1000bf70:                            ; preds = %dec_label_pc_1000bf64
  %v0_1000bf70 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000bf70 = add i32 %v0_1000bf70, 4
  %v2_1000bf70 = inttoptr i32 %v1_1000bf70 to i32*
  %v3_1000bf70 = load i32, i32* %v2_1000bf70, align 4
  store i32 %v1_1000bf70, i32* %r4.global-to-local, align 4
  %v1_1000bf74 = add nsw i32 %v1_1000bf64, -4
  store i32 %v1_1000bf74, i32* @r5, align 4
  %v1_1000bf78 = load i32, i32* @r11, align 4
  %v2_1000bf78 = add i32 %v1_1000bf78, 4
  %v3_1000bf78 = inttoptr i32 %v2_1000bf78 to i32*
  store i32 %v3_1000bf70, i32* %v3_1000bf78, align 4
  store i32 %v2_1000bf78, i32* @r11, align 4
  %v0_1000bf7c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000bf7c

dec_label_pc_1000bf7c:                            ; preds = %dec_label_pc_1000bf64, %dec_label_pc_1000bf70
  %v0_1000bf7c = phi i32 [ %v1_1000bf64, %dec_label_pc_1000bf64 ], [ %v0_1000bf7c.pre, %dec_label_pc_1000bf70 ]
  %v3_1000bf7c = icmp eq i32 %v0_1000bf7c, 0
  %v0_1000bf80 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000bf7c, i32 %v0_1000bf80)
  %v0_1000bf84 = load i32, i32* @r5, align 4
  store i32 %v0_1000bf84, i32* %ctr.global-to-local, align 4
  %v0_1000bf88 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000bf88 = add i32 %v0_1000bf88, 3
  store i32 %v1_1000bf88, i32* %r4.global-to-local, align 4
  %v0_1000bf8c = load i32, i32* @r11, align 4
  %v1_1000bf8c = add i32 %v0_1000bf8c, 3
  store i32 %v1_1000bf8c, i32* %r9.global-to-local, align 4
  %v1_1000bf909 = add i32 %v0_1000bf88, 4
  %v2_1000bf9010 = inttoptr i32 %v1_1000bf909 to i8*
  %v3_1000bf9011 = load i8, i8* %v2_1000bf9010, align 1
  store i32 %v1_1000bf909, i32* %r4.global-to-local, align 4
  %v3_1000bf9413 = add i32 %v0_1000bf8c, 4
  %v4_1000bf9414 = inttoptr i32 %v3_1000bf9413 to i8*
  store i8 %v3_1000bf9011, i8* %v4_1000bf9414, align 1
  store i32 %v3_1000bf9413, i32* %r9.global-to-local, align 4
  %v0_1000bf9815 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bf9816 = add i32 %v0_1000bf9815, -1
  store i32 %v1_1000bf9816, i32* %ctr.global-to-local, align 4
  %v2_1000bf9817 = icmp eq i32 %v1_1000bf9816, 0
  br i1 %v2_1000bf9817, label %dec_label_pc_1000bfcc, label %dec_label_pc_1000bf90.dec_label_pc_1000bf90_crit_edge

dec_label_pc_1000bf90.dec_label_pc_1000bf90_crit_edge: ; preds = %dec_label_pc_1000bf7c, %dec_label_pc_1000bf90.dec_label_pc_1000bf90_crit_edge
  %v3_1000bf9418 = phi i32 [ %v3_1000bf94, %dec_label_pc_1000bf90.dec_label_pc_1000bf90_crit_edge ], [ %v3_1000bf9413, %dec_label_pc_1000bf7c ]
  %v0_1000bf90.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000bf90 = add i32 %v0_1000bf90.pre, 1
  %v2_1000bf90 = inttoptr i32 %v1_1000bf90 to i8*
  %v3_1000bf90 = load i8, i8* %v2_1000bf90, align 1
  store i32 %v1_1000bf90, i32* %r4.global-to-local, align 4
  %v3_1000bf94 = add i32 %v3_1000bf9418, 1
  %v4_1000bf94 = inttoptr i32 %v3_1000bf94 to i8*
  store i8 %v3_1000bf90, i8* %v4_1000bf94, align 1
  store i32 %v3_1000bf94, i32* %r9.global-to-local, align 4
  %v0_1000bf98 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bf98 = add i32 %v0_1000bf98, -1
  store i32 %v1_1000bf98, i32* %ctr.global-to-local, align 4
  %v2_1000bf98 = icmp eq i32 %v1_1000bf98, 0
  br i1 %v2_1000bf98, label %dec_label_pc_1000bfcc, label %dec_label_pc_1000bf90.dec_label_pc_1000bf90_crit_edge

dec_label_pc_1000bfa0:                            ; preds = %dec_label_pc_1000bf44
  %v1_1000bfa0 = sub nsw i32 4, %v1_1000bf44
  store i32 %v1_1000bfa0, i32* %ctr.global-to-local, align 4
  %v1_1000bfa8 = load i32, i32* @r5, align 4
  %v2_1000bfa8 = sub i32 %v1_1000bfa8, %v1_1000bfa0
  br label %dec_label_pc_1000bfac

dec_label_pc_1000bfac:                            ; preds = %dec_label_pc_1000bfac.dec_label_pc_1000bfac_crit_edge, %dec_label_pc_1000bfa0
  %v2_1000bfb4 = phi i32 [ %v1_1000bfb8, %dec_label_pc_1000bfac.dec_label_pc_1000bfac_crit_edge ], [ %v1_1000bf3c, %dec_label_pc_1000bfa0 ]
  %v0_1000bfac = phi i32 [ %v0_1000bfac.pre, %dec_label_pc_1000bfac.dec_label_pc_1000bfac_crit_edge ], [ %v1_1000bf38, %dec_label_pc_1000bfa0 ]
  %v1_1000bfac = add i32 %v0_1000bfac, 4
  %v2_1000bfac = inttoptr i32 %v1_1000bfac to i8*
  %v3_1000bfac = load i8, i8* %v2_1000bfac, align 1
  %v1_1000bfb0 = add i32 %v0_1000bfac, 1
  store i32 %v1_1000bfb0, i32* %r4.global-to-local, align 4
  %v3_1000bfb4 = add i32 %v2_1000bfb4, 4
  %v4_1000bfb4 = inttoptr i32 %v3_1000bfb4 to i8*
  store i8 %v3_1000bfac, i8* %v4_1000bfb4, align 1
  %v0_1000bfb8 = load i32, i32* @r11, align 4
  %v1_1000bfb8 = add i32 %v0_1000bfb8, 1
  store i32 %v1_1000bfb8, i32* @r11, align 4
  %v0_1000bfbc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bfbc = add i32 %v0_1000bfbc, -1
  store i32 %v1_1000bfbc, i32* %ctr.global-to-local, align 4
  %v2_1000bfbc = icmp eq i32 %v1_1000bfbc, 0
  br i1 %v2_1000bfbc, label %dec_label_pc_1000bfc0, label %dec_label_pc_1000bfac.dec_label_pc_1000bfac_crit_edge

dec_label_pc_1000bfac.dec_label_pc_1000bfac_crit_edge: ; preds = %dec_label_pc_1000bfac
  %v0_1000bfac.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000bfac

dec_label_pc_1000bfc0:                            ; preds = %dec_label_pc_1000bfac
  %v1_1000bfc0 = call i32 @__asm_rlwinm.(i32 %v2_1000bfa8, i32 29, i32 3, i32 31)
  store i32 %v1_1000bfc0, i32* %r9.global-to-local, align 4
  %v4_1000bfc0 = icmp eq i32 %v1_1000bfc0, 0
  br i1 %v4_1000bfc0, label %dec_label_pc_1000bf64, label %dec_label_pc_1000bfc0.dec_label_pc_1000bf4c_crit_edge

dec_label_pc_1000bfc0.dec_label_pc_1000bf4c_crit_edge: ; preds = %dec_label_pc_1000bfc0
  %v1_1000bf58.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000bf4c

dec_label_pc_1000bfcc:                            ; preds = %dec_label_pc_1000bf90.dec_label_pc_1000bf90_crit_edge, %dec_label_pc_1000bf7c
  %v0_1000bfcc = load i32, i32* @r3, align 4
  ret i32 %v0_1000bfcc

; uselistorder directives
  uselistorder i32 %v1_1000bfc0, { 1, 2, 0 }
  uselistorder i32 %v1_1000bfbc, { 1, 0 }
  uselistorder i32 %v1_1000bfb8, { 1, 0 }
  uselistorder i32 %v0_1000bfac, { 1, 0 }
  uselistorder i32 %v2_1000bfa8, { 2, 1, 0 }
  uselistorder i32 %v1_1000bf98, { 1, 0 }
  uselistorder i32 %v3_1000bf94, { 1, 2, 0 }
  uselistorder i32 %v1_1000bf64, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000bf60, { 1, 0 }
  uselistorder i32 %v2_1000bf5c, { 1, 2, 0 }
  uselistorder i32 %v1_1000bf44, { 1, 0 }
  uselistorder i32 %v1_1000bf3c, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3 }
  uselistorder i32* @r11, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32 29, { 34, 35, 30, 32, 31, 33, 2, 3, 38, 39, 36, 37, 40, 41, 26, 27, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25, 14, 15, 18, 19, 20, 21, 16, 17, 22, 23, 0, 28, 1, 29 }
  uselistorder label %dec_label_pc_1000bf90.dec_label_pc_1000bf90_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf7c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf64, { 1, 0, 2 }
}

define i32 @function_1000bfd0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000bfd0:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268484588, i32* @lr, align 4
  %v0_1000bfe8 = call i32 @function_1000bf34()
  %v0_1000bff0 = load i32, i32* @r28, align 4
  %v1_1000bff0 = load i32, i32* @r29, align 4
  %v2_1000bff0 = add i32 %v1_1000bff0, %v0_1000bff0
  ret i32 %v2_1000bff0

; uselistorder directives
  uselistorder i32* @r28, { 12, 13, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 2, 146, 147, 148, 149, 150, 151, 388, 389, 390, 391, 392, 3, 123, 124, 125, 11, 126, 356, 357, 358, 359, 360, 361, 362, 363, 364, 376, 377, 378, 379, 14, 15, 16, 17, 18, 152, 153, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 5, 42, 4, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 104, 105, 106, 107, 98, 6, 99, 100, 101, 102, 103, 7, 118, 108, 1, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 127, 128, 129, 130, 131, 154, 155, 156, 157, 158, 159, 160, 8, 161, 162, 163, 164, 165, 166, 167, 168, 0, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 9, 213, 214, 215, 216, 217, 220, 221, 218, 219, 224, 225, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 286, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 380, 381, 382, 383, 10, 384, 385, 386, 387 }
}

define i32 @function_1000c004(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000c004:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000c004 = icmp eq i8* %arg1, null
  br i1 %v3_1000c004, label %dec_label_pc_1000c0bc, label %dec_label_pc_1000c00c

dec_label_pc_1000c00c:                            ; preds = %dec_label_pc_1000c004
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000c020.pre = load i32, i32* bitcast (i32** @global_var_1001d17c.524 to i32*), align 4
  br label %dec_label_pc_1000c01c

dec_label_pc_1000c01c:                            ; preds = %dec_label_pc_1000c00c, %dec_label_pc_1000c094
  %v0_1000c094 = phi i32 [ 0, %dec_label_pc_1000c00c ], [ %v2_1000c09c, %dec_label_pc_1000c094 ]
  %v0_1000c098 = phi i32 [ 1, %dec_label_pc_1000c00c ], [ %v1_1000c098, %dec_label_pc_1000c094 ]
  %v0_1000c01c = phi i32 [ %tmp, %dec_label_pc_1000c00c ], [ %v0_1000c01c3, %dec_label_pc_1000c094 ]
  %v1_1000c01c = inttoptr i32 %v0_1000c01c to i8*
  %v2_1000c01c = load i8, i8* %v1_1000c01c, align 1
  %v3_1000c01c = zext i8 %v2_1000c01c to i32
  %v1_1000c024 = mul nuw nsw i32 %v3_1000c01c, 2
  %v2_1000c028 = add i32 %v1_1000c024, %v3_1000c020.pre
  %v3_1000c028 = inttoptr i32 %v2_1000c028 to i16*
  %v4_1000c028 = load i16, i16* %v3_1000c028, align 2
  %v1_1000c02c = and i16 %v4_1000c028, 8
  %v3_1000c02c = icmp eq i16 %v1_1000c02c, 0
  br i1 %v3_1000c02c, label %dec_label_pc_1000c0bc, label %dec_label_pc_1000c034

dec_label_pc_1000c034:                            ; preds = %dec_label_pc_1000c01c
  br label %dec_label_pc_1000c04c

dec_label_pc_1000c03c:                            ; preds = %dec_label_pc_1000c04c
  %v1_1000c050 = mul i32 %v1_1000c09c, 10
  %v2_1000c058 = add i32 %v3_1000c04c, %v1_1000c050
  %v1_1000c03c = add i32 %v2_1000c058, -48
  %v1_1000c040 = add i32 %v0_1000c084, 1
  %v2_1000c044 = icmp sgt i32 %v1_1000c03c, 255
  br i1 %v2_1000c044, label %dec_label_pc_1000c0bc, label %dec_label_pc_1000c04c

dec_label_pc_1000c04c:                            ; preds = %dec_label_pc_1000c03c, %dec_label_pc_1000c034
  %v1_1000c09c = phi i32 [ %v1_1000c03c, %dec_label_pc_1000c03c ], [ 0, %dec_label_pc_1000c034 ]
  %v0_1000c084 = phi i32 [ %v1_1000c040, %dec_label_pc_1000c03c ], [ %v0_1000c01c, %dec_label_pc_1000c034 ]
  %v1_1000c04c = inttoptr i32 %v0_1000c084 to i8*
  %v2_1000c04c = load i8, i8* %v1_1000c04c, align 1
  %v3_1000c04c = zext i8 %v2_1000c04c to i32
  %v1_1000c054 = mul nuw nsw i32 %v3_1000c04c, 2
  %v2_1000c05c = add i32 %v1_1000c054, %v3_1000c020.pre
  %v3_1000c05c = inttoptr i32 %v2_1000c05c to i16*
  %v4_1000c05c = load i16, i16* %v3_1000c05c, align 2
  %v5_1000c05c = zext i16 %v4_1000c05c to i32
  %v1_1000c060 = and i32 %v5_1000c05c, 8
  %v3_1000c060 = icmp eq i32 %v1_1000c060, 0
  br i1 %v3_1000c060, label %dec_label_pc_1000c068, label %dec_label_pc_1000c03c

dec_label_pc_1000c068:                            ; preds = %dec_label_pc_1000c04c
  %v2_1000c068 = icmp sgt i32 %v0_1000c098, 3
  br i1 %v2_1000c068, label %dec_label_pc_1000c080, label %dec_label_pc_1000c070

dec_label_pc_1000c070:                            ; preds = %dec_label_pc_1000c068
  %v3_1000c070 = icmp eq i8 %v2_1000c04c, 46
  br i1 %v3_1000c070, label %dec_label_pc_1000c078, label %dec_label_pc_1000c0bc

dec_label_pc_1000c078:                            ; preds = %dec_label_pc_1000c070
  %v1_1000c078 = add i32 %v0_1000c084, 1
  br label %dec_label_pc_1000c094

dec_label_pc_1000c080:                            ; preds = %dec_label_pc_1000c068
  %v3_1000c080 = icmp eq i8 %v2_1000c04c, 0
  %v1_1000c084 = add i32 %v0_1000c084, 1
  br i1 %v3_1000c080, label %dec_label_pc_1000c094, label %dec_label_pc_1000c08c

dec_label_pc_1000c08c:                            ; preds = %dec_label_pc_1000c080
  %v1_1000c08c = and i32 %v5_1000c05c, 32
  %v3_1000c08c = icmp eq i32 %v1_1000c08c, 0
  br i1 %v3_1000c08c, label %dec_label_pc_1000c0bc, label %dec_label_pc_1000c094

dec_label_pc_1000c094:                            ; preds = %dec_label_pc_1000c08c, %dec_label_pc_1000c080, %dec_label_pc_1000c078
  %v0_1000c01c3 = phi i32 [ %v1_1000c084, %dec_label_pc_1000c08c ], [ %v1_1000c084, %dec_label_pc_1000c080 ], [ %v1_1000c078, %dec_label_pc_1000c078 ]
  %v1_1000c094 = mul i32 %v0_1000c094, 256
  %v1_1000c098 = add nuw nsw i32 %v0_1000c098, 1
  %v2_1000c09c = or i32 %v1_1000c09c, %v1_1000c094
  store i32 %v2_1000c09c, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000c098, 5
  br i1 %tmp10, label %dec_label_pc_1000c01c, label %dec_label_pc_1000c0a8

dec_label_pc_1000c0a8:                            ; preds = %dec_label_pc_1000c094
  %v0_1000c0a8 = load i32, i32* @r4, align 4
  %v3_1000c0a8 = icmp eq i32 %v0_1000c0a8, 0
  %v0_1000c0b0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000c0a8, i32 %v0_1000c0b0)
  %v0_1000c0b4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000c0b4 = load i32, i32* @r4, align 4
  %v2_1000c0b4 = inttoptr i32 %v1_1000c0b4 to i32*
  store i32 %v0_1000c0b4, i32* %v2_1000c0b4, align 4
  ret i32 1

dec_label_pc_1000c0bc:                            ; preds = %dec_label_pc_1000c070, %dec_label_pc_1000c08c, %dec_label_pc_1000c01c, %dec_label_pc_1000c03c, %dec_label_pc_1000c004
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000c09c, { 1, 0 }
  uselistorder i32 %v1_1000c098, { 1, 0 }
  uselistorder i32 %v0_1000c084, { 0, 1, 3, 2 }
  uselistorder i32 5, { 37, 3, 38, 39, 67, 40, 41, 68, 69, 70, 1, 4, 71, 5, 72, 6, 73, 42, 74, 43, 44, 75, 7, 76, 8, 77, 45, 78, 9, 79, 10, 80, 11, 81, 46, 47, 82, 48, 83, 49, 84, 12, 85, 50, 86, 51, 87, 52, 88, 53, 89, 54, 90, 55, 56, 91, 13, 92, 14, 93, 57, 94, 58, 95, 59, 96, 15, 97, 60, 98, 61, 99, 16, 17, 100, 0, 101, 102, 2, 103, 62, 63, 64, 65, 104, 18, 20, 21, 105, 19, 106, 24, 23, 107, 22, 26, 108, 25, 29, 28, 109, 27, 66, 110, 30, 32, 33, 31, 36, 35, 34, 111, 112, 113, 114, 115 }
  uselistorder i8 0, { 6, 10, 1, 11, 12, 8, 13, 14, 15, 16, 17, 18, 2, 19, 20, 21, 22, 23, 25, 27, 24, 3, 26, 4, 28, 29, 7, 9, 30, 31, 32, 33, 34, 35, 36, 37, 5, 38, 39, 40, 41, 43, 42, 0, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i8 46, { 1, 2, 3, 4, 0 }
  uselistorder i32 8, { 189, 3, 190, 191, 118, 73, 74, 119, 120, 121, 122, 123, 124, 194, 195, 11, 192, 193, 12, 178, 177, 175, 176, 162, 163, 164, 179, 180, 181, 182, 183, 184, 4, 75, 76, 77, 5, 196, 6, 125, 126, 127, 128, 129, 130, 16, 15, 78, 36, 37, 79, 18, 17, 80, 38, 39, 81, 82, 7, 8, 9, 83, 84, 85, 40, 41, 87, 42, 43, 88, 44, 45, 89, 46, 90, 47, 48, 91, 49, 50, 92, 51, 52, 93, 53, 94, 54, 95, 55, 96, 19, 97, 56, 98, 57, 99, 58, 100, 59, 101, 60, 102, 20, 103, 61, 104, 62, 105, 63, 106, 64, 107, 21, 108, 65, 109, 22, 110, 23, 111, 24, 112, 114, 113, 86, 115, 116, 117, 25, 157, 66, 67, 68, 69, 70, 131, 26, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 71, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 13, 158, 159, 160, 161, 14, 27, 165, 28, 166, 29, 167, 30, 168, 31, 169, 170, 32, 171, 33, 172, 34, 173, 35, 174, 10, 185, 186, 72, 187, 188, 0, 1, 2 }
  uselistorder i32 255, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 -48, { 2, 0, 1 }
  uselistorder i32 10, { 97, 66, 14, 65, 2, 3, 7, 5, 0, 15, 18, 19, 37, 20, 21, 38, 17, 16, 39, 40, 41, 42, 43, 44, 45, 22, 46, 47, 48, 23, 49, 24, 50, 8, 51, 25, 52, 26, 53, 27, 54, 9, 55, 28, 56, 29, 57, 30, 58, 31, 32, 59, 33, 60, 61, 64, 62, 4, 63, 34, 1, 35, 10, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 6, 77, 11, 78, 79, 80, 81, 12, 82, 83, 84, 85, 86, 13, 87, 88, 89, 90, 91, 92, 93, 94, 95, 36, 96 }
  uselistorder i16 0, { 0, 1, 2, 4, 5, 6, 7, 8, 3, 9, 10, 11 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0bc, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000c01c, { 1, 0 }
}

define i32 @function_1000c0c4(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c0c4:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000c0c8 = load i32, i32* @lr, align 4
  store i32 %v0_1000c0c8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000c0d4 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000c0e4 = add i32 %tmp, 4
  store i32 %v1_1000c0e4, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000c0ec = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000c0ec, i32* @r3, align 4
  br i1 %v3_1000c0d4, label %dec_label_pc_1000c114, label %dec_label_pc_1000c0f4

dec_label_pc_1000c0f4:                            ; preds = %dec_label_pc_1000c0c4
  %v2_1000c0f4 = load i32, i32* %arg2, align 4
  store i32 %v2_1000c0f4, i32* %r0.global-to-local, align 4
  store i32 268484864, i32* @lr, align 4
  %v0_1000c0fc = call i32 @function_1000bf34()
  %v0_1000c100 = load i32, i32* @r31, align 4
  %v1_1000c100 = add i32 %v0_1000c100, 132
  %v2_1000c100 = inttoptr i32 %v1_1000c100 to i32*
  %v3_1000c100 = load i32, i32* %v2_1000c100, align 4
  store i32 %v3_1000c100, i32* %r0.global-to-local, align 4
  %v1_1000c10c = add i32 %v0_1000c100, 136
  %v2_1000c10c = inttoptr i32 %v1_1000c10c to i32*
  %v3_1000c10c = load i32, i32* %v2_1000c10c, align 4
  store i32 %v3_1000c10c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000c114

dec_label_pc_1000c114:                            ; preds = %dec_label_pc_1000c0c4, %dec_label_pc_1000c0f4
  store i32 268484916, i32* @lr, align 4
  %v0_1000c130 = call i32 @function_1000c328()
  %v0_1000c134 = load i32, i32* @r30, align 4
  %v3_1000c134 = icmp eq i32 %v0_1000c134, 0
  store i32 %v0_1000c130, i32* @r31, align 4
  br i1 %v3_1000c134, label %dec_label_pc_1000c170, label %dec_label_pc_1000c144

dec_label_pc_1000c144:                            ; preds = %dec_label_pc_1000c114
  %v1_1000c13c = icmp slt i32 %v0_1000c130, 0
  %v1_1000c144 = add i32 %v0_1000c134, 4
  store i32 %v1_1000c144, i32* @r3, align 4
  %v2_1000c148 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000c148, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000c13c, label %dec_label_pc_1000c170, label %dec_label_pc_1000c154

dec_label_pc_1000c154:                            ; preds = %dec_label_pc_1000c144
  %v3_1000c154 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000c154, i32* %r0.global-to-local, align 4
  %v2_1000c158 = inttoptr i32 %v0_1000c134 to i32*
  store i32 %v3_1000c154, i32* %v2_1000c158, align 4
  store i32 268484960, i32* @lr, align 4
  %v0_1000c15c = call i32 @function_1000bf34()
  %v1_1000c168 = load i32, i32* @r30, align 4
  %v2_1000c168 = add i32 %v1_1000c168, 136
  %v3_1000c168 = inttoptr i32 %v2_1000c168 to i32*
  %v0_1000c16c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c16c = load i32, i32* @r30, align 4
  %v2_1000c16c = add i32 %v1_1000c16c, 132
  %v3_1000c16c = inttoptr i32 %v2_1000c16c to i32*
  store i32 %v0_1000c16c, i32* %v3_1000c16c, align 4
  %v0_1000c174.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000c170

dec_label_pc_1000c170:                            ; preds = %dec_label_pc_1000c144, %dec_label_pc_1000c114, %dec_label_pc_1000c154
  %v0_1000c174 = phi i32 [ %v0_1000c130, %dec_label_pc_1000c144 ], [ %v0_1000c130, %dec_label_pc_1000c114 ], [ %v0_1000c174.pre, %dec_label_pc_1000c154 ]
  store i32 %v0_1000c0c8, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000c174

; uselistorder directives
  uselistorder i32 %v0_1000c130, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 ()* @function_1000bf34, { 2, 1, 6, 4, 0, 3, 5, 7 }
  uselistorder i32* @r5, { 21, 22, 1, 23, 24, 0, 25, 26, 27, 10, 11, 12, 30, 20, 7, 8, 31, 32, 33, 34, 3, 13, 6, 28, 29, 2, 4, 5, 14, 16, 17, 18, 19, 9, 15 }
  uselistorder i32 128, { 9, 10, 0, 1, 2, 3, 6, 4, 7, 5, 8 }
  uselistorder i32* @r30, { 142, 143, 144, 145, 0, 128, 1, 57, 58, 59, 146, 149, 147, 148, 129, 130, 131, 123, 124, 125, 126, 127, 132, 133, 137, 134, 135, 136, 6, 7, 8, 9, 10, 11, 12, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 28, 29, 30, 22, 23, 24, 3, 25, 26, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 31, 33, 34, 32, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 65, 66, 4, 67, 68, 5, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 138, 139, 140, 141 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r31, { 2, 233, 234, 235, 213, 3, 214, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 242, 243, 236, 11, 237, 238, 239, 240, 241, 78, 79, 215, 216, 217, 218, 219, 220, 205, 206, 207, 208, 209, 210, 211, 212, 221, 222, 223, 227, 224, 225, 226, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 101, 4, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 23, 24, 25, 26, 116, 117, 118, 119, 120, 27, 28, 29, 30, 40, 31, 32, 33, 34, 35, 36, 37, 38, 39, 67, 68, 0, 69, 5, 70, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 80, 12, 6, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 121, 122, 123, 124, 125, 126, 127, 128, 129, 1, 7, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 8, 148, 9, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 228, 10, 229, 231, 230, 232 }
  uselistorder label %dec_label_pc_1000c170, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c114, { 1, 0 }
}

define i32 @function_1000c188(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c1bc.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000c1a0 = call i32 @function_1000b4e0()
  %v2_1000c1a8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000c1a8, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000c1c033 = add i32 %v2_1000c1a8, 124
  %v4_1000c1c034 = inttoptr i32 %v3_1000c1c033 to i32*
  store i32 0, i32* %v4_1000c1c034, align 4
  %v0_1000c1c435 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c1c436 = add i32 %v0_1000c1c435, -1
  store i32 %v1_1000c1c436, i32* %r9.global-to-local, align 4
  %v0_1000c1c837 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c1c838 = add i32 %v0_1000c1c837, -1
  store i32 %v1_1000c1c838, i32* %ctr.global-to-local, align 4
  %v2_1000c1c839 = icmp eq i32 %v1_1000c1c838, 0
  br i1 %v2_1000c1c839, label %dec_label_pc_1000c1cc, label %dec_label_pc_1000c1bc.dec_label_pc_1000c1bc_crit_edge

dec_label_pc_1000c1bc.dec_label_pc_1000c1bc_crit_edge: ; preds = %dec_label_pc_1000c1bc.lr.ph, %dec_label_pc_1000c1bc.dec_label_pc_1000c1bc_crit_edge
  %v1_1000c1c440 = phi i32 [ %v1_1000c1c4, %dec_label_pc_1000c1bc.dec_label_pc_1000c1bc_crit_edge ], [ %v1_1000c1c436, %dec_label_pc_1000c1bc.lr.ph ]
  %v0_1000c1c0.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c1c0.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000c1bc = mul i32 %v1_1000c1c440, 4
  %v3_1000c1c0 = add i32 %v1_1000c1bc, %v1_1000c1c0.pre
  %v4_1000c1c0 = inttoptr i32 %v3_1000c1c0 to i32*
  store i32 %v0_1000c1c0.pre, i32* %v4_1000c1c0, align 4
  %v0_1000c1c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c1c4 = add i32 %v0_1000c1c4, -1
  store i32 %v1_1000c1c4, i32* %r9.global-to-local, align 4
  %v0_1000c1c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c1c8 = add i32 %v0_1000c1c8, -1
  store i32 %v1_1000c1c8, i32* %ctr.global-to-local, align 4
  %v2_1000c1c8 = icmp eq i32 %v1_1000c1c8, 0
  br i1 %v2_1000c1c8, label %dec_label_pc_1000c1cc, label %dec_label_pc_1000c1bc.dec_label_pc_1000c1bc_crit_edge

dec_label_pc_1000c1cc:                            ; preds = %dec_label_pc_1000c1bc.dec_label_pc_1000c1bc_crit_edge, %dec_label_pc_1000c1bc.lr.ph
  store i32 %v2_1000c1a8, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000c1d4 = call i32 @function_1000a934()
  %v3_1000c1d8 = icmp eq i32 %v0_1000c1d4, 0
  br i1 %v3_1000c1d8, label %dec_label_pc_1000c1e0, label %dec_label_pc_1000c1f0

dec_label_pc_1000c1e0:                            ; preds = %dec_label_pc_1000c1cc
  store i32 268485104, i32* @lr, align 4
  %v3_1000c1ec = call i32 @function_10009d88(i32 1, i32 %v2_1000c1a8, i32 0)
  br label %dec_label_pc_1000c1f0

dec_label_pc_1000c1f0:                            ; preds = %dec_label_pc_1000c1cc, %dec_label_pc_1000c1e0
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000c1f4 = load i32, i32* @global_var_1001d1e4.545, align 4
  %v3_1000c1f8 = icmp eq i32 %v3_1000c1f4, 0
  br i1 %v3_1000c1f8, label %dec_label_pc_1000c200, label %dec_label_pc_1000c228

dec_label_pc_1000c200:                            ; preds = %dec_label_pc_1000c1f0
  store i32 1, i32* @global_var_1001d1e4.545, align 4
  br label %dec_label_pc_1000c208

dec_label_pc_1000c208:                            ; preds = %dec_label_pc_1000c284, %dec_label_pc_1000c200
  store i32 ptrtoint (i32* @global_var_1001d148.543 to i32), i32* %r29.global-to-local, align 4
  %v0_1000c214 = call i32 @function_1000b4e0()
  store i32 268485152, i32* @lr, align 4
  %v1_1000c21c = call i32 @function_1000c370(i32 6)
  %v0_1000c224 = call i32 @function_1000b4e0()
  %v3_1000c22c.pre = load i32, i32* @global_var_1001d1e4.545, align 4
  br label %dec_label_pc_1000c228

dec_label_pc_1000c228:                            ; preds = %dec_label_pc_1000c1f0, %dec_label_pc_1000c208
  %v0_1000c2a0 = phi i32 [ %v3_1000c1f4, %dec_label_pc_1000c1f0 ], [ %v3_1000c22c.pre, %dec_label_pc_1000c208 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000c230 = icmp eq i32 %v0_1000c2a0, 1
  br i1 %v3_1000c230, label %dec_label_pc_1000c270.lr.ph, label %dec_label_pc_1000c2a0

dec_label_pc_1000c270.lr.ph:                      ; preds = %dec_label_pc_1000c228
  %v2_1000c23c = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001d1e4.545, align 4
  store i32 ptrtoint (i32* @global_var_1000c250.547 to i32), i32* @lr, align 4
  %v3_1000c24c = call i32 @function_1000a234(i32 %v2_1000c23c, i32 0, i32 140)
  store i32 %v2_1000c1a8, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000c1c033, i32* %r9.global-to-local, align 4
  %v2_1000c27825 = add i32 %v2_1000c1a8, 256
  %v3_1000c27826 = inttoptr i32 %v2_1000c27825 to i32*
  store i32 -1, i32* %v3_1000c27826, align 4
  %v0_1000c27c27 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c27c28 = add i32 %v0_1000c27c27, -1
  store i32 %v1_1000c27c28, i32* %r11.global-to-local, align 4
  %v0_1000c28029 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c28030 = add i32 %v0_1000c28029, -1
  store i32 %v1_1000c28030, i32* %ctr.global-to-local, align 4
  %v2_1000c28031 = icmp eq i32 %v1_1000c28030, 0
  br i1 %v2_1000c28031, label %dec_label_pc_1000c284, label %dec_label_pc_1000c270.dec_label_pc_1000c270_crit_edge

dec_label_pc_1000c270.dec_label_pc_1000c270_crit_edge: ; preds = %dec_label_pc_1000c270.lr.ph, %dec_label_pc_1000c270.dec_label_pc_1000c270_crit_edge
  %v1_1000c27c32 = phi i32 [ %v1_1000c27c, %dec_label_pc_1000c270.dec_label_pc_1000c270_crit_edge ], [ %v1_1000c27c28, %dec_label_pc_1000c270.lr.ph ]
  %v1_1000c274.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000c278.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c270 = mul i32 %v1_1000c27c32, 4
  %v2_1000c274 = add i32 %v1_1000c270, %v1_1000c274.pre
  store i32 %v2_1000c274, i32* %r9.global-to-local, align 4
  %v2_1000c278 = add i32 %v2_1000c274, 132
  %v3_1000c278 = inttoptr i32 %v2_1000c278 to i32*
  store i32 %v0_1000c278.pre, i32* %v3_1000c278, align 4
  %v0_1000c27c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c27c = add i32 %v0_1000c27c, -1
  store i32 %v1_1000c27c, i32* %r11.global-to-local, align 4
  %v0_1000c280 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c280 = add i32 %v0_1000c280, -1
  store i32 %v1_1000c280, i32* %ctr.global-to-local, align 4
  %v2_1000c280 = icmp eq i32 %v1_1000c280, 0
  br i1 %v2_1000c280, label %dec_label_pc_1000c284, label %dec_label_pc_1000c270.dec_label_pc_1000c270_crit_edge

dec_label_pc_1000c284:                            ; preds = %dec_label_pc_1000c270.dec_label_pc_1000c270_crit_edge, %dec_label_pc_1000c270.lr.ph
  store i32 268485276, i32* @lr, align 4
  %v4_1000c298 = call i32 @function_1000c0c4(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000c208

dec_label_pc_1000c2a0:                            ; preds = %dec_label_pc_1000c228
  %v3_1000c2a0 = icmp eq i32 %v0_1000c2a0, 2
  br i1 %v3_1000c2a0, label %dec_label_pc_1000c2a8, label %dec_label_pc_1000c2b4

dec_label_pc_1000c2a8:                            ; preds = %dec_label_pc_1000c2a0
  store i32 3, i32* @global_var_1001d1e4.545, align 4
  br label %dec_label_pc_1000c2b4

dec_label_pc_1000c2b4:                            ; preds = %dec_label_pc_1000c2a0, %dec_label_pc_1000c2a8
  %v3_1000c2b4 = phi i32 [ %v0_1000c2a0, %dec_label_pc_1000c2a0 ], [ 3, %dec_label_pc_1000c2a8 ]
  %v1_1000c2bc = icmp ne i32 %v3_1000c2b4, 3
  call void @__pseudo_cond_branch(i1 %v1_1000c2bc, i32 268485328)
  store i32 4, i32* @global_var_1001d1e4.545, align 4
  %v1_1000c2cc = call i32 @function_1000b880(i32 127)
  ret i32 %v1_1000c2cc

; uselistorder directives
  uselistorder i32 %v1_1000c280, { 1, 0 }
  uselistorder i32 %v1_1000c27c, { 1, 0 }
  uselistorder i32 %v1_1000c1c8, { 1, 0 }
  uselistorder i32 %v1_1000c1c4, { 1, 0 }
  uselistorder i32 %v2_1000c1a8, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @function_1000b880, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2 }
  uselistorder i32 3, { 0, 7, 36, 108, 109, 110, 111, 112, 104, 106, 107, 55, 114, 113, 9, 115, 116, 117, 82, 83, 1, 8, 37, 38, 56, 57, 58, 59, 2, 60, 62, 63, 39, 40, 64, 41, 42, 65, 43, 44, 66, 10, 67, 45, 68, 11, 69, 70, 71, 12, 72, 46, 73, 13, 61, 80, 47, 3, 48, 74, 75, 77, 78, 76, 79, 49, 50, 14, 81, 4, 84, 85, 15, 51, 5, 6, 52, 86, 87, 17, 88, 53, 16, 89, 90, 91, 18, 19, 20, 92, 93, 94, 23, 22, 21, 95, 96, 26, 25, 24, 97, 98, 54, 99, 29, 27, 28, 100, 101, 32, 31, 30, 102, 103, 35, 34, 33, 105 }
  uselistorder i32 (i32, i32*, i32)* @function_1000c0c4, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 63, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 68, 69, 70, 13, 64, 14, 72, 15, 16, 17, 18, 19, 73, 20, 66, 74, 67, 75, 71, 21, 22, 23, 0, 76, 24, 25, 26, 27, 28, 29, 30, 77, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 65, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62 }
  uselistorder i32 (i32, i32, i32)* @function_1000a234, { 1, 7, 6, 0, 2, 9, 8, 5, 4, 3 }
  uselistorder i32 2, { 203, 38, 0, 1, 55, 56, 204, 57, 205, 58, 206, 26, 2, 3, 4, 39, 105, 125, 207, 106, 27, 59, 40, 60, 29, 28, 30, 61, 62, 107, 63, 64, 108, 109, 65, 110, 43, 104, 5, 6, 111, 112, 36, 113, 41, 114, 66, 115, 67, 116, 42, 117, 68, 124, 8, 7, 70, 69, 71, 31, 75, 118, 74, 119, 73, 120, 72, 44, 121, 9, 10, 11, 76, 77, 78, 122, 123, 79, 45, 80, 81, 83, 82, 84, 47, 46, 85, 86, 32, 37, 126, 190, 12, 33, 191, 13, 127, 128, 129, 130, 131, 132, 133, 134, 87, 135, 136, 48, 137, 138, 139, 140, 141, 142, 143, 89, 144, 88, 145, 146, 147, 148, 149, 150, 151, 152, 90, 153, 49, 93, 94, 154, 155, 91, 92, 156, 157, 158, 159, 160, 161, 162, 163, 164, 14, 15, 16, 17, 18, 19, 95, 165, 50, 166, 167, 168, 169, 170, 20, 21, 22, 23, 24, 25, 96, 171, 51, 172, 173, 174, 175, 176, 97, 177, 178, 98, 179, 99, 180, 52, 181, 182, 183, 184, 186, 187, 188, 185, 100, 189, 53, 192, 193, 194, 101, 102, 195, 197, 198, 199, 196, 103, 200, 54, 201, 34, 35, 202 }
  uselistorder i32* @global_var_1001d1e4.545, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 47, 48, 0, 49, 2, 1, 3, 44, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 4, 37, 38, 39, 5, 40, 6, 41, 42, 43, 45, 46 }
  uselistorder i32 (i32, i32, i32)* @function_10009d88, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_1000a934, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 67, 68, 69, 64, 65, 70, 36, 1, 37, 7, 38, 77, 76, 4, 3, 71, 73, 74, 63, 72, 8, 5, 66, 9, 10, 11, 6, 39, 40, 75, 12, 13, 14, 41, 18, 19, 20, 15, 16, 17, 28, 29, 30, 60, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 42, 0, 2, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 54, 56, 57, 58, 59, 61, 62 }
  uselistorder i32 6, { 17, 18, 152, 1, 19, 20, 83, 21, 22, 84, 23, 24, 85, 86, 25, 87, 26, 88, 27, 28, 89, 29, 30, 90, 2, 91, 3, 92, 31, 93, 32, 94, 33, 34, 95, 35, 96, 36, 37, 97, 38, 98, 39, 99, 40, 100, 41, 101, 42, 102, 4, 103, 43, 104, 44, 105, 45, 106, 5, 107, 46, 47, 108, 48, 109, 6, 110, 49, 111, 50, 112, 51, 113, 52, 114, 53, 115, 54, 116, 55, 117, 56, 118, 57, 119, 58, 120, 59, 121, 60, 122, 123, 7, 124, 0, 61, 62, 63, 64, 65, 66, 67, 68, 69, 8, 70, 71, 72, 73, 74, 75, 125, 76, 77, 126, 127, 128, 9, 129, 130, 131, 10, 132, 133, 134, 135, 11, 12, 136, 137, 78, 13, 138, 139, 79, 14, 140, 80, 141, 142, 143, 144, 81, 15, 145, 146, 147, 148, 149, 82, 16, 150, 151 }
  uselistorder i32 4, { 122, 0, 1, 372, 373, 374, 375, 376, 64, 65, 377, 378, 123, 379, 380, 2, 223, 224, 156, 157, 225, 226, 228, 381, 388, 3, 4, 5, 6, 7, 349, 351, 350, 347, 348, 324, 325, 326, 327, 352, 353, 354, 355, 356, 357, 358, 359, 360, 8, 159, 9, 74, 160, 161, 382, 383, 384, 124, 385, 386, 387, 10, 227, 125, 11, 229, 230, 231, 232, 233, 126, 127, 162, 128, 163, 164, 165, 84, 72, 166, 167, 168, 169, 75, 158, 12, 171, 172, 173, 174, 170, 175, 176, 66, 129, 130, 182, 131, 132, 183, 133, 134, 184, 135, 185, 136, 137, 186, 138, 187, 76, 188, 139, 189, 77, 190, 140, 191, 141, 192, 78, 193, 79, 194, 142, 195, 80, 196, 81, 197, 82, 199, 83, 200, 201, 202, 203, 204, 198, 177, 178, 179, 180, 181, 215, 13, 216, 14, 217, 218, 219, 67, 143, 220, 205, 144, 206, 86, 85, 87, 207, 208, 209, 210, 68, 211, 69, 212, 213, 214, 145, 146, 147, 15, 221, 222, 70, 234, 235, 236, 237, 238, 16, 239, 240, 241, 242, 243, 91, 244, 17, 18, 90, 245, 19, 88, 89, 246, 247, 95, 248, 20, 21, 249, 22, 250, 251, 252, 96, 253, 23, 24, 254, 94, 255, 92, 256, 93, 257, 258, 259, 101, 25, 26, 260, 261, 262, 27, 263, 264, 265, 100, 28, 29, 266, 99, 267, 97, 98, 268, 269, 270, 271, 272, 273, 274, 148, 102, 275, 276, 30, 277, 278, 73, 279, 31, 32, 280, 105, 281, 103, 104, 282, 283, 33, 284, 285, 109, 286, 287, 34, 35, 108, 288, 106, 107, 289, 290, 291, 292, 149, 293, 36, 294, 295, 37, 296, 38, 297, 298, 299, 300, 111, 301, 110, 150, 302, 303, 304, 305, 39, 306, 308, 309, 115, 310, 311, 116, 40, 41, 151, 307, 114, 112, 113, 312, 313, 314, 315, 316, 152, 153, 42, 317, 319, 320, 121, 321, 322, 120, 43, 44, 154, 318, 323, 119, 117, 118, 45, 328, 329, 46, 47, 330, 331, 48, 49, 332, 333, 50, 51, 334, 335, 52, 336, 53, 337, 338, 54, 55, 339, 340, 56, 57, 341, 342, 58, 59, 343, 344, 60, 61, 345, 346, 62, 361, 63, 362, 363, 364, 365, 366, 367, 368, 71, 369, 370, 371, 155 }
  uselistorder i32 32, { 19, 20, 51, 38, 39, 27, 28, 15, 16, 36, 37, 29, 0, 1, 2, 17, 40, 18, 41, 3, 21, 4, 5, 6, 22, 30, 23, 31, 34, 7, 8, 9, 24, 35, 10, 11, 12, 13, 14, 25, 26, 32, 33, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 31, { 1, 2, 32, 33, 18, 34, 35, 3, 4, 0, 5, 36, 37, 19, 20, 21, 22, 26, 27, 28, 29, 9, 10, 11, 12, 13, 14, 16, 17, 15, 30, 31, 6, 23, 7, 24, 8, 25 }
  uselistorder i32 ()* @function_1000b4e0, { 7, 6, 5, 0, 18, 17, 16, 15, 4, 3, 2, 1, 14, 13, 12, 11, 10, 9, 8, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000c2b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c270.dec_label_pc_1000c270_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000c228, { 1, 0 }
  uselistorder label %dec_label_pc_1000c1f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c1bc.dec_label_pc_1000c1bc_crit_edge, { 1, 0 }
}

define i32 @function_1000c2d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c2d8:
  %v1_1000c2d8 = add i32 %arg1, 28
  %v2_1000c2d8 = inttoptr i32 %v1_1000c2d8 to i32*
  %v3_1000c2d8 = load i32, i32* %v2_1000c2d8, align 4
  store i32 %v3_1000c2d8, i32* @global_var_1001d1e8.548, align 4
  %v1_1000c2e8 = add i32 %arg1, 44
  %v2_1000c2e8 = inttoptr i32 %v1_1000c2e8 to i32*
  %v3_1000c2e8 = load i32, i32* %v2_1000c2e8, align 4
  store i32 %v3_1000c2e8, i32* @global_var_1001d1ec.549, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 7, 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 28, { 42, 13, 14, 2, 3, 15, 12, 41, 4, 6, 7, 8, 9, 5, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 39, 1, 40 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000c2f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c2f4:
  store i32 %arg1, i32* @global_var_1001d1f0.542, align 4
  %v0_1000c31c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000c31c)
  %v1_1000c324 = call i32 @function_1000c3a0(i32 12)
  ret i32 %v1_1000c324

; uselistorder directives
  uselistorder i32 12, { 15, 44, 45, 25, 26, 46, 47, 48, 49, 96, 97, 98, 99, 6, 94, 100, 0, 1, 8, 95, 5, 16, 17, 9, 27, 50, 51, 18, 52, 53, 54, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 10, 40, 21, 41, 43, 42, 37, 7, 22, 23, 24, 89, 55, 11, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 12, 70, 71, 72, 73, 74, 75, 76, 13, 77, 78, 79, 80, 81, 82, 83, 84, 85, 14, 86, 87, 88, 90, 91, 92, 93, 2, 3, 4 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 4, 10, 8, 11, 5, 12, 7, 0, 6, 1, 2, 3, 9 }
  uselistorder i1 true, { 1, 0 }
  uselistorder i32* @global_var_1001d1f0.542, { 1, 0, 2 }
}

define i32 @function_1000c328() local_unnamed_addr {
dec_label_pc_1000c328:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c340 = call i32 @__asm_mfcr()
  %v1_1000c344 = and i32 %v0_1000c340, 268435456
  %v3_1000c344 = icmp eq i32 %v1_1000c344, 0
  store i32 %v0_1000c340, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c344, label %dec_label_pc_1000c35c, label %dec_label_pc_1000c350

dec_label_pc_1000c350:                            ; preds = %dec_label_pc_1000c328
  %v0_1000c350 = call i32 @function_1000a14c()
  %v0_1000c354 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c354 = inttoptr i32 %v0_1000c350 to i32*
  store i32 %v0_1000c354, i32* %v2_1000c354, align 4
  br label %dec_label_pc_1000c35c

dec_label_pc_1000c35c:                            ; preds = %dec_label_pc_1000c328, %dec_label_pc_1000c350
  %v0_1000c36c = phi i32 [ %v0_1000c340, %dec_label_pc_1000c328 ], [ -1, %dec_label_pc_1000c350 ]
  ret i32 %v0_1000c36c

; uselistorder directives
  uselistorder i32 268435456, { 30, 12, 31, 20, 32, 33, 34, 35, 21, 22, 36, 37, 13, 18, 25, 38, 14, 17, 23, 24, 15, 39, 28, 19, 29, 27, 26, 40, 41, 16, 2, 0, 1, 5, 3, 4, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 ()* @__asm_mfcr, { 12, 46, 11, 36, 10, 9, 8, 7, 35, 34, 6, 5, 4, 45, 38, 20, 3, 44, 40, 33, 32, 43, 2, 14, 37, 13, 16, 19, 1, 0, 42, 41, 39, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 18, 17, 15 }
  uselistorder label %dec_label_pc_1000c35c, { 1, 0 }
}

define i32 @function_1000c370(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c370:
  %v0_1000c370 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268485512, i32* @lr, align 4
  %v0_1000c384 = call i32 @function_10009ac0()
  %v0_1000c38c = load i32, i32* @r29, align 4
  store i32 %v0_1000c370, i32* @lr, align 4
  %v2_1000c39c = call i32 @function_10009b50(i32 %v0_1000c384, i32 %v0_1000c38c)
  ret i32 %v2_1000c39c

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10009b50, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_10009ac0, { 0, 3, 2, 1 }
}

define i32 @function_1000c3a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c3a0:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000c3b4 = call i32 @function_1000a14c()
  %v0_1000c3b8 = load i32, i32* @r29, align 4
  %v2_1000c3b8 = inttoptr i32 %v0_1000c3b4 to i32*
  store i32 %v0_1000c3b8, i32* %v2_1000c3b8, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_1000a14c, { 22, 15, 52, 14, 34, 13, 12, 11, 10, 33, 32, 31, 9, 8, 3, 7, 6, 38, 37, 20, 21, 51, 50, 49, 48, 30, 29, 27, 47, 36, 24, 5, 4, 46, 41, 26, 28, 45, 2, 17, 35, 16, 19, 23, 1, 0, 44, 43, 42, 25, 40, 39, 18 }
  uselistorder i32* @r29, { 335, 336, 358, 359, 360, 6, 7, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 361, 362, 363, 364, 365, 1, 124, 337, 338, 339, 340, 333, 334, 341, 2, 342, 343, 344, 345, 346, 347, 8, 9, 10, 145, 146, 147, 148, 149, 150, 151, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 95, 96, 97, 98, 99, 100, 3, 115, 116, 117, 4, 118, 119, 120, 106, 0, 107, 108, 109, 110, 111, 112, 113, 114, 121, 122, 123, 125, 126, 127, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 211, 212, 213, 216, 219, 220, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 289, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 350, 348, 349, 351, 352, 353, 5, 354, 355, 356, 357 }
}

define i32 @function_1000c3d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c3d4:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001d000.530 to i32), i32* %r31.global-to-local, align 4
  %v3_1000c3f0 = load i32, i32* @global_var_1001d000.530, align 4
  %v3_1000c3f4 = icmp eq i32 %v3_1000c3f0, -1
  br i1 %v3_1000c3f4, label %dec_label_pc_1000c410, label %dec_label_pc_1000c3fc

dec_label_pc_1000c3fc:                            ; preds = %dec_label_pc_1000c3d4, %dec_label_pc_1000c3fc
  %v0_1000c3fc = phi i32 [ %v3_1000c404, %dec_label_pc_1000c3fc ], [ %v3_1000c3f0, %dec_label_pc_1000c3d4 ]
  call void @__pseudo_call(i32 %v0_1000c3fc)
  %v0_1000c404 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000c404 = add i32 %v0_1000c404, -4
  %v2_1000c404 = inttoptr i32 %v1_1000c404 to i32*
  %v3_1000c404 = load i32, i32* %v2_1000c404, align 4
  store i32 %v1_1000c404, i32* %r31.global-to-local, align 4
  %v3_1000c408 = icmp eq i32 %v3_1000c404, -1
  br i1 %v3_1000c408, label %dec_label_pc_1000c410, label %dec_label_pc_1000c3fc

dec_label_pc_1000c410:                            ; preds = %dec_label_pc_1000c3fc, %dec_label_pc_1000c3d4
  %v0_1000c420 = load i32, i32* @r3, align 4
  ret i32 %v0_1000c420

; uselistorder directives
  uselistorder i32 %v3_1000c404, { 1, 0 }
  uselistorder i32 -4, { 0, 12, 13, 14, 6, 7, 8, 9, 10, 11, 15, 16, 1, 2, 3, 4, 5 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, { 149, 150, 0, 38, 92, 276, 13, 14, 15, 277, 93, 278, 11, 12, 94, 95, 16, 96, 39, 40, 270, 79, 41, 213, 42, 43, 44, 45, 46, 214, 215, 216, 217, 218, 223, 47, 289, 287, 48, 279, 280, 80, 97, 281, 19, 20, 98, 286, 17, 18, 203, 3, 81, 271, 272, 33, 151, 285, 282, 49, 152, 99, 153, 21, 22, 154, 155, 156, 36, 50, 157, 158, 77, 100, 101, 102, 103, 219, 220, 23, 24, 25, 104, 221, 222, 105, 82, 78, 224, 225, 51, 52, 53, 54, 283, 284, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 288, 68, 159, 106, 26, 226, 227, 107, 1, 108, 109, 160, 69, 70, 110, 2, 111, 27, 112, 71, 113, 28, 228, 83, 161, 114, 84, 162, 163, 164, 115, 165, 166, 72, 167, 116, 117, 29, 118, 170, 171, 172, 119, 73, 173, 174, 175, 120, 121, 168, 169, 192, 76, 4, 193, 194, 122, 30, 195, 196, 197, 198, 199, 123, 37, 87, 176, 177, 85, 178, 179, 180, 86, 181, 182, 183, 88, 184, 185, 186, 74, 187, 188, 124, 31, 125, 32, 189, 190, 191, 200, 75, 201, 202, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 204, 205, 206, 207, 208, 209, 210, 211, 212, 34, 35, 229, 230, 231, 232, 233, 138, 139, 140, 141, 234, 235, 236, 237, 142, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 5, 260, 6, 7, 261, 262, 263, 264, 8, 265, 9, 10, 266, 267, 268, 269, 143, 273, 274, 144, 275, 145, 146, 147, 148, 89, 90, 91 }
  uselistorder i32 1, { 87, 478, 1031, 609, 610, 691, 690, 336, 332, 335, 334, 331, 333, 694, 693, 692, 21, 0, 1027, 1028, 1029, 1030, 532, 22, 1032, 1033, 1034, 1035, 484, 483, 482, 42, 43, 44, 46, 45, 367, 302, 695, 378, 379, 330, 422, 480, 479, 697, 696, 439, 438, 440, 436, 437, 435, 441, 611, 76, 77, 79, 78, 698, 179, 265, 612, 699, 50, 48, 47, 49, 613, 561, 1039, 1036, 703, 702, 701, 700, 434, 432, 429, 433, 431, 430, 614, 1038, 704, 891, 892, 893, 608, 894, 533, 404, 405, 406, 176, 177, 178, 40, 41, 29, 30, 28, 304, 516, 705, 474, 1037, 477, 615, 616, 708, 707, 706, 85, 82, 83, 84, 81, 86, 70, 562, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 818, 723, 722, 424, 425, 725, 724, 32, 31, 33, 995, 507, 36, 35, 34, 1040, 1041, 370, 368, 371, 369, 131, 132, 130, 133, 134, 135, 726, 617, 727, 38, 37, 39, 618, 728, 126, 127, 563, 729, 10, 128, 80, 473, 423, 108, 129, 377, 114, 106, 730, 180, 161, 428, 476, 475, 481, 731, 376, 732, 380, 819, 733, 107, 912, 913, 508, 509, 521, 914, 915, 517, 916, 736, 735, 734, 12, 15, 16, 13, 14, 18, 11, 17, 1, 896, 895, 897, 898, 936, 937, 486, 938, 939, 738, 737, 917, 918, 919, 619, 920, 23, 24, 25, 26, 1024, 1025, 535, 534, 1026, 113, 812, 814, 813, 620, 921, 510, 468, 469, 467, 1015, 182, 181, 922, 923, 511, 512, 522, 924, 53, 54, 51, 52, 996, 408, 409, 411, 410, 412, 407, 414, 415, 413, 416, 417, 418, 419, 420, 421, 997, 372, 375, 374, 373, 998, 71, 74, 73, 72, 19, 20, 523, 571, 820, 570, 815, 569, 816, 564, 817, 821, 621, 822, 823, 622, 824, 825, 826, 623, 624, 830, 827, 828, 829, 832, 625, 833, 626, 627, 834, 628, 629, 835, 630, 836, 631, 837, 632, 838, 565, 839, 633, 840, 634, 841, 635, 842, 636, 843, 637, 844, 638, 845, 566, 846, 567, 847, 639, 848, 640, 849, 641, 850, 642, 851, 643, 852, 568, 853, 644, 854, 860, 861, 550, 684, 746, 745, 744, 743, 742, 741, 740, 739, 465, 456, 455, 461, 463, 462, 453, 452, 451, 442, 443, 450, 449, 448, 447, 446, 445, 457, 444, 464, 454, 460, 466, 459, 458, 855, 856, 645, 857, 858, 646, 859, 124, 115, 118, 120, 122, 121, 123, 117, 116, 125, 119, 831, 647, 426, 427, 520, 871, 872, 876, 873, 879, 874, 487, 488, 875, 518, 489, 490, 513, 491, 492, 877, 878, 519, 493, 494, 514, 880, 648, 881, 882, 649, 883, 884, 885, 888, 889, 886, 887, 524, 890, 572, 754, 753, 752, 751, 750, 685, 749, 748, 747, 102, 96, 94, 88, 95, 98, 97, 91, 89, 90, 92, 100, 101, 99, 103, 93, 999, 755, 472, 470, 471, 574, 862, 863, 573, 864, 650, 651, 652, 866, 867, 865, 536, 868, 653, 654, 655, 869, 656, 657, 658, 870, 551, 767, 766, 765, 764, 686, 763, 762, 761, 760, 759, 758, 757, 756, 189, 188, 186, 183, 6, 7, 185, 8, 184, 187, 190, 485, 659, 576, 575, 537, 769, 768, 541, 899, 663, 542, 900, 543, 901, 544, 902, 545, 903, 546, 904, 547, 905, 548, 906, 660, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 549, 907, 661, 908, 662, 909, 910, 911, 515, 664, 665, 666, 552, 787, 786, 785, 784, 783, 782, 781, 780, 779, 778, 777, 776, 775, 774, 773, 772, 771, 770, 170, 173, 172, 175, 168, 167, 166, 165, 169, 171, 164, 163, 162, 174, 925, 667, 926, 927, 3, 928, 929, 4, 538, 930, 931, 2, 932, 933, 934, 935, 790, 789, 687, 688, 788, 105, 104, 1000, 1003, 1001, 539, 1002, 136, 1004, 1005, 1006, 668, 669, 940, 941, 942, 943, 944, 945, 946, 947, 950, 948, 949, 951, 952, 670, 953, 954, 553, 955, 956, 957, 540, 958, 959, 793, 792, 791, 346, 338, 343, 339, 352, 363, 349, 351, 364, 359, 355, 344, 356, 361, 365, 345, 362, 357, 358, 360, 348, 347, 366, 350, 354, 353, 342, 341, 340, 337, 960, 961, 671, 962, 963, 964, 672, 525, 554, 965, 795, 794, 308, 307, 314, 322, 323, 325, 305, 310, 326, 327, 317, 320, 311, 315, 324, 328, 319, 321, 316, 318, 309, 306, 329, 313, 312, 966, 967, 673, 968, 969, 970, 674, 675, 555, 971, 577, 578, 796, 280, 275, 279, 287, 266, 288, 281, 282, 284, 273, 274, 276, 286, 289, 278, 283, 285, 277, 270, 269, 290, 267, 268, 272, 271, 972, 973, 582, 579, 676, 580, 581, 797, 300, 291, 292, 301, 298, 293, 299, 297, 296, 295, 294, 974, 975, 976, 977, 677, 526, 556, 978, 583, 584, 798, 250, 246, 248, 261, 241, 242, 262, 247, 260, 263, 257, 258, 259, 256, 255, 249, 251, 252, 253, 254, 240, 264, 243, 239, 245, 244, 979, 980, 981, 678, 527, 557, 982, 585, 586, 587, 799, 199, 197, 211, 191, 212, 201, 200, 202, 203, 198, 210, 213, 207, 208, 209, 206, 205, 204, 193, 214, 194, 192, 196, 195, 983, 984, 985, 986, 679, 680, 528, 558, 987, 588, 589, 590, 591, 592, 803, 802, 801, 800, 142, 139, 146, 156, 140, 157, 152, 158, 150, 154, 159, 153, 155, 151, 148, 149, 141, 138, 160, 147, 143, 137, 145, 144, 988, 989, 990, 992, 993, 991, 559, 994, 593, 594, 595, 804, 391, 386, 393, 399, 387, 400, 397, 394, 395, 385, 398, 401, 392, 402, 384, 396, 388, 403, 390, 389, 382, 383, 381, 1007, 1008, 1009, 1011, 1012, 1010, 560, 1013, 596, 597, 598, 809, 808, 807, 806, 805, 226, 217, 228, 234, 216, 235, 229, 232, 230, 236, 223, 233, 237, 227, 221, 222, 231, 218, 238, 225, 224, 219, 220, 215, 5, 599, 600, 601, 602, 603, 604, 605, 1014, 606, 607, 111, 110, 109, 112, 1016, 1017, 681, 682, 1019, 683, 1020, 1021, 1018, 1022, 1023, 58, 62, 64, 63, 67, 69, 55, 68, 56, 61, 60, 59, 57, 66, 65, 529, 75, 530, 9, 531, 27, 811, 810, 303, 689 }
  uselistorder label %dec_label_pc_1000c3fc, { 1, 0 }
}

define i32 @function_1000c424() local_unnamed_addr {
dec_label_pc_1000c424:
  %v0_1000c43c = load i32, i32* @r3, align 4
  ret i32 %v0_1000c43c

; uselistorder directives
  uselistorder i32* @r3, { 19, 12, 185, 186, 187, 9, 17, 188, 121, 0, 122, 29, 195, 16, 15, 3, 22, 189, 191, 28, 192, 193, 194, 176, 27, 177, 8, 14, 178, 180, 179, 190, 30, 161, 31, 32, 123, 23, 11, 124, 125, 126, 127, 128, 129, 130, 131, 132, 10, 24, 4, 13, 133, 1, 2, 5, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 84, 6, 85, 86, 102, 103, 25, 104, 105, 106, 170, 93, 94, 95, 96, 97, 98, 99, 100, 101, 107, 21, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 171, 172, 7, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 164, 166, 167, 168, 169, 173, 174, 175, 181, 182, 183, 184, 18, 20, 26 }
}

define i32 @function_1000c440() local_unnamed_addr {
entry:
  store i32 268485712, i32* @lr, align 4
  %v0_1000c44c = call i32 @function_100000b8()
  ret i32 %v0_1000c44c

; uselistorder directives
  uselistorder i32 0, { 920, 233, 921, 43, 234, 170, 922, 235, 923, 924, 41, 42, 925, 926, 927, 0, 910, 911, 912, 87, 86, 913, 928, 929, 930, 44, 931, 932, 933, 934, 614, 236, 237, 421, 856, 857, 171, 858, 935, 19, 615, 616, 936, 937, 938, 939, 238, 617, 618, 619, 620, 621, 622, 623, 88, 631, 632, 940, 941, 239, 959, 960, 240, 965, 967, 163, 968, 241, 966, 1, 942, 943, 89, 944, 945, 242, 172, 243, 946, 947, 47, 48, 948, 949, 950, 244, 953, 954, 955, 45, 46, 956, 957, 958, 558, 559, 560, 561, 562, 90, 563, 564, 565, 232, 566, 91, 861, 863, 23, 864, 49, 865, 862, 859, 860, 2, 847, 843, 844, 845, 846, 164, 3, 868, 866, 867, 165, 869, 870, 848, 849, 850, 851, 852, 245, 853, 854, 871, 872, 246, 873, 173, 874, 883, 884, 92, 875, 876, 877, 878, 879, 880, 881, 882, 4, 5, 412, 422, 423, 424, 50, 51, 425, 6, 247, 914, 426, 427, 428, 429, 430, 431, 432, 433, 248, 434, 969, 970, 971, 972, 973, 974, 975, 976, 624, 625, 52, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 435, 567, 817, 951, 952, 436, 537, 645, 677, 437, 961, 93, 962, 918, 568, 919, 885, 818, 963, 964, 438, 439, 646, 647, 648, 53, 94, 649, 650, 69, 651, 653, 652, 168, 569, 570, 7, 75, 24, 76, 25, 678, 77, 679, 26, 27, 680, 78, 28, 95, 249, 250, 20, 21, 654, 903, 904, 905, 906, 99, 97, 96, 907, 98, 101, 100, 419, 102, 655, 54, 656, 657, 658, 886, 103, 887, 888, 659, 660, 55, 104, 661, 8, 105, 819, 106, 820, 440, 441, 442, 110, 443, 444, 445, 446, 161, 447, 251, 448, 449, 453, 450, 169, 255, 108, 420, 451, 109, 452, 252, 454, 455, 456, 457, 458, 111, 459, 460, 174, 461, 462, 413, 79, 463, 464, 465, 466, 467, 468, 70, 71, 469, 470, 471, 56, 57, 472, 473, 175, 176, 474, 475, 253, 476, 478, 479, 480, 481, 482, 177, 178, 487, 488, 254, 489, 483, 484, 485, 486, 490, 22, 414, 415, 491, 492, 107, 493, 494, 495, 500, 501, 502, 503, 179, 504, 505, 112, 506, 507, 508, 509, 510, 511, 496, 113, 497, 498, 114, 499, 256, 477, 82, 538, 539, 29, 257, 80, 30, 31, 258, 81, 32, 540, 9, 183, 182, 541, 542, 543, 544, 545, 546, 181, 180, 547, 58, 59, 548, 549, 259, 115, 550, 551, 116, 552, 117, 553, 118, 554, 555, 821, 512, 513, 162, 514, 515, 516, 260, 517, 518, 519, 520, 521, 522, 523, 524, 184, 525, 526, 60, 61, 527, 528, 529, 62, 63, 530, 531, 532, 10, 533, 261, 262, 534, 263, 535, 264, 536, 17, 16, 15, 14, 13, 556, 185, 557, 572, 119, 571, 33, 573, 575, 120, 574, 34, 576, 578, 121, 577, 35, 579, 581, 123, 580, 122, 582, 584, 125, 583, 124, 585, 587, 127, 586, 126, 588, 590, 129, 589, 128, 591, 593, 131, 592, 130, 594, 595, 36, 37, 597, 133, 596, 132, 598, 599, 135, 600, 134, 601, 602, 137, 603, 136, 604, 605, 139, 606, 138, 607, 11, 265, 266, 18, 610, 608, 609, 166, 611, 612, 186, 267, 613, 38, 662, 673, 663, 12, 664, 665, 666, 667, 167, 668, 669, 670, 671, 672, 39, 140, 66, 65, 141, 674, 64, 270, 675, 268, 269, 187, 676, 84, 822, 823, 83, 824, 142, 825, 85, 826, 143, 681, 682, 683, 144, 684, 685, 686, 271, 687, 688, 68, 689, 67, 690, 691, 692, 693, 694, 695, 696, 272, 697, 698, 699, 192, 700, 701, 702, 273, 703, 72, 73, 704, 705, 145, 706, 707, 708, 274, 188, 189, 190, 191, 275, 709, 710, 711, 146, 712, 713, 276, 714, 715, 716, 717, 718, 194, 719, 193, 720, 277, 721, 147, 722, 723, 724, 725, 726, 727, 148, 728, 729, 278, 731, 730, 732, 733, 734, 279, 735, 736, 737, 195, 738, 196, 197, 198, 280, 739, 152, 151, 740, 741, 742, 150, 149, 743, 744, 745, 746, 747, 748, 281, 749, 199, 750, 751, 153, 752, 754, 282, 755, 753, 756, 757, 758, 759, 760, 283, 761, 762, 763, 207, 764, 200, 201, 202, 203, 204, 205, 206, 284, 765, 766, 767, 768, 154, 769, 770, 285, 772, 771, 773, 774, 775, 776, 777, 778, 286, 779, 780, 781, 216, 782, 208, 209, 210, 211, 212, 213, 214, 215, 287, 783, 784, 785, 786, 788, 155, 790, 791, 792, 793, 288, 794, 289, 795, 796, 290, 789, 787, 797, 798, 217, 799, 218, 219, 220, 221, 222, 223, 156, 800, 801, 802, 803, 157, 804, 806, 291, 805, 807, 808, 809, 810, 811, 812, 813, 814, 227, 815, 224, 225, 226, 158, 816, 827, 828, 829, 159, 830, 831, 292, 832, 833, 834, 835, 836, 837, 838, 839, 840, 231, 841, 228, 229, 230, 160, 842, 855, 889, 40, 890, 891, 74, 892, 893, 894, 293, 895, 896, 897, 898, 899, 900, 901, 902, 908, 909, 915, 916, 917, 977, 978, 979, 416, 417, 418, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998 }
  uselistorder i32* @lr, { 6, 919, 920, 921, 890, 922, 923, 924, 925, 926, 927, 928, 929, 915, 16, 930, 566, 567, 7, 891, 892, 568, 569, 570, 571, 572, 573, 939, 940, 944, 945, 946, 947, 948, 949, 950, 952, 941, 943, 931, 932, 933, 934, 935, 936, 937, 938, 893, 895, 894, 865, 866, 867, 868, 869, 870, 896, 897, 898, 899, 903, 900, 901, 902, 17, 18, 832, 833, 834, 702, 776, 19, 493, 20, 21, 777, 703, 22, 916, 23, 24, 25, 26, 27, 28, 29, 951, 30, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 942, 31, 32, 33, 34, 35, 36, 588, 913, 589, 904, 835, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 836, 837, 135, 136, 137, 138, 139, 140, 8, 9, 10, 11, 12, 13, 14, 15, 141, 142, 143, 144, 145, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 349, 350, 351, 352, 353, 354, 355, 356, 147, 148, 149, 150, 151, 152, 368, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 838, 839, 840, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 512, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 0, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 545, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 2, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 3, 618, 619, 620, 621, 622, 623, 1, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 704, 705, 706, 707, 708, 710, 711, 712, 709, 714, 715, 716, 713, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 905, 906, 907, 908, 909, 910, 911, 912, 914, 917, 918, 4, 5 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i64 @__decompiler_undefined_function_3() local_unnamed_addr
