source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1 }
%2 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208001573
@global_var_1001c00c.3 = global i32 0
@global_var_1001c01c.4 = local_unnamed_addr global i32* @global_var_1001c00c.3
@global_var_1001c410.7 = global i32 0
@global_var_1001c010.8 = global i32 0
@global_var_1001c3a4.9 = local_unnamed_addr global i32 0
@global_var_1001c3a8.10 = local_unnamed_addr global i32 0
@global_var_1001c3ac.11 = local_unnamed_addr global i32 0
@global_var_1001c3b0.12 = local_unnamed_addr global i32 0
@global_var_1000a568.13 = constant [37 x i8] c"kt8lmno5abghi6w7uvx2cdyz14pqef3rs9j0\00"
@global_var_100004b4.14 = constant i32 1207959808
@global_var_1000a590.15 = constant [7 x i8] c"(null)\00"
@global_var_1001c35c = external local_unnamed_addr global i32
@global_var_1000144c.23 = constant i32 939524126
@global_var_1001c3a0.24 = local_unnamed_addr global i32 0
@global_var_1000176c.25 = constant i32 939524098
@global_var_10001974.26 = constant i32 939524097
@global_var_1001c398.27 = global i32 0
@global_var_1001c39c.28 = local_unnamed_addr global i32 0
@global_var_1001c3bc.29 = local_unnamed_addr global i32 0
@global_var_10001cd8.30 = constant [3 x i8] c"8`\00"
@global_var_10001d08.31 = constant [3 x i8] c"8`\00"
@global_var_10001d10.32 = constant i32 939524096
@global_var_1000a598.33 = constant i32 1392508928
@global_var_1000a59c.34 = constant i32 738197504
@global_var_10001e54.35 = constant [3 x i8] c"8`\00"
@global_var_10001e5c.36 = constant [3 x i8] c"8`\00"
@global_var_10001ea8.37 = constant [3 x i8] c"8`\00"
@global_var_1000a5a0.38 = constant i32 1258291200
@global_var_1001c354.39 = local_unnamed_addr global i32 -1
@global_var_1000a558.40 = constant [15 x i8] c"191.96.112.131\00"
@global_var_1001c350.41 = global [15 x i8]* @global_var_1000a558.40
@global_var_100020b4.42 = constant i32 939524541
@global_var_10002298.43 = constant [3 x i8] c"8`\00"
@global_var_100022bc.44 = constant i32 1207961829
@global_var_100022e8.45 = constant [3 x i8] c"8`\00"
@global_var_1000a5a4.46 = constant i32 788529152
@global_var_10002328.47 = constant [3 x i8] c"8`\00"
@global_var_10002334.48 = constant i32 1207959556
@global_var_1000a5a8.49 = constant i32 536870912
@global_var_1001c3e0.50 = global i32 0
@global_var_1001c3c0.51 = global i32 0
@global_var_1001c5f4.52 = global i32 0
@global_var_1001c428.53 = global i32 0
@global_var_1001c200.54 = global i32 0
@global_var_1000449c.55 = constant [3 x i8] c"8`\00"
@global_var_1001c3ec.56 = local_unnamed_addr global i32 0
@global_var_1001e6e0.57 = global i32 0
@global_var_10003468.58 = constant [3 x i8] c"8`\00"
@global_var_1000354c.59 = constant i32 939524098
@global_var_1000358c.60 = constant [3 x i8] c"8`\00"
@global_var_100036f4.61 = constant i32 939524118
@global_var_1001e638.62 = global i32 0
@global_var_1001c608.63 = global i32 0
@global_var_1001c368 = external global i32
@global_var_1001c3d0.64 = local_unnamed_addr global i32 0
@global_var_1001e6b8.65 = global i32 0
@global_var_10003950.66 = constant i32 939524108
@global_var_100039e8.67 = constant [3 x i8] c"8`\00"
@global_var_10003bf0.68 = constant i32 1207959640
@global_var_10003c2c.69 = constant i32 1207959580
@global_var_1001c130.70 = global i32 0
@global_var_1001c148 = external global i32
@global_var_1001c168.72 = global i32 -1726662223
@global_var_1001c150.73 = local_unnamed_addr global i32* @global_var_1001c168.72
@global_var_1001c14c.74 = global i32* @global_var_1001c168.72
@global_var_1000abac.75 = constant i32 0
@global_var_10003f40.76 = constant i32 939524118
@global_var_10004354.77 = constant i32 939524130
@global_var_1001c1e4.78 = global i32 0
@global_var_1001c3c4.79 = local_unnamed_addr global i32 0
@global_var_100043e8.80 = constant i32 1207959585
@global_var_1001c000.81 = global i32 -1
@global_var_1001c3d4.82 = local_unnamed_addr global i32 0
@global_var_1001c3d8.83 = local_unnamed_addr global i32 0
@global_var_1000abd4.84 = constant [10 x i8] c"/dev/null\00"
@global_var_1001c3dc.85 = local_unnamed_addr global i32 0
@global_var_1001c3c8.86 = local_unnamed_addr global i32 0
@global_var_1001c3cc.87 = local_unnamed_addr global i32 0
@global_var_100047b4.88 = constant i32 939524096
@global_var_100047d0.89 = constant i32 939524096
@global_var_1001c400.90 = local_unnamed_addr global i32 0
@global_var_1001c3e4.91 = global i32 0
@global_var_1001c620.93 = global i32 0
@global_var_1001c3e8.94 = local_unnamed_addr global i32 0
@global_var_10004ec8.96 = constant i32 1207960848
@global_var_1001c3f0.97 = local_unnamed_addr global i32 0
@global_var_1000abe0.98 = constant i32 771751936
@global_var_1001e6d0.99 = global i32 0
@global_var_10004fb8.100 = constant [3 x i8] c"8a\00"
@global_var_10004fc4.101 = constant i32 939524097
@global_var_10005098.102 = constant i32 939524097
@global_var_1000516c.103 = constant i32 939524097
@global_var_10005198.104 = constant i32 939524100
@global_var_10005278.105 = constant i32 1207959684
@global_var_100053f4.106 = constant i32 939589631
@global_var_1000abfc.107 = constant i32 1912602624
@global_var_1000abe8.108 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1000ac00.109 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1000ac18.110 = constant [11 x i8] c"nameserver\00"
@global_var_1000ac24.111 = constant [7 x i8] c"domain\00"
@global_var_1000ac2c.112 = constant [7 x i8] c"search\00"
@global_var_1000572c.113 = constant i32 1207959568
@global_var_10005734.114 = constant i32 939524099
@global_var_1001c218.115 = global i32 0
@global_var_10005894.116 = constant i32 939524129
@global_var_1001c3f4.117 = local_unnamed_addr global i32 0
@global_var_10005908.118 = constant [3 x i8] c"8`\00"
@global_var_10005940.119 = constant i32 939524129
@global_var_1001c3f8.120 = local_unnamed_addr global i32 0
@global_var_1001c3fc.121 = local_unnamed_addr global i32 0
@global_var_10005adc.122 = constant i32 939524118
@global_var_1001c248.123 = global i32 0
@global_var_1001c404.124 = local_unnamed_addr global i32 0
@global_var_1001c408.125 = local_unnamed_addr global i32 0
@global_var_10005c50.126 = constant i32 1207960845
@global_var_10005ce0.127 = constant i32 1207960120
@global_var_1001c388.128 = local_unnamed_addr global i32 2
@global_var_1001c230.129 = global i32 0
@global_var_1001c384.130 = global i32* bitcast (i16* @global_var_1001c260.20 to i32*)
@global_var_10005f14.131 = constant i32 1207959560
@global_var_10005f64.132 = constant [3 x i8] c" c\00"
@global_var_10005f80.133 = constant [3 x i8] c" c\00"
@global_var_1000ac34.134 = constant i32 0
@global_var_10006330.135 = constant i32 1207959708
@global_var_100063d8.136 = constant i32 1207959612
@global_var_10006898.137 = constant [3 x i8] c"8`\00"
@global_var_1000ac60.138 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_10006a90.139 = constant [3 x i8] c"9 \00"
@global_var_10006a9c.140 = constant i32 939524193
@global_var_10006b04.142 = constant i32 939524101
@global_var_10006bf0.143 = constant i32 939524124
@global_var_10006c68.144 = constant i32 1207960116
@global_var_10006c80.145 = constant i32 939524105
@global_var_10006df8.146 = constant [3 x i8] c"9 \00"
@global_var_1000ac74.147 = constant [3 x i8] c"%x\00"
@global_var_10006e84.148 = constant i32 939524124
@global_var_10006ea8.149 = constant i32 939524193
@global_var_1000ac78.150 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1000ac84.151 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_10007594.152 = constant i32 1207959560
@global_var_10007698.153 = constant i32 1207959564
@global_var_1000ad96.154 = constant i32 1
@global_var_1001c390.155 = local_unnamed_addr global i32* @global_var_1000ad96.154
@global_var_10007aac.156 = constant i32 1207961092
@global_var_10007bd8.157 = constant i32 1207960768
@global_var_1000afb4.158 = constant i32 269488136
@global_var_1000af98.159 = constant [6 x i8] c"(nil)\00"
@global_var_1000afa0.160 = constant [7 x i8] c"(null)\00"
@global_var_1000afa8.161 = constant i32 721431808
@global_var_10008034.162 = constant i32 939524096
@global_var_1000b034.163 = constant i32 65793
@global_var_1000b01c.164 = constant i32 524293
@global_var_1000b014.165 = constant [8 x i8] c" +0-#'I\00"
@global_var_1000afbc.166 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1000affc.167 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1000aff0.168 = constant i32 67343
@global_var_1000afef.169 = constant i32 50331911
@global_var_1000afe0.170 = constant i32 268435461
@global_var_1000afd0.171 = constant i32 520093701
@global_var_10008b14.172 = constant i32 939589631
@global_var_10008bc8.173 = constant i32 939524118
@global_var_1000b050.174 = constant [8 x i8] c"Success\00"
@global_var_1000b040.175 = constant [15 x i8] c"Unknown error \00"
@global_var_100092b8.176 = constant i32 939524180
@global_var_100095b0.177 = constant i32 939524105
@global_var_10009654.178 = constant i32 939524105
@global_var_1000bbd8.179 = constant [4 x i8] c"inf\00"
@global_var_1000bbdb.181 = constant i32 4804166
@global_var_1000bbe8.182 = constant i32 771763200
@global_var_1000a3c8.183 = constant i32 939524171
@global_var_1000a490.184 = constant i32 939589631
@global_var_1001c004.185 = global i32 0
@global_var_1001c40c.2 = local_unnamed_addr global i8 0
@global_var_1001c260.20 = global i16 288
@global_var_1001c2b0.21 = local_unnamed_addr global i16 272
@global_var_1001c1fc.95 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001c40c.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001c01c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001c01c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001c01c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001c40c.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001c40c.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_1001c010.8, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_1001c010.8 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 268444060, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268477748, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268436056, i32* @lr, align 4
  %v1_10000254 = call i32 @__GI_time(i32 0)
  store i32 %v1_10000254, i32* @global_var_1001c3a4.9, align 4
  store i32 268436072, i32* @lr, align 4
  %v0_10000264 = call i32 @__libc_getpid()
  store i32 268436080, i32* @lr, align 4
  %v0_1000026c = call i32 @getppid()
  %v2_10000274 = xor i32 %v0_10000264, %v0_1000026c
  store i32 %v2_10000274, i32* @global_var_1001c3a8.10, align 4
  store i32 268436100, i32* @lr, align 4
  %v1_10000280 = call i32 @clock(i32 268566528)
  store i32 %v1_10000280, i32* @global_var_1001c3ac.11, align 4
  %v3_1000029c = load i32, i32* @global_var_1001c3a8.10, align 4
  %v2_100002a0 = xor i32 %v3_1000029c, %v1_10000280
  store i32 %v2_100002a0, i32* @global_var_1001c3b0.12, align 4
  ret i32 %v1_10000280

; uselistorder directives
  uselistorder i32 %v1_10000280, { 1, 0, 2 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v3_100002d8 = load i32, i32* @global_var_1001c3a4.9, align 4
  %v1_100002e4 = mul i32 %v3_100002d8, 2048
  %v2_100002ec = xor i32 %v1_100002e4, %v3_100002d8
  %v1_100002f8 = udiv i32 %v2_100002ec, 256
  %v3_1000030c = load i32, i32* @global_var_1001c3a8.10, align 4
  store i32 %v3_1000030c, i32* @global_var_1001c3a4.9, align 4
  %v3_1000031c = load i32, i32* @global_var_1001c3ac.11, align 4
  store i32 %v3_1000031c, i32* @global_var_1001c3a8.10, align 4
  %v3_1000032c = load i32, i32* @global_var_1001c3b0.12, align 4
  store i32 %v3_1000032c, i32* @global_var_1001c3ac.11, align 4
  %v1_10000340 = udiv i32 %v3_1000032c, 524288
  %v2_1000034c = xor i32 %v1_100002f8, %v2_100002ec
  %v2_10000300 = xor i32 %v2_1000034c, %v3_1000032c
  %v2_10000364 = xor i32 %v2_10000300, %v1_10000340
  store i32 %v2_10000364, i32* @global_var_1001c3b0.12, align 4
  ret i32 %v2_10000364

; uselistorder directives
  uselistorder i32 %v3_1000032c, { 1, 0, 2 }
  uselistorder i32 %v2_100002ec, { 1, 0 }
  uselistorder i32 %v3_100002d8, { 1, 0 }
}

define i32 @rand_str(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100003a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_100004543 = icmp sgt i32 %arg2, 0
  br i1 %v2_100004543, label %dec_label_pc_100003b0, label %dec_label_pc_1000045c

dec_label_pc_100003b0:                            ; preds = %entry, %dec_label_pc_10000450.backedge
  %stack_var_-24.0.in6 = phi i32 [ %stack_var_-24.0.in.be, %dec_label_pc_10000450.backedge ], [ %v0_100003a4, %entry ]
  %stack_var_-20.05 = phi i32 [ %stack_var_-20.0.be, %dec_label_pc_10000450.backedge ], [ %arg2, %entry ]
  %tmp16 = icmp slt i32 %stack_var_-20.05, 4
  br i1 %tmp16, label %dec_label_pc_100003e8, label %dec_label_pc_100003bc

dec_label_pc_100003bc:                            ; preds = %dec_label_pc_100003b0
  %v0_100003c0 = call i32 @rand_next()
  store i32 %v0_100003c0, i32* %r3.global-to-local, align 4
  %v2_100003c8 = inttoptr i32 %stack_var_-24.0.in6 to i32*
  store i32 %v0_100003c0, i32* %v2_100003c8, align 4
  %v1_100003d0 = add i32 %stack_var_-24.0.in6, 4
  %v1_100003dc = add i32 %stack_var_-20.05, -4
  br label %dec_label_pc_10000450.backedge

dec_label_pc_100003e8:                            ; preds = %dec_label_pc_100003b0
  %tmp17 = icmp slt i32 %stack_var_-20.05, 2
  br i1 %tmp17, label %dec_label_pc_10000424, label %dec_label_pc_100003f4

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e8
  %v0_100003f8 = call i32 @rand_next()
  store i32 %v0_100003f8, i32* %r3.global-to-local, align 4
  %v1_10000404 = trunc i32 %v0_100003f8 to i16
  %v3_10000404 = inttoptr i32 %stack_var_-24.0.in6 to i16*
  store i16 %v1_10000404, i16* %v3_10000404, align 2
  %v1_1000040c = add i32 %stack_var_-24.0.in6, 2
  %v1_10000418 = add i32 %stack_var_-20.05, -2
  br label %dec_label_pc_10000450.backedge

dec_label_pc_10000424:                            ; preds = %dec_label_pc_100003e8
  %v0_10000424 = call i32 @rand_next()
  store i32 %v0_10000424, i32* %r3.global-to-local, align 4
  %v1_10000434 = trunc i32 %v0_10000424 to i8
  %v3_10000434 = inttoptr i32 %stack_var_-24.0.in6 to i8*
  store i8 %v1_10000434, i8* %v3_10000434, align 1
  %v1_1000043c = add i32 %stack_var_-24.0.in6, 1
  br label %dec_label_pc_10000450.backedge

dec_label_pc_10000450.backedge:                   ; preds = %dec_label_pc_10000424, %dec_label_pc_100003bc, %dec_label_pc_100003f4
  %stack_var_-20.0.be = phi i32 [ 0, %dec_label_pc_10000424 ], [ %v1_10000418, %dec_label_pc_100003f4 ], [ %v1_100003dc, %dec_label_pc_100003bc ]
  %stack_var_-24.0.in.be = phi i32 [ %v1_1000043c, %dec_label_pc_10000424 ], [ %v1_1000040c, %dec_label_pc_100003f4 ], [ %v1_100003d0, %dec_label_pc_100003bc ]
  %v2_10000454 = icmp sgt i32 %stack_var_-20.0.be, 0
  br i1 %v2_10000454, label %dec_label_pc_100003b0, label %dec_label_pc_10000450.dec_label_pc_1000045c_crit_edge

dec_label_pc_10000450.dec_label_pc_1000045c_crit_edge: ; preds = %dec_label_pc_10000450.backedge
  %v0_10000474.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000045c

dec_label_pc_1000045c:                            ; preds = %dec_label_pc_10000450.dec_label_pc_1000045c_crit_edge, %entry
  %v0_10000474 = phi i32 [ %v0_10000474.pre, %dec_label_pc_10000450.dec_label_pc_1000045c_crit_edge ], [ %v0_100003a4, %entry ]
  ret i32 %v0_10000474

; uselistorder directives
  uselistorder i32 %stack_var_-20.0.be, { 1, 0 }
  uselistorder i32 %stack_var_-20.05, { 2, 1, 3, 0 }
  uselistorder i32 %stack_var_-24.0.in6, { 4, 5, 3, 0, 2, 1 }
  uselistorder i32 %v0_100003a4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder label %dec_label_pc_10000450.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100003b0, { 1, 0 }
}

define i32 @rand_alphastr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i8, align 1
  %stack_var_-76 = alloca i32, align 4
  %v2_1000049c = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_1000049c, i32* @r3, align 4
  store i32 ptrtoint ([37 x i8]* @global_var_1000a568.13 to i32), i32* @r4, align 4
  store i32 37, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_100004b4.14 to i32), i32* @lr, align 4
  %v0_100004b0 = call i32 @memcpy()
  store i32 %v0_100004b0, i32* %r3.global-to-local, align 4
  %v2_100005b811 = icmp sgt i32 %arg2, 0
  br i1 %v2_100005b811, label %dec_label_pc_100004b8.lr.ph, label %dec_label_pc_100005c0

dec_label_pc_100004b8.lr.ph:                      ; preds = %entry
  %v2_10000508 = ptrtoint i8* %stack_var_-88 to i32
  br label %dec_label_pc_100004b8

dec_label_pc_100004b8:                            ; preds = %dec_label_pc_100004b8.lr.ph, %dec_label_pc_100005b4.backedge
  %stack_var_-24.114 = phi i8* [ %arg1, %dec_label_pc_100004b8.lr.ph ], [ %stack_var_-24.1.be, %dec_label_pc_100005b4.backedge ]
  %stack_var_-20.013 = phi i32 [ %arg2, %dec_label_pc_100004b8.lr.ph ], [ %stack_var_-20.0.be, %dec_label_pc_100005b4.backedge ]
  %tmp27 = icmp ult i32 %stack_var_-20.013, 4
  br i1 %tmp27, label %dec_label_pc_10000554, label %dec_label_pc_100004c4

dec_label_pc_100004c4:                            ; preds = %dec_label_pc_100004b8
  %v0_100004c4 = call i32 @rand_next()
  store i32 %v0_100004c4, i32* %r3.global-to-local, align 4
  %v5_100004cc = trunc i32 %v0_100004c4 to i8
  br label %dec_label_pc_100004dc

dec_label_pc_100004dc:                            ; preds = %dec_label_pc_100004c4, %dec_label_pc_100004dc
  %storemerge69 = phi i32 [ 0, %dec_label_pc_100004c4 ], [ %v1_10000530, %dec_label_pc_100004dc ]
  %stack_var_-24.08 = phi i8* [ %stack_var_-24.114, %dec_label_pc_100004c4 ], [ %v5_10000528, %dec_label_pc_100004dc ]
  %stack_var_-84.07 = phi i8 [ %v5_100004cc, %dec_label_pc_100004c4 ], [ %v5_100004ec, %dec_label_pc_100004dc ]
  %v4_100004dc = sext i8 %stack_var_-84.07 to i32
  %v1_100004e8 = udiv i32 %v4_100004dc, 256
  %v5_100004ec = trunc i32 %v1_100004e8 to i8
  %div = udiv i8 %stack_var_-84.07, 8
  %v1_100004f8 = zext i8 %div to i32
  store i8 %div, i8* %stack_var_-88, align 1
  %v2_1000050c = add i32 %v1_100004f8, %v2_10000508
  %v1_10000510 = add i32 %v2_1000050c, 12
  %v2_10000510 = inttoptr i32 %v1_10000510 to i8*
  %v3_10000510 = load i8, i8* %v2_10000510, align 1
  %v4_10000518 = ptrtoint i8* %stack_var_-24.08 to i32
  store i8 %v3_10000510, i8* %stack_var_-24.08, align 1
  %v1_10000524 = add i32 %v4_10000518, 1
  %v5_10000528 = inttoptr i32 %v1_10000524 to i8*
  %v1_10000530 = add nuw nsw i32 %storemerge69, 1
  %tmp28 = icmp ult i32 %v1_10000530, 4
  br i1 %tmp28, label %dec_label_pc_100004dc, label %dec_label_pc_10000544

dec_label_pc_10000544:                            ; preds = %dec_label_pc_100004dc
  %v1_10000548 = add i32 %stack_var_-20.013, -4
  br label %dec_label_pc_100005b4.backedge

dec_label_pc_10000554:                            ; preds = %dec_label_pc_100004b8
  %v0_10000554 = call i32 @rand_next()
  store i32 %v0_10000554, i32* %r3.global-to-local, align 4
  %v1_10000574 = urem i32 %v0_10000554, 37
  %v4_10000594 = ptrtoint i8* %stack_var_-24.114 to i32
  %v1_10000598 = trunc i32 %v1_10000574 to i8
  store i8 %v1_10000598, i8* %stack_var_-24.114, align 1
  %v1_100005a0 = add i32 %v4_10000594, 1
  %v5_100005a4 = inttoptr i32 %v1_100005a0 to i8*
  %v1_100005ac = add i32 %stack_var_-20.013, -1
  br label %dec_label_pc_100005b4.backedge

dec_label_pc_100005b4.backedge:                   ; preds = %dec_label_pc_10000554, %dec_label_pc_10000544
  %stack_var_-20.0.be = phi i32 [ %v1_10000548, %dec_label_pc_10000544 ], [ %v1_100005ac, %dec_label_pc_10000554 ]
  %stack_var_-24.1.be = phi i8* [ %v5_10000528, %dec_label_pc_10000544 ], [ %v5_100005a4, %dec_label_pc_10000554 ]
  %v2_100005b8 = icmp sgt i32 %stack_var_-20.0.be, 0
  br i1 %v2_100005b8, label %dec_label_pc_100004b8, label %dec_label_pc_100005b4.dec_label_pc_100005c0_crit_edge

dec_label_pc_100005b4.dec_label_pc_100005c0_crit_edge: ; preds = %dec_label_pc_100005b4.backedge
  %v0_100005d4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005c0

dec_label_pc_100005c0:                            ; preds = %dec_label_pc_100005b4.dec_label_pc_100005c0_crit_edge, %entry
  %v0_100005d4 = phi i32 [ %v0_100005d4.pre, %dec_label_pc_100005b4.dec_label_pc_100005c0_crit_edge ], [ %v0_100004b0, %entry ]
  ret i32 %v0_100005d4

; uselistorder directives
  uselistorder i32 %stack_var_-20.013, { 1, 2, 0 }
  uselistorder i8* %stack_var_-88, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder label %dec_label_pc_100004dc, { 1, 0 }
  uselistorder label %dec_label_pc_100004b8, { 1, 0 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_10000600

dec_label_pc_100005f4:                            ; preds = %dec_label_pc_10000600
  %v4_10000600 = ptrtoint i8* %stack_var_-24.0 to i32
  %v1_1000061c = add i32 %v4_10000600, 1
  %v5_10000620 = inttoptr i32 %v1_1000061c to i8*
  %v1_100005f8 = add i32 %storemerge2, 1
  br label %dec_label_pc_10000600

dec_label_pc_10000600:                            ; preds = %entry, %dec_label_pc_100005f4
  %stack_var_-24.0 = phi i8* [ %arg1, %entry ], [ %v5_10000620, %dec_label_pc_100005f4 ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_100005f8, %dec_label_pc_100005f4 ]
  %v2_10000604 = load i8, i8* %stack_var_-24.0, align 1
  %tmp = icmp ne i8 %v2_10000604, 0
  %v3_10000624 = icmp eq i1 %tmp, false
  br i1 %v3_10000624, label %dec_label_pc_1000062c, label %dec_label_pc_100005f4

dec_label_pc_1000062c:                            ; preds = %dec_label_pc_10000600
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-24.0, { 1, 0 }
  uselistorder label %dec_label_pc_10000600, { 1, 0 }
}

define i32 @util_memcpy(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v4_100006b08 = icmp eq i32 %arg3, 0
  br i1 %v4_100006b08, label %dec_label_pc_100006b8, label %dec_label_pc_10000670

dec_label_pc_10000670:                            ; preds = %entry, %dec_label_pc_10000670
  %v1_100006a011.in = phi i32 [ %v1_100006a011, %dec_label_pc_10000670 ], [ %arg3, %entry ]
  %stack_var_-36.010 = phi i8* [ %v5_1000068c, %dec_label_pc_10000670 ], [ %arg1, %entry ]
  %storemerge49 = phi i32 [ %v1_10000694, %dec_label_pc_10000670 ], [ %arg2, %entry ]
  %v1_100006a011 = add i32 %v1_100006a011.in, -1
  %storemerge = inttoptr i32 %storemerge49 to i8*
  %v2_10000674 = load i8, i8* %storemerge, align 1
  %v4_1000067c = ptrtoint i8* %stack_var_-36.010 to i32
  store i8 %v2_10000674, i8* %stack_var_-36.010, align 1
  %v1_10000688 = add i32 %v4_1000067c, 1
  %v5_1000068c = inttoptr i32 %v1_10000688 to i8*
  %v1_10000694 = add i32 %storemerge49, 1
  %v4_100006b0 = icmp eq i32 %v1_100006a011, 0
  br i1 %v4_100006b0, label %dec_label_pc_1000069c.dec_label_pc_100006b8_crit_edge, label %dec_label_pc_10000670

dec_label_pc_1000069c.dec_label_pc_100006b8_crit_edge: ; preds = %dec_label_pc_10000670
  br label %dec_label_pc_100006b8

dec_label_pc_100006b8:                            ; preds = %dec_label_pc_1000069c.dec_label_pc_100006b8_crit_edge, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder label %dec_label_pc_10000670, { 1, 0 }
}

define i32 @util_strcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_100006e8 = inttoptr i32 %arg2 to i8*
  %v2_100006e8 = call i32 @util_strlen(i8* %v1_100006e8)
  %v1_100006f8 = add i32 %v2_100006e8, 1
  %v4_10000708 = inttoptr i32 %arg1 to i8*
  %v5_10000708 = call i32 @util_memcpy(i8* %v4_10000708, i32 %arg2, i32 %v1_100006f8, i32 %v2_100006e8)
  ret i32 %v2_100006e8

; uselistorder directives
  uselistorder i32 %v2_100006e8, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_10000740 = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v3_1000074c = icmp eq i32 %v0_10000740, 0
  br i1 %v3_1000074c, label %dec_label_pc_10000780, label %dec_label_pc_10000754

dec_label_pc_10000754:                            ; preds = %entry
  %v1_10000758 = inttoptr i32 %v0_10000740 to i32*
  %v2_10000758 = load i32, i32* %v1_10000758, align 4
  %v1_10000764 = trunc i32 %arg2 to i8
  %v3_10000764 = inttoptr i32 %v2_10000758 to i8*
  store i8 %v1_10000764, i8* %v3_10000764, align 1
  %v2_1000076c = load i32, i32* %v1_10000758, align 4
  %v1_10000770 = add i32 %v2_1000076c, 1
  store i32 %v1_10000770, i32* %v1_10000758, align 4
  %v0_100007a8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000794

dec_label_pc_10000780:                            ; preds = %entry
  %v2_10000780 = ptrtoint i32* %stack_var_-20 to i32
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268437396, i32* @lr, align 4
  %v2_10000790 = call i32 @__libc_write(i32 1, i32 %v2_10000780)
  store i32 %v2_10000790, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000794

dec_label_pc_10000794:                            ; preds = %dec_label_pc_10000754, %dec_label_pc_10000780
  %v0_100007a8 = phi i32 [ %v0_100007a8.pre, %dec_label_pc_10000754 ], [ %v2_10000790, %dec_label_pc_10000780 ]
  ret i32 %v0_100007a8

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10000794, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp46 = icmp slt i32 %arg3, 1
  br i1 %tmp46, label %dec_label_pc_10000870, label %dec_label_pc_100007ec

dec_label_pc_100007ec:                            ; preds = %entry
  %v2_1000081c27 = load i8, i8* %arg2, align 1
  %v3_1000082430 = icmp eq i8 %v2_1000081c27, 0
  br i1 %v3_1000082430, label %dec_label_pc_1000082c, label %dec_label_pc_10000800

dec_label_pc_10000800:                            ; preds = %dec_label_pc_100007ec, %dec_label_pc_10000800
  %v4_1000081832 = phi i32 [ %v1_10000810, %dec_label_pc_10000800 ], [ %tmp, %dec_label_pc_100007ec ]
  %stack_var_-20.031 = phi i32 [ %v1_10000804, %dec_label_pc_10000800 ], [ 0, %dec_label_pc_100007ec ]
  %v1_10000804 = add i32 %stack_var_-20.031, 1
  %v1_10000810 = add i32 %v4_1000081832, 1
  %v5_10000814 = inttoptr i32 %v1_10000810 to i8*
  %v2_1000081c = load i8, i8* %v5_10000814, align 1
  %v3_10000824 = icmp eq i8 %v2_1000081c, 0
  br i1 %v3_10000824, label %dec_label_pc_1000082c, label %dec_label_pc_10000800

dec_label_pc_1000082c:                            ; preds = %dec_label_pc_10000800, %dec_label_pc_100007ec
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_100007ec ], [ %v1_10000804, %dec_label_pc_10000800 ]
  %v2_10000834 = icmp slt i32 %stack_var_-20.0.lcssa, %arg3
  br i1 %v2_10000834, label %dec_label_pc_10000848, label %dec_label_pc_10000858

dec_label_pc_10000848:                            ; preds = %dec_label_pc_1000082c
  %v2_10000850 = sub i32 %arg3, %stack_var_-20.0.lcssa
  br label %dec_label_pc_10000858

dec_label_pc_10000858:                            ; preds = %dec_label_pc_1000082c, %dec_label_pc_10000848
  %storemerge4 = phi i32 [ %v2_10000850, %dec_label_pc_10000848 ], [ 0, %dec_label_pc_1000082c ]
  %v1_1000085c = call i32 @__asm_rlwinm(i32 %arg4, i32 0, i32 30, i32 30)
  %v3_10000860 = icmp eq i32 %v1_1000085c, 0
  br i1 %v3_10000860, label %dec_label_pc_10000870, label %dec_label_pc_10000868

dec_label_pc_10000868:                            ; preds = %dec_label_pc_10000858
  br label %dec_label_pc_10000870

dec_label_pc_10000870:                            ; preds = %dec_label_pc_10000858, %entry, %dec_label_pc_10000868
  %stack_var_-32.0 = phi i32 [ %arg3, %entry ], [ %storemerge4, %dec_label_pc_10000858 ], [ %storemerge4, %dec_label_pc_10000868 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_10000858 ], [ 48, %dec_label_pc_10000868 ]
  %v1_10000874 = urem i32 %arg4, 2
  %v3_10000878 = icmp eq i32 %v1_10000874, 0
  br i1 %v3_10000878, label %dec_label_pc_100008a8.preheader, label %dec_label_pc_100008e8.preheader

dec_label_pc_100008a8.preheader:                  ; preds = %dec_label_pc_10000870
  %v2_100008ac20 = icmp sgt i32 %stack_var_-32.0, 0
  br i1 %v2_100008ac20, label %dec_label_pc_10000884.lr.ph, label %dec_label_pc_100008e8.preheader

dec_label_pc_10000884.lr.ph:                      ; preds = %dec_label_pc_100008a8.preheader
  %v2_1000088c = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10000884

dec_label_pc_10000884:                            ; preds = %dec_label_pc_10000884.lr.ph, %dec_label_pc_10000884
  %stack_var_-32.123 = phi i32 [ %stack_var_-32.0, %dec_label_pc_10000884.lr.ph ], [ %v1_100008a0, %dec_label_pc_10000884 ]
  %v3_1000088c = call i32 @printchar(i32* %v2_1000088c, i32 %stack_var_-16.0)
  %v1_100008a0 = add nsw i32 %stack_var_-32.123, -1
  %v2_100008ac = icmp sgt i32 %stack_var_-32.123, 1
  br i1 %v2_100008ac, label %dec_label_pc_10000884, label %dec_label_pc_100008e8.preheader

dec_label_pc_100008e8.preheader:                  ; preds = %dec_label_pc_10000884, %dec_label_pc_100008a8.preheader, %dec_label_pc_10000870
  %stack_var_-12.1.ph = phi i32 [ 0, %dec_label_pc_10000870 ], [ 0, %dec_label_pc_100008a8.preheader ], [ %stack_var_-32.0, %dec_label_pc_10000884 ]
  %stack_var_-32.2.ph = phi i32 [ %stack_var_-32.0, %dec_label_pc_10000870 ], [ %stack_var_-32.0, %dec_label_pc_100008a8.preheader ], [ 0, %dec_label_pc_10000884 ]
  %v2_100008ec11 = load i8, i8* %arg2, align 1
  %v3_100008f414 = icmp eq i8 %v2_100008ec11, 0
  br i1 %v3_100008f414, label %dec_label_pc_10000924.preheader, label %dec_label_pc_100008b8.lr.ph

dec_label_pc_100008b8.lr.ph:                      ; preds = %dec_label_pc_100008e8.preheader
  %v2_100008cc = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_100008b8

dec_label_pc_100008b8:                            ; preds = %dec_label_pc_100008b8.lr.ph, %dec_label_pc_100008b8
  %v4_100008e817 = phi i32 [ %tmp, %dec_label_pc_100008b8.lr.ph ], [ %v1_100008e0, %dec_label_pc_100008b8 ]
  %stack_var_-36.016 = phi i8* [ %arg2, %dec_label_pc_100008b8.lr.ph ], [ %v5_100008e4, %dec_label_pc_100008b8 ]
  %stack_var_-12.115 = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_100008b8.lr.ph ], [ %v1_100008d4, %dec_label_pc_100008b8 ]
  %v2_100008bc = load i8, i8* %stack_var_-36.016, align 1
  %v3_100008bc = zext i8 %v2_100008bc to i32
  %v3_100008cc = call i32 @printchar(i32* %v2_100008cc, i32 %v3_100008bc)
  %v1_100008d4 = add i32 %stack_var_-12.115, 1
  %v1_100008e0 = add i32 %v4_100008e817, 1
  %v5_100008e4 = inttoptr i32 %v1_100008e0 to i8*
  %v2_100008ec = load i8, i8* %v5_100008e4, align 1
  %v3_100008f4 = icmp eq i8 %v2_100008ec, 0
  br i1 %v3_100008f4, label %dec_label_pc_10000924.preheader, label %dec_label_pc_100008b8

dec_label_pc_10000924.preheader:                  ; preds = %dec_label_pc_100008b8, %dec_label_pc_100008e8.preheader
  %stack_var_-12.1.lcssa = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_100008e8.preheader ], [ %v1_100008d4, %dec_label_pc_100008b8 ]
  %v2_100009286 = icmp sgt i32 %stack_var_-32.2.ph, 0
  br i1 %v2_100009286, label %dec_label_pc_10000900.lr.ph, label %dec_label_pc_10000930

dec_label_pc_10000900.lr.ph:                      ; preds = %dec_label_pc_10000924.preheader
  %v2_10000908 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10000900

dec_label_pc_10000900:                            ; preds = %dec_label_pc_10000900.lr.ph, %dec_label_pc_10000900
  %stack_var_-32.39 = phi i32 [ %stack_var_-32.2.ph, %dec_label_pc_10000900.lr.ph ], [ %v1_1000091c, %dec_label_pc_10000900 ]
  %v3_10000908 = call i32 @printchar(i32* %v2_10000908, i32 %stack_var_-16.0)
  %v1_1000091c = add nsw i32 %stack_var_-32.39, -1
  %v2_10000928 = icmp sgt i32 %stack_var_-32.39, 1
  br i1 %v2_10000928, label %dec_label_pc_10000900, label %dec_label_pc_10000924.dec_label_pc_10000930_crit_edge

dec_label_pc_10000924.dec_label_pc_10000930_crit_edge: ; preds = %dec_label_pc_10000900
  %tmp47 = add i32 %stack_var_-12.1.lcssa, %stack_var_-32.2.ph
  br label %dec_label_pc_10000930

dec_label_pc_10000930:                            ; preds = %dec_label_pc_10000924.dec_label_pc_10000930_crit_edge, %dec_label_pc_10000924.preheader
  %stack_var_-12.2.lcssa = phi i32 [ %tmp47, %dec_label_pc_10000924.dec_label_pc_10000930_crit_edge ], [ %stack_var_-12.1.lcssa, %dec_label_pc_10000924.preheader ]
  ret i32 %stack_var_-12.2.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.1.lcssa, { 1, 0 }
  uselistorder i32 %v1_100008e0, { 1, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %stack_var_-20.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_10000810, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000900, { 1, 0 }
  uselistorder label %dec_label_pc_100008b8, { 1, 0 }
  uselistorder label %dec_label_pc_10000884, { 1, 0 }
  uselistorder label %dec_label_pc_10000870, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000858, { 1, 0 }
  uselistorder label %dec_label_pc_10000800, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v3_1000099c = icmp eq i32 %arg2, 0
  br i1 %v3_1000099c, label %dec_label_pc_100009a4, label %dec_label_pc_100009d8

dec_label_pc_100009a4:                            ; preds = %entry
  store i32 48, i32* %stack_var_-88, align 4
  %v4_100009c8 = bitcast i32* %stack_var_-88 to i8*
  %v5_100009c8 = call i32 @prints(i32 %arg1, i8* %v4_100009c8, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_10000b30

dec_label_pc_100009d8:                            ; preds = %entry
  %v3_100009dc = icmp eq i32 %arg4, 0
  br i1 %v3_100009dc, label %dec_label_pc_10000a10, label %dec_label_pc_100009e4

dec_label_pc_100009e4:                            ; preds = %dec_label_pc_100009d8
  %v3_100009e8 = icmp eq i32 %arg3, 10
  br i1 %v3_100009e8, label %dec_label_pc_100009f0, label %dec_label_pc_10000a10

dec_label_pc_100009f0:                            ; preds = %dec_label_pc_100009e4
  %tmp27 = icmp sgt i32 %arg2, -1
  br i1 %tmp27, label %dec_label_pc_10000a10, label %dec_label_pc_100009fc

dec_label_pc_100009fc:                            ; preds = %dec_label_pc_100009f0
  %v1_10000a08 = sub i32 0, %arg2
  br label %dec_label_pc_10000a10

dec_label_pc_10000a10:                            ; preds = %dec_label_pc_100009e4, %dec_label_pc_100009f0, %dec_label_pc_100009d8, %dec_label_pc_100009fc
  %stack_var_-44.0 = phi i32 [ %arg2, %dec_label_pc_100009d8 ], [ %arg2, %dec_label_pc_100009f0 ], [ %v1_10000a08, %dec_label_pc_100009fc ], [ %arg2, %dec_label_pc_100009e4 ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_100009d8 ], [ 0, %dec_label_pc_100009f0 ], [ 1, %dec_label_pc_100009fc ], [ 0, %dec_label_pc_100009e4 ]
  %tmp28 = bitcast i32* %stack_var_-77 to i8*
  store i8 0, i8* %tmp28, align 4
  %v3_10000a9c5 = icmp eq i32 %stack_var_-44.0, 0
  br i1 %v3_10000a9c5, label %dec_label_pc_10000aa4, label %dec_label_pc_10000a28.lr.ph

dec_label_pc_10000a28.lr.ph:                      ; preds = %dec_label_pc_10000a10
  %v2_10000a58 = add i32 %arg7, -58
  br label %dec_label_pc_10000a28

dec_label_pc_10000a28:                            ; preds = %dec_label_pc_10000a28.lr.ph, %dec_label_pc_10000a64
  %stack_var_-44.17 = phi i32 [ %stack_var_-44.0, %dec_label_pc_10000a28.lr.ph ], [ %v2_10000a90, %dec_label_pc_10000a64 ]
  %stack_var_-28.06 = phi i8* [ %tmp28, %dec_label_pc_10000a28.lr.ph ], [ %v5_10000a6c, %dec_label_pc_10000a64 ]
  %v2_10000a30 = urem i32 %stack_var_-44.17, %arg3
  %tmp29 = icmp slt i32 %v2_10000a30, 10
  br i1 %tmp29, label %dec_label_pc_10000a64, label %dec_label_pc_10000a50

dec_label_pc_10000a50:                            ; preds = %dec_label_pc_10000a28
  %v1_10000a5c = add i32 %v2_10000a58, %v2_10000a30
  br label %dec_label_pc_10000a64

dec_label_pc_10000a64:                            ; preds = %dec_label_pc_10000a28, %dec_label_pc_10000a50
  %stack_var_-32.0 = phi i32 [ %v2_10000a30, %dec_label_pc_10000a28 ], [ %v1_10000a5c, %dec_label_pc_10000a50 ]
  %v4_10000a64 = ptrtoint i8* %stack_var_-28.06 to i32
  %v1_10000a68 = add i32 %v4_10000a64, -1
  %v5_10000a6c = inttoptr i32 %v1_10000a68 to i8*
  %fold = add i32 %stack_var_-32.0, 48
  %v1_10000a84 = trunc i32 %fold to i8
  store i8 %v1_10000a84, i8* %v5_10000a6c, align 1
  %v2_10000a90 = udiv i32 %stack_var_-44.17, %arg3
  %v3_10000a9c = icmp ult i32 %stack_var_-44.17, %arg3
  br i1 %v3_10000a9c, label %dec_label_pc_10000aa4, label %dec_label_pc_10000a28

dec_label_pc_10000aa4:                            ; preds = %dec_label_pc_10000a64, %dec_label_pc_10000a10
  %stack_var_-28.0.lcssa = phi i8* [ %tmp28, %dec_label_pc_10000a10 ], [ %v5_10000a6c, %dec_label_pc_10000a64 ]
  %v3_10000aa8 = icmp eq i32 %stack_var_-36.0, 0
  br i1 %v3_10000aa8, label %dec_label_pc_10000b0c, label %dec_label_pc_10000ab0

dec_label_pc_10000ab0:                            ; preds = %dec_label_pc_10000aa4
  %v3_10000ab4 = icmp eq i32 %arg5, 0
  br i1 %v3_10000ab4, label %dec_label_pc_10000af4, label %dec_label_pc_10000abc

dec_label_pc_10000abc:                            ; preds = %dec_label_pc_10000ab0
  %v1_10000ac0 = call i32 @__asm_rlwinm(i32 %arg6, i32 0, i32 30, i32 30)
  %v3_10000ac4 = icmp eq i32 %v1_10000ac0, 0
  br i1 %v3_10000ac4, label %dec_label_pc_10000af4, label %dec_label_pc_10000acc

dec_label_pc_10000acc:                            ; preds = %dec_label_pc_10000abc
  %v2_10000ad4 = inttoptr i32 %arg1 to i32*
  %v3_10000ad4 = call i32 @printchar(i32* %v2_10000ad4, i32 45)
  %v1_10000ae8 = add i32 %arg5, -1
  br label %dec_label_pc_10000b0c

dec_label_pc_10000af4:                            ; preds = %dec_label_pc_10000abc, %dec_label_pc_10000ab0
  %v4_10000af4 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v1_10000af8 = add i32 %v4_10000af4, -1
  %v5_10000afc = inttoptr i32 %v1_10000af8 to i8*
  store i8 45, i8* %v5_10000afc, align 1
  br label %dec_label_pc_10000b0c

dec_label_pc_10000b0c:                            ; preds = %dec_label_pc_10000aa4, %dec_label_pc_10000acc, %dec_label_pc_10000af4
  %stack_var_-28.1 = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_10000aa4 ], [ %v5_10000afc, %dec_label_pc_10000af4 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_10000acc ]
  %stack_var_-56.0 = phi i32 [ %arg5, %dec_label_pc_10000aa4 ], [ %arg5, %dec_label_pc_10000af4 ], [ %v1_10000ae8, %dec_label_pc_10000acc ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_10000aa4 ], [ 0, %dec_label_pc_10000af4 ], [ 1, %dec_label_pc_10000acc ]
  %v5_10000b1c = call i32 @prints(i32 %arg1, i8* %stack_var_-28.1, i32 %stack_var_-56.0, i32 %arg6)
  %v2_10000b28 = add i32 %v5_10000b1c, %stack_var_-40.0
  br label %dec_label_pc_10000b30

dec_label_pc_10000b30:                            ; preds = %dec_label_pc_100009a4, %dec_label_pc_10000b0c
  %storemerge = phi i32 [ %v2_10000b28, %dec_label_pc_10000b0c ], [ %v5_100009c8, %dec_label_pc_100009a4 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-28.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_10000a6c, { 0, 2, 1 }
  uselistorder i32 %v2_10000a30, { 1, 0, 2 }
  uselistorder i32 %stack_var_-44.17, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000b30, { 1, 0 }
  uselistorder label %dec_label_pc_10000b0c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10000a64, { 1, 0 }
  uselistorder label %dec_label_pc_10000a28, { 1, 0 }
  uselistorder label %dec_label_pc_10000a10, { 3, 1, 0, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp41 = ptrtoint i32* %arg1 to i32
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-68.427 = inttoptr i32 %arg2 to i8*
  %v2_1000112028 = load i8, i8* %stack_var_-68.427, align 1
  %v3_1000112831 = icmp eq i8 %v2_1000112028, 0
  br i1 %v3_1000112831, label %dec_label_pc_10001130, label %dec_label_pc_10000b7c.lr.ph

dec_label_pc_10000b7c.lr.ph:                      ; preds = %entry
  %v1_10000cf0 = add i32 %arg3, 4
  %v2_10000cf0 = inttoptr i32 %v1_10000cf0 to i32*
  %v1_10000cb8 = add i32 %arg3, 8
  %v2_10000cb8 = inttoptr i32 %v1_10000cb8 to i32*
  %v4_100010d4 = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_10000b7c

dec_label_pc_10000b7c:                            ; preds = %dec_label_pc_10000b7c.lr.ph, %dec_label_pc_10001110
  %stack_var_-68.434 = phi i8* [ %stack_var_-68.427, %dec_label_pc_10000b7c.lr.ph ], [ %stack_var_-68.4, %dec_label_pc_10001110 ]
  %stack_var_-68.4.in33 = phi i32 [ %arg2, %dec_label_pc_10000b7c.lr.ph ], [ %v1_10001114, %dec_label_pc_10001110 ]
  %stack_var_-56.132 = phi i32 [ 0, %dec_label_pc_10000b7c.lr.ph ], [ %stack_var_-56.0, %dec_label_pc_10001110 ]
  %v2_10000b80 = load i8, i8* %stack_var_-68.434, align 1
  %v3_10000b88 = icmp eq i8 %v2_10000b80, 37
  br i1 %v3_10000b88, label %dec_label_pc_10000b90, label %dec_label_pc_100010ec

dec_label_pc_10000b90:                            ; preds = %dec_label_pc_10000b7c
  %v1_10000b94 = add i32 %stack_var_-68.4.in33, 1
  %v5_10000b98 = inttoptr i32 %v1_10000b94 to i8*
  %v2_10000bb0 = load i8, i8* %v5_10000b98, align 1
  %v3_10000bb8 = icmp eq i8 %v2_10000bb0, 0
  br i1 %v3_10000bb8, label %dec_label_pc_10001130, label %dec_label_pc_10000bc0

dec_label_pc_10000bc0:                            ; preds = %dec_label_pc_10000b90
  %v2_10000bc4 = load i8, i8* %v5_10000b98, align 1
  %v3_10000bcc = icmp eq i8 %v2_10000bc4, 37
  br i1 %v3_10000bcc, label %dec_label_pc_100010ec, label %dec_label_pc_10000bd4

dec_label_pc_10000bd4:                            ; preds = %dec_label_pc_10000bc0
  %v2_10000bd8 = load i8, i8* %v5_10000b98, align 1
  %v3_10000be0 = icmp eq i8 %v2_10000bd8, 45
  br i1 %v3_10000be0, label %dec_label_pc_10000be8, label %dec_label_pc_10000c18.preheader

dec_label_pc_10000be8:                            ; preds = %dec_label_pc_10000bd4
  %v1_10000bec = add i32 %stack_var_-68.4.in33, 2
  %v5_10000bf0 = inttoptr i32 %v1_10000bec to i8*
  br label %dec_label_pc_10000c18.preheader

dec_label_pc_10000c18.preheader:                  ; preds = %dec_label_pc_10000be8, %dec_label_pc_10000bd4
  %stack_var_-68.0.ph = phi i8* [ %v5_10000b98, %dec_label_pc_10000bd4 ], [ %v5_10000bf0, %dec_label_pc_10000be8 ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_10000bd4 ], [ 1, %dec_label_pc_10000be8 ]
  %v4_10000c183 = ptrtoint i8* %stack_var_-68.0.ph to i32
  %v2_10000c1c4 = load i8, i8* %stack_var_-68.0.ph, align 1
  %v3_10000c248 = icmp eq i8 %v2_10000c1c4, 48
  br i1 %v3_10000c248, label %dec_label_pc_10000c00, label %dec_label_pc_10000c64.preheader

dec_label_pc_10000c00:                            ; preds = %dec_label_pc_10000c18.preheader, %dec_label_pc_10000c00
  %v4_10000c1810 = phi i32 [ %v1_10000c04, %dec_label_pc_10000c00 ], [ %v4_10000c183, %dec_label_pc_10000c18.preheader ]
  %stack_var_-52.09 = phi i32 [ %v1_10000c10, %dec_label_pc_10000c00 ], [ %stack_var_-52.0.ph, %dec_label_pc_10000c18.preheader ]
  %v1_10000c04 = add i32 %v4_10000c1810, 1
  %v5_10000c08 = inttoptr i32 %v1_10000c04 to i8*
  %v1_10000c10 = or i32 %stack_var_-52.09, 2
  %v2_10000c1c = load i8, i8* %v5_10000c08, align 1
  %v3_10000c24 = icmp eq i8 %v2_10000c1c, 48
  br i1 %v3_10000c24, label %dec_label_pc_10000c00, label %dec_label_pc_10000c64.preheader

dec_label_pc_10000c64.preheader:                  ; preds = %dec_label_pc_10000c00, %dec_label_pc_10000c18.preheader
  %stack_var_-52.0.lcssa = phi i32 [ %stack_var_-52.0.ph, %dec_label_pc_10000c18.preheader ], [ %v1_10000c10, %dec_label_pc_10000c00 ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.0.ph, %dec_label_pc_10000c18.preheader ], [ %v5_10000c08, %dec_label_pc_10000c00 ]
  %v4_10000c6412 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v2_10000c6813 = load i8, i8* %stack_var_-68.0.lcssa, align 1
  %tmp62 = icmp ult i8 %v2_10000c6813, 48
  br i1 %tmp62, label %dec_label_pc_10000c8c, label %dec_label_pc_10000c78

dec_label_pc_10000c30:                            ; preds = %dec_label_pc_10000c78
  %v1_10000c34 = mul i32 %stack_var_-48.018, 10
  %v2_10000c40 = load i8, i8* %stack_var_-68.119, align 1
  %v3_10000c40 = zext i8 %v2_10000c40 to i32
  %v2_10000c4c = add i32 %v1_10000c34, -48
  %v1_10000c50 = add i32 %v2_10000c4c, %v3_10000c40
  %v1_10000c5c = add i32 %v4_10000c6420, 1
  %v5_10000c60 = inttoptr i32 %v1_10000c5c to i8*
  %v2_10000c68 = load i8, i8* %v5_10000c60, align 1
  %tmp63 = icmp ult i8 %v2_10000c68, 48
  br i1 %tmp63, label %dec_label_pc_10000c8c, label %dec_label_pc_10000c78

dec_label_pc_10000c78:                            ; preds = %dec_label_pc_10000c64.preheader, %dec_label_pc_10000c30
  %v4_10000c6420 = phi i32 [ %v1_10000c5c, %dec_label_pc_10000c30 ], [ %v4_10000c6412, %dec_label_pc_10000c64.preheader ]
  %stack_var_-68.119 = phi i8* [ %v5_10000c60, %dec_label_pc_10000c30 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_10000c64.preheader ]
  %stack_var_-48.018 = phi i32 [ %v1_10000c50, %dec_label_pc_10000c30 ], [ 0, %dec_label_pc_10000c64.preheader ]
  %v2_10000c7c = load i8, i8* %stack_var_-68.119, align 1
  %tmp64 = icmp ult i8 %v2_10000c7c, 58
  br i1 %tmp64, label %dec_label_pc_10000c30, label %dec_label_pc_10000c8c

dec_label_pc_10000c8c:                            ; preds = %dec_label_pc_10000c30, %dec_label_pc_10000c78, %dec_label_pc_10000c64.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_10000c64.preheader ], [ %v1_10000c50, %dec_label_pc_10000c30 ], [ %stack_var_-48.018, %dec_label_pc_10000c78 ]
  %stack_var_-68.1.lcssa = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_10000c64.preheader ], [ %v5_10000c60, %dec_label_pc_10000c30 ], [ %stack_var_-68.119, %dec_label_pc_10000c78 ]
  %v2_10000c90 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000c98 = icmp eq i8 %v2_10000c90, 115
  br i1 %v3_10000c98, label %dec_label_pc_10000ca0, label %dec_label_pc_10000d60

dec_label_pc_10000ca0:                            ; preds = %dec_label_pc_10000c8c
  %v2_10000ca4 = load i8, i8* %tmp, align 1
  %tmp65 = icmp ugt i8 %v2_10000ca4, 7
  br i1 %tmp65, label %dec_label_pc_10000cec, label %dec_label_pc_10000cb4

dec_label_pc_10000cb4:                            ; preds = %dec_label_pc_10000ca0
  %v3_10000cb8 = load i32, i32* %v2_10000cb8, align 4
  %v2_10000cc0 = load i8, i8* %tmp, align 1
  %v3_10000cc0 = zext i8 %v2_10000cc0 to i32
  %v1_10000ccc = mul nuw nsw i32 %v3_10000cc0, 4
  %v2_10000cd0 = add i32 %v1_10000ccc, %v3_10000cb8
  %v1_10000cd8 = add i8 %v2_10000cc0, 1
  store i8 %v1_10000cd8, i8* %tmp, align 1
  br label %dec_label_pc_10000d04

dec_label_pc_10000cec:                            ; preds = %dec_label_pc_10000ca0
  %v3_10000cf0 = load i32, i32* %v2_10000cf0, align 4
  %v1_10000cf8 = add i32 %v3_10000cf0, 4
  store i32 %v1_10000cf8, i32* %v2_10000cf0, align 4
  br label %dec_label_pc_10000d04

dec_label_pc_10000d04:                            ; preds = %dec_label_pc_10000cb4, %dec_label_pc_10000cec
  %stack_var_-20.0 = phi i32 [ %v3_10000cf0, %dec_label_pc_10000cec ], [ %v2_10000cd0, %dec_label_pc_10000cb4 ]
  %v1_10000d08 = inttoptr i32 %stack_var_-20.0 to i32*
  %v2_10000d08 = load i32, i32* %v1_10000d08, align 4
  %v3_10000d14 = icmp eq i32 %v2_10000d08, 0
  br i1 %v3_10000d14, label %dec_label_pc_10000d28, label %dec_label_pc_10000d1c

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000d04
  %v5_10000d20 = inttoptr i32 %v2_10000d08 to i8*
  br label %dec_label_pc_10000d34

dec_label_pc_10000d28:                            ; preds = %dec_label_pc_10000d04
  br label %dec_label_pc_10000d34

dec_label_pc_10000d34:                            ; preds = %dec_label_pc_10000d1c, %dec_label_pc_10000d28
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000a590.15, i32 0, i32 0), %dec_label_pc_10000d28 ], [ %v5_10000d20, %dec_label_pc_10000d1c ]
  %v6_10000d48 = call i32 @prints(i32 %tmp41, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000d54 = add i32 %v6_10000d48, %stack_var_-56.132
  br label %dec_label_pc_10001110

dec_label_pc_10000d60:                            ; preds = %dec_label_pc_10000c8c
  %v2_10000d64 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000d6c = icmp eq i8 %v2_10000d64, 100
  br i1 %v3_10000d6c, label %dec_label_pc_10000d74, label %dec_label_pc_10000e14

dec_label_pc_10000d74:                            ; preds = %dec_label_pc_10000d60
  %v2_10000d78 = load i8, i8* %tmp, align 1
  %tmp66 = icmp ugt i8 %v2_10000d78, 7
  br i1 %tmp66, label %dec_label_pc_10000dc0, label %dec_label_pc_10000d88

dec_label_pc_10000d88:                            ; preds = %dec_label_pc_10000d74
  %v3_10000d8c = load i32, i32* %v2_10000cb8, align 4
  %v2_10000d94 = load i8, i8* %tmp, align 1
  %v3_10000d94 = zext i8 %v2_10000d94 to i32
  %v1_10000da0 = mul nuw nsw i32 %v3_10000d94, 4
  %v2_10000da4 = add i32 %v1_10000da0, %v3_10000d8c
  %v1_10000dac = add i8 %v2_10000d94, 1
  store i8 %v1_10000dac, i8* %tmp, align 1
  br label %dec_label_pc_10000dd8

dec_label_pc_10000dc0:                            ; preds = %dec_label_pc_10000d74
  %v3_10000dc4 = load i32, i32* %v2_10000cf0, align 4
  %v1_10000dcc = add i32 %v3_10000dc4, 4
  store i32 %v1_10000dcc, i32* %v2_10000cf0, align 4
  br label %dec_label_pc_10000dd8

dec_label_pc_10000dd8:                            ; preds = %dec_label_pc_10000d88, %dec_label_pc_10000dc0
  %stack_var_-28.0 = phi i32 [ %v3_10000dc4, %dec_label_pc_10000dc0 ], [ %v2_10000da4, %dec_label_pc_10000d88 ]
  %v1_10000ddc = inttoptr i32 %stack_var_-28.0 to i32*
  %v2_10000ddc = load i32, i32* %v1_10000ddc, align 4
  %v7_10000dfc = call i32 @printi(i32 %tmp41, i32 %v2_10000ddc, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000e08 = add i32 %v7_10000dfc, %stack_var_-56.132
  br label %dec_label_pc_10001110

dec_label_pc_10000e14:                            ; preds = %dec_label_pc_10000d60
  %v2_10000e18 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000e20 = icmp eq i8 %v2_10000e18, 120
  br i1 %v3_10000e20, label %dec_label_pc_10000e28, label %dec_label_pc_10000ec8

dec_label_pc_10000e28:                            ; preds = %dec_label_pc_10000e14
  %v2_10000e2c = load i8, i8* %tmp, align 1
  %tmp67 = icmp ugt i8 %v2_10000e2c, 7
  br i1 %tmp67, label %dec_label_pc_10000e74, label %dec_label_pc_10000e3c

dec_label_pc_10000e3c:                            ; preds = %dec_label_pc_10000e28
  %v3_10000e40 = load i32, i32* %v2_10000cb8, align 4
  %v2_10000e48 = load i8, i8* %tmp, align 1
  %v3_10000e48 = zext i8 %v2_10000e48 to i32
  %v1_10000e54 = mul nuw nsw i32 %v3_10000e48, 4
  %v2_10000e58 = add i32 %v1_10000e54, %v3_10000e40
  %v1_10000e60 = add i8 %v2_10000e48, 1
  store i8 %v1_10000e60, i8* %tmp, align 1
  br label %dec_label_pc_10000e8c

dec_label_pc_10000e74:                            ; preds = %dec_label_pc_10000e28
  %v3_10000e78 = load i32, i32* %v2_10000cf0, align 4
  %v1_10000e80 = add i32 %v3_10000e78, 4
  store i32 %v1_10000e80, i32* %v2_10000cf0, align 4
  br label %dec_label_pc_10000e8c

dec_label_pc_10000e8c:                            ; preds = %dec_label_pc_10000e3c, %dec_label_pc_10000e74
  %stack_var_-32.0 = phi i32 [ %v3_10000e78, %dec_label_pc_10000e74 ], [ %v2_10000e58, %dec_label_pc_10000e3c ]
  %v1_10000e90 = inttoptr i32 %stack_var_-32.0 to i32*
  %v2_10000e90 = load i32, i32* %v1_10000e90, align 4
  %v7_10000eb0 = call i32 @printi(i32 %tmp41, i32 %v2_10000e90, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000ebc = add i32 %v7_10000eb0, %stack_var_-56.132
  br label %dec_label_pc_10001110

dec_label_pc_10000ec8:                            ; preds = %dec_label_pc_10000e14
  %v2_10000ecc = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000ed4 = icmp eq i8 %v2_10000ecc, 88
  br i1 %v3_10000ed4, label %dec_label_pc_10000edc, label %dec_label_pc_10000f7c

dec_label_pc_10000edc:                            ; preds = %dec_label_pc_10000ec8
  %v2_10000ee0 = load i8, i8* %tmp, align 1
  %tmp68 = icmp ugt i8 %v2_10000ee0, 7
  br i1 %tmp68, label %dec_label_pc_10000f28, label %dec_label_pc_10000ef0

dec_label_pc_10000ef0:                            ; preds = %dec_label_pc_10000edc
  %v3_10000ef4 = load i32, i32* %v2_10000cb8, align 4
  %v2_10000efc = load i8, i8* %tmp, align 1
  %v3_10000efc = zext i8 %v2_10000efc to i32
  %v1_10000f08 = mul nuw nsw i32 %v3_10000efc, 4
  %v2_10000f0c = add i32 %v1_10000f08, %v3_10000ef4
  %v1_10000f14 = add i8 %v2_10000efc, 1
  store i8 %v1_10000f14, i8* %tmp, align 1
  br label %dec_label_pc_10000f40

dec_label_pc_10000f28:                            ; preds = %dec_label_pc_10000edc
  %v3_10000f2c = load i32, i32* %v2_10000cf0, align 4
  %v1_10000f34 = add i32 %v3_10000f2c, 4
  store i32 %v1_10000f34, i32* %v2_10000cf0, align 4
  br label %dec_label_pc_10000f40

dec_label_pc_10000f40:                            ; preds = %dec_label_pc_10000ef0, %dec_label_pc_10000f28
  %stack_var_-36.0 = phi i32 [ %v3_10000f2c, %dec_label_pc_10000f28 ], [ %v2_10000f0c, %dec_label_pc_10000ef0 ]
  %v1_10000f44 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_10000f44 = load i32, i32* %v1_10000f44, align 4
  %v7_10000f64 = call i32 @printi(i32 %tmp41, i32 %v2_10000f44, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 65)
  %v2_10000f70 = add i32 %v7_10000f64, %stack_var_-56.132
  br label %dec_label_pc_10001110

dec_label_pc_10000f7c:                            ; preds = %dec_label_pc_10000ec8
  %v2_10000f80 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000f88 = icmp eq i8 %v2_10000f80, 117
  br i1 %v3_10000f88, label %dec_label_pc_10000f90, label %dec_label_pc_10001030

dec_label_pc_10000f90:                            ; preds = %dec_label_pc_10000f7c
  %v2_10000f94 = load i8, i8* %tmp, align 1
  %tmp69 = icmp ugt i8 %v2_10000f94, 7
  br i1 %tmp69, label %dec_label_pc_10000fdc, label %dec_label_pc_10000fa4

dec_label_pc_10000fa4:                            ; preds = %dec_label_pc_10000f90
  %v3_10000fa8 = load i32, i32* %v2_10000cb8, align 4
  %v2_10000fb0 = load i8, i8* %tmp, align 1
  %v3_10000fb0 = zext i8 %v2_10000fb0 to i32
  %v1_10000fbc = mul nuw nsw i32 %v3_10000fb0, 4
  %v2_10000fc0 = add i32 %v1_10000fbc, %v3_10000fa8
  %v1_10000fc8 = add i8 %v2_10000fb0, 1
  store i8 %v1_10000fc8, i8* %tmp, align 1
  br label %dec_label_pc_10000ff4

dec_label_pc_10000fdc:                            ; preds = %dec_label_pc_10000f90
  %v3_10000fe0 = load i32, i32* %v2_10000cf0, align 4
  %v1_10000fe8 = add i32 %v3_10000fe0, 4
  store i32 %v1_10000fe8, i32* %v2_10000cf0, align 4
  br label %dec_label_pc_10000ff4

dec_label_pc_10000ff4:                            ; preds = %dec_label_pc_10000fa4, %dec_label_pc_10000fdc
  %stack_var_-40.0 = phi i32 [ %v3_10000fe0, %dec_label_pc_10000fdc ], [ %v2_10000fc0, %dec_label_pc_10000fa4 ]
  %v1_10000ff8 = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_10000ff8 = load i32, i32* %v1_10000ff8, align 4
  %v7_10001018 = call i32 @printi(i32 %tmp41, i32 %v2_10000ff8, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10001024 = add i32 %v7_10001018, %stack_var_-56.132
  br label %dec_label_pc_10001110

dec_label_pc_10001030:                            ; preds = %dec_label_pc_10000f7c
  %v2_10001034 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_1000103c = icmp eq i8 %v2_10001034, 99
  br i1 %v3_1000103c, label %dec_label_pc_10001044, label %dec_label_pc_10001110

dec_label_pc_10001044:                            ; preds = %dec_label_pc_10001030
  %v2_10001048 = load i8, i8* %tmp, align 1
  %tmp70 = icmp ugt i8 %v2_10001048, 7
  br i1 %tmp70, label %dec_label_pc_10001090, label %dec_label_pc_10001058

dec_label_pc_10001058:                            ; preds = %dec_label_pc_10001044
  %v3_1000105c = load i32, i32* %v2_10000cb8, align 4
  %v2_10001064 = load i8, i8* %tmp, align 1
  %v3_10001064 = zext i8 %v2_10001064 to i32
  %v1_10001070 = mul nuw nsw i32 %v3_10001064, 4
  %v2_10001074 = add i32 %v1_10001070, %v3_1000105c
  %v1_1000107c = add i8 %v2_10001064, 1
  store i8 %v1_1000107c, i8* %tmp, align 1
  br label %dec_label_pc_100010a8

dec_label_pc_10001090:                            ; preds = %dec_label_pc_10001044
  %v3_10001094 = load i32, i32* %v2_10000cf0, align 4
  %v1_1000109c = add i32 %v3_10001094, 4
  store i32 %v1_1000109c, i32* %v2_10000cf0, align 4
  br label %dec_label_pc_100010a8

dec_label_pc_100010a8:                            ; preds = %dec_label_pc_10001058, %dec_label_pc_10001090
  %stack_var_-44.0 = phi i32 [ %v3_10001094, %dec_label_pc_10001090 ], [ %v2_10001074, %dec_label_pc_10001058 ]
  %v1_100010ac = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_100010ac = load i32, i32* %v1_100010ac, align 4
  %v1_100010b0 = urem i32 %v2_100010ac, 256
  store i32 %v1_100010b0, i32* %stack_var_-88, align 4
  %v5_100010d4 = call i32 @prints(i32 %tmp41, i8* %v4_100010d4, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_100010e0 = add i32 %v5_100010d4, %stack_var_-56.132
  br label %dec_label_pc_10001110

dec_label_pc_100010ec:                            ; preds = %dec_label_pc_10000b7c, %dec_label_pc_10000bc0
  %stack_var_-68.2 = phi i8* [ %v5_10000b98, %dec_label_pc_10000bc0 ], [ %stack_var_-68.434, %dec_label_pc_10000b7c ]
  %v2_100010f0 = load i8, i8* %stack_var_-68.2, align 1
  %v3_100010f0 = zext i8 %v2_100010f0 to i32
  %v3_10001100 = call i32 @printchar(i32* %arg1, i32 %v3_100010f0)
  %v1_10001108 = add i32 %stack_var_-56.132, 1
  br label %dec_label_pc_10001110

dec_label_pc_10001110:                            ; preds = %dec_label_pc_10001030, %dec_label_pc_100010a8, %dec_label_pc_10000ff4, %dec_label_pc_10000f40, %dec_label_pc_10000e8c, %dec_label_pc_10000dd8, %dec_label_pc_10000d34, %dec_label_pc_100010ec
  %stack_var_-56.0 = phi i32 [ %v1_10001108, %dec_label_pc_100010ec ], [ %v2_10000d54, %dec_label_pc_10000d34 ], [ %v2_10000e08, %dec_label_pc_10000dd8 ], [ %v2_10000ebc, %dec_label_pc_10000e8c ], [ %v2_10000f70, %dec_label_pc_10000f40 ], [ %v2_10001024, %dec_label_pc_10000ff4 ], [ %v2_100010e0, %dec_label_pc_100010a8 ], [ %stack_var_-56.132, %dec_label_pc_10001030 ]
  %stack_var_-68.3 = phi i8* [ %stack_var_-68.2, %dec_label_pc_100010ec ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000d34 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000dd8 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000e8c ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000f40 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000ff4 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_100010a8 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10001030 ]
  %v4_10001110 = ptrtoint i8* %stack_var_-68.3 to i32
  %v1_10001114 = add i32 %v4_10001110, 1
  %stack_var_-68.4 = inttoptr i32 %v1_10001114 to i8*
  %v2_10001120 = load i8, i8* %stack_var_-68.4, align 1
  %v3_10001128 = icmp eq i8 %v2_10001120, 0
  br i1 %v3_10001128, label %dec_label_pc_10001130, label %dec_label_pc_10000b7c

dec_label_pc_10001130:                            ; preds = %dec_label_pc_10000b90, %dec_label_pc_10001110, %entry
  %stack_var_-56.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-56.132, %dec_label_pc_10000b90 ], [ %stack_var_-56.0, %dec_label_pc_10001110 ]
  %v3_10001134 = icmp eq i32* %arg1, null
  br i1 %v3_10001134, label %dec_label_pc_1000114c, label %dec_label_pc_1000113c

dec_label_pc_1000113c:                            ; preds = %dec_label_pc_10001130
  %v2_10001140 = load i32, i32* %arg1, align 4
  %v3_10001148 = inttoptr i32 %v2_10001140 to i8*
  store i8 0, i8* %v3_10001148, align 1
  br label %dec_label_pc_1000114c

dec_label_pc_1000114c:                            ; preds = %dec_label_pc_10001130, %dec_label_pc_1000113c
  ret i32 %stack_var_-56.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-68.4, { 1, 0 }
  uselistorder i8* %stack_var_-68.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-68.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10000c04, { 1, 0 }
  uselistorder i32 %stack_var_-52.0.ph, { 1, 0 }
  uselistorder i8* %v5_10000b98, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-56.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-68.4.in33, { 1, 0 }
  uselistorder i32* %v2_10000cf0, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder i8 1, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder label %dec_label_pc_1000114c, { 1, 0 }
  uselistorder label %dec_label_pc_10001130, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001110, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_100010ec, { 1, 0 }
  uselistorder label %dec_label_pc_100010a8, { 1, 0 }
  uselistorder label %dec_label_pc_10000ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10000f40, { 1, 0 }
  uselistorder label %dec_label_pc_10000e8c, { 1, 0 }
  uselistorder label %dec_label_pc_10000dd8, { 1, 0 }
  uselistorder label %dec_label_pc_10000d34, { 1, 0 }
  uselistorder label %dec_label_pc_10000d04, { 1, 0 }
  uselistorder label %dec_label_pc_10000c8c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000c78, { 1, 0 }
  uselistorder label %dec_label_pc_10000c00, { 1, 0 }
  uselistorder label %dec_label_pc_10000b7c, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-120, align 4
  store i32 2, i32* %stack_var_-136, align 4
  %v2_100011f0 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268440060, i32* @lr, align 4
  %v4_100011f8 = call i32 @print(i32* nonnull %stack_var_-120, i32 %arg2, i32 %v2_100011f0)
  ret i32 %v4_100011f8

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_10001240 = call i32 @__GI_strlen()
  br label %dec_label_pc_10001264

dec_label_pc_10001258:                            ; preds = %dec_label_pc_10001264
  %v1_1000125c = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_10001264

dec_label_pc_10001264:                            ; preds = %entry, %dec_label_pc_10001258
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_1000125c, %dec_label_pc_10001258 ]
  %v2_10001270 = add i32 %stack_var_-36.0, %arg1
  %v1_10001274 = inttoptr i32 %v2_10001270 to i8*
  %v2_10001274 = load i8, i8* %v1_10001274, align 1
  %v3_10001274 = zext i8 %v2_10001274 to i32
  %v1_1000127c = mul nuw nsw i32 %v3_10001274, 2
  %v3_10001288 = load i32, i32* inttoptr (i32 268551004 to i32*), align 4
  %v2_1000128c = add i32 %v3_10001288, %v1_1000127c
  %v1_10001290 = inttoptr i32 %v2_1000128c to i16*
  %v2_10001290 = load i16, i16* %v1_10001290, align 2
  %v3_10001290 = zext i16 %v2_10001290 to i32
  %v1_10001298 = call i32 @__asm_rlwinm(i32 %v3_10001290, i32 0, i32 26, i32 26)
  %v3_1000129c = icmp eq i32 %v1_10001298, 0
  br i1 %v3_1000129c, label %dec_label_pc_100012b4.preheader, label %dec_label_pc_10001258

dec_label_pc_100012b4.preheader:                  ; preds = %dec_label_pc_10001264
  %v1_1000124c = add i32 %v0_10001240, -1
  %v2_100012bc7 = icmp slt i32 %v1_1000124c, %stack_var_-36.0
  br i1 %v2_100012bc7, label %dec_label_pc_10001350.preheader, label %dec_label_pc_100012c4

dec_label_pc_100012a8:                            ; preds = %dec_label_pc_100012c4
  %v1_100012ac = add i32 %stack_var_-40.010, -1
  %v2_100012bc = icmp slt i32 %v1_100012ac, %stack_var_-36.0
  br i1 %v2_100012bc, label %dec_label_pc_10001350.preheader, label %dec_label_pc_100012c4

dec_label_pc_100012c4:                            ; preds = %dec_label_pc_100012b4.preheader, %dec_label_pc_100012a8
  %stack_var_-40.010 = phi i32 [ %v1_100012ac, %dec_label_pc_100012a8 ], [ %v1_1000124c, %dec_label_pc_100012b4.preheader ]
  %v2_100012d0 = add i32 %stack_var_-40.010, %arg1
  %v1_100012d4 = inttoptr i32 %v2_100012d0 to i8*
  %v2_100012d4 = load i8, i8* %v1_100012d4, align 1
  %v3_100012d4 = zext i8 %v2_100012d4 to i32
  %v1_100012dc = mul nuw nsw i32 %v3_100012d4, 2
  %v3_100012e8 = load i32, i32* @global_var_1001c35c, align 4
  %v2_100012ec = add i32 %v3_100012e8, %v1_100012dc
  %v1_100012f0 = inttoptr i32 %v2_100012ec to i16*
  %v2_100012f0 = load i16, i16* %v1_100012f0, align 2
  %v3_100012f0 = zext i16 %v2_100012f0 to i32
  %v1_100012f8 = call i32 @__asm_rlwinm(i32 %v3_100012f0, i32 0, i32 26, i32 26)
  %v3_100012fc = icmp eq i32 %v1_100012f8, 0
  br i1 %v3_100012fc, label %dec_label_pc_10001350.preheader, label %dec_label_pc_100012a8

dec_label_pc_10001350.preheader:                  ; preds = %dec_label_pc_100012a8, %dec_label_pc_100012c4, %dec_label_pc_100012b4.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %v1_1000124c, %dec_label_pc_100012b4.preheader ], [ %v1_100012ac, %dec_label_pc_100012a8 ], [ %stack_var_-40.010, %dec_label_pc_100012c4 ]
  %v3_100013583 = icmp sgt i32 %stack_var_-36.0, %stack_var_-40.0.lcssa
  br i1 %v3_100013583, label %dec_label_pc_10001360, label %dec_label_pc_10001310

dec_label_pc_10001310:                            ; preds = %dec_label_pc_10001350.preheader, %dec_label_pc_10001310
  %v2_100013746 = phi i32 [ %v2_10001374, %dec_label_pc_10001310 ], [ %arg1, %dec_label_pc_10001350.preheader ]
  %storemerge15 = phi i32 [ %v1_10001348, %dec_label_pc_10001310 ], [ %stack_var_-36.0, %dec_label_pc_10001350.preheader ]
  %v2_10001334 = add i32 %storemerge15, %arg1
  %v1_10001338 = inttoptr i32 %v2_10001334 to i8*
  %v2_10001338 = load i8, i8* %v1_10001338, align 1
  %v3_10001340 = inttoptr i32 %v2_100013746 to i8*
  store i8 %v2_10001338, i8* %v3_10001340, align 1
  %v1_10001348 = add i32 %storemerge15, 1
  %v3_10001358 = icmp sgt i32 %v1_10001348, %stack_var_-40.0.lcssa
  %v2_10001368 = sub i32 %v1_10001348, %stack_var_-36.0
  %v2_10001374 = add i32 %v2_10001368, %arg1
  br i1 %v3_10001358, label %dec_label_pc_10001360, label %dec_label_pc_10001310

dec_label_pc_10001360:                            ; preds = %dec_label_pc_10001310, %dec_label_pc_10001350.preheader
  %v2_10001374.lcssa = phi i32 [ %arg1, %dec_label_pc_10001350.preheader ], [ %v2_10001374, %dec_label_pc_10001310 ]
  %v3_1000137c = inttoptr i32 %v2_10001374.lcssa to i8*
  store i8 0, i8* %v3_1000137c, align 1
  ret i32 %v0_10001240

; uselistorder directives
  uselistorder i32 %v1_10001348, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000124c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-36.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %arg1, { 5, 1, 2, 0, 3, 4, 6 }
  uselistorder label %dec_label_pc_10001310, { 1, 0 }
  uselistorder label %dec_label_pc_10001350.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100012c4, { 1, 0 }
  uselistorder label %dec_label_pc_10001264, { 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268440512, i32* @lr, align 4
  %v1_100013bc = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_100013bc, i32* %arg2, align 4
  %v4_100013d8 = icmp eq i32 %v1_100013bc, -1
  %. = zext i1 %v4_100013d8 to i32
  ret i32 %.
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i8, align 1
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1000144c.23 to i32), i32* @lr, align 4
  %v4_10001448 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-40, align 4
  %v2_1000145c = ptrtoint i32* %stack_var_-168 to i32
  br label %dec_label_pc_10001470

dec_label_pc_10001470:                            ; preds = %entry, %dec_label_pc_10001470
  %storemerge719 = phi i32 [ 0, %entry ], [ %v1_1000148c, %dec_label_pc_10001470 ]
  %v1_10001478 = mul nuw nsw i32 %storemerge719, 4
  %v2_1000147c = add i32 %v1_10001478, %v2_1000145c
  %v2_10001484 = inttoptr i32 %v2_1000147c to i32*
  store i32 0, i32* %v2_10001484, align 4
  %v1_1000148c = add nuw nsw i32 %storemerge719, 1
  %tmp43 = icmp ult i32 %v1_1000148c, 32
  br i1 %tmp43, label %dec_label_pc_10001470, label %dec_label_pc_100014a0

dec_label_pc_100014a0:                            ; preds = %dec_label_pc_10001470
  %v1_100014a4 = udiv i32 %arg1, 32
  %v1_100014ac = mul nuw nsw i32 %v1_100014a4, 4
  %v2_100014b0 = ptrtoint i32* %stack_var_-200 to i32
  %v2_100014b4 = add nuw nsw i32 %v1_100014ac, 32
  %v1_100014b8 = add i32 %v2_100014b4, %v2_100014b0
  %v1_100014bc = inttoptr i32 %v1_100014b8 to i32*
  %v2_100014bc = load i32, i32* %v1_100014bc, align 4
  %v1_100014c4 = urem i32 %arg1, 32
  %v3_100014cc = shl i32 1, %v1_100014c4
  %v2_100014d0 = or i32 %v2_100014bc, %v3_100014cc
  store i32 %v2_100014d0, i32* %v1_100014bc, align 4
  %v1_100014ec = add i32 %arg1, 1
  %v2_100014f8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268440852, i32* @lr, align 4
  %v6_10001510 = call i32 @__libc_select(i32 %v1_100014ec, i32 %v2_1000145c, i32 0, i32 %v2_1000145c, i32 %v2_100014f8, i32 %v2_1000145c)
  %v2_10001520 = icmp sgt i32 %v6_10001510, 0
  br i1 %v2_10001520, label %dec_label_pc_100016b0.preheader, label %dec_label_pc_10001614.preheader

dec_label_pc_10001614.preheader:                  ; preds = %dec_label_pc_100014a0
  %tmp44 = icmp slt i32 %tmp26, 10
  br i1 %tmp44, label %dec_label_pc_1000152c, label %dec_label_pc_100016b0.preheader

dec_label_pc_1000152c:                            ; preds = %dec_label_pc_10001614.preheader, %dec_label_pc_10001608
  %stack_var_-176.018 = phi i32 [ %v1_1000160c, %dec_label_pc_10001608 ], [ %tmp26, %dec_label_pc_10001614.preheader ]
  store i32 30, i32* %stack_var_-40, align 4
  store i32 %v2_1000145c, i32* %stack_var_-200, align 4
  store i32 0, i32* %stack_var_-168, align 4
  br label %dec_label_pc_10001550.dec_label_pc_10001550_crit_edge

dec_label_pc_10001550.dec_label_pc_10001550_crit_edge: ; preds = %dec_label_pc_10001550.dec_label_pc_10001550_crit_edge.dec_label_pc_10001550.dec_label_pc_10001550_crit_edge_crit_edge, %dec_label_pc_1000152c
  %v3_10001554.pre = phi i32 [ %v2_1000145c, %dec_label_pc_1000152c ], [ %v3_10001554.pre.pre, %dec_label_pc_10001550.dec_label_pc_10001550_crit_edge.dec_label_pc_10001550.dec_label_pc_10001550_crit_edge_crit_edge ]
  %v1_1000156c50 = phi i32 [ 1, %dec_label_pc_1000152c ], [ %v1_1000156c, %dec_label_pc_10001550.dec_label_pc_10001550_crit_edge.dec_label_pc_10001550.dec_label_pc_10001550_crit_edge_crit_edge ]
  %v1_10001558 = mul nuw nsw i32 %v1_1000156c50, 4
  %v2_1000155c = add i32 %v1_10001558, %v3_10001554.pre
  %v2_10001564 = inttoptr i32 %v2_1000155c to i32*
  store i32 0, i32* %v2_10001564, align 4
  %v1_1000156c = add nuw nsw i32 %v1_1000156c50, 1
  %tmp45 = icmp ult i32 %v1_1000156c, 32
  br i1 %tmp45, label %dec_label_pc_10001550.dec_label_pc_10001550_crit_edge.dec_label_pc_10001550.dec_label_pc_10001550_crit_edge_crit_edge, label %dec_label_pc_10001580

dec_label_pc_10001550.dec_label_pc_10001550_crit_edge.dec_label_pc_10001550.dec_label_pc_10001550_crit_edge_crit_edge: ; preds = %dec_label_pc_10001550.dec_label_pc_10001550_crit_edge
  %v3_10001554.pre.pre = load i32, i32* %stack_var_-200, align 4
  br label %dec_label_pc_10001550.dec_label_pc_10001550_crit_edge

dec_label_pc_10001580:                            ; preds = %dec_label_pc_10001550.dec_label_pc_10001550_crit_edge
  %v2_1000159c = load i32, i32* %v1_100014bc, align 4
  %v2_100015b0 = or i32 %v2_1000159c, %v3_100014cc
  store i32 %v2_100015b0, i32* %v1_100014bc, align 4
  store i32 268441076, i32* @lr, align 4
  %v6_100015f0 = call i32 @__libc_select(i32 %v1_100014ec, i32 %v2_1000145c, i32 0, i32 %v2_1000145c, i32 %v2_100014f8, i32 %v2_1000145c)
  %v2_10001600 = icmp sgt i32 %v6_100015f0, 0
  br i1 %v2_10001600, label %dec_label_pc_100016b0.preheader, label %dec_label_pc_10001608

dec_label_pc_10001608:                            ; preds = %dec_label_pc_10001580
  %v1_1000160c = add nsw i32 %stack_var_-176.018, 1
  %tmp46 = icmp slt i32 %v1_1000160c, 10
  br i1 %tmp46, label %dec_label_pc_1000152c, label %dec_label_pc_100016b0.preheader

dec_label_pc_100016b0.preheader:                  ; preds = %dec_label_pc_10001608, %dec_label_pc_10001580, %dec_label_pc_10001614.preheader, %dec_label_pc_100014a0
  %v2_1000163c = ptrtoint i8* %stack_var_-32 to i32
  br label %dec_label_pc_100016b0

dec_label_pc_10001634:                            ; preds = %dec_label_pc_100016b0
  %v3_10001638 = load i32, i32* @global_var_1001c3a0.24, align 4
  store i32 268441172, i32* @lr, align 4
  %v4_10001650 = call i32 @__libc_recv(i32 %v3_10001638, i32 %v2_1000163c, i32 1, i32 0)
  %v3_10001658 = icmp eq i32 %v4_10001650, 1
  br i1 %v3_10001658, label %dec_label_pc_10001678, label %dec_label_pc_10001660

dec_label_pc_10001660:                            ; preds = %dec_label_pc_10001634
  store i8 0, i8* %stack_var_-180.0, align 1
  br label %dec_label_pc_100016ec

dec_label_pc_10001678:                            ; preds = %dec_label_pc_10001634
  %v3_10001678 = load i8, i8* %stack_var_-32, align 1
  %v4_10001680 = ptrtoint i8* %stack_var_-180.0 to i32
  store i8 %v3_10001678, i8* %stack_var_-180.0, align 1
  %v1_1000168c = add i32 %v4_10001680, 1
  %v5_10001690 = inttoptr i32 %v1_1000168c to i8*
  %v3_10001694 = load i8, i8* %stack_var_-32, align 1
  %v3_1000169c = icmp eq i8 %v3_10001694, 10
  br i1 %v3_1000169c, label %dec_label_pc_100016d8, label %dec_label_pc_100016a4

dec_label_pc_100016a4:                            ; preds = %dec_label_pc_10001678
  %v1_100016a8 = add i32 %stack_var_-184.0, 1
  br label %dec_label_pc_100016b0

dec_label_pc_100016b0:                            ; preds = %dec_label_pc_100016b0.preheader, %dec_label_pc_100016a4
  %stack_var_-180.0 = phi i8* [ %v5_10001690, %dec_label_pc_100016a4 ], [ %arg2, %dec_label_pc_100016b0.preheader ]
  %stack_var_-184.0 = phi i32 [ %v1_100016a8, %dec_label_pc_100016a4 ], [ 0, %dec_label_pc_100016b0.preheader ]
  %v0_100016b8 = call i32 @__asm_mfcr()
  %v1_100016bc = call i32 @__asm_rlwinm(i32 %v0_100016b8, i32 30, i32 31, i32 31)
  %v1_100016c0 = urem i32 %v1_100016bc, 256
  %v3_100016d0 = icmp eq i32 %v1_100016c0, 0
  br i1 %v3_100016d0, label %dec_label_pc_100016d8, label %dec_label_pc_10001634

dec_label_pc_100016d8:                            ; preds = %dec_label_pc_100016b0, %dec_label_pc_10001678
  %stack_var_-180.1 = phi i8* [ %stack_var_-180.0, %dec_label_pc_100016b0 ], [ %v5_10001690, %dec_label_pc_10001678 ]
  store i8 0, i8* %stack_var_-180.1, align 1
  br label %dec_label_pc_100016ec

dec_label_pc_100016ec:                            ; preds = %dec_label_pc_10001660, %dec_label_pc_100016d8
  %storemerge = phi i32 [ -1, %dec_label_pc_10001660 ], [ %stack_var_-184.0, %dec_label_pc_100016d8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-180.0, { 3, 0, 1, 2 }
  uselistorder i8* %v5_10001690, { 1, 0 }
  uselistorder i32 %v1_1000160c, { 1, 0 }
  uselistorder i32 %v1_1000156c, { 1, 0 }
  uselistorder i32 %v2_100014f8, { 1, 0 }
  uselistorder i32* %v1_100014bc, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge719, { 1, 0 }
  uselistorder i32 %v2_1000145c, { 7, 6, 5, 0, 8, 4, 2, 3, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i8* %stack_var_-32, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100016ec, { 1, 0 }
  uselistorder label %dec_label_pc_100016b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000152c, { 1, 0 }
  uselistorder label %dec_label_pc_10001470, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  store i32 268441412, i32* @lr, align 4
  %v2_10001740 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  store i32 ptrtoint (i32* @global_var_1000176c.25 to i32), i32* @lr, align 4
  %v2_10001768 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-200, align 4
  %v1_10001778 = urem i32 %arg3, 65536
  store i32 %v1_10001778, i32* @r3, align 4
  %v1_10001780 = call i32 @htons(i32 %v1_10001778)
  %v2_10001790 = ptrtoint i32* %stack_var_-200 to i32
  %v4_100017a0 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-196, i32 %v2_10001790)
  %v3_100017a8 = icmp eq i32 %v4_100017a0, 0
  br i1 %v3_100017a8, label %dec_label_pc_100017bc, label %dec_label_pc_100017b0

dec_label_pc_100017b0:                            ; preds = %entry
  br label %dec_label_pc_1000197c

dec_label_pc_100017bc:                            ; preds = %entry
  store i32 268441576, i32* @lr, align 4
  %v3_100017e4 = call i32 @__libc_connect(i32 %arg1, i32 %v2_10001790, i32 16)
  %tmp26 = icmp sgt i32 %v3_100017e4, -1
  br i1 %tmp26, label %dec_label_pc_10001938, label %dec_label_pc_100017fc

dec_label_pc_100017fc:                            ; preds = %dec_label_pc_100017bc
  %v0_100017fc = call i32 @__errno_location()
  %v1_10001804 = inttoptr i32 %v0_100017fc to i32*
  %v2_10001804 = load i32, i32* %v1_10001804, align 4
  %v3_10001808 = icmp eq i32 %v2_10001804, 115
  br i1 %v3_10001808, label %dec_label_pc_10001810, label %dec_label_pc_1000192c

dec_label_pc_10001810:                            ; preds = %dec_label_pc_100017fc
  store i32 %arg4, i32* %stack_var_-56, align 4
  %v2_10001820 = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_10001820, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-184, align 4
  br label %dec_label_pc_10001834.dec_label_pc_10001834_crit_edge

dec_label_pc_10001834.dec_label_pc_10001834_crit_edge: ; preds = %dec_label_pc_10001834.dec_label_pc_10001834_crit_edge.dec_label_pc_10001834.dec_label_pc_10001834_crit_edge_crit_edge, %dec_label_pc_10001810
  %v3_10001838.pre = phi i32 [ %v2_10001820, %dec_label_pc_10001810 ], [ %v3_10001838.pre.pre, %dec_label_pc_10001834.dec_label_pc_10001834_crit_edge.dec_label_pc_10001834.dec_label_pc_10001834_crit_edge_crit_edge ]
  %v1_1000185030 = phi i32 [ 1, %dec_label_pc_10001810 ], [ %v1_10001850, %dec_label_pc_10001834.dec_label_pc_10001834_crit_edge.dec_label_pc_10001834.dec_label_pc_10001834_crit_edge_crit_edge ]
  %v1_1000183c = mul nuw nsw i32 %v1_1000185030, 4
  %v2_10001840 = add i32 %v1_1000183c, %v3_10001838.pre
  %v2_10001848 = inttoptr i32 %v2_10001840 to i32*
  store i32 0, i32* %v2_10001848, align 4
  %v1_10001850 = add nuw nsw i32 %v1_1000185030, 1
  %tmp27 = icmp ult i32 %v1_10001850, 32
  br i1 %tmp27, label %dec_label_pc_10001834.dec_label_pc_10001834_crit_edge.dec_label_pc_10001834.dec_label_pc_10001834_crit_edge_crit_edge, label %dec_label_pc_10001864

dec_label_pc_10001834.dec_label_pc_10001834_crit_edge.dec_label_pc_10001834.dec_label_pc_10001834_crit_edge_crit_edge: ; preds = %dec_label_pc_10001834.dec_label_pc_10001834_crit_edge
  %v3_10001838.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10001834.dec_label_pc_10001834_crit_edge

dec_label_pc_10001864:                            ; preds = %dec_label_pc_10001834.dec_label_pc_10001834_crit_edge
  %v1_10001868 = udiv i32 %arg1, 32
  %v1_10001870 = mul nuw nsw i32 %v1_10001868, 4
  %v2_10001874 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10001878 = add nuw nsw i32 %v1_10001870, 32
  %v1_1000187c = add i32 %v2_10001878, %v2_10001874
  %v1_10001880 = inttoptr i32 %v1_1000187c to i32*
  %v2_10001880 = load i32, i32* %v1_10001880, align 4
  %v1_10001888 = urem i32 %arg1, 32
  %v3_10001890 = shl i32 1, %v1_10001888
  %v2_10001894 = or i32 %v2_10001880, %v3_10001890
  store i32 %v2_10001894, i32* %v1_10001880, align 4
  %v1_100018b0 = add i32 %arg1, 1
  %v2_100018b8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268441812, i32* @lr, align 4
  %v6_100018d0 = call i32 @__libc_select(i32 %v1_100018b0, i32 0, i32 %v2_10001820, i32 0, i32 %v2_100018b8, i32 %v2_10001820)
  %tmp28 = icmp slt i32 %v6_100018d0, 1
  br i1 %tmp28, label %dec_label_pc_10001920, label %dec_label_pc_100018e0

dec_label_pc_100018e0:                            ; preds = %dec_label_pc_10001864
  store i32 4, i32* %stack_var_-48, align 4
  %v2_100018e8 = ptrtoint i32* %stack_var_-44 to i32
  %v2_100018ec = ptrtoint i32* %stack_var_-48 to i32
  store i32 268441864, i32* @lr, align 4
  %v6_10001904 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_100018e8, i32 %v2_100018ec, i32 %v2_100018ec)
  %v3_10001908 = load i32, i32* %stack_var_-44, align 4
  %v3_1000190c = icmp eq i32 %v3_10001908, 0
  br i1 %v3_1000190c, label %dec_label_pc_10001938, label %dec_label_pc_10001914

dec_label_pc_10001914:                            ; preds = %dec_label_pc_100018e0
  br label %dec_label_pc_1000197c

dec_label_pc_10001920:                            ; preds = %dec_label_pc_10001864
  br label %dec_label_pc_1000197c

dec_label_pc_1000192c:                            ; preds = %dec_label_pc_100017fc
  br label %dec_label_pc_1000197c

dec_label_pc_10001938:                            ; preds = %dec_label_pc_100018e0, %dec_label_pc_100017bc
  store i32 268441932, i32* @lr, align 4
  %v2_10001948 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_10001958 = call i32 @__asm_rlwinm(i32 %v2_10001948, i32 0, i32 21, i32 19)
  store i32 ptrtoint (i32* @global_var_10001974.26 to i32), i32* @lr, align 4
  %v2_10001970 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_1000197c

dec_label_pc_1000197c:                            ; preds = %dec_label_pc_1000192c, %dec_label_pc_10001920, %dec_label_pc_10001914, %dec_label_pc_100017b0, %dec_label_pc_10001938
  %stack_var_-24.0 = phi i32 [ 1, %dec_label_pc_10001938 ], [ 0, %dec_label_pc_10001920 ], [ 0, %dec_label_pc_10001914 ], [ 0, %dec_label_pc_1000192c ], [ 0, %dec_label_pc_100017b0 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v2_100018ec, { 1, 0 }
  uselistorder i32 %v1_10001850, { 1, 0 }
  uselistorder i32 %v2_10001820, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10001790, { 1, 0 }
  uselistorder i32 %v1_10001778, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_select, { 2, 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 2, 3, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000197c, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  store i32 268442036, i32* @lr, align 4
  %v0_100019b0 = call i32 @__libc_fork()
  %v3_100019c0 = icmp eq i32 %v0_100019b0, 0
  br i1 %v3_100019c0, label %dec_label_pc_10001b44, label %dec_label_pc_100019d4

dec_label_pc_100019d4:                            ; preds = %entry
  %v3_100019dc = load i32, i32* @global_var_1001c39c.28, align 4
  %v2_100019e0 = load i32, i32* @global_var_1001c398.27, align 4
  %v1_100019e4 = add i32 %v3_100019dc, 1
  %v2_100019e4 = icmp eq i32 %v3_100019dc, -1
  %v2_100019e8 = zext i1 %v2_100019e4 to i32
  %v3_100019e8 = add i32 %v2_100019e8, %v2_100019e0
  store i32 %v3_100019e8, i32* @global_var_1001c398.27, align 4
  store i32 %v1_100019e4, i32* @global_var_1001c39c.28, align 4
  %v1_10001a18 = mul i32 %v1_100019e4, 4
  %v1_10001a20 = add i32 %v1_10001a18, 4
  store i32 268442156, i32* @lr, align 4
  %v1_10001a28 = call i32 @malloc(i32 %v1_10001a20)
  br label %dec_label_pc_10001a80

dec_label_pc_10001a40:                            ; preds = %dec_label_pc_10001a80, %dec_label_pc_10001ad0
  %v1_10001a44 = mul i32 %storemerge2, 4
  %v2_10001a50 = add i32 %v1_10001a44, %v1_10001a28
  %v3_10001a64 = load i32, i32* @global_var_1001c3bc.29, align 4
  %v2_10001a68 = add i32 %v3_10001a64, %v1_10001a44
  %v1_10001a6c = inttoptr i32 %v2_10001a68 to i32*
  %v2_10001a6c = load i32, i32* %v1_10001a6c, align 4
  %v2_10001a70 = inttoptr i32 %v2_10001a50 to i32*
  store i32 %v2_10001a6c, i32* %v2_10001a70, align 4
  %v1_10001a78 = add i32 %storemerge2, 1
  br label %dec_label_pc_10001a80

dec_label_pc_10001a80:                            ; preds = %dec_label_pc_100019d4, %dec_label_pc_10001a40
  %storemerge2 = phi i32 [ 0, %dec_label_pc_100019d4 ], [ %v1_10001a78, %dec_label_pc_10001a40 ]
  %v3_10001aa8 = load i32, i32* @global_var_1001c39c.28, align 4
  %v2_10001aac = load i32, i32* @global_var_1001c398.27, align 4
  %v2_10001ab0 = icmp ne i32 %v3_10001aa8, 0
  %v3_10001ab4 = add i32 %v2_10001aac, -1
  %v4_10001ab4 = sext i1 %v2_10001ab0 to i32
  %v3_10001ac8 = icmp eq i32 %v3_10001ab4, %v4_10001ab4
  br i1 %v3_10001ac8, label %dec_label_pc_10001ad0, label %dec_label_pc_10001a40

dec_label_pc_10001ad0:                            ; preds = %dec_label_pc_10001a80
  %v1_10001ab0 = add i32 %v3_10001aa8, -1
  %v3_10001ae8 = icmp ugt i32 %v1_10001ab0, %storemerge2
  br i1 %v3_10001ae8, label %dec_label_pc_10001a40, label %dec_label_pc_10001af0

dec_label_pc_10001af0:                            ; preds = %dec_label_pc_10001ad0
  %v1_10001b04 = mul i32 %v3_10001aa8, 4
  %v2_10001b10 = add i32 %v1_10001a28, -4
  %v1_10001b14 = add i32 %v2_10001b10, %v1_10001b04
  %v2_10001b1c = inttoptr i32 %v1_10001b14 to i32*
  store i32 %v0_100019b0, i32* %v2_10001b1c, align 4
  %v3_10001b24 = load i32, i32* @global_var_1001c3bc.29, align 4
  store i32 268442416, i32* @lr, align 4
  %v1_10001b2c = call i32 @free(i32 %v3_10001b24)
  store i32 %v1_10001a28, i32* @global_var_1001c3bc.29, align 4
  br label %dec_label_pc_10001b44

dec_label_pc_10001b44:                            ; preds = %entry, %dec_label_pc_10001af0
  ret i32 %v0_100019b0

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_10001a44, { 1, 0 }
  uselistorder i32 %v1_10001a28, { 1, 2, 0 }
  uselistorder i32 %v3_100019dc, { 1, 0 }
  uselistorder label %dec_label_pc_10001b44, { 1, 0 }
  uselistorder label %dec_label_pc_10001a80, { 1, 0 }
  uselistorder label %dec_label_pc_10001a40, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %v2_10001b8c = icmp sgt i32 %arg4, 4096
  br i1 %v2_10001b8c, label %dec_label_pc_10001d28, label %dec_label_pc_10001b94

dec_label_pc_10001b94:                            ; preds = %entry
  store i32 268442532, i32* @lr, align 4
  %v3_10001ba0 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268442548, i32* @lr, align 4
  %v1_10001bb0 = call i32 @__GI_time(i32 0)
  store i32 268442568, i32* @lr, align 4
  %v1_10001bc4 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_10001bd0 = ptrtoint i32* %stack_var_-80 to i32
  store i32 0, i32* %stack_var_-80, align 4
  store i32 0, i32* %stack_var_-76, align 4
  %v1_10001bf8 = add i32 %v1_10001bc4, 16
  %v2_10001bf8 = inttoptr i32 %v1_10001bf8 to i32*
  %v3_10001bf8 = load i32, i32* %v2_10001bf8, align 4
  %v1_10001bfc = inttoptr i32 %v3_10001bf8 to i32*
  %v2_10001bfc = load i32, i32* %v1_10001bfc, align 4
  %v2_10001c04 = ptrtoint i32* %stack_var_-76 to i32
  %v1_10001c0c = add i32 %v1_10001bc4, 12
  %v2_10001c0c = inttoptr i32 %v1_10001c0c to i32*
  %v3_10001c0c = load i32, i32* %v2_10001c0c, align 4
  store i32 %v3_10001c0c, i32* @r5, align 4
  store i32 268442656, i32* @lr, align 4
  %v4_10001c1c = call i32 @bcopy(i32 %v2_10001bfc, i32 %v2_10001c04, i32 %v3_10001c0c, i32 %v1_10001bc4)
  %v1_10001c24 = add i32 %v1_10001bc4, 8
  %v2_10001c24 = inttoptr i32 %v1_10001c24 to i32*
  %v3_10001c24 = load i32, i32* %v2_10001c24, align 4
  %v1_10001c28 = urem i32 %v3_10001c24, 65536
  store i32 %v1_10001c28, i32* %stack_var_-80, align 4
  %v2_10001c80 = ptrtoint i32* %stack_var_-64 to i32
  %v3_10001c8c = bitcast i32* %stack_var_-64 to i8*
  %v2_10001c94 = ptrtoint i32* %stack_var_-104 to i32
  %v2_10001cec = add i32 %v1_10001bb0, %arg3
  br label %dec_label_pc_10001c44

dec_label_pc_10001c44:                            ; preds = %dec_label_pc_10001d18, %dec_label_pc_10001b94
  %storemerge1 = phi i32 [ 0, %dec_label_pc_10001b94 ], [ %v1_10001d1c, %dec_label_pc_10001d18 ]
  %tmp21 = icmp ult i32 %storemerge1, 50
  br i1 %tmp21, label %dec_label_pc_10001d18, label %dec_label_pc_10001c50

dec_label_pc_10001c50:                            ; preds = %dec_label_pc_10001c44
  store i32 268442712, i32* @lr, align 4
  %v1_10001c54 = call i32 @__GI_time(i32 0)
  store i32 268442724, i32* @lr, align 4
  %v1_10001c60 = call i32 @srand(i32 %v1_10001c54)
  store i32 268442728, i32* @lr, align 4
  %v1_10001c64 = call i32 @rand_init(i32 %v1_10001c60)
  %v0_10001c68 = call i32 @rand_next()
  %v1_10001c70 = mul i32 %v0_10001c68, 4
  %v1_10001c74 = and i32 %v1_10001c70, 12
  %v1_10001c78 = add nuw nsw i32 %v1_10001c74, 12
  %v4_10001c8c = call i32 @rand_alphastr(i8* %v3_10001c8c, i32 %v1_10001c78, i32 %v1_10001c74)
  %v2_10001c98 = add i32 %v1_10001c78, %v2_10001c94
  %v3_10001ca0 = add i32 %v2_10001c98, 40
  %v4_10001ca0 = inttoptr i32 %v3_10001ca0 to i8*
  store i8 0, i8* %v4_10001ca0, align 4
  store i32 %v2_10001c80, i32* %stack_var_-104, align 4
  store i32 268442820, i32* @lr, align 4
  %v4_10001cc0 = call i32 @__libc_send(i32 %v3_10001ba0, i32 %v2_10001c80, i32 %arg4, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_10001cd8.30 to i32), i32* @lr, align 4
  %v3_10001cd4 = call i32 @__libc_connect(i32 %v3_10001ba0, i32 %v2_10001bd0, i32 16)
  store i32 268442848, i32* @lr, align 4
  %v1_10001cdc = call i32 @__GI_time(i32 0)
  %v2_10001cf0 = icmp slt i32 %v1_10001cdc, %v2_10001cec
  br i1 %v2_10001cf0, label %dec_label_pc_10001d10, label %dec_label_pc_10001cf8

dec_label_pc_10001cf8:                            ; preds = %dec_label_pc_10001c50
  store i32 268442880, i32* @lr, align 4
  %v1_10001cfc = call i32 @__libc_close(i32 %v3_10001ba0)
  %v3_10001d00 = load i32, i32* %stack_var_-104, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001d08.31 to i32), i32* @lr, align 4
  %v1_10001d04 = call i32 @free(i32 %v3_10001d00)
  %v1_10001d0c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10001d10

dec_label_pc_10001d10:                            ; preds = %dec_label_pc_10001c50, %dec_label_pc_10001cf8
  br label %dec_label_pc_10001d18

dec_label_pc_10001d18:                            ; preds = %dec_label_pc_10001c44, %dec_label_pc_10001d10
  %stack_var_-96.0 = phi i32 [ %storemerge1, %dec_label_pc_10001c44 ], [ 0, %dec_label_pc_10001d10 ]
  %v1_10001d1c = add i32 %stack_var_-96.0, 1
  br label %dec_label_pc_10001c44

dec_label_pc_10001d28:                            ; preds = %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10001c74, { 1, 0 }
  uselistorder i32 %v2_10001c80, { 1, 0 }
  uselistorder i32 %v3_10001c0c, { 1, 0 }
  uselistorder i32 %v1_10001bc4, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001d18, { 1, 0 }
  uselistorder label %dec_label_pc_10001d10, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_10001d64 = load i32, i32* %arg2, align 4
  store i32 ptrtoint (i32* @global_var_1000a598.33 to i32), i32* @r4, align 4
  %v2_10001d74 = inttoptr i32 %v2_10001d64 to i8*
  %v3_10001d74 = call i32 @__GI_strcoll(i8* %v2_10001d74, i32 ptrtoint (i32* @global_var_1000a598.33 to i32))
  %v3_10001d7c = icmp eq i32 %v3_10001d74, 0
  br i1 %v3_10001d7c, label %dec_label_pc_10001d84, label %dec_label_pc_10001eb0

dec_label_pc_10001d84:                            ; preds = %entry
  %tmp30 = icmp slt i32 %arg1, 5
  br i1 %tmp30, label %dec_label_pc_10001fe0, label %dec_label_pc_10001d90

dec_label_pc_10001d90:                            ; preds = %dec_label_pc_10001d84
  %v1_10001d94 = add i32 %tmp, 4
  %v1_10001d98 = inttoptr i32 %v1_10001d94 to i32*
  %v2_10001d98 = load i32, i32* %v1_10001d98, align 4
  %v1_10001da4 = add i32 %tmp, 8
  %v1_10001da8 = inttoptr i32 %v1_10001da4 to i32*
  %v2_10001da8 = load i32, i32* %v1_10001da8, align 4
  store i32 268443060, i32* @lr, align 4
  %v2_10001db0 = call i32 @atol(i32 %v2_10001da8, i32 %v1_10001da4)
  %v1_10001dc0 = add i32 %tmp, 12
  %v1_10001dc4 = inttoptr i32 %v1_10001dc0 to i32*
  %v2_10001dc4 = load i32, i32* %v1_10001dc4, align 4
  store i32 268443088, i32* @lr, align 4
  %v2_10001dcc = call i32 @atol(i32 %v2_10001dc4, i32 %v1_10001dc0)
  %v1_10001ddc = add i32 %tmp, 16
  %v1_10001de0 = inttoptr i32 %v1_10001ddc to i32*
  %v2_10001de0 = load i32, i32* %v1_10001de0, align 4
  store i32 268443116, i32* @lr, align 4
  %v2_10001de8 = call i32 @atol(i32 %v2_10001de0, i32 %v1_10001ddc)
  store i32 %v2_10001d98, i32* @r3, align 4
  store i32 268443140, i32* @lr, align 4
  %v2_10001e00 = call i32 @__GI_strchr(i32 %v2_10001d98, i32 44)
  %v3_10001e08 = icmp eq i32 %v2_10001e00, 0
  br i1 %v3_10001e08, label %dec_label_pc_10001e84, label %dec_label_pc_10001e10

dec_label_pc_10001e10:                            ; preds = %dec_label_pc_10001d90
  store i32 ptrtoint (i32* @global_var_1000a59c.34 to i32), i32* @r4, align 4
  store i32 268443172, i32* @lr, align 4
  %v3_10001e20 = call i32 @__GI_strtok(i32 %v2_10001d98, i32 ptrtoint (i32* @global_var_1000a59c.34 to i32), i32 268500992)
  %v3_10001e787 = icmp eq i32 %v3_10001e20, 0
  br i1 %v3_10001e787, label %dec_label_pc_10001eb0, label %dec_label_pc_10001e30

dec_label_pc_10001e30:                            ; preds = %dec_label_pc_10001e10, %dec_label_pc_10001e5c
  %storemerge48 = phi i32 [ %v3_10001e68, %dec_label_pc_10001e5c ], [ %v3_10001e20, %dec_label_pc_10001e10 ]
  store i32 268443188, i32* @lr, align 4
  %v0_10001e30 = call i32 @listFork()
  %v3_10001e38 = icmp eq i32 %v0_10001e30, 0
  br i1 %v3_10001e38, label %dec_label_pc_10001e40, label %dec_label_pc_10001e5c

dec_label_pc_10001e40:                            ; preds = %dec_label_pc_10001e30
  %v4_10001e50 = call i32 @sendSTD(i32 %storemerge48, i32 %v2_10001db0, i32 %v2_10001dcc, i32 %v2_10001de8)
  %v1_10001e58 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10001e5c

dec_label_pc_10001e5c:                            ; preds = %dec_label_pc_10001e30, %dec_label_pc_10001e40
  store i32 ptrtoint (i32* @global_var_1000a59c.34 to i32), i32* @r4, align 4
  store i32 268443244, i32* @lr, align 4
  %v3_10001e68 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1000a59c.34 to i32), i32 268500992)
  %v3_10001e78 = icmp eq i32 %v3_10001e68, 0
  br i1 %v3_10001e78, label %dec_label_pc_10001eb0, label %dec_label_pc_10001e30

dec_label_pc_10001e84:                            ; preds = %dec_label_pc_10001d90
  store i32 268443272, i32* @lr, align 4
  %v0_10001e84 = call i32 @listFork()
  %v3_10001e8c = icmp eq i32 %v0_10001e84, 0
  br i1 %v3_10001e8c, label %dec_label_pc_10001e94, label %dec_label_pc_10001fe0

dec_label_pc_10001e94:                            ; preds = %dec_label_pc_10001e84
  %v4_10001ea4 = call i32 @sendSTD(i32 %v2_10001d98, i32 %v2_10001db0, i32 %v2_10001dcc, i32 %v2_10001de8)
  %v1_10001eac = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10001eb0

dec_label_pc_10001eb0:                            ; preds = %dec_label_pc_10001e5c, %dec_label_pc_10001e10, %entry, %dec_label_pc_10001e94
  %v2_10001eb4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint (i32* @global_var_1000a5a0.38 to i32), i32* @r4, align 4
  %v2_10001ec4 = inttoptr i32 %v2_10001eb4 to i8*
  %v3_10001ec4 = call i32 @__GI_strcoll(i8* %v2_10001ec4, i32 ptrtoint (i32* @global_var_1000a5a0.38 to i32))
  %v3_10001ecc = icmp eq i32 %v3_10001ec4, 0
  br i1 %v3_10001ecc, label %dec_label_pc_10001ed4, label %dec_label_pc_10001fe0

dec_label_pc_10001ed4:                            ; preds = %dec_label_pc_10001eb0
  br label %dec_label_pc_10001f78

dec_label_pc_10001ee8:                            ; preds = %dec_label_pc_10001f78, %dec_label_pc_10001fc0
  %v1_10001eec = mul i32 %storemerge2, 4
  %v3_10001ef8 = load i32, i32* @global_var_1001c3bc.29, align 4
  %v2_10001efc = add i32 %v3_10001ef8, %v1_10001eec
  %v1_10001f00 = inttoptr i32 %v2_10001efc to i32*
  %v2_10001f00 = load i32, i32* %v1_10001f00, align 4
  %v3_10001f04 = icmp eq i32 %v2_10001f00, 0
  br i1 %v3_10001f04, label %dec_label_pc_10001f6c, label %dec_label_pc_10001f0c

dec_label_pc_10001f0c:                            ; preds = %dec_label_pc_10001ee8
  %v2_10001f24 = load i32, i32* %v1_10001f00, align 4
  store i32 268443436, i32* @lr, align 4
  %v0_10001f28 = call i32 @__libc_getpid()
  %v4_10001f30 = icmp eq i32 %v2_10001f24, %v0_10001f28
  br i1 %v4_10001f30, label %dec_label_pc_10001f6c, label %dec_label_pc_10001f38

dec_label_pc_10001f38:                            ; preds = %dec_label_pc_10001f0c
  %v3_10001f48 = load i32, i32* @global_var_1001c3bc.29, align 4
  %v2_10001f4c = add i32 %v3_10001f48, %v1_10001eec
  %v1_10001f50 = inttoptr i32 %v2_10001f4c to i32*
  %v2_10001f50 = load i32, i32* %v1_10001f50, align 4
  store i32 268443488, i32* @lr, align 4
  %v2_10001f5c = call i32 @kill(i32 %v2_10001f50, i32 9)
  %v1_10001f64 = add i32 %stack_var_-68.1, 1
  br label %dec_label_pc_10001f6c

dec_label_pc_10001f6c:                            ; preds = %dec_label_pc_10001f0c, %dec_label_pc_10001ee8, %dec_label_pc_10001f38
  %v0_10001ff810 = phi i32 [ %v0_10001ff811, %dec_label_pc_10001ee8 ], [ %v0_10001f28, %dec_label_pc_10001f0c ], [ %v2_10001f5c, %dec_label_pc_10001f38 ]
  %stack_var_-68.0 = phi i32 [ %stack_var_-68.1, %dec_label_pc_10001ee8 ], [ %stack_var_-68.1, %dec_label_pc_10001f0c ], [ %v1_10001f64, %dec_label_pc_10001f38 ]
  %v1_10001f70 = add i32 %storemerge2, 1
  br label %dec_label_pc_10001f78

dec_label_pc_10001f78:                            ; preds = %dec_label_pc_10001ed4, %dec_label_pc_10001f6c
  %v0_10001ff811 = phi i32 [ 0, %dec_label_pc_10001ed4 ], [ %v0_10001ff810, %dec_label_pc_10001f6c ]
  %stack_var_-68.1 = phi i32 [ 0, %dec_label_pc_10001ed4 ], [ %stack_var_-68.0, %dec_label_pc_10001f6c ]
  %storemerge2 = phi i32 [ 0, %dec_label_pc_10001ed4 ], [ %v1_10001f70, %dec_label_pc_10001f6c ]
  %v2_10001fa0 = load i32, i32* @global_var_1001c398.27, align 4
  %v3_10001fb8 = icmp eq i32 %v2_10001fa0, 0
  br i1 %v3_10001fb8, label %dec_label_pc_10001fc0, label %dec_label_pc_10001ee8

dec_label_pc_10001fc0:                            ; preds = %dec_label_pc_10001f78
  %v3_10001fa4 = load i32, i32* @global_var_1001c39c.28, align 4
  %v3_10001fd8 = icmp ugt i32 %v3_10001fa4, %storemerge2
  br i1 %v3_10001fd8, label %dec_label_pc_10001ee8, label %dec_label_pc_10001fe0

dec_label_pc_10001fe0:                            ; preds = %dec_label_pc_10001fc0, %dec_label_pc_10001e84, %dec_label_pc_10001eb0, %dec_label_pc_10001d84
  %v0_10001ff8 = phi i32 [ %v0_10001e84, %dec_label_pc_10001e84 ], [ %v3_10001ec4, %dec_label_pc_10001eb0 ], [ 0, %dec_label_pc_10001d84 ], [ %v0_10001ff811, %dec_label_pc_10001fc0 ]
  ret i32 %v0_10001ff8

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %stack_var_-68.1, { 0, 2, 1 }
  uselistorder i32 %v1_10001eec, { 1, 0 }
  uselistorder i32 %v3_10001e68, { 1, 0 }
  uselistorder i32 %v2_10001de8, { 1, 0 }
  uselistorder i32 %v2_10001dcc, { 1, 0 }
  uselistorder i32 %v2_10001db0, { 1, 0 }
  uselistorder i32 %v2_10001d98, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 ()* @listFork, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000a59c.34 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10001fe0, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10001f78, { 1, 0 }
  uselistorder label %dec_label_pc_10001f6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001ee8, { 1, 0 }
  uselistorder label %dec_label_pc_10001eb0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10001e5c, { 1, 0 }
  uselistorder label %dec_label_pc_10001e30, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4132 = alloca i32, align 4
  %v2_10002010 = ptrtoint i32* %stack_var_-4132 to i32
  store i32 268443688, i32* @lr, align 4
  %v3_10002024 = call i32 @__GI_memset(i32 %v2_10002010, i32 0, i32 4096)
  %v3_1000202c = load i32, i32* @global_var_1001c3a0.24, align 4
  %v3_10002030 = icmp eq i32 %v3_1000202c, 0
  br i1 %v3_10002030, label %dec_label_pc_10002054, label %dec_label_pc_10002038

dec_label_pc_10002038:                            ; preds = %entry
  store i32 268443720, i32* @lr, align 4
  %v1_10002044 = call i32 @__libc_close(i32 %v3_1000202c)
  store i32 0, i32* @global_var_1001c3a0.24, align 4
  br label %dec_label_pc_10002054

dec_label_pc_10002054:                            ; preds = %entry, %dec_label_pc_10002038
  %v3_10002058 = load i32, i32* @global_var_1001c354.39, align 4
  %v3_1000205c = icmp eq i32 %v3_10002058, 0
  br i1 %v3_1000205c, label %dec_label_pc_10002064, label %dec_label_pc_10002074

dec_label_pc_10002064:                            ; preds = %dec_label_pc_10002054
  br label %dec_label_pc_10002088

dec_label_pc_10002074:                            ; preds = %dec_label_pc_10002054
  %v1_1000207c = add i32 %v3_10002058, 1
  br label %dec_label_pc_10002088

dec_label_pc_10002088:                            ; preds = %dec_label_pc_10002064, %dec_label_pc_10002074
  %storemerge = phi i32 [ 0, %dec_label_pc_10002064 ], [ %v1_1000207c, %dec_label_pc_10002074 ]
  store i32 %storemerge, i32* @global_var_1001c354.39, align 4
  %v1_1000209c = mul i32 %storemerge, 4
  %v2_100020a0 = add i32 %v1_1000209c, ptrtoint ([15 x i8]** @global_var_1001c350.41 to i32)
  %v1_100020a4 = inttoptr i32 %v2_100020a0 to i32*
  %v2_100020a4 = load i32, i32* %v1_100020a4, align 4
  %v2_100020b0 = inttoptr i32 %v2_100020a4 to i8*
  %v3_100020b0 = call i32 @strcpy(i32 %v2_10002010, i8* %v2_100020b0)
  store i32 %v2_10002010, i32* @r3, align 4
  store i32 268443852, i32* @lr, align 4
  %v2_100020c8 = call i32 @__GI_strchr(i32 %v2_10002010, i32 58)
  %v3_100020d0 = icmp eq i32 %v2_100020c8, 0
  br i1 %v3_100020d0, label %dec_label_pc_10002120, label %dec_label_pc_100020d8

dec_label_pc_100020d8:                            ; preds = %dec_label_pc_10002088
  store i32 %v2_10002010, i32* @r3, align 4
  store i32 268443880, i32* @lr, align 4
  %v2_100020e4 = call i32 @__GI_strchr(i32 %v2_10002010, i32 58)
  %v1_100020ec = add i32 %v2_100020e4, 1
  store i32 268443896, i32* @lr, align 4
  %v2_100020f4 = call i32 @atol(i32 %v1_100020ec, i32 %v2_100020e4)
  store i32 %v2_10002010, i32* @r3, align 4
  store i32 268443920, i32* @lr, align 4
  %v2_1000210c = call i32 @__GI_strchr(i32 %v2_10002010, i32 58)
  %v3_1000211c = inttoptr i32 %v2_1000210c to i8*
  store i8 0, i8* %v3_1000211c, align 1
  br label %dec_label_pc_10002120

dec_label_pc_10002120:                            ; preds = %dec_label_pc_10002088, %dec_label_pc_100020d8
  %stack_var_-4136.0 = phi i32 [ 445, %dec_label_pc_10002088 ], [ %v2_100020f4, %dec_label_pc_100020d8 ]
  store i32 268443952, i32* @lr, align 4
  %v3_1000212c = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_1000212c, i32* @global_var_1001c3a0.24, align 4
  store i32 268443996, i32* @lr, align 4
  %v5_10002158 = call i32 @connectTimeout(i32 %v3_1000212c, i32 %v2_10002010, i32 %stack_var_-4136.0, i32 30, i32 %v2_10002010)
  %v3_10002160 = icmp eq i32 %v5_10002158, 0
  %. = zext i1 %v3_10002160 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_10002010, { 1, 0, 3, 2, 5, 4, 7, 6, 8, 9 }
  uselistorder i32 (i32, i32)* @atol, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10002120, { 1, 0 }
  uselistorder label %dec_label_pc_10002088, { 1, 0 }
  uselistorder label %dec_label_pc_10002054, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-4236 = alloca i32, align 4
  %stack_var_-4196 = alloca i32, align 4
  %stack_var_-4240 = alloca i32, align 4
  %stack_var_-4360 = alloca i32, align 4
  %stack_var_-4304 = alloca i32, align 4
  %tmp92 = bitcast i8** %argv to i32*
  %v3_100021c0 = load i32, i32* %tmp92, align 4
  store i32 268444108, i32* @lr, align 4
  %v3_100021c8 = call i32 @unlink(i32 %v3_100021c0, i32 %tmp)
  store i32 268444112, i32* @lr, align 4
  %v1_100021cc = call i32 @rand_init(i32 %v3_100021c8)
  %v0_100021d0 = call i32 @rand_next()
  %v1_100021d8 = mul i32 %v0_100021d0, 4
  %v1_100021dc = and i32 %v1_100021d8, 12
  %v1_100021e0 = add nuw nsw i32 %v1_100021dc, 12
  %v2_100021e8 = ptrtoint i32* %stack_var_-4304 to i32
  %v3_100021f4 = bitcast i32* %stack_var_-4304 to i8*
  %v4_100021f4 = call i32 @rand_alphastr(i8* %v3_100021f4, i32 %v1_100021e0, i32 %v1_100021dc)
  %v2_100021fc = ptrtoint i32* %stack_var_-4360 to i32
  %v2_10002200 = add i32 %v2_100021fc, 56
  %v3_10002208 = add i32 %v2_10002200, %v1_100021e0
  %v4_10002208 = inttoptr i32 %v3_10002208 to i8*
  store i8 0, i8* %v4_10002208, align 4
  %v2_10002210 = load i32, i32* %tmp92, align 4
  store i32 268444196, i32* @lr, align 4
  %v3_10002220 = call i32 @util_strcpy(i32 %v2_10002210, i32 %v2_100021e8, i32 %v2_100021e8)
  %v0_10002224 = call i32 @rand_next()
  %v1_10002238 = urem i32 %v0_10002224, 6
  %v1_10002254 = mul nuw nsw i32 %v1_10002238, 4
  %v1_10002258 = add nuw nsw i32 %v1_10002254, 12
  %v4_1000226c = call i32 @rand_alphastr(i8* %v3_100021f4, i32 %v1_10002258, i32 %v1_10002254)
  %v2_10002278 = add i32 %v1_10002258, %v2_100021fc
  %v3_10002280 = add i32 %v2_10002278, 56
  %v4_10002280 = inttoptr i32 %v3_10002280 to i8*
  store i8 0, i8* %v4_10002280, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002298.43 to i32), i32* @lr, align 4
  %v3_10002294 = call i32 @prctl(i32 15, i32 %v2_100021e8, i32 %v2_10002278)
  store i32 268444320, i32* @lr, align 4
  %v1_1000229c = call i32 @__GI_time(i32 0)
  store i32 268444328, i32* @lr, align 4
  %v0_100022a4 = call i32 @__libc_getpid()
  %v2_100022ac = xor i32 %v1_1000229c, %v0_100022a4
  store i32 268444344, i32* @lr, align 4
  %v1_100022b4 = call i32 @srand(i32 %v2_100022ac)
  store i32 ptrtoint (i32* @global_var_100022bc.44 to i32), i32* @lr, align 4
  %v1_100022b8 = call i32 @rand_init(i32 %v1_100022b4)
  store i32 268444352, i32* @lr, align 4
  %v0_100022bc = call i32 @__libc_fork()
  %v3_100022cc = icmp eq i32 %v0_100022bc, 0
  br i1 %v3_100022cc, label %dec_label_pc_100022fc, label %dec_label_pc_100022f0

dec_label_pc_100022f0:                            ; preds = %entry
  %v2_100022d4 = ptrtoint i32* %stack_var_-4240 to i32
  store i32 ptrtoint ([3 x i8]* @global_var_100022e8.45 to i32), i32* @lr, align 4
  %v3_100022e4 = call i32 @__libc_waitpid(i32 %v0_100022bc, i32 %v2_100022d4, i32 0)
  %v0_100022ec = call i32 @__GI_exit()
  br label %dec_label_pc_1000231c

dec_label_pc_100022fc:                            ; preds = %entry
  store i32 268444416, i32* @lr, align 4
  %v0_100022fc = call i32 @__libc_fork()
  %v3_1000230c = icmp eq i32 %v0_100022fc, 0
  br i1 %v3_1000230c, label %dec_label_pc_1000231c, label %dec_label_pc_10002314

dec_label_pc_10002314:                            ; preds = %dec_label_pc_100022fc
  %v0_10002318 = call i32 @__GI_exit()
  br label %dec_label_pc_1000231c

dec_label_pc_1000231c:                            ; preds = %dec_label_pc_100022f0, %dec_label_pc_100022fc, %dec_label_pc_10002314
  store i32 ptrtoint ([3 x i8]* @global_var_10002328.47 to i32), i32* @lr, align 4
  %v2_10002324 = call i32 @chdir(i32 ptrtoint (i32* @global_var_1000a5a4.46 to i32), i32 268500992)
  store i32 ptrtoint (i32* @global_var_10002334.48 to i32), i32* @lr, align 4
  %v2_10002330 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_100029bc = ptrtoint i32* %stack_var_-4196 to i32
  %v4_100029cc = bitcast i32* %stack_var_-4196 to i8*
  %v1_100026d0 = or i32 %v2_100029bc, 1
  %v2_10002984 = add i32 %v2_100021fc, 124
  br label %dec_label_pc_10002338

dec_label_pc_10002338:                            ; preds = %dec_label_pc_10002338, %dec_label_pc_100029b4, %dec_label_pc_1000231c
  %v0_10002338 = call i32 @initConnection()
  %v3_10002340 = icmp eq i32 %v0_10002338, 0
  br i1 %v3_10002340, label %dec_label_pc_10002348, label %dec_label_pc_10002338

dec_label_pc_10002348:                            ; preds = %dec_label_pc_10002338
  br label %dec_label_pc_100029b4

dec_label_pc_10002368:                            ; preds = %dec_label_pc_1000261c, %dec_label_pc_100025c0
  %v1_1000236c = mul i32 %storemerge13, 4
  %v3_10002378 = load i32, i32* @global_var_1001c3bc.29, align 4
  %v2_1000237c = add i32 %v3_10002378, %v1_1000236c
  %v1_10002380 = inttoptr i32 %v2_1000237c to i32*
  %v2_10002380 = load i32, i32* %v1_10002380, align 4
  store i32 268444564, i32* @lr, align 4
  %v3_10002390 = call i32 @__libc_waitpid(i32 %v2_10002380, i32 0, i32 1)
  %tmp94 = icmp slt i32 %v3_10002390, 1
  br i1 %tmp94, label %dec_label_pc_100025b4, label %dec_label_pc_100023f8

dec_label_pc_100023b0:                            ; preds = %dec_label_pc_100023f8, %dec_label_pc_10002440
  %v1_100023b4 = mul i32 %v1_100023a4, 4
  %v3_100023c0 = load i32, i32* @global_var_1001c3bc.29, align 4
  %v2_100023c4 = add i32 %v3_100023c0, %v1_100023b4
  %v1_100023c8 = add i32 %v2_100023c4, -4
  %v1_100023e4 = inttoptr i32 %v2_100023c4 to i32*
  %v2_100023e4 = load i32, i32* %v1_100023e4, align 4
  %v2_100023e8 = inttoptr i32 %v1_100023c8 to i32*
  store i32 %v2_100023e4, i32* %v2_100023e8, align 4
  br label %dec_label_pc_100023f8

dec_label_pc_100023f8:                            ; preds = %dec_label_pc_10002368, %dec_label_pc_100023b0
  %storemerge19 = phi i32 [ %v1_100023a4, %dec_label_pc_100023b0 ], [ %storemerge13, %dec_label_pc_10002368 ]
  %v1_100023a4 = add i32 %storemerge19, 1
  %v2_10002420 = load i32, i32* @global_var_1001c398.27, align 4
  %v3_10002438 = icmp eq i32 %v2_10002420, 0
  br i1 %v3_10002438, label %dec_label_pc_10002440, label %dec_label_pc_100023b0

dec_label_pc_10002440:                            ; preds = %dec_label_pc_100023f8
  %v3_10002424 = load i32, i32* @global_var_1001c39c.28, align 4
  %v3_10002458 = icmp ugt i32 %v3_10002424, %v1_100023a4
  br i1 %v3_10002458, label %dec_label_pc_100023b0, label %dec_label_pc_10002460

dec_label_pc_10002460:                            ; preds = %dec_label_pc_10002440
  %v1_10002464 = mul i32 %v1_100023a4, 4
  %v3_10002470 = load i32, i32* @global_var_1001c3bc.29, align 4
  %v2_10002474 = add i32 %v1_10002464, -4
  %v1_10002478 = add i32 %v2_10002474, %v3_10002470
  %v2_10002480 = inttoptr i32 %v1_10002478 to i32*
  store i32 0, i32* %v2_10002480, align 4
  %v3_1000248c = load i32, i32* @global_var_1001c39c.28, align 4
  %v2_10002490 = load i32, i32* @global_var_1001c398.27, align 4
  %v1_10002494 = add i32 %v3_1000248c, -1
  %v2_10002494 = icmp ne i32 %v3_1000248c, 0
  %v2_10002498 = zext i1 %v2_10002494 to i32
  %v3_10002498 = add i32 %v2_10002490, -1
  %v4_10002498 = add i32 %v3_10002498, %v2_10002498
  store i32 %v4_10002498, i32* @global_var_1001c398.27, align 4
  store i32 %v1_10002494, i32* @global_var_1001c39c.28, align 4
  %v1_100024c8 = mul i32 %v1_10002494, 4
  %v1_100024d0 = add i32 %v1_100024c8, 4
  store i32 268444892, i32* @lr, align 4
  %v1_100024d8 = call i32 @malloc(i32 %v1_100024d0)
  br label %dec_label_pc_10002530

dec_label_pc_100024f0:                            ; preds = %dec_label_pc_10002530, %dec_label_pc_10002578
  %v1_100024f4 = mul i32 %storemerge18, 4
  %v2_10002500 = add i32 %v1_100024f4, %v1_100024d8
  %v3_10002514 = load i32, i32* @global_var_1001c3bc.29, align 4
  %v2_10002518 = add i32 %v3_10002514, %v1_100024f4
  %v1_1000251c = inttoptr i32 %v2_10002518 to i32*
  %v2_1000251c = load i32, i32* %v1_1000251c, align 4
  %v2_10002520 = inttoptr i32 %v2_10002500 to i32*
  store i32 %v2_1000251c, i32* %v2_10002520, align 4
  %v1_10002528 = add i32 %storemerge18, 1
  br label %dec_label_pc_10002530

dec_label_pc_10002530:                            ; preds = %dec_label_pc_10002460, %dec_label_pc_100024f0
  %storemerge18 = phi i32 [ 0, %dec_label_pc_10002460 ], [ %v1_10002528, %dec_label_pc_100024f0 ]
  %v2_10002558 = load i32, i32* @global_var_1001c398.27, align 4
  %v3_10002570 = icmp eq i32 %v2_10002558, 0
  br i1 %v3_10002570, label %dec_label_pc_10002578, label %dec_label_pc_100024f0

dec_label_pc_10002578:                            ; preds = %dec_label_pc_10002530
  %v3_1000255c = load i32, i32* @global_var_1001c39c.28, align 4
  %v3_10002590 = icmp ugt i32 %v3_1000255c, %storemerge18
  br i1 %v3_10002590, label %dec_label_pc_100024f0, label %dec_label_pc_10002598

dec_label_pc_10002598:                            ; preds = %dec_label_pc_10002578
  %v3_1000259c = load i32, i32* @global_var_1001c3bc.29, align 4
  store i32 268445096, i32* @lr, align 4
  %v1_100025a4 = call i32 @free(i32 %v3_1000259c)
  store i32 %v1_100024d8, i32* @global_var_1001c3bc.29, align 4
  br label %dec_label_pc_100025b4

dec_label_pc_100025b4:                            ; preds = %dec_label_pc_10002368, %dec_label_pc_10002598
  %v1_100025b8 = add i32 %storemerge13, 1
  br label %dec_label_pc_100025c0

dec_label_pc_100025c0:                            ; preds = %dec_label_pc_100029b4, %dec_label_pc_100025b4
  %storemerge13 = phi i32 [ %v1_100025b8, %dec_label_pc_100025b4 ], [ 0, %dec_label_pc_100029b4 ]
  %tmp96 = icmp slt i32 %storemerge13, 0
  %v1_100025c4 = zext i1 %tmp96 to i32
  %v2_100025c4 = ashr i32 %storemerge13, 31
  %v3_100025c4 = and i32 %v2_100025c4, -2
  %v4_100025c4 = or i32 %v3_100025c4, %v1_100025c4
  %v2_100025ec = load i32, i32* @global_var_1001c398.27, align 4
  %v3_100025f0 = load i32, i32* @global_var_1001c39c.28, align 4
  %v3_10002604 = icmp ugt i32 %v2_100025ec, %v4_100025c4
  br i1 %v3_10002604, label %dec_label_pc_10002368, label %dec_label_pc_1000260c

dec_label_pc_1000260c:                            ; preds = %dec_label_pc_100025c0
  %v4_10002604 = icmp eq i32 %v2_100025ec, %v4_100025c4
  br i1 %v4_10002604, label %dec_label_pc_1000261c, label %dec_label_pc_1000262c

dec_label_pc_1000261c:                            ; preds = %dec_label_pc_1000260c
  %v3_10002624 = icmp ugt i32 %v3_100025f0, %storemerge13
  br i1 %v3_10002624, label %dec_label_pc_10002368, label %dec_label_pc_1000262c

dec_label_pc_1000262c:                            ; preds = %dec_label_pc_1000260c, %dec_label_pc_1000261c
  %v2_10002634 = add i32 %v5_100029cc, %v2_100021fc
  %v3_1000263c = add i32 %v2_10002634, 164
  %v4_1000263c = inttoptr i32 %v3_1000263c to i8*
  store i8 0, i8* %v4_1000263c, align 1
  %v2_10002648 = call i32 @trim(i32 %v2_100029bc, i32 %v2_10002634)
  %v2_10002658 = load i8, i8* %v4_100029cc, align 4
  %v3_10002660 = icmp eq i8 %v2_10002658, 46
  br i1 %v3_10002660, label %dec_label_pc_10002684, label %dec_label_pc_100029b4

dec_label_pc_10002684:                            ; preds = %dec_label_pc_1000262c, %dec_label_pc_10002698
  %storemerge = phi i32 [ %v1_1000266c, %dec_label_pc_10002698 ], [ %v2_100029bc, %dec_label_pc_1000262c ]
  %v1_1000266c = add i32 %storemerge, 1
  %storemerge9 = inttoptr i32 %v1_1000266c to i8*
  %v2_10002688 = load i8, i8* %storemerge9, align 1
  %v3_10002690 = icmp eq i8 %v2_10002688, 32
  br i1 %v3_10002690, label %dec_label_pc_100026ac, label %dec_label_pc_10002698

dec_label_pc_10002698:                            ; preds = %dec_label_pc_10002684
  %v2_1000269c = load i8, i8* %storemerge9, align 1
  %v3_100026a4 = icmp eq i8 %v2_1000269c, 0
  br i1 %v3_100026a4, label %dec_label_pc_100026ac, label %dec_label_pc_10002684

dec_label_pc_100026ac:                            ; preds = %dec_label_pc_10002698, %dec_label_pc_10002684
  %v2_100026b0 = load i8, i8* %storemerge9, align 1
  %v3_100026b8 = icmp eq i8 %v2_100026b0, 0
  br i1 %v3_100026b8, label %dec_label_pc_100029b4, label %dec_label_pc_100026c0

dec_label_pc_100026c0:                            ; preds = %dec_label_pc_100026ac
  store i8 0, i8* %storemerge9, align 1
  store i32 %v1_100026d0, i32* @r3, align 4
  %v0_100026e0 = call i32 @__GI_strlen()
  %v2_100026f0 = add i32 %v0_100026e0, %v2_100029bc
  %v1_100026f4 = add i32 %v2_100026f0, 2
  %v2_10002740 = add i32 %v2_100026f0, 1
  br label %dec_label_pc_10002728

dec_label_pc_10002700:                            ; preds = %dec_label_pc_10002758, %dec_label_pc_10002728
  store i32 %v1_100026f4, i32* @r3, align 4
  %v0_10002708 = call i32 @__GI_strlen()
  %v1_1000271c = add i32 %v0_10002708, %v2_10002740
  %v3_10002724 = inttoptr i32 %v1_1000271c to i8*
  store i8 0, i8* %v3_10002724, align 1
  br label %dec_label_pc_10002728

dec_label_pc_10002728:                            ; preds = %dec_label_pc_100026c0, %dec_label_pc_10002700
  store i32 %v1_100026f4, i32* @r3, align 4
  %v0_10002730 = call i32 @__GI_strlen()
  %v1_10002744 = add i32 %v0_10002730, %v2_10002740
  %v1_10002748 = inttoptr i32 %v1_10002744 to i8*
  %v2_10002748 = load i8, i8* %v1_10002748, align 1
  %v3_10002750 = icmp eq i8 %v2_10002748, 10
  br i1 %v3_10002750, label %dec_label_pc_10002700, label %dec_label_pc_10002758

dec_label_pc_10002758:                            ; preds = %dec_label_pc_10002728
  store i32 %v1_100026f4, i32* @r3, align 4
  %v0_10002760 = call i32 @__GI_strlen()
  %v1_10002774 = add i32 %v0_10002760, %v2_10002740
  %v1_10002778 = inttoptr i32 %v1_10002774 to i8*
  %v2_10002778 = load i8, i8* %v1_10002778, align 1
  %v3_10002780 = icmp eq i8 %v2_10002778, 13
  br i1 %v3_10002780, label %dec_label_pc_10002700, label %dec_label_pc_100027a0.preheader

dec_label_pc_100027a0.preheader:                  ; preds = %dec_label_pc_10002758
  %stack_var_-4328.021 = inttoptr i32 %v1_100026f4 to i8*
  %v2_100027a422 = load i8, i8* %stack_var_-4328.021, align 1
  %v3_100027ac26 = icmp eq i8 %v2_100027a422, 32
  br i1 %v3_100027ac26, label %dec_label_pc_100027c8, label %dec_label_pc_100027b4

dec_label_pc_10002794:                            ; preds = %dec_label_pc_100027b4
  %v1_10002798 = add i32 %storemerge2027, 1
  %stack_var_-4328.0 = inttoptr i32 %v1_10002798 to i8*
  %v2_100027a4 = load i8, i8* %stack_var_-4328.0, align 1
  %v3_100027ac = icmp eq i8 %v2_100027a4, 32
  br i1 %v3_100027ac, label %dec_label_pc_100027c8, label %dec_label_pc_100027b4

dec_label_pc_100027b4:                            ; preds = %dec_label_pc_100027a0.preheader, %dec_label_pc_10002794
  %stack_var_-4328.028 = phi i8* [ %stack_var_-4328.0, %dec_label_pc_10002794 ], [ %stack_var_-4328.021, %dec_label_pc_100027a0.preheader ]
  %storemerge2027 = phi i32 [ %v1_10002798, %dec_label_pc_10002794 ], [ %v1_100026f4, %dec_label_pc_100027a0.preheader ]
  %v2_100027b8 = load i8, i8* %stack_var_-4328.028, align 1
  %v3_100027c0 = icmp eq i8 %v2_100027b8, 0
  br i1 %v3_100027c0, label %dec_label_pc_100027c8, label %dec_label_pc_10002794

dec_label_pc_100027c8:                            ; preds = %dec_label_pc_10002794, %dec_label_pc_100027b4, %dec_label_pc_100027a0.preheader
  %storemerge20.lcssa = phi i32 [ %v1_100026f4, %dec_label_pc_100027a0.preheader ], [ %v1_10002798, %dec_label_pc_10002794 ], [ %storemerge2027, %dec_label_pc_100027b4 ]
  %stack_var_-4328.0.lcssa = phi i8* [ %stack_var_-4328.021, %dec_label_pc_100027a0.preheader ], [ %stack_var_-4328.0, %dec_label_pc_10002794 ], [ %stack_var_-4328.028, %dec_label_pc_100027b4 ]
  store i8 0, i8* %stack_var_-4328.0.lcssa, align 1
  %v1_100027d8 = add i32 %storemerge20.lcssa, 1
  %v2_1000282033 = load i8, i8* %stack_var_-4328.021, align 1
  %v3_1000282836 = icmp eq i8 %v2_1000282033, 0
  br i1 %v3_1000282836, label %dec_label_pc_10002830, label %dec_label_pc_100027ec

dec_label_pc_100027ec:                            ; preds = %dec_label_pc_100027c8, %dec_label_pc_100027ec
  %storemerge838 = phi i8* [ %storemerge8, %dec_label_pc_100027ec ], [ %stack_var_-4328.021, %dec_label_pc_100027c8 ]
  %storemerge1537 = phi i32 [ %v1_10002814, %dec_label_pc_100027ec ], [ %v1_100026f4, %dec_label_pc_100027c8 ]
  %v3_100027f0 = load i8, i8* %storemerge838, align 1
  %v4_100027f0 = zext i8 %v3_100027f0 to i32
  store i32 268445696, i32* @lr, align 4
  %v3_100027fc = call i32 @__GI_toupper(i32 %v4_100027f0, i32 %storemerge1537)
  %v1_1000280c = trunc i32 %v3_100027fc to i8
  store i8 %v1_1000280c, i8* %storemerge838, align 1
  %v1_10002814 = add i32 %storemerge1537, 1
  %storemerge8 = inttoptr i32 %v1_10002814 to i8*
  %v2_10002820 = load i8, i8* %storemerge8, align 1
  %v3_10002828 = icmp eq i8 %v2_10002820, 0
  br i1 %v3_10002828, label %dec_label_pc_10002830, label %dec_label_pc_100027ec

dec_label_pc_10002830:                            ; preds = %dec_label_pc_100027ec, %dec_label_pc_100027c8
  store i32 ptrtoint (i32* @global_var_1000a5a8.49 to i32), i32* @r4, align 4
  store i32 268445772, i32* @lr, align 4
  %v3_10002848 = call i32 @__GI_strtok(i32 %v1_100027d8, i32 ptrtoint (i32* @global_var_1000a5a8.49 to i32), i32 268500992)
  store i32 %v1_100026f4, i32* %stack_var_-4236, align 4
  %v3_1000294042 = icmp eq i32 %v3_10002848, 0
  br i1 %v3_1000294042, label %dec_label_pc_10002948, label %dec_label_pc_10002860

dec_label_pc_10002860:                            ; preds = %dec_label_pc_10002830, %dec_label_pc_10002924
  %stack_var_-4356.045.in = phi i32 [ %v3_10002930, %dec_label_pc_10002924 ], [ %v3_10002848, %dec_label_pc_10002830 ]
  %stack_var_-4352.143 = phi i32 [ %stack_var_-4352.0, %dec_label_pc_10002924 ], [ 1, %dec_label_pc_10002830 ]
  %stack_var_-4356.045 = inttoptr i32 %stack_var_-4356.045.in to i8*
  %v2_10002864 = load i8, i8* %stack_var_-4356.045, align 1
  %v3_1000286c = icmp eq i8 %v2_10002864, 10
  br i1 %v3_1000286c, label %dec_label_pc_10002924, label %dec_label_pc_10002874

dec_label_pc_10002874:                            ; preds = %dec_label_pc_10002860
  store i32 %stack_var_-4352.143, i32* @r29, align 4
  store i32 %stack_var_-4356.045.in, i32* @r3, align 4
  %v0_10002880 = call i32 @__GI_strlen()
  %v1_10002888 = add i32 %v0_10002880, 1
  store i32 268445844, i32* @lr, align 4
  %v1_10002890 = call i32 @malloc(i32 %v1_10002888)
  %v0_1000289c = load i32, i32* @r29, align 4
  %v1_1000289c = mul i32 %v0_1000289c, 4
  %v1_100028a8 = add i32 %v1_1000289c, %v2_10002984
  %v2_100028ac = inttoptr i32 %v1_100028a8 to i32*
  store i32 %v1_10002890, i32* %v2_100028ac, align 4
  %v1_100028b4 = mul i32 %stack_var_-4352.143, 4
  %v1_100028c0 = add i32 %v1_100028b4, %v2_10002984
  %v1_100028c4 = inttoptr i32 %v1_100028c0 to i32*
  %v2_100028c4 = load i32, i32* %v1_100028c4, align 4
  store i32 %stack_var_-4356.045.in, i32* @r3, align 4
  %v0_100028d0 = call i32 @__GI_strlen()
  %v1_100028d8 = add i32 %v0_100028d0, 1
  store i32 268445936, i32* @lr, align 4
  %v3_100028ec = call i32 @__GI_memset(i32 %v2_100028c4, i32 0, i32 %v1_100028d8)
  %v2_10002904 = load i32, i32* %v1_100028c4, align 4
  %v4_10002914 = call i32 @strcpy(i32 %v2_10002904, i8* nonnull %stack_var_-4356.045)
  %v1_1000291c = add i32 %stack_var_-4352.143, 1
  br label %dec_label_pc_10002924

dec_label_pc_10002924:                            ; preds = %dec_label_pc_10002860, %dec_label_pc_10002874
  %stack_var_-4352.0 = phi i32 [ %stack_var_-4352.143, %dec_label_pc_10002860 ], [ %v1_1000291c, %dec_label_pc_10002874 ]
  store i32 ptrtoint (i32* @global_var_1000a5a8.49 to i32), i32* @r4, align 4
  store i32 268446004, i32* @lr, align 4
  %v3_10002930 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1000a5a8.49 to i32), i32 268500992)
  %v3_10002940 = icmp eq i32 %v3_10002930, 0
  br i1 %v3_10002940, label %dec_label_pc_10002948, label %dec_label_pc_10002860

dec_label_pc_10002948:                            ; preds = %dec_label_pc_10002924, %dec_label_pc_10002830
  %stack_var_-4352.1.lcssa = phi i32 [ 1, %dec_label_pc_10002830 ], [ %stack_var_-4352.0, %dec_label_pc_10002924 ]
  store i32 268446040, i32* @lr, align 4
  %v3_10002954 = call i32 @processCmd(i32 %stack_var_-4352.1.lcssa, i32* nonnull %stack_var_-4236)
  %tmp95 = icmp slt i32 %stack_var_-4352.1.lcssa, 2
  br i1 %tmp95, label %dec_label_pc_100029b4, label %dec_label_pc_10002978.lr.ph

dec_label_pc_10002978.lr.ph:                      ; preds = %dec_label_pc_10002948
  store i32 1, i32* %stack_var_-4360, align 4
  br label %dec_label_pc_10002978

dec_label_pc_10002978:                            ; preds = %dec_label_pc_10002978.lr.ph, %dec_label_pc_10002978
  %v3_10002978 = phi i32 [ 1, %dec_label_pc_10002978.lr.ph ], [ %v1_1000299c, %dec_label_pc_10002978 ]
  %v1_1000297c = mul i32 %v3_10002978, 4
  %v1_10002988 = add i32 %v1_1000297c, %v2_10002984
  %v1_1000298c = inttoptr i32 %v1_10002988 to i32*
  %v2_1000298c = load i32, i32* %v1_1000298c, align 4
  store i32 268446104, i32* @lr, align 4
  %v1_10002994 = call i32 @free(i32 %v2_1000298c)
  %v3_10002998 = load i32, i32* %stack_var_-4360, align 4
  %v1_1000299c = add i32 %v3_10002998, 1
  store i32 %v1_1000299c, i32* %stack_var_-4360, align 4
  %v2_100029ac = icmp slt i32 %v1_1000299c, %stack_var_-4352.1.lcssa
  br i1 %v2_100029ac, label %dec_label_pc_10002978, label %dec_label_pc_100029b4

dec_label_pc_100029b4:                            ; preds = %dec_label_pc_10002978, %dec_label_pc_1000262c, %dec_label_pc_10002948, %dec_label_pc_100026ac, %dec_label_pc_10002348
  %v3_100029b8 = load i32, i32* @global_var_1001c3a0.24, align 4
  %v5_100029cc = call i32 @recvLine(i32 %v3_100029b8, i8* %v4_100029cc, i32 4096, i32 %v2_100029bc)
  %v4_100029e0 = icmp eq i32 %v5_100029cc, -1
  br i1 %v4_100029e0, label %dec_label_pc_10002338, label %dec_label_pc_100025c0

; uselistorder directives
  uselistorder i32 %v5_100029cc, { 1, 0 }
  uselistorder i32 %v1_1000299c, { 1, 2, 0 }
  uselistorder i32 %stack_var_-4352.1.lcssa, { 2, 1, 0 }
  uselistorder i32 %v3_10002930, { 1, 0 }
  uselistorder i8* %stack_var_-4356.045, { 1, 0 }
  uselistorder i32 %stack_var_-4352.143, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge8, { 1, 0 }
  uselistorder i32 %v1_10002814, { 1, 0 }
  uselistorder i32 %storemerge1537, { 1, 0 }
  uselistorder i8* %storemerge838, { 1, 0 }
  uselistorder i8* %stack_var_-4328.021, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_100026f4, { 5, 0, 2, 1, 3, 6, 7, 4 }
  uselistorder i32 %v1_1000266c, { 1, 0 }
  uselistorder i32 %v2_100025ec, { 1, 0 }
  uselistorder i32 %storemerge13, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32 %storemerge18, { 1, 0, 2 }
  uselistorder i32 %v1_100024f4, { 1, 0 }
  uselistorder i32 %v1_100024d8, { 1, 0 }
  uselistorder i32 %v3_1000248c, { 1, 0 }
  uselistorder i32 %v1_100023a4, { 1, 3, 0, 2 }
  uselistorder i8* %v4_100029cc, { 1, 0 }
  uselistorder i32 %v2_100029bc, { 3, 1, 0, 4, 2 }
  uselistorder i32 %v1_10002254, { 1, 0 }
  uselistorder i32 %v2_100021fc, { 0, 3, 1, 2 }
  uselistorder i32 %v2_100021e8, { 0, 2, 1 }
  uselistorder i32 %v1_100021dc, { 1, 0 }
  uselistorder i32* %stack_var_-4360, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000a5a8.49 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_1001c398.27, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 2, 1, 0 }
  uselistorder i32 (i32)* @srand, { 1, 0 }
  uselistorder i32 (i32)* @__GI_time, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @rand_next, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @rand_init, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100029b4, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_10002978, { 1, 0 }
  uselistorder label %dec_label_pc_10002924, { 1, 0 }
  uselistorder label %dec_label_pc_10002860, { 1, 0 }
  uselistorder label %dec_label_pc_100027ec, { 1, 0 }
  uselistorder label %dec_label_pc_100027c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100027b4, { 1, 0 }
  uselistorder label %dec_label_pc_10002728, { 1, 0 }
  uselistorder label %dec_label_pc_10002684, { 1, 0 }
  uselistorder label %dec_label_pc_1000262c, { 1, 0 }
  uselistorder label %dec_label_pc_100025b4, { 1, 0 }
  uselistorder label %dec_label_pc_10002530, { 1, 0 }
  uselistorder label %dec_label_pc_100024f0, { 1, 0 }
  uselistorder label %dec_label_pc_100023f8, { 1, 0 }
  uselistorder label %dec_label_pc_100023b0, { 1, 0 }
  uselistorder label %dec_label_pc_10002338, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000231c, { 2, 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10002a00 = add i32 %arg2, -12
  %v2_10002a04 = icmp ugt i32 %v1_10002a00, 2
  %v2_10002a0c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10002a0c, i32* %stack_var_-32, align 4
  br i1 %v2_10002a04, label %dec_label_pc_10002a38, label %dec_label_pc_10002a28

dec_label_pc_10002a28:                            ; preds = %entry
  store i32 268446256, i32* @lr, align 4
  %v2_10002a2c = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_10002a2c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002a58

dec_label_pc_10002a38:                            ; preds = %entry
  %v0_10002a3c = call i32 @__asm_mfcr()
  %v1_10002a40 = and i32 %v0_10002a3c, 268435456
  %v3_10002a40 = icmp eq i32 %v1_10002a40, 0
  store i32 %v0_10002a3c, i32* %r31.global-to-local, align 4
  br i1 %v3_10002a40, label %dec_label_pc_10002a58, label %dec_label_pc_10002a4c

dec_label_pc_10002a4c:                            ; preds = %dec_label_pc_10002a38
  %v0_10002a4c = call i32 @__errno_location()
  %v0_10002a50 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002a50 = inttoptr i32 %v0_10002a4c to i32*
  store i32 %v0_10002a50, i32* %v2_10002a50, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002a58

dec_label_pc_10002a58:                            ; preds = %dec_label_pc_10002a38, %dec_label_pc_10002a28, %dec_label_pc_10002a4c
  %v0_10002a5c = phi i32 [ %v0_10002a3c, %dec_label_pc_10002a38 ], [ %v2_10002a2c, %dec_label_pc_10002a28 ], [ -1, %dec_label_pc_10002a4c ]
  ret i32 %v0_10002a5c

; uselistorder directives
  uselistorder label %dec_label_pc_10002a58, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10002a88 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10002a88, i32* %stack_var_-32, align 4
  %v0_10002aa4 = call i32 @__asm_mfcr()
  %v1_10002aa8 = and i32 %v0_10002aa4, 268435456
  %v3_10002aa8 = icmp eq i32 %v1_10002aa8, 0
  store i32 %v0_10002aa4, i32* %r31.global-to-local, align 4
  br i1 %v3_10002aa8, label %dec_label_pc_10002ac0, label %dec_label_pc_10002ab4

dec_label_pc_10002ab4:                            ; preds = %entry
  %v0_10002ab4 = call i32 @__errno_location()
  %v0_10002ab8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ab8 = inttoptr i32 %v0_10002ab4 to i32*
  store i32 %v0_10002ab8, i32* %v2_10002ab8, align 4
  br label %dec_label_pc_10002ac0

dec_label_pc_10002ac0:                            ; preds = %entry, %dec_label_pc_10002ab4
  %v0_10002ad0 = phi i32 [ %v0_10002aa4, %entry ], [ -1, %dec_label_pc_10002ab4 ]
  ret i32 %v0_10002ad0

; uselistorder directives
  uselistorder label %dec_label_pc_10002ac0, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_10002ae8

dec_label_pc_10002ae8:                            ; preds = %dec_label_pc_10002ae8.backedge, %entry
  %v0_10002af4 = call i32 @__asm_mfcr()
  %v1_10002af8 = and i32 %v0_10002af4, 268435456
  %v3_10002af8 = icmp eq i32 %v1_10002af8, 0
  store i32 %v0_10002af4, i32* %r31.global-to-local, align 4
  br i1 %v3_10002af8, label %dec_label_pc_10002ae8.backedge, label %dec_label_pc_10002b04

dec_label_pc_10002b04:                            ; preds = %dec_label_pc_10002ae8
  %v0_10002b04 = call i32 @__errno_location()
  %v0_10002b08 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002b08 = inttoptr i32 %v0_10002b04 to i32*
  store i32 %v0_10002b08, i32* %v2_10002b08, align 4
  br label %dec_label_pc_10002ae8.backedge

dec_label_pc_10002ae8.backedge:                   ; preds = %dec_label_pc_10002b04, %dec_label_pc_10002ae8
  br label %dec_label_pc_10002ae8
}

define i32 @chdir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002b28 = call i32 @__asm_mfcr()
  %v1_10002b2c = and i32 %v0_10002b28, 268435456
  %v3_10002b2c = icmp eq i32 %v1_10002b2c, 0
  store i32 %v0_10002b28, i32* %r31.global-to-local, align 4
  br i1 %v3_10002b2c, label %dec_label_pc_10002b44, label %dec_label_pc_10002b38

dec_label_pc_10002b38:                            ; preds = %entry
  %v0_10002b38 = call i32 @__errno_location()
  %v0_10002b3c = load i32, i32* %r31.global-to-local, align 4
  %v2_10002b3c = inttoptr i32 %v0_10002b38 to i32*
  store i32 %v0_10002b3c, i32* %v2_10002b3c, align 4
  br label %dec_label_pc_10002b44

dec_label_pc_10002b44:                            ; preds = %entry, %dec_label_pc_10002b38
  %v0_10002b54 = phi i32 [ %v0_10002b28, %entry ], [ -1, %dec_label_pc_10002b38 ]
  ret i32 %v0_10002b54

; uselistorder directives
  uselistorder label %dec_label_pc_10002b44, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002b70 = call i32 @__asm_mfcr()
  %v1_10002b74 = and i32 %v0_10002b70, 268435456
  %v3_10002b74 = icmp eq i32 %v1_10002b74, 0
  store i32 %v0_10002b70, i32* %r31.global-to-local, align 4
  br i1 %v3_10002b74, label %dec_label_pc_10002b8c, label %dec_label_pc_10002b80

dec_label_pc_10002b80:                            ; preds = %entry
  %v0_10002b80 = call i32 @__errno_location()
  %v0_10002b84 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002b84 = inttoptr i32 %v0_10002b80 to i32*
  store i32 %v0_10002b84, i32* %v2_10002b84, align 4
  br label %dec_label_pc_10002b8c

dec_label_pc_10002b8c:                            ; preds = %entry, %dec_label_pc_10002b80
  %v0_10002b9c = phi i32 [ %v0_10002b70, %entry ], [ -1, %dec_label_pc_10002b80 ]
  ret i32 %v0_10002b9c

; uselistorder directives
  uselistorder label %dec_label_pc_10002b8c, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002bb8 = call i32 @__asm_mfcr()
  %v1_10002bbc = and i32 %v0_10002bb8, 268435456
  %v3_10002bbc = icmp eq i32 %v1_10002bbc, 0
  store i32 %v0_10002bb8, i32* %r31.global-to-local, align 4
  br i1 %v3_10002bbc, label %dec_label_pc_10002bd4, label %dec_label_pc_10002bc8

dec_label_pc_10002bc8:                            ; preds = %entry
  %v0_10002bc8 = call i32 @__errno_location()
  %v0_10002bcc = load i32, i32* %r31.global-to-local, align 4
  %v2_10002bcc = inttoptr i32 %v0_10002bc8 to i32*
  store i32 %v0_10002bcc, i32* %v2_10002bcc, align 4
  br label %dec_label_pc_10002bd4

dec_label_pc_10002bd4:                            ; preds = %entry, %dec_label_pc_10002bc8
  %v0_10002be4 = phi i32 [ %v0_10002bb8, %entry ], [ -1, %dec_label_pc_10002bc8 ]
  ret i32 %v0_10002be4

; uselistorder directives
  uselistorder label %dec_label_pc_10002bd4, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002c00 = call i32 @__asm_mfcr()
  %v1_10002c04 = and i32 %v0_10002c00, 268435456
  %v3_10002c04 = icmp eq i32 %v1_10002c04, 0
  store i32 %v0_10002c00, i32* %r31.global-to-local, align 4
  br i1 %v3_10002c04, label %dec_label_pc_10002c1c, label %dec_label_pc_10002c10

dec_label_pc_10002c10:                            ; preds = %entry
  %v0_10002c10 = call i32 @__errno_location()
  %v0_10002c14 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002c14 = inttoptr i32 %v0_10002c10 to i32*
  store i32 %v0_10002c14, i32* %v2_10002c14, align 4
  br label %dec_label_pc_10002c1c

dec_label_pc_10002c1c:                            ; preds = %entry, %dec_label_pc_10002c10
  %v0_10002c2c = phi i32 [ %v0_10002c00, %entry ], [ -1, %dec_label_pc_10002c10 ]
  ret i32 %v0_10002c2c

; uselistorder directives
  uselistorder label %dec_label_pc_10002c1c, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002c48 = call i32 @__asm_mfcr()
  %v1_10002c4c = and i32 %v0_10002c48, 268435456
  %v3_10002c4c = icmp eq i32 %v1_10002c4c, 0
  store i32 %v0_10002c48, i32* %r31.global-to-local, align 4
  br i1 %v3_10002c4c, label %dec_label_pc_10002c64, label %dec_label_pc_10002c58

dec_label_pc_10002c58:                            ; preds = %entry
  %v0_10002c58 = call i32 @__errno_location()
  %v0_10002c5c = load i32, i32* %r31.global-to-local, align 4
  %v2_10002c5c = inttoptr i32 %v0_10002c58 to i32*
  store i32 %v0_10002c5c, i32* %v2_10002c5c, align 4
  br label %dec_label_pc_10002c64

dec_label_pc_10002c64:                            ; preds = %entry, %dec_label_pc_10002c58
  %v0_10002c74 = phi i32 [ %v0_10002c48, %entry ], [ -1, %dec_label_pc_10002c58 ]
  ret i32 %v0_10002c74

; uselistorder directives
  uselistorder label %dec_label_pc_10002c64, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002c90 = call i32 @__asm_mfcr()
  %v1_10002c94 = and i32 %v0_10002c90, 268435456
  %v3_10002c94 = icmp eq i32 %v1_10002c94, 0
  store i32 %v0_10002c90, i32* %r31.global-to-local, align 4
  br i1 %v3_10002c94, label %dec_label_pc_10002cac, label %dec_label_pc_10002ca0

dec_label_pc_10002ca0:                            ; preds = %entry
  %v0_10002ca0 = call i32 @__errno_location()
  %v0_10002ca4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ca4 = inttoptr i32 %v0_10002ca0 to i32*
  store i32 %v0_10002ca4, i32* %v2_10002ca4, align 4
  br label %dec_label_pc_10002cac

dec_label_pc_10002cac:                            ; preds = %entry, %dec_label_pc_10002ca0
  %v0_10002cbc = phi i32 [ %v0_10002c90, %entry ], [ -1, %dec_label_pc_10002ca0 ]
  ret i32 %v0_10002cbc

; uselistorder directives
  uselistorder label %dec_label_pc_10002cac, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002cd8 = call i32 @__asm_mfcr()
  %v1_10002cdc = and i32 %v0_10002cd8, 268435456
  %v3_10002cdc = icmp eq i32 %v1_10002cdc, 0
  store i32 %v0_10002cd8, i32* %r31.global-to-local, align 4
  br i1 %v3_10002cdc, label %dec_label_pc_10002cf4, label %dec_label_pc_10002ce8

dec_label_pc_10002ce8:                            ; preds = %entry
  %v0_10002ce8 = call i32 @__errno_location()
  %v0_10002cec = load i32, i32* %r31.global-to-local, align 4
  %v2_10002cec = inttoptr i32 %v0_10002ce8 to i32*
  store i32 %v0_10002cec, i32* %v2_10002cec, align 4
  br label %dec_label_pc_10002cf4

dec_label_pc_10002cf4:                            ; preds = %entry, %dec_label_pc_10002ce8
  %v0_10002d04 = phi i32 [ %v0_10002cd8, %entry ], [ -1, %dec_label_pc_10002ce8 ]
  ret i32 %v0_10002d04

; uselistorder directives
  uselistorder label %dec_label_pc_10002cf4, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002d20 = call i32 @__asm_mfcr()
  %v1_10002d24 = and i32 %v0_10002d20, 268435456
  %v3_10002d24 = icmp eq i32 %v1_10002d24, 0
  store i32 %v0_10002d20, i32* %r31.global-to-local, align 4
  br i1 %v3_10002d24, label %dec_label_pc_10002d3c, label %dec_label_pc_10002d30

dec_label_pc_10002d30:                            ; preds = %entry
  %v0_10002d30 = call i32 @__errno_location()
  %v0_10002d34 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002d34 = inttoptr i32 %v0_10002d30 to i32*
  store i32 %v0_10002d34, i32* %v2_10002d34, align 4
  br label %dec_label_pc_10002d3c

dec_label_pc_10002d3c:                            ; preds = %entry, %dec_label_pc_10002d30
  %v0_10002d4c = phi i32 [ %v0_10002d20, %entry ], [ -1, %dec_label_pc_10002d30 ]
  ret i32 %v0_10002d4c

; uselistorder directives
  uselistorder label %dec_label_pc_10002d3c, { 1, 0 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002d68 = call i32 @__asm_mfcr()
  %v1_10002d6c = and i32 %v0_10002d68, 268435456
  %v3_10002d6c = icmp eq i32 %v1_10002d6c, 0
  store i32 %v0_10002d68, i32* %r31.global-to-local, align 4
  br i1 %v3_10002d6c, label %dec_label_pc_10002d84, label %dec_label_pc_10002d78

dec_label_pc_10002d78:                            ; preds = %entry
  %v0_10002d78 = call i32 @__errno_location()
  %v0_10002d7c = load i32, i32* %r31.global-to-local, align 4
  %v2_10002d7c = inttoptr i32 %v0_10002d78 to i32*
  store i32 %v0_10002d7c, i32* %v2_10002d7c, align 4
  br label %dec_label_pc_10002d84

dec_label_pc_10002d84:                            ; preds = %entry, %dec_label_pc_10002d78
  %v0_10002d94 = phi i32 [ %v0_10002d68, %entry ], [ -1, %dec_label_pc_10002d78 ]
  ret i32 %v0_10002d94

; uselistorder directives
  uselistorder label %dec_label_pc_10002d84, { 1, 0 }
}

define i32 @unlink(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002db0 = call i32 @__asm_mfcr()
  %v1_10002db4 = and i32 %v0_10002db0, 268435456
  %v3_10002db4 = icmp eq i32 %v1_10002db4, 0
  store i32 %v0_10002db0, i32* %r31.global-to-local, align 4
  br i1 %v3_10002db4, label %dec_label_pc_10002dcc, label %dec_label_pc_10002dc0

dec_label_pc_10002dc0:                            ; preds = %entry
  %v0_10002dc0 = call i32 @__errno_location()
  %v0_10002dc4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002dc4 = inttoptr i32 %v0_10002dc0 to i32*
  store i32 %v0_10002dc4, i32* %v2_10002dc4, align 4
  br label %dec_label_pc_10002dcc

dec_label_pc_10002dcc:                            ; preds = %entry, %dec_label_pc_10002dc0
  %v0_10002ddc = phi i32 [ %v0_10002db0, %entry ], [ -1, %dec_label_pc_10002dc0 ]
  ret i32 %v0_10002ddc

; uselistorder directives
  uselistorder label %dec_label_pc_10002dcc, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10002de4 = call i32 @wait4(i32 0)
  ret i32 %v1_10002de4
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002e00 = call i32 @__asm_mfcr()
  %v1_10002e04 = and i32 %v0_10002e00, 268435456
  %v3_10002e04 = icmp eq i32 %v1_10002e04, 0
  store i32 %v0_10002e00, i32* %r31.global-to-local, align 4
  br i1 %v3_10002e04, label %dec_label_pc_10002e1c, label %dec_label_pc_10002e10

dec_label_pc_10002e10:                            ; preds = %entry
  %v0_10002e10 = call i32 @__errno_location()
  %v0_10002e14 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e14 = inttoptr i32 %v0_10002e10 to i32*
  store i32 %v0_10002e14, i32* %v2_10002e14, align 4
  br label %dec_label_pc_10002e1c

dec_label_pc_10002e1c:                            ; preds = %entry, %dec_label_pc_10002e10
  %v0_10002e2c = phi i32 [ %v0_10002e00, %entry ], [ -1, %dec_label_pc_10002e10 ]
  ret i32 %v0_10002e2c

; uselistorder directives
  uselistorder label %dec_label_pc_10002e1c, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10002e30 = add i32 %arg1, 128
  %v1_10002e34 = mul i32 %arg1, 2
  %v2_10002e38 = icmp ugt i32 %v1_10002e30, 383
  %v0_10002e3c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10002e38, i32 %v0_10002e3c)
  %v3_10002e44 = load i32, i32* inttoptr (i32 268551012 to i32*), align 4
  %v2_10002e48 = add i32 %v1_10002e34, %v3_10002e44
  %v3_10002e48 = inttoptr i32 %v2_10002e48 to i16*
  %v4_10002e48 = load i16, i16* %v3_10002e48, align 2
  %v5_10002e48 = sext i16 %v4_10002e48 to i32
  ret i32 %v5_10002e48
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1001c3e0.50 to i32)
}

define i32 @clock(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_10002e64 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268447344, i32* @lr, align 4
  %v1_10002e6c = call i32 @times(i32 %v2_10002e64)
  %v3_10002e74 = load i32, i32* %stack_var_-24, align 4
  %v2_10002e78 = add i32 %v3_10002e74, %tmp
  %v1_10002e80 = mul i32 %v2_10002e78, 10000
  %v1_10002e8c = and i32 %v1_10002e80, 2147483632
  ret i32 %v1_10002e8c
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10002e94 = load i32, i32* @r5, align 4
  %v1_10002e94 = call i32 @__asm_rlwinm.(i32 %v0_10002e94, i32 29, i32 3, i32 31)
  store i32 %v1_10002e94, i32* %r9.global-to-local, align 4
  %v4_10002e94 = icmp eq i32 %v1_10002e94, 0
  %v0_10002e98 = load i32, i32* @r4, align 4
  %v1_10002e98 = add i32 %v0_10002e98, -4
  store i32 %v1_10002e98, i32* %r4.global-to-local, align 4
  %v0_10002e9c = load i32, i32* @r3, align 4
  %v1_10002e9c = add i32 %v0_10002e9c, -4
  store i32 %v1_10002e9c, i32* @r11, align 4
  br i1 %v4_10002e94, label %dec_label_pc_10002ec4, label %dec_label_pc_10002ea4

dec_label_pc_10002ea4:                            ; preds = %entry
  %v1_10002ea4 = urem i32 %v1_10002e9c, 4
  %v3_10002ea4 = icmp eq i32 %v1_10002ea4, 0
  br i1 %v3_10002ea4, label %dec_label_pc_10002eac, label %dec_label_pc_10002f00

dec_label_pc_10002eac:                            ; preds = %dec_label_pc_10002f20.dec_label_pc_10002eac_crit_edge, %dec_label_pc_10002ea4
  %v1_10002eb8.pre = phi i32 [ %v1_10002e9c, %dec_label_pc_10002ea4 ], [ %v1_10002eb8.pre.pre, %dec_label_pc_10002f20.dec_label_pc_10002eac_crit_edge ]
  %v0_10002eac = phi i32 [ %v1_10002e94, %dec_label_pc_10002ea4 ], [ %v1_10002f20, %dec_label_pc_10002f20.dec_label_pc_10002eac_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_10002ea4 ], [ %v2_10002f08, %dec_label_pc_10002f20.dec_label_pc_10002eac_crit_edge ]
  store i32 %v0_10002eac, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10002eb0

dec_label_pc_10002eb0:                            ; preds = %dec_label_pc_10002eb0, %dec_label_pc_10002eac
  %v1_10002eb8 = phi i32 [ %v2_10002ebc, %dec_label_pc_10002eb0 ], [ %v1_10002eb8.pre, %dec_label_pc_10002eac ]
  %v0_10002eb0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002eb0 = add i32 %v0_10002eb0, 4
  %v2_10002eb0 = inttoptr i32 %v1_10002eb0 to i32*
  %v3_10002eb0 = load i32, i32* %v2_10002eb0, align 4
  %v1_10002eb4 = add i32 %v0_10002eb0, 8
  %v2_10002eb4 = inttoptr i32 %v1_10002eb4 to i32*
  %v3_10002eb4 = load i32, i32* %v2_10002eb4, align 4
  store i32 %v3_10002eb4, i32* %r9.global-to-local, align 4
  store i32 %v1_10002eb4, i32* %r4.global-to-local, align 4
  %v2_10002eb8 = add i32 %v1_10002eb8, 4
  %v3_10002eb8 = inttoptr i32 %v2_10002eb8 to i32*
  store i32 %v3_10002eb0, i32* %v3_10002eb8, align 4
  %v0_10002ebc = load i32, i32* %r9.global-to-local, align 4
  %v1_10002ebc = load i32, i32* @r11, align 4
  %v2_10002ebc = add i32 %v1_10002ebc, 8
  %v3_10002ebc = inttoptr i32 %v2_10002ebc to i32*
  store i32 %v0_10002ebc, i32* %v3_10002ebc, align 4
  store i32 %v2_10002ebc, i32* @r11, align 4
  %v0_10002ec0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10002ec0 = add i32 %v0_10002ec0, -1
  store i32 %v1_10002ec0, i32* %ctr.global-to-local, align 4
  %v2_10002ec0 = icmp eq i32 %v1_10002ec0, 0
  br i1 %v2_10002ec0, label %dec_label_pc_10002ec4, label %dec_label_pc_10002eb0

dec_label_pc_10002ec4:                            ; preds = %dec_label_pc_10002eb0, %dec_label_pc_10002f20, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_10002f08, %dec_label_pc_10002f20 ], [ %.0, %dec_label_pc_10002eb0 ]
  %v1_10002ec4 = urem i32 %.1, 8
  store i32 %v1_10002ec4, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10002ec4, 4
  br i1 %tmp, label %dec_label_pc_10002edc, label %dec_label_pc_10002ed0

dec_label_pc_10002ed0:                            ; preds = %dec_label_pc_10002ec4
  %v0_10002ed0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002ed0 = add i32 %v0_10002ed0, 4
  %v2_10002ed0 = inttoptr i32 %v1_10002ed0 to i32*
  %v3_10002ed0 = load i32, i32* %v2_10002ed0, align 4
  store i32 %v1_10002ed0, i32* %r4.global-to-local, align 4
  %v1_10002ed4 = add nsw i32 %v1_10002ec4, -4
  store i32 %v1_10002ed4, i32* @r5, align 4
  %v1_10002ed8 = load i32, i32* @r11, align 4
  %v2_10002ed8 = add i32 %v1_10002ed8, 4
  %v3_10002ed8 = inttoptr i32 %v2_10002ed8 to i32*
  store i32 %v3_10002ed0, i32* %v3_10002ed8, align 4
  store i32 %v2_10002ed8, i32* @r11, align 4
  %v0_10002edc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10002edc

dec_label_pc_10002edc:                            ; preds = %dec_label_pc_10002ec4, %dec_label_pc_10002ed0
  %v0_10002edc = phi i32 [ %v1_10002ec4, %dec_label_pc_10002ec4 ], [ %v0_10002edc.pre, %dec_label_pc_10002ed0 ]
  %v3_10002edc = icmp eq i32 %v0_10002edc, 0
  %v0_10002ee0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10002edc, i32 %v0_10002ee0)
  %v0_10002ee4 = load i32, i32* @r5, align 4
  store i32 %v0_10002ee4, i32* %ctr.global-to-local, align 4
  %v0_10002ee8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002ee8 = add i32 %v0_10002ee8, 3
  store i32 %v1_10002ee8, i32* %r4.global-to-local, align 4
  %v0_10002eec = load i32, i32* @r11, align 4
  %v1_10002eec = add i32 %v0_10002eec, 3
  store i32 %v1_10002eec, i32* %r9.global-to-local, align 4
  %v1_10002ef09 = add i32 %v0_10002ee8, 4
  %v2_10002ef010 = inttoptr i32 %v1_10002ef09 to i8*
  %v3_10002ef011 = load i8, i8* %v2_10002ef010, align 1
  store i32 %v1_10002ef09, i32* %r4.global-to-local, align 4
  %v3_10002ef413 = add i32 %v0_10002eec, 4
  %v4_10002ef414 = inttoptr i32 %v3_10002ef413 to i8*
  store i8 %v3_10002ef011, i8* %v4_10002ef414, align 1
  store i32 %v3_10002ef413, i32* %r9.global-to-local, align 4
  %v0_10002ef815 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10002ef816 = add i32 %v0_10002ef815, -1
  store i32 %v1_10002ef816, i32* %ctr.global-to-local, align 4
  %v2_10002ef817 = icmp eq i32 %v1_10002ef816, 0
  br i1 %v2_10002ef817, label %dec_label_pc_10002f2c, label %dec_label_pc_10002ef0.dec_label_pc_10002ef0_crit_edge

dec_label_pc_10002ef0.dec_label_pc_10002ef0_crit_edge: ; preds = %dec_label_pc_10002edc, %dec_label_pc_10002ef0.dec_label_pc_10002ef0_crit_edge
  %v3_10002ef418 = phi i32 [ %v3_10002ef4, %dec_label_pc_10002ef0.dec_label_pc_10002ef0_crit_edge ], [ %v3_10002ef413, %dec_label_pc_10002edc ]
  %v0_10002ef0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10002ef0 = add i32 %v0_10002ef0.pre, 1
  %v2_10002ef0 = inttoptr i32 %v1_10002ef0 to i8*
  %v3_10002ef0 = load i8, i8* %v2_10002ef0, align 1
  store i32 %v1_10002ef0, i32* %r4.global-to-local, align 4
  %v3_10002ef4 = add i32 %v3_10002ef418, 1
  %v4_10002ef4 = inttoptr i32 %v3_10002ef4 to i8*
  store i8 %v3_10002ef0, i8* %v4_10002ef4, align 1
  store i32 %v3_10002ef4, i32* %r9.global-to-local, align 4
  %v0_10002ef8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10002ef8 = add i32 %v0_10002ef8, -1
  store i32 %v1_10002ef8, i32* %ctr.global-to-local, align 4
  %v2_10002ef8 = icmp eq i32 %v1_10002ef8, 0
  br i1 %v2_10002ef8, label %dec_label_pc_10002f2c, label %dec_label_pc_10002ef0.dec_label_pc_10002ef0_crit_edge

dec_label_pc_10002f00:                            ; preds = %dec_label_pc_10002ea4
  %v1_10002f00 = sub nsw i32 4, %v1_10002ea4
  store i32 %v1_10002f00, i32* %ctr.global-to-local, align 4
  %v1_10002f08 = load i32, i32* @r5, align 4
  %v2_10002f08 = sub i32 %v1_10002f08, %v1_10002f00
  br label %dec_label_pc_10002f0c

dec_label_pc_10002f0c:                            ; preds = %dec_label_pc_10002f0c.dec_label_pc_10002f0c_crit_edge, %dec_label_pc_10002f00
  %v2_10002f14 = phi i32 [ %v1_10002f18, %dec_label_pc_10002f0c.dec_label_pc_10002f0c_crit_edge ], [ %v1_10002e9c, %dec_label_pc_10002f00 ]
  %v0_10002f0c = phi i32 [ %v0_10002f0c.pre, %dec_label_pc_10002f0c.dec_label_pc_10002f0c_crit_edge ], [ %v1_10002e98, %dec_label_pc_10002f00 ]
  %v1_10002f0c = add i32 %v0_10002f0c, 4
  %v2_10002f0c = inttoptr i32 %v1_10002f0c to i8*
  %v3_10002f0c = load i8, i8* %v2_10002f0c, align 1
  %v1_10002f10 = add i32 %v0_10002f0c, 1
  store i32 %v1_10002f10, i32* %r4.global-to-local, align 4
  %v3_10002f14 = add i32 %v2_10002f14, 4
  %v4_10002f14 = inttoptr i32 %v3_10002f14 to i8*
  store i8 %v3_10002f0c, i8* %v4_10002f14, align 1
  %v0_10002f18 = load i32, i32* @r11, align 4
  %v1_10002f18 = add i32 %v0_10002f18, 1
  store i32 %v1_10002f18, i32* @r11, align 4
  %v0_10002f1c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10002f1c = add i32 %v0_10002f1c, -1
  store i32 %v1_10002f1c, i32* %ctr.global-to-local, align 4
  %v2_10002f1c = icmp eq i32 %v1_10002f1c, 0
  br i1 %v2_10002f1c, label %dec_label_pc_10002f20, label %dec_label_pc_10002f0c.dec_label_pc_10002f0c_crit_edge

dec_label_pc_10002f0c.dec_label_pc_10002f0c_crit_edge: ; preds = %dec_label_pc_10002f0c
  %v0_10002f0c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10002f0c

dec_label_pc_10002f20:                            ; preds = %dec_label_pc_10002f0c
  %v1_10002f20 = call i32 @__asm_rlwinm.(i32 %v2_10002f08, i32 29, i32 3, i32 31)
  store i32 %v1_10002f20, i32* %r9.global-to-local, align 4
  %v4_10002f20 = icmp eq i32 %v1_10002f20, 0
  br i1 %v4_10002f20, label %dec_label_pc_10002ec4, label %dec_label_pc_10002f20.dec_label_pc_10002eac_crit_edge

dec_label_pc_10002f20.dec_label_pc_10002eac_crit_edge: ; preds = %dec_label_pc_10002f20
  %v1_10002eb8.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10002eac

dec_label_pc_10002f2c:                            ; preds = %dec_label_pc_10002ef0.dec_label_pc_10002ef0_crit_edge, %dec_label_pc_10002edc
  %v0_10002f2c = load i32, i32* @r3, align 4
  ret i32 %v0_10002f2c

; uselistorder directives
  uselistorder i32 %v1_10002f20, { 1, 2, 0 }
  uselistorder i32 %v1_10002f1c, { 1, 0 }
  uselistorder i32 %v1_10002f18, { 1, 0 }
  uselistorder i32 %v0_10002f0c, { 1, 0 }
  uselistorder i32 %v2_10002f08, { 2, 1, 0 }
  uselistorder i32 %v1_10002ef8, { 1, 0 }
  uselistorder i32 %v3_10002ef4, { 1, 2, 0 }
  uselistorder i32 %v1_10002ec4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10002ec0, { 1, 0 }
  uselistorder i32 %v2_10002ebc, { 1, 2, 0 }
  uselistorder i32 %v1_10002ea4, { 1, 0 }
  uselistorder i32 %v1_10002e9c, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002ef0.dec_label_pc_10002ef0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10002edc, { 1, 0 }
  uselistorder label %dec_label_pc_10002ec4, { 1, 0, 2 }
}

define i32 @__GI_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10002f30 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10002f30, i32* %r9.global-to-local, align 4
  %v4_10002f30 = icmp eq i32 %v1_10002f30, 0
  %v1_10002f38 = add i32 %arg1, -4
  store i32 %v1_10002f38, i32* %r11.global-to-local, align 4
  %v1_10002f3c = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10002f40 = call i32 @__asm_rlwimi(i32 %v1_10002f3c, i32 16, i32 0, i32 15)
  %v2_10002f40 = trunc i32 %v1_10002f40 to i8
  br i1 %v4_10002f30, label %dec_label_pc_10002f68, label %dec_label_pc_10002f48

dec_label_pc_10002f48:                            ; preds = %entry
  %v0_10002f48 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002f48 = urem i32 %v0_10002f48, 4
  %v3_10002f48 = icmp eq i32 %v1_10002f48, 0
  br i1 %v3_10002f48, label %dec_label_pc_10002f48.dec_label_pc_10002f50_crit_edge, label %dec_label_pc_10002f98

dec_label_pc_10002f48.dec_label_pc_10002f50_crit_edge: ; preds = %dec_label_pc_10002f48
  %v0_10002f50.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10002f50

dec_label_pc_10002f50:                            ; preds = %dec_label_pc_10002fb0.dec_label_pc_10002f50_crit_edge, %dec_label_pc_10002f48.dec_label_pc_10002f50_crit_edge
  %v0_10002f54.pre = phi i32 [ %v0_10002f48, %dec_label_pc_10002f48.dec_label_pc_10002f50_crit_edge ], [ %v0_10002f54.pre.pre, %dec_label_pc_10002fb0.dec_label_pc_10002f50_crit_edge ]
  %v0_10002f50 = phi i32 [ %v0_10002f50.pre, %dec_label_pc_10002f48.dec_label_pc_10002f50_crit_edge ], [ %v1_10002fb0, %dec_label_pc_10002fb0.dec_label_pc_10002f50_crit_edge ]
  store i32 %v0_10002f50, i32* %ctr.global-to-local, align 4
  %v1_10002f58 = sext i8 %v2_10002f40 to i32
  br label %dec_label_pc_10002f54

dec_label_pc_10002f54:                            ; preds = %dec_label_pc_10002f54, %dec_label_pc_10002f50
  %v0_10002f54 = phi i32 [ %v1_10002f60, %dec_label_pc_10002f54 ], [ %v0_10002f54.pre, %dec_label_pc_10002f50 ]
  %v1_10002f54 = add i32 %v0_10002f54, 4
  store i32 %v1_10002f54, i32* %r9.global-to-local, align 4
  %v4_10002f58 = inttoptr i32 %v1_10002f54 to i32*
  store i32 %v1_10002f58, i32* %v4_10002f58, align 4
  %v2_10002f5c = load i32, i32* %r9.global-to-local, align 4
  %v3_10002f5c = add i32 %v2_10002f5c, 4
  %v4_10002f5c = inttoptr i32 %v3_10002f5c to i32*
  store i32 %v1_10002f58, i32* %v4_10002f5c, align 4
  %v0_10002f60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f60 = add i32 %v0_10002f60, 4
  store i32 %v1_10002f60, i32* %r11.global-to-local, align 4
  %v0_10002f64 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10002f64 = add i32 %v0_10002f64, -1
  store i32 %v1_10002f64, i32* %ctr.global-to-local, align 4
  %v2_10002f64 = icmp eq i32 %v1_10002f64, 0
  br i1 %v2_10002f64, label %dec_label_pc_10002f68, label %dec_label_pc_10002f54

dec_label_pc_10002f68:                            ; preds = %dec_label_pc_10002f54, %dec_label_pc_10002fb0, %entry
  %v0_10002f68 = load i32, i32* %r5.global-to-local, align 4
  %v1_10002f68 = urem i32 %v0_10002f68, 8
  store i32 %v1_10002f68, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10002f68, 4
  br i1 %tmp, label %dec_label_pc_10002f7c, label %dec_label_pc_10002f74

dec_label_pc_10002f74:                            ; preds = %dec_label_pc_10002f68
  %v1_10002f74 = sext i8 %v2_10002f40 to i32
  %v2_10002f74 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002f74 = add i32 %v2_10002f74, 4
  %v4_10002f74 = inttoptr i32 %v3_10002f74 to i32*
  store i32 %v1_10002f74, i32* %v4_10002f74, align 4
  store i32 %v3_10002f74, i32* %r11.global-to-local, align 4
  %v0_10002f78 = load i32, i32* @r5, align 4
  %v1_10002f78 = add i32 %v0_10002f78, -4
  store i32 %v1_10002f78, i32* @r5, align 4
  br label %dec_label_pc_10002f7c

dec_label_pc_10002f7c:                            ; preds = %dec_label_pc_10002f68, %dec_label_pc_10002f74
  %v0_10002f7c = phi i32 [ %v1_10002f68, %dec_label_pc_10002f68 ], [ %v1_10002f78, %dec_label_pc_10002f74 ]
  %v3_10002f7c = icmp eq i32 %v0_10002f7c, 0
  %v0_10002f80 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10002f7c, i32 %v0_10002f80)
  %v0_10002f84 = load i32, i32* @r5, align 4
  store i32 %v0_10002f84, i32* %ctr.global-to-local, align 4
  %v0_10002f88 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002f88 = add i32 %v0_10002f88, 3
  store i32 %v1_10002f88, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10002f8c

dec_label_pc_10002f8c:                            ; preds = %dec_label_pc_10002f8c, %dec_label_pc_10002f7c
  %v3_10002f8c = phi i32 [ %v4_10002f8c, %dec_label_pc_10002f8c ], [ %v1_10002f88, %dec_label_pc_10002f7c ]
  %v4_10002f8c = add i32 %v3_10002f8c, 1
  %v5_10002f8c = inttoptr i32 %v4_10002f8c to i8*
  store i8 %v2_10002f40, i8* %v5_10002f8c, align 1
  store i32 %v4_10002f8c, i32* %r9.global-to-local, align 4
  %v0_10002f90 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10002f90 = add i32 %v0_10002f90, -1
  store i32 %v1_10002f90, i32* %ctr.global-to-local, align 4
  %v2_10002f90 = icmp eq i32 %v1_10002f90, 0
  br i1 %v2_10002f90, label %dec_label_pc_10002fbc, label %dec_label_pc_10002f8c

dec_label_pc_10002f98:                            ; preds = %dec_label_pc_10002f48
  %v1_10002f98 = sub nsw i32 4, %v1_10002f48
  store i32 %v1_10002f98, i32* %ctr.global-to-local, align 4
  %v1_10002fa0 = load i32, i32* %r5.global-to-local, align 4
  %v2_10002fa0 = sub i32 %v1_10002fa0, %v1_10002f98
  store i32 %v2_10002fa0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10002fa4

dec_label_pc_10002fa4:                            ; preds = %dec_label_pc_10002fa4, %dec_label_pc_10002f98
  %v3_10002fa4 = phi i32 [ %v1_10002fa8, %dec_label_pc_10002fa4 ], [ %v0_10002f48, %dec_label_pc_10002f98 ]
  %v4_10002fa4 = add i32 %v3_10002fa4, 4
  %v5_10002fa4 = inttoptr i32 %v4_10002fa4 to i8*
  store i8 %v2_10002f40, i8* %v5_10002fa4, align 1
  %v0_10002fa8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002fa8 = add i32 %v0_10002fa8, 1
  store i32 %v1_10002fa8, i32* %r11.global-to-local, align 4
  %v0_10002fac = load i32, i32* %ctr.global-to-local, align 4
  %v1_10002fac = add i32 %v0_10002fac, -1
  store i32 %v1_10002fac, i32* %ctr.global-to-local, align 4
  %v2_10002fac = icmp eq i32 %v1_10002fac, 0
  br i1 %v2_10002fac, label %dec_label_pc_10002fb0, label %dec_label_pc_10002fa4

dec_label_pc_10002fb0:                            ; preds = %dec_label_pc_10002fa4
  %v0_10002fb0 = load i32, i32* %r5.global-to-local, align 4
  %v1_10002fb0 = call i32 @__asm_rlwinm.(i32 %v0_10002fb0, i32 29, i32 3, i32 31)
  store i32 %v1_10002fb0, i32* %r9.global-to-local, align 4
  %v4_10002fb0 = icmp eq i32 %v1_10002fb0, 0
  br i1 %v4_10002fb0, label %dec_label_pc_10002f68, label %dec_label_pc_10002fb0.dec_label_pc_10002f50_crit_edge

dec_label_pc_10002fb0.dec_label_pc_10002f50_crit_edge: ; preds = %dec_label_pc_10002fb0
  %v0_10002f54.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10002f50

dec_label_pc_10002fbc:                            ; preds = %dec_label_pc_10002f8c
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10002fb0, { 1, 2, 0 }
  uselistorder i32 %v1_10002fac, { 1, 0 }
  uselistorder i32 %v1_10002fa8, { 1, 0 }
  uselistorder i32 %v1_10002f90, { 1, 0 }
  uselistorder i32 %v4_10002f8c, { 1, 2, 0 }
  uselistorder i32 %v1_10002f68, { 2, 1, 0 }
  uselistorder i32 %v1_10002f64, { 1, 0 }
  uselistorder i32 %v1_10002f60, { 1, 0 }
  uselistorder i32 %v1_10002f48, { 1, 0 }
  uselistorder i32 %v0_10002f48, { 2, 1, 0 }
  uselistorder i8 %v2_10002f40, { 1, 2, 3, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder label %dec_label_pc_10002f7c, { 1, 0 }
  uselistorder label %dec_label_pc_10002f68, { 1, 0, 2 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_10002fc0 = urem i32 %arg1, 256
  store i32 %v1_10002fc0, i32* %r4.global-to-local, align 4
  %v0_10002fe02 = load i32, i32* @r3, align 4
  %v1_10002fe03 = urem i32 %v0_10002fe02, 4
  %v3_10002fe05 = icmp eq i32 %v1_10002fe03, 0
  br i1 %v3_10002fe05, label %dec_label_pc_10002fe8, label %dec_label_pc_10002fc8

dec_label_pc_10002fc8:                            ; preds = %entry, %dec_label_pc_10002fdc
  %v1_10002fcc = phi i32 [ %v0_10002fe8.pre, %dec_label_pc_10002fdc ], [ %v1_10002fc0, %entry ]
  %v0_10002fc8 = phi i32 [ %v1_10002fdc, %dec_label_pc_10002fdc ], [ %v0_10002fe02, %entry ]
  %v1_10002fc8 = inttoptr i32 %v0_10002fc8 to i8*
  %v2_10002fc8 = load i8, i8* %v1_10002fc8, align 1
  %v3_10002fc8 = zext i8 %v2_10002fc8 to i32
  %v4_10002fcc = icmp eq i32 %v3_10002fc8, %v1_10002fcc
  %v3_10002fd0 = icmp eq i8 %v2_10002fc8, 0
  %v0_10002fd4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10002fcc, i32 %v0_10002fd4)
  br i1 %v3_10002fd0, label %dec_label_pc_100030b8, label %dec_label_pc_10002fdc

dec_label_pc_10002fdc:                            ; preds = %dec_label_pc_10002fc8
  %v0_10002fdc = load i32, i32* @r3, align 4
  %v1_10002fdc = add i32 %v0_10002fdc, 1
  store i32 %v1_10002fdc, i32* @r3, align 4
  %v1_10002fe0 = urem i32 %v1_10002fdc, 4
  %v3_10002fe0 = icmp eq i32 %v1_10002fe0, 0
  %v0_10002fe8.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_10002fe0, label %dec_label_pc_10002fe8, label %dec_label_pc_10002fc8

dec_label_pc_10002fe8:                            ; preds = %dec_label_pc_10002fdc, %entry
  %v0_1000300010 = phi i32 [ %v0_10002fe02, %entry ], [ %v1_10002fdc, %dec_label_pc_10002fdc ]
  %v0_10002fe8 = phi i32 [ %v1_10002fc0, %entry ], [ %v0_10002fe8.pre, %dec_label_pc_10002fdc ]
  %v1_10002fe8 = mul i32 %v0_10002fe8, 256
  %v2_10002ff0 = or i32 %v1_10002fe8, %v0_10002fe8
  %v1_10002ff8 = mul i32 %v2_10002ff0, 65536
  %v2_10002ffc = or i32 %v1_10002ff8, %v2_10002ff0
  br label %dec_label_pc_10003000

dec_label_pc_10003000:                            ; preds = %dec_label_pc_10003000, %dec_label_pc_100030b4, %dec_label_pc_10002fe8
  %v0_10003058 = phi i32 [ %v0_1000300010, %dec_label_pc_10002fe8 ], [ %v1_10003004, %dec_label_pc_100030b4 ], [ %v1_10003004, %dec_label_pc_10003000 ]
  %v1_10003000 = inttoptr i32 %v0_10003058 to i32*
  %v2_10003000 = load i32, i32* %v1_10003000, align 4
  %v1_10003004 = add i32 %v0_10003058, 4
  %v2_1000300c = xor i32 %v2_10003000, %v2_10002ffc
  %v1_10003010 = add i32 %v2_10003000, 2130640639
  %v2_10003018 = xor i32 %v1_10003010, %v2_10003000
  %v1_1000301c = add i32 %v2_1000300c, 2130640639
  %v2_10003020 = and i32 %v2_10003018, -2130640640
  %v3_10003020 = xor i32 %v2_10003020, -2130640640
  %v2_10003024 = xor i32 %v1_1000301c, %v2_1000300c
  %v2_10003028 = and i32 %v2_10003024, -2130640640
  %v3_10003028 = xor i32 %v2_10003028, -2130640640
  %v1_10003034 = add i32 %v0_10003058, 1
  %tmp = or i32 %v3_10003028, %v3_10003020
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_10003000, label %dec_label_pc_10003040

dec_label_pc_10003040:                            ; preds = %dec_label_pc_10003000
  %v2_10003040 = inttoptr i32 %v0_10003058 to i8*
  %v3_10003040 = load i8, i8* %v2_10003040, align 1
  %v4_10003040 = zext i8 %v3_10003040 to i32
  %v1_10003044 = add i32 %v0_10003058, 2
  %v1_10003048 = add i32 %v0_10003058, 3
  %v4_1000304c = icmp eq i32 %v4_10003040, %v0_10002fe8
  br i1 %v4_1000304c, label %dec_label_pc_10003058, label %dec_label_pc_10003060

dec_label_pc_10003058:                            ; preds = %dec_label_pc_10003040
  ret i32 %v0_10003058

dec_label_pc_10003060:                            ; preds = %dec_label_pc_10003040
  %v3_10003050 = icmp eq i8 %v3_10003040, 0
  br i1 %v3_10003050, label %dec_label_pc_100030b8, label %dec_label_pc_10003064

dec_label_pc_10003064:                            ; preds = %dec_label_pc_10003060
  %v2_10003064 = inttoptr i32 %v1_10003034 to i8*
  %v3_10003064 = load i8, i8* %v2_10003064, align 1
  %v4_10003064 = zext i8 %v3_10003064 to i32
  %v4_10003068 = icmp eq i32 %v4_10003064, %v0_10002fe8
  br i1 %v4_10003068, label %dec_label_pc_10003074, label %dec_label_pc_1000307c

dec_label_pc_10003074:                            ; preds = %dec_label_pc_10003064
  ret i32 %v1_10003034

dec_label_pc_1000307c:                            ; preds = %dec_label_pc_10003064
  %v3_1000306c = icmp eq i8 %v3_10003064, 0
  br i1 %v3_1000306c, label %dec_label_pc_100030b8, label %dec_label_pc_10003080

dec_label_pc_10003080:                            ; preds = %dec_label_pc_1000307c
  %v2_10003080 = inttoptr i32 %v1_10003044 to i8*
  %v3_10003080 = load i8, i8* %v2_10003080, align 1
  %v4_10003080 = zext i8 %v3_10003080 to i32
  %v4_10003084 = icmp eq i32 %v4_10003080, %v0_10002fe8
  br i1 %v4_10003084, label %dec_label_pc_10003090, label %dec_label_pc_10003098

dec_label_pc_10003090:                            ; preds = %dec_label_pc_10003080
  ret i32 %v1_10003044

dec_label_pc_10003098:                            ; preds = %dec_label_pc_10003080
  %v3_10003088 = icmp eq i8 %v3_10003080, 0
  br i1 %v3_10003088, label %dec_label_pc_100030b8, label %dec_label_pc_1000309c

dec_label_pc_1000309c:                            ; preds = %dec_label_pc_10003098
  %v2_1000309c = inttoptr i32 %v1_10003048 to i8*
  %v3_1000309c = load i8, i8* %v2_1000309c, align 1
  %v4_1000309c = zext i8 %v3_1000309c to i32
  %v4_100030a0 = icmp eq i32 %v4_1000309c, %v0_10002fe8
  br i1 %v4_100030a0, label %dec_label_pc_100030ac, label %dec_label_pc_100030b4

dec_label_pc_100030ac:                            ; preds = %dec_label_pc_1000309c
  ret i32 %v1_10003048

dec_label_pc_100030b4:                            ; preds = %dec_label_pc_1000309c
  %v3_100030a4 = icmp eq i8 %v3_1000309c, 0
  br i1 %v3_100030a4, label %dec_label_pc_100030b8, label %dec_label_pc_10003000

dec_label_pc_100030b8:                            ; preds = %dec_label_pc_10002fc8, %dec_label_pc_100030b4, %dec_label_pc_10003098, %dec_label_pc_1000307c, %dec_label_pc_10003060
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10003004, { 1, 0 }
  uselistorder i32 %v2_10003000, { 0, 2, 1 }
  uselistorder i32 %v0_10003058, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_10002ff0, { 1, 0 }
  uselistorder i32 %v0_10002fe8, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10002fdc, { 1, 0, 3, 2 }
  uselistorder i32 %v0_10002fe02, { 2, 1, 0 }
  uselistorder i32 %v1_10002fc0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100030b8, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10003000, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002fc8, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100030cc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100030c4

dec_label_pc_100030c4:                            ; preds = %dec_label_pc_100030e8, %entry
  %v0_100030cc = phi i32 [ %v1_100030d0, %dec_label_pc_100030e8 ], [ %v0_100030cc.pre, %entry ]
  %v0_100030c4 = phi i32 [ %v1_100030c8, %dec_label_pc_100030e8 ], [ %tmp, %entry ]
  %v1_100030c4 = inttoptr i32 %v0_100030c4 to i8*
  %v2_100030c4 = load i8, i8* %v1_100030c4, align 1
  %v3_100030c4 = zext i8 %v2_100030c4 to i32
  %v1_100030cc = inttoptr i32 %v0_100030cc to i8*
  %v2_100030cc = load i8, i8* %v1_100030cc, align 1
  %v3_100030cc = zext i8 %v2_100030cc to i32
  %v3_100030d4 = icmp eq i8 %v2_100030c4, 0
  br i1 %v3_100030d4, label %dec_label_pc_100030e0, label %dec_label_pc_100030e8

dec_label_pc_100030e0:                            ; preds = %dec_label_pc_100030c4
  %v1_100030e0 = sub nsw i32 0, %v3_100030cc
  ret i32 %v1_100030e0

dec_label_pc_100030e8:                            ; preds = %dec_label_pc_100030c4
  %v4_100030d8 = icmp eq i8 %v2_100030c4, %v2_100030cc
  %v1_100030d0 = add i32 %v0_100030cc, 1
  %v1_100030c8 = add i32 %v0_100030c4, 1
  br i1 %v4_100030d8, label %dec_label_pc_100030c4, label %dec_label_pc_100030ec

dec_label_pc_100030ec:                            ; preds = %dec_label_pc_100030e8
  %v2_100030ec = sub nsw i32 %v3_100030c4, %v3_100030cc
  ret i32 %v2_100030ec

; uselistorder directives
  uselistorder i32 %v3_100030cc, { 1, 0 }
  uselistorder i32 %v0_100030c4, { 1, 0 }
  uselistorder i32 %v0_100030cc, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_100030f4 = add i32 %arg1, -1
  %v1_100030f8 = sub i32 %v2_100030f4, %tmp
  store i32 %v1_100030f8, i32* %r9.global-to-local, align 4
  %v2_100030fc4 = load i8, i8* %arg2, align 1
  %v1_100031006 = add i32 %tmp, 1
  store i32 %v1_100031006, i32* %r4.global-to-local, align 4
  %v3_100031048 = icmp eq i8 %v2_100030fc4, 0
  store i1 %v3_100031048, i1* %cr7_eq.global-to-local, align 1
  %v5_100031089 = inttoptr i32 %arg1 to i8*
  store i8 %v2_100030fc4, i8* %v5_100031089, align 1
  %v0_1000310c10 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000310c10, label %dec_label_pc_10003110, label %dec_label_pc_100030fc.dec_label_pc_100030fc_crit_edge

dec_label_pc_100030fc.dec_label_pc_100030fc_crit_edge: ; preds = %entry, %dec_label_pc_100030fc.dec_label_pc_100030fc_crit_edge
  %v0_100030fc.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10003108.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_100030fc = inttoptr i32 %v0_100030fc.pre to i8*
  %v2_100030fc = load i8, i8* %v1_100030fc, align 1
  %v1_10003100 = add i32 %v0_100030fc.pre, 1
  store i32 %v1_10003100, i32* %r4.global-to-local, align 4
  %v3_10003104 = icmp eq i8 %v2_100030fc, 0
  store i1 %v3_10003104, i1* %cr7_eq.global-to-local, align 1
  %v4_10003108 = add i32 %v1_10003100, %v2_10003108.pre
  %v5_10003108 = inttoptr i32 %v4_10003108 to i8*
  store i8 %v2_100030fc, i8* %v5_10003108, align 1
  %v0_1000310c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000310c, label %dec_label_pc_10003110, label %dec_label_pc_100030fc.dec_label_pc_100030fc_crit_edge

dec_label_pc_10003110:                            ; preds = %dec_label_pc_100030fc.dec_label_pc_100030fc_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100030fc.dec_label_pc_100030fc_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_10003114 = load i32, i32* @r3, align 4
  %v1_1000312c3 = urem i32 %v0_10003114, 4
  %v3_1000312c5 = icmp eq i32 %v1_1000312c3, 0
  br i1 %v3_1000312c5, label %dec_label_pc_10003134, label %dec_label_pc_1000311c

dec_label_pc_1000311c:                            ; preds = %entry, %dec_label_pc_10003128
  %v0_10003128 = phi i32 [ %v1_10003128, %dec_label_pc_10003128 ], [ %v0_10003114, %entry ]
  %v1_1000311c = inttoptr i32 %v0_10003128 to i8*
  %v2_1000311c = load i8, i8* %v1_1000311c, align 1
  %v3_10003120 = icmp eq i8 %v2_1000311c, 0
  br i1 %v3_10003120, label %dec_label_pc_10003168, label %dec_label_pc_10003128

dec_label_pc_10003128:                            ; preds = %dec_label_pc_1000311c
  %v1_10003128 = add i32 %v0_10003128, 1
  %v1_1000312c = urem i32 %v1_10003128, 4
  %v3_1000312c = icmp eq i32 %v1_1000312c, 0
  br i1 %v3_1000312c, label %dec_label_pc_10003134, label %dec_label_pc_1000311c

dec_label_pc_10003134:                            ; preds = %dec_label_pc_10003128, %entry
  %v0_10003138 = phi i32 [ %v0_10003114, %entry ], [ %v1_10003128, %dec_label_pc_10003128 ]
  br label %dec_label_pc_10003140

dec_label_pc_10003140:                            ; preds = %dec_label_pc_100031a0, %dec_label_pc_10003140, %dec_label_pc_10003134
  %v1_1000317c = phi i32 [ %v0_10003138, %dec_label_pc_10003134 ], [ %v1_10003144, %dec_label_pc_10003140 ], [ %v1_10003144, %dec_label_pc_100031a0 ]
  %v1_10003140 = inttoptr i32 %v1_1000317c to i32*
  %v2_10003140 = load i32, i32* %v1_10003140, align 4
  %v1_10003144 = add i32 %v1_1000317c, 4
  %v1_10003150 = add i32 %v2_10003140, -16843009
  %v2_10003154 = and i32 %v1_10003150, -2139062144
  %v5_10003154 = icmp eq i32 %v2_10003154, 0
  br i1 %v5_10003154, label %dec_label_pc_10003140, label %dec_label_pc_1000315c

dec_label_pc_1000315c:                            ; preds = %dec_label_pc_10003140
  %v2_1000315c = inttoptr i32 %v1_1000317c to i8*
  %v3_1000315c = load i8, i8* %v2_1000315c, align 1
  %v3_10003160 = icmp eq i8 %v3_1000315c, 0
  br i1 %v3_10003160, label %dec_label_pc_10003168, label %dec_label_pc_10003170

dec_label_pc_10003168:                            ; preds = %dec_label_pc_1000311c, %dec_label_pc_1000315c
  %v1_10003168 = phi i32 [ %v1_1000317c, %dec_label_pc_1000315c ], [ %v0_10003128, %dec_label_pc_1000311c ]
  %v2_10003168 = sub i32 %v1_10003168, %v0_10003114
  ret i32 %v2_10003168

dec_label_pc_10003170:                            ; preds = %dec_label_pc_1000315c
  %v1_10003170 = add i32 %v1_1000317c, 1
  %v2_10003170 = inttoptr i32 %v1_10003170 to i8*
  %v3_10003170 = load i8, i8* %v2_10003170, align 1
  %v3_10003174 = icmp eq i8 %v3_10003170, 0
  br i1 %v3_10003174, label %dec_label_pc_1000317c, label %dec_label_pc_10003188

dec_label_pc_1000317c:                            ; preds = %dec_label_pc_10003170
  %v2_1000317c = sub i32 %v1_1000317c, %v0_10003114
  %v1_10003180 = add i32 %v2_1000317c, 1
  ret i32 %v1_10003180

dec_label_pc_10003188:                            ; preds = %dec_label_pc_10003170
  %v1_10003188 = add i32 %v1_1000317c, 2
  %v2_10003188 = inttoptr i32 %v1_10003188 to i8*
  %v3_10003188 = load i8, i8* %v2_10003188, align 1
  %v3_1000318c = icmp eq i8 %v3_10003188, 0
  br i1 %v3_1000318c, label %dec_label_pc_10003194, label %dec_label_pc_100031a0

dec_label_pc_10003194:                            ; preds = %dec_label_pc_10003188
  %v2_10003194 = sub i32 %v1_1000317c, %v0_10003114
  %v1_10003198 = add i32 %v2_10003194, 2
  ret i32 %v1_10003198

dec_label_pc_100031a0:                            ; preds = %dec_label_pc_10003188
  %v1_100031a0 = add i32 %v1_1000317c, 3
  %v2_100031a0 = inttoptr i32 %v1_100031a0 to i8*
  %v3_100031a0 = load i8, i8* %v2_100031a0, align 1
  %v3_100031a4 = icmp eq i8 %v3_100031a0, 0
  br i1 %v3_100031a4, label %dec_label_pc_100031ac, label %dec_label_pc_10003140

dec_label_pc_100031ac:                            ; preds = %dec_label_pc_100031a0
  %v2_100031ac = sub i32 %v1_1000317c, %v0_10003114
  %v1_100031b0 = add i32 %v2_100031ac, 3
  ret i32 %v1_100031b0

; uselistorder directives
  uselistorder i32 %v1_10003144, { 1, 0 }
  uselistorder i32 %v1_1000317c, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_10003128, { 1, 0, 2 }
  uselistorder i32 %v0_10003114, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10003168, { 1, 0 }
  uselistorder label %dec_label_pc_1000311c, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_100031c4 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_100031c4
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1001c3c0.51 to i32), i32* @r5, align 4
  %v1_100031d0 = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_1001c3c0.51 to i32))
  ret i32 %v1_100031d0
}

define i32 @ntohl() local_unnamed_addr {
entry:
  %v0_100031d4 = load i32, i32* @r3, align 4
  ret i32 %v0_100031d4
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_100031d8 = load i32, i32* @r3, align 4
  ret i32 %v0_100031d8
}

define i32 @htonl() local_unnamed_addr {
entry:
  %v0_100031dc = load i32, i32* @r3, align 4
  ret i32 %v0_100031dc
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_100031e0 = load i32, i32* @r3, align 4
  ret i32 %v0_100031e0
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_100031ec = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100031ec, i32* @r4, align 4
  store i32 268448248, i32* @lr, align 4
  %v1_100031f4 = bitcast i32* %stack_var_-24 to i8*
  %v2_100031f4 = call i32 @inet_aton(i8* %v1_100031f4)
  %v3_100031f8 = icmp eq i32 %v2_100031f4, 0
  br i1 %v3_100031f8, label %dec_label_pc_10003208, label %dec_label_pc_10003204

dec_label_pc_10003204:                            ; preds = %entry
  %v3_10003204 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10003208

dec_label_pc_10003208:                            ; preds = %entry, %dec_label_pc_10003204
  %v0_10003214 = phi i32 [ -1, %entry ], [ %v3_10003204, %dec_label_pc_10003204 ]
  ret i32 %v0_10003214

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003208, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000322c = call i32 @__GI___h_errno_location()
  %v2_1000323c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268448340, i32* @lr, align 4
  %v7_10003250 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_1001c5f4.52, i32 ptrtoint (i32* @global_var_1001c428.53 to i32), i32 460, i32 %v2_1000323c, i32 %v0_1000322c)
  %v3_10003258 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_10003258
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_10003270 = load i32, i32* @lr, align 4
  store i32 %v0_10003270, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_10003278 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_10003298 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_10003298, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_10003278, label %dec_label_pc_1000359c, label %dec_label_pc_100032a4

dec_label_pc_100032a4:                            ; preds = %entry
  %v0_100032a4 = call i32 @__errno_location()
  store i32 %v0_100032a4, i32* %r3.global-to-local, align 4
  %v1_100032ac = inttoptr i32 %v0_100032a4 to i32*
  %v2_100032ac = load i32, i32* %v1_100032ac, align 4
  store i32 %v2_100032ac, i32* @r27, align 4
  store i32 %v0_100032a4, i32* %r28.global-to-local, align 4
  %v0_100032b4 = load i32, i32* @r31, align 4
  store i32 %v0_100032b4, i32* %v1_100032ac, align 4
  %v0_100032b8 = load i32, i32* %r26.global-to-local, align 4
  %v0_100032bc = load i32, i32* @r23, align 4
  store i32 %v0_100032bc, i32* %r3.global-to-local, align 4
  %v0_100032c0 = load i32, i32* %r30.global-to-local, align 4
  %v0_100032c4 = load i32, i32* %r29.global-to-local, align 4
  %v0_100032c8 = load i32, i32* %r20.global-to-local, align 4
  %v0_100032cc = load i32, i32* @r24, align 4
  store i32 268448468, i32* @lr, align 4
  %v7_100032d0 = call i32 @__get_hosts_byname_r(i32 %v0_100032bc, i32 2, i32 %v0_100032b8, i32 %v0_100032c0, i32 %v0_100032c4, i32 %v0_100032c8, i32 %v0_100032cc)
  store i32 %v7_100032d0, i32* %r3.global-to-local, align 4
  %v3_100032d4 = icmp eq i32 %v7_100032d0, 0
  br i1 %v3_100032d4, label %dec_label_pc_1000359c, label %dec_label_pc_100032dc

dec_label_pc_100032dc:                            ; preds = %dec_label_pc_100032a4
  %v0_100032dc = load i32, i32* @r24, align 4
  %v1_100032dc = inttoptr i32 %v0_100032dc to i32*
  %v2_100032dc = load i32, i32* %v1_100032dc, align 4
  store i32 %v2_100032dc, i32* %r0.global-to-local, align 4
  %v3_100032e0 = icmp eq i32 %v2_100032dc, 1
  br i1 %v3_100032e0, label %dec_label_pc_10003304, label %dec_label_pc_100032e8

dec_label_pc_100032e8:                            ; preds = %dec_label_pc_100032dc
  %v3_100032e8 = icmp eq i32 %v2_100032dc, 4
  br i1 %v3_100032e8, label %dec_label_pc_10003304, label %dec_label_pc_100032f0

dec_label_pc_100032f0:                            ; preds = %dec_label_pc_100032e8
  %v3_100032f0 = icmp eq i32 %v2_100032dc, -1
  br i1 %v3_100032f0, label %dec_label_pc_100032f8, label %dec_label_pc_1000359c

dec_label_pc_100032f8:                            ; preds = %dec_label_pc_100032f0
  %v0_100032f8 = load i32, i32* @r28, align 4
  %v1_100032f8 = inttoptr i32 %v0_100032f8 to i32*
  %v2_100032f8 = load i32, i32* %v1_100032f8, align 4
  store i32 %v2_100032f8, i32* %r0.global-to-local, align 4
  %v3_100032fc = icmp eq i32 %v2_100032f8, 2
  br i1 %v3_100032fc, label %dec_label_pc_10003304, label %dec_label_pc_1000359c

dec_label_pc_10003304:                            ; preds = %dec_label_pc_100032f8, %dec_label_pc_100032e8, %dec_label_pc_100032dc
  %v0_10003304 = load i32, i32* @r30, align 4
  %v1_10003304 = sub i32 0, %v0_10003304
  store i32 %v1_10003304, i32* %r0.global-to-local, align 4
  %v0_10003308 = load i32, i32* @r27, align 4
  %v1_10003308 = load i32, i32* @r28, align 4
  %v2_10003308 = inttoptr i32 %v1_10003308 to i32*
  store i32 %v0_10003308, i32* %v2_10003308, align 4
  %v0_1000330c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000330c = urem i32 %v0_1000330c, 4
  store i32 %v1_1000330c, i32* %r0.global-to-local, align 4
  %v3_1000330c = icmp eq i32 %v1_1000330c, 0
  %v0_10003324.pre = load i32, i32* @r29, align 4
  br i1 %v3_1000330c, label %dec_label_pc_10003324, label %dec_label_pc_10003314

dec_label_pc_10003314:                            ; preds = %dec_label_pc_10003304
  %v2_10003314 = icmp ult i32 %v0_10003324.pre, %v1_1000330c
  br i1 %v2_10003314, label %dec_label_pc_10003598, label %dec_label_pc_1000331c

dec_label_pc_1000331c:                            ; preds = %dec_label_pc_10003314
  %v2_1000331c = sub i32 %v0_10003324.pre, %v1_1000330c
  store i32 %v2_1000331c, i32* @r29, align 4
  %v0_10003320 = load i32, i32* @r30, align 4
  %v2_10003320 = add i32 %v0_10003320, %v1_1000330c
  store i32 %v2_10003320, i32* @r30, align 4
  br label %dec_label_pc_10003324

dec_label_pc_10003324:                            ; preds = %dec_label_pc_10003304, %dec_label_pc_1000331c
  %v0_10003324 = phi i32 [ %v2_1000331c, %dec_label_pc_1000331c ], [ %v0_10003324.pre, %dec_label_pc_10003304 ]
  %v1_1000332c = load i32, i32* @r24, align 4
  %v2_1000332c = inttoptr i32 %v1_1000332c to i32*
  store i32 -1, i32* %v2_1000332c, align 4
  %tmp29 = icmp ult i32 %v0_10003324, 4
  br i1 %tmp29, label %dec_label_pc_10003598, label %dec_label_pc_10003334

dec_label_pc_10003334:                            ; preds = %dec_label_pc_10003324
  %v0_10003334 = load i32, i32* @r29, align 4
  %v1_10003334 = add i32 %v0_10003334, -4
  store i32 %v1_10003334, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10003334, 8
  br i1 %tmp30, label %dec_label_pc_10003598, label %dec_label_pc_10003340

dec_label_pc_10003340:                            ; preds = %dec_label_pc_10003334
  %v1_10003340 = add i32 %v0_10003334, -12
  store i32 %v1_10003340, i32* %r0.global-to-local, align 4
  %v0_10003344 = load i32, i32* @r30, align 4
  %v1_10003344 = add i32 %v0_10003344, 4
  store i32 %v1_10003344, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_10003350 = inttoptr i32 %v1_10003344 to i32*
  store i32 %v0_10003344, i32* %v3_10003350, align 4
  %v0_10003354 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003354 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003354 = add i32 %v1_10003354, 4
  %v3_10003354 = inttoptr i32 %v2_10003354 to i32*
  store i32 %v0_10003354, i32* %v3_10003354, align 4
  %tmp31 = icmp ult i32 %v1_10003340, 32
  br i1 %tmp31, label %dec_label_pc_10003598, label %dec_label_pc_1000335c

dec_label_pc_1000335c:                            ; preds = %dec_label_pc_10003340
  %v0_1000335c = load i32, i32* @r29, align 4
  %v1_1000335c = add i32 %v0_1000335c, -44
  %tmp32 = icmp ult i32 %v1_1000335c, 256
  br i1 %tmp32, label %dec_label_pc_10003598, label %dec_label_pc_10003368

dec_label_pc_10003368:                            ; preds = %dec_label_pc_1000335c
  %v0_10003368 = load i32, i32* @r30, align 4
  %v1_10003368 = add i32 %v0_10003368, 44
  store i32 %v1_10003368, i32* @r31, align 4
  %v0_1000336c = load i32, i32* @r23, align 4
  store i32 %v0_1000336c, i32* @r4, align 4
  %v1_10003374 = add i32 %v0_10003368, 12
  store i32 %v1_10003374, i32* %r21.global-to-local, align 4
  store i32 %v1_10003368, i32* %r3.global-to-local, align 4
  store i32 268448640, i32* @lr, align 4
  %v3_1000337c = call i32 @strncpy(i32 %v1_10003368, i32 %v0_1000336c, i32 %v1_1000335c)
  %v0_10003380 = load i32, i32* @r31, align 4
  %v1_10003380 = load i32, i32* @r30, align 4
  %v2_10003380 = add i32 %v1_10003380, 12
  %v3_10003380 = inttoptr i32 %v2_10003380 to i32*
  store i32 %v0_10003380, i32* %v3_10003380, align 4
  %v0_10003384 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003384 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003384 = add i32 %v1_10003384, 4
  %v3_10003384 = inttoptr i32 %v2_10003384 to i32*
  store i32 %v0_10003384, i32* %v3_10003384, align 4
  %v0_10003388 = load i32, i32* @r23, align 4
  store i32 %v0_10003388, i32* %r3.global-to-local, align 4
  %v0_1000338c = load i32, i32* @r30, align 4
  store i32 %v0_1000338c, i32* @r4, align 4
  store i32 268448660, i32* @lr, align 4
  %v2_10003390 = inttoptr i32 %v0_10003388 to i8*
  %v3_10003390 = call i32 @inet_aton(i8* %v2_10003390)
  store i32 %v3_10003390, i32* %r3.global-to-local, align 4
  store i32 %v3_10003390, i32* %r22.global-to-local, align 4
  %v3_10003394 = icmp eq i32 %v3_10003390, 0
  br i1 %v3_10003394, label %dec_label_pc_100033c8, label %dec_label_pc_1000339c

dec_label_pc_1000339c:                            ; preds = %dec_label_pc_10003368
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100033a4 = load i32, i32* @r26, align 4
  %v2_100033a4 = add i32 %v1_100033a4, 8
  %v3_100033a4 = inttoptr i32 %v2_100033a4 to i32*
  store i32 2, i32* %v3_100033a4, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_100033ac = load i32, i32* @r31, align 4
  %v1_100033ac = load i32, i32* @r26, align 4
  %v2_100033ac = inttoptr i32 %v1_100033ac to i32*
  store i32 %v0_100033ac, i32* %v2_100033ac, align 4
  %v0_100033b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100033b0 = load i32, i32* @r26, align 4
  %v2_100033b0 = add i32 %v1_100033b0, 12
  %v3_100033b0 = inttoptr i32 %v2_100033b0 to i32*
  store i32 %v0_100033b0, i32* %v3_100033b0, align 4
  %v0_100033b4 = load i32, i32* %r25.global-to-local, align 4
  %v1_100033b4 = load i32, i32* @r26, align 4
  %v2_100033b4 = add i32 %v1_100033b4, 16
  %v3_100033b4 = inttoptr i32 %v2_100033b4 to i32*
  store i32 %v0_100033b4, i32* %v3_100033b4, align 4
  %v0_100033b8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100033b8 = load i32, i32* @r26, align 4
  %v2_100033b8 = add i32 %v1_100033b8, 4
  %v3_100033b8 = inttoptr i32 %v2_100033b8 to i32*
  store i32 %v0_100033b8, i32* %v3_100033b8, align 4
  %v0_100033bc = load i32, i32* @r26, align 4
  %v1_100033bc = load i32, i32* @r20, align 4
  %v2_100033bc = inttoptr i32 %v1_100033bc to i32*
  store i32 %v0_100033bc, i32* %v2_100033bc, align 4
  %v0_100033c0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100033c0 = load i32, i32* @r24, align 4
  %v2_100033c0 = inttoptr i32 %v1_100033c0 to i32*
  store i32 %v0_100033c0, i32* %v2_100033c0, align 4
  br label %dec_label_pc_1000359c

dec_label_pc_100033c8:                            ; preds = %dec_label_pc_10003368
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268448720, i32* @lr, align 4
  %v0_100033cc = call i32 @__open_nameservers()
  store i32 ptrtoint (i32* @global_var_1001c200.54 to i32), i32* %r29.global-to-local, align 4
  %v2_100033d4 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_100033d4, i32* %r28.global-to-local, align 4
  store i32 %v2_100033d4, i32* @r3, align 4
  %v0_100033e8 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_1001c200.54 to i32), i32* %r3.global-to-local, align 4
  %v0_100033f0 = call i32 @__pthread_return_0()
  %v3_100033f8 = load i32, i32* @global_var_1001c3ec.56, align 4
  store i32 %v3_100033f8, i32* %r29.global-to-local, align 4
  store i32 %v2_100033d4, i32* @r3, align 4
  %v0_10003404 = call i32 @__pthread_return_void()
  %v0_1000340c = load i32, i32* @r23, align 4
  store i32 %v0_1000340c, i32* %r3.global-to-local, align 4
  %v2_1000341c = ptrtoint i32* %stack_var_-120 to i32
  %v2_10003420 = ptrtoint i32* %stack_var_-100 to i32
  %v0_10003424 = load i32, i32* %r22.global-to-local, align 4
  store i32 268448820, i32* @lr, align 4
  %v6_10003430 = inttoptr i32 %v0_1000340c to i8*
  %v7_10003430 = call i32 @__dns_lookup(i8* %v6_10003430, i32 1, i32 %v3_100033f8, i32 ptrtoint (i32* @global_var_1001e6e0.57 to i32), i32 %v2_1000341c, i32 %v2_10003420)
  store i32 %v7_10003430, i32* %r3.global-to-local, align 4
  %v1_10003434 = icmp slt i32 %v7_10003430, 0
  br i1 %v1_10003434, label %dec_label_pc_1000357c, label %dec_label_pc_1000343c

dec_label_pc_1000343c:                            ; preds = %dec_label_pc_100033c8
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_10003444 = add i32 %tmp19, 4
  %v2_10003448 = mul i32 %v0_10003424, %v1_10003444
  %v1_1000344c = add i32 %v2_10003448, 256
  %v1_10003450 = load i32, i32* @r27, align 4
  %v3_10003450 = icmp ugt i32 %v1_1000344c, %v1_10003450
  br i1 %v3_10003450, label %dec_label_pc_10003458, label %dec_label_pc_10003474

dec_label_pc_10003458:                            ; preds = %dec_label_pc_1000343c
  %v3_10003458 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10003458, i32* %r3.global-to-local, align 4
  store i32 268448864, i32* @lr, align 4
  %v1_1000345c = call i32 @free(i32 %v3_10003458)
  %v3_10003460 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10003460, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003468.58 to i32), i32* @lr, align 4
  %v1_10003464 = call i32 @free(i32 %v3_10003460)
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_1000346c = load i32, i32* @r19, align 4
  %v1_1000346c = load i32, i32* @r24, align 4
  %v2_1000346c = inttoptr i32 %v1_1000346c to i32*
  store i32 %v0_1000346c, i32* %v2_1000346c, align 4
  br label %dec_label_pc_1000359c

dec_label_pc_10003474:                            ; preds = %dec_label_pc_1000343c
  %v3_10003474 = icmp eq i32 %v0_10003424, 0
  br i1 %v3_10003474, label %dec_label_pc_10003474.dec_label_pc_10003518_crit_edge, label %dec_label_pc_1000347c

dec_label_pc_10003474.dec_label_pc_10003518_crit_edge: ; preds = %dec_label_pc_10003474
  %v0_10003520.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10003518

dec_label_pc_1000347c:                            ; preds = %dec_label_pc_10003474
  %v2_1000347c = mul i32 %v0_10003424, %tmp19
  store i32 %v2_1000347c, i32* @r5, align 4
  %v0_10003480 = load i32, i32* @r30, align 4
  %v1_10003480 = add i32 %v0_10003480, 36
  store i32 %v1_10003480, i32* %r3.global-to-local, align 4
  %v0_10003484 = load i32, i32* @r31, align 4
  store i32 268448908, i32* @lr, align 4
  %v2_10003488 = call i32 @memmove(i32 %v1_10003480, i32 %v0_10003484)
  store i32 %v2_10003488, i32* %r3.global-to-local, align 4
  store i32 %v2_1000347c, i32* %r0.global-to-local, align 4
  %v0_10003498 = load i32, i32* @r30, align 4
  %v1_10003498 = load i32, i32* @r31, align 4
  %v3_10003498 = add i32 %v1_10003498, %v2_1000347c
  %v4_10003498 = inttoptr i32 %v3_10003498 to i32*
  store i32 %v0_10003498, i32* %v4_10003498, align 4
  %v0_1000349c = load i32, i32* @r31, align 4
  %v1_1000349c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000349c = add i32 %v1_1000349c, %v0_1000349c
  store i32 %v2_1000349c, i32* @r25, align 4
  %v1_100034a4 = add i32 %v0_10003424, -1
  store i32 %v1_100034a4, i32* %r11.global-to-local, align 4
  %v1_100034a8 = add i32 %v0_10003424, 1
  %v2_100034ac = icmp sgt i32 %v1_100034a4, -1
  store i32 %v1_100034a8, i32* %ctr.global-to-local, align 4
  br i1 %v2_100034ac, label %dec_label_pc_100034dc.preheader, label %dec_label_pc_100034b8

dec_label_pc_100034b8:                            ; preds = %dec_label_pc_1000347c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100034dc.preheader

dec_label_pc_100034dc.preheader:                  ; preds = %dec_label_pc_100034b8, %dec_label_pc_1000347c
  %v0_100034e46 = phi i32 [ 1, %dec_label_pc_100034b8 ], [ %v1_100034a8, %dec_label_pc_1000347c ]
  %v1_100034dc3 = mul i32 %v1_100034a4, 4
  store i32 %v1_100034dc3, i32* %r0.global-to-local, align 4
  %v2_100034e05 = add i32 %v2_1000349c, %v1_100034dc3
  %v1_100034e47 = add i32 %v0_100034e46, -1
  store i32 %v1_100034e47, i32* %ctr.global-to-local, align 4
  %v2_100034e48 = icmp eq i32 %v1_100034e47, 0
  br i1 %v2_100034e48, label %dec_label_pc_100034e8, label %dec_label_pc_100034c4

dec_label_pc_100034c4:                            ; preds = %dec_label_pc_100034dc.preheader, %dec_label_pc_100034c4.dec_label_pc_100034c4_crit_edge
  %v1_100034d8 = phi i32 [ %v2_100034e0, %dec_label_pc_100034c4.dec_label_pc_100034c4_crit_edge ], [ %v2_100034e05, %dec_label_pc_100034dc.preheader ]
  %v0_100034d0 = phi i32 [ %v0_100034d0.pre, %dec_label_pc_100034c4.dec_label_pc_100034c4_crit_edge ], [ %v0_1000349c, %dec_label_pc_100034dc.preheader ]
  %v0_100034c8 = phi i32 [ %v0_100034dc, %dec_label_pc_100034c4.dec_label_pc_100034c4_crit_edge ], [ %v1_100034a4, %dec_label_pc_100034dc.preheader ]
  %v2_100034c8 = mul i32 %v0_100034c8, %tmp19
  %v1_100034cc = add i32 %v0_100034c8, -1
  store i32 %v1_100034cc, i32* %r11.global-to-local, align 4
  %v2_100034d0 = add i32 %v0_100034d0, -8
  %v1_100034d4 = add i32 %v2_100034d0, %v2_100034c8
  %v2_100034d8 = add i32 %v1_100034d8, 4
  %v3_100034d8 = inttoptr i32 %v2_100034d8 to i32*
  store i32 %v1_100034d4, i32* %v3_100034d8, align 4
  %v0_100034dc = load i32, i32* %r11.global-to-local, align 4
  %v1_100034dc = mul i32 %v0_100034dc, 4
  store i32 %v1_100034dc, i32* %r0.global-to-local, align 4
  %v1_100034e0 = load i32, i32* @r25, align 4
  %v0_100034e4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100034e4 = add i32 %v0_100034e4, -1
  store i32 %v1_100034e4, i32* %ctr.global-to-local, align 4
  %v2_100034e4 = icmp eq i32 %v1_100034e4, 0
  br i1 %v2_100034e4, label %dec_label_pc_100034e8, label %dec_label_pc_100034c4.dec_label_pc_100034c4_crit_edge

dec_label_pc_100034c4.dec_label_pc_100034c4_crit_edge: ; preds = %dec_label_pc_100034c4
  %v2_100034e0 = add i32 %v1_100034e0, %v1_100034dc
  %v0_100034d0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100034c4

dec_label_pc_100034e8:                            ; preds = %dec_label_pc_100034c4, %dec_label_pc_100034dc.preheader
  %v1_100034f4 = phi i32 [ %v2_1000349c, %dec_label_pc_100034dc.preheader ], [ %v1_100034e0, %dec_label_pc_100034c4 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100034f0 = mul i32 %v0_10003424, 4
  %v2_100034f4 = add i32 %v1_100034f0, 4
  %v2_100034f8 = add i32 %v2_100034f4, %v1_100034f4
  %v3_100034f8 = inttoptr i32 %v2_100034f8 to i32*
  store i32 0, i32* %v3_100034f8, align 4
  %v0_10003504 = load i32, i32* @r25, align 4
  %v2_10003504 = add i32 %v0_10003504, %v1_100034f0
  store i32 %v2_10003504, i32* %r11.global-to-local, align 4
  %v1_10003508 = load i32, i32* @r31, align 4
  %v2_10003508 = sub i32 %v1_10003508, %v2_10003504
  %v1_1000350c = add i32 %v2_10003504, 8
  store i32 %v1_1000350c, i32* @r31, align 4
  %v0_10003510 = load i32, i32* @r27, align 4
  %v2_10003510 = add i32 %v0_10003510, %v2_10003508
  %v1_10003514 = add i32 %v2_10003510, -8
  br label %dec_label_pc_10003518

dec_label_pc_10003518:                            ; preds = %dec_label_pc_10003474.dec_label_pc_10003518_crit_edge, %dec_label_pc_100034e8
  %v0_10003520 = phi i32 [ %v0_10003520.pre, %dec_label_pc_10003474.dec_label_pc_10003518_crit_edge ], [ %v1_1000350c, %dec_label_pc_100034e8 ]
  %v0_1000351c = phi i32 [ %v1_10003450, %dec_label_pc_10003474.dec_label_pc_10003518_crit_edge ], [ %v1_10003514, %dec_label_pc_100034e8 ]
  %v3_10003518 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10003518, i32* @r4, align 4
  store i32 %v0_10003520, i32* %r3.global-to-local, align 4
  store i32 268449064, i32* @lr, align 4
  %v3_10003524 = call i32 @strncpy(i32 %v0_10003520, i32 %v3_10003518, i32 %v0_1000351c)
  %v3_10003528 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10003528, i32* %r3.global-to-local, align 4
  store i32 268449072, i32* @lr, align 4
  %v1_1000352c = call i32 @free(i32 %v3_10003528)
  store i32 %v1_1000352c, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_10003534 = icmp eq i32 %tmp18, 1
  br i1 %v3_10003534, label %dec_label_pc_1000353c, label %dec_label_pc_10003584

dec_label_pc_1000353c:                            ; preds = %dec_label_pc_10003518
  store i32 4, i32* @r5, align 4
  %v0_10003544 = load i32, i32* @r30, align 4
  store i32 %v0_10003544, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000354c.59 to i32), i32* @lr, align 4
  %v0_10003548 = call i32 @memcpy()
  %v1_10003550 = load i32, i32* @r26, align 4
  %v2_10003550 = add i32 %v1_10003550, 8
  %v3_10003550 = inttoptr i32 %v2_10003550 to i32*
  store i32 2, i32* %v3_10003550, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10003558 = load i32, i32* @r26, align 4
  %v2_10003558 = add i32 %v1_10003558, 12
  %v3_10003558 = inttoptr i32 %v2_10003558 to i32*
  store i32 4, i32* %v3_10003558, align 4
  %v0_1000355c = load i32, i32* @r31, align 4
  %v1_1000355c = load i32, i32* @r26, align 4
  %v2_1000355c = inttoptr i32 %v1_1000355c to i32*
  store i32 %v0_1000355c, i32* %v2_1000355c, align 4
  %v0_10003560 = load i32, i32* @r25, align 4
  %v1_10003560 = load i32, i32* @r26, align 4
  %v2_10003560 = add i32 %v1_10003560, 16
  %v3_10003560 = inttoptr i32 %v2_10003560 to i32*
  store i32 %v0_10003560, i32* %v3_10003560, align 4
  %v0_10003564 = load i32, i32* @r21, align 4
  %v1_10003564 = load i32, i32* @r26, align 4
  %v2_10003564 = add i32 %v1_10003564, 4
  %v3_10003564 = inttoptr i32 %v2_10003564 to i32*
  store i32 %v0_10003564, i32* %v3_10003564, align 4
  %v3_10003568 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10003568, i32* %r3.global-to-local, align 4
  store i32 268449136, i32* @lr, align 4
  %v1_1000356c = call i32 @free(i32 %v3_10003568)
  store i32 %v1_1000356c, i32* %r3.global-to-local, align 4
  %v0_10003570 = load i32, i32* @r26, align 4
  %v1_10003570 = load i32, i32* @r20, align 4
  %v2_10003570 = inttoptr i32 %v1_10003570 to i32*
  store i32 %v0_10003570, i32* %v2_10003570, align 4
  br label %dec_label_pc_1000357c

dec_label_pc_1000357c:                            ; preds = %dec_label_pc_10003584, %dec_label_pc_100033c8, %dec_label_pc_1000353c
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1000353c ], [ 2, %dec_label_pc_100033c8 ], [ 2, %dec_label_pc_10003584 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1000353c ], [ 1, %dec_label_pc_100033c8 ], [ 1, %dec_label_pc_10003584 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1000357c = load i32, i32* @r24, align 4
  %v2_1000357c = inttoptr i32 %v1_1000357c to i32*
  store i32 %storemerge, i32* %v2_1000357c, align 4
  br label %dec_label_pc_1000359c

dec_label_pc_10003584:                            ; preds = %dec_label_pc_10003518
  %v3_10003584 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10003584, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000358c.60 to i32), i32* @lr, align 4
  %v1_10003588 = call i32 @free(i32 %v3_10003584)
  store i32 %v1_10003588, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000357c

dec_label_pc_10003598:                            ; preds = %dec_label_pc_1000335c, %dec_label_pc_10003340, %dec_label_pc_10003334, %dec_label_pc_10003324, %dec_label_pc_10003314
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000359c

dec_label_pc_1000359c:                            ; preds = %dec_label_pc_100032f8, %dec_label_pc_100032f0, %dec_label_pc_100032a4, %entry, %dec_label_pc_1000357c, %dec_label_pc_10003458, %dec_label_pc_1000339c, %dec_label_pc_10003598
  store i32 %v0_10003270, i32* %r0.global-to-local, align 4
  %v0_100035ac = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100035ac

; uselistorder directives
  uselistorder i32 %v0_10003520, { 1, 0 }
  uselistorder i32 %v1_100034f0, { 1, 0 }
  uselistorder i32 %v1_100034e4, { 1, 0 }
  uselistorder i32 %v1_100034dc, { 1, 0 }
  uselistorder i32 %v0_100034c8, { 1, 0 }
  uselistorder i32 %v1_100034dc3, { 1, 0 }
  uselistorder i32 %v1_100034a4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000349c, { 1, 0, 2 }
  uselistorder i32 %v0_10003424, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_10003368, { 1, 0, 2 }
  uselistorder i32 %v0_10003324.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000330c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 9, 7, 8, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000359c, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000357c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003518, { 1, 0 }
  uselistorder label %dec_label_pc_100034c4, { 1, 0 }
  uselistorder label %dec_label_pc_10003324, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100035c4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268449236, i32* @lr, align 4
  %v2_100035d0 = call i32 @__socketcall(i32 3, i32 %v2_100035c4)
  ret i32 %v2_100035d0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_100035f8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268449296, i32* @lr, align 4
  %v2_1000360c = call i32 @__socketcall(i32 15, i32 %v2_100035f8)
  ret i32 %v2_1000360c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10003634 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268449352, i32* @lr, align 4
  %v2_10003644 = call i32 @__socketcall(i32 10, i32 %v2_10003634)
  ret i32 %v2_10003644

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000366c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268449408, i32* @lr, align 4
  %v2_1000367c = call i32 @__socketcall(i32 9, i32 %v2_1000366c)
  ret i32 %v2_1000367c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100036a4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268449460, i32* @lr, align 4
  %v2_100036b0 = call i32 @__socketcall(i32 1, i32 %v2_100036a4)
  ret i32 %v2_100036b0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 4, 3, 0, 2, 1 }
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_100036c4 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_100036c4, label %dec_label_pc_100036f0, label %dec_label_pc_100036e0

dec_label_pc_100036e0:                            ; preds = %entry
  %tmp21 = icmp slt i32 %arg1, 1
  br i1 %tmp21, label %dec_label_pc_100036f0, label %dec_label_pc_100036e8

dec_label_pc_100036e8:                            ; preds = %dec_label_pc_100036e0
  %tmp22 = icmp slt i32 %arg1, 65
  br i1 %tmp22, label %dec_label_pc_10003720.lr.ph, label %dec_label_pc_100036f0

dec_label_pc_100036f0:                            ; preds = %dec_label_pc_100036e8, %dec_label_pc_100036e0, %entry
  %v0_100036f0 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100036fc = inttoptr i32 %v0_100036f0 to i32*
  store i32 22, i32* %v2_100036fc, align 4
  %v0_10003790.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000378c

dec_label_pc_10003720.lr.ph:                      ; preds = %dec_label_pc_100036e8
  %v2_10003710 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10003710, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000372023 = add i32 %v2_10003710, 128
  %v3_1000372024 = inttoptr i32 %v2_1000372023 to i32*
  store i32 0, i32* %v3_1000372024, align 4
  %v0_1000372425 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000372426 = add i32 %v0_1000372425, -1
  store i32 %v1_1000372426, i32* %r11.global-to-local, align 4
  %v1_1000372827 = mul i32 %v1_1000372426, 4
  %v1_1000372c28 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000372c29 = add i32 %v1_1000372c28, %v1_1000372827
  store i32 %v2_1000372c29, i32* %r9.global-to-local, align 4
  %v0_1000373030 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000373031 = add i32 %v0_1000373030, -1
  store i32 %v1_1000373031, i32* %ctr.global-to-local, align 4
  %v2_1000373032 = icmp eq i32 %v1_1000373031, 0
  br i1 %v2_1000373032, label %dec_label_pc_10003734, label %dec_label_pc_10003720.dec_label_pc_10003720_crit_edge

dec_label_pc_10003720.dec_label_pc_10003720_crit_edge: ; preds = %dec_label_pc_10003720.lr.ph, %dec_label_pc_10003720.dec_label_pc_10003720_crit_edge
  %v2_1000372c33 = phi i32 [ %v2_1000372c, %dec_label_pc_10003720.dec_label_pc_10003720_crit_edge ], [ %v2_1000372c29, %dec_label_pc_10003720.lr.ph ]
  %v0_10003720.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10003720 = add i32 %v2_1000372c33, 4
  %v3_10003720 = inttoptr i32 %v2_10003720 to i32*
  store i32 %v0_10003720.pre, i32* %v3_10003720, align 4
  %v0_10003724 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003724 = add i32 %v0_10003724, -1
  store i32 %v1_10003724, i32* %r11.global-to-local, align 4
  %v1_10003728 = mul i32 %v1_10003724, 4
  %v1_1000372c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000372c = add i32 %v1_1000372c, %v1_10003728
  store i32 %v2_1000372c, i32* %r9.global-to-local, align 4
  %v0_10003730 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10003730 = add i32 %v0_10003730, -1
  store i32 %v1_10003730, i32* %ctr.global-to-local, align 4
  %v2_10003730 = icmp eq i32 %v1_10003730, 0
  br i1 %v2_10003730, label %dec_label_pc_10003734, label %dec_label_pc_10003720.dec_label_pc_10003720_crit_edge

dec_label_pc_10003734:                            ; preds = %dec_label_pc_10003720.dec_label_pc_10003720_crit_edge, %dec_label_pc_10003720.lr.ph
  %v2_1000372c.lcssa = phi i32 [ %v2_1000372c29, %dec_label_pc_10003720.lr.ph ], [ %v2_1000372c, %dec_label_pc_10003720.dec_label_pc_10003720_crit_edge ]
  %v0_10003738.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_10003734 = ptrtoint i32* %stack_var_-292 to i32
  %v3_1000373c = call i32 @__sigaddset(i32 %v2_10003734, i32 %v0_10003738.pre, i32 %v2_1000372c.lcssa)
  %v1_10003740 = icmp slt i32 %v3_1000373c, 0
  br i1 %v1_10003740, label %dec_label_pc_10003788, label %dec_label_pc_10003748

dec_label_pc_10003748:                            ; preds = %dec_label_pc_10003734
  %v0_1000374c = load i32, i32* %r31.global-to-local, align 4
  %v2_10003754 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_1001e638.62 to i32), i32 %v0_1000374c)
  %v2_10003760 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268449656, i32* @lr, align 4
  %v4_10003774 = call i32 @__libc_sigaction(i32 %v0_1000374c, i32* nonnull %stack_var_-296, i32 %v2_10003760)
  %v1_10003778 = icmp slt i32 %v4_10003774, 0
  br i1 %v1_10003778, label %dec_label_pc_10003788, label %dec_label_pc_10003780

dec_label_pc_10003780:                            ; preds = %dec_label_pc_10003748
  %v3_10003780 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_10003780, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000378c

dec_label_pc_10003788:                            ; preds = %dec_label_pc_10003748, %dec_label_pc_10003734
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000378c

dec_label_pc_1000378c:                            ; preds = %dec_label_pc_10003780, %dec_label_pc_100036f0, %dec_label_pc_10003788
  %v0_10003790 = phi i32 [ %v3_10003780, %dec_label_pc_10003780 ], [ %v0_10003790.pre, %dec_label_pc_100036f0 ], [ -1, %dec_label_pc_10003788 ]
  ret i32 %v0_10003790

; uselistorder directives
  uselistorder i32 %v1_10003730, { 1, 0 }
  uselistorder i32 %v2_1000372c, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 65, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000378c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003720.dec_label_pc_10003720_crit_edge, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_100037a4 = add i32 %arg2, -1
  %v1_100037a8 = call i32 @__asm_rlwinm(i32 %v1_100037a4, i32 29, i32 3, i32 29)
  %v1_100037ac = urem i32 %v1_100037a4, 32
  %v2_100037b0 = add i32 %v1_100037a8, %arg1
  %v3_100037b0 = inttoptr i32 %v2_100037b0 to i32*
  %v4_100037b0 = load i32, i32* %v3_100037b0, align 4
  %v3_100037b8 = shl i32 1, %v1_100037ac
  %v2_100037bc = and i32 %v4_100037b0, %v3_100037b8
  %v2_100037c0 = icmp ne i32 %v2_100037bc, 0
  %v5_100037c4 = zext i1 %v2_100037c0 to i32
  ret i32 %v5_100037c4
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_100037cc = add i32 %arg2, -1
  %v1_100037d4 = call i32 @__asm_rlwinm(i32 %v1_100037cc, i32 29, i32 3, i32 29)
  %v1_100037d8 = urem i32 %v1_100037cc, 32
  %v2_100037dc = add i32 %v1_100037d4, %arg1
  %v3_100037dc = inttoptr i32 %v2_100037dc to i32*
  %v4_100037dc = load i32, i32* %v3_100037dc, align 4
  %v3_100037e0 = shl i32 1, %v1_100037d8
  %v2_100037e4 = or i32 %v3_100037e0, %v4_100037dc
  store i32 %v2_100037e4, i32* %v3_100037dc, align 4
  ret i32 0
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_100037f4 = add i32 %arg2, -1
  %v1_100037fc = call i32 @__asm_rlwinm(i32 %v1_100037f4, i32 29, i32 3, i32 29)
  %v1_10003800 = urem i32 %v1_100037f4, 32
  %v2_10003804 = add i32 %v1_100037fc, %arg1
  %v3_10003804 = inttoptr i32 %v2_10003804 to i32*
  %v4_10003804 = load i32, i32* %v3_10003804, align 4
  %v3_10003808 = shl i32 -2, %v1_10003800
  %v4_10003808 = sub nsw i32 32, %v1_10003800
  %v5_10003808 = lshr i32 -2, %v4_10003808
  %v6_10003808 = or i32 %v5_10003808, %v3_10003808
  %v2_1000380c = and i32 %v6_10003808, %v4_10003804
  store i32 %v2_1000380c, i32* %v3_10003804, align 4
  ret i32 0
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000381c = load i32, i32* %r3.global-to-local, align 4
  %v3_1000381c = icmp eq i32 %v0_1000381c, 0
  br i1 %v3_1000381c, label %dec_label_pc_10003834, label %dec_label_pc_10003838

dec_label_pc_10003834:                            ; preds = %entry
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003838

dec_label_pc_10003838:                            ; preds = %entry, %dec_label_pc_10003834
  %v0_10003848 = phi i32 [ 1, %dec_label_pc_10003834 ], [ %v0_1000381c, %entry ]
  %v3_1000383c = icmp ugt i32 %v0_10003848, -8
  br i1 %v3_1000383c, label %dec_label_pc_1000394c, label %dec_label_pc_10003844

dec_label_pc_10003844:                            ; preds = %dec_label_pc_10003838
  %v1_10003848 = add i32 %v0_10003848, 4
  store i32 ptrtoint (i32* @global_var_1001c608.63 to i32), i32* @r29, align 4
  store i32 %v1_10003848, i32* %stack_var_-40, align 4
  store i32 ptrtoint (i32* @global_var_1001c608.63 to i32), i32* %r3.global-to-local, align 4
  %v0_10003858 = call i32 @__pthread_return_0()
  %v2_10003860 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268551016, i32* %r3.global-to-local, align 4
  %v3_10003868 = call i32 @__heap_alloc(i32* inttoptr (i32 268551016 to i32*), i32 %v2_10003860)
  store i32 %v3_10003868, i32* %r31.global-to-local, align 4
  %v0_10003870 = load i32, i32* @r29, align 4
  store i32 %v0_10003870, i32* %r3.global-to-local, align 4
  %v0_10003874 = call i32 @__pthread_return_0()
  store i32 %v0_10003874, i32* %r3.global-to-local, align 4
  %v3_10003878 = icmp eq i32 %v3_10003868, 0
  br i1 %v3_10003878, label %dec_label_pc_10003880, label %dec_label_pc_10003930.thread

dec_label_pc_10003930.thread:                     ; preds = %dec_label_pc_10003844
  br label %dec_label_pc_10003944

dec_label_pc_10003880:                            ; preds = %dec_label_pc_10003844
  %v3_10003884 = load i32, i32* @global_var_1001c3d0.64, align 4
  store i32 %v3_10003884, i32* %r31.global-to-local, align 4
  %v3_10003888 = load i32, i32* %stack_var_-40, align 4
  %v2_1000388c = icmp ult i32 %v3_10003888, %v3_10003884
  br i1 %v2_1000388c, label %dec_label_pc_100038a4, label %dec_label_pc_10003894

dec_label_pc_10003894:                            ; preds = %dec_label_pc_10003880
  %v1_10003898 = sub i32 0, %v3_10003884
  %v2_10003894 = add i32 %v3_10003884, -1
  %v1_1000389c = add i32 %v2_10003894, %v3_10003888
  %v2_100038a0 = and i32 %v1_1000389c, %v1_10003898
  store i32 %v2_100038a0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100038a4

dec_label_pc_100038a4:                            ; preds = %dec_label_pc_10003880, %dec_label_pc_10003894
  store i32 ptrtoint (i32* @global_var_1001e6b8.65 to i32), i32* %r3.global-to-local, align 4
  %v0_100038b0 = call i32 @__pthread_return_0()
  %v0_100038b4 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100038b4, i32* %r3.global-to-local, align 4
  store i32 268449980, i32* @lr, align 4
  %v1_100038b8 = call i32 @__GI_sbrk(i32 %v0_100038b4)
  store i32 %v1_100038b8, i32* %r3.global-to-local, align 4
  %v3_100038bc = icmp eq i32 %v1_100038b8, -1
  br i1 %v3_100038bc, label %dec_label_pc_100038dc, label %dec_label_pc_100038c4

dec_label_pc_100038c4:                            ; preds = %dec_label_pc_100038a4
  %v1_100038c4 = add i32 %v1_100038b8, 3
  %v1_100038c8 = call i32 @__asm_rlwinm(i32 %v1_100038c4, i32 0, i32 0, i32 29)
  store i32 %v1_100038c8, i32* @r30, align 4
  %v4_100038cc = icmp eq i32 %v1_100038c8, %v1_100038b8
  br i1 %v4_100038cc, label %dec_label_pc_100038dc, label %dec_label_pc_100038d4

dec_label_pc_100038d4:                            ; preds = %dec_label_pc_100038c4
  %v2_100038d4 = sub i32 %v1_100038c8, %v1_100038b8
  store i32 %v2_100038d4, i32* %r3.global-to-local, align 4
  store i32 268450012, i32* @lr, align 4
  %v1_100038d8 = call i32 @__GI_sbrk(i32 %v2_100038d4)
  store i32 %v1_100038d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100038dc

dec_label_pc_100038dc:                            ; preds = %dec_label_pc_100038c4, %dec_label_pc_100038a4, %dec_label_pc_100038d4
  store i32 ptrtoint (i32* @global_var_1001e6b8.65 to i32), i32* %r3.global-to-local, align 4
  %v0_100038e4 = call i32 @__pthread_return_0()
  store i32 %v0_100038e4, i32* %r3.global-to-local, align 4
  %v0_100038e8 = load i32, i32* @r30, align 4
  %v3_100038e8 = icmp eq i32 %v0_100038e8, -1
  br i1 %v3_100038e8, label %dec_label_pc_1000394c, label %dec_label_pc_10003930

dec_label_pc_10003930:                            ; preds = %dec_label_pc_100038dc
  store i32 ptrtoint (i32* @global_var_1001c608.63 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001c368 to i32), i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1001c608.63 to i32), i32* %r3.global-to-local, align 4
  %v0_10003904 = call i32 @__pthread_return_0()
  %v0_10003908 = load i32, i32* @r31, align 4
  %v0_1000390c = load i32, i32* @r30, align 4
  %v0_10003910 = load i32, i32* @r29, align 4
  store i32 %v0_10003910, i32* %r3.global-to-local, align 4
  store i32 268450072, i32* @lr, align 4
  %v3_10003914 = inttoptr i32 %v0_10003910 to i32*
  %v4_10003914 = call i32 @__heap_free(i32* %v3_10003914, i32 %v0_1000390c, i32 %v0_10003908)
  %v0_10003918 = load i32, i32* @r29, align 4
  store i32 %v0_10003918, i32* %r3.global-to-local, align 4
  %v2_10003920 = inttoptr i32 %v0_10003918 to i32*
  %v3_10003920 = call i32 @__heap_alloc(i32* %v2_10003920, i32 %v2_10003860)
  store i32 %v3_10003920, i32* %r31.global-to-local, align 4
  %v0_10003928 = load i32, i32* @r28, align 4
  store i32 %v0_10003928, i32* %r3.global-to-local, align 4
  %v0_1000392c = call i32 @__pthread_return_0()
  store i32 %v0_1000392c, i32* %r3.global-to-local, align 4
  %v3_10003930 = icmp eq i32 %v3_10003920, 0
  br i1 %v3_10003930, label %dec_label_pc_10003944.thread, label %dec_label_pc_10003944

dec_label_pc_10003944.thread:                     ; preds = %dec_label_pc_10003930
  br label %dec_label_pc_1000394c

dec_label_pc_10003944:                            ; preds = %dec_label_pc_10003930, %dec_label_pc_10003930.thread
  %v0_10003944.pr6 = phi i32 [ %v3_10003868, %dec_label_pc_10003930.thread ], [ %v3_10003920, %dec_label_pc_10003930 ]
  %v3_10003938 = load i32, i32* %stack_var_-40, align 4
  %v2_1000393c = inttoptr i32 %v0_10003944.pr6 to i32*
  store i32 %v3_10003938, i32* %v2_1000393c, align 4
  %v0_10003940 = load i32, i32* %r31.global-to-local, align 4
  %v1_10003940 = add i32 %v0_10003940, 4
  store i32 %v1_10003940, i32* @r31, align 4
  %v3_10003944 = icmp eq i32 %v1_10003940, 0
  br i1 %v3_10003944, label %dec_label_pc_1000394c, label %dec_label_pc_1000395c

dec_label_pc_1000394c:                            ; preds = %dec_label_pc_10003944.thread, %dec_label_pc_10003944, %dec_label_pc_100038dc, %dec_label_pc_10003838
  %v0_1000394c = call i32 @__errno_location()
  store i32 %v0_1000394c, i32* %r3.global-to-local, align 4
  %v2_10003954 = inttoptr i32 %v0_1000394c to i32*
  store i32 12, i32* %v2_10003954, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000395c

dec_label_pc_1000395c:                            ; preds = %dec_label_pc_10003944, %dec_label_pc_1000394c
  %v0_10003960 = phi i32 [ %v1_10003940, %dec_label_pc_10003944 ], [ 0, %dec_label_pc_1000394c ]
  store i32 %v0_10003960, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003960

; uselistorder directives
  uselistorder i32 %v0_10003960, { 1, 0 }
  uselistorder i32 %v1_10003940, { 1, 0, 2 }
  uselistorder i32 %v1_100038c8, { 1, 0, 2 }
  uselistorder i32 %v1_100038b8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_10003884, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10003868, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 20, 2, 15, 3, 5, 4, 6, 16, 7, 17, 8, 18, 10, 9, 19, 11, 12, 13, 14, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c608.63 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000395c, { 1, 0 }
  uselistorder label %dec_label_pc_1000394c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100038dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100038a4, { 1, 0 }
  uselistorder label %dec_label_pc_10003838, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10003974 = icmp eq i32 %arg1, 0
  br i1 %v3_10003974, label %dec_label_pc_10003a60, label %dec_label_pc_1000398c

dec_label_pc_1000398c:                            ; preds = %entry
  %v1_10003990 = add i32 %arg1, -4
  %v2_10003990 = inttoptr i32 %v1_10003990 to i32*
  %v3_10003990 = load i32, i32* %v2_10003990, align 4
  store i32 %v3_10003990, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_100039a4 = call i32 @__pthread_return_0()
  %v0_100039ac = load i32, i32* @r28, align 4
  store i32 268450232, i32* @lr, align 4
  %v4_100039b4 = call i32 @__heap_free(i32* nonnull @global_var_1001c368, i32 %v1_10003990, i32 %v0_100039ac)
  %v3_100039bc = load i32, i32* @global_var_1001c3d0.64, align 4
  store i32 %v4_100039b4, i32* @r29, align 4
  %v1_100039c4 = inttoptr i32 %v4_100039b4 to i32*
  %v2_100039c4 = load i32, i32* %v1_100039c4, align 4
  store i32 %v2_100039c4, i32* @r27, align 4
  %v1_100039c8 = mul i32 %v3_100039bc, 8
  %v2_100039cc = icmp ult i32 %v2_100039c4, %v1_100039c8
  br i1 %v2_100039cc, label %dec_label_pc_10003a00, label %dec_label_pc_100039d4

dec_label_pc_100039d4:                            ; preds = %dec_label_pc_1000398c
  store i32 ptrtoint (i32* @global_var_1001e6b8.65 to i32), i32* @r28, align 4
  %v0_100039e4 = call i32 @__pthread_return_0()
  store i32 268450288, i32* @lr, align 4
  %v1_100039ec = call i32 @__GI_sbrk(i32 0)
  %v0_100039f0 = load i32, i32* @r31, align 4
  %v4_100039f0 = icmp eq i32 %v0_100039f0, %v1_100039ec
  br i1 %v4_100039f0, label %dec_label_pc_10003a08, label %dec_label_pc_100039f8

dec_label_pc_100039f8:                            ; preds = %dec_label_pc_100039d4
  %v0_100039fc = call i32 @__pthread_return_0()
  br label %dec_label_pc_10003a00

dec_label_pc_10003a00:                            ; preds = %dec_label_pc_1000398c, %dec_label_pc_100039f8
  br label %dec_label_pc_10003a5c

dec_label_pc_10003a08:                            ; preds = %dec_label_pc_100039d4
  %v0_10003a08 = load i32, i32* @r29, align 4
  %v1_10003a08 = add i32 %v0_10003a08, 4
  %v2_10003a08 = inttoptr i32 %v1_10003a08 to i32*
  %v3_10003a08 = load i32, i32* %v2_10003a08, align 4
  %v3_10003a0c = icmp eq i32 %v3_10003a08, 0
  br i1 %v3_10003a0c, label %dec_label_pc_10003a1c, label %dec_label_pc_10003a14

dec_label_pc_10003a14:                            ; preds = %dec_label_pc_10003a08
  %v1_10003a14 = add i32 %v0_10003a08, 8
  %v2_10003a14 = inttoptr i32 %v1_10003a14 to i32*
  %v3_10003a14 = load i32, i32* %v2_10003a14, align 4
  %v2_10003a18 = add i32 %v3_10003a08, 8
  %v3_10003a18 = inttoptr i32 %v2_10003a18 to i32*
  store i32 %v3_10003a14, i32* %v3_10003a18, align 4
  %v0_10003a1c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003a1c

dec_label_pc_10003a1c:                            ; preds = %dec_label_pc_10003a08, %dec_label_pc_10003a14
  %v0_10003a1c = phi i32 [ %v0_10003a08, %dec_label_pc_10003a08 ], [ %v0_10003a1c.pre, %dec_label_pc_10003a14 ]
  %v1_10003a1c = add i32 %v0_10003a1c, 8
  %v2_10003a1c = inttoptr i32 %v1_10003a1c to i32*
  %v3_10003a1c = load i32, i32* %v2_10003a1c, align 4
  %v1_10003a20 = add i32 %v0_10003a1c, 4
  %v2_10003a20 = inttoptr i32 %v1_10003a20 to i32*
  %v3_10003a20 = load i32, i32* %v2_10003a20, align 4
  %v3_10003a24 = icmp eq i32 %v3_10003a1c, 0
  br i1 %v3_10003a24, label %dec_label_pc_10003a34, label %dec_label_pc_10003a2c

dec_label_pc_10003a2c:                            ; preds = %dec_label_pc_10003a1c
  %v2_10003a2c = add i32 %v3_10003a1c, 4
  %v3_10003a2c = inttoptr i32 %v2_10003a2c to i32*
  store i32 %v3_10003a20, i32* %v3_10003a2c, align 4
  br label %dec_label_pc_10003a38

dec_label_pc_10003a34:                            ; preds = %dec_label_pc_10003a1c
  store i32 %v3_10003a20, i32* @global_var_1001c368, align 4
  br label %dec_label_pc_10003a38

dec_label_pc_10003a38:                            ; preds = %dec_label_pc_10003a2c, %dec_label_pc_10003a34
  %v0_10003a40 = call i32 @__pthread_return_0()
  %v0_10003a44 = load i32, i32* @r27, align 4
  %v1_10003a44 = load i32, i32* @r29, align 4
  %v0_10003a4c = load i32, i32* @r31, align 4
  %v2_10003a44 = sub i32 12, %v0_10003a44
  %v1_10003a48 = add i32 %v2_10003a44, %v1_10003a44
  %v2_10003a4c = sub i32 %v1_10003a48, %v0_10003a4c
  store i32 268450388, i32* @lr, align 4
  %v1_10003a50 = call i32 @__GI_sbrk(i32 %v2_10003a4c)
  br label %dec_label_pc_10003a5c

dec_label_pc_10003a5c:                            ; preds = %dec_label_pc_10003a00, %dec_label_pc_10003a38
  %v0_10003a5c = call i32 @__pthread_return_0()
  br label %dec_label_pc_10003a60

dec_label_pc_10003a60:                            ; preds = %entry, %dec_label_pc_10003a5c
  %v0_10003a70 = phi i32 [ 0, %entry ], [ %v0_10003a5c, %dec_label_pc_10003a5c ]
  ret i32 %v0_10003a70

; uselistorder directives
  uselistorder i32 %v0_10003a1c, { 1, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 1, 0, 3, 2 }
  uselistorder i32 (i32*, i32, i32)* @__heap_free, { 1, 0 }
  uselistorder i32* @global_var_1001c368, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10003a60, { 1, 0 }
  uselistorder label %dec_label_pc_10003a5c, { 1, 0 }
  uselistorder label %dec_label_pc_10003a38, { 1, 0 }
  uselistorder label %dec_label_pc_10003a1c, { 1, 0 }
  uselistorder label %dec_label_pc_10003a00, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10003a74 = inttoptr i32 %arg2 to i32*
  %v2_10003a74 = load i32, i32* %v1_10003a74, align 4
  %v1_10003a78 = add i32 %v2_10003a74, 3
  store i32 %v1_10003a78, i32* %r9.global-to-local, align 4
  %v1_10003a7c = call i32 @__asm_rlwinm(i32 %v1_10003a78, i32 0, i32 0, i32 29)
  %v2_10003a80 = icmp ugt i32 %v1_10003a7c, 11
  br i1 %v2_10003a80, label %dec_label_pc_10003b04.preheader, label %dec_label_pc_10003a88

dec_label_pc_10003a88:                            ; preds = %entry
  br label %dec_label_pc_10003b04.preheader

dec_label_pc_10003b04.preheader:                  ; preds = %entry, %dec_label_pc_10003a88
  %storemerge20 = phi i32 [ 12, %dec_label_pc_10003a88 ], [ %v1_10003a7c, %entry ]
  %v0_10003ae8 = phi i32 [ 12, %dec_label_pc_10003a88 ], [ %v1_10003a7c, %entry ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_10003b045 = icmp eq i32 %storemerge2, 0
  br i1 %v3_10003b045, label %dec_label_pc_10003b0c, label %dec_label_pc_10003a94

dec_label_pc_10003a94:                            ; preds = %dec_label_pc_10003b04.preheader, %dec_label_pc_10003b00
  %v0_10003b00 = phi i32 [ %storemerge, %dec_label_pc_10003b00 ], [ %storemerge2, %dec_label_pc_10003b04.preheader ]
  %v1_10003a94 = inttoptr i32 %v0_10003b00 to i32*
  %v2_10003a94 = load i32, i32* %v1_10003a94, align 4
  store i32 %v2_10003a94, i32* %r10.global-to-local, align 4
  %v2_10003a98 = icmp ult i32 %v2_10003a94, %v0_10003ae8
  br i1 %v2_10003a98, label %dec_label_pc_10003b00, label %dec_label_pc_10003aa0

dec_label_pc_10003aa0:                            ; preds = %dec_label_pc_10003a94
  %v1_10003aa0 = add i32 %v0_10003ae8, 44
  %v2_10003aa4 = icmp ult i32 %v2_10003a94, %v1_10003aa0
  br i1 %v2_10003aa4, label %dec_label_pc_10003aac, label %dec_label_pc_10003ae8

dec_label_pc_10003aac:                            ; preds = %dec_label_pc_10003aa0
  %v1_10003aac = add i32 %v0_10003b00, 4
  %v2_10003aac = inttoptr i32 %v1_10003aac to i32*
  %v3_10003aac = load i32, i32* %v2_10003aac, align 4
  store i32 %v3_10003aac, i32* %r11.global-to-local, align 4
  %v3_10003ab0 = icmp eq i32 %v3_10003aac, 0
  br i1 %v3_10003ab0, label %dec_label_pc_10003ac0, label %dec_label_pc_10003ab8

dec_label_pc_10003ab8:                            ; preds = %dec_label_pc_10003aac
  %v1_10003ab8 = add i32 %v0_10003b00, 8
  %v2_10003ab8 = inttoptr i32 %v1_10003ab8 to i32*
  %v3_10003ab8 = load i32, i32* %v2_10003ab8, align 4
  %v2_10003abc = add i32 %v3_10003aac, 8
  %v3_10003abc = inttoptr i32 %v2_10003abc to i32*
  store i32 %v3_10003ab8, i32* %v3_10003abc, align 4
  %v0_10003ac0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10003adc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10003ac0

dec_label_pc_10003ac0:                            ; preds = %dec_label_pc_10003aac, %dec_label_pc_10003ab8
  %v0_10003adc = phi i32 [ %v2_10003a94, %dec_label_pc_10003aac ], [ %v0_10003adc.pre, %dec_label_pc_10003ab8 ]
  %v0_10003ac0 = phi i32 [ %v0_10003b00, %dec_label_pc_10003aac ], [ %v0_10003ac0.pre, %dec_label_pc_10003ab8 ]
  %v1_10003ac0 = add i32 %v0_10003ac0, 8
  %v2_10003ac0 = inttoptr i32 %v1_10003ac0 to i32*
  %v3_10003ac0 = load i32, i32* %v2_10003ac0, align 4
  %v1_10003ac4 = add i32 %v0_10003ac0, 4
  %v2_10003ac4 = inttoptr i32 %v1_10003ac4 to i32*
  %v3_10003ac4 = load i32, i32* %v2_10003ac4, align 4
  %v3_10003ac8 = icmp eq i32 %v3_10003ac0, 0
  store i32 %v0_10003adc, i32* %r11.global-to-local, align 4
  br i1 %v3_10003ac8, label %dec_label_pc_10003adc, label %dec_label_pc_10003ad0

dec_label_pc_10003ad0:                            ; preds = %dec_label_pc_10003ac0
  %v2_10003ad4 = add i32 %v3_10003ac0, 4
  %v3_10003ad4 = inttoptr i32 %v2_10003ad4 to i32*
  store i32 %v3_10003ac4, i32* %v3_10003ad4, align 4
  br label %dec_label_pc_10003af0

dec_label_pc_10003adc:                            ; preds = %dec_label_pc_10003ac0
  store i32 %v3_10003ac4, i32* %arg1, align 4
  br label %dec_label_pc_10003af0

dec_label_pc_10003ae8:                            ; preds = %dec_label_pc_10003aa0
  %v2_10003ae8 = sub i32 %v2_10003a94, %v0_10003ae8
  store i32 %v2_10003ae8, i32* %v1_10003a94, align 4
  br label %dec_label_pc_10003af0

dec_label_pc_10003af0:                            ; preds = %dec_label_pc_10003adc, %dec_label_pc_10003ad0, %dec_label_pc_10003ae8
  %v0_10003af0 = load i32, i32* %r10.global-to-local, align 4
  %v1_10003af0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003af0 = sub i32 %v1_10003af0, %v0_10003af0
  store i32 %v2_10003af0, i32* %r9.global-to-local, align 4
  %v0_10003af4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10003af4, i32* %v1_10003a74, align 4
  %v0_10003af8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003af8 = add i32 %v0_10003af8, 12
  ret i32 %v1_10003af8

dec_label_pc_10003b00:                            ; preds = %dec_label_pc_10003a94
  %v1_10003b00 = add i32 %v0_10003b00, 4
  %storemerge.in = inttoptr i32 %v1_10003b00 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_10003b04 = icmp eq i32 %storemerge, 0
  br i1 %v3_10003b04, label %dec_label_pc_10003b04.dec_label_pc_10003b0c_crit_edge, label %dec_label_pc_10003a94

dec_label_pc_10003b04.dec_label_pc_10003b0c_crit_edge: ; preds = %dec_label_pc_10003b00
  br label %dec_label_pc_10003b0c

dec_label_pc_10003b0c:                            ; preds = %dec_label_pc_10003b04.dec_label_pc_10003b0c_crit_edge, %dec_label_pc_10003b04.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10003ac0, { 1, 0 }
  uselistorder i32 %v2_10003a94, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10003b00, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_10003ae8, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10003af0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003ac0, { 1, 0 }
  uselistorder label %dec_label_pc_10003a94, { 1, 0 }
  uselistorder label %dec_label_pc_10003b04.preheader, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10003b14 = icmp eq i32 %arg3, 0
  %v2_10003b18 = add i32 %arg2, 4
  %v3_10003b18 = inttoptr i32 %v2_10003b18 to i32*
  store i32 %arg4, i32* %v3_10003b18, align 4
  %v2_10003b1c = add i32 %arg2, 8
  %v3_10003b1c = inttoptr i32 %v2_10003b1c to i32*
  store i32 %arg3, i32* %v3_10003b1c, align 4
  br i1 %v3_10003b14, label %dec_label_pc_10003b2c, label %dec_label_pc_10003b24

dec_label_pc_10003b24:                            ; preds = %entry
  %v2_10003b24 = add i32 %arg3, 4
  %v3_10003b24 = inttoptr i32 %v2_10003b24 to i32*
  store i32 %arg2, i32* %v3_10003b24, align 4
  br label %dec_label_pc_10003b30

dec_label_pc_10003b2c:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10003b30

dec_label_pc_10003b30:                            ; preds = %dec_label_pc_10003b24, %dec_label_pc_10003b2c
  %v3_10003b30 = icmp eq i32 %arg4, 0
  %v0_10003b34 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10003b30, i32 %v0_10003b34)
  %v2_10003b38 = add i32 %arg4, 8
  %v3_10003b38 = inttoptr i32 %v2_10003b38 to i32*
  store i32 %arg2, i32* %v3_10003b38, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1, 4, 3 }
  uselistorder label %dec_label_pc_10003b30, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10003b40 = icmp eq i32 %arg3, 0
  br i1 %v3_10003b40, label %dec_label_pc_10003b50, label %dec_label_pc_10003b48

dec_label_pc_10003b48:                            ; preds = %entry
  %v2_10003b48 = add i32 %arg3, 4
  %v3_10003b48 = inttoptr i32 %v2_10003b48 to i32*
  store i32 %arg2, i32* %v3_10003b48, align 4
  br label %dec_label_pc_10003b54

dec_label_pc_10003b50:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10003b54

dec_label_pc_10003b54:                            ; preds = %dec_label_pc_10003b48, %dec_label_pc_10003b50
  %v2_10003b54 = add i32 %arg2, 8
  %v3_10003b54 = inttoptr i32 %v2_10003b54 to i32*
  store i32 %arg3, i32* %v3_10003b54, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 1, 2, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003b54, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10003b74 = load i32, i32* %arg1, align 4
  store i32 %v2_10003b74, i32* @r31, align 4
  %v2_10003b78 = add i32 %arg3, %arg2
  store i32 %v2_10003b78, i32* %r3.global-to-local, align 4
  %v3_10003b8c7 = icmp eq i32 %v2_10003b74, 0
  %v1_10003b908 = add i32 %v2_10003b74, 12
  %tmp69 = icmp uge i32 %v1_10003b908, %arg2
  %or.cond10 = or i1 %v3_10003b8c7, %tmp69
  br i1 %or.cond10, label %dec_label_pc_10003b9c, label %dec_label_pc_10003b84

dec_label_pc_10003b84:                            ; preds = %entry, %dec_label_pc_10003b84
  %v0_10003be411 = phi i32 [ %v3_10003b88, %dec_label_pc_10003b84 ], [ %v2_10003b74, %entry ]
  store i32 %v0_10003be411, i32* %r11.global-to-local, align 4
  %v1_10003b88 = add i32 %v0_10003be411, 4
  %v2_10003b88 = inttoptr i32 %v1_10003b88 to i32*
  %v3_10003b88 = load i32, i32* %v2_10003b88, align 4
  store i32 %v3_10003b88, i32* @r31, align 4
  %v3_10003b8c = icmp eq i32 %v3_10003b88, 0
  %v1_10003b90 = add i32 %v3_10003b88, 12
  %tmp6 = icmp uge i32 %v1_10003b90, %arg2
  %or.cond = or i1 %v3_10003b8c, %tmp6
  br i1 %or.cond, label %dec_label_pc_10003b9c, label %dec_label_pc_10003b84

dec_label_pc_10003b9c:                            ; preds = %dec_label_pc_10003b84, %entry
  %v0_10003bd8.lcssa = phi i32 [ 0, %entry ], [ %v0_10003be411, %dec_label_pc_10003b84 ]
  %v0_10003be4.lcssa = phi i32 [ %v2_10003b74, %entry ], [ %v3_10003b88, %dec_label_pc_10003b84 ]
  %v3_10003b8c.lcssa = phi i1 [ %v3_10003b8c7, %entry ], [ %v3_10003b8c, %dec_label_pc_10003b84 ]
  br i1 %v3_10003b8c.lcssa, label %dec_label_pc_10003c54, label %dec_label_pc_10003ba4

dec_label_pc_10003ba4:                            ; preds = %dec_label_pc_10003b9c
  %v1_10003ba4 = inttoptr i32 %v0_10003be4.lcssa to i32*
  %v2_10003ba4 = load i32, i32* %v1_10003ba4, align 4
  %v2_10003ba8 = sub i32 %v0_10003be4.lcssa, %v2_10003ba4
  %v1_10003bac = add i32 %v2_10003ba8, 12
  %v3_10003bb0 = icmp ugt i32 %v1_10003bac, %v2_10003b78
  br i1 %v3_10003bb0, label %dec_label_pc_10003c54, label %dec_label_pc_10003bb8

dec_label_pc_10003bb8:                            ; preds = %dec_label_pc_10003ba4
  %v4_10003bb0 = icmp eq i32 %v1_10003bac, %v2_10003b78
  %v2_10003bbc = add i32 %v2_10003ba4, %arg3
  store i32 %v2_10003bbc, i32* @r29, align 4
  br i1 %v4_10003bb0, label %dec_label_pc_10003bc4, label %dec_label_pc_10003bf4

dec_label_pc_10003bc4:                            ; preds = %dec_label_pc_10003bb8
  %v3_10003bc4 = icmp eq i32 %v0_10003bd8.lcssa, 0
  br i1 %v3_10003bc4, label %dec_label_pc_10003c48, label %dec_label_pc_10003bcc

dec_label_pc_10003bcc:                            ; preds = %dec_label_pc_10003bc4
  %v1_10003bcc = add i32 %v0_10003bd8.lcssa, 12
  %v4_10003bd0 = icmp eq i32 %v1_10003bcc, %arg2
  br i1 %v4_10003bd0, label %dec_label_pc_10003bd8, label %dec_label_pc_10003c48

dec_label_pc_10003bd8:                            ; preds = %dec_label_pc_10003bcc
  %v1_10003bd8 = inttoptr i32 %v0_10003bd8.lcssa to i32*
  %v2_10003bd8 = load i32, i32* %v1_10003bd8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_10003be0 = add i32 %v0_10003bd8.lcssa, 8
  %v2_10003be0 = inttoptr i32 %v1_10003be0 to i32*
  %v3_10003be0 = load i32, i32* %v2_10003be0, align 4
  %v2_10003be8 = add i32 %v2_10003bd8, %v2_10003bbc
  store i32 %v2_10003be8, i32* @r29, align 4
  %v5_10003bec = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_10003be4.lcssa, i32 %v3_10003be0, i32 %v2_10003b78)
  store i32 %v5_10003bec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003c48

dec_label_pc_10003bf4:                            ; preds = %dec_label_pc_10003bb8
  %v1_10003bf4 = add i32 %v0_10003be4.lcssa, 4
  %v2_10003bf4 = inttoptr i32 %v1_10003bf4 to i32*
  %v3_10003bf4 = load i32, i32* %v2_10003bf4, align 4
  %v3_10003bf8 = icmp eq i32 %v3_10003bf4, 0
  br i1 %v3_10003bf8, label %dec_label_pc_10003c30, label %dec_label_pc_10003c00

dec_label_pc_10003c00:                            ; preds = %dec_label_pc_10003bf4
  %v1_10003c00 = inttoptr i32 %v3_10003bf4 to i32*
  %v2_10003c00 = load i32, i32* %v1_10003c00, align 4
  %v2_10003c04 = sub i32 %v3_10003bf4, %v2_10003c00
  %v1_10003c08 = add i32 %v2_10003c04, 12
  %v4_10003c0c = icmp eq i32 %v2_10003b78, %v1_10003c08
  br i1 %v4_10003c0c, label %dec_label_pc_10003c14, label %dec_label_pc_10003c30

dec_label_pc_10003c14:                            ; preds = %dec_label_pc_10003c00
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10003c20 = add i32 %v2_10003c00, %v2_10003bbc
  store i32 %v2_10003c20, i32* @r29, align 4
  store i32 %v3_10003bf4, i32* @r31, align 4
  %v5_10003c28 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_10003bf4, i32 %v0_10003bd8.lcssa, i32 %v2_10003b78)
  store i32 %v5_10003c28, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003c48

dec_label_pc_10003c30:                            ; preds = %dec_label_pc_10003c00, %dec_label_pc_10003bf4
  %v2_10003c30 = add i32 %v0_10003be4.lcssa, %arg3
  store i32 %v2_10003c30, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268450888, i32* @lr, align 4
  %v5_10003c44 = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_10003c30, i32 %v0_10003bd8.lcssa, i32 %v3_10003bf4)
  store i32 %v5_10003c44, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003c48

dec_label_pc_10003c48:                            ; preds = %dec_label_pc_10003bcc, %dec_label_pc_10003bc4, %dec_label_pc_10003c14, %dec_label_pc_10003bd8, %dec_label_pc_10003c30
  %v0_10003c48 = load i32, i32* @r31, align 4
  store i32 %v0_10003c48, i32* @r30, align 4
  %v0_10003c4c = load i32, i32* @r29, align 4
  %v2_10003c4c = inttoptr i32 %v0_10003c48 to i32*
  store i32 %v0_10003c4c, i32* %v2_10003c4c, align 4
  br label %dec_label_pc_10003c70

dec_label_pc_10003c54:                            ; preds = %dec_label_pc_10003ba4, %dec_label_pc_10003b9c
  %v2_10003c54 = add i32 %v2_10003b78, -12
  %v3_10003c54 = inttoptr i32 %v2_10003c54 to i32*
  store i32 %arg3, i32* %v3_10003c54, align 4
  %v0_10003c58 = load i32, i32* %r3.global-to-local, align 4
  %v1_10003c58 = add i32 %v0_10003c58, -12
  store i32 %v1_10003c58, i32* @r30, align 4
  %v0_10003c5c = load i32, i32* %r11.global-to-local, align 4
  %v0_10003c60 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10003c60, i32* %r3.global-to-local, align 4
  %v0_10003c64 = load i32, i32* @r31, align 4
  store i32 268450928, i32* @lr, align 4
  %v4_10003c6c = inttoptr i32 %v0_10003c60 to i32*
  %v5_10003c6c = call i32 @__heap_link_free_area(i32* %v4_10003c6c, i32 %v1_10003c58, i32 %v0_10003c5c, i32 %v0_10003c64)
  store i32 %v5_10003c6c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003c70

dec_label_pc_10003c70:                            ; preds = %dec_label_pc_10003c48, %dec_label_pc_10003c54
  %v0_10003c74 = load i32, i32* @r30, align 4
  store i32 %v0_10003c74, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003c74

; uselistorder directives
  uselistorder i32 %v3_10003bf4, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_10003bac, { 1, 0 }
  uselistorder i32 %v0_10003be4.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_10003bd8.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_10003b88, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_10003b78, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 6, 2, 10, 7, 3, 8, 4, 9, 5, 11, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 -12, { 1, 2, 0, 3 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10003c70, { 1, 0 }
  uselistorder label %dec_label_pc_10003c48, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10003b84, { 1, 0 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_10003c9c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10003c9c, i32* @r3, align 4
  %v0_10003cb4 = call i32 @__pthread_return_void()
  %v0_10003cbc = call i32 @__pthread_return_0()
  %v2_10003cc4 = ptrtoint i32* %stack_var_-56 to i32
  %v3_10003ccc = call i32 @__GI_random_r(i32* inttoptr (i32 268550472 to i32*), i32 %v2_10003cc4)
  store i32 %v2_10003c9c, i32* @r3, align 4
  %v0_10003cd8 = call i32 @__pthread_return_void()
  %v3_10003ce0 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_10003ce0
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001c130.70 to i32), i32* %r29.global-to-local, align 4
  %v2_10003d18 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10003d18, i32* @r3, align 4
  %v0_10003d20 = call i32 @__pthread_return_void()
  %v0_10003d28 = call i32 @__pthread_return_0()
  store i32 268451140, i32* @lr, align 4
  %v3_10003d40 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_1001c148)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10003d48 = icmp slt i32 %v3_10003d40, 0
  store i32 %v2_10003d18, i32* @r3, align 4
  br i1 %v1_10003d48, label %dec_label_pc_10003d5c, label %dec_label_pc_10003d58

dec_label_pc_10003d58:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1001c14c.74 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10003d5c

dec_label_pc_10003d5c:                            ; preds = %entry, %dec_label_pc_10003d58
  %v0_10003d5c = call i32 @__pthread_return_void()
  %v0_10003d64 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_10003d64

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10003d5c, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_10003d88 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10003d88, i32* @r3, align 4
  %v0_10003db0 = call i32 @__pthread_return_void()
  %v0_10003db8 = call i32 @__pthread_return_0()
  store i32 %arg1, i32* @r3, align 4
  store i32 268451288, i32* @lr, align 4
  %v4_10003dd4 = inttoptr i32 %arg1 to i32*
  %v5_10003dd4 = call i32 @__GI_initstate_r(i32* %v4_10003dd4, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_1001c148 to i32))
  store i32 %v2_10003d88, i32* @r3, align 4
  %v0_10003de0 = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_1001c14c.74 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10003e14 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10003e14, i32* @r3, align 4
  %v0_10003e30 = call i32 @__pthread_return_void()
  %v0_10003e38 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_1001c148 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268451404, i32* @lr, align 4
  %v0_10003e48 = call i32 @srandom_r()
  store i32 %v2_10003e14, i32* @r3, align 4
  %v0_10003e54 = call i32 @__pthread_return_void()
  ret i32 %v0_10003e54

; uselistorder directives
  uselistorder i32* @global_var_1001c148, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c148 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10003e6c = add i32 %tmp, 12
  %v2_10003e6c = inttoptr i32 %v1_10003e6c to i32*
  %v3_10003e6c = load i32, i32* %v2_10003e6c, align 4
  store i32 %v3_10003e6c, i32* %r11.global-to-local, align 4
  %v0_10003e70 = load i32, i32* @lr, align 4
  store i32 %v0_10003e70, i32* %r0.global-to-local, align 4
  %v1_10003e78 = add i32 %arg1, 4
  store i32 %v1_10003e78, i32* %r3.global-to-local, align 4
  %v3_10003e7c = icmp eq i32 %v3_10003e6c, 0
  %v1_10003e80 = add i32 %tmp, 8
  %v2_10003e80 = inttoptr i32 %v1_10003e80 to i32*
  %v3_10003e80 = load i32, i32* %v2_10003e80, align 4
  store i32 %v3_10003e80, i32* %r9.global-to-local, align 4
  br i1 %v3_10003e7c, label %dec_label_pc_10003e8c, label %dec_label_pc_10003e94

dec_label_pc_10003e8c:                            ; preds = %entry
  %v2_10003e8c = add i32 %v3_10003e80, -4
  %v3_10003e8c = inttoptr i32 %v2_10003e8c to i32*
  store i32 0, i32* %v3_10003e8c, align 4
  br label %dec_label_pc_10003eac

dec_label_pc_10003e94:                            ; preds = %entry
  %v1_10003e94 = add i32 %tmp, 4
  %v2_10003e94 = inttoptr i32 %v1_10003e94 to i32*
  %v3_10003e94 = load i32, i32* %v2_10003e94, align 4
  %v2_10003e98 = sub i32 %v3_10003e94, %v3_10003e80
  %v4_10003e9c = sdiv i32 %v2_10003e98, 4
  %v1_10003ea0 = mul i32 %v4_10003e9c, 5
  %v2_10003ea4 = add i32 %v1_10003ea0, %v3_10003e6c
  store i32 %v2_10003ea4, i32* %r0.global-to-local, align 4
  %v2_10003ea8 = add i32 %v3_10003e80, -4
  %v3_10003ea8 = inttoptr i32 %v2_10003ea8 to i32*
  store i32 %v2_10003ea4, i32* %v3_10003ea8, align 4
  br label %dec_label_pc_10003eac

dec_label_pc_10003eac:                            ; preds = %dec_label_pc_10003e8c, %dec_label_pc_10003e94
  %v0_10003eac = load i32, i32* %r3.global-to-local, align 4
  %v1_10003eac = add i32 %v0_10003eac, -4
  %v2_10003eac = inttoptr i32 %v1_10003eac to i32*
  %v3_10003eac = load i32, i32* %v2_10003eac, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000abac.75 to i32), i32* %r9.global-to-local, align 4
  %v2_10003ebc = srem i32 %v3_10003eac, 5
  store i32 %v2_10003ebc, i32* %r11.global-to-local, align 4
  %v2_10003ecc = icmp ugt i32 %v2_10003ebc, 4
  %v1_10003ed0 = mul nsw i32 %v2_10003ebc, 4
  store i32 %v1_10003ed0, i32* %r0.global-to-local, align 4
  %v2_10003ed8 = add i32 %v1_10003ed0, ptrtoint (i32* @global_var_1000abac.75 to i32)
  store i32 %v2_10003ed8, i32* %r10.global-to-local, align 4
  br i1 %v2_10003ecc, label %dec_label_pc_10003f3c, label %dec_label_pc_10003ee0

dec_label_pc_10003ee0:                            ; preds = %dec_label_pc_10003eac
  %v3_10003ed4 = icmp eq i32 %v2_10003ebc, 0
  %v1_10003ee0 = add i32 %v1_10003ed0, add (i32 ptrtoint (i32* @global_var_1000abac.75 to i32), i32 20)
  %v2_10003ee0 = inttoptr i32 %v1_10003ee0 to i32*
  %v3_10003ee0 = load i32, i32* %v2_10003ee0, align 4
  store i32 %v3_10003ee0, i32* %r10.global-to-local, align 4
  %v3_10003ee4 = inttoptr i32 %v2_10003ed8 to i32*
  %v4_10003ee4 = load i32, i32* %v3_10003ee4, align 4
  store i32 %v4_10003ee4, i32* %r9.global-to-local, align 4
  %v1_10003ee8 = mul i32 %v3_10003ee0, 4
  store i32 %v1_10003ee8, i32* %r0.global-to-local, align 4
  %v2_10003eec = add i32 %tmp, 16
  %v3_10003eec = inttoptr i32 %v2_10003eec to i32*
  store i32 %v3_10003ee0, i32* %v3_10003eec, align 4
  %v0_10003ef0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003ef0 = add i32 %tmp, 20
  %v3_10003ef0 = inttoptr i32 %v2_10003ef0 to i32*
  store i32 %v0_10003ef0, i32* %v3_10003ef0, align 4
  %v0_10003ef4 = load i32, i32* %r3.global-to-local, align 4
  %v1_10003ef4 = load i32, i32* %r0.global-to-local, align 4
  %v2_10003ef4 = add i32 %v1_10003ef4, %v0_10003ef4
  store i32 %v2_10003ef4, i32* %r8.global-to-local, align 4
  %v0_10003ef8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10003ef8, i32* %v2_10003e6c, align 4
  br i1 %v3_10003ed4, label %dec_label_pc_10003f30, label %dec_label_pc_10003f00

dec_label_pc_10003f00:                            ; preds = %dec_label_pc_10003ee0
  %v0_10003f00 = load i32, i32* %r3.global-to-local, align 4
  %v1_10003f00 = add i32 %v0_10003f00, -4
  %v2_10003f00 = inttoptr i32 %v1_10003f00 to i32*
  %v3_10003f00 = load i32, i32* %v2_10003f00, align 4
  %v1_10003f04 = load i32, i32* %r7.global-to-local, align 4
  %v2_10003f04 = sdiv i32 %v3_10003f00, %v1_10003f04
  %v1_10003f08 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003f08 = add i32 %v1_10003f08, %v2_10003f04
  store i32 %v2_10003f08, i32* %r9.global-to-local, align 4
  %v1_10003f0c = mul i32 %v2_10003f04, 4
  %v1_10003f10 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003f10 = sdiv i32 %v2_10003f08, %v1_10003f10
  store i32 %v2_10003f10, i32* %r11.global-to-local, align 4
  %v2_10003f14 = add i32 %v1_10003f0c, %v0_10003f00
  store i32 %v2_10003f14, i32* %r0.global-to-local, align 4
  %v2_10003f18 = add i32 %tmp, 4
  %v3_10003f18 = inttoptr i32 %v2_10003f18 to i32*
  store i32 %v2_10003f14, i32* %v3_10003f18, align 4
  %v0_10003f1c = load i32, i32* %r11.global-to-local, align 4
  %v1_10003f1c = load i32, i32* %r10.global-to-local, align 4
  %v2_10003f1c = mul i32 %v1_10003f1c, %v0_10003f1c
  store i32 %v2_10003f1c, i32* %r11.global-to-local, align 4
  %v1_10003f20 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003f20 = sub i32 %v1_10003f20, %v2_10003f1c
  %v1_10003f24 = mul i32 %v2_10003f20, 4
  %v0_10003f28 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003f28 = add i32 %v1_10003f24, %v0_10003f28
  store i32 %v2_10003f28, i32* %r9.global-to-local, align 4
  store i32 %v2_10003f28, i32* %arg2, align 4
  br label %dec_label_pc_10003f30

dec_label_pc_10003f30:                            ; preds = %dec_label_pc_10003ee0, %dec_label_pc_10003f00
  %v0_10003f30 = load i32, i32* %r8.global-to-local, align 4
  %v2_10003f30 = add i32 %tmp, 24
  %v3_10003f30 = inttoptr i32 %v2_10003f30 to i32*
  store i32 %v0_10003f30, i32* %v3_10003f30, align 4
  %v0_10003f34 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10003f34, i32* %v2_10003e80, align 4
  %v0_10003f50.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10003f4c

dec_label_pc_10003f3c:                            ; preds = %dec_label_pc_10003eac
  %v0_10003f3c = call i32 @__errno_location()
  store i32 %v0_10003f3c, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10003f44 = inttoptr i32 %v0_10003f3c to i32*
  store i32 22, i32* %v2_10003f44, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10003f4c

dec_label_pc_10003f4c:                            ; preds = %dec_label_pc_10003f30, %dec_label_pc_10003f3c
  %v0_10003f50 = phi i32 [ %v0_10003f50.pre, %dec_label_pc_10003f30 ], [ -1, %dec_label_pc_10003f3c ]
  store i32 %v0_10003e70, i32* %r0.global-to-local, align 4
  store i32 %v0_10003f50, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003f50

; uselistorder directives
  uselistorder i32 %v0_10003f50, { 1, 0 }
  uselistorder i32 %v3_10003ee0, { 1, 0, 2 }
  uselistorder i32 %v1_10003ed0, { 2, 1, 0 }
  uselistorder i32 %v2_10003ebc, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 6, 1, 3, 5, 0, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 0 }
  uselistorder label %dec_label_pc_10003f4c, { 1, 0 }
  uselistorder label %dec_label_pc_10003f30, { 1, 0 }
  uselistorder label %dec_label_pc_10003eac, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_10003f60 = add i32 %tmp, 12
  %v2_10003f60 = inttoptr i32 %v1_10003f60 to i32*
  %v3_10003f60 = load i32, i32* %v2_10003f60, align 4
  %v1_10003f6c = add i32 %tmp, 8
  %v2_10003f6c = inttoptr i32 %v1_10003f6c to i32*
  %v3_10003f6c = load i32, i32* %v2_10003f6c, align 4
  store i32 %v3_10003f6c, i32* %r7.global-to-local, align 4
  %v3_10003f70 = icmp eq i32 %v3_10003f60, 0
  br i1 %v3_10003f70, label %dec_label_pc_10003f78, label %dec_label_pc_10003f94

dec_label_pc_10003f78:                            ; preds = %entry
  %v1_10003f78 = inttoptr i32 %v3_10003f6c to i32*
  %v2_10003f78 = load i32, i32* %v1_10003f78, align 4
  %v2_10003f7c = mul i32 %v2_10003f78, 1103515245
  %v1_10003f80 = add i32 %v2_10003f7c, 12345
  %v1_10003f84 = urem i32 %v1_10003f80, -2147483648
  store i32 %v1_10003f84, i32* %r9.global-to-local, align 4
  store i32 %v1_10003f84, i32* %v1_10003f78, align 4
  %v0_10003f8c = load i32, i32* %r9.global-to-local, align 4
  %v2_10003f8c = inttoptr i32 %arg2 to i32*
  store i32 %v0_10003f8c, i32* %v2_10003f8c, align 4
  br label %dec_label_pc_10003fe8

dec_label_pc_10003f94:                            ; preds = %entry
  %v2_10003f94 = load i32, i32* %arg1, align 4
  %v1_10003f98 = add i32 %tmp, 4
  %v2_10003f98 = inttoptr i32 %v1_10003f98 to i32*
  %v3_10003f98 = load i32, i32* %v2_10003f98, align 4
  store i32 %v3_10003f98, i32* %r9.global-to-local, align 4
  %v1_10003f9c = add i32 %tmp, 24
  %v2_10003f9c = inttoptr i32 %v1_10003f9c to i32*
  %v3_10003f9c = load i32, i32* %v2_10003f9c, align 4
  %v1_10003fa0 = add i32 %v2_10003f94, 4
  store i32 %v1_10003fa0, i32* %r8.global-to-local, align 4
  %v1_10003fa4 = add i32 %v3_10003f98, 4
  %v1_10003fa8 = inttoptr i32 %v3_10003f98 to i32*
  %v2_10003fa8 = load i32, i32* %v1_10003fa8, align 4
  store i32 %v2_10003fa8, i32* %r9.global-to-local, align 4
  %v2_10003fac = icmp ult i32 %v1_10003fa0, %v3_10003f9c
  %v1_10003fb4 = inttoptr i32 %v2_10003f94 to i32*
  %v2_10003fb4 = load i32, i32* %v1_10003fb4, align 4
  store i32 %v1_10003fa4, i32* %r10.global-to-local, align 4
  %v2_10003fbc = add i32 %v2_10003fb4, %v2_10003fa8
  %v1_10003fc0 = udiv i32 %v2_10003fbc, 2
  store i32 %v1_10003fc0, i32* %r9.global-to-local, align 4
  store i32 %v2_10003fbc, i32* %v1_10003fb4, align 4
  %v0_10003fc8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003fc8 = inttoptr i32 %arg2 to i32*
  store i32 %v0_10003fc8, i32* %v2_10003fc8, align 4
  br i1 %v2_10003fac, label %dec_label_pc_10003fd8, label %dec_label_pc_10003fd0

dec_label_pc_10003fd0:                            ; preds = %dec_label_pc_10003f94
  %v0_10003fd0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10003fd0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10003fe0

dec_label_pc_10003fd8:                            ; preds = %dec_label_pc_10003f94
  %v2_10003fb0 = icmp ult i32 %v1_10003fa4, %v3_10003f9c
  br i1 %v2_10003fb0, label %dec_label_pc_10003fe0, label %dec_label_pc_10003fdc

dec_label_pc_10003fdc:                            ; preds = %dec_label_pc_10003fd8
  %v0_10003fdc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10003fdc, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10003fe0

dec_label_pc_10003fe0:                            ; preds = %dec_label_pc_10003fd8, %dec_label_pc_10003fd0, %dec_label_pc_10003fdc
  %v0_10003fe0 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10003fe0, i32* %v2_10003f98, align 4
  %v0_10003fe4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_10003fe4, i32* %arg1, align 4
  br label %dec_label_pc_10003fe8

dec_label_pc_10003fe8:                            ; preds = %dec_label_pc_10003f78, %dec_label_pc_10003fe0
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10003fbc, { 1, 0 }
  uselistorder i32 %v1_10003fa4, { 1, 0 }
  uselistorder i32 %v3_10003f98, { 1, 0, 2 }
  uselistorder i32 %v1_10003f84, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10003fe8, { 1, 0 }
  uselistorder label %dec_label_pc_10003fe0, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10003ff0 = load i32, i32* @lr, align 4
  %v0_10003ffc = load i32, i32* @r4, align 4
  store i32 %v0_10003ffc, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_10004008 = add i32 %v0_10003ffc, 12
  %v2_10004008 = inttoptr i32 %v1_10004008 to i32*
  %v3_10004008 = load i32, i32* %v2_10004008, align 4
  %v2_1000400c = icmp ugt i32 %v3_10004008, 4
  br i1 %v2_1000400c, label %dec_label_pc_100040bc, label %dec_label_pc_10004014

dec_label_pc_10004014:                            ; preds = %entry
  %v0_10004014 = load i32, i32* @r3, align 4
  %v3_10004014 = icmp eq i32 %v0_10004014, 0
  %v1_10004018 = add i32 %v0_10003ffc, 8
  %v2_10004018 = inttoptr i32 %v1_10004018 to i32*
  %v3_10004018 = load i32, i32* %v2_10004018, align 4
  store i32 %v3_10004018, i32* %r10.global-to-local, align 4
  br i1 %v3_10004014, label %dec_label_pc_10004020, label %dec_label_pc_10004024

dec_label_pc_10004020:                            ; preds = %dec_label_pc_10004014
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_10004024

dec_label_pc_10004024:                            ; preds = %dec_label_pc_10004014, %dec_label_pc_10004020
  %v0_10004028 = phi i32 [ %v0_10004014, %dec_label_pc_10004014 ], [ 1, %dec_label_pc_10004020 ]
  %v3_10004024 = icmp eq i32 %v3_10004008, 0
  %v2_10004028 = inttoptr i32 %v3_10004018 to i32*
  store i32 %v0_10004028, i32* %v2_10004028, align 4
  br i1 %v3_10004024, label %dec_label_pc_100040b8, label %dec_label_pc_10004030

dec_label_pc_10004030:                            ; preds = %dec_label_pc_10004024
  %v0_10004030 = load i32, i32* @r30, align 4
  %v1_10004030 = add i32 %v0_10004030, 16
  %v2_10004030 = inttoptr i32 %v1_10004030 to i32*
  %v3_10004030 = load i32, i32* %v2_10004030, align 4
  store i32 %v3_10004030, i32* %r11.global-to-local, align 4
  store i32 127773, i32* %r8.global-to-local, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_10004048 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_10004030, i32* %ctr.global-to-local, align 4
  %tmp27 = icmp sgt i32 %v3_10004030, 0
  br i1 %tmp27, label %dec_label_pc_10004084.preheader, label %dec_label_pc_10004084.preheader.thread

dec_label_pc_10004084.preheader.thread:           ; preds = %dec_label_pc_10004030
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10004088

dec_label_pc_10004084.preheader:                  ; preds = %dec_label_pc_10004030
  %v1_1000408411 = add i32 %v3_10004030, -1
  store i32 %v1_1000408411, i32* %ctr.global-to-local, align 4
  %v2_1000408412 = icmp eq i32 %v1_1000408411, 0
  br i1 %v2_1000408412, label %dec_label_pc_10004088, label %dec_label_pc_10004060

dec_label_pc_10004060:                            ; preds = %dec_label_pc_10004084.preheader, %dec_label_pc_10004080.dec_label_pc_10004060_crit_edge
  %v1_10004080 = phi i32 [ %v2_10004080, %dec_label_pc_10004080.dec_label_pc_10004060_crit_edge ], [ %v0_10004048, %dec_label_pc_10004084.preheader ]
  %v1_10004060 = phi i32 [ %v1_10004060.pre, %dec_label_pc_10004080.dec_label_pc_10004060_crit_edge ], [ 127773, %dec_label_pc_10004084.preheader ]
  %v0_10004060 = load i32, i32* @r3, align 4
  %v2_10004060 = sdiv i32 %v0_10004060, %v1_10004060
  %v2_10004064 = mul i32 %v2_10004060, %v1_10004060
  %v2_10004068 = sub i32 %v0_10004060, %v2_10004064
  %v1_1000406c = mul i32 %v2_10004060, 2836
  store i32 %v1_1000406c, i32* %r0.global-to-local, align 4
  %v1_10004070 = mul i32 %v2_10004068, 16807
  %v2_10004074 = sub i32 %v1_10004070, %v1_1000406c
  store i32 %v2_10004074, i32* @r3, align 4
  %tmp28 = icmp sgt i32 %v2_10004074, -1
  br i1 %tmp28, label %dec_label_pc_10004080, label %dec_label_pc_1000407c

dec_label_pc_1000407c:                            ; preds = %dec_label_pc_10004060
  %v1_1000407c = load i32, i32* %r7.global-to-local, align 4
  %v2_1000407c = add i32 %v1_1000407c, %v2_10004074
  store i32 %v2_1000407c, i32* @r3, align 4
  br label %dec_label_pc_10004080

dec_label_pc_10004080:                            ; preds = %dec_label_pc_10004060, %dec_label_pc_1000407c
  %v0_10004080 = phi i32 [ %v2_10004074, %dec_label_pc_10004060 ], [ %v2_1000407c, %dec_label_pc_1000407c ]
  %v2_10004080 = add i32 %v1_10004080, 4
  %v3_10004080 = inttoptr i32 %v2_10004080 to i32*
  store i32 %v0_10004080, i32* %v3_10004080, align 4
  %v0_10004084 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004084 = add i32 %v0_10004084, -1
  store i32 %v1_10004084, i32* %ctr.global-to-local, align 4
  %v2_10004084 = icmp eq i32 %v1_10004084, 0
  br i1 %v2_10004084, label %dec_label_pc_10004084.dec_label_pc_10004088_crit_edge, label %dec_label_pc_10004080.dec_label_pc_10004060_crit_edge

dec_label_pc_10004080.dec_label_pc_10004060_crit_edge: ; preds = %dec_label_pc_10004080
  %v1_10004060.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10004060

dec_label_pc_10004084.dec_label_pc_10004088_crit_edge: ; preds = %dec_label_pc_10004080
  %v0_10004088.pre = load i32, i32* @r30, align 4
  %v0_1000408c.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10004090.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10004088

dec_label_pc_10004088:                            ; preds = %dec_label_pc_10004084.preheader.thread, %dec_label_pc_10004084.dec_label_pc_10004088_crit_edge, %dec_label_pc_10004084.preheader
  %v0_10004090 = phi i32 [ %v0_10004090.pre, %dec_label_pc_10004084.dec_label_pc_10004088_crit_edge ], [ %v0_10004048, %dec_label_pc_10004084.preheader ], [ %v0_10004048, %dec_label_pc_10004084.preheader.thread ]
  %v0_1000408c = phi i32 [ %v0_1000408c.pre, %dec_label_pc_10004084.dec_label_pc_10004088_crit_edge ], [ %v3_10004030, %dec_label_pc_10004084.preheader ], [ %v3_10004030, %dec_label_pc_10004084.preheader.thread ]
  %v1_10004090 = phi i32 [ %v0_10004088.pre, %dec_label_pc_10004084.dec_label_pc_10004088_crit_edge ], [ %v0_10004030, %dec_label_pc_10004084.preheader ], [ %v0_10004030, %dec_label_pc_10004084.preheader.thread ]
  %v1_10004088 = add i32 %v1_10004090, 20
  %v2_10004088 = inttoptr i32 %v1_10004088 to i32*
  %v3_10004088 = load i32, i32* %v2_10004088, align 4
  store i32 %v3_10004088, i32* %r0.global-to-local, align 4
  %v1_1000408c = mul i32 %v0_1000408c, 10
  store i32 %v1_1000408c, i32* %r31.global-to-local, align 4
  %v2_10004090 = add i32 %v1_10004090, 4
  %v3_10004090 = inttoptr i32 %v2_10004090 to i32*
  store i32 %v0_10004090, i32* %v3_10004090, align 4
  %v0_10004094 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004094 = mul i32 %v0_10004094, 4
  %v0_10004098 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004098 = add i32 %v0_10004098, %v1_10004094
  store i32 %v2_10004098, i32* %r0.global-to-local, align 4
  %v1_1000409c = load i32, i32* @r30, align 4
  %v2_1000409c = inttoptr i32 %v1_1000409c to i32*
  store i32 %v2_10004098, i32* %v2_1000409c, align 4
  %v0_100040a81 = load i32, i32* %r31.global-to-local, align 4
  %v1_100040a82 = add i32 %v0_100040a81, -1
  store i32 %v1_100040a82, i32* @r31, align 4
  %v2_100040b0 = ptrtoint i32* %stack_var_-24 to i32
  %tmp29 = icmp sgt i32 %v1_100040a82, -1
  br i1 %tmp29, label %dec_label_pc_100040a4, label %dec_label_pc_100040b8

dec_label_pc_100040a4:                            ; preds = %dec_label_pc_10004088, %dec_label_pc_100040a4
  %v0_100040ac9 = load i32, i32* @r30, align 4
  %v2_100040a4 = inttoptr i32 %v0_100040ac9 to i32*
  %v3_100040a4 = call i32 @__GI_random_r(i32* %v2_100040a4, i32 %v2_100040b0)
  %v0_100040a8 = load i32, i32* @r31, align 4
  %v1_100040a8 = add i32 %v0_100040a8, -1
  store i32 %v1_100040a8, i32* @r31, align 4
  %tmp30 = icmp sgt i32 %v1_100040a8, -1
  br i1 %tmp30, label %dec_label_pc_100040a4, label %dec_label_pc_100040b8

dec_label_pc_100040b8:                            ; preds = %dec_label_pc_100040a4, %dec_label_pc_10004088, %dec_label_pc_10004024
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100040bc

dec_label_pc_100040bc:                            ; preds = %entry, %dec_label_pc_100040b8
  %v0_100040bc = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_100040b8 ]
  store i32 %v0_10003ff0, i32* %r0.global-to-local, align 4
  ret i32 %v0_100040bc

; uselistorder directives
  uselistorder i32 %v1_10004084, { 1, 0 }
  uselistorder i32 %v2_10004080, { 1, 0 }
  uselistorder i32 %v2_10004074, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10004060, { 1, 0 }
  uselistorder i32 %v0_10004048, { 1, 2, 0 }
  uselistorder i32 %v3_10004030, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 4, 3 }
  uselistorder i32 (i32*, i32)* @__GI_random_r, { 1, 0 }
  uselistorder label %dec_label_pc_100040bc, { 1, 0 }
  uselistorder label %dec_label_pc_100040a4, { 1, 0 }
  uselistorder label %dec_label_pc_10004088, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10004080, { 1, 0 }
  uselistorder label %dec_label_pc_10004060, { 1, 0 }
  uselistorder label %dec_label_pc_10004024, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_100040d4 = icmp ugt i32 %arg2, 127
  %v0_100040dc = load i32, i32* @lr, align 4
  store i32 %v0_100040dc, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_100040e8 = sub i32 255, %arg2
  %v2_100040e8 = sub i32 -1, %arg2
  %not.v5_100040e8 = icmp ugt i32 %v1_100040e8, %v2_100040e8
  %v6_100040ec = sext i1 %not.v5_100040e8 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_100040f4 = add i32 %tmp, 4
  store i32 %v1_100040f4, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000abac.75 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_1000410c = sub nsw i32 3, %v6_100040ec
  store i32 %v1_1000410c, i32* @r31, align 4
  br i1 %v2_100040d4, label %dec_label_pc_10004134, label %dec_label_pc_10004114

dec_label_pc_10004114:                            ; preds = %entry
  %v2_10004100 = icmp ugt i32 %arg2, 31
  %v1_10004114 = sub i32 63, %arg2
  %not.v5_10004114 = icmp ugt i32 %v1_10004114, %v2_100040e8
  %v6_10004118 = sext i1 %not.v5_10004114 to i32
  %v1_10004120 = sub nsw i32 1, %v6_10004118
  store i32 %v1_10004120, i32* @r31, align 4
  br i1 %v2_10004100, label %dec_label_pc_10004134, label %dec_label_pc_10004128

dec_label_pc_10004128:                            ; preds = %dec_label_pc_10004114
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_10004194, label %dec_label_pc_10004134

dec_label_pc_10004134:                            ; preds = %dec_label_pc_10004128, %dec_label_pc_10004114, %entry
  %v0_10004134 = phi i32 [ 0, %dec_label_pc_10004128 ], [ %v1_10004120, %dec_label_pc_10004114 ], [ %v1_1000410c, %entry ]
  %v1_10004134 = mul nsw i32 %v0_10004134, 4
  store i32 %v1_10004134, i32* %r0.global-to-local, align 4
  %v2_10004138 = add i32 %arg3, 12
  %v3_10004138 = inttoptr i32 %v2_10004138 to i32*
  store i32 %v0_10004134, i32* %v3_10004138, align 4
  %v0_1000413c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000413c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000413c = add i32 %v1_1000413c, %v0_1000413c
  store i32 %v2_1000413c, i32* %r9.global-to-local, align 4
  %v3_10004140 = inttoptr i32 %v2_1000413c to i32*
  %v4_10004140 = load i32, i32* %v3_10004140, align 4
  store i32 %v4_10004140, i32* %r0.global-to-local, align 4
  %v1_10004144 = add i32 %v2_1000413c, 20
  %v2_10004144 = inttoptr i32 %v1_10004144 to i32*
  %v3_10004144 = load i32, i32* %v2_10004144, align 4
  store i32 %v3_10004144, i32* %r9.global-to-local, align 4
  %v1_10004148 = load i32, i32* %r30.global-to-local, align 4
  %v2_10004148 = add i32 %v1_10004148, 20
  %v3_10004148 = inttoptr i32 %v2_10004148 to i32*
  store i32 %v4_10004140, i32* %v3_10004148, align 4
  %v0_1000414c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000414c = mul i32 %v0_1000414c, 4
  store i32 %v1_1000414c, i32* %r0.global-to-local, align 4
  %v0_10004150 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004150 = load i32, i32* %r30.global-to-local, align 4
  %v2_10004150 = add i32 %v1_10004150, 8
  %v3_10004150 = inttoptr i32 %v2_10004150 to i32*
  store i32 %v0_10004150, i32* %v3_10004150, align 4
  %v0_10004154 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004154 = load i32, i32* %r0.global-to-local, align 4
  %v2_10004154 = add i32 %v1_10004154, %v0_10004154
  store i32 %v2_10004154, i32* %r0.global-to-local, align 4
  %v0_10004158 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004158 = load i32, i32* %r30.global-to-local, align 4
  %v2_10004158 = add i32 %v1_10004158, 16
  %v3_10004158 = inttoptr i32 %v2_10004158 to i32*
  store i32 %v0_10004158, i32* %v3_10004158, align 4
  %v0_1000415c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000415c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000415c = add i32 %v1_1000415c, 24
  %v3_1000415c = inttoptr i32 %v2_1000415c to i32*
  store i32 %v0_1000415c, i32* %v3_1000415c, align 4
  store i32 268452196, i32* @lr, align 4
  %v0_10004160 = call i32 @srandom_r()
  %v0_10004164 = load i32, i32* @r31, align 4
  %v3_10004164 = icmp eq i32 %v0_10004164, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10004170 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004170 = inttoptr i32 %v1_10004170 to i32*
  store i32 0, i32* %v2_10004170, align 4
  br i1 %v3_10004164, label %dec_label_pc_100041a8, label %dec_label_pc_10004178

dec_label_pc_10004178:                            ; preds = %dec_label_pc_10004134
  %v0_10004178 = load i32, i32* @r30, align 4
  %v1_10004178 = add i32 %v0_10004178, 4
  %v2_10004178 = inttoptr i32 %v1_10004178 to i32*
  %v3_10004178 = load i32, i32* %v2_10004178, align 4
  %v0_1000417c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000417c = sub i32 %v3_10004178, %v0_1000417c
  %v4_10004180 = sdiv i32 %v2_1000417c, 4
  %v1_10004184 = mul i32 %v4_10004180, 5
  %v1_10004188 = load i32, i32* @r31, align 4
  %v2_10004188 = add i32 %v1_10004184, %v1_10004188
  store i32 %v2_10004188, i32* %r0.global-to-local, align 4
  %v1_1000418c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000418c = inttoptr i32 %v1_1000418c to i32*
  store i32 %v2_10004188, i32* %v2_1000418c, align 4
  br label %dec_label_pc_100041a8

dec_label_pc_10004194:                            ; preds = %dec_label_pc_10004128
  %v0_10004194 = call i32 @__errno_location()
  store i32 %v0_10004194, i32* %r3.global-to-local, align 4
  %v0_10004198 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004198 = inttoptr i32 %v0_10004194 to i32*
  store i32 %v0_10004198, i32* %v2_10004198, align 4
  %v0_1000419c = call i32 @__errno_location()
  %v0_100041a0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100041a0 = inttoptr i32 %v0_1000419c to i32*
  store i32 %v0_100041a0, i32* %v2_100041a0, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100041a8

dec_label_pc_100041a8:                            ; preds = %dec_label_pc_10004134, %dec_label_pc_10004178, %dec_label_pc_10004194
  store i32 %v0_100040dc, i32* %r0.global-to-local, align 4
  %v0_100041b8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100041b8

; uselistorder directives
  uselistorder i32 %v2_1000413c, { 1, 0, 2 }
  uselistorder i32 %v0_10004134, { 1, 0 }
  uselistorder i32 %v2_100040e8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000abac.75 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 5, 4 }
  uselistorder label %dec_label_pc_100041a8, { 2, 1, 0 }
}

define i32 @atol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_100041c4 = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_100041c4
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_100041cc = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_100041cc
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100041e0 = load i32, i32* @r4, align 4
  store i32 %v0_100041e0, i32* %r25.global-to-local, align 4
  %v0_100041e8 = load i32, i32* @r5, align 4
  store i32 %v0_100041e8, i32* %r30.global-to-local, align 4
  %v0_100041ec = load i32, i32* @r6, align 4
  store i32 %v0_100041ec, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_100041f4 = load i32, i32* @global_var_1001c35c, align 4
  %v2_1000420027 = load i8, i8* %arg1, align 1
  %v3_1000420028 = zext i8 %v2_1000420027 to i32
  %v1_1000420429 = mul nuw nsw i32 %v3_1000420028, 2
  %v2_1000420830 = add i32 %v1_1000420429, %v3_100041f4
  %v3_1000420831 = inttoptr i32 %v2_1000420830 to i16*
  %v4_1000420832 = load i16, i16* %v3_1000420831, align 2
  %v1_1000420c34 = and i16 %v4_1000420832, 32
  %v3_1000420c35 = icmp eq i16 %v1_1000420c34, 0
  br i1 %v3_1000420c35, label %dec_label_pc_10004214, label %dec_label_pc_100041fc

dec_label_pc_100041fc:                            ; preds = %entry, %dec_label_pc_100041fc
  %v0_1000423436 = phi i32 [ %v1_100041fc, %dec_label_pc_100041fc ], [ %tmp, %entry ]
  %v1_100041fc = add i32 %v0_1000423436, 1
  store i32 %v1_100041fc, i32* %r31.global-to-local, align 4
  %v1_10004200 = inttoptr i32 %v1_100041fc to i8*
  %v2_10004200 = load i8, i8* %v1_10004200, align 1
  %v3_10004200 = zext i8 %v2_10004200 to i32
  %v1_10004204 = mul nuw nsw i32 %v3_10004200, 2
  %v2_10004208 = add i32 %v1_10004204, %v3_100041f4
  %v3_10004208 = inttoptr i32 %v2_10004208 to i16*
  %v4_10004208 = load i16, i16* %v3_10004208, align 2
  %v1_1000420c = and i16 %v4_10004208, 32
  %v3_1000420c = icmp eq i16 %v1_1000420c, 0
  br i1 %v3_1000420c, label %dec_label_pc_10004214, label %dec_label_pc_100041fc

dec_label_pc_10004214:                            ; preds = %dec_label_pc_100041fc, %entry
  %v0_10004234.lcssa = phi i32 [ %tmp, %entry ], [ %v1_100041fc, %dec_label_pc_100041fc ]
  %v2_10004200.lcssa = phi i8 [ %v2_1000420027, %entry ], [ %v2_10004200, %dec_label_pc_100041fc ]
  %v3_10004214 = icmp eq i8 %v2_10004200.lcssa, 43
  br i1 %v3_10004214, label %dec_label_pc_10004234, label %dec_label_pc_1000421c

dec_label_pc_1000421c:                            ; preds = %dec_label_pc_10004214
  %v3_1000421c = icmp eq i8 %v2_10004200.lcssa, 45
  store i32 0, i32* %r28.global-to-local, align 4
  br i1 %v3_1000421c, label %dec_label_pc_10004234, label %dec_label_pc_10004238

dec_label_pc_10004234:                            ; preds = %dec_label_pc_10004214, %dec_label_pc_1000421c
  %storemerge = phi i32 [ 1, %dec_label_pc_1000421c ], [ 0, %dec_label_pc_10004214 ]
  store i32 %storemerge, i32* %r28.global-to-local, align 4
  %v1_10004234 = add i32 %v0_10004234.lcssa, 1
  store i32 %v1_10004234, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10004238

dec_label_pc_10004238:                            ; preds = %dec_label_pc_1000421c, %dec_label_pc_10004234
  %v1_10004238 = call i32 @__asm_rlwinm.(i32 %v0_100041e8, i32 0, i32 28, i32 26)
  %v4_10004238 = icmp eq i32 %v1_10004238, 0
  br i1 %v4_10004238, label %dec_label_pc_10004244, label %dec_label_pc_10004238.dec_label_pc_10004280_crit_edge

dec_label_pc_10004238.dec_label_pc_10004280_crit_edge: ; preds = %dec_label_pc_10004238
  %v0_10004280.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004280

dec_label_pc_10004244:                            ; preds = %dec_label_pc_10004238
  %v0_10004244 = load i32, i32* %r31.global-to-local, align 4
  %v1_10004244 = inttoptr i32 %v0_10004244 to i8*
  %v2_10004244 = load i8, i8* %v1_10004244, align 1
  %v0_10004248 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004248 = add i32 %v0_10004248, 10
  store i32 %v1_10004248, i32* %r30.global-to-local, align 4
  %v3_1000424c = icmp eq i8 %v2_10004244, 48
  br i1 %v3_1000424c, label %dec_label_pc_10004254, label %dec_label_pc_10004274

dec_label_pc_10004254:                            ; preds = %dec_label_pc_10004244
  %v1_10004254 = add i32 %v0_10004244, 1
  %v2_10004254 = inttoptr i32 %v1_10004254 to i8*
  %v3_10004254 = load i8, i8* %v2_10004254, align 1
  %v4_10004254 = zext i8 %v3_10004254 to i32
  store i32 %v1_10004254, i32* %r31.global-to-local, align 4
  %v1_10004258 = add i32 %v0_10004248, 8
  store i32 %v1_10004258, i32* %r30.global-to-local, align 4
  %v1_1000425c = or i32 %v4_10004254, 32
  %v3_10004264 = icmp eq i32 %v1_1000425c, 120
  br i1 %v3_10004264, label %dec_label_pc_1000426c, label %dec_label_pc_10004274

dec_label_pc_1000426c:                            ; preds = %dec_label_pc_10004254
  %v1_1000426c = mul i32 %v1_10004258, 2
  store i32 %v1_1000426c, i32* %r30.global-to-local, align 4
  %v1_10004270 = add i32 %v0_10004244, 2
  store i32 %v1_10004270, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10004274

dec_label_pc_10004274:                            ; preds = %dec_label_pc_10004254, %dec_label_pc_10004244, %dec_label_pc_1000426c
  %v0_1000432815 = phi i32 [ %v1_10004254, %dec_label_pc_1000426c ], [ %tmp, %dec_label_pc_10004244 ], [ %v1_10004254, %dec_label_pc_10004254 ]
  %v0_10004274 = phi i32 [ %v1_1000426c, %dec_label_pc_1000426c ], [ %v1_10004248, %dec_label_pc_10004244 ], [ %v1_10004258, %dec_label_pc_10004254 ]
  %tmp22 = icmp slt i32 %v0_10004274, 17
  br i1 %tmp22, label %dec_label_pc_10004280, label %dec_label_pc_1000427c

dec_label_pc_1000427c:                            ; preds = %dec_label_pc_10004274
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004280

dec_label_pc_10004280:                            ; preds = %dec_label_pc_10004238.dec_label_pc_10004280_crit_edge, %dec_label_pc_10004274, %dec_label_pc_1000427c
  %v0_1000432814 = phi i32 [ %tmp, %dec_label_pc_10004238.dec_label_pc_10004280_crit_edge ], [ %v0_1000432815, %dec_label_pc_10004274 ], [ %v0_1000432815, %dec_label_pc_1000427c ]
  %v1_10004294 = phi i32 [ %v0_10004280.pre, %dec_label_pc_10004238.dec_label_pc_10004280_crit_edge ], [ %v0_10004274, %dec_label_pc_10004274 ], [ 16, %dec_label_pc_1000427c ]
  %v1_10004280 = add i32 %v1_10004294, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_10004288 = icmp ugt i32 %v1_10004280, 34
  br i1 %v2_10004288, label %dec_label_pc_10004320, label %dec_label_pc_10004290

dec_label_pc_10004290:                            ; preds = %dec_label_pc_10004280
  %v2_10004294 = udiv i32 -1, %v1_10004294
  store i32 %v2_10004294, i32* %r29.global-to-local, align 4
  %v2_10004298 = mul i32 %v2_10004294, %v1_10004294
  %v1_1000429c = sub i32 -1, %v2_10004298
  %v1_100042a0 = urem i32 %v1_1000429c, 256
  store i32 %v1_100042a0, i32* %r27.global-to-local, align 4
  %v0_100042ac.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100042ac

dec_label_pc_100042a8:                            ; preds = %dec_label_pc_10004314, %dec_label_pc_100042fc
  %v1_100042b0.pre = phi i32 [ %v1_100042b4, %dec_label_pc_10004314 ], [ %v1_100042b0.pre.pre, %dec_label_pc_100042fc ]
  %v0_100042b0.pre = phi i32 [ %v2_10004318, %dec_label_pc_10004314 ], [ %v0_100042b0.pre.pre, %dec_label_pc_100042fc ]
  %v0_100042a8 = phi i32 [ %v1_100042b8, %dec_label_pc_10004314 ], [ %v0_100042a8.pre, %dec_label_pc_100042fc ]
  br label %dec_label_pc_100042ac

dec_label_pc_100042ac:                            ; preds = %dec_label_pc_10004290, %dec_label_pc_100042a8
  %v0_1000432812 = phi i32 [ %v0_1000432814, %dec_label_pc_10004290 ], [ %v0_100042a8, %dec_label_pc_100042a8 ]
  %v0_100042b8 = phi i32 [ %v0_100042ac.pre, %dec_label_pc_10004290 ], [ %v0_100042a8, %dec_label_pc_100042a8 ]
  %v1_100042b4 = phi i32 [ %v2_10004294, %dec_label_pc_10004290 ], [ %v1_100042b0.pre, %dec_label_pc_100042a8 ]
  %v0_10004314 = phi i32 [ 0, %dec_label_pc_10004290 ], [ %v0_100042b0.pre, %dec_label_pc_100042a8 ]
  %v1_100042ac = inttoptr i32 %v0_100042b8 to i8*
  %v2_100042ac = load i8, i8* %v1_100042ac, align 1
  %v3_100042ac = zext i8 %v2_100042ac to i32
  %v3_100042b0 = icmp ugt i32 %v0_10004314, %v1_100042b4
  %v1_100042b8 = add i32 %v0_100042b8, 1
  store i32 %v1_100042b8, i32* %r31.global-to-local, align 4
  %v1_100042bc = add nsw i32 %v3_100042ac, -48
  %v1_100042c0 = or i32 %v3_100042ac, 32
  %v1_100042c4 = urem i32 %v1_100042bc, 256
  %tmp23 = icmp ult i32 %v1_100042c4, 10
  br i1 %tmp23, label %dec_label_pc_100042e4, label %dec_label_pc_100042d4

dec_label_pc_100042d4:                            ; preds = %dec_label_pc_100042ac
  %tmp24 = icmp ult i32 %v1_100042c0, 97
  br i1 %tmp24, label %dec_label_pc_100042e4, label %dec_label_pc_100042e0

dec_label_pc_100042e0:                            ; preds = %dec_label_pc_100042d4
  %v1_100042d4 = add nsw i32 %v1_100042c0, -87
  %v1_100042e0 = urem i32 %v1_100042d4, 256
  br label %dec_label_pc_100042e4

dec_label_pc_100042e4:                            ; preds = %dec_label_pc_100042d4, %dec_label_pc_100042ac, %dec_label_pc_100042e0
  %v1_10004318 = phi i32 [ 40, %dec_label_pc_100042d4 ], [ %v1_100042c4, %dec_label_pc_100042ac ], [ %v1_100042e0, %dec_label_pc_100042e0 ]
  %v1_100042e4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100042e4 = icmp slt i32 %v1_10004318, %v1_100042e4
  br i1 %v2_100042e4, label %dec_label_pc_100042ec, label %dec_label_pc_10004320

dec_label_pc_100042ec:                            ; preds = %dec_label_pc_100042e4
  br i1 %v3_100042b0, label %dec_label_pc_100042fc, label %dec_label_pc_100042f0

dec_label_pc_100042f0:                            ; preds = %dec_label_pc_100042ec
  %v1_100042f0 = load i32, i32* %r27.global-to-local, align 4
  %v0_100042f4.not = icmp ne i32 %v0_10004314, %v1_100042b4
  %tmp25 = icmp ule i32 %v1_10004318, %v1_100042f0
  %or.cond = or i1 %tmp25, %v0_100042f4.not
  br i1 %or.cond, label %dec_label_pc_10004314, label %dec_label_pc_100042fc

dec_label_pc_100042fc:                            ; preds = %dec_label_pc_100042f0, %dec_label_pc_100042ec
  %v0_100042fc = call i32 @__errno_location()
  %v0_10004300 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004300 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004300 = and i32 %v1_10004300, %v0_10004300
  store i32 %v2_10004300, i32* %r28.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000430c = inttoptr i32 %v0_100042fc to i32*
  store i32 34, i32* %v2_1000430c, align 4
  %v0_100042a8.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_100042b0.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_100042b0.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100042a8

dec_label_pc_10004314:                            ; preds = %dec_label_pc_100042f0
  %v2_10004314 = mul i32 %v1_100042e4, %v0_10004314
  %v2_10004318 = add i32 %v2_10004314, %v1_10004318
  store i32 %v2_10004318, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100042a8

dec_label_pc_10004320:                            ; preds = %dec_label_pc_100042e4, %dec_label_pc_10004280
  %v0_10004328 = phi i32 [ %v0_1000432814, %dec_label_pc_10004280 ], [ %v0_1000432812, %dec_label_pc_100042e4 ]
  %v0_10004320 = load i32, i32* %r25.global-to-local, align 4
  %v3_10004320 = icmp eq i32 %v0_10004320, 0
  br i1 %v3_10004320, label %dec_label_pc_1000432c, label %dec_label_pc_10004328

dec_label_pc_10004328:                            ; preds = %dec_label_pc_10004320
  %v2_10004328 = inttoptr i32 %v0_10004320 to i32*
  store i32 %v0_10004328, i32* %v2_10004328, align 4
  br label %dec_label_pc_1000432c

dec_label_pc_1000432c:                            ; preds = %dec_label_pc_10004320, %dec_label_pc_10004328
  %v0_1000432c = load i32, i32* %r26.global-to-local, align 4
  %v3_1000432c = icmp eq i32 %v0_1000432c, 0
  %v0_10004330 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004330 = sub i32 0, %v0_10004330
  %tmp40 = lshr i32 %v1_10004330, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_10004370.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000432c, label %dec_label_pc_10004360, label %dec_label_pc_10004348

dec_label_pc_10004348:                            ; preds = %dec_label_pc_1000432c
  %v3_10004348 = icmp ugt i32 %v0_10004370.pre.pre, %tmp41
  br i1 %v3_10004348, label %dec_label_pc_10004350, label %dec_label_pc_10004360

dec_label_pc_10004350:                            ; preds = %dec_label_pc_10004348
  %v0_10004350 = call i32 @__errno_location()
  %v2_10004358 = inttoptr i32 %v0_10004350 to i32*
  store i32 34, i32* %v2_10004358, align 4
  %v0_1000435c = load i32, i32* @r31, align 4
  store i32 %v0_1000435c, i32* %r8.global-to-local, align 4
  %v0_10004360.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10004360

dec_label_pc_10004360:                            ; preds = %dec_label_pc_1000432c, %dec_label_pc_10004348, %dec_label_pc_10004350
  %v0_10004370.pre = phi i32 [ %v0_10004370.pre.pre, %dec_label_pc_10004348 ], [ %v0_1000435c, %dec_label_pc_10004350 ], [ %v0_10004370.pre.pre, %dec_label_pc_1000432c ]
  %v0_10004360 = phi i32 [ %v0_10004330, %dec_label_pc_10004348 ], [ %v0_10004360.pre, %dec_label_pc_10004350 ], [ %v0_10004330, %dec_label_pc_1000432c ]
  %v3_10004360 = icmp eq i32 %v0_10004360, 0
  br i1 %v3_10004360, label %dec_label_pc_1000436c, label %dec_label_pc_10004368

dec_label_pc_10004368:                            ; preds = %dec_label_pc_10004360
  %v1_10004368 = sub i32 0, %v0_10004370.pre
  store i32 %v1_10004368, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000436c

dec_label_pc_1000436c:                            ; preds = %dec_label_pc_10004360, %dec_label_pc_10004368
  %v0_10004370 = phi i32 [ %v1_10004368, %dec_label_pc_10004368 ], [ %v0_10004370.pre, %dec_label_pc_10004360 ]
  ret i32 %v0_10004370

; uselistorder directives
  uselistorder i32 %v0_10004370.pre, { 1, 0 }
  uselistorder i32 %v0_10004370.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_10004318, { 1, 0 }
  uselistorder i32 %v1_100042c4, { 1, 0 }
  uselistorder i32 %v1_100042c0, { 1, 0 }
  uselistorder i32 %v1_100042b8, { 1, 0 }
  uselistorder i32 %v3_100042ac, { 1, 0 }
  uselistorder i32 %v0_10004314, { 1, 0, 2 }
  uselistorder i32 %v1_100042b4, { 0, 2, 1 }
  uselistorder i32 %v0_100042a8, { 1, 0 }
  uselistorder i32 %v2_10004294, { 1, 0, 2 }
  uselistorder i32 %v1_1000426c, { 1, 0 }
  uselistorder i32 %v1_10004258, { 1, 0, 2 }
  uselistorder i8 %v2_10004200.lcssa, { 1, 0 }
  uselistorder i32 %v1_100041fc, { 0, 2, 3, 1 }
  uselistorder i32 %v3_100041f4, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 5, 1, 0, 2, 3, 6, 4, 7 }
  uselistorder i32* %r28.global-to-local, { 2, 3, 0, 4, 5, 1 }
  uselistorder label %dec_label_pc_1000436c, { 1, 0 }
  uselistorder label %dec_label_pc_10004360, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000432c, { 1, 0 }
  uselistorder label %dec_label_pc_100042e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100042ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004280, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004274, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004238, { 1, 0 }
  uselistorder label %dec_label_pc_10004234, { 1, 0 }
  uselistorder label %dec_label_pc_100041fc, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000439c = ptrtoint i32* %stack_var_-40 to i32
  %v0_100043a8 = load i32, i32* @r3, align 4
  store i32 %v0_100043a8, i32* @r31, align 4
  store i32 %v2_1000439c, i32* @r3, align 4
  %v0_100043b4 = call i32 @__pthread_return_void()
  %v0_100043bc = call i32 @__pthread_return_0()
  %v3_100043c4 = load i32, i32* @global_var_1001c3c4.79, align 4
  %v3_100043c8 = icmp eq i32 %v3_100043c4, 0
  br i1 %v3_100043c8, label %dec_label_pc_100043dc, label %dec_label_pc_100043d0

dec_label_pc_100043d0:                            ; preds = %entry
  %v0_100043d0 = load i32, i32* @r31, align 4
  %v3_100043d8 = call i32 @unknown_0(i32 %v0_100043d0, i32 268566528)
  br label %dec_label_pc_100043dc

dec_label_pc_100043dc:                            ; preds = %entry, %dec_label_pc_100043d0
  store i32 %v2_1000439c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_100043e4 = call i32 @__pthread_return_void()
  store i32 %v0_100043e4, i32* @r3, align 4
  store i32 268452844, i32* @lr, align 4
  %v1_100043e8 = call i32 @__GI___uClibc_fini(i32 %v0_100043e4)
  store i32 268452864, i32* @lr, align 4
  %v2_100043fc = call i32 @_stdio_term(i32 %v1_100043e8, i32 268459960)
  %v0_10004400 = load i32, i32* @r31, align 4
  %v1_10004404 = call i32 @__GI__exit(i32 %v0_10004400)
  ret i32 %v1_10004404

; uselistorder directives
  uselistorder label %dec_label_pc_100043dc, { 1, 0 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004458:
  %v3_1000445c = load i32, i32* @global_var_1001c3d4.82, align 4
  %v3_10004460 = icmp eq i32 %v3_1000445c, 0
  br i1 %v3_10004460, label %dec_label_pc_10004470, label %dec_label_pc_10004468

dec_label_pc_10004468:                            ; preds = %dec_label_pc_10004458
  %v2_1000446c = load i32, i32* @r4, align 4
  %v3_1000446c = call i32 @unknown_0(i32 268566528, i32 %v2_1000446c)
  store i32 %v3_1000446c, i32* @r3, align 4
  br label %dec_label_pc_10004470

dec_label_pc_10004470:                            ; preds = %dec_label_pc_10004458, %dec_label_pc_10004468
  %v3_10004474 = load i32, i32* @global_var_1001c3d8.83, align 4
  %v3_10004478 = icmp eq i32 %v3_10004474, 0
  br i1 %v3_10004478, label %dec_label_pc_10004470.dec_label_pc_10004488_crit_edge, label %dec_label_pc_10004480

dec_label_pc_10004470.dec_label_pc_10004488_crit_edge: ; preds = %dec_label_pc_10004470
  %v0_10004498.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10004488

dec_label_pc_10004480:                            ; preds = %dec_label_pc_10004470
  %v2_10004484 = load i32, i32* @r4, align 4
  %v3_10004484 = call i32 @unknown_0(i32 268566528, i32 %v2_10004484)
  br label %dec_label_pc_10004488

dec_label_pc_10004488:                            ; preds = %dec_label_pc_10004470.dec_label_pc_10004488_crit_edge, %dec_label_pc_10004480
  %v0_10004498 = phi i32 [ %v0_10004498.pre, %dec_label_pc_10004470.dec_label_pc_10004488_crit_edge ], [ %v3_10004484, %dec_label_pc_10004480 ]
  ret i32 %v0_10004498

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004488, { 1, 0 }
  uselistorder label %dec_label_pc_10004470, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_100044a4 = load i32, i32* @r3, align 4
  ret i32 %v0_100044a4
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268453068, i32* @lr, align 4
  %v2_100044c8 = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_100044cc = icmp eq i32 %v2_100044c8, -1
  br i1 %v3_100044cc, label %dec_label_pc_100044d4, label %dec_label_pc_100044f4

dec_label_pc_100044d4:                            ; preds = %entry
  %v0_100044d8 = load i32, i32* @r30, align 4
  store i32 268453096, i32* @lr, align 4
  %v3_100044e4 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_1000abd4.84 to i32), i32 %v0_100044d8)
  %v1_100044e8 = load i32, i32* @r31, align 4
  %v4_100044e8 = icmp eq i32 %v3_100044e4, %v1_100044e8
  br i1 %v4_100044e8, label %dec_label_pc_100044f4, label %dec_label_pc_100044f0

dec_label_pc_100044f0:                            ; preds = %dec_label_pc_100044d4
  %v1_100044f0 = call i32 @abort(i32 %v3_100044e4)
  br label %dec_label_pc_100044f4

dec_label_pc_100044f4:                            ; preds = %entry, %dec_label_pc_100044d4, %dec_label_pc_100044f0
  %v0_10004504 = phi i32 [ %v2_100044c8, %entry ], [ %v3_100044e4, %dec_label_pc_100044d4 ], [ %v1_100044f0, %dec_label_pc_100044f0 ]
  ret i32 %v0_10004504

; uselistorder directives
  uselistorder label %dec_label_pc_100044f4, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10004528 = load i32, i32* @global_var_1001c3dc.85, align 4
  %v3_1000452c = icmp eq i32 %v3_10004528, 0
  br i1 %v3_1000452c, label %dec_label_pc_10004550, label %entry.dec_label_pc_10004574_crit_edge

entry.dec_label_pc_10004574_crit_edge:            ; preds = %entry
  %v0_10004584.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10004574

dec_label_pc_10004550:                            ; preds = %entry
  store i32 1, i32* @global_var_1001c3dc.85, align 4
  store i32 4096, i32* @global_var_1001c3d0.64, align 4
  %v1_10004570 = call i32 @_stdio_init(i32 268459828)
  br label %dec_label_pc_10004574

dec_label_pc_10004574:                            ; preds = %entry.dec_label_pc_10004574_crit_edge, %dec_label_pc_10004550
  %v0_10004584 = phi i32 [ %v0_10004584.pre, %entry.dec_label_pc_10004574_crit_edge ], [ %v1_10004570, %dec_label_pc_10004550 ]
  ret i32 %v0_10004584

; uselistorder directives
  uselistorder label %dec_label_pc_10004574, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_100045a0 = mul i32 %arg2, 4
  %v2_100045a4 = add i32 %tmp, %v1_100045a0
  %v0_100045a8 = load i32, i32* @r9, align 4
  store i32 %v0_100045a8, i32* @global_var_1001c3c8.86, align 4
  %v1_100045ac = add i32 %v2_100045a4, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_100045ac, i32* @global_var_1001c3cc.87, align 4
  store i32 %arg6, i32* @global_var_1001c3d8.83, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_100045cc = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_100045d4 = icmp eq i32 %v1_100045ac, %v2_100045cc
  br i1 %v4_100045d4, label %dec_label_pc_100045dc, label %dec_label_pc_100045e0

dec_label_pc_100045dc:                            ; preds = %entry
  store i32 %v2_100045a4, i32* @global_var_1001c3cc.87, align 4
  br label %dec_label_pc_100045e0

dec_label_pc_100045e0:                            ; preds = %entry, %dec_label_pc_100045dc
  %v2_100045e0 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268453360, i32* @lr, align 4
  %v3_100045ec = call i32 @__GI_memset(i32 %v2_100045e0, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001c3cc.87, align 4
  br label %dec_label_pc_100045fc

dec_label_pc_100045fc:                            ; preds = %dec_label_pc_100045fc, %dec_label_pc_100045e0
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_100045e0 ], [ %v1_10004600, %dec_label_pc_100045fc ]
  %v1_100045fc = inttoptr i32 %storemerge to i32*
  %v2_100045fc = load i32, i32* %v1_100045fc, align 4
  %v1_10004600 = add i32 %storemerge, 4
  %v3_10004604 = icmp eq i32 %v2_100045fc, 0
  br i1 %v3_10004604, label %dec_label_pc_1000460c, label %dec_label_pc_100045fc

dec_label_pc_1000460c:                            ; preds = %dec_label_pc_100045fc
  store i32 %v1_10004600, i32* %r29.global-to-local, align 4
  %v1_1000463812 = inttoptr i32 %v1_10004600 to i32*
  %v2_1000463813 = load i32, i32* %v1_1000463812, align 4
  %v3_1000463c16 = icmp eq i32 %v2_1000463813, 0
  br i1 %v3_1000463c16, label %dec_label_pc_10004644, label %dec_label_pc_10004614

dec_label_pc_10004614:                            ; preds = %dec_label_pc_1000460c, %dec_label_pc_10004634
  %v0_10004628 = phi i32 [ %v1_10004634, %dec_label_pc_10004634 ], [ %v1_10004600, %dec_label_pc_1000460c ]
  %v0_1000461c = phi i32 [ %v2_10004638, %dec_label_pc_10004634 ], [ %v2_1000463813, %dec_label_pc_1000460c ]
  %v2_10004614 = icmp ugt i32 %v0_1000461c, 14
  br i1 %v2_10004614, label %dec_label_pc_10004634, label %dec_label_pc_1000461c

dec_label_pc_1000461c:                            ; preds = %dec_label_pc_10004614
  %v1_1000461c = mul i32 %v0_1000461c, 8
  %v2_10004624 = add i32 %v1_1000461c, %v2_100045e0
  store i32 %v2_10004624, i32* @r3, align 4
  store i32 %v0_10004628, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268453428, i32* @lr, align 4
  %v0_10004630 = call i32 @memcpy()
  %v0_10004634.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004634

dec_label_pc_10004634:                            ; preds = %dec_label_pc_10004614, %dec_label_pc_1000461c
  %v0_10004634 = phi i32 [ %v0_10004628, %dec_label_pc_10004614 ], [ %v0_10004634.pre, %dec_label_pc_1000461c ]
  %v1_10004634 = add i32 %v0_10004634, 8
  store i32 %v1_10004634, i32* %r29.global-to-local, align 4
  %v1_10004638 = inttoptr i32 %v1_10004634 to i32*
  %v2_10004638 = load i32, i32* %v1_10004638, align 4
  %v3_1000463c = icmp eq i32 %v2_10004638, 0
  br i1 %v3_1000463c, label %dec_label_pc_10004644, label %dec_label_pc_10004614

dec_label_pc_10004644:                            ; preds = %dec_label_pc_10004634, %dec_label_pc_1000460c
  %v1_10004648 = call i32 @_dl_aux_init(i32 %v2_100045e0)
  store i32 %v1_10004648, i32* @r3, align 4
  store i32 268453456, i32* @lr, align 4
  %v1_1000464c = call i32 @__GI___uClibc_init(i32 %v1_10004648)
  %v3_10004654 = icmp eq i32 %tmp27, 0
  br i1 %v3_10004654, label %dec_label_pc_1000465c, label %dec_label_pc_10004660

dec_label_pc_1000465c:                            ; preds = %dec_label_pc_10004644
  br label %dec_label_pc_10004660

dec_label_pc_10004660:                            ; preds = %dec_label_pc_10004644, %dec_label_pc_1000465c
  %v0_10004668 = phi i32 [ %tmp27, %dec_label_pc_10004644 ], [ 4096, %dec_label_pc_1000465c ]
  store i32 %v0_10004668, i32* @global_var_1001c3d0.64, align 4
  %v3_1000466c = icmp eq i32 %tmp26, -1
  br i1 %v3_1000466c, label %dec_label_pc_10004674, label %dec_label_pc_100046a8

dec_label_pc_10004674:                            ; preds = %dec_label_pc_10004660
  store i32 268453496, i32* @lr, align 4
  %v1_10004674 = call i32 @getuid(i32 268566528)
  store i32 %v1_10004674, i32* %r29.global-to-local, align 4
  store i32 268453504, i32* @lr, align 4
  %v0_1000467c = call i32 @geteuid()
  %v4_10004680 = icmp eq i32 %v1_10004674, %v0_1000467c
  br i1 %v4_10004680, label %dec_label_pc_10004688, label %dec_label_pc_100046c4

dec_label_pc_10004688:                            ; preds = %dec_label_pc_10004674
  store i32 268453516, i32* @lr, align 4
  %v1_10004688 = call i32 @getgid(i32 %v0_1000467c)
  store i32 %v1_10004688, i32* %r29.global-to-local, align 4
  store i32 268453524, i32* @lr, align 4
  %v0_10004690 = call i32 @getegid()
  %v4_10004694 = icmp eq i32 %v1_10004688, %v0_10004690
  br i1 %v4_10004694, label %dec_label_pc_1000469c.thread, label %dec_label_pc_100046c4

dec_label_pc_1000469c.thread:                     ; preds = %dec_label_pc_10004688
  br label %dec_label_pc_100046f4

dec_label_pc_100046a8:                            ; preds = %dec_label_pc_10004660
  %v4_100046ac = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_100046ac, label %dec_label_pc_100046b4, label %dec_label_pc_100046c4

dec_label_pc_100046b4:                            ; preds = %dec_label_pc_100046a8
  br label %dec_label_pc_100046c4

dec_label_pc_100046c4:                            ; preds = %dec_label_pc_100046b4, %dec_label_pc_100046a8, %dec_label_pc_10004688, %dec_label_pc_10004674
  store i32 268453588, i32* @lr, align 4
  %v2_100046d0 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268453604, i32* @lr, align 4
  %v2_100046e0 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268453620, i32* @lr, align 4
  %v2_100046f0 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_100046f4

dec_label_pc_100046f4:                            ; preds = %dec_label_pc_1000469c.thread, %dec_label_pc_100046c4
  %v0_10004700 = load i32, i32* @r30, align 4
  %v1_10004700 = inttoptr i32 %v0_10004700 to i32*
  %v2_10004700 = load i32, i32* %v1_10004700, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_10004700, i32* inttoptr (i32 268551020 to i32*), align 4
  %v0_10004720 = load i32, i32* @r27, align 4
  store i32 %v0_10004720, i32* @global_var_1001c3d4.82, align 4
  br i1 false, label %dec_label_pc_10004728, label %dec_label_pc_100047a0

dec_label_pc_10004728:                            ; preds = %dec_label_pc_100046f4, %dec_label_pc_10004728
  br i1 undef, label %dec_label_pc_10004728, label %dec_label_pc_100047a0

dec_label_pc_100047a0:                            ; preds = %dec_label_pc_10004728, %dec_label_pc_100046f4
  %v0_1000474c = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_1000474c)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100047b0 = call i32 @__errno_location()
  %v2_100047b8 = inttoptr i32 %v0_100047b0 to i32*
  store i32 0, i32* %v2_100047b8, align 4
  %v0_100047cc = call i32 @__GI___h_errno_location()
  %v2_100047d4 = inttoptr i32 %v0_100047cc to i32*
  store i32 0, i32* %v2_100047d4, align 4
  %v0_100047e4 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_100047e4)
  %v0_100047f0 = call i32 @__GI_exit()
  ret i32 %v0_100047f0

; uselistorder directives
  uselistorder i32 %v2_10004638, { 1, 0 }
  uselistorder i32 %v1_10004634, { 2, 1, 0 }
  uselistorder i32 %v1_10004600, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_100045e0, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @__GI_exit, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10004728, { 1, 0 }
  uselistorder label %dec_label_pc_100046f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004660, { 1, 0 }
  uselistorder label %dec_label_pc_10004634, { 1, 0 }
  uselistorder label %dec_label_pc_10004614, { 1, 0 }
  uselistorder label %dec_label_pc_100045e0, { 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000480c = call i32 @__asm_mfcr()
  %v1_10004810 = and i32 %v0_1000480c, 268435456
  %v3_10004810 = icmp eq i32 %v1_10004810, 0
  store i32 %v0_1000480c, i32* %r31.global-to-local, align 4
  br i1 %v3_10004810, label %dec_label_pc_10004828, label %dec_label_pc_1000481c

dec_label_pc_1000481c:                            ; preds = %entry
  %v0_1000481c = call i32 @__errno_location()
  %v0_10004820 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004820 = inttoptr i32 %v0_1000481c to i32*
  store i32 %v0_10004820, i32* %v2_10004820, align 4
  br label %dec_label_pc_10004828

dec_label_pc_10004828:                            ; preds = %entry, %dec_label_pc_1000481c
  %v0_10004838 = phi i32 [ %v0_1000480c, %entry ], [ -1, %dec_label_pc_1000481c ]
  ret i32 %v0_10004838

; uselistorder directives
  uselistorder label %dec_label_pc_10004828, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004854 = call i32 @__asm_mfcr()
  %v1_10004858 = and i32 %v0_10004854, 268435456
  %v3_10004858 = icmp eq i32 %v1_10004858, 0
  store i32 %v0_10004854, i32* %r31.global-to-local, align 4
  br i1 %v3_10004858, label %dec_label_pc_10004870, label %dec_label_pc_10004864

dec_label_pc_10004864:                            ; preds = %entry
  %v0_10004864 = call i32 @__errno_location()
  %v0_10004868 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004868 = inttoptr i32 %v0_10004864 to i32*
  store i32 %v0_10004868, i32* %v2_10004868, align 4
  br label %dec_label_pc_10004870

dec_label_pc_10004870:                            ; preds = %entry, %dec_label_pc_10004864
  %v0_10004880 = phi i32 [ %v0_10004854, %entry ], [ -1, %dec_label_pc_10004864 ]
  ret i32 %v0_10004880

; uselistorder directives
  uselistorder label %dec_label_pc_10004870, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000489c = call i32 @__asm_mfcr()
  %v1_100048a0 = and i32 %v0_1000489c, 268435456
  %v3_100048a0 = icmp eq i32 %v1_100048a0, 0
  store i32 %v0_1000489c, i32* %r31.global-to-local, align 4
  br i1 %v3_100048a0, label %dec_label_pc_100048b8, label %dec_label_pc_100048ac

dec_label_pc_100048ac:                            ; preds = %entry
  %v0_100048ac = call i32 @__errno_location()
  %v0_100048b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100048b0 = inttoptr i32 %v0_100048ac to i32*
  store i32 %v0_100048b0, i32* %v2_100048b0, align 4
  br label %dec_label_pc_100048b8

dec_label_pc_100048b8:                            ; preds = %entry, %dec_label_pc_100048ac
  %v0_100048c8 = phi i32 [ %v0_1000489c, %entry ], [ -1, %dec_label_pc_100048ac ]
  ret i32 %v0_100048c8

; uselistorder directives
  uselistorder label %dec_label_pc_100048b8, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100048e4 = call i32 @__asm_mfcr()
  %v1_100048e8 = and i32 %v0_100048e4, 268435456
  %v3_100048e8 = icmp eq i32 %v1_100048e8, 0
  store i32 %v0_100048e4, i32* %r31.global-to-local, align 4
  br i1 %v3_100048e8, label %dec_label_pc_10004900, label %dec_label_pc_100048f4

dec_label_pc_100048f4:                            ; preds = %entry
  %v0_100048f4 = call i32 @__errno_location()
  %v0_100048f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100048f8 = inttoptr i32 %v0_100048f4 to i32*
  store i32 %v0_100048f8, i32* %v2_100048f8, align 4
  br label %dec_label_pc_10004900

dec_label_pc_10004900:                            ; preds = %entry, %dec_label_pc_100048f4
  %v0_10004910 = phi i32 [ %v0_100048e4, %entry ], [ -1, %dec_label_pc_100048f4 ]
  ret i32 %v0_10004910

; uselistorder directives
  uselistorder label %dec_label_pc_10004900, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000492c = call i32 @__asm_mfcr()
  %v1_10004930 = and i32 %v0_1000492c, 268435456
  %v3_10004930 = icmp eq i32 %v1_10004930, 0
  store i32 %v0_1000492c, i32* %r31.global-to-local, align 4
  br i1 %v3_10004930, label %dec_label_pc_10004948, label %dec_label_pc_1000493c

dec_label_pc_1000493c:                            ; preds = %entry
  %v0_1000493c = call i32 @__errno_location()
  %v0_10004940 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004940 = inttoptr i32 %v0_1000493c to i32*
  store i32 %v0_10004940, i32* %v2_10004940, align 4
  br label %dec_label_pc_10004948

dec_label_pc_10004948:                            ; preds = %entry, %dec_label_pc_1000493c
  %v0_10004958 = phi i32 [ %v0_1000492c, %entry ], [ -1, %dec_label_pc_1000493c ]
  ret i32 %v0_10004958

; uselistorder directives
  uselistorder label %dec_label_pc_10004948, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10004970 = and i32 %arg2, 64
  %v3_10004970 = icmp eq i32 %v1_10004970, 0
  br i1 %v3_10004970, label %dec_label_pc_1000499c, label %dec_label_pc_10004980

dec_label_pc_10004980:                            ; preds = %entry
  %v2_10004988 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10004988, i32* %stack_var_-32, align 4
  %v0_10004998 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000499c

dec_label_pc_1000499c:                            ; preds = %entry, %dec_label_pc_10004980
  %v0_1000499c = phi i32 [ 0, %entry ], [ %v0_10004998, %dec_label_pc_10004980 ]
  store i32 %v0_1000499c, i32* @r5, align 4
  %v0_100049a4 = call i32 @__asm_mfcr()
  %v1_100049a8 = and i32 %v0_100049a4, 268435456
  %v3_100049a8 = icmp eq i32 %v1_100049a8, 0
  store i32 %v0_100049a4, i32* %r31.global-to-local, align 4
  br i1 %v3_100049a8, label %dec_label_pc_100049c0, label %dec_label_pc_100049b4

dec_label_pc_100049b4:                            ; preds = %dec_label_pc_1000499c
  %v0_100049b4 = call i32 @__errno_location()
  %v0_100049b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100049b8 = inttoptr i32 %v0_100049b4 to i32*
  store i32 %v0_100049b8, i32* %v2_100049b8, align 4
  br label %dec_label_pc_100049c0

dec_label_pc_100049c0:                            ; preds = %dec_label_pc_1000499c, %dec_label_pc_100049b4
  %v0_100049d0 = phi i32 [ %v0_100049a4, %dec_label_pc_1000499c ], [ -1, %dec_label_pc_100049b4 ]
  ret i32 %v0_100049d0

; uselistorder directives
  uselistorder label %dec_label_pc_100049c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000499c, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  %v2_100049e0 = call i32 @__libc_open(i32 577, i32 577)
  ret i32 %v2_100049e0
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_10004a00 = load i32, i32* @global_var_1001c400.90, align 4
  %v3_10004a04 = icmp eq i32 %v3_10004a00, 0
  br i1 %v3_10004a04, label %dec_label_pc_10004a0c, label %dec_label_pc_10004a18

dec_label_pc_10004a0c:                            ; preds = %entry
  store i32 268454416, i32* @lr, align 4
  %v1_10004a0c = call i32 @__GI_brk(i32 0)
  %v1_10004a10 = icmp slt i32 %v1_10004a0c, 0
  br i1 %v1_10004a10, label %dec_label_pc_10004a38, label %dec_label_pc_10004a0c.dec_label_pc_10004a18_crit_edge

dec_label_pc_10004a0c.dec_label_pc_10004a18_crit_edge: ; preds = %dec_label_pc_10004a0c
  %v0_10004a18.pre = load i32, i32* @r30, align 4
  %v3_10004a1c.pre = load i32, i32* @global_var_1001c400.90, align 4
  br label %dec_label_pc_10004a18

dec_label_pc_10004a18:                            ; preds = %dec_label_pc_10004a0c.dec_label_pc_10004a18_crit_edge, %entry
  %v3_10004a1c = phi i32 [ %v3_10004a1c.pre, %dec_label_pc_10004a0c.dec_label_pc_10004a18_crit_edge ], [ %v3_10004a00, %entry ]
  %v1_10004a24 = phi i32 [ %v0_10004a18.pre, %dec_label_pc_10004a0c.dec_label_pc_10004a18_crit_edge ], [ %arg1, %entry ]
  %v3_10004a18 = icmp eq i32 %v1_10004a24, 0
  store i32 %v3_10004a1c, i32* @r31, align 4
  br i1 %v3_10004a18, label %dec_label_pc_10004a3c, label %dec_label_pc_10004a2c

dec_label_pc_10004a2c:                            ; preds = %dec_label_pc_10004a18
  %v2_10004a24 = add i32 %v1_10004a24, %v3_10004a1c
  store i32 268454448, i32* @lr, align 4
  %v1_10004a2c = call i32 @__GI_brk(i32 %v2_10004a24)
  %tmp6 = icmp sgt i32 %v1_10004a2c, -1
  br i1 %tmp6, label %dec_label_pc_10004a2c.dec_label_pc_10004a3c_crit_edge, label %dec_label_pc_10004a38

dec_label_pc_10004a2c.dec_label_pc_10004a3c_crit_edge: ; preds = %dec_label_pc_10004a2c
  %v0_10004a40.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004a3c

dec_label_pc_10004a38:                            ; preds = %dec_label_pc_10004a2c, %dec_label_pc_10004a0c
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_10004a3c

dec_label_pc_10004a3c:                            ; preds = %dec_label_pc_10004a2c.dec_label_pc_10004a3c_crit_edge, %dec_label_pc_10004a18, %dec_label_pc_10004a38
  %v0_10004a40 = phi i32 [ %v0_10004a40.pre, %dec_label_pc_10004a2c.dec_label_pc_10004a3c_crit_edge ], [ %v3_10004a1c, %dec_label_pc_10004a18 ], [ -1, %dec_label_pc_10004a38 ]
  ret i32 %v0_10004a40

; uselistorder directives
  uselistorder i32 %v3_10004a1c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_10004a3c, { 2, 0, 1 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004a6c = call i32 @__asm_mfcr()
  %v1_10004a70 = and i32 %v0_10004a6c, 268435456
  %v3_10004a70 = icmp eq i32 %v1_10004a70, 0
  store i32 %v0_10004a6c, i32* %r31.global-to-local, align 4
  br i1 %v3_10004a70, label %dec_label_pc_10004a88, label %dec_label_pc_10004a7c

dec_label_pc_10004a7c:                            ; preds = %entry
  %v0_10004a7c = call i32 @__errno_location()
  %v0_10004a80 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004a80 = inttoptr i32 %v0_10004a7c to i32*
  store i32 %v0_10004a80, i32* %v2_10004a80, align 4
  br label %dec_label_pc_10004a88

dec_label_pc_10004a88:                            ; preds = %entry, %dec_label_pc_10004a7c
  %v0_10004a98 = phi i32 [ %v0_10004a6c, %entry ], [ -1, %dec_label_pc_10004a7c ]
  ret i32 %v0_10004a98

; uselistorder directives
  uselistorder label %dec_label_pc_10004a88, { 1, 0 }
}

define i32 @wait4(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004ab4 = call i32 @__asm_mfcr()
  %v1_10004ab8 = and i32 %v0_10004ab4, 268435456
  %v3_10004ab8 = icmp eq i32 %v1_10004ab8, 0
  store i32 %v0_10004ab4, i32* %r31.global-to-local, align 4
  br i1 %v3_10004ab8, label %dec_label_pc_10004ad0, label %dec_label_pc_10004ac4

dec_label_pc_10004ac4:                            ; preds = %entry
  %v0_10004ac4 = call i32 @__errno_location()
  %v0_10004ac8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004ac8 = inttoptr i32 %v0_10004ac4 to i32*
  store i32 %v0_10004ac8, i32* %v2_10004ac8, align 4
  br label %dec_label_pc_10004ad0

dec_label_pc_10004ad0:                            ; preds = %entry, %dec_label_pc_10004ac4
  %v0_10004ae0 = phi i32 [ %v0_10004ab4, %entry ], [ -1, %dec_label_pc_10004ac4 ]
  ret i32 %v0_10004ae0

; uselistorder directives
  uselistorder label %dec_label_pc_10004ad0, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1001c3e4.91 to i32)
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10004af0 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_10004af8 = load i32, i32* @r5, align 4
  store i32 %v0_10004af8, i32* @r11, align 4
  br i1 %v2_10004af0, label %dec_label_pc_10004b04, label %dec_label_pc_10004b00

dec_label_pc_10004b00:                            ; preds = %entry
  %v0_10004b00 = call i32 @memcpy()
  store i32 %v0_10004b00, i32* @r3, align 4
  %v0_10004b04.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10004b04

dec_label_pc_10004b04:                            ; preds = %entry, %dec_label_pc_10004b00
  %v0_10004b04 = phi i32 [ %v0_10004af8, %entry ], [ %v0_10004b04.pre, %dec_label_pc_10004b00 ]
  %v1_10004b04 = call i32 @__asm_rlwinm.(i32 %v0_10004b04, i32 29, i32 3, i32 31)
  store i32 %v1_10004b04, i32* %r9.global-to-local, align 4
  %v4_10004b04 = icmp eq i32 %v1_10004b04, 0
  %v1_10004b08 = load i32, i32* @r5, align 4
  %v2_10004b08 = add i32 %v1_10004b08, %arg2
  store i32 %v2_10004b08, i32* %r4.global-to-local, align 4
  %v0_10004b0c = load i32, i32* @r3, align 4
  %v2_10004b0c = add i32 %v0_10004b0c, %v1_10004b08
  store i32 %v2_10004b0c, i32* %r10.global-to-local, align 4
  br i1 %v4_10004b04, label %dec_label_pc_10004b34, label %dec_label_pc_10004b14

dec_label_pc_10004b14:                            ; preds = %dec_label_pc_10004b04
  %v1_10004b14 = urem i32 %v2_10004b0c, 4
  %v3_10004b14 = icmp eq i32 %v1_10004b14, 0
  br i1 %v3_10004b14, label %dec_label_pc_10004b1c, label %dec_label_pc_10004b68

dec_label_pc_10004b1c:                            ; preds = %dec_label_pc_10004b80.dec_label_pc_10004b1c_crit_edge, %dec_label_pc_10004b14
  %v1_10004b28.pre = phi i32 [ %v1_10004b28.pre.pre, %dec_label_pc_10004b80.dec_label_pc_10004b1c_crit_edge ], [ %v2_10004b0c, %dec_label_pc_10004b14 ]
  %v0_10004b1c = phi i32 [ %v1_10004b80, %dec_label_pc_10004b80.dec_label_pc_10004b1c_crit_edge ], [ %v1_10004b04, %dec_label_pc_10004b14 ]
  store i32 %v0_10004b1c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10004b20

dec_label_pc_10004b20:                            ; preds = %dec_label_pc_10004b20, %dec_label_pc_10004b1c
  %v1_10004b28 = phi i32 [ %v2_10004b2c, %dec_label_pc_10004b20 ], [ %v1_10004b28.pre, %dec_label_pc_10004b1c ]
  %v0_10004b20 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004b20 = add i32 %v0_10004b20, -4
  %v2_10004b20 = inttoptr i32 %v1_10004b20 to i32*
  %v3_10004b20 = load i32, i32* %v2_10004b20, align 4
  %v1_10004b24 = add i32 %v0_10004b20, -8
  %v2_10004b24 = inttoptr i32 %v1_10004b24 to i32*
  %v3_10004b24 = load i32, i32* %v2_10004b24, align 4
  store i32 %v3_10004b24, i32* %r9.global-to-local, align 4
  store i32 %v1_10004b24, i32* %r4.global-to-local, align 4
  %v2_10004b28 = add i32 %v1_10004b28, -4
  %v3_10004b28 = inttoptr i32 %v2_10004b28 to i32*
  store i32 %v3_10004b20, i32* %v3_10004b28, align 4
  %v0_10004b2c = load i32, i32* %r9.global-to-local, align 4
  %v1_10004b2c = load i32, i32* %r10.global-to-local, align 4
  %v2_10004b2c = add i32 %v1_10004b2c, -8
  %v3_10004b2c = inttoptr i32 %v2_10004b2c to i32*
  store i32 %v0_10004b2c, i32* %v3_10004b2c, align 4
  store i32 %v2_10004b2c, i32* %r10.global-to-local, align 4
  %v0_10004b30 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004b30 = add i32 %v0_10004b30, -1
  store i32 %v1_10004b30, i32* %ctr.global-to-local, align 4
  %v2_10004b30 = icmp eq i32 %v1_10004b30, 0
  br i1 %v2_10004b30, label %dec_label_pc_10004b34, label %dec_label_pc_10004b20

dec_label_pc_10004b34:                            ; preds = %dec_label_pc_10004b20, %dec_label_pc_10004b80, %dec_label_pc_10004b04
  %v0_10004b34 = load i32, i32* @r11, align 4
  %v1_10004b34 = urem i32 %v0_10004b34, 8
  store i32 %v1_10004b34, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10004b34, 4
  br i1 %tmp, label %dec_label_pc_10004b4c, label %dec_label_pc_10004b40

dec_label_pc_10004b40:                            ; preds = %dec_label_pc_10004b34
  %v0_10004b40 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004b40 = add i32 %v0_10004b40, -4
  %v2_10004b40 = inttoptr i32 %v1_10004b40 to i32*
  %v3_10004b40 = load i32, i32* %v2_10004b40, align 4
  store i32 %v1_10004b40, i32* %r4.global-to-local, align 4
  %v1_10004b44 = add nsw i32 %v1_10004b34, -4
  store i32 %v1_10004b44, i32* %r5.global-to-local, align 4
  %v1_10004b48 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004b48 = add i32 %v1_10004b48, -4
  %v3_10004b48 = inttoptr i32 %v2_10004b48 to i32*
  store i32 %v3_10004b40, i32* %v3_10004b48, align 4
  store i32 %v2_10004b48, i32* %r10.global-to-local, align 4
  %v0_10004b4c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10004b4c

dec_label_pc_10004b4c:                            ; preds = %dec_label_pc_10004b34, %dec_label_pc_10004b40
  %v0_10004b54 = phi i32 [ %v1_10004b34, %dec_label_pc_10004b34 ], [ %v0_10004b4c.pre, %dec_label_pc_10004b40 ]
  %v3_10004b4c = icmp eq i32 %v0_10004b54, 0
  br i1 %v3_10004b4c, label %dec_label_pc_10004b8c, label %dec_label_pc_10004b54

dec_label_pc_10004b54:                            ; preds = %dec_label_pc_10004b4c
  store i32 %v0_10004b54, i32* %ctr.global-to-local, align 4
  %v2_10004b5c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10004b58

dec_label_pc_10004b58:                            ; preds = %dec_label_pc_10004b58, %dec_label_pc_10004b54
  %v2_10004b5c = phi i32 [ %v3_10004b5c, %dec_label_pc_10004b58 ], [ %v2_10004b5c.pre, %dec_label_pc_10004b54 ]
  %v0_10004b58 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004b58 = add i32 %v0_10004b58, -1
  %v2_10004b58 = inttoptr i32 %v1_10004b58 to i8*
  %v3_10004b58 = load i8, i8* %v2_10004b58, align 1
  store i32 %v1_10004b58, i32* %r4.global-to-local, align 4
  %v3_10004b5c = add i32 %v2_10004b5c, -1
  %v4_10004b5c = inttoptr i32 %v3_10004b5c to i8*
  store i8 %v3_10004b58, i8* %v4_10004b5c, align 1
  store i32 %v3_10004b5c, i32* %r10.global-to-local, align 4
  %v0_10004b60 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004b60 = add i32 %v0_10004b60, -1
  store i32 %v1_10004b60, i32* %ctr.global-to-local, align 4
  %v2_10004b60 = icmp eq i32 %v1_10004b60, 0
  br i1 %v2_10004b60, label %dec_label_pc_10004b8c, label %dec_label_pc_10004b58

dec_label_pc_10004b68:                            ; preds = %dec_label_pc_10004b14
  %v1_10004b68 = sub nsw i32 4, %v1_10004b14
  store i32 %v1_10004b68, i32* %ctr.global-to-local, align 4
  %v2_10004b70 = sub i32 %v1_10004b08, %v1_10004b68
  store i32 %v2_10004b70, i32* @r11, align 4
  %v1_10004b749 = add i32 %v2_10004b08, -1
  %v2_10004b7410 = inttoptr i32 %v1_10004b749 to i8*
  %v3_10004b7411 = load i8, i8* %v2_10004b7410, align 1
  store i32 %v1_10004b749, i32* %r4.global-to-local, align 4
  %v3_10004b7813 = add i32 %v2_10004b0c, -1
  %v4_10004b7814 = inttoptr i32 %v3_10004b7813 to i8*
  store i8 %v3_10004b7411, i8* %v4_10004b7814, align 1
  store i32 %v3_10004b7813, i32* %r10.global-to-local, align 4
  %v0_10004b7c15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004b7c16 = add i32 %v0_10004b7c15, -1
  store i32 %v1_10004b7c16, i32* %ctr.global-to-local, align 4
  %v2_10004b7c17 = icmp eq i32 %v1_10004b7c16, 0
  br i1 %v2_10004b7c17, label %dec_label_pc_10004b80, label %dec_label_pc_10004b74.dec_label_pc_10004b74_crit_edge

dec_label_pc_10004b74.dec_label_pc_10004b74_crit_edge: ; preds = %dec_label_pc_10004b68, %dec_label_pc_10004b74.dec_label_pc_10004b74_crit_edge
  %v3_10004b7818 = phi i32 [ %v3_10004b78, %dec_label_pc_10004b74.dec_label_pc_10004b74_crit_edge ], [ %v3_10004b7813, %dec_label_pc_10004b68 ]
  %v0_10004b74.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10004b74 = add i32 %v0_10004b74.pre, -1
  %v2_10004b74 = inttoptr i32 %v1_10004b74 to i8*
  %v3_10004b74 = load i8, i8* %v2_10004b74, align 1
  store i32 %v1_10004b74, i32* %r4.global-to-local, align 4
  %v3_10004b78 = add i32 %v3_10004b7818, -1
  %v4_10004b78 = inttoptr i32 %v3_10004b78 to i8*
  store i8 %v3_10004b74, i8* %v4_10004b78, align 1
  store i32 %v3_10004b78, i32* %r10.global-to-local, align 4
  %v0_10004b7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004b7c = add i32 %v0_10004b7c, -1
  store i32 %v1_10004b7c, i32* %ctr.global-to-local, align 4
  %v2_10004b7c = icmp eq i32 %v1_10004b7c, 0
  br i1 %v2_10004b7c, label %dec_label_pc_10004b80, label %dec_label_pc_10004b74.dec_label_pc_10004b74_crit_edge

dec_label_pc_10004b80:                            ; preds = %dec_label_pc_10004b74.dec_label_pc_10004b74_crit_edge, %dec_label_pc_10004b68
  %v0_10004b80 = load i32, i32* @r11, align 4
  %v1_10004b80 = call i32 @__asm_rlwinm.(i32 %v0_10004b80, i32 29, i32 3, i32 31)
  store i32 %v1_10004b80, i32* %r9.global-to-local, align 4
  %v4_10004b80 = icmp eq i32 %v1_10004b80, 0
  br i1 %v4_10004b80, label %dec_label_pc_10004b34, label %dec_label_pc_10004b80.dec_label_pc_10004b1c_crit_edge

dec_label_pc_10004b80.dec_label_pc_10004b1c_crit_edge: ; preds = %dec_label_pc_10004b80
  %v1_10004b28.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10004b1c

dec_label_pc_10004b8c:                            ; preds = %dec_label_pc_10004b58, %dec_label_pc_10004b4c
  %v0_10004b8c = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10004b8c

; uselistorder directives
  uselistorder i32 %v1_10004b80, { 1, 2, 0 }
  uselistorder i32 %v1_10004b7c, { 1, 0 }
  uselistorder i32 %v3_10004b78, { 1, 2, 0 }
  uselistorder i32 %v1_10004b60, { 1, 0 }
  uselistorder i32 %v3_10004b5c, { 1, 2, 0 }
  uselistorder i32 %v1_10004b34, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10004b30, { 1, 0 }
  uselistorder i32 %v2_10004b2c, { 1, 2, 0 }
  uselistorder i32 %v1_10004b14, { 1, 0 }
  uselistorder i32 %v2_10004b0c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10004b08, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 5, 9, 1, 6, 2, 8, 3, 7, 4 }
  uselistorder i32* %r10.global-to-local, { 5, 0, 9, 1, 6, 2, 7, 3, 8, 4 }
  uselistorder i32* %ctr.global-to-local, { 0, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_10004b74.dec_label_pc_10004b74_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10004b4c, { 1, 0 }
  uselistorder label %dec_label_pc_10004b34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004b04, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10004b94 = icmp eq i32 %arg2, 3
  store i1 %v3_10004b94, i1* %cr7_eq.global-to-local, align 1
  %v1_10004b98 = add i32 %arg1, -1
  store i32 %v1_10004b98, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_10004c14, label %dec_label_pc_10004ba0

dec_label_pc_10004ba0:                            ; preds = %entry
  %v1_10004ba0 = udiv i32 %arg2, 4
  store i32 %v1_10004ba0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10004ba8

dec_label_pc_10004ba8:                            ; preds = %dec_label_pc_10004bf8, %dec_label_pc_10004ba0
  %v2_10004bb8 = phi i32 [ %v3_10004bf0, %dec_label_pc_10004bf8 ], [ %v1_10004b98, %dec_label_pc_10004ba0 ]
  %v0_10004ba8 = load i32, i32* @r4, align 4
  %v1_10004ba8 = inttoptr i32 %v0_10004ba8 to i8*
  %v2_10004ba8 = load i8, i8* %v1_10004ba8, align 1
  %v1_10004bac = add i32 %v0_10004ba8, 1
  store i32 %v1_10004bac, i32* %r10.global-to-local, align 4
  %v1_10004bb0 = add i32 %v0_10004ba8, 2
  store i32 %v1_10004bb0, i32* %r8.global-to-local, align 4
  %v3_10004bb4 = icmp eq i8 %v2_10004ba8, 0
  store i1 %v3_10004bb4, i1* %cr7_eq.global-to-local, align 1
  %v3_10004bb8 = add i32 %v2_10004bb8, 1
  %v4_10004bb8 = inttoptr i32 %v3_10004bb8 to i8*
  store i8 %v2_10004ba8, i8* %v4_10004bb8, align 1
  store i32 %v3_10004bb8, i32* %r11.global-to-local, align 4
  %v0_10004bbc = load i32, i32* %r8.global-to-local, align 4
  %v1_10004bbc = add i32 %v0_10004bbc, 1
  store i32 %v1_10004bbc, i32* %r9.global-to-local, align 4
  %v0_10004bc0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004bc0, label %dec_label_pc_10004c00, label %dec_label_pc_10004bc4

dec_label_pc_10004bc4:                            ; preds = %dec_label_pc_10004ba8
  %v0_10004bc4 = load i32, i32* @r4, align 4
  %v1_10004bc4 = add i32 %v0_10004bc4, 1
  %v2_10004bc4 = inttoptr i32 %v1_10004bc4 to i8*
  %v3_10004bc4 = load i8, i8* %v2_10004bc4, align 1
  %v1_10004bc8 = add i32 %v0_10004bbc, 2
  store i32 %v1_10004bc8, i32* @r4, align 4
  %v3_10004bcc = icmp eq i8 %v3_10004bc4, 0
  store i1 %v3_10004bcc, i1* %cr7_eq.global-to-local, align 1
  %v3_10004bd0 = add i32 %v2_10004bb8, 2
  %v4_10004bd0 = inttoptr i32 %v3_10004bd0 to i8*
  store i8 %v3_10004bc4, i8* %v4_10004bd0, align 1
  store i32 %v3_10004bd0, i32* %r11.global-to-local, align 4
  %v0_10004bd4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004bd4, label %dec_label_pc_10004c00, label %dec_label_pc_10004bd8

dec_label_pc_10004bd8:                            ; preds = %dec_label_pc_10004bc4
  %v0_10004bd8 = load i32, i32* %r10.global-to-local, align 4
  %v1_10004bd8 = add i32 %v0_10004bd8, 1
  %v2_10004bd8 = inttoptr i32 %v1_10004bd8 to i8*
  %v3_10004bd8 = load i8, i8* %v2_10004bd8, align 1
  %v3_10004bdc = icmp eq i8 %v3_10004bd8, 0
  store i1 %v3_10004bdc, i1* %cr7_eq.global-to-local, align 1
  %v3_10004be0 = add i32 %v2_10004bb8, 3
  %v4_10004be0 = inttoptr i32 %v3_10004be0 to i8*
  store i8 %v3_10004bd8, i8* %v4_10004be0, align 1
  store i32 %v3_10004be0, i32* %r11.global-to-local, align 4
  %v0_10004be4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004be4, label %dec_label_pc_10004c00, label %dec_label_pc_10004be8

dec_label_pc_10004be8:                            ; preds = %dec_label_pc_10004bd8
  %v0_10004be8 = load i32, i32* %r8.global-to-local, align 4
  %v1_10004be8 = add i32 %v0_10004be8, 1
  %v2_10004be8 = inttoptr i32 %v1_10004be8 to i8*
  %v3_10004be8 = load i8, i8* %v2_10004be8, align 1
  %v3_10004bec = icmp eq i8 %v3_10004be8, 0
  store i1 %v3_10004bec, i1* %cr7_eq.global-to-local, align 1
  %v3_10004bf0 = add i32 %v2_10004bb8, 4
  %v4_10004bf0 = inttoptr i32 %v3_10004bf0 to i8*
  store i8 %v3_10004be8, i8* %v4_10004bf0, align 1
  store i32 %v3_10004bf0, i32* %r11.global-to-local, align 4
  %v0_10004bf4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004bf4, label %dec_label_pc_10004c00, label %dec_label_pc_10004bf8

dec_label_pc_10004bf8:                            ; preds = %dec_label_pc_10004be8
  %v0_10004bf8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004bf8 = add i32 %v0_10004bf8, -1
  store i32 %v1_10004bf8, i32* %ctr.global-to-local, align 4
  %v2_10004bf8 = icmp eq i32 %v1_10004bf8, 0
  br i1 %v2_10004bf8, label %dec_label_pc_10004c14, label %dec_label_pc_10004ba8

dec_label_pc_10004c00:                            ; preds = %dec_label_pc_10004be8, %dec_label_pc_10004bd8, %dec_label_pc_10004bc4, %dec_label_pc_10004ba8
  %v1_10004c00 = phi i32 [ %v3_10004bf0, %dec_label_pc_10004be8 ], [ %v3_10004be0, %dec_label_pc_10004bd8 ], [ %v3_10004bd0, %dec_label_pc_10004bc4 ], [ %v3_10004bb8, %dec_label_pc_10004ba8 ]
  %v2_10004c0011 = sub i32 %arg1, %v1_10004c00
  %v2_10004c04 = add i32 %v2_10004c0011, %arg2
  %v1_10004c08 = add i32 %v2_10004c04, -1
  store i32 %v1_10004c08, i32* %r9.global-to-local, align 4
  %v4_10004c08 = icmp eq i32 %v1_10004c08, 0
  %v0_10004c0c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10004c08, i32 %v0_10004c0c)
  %v2_10004c44.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004c3c

dec_label_pc_10004c14:                            ; preds = %dec_label_pc_10004bf8, %entry
  %v1_10004c14 = urem i32 %arg2, 4
  store i32 %v1_10004c14, i32* %r9.global-to-local, align 4
  %v3_10004c14 = icmp eq i32 %v1_10004c14, 0
  %v0_10004c18 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10004c14, i32 %v0_10004c18)
  store i32 %v1_10004c14, i32* %ctr.global-to-local, align 4
  %v2_10004c30.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004c20

dec_label_pc_10004c20:                            ; preds = %dec_label_pc_10004c38.dec_label_pc_10004c20_crit_edge, %dec_label_pc_10004c14
  %v2_10004c30 = phi i32 [ %v3_10004c30, %dec_label_pc_10004c38.dec_label_pc_10004c20_crit_edge ], [ %v2_10004c30.pre, %dec_label_pc_10004c14 ]
  %v0_10004c24 = phi i32 [ %v0_10004c24.pre, %dec_label_pc_10004c38.dec_label_pc_10004c20_crit_edge ], [ %v1_10004c14, %dec_label_pc_10004c14 ]
  %v0_10004c20 = load i32, i32* @r4, align 4
  %v1_10004c20 = inttoptr i32 %v0_10004c20 to i8*
  %v2_10004c20 = load i8, i8* %v1_10004c20, align 1
  %v1_10004c24 = add i32 %v0_10004c24, -1
  store i32 %v1_10004c24, i32* %r9.global-to-local, align 4
  %v1_10004c28 = add i32 %v0_10004c20, 1
  store i32 %v1_10004c28, i32* @r4, align 4
  %v3_10004c2c = icmp eq i8 %v2_10004c20, 0
  store i1 %v3_10004c2c, i1* %cr7_eq.global-to-local, align 1
  %v3_10004c30 = add i32 %v2_10004c30, 1
  %v4_10004c30 = inttoptr i32 %v3_10004c30 to i8*
  store i8 %v2_10004c20, i8* %v4_10004c30, align 1
  store i32 %v3_10004c30, i32* %r11.global-to-local, align 4
  %v0_10004c34 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004c34 = add i32 %v0_10004c34, -1
  store i32 %v1_10004c34, i32* %ctr.global-to-local, align 4
  %v2_10004c34 = icmp eq i32 %v1_10004c34, 0
  br i1 %v2_10004c34, label %dec_label_pc_10004c4c, label %dec_label_pc_10004c38

dec_label_pc_10004c38:                            ; preds = %dec_label_pc_10004c20
  %v0_10004c38 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004c38, label %dec_label_pc_10004c3c, label %dec_label_pc_10004c38.dec_label_pc_10004c20_crit_edge

dec_label_pc_10004c38.dec_label_pc_10004c20_crit_edge: ; preds = %dec_label_pc_10004c38
  %v0_10004c24.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10004c20

dec_label_pc_10004c3c:                            ; preds = %dec_label_pc_10004c38, %dec_label_pc_10004c00
  %v2_10004c44.pre = phi i32 [ %v2_10004c44.pre.pre, %dec_label_pc_10004c00 ], [ %v3_10004c30, %dec_label_pc_10004c38 ]
  %v0_10004c3c = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_10004c3c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10004c40

dec_label_pc_10004c40:                            ; preds = %dec_label_pc_10004c40, %dec_label_pc_10004c3c
  %v2_10004c44 = phi i32 [ %v3_10004c44, %dec_label_pc_10004c40 ], [ %v2_10004c44.pre, %dec_label_pc_10004c3c ]
  %v3_10004c44 = add i32 %v2_10004c44, 1
  %v4_10004c44 = inttoptr i32 %v3_10004c44 to i8*
  store i8 0, i8* %v4_10004c44, align 1
  store i32 %v3_10004c44, i32* %r11.global-to-local, align 4
  %v0_10004c48 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004c48 = add i32 %v0_10004c48, -1
  store i32 %v1_10004c48, i32* %ctr.global-to-local, align 4
  %v2_10004c48 = icmp eq i32 %v1_10004c48, 0
  br i1 %v2_10004c48, label %dec_label_pc_10004c4c, label %dec_label_pc_10004c40

dec_label_pc_10004c4c:                            ; preds = %dec_label_pc_10004c20, %dec_label_pc_10004c40
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10004c48, { 1, 0 }
  uselistorder i32 %v3_10004c44, { 1, 2, 0 }
  uselistorder i32 %v1_10004c34, { 1, 0 }
  uselistorder i32 %v3_10004c30, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10004c14, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10004bf8, { 1, 0 }
  uselistorder i32 %v3_10004bf0, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004c4c, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_10004c54 = load i32, i32* @lr, align 4
  store i32 %v0_10004c54, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_10004c5c = icmp eq i32 %arg1, 0
  %v0_10004c64 = load i32, i32* @r5, align 4
  store i32 %v0_10004c64, i32* %r30.global-to-local, align 4
  %v0_10004c68 = load i32, i32* @r4, align 4
  store i32 %v0_10004c68, i32* %r29.global-to-local, align 4
  br i1 %v3_10004c5c, label %dec_label_pc_10004c70, label %dec_label_pc_10004c74

dec_label_pc_10004c70:                            ; preds = %entry
  %v1_10004c70 = inttoptr i32 %v0_10004c64 to i32*
  %v2_10004c70 = load i32, i32* %v1_10004c70, align 4
  store i32 %v2_10004c70, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10004c74

dec_label_pc_10004c74:                            ; preds = %entry, %dec_label_pc_10004c70
  %v0_10004c74 = phi i32 [ %arg1, %entry ], [ %v2_10004c70, %dec_label_pc_10004c70 ]
  store i32 %v0_10004c74, i32* @r3, align 4
  %v1_10004c78 = inttoptr i32 %v0_10004c74 to i8*
  %v2_10004c78 = call i32 @__GI_strspn(i8* %v1_10004c78)
  %v0_10004c7c = load i32, i32* %r29.global-to-local, align 4
  %v0_10004c80 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004c80 = add i32 %v0_10004c80, %v2_10004c78
  %v3_10004c80 = inttoptr i32 %v2_10004c80 to i8*
  %v4_10004c80 = load i8, i8* %v3_10004c80, align 1
  store i32 %v2_10004c80, i32* @r31, align 4
  store i32 %v2_10004c80, i32* @r3, align 4
  %v3_10004c8c = icmp eq i8 %v4_10004c80, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10004c8c, label %dec_label_pc_10004c98, label %dec_label_pc_10004ca0

dec_label_pc_10004c98:                            ; preds = %dec_label_pc_10004c74
  %v1_10004c98 = load i32, i32* %r30.global-to-local, align 4
  %v2_10004c98 = inttoptr i32 %v1_10004c98 to i32*
  store i32 %v2_10004c80, i32* %v2_10004c98, align 4
  br label %dec_label_pc_10004cd8

dec_label_pc_10004ca0:                            ; preds = %dec_label_pc_10004c74
  store i32 268455076, i32* @lr, align 4
  %v3_10004ca0 = call i32 @__GI_strpbrk(i8* %v3_10004c80, i32 %v0_10004c7c)
  %v4_10004ca8 = icmp eq i32 %v3_10004ca0, 0
  %v0_10004cac = load i32, i32* @r31, align 4
  store i32 %v0_10004cac, i32* @r3, align 4
  %v2_10004cb0 = add i32 %v3_10004ca0, 1
  store i32 %v2_10004cb0, i32* %r11.global-to-local, align 4
  br i1 %v4_10004ca8, label %dec_label_pc_10004cb8, label %dec_label_pc_10004cc8

dec_label_pc_10004cb8:                            ; preds = %dec_label_pc_10004ca0
  store i32 268455100, i32* @lr, align 4
  %v4_10004cb8 = call i32 @rawmemchr(i32 %v0_10004cac, i32 0, i32 0)
  %v0_10004cbc = load i32, i32* @r31, align 4
  store i32 %v0_10004cbc, i32* %r0.global-to-local, align 4
  %v1_10004cc0 = load i32, i32* %r30.global-to-local, align 4
  %v2_10004cc0 = inttoptr i32 %v1_10004cc0 to i32*
  store i32 %v4_10004cb8, i32* %v2_10004cc0, align 4
  br label %dec_label_pc_10004cd8

dec_label_pc_10004cc8:                            ; preds = %dec_label_pc_10004ca0
  %v1_10004ca8 = inttoptr i32 %v3_10004ca0 to i8*
  store i8 0, i8* %v1_10004ca8, align 1
  %v0_10004cd0 = load i32, i32* @r31, align 4
  store i32 %v0_10004cd0, i32* %r0.global-to-local, align 4
  %v0_10004cd4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004cd4 = load i32, i32* %r30.global-to-local, align 4
  %v2_10004cd4 = inttoptr i32 %v1_10004cd4 to i32*
  store i32 %v0_10004cd4, i32* %v2_10004cd4, align 4
  br label %dec_label_pc_10004cd8

dec_label_pc_10004cd8:                            ; preds = %dec_label_pc_10004cb8, %dec_label_pc_10004c98, %dec_label_pc_10004cc8
  %v0_10004cd8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10004c54, i32* %r0.global-to-local, align 4
  ret i32 %v0_10004cd8

; uselistorder directives
  uselistorder i32 %v3_10004ca0, { 2, 0, 1 }
  uselistorder i32 %v2_10004c80, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10004c74, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_10004cd8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004c74, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10004d101 = load i32, i32* @r3, align 4
  %v1_10004d102 = inttoptr i32 %v0_10004d101 to i8*
  %v2_10004d103 = load i8, i8* %v1_10004d102, align 1
  %v3_10004d104 = zext i8 %v2_10004d103 to i32
  store i32 %v3_10004d104, i32* %r11.global-to-local, align 4
  %v3_10004d146 = icmp eq i8 %v2_10004d103, 0
  br i1 %v3_10004d146, label %dec_label_pc_10004d24, label %dec_label_pc_10004d1c

dec_label_pc_10004cf4:                            ; preds = %dec_label_pc_10004cf8
  %v3_10004cf8 = zext i8 %v2_10004cf8 to i32
  %v4_10004d04 = icmp eq i32 %v3_10004cf8, %v1_10004d04
  %v0_10004cf4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10004d04, i32 %v0_10004cf4)
  %v0_10004cf8.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10004d04.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004cf8

dec_label_pc_10004cf8:                            ; preds = %dec_label_pc_10004d1c, %dec_label_pc_10004cf4
  %v1_10004d04 = phi i32 [ %v1_10004d049, %dec_label_pc_10004d1c ], [ %v1_10004d04.pre, %dec_label_pc_10004cf4 ]
  %v0_10004cf8 = phi i32 [ %tmp, %dec_label_pc_10004d1c ], [ %v0_10004cf8.pre, %dec_label_pc_10004cf4 ]
  %v1_10004cf8 = inttoptr i32 %v0_10004cf8 to i8*
  %v2_10004cf8 = load i8, i8* %v1_10004cf8, align 1
  %v1_10004cfc = add i32 %v0_10004cf8, 1
  store i32 %v1_10004cfc, i32* %r9.global-to-local, align 4
  %v3_10004d00 = icmp eq i8 %v2_10004cf8, 0
  br i1 %v3_10004d00, label %dec_label_pc_10004d0c, label %dec_label_pc_10004cf4

dec_label_pc_10004d0c:                            ; preds = %dec_label_pc_10004cf8
  %v0_10004d0c = load i32, i32* @r3, align 4
  %v1_10004d0c = add i32 %v0_10004d0c, 1
  store i32 %v1_10004d0c, i32* @r3, align 4
  %v1_10004d10 = inttoptr i32 %v1_10004d0c to i8*
  %v2_10004d10 = load i8, i8* %v1_10004d10, align 1
  %v3_10004d10 = zext i8 %v2_10004d10 to i32
  store i32 %v3_10004d10, i32* %r11.global-to-local, align 4
  %v3_10004d14 = icmp eq i8 %v2_10004d10, 0
  br i1 %v3_10004d14, label %dec_label_pc_10004d24, label %dec_label_pc_10004d1c

dec_label_pc_10004d1c:                            ; preds = %entry, %dec_label_pc_10004d0c
  %v1_10004d049 = phi i32 [ %v3_10004d10, %dec_label_pc_10004d0c ], [ %v3_10004d104, %entry ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10004cf8

dec_label_pc_10004d24:                            ; preds = %dec_label_pc_10004d0c, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_10004cf8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004d1c, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_10004d2c = icmp eq i8* %arg1, null
  br i1 %v3_10004d2c, label %dec_label_pc_10004de4, label %dec_label_pc_10004d34

dec_label_pc_10004d34:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_10004d48.pre = load i32, i32* @global_var_1001c35c, align 4
  br label %dec_label_pc_10004d44

dec_label_pc_10004d44:                            ; preds = %dec_label_pc_10004d34, %dec_label_pc_10004dbc
  %v0_10004dbc = phi i32 [ 0, %dec_label_pc_10004d34 ], [ %v2_10004dc4, %dec_label_pc_10004dbc ]
  %v0_10004dc0 = phi i32 [ 1, %dec_label_pc_10004d34 ], [ %v1_10004dc0, %dec_label_pc_10004dbc ]
  %v0_10004d44 = phi i32 [ %tmp, %dec_label_pc_10004d34 ], [ %v0_10004d443, %dec_label_pc_10004dbc ]
  %v1_10004d44 = inttoptr i32 %v0_10004d44 to i8*
  %v2_10004d44 = load i8, i8* %v1_10004d44, align 1
  %v3_10004d44 = zext i8 %v2_10004d44 to i32
  %v1_10004d4c = mul nuw nsw i32 %v3_10004d44, 2
  %v2_10004d50 = add i32 %v1_10004d4c, %v3_10004d48.pre
  %v3_10004d50 = inttoptr i32 %v2_10004d50 to i16*
  %v4_10004d50 = load i16, i16* %v3_10004d50, align 2
  %v1_10004d54 = and i16 %v4_10004d50, 8
  %v3_10004d54 = icmp eq i16 %v1_10004d54, 0
  br i1 %v3_10004d54, label %dec_label_pc_10004de4, label %dec_label_pc_10004d5c

dec_label_pc_10004d5c:                            ; preds = %dec_label_pc_10004d44
  br label %dec_label_pc_10004d74

dec_label_pc_10004d64:                            ; preds = %dec_label_pc_10004d74
  %v1_10004d78 = mul i32 %v1_10004dc4, 10
  %v2_10004d80 = add i32 %v3_10004d74, %v1_10004d78
  %v1_10004d64 = add i32 %v2_10004d80, -48
  %v1_10004d68 = add i32 %v0_10004dac, 1
  %v2_10004d6c = icmp sgt i32 %v1_10004d64, 255
  br i1 %v2_10004d6c, label %dec_label_pc_10004de4, label %dec_label_pc_10004d74

dec_label_pc_10004d74:                            ; preds = %dec_label_pc_10004d64, %dec_label_pc_10004d5c
  %v1_10004dc4 = phi i32 [ %v1_10004d64, %dec_label_pc_10004d64 ], [ 0, %dec_label_pc_10004d5c ]
  %v0_10004dac = phi i32 [ %v1_10004d68, %dec_label_pc_10004d64 ], [ %v0_10004d44, %dec_label_pc_10004d5c ]
  %v1_10004d74 = inttoptr i32 %v0_10004dac to i8*
  %v2_10004d74 = load i8, i8* %v1_10004d74, align 1
  %v3_10004d74 = zext i8 %v2_10004d74 to i32
  %v1_10004d7c = mul nuw nsw i32 %v3_10004d74, 2
  %v2_10004d84 = add i32 %v1_10004d7c, %v3_10004d48.pre
  %v3_10004d84 = inttoptr i32 %v2_10004d84 to i16*
  %v4_10004d84 = load i16, i16* %v3_10004d84, align 2
  %v5_10004d84 = zext i16 %v4_10004d84 to i32
  %v1_10004d88 = and i32 %v5_10004d84, 8
  %v3_10004d88 = icmp eq i32 %v1_10004d88, 0
  br i1 %v3_10004d88, label %dec_label_pc_10004d90, label %dec_label_pc_10004d64

dec_label_pc_10004d90:                            ; preds = %dec_label_pc_10004d74
  %v2_10004d90 = icmp sgt i32 %v0_10004dc0, 3
  br i1 %v2_10004d90, label %dec_label_pc_10004da8, label %dec_label_pc_10004d98

dec_label_pc_10004d98:                            ; preds = %dec_label_pc_10004d90
  %v3_10004d98 = icmp eq i8 %v2_10004d74, 46
  br i1 %v3_10004d98, label %dec_label_pc_10004da0, label %dec_label_pc_10004de4

dec_label_pc_10004da0:                            ; preds = %dec_label_pc_10004d98
  %v1_10004da0 = add i32 %v0_10004dac, 1
  br label %dec_label_pc_10004dbc

dec_label_pc_10004da8:                            ; preds = %dec_label_pc_10004d90
  %v3_10004da8 = icmp eq i8 %v2_10004d74, 0
  %v1_10004dac = add i32 %v0_10004dac, 1
  br i1 %v3_10004da8, label %dec_label_pc_10004dbc, label %dec_label_pc_10004db4

dec_label_pc_10004db4:                            ; preds = %dec_label_pc_10004da8
  %v1_10004db4 = and i32 %v5_10004d84, 32
  %v3_10004db4 = icmp eq i32 %v1_10004db4, 0
  br i1 %v3_10004db4, label %dec_label_pc_10004de4, label %dec_label_pc_10004dbc

dec_label_pc_10004dbc:                            ; preds = %dec_label_pc_10004db4, %dec_label_pc_10004da8, %dec_label_pc_10004da0
  %v0_10004d443 = phi i32 [ %v1_10004dac, %dec_label_pc_10004db4 ], [ %v1_10004dac, %dec_label_pc_10004da8 ], [ %v1_10004da0, %dec_label_pc_10004da0 ]
  %v1_10004dbc = mul i32 %v0_10004dbc, 256
  %v1_10004dc0 = add nuw nsw i32 %v0_10004dc0, 1
  %v2_10004dc4 = or i32 %v1_10004dc4, %v1_10004dbc
  store i32 %v2_10004dc4, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_10004dc0, 5
  br i1 %tmp10, label %dec_label_pc_10004d44, label %dec_label_pc_10004dd0

dec_label_pc_10004dd0:                            ; preds = %dec_label_pc_10004dbc
  %v0_10004dd0 = load i32, i32* @r4, align 4
  %v3_10004dd0 = icmp eq i32 %v0_10004dd0, 0
  %v0_10004dd8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10004dd0, i32 %v0_10004dd8)
  %v0_10004ddc = load i32, i32* %r5.global-to-local, align 4
  %v1_10004ddc = load i32, i32* @r4, align 4
  %v2_10004ddc = inttoptr i32 %v1_10004ddc to i32*
  store i32 %v0_10004ddc, i32* %v2_10004ddc, align 4
  ret i32 1

dec_label_pc_10004de4:                            ; preds = %dec_label_pc_10004d98, %dec_label_pc_10004db4, %dec_label_pc_10004d44, %dec_label_pc_10004d64, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10004dc4, { 1, 0 }
  uselistorder i32 %v1_10004dc0, { 1, 0 }
  uselistorder i32 %v0_10004dac, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10004de4, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10004d44, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_10004df0 = load i32, i32* @lr, align 4
  store i32 %v0_10004df0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268455452, i32* @lr, align 4
  %v1_10004e18 = call i32 @malloc(i32 512)
  store i32 %v1_10004e18, i32* @r30, align 4
  store i32 268455464, i32* @lr, align 4
  %v1_10004e24 = call i32 @malloc(i32 1025)
  %v0_10004e28 = load i32, i32* @r30, align 4
  %v3_10004e28 = icmp eq i32 %v0_10004e28, 0
  store i32 %v1_10004e24, i32* @r21, align 4
  br i1 %v3_10004e28, label %dec_label_pc_100053e4, label %dec_label_pc_10004e34

dec_label_pc_10004e34:                            ; preds = %entry
  %v3_10004e34 = icmp eq i32 %v1_10004e24, 0
  br i1 %v3_10004e34, label %dec_label_pc_100053e4, label %dec_label_pc_10004e3c

dec_label_pc_10004e3c:                            ; preds = %dec_label_pc_10004e34
  %v0_10004e3c = load i32, i32* @r23, align 4
  %v3_10004e3c = icmp eq i32 %v0_10004e3c, 0
  br i1 %v3_10004e3c, label %dec_label_pc_100053e4, label %dec_label_pc_10004e44

dec_label_pc_10004e44:                            ; preds = %dec_label_pc_10004e3c
  %v0_10004e44 = load i32, i32* %r14.global-to-local, align 4
  %v1_10004e44 = inttoptr i32 %v0_10004e44 to i8*
  %v2_10004e44 = load i8, i8* %v1_10004e44, align 1
  %v3_10004e44 = zext i8 %v2_10004e44 to i32
  store i32 %v3_10004e44, i32* %r0.global-to-local, align 4
  %v3_10004e48 = icmp eq i8 %v2_10004e44, 0
  br i1 %v3_10004e48, label %dec_label_pc_100053e4, label %dec_label_pc_10004e50

dec_label_pc_10004e50:                            ; preds = %dec_label_pc_10004e44
  store i32 %v0_10004e44, i32* @r3, align 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  %v0_10004e58 = call i32 @__GI_strlen()
  %v0_10004e60 = load i32, i32* %r14.global-to-local, align 4
  %v2_10004e60 = add i32 %v0_10004e60, %v0_10004e58
  %v1_10004e68 = add i32 %v2_10004e60, -1
  %v2_10004e68 = inttoptr i32 %v1_10004e68 to i8*
  %v3_10004e68 = load i8, i8* %v2_10004e68, align 1
  %v4_10004e68 = zext i8 %v3_10004e68 to i32
  store i32 %v4_10004e68, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c620.93 to i32), i32* %r29.global-to-local, align 4
  %v2_10004e70 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_10004e70, i32* %r28.global-to-local, align 4
  store i32 %v2_10004e70, i32* @r3, align 4
  %v1_10004e7c = xor i32 %v4_10004e68, 46
  store i32 %v1_10004e7c, i32* %r17.global-to-local, align 4
  %v0_10004e80 = call i32 @__pthread_return_void()
  %v0_10004e88 = call i32 @__pthread_return_0()
  %v3_10004e90 = load i32, i32* @global_var_1001c3e8.94, align 4
  store i32 %v3_10004e90, i32* %r11.global-to-local, align 4
  %v3_10004e9c = load i16, i16* @global_var_1001c1fc.95, align 2
  %v4_10004e9c = zext i16 %v3_10004e9c to i32
  store i32 %v4_10004e9c, i32* @r25, align 4
  %v1_10004ea0 = load i32, i32* @r23, align 4
  store i32 %v2_10004e70, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_10004ea0 = srem i32 %v3_10004e90, %v1_10004ea0
  %v2_10004ebc = sub i32 %v3_10004e90, %v2_10004ea0
  store i32 %v2_10004ebc, i32* %r0.global-to-local, align 4
  store i32 %v2_10004ea0, i32* @r26, align 4
  %v0_10004ec4 = call i32 @__pthread_return_void()
  %v0_100053d8.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_100053d8.pr19, 3
  br i1 %tmp57, label %dec_label_pc_10004ecc.lr.ph.lr.ph, label %dec_label_pc_100053f0

dec_label_pc_10004ecc.lr.ph.lr.ph:                ; preds = %dec_label_pc_10004e50
  %v2_10004ee4 = ptrtoint i32* %stack_var_-144 to i32
  %v2_10004ff8 = ptrtoint i32* %stack_var_-204 to i32
  %v2_10005058 = ptrtoint i16* %stack_var_-212 to i32
  %v2_1000509c = ptrtoint i32* %stack_var_-248 to i32
  %v3_100050f8 = icmp eq i32 %tmp37, 0
  %v3_10005104 = icmp eq i32 %tmp36, 3
  %v2_10005180 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_100051d4 = ptrtoint i32* %stack_var_-184 to i32
  %v3_10005200 = icmp eq i32 %tmp33, 0
  %v3_10005174 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_10004ecc.lr.ph

dec_label_pc_10004ecc:                            ; preds = %dec_label_pc_10004ecc.lr.ph, %dec_label_pc_1000507c
  %v0_10004ecc = load i32, i32* @r19, align 4
  %v3_10004ecc = icmp eq i32 %v0_10004ecc, -1
  br i1 %v3_10004ecc, label %dec_label_pc_10004edc, label %dec_label_pc_10004ed4

dec_label_pc_10004ed4:                            ; preds = %dec_label_pc_10004ecc
  store i32 268455644, i32* @lr, align 4
  %v1_10004ed8 = call i32 @__libc_close(i32 %v0_10004ecc)
  br label %dec_label_pc_10004edc

dec_label_pc_10004edc:                            ; preds = %dec_label_pc_10004ecc, %dec_label_pc_10004ed4
  store i32 %v2_10004ee4, i32* %r29.global-to-local, align 4
  %v0_10004ee8 = load i32, i32* @r30, align 4
  store i32 268455664, i32* @lr, align 4
  %v3_10004eec = call i32 @__GI_memset(i32 %v0_10004ee8, i32 0, i32 512)
  store i32 268455680, i32* @lr, align 4
  %v3_10004efc = call i32 @__GI_memset(i32 %v2_10004ee4, i32 0, i32 48)
  %v0_10004f00 = load i32, i32* @r25, align 4
  %v1_10004f00 = add i32 %v0_10004f00, 1
  %v1_10004f04 = urem i32 %v1_10004f00, 65536
  store i32 %v1_10004f04, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10004f10 = load i32, i32* @r30, align 4
  store i32 %v1_10004f04, i32* %stack_var_-144, align 4
  %v4_10004f24 = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_10004f10, i32 512)
  store i32 %v4_10004f24, i32* %r28.global-to-local, align 4
  %v1_10004f28 = icmp slt i32 %v4_10004f24, 0
  br i1 %v1_10004f28, label %dec_label_pc_100053f0, label %dec_label_pc_10004f30

dec_label_pc_10004f30:                            ; preds = %dec_label_pc_10004edc
  %v0_10004f30 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10004f30, i32* @r4, align 4
  %v0_10004f38 = load i32, i32* @r21, align 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268455748, i32* @lr, align 4
  %v4_10004f40 = call i32 @strncpy(i32 %v0_10004f38, i32 %v0_10004f30, i32 1025)
  store i32 ptrtoint (i32* @global_var_1001c200.54 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10004e70, i32* @r3, align 4
  %v0_10004f58 = call i32 @__pthread_return_void()
  %v0_10004f60 = call i32 @__pthread_return_0()
  %v0_10004f64 = load i32, i32* @r22, align 4
  %v1_10004f64 = icmp slt i32 %v0_10004f64, 0
  %v0_10004f6c = load i32, i32* @r26, align 4
  %v1_10004f6c = mul i32 %v0_10004f6c, 4
  store i32 %v1_10004f6c, i32* %r0.global-to-local, align 4
  %v2_10004f70 = add i32 %v1_10004f6c, %arg4
  %v3_10004f70 = inttoptr i32 %v2_10004f70 to i32*
  %v4_10004f70 = load i32, i32* %v3_10004f70, align 4
  store i32 %v4_10004f70, i32* %r29.global-to-local, align 4
  br i1 %v1_10004f64, label %dec_label_pc_10004fb8, label %dec_label_pc_10004f78

dec_label_pc_10004f78:                            ; preds = %dec_label_pc_10004f30
  %v3_10004f7c = load i32, i32* @global_var_1001c3f0.97, align 4
  store i32 %v3_10004f7c, i32* %r0.global-to-local, align 4
  %v2_10004f80 = icmp slt i32 %v0_10004f64, %v3_10004f7c
  br i1 %v2_10004f80, label %dec_label_pc_10004f88, label %dec_label_pc_10004fb8

dec_label_pc_10004f88:                            ; preds = %dec_label_pc_10004f78
  store i32 ptrtoint (i32* @global_var_1000abe0.98 to i32), i32* @r4, align 4
  %v0_10004f94 = load i32, i32* @r21, align 4
  store i32 268455836, i32* @lr, align 4
  %v4_10004f98 = inttoptr i32 %v0_10004f94 to i8*
  %v5_10004f98 = call i32 @__GI_strncat(i8* %v4_10004f98, i32 ptrtoint (i32* @global_var_1000abe0.98 to i32), i32 1025, i32 268566528)
  %v0_10004fa0 = load i32, i32* @r22, align 4
  %v1_10004fa0 = mul i32 %v0_10004fa0, 4
  store i32 %v1_10004fa0, i32* %r0.global-to-local, align 4
  %v2_10004fa8 = add i32 %v1_10004fa0, ptrtoint (i32* @global_var_1001e6d0.99 to i32)
  %v3_10004fa8 = inttoptr i32 %v2_10004fa8 to i32*
  %v4_10004fa8 = load i32, i32* %v3_10004fa8, align 4
  store i32 %v4_10004fa8, i32* @r4, align 4
  %v0_10004fac = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004fb8.100 to i32), i32* @lr, align 4
  %v4_10004fb4 = inttoptr i32 %v0_10004fac to i8*
  %v5_10004fb4 = call i32 @__GI_strncat(i8* %v4_10004fb4, i32 %v4_10004fa8, i32 1025, i32 ptrtoint (i32* @global_var_1001e6d0.99 to i32))
  br label %dec_label_pc_10004fb8

dec_label_pc_10004fb8:                            ; preds = %dec_label_pc_10004f78, %dec_label_pc_10004f30, %dec_label_pc_10004f88
  store i32 %v2_10004e70, i32* @r3, align 4
  %v0_10004fc0 = call i32 @__pthread_return_void()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10004fcc = load i32, i32* @r30, align 4
  %v1_10004fcc = load i32, i32* %r28.global-to-local, align 4
  %v2_10004fcc = add i32 %v1_10004fcc, %v0_10004fcc
  %v1_10004fd0 = sub i32 512, %v1_10004fcc
  %v0_10004fd8 = load i32, i32* @r21, align 4
  store i32 %v0_10004fd8, i32* %stack_var_-240, align 4
  store i32 268455908, i32* @lr, align 4
  %v4_10004fe0 = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_10004fcc, i32 %v1_10004fd0)
  store i32 %v4_10004fe0, i32* @r27, align 4
  %v1_10004fe4 = icmp slt i32 %v4_10004fe0, 0
  br i1 %v1_10004fe4, label %dec_label_pc_100053f0, label %dec_label_pc_10004fec

dec_label_pc_10004fec:                            ; preds = %dec_label_pc_10004fb8
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10004ff4 = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268455940, i32* @lr, align 4
  %v3_10005000 = inttoptr i32 %v0_10004ff4 to i8*
  %v4_10005000 = call i32 @inet_pton(i32 10, i8* %v3_10005000, i32 %v2_10004ff8)
  %tmp59 = icmp slt i32 %v4_10005000, 1
  br i1 %tmp59, label %dec_label_pc_10005014thread-pre-split, label %dec_label_pc_1000500c

dec_label_pc_1000500c:                            ; preds = %dec_label_pc_10004fec
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10005014

dec_label_pc_10005014thread-pre-split:            ; preds = %dec_label_pc_10004fec
  %v3_10005014.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10005014

dec_label_pc_10005014:                            ; preds = %dec_label_pc_10005014thread-pre-split, %dec_label_pc_1000500c
  %v3_10005014 = phi i16 [ %v3_10005014.pr, %dec_label_pc_10005014thread-pre-split ], [ 10, %dec_label_pc_1000500c ]
  %v3_10005018 = icmp eq i16 %v3_10005014, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_10005018, label %dec_label_pc_10005040, label %dec_label_pc_1000502c

dec_label_pc_1000502c:                            ; preds = %dec_label_pc_10005014
  %v0_10005030 = load i32, i32* @r29, align 4
  store i32 268455996, i32* @lr, align 4
  %v1_10005038 = call i32 @inet_addr(i32 %v0_10005030)
  %v3_10005040.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10005040

dec_label_pc_10005040:                            ; preds = %dec_label_pc_10005014, %dec_label_pc_1000502c
  %v3_10005040 = phi i16 [ 10, %dec_label_pc_10005014 ], [ %v3_10005040.pre, %dec_label_pc_1000502c ]
  %v4_10005040 = sext i16 %v3_10005040 to i32
  store i32 268456016, i32* @lr, align 4
  %v3_1000504c = call i32 @socket(i32 %v4_10005040, i32 2, i32 17)
  store i32 %v3_1000504c, i32* @r19, align 4
  %v1_10005050 = icmp slt i32 %v3_1000504c, 0
  br i1 %v1_10005050, label %dec_label_pc_1000507c, label %dec_label_pc_10005058

dec_label_pc_10005058:                            ; preds = %dec_label_pc_10005040
  store i32 268456036, i32* @lr, align 4
  %v3_10005060 = call i32 @__libc_connect(i32 %v2_10005058, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_10005060, -1
  br i1 %tmp60, label %dec_label_pc_10005084, label %dec_label_pc_1000506c

dec_label_pc_1000506c:                            ; preds = %dec_label_pc_10005058
  %v0_1000506c = call i32 @__errno_location()
  %v1_10005070 = inttoptr i32 %v0_1000506c to i32*
  %v2_10005070 = load i32, i32* %v1_10005070, align 4
  store i32 %v2_10005070, i32* %r0.global-to-local, align 4
  %v3_10005074 = icmp eq i32 %v2_10005070, 101
  br i1 %v3_10005074, label %dec_label_pc_100053bc, label %dec_label_pc_1000507c

dec_label_pc_1000507c:                            ; preds = %dec_label_pc_1000506c, %dec_label_pc_10005040
  %v0_1000507c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000507c = add i32 %v0_1000507c, 1
  store i32 %v1_1000507c, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_1000507c, 3
  br i1 %tmp61, label %dec_label_pc_10004ecc, label %dec_label_pc_100053f0

dec_label_pc_10005084:                            ; preds = %dec_label_pc_10005058
  %v0_10005084 = load i32, i32* @r28, align 4
  %v1_10005084 = load i32, i32* @r27, align 4
  %v2_10005084 = add i32 %v1_10005084, %v0_10005084
  %v0_10005088 = load i32, i32* @r30, align 4
  %v0_10005090 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_10005098.102 to i32), i32* @lr, align 4
  %v4_10005094 = call i32 @__libc_send(i32 %v0_10005090, i32 %v0_10005088, i32 %v2_10005084, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100050ac = load i32, i32* @r19, align 4
  store i32 %v0_100050ac, i32* %stack_var_-248, align 4
  store i32 268456116, i32* @lr, align 4
  %v3_100050b0 = call i32 @__libc_poll(i32 %v2_1000509c, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_100050b0, 1
  br i1 %tmp62, label %dec_label_pc_100053bc, label %dec_label_pc_100050bc

dec_label_pc_100050bc:                            ; preds = %dec_label_pc_10005084
  %v0_100050bc = load i32, i32* @r19, align 4
  %v0_100050c0 = load i32, i32* @r30, align 4
  store i32 268456144, i32* @lr, align 4
  %v4_100050cc = call i32 @__libc_recv(i32 %v0_100050bc, i32 %v0_100050c0, i32 512, i32 0)
  store i32 %v4_100050cc, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_100050cc, 12
  br i1 %tmp63, label %dec_label_pc_10005364, label %dec_label_pc_100050dc

dec_label_pc_100050dc:                            ; preds = %dec_label_pc_100050bc
  %v0_100050dc = load i32, i32* @r30, align 4
  %v2_100050e4 = inttoptr i32 %v0_100050dc to i8*
  %v3_100050e4 = call i32 @__decode_header(i8* %v2_100050e4, i32 %v2_10004ee4)
  %v3_100050e8 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_100050e8, i32* @r20, align 4
  %v1_100050ec = load i32, i32* @r25, align 4
  %v4_100050ec = icmp eq i32 %v3_100050e8, %v1_100050ec
  br i1 %v4_100050ec, label %dec_label_pc_100050f4, label %dec_label_pc_10005364

dec_label_pc_100050f4:                            ; preds = %dec_label_pc_100050dc
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_100050f8, label %dec_label_pc_10005364, label %dec_label_pc_10005100

dec_label_pc_10005100:                            ; preds = %dec_label_pc_100050f4
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_10005104, label %dec_label_pc_1000510c, label %dec_label_pc_10005174

dec_label_pc_1000510c:                            ; preds = %dec_label_pc_10005100
  %v0_1000510c = load i32, i32* %r17.global-to-local, align 4
  %v3_1000510c = icmp eq i32 %v0_1000510c, 0
  br i1 %v3_1000510c, label %dec_label_pc_10005114, label %dec_label_pc_10005168

dec_label_pc_10005114:                            ; preds = %dec_label_pc_1000510c
  store i32 ptrtoint (i32* @global_var_1001c200.54 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10004e70, i32* %r28.global-to-local, align 4
  store i32 %v2_10004e70, i32* @r3, align 4
  %v0_10005130 = call i32 @__pthread_return_void()
  %v0_10005138 = call i32 @__pthread_return_0()
  %v3_10005140 = load i32, i32* @global_var_1001c3f0.97, align 4
  store i32 %v2_10004e70, i32* @r3, align 4
  %v1_1000514c = add i32 %v3_10005140, -1
  store i32 %v1_1000514c, i32* %r29.global-to-local, align 4
  %v0_10005150 = call i32 @__pthread_return_void()
  %v0_10005154 = load i32, i32* @r22, align 4
  %v2_10005154 = icmp slt i32 %v0_10005154, %v1_1000514c
  br i1 %v2_10005154, label %dec_label_pc_1000515c, label %dec_label_pc_10005168

dec_label_pc_1000515c:                            ; preds = %dec_label_pc_10005114
  %v1_1000515c = add i32 %v0_10005154, 1
  store i32 %v1_1000515c, i32* @r22, align 4
  %v0_10005160 = load i32, i32* @r20, align 4
  store i32 %v0_10005160, i32* @r25, align 4
  br label %dec_label_pc_100053d8thread-pre-split.backedge

dec_label_pc_10005168:                            ; preds = %dec_label_pc_10005114, %dec_label_pc_1000510c
  %v0_10005168 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1000519c

dec_label_pc_10005174:                            ; preds = %dec_label_pc_10005100
  br i1 %v3_10005174, label %dec_label_pc_1000517c, label %dec_label_pc_10005364

dec_label_pc_1000517c:                            ; preds = %dec_label_pc_10005174
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_10005194, label %dec_label_pc_10005188

dec_label_pc_10005188:                            ; preds = %dec_label_pc_1000517c
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_100051b410 = load i32, i32* @r30, align 4
  store i32 %v0_100051b410, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100051a4

dec_label_pc_10005194:                            ; preds = %dec_label_pc_1000517c
  %v0_10005194 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1000519c

dec_label_pc_1000519c:                            ; preds = %dec_label_pc_10005168, %dec_label_pc_10005194
  %storemerge3 = phi i32 [ %v0_10005194, %dec_label_pc_10005194 ], [ %v0_10005168, %dec_label_pc_10005168 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_10005194 ], [ 1, %dec_label_pc_10005168 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_1000519c = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_1000519c, align 4
  br label %dec_label_pc_10005400

dec_label_pc_100051a4:                            ; preds = %dec_label_pc_10005188, %dec_label_pc_100051a4
  %v0_100051b414 = phi i32 [ %v0_100051b410, %dec_label_pc_10005188 ], [ %v0_100051b4, %dec_label_pc_100051a4 ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_10005188 ], [ %v2_100051a8, %dec_label_pc_100051a4 ]
  store i32 268456360, i32* @lr, align 4
  %v2_100051a4 = call i32 @__length_question(i32 %v0_100051b414, i32 %storemerge213)
  %v0_100051a8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100051a8 = add i32 %v0_100051a8, %v2_100051a4
  %v0_100051b8.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_100051a8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_100051a8, i32* @r4, align 4
  %v0_100051b4 = load i32, i32* @r30, align 4
  store i32 %v0_100051b4, i32* @r3, align 4
  %v2_100051b8 = icmp slt i32 %v0_100051b8.pr, 1
  %v1_100051bc = add i32 %v0_100051b8.pr, 1
  store i32 %v1_100051bc, i32* %r29.global-to-local, align 4
  br i1 %v2_100051b8, label %dec_label_pc_100051a4, label %dec_label_pc_100051c4

dec_label_pc_100051c4:                            ; preds = %dec_label_pc_100051a4
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_10005180, label %dec_label_pc_10005310, label %dec_label_pc_10005318

dec_label_pc_100051d4:                            ; preds = %dec_label_pc_10005310
  store i32 %v2_100051d4, i32* %r29.global-to-local, align 4
  %v0_100051d8 = load i32, i32* @r30, align 4
  store i32 268456428, i32* @lr, align 4
  %v5_100051e8 = call i32 @__decode_answer(i32 %v0_100051d8, i32 %v0_100051dc, i32 %v1_10005310, i32* nonnull %stack_var_-184)
  store i32 %v5_100051e8, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_100051e8, -1
  br i1 %tmp64, label %dec_label_pc_1000520c, label %dec_label_pc_100051f4

dec_label_pc_100051f4:                            ; preds = %dec_label_pc_100051d4
  %v0_100051f4 = load i32, i32* @r24, align 4
  %v3_100051f4 = icmp eq i32 %v0_100051f4, 0
  br i1 %v3_100051f4, label %dec_label_pc_10005364, label %dec_label_pc_100051fc

dec_label_pc_100051fc:                            ; preds = %dec_label_pc_100051f4
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_10005200, label %dec_label_pc_10005364, label %dec_label_pc_10005318

dec_label_pc_1000520c:                            ; preds = %dec_label_pc_100051d4
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_10005210 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_10005210, label %dec_label_pc_100052b4, label %dec_label_pc_10005218

dec_label_pc_10005218:                            ; preds = %dec_label_pc_1000520c
  %v0_10005218 = load i32, i32* @r31, align 4
  store i32 %v2_100051d4, i32* @r4, align 4
  %v1_10005220 = add i32 %v0_10005218, 28
  %v2_10005220 = inttoptr i32 %v1_10005220 to i32*
  %v3_10005220 = load i32, i32* %v2_10005220, align 4
  store i32 %v3_10005220, i32* %r0.global-to-local, align 4
  store i32 %v0_10005218, i32* @r3, align 4
  %v1_10005228 = add i32 %v0_10005218, 36
  %v2_10005228 = inttoptr i32 %v1_10005228 to i32*
  %v3_10005228 = load i32, i32* %v2_10005228, align 4
  store i32 %v3_10005228, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268456512, i32* @lr, align 4
  %v0_1000523c = call i32 @memcpy()
  %v0_10005240 = load i32, i32* @r31, align 4
  %v1_10005240 = add i32 %v0_10005240, 4
  %v2_10005240 = inttoptr i32 %v1_10005240 to i32*
  %v3_10005240 = load i32, i32* %v2_10005240, align 4
  %v3_10005244 = icmp eq i32 %v3_10005240, 24
  br i1 %v3_10005244, label %dec_label_pc_10005218.dec_label_pc_10005268_crit_edge, label %dec_label_pc_1000524c

dec_label_pc_10005218.dec_label_pc_10005268_crit_edge: ; preds = %dec_label_pc_10005218
  %v1_10005268.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10005268

dec_label_pc_1000524c:                            ; preds = %dec_label_pc_10005218
  %v1_1000524c = add i32 %v0_10005240, 28
  %v2_1000524c = inttoptr i32 %v1_1000524c to i32*
  %v3_1000524c = load i32, i32* %v2_1000524c, align 4
  store i32 %v3_1000524c, i32* %r0.global-to-local, align 4
  %v3_10005250 = icmp eq i32 %v3_1000524c, 0
  br i1 %v3_10005250, label %dec_label_pc_10005318, label %dec_label_pc_10005258

dec_label_pc_10005258:                            ; preds = %dec_label_pc_1000524c
  %v0_10005258 = load i32, i32* %r16.global-to-local, align 4
  %v3_10005258 = icmp eq i32 %v0_10005258, 1
  br i1 %v3_10005258, label %dec_label_pc_10005268, label %dec_label_pc_10005260

dec_label_pc_10005260:                            ; preds = %dec_label_pc_10005258
  %v3_10005260 = icmp eq i32 %v0_10005258, 28
  br i1 %v3_10005260, label %dec_label_pc_10005268, label %dec_label_pc_10005318

dec_label_pc_10005268:                            ; preds = %dec_label_pc_10005218.dec_label_pc_10005268_crit_edge, %dec_label_pc_10005260, %dec_label_pc_10005258
  %v1_10005268 = phi i32 [ %v1_10005268.pre, %dec_label_pc_10005218.dec_label_pc_10005268_crit_edge ], [ 28, %dec_label_pc_10005260 ], [ 1, %dec_label_pc_10005258 ]
  %v4_10005268 = icmp eq i32 %v3_10005240, %v1_10005268
  br i1 %v4_10005268, label %dec_label_pc_1000527c, label %dec_label_pc_10005270

dec_label_pc_10005270:                            ; preds = %dec_label_pc_10005268
  %v1_10005270 = inttoptr i32 %v0_10005240 to i32*
  %v2_10005270 = load i32, i32* %v1_10005270, align 4
  store i32 ptrtoint (i32* @global_var_10005278.105 to i32), i32* @lr, align 4
  %v1_10005274 = call i32 @free(i32 %v2_10005270)
  br label %dec_label_pc_100052fc

dec_label_pc_1000527c:                            ; preds = %dec_label_pc_10005268
  %v1_10005280 = add i32 %v0_10005240, 16
  %v2_10005280 = inttoptr i32 %v1_10005280 to i32*
  %v3_10005280 = load i32, i32* %v2_10005280, align 4
  store i32 %v3_10005280, i32* %r11.global-to-local, align 4
  %v0_10005284 = load i32, i32* @r24, align 4
  %v2_10005284 = sub i32 %tmp35, %v0_10005284
  %v1_10005288 = add i32 %v0_10005240, 32
  %v2_10005288 = inttoptr i32 %v1_10005288 to i32*
  %v3_10005288 = load i32, i32* %v2_10005288, align 4
  store i32 %v3_10005288, i32* %r0.global-to-local, align 4
  %v1_1000528c = add i32 %v2_10005284, -1
  %v1_10005290 = add i32 %v3_10005280, 4
  %v2_10005294 = mul i32 %v1_1000528c, %v1_10005290
  store i32 %v2_10005294, i32* %r11.global-to-local, align 4
  %v2_10005298 = add i32 %v0_10005240, 36
  %v3_10005298 = inttoptr i32 %v2_10005298 to i32*
  store i32 %v1_1000528c, i32* %v3_10005298, align 4
  %v0_1000529c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000529c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000529c = icmp ugt i32 %v0_1000529c, %v1_1000529c
  br i1 %v3_1000529c, label %dec_label_pc_10005318, label %dec_label_pc_100052a4

dec_label_pc_100052a4:                            ; preds = %dec_label_pc_1000527c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100052ac = load i32, i32* @r31, align 4
  %v2_100052ac = add i32 %v1_100052ac, 36
  %v3_100052ac = inttoptr i32 %v2_100052ac to i32*
  store i32 0, i32* %v3_100052ac, align 4
  br label %dec_label_pc_100052fc

dec_label_pc_100052b4:                            ; preds = %dec_label_pc_1000520c
  %v3_100052b4 = load i32, i32* %stack_var_-184, align 4
  store i32 268456636, i32* @lr, align 4
  %v1_100052b8 = call i32 @free(i32 %v3_100052b4)
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_100052c0 = load i32, i32* %r16.global-to-local, align 4
  %v4_100052c0 = icmp eq i32 %tmp29, %v1_100052c0
  br i1 %v4_100052c0, label %dec_label_pc_100052c8, label %dec_label_pc_100052fc

dec_label_pc_100052c8:                            ; preds = %dec_label_pc_100052b4
  %v0_100052c8 = load i32, i32* @r31, align 4
  %v1_100052c8 = add i32 %v0_100052c8, 16
  %v2_100052c8 = inttoptr i32 %v1_100052c8 to i32*
  %v3_100052c8 = load i32, i32* %v2_100052c8, align 4
  store i32 %v3_100052c8, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_100052d0 = icmp eq i32 %v3_100052c8, %tmp28
  br i1 %v4_100052d0, label %dec_label_pc_100052d8, label %dec_label_pc_1000535c

dec_label_pc_100052d8:                            ; preds = %dec_label_pc_100052c8
  %v1_100052d8 = add i32 %v0_100052c8, 36
  %v2_100052d8 = inttoptr i32 %v1_100052d8 to i32*
  %v3_100052d8 = load i32, i32* %v2_100052d8, align 4
  %v1_100052dc = add i32 %v0_100052c8, 28
  %v2_100052dc = inttoptr i32 %v1_100052dc to i32*
  %v3_100052dc = load i32, i32* %v2_100052dc, align 4
  store i32 %v3_100052dc, i32* %r0.global-to-local, align 4
  %v2_100052e0 = mul i32 %v3_100052d8, %tmp28
  %v2_100052e8 = add i32 %v3_100052dc, %v2_100052e0
  store i32 %v2_100052e8, i32* @r3, align 4
  store i32 268456688, i32* @lr, align 4
  %v0_100052ec = call i32 @memcpy()
  %v0_100052f0 = load i32, i32* @r31, align 4
  %v1_100052f0 = add i32 %v0_100052f0, 36
  %v2_100052f0 = inttoptr i32 %v1_100052f0 to i32*
  %v3_100052f0 = load i32, i32* %v2_100052f0, align 4
  %v1_100052f4 = add i32 %v3_100052f0, 1
  store i32 %v1_100052f4, i32* %v2_100052f0, align 4
  br label %dec_label_pc_100052fc

dec_label_pc_100052fc:                            ; preds = %dec_label_pc_100052b4, %dec_label_pc_100052a4, %dec_label_pc_10005270, %dec_label_pc_100052d8
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_100052d8 ], [ 0, %dec_label_pc_100052b4 ], [ 0, %dec_label_pc_100052a4 ], [ %stack_var_-88.118, %dec_label_pc_10005270 ]
  %v0_100052fc = load i32, i32* @r28, align 4
  %v1_100052fc = load i32, i32* %r15.global-to-local, align 4
  %v2_100052fc = add i32 %v1_100052fc, %v0_100052fc
  store i32 %v2_100052fc, i32* %r28.global-to-local, align 4
  %v0_10005300 = load i32, i32* @r24, align 4
  %v1_10005300 = add i32 %v0_10005300, 1
  store i32 %v1_10005300, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_10005308 = icmp slt i32 %v1_10005300, %tmp35
  br i1 %v2_10005308, label %dec_label_pc_10005310, label %dec_label_pc_10005318

dec_label_pc_10005310:                            ; preds = %dec_label_pc_100051c4, %dec_label_pc_100052fc
  %v0_100051dc = phi i32 [ %v2_100052fc, %dec_label_pc_100052fc ], [ %v2_100051a8, %dec_label_pc_100051c4 ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_100052fc ], [ 1, %dec_label_pc_100051c4 ]
  %v1_10005310 = load i32, i32* @r27, align 4
  %v2_10005310 = icmp slt i32 %v0_100051dc, %v1_10005310
  br i1 %v2_10005310, label %dec_label_pc_100051d4, label %dec_label_pc_10005318

dec_label_pc_10005318:                            ; preds = %dec_label_pc_100051fc, %dec_label_pc_100051c4, %dec_label_pc_10005310, %dec_label_pc_1000524c, %dec_label_pc_1000527c, %dec_label_pc_100052fc, %dec_label_pc_10005260
  %v0_10005318 = load i32, i32* @r19, align 4
  store i32 268456736, i32* @lr, align 4
  %v1_1000531c = call i32 @__libc_close(i32 %v0_10005318)
  %v3_10005324 = icmp eq i32 %arg5, 0
  %v0_10005334 = load i32, i32* @r30, align 4
  br i1 %v3_10005324, label %dec_label_pc_10005334, label %dec_label_pc_1000532c

dec_label_pc_1000532c:                            ; preds = %dec_label_pc_10005318
  %v2_1000532c = inttoptr i32 %arg5 to i32*
  store i32 %v0_10005334, i32* %v2_1000532c, align 4
  br label %dec_label_pc_1000533c

dec_label_pc_10005334:                            ; preds = %dec_label_pc_10005318
  store i32 268456764, i32* @lr, align 4
  %v1_10005338 = call i32 @free(i32 %v0_10005334)
  br label %dec_label_pc_1000533c

dec_label_pc_1000533c:                            ; preds = %dec_label_pc_1000532c, %dec_label_pc_10005334
  %v0_1000533c = load i32, i32* @r21, align 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268456776, i32* @lr, align 4
  %v1_10005344 = call i32 @free(i32 %v0_1000533c)
  store i32 ptrtoint (i32* @global_var_1001c620.93 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005440

dec_label_pc_1000535c:                            ; preds = %dec_label_pc_100052c8
  %v1_1000535c = inttoptr i32 %v0_100052c8 to i32*
  %v2_1000535c = load i32, i32* %v1_1000535c, align 4
  store i32 268456804, i32* @lr, align 4
  %v1_10005360 = call i32 @free(i32 %v2_1000535c)
  br label %dec_label_pc_10005364

dec_label_pc_10005364:                            ; preds = %dec_label_pc_10005174, %dec_label_pc_100050dc, %dec_label_pc_100051fc, %dec_label_pc_100051f4, %dec_label_pc_100050f4, %dec_label_pc_100050bc, %dec_label_pc_1000535c
  %v0_10005364 = load i32, i32* %r17.global-to-local, align 4
  %v3_10005364 = icmp eq i32 %v0_10005364, 0
  br i1 %v3_10005364, label %dec_label_pc_1000536c, label %dec_label_pc_100053bc

dec_label_pc_1000536c:                            ; preds = %dec_label_pc_10005364
  store i32 ptrtoint (i32* @global_var_1001c200.54 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10004e70, i32* %r28.global-to-local, align 4
  store i32 %v2_10004e70, i32* @r3, align 4
  %v0_10005388 = call i32 @__pthread_return_void()
  %v0_10005390 = call i32 @__pthread_return_0()
  %v3_10005398 = load i32, i32* @global_var_1001c3f0.97, align 4
  store i32 %v2_10004e70, i32* @r3, align 4
  %v1_100053a4 = add i32 %v3_10005398, -1
  store i32 %v1_100053a4, i32* %r29.global-to-local, align 4
  %v0_100053a8 = call i32 @__pthread_return_void()
  %v0_100053ac = load i32, i32* @r22, align 4
  %v2_100053ac = icmp slt i32 %v0_100053ac, %v1_100053a4
  br i1 %v2_100053ac, label %dec_label_pc_100053b4, label %dec_label_pc_100053bc

dec_label_pc_100053b4:                            ; preds = %dec_label_pc_1000536c
  %v1_100053b4 = add i32 %v0_100053ac, 1
  store i32 %v1_100053b4, i32* @r22, align 4
  br label %dec_label_pc_100053d8thread-pre-split.backedge

dec_label_pc_100053d8thread-pre-split.backedge:   ; preds = %dec_label_pc_100053b4, %dec_label_pc_1000515c, %dec_label_pc_100053d4
  %v0_100053d8.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_100053d8.pr, 3
  br i1 %tmp65, label %dec_label_pc_10004ecc.lr.ph, label %dec_label_pc_100053f0

dec_label_pc_100053bc:                            ; preds = %dec_label_pc_1000506c, %dec_label_pc_1000536c, %dec_label_pc_10005364, %dec_label_pc_10005084
  %v0_100053bc = load i32, i32* @r26, align 4
  %v1_100053bc = add i32 %v0_100053bc, 1
  store i32 %v1_100053bc, i32* %r0.global-to-local, align 4
  %v1_100053c0 = load i32, i32* @r23, align 4
  %v2_100053c0 = srem i32 %v1_100053bc, %v1_100053c0
  store i32 %v2_100053c0, i32* @r26, align 4
  %v5_100053c8 = icmp eq i32 %v2_100053c0, 0
  br i1 %v5_100053c8, label %dec_label_pc_100053d0, label %dec_label_pc_100053d4

dec_label_pc_100053d0:                            ; preds = %dec_label_pc_100053bc
  %v0_100053d0 = load i32, i32* %r18.global-to-local, align 4
  %v1_100053d0 = add i32 %v0_100053d0, 1
  store i32 %v1_100053d0, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_100053d4

dec_label_pc_100053d4:                            ; preds = %dec_label_pc_100053bc, %dec_label_pc_100053d0
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_100053d8thread-pre-split.backedge

dec_label_pc_10004ecc.lr.ph:                      ; preds = %dec_label_pc_10004ecc.lr.ph.lr.ph, %dec_label_pc_100053d8thread-pre-split.backedge
  br label %dec_label_pc_10004ecc

dec_label_pc_100053e4:                            ; preds = %dec_label_pc_10004e44, %dec_label_pc_10004e3c, %dec_label_pc_10004e34, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_100053f0

dec_label_pc_100053f0:                            ; preds = %dec_label_pc_100053d8thread-pre-split.backedge, %dec_label_pc_10004edc, %dec_label_pc_10004fb8, %dec_label_pc_1000507c, %dec_label_pc_10004e50, %dec_label_pc_100053e4
  %v0_100053f0 = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_100053f8 = inttoptr i32 %v0_100053f0 to i32*
  store i32 -1, i32* %v2_100053f8, align 4
  %v0_100053fc = load i32, i32* @r25, align 4
  store i32 %v0_100053fc, i32* @r20, align 4
  br label %dec_label_pc_10005400

dec_label_pc_10005400:                            ; preds = %dec_label_pc_1000519c, %dec_label_pc_100053f0
  %v0_10005400 = load i32, i32* @r19, align 4
  %v3_10005400 = icmp eq i32 %v0_10005400, -1
  br i1 %v3_10005400, label %dec_label_pc_10005410, label %dec_label_pc_10005408

dec_label_pc_10005408:                            ; preds = %dec_label_pc_10005400
  store i32 268456976, i32* @lr, align 4
  %v1_1000540c = call i32 @__libc_close(i32 %v0_10005400)
  br label %dec_label_pc_10005410

dec_label_pc_10005410:                            ; preds = %dec_label_pc_10005400, %dec_label_pc_10005408
  %v0_10005410 = load i32, i32* @r21, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268456988, i32* @lr, align 4
  %v1_10005418 = call i32 @free(i32 %v0_10005410)
  %v0_1000541c = load i32, i32* @r30, align 4
  store i32 268456996, i32* @lr, align 4
  %v1_10005420 = call i32 @free(i32 %v0_1000541c)
  %v0_10005424 = load i32, i32* @r26, align 4
  %v3_10005424 = icmp eq i32 %v0_10005424, -1
  br i1 %v3_10005424, label %dec_label_pc_10005470, label %dec_label_pc_1000542c

dec_label_pc_1000542c:                            ; preds = %dec_label_pc_10005410
  store i32 ptrtoint (i32* @global_var_1001c620.93 to i32), i32* %r29.global-to-local, align 4
  %v2_10005438 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_10005440

dec_label_pc_10005440:                            ; preds = %dec_label_pc_1000533c, %dec_label_pc_1000542c
  %storemerge68 = phi i32 [ %v2_10005438, %dec_label_pc_1000542c ], [ %v2_10004e70, %dec_label_pc_1000533c ]
  %v1_10005444.pre-phi = phi i32 [ %v2_10005438, %dec_label_pc_1000542c ], [ %v2_10004e70, %dec_label_pc_1000533c ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_10005444.pre-phi, i32* @r3, align 4
  %v0_10005448 = call i32 @__pthread_return_void()
  %v0_10005450 = call i32 @__pthread_return_0()
  %v0_10005458 = load i32, i32* @r26, align 4
  store i32 %v0_10005458, i32* @global_var_1001c3e8.94, align 4
  store i32 %v1_10005444.pre-phi, i32* @r3, align 4
  %v0_10005468 = load i32, i32* @r20, align 4
  %v1_10005468 = trunc i32 %v0_10005468 to i16
  store i16 %v1_10005468, i16* @global_var_1001c1fc.95, align 2
  %v0_1000546c = call i32 @__pthread_return_void()
  br label %dec_label_pc_10005470

dec_label_pc_10005470:                            ; preds = %dec_label_pc_10005410, %dec_label_pc_10005440
  store i32 %v0_10004df0, i32* %r0.global-to-local, align 4
  %v0_10005474 = load i32, i32* @r27, align 4
  ret i32 %v0_10005474

; uselistorder directives
  uselistorder i32 %v1_10005444.pre-phi, { 1, 0 }
  uselistorder i32 %v2_100053c0, { 1, 0 }
  uselistorder i32 %v0_10005334, { 1, 0 }
  uselistorder i32 %v1_10005310, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_100051dc, { 1, 0 }
  uselistorder i32 %v1_10005300, { 1, 0 }
  uselistorder i32 %v0_100052c8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000528c, { 1, 0 }
  uselistorder i32 %v0_10005218, { 2, 1, 0 }
  uselistorder i32 %v0_100051b4, { 1, 0 }
  uselistorder i32 %v2_100051a8, { 0, 2, 1, 3 }
  uselistorder i32 %v4_100050cc, { 1, 0 }
  uselistorder i32 %v1_10004fcc, { 1, 0 }
  uselistorder i32 %v1_10004fa0, { 1, 0 }
  uselistorder i32 %v1_10004f6c, { 1, 0 }
  uselistorder i32 %v1_10004f04, { 1, 0 }
  uselistorder i32 %v2_10004e70, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 15, 16, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7 }
  uselistorder i32* %r18.global-to-local, { 0, 2, 5, 1, 3, 4, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 14, 4, 5, 6, 9, 7, 8, 10, 11, 12, 13, 34, 15, 0, 33, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 2, 0 }
  uselistorder i32 (i32)* @inet_addr, { 1, 0 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0 }
  uselistorder i16* @global_var_1001c1fc.95, { 1, 0 }
  uselistorder label %dec_label_pc_10005470, { 1, 0 }
  uselistorder label %dec_label_pc_10005440, { 1, 0 }
  uselistorder label %dec_label_pc_10005410, { 1, 0 }
  uselistorder label %dec_label_pc_10005400, { 1, 0 }
  uselistorder label %dec_label_pc_100053f0, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_10004ecc.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_100053d4, { 1, 0 }
  uselistorder label %dec_label_pc_100053bc, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_100053d8thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005364, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000533c, { 1, 0 }
  uselistorder label %dec_label_pc_10005318, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_10005310, { 1, 0 }
  uselistorder label %dec_label_pc_100052fc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10005268, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100051a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000519c, { 1, 0 }
  uselistorder label %dec_label_pc_10005040, { 1, 0 }
  uselistorder label %dec_label_pc_10004fb8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004edc, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_100054a8 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_100054a8, i32* @r3, align 4
  %v0_100054b0 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_1001c200.54 to i32), i32* %r3.global-to-local, align 4
  %v0_100054b8 = call i32 @__pthread_return_0()
  store i32 %v0_100054b8, i32* %r3.global-to-local, align 4
  %v3_100054c0 = load i32, i32* @global_var_1001c3ec.56, align 4
  %v2_100054c4 = icmp sgt i32 %v3_100054c0, 0
  br i1 %v2_100054c4, label %dec_label_pc_1000573c, label %dec_label_pc_100054cc

dec_label_pc_100054cc:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1000abe8.108 to i32), i32* %r3.global-to-local, align 4
  store i32 268457188, i32* @lr, align 4
  %v3_100054e0 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1000abe8.108 to i32), i32 ptrtoint (i32* @global_var_1000abfc.107 to i32))
  store i32 %v3_100054e0, i32* %r3.global-to-local, align 4
  store i32 %v3_100054e0, i32* @r26, align 4
  %v3_100054e4 = icmp eq i32 %v3_100054e0, 0
  br i1 %v3_100054e4, label %dec_label_pc_100054ec, label %dec_label_pc_10005700.preheader

dec_label_pc_100054ec:                            ; preds = %dec_label_pc_100054cc
  %v0_100054f0 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1000ac00.109 to i32), i32* %r3.global-to-local, align 4
  store i32 268457212, i32* @lr, align 4
  %v3_100054f8 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1000ac00.109 to i32), i32 %v0_100054f0)
  store i32 %v3_100054f8, i32* %r3.global-to-local, align 4
  store i32 %v3_100054f8, i32* @r26, align 4
  %v3_100054fc = icmp eq i32 %v3_100054f8, 0
  br i1 %v3_100054fc, label %dec_label_pc_10005730, label %dec_label_pc_10005700.preheader

dec_label_pc_10005700.preheader:                  ; preds = %dec_label_pc_100054cc, %dec_label_pc_100054ec
  %v0_1000570c16 = phi i32 [ %v3_100054e0, %dec_label_pc_100054cc ], [ %v3_100054f8, %dec_label_pc_100054ec ]
  %v2_10005700 = ptrtoint i32* %stack_var_-164 to i32
  %v1_1000550c2 = bitcast i32* %stack_var_-164 to i8*
  %v3_100055f0 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_10005700

dec_label_pc_10005508:                            ; preds = %dec_label_pc_10005520
  %v1_10005508 = add i32 %v0_100055c89, 1
  store i32 %v1_10005508, i32* %r3.global-to-local, align 4
  %v1_1000550c = inttoptr i32 %v1_10005508 to i8*
  %v2_1000550c = load i8, i8* %v1_1000550c, align 1
  %v3_1000550c = zext i8 %v2_1000550c to i32
  store i32 %v3_1000550c, i32* %r11.global-to-local, align 4
  %v3_10005514 = icmp eq i8 %v2_1000550c, 0
  br i1 %v3_10005514, label %dec_label_pc_10005700.backedge, label %dec_label_pc_10005520

dec_label_pc_10005520:                            ; preds = %dec_label_pc_10005520.lr.ph, %dec_label_pc_10005508
  %v0_10005524.in = phi i32 [ %v3_1000550c4, %dec_label_pc_10005520.lr.ph ], [ %v3_1000550c, %dec_label_pc_10005508 ]
  %v0_10005538 = phi i32 [ %v3_1000550c4, %dec_label_pc_10005520.lr.ph ], [ %v3_1000550c, %dec_label_pc_10005508 ]
  %v0_100055c89 = phi i32 [ %v2_10005700, %dec_label_pc_10005520.lr.ph ], [ %v1_10005508, %dec_label_pc_10005508 ]
  %v0_10005524 = mul nuw nsw i32 %v0_10005524.in, 2
  %v2_10005524 = add i32 %v0_10005524, %v3_10005520.pre
  %v3_10005524 = inttoptr i32 %v2_10005524 to i16*
  %v4_10005524 = load i16, i16* %v3_10005524, align 2
  %v1_10005528 = and i16 %v4_10005524, 32
  %v3_10005528 = icmp eq i16 %v1_10005528, 0
  br i1 %v3_10005528, label %dec_label_pc_10005530, label %dec_label_pc_10005508

dec_label_pc_10005530:                            ; preds = %dec_label_pc_10005520
  %v3_10005530 = icmp eq i32 %v0_10005538, 10
  br i1 %v3_10005530, label %dec_label_pc_10005700.backedge, label %dec_label_pc_10005538

dec_label_pc_10005700.backedge:                   ; preds = %dec_label_pc_10005508, %dec_label_pc_100056b4, %dec_label_pc_100056bc, %dec_label_pc_100056f4, %dec_label_pc_1000550c.preheader, %dec_label_pc_10005530, %dec_label_pc_10005538, %dec_label_pc_1000565c
  %v0_1000570c.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_10005700

dec_label_pc_10005538:                            ; preds = %dec_label_pc_10005530
  %v3_10005538 = icmp eq i32 %v0_10005538, 35
  br i1 %v3_10005538, label %dec_label_pc_10005700.backedge, label %dec_label_pc_10005540

dec_label_pc_10005540:                            ; preds = %dec_label_pc_10005538
  store i32 0, i32* @r27, align 4
  store i32 %v2_100054a8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_100055c810 = inttoptr i32 %v0_100055c89 to i8*
  %v2_100055c811 = load i8, i8* %v1_100055c810, align 1
  %v3_100055cc14 = icmp eq i8 %v2_100055c811, 0
  br i1 %v3_100055cc14, label %dec_label_pc_100055dc, label %dec_label_pc_100055d4

dec_label_pc_10005554:                            ; preds = %dec_label_pc_100055d4
  %v1_10005554 = mul i32 %v0_10005554, 4
  %v3_10005558 = load i32, i32* @global_var_1001c35c, align 4
  store i32 %v3_10005558, i32* %r11.global-to-local, align 4
  %v1_1000555c = load i32, i32* %r6.global-to-local, align 4
  %v2_1000555c = add i32 %v1_1000555c, %v1_10005554
  %v2_10005560 = add i32 %v2_1000555c, 16
  %v3_10005560 = inttoptr i32 %v2_10005560 to i32*
  store i32 %v0_10005560, i32* %v3_10005560, align 4
  %v0_1000556c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000556c

dec_label_pc_10005568:                            ; preds = %dec_label_pc_10005580
  %v1_10005568 = add i32 %v0_10005568, 1
  store i32 %v1_10005568, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000556c

dec_label_pc_1000556c:                            ; preds = %dec_label_pc_10005554, %dec_label_pc_10005568
  %v0_10005568 = phi i32 [ %v0_1000556c.pre, %dec_label_pc_10005554 ], [ %v1_10005568, %dec_label_pc_10005568 ]
  %v1_1000556c = inttoptr i32 %v0_10005568 to i8*
  %v2_1000556c = load i8, i8* %v1_1000556c, align 1
  %v3_10005570 = icmp eq i8 %v2_1000556c, 0
  br i1 %v3_10005570, label %dec_label_pc_1000559c, label %dec_label_pc_10005580

dec_label_pc_10005580:                            ; preds = %dec_label_pc_1000556c
  %v3_10005578 = icmp eq i8 %v2_1000556c, 10
  %v3_1000556c = zext i8 %v2_1000556c to i32
  %v1_10005574 = mul nuw nsw i32 %v3_1000556c, 2
  %v1_10005580 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005580 = add i32 %v1_10005580, %v1_10005574
  %v3_10005580 = inttoptr i32 %v2_10005580 to i16*
  %v4_10005580 = load i16, i16* %v3_10005580, align 2
  %v1_10005584 = and i16 %v4_10005580, 32
  %v3_10005584.not = icmp ne i16 %v1_10005584, 0
  %brmerge = or i1 %v3_10005578, %v3_10005584.not
  br i1 %brmerge, label %dec_label_pc_1000559c, label %dec_label_pc_10005568

dec_label_pc_10005594:                            ; preds = %dec_label_pc_100055b0
  %v0_10005594 = load i32, i32* %r7.global-to-local, align 4
  %v1_10005594 = trunc i32 %v0_10005594 to i8
  store i8 %v1_10005594, i8* %v1_1000559c, align 1
  %v0_10005598 = load i32, i32* %r3.global-to-local, align 4
  %v1_10005598 = add i32 %v0_10005598, 1
  store i32 %v1_10005598, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000559c

dec_label_pc_1000559c:                            ; preds = %dec_label_pc_10005580, %dec_label_pc_1000556c, %dec_label_pc_10005594
  %v0_100055c8 = phi i32 [ %v1_10005598, %dec_label_pc_10005594 ], [ %v0_10005568, %dec_label_pc_1000556c ], [ %v0_10005568, %dec_label_pc_10005580 ]
  %v1_1000559c = inttoptr i32 %v0_100055c8 to i8*
  %v2_1000559c = load i8, i8* %v1_1000559c, align 1
  %v3_1000559c = zext i8 %v2_1000559c to i32
  %v3_100055a0 = icmp eq i8 %v2_1000559c, 0
  %v1_100055a4 = mul nuw nsw i32 %v3_1000559c, 2
  store i32 %v1_100055a4, i32* %r11.global-to-local, align 4
  br i1 %v3_100055a0, label %dec_label_pc_100055c4, label %dec_label_pc_100055b0

dec_label_pc_100055b0:                            ; preds = %dec_label_pc_1000559c
  %v3_100055a8 = icmp eq i8 %v2_1000559c, 10
  %v3_100055b0 = load i32, i32* @global_var_1001c35c, align 4
  %v2_100055b4 = add i32 %v3_100055b0, %v1_100055a4
  %v3_100055b4 = inttoptr i32 %v2_100055b4 to i16*
  %v4_100055b4 = load i16, i16* %v3_100055b4, align 2
  %v1_100055b8 = and i16 %v4_100055b4, 32
  %v3_100055b8.not = icmp ne i16 %v1_100055b8, 0
  %brmerge27 = or i1 %v3_100055a8, %v3_100055b8.not
  br i1 %brmerge27, label %dec_label_pc_10005594, label %dec_label_pc_100055c4

dec_label_pc_100055c4:                            ; preds = %dec_label_pc_100055b0, %dec_label_pc_1000559c
  %v0_100055c4 = load i32, i32* @r27, align 4
  %v1_100055c4 = add i32 %v0_100055c4, 1
  store i32 %v1_100055c4, i32* @r27, align 4
  %v2_100055c8 = load i8, i8* %v1_1000559c, align 1
  %v3_100055cc = icmp eq i8 %v2_100055c8, 0
  br i1 %v3_100055cc, label %dec_label_pc_100055dc, label %dec_label_pc_100055d4

dec_label_pc_100055d4:                            ; preds = %dec_label_pc_10005540, %dec_label_pc_100055c4
  %v0_10005560 = phi i32 [ %v0_100055c8, %dec_label_pc_100055c4 ], [ %v0_100055c89, %dec_label_pc_10005540 ]
  %v0_10005554 = phi i32 [ %v1_100055c4, %dec_label_pc_100055c4 ], [ 0, %dec_label_pc_10005540 ]
  %tmp33 = icmp slt i32 %v0_10005554, 5
  br i1 %tmp33, label %dec_label_pc_10005554, label %dec_label_pc_100055dc

dec_label_pc_100055dc:                            ; preds = %dec_label_pc_100055c4, %dec_label_pc_100055d4, %dec_label_pc_10005540
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1000ac18.110 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_100055f0 = call i32 @__GI_strcoll(i8* %v3_100055f0, i32 ptrtoint ([11 x i8]* @global_var_1000ac18.110 to i32))
  store i32 %v4_100055f0, i32* %r3.global-to-local, align 4
  %v3_100055f4 = icmp eq i32 %v4_100055f0, 0
  br i1 %v3_100055f4, label %dec_label_pc_10005620, label %dec_label_pc_10005644

dec_label_pc_10005600:                            ; preds = %dec_label_pc_10005638
  %v1_10005600 = add i32 %v2_10005628, 24
  %v2_10005600 = inttoptr i32 %v1_10005600 to i32*
  %v3_10005600 = load i32, i32* %v2_10005600, align 4
  store i32 %v3_10005600, i32* %r3.global-to-local, align 4
  store i32 268457480, i32* @lr, align 4
  %v1_10005604 = call i32 @__GI_strdup(i32 %v3_10005600)
  store i32 %v1_10005604, i32* %r3.global-to-local, align 4
  %v0_1000560c = load i32, i32* @r29, align 4
  %v1_1000560c = add i32 %v0_1000560c, 1
  store i32 %v1_1000560c, i32* %r11.global-to-local, align 4
  %v1_10005610 = mul i32 %v0_1000560c, 4
  store i32 %v1_1000560c, i32* @global_var_1001c3ec.56, align 4
  %v3_1000561c = add i32 %v1_10005610, ptrtoint (i32* @global_var_1001e6e0.57 to i32)
  %v4_1000561c = inttoptr i32 %v3_1000561c to i32*
  store i32 %v1_10005604, i32* %v4_1000561c, align 4
  br label %dec_label_pc_10005620

dec_label_pc_10005620:                            ; preds = %dec_label_pc_100055dc, %dec_label_pc_10005600
  %v0_10005620 = load i32, i32* @r31, align 4
  %v1_10005620 = load i32, i32* @r27, align 4
  %v2_10005620 = icmp slt i32 %v0_10005620, %v1_10005620
  %v1_10005624 = mul i32 %v0_10005620, 4
  %v0_10005628 = load i32, i32* @r1, align 4
  %v2_10005628 = add i32 %v0_10005628, %v1_10005624
  br i1 %v2_10005620, label %dec_label_pc_10005638, label %dec_label_pc_10005644

dec_label_pc_10005638:                            ; preds = %dec_label_pc_10005620
  %v3_10005638 = load i32, i32* @global_var_1001c3ec.56, align 4
  %tmp35 = icmp slt i32 %v3_10005638, 3
  br i1 %tmp35, label %dec_label_pc_10005600, label %dec_label_pc_10005644

dec_label_pc_10005644:                            ; preds = %dec_label_pc_10005638, %dec_label_pc_10005620, %dec_label_pc_100055dc
  %v0_10005648 = load i32, i32* @r30, align 4
  store i32 %v0_10005648, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000ac24.111 to i32), i32* @r4, align 4
  %v3_10005650 = inttoptr i32 %v0_10005648 to i8*
  %v4_10005650 = call i32 @__GI_strcoll(i8* %v3_10005650, i32 ptrtoint ([7 x i8]* @global_var_1000ac24.111 to i32))
  store i32 %v4_10005650, i32* %r3.global-to-local, align 4
  %v3_10005654 = icmp eq i32 %v4_10005650, 0
  br i1 %v3_10005654, label %dec_label_pc_10005694.preheader, label %dec_label_pc_1000565c

dec_label_pc_1000565c:                            ; preds = %dec_label_pc_10005644
  %v0_10005660 = load i32, i32* @r30, align 4
  store i32 %v0_10005660, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000ac2c.112 to i32), i32* @r4, align 4
  %v3_10005668 = inttoptr i32 %v0_10005660 to i8*
  %v4_10005668 = call i32 @__GI_strcoll(i8* %v3_10005668, i32 ptrtoint ([7 x i8]* @global_var_1000ac2c.112 to i32))
  store i32 %v4_10005668, i32* %r3.global-to-local, align 4
  %v3_1000566c = icmp eq i32 %v4_10005668, 0
  br i1 %v3_1000566c, label %dec_label_pc_10005694.preheader, label %dec_label_pc_10005700.backedge

dec_label_pc_10005694.preheader:                  ; preds = %dec_label_pc_10005644, %dec_label_pc_1000565c
  store i32 ptrtoint (i32* @global_var_1001e6d0.99 to i32), i32* @r31, align 4
  %v3_100056a041 = load i32, i32* @global_var_1001c3f0.97, align 4
  %v2_100056a443 = icmp sgt i32 %v3_100056a041, 0
  %v1_100056a845 = add i32 %v3_100056a041, -1
  %v1_100056ac46 = mul i32 %v1_100056a845, 4
  store i32 %v1_100056ac46, i32* %r11.global-to-local, align 4
  br i1 %v2_100056a443, label %dec_label_pc_10005678, label %dec_label_pc_100056b4

dec_label_pc_10005678:                            ; preds = %dec_label_pc_10005694.preheader, %dec_label_pc_10005678
  %v1_100056ac48 = phi i32 [ %v1_100056ac, %dec_label_pc_10005678 ], [ %v1_100056ac46, %dec_label_pc_10005694.preheader ]
  %v1_100056a847 = phi i32 [ %v1_100056a8, %dec_label_pc_10005678 ], [ %v1_100056a845, %dec_label_pc_10005694.preheader ]
  %v2_10005678 = add i32 %v1_100056ac48, ptrtoint (i32* @global_var_1001e6d0.99 to i32)
  %v3_10005678 = inttoptr i32 %v2_10005678 to i32*
  %v4_10005678 = load i32, i32* %v3_10005678, align 4
  store i32 %v4_10005678, i32* %r3.global-to-local, align 4
  store i32 %v1_100056a847, i32* @global_var_1001c3f0.97, align 4
  store i32 268457604, i32* @lr, align 4
  %v1_10005680 = call i32 @free(i32 %v4_10005678)
  store i32 %v1_10005680, i32* %r3.global-to-local, align 4
  %v3_10005684 = load i32, i32* @global_var_1001c3f0.97, align 4
  %v1_1000568c = mul i32 %v3_10005684, 4
  %v1_10005690 = load i32, i32* @r31, align 4
  %v3_10005690 = add i32 %v1_10005690, %v1_1000568c
  %v4_10005690 = inttoptr i32 %v3_10005690 to i32*
  store i32 0, i32* %v4_10005690, align 4
  store i32 ptrtoint (i32* @global_var_1001e6d0.99 to i32), i32* @r31, align 4
  %v3_100056a0 = load i32, i32* @global_var_1001c3f0.97, align 4
  %v2_100056a4 = icmp sgt i32 %v3_100056a0, 0
  %v1_100056a8 = add i32 %v3_100056a0, -1
  %v1_100056ac = mul i32 %v1_100056a8, 4
  store i32 %v1_100056ac, i32* %r11.global-to-local, align 4
  br i1 %v2_100056a4, label %dec_label_pc_10005678, label %dec_label_pc_100056b4

dec_label_pc_100056b4:                            ; preds = %dec_label_pc_10005678, %dec_label_pc_10005694.preheader
  %v3_100056f459 = phi i32 [ %v3_100056a041, %dec_label_pc_10005694.preheader ], [ %v3_100056a0, %dec_label_pc_10005678 ]
  %v1_100056dc49 = load i32, i32* @r27, align 4
  %v2_100056dc50 = icmp sgt i32 %v1_100056dc49, 1
  %v0_100056e453 = load i32, i32* @r1, align 4
  %v2_100056e454 = add i32 %v0_100056e453, 4
  br i1 %v2_100056dc50, label %dec_label_pc_100056f4, label %dec_label_pc_10005700.backedge

dec_label_pc_100056bc:                            ; preds = %dec_label_pc_100056f4
  %v1_100056bc = add i32 %v2_100056e455, 24
  %v2_100056bc = inttoptr i32 %v1_100056bc to i32*
  %v3_100056bc = load i32, i32* %v2_100056bc, align 4
  store i32 %v3_100056bc, i32* %r3.global-to-local, align 4
  store i32 268457668, i32* @lr, align 4
  %v1_100056c0 = call i32 @__GI_strdup(i32 %v3_100056bc)
  store i32 %v1_100056c0, i32* %r3.global-to-local, align 4
  %v0_100056c8 = load i32, i32* @r29, align 4
  %v1_100056c8 = add i32 %v0_100056c8, 1
  store i32 %v1_100056c8, i32* %r11.global-to-local, align 4
  %v1_100056cc = mul i32 %v0_100056c8, 4
  store i32 %v1_100056c8, i32* @global_var_1001c3f0.97, align 4
  %v3_100056d8 = add i32 %v1_100056cc, ptrtoint (i32* @global_var_1001e6d0.99 to i32)
  %v4_100056d8 = inttoptr i32 %v3_100056d8 to i32*
  store i32 %v1_100056c0, i32* %v4_100056d8, align 4
  %v0_100056dc.pre = load i32, i32* @r31, align 4
  %v1_100056dc = load i32, i32* @r27, align 4
  %v2_100056dc = icmp slt i32 %v0_100056dc.pre, %v1_100056dc
  br i1 %v2_100056dc, label %dec_label_pc_100056bc.dec_label_pc_100056f4_crit_edge, label %dec_label_pc_10005700.backedge

dec_label_pc_100056bc.dec_label_pc_100056f4_crit_edge: ; preds = %dec_label_pc_100056bc
  %v0_100056e4 = load i32, i32* @r1, align 4
  %v1_100056e0 = mul i32 %v0_100056dc.pre, 4
  %v2_100056e4 = add i32 %v0_100056e4, %v1_100056e0
  %v3_100056f4.pre = load i32, i32* @global_var_1001c3f0.97, align 4
  br label %dec_label_pc_100056f4

dec_label_pc_100056f4:                            ; preds = %dec_label_pc_100056b4, %dec_label_pc_100056bc.dec_label_pc_100056f4_crit_edge
  %v3_100056f4 = phi i32 [ %v3_100056f4.pre, %dec_label_pc_100056bc.dec_label_pc_100056f4_crit_edge ], [ %v3_100056f459, %dec_label_pc_100056b4 ]
  %v2_100056e455 = phi i32 [ %v2_100056e4, %dec_label_pc_100056bc.dec_label_pc_100056f4_crit_edge ], [ %v2_100056e454, %dec_label_pc_100056b4 ]
  %tmp37 = icmp slt i32 %v3_100056f4, 4
  br i1 %tmp37, label %dec_label_pc_100056bc, label %dec_label_pc_10005700.backedge

dec_label_pc_10005700:                            ; preds = %dec_label_pc_10005700.backedge, %dec_label_pc_10005700.preheader
  %v0_1000570c = phi i32 [ %v0_1000570c.pre, %dec_label_pc_10005700.backedge ], [ %v0_1000570c16, %dec_label_pc_10005700.preheader ]
  store i32 %v2_10005700, i32* %r3.global-to-local, align 4
  store i32 268457748, i32* @lr, align 4
  %v3_10005710 = call i32 @fgets(i32 %v2_10005700, i32 128, i32 %v0_1000570c)
  store i32 %v3_10005710, i32* %r3.global-to-local, align 4
  %v3_10005714 = icmp eq i32 %v3_10005710, 0
  br i1 %v3_10005714, label %dec_label_pc_10005724, label %dec_label_pc_1000550c.preheader

dec_label_pc_1000550c.preheader:                  ; preds = %dec_label_pc_10005700
  store i32 %v2_10005700, i32* %r3.global-to-local, align 4
  %v2_1000550c3 = load i8, i8* %v1_1000550c2, align 4
  %v3_1000550c4 = zext i8 %v2_1000550c3 to i32
  store i32 %v3_1000550c4, i32* %r11.global-to-local, align 4
  %v3_100055146 = icmp eq i8 %v2_1000550c3, 0
  br i1 %v3_100055146, label %dec_label_pc_10005700.backedge, label %dec_label_pc_10005520.lr.ph

dec_label_pc_10005520.lr.ph:                      ; preds = %dec_label_pc_1000550c.preheader
  %v3_10005520.pre = load i32, i32* @global_var_1001c35c, align 4
  br label %dec_label_pc_10005520

dec_label_pc_10005724:                            ; preds = %dec_label_pc_10005700
  %v0_10005724 = load i32, i32* @r26, align 4
  store i32 %v0_10005724, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000572c.113 to i32), i32* @lr, align 4
  %v1_10005728 = inttoptr i32 %v0_10005724 to i16*
  %v2_10005728 = call i32 @__GI_fclose(i16* %v1_10005728)
  store i32 %v2_10005728, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000573c

dec_label_pc_10005730:                            ; preds = %dec_label_pc_100054ec
  %v0_10005730 = call i32 @__GI___h_errno_location()
  store i32 %v0_10005730, i32* %r3.global-to-local, align 4
  %v2_10005738 = inttoptr i32 %v0_10005730 to i32*
  store i32 3, i32* %v2_10005738, align 4
  br label %dec_label_pc_1000573c

dec_label_pc_1000573c:                            ; preds = %entry, %dec_label_pc_10005724, %dec_label_pc_10005730
  store i32 %v2_100054a8, i32* @r3, align 4
  %v0_10005744 = call i32 @__pthread_return_void()
  store i32 %v0_10005744, i32* %r3.global-to-local, align 4
  ret i32 %v0_10005744

; uselistorder directives
  uselistorder i32 %v3_1000550c4, { 2, 0, 1 }
  uselistorder i32 %v1_100056ac46, { 1, 0 }
  uselistorder i32 %v1_100056a845, { 1, 0 }
  uselistorder i32 %v0_10005554, { 1, 0 }
  uselistorder i32 %v1_100055a4, { 1, 0 }
  uselistorder i8* %v1_1000559c, { 0, 2, 1 }
  uselistorder i8 %v2_1000556c, { 2, 0, 1 }
  uselistorder i32 %v0_10005568, { 0, 1, 3, 2 }
  uselistorder i32 %v3_1000550c, { 1, 0, 2 }
  uselistorder i32 %v1_10005508, { 0, 2, 1 }
  uselistorder i32 %v2_10005700, { 1, 3, 2, 0 }
  uselistorder i32 %v2_100054a8, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 29, 19, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 28, 18, 27, 0, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r11.global-to-local, { 8, 0, 1, 7, 2, 3, 4, 5, 6 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32* @global_var_1001c3f0.97, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_1001e6d0.99 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1001e6e0.57 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c200.54 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000573c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100056f4, { 1, 0 }
  uselistorder label %dec_label_pc_10005678, { 1, 0 }
  uselistorder label %dec_label_pc_10005694.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10005620, { 1, 0 }
  uselistorder label %dec_label_pc_100055dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100055d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000559c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000556c, { 1, 0 }
  uselistorder label %dec_label_pc_10005700.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_10005700.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_10005760 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268457888, i32* @lr, align 4
  %v9_1000579c = inttoptr i32 %arg3 to i32*
  %v10_1000579c = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_1000579c, i32 %arg4, i32 %arg5, i32 %v4_10005760, i32 %arg7)
  ret i32 %v10_1000579c
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_100057b8 = load i32, i32* @lr, align 4
  store i32 %v0_100057b8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_100057c4 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_100057d4 = add i32 %tmp, 4
  store i32 %v1_100057d4, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_100057dc = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_100057dc, i32* @r3, align 4
  br i1 %v3_100057c4, label %dec_label_pc_10005804, label %dec_label_pc_100057e4

dec_label_pc_100057e4:                            ; preds = %entry
  %v2_100057e4 = load i32, i32* %arg2, align 4
  store i32 %v2_100057e4, i32* %r0.global-to-local, align 4
  store i32 268457968, i32* @lr, align 4
  %v0_100057ec = call i32 @memcpy()
  %v0_100057f0 = load i32, i32* @r31, align 4
  %v1_100057f0 = add i32 %v0_100057f0, 132
  %v2_100057f0 = inttoptr i32 %v1_100057f0 to i32*
  %v3_100057f0 = load i32, i32* %v2_100057f0, align 4
  store i32 %v3_100057f0, i32* %r0.global-to-local, align 4
  %v1_100057fc = add i32 %v0_100057f0, 136
  %v2_100057fc = inttoptr i32 %v1_100057fc to i32*
  %v3_100057fc = load i32, i32* %v2_100057fc, align 4
  store i32 %v3_100057fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10005804

dec_label_pc_10005804:                            ; preds = %entry, %dec_label_pc_100057e4
  store i32 268458020, i32* @lr, align 4
  %v0_10005820 = call i32 @__syscall_rt_sigaction()
  %v0_10005824 = load i32, i32* %r30.global-to-local, align 4
  %v3_10005824 = icmp eq i32 %v0_10005824, 0
  store i32 %v0_10005820, i32* @r31, align 4
  br i1 %v3_10005824, label %dec_label_pc_10005860, label %dec_label_pc_10005834

dec_label_pc_10005834:                            ; preds = %dec_label_pc_10005804
  %v1_1000582c = icmp slt i32 %v0_10005820, 0
  %v1_10005834 = add i32 %v0_10005824, 4
  store i32 %v1_10005834, i32* @r3, align 4
  %v2_10005838 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_10005838, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000582c, label %dec_label_pc_10005860, label %dec_label_pc_10005844

dec_label_pc_10005844:                            ; preds = %dec_label_pc_10005834
  %v3_10005844 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_10005844, i32* %r0.global-to-local, align 4
  %v2_10005848 = inttoptr i32 %v0_10005824 to i32*
  store i32 %v3_10005844, i32* %v2_10005848, align 4
  store i32 268458064, i32* @lr, align 4
  %v0_1000584c = call i32 @memcpy()
  %v1_10005858 = load i32, i32* %r30.global-to-local, align 4
  %v2_10005858 = add i32 %v1_10005858, 136
  %v3_10005858 = inttoptr i32 %v2_10005858 to i32*
  %v0_1000585c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000585c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000585c = add i32 %v1_1000585c, 132
  %v3_1000585c = inttoptr i32 %v2_1000585c to i32*
  store i32 %v0_1000585c, i32* %v3_1000585c, align 4
  %v0_10005864.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005860

dec_label_pc_10005860:                            ; preds = %dec_label_pc_10005834, %dec_label_pc_10005804, %dec_label_pc_10005844
  %v0_10005864 = phi i32 [ %v0_10005820, %dec_label_pc_10005834 ], [ %v0_10005820, %dec_label_pc_10005804 ], [ %v0_10005864.pre, %dec_label_pc_10005844 ]
  store i32 %v0_100057b8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10005864

; uselistorder directives
  uselistorder i32 %v0_10005820, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10005860, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005804, { 1, 0 }
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_100058ac.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_10005890 = call i32 @__pthread_return_0()
  %v2_10005898 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10005898, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_100058b034 = add i32 %v2_10005898, 124
  %v4_100058b035 = inttoptr i32 %v3_100058b034 to i32*
  store i32 0, i32* %v4_100058b035, align 4
  %v0_100058b436 = load i32, i32* %r9.global-to-local, align 4
  %v1_100058b437 = add i32 %v0_100058b436, -1
  store i32 %v1_100058b437, i32* %r9.global-to-local, align 4
  %v0_100058b838 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100058b839 = add i32 %v0_100058b838, -1
  store i32 %v1_100058b839, i32* %ctr.global-to-local, align 4
  %v2_100058b840 = icmp eq i32 %v1_100058b839, 0
  br i1 %v2_100058b840, label %dec_label_pc_100058bc, label %dec_label_pc_100058ac.dec_label_pc_100058ac_crit_edge

dec_label_pc_100058ac.dec_label_pc_100058ac_crit_edge: ; preds = %dec_label_pc_100058ac.lr.ph, %dec_label_pc_100058ac.dec_label_pc_100058ac_crit_edge
  %v1_100058b441 = phi i32 [ %v1_100058b4, %dec_label_pc_100058ac.dec_label_pc_100058ac_crit_edge ], [ %v1_100058b437, %dec_label_pc_100058ac.lr.ph ]
  %v0_100058b0.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_100058b0.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_100058ac = mul i32 %v1_100058b441, 4
  %v3_100058b0 = add i32 %v1_100058ac, %v1_100058b0.pre
  %v4_100058b0 = inttoptr i32 %v3_100058b0 to i32*
  store i32 %v0_100058b0.pre, i32* %v4_100058b0, align 4
  %v0_100058b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100058b4 = add i32 %v0_100058b4, -1
  store i32 %v1_100058b4, i32* %r9.global-to-local, align 4
  %v0_100058b8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100058b8 = add i32 %v0_100058b8, -1
  store i32 %v1_100058b8, i32* %ctr.global-to-local, align 4
  %v2_100058b8 = icmp eq i32 %v1_100058b8, 0
  br i1 %v2_100058b8, label %dec_label_pc_100058bc, label %dec_label_pc_100058ac.dec_label_pc_100058ac_crit_edge

dec_label_pc_100058bc:                            ; preds = %dec_label_pc_100058ac.dec_label_pc_100058ac_crit_edge, %dec_label_pc_100058ac.lr.ph
  %v1_100058b4.lcssa = phi i32 [ %v1_100058b437, %dec_label_pc_100058ac.lr.ph ], [ %v1_100058b4, %dec_label_pc_100058ac.dec_label_pc_100058ac_crit_edge ]
  %v3_100058c4 = call i32 @__sigaddset(i32 %v2_10005898, i32 6, i32 %v1_100058b4.lcssa)
  %v3_100058c8 = icmp eq i32 %v3_100058c4, 0
  br i1 %v3_100058c8, label %dec_label_pc_100058d0, label %dec_label_pc_100058e0

dec_label_pc_100058d0:                            ; preds = %dec_label_pc_100058bc
  store i32 268458208, i32* @lr, align 4
  %v3_100058dc = call i32 @__GI_sigprocmask(i32 1, i32 %v2_10005898, i32 0)
  br label %dec_label_pc_100058e0

dec_label_pc_100058e0:                            ; preds = %dec_label_pc_100058bc, %dec_label_pc_100058d0
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100058e4 = load i32, i32* @global_var_1001c3f4.117, align 4
  %v3_100058e8 = icmp eq i32 %v3_100058e4, 0
  br i1 %v3_100058e8, label %dec_label_pc_100058f0, label %dec_label_pc_10005918

dec_label_pc_100058f0:                            ; preds = %dec_label_pc_100058e0
  store i32 1, i32* @global_var_1001c3f4.117, align 4
  br label %dec_label_pc_100058f8

dec_label_pc_100058f8:                            ; preds = %dec_label_pc_10005974, %dec_label_pc_100058f0
  store i32 ptrtoint (i32* @global_var_1001c218.115 to i32), i32* %r29.global-to-local, align 4
  %v0_10005904 = call i32 @__pthread_return_0()
  store i32 268458256, i32* @lr, align 4
  %v1_1000590c = call i32 @__raise(i32 6)
  %v0_10005914 = call i32 @__pthread_return_0()
  %v3_1000591c.pre = load i32, i32* @global_var_1001c3f4.117, align 4
  br label %dec_label_pc_10005918

dec_label_pc_10005918:                            ; preds = %dec_label_pc_100058e0, %dec_label_pc_100058f8
  %v0_10005990 = phi i32 [ %v3_100058e4, %dec_label_pc_100058e0 ], [ %v3_1000591c.pre, %dec_label_pc_100058f8 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005920 = icmp eq i32 %v0_10005990, 1
  br i1 %v3_10005920, label %dec_label_pc_10005960.lr.ph, label %dec_label_pc_10005990

dec_label_pc_10005960.lr.ph:                      ; preds = %dec_label_pc_10005918
  %v2_1000592c = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001c3f4.117, align 4
  store i32 ptrtoint (i32* @global_var_10005940.119 to i32), i32* @lr, align 4
  %v3_1000593c = call i32 @__GI_memset(i32 %v2_1000592c, i32 0, i32 140)
  store i32 %v2_10005898, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_100058b034, i32* %r9.global-to-local, align 4
  %v2_1000596826 = add i32 %v2_10005898, 256
  %v3_1000596827 = inttoptr i32 %v2_1000596826 to i32*
  store i32 -1, i32* %v3_1000596827, align 4
  %v0_1000596c28 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000596c29 = add i32 %v0_1000596c28, -1
  store i32 %v1_1000596c29, i32* %r11.global-to-local, align 4
  %v0_1000597030 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000597031 = add i32 %v0_1000597030, -1
  store i32 %v1_1000597031, i32* %ctr.global-to-local, align 4
  %v2_1000597032 = icmp eq i32 %v1_1000597031, 0
  br i1 %v2_1000597032, label %dec_label_pc_10005974, label %dec_label_pc_10005960.dec_label_pc_10005960_crit_edge

dec_label_pc_10005960.dec_label_pc_10005960_crit_edge: ; preds = %dec_label_pc_10005960.lr.ph, %dec_label_pc_10005960.dec_label_pc_10005960_crit_edge
  %v1_1000596c33 = phi i32 [ %v1_1000596c, %dec_label_pc_10005960.dec_label_pc_10005960_crit_edge ], [ %v1_1000596c29, %dec_label_pc_10005960.lr.ph ]
  %v1_10005964.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10005968.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10005960 = mul i32 %v1_1000596c33, 4
  %v2_10005964 = add i32 %v1_10005960, %v1_10005964.pre
  store i32 %v2_10005964, i32* %r9.global-to-local, align 4
  %v2_10005968 = add i32 %v2_10005964, 132
  %v3_10005968 = inttoptr i32 %v2_10005968 to i32*
  store i32 %v0_10005968.pre, i32* %v3_10005968, align 4
  %v0_1000596c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000596c = add i32 %v0_1000596c, -1
  store i32 %v1_1000596c, i32* %r11.global-to-local, align 4
  %v0_10005970 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005970 = add i32 %v0_10005970, -1
  store i32 %v1_10005970, i32* %ctr.global-to-local, align 4
  %v2_10005970 = icmp eq i32 %v1_10005970, 0
  br i1 %v2_10005970, label %dec_label_pc_10005974, label %dec_label_pc_10005960.dec_label_pc_10005960_crit_edge

dec_label_pc_10005974:                            ; preds = %dec_label_pc_10005960.dec_label_pc_10005960_crit_edge, %dec_label_pc_10005960.lr.ph
  store i32 268458380, i32* @lr, align 4
  %v4_10005988 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_100058f8

dec_label_pc_10005990:                            ; preds = %dec_label_pc_10005918
  %v3_10005990 = icmp eq i32 %v0_10005990, 2
  br i1 %v3_10005990, label %dec_label_pc_10005998, label %dec_label_pc_100059a4

dec_label_pc_10005998:                            ; preds = %dec_label_pc_10005990
  store i32 3, i32* @global_var_1001c3f4.117, align 4
  br label %dec_label_pc_100059a4

dec_label_pc_100059a4:                            ; preds = %dec_label_pc_10005990, %dec_label_pc_10005998
  %v3_100059a4 = phi i32 [ %v0_10005990, %dec_label_pc_10005990 ], [ 3, %dec_label_pc_10005998 ]
  %v1_100059ac = icmp ne i32 %v3_100059a4, 3
  call void @__pseudo_cond_branch(i1 %v1_100059ac, i32 268458432)
  store i32 4, i32* @global_var_1001c3f4.117, align 4
  %v1_100059bc = call i32 @__GI__exit(i32 127)
  ret i32 %v1_100059bc

; uselistorder directives
  uselistorder i32 %v1_10005970, { 1, 0 }
  uselistorder i32 %v1_1000596c, { 1, 0 }
  uselistorder i32 %v1_100058b8, { 1, 0 }
  uselistorder i32 %v1_100058b4, { 0, 2, 1 }
  uselistorder i32 %v2_10005898, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 2, 0, 3, 4, 6, 5, 1, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0, 5, 6, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 0, 6, 7, 5, 4, 1, 8, 9 }
  uselistorder i32 (i32)* @__GI__exit, { 1, 0, 4, 3, 2 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 1, 0 }
  uselistorder i32 132, { 2, 0, 1 }
  uselistorder i32* @global_var_1001c3f4.117, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_100059a4, { 1, 0 }
  uselistorder label %dec_label_pc_10005960.dec_label_pc_10005960_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005918, { 1, 0 }
  uselistorder label %dec_label_pc_100058e0, { 1, 0 }
  uselistorder label %dec_label_pc_100058ac.dec_label_pc_100058ac_crit_edge, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100059c8 = add i32 %arg1, 28
  %v2_100059c8 = inttoptr i32 %v1_100059c8 to i32*
  %v3_100059c8 = load i32, i32* %v2_100059c8, align 4
  store i32 %v3_100059c8, i32* @global_var_1001c3f8.120, align 4
  %v1_100059d8 = add i32 %arg1, 44
  %v2_100059d8 = inttoptr i32 %v1_100059d8 to i32*
  %v3_100059d8 = load i32, i32* %v2_100059d8, align 4
  store i32 %v3_100059d8, i32* @global_var_1001c3fc.121, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1001c400.90, align 4
  %v0_10005a0c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_10005a0c)
  %v1_10005a14 = call i32 @__syscall_error(i32 12)
  ret i32 %v1_10005a14

; uselistorder directives
  uselistorder i32* @global_var_1001c400.90, { 1, 0, 2 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10005a30 = call i32 @__asm_mfcr()
  %v1_10005a34 = and i32 %v0_10005a30, 268435456
  %v3_10005a34 = icmp eq i32 %v1_10005a34, 0
  store i32 %v0_10005a30, i32* %r31.global-to-local, align 4
  br i1 %v3_10005a34, label %dec_label_pc_10005a4c, label %dec_label_pc_10005a40

dec_label_pc_10005a40:                            ; preds = %entry
  %v0_10005a40 = call i32 @__errno_location()
  %v0_10005a44 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005a44 = inttoptr i32 %v0_10005a40 to i32*
  store i32 %v0_10005a44, i32* %v2_10005a44, align 4
  br label %dec_label_pc_10005a4c

dec_label_pc_10005a4c:                            ; preds = %entry, %dec_label_pc_10005a40
  %v0_10005a5c = phi i32 [ %v0_10005a30, %entry ], [ -1, %dec_label_pc_10005a40 ]
  ret i32 %v0_10005a5c

; uselistorder directives
  uselistorder label %dec_label_pc_10005a4c, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10005a78 = call i32 @__asm_mfcr()
  %v1_10005a7c = and i32 %v0_10005a78, 268435456
  %v3_10005a7c = icmp eq i32 %v1_10005a7c, 0
  store i32 %v0_10005a78, i32* %r31.global-to-local, align 4
  br i1 %v3_10005a7c, label %dec_label_pc_10005a94, label %dec_label_pc_10005a88

dec_label_pc_10005a88:                            ; preds = %entry
  %v0_10005a88 = call i32 @__errno_location()
  %v0_10005a8c = load i32, i32* %r31.global-to-local, align 4
  %v2_10005a8c = inttoptr i32 %v0_10005a88 to i32*
  store i32 %v0_10005a8c, i32* %v2_10005a8c, align 4
  br label %dec_label_pc_10005a94

dec_label_pc_10005a94:                            ; preds = %entry, %dec_label_pc_10005a88
  %v0_10005aa4 = phi i32 [ %v0_10005a78, %entry ], [ -1, %dec_label_pc_10005a88 ]
  ret i32 %v0_10005aa4

; uselistorder directives
  uselistorder label %dec_label_pc_10005a94, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_10005aa8 = icmp eq i32 %arg2, 0
  br i1 %v3_10005aa8, label %dec_label_pc_10005ae8, label %dec_label_pc_10005ad0

dec_label_pc_10005ad0:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10005ae8, label %dec_label_pc_10005ad8

dec_label_pc_10005ad8:                            ; preds = %dec_label_pc_10005ad0
  %v0_10005ad8 = call i32 @__errno_location()
  %v2_10005ae0 = inttoptr i32 %v0_10005ad8 to i32*
  store i32 22, i32* %v2_10005ae0, align 4
  %v0_10005b0c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005b08

dec_label_pc_10005ae8:                            ; preds = %dec_label_pc_10005ad0, %entry
  %v0_10005aec = call i32 @__asm_mfcr()
  %v1_10005af0 = and i32 %v0_10005aec, 268435456
  %v3_10005af0 = icmp eq i32 %v1_10005af0, 0
  store i32 %v0_10005aec, i32* %r31.global-to-local, align 4
  br i1 %v3_10005af0, label %dec_label_pc_10005b08, label %dec_label_pc_10005afc

dec_label_pc_10005afc:                            ; preds = %dec_label_pc_10005ae8
  %v0_10005afc = call i32 @__errno_location()
  %v0_10005b00 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005b00 = inttoptr i32 %v0_10005afc to i32*
  store i32 %v0_10005b00, i32* %v2_10005b00, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005b08

dec_label_pc_10005b08:                            ; preds = %dec_label_pc_10005ae8, %dec_label_pc_10005ad8, %dec_label_pc_10005afc
  %v0_10005b0c = phi i32 [ %v0_10005aec, %dec_label_pc_10005ae8 ], [ %v0_10005b0c.pre, %dec_label_pc_10005ad8 ], [ -1, %dec_label_pc_10005afc ]
  ret i32 %v0_10005b0c

; uselistorder directives
  uselistorder label %dec_label_pc_10005b08, { 2, 0, 1 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10005b34 = add i32 %tmp, 52
  %v3_10005b34 = inttoptr i32 %v2_10005b34 to i32*
  %v4_10005b34 = load i32, i32* %v3_10005b34, align 4
  store i32 %v4_10005b34, i32* @r28, align 4
  %v3_10005b38 = icmp eq i32 %v4_10005b34, 0
  store i1 %v3_10005b38, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005b38, label %dec_label_pc_10005b40, label %dec_label_pc_10005b60

dec_label_pc_10005b40:                            ; preds = %entry
  %v2_10005b48 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10005b48, i32* @r3, align 4
  %v0_10005b54 = call i32 @__pthread_return_void()
  %v0_10005b5c = call i32 @__pthread_return_0()
  %v0_10005b60.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005b60

dec_label_pc_10005b60:                            ; preds = %entry, %dec_label_pc_10005b40
  %v0_10005b70 = phi i32 [ %tmp, %entry ], [ %v0_10005b60.pre, %dec_label_pc_10005b40 ]
  %v1_10005b60 = inttoptr i32 %v0_10005b70 to i16*
  %v2_10005b60 = load i16, i16* %v1_10005b60, align 2
  %v3_10005b60 = zext i16 %v2_10005b60 to i32
  store i32 0, i32* @r27, align 4
  %v1_10005b68 = and i32 %v3_10005b60, 64
  %v3_10005b68 = icmp eq i32 %v1_10005b68, 0
  br i1 %v3_10005b68, label %dec_label_pc_10005b7c, label %dec_label_pc_10005b70

dec_label_pc_10005b70:                            ; preds = %dec_label_pc_10005b60
  store i32 268458872, i32* @lr, align 4
  %v4_10005b74 = call i32 @fflush_unlocked(i16* %v1_10005b60, i32 %v1_10005b68)
  store i32 %v4_10005b74, i32* @r27, align 4
  %v0_10005b7c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005b7c

dec_label_pc_10005b7c:                            ; preds = %dec_label_pc_10005b60, %dec_label_pc_10005b70
  %v0_10005b7c = phi i32 [ %v0_10005b70, %dec_label_pc_10005b60 ], [ %v0_10005b7c.pre, %dec_label_pc_10005b70 ]
  %v1_10005b7c = add i32 %v0_10005b7c, 4
  %v2_10005b7c = inttoptr i32 %v1_10005b7c to i32*
  %v3_10005b7c = load i32, i32* %v2_10005b7c, align 4
  store i32 268458884, i32* @lr, align 4
  %v1_10005b80 = call i32 @__libc_close(i32 %v3_10005b7c)
  %v3_10005b84 = icmp eq i32 %v1_10005b80, 0
  store i1 %v3_10005b84, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_10005b80, -1
  br i1 %tmp8, label %dec_label_pc_10005b90, label %dec_label_pc_10005b8c

dec_label_pc_10005b8c:                            ; preds = %dec_label_pc_10005b7c
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10005b90

dec_label_pc_10005b90:                            ; preds = %dec_label_pc_10005b7c, %dec_label_pc_10005b8c
  store i32 ptrtoint ([3 x i8]* @global_var_1000449c.55 to i32), i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_1001c248.123 to i32), i32* @r29, align 4
  %v1_10005ba4 = load i32, i32* @r31, align 4
  %v2_10005ba4 = add i32 %v1_10005ba4, 4
  %v3_10005ba4 = inttoptr i32 %v2_10005ba4 to i32*
  store i32 -1, i32* %v3_10005ba4, align 4
  %v2_10005ba8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10005ba8, i32* @r30, align 4
  store i32 %v2_10005ba8, i32* @r3, align 4
  %v0_10005bb8 = call i32 @__pthread_return_void()
  %v0_10005bc0 = call i32 @__pthread_return_0()
  %v3_10005bc8 = load i32, i32* @global_var_1001c404.124, align 4
  store i32 %v2_10005ba8, i32* @r3, align 4
  %v1_10005bd4 = add i32 %v3_10005bc8, 1
  store i32 %v1_10005bd4, i32* @global_var_1001c404.124, align 4
  %v0_10005bdc = call i32 @__pthread_return_void()
  %v0_10005be0 = load i32, i32* @r31, align 4
  %v1_10005be0 = inttoptr i32 %v0_10005be0 to i16*
  %v2_10005be0 = load i16, i16* %v1_10005be0, align 2
  %v3_10005be0 = zext i16 %v2_10005be0 to i32
  %v0_10005be4 = load i32, i32* @r28, align 4
  %v3_10005be4 = icmp eq i32 %v0_10005be4, 0
  store i1 %v3_10005be4, i1* %cr7_eq.global-to-local, align 1
  %v1_10005be8 = call i32 @__asm_rlwinm(i32 %v3_10005be0, i32 0, i32 17, i32 18)
  %v1_10005bf0 = or i32 %v1_10005be8, 48
  %v1_10005bf4 = trunc i32 %v1_10005bf0 to i16
  %v2_10005bf4 = load i32, i32* @r31, align 4
  %v3_10005bf4 = inttoptr i32 %v2_10005bf4 to i16*
  store i16 %v1_10005bf4, i16* %v3_10005bf4, align 2
  %v0_10005bf8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10005bf8, label %dec_label_pc_10005bfc, label %dec_label_pc_10005c08

dec_label_pc_10005bfc:                            ; preds = %dec_label_pc_10005b90
  %v2_10005bfc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10005bfc, i32* @r3, align 4
  %v0_10005c04 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10005c08

dec_label_pc_10005c08:                            ; preds = %dec_label_pc_10005b90, %dec_label_pc_10005bfc
  %v0_10005c08 = load i32, i32* @r31, align 4
  %v1_10005c08 = inttoptr i32 %v0_10005c08 to i16*
  %v2_10005c08 = load i16, i16* %v1_10005c08, align 2
  %v1_10005c0c = and i16 %v2_10005c08, 16384
  %v3_10005c0c = icmp eq i16 %v1_10005c0c, 0
  br i1 %v3_10005c0c, label %dec_label_pc_10005c1c, label %dec_label_pc_10005c14

dec_label_pc_10005c14:                            ; preds = %dec_label_pc_10005c08
  %v1_10005c14 = add i32 %v0_10005c08, 8
  %v2_10005c14 = inttoptr i32 %v1_10005c14 to i32*
  %v3_10005c14 = load i32, i32* %v2_10005c14, align 4
  store i32 268459036, i32* @lr, align 4
  %v1_10005c18 = call i32 @free(i32 %v3_10005c14)
  br label %dec_label_pc_10005c1c

dec_label_pc_10005c1c:                            ; preds = %dec_label_pc_10005c08, %dec_label_pc_10005c14
  store i32 %v2_10005ba8, i32* @r3, align 4
  %v0_10005c28 = call i32 @__pthread_return_void()
  %v0_10005c30 = call i32 @__pthread_return_0()
  %v3_10005c38 = load i32, i32* @global_var_1001c408.125, align 4
  store i32 %v2_10005ba8, i32* @r3, align 4
  %v1_10005c44 = add i32 %v3_10005c38, 1
  store i32 %v1_10005c44, i32* @global_var_1001c408.125, align 4
  %v0_10005c4c = call i32 @__pthread_return_void()
  store i32 268459092, i32* @lr, align 4
  %v0_10005c50 = call i32 @_stdio_openlist_dec_use()
  %v0_10005c58 = load i32, i32* @r27, align 4
  ret i32 %v0_10005c58

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 (i32)* @__libc_close, { 4, 3, 2, 1, 5, 0 }
  uselistorder label %dec_label_pc_10005c1c, { 1, 0 }
  uselistorder label %dec_label_pc_10005c08, { 1, 0 }
  uselistorder label %dec_label_pc_10005b90, { 1, 0 }
  uselistorder label %dec_label_pc_10005b7c, { 1, 0 }
  uselistorder label %dec_label_pc_10005b60, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_10005c74 = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_10005c74
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10005c78 = load i32, i32* @lr, align 4
  store i32 %v0_10005c78, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_10005c8c = load i32, i32* @r5, align 4
  store i32 %v0_10005c8c, i32* @r31, align 4
  %v0_10005c90 = load i32, i32* @r6, align 4
  store i32 %v0_10005c90, i32* @r29, align 4
  %v3_10005c94 = load i8, i8* %arg2, align 1
  %v4_10005c94 = zext i8 %v3_10005c94 to i32
  store i32 %v4_10005c94, i32* %r0.global-to-local, align 4
  %v3_10005c98 = icmp eq i8 %v3_10005c94, 114
  br i1 %v3_10005c98, label %dec_label_pc_10005ce4, label %dec_label_pc_10005ca0

dec_label_pc_10005ca0:                            ; preds = %entry
  %v3_10005ca0 = icmp eq i8 %v3_10005c94, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_10005ca0, label %dec_label_pc_10005ce8, label %dec_label_pc_10005cac

dec_label_pc_10005cac:                            ; preds = %dec_label_pc_10005ca0
  %v3_10005cac = icmp eq i8 %v3_10005c94, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_10005cac, label %dec_label_pc_10005ce8, label %dec_label_pc_10005cb8

dec_label_pc_10005cb8:                            ; preds = %dec_label_pc_10005d78, %dec_label_pc_10005d48, %dec_label_pc_10005cac
  %v0_10005cb8 = call i32 @__errno_location()
  %v0_10005cbc = load i32, i32* @r31, align 4
  %v3_10005cbc = icmp eq i32 %v0_10005cbc, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10005cc4 = inttoptr i32 %v0_10005cb8 to i32*
  store i32 22, i32* %v2_10005cc4, align 4
  br i1 %v3_10005cbc, label %dec_label_pc_10005f18, label %dec_label_pc_10005ccc

dec_label_pc_10005ccc:                            ; preds = %dec_label_pc_10005dac, %dec_label_pc_10005cb8
  %v0_10005ccc = load i32, i32* @r31, align 4
  %v1_10005ccc = inttoptr i32 %v0_10005ccc to i16*
  %v2_10005ccc = load i16, i16* %v1_10005ccc, align 2
  %v3_10005ccc = zext i16 %v2_10005ccc to i32
  store i32 %v3_10005ccc, i32* %r0.global-to-local, align 4
  %v1_10005cd0 = and i32 %v3_10005ccc, 8192
  store i32 %v1_10005cd0, i32* %r9.global-to-local, align 4
  %v3_10005cd0 = icmp eq i32 %v1_10005cd0, 0
  store i1 %v3_10005cd0, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_10005cd0, label %dec_label_pc_10005f18, label %dec_label_pc_10005cd8

dec_label_pc_10005cd8:                            ; preds = %dec_label_pc_10005ccc
  store i32 ptrtoint (i32* @global_var_10005ce0.127 to i32), i32* @lr, align 4
  %v2_10005cdc = call i32 @free(i32 %v0_10005ccc)
  br label %dec_label_pc_10005f18

dec_label_pc_10005ce4:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10005ce8

dec_label_pc_10005ce8:                            ; preds = %dec_label_pc_10005cac, %dec_label_pc_10005ca0, %dec_label_pc_10005ce4
  %v0_10005d08 = phi i32 [ 1089, %dec_label_pc_10005cac ], [ 577, %dec_label_pc_10005ca0 ], [ 1, %dec_label_pc_10005ce4 ]
  %v2_10005ce8 = add i32 %tmp, 1
  %v3_10005ce8 = inttoptr i32 %v2_10005ce8 to i8*
  %v4_10005ce8 = load i8, i8* %v3_10005ce8, align 1
  %v5_10005ce8 = zext i8 %v4_10005ce8 to i32
  store i32 %v5_10005ce8, i32* %r0.global-to-local, align 4
  %v3_10005cf0 = icmp eq i8 %v4_10005ce8, 98
  br i1 %v3_10005cf0, label %dec_label_pc_10005cfc, label %dec_label_pc_10005cf8

dec_label_pc_10005cf8:                            ; preds = %dec_label_pc_10005ce8
  br label %dec_label_pc_10005cfc

dec_label_pc_10005cfc:                            ; preds = %dec_label_pc_10005ce8, %dec_label_pc_10005cf8
  %storemerge = phi i32 [ %tmp, %dec_label_pc_10005cf8 ], [ %v2_10005ce8, %dec_label_pc_10005ce8 ]
  %v0_10005cfc = phi i32 [ %tmp, %dec_label_pc_10005cf8 ], [ %v2_10005ce8, %dec_label_pc_10005ce8 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_10005cfc = add i32 %v0_10005cfc, 1
  %v2_10005cfc = inttoptr i32 %v1_10005cfc to i8*
  %v3_10005cfc = load i8, i8* %v2_10005cfc, align 1
  %v4_10005cfc = zext i8 %v3_10005cfc to i32
  store i32 %v4_10005cfc, i32* %r0.global-to-local, align 4
  %v3_10005d00 = icmp eq i8 %v3_10005cfc, 43
  br i1 %v3_10005d00, label %dec_label_pc_10005d08, label %dec_label_pc_10005d10

dec_label_pc_10005d08:                            ; preds = %dec_label_pc_10005cfc
  store i32 %v0_10005d08, i32* %r9.global-to-local, align 4
  %v1_10005d0c = add nuw nsw i32 %v0_10005d08, 1
  store i32 %v1_10005d0c, i32* @r28, align 4
  br label %dec_label_pc_10005d10

dec_label_pc_10005d10:                            ; preds = %dec_label_pc_10005cfc, %dec_label_pc_10005d08
  %v3_10005d10 = icmp eq i32 %v0_10005c8c, 0
  br i1 %v3_10005d10, label %dec_label_pc_10005d18, label %dec_label_pc_10005d40

dec_label_pc_10005d18:                            ; preds = %dec_label_pc_10005d10
  store i32 268459296, i32* @lr, align 4
  %v1_10005d1c = call i32 @malloc(i32 80)
  store i32 %v1_10005d1c, i32* @r31, align 4
  %v4_10005d20 = icmp eq i32 %v1_10005d1c, 0
  store i1 %v4_10005d20, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_10005d20, label %dec_label_pc_10005f1c, label %dec_label_pc_10005d28

dec_label_pc_10005d28:                            ; preds = %dec_label_pc_10005d18
  %v1_10005d2c = add i32 %v1_10005d1c, 56
  store i32 %v1_10005d2c, i32* @r3, align 4
  %v3_10005d30 = inttoptr i32 %v1_10005d1c to i16*
  store i16 8192, i16* %v3_10005d30, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10005d38 = load i32, i32* @r31, align 4
  %v2_10005d38 = add i32 %v1_10005d38, 8
  %v3_10005d38 = inttoptr i32 %v2_10005d38 to i32*
  store i32 0, i32* %v3_10005d38, align 4
  store i32 268459328, i32* @lr, align 4
  %v0_10005d3c = call i32 @__stdio_init_mutex()
  %v0_10005d40.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10005d40

dec_label_pc_10005d40:                            ; preds = %dec_label_pc_10005d10, %dec_label_pc_10005d28
  %v0_10005da0 = phi i32 [ %v0_10005c90, %dec_label_pc_10005d10 ], [ %v0_10005d40.pre, %dec_label_pc_10005d28 ]
  %v1_10005d40 = icmp slt i32 %v0_10005da0, 0
  br i1 %v1_10005d40, label %dec_label_pc_10005da0, label %dec_label_pc_10005d48

dec_label_pc_10005d48:                            ; preds = %dec_label_pc_10005d40
  %v1_10005d4c = add i32 %arg1, 1
  store i32 %v1_10005d4c, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_10005d54 = load i32, i32* @r31, align 4
  %v2_10005d54 = add i32 %v1_10005d54, 4
  %v3_10005d54 = inttoptr i32 %v2_10005d54 to i32*
  store i32 %v0_10005da0, i32* %v3_10005d54, align 4
  %v0_10005d58 = load i32, i32* @r28, align 4
  %v1_10005d58 = load i32, i32* %r9.global-to-local, align 4
  %v2_10005d58 = and i32 %v1_10005d58, %v0_10005d58
  %v1_10005d5c = add i32 %v2_10005d58, 1
  store i32 %v1_10005d5c, i32* %r9.global-to-local, align 4
  %v1_10005d60 = load i32, i32* %r0.global-to-local, align 4
  %v2_10005d60 = and i32 %v1_10005d60, %v1_10005d5c
  store i32 %v2_10005d60, i32* %r0.global-to-local, align 4
  %v4_10005d64 = icmp eq i32 %v2_10005d60, %v1_10005d5c
  br i1 %v4_10005d64, label %dec_label_pc_10005d6c, label %dec_label_pc_10005cb8

dec_label_pc_10005d6c:                            ; preds = %dec_label_pc_10005d48
  %v2_10005d6c = sub i32 -1, %arg1
  %v3_10005d6c = and i32 %v0_10005d58, %v2_10005d6c
  store i32 %v3_10005d6c, i32* %r0.global-to-local, align 4
  %v1_10005d70 = and i32 %v3_10005d6c, 1024
  store i32 %v1_10005d70, i32* %r9.global-to-local, align 4
  %v3_10005d70 = icmp eq i32 %v1_10005d70, 0
  store i1 %v3_10005d70, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_10005d70, label %dec_label_pc_10005d94, label %dec_label_pc_10005d78

dec_label_pc_10005d78:                            ; preds = %dec_label_pc_10005d6c
  %v0_10005d78 = load i32, i32* @r29, align 4
  store i32 268459404, i32* @lr, align 4
  %v2_10005d88 = call i32 @__libc_fcntl(i32 %v0_10005d78, i32 4)
  %v3_10005d8c = icmp eq i32 %v2_10005d88, 0
  br i1 %v3_10005d8c, label %dec_label_pc_10005d94, label %dec_label_pc_10005cb8

dec_label_pc_10005d94:                            ; preds = %dec_label_pc_10005d78, %dec_label_pc_10005d6c
  %v1_10005d94 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_10005d94, i32* %r0.global-to-local, align 4
  %v0_10005d98 = load i32, i32* @r28, align 4
  %v2_10005d98 = or i32 %v0_10005d98, %v1_10005d94
  store i32 %v2_10005d98, i32* @r28, align 4
  br label %dec_label_pc_10005dcc

dec_label_pc_10005da0:                            ; preds = %dec_label_pc_10005d40
  %v3_10005da0 = icmp eq i32 %v0_10005da0, -1
  %v0_10005db0.pre = load i32, i32* @r28, align 4
  br i1 %v3_10005da0, label %dec_label_pc_10005dac, label %dec_label_pc_10005da8

dec_label_pc_10005da8:                            ; preds = %dec_label_pc_10005da0
  %v1_10005da8 = or i32 %v0_10005db0.pre, 65536
  store i32 %v1_10005da8, i32* @r28, align 4
  br label %dec_label_pc_10005dac

dec_label_pc_10005dac:                            ; preds = %dec_label_pc_10005da0, %dec_label_pc_10005da8
  %v0_10005db0 = phi i32 [ %v1_10005da8, %dec_label_pc_10005da8 ], [ %v0_10005db0.pre, %dec_label_pc_10005da0 ]
  store i32 438, i32* @r5, align 4
  store i32 268459456, i32* @lr, align 4
  %v2_10005dbc = call i32 @__libc_open(i32 %arg1, i32 %v0_10005db0)
  %v1_10005dc0 = icmp slt i32 %v2_10005dbc, 0
  %v1_10005dc4 = load i32, i32* @r31, align 4
  %v2_10005dc4 = add i32 %v1_10005dc4, 4
  %v3_10005dc4 = inttoptr i32 %v2_10005dc4 to i32*
  store i32 %v2_10005dbc, i32* %v3_10005dc4, align 4
  br i1 %v1_10005dc0, label %dec_label_pc_10005ccc, label %dec_label_pc_10005dac.dec_label_pc_10005dcc_crit_edge

dec_label_pc_10005dac.dec_label_pc_10005dcc_crit_edge: ; preds = %dec_label_pc_10005dac
  %v0_10005dd0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10005dcc

dec_label_pc_10005dcc:                            ; preds = %dec_label_pc_10005dac.dec_label_pc_10005dcc_crit_edge, %dec_label_pc_10005d94
  %v0_10005dd0 = phi i32 [ %v0_10005dd0.pre, %dec_label_pc_10005dac.dec_label_pc_10005dcc_crit_edge ], [ %v2_10005d98, %dec_label_pc_10005d94 ]
  %v0_10005dcc = load i32, i32* @r31, align 4
  %v1_10005dcc = inttoptr i32 %v0_10005dcc to i16*
  %v2_10005dcc = load i16, i16* %v1_10005dcc, align 2
  %v3_10005dcc = zext i16 %v2_10005dcc to i32
  store i32 %v3_10005dcc, i32* %r0.global-to-local, align 4
  %v1_10005dd0 = urem i32 %v0_10005dd0, 4
  store i32 %v1_10005dd0, i32* %r29.global-to-local, align 4
  %v1_10005dd4 = call i32 @__asm_rlwinm(i32 %v0_10005dd0, i32 0, i32 21, i32 21)
  %v1_10005dd8 = add nuw nsw i32 %v1_10005dd0, 1
  store i32 %v1_10005dd8, i32* %r29.global-to-local, align 4
  %v1_10005ddc = call i32 @__asm_rlwinm(i32 %v3_10005dcc, i32 0, i32 18, i32 18)
  store i32 %v1_10005ddc, i32* %r0.global-to-local, align 4
  %v1_10005de0 = xor i32 %v1_10005dd8, 3
  store i32 %v1_10005de0, i32* %r29.global-to-local, align 4
  %v1_10005de4 = urem i32 %v1_10005ddc, 65536
  store i32 %v1_10005de4, i32* %r9.global-to-local, align 4
  %v0_10005de8 = load i32, i32* @r28, align 4
  %v1_10005de8 = call i32 @__asm_rlwinm(i32 %v0_10005de8, i32 31, i32 16, i32 16)
  %v2_10005dec = or i32 %v1_10005de8, %v1_10005dd4
  store i32 %v2_10005dec, i32* %r0.global-to-local, align 4
  %v0_10005df0 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005df0 = mul i32 %v0_10005df0, 16
  %v0_10005df4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10005df4 = or i32 %v0_10005df4, %v2_10005dec
  store i32 %v2_10005df4, i32* %r9.global-to-local, align 4
  %v2_10005df8 = or i32 %v2_10005df4, %v1_10005df0
  store i32 %v2_10005df8, i32* @r29, align 4
  %v1_10005dfc = trunc i32 %v2_10005df8 to i16
  %v2_10005dfc = load i32, i32* @r31, align 4
  %v3_10005dfc = inttoptr i32 %v2_10005dfc to i16*
  store i16 %v1_10005dfc, i16* %v3_10005dfc, align 2
  %v0_10005e00 = call i32 @__errno_location()
  store i32 %v0_10005e00, i32* @r28, align 4
  %v0_10005e08 = load i32, i32* @r31, align 4
  %v1_10005e08 = add i32 %v0_10005e08, 4
  %v2_10005e08 = inttoptr i32 %v1_10005e08 to i32*
  %v3_10005e08 = load i32, i32* %v2_10005e08, align 4
  %v1_10005e0c = inttoptr i32 %v0_10005e00 to i32*
  %v2_10005e0c = load i32, i32* %v1_10005e0c, align 4
  store i32 %v2_10005e0c, i32* @r27, align 4
  store i32 268459540, i32* @lr, align 4
  %v1_10005e10 = call i32 @isatty(i32 %v3_10005e08)
  %v1_10005e14 = mul i32 %v1_10005e10, 256
  %v0_10005e18 = load i32, i32* @r29, align 4
  %v2_10005e18 = or i32 %v0_10005e18, %v1_10005e14
  store i32 %v2_10005e18, i32* @r29, align 4
  %v1_10005e1c = trunc i32 %v2_10005e18 to i16
  %v2_10005e1c = load i32, i32* @r31, align 4
  %v3_10005e1c = inttoptr i32 %v2_10005e1c to i16*
  store i16 %v1_10005e1c, i16* %v3_10005e1c, align 2
  %v0_10005e20 = load i32, i32* @r27, align 4
  %v1_10005e20 = load i32, i32* @r28, align 4
  %v2_10005e20 = inttoptr i32 %v1_10005e20 to i32*
  store i32 %v0_10005e20, i32* %v2_10005e20, align 4
  %v0_10005e24 = load i32, i32* @r31, align 4
  %v1_10005e24 = add i32 %v0_10005e24, 8
  %v2_10005e24 = inttoptr i32 %v1_10005e24 to i32*
  %v3_10005e24 = load i32, i32* %v2_10005e24, align 4
  store i32 %v3_10005e24, i32* %r0.global-to-local, align 4
  %v3_10005e28 = icmp eq i32 %v3_10005e24, 0
  br i1 %v3_10005e28, label %dec_label_pc_10005e30, label %dec_label_pc_10005e60

dec_label_pc_10005e30:                            ; preds = %dec_label_pc_10005dcc
  store i32 268459576, i32* @lr, align 4
  %v1_10005e34 = call i32 @malloc(i32 4096)
  %v3_10005e38 = icmp eq i32 %v1_10005e34, 0
  %v1_10005e3c = load i32, i32* @r31, align 4
  %v2_10005e3c = add i32 %v1_10005e3c, 8
  %v3_10005e3c = inttoptr i32 %v2_10005e3c to i32*
  store i32 %v1_10005e34, i32* %v3_10005e3c, align 4
  %v1_10005e5c = load i32, i32* @r31, align 4
  br i1 %v3_10005e38, label %dec_label_pc_10005e5c, label %dec_label_pc_10005e44

dec_label_pc_10005e44:                            ; preds = %dec_label_pc_10005e30
  %v1_10005e44 = inttoptr i32 %v1_10005e5c to i16*
  %v2_10005e44 = load i16, i16* %v1_10005e44, align 2
  %v3_10005e44 = zext i16 %v2_10005e44 to i32
  store i32 %v3_10005e44, i32* %r0.global-to-local, align 4
  %v1_10005e48 = add i32 %v1_10005e34, 4096
  store i32 %v1_10005e48, i32* %r9.global-to-local, align 4
  %v2_10005e4c = add i32 %v1_10005e5c, 12
  %v3_10005e4c = inttoptr i32 %v2_10005e4c to i32*
  store i32 %v1_10005e48, i32* %v3_10005e4c, align 4
  %v0_10005e50 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005e50 = or i32 %v0_10005e50, 16384
  store i32 %v1_10005e50, i32* %r0.global-to-local, align 4
  %v1_10005e54 = trunc i32 %v1_10005e50 to i16
  %v2_10005e54 = load i32, i32* @r31, align 4
  %v3_10005e54 = inttoptr i32 %v2_10005e54 to i16*
  store i16 %v1_10005e54, i16* %v3_10005e54, align 2
  br label %dec_label_pc_10005e60

dec_label_pc_10005e5c:                            ; preds = %dec_label_pc_10005e30
  %v2_10005e5c = add i32 %v1_10005e5c, 12
  %v3_10005e5c = inttoptr i32 %v2_10005e5c to i32*
  store i32 0, i32* %v3_10005e5c, align 4
  br label %dec_label_pc_10005e60

dec_label_pc_10005e60:                            ; preds = %dec_label_pc_10005dcc, %dec_label_pc_10005e44, %dec_label_pc_10005e5c
  %v0_10005e60 = load i32, i32* @r31, align 4
  %v1_10005e60 = inttoptr i32 %v0_10005e60 to i16*
  %v2_10005e60 = load i16, i16* %v1_10005e60, align 2
  %v3_10005e60 = zext i16 %v2_10005e60 to i32
  store i32 %v3_10005e60, i32* %r0.global-to-local, align 4
  %v1_10005e64 = add i32 %v0_10005e60, 8
  %v2_10005e64 = inttoptr i32 %v1_10005e64 to i32*
  %v3_10005e64 = load i32, i32* %v2_10005e64, align 4
  store i32 %v3_10005e64, i32* %r9.global-to-local, align 4
  %v1_10005e68 = and i32 %v3_10005e60, 8192
  %v3_10005e68 = icmp eq i32 %v1_10005e68, 0
  store i1 %v3_10005e68, i1* %cr0_eq.global-to-local, align 1
  %v3_10005e70 = add i32 %v0_10005e60, 2
  %v4_10005e70 = inttoptr i32 %v3_10005e70 to i8*
  store i8 0, i8* %v4_10005e70, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10005e78 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e78 = load i32, i32* @r31, align 4
  %v2_10005e78 = add i32 %v1_10005e78, 20
  %v3_10005e78 = inttoptr i32 %v2_10005e78 to i32*
  store i32 %v0_10005e78, i32* %v3_10005e78, align 4
  %v0_10005e7c = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e7c = load i32, i32* @r31, align 4
  %v2_10005e7c = add i32 %v1_10005e7c, 24
  %v3_10005e7c = inttoptr i32 %v2_10005e7c to i32*
  store i32 %v0_10005e7c, i32* %v3_10005e7c, align 4
  %v0_10005e80 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e80 = load i32, i32* @r31, align 4
  %v2_10005e80 = add i32 %v1_10005e80, 28
  %v3_10005e80 = inttoptr i32 %v2_10005e80 to i32*
  store i32 %v0_10005e80, i32* %v3_10005e80, align 4
  %v0_10005e84 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e84 = load i32, i32* @r31, align 4
  %v2_10005e84 = add i32 %v1_10005e84, 16
  %v3_10005e84 = inttoptr i32 %v2_10005e84 to i32*
  store i32 %v0_10005e84, i32* %v3_10005e84, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_10005e8c = load i32, i32* %r0.global-to-local, align 4
  %v1_10005e8c = load i32, i32* @r31, align 4
  %v2_10005e8c = add i32 %v1_10005e8c, 44
  %v3_10005e8c = inttoptr i32 %v2_10005e8c to i32*
  store i32 %v0_10005e8c, i32* %v3_10005e8c, align 4
  %v3_10005e90 = load i32, i32* @global_var_1001c388.128, align 4
  store i32 %v3_10005e90, i32* %r0.global-to-local, align 4
  %v1_10005e94 = load i32, i32* @r31, align 4
  %v2_10005e94 = add i32 %v1_10005e94, 52
  %v3_10005e94 = inttoptr i32 %v2_10005e94 to i32*
  store i32 %v3_10005e90, i32* %v3_10005e94, align 4
  %v0_10005e98 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10005e98, label %dec_label_pc_10005f1c, label %dec_label_pc_10005e9c

dec_label_pc_10005e9c:                            ; preds = %dec_label_pc_10005e60
  store i32 ptrtoint ([3 x i8]* @global_var_1000449c.55 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001c248.123 to i32), i32* %r29.global-to-local, align 4
  %v2_10005eac = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10005eac, i32* @r26, align 4
  store i32 %v2_10005eac, i32* @r3, align 4
  %v0_10005ebc = call i32 @__pthread_return_void()
  %v2_10005ec8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10005ec8, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1001c230.129 to i32), i32* @r29, align 4
  %v0_10005ed0 = call i32 @__pthread_return_0()
  store i32 %v2_10005ec8, i32* @r3, align 4
  %v0_10005ee0 = call i32 @__pthread_return_void()
  %v0_10005ee8 = call i32 @__pthread_return_0()
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005ef0 = load i32, i32* bitcast (i32** @global_var_1001c384.130 to i32*), align 4
  store i32 %v3_10005ef0, i32* %r0.global-to-local, align 4
  store i32 %v2_10005ec8, i32* @r3, align 4
  %v1_10005efc = load i32, i32* @r31, align 4
  %v2_10005efc = add i32 %v1_10005efc, 32
  %v3_10005efc = inttoptr i32 %v2_10005efc to i32*
  store i32 %v3_10005ef0, i32* %v3_10005efc, align 4
  %v0_10005f00 = load i32, i32* @r31, align 4
  store i32 %v0_10005f00, i32* bitcast (i32** @global_var_1001c384.130 to i32*), align 4
  %v0_10005f04 = call i32 @__pthread_return_void()
  store i32 %v2_10005eac, i32* @r3, align 4
  %v0_10005f10 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10005f1c

dec_label_pc_10005f18:                            ; preds = %dec_label_pc_10005ccc, %dec_label_pc_10005cb8, %dec_label_pc_10005cd8
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10005f1c

dec_label_pc_10005f1c:                            ; preds = %dec_label_pc_10005e60, %dec_label_pc_10005d18, %dec_label_pc_10005e9c, %dec_label_pc_10005f18
  store i32 %v0_10005c78, i32* %r0.global-to-local, align 4
  %v0_10005f20 = load i32, i32* @r31, align 4
  ret i32 %v0_10005f20

; uselistorder directives
  uselistorder i32 %v1_10005e5c, { 2, 0, 1 }
  uselistorder i32 %v0_10005dd0, { 1, 0 }
  uselistorder i32 %v1_10005d1c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10005d08, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17 }
  uselistorder i32 4096, { 5, 1, 0, 2, 3, 4, 6 }
  uselistorder i32 (i32, i32)* @__libc_open, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 5, 0, 4, 3, 2, 1 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 577, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10005f1c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10005f18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005e60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005dac, { 1, 0 }
  uselistorder label %dec_label_pc_10005d40, { 1, 0 }
  uselistorder label %dec_label_pc_10005d10, { 1, 0 }
  uselistorder label %dec_label_pc_10005cfc, { 1, 0 }
  uselistorder label %dec_label_pc_10005ce8, { 2, 0, 1 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268566528, i32* @r28, align 4
  %v0_10005f48 = call i32 @__errno_location()
  store i32 %v0_10005f48, i32* @r26, align 4
  %v1_10005f54 = inttoptr i32 %v0_10005f48 to i32*
  %v2_10005f54 = load i32, i32* %v1_10005f54, align 4
  store i32 %v2_10005f54, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_1001c260.20 to i32), i32* @r27, align 4
  %v3_10005f5c = load i16, i16* @global_var_1001c260.20, align 2
  %v4_10005f5c = zext i16 %v3_10005f5c to i32
  store i32 %v4_10005f5c, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005f64.132 to i32), i32* @lr, align 4
  %v1_10005f60 = call i32 @isatty(i32 0)
  %v1_10005f64 = sub i32 1, %v1_10005f60
  %v1_10005f68 = mul i32 %v1_10005f64, 256
  %v0_10005f6c = load i32, i32* @r29, align 4
  %v2_10005f6c = xor i32 %v1_10005f68, %v0_10005f6c
  %v1_10005f74 = trunc i32 %v2_10005f6c to i16
  store i16 %v1_10005f74, i16* @global_var_1001c260.20, align 2
  %v3_10005f78 = load i16, i16* @global_var_1001c2b0.21, align 2
  %v4_10005f78 = zext i16 %v3_10005f78 to i32
  store i32 %v4_10005f78, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005f80.133 to i32), i32* @lr, align 4
  %v1_10005f7c = call i32 @isatty(i32 1)
  %v1_10005f80 = sub i32 1, %v1_10005f7c
  %v1_10005f84 = mul i32 %v1_10005f80, 256
  %v0_10005f88 = load i32, i32* @r29, align 4
  %v2_10005f88 = xor i32 %v1_10005f84, %v0_10005f88
  %v1_10005f8c = trunc i32 %v2_10005f88 to i16
  store i16 %v1_10005f8c, i16* @global_var_1001c2b0.21, align 2
  %v0_10005f90 = load i32, i32* @r25, align 4
  %v1_10005f90 = load i32, i32* @r26, align 4
  %v2_10005f90 = inttoptr i32 %v1_10005f90 to i32*
  store i32 %v0_10005f90, i32* %v2_10005f90, align 4
  ret i32 %v1_10005f84

; uselistorder directives
  uselistorder i32 %v1_10005f84, { 1, 0 }
  uselistorder i16* @global_var_1001c2b0.21, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000ac34.134 to i32), i32* @r4, align 4
  %v0_10005fb4 = call i32 @memcpy()
  ret i32 %v0_10005fb4
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001c230.129 to i32), i32* @r3, align 4
  store i32 268459988, i32* @lr, align 4
  %v0_10005fd0 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_1001c248.123 to i32), i32* @r3, align 4
  store i32 268460000, i32* @lr, align 4
  %v0_10005fdc = call i32 @__stdio_init_mutex()
  store i32 268566528, i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_1001c384.130 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_100060289 = icmp eq i32 %storemerge6, 0
  %v1_1000602c11 = add i32 %storemerge6, 56
  store i32 %v1_1000602c11, i32* %r30.global-to-local, align 4
  br i1 %v3_100060289, label %dec_label_pc_10006038, label %dec_label_pc_10005fec

dec_label_pc_10005fec:                            ; preds = %entry, %dec_label_pc_10006018
  %v0_10005fec = call i32 @__pthread_return_0()
  %v3_10005ff0 = icmp eq i32 %v0_10005fec, 0
  %v0_10005ff4 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10005ff4, i32* @r3, align 4
  br i1 %v3_10005ff0, label %dec_label_pc_10006018, label %dec_label_pc_10005ffc

dec_label_pc_10005ffc:                            ; preds = %dec_label_pc_10005fec
  %v0_10005ffc = load i32, i32* %r31.global-to-local, align 4
  %v1_10005ffc = add i32 %v0_10005ffc, 8
  %v2_10005ffc = inttoptr i32 %v1_10005ffc to i32*
  %v3_10005ffc = load i32, i32* %v2_10005ffc, align 4
  store i32 %v3_10005ffc, i32* %r9.global-to-local, align 4
  %v3_10006004 = inttoptr i32 %v0_10005ffc to i16*
  store i16 48, i16* %v3_10006004, align 2
  %v0_10006008 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006008 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006008 = add i32 %v1_10006008, 20
  %v3_10006008 = inttoptr i32 %v2_10006008 to i32*
  store i32 %v0_10006008, i32* %v3_10006008, align 4
  %v0_1000600c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000600c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000600c = add i32 %v1_1000600c, 24
  %v3_1000600c = inttoptr i32 %v2_1000600c to i32*
  store i32 %v0_1000600c, i32* %v3_1000600c, align 4
  %v0_10006010 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006010 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006010 = add i32 %v1_10006010, 28
  %v3_10006010 = inttoptr i32 %v2_10006010 to i32*
  store i32 %v0_10006010, i32* %v3_10006010, align 4
  %v0_10006014 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006014 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006014 = add i32 %v1_10006014, 16
  %v3_10006014 = inttoptr i32 %v2_10006014 to i32*
  store i32 %v0_10006014, i32* %v3_10006014, align 4
  br label %dec_label_pc_10006018

dec_label_pc_10006018:                            ; preds = %dec_label_pc_10005fec, %dec_label_pc_10005ffc
  %v1_1000601c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000601c = add i32 %v1_1000601c, 52
  %v3_1000601c = inttoptr i32 %v2_1000601c to i32*
  store i32 1, i32* %v3_1000601c, align 4
  store i32 268460068, i32* @lr, align 4
  %v0_10006020 = call i32 @__stdio_init_mutex()
  %v0_10006024 = load i32, i32* %r31.global-to-local, align 4
  %v1_10006024 = add i32 %v0_10006024, 32
  %v2_10006024 = inttoptr i32 %v1_10006024 to i32*
  %storemerge = load i32, i32* %v2_10006024, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_10006028 = icmp eq i32 %storemerge, 0
  %v1_1000602c = add i32 %storemerge, 56
  store i32 %v1_1000602c, i32* %r30.global-to-local, align 4
  br i1 %v3_10006028, label %dec_label_pc_10006028.dec_label_pc_10006038_crit_edge, label %dec_label_pc_10005fec

dec_label_pc_10006028.dec_label_pc_10006038_crit_edge: ; preds = %dec_label_pc_10006018
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_1001c384.130 to i32*), align 4
  br label %dec_label_pc_10006038

dec_label_pc_10006038:                            ; preds = %dec_label_pc_10006028.dec_label_pc_10006038_crit_edge, %entry
  %v0_1000607416 = phi i32 [ %v1_1000602c, %dec_label_pc_10006028.dec_label_pc_10006038_crit_edge ], [ %v1_1000602c11, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_10006028.dec_label_pc_10006038_crit_edge ], [ 0, %entry ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_1000605c5 = icmp eq i32 %storemerge12, 0
  br i1 %v3_1000605c5, label %dec_label_pc_10006064, label %dec_label_pc_10006044

dec_label_pc_10006044:                            ; preds = %dec_label_pc_10006038, %dec_label_pc_10006058
  %v0_10006044 = phi i32 [ %storemerge1, %dec_label_pc_10006058 ], [ %storemerge12, %dec_label_pc_10006038 ]
  %v1_10006044 = inttoptr i32 %v0_10006044 to i16*
  %v2_10006044 = load i16, i16* %v1_10006044, align 2
  %v3_10006044 = zext i16 %v2_10006044 to i32
  store i32 %v0_10006044, i32* @r3, align 4
  %v1_1000604c = and i32 %v3_10006044, 64
  store i32 %v1_1000604c, i32* %r9.global-to-local, align 4
  %v3_1000604c = icmp eq i32 %v1_1000604c, 0
  br i1 %v3_1000604c, label %dec_label_pc_10006058, label %dec_label_pc_10006054

dec_label_pc_10006054:                            ; preds = %dec_label_pc_10006044
  store i32 268460120, i32* @lr, align 4
  %v0_10006054 = call i32 @__stdio_wcommit()
  %v0_10006058.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006058

dec_label_pc_10006058:                            ; preds = %dec_label_pc_10006044, %dec_label_pc_10006054
  %v0_10006058 = phi i32 [ %v0_10006044, %dec_label_pc_10006044 ], [ %v0_10006058.pre, %dec_label_pc_10006054 ]
  %v0_1000607417 = phi i32 [ %v0_10006044, %dec_label_pc_10006044 ], [ %v0_10006054, %dec_label_pc_10006054 ]
  %v1_10006058 = add i32 %v0_10006058, 32
  %v2_10006058 = inttoptr i32 %v1_10006058 to i32*
  %storemerge1 = load i32, i32* %v2_10006058, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_1000605c = icmp eq i32 %storemerge1, 0
  br i1 %v3_1000605c, label %dec_label_pc_10006064, label %dec_label_pc_10006044

dec_label_pc_10006064:                            ; preds = %dec_label_pc_10006058, %dec_label_pc_10006038
  %v0_10006074 = phi i32 [ %v0_1000607416, %dec_label_pc_10006038 ], [ %v0_1000607417, %dec_label_pc_10006058 ]
  ret i32 %v0_10006074

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_10006044, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006058, { 1, 0 }
  uselistorder label %dec_label_pc_10006044, { 1, 0 }
  uselistorder label %dec_label_pc_10006018, { 1, 0 }
  uselistorder label %dec_label_pc_10005fec, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_10006080 = load i32, i32* @r31, align 4
  %v0_10006084 = load i32, i32* @r3, align 4
  %v1_1000608c = add i32 %v0_10006084, 8
  %v2_1000608c = inttoptr i32 %v1_1000608c to i32*
  %v3_1000608c = load i32, i32* %v2_1000608c, align 4
  %v1_10006090 = add i32 %v0_10006084, 16
  %v2_10006090 = inttoptr i32 %v1_10006090 to i32*
  %v3_10006090 = load i32, i32* %v2_10006090, align 4
  %v2_10006098 = sub i32 %v3_10006090, %v3_1000608c
  store i32 %v2_10006098, i32* @r5, align 4
  %v5_10006098 = icmp eq i32 %v2_10006098, 0
  br i1 %v5_10006098, label %dec_label_pc_100060a8, label %dec_label_pc_100060a0

dec_label_pc_100060a0:                            ; preds = %entry
  store i32 %v3_1000608c, i32* %v2_10006090, align 4
  store i32 268460200, i32* @lr, align 4
  %v2_100060a4 = inttoptr i32 %v3_1000608c to i16*
  %v3_100060a4 = call i32 @__stdio_WRITE(i16* %v2_100060a4, i32 %v2_10006098)
  %v0_100060a8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100060a8

dec_label_pc_100060a8:                            ; preds = %entry, %dec_label_pc_100060a0
  %v0_100060a8 = phi i32 [ %v0_10006084, %entry ], [ %v0_100060a8.pre, %dec_label_pc_100060a0 ]
  %v1_100060a8 = add i32 %v0_100060a8, 8
  %v2_100060a8 = inttoptr i32 %v1_100060a8 to i32*
  %v3_100060a8 = load i32, i32* %v2_100060a8, align 4
  %v1_100060ac = add i32 %v0_100060a8, 16
  %v2_100060ac = inttoptr i32 %v1_100060ac to i32*
  %v3_100060ac = load i32, i32* %v2_100060ac, align 4
  store i32 %v0_10006080, i32* @r31, align 4
  %v2_100060b4 = sub i32 %v3_100060ac, %v3_100060a8
  ret i32 %v2_100060b4

; uselistorder directives
  uselistorder i32 %v0_100060a8, { 1, 0 }
  uselistorder i32 %v3_1000608c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100060a8, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100060d0 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_100060d0, i32* %r28.global-to-local, align 4
  %v1_100060f4 = add i32 %arg3, 52
  %v2_100060f4 = inttoptr i32 %v1_100060f4 to i32*
  %v3_100060f4 = load i32, i32* %v2_100060f4, align 4
  %v2_100060f8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100060f8, i32* @r3, align 4
  %v3_10006104 = icmp eq i32 %v3_100060f4, 0
  store i1 %v3_10006104, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10006104, label %dec_label_pc_1000610c, label %dec_label_pc_10006118

dec_label_pc_1000610c:                            ; preds = %entry
  %v0_1000610c = call i32 @__pthread_return_void()
  %v0_10006114 = call i32 @__pthread_return_0()
  %v0_10006118.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000611c.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10006120.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10006118

dec_label_pc_10006118:                            ; preds = %entry, %dec_label_pc_1000610c
  %v0_10006120 = phi i32 [ %v0_100060d0, %entry ], [ %v0_10006120.pre, %dec_label_pc_1000610c ]
  %v0_1000611c = phi i32 [ %arg3, %entry ], [ %v0_1000611c.pre, %dec_label_pc_1000610c ]
  %v0_10006118 = phi i32 [ %arg2, %entry ], [ %v0_10006118.pre, %dec_label_pc_1000610c ]
  store i32 268460328, i32* @lr, align 4
  %v3_10006124 = inttoptr i32 %v0_10006120 to i8*
  %v4_10006124 = call i32 @__GI_fgets_unlocked(i8* %v3_10006124, i32 %v0_10006118, i32 %v0_1000611c)
  store i32 %v4_10006124, i32* @r31, align 4
  store i32 %v2_100060f8, i32* @r3, align 4
  %v0_10006134 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10006134, label %dec_label_pc_10006138, label %dec_label_pc_1000613c

dec_label_pc_10006138:                            ; preds = %dec_label_pc_10006118
  %v0_10006138 = call i32 @__pthread_return_void()
  %v0_10006140.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000613c

dec_label_pc_1000613c:                            ; preds = %dec_label_pc_10006118, %dec_label_pc_10006138
  %v0_10006140 = phi i32 [ %v4_10006124, %dec_label_pc_10006118 ], [ %v0_10006140.pre, %dec_label_pc_10006138 ]
  %v1_10006150 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100060d0)
  %v9_10006150 = extractvalue %0 %v1_10006150, 7
  store i4 %v9_10006150, i4* @cr4, align 1
  ret i32 %v0_10006140

; uselistorder directives
  uselistorder i32 %v0_100060d0, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000613c, { 1, 0 }
  uselistorder label %dec_label_pc_10006118, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000449c.55 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_1001c248.123 to i32), i32* @r29, align 4
  %v2_10006180 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10006180, i32* @r3, align 4
  %v0_10006188 = call i32 @__pthread_return_void()
  %v0_10006190 = call i32 @__pthread_return_0()
  %v3_10006198 = load i32, i32* @global_var_1001c404.124, align 4
  %v3_1000619c = icmp eq i32 %v3_10006198, 1
  br i1 %v3_1000619c, label %dec_label_pc_100061a4, label %dec_label_pc_1000624c

dec_label_pc_100061a4:                            ; preds = %entry
  %v3_100061a8 = load i32, i32* @global_var_1001c408.125, align 4
  %tmp7 = icmp slt i32 %v3_100061a8, 1
  br i1 %tmp7, label %dec_label_pc_1000624c, label %dec_label_pc_100061b4

dec_label_pc_100061b4:                            ; preds = %dec_label_pc_100061a4
  %v2_100061c0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100061c0, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_100061cc = call i32 @__pthread_return_void()
  %v0_100061d4 = call i32 @__pthread_return_0()
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_1001c384.130 to i32*), align 4
  store i32 %storemerge8, i32* @r29, align 4
  %v3_1000622c11 = icmp eq i32 %storemerge8, 0
  %v0_1000623012 = load i32, i32* @r30, align 4
  br i1 %v3_1000622c11, label %dec_label_pc_10006238, label %dec_label_pc_100061e4

dec_label_pc_100061e4:                            ; preds = %dec_label_pc_100061b4, %dec_label_pc_1000622c.backedge
  %v0_1000623017 = phi i32 [ %v0_10006230, %dec_label_pc_1000622c.backedge ], [ %v0_1000623012, %dec_label_pc_100061b4 ]
  %v3_1000623018.in = phi i32 [ %v0_10006230, %dec_label_pc_1000622c.backedge ], [ %v0_1000623012, %dec_label_pc_100061b4 ]
  %storemerge16 = phi i32 [ %storemerge, %dec_label_pc_1000622c.backedge ], [ %storemerge8, %dec_label_pc_100061b4 ]
  %v1_100061e4 = inttoptr i32 %storemerge16 to i16*
  %v2_100061e4 = load i16, i16* %v1_100061e4, align 2
  %v1_100061e8 = add i32 %storemerge16, 32
  %v2_100061e8 = inttoptr i32 %v1_100061e8 to i32*
  %v3_100061e8 = load i32, i32* %v2_100061e8, align 4
  store i32 %v3_100061e8, i32* @r31, align 4
  %v1_100061ec = and i16 %v2_100061e4, -32720
  %v3_100061f0 = icmp eq i16 %v1_100061ec, 48
  br i1 %v3_100061f0, label %dec_label_pc_10006200, label %dec_label_pc_100061f8

dec_label_pc_100061f8:                            ; preds = %dec_label_pc_100061e4
  store i32 %storemerge16, i32* @r30, align 4
  br label %dec_label_pc_1000622c.backedge

dec_label_pc_10006200:                            ; preds = %dec_label_pc_100061e4
  %v3_1000623018 = icmp eq i32 %v3_1000623018.in, 0
  br i1 %v3_1000623018, label %dec_label_pc_10006204, label %dec_label_pc_10006210

dec_label_pc_10006204:                            ; preds = %dec_label_pc_10006200
  store i32 %v3_100061e8, i32* bitcast (i32** @global_var_1001c384.130 to i32*), align 4
  br label %dec_label_pc_10006214

dec_label_pc_10006210:                            ; preds = %dec_label_pc_10006200
  %v2_10006210 = add i32 %v0_1000623017, 32
  %v3_10006210 = inttoptr i32 %v2_10006210 to i32*
  store i32 %v3_100061e8, i32* %v3_10006210, align 4
  %v0_10006214.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10006214

dec_label_pc_10006214:                            ; preds = %dec_label_pc_10006204, %dec_label_pc_10006210
  %v0_10006214 = phi i32 [ %storemerge16, %dec_label_pc_10006204 ], [ %v0_10006214.pre, %dec_label_pc_10006210 ]
  %v1_10006214 = inttoptr i32 %v0_10006214 to i16*
  %v2_10006214 = load i16, i16* %v1_10006214, align 2
  %v1_1000621c = and i16 %v2_10006214, 8192
  %v3_1000621c = icmp eq i16 %v1_1000621c, 0
  br i1 %v3_1000621c, label %dec_label_pc_1000622c.backedge, label %dec_label_pc_10006224

dec_label_pc_1000622c.backedge:                   ; preds = %dec_label_pc_10006214, %dec_label_pc_100061f8, %dec_label_pc_10006224
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_1000622c = icmp eq i32 %storemerge, 0
  %v0_10006230 = load i32, i32* @r30, align 4
  br i1 %v3_1000622c, label %dec_label_pc_10006238, label %dec_label_pc_100061e4

dec_label_pc_10006224:                            ; preds = %dec_label_pc_10006214
  store i32 268460584, i32* @lr, align 4
  %v2_10006224 = call i32 @free(i32 %v0_10006214)
  br label %dec_label_pc_1000622c.backedge

dec_label_pc_10006238:                            ; preds = %dec_label_pc_1000622c.backedge, %dec_label_pc_100061b4
  store i32 %v2_100061c0, i32* @r3, align 4
  %v0_10006240 = call i32 @__pthread_return_void()
  %v0_10006248 = load i32, i32* @r29, align 4
  store i32 %v0_10006248, i32* @global_var_1001c408.125, align 4
  %v3_10006254.pre = load i32, i32* @global_var_1001c404.124, align 4
  br label %dec_label_pc_1000624c

dec_label_pc_1000624c:                            ; preds = %entry, %dec_label_pc_100061a4, %dec_label_pc_10006238
  %v3_10006254 = phi i32 [ %v3_10006198, %entry ], [ 1, %dec_label_pc_100061a4 ], [ %v3_10006254.pre, %dec_label_pc_10006238 ]
  store i32 %v2_10006180, i32* @r3, align 4
  %v1_1000625c = add i32 %v3_10006254, -1
  store i32 %v1_1000625c, i32* @global_var_1001c404.124, align 4
  %v0_10006264 = call i32 @__pthread_return_void()
  ret i32 %v0_10006264

; uselistorder directives
  uselistorder i32 %v0_10006230, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10006214, { 1, 0 }
  uselistorder i32 %v3_100061e8, { 1, 0, 2 }
  uselistorder i32 %storemerge16, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 19, 18, 1, 0 }
  uselistorder label %dec_label_pc_1000624c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000622c.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006214, { 1, 0 }
  uselistorder label %dec_label_pc_100061e4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_1001c384.130 to i32), i32* %r9.global-to-local, align 4
  %v5_1000628c = icmp eq i16* %arg1, bitcast (i32** @global_var_1001c384.130 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_1000628c, label %dec_label_pc_100062b0, label %dec_label_pc_100062a4

dec_label_pc_100062a4:                            ; preds = %entry
  %v4_100062a4 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_100062a4, label %dec_label_pc_100062b0, label %dec_label_pc_100063dc

dec_label_pc_100062b0:                            ; preds = %dec_label_pc_100062a4, %entry
  store i32 268435456, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000449c.55 to i32), i32* @r30, align 4
  %v2_100062bc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100062bc, i32* @r3, align 4
  %v0_100062d0 = call i32 @__pthread_return_void()
  %v0_100062d8 = call i32 @__pthread_return_0()
  %v3_100062e0 = load i32, i32* @global_var_1001c404.124, align 4
  store i32 %v2_100062bc, i32* @r3, align 4
  %v1_100062f0 = add i32 %v3_100062e0, 1
  store i32 %v1_100062f0, i32* %r9.global-to-local, align 4
  store i32 %v1_100062f0, i32* @global_var_1001c404.124, align 4
  %v0_100062fc = call i32 @__pthread_return_void()
  store i32 %v2_100062bc, i32* @r3, align 4
  %v0_1000630c = call i32 @__pthread_return_void()
  %v0_10006314 = call i32 @__pthread_return_0()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v2_100062bc, i32* @r3, align 4
  %v3_10006320 = load i32, i32* bitcast (i32** @global_var_1001c384.130 to i32*), align 4
  store i32 %v3_10006320, i32* @r31, align 4
  store i32 0, i32* @r28, align 4
  %v0_1000632c = call i32 @__pthread_return_void()
  %v0_100063cc.pr = load i32, i32* @r31, align 4
  %v3_100063cc3 = icmp eq i32 %v0_100063cc.pr, 0
  br i1 %v3_100063cc3, label %dec_label_pc_100063d4, label %dec_label_pc_10006334

dec_label_pc_10006334:                            ; preds = %dec_label_pc_100062b0, %dec_label_pc_100063c8
  %v0_10006350 = phi i32 [ %v3_100063c8, %dec_label_pc_100063c8 ], [ %v0_100063cc.pr, %dec_label_pc_100062b0 ]
  %v1_10006334 = inttoptr i32 %v0_10006350 to i16*
  %v2_10006334 = load i16, i16* %v1_10006334, align 2
  %v3_10006334 = zext i16 %v2_10006334 to i32
  %v1_10006338 = and i32 %v3_10006334, 64
  store i32 %v1_10006338, i32* %r9.global-to-local, align 4
  %v3_10006338 = icmp eq i32 %v1_10006338, 0
  br i1 %v3_10006338, label %dec_label_pc_100063c8, label %dec_label_pc_10006340

dec_label_pc_10006340:                            ; preds = %dec_label_pc_10006334
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006344 = load i32, i32* @global_var_1001c388.128, align 4
  %v3_10006348 = icmp eq i32 %v3_10006344, 2
  br i1 %v3_10006348, label %dec_label_pc_1000636c, label %dec_label_pc_10006350

dec_label_pc_10006350:                            ; preds = %dec_label_pc_10006340
  store i32 %v2_100062bc, i32* @r3, align 4
  %v0_10006360 = call i32 @__pthread_return_void()
  %v0_10006368 = call i32 @__pthread_return_0()
  %v0_1000636c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000636c

dec_label_pc_1000636c:                            ; preds = %dec_label_pc_10006340, %dec_label_pc_10006350
  %v0_10006380 = phi i32 [ %v0_10006350, %dec_label_pc_10006340 ], [ %v0_1000636c.pre, %dec_label_pc_10006350 ]
  %v1_1000636c = inttoptr i32 %v0_10006380 to i16*
  %v2_1000636c = load i16, i16* %v1_1000636c, align 2
  %v3_1000636c = zext i16 %v2_1000636c to i32
  %v0_10006370 = load i32, i32* @r27, align 4
  %v2_10006370 = or i32 %v0_10006370, %v3_1000636c
  %v1_10006374 = and i32 %v2_10006370, 832
  %v1_10006378 = xor i32 %v1_10006374, 320
  store i32 %v1_10006378, i32* %r9.global-to-local, align 4
  %v3_10006378 = icmp eq i32 %v1_10006378, 0
  br i1 %v3_10006378, label %dec_label_pc_10006380, label %dec_label_pc_100063ac

dec_label_pc_10006380:                            ; preds = %dec_label_pc_1000636c
  store i32 %v0_10006380, i32* @r3, align 4
  store i32 268460936, i32* @lr, align 4
  %v0_10006384 = call i32 @__stdio_wcommit()
  %v3_10006388 = icmp eq i32 %v0_10006384, 0
  br i1 %v3_10006388, label %dec_label_pc_10006398, label %dec_label_pc_10006390

dec_label_pc_10006390:                            ; preds = %dec_label_pc_10006380
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_100063ac

dec_label_pc_10006398:                            ; preds = %dec_label_pc_10006380
  %v0_10006398 = load i32, i32* @r31, align 4
  %v1_10006398 = inttoptr i32 %v0_10006398 to i16*
  %v2_10006398 = load i16, i16* %v1_10006398, align 2
  %v3_10006398 = zext i16 %v2_10006398 to i32
  %v1_1000639c = add i32 %v0_10006398, 8
  %v2_1000639c = inttoptr i32 %v1_1000639c to i32*
  %v3_1000639c = load i32, i32* %v2_1000639c, align 4
  store i32 %v3_1000639c, i32* %r9.global-to-local, align 4
  %v1_100063a0 = call i32 @__asm_rlwinm(i32 %v3_10006398, i32 0, i32 26, i32 24)
  %v2_100063a0 = trunc i32 %v1_100063a0 to i16
  %v1_100063a4 = load i32, i32* @r31, align 4
  %v2_100063a4 = add i32 %v1_100063a4, 28
  %v3_100063a4 = inttoptr i32 %v2_100063a4 to i32*
  store i32 %v3_1000639c, i32* %v3_100063a4, align 4
  %v3_100063a8 = load i32, i32* @r31, align 4
  %v4_100063a8 = inttoptr i32 %v3_100063a8 to i16*
  store i16 %v2_100063a0, i16* %v4_100063a8, align 2
  br label %dec_label_pc_100063ac

dec_label_pc_100063ac:                            ; preds = %dec_label_pc_1000636c, %dec_label_pc_10006390, %dec_label_pc_10006398
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100063b0 = load i32, i32* @global_var_1001c388.128, align 4
  %v3_100063b4 = icmp eq i32 %v3_100063b0, 2
  br i1 %v3_100063b4, label %dec_label_pc_100063c8, label %dec_label_pc_100063bc

dec_label_pc_100063bc:                            ; preds = %dec_label_pc_100063ac
  store i32 %v2_100062bc, i32* @r3, align 4
  %v0_100063c4 = call i32 @__pthread_return_void()
  br label %dec_label_pc_100063c8

dec_label_pc_100063c8:                            ; preds = %dec_label_pc_100063ac, %dec_label_pc_10006334, %dec_label_pc_100063bc
  %v0_100063c8 = load i32, i32* @r31, align 4
  %v1_100063c8 = add i32 %v0_100063c8, 32
  %v2_100063c8 = inttoptr i32 %v1_100063c8 to i32*
  %v3_100063c8 = load i32, i32* %v2_100063c8, align 4
  store i32 %v3_100063c8, i32* @r31, align 4
  %v3_100063cc = icmp eq i32 %v3_100063c8, 0
  br i1 %v3_100063cc, label %dec_label_pc_100063d4, label %dec_label_pc_10006334

dec_label_pc_100063d4:                            ; preds = %dec_label_pc_100063c8, %dec_label_pc_100062b0
  store i32 ptrtoint (i32* @global_var_100063d8.136 to i32), i32* @lr, align 4
  %v0_100063d4 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_10006414

dec_label_pc_100063dc:                            ; preds = %dec_label_pc_100062a4
  %v3_100063dc = load i16, i16* %arg1, align 2
  %v4_100063dc = zext i16 %v3_100063dc to i32
  store i32 0, i32* @r28, align 4
  %v1_100063e4 = and i32 %v4_100063dc, 64
  store i32 %v1_100063e4, i32* %r9.global-to-local, align 4
  %v3_100063e4 = icmp eq i32 %v1_100063e4, 0
  br i1 %v3_100063e4, label %dec_label_pc_10006414, label %dec_label_pc_100063ec

dec_label_pc_100063ec:                            ; preds = %dec_label_pc_100063dc
  store i32 268461040, i32* @lr, align 4
  %v0_100063ec = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_100063f4 = icmp eq i32 %v0_100063ec, 0
  br i1 %v3_100063f4, label %dec_label_pc_100063fc, label %dec_label_pc_10006414

dec_label_pc_100063fc:                            ; preds = %dec_label_pc_100063ec
  %v0_100063fc = load i32, i32* @r29, align 4
  %v1_100063fc = inttoptr i32 %v0_100063fc to i16*
  %v2_100063fc = load i16, i16* %v1_100063fc, align 2
  %v3_100063fc = zext i16 %v2_100063fc to i32
  store i32 0, i32* @r28, align 4
  %v1_10006404 = add i32 %v0_100063fc, 8
  %v2_10006404 = inttoptr i32 %v1_10006404 to i32*
  %v3_10006404 = load i32, i32* %v2_10006404, align 4
  store i32 %v3_10006404, i32* %r9.global-to-local, align 4
  %v1_10006408 = call i32 @__asm_rlwinm(i32 %v3_100063fc, i32 0, i32 26, i32 24)
  %v2_10006408 = trunc i32 %v1_10006408 to i16
  %v3_1000640c = load i32, i32* @r29, align 4
  %v4_1000640c = inttoptr i32 %v3_1000640c to i16*
  store i16 %v2_10006408, i16* %v4_1000640c, align 2
  %v0_10006410 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006410 = load i32, i32* @r29, align 4
  %v2_10006410 = add i32 %v1_10006410, 28
  %v3_10006410 = inttoptr i32 %v2_10006410 to i32*
  store i32 %v0_10006410, i32* %v3_10006410, align 4
  br label %dec_label_pc_10006414

dec_label_pc_10006414:                            ; preds = %dec_label_pc_100063ec, %dec_label_pc_100063dc, %dec_label_pc_100063d4, %dec_label_pc_100063fc
  %v0_10006418 = load i32, i32* @r28, align 4
  ret i32 %v0_10006418

; uselistorder directives
  uselistorder i32 %v3_100063c8, { 1, 2, 0 }
  uselistorder i32 %v1_10006378, { 1, 0 }
  uselistorder i32 %v2_100062bc, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_1001c384.130 to i32*), { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32* @global_var_1001c404.124, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i16* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10006414, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100063c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100063ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000636c, { 1, 0 }
  uselistorder label %dec_label_pc_10006334, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_100064d4, label %dec_label_pc_1000644c

dec_label_pc_1000644c:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_100064b43 = add i32 %arg2, -1
  store i32 %v2_100064b43, i32* @r29, align 4
  %v4_100064bc9 = icmp eq i32 %arg2, 1
  br i1 %v4_100064bc9, label %dec_label_pc_100064c0, label %dec_label_pc_10006454

dec_label_pc_10006454:                            ; preds = %dec_label_pc_1000644c, %dec_label_pc_100064b4.backedge
  %v2_10006470 = phi i32 [ %v2_1000647012, %dec_label_pc_100064b4.backedge ], [ %tmp, %dec_label_pc_1000644c ]
  %v0_10006454 = phi i32 [ %v0_100064b8, %dec_label_pc_100064b4.backedge ], [ %arg3, %dec_label_pc_1000644c ]
  %v1_10006454 = add i32 %v0_10006454, 16
  %v2_10006454 = inttoptr i32 %v1_10006454 to i32*
  %v3_10006454 = load i32, i32* %v2_10006454, align 4
  %v1_10006458 = add i32 %v0_10006454, 24
  %v2_10006458 = inttoptr i32 %v1_10006458 to i32*
  %v3_10006458 = load i32, i32* %v2_10006458, align 4
  %v2_1000645c = add i32 %v3_10006454, 1
  store i32 %v2_1000645c, i32* %r11.global-to-local, align 4
  %v3_10006460 = icmp ult i32 %v3_10006454, %v3_10006458
  %v5_10006460 = icmp eq i32 %v3_10006454, %v3_10006458
  store i1 %v5_10006460, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006460, label %dec_label_pc_10006468, label %dec_label_pc_10006484

dec_label_pc_10006468:                            ; preds = %dec_label_pc_10006454
  %v4_10006454 = inttoptr i32 %v3_10006454 to i8*
  %v3_10006468 = load i8, i8* %v4_10006454, align 1
  %v3_1000646c = icmp eq i8 %v3_10006468, 10
  store i1 %v3_1000646c, i1* %cr7_eq.global-to-local, align 1
  %v3_10006470 = inttoptr i32 %v2_10006470 to i8*
  store i8 %v3_10006468, i8* %v3_10006470, align 1
  %v0_10006474 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006474 = load i32, i32* @r30, align 4
  %v2_10006474 = add i32 %v1_10006474, 16
  %v3_10006474 = inttoptr i32 %v2_10006474 to i32*
  store i32 %v0_10006474, i32* %v3_10006474, align 4
  %v0_10006478 = load i32, i32* @r31, align 4
  %v1_10006478 = add i32 %v0_10006478, 1
  store i32 %v1_10006478, i32* @r31, align 4
  %v0_1000647c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000647c, label %dec_label_pc_100064c0, label %dec_label_pc_100064b4.backedge

dec_label_pc_10006484:                            ; preds = %dec_label_pc_10006454
  %v1_100064b810 = inttoptr i32 %v0_10006454 to i16*
  store i32 268461192, i32* @lr, align 4
  %v5_10006484 = call i32 @getc_unlocked(i16* %v1_100064b810, i32 %v3_10006454)
  %v6_10006484 = trunc i32 %v5_10006484 to i8
  %v4_10006488 = icmp eq i8 %v6_10006484, -1
  store i1 %v4_10006488, i1* %cr7_eq.global-to-local, align 1
  %v3_10006490 = icmp eq i8 %v6_10006484, 10
  store i1 %v3_10006490, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10006488, label %dec_label_pc_10006498, label %dec_label_pc_100064a8

dec_label_pc_10006498:                            ; preds = %dec_label_pc_10006484
  %v0_10006498 = load i32, i32* @r30, align 4
  %v1_10006498 = inttoptr i32 %v0_10006498 to i16*
  %v2_10006498 = load i16, i16* %v1_10006498, align 2
  %v1_1000649c = and i16 %v2_10006498, 8
  %v3_1000649c = icmp eq i16 %v1_1000649c, 0
  br i1 %v3_1000649c, label %dec_label_pc_10006498.dec_label_pc_100064c0_crit_edge, label %dec_label_pc_100064d4

dec_label_pc_10006498.dec_label_pc_100064c0_crit_edge: ; preds = %dec_label_pc_10006498
  %v0_100064c0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100064c0

dec_label_pc_100064a8:                            ; preds = %dec_label_pc_10006484
  %v3_100064a8 = load i32, i32* @r31, align 4
  %v4_100064a8 = inttoptr i32 %v3_100064a8 to i8*
  store i8 %v6_10006484, i8* %v4_100064a8, align 1
  %v0_100064ac = load i32, i32* @r31, align 4
  %v1_100064ac = add i32 %v0_100064ac, 1
  store i32 %v1_100064ac, i32* @r31, align 4
  %v0_100064b0 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_100064b0, label %dec_label_pc_100064c0, label %dec_label_pc_100064b4.backedge

dec_label_pc_100064b4.backedge:                   ; preds = %dec_label_pc_100064a8, %dec_label_pc_10006468
  %v2_1000647012 = phi i32 [ %v1_100064ac, %dec_label_pc_100064a8 ], [ %v1_10006478, %dec_label_pc_10006468 ]
  %v0_100064b4 = load i32, i32* @r29, align 4
  %v2_100064b4 = add i32 %v0_100064b4, -1
  store i32 %v2_100064b4, i32* @r29, align 4
  %v0_100064b8 = load i32, i32* @r30, align 4
  %v4_100064bc = icmp eq i32 %v0_100064b4, 1
  br i1 %v4_100064bc, label %dec_label_pc_100064c0, label %dec_label_pc_10006454

dec_label_pc_100064c0:                            ; preds = %dec_label_pc_100064a8, %dec_label_pc_100064b4.backedge, %dec_label_pc_10006468, %dec_label_pc_1000644c, %dec_label_pc_10006498.dec_label_pc_100064c0_crit_edge
  %v2_100064cc = phi i32 [ %v0_100064c0.pre, %dec_label_pc_10006498.dec_label_pc_100064c0_crit_edge ], [ %tmp, %dec_label_pc_1000644c ], [ %v1_10006478, %dec_label_pc_10006468 ], [ %v2_1000647012, %dec_label_pc_100064b4.backedge ], [ %v1_100064ac, %dec_label_pc_100064a8 ]
  %v1_100064c0 = load i32, i32* @r28, align 4
  %v3_100064c0 = icmp ugt i32 %v2_100064cc, %v1_100064c0
  %v4_100064c0 = icmp eq i32 %v2_100064cc, %v1_100064c0
  store i1 %v4_100064c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064c0, label %dec_label_pc_100064c8, label %dec_label_pc_100064d4

dec_label_pc_100064c8:                            ; preds = %dec_label_pc_100064c0
  %v3_100064cc = inttoptr i32 %v2_100064cc to i8*
  store i8 0, i8* %v3_100064cc, align 1
  %v0_100064dc.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100064d8

dec_label_pc_100064d4:                            ; preds = %dec_label_pc_10006498, %dec_label_pc_100064c0, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100064d8

dec_label_pc_100064d8:                            ; preds = %dec_label_pc_100064c8, %dec_label_pc_100064d4
  %v0_100064dc = phi i32 [ %v0_100064dc.pre, %dec_label_pc_100064c8 ], [ 0, %dec_label_pc_100064d4 ]
  ret i32 %v0_100064dc

; uselistorder directives
  uselistorder i32 %v2_100064cc, { 0, 2, 1 }
  uselistorder i8 %v6_10006484, { 1, 0, 2 }
  uselistorder i32 %v3_10006458, { 1, 0 }
  uselistorder i32 %v3_10006454, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_10006454, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100064d8, { 1, 0 }
  uselistorder label %dec_label_pc_100064d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100064c0, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_10006454, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_100064f0 = urem i32 %arg1, 256
  store i32 %v1_100064f0, i32* %r4.global-to-local, align 4
  %v0_100065081 = load i32, i32* @r3, align 4
  %v1_100065082 = urem i32 %v0_100065081, 4
  %v3_100065084 = icmp eq i32 %v1_100065082, 0
  br i1 %v3_100065084, label %dec_label_pc_10006510, label %dec_label_pc_100064f8

dec_label_pc_100064f8:                            ; preds = %entry, %dec_label_pc_100064f8
  %v1_100064fc = phi i32 [ %v0_10006510.pre, %dec_label_pc_100064f8 ], [ %v1_100064f0, %entry ]
  %v0_100064f8 = phi i32 [ %v1_10006504, %dec_label_pc_100064f8 ], [ %v0_100065081, %entry ]
  %v1_100064f8 = inttoptr i32 %v0_100064f8 to i8*
  %v2_100064f8 = load i8, i8* %v1_100064f8, align 1
  %v3_100064f8 = zext i8 %v2_100064f8 to i32
  %v4_100064fc = icmp eq i32 %v3_100064f8, %v1_100064fc
  %v0_10006500 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100064fc, i32 %v0_10006500)
  %v0_10006504 = load i32, i32* @r3, align 4
  %v1_10006504 = add i32 %v0_10006504, 1
  store i32 %v1_10006504, i32* @r3, align 4
  %v1_10006508 = urem i32 %v1_10006504, 4
  %v3_10006508 = icmp eq i32 %v1_10006508, 0
  %v0_10006510.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_10006508, label %dec_label_pc_10006510, label %dec_label_pc_100064f8

dec_label_pc_10006510:                            ; preds = %dec_label_pc_100064f8, %entry
  %v0_100065289 = phi i32 [ %v0_100065081, %entry ], [ %v1_10006504, %dec_label_pc_100064f8 ]
  %v0_10006510 = phi i32 [ %v1_100064f0, %entry ], [ %v0_10006510.pre, %dec_label_pc_100064f8 ]
  %v1_10006510 = mul i32 %v0_10006510, 256
  %v2_10006518 = or i32 %v1_10006510, %v0_10006510
  %v1_10006520 = mul i32 %v2_10006518, 65536
  %v2_10006524 = or i32 %v1_10006520, %v2_10006518
  br label %dec_label_pc_10006528

dec_label_pc_10006528:                            ; preds = %dec_label_pc_10006594, %dec_label_pc_10006528, %dec_label_pc_10006510
  %v0_10006564 = phi i32 [ %v0_100065289, %dec_label_pc_10006510 ], [ %v1_1000652c, %dec_label_pc_10006528 ], [ %v1_1000652c, %dec_label_pc_10006594 ]
  %v1_10006528 = inttoptr i32 %v0_10006564 to i32*
  %v2_10006528 = load i32, i32* %v1_10006528, align 4
  %v1_1000652c = add i32 %v0_10006564, 4
  %v1_10006530 = add i32 %v0_10006564, 2
  %v2_10006534 = xor i32 %v2_10006528, %v2_10006524
  %v1_1000653c = add i32 %v2_10006534, 2130640639
  %v2_10006540 = xor i32 %v1_1000653c, %v2_10006534
  %v1_10006544 = add i32 %v0_10006564, 1
  %v2_10006548 = and i32 %v2_10006540, -2130640640
  %v6_10006548 = icmp eq i32 %v2_10006548, -2130640640
  br i1 %v6_10006548, label %dec_label_pc_10006528, label %dec_label_pc_10006554

dec_label_pc_10006554:                            ; preds = %dec_label_pc_10006528
  %v2_10006554 = inttoptr i32 %v0_10006564 to i8*
  %v3_10006554 = load i8, i8* %v2_10006554, align 1
  %v4_10006554 = zext i8 %v3_10006554 to i32
  %v1_10006558 = add i32 %v0_10006564, 3
  %v4_1000655c = icmp eq i32 %v4_10006554, %v0_10006510
  br i1 %v4_1000655c, label %dec_label_pc_10006564, label %dec_label_pc_1000656c

dec_label_pc_10006564:                            ; preds = %dec_label_pc_10006554
  ret i32 %v0_10006564

dec_label_pc_1000656c:                            ; preds = %dec_label_pc_10006554
  %v2_1000656c = inttoptr i32 %v1_10006544 to i8*
  %v3_1000656c = load i8, i8* %v2_1000656c, align 1
  %v4_1000656c = zext i8 %v3_1000656c to i32
  %v4_10006570 = icmp eq i32 %v4_1000656c, %v0_10006510
  br i1 %v4_10006570, label %dec_label_pc_10006578, label %dec_label_pc_10006580

dec_label_pc_10006578:                            ; preds = %dec_label_pc_1000656c
  ret i32 %v1_10006544

dec_label_pc_10006580:                            ; preds = %dec_label_pc_1000656c
  %v2_10006580 = inttoptr i32 %v1_10006530 to i8*
  %v3_10006580 = load i8, i8* %v2_10006580, align 1
  %v4_10006580 = zext i8 %v3_10006580 to i32
  %v4_10006584 = icmp eq i32 %v4_10006580, %v0_10006510
  br i1 %v4_10006584, label %dec_label_pc_1000658c, label %dec_label_pc_10006594

dec_label_pc_1000658c:                            ; preds = %dec_label_pc_10006580
  ret i32 %v1_10006530

dec_label_pc_10006594:                            ; preds = %dec_label_pc_10006580
  %v2_10006594 = inttoptr i32 %v1_10006558 to i8*
  %v3_10006594 = load i8, i8* %v2_10006594, align 1
  %v4_10006594 = zext i8 %v3_10006594 to i32
  %v4_10006598 = icmp eq i32 %v4_10006594, %v0_10006510
  br i1 %v4_10006598, label %dec_label_pc_100065a0, label %dec_label_pc_10006528

dec_label_pc_100065a0:                            ; preds = %dec_label_pc_10006594
  ret i32 %v1_10006558

; uselistorder directives
  uselistorder i32 %v1_1000652c, { 1, 0 }
  uselistorder i32 %v0_10006564, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_10006518, { 1, 0 }
  uselistorder i32 %v0_10006510, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10006504, { 1, 0, 3, 2 }
  uselistorder i32 %v0_100065081, { 2, 1, 0 }
  uselistorder i32 %v1_100064f0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100064f8, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100065ac

dec_label_pc_100065ac:                            ; preds = %dec_label_pc_100065ac, %entry
  %v0_100065ac = phi i32 [ %v1_100065b0, %dec_label_pc_100065ac ], [ %tmp, %entry ]
  %v1_100065ac = inttoptr i32 %v0_100065ac to i8*
  %v2_100065ac = load i8, i8* %v1_100065ac, align 1
  %v1_100065b0 = add i32 %v0_100065ac, 1
  store i32 %v1_100065b0, i32* %r11.global-to-local, align 4
  %v3_100065b4 = icmp eq i8 %v2_100065ac, 0
  store i1 %v3_100065b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065b4, label %dec_label_pc_100065bc, label %dec_label_pc_100065ac

dec_label_pc_100065bc:                            ; preds = %dec_label_pc_100065ac
  %v3_100065bc = icmp eq i32 %arg2, 3
  store i1 %v3_100065bc, i1* %cr7_eq.global-to-local, align 1
  %v1_100065c0 = add i32 %v0_100065ac, -1
  store i32 %v1_100065c0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_1000665c, label %dec_label_pc_100065cc

dec_label_pc_100065cc:                            ; preds = %dec_label_pc_100065bc
  %v1_100065cc = udiv i32 %arg2, 4
  store i32 %v1_100065cc, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100065d4

dec_label_pc_100065d4:                            ; preds = %dec_label_pc_100065d4.dec_label_pc_100065d4_crit_edge, %dec_label_pc_100065cc
  %v2_100065e4 = phi i32 [ %v0_100065d8.pre, %dec_label_pc_100065d4.dec_label_pc_100065d4_crit_edge ], [ %v1_100065c0, %dec_label_pc_100065cc ]
  %v0_100065d4 = load i32, i32* @r4, align 4
  %v1_100065d4 = inttoptr i32 %v0_100065d4 to i8*
  %v2_100065d4 = load i8, i8* %v1_100065d4, align 1
  %v1_100065d8 = add i32 %v2_100065e4, 1
  store i32 %v1_100065d8, i32* %r9.global-to-local, align 4
  %v1_100065dc = add i32 %v2_100065e4, 2
  store i32 %v1_100065dc, i32* %r7.global-to-local, align 4
  %v3_100065e0 = icmp eq i8 %v2_100065d4, 0
  store i1 %v3_100065e0, i1* %cr7_eq.global-to-local, align 1
  %v4_100065e4 = inttoptr i32 %v1_100065d8 to i8*
  store i8 %v2_100065d4, i8* %v4_100065e4, align 1
  %v0_100065e8 = load i32, i32* @r4, align 4
  %v1_100065e8 = add i32 %v0_100065e8, 1
  store i32 %v1_100065e8, i32* %r11.global-to-local, align 4
  %v0_100065ec = load i32, i32* @lr, align 4
  %v1_100065ec = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100065ec, i32 %v0_100065ec)
  %v0_100065f0 = load i32, i32* @r4, align 4
  %v1_100065f0 = add i32 %v0_100065f0, 1
  %v2_100065f0 = inttoptr i32 %v1_100065f0 to i8*
  %v3_100065f0 = load i8, i8* %v2_100065f0, align 1
  %v0_100065f4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100065f4 = add i32 %v0_100065f4, 1
  store i32 %v1_100065f4, i32* %r8.global-to-local, align 4
  %v0_100065f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100065f8 = add i32 %v0_100065f8, 1
  store i32 %v1_100065f8, i32* %r10.global-to-local, align 4
  %v3_100065fc = icmp eq i8 %v3_100065f0, 0
  store i1 %v3_100065fc, i1* %cr7_eq.global-to-local, align 1
  %v2_10006600 = load i32, i32* %r9.global-to-local, align 4
  %v3_10006600 = add i32 %v2_10006600, 1
  %v4_10006600 = inttoptr i32 %v3_10006600 to i8*
  store i8 %v3_100065f0, i8* %v4_10006600, align 1
  %v0_10006604 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006604 = add i32 %v0_10006604, 1
  store i32 %v1_10006604, i32* %r9.global-to-local, align 4
  %v1_10006608 = add i32 %v0_10006604, 2
  store i32 %v1_10006608, i32* @r4, align 4
  %v0_1000660c = load i32, i32* @lr, align 4
  %v1_1000660c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000660c, i32 %v0_1000660c)
  %v0_10006610 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006610 = add i32 %v0_10006610, 1
  %v2_10006610 = inttoptr i32 %v1_10006610 to i8*
  %v3_10006610 = load i8, i8* %v2_10006610, align 1
  %v0_10006614 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006614 = add i32 %v0_10006614, 1
  store i32 %v1_10006614, i32* %r11.global-to-local, align 4
  %v3_10006618 = icmp eq i8 %v3_10006610, 0
  store i1 %v3_10006618, i1* %cr7_eq.global-to-local, align 1
  %v2_1000661c = load i32, i32* %r7.global-to-local, align 4
  %v3_1000661c = add i32 %v2_1000661c, 1
  %v4_1000661c = inttoptr i32 %v3_1000661c to i8*
  store i8 %v3_10006610, i8* %v4_1000661c, align 1
  %v0_10006620 = load i32, i32* @lr, align 4
  %v1_10006620 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10006620, i32 %v0_10006620)
  %v0_10006624 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006624 = add i32 %v0_10006624, 1
  %v2_10006624 = inttoptr i32 %v1_10006624 to i8*
  %v3_10006624 = load i8, i8* %v2_10006624, align 1
  %v4_10006624 = zext i8 %v3_10006624 to i32
  store i32 %v4_10006624, i32* %r9.global-to-local, align 4
  %v3_10006628 = icmp eq i8 %v3_10006624, 0
  store i1 %v3_10006628, i1* %cr7_eq.global-to-local, align 1
  %v2_1000662c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000662c = add i32 %v2_1000662c, 1
  %v4_1000662c = inttoptr i32 %v3_1000662c to i8*
  store i8 %v3_10006624, i8* %v4_1000662c, align 1
  %v0_10006630 = load i32, i32* @lr, align 4
  %v1_10006630 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10006630, i32 %v0_10006630)
  %v0_10006634 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006634 = add i32 %v0_10006634, -1
  store i32 %v1_10006634, i32* %ctr.global-to-local, align 4
  %v2_10006634 = icmp eq i32 %v1_10006634, 0
  br i1 %v2_10006634, label %dec_label_pc_10006638, label %dec_label_pc_100065d4.dec_label_pc_100065d4_crit_edge

dec_label_pc_100065d4.dec_label_pc_100065d4_crit_edge: ; preds = %dec_label_pc_100065d4
  %v0_100065d8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100065d4

dec_label_pc_10006638:                            ; preds = %dec_label_pc_100065d4
  %v0_10006638 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006638 = urem i32 %v0_10006638, 4
  store i32 %v1_10006638, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000665c

dec_label_pc_10006640:                            ; preds = %dec_label_pc_1000665c, %dec_label_pc_10006640.dec_label_pc_10006640_crit_edge
  %v0_10006644 = phi i32 [ %v0_10006644.pre, %dec_label_pc_10006640.dec_label_pc_10006640_crit_edge ], [ %v0_1000665c, %dec_label_pc_1000665c ]
  %v0_10006640 = load i32, i32* @r4, align 4
  %v1_10006640 = inttoptr i32 %v0_10006640 to i8*
  %v2_10006640 = load i8, i8* %v1_10006640, align 1
  %v3_10006640 = zext i8 %v2_10006640 to i32
  store i32 %v3_10006640, i32* %r9.global-to-local, align 4
  %v1_10006644 = add i32 %v0_10006644, -1
  store i32 %v1_10006644, i32* %r5.global-to-local, align 4
  %v1_10006648 = add i32 %v0_10006640, 1
  store i32 %v1_10006648, i32* @r4, align 4
  %v3_1000664c = icmp eq i8 %v2_10006640, 0
  store i1 %v3_1000664c, i1* %cr7_eq.global-to-local, align 1
  %v2_10006650 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006650 = add i32 %v2_10006650, 1
  %v4_10006650 = inttoptr i32 %v3_10006650 to i8*
  store i8 %v2_10006640, i8* %v4_10006650, align 1
  store i32 %v3_10006650, i32* %r11.global-to-local, align 4
  %v0_10006654 = load i32, i32* @lr, align 4
  %v1_10006654 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10006654, i32 %v0_10006654)
  %v0_10006664 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006664 = add i32 %v0_10006664, -1
  store i32 %v1_10006664, i32* %ctr.global-to-local, align 4
  %v2_10006664 = icmp eq i32 %v1_10006664, 0
  br i1 %v2_10006664, label %dec_label_pc_10006668, label %dec_label_pc_10006640.dec_label_pc_10006640_crit_edge

dec_label_pc_10006640.dec_label_pc_10006640_crit_edge: ; preds = %dec_label_pc_10006640
  %v0_10006644.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10006640

dec_label_pc_1000665c:                            ; preds = %dec_label_pc_100065bc, %dec_label_pc_10006638
  %v0_1000665c = phi i32 [ %arg2, %dec_label_pc_100065bc ], [ %v1_10006638, %dec_label_pc_10006638 ]
  store i32 %v0_1000665c, i32* %ctr.global-to-local, align 4
  %v2_100066643 = icmp eq i32 %v0_1000665c, 0
  br i1 %v2_100066643, label %dec_label_pc_10006668, label %dec_label_pc_10006640

dec_label_pc_10006668:                            ; preds = %dec_label_pc_10006640, %dec_label_pc_1000665c
  %v0_10006668 = load i32, i32* %r9.global-to-local, align 4
  %v3_10006668 = icmp eq i32 %v0_10006668, 0
  store i1 %v3_10006668, i1* %cr7_eq.global-to-local, align 1
  %v0_1000666c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10006668, i32 %v0_1000666c)
  %v0_10006670 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006670 = trunc i32 %v0_10006670 to i8
  %v2_10006670 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006670 = add i32 %v2_10006670, 1
  %v4_10006670 = inttoptr i32 %v3_10006670 to i8*
  store i8 %v1_10006670, i8* %v4_10006670, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_1000665c, { 1, 2, 0 }
  uselistorder i32 %v1_10006664, { 1, 0 }
  uselistorder i32 %v1_10006638, { 1, 0 }
  uselistorder i32 %v1_10006634, { 1, 0 }
  uselistorder i32 %v2_100065e4, { 1, 0 }
  uselistorder i32 %v1_100065b0, { 1, 0 }
  uselistorder i32 %v0_100065ac, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 5, 0, 4, 1, 2, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_10006668, { 1, 0 }
  uselistorder label %dec_label_pc_1000665c, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100066a81 = load i32, i32* @r3, align 4
  %v1_100066a82 = inttoptr i32 %v0_100066a81 to i8*
  %v2_100066a83 = load i8, i8* %v1_100066a82, align 1
  %v3_100066ac6 = icmp eq i8 %v2_100066a83, 0
  br i1 %v3_100066ac6, label %dec_label_pc_100066bc, label %dec_label_pc_100066b4

dec_label_pc_10006684:                            ; preds = %dec_label_pc_10006684, %dec_label_pc_100066b4
  %v0_10006684 = phi i32 [ %v1_10006688, %dec_label_pc_10006684 ], [ %tmp, %dec_label_pc_100066b4 ]
  %v1_10006684 = inttoptr i32 %v0_10006684 to i8*
  %v2_10006684 = load i8, i8* %v1_10006684, align 1
  %v1_10006688 = add i32 %v0_10006684, 1
  %v3_1000668c = icmp eq i8 %v2_10006684, 0
  %v4_10006690 = icmp eq i8 %v0_100066908.in, %v2_10006684
  %brmerge = or i1 %v3_1000668c, %v4_10006690
  br i1 %brmerge, label %dec_label_pc_10006698, label %dec_label_pc_10006684

dec_label_pc_10006698:                            ; preds = %dec_label_pc_10006684
  br i1 %v3_1000668c, label %dec_label_pc_100066bc, label %dec_label_pc_100066a0

dec_label_pc_100066a0:                            ; preds = %dec_label_pc_10006698
  %v1_100066a0 = add i32 %v0_100066a0, 1
  %v1_100066a4 = add i32 %v0_100066a4, 1
  %v1_100066a8 = inttoptr i32 %v1_100066a4 to i8*
  %v2_100066a8 = load i8, i8* %v1_100066a8, align 1
  %v3_100066ac = icmp eq i8 %v2_100066a8, 0
  br i1 %v3_100066ac, label %dec_label_pc_100066bc, label %dec_label_pc_100066b4

dec_label_pc_100066b4:                            ; preds = %entry, %dec_label_pc_100066a0
  %v0_100066a4 = phi i32 [ %v1_100066a4, %dec_label_pc_100066a0 ], [ %v0_100066a81, %entry ]
  %v0_100066a0 = phi i32 [ %v1_100066a0, %dec_label_pc_100066a0 ], [ 0, %entry ]
  %v0_100066908.in = phi i8 [ %v2_100066a8, %dec_label_pc_100066a0 ], [ %v2_100066a83, %entry ]
  br label %dec_label_pc_10006684

dec_label_pc_100066bc:                            ; preds = %dec_label_pc_100066a0, %dec_label_pc_10006698, %entry
  %v0_100066bc = phi i32 [ 0, %entry ], [ %v1_100066a0, %dec_label_pc_100066a0 ], [ %v0_100066a0, %dec_label_pc_10006698 ]
  ret i32 %v0_100066bc

; uselistorder directives
  uselistorder i32 %v0_10006684, { 1, 0 }
  uselistorder label %dec_label_pc_100066b4, { 1, 0 }
  uselistorder label %dec_label_pc_10006684, { 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_100066d8 = call i32 @__GI_strlen()
  %v1_100066dc = add i32 %v0_100066d8, 1
  store i32 %v1_100066dc, i32* @r29, align 4
  store i32 268461800, i32* @lr, align 4
  %v1_100066e4 = call i32 @malloc(i32 %v1_100066dc)
  store i32 %v1_100066e4, i32* @r3, align 4
  %v0_100066e8 = load i32, i32* @r28, align 4
  store i32 %v0_100066e8, i32* @r4, align 4
  store i32 %v1_100066e4, i32* @r31, align 4
  %v3_100066ec = icmp eq i32 %v1_100066e4, 0
  %v0_100066f0 = load i32, i32* @r29, align 4
  store i32 %v0_100066f0, i32* @r5, align 4
  br i1 %v3_100066ec, label %dec_label_pc_100066fc, label %dec_label_pc_100066f8

dec_label_pc_100066f8:                            ; preds = %entry
  store i32 268461820, i32* @lr, align 4
  %v0_100066f8 = call i32 @memcpy()
  %v0_10006700.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100066fc

dec_label_pc_100066fc:                            ; preds = %entry, %dec_label_pc_100066f8
  %v0_10006700 = phi i32 [ 0, %entry ], [ %v0_10006700.pre, %dec_label_pc_100066f8 ]
  ret i32 %v0_10006700

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 5, 4, 3, 2, 1, 7, 6, 0 }
  uselistorder label %dec_label_pc_100066fc, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268461864, i32* @lr, align 4
  %v2_10006724 = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10006744 = load i32, i32* @lr, align 4
  store i32 %v0_10006744, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10006754 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10006754, i32* @r5, align 4
  store i32 268461928, i32* @lr, align 4
  %v2_10006764 = call i32 @ioctl(i32 1076655123, i32 %v2_10006754)
  %v2_10006768 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006768, i32* @r4, align 4
  store i32 %v2_10006764, i32* @r30, align 4
  %v3_1000676c = icmp eq i32 %v2_10006764, 0
  store i32 19, i32* @r5, align 4
  %v0_10006774 = load i32, i32* @r31, align 4
  br i1 %v3_1000676c, label %dec_label_pc_1000677c, label %dec_label_pc_100067c4

dec_label_pc_1000677c:                            ; preds = %entry
  %v1_10006774 = add i32 %v0_10006774, 17
  %v3_10006794 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10006794, i32* %r0.global-to-local, align 4
  %v2_10006798 = add i32 %v0_10006774, 4
  %v3_10006798 = inttoptr i32 %v2_10006798 to i32*
  store i32 %tmp7, i32* %v3_10006798, align 4
  %v0_1000679c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000679c = load i32, i32* @r31, align 4
  %v2_1000679c = inttoptr i32 %v1_1000679c to i32*
  store i32 %v0_1000679c, i32* %v2_1000679c, align 4
  %v0_100067a0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100067a0 = load i32, i32* @r31, align 4
  %v2_100067a0 = add i32 %v1_100067a0, 8
  %v3_100067a0 = inttoptr i32 %v2_100067a0 to i32*
  store i32 %v0_100067a0, i32* %v3_100067a0, align 4
  %v0_100067a4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100067a4 = load i32, i32* @r31, align 4
  %v2_100067a4 = add i32 %v1_100067a4, 12
  %v3_100067a4 = inttoptr i32 %v2_100067a4 to i32*
  store i32 %v0_100067a4, i32* %v3_100067a4, align 4
  %v3_100067a8 = load i32, i32* @r31, align 4
  %v4_100067a8 = add i32 %v3_100067a8, 16
  %v5_100067a8 = inttoptr i32 %v4_100067a8 to i8*
  store i8 %tmp4, i8* %v5_100067a8, align 1
  %v1_100067ac = load i32, i32* @r31, align 4
  %v2_100067ac = add i32 %v1_100067ac, 52
  %v3_100067ac = inttoptr i32 %v2_100067ac to i32*
  store i32 %tmp3, i32* %v3_100067ac, align 4
  %v1_100067b0 = load i32, i32* @r31, align 4
  %v2_100067b0 = add i32 %v1_100067b0, 56
  %v3_100067b0 = inttoptr i32 %v2_100067b0 to i32*
  store i32 %tmp2, i32* %v3_100067b0, align 4
  store i32 268462008, i32* @lr, align 4
  %v6_100067b4 = sext i8 %tmp4 to i32
  %v8_100067b4 = call i32 @__GI_mempcpy(i32 %v1_10006774, i32 %v2_10006768, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_100067b4, i32 %tmp7)
  store i32 268462020, i32* @lr, align 4
  %v3_100067c0 = call i32 @__GI_memset(i32 %v8_100067b4, i32 0, i32 13)
  %v0_100067c8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100067c4

dec_label_pc_100067c4:                            ; preds = %entry, %dec_label_pc_1000677c
  %v0_100067c8 = phi i32 [ %v2_10006764, %entry ], [ %v0_100067c8.pre, %dec_label_pc_1000677c ]
  store i32 %v0_10006744, i32* %r0.global-to-local, align 4
  ret i32 %v0_100067c8

; uselistorder directives
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder label %dec_label_pc_100067c4, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100067dc = load i32, i32* @lr, align 4
  store i32 %v0_100067dc, i32* %r0.global-to-local, align 4
  %v0_100067e4 = call i32 @__asm_mfcr()
  store i32 %v0_100067e4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_100067f0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100067f0, i32* %r7.global-to-local, align 4
  %v0_100067f4 = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000685c

dec_label_pc_1000680c:                            ; preds = %dec_label_pc_1000685c
  %v3_1000680c = icmp eq i32 %v0_10006880, 4
  store i1 %v3_1000680c, i1* %cr7_eq.global-to-local, align 1
  %v0_10006810 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10006810, label %dec_label_pc_10006848, label %dec_label_pc_10006814

dec_label_pc_10006814:                            ; preds = %dec_label_pc_1000680c
  %v0_10006814 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006814 = inttoptr i32 %v0_10006814 to i8*
  %v2_10006814 = load i8, i8* %v1_10006814, align 1
  %v3_10006814 = zext i8 %v2_10006814 to i32
  %v1_10006818 = mul nuw nsw i32 %v3_10006814, 10
  %v1_1000681c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000681c = add i32 %v1_10006818, %v1_1000681c
  %v1_10006820 = add i32 %v2_1000681c, -48
  store i32 %v1_10006820, i32* %r0.global-to-local, align 4
  %v2_10006824 = icmp ugt i32 %v1_10006820, 255
  %v3_10006824 = icmp eq i32 %v1_10006820, 255
  store i1 %v3_10006824, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006824, label %dec_label_pc_100068a4, label %dec_label_pc_1000682c

dec_label_pc_1000682c:                            ; preds = %dec_label_pc_10006814
  %v1_1000682c = trunc i32 %v1_10006820 to i8
  store i8 %v1_1000682c, i8* %v1_10006814, align 1
  %v0_10006830 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10006830, label %dec_label_pc_10006834, label %dec_label_pc_1000685c.backedge

dec_label_pc_10006834:                            ; preds = %dec_label_pc_1000682c
  %v0_10006834 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006834 = add i32 %v0_10006834, 1
  store i32 %v1_10006834, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_1000683c = icmp sgt i32 %v1_10006834, 4
  %v3_1000683c = icmp eq i32 %v1_10006834, 4
  store i1 %v3_1000683c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000683c, label %dec_label_pc_100068a4, label %dec_label_pc_1000685c.backedge

dec_label_pc_10006848:                            ; preds = %dec_label_pc_1000680c
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_1000684c = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_1000684c.not = xor i1 %v0_1000684c, true
  %v0_10006850 = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1000680c, %v0_10006850
  %or.cond = or i1 %brmerge, %v0_1000684c.not
  br i1 %or.cond, label %dec_label_pc_100068a4, label %dec_label_pc_10006858

dec_label_pc_10006858:                            ; preds = %dec_label_pc_10006848
  %v0_10006858 = load i32, i32* %r6.global-to-local, align 4
  %v1_10006858 = trunc i32 %v0_10006858 to i8
  %v2_10006858 = load i32, i32* %r7.global-to-local, align 4
  %v3_10006858 = add i32 %v2_10006858, 1
  %v4_10006858 = inttoptr i32 %v3_10006858 to i8*
  store i8 %v1_10006858, i8* %v4_10006858, align 1
  store i32 %v3_10006858, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000685c.backedge

dec_label_pc_1000685c.backedge:                   ; preds = %dec_label_pc_10006858, %dec_label_pc_1000682c, %dec_label_pc_10006834
  %v0_1000685c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10006860.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000685c

dec_label_pc_1000685c:                            ; preds = %dec_label_pc_1000685c.backedge, %entry
  %v0_10006860 = phi i32 [ %v0_10006860.pre, %dec_label_pc_1000685c.backedge ], [ 0, %entry ]
  %v0_10006864 = phi i32 [ %v0_1000685c.pre, %dec_label_pc_1000685c.backedge ], [ %v0_100067e4, %entry ]
  %v1_1000685c = inttoptr i32 %v0_10006864 to i8*
  %v2_1000685c = load i8, i8* %v1_1000685c, align 1
  %v3_1000685c = zext i8 %v2_1000685c to i32
  store i32 %v3_1000685c, i32* %r11.global-to-local, align 4
  %v3_10006860 = icmp eq i32 %v0_10006860, 0
  store i1 %v3_10006860, i1* %cr4_eq.global-to-local, align 1
  %v1_10006864 = add i32 %v0_10006864, 1
  store i32 %v1_10006864, i32* %r3.global-to-local, align 4
  %v3_10006868 = icmp eq i8 %v2_1000685c, 0
  store i1 %v3_10006868, i1* %cr7_eq.global-to-local, align 1
  %v1_1000686c = add nsw i32 %v3_1000685c, -48
  store i32 %v1_1000686c, i32* %r0.global-to-local, align 4
  %v2_10006870 = icmp ugt i32 %v1_1000686c, 9
  store i1 %v2_10006870, i1* %cr6_gt.global-to-local, align 1
  %v3_10006874 = icmp eq i8 %v2_1000685c, 46
  store i1 %v3_10006874, i1* %cr1_eq.global-to-local, align 1
  %v0_10006878 = load i4, i4* @cr4, align 1
  %v1_10006878 = call %1 @__asm_mcrf_cr0_write(i4 %v0_10006878)
  %v4_10006878 = extractvalue %1 %v1_10006878, 2
  store i1 %v4_10006878, i1* %cr0_eq.global-to-local, align 1
  %v0_1000687c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_10006880 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_1000687c, label %dec_label_pc_10006880, label %dec_label_pc_1000680c

dec_label_pc_10006880:                            ; preds = %dec_label_pc_1000685c
  %v3_10006880 = icmp eq i32 %v0_10006880, 3
  store i1 %v3_10006880, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_10006880, 4
  br i1 %tmp9, label %dec_label_pc_100068a4, label %dec_label_pc_10006888

dec_label_pc_10006888:                            ; preds = %dec_label_pc_10006880
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_100067f0, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006898.137 to i32), i32* @lr, align 4
  %v0_10006894 = call i32 @memcpy()
  br label %dec_label_pc_100068a4

dec_label_pc_100068a4:                            ; preds = %dec_label_pc_10006848, %dec_label_pc_10006814, %dec_label_pc_10006834, %dec_label_pc_10006880, %dec_label_pc_10006888
  %storemerge = phi i32 [ 1, %dec_label_pc_10006888 ], [ 0, %dec_label_pc_10006880 ], [ 0, %dec_label_pc_10006834 ], [ 0, %dec_label_pc_10006814 ], [ 0, %dec_label_pc_10006848 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_100067f4, i32* %r0.global-to-local, align 4
  %v1_100068b4 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100067e4)
  %v4_100068b4 = extractvalue %0 %v1_100068b4, 2
  store i1 %v4_100068b4, i1* %cr0_eq.global-to-local, align 1
  %v9_100068b4 = extractvalue %0 %v1_100068b4, 7
  store i4 %v9_100068b4, i4* @cr4, align 1
  %v0_100068b8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100068b8

; uselistorder directives
  uselistorder i32 %v1_10006834, { 1, 0, 2 }
  uselistorder i32 %v1_10006820, { 0, 2, 1, 3 }
  uselistorder i32 %v0_100067e4, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_100068a4, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000685c.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_100068bc = icmp eq i32 %arg1, 2
  %v0_100068c0 = load i32, i32* @lr, align 4
  store i32 %v0_100068c0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_100068bc, label %dec_label_pc_100068e8, label %dec_label_pc_100068dc

dec_label_pc_100068dc:                            ; preds = %entry
  %v3_100068dc = icmp eq i32 %arg1, 10
  br i1 %v3_100068dc, label %dec_label_pc_100068fc, label %dec_label_pc_10006a98

dec_label_pc_100068e8:                            ; preds = %entry
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268462324, i32* @lr, align 4
  %v3_100068f0 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  store i32 %v3_100068f0, i32* %r3.global-to-local, align 4
  store i32 %v3_100068f0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006ab0

dec_label_pc_100068fc:                            ; preds = %dec_label_pc_100068dc
  %v2_100068fc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100068fc, i32* %r3.global-to-local, align 4
  store i32 268462348, i32* @lr, align 4
  %v3_10006908 = call i32 @__GI_memset(i32 %v2_100068fc, i32 0, i32 16)
  store i32 %v3_10006908, i32* %r3.global-to-local, align 4
  %v0_1000690c = load i32, i32* @r29, align 4
  %v1_1000690c = inttoptr i32 %v0_1000690c to i8*
  %v2_1000690c = load i8, i8* %v1_1000690c, align 1
  %v3_1000690c = zext i8 %v2_1000690c to i32
  store i32 %v3_1000690c, i32* %r0.global-to-local, align 4
  store i32 %v3_10006908, i32* @r31, align 4
  %v2_10006914 = add i32 %v3_10006908, 16
  store i32 %v2_10006914, i32* @r27, align 4
  %v3_10006918 = icmp eq i8 %v2_1000690c, 58
  br i1 %v3_10006918, label %dec_label_pc_10006920, label %dec_label_pc_1000692c

dec_label_pc_10006920:                            ; preds = %dec_label_pc_100068fc
  %v1_10006920 = add i32 %v0_1000690c, 1
  %v2_10006920 = inttoptr i32 %v1_10006920 to i8*
  %v3_10006920 = load i8, i8* %v2_10006920, align 1
  %v4_10006920 = zext i8 %v3_10006920 to i32
  store i32 %v4_10006920, i32* %r0.global-to-local, align 4
  store i32 %v1_10006920, i32* @r29, align 4
  %v3_10006924 = icmp eq i8 %v3_10006920, 58
  br i1 %v3_10006924, label %dec_label_pc_1000692c, label %dec_label_pc_10006aac

dec_label_pc_1000692c:                            ; preds = %dec_label_pc_10006920, %dec_label_pc_100068fc
  %v0_1000692c = phi i32 [ %v1_10006920, %dec_label_pc_10006920 ], [ %v0_1000690c, %dec_label_pc_100068fc ]
  store i32 %v0_1000692c, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_10006a003036 = inttoptr i32 %v0_1000692c to i8*
  %v2_10006a003137 = load i8, i8* %v1_10006a003036, align 1
  %v3_10006a003238 = zext i8 %v2_10006a003137 to i32
  store i32 %v3_10006a003238, i32* %r3.global-to-local, align 4
  store i32 268462600, i32* @lr, align 4
  %v1_10006a043339 = call i32 @__GI_tolower(i32 %v3_10006a003238)
  store i32 %v1_10006a043339, i32* %r3.global-to-local, align 4
  store i32 %v1_10006a043339, i32* @r30, align 4
  %v3_10006a083440 = icmp eq i32 %v1_10006a043339, 0
  br i1 %v3_10006a083440, label %dec_label_pc_10006a10, label %dec_label_pc_10006938.lr.ph

dec_label_pc_10006938:                            ; preds = %dec_label_pc_10006938.lr.ph, %dec_label_pc_10006a00.backedge
  %v1_10006a0435 = phi i32 [ %v1_10006a043341, %dec_label_pc_10006938.lr.ph ], [ %v1_10006a04, %dec_label_pc_10006a00.backedge ]
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000ac60.138 to i32), i32* @r25, align 4
  %v0_10006944 = load i32, i32* @r29, align 4
  %v1_10006944 = add i32 %v0_10006944, 1
  store i32 %v1_10006944, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000ac60.138 to i32), i32* @r3, align 4
  store i32 268462416, i32* @lr, align 4
  %v3_1000694c = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1000ac60.138 to i32), i32 %v1_10006a0435)
  store i32 %v3_1000694c, i32* %r3.global-to-local, align 4
  %v3_10006950 = icmp eq i32 %v3_1000694c, 0
  br i1 %v3_10006950, label %dec_label_pc_10006970, label %dec_label_pc_10006958

dec_label_pc_10006958:                            ; preds = %dec_label_pc_10006938
  %v0_10006958 = load i32, i32* @r25, align 4
  %v2_10006958 = sub i32 %v3_1000694c, %v0_10006958
  store i32 %v2_10006958, i32* %r0.global-to-local, align 4
  %v0_1000695c = load i32, i32* @r28, align 4
  %v1_1000695c = mul i32 %v0_1000695c, 16
  store i32 %v1_1000695c, i32* %r9.global-to-local, align 4
  %v2_10006960 = or i32 %v1_1000695c, %v2_10006958
  store i32 %v2_10006960, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_10006960, 65536
  br i1 %tmp19, label %dec_label_pc_100069fc, label %dec_label_pc_10006aac

dec_label_pc_10006970:                            ; preds = %dec_label_pc_10006938
  %v0_10006970 = load i32, i32* @r30, align 4
  %v3_10006970 = icmp eq i32 %v0_10006970, 58
  br i1 %v3_10006970, label %dec_label_pc_10006978, label %dec_label_pc_100069cc

dec_label_pc_10006978:                            ; preds = %dec_label_pc_10006970
  %v0_10006978 = load i32, i32* @r23, align 4
  %v3_10006978 = icmp eq i32 %v0_10006978, 0
  br i1 %v3_10006978, label %dec_label_pc_10006980, label %dec_label_pc_10006994

dec_label_pc_10006980:                            ; preds = %dec_label_pc_10006978
  %v0_10006980 = load i32, i32* @r24, align 4
  %v3_10006980 = icmp eq i32 %v0_10006980, 0
  br i1 %v3_10006980, label %dec_label_pc_10006988, label %dec_label_pc_10006aac

dec_label_pc_10006988:                            ; preds = %dec_label_pc_10006980
  %v0_10006988 = load i32, i32* @r31, align 4
  store i32 %v0_10006988, i32* @r24, align 4
  %v0_1000698c = load i32, i32* @r29, align 4
  store i32 %v0_1000698c, i32* @r26, align 4
  br label %dec_label_pc_10006a00.backedge

dec_label_pc_10006994:                            ; preds = %dec_label_pc_10006978
  %v0_10006994 = load i32, i32* @r29, align 4
  %v1_10006994 = inttoptr i32 %v0_10006994 to i8*
  %v2_10006994 = load i8, i8* %v1_10006994, align 1
  %v3_10006994 = zext i8 %v2_10006994 to i32
  store i32 %v3_10006994, i32* %r0.global-to-local, align 4
  %v3_10006998 = icmp eq i8 %v2_10006994, 0
  br i1 %v3_10006998, label %dec_label_pc_10006aac, label %dec_label_pc_100069a0

dec_label_pc_100069a0:                            ; preds = %dec_label_pc_10006994
  %v0_100069a0 = load i32, i32* @r31, align 4
  %v1_100069a0 = add i32 %v0_100069a0, 2
  store i32 %v1_100069a0, i32* %r0.global-to-local, align 4
  %v1_100069a4 = load i32, i32* @r27, align 4
  %v3_100069a4 = icmp ugt i32 %v1_100069a0, %v1_100069a4
  br i1 %v3_100069a4, label %dec_label_pc_10006aac, label %dec_label_pc_100069ac

dec_label_pc_100069ac:                            ; preds = %dec_label_pc_100069a0
  %v0_100069ac = load i32, i32* @r28, align 4
  %v1_100069ac = udiv i32 %v0_100069ac, 256
  store i32 %v1_100069ac, i32* %r0.global-to-local, align 4
  %v1_100069b0 = trunc i32 %v0_100069ac to i8
  %v3_100069b0 = add i32 %v0_100069a0, 1
  %v4_100069b0 = inttoptr i32 %v3_100069b0 to i8*
  store i8 %v1_100069b0, i8* %v4_100069b0, align 1
  %v0_100069b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100069b4 = trunc i32 %v0_100069b4 to i8
  %v2_100069b4 = load i32, i32* @r31, align 4
  %v3_100069b4 = inttoptr i32 %v2_100069b4 to i8*
  store i8 %v1_100069b4, i8* %v3_100069b4, align 1
  %v0_100069b8 = load i32, i32* @r29, align 4
  store i32 %v0_100069b8, i32* @r26, align 4
  %v0_100069bc = load i32, i32* @r31, align 4
  %v1_100069bc = add i32 %v0_100069bc, 2
  store i32 %v1_100069bc, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_10006a0030 = inttoptr i32 %v0_100069b8 to i8*
  %v2_10006a0031 = load i8, i8* %v1_10006a0030, align 1
  %v3_10006a0032 = zext i8 %v2_10006a0031 to i32
  store i32 %v3_10006a0032, i32* %r3.global-to-local, align 4
  store i32 268462600, i32* @lr, align 4
  %v1_10006a0433 = call i32 @__GI_tolower(i32 %v3_10006a0032)
  store i32 %v1_10006a0433, i32* %r3.global-to-local, align 4
  store i32 %v1_10006a0433, i32* @r30, align 4
  %v3_10006a0834 = icmp eq i32 %v1_10006a0433, 0
  br i1 %v3_10006a0834, label %dec_label_pc_10006a10, label %dec_label_pc_10006938.lr.ph

dec_label_pc_10006938.lr.ph:                      ; preds = %dec_label_pc_1000692c, %dec_label_pc_100069ac
  %v1_10006a043341 = phi i32 [ %v1_10006a0433, %dec_label_pc_100069ac ], [ %v1_10006a043339, %dec_label_pc_1000692c ]
  br label %dec_label_pc_10006938

dec_label_pc_100069cc:                            ; preds = %dec_label_pc_10006970
  %v3_100069cc = icmp eq i32 %v0_10006970, 46
  br i1 %v3_100069cc, label %dec_label_pc_100069d4, label %dec_label_pc_10006aac

dec_label_pc_100069d4:                            ; preds = %dec_label_pc_100069cc
  %v0_100069d4 = load i32, i32* @r31, align 4
  %v1_100069d4 = add i32 %v0_100069d4, 4
  store i32 %v1_100069d4, i32* @r30, align 4
  %v1_100069d8 = load i32, i32* @r27, align 4
  %v3_100069d8 = icmp ugt i32 %v1_100069d4, %v1_100069d8
  br i1 %v3_100069d8, label %dec_label_pc_10006aac, label %dec_label_pc_100069e0

dec_label_pc_100069e0:                            ; preds = %dec_label_pc_100069d4
  %v0_100069e4 = load i32, i32* @r26, align 4
  store i32 %v0_100069e4, i32* %r3.global-to-local, align 4
  store i32 268462572, i32* @lr, align 4
  %v3_100069e8 = call i32 @inet_pton4(i32 %v0_100069e4, i32 %v0_100069d4)
  store i32 %v3_100069e8, i32* %r3.global-to-local, align 4
  %v0_100069ec = load i32, i32* @r30, align 4
  store i32 %v0_100069ec, i32* @r31, align 4
  %v2_100069f0 = icmp sgt i32 %v3_100069e8, 0
  br i1 %v2_100069f0, label %dec_label_pc_10006a34, label %dec_label_pc_10006aac

dec_label_pc_100069fc:                            ; preds = %dec_label_pc_10006958
  store i32 1, i32* @r23, align 4
  %v0_10006a00.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10006a00.backedge

dec_label_pc_10006a00.backedge:                   ; preds = %dec_label_pc_100069fc, %dec_label_pc_10006988
  %v0_10006a00.be = phi i32 [ %v0_10006a00.pre.pre, %dec_label_pc_100069fc ], [ %v0_1000698c, %dec_label_pc_10006988 ]
  %v1_10006a00 = inttoptr i32 %v0_10006a00.be to i8*
  %v2_10006a00 = load i8, i8* %v1_10006a00, align 1
  %v3_10006a00 = zext i8 %v2_10006a00 to i32
  store i32 %v3_10006a00, i32* %r3.global-to-local, align 4
  store i32 268462600, i32* @lr, align 4
  %v1_10006a04 = call i32 @__GI_tolower(i32 %v3_10006a00)
  store i32 %v1_10006a04, i32* %r3.global-to-local, align 4
  store i32 %v1_10006a04, i32* @r30, align 4
  %v3_10006a08 = icmp eq i32 %v1_10006a04, 0
  br i1 %v3_10006a08, label %dec_label_pc_10006a10, label %dec_label_pc_10006938

dec_label_pc_10006a10:                            ; preds = %dec_label_pc_10006a00.backedge, %dec_label_pc_1000692c, %dec_label_pc_100069ac
  %v0_10006a10 = load i32, i32* @r23, align 4
  %v3_10006a10 = icmp eq i32 %v0_10006a10, 0
  %v0_10006a78.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_10006a10, label %dec_label_pc_10006a34, label %dec_label_pc_10006a18

dec_label_pc_10006a18:                            ; preds = %dec_label_pc_10006a10
  %v1_10006a18 = add i32 %v0_10006a78.pre.pre, 2
  store i32 %v1_10006a18, i32* %r0.global-to-local, align 4
  %v1_10006a1c = load i32, i32* @r27, align 4
  %v3_10006a1c = icmp ugt i32 %v1_10006a18, %v1_10006a1c
  br i1 %v3_10006a1c, label %dec_label_pc_10006aac, label %dec_label_pc_10006a24

dec_label_pc_10006a24:                            ; preds = %dec_label_pc_10006a18
  %v0_10006a24 = load i32, i32* @r28, align 4
  %v1_10006a24 = udiv i32 %v0_10006a24, 256
  store i32 %v1_10006a24, i32* %r0.global-to-local, align 4
  %v1_10006a28 = trunc i32 %v0_10006a24 to i8
  %v3_10006a28 = add i32 %v0_10006a78.pre.pre, 1
  %v4_10006a28 = inttoptr i32 %v3_10006a28 to i8*
  store i8 %v1_10006a28, i8* %v4_10006a28, align 1
  %v0_10006a2c = load i32, i32* %r0.global-to-local, align 4
  %v1_10006a2c = trunc i32 %v0_10006a2c to i8
  %v2_10006a2c = load i32, i32* @r31, align 4
  %v3_10006a2c = inttoptr i32 %v2_10006a2c to i8*
  store i8 %v1_10006a2c, i8* %v3_10006a2c, align 1
  %v0_10006a30 = load i32, i32* @r31, align 4
  %v1_10006a30 = add i32 %v0_10006a30, 2
  store i32 %v1_10006a30, i32* @r31, align 4
  br label %dec_label_pc_10006a34

dec_label_pc_10006a34:                            ; preds = %dec_label_pc_10006a10, %dec_label_pc_100069e0, %dec_label_pc_10006a24
  %v0_10006a78.pre = phi i32 [ %v0_100069ec, %dec_label_pc_100069e0 ], [ %v1_10006a30, %dec_label_pc_10006a24 ], [ %v0_10006a78.pre.pre, %dec_label_pc_10006a10 ]
  %v0_10006a34 = load i32, i32* @r24, align 4
  %v3_10006a34 = icmp eq i32 %v0_10006a34, 0
  %v1_10006a78.pre = load i32, i32* @r27, align 4
  %v4_10006a78 = icmp eq i32 %v0_10006a78.pre, %v1_10006a78.pre
  br i1 %v3_10006a34, label %dec_label_pc_10006a78, label %dec_label_pc_10006a3c

dec_label_pc_10006a3c:                            ; preds = %dec_label_pc_10006a34
  %v2_10006a40 = sub i32 %v0_10006a78.pre, %v0_10006a34
  store i32 %v2_10006a40, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_10006a78, label %dec_label_pc_10006aac, label %dec_label_pc_10006a60.preheader

dec_label_pc_10006a60.preheader:                  ; preds = %dec_label_pc_10006a3c
  %v3_10006a6024 = icmp slt i32 %v2_10006a40, 1
  %v2_10006a6426 = add i32 %v2_10006a40, -1
  store i32 %v2_10006a6426, i32* %r10.global-to-local, align 4
  %v2_10006a6827 = add i32 %v1_10006a78.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_10006a6024, label %dec_label_pc_10006a78.thread, label %dec_label_pc_10006a54

dec_label_pc_10006a54:                            ; preds = %dec_label_pc_10006a60.preheader, %dec_label_pc_10006a54.dec_label_pc_10006a54_crit_edge
  %v0_10006a54 = phi i32 [ %v0_10006a54.pre, %dec_label_pc_10006a54.dec_label_pc_10006a54_crit_edge ], [ %v0_10006a34, %dec_label_pc_10006a60.preheader ]
  %v2_10006a6829 = phi i32 [ %v2_10006a68, %dec_label_pc_10006a54.dec_label_pc_10006a54_crit_edge ], [ %v2_10006a6827, %dec_label_pc_10006a60.preheader ]
  %v2_10006a6428 = phi i32 [ %v2_10006a64, %dec_label_pc_10006a54.dec_label_pc_10006a54_crit_edge ], [ %v2_10006a6426, %dec_label_pc_10006a60.preheader ]
  %v2_10006a54 = add i32 %v0_10006a54, %v2_10006a6428
  %v3_10006a54 = inttoptr i32 %v2_10006a54 to i8*
  %v4_10006a54 = load i8, i8* %v3_10006a54, align 1
  %v5_10006a54 = zext i8 %v4_10006a54 to i32
  store i32 %v5_10006a54, i32* %r0.global-to-local, align 4
  %v3_10006a58 = inttoptr i32 %v2_10006a6829 to i8*
  store i8 %v4_10006a54, i8* %v3_10006a58, align 1
  %v0_10006a5c = load i32, i32* %r8.global-to-local, align 4
  %v1_10006a5c = load i32, i32* @r24, align 4
  %v2_10006a5c = load i32, i32* %r10.global-to-local, align 4
  %v3_10006a5c = trunc i32 %v0_10006a5c to i8
  %v4_10006a5c = add i32 %v2_10006a5c, %v1_10006a5c
  %v5_10006a5c = inttoptr i32 %v4_10006a5c to i8*
  store i8 %v3_10006a5c, i8* %v5_10006a5c, align 1
  %v0_10006a60.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10006a60.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10006a68.pre = load i32, i32* @r27, align 4
  %v3_10006a60 = icmp slt i32 %v1_10006a60.pre, %v0_10006a60.pre
  %v2_10006a64 = sub i32 %v1_10006a60.pre, %v0_10006a60.pre
  store i32 %v2_10006a64, i32* %r10.global-to-local, align 4
  %v1_10006a6c = add i32 %v0_10006a60.pre, 1
  store i32 %v1_10006a6c, i32* %r9.global-to-local, align 4
  br i1 %v3_10006a60, label %dec_label_pc_10006a78.thread, label %dec_label_pc_10006a54.dec_label_pc_10006a54_crit_edge

dec_label_pc_10006a54.dec_label_pc_10006a54_crit_edge: ; preds = %dec_label_pc_10006a54
  %v2_10006a68 = sub i32 %v1_10006a68.pre, %v0_10006a60.pre
  %v0_10006a54.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_10006a54

dec_label_pc_10006a78.thread:                     ; preds = %dec_label_pc_10006a54, %dec_label_pc_10006a60.preheader
  %v0_10006a74.lcssa = phi i32 [ %v1_10006a78.pre, %dec_label_pc_10006a60.preheader ], [ %v1_10006a68.pre, %dec_label_pc_10006a54 ]
  store i32 %v0_10006a74.lcssa, i32* @r31, align 4
  br label %dec_label_pc_10006a80

dec_label_pc_10006a78:                            ; preds = %dec_label_pc_10006a34
  br i1 %v4_10006a78, label %dec_label_pc_10006a80, label %dec_label_pc_10006aac

dec_label_pc_10006a80:                            ; preds = %dec_label_pc_10006a78.thread, %dec_label_pc_10006a78
  %v0_10006a80 = load i32, i32* @r22, align 4
  store i32 %v0_10006a80, i32* @r3, align 4
  store i32 %v2_100068fc, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006a90.139 to i32), i32* @lr, align 4
  %v0_10006a8c = call i32 @memcpy()
  store i32 %v0_10006a8c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006ab0

dec_label_pc_10006a98:                            ; preds = %dec_label_pc_100068dc
  %v0_10006a98 = call i32 @__errno_location()
  store i32 %v0_10006a98, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10006aa4 = inttoptr i32 %v0_10006a98 to i32*
  store i32 97, i32* %v2_10006aa4, align 4
  %v0_10006ab4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006ab0

dec_label_pc_10006aac:                            ; preds = %dec_label_pc_100069a0, %dec_label_pc_10006994, %dec_label_pc_10006958, %dec_label_pc_10006980, %dec_label_pc_10006a3c, %dec_label_pc_100069e0, %dec_label_pc_100069cc, %dec_label_pc_10006a78, %dec_label_pc_10006920, %dec_label_pc_10006a18, %dec_label_pc_100069d4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006ab0

dec_label_pc_10006ab0:                            ; preds = %dec_label_pc_10006a98, %dec_label_pc_10006a80, %dec_label_pc_100068e8, %dec_label_pc_10006aac
  %v0_10006ab4 = phi i32 [ %v0_10006ab4.pre, %dec_label_pc_10006a98 ], [ 1, %dec_label_pc_10006a80 ], [ %v3_100068f0, %dec_label_pc_100068e8 ], [ 0, %dec_label_pc_10006aac ]
  store i32 %v0_100068c0, i32* %r0.global-to-local, align 4
  store i32 %v0_10006ab4, i32* %r3.global-to-local, align 4
  ret i32 %v0_10006ab4

; uselistorder directives
  uselistorder i32 %v0_10006ab4, { 1, 0 }
  uselistorder i32 %v2_10006a64, { 1, 0 }
  uselistorder i32 %v0_10006a60.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_10006a78, { 1, 0 }
  uselistorder i32 %v0_10006a78.pre, { 1, 0 }
  uselistorder i32 %v0_10006a24, { 1, 0 }
  uselistorder i32 %v0_10006a78.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10006a04, { 1, 2, 3, 0 }
  uselistorder i32 %v0_100069ac, { 1, 0 }
  uselistorder i32 %v1_1000695c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 9, 10, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 6, 7, 16, 15, 8, 18, 17, 11, 12, 13, 14, 0 }
  uselistorder i32 58, { 3, 0, 1, 2 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268462600, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_10006ab0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006aac, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_10006a80, { 1, 0 }
  uselistorder label %dec_label_pc_10006a54, { 1, 0 }
  uselistorder label %dec_label_pc_10006a34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006a10, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10006938.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10006938, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10006b20.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_10006ac8 = load i32, i32* @lr, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_10006af4 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_10006af4, i32* %r3.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_10006b04.142 to i32), i32* @lr, align 4
  %v3_10006b00 = call i32 @__GI_memset(i32 %v2_10006af4, i32 0, i32 15)
  store i32 %v3_10006b00, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_10006bc42 = load i32, i32* @r1, align 4
  store i32 %v0_10006bc42, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006b20

dec_label_pc_10006b20:                            ; preds = %dec_label_pc_10006b94.dec_label_pc_10006b20_crit_edge, %dec_label_pc_10006b20.lr.ph
  %v2_10006b40 = phi i32 [ %v2_10006bc4, %dec_label_pc_10006b94.dec_label_pc_10006b20_crit_edge ], [ %v0_10006bc42, %dec_label_pc_10006b20.lr.ph ]
  %v0_10006b34 = phi i32 [ %v0_10006bc4, %dec_label_pc_10006b94.dec_label_pc_10006b20_crit_edge ], [ %v0_10006bc42, %dec_label_pc_10006b20.lr.ph ]
  %v0_10006b24 = phi i32 [ %v1_10006bc4, %dec_label_pc_10006b94.dec_label_pc_10006b20_crit_edge ], [ 0, %dec_label_pc_10006b20.lr.ph ]
  %v1_10006b2c = phi i32 [ %v1_10006b20.pre, %dec_label_pc_10006b94.dec_label_pc_10006b20_crit_edge ], [ 0, %dec_label_pc_10006b20.lr.ph ]
  %v0_10006b20 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006b20 = add i32 %v0_10006b20, %v1_10006b2c
  %v3_10006b20 = inttoptr i32 %v2_10006b20 to i8*
  %v4_10006b20 = load i8, i8* %v3_10006b20, align 1
  %v5_10006b20 = zext i8 %v4_10006b20 to i32
  store i32 %v5_10006b20, i32* %r10.global-to-local, align 4
  store i32 %v0_10006b24, i32* %r8.global-to-local, align 4
  %v1_10006b28 = add i32 %v0_10006b24, 1
  store i32 %v1_10006b28, i32* %r11.global-to-local, align 4
  store i32 %v2_10006b20, i32* %r3.global-to-local, align 4
  %v1_10006b30 = load i32, i32* @r28, align 4
  %v2_10006b30 = udiv i32 %v5_10006b20, %v1_10006b30
  %v2_10006b34 = add i32 %v1_10006b28, %v0_10006b34
  store i32 %v2_10006b34, i32* %r6.global-to-local, align 4
  %v1_10006b38 = add nuw nsw i32 %v2_10006b30, 48
  %v1_10006b3c = urem i32 %v1_10006b38, 256
  store i32 %v1_10006b3c, i32* %r0.global-to-local, align 4
  %v1_10006b40 = trunc i32 %v1_10006b38 to i8
  %v3_10006b40 = add i32 %v2_10006b40, 8
  %v4_10006b40 = inttoptr i32 %v3_10006b40 to i8*
  store i8 %v1_10006b40, i8* %v4_10006b40, align 1
  %v0_10006b44 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006b44 = icmp eq i32 %v0_10006b44, 48
  %v0_10006b4c = load i32, i32* %r10.global-to-local, align 4
  %v1_10006b4c = load i32, i32* %r5.global-to-local, align 4
  %v2_10006b4c = udiv i32 %v0_10006b4c, %v1_10006b4c
  store i32 %v2_10006b4c, i32* %r9.global-to-local, align 4
  br i1 %v3_10006b44, label %dec_label_pc_10006b4c, label %dec_label_pc_10006b78

dec_label_pc_10006b4c:                            ; preds = %dec_label_pc_10006b20
  %v2_10006b50 = udiv i32 %v2_10006b4c, %v1_10006b4c
  %tmp18 = mul i32 %v2_10006b50, -10
  %v2_10006b58 = add i32 %v2_10006b4c, 48
  %v1_10006b5c = add i32 %v2_10006b58, %tmp18
  store i32 %v1_10006b5c, i32* %r9.global-to-local, align 4
  %v1_10006b60 = urem i32 %v1_10006b5c, 256
  store i32 %v1_10006b60, i32* %r0.global-to-local, align 4
  %v1_10006b64 = trunc i32 %v1_10006b5c to i8
  %v2_10006b64 = load i32, i32* %r7.global-to-local, align 4
  %v3_10006b64 = add i32 %v2_10006b64, 8
  %v4_10006b64 = inttoptr i32 %v3_10006b64 to i8*
  store i8 %v1_10006b64, i8* %v4_10006b64, align 1
  %v0_10006b68 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006b68 = icmp eq i32 %v0_10006b68, 48
  br i1 %v3_10006b68, label %dec_label_pc_10006b94, label %dec_label_pc_10006b70

dec_label_pc_10006b70:                            ; preds = %dec_label_pc_10006b4c
  %v0_10006b70 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10006b70, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10006b94

dec_label_pc_10006b78:                            ; preds = %dec_label_pc_10006b20
  %v0_10006b7c = load i32, i32* %r11.global-to-local, align 4
  %v1_10006b7c = add i32 %v0_10006b7c, 1
  store i32 %v1_10006b7c, i32* %r8.global-to-local, align 4
  %v2_10006b80 = udiv i32 %v2_10006b4c, %v1_10006b4c
  %v1_10006b84 = mul i32 %v2_10006b80, 10
  store i32 %v1_10006b84, i32* %r0.global-to-local, align 4
  %v2_10006b88 = sub i32 %v2_10006b4c, %v1_10006b84
  %v1_10006b8c = add i32 %v2_10006b88, 48
  store i32 %v1_10006b8c, i32* %r9.global-to-local, align 4
  %v1_10006b90 = trunc i32 %v1_10006b8c to i8
  %v2_10006b90 = load i32, i32* %r6.global-to-local, align 4
  %v3_10006b90 = add i32 %v2_10006b90, 8
  %v4_10006b90 = inttoptr i32 %v3_10006b90 to i8*
  store i8 %v1_10006b90, i8* %v4_10006b90, align 1
  br label %dec_label_pc_10006b94

dec_label_pc_10006b94:                            ; preds = %dec_label_pc_10006b4c, %dec_label_pc_10006b70, %dec_label_pc_10006b78
  %v0_10006b94 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006b94 = inttoptr i32 %v0_10006b94 to i8*
  %v2_10006b94 = load i8, i8* %v1_10006b94, align 1
  %v3_10006b94 = zext i8 %v2_10006b94 to i32
  %v0_10006b98 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006b98 = add i32 %v0_10006b98, 1
  %v0_10006b9c = load i32, i32* @r1, align 4
  %v2_10006b9c = add i32 %v0_10006b9c, %v0_10006b98
  store i32 %v2_10006b9c, i32* %r10.global-to-local, align 4
  %v2_10006ba0 = add i32 %v1_10006b98, %v0_10006b9c
  store i32 %v2_10006ba0, i32* %r8.global-to-local, align 4
  %v1_10006ba4 = load i32, i32* %r5.global-to-local, align 4
  %v2_10006ba4 = udiv i32 %v3_10006b94, %v1_10006ba4
  %v1_10006ba8 = add i32 %v0_10006b98, 2
  store i32 %v1_10006ba8, i32* %r11.global-to-local, align 4
  %v0_10006bac = load i32, i32* %r4.global-to-local, align 4
  %v1_10006bac = add i32 %v0_10006bac, 1
  store i32 %v1_10006bac, i32* %r4.global-to-local, align 4
  %v1_10006bb0 = mul nuw nsw i32 %v2_10006ba4, 10
  store i32 %v1_10006bb0, i32* %r0.global-to-local, align 4
  %v2_10006bb4 = sub nsw i32 %v3_10006b94, %v1_10006bb0
  %v1_10006bb8 = add nsw i32 %v2_10006bb4, 48
  store i32 %v1_10006bb8, i32* %r9.global-to-local, align 4
  %v1_10006bbc = trunc i32 %v1_10006bb8 to i8
  %v3_10006bbc = add i32 %v2_10006b9c, 8
  %v4_10006bbc = inttoptr i32 %v3_10006bbc to i8*
  store i8 %v1_10006bbc, i8* %v4_10006bbc, align 1
  %v0_10006bc0 = load i32, i32* %r12.global-to-local, align 4
  %v1_10006bc0 = trunc i32 %v0_10006bc0 to i8
  %v2_10006bc0 = load i32, i32* %r8.global-to-local, align 4
  %v3_10006bc0 = add i32 %v2_10006bc0, 8
  %v4_10006bc0 = inttoptr i32 %v3_10006bc0 to i8*
  store i8 %v1_10006bc0, i8* %v4_10006bc0, align 1
  %v0_10006bc4 = load i32, i32* @r1, align 4
  %v1_10006bc4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10006bc4 = add i32 %v1_10006bc4, %v0_10006bc4
  store i32 %v2_10006bc4, i32* %r7.global-to-local, align 4
  %v0_10006bc8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006bc8 = add i32 %v0_10006bc8, -1
  store i32 %v1_10006bc8, i32* %ctr.global-to-local, align 4
  %v2_10006bc8 = icmp eq i32 %v1_10006bc8, 0
  br i1 %v2_10006bc8, label %dec_label_pc_10006bcc, label %dec_label_pc_10006b94.dec_label_pc_10006b20_crit_edge

dec_label_pc_10006b94.dec_label_pc_10006b20_crit_edge: ; preds = %dec_label_pc_10006b94
  %v1_10006b20.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10006b20

dec_label_pc_10006bcc:                            ; preds = %dec_label_pc_10006b94
  %v2_10006bcc = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_10006bcc, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006bd4 = add i32 %v1_10006bc4, %v2_10006bcc
  store i32 %v2_10006bd4, i32* %r9.global-to-local, align 4
  store i32 %v2_10006bcc, i32* @r3, align 4
  %v3_10006bdc = add i32 %v2_10006bd4, -1
  %v4_10006bdc = inttoptr i32 %v3_10006bdc to i8*
  store i8 0, i8* %v4_10006bdc, align 1
  %v0_10006be0 = call i32 @__GI_strlen()
  store i32 %v0_10006be0, i32* %r3.global-to-local, align 4
  %v1_10006be4 = load i32, i32* @r30, align 4
  %v3_10006be4 = icmp ugt i32 %v0_10006be0, %v1_10006be4
  br i1 %v3_10006be4, label %dec_label_pc_10006bec, label %dec_label_pc_10006c00

dec_label_pc_10006bec:                            ; preds = %dec_label_pc_10006bcc
  %v0_10006bec = call i32 @__errno_location()
  store i32 %v0_10006bec, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10006bf8 = inttoptr i32 %v0_10006bec to i32*
  store i32 28, i32* %v2_10006bf8, align 4
  %v0_10006c14.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006c10

dec_label_pc_10006c00:                            ; preds = %dec_label_pc_10006bcc
  %v0_10006c00 = load i32, i32* @r29, align 4
  store i32 %v0_10006c00, i32* %r3.global-to-local, align 4
  store i32 %v2_10006bcc, i32* %r4.global-to-local, align 4
  %v2_10006c08 = bitcast i16* %stack_var_-56 to i8*
  %v3_10006c08 = call i32 @strcpy(i32 %v0_10006c00, i8* %v2_10006c08)
  store i32 %v3_10006c08, i32* %r3.global-to-local, align 4
  store i32 %v3_10006c08, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006c10

dec_label_pc_10006c10:                            ; preds = %dec_label_pc_10006bec, %dec_label_pc_10006c00
  %v0_10006c14 = phi i32 [ %v0_10006c14.pre, %dec_label_pc_10006bec ], [ %v3_10006c08, %dec_label_pc_10006c00 ]
  store i32 %v0_10006ac8, i32* %r0.global-to-local, align 4
  store i32 %v0_10006c14, i32* %r3.global-to-local, align 4
  ret i32 %v0_10006c14

; uselistorder directives
  uselistorder i32 %v0_10006c14, { 1, 0 }
  uselistorder i32 %v2_10006bcc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10006bc8, { 1, 0 }
  uselistorder i32 %v2_10006bc4, { 1, 0 }
  uselistorder i32 %v0_10006b98, { 1, 0, 2 }
  uselistorder i32 %v1_10006b5c, { 1, 0, 2 }
  uselistorder i32 %v2_10006b4c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_10006b38, { 1, 0 }
  uselistorder i32 %v0_10006b24, { 1, 0 }
  uselistorder i32 %v0_10006bc42, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder label %dec_label_pc_10006c10, { 1, 0 }
  uselistorder label %dec_label_pc_10006b94, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_10006c28 = icmp slt i32 %arg1, 2
  %v3_10006c28 = icmp eq i32 %arg1, 2
  store i1 %v1_10006c28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c28, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_10006c28, label %dec_label_pc_10006c58, label %dec_label_pc_10006c4c

dec_label_pc_10006c4c:                            ; preds = %entry
  %v1_10006c4c = icmp slt i32 %arg1, 10
  %v3_10006c4c = icmp eq i32 %arg1, 10
  store i1 %v1_10006c4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c4c, label %dec_label_pc_10006c90.lr.ph, label %dec_label_pc_10006ea4

dec_label_pc_10006c58:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10006c68.144 to i32), i32* @lr, align 4
  %v3_10006c64 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_10006e9c

dec_label_pc_10006c90.lr.ph:                      ; preds = %dec_label_pc_10006c4c
  %v2_10006c6c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10006c6c, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006c80.145 to i32), i32* @lr, align 4
  %v3_10006c7c = call i32 @__GI_memset(i32 %v2_10006c6c, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10006cb015 = load i32, i32* @r27, align 4
  store i32 %v0_10006cb015, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006c90

dec_label_pc_10006c90:                            ; preds = %dec_label_pc_10006c90.lr.ph, %dec_label_pc_10006c90
  %v1_10006ca4 = phi i32 [ 0, %dec_label_pc_10006c90.lr.ph ], [ %v1_10006cb4, %dec_label_pc_10006c90 ]
  %v0_10006c90 = phi i32 [ %v0_10006cb015, %dec_label_pc_10006c90.lr.ph ], [ %v0_10006cb0, %dec_label_pc_10006c90 ]
  %v0_10006c98 = phi i32 [ %v0_10006cb015, %dec_label_pc_10006c90.lr.ph ], [ %v2_10006cb0, %dec_label_pc_10006c90 ]
  %v1_10006c90 = phi i32 [ 0, %dec_label_pc_10006c90.lr.ph ], [ %v0_10006ca8, %dec_label_pc_10006c90 ]
  %v2_10006c90 = add i32 %v0_10006c90, %v1_10006c90
  %v3_10006c90 = inttoptr i32 %v2_10006c90 to i8*
  %v4_10006c90 = load i8, i8* %v3_10006c90, align 1
  %v5_10006c90 = zext i8 %v4_10006c90 to i32
  %v1_10006c94 = add i32 %v1_10006c90, 2
  store i32 %v1_10006c94, i32* %r11.global-to-local, align 4
  %v1_10006c98 = add i32 %v0_10006c98, 1
  %v2_10006c98 = inttoptr i32 %v1_10006c98 to i8*
  %v3_10006c98 = load i8, i8* %v2_10006c98, align 1
  %v4_10006c98 = zext i8 %v3_10006c98 to i32
  %v1_10006c9c = mul nuw nsw i32 %v5_10006c90, 256
  %v2_10006ca0 = or i32 %v4_10006c98, %v1_10006c9c
  %v2_10006ca4 = load i32, i32* %r29.global-to-local, align 4
  %v3_10006ca4 = add i32 %v2_10006ca4, %v1_10006ca4
  %v4_10006ca4 = inttoptr i32 %v3_10006ca4 to i32*
  store i32 %v2_10006ca0, i32* %v4_10006ca4, align 4
  %v0_10006ca8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006ca8 = udiv i32 %v0_10006ca8, 2
  %v0_10006cb0 = load i32, i32* @r27, align 4
  %v2_10006cb0 = add i32 %v0_10006cb0, %v0_10006ca8
  store i32 %v2_10006cb0, i32* %r9.global-to-local, align 4
  %v1_10006cb4 = mul i32 %v1_10006ca8, 4
  %v0_10006cb8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006cb8 = add i32 %v0_10006cb8, -1
  store i32 %v1_10006cb8, i32* %ctr.global-to-local, align 4
  %v2_10006cb8 = icmp eq i32 %v1_10006cb8, 0
  br i1 %v2_10006cb8, label %dec_label_pc_10006cd8.lr.ph, label %dec_label_pc_10006c90

dec_label_pc_10006cd8.lr.ph:                      ; preds = %dec_label_pc_10006c90
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006cd8

dec_label_pc_10006cd8:                            ; preds = %dec_label_pc_10006cd8.lr.ph, %dec_label_pc_10006d24
  %v0_10006d28 = phi i32 [ 8, %dec_label_pc_10006cd8.lr.ph ], [ %v1_10006d28, %dec_label_pc_10006d24 ]
  %v0_10006d18 = phi i32 [ -1, %dec_label_pc_10006cd8.lr.ph ], [ %v0_10006d1842, %dec_label_pc_10006d24 ]
  %v0_10006d08 = phi i32 [ -1, %dec_label_pc_10006cd8.lr.ph ], [ %v0_10006d0839, %dec_label_pc_10006d24 ]
  %v0_10006cdc = phi i32 [ -1, %dec_label_pc_10006cd8.lr.ph ], [ %v0_10006cdc35, %dec_label_pc_10006d24 ]
  %v0_10006d24 = phi i32 [ 0, %dec_label_pc_10006cd8.lr.ph ], [ %v1_10006d24, %dec_label_pc_10006d24 ]
  %v1_10006cd8 = mul i32 %v0_10006d24, 4
  %v3_10006cdc = icmp eq i32 %v0_10006cdc, -1
  %v2_10006ce0 = add i32 %v1_10006cd8, %v2_10006c6c
  %v3_10006ce0 = inttoptr i32 %v2_10006ce0 to i32*
  %v4_10006ce0 = load i32, i32* %v3_10006ce0, align 4
  %v3_10006ce4 = icmp eq i32 %v4_10006ce0, 0
  br i1 %v3_10006ce4, label %dec_label_pc_10006cec, label %dec_label_pc_10006d04

dec_label_pc_10006cec:                            ; preds = %dec_label_pc_10006cd8
  br i1 %v3_10006cdc, label %dec_label_pc_10006cf0, label %dec_label_pc_10006cfc

dec_label_pc_10006cf0:                            ; preds = %dec_label_pc_10006cec
  store i32 %v0_10006d24, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_10006d24

dec_label_pc_10006cfc:                            ; preds = %dec_label_pc_10006cec
  %v0_10006cfc = load i32, i32* @r31, align 4
  %v1_10006cfc = add i32 %v0_10006cfc, 1
  store i32 %v1_10006cfc, i32* @r31, align 4
  br label %dec_label_pc_10006d24

dec_label_pc_10006d04:                            ; preds = %dec_label_pc_10006cd8
  br i1 %v3_10006cdc, label %dec_label_pc_10006d24, label %dec_label_pc_10006d08

dec_label_pc_10006d08:                            ; preds = %dec_label_pc_10006d04
  %v3_10006d08 = icmp eq i32 %v0_10006d08, -1
  %v0_10006d1c.pre = load i32, i32* @r31, align 4
  %v1_10006d10 = load i32, i32* @r30, align 4
  %v3_10006d10 = icmp sgt i32 %v0_10006d1c.pre, %v1_10006d10
  %or.cond = or i1 %v3_10006d08, %v3_10006d10
  br i1 %or.cond, label %dec_label_pc_10006d18, label %dec_label_pc_10006d20

dec_label_pc_10006d18:                            ; preds = %dec_label_pc_10006d08
  store i32 %v0_10006d18, i32* @r28, align 4
  store i32 %v0_10006d1c.pre, i32* @r30, align 4
  br label %dec_label_pc_10006d20

dec_label_pc_10006d20:                            ; preds = %dec_label_pc_10006d08, %dec_label_pc_10006d18
  %v0_10006d0840 = phi i32 [ %v0_10006d18, %dec_label_pc_10006d18 ], [ %v0_10006d08, %dec_label_pc_10006d08 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006d24

dec_label_pc_10006d24:                            ; preds = %dec_label_pc_10006d04, %dec_label_pc_10006cfc, %dec_label_pc_10006cf0, %dec_label_pc_10006d20
  %v0_10006d1842 = phi i32 [ %v0_10006d18, %dec_label_pc_10006d04 ], [ %v0_10006d18, %dec_label_pc_10006cfc ], [ %v0_10006d24, %dec_label_pc_10006cf0 ], [ -1, %dec_label_pc_10006d20 ]
  %v0_10006cdc35 = phi i32 [ -1, %dec_label_pc_10006d04 ], [ %v0_10006cdc, %dec_label_pc_10006cfc ], [ %v0_10006d24, %dec_label_pc_10006cf0 ], [ -1, %dec_label_pc_10006d20 ]
  %v0_10006d0839 = phi i32 [ %v0_10006d08, %dec_label_pc_10006d04 ], [ %v0_10006d08, %dec_label_pc_10006cfc ], [ %v0_10006d08, %dec_label_pc_10006cf0 ], [ %v0_10006d0840, %dec_label_pc_10006d20 ]
  %v1_10006d24 = add nuw nsw i32 %v0_10006d24, 1
  store i32 %v1_10006d24, i32* %r11.global-to-local, align 4
  %v1_10006d28 = add nsw i32 %v0_10006d28, -1
  store i32 %v1_10006d28, i32* %ctr.global-to-local, align 4
  %v2_10006d28 = icmp eq i32 %v1_10006d28, 0
  br i1 %v2_10006d28, label %dec_label_pc_10006d2c, label %dec_label_pc_10006cd8

dec_label_pc_10006d2c:                            ; preds = %dec_label_pc_10006d24
  %v3_10006d2c = icmp eq i32 %v0_10006d1842, -1
  %v1_10006d4c = icmp slt i32 %v0_10006d0839, -1
  %v3_10006d4c = icmp eq i32 %v0_10006d0839, -1
  store i1 %v1_10006d4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d2c, label %dec_label_pc_10006d4c, label %dec_label_pc_10006d34

dec_label_pc_10006d34:                            ; preds = %dec_label_pc_10006d2c
  %v0_10006d44.pre = load i32, i32* @r31, align 4
  br i1 %v3_10006d4c, label %dec_label_pc_10006d44, label %dec_label_pc_10006d3c

dec_label_pc_10006d3c:                            ; preds = %dec_label_pc_10006d34
  %v1_10006d3c = load i32, i32* @r30, align 4
  %v2_10006d3c = icmp slt i32 %v0_10006d44.pre, %v1_10006d3c
  %v3_10006d3c = icmp sgt i32 %v0_10006d44.pre, %v1_10006d3c
  %v4_10006d3c = icmp eq i32 %v0_10006d44.pre, %v1_10006d3c
  store i1 %v2_10006d3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006d3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d3c, label %dec_label_pc_10006d44, label %dec_label_pc_10006d4c.thread

dec_label_pc_10006d44:                            ; preds = %dec_label_pc_10006d34, %dec_label_pc_10006d3c
  store i32 %v0_10006d44.pre, i32* @r30, align 4
  store i32 %v0_10006d1842, i32* @r28, align 4
  br label %dec_label_pc_10006d4c.thread

dec_label_pc_10006d4c.thread:                     ; preds = %dec_label_pc_10006d44, %dec_label_pc_10006d3c
  %v0_10006d5476 = phi i32 [ %v1_10006d3c, %dec_label_pc_10006d3c ], [ %v0_10006d44.pre, %dec_label_pc_10006d44 ]
  %v0_10006d4c.ph = phi i32 [ %v0_10006d0839, %dec_label_pc_10006d3c ], [ %v0_10006d1842, %dec_label_pc_10006d44 ]
  %v1_10006d4c59 = icmp slt i32 %v0_10006d4c.ph, -1
  %v3_10006d4c61 = icmp eq i32 %v0_10006d4c.ph, -1
  store i1 %v1_10006d4c59, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d4c61, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006d54

dec_label_pc_10006d4c:                            ; preds = %dec_label_pc_10006d2c
  br i1 %v3_10006d4c, label %dec_label_pc_10006d60, label %dec_label_pc_10006d4c.dec_label_pc_10006d54_crit_edge

dec_label_pc_10006d4c.dec_label_pc_10006d54_crit_edge: ; preds = %dec_label_pc_10006d4c
  %v0_10006d54.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006d54

dec_label_pc_10006d54:                            ; preds = %dec_label_pc_10006d4c.dec_label_pc_10006d54_crit_edge, %dec_label_pc_10006d4c.thread
  %v0_10006d54 = phi i32 [ %v0_10006d5476, %dec_label_pc_10006d4c.thread ], [ %v0_10006d54.pre, %dec_label_pc_10006d4c.dec_label_pc_10006d54_crit_edge ]
  %v0_10006d4c62 = phi i32 [ %v0_10006d4c.ph, %dec_label_pc_10006d4c.thread ], [ %v0_10006d0839, %dec_label_pc_10006d4c.dec_label_pc_10006d54_crit_edge ]
  %v1_10006d54 = icmp slt i32 %v0_10006d54, 1
  %v2_10006d54 = icmp sgt i32 %v0_10006d54, 1
  %v3_10006d54 = icmp eq i32 %v0_10006d54, 1
  store i1 %v1_10006d54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006d54, label %dec_label_pc_10006d60, label %dec_label_pc_10006d5c

dec_label_pc_10006d5c:                            ; preds = %dec_label_pc_10006d54
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10006d60

dec_label_pc_10006d60:                            ; preds = %dec_label_pc_10006d54, %dec_label_pc_10006d4c, %dec_label_pc_10006d5c
  %v0_10006d6c3 = phi i32 [ %v0_10006d4c62, %dec_label_pc_10006d54 ], [ -1, %dec_label_pc_10006d4c ], [ -1, %dec_label_pc_10006d5c ]
  %v2_10006d60 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10006d60, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_10006d6c4 = icmp slt i32 %v0_10006d6c3, -1
  %v3_10006d6c6 = icmp eq i32 %v0_10006d6c3, -1
  store i1 %v1_10006d6c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d6c6, i1* %cr7_eq.global-to-local, align 1
  %v2_10006ddc = icmp slt i32 %tmp, 65535
  %v4_10006ddc = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_10006d6c

dec_label_pc_10006d6c:                            ; preds = %dec_label_pc_10006d60, %dec_label_pc_10006e38
  %v2_10006da8 = phi i32 [ %v2_10006d60, %dec_label_pc_10006d60 ], [ %v2_10006d9051, %dec_label_pc_10006e38 ]
  %v0_10006d7c = phi i32 [ %v0_10006d6c3, %dec_label_pc_10006d60 ], [ %v0_10006d6c, %dec_label_pc_10006e38 ]
  %v0_10006d9c = phi i32 [ 0, %dec_label_pc_10006d60 ], [ %v1_10006e38, %dec_label_pc_10006e38 ]
  %v3_10006d6c7 = phi i1 [ %v3_10006d6c6, %dec_label_pc_10006d60 ], [ %v3_10006d6c, %dec_label_pc_10006e38 ]
  br i1 %v3_10006d6c7, label %dec_label_pc_10006d9c, label %dec_label_pc_10006d74

dec_label_pc_10006d74:                            ; preds = %dec_label_pc_10006d6c
  %v2_10006d74 = icmp slt i32 %v0_10006d9c, %v0_10006d7c
  %v4_10006d74 = icmp eq i32 %v0_10006d9c, %v0_10006d7c
  br i1 %v2_10006d74, label %dec_label_pc_10006d9c, label %dec_label_pc_10006d7c

dec_label_pc_10006d7c:                            ; preds = %dec_label_pc_10006d74
  %v1_10006d7c = load i32, i32* @r30, align 4
  %v2_10006d7c = add i32 %v1_10006d7c, %v0_10006d7c
  %v2_10006d80 = icmp slt i32 %v0_10006d9c, %v2_10006d7c
  %v4_10006d80 = icmp eq i32 %v0_10006d9c, %v2_10006d7c
  store i1 %v2_10006d80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006d80, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006d80, label %dec_label_pc_10006d88, label %dec_label_pc_10006d9c

dec_label_pc_10006d88:                            ; preds = %dec_label_pc_10006d7c
  br i1 %v4_10006d74, label %dec_label_pc_10006d8c, label %dec_label_pc_10006e38

dec_label_pc_10006d8c:                            ; preds = %dec_label_pc_10006d88
  %v3_10006d90 = inttoptr i32 %v2_10006da8 to i8*
  store i8 58, i8* %v3_10006d90, align 1
  %v0_10006d94 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006d94 = add i32 %v0_10006d94, 1
  store i32 %v1_10006d94, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006e38

dec_label_pc_10006d9c:                            ; preds = %dec_label_pc_10006d7c, %dec_label_pc_10006d74, %dec_label_pc_10006d6c
  %v1_10006d9c = icmp slt i32 %v0_10006d9c, 0
  %v3_10006d9c = icmp eq i32 %v0_10006d9c, 0
  store i1 %v1_10006d9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d9c, label %dec_label_pc_10006db0.thread, label %dec_label_pc_10006db0

dec_label_pc_10006db0.thread:                     ; preds = %dec_label_pc_10006d9c
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006e14

dec_label_pc_10006db0:                            ; preds = %dec_label_pc_10006d9c
  %v3_10006da8 = inttoptr i32 %v2_10006da8 to i8*
  store i8 58, i8* %v3_10006da8, align 1
  %v0_10006dac = load i32, i32* %r29.global-to-local, align 4
  %v1_10006dac = add i32 %v0_10006dac, 1
  store i32 %v1_10006dac, i32* %r29.global-to-local, align 4
  %v0_10006db0.pre = load i32, i32* @r31, align 4
  %v1_10006db0 = icmp slt i32 %v0_10006db0.pre, 6
  %v3_10006db0 = icmp eq i32 %v0_10006db0.pre, 6
  store i1 %v1_10006db0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006db0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006db0, label %dec_label_pc_10006db8, label %dec_label_pc_10006e14

dec_label_pc_10006db8:                            ; preds = %dec_label_pc_10006db0
  %v0_10006db8 = load i32, i32* @r28, align 4
  %v1_10006db8 = icmp slt i32 %v0_10006db8, 0
  %v3_10006db8 = icmp eq i32 %v0_10006db8, 0
  store i1 %v1_10006db8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006db8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006db8, label %dec_label_pc_10006dc0, label %dec_label_pc_10006e14

dec_label_pc_10006dc0:                            ; preds = %dec_label_pc_10006db8
  %v0_10006dc0 = load i32, i32* @r30, align 4
  %v1_10006dc0 = icmp slt i32 %v0_10006dc0, 6
  %v3_10006dc0 = icmp eq i32 %v0_10006dc0, 6
  store i1 %v1_10006dc0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006dc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006dc0, label %dec_label_pc_10006de4, label %dec_label_pc_10006dc8

dec_label_pc_10006dc8:                            ; preds = %dec_label_pc_10006dc0
  %v1_10006dc8 = icmp slt i32 %v0_10006dc0, 5
  %v3_10006dc8 = icmp eq i32 %v0_10006dc0, 5
  store i1 %v1_10006dc8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006dc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006dc8, label %dec_label_pc_10006dd0, label %dec_label_pc_10006e14

dec_label_pc_10006dd0:                            ; preds = %dec_label_pc_10006dc8
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_10006ddc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006ddc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006ddc, label %dec_label_pc_10006de4, label %dec_label_pc_10006e14

dec_label_pc_10006de4:                            ; preds = %dec_label_pc_10006dd0, %dec_label_pc_10006dc0
  %v1_10006de4 = load i32, i32* @r1, align 4
  %v2_10006de4 = sub i32 %v1_10006de4, %v1_10006dac
  %v0_10006de8 = load i32, i32* @r27, align 4
  %v1_10006de8 = add i32 %v0_10006de8, 12
  %v1_10006dec = add i32 %v2_10006de4, 86
  store i32 ptrtoint ([3 x i8]* @global_var_10006df8.146 to i32), i32* @lr, align 4
  %v3_10006df4 = call i32 @inet_ntop4(i32 %v1_10006de8, i32 %v1_10006dac, i32 %v1_10006dec)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10006dfc = icmp slt i32 %v3_10006df4, 0
  %v3_10006dfc = icmp eq i32 %v3_10006df4, 0
  store i1 %v1_10006dfc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006dfc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006dfc, label %dec_label_pc_10006eb4, label %dec_label_pc_10006e04

dec_label_pc_10006e04:                            ; preds = %dec_label_pc_10006de4
  %v0_10006e04 = load i32, i32* @r29, align 4
  store i32 %v0_10006e04, i32* @r3, align 4
  %v0_10006e08 = call i32 @__GI_strlen()
  %v0_10006e0c = load i32, i32* @r29, align 4
  %v2_10006e0c = add i32 %v0_10006e0c, %v0_10006e08
  store i32 %v2_10006e0c, i32* %r29.global-to-local, align 4
  %v0_10006e4c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006e4c

dec_label_pc_10006e14:                            ; preds = %dec_label_pc_10006db0.thread, %dec_label_pc_10006dd0, %dec_label_pc_10006dc8, %dec_label_pc_10006db8, %dec_label_pc_10006db0
  %v0_10006e1467 = phi i32 [ 0, %dec_label_pc_10006db0.thread ], [ 6, %dec_label_pc_10006dd0 ], [ 6, %dec_label_pc_10006dc8 ], [ 6, %dec_label_pc_10006db8 ], [ %v0_10006db0.pre, %dec_label_pc_10006db0 ]
  %v0_10006df066 = phi i32 [ %v2_10006da8, %dec_label_pc_10006db0.thread ], [ %v1_10006dac, %dec_label_pc_10006dd0 ], [ %v1_10006dac, %dec_label_pc_10006dc8 ], [ %v1_10006dac, %dec_label_pc_10006db8 ], [ %v1_10006dac, %dec_label_pc_10006db0 ]
  %v1_10006e14 = mul i32 %v0_10006e1467, 4
  store i32 %v2_10006c6c, i32* %r9.global-to-local, align 4
  %v2_10006e1c = add i32 %v1_10006e14, %v2_10006c6c
  %v3_10006e1c = inttoptr i32 %v2_10006e1c to i32*
  %v4_10006e1c = load i32, i32* %v3_10006e1c, align 4
  store i32 %v0_10006df066, i32* @r3, align 4
  store i32 268463668, i32* @lr, align 4
  %v5_10006e30 = call i32 @sprintf(i32 %v0_10006df066, i32 ptrtoint ([3 x i8]* @global_var_1000ac74.147 to i32), i32 %v4_10006e1c, i32 %v2_10006c6c)
  %v0_10006e34 = load i32, i32* @r29, align 4
  %v2_10006e34 = add i32 %v0_10006e34, %v5_10006e30
  store i32 %v2_10006e34, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006e38

dec_label_pc_10006e38:                            ; preds = %dec_label_pc_10006d88, %dec_label_pc_10006d8c, %dec_label_pc_10006e14
  %v2_10006d9051 = phi i32 [ %v2_10006da8, %dec_label_pc_10006d88 ], [ %v1_10006d94, %dec_label_pc_10006d8c ], [ %v2_10006e34, %dec_label_pc_10006e14 ]
  %v0_10006e38 = load i32, i32* @r31, align 4
  %v1_10006e38 = add i32 %v0_10006e38, 1
  store i32 %v1_10006e38, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_10006e38, 8
  %v0_10006d6c = load i32, i32* @r28, align 4
  %v1_10006d6c = icmp slt i32 %v0_10006d6c, -1
  %v3_10006d6c = icmp eq i32 %v0_10006d6c, -1
  store i1 %v1_10006d6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_10006d6c, label %dec_label_pc_10006e44

dec_label_pc_10006e44:                            ; preds = %dec_label_pc_10006e38
  br i1 %v3_10006d6c, label %dec_label_pc_10006e64, label %dec_label_pc_10006e4c

dec_label_pc_10006e4c:                            ; preds = %dec_label_pc_10006e44, %dec_label_pc_10006e04
  %v2_10006e5c = phi i32 [ %v2_10006d9051, %dec_label_pc_10006e44 ], [ %v2_10006e0c, %dec_label_pc_10006e04 ]
  %v0_10006e4c = phi i32 [ %v0_10006d6c, %dec_label_pc_10006e44 ], [ %v0_10006e4c.pre, %dec_label_pc_10006e04 ]
  %v1_10006e4c = load i32, i32* @r30, align 4
  %v2_10006e4c = add i32 %v1_10006e4c, %v0_10006e4c
  %v1_10006e50 = icmp slt i32 %v2_10006e4c, 8
  %v3_10006e50 = icmp eq i32 %v2_10006e4c, 8
  store i1 %v1_10006e50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e50, label %dec_label_pc_10006e58, label %dec_label_pc_10006e64

dec_label_pc_10006e58:                            ; preds = %dec_label_pc_10006e4c
  %v3_10006e5c = inttoptr i32 %v2_10006e5c to i8*
  store i8 58, i8* %v3_10006e5c, align 1
  %v0_10006e60 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006e60 = add i32 %v0_10006e60, 1
  store i32 %v1_10006e60, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006e64

dec_label_pc_10006e64:                            ; preds = %dec_label_pc_10006e4c, %dec_label_pc_10006e44, %dec_label_pc_10006e58
  %v2_10006e78 = phi i32 [ %v2_10006e5c, %dec_label_pc_10006e4c ], [ %v2_10006d9051, %dec_label_pc_10006e44 ], [ %v1_10006e60, %dec_label_pc_10006e58 ]
  %v1_10006e64 = sub i32 1, %v2_10006d60
  %v2_10006e6c = add i32 %v1_10006e64, %v2_10006e78
  %v1_10006e70 = load i32, i32* @r26, align 4
  %v2_10006e70 = icmp ult i32 %v2_10006e6c, %v1_10006e70
  %v4_10006e70 = icmp eq i32 %v2_10006e6c, %v1_10006e70
  store i1 %v2_10006e70, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006e70, i1* %cr7_eq.global-to-local, align 1
  %v3_10006e78 = inttoptr i32 %v2_10006e78 to i8*
  store i8 0, i8* %v3_10006e78, align 1
  %v0_10006e7c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10006e7c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10006e7c = or i1 %v0_10006e7c, %v1_10006e7c
  br i1 %v2_10006e7c, label %dec_label_pc_10006e94, label %dec_label_pc_10006e80

dec_label_pc_10006e80:                            ; preds = %dec_label_pc_10006e64
  %v0_10006e80 = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10006e8c = inttoptr i32 %v0_10006e80 to i32*
  store i32 28, i32* %v2_10006e8c, align 4
  %v0_10006eb8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006eb4

dec_label_pc_10006e94:                            ; preds = %dec_label_pc_10006e64
  %v0_10006e94 = load i32, i32* @r25, align 4
  %v2_10006e98 = bitcast i32* %stack_var_-88 to i8*
  %v3_10006e98 = call i32 @strcpy(i32 %v0_10006e94, i8* %v2_10006e98)
  br label %dec_label_pc_10006e9c

dec_label_pc_10006e9c:                            ; preds = %dec_label_pc_10006c58, %dec_label_pc_10006e94
  %storemerge1 = phi i32 [ %v3_10006c64, %dec_label_pc_10006c58 ], [ %v3_10006e98, %dec_label_pc_10006e94 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006eb4

dec_label_pc_10006ea4:                            ; preds = %dec_label_pc_10006c4c
  %v0_10006ea4 = call i32 @__errno_location()
  %v2_10006eac = inttoptr i32 %v0_10006ea4 to i32*
  store i32 97, i32* %v2_10006eac, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006eb4

dec_label_pc_10006eb4:                            ; preds = %dec_label_pc_10006de4, %dec_label_pc_10006e9c, %dec_label_pc_10006e80, %dec_label_pc_10006ea4
  %v0_10006eb8 = phi i32 [ 0, %dec_label_pc_10006de4 ], [ %storemerge1, %dec_label_pc_10006e9c ], [ %v0_10006eb8.pre, %dec_label_pc_10006e80 ], [ 0, %dec_label_pc_10006ea4 ]
  ret i32 %v0_10006eb8

; uselistorder directives
  uselistorder i32 %v2_10006e78, { 1, 0 }
  uselistorder i32 %v2_10006e4c, { 1, 0 }
  uselistorder i1 %v3_10006d6c, { 0, 2, 1 }
  uselistorder i32 %v0_10006d6c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10006e38, { 2, 1, 0 }
  uselistorder i32 %v0_10006df066, { 1, 0 }
  uselistorder i32 %v3_10006df4, { 1, 0 }
  uselistorder i32 %v0_10006dc0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10006db0.pre, { 2, 0, 1 }
  uselistorder i32 %v1_10006dac, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_10006d7c, { 1, 0 }
  uselistorder i32 %v0_10006d9c, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_10006d7c, { 0, 2, 1 }
  uselistorder i32 %v2_10006da8, { 3, 0, 1, 2 }
  uselistorder i32 %v0_10006d6c3, { 0, 2, 1 }
  uselistorder i32 %v0_10006d54, { 2, 1, 0 }
  uselistorder i32 %v0_10006d44.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_10006d4c, { 1, 0, 2 }
  uselistorder i32 %v1_10006d28, { 2, 1, 0 }
  uselistorder i32 %v1_10006d24, { 1, 0 }
  uselistorder i32 %v0_10006d0839, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_10006d1842, { 0, 2, 1, 3 }
  uselistorder i1 %v3_10006cdc, { 1, 0 }
  uselistorder i32 %v0_10006d24, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_10006cdc, { 1, 0 }
  uselistorder i32 %v0_10006d08, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_10006d18, { 2, 3, 0, 1 }
  uselistorder i32 %v1_10006cb8, { 1, 0 }
  uselistorder i32 %v2_10006cb0, { 1, 0 }
  uselistorder i32 %v0_10006ca8, { 1, 0, 2 }
  uselistorder i32 %v1_10006c90, { 1, 0 }
  uselistorder i32 %v2_10006c6c, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 16, 12, 17, 14, 13, 15, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 16, 12, 17, 14, 13, 15, 19 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5 }
  uselistorder i32 65535, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10006eb4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10006e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10006e64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006e38, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006e14, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10006d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10006d60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006d44, { 1, 0 }
  uselistorder label %dec_label_pc_10006d24, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006d20, { 1, 0 }
  uselistorder label %dec_label_pc_10006cd8, { 1, 0 }
  uselistorder label %dec_label_pc_10006c90, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r7.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_10006fb0, label %dec_label_pc_10006ed8

dec_label_pc_10006ed8:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_10006ed8 = add i32 %tmp, 2
  %v2_10006ed8 = inttoptr i32 %v1_10006ed8 to i8*
  %v3_10006ed8 = load i8, i8* %v2_10006ed8, align 1
  %v4_10006ed8 = zext i8 %v3_10006ed8 to i32
  store i32 %v4_10006ed8, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r7.global-to-local, align 4
  store i8 %v3_10006ed8, i8* %tmp3, align 1
  %v2_10006ee4 = load i32, i32* %arg1, align 4
  store i32 %v2_10006ee4, i32* %r0.global-to-local, align 4
  %v1_10006ee8 = trunc i32 %v2_10006ee4 to i8
  %v4_10006ee8 = add i32 %arg2, 1
  %v5_10006ee8 = inttoptr i32 %v4_10006ee8 to i8*
  store i8 %v1_10006ee8, i8* %v5_10006ee8, align 1
  %v1_10006eec = add i32 %tmp, 12
  %v2_10006eec = inttoptr i32 %v1_10006eec to i32*
  %v3_10006eec = load i32, i32* %v2_10006eec, align 4
  store i32 %v3_10006eec, i32* %r0.global-to-local, align 4
  %v1_10006ef0 = add i32 %tmp, 16
  %v2_10006ef0 = inttoptr i32 %v1_10006ef0 to i32*
  %v3_10006ef0 = load i32, i32* %v2_10006ef0, align 4
  store i32 %v3_10006ef0, i32* %r11.global-to-local, align 4
  %v1_10006ef4 = add i32 %tmp, 4
  %v2_10006ef4 = inttoptr i32 %v1_10006ef4 to i32*
  %v3_10006ef4 = load i32, i32* %v2_10006ef4, align 4
  %v2_10006ef8 = icmp ne i32 %v3_10006eec, 0
  %v5_10006efc = zext i1 %v2_10006ef8 to i32
  store i32 %v5_10006efc, i32* %r10.global-to-local, align 4
  %v1_10006f00 = add i32 %tmp, 8
  %v2_10006f00 = inttoptr i32 %v1_10006f00 to i32*
  %v3_10006f00 = load i32, i32* %v2_10006f00, align 4
  %v2_10006f04 = icmp ne i32 %v3_10006ef0, 0
  %v5_10006f08 = zext i1 %v2_10006f04 to i32
  %v1_10006f0c = add i32 %tmp, 20
  %v2_10006f0c = inttoptr i32 %v1_10006f0c to i32*
  %v3_10006f0c = load i32, i32* %v2_10006f0c, align 4
  store i32 %v3_10006f0c, i32* %r0.global-to-local, align 4
  %not.v2_10006f10 = icmp eq i32 %v3_10006ef4, 0
  %v6_10006f14 = sext i1 %not.v2_10006f10 to i32
  store i32 %v5_10006f08, i32* %r11.global-to-local, align 4
  %v1_10006f1c = call i32 @__asm_rlwinm(i32 %v6_10006f14, i32 0, i32 24, i32 24)
  %v0_10006f20 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006f20 = mul i32 %v0_10006f20, 4
  store i32 %v1_10006f20, i32* %r10.global-to-local, align 4
  %v1_10006f24 = call i32 @__asm_rlwinm(i32 %v3_10006f00, i32 3, i32 25, i32 28)
  %v0_10006f28 = load i32, i32* %r0.global-to-local, align 4
  %v2_10006f28 = icmp ne i32 %v0_10006f28, 0
  %v5_10006f2c = zext i1 %v2_10006f28 to i32
  %v2_10006f30 = or i32 %v1_10006f20, %v1_10006f24
  store i32 %v2_10006f30, i32* %r10.global-to-local, align 4
  %v1_10006f34 = add i32 %v1_10006f1c, 128
  %v0_10006f38 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006f38 = mul i32 %v0_10006f38, 2
  store i32 %v1_10006f38, i32* %r11.global-to-local, align 4
  %v2_10006f3c = or i32 %v2_10006f30, %v5_10006f2c
  store i32 %v2_10006f3c, i32* %r0.global-to-local, align 4
  %v2_10006f40 = or i32 %v2_10006f3c, %v1_10006f34
  %v2_10006f44 = or i32 %v2_10006f40, %v1_10006f38
  %v1_10006f48 = trunc i32 %v2_10006f44 to i8
  %v4_10006f48 = add i32 %arg2, 2
  %v5_10006f48 = inttoptr i32 %v4_10006f48 to i8*
  store i8 %v1_10006f48, i8* %v5_10006f48, align 1
  %v1_10006f4c = add i32 %tmp, 24
  %v2_10006f4c = inttoptr i32 %v1_10006f4c to i32*
  %v3_10006f4c = load i32, i32* %v2_10006f4c, align 4
  %v1_10006f50 = add i32 %tmp, 28
  %v2_10006f50 = inttoptr i32 %v1_10006f50 to i32*
  %v3_10006f50 = load i32, i32* %v2_10006f50, align 4
  store i32 %v3_10006f50, i32* %r0.global-to-local, align 4
  %not.v2_10006f54 = icmp eq i32 %v3_10006f4c, 0
  %v6_10006f58 = sext i1 %not.v2_10006f54 to i32
  %v1_10006f5c = call i32 @__asm_rlwinm(i32 %v6_10006f58, i32 0, i32 24, i32 24)
  %v1_10006f60 = urem i32 %v3_10006f50, 16
  store i32 %v1_10006f60, i32* %r0.global-to-local, align 4
  %v1_10006f64 = add i32 %v1_10006f5c, 128
  %v2_10006f68 = or i32 %v1_10006f60, %v1_10006f64
  %v1_10006f6c = trunc i32 %v2_10006f68 to i8
  %v4_10006f6c = add i32 %arg2, 3
  %v5_10006f6c = inttoptr i32 %v4_10006f6c to i8*
  store i8 %v1_10006f6c, i8* %v5_10006f6c, align 1
  %v1_10006f70 = add i32 %tmp, 34
  %v2_10006f70 = inttoptr i32 %v1_10006f70 to i8*
  %v3_10006f70 = load i8, i8* %v2_10006f70, align 1
  %v4_10006f70 = zext i8 %v3_10006f70 to i32
  store i32 %v4_10006f70, i32* %r0.global-to-local, align 4
  %v4_10006f74 = add i32 %arg2, 4
  %v5_10006f74 = inttoptr i32 %v4_10006f74 to i8*
  store i8 %v3_10006f70, i8* %v5_10006f74, align 1
  %v1_10006f78 = add i32 %tmp, 32
  %v2_10006f78 = inttoptr i32 %v1_10006f78 to i32*
  %v3_10006f78 = load i32, i32* %v2_10006f78, align 4
  store i32 %v3_10006f78, i32* %r0.global-to-local, align 4
  %v1_10006f7c = trunc i32 %v3_10006f78 to i8
  %v4_10006f7c = add i32 %arg2, 5
  %v5_10006f7c = inttoptr i32 %v4_10006f7c to i8*
  store i8 %v1_10006f7c, i8* %v5_10006f7c, align 1
  %v1_10006f80 = add i32 %tmp, 38
  %v2_10006f80 = inttoptr i32 %v1_10006f80 to i8*
  %v3_10006f80 = load i8, i8* %v2_10006f80, align 1
  %v4_10006f80 = zext i8 %v3_10006f80 to i32
  store i32 %v4_10006f80, i32* %r0.global-to-local, align 4
  %v4_10006f84 = add i32 %arg2, 6
  %v5_10006f84 = inttoptr i32 %v4_10006f84 to i8*
  store i8 %v3_10006f80, i8* %v5_10006f84, align 1
  %v1_10006f88 = add i32 %tmp, 36
  %v2_10006f88 = inttoptr i32 %v1_10006f88 to i32*
  %v3_10006f88 = load i32, i32* %v2_10006f88, align 4
  store i32 %v3_10006f88, i32* %r0.global-to-local, align 4
  %v1_10006f8c = trunc i32 %v3_10006f88 to i8
  %v4_10006f8c = add i32 %arg2, 7
  %v5_10006f8c = inttoptr i32 %v4_10006f8c to i8*
  store i8 %v1_10006f8c, i8* %v5_10006f8c, align 1
  %v1_10006f90 = add i32 %tmp, 42
  %v2_10006f90 = inttoptr i32 %v1_10006f90 to i8*
  %v3_10006f90 = load i8, i8* %v2_10006f90, align 1
  %v4_10006f90 = zext i8 %v3_10006f90 to i32
  store i32 %v4_10006f90, i32* %r0.global-to-local, align 4
  %v4_10006f94 = add i32 %arg2, 8
  %v5_10006f94 = inttoptr i32 %v4_10006f94 to i8*
  store i8 %v3_10006f90, i8* %v5_10006f94, align 1
  %v1_10006f98 = add i32 %tmp, 40
  %v2_10006f98 = inttoptr i32 %v1_10006f98 to i32*
  %v3_10006f98 = load i32, i32* %v2_10006f98, align 4
  store i32 %v3_10006f98, i32* %r0.global-to-local, align 4
  %v1_10006f9c = trunc i32 %v3_10006f98 to i8
  %v4_10006f9c = add i32 %arg2, 9
  %v5_10006f9c = inttoptr i32 %v4_10006f9c to i8*
  store i8 %v1_10006f9c, i8* %v5_10006f9c, align 1
  %v1_10006fa0 = add i32 %tmp, 46
  %v2_10006fa0 = inttoptr i32 %v1_10006fa0 to i8*
  %v3_10006fa0 = load i8, i8* %v2_10006fa0, align 1
  %v4_10006fa0 = zext i8 %v3_10006fa0 to i32
  store i32 %v4_10006fa0, i32* %r0.global-to-local, align 4
  %v4_10006fa4 = add i32 %arg2, 10
  %v5_10006fa4 = inttoptr i32 %v4_10006fa4 to i8*
  store i8 %v3_10006fa0, i8* %v5_10006fa4, align 1
  %v1_10006fa8 = add i32 %tmp, 44
  %v2_10006fa8 = inttoptr i32 %v1_10006fa8 to i32*
  %v3_10006fa8 = load i32, i32* %v2_10006fa8, align 4
  store i32 %v3_10006fa8, i32* %r0.global-to-local, align 4
  %v1_10006fac = trunc i32 %v3_10006fa8 to i8
  %v4_10006fac = add i32 %arg2, 11
  %v5_10006fac = inttoptr i32 %v4_10006fac to i8*
  store i8 %v1_10006fac, i8* %v5_10006fac, align 1
  %v0_10006fb0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10006fb0

dec_label_pc_10006fb0:                            ; preds = %entry, %dec_label_pc_10006ed8
  %v0_10006fb0 = phi i32 [ -1, %entry ], [ %v0_10006fb0.pre, %dec_label_pc_10006ed8 ]
  ret i32 %v0_10006fb0

; uselistorder directives
  uselistorder i32 %v1_10006f60, { 1, 0 }
  uselistorder i32 %v1_10006f38, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder label %dec_label_pc_10006fb0, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10006fb8 = load i8, i8* %arg1, align 1
  %v4_10006fb8 = zext i8 %v3_10006fb8 to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_10006fc0 = add i32 %tmp, 1
  %v3_10006fc0 = inttoptr i32 %v2_10006fc0 to i8*
  %v4_10006fc0 = load i8, i8* %v3_10006fc0, align 1
  %v5_10006fc0 = zext i8 %v4_10006fc0 to i32
  %v1_10006fc8 = mul nuw nsw i32 %v4_10006fb8, 256
  %v2_10006fcc = or i32 %v5_10006fc0, %v1_10006fc8
  %v2_10006fd0 = inttoptr i32 %arg2 to i32*
  store i32 %v2_10006fcc, i32* %v2_10006fd0, align 4
  %v0_10006fd4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006fd4 = add i32 %v0_10006fd4, 2
  %v2_10006fd4 = inttoptr i32 %v1_10006fd4 to i8*
  %v3_10006fd4 = load i8, i8* %v2_10006fd4, align 1
  %v4_10006fd4 = zext i8 %v3_10006fd4 to i32
  %v1_10006fd8 = call i32 @__asm_rlwinm(i32 %v4_10006fd4, i32 25, i32 31, i32 31)
  %v2_10006fdc = add i32 %arg2, 4
  %v3_10006fdc = inttoptr i32 %v2_10006fdc to i32*
  store i32 %v1_10006fd8, i32* %v3_10006fdc, align 4
  %v0_10006fe0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006fe0 = add i32 %v0_10006fe0, 2
  %v2_10006fe0 = inttoptr i32 %v1_10006fe0 to i8*
  %v3_10006fe0 = load i8, i8* %v2_10006fe0, align 1
  %v4_10006fe0 = zext i8 %v3_10006fe0 to i32
  %v1_10006fe4 = call i32 @__asm_rlwinm(i32 %v4_10006fe0, i32 29, i32 28, i32 31)
  %v2_10006fe8 = add i32 %arg2, 8
  %v3_10006fe8 = inttoptr i32 %v2_10006fe8 to i32*
  store i32 %v1_10006fe4, i32* %v3_10006fe8, align 4
  %v0_10006fec = load i32, i32* %r9.global-to-local, align 4
  %v1_10006fec = add i32 %v0_10006fec, 2
  %v2_10006fec = inttoptr i32 %v1_10006fec to i8*
  %v3_10006fec = load i8, i8* %v2_10006fec, align 1
  %v4_10006fec = zext i8 %v3_10006fec to i32
  %v1_10006ff0 = call i32 @__asm_rlwinm(i32 %v4_10006fec, i32 30, i32 31, i32 31)
  %v2_10006ff4 = add i32 %arg2, 12
  %v3_10006ff4 = inttoptr i32 %v2_10006ff4 to i32*
  store i32 %v1_10006ff0, i32* %v3_10006ff4, align 4
  %v0_10006ff8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006ff8 = add i32 %v0_10006ff8, 2
  %v2_10006ff8 = inttoptr i32 %v1_10006ff8 to i8*
  %v3_10006ff8 = load i8, i8* %v2_10006ff8, align 1
  %v4_10006ff8 = zext i8 %v3_10006ff8 to i32
  %v1_10006ffc = call i32 @__asm_rlwinm(i32 %v4_10006ff8, i32 31, i32 31, i32 31)
  %v2_10007000 = add i32 %arg2, 16
  %v3_10007000 = inttoptr i32 %v2_10007000 to i32*
  store i32 %v1_10006ffc, i32* %v3_10007000, align 4
  %v0_10007004 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007004 = add i32 %v0_10007004, 2
  %v2_10007004 = inttoptr i32 %v1_10007004 to i8*
  %v3_10007004 = load i8, i8* %v2_10007004, align 1
  %tmp1 = urem i8 %v3_10007004, 2
  %v1_10007008 = zext i8 %tmp1 to i32
  %v2_1000700c = add i32 %arg2, 20
  %v3_1000700c = inttoptr i32 %v2_1000700c to i32*
  store i32 %v1_10007008, i32* %v3_1000700c, align 4
  %v0_10007010 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007010 = add i32 %v0_10007010, 3
  %v2_10007010 = inttoptr i32 %v1_10007010 to i8*
  %v3_10007010 = load i8, i8* %v2_10007010, align 1
  %v4_10007010 = zext i8 %v3_10007010 to i32
  %v1_10007014 = call i32 @__asm_rlwinm(i32 %v4_10007010, i32 25, i32 31, i32 31)
  %v2_10007018 = add i32 %arg2, 24
  %v3_10007018 = inttoptr i32 %v2_10007018 to i32*
  store i32 %v1_10007014, i32* %v3_10007018, align 4
  %v0_1000701c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000701c = add i32 %v0_1000701c, 3
  %v2_1000701c = inttoptr i32 %v1_1000701c to i8*
  %v3_1000701c = load i8, i8* %v2_1000701c, align 1
  %tmp2 = urem i8 %v3_1000701c, 16
  %v1_10007020 = zext i8 %tmp2 to i32
  %v2_10007024 = add i32 %arg2, 28
  %v3_10007024 = inttoptr i32 %v2_10007024 to i32*
  store i32 %v1_10007020, i32* %v3_10007024, align 4
  %v0_10007028 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007028 = add i32 %v0_10007028, 4
  %v2_10007028 = inttoptr i32 %v1_10007028 to i8*
  %v3_10007028 = load i8, i8* %v2_10007028, align 1
  %v4_10007028 = zext i8 %v3_10007028 to i32
  %v1_1000702c = add i32 %v0_10007028, 5
  %v2_1000702c = inttoptr i32 %v1_1000702c to i8*
  %v3_1000702c = load i8, i8* %v2_1000702c, align 1
  %v4_1000702c = zext i8 %v3_1000702c to i32
  %v1_10007030 = mul nuw nsw i32 %v4_10007028, 256
  %v2_10007034 = or i32 %v4_1000702c, %v1_10007030
  %v2_10007038 = add i32 %arg2, 32
  %v3_10007038 = inttoptr i32 %v2_10007038 to i32*
  store i32 %v2_10007034, i32* %v3_10007038, align 4
  %v0_1000703c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000703c = add i32 %v0_1000703c, 6
  %v2_1000703c = inttoptr i32 %v1_1000703c to i8*
  %v3_1000703c = load i8, i8* %v2_1000703c, align 1
  %v4_1000703c = zext i8 %v3_1000703c to i32
  %v1_10007040 = add i32 %v0_1000703c, 7
  %v2_10007040 = inttoptr i32 %v1_10007040 to i8*
  %v3_10007040 = load i8, i8* %v2_10007040, align 1
  %v4_10007040 = zext i8 %v3_10007040 to i32
  %v1_10007044 = mul nuw nsw i32 %v4_1000703c, 256
  %v2_10007048 = or i32 %v4_10007040, %v1_10007044
  %v2_1000704c = add i32 %arg2, 36
  %v3_1000704c = inttoptr i32 %v2_1000704c to i32*
  store i32 %v2_10007048, i32* %v3_1000704c, align 4
  %v0_10007050 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007050 = add i32 %v0_10007050, 8
  %v2_10007050 = inttoptr i32 %v1_10007050 to i8*
  %v3_10007050 = load i8, i8* %v2_10007050, align 1
  %v4_10007050 = zext i8 %v3_10007050 to i32
  %v1_10007054 = add i32 %v0_10007050, 9
  %v2_10007054 = inttoptr i32 %v1_10007054 to i8*
  %v3_10007054 = load i8, i8* %v2_10007054, align 1
  %v4_10007054 = zext i8 %v3_10007054 to i32
  %v1_10007058 = mul nuw nsw i32 %v4_10007050, 256
  %v2_1000705c = or i32 %v4_10007054, %v1_10007058
  %v2_10007060 = add i32 %arg2, 40
  %v3_10007060 = inttoptr i32 %v2_10007060 to i32*
  store i32 %v2_1000705c, i32* %v3_10007060, align 4
  %v0_10007064 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007064 = add i32 %v0_10007064, 10
  %v2_10007064 = inttoptr i32 %v1_10007064 to i8*
  %v3_10007064 = load i8, i8* %v2_10007064, align 1
  %v4_10007064 = zext i8 %v3_10007064 to i32
  %v1_10007068 = add i32 %v0_10007064, 11
  %v2_10007068 = inttoptr i32 %v1_10007068 to i8*
  %v3_10007068 = load i8, i8* %v2_10007068, align 1
  %v4_10007068 = zext i8 %v3_10007068 to i32
  store i32 %v4_10007068, i32* %r9.global-to-local, align 4
  %v1_1000706c = mul nuw nsw i32 %v4_10007064, 256
  %v2_10007070 = or i32 %v4_10007068, %v1_1000706c
  %v2_10007074 = add i32 %arg2, 44
  %v3_10007074 = inttoptr i32 %v2_10007074 to i32*
  store i32 %v2_10007070, i32* %v3_10007074, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_10007098 = load i32, i32* %arg1, align 4
  store i32 %v2_10007098, i32* %r3.global-to-local, align 4
  store i32 268464288, i32* @lr, align 4
  %v1_1000709c = inttoptr i32 %v2_10007098 to i8*
  %v2_1000709c = call i32 @__encode_dotted(i8* %v1_1000709c)
  store i32 %v2_1000709c, i32* %r3.global-to-local, align 4
  %v1_100070a0 = icmp slt i32 %v2_1000709c, 0
  %v1_100070a4 = load i32, i32* @r29, align 4
  %v2_100070a4 = sub i32 %v1_100070a4, %v2_1000709c
  store i32 %v2_100070a4, i32* @r29, align 4
  br i1 %v1_100070a0, label %dec_label_pc_100070e4, label %dec_label_pc_100070b0

dec_label_pc_100070b0:                            ; preds = %entry
  %v2_100070a8 = icmp sgt i32 %v2_100070a4, 3
  %v0_100070b0 = load i32, i32* @r30, align 4
  %v2_100070b0 = add i32 %v0_100070b0, %v2_1000709c
  store i32 %v2_100070b0, i32* %r9.global-to-local, align 4
  br i1 %v2_100070a8, label %dec_label_pc_100070c0, label %dec_label_pc_100070b8

dec_label_pc_100070b8:                            ; preds = %dec_label_pc_100070b0
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100070e4

dec_label_pc_100070c0:                            ; preds = %dec_label_pc_100070b0
  %v0_100070c0 = load i32, i32* @r31, align 4
  %v1_100070c0 = add i32 %v0_100070c0, 6
  %v2_100070c0 = inttoptr i32 %v1_100070c0 to i8*
  %v3_100070c0 = load i8, i8* %v2_100070c0, align 1
  %v5_100070c4 = inttoptr i32 %v2_100070b0 to i8*
  store i8 %v3_100070c0, i8* %v5_100070c4, align 1
  %v0_100070c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100070c8 = add i32 %v0_100070c8, 4
  store i32 %v1_100070c8, i32* %r3.global-to-local, align 4
  %v0_100070cc = load i32, i32* @r31, align 4
  %v1_100070cc = add i32 %v0_100070cc, 4
  %v2_100070cc = inttoptr i32 %v1_100070cc to i32*
  %v3_100070cc = load i32, i32* %v2_100070cc, align 4
  %v1_100070d0 = trunc i32 %v3_100070cc to i8
  %v2_100070d0 = load i32, i32* %r9.global-to-local, align 4
  %v3_100070d0 = add i32 %v2_100070d0, 1
  %v4_100070d0 = inttoptr i32 %v3_100070d0 to i8*
  store i8 %v1_100070d0, i8* %v4_100070d0, align 1
  %v0_100070d4 = load i32, i32* @r31, align 4
  %v1_100070d4 = add i32 %v0_100070d4, 10
  %v2_100070d4 = inttoptr i32 %v1_100070d4 to i8*
  %v3_100070d4 = load i8, i8* %v2_100070d4, align 1
  %v2_100070d8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100070d8 = add i32 %v2_100070d8, 2
  %v4_100070d8 = inttoptr i32 %v3_100070d8 to i8*
  store i8 %v3_100070d4, i8* %v4_100070d8, align 1
  %v0_100070dc = load i32, i32* @r31, align 4
  %v1_100070dc = add i32 %v0_100070dc, 8
  %v2_100070dc = inttoptr i32 %v1_100070dc to i32*
  %v3_100070dc = load i32, i32* %v2_100070dc, align 4
  %v1_100070e0 = trunc i32 %v3_100070dc to i8
  %v2_100070e0 = load i32, i32* %r9.global-to-local, align 4
  %v3_100070e0 = add i32 %v2_100070e0, 3
  %v4_100070e0 = inttoptr i32 %v3_100070e0 to i8*
  store i8 %v1_100070e0, i8* %v4_100070e0, align 1
  %v0_100070f4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100070e4

dec_label_pc_100070e4:                            ; preds = %entry, %dec_label_pc_100070b8, %dec_label_pc_100070c0
  %v0_100070f4 = phi i32 [ %v2_1000709c, %entry ], [ -1, %dec_label_pc_100070b8 ], [ %v0_100070f4.pre, %dec_label_pc_100070c0 ]
  ret i32 %v0_100070f4

; uselistorder directives
  uselistorder i32 %v2_1000709c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_100070e4, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268464392, i32* @lr, align 4
  %v0_10007104 = call i32 @__length_dotted()
  %v1_10007108 = icmp slt i32 %v0_10007104, 0
  br i1 %v1_10007108, label %dec_label_pc_10007114, label %dec_label_pc_10007110

dec_label_pc_10007110:                            ; preds = %entry
  %v1_10007110 = add i32 %v0_10007104, 4
  br label %dec_label_pc_10007114

dec_label_pc_10007114:                            ; preds = %entry, %dec_label_pc_10007110
  %v0_10007120 = phi i32 [ %v0_10007104, %entry ], [ %v1_10007110, %dec_label_pc_10007110 ]
  ret i32 %v0_10007120

; uselistorder directives
  uselistorder label %dec_label_pc_10007114, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_10007128 = load i32, i32* @lr, align 4
  store i32 %v0_10007128, i32* %r0.global-to-local, align 4
  %v2_10007130 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_10007130, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268464468, i32* @lr, align 4
  %v2_10007150 = call i32 @__decode_dotted(i32 %v2_10007130, i32 256)
  store i32 %v2_10007150, i32* @r27, align 4
  %v1_10007154 = icmp slt i32 %v2_10007150, 0
  %v0_10007158 = load i32, i32* @r28, align 4
  %v2_10007158 = add i32 %v0_10007158, %v2_10007150
  store i32 %v2_10007158, i32* @r28, align 4
  %v1_1000715c = load i32, i32* @r29, align 4
  %v2_1000715c = sub i32 %v1_1000715c, %v2_10007158
  %v1_10007160 = add i32 %v2_1000715c, -10
  br i1 %v1_10007154, label %dec_label_pc_1000721c, label %dec_label_pc_1000716c

dec_label_pc_1000716c:                            ; preds = %entry
  %v0_10007170 = load i32, i32* @r26, align 4
  %v2_10007170 = add i32 %v0_10007170, %v2_10007158
  store i32 %v2_10007170, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_10007160, -1
  br i1 %tmp6, label %dec_label_pc_10007180, label %dec_label_pc_10007178

dec_label_pc_10007178:                            ; preds = %dec_label_pc_1000716c
  store i32 %v1_10007160, i32* @r27, align 4
  br label %dec_label_pc_1000721c

dec_label_pc_10007180:                            ; preds = %dec_label_pc_1000716c
  store i32 268464516, i32* @lr, align 4
  %v1_10007180 = call i32 @__GI_strdup(i32 %v2_10007130)
  %v0_10007184 = load i32, i32* @r30, align 4
  %v1_10007184 = add i32 %v0_10007184, 2
  store i32 %v1_10007184, i32* %r8.global-to-local, align 4
  %v1_10007188 = load i32, i32* @r31, align 4
  %v2_10007188 = inttoptr i32 %v1_10007188 to i32*
  store i32 %v1_10007180, i32* %v2_10007188, align 4
  %v0_1000718c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000718c = add i32 %v0_1000718c, 2
  store i32 %v1_1000718c, i32* %r10.global-to-local, align 4
  %v0_10007190 = load i32, i32* @r30, align 4
  %v1_10007190 = add i32 %v0_10007190, 10
  store i32 %v1_10007190, i32* %r6.global-to-local, align 4
  %v0_10007194 = load i32, i32* @r26, align 4
  %v1_10007194 = load i32, i32* @r28, align 4
  %v2_10007194 = add i32 %v1_10007194, %v0_10007194
  %v3_10007194 = inttoptr i32 %v2_10007194 to i8*
  %v4_10007194 = load i8, i8* %v3_10007194, align 1
  %v5_10007194 = zext i8 %v4_10007194 to i32
  store i32 %v5_10007194, i32* %r0.global-to-local, align 4
  %v1_10007198 = add i32 %v0_10007190, 1
  %v2_10007198 = inttoptr i32 %v1_10007198 to i8*
  %v3_10007198 = load i8, i8* %v2_10007198, align 1
  %v4_10007198 = zext i8 %v3_10007198 to i32
  store i32 %v4_10007198, i32* %r9.global-to-local, align 4
  %v1_1000719c = mul nuw nsw i32 %v5_10007194, 256
  %v2_100071a0 = or i32 %v4_10007198, %v1_1000719c
  store i32 %v2_100071a0, i32* %r0.global-to-local, align 4
  %v1_100071a4 = load i32, i32* @r31, align 4
  %v2_100071a4 = add i32 %v1_100071a4, 4
  %v3_100071a4 = inttoptr i32 %v2_100071a4 to i32*
  store i32 %v2_100071a0, i32* %v3_100071a4, align 4
  %v0_100071a8 = load i32, i32* @r30, align 4
  %v1_100071a8 = add i32 %v0_100071a8, 2
  %v2_100071a8 = inttoptr i32 %v1_100071a8 to i8*
  %v3_100071a8 = load i8, i8* %v2_100071a8, align 1
  %v4_100071a8 = zext i8 %v3_100071a8 to i32
  store i32 %v4_100071a8, i32* %r0.global-to-local, align 4
  %v0_100071ac = load i32, i32* %r8.global-to-local, align 4
  %v1_100071ac = add i32 %v0_100071ac, 1
  %v2_100071ac = inttoptr i32 %v1_100071ac to i8*
  %v3_100071ac = load i8, i8* %v2_100071ac, align 1
  %v4_100071ac = zext i8 %v3_100071ac to i32
  store i32 %v4_100071ac, i32* %r9.global-to-local, align 4
  %v1_100071b0 = mul nuw nsw i32 %v4_100071a8, 256
  %v2_100071b4 = or i32 %v4_100071ac, %v1_100071b0
  store i32 %v2_100071b4, i32* %r0.global-to-local, align 4
  %v1_100071b8 = load i32, i32* @r31, align 4
  %v2_100071b8 = add i32 %v1_100071b8, 8
  %v3_100071b8 = inttoptr i32 %v2_100071b8 to i32*
  store i32 %v2_100071b4, i32* %v3_100071b8, align 4
  %v0_100071bc = load i32, i32* %r8.global-to-local, align 4
  %v1_100071bc = add i32 %v0_100071bc, 2
  %v2_100071bc = inttoptr i32 %v1_100071bc to i8*
  %v3_100071bc = load i8, i8* %v2_100071bc, align 1
  %v4_100071bc = zext i8 %v3_100071bc to i32
  store i32 %v4_100071bc, i32* %r0.global-to-local, align 4
  %v0_100071c0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100071c0 = add i32 %v0_100071c0, 1
  %v2_100071c0 = inttoptr i32 %v1_100071c0 to i8*
  %v3_100071c0 = load i8, i8* %v2_100071c0, align 1
  %v4_100071c0 = zext i8 %v3_100071c0 to i32
  store i32 %v4_100071c0, i32* %r11.global-to-local, align 4
  %v1_100071c4 = add i32 %v0_100071c0, 3
  %v2_100071c4 = inttoptr i32 %v1_100071c4 to i8*
  %v3_100071c4 = load i8, i8* %v2_100071c4, align 1
  %v4_100071c4 = zext i8 %v3_100071c4 to i32
  %v1_100071c8 = mul nuw i32 %v4_100071bc, 16777216
  store i32 %v1_100071c8, i32* %r0.global-to-local, align 4
  %v1_100071cc = add i32 %v0_100071c0, 2
  %v2_100071cc = inttoptr i32 %v1_100071cc to i8*
  %v3_100071cc = load i8, i8* %v2_100071cc, align 1
  %v4_100071cc = zext i8 %v3_100071cc to i32
  %v1_100071d0 = mul nuw nsw i32 %v4_100071c0, 65536
  %v2_100071d4 = or i32 %v1_100071d0, %v1_100071c8
  %v0_100071d8 = load i32, i32* @r28, align 4
  %v1_100071d8 = add i32 %v0_100071d8, 10
  store i32 %v1_100071d8, i32* %r11.global-to-local, align 4
  %v2_100071dc = or i32 %v2_100071d4, %v4_100071c4
  store i32 %v2_100071dc, i32* %r0.global-to-local, align 4
  %v1_100071e0 = mul nuw nsw i32 %v4_100071cc, 256
  %v2_100071e4 = or i32 %v1_100071e0, %v2_100071dc
  store i32 %v2_100071e4, i32* %r9.global-to-local, align 4
  %v1_100071e8 = load i32, i32* @r31, align 4
  %v2_100071e8 = add i32 %v1_100071e8, 12
  %v3_100071e8 = inttoptr i32 %v2_100071e8 to i32*
  store i32 %v2_100071e4, i32* %v3_100071e8, align 4
  %v0_100071ec = load i32, i32* %r8.global-to-local, align 4
  %v1_100071ec = add i32 %v0_100071ec, 6
  %v2_100071ec = inttoptr i32 %v1_100071ec to i8*
  %v3_100071ec = load i8, i8* %v2_100071ec, align 1
  %v4_100071ec = zext i8 %v3_100071ec to i32
  store i32 %v4_100071ec, i32* %r9.global-to-local, align 4
  %v0_100071f0 = load i32, i32* @r30, align 4
  %v1_100071f0 = add i32 %v0_100071f0, 9
  %v2_100071f0 = inttoptr i32 %v1_100071f0 to i8*
  %v3_100071f0 = load i8, i8* %v2_100071f0, align 1
  %v4_100071f0 = zext i8 %v3_100071f0 to i32
  store i32 %v4_100071f0, i32* %r0.global-to-local, align 4
  %v1_100071f4 = mul nuw nsw i32 %v4_100071ec, 256
  store i32 %v1_100071f4, i32* %r9.global-to-local, align 4
  %v0_100071f8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100071f8 = load i32, i32* @r31, align 4
  %v2_100071f8 = add i32 %v1_100071f8, 24
  %v3_100071f8 = inttoptr i32 %v2_100071f8 to i32*
  store i32 %v0_100071f8, i32* %v3_100071f8, align 4
  %v0_100071fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100071fc = load i32, i32* %r0.global-to-local, align 4
  %v2_100071fc = or i32 %v1_100071fc, %v0_100071fc
  store i32 %v2_100071fc, i32* %r9.global-to-local, align 4
  %v0_10007200 = load i32, i32* %r6.global-to-local, align 4
  %v1_10007200 = load i32, i32* @r31, align 4
  %v2_10007200 = add i32 %v1_10007200, 20
  %v3_10007200 = inttoptr i32 %v2_10007200 to i32*
  store i32 %v0_10007200, i32* %v3_10007200, align 4
  %v0_10007204 = load i32, i32* @r29, align 4
  %v1_10007204 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007204 = icmp slt i32 %v0_10007204, %v1_10007204
  %v1_10007208 = add i32 %v1_10007204, 10
  store i32 %v1_10007208, i32* %r0.global-to-local, align 4
  %v0_1000720c = load i32, i32* @r27, align 4
  %v2_1000720c = add i32 %v0_1000720c, %v1_10007208
  store i32 %v2_1000720c, i32* @r27, align 4
  %v1_10007210 = load i32, i32* @r31, align 4
  %v2_10007210 = add i32 %v1_10007210, 16
  %v3_10007210 = inttoptr i32 %v2_10007210 to i32*
  store i32 %v1_10007204, i32* %v3_10007210, align 4
  br i1 %v2_10007204, label %dec_label_pc_10007218, label %dec_label_pc_10007180.dec_label_pc_1000721c_crit_edge

dec_label_pc_10007180.dec_label_pc_1000721c_crit_edge: ; preds = %dec_label_pc_10007180
  %v0_10007220.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000721c

dec_label_pc_10007218:                            ; preds = %dec_label_pc_10007180
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1000721c

dec_label_pc_1000721c:                            ; preds = %dec_label_pc_10007180.dec_label_pc_1000721c_crit_edge, %entry, %dec_label_pc_10007178, %dec_label_pc_10007218
  %v0_10007220 = phi i32 [ %v0_10007220.pre, %dec_label_pc_10007180.dec_label_pc_1000721c_crit_edge ], [ %v2_10007150, %entry ], [ %v1_10007160, %dec_label_pc_10007178 ], [ -1, %dec_label_pc_10007218 ]
  store i32 %v0_10007128, i32* %r0.global-to-local, align 4
  ret i32 %v0_10007220

; uselistorder directives
  uselistorder i32 %v1_10007204, { 1, 0, 2 }
  uselistorder i32 %v1_100071c8, { 1, 0 }
  uselistorder i32 %v1_10007160, { 1, 2, 0 }
  uselistorder i32 %v2_10007150, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10007130, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32)* @__GI_strdup, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000721c, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_10007238 = load i32, i32* @lr, align 4
  store i32 268464732, i32* @lr, align 4
  %v3_10007258 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1000ac78.150 to i32), i32 ptrtoint (i32* @global_var_1000abfc.107 to i32))
  %v3_10007260 = icmp eq i32 %v3_10007258, 0
  br i1 %v3_10007260, label %dec_label_pc_10007268, label %dec_label_pc_10007284

dec_label_pc_10007268:                            ; preds = %entry
  %v0_1000725c = load i32, i32* @r29, align 4
  store i32 %v0_10007238, i32* @lr, align 4
  %v3_10007280 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1000ac84.151 to i32), i32 %v0_1000725c)
  br label %dec_label_pc_10007284

dec_label_pc_10007284:                            ; preds = %entry, %dec_label_pc_10007268
  %v0_10007294 = phi i32 [ %v3_10007258, %entry ], [ %v3_10007280, %dec_label_pc_10007268 ]
  ret i32 %v0_10007294

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10007284, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_10007298 = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_100072ac = sub i32 0, %arg6
  %v1_100072b0 = urem i32 %v1_100072ac, 4
  store i32 %v1_100072b0, i32* %r0.global-to-local, align 4
  %v3_100072b0 = icmp eq i32 %v1_100072b0, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_100072c8 = load i32, i32* @r10, align 4
  store i32 %v0_100072c8, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_100072e4.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_100072b0, label %dec_label_pc_100072e4, label %dec_label_pc_100072d4

dec_label_pc_100072d4:                            ; preds = %entry
  %v2_100072d4 = icmp ult i32 %v0_100072e4.pr, %v1_100072b0
  br i1 %v2_100072d4, label %dec_label_pc_10007598, label %dec_label_pc_100072dc

dec_label_pc_100072dc:                            ; preds = %dec_label_pc_100072d4
  %v2_100072dc = sub i32 %v0_100072e4.pr, %v1_100072b0
  store i32 %v2_100072dc, i32* %r9.global-to-local, align 4
  %v2_100072e0 = add i32 %v1_100072b0, %arg6
  store i32 %v2_100072e0, i32* @r30, align 4
  br label %dec_label_pc_100072e4

dec_label_pc_100072e4:                            ; preds = %entry, %dec_label_pc_100072dc
  %v0_100072f0 = phi i32 [ %v2_100072e0, %dec_label_pc_100072dc ], [ %arg6, %entry ]
  %v0_100072f4 = phi i32 [ %v2_100072dc, %dec_label_pc_100072dc ], [ %v0_100072e4.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_100072f4, 32
  br i1 %tmp49, label %dec_label_pc_10007598, label %dec_label_pc_100072ec

dec_label_pc_100072ec:                            ; preds = %dec_label_pc_100072e4
  %v3_100072ec = icmp eq i32 %arg4, 1
  %v1_100072f0 = add i32 %v0_100072f0, 32
  store i32 %v1_100072f0, i32* @r24, align 4
  %v1_100072f4 = add i32 %v0_100072f4, -32
  store i32 %v1_100072f4, i32* @r27, align 4
  br i1 %v3_100072ec, label %dec_label_pc_100073f4, label %dec_label_pc_100072fc

dec_label_pc_100072fc:                            ; preds = %dec_label_pc_100072ec
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10007304 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_10007304, align 4
  %tmp50 = icmp ult i32 %v1_100072f4, 4
  br i1 %tmp50, label %dec_label_pc_10007598, label %dec_label_pc_1000730c

dec_label_pc_1000730c:                            ; preds = %dec_label_pc_100072fc
  %v0_1000730c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000730c = add i32 %v0_1000730c, -36
  store i32 %v1_1000730c, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_1000730c, 8
  br i1 %tmp51, label %dec_label_pc_10007598, label %dec_label_pc_10007318

dec_label_pc_10007318:                            ; preds = %dec_label_pc_1000730c
  %v0_10007318 = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_10007318, 16
  br i1 %tmp52, label %dec_label_pc_10007598, label %dec_label_pc_10007320

dec_label_pc_10007320:                            ; preds = %dec_label_pc_10007318
  %v1_10007320 = add i32 %v0_1000730c, -48
  store i32 %v1_10007320, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_10007320, 8
  br i1 %tmp53, label %dec_label_pc_10007598, label %dec_label_pc_1000732c

dec_label_pc_1000732c:                            ; preds = %dec_label_pc_10007320
  %v1_1000732c = add i32 %v0_1000730c, -56
  store i32 %v1_1000732c, i32* %r0.global-to-local, align 4
  %v1_10007330 = add i32 %v0_1000730c, -44
  store i32 %v1_10007330, i32* @r27, align 4
  %v3_10007334 = icmp ugt i32 %v1_1000732c, %v1_10007330
  %v0_10007338 = load i32, i32* @r30, align 4
  %v1_10007338 = add i32 %v0_10007338, 36
  store i32 %v1_10007338, i32* @r29, align 4
  %v1_1000733c = add i32 %v0_10007338, 48
  store i32 %v1_1000733c, i32* @r26, align 4
  br i1 %v3_10007334, label %dec_label_pc_10007350, label %dec_label_pc_10007348

dec_label_pc_10007348:                            ; preds = %dec_label_pc_1000732c
  store i32 %v1_1000732c, i32* @r27, align 4
  br label %dec_label_pc_10007350

dec_label_pc_10007350:                            ; preds = %dec_label_pc_1000732c, %dec_label_pc_10007348
  %v0_10007350 = phi i32 [ %v1_1000732c, %dec_label_pc_10007348 ], [ %v1_10007330, %dec_label_pc_1000732c ]
  %tmp54 = icmp ult i32 %v0_10007350, 80
  br i1 %tmp54, label %dec_label_pc_10007598, label %dec_label_pc_10007358

dec_label_pc_10007358:                            ; preds = %dec_label_pc_10007350
  store i32 268464988, i32* @lr, align 4
  %v0_10007358 = call i32 @__open_etc_hosts()
  store i32 %v0_10007358, i32* @r20, align 4
  %v3_1000735c = icmp eq i32 %v0_10007358, 0
  br i1 %v3_1000735c, label %dec_label_pc_1000737c, label %dec_label_pc_10007364

dec_label_pc_10007364:                            ; preds = %dec_label_pc_10007358
  %v0_10007364 = load i32, i32* @r24, align 4
  store i32 %v0_10007364, i32* @r25, align 4
  %v0_1000736c = load i32, i32* @r26, align 4
  store i32 %v0_1000736c, i32* @r23, align 4
  %v0_10007370 = load i32, i32* @r31, align 4
  store i32 %v0_10007370, i32* @r24, align 4
  store i32 %v0_10007364, i32* %r21.global-to-local, align 4
  %v1_1000740c.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10007404

dec_label_pc_1000737c:                            ; preds = %dec_label_pc_10007358
  %v1_1000737c = load i32, i32* %r17.global-to-local, align 4
  %v2_1000737c = inttoptr i32 %v1_1000737c to i32*
  store i32 0, i32* %v2_1000737c, align 4
  %v0_10007380 = call i32 @__errno_location()
  %v1_10007384 = inttoptr i32 %v0_10007380 to i32*
  %v2_10007384 = load i32, i32* %v1_10007384, align 4
  store i32 %v2_10007384, i32* @r26, align 4
  br label %dec_label_pc_1000759c

dec_label_pc_1000738c:                            ; preds = %dec_label_pc_1000752c
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10007390 = load i32, i32* @r25, align 4
  %v1_10007390 = load i32, i32* @r22, align 4
  %v2_10007390 = inttoptr i32 %v1_10007390 to i32*
  store i32 %v0_10007390, i32* %v2_10007390, align 4
  %v0_10007394 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007394 = load i32, i32* @r22, align 4
  %v2_10007394 = add i32 %v1_10007394, 4
  %v3_10007394 = inttoptr i32 %v2_10007394 to i32*
  store i32 %v0_10007394, i32* %v3_10007394, align 4
  %v0_10007398 = load i32, i32* @r30, align 4
  %v1_10007398 = add i32 %v0_10007398, 8
  store i32 %v1_10007398, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_100073a0 = add i32 %v0_10007398, 4
  %v2_100073a0 = inttoptr i32 %v1_100073a0 to i32*
  %v3_100073a0 = load i32, i32* %v2_100073a0, align 4
  store i32 %v3_100073a0, i32* %r0.global-to-local, align 4
  %v0_100073a4 = load i32, i32* %r19.global-to-local, align 4
  %v1_100073a4 = load i32, i32* @r28, align 4
  %v2_100073a4 = add i32 %v1_100073a4, 8
  %v3_100073a4 = inttoptr i32 %v2_100073a4 to i32*
  store i32 %v0_100073a4, i32* %v3_100073a4, align 4
  %v0_100073a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100073a8 = load i32, i32* @r28, align 4
  %v2_100073a8 = inttoptr i32 %v1_100073a8 to i32*
  store i32 %v0_100073a8, i32* %v2_100073a8, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100073b0 = load i32, i32* @r28, align 4
  %v2_100073b0 = add i32 %v1_100073b0, 12
  %v3_100073b0 = inttoptr i32 %v2_100073b0 to i32*
  store i32 4, i32* %v3_100073b0, align 4
  %v0_100073b4 = load i32, i32* @r22, align 4
  %v1_100073b4 = load i32, i32* @r28, align 4
  %v2_100073b4 = add i32 %v1_100073b4, 16
  %v3_100073b4 = inttoptr i32 %v2_100073b4 to i32*
  store i32 %v0_100073b4, i32* %v3_100073b4, align 4
  br label %dec_label_pc_100073e8

dec_label_pc_100073bc:                            ; preds = %dec_label_pc_10007550
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100073c0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100073c0 = load i32, i32* @r23, align 4
  %v2_100073c0 = inttoptr i32 %v1_100073c0 to i32*
  store i32 %v0_100073c0, i32* %v2_100073c0, align 4
  %v0_100073c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100073c4 = load i32, i32* @r23, align 4
  %v2_100073c4 = add i32 %v1_100073c4, 4
  %v3_100073c4 = inttoptr i32 %v2_100073c4 to i32*
  store i32 %v0_100073c4, i32* %v3_100073c4, align 4
  %v0_100073c8 = load i32, i32* @r30, align 4
  %v1_100073c8 = add i32 %v0_100073c8, 8
  store i32 %v1_100073c8, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_100073d0 = add i32 %v0_100073c8, 4
  %v2_100073d0 = inttoptr i32 %v1_100073d0 to i32*
  %v3_100073d0 = load i32, i32* %v2_100073d0, align 4
  store i32 %v3_100073d0, i32* %r0.global-to-local, align 4
  %v0_100073d4 = load i32, i32* %r19.global-to-local, align 4
  %v1_100073d4 = load i32, i32* @r28, align 4
  %v2_100073d4 = add i32 %v1_100073d4, 8
  %v3_100073d4 = inttoptr i32 %v2_100073d4 to i32*
  store i32 %v0_100073d4, i32* %v3_100073d4, align 4
  %v0_100073d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100073d8 = load i32, i32* @r28, align 4
  %v2_100073d8 = inttoptr i32 %v1_100073d8 to i32*
  store i32 %v0_100073d8, i32* %v2_100073d8, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_100073e0 = load i32, i32* @r28, align 4
  %v2_100073e0 = add i32 %v1_100073e0, 12
  %v3_100073e0 = inttoptr i32 %v2_100073e0 to i32*
  store i32 16, i32* %v3_100073e0, align 4
  %v0_100073e4 = load i32, i32* @r23, align 4
  %v1_100073e4 = load i32, i32* @r28, align 4
  %v2_100073e4 = add i32 %v1_100073e4, 16
  %v3_100073e4 = inttoptr i32 %v2_100073e4 to i32*
  store i32 %v0_100073e4, i32* %v3_100073e4, align 4
  br label %dec_label_pc_100073e8

dec_label_pc_100073e8:                            ; preds = %dec_label_pc_1000738c, %dec_label_pc_100073bc
  %v0_100073e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100073e8 = load i32, i32* @r28, align 4
  %v2_100073e8 = add i32 %v1_100073e8, 4
  %v3_100073e8 = inttoptr i32 %v2_100073e8 to i32*
  store i32 %v0_100073e8, i32* %v3_100073e8, align 4
  %v0_100073ec = load i32, i32* @r28, align 4
  %v1_100073ec = load i32, i32* %r17.global-to-local, align 4
  %v2_100073ec = inttoptr i32 %v1_100073ec to i32*
  store i32 %v0_100073ec, i32* %v2_100073ec, align 4
  br label %dec_label_pc_10007584

dec_label_pc_100073f4:                            ; preds = %dec_label_pc_100072ec
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_10007404

dec_label_pc_10007404:                            ; preds = %dec_label_pc_10007364, %dec_label_pc_100073f4
  %v1_1000740c = phi i32 [ %v1_1000740c.pre, %dec_label_pc_10007364 ], [ %arg8, %dec_label_pc_100073f4 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_1000740c = inttoptr i32 %v1_1000740c to i32*
  store i32 1, i32* %v2_1000740c, align 4
  br label %dec_label_pc_1000756c

dec_label_pc_10007414:                            ; preds = %dec_label_pc_1000756c
  %v0_10007414 = load i32, i32* @r24, align 4
  store i32 %v0_10007414, i32* @r3, align 4
  store i32 268465184, i32* @lr, align 4
  %v2_1000741c = call i32 @__GI_strchr(i32 %v0_10007414, i32 35)
  %v4_10007420 = icmp eq i32 %v2_1000741c, 0
  br i1 %v4_10007420, label %dec_label_pc_10007430, label %dec_label_pc_10007428

dec_label_pc_10007428:                            ; preds = %dec_label_pc_10007414
  %v3_1000741c = inttoptr i32 %v2_1000741c to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_1000741c, align 1
  br label %dec_label_pc_10007430

dec_label_pc_10007430:                            ; preds = %dec_label_pc_10007414, %dec_label_pc_10007428
  %v0_10007430 = load i32, i32* @r24, align 4
  store i32 %v0_10007430, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_100074ac17 = inttoptr i32 %v0_10007430 to i8*
  %v2_100074ac18 = load i8, i8* %v1_100074ac17, align 1
  %v3_100074ac19 = zext i8 %v2_100074ac18 to i32
  store i32 %v3_100074ac19, i32* %r0.global-to-local, align 4
  %v3_100074b021 = icmp eq i8 %v2_100074ac18, 0
  br i1 %v3_100074b021, label %dec_label_pc_100074b8, label %dec_label_pc_10007448.preheader

dec_label_pc_1000743c:                            ; preds = %dec_label_pc_10007458
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10007440 = inttoptr i32 %v0_1000747c to i8*
  store i8 0, i8* %v3_10007440, align 1
  %v0_10007444 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007444 = add i32 %v0_10007444, 1
  store i32 %v1_10007444, i32* %r11.global-to-local, align 4
  %v1_10007448 = inttoptr i32 %v1_10007444 to i8*
  %v2_10007448 = load i8, i8* %v1_10007448, align 1
  %v3_10007448 = zext i8 %v2_10007448 to i32
  store i32 %v3_10007448, i32* %r0.global-to-local, align 4
  %v3_1000744c = icmp eq i8 %v2_10007448, 0
  br i1 %v3_1000744c, label %dec_label_pc_100074b8, label %dec_label_pc_10007458

dec_label_pc_10007458:                            ; preds = %dec_label_pc_10007448.preheader, %dec_label_pc_1000743c
  %v0_1000747c = phi i32 [ %v1_10007444, %dec_label_pc_1000743c ], [ %v0_100074482, %dec_label_pc_10007448.preheader ]
  %v0_10007460.in = phi i32 [ %v3_10007448, %dec_label_pc_1000743c ], [ %v3_100074485, %dec_label_pc_10007448.preheader ]
  %v0_10007460 = mul nuw nsw i32 %v0_10007460.in, 2
  %v3_1000745c = load i32, i32* @global_var_1001c35c, align 4
  store i32 %v3_1000745c, i32* %r9.global-to-local, align 4
  %v2_10007460 = add i32 %v3_1000745c, %v0_10007460
  %v3_10007460 = inttoptr i32 %v2_10007460 to i16*
  %v4_10007460 = load i16, i16* %v3_10007460, align 2
  %v5_10007460 = zext i16 %v4_10007460 to i32
  store i32 %v5_10007460, i32* %r0.global-to-local, align 4
  %v1_10007464 = and i32 %v5_10007460, 32
  store i32 %v1_10007464, i32* %r9.global-to-local, align 4
  %v3_10007464 = icmp eq i32 %v1_10007464, 0
  br i1 %v3_10007464, label %dec_label_pc_1000746c, label %dec_label_pc_1000743c

dec_label_pc_1000746c:                            ; preds = %dec_label_pc_10007458
  %v0_1000746c = load i32, i32* @r29, align 4
  %v2_1000746c = icmp sgt i32 %v0_1000746c, 6
  br i1 %v2_1000746c, label %dec_label_pc_10007488.preheader, label %dec_label_pc_10007474

dec_label_pc_10007474:                            ; preds = %dec_label_pc_1000746c
  %v1_10007474 = mul i32 %v0_1000746c, 4
  store i32 %v1_10007474, i32* %r0.global-to-local, align 4
  %v1_10007478 = add i32 %v0_1000746c, 1
  store i32 %v1_10007478, i32* @r29, align 4
  %v1_1000747c = load i32, i32* @r30, align 4
  %v3_1000747c = add i32 %v1_1000747c, %v1_10007474
  %v4_1000747c = inttoptr i32 %v3_1000747c to i32*
  store i32 %v0_1000747c, i32* %v4_1000747c, align 4
  %v0_100074889.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007488.preheader

dec_label_pc_10007488.preheader:                  ; preds = %dec_label_pc_10007474, %dec_label_pc_1000746c
  %v0_100074889 = phi i32 [ %v0_100074889.pre, %dec_label_pc_10007474 ], [ %v0_1000747c, %dec_label_pc_1000746c ]
  %v1_1000748810 = inttoptr i32 %v0_100074889 to i8*
  %v2_1000748811 = load i8, i8* %v1_1000748810, align 1
  %v3_1000748812 = zext i8 %v2_1000748811 to i32
  store i32 %v3_1000748812, i32* %r0.global-to-local, align 4
  %v3_1000748c14 = icmp eq i8 %v2_1000748811, 0
  br i1 %v3_1000748c14, label %dec_label_pc_100074ac.loopexit, label %dec_label_pc_10007498.lr.ph

dec_label_pc_10007498.lr.ph:                      ; preds = %dec_label_pc_10007488.preheader
  %v3_1000749c.pre = load i32, i32* @global_var_1001c35c, align 4
  br label %dec_label_pc_10007498

dec_label_pc_10007484:                            ; preds = %dec_label_pc_10007498
  %v1_10007484 = add i32 %v0_10007484, 1
  store i32 %v1_10007484, i32* %r11.global-to-local, align 4
  %v1_10007488 = inttoptr i32 %v1_10007484 to i8*
  %v2_10007488 = load i8, i8* %v1_10007488, align 1
  %v3_10007488 = zext i8 %v2_10007488 to i32
  store i32 %v3_10007488, i32* %r0.global-to-local, align 4
  %v3_1000748c = icmp eq i8 %v2_10007488, 0
  br i1 %v3_1000748c, label %dec_label_pc_100074ac.loopexit, label %dec_label_pc_10007498

dec_label_pc_10007498:                            ; preds = %dec_label_pc_10007498.lr.ph, %dec_label_pc_10007484
  %v0_10007484 = phi i32 [ %v0_100074889, %dec_label_pc_10007498.lr.ph ], [ %v1_10007484, %dec_label_pc_10007484 ]
  %v0_100074a0.in = phi i32 [ %v3_1000748812, %dec_label_pc_10007498.lr.ph ], [ %v3_10007488, %dec_label_pc_10007484 ]
  %v0_100074a0 = mul nuw nsw i32 %v0_100074a0.in, 2
  store i32 %v3_1000749c.pre, i32* %r9.global-to-local, align 4
  %v2_100074a0 = add i32 %v0_100074a0, %v3_1000749c.pre
  %v3_100074a0 = inttoptr i32 %v2_100074a0 to i16*
  %v4_100074a0 = load i16, i16* %v3_100074a0, align 2
  %v5_100074a0 = zext i16 %v4_100074a0 to i32
  store i32 %v5_100074a0, i32* %r0.global-to-local, align 4
  %v1_100074a4 = and i32 %v5_100074a0, 32
  store i32 %v1_100074a4, i32* %r9.global-to-local, align 4
  %v3_100074a4 = icmp eq i32 %v1_100074a4, 0
  br i1 %v3_100074a4, label %dec_label_pc_10007484, label %dec_label_pc_100074ac.loopexit

dec_label_pc_100074ac.loopexit:                   ; preds = %dec_label_pc_10007498, %dec_label_pc_10007484, %dec_label_pc_10007488.preheader
  %v0_100074ac = phi i32 [ %v0_100074889, %dec_label_pc_10007488.preheader ], [ %v0_10007484, %dec_label_pc_10007498 ], [ %v1_10007484, %dec_label_pc_10007484 ]
  %v1_100074ac = inttoptr i32 %v0_100074ac to i8*
  %v2_100074ac = load i8, i8* %v1_100074ac, align 1
  %v3_100074ac = zext i8 %v2_100074ac to i32
  store i32 %v3_100074ac, i32* %r0.global-to-local, align 4
  %v3_100074b0 = icmp eq i8 %v2_100074ac, 0
  br i1 %v3_100074b0, label %dec_label_pc_100074b8, label %dec_label_pc_10007448.preheader

dec_label_pc_10007448.preheader:                  ; preds = %dec_label_pc_10007430, %dec_label_pc_100074ac.loopexit
  %v0_100074482 = phi i32 [ %v0_100074ac, %dec_label_pc_100074ac.loopexit ], [ %v0_10007430, %dec_label_pc_10007430 ]
  %v1_100074483 = inttoptr i32 %v0_100074482 to i8*
  %v2_100074484 = load i8, i8* %v1_100074483, align 1
  %v3_100074485 = zext i8 %v2_100074484 to i32
  store i32 %v3_100074485, i32* %r0.global-to-local, align 4
  %v3_1000744c7 = icmp eq i8 %v2_100074484, 0
  br i1 %v3_1000744c7, label %dec_label_pc_100074b8, label %dec_label_pc_10007458

dec_label_pc_100074b8:                            ; preds = %dec_label_pc_100074ac.loopexit, %dec_label_pc_10007448.preheader, %dec_label_pc_1000743c, %dec_label_pc_10007430
  %v0_100074b8 = load i32, i32* @r29, align 4
  %v1_100074bc = mul i32 %v0_100074b8, 4
  store i32 %v1_100074bc, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100074c4 = load i32, i32* @r30, align 4
  %v3_100074c4 = add i32 %v2_100074c4, %v1_100074bc
  %v4_100074c4 = inttoptr i32 %v3_100074c4 to i32*
  store i32 0, i32* %v4_100074c4, align 4
  %tmp55 = icmp slt i32 %v0_100074b8, 2
  br i1 %tmp55, label %dec_label_pc_1000756c, label %dec_label_pc_100074cc

dec_label_pc_100074cc:                            ; preds = %dec_label_pc_100074b8
  %v0_100074cc = load i32, i32* %r18.global-to-local, align 4
  %v3_100074cc = icmp eq i32 %v0_100074cc, 1
  br i1 %v3_100074cc, label %dec_label_pc_10007584, label %dec_label_pc_100074d4

dec_label_pc_100074d4:                            ; preds = %dec_label_pc_100074cc
  %v3_100074d4 = icmp eq i32 %v0_100074cc, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_100074d4, label %dec_label_pc_100074e0, label %dec_label_pc_1000750c.preheader

dec_label_pc_1000750c.preheader:                  ; preds = %dec_label_pc_100074d4
  %v1_1000750c23 = load i32, i32* @r29, align 4
  %v2_1000750c24 = icmp sgt i32 %v1_1000750c23, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000751429 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000751429, i32* @r3, align 4
  br i1 %v2_1000750c24, label %dec_label_pc_100074f8, label %dec_label_pc_1000751c

dec_label_pc_100074e0:                            ; preds = %dec_label_pc_100074d4
  %v0_100074e0 = load i32, i32* @r30, align 4
  %v1_100074e0 = inttoptr i32 %v0_100074e0 to i32*
  %v2_100074e0 = load i32, i32* %v1_100074e0, align 4
  store i32 %v2_100074e0, i32* @r4, align 4
  %v0_100074e4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100074e8 = inttoptr i32 %v0_100074e4 to i8*
  %v3_100074e8 = call i32 @__GI_strcoll(i8* %v2_100074e8, i32 %v2_100074e0)
  %v3_100074ec = icmp eq i32 %v3_100074e8, 0
  br i1 %v3_100074ec, label %dec_label_pc_10007524, label %dec_label_pc_1000756c

dec_label_pc_100074f8:                            ; preds = %dec_label_pc_1000750c.preheader, %dec_label_pc_10007508
  %v1_100074f8 = phi i32 [ %v1_10007510, %dec_label_pc_10007508 ], [ 4, %dec_label_pc_1000750c.preheader ]
  %v0_1000751431 = phi i32 [ %v0_10007514, %dec_label_pc_10007508 ], [ %v0_1000751429, %dec_label_pc_1000750c.preheader ]
  %v0_100074f8 = load i32, i32* @r30, align 4
  %v2_100074f8 = add i32 %v0_100074f8, %v1_100074f8
  %v3_100074f8 = inttoptr i32 %v2_100074f8 to i32*
  %v4_100074f8 = load i32, i32* %v3_100074f8, align 4
  store i32 %v4_100074f8, i32* @r4, align 4
  %v2_100074fc = call i32 @__GI_strcasecmp(i32 %v0_1000751431, i32 %v4_100074f8)
  %v3_10007500 = icmp eq i32 %v2_100074fc, 0
  %v0_1000751c.pre = load i32, i32* @r31, align 4
  br i1 %v3_10007500, label %dec_label_pc_100074f8.dec_label_pc_1000751c_crit_edge, label %dec_label_pc_10007508

dec_label_pc_10007508:                            ; preds = %dec_label_pc_100074f8
  %v1_10007508 = add i32 %v0_1000751c.pre, 1
  store i32 %v1_10007508, i32* @r31, align 4
  %v1_1000750c = load i32, i32* @r29, align 4
  %v2_1000750c = icmp slt i32 %v1_10007508, %v1_1000750c
  %v1_10007510 = mul i32 %v1_10007508, 4
  store i32 %v1_10007510, i32* %r0.global-to-local, align 4
  %v0_10007514 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10007514, i32* @r3, align 4
  br i1 %v2_1000750c, label %dec_label_pc_100074f8, label %dec_label_pc_1000751c

dec_label_pc_100074f8.dec_label_pc_1000751c_crit_edge: ; preds = %dec_label_pc_100074f8
  %v1_1000751c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000751c

dec_label_pc_1000751c:                            ; preds = %dec_label_pc_10007508, %dec_label_pc_100074f8.dec_label_pc_1000751c_crit_edge, %dec_label_pc_1000750c.preheader
  %v1_1000751c = phi i32 [ %v1_1000751c.pre, %dec_label_pc_100074f8.dec_label_pc_1000751c_crit_edge ], [ %v1_1000750c23, %dec_label_pc_1000750c.preheader ], [ %v1_1000750c, %dec_label_pc_10007508 ]
  %v0_1000751c = phi i32 [ %v0_1000751c.pre, %dec_label_pc_100074f8.dec_label_pc_1000751c_crit_edge ], [ 1, %dec_label_pc_1000750c.preheader ], [ %v1_10007508, %dec_label_pc_10007508 ]
  %v2_1000751c = icmp slt i32 %v0_1000751c, %v1_1000751c
  br i1 %v2_1000751c, label %dec_label_pc_10007524, label %dec_label_pc_1000756c

dec_label_pc_10007524:                            ; preds = %dec_label_pc_100074e0, %dec_label_pc_1000751c
  %v0_10007524 = load i32, i32* %r19.global-to-local, align 4
  %v3_10007524 = icmp eq i32 %v0_10007524, 2
  br i1 %v3_10007524, label %dec_label_pc_1000752c, label %dec_label_pc_10007548

dec_label_pc_1000752c:                            ; preds = %dec_label_pc_10007524
  %v0_1000752c = load i32, i32* @r30, align 4
  %v1_1000752c = inttoptr i32 %v0_1000752c to i32*
  %v2_1000752c = load i32, i32* %v1_1000752c, align 4
  %v0_10007534 = load i32, i32* @r25, align 4
  store i32 268465468, i32* @lr, align 4
  %v3_10007538 = inttoptr i32 %v2_1000752c to i8*
  %v4_10007538 = call i32 @inet_pton(i32 2, i8* %v3_10007538, i32 %v0_10007534)
  %v2_1000753c = icmp sgt i32 %v4_10007538, 0
  br i1 %v2_1000753c, label %dec_label_pc_1000738c, label %dec_label_pc_10007568

dec_label_pc_10007548:                            ; preds = %dec_label_pc_10007524
  %v3_10007548 = icmp eq i32 %v0_10007524, 10
  br i1 %v3_10007548, label %dec_label_pc_10007550, label %dec_label_pc_10007568

dec_label_pc_10007550:                            ; preds = %dec_label_pc_10007548
  %v0_10007550 = load i32, i32* @r30, align 4
  %v1_10007550 = inttoptr i32 %v0_10007550 to i32*
  %v2_10007550 = load i32, i32* %v1_10007550, align 4
  %v0_10007558 = load i32, i32* %r21.global-to-local, align 4
  store i32 268465504, i32* @lr, align 4
  %v3_1000755c = inttoptr i32 %v2_10007550 to i8*
  %v4_1000755c = call i32 @inet_pton(i32 10, i8* %v3_1000755c, i32 %v0_10007558)
  %v2_10007560 = icmp sgt i32 %v4_1000755c, 0
  br i1 %v2_10007560, label %dec_label_pc_100073bc, label %dec_label_pc_10007568

dec_label_pc_10007568:                            ; preds = %dec_label_pc_1000752c, %dec_label_pc_10007548, %dec_label_pc_10007550
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_1000756c

dec_label_pc_1000756c:                            ; preds = %dec_label_pc_1000751c, %dec_label_pc_100074e0, %dec_label_pc_100074b8, %dec_label_pc_10007568, %dec_label_pc_10007404
  %v0_1000756c = load i32, i32* @r24, align 4
  %v0_10007570 = load i32, i32* @r27, align 4
  %v0_10007574 = load i32, i32* @r20, align 4
  store i32 268465532, i32* @lr, align 4
  %v3_10007578 = call i32 @fgets(i32 %v0_1000756c, i32 %v0_10007570, i32 %v0_10007574)
  %v3_1000757c = icmp eq i32 %v3_10007578, 0
  br i1 %v3_1000757c, label %dec_label_pc_10007584, label %dec_label_pc_10007414

dec_label_pc_10007584:                            ; preds = %dec_label_pc_1000756c, %dec_label_pc_100074cc, %dec_label_pc_100073e8
  %v0_10007584 = load i32, i32* %r18.global-to-local, align 4
  %v3_10007584 = icmp eq i32 %v0_10007584, 1
  br i1 %v3_10007584, label %dec_label_pc_1000759c, label %dec_label_pc_1000758c

dec_label_pc_1000758c:                            ; preds = %dec_label_pc_10007584
  %v0_1000758c = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_10007594.152 to i32), i32* @lr, align 4
  %v1_10007590 = inttoptr i32 %v0_1000758c to i16*
  %v2_10007590 = call i32 @__GI_fclose(i16* %v1_10007590)
  br label %dec_label_pc_1000759c

dec_label_pc_10007598:                            ; preds = %dec_label_pc_10007350, %dec_label_pc_10007320, %dec_label_pc_10007318, %dec_label_pc_1000730c, %dec_label_pc_100072fc, %dec_label_pc_100072e4, %dec_label_pc_100072d4
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_1000759c

dec_label_pc_1000759c:                            ; preds = %dec_label_pc_10007584, %dec_label_pc_1000758c, %dec_label_pc_1000737c, %dec_label_pc_10007598
  store i32 %v0_10007298, i32* %r0.global-to-local, align 4
  %v0_100075a0 = load i32, i32* @r26, align 4
  ret i32 %v0_100075a0

; uselistorder directives
  uselistorder i32 %v0_10007514, { 1, 0 }
  uselistorder i32 %v1_10007508, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100074bc, { 1, 0 }
  uselistorder i32 %v0_100074b8, { 1, 0 }
  uselistorder i32 %v3_100074485, { 1, 0 }
  uselistorder i32 %v0_100074482, { 1, 0 }
  uselistorder i32 %v1_10007474, { 1, 0 }
  uselistorder i32 %v0_1000746c, { 1, 0, 2 }
  uselistorder i32 %v2_1000741c, { 1, 0 }
  uselistorder i32 %v0_1000730c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100072e4.pr, { 1, 0, 2 }
  uselistorder i32 %v1_100072b0, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 0, 11, 30, 12, 27, 19, 13, 14, 28, 15, 16, 18, 17, 29, 20, 21, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 23, 24, 25, 26 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000759c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000756c, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_10007568, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007524, { 1, 0 }
  uselistorder label %dec_label_pc_1000751c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100074f8, { 1, 0 }
  uselistorder label %dec_label_pc_100074b8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10007448.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10007498, { 1, 0 }
  uselistorder label %dec_label_pc_10007430, { 1, 0 }
  uselistorder label %dec_label_pc_10007404, { 1, 0 }
  uselistorder label %dec_label_pc_100073e8, { 1, 0 }
  uselistorder label %dec_label_pc_10007350, { 1, 0 }
  uselistorder label %dec_label_pc_100072e4, { 1, 0 }
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_100075b4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268465612, i32* @lr, align 4
  %v0_100075c8 = call i32 @__libc_getpid()
  %v0_100075d0 = load i32, i32* @r29, align 4
  store i32 %v0_100075b4, i32* @lr, align 4
  %v2_100075e0 = call i32 @kill(i32 %v0_100075c8, i32 %v0_100075d0)
  ret i32 %v2_100075e0

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @__syscall_error(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r29, align 4
  %v0_100075f8 = call i32 @__errno_location()
  %v0_100075fc = load i32, i32* @r29, align 4
  %v2_100075fc = inttoptr i32 %v0_100075f8 to i32*
  store i32 %v0_100075fc, i32* %v2_100075fc, align 4
  ret i32 -1
}

define i32 @ioctl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10007628 = icmp eq i32 %arg2, -2143521772
  %v2_1000763c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000763c, i32* %stack_var_-32, align 4
  %v0_1000764c = load i32, i32* @r5, align 4
  br i1 %v4_10007628, label %dec_label_pc_1000769c, label %dec_label_pc_1000765c

dec_label_pc_1000765c:                            ; preds = %entry
  %v3_1000765c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000765c, label %dec_label_pc_10007674, label %dec_label_pc_10007664

dec_label_pc_10007664:                            ; preds = %dec_label_pc_1000765c
  %v3_10007668 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10007668, label %dec_label_pc_10007690, label %dec_label_pc_100076bc

dec_label_pc_10007674:                            ; preds = %dec_label_pc_1000765c
  %v1_10007674 = xor i32 %arg2, -2143551488
  %v3_10007678 = icmp eq i32 %v1_10007674, 29717
  br i1 %v3_10007678, label %dec_label_pc_100076ac, label %dec_label_pc_10007680

dec_label_pc_10007680:                            ; preds = %dec_label_pc_10007674
  %v3_10007684 = icmp eq i32 %v1_10007674, 29718
  br i1 %v3_10007684, label %dec_label_pc_100076b4, label %dec_label_pc_100076bc

dec_label_pc_10007690:                            ; preds = %dec_label_pc_10007664
  store i32 ptrtoint (i32* @global_var_10007698.153 to i32), i32* @lr, align 4
  %v1_10007694 = inttoptr i32 %v0_1000764c to i32*
  %v2_10007694 = call i32 @__GI_tcgetattr(i32* %v1_10007694)
  br label %dec_label_pc_100076a4

dec_label_pc_1000769c:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_100076a0

dec_label_pc_100076a0:                            ; preds = %dec_label_pc_100076b4, %dec_label_pc_100076ac, %dec_label_pc_1000769c
  store i32 268465828, i32* @lr, align 4
  %v0_100076a0 = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_100076a4

dec_label_pc_100076a4:                            ; preds = %dec_label_pc_10007690, %dec_label_pc_100076a0
  %storemerge = phi i32 [ %v0_100076a0, %dec_label_pc_100076a0 ], [ %v2_10007694, %dec_label_pc_10007690 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100076e8

dec_label_pc_100076ac:                            ; preds = %dec_label_pc_10007674
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_100076a0

dec_label_pc_100076b4:                            ; preds = %dec_label_pc_10007680
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_100076a0

dec_label_pc_100076bc:                            ; preds = %dec_label_pc_10007680, %dec_label_pc_10007664
  %v0_100076cc = call i32 @__asm_mfcr()
  %v1_100076d0 = and i32 %v0_100076cc, 268435456
  %v3_100076d0 = icmp eq i32 %v1_100076d0, 0
  store i32 %v0_100076cc, i32* %r31.global-to-local, align 4
  br i1 %v3_100076d0, label %dec_label_pc_100076e8, label %dec_label_pc_100076dc

dec_label_pc_100076dc:                            ; preds = %dec_label_pc_100076bc
  %v0_100076dc = call i32 @__errno_location()
  %v0_100076e0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100076e0 = inttoptr i32 %v0_100076dc to i32*
  store i32 %v0_100076e0, i32* %v2_100076e0, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100076e8

dec_label_pc_100076e8:                            ; preds = %dec_label_pc_100076bc, %dec_label_pc_100076a4, %dec_label_pc_100076dc
  %v0_100076ec = phi i32 [ %v0_100076cc, %dec_label_pc_100076bc ], [ %storemerge, %dec_label_pc_100076a4 ], [ -1, %dec_label_pc_100076dc ]
  ret i32 %v0_100076ec

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100076e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100076a4, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10007700 = add i32 %arg1, 128
  %v1_10007704 = mul i32 %arg1, 2
  %v2_10007708 = icmp ugt i32 %v1_10007700, 383
  %v0_1000770c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10007708, i32 %v0_1000770c)
  %v3_10007714 = load i32, i32* bitcast (i32** @global_var_1001c390.155 to i32*), align 4
  %v2_10007718 = add i32 %v1_10007704, %v3_10007714
  %v3_10007718 = inttoptr i32 %v2_10007718 to i16*
  %v4_10007718 = load i16, i16* %v3_10007718, align 2
  %v5_10007718 = sext i16 %v4_10007718 to i32
  ret i32 %v5_10007718

; uselistorder directives
  uselistorder i32 383, { 1, 0 }
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_10007740 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10007740, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_10007790 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10007790, i32* %stack_var_-96, align 4
  store i32 268466076, i32* @lr, align 4
  %v0_10007798 = call i32 @__GI_vsnprintf()
  ret i32 %v0_10007798
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_100077b8 = load i32, i32* @r4, align 4
  store i32 %v0_100077b8, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_100077d4 = load i32, i32* @r3, align 4
  %v1_100077d4 = sub i32 -1, %v0_100077d4
  store i32 %v1_100077d4, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_100077d4, i32* %r31.global-to-local, align 4
  %v2_100077e8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100077e8, i32* @r3, align 4
  %v0_100077ec = load i32, i32* @r5, align 4
  store i32 %v0_100077ec, i32* %r29.global-to-local, align 4
  %v0_100077f0 = load i32, i32* @r6, align 4
  store i32 %v0_100077f0, i32* @r28, align 4
  store i32 268466176, i32* @lr, align 4
  %v0_100077fc = call i32 @__stdio_init_mutex()
  %v0_10007800 = load i32, i32* %r30.global-to-local, align 4
  %v1_10007800 = load i32, i32* @r27, align 4
  %v3_10007800 = icmp ugt i32 %v0_10007800, %v1_10007800
  %v0_10007804 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10007804, i32* @r4, align 4
  %v0_10007808 = load i32, i32* @r28, align 4
  store i32 %v0_10007808, i32* @r5, align 4
  %v2_1000780c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000780c, i32* @r3, align 4
  br i1 %v3_10007800, label %dec_label_pc_10007818, label %dec_label_pc_1000781c

dec_label_pc_10007818:                            ; preds = %entry
  store i32 %v1_10007800, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000781c

dec_label_pc_1000781c:                            ; preds = %entry, %dec_label_pc_10007818
  %v1_1000781c = phi i32 [ %v0_10007800, %entry ], [ %v1_10007800, %dec_label_pc_10007818 ]
  %v0_1000781c = load i32, i32* %r31.global-to-local, align 4
  store i32 268466236, i32* @lr, align 4
  %v0_10007838 = call i32 @_vfprintf_internal()
  %v0_1000783c = load i32, i32* @r30, align 4
  %v3_1000783c = icmp eq i32 %v0_1000783c, 0
  br i1 %v3_1000783c, label %dec_label_pc_10007864, label %dec_label_pc_10007844

dec_label_pc_10007844:                            ; preds = %dec_label_pc_1000781c
  %v4_10007850 = icmp eq i32 %v1_1000781c, 0
  %v1_1000784c = sext i1 %v4_10007850 to i32
  %v0_10007858.v0_1000781c = add i32 %v0_1000781c, %v1_1000784c
  %stack_var_-88.0 = inttoptr i32 %v0_10007858.v0_1000781c to i8*
  %v0_10007860 = load i32, i32* @r26, align 4
  %v1_10007860 = trunc i32 %v0_10007860 to i8
  store i8 %v1_10007860, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_10007864

dec_label_pc_10007864:                            ; preds = %dec_label_pc_1000781c, %dec_label_pc_10007844
  ret i32 %v0_10007838

; uselistorder directives
  uselistorder i32 %v0_100077d4, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder i32 ()* @__stdio_init_mutex, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10007864, { 1, 0 }
  uselistorder label %dec_label_pc_1000781c, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10007878 = load i32, i32* @lr, align 4
  store i32 %v0_10007878, i32* %r0.global-to-local, align 4
  %v0_10007884 = load i32, i32* @r5, align 4
  store i32 %v0_10007884, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_10007884, i32* @r31, align 4
  %v3_100078983 = icmp eq i32 %v0_10007884, 0
  store i32 %v0_10007884, i32* @r27, align 4
  br i1 %v3_100078983, label %dec_label_pc_10007940, label %dec_label_pc_100078a8

dec_label_pc_100078a8:                            ; preds = %entry, %dec_label_pc_100078c8
  %v0_100078b8 = phi i32 [ %v2_100078c8, %dec_label_pc_100078c8 ], [ %arg2, %entry ]
  %v1_100078a8.in = phi i32 [ %v2_100078cc, %dec_label_pc_100078c8 ], [ %v0_10007884, %entry ]
  %v1_100078a8 = icmp sgt i32 %v1_100078a8.in, 0
  br i1 %v1_100078a8, label %dec_label_pc_100078b4, label %dec_label_pc_100078ac

dec_label_pc_100078ac:                            ; preds = %dec_label_pc_100078a8
  br label %dec_label_pc_100078b4

dec_label_pc_100078b4:                            ; preds = %dec_label_pc_100078a8, %dec_label_pc_100078ac
  %v0_100078b4 = load i32, i32* @r30, align 4
  %v1_100078b4 = add i32 %v0_100078b4, 4
  %v2_100078b4 = inttoptr i32 %v1_100078b4 to i32*
  %v3_100078b4 = load i32, i32* %v2_100078b4, align 4
  store i32 268466368, i32* @lr, align 4
  %v3_100078bc = call i32 @__libc_write(i32 %v3_100078b4, i32 %v0_100078b8)
  %v1_100078c0 = icmp slt i32 %v3_100078bc, 0
  br i1 %v1_100078c0, label %dec_label_pc_100078d4, label %dec_label_pc_100078c8

dec_label_pc_100078c8:                            ; preds = %dec_label_pc_100078b4
  %v0_100078c8 = load i32, i32* @r29, align 4
  %v2_100078c8 = add i32 %v0_100078c8, %v3_100078bc
  store i32 %v2_100078c8, i32* @r29, align 4
  %v1_100078cc = load i32, i32* @r31, align 4
  %v2_100078cc = sub i32 %v1_100078cc, %v3_100078bc
  store i32 %v2_100078cc, i32* @r31, align 4
  %v3_10007898 = icmp eq i32 %v2_100078cc, 0
  store i32 %v2_100078cc, i32* @r27, align 4
  br i1 %v3_10007898, label %dec_label_pc_10007898.dec_label_pc_10007940.loopexit_crit_edge, label %dec_label_pc_100078a8

dec_label_pc_100078d4:                            ; preds = %dec_label_pc_100078b4
  %v0_100078d4 = load i32, i32* @r30, align 4
  %v1_100078d4 = add i32 %v0_100078d4, 8
  %v2_100078d4 = inttoptr i32 %v1_100078d4 to i32*
  %v3_100078d4 = load i32, i32* %v2_100078d4, align 4
  store i32 %v3_100078d4, i32* %r11.global-to-local, align 4
  %v1_100078d8 = add i32 %v0_100078d4, 12
  %v2_100078d8 = inttoptr i32 %v1_100078d8 to i32*
  %v3_100078d8 = load i32, i32* %v2_100078d8, align 4
  store i32 %v3_100078d8, i32* %r0.global-to-local, align 4
  %v1_100078dc = inttoptr i32 %v0_100078d4 to i16*
  %v2_100078dc = load i16, i16* %v1_100078dc, align 2
  %v2_100078e0 = sub i32 %v3_100078d8, %v3_100078d4
  store i32 %v2_100078e0, i32* %r0.global-to-local, align 4
  %v5_100078e0 = icmp eq i32 %v2_100078e0, 0
  %v1_100078e4 = or i16 %v2_100078dc, 8
  store i16 %v1_100078e4, i16* %v1_100078dc, align 2
  br i1 %v5_100078e0, label %dec_label_pc_100078d4.dec_label_pc_1000793c_crit_edge, label %dec_label_pc_100078f0

dec_label_pc_100078d4.dec_label_pc_1000793c_crit_edge: ; preds = %dec_label_pc_100078d4
  %v0_1000793c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000793c

dec_label_pc_100078f0:                            ; preds = %dec_label_pc_100078d4
  %v0_100078f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100078f0 = load i32, i32* @r31, align 4
  %v3_100078f0 = icmp ugt i32 %v0_100078f0, %v1_100078f0
  br i1 %v3_100078f0, label %dec_label_pc_100078f0.dec_label_pc_100078fc_crit_edge, label %dec_label_pc_100078f8

dec_label_pc_100078f0.dec_label_pc_100078fc_crit_edge: ; preds = %dec_label_pc_100078f0
  %v0_100078fc.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_100078fc

dec_label_pc_100078f8:                            ; preds = %dec_label_pc_100078f0
  store i32 %v0_100078f0, i32* @r27, align 4
  br label %dec_label_pc_100078fc

dec_label_pc_100078fc:                            ; preds = %dec_label_pc_100078f0.dec_label_pc_100078fc_crit_edge, %dec_label_pc_100078f8
  %v0_100078fc = phi i32 [ %v0_100078fc.pre, %dec_label_pc_100078f0.dec_label_pc_100078fc_crit_edge ], [ %v0_100078f0, %dec_label_pc_100078f8 ]
  store i32 %v0_100078fc, i32* %ctr.global-to-local, align 4
  %v2_10007908.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007900

dec_label_pc_10007900:                            ; preds = %dec_label_pc_10007924, %dec_label_pc_100078fc
  %v2_10007908 = phi i32 [ %v1_10007924, %dec_label_pc_10007924 ], [ %v2_10007908.pre, %dec_label_pc_100078fc ]
  %v0_10007900 = load i32, i32* @r29, align 4
  %v1_10007900 = inttoptr i32 %v0_10007900 to i8*
  %v2_10007900 = load i8, i8* %v1_10007900, align 1
  %v3_10007900 = zext i8 %v2_10007900 to i32
  store i32 %v3_10007900, i32* %r0.global-to-local, align 4
  %v1_10007904 = add i32 %v0_10007900, 1
  store i32 %v1_10007904, i32* @r29, align 4
  %v3_10007908 = inttoptr i32 %v2_10007908 to i8*
  store i8 %v2_10007900, i8* %v3_10007908, align 1
  %v0_1000790c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000790c = urem i32 %v0_1000790c, 256
  store i32 %v1_1000790c, i32* %r0.global-to-local, align 4
  %v3_10007910 = icmp eq i32 %v1_1000790c, 10
  br i1 %v3_10007910, label %dec_label_pc_10007918, label %dec_label_pc_10007924

dec_label_pc_10007918:                            ; preds = %dec_label_pc_10007900
  %v0_10007918 = load i32, i32* @r30, align 4
  %v1_10007918 = inttoptr i32 %v0_10007918 to i16*
  %v2_10007918 = load i16, i16* %v1_10007918, align 2
  %v3_10007918 = zext i16 %v2_10007918 to i32
  store i32 %v3_10007918, i32* %r0.global-to-local, align 4
  %v1_1000791c = and i32 %v3_10007918, 256
  %v3_1000791c = icmp eq i32 %v1_1000791c, 0
  br i1 %v3_1000791c, label %dec_label_pc_10007924, label %dec_label_pc_10007918.dec_label_pc_1000792c_crit_edge

dec_label_pc_10007918.dec_label_pc_1000792c_crit_edge: ; preds = %dec_label_pc_10007918
  %v0_10007930.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000792c

dec_label_pc_10007924:                            ; preds = %dec_label_pc_10007918, %dec_label_pc_10007900
  %v0_10007924 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007924 = add i32 %v0_10007924, 1
  store i32 %v1_10007924, i32* %r11.global-to-local, align 4
  %v0_10007928 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007928 = add i32 %v0_10007928, -1
  store i32 %v1_10007928, i32* %ctr.global-to-local, align 4
  %v2_10007928 = icmp eq i32 %v1_10007928, 0
  br i1 %v2_10007928, label %dec_label_pc_10007924.dec_label_pc_1000792c_crit_edge, label %dec_label_pc_10007900

dec_label_pc_10007924.dec_label_pc_1000792c_crit_edge: ; preds = %dec_label_pc_10007924
  %v0_1000792c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000792c

dec_label_pc_1000792c:                            ; preds = %dec_label_pc_10007918.dec_label_pc_1000792c_crit_edge, %dec_label_pc_10007924.dec_label_pc_1000792c_crit_edge
  %v0_10007930 = phi i32 [ %v1_10007924, %dec_label_pc_10007924.dec_label_pc_1000792c_crit_edge ], [ %v0_10007930.pre, %dec_label_pc_10007918.dec_label_pc_1000792c_crit_edge ]
  %v0_1000792c = phi i32 [ %v0_1000792c.pre, %dec_label_pc_10007924.dec_label_pc_1000792c_crit_edge ], [ %v0_10007918, %dec_label_pc_10007918.dec_label_pc_1000792c_crit_edge ]
  %v1_1000792c = add i32 %v0_1000792c, 8
  %v2_1000792c = inttoptr i32 %v1_1000792c to i32*
  %v3_1000792c = load i32, i32* %v2_1000792c, align 4
  store i32 %v3_1000792c, i32* %r0.global-to-local, align 4
  %v2_10007930 = add i32 %v0_1000792c, 16
  %v3_10007930 = inttoptr i32 %v2_10007930 to i32*
  store i32 %v0_10007930, i32* %v3_10007930, align 4
  %v0_10007934 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007934 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007934 = sub i32 %v1_10007934, %v0_10007934
  store i32 %v2_10007934, i32* %r0.global-to-local, align 4
  %v1_10007938 = load i32, i32* @r31, align 4
  %v2_10007938 = sub i32 %v1_10007938, %v2_10007934
  store i32 %v2_10007938, i32* @r31, align 4
  br label %dec_label_pc_1000793c

dec_label_pc_1000793c:                            ; preds = %dec_label_pc_100078d4.dec_label_pc_1000793c_crit_edge, %dec_label_pc_1000792c
  %v0_1000793c = phi i32 [ %v0_1000793c.pre, %dec_label_pc_100078d4.dec_label_pc_1000793c_crit_edge ], [ %v2_10007938, %dec_label_pc_1000792c ]
  %v1_1000793c = load i32, i32* @r28, align 4
  %v2_1000793c = sub i32 %v1_1000793c, %v0_1000793c
  store i32 %v2_1000793c, i32* @r28, align 4
  br label %dec_label_pc_10007940

dec_label_pc_10007898.dec_label_pc_10007940.loopexit_crit_edge: ; preds = %dec_label_pc_100078c8
  %v0_10007944.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10007940

dec_label_pc_10007940:                            ; preds = %entry, %dec_label_pc_10007898.dec_label_pc_10007940.loopexit_crit_edge, %dec_label_pc_1000793c
  %v0_10007944 = phi i32 [ %v2_1000793c, %dec_label_pc_1000793c ], [ %v0_10007944.pre.pre, %dec_label_pc_10007898.dec_label_pc_10007940.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_10007878, i32* %r0.global-to-local, align 4
  ret i32 %v0_10007944

; uselistorder directives
  uselistorder i32 %v0_1000792c, { 1, 0 }
  uselistorder i32 %v1_10007928, { 1, 0 }
  uselistorder i32 %v1_10007924, { 0, 2, 1 }
  uselistorder i32 %v1_1000790c, { 1, 0 }
  uselistorder i32 %v2_100078cc, { 1, 3, 2, 0 }
  uselistorder i32 %v2_100078c8, { 1, 0 }
  uselistorder i32 %v3_100078bc, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 1, 2, 5 }
  uselistorder label %dec_label_pc_10007940, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000793c, { 1, 0 }
  uselistorder label %dec_label_pc_1000792c, { 1, 0 }
  uselistorder label %dec_label_pc_100078fc, { 1, 0 }
  uselistorder label %dec_label_pc_100078b4, { 1, 0 }
  uselistorder label %dec_label_pc_100078a8, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_100079803 = icmp eq i32 %arg3, 0
  %v2_10007984 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_100079803, label %dec_label_pc_100079a0, label %dec_label_pc_10007994

dec_label_pc_1000797c:                            ; preds = %dec_label_pc_10007994
  %v1_1000797c = add i32 %v0_1000797c, -1
  store i32 %v1_1000797c, i32* @r31, align 4
  %v3_10007980 = icmp eq i32 %v1_1000797c, 0
  %v0_1000798c = load i32, i32* @r29, align 4
  br i1 %v3_10007980, label %dec_label_pc_100079a0.loopexit, label %dec_label_pc_10007994

dec_label_pc_10007994:                            ; preds = %entry, %dec_label_pc_1000797c
  %v0_1000798c5 = phi i32 [ %v0_1000798c, %dec_label_pc_1000797c ], [ %arg1, %entry ]
  store i32 268466584, i32* @lr, align 4
  %v3_10007994 = inttoptr i32 %v0_1000798c5 to i16*
  %v4_10007994 = call i32 @__stdio_fwrite(i32 %v2_10007984, i32 1, i16* %v3_10007994)
  %v3_10007998 = icmp eq i32 %v4_10007994, 1
  %v0_1000797c = load i32, i32* @r31, align 4
  br i1 %v3_10007998, label %dec_label_pc_1000797c, label %dec_label_pc_100079a0.loopexit

dec_label_pc_100079a0.loopexit:                   ; preds = %dec_label_pc_1000797c, %dec_label_pc_10007994
  %v0_100079a4.ph = phi i32 [ %v0_1000797c, %dec_label_pc_10007994 ], [ 0, %dec_label_pc_1000797c ]
  %v1_100079a4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100079a0

dec_label_pc_100079a0:                            ; preds = %dec_label_pc_100079a0.loopexit, %entry
  %v1_100079a4 = phi i32 [ 0, %entry ], [ %v1_100079a4.pre, %dec_label_pc_100079a0.loopexit ]
  %v0_100079a4 = phi i32 [ 0, %entry ], [ %v0_100079a4.ph, %dec_label_pc_100079a0.loopexit ]
  %v2_100079a4 = sub i32 %v1_100079a4, %v0_100079a4
  ret i32 %v2_100079a4

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100079a0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10007994, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_100079cc = and i32 %arg2, 128
  %v3_100079cc = icmp eq i32 %v1_100079cc, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_100079cc, label %dec_label_pc_10007a1c, label %dec_label_pc_100079e8

dec_label_pc_100079e8:                            ; preds = %entry
  %v0_100079e8 = call i32 @__GI_strlen()
  %v0_100079ec = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100079e8, i32* @r31, align 4
  %v0_100079f4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100079f8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100079f8 = sub i32 %v1_100079f8, %v0_100079e8
  store i32 %v2_100079f8, i32* %r29.global-to-local, align 4
  store i32 %v0_100079e8, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_100079f8, 1
  br i1 %tmp7, label %dec_label_pc_10007a1c, label %dec_label_pc_10007a08

dec_label_pc_10007a08:                            ; preds = %dec_label_pc_100079e8
  %v1_100079ec = urem i32 %v0_100079ec, 128
  store i32 268466700, i32* @lr, align 4
  %v3_10007a08 = trunc i32 %v1_100079ec to i8
  %v4_10007a08 = call i32 @_charpad(i32 %v0_100079f4, i8 %v3_10007a08, i32 %v2_100079f8)
  %v0_10007a0c = load i32, i32* @r31, align 4
  store i32 %v0_10007a0c, i32* %r30.global-to-local, align 4
  %v1_10007a10 = load i32, i32* @r29, align 4
  %v4_10007a10 = icmp eq i32 %v4_10007a08, %v1_10007a10
  store i32 %v4_10007a08, i32* @r28, align 4
  br i1 %v4_10007a10, label %dec_label_pc_10007a08.dec_label_pc_10007a1c_crit_edge, label %dec_label_pc_10007a40

dec_label_pc_10007a08.dec_label_pc_10007a1c_crit_edge: ; preds = %dec_label_pc_10007a08
  %v0_10007a28.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10007a1c

dec_label_pc_10007a1c:                            ; preds = %dec_label_pc_10007a08.dec_label_pc_10007a1c_crit_edge, %dec_label_pc_100079e8, %entry
  %v0_10007a28 = phi i32 [ %v0_10007a28.pre, %dec_label_pc_10007a08.dec_label_pc_10007a1c_crit_edge ], [ %v0_100079f4, %dec_label_pc_100079e8 ], [ %arg1, %entry ]
  %v0_10007a24 = phi i32 [ %v0_10007a0c, %dec_label_pc_10007a08.dec_label_pc_10007a1c_crit_edge ], [ %v0_100079e8, %dec_label_pc_100079e8 ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_10007a24, 1
  br i1 %tmp8, label %dec_label_pc_10007a3c, label %dec_label_pc_10007a34

dec_label_pc_10007a34:                            ; preds = %dec_label_pc_10007a1c
  %v0_10007a20 = load i32, i32* @r27, align 4
  store i32 268466744, i32* @lr, align 4
  %v3_10007a34 = inttoptr i32 %v0_10007a28 to i16*
  %v4_10007a34 = call i32 @__stdio_fwrite(i32 %v0_10007a20, i32 %v0_10007a24, i16* %v3_10007a34)
  br label %dec_label_pc_10007a3c

dec_label_pc_10007a3c:                            ; preds = %dec_label_pc_10007a1c, %dec_label_pc_10007a34
  %v1_10007a3c = phi i32 [ 0, %dec_label_pc_10007a1c ], [ %v4_10007a34, %dec_label_pc_10007a34 ]
  %v0_10007a3c = load i32, i32* @r28, align 4
  %v2_10007a3c = add i32 %v0_10007a3c, %v1_10007a3c
  br label %dec_label_pc_10007a40

dec_label_pc_10007a40:                            ; preds = %dec_label_pc_10007a08, %dec_label_pc_10007a3c
  %v0_10007a44 = phi i32 [ %v4_10007a08, %dec_label_pc_10007a08 ], [ %v2_10007a3c, %dec_label_pc_10007a3c ]
  ret i32 %v0_10007a44

; uselistorder directives
  uselistorder i32 %v0_10007a24, { 1, 0 }
  uselistorder i32 %v2_100079f8, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10007a40, { 1, 0 }
  uselistorder label %dec_label_pc_10007a3c, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_2()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_2()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_10007a5c = load i32, i32* @lr, align 4
  store i32 %v0_10007a5c, i32* %r0.global-to-local, align 4
  %v2_10007a64 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_10007a64, i32* %r30.global-to-local, align 4
  %v0_10007a68 = load i32, i32* @r3, align 4
  store i32 %v0_10007a68, i32* %r24.global-to-local, align 4
  %v0_10007a74 = load i32, i32* @r5, align 4
  store i32 %v0_10007a74, i32* %r31.global-to-local, align 4
  %v0_10007a78 = load i32, i32* @r4, align 4
  store i32 %v0_10007a78, i32* @r29, align 4
  store i32 268466816, i32* @lr, align 4
  %v1_10007a7c = bitcast i8** %stack_var_-200 to i32*
  %v2_10007a7c = call i32 @_ppfs_init(i32* %v1_10007a7c)
  %tmp72 = icmp sgt i32 %v2_10007a7c, -1
  br i1 %tmp72, label %dec_label_pc_10007ab0, label %dec_label_pc_10007a88

dec_label_pc_10007a88:                            ; preds = %entry
  %v3_10007a88 = load i8*, i8** %stack_var_-200, align 4
  %v4_10007a88 = ptrtoint i8* %v3_10007a88 to i32
  store i32 %v4_10007a88, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_10007a88, i32* @r3, align 4
  %v0_10007a94 = call i32 @__GI_strlen()
  %v3_10007a98 = icmp eq i32 %v0_10007a94, 0
  br i1 %v3_10007a98, label %dec_label_pc_100080b0, label %dec_label_pc_10007aa0

dec_label_pc_10007aa0:                            ; preds = %dec_label_pc_10007a88
  %v0_10007aa0 = load i32, i32* @r31, align 4
  %v0_10007aa4 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007aac.156 to i32), i32* @lr, align 4
  %v3_10007aa8 = inttoptr i32 %v0_10007aa4 to i16*
  %v4_10007aa8 = call i32 @__stdio_fwrite(i32 %v0_10007aa0, i32 %v0_10007a94, i16* %v3_10007aa8)
  br label %dec_label_pc_100080b0

dec_label_pc_10007ab0:                            ; preds = %entry
  %v0_10007ab4 = load i32, i32* @r31, align 4
  store i32 268466876, i32* @lr, align 4
  %v2_10007ab8 = call i32 @_ppfs_prepargs(i32 %v2_10007a64, i32 %v0_10007ab4)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_10007b50 = zext i8 %tmp59 to i32
  %v2_10007b54 = icmp sgt i32 %tmp60, 0
  %v2_10007b58 = ptrtoint i32* %stack_var_-112 to i32
  %v2_10007b7c = ptrtoint i32* %stack_var_-344 to i32
  %v3_10007b80 = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_10007bb4 = icmp eq i32 %tmp57, 0
  %v2_10007f10 = ptrtoint i32* %stack_var_-328 to i32
  %v2_10007e30 = ptrtoint i32* %stack_var_-340 to i32
  %v2_10007e34 = ptrtoint i32* %stack_var_-336 to i32
  %v5_10007ca8 = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_10007d84 = icmp eq i32 %tmp57, 1
  %v2_10007d28 = icmp ugt i32 %tmp57, 2
  %v4_10007c68 = zext i8 %tmp55 to i32
  %v0_1000809c.pre = load i32, i32* @r29, align 4
  %v1_10007b68 = mul nuw nsw i32 %v4_10007b50, 8
  %v2_10007b6c = add i32 %v2_10007b58, %v1_10007b68
  %v1_10007b70 = add i32 %v2_10007b6c, -8
  %v1_10007b84 = add i32 %tmp58, 1
  %v2_10007bdc = icmp ugt i32 %tmp57, 7
  %v2_10007dbc = icmp ugt i32 %tmp57, 15
  %v2_10007df0 = icmp ugt i32 %tmp57, 17
  %v3_10007df0 = icmp eq i32 %tmp57, 17
  %v2_10007e98 = icmp ugt i32 %tmp57, 19
  %v3_10007e98 = icmp eq i32 %tmp57, 19
  %v3_10007f04 = icmp eq i32 %tmp57, 20
  %v1_10007bf4 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_1000afb4.158 to i32), i32 -1)
  %v2_10007bf4 = inttoptr i32 %v1_10007bf4 to i8*
  %v3_10007d34 = icmp eq i32 %tmp57, 3
  %v3_10007d44 = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_1000809c

dec_label_pc_10007ac8.backedge:                   ; preds = %dec_label_pc_10007b1c, %dec_label_pc_10007ad4
  %storemerge13.in = phi i32 [ %v1_10007ae4, %dec_label_pc_10007ad4 ], [ %v1_10007b1c, %dec_label_pc_10007b1c ]
  %v1_10007adc16 = phi i32 [ %v0_10007af4, %dec_label_pc_10007ad4 ], [ %v1_10007b1c, %dec_label_pc_10007b1c ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_10007ac8

dec_label_pc_10007ac8:                            ; preds = %dec_label_pc_10007ac8.backedge, %dec_label_pc_1000809c
  %v0_10007af4 = phi i32 [ %v1_10007adc16, %dec_label_pc_10007ac8.backedge ], [ %v0_1000809c, %dec_label_pc_1000809c ]
  %v1_10007ae4 = phi i32 [ %storemerge13, %dec_label_pc_10007ac8.backedge ], [ %v0_1000809c, %dec_label_pc_1000809c ]
  %v1_10007ac8 = inttoptr i32 %v1_10007ae4 to i8*
  %v2_10007ac8 = load i8, i8* %v1_10007ac8, align 1
  %v3_10007ac8 = zext i8 %v2_10007ac8 to i32
  store i32 %v3_10007ac8, i32* %r0.global-to-local, align 4
  %v3_10007acc = icmp eq i8 %v2_10007ac8, 0
  br i1 %v3_10007acc, label %dec_label_pc_10007adc, label %dec_label_pc_10007ad4

dec_label_pc_10007ad4:                            ; preds = %dec_label_pc_10007ac8
  %v3_10007ad4 = icmp eq i8 %v2_10007ac8, 37
  br i1 %v3_10007ad4, label %dec_label_pc_10007adc, label %dec_label_pc_10007ac8.backedge

dec_label_pc_10007adc:                            ; preds = %dec_label_pc_10007ad4, %dec_label_pc_10007ac8
  %v4_10007adc = icmp eq i32 %v1_10007ae4, %v0_10007af4
  br i1 %v4_10007adc, label %dec_label_pc_10007b10, label %dec_label_pc_10007ae4

dec_label_pc_10007ae4:                            ; preds = %dec_label_pc_10007adc
  %v2_10007ae4 = sub i32 %v1_10007ae4, %v0_10007af4
  store i32 %v2_10007ae4, i32* @r31, align 4
  %v4_10007ae4 = icmp sgt i32 %v2_10007ae4, 0
  br i1 %v4_10007ae4, label %dec_label_pc_10007af4, label %dec_label_pc_10007b04

dec_label_pc_10007af4:                            ; preds = %dec_label_pc_10007ae4
  %v0_10007afc = load i32, i32* %r24.global-to-local, align 4
  store i32 268466948, i32* @lr, align 4
  %v3_10007b00 = inttoptr i32 %v0_10007afc to i16*
  %v4_10007b00 = call i32 @__stdio_fwrite(i32 %v0_10007af4, i32 %v2_10007ae4, i16* %v3_10007b00)
  %v1_10007b04.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007b04

dec_label_pc_10007b04:                            ; preds = %dec_label_pc_10007ae4, %dec_label_pc_10007af4
  %v1_10007b0c = phi i32 [ %v1_10007b04.pre, %dec_label_pc_10007af4 ], [ %v2_10007ae4, %dec_label_pc_10007ae4 ]
  %storemerge2 = phi i32 [ %v4_10007b00, %dec_label_pc_10007af4 ], [ 0, %dec_label_pc_10007ae4 ]
  %v4_10007b04 = icmp eq i32 %storemerge2, %v1_10007b0c
  br i1 %v4_10007b04, label %dec_label_pc_10007b0c, label %dec_label_pc_100080ac

dec_label_pc_10007b0c:                            ; preds = %dec_label_pc_10007b04
  %v0_10007b0c = load i32, i32* %r23.global-to-local, align 4
  %v2_10007b0c = add i32 %v0_10007b0c, %v1_10007b0c
  store i32 %v2_10007b0c, i32* %r23.global-to-local, align 4
  %v0_10007b10.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10007b10

dec_label_pc_10007b10:                            ; preds = %dec_label_pc_10007adc, %dec_label_pc_10007b0c
  %v0_10007b1c = phi i32 [ %v0_10007af4, %dec_label_pc_10007adc ], [ %v0_10007b10.pre, %dec_label_pc_10007b0c ]
  %v1_10007b10 = inttoptr i32 %v0_10007b1c to i8*
  %v2_10007b10 = load i8, i8* %v1_10007b10, align 1
  %v3_10007b10 = zext i8 %v2_10007b10 to i32
  store i32 %v3_10007b10, i32* %r0.global-to-local, align 4
  %v3_10007b14 = icmp eq i8 %v2_10007b10, 0
  br i1 %v3_10007b14, label %dec_label_pc_100080b0, label %dec_label_pc_10007b1c

dec_label_pc_10007b1c:                            ; preds = %dec_label_pc_10007b10
  %v1_10007b1c = add i32 %v0_10007b1c, 1
  %v2_10007b1c = inttoptr i32 %v1_10007b1c to i8*
  %v3_10007b1c = load i8, i8* %v2_10007b1c, align 1
  %v4_10007b1c = zext i8 %v3_10007b1c to i32
  store i32 %v4_10007b1c, i32* %r0.global-to-local, align 4
  %v3_10007b24 = icmp eq i8 %v3_10007b1c, 37
  br i1 %v3_10007b24, label %dec_label_pc_10007ac8.backedge, label %dec_label_pc_10007b2c

dec_label_pc_10007b2c:                            ; preds = %dec_label_pc_10007b1c
  store i32 %v2_10007a64, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_10007b1c, i8** %stack_var_-200, align 4
  store i32 268467012, i32* @lr, align 4
  %v3_10007b40 = call i32 @_ppfs_parsespec(i32* %v1_10007a7c, i32 %v1_10007b1c)
  store i32 %v2_10007a64, i32* @r3, align 4
  store i32 268467020, i32* @lr, align 4
  %v0_10007b48 = call i32 @_ppfs_setargs()
  store i32 %v4_10007b50, i32* %r7.global-to-local, align 4
  store i32 %v2_10007b58, i32* %r0.global-to-local, align 4
  br i1 %v2_10007b54, label %dec_label_pc_10007b68, label %dec_label_pc_10007b74

dec_label_pc_10007b68:                            ; preds = %dec_label_pc_10007b2c
  br label %dec_label_pc_10007b74

dec_label_pc_10007b74:                            ; preds = %dec_label_pc_10007b2c, %dec_label_pc_10007b68
  %v0_10007ba082 = phi i32 [ %v1_10007b70, %dec_label_pc_10007b68 ], [ %v2_10007b58, %dec_label_pc_10007b2c ]
  store i32 %v0_10007ba082, i32* %r10.global-to-local, align 4
  store i32 %v2_10007b7c, i32* %r8.global-to-local, align 4
  store i32 %v1_10007b84, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_10007ba4.preheader, label %dec_label_pc_10007ba4.preheader.thread

dec_label_pc_10007ba4.preheader.thread:           ; preds = %dec_label_pc_10007b74
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007bb0

dec_label_pc_10007ba4.preheader:                  ; preds = %dec_label_pc_10007b74
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_10007b80, label %dec_label_pc_10007bb0, label %dec_label_pc_10007b9c.preheader

dec_label_pc_10007b9c.preheader:                  ; preds = %dec_label_pc_10007ba4.preheader
  store i32 %v0_10007ba082, i32* %stack_var_-344, align 4
  %v1_10007ba083 = add i32 %v0_10007ba082, 8
  store i32 %v1_10007ba083, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_10007bac88 = add i32 %tmp58, -1
  store i32 %v1_10007bac88, i32* %ctr.global-to-local, align 4
  %v2_10007bac89 = icmp eq i32 %v1_10007bac88, 0
  br i1 %v2_10007bac89, label %dec_label_pc_10007bb0, label %dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge

dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge: ; preds = %dec_label_pc_10007b9c.preheader, %dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge.dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge_crit_edge
  %v1_10007b9c.pre = phi i32 [ %v1_10007b9c.pre.pre, %dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge.dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge_crit_edge ], [ %v2_10007b7c, %dec_label_pc_10007b9c.preheader ]
  %v1_10007ba491 = phi i32 [ %v1_10007ba4, %dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge.dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge_crit_edge ], [ 4, %dec_label_pc_10007b9c.preheader ]
  %v1_10007ba090 = phi i32 [ %v1_10007ba0, %dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge.dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge_crit_edge ], [ %v1_10007ba083, %dec_label_pc_10007b9c.preheader ]
  %v3_10007b9c = add i32 %v1_10007b9c.pre, %v1_10007ba491
  %v4_10007b9c = inttoptr i32 %v3_10007b9c to i32*
  store i32 %v1_10007ba090, i32* %v4_10007b9c, align 4
  %v0_10007ba0 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007ba0 = add i32 %v0_10007ba0, 8
  store i32 %v1_10007ba0, i32* %r10.global-to-local, align 4
  %v0_10007ba4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007ba4 = mul i32 %v0_10007ba4, 4
  store i32 %v1_10007ba4, i32* %r0.global-to-local, align 4
  %v1_10007ba8 = add i32 %v0_10007ba4, 1
  store i32 %v1_10007ba8, i32* %r11.global-to-local, align 4
  %v0_10007bac = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007bac = add i32 %v0_10007bac, -1
  store i32 %v1_10007bac, i32* %ctr.global-to-local, align 4
  %v2_10007bac = icmp eq i32 %v1_10007bac, 0
  br i1 %v2_10007bac, label %dec_label_pc_10007bb0, label %dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge.dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge_crit_edge

dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge.dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge_crit_edge: ; preds = %dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge
  %v1_10007b9c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge

dec_label_pc_10007bb0:                            ; preds = %dec_label_pc_10007b9c.preheader, %dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge, %dec_label_pc_10007ba4.preheader.thread, %dec_label_pc_10007ba4.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_10007bb4, label %dec_label_pc_10007bbc, label %dec_label_pc_10007bdc

dec_label_pc_10007bbc:                            ; preds = %dec_label_pc_10007bb0
  %v0_10007bc0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10007bc0, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_10007bc0, 0
  %v1_10007bc8 = zext i1 %tmp96 to i32
  %v2_10007bc8 = ashr i32 %v0_10007bc0, 31
  %v3_10007bc8 = and i32 %v2_10007bc8, -2
  %v4_10007bc8 = or i32 %v3_10007bc8, %v1_10007bc8
  store i32 %v4_10007bc8, i32* @r5, align 4
  %v1_10007bd0 = call i32 @__asm_rlwinm(i32 %v0_10007cf0, i32 0, i32 20, i32 23)
  store i32 %v1_10007bd0, i32* @r4, align 4
  %v1_10007bd4 = inttoptr i32 %v1_10007bd0 to i16*
  %v2_10007bd4 = call i32 @_store_inttype(i16* %v1_10007bd4)
  br label %dec_label_pc_10008098

dec_label_pc_10007bdc:                            ; preds = %dec_label_pc_10007bb0
  br i1 %v2_10007bdc, label %dec_label_pc_10007dbc, label %dec_label_pc_10007be4

dec_label_pc_10007be4:                            ; preds = %dec_label_pc_10007bdc
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_10007bf4 = load i8, i8* %v2_10007bf4, align 1
  %v4_10007bf4 = zext i8 %v3_10007bf4 to i32
  store i32 %v4_10007bf4, i32* %r30.global-to-local, align 4
  %v3_10007bf8 = icmp eq i8 %v3_10007bf4, 10
  br i1 %v3_10007bf8, label %dec_label_pc_10007c00, label %dec_label_pc_10007c28

dec_label_pc_10007c00:                            ; preds = %dec_label_pc_10007be4
  store i32 %v0_10007cf0, i32* %r0.global-to-local, align 4
  %v1_10007c04 = call i32 @__asm_rlwinm(i32 %v0_10007cf0, i32 26, i32 31, i32 31)
  %v1_10007c08 = call i32 @__asm_rlwinm(i32 %v0_10007cf0, i32 27, i32 31, i32 31)
  %v3_10007c0c = icmp eq i32 %v1_10007c04, 0
  %v2_10007c10 = icmp ne i32 %v1_10007c08, 0
  %not.v2_10007c10 = xor i1 %v2_10007c10, true
  %v6_10007c14 = sext i1 %not.v2_10007c10 to i32
  store i32 %v6_10007c14, i32* %r0.global-to-local, align 4
  %v1_10007c1c = select i1 %v2_10007c10, i32 44, i32 87
  store i32 %v1_10007c1c, i32* %r31.global-to-local, align 4
  br i1 %v3_10007c0c, label %dec_label_pc_10007c28, label %dec_label_pc_10007c24

dec_label_pc_10007c24:                            ; preds = %dec_label_pc_10007c00
  %v1_10007c24 = or i32 %v1_10007c1c, 128
  store i32 %v1_10007c24, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007c28

dec_label_pc_10007c28:                            ; preds = %dec_label_pc_10007be4, %dec_label_pc_10007c00, %dec_label_pc_10007c24
  %v0_10007c28 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007c28 = icmp ugt i32 %v0_10007c28, 5
  br i1 %v2_10007c28, label %dec_label_pc_10007c50, label %dec_label_pc_10007c30

dec_label_pc_10007c30:                            ; preds = %dec_label_pc_10007c28
  %v3_10007c30 = icmp eq i32 %v0_10007c28, 3
  br i1 %v3_10007c30, label %dec_label_pc_10007c38, label %dec_label_pc_10007c40

dec_label_pc_10007c38:                            ; preds = %dec_label_pc_10007c30
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007c54

dec_label_pc_10007c40:                            ; preds = %dec_label_pc_10007c30
  %v3_10007c40 = icmp eq i32 %v0_10007c28, 1
  br i1 %v3_10007c40, label %dec_label_pc_10007c58, label %dec_label_pc_10007c54

dec_label_pc_10007c50:                            ; preds = %dec_label_pc_10007c28
  %v0_10007c50 = load i32, i32* %r30.global-to-local, align 4
  %v1_10007c50 = sub i32 0, %v0_10007c50
  store i32 %v1_10007c50, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007c54

dec_label_pc_10007c54:                            ; preds = %dec_label_pc_10007c40, %dec_label_pc_10007c38, %dec_label_pc_10007c50
  br label %dec_label_pc_10007c58

dec_label_pc_10007c58:                            ; preds = %dec_label_pc_10007c40, %dec_label_pc_10007c54
  %storemerge3 = phi i32 [ 11, %dec_label_pc_10007c54 ], [ 6, %dec_label_pc_10007c40 ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_10007c58 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10007c58, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_10007c58, -1
  br i1 %tmp75, label %dec_label_pc_10007c6c, label %dec_label_pc_10007c68

dec_label_pc_10007c68:                            ; preds = %dec_label_pc_10007c58
  br label %dec_label_pc_10007c6c

dec_label_pc_10007c6c:                            ; preds = %dec_label_pc_10007c58, %dec_label_pc_10007c68
  %storemerge = phi i32 [ %v4_10007c68, %dec_label_pc_10007c68 ], [ 32, %dec_label_pc_10007c58 ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_10007c6c = icmp eq i32 %v0_10007c28, 1
  br i1 %v3_10007c6c, label %dec_label_pc_10007c88, label %dec_label_pc_10007c78

dec_label_pc_10007c78:                            ; preds = %dec_label_pc_10007c6c
  %v0_10007c78 = load i32, i32* %r7.global-to-local, align 4
  %v1_10007c78 = mul i32 %v0_10007c78, 4
  store i32 %v1_10007c78, i32* %r0.global-to-local, align 4
  %v0_10007c7c = load i32, i32* @r1, align 4
  %v2_10007c7c = add i32 %v0_10007c7c, %v1_10007c78
  %v1_10007c80 = add i32 %v2_10007c7c, 188
  %v2_10007c80 = inttoptr i32 %v1_10007c80 to i32*
  %v3_10007c80 = load i32, i32* %v2_10007c80, align 4
  store i32 %v3_10007c80, i32* %r0.global-to-local, align 4
  %v1_10007c84 = call i32 @__asm_rlwinm(i32 %v3_10007c80, i32 0, i32 20, i32 23)
  br label %dec_label_pc_10007c88

dec_label_pc_10007c88:                            ; preds = %dec_label_pc_10007c6c, %dec_label_pc_10007c78
  %v3_10007c88 = load i32, i32* %stack_var_-344, align 4
  %v0_10007c8c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10007c8c, i32* @r5, align 4
  %v2_10007c90 = inttoptr i32 %v0_10007c8c to i32*
  %v3_10007c90 = call i32 @_load_inttype(i32 %v3_10007c88, i32* %v2_10007c90)
  store i32 %v0_10007c8c, i32* %r7.global-to-local, align 4
  %v0_10007ca0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10007ca0, i32* %r8.global-to-local, align 4
  %v6_10007ca8 = call i32 @_uintmaxtostr(i8* %v5_10007ca8, i32 %v3_10007c90, i32 %v3_10007c88, i32 %v0_10007c8c, i32 %v0_10007ca0)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_10007ca8, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_10007cfc, label %dec_label_pc_10007cbc

dec_label_pc_10007cbc:                            ; preds = %dec_label_pc_10007c88
  %v7_10007ca8 = inttoptr i32 %v6_10007ca8 to i8*
  %v3_10007cbc = load i8, i8* %v7_10007ca8, align 1
  %v4_10007cbc = zext i8 %v3_10007cbc to i32
  store i32 %v4_10007cbc, i32* %r0.global-to-local, align 4
  %v3_10007cc4 = icmp eq i8 %v3_10007cbc, 45
  br i1 %v3_10007cc4, label %dec_label_pc_10007ccc, label %dec_label_pc_10007ce0

dec_label_pc_10007ccc:                            ; preds = %dec_label_pc_10007cbc
  %v1_10007ccc = or i32 %v0_10007cf0, 2
  store i32 %v1_10007ccc, i32* %r0.global-to-local, align 4
  %v2_10007cd0 = add i32 %v6_10007ca8, 1
  store i32 %v2_10007cd0, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_10007cfc

dec_label_pc_10007ce0:                            ; preds = %dec_label_pc_10007cbc
  %v1_10007ce0 = and i32 %v0_10007cf0, 2
  store i32 %v1_10007ce0, i32* %r0.global-to-local, align 4
  %v3_10007ce0 = icmp eq i32 %v1_10007ce0, 0
  br i1 %v3_10007ce0, label %dec_label_pc_10007cf0, label %dec_label_pc_10007ce8

dec_label_pc_10007ce8:                            ; preds = %dec_label_pc_10007ce0
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10007cfc

dec_label_pc_10007cf0:                            ; preds = %dec_label_pc_10007ce0
  %v1_10007cf0 = urem i32 %v0_10007cf0, 2
  store i32 %v1_10007cf0, i32* %r11.global-to-local, align 4
  %v3_10007cf0 = icmp eq i32 %v1_10007cf0, 0
  br i1 %v3_10007cf0, label %dec_label_pc_10007cfc, label %dec_label_pc_10007cf8

dec_label_pc_10007cf8:                            ; preds = %dec_label_pc_10007cf0
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_10007cfc

dec_label_pc_10007cfc:                            ; preds = %dec_label_pc_10007cf0, %dec_label_pc_10007c88, %dec_label_pc_10007ce8, %dec_label_pc_10007ccc, %dec_label_pc_10007cf8
  %v0_10007d68 = phi i32 [ %v6_10007ca8, %dec_label_pc_10007c88 ], [ %v2_10007cd0, %dec_label_pc_10007ccc ], [ %v6_10007ca8, %dec_label_pc_10007cf0 ], [ %v6_10007ca8, %dec_label_pc_10007cf8 ], [ %v6_10007ca8, %dec_label_pc_10007ce8 ]
  %stack_var_-184.0 = phi i32 [ %v0_10007cf0, %dec_label_pc_10007c88 ], [ %v1_10007ccc, %dec_label_pc_10007ccc ], [ %v0_10007cf0, %dec_label_pc_10007cf0 ], [ %v0_10007cf0, %dec_label_pc_10007cf8 ], [ %v0_10007cf0, %dec_label_pc_10007ce8 ]
  %v3_10007cfc = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_10007f10, i32* %r0.global-to-local, align 4
  %v2_10007d04 = sub i32 %v2_10007f10, %v0_10007d68
  %v1_10007d0c = add i32 %v2_10007d04, 127
  store i32 %v1_10007d0c, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_10007cfc, -1
  br i1 %tmp76, label %dec_label_pc_10007d18, label %dec_label_pc_10007d14

dec_label_pc_10007d14:                            ; preds = %dec_label_pc_10007cfc
  br label %dec_label_pc_10007d18

dec_label_pc_10007d18:                            ; preds = %dec_label_pc_10007cfc, %dec_label_pc_10007d14
  %v0_10007d4c = phi i32 [ %v3_10007cfc, %dec_label_pc_10007cfc ], [ 1, %dec_label_pc_10007d14 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_10007d1c = and i32 %stack_var_-184.0, 16
  store i32 %v1_10007d1c, i32* %r11.global-to-local, align 4
  %v3_10007d1c = icmp eq i32 %v1_10007d1c, 0
  br i1 %v3_10007d1c, label %dec_label_pc_10007d68, label %dec_label_pc_10007d24

dec_label_pc_10007d24:                            ; preds = %dec_label_pc_10007d18
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_10007d28, label %dec_label_pc_10007d34, label %dec_label_pc_10007d44.thread

dec_label_pc_10007d44.thread:                     ; preds = %dec_label_pc_10007d24
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_10007d68

dec_label_pc_10007d34:                            ; preds = %dec_label_pc_10007d24
  br i1 %v3_10007d34, label %dec_label_pc_10007d3c, label %dec_label_pc_10007d44

dec_label_pc_10007d3c:                            ; preds = %dec_label_pc_10007d34
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_10007d68

dec_label_pc_10007d44:                            ; preds = %dec_label_pc_10007d34
  br i1 %v3_10007d44, label %dec_label_pc_10007d4c, label %dec_label_pc_10007d68

dec_label_pc_10007d4c:                            ; preds = %dec_label_pc_10007d44
  %v3_10007d4c = icmp ugt i32 %v0_10007d4c, %v1_10007d0c
  br i1 %v3_10007d4c, label %dec_label_pc_10007d68, label %dec_label_pc_10007d54

dec_label_pc_10007d54:                            ; preds = %dec_label_pc_10007d4c
  %v1_10007d54 = inttoptr i32 %v0_10007d68 to i8*
  %v2_10007d54 = load i8, i8* %v1_10007d54, align 1
  %v3_10007d54 = zext i8 %v2_10007d54 to i32
  store i32 %v3_10007d54, i32* %r0.global-to-local, align 4
  %v3_10007d5c = icmp eq i8 %v2_10007d54, 48
  br i1 %v3_10007d5c, label %dec_label_pc_10007d68, label %dec_label_pc_10007d64

dec_label_pc_10007d64:                            ; preds = %dec_label_pc_10007d54
  %v1_10007d64 = add i32 %v2_10007d04, 128
  br label %dec_label_pc_10007d68

dec_label_pc_10007d68:                            ; preds = %dec_label_pc_10007d44.thread, %dec_label_pc_10007d44, %dec_label_pc_10007d54, %dec_label_pc_10007d4c, %dec_label_pc_10007d18, %dec_label_pc_10007d3c, %dec_label_pc_10007d64
  %v1_10007db0 = phi i32 [ %v0_10007d4c, %dec_label_pc_10007d44 ], [ 1, %dec_label_pc_10007d54 ], [ %v0_10007d4c, %dec_label_pc_10007d4c ], [ %v0_10007d4c, %dec_label_pc_10007d18 ], [ %v0_10007d4c, %dec_label_pc_10007d3c ], [ %v1_10007d64, %dec_label_pc_10007d64 ], [ %v0_10007d4c, %dec_label_pc_10007d44.thread ]
  %v1_10007d68 = inttoptr i32 %v0_10007d68 to i8*
  %v2_10007d68 = load i8, i8* %v1_10007d68, align 1
  %v3_10007d68 = zext i8 %v2_10007d68 to i32
  store i32 %v3_10007d68, i32* %r0.global-to-local, align 4
  %v3_10007d6c = icmp eq i8 %v2_10007d68, 48
  br i1 %v3_10007d6c, label %dec_label_pc_10007d74, label %dec_label_pc_10007dac

dec_label_pc_10007d74:                            ; preds = %dec_label_pc_10007d68
  %v0_10007d74 = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_10007d74, 6
  br i1 %tmp77, label %dec_label_pc_10007d80, label %dec_label_pc_10007d7c

dec_label_pc_10007d7c:                            ; preds = %dec_label_pc_10007d74
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_10007d80

dec_label_pc_10007d80:                            ; preds = %dec_label_pc_10007d74, %dec_label_pc_10007d7c
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_10007d84, label %dec_label_pc_10007d8c, label %dec_label_pc_10007d9c

dec_label_pc_10007d8c:                            ; preds = %dec_label_pc_10007d80
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000af98.159 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007f28

dec_label_pc_10007d9c:                            ; preds = %dec_label_pc_10007d80
  %v3_10007d9c = icmp eq i32 %v1_10007db0, 0
  br i1 %v3_10007d9c, label %dec_label_pc_10007da4, label %dec_label_pc_10007dac

dec_label_pc_10007da4:                            ; preds = %dec_label_pc_10007d9c
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007f28

dec_label_pc_10007dac:                            ; preds = %dec_label_pc_10007d9c, %dec_label_pc_10007d68
  %v3_10007dac = icmp ugt i32 %v1_10007db0, %v1_10007d0c
  %v2_10007db0 = sub i32 %v1_10007db0, %v1_10007d0c
  store i32 %v2_10007db0, i32* %r29.global-to-local, align 4
  br i1 %v3_10007dac, label %dec_label_pc_10007f48thread-pre-split, label %dec_label_pc_10007f28

dec_label_pc_10007dbc:                            ; preds = %dec_label_pc_10007bdc
  br i1 %v2_10007dbc, label %dec_label_pc_10007df0, label %dec_label_pc_10007dc4

dec_label_pc_10007dc4:                            ; preds = %dec_label_pc_10007dbc
  %v3_10007dc4 = load i32, i32* %stack_var_-344, align 4
  %v0_10007dd0 = load i32, i32* %r24.global-to-local, align 4
  store i32 268467680, i32* @lr, align 4
  %v5_10007ddc = call i32 @_fpmaxtostr(i32 %v0_10007dd0, i32* nonnull %stack_var_-196, i32 268466616, i32 %v3_10007dc4)
  %v1_10007de0 = icmp slt i32 %v5_10007ddc, 0
  br i1 %v1_10007de0, label %dec_label_pc_100080ac, label %dec_label_pc_10007de8

dec_label_pc_10007de8:                            ; preds = %dec_label_pc_10007dc4
  %v0_10007de8 = load i32, i32* %r23.global-to-local, align 4
  %v2_10007de8 = add i32 %v0_10007de8, %v5_10007ddc
  store i32 %v2_10007de8, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10008098

dec_label_pc_10007df0:                            ; preds = %dec_label_pc_10007dbc
  br i1 %v2_10007df0, label %dec_label_pc_10007e98, label %dec_label_pc_10007df8

dec_label_pc_10007df8:                            ; preds = %dec_label_pc_10007df0
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_10007e04 = load i32, i32* %stack_var_-344, align 4
  %v1_10007e0c = inttoptr i32 %v3_10007e04 to i32*
  %v2_10007e0c = load i32, i32* %v1_10007e0c, align 4
  br i1 %v3_10007df0, label %dec_label_pc_10007e0c, label %dec_label_pc_10007e60

dec_label_pc_10007e0c:                            ; preds = %dec_label_pc_10007df8
  store i32 %v2_10007e0c, i32* %r0.global-to-local, align 4
  %v3_10007e10 = icmp eq i32 %v2_10007e0c, 0
  store i32 %v2_10007e0c, i32* %stack_var_-340, align 4
  br i1 %v3_10007e10, label %dec_label_pc_10007f30, label %dec_label_pc_10007e1c

dec_label_pc_10007e1c:                            ; preds = %dec_label_pc_10007e0c
  %v3_10007e1c = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10007e1c, i32* %r0.global-to-local, align 4
  %v1_10007e24 = icmp slt i32 %v3_10007e1c, 0
  br i1 %v1_10007e24, label %dec_label_pc_10007e30, label %dec_label_pc_10007e2c

dec_label_pc_10007e2c:                            ; preds = %dec_label_pc_10007e1c
  br label %dec_label_pc_10007e30

dec_label_pc_10007e30:                            ; preds = %dec_label_pc_10007e1c, %dec_label_pc_10007e2c
  %storemerge94 = phi i32 [ %v3_10007e1c, %dec_label_pc_10007e2c ], [ -1, %dec_label_pc_10007e1c ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_10007e30, i32* @r3, align 4
  store i32 %v2_10007e34, i32* @r6, align 4
  store i32 %v2_10007e30, i32* @r4, align 4
  store i32 268467776, i32* @lr, align 4
  %v0_10007e3c = call i32 @__GI_wcsrtombs()
  %v3_10007e40 = icmp eq i32 %v0_10007e3c, -1
  store i32 %v0_10007e3c, i32* @r31, align 4
  br i1 %v3_10007e40, label %dec_label_pc_100080ac, label %dec_label_pc_10007e4c

dec_label_pc_10007e4c:                            ; preds = %dec_label_pc_10007e30
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007f48

dec_label_pc_10007e60:                            ; preds = %dec_label_pc_10007df8
  store i32 %v2_10007f10, i32* @r28, align 4
  store i32 268467828, i32* @lr, align 4
  %v3_10007e70 = call i32 @__GI_wcrtomb(i32 %v2_10007f10, i32 %v2_10007e0c, i32 %v2_10007e34)
  %v3_10007e74 = icmp eq i32 %v3_10007e70, -1
  store i32 %v3_10007e70, i32* @r31, align 4
  br i1 %v3_10007e74, label %dec_label_pc_100080ac, label %dec_label_pc_10007e80

dec_label_pc_10007e80:                            ; preds = %dec_label_pc_10007e60
  store i32 %v2_10007f10, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_10007e90 = load i32, i32* @r25, align 4
  %v1_10007e90 = load i32, i32* @r28, align 4
  %v3_10007e90 = trunc i32 %v0_10007e90 to i8
  %v4_10007e90 = add i32 %v1_10007e90, %v3_10007e70
  %v5_10007e90 = inttoptr i32 %v4_10007e90 to i8*
  store i8 %v3_10007e90, i8* %v5_10007e90, align 1
  %v0_10007f4c.pre.pre = load i32, i32* @r31, align 4
  %v1_10007f4c.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10007f48thread-pre-split

dec_label_pc_10007e98:                            ; preds = %dec_label_pc_10007df0
  br i1 %v2_10007e98, label %dec_label_pc_10007f04, label %dec_label_pc_10007ea0

dec_label_pc_10007ea0:                            ; preds = %dec_label_pc_10007e98
  %v3_10007ea4 = load i32, i32* %stack_var_-344, align 4
  %v1_10007eac = inttoptr i32 %v3_10007ea4 to i32*
  %v2_10007eac = load i32, i32* %v1_10007eac, align 4
  br i1 %v3_10007e98, label %dec_label_pc_10007eac, label %dec_label_pc_10007edc

dec_label_pc_10007eac:                            ; preds = %dec_label_pc_10007ea0
  store i32 %v2_10007eac, i32* %r30.global-to-local, align 4
  %v3_10007eb0 = icmp eq i32 %v2_10007eac, 0
  br i1 %v3_10007eb0, label %dec_label_pc_10007f30, label %dec_label_pc_10007eb8

dec_label_pc_10007eb8:                            ; preds = %dec_label_pc_10007eac, %dec_label_pc_10007f0c
  %v0_10007ecc = phi i32 [ %v2_10007eac, %dec_label_pc_10007eac ], [ %v3_10007f1c, %dec_label_pc_10007f0c ]
  %v3_10007eb8 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10007eb8, i32* %r0.global-to-local, align 4
  %v1_10007ec0 = icmp slt i32 %v3_10007eb8, 0
  br i1 %v1_10007ec0, label %dec_label_pc_10007ecc, label %dec_label_pc_10007ec8

dec_label_pc_10007ec8:                            ; preds = %dec_label_pc_10007eb8
  br label %dec_label_pc_10007ecc

dec_label_pc_10007ecc:                            ; preds = %dec_label_pc_10007eb8, %dec_label_pc_10007ec8
  %storemerge95 = phi i32 [ %v3_10007eb8, %dec_label_pc_10007ec8 ], [ -1, %dec_label_pc_10007eb8 ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268467924, i32* @lr, align 4
  %v1_10007ed0 = inttoptr i32 %v0_10007ecc to i8*
  %v2_10007ed0 = call i32 @strnlen(i8* %v1_10007ed0)
  store i32 %v2_10007ed0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007f3c

dec_label_pc_10007edc:                            ; preds = %dec_label_pc_10007ea0
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_10007eac, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_10007f10, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007f48thread-pre-split

dec_label_pc_10007f04:                            ; preds = %dec_label_pc_10007e98
  br i1 %v3_10007f04, label %dec_label_pc_10007f0c, label %dec_label_pc_100080ac

dec_label_pc_10007f0c:                            ; preds = %dec_label_pc_10007f04
  %v0_10007f0c = call i32 @__errno_location()
  %v1_10007f14 = inttoptr i32 %v0_10007f0c to i32*
  %v2_10007f14 = load i32, i32* %v1_10007f14, align 4
  store i32 %v2_10007f14, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268468000, i32* @lr, align 4
  %v3_10007f1c = call i32 @__GI___glibc_strerror_r(i32 %v2_10007f14, i32 %v2_10007f10, i32 128)
  store i32 %v3_10007f1c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007eb8

dec_label_pc_10007f28:                            ; preds = %dec_label_pc_10007dac, %dec_label_pc_10007da4, %dec_label_pc_10007d8c
  %v0_10007f4c.pre41 = phi i32 [ %v1_10007d0c, %dec_label_pc_10007dac ], [ 0, %dec_label_pc_10007da4 ], [ 5, %dec_label_pc_10007d8c ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10007f48thread-pre-split

dec_label_pc_10007f30:                            ; preds = %dec_label_pc_10007eac, %dec_label_pc_10007e0c
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000afa0.160 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007f3c

dec_label_pc_10007f3c:                            ; preds = %dec_label_pc_10007ecc, %dec_label_pc_10007f30
  %v0_10007f4c29 = phi i32 [ %v2_10007ed0, %dec_label_pc_10007ecc ], [ 6, %dec_label_pc_10007f30 ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_10007f48

dec_label_pc_10007f48thread-pre-split:            ; preds = %dec_label_pc_10007e80, %dec_label_pc_10007edc, %dec_label_pc_10007f28, %dec_label_pc_10007dac
  %v1_10007f4c.pre = phi i32 [ %v2_10007db0, %dec_label_pc_10007dac ], [ 0, %dec_label_pc_10007f28 ], [ %v1_10007f4c.pre.pre, %dec_label_pc_10007e80 ], [ 0, %dec_label_pc_10007edc ]
  %v0_10007f4c.pre = phi i32 [ %v1_10007d0c, %dec_label_pc_10007dac ], [ %v0_10007f4c.pre41, %dec_label_pc_10007f28 ], [ %v0_10007f4c.pre.pre, %dec_label_pc_10007e80 ], [ 1, %dec_label_pc_10007edc ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_10007dac ], [ %stack_var_-184.0, %dec_label_pc_10007f28 ], [ %v0_10007cf0, %dec_label_pc_10007e80 ], [ %v0_10007cf0, %dec_label_pc_10007edc ]
  %v0_10007f48.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_10007f48

dec_label_pc_10007f48:                            ; preds = %dec_label_pc_10007f48thread-pre-split, %dec_label_pc_10007e4c, %dec_label_pc_10007f3c
  %v1_10007f4c = phi i32 [ %v1_10007f4c.pre, %dec_label_pc_10007f48thread-pre-split ], [ 0, %dec_label_pc_10007e4c ], [ 0, %dec_label_pc_10007f3c ]
  %v0_10007f4c = phi i32 [ %v0_10007f4c.pre, %dec_label_pc_10007f48thread-pre-split ], [ %v0_10007e3c, %dec_label_pc_10007e4c ], [ %v0_10007f4c29, %dec_label_pc_10007f3c ]
  %v0_10007f54 = phi i32 [ %v0_10007f48.pr, %dec_label_pc_10007f48thread-pre-split ], [ 11, %dec_label_pc_10007e4c ], [ 11, %dec_label_pc_10007f3c ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_10007f48thread-pre-split ], [ %v0_10007cf0, %dec_label_pc_10007e4c ], [ %v0_10007cf0, %dec_label_pc_10007f3c ]
  %v3_10007f48 = icmp eq i32 %v0_10007f54, 11
  %v2_10007f4c = add i32 %v0_10007f4c, %v1_10007f4c
  store i32 %v2_10007f4c, i32* %r0.global-to-local, align 4
  br i1 %v3_10007f48, label %dec_label_pc_10007f68, label %dec_label_pc_10007f54

dec_label_pc_10007f54:                            ; preds = %dec_label_pc_10007f48
  %v0_10007f58 = call i32 @__asm_mfcr()
  %v1_10007f5c = call i32 @__asm_rlwinm(i32 %v0_10007f58, i32 30, i32 31, i32 31)
  %v1_10007f60 = add i32 %v1_10007f5c, 1
  %v0_10007f64 = load i32, i32* %r0.global-to-local, align 4
  %v2_10007f64 = add i32 %v0_10007f64, %v1_10007f60
  store i32 %v2_10007f64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10007f68

dec_label_pc_10007f68:                            ; preds = %dec_label_pc_10007f48, %dec_label_pc_10007f54
  %v0_10007f80 = phi i32 [ %v2_10007f4c, %dec_label_pc_10007f48 ], [ %v2_10007f64, %dec_label_pc_10007f54 ]
  %v3_10007f70 = icmp ugt i32 %tmp, %v0_10007f80
  br i1 %v3_10007f70, label %dec_label_pc_10007f78, label %dec_label_pc_10007f7c

dec_label_pc_10007f78:                            ; preds = %dec_label_pc_10007f68
  %v2_10007f78 = sub i32 %tmp, %v0_10007f80
  br label %dec_label_pc_10007f7c

dec_label_pc_10007f7c:                            ; preds = %dec_label_pc_10007f68, %dec_label_pc_10007f78
  %storemerge93 = phi i32 [ %v2_10007f78, %dec_label_pc_10007f78 ], [ 0, %dec_label_pc_10007f68 ]
  %v1_10007f8c = phi i32 [ %v2_10007f78, %dec_label_pc_10007f78 ], [ 0, %dec_label_pc_10007f68 ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_10007f7c = load i32, i32* @r26, align 4
  %v3_10007f7c = icmp eq i32 %v0_10007f7c, 48
  %v2_10007f80 = add i32 %v1_10007f8c, %v0_10007f80
  store i32 %v2_10007f80, i32* %r0.global-to-local, align 4
  %v0_10007f84 = load i32, i32* %r23.global-to-local, align 4
  %v2_10007f84 = add i32 %v0_10007f84, %v2_10007f80
  store i32 %v2_10007f84, i32* %r23.global-to-local, align 4
  br i1 %v3_10007f7c, label %dec_label_pc_10007f8c, label %dec_label_pc_10007f94

dec_label_pc_10007f8c:                            ; preds = %dec_label_pc_10007f7c
  %v0_10007f8c = load i32, i32* %r29.global-to-local, align 4
  %v2_10007f8c = add i32 %v0_10007f8c, %v1_10007f8c
  store i32 %v2_10007f8c, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10007f94

dec_label_pc_10007f94:                            ; preds = %dec_label_pc_10007f7c, %dec_label_pc_10007f8c
  %v0_10007fa8 = phi i32 [ %v1_10007f8c, %dec_label_pc_10007f7c ], [ 0, %dec_label_pc_10007f8c ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_10007f98 = and i32 %stack_var_-184.1, 8
  %v3_10007f98 = icmp eq i32 %v1_10007f98, 0
  br i1 %v3_10007f98, label %dec_label_pc_10007fa0, label %dec_label_pc_10007fbc

dec_label_pc_10007fa0:                            ; preds = %dec_label_pc_10007f94
  %v0_10007fa0 = load i32, i32* %r24.global-to-local, align 4
  store i32 268468144, i32* @lr, align 4
  %v4_10007fac = call i32 @_charpad(i32 %v0_10007fa0, i8 32, i32 %v0_10007fa8)
  %v1_10007fb0 = load i32, i32* @r28, align 4
  %v4_10007fb0 = icmp eq i32 %v4_10007fac, %v1_10007fb0
  br i1 %v4_10007fb0, label %dec_label_pc_10007fb8, label %dec_label_pc_100080ac

dec_label_pc_10007fb8:                            ; preds = %dec_label_pc_10007fa0
  br label %dec_label_pc_10007fbc

dec_label_pc_10007fbc:                            ; preds = %dec_label_pc_10007f94, %dec_label_pc_10007fb8
  %v0_10007fc0 = load i32, i32* %r24.global-to-local, align 4
  %v0_10007fc8 = load i32, i32* @r27, align 4
  %v2_10007fc8 = add i32 %v0_10007fc8, ptrtoint (i32* @global_var_1000afa8.161 to i32)
  store i32 268468176, i32* @lr, align 4
  %v2_10007fcc = call i32 @__GI_fputs_unlocked(i32 %v2_10007fc8, i32 %v0_10007fc0)
  %v0_10007fd8 = load i32, i32* @r29, align 4
  store i32 268468192, i32* @lr, align 4
  %v4_10007fdc = call i32 @_charpad(i32 %v0_10007fc0, i8 48, i32 %v0_10007fd8)
  %v1_10007fe0 = load i32, i32* @r29, align 4
  %v4_10007fe0 = icmp eq i32 %v4_10007fdc, %v1_10007fe0
  br i1 %v4_10007fe0, label %dec_label_pc_10007fe8, label %dec_label_pc_100080ac

dec_label_pc_10007fe8:                            ; preds = %dec_label_pc_10007fbc
  %v3_10007fe8 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_10007fe8, i32* %r0.global-to-local, align 4
  %v3_10007fec = icmp eq i32 %v3_10007fe8, 0
  br i1 %v3_10007fec, label %dec_label_pc_10007ff4, label %dec_label_pc_1000801c

dec_label_pc_10007ff4:                            ; preds = %dec_label_pc_10007fe8
  %v0_10007ff4 = load i32, i32* @r31, align 4
  %v3_10007ff4 = icmp eq i32 %v0_10007ff4, 0
  br i1 %v3_10007ff4, label %dec_label_pc_10008010.thread, label %dec_label_pc_10008010

dec_label_pc_10008010.thread:                     ; preds = %dec_label_pc_10007ff4
  br label %dec_label_pc_10008080

dec_label_pc_10008010:                            ; preds = %dec_label_pc_10007ff4
  %v0_10008000 = load i32, i32* @r30, align 4
  %v0_10008008 = load i32, i32* %r24.global-to-local, align 4
  store i32 268468240, i32* @lr, align 4
  %v4_1000800c = inttoptr i32 %v0_10008008 to i16*
  %v5_1000800c = call i32 @__stdio_fwrite(i32 %v0_10008000, i32 %v0_10007ff4, i16* %v4_1000800c)
  %v1_10008010.pre = load i32, i32* @r31, align 4
  %v4_10008010 = icmp eq i32 %v5_1000800c, %v1_10008010.pre
  br i1 %v4_10008010, label %dec_label_pc_10008080, label %dec_label_pc_100080ac

dec_label_pc_1000801c:                            ; preds = %dec_label_pc_10007fe8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_10008060.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008060

dec_label_pc_10008028:                            ; preds = %dec_label_pc_10008060
  %tmp78 = icmp ult i32 %v0_10008078, 129
  br i1 %tmp78, label %dec_label_pc_10008030, label %dec_label_pc_1000802c

dec_label_pc_1000802c:                            ; preds = %dec_label_pc_10008028
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_10008030

dec_label_pc_10008030:                            ; preds = %dec_label_pc_10008028, %dec_label_pc_1000802c
  store i32 ptrtoint (i32* @global_var_10008034.162 to i32), i32* @lr, align 4
  %v0_10008030 = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10008030, i32* @r30, align 4
  %v3_10008038 = icmp eq i32 %v0_10008030, 0
  br i1 %v3_10008038, label %dec_label_pc_10008054, label %dec_label_pc_1000804c

dec_label_pc_1000804c:                            ; preds = %dec_label_pc_10008030
  %v0_1000803c = load i32, i32* %r24.global-to-local, align 4
  store i32 268468304, i32* @lr, align 4
  %v3_1000804c = inttoptr i32 %v0_1000803c to i16*
  %v4_1000804c = call i32 @__stdio_fwrite(i32 %v2_10007f10, i32 %v0_10008030, i16* %v3_1000804c)
  store i32 %v4_1000804c, i32* %r0.global-to-local, align 4
  %v1_10008054.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008054

dec_label_pc_10008054:                            ; preds = %dec_label_pc_10008030, %dec_label_pc_1000804c
  %v1_10008054 = phi i32 [ 0, %dec_label_pc_10008030 ], [ %v1_10008054.pre, %dec_label_pc_1000804c ]
  %v0_10008058 = phi i32 [ 0, %dec_label_pc_10008030 ], [ %v4_1000804c, %dec_label_pc_1000804c ]
  %v4_10008054 = icmp eq i32 %v0_10008058, %v1_10008054
  %v1_10008058 = load i32, i32* @r31, align 4
  %v2_10008058 = sub i32 %v1_10008058, %v0_10008058
  store i32 %v2_10008058, i32* @r31, align 4
  br i1 %v4_10008054, label %dec_label_pc_10008060, label %dec_label_pc_100080ac

dec_label_pc_10008060:                            ; preds = %dec_label_pc_10008054, %dec_label_pc_1000801c
  %v0_10008078 = phi i32 [ %v2_10008058, %dec_label_pc_10008054 ], [ %v0_10008060.pre, %dec_label_pc_1000801c ]
  %v3_10008060 = icmp eq i32 %v0_10008078, 0
  store i32 %v2_10007f10, i32* @r29, align 4
  store i32 %v2_10007e30, i32* @r4, align 4
  store i32 %v2_10007e34, i32* @r6, align 4
  store i32 %v2_10007f10, i32* @r3, align 4
  store i32 %v0_10008078, i32* @r5, align 4
  br i1 %v3_10008060, label %dec_label_pc_10008080, label %dec_label_pc_10008028

dec_label_pc_10008080:                            ; preds = %dec_label_pc_10008060, %dec_label_pc_10008010.thread, %dec_label_pc_10008010
  %v0_10008080 = load i32, i32* %r24.global-to-local, align 4
  %v0_10008088 = load i32, i32* @r28, align 4
  store i32 268468368, i32* @lr, align 4
  %v4_1000808c = call i32 @_charpad(i32 %v0_10008080, i8 32, i32 %v0_10008088)
  %v1_10008090 = load i32, i32* @r28, align 4
  %v4_10008090 = icmp eq i32 %v4_1000808c, %v1_10008090
  br i1 %v4_10008090, label %dec_label_pc_10008098, label %dec_label_pc_100080ac

dec_label_pc_10008098:                            ; preds = %dec_label_pc_10008080, %dec_label_pc_10007de8, %dec_label_pc_10007bbc
  %stack_var_-184.2 = phi i32 [ %v0_10007cf0, %dec_label_pc_10007bbc ], [ %stack_var_-184.1, %dec_label_pc_10008080 ], [ %v0_10007cf0, %dec_label_pc_10007de8 ]
  %v3_10008098 = load i8*, i8** %stack_var_-200, align 4
  %v4_10008098 = ptrtoint i8* %v3_10008098 to i32
  store i32 %v4_10008098, i32* @r29, align 4
  br label %dec_label_pc_1000809c

dec_label_pc_1000809c:                            ; preds = %dec_label_pc_10007ab0, %dec_label_pc_10008098
  %v0_1000809c = phi i32 [ %v0_1000809c.pre, %dec_label_pc_10007ab0 ], [ %v4_10008098, %dec_label_pc_10008098 ]
  %v0_10007cf0 = phi i32 [ %tmp56, %dec_label_pc_10007ab0 ], [ %stack_var_-184.2, %dec_label_pc_10008098 ]
  br label %dec_label_pc_10007ac8

dec_label_pc_100080ac:                            ; preds = %dec_label_pc_10007f04, %dec_label_pc_10008080, %dec_label_pc_10008010, %dec_label_pc_10007fbc, %dec_label_pc_10007fa0, %dec_label_pc_10007e60, %dec_label_pc_10007e30, %dec_label_pc_10007dc4, %dec_label_pc_10007b04, %dec_label_pc_10008054
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_100080b0

dec_label_pc_100080b0:                            ; preds = %dec_label_pc_10007b10, %dec_label_pc_10007a88, %dec_label_pc_10007aa0, %dec_label_pc_100080ac
  store i32 %v0_10007a5c, i32* %r0.global-to-local, align 4
  %v0_100080b4 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_100080b4

; uselistorder directives
  uselistorder i32 %v0_10007cf0, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_10008078, { 1, 2, 0 }
  uselistorder i32 %v1_10007f8c, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_10007f1c, { 1, 0 }
  uselistorder i32 %v2_10007eac, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10007e0c, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10007cf0, { 1, 0 }
  uselistorder i32 %v6_10007ca8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10007c8c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10007c78, { 1, 0 }
  uselistorder i32 %v1_10007c1c, { 1, 0 }
  uselistorder i1 %v2_10007c10, { 1, 0 }
  uselistorder i32 %v0_10007bc0, { 1, 0, 2 }
  uselistorder i32 %v1_10007bac, { 1, 0 }
  uselistorder i32 %v0_10007ba4, { 1, 0 }
  uselistorder i32 %v1_10007ba0, { 1, 0 }
  uselistorder i32 %v1_10007b1c, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10007ae4, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10007af4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10007f10, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_10007b58, { 1, 2, 0 }
  uselistorder i32 %v4_10007b50, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 6, 7, 5 }
  uselistorder i32* %r10.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 37, 36, 30, 31, 32, 33, 34, 35 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 2, 5, 1 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i8 32, { 2, 1, 3, 0, 4 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 5, { 1, 5, 6, 13, 14, 7, 8, 9, 2, 3, 10, 0, 11, 12, 4 }
  uselistorder i8 10, { 2, 3, 4, 0, 1, 5, 6, 7 }
  uselistorder i32 15, { 3, 0, 4, 5, 6, 1, 7, 2 }
  uselistorder label %dec_label_pc_100080b0, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_100080ac, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000809c, { 1, 0 }
  uselistorder label %dec_label_pc_10008080, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10008054, { 1, 0 }
  uselistorder label %dec_label_pc_10008030, { 1, 0 }
  uselistorder label %dec_label_pc_10007fbc, { 1, 0 }
  uselistorder label %dec_label_pc_10007f94, { 1, 0 }
  uselistorder label %dec_label_pc_10007f7c, { 1, 0 }
  uselistorder label %dec_label_pc_10007f68, { 1, 0 }
  uselistorder label %dec_label_pc_10007f48, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10007f48thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10007f3c, { 1, 0 }
  uselistorder label %dec_label_pc_10007ecc, { 1, 0 }
  uselistorder label %dec_label_pc_10007eb8, { 1, 0 }
  uselistorder label %dec_label_pc_10007e30, { 1, 0 }
  uselistorder label %dec_label_pc_10007d80, { 1, 0 }
  uselistorder label %dec_label_pc_10007d68, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_10007d18, { 1, 0 }
  uselistorder label %dec_label_pc_10007cfc, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10007c88, { 1, 0 }
  uselistorder label %dec_label_pc_10007c6c, { 1, 0 }
  uselistorder label %dec_label_pc_10007c58, { 1, 0 }
  uselistorder label %dec_label_pc_10007c54, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007c28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007bb0, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10007b9c.dec_label_pc_10007b9c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10007b74, { 1, 0 }
  uselistorder label %dec_label_pc_10007b10, { 1, 0 }
  uselistorder label %dec_label_pc_10007b04, { 1, 0 }
  uselistorder label %dec_label_pc_10007ac8, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_100080cc = load i32, i32* @lr, align 4
  store i32 %v0_100080cc, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_100080dc = load i32, i32* @r4, align 4
  store i32 %v0_100080dc, i32* @r30, align 4
  store i32 268468460, i32* @lr, align 4
  %v3_100080e8 = call i32 @__GI_memset(i32 0, i32 160, i32 160)
  %v0_100080ec = load i32, i32* @r31, align 4
  %v1_100080ec = add i32 %v0_100080ec, 24
  %v2_100080ec = inttoptr i32 %v1_100080ec to i32*
  %v3_100080ec = load i32, i32* %v2_100080ec, align 4
  store i32 %v3_100080ec, i32* %r9.global-to-local, align 4
  store i32 9, i32* %r11.global-to-local, align 4
  %v0_100080f4 = load i32, i32* @r30, align 4
  %v2_100080f4 = inttoptr i32 %v0_100080ec to i32*
  store i32 %v0_100080f4, i32* %v2_100080f4, align 4
  %v0_100080f8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100080f8, i32* %ctr.global-to-local, align 4
  %v0_100080fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100080fc = add i32 %v0_100080fc, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10008104 = load i32, i32* @r31, align 4
  %v2_10008104 = add i32 %v1_10008104, 24
  %v3_10008104 = inttoptr i32 %v2_10008104 to i32*
  store i32 %v1_100080fc, i32* %v3_10008104, align 4
  %v0_10008108 = load i32, i32* @r31, align 4
  %v1_10008108 = add i32 %v0_10008108, 40
  store i32 %v1_10008108, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000810c

dec_label_pc_1000810c:                            ; preds = %dec_label_pc_1000810c, %entry
  %v1_1000810c = phi i32 [ %v1_10008110, %dec_label_pc_1000810c ], [ %v1_10008108, %entry ]
  %v0_1000810c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000810c = inttoptr i32 %v1_1000810c to i32*
  store i32 %v0_1000810c, i32* %v2_1000810c, align 4
  %v0_10008110 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008110 = add i32 %v0_10008110, 4
  store i32 %v1_10008110, i32* %r9.global-to-local, align 4
  %v0_10008114 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008114 = add i32 %v0_10008114, -1
  store i32 %v1_10008114, i32* %ctr.global-to-local, align 4
  %v2_10008114 = icmp eq i32 %v1_10008114, 0
  br i1 %v2_10008114, label %dec_label_pc_10008118, label %dec_label_pc_1000810c

dec_label_pc_10008118:                            ; preds = %dec_label_pc_1000810c
  %v0_10008118 = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008158

dec_label_pc_10008128:                            ; preds = %dec_label_pc_10008158
  %v3_10008160 = icmp eq i8 %v2_10008158, 37
  br i1 %v3_10008160, label %dec_label_pc_1000812c, label %dec_label_pc_10008154

dec_label_pc_1000812c:                            ; preds = %dec_label_pc_10008128
  %v1_1000812c = add i32 %v0_1000812c, 1
  %v2_1000812c = inttoptr i32 %v1_1000812c to i8*
  %v3_1000812c = load i8, i8* %v2_1000812c, align 1
  %v4_1000812c = zext i8 %v3_1000812c to i32
  store i32 %v4_1000812c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000812c, i32* %r9.global-to-local, align 4
  %v3_10008134 = icmp eq i8 %v3_1000812c, 37
  br i1 %v3_10008134, label %dec_label_pc_10008154, label %dec_label_pc_1000813c

dec_label_pc_1000813c:                            ; preds = %dec_label_pc_1000812c
  %v0_10008130 = load i32, i32* @r31, align 4
  %v2_1000813c = inttoptr i32 %v0_10008130 to i32*
  store i32 %v1_1000812c, i32* %v2_1000813c, align 4
  store i32 268468548, i32* @lr, align 4
  %v1_10008140 = load i32, i32* %r9.global-to-local, align 4
  %v3_10008140 = call i32 @_ppfs_parsespec(i32* %v2_1000813c, i32 %v1_10008140)
  %v1_10008144 = icmp slt i32 %v3_10008140, 0
  br i1 %v1_10008144, label %dec_label_pc_10008170, label %dec_label_pc_1000814c

dec_label_pc_1000814c:                            ; preds = %dec_label_pc_1000813c
  %v0_1000814c = load i32, i32* @r31, align 4
  %v1_1000814c = inttoptr i32 %v0_1000814c to i32*
  %v2_1000814c = load i32, i32* %v1_1000814c, align 4
  br label %dec_label_pc_10008158

dec_label_pc_10008154:                            ; preds = %dec_label_pc_10008128, %dec_label_pc_1000812c
  %v0_10008154 = phi i32 [ %v0_1000812c, %dec_label_pc_10008128 ], [ %v1_1000812c, %dec_label_pc_1000812c ]
  %v1_10008154 = add i32 %v0_10008154, 1
  br label %dec_label_pc_10008158

dec_label_pc_10008158:                            ; preds = %dec_label_pc_1000814c, %dec_label_pc_10008154, %dec_label_pc_10008118
  %v0_1000812c = phi i32 [ %v0_10008118, %dec_label_pc_10008118 ], [ %v1_10008154, %dec_label_pc_10008154 ], [ %v2_1000814c, %dec_label_pc_1000814c ]
  store i32 %v0_1000812c, i32* %r9.global-to-local, align 4
  %v1_10008158 = inttoptr i32 %v0_1000812c to i8*
  %v2_10008158 = load i8, i8* %v1_10008158, align 1
  %v3_10008158 = zext i8 %v2_10008158 to i32
  store i32 %v3_10008158, i32* %r0.global-to-local, align 4
  %v3_1000815c = icmp eq i8 %v2_10008158, 0
  br i1 %v3_1000815c, label %dec_label_pc_10008168, label %dec_label_pc_10008128

dec_label_pc_10008168:                            ; preds = %dec_label_pc_10008158
  %v0_10008168 = load i32, i32* @r30, align 4
  %v1_10008168 = load i32, i32* @r31, align 4
  %v2_10008168 = inttoptr i32 %v1_10008168 to i32*
  store i32 %v0_10008168, i32* %v2_10008168, align 4
  br label %dec_label_pc_10008170

dec_label_pc_10008170:                            ; preds = %dec_label_pc_1000813c, %dec_label_pc_10008168
  %storemerge = phi i32 [ 0, %dec_label_pc_10008168 ], [ -1, %dec_label_pc_1000813c ]
  store i32 %v0_100080cc, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_10008158, { 1, 2, 0 }
  uselistorder i32 %v0_1000812c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10008114, { 1, 0 }
  uselistorder i32 %v1_10008110, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_10008170, { 1, 0 }
  uselistorder label %dec_label_pc_10008158, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008154, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10008184 = load i32, i32* @lr, align 4
  %v0_1000818c = load i32, i32* @r3, align 4
  store i32 %v0_1000818c, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100081a8 = add i32 %v0_1000818c, 24
  %v2_100081a8 = inttoptr i32 %v1_100081a8 to i32*
  %v3_100081a8 = load i32, i32* %v2_100081a8, align 4
  store i32 %v3_100081a8, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_100081a8, 1
  br i1 %tmp4, label %dec_label_pc_100081cc, label %dec_label_pc_100081b4

dec_label_pc_100081b4:                            ; preds = %entry
  %v2_100081b4 = add i32 %v0_1000818c, 8
  %v3_100081b4 = inttoptr i32 %v2_100081b4 to i32*
  store i32 0, i32* %v3_100081b4, align 4
  %v0_100081b8 = load i32, i32* @r30, align 4
  %v1_100081b8 = load i32, i32* @r3, align 4
  %v2_100081b8 = add i32 %v1_100081b8, 28
  %v3_100081b8 = inttoptr i32 %v2_100081b8 to i32*
  store i32 %v0_100081b8, i32* %v3_100081b8, align 4
  %v0_100081bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100081bc = load i32, i32* @r3, align 4
  %v2_100081bc = add i32 %v1_100081bc, 24
  %v3_100081bc = inttoptr i32 %v2_100081bc to i32*
  store i32 %v0_100081bc, i32* %v3_100081bc, align 4
  %v0_100081c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100081c0 = load i32, i32* @r3, align 4
  %v2_100081c0 = add i32 %v1_100081c0, 4
  %v3_100081c0 = inttoptr i32 %v2_100081c0 to i32*
  store i32 %v0_100081c0, i32* %v3_100081c0, align 4
  store i32 268468680, i32* @lr, align 4
  %v0_100081c4 = call i32 @_ppfs_setargs()
  store i32 %v0_100081c4, i32* %r3.global-to-local, align 4
  %v0_100081c8 = load i32, i32* @r30, align 4
  %v1_100081c8 = load i32, i32* @r31, align 4
  %v2_100081c8 = add i32 %v1_100081c8, 24
  %v3_100081c8 = inttoptr i32 %v2_100081c8 to i32*
  store i32 %v0_100081c8, i32* %v3_100081c8, align 4
  %v0_100081dc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100081cc

dec_label_pc_100081cc:                            ; preds = %entry, %dec_label_pc_100081b4
  %v0_100081dc = phi i32 [ %v0_1000818c, %entry ], [ %v0_100081dc.pre, %dec_label_pc_100081b4 ]
  store i32 %v0_10008184, i32* %r0.global-to-local, align 4
  ret i32 %v0_100081dc

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_100081cc, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100081e0 = load i32, i32* @r3, align 4
  %v1_100081e0 = add i32 %v0_100081e0, 24
  %v2_100081e0 = inttoptr i32 %v1_100081e0 to i32*
  %v3_100081e0 = load i32, i32* %v2_100081e0, align 4
  store i32 %v3_100081e0, i32* %r0.global-to-local, align 4
  %v1_100081e4 = add i32 %v0_100081e0, 88
  store i32 %v1_100081e4, i32* %r8.global-to-local, align 4
  %v1_100081e8 = add i32 %v0_100081e0, 8
  %v2_100081e8 = inttoptr i32 %v1_100081e8 to i32*
  %v3_100081e8 = load i32, i32* %v2_100081e8, align 4
  store i32 %v3_100081e8, i32* %r9.global-to-local, align 4
  %v2_100081ec = icmp sgt i32 %v3_100081e0, 0
  %v3_100081ec = icmp eq i32 %v3_100081e0, 0
  store i1 %v2_100081ec, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_100081ec, label %dec_label_pc_100081f4, label %dec_label_pc_100083e0

dec_label_pc_100081f4:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_100081f8 = icmp ne i32 %v3_100081e8, -2147483648
  %v4_100081f8 = icmp eq i32 %v3_100081e8, -2147483648
  store i1 %v3_100081f8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_100081f8, label %dec_label_pc_10008200, label %dec_label_pc_10008240

dec_label_pc_10008200:                            ; preds = %dec_label_pc_100081f4
  %v1_10008200 = add i32 %v0_100081e0, 76
  %v2_10008200 = inttoptr i32 %v1_10008200 to i8*
  %v3_10008200 = load i8, i8* %v2_10008200, align 1
  %v4_10008200 = zext i8 %v3_10008200 to i32
  store i32 %v4_10008200, i32* %r10.global-to-local, align 4
  store i32 %v1_10008200, i32* %r11.global-to-local, align 4
  %v2_10008208 = icmp ugt i8 %v3_10008200, 8
  store i1 %v2_10008208, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_10008200, 7
  br i1 %tmp, label %dec_label_pc_10008228, label %dec_label_pc_10008210

dec_label_pc_10008210:                            ; preds = %dec_label_pc_10008200
  %v1_10008210 = add i32 %v0_100081e0, 84
  %v2_10008210 = inttoptr i32 %v1_10008210 to i32*
  %v3_10008210 = load i32, i32* %v2_10008210, align 4
  %v1_10008214 = mul nuw nsw i32 %v4_10008200, 4
  %v2_10008218 = add i32 %v3_10008210, %v1_10008214
  store i32 %v2_10008218, i32* %r9.global-to-local, align 4
  %v1_1000821c = add nuw nsw i32 %v4_10008200, 1
  store i32 %v1_1000821c, i32* %r0.global-to-local, align 4
  %v1_10008220 = trunc i32 %v1_1000821c to i8
  store i8 %v1_10008220, i8* %v2_10008200, align 1
  br label %dec_label_pc_10008234

dec_label_pc_10008228:                            ; preds = %dec_label_pc_10008200
  %v1_10008228 = add i32 %v0_100081e0, 80
  %v2_10008228 = inttoptr i32 %v1_10008228 to i32*
  %v3_10008228 = load i32, i32* %v2_10008228, align 4
  store i32 %v3_10008228, i32* %r9.global-to-local, align 4
  %v1_1000822c = add i32 %v3_10008228, 4
  store i32 %v1_1000822c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000822c, i32* %v2_10008228, align 4
  br label %dec_label_pc_10008234

dec_label_pc_10008234:                            ; preds = %dec_label_pc_10008210, %dec_label_pc_10008228
  %v0_10008234 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008234 = inttoptr i32 %v0_10008234 to i32*
  %v2_10008234 = load i32, i32* %v1_10008234, align 4
  store i32 %v2_10008234, i32* %r0.global-to-local, align 4
  %v1_10008238 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008238 = inttoptr i32 %v1_10008238 to i32*
  store i32 %v2_10008234, i32* %v2_10008238, align 4
  %v0_1000823c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000823c = load i32, i32* @r3, align 4
  %v2_1000823c = add i32 %v1_1000823c, 8
  %v3_1000823c = inttoptr i32 %v2_1000823c to i32*
  store i32 %v0_1000823c, i32* %v3_1000823c, align 4
  %v0_10008240.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008240

dec_label_pc_10008240:                            ; preds = %dec_label_pc_100081f4, %dec_label_pc_10008234
  %v2_10008270 = phi i32 [ %v0_100081e0, %dec_label_pc_100081f4 ], [ %v0_10008240.pre, %dec_label_pc_10008234 ]
  %v1_10008240 = add i32 %v2_10008270, 4
  %v2_10008240 = inttoptr i32 %v1_10008240 to i32*
  %v3_10008240 = load i32, i32* %v2_10008240, align 4
  store i32 %v3_10008240, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_10008248 = icmp ne i32 %v3_10008240, -2147483648
  %v4_10008248 = icmp eq i32 %v3_10008240, -2147483648
  store i1 %v3_10008248, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10008248, label %dec_label_pc_10008250, label %dec_label_pc_100083d0.preheader

dec_label_pc_10008250:                            ; preds = %dec_label_pc_10008240
  %v1_10008250 = add i32 %v2_10008270, 76
  %v2_10008250 = inttoptr i32 %v1_10008250 to i8*
  %v3_10008250 = load i8, i8* %v2_10008250, align 1
  %v4_10008250 = zext i8 %v3_10008250 to i32
  store i32 %v4_10008250, i32* %r10.global-to-local, align 4
  store i32 %v1_10008250, i32* %r11.global-to-local, align 4
  %v2_10008258 = icmp ugt i8 %v3_10008250, 8
  store i1 %v2_10008258, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_10008250, 7
  br i1 %tmp22, label %dec_label_pc_10008278, label %dec_label_pc_10008260

dec_label_pc_10008260:                            ; preds = %dec_label_pc_10008250
  %v1_10008260 = add i32 %v2_10008270, 84
  %v2_10008260 = inttoptr i32 %v1_10008260 to i32*
  %v3_10008260 = load i32, i32* %v2_10008260, align 4
  %v1_10008264 = mul nuw nsw i32 %v4_10008250, 4
  %v2_10008268 = add i32 %v3_10008260, %v1_10008264
  store i32 %v2_10008268, i32* %r9.global-to-local, align 4
  %v1_1000826c = add nuw nsw i32 %v4_10008250, 1
  store i32 %v1_1000826c, i32* %r0.global-to-local, align 4
  %v1_10008270 = trunc i32 %v1_1000826c to i8
  store i8 %v1_10008270, i8* %v2_10008250, align 1
  br label %dec_label_pc_10008284

dec_label_pc_10008278:                            ; preds = %dec_label_pc_10008250
  %v1_10008278 = add i32 %v2_10008270, 80
  %v2_10008278 = inttoptr i32 %v1_10008278 to i32*
  %v3_10008278 = load i32, i32* %v2_10008278, align 4
  store i32 %v3_10008278, i32* %r9.global-to-local, align 4
  %v1_1000827c = add i32 %v3_10008278, 4
  store i32 %v1_1000827c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000827c, i32* %v2_10008278, align 4
  br label %dec_label_pc_10008284

dec_label_pc_10008284:                            ; preds = %dec_label_pc_10008260, %dec_label_pc_10008278
  %v0_10008284 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008284 = inttoptr i32 %v0_10008284 to i32*
  %v2_10008284 = load i32, i32* %v1_10008284, align 4
  store i32 %v2_10008284, i32* %r0.global-to-local, align 4
  %v1_10008288 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008288 = inttoptr i32 %v1_10008288 to i32*
  store i32 %v2_10008284, i32* %v2_10008288, align 4
  %v0_1000828c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000828c = load i32, i32* @r3, align 4
  %v2_1000828c = add i32 %v1_1000828c, 4
  %v3_1000828c = inttoptr i32 %v2_1000828c to i32*
  store i32 %v0_1000828c, i32* %v3_1000828c, align 4
  %v0_100083d05.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100083d0.preheader

dec_label_pc_100083d0.preheader:                  ; preds = %dec_label_pc_10008240, %dec_label_pc_10008284
  %v0_100083d05 = phi i32 [ %v2_10008270, %dec_label_pc_10008240 ], [ %v0_100083d05.pre, %dec_label_pc_10008284 ]
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_100083d06 = add i32 %v0_100083d05, 28
  %v2_100083d07 = inttoptr i32 %v1_100083d06 to i32*
  %v3_100083d08 = load i32, i32* %v2_100083d07, align 4
  store i32 %v3_100083d08, i32* %r0.global-to-local, align 4
  %v2_100083d49 = icmp sgt i32 %v3_100083d08, 0
  %v3_100083d410 = icmp slt i32 %v3_100083d08, 0
  store i1 %v3_100083d410, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_100083d49, label %dec_label_pc_10008298, label %dec_label_pc_10008420

dec_label_pc_10008298:                            ; preds = %dec_label_pc_100083d0.preheader, %dec_label_pc_100083cc
  %v2_100083ac = phi i32 [ %v0_100083d0, %dec_label_pc_100083cc ], [ %v0_100083d05, %dec_label_pc_100083d0.preheader ]
  %v0_10008298 = phi i32 [ %v1_100083cc, %dec_label_pc_100083cc ], [ 0, %dec_label_pc_100083d0.preheader ]
  %v1_10008298 = mul i32 %v0_10008298, 4
  %v2_1000829c = add i32 %v1_10008298, %v2_100083ac
  store i32 %v2_1000829c, i32* %r9.global-to-local, align 4
  %v1_100082a0 = add i32 %v2_1000829c, 40
  %v2_100082a0 = inttoptr i32 %v1_100082a0 to i32*
  %v3_100082a0 = load i32, i32* %v2_100082a0, align 4
  store i32 %v3_100082a0, i32* %r0.global-to-local, align 4
  %v2_100082a4 = icmp sgt i32 %v3_100082a0, 8
  %v3_100082a4 = icmp eq i32 %v3_100082a0, 8
  store i1 %v2_100082a4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_100082a4, label %dec_label_pc_100083cc, label %dec_label_pc_100082ac

dec_label_pc_100082ac:                            ; preds = %dec_label_pc_10008298
  %v1_100082ac = add i32 %v2_100083ac, 76
  store i32 %v1_100082ac, i32* %r10.global-to-local, align 4
  br i1 %v2_100082a4, label %dec_label_pc_100082c8, label %dec_label_pc_100082b4

dec_label_pc_100082b4:                            ; preds = %dec_label_pc_100082ac
  %v2_100082b4 = icmp sgt i32 %v3_100082a0, 2
  store i1 %v2_100082b4, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_100082a0, 3
  br i1 %tmp23, label %dec_label_pc_10008390, label %dec_label_pc_100082e0

dec_label_pc_100082c8:                            ; preds = %dec_label_pc_100082ac
  %v2_100082c8 = icmp sgt i32 %v3_100082a0, 1024
  store i1 %v2_100082c8, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_100082a0, 1025
  br i1 %tmp24, label %dec_label_pc_10008390, label %dec_label_pc_100082d4

dec_label_pc_100082d4:                            ; preds = %dec_label_pc_100082c8
  %v2_100082d4 = icmp sgt i32 %v3_100082a0, 2048
  %v3_100082d4 = icmp eq i32 %v3_100082a0, 2048
  store i1 %v2_100082d4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_100082d4, label %dec_label_pc_100082e8, label %dec_label_pc_100082dc

dec_label_pc_100082dc:                            ; preds = %dec_label_pc_100082d4
  %v2_100082dc = icmp sgt i32 %v3_100082a0, 2055
  %v3_100082dc = icmp eq i32 %v3_100082a0, 2055
  store i1 %v2_100082dc, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_100082dc, label %dec_label_pc_10008344, label %dec_label_pc_10008390

dec_label_pc_100082e0:                            ; preds = %dec_label_pc_100082b4
  %v3_100082c0 = icmp eq i32 %v3_100082a0, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_100082c0, label %dec_label_pc_10008344, label %dec_label_pc_10008390

dec_label_pc_100082e8:                            ; preds = %dec_label_pc_100082d4
  %v2_100082e8 = inttoptr i32 %v1_100082ac to i8*
  %v3_100082e8 = load i8, i8* %v2_100082e8, align 1
  %v4_100082e8 = zext i8 %v3_100082e8 to i32
  %v2_100082ec = icmp ugt i8 %v3_100082e8, 6
  store i1 %v2_100082ec, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_100082e8, 2
  %v1_100082f0 = zext i8 %tmp28 to i32
  store i32 %v1_100082f0, i32* %r9.global-to-local, align 4
  %v2_100082f4 = add nuw nsw i32 %v1_100082f0, %v4_100082e8
  store i32 %v2_100082f4, i32* %r0.global-to-local, align 4
  %v1_100082f8 = trunc i32 %v2_100082f4 to i8
  store i8 %v1_100082f8, i8* %v2_100082e8, align 1
  %v0_100082fc = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_100082fc, label %dec_label_pc_1000831c, label %dec_label_pc_10008300

dec_label_pc_10008300:                            ; preds = %dec_label_pc_100082e8
  %v0_10008300 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008300 = urem i32 %v0_10008300, 256
  store i32 %v1_10008300, i32* %r9.global-to-local, align 4
  %v0_10008304 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008304 = add i32 %v0_10008304, 8
  %v2_10008304 = inttoptr i32 %v1_10008304 to i32*
  %v3_10008304 = load i32, i32* %v2_10008304, align 4
  %v1_10008308 = mul nuw nsw i32 %v1_10008300, 4
  store i32 %v1_10008308, i32* %r0.global-to-local, align 4
  %v1_1000830c = add nuw nsw i32 %v1_10008300, 2
  store i32 %v1_1000830c, i32* %r9.global-to-local, align 4
  %v2_10008310 = add i32 %v3_10008304, %v1_10008308
  store i32 %v2_10008310, i32* %r11.global-to-local, align 4
  %v1_10008314 = trunc i32 %v1_1000830c to i8
  %v2_10008314 = load i32, i32* @r3, align 4
  %v3_10008314 = add i32 %v2_10008314, 76
  %v4_10008314 = inttoptr i32 %v3_10008314 to i8*
  store i8 %v1_10008314, i8* %v4_10008314, align 1
  br label %dec_label_pc_10008330

dec_label_pc_1000831c:                            ; preds = %dec_label_pc_100082e8
  %v0_1000831c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000831c = add i32 %v0_1000831c, 4
  %v2_1000831c = inttoptr i32 %v1_1000831c to i32*
  %v3_1000831c = load i32, i32* %v2_1000831c, align 4
  %v1_10008320 = add i32 %v3_1000831c, 7
  store i32 %v1_10008320, i32* %r9.global-to-local, align 4
  %v1_10008324 = call i32 @__asm_rlwinm(i32 %v1_10008320, i32 0, i32 0, i32 28)
  store i32 %v1_10008324, i32* %r11.global-to-local, align 4
  %v1_10008328 = add i32 %v1_10008324, 8
  store i32 %v1_10008328, i32* %r0.global-to-local, align 4
  %v1_1000832c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000832c = add i32 %v1_1000832c, 4
  %v3_1000832c = inttoptr i32 %v2_1000832c to i32*
  store i32 %v1_10008328, i32* %v3_1000832c, align 4
  br label %dec_label_pc_10008330

dec_label_pc_10008330:                            ; preds = %dec_label_pc_10008300, %dec_label_pc_1000831c
  %v0_10008330 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008330 = inttoptr i32 %v0_10008330 to i32*
  %v2_10008330 = load i32, i32* %v1_10008330, align 4
  store i32 %v2_10008330, i32* %r9.global-to-local, align 4
  %v1_10008334 = add i32 %v0_10008330, 4
  %v2_10008334 = inttoptr i32 %v1_10008334 to i32*
  %v3_10008334 = load i32, i32* %v2_10008334, align 4
  store i32 %v3_10008334, i32* %r10.global-to-local, align 4
  %v1_10008338 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008338 = inttoptr i32 %v1_10008338 to i32*
  store i32 %v2_10008330, i32* %v2_10008338, align 4
  %v0_1000833c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000833c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000833c = add i32 %v1_1000833c, 4
  %v3_1000833c = inttoptr i32 %v2_1000833c to i32*
  store i32 %v0_1000833c, i32* %v3_1000833c, align 4
  br label %dec_label_pc_100083c8

dec_label_pc_10008344:                            ; preds = %dec_label_pc_100082dc, %dec_label_pc_100082e0
  store i32 %v1_100082ac, i32* %r10.global-to-local, align 4
  %v1_10008348 = add i32 %v2_100083ac, 77
  %v2_10008348 = inttoptr i32 %v1_10008348 to i8*
  %v3_10008348 = load i8, i8* %v2_10008348, align 1
  %v4_10008348 = zext i8 %v3_10008348 to i32
  store i32 %v4_10008348, i32* %r11.global-to-local, align 4
  %v2_1000834c = icmp ugt i8 %v3_10008348, 8
  store i1 %v2_1000834c, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_10008348, 7
  br i1 %tmp25, label %dec_label_pc_10008370, label %dec_label_pc_10008354

dec_label_pc_10008354:                            ; preds = %dec_label_pc_10008344
  %v1_10008354 = add i32 %v2_100083ac, 84
  %v2_10008354 = inttoptr i32 %v1_10008354 to i32*
  %v3_10008354 = load i32, i32* %v2_10008354, align 4
  %v1_10008358 = mul nuw nsw i32 %v4_10008348, 8
  %v1_1000835c = add nuw nsw i32 %v1_10008358, 32
  %v2_10008360 = add i32 %v1_1000835c, %v3_10008354
  store i32 %v2_10008360, i32* %r9.global-to-local, align 4
  %v1_10008364 = add nuw nsw i32 %v4_10008348, 1
  store i32 %v1_10008364, i32* %r0.global-to-local, align 4
  %v1_10008368 = trunc i32 %v1_10008364 to i8
  store i8 %v1_10008368, i8* %v2_10008348, align 1
  br label %dec_label_pc_100083c8

dec_label_pc_10008370:                            ; preds = %dec_label_pc_10008344
  %v1_10008370 = add i32 %v2_100083ac, 80
  %v2_10008370 = inttoptr i32 %v1_10008370 to i32*
  %v3_10008370 = load i32, i32* %v2_10008370, align 4
  %v1_10008374 = add i32 %v3_10008370, 7
  store i32 %v1_10008374, i32* %r9.global-to-local, align 4
  %v1_10008378 = call i32 @__asm_rlwinm(i32 %v1_10008374, i32 0, i32 0, i32 28)
  store i32 %v1_10008378, i32* %r9.global-to-local, align 4
  %v1_1000837c = add i32 %v1_10008378, 8
  store i32 %v1_1000837c, i32* %r0.global-to-local, align 4
  %v1_10008380 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008380 = add i32 %v1_10008380, 4
  %v3_10008380 = inttoptr i32 %v2_10008380 to i32*
  store i32 %v1_1000837c, i32* %v3_10008380, align 4
  br label %dec_label_pc_100083c8

dec_label_pc_10008390:                            ; preds = %dec_label_pc_100082dc, %dec_label_pc_100082e0, %dec_label_pc_100082c8, %dec_label_pc_100082b4
  %v2_10008390 = inttoptr i32 %v1_100082ac to i8*
  %v3_10008390 = load i8, i8* %v2_10008390, align 1
  %v4_10008390 = zext i8 %v3_10008390 to i32
  store i32 %v4_10008390, i32* %r11.global-to-local, align 4
  %v2_10008394 = icmp ugt i8 %v3_10008390, 8
  store i1 %v2_10008394, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_10008390, 7
  br i1 %tmp26, label %dec_label_pc_100083b4, label %dec_label_pc_1000839c

dec_label_pc_1000839c:                            ; preds = %dec_label_pc_10008390
  %v1_1000839c = add i32 %v2_100083ac, 84
  %v2_1000839c = inttoptr i32 %v1_1000839c to i32*
  %v3_1000839c = load i32, i32* %v2_1000839c, align 4
  %v1_100083a0 = mul nuw nsw i32 %v4_10008390, 4
  %v2_100083a4 = add i32 %v3_1000839c, %v1_100083a0
  store i32 %v2_100083a4, i32* %r9.global-to-local, align 4
  %v1_100083a8 = add nuw nsw i32 %v4_10008390, 1
  store i32 %v1_100083a8, i32* %r0.global-to-local, align 4
  %v1_100083ac = trunc i32 %v1_100083a8 to i8
  store i8 %v1_100083ac, i8* %v2_10008390, align 1
  br label %dec_label_pc_100083c0

dec_label_pc_100083b4:                            ; preds = %dec_label_pc_10008390
  %v1_100083b4 = add i32 %v2_100083ac, 80
  %v2_100083b4 = inttoptr i32 %v1_100083b4 to i32*
  %v3_100083b4 = load i32, i32* %v2_100083b4, align 4
  store i32 %v3_100083b4, i32* %r9.global-to-local, align 4
  %v1_100083b8 = add i32 %v3_100083b4, 4
  store i32 %v1_100083b8, i32* %r0.global-to-local, align 4
  store i32 %v1_100083b8, i32* %v2_100083b4, align 4
  br label %dec_label_pc_100083c0

dec_label_pc_100083c0:                            ; preds = %dec_label_pc_1000839c, %dec_label_pc_100083b4
  %v0_100083c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100083c0 = inttoptr i32 %v0_100083c0 to i32*
  %v2_100083c0 = load i32, i32* %v1_100083c0, align 4
  store i32 %v2_100083c0, i32* %r0.global-to-local, align 4
  %v1_100083c4 = load i32, i32* %r8.global-to-local, align 4
  %v2_100083c4 = inttoptr i32 %v1_100083c4 to i32*
  store i32 %v2_100083c0, i32* %v2_100083c4, align 4
  br label %dec_label_pc_100083c8

dec_label_pc_100083c8:                            ; preds = %dec_label_pc_10008370, %dec_label_pc_10008354, %dec_label_pc_10008330, %dec_label_pc_100083c0
  %v0_100083c8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100083c8 = add i32 %v0_100083c8, 8
  store i32 %v1_100083c8, i32* %r8.global-to-local, align 4
  %v0_100083cc.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_100083d0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100083cc

dec_label_pc_100083cc:                            ; preds = %dec_label_pc_10008298, %dec_label_pc_100083c8
  %v0_100083d0 = phi i32 [ %v2_100083ac, %dec_label_pc_10008298 ], [ %v0_100083d0.pre, %dec_label_pc_100083c8 ]
  %v0_100083cc = phi i32 [ %v0_10008298, %dec_label_pc_10008298 ], [ %v0_100083cc.pre, %dec_label_pc_100083c8 ]
  %v1_100083cc = add i32 %v0_100083cc, 1
  store i32 %v1_100083cc, i32* %r7.global-to-local, align 4
  %v1_100083d0 = add i32 %v0_100083d0, 28
  %v2_100083d0 = inttoptr i32 %v1_100083d0 to i32*
  %v3_100083d0 = load i32, i32* %v2_100083d0, align 4
  store i32 %v3_100083d0, i32* %r0.global-to-local, align 4
  %v2_100083d4 = icmp slt i32 %v1_100083cc, %v3_100083d0
  %v3_100083d4 = icmp sgt i32 %v1_100083cc, %v3_100083d0
  store i1 %v3_100083d4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_100083d4, label %dec_label_pc_10008298, label %dec_label_pc_10008420

dec_label_pc_100083e0:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_100083e4 = icmp ne i32 %v3_100081e8, -2147483648
  %v4_100083e4 = icmp eq i32 %v3_100081e8, -2147483648
  store i1 %v3_100083e4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_100083e4, label %dec_label_pc_100083ec, label %dec_label_pc_10008400

dec_label_pc_100083ec:                            ; preds = %dec_label_pc_100083e0
  %v1_100083ec = add i32 %v0_100081e0, 36
  %v2_100083ec = inttoptr i32 %v1_100083ec to i8*
  %v3_100083ec = load i8, i8* %v2_100083ec, align 1
  %v4_100083ec = zext i8 %v3_100083ec to i32
  %v1_100083f0 = mul nuw nsw i32 %v4_100083ec, 8
  %v2_100083f4 = add i32 %v1_100083f0, %v1_100081e4
  store i32 %v2_100083f4, i32* %r9.global-to-local, align 4
  %v1_100083f8 = add i32 %v2_100083f4, -8
  %v2_100083f8 = inttoptr i32 %v1_100083f8 to i32*
  %v3_100083f8 = load i32, i32* %v2_100083f8, align 4
  store i32 %v3_100083f8, i32* %r0.global-to-local, align 4
  store i32 %v3_100083f8, i32* %v2_100081e8, align 4
  %v0_10008400.pre = load i32, i32* @r3, align 4
  %v1_10008404.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008400

dec_label_pc_10008400:                            ; preds = %dec_label_pc_100083e0, %dec_label_pc_100083ec
  %v1_10008404 = phi i32 [ -2147483648, %dec_label_pc_100083e0 ], [ %v1_10008404.pre, %dec_label_pc_100083ec ]
  %v1_1000841c = phi i32 [ %v0_100081e0, %dec_label_pc_100083e0 ], [ %v0_10008400.pre, %dec_label_pc_100083ec ]
  %v1_10008400 = add i32 %v1_1000841c, 4
  %v2_10008400 = inttoptr i32 %v1_10008400 to i32*
  %v3_10008400 = load i32, i32* %v2_10008400, align 4
  store i32 %v3_10008400, i32* %r0.global-to-local, align 4
  %v3_10008404 = icmp sgt i32 %v3_10008400, %v1_10008404
  %v4_10008404 = icmp eq i32 %v3_10008400, %v1_10008404
  store i1 %v3_10008404, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10008404, label %dec_label_pc_1000840c, label %dec_label_pc_10008420

dec_label_pc_1000840c:                            ; preds = %dec_label_pc_10008400
  %v1_1000840c = add i32 %v1_1000841c, 37
  %v2_1000840c = inttoptr i32 %v1_1000840c to i8*
  %v3_1000840c = load i8, i8* %v2_1000840c, align 1
  %v4_1000840c = zext i8 %v3_1000840c to i32
  %v1_10008410 = mul nuw nsw i32 %v4_1000840c, 8
  %v1_10008414 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008414 = add i32 %v1_10008410, %v1_10008414
  store i32 %v2_10008414, i32* %r9.global-to-local, align 4
  %v1_10008418 = add i32 %v2_10008414, -8
  %v2_10008418 = inttoptr i32 %v1_10008418 to i32*
  %v3_10008418 = load i32, i32* %v2_10008418, align 4
  store i32 %v3_10008418, i32* %r0.global-to-local, align 4
  store i32 %v3_10008418, i32* %v2_10008400, align 4
  %v0_10008420.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008420

dec_label_pc_10008420:                            ; preds = %dec_label_pc_100083cc, %dec_label_pc_100083d0.preheader, %dec_label_pc_10008400, %dec_label_pc_1000840c
  %v0_10008420 = phi i32 [ %v1_1000841c, %dec_label_pc_10008400 ], [ %v0_10008420.pre, %dec_label_pc_1000840c ], [ %v0_100083d05, %dec_label_pc_100083d0.preheader ], [ %v0_100083d0, %dec_label_pc_100083cc ]
  %v1_10008420 = add i32 %v0_10008420, 8
  %v2_10008420 = inttoptr i32 %v1_10008420 to i32*
  %v3_10008420 = load i32, i32* %v2_10008420, align 4
  store i32 %v3_10008420, i32* %r11.global-to-local, align 4
  %v2_10008424 = icmp sgt i32 %v3_10008420, 0
  store i1 %v2_10008424, i1* %cr7_gt.global-to-local, align 1
  %v0_10008428 = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_10008420, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_10008428)
  %v0_1000842c = load i32, i32* @r3, align 4
  %v1_1000842c = add i32 %v0_1000842c, 16
  %v2_1000842c = inttoptr i32 %v1_1000842c to i32*
  %v3_1000842c = load i32, i32* %v2_1000842c, align 4
  store i32 %v3_1000842c, i32* %r0.global-to-local, align 4
  %v0_10008430 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008430 = sub i32 0, %v0_10008430
  store i32 %v1_10008430, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_10008438 = add i32 %v0_1000842c, 8
  %v3_10008438 = inttoptr i32 %v2_10008438 to i32*
  store i32 %v1_10008430, i32* %v3_10008438, align 4
  %v0_1000843c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000843c = or i32 %v0_1000843c, 8
  store i32 %v1_1000843c, i32* %r0.global-to-local, align 4
  %v0_10008440 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008440 = load i32, i32* @r3, align 4
  %v2_10008440 = add i32 %v1_10008440, 20
  %v3_10008440 = inttoptr i32 %v2_10008440 to i32*
  store i32 %v0_10008440, i32* %v3_10008440, align 4
  %v1_10008444 = call i32 @__asm_rlwinm(i32 %v1_1000843c, i32 0, i32 0, i32 30)
  store i32 %v1_10008444, i32* %r0.global-to-local, align 4
  %v1_10008448 = load i32, i32* @r3, align 4
  %v2_10008448 = add i32 %v1_10008448, 16
  %v3_10008448 = inttoptr i32 %v2_10008448 to i32*
  store i32 %v1_10008444, i32* %v3_10008448, align 4
  %v0_1000844c = load i32, i32* @r3, align 4
  ret i32 %v0_1000844c

; uselistorder directives
  uselistorder i32 %v3_10008400, { 1, 0, 2 }
  uselistorder i32 %v1_10008404, { 1, 0 }
  uselistorder i32 %v3_100083d0, { 1, 0, 2 }
  uselistorder i32 %v1_100083cc, { 2, 3, 1, 0 }
  uselistorder i32 %v0_100083d0, { 0, 2, 1 }
  uselistorder i32 %v4_10008348, { 1, 0, 2 }
  uselistorder i32 %v1_10008308, { 1, 0 }
  uselistorder i32 %v1_10008300, { 2, 0, 1 }
  uselistorder i32 %v1_100082ac, { 0, 2, 1, 3 }
  uselistorder i32 %v3_100082a0, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_10008298, { 1, 0 }
  uselistorder i32 %v2_100083ac, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_100083d05, { 1, 0, 2 }
  uselistorder i32 %v3_10008240, { 1, 0, 2 }
  uselistorder i32 %v2_10008270, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_100081e8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_100081e0, { 1, 0, 2 }
  uselistorder i32 %v0_100081e0, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 20, 21, 22, 23, 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 17, 16, 18, 19 }
  uselistorder i32* %r8.global-to-local, { 2, 8, 6, 7, 4, 5, 0, 1, 3 }
  uselistorder i32* %r11.global-to-local, { 7, 8, 9, 10, 11, 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 22, 23, 24, 25, 26, 27, 28, 9, 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 21, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cr7_gt.global-to-local, { 17, 18, 19, 9, 1, 2, 3, 4, 0, 15, 5, 6, 7, 8, 16, 10, 11, 12, 13, 14 }
  uselistorder i32 37, { 2, 0, 1 }
  uselistorder i32 -8, { 2, 3, 4, 5, 6, 1, 7, 0 }
  uselistorder i32 1025, { 0, 2, 3, 1, 4 }
  uselistorder i32 80, { 3, 2, 1, 0, 4, 5 }
  uselistorder i8 8, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10008420, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10008400, { 1, 0 }
  uselistorder label %dec_label_pc_100083cc, { 1, 0 }
  uselistorder label %dec_label_pc_100083c8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100083c0, { 1, 0 }
  uselistorder label %dec_label_pc_10008390, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10008344, { 1, 0 }
  uselistorder label %dec_label_pc_10008330, { 1, 0 }
  uselistorder label %dec_label_pc_10008298, { 1, 0 }
  uselistorder label %dec_label_pc_100083d0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10008284, { 1, 0 }
  uselistorder label %dec_label_pc_10008240, { 1, 0 }
  uselistorder label %dec_label_pc_10008234, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_1000845c

dec_label_pc_1000845c:                            ; preds = %dec_label_pc_1000845c, %entry
  %v0_1000845c = phi i32 [ ptrtoint (i32* @global_var_1000b034.163 to i32), %entry ], [ %v1_1000845c, %dec_label_pc_1000845c ]
  %v1_1000845c = add i32 %v0_1000845c, -2
  %v2_1000845c = inttoptr i32 %v1_1000845c to i16*
  %v3_1000845c = load i16, i16* %v2_1000845c, align 2
  %v4_1000845c = sext i16 %v3_1000845c to i32
  %v4_10008460 = icmp eq i32 %v4_1000845c, %arg1
  %v3_10008464.not = icmp ule i32 %v1_1000845c, ptrtoint (i32* @global_var_1000b01c.164 to i32)
  %brmerge = or i1 %v4_10008460, %v3_10008464.not
  br i1 %brmerge, label %dec_label_pc_10008470, label %dec_label_pc_1000845c

dec_label_pc_10008470:                            ; preds = %dec_label_pc_1000845c
  %v2_10008478 = sub i32 %v1_1000845c, ptrtoint (i32* @global_var_1000b01c.164 to i32)
  %v1_10008480 = udiv i32 %v2_10008478, 2
  %v2_10008480 = and i32 %v2_10008478, -2147483648
  %v3_10008480 = or i32 %v1_10008480, %v2_10008480
  %v2_10008488 = add i32 %v3_10008480, ptrtoint (i32* @global_var_1000b034.163 to i32)
  %v3_10008488 = inttoptr i32 %v2_10008488 to i8*
  %v4_10008488 = load i8, i8* %v3_10008488, align 1
  %v5_10008488 = zext i8 %v4_10008488 to i32
  ret i32 %v5_10008488

; uselistorder directives
  uselistorder i32 %v2_10008478, { 1, 0 }
  uselistorder i32 %v1_1000845c, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1000b01c.164 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000b034.163 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10008490 = load i32, i32* @lr, align 4
  store i32 %v0_10008490, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_100084a8 = add i32 %tmp, 16
  %v2_100084a8 = inttoptr i32 %v1_100084a8 to i32*
  %v3_100084a8 = load i32, i32* %v2_100084a8, align 4
  %v1_100084b0 = and i32 %v3_100084a8, 128
  store i32 %v1_100084b0, i32* %r6.global-to-local, align 4
  %v3_100084b0 = icmp eq i32 %v1_100084b0, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_100084c4 = add i32 %tmp, 24
  %v2_100084c4 = inttoptr i32 %v1_100084c4 to i32*
  %v3_100084c4 = load i32, i32* %v2_100084c4, align 4
  store i32 %v3_100084c4, i32* @r26, align 4
  br i1 %v3_100084b0, label %dec_label_pc_100084cc, label %dec_label_pc_100084e4

dec_label_pc_100084cc:                            ; preds = %entry
  %v2_100084cc = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_10008538

dec_label_pc_100084dc:                            ; preds = %dec_label_pc_1000870c
  %v1_100084dc = add i32 %v0_100086dc, 1
  store i32 %v1_100084dc, i32* @r30, align 4
  br label %dec_label_pc_10008724

dec_label_pc_100084e4:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_100084e8 = load i32, i32* %arg1, align 4
  store i32 %v2_100084e8, i32* %r8.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_100084f4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_100084f4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100084f8

dec_label_pc_100084f8:                            ; preds = %dec_label_pc_10008528.dec_label_pc_100084f8_crit_edge, %dec_label_pc_100084e4
  %v0_10008500 = phi i32 [ %v0_10008500.pre, %dec_label_pc_10008528.dec_label_pc_100084f8_crit_edge ], [ %v2_100084e8, %dec_label_pc_100084e4 ]
  %v0_100084fc = phi i32 [ %v0_100084fc.pre, %dec_label_pc_10008528.dec_label_pc_100084f8_crit_edge ], [ %v2_100084f4, %dec_label_pc_100084e4 ]
  %v0_10008504 = phi i32 [ %v0_100084f8.pre, %dec_label_pc_10008528.dec_label_pc_100084f8_crit_edge ], [ 0, %dec_label_pc_100084e4 ]
  %v1_100084f8 = mul i32 %v0_10008504, 4
  %v2_100084fc = add i32 %v0_10008504, %v0_100084fc
  store i32 %v2_100084fc, i32* %r9.global-to-local, align 4
  %v2_10008500 = add i32 %v1_100084f8, %v0_10008500
  store i32 %v2_10008500, i32* %r11.global-to-local, align 4
  %v1_10008504 = add i32 %v0_10008504, 1
  store i32 %v1_10008504, i32* %r10.global-to-local, align 4
  %v1_10008508 = add i32 %v2_10008500, -4
  %v2_10008508 = inttoptr i32 %v1_10008508 to i32*
  %v3_10008508 = load i32, i32* %v2_10008508, align 4
  store i32 %v3_10008508, i32* %r0.global-to-local, align 4
  %v1_1000850c = trunc i32 %v3_10008508 to i8
  %v3_1000850c = add i32 %v2_100084fc, 24
  %v4_1000850c = inttoptr i32 %v3_1000850c to i8*
  store i8 %v1_1000850c, i8* %v4_1000850c, align 1
  %v0_10008510 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008510 = urem i32 %v0_10008510, 256
  store i32 %v1_10008510, i32* %r0.global-to-local, align 4
  %v0_10008518 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008518 = add i32 %v0_10008518, -4
  %v2_10008518 = inttoptr i32 %v1_10008518 to i32*
  %v3_10008518 = load i32, i32* %v2_10008518, align 4
  store i32 %v3_10008518, i32* %r9.global-to-local, align 4
  %v4_1000851c = icmp eq i32 %v1_10008510, %v3_10008518
  br i1 %v4_1000851c, label %dec_label_pc_10008524, label %dec_label_pc_10008994

dec_label_pc_10008524:                            ; preds = %dec_label_pc_100084f8
  %v3_10008514 = icmp eq i32 %v1_10008510, 0
  br i1 %v3_10008514, label %dec_label_pc_1000852c, label %dec_label_pc_10008528

dec_label_pc_10008528:                            ; preds = %dec_label_pc_10008524
  %v0_10008528 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008528 = add i32 %v0_10008528, -1
  store i32 %v1_10008528, i32* %ctr.global-to-local, align 4
  %v2_10008528 = icmp eq i32 %v1_10008528, 0
  br i1 %v2_10008528, label %dec_label_pc_1000852c, label %dec_label_pc_10008528.dec_label_pc_100084f8_crit_edge

dec_label_pc_10008528.dec_label_pc_100084f8_crit_edge: ; preds = %dec_label_pc_10008528
  %v0_100084f8.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_100084fc.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_10008500.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100084f8

dec_label_pc_1000852c:                            ; preds = %dec_label_pc_10008528, %dec_label_pc_10008524
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10008530 = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_10008538

dec_label_pc_10008538:                            ; preds = %dec_label_pc_100084cc, %dec_label_pc_1000852c
  %v2_10008548.pre-phi = phi i32 [ %.pre, %dec_label_pc_100084cc ], [ %v2_100084f4, %dec_label_pc_1000852c ]
  %storemerge3 = phi i32 [ %v2_100084cc, %dec_label_pc_100084cc ], [ %v2_10008530, %dec_label_pc_1000852c ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 268500992, i32* @r27, align 4
  store i32 %v2_10008548.pre-phi, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10008558

dec_label_pc_10008554:                            ; preds = %dec_label_pc_10008664, %dec_label_pc_100086e8
  %v0_10008554 = phi i32 [ %v1_100086e8, %dec_label_pc_100086e8 ], [ %v0_1000864c, %dec_label_pc_10008664 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_100086e8 ], [ %stack_var_-84.2, %dec_label_pc_10008664 ]
  store i32 %v0_10008554, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008558

dec_label_pc_10008558:                            ; preds = %dec_label_pc_10008538, %dec_label_pc_10008554
  %v0_1000856c = phi i32 [ %storemerge3, %dec_label_pc_10008538 ], [ %v0_10008554, %dec_label_pc_10008554 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_10008538 ], [ %stack_var_-84.0, %dec_label_pc_10008554 ]
  %v1_10008558 = inttoptr i32 %v0_1000856c to i8*
  %v2_10008558 = load i8, i8* %v1_10008558, align 1
  %v3_10008558 = zext i8 %v2_10008558 to i32
  store i32 %v3_10008558, i32* %r0.global-to-local, align 4
  store i32 %v0_1000856c, i32* @r30, align 4
  %v3_10008560 = icmp eq i8 %v2_10008558, 42
  br i1 %v3_10008560, label %dec_label_pc_10008568, label %dec_label_pc_10008578

dec_label_pc_10008568:                            ; preds = %dec_label_pc_10008558
  %v0_10008568 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008568 = mul i32 %v0_10008568, -4
  store i32 %v1_10008568, i32* %r0.global-to-local, align 4
  %v1_1000856c = add i32 %v0_1000856c, 1
  store i32 %v1_1000856c, i32* @r30, align 4
  %v0_10008570 = load i32, i32* @r1, align 4
  %v2_10008570 = add i32 %v0_10008570, %v1_10008568
  store i32 %v2_10008570, i32* %r9.global-to-local, align 4
  %v0_10008574 = load i32, i32* @r29, align 4
  %v2_10008574 = add i32 %v2_10008570, 8
  %v3_10008574 = inttoptr i32 %v2_10008574 to i32*
  store i32 %v0_10008574, i32* %v3_10008574, align 4
  %v0_10008590.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008578

dec_label_pc_10008578:                            ; preds = %dec_label_pc_10008558, %dec_label_pc_10008568
  %v0_10008590.pre = phi i32 [ %v0_1000856c, %dec_label_pc_10008558 ], [ %v0_10008590.pre.pre, %dec_label_pc_10008568 ]
  %v3_10008578 = load i32, i32* @global_var_1001c35c, align 4
  store i32 %v3_10008578, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008590

dec_label_pc_10008584:                            ; preds = %dec_label_pc_10008590
  %v2_10008594 = icmp sgt i32 %v0_100085dc, 4094
  br i1 %v2_10008594, label %dec_label_pc_1000858c, label %dec_label_pc_10008588

dec_label_pc_10008588:                            ; preds = %dec_label_pc_10008584
  %v1_10008588 = add i32 %v2_100085a8, -48
  store i32 %v1_10008588, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000858c

dec_label_pc_1000858c:                            ; preds = %dec_label_pc_10008584, %dec_label_pc_10008588
  %v0_1000859415 = phi i32 [ %v0_100085dc, %dec_label_pc_10008584 ], [ %v1_10008588, %dec_label_pc_10008588 ]
  %v1_1000858c = add i32 %v0_1000860c, 1
  store i32 %v1_1000858c, i32* @r30, align 4
  br label %dec_label_pc_10008590

dec_label_pc_10008590:                            ; preds = %dec_label_pc_10008578, %dec_label_pc_1000858c
  %v0_100085dc = phi i32 [ 0, %dec_label_pc_10008578 ], [ %v0_1000859415, %dec_label_pc_1000858c ]
  %v0_1000860c = phi i32 [ %v0_10008590.pre, %dec_label_pc_10008578 ], [ %v1_1000858c, %dec_label_pc_1000858c ]
  %v1_10008590 = inttoptr i32 %v0_1000860c to i8*
  %v2_10008590 = load i8, i8* %v1_10008590, align 1
  %v3_10008590 = zext i8 %v2_10008590 to i32
  store i32 %v3_10008590, i32* %r11.global-to-local, align 4
  %v1_10008598 = mul nuw nsw i32 %v3_10008590, 2
  store i32 %v1_10008598, i32* %r9.global-to-local, align 4
  %v2_1000859c = add i32 %v1_10008598, %v3_10008578
  %v3_1000859c = inttoptr i32 %v2_1000859c to i16*
  %v4_1000859c = load i16, i16* %v3_1000859c, align 2
  %v5_1000859c = zext i16 %v4_1000859c to i32
  store i32 %v5_1000859c, i32* %r0.global-to-local, align 4
  %v1_100085a0 = mul i32 %v0_100085dc, 10
  %v1_100085a4 = and i32 %v5_1000859c, 8
  store i32 %v1_100085a4, i32* @r25, align 4
  %v3_100085a4 = icmp eq i32 %v1_100085a4, 0
  %v2_100085a8 = add i32 %v3_10008590, %v1_100085a0
  store i32 %v2_100085a8, i32* %r9.global-to-local, align 4
  br i1 %v3_100085a4, label %dec_label_pc_100085b0, label %dec_label_pc_10008584

dec_label_pc_100085b0:                            ; preds = %dec_label_pc_10008590
  %v0_100085b0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100085b0 = add i32 %v0_100085b0, -1
  %v2_100085b0 = inttoptr i32 %v1_100085b0 to i8*
  %v3_100085b0 = load i8, i8* %v2_100085b0, align 1
  %v4_100085b0 = zext i8 %v3_100085b0 to i32
  store i32 %v4_100085b0, i32* %r0.global-to-local, align 4
  %v3_100085b4 = icmp eq i8 %v3_100085b0, 37
  br i1 %v3_100085b4, label %dec_label_pc_100085bc, label %dec_label_pc_10008684

dec_label_pc_100085bc:                            ; preds = %dec_label_pc_100085b0
  %v3_100085bc = icmp eq i8 %v2_10008590, 36
  br i1 %v3_100085bc, label %dec_label_pc_100085c4, label %dec_label_pc_100085f8

dec_label_pc_100085c4:                            ; preds = %dec_label_pc_100085bc
  %tmp58 = icmp slt i32 %v0_100085dc, 1
  br i1 %tmp58, label %dec_label_pc_100085f8, label %dec_label_pc_100085cc

dec_label_pc_100085cc:                            ; preds = %dec_label_pc_100085c4
  %v0_100085cc = load i32, i32* @r26, align 4
  %v3_100085cc = icmp eq i32 %v0_100085cc, 0
  %v1_100085d0 = add i32 %v0_1000860c, 1
  store i32 %v1_100085d0, i32* %r10.global-to-local, align 4
  br i1 %v3_100085cc, label %dec_label_pc_10008994, label %dec_label_pc_100085d8

dec_label_pc_100085d8:                            ; preds = %dec_label_pc_100085cc
  %v3_100085d8 = icmp sgt i32 %v0_100085dc, %v0_100085cc
  br i1 %v3_100085d8, label %dec_label_pc_100085e4, label %dec_label_pc_100085f0

dec_label_pc_100085e4:                            ; preds = %dec_label_pc_100085d8
  store i32 %v0_100085dc, i32* @r26, align 4
  br label %dec_label_pc_100085f0

dec_label_pc_100085ec:                            ; preds = %dec_label_pc_10008614, %dec_label_pc_1000860c
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_100085f0

dec_label_pc_100085f0:                            ; preds = %dec_label_pc_100085d8, %dec_label_pc_100085e4, %dec_label_pc_100085ec
  %v0_100085f0 = phi i32 [ %v0_100085b0, %dec_label_pc_100085ec ], [ %v1_100085d0, %dec_label_pc_100085e4 ], [ %v1_100085d0, %dec_label_pc_100085d8 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_100085ec ], [ %v0_100085dc, %dec_label_pc_100085e4 ], [ %v0_100085dc, %dec_label_pc_100085d8 ]
  br label %dec_label_pc_1000862c

dec_label_pc_100085f8:                            ; preds = %dec_label_pc_100085bc, %dec_label_pc_100085c4
  %v0_100085f8 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_100085f8, 1
  br i1 %tmp59, label %dec_label_pc_1000860c, label %dec_label_pc_10008600

dec_label_pc_10008600:                            ; preds = %dec_label_pc_100085f8
  %v3_10008600 = icmp eq i8 %v2_10008590, 109
  br i1 %v3_10008600, label %dec_label_pc_10008684, label %dec_label_pc_10008994

dec_label_pc_1000860c:                            ; preds = %dec_label_pc_100085f8
  %v3_1000860c = icmp ugt i32 %v0_1000860c, %v0_100085b0
  br i1 %v3_1000860c, label %dec_label_pc_10008614, label %dec_label_pc_100085ec

dec_label_pc_10008614:                            ; preds = %dec_label_pc_1000860c
  %v1_10008614 = inttoptr i32 %v0_100085b0 to i8*
  %v2_10008614 = load i8, i8* %v1_10008614, align 1
  %v3_10008614 = zext i8 %v2_10008614 to i32
  store i32 %v3_10008614, i32* %r0.global-to-local, align 4
  store i32 %v0_100085b0, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_10008620 = icmp eq i8 %v2_10008614, 48
  br i1 %v3_10008620, label %dec_label_pc_100085ec, label %dec_label_pc_10008688

dec_label_pc_1000862c:                            ; preds = %dec_label_pc_10008648, %dec_label_pc_100085f0
  %v0_1000864c = phi i32 [ %v0_100085f0, %dec_label_pc_100085f0 ], [ %v1_1000864c, %dec_label_pc_10008648 ]
  store i32 %v0_1000864c, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000b014.165 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_1000863c = inttoptr i32 %v0_1000864c to i8*
  br label %dec_label_pc_10008634

dec_label_pc_10008634:                            ; preds = %dec_label_pc_10008654, %dec_label_pc_1000862c
  %v1_10008648 = phi i32 [ %v1_10008658, %dec_label_pc_10008654 ], [ 1, %dec_label_pc_1000862c ]
  %v0_10008634 = phi i32 [ %v1_10008638, %dec_label_pc_10008654 ], [ ptrtoint ([8 x i8]* @global_var_1000b014.165 to i32), %dec_label_pc_1000862c ]
  %v1_10008634 = inttoptr i32 %v0_10008634 to i8*
  %v2_10008634 = load i8, i8* %v1_10008634, align 1
  %v3_10008634 = zext i8 %v2_10008634 to i32
  store i32 %v3_10008634, i32* %r9.global-to-local, align 4
  %v1_10008638 = add i32 %v0_10008634, 1
  store i32 %v1_10008638, i32* %r11.global-to-local, align 4
  %v2_1000863c = load i8, i8* %v1_1000863c, align 1
  %v3_1000863c = zext i8 %v2_1000863c to i32
  store i32 %v3_1000863c, i32* %r0.global-to-local, align 4
  %v4_10008640 = icmp eq i8 %v2_1000863c, %v2_10008634
  br i1 %v4_10008640, label %dec_label_pc_10008648, label %dec_label_pc_10008654

dec_label_pc_10008648:                            ; preds = %dec_label_pc_10008634
  %v0_10008648 = load i32, i32* %r6.global-to-local, align 4
  %v2_10008648 = or i32 %v0_10008648, %v1_10008648
  store i32 %v2_10008648, i32* %r6.global-to-local, align 4
  %v1_1000864c = add i32 %v0_1000864c, 1
  br label %dec_label_pc_1000862c

dec_label_pc_10008654:                            ; preds = %dec_label_pc_10008634
  %v1_10008654 = inttoptr i32 %v1_10008638 to i8*
  %v2_10008654 = load i8, i8* %v1_10008654, align 1
  %v3_10008654 = zext i8 %v2_10008654 to i32
  store i32 %v3_10008654, i32* %r0.global-to-local, align 4
  %v1_10008658 = mul i32 %v1_10008648, 2
  store i32 %v1_10008658, i32* %r10.global-to-local, align 4
  %v3_1000865c = icmp eq i8 %v2_10008654, 0
  br i1 %v3_1000865c, label %dec_label_pc_10008664, label %dec_label_pc_10008634

dec_label_pc_10008664:                            ; preds = %dec_label_pc_10008654
  %v1_10008664 = add i32 %v0_1000864c, -1
  %v2_10008664 = inttoptr i32 %v1_10008664 to i8*
  %v3_10008664 = load i8, i8* %v2_10008664, align 1
  %v4_10008664 = zext i8 %v3_10008664 to i32
  store i32 %v4_10008664, i32* %r0.global-to-local, align 4
  %v0_10008668 = load i32, i32* %r6.global-to-local, align 4
  %v1_10008668 = and i32 %v0_10008668, 10
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_10008670 = icmp eq i8 %v3_10008664, 37
  %v1_10008674 = udiv i32 %v1_10008668, 2
  store i32 %v1_10008674, i32* %r9.global-to-local, align 4
  %v2_10008678 = sub nuw nsw i32 -1, %v1_10008674
  %v3_10008678 = and i32 %v0_10008668, %v2_10008678
  store i32 %v3_10008678, i32* %r6.global-to-local, align 4
  br i1 %v3_10008670, label %dec_label_pc_10008688, label %dec_label_pc_10008554

dec_label_pc_10008684:                            ; preds = %dec_label_pc_100085b0, %dec_label_pc_10008600
  store i32 %v0_100085b0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008688

dec_label_pc_10008688:                            ; preds = %dec_label_pc_10008614, %dec_label_pc_10008664, %dec_label_pc_10008684
  %v0_100086bc = phi i32 [ 0, %dec_label_pc_10008664 ], [ %v0_100085dc, %dec_label_pc_10008614 ], [ %v0_100085dc, %dec_label_pc_10008684 ]
  %v1_100086c8 = phi i32 [ %v0_1000864c, %dec_label_pc_10008664 ], [ %v0_1000860c, %dec_label_pc_10008614 ], [ %v0_1000860c, %dec_label_pc_10008684 ]
  %v0_100086c4 = phi i32 [ %v1_10008638, %dec_label_pc_10008664 ], [ %v0_100085b0, %dec_label_pc_10008614 ], [ %v0_100085b0, %dec_label_pc_10008684 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_10008664 ], [ %stack_var_-84.1, %dec_label_pc_10008614 ], [ %stack_var_-84.1, %dec_label_pc_10008684 ]
  %v1_10008688 = inttoptr i32 %v0_100086c4 to i8*
  %v2_10008688 = load i8, i8* %v1_10008688, align 1
  %v3_10008688 = zext i8 %v2_10008688 to i32
  store i32 %v3_10008688, i32* %r0.global-to-local, align 4
  %v3_1000868c = icmp eq i8 %v2_10008688, 42
  br i1 %v3_1000868c, label %dec_label_pc_10008694, label %dec_label_pc_100086d4

dec_label_pc_10008694:                            ; preds = %dec_label_pc_10008688
  %v0_10008694 = load i32, i32* @r26, align 4
  %v3_10008694 = icmp eq i32 %v0_10008694, 0
  br i1 %v3_10008694, label %dec_label_pc_100086c4, label %dec_label_pc_1000869c

dec_label_pc_1000869c:                            ; preds = %dec_label_pc_10008694
  %v1_1000869c = inttoptr i32 %v1_100086c8 to i8*
  %v2_1000869c = load i8, i8* %v1_1000869c, align 1
  %v3_1000869c = zext i8 %v2_1000869c to i32
  store i32 %v3_1000869c, i32* %r0.global-to-local, align 4
  %v3_100086a0 = icmp eq i8 %v2_1000869c, 36
  br i1 %v3_100086a0, label %dec_label_pc_100086a8, label %dec_label_pc_10008994

dec_label_pc_100086a8:                            ; preds = %dec_label_pc_1000869c
  %tmp60 = icmp slt i32 %v0_100086bc, 1
  br i1 %tmp60, label %dec_label_pc_10008994, label %dec_label_pc_100086b0

dec_label_pc_100086b0:                            ; preds = %dec_label_pc_100086a8
  %v0_100086b0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100086b0 = mul i32 %v0_100086b0, -4
  %v1_100086b4 = add i32 %v1_100086c8, 1
  store i32 %v1_100086b4, i32* @r30, align 4
  %v0_100086b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_100086b8 = add i32 %v0_100086b8, %v1_100086b0
  store i32 %v2_100086b8, i32* %r9.global-to-local, align 4
  %v2_100086bc = add i32 %v2_100086b8, 12
  %v3_100086bc = inttoptr i32 %v2_100086bc to i32*
  store i32 %v0_100086bc, i32* %v3_100086bc, align 4
  %v0_100086dc.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100086d0

dec_label_pc_100086c4:                            ; preds = %dec_label_pc_10008694
  %v1_100086c4 = add i32 %v0_100086c4, 1
  store i32 %v1_100086c4, i32* %r0.global-to-local, align 4
  %v4_100086c8 = icmp eq i32 %v1_100086c4, %v1_100086c8
  br i1 %v4_100086c8, label %dec_label_pc_100086d0, label %dec_label_pc_10008994

dec_label_pc_100086d0:                            ; preds = %dec_label_pc_100086c4, %dec_label_pc_100086b0
  %v0_100086dc.pre = phi i32 [ %v1_100086c8, %dec_label_pc_100086c4 ], [ %v0_100086dc.pre.pre, %dec_label_pc_100086b0 ]
  store i32 -2147483648, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100086d4

dec_label_pc_100086d4:                            ; preds = %dec_label_pc_10008688, %dec_label_pc_100086d0
  %v0_100086dc = phi i32 [ %v1_100086c8, %dec_label_pc_10008688 ], [ %v0_100086dc.pre, %dec_label_pc_100086d0 ]
  %v0_100086ec = phi i32 [ %v0_100086bc, %dec_label_pc_10008688 ], [ -2147483648, %dec_label_pc_100086d0 ]
  %v0_100086d4 = load i32, i32* %r5.global-to-local, align 4
  %v3_100086d4 = icmp eq i32 %v0_100086d4, 0
  %v1_100086dc = inttoptr i32 %v0_100086dc to i8*
  br i1 %v3_100086d4, label %dec_label_pc_100086dc, label %dec_label_pc_10008700

dec_label_pc_100086dc:                            ; preds = %dec_label_pc_100086d4
  %v2_100086dc = load i8, i8* %v1_100086dc, align 1
  %v3_100086dc = zext i8 %v2_100086dc to i32
  store i32 %v3_100086dc, i32* %r0.global-to-local, align 4
  %v3_100086e0 = icmp eq i8 %v2_100086dc, 46
  br i1 %v3_100086e0, label %dec_label_pc_100086e8, label %dec_label_pc_100086f8

dec_label_pc_100086e8:                            ; preds = %dec_label_pc_100086dc
  %v1_100086e8 = add i32 %v0_100086dc, 1
  store i32 %v0_100086ec, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008554

dec_label_pc_100086f8:                            ; preds = %dec_label_pc_100086dc
  store i32 %v0_100086ec, i32* @r31, align 4
  br label %dec_label_pc_10008700

dec_label_pc_10008700:                            ; preds = %dec_label_pc_100086d4, %dec_label_pc_100086f8
  %storemerge1 = phi i32 [ -1, %dec_label_pc_100086f8 ], [ %v0_100086ec, %dec_label_pc_100086d4 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v2_10008704 = load i8, i8* %v1_100086dc, align 1
  %v3_10008704 = zext i8 %v2_10008704 to i32
  store i32 %v3_10008704, i32* %r10.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000afbc.166 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000870c

dec_label_pc_1000870c:                            ; preds = %dec_label_pc_10008718, %dec_label_pc_10008700
  %v0_10008718 = phi i32 [ %v1_10008718, %dec_label_pc_10008718 ], [ ptrtoint ([9 x i8]* @global_var_1000afbc.166 to i32), %dec_label_pc_10008700 ]
  %v1_1000870c = inttoptr i32 %v0_10008718 to i8*
  %v2_1000870c = load i8, i8* %v1_1000870c, align 1
  %v3_1000870c = zext i8 %v2_1000870c to i32
  store i32 %v3_1000870c, i32* %r0.global-to-local, align 4
  %v4_10008710 = icmp eq i8 %v2_10008704, %v2_1000870c
  br i1 %v4_10008710, label %dec_label_pc_100084dc, label %dec_label_pc_10008718

dec_label_pc_10008718:                            ; preds = %dec_label_pc_1000870c
  %v1_10008718 = add i32 %v0_10008718, 1
  %v2_10008718 = inttoptr i32 %v1_10008718 to i8*
  %v3_10008718 = load i8, i8* %v2_10008718, align 1
  %v4_10008718 = zext i8 %v3_10008718 to i32
  store i32 %v4_10008718, i32* %r0.global-to-local, align 4
  store i32 %v1_10008718, i32* %r11.global-to-local, align 4
  %v3_1000871c = icmp eq i8 %v3_10008718, 0
  br i1 %v3_1000871c, label %dec_label_pc_10008724, label %dec_label_pc_1000870c

dec_label_pc_10008724:                            ; preds = %dec_label_pc_10008718, %dec_label_pc_100084dc
  %v0_1000874c = phi i32 [ %v1_100084dc, %dec_label_pc_100084dc ], [ %v0_100086dc, %dec_label_pc_10008718 ]
  %v0_10008748 = phi i32 [ %v0_10008718, %dec_label_pc_100084dc ], [ %v1_10008718, %dec_label_pc_10008718 ]
  %v2_1000872c = sub i32 %v0_10008748, ptrtoint ([9 x i8]* @global_var_1000afbc.166 to i32)
  store i32 %v2_1000872c, i32* %r9.global-to-local, align 4
  %v2_10008730 = icmp sgt i32 %v2_1000872c, 1
  br i1 %v2_10008730, label %dec_label_pc_10008750, label %dec_label_pc_10008738

dec_label_pc_10008738:                            ; preds = %dec_label_pc_10008724
  %v1_10008738 = inttoptr i32 %v0_1000874c to i8*
  %v2_10008738 = load i8, i8* %v1_10008738, align 1
  %v3_10008738 = zext i8 %v2_10008738 to i32
  store i32 %v3_10008738, i32* %r0.global-to-local, align 4
  %v1_1000873c = inttoptr i32 %v0_10008748 to i8*
  %v2_1000873c = load i8, i8* %v1_1000873c, align 1
  %v3_1000873c = zext i8 %v2_1000873c to i32
  store i32 %v3_1000873c, i32* %r9.global-to-local, align 4
  %v4_10008740 = icmp eq i8 %v2_10008738, %v2_1000873c
  br i1 %v4_10008740, label %dec_label_pc_10008748, label %dec_label_pc_10008750

dec_label_pc_10008748:                            ; preds = %dec_label_pc_10008738
  %v1_10008748 = add i32 %v0_10008748, 9
  store i32 %v1_10008748, i32* %r11.global-to-local, align 4
  %v1_1000874c = add i32 %v0_1000874c, 1
  store i32 %v1_1000874c, i32* @r30, align 4
  br label %dec_label_pc_10008750

dec_label_pc_10008750:                            ; preds = %dec_label_pc_10008738, %dec_label_pc_10008724, %dec_label_pc_10008748
  %v0_10008754 = phi i32 [ %v0_10008748, %dec_label_pc_10008738 ], [ %v0_10008748, %dec_label_pc_10008724 ], [ %v1_10008748, %dec_label_pc_10008748 ]
  %v0_10008750 = phi i32 [ %v0_1000874c, %dec_label_pc_10008738 ], [ %v0_1000874c, %dec_label_pc_10008724 ], [ %v1_1000874c, %dec_label_pc_10008748 ]
  %v1_10008750 = inttoptr i32 %v0_10008750 to i8*
  %v2_10008750 = load i8, i8* %v1_10008750, align 1
  %v3_10008750 = zext i8 %v2_10008750 to i32
  store i32 %v3_10008750, i32* %r7.global-to-local, align 4
  %v1_10008754 = add i32 %v0_10008754, 9
  %v2_10008754 = inttoptr i32 %v1_10008754 to i8*
  %v3_10008754 = load i8, i8* %v2_10008754, align 1
  %v4_10008754 = zext i8 %v3_10008754 to i32
  store i32 %v4_10008754, i32* %r0.global-to-local, align 4
  %v3_10008758 = icmp eq i8 %v2_10008750, 0
  %v1_1000875c = mul nuw nsw i32 %v4_10008754, 256
  store i32 %v1_1000875c, i32* %r10.global-to-local, align 4
  br i1 %v3_10008758, label %dec_label_pc_10008994, label %dec_label_pc_10008764

dec_label_pc_10008764:                            ; preds = %dec_label_pc_10008750
  %v1_10008768 = and i32 %v1_1000875c, 1024
  store i32 %v1_10008768, i32* %r0.global-to-local, align 4
  %v3_10008768 = icmp eq i32 %v1_10008768, 0
  store i32 ptrtoint ([21 x i8]* @global_var_1000affc.167 to i32), i32* %r8.global-to-local, align 4
  store i32 268500992, i32* %r3.global-to-local, align 4
  %v3_10008774 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_10008774, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000aff0.168 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000affc.167 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008784

dec_label_pc_10008784:                            ; preds = %dec_label_pc_100087e8, %dec_label_pc_10008764
  %v1_10008790 = phi i32 [ %v1_100087e8, %dec_label_pc_100087e8 ], [ ptrtoint ([21 x i8]* @global_var_1000affc.167 to i32), %dec_label_pc_10008764 ]
  %v1_10008784 = inttoptr i32 %v1_10008790 to i8*
  %v2_10008784 = load i8, i8* %v1_10008784, align 1
  %v3_10008784 = zext i8 %v2_10008784 to i32
  store i32 %v3_10008784, i32* %r0.global-to-local, align 4
  %v4_10008788 = icmp eq i8 %v2_10008784, %v2_10008750
  br i1 %v4_10008788, label %dec_label_pc_10008790, label %dec_label_pc_100087e8

dec_label_pc_10008790:                            ; preds = %dec_label_pc_10008784
  %v2_10008790 = sub i32 %v1_10008790, ptrtoint ([21 x i8]* @global_var_1000affc.167 to i32)
  %tmp61 = icmp slt i32 %v2_10008790, 18
  %brmerge = or i1 %v3_10008768, %tmp61
  br i1 %brmerge, label %dec_label_pc_100087a4, label %dec_label_pc_100087a0

dec_label_pc_100087a0:                            ; preds = %dec_label_pc_10008790
  %v1_100087a0 = add i32 %v2_10008790, -2
  br label %dec_label_pc_100087a4

dec_label_pc_100087a4:                            ; preds = %dec_label_pc_10008790, %dec_label_pc_100087a0
  %storemerge = phi i32 [ %v1_100087a0, %dec_label_pc_100087a0 ], [ %v2_10008790, %dec_label_pc_10008790 ]
  %v0_100087a4 = phi i32 [ %v1_100087a0, %dec_label_pc_100087a0 ], [ %v2_10008790, %dec_label_pc_10008790 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_100087a4 = load i32, i32* @r28, align 4
  %v2_100087a4 = add i32 %v1_100087a4, 32
  %v3_100087a4 = inttoptr i32 %v2_100087a4 to i32*
  store i32 %v0_100087a4, i32* %v3_100087a4, align 4
  store i32 ptrtoint (i32* @global_var_1000afef.169 to i32), i32* %r11.global-to-local, align 4
  %v0_100087b0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100087ac

dec_label_pc_100087ac:                            ; preds = %dec_label_pc_100087ac, %dec_label_pc_100087a4
  %v0_100087ac = phi i32 [ %v1_100087ac, %dec_label_pc_100087ac ], [ ptrtoint (i32* @global_var_1000afef.169 to i32), %dec_label_pc_100087a4 ]
  %v1_100087ac = add i32 %v0_100087ac, 1
  %v2_100087ac = inttoptr i32 %v1_100087ac to i8*
  %v3_100087ac = load i8, i8* %v2_100087ac, align 1
  %v4_100087ac = zext i8 %v3_100087ac to i32
  store i32 %v4_100087ac, i32* %r0.global-to-local, align 4
  store i32 %v1_100087ac, i32* %r11.global-to-local, align 4
  %v3_100087b0 = icmp sgt i32 %v0_100087b0.pre, %v4_100087ac
  br i1 %v3_100087b0, label %dec_label_pc_100087ac, label %dec_label_pc_100087b8

dec_label_pc_100087b8:                            ; preds = %dec_label_pc_100087ac
  %v0_100087b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_100087b8 = sub i32 %v1_100087ac, %v0_100087b8
  %v1_100087c0 = mul i32 %v2_100087b8, 2
  store i32 %v1_100087c0, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000afe0.170 to i32), i32* %r9.global-to-local, align 4
  %v2_100087c8 = add i32 %v1_100087c0, ptrtoint (i32* @global_var_1000afe0.170 to i32)
  %v3_100087c8 = inttoptr i32 %v2_100087c8 to i16*
  %v4_100087c8 = load i16, i16* %v3_100087c8, align 2
  %v5_100087c8 = sext i16 %v4_100087c8 to i32
  store i32 %v5_100087c8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000afd0.171 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000affc.167 to i32), i32* %r8.global-to-local, align 4
  %v2_100087d8 = add i32 %v1_100087c0, ptrtoint (i32* @global_var_1000afd0.171 to i32)
  %v3_100087d8 = inttoptr i32 %v2_100087d8 to i16*
  %v4_100087d8 = load i16, i16* %v3_100087d8, align 2
  %v5_100087d8 = sext i16 %v4_100087d8 to i32
  store i32 %v5_100087d8, i32* %r9.global-to-local, align 4
  %v2_100087dc = or i32 %v5_100087c8, %v1_1000875c
  store i32 %v2_100087dc, i32* %r0.global-to-local, align 4
  %v2_100087e0 = and i32 %v5_100087d8, %v2_100087dc
  store i32 %v2_100087e0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100087f4

dec_label_pc_100087e8:                            ; preds = %dec_label_pc_10008784
  %v1_100087e8 = add i32 %v1_10008790, 1
  %v2_100087e8 = inttoptr i32 %v1_100087e8 to i8*
  %v3_100087e8 = load i8, i8* %v2_100087e8, align 1
  %v4_100087e8 = zext i8 %v3_100087e8 to i32
  store i32 %v4_100087e8, i32* %r0.global-to-local, align 4
  store i32 %v1_100087e8, i32* %r8.global-to-local, align 4
  %v3_100087ec = icmp eq i8 %v3_100087e8, 0
  br i1 %v3_100087ec, label %dec_label_pc_100087f4, label %dec_label_pc_10008784

dec_label_pc_100087f4:                            ; preds = %dec_label_pc_100087e8, %dec_label_pc_100087b8
  %v0_100087f4 = phi i32 [ %v2_100087e0, %dec_label_pc_100087b8 ], [ %v3_10008774, %dec_label_pc_100087e8 ]
  store i32 %v0_100087f4, i32* %stack_var_-96, align 4
  %v0_100087f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_100087f8 = call i32 @__asm_rlwinm(i32 %v0_100087f8, i32 30, i32 31, i32 31)
  %not.v2_100087fc = icmp eq i32 %v1_100087f8, 0
  %v6_10008800 = sext i1 %not.v2_100087fc to i32
  store i32 %v6_10008800, i32* %r9.global-to-local, align 4
  %v1_10008804 = call i32 @__asm_rlwinm(i32 %v1_1000875c, i32 0, i32 20, i32 23)
  store i32 %v1_10008804, i32* %r0.global-to-local, align 4
  %v1_10008808 = call i32 @__asm_rlwinm(i32 %v6_10008800, i32 0, i32 0, i32 27)
  store i32 %v1_10008808, i32* %r9.global-to-local, align 4
  %v0_1000880c = load i32, i32* @r30, align 4
  %v1_1000880c = inttoptr i32 %v0_1000880c to i8*
  %v2_1000880c = load i8, i8* %v1_1000880c, align 1
  %v3_1000880c = zext i8 %v2_1000880c to i32
  store i32 %v3_1000880c, i32* %r10.global-to-local, align 4
  %v0_10008810 = load i32, i32* %r6.global-to-local, align 4
  %v1_10008810 = call i32 @__asm_rlwinm(i32 %v0_10008810, i32 0, i32 30, i32 28)
  %v1_10008814 = add i32 %v1_10008808, 48
  store i32 %v1_10008814, i32* %r9.global-to-local, align 4
  %v2_10008818 = or i32 %v1_10008810, %v1_10008804
  store i32 %v2_10008818, i32* %r11.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v0_10008820 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008820 = load i32, i32* @r28, align 4
  %v2_10008820 = add i32 %v1_10008820, 12
  %v3_10008820 = inttoptr i32 %v2_10008820 to i32*
  store i32 %v0_10008820, i32* %v3_10008820, align 4
  %v0_10008824 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008824 = load i32, i32* @r28, align 4
  %v2_10008824 = add i32 %v1_10008824, 4
  %v3_10008824 = inttoptr i32 %v2_10008824 to i32*
  store i32 %v0_10008824, i32* %v3_10008824, align 4
  %v0_10008828 = load i32, i32* @r31, align 4
  %v1_10008828 = load i32, i32* @r28, align 4
  %v2_10008828 = add i32 %v1_10008828, 8
  %v3_10008828 = inttoptr i32 %v2_10008828 to i32*
  store i32 %v0_10008828, i32* %v3_10008828, align 4
  %v0_1000882c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000882c = load i32, i32* @r28, align 4
  %v2_1000882c = add i32 %v1_1000882c, 20
  %v3_1000882c = inttoptr i32 %v2_1000882c to i32*
  store i32 %v0_1000882c, i32* %v3_1000882c, align 4
  %v0_10008830 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008830 = load i32, i32* @r28, align 4
  %v2_10008830 = add i32 %v1_10008830, 16
  %v3_10008830 = inttoptr i32 %v2_10008830 to i32*
  store i32 %v0_10008830, i32* %v3_10008830, align 4
  %v0_10008834 = load i32, i32* %r7.global-to-local, align 4
  %v1_10008834 = load i32, i32* @r28, align 4
  %v2_10008834 = add i32 %v1_10008834, 28
  %v3_10008834 = inttoptr i32 %v2_10008834 to i32*
  store i32 %v0_10008834, i32* %v3_10008834, align 4
  %v0_10008838 = load i32, i32* %r8.global-to-local, align 4
  %v1_10008838 = inttoptr i32 %v0_10008838 to i8*
  %v2_10008838 = load i8, i8* %v1_10008838, align 1
  %v3_10008838 = zext i8 %v2_10008838 to i32
  store i32 %v3_10008838, i32* %r9.global-to-local, align 4
  %v3_1000883c = icmp eq i8 %v2_10008838, 0
  br i1 %v3_1000883c, label %dec_label_pc_10008844, label %dec_label_pc_1000885c

dec_label_pc_10008844:                            ; preds = %dec_label_pc_100087f4
  %v0_10008844 = load i32, i32* @r30, align 4
  %v1_10008844 = inttoptr i32 %v0_10008844 to i8*
  %v2_10008844 = load i8, i8* %v1_10008844, align 1
  %v3_10008844 = zext i8 %v2_10008844 to i32
  store i32 %v3_10008844, i32* %r0.global-to-local, align 4
  %v3_10008848 = icmp eq i8 %v2_10008844, 109
  br i1 %v3_10008848, label %dec_label_pc_10008850, label %dec_label_pc_10008994

dec_label_pc_10008850:                            ; preds = %dec_label_pc_10008844
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_10008854 = load i32, i32* @r28, align 4
  %v2_10008854 = add i32 %v1_10008854, 28
  %v3_10008854 = inttoptr i32 %v2_10008854 to i32*
  store i32 %v3_10008838, i32* %v3_10008854, align 4
  %v0_10008858 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008858 = load i32, i32* @r28, align 4
  %v2_10008858 = add i32 %v1_10008858, 32
  %v3_10008858 = inttoptr i32 %v2_10008858 to i32*
  store i32 %v0_10008858, i32* %v3_10008858, align 4
  br label %dec_label_pc_1000885c

dec_label_pc_1000885c:                            ; preds = %dec_label_pc_100087f4, %dec_label_pc_10008850
  %v0_1000885c = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_1000885c, 1
  br i1 %tmp62, label %dec_label_pc_10008938, label %dec_label_pc_10008864

dec_label_pc_10008864:                            ; preds = %dec_label_pc_1000885c
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10008868

dec_label_pc_10008868:                            ; preds = %dec_label_pc_10008920, %dec_label_pc_10008864
  %v0_10008890 = phi i32 [ 0, %dec_label_pc_10008864 ], [ %v1_10008924, %dec_label_pc_10008920 ]
  %v2_10008868 = icmp sgt i32 %v0_10008890, 2
  br i1 %v2_10008868, label %dec_label_pc_1000888c, label %dec_label_pc_10008870

dec_label_pc_10008870:                            ; preds = %dec_label_pc_10008868
  %v1_10008870 = mul i32 %v0_10008890, 4
  store i32 %v1_10008870, i32* %r0.global-to-local, align 4
  %v0_10008874 = load i32, i32* @r1, align 4
  %v2_10008874 = add i32 %v0_10008874, %v1_10008870
  store i32 %v2_10008874, i32* %r9.global-to-local, align 4
  %v1_10008878 = add i32 %v2_10008874, 20
  %v2_10008878 = inttoptr i32 %v1_10008878 to i32*
  %v3_10008878 = load i32, i32* %v2_10008878, align 4
  store i32 %v3_10008878, i32* %r0.global-to-local, align 4
  %v1_1000887c = load i32, i32* @r28, align 4
  %v2_1000887c = add i32 %v1_1000887c, %v0_10008890
  store i32 %v2_1000887c, i32* %r9.global-to-local, align 4
  %v1_10008880 = urem i32 %v3_10008878, 256
  store i32 %v1_10008880, i32* %r11.global-to-local, align 4
  %v1_10008884 = trunc i32 %v3_10008878 to i8
  %v3_10008884 = add i32 %v2_1000887c, 36
  %v4_10008884 = inttoptr i32 %v3_10008884 to i8*
  store i8 %v1_10008884, i8* %v4_10008884, align 1
  %v0_10008898.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008898

dec_label_pc_1000888c:                            ; preds = %dec_label_pc_10008868
  %v2_10008890 = add i32 %v0_10008890, %stack_var_-84.3
  store i32 %v2_10008890, i32* %r9.global-to-local, align 4
  %v1_10008894 = add i32 %v2_10008890, -2
  store i32 %v1_10008894, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008898

dec_label_pc_10008898:                            ; preds = %dec_label_pc_10008870, %dec_label_pc_1000888c
  %v0_100088b8 = phi i32 [ %v0_10008898.pre, %dec_label_pc_10008870 ], [ %v1_10008894, %dec_label_pc_1000888c ]
  %v1_10008898 = load i32, i32* @r26, align 4
  %v3_10008898 = icmp sgt i32 %v0_100088b8, %v1_10008898
  br i1 %v3_10008898, label %dec_label_pc_100088a0, label %dec_label_pc_100088ac

dec_label_pc_100088a0:                            ; preds = %dec_label_pc_10008898
  %v2_100088a0 = icmp sgt i32 %v0_100088b8, 9
  br i1 %v2_100088a0, label %dec_label_pc_10008994, label %dec_label_pc_100088a8

dec_label_pc_100088a8:                            ; preds = %dec_label_pc_100088a0
  store i32 %v0_100088b8, i32* @r26, align 4
  br label %dec_label_pc_100088ac

dec_label_pc_100088ac:                            ; preds = %dec_label_pc_10008898, %dec_label_pc_100088a8
  store i32 %v2_10008548.pre-phi, i32* %r9.global-to-local, align 4
  %v0_100088b0 = load i32, i32* @r27, align 4
  %v1_100088b0 = mul i32 %v0_100088b0, 4
  store i32 %v1_100088b0, i32* %r0.global-to-local, align 4
  %v2_100088b4 = add i32 %v1_100088b0, %v2_10008548.pre-phi
  %v3_100088b4 = inttoptr i32 %v2_100088b4 to i32*
  %v4_100088b4 = load i32, i32* %v3_100088b4, align 4
  store i32 %v4_100088b4, i32* @r31, align 4
  %v1_100088b8 = add i32 %v0_100088b8, -1
  store i32 %v1_100088b8, i32* @r25, align 4
  %v1_100088bc = mul i32 %v1_100088b8, 4
  %v3_100088c0 = icmp eq i32 %v4_100088b4, 8
  %v1_100088c4 = load i32, i32* @r28, align 4
  %v2_100088c4 = add i32 %v1_100088c4, %v1_100088bc
  store i32 %v2_100088c4, i32* %r9.global-to-local, align 4
  %v1_100088c8 = add i32 %v2_100088c4, 40
  %v2_100088c8 = inttoptr i32 %v1_100088c8 to i32*
  %v3_100088c8 = load i32, i32* %v2_100088c8, align 4
  store i32 %v3_100088c8, i32* %r3.global-to-local, align 4
  br i1 %v3_100088c0, label %dec_label_pc_10008920, label %dec_label_pc_100088d0

dec_label_pc_100088d0:                            ; preds = %dec_label_pc_100088ac
  %v3_100088d0 = icmp eq i32 %v3_100088c8, 8
  br i1 %v3_100088d0, label %dec_label_pc_10008908, label %dec_label_pc_100088d8

dec_label_pc_100088d8:                            ; preds = %dec_label_pc_100088d0
  %v4_100088d8 = icmp eq i32 %v3_100088c8, %v4_100088b4
  br i1 %v4_100088d8, label %dec_label_pc_10008908, label %dec_label_pc_100088e0

dec_label_pc_100088e0:                            ; preds = %dec_label_pc_100088d8
  %v1_100088e0 = call i32 @_promoted_size(i32 %v3_100088c8)
  store i32 %v1_100088e0, i32* @r29, align 4
  %v0_100088e8 = load i32, i32* @r31, align 4
  store i32 %v0_100088e8, i32* %r3.global-to-local, align 4
  %v1_100088ec = call i32 @_promoted_size(i32 %v0_100088e8)
  store i32 %v1_100088ec, i32* %r3.global-to-local, align 4
  %v0_100088f8 = call i32 @__asm_mfcr()
  store i32 %v0_100088f8, i32* %r3.global-to-local, align 4
  store i32 %v0_100088f8, i32* %r0.global-to-local, align 4
  %v1_100088fc = call i32 @__asm_rlwinm(i32 %v0_100088f8, i32 31, i32 31, i32 31)
  store i32 %v1_100088fc, i32* %r0.global-to-local, align 4
  %v3_10008900 = icmp eq i32 %v1_100088fc, 0
  br i1 %v3_10008900, label %dec_label_pc_10008920, label %dec_label_pc_100088e0.dec_label_pc_10008908_crit_edge

dec_label_pc_100088e0.dec_label_pc_10008908_crit_edge: ; preds = %dec_label_pc_100088e0
  %v0_1000890c.pre = load i32, i32* @r27, align 4
  %v0_10008914.pre = load i32, i32* @r25, align 4
  %v1_10008918.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10008908

dec_label_pc_10008908:                            ; preds = %dec_label_pc_100088e0.dec_label_pc_10008908_crit_edge, %dec_label_pc_100088d8, %dec_label_pc_100088d0
  %v1_10008918 = phi i32 [ %v1_10008918.pre, %dec_label_pc_100088e0.dec_label_pc_10008908_crit_edge ], [ %v1_100088c4, %dec_label_pc_100088d8 ], [ %v1_100088c4, %dec_label_pc_100088d0 ]
  %v0_10008914 = phi i32 [ %v0_10008914.pre, %dec_label_pc_100088e0.dec_label_pc_10008908_crit_edge ], [ %v1_100088b8, %dec_label_pc_100088d8 ], [ %v1_100088b8, %dec_label_pc_100088d0 ]
  %v0_1000890c = phi i32 [ %v0_1000890c.pre, %dec_label_pc_100088e0.dec_label_pc_10008908_crit_edge ], [ %v0_100088b0, %dec_label_pc_100088d8 ], [ %v0_100088b0, %dec_label_pc_100088d0 ]
  store i32 %v2_10008548.pre-phi, i32* %r9.global-to-local, align 4
  %v1_1000890c = mul i32 %v0_1000890c, 4
  store i32 %v1_1000890c, i32* %r0.global-to-local, align 4
  %v2_10008910 = add i32 %v1_1000890c, %v2_10008548.pre-phi
  %v3_10008910 = inttoptr i32 %v2_10008910 to i32*
  %v4_10008910 = load i32, i32* %v3_10008910, align 4
  store i32 %v4_10008910, i32* %r0.global-to-local, align 4
  %v1_10008914 = mul i32 %v0_10008914, 4
  %v2_10008918 = add i32 %v1_10008914, %v1_10008918
  store i32 %v2_10008918, i32* %r9.global-to-local, align 4
  %v2_1000891c = add i32 %v2_10008918, 40
  %v3_1000891c = inttoptr i32 %v2_1000891c to i32*
  store i32 %v4_10008910, i32* %v3_1000891c, align 4
  br label %dec_label_pc_10008920

dec_label_pc_10008920:                            ; preds = %dec_label_pc_100088e0, %dec_label_pc_100088ac, %dec_label_pc_10008908
  %v0_10008920 = load i32, i32* @r28, align 4
  %v1_10008920 = add i32 %v0_10008920, 28
  %v2_10008920 = inttoptr i32 %v1_10008920 to i32*
  %v3_10008920 = load i32, i32* %v2_10008920, align 4
  %v0_10008924 = load i32, i32* @r27, align 4
  %v1_10008924 = add i32 %v0_10008924, 1
  store i32 %v1_10008924, i32* @r27, align 4
  %v1_10008928 = add i32 %v3_10008920, 2
  store i32 %v1_10008928, i32* %r9.global-to-local, align 4
  %v2_1000892c = icmp slt i32 %v1_10008924, %v1_10008928
  br i1 %v2_1000892c, label %dec_label_pc_10008868, label %dec_label_pc_10008950

dec_label_pc_10008938:                            ; preds = %dec_label_pc_1000885c
  %v0_10008938 = load i32, i32* @r28, align 4
  %v1_10008938 = add i32 %v0_10008938, 28
  %v2_10008938 = inttoptr i32 %v1_10008938 to i32*
  %v3_10008938 = load i32, i32* %v2_10008938, align 4
  store i32 %v3_10008938, i32* %r5.global-to-local, align 4
  %v1_1000893c = add i32 %v0_10008938, 40
  store i32 %v1_1000893c, i32* @r3, align 4
  %v0_10008940 = load i32, i32* %r7.global-to-local, align 4
  %v1_10008940 = trunc i32 %v0_10008940 to i8
  %v3_10008940 = add i32 %v0_10008938, 38
  %v4_10008940 = inttoptr i32 %v3_10008940 to i8*
  store i8 %v1_10008940, i8* %v4_10008940, align 1
  %v2_10008944 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10008944, i32* @r4, align 4
  %v0_10008948 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008948 = mul i32 %v0_10008948, 4
  store i32 %v1_10008948, i32* @r5, align 4
  store i32 268470608, i32* @lr, align 4
  %v0_1000894c = call i32 @memcpy()
  store i32 %v0_1000894c, i32* %r3.global-to-local, align 4
  %v0_10008950.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10008950

dec_label_pc_10008950:                            ; preds = %dec_label_pc_10008920, %dec_label_pc_10008938
  %v0_10008950 = phi i32 [ %v0_10008950.pre, %dec_label_pc_10008938 ], [ %v0_10008920, %dec_label_pc_10008920 ]
  %v1_10008950 = add i32 %v0_10008950, 16
  %v2_10008950 = inttoptr i32 %v1_10008950 to i32*
  %v3_10008950 = load i32, i32* %v2_10008950, align 4
  store i32 %v3_10008950, i32* %r0.global-to-local, align 4
  %v0_10008954 = load i32, i32* @r26, align 4
  %v2_10008954 = add i32 %v0_10008950, 24
  %v3_10008954 = inttoptr i32 %v2_10008954 to i32*
  store i32 %v0_10008954, i32* %v3_10008954, align 4
  %v0_10008958 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008958 = and i32 %v0_10008958, 128
  store i32 %v1_10008958, i32* %r9.global-to-local, align 4
  %v3_10008958 = icmp eq i32 %v1_10008958, 0
  br i1 %v3_10008958, label %dec_label_pc_10008960, label %dec_label_pc_1000896c

dec_label_pc_10008960:                            ; preds = %dec_label_pc_10008950
  %v0_10008960 = load i32, i32* @r30, align 4
  %v1_10008960 = add i32 %v0_10008960, 1
  store i32 %v1_10008960, i32* %r0.global-to-local, align 4
  %v1_10008964 = load i32, i32* @r28, align 4
  %v2_10008964 = inttoptr i32 %v1_10008964 to i32*
  store i32 %v1_10008960, i32* %v2_10008964, align 4
  br label %dec_label_pc_10008984

dec_label_pc_1000896c:                            ; preds = %dec_label_pc_10008950
  %v2_1000896c = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_1000896c, i32* %r0.global-to-local, align 4
  %v0_10008970 = load i32, i32* @r28, align 4
  %v1_10008970 = inttoptr i32 %v0_10008970 to i32*
  %v2_10008970 = load i32, i32* %v1_10008970, align 4
  %v1_10008974 = load i32, i32* @r30, align 4
  %v2_10008974 = sub i32 %v1_10008974, %v2_1000896c
  %v1_10008978 = mul i32 %v2_10008974, 4
  store i32 %v1_10008978, i32* %r0.global-to-local, align 4
  %v2_1000897c = add i32 %v1_10008978, %v2_10008970
  store i32 %v2_1000897c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000897c, i32* %v1_10008970, align 4
  br label %dec_label_pc_10008984

dec_label_pc_10008984:                            ; preds = %dec_label_pc_10008960, %dec_label_pc_1000896c
  %v0_10008984 = load i32, i32* @r28, align 4
  %v1_10008984 = add i32 %v0_10008984, 28
  %v2_10008984 = inttoptr i32 %v1_10008984 to i32*
  %v3_10008984 = load i32, i32* %v2_10008984, align 4
  store i32 %v3_10008984, i32* %r9.global-to-local, align 4
  %v1_10008988 = add i32 %v3_10008984, 2
  br label %dec_label_pc_10008994

dec_label_pc_10008994:                            ; preds = %dec_label_pc_100084f8, %dec_label_pc_100085cc, %dec_label_pc_100086a8, %dec_label_pc_1000869c, %dec_label_pc_100086c4, %dec_label_pc_10008600, %dec_label_pc_100088a0, %dec_label_pc_10008750, %dec_label_pc_10008844, %dec_label_pc_10008984
  %storemerge2 = phi i32 [ %v1_10008988, %dec_label_pc_10008984 ], [ -1, %dec_label_pc_10008844 ], [ -1, %dec_label_pc_10008750 ], [ -1, %dec_label_pc_100088a0 ], [ -1, %dec_label_pc_10008600 ], [ -1, %dec_label_pc_100086c4 ], [ -1, %dec_label_pc_1000869c ], [ -1, %dec_label_pc_100086a8 ], [ -1, %dec_label_pc_100085cc ], [ -1, %dec_label_pc_100084f8 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_10008490, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_10008978, { 1, 0 }
  uselistorder i32 %v0_10008950, { 1, 0 }
  uselistorder i32 %v1_10008924, { 1, 2, 0 }
  uselistorder i32 %v1_1000890c, { 1, 0 }
  uselistorder i32 %v0_100088f8, { 0, 2, 1 }
  uselistorder i32 %v3_100088c8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100088c4, { 1, 2, 0 }
  uselistorder i32 %v1_100088b8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100088b0, { 1, 0 }
  uselistorder i32 %v0_100088b0, { 1, 2, 0 }
  uselistorder i32 %v3_10008878, { 1, 0, 2 }
  uselistorder i32 %v1_10008870, { 1, 0 }
  uselistorder i32 %v0_10008890, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100087e8, { 1, 2, 0 }
  uselistorder i32 %v1_100087c0, { 2, 1, 0 }
  uselistorder i32 %v1_100087ac, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10008790, { 1, 0, 2 }
  uselistorder i32 %v1_1000875c, { 1, 3, 2, 0 }
  uselistorder i32 %v1_10008718, { 0, 2, 3, 1 }
  uselistorder i32 %v0_100086dc, { 0, 3, 2, 1 }
  uselistorder i32 %v1_100086c8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10008638, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10008634, { 1, 0 }
  uselistorder i32 %v0_1000864c, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_100085b0, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_100085a8, { 1, 0 }
  uselistorder i32 %v1_10008598, { 1, 0 }
  uselistorder i32 %v3_10008590, { 1, 0, 2 }
  uselistorder i32 %v0_1000860c, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_100085dc, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_1000856c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10008554, { 1, 0 }
  uselistorder i32 %v2_10008548.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_10008528, { 1, 0 }
  uselistorder i32 %v1_10008510, { 1, 2, 0 }
  uselistorder i32 %v0_10008504, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 3, 4, 7, 8, 9, 5, 6, 0, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 30, { 3, 4, 5, 6, 7, 0, 8, 1, 2, 9, 10, 11, 12 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1000affc.167 to i32), { 3, 0, 1, 2, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1000afbc.166 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1, 6, 7 }
  uselistorder i32 -48, { 1, 3, 5, 4, 6, 2, 0 }
  uselistorder i32* @global_var_1001c35c, { 3, 0, 4, 1, 5, 6, 2, 7, 8 }
  uselistorder i32* @r1, { 2, 3, 4, 5, 7, 6, 1, 8, 0, 9, 10 }
  uselistorder i32 268566528, { 6, 7, 8, 9, 17, 18, 19, 10, 11, 20, 21, 12, 0, 13, 14, 1, 22, 3, 2, 4, 16, 15, 5 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008994, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_10008984, { 1, 0 }
  uselistorder label %dec_label_pc_10008950, { 1, 0 }
  uselistorder label %dec_label_pc_10008920, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100088ac, { 1, 0 }
  uselistorder label %dec_label_pc_10008898, { 1, 0 }
  uselistorder label %dec_label_pc_1000885c, { 1, 0 }
  uselistorder label %dec_label_pc_100087a4, { 1, 0 }
  uselistorder label %dec_label_pc_10008750, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008700, { 1, 0 }
  uselistorder label %dec_label_pc_100086d4, { 1, 0 }
  uselistorder label %dec_label_pc_10008688, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008684, { 1, 0 }
  uselistorder label %dec_label_pc_100085f8, { 1, 0 }
  uselistorder label %dec_label_pc_100085f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008590, { 1, 0 }
  uselistorder label %dec_label_pc_1000858c, { 1, 0 }
  uselistorder label %dec_label_pc_10008578, { 1, 0 }
  uselistorder label %dec_label_pc_10008558, { 1, 0 }
  uselistorder label %dec_label_pc_10008554, { 1, 0 }
  uselistorder label %dec_label_pc_10008538, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_100089a8 = load i32, i32* @lr, align 4
  store i32 %v0_100089a8, i32* %r0.global-to-local, align 4
  %v0_100089b0 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100089bc = add i32 %tmp, 16
  %v3_100089bc = inttoptr i32 %v2_100089bc to i32*
  %v4_100089bc = load i32, i32* %v3_100089bc, align 4
  store i32 %v4_100089bc, i32* %r9.global-to-local, align 4
  %v2_100089c0 = add i32 %tmp, 24
  %v3_100089c0 = inttoptr i32 %v2_100089c0 to i32*
  %v4_100089c0 = load i32, i32* %v3_100089c0, align 4
  store i32 %v4_100089c0, i32* %r0.global-to-local, align 4
  %v2_100089c4 = icmp ult i32 %v4_100089bc, %v4_100089c0
  br i1 %v2_100089c4, label %dec_label_pc_10008a2c, label %dec_label_pc_100089cc

dec_label_pc_100089cc:                            ; preds = %entry
  %v3_100089cc = load i16, i16* %arg1, align 2
  %v4_100089cc = zext i16 %v3_100089cc to i32
  %v1_100089d0 = and i32 %v4_100089cc, 131
  store i32 %v1_100089d0, i32* %r0.global-to-local, align 4
  %v2_100089d4 = icmp ugt i32 %v1_100089d0, 128
  br i1 %v2_100089d4, label %dec_label_pc_100089ec, label %dec_label_pc_100089dc

dec_label_pc_100089dc:                            ; preds = %dec_label_pc_100089cc
  store i32 268470756, i32* @lr, align 4
  %v3_100089e0 = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_100089bc)
  store i32 %v3_100089e0, i32* %r3.global-to-local, align 4
  %v3_100089e4 = icmp eq i32 %v3_100089e0, 0
  br i1 %v3_100089e4, label %dec_label_pc_100089dc.dec_label_pc_100089ec_crit_edge, label %dec_label_pc_10008ac8

dec_label_pc_100089dc.dec_label_pc_100089ec_crit_edge: ; preds = %dec_label_pc_100089dc
  %v0_100089ec.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100089ec

dec_label_pc_100089ec:                            ; preds = %dec_label_pc_100089dc.dec_label_pc_100089ec_crit_edge, %dec_label_pc_100089cc
  %v2_10008a4c = phi i32 [ %v0_100089ec.pre, %dec_label_pc_100089dc.dec_label_pc_100089ec_crit_edge ], [ %tmp, %dec_label_pc_100089cc ]
  %v1_100089ec = inttoptr i32 %v2_10008a4c to i16*
  %v2_100089ec = load i16, i16* %v1_100089ec, align 2
  %v3_100089ec = zext i16 %v2_100089ec to i32
  %v1_100089f0 = and i32 %v3_100089ec, 2
  store i32 %v1_100089f0, i32* %r0.global-to-local, align 4
  %v3_100089f0 = icmp eq i32 %v1_100089f0, 0
  br i1 %v3_100089f0, label %dec_label_pc_10008a1c, label %dec_label_pc_100089f8

dec_label_pc_100089f8:                            ; preds = %dec_label_pc_100089ec
  %v1_100089f8 = call i32 @__asm_rlwinm(i32 %v3_100089ec, i32 2, i32 29, i32 29)
  %v1_100089fc = load i32, i32* @r31, align 4
  %v2_100089fc = add i32 %v1_100089fc, %v1_100089f8
  store i32 %v2_100089fc, i32* %r9.global-to-local, align 4
  %v1_10008a00 = add i32 %v2_100089fc, 39
  %v2_10008a00 = inttoptr i32 %v1_10008a00 to i8*
  %v3_10008a00 = load i8, i8* %v2_10008a00, align 1
  %v4_10008a00 = zext i8 %v3_10008a00 to i32
  store i32 %v4_10008a00, i32* %r0.global-to-local, align 4
  %v1_10008a04 = add nsw i32 %v3_100089ec, -1
  store i32 %v1_10008a04, i32* %r9.global-to-local, align 4
  %v1_10008a08 = trunc i32 %v1_10008a04 to i16
  %v3_10008a08 = inttoptr i32 %v1_100089fc to i16*
  store i16 %v1_10008a08, i16* %v3_10008a08, align 2
  %v0_10008a0c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10008a0c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10008a14 = load i32, i32* @r31, align 4
  %v2_10008a14 = add i32 %v1_10008a14, 40
  %v3_10008a14 = inttoptr i32 %v2_10008a14 to i32*
  store i32 0, i32* %v3_10008a14, align 4
  br label %dec_label_pc_10008acc

dec_label_pc_10008a1c:                            ; preds = %dec_label_pc_100089ec
  %v1_10008a1c = add i32 %v2_10008a4c, 16
  %v2_10008a1c = inttoptr i32 %v1_10008a1c to i32*
  %v3_10008a1c = load i32, i32* %v2_10008a1c, align 4
  store i32 %v3_10008a1c, i32* %r9.global-to-local, align 4
  %v1_10008a20 = add i32 %v2_10008a4c, 20
  %v2_10008a20 = inttoptr i32 %v1_10008a20 to i32*
  %v3_10008a20 = load i32, i32* %v2_10008a20, align 4
  store i32 %v3_10008a20, i32* %r0.global-to-local, align 4
  %v4_10008a24 = icmp eq i32 %v3_10008a20, %v3_10008a1c
  br i1 %v4_10008a24, label %dec_label_pc_10008a38, label %dec_label_pc_10008a2c

dec_label_pc_10008a2c:                            ; preds = %dec_label_pc_10008a1c, %entry
  %v1_10008aa07 = phi i32 [ %v2_10008a4c, %dec_label_pc_10008a1c ], [ %tmp, %entry ]
  %v0_10008a2c = phi i32 [ %v3_10008a1c, %dec_label_pc_10008a1c ], [ %v4_100089bc, %entry ]
  %v1_10008a2c = inttoptr i32 %v0_10008a2c to i8*
  %v2_10008a2c = load i8, i8* %v1_10008a2c, align 1
  %v3_10008a2c = zext i8 %v2_10008a2c to i32
  store i32 %v3_10008a2c, i32* %r3.global-to-local, align 4
  %v1_10008a30 = add i32 %v0_10008a2c, 1
  store i32 %v1_10008a30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008aa0

dec_label_pc_10008a38:                            ; preds = %dec_label_pc_10008a1c
  %v1_10008a38 = add i32 %v2_10008a4c, 4
  %v2_10008a38 = inttoptr i32 %v1_10008a38 to i32*
  %v3_10008a38 = load i32, i32* %v2_10008a38, align 4
  store i32 %v3_10008a38, i32* %r0.global-to-local, align 4
  %v3_10008a3c = icmp eq i32 %v3_10008a38, -2
  br i1 %v3_10008a3c, label %dec_label_pc_10008a44, label %dec_label_pc_10008a54

dec_label_pc_10008a44:                            ; preds = %dec_label_pc_10008a38
  %v1_10008a44 = or i32 %v3_100089ec, 4
  store i32 %v1_10008a44, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10008a4c = trunc i32 %v1_10008a44 to i16
  store i16 %v1_10008a4c, i16* %v1_100089ec, align 2
  br label %dec_label_pc_10008acc

dec_label_pc_10008a54:                            ; preds = %dec_label_pc_10008a38
  %v1_10008a54 = and i32 %v3_100089ec, 768
  store i32 %v1_10008a54, i32* %r0.global-to-local, align 4
  %v3_10008a54 = icmp eq i32 %v1_10008a54, 0
  br i1 %v3_10008a54, label %dec_label_pc_10008a68, label %dec_label_pc_10008a5c

dec_label_pc_10008a5c:                            ; preds = %dec_label_pc_10008a54
  store i32 ptrtoint (i32** @global_var_1001c384.130 to i32), i32* %r3.global-to-local, align 4
  store i32 268470888, i32* @lr, align 4
  %v4_10008a64 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_1001c384.130 to i16*), i32 %v3_10008a1c)
  store i32 %v4_10008a64, i32* %r3.global-to-local, align 4
  %v0_10008a68.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008a68

dec_label_pc_10008a68:                            ; preds = %dec_label_pc_10008a54, %dec_label_pc_10008a5c
  %v0_10008aa8 = phi i32 [ %v2_10008a4c, %dec_label_pc_10008a54 ], [ %v0_10008a68.pre, %dec_label_pc_10008a5c ]
  %v1_10008a68 = add i32 %v0_10008aa8, 8
  %v2_10008a68 = inttoptr i32 %v1_10008a68 to i32*
  %v3_10008a68 = load i32, i32* %v2_10008a68, align 4
  store i32 %v3_10008a68, i32* %r9.global-to-local, align 4
  %v1_10008a6c = add i32 %v0_10008aa8, 12
  %v2_10008a6c = inttoptr i32 %v1_10008a6c to i32*
  %v3_10008a6c = load i32, i32* %v2_10008a6c, align 4
  store i32 %v3_10008a6c, i32* %r0.global-to-local, align 4
  %v4_10008a70 = icmp eq i32 %v3_10008a6c, %v3_10008a68
  br i1 %v4_10008a70, label %dec_label_pc_10008aa8, label %dec_label_pc_10008a78

dec_label_pc_10008a78:                            ; preds = %dec_label_pc_10008a68
  %v2_10008a78 = add i32 %v0_10008aa8, 24
  %v3_10008a78 = inttoptr i32 %v2_10008a78 to i32*
  store i32 %v3_10008a68, i32* %v3_10008a78, align 4
  %v0_10008a7c = load i32, i32* @r31, align 4
  store i32 %v0_10008a7c, i32* %r3.global-to-local, align 4
  store i32 268470916, i32* @lr, align 4
  %v3_10008a80 = call i32 @__stdio_rfill(i32 %v0_10008a7c, i32 %v3_10008a68)
  store i32 %v3_10008a80, i32* %r3.global-to-local, align 4
  %v3_10008a84 = icmp eq i32 %v3_10008a80, 0
  br i1 %v3_10008a84, label %dec_label_pc_10008ac8, label %dec_label_pc_10008a8c

dec_label_pc_10008a8c:                            ; preds = %dec_label_pc_10008a78
  %v0_10008a8c = load i32, i32* @r31, align 4
  %v1_10008a8c = add i32 %v0_10008a8c, 20
  %v2_10008a8c = inttoptr i32 %v1_10008a8c to i32*
  %v3_10008a8c = load i32, i32* %v2_10008a8c, align 4
  store i32 %v3_10008a8c, i32* %r0.global-to-local, align 4
  %v1_10008a90 = add i32 %v0_10008a8c, 16
  %v2_10008a90 = inttoptr i32 %v1_10008a90 to i32*
  %v3_10008a90 = load i32, i32* %v2_10008a90, align 4
  store i32 %v3_10008a90, i32* %r9.global-to-local, align 4
  %v2_10008a94 = add i32 %v0_10008a8c, 24
  %v3_10008a94 = inttoptr i32 %v2_10008a94 to i32*
  store i32 %v3_10008a8c, i32* %v3_10008a94, align 4
  %v0_10008a98 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008a98 = add i32 %v0_10008a98, 1
  store i32 %v1_10008a98, i32* %r0.global-to-local, align 4
  %v1_10008a9c = inttoptr i32 %v0_10008a98 to i8*
  %v2_10008a9c = load i8, i8* %v1_10008a9c, align 1
  %v3_10008a9c = zext i8 %v2_10008a9c to i32
  store i32 %v3_10008a9c, i32* %r3.global-to-local, align 4
  %v1_10008aa0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008aa0

dec_label_pc_10008aa0:                            ; preds = %dec_label_pc_10008a2c, %dec_label_pc_10008a8c
  %v1_10008aa0 = phi i32 [ %v1_10008aa07, %dec_label_pc_10008a2c ], [ %v1_10008aa0.pre, %dec_label_pc_10008a8c ]
  %v0_10008aa0 = phi i32 [ %v1_10008a30, %dec_label_pc_10008a2c ], [ %v1_10008a98, %dec_label_pc_10008a8c ]
  %v2_10008aa0 = add i32 %v1_10008aa0, 16
  %v3_10008aa0 = inttoptr i32 %v2_10008aa0 to i32*
  store i32 %v0_10008aa0, i32* %v3_10008aa0, align 4
  br label %dec_label_pc_10008acc

dec_label_pc_10008aa8:                            ; preds = %dec_label_pc_10008a68
  %v1_10008aa8 = inttoptr i32 %v0_10008aa8 to i16*
  store i32 %v0_10008aa8, i32* %r3.global-to-local, align 4
  %v2_10008aac = ptrtoint i8* %stack_var_-24 to i32
  store i32 268470968, i32* @lr, align 4
  %v5_10008ab4 = call i32 @__stdio_READ(i16* %v1_10008aa8, i32 %v2_10008aac, i32 1)
  store i32 %v5_10008ab4, i32* %r3.global-to-local, align 4
  %v3_10008ab8 = icmp eq i32 %v5_10008ab4, 0
  br i1 %v3_10008ab8, label %dec_label_pc_10008ac8, label %dec_label_pc_10008ac0

dec_label_pc_10008ac0:                            ; preds = %dec_label_pc_10008aa8
  %v3_10008ac0 = load i8, i8* %stack_var_-24, align 1
  %v4_10008ac0 = sext i8 %v3_10008ac0 to i32
  store i32 %v4_10008ac0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008acc

dec_label_pc_10008ac8:                            ; preds = %dec_label_pc_100089dc, %dec_label_pc_10008aa8, %dec_label_pc_10008a78
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008acc

dec_label_pc_10008acc:                            ; preds = %dec_label_pc_10008ac0, %dec_label_pc_10008aa0, %dec_label_pc_10008a44, %dec_label_pc_100089f8, %dec_label_pc_10008ac8
  store i32 %v0_100089a8, i32* %r0.global-to-local, align 4
  store i32 %v0_100089b0, i32* @r31, align 4
  %v0_10008adc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008adc

; uselistorder directives
  uselistorder i32 %v0_10008aa8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_10008a2c, { 1, 0 }
  uselistorder i32 %v3_10008a1c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100089fc, { 1, 0 }
  uselistorder i32 %v3_100089ec, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v2_10008a4c, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i16* bitcast (i32** @global_var_1001c384.130 to i16*), { 1, 0 }
  uselistorder i16* @global_var_1001c260.20, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10008acc, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10008ac8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008aa0, { 1, 0 }
  uselistorder label %dec_label_pc_10008a68, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_10008af8 = call i32 @__GI_strlen()
  store i32 %v0_10008af8, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10008b14.172 to i32), i32* @lr, align 4
  %v4_10008b10 = inttoptr i32 %arg2 to i16*
  %v5_10008b10 = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_10008af8, i16* %v4_10008b10)
  %v1_10008b18 = load i32, i32* @r27, align 4
  %v4_10008b18 = icmp eq i32 %v5_10008b10, %v1_10008b18
  br i1 %v4_10008b18, label %dec_label_pc_10008b20, label %dec_label_pc_10008b24

dec_label_pc_10008b20:                            ; preds = %entry
  br label %dec_label_pc_10008b24

dec_label_pc_10008b24:                            ; preds = %entry, %dec_label_pc_10008b20
  %v0_10008b24 = phi i32 [ -1, %entry ], [ %v5_10008b10, %dec_label_pc_10008b20 ]
  ret i32 %v0_10008b24

; uselistorder directives
  uselistorder label %dec_label_pc_10008b24, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_10008b54 = load i16, i16* %arg4, align 2
  %v4_10008b54 = zext i16 %v3_10008b54 to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_10008b64 = call i32 @__asm_rlwinm(i32 %v4_10008b54, i32 0, i32 24, i32 25)
  %v3_10008b6c = icmp eq i32 %v1_10008b64, 192
  br i1 %v3_10008b6c, label %dec_label_pc_10008b80, label %dec_label_pc_10008b74

dec_label_pc_10008b74:                            ; preds = %entry
  store i32 268471160, i32* @lr, align 4
  %v3_10008b74 = call i32 @__stdio_trans2w_o(i16* nonnull %arg4)
  %v3_10008b78 = icmp eq i32 %v3_10008b74, 0
  br i1 %v3_10008b78, label %dec_label_pc_10008b80, label %dec_label_pc_10008bd8

dec_label_pc_10008b80:                            ; preds = %dec_label_pc_10008b74, %entry
  %v0_10008b80 = load i32, i32* @r29, align 4
  %v3_10008b80 = icmp eq i32 %v0_10008b80, 0
  %v0_10008b84 = load i32, i32* @r30, align 4
  %v3_10008b84 = icmp eq i32 %v0_10008b84, 0
  %brmerge = or i1 %v3_10008b80, %v3_10008b84
  br i1 %brmerge, label %dec_label_pc_10008bd8, label %dec_label_pc_10008b90

dec_label_pc_10008b90:                            ; preds = %dec_label_pc_10008b80
  %v2_10008b98 = udiv i32 -1, %v0_10008b80
  %v0_10008b9c = load i32, i32* @r31, align 4
  %v3_10008ba0 = icmp ugt i32 %v0_10008b84, %v2_10008b98
  %v1_10008bb8 = inttoptr i32 %v0_10008b9c to i16*
  br i1 %v3_10008ba0, label %dec_label_pc_10008bb8, label %dec_label_pc_10008ba8

dec_label_pc_10008ba8:                            ; preds = %dec_label_pc_10008b90
  %v0_10008b94 = load i32, i32* @r28, align 4
  %v2_10008ba8 = mul i32 %v0_10008b84, %v0_10008b80
  store i32 %v2_10008ba8, i32* %r4.global-to-local, align 4
  store i32 268471216, i32* @lr, align 4
  %v5_10008bac = call i32 @__stdio_fwrite(i32 %v0_10008b94, i32 %v2_10008ba8, i16* %v1_10008bb8)
  %v1_10008bb0 = load i32, i32* @r29, align 4
  %v2_10008bb0 = udiv i32 %v5_10008bac, %v1_10008bb0
  store i32 %v2_10008bb0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10008bdc

dec_label_pc_10008bb8:                            ; preds = %dec_label_pc_10008b90
  %v2_10008bb8 = load i16, i16* %v1_10008bb8, align 2
  %v1_10008bbc = or i16 %v2_10008bb8, 8
  store i16 %v1_10008bbc, i16* %v1_10008bb8, align 2
  %v0_10008bc4 = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10008bd0 = inttoptr i32 %v0_10008bc4 to i32*
  store i32 22, i32* %v2_10008bd0, align 4
  %v0_10008be0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10008bdc

dec_label_pc_10008bd8:                            ; preds = %dec_label_pc_10008b80, %dec_label_pc_10008b74
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10008bdc

dec_label_pc_10008bdc:                            ; preds = %dec_label_pc_10008bb8, %dec_label_pc_10008ba8, %dec_label_pc_10008bd8
  %v0_10008be0 = phi i32 [ %v0_10008be0.pre, %dec_label_pc_10008bb8 ], [ %v2_10008bb0, %dec_label_pc_10008ba8 ], [ 0, %dec_label_pc_10008bd8 ]
  ret i32 %v0_10008be0

; uselistorder directives
  uselistorder i16* %v1_10008bb8, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 1, 2, 3, 5, 6, 0, 4 }
  uselistorder i32 128, { 8, 5, 16, 9, 10, 11, 6, 12, 13, 14, 2, 7, 17, 0, 1, 18, 19, 4, 3, 15 }
  uselistorder label %dec_label_pc_10008bdc, { 2, 0, 1 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268471312, i32* @lr, align 4
  %v0_10008c0c = call i32 @memcpy()
  %v0_10008c14 = load i32, i32* @r28, align 4
  %v1_10008c14 = load i32, i32* @r29, align 4
  %v2_10008c14 = add i32 %v1_10008c14, %v0_10008c14
  ret i32 %v2_10008c14
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10008c28 = load i32, i32* @r4, align 4
  %v3_10008c28 = icmp eq i32 %v0_10008c28, 0
  %v0_10008c34 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008c28, i32 %v0_10008c34)
  %v1_10008c44 = load i32, i32* @r4, align 4
  %v2_10008c44 = add i32 %v1_10008c44, %tmp
  %v3_10008c48 = icmp ugt i32 %v2_10008c44, %tmp
  %v4_10008c48 = icmp eq i32 %v1_10008c44, 0
  %v2_10008c4c = or i1 %v4_10008c48, %v3_10008c48
  br i1 %v2_10008c4c, label %dec_label_pc_10008c54, label %dec_label_pc_10008c50

dec_label_pc_10008c3c:                            ; preds = %dec_label_pc_10008cbc
  br label %dec_label_pc_10008d00

dec_label_pc_10008c50:                            ; preds = %entry
  br label %dec_label_pc_10008c54

dec_label_pc_10008c54:                            ; preds = %entry, %dec_label_pc_10008c50
  %v0_10008d04 = phi i32 [ %v2_10008c44, %entry ], [ -1, %dec_label_pc_10008c50 ]
  %v1_10008c846 = urem i32 %tmp, 4
  %v3_10008c848 = icmp eq i32 %v1_10008c846, 0
  br i1 %v3_10008c848, label %dec_label_pc_10008c8c, label %dec_label_pc_10008c5c

dec_label_pc_10008c5c:                            ; preds = %dec_label_pc_10008c54, %dec_label_pc_10008c80
  %v0_10008c74 = phi i32 [ %v1_10008c80, %dec_label_pc_10008c80 ], [ %tmp, %dec_label_pc_10008c54 ]
  %v1_10008c5c = inttoptr i32 %v0_10008c74 to i8*
  %v2_10008c5c = load i8, i8* %v1_10008c5c, align 1
  %v3_10008c60 = icmp eq i8 %v2_10008c5c, 0
  br i1 %v3_10008c60, label %dec_label_pc_10008c68, label %dec_label_pc_10008c80

dec_label_pc_10008c68:                            ; preds = %dec_label_pc_10008c5c
  %v3_10008c68 = icmp ugt i32 %v0_10008d04, %v0_10008c74
  %v0_10008c74.v0_10008d04 = select i1 %v3_10008c68, i32 %v0_10008c74, i32 %v0_10008d04
  %v2_10008c78 = sub i32 %v0_10008c74.v0_10008d04, %tmp
  ret i32 %v2_10008c78

dec_label_pc_10008c80:                            ; preds = %dec_label_pc_10008c5c
  %v1_10008c80 = add i32 %v0_10008c74, 1
  %v1_10008c84 = urem i32 %v1_10008c80, 4
  %v3_10008c84 = icmp eq i32 %v1_10008c84, 0
  br i1 %v3_10008c84, label %dec_label_pc_10008c8c, label %dec_label_pc_10008c5c

dec_label_pc_10008c8c:                            ; preds = %dec_label_pc_10008c80, %dec_label_pc_10008c54
  %v0_10008c90 = phi i32 [ %tmp, %dec_label_pc_10008c54 ], [ %v1_10008c80, %dec_label_pc_10008c80 ]
  %v2_10008cf83 = icmp ult i32 %v0_10008c90, %v0_10008d04
  br i1 %v2_10008cf83, label %dec_label_pc_10008c9c, label %dec_label_pc_10008d00

dec_label_pc_10008c9c:                            ; preds = %dec_label_pc_10008c8c, %dec_label_pc_10008cf4
  %v0_10008c3c = phi i32 [ %v1_10008ca0, %dec_label_pc_10008cf4 ], [ %v0_10008c90, %dec_label_pc_10008c8c ]
  %v1_10008c9c = inttoptr i32 %v0_10008c3c to i32*
  %v2_10008c9c = load i32, i32* %v1_10008c9c, align 4
  %v1_10008ca0 = add i32 %v0_10008c3c, 4
  %v1_10008cac = add i32 %v2_10008c9c, -16843009
  %v2_10008cb0 = and i32 %v1_10008cac, -2139062144
  %v5_10008cb0 = icmp eq i32 %v2_10008cb0, 0
  %v1_10008cb4 = add i32 %v0_10008c3c, 1
  br i1 %v5_10008cb0, label %dec_label_pc_10008cf4, label %dec_label_pc_10008cbc

dec_label_pc_10008cbc:                            ; preds = %dec_label_pc_10008c9c
  %v2_10008cbc = inttoptr i32 %v0_10008c3c to i8*
  %v3_10008cbc = load i8, i8* %v2_10008cbc, align 1
  %v3_10008cc0 = icmp eq i8 %v3_10008cbc, 0
  br i1 %v3_10008cc0, label %dec_label_pc_10008c3c, label %dec_label_pc_10008cc8

dec_label_pc_10008cc8:                            ; preds = %dec_label_pc_10008cbc
  %v2_10008cc8 = inttoptr i32 %v1_10008cb4 to i8*
  %v3_10008cc8 = load i8, i8* %v2_10008cc8, align 1
  %v3_10008ccc = icmp eq i8 %v3_10008cc8, 0
  br i1 %v3_10008ccc, label %dec_label_pc_10008d00, label %dec_label_pc_10008cd4

dec_label_pc_10008cd4:                            ; preds = %dec_label_pc_10008cc8
  %v1_10008cd4 = add i32 %v0_10008c3c, 2
  %v2_10008cd4 = inttoptr i32 %v1_10008cd4 to i8*
  %v3_10008cd4 = load i8, i8* %v2_10008cd4, align 1
  %v3_10008cdc = icmp eq i8 %v3_10008cd4, 0
  br i1 %v3_10008cdc, label %dec_label_pc_10008d00, label %dec_label_pc_10008ce4

dec_label_pc_10008ce4:                            ; preds = %dec_label_pc_10008cd4
  %v1_10008ce4 = add i32 %v0_10008c3c, 3
  %v2_10008ce4 = inttoptr i32 %v1_10008ce4 to i8*
  %v3_10008ce4 = load i8, i8* %v2_10008ce4, align 1
  %v3_10008cec = icmp eq i8 %v3_10008ce4, 0
  br i1 %v3_10008cec, label %dec_label_pc_10008d00, label %dec_label_pc_10008cf4

dec_label_pc_10008cf4:                            ; preds = %dec_label_pc_10008ce4, %dec_label_pc_10008c9c
  %v2_10008cf8 = icmp ult i32 %v1_10008ca0, %v0_10008d04
  br i1 %v2_10008cf8, label %dec_label_pc_10008c9c, label %dec_label_pc_10008d00

dec_label_pc_10008d00:                            ; preds = %dec_label_pc_10008cf4, %dec_label_pc_10008cc8, %dec_label_pc_10008cd4, %dec_label_pc_10008ce4, %dec_label_pc_10008c8c, %dec_label_pc_10008c3c
  %v0_10008d0c = phi i32 [ %v0_10008c3c, %dec_label_pc_10008c3c ], [ %v0_10008c90, %dec_label_pc_10008c8c ], [ %v1_10008ce4, %dec_label_pc_10008ce4 ], [ %v1_10008cd4, %dec_label_pc_10008cd4 ], [ %v1_10008cb4, %dec_label_pc_10008cc8 ], [ %v0_10008d04, %dec_label_pc_10008cf4 ]
  %v3_10008d00 = icmp ugt i32 %v0_10008d04, %v0_10008d0c
  %v0_10008d0c.v0_10008d04 = select i1 %v3_10008d00, i32 %v0_10008d0c, i32 %v0_10008d04
  %v2_10008d10 = sub i32 %v0_10008d0c.v0_10008d04, %tmp
  ret i32 %v2_10008d10

; uselistorder directives
  uselistorder i32 %v1_10008ca0, { 1, 0 }
  uselistorder i32 %v0_10008c3c, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v0_10008c90, { 1, 0, 2 }
  uselistorder i32 %v1_10008c80, { 1, 0, 2 }
  uselistorder i32 %v0_10008c74, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10008d04, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_10008c44, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_10008d00, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_10008c9c, { 1, 0 }
  uselistorder label %dec_label_pc_10008c5c, { 1, 0 }
  uselistorder label %dec_label_pc_10008c54, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268471600, i32* @lr, align 4
  %v0_10008d2c = call i32 @__xpg_strerror_r()
  %v0_10008d34 = load i32, i32* @r29, align 4
  ret i32 %v0_10008d34
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_10008d48 = load i32, i32* @r3, align 4
  %v2_10008d48 = icmp ugt i32 %v0_10008d48, 124
  %v0_10008d58 = load i32, i32* @r4, align 4
  store i32 %v0_10008d58, i32* %r27.global-to-local, align 4
  %v0_10008d60 = load i32, i32* @r5, align 4
  br i1 %v2_10008d48, label %dec_label_pc_10008da4, label %dec_label_pc_10008d68

dec_label_pc_10008d68:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1000b050.174 to i32), i32* %r30.global-to-local, align 4
  %v3_10008d847 = icmp eq i32 %v0_10008d48, 0
  br i1 %v3_10008d847, label %dec_label_pc_10008d98, label %dec_label_pc_10008d78

dec_label_pc_10008d78:                            ; preds = %dec_label_pc_10008d68, %dec_label_pc_10008d78
  %v0_10008d7c = phi i32 [ %v1_10008d7c, %dec_label_pc_10008d78 ], [ ptrtoint ([8 x i8]* @global_var_1000b050.174 to i32), %dec_label_pc_10008d68 ]
  %v1_10008d7c = add i32 %v0_10008d7c, 1
  store i32 %v1_10008d7c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008d78

dec_label_pc_10008d98:                            ; preds = %dec_label_pc_10008d68
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10008dd8

dec_label_pc_10008da4:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_10008d48, 0
  %v1_10008da8 = zext i1 %tmp to i32
  %v2_10008da8 = ashr i32 %v0_10008d48, 31
  %v3_10008da8 = and i32 %v2_10008da8, -2
  %v4_10008da8 = or i32 %v3_10008da8, %v1_10008da8
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_10008dbc = bitcast i32* %stack_var_-39 to i8*
  %v6_10008dbc = call i32 @_uintmaxtostr(i8* %v5_10008dbc, i32 %v4_10008da8, i32 %v0_10008d48, i32 -10, i32 0)
  %v1_10008dc4 = add i32 %v6_10008dbc, -14
  store i32 %v1_10008dc4, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1000b040.175 to i32), i32* @r4, align 4
  store i32 %v1_10008dc4, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268471768, i32* @lr, align 4
  %v0_10008dd4 = call i32 @memcpy()
  %v0_10008dd8.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_10008ddc.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_10008dec.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10008dd8

dec_label_pc_10008dd8:                            ; preds = %dec_label_pc_10008d98, %dec_label_pc_10008da4
  %v0_10008dec = phi i32 [ %v0_10008d60, %dec_label_pc_10008d98 ], [ %v0_10008dec.pre, %dec_label_pc_10008da4 ]
  %v0_10008ddc = phi i32 [ ptrtoint ([8 x i8]* @global_var_1000b050.174 to i32), %dec_label_pc_10008d98 ], [ %v0_10008ddc.pre, %dec_label_pc_10008da4 ]
  %v1_10008de0 = phi i32 [ %v0_10008d58, %dec_label_pc_10008d98 ], [ %v0_10008dd8.pre, %dec_label_pc_10008da4 ]
  %tmp19 = icmp slt i32 %v1_10008de0, 0
  %v1_10008dd8 = zext i1 %tmp19 to i32
  %v2_10008dd8 = ashr i32 %v1_10008de0, 31
  %v3_10008dd8 = and i32 %v2_10008dd8, -2
  %v4_10008dd8 = or i32 %v3_10008dd8, %v1_10008dd8
  store i32 %v0_10008ddc, i32* @r3, align 4
  %v2_10008de0 = xor i32 %v4_10008dd8, %v1_10008de0
  %v2_10008de4 = sub i32 %v4_10008dd8, %v2_10008de0
  %tmp20 = icmp slt i32 %v2_10008de4, 0
  %v1_10008de8 = zext i1 %tmp20 to i32
  %v2_10008de8 = ashr i32 %v2_10008de4, 31
  %v3_10008de8 = and i32 %v2_10008de8, -2
  %v4_10008de8 = or i32 %v3_10008de8, %v1_10008de8
  %v2_10008dec = and i32 %v4_10008de8, %v0_10008dec
  store i32 %v2_10008dec, i32* @r29, align 4
  %v0_10008df0 = call i32 @__GI_strlen()
  %v1_10008df4 = add i32 %v0_10008df0, 1
  store i32 %v1_10008df4, i32* %r31.global-to-local, align 4
  %v1_10008df8 = load i32, i32* @r29, align 4
  %v3_10008df8 = icmp ugt i32 %v1_10008df4, %v1_10008df8
  br i1 %v3_10008df8, label %dec_label_pc_10008e00, label %dec_label_pc_10008e08

dec_label_pc_10008e00:                            ; preds = %dec_label_pc_10008dd8
  store i32 %v1_10008df8, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10008e08

dec_label_pc_10008e08:                            ; preds = %dec_label_pc_10008dd8, %dec_label_pc_10008e00
  %v0_10008e18 = phi i32 [ %v1_10008df8, %dec_label_pc_10008e00 ], [ %v1_10008df4, %dec_label_pc_10008dd8 ]
  %v3_10008e08 = icmp eq i32 %v0_10008e18, 0
  br i1 %v3_10008e08, label %dec_label_pc_10008e2c, label %dec_label_pc_10008e10

dec_label_pc_10008e10:                            ; preds = %dec_label_pc_10008e08
  %v0_10008e10 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10008e10, i32* @r4, align 4
  %v0_10008e14 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10008e14, i32* @r3, align 4
  store i32 %v0_10008e18, i32* @r5, align 4
  store i32 268471840, i32* @lr, align 4
  %v0_10008e1c = call i32 @memcpy()
  %v1_10008e20 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008e20 = add i32 %v1_10008e20, %v0_10008e14
  %v3_10008e28 = add i32 %v2_10008e20, -1
  %v4_10008e28 = inttoptr i32 %v3_10008e28 to i8*
  store i8 0, i8* %v4_10008e28, align 1
  br label %dec_label_pc_10008e2c

dec_label_pc_10008e2c:                            ; preds = %dec_label_pc_10008e08, %dec_label_pc_10008e10
  %v0_10008e2c = load i32, i32* %r28.global-to-local, align 4
  %v3_10008e2c = icmp eq i32 %v0_10008e2c, 0
  br i1 %v3_10008e2c, label %dec_label_pc_10008e3c, label %dec_label_pc_10008e34

dec_label_pc_10008e34:                            ; preds = %dec_label_pc_10008e2c
  %v0_10008e34 = call i32 @__errno_location()
  %v0_10008e38 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008e38 = inttoptr i32 %v0_10008e34 to i32*
  store i32 %v0_10008e38, i32* %v2_10008e38, align 4
  %v0_10008e40.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10008e3c

dec_label_pc_10008e3c:                            ; preds = %dec_label_pc_10008e2c, %dec_label_pc_10008e34
  %v0_10008e40 = phi i32 [ 0, %dec_label_pc_10008e2c ], [ %v0_10008e40.pre, %dec_label_pc_10008e34 ]
  ret i32 %v0_10008e40

; uselistorder directives
  uselistorder i32 %v2_10008de4, { 1, 0 }
  uselistorder i32 %v4_10008dd8, { 1, 0 }
  uselistorder i32 %v1_10008de0, { 1, 2, 0 }
  uselistorder i32 %v1_10008d7c, { 1, 0 }
  uselistorder i32 %v0_10008d48, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 34, { 2, 4, 5, 0, 1, 3, 6, 7 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1000b050.174 to i32), { 1, 0, 2 }
  uselistorder i32 124, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008e3c, { 1, 0 }
  uselistorder label %dec_label_pc_10008e2c, { 1, 0 }
  uselistorder label %dec_label_pc_10008e08, { 1, 0 }
  uselistorder label %dec_label_pc_10008dd8, { 1, 0 }
  uselistorder label %dec_label_pc_10008d78, { 1, 0 }
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_10008e58 = load i32, i32* bitcast (i32** @global_var_1001c390.155 to i32*), align 4
  %v0_10008e60.pre = load i32, i32* @r3, align 4
  %v1_10008e60.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10008e60

dec_label_pc_10008e60:                            ; preds = %dec_label_pc_10008e88, %entry
  %v0_10008e9c6 = phi i32 [ %v0_10008e9c7, %dec_label_pc_10008e88 ], [ 0, %entry ]
  %v0_10008e8c = phi i32 [ %v1_10008e8c, %dec_label_pc_10008e88 ], [ %v1_10008e60.pre, %entry ]
  %v0_10008e90 = phi i32 [ %v1_10008e90, %dec_label_pc_10008e88 ], [ %v0_10008e60.pre, %entry ]
  %v4_10008e60 = icmp eq i32 %v0_10008e90, %v0_10008e8c
  %.pre = inttoptr i32 %v0_10008e90 to i8*
  br i1 %v4_10008e60, label %dec_label_pc_10008e88, label %dec_label_pc_10008e68

dec_label_pc_10008e68:                            ; preds = %dec_label_pc_10008e60
  %v2_10008e68 = load i8, i8* %.pre, align 1
  %v3_10008e68 = zext i8 %v2_10008e68 to i32
  %v1_10008e6c = inttoptr i32 %v0_10008e8c to i8*
  %v2_10008e6c = load i8, i8* %v1_10008e6c, align 1
  %v3_10008e6c = zext i8 %v2_10008e6c to i32
  %v1_10008e70 = mul nuw nsw i32 %v3_10008e68, 2
  %v1_10008e74 = mul nuw nsw i32 %v3_10008e6c, 2
  %v2_10008e78 = add i32 %v1_10008e70, %v3_10008e58
  %v3_10008e78 = inttoptr i32 %v2_10008e78 to i16*
  %v4_10008e78 = load i16, i16* %v3_10008e78, align 2
  %v5_10008e78 = sext i16 %v4_10008e78 to i32
  %v2_10008e7c = add i32 %v1_10008e74, %v3_10008e58
  %v3_10008e7c = inttoptr i32 %v2_10008e7c to i16*
  %v4_10008e7c = load i16, i16* %v3_10008e7c, align 2
  %v5_10008e7c = sext i16 %v4_10008e7c to i32
  %v2_10008e80 = sub nsw i32 %v5_10008e78, %v5_10008e7c
  %v4_10008e84 = icmp eq i16 %v4_10008e78, %v4_10008e7c
  br i1 %v4_10008e84, label %dec_label_pc_10008e88, label %dec_label_pc_10008e9c

dec_label_pc_10008e88:                            ; preds = %dec_label_pc_10008e60, %dec_label_pc_10008e68
  %v0_10008e9c7 = phi i32 [ %v2_10008e80, %dec_label_pc_10008e68 ], [ %v0_10008e9c6, %dec_label_pc_10008e60 ]
  %v2_10008e88 = load i8, i8* %.pre, align 1
  %v1_10008e8c = add i32 %v0_10008e8c, 1
  %v1_10008e90 = add i32 %v0_10008e90, 1
  %v3_10008e94 = icmp eq i8 %v2_10008e88, 0
  br i1 %v3_10008e94, label %dec_label_pc_10008e9c, label %dec_label_pc_10008e60

dec_label_pc_10008e9c:                            ; preds = %dec_label_pc_10008e88, %dec_label_pc_10008e68
  %v0_10008e9c = phi i32 [ %v0_10008e9c7, %dec_label_pc_10008e88 ], [ %v2_10008e80, %dec_label_pc_10008e68 ]
  ret i32 %v0_10008e9c

; uselistorder directives
  uselistorder i32 %v2_10008e80, { 1, 0 }
  uselistorder i32 %v0_10008e90, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008e88, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10008ea4 = load i32, i32* @r4, align 4
  %v3_10008ea4 = icmp eq i32 %v0_10008ea4, 1
  %v0_10008eb4 = load i32, i32* @r3, align 4
  store i32 %v0_10008eb4, i32* @r27, align 4
  %v0_10008ebc = load i32, i32* @r5, align 4
  store i32 %v0_10008ebc, i32* @r31, align 4
  br i1 %v3_10008ea4, label %dec_label_pc_10008ee0, label %dec_label_pc_10008ec4

dec_label_pc_10008ec4:                            ; preds = %entry
  %v3_10008ec4 = icmp eq i32 %v0_10008ea4, 2
  br i1 %v3_10008ec4, label %dec_label_pc_10008f00, label %dec_label_pc_10008ecc

dec_label_pc_10008ecc:                            ; preds = %dec_label_pc_10008ec4
  %v3_10008ecc = icmp eq i32 %v0_10008ea4, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_10008ecc, label %dec_label_pc_10008f08, label %dec_label_pc_10008eec

dec_label_pc_10008ee0:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10008f08

dec_label_pc_10008eec:                            ; preds = %dec_label_pc_10008ecc
  %v0_10008eec = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_10008ef8 = inttoptr i32 %v0_10008eec to i32*
  store i32 22, i32* %v2_10008ef8, align 4
  br label %dec_label_pc_10008ff0

dec_label_pc_10008f00:                            ; preds = %dec_label_pc_10008ec4
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10008f08

dec_label_pc_10008f08:                            ; preds = %dec_label_pc_10008ecc, %dec_label_pc_10008ee0, %dec_label_pc_10008f00
  %v1_10008f08 = inttoptr i32 %v0_10008ebc to i32*
  %v2_10008f08 = load i32, i32* %v1_10008f08, align 4
  store i32 19, i32* @r5, align 4
  %v1_10008f10 = add i32 %v0_10008ebc, 4
  %v2_10008f10 = inttoptr i32 %v1_10008f10 to i32*
  %v3_10008f10 = load i32, i32* %v2_10008f10, align 4
  store i32 %v3_10008f10, i32* %r9.global-to-local, align 4
  %v1_10008f14 = add i32 %v0_10008ebc, 17
  store i32 %v1_10008f14, i32* @r4, align 4
  %v1_10008f18 = add i32 %v0_10008ebc, 8
  %v2_10008f18 = inttoptr i32 %v1_10008f18 to i32*
  %v3_10008f18 = load i32, i32* %v2_10008f18, align 4
  %v2_10008f1c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10008f1c, i32* @r3, align 4
  %v2_10008f24 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10008f24, i32* @r26, align 4
  store i32 %v2_10008f08, i32* %stack_var_-72, align 4
  store i32 268472148, i32* @lr, align 4
  %v0_10008f50 = call i32 @memcpy()
  %v0_10008f54 = load i32, i32* @r27, align 4
  %v0_10008f58 = load i32, i32* @r30, align 4
  store i32 %v2_10008f24, i32* @r5, align 4
  store i32 268472168, i32* @lr, align 4
  %v3_10008f64 = call i32 @ioctl(i32 %v0_10008f54, i32 %v0_10008f58)
  store i32 %v3_10008f64, i32* @r28, align 4
  %v3_10008f68 = icmp eq i32 %v3_10008f64, 0
  br i1 %v3_10008f68, label %dec_label_pc_10008f70, label %dec_label_pc_10008ff0

dec_label_pc_10008f70:                            ; preds = %dec_label_pc_10008f08
  %v0_10008f70 = load i32, i32* @r30, align 4
  %v3_10008f74 = icmp eq i32 %v0_10008f70, -2144570348
  br i1 %v3_10008f74, label %dec_label_pc_10008f7c, label %dec_label_pc_10008fec

dec_label_pc_10008f7c:                            ; preds = %dec_label_pc_10008f70
  %v0_10008f7c = call i32 @__errno_location()
  store i32 %v0_10008f7c, i32* @r29, align 4
  %v0_10008f8c = load i32, i32* @r27, align 4
  store i32 %v2_10008f24, i32* @r5, align 4
  %v1_10008f94 = inttoptr i32 %v0_10008f7c to i32*
  %v2_10008f94 = load i32, i32* %v1_10008f94, align 4
  store i32 %v2_10008f94, i32* @r30, align 4
  store i32 268472224, i32* @lr, align 4
  %v3_10008f9c = call i32 @ioctl(i32 %v0_10008f8c, i32 1076655123)
  %v3_10008fa0 = icmp eq i32 %v3_10008f9c, 0
  br i1 %v3_10008fa0, label %dec_label_pc_10008fb0, label %dec_label_pc_10008fa8

dec_label_pc_10008fa8:                            ; preds = %dec_label_pc_10008f7c
  %v0_10008fa8 = load i32, i32* @r30, align 4
  %v1_10008fa8 = load i32, i32* @r29, align 4
  %v2_10008fa8 = inttoptr i32 %v1_10008fa8 to i32*
  store i32 %v0_10008fa8, i32* %v2_10008fa8, align 4
  br label %dec_label_pc_10008ff0

dec_label_pc_10008fb0:                            ; preds = %dec_label_pc_10008f7c
  %v0_10008fb0 = load i32, i32* @r31, align 4
  %v1_10008fb0 = add i32 %v0_10008fb0, 8
  %v2_10008fb0 = inttoptr i32 %v1_10008fb0 to i32*
  %v3_10008fb0 = load i32, i32* %v2_10008fb0, align 4
  %v1_10008fb8 = call i32 @__asm_rlwinm(i32 %v3_10008fb0, i32 0, i32 19, i32 20)
  %v1_10008fbc = call i32 @__asm_rlwinm(i32 %v3_10008f18, i32 0, i32 19, i32 20)
  store i32 %v1_10008fbc, i32* %r9.global-to-local, align 4
  %v4_10008fc0 = icmp eq i32 %v1_10008fb8, %v1_10008fbc
  br i1 %v4_10008fc0, label %dec_label_pc_10008fc8, label %dec_label_pc_10008fdc

dec_label_pc_10008fc8:                            ; preds = %dec_label_pc_10008fb0
  %v1_10008fc8 = and i32 %v3_10008fb0, 768
  store i32 %v1_10008fc8, i32* %r9.global-to-local, align 4
  %v3_10008fc8 = icmp eq i32 %v1_10008fc8, 0
  br i1 %v3_10008fc8, label %dec_label_pc_10008fec, label %dec_label_pc_10008fd0

dec_label_pc_10008fd0:                            ; preds = %dec_label_pc_10008fc8
  %v1_10008fd0 = call i32 @__asm_rlwinm(i32 %v3_10008f18, i32 0, i32 22, i32 23)
  %v0_10008fd4 = load i32, i32* %r9.global-to-local, align 4
  %v4_10008fd4 = icmp eq i32 %v0_10008fd4, %v1_10008fd0
  br i1 %v4_10008fd4, label %dec_label_pc_10008fec, label %dec_label_pc_10008fdc

dec_label_pc_10008fdc:                            ; preds = %dec_label_pc_10008fb0, %dec_label_pc_10008fd0
  store i32 -1, i32* @r28, align 4
  %v1_10008fe4 = load i32, i32* @r29, align 4
  %v2_10008fe4 = inttoptr i32 %v1_10008fe4 to i32*
  store i32 22, i32* %v2_10008fe4, align 4
  br label %dec_label_pc_10008ff0

dec_label_pc_10008fec:                            ; preds = %dec_label_pc_10008f70, %dec_label_pc_10008fd0, %dec_label_pc_10008fc8
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10008ff0

dec_label_pc_10008ff0:                            ; preds = %dec_label_pc_10008f08, %dec_label_pc_10008fdc, %dec_label_pc_10008fa8, %dec_label_pc_10008eec, %dec_label_pc_10008fec
  %v0_10008ff4 = load i32, i32* @r28, align 4
  ret i32 %v0_10008ff4

; uselistorder directives
  uselistorder i32 %v0_10008ebc, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 1, 0 }
  uselistorder i32 (i32, i32)* @ioctl, { 2, 1, 0 }
  uselistorder i32 19, { 4, 5, 6, 1, 2, 0, 7, 3 }
  uselistorder label %dec_label_pc_10008ff0, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10008fec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008fdc, { 1, 0 }
  uselistorder label %dec_label_pc_10008f08, { 2, 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000900c = load i32, i32* @lr, align 4
  store i32 %v0_1000900c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10009018 = load i32, i32* @r4, align 4
  store i32 %v0_10009018, i32* @r29, align 4
  %v0_1000901c = load i32, i32* @r5, align 4
  store i32 %v0_1000901c, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1000908813 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1000908813, label %dec_label_pc_100090a4, label %dec_label_pc_10009098

dec_label_pc_1000902c:                            ; preds = %dec_label_pc_10009098
  store i32 268472368, i32* @lr, align 4
  %v3_1000902c = call i32 @__GI_strchr(i32 %v0_1000909814, i32 46)
  store i32 %v3_1000902c, i32* @r30, align 4
  %v3_10009030 = icmp eq i32 %v3_1000902c, 0
  %v0_10009034 = load i32, i32* @r31, align 4
  store i32 %v0_10009034, i32* @r3, align 4
  %v2_10009038 = sub i32 %v3_1000902c, %v0_10009034
  store i32 %v2_10009038, i32* %r0.global-to-local, align 4
  br i1 %v3_10009030, label %dec_label_pc_10009040, label %dec_label_pc_10009048

dec_label_pc_10009040:                            ; preds = %dec_label_pc_1000902c
  %v0_10009040 = call i32 @__GI_strlen()
  store i32 %v0_10009040, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_10009040, 16777216
  %v1_10009044 = sdiv i32 %sext, 16777216
  store i32 %v1_10009044, i32* %r0.global-to-local, align 4
  %v0_10009058.pre = load i32, i32* @r31, align 4
  %v0_10009068.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009048

dec_label_pc_10009048:                            ; preds = %dec_label_pc_1000902c, %dec_label_pc_10009040
  %v0_10009068 = phi i32 [ %v3_1000902c, %dec_label_pc_1000902c ], [ %v0_10009068.pre, %dec_label_pc_10009040 ]
  %v0_10009058 = phi i32 [ %v0_10009034, %dec_label_pc_1000902c ], [ %v0_10009058.pre, %dec_label_pc_10009040 ]
  %v0_10009074 = phi i32 [ %v2_10009038, %dec_label_pc_1000902c ], [ %v1_10009044, %dec_label_pc_10009040 ]
  %v0_1000904c = load i32, i32* @r28, align 4
  %v1_1000904c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000904c = sub i32 %v1_1000904c, %v0_1000904c
  %v1_10009050 = add i32 %v0_1000904c, 1
  store i32 %v1_10009050, i32* %r11.global-to-local, align 4
  %v1_10009054 = add i32 %v2_1000904c, -1
  store i32 %v0_10009058, i32* @r4, align 4
  %v0_1000905c = load i32, i32* @r29, align 4
  %v2_1000905c = add i32 %v0_1000905c, %v1_10009050
  store i32 %v2_1000905c, i32* @r3, align 4
  store i32 %v0_10009074, i32* @r5, align 4
  %v2_10009064 = icmp ult i32 %v0_10009074, %v1_10009054
  %v1_10009068 = add i32 %v0_10009068, 1
  store i32 %v1_10009068, i32* @r31, align 4
  %v3_10009048.not = icmp ne i32 %v0_10009074, 0
  %or.cond = and i1 %v2_10009064, %v3_10009048.not
  br i1 %or.cond, label %dec_label_pc_10009074, label %dec_label_pc_100090bc

dec_label_pc_10009074:                            ; preds = %dec_label_pc_10009048
  %v3_10009074 = trunc i32 %v0_10009074 to i8
  %v4_10009074 = add i32 %v0_1000905c, %v0_1000904c
  %v5_10009074 = inttoptr i32 %v4_10009074 to i8*
  store i8 %v3_10009074, i8* %v5_10009074, align 1
  %v0_10009078 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009078 = load i32, i32* %r0.global-to-local, align 4
  %v2_10009078 = add i32 %v1_10009078, %v0_10009078
  store i32 %v2_10009078, i32* @r28, align 4
  store i32 268472448, i32* @lr, align 4
  %v0_1000907c = call i32 @memcpy()
  store i32 %v0_1000907c, i32* %r3.global-to-local, align 4
  %v0_10009080 = load i32, i32* @r30, align 4
  %v3_10009080 = icmp eq i32 %v0_10009080, 0
  br i1 %v3_10009080, label %dec_label_pc_100090a4, label %dec_label_pc_10009074.dec_label_pc_10009088_crit_edge

dec_label_pc_10009074.dec_label_pc_10009088_crit_edge: ; preds = %dec_label_pc_10009074
  %v0_10009088.pre = load i32, i32* @r31, align 4
  %v3_10009088 = icmp eq i32 %v0_10009088.pre, 0
  store i32 %v0_10009088.pre, i32* @r3, align 4
  br i1 %v3_10009088, label %dec_label_pc_100090a4, label %dec_label_pc_10009098

dec_label_pc_10009098:                            ; preds = %entry, %dec_label_pc_10009074.dec_label_pc_10009088_crit_edge
  %v0_1000909814 = phi i32 [ %v0_10009088.pre, %dec_label_pc_10009074.dec_label_pc_10009088_crit_edge ], [ %tmp, %entry ]
  %v1_10009098 = inttoptr i32 %v0_1000909814 to i8*
  %v2_10009098 = load i8, i8* %v1_10009098, align 1
  %v3_10009098 = zext i8 %v2_10009098 to i32
  store i32 %v3_10009098, i32* %r0.global-to-local, align 4
  %v3_1000909c = icmp eq i8 %v2_10009098, 0
  br i1 %v3_1000909c, label %dec_label_pc_100090a4, label %dec_label_pc_1000902c

dec_label_pc_100090a4:                            ; preds = %dec_label_pc_10009074, %dec_label_pc_10009074.dec_label_pc_10009088_crit_edge, %dec_label_pc_10009098, %entry
  %v0_100090a4 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_100090a4, 1
  br i1 %tmp10, label %dec_label_pc_100090bc, label %dec_label_pc_100090ac

dec_label_pc_100090ac:                            ; preds = %dec_label_pc_100090a4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100090b0 = load i32, i32* @r28, align 4
  %v1_100090b0 = add i32 %v0_100090b0, 1
  store i32 %v1_100090b0, i32* %r3.global-to-local, align 4
  %v1_100090b4 = load i32, i32* @r29, align 4
  %v4_100090b4 = add i32 %v1_100090b4, %v0_100090b0
  %v5_100090b4 = inttoptr i32 %v4_100090b4 to i8*
  store i8 0, i8* %v5_100090b4, align 1
  %v0_100090d0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100090c0

dec_label_pc_100090bc:                            ; preds = %dec_label_pc_10009048, %dec_label_pc_100090a4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100090c0

dec_label_pc_100090c0:                            ; preds = %dec_label_pc_100090ac, %dec_label_pc_100090bc
  %v0_100090d0 = phi i32 [ %v0_100090d0.pre, %dec_label_pc_100090ac ], [ -1, %dec_label_pc_100090bc ]
  store i32 %v0_1000900c, i32* %r0.global-to-local, align 4
  ret i32 %v0_100090d0

; uselistorder directives
  uselistorder i32 %v0_1000909814, { 1, 0 }
  uselistorder i32 %v0_10009088.pre, { 0, 2, 1 }
  uselistorder i32 %v0_10009074, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10009044, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 3, 1, 0, 2, 4 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @__GI_strlen, { 3, 14, 13, 12, 15, 11, 10, 2, 1, 9, 8, 7, 5, 6, 4, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 46, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_100090c0, { 1, 0 }
  uselistorder label %dec_label_pc_100090bc, { 1, 0 }
  uselistorder label %dec_label_pc_100090a4, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10009098, { 1, 0 }
  uselistorder label %dec_label_pc_10009048, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_100090d8 = call i32 @__asm_mfcr()
  store i32 %v0_100090d8, i32* @r26, align 4
  %v3_100090e4 = icmp eq i32 %v0_100090d8, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_100090f4 = load i32, i32* @r6, align 4
  store i32 %v0_100090f4, i32* @r24, align 4
  br i1 %v3_100090e4, label %dec_label_pc_100091ac, label %dec_label_pc_100090fc

dec_label_pc_100090fc:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000918814 = load i32, i32* @r4, align 4
  %v2_1000918815 = add i32 %v1_1000918814, %v0_100090d8
  %v3_1000918816 = inttoptr i32 %v2_1000918815 to i8*
  %v4_1000918817 = load i8, i8* %v3_1000918816, align 1
  %v5_1000918818 = zext i8 %v4_1000918817 to i32
  store i32 %v5_1000918818, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_1000919020 = icmp eq i8 %v4_1000918817, 0
  br i1 %v3_1000919020, label %dec_label_pc_1000919c, label %dec_label_pc_1000910c

dec_label_pc_1000910c:                            ; preds = %dec_label_pc_100090fc, %dec_label_pc_10009184
  %v3_1000918c22 = phi i1 [ %v3_1000918c, %dec_label_pc_10009184 ], [ false, %dec_label_pc_100090fc ]
  %v5_1000918821 = phi i32 [ %v5_10009188, %dec_label_pc_10009184 ], [ %v5_1000918818, %dec_label_pc_100090fc ]
  br i1 %v3_1000918c22, label %dec_label_pc_10009114, label %dec_label_pc_10009110

dec_label_pc_10009110:                            ; preds = %dec_label_pc_1000910c
  %v0_10009110 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009110 = add i32 %v0_10009110, 1
  store i32 %v1_10009110, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10009114

dec_label_pc_10009114:                            ; preds = %dec_label_pc_1000910c, %dec_label_pc_10009110
  %v1_10009114 = call i32 @__asm_rlwinm(i32 %v5_1000918821, i32 0, i32 24, i32 25)
  %v0_10009118 = load i32, i32* @r4, align 4
  %v1_10009118 = add i32 %v0_10009118, 1
  store i32 %v1_10009118, i32* @r30, align 4
  %v3_1000911c = icmp eq i32 %v1_10009114, 192
  br i1 %v3_1000911c, label %dec_label_pc_10009124, label %dec_label_pc_10009144

dec_label_pc_10009124:                            ; preds = %dec_label_pc_10009114
  %v0_10009124 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10009124, label %dec_label_pc_1000912c, label %dec_label_pc_10009128

dec_label_pc_10009128:                            ; preds = %dec_label_pc_10009124
  %v0_10009128 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009128 = add i32 %v0_10009128, 1
  store i32 %v1_10009128, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000912c

dec_label_pc_1000912c:                            ; preds = %dec_label_pc_10009124, %dec_label_pc_10009128
  %v0_1000912c = load i32, i32* @r26, align 4
  %v2_1000912c = add i32 %v0_1000912c, %v1_10009118
  %v3_1000912c = inttoptr i32 %v2_1000912c to i8*
  %v4_1000912c = load i8, i8* %v3_1000912c, align 1
  %v5_1000912c = zext i8 %v4_1000912c to i32
  %v1_10009130 = call i32 @__asm_rlwinm(i32 %v5_1000918821, i32 8, i32 18, i32 23)
  %v0_10009134 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10009134, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_1000913c = or i32 %v5_1000912c, %v1_10009130
  store i32 %v2_1000913c, i32* @r4, align 4
  br label %dec_label_pc_10009184

dec_label_pc_10009144:                            ; preds = %dec_label_pc_10009114
  %v0_10009144 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009144 = add i32 %v0_10009144, %v5_1000918821
  store i32 %v2_10009144, i32* @r29, align 4
  %v1_10009148 = add i32 %v2_10009144, 1
  store i32 %v1_10009148, i32* @r28, align 4
  %v1_1000914c = load i32, i32* @r24, align 4
  %v2_1000914c = icmp ult i32 %v1_10009148, %v1_1000914c
  br i1 %v2_1000914c, label %dec_label_pc_10009154, label %dec_label_pc_100091ac

dec_label_pc_10009154:                            ; preds = %dec_label_pc_10009144
  %v0_10009154 = load i32, i32* @r26, align 4
  %v2_10009154 = add i32 %v0_10009154, %v1_10009118
  store i32 %v2_10009154, i32* @r4, align 4
  %v0_10009158 = load i32, i32* @r25, align 4
  %v2_10009158 = add i32 %v0_10009158, %v0_10009144
  store i32 %v2_10009158, i32* @r3, align 4
  store i32 %v5_1000918821, i32* @r5, align 4
  store i32 268472676, i32* @lr, align 4
  %v0_10009160 = call i32 @memcpy()
  %v0_10009164 = load i32, i32* @r30, align 4
  %v2_10009164 = add i32 %v0_10009164, %v5_1000918821
  store i32 %v2_10009164, i32* @r4, align 4
  %v0_10009168 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10009168, label %dec_label_pc_10009170, label %dec_label_pc_1000916c

dec_label_pc_1000916c:                            ; preds = %dec_label_pc_10009154
  %v0_1000916c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000916c = add i32 %v0_1000916c, %v5_1000918821
  store i32 %v2_1000916c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10009170

dec_label_pc_10009170:                            ; preds = %dec_label_pc_10009154, %dec_label_pc_1000916c
  %v0_10009170 = load i32, i32* @r26, align 4
  %v2_10009170 = add i32 %v0_10009170, %v2_10009164
  %v3_10009170 = inttoptr i32 %v2_10009170 to i8*
  %v4_10009170 = load i8, i8* %v3_10009170, align 1
  %v3_10009174 = icmp eq i8 %v4_10009170, 0
  br i1 %v3_10009174, label %dec_label_pc_10009180, label %dec_label_pc_1000917c

dec_label_pc_1000917c:                            ; preds = %dec_label_pc_10009170
  br label %dec_label_pc_10009180

dec_label_pc_10009180:                            ; preds = %dec_label_pc_10009170, %dec_label_pc_1000917c
  %v0_10009180.off0 = phi i8 [ 0, %dec_label_pc_10009170 ], [ 46, %dec_label_pc_1000917c ]
  %v1_10009180 = load i32, i32* @r25, align 4
  %v2_10009180 = load i32, i32* @r29, align 4
  %v4_10009180 = add i32 %v2_10009180, %v1_10009180
  %v5_10009180 = inttoptr i32 %v4_10009180 to i8*
  store i8 %v0_10009180.off0, i8* %v5_10009180, align 1
  %v0_10009184.pre = load i32, i32* @r28, align 4
  %v0_1000918c.pre.pre = load i32, i32* @r23, align 4
  %v1_10009188.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10009184

dec_label_pc_10009184:                            ; preds = %dec_label_pc_1000912c, %dec_label_pc_10009180
  %v1_10009188 = phi i32 [ %v2_1000913c, %dec_label_pc_1000912c ], [ %v1_10009188.pre, %dec_label_pc_10009180 ]
  %v0_1000918c.pre = phi i32 [ 0, %dec_label_pc_1000912c ], [ %v0_1000918c.pre.pre, %dec_label_pc_10009180 ]
  %v0_10009184 = phi i32 [ %v0_10009134, %dec_label_pc_1000912c ], [ %v0_10009184.pre, %dec_label_pc_10009180 ]
  %v0_10009188.pre = load i32, i32* @r26, align 4
  store i32 %v0_10009184, i32* %r11.global-to-local, align 4
  %v2_10009188 = add i32 %v1_10009188, %v0_10009188.pre
  %v3_10009188 = inttoptr i32 %v2_10009188 to i8*
  %v4_10009188 = load i8, i8* %v3_10009188, align 1
  %v5_10009188 = zext i8 %v4_10009188 to i32
  store i32 %v5_10009188, i32* @r31, align 4
  %v3_1000918c = icmp eq i32 %v0_1000918c.pre, 0
  store i1 %v3_1000918c, i1* %cr4_eq.global-to-local, align 1
  %v3_10009190 = icmp eq i8 %v4_10009188, 0
  br i1 %v3_10009190, label %dec_label_pc_10009198, label %dec_label_pc_1000910c

dec_label_pc_10009198:                            ; preds = %dec_label_pc_10009184
  %v0_100091a0.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_1000918c, label %dec_label_pc_100091ac, label %dec_label_pc_1000919c

dec_label_pc_1000919c:                            ; preds = %dec_label_pc_100090fc, %dec_label_pc_10009198
  %v0_100091a0.pre26 = phi i32 [ %v0_100091a0.pre.pre, %dec_label_pc_10009198 ], [ 0, %dec_label_pc_100090fc ]
  %v1_1000919c = add i32 %v0_100091a0.pre26, 1
  store i32 %v1_1000919c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100091ac

dec_label_pc_100091ac:                            ; preds = %dec_label_pc_10009144, %dec_label_pc_10009198, %dec_label_pc_1000919c, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_1000919c, %dec_label_pc_1000919c ], [ %v0_100091a0.pre.pre, %dec_label_pc_10009198 ], [ -1, %dec_label_pc_10009144 ]
  %v1_100091bc = call %0 @__asm_mtcrf(i32 8, i32 %v0_100090d8)
  %v9_100091bc = extractvalue %0 %v1_100091bc, 7
  store i4 %v9_100091bc, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_100091a0.pre.pre, { 1, 0 }
  uselistorder i1 %v3_1000918c, { 0, 2, 1 }
  uselistorder i32 %v5_10009188, { 1, 0 }
  uselistorder i32 %v5_1000918821, { 5, 4, 1, 3, 0, 2 }
  uselistorder i32 %v0_100090d8, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i8 46, { 0, 3, 1, 2, 4 }
  uselistorder i32 23, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 18, { 1, 0, 2, 3, 4 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r25, { 7, 8, 9, 0, 1, 2, 3, 4, 11, 12, 10, 13, 5, 6, 14, 15, 27, 28, 16, 17, 18, 19, 20, 21, 22, 29, 30, 23, 24, 25, 26 }
  uselistorder label %dec_label_pc_100091ac, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000919c, { 1, 0 }
  uselistorder label %dec_label_pc_10009184, { 1, 0 }
  uselistorder label %dec_label_pc_10009180, { 1, 0 }
  uselistorder label %dec_label_pc_10009170, { 1, 0 }
  uselistorder label %dec_label_pc_1000912c, { 1, 0 }
  uselistorder label %dec_label_pc_10009114, { 1, 0 }
  uselistorder label %dec_label_pc_1000910c, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_100091c8 = load i32, i32* @r3, align 4
  store i32 %v0_100091c8, i32* %r11.global-to-local, align 4
  %v3_100091c8 = icmp eq i32 %v0_100091c8, 0
  %v0_100091d0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100091c8, i32 %v0_100091d0)
  %v0_100091e0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_100091ec

dec_label_pc_100091d8:                            ; preds = %dec_label_pc_100091e8
  %v1_100091d8 = add i32 %v1_100091ec, 2
  br label %dec_label_pc_10009208

dec_label_pc_100091e8:                            ; preds = %dec_label_pc_100091ec
  %v2_10009200 = add i32 %v1_100091f0, %v5_100091ec
  %v3_100091fc = icmp eq i32 %v1_100091f8, 192
  br i1 %v3_100091fc, label %dec_label_pc_100091d8, label %dec_label_pc_100091ec

dec_label_pc_100091ec:                            ; preds = %dec_label_pc_100091e8, %entry
  %v1_100091ec = phi i32 [ %v2_10009200, %dec_label_pc_100091e8 ], [ %v0_100091e0, %entry ]
  %v0_100091ec = load i32, i32* %r11.global-to-local, align 4
  %v2_100091ec = add i32 %v0_100091ec, %v1_100091ec
  %v3_100091ec = inttoptr i32 %v2_100091ec to i8*
  %v4_100091ec = load i8, i8* %v3_100091ec, align 1
  %v5_100091ec = zext i8 %v4_100091ec to i32
  %v1_100091f0 = add i32 %v1_100091ec, 1
  %v3_100091f4 = icmp eq i8 %v4_100091ec, 0
  %v1_100091f8 = call i32 @__asm_rlwinm(i32 %v5_100091ec, i32 0, i32 24, i32 25)
  br i1 %v3_100091f4, label %dec_label_pc_10009208, label %dec_label_pc_100091e8

dec_label_pc_10009208:                            ; preds = %dec_label_pc_100091ec, %dec_label_pc_100091d8
  %v1_10009208 = phi i32 [ %v1_100091d8, %dec_label_pc_100091d8 ], [ %v1_100091f0, %dec_label_pc_100091ec ]
  %v0_10009208 = load i32, i32* @r4, align 4
  %v2_10009208 = sub i32 %v1_10009208, %v0_10009208
  ret i32 %v2_10009208

; uselistorder directives
  uselistorder i32 %v1_100091f0, { 1, 0 }
  uselistorder i32 %v5_100091ec, { 1, 0 }
  uselistorder i32 %v1_100091ec, { 2, 1, 0 }
  uselistorder i32 %v0_100091c8, { 1, 0 }
  uselistorder i32 25, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 192, { 1, 2, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10009210 = icmp eq i32 %arg1, 0
  store i32 16, i32* @r6, align 4
  %v2_1000922c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1000922c, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_10009210, label %dec_label_pc_10009238, label %dec_label_pc_10009240

dec_label_pc_10009238:                            ; preds = %entry
  %v2_10009238 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009238, i32* @r3, align 4
  br label %dec_label_pc_10009240

dec_label_pc_10009240:                            ; preds = %entry, %dec_label_pc_10009238
  %v0_10009244 = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_10009238 ]
  %v2_10009240 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_10009244, i32* %stack_var_-40, align 4
  store i32 %v2_10009240, i32* %stack_var_-36, align 4
  store i32 268472912, i32* @lr, align 4
  %v0_1000924c = call i32 @__GI_wcsnrtombs()
  %v3_10009250 = icmp eq i32 %v0_1000924c, 0
  br i1 %v3_10009250, label %dec_label_pc_10009258, label %dec_label_pc_1000925c

dec_label_pc_10009258:                            ; preds = %dec_label_pc_10009240
  br label %dec_label_pc_1000925c

dec_label_pc_1000925c:                            ; preds = %dec_label_pc_10009240, %dec_label_pc_10009258
  %v0_10009268 = phi i32 [ %v0_1000924c, %dec_label_pc_10009240 ], [ 1, %dec_label_pc_10009258 ]
  ret i32 %v0_10009268

; uselistorder directives
  uselistorder label %dec_label_pc_1000925c, { 1, 0 }
  uselistorder label %dec_label_pc_10009240, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_10009270 = load i32, i32* @r5, align 4
  store i32 %v0_10009270, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_10009278 = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_10009278

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000927c = load i32, i32* @r3, align 4
  %v3_1000927c = icmp eq i32 %v0_1000927c, 0
  %v0_10009280 = load i32, i32* @lr, align 4
  store i32 %v0_10009280, i32* %r0.global-to-local, align 4
  br i1 %v3_1000927c, label %dec_label_pc_100092a8, label %dec_label_pc_10009290

dec_label_pc_10009290:                            ; preds = %entry
  %v1_10009290 = load i32, i32* @r4, align 4
  %v4_10009290 = icmp eq i32 %v0_1000927c, %v1_10009290
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_10009290, label %dec_label_pc_1000929c, label %dec_label_pc_100092d4

dec_label_pc_1000929c:                            ; preds = %dec_label_pc_10009290
  %v2_100092a0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100092a0, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100092d4

dec_label_pc_100092a8:                            ; preds = %entry
  %v2_100092a011 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100092a011, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_100092d4

dec_label_pc_100092b4:                            ; preds = %dec_label_pc_10009314.dec_label_pc_100092f4_crit_edge, %dec_label_pc_100092f4.preheader
  %v0_100092b4 = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_100092c0 = inttoptr i32 %v0_100092b4 to i32*
  store i32 84, i32* %v2_100092c0, align 4
  %v0_10009338.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009334

dec_label_pc_100092c8:                            ; preds = %dec_label_pc_10009304
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10009324.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10009320

dec_label_pc_100092d4:                            ; preds = %dec_label_pc_1000929c, %dec_label_pc_10009290, %dec_label_pc_100092a8
  %v2_100093047 = phi i32 [ %v2_100092a0, %dec_label_pc_1000929c ], [ %v0_1000927c, %dec_label_pc_10009290 ], [ %v2_100092a011, %dec_label_pc_100092a8 ]
  %v0_100092d4 = load i32, i32* @r5, align 4
  %v1_100092d4 = load i32, i32* @r6, align 4
  %v3_100092d4 = icmp ugt i32 %v0_100092d4, %v1_100092d4
  br i1 %v3_100092d4, label %dec_label_pc_100092dc, label %dec_label_pc_100092e0

dec_label_pc_100092dc:                            ; preds = %dec_label_pc_100092d4
  store i32 %v1_100092d4, i32* @r5, align 4
  br label %dec_label_pc_100092e0

dec_label_pc_100092e0:                            ; preds = %dec_label_pc_100092d4, %dec_label_pc_100092dc
  %v0_100092ec = phi i32 [ %v0_100092d4, %dec_label_pc_100092d4 ], [ %v1_100092d4, %dec_label_pc_100092dc ]
  %v1_100092e0 = add i32 %v0_100092ec, 1
  store i32 %v1_100092e0, i32* %r0.global-to-local, align 4
  %v0_100092e4 = load i32, i32* @r4, align 4
  %v1_100092e4 = inttoptr i32 %v0_100092e4 to i32*
  %v2_100092e4 = load i32, i32* %v1_100092e4, align 4
  store i32 %v2_100092e4, i32* %r11.global-to-local, align 4
  store i32 %v0_100092ec, i32* %r9.global-to-local, align 4
  store i32 %v0_100092ec, i32* %ctr.global-to-local, align 4
  %v2_1000931c3 = icmp eq i32 %v0_100092ec, 0
  br i1 %v2_1000931c3, label %dec_label_pc_10009320, label %dec_label_pc_100092f4.preheader

dec_label_pc_100092f4.preheader:                  ; preds = %dec_label_pc_100092e0
  %v1_100092f416 = inttoptr i32 %v2_100092e4 to i32*
  %v2_100092f417 = load i32, i32* %v1_100092f416, align 4
  store i32 %v2_100092f417, i32* %r0.global-to-local, align 4
  %v1_100092f818 = add i32 %v2_100092e4, 4
  store i32 %v1_100092f818, i32* %r11.global-to-local, align 4
  %v2_100092fc20 = icmp ugt i32 %v2_100092f417, 127
  br i1 %v2_100092fc20, label %dec_label_pc_100092b4, label %dec_label_pc_10009304.lr.ph

dec_label_pc_10009304.lr.ph:                      ; preds = %dec_label_pc_100092f4.preheader
  %extract.t = trunc i32 %v2_100092f417 to i8
  br label %dec_label_pc_10009304

dec_label_pc_10009304:                            ; preds = %dec_label_pc_10009304.lr.ph, %dec_label_pc_10009314.dec_label_pc_100092f4_crit_edge
  %v2_100092f423.off0 = phi i8 [ %extract.t, %dec_label_pc_10009304.lr.ph ], [ %extract.t24, %dec_label_pc_10009314.dec_label_pc_100092f4_crit_edge ]
  %v2_1000930422 = phi i32 [ %v2_100093047, %dec_label_pc_10009304.lr.ph ], [ %v2_10009314, %dec_label_pc_10009314.dec_label_pc_100092f4_crit_edge ]
  %v3_10009304 = inttoptr i32 %v2_1000930422 to i8*
  store i8 %v2_100092f423.off0, i8* %v3_10009304, align 1
  %v0_10009308 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009308 = urem i32 %v0_10009308, 256
  store i32 %v1_10009308, i32* %r0.global-to-local, align 4
  %v3_1000930c = icmp eq i32 %v1_10009308, 0
  br i1 %v3_1000930c, label %dec_label_pc_100092c8, label %dec_label_pc_10009314

dec_label_pc_10009314:                            ; preds = %dec_label_pc_10009304
  %v0_10009314 = load i32, i32* @r3, align 4
  %v1_10009314 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009314 = add i32 %v1_10009314, %v0_10009314
  store i32 %v2_10009314, i32* @r3, align 4
  %v0_10009318 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009318 = add i32 %v0_10009318, -1
  store i32 %v1_10009318, i32* %r9.global-to-local, align 4
  %v0_1000931c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000931c = add i32 %v0_1000931c, -1
  store i32 %v1_1000931c, i32* %ctr.global-to-local, align 4
  %v2_1000931c = icmp eq i32 %v1_1000931c, 0
  br i1 %v2_1000931c, label %dec_label_pc_10009320, label %dec_label_pc_10009314.dec_label_pc_100092f4_crit_edge

dec_label_pc_10009314.dec_label_pc_100092f4_crit_edge: ; preds = %dec_label_pc_10009314
  %v0_100092f4.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_100092f4 = inttoptr i32 %v0_100092f4.pre to i32*
  %v2_100092f4 = load i32, i32* %v1_100092f4, align 4
  store i32 %v2_100092f4, i32* %r0.global-to-local, align 4
  %v1_100092f8 = add i32 %v0_100092f4.pre, 4
  store i32 %v1_100092f8, i32* %r11.global-to-local, align 4
  %v2_100092fc = icmp ugt i32 %v2_100092f4, 127
  %extract.t24 = trunc i32 %v2_100092f4 to i8
  br i1 %v2_100092fc, label %dec_label_pc_100092b4, label %dec_label_pc_10009304

dec_label_pc_10009320:                            ; preds = %dec_label_pc_10009314, %dec_label_pc_100092e0, %dec_label_pc_100092c8
  %v0_10009324 = phi i32 [ %v0_10009324.pre, %dec_label_pc_100092c8 ], [ %v2_100093047, %dec_label_pc_100092e0 ], [ %v2_10009314, %dec_label_pc_10009314 ]
  %v2_10009320 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009320, i32* %r0.global-to-local, align 4
  %v4_10009324 = icmp eq i32 %v0_10009324, %v2_10009320
  br i1 %v4_10009324, label %dec_label_pc_10009330, label %dec_label_pc_1000932c

dec_label_pc_1000932c:                            ; preds = %dec_label_pc_10009320
  %v0_1000932c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000932c = load i32, i32* @r4, align 4
  %v2_1000932c = inttoptr i32 %v1_1000932c to i32*
  store i32 %v0_1000932c, i32* %v2_1000932c, align 4
  br label %dec_label_pc_10009330

dec_label_pc_10009330:                            ; preds = %dec_label_pc_10009320, %dec_label_pc_1000932c
  %v0_10009330 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009330 = load i32, i32* @r5, align 4
  %v2_10009330 = sub i32 %v1_10009330, %v0_10009330
  store i32 %v2_10009330, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009334

dec_label_pc_10009334:                            ; preds = %dec_label_pc_100092b4, %dec_label_pc_10009330
  %v0_10009338 = phi i32 [ %v0_10009338.pre, %dec_label_pc_100092b4 ], [ %v2_10009330, %dec_label_pc_10009330 ]
  store i32 %v0_10009280, i32* %r0.global-to-local, align 4
  ret i32 %v0_10009338

; uselistorder directives
  uselistorder i32 %v1_1000931c, { 1, 0 }
  uselistorder i32 %v2_10009314, { 0, 2, 1 }
  uselistorder i32 %v1_10009308, { 1, 0 }
  uselistorder i32 %v0_100092ec, { 2, 3, 0, 1 }
  uselistorder i32 %v2_100093047, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 1, 3, 5, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 7, 8, 5, 3, 6 }
  uselistorder i32 127, { 2, 0, 3, 1, 4 }
  uselistorder i32 84, { 4, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009334, { 1, 0 }
  uselistorder label %dec_label_pc_10009330, { 1, 0 }
  uselistorder label %dec_label_pc_10009304, { 1, 0 }
  uselistorder label %dec_label_pc_100092e0, { 1, 0 }
  uselistorder label %dec_label_pc_100092d4, { 2, 0, 1 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10009354 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10009360 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10009368 = and i16 %v3_10009360, 4
  %v3_10009368 = icmp eq i16 %v1_10009368, 0
  br i1 %v3_10009368, label %dec_label_pc_10009370, label %dec_label_pc_100093a8

dec_label_pc_10009370:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_1000937c, label %dec_label_pc_10009374

dec_label_pc_10009374:                            ; preds = %dec_label_pc_10009370
  br label %dec_label_pc_1000937c

dec_label_pc_1000937c:                            ; preds = %dec_label_pc_10009370, %dec_label_pc_10009374
  %v1_1000937c = add i32 %tmp, 4
  %v2_1000937c = inttoptr i32 %v1_1000937c to i32*
  %v3_1000937c = load i32, i32* %v2_1000937c, align 4
  store i32 %v3_1000937c, i32* %r3.global-to-local, align 4
  store i32 268473220, i32* @lr, align 4
  %v1_10009380 = call i32 @__libc_read(i32 %v3_1000937c)
  store i32 %v1_10009380, i32* %r3.global-to-local, align 4
  %v2_10009384 = icmp sgt i32 %v1_10009380, 0
  br i1 %v2_10009384, label %dec_label_pc_100093a8, label %dec_label_pc_1000938c

dec_label_pc_1000938c:                            ; preds = %dec_label_pc_1000937c
  %v3_10009384 = icmp eq i32 %v1_10009380, 0
  %v0_1000938c = load i32, i32* @r31, align 4
  %v1_1000938c = inttoptr i32 %v0_1000938c to i16*
  %v2_1000938c = load i16, i16* %v1_1000938c, align 2
  br i1 %v3_10009384, label %dec_label_pc_10009394, label %dec_label_pc_1000939c

dec_label_pc_10009394:                            ; preds = %dec_label_pc_1000938c
  %v1_10009394 = or i16 %v2_1000938c, 4
  br label %dec_label_pc_100093a4

dec_label_pc_1000939c:                            ; preds = %dec_label_pc_1000938c
  %v1_1000939c = or i16 %v2_1000938c, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100093a4

dec_label_pc_100093a4:                            ; preds = %dec_label_pc_10009394, %dec_label_pc_1000939c
  %v1_10009394.sink.off0 = phi i16 [ %v1_10009394, %dec_label_pc_10009394 ], [ %v1_1000939c, %dec_label_pc_1000939c ]
  store i16 %v1_10009394.sink.off0, i16* %v1_1000938c, align 2
  %v0_100093b8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100093a8

dec_label_pc_100093a8:                            ; preds = %entry, %dec_label_pc_1000937c, %dec_label_pc_100093a4
  %v0_100093b8 = phi i32 [ 0, %entry ], [ %v1_10009380, %dec_label_pc_1000937c ], [ %v0_100093b8.pre, %dec_label_pc_100093a4 ]
  store i32 %v0_10009354, i32* @r31, align 4
  ret i32 %v0_100093b8

; uselistorder directives
  uselistorder i16 %v2_1000938c, { 1, 0 }
  uselistorder i32 %v1_10009380, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder label %dec_label_pc_100093a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100093a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000937c, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_100093bc = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_100093d8 = load i16, i16* %arg3, align 2
  %v1_100093dc = and i16 %v3_100093d8, 512
  %v3_100093dc = icmp eq i16 %v1_100093dc, 0
  br i1 %v3_100093dc, label %dec_label_pc_100093e4, label %dec_label_pc_100094f0

dec_label_pc_100093e4:                            ; preds = %entry
  %v2_100093e4 = add i32 %tmp, 4
  %v3_100093e4 = inttoptr i32 %v2_100093e4 to i32*
  %v4_100093e4 = load i32, i32* %v3_100093e4, align 4
  %v2_100093e8 = add i32 %tmp, 16
  %v3_100093e8 = inttoptr i32 %v2_100093e8 to i32*
  %v4_100093e8 = load i32, i32* %v3_100093e8, align 4
  store i32 %v4_100093e8, i32* @r3, align 4
  %v3_100093ec = icmp eq i32 %v4_100093e4, -2
  %v2_100093f0 = add i32 %tmp, 12
  %v3_100093f0 = inttoptr i32 %v2_100093f0 to i32*
  %v4_100093f0 = load i32, i32* %v3_100093f0, align 4
  %v2_100093f8 = sub i32 %v4_100093f0, %v4_100093e8
  br i1 %v3_100093ec, label %dec_label_pc_100093f8, label %dec_label_pc_10009428

dec_label_pc_100093f8:                            ; preds = %dec_label_pc_100093e4
  %v3_10009400 = icmp ult i32 %v2_100093f8, %arg2
  br i1 %v3_10009400, label %dec_label_pc_10009408, label %dec_label_pc_1000940c

dec_label_pc_10009408:                            ; preds = %dec_label_pc_100093f8
  br label %dec_label_pc_1000940c

dec_label_pc_1000940c:                            ; preds = %dec_label_pc_100093f8, %dec_label_pc_10009408
  %storemerge = phi i32 [ %v2_100093f8, %dec_label_pc_10009408 ], [ %arg2, %dec_label_pc_100093f8 ]
  %v0_10009410 = phi i32 [ %v2_100093f8, %dec_label_pc_10009408 ], [ %arg2, %dec_label_pc_100093f8 ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_10009410, i32* @r5, align 4
  store i32 268473368, i32* @lr, align 4
  %v0_10009414 = call i32 @memcpy()
  %v0_10009418 = load i32, i32* @r30, align 4
  %v1_10009418 = add i32 %v0_10009418, 16
  %v2_10009418 = inttoptr i32 %v1_10009418 to i32*
  %v3_10009418 = load i32, i32* %v2_10009418, align 4
  %v1_1000941c = load i32, i32* @r31, align 4
  %v2_1000941c = add i32 %v1_1000941c, %v3_10009418
  store i32 %v2_1000941c, i32* %v2_10009418, align 4
  br label %dec_label_pc_10009510

dec_label_pc_10009428:                            ; preds = %dec_label_pc_100093e4
  %v3_1000942c = icmp ult i32 %v2_100093f8, %arg2
  br i1 %v3_1000942c, label %dec_label_pc_100094cc, label %dec_label_pc_10009434

dec_label_pc_10009434:                            ; preds = %dec_label_pc_10009428
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268473408, i32* @lr, align 4
  %v0_1000943c = call i32 @memcpy()
  %v0_10009440 = load i32, i32* @r30, align 4
  %v1_10009440 = inttoptr i32 %v0_10009440 to i16*
  %v2_10009440 = load i16, i16* %v1_10009440, align 2
  %v1_10009444 = add i32 %v0_10009440, 16
  %v2_10009444 = inttoptr i32 %v1_10009444 to i32*
  %v3_10009444 = load i32, i32* %v2_10009444, align 4
  %v1_10009448 = and i16 %v2_10009440, 256
  %v3_10009448 = icmp eq i16 %v1_10009448, 0
  %v1_1000944c = load i32, i32* @r29, align 4
  %v2_1000944c = add i32 %v1_1000944c, %v3_10009444
  store i32 %v2_1000944c, i32* %v2_10009444, align 4
  br i1 %v3_10009448, label %dec_label_pc_10009510, label %dec_label_pc_10009458

dec_label_pc_10009458:                            ; preds = %dec_label_pc_10009434
  %v0_10009458 = load i32, i32* @r28, align 4
  %v0_10009460 = load i32, i32* @r29, align 4
  store i32 268473448, i32* @lr, align 4
  %v4_10009464 = call i32 @memrchr(i32 %v0_10009458, i32 10, i32 %v0_10009460, i32 %v2_1000944c)
  %v3_10009468 = icmp eq i32 %v4_10009464, 0
  br i1 %v3_10009468, label %dec_label_pc_10009510, label %dec_label_pc_10009470

dec_label_pc_10009470:                            ; preds = %dec_label_pc_10009458
  %v0_10009470 = load i32, i32* @r30, align 4
  store i32 %v0_10009470, i32* @r3, align 4
  store i32 268473464, i32* @lr, align 4
  %v0_10009474 = call i32 @__stdio_wcommit()
  %v3_10009478 = icmp eq i32 %v0_10009474, 0
  br i1 %v3_10009478, label %dec_label_pc_10009510, label %dec_label_pc_10009480

dec_label_pc_10009480:                            ; preds = %dec_label_pc_10009470
  %v0_10009480 = load i32, i32* @r29, align 4
  %v3_10009480 = icmp ugt i32 %v0_10009480, %v0_10009474
  %v0_10009474.v0_10009484 = select i1 %v3_10009480, i32 %v0_10009474, i32 %v0_10009480
  store i32 %v0_10009474.v0_10009484, i32* @r31, align 4
  %v2_10009490 = sub i32 %v0_10009480, %v0_10009474.v0_10009484
  %v0_10009498 = load i32, i32* @r28, align 4
  %v2_10009498 = add i32 %v0_10009498, %v2_10009490
  store i32 %v2_10009498, i32* @r28, align 4
  store i32 %v2_10009498, i32* @r3, align 4
  store i32 268473512, i32* @lr, align 4
  %v3_100094a4 = call i32 @__GI_memchr(i32 %v2_10009498, i32 10, i32 %v0_10009474.v0_10009484)
  %v3_100094a8 = icmp eq i32 %v3_100094a4, 0
  br i1 %v3_100094a8, label %dec_label_pc_10009510, label %dec_label_pc_100094b0

dec_label_pc_100094b0:                            ; preds = %dec_label_pc_10009480
  %v0_100094b0 = load i32, i32* @r30, align 4
  %v1_100094b0 = add i32 %v0_100094b0, 16
  %v2_100094b0 = inttoptr i32 %v1_100094b0 to i32*
  %v3_100094b0 = load i32, i32* %v2_100094b0, align 4
  %v0_100094b4 = load i32, i32* @r28, align 4
  %v1_100094b4 = load i32, i32* @r31, align 4
  %v2_100094b4 = sub i32 %v0_100094b4, %v3_100094a4
  %v2_100094b8 = add i32 %v2_100094b4, %v1_100094b4
  %v2_100094bc = sub i32 %v3_100094b0, %v2_100094b8
  %v1_100094c0 = load i32, i32* @r29, align 4
  %v2_100094c0 = sub i32 %v1_100094c0, %v2_100094b8
  store i32 %v2_100094c0, i32* @r29, align 4
  store i32 %v2_100094bc, i32* %v2_100094b0, align 4
  br label %dec_label_pc_10009510

dec_label_pc_100094cc:                            ; preds = %dec_label_pc_10009428
  %v2_100094cc = add i32 %tmp, 8
  %v3_100094cc = inttoptr i32 %v2_100094cc to i32*
  %v4_100094cc = load i32, i32* %v3_100094cc, align 4
  %v4_100094d0 = icmp eq i32 %v4_100093e8, %v4_100094cc
  br i1 %v4_100094d0, label %dec_label_pc_100094f0, label %dec_label_pc_100094d8

dec_label_pc_100094d8:                            ; preds = %dec_label_pc_100094cc
  store i32 %tmp, i32* @r3, align 4
  store i32 268473568, i32* @lr, align 4
  %v0_100094dc = call i32 @__stdio_wcommit()
  %v3_100094e0 = icmp eq i32 %v0_100094dc, 0
  br i1 %v3_100094e0, label %dec_label_pc_100094d8.dec_label_pc_100094f0_crit_edge, label %dec_label_pc_100094e8

dec_label_pc_100094d8.dec_label_pc_100094f0_crit_edge: ; preds = %dec_label_pc_100094d8
  %v0_100094f4.pre = load i32, i32* @r30, align 4
  %v0_100094f8.pre = load i32, i32* @r28, align 4
  %v0_100094fc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100094f0

dec_label_pc_100094e8:                            ; preds = %dec_label_pc_100094d8
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10009510

dec_label_pc_100094f0:                            ; preds = %dec_label_pc_100094d8.dec_label_pc_100094f0_crit_edge, %entry, %dec_label_pc_100094cc
  %v0_100094fc = phi i32 [ %v0_100094fc.pre, %dec_label_pc_100094d8.dec_label_pc_100094f0_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_100094cc ]
  %v0_100094f8 = phi i32 [ %v0_100094f8.pre, %dec_label_pc_100094d8.dec_label_pc_100094f0_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_100094cc ]
  %v0_100094f4 = phi i32 [ %v0_100094f4.pre, %dec_label_pc_100094d8.dec_label_pc_100094f0_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_100094cc ]
  %v1_100094f4 = inttoptr i32 %v0_100094f4 to i16*
  store i32 %v0_100094fc, i32* @r5, align 4
  store i32 %v0_100093bc, i32* @lr, align 4
  %v5_1000950c = call i32 @__stdio_WRITE(i16* %v1_100094f4, i32 %v0_100094f8)
  br label %dec_label_pc_10009510

dec_label_pc_10009510:                            ; preds = %dec_label_pc_10009480, %dec_label_pc_10009470, %dec_label_pc_10009458, %dec_label_pc_10009434, %dec_label_pc_100094e8, %dec_label_pc_100094b0, %dec_label_pc_1000940c, %dec_label_pc_100094f0
  %v0_10009514 = load i32, i32* @r29, align 4
  ret i32 %v0_10009514

; uselistorder directives
  uselistorder i32 %v2_100094b8, { 1, 0 }
  uselistorder i32 %v0_10009474.v0_10009484, { 0, 2, 1 }
  uselistorder i32 %v0_10009480, { 1, 0, 2 }
  uselistorder i32 %v2_100093f8, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 ()* @memcpy, { 18, 17, 7, 6, 4, 16, 15, 3, 14, 13, 12, 11, 19, 2, 1, 10, 9, 20, 0, 8, 5 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10009510, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_100094f0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000940c, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_10009528 = load i32, i32* @lr, align 4
  store i32 %v0_10009528, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000953c = add i32 %arg1, 8
  %v2_1000953c = inttoptr i32 %v1_1000953c to i32*
  %v3_1000953c = load i32, i32* %v2_1000953c, align 4
  %v1_10009540 = add i32 %arg1, 12
  %v2_10009540 = inttoptr i32 %v1_10009540 to i32*
  %v3_10009540 = load i32, i32* %v2_10009540, align 4
  %v2_10009544 = sub i32 %v3_10009540, %v3_1000953c
  store i32 268473676, i32* @lr, align 4
  %v3_10009548 = inttoptr i32 %v3_1000953c to i16*
  %v4_10009548 = call i32 @__stdio_READ(i16* %v3_10009548, i32 %v2_10009544, i32 %v2_10009544)
  %v0_1000954c = load i32, i32* @r29, align 4
  %v1_1000954c = add i32 %v0_1000954c, 8
  %v2_1000954c = inttoptr i32 %v1_1000954c to i32*
  %v3_1000954c = load i32, i32* %v2_1000954c, align 4
  %v2_10009550 = add i32 %v3_1000954c, %v4_10009548
  store i32 %v2_10009550, i32* %r0.global-to-local, align 4
  %v2_10009554 = add i32 %v0_1000954c, 16
  %v3_10009554 = inttoptr i32 %v2_10009554 to i32*
  store i32 %v3_1000954c, i32* %v3_10009554, align 4
  %v0_10009558 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009558 = load i32, i32* @r29, align 4
  %v2_10009558 = add i32 %v1_10009558, 20
  %v3_10009558 = inttoptr i32 %v2_10009558 to i32*
  store i32 %v0_10009558, i32* %v3_10009558, align 4
  store i32 %v0_10009528, i32* %r0.global-to-local, align 4
  ret i32 %v4_10009548

; uselistorder directives
  uselistorder i32 %v3_1000954c, { 1, 0 }
  uselistorder i32 %v4_10009548, { 1, 0 }
  uselistorder i32 %v3_1000953c, { 1, 0 }
  uselistorder i32 (i16*, i32, i32)* @__stdio_READ, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_10009578 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10009584 = load i16, i16* %arg1, align 2
  %v4_10009584 = zext i16 %v3_10009584 to i32
  %v2_10009588 = and i32 %v4_10009584, %arg2
  %v5_10009588 = icmp eq i32 %v2_10009588, 0
  br i1 %v5_10009588, label %dec_label_pc_10009590, label %dec_label_pc_100095a0

dec_label_pc_10009590:                            ; preds = %entry
  %v1_10009590 = and i32 %v4_10009584, 2176
  %v3_10009590 = icmp eq i32 %v1_10009590, 0
  br i1 %v3_10009590, label %dec_label_pc_10009598, label %dec_label_pc_100095ac

dec_label_pc_10009598:                            ; preds = %dec_label_pc_10009590
  %v2_10009598 = or i32 %v4_10009584, %arg2
  %v1_1000959c = trunc i32 %v2_10009598 to i16
  store i16 %v1_1000959c, i16* %arg1, align 2
  %v0_100095a0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100095a0

dec_label_pc_100095a0:                            ; preds = %entry, %dec_label_pc_10009598
  %v0_100095a0 = phi i32 [ %tmp, %entry ], [ %v0_100095a0.pre, %dec_label_pc_10009598 ]
  %v1_100095a0 = inttoptr i32 %v0_100095a0 to i16*
  %v2_100095a0 = load i16, i16* %v1_100095a0, align 2
  %v3_100095a0 = zext i16 %v2_100095a0 to i32
  %v1_100095a4 = and i32 %v3_100095a0, 16
  %v3_100095a4 = icmp eq i32 %v1_100095a4, 0
  br i1 %v3_100095a4, label %dec_label_pc_100095c8, label %dec_label_pc_100095ac

dec_label_pc_100095ac:                            ; preds = %dec_label_pc_10009590, %dec_label_pc_100095a0
  %v0_100095ac = call i32 @__errno_location()
  store i32 %v0_100095ac, i32* %r3.global-to-local, align 4
  %v2_100095b4 = inttoptr i32 %v0_100095ac to i32*
  store i32 9, i32* %v2_100095b4, align 4
  br label %dec_label_pc_100095b8

dec_label_pc_100095b8:                            ; preds = %dec_label_pc_100095d0, %dec_label_pc_100095ac
  %v0_100095b8 = load i32, i32* @r31, align 4
  %v1_100095b8 = inttoptr i32 %v0_100095b8 to i16*
  %v2_100095b8 = load i16, i16* %v1_100095b8, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_100095c0 = or i16 %v2_100095b8, 8
  br label %dec_label_pc_100095fc

dec_label_pc_100095c8:                            ; preds = %dec_label_pc_100095a0
  %v1_100095c8 = and i32 %v3_100095a0, 64
  %v3_100095c8 = icmp eq i32 %v1_100095c8, 0
  br i1 %v3_100095c8, label %dec_label_pc_100095f0, label %dec_label_pc_100095d0

dec_label_pc_100095d0:                            ; preds = %dec_label_pc_100095c8
  store i32 268473812, i32* @lr, align 4
  %v0_100095d0 = call i32 @__stdio_wcommit()
  store i32 %v0_100095d0, i32* %r3.global-to-local, align 4
  %v3_100095d4 = icmp eq i32 %v0_100095d0, 0
  br i1 %v3_100095d4, label %dec_label_pc_100095dc, label %dec_label_pc_100095b8

dec_label_pc_100095dc:                            ; preds = %dec_label_pc_100095d0
  %v0_100095dc = load i32, i32* @r31, align 4
  %v1_100095dc = inttoptr i32 %v0_100095dc to i16*
  %v2_100095dc = load i16, i16* %v1_100095dc, align 2
  %v3_100095dc = zext i16 %v2_100095dc to i32
  %v1_100095e0 = add i32 %v0_100095dc, 8
  %v2_100095e0 = inttoptr i32 %v1_100095e0 to i32*
  %v3_100095e0 = load i32, i32* %v2_100095e0, align 4
  %v1_100095e4 = call i32 @__asm_rlwinm(i32 %v3_100095dc, i32 0, i32 26, i32 24)
  %v2_100095e4 = trunc i32 %v1_100095e4 to i16
  %v1_100095e8 = load i32, i32* @r31, align 4
  %v2_100095e8 = add i32 %v1_100095e8, 28
  %v3_100095e8 = inttoptr i32 %v2_100095e8 to i32*
  store i32 %v3_100095e0, i32* %v3_100095e8, align 4
  %v3_100095ec = load i32, i32* @r31, align 4
  %v4_100095ec = inttoptr i32 %v3_100095ec to i16*
  store i16 %v2_100095e4, i16* %v4_100095ec, align 2
  %v0_100095f0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100095f0

dec_label_pc_100095f0:                            ; preds = %dec_label_pc_100095c8, %dec_label_pc_100095dc
  %v0_100095f0 = phi i32 [ %v0_100095a0, %dec_label_pc_100095c8 ], [ %v0_100095f0.pre, %dec_label_pc_100095dc ]
  %v1_100095f0 = inttoptr i32 %v0_100095f0 to i16*
  %v2_100095f0 = load i16, i16* %v1_100095f0, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100095f8 = or i16 %v2_100095f0, 1
  br label %dec_label_pc_100095fc

dec_label_pc_100095fc:                            ; preds = %dec_label_pc_100095b8, %dec_label_pc_100095f0
  %v2_100095fc = phi i32 [ %v0_100095b8, %dec_label_pc_100095b8 ], [ %v0_100095f0, %dec_label_pc_100095f0 ]
  %storemerge.off0 = phi i16 [ %v1_100095c0, %dec_label_pc_100095b8 ], [ %v1_100095f8, %dec_label_pc_100095f0 ]
  %v3_100095fc = inttoptr i32 %v2_100095fc to i16*
  store i16 %storemerge.off0, i16* %v3_100095fc, align 2
  store i32 %v0_10009578, i32* @r31, align 4
  %v0_10009610 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009610

; uselistorder directives
  uselistorder i32 %v4_10009584, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 3, 2, 4 }
  uselistorder i32 26, { 2, 0, 3, 4, 1, 5, 6, 7, 8 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100095fc, { 1, 0 }
  uselistorder label %dec_label_pc_100095f0, { 1, 0 }
  uselistorder label %dec_label_pc_100095ac, { 1, 0 }
  uselistorder label %dec_label_pc_100095a0, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10009614 = load i32, i32* @lr, align 4
  store i32 %v0_10009614, i32* %r0.global-to-local, align 4
  %v0_1000961c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10009628 = load i16, i16* %arg1, align 2
  %v4_10009628 = zext i16 %v3_10009628 to i32
  store i32 %v4_10009628, i32* %r0.global-to-local, align 4
  %v1_1000962c = load i32, i32* @r4, align 4
  %v2_1000962c = and i32 %v1_1000962c, %v4_10009628
  store i32 %v2_1000962c, i32* %r9.global-to-local, align 4
  %v5_1000962c = icmp eq i32 %v2_1000962c, 0
  br i1 %v5_1000962c, label %dec_label_pc_10009634, label %dec_label_pc_10009644

dec_label_pc_10009634:                            ; preds = %entry
  %v1_10009634 = and i32 %v4_10009628, 2176
  store i32 %v1_10009634, i32* %r9.global-to-local, align 4
  %v3_10009634 = icmp eq i32 %v1_10009634, 0
  br i1 %v3_10009634, label %dec_label_pc_1000963c, label %dec_label_pc_10009650

dec_label_pc_1000963c:                            ; preds = %dec_label_pc_10009634
  %v2_1000963c = or i32 %v1_1000962c, %v4_10009628
  store i32 %v2_1000963c, i32* %r0.global-to-local, align 4
  %v1_10009640 = trunc i32 %v2_1000963c to i16
  store i16 %v1_10009640, i16* %arg1, align 2
  %v0_10009644.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009644

dec_label_pc_10009644:                            ; preds = %entry, %dec_label_pc_1000963c
  %v0_10009680 = phi i32 [ %tmp, %entry ], [ %v0_10009644.pre, %dec_label_pc_1000963c ]
  %v1_10009644 = inttoptr i32 %v0_10009680 to i16*
  %v2_10009644 = load i16, i16* %v1_10009644, align 2
  %v3_10009644 = zext i16 %v2_10009644 to i32
  %v1_10009648 = and i32 %v3_10009644, 32
  store i32 %v1_10009648, i32* %r0.global-to-local, align 4
  %v3_10009648 = icmp eq i32 %v1_10009648, 0
  br i1 %v3_10009648, label %dec_label_pc_10009670, label %dec_label_pc_10009650

dec_label_pc_10009650:                            ; preds = %dec_label_pc_10009634, %dec_label_pc_10009644
  %v0_10009650 = call i32 @__errno_location()
  store i32 %v0_10009650, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_10009658 = inttoptr i32 %v0_10009650 to i32*
  store i32 9, i32* %v2_10009658, align 4
  br label %dec_label_pc_1000965c

dec_label_pc_1000965c:                            ; preds = %dec_label_pc_10009698, %dec_label_pc_10009650
  %v0_1000965c = load i32, i32* @r31, align 4
  %v1_1000965c = inttoptr i32 %v0_1000965c to i16*
  %v2_1000965c = load i16, i16* %v1_1000965c, align 2
  %v3_1000965c = zext i16 %v2_1000965c to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10009664 = or i32 %v3_1000965c, 8
  store i32 %v1_10009664, i32* %r0.global-to-local, align 4
  %v1_10009668 = trunc i32 %v1_10009664 to i16
  store i16 %v1_10009668, i16* %v1_1000965c, align 2
  br label %dec_label_pc_100096f8

dec_label_pc_10009670:                            ; preds = %dec_label_pc_10009644
  %tmp8 = urem i16 %v2_10009644, 4
  %v1_10009670 = zext i16 %tmp8 to i32
  store i32 %v1_10009670, i32* %r0.global-to-local, align 4
  %v3_10009670 = icmp eq i16 %tmp8, 0
  br i1 %v3_10009670, label %dec_label_pc_100096d4, label %dec_label_pc_10009678

dec_label_pc_10009678:                            ; preds = %dec_label_pc_10009670
  %v1_10009678 = and i32 %v3_10009644, 4
  store i32 %v1_10009678, i32* %r9.global-to-local, align 4
  %v3_10009678 = icmp eq i32 %v1_10009678, 0
  br i1 %v3_10009678, label %dec_label_pc_10009680, label %dec_label_pc_100096b8

dec_label_pc_10009680:                            ; preds = %dec_label_pc_10009678
  %v1_10009680 = add i32 %v0_10009680, 20
  %v2_10009680 = inttoptr i32 %v1_10009680 to i32*
  %v3_10009680 = load i32, i32* %v2_10009680, align 4
  store i32 %v3_10009680, i32* %r0.global-to-local, align 4
  %v1_10009684 = add i32 %v0_10009680, 16
  %v2_10009684 = inttoptr i32 %v1_10009684 to i32*
  %v3_10009684 = load i32, i32* %v2_10009684, align 4
  store i32 %v3_10009684, i32* %r9.global-to-local, align 4
  %v4_10009688 = icmp eq i32 %v3_10009680, %v3_10009684
  br i1 %v4_10009688, label %dec_label_pc_10009690, label %dec_label_pc_10009698

dec_label_pc_10009690:                            ; preds = %dec_label_pc_10009680
  %v1_10009690 = and i32 %v3_10009644, 2
  store i32 %v1_10009690, i32* %r0.global-to-local, align 4
  %v3_10009690 = icmp eq i32 %v1_10009690, 0
  br i1 %v3_10009690, label %dec_label_pc_100096b8, label %dec_label_pc_10009698

dec_label_pc_10009698:                            ; preds = %dec_label_pc_10009680, %dec_label_pc_10009690
  %v1_10009698 = and i32 %v3_10009644, 1024
  store i32 %v1_10009698, i32* %r9.global-to-local, align 4
  %v0_100096a0 = call i32 @__asm_mfcr()
  store i32 %v0_100096a0, i32* %r3.global-to-local, align 4
  %v1_100096a4 = call i32 @__asm_rlwinm(i32 %v0_100096a0, i32 3, i32 31, i32 31)
  %v1_100096a8 = sub i32 2, %v1_100096a4
  store i32 %v1_100096a8, i32* @r5, align 4
  store i32 268474032, i32* @lr, align 4
  %v1_100096ac = call i32 @__GI_fseek(i32 %v1_100096a8)
  store i32 %v1_100096ac, i32* %r3.global-to-local, align 4
  %v3_100096b0 = icmp eq i32 %v1_100096ac, 0
  br i1 %v3_100096b0, label %dec_label_pc_10009698.dec_label_pc_100096b8_crit_edge, label %dec_label_pc_1000965c

dec_label_pc_10009698.dec_label_pc_100096b8_crit_edge: ; preds = %dec_label_pc_10009698
  %v0_100096b8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100096b8

dec_label_pc_100096b8:                            ; preds = %dec_label_pc_10009698.dec_label_pc_100096b8_crit_edge, %dec_label_pc_10009678, %dec_label_pc_10009690
  %v0_100096b8 = phi i32 [ %v0_100096b8.pre, %dec_label_pc_10009698.dec_label_pc_100096b8_crit_edge ], [ %v0_10009680, %dec_label_pc_10009678 ], [ %v0_10009680, %dec_label_pc_10009690 ]
  %v1_100096b8 = inttoptr i32 %v0_100096b8 to i16*
  %v2_100096b8 = load i16, i16* %v1_100096b8, align 2
  %v3_100096b8 = zext i16 %v2_100096b8 to i32
  store i32 %v3_100096b8, i32* %r0.global-to-local, align 4
  %v1_100096bc = add i32 %v0_100096b8, 8
  %v2_100096bc = inttoptr i32 %v1_100096bc to i32*
  %v3_100096bc = load i32, i32* %v2_100096bc, align 4
  store i32 %v3_100096bc, i32* %r9.global-to-local, align 4
  %v1_100096c0 = call i32 @__asm_rlwinm(i32 %v3_100096b8, i32 0, i32 0, i32 29)
  %v2_100096c0 = trunc i32 %v1_100096c0 to i16
  store i32 %v1_100096c0, i32* %r0.global-to-local, align 4
  %v3_100096c4 = load i32, i32* @r31, align 4
  %v4_100096c4 = inttoptr i32 %v3_100096c4 to i16*
  store i16 %v2_100096c0, i16* %v4_100096c4, align 2
  %v0_100096c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100096c8 = load i32, i32* @r31, align 4
  %v2_100096c8 = add i32 %v1_100096c8, 20
  %v3_100096c8 = inttoptr i32 %v2_100096c8 to i32*
  store i32 %v0_100096c8, i32* %v3_100096c8, align 4
  %v0_100096cc = load i32, i32* %r9.global-to-local, align 4
  %v1_100096cc = load i32, i32* @r31, align 4
  %v2_100096cc = add i32 %v1_100096cc, 24
  %v3_100096cc = inttoptr i32 %v2_100096cc to i32*
  store i32 %v0_100096cc, i32* %v3_100096cc, align 4
  %v0_100096d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100096d0 = load i32, i32* @r31, align 4
  %v2_100096d0 = add i32 %v1_100096d0, 16
  %v3_100096d0 = inttoptr i32 %v2_100096d0 to i32*
  store i32 %v0_100096d0, i32* %v3_100096d0, align 4
  %v0_100096d4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100096d4

dec_label_pc_100096d4:                            ; preds = %dec_label_pc_10009670, %dec_label_pc_100096b8
  %v2_100096e0 = phi i32 [ %v0_10009680, %dec_label_pc_10009670 ], [ %v0_100096d4.pre, %dec_label_pc_100096b8 ]
  %v1_100096d4 = inttoptr i32 %v2_100096e0 to i16*
  %v2_100096d4 = load i16, i16* %v1_100096d4, align 2
  %v3_100096d4 = zext i16 %v2_100096d4 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100096dc = or i32 %v3_100096d4, 64
  store i32 %v1_100096dc, i32* %r0.global-to-local, align 4
  %v1_100096e0 = trunc i32 %v1_100096dc to i16
  store i16 %v1_100096e0, i16* %v1_100096d4, align 2
  %v0_100096e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100096e4 = urem i32 %v0_100096e4, 65536
  store i32 %v1_100096e4, i32* %r0.global-to-local, align 4
  %v1_100096e8 = and i32 %v0_100096e4, 2816
  store i32 %v1_100096e8, i32* %r9.global-to-local, align 4
  %v3_100096e8 = icmp eq i32 %v1_100096e8, 0
  br i1 %v3_100096e8, label %dec_label_pc_100096f0, label %dec_label_pc_100096f8

dec_label_pc_100096f0:                            ; preds = %dec_label_pc_100096d4
  %v0_100096f0 = load i32, i32* @r31, align 4
  %v1_100096f0 = add i32 %v0_100096f0, 12
  %v2_100096f0 = inttoptr i32 %v1_100096f0 to i32*
  %v3_100096f0 = load i32, i32* %v2_100096f0, align 4
  store i32 %v3_100096f0, i32* %r0.global-to-local, align 4
  %v2_100096f4 = add i32 %v0_100096f0, 28
  %v3_100096f4 = inttoptr i32 %v2_100096f4 to i32*
  store i32 %v3_100096f0, i32* %v3_100096f4, align 4
  br label %dec_label_pc_100096f8

dec_label_pc_100096f8:                            ; preds = %dec_label_pc_100096d4, %dec_label_pc_1000965c, %dec_label_pc_100096f0
  store i32 %v0_10009614, i32* %r0.global-to-local, align 4
  store i32 %v0_1000961c, i32* @r31, align 4
  %v0_10009708 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009708

; uselistorder directives
  uselistorder i32 %v0_100096e4, { 1, 0 }
  uselistorder i32 %v1_100096c0, { 1, 0 }
  uselistorder i32 %v0_100096b8, { 1, 0 }
  uselistorder i32 %v0_10009680, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_10009628, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 3, 1, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder i32 29, { 0, 5, 6, 7, 8, 9, 10, 11, 1, 2, 12, 13, 3, 4, 16, 17, 14, 15 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100096f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100096d4, { 1, 0 }
  uselistorder label %dec_label_pc_100096b8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009698, { 1, 0 }
  uselistorder label %dec_label_pc_10009650, { 1, 0 }
  uselistorder label %dec_label_pc_10009644, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_1000970c = load i32, i32* @r5, align 4
  %v1_1000970c = icmp slt i32 %v0_1000970c, 0
  %v1_10009710 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_1000974c = icmp eq i32 %v1_10009710, 0
  br i1 %v1_1000970c, label %dec_label_pc_1000974c, label %dec_label_pc_10009718

dec_label_pc_10009718:                            ; preds = %entry
  br i1 %v3_1000974c, label %dec_label_pc_10009720, label %dec_label_pc_10009754

dec_label_pc_10009720:                            ; preds = %dec_label_pc_10009718
  %v3_10009720 = icmp eq i32 %arg1, 256
  br i1 %v3_10009720, label %dec_label_pc_1000972c, label %dec_label_pc_10009734

dec_label_pc_1000972c:                            ; preds = %dec_label_pc_10009720
  br label %dec_label_pc_10009740

dec_label_pc_10009734:                            ; preds = %dec_label_pc_10009720
  %v3_10009734 = icmp eq i32 %arg1, 512
  br i1 %v3_10009734, label %dec_label_pc_1000973c, label %dec_label_pc_10009740

dec_label_pc_1000973c:                            ; preds = %dec_label_pc_10009734
  br label %dec_label_pc_10009740

dec_label_pc_10009740:                            ; preds = %dec_label_pc_10009734, %dec_label_pc_1000972c, %dec_label_pc_1000973c
  ret i32 0

dec_label_pc_1000974c:                            ; preds = %entry
  br i1 %v3_1000974c, label %dec_label_pc_10009760, label %dec_label_pc_10009754

dec_label_pc_10009754:                            ; preds = %dec_label_pc_10009718, %dec_label_pc_1000974c
  %v2_10009754 = load i32, i32* %arg2, align 4
  ret i32 %v2_10009754

dec_label_pc_10009760:                            ; preds = %dec_label_pc_1000974c
  %v3_10009760 = icmp eq i32 %arg1, 256
  %v2_10009764 = load i32, i32* %arg2, align 4
  br i1 %v3_10009760, label %dec_label_pc_1000976c, label %dec_label_pc_10009774

dec_label_pc_1000976c:                            ; preds = %dec_label_pc_10009760
  %v1_1000976c = urem i32 %v2_10009764, 256
  br label %dec_label_pc_10009780

dec_label_pc_10009774:                            ; preds = %dec_label_pc_10009760
  %v3_10009774 = icmp eq i32 %arg1, 512
  br i1 %v3_10009774, label %dec_label_pc_1000977c, label %dec_label_pc_10009780

dec_label_pc_1000977c:                            ; preds = %dec_label_pc_10009774
  %v1_1000977c = mul i32 %v2_10009764, 65536
  %v2_1000977c = sdiv i32 %v1_1000977c, 65536
  br label %dec_label_pc_10009780

dec_label_pc_10009780:                            ; preds = %dec_label_pc_10009774, %dec_label_pc_1000976c, %dec_label_pc_1000977c
  %v0_10009780 = phi i32 [ %v2_10009764, %dec_label_pc_10009774 ], [ %v1_1000976c, %dec_label_pc_1000976c ], [ %v2_1000977c, %dec_label_pc_1000977c ]
  %tmp = icmp slt i32 %v0_10009780, 0
  %v1_10009784 = zext i1 %tmp to i32
  %v2_10009784 = ashr i32 %v0_10009780, 31
  %v3_10009784 = and i32 %v2_10009784, -2
  %v4_10009784 = or i32 %v3_10009784, %v1_10009784
  ret i32 %v4_10009784

; uselistorder directives
  uselistorder i32 %v0_10009780, { 1, 0 }
  uselistorder i32 %v2_10009764, { 2, 0, 1 }
  uselistorder i1 %v3_1000974c, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 0, 1, 2, 19, 20, 21, 22, 47, 48, 49, 3, 23, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 17, 50, 18, 41, 42, 43, 44, 45, 46, 51 }
  uselistorder i32 %arg1, { 0, 4, 2, 1, 3 }
  uselistorder label %dec_label_pc_10009780, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009754, { 1, 0 }
  uselistorder label %dec_label_pc_10009740, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1000978c = load i32, i32* @r4, align 4
  %v3_1000978c = icmp eq i32 %v0_1000978c, 256
  br i1 %v3_1000978c, label %dec_label_pc_10009798, label %dec_label_pc_100097a0

dec_label_pc_10009798:                            ; preds = %entry
  %v0_10009798 = load i32, i32* @r6, align 4
  %v1_10009798 = trunc i32 %v0_10009798 to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_10009798, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_100097a0:                            ; preds = %entry
  %v3_10009790 = icmp eq i32 %v0_1000978c, 2048
  br i1 %v3_10009790, label %dec_label_pc_100097a8, label %dec_label_pc_100097b4

dec_label_pc_100097a8:                            ; preds = %dec_label_pc_100097a0
  %v0_100097a8 = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_100097a8, i32* %tmp2, align 4
  %v0_100097ac = load i32, i32* @r6, align 4
  %v3_100097ac = add i32 %tmp, 4
  %v4_100097ac = inttoptr i32 %v3_100097ac to i32*
  store i32 %v0_100097ac, i32* %v4_100097ac, align 4
  ret i32 %tmp

dec_label_pc_100097b4:                            ; preds = %dec_label_pc_100097a0
  %v3_100097a0 = icmp eq i32 %v0_1000978c, 512
  %v0_100097b8 = load i32, i32* @r6, align 4
  br i1 %v3_100097a0, label %dec_label_pc_100097b8, label %dec_label_pc_100097c0

dec_label_pc_100097b8:                            ; preds = %dec_label_pc_100097b4
  %v1_100097b8 = trunc i32 %v0_100097b8 to i16
  store i16 %v1_100097b8, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_100097c0:                            ; preds = %dec_label_pc_100097b4
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_100097b8, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 512, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder i32* @r6, { 0, 1, 2, 3, 4, 5, 6, 14, 7, 8, 9, 10, 11, 15, 16, 17, 12, 13 }
  uselistorder i32* @r4, { 12, 13, 14, 15, 16, 17, 18, 19, 45, 46, 1, 47, 48, 49, 50, 2, 51, 52, 86, 87, 3, 20, 21, 22, 8, 23, 24, 25, 26, 27, 28, 0, 29, 30, 31, 32, 33, 34, 88, 89, 90, 53, 54, 9, 10, 55, 56, 91, 57, 58, 59, 60, 61, 62, 63, 92, 93, 94, 64, 65, 66, 67, 68, 5, 69, 70, 71, 82, 83, 38, 72, 73, 74, 75, 76, 11, 97, 6, 7, 95, 39, 40, 35, 77, 78, 79, 80, 81, 84, 4, 96, 36, 37, 41, 42, 43, 44, 85 }
  uselistorder i16* %arg1, { 3, 2, 0, 1, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  store i32 %arg4, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100097c8 = load i32, i32* %r7.global-to-local, align 4
  %v3_100097c8 = icmp eq i32 %v0_100097c8, 0
  store i1 %v3_100097c8, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* %r30.global-to-local, align 4
  %tmp12 = icmp sgt i32 %v0_100097c8, -1
  br i1 %tmp12, label %dec_label_pc_100097fc, label %dec_label_pc_100097dc

dec_label_pc_100097dc:                            ; preds = %entry
  %v0_100097dc = load i32, i32* %r5.global-to-local, align 4
  %v1_100097e0 = sub i32 0, %v0_100097c8
  store i32 %v1_100097e0, i32* %r7.global-to-local, align 4
  %tmp13 = icmp sgt i32 %v0_100097dc, -1
  br i1 %tmp13, label %dec_label_pc_100097fc, label %dec_label_pc_100097e8

dec_label_pc_100097e8:                            ; preds = %dec_label_pc_100097dc
  %v0_100097e8 = load i32, i32* %r6.global-to-local, align 4
  %v1_100097e8 = sub i32 0, %v0_100097e8
  %v2_100097e8 = sub i32 -1, %v0_100097e8
  store i32 %v1_100097e8, i32* %r6.global-to-local, align 4
  %v4_100097e8 = icmp uge i32 %v2_100097e8, %v1_100097e8
  %v1_100097ec = sub i32 -1, %v0_100097dc
  %v3_100097ec = zext i1 %v4_100097e8 to i32
  %v4_100097ec = add i32 %v3_100097ec, %v1_100097ec
  store i32 %v4_100097ec, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100097fc

dec_label_pc_100097fc:                            ; preds = %entry, %dec_label_pc_100097dc, %dec_label_pc_100097e8
  %v1_10009800 = phi i32 [ %v1_100097e0, %dec_label_pc_100097e8 ], [ %v1_100097e0, %dec_label_pc_100097dc ], [ %v0_100097c8, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_100097e8 ], [ 0, %dec_label_pc_100097dc ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_10009800 = udiv i32 -1, %v1_10009800
  store i32 %v2_10009800, i32* %r8.global-to-local, align 4
  %v2_10009808 = load i32, i32* %r3.global-to-local, align 4
  %v3_10009808 = inttoptr i32 %v2_10009808 to i8*
  store i8 0, i8* %v3_10009808, align 1
  %v0_1000980c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000980c = load i32, i32* %r7.global-to-local, align 4
  %v2_1000980c = mul i32 %v1_1000980c, %v0_1000980c
  %v1_10009810 = sub i32 0, %v2_1000980c
  store i32 %v1_10009810, i32* %r31.global-to-local, align 4
  %v4_10009814 = icmp eq i32 %v1_1000980c, %v1_10009810
  br i1 %v4_10009814, label %dec_label_pc_1000981c, label %dec_label_pc_10009824

dec_label_pc_1000981c:                            ; preds = %dec_label_pc_100097fc
  %v1_1000981c = add i32 %v0_1000980c, 1
  store i32 %v1_1000981c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009824

dec_label_pc_10009824:                            ; preds = %dec_label_pc_100097fc, %dec_label_pc_1000981c
  %v0_10009824 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10009824, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_10009828

dec_label_pc_10009828thread-pre-split:            ; preds = %dec_label_pc_1000987c
  %v0_10009828.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_1000982c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10009828

dec_label_pc_10009828:                            ; preds = %dec_label_pc_10009828thread-pre-split, %dec_label_pc_10009824
  %v1_10009870 = phi i32 [ %v1_1000982c.pre, %dec_label_pc_10009828thread-pre-split ], [ %v1_1000980c, %dec_label_pc_10009824 ]
  %v1_10009840 = phi i32 [ %v0_10009828.pr, %dec_label_pc_10009828thread-pre-split ], [ %v0_10009824, %dec_label_pc_10009824 ]
  %v3_10009828 = icmp eq i32 %v1_10009840, 0
  %v0_1000982c = load i32, i32* %r6.global-to-local, align 4
  %v2_1000982c = udiv i32 %v0_1000982c, %v1_10009870
  br i1 %v3_10009828, label %dec_label_pc_10009870, label %dec_label_pc_10009834

dec_label_pc_10009834:                            ; preds = %dec_label_pc_10009828
  %v2_10009834 = udiv i32 %v1_10009840, %v1_10009870
  %v2_10009838 = mul i32 %v2_10009834, %v1_10009870
  %v2_1000983c = mul i32 %v2_1000982c, %v1_10009870
  %v2_10009840 = sub i32 %v1_10009840, %v2_10009838
  store i32 %v2_10009834, i32* %r12.global-to-local, align 4
  %v0_10009848 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009848 = mul i32 %v0_10009848, %v2_10009840
  %v2_1000984c = sub i32 %v0_1000982c, %v2_1000983c
  %v2_10009850 = add i32 %v2_10009848, %v2_1000984c
  %v0_10009854 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009854 = mul i32 %v0_10009854, %v2_10009840
  %v2_10009858 = udiv i32 %v2_10009850, %v1_10009870
  %v2_1000985c = add i32 %v2_10009854, %v2_1000982c
  %v2_10009860 = mul i32 %v2_10009858, %v1_10009870
  %v2_10009864 = add i32 %v2_1000985c, %v2_10009858
  store i32 %v2_10009864, i32* %r6.global-to-local, align 4
  %v2_10009868 = sub i32 %v2_10009850, %v2_10009860
  store i32 %v2_10009868, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000987c

dec_label_pc_10009870:                            ; preds = %dec_label_pc_10009828
  %v2_10009870 = mul i32 %v2_1000982c, %v1_10009870
  %v2_10009874 = sub i32 %v0_1000982c, %v2_10009870
  store i32 %v2_10009874, i32* %r5.global-to-local, align 4
  store i32 %v2_1000982c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000987c

dec_label_pc_1000987c:                            ; preds = %dec_label_pc_10009834, %dec_label_pc_10009870
  %v1_10009880 = phi i32 [ %v2_10009834, %dec_label_pc_10009834 ], [ 0, %dec_label_pc_10009870 ]
  %v0_10009880 = phi i32 [ %v2_10009864, %dec_label_pc_10009834 ], [ %v2_1000982c, %dec_label_pc_10009870 ]
  %v0_10009884 = phi i32 [ %v2_10009868, %dec_label_pc_10009834 ], [ %v2_10009874, %dec_label_pc_10009870 ]
  %v2_10009880 = or i32 %v0_10009880, %v1_10009880
  %v5_10009880 = icmp eq i32 %v2_10009880, 0
  store i1 %v5_10009880, i1* %cr0_eq.global-to-local, align 1
  %v1_10009888 = load i32, i32* %r30.global-to-local, align 4
  %v0_1000988c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000988c = add i32 %v0_1000988c, -1
  store i32 %v1_1000988c, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_10009884, 10
  %v1_10009884.v2_10009888.v = select i1 %tmp14, i32 48, i32 %v1_10009888
  %v1_10009884.v2_10009888 = add i32 %v0_10009884, %v1_10009884.v2_10009888.v
  %extract.t9.extract.t = trunc i32 %v1_10009884.v2_10009888 to i8
  %v3_1000989c = inttoptr i32 %v1_1000988c to i8*
  store i8 %extract.t9.extract.t, i8* %v3_1000989c, align 1
  %v0_100098a0 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_100098a0, label %dec_label_pc_100098a4, label %dec_label_pc_10009828thread-pre-split

dec_label_pc_100098a4:                            ; preds = %dec_label_pc_1000987c
  %v0_100098a4 = load i32, i32* @r29, align 4
  %v3_100098a4 = icmp eq i32 %v0_100098a4, 0
  br i1 %v3_100098a4, label %dec_label_pc_100098a4.dec_label_pc_100098b4_crit_edge, label %dec_label_pc_100098ac

dec_label_pc_100098a4.dec_label_pc_100098b4_crit_edge: ; preds = %dec_label_pc_100098a4
  %v0_100098bc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100098b4

dec_label_pc_100098ac:                            ; preds = %dec_label_pc_100098a4
  %v2_100098b0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100098b0 = add i32 %v2_100098b0, -1
  %v4_100098b0 = inttoptr i32 %v3_100098b0 to i8*
  store i8 45, i8* %v4_100098b0, align 1
  store i32 %v3_100098b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100098b4

dec_label_pc_100098b4:                            ; preds = %dec_label_pc_100098a4.dec_label_pc_100098b4_crit_edge, %dec_label_pc_100098ac
  %v0_100098bc = phi i32 [ %v0_100098bc.pre, %dec_label_pc_100098a4.dec_label_pc_100098b4_crit_edge ], [ %v3_100098b0, %dec_label_pc_100098ac ]
  ret i32 %v0_100098bc

; uselistorder directives
  uselistorder i32 %v2_10009834, { 1, 2, 0 }
  uselistorder i32 %v2_1000982c, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_10009870, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_1000980c, { 1, 2, 0 }
  uselistorder i32 %v0_1000980c, { 1, 0 }
  uselistorder i32 %v0_100097c8, { 1, 2, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r7.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i8 45, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_100098b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000987c, { 1, 0 }
  uselistorder label %dec_label_pc_10009824, { 1, 0 }
  uselistorder label %dec_label_pc_100097fc, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_100098c0 = load i32, i32* @lr, align 4
  store i32 %v0_100098c0, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_100098dc = add i32 %tmp, 11
  %v2_100098dc = inttoptr i32 %v1_100098dc to i8*
  %v3_100098dc = load i8, i8* %v2_100098dc, align 1
  %v4_100098dc = zext i8 %v3_100098dc to i32
  store i32 %v4_100098dc, i32* %r31.global-to-local, align 4
  %v1_100098e0 = or i32 %v4_100098dc, 32
  %v1_100098e4 = icmp ult i32 %v1_100098e0, 97
  %v3_100098e4 = icmp eq i32 %v1_100098e0, 97
  store i1 %v1_100098e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100098e4, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_100098f0 = add i32 %tmp, 4
  %v2_100098f0 = inttoptr i32 %v1_100098f0 to i32*
  %v3_100098f0 = load i32, i32* %v2_100098f0, align 4
  store i32 %v3_100098f0, i32* %r28.global-to-local, align 4
  %v2_100098f4 = load i32, i32* %arg2, align 4
  store i32 %v2_100098f4, i32* %r30.global-to-local, align 4
  br i1 %v3_100098e4, label %dec_label_pc_100098fc, label %dec_label_pc_10009904

dec_label_pc_100098fc:                            ; preds = %entry
  %v1_100098fc = add nuw nsw i32 %v4_100098dc, 6
  store i32 %v1_100098fc, i32* %r0.global-to-local, align 4
  %v1_10009900 = urem i32 %v1_100098fc, 256
  store i32 %v1_10009900, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009904

dec_label_pc_10009904:                            ; preds = %entry, %dec_label_pc_100098fc
  %v0_100099b8 = phi i32 [ %v4_100098dc, %entry ], [ %v1_10009900, %dec_label_pc_100098fc ]
  %v1_10009904 = icmp slt i32 %v2_100098f4, 0
  %v3_10009904 = icmp eq i32 %v2_100098f4, 0
  store i1 %v1_10009904, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009904, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_100098f4, -1
  br i1 %tmp75, label %dec_label_pc_10009910, label %dec_label_pc_1000990c

dec_label_pc_1000990c:                            ; preds = %dec_label_pc_10009904
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009910

dec_label_pc_10009910:                            ; preds = %dec_label_pc_10009904, %dec_label_pc_1000990c
  %v0_10009ac844 = phi i32 [ %v2_100098f4, %dec_label_pc_10009904 ], [ 6, %dec_label_pc_1000990c ]
  %v1_10009910 = add i32 %tmp, 12
  %v2_10009910 = inttoptr i32 %v1_10009910 to i32*
  %v3_10009910 = load i32, i32* %v2_10009910, align 4
  store i32 %v3_10009910, i32* %r9.global-to-local, align 4
  %v1_10009914 = and i32 %v3_10009910, 2
  %v3_10009914 = icmp eq i32 %v1_10009914, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_10009914, label %dec_label_pc_1000992c, label %dec_label_pc_10009938

dec_label_pc_1000992c:                            ; preds = %dec_label_pc_10009910
  %v1_1000992c = urem i32 %v3_10009910, 2
  store i32 %v1_1000992c, i32* %r7.global-to-local, align 4
  %v3_1000992c = icmp eq i32 %v1_1000992c, 0
  br i1 %v3_1000992c, label %dec_label_pc_1000993c, label %dec_label_pc_10009938

dec_label_pc_10009938:                            ; preds = %dec_label_pc_1000992c, %dec_label_pc_10009910
  %storemerge = phi i32 [ 43, %dec_label_pc_10009910 ], [ 32, %dec_label_pc_1000992c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_10009938 = trunc i32 %storemerge to i8
  store i8 %v6_10009938, i8* %stack_var_-200, align 1
  br label %dec_label_pc_1000993c

dec_label_pc_1000993c:                            ; preds = %dec_label_pc_1000992c, %dec_label_pc_10009938
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10009904, label %dec_label_pc_10009aa0, label %dec_label_pc_100099b8

dec_label_pc_100099b8:                            ; preds = %dec_label_pc_1000993c
  %v1_100099b8 = icmp ult i32 %v0_100099b8, 96
  %v2_100099b8 = icmp ugt i32 %v0_100099b8, 96
  %v3_100099b8 = icmp eq i32 %v0_100099b8, 96
  store i1 %v1_100099b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100099b8, i1* %cr7_eq.global-to-local, align 1
  %v2_100099c0 = add i32 %tmp, 16
  %v3_100099c0 = inttoptr i32 %v2_100099c0 to i32*
  store i32 32, i32* %v3_100099c0, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_100099b8, label %dec_label_pc_100099e4, label %dec_label_pc_100099d8

dec_label_pc_100099d8:                            ; preds = %dec_label_pc_100099b8
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100099e4

dec_label_pc_100099e4:                            ; preds = %dec_label_pc_100099b8, %dec_label_pc_100099d8
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_1000bbd8.179 to i32), i32 8), %dec_label_pc_100099b8 ], [ add (i32 ptrtoint ([4 x i8]* @global_var_1000bbd8.179 to i32), i32 12), %dec_label_pc_100099d8 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1000bbd8.179 to i32), i32* %r9.global-to-local, align 4
  %v2_100099f0 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_100099f0, i32* %r8.global-to-local, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10009e90

dec_label_pc_10009aa0:                            ; preds = %dec_label_pc_1000993c
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10009aa4 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10009aa4, i32* %r6.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_10009af0 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_10009ac4

dec_label_pc_10009ac4:                            ; preds = %dec_label_pc_10009b44.dec_label_pc_10009ac4_crit_edge, %dec_label_pc_10009aa0
  %v0_10009ac8 = phi i32 [ %v0_10009ac8.pre, %dec_label_pc_10009b44.dec_label_pc_10009ac4_crit_edge ], [ %v0_10009ac844, %dec_label_pc_10009aa0 ]
  %v3_10009ac8 = call %2 @__asm_cror(i32 %v0_10009ac8, i32 %tmp, i32 %v0_10009ac8)
  %v0_10009acc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009acc, label %dec_label_pc_10009ae0, label %dec_label_pc_10009af4

dec_label_pc_10009ae0:                            ; preds = %dec_label_pc_10009ac4
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009af4

dec_label_pc_10009af4:                            ; preds = %dec_label_pc_10009ac4, %dec_label_pc_10009ae0
  %storemerge2 = phi i32 [ %v1_10009af0, %dec_label_pc_10009ae0 ], [ %tmp55, %dec_label_pc_10009ac4 ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_10009b04 = load i32, i32* %r6.global-to-local, align 4
  %v1_10009b04 = add i32 %v0_10009b04, 9
  store i32 %v1_10009b04, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009b20

dec_label_pc_10009b20:                            ; preds = %dec_label_pc_10009b20.dec_label_pc_10009b20_crit_edge, %dec_label_pc_10009af4
  %v1_10009b28 = phi i32 [ %v1_10009b28.pre, %dec_label_pc_10009b20.dec_label_pc_10009b20_crit_edge ], [ %v1_10009b04, %dec_label_pc_10009af4 ]
  %v0_10009b24 = phi i32 [ %v0_10009b24.pre, %dec_label_pc_10009b20.dec_label_pc_10009b20_crit_edge ], [ 0, %dec_label_pc_10009af4 ]
  %v1_10009b20 = phi i32 [ %v1_10009b20.pre, %dec_label_pc_10009b20.dec_label_pc_10009b20_crit_edge ], [ 10, %dec_label_pc_10009af4 ]
  %v1_10009b30 = phi i32 [ %v0_10009b20.pre, %dec_label_pc_10009b20.dec_label_pc_10009b20_crit_edge ], [ %storemerge2, %dec_label_pc_10009af4 ]
  %v2_10009b20 = udiv i32 %v1_10009b30, %v1_10009b20
  store i32 %v2_10009b20, i32* %r0.global-to-local, align 4
  %v1_10009b24 = add i32 %v0_10009b24, 1
  store i32 %v1_10009b24, i32* %r8.global-to-local, align 4
  %v2_10009b28 = sub i32 %v1_10009b28, %v1_10009b24
  store i32 %v2_10009b28, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_10009b20, -10
  store i32 %v2_10009b20, i32* %r10.global-to-local, align 4
  %v2_10009b30 = add i32 %v1_10009b30, 48
  %v1_10009b38 = add i32 %v2_10009b30, %tmp76
  store i32 %v1_10009b38, i32* %r9.global-to-local, align 4
  %v1_10009b3c = trunc i32 %v1_10009b38 to i8
  %v3_10009b3c = inttoptr i32 %v2_10009b28 to i8*
  store i8 %v1_10009b3c, i8* %v3_10009b3c, align 1
  %v0_10009b40 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009b40 = add i32 %v0_10009b40, -1
  store i32 %v1_10009b40, i32* %ctr.global-to-local, align 4
  %v2_10009b40 = icmp eq i32 %v1_10009b40, 0
  br i1 %v2_10009b40, label %dec_label_pc_10009b44, label %dec_label_pc_10009b20.dec_label_pc_10009b20_crit_edge

dec_label_pc_10009b20.dec_label_pc_10009b20_crit_edge: ; preds = %dec_label_pc_10009b20
  %v0_10009b20.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10009b20.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10009b24.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10009b28.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10009b20

dec_label_pc_10009b44:                            ; preds = %dec_label_pc_10009b20
  %v0_10009b44 = load i32, i32* %r7.global-to-local, align 4
  %v1_10009b44 = icmp slt i32 %v0_10009b44, 0
  %v3_10009b44 = icmp eq i32 %v0_10009b44, 0
  store i1 %v1_10009b44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009b44, i1* %cr7_eq.global-to-local, align 1
  %v1_10009b48 = add i32 %v0_10009b44, 1
  store i32 %v1_10009b48, i32* %r7.global-to-local, align 4
  br i1 %v3_10009b44, label %dec_label_pc_10009b44.dec_label_pc_10009ac4_crit_edge, label %dec_label_pc_10009b50

dec_label_pc_10009b44.dec_label_pc_10009ac4_crit_edge: ; preds = %dec_label_pc_10009b44
  %v0_10009ac8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009ac4

dec_label_pc_10009b50:                            ; preds = %dec_label_pc_10009b44
  %v0_10009b50 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009b50 = icmp ult i32 %v0_10009b50, 96
  %v2_10009b50 = icmp ugt i32 %v0_10009b50, 96
  %v3_10009b50 = icmp eq i32 %v0_10009b50, 96
  store i1 %v1_10009b50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009b50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10009b50, label %dec_label_pc_10009b68, label %dec_label_pc_10009b58

dec_label_pc_10009b58:                            ; preds = %dec_label_pc_10009b50
  %v1_10009b60 = add i32 %v0_10009b50, 32
  store i32 %v1_10009b60, i32* %r0.global-to-local, align 4
  %v1_10009b64 = urem i32 %v1_10009b60, 256
  store i32 %v1_10009b64, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009b68

dec_label_pc_10009b68:                            ; preds = %dec_label_pc_10009b50, %dec_label_pc_10009b58
  %v0_10009b80 = phi i32 [ %v1_10009b64, %dec_label_pc_10009b58 ], [ %v0_10009b50, %dec_label_pc_10009b50 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_10009b58 ], [ 101, %dec_label_pc_10009b50 ]
  %v1_10009b68 = icmp slt i32 %v0_10009b80, 103
  %v3_10009b68 = icmp eq i32 %v0_10009b80, 103
  store i1 %v1_10009b68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009b68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009b68, label %dec_label_pc_10009b70, label %dec_label_pc_10009b80

dec_label_pc_10009b70:                            ; preds = %dec_label_pc_10009b68
  %v0_10009b70 = load i32, i32* %r30.global-to-local, align 4
  %v1_10009b70 = icmp slt i32 %v0_10009b70, 0
  %v3_10009b70 = icmp eq i32 %v0_10009b70, 0
  store i1 %v1_10009b70, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009b70, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009b70, label %dec_label_pc_10009b88, label %dec_label_pc_10009b78

dec_label_pc_10009b78:                            ; preds = %dec_label_pc_10009b70
  %v1_10009b78 = add i32 %v0_10009b70, -1
  store i32 %v1_10009b78, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009b88

dec_label_pc_10009b80:                            ; preds = %dec_label_pc_10009b68
  %v1_10009b80 = icmp slt i32 %v0_10009b80, 102
  %v3_10009b80 = icmp eq i32 %v0_10009b80, 102
  store i1 %v1_10009b80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009b80, i1* %cr7_eq.global-to-local, align 1
  %v0_10009b90 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10009b80, label %dec_label_pc_10009b90, label %dec_label_pc_10009b88

dec_label_pc_10009b88:                            ; preds = %dec_label_pc_10009b80, %dec_label_pc_10009b70, %dec_label_pc_10009b78
  %v0_10009b88 = phi i32 [ 0, %dec_label_pc_10009b70 ], [ %v1_10009b78, %dec_label_pc_10009b78 ], [ %v0_10009b90, %dec_label_pc_10009b80 ]
  store i32 %v0_10009b88, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009bb4

dec_label_pc_10009b90:                            ; preds = %dec_label_pc_10009b80
  %v1_10009b90 = load i32, i32* %r4.global-to-local, align 4
  %v2_10009b90 = add i32 %v1_10009b90, %v0_10009b90
  store i32 %v2_10009b90, i32* %r10.global-to-local, align 4
  %v1_10009b94 = icmp slt i32 %v2_10009b90, -1
  %v3_10009b94 = icmp eq i32 %v2_10009b90, -1
  store i1 %v1_10009b94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009b94, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_10009b90, -2
  br i1 %tmp77, label %dec_label_pc_10009bb4, label %dec_label_pc_10009b9c

dec_label_pc_10009b9c:                            ; preds = %dec_label_pc_10009b90
  store i32 48, i32* %r4.global-to-local, align 4
  %v2_10009ba0 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_10009ba0, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268475308, i32* @lr, align 4
  %v3_10009ba8 = call i32 @__GI_memset(i32 %v2_10009ba0, i32 48, i32 17)
  store i32 %v3_10009ba8, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009bb4

dec_label_pc_10009bb4:                            ; preds = %dec_label_pc_10009b90, %dec_label_pc_10009b88, %dec_label_pc_10009b9c
  %v1_10009bd8 = phi i32 [ %v2_10009b90, %dec_label_pc_10009b90 ], [ %v0_10009b88, %dec_label_pc_10009b88 ], [ -1, %dec_label_pc_10009b9c ]
  %v1_10009bb4 = icmp slt i32 %v1_10009bd8, 16
  %v2_10009bb4 = icmp sgt i32 %v1_10009bd8, 16
  %v3_10009bb4 = icmp eq i32 %v1_10009bd8, 16
  store i1 %v1_10009bb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009bb4, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_10009bc8 = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_10009bc8, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_10009bb4, label %dec_label_pc_10009bf0, label %dec_label_pc_10009bd4

dec_label_pc_10009bd4:                            ; preds = %dec_label_pc_10009bb4
  %v2_10009bd4 = ptrtoint i32* %stack_var_-177 to i32
  %v2_10009bd8 = add i32 %v1_10009bd8, %v2_10009bd4
  store i32 %v2_10009bd8, i32* %r9.global-to-local, align 4
  %v1_10009bdc = add i32 %v2_10009bd8, 2
  %v2_10009bdc = inttoptr i32 %v1_10009bdc to i8*
  %v3_10009bdc = load i8, i8* %v2_10009bdc, align 1
  %v4_10009bdc = zext i8 %v3_10009bdc to i32
  store i32 %v4_10009bdc, i32* %r0.global-to-local, align 4
  store i32 %v1_10009bdc, i32* %r11.global-to-local, align 4
  %v1_10009be4 = sub nsw i32 52, %v4_10009bdc
  %v2_10009be4 = sub nuw nsw i32 -1, %v4_10009bdc
  %not.v5_10009be4 = icmp ugt i32 %v1_10009be4, %v2_10009be4
  %v1_10009bec = zext i1 %not.v5_10009be4 to i32
  store i32 %v1_10009bec, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009bf0

dec_label_pc_10009bf0:                            ; preds = %dec_label_pc_10009bb4, %dec_label_pc_10009bd4, %dec_label_pc_10009bf0.backedge
  %v0_10009bf4 = phi i32 [ %v0_10009bf4.pre, %dec_label_pc_10009bf0.backedge ], [ 0, %dec_label_pc_10009bb4 ], [ %v1_10009bec, %dec_label_pc_10009bd4 ]
  %v0_10009bf0 = phi i32 [ %v0_10009bf0.pre, %dec_label_pc_10009bf0.backedge ], [ %v2_10009bc8, %dec_label_pc_10009bb4 ], [ %v1_10009bdc, %dec_label_pc_10009bd4 ]
  %v1_10009bf0 = add i32 %v0_10009bf0, -1
  %v2_10009bf0 = inttoptr i32 %v1_10009bf0 to i8*
  %v3_10009bf0 = load i8, i8* %v2_10009bf0, align 1
  %v4_10009bf0 = zext i8 %v3_10009bf0 to i32
  store i32 %v1_10009bf0, i32* %r11.global-to-local, align 4
  %v2_10009bf4 = add i32 %v4_10009bf0, %v0_10009bf4
  store i32 %v2_10009bf4, i32* %r0.global-to-local, align 4
  %v1_10009bf8 = urem i32 %v2_10009bf4, 256
  store i32 %v1_10009bf8, i32* %r9.global-to-local, align 4
  %v1_10009bfc = trunc i32 %v2_10009bf4 to i8
  store i8 %v1_10009bfc, i8* %v2_10009bf0, align 1
  %v0_10009c00 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009c00 = icmp slt i32 %v0_10009c00, 48
  %v3_10009c00 = icmp eq i32 %v0_10009c00, 48
  store i1 %v1_10009c00, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009c00, i1* %cr7_eq.global-to-local, align 1
  %v1_10009c04 = icmp ult i32 %v0_10009c00, 57
  %v2_10009c04 = icmp ugt i32 %v0_10009c00, 57
  %v3_10009c04 = icmp eq i32 %v0_10009c00, 57
  store i1 %v1_10009c04, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10009c04, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10009c04, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10009c00, %v2_10009c04
  br i1 %brmerge, label %dec_label_pc_10009bf0.backedge, label %dec_label_pc_10009c10

dec_label_pc_10009bf0.backedge:                   ; preds = %dec_label_pc_10009bf0
  %v0_10009bf0.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10009bf4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009bf0

dec_label_pc_10009c10:                            ; preds = %dec_label_pc_10009bf0
  %v2_10009c10 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_10009c10, i32* %r0.global-to-local, align 4
  %v0_10009c14 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10009c14, i32* %r7.global-to-local, align 4
  %v0_10009c18 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009c18 = icmp ult i32 %v0_10009c18, %v2_10009c10
  %v3_10009c18 = icmp ugt i32 %v0_10009c18, %v2_10009c10
  %v4_10009c18 = icmp eq i32 %v0_10009c18, %v2_10009c10
  store i1 %v2_10009c18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009c18, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_10009aa4, i32* %r8.global-to-local, align 4
  br i1 %v3_10009c18, label %dec_label_pc_10009c30, label %dec_label_pc_10009c24

dec_label_pc_10009c24:                            ; preds = %dec_label_pc_10009c10
  store i32 %v2_10009c10, i32* %r8.global-to-local, align 4
  %v1_10009c28 = add i32 %v0_10009c14, 1
  store i32 %v1_10009c28, i32* %r7.global-to-local, align 4
  store i32 %v2_10009c10, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009c30

dec_label_pc_10009c30:                            ; preds = %dec_label_pc_10009c10, %dec_label_pc_10009c24
  %v2_10009c38 = phi i32 [ %v0_10009c18, %dec_label_pc_10009c10 ], [ %v2_10009c10, %dec_label_pc_10009c24 ]
  %v0_10009c30 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009c30 = icmp slt i32 %v0_10009c30, 103
  %v3_10009c30 = icmp eq i32 %v0_10009c30, 103
  store i1 %v1_10009c30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009c30, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10009c38 = add i32 %v2_10009c38, 1
  %v4_10009c38 = inttoptr i32 %v3_10009c38 to i8*
  store i8 0, i8* %v4_10009c38, align 1
  %v0_10009c3c = load i32, i32* %r11.global-to-local, align 4
  %v1_10009c3c = add i32 %v0_10009c3c, 1
  store i32 %v1_10009c3c, i32* %r9.global-to-local, align 4
  %v0_10009c40 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009c40, label %dec_label_pc_10009c44, label %dec_label_pc_10009c68

dec_label_pc_10009c44:                            ; preds = %dec_label_pc_10009c30
  %v0_10009c44 = load i32, i32* %r7.global-to-local, align 4
  %v1_10009c44 = icmp slt i32 %v0_10009c44, -4
  %v3_10009c44 = icmp eq i32 %v0_10009c44, -4
  store i1 %v1_10009c44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009c44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10009c44, label %dec_label_pc_10009c60, label %dec_label_pc_10009c4c

dec_label_pc_10009c4c:                            ; preds = %dec_label_pc_10009c44
  %v1_10009c4c = load i32, i32* %r10.global-to-local, align 4
  %v2_10009c4c = icmp sgt i32 %v1_10009c4c, %v0_10009c44
  %v3_10009c4c = icmp slt i32 %v1_10009c4c, %v0_10009c44
  %v4_10009c4c = icmp eq i32 %v1_10009c4c, %v0_10009c44
  store i1 %v2_10009c4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009c4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009c4c, label %dec_label_pc_10009c60, label %dec_label_pc_10009c54

dec_label_pc_10009c54:                            ; preds = %dec_label_pc_10009c4c
  %v2_10009c54 = sub i32 %v1_10009c4c, %v0_10009c44
  store i32 %v2_10009c54, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009c80

dec_label_pc_10009c60:                            ; preds = %dec_label_pc_10009c4c, %dec_label_pc_10009c44
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009c74

dec_label_pc_10009c68:                            ; preds = %dec_label_pc_10009c30
  %v0_10009c68 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009c68 = icmp slt i32 %v0_10009c68, 102
  %v3_10009c68 = icmp eq i32 %v0_10009c68, 102
  store i1 %v1_10009c68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009c68, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10009c68, i32* %r4.global-to-local, align 4
  br i1 %v3_10009c68, label %dec_label_pc_10009c80thread-pre-split, label %dec_label_pc_10009c74

dec_label_pc_10009c74:                            ; preds = %dec_label_pc_10009c68, %dec_label_pc_10009c60
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_10009c94

dec_label_pc_10009c80thread-pre-split:            ; preds = %dec_label_pc_10009c68
  %v0_10009c80.pr = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10009c80

dec_label_pc_10009c80:                            ; preds = %dec_label_pc_10009c80thread-pre-split, %dec_label_pc_10009c54
  %v0_10009c84 = phi i32 [ %v0_10009c80.pr, %dec_label_pc_10009c80thread-pre-split ], [ %v0_10009c44, %dec_label_pc_10009c54 ]
  %v1_10009c80 = icmp slt i32 %v0_10009c84, 0
  %v2_10009c80 = icmp sgt i32 %v0_10009c84, 0
  %v3_10009c80 = icmp eq i32 %v0_10009c84, 0
  store i1 %v1_10009c80, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10009c80, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10009c80, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_10009c84, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_10009c84, -1
  br i1 %tmp78, label %dec_label_pc_10009c94, label %dec_label_pc_10009c8c

dec_label_pc_10009c8c:                            ; preds = %dec_label_pc_10009c80
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_10009c90 = load i32, i32* %r8.global-to-local, align 4
  %v3_10009c90 = add i32 %v2_10009c90, -1
  %v4_10009c90 = inttoptr i32 %v3_10009c90 to i8*
  store i8 48, i8* %v4_10009c90, align 1
  store i32 %v3_10009c90, i32* %r8.global-to-local, align 4
  %v1_10009cb0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10009cc4.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_10009c94

dec_label_pc_10009c94:                            ; preds = %dec_label_pc_10009c80, %dec_label_pc_10009c74, %dec_label_pc_10009c8c
  %v0_10009cc4 = phi i1 [ %v1_10009c80, %dec_label_pc_10009c80 ], [ false, %dec_label_pc_10009c74 ], [ %v0_10009cc4.pre, %dec_label_pc_10009c8c ]
  %v1_10009cb0 = phi i32 [ %v1_10009c3c, %dec_label_pc_10009c80 ], [ %v1_10009c3c, %dec_label_pc_10009c74 ], [ %v1_10009cb0.pre, %dec_label_pc_10009c8c ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_10009ca0 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_10009ca0, i32* %r0.global-to-local, align 4
  %v0_10009ca8 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009ca8 = add i32 %v0_10009ca8, 1
  store i32 %v1_10009ca8, i32* %r6.global-to-local, align 4
  %v2_10009cb0 = sub i32 %v1_10009cb0, %v1_10009ca8
  store i32 %v2_10009cb0, i32* %r11.global-to-local, align 4
  %v1_10009cb4 = inttoptr i32 %v0_10009ca8 to i8*
  %v2_10009cb4 = load i8, i8* %v1_10009cb4, align 1
  %v3_10009cb4 = zext i8 %v2_10009cb4 to i32
  store i32 %v3_10009cb4, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_10009cc4, label %dec_label_pc_10009d24, label %dec_label_pc_10009cc8

dec_label_pc_10009cc8:                            ; preds = %dec_label_pc_10009c94
  %v0_10009cc8 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009cc8 = icmp slt i32 %v0_10009cc8, %v2_10009cb0
  %v4_10009cc8 = icmp eq i32 %v0_10009cc8, %v2_10009cb0
  store i1 %v2_10009cc8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009cc8, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_10009cc8, label %dec_label_pc_10009d1c, label %dec_label_pc_10009cdc

dec_label_pc_10009cdc:                            ; preds = %dec_label_pc_10009cc8
  %v2_10009cdc = sub i32 %v0_10009cc8, %v2_10009cb0
  store i32 %v2_10009cdc, i32* %r0.global-to-local, align 4
  %v4_10009cdc = icmp sgt i32 %v2_10009cdc, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_10009cdc, label %dec_label_pc_10009cf8, label %dec_label_pc_10009ce8

dec_label_pc_10009ce8:                            ; preds = %dec_label_pc_10009cdc
  %v2_10009cec = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10009cec, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009d40

dec_label_pc_10009cf8:                            ; preds = %dec_label_pc_10009cdc
  store i32 ptrtoint (i32* @global_var_1000bbdb.181 to i32), i32* %r9.global-to-local, align 4
  %v2_10009d04 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_10009d04, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_10009d40

dec_label_pc_10009d1c:                            ; preds = %dec_label_pc_10009cc8
  %v0_10009d1c = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10009d1c, label %dec_label_pc_10009d2c, label %dec_label_pc_10009d20

dec_label_pc_10009d20:                            ; preds = %dec_label_pc_10009d1c
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009d24

dec_label_pc_10009d24:                            ; preds = %dec_label_pc_10009c94, %dec_label_pc_10009d20
  %v2_10009d24 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10009d24, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009d40

dec_label_pc_10009d2c:                            ; preds = %dec_label_pc_10009d1c
  %v2_10009d2c = sub i32 %v2_10009cb0, %v0_10009cc8
  store i32 %v2_10009d2c, i32* %r11.global-to-local, align 4
  %v2_10009d34 = add i32 %v0_10009cc8, %v1_10009ca8
  store i32 %v2_10009d34, i32* %r6.global-to-local, align 4
  %v2_10009d38 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10009d38, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009d40

dec_label_pc_10009d40:                            ; preds = %dec_label_pc_10009d24, %dec_label_pc_10009cf8, %dec_label_pc_10009ce8, %dec_label_pc_10009d2c
  %v1_10009d6c = phi i32 [ %v2_10009d24, %dec_label_pc_10009d24 ], [ %v2_10009d04, %dec_label_pc_10009cf8 ], [ %v2_10009cec, %dec_label_pc_10009ce8 ], [ %v2_10009d38, %dec_label_pc_10009d2c ]
  %v0_10009d4c = phi i32 [ %v2_10009cb0, %dec_label_pc_10009d24 ], [ 0, %dec_label_pc_10009cf8 ], [ 0, %dec_label_pc_10009ce8 ], [ %v2_10009d2c, %dec_label_pc_10009d2c ]
  %v3_10009d40 = load i32, i32* %v2_10009910, align 4
  store i32 %v3_10009d40, i32* %r0.global-to-local, align 4
  %v1_10009d44 = and i32 %v3_10009d40, 16
  store i32 %v1_10009d44, i32* %r9.global-to-local, align 4
  %v3_10009d44 = icmp eq i32 %v1_10009d44, 0
  br i1 %v3_10009d44, label %dec_label_pc_10009d4c, label %dec_label_pc_10009d64

dec_label_pc_10009d4c:                            ; preds = %dec_label_pc_10009d40
  %v1_10009d4c = icmp slt i32 %v0_10009d4c, 0
  %v3_10009d4c = icmp eq i32 %v0_10009d4c, 0
  store i1 %v1_10009d4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009d4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009d4c, label %dec_label_pc_10009d54, label %dec_label_pc_10009d64

dec_label_pc_10009d54:                            ; preds = %dec_label_pc_10009d4c
  %v0_10009d54 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009d54 = icmp slt i32 %v0_10009d54, 103
  %v3_10009d54 = icmp eq i32 %v0_10009d54, 103
  store i1 %v1_10009d54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009d54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009d54, label %dec_label_pc_10009d84, label %dec_label_pc_10009d5c

dec_label_pc_10009d5c:                            ; preds = %dec_label_pc_10009d54
  %v0_10009d5c = load i32, i32* %r30.global-to-local, align 4
  %v1_10009d5c = icmp slt i32 %v0_10009d5c, 0
  %v3_10009d5c = icmp eq i32 %v0_10009d5c, 0
  store i1 %v1_10009d5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009d5c, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_10009d5c, 1
  br i1 %tmp79, label %dec_label_pc_10009d84, label %dec_label_pc_10009d64

dec_label_pc_10009d64:                            ; preds = %dec_label_pc_10009d4c, %dec_label_pc_10009d40, %dec_label_pc_10009d5c
  %v2_10009d6c = inttoptr i32 %v1_10009d6c to i32*
  store i32 112, i32* %v2_10009d6c, align 4
  store i32 ptrtoint (i32* @global_var_1000bbe8.182 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10009d78 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009d78 = add i32 %v1_10009d78, 8
  %v3_10009d78 = inttoptr i32 %v2_10009d78 to i32*
  store i32 ptrtoint (i32* @global_var_1000bbe8.182 to i32), i32* %v3_10009d78, align 4
  %v0_10009d7c = load i32, i32* %r0.global-to-local, align 4
  %v1_10009d7c = load i32, i32* %r8.global-to-local, align 4
  %v2_10009d7c = add i32 %v1_10009d7c, 4
  %v3_10009d7c = inttoptr i32 %v2_10009d7c to i32*
  store i32 %v0_10009d7c, i32* %v3_10009d7c, align 4
  %v0_10009d80 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009d80 = add i32 %v0_10009d80, 12
  store i32 %v1_10009d80, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009d84

dec_label_pc_10009d84:                            ; preds = %dec_label_pc_10009d5c, %dec_label_pc_10009d54, %dec_label_pc_10009d64
  %v1_10009d94 = phi i32 [ %v1_10009d6c, %dec_label_pc_10009d5c ], [ %v1_10009d6c, %dec_label_pc_10009d54 ], [ %v1_10009d80, %dec_label_pc_10009d64 ]
  %v0_10009d84 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009d84 = add i32 %v0_10009d84, 1
  store i32 %v1_10009d84, i32* %r10.global-to-local, align 4
  %v4_10009d84 = icmp eq i32 %v1_10009d84, 0
  br i1 %v4_10009d84, label %dec_label_pc_10009dac, label %dec_label_pc_10009d8c

dec_label_pc_10009d8c:                            ; preds = %dec_label_pc_10009d84
  %v1_10009d8c = sub i32 -1, %v0_10009d84
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_10009d94 = add i32 %v1_10009d94, 4
  %v3_10009d94 = inttoptr i32 %v2_10009d94 to i32*
  store i32 %v1_10009d8c, i32* %v3_10009d94, align 4
  store i32 ptrtoint (i32* @global_var_1000bbdb.181 to i32), i32* %r9.global-to-local, align 4
  %v0_10009da0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009da0 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009da0 = inttoptr i32 %v1_10009da0 to i32*
  store i32 %v0_10009da0, i32* %v2_10009da0, align 4
  %v0_10009da4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009da4 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009da4 = add i32 %v1_10009da4, 8
  %v3_10009da4 = inttoptr i32 %v2_10009da4 to i32*
  store i32 %v0_10009da4, i32* %v3_10009da4, align 4
  %v0_10009da8 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009da8 = add i32 %v0_10009da8, 12
  store i32 %v1_10009da8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009dac

dec_label_pc_10009dac:                            ; preds = %dec_label_pc_10009d84, %dec_label_pc_10009d8c
  %v1_10009db8 = phi i32 [ %v1_10009d94, %dec_label_pc_10009d84 ], [ %v1_10009da8, %dec_label_pc_10009d8c ]
  %v0_10009dac = load i32, i32* %r11.global-to-local, align 4
  %v1_10009dac = icmp slt i32 %v0_10009dac, 0
  %v3_10009dac = icmp eq i32 %v0_10009dac, 0
  store i1 %v1_10009dac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009dac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009dac, label %dec_label_pc_10009dc8, label %dec_label_pc_10009db4

dec_label_pc_10009db4:                            ; preds = %dec_label_pc_10009dac
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_10009db8 = load i32, i32* %r6.global-to-local, align 4
  %v2_10009db8 = add i32 %v1_10009db8, 8
  %v3_10009db8 = inttoptr i32 %v2_10009db8 to i32*
  store i32 %v0_10009db8, i32* %v3_10009db8, align 4
  %v0_10009dbc = load i32, i32* %r0.global-to-local, align 4
  %v1_10009dbc = load i32, i32* %r8.global-to-local, align 4
  %v2_10009dbc = inttoptr i32 %v1_10009dbc to i32*
  store i32 %v0_10009dbc, i32* %v2_10009dbc, align 4
  %v0_10009dc0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009dc0 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009dc0 = add i32 %v1_10009dc0, 4
  %v3_10009dc0 = inttoptr i32 %v2_10009dc0 to i32*
  store i32 %v0_10009dc0, i32* %v3_10009dc0, align 4
  %v0_10009dc4 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009dc4 = add i32 %v0_10009dc4, 12
  store i32 %v1_10009dc4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009dc8

dec_label_pc_10009dc8:                            ; preds = %dec_label_pc_10009dac, %dec_label_pc_10009db4
  %v1_10009df0 = phi i32 [ %v1_10009db8, %dec_label_pc_10009dac ], [ %v1_10009dc4, %dec_label_pc_10009db4 ]
  %v0_10009dc8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009dc8 = icmp slt i32 %v0_10009dc8, 103
  %v3_10009dc8 = icmp eq i32 %v0_10009dc8, 103
  store i1 %v1_10009dc8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009dc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009dc8, label %dec_label_pc_10009dd0, label %dec_label_pc_10009ddc

dec_label_pc_10009dd0:                            ; preds = %dec_label_pc_10009dc8
  %v3_10009dd0 = load i32, i32* %v2_10009910, align 4
  store i32 %v3_10009dd0, i32* %r0.global-to-local, align 4
  %v1_10009dd4 = and i32 %v3_10009dd0, 16
  store i32 %v1_10009dd4, i32* %r9.global-to-local, align 4
  %v3_10009dd4 = icmp eq i32 %v1_10009dd4, 0
  br i1 %v3_10009dd4, label %dec_label_pc_10009e08, label %dec_label_pc_10009ddc

dec_label_pc_10009ddc:                            ; preds = %dec_label_pc_10009dc8, %dec_label_pc_10009dd0
  %v0_10009ddc = load i32, i32* %r10.global-to-local, align 4
  %v1_10009ddc = load i32, i32* %r11.global-to-local, align 4
  %v2_10009ddc = sub i32 %v1_10009ddc, %v0_10009ddc
  store i32 %v2_10009ddc, i32* %r9.global-to-local, align 4
  %v1_10009de0 = load i32, i32* %r30.global-to-local, align 4
  %v2_10009de0 = icmp sgt i32 %v1_10009de0, %v2_10009ddc
  %v4_10009de0 = icmp eq i32 %v1_10009de0, %v2_10009ddc
  store i1 %v2_10009de0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009de0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10009de0, label %dec_label_pc_10009de8, label %dec_label_pc_10009e08

dec_label_pc_10009de8:                            ; preds = %dec_label_pc_10009ddc
  %v2_10009de8 = sub i32 %v1_10009de0, %v2_10009ddc
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_10009df0 = add i32 %v1_10009df0, 4
  %v3_10009df0 = inttoptr i32 %v2_10009df0 to i32*
  store i32 %v2_10009de8, i32* %v3_10009df0, align 4
  store i32 ptrtoint (i32* @global_var_1000bbdb.181 to i32), i32* %r9.global-to-local, align 4
  %v0_10009dfc = load i32, i32* %r0.global-to-local, align 4
  %v1_10009dfc = load i32, i32* %r8.global-to-local, align 4
  %v2_10009dfc = inttoptr i32 %v1_10009dfc to i32*
  store i32 %v0_10009dfc, i32* %v2_10009dfc, align 4
  %v0_10009e00 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009e00 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009e00 = add i32 %v1_10009e00, 8
  %v3_10009e00 = inttoptr i32 %v2_10009e00 to i32*
  store i32 %v0_10009e00, i32* %v3_10009e00, align 4
  %v0_10009e04 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009e04 = add i32 %v0_10009e04, 12
  store i32 %v1_10009e04, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009e08

dec_label_pc_10009e08:                            ; preds = %dec_label_pc_10009ddc, %dec_label_pc_10009dd0, %dec_label_pc_10009de8
  %v1_10009e9c37 = phi i32 [ %v1_10009df0, %dec_label_pc_10009ddc ], [ %v1_10009df0, %dec_label_pc_10009dd0 ], [ %v1_10009e04, %dec_label_pc_10009de8 ]
  %v0_10009e08 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009e08 = icmp slt i32 %v0_10009e08, 102
  %v3_10009e08 = icmp eq i32 %v0_10009e08, 102
  store i1 %v1_10009e08, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009e08, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009e08, label %dec_label_pc_10009e90, label %dec_label_pc_10009e10

dec_label_pc_10009e10:                            ; preds = %dec_label_pc_10009e08
  %v0_10009e10 = load i32, i32* %r7.global-to-local, align 4
  %v1_10009e10 = icmp slt i32 %v0_10009e10, 0
  %v3_10009e10 = icmp eq i32 %v0_10009e10, 0
  store i1 %v1_10009e10, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009e10, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_10009e10, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_10009e10, -1
  br i1 %tmp80, label %dec_label_pc_10009e2c, label %dec_label_pc_10009e24

dec_label_pc_10009e24:                            ; preds = %dec_label_pc_10009e10
  %v1_10009e24 = sub i32 0, %v0_10009e10
  store i32 %v1_10009e24, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009e2c

dec_label_pc_10009e2c:                            ; preds = %dec_label_pc_10009e10, %dec_label_pc_10009e24
  %v0_10009e4031 = phi i32 [ %v0_10009e10, %dec_label_pc_10009e10 ], [ %v1_10009e24, %dec_label_pc_10009e24 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10009e30 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_10009e30, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10009e40

dec_label_pc_10009e40:                            ; preds = %dec_label_pc_10009e40.backedge, %dec_label_pc_10009e2c
  %v2_10009e60 = phi i32 [ %v3_10009e60, %dec_label_pc_10009e40.backedge ], [ %v2_10009e30, %dec_label_pc_10009e2c ]
  %v0_10009e44 = phi i32 [ %v0_10009e44.pre, %dec_label_pc_10009e40.backedge ], [ 2, %dec_label_pc_10009e2c ]
  %v1_10009e40 = phi i32 [ %v1_10009e40.pre, %dec_label_pc_10009e40.backedge ], [ 10, %dec_label_pc_10009e2c ]
  %v1_10009e54 = phi i32 [ %v0_10009e40.pre, %dec_label_pc_10009e40.backedge ], [ %v0_10009e4031, %dec_label_pc_10009e2c ]
  %v2_10009e40 = sdiv i32 %v1_10009e54, %v1_10009e40
  store i32 %v2_10009e40, i32* %r0.global-to-local, align 4
  %v1_10009e44 = add i32 %v0_10009e44, 1
  store i32 %v1_10009e44, i32* %r7.global-to-local, align 4
  %v1_10009e48 = icmp slt i32 %v1_10009e44, 3
  %v3_10009e48 = icmp eq i32 %v1_10009e44, 3
  store i1 %v1_10009e48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009e48, i1* %cr7_eq.global-to-local, align 1
  %v1_10009e50 = icmp slt i32 %v2_10009e40, 0
  %v2_10009e50 = icmp sgt i32 %v2_10009e40, 0
  %v3_10009e50 = icmp eq i32 %v2_10009e40, 0
  store i1 %v1_10009e50, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10009e50, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10009e50, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_10009e40, -10
  store i32 %v2_10009e40, i32* %r11.global-to-local, align 4
  %v2_10009e54 = add i32 %v1_10009e54, 48
  %v1_10009e5c = add i32 %v2_10009e54, %tmp81
  store i32 %v1_10009e5c, i32* %r9.global-to-local, align 4
  %v1_10009e60 = trunc i32 %v1_10009e5c to i8
  %v3_10009e60 = add i32 %v2_10009e60, -1
  %v4_10009e60 = inttoptr i32 %v3_10009e60 to i8*
  store i8 %v1_10009e60, i8* %v4_10009e60, align 1
  store i32 %v3_10009e60, i32* %r10.global-to-local, align 4
  %v0_10009e64 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10009e64 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10009e64 = or i1 %v0_10009e64, %v1_10009e64
  br i1 %v2_10009e64, label %dec_label_pc_10009e40.backedge, label %dec_label_pc_10009e68

dec_label_pc_10009e40.backedge:                   ; preds = %dec_label_pc_10009e40, %dec_label_pc_10009e68
  %v0_10009e40.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10009e40.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_10009e44.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10009e40

dec_label_pc_10009e68:                            ; preds = %dec_label_pc_10009e40
  %v0_10009e68 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10009e68, label %dec_label_pc_10009e6c, label %dec_label_pc_10009e40.backedge

dec_label_pc_10009e6c:                            ; preds = %dec_label_pc_10009e68
  %v1_10009e6c = add i32 %v2_10009e60, -2
  store i32 %v1_10009e6c, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_10009e74 = add i32 %v2_10009e60, -3
  store i32 %v1_10009e74, i32* %r11.global-to-local, align 4
  %v0_10009e78 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009e78 = trunc i32 %v0_10009e78 to i8
  %v4_10009e78 = inttoptr i32 %v1_10009e6c to i8*
  store i8 %v1_10009e78, i8* %v4_10009e78, align 1
  %v0_10009e7c = load i32, i32* %r5.global-to-local, align 4
  %v1_10009e7c = trunc i32 %v0_10009e7c to i8
  %v2_10009e7c = load i32, i32* %r9.global-to-local, align 4
  %v3_10009e7c = add i32 %v2_10009e7c, -1
  %v4_10009e7c = inttoptr i32 %v3_10009e7c to i8*
  store i8 %v1_10009e7c, i8* %v4_10009e7c, align 1
  %v0_10009e80 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009e80 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009e80 = inttoptr i32 %v1_10009e80 to i32*
  store i32 %v0_10009e80, i32* %v2_10009e80, align 4
  %v0_10009e84 = load i32, i32* %r7.global-to-local, align 4
  %v1_10009e84 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009e84 = add i32 %v1_10009e84, 4
  %v3_10009e84 = inttoptr i32 %v2_10009e84 to i32*
  store i32 %v0_10009e84, i32* %v3_10009e84, align 4
  %v0_10009e88 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009e88 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009e88 = add i32 %v1_10009e88, 8
  %v3_10009e88 = inttoptr i32 %v2_10009e88 to i32*
  store i32 %v0_10009e88, i32* %v3_10009e88, align 4
  %v0_10009e8c = load i32, i32* %r8.global-to-local, align 4
  %v1_10009e8c = add i32 %v0_10009e8c, 12
  store i32 %v1_10009e8c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009e90

dec_label_pc_10009e90:                            ; preds = %dec_label_pc_10009e08, %dec_label_pc_100099e4, %dec_label_pc_10009e6c
  %v0_10009f0c = phi i32 [ %v1_10009e9c37, %dec_label_pc_10009e08 ], [ %v2_100099f0, %dec_label_pc_100099e4 ], [ %v1_10009e8c, %dec_label_pc_10009e6c ]
  %v2_10009e90 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_10009e90, i32* %r9.global-to-local, align 4
  %v1_10009ea0.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10009e94

dec_label_pc_10009e94:                            ; preds = %dec_label_pc_10009e94, %dec_label_pc_10009e90
  %v1_10009ea0 = phi i32 [ %v2_10009ea0, %dec_label_pc_10009e94 ], [ %v1_10009ea0.pre, %dec_label_pc_10009e90 ]
  %v0_10009e94 = phi i32 [ %v1_10009e98, %dec_label_pc_10009e94 ], [ %v2_10009e90, %dec_label_pc_10009e90 ]
  %v1_10009e94 = inttoptr i32 %v0_10009e94 to i32*
  %v2_10009e94 = load i32, i32* %v1_10009e94, align 4
  store i32 %v2_10009e94, i32* %r0.global-to-local, align 4
  %v1_10009e98 = add i32 %v0_10009e94, 12
  store i32 %v1_10009e98, i32* %r9.global-to-local, align 4
  %v2_10009e9c = icmp ult i32 %v1_10009e98, %v0_10009f0c
  %v2_10009ea0 = sub i32 %v1_10009ea0, %v2_10009e94
  store i32 %v2_10009ea0, i32* @r28, align 4
  br i1 %v2_10009e9c, label %dec_label_pc_10009e94, label %dec_label_pc_10009ea8

dec_label_pc_10009ea8:                            ; preds = %dec_label_pc_10009e94
  %v4_10009e9c = icmp eq i32 %v1_10009e98, %v0_10009f0c
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009e9c, i1* %cr7_eq.global-to-local, align 1
  %v3_10009ea8 = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_10009f0c, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_10009ea8, 0
  %v1_10009ebc = zext i1 %tmp85 to i32
  store i32 %v1_10009ebc, i32* %r9.global-to-local, align 4
  %v2_10009ec0 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_10009ec0, i32* %r0.global-to-local, align 4
  %v2_10009ec4 = sub i32 %v2_10009ea0, %v1_10009ebc
  store i32 %v2_10009ec4, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_10009ec4, 1
  br i1 %tmp82, label %dec_label_pc_10009f30, label %dec_label_pc_10009ed4

dec_label_pc_10009ed4:                            ; preds = %dec_label_pc_10009ea8
  %v3_10009ed4 = load i32, i32* %v2_10009910, align 4
  store i32 %v3_10009ed4, i32* %r0.global-to-local, align 4
  %v1_10009ed8 = and i32 %v3_10009ed4, 8
  store i32 %v1_10009ed8, i32* %r7.global-to-local, align 4
  %v3_10009ed8 = icmp eq i32 %v1_10009ed8, 0
  br i1 %v3_10009ed8, label %dec_label_pc_10009efc, label %dec_label_pc_10009ee0

dec_label_pc_10009ee0:                            ; preds = %dec_label_pc_10009ed4
  %v1_10009ee4 = add i32 %v0_10009f0c, 12
  store i32 %v1_10009ee4, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1000bbdb.181 to i32), i32* %r9.global-to-local, align 4
  %v2_10009eec = inttoptr i32 %v0_10009f0c to i32*
  store i32 160, i32* %v2_10009eec, align 4
  %v0_10009ef0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009ef0 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009ef0 = add i32 %v1_10009ef0, 4
  %v3_10009ef0 = inttoptr i32 %v2_10009ef0 to i32*
  store i32 %v0_10009ef0, i32* %v3_10009ef0, align 4
  %v0_10009ef4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009ef4 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009ef4 = add i32 %v1_10009ef4, 8
  %v3_10009ef4 = inttoptr i32 %v2_10009ef4 to i32*
  store i32 %v0_10009ef4, i32* %v3_10009ef4, align 4
  br label %dec_label_pc_10009f30

dec_label_pc_10009efc:                            ; preds = %dec_label_pc_10009ed4
  %v1_10009efc = add i32 %tmp, 16
  %v2_10009efc = inttoptr i32 %v1_10009efc to i32*
  %v3_10009efc = load i32, i32* %v2_10009efc, align 4
  store i32 %v3_10009efc, i32* %r0.global-to-local, align 4
  %v1_10009f00 = icmp slt i32 %v3_10009efc, 48
  %v3_10009f00 = icmp eq i32 %v3_10009efc, 48
  store i1 %v1_10009f00, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009f00, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009f00, label %dec_label_pc_10009f08, label %dec_label_pc_10009f24

dec_label_pc_10009f08:                            ; preds = %dec_label_pc_10009efc
  %v3_10009f08 = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_10009f0c, i32* @r30, align 4
  %v2_10009f10 = add i32 %v3_10009f08, %v2_10009ec4
  store i32 %v2_10009f10, i32* %r0.global-to-local, align 4
  store i32 %v2_10009f10, i32* %stack_var_-140, align 4
  br label %dec_label_pc_10009f30

dec_label_pc_10009f1c:                            ; preds = %dec_label_pc_10009f38
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_10009f6c

dec_label_pc_10009f24:                            ; preds = %dec_label_pc_10009efc
  store i32 %v2_10009ea0, i32* %r0.global-to-local, align 4
  store i32 %v0_10009f0c, i32* @r30, align 4
  br label %dec_label_pc_10009f30

dec_label_pc_10009f30:                            ; preds = %dec_label_pc_10009ea8, %dec_label_pc_10009f08, %dec_label_pc_10009ee0, %dec_label_pc_10009f24
  store i32 0, i32* @r29, align 4
  %v2_10009f34 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_10009f34, i32* @r31, align 4
  br label %dec_label_pc_10009f38

dec_label_pc_10009f38:                            ; preds = %dec_label_pc_10009f68, %dec_label_pc_10009f30
  %v0_10009f48 = phi i32 [ %v1_10009f54, %dec_label_pc_10009f68 ], [ %v2_10009f34, %dec_label_pc_10009f30 ]
  %v1_10009f38 = inttoptr i32 %v0_10009f48 to i32*
  %v2_10009f38 = load i32, i32* %v1_10009f38, align 4
  store i32 %v2_10009f38, i32* %r4.global-to-local, align 4
  %v0_10009f3c = load i32, i32* @r27, align 4
  store i32 %v0_10009f3c, i32* %r3.global-to-local, align 4
  %v1_10009f40 = add i32 %v0_10009f48, 4
  %v2_10009f40 = inttoptr i32 %v1_10009f40 to i32*
  %v3_10009f40 = load i32, i32* %v2_10009f40, align 4
  store i32 %v3_10009f40, i32* %r5.global-to-local, align 4
  %v0_10009f44 = load i32, i32* @r26, align 4
  store i32 %v0_10009f44, i32* %ctr.global-to-local, align 4
  %v1_10009f48 = add i32 %v0_10009f48, 8
  %v2_10009f48 = inttoptr i32 %v1_10009f48 to i32*
  %v3_10009f48 = load i32, i32* %v2_10009f48, align 4
  store i32 %v3_10009f48, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10009f44)
  %v0_10009f50 = load i32, i32* @r31, align 4
  %v1_10009f50 = add i32 %v0_10009f50, 4
  %v2_10009f50 = inttoptr i32 %v1_10009f50 to i32*
  %v3_10009f50 = load i32, i32* %v2_10009f50, align 4
  store i32 %v3_10009f50, i32* %r0.global-to-local, align 4
  %v1_10009f54 = add i32 %v0_10009f50, 12
  store i32 %v1_10009f54, i32* @r31, align 4
  %v0_10009f58 = load i32, i32* @r29, align 4
  %v1_10009f58 = load i32, i32* %r3.global-to-local, align 4
  %v2_10009f58 = add i32 %v1_10009f58, %v0_10009f58
  store i32 %v2_10009f58, i32* @r29, align 4
  %v2_10009f5c = icmp slt i32 %v1_10009f58, %v3_10009f50
  %v4_10009f5c = icmp eq i32 %v1_10009f58, %v3_10009f50
  store i1 %v2_10009f5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009f5c, i1* %cr7_eq.global-to-local, align 1
  %v1_10009f60 = load i32, i32* @r30, align 4
  %v2_10009f60 = icmp ult i32 %v1_10009f54, %v1_10009f60
  %v3_10009f60 = icmp ugt i32 %v1_10009f54, %v1_10009f60
  %v4_10009f60 = icmp eq i32 %v1_10009f54, %v1_10009f60
  store i1 %v2_10009f60, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_10009f60, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_10009f60, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10009f5c, label %dec_label_pc_10009f68, label %dec_label_pc_10009f1c

dec_label_pc_10009f68:                            ; preds = %dec_label_pc_10009f38
  br i1 %v2_10009f60, label %dec_label_pc_10009f38, label %dec_label_pc_10009f6c

dec_label_pc_10009f6c:                            ; preds = %dec_label_pc_10009f68, %dec_label_pc_10009f1c
  %v0_10009f70 = phi i32 [ -1, %dec_label_pc_10009f1c ], [ %v2_10009f58, %dec_label_pc_10009f68 ]
  store i32 %v0_100098c0, i32* %r0.global-to-local, align 4
  store i32 %v0_10009f70, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009f70

; uselistorder directives
  uselistorder i32 %v0_10009f70, { 1, 0 }
  uselistorder i32 %v1_10009f58, { 2, 1, 0 }
  uselistorder i32 %v1_10009f54, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_10009f50, { 1, 0, 2 }
  uselistorder i32 %v0_10009f48, { 0, 2, 1 }
  uselistorder i32 %v3_10009efc, { 1, 0, 2 }
  uselistorder i32 %v1_10009ebc, { 1, 0 }
  uselistorder i32 %v2_10009ea0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10009e98, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10009e94, { 1, 0 }
  uselistorder i32 %v0_10009f0c, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_10009e60, { 1, 2, 0 }
  uselistorder i32 %v1_10009e44, { 1, 0, 2 }
  uselistorder i32 %v2_10009e40, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_10009e10, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_10009de0, { 2, 0, 1 }
  uselistorder i32 %v2_10009ddc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10009d4c, { 1, 0 }
  uselistorder i32 %v2_10009cb0, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_10009c84, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_10009c4c, { 3, 0, 1, 2 }
  uselistorder i32 %v0_10009c44, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_10009c10, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_10009c00, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_10009bf4, { 1, 0, 2 }
  uselistorder i32 %v1_10009bd8, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10009b90, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10009b80, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10009b64, { 1, 0 }
  uselistorder i32 %v1_10009b40, { 1, 0 }
  uselistorder i32 %v2_10009b20, { 1, 0, 2 }
  uselistorder i32 %v0_10009ac8, { 1, 0 }
  uselistorder i32 %v1_1000992c, { 1, 0 }
  uselistorder i32 %v0_100099b8, { 2, 1, 0 }
  uselistorder i32 %v1_10009900, { 1, 0 }
  uselistorder i32 %v1_100098e0, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 2, 1, 4, 3, 0, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 36, 37, 0, 8, 9, 10, 11, 1, 12, 13, 14, 2, 15, 16, 17, 3, 18, 19, 20, 4, 21, 22, 23, 5, 6, 7, 24, 27, 25, 28, 29, 26, 31, 30, 32, 33, 34, 35, 38 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 8, 7, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 11, 9, 10, 12, 13, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 4, 5, 0, 6, 1, 7, 3, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 17, 15, 18, 16, 19, 20, 21, 22 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 29, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 31, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 4, 2, 1 }
  uselistorder i32 45, { 1, 0 }
  uselistorder i32 112, { 2, 3, 0, 1, 4 }
  uselistorder i32 176, { 1, 2, 0, 3 }
  uselistorder i8 48, { 2, 3, 4, 6, 5, 7, 8, 0, 9, 1 }
  uselistorder i1 true, { 3, 0, 2, 1, 4 }
  uselistorder i1 false, { 6, 7, 8, 9, 2, 3, 4, 5, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__GI_memset, { 12, 11, 10, 9, 6, 2, 1, 5, 4, 0, 8, 7, 3 }
  uselistorder i32 17, { 0, 3, 7, 4, 5, 8, 6, 1, 2 }
  uselistorder i32 48, { 10, 11, 1, 12, 13, 14, 6, 15, 5, 16, 2, 0, 17, 18, 24, 19, 20, 21, 3, 22, 23, 25, 7, 8, 9, 4 }
  uselistorder i32 -10, { 0, 2, 3, 4, 1 }
  uselistorder i32 10, { 1, 15, 2, 16, 0, 4, 9, 17, 18, 41, 10, 26, 27, 28, 29, 30, 31, 32, 22, 23, 19, 20, 21, 34, 33, 35, 36, 5, 38, 11, 24, 12, 25, 37, 6, 13, 3, 8, 7, 40, 14, 39 }
  uselistorder i32 9, { 5, 1, 6, 2, 7, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 4 }
  uselistorder i32 -2147483648, { 9, 1, 11, 10, 2, 4, 3, 12, 6, 5, 13, 8, 7, 14, 0 }
  uselistorder i32 268500992, { 6, 0, 7, 8, 9, 11, 10, 1, 2, 3, 4, 5 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1000bbd8.179 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0 }
  uselistorder i32 12, { 16, 17, 18, 19, 20, 21, 22, 23, 5, 8, 24, 25, 35, 26, 36, 27, 28, 59, 37, 38, 39, 0, 40, 41, 42, 12, 29, 60, 43, 44, 13, 9, 10, 11, 14, 30, 46, 45, 31, 53, 54, 55, 56, 4, 57, 1, 2, 3, 15, 47, 48, 49, 50, 32, 33, 6, 34, 51, 7, 52, 58 }
  uselistorder i32 6, { 4, 12, 13, 5, 14, 7, 15, 6, 8, 20, 21, 22, 23, 24, 1, 2, 3, 16, 17, 18, 19, 9, 10, 11, 0 }
  uselistorder i32 97, { 7, 4, 5, 6, 8, 0, 3, 1, 2 }
  uselistorder i32 32, { 24, 17, 16, 25, 26, 27, 28, 18, 29, 30, 31, 32, 33, 34, 35, 0, 39, 40, 41, 19, 42, 43, 20, 44, 45, 46, 50, 51, 47, 10, 11, 48, 49, 37, 38, 36, 1, 2, 3, 9, 8, 5, 12, 4, 21, 22, 7, 13, 6, 23, 14, 15 }
  uselistorder i32 11, { 3, 4, 0, 1, 5, 6, 7, 8, 9, 2, 10, 11, 12 }
  uselistorder i32* @r26, { 3, 4, 1, 25, 26, 27, 28, 69, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 29, 30, 31, 34, 32, 33, 35, 36, 37, 38, 39, 23, 24, 40, 41, 42, 43, 70, 71, 44, 45, 46, 2, 47, 48, 49, 50, 51, 52, 53, 54, 55, 72, 68, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32* @r27, { 12, 13, 80, 81, 82, 14, 15, 16, 17, 1, 18, 19, 20, 21, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 9, 10, 11, 83, 2, 84, 6, 33, 34, 38, 39, 40, 41, 42, 43, 3, 44, 45, 46, 47, 35, 36, 7, 37, 5, 4, 48, 49, 50, 51, 52, 53, 54, 85, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 86, 87, 78, 79, 74, 75, 76, 77 }
  uselistorder label %dec_label_pc_10009f30, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10009e90, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009e40.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10009e2c, { 1, 0 }
  uselistorder label %dec_label_pc_10009e08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009ddc, { 1, 0 }
  uselistorder label %dec_label_pc_10009dc8, { 1, 0 }
  uselistorder label %dec_label_pc_10009dac, { 1, 0 }
  uselistorder label %dec_label_pc_10009d84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009d64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009d40, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009d24, { 1, 0 }
  uselistorder label %dec_label_pc_10009c94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009c30, { 1, 0 }
  uselistorder label %dec_label_pc_10009bf0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009bb4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009b88, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009b68, { 1, 0 }
  uselistorder label %dec_label_pc_10009af4, { 1, 0 }
  uselistorder label %dec_label_pc_100099e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000993c, { 1, 0 }
  uselistorder label %dec_label_pc_10009910, { 1, 0 }
  uselistorder label %dec_label_pc_10009904, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10009f88 = urem i32 %arg1, 256
  store i32 %v1_10009f88, i32* %r4.global-to-local, align 4
  %v0_10009fa87 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_10009fac13 = icmp eq i32 %arg2, 0
  br i1 %v2_10009fac13, label %dec_label_pc_10009fb4, label %dec_label_pc_10009fb0

dec_label_pc_10009f94:                            ; preds = %dec_label_pc_10009fb0
  %v1_10009f94 = inttoptr i32 %v0_10009f94 to i8*
  %v2_10009f94 = load i8, i8* %v1_10009f94, align 1
  %v3_10009f94 = zext i8 %v2_10009f94 to i32
  %v0_10009f98 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009f98 = add i32 %v0_10009f98, -1
  store i32 %v1_10009f98, i32* %r5.global-to-local, align 4
  %v1_10009f9c = load i32, i32* %r4.global-to-local, align 4
  %v4_10009f9c = icmp eq i32 %v3_10009f94, %v1_10009f9c
  %v0_10009fa0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10009f9c, i32 %v0_10009fa0)
  %v0_10009fa4 = load i32, i32* @r3, align 4
  %v1_10009fa4 = add i32 %v0_10009fa4, 1
  store i32 %v1_10009fa4, i32* @r3, align 4
  %v0_10009fac = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009fac = add i32 %v0_10009fac, -1
  store i32 %v1_10009fac, i32* %ctr.global-to-local, align 4
  %v2_10009fac = icmp eq i32 %v1_10009fac, 0
  br i1 %v2_10009fac, label %dec_label_pc_10009fb4.loopexit, label %dec_label_pc_10009fb0

dec_label_pc_10009fb0:                            ; preds = %entry, %dec_label_pc_10009f94
  %v0_10009f94 = phi i32 [ %v1_10009fa4, %dec_label_pc_10009f94 ], [ %v0_10009fa87, %entry ]
  %v0_10009fb0.in.in = phi i32 [ %v1_10009fa4, %dec_label_pc_10009f94 ], [ %v0_10009fa87, %entry ]
  %v0_10009fb0.in = urem i32 %v0_10009fb0.in.in, 4
  %v0_10009fb0 = icmp eq i32 %v0_10009fb0.in, 0
  br i1 %v0_10009fb0, label %dec_label_pc_10009fb4.loopexit, label %dec_label_pc_10009f94

dec_label_pc_10009fb4.loopexit:                   ; preds = %dec_label_pc_10009fb0, %dec_label_pc_10009f94
  %v0_10009fdc16.ph = phi i32 [ %v1_10009fa4, %dec_label_pc_10009f94 ], [ %v0_10009f94, %dec_label_pc_10009fb0 ]
  %v0_10009fb4.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10009fb8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009fb4

dec_label_pc_10009fb4:                            ; preds = %dec_label_pc_10009fb4.loopexit, %entry
  %v0_10009fb8 = phi i32 [ 0, %entry ], [ %v0_10009fb8.pre, %dec_label_pc_10009fb4.loopexit ]
  %v0_10009fb4 = phi i32 [ %v1_10009f88, %entry ], [ %v0_10009fb4.pre, %dec_label_pc_10009fb4.loopexit ]
  %v0_10009fdc16 = phi i32 [ %v0_10009fa87, %entry ], [ %v0_10009fdc16.ph, %dec_label_pc_10009fb4.loopexit ]
  %v1_10009fb4 = mul i32 %v0_10009fb4, 256
  %v1_10009fb8 = udiv i32 %v0_10009fb8, 4
  %v2_10009fbc = or i32 %v1_10009fb4, %v0_10009fb4
  %v1_10009fc4 = mul i32 %v2_10009fbc, 65536
  %v2_10009fd0 = or i32 %v1_10009fc4, %v2_10009fbc
  store i32 %v1_10009fb8, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10009fb8, 4
  br i1 %tmp, label %dec_label_pc_1000a064, label %dec_label_pc_10009fdc

dec_label_pc_10009fdc:                            ; preds = %dec_label_pc_10009fb4, %dec_label_pc_1000a060.backedge
  %v0_1000a060 = phi i32 [ %v1_1000a060, %dec_label_pc_1000a060.backedge ], [ %v1_10009fb8, %dec_label_pc_10009fb4 ]
  %v0_10009fe4 = phi i32 [ %v1_10009fe4, %dec_label_pc_1000a060.backedge ], [ %v0_10009fb8, %dec_label_pc_10009fb4 ]
  %v0_1000a01c = phi i32 [ %v1_10009fe0, %dec_label_pc_1000a060.backedge ], [ %v0_10009fdc16, %dec_label_pc_10009fb4 ]
  %v1_10009fdc = inttoptr i32 %v0_1000a01c to i32*
  %v2_10009fdc = load i32, i32* %v1_10009fdc, align 4
  %v1_10009fe0 = add i32 %v0_1000a01c, 4
  store i32 %v1_10009fe0, i32* @r3, align 4
  %v1_10009fe4 = add i32 %v0_10009fe4, -4
  store i32 %v1_10009fe4, i32* %r5.global-to-local, align 4
  %v1_10009fe8 = add i32 %v0_1000a01c, 1
  %v2_10009fec = xor i32 %v2_10009fdc, %v2_10009fd0
  %v1_10009ff4 = add i32 %v2_10009fec, 2130640639
  %v2_10009ff8 = xor i32 %v1_10009ff4, %v2_10009fec
  %v2_10009ffc = and i32 %v2_10009ff8, -2130640640
  %v6_10009ffc = icmp eq i32 %v2_10009ffc, -2130640640
  br i1 %v6_10009ffc, label %dec_label_pc_1000a060.backedge, label %dec_label_pc_1000a008

dec_label_pc_1000a060.backedge:                   ; preds = %dec_label_pc_10009fdc, %dec_label_pc_1000a04c
  %v1_1000a060 = add i32 %v0_1000a060, -1
  store i32 %v1_1000a060, i32* %ctr.global-to-local, align 4
  %v2_1000a060 = icmp eq i32 %v1_1000a060, 0
  br i1 %v2_1000a060, label %dec_label_pc_1000a064, label %dec_label_pc_10009fdc

dec_label_pc_1000a008:                            ; preds = %dec_label_pc_10009fdc
  %v2_1000a008 = inttoptr i32 %v0_1000a01c to i8*
  %v3_1000a008 = load i8, i8* %v2_1000a008, align 1
  %v4_1000a008 = zext i8 %v3_1000a008 to i32
  %v1_1000a00c = add i32 %v0_1000a01c, 3
  %v1_1000a010 = add i32 %v0_1000a01c, 2
  %v4_1000a014 = icmp eq i32 %v4_1000a008, %v0_10009fb4
  br i1 %v4_1000a014, label %dec_label_pc_1000a01c, label %dec_label_pc_1000a024

dec_label_pc_1000a01c:                            ; preds = %dec_label_pc_1000a008
  ret i32 %v0_1000a01c

dec_label_pc_1000a024:                            ; preds = %dec_label_pc_1000a008
  %v2_1000a024 = inttoptr i32 %v1_10009fe8 to i8*
  %v3_1000a024 = load i8, i8* %v2_1000a024, align 1
  %v4_1000a024 = zext i8 %v3_1000a024 to i32
  %v4_1000a028 = icmp eq i32 %v4_1000a024, %v0_10009fb4
  br i1 %v4_1000a028, label %dec_label_pc_1000a030, label %dec_label_pc_1000a038

dec_label_pc_1000a030:                            ; preds = %dec_label_pc_1000a024
  ret i32 %v1_10009fe8

dec_label_pc_1000a038:                            ; preds = %dec_label_pc_1000a024
  %v2_1000a038 = inttoptr i32 %v1_1000a010 to i8*
  %v3_1000a038 = load i8, i8* %v2_1000a038, align 1
  %v4_1000a038 = zext i8 %v3_1000a038 to i32
  %v4_1000a03c = icmp eq i32 %v4_1000a038, %v0_10009fb4
  br i1 %v4_1000a03c, label %dec_label_pc_1000a044, label %dec_label_pc_1000a04c

dec_label_pc_1000a044:                            ; preds = %dec_label_pc_1000a038
  ret i32 %v1_1000a010

dec_label_pc_1000a04c:                            ; preds = %dec_label_pc_1000a038
  %v2_1000a04c = inttoptr i32 %v1_1000a00c to i8*
  %v3_1000a04c = load i8, i8* %v2_1000a04c, align 1
  %v4_1000a04c = zext i8 %v3_1000a04c to i32
  %v4_1000a050 = icmp eq i32 %v4_1000a04c, %v0_10009fb4
  br i1 %v4_1000a050, label %dec_label_pc_1000a058, label %dec_label_pc_1000a060.backedge

dec_label_pc_1000a058:                            ; preds = %dec_label_pc_1000a04c
  ret i32 %v1_1000a00c

dec_label_pc_1000a064:                            ; preds = %dec_label_pc_1000a060.backedge, %dec_label_pc_10009fb4
  %v0_1000a07026 = phi i32 [ %v0_10009fdc16, %dec_label_pc_10009fb4 ], [ %v1_10009fe0, %dec_label_pc_1000a060.backedge ]
  %v0_1000a064 = phi i32 [ %v0_10009fb8, %dec_label_pc_10009fb4 ], [ %v1_10009fe4, %dec_label_pc_1000a060.backedge ]
  %v1_1000a064 = add i32 %v0_1000a064, 1
  store i32 %v1_1000a064, i32* %r5.global-to-local, align 4
  store i32 %v0_1000a064, i32* %ctr.global-to-local, align 4
  %v2_1000a0803 = icmp eq i32 %v0_1000a064, 0
  br i1 %v2_1000a0803, label %dec_label_pc_1000a084, label %dec_label_pc_1000a070

dec_label_pc_1000a070:                            ; preds = %dec_label_pc_1000a064, %dec_label_pc_1000a070.dec_label_pc_1000a070_crit_edge
  %v1_1000a074 = phi i32 [ %v1_1000a074.pre, %dec_label_pc_1000a070.dec_label_pc_1000a070_crit_edge ], [ %v0_10009fb4, %dec_label_pc_1000a064 ]
  %v0_1000a070 = phi i32 [ %v1_1000a07c, %dec_label_pc_1000a070.dec_label_pc_1000a070_crit_edge ], [ %v0_1000a07026, %dec_label_pc_1000a064 ]
  %v1_1000a070 = inttoptr i32 %v0_1000a070 to i8*
  %v2_1000a070 = load i8, i8* %v1_1000a070, align 1
  %v3_1000a070 = zext i8 %v2_1000a070 to i32
  %v4_1000a074 = icmp eq i32 %v3_1000a070, %v1_1000a074
  %v0_1000a078 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a074, i32 %v0_1000a078)
  %v0_1000a07c = load i32, i32* @r3, align 4
  %v1_1000a07c = add i32 %v0_1000a07c, 1
  store i32 %v1_1000a07c, i32* @r3, align 4
  %v0_1000a080 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a080 = add i32 %v0_1000a080, -1
  store i32 %v1_1000a080, i32* %ctr.global-to-local, align 4
  %v2_1000a080 = icmp eq i32 %v1_1000a080, 0
  br i1 %v2_1000a080, label %dec_label_pc_1000a084, label %dec_label_pc_1000a070.dec_label_pc_1000a070_crit_edge

dec_label_pc_1000a070.dec_label_pc_1000a070_crit_edge: ; preds = %dec_label_pc_1000a070
  %v1_1000a074.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a070

dec_label_pc_1000a084:                            ; preds = %dec_label_pc_1000a070, %dec_label_pc_1000a064
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000a080, { 1, 0 }
  uselistorder i32 %v1_1000a07c, { 1, 0 }
  uselistorder i32 %v0_1000a064, { 1, 2, 0 }
  uselistorder i32 %v1_1000a060, { 2, 1, 0 }
  uselistorder i32 %v1_10009fe4, { 0, 2, 1 }
  uselistorder i32 %v1_10009fe0, { 0, 2, 1 }
  uselistorder i32 %v0_1000a01c, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_10009fbc, { 1, 0 }
  uselistorder i32 %v1_10009fb8, { 1, 0 }
  uselistorder i32 %v0_10009fdc16, { 1, 0 }
  uselistorder i32 %v0_10009fb4, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_10009fb8, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10009fac, { 1, 0 }
  uselistorder i32 %v1_10009fa4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10009fa87, { 2, 0, 1 }
  uselistorder i32 %v1_10009f88, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 2, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a070, { 1, 0 }
  uselistorder label %dec_label_pc_1000a060.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10009fdc, { 1, 0 }
  uselistorder label %dec_label_pc_10009fb0, { 1, 0 }
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000a090 = urem i32 %arg2, 256
  store i32 %v1_1000a090, i32* %r4.global-to-local, align 4
  %v2_1000a098 = add i32 %arg3, %arg1
  store i32 %v2_1000a098, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_1000a0b413 = icmp eq i32 %arg3, 0
  br i1 %v2_1000a0b413, label %dec_label_pc_1000a0bc, label %dec_label_pc_1000a0b8

dec_label_pc_1000a0a0:                            ; preds = %dec_label_pc_1000a0b8
  %v1_1000a0a0 = add i32 %v0_1000a0a0, -1
  %v2_1000a0a0 = inttoptr i32 %v1_1000a0a0 to i8*
  %v3_1000a0a0 = load i8, i8* %v2_1000a0a0, align 1
  %v4_1000a0a0 = zext i8 %v3_1000a0a0 to i32
  store i32 %v1_1000a0a0, i32* %r3.global-to-local, align 4
  %v0_1000a0a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a0a4 = add i32 %v0_1000a0a4, -1
  store i32 %v1_1000a0a4, i32* %r5.global-to-local, align 4
  %v1_1000a0a8 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000a0a8 = icmp eq i32 %v4_1000a0a0, %v1_1000a0a8
  %v0_1000a0ac = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a0a8, i32 %v0_1000a0ac)
  %v0_1000a0b0 = load i32, i32* %r3.global-to-local, align 4
  %v0_1000a0b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a0b4 = add i32 %v0_1000a0b4, -1
  store i32 %v1_1000a0b4, i32* %ctr.global-to-local, align 4
  %v2_1000a0b4 = icmp eq i32 %v1_1000a0b4, 0
  br i1 %v2_1000a0b4, label %dec_label_pc_1000a0bc.loopexit, label %dec_label_pc_1000a0b8

dec_label_pc_1000a0b8:                            ; preds = %entry, %dec_label_pc_1000a0a0
  %v0_1000a0a0 = phi i32 [ %v0_1000a0b0, %dec_label_pc_1000a0a0 ], [ %v2_1000a098, %entry ]
  %v0_1000a0b8.in.in = phi i32 [ %v0_1000a0b0, %dec_label_pc_1000a0a0 ], [ %v2_1000a098, %entry ]
  %v0_1000a0b8.in = urem i32 %v0_1000a0b8.in.in, 4
  %v0_1000a0b8 = icmp eq i32 %v0_1000a0b8.in, 0
  br i1 %v0_1000a0b8, label %dec_label_pc_1000a0bc.loopexit, label %dec_label_pc_1000a0a0

dec_label_pc_1000a0bc.loopexit:                   ; preds = %dec_label_pc_1000a0b8, %dec_label_pc_1000a0a0
  %v0_1000a0e416.ph = phi i32 [ %v0_1000a0b0, %dec_label_pc_1000a0a0 ], [ %v0_1000a0a0, %dec_label_pc_1000a0b8 ]
  %v0_1000a0bc.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_1000a0c0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a0bc

dec_label_pc_1000a0bc:                            ; preds = %dec_label_pc_1000a0bc.loopexit, %entry
  %v0_1000a0c0 = phi i32 [ 0, %entry ], [ %v0_1000a0c0.pre, %dec_label_pc_1000a0bc.loopexit ]
  %v0_1000a0bc = phi i32 [ %v1_1000a090, %entry ], [ %v0_1000a0bc.pre, %dec_label_pc_1000a0bc.loopexit ]
  %v0_1000a0e416 = phi i32 [ %v2_1000a098, %entry ], [ %v0_1000a0e416.ph, %dec_label_pc_1000a0bc.loopexit ]
  %v1_1000a0bc = mul i32 %v0_1000a0bc, 256
  %v1_1000a0c0 = udiv i32 %v0_1000a0c0, 4
  %v2_1000a0c4 = or i32 %v1_1000a0bc, %v0_1000a0bc
  %v1_1000a0cc = mul i32 %v2_1000a0c4, 65536
  %v2_1000a0d8 = or i32 %v1_1000a0cc, %v2_1000a0c4
  store i32 %v2_1000a0d8, i32* %r7.global-to-local, align 4
  store i32 -2130640640, i32* %r8.global-to-local, align 4
  store i32 %v1_1000a0c0, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000a0c0, 4
  br i1 %tmp, label %dec_label_pc_1000a15c, label %dec_label_pc_1000a0e4

dec_label_pc_1000a0e4:                            ; preds = %dec_label_pc_1000a0bc, %dec_label_pc_1000a158.backedge.dec_label_pc_1000a0e4_crit_edge
  %v0_1000a15821 = phi i32 [ %v1_1000a158, %dec_label_pc_1000a158.backedge.dec_label_pc_1000a0e4_crit_edge ], [ %v1_1000a0c0, %dec_label_pc_1000a0bc ]
  %v0_1000a104 = phi i32 [ %v0_1000a104.pre, %dec_label_pc_1000a158.backedge.dec_label_pc_1000a0e4_crit_edge ], [ -2130640640, %dec_label_pc_1000a0bc ]
  %v0_1000a0ec = phi i32 [ %v0_1000a0ec.pre, %dec_label_pc_1000a158.backedge.dec_label_pc_1000a0e4_crit_edge ], [ %v2_1000a0d8, %dec_label_pc_1000a0bc ]
  %v0_1000a0e8 = phi i32 [ %v0_1000a0e8.pre, %dec_label_pc_1000a158.backedge.dec_label_pc_1000a0e4_crit_edge ], [ %v0_1000a0c0, %dec_label_pc_1000a0bc ]
  %v0_1000a0e4 = phi i32 [ %v0_1000a0e4.pre, %dec_label_pc_1000a158.backedge.dec_label_pc_1000a0e4_crit_edge ], [ %v0_1000a0e416, %dec_label_pc_1000a0bc ]
  %v1_1000a0e4 = add i32 %v0_1000a0e4, -4
  %v2_1000a0e4 = inttoptr i32 %v1_1000a0e4 to i32*
  %v3_1000a0e4 = load i32, i32* %v2_1000a0e4, align 4
  store i32 %v1_1000a0e4, i32* %r3.global-to-local, align 4
  %v1_1000a0e8 = add i32 %v0_1000a0e8, -4
  store i32 %v1_1000a0e8, i32* %r5.global-to-local, align 4
  %v2_1000a0ec = xor i32 %v3_1000a0e4, %v0_1000a0ec
  %v1_1000a0f0 = add i32 %v0_1000a0e4, -3
  %v1_1000a0f8 = add i32 %v2_1000a0ec, 2130640639
  %v1_1000a100 = add i32 %v0_1000a0e4, -2
  %v2_1000a0fc = sub i32 -1, %v2_1000a0ec
  %v2_1000a104 = xor i32 %v1_1000a0f8, %v2_1000a0fc
  %v3_1000a104 = and i32 %v2_1000a104, %v0_1000a104
  %v6_1000a104 = icmp eq i32 %v3_1000a104, 0
  %v1_1000a108 = add i32 %v0_1000a0e4, -1
  br i1 %v6_1000a104, label %dec_label_pc_1000a158.backedge, label %dec_label_pc_1000a110

dec_label_pc_1000a110:                            ; preds = %dec_label_pc_1000a0e4
  %v2_1000a110 = inttoptr i32 %v1_1000a108 to i8*
  %v3_1000a110 = load i8, i8* %v2_1000a110, align 1
  %v4_1000a110 = zext i8 %v3_1000a110 to i32
  %v1_1000a114 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000a114 = icmp eq i32 %v4_1000a110, %v1_1000a114
  br i1 %v4_1000a114, label %dec_label_pc_1000a11c, label %dec_label_pc_1000a124

dec_label_pc_1000a11c:                            ; preds = %dec_label_pc_1000a110
  store i32 %v1_1000a108, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000a108

dec_label_pc_1000a124:                            ; preds = %dec_label_pc_1000a110
  %v2_1000a124 = inttoptr i32 %v1_1000a100 to i8*
  %v3_1000a124 = load i8, i8* %v2_1000a124, align 1
  %v4_1000a124 = zext i8 %v3_1000a124 to i32
  %v4_1000a128 = icmp eq i32 %v4_1000a124, %v1_1000a114
  br i1 %v4_1000a128, label %dec_label_pc_1000a130, label %dec_label_pc_1000a138

dec_label_pc_1000a130:                            ; preds = %dec_label_pc_1000a124
  store i32 %v1_1000a100, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000a100

dec_label_pc_1000a138:                            ; preds = %dec_label_pc_1000a124
  %v2_1000a138 = inttoptr i32 %v1_1000a0f0 to i8*
  %v3_1000a138 = load i8, i8* %v2_1000a138, align 1
  %v4_1000a138 = zext i8 %v3_1000a138 to i32
  %v4_1000a13c = icmp eq i32 %v4_1000a138, %v1_1000a114
  br i1 %v4_1000a13c, label %dec_label_pc_1000a144, label %dec_label_pc_1000a14c

dec_label_pc_1000a144:                            ; preds = %dec_label_pc_1000a138
  store i32 %v1_1000a0f0, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000a0f0

dec_label_pc_1000a14c:                            ; preds = %dec_label_pc_1000a138
  %v1_1000a14c = inttoptr i32 %v1_1000a0e4 to i8*
  %v2_1000a14c = load i8, i8* %v1_1000a14c, align 1
  %v3_1000a14c = zext i8 %v2_1000a14c to i32
  %v4_1000a150 = icmp eq i32 %v3_1000a14c, %v1_1000a114
  %v0_1000a154 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a150, i32 %v0_1000a154)
  %v0_1000a158.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a158.backedge

dec_label_pc_1000a158.backedge:                   ; preds = %dec_label_pc_1000a14c, %dec_label_pc_1000a0e4
  %v0_1000a158 = phi i32 [ %v0_1000a158.pre, %dec_label_pc_1000a14c ], [ %v0_1000a15821, %dec_label_pc_1000a0e4 ]
  %v1_1000a158 = add i32 %v0_1000a158, -1
  store i32 %v1_1000a158, i32* %ctr.global-to-local, align 4
  %v2_1000a158 = icmp eq i32 %v1_1000a158, 0
  br i1 %v2_1000a158, label %dec_label_pc_1000a158.dec_label_pc_1000a15c_crit_edge, label %dec_label_pc_1000a158.backedge.dec_label_pc_1000a0e4_crit_edge

dec_label_pc_1000a158.backedge.dec_label_pc_1000a0e4_crit_edge: ; preds = %dec_label_pc_1000a158.backedge
  %v0_1000a0e4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000a0e8.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000a0ec.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1000a104.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a0e4

dec_label_pc_1000a158.dec_label_pc_1000a15c_crit_edge: ; preds = %dec_label_pc_1000a158.backedge
  %v0_1000a15c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a15c

dec_label_pc_1000a15c:                            ; preds = %dec_label_pc_1000a158.dec_label_pc_1000a15c_crit_edge, %dec_label_pc_1000a0bc
  %v0_1000a15c = phi i32 [ %v0_1000a15c.pre, %dec_label_pc_1000a158.dec_label_pc_1000a15c_crit_edge ], [ %v0_1000a0c0, %dec_label_pc_1000a0bc ]
  %v1_1000a15c = add i32 %v0_1000a15c, 1
  store i32 %v1_1000a15c, i32* %r5.global-to-local, align 4
  store i32 %v0_1000a15c, i32* %ctr.global-to-local, align 4
  %v2_1000a1743 = icmp eq i32 %v0_1000a15c, 0
  br i1 %v2_1000a1743, label %dec_label_pc_1000a178, label %dec_label_pc_1000a168

dec_label_pc_1000a168:                            ; preds = %dec_label_pc_1000a15c, %dec_label_pc_1000a168
  %v0_1000a168 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a168 = add i32 %v0_1000a168, -1
  %v2_1000a168 = inttoptr i32 %v1_1000a168 to i8*
  %v3_1000a168 = load i8, i8* %v2_1000a168, align 1
  %v4_1000a168 = zext i8 %v3_1000a168 to i32
  store i32 %v1_1000a168, i32* %r3.global-to-local, align 4
  %v1_1000a16c = load i32, i32* %r4.global-to-local, align 4
  %v4_1000a16c = icmp eq i32 %v4_1000a168, %v1_1000a16c
  %v0_1000a170 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a16c, i32 %v0_1000a170)
  %v0_1000a174 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a174 = add i32 %v0_1000a174, -1
  store i32 %v1_1000a174, i32* %ctr.global-to-local, align 4
  %v2_1000a174 = icmp eq i32 %v1_1000a174, 0
  br i1 %v2_1000a174, label %dec_label_pc_1000a178, label %dec_label_pc_1000a168

dec_label_pc_1000a178:                            ; preds = %dec_label_pc_1000a168, %dec_label_pc_1000a15c
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000a174, { 1, 0 }
  uselistorder i32 %v0_1000a15c, { 1, 2, 0 }
  uselistorder i32 %v1_1000a158, { 2, 1, 0 }
  uselistorder i32 %v1_1000a108, { 1, 0, 2 }
  uselistorder i32 %v1_1000a100, { 1, 0, 2 }
  uselistorder i32 %v1_1000a0f0, { 1, 0, 2 }
  uselistorder i32 %v2_1000a0c4, { 1, 0 }
  uselistorder i32 %v1_1000a0c0, { 1, 0 }
  uselistorder i32 %v0_1000a0bc, { 1, 0 }
  uselistorder i32 %v0_1000a0c0, { 3, 2, 0, 1 }
  uselistorder i32 %v1_1000a0b4, { 1, 0 }
  uselistorder i32 %v0_1000a0b0, { 1, 0, 2 }
  uselistorder i32 %v2_1000a098, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1000a090, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 3, 2, 4, 6, 7, 5, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 5, 6, 1, 7, 8, 2, 3, 4 }
  uselistorder i32 -2130640640, { 2, 9, 0, 3, 1, 4, 5, 6, 7, 8 }
  uselistorder i32 65536, { 0, 1, 3, 2, 4, 5, 12, 6, 7, 13, 8, 9, 10, 11 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 0, 1, 2, 3, 4, 10, 5, 6, 11, 13, 14, 15, 16, 17, 18, 8, 21, 24, 23, 9, 19, 20, 22, 12, 26, 25, 7 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 6, 46, 7, 47, 48, 8, 9, 10, 11, 12, 52, 13, 14, 15, 16, 17, 44, 49, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 50, 30, 31, 32, 43, 33, 34, 35, 36, 51, 45, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000a168, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0b8, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a198 = call i32 @__asm_mfcr()
  %v1_1000a19c = and i32 %v0_1000a198, 268435456
  %v3_1000a19c = icmp eq i32 %v1_1000a19c, 0
  store i32 %v0_1000a198, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a19c, label %dec_label_pc_1000a1b4, label %dec_label_pc_1000a1a8

dec_label_pc_1000a1a8:                            ; preds = %entry
  %v0_1000a1a8 = call i32 @__errno_location()
  %v0_1000a1ac = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a1ac = inttoptr i32 %v0_1000a1a8 to i32*
  store i32 %v0_1000a1ac, i32* %v2_1000a1ac, align 4
  br label %dec_label_pc_1000a1b4

dec_label_pc_1000a1b4:                            ; preds = %entry, %dec_label_pc_1000a1a8
  %v0_1000a1c4 = phi i32 [ %v0_1000a198, %entry ], [ -1, %dec_label_pc_1000a1a8 ]
  ret i32 %v0_1000a1c4

; uselistorder directives
  uselistorder label %dec_label_pc_1000a1b4, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000a1c8 = load i32, i32* @r5, align 4
  store i32 %v0_1000a1c8, i32* @r7, align 4
  %tmp = icmp slt i32 %arg1, 0
  %v1_1000a1d0 = zext i1 %tmp to i32
  %v2_1000a1d0 = ashr i32 %arg1, 31
  %v3_1000a1d0 = and i32 %v2_1000a1d0, -2
  %v4_1000a1d0 = or i32 %v3_1000a1d0, %v1_1000a1d0
  %v3_1000a1d4 = inttoptr i32 %v4_1000a1d0 to i16*
  %v4_1000a1d4 = call i32 @__GI_fseeko64(i16* %v3_1000a1d4, i32 %arg1, i32 %v0_1000a1c8)
  ret i32 %v4_1000a1d4

; uselistorder directives
  uselistorder i32* @r5, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 36, 37, 38, 53, 54, 55, 56, 18, 19, 20, 3, 21, 23, 22, 24, 0, 25, 26, 27, 57, 28, 29, 30, 58, 4, 39, 40, 59, 60, 41, 61, 62, 42, 43, 44, 63, 64, 45, 46, 32, 47, 1, 48, 31, 65, 66, 72, 33, 34, 49, 50, 35, 73, 74, 75, 76, 67, 68, 2, 69, 70, 71, 51, 52 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000a1d8 = load i32, i32* @r7, align 4
  %v0_1000a1dc = load i32, i32* @lr, align 4
  store i32 %v0_1000a1dc, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a1d8, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_1000a1d8, 3
  br i1 %tmp9, label %dec_label_pc_1000a214, label %dec_label_pc_1000a200

dec_label_pc_1000a200:                            ; preds = %entry
  %v0_1000a200 = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000a20c = inttoptr i32 %v0_1000a200 to i32*
  store i32 22, i32* %v2_1000a20c, align 4
  br label %dec_label_pc_1000a2dc

dec_label_pc_1000a214:                            ; preds = %entry
  %v2_1000a214 = add i32 %tmp, 52
  %v3_1000a214 = inttoptr i32 %v2_1000a214 to i32*
  %v4_1000a214 = load i32, i32* %v3_1000a214, align 4
  store i32 %v4_1000a214, i32* @r28, align 4
  %v3_1000a218 = icmp eq i32 %v4_1000a214, 0
  br i1 %v3_1000a218, label %dec_label_pc_1000a220, label %dec_label_pc_1000a240

dec_label_pc_1000a220:                            ; preds = %dec_label_pc_1000a214
  %v2_1000a220 = add i32 %tmp, 56
  store i32 %v2_1000a220, i32* @r29, align 4
  %v2_1000a228 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000a228, i32* @r3, align 4
  %v0_1000a234 = call i32 @__pthread_return_void()
  %v0_1000a23c = call i32 @__pthread_return_0()
  %v0_1000a240.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a240

dec_label_pc_1000a240:                            ; preds = %dec_label_pc_1000a214, %dec_label_pc_1000a220
  %v0_1000a24c = phi i32 [ %tmp, %dec_label_pc_1000a214 ], [ %v0_1000a240.pre, %dec_label_pc_1000a220 ]
  %v1_1000a240 = inttoptr i32 %v0_1000a24c to i16*
  %v2_1000a240 = load i16, i16* %v1_1000a240, align 2
  %v3_1000a240 = zext i16 %v2_1000a240 to i32
  store i32 %v3_1000a240, i32* %r0.global-to-local, align 4
  %v1_1000a244 = and i32 %v3_1000a240, 64
  store i32 %v1_1000a244, i32* %r9.global-to-local, align 4
  %v3_1000a244 = icmp eq i32 %v1_1000a244, 0
  br i1 %v3_1000a244, label %dec_label_pc_1000a25c, label %dec_label_pc_1000a24c

dec_label_pc_1000a24c:                            ; preds = %dec_label_pc_1000a240
  store i32 %v0_1000a24c, i32* @r3, align 4
  store i32 268477012, i32* @lr, align 4
  %v0_1000a250 = call i32 @__stdio_wcommit()
  %v3_1000a254 = icmp eq i32 %v0_1000a250, 0
  br i1 %v3_1000a254, label %dec_label_pc_1000a25c, label %dec_label_pc_1000a2c4

dec_label_pc_1000a25c:                            ; preds = %dec_label_pc_1000a24c, %dec_label_pc_1000a240
  %v0_1000a25c = load i32, i32* @r30, align 4
  %v3_1000a25c = icmp eq i32 %v0_1000a25c, 1
  br i1 %v3_1000a25c, label %dec_label_pc_1000a264, label %dec_label_pc_1000a25c.dec_label_pc_1000a278_crit_edge

dec_label_pc_1000a25c.dec_label_pc_1000a278_crit_edge: ; preds = %dec_label_pc_1000a25c
  br label %dec_label_pc_1000a278

dec_label_pc_1000a264:                            ; preds = %dec_label_pc_1000a25c
  %v0_1000a264 = load i32, i32* @r31, align 4
  %v1_1000a264 = inttoptr i32 %v0_1000a264 to i16*
  %v2_1000a268 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268477040, i32* @lr, align 4
  %v4_1000a26c = call i32 @__stdio_adjust_position(i16* %v1_1000a264, i32 %v2_1000a268)
  %v1_1000a270 = icmp slt i32 %v4_1000a26c, 0
  br i1 %v1_1000a270, label %dec_label_pc_1000a2c4, label %dec_label_pc_1000a264.dec_label_pc_1000a278_crit_edge

dec_label_pc_1000a264.dec_label_pc_1000a278_crit_edge: ; preds = %dec_label_pc_1000a264
  %v0_1000a278.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a278

dec_label_pc_1000a278:                            ; preds = %dec_label_pc_1000a25c.dec_label_pc_1000a278_crit_edge, %dec_label_pc_1000a264.dec_label_pc_1000a278_crit_edge
  %v0_1000a278 = phi i32 [ %v0_1000a25c, %dec_label_pc_1000a25c.dec_label_pc_1000a278_crit_edge ], [ %v0_1000a278.pre, %dec_label_pc_1000a264.dec_label_pc_1000a278_crit_edge ]
  %v0_1000a27c = load i32, i32* @r31, align 4
  store i32 268477064, i32* @lr, align 4
  %v5_1000a284 = call i32 @__stdio_seek(i32 %v0_1000a27c, i32* nonnull %stack_var_-56, i32 %v0_1000a278)
  %v1_1000a288 = icmp slt i32 %v5_1000a284, 0
  br i1 %v1_1000a288, label %dec_label_pc_1000a2c4, label %dec_label_pc_1000a290

dec_label_pc_1000a290:                            ; preds = %dec_label_pc_1000a278
  %v0_1000a290 = load i32, i32* @r31, align 4
  %v1_1000a290 = inttoptr i32 %v0_1000a290 to i16*
  %v2_1000a290 = load i16, i16* %v1_1000a290, align 2
  %v3_1000a290 = zext i16 %v2_1000a290 to i32
  store i32 %v3_1000a290, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000a298 = add i32 %v0_1000a290, 8
  %v2_1000a298 = inttoptr i32 %v1_1000a298 to i32*
  %v3_1000a298 = load i32, i32* %v2_1000a298, align 4
  store i32 %v3_1000a298, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_1000a2a0 = and i32 %v3_1000a290, 65464
  store i32 %v1_1000a2a0, i32* %r0.global-to-local, align 4
  %v3_1000a2a4 = add i32 %v0_1000a290, 2
  %v4_1000a2a4 = inttoptr i32 %v3_1000a2a4 to i8*
  store i8 0, i8* %v4_1000a2a4, align 1
  %v0_1000a2a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a2a8 = load i32, i32* @r31, align 4
  %v2_1000a2a8 = add i32 %v1_1000a2a8, 28
  %v3_1000a2a8 = inttoptr i32 %v2_1000a2a8 to i32*
  store i32 %v0_1000a2a8, i32* %v3_1000a2a8, align 4
  %v0_1000a2ac = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a2ac = trunc i32 %v0_1000a2ac to i16
  %v2_1000a2ac = load i32, i32* @r31, align 4
  %v3_1000a2ac = inttoptr i32 %v2_1000a2ac to i16*
  store i16 %v1_1000a2ac, i16* %v3_1000a2ac, align 2
  %v0_1000a2b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a2b0 = load i32, i32* @r31, align 4
  %v2_1000a2b0 = add i32 %v1_1000a2b0, 16
  %v3_1000a2b0 = inttoptr i32 %v2_1000a2b0 to i32*
  store i32 %v0_1000a2b0, i32* %v3_1000a2b0, align 4
  %v0_1000a2b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a2b4 = load i32, i32* @r31, align 4
  %v2_1000a2b4 = add i32 %v1_1000a2b4, 20
  %v3_1000a2b4 = inttoptr i32 %v2_1000a2b4 to i32*
  store i32 %v0_1000a2b4, i32* %v3_1000a2b4, align 4
  %v0_1000a2b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a2b8 = load i32, i32* @r31, align 4
  %v2_1000a2b8 = add i32 %v1_1000a2b8, 24
  %v3_1000a2b8 = inttoptr i32 %v2_1000a2b8 to i32*
  store i32 %v0_1000a2b8, i32* %v3_1000a2b8, align 4
  %v0_1000a2bc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a2bc = load i32, i32* @r31, align 4
  %v2_1000a2bc = add i32 %v1_1000a2bc, 44
  %v3_1000a2bc = inttoptr i32 %v2_1000a2bc to i32*
  store i32 %v0_1000a2bc, i32* %v3_1000a2bc, align 4
  br label %dec_label_pc_1000a2c8

dec_label_pc_1000a2c4:                            ; preds = %dec_label_pc_1000a24c, %dec_label_pc_1000a278, %dec_label_pc_1000a264
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_1000a2c8

dec_label_pc_1000a2c8:                            ; preds = %dec_label_pc_1000a290, %dec_label_pc_1000a2c4
  %v0_1000a2c8 = load i32, i32* @r28, align 4
  %v3_1000a2c8 = icmp eq i32 %v0_1000a2c8, 0
  br i1 %v3_1000a2c8, label %dec_label_pc_1000a2d0, label %dec_label_pc_1000a2dc

dec_label_pc_1000a2d0:                            ; preds = %dec_label_pc_1000a2c8
  %v2_1000a2d0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000a2d0, i32* @r3, align 4
  %v0_1000a2d8 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000a2dc

dec_label_pc_1000a2dc:                            ; preds = %dec_label_pc_1000a2c8, %dec_label_pc_1000a200, %dec_label_pc_1000a2d0
  store i32 %v0_1000a1dc, i32* %r0.global-to-local, align 4
  %v0_1000a2e0 = load i32, i32* @r30, align 4
  ret i32 %v0_1000a2e0

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 24, { 0, 1, 14, 15, 16, 2, 17, 18, 19, 3, 4, 5, 6, 7, 8, 9, 10, 11, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 30, 31, 32, 33, 12, 34, 13 }
  uselistorder i32 28, { 6, 7, 20, 8, 9, 10, 11, 12, 13, 16, 14, 15, 1, 17, 21, 22, 23, 24, 2, 3, 18, 25, 26, 32, 27, 33, 28, 0, 29, 30, 31, 4, 5, 19 }
  uselistorder i8 0, { 18, 0, 31, 32, 33, 34, 30, 4, 35, 2, 36, 37, 5, 38, 40, 41, 42, 43, 39, 45, 44, 6, 46, 47, 48, 49, 50, 21, 54, 52, 20, 53, 51, 19, 55, 56, 57, 58, 7, 60, 59, 22, 8, 61, 62, 9, 63, 64, 65, 66, 24, 69, 67, 68, 23, 70, 71, 10, 73, 72, 25, 74, 75, 76, 11, 77, 78, 79, 80, 82, 83, 84, 85, 81, 86, 3, 12, 13, 14, 15, 16, 17, 88, 26, 89, 90, 87, 91, 92, 93, 94, 95, 96, 97, 98, 100, 99, 101, 103, 104, 102, 27, 105, 106, 29, 107, 28, 1, 108, 109 }
  uselistorder i32 ()* @__stdio_wcommit, { 6, 1, 5, 4, 3, 2, 0 }
  uselistorder i32 ()* @__pthread_return_0, { 38, 34, 33, 32, 31, 30, 29, 9, 28, 27, 26, 25, 24, 8, 7, 6, 23, 22, 21, 20, 19, 18, 0, 17, 37, 36, 35, 5, 4, 3, 2, 1, 15, 14, 13, 12, 11, 10, 16 }
  uselistorder i32 ()* @__pthread_return_void, { 47, 46, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 1, 0, 5, 4, 45, 44, 43, 42, 41, 40, 3, 2 }
  uselistorder i32* @r29, { 17, 19, 20, 21, 18, 22, 14, 55, 56, 57, 23, 24, 1, 25, 26, 27, 28, 29, 30, 58, 59, 60, 61, 62, 123, 124, 125, 31, 32, 2, 33, 126, 127, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 3, 11, 4, 47, 16, 44, 45, 128, 129, 130, 131, 132, 109, 110, 133, 134, 5, 63, 12, 64, 65, 66, 67, 69, 68, 70, 71, 72, 73, 74, 48, 49, 50, 51, 52, 6, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 13, 87, 88, 89, 90, 91, 92, 15, 7, 0, 93, 135, 136, 137, 138, 94, 95, 96, 97, 98, 8, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 9, 116, 117, 118, 119, 120, 121, 122, 106, 107, 108, 10, 53, 54 }
  uselistorder i32 56, { 2, 5, 6, 1, 4, 3, 0 }
  uselistorder i32* @r28, { 14, 15, 16, 2, 17, 18, 19, 20, 21, 3, 57, 58, 59, 60, 61, 62, 118, 119, 120, 121, 122, 123, 124, 22, 23, 24, 25, 26, 4, 27, 28, 5, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0, 45, 46, 11, 12, 13, 6, 125, 126, 127, 47, 48, 67, 68, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 50, 7, 49, 51, 52, 53, 54, 55, 56, 79, 83, 80, 81, 82, 1, 84, 85, 86, 8, 87, 88, 89, 90, 91, 92, 93, 94, 128, 95, 96, 97, 98, 9, 99, 10, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 129, 130, 113, 114, 115, 116, 117, 111, 112 }
  uselistorder i32 52, { 0, 1, 5, 2, 6, 3, 4 }
  uselistorder i32 22, { 0, 8, 1, 14, 2, 9, 3, 4, 12, 5, 10, 6, 11, 7, 13 }
  uselistorder i32* @r30, { 19, 20, 21, 8, 22, 23, 24, 25, 26, 27, 28, 29, 9, 30, 31, 32, 33, 34, 67, 68, 69, 10, 70, 138, 139, 140, 141, 142, 143, 144, 35, 36, 37, 38, 39, 40, 41, 1, 43, 18, 44, 11, 45, 46, 42, 47, 48, 49, 50, 51, 52, 53, 12, 54, 55, 2, 56, 13, 145, 146, 147, 148, 57, 72, 74, 75, 76, 77, 78, 71, 73, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 58, 59, 60, 3, 61, 62, 63, 7, 64, 65, 93, 90, 91, 5, 92, 4, 14, 149, 96, 94, 95, 97, 98, 100, 99, 6, 101, 102, 103, 104, 105, 106, 107, 108, 109, 17, 110, 111, 112, 113, 114, 115, 116, 117, 15, 131, 150, 153, 151, 152, 66, 0, 118, 16, 119, 120, 132, 133, 134, 135, 136, 137, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130 }
  uselistorder label %dec_label_pc_1000a2dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a2c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a278, { 1, 0 }
  uselistorder label %dec_label_pc_1000a240, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_1000a30c = load i16, i16* %arg1, align 2
  %v4_1000a30c = zext i16 %v3_1000a30c to i32
  %tmp9 = urem i16 %v3_1000a30c, 4
  %v3_1000a310 = icmp eq i16 %tmp9, 0
  br i1 %v3_1000a310, label %dec_label_pc_1000a35c, label %dec_label_pc_1000a318

dec_label_pc_1000a318:                            ; preds = %entry
  %v1_1000a310 = zext i16 %tmp9 to i32
  %v1_1000a318 = add nsw i32 %v1_1000a310, -1
  store i32 %v1_1000a318, i32* %r10.global-to-local, align 4
  %v4_1000a318 = icmp eq i32 %v1_1000a318, 0
  br i1 %v4_1000a318, label %dec_label_pc_1000a35c, label %dec_label_pc_1000a320

dec_label_pc_1000a320:                            ; preds = %dec_label_pc_1000a318
  %v1_1000a320 = and i32 %v4_1000a30c, 2048
  %v3_1000a320 = icmp eq i32 %v1_1000a320, 0
  br i1 %v3_1000a320, label %dec_label_pc_1000a35c, label %dec_label_pc_1000a328

dec_label_pc_1000a328:                            ; preds = %dec_label_pc_1000a320
  %v2_1000a328 = icmp sgt i32 %v1_1000a318, 1
  br i1 %v2_1000a328, label %dec_label_pc_1000a3d4, label %dec_label_pc_1000a330

dec_label_pc_1000a330:                            ; preds = %dec_label_pc_1000a328
  %v2_1000a330 = add i32 %tmp, 40
  %v3_1000a330 = inttoptr i32 %v2_1000a330 to i32*
  %v4_1000a330 = load i32, i32* %v3_1000a330, align 4
  %v3_1000a334 = icmp eq i32 %v4_1000a330, 0
  br i1 %v3_1000a334, label %dec_label_pc_1000a33c, label %dec_label_pc_1000a3d4

dec_label_pc_1000a33c:                            ; preds = %dec_label_pc_1000a330
  %v2_1000a33c = add i32 %tmp, 44
  %v3_1000a33c = inttoptr i32 %v2_1000a33c to i32*
  %v4_1000a33c = load i32, i32* %v3_1000a33c, align 4
  %v2_1000a340 = add i32 %tmp, 3
  %v3_1000a340 = inttoptr i32 %v2_1000a340 to i8*
  %v4_1000a340 = load i8, i8* %v3_1000a340, align 1
  %v5_1000a340 = zext i8 %v4_1000a340 to i32
  %v2_1000a348 = sub nsw i32 %v1_1000a318, %v5_1000a340
  %v1_1000a34c = add nsw i32 %v2_1000a348, -1
  store i32 %v1_1000a34c, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_1000a33c, 1
  br i1 %tmp7, label %dec_label_pc_1000a35c, label %dec_label_pc_1000a354

dec_label_pc_1000a354:                            ; preds = %dec_label_pc_1000a33c
  %v2_1000a354 = add i32 %tmp, 2
  %v3_1000a354 = inttoptr i32 %v2_1000a354 to i8*
  %v4_1000a354 = load i8, i8* %v3_1000a354, align 1
  %v5_1000a354 = zext i8 %v4_1000a354 to i32
  %v2_1000a358 = sub nsw i32 %v1_1000a34c, %v5_1000a354
  store i32 %v2_1000a358, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a35c

dec_label_pc_1000a35c:                            ; preds = %dec_label_pc_1000a33c, %dec_label_pc_1000a320, %dec_label_pc_1000a318, %entry, %dec_label_pc_1000a354
  %v0_1000a380 = phi i32 [ %v1_1000a34c, %dec_label_pc_1000a33c ], [ %v1_1000a318, %dec_label_pc_1000a320 ], [ 0, %dec_label_pc_1000a318 ], [ 0, %entry ], [ %v2_1000a358, %dec_label_pc_1000a354 ]
  %v1_1000a35c = and i32 %v4_1000a30c, 64
  %v3_1000a35c = icmp eq i32 %v1_1000a35c, 0
  %storemerge.in.in.v = select i1 %v3_1000a35c, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_1000a370 = add i32 %tmp, 16
  %v3_1000a370 = inttoptr i32 %v2_1000a370 to i32*
  %v4_1000a370 = load i32, i32* %v3_1000a370, align 4
  %v1_1000a374 = inttoptr i32 %arg2 to i32*
  %v2_1000a374 = load i32, i32* %v1_1000a374, align 4
  store i32 %v2_1000a374, i32* %r4.global-to-local, align 4
  %v2_1000a378 = sub i32 %storemerge, %v4_1000a370
  %v1_1000a37c = add i32 %arg2, 4
  %v2_1000a37c = inttoptr i32 %v1_1000a37c to i32*
  %v3_1000a37c = load i32, i32* %v2_1000a37c, align 4
  store i32 %v3_1000a37c, i32* %r5.global-to-local, align 4
  %v2_1000a380 = add i32 %v2_1000a378, %v0_1000a380
  store i32 %v2_1000a380, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_1000a380, 0
  %v1_1000a388 = zext i1 %tmp10 to i32
  %v2_1000a388 = ashr i32 %v2_1000a380, 31
  %v3_1000a388 = and i32 %v2_1000a388, -2
  %v4_1000a388 = or i32 %v3_1000a388, %v1_1000a388
  %v2_1000a38c = sub i32 %v3_1000a37c, %v2_1000a380
  %v3_1000a38c = sub i32 -1, %v2_1000a380
  store i32 %v2_1000a38c, i32* %r10.global-to-local, align 4
  %v6_1000a38c = icmp ule i32 %v2_1000a38c, %v3_1000a38c
  %v2_1000a390 = sub nsw i32 -1, %v4_1000a388
  %v3_1000a390 = add i32 %v2_1000a374, %v2_1000a390
  %v5_1000a390 = zext i1 %v6_1000a38c to i32
  %v6_1000a390 = add i32 %v3_1000a390, %v5_1000a390
  store i32 %v6_1000a390, i32* %v1_1000a374, align 4
  %v0_1000a398 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a398 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a398 = add i32 %v1_1000a398, 4
  %v3_1000a398 = inttoptr i32 %v2_1000a398 to i32*
  store i32 %v0_1000a398, i32* %v3_1000a398, align 4
  %v0_1000a39c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a39c = inttoptr i32 %v0_1000a39c to i32*
  %v2_1000a39c = load i32, i32* %v1_1000a39c, align 4
  %v1_1000a3a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_1000a3a0 = icmp sgt i32 %v2_1000a39c, %v1_1000a3a0
  br i1 %v3_1000a3a0, label %dec_label_pc_1000a3b8, label %dec_label_pc_1000a3a8

dec_label_pc_1000a3a8:                            ; preds = %dec_label_pc_1000a35c
  %v4_1000a3a0 = icmp eq i32 %v2_1000a39c, %v1_1000a3a0
  br i1 %v4_1000a3a0, label %dec_label_pc_1000a3ac, label %dec_label_pc_1000a3bcthread-pre-split

dec_label_pc_1000a3ac:                            ; preds = %dec_label_pc_1000a3a8
  %v1_1000a3ac = add i32 %v0_1000a39c, 4
  %v2_1000a3ac = inttoptr i32 %v1_1000a3ac to i32*
  %v3_1000a3ac = load i32, i32* %v2_1000a3ac, align 4
  %v1_1000a3b0 = load i32, i32* %r5.global-to-local, align 4
  %v3_1000a3b0 = icmp ugt i32 %v3_1000a3ac, %v1_1000a3b0
  br i1 %v3_1000a3b0, label %dec_label_pc_1000a3b8, label %dec_label_pc_1000a3bcthread-pre-split

dec_label_pc_1000a3b8:                            ; preds = %dec_label_pc_1000a3ac, %dec_label_pc_1000a35c
  %v0_1000a3b8 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a3b8 = sub i32 0, %v0_1000a3b8
  store i32 %v1_1000a3b8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a3bc

dec_label_pc_1000a3bcthread-pre-split:            ; preds = %dec_label_pc_1000a3a8, %dec_label_pc_1000a3ac
  %v0_1000a3bc.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a3bc

dec_label_pc_1000a3bc:                            ; preds = %dec_label_pc_1000a3bcthread-pre-split, %dec_label_pc_1000a3b8
  %v0_1000a3bc = phi i32 [ %v0_1000a3bc.pr, %dec_label_pc_1000a3bcthread-pre-split ], [ %v1_1000a3b8, %dec_label_pc_1000a3b8 ]
  %tmp8 = icmp sgt i32 %v0_1000a3bc, -1
  br i1 %tmp8, label %dec_label_pc_1000a3d8, label %dec_label_pc_1000a3c4

dec_label_pc_1000a3c4:                            ; preds = %dec_label_pc_1000a3bc
  %v0_1000a3c4 = call i32 @__errno_location()
  %v2_1000a3cc = inttoptr i32 %v0_1000a3c4 to i32*
  store i32 75, i32* %v2_1000a3cc, align 4
  %v0_1000a3dc.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a3d8

dec_label_pc_1000a3d4:                            ; preds = %dec_label_pc_1000a330, %dec_label_pc_1000a328
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a3d8

dec_label_pc_1000a3d8:                            ; preds = %dec_label_pc_1000a3bc, %dec_label_pc_1000a3c4, %dec_label_pc_1000a3d4
  %v0_1000a3dc = phi i32 [ %v0_1000a3bc, %dec_label_pc_1000a3bc ], [ %v0_1000a3dc.pre, %dec_label_pc_1000a3c4 ], [ -1, %dec_label_pc_1000a3d4 ]
  ret i32 %v0_1000a3dc

; uselistorder directives
  uselistorder i32 %v2_1000a39c, { 1, 0 }
  uselistorder i32 %v2_1000a380, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 4, 3, 1, 2, 5 }
  uselistorder i32 16, { 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 37, 38, 22, 23, 24, 25, 26, 39, 40, 41, 42, 27, 28, 29, 30, 31, 32, 63, 43, 6, 44, 45, 7, 46, 47, 0, 48, 49, 1, 50, 8, 64, 51, 52, 65, 66, 67, 53, 2, 54, 55, 56, 57, 58, 3, 35, 33, 59, 34, 60, 61, 68, 69, 36, 9, 62, 10, 4, 5 }
  uselistorder i32 8, { 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 10, 31, 32, 65, 66, 67, 33, 68, 69, 108, 109, 70, 34, 35, 36, 37, 38, 17, 39, 40, 41, 42, 0, 1, 43, 44, 8, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 7, 2, 110, 111, 71, 72, 73, 74, 18, 19, 75, 76, 77, 78, 79, 80, 55, 56, 20, 13, 14, 15, 57, 58, 59, 60, 61, 81, 112, 82, 83, 84, 113, 114, 115, 85, 86, 87, 88, 89, 106, 3, 116, 119, 9, 11, 62, 12, 91, 90, 63, 99, 98, 96, 97, 100, 101, 102, 103, 104, 105, 4, 92, 93, 94, 21, 5, 120, 6, 117, 118, 64, 95, 107 }
  uselistorder i32 20, { 1, 2, 3, 4, 5, 6, 18, 26, 27, 19, 20, 7, 8, 9, 10, 11, 13, 14, 12, 21, 22, 23, 28, 24, 15, 16, 25, 17, 0 }
  uselistorder i32 64, { 0, 1, 2, 3, 4, 5, 7, 6, 8 }
  uselistorder i32 2, { 62, 63, 30, 38, 64, 65, 4, 66, 67, 68, 0, 114, 5, 6, 31, 82, 83, 69, 70, 71, 7, 8, 9, 10, 11, 72, 73, 12, 75, 76, 77, 28, 74, 44, 13, 115, 84, 45, 85, 86, 32, 1, 2, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 14, 99, 15, 78, 79, 80, 33, 29, 100, 101, 102, 103, 104, 46, 47, 48, 105, 106, 107, 116, 39, 16, 17, 3, 49, 108, 18, 19, 34, 35, 50, 51, 36, 20, 21, 22, 23, 42, 43, 52, 53, 109, 41, 110, 111, 37, 24, 117, 54, 81, 55, 57, 56, 58, 25, 26, 59, 112, 40, 27, 113, 60, 61 }
  uselistorder i32 3, { 21, 1, 2, 22, 23, 14, 24, 25, 3, 11, 27, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 4, 40, 5, 0, 8, 15, 17, 16, 10, 18, 41, 9, 47, 6, 42, 43, 44, 28, 45, 46, 29, 50, 30, 13, 48, 49, 7, 55, 56, 57, 51, 52, 53, 54, 12, 19, 20 }
  uselistorder i32 44, { 2, 3, 0, 4, 5, 6, 9, 8, 7, 1 }
  uselistorder i32 40, { 1, 7, 2, 3, 4, 5, 6, 8, 9, 10, 0, 11 }
  uselistorder i32 2048, { 1, 2, 3, 4, 0 }
  uselistorder i16 0, { 12, 13, 0, 1, 2, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i16 4, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000a3d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a3bcthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_1000a35c, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_1000a3f0 = load i32, i32* @lr, align 4
  store i32 %v0_1000a3f0, i32* %r0.global-to-local, align 4
  %v0_1000a3fc = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_1000a408 = add i32 %arg1, 4
  %v2_1000a408 = inttoptr i32 %v1_1000a408 to i32*
  %v3_1000a408 = load i32, i32* %v2_1000a408, align 4
  %v2_1000a40c = load i32, i32* %arg2, align 4
  %v1_1000a410 = add i32 %tmp, 4
  %v2_1000a410 = inttoptr i32 %v1_1000a410 to i32*
  %v3_1000a410 = load i32, i32* %v2_1000a410, align 4
  store i32 268477464, i32* @lr, align 4
  %v4_1000a414 = call i32 @__libc_lseek64(i32 %v3_1000a408, i32 %v2_1000a40c, i32 %v3_1000a410, i32 %arg3)
  %v1_1000a418 = icmp slt i32 %v4_1000a414, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_1000a418, label %dec_label_pc_1000a430, label %dec_label_pc_1000a424

dec_label_pc_1000a424:                            ; preds = %entry
  %v1_1000a424 = load i32, i32* @r31, align 4
  %v2_1000a424 = inttoptr i32 %v1_1000a424 to i32*
  store i32 %v4_1000a414, i32* %v2_1000a424, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000a42c = load i32, i32* @r31, align 4
  %v2_1000a42c = add i32 %v1_1000a42c, 4
  %v3_1000a42c = inttoptr i32 %v2_1000a42c to i32*
  store i32 %tmp, i32* %v3_1000a42c, align 4
  %v0_1000a430.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a430

dec_label_pc_1000a430:                            ; preds = %entry, %dec_label_pc_1000a424
  %v0_1000a430 = phi i32 [ %tmp, %entry ], [ %v0_1000a430.pre, %dec_label_pc_1000a424 ]
  store i32 %v0_1000a3f0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a3fc, i32* @r31, align 4
  ret i32 %v0_1000a430

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder i32 4, { 133, 134, 135, 136, 137, 138, 2, 4, 0, 139, 3, 5, 1, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 180, 152, 96, 252, 153, 6, 7, 181, 182, 8, 9, 10, 11, 12, 13, 14, 154, 15, 155, 156, 111, 157, 158, 159, 160, 161, 16, 17, 162, 163, 112, 164, 165, 113, 166, 167, 169, 18, 19, 91, 93, 168, 253, 20, 92, 109, 21, 22, 185, 183, 184, 116, 186, 187, 188, 105, 23, 189, 190, 191, 192, 193, 194, 195, 24, 196, 25, 26, 27, 110, 197, 199, 117, 200, 201, 202, 254, 28, 29, 106, 178, 30, 31, 203, 32, 204, 118, 205, 206, 207, 119, 33, 34, 255, 256, 120, 35, 36, 97, 37, 38, 39, 40, 41, 42, 208, 209, 121, 43, 44, 45, 107, 46, 114, 210, 122, 47, 264, 271, 48, 49, 170, 50, 51, 171, 52, 214, 215, 216, 211, 212, 213, 53, 172, 54, 55, 56, 173, 57, 174, 175, 230, 232, 231, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 58, 176, 59, 217, 123, 218, 219, 98, 60, 61, 220, 62, 221, 222, 223, 224, 225, 226, 108, 63, 227, 243, 64, 65, 198, 66, 67, 265, 266, 267, 124, 268, 269, 270, 68, 257, 258, 259, 94, 95, 260, 261, 125, 262, 263, 69, 70, 71, 99, 72, 177, 73, 100, 74, 75, 76, 77, 78, 79, 179, 80, 101, 81, 242, 82, 126, 115, 127, 83, 102, 128, 103, 84, 104, 244, 85, 245, 86, 246, 87, 247, 88, 248, 89, 249, 90, 250, 129, 130, 251, 131, 132 }
  uselistorder i32* @r31, { 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 5, 63, 64, 65, 66, 67, 68, 6, 69, 70, 71, 72, 7, 73, 8, 74, 75, 122, 9, 123, 124, 125, 126, 10, 127, 128, 76, 43, 77, 0, 129, 130, 131, 132, 133, 2, 12, 134, 11, 135, 136, 254, 255, 78, 79, 137, 13, 138, 139, 14, 140, 141, 15, 142, 143, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 18, 17, 97, 16, 101, 102, 19, 103, 104, 105, 106, 47, 48, 99, 98, 100, 256, 257, 258, 20, 44, 259, 38, 144, 21, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 45, 107, 22, 39, 23, 24, 108, 109, 110, 159, 160, 161, 162, 1, 163, 164, 165, 166, 167, 168, 169, 170, 260, 261, 262, 263, 264, 265, 266, 267, 25, 171, 172, 173, 174, 26, 175, 176, 177, 178, 179, 180, 181, 182, 27, 42, 183, 3, 184, 185, 28, 186, 268, 29, 269, 46, 30, 40, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 31, 32, 217, 33, 270, 271, 272, 34, 219, 218, 4, 220, 221, 222, 223, 224, 225, 226, 227, 116, 117, 118, 119, 241, 35, 242, 276, 277, 273, 274, 275, 120, 121, 111, 112, 113, 114, 115, 228, 229, 41, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 230, 231, 232, 37, 233, 234, 235, 36, 236, 237, 238, 239, 240 }
  uselistorder label %dec_label_pc_1000a430, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000a448 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000a474 = call i32 @__asm_mfcr()
  %v1_1000a478 = and i32 %v0_1000a474, 268435456
  %v3_1000a478 = icmp eq i32 %v1_1000a478, 0
  store i32 %v0_1000a474, i32* %r31.global-to-local, align 4
  store i32 %v0_1000a474, i32* %r0.global-to-local, align 4
  br i1 %v3_1000a478, label %dec_label_pc_1000a49c, label %dec_label_pc_1000a48c

dec_label_pc_1000a48c:                            ; preds = %entry
  %v0_1000a48c = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000a494 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a494 = inttoptr i32 %v0_1000a48c to i32*
  store i32 %v0_1000a494, i32* %v2_1000a494, align 4
  %v0_1000a4a0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a4a0

dec_label_pc_1000a49c:                            ; preds = %entry
  %v3_1000a484 = icmp eq i32 %v0_1000a474, 0
  br i1 %v3_1000a484, label %dec_label_pc_1000a4ac, label %dec_label_pc_1000a4a0

dec_label_pc_1000a4a0:                            ; preds = %dec_label_pc_1000a49c, %dec_label_pc_1000a48c
  %v0_1000a4a0 = phi i32 [ %v0_1000a474, %dec_label_pc_1000a49c ], [ %v0_1000a4a0.pre, %dec_label_pc_1000a48c ]
  %tmp = icmp slt i32 %v0_1000a4a0, 0
  %v1_1000a4a4 = zext i1 %tmp to i32
  %v2_1000a4a4 = ashr i32 %v0_1000a4a0, 31
  %v3_1000a4a4 = and i32 %v2_1000a4a4, -2
  %v4_1000a4a4 = or i32 %v3_1000a4a4, %v1_1000a4a4
  br label %dec_label_pc_1000a4b4

dec_label_pc_1000a4ac:                            ; preds = %dec_label_pc_1000a49c
  %v3_1000a4ac = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000a4b4

dec_label_pc_1000a4b4:                            ; preds = %dec_label_pc_1000a4a0, %dec_label_pc_1000a4ac
  %v0_1000a4c4 = phi i32 [ %v4_1000a4a4, %dec_label_pc_1000a4a0 ], [ %v3_1000a4ac, %dec_label_pc_1000a4ac ]
  store i32 %v0_1000a448, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a4c4

; uselistorder directives
  uselistorder i32 %v0_1000a4a0, { 1, 0 }
  uselistorder i32 %v0_1000a474, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12, 19, 14, 15, 13, 16, 18, 1, 0, 17, 20 }
  uselistorder i32 31, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 2, 38, 39, 0, 25, 3, 44, 45, 42, 43, 26, 40, 41 }
  uselistorder i32 ()* @__errno_location, { 58, 57, 56, 28, 55, 27, 54, 20, 19, 53, 52, 51, 17, 29, 37, 50, 49, 48, 36, 5, 35, 34, 14, 13, 33, 12, 32, 44, 23, 11, 10, 9, 8, 7, 6, 0, 39, 38, 47, 46, 45, 4, 43, 31, 18, 42, 22, 25, 41, 16, 21, 15, 24, 30, 40, 1, 3, 2, 26 }
  uselistorder i32 268435456, { 0, 5, 15, 6, 18, 7, 19, 1, 11, 20, 21, 22, 23, 24, 25, 14, 2, 12, 10, 3, 16, 13, 17, 9, 8, 4, 26, 27, 28 }
  uselistorder i32 ()* @__asm_mfcr, { 34, 26, 33, 25, 32, 31, 13, 24, 23, 10, 22, 9, 30, 17, 8, 7, 6, 5, 4, 3, 14, 29, 16, 19, 28, 12, 15, 11, 20, 21, 27, 2, 1, 0, 18 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4b4, { 1, 0 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001c000.81 to i32), i32* %r31.global-to-local, align 4
  %v3_1000a4e4 = load i32, i32* @global_var_1001c000.81, align 4
  %v3_1000a4e8 = icmp eq i32 %v3_1000a4e4, -1
  br i1 %v3_1000a4e8, label %dec_label_pc_1000a504, label %dec_label_pc_1000a4f0

dec_label_pc_1000a4f0:                            ; preds = %entry, %dec_label_pc_1000a4f0
  %v0_1000a4f0 = phi i32 [ %v3_1000a4f8, %dec_label_pc_1000a4f0 ], [ %v3_1000a4e4, %entry ]
  call void @__pseudo_call(i32 %v0_1000a4f0)
  %v0_1000a4f8 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a4f8 = add i32 %v0_1000a4f8, -4
  %v2_1000a4f8 = inttoptr i32 %v1_1000a4f8 to i32*
  %v3_1000a4f8 = load i32, i32* %v2_1000a4f8, align 4
  store i32 %v1_1000a4f8, i32* %r31.global-to-local, align 4
  %v3_1000a4fc = icmp eq i32 %v3_1000a4f8, -1
  br i1 %v3_1000a4fc, label %dec_label_pc_1000a504, label %dec_label_pc_1000a4f0

dec_label_pc_1000a504:                            ; preds = %dec_label_pc_1000a4f0, %entry
  %v0_1000a514 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a514

; uselistorder directives
  uselistorder i32 %v3_1000a4f8, { 1, 0 }
  uselistorder i32 -4, { 25, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 19, 20, 11, 12, 13, 14, 22, 21, 29, 30, 26, 27, 28, 0, 15, 1, 23, 24 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 3, 4, 0 }
  uselistorder i32 -1, { 302, 303, 177, 52, 178, 111, 4, 5, 179, 180, 181, 182, 53, 142, 183, 143, 45, 6, 144, 184, 185, 145, 146, 147, 186, 41, 187, 188, 189, 109, 46, 190, 191, 192, 193, 112, 194, 7, 54, 195, 196, 197, 198, 199, 148, 200, 113, 201, 202, 114, 8, 9, 115, 47, 203, 242, 48, 149, 204, 205, 206, 207, 16, 42, 55, 243, 244, 304, 305, 208, 56, 116, 57, 245, 246, 247, 17, 18, 19, 20, 21, 22, 23, 106, 107, 209, 15, 210, 10, 211, 212, 150, 117, 24, 151, 213, 214, 0, 216, 217, 1, 118, 119, 152, 27, 120, 110, 218, 121, 215, 153, 11, 219, 58, 306, 2, 122, 248, 59, 249, 49, 60, 250, 61, 251, 220, 221, 100, 101, 63, 62, 222, 43, 44, 223, 224, 225, 154, 69, 67, 65, 226, 227, 228, 68, 66, 64, 229, 230, 155, 231, 156, 252, 25, 26, 157, 253, 158, 50, 254, 102, 255, 256, 257, 258, 12, 123, 259, 124, 260, 125, 70, 307, 308, 71, 72, 159, 309, 30, 31, 32, 310, 160, 312, 28, 29, 261, 33, 262, 263, 264, 128, 265, 266, 267, 268, 269, 270, 271, 126, 272, 127, 273, 274, 275, 276, 161, 162, 277, 278, 163, 279, 164, 280, 281, 34, 35, 36, 165, 282, 283, 166, 73, 74, 75, 290, 129, 76, 77, 78, 79, 80, 81, 315, 313, 241, 13, 130, 232, 14, 82, 99, 284, 51, 104, 167, 131, 103, 285, 83, 233, 291, 292, 40, 234, 311, 235, 84, 236, 168, 237, 37, 38, 238, 239, 169, 286, 105, 287, 288, 132, 289, 85, 108, 170, 171, 172, 173, 174, 39, 175, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 314, 133, 140, 240, 293, 141, 176, 134, 135, 136, 294, 295, 296, 297, 298, 137, 299, 300, 3, 301, 138, 139 }
  uselistorder i32 1, { 203, 465, 129, 130, 11, 369, 588, 22, 19, 20, 18, 21, 589, 467, 466, 13, 12, 14, 303, 590, 287, 288, 289, 291, 290, 292, 591, 592, 419, 593, 131, 132, 133, 422, 594, 595, 596, 420, 597, 421, 598, 599, 600, 601, 602, 478, 477, 476, 475, 474, 473, 472, 471, 470, 469, 456, 468, 253, 250, 252, 249, 245, 251, 256, 254, 248, 255, 244, 247, 257, 246, 258, 259, 243, 242, 241, 603, 414, 84, 87, 86, 85, 83, 88, 81, 82, 89, 16, 15, 17, 278, 227, 98, 604, 605, 479, 305, 304, 308, 309, 307, 306, 380, 606, 482, 481, 480, 690, 310, 691, 692, 693, 694, 695, 696, 134, 135, 136, 697, 423, 698, 699, 7, 4, 6, 5, 842, 484, 483, 311, 700, 701, 607, 608, 485, 312, 314, 313, 315, 370, 609, 76, 424, 425, 702, 703, 457, 100, 99, 101, 610, 611, 427, 612, 613, 614, 615, 616, 617, 619, 620, 621, 428, 622, 623, 381, 624, 426, 625, 429, 626, 627, 628, 618, 489, 488, 487, 486, 111, 109, 106, 110, 104, 102, 103, 105, 107, 112, 108, 629, 630, 631, 632, 633, 318, 321, 317, 320, 316, 322, 319, 430, 261, 262, 634, 635, 123, 122, 124, 121, 637, 382, 638, 365, 383, 640, 641, 642, 643, 384, 645, 393, 644, 639, 458, 496, 495, 494, 493, 492, 491, 490, 324, 325, 327, 329, 323, 328, 326, 332, 330, 331, 333, 371, 372, 194, 195, 196, 636, 403, 459, 843, 844, 9, 10, 8, 498, 497, 335, 336, 334, 500, 499, 845, 501, 159, 704, 366, 705, 373, 706, 707, 708, 709, 710, 431, 711, 712, 713, 31, 30, 35, 34, 33, 32, 36, 29, 37, 714, 715, 716, 502, 138, 141, 139, 137, 140, 142, 717, 27, 28, 718, 3, 719, 49, 47, 46, 48, 359, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 504, 503, 189, 188, 187, 190, 192, 191, 657, 658, 659, 660, 505, 463, 237, 229, 239, 228, 234, 235, 236, 233, 231, 232, 230, 238, 240, 385, 720, 721, 361, 722, 723, 724, 725, 727, 728, 506, 53, 50, 54, 52, 51, 415, 732, 729, 730, 731, 507, 215, 213, 212, 209, 211, 214, 216, 208, 207, 210, 206, 205, 509, 508, 95, 94, 96, 510, 733, 676, 677, 678, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 117, 115, 116, 113, 119, 114, 120, 118, 374, 679, 160, 404, 750, 751, 752, 395, 375, 75, 74, 73, 753, 511, 72, 386, 432, 754, 513, 512, 514, 224, 225, 223, 222, 433, 157, 158, 156, 846, 405, 847, 755, 756, 757, 758, 759, 760, 376, 516, 515, 57, 55, 58, 56, 761, 762, 518, 517, 77, 186, 176, 337, 848, 434, 435, 520, 519, 183, 180, 181, 182, 179, 184, 523, 522, 521, 67, 68, 524, 763, 360, 764, 767, 768, 769, 770, 771, 526, 525, 338, 339, 340, 341, 772, 773, 774, 357, 775, 776, 387, 777, 778, 399, 400, 436, 388, 396, 779, 438, 406, 780, 781, 439, 782, 783, 784, 437, 532, 531, 530, 529, 460, 528, 527, 300, 299, 294, 296, 297, 293, 298, 295, 301, 0, 813, 814, 815, 816, 389, 93, 680, 681, 90, 91, 682, 220, 219, 218, 217, 221, 785, 786, 787, 788, 789, 790, 791, 792, 793, 197, 198, 201, 199, 200, 202, 171, 172, 170, 173, 174, 175, 169, 193, 533, 177, 161, 226, 342, 343, 162, 440, 534, 128, 441, 408, 407, 849, 535, 683, 684, 685, 416, 686, 61, 63, 65, 60, 62, 59, 64, 66, 442, 687, 661, 44, 40, 38, 42, 39, 43, 41, 45, 794, 390, 795, 536, 352, 351, 350, 353, 354, 355, 356, 25, 24, 26, 23, 283, 279, 282, 281, 284, 286, 280, 285, 537, 538, 539, 264, 541, 540, 78, 79, 80, 70, 71, 69, 367, 801, 542, 265, 266, 1, 443, 444, 545, 544, 543, 270, 268, 269, 272, 267, 271, 409, 546, 547, 548, 549, 550, 417, 418, 796, 391, 445, 797, 798, 410, 799, 553, 552, 551, 152, 150, 151, 149, 153, 148, 146, 147, 154, 145, 155, 144, 554, 555, 817, 818, 819, 673, 362, 125, 126, 127, 766, 765, 377, 726, 273, 854, 855, 276, 274, 277, 275, 850, 851, 852, 853, 346, 345, 344, 556, 263, 204, 185, 168, 143, 260, 347, 348, 349, 164, 163, 166, 557, 165, 558, 167, 662, 392, 397, 368, 663, 664, 665, 358, 666, 667, 668, 394, 669, 670, 671, 672, 446, 447, 401, 448, 563, 562, 561, 560, 559, 449, 674, 675, 564, 688, 689, 800, 568, 567, 566, 565, 802, 803, 411, 412, 450, 804, 451, 805, 363, 575, 574, 573, 572, 571, 570, 569, 806, 807, 808, 452, 809, 810, 364, 811, 453, 812, 578, 577, 576, 461, 820, 821, 580, 579, 822, 823, 413, 830, 831, 398, 832, 581, 402, 2, 583, 582, 379, 824, 825, 378, 828, 829, 454, 455, 826, 827, 584, 92, 833, 834, 835, 836, 837, 838, 839, 840, 585, 462, 178, 841, 97, 587, 586, 302, 464 }
  uselistorder label %dec_label_pc_1000a4f0, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_1000a530 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a530

; uselistorder directives
  uselistorder i32* @r3, { 18, 19, 45, 46, 47, 48, 49, 50, 51, 52, 11, 20, 53, 54, 55, 56, 57, 58, 2, 1, 59, 60, 61, 21, 114, 115, 118, 116, 117, 0, 182, 183, 3, 62, 63, 64, 65, 22, 23, 66, 24, 67, 68, 69, 4, 8, 5, 70, 6, 71, 7, 72, 73, 74, 75, 76, 77, 25, 78, 79, 80, 81, 82, 83, 44, 84, 85, 86, 26, 119, 12, 120, 87, 88, 89, 121, 124, 125, 40, 35, 13, 106, 107, 14, 126, 127, 128, 129, 130, 131, 132, 27, 133, 134, 135, 136, 137, 138, 184, 185, 186, 187, 188, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 189, 190, 150, 151, 152, 153, 154, 155, 156, 157, 158, 15, 159, 160, 161, 162, 163, 164, 165, 108, 109, 16, 110, 111, 112, 166, 39, 28, 43, 195, 9, 29, 10, 38, 42, 191, 192, 193, 167, 168, 169, 170, 171, 172, 173, 174, 90, 91, 92, 93, 94, 95, 96, 175, 176, 177, 30, 31, 32, 33, 179, 122, 123, 17, 34, 194, 97, 98, 99, 101, 100, 102, 103, 104, 105, 113, 178, 180, 181, 36, 37, 41 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268477764, i32* @lr, align 4
  %v0_1000a540 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_1000a540

; uselistorder directives
  uselistorder i32 0, { 19, 347, 348, 349, 350, 351, 20, 352, 81, 80, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 21, 604, 0, 365, 366, 136, 368, 367, 41, 1, 369, 135, 2, 370, 138, 371, 42, 3, 372, 137, 373, 374, 375, 376, 377, 220, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 82, 83, 391, 392, 393, 394, 395, 396, 397, 398, 399, 28, 400, 221, 64, 401, 402, 403, 404, 405, 84, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 85, 416, 417, 418, 213, 214, 419, 420, 421, 22, 4, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 605, 606, 607, 608, 609, 610, 611, 435, 436, 437, 438, 439, 86, 612, 613, 614, 615, 442, 441, 139, 440, 66, 443, 444, 445, 87, 446, 616, 617, 29, 620, 88, 618, 619, 44, 621, 622, 623, 626, 624, 5, 625, 627, 853, 854, 855, 856, 857, 858, 859, 860, 89, 90, 447, 448, 23, 24, 184, 25, 449, 140, 450, 451, 141, 222, 452, 91, 453, 454, 455, 456, 457, 458, 628, 629, 630, 223, 631, 632, 633, 459, 460, 67, 461, 462, 463, 464, 465, 175, 466, 467, 468, 92, 469, 470, 471, 472, 473, 93, 474, 475, 476, 477, 478, 479, 480, 94, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 30, 133, 134, 142, 492, 493, 95, 494, 224, 495, 496, 225, 499, 100, 96, 497, 498, 227, 500, 501, 502, 504, 101, 505, 6, 7, 102, 103, 97, 98, 506, 507, 99, 508, 509, 510, 511, 512, 513, 514, 515, 516, 226, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 336, 527, 528, 26, 530, 45, 68, 104, 228, 533, 215, 534, 529, 531, 532, 535, 536, 105, 343, 344, 65, 43, 62, 503, 143, 69, 861, 862, 863, 866, 864, 8, 144, 176, 537, 538, 867, 868, 649, 636, 639, 640, 641, 229, 642, 643, 645, 644, 646, 647, 648, 650, 651, 652, 634, 635, 637, 638, 106, 653, 655, 656, 654, 657, 658, 659, 660, 177, 337, 661, 178, 338, 339, 107, 108, 539, 540, 70, 541, 542, 543, 544, 545, 546, 547, 109, 145, 549, 548, 110, 550, 551, 112, 111, 552, 230, 553, 554, 555, 114, 113, 556, 557, 185, 231, 558, 115, 662, 663, 664, 665, 671, 666, 49, 672, 673, 667, 668, 669, 46, 47, 48, 674, 232, 31, 32, 33, 169, 676, 116, 675, 233, 677, 678, 679, 680, 234, 871, 9, 117, 681, 71, 34, 682, 146, 683, 684, 685, 583, 147, 118, 686, 687, 688, 689, 690, 691, 696, 692, 693, 694, 695, 148, 697, 698, 699, 10, 50, 700, 701, 872, 874, 873, 150, 119, 876, 875, 149, 186, 702, 703, 704, 120, 705, 706, 707, 708, 709, 710, 711, 712, 713, 235, 714, 715, 716, 717, 718, 719, 236, 720, 721, 722, 723, 724, 725, 726, 877, 878, 727, 879, 237, 882, 53, 238, 187, 883, 239, 884, 885, 51, 52, 886, 880, 881, 240, 241, 735, 728, 242, 54, 729, 730, 731, 35, 733, 734, 736, 737, 738, 739, 740, 741, 188, 173, 174, 244, 742, 743, 744, 746, 151, 749, 245, 189, 751, 752, 753, 754, 243, 190, 748, 745, 747, 750, 755, 179, 756, 757, 758, 11, 824, 825, 826, 122, 121, 827, 12, 123, 191, 584, 585, 586, 759, 760, 761, 762, 763, 764, 765, 55, 766, 767, 768, 769, 770, 568, 849, 789, 790, 192, 791, 887, 124, 888, 889, 890, 891, 892, 893, 246, 247, 898, 899, 248, 902, 911, 152, 912, 249, 903, 13, 894, 895, 897, 587, 588, 589, 590, 591, 125, 592, 593, 594, 216, 595, 250, 596, 251, 559, 560, 561, 126, 562, 127, 771, 773, 153, 72, 79, 774, 775, 14, 772, 563, 564, 128, 565, 566, 567, 794, 796, 36, 797, 56, 798, 795, 792, 793, 15, 801, 799, 800, 154, 802, 803, 129, 804, 805, 252, 806, 130, 807, 808, 809, 810, 811, 812, 813, 814, 16, 17, 340, 569, 570, 571, 57, 58, 572, 217, 218, 253, 776, 777, 155, 778, 779, 780, 781, 782, 783, 784, 785, 131, 786, 787, 828, 829, 830, 156, 732, 18, 63, 670, 157, 913, 914, 915, 916, 917, 918, 919, 920, 904, 905, 906, 59, 907, 908, 909, 910, 865, 254, 573, 850, 820, 574, 869, 851, 870, 815, 788, 575, 896, 900, 901, 182, 256, 257, 158, 27, 37, 180, 255, 341, 258, 181, 259, 576, 577, 260, 578, 261, 579, 262, 580, 263, 581, 264, 582, 265, 73, 183, 267, 193, 132, 597, 598, 268, 599, 601, 266, 269, 600, 159, 602, 603, 194, 271, 272, 273, 274, 270, 275, 276, 277, 278, 342, 279, 816, 195, 196, 197, 198, 817, 818, 199, 200, 280, 60, 819, 821, 170, 283, 822, 203, 282, 61, 823, 201, 281, 160, 202, 831, 832, 833, 834, 204, 74, 207, 205, 206, 284, 285, 846, 75, 38, 171, 161, 210, 211, 835, 836, 837, 838, 162, 208, 209, 212, 839, 840, 841, 164, 39, 76, 77, 163, 843, 844, 845, 219, 78, 40, 842, 286, 165, 287, 847, 167, 166, 848, 172, 168, 288, 921, 922, 923, 852, 345, 346, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946 }
  uselistorder i32* @lr, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 128, 129, 130, 21, 22, 23, 24, 25, 26, 27, 28, 131, 29, 30, 132, 133, 134, 135, 136, 307, 308, 309, 31, 32, 33, 34, 310, 35, 36, 37, 137, 138, 139, 140, 141, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 2, 3, 52, 311, 312, 66, 67, 68, 142, 313, 314, 315, 316, 317, 143, 147, 144, 145, 146, 151, 152, 148, 149, 150, 153, 154, 155, 156, 157, 69, 70, 71, 74, 72, 73, 158, 162, 159, 1, 161, 0, 163, 166, 167, 164, 165, 318, 319, 320, 321, 322, 168, 169, 170, 171, 172, 173, 174, 175, 113, 176, 177, 178, 179, 180, 181, 323, 324, 325, 326, 327, 328, 329, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 265, 334, 335, 336, 337, 330, 331, 332, 333, 194, 195, 199, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 294, 114, 115, 116, 117, 232, 233, 266, 267, 340, 341, 345, 346, 347, 348, 349, 350, 352, 354, 342, 344, 338, 339, 75, 76, 234, 78, 235, 77, 79, 268, 270, 269, 271, 272, 273, 274, 275, 276, 80, 236, 237, 289, 280, 281, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 295, 160, 353, 351, 300, 81, 343, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 296, 298, 297, 299, 301, 302, 303, 304, 305, 306 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %1 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare %2 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i8** @__decompiler_undefined_function_5() local_unnamed_addr
