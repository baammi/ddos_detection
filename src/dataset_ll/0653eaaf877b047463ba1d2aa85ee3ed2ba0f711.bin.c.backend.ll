source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%sockaddr = type { i32, [14 x i8] }
%_TYPEDEF_sigset_t = type { [1 x i32] }
%tms = type { i32, i32, i32, i32 }
%timespec = type { i32, i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%linux_dirent64 = type { i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.1 = constant i32 -352321502
@global_var_1da44.5 = global i32 0
@global_var_1da54.6 = global i32* @global_var_1da44.5
@global_var_1dbb0.12 = global i32 0
@global_var_e0a0.18 = constant i32 -382906384
@global_var_1dbcc.23 = global i32 0
@global_var_8314.24 = constant i32 -352321546
@global_var_13824.25 = constant i32 -481296384
@global_var_a4c4.31 = constant i32 -382906384
@global_var_a988.33 = constant i32 -382906384
@global_var_89d8.35 = constant i32 -382906384
@global_var_c96c.37 = constant i32 -382906384
@global_var_c1f8.39 = constant i32 -382906384
@global_var_b998.41 = constant i32 -382906384
@global_var_9da8.44 = constant i32 -382906384
@global_var_962c.46 = constant i32 -382906384
@global_var_1dc68.49 = global i32 0
@global_var_15464.61 = constant i32 47
@global_var_1dc70.63 = global i32 0
@global_var_1dbd0.65 = global i32 0
@global_var_1dc6c.67 = global i32 0
@global_var_df60.70 = constant i32 -382910448
@global_var_1da60.72 = global i32 75172
@global_var_15468.74 = constant [11 x i8] c"92.53.72.6\00"
@global_var_1dc78.77 = local_unnamed_addr global i32 0
@global_var_1dc77.78 = local_unnamed_addr global i32 0
@global_var_1dc76.79 = local_unnamed_addr global i32 0
@global_var_1dbd4.81 = global i32 0
@global_var_df48.83 = constant i32 -442556408
@global_var_1dc75.87 = local_unnamed_addr global i32 0
@global_var_15474.91 = constant i32 10
@global_var_1da58.93 = global i32 -1
@global_var_1da5c.95 = global i32 -1
@global_var_12bf0.98 = constant i32 -382910448
@global_var_125a4.99 = constant i32 -382910224
@global_var_15478.101 = constant i32 16777216
@global_var_1dbdc.103 = global i32 0
@global_var_1dbe8.105 = global i32 0
@global_var_1dbe0.107 = global i32 0
@global_var_1dbe4.109 = global i32 0
@global_var_1dc20.123 = global i32 0
@global_var_1dbec.125 = global i32 0
@global_var_1dc18.127 = global i32 0
@global_var_1dc8c.132 = global i32 0
@global_var_1dc84.136 = global i32 0
@global_var_1dc88.138 = global i32 0
@global_var_1dbf3.141 = local_unnamed_addr global i32 0
@global_var_1dbf2.142 = local_unnamed_addr global i32 0
@global_var_1dc04.144 = global i32 0
@global_var_1dbf5.146 = local_unnamed_addr global i32 0
@global_var_1dbf8.147 = local_unnamed_addr global i32 0
@global_var_1dc05.148 = local_unnamed_addr global i32 0
@global_var_1dc06.149 = local_unnamed_addr global i32 0
@global_var_1dc07.150 = local_unnamed_addr global i32 0
@global_var_1dbf4.151 = local_unnamed_addr global i32 0
@global_var_1dbf9.152 = local_unnamed_addr global i32 0
@global_var_1dc13.154 = local_unnamed_addr global i32 0
@global_var_15500.156 = constant i32 593413
@global_var_15514.158 = constant i32 0
@global_var_1dc12.159 = local_unnamed_addr global i32 0
@global_var_15480.161 = constant i32 167904771
@global_var_15488.163 = constant i32 100729347
@global_var_15490.165 = constant i32 536958260
@global_var_1549c.167 = constant i32 185540392
@global_var_154a8.169 = constant i32 101848082
@global_var_154b0.171 = constant i32 319293461
@global_var_154b8.173 = constant i32 302920747
@global_var_154c8.175 = constant i32 656134
@global_var_154cc.177 = constant i32 235537158
@global_var_154d4.179 = constant i32 1444087300
@global_var_154dc.181 = constant i32 101913617
@global_var_154ec.183 = constant [9 x i8] c"UWVRWQWU\00"
@global_var_154f8.185 = constant i32 521997841
@global_var_15574.187 = constant i32 335680000
@global_var_15504.189 = constant [6 x i8] c"VUTSR\00"
@global_var_1550c.191 = constant i32 336856599
@global_var_15518.193 = constant i32 352457746
@global_var_15520.195 = constant i32 319358226
@global_var_15528.197 = constant i32 100928020
@global_var_15534.199 = constant [5 x i8] c"VUTS\00"
@global_var_1553c.201 = constant i32 387387924
@global_var_15544.203 = constant i32 1375867709
@global_var_1554c.205 = constant i32 336791814
@global_var_15554.207 = constant i32 101913617
@global_var_15564.209 = constant [9 x i8] c"UWVPW^VU\00"
@global_var_1557c.211 = constant i32 895352874
@global_var_1dbfc.212 = local_unnamed_addr global i32 0
@global_var_1dc00.214 = local_unnamed_addr global i32 0
@global_var_1dbfa.215 = local_unnamed_addr global i32 0
@global_var_1dbfb.216 = local_unnamed_addr global i32 0
@global_var_1dc08.218 = local_unnamed_addr global i32 0
@global_var_1dc14.219 = local_unnamed_addr global i32 0
@global_var_1dc15.220 = local_unnamed_addr global i32 0
@global_var_15570.230 = constant [3 x i8] c"\0D\0A\00"
@global_var_15595.232 = constant i32 1646263295
@global_var_1558c.234 = constant i32 2095871
@global_var_1dc94.237 = global i32 0
@global_var_1da64.240 = global i32 -554828881
@global_var_15598.245 = constant [3 x i8] c"b^\00"
@global_var_1dc9c.246 = local_unnamed_addr global i32 0
@global_var_1dca0.247 = local_unnamed_addr global i32 0
@global_var_1dca1.248 = local_unnamed_addr global i32 0
@global_var_1559c.250 = constant i32 60256
@global_var_1dca4.251 = local_unnamed_addr global i32 0
@global_var_1dca8.252 = local_unnamed_addr global i32 0
@global_var_1dca9.253 = local_unnamed_addr global i32 0
@global_var_155a0.255 = constant i32 33622318
@global_var_1dcb0.256 = local_unnamed_addr global i32 0
@global_var_1dcac.257 = local_unnamed_addr global i32 0
@global_var_1dcb1.258 = local_unnamed_addr global i32 0
@global_var_155b8.260 = constant i32 184684308
@global_var_1dcb4.261 = local_unnamed_addr global i32 0
@global_var_1dcb8.262 = local_unnamed_addr global i32 0
@global_var_1dcb9.263 = local_unnamed_addr global i32 0
@global_var_155c0.265 = constant i32 84281602
@global_var_1dcbc.266 = local_unnamed_addr global i32 0
@global_var_1dcc0.267 = local_unnamed_addr global i32 0
@global_var_1dcc1.268 = local_unnamed_addr global i32 0
@global_var_155c8.270 = constant i32 320085524
@global_var_1dcc4.271 = local_unnamed_addr global i32 0
@global_var_1dcc8.272 = local_unnamed_addr global i32 0
@global_var_1dcc9.273 = local_unnamed_addr global i32 0
@global_var_155d0.275 = constant i32 6754068
@global_var_1dcd0.276 = local_unnamed_addr global i32 0
@global_var_1dccc.277 = local_unnamed_addr global i32 0
@global_var_1dcd1.278 = local_unnamed_addr global i32 0
@global_var_155d4.280 = constant i32 151913800
@global_var_1dcd8.281 = local_unnamed_addr global i32 0
@global_var_1dcd4.282 = local_unnamed_addr global i32 0
@global_var_1dcd9.283 = local_unnamed_addr global i32 0
@global_var_155ec.285 = constant i32 353568300
@global_var_1dce0.286 = local_unnamed_addr global i32 0
@global_var_1dcdc.287 = local_unnamed_addr global i32 0
@global_var_1dce1.288 = local_unnamed_addr global i32 0
@global_var_15608.290 = constant i32 352846857
@global_var_1dce8.291 = local_unnamed_addr global i32 0
@global_var_1dce4.292 = local_unnamed_addr global i32 0
@global_var_1dce9.293 = local_unnamed_addr global i32 0
@global_var_15614.295 = constant i32 151913800
@global_var_1dcec.296 = local_unnamed_addr global i32 0
@global_var_1dcf0.297 = local_unnamed_addr global i32 0
@global_var_1dcf1.298 = local_unnamed_addr global i32 0
@global_var_15628.300 = constant i32 151913800
@global_var_1dcf8.301 = local_unnamed_addr global i32 0
@global_var_1dcf4.302 = local_unnamed_addr global i32 0
@global_var_1dcf9.303 = local_unnamed_addr global i32 0
@global_var_15640.305 = constant i32 135599944
@global_var_1dcfc.306 = local_unnamed_addr global i32 0
@global_var_1dd00.307 = local_unnamed_addr global i32 0
@global_var_1dd01.308 = local_unnamed_addr global i32 0
@global_var_15648.310 = constant i32 35586632
@global_var_1dd08.311 = local_unnamed_addr global i32 0
@global_var_1dd04.312 = local_unnamed_addr global i32 0
@global_var_1dd09.313 = local_unnamed_addr global i32 0
@global_var_15650.315 = constant i32 1728250184
@global_var_1dd10.316 = local_unnamed_addr global i32 0
@global_var_1dd0c.317 = local_unnamed_addr global i32 0
@global_var_1dd11.318 = local_unnamed_addr global i32 0
@global_var_15658.320 = constant i32 386271816
@global_var_1dd14.321 = local_unnamed_addr global i32 0
@global_var_1dd18.322 = local_unnamed_addr global i32 0
@global_var_1dd19.323 = local_unnamed_addr global i32 0
@global_var_15660.325 = constant i32 135599944
@global_var_1dd1c.326 = local_unnamed_addr global i32 0
@global_var_1dd20.327 = local_unnamed_addr global i32 0
@global_var_1dd21.328 = local_unnamed_addr global i32 0
@global_var_15670.330 = constant i32 101913672
@global_var_1dd7c.331 = local_unnamed_addr global i32 0
@global_var_1dd80.332 = local_unnamed_addr global i32 0
@global_var_1dd81.333 = local_unnamed_addr global i32 0
@global_var_1567c.335 = constant i32 235472457
@global_var_1dd84.336 = local_unnamed_addr global i32 0
@global_var_1dd88.337 = local_unnamed_addr global i32 0
@global_var_1dd89.338 = local_unnamed_addr global i32 0
@global_var_15684.340 = constant i32 135599944
@global_var_1dd24.341 = local_unnamed_addr global i32 0
@global_var_1dd28.342 = local_unnamed_addr global i32 0
@global_var_1dd29.343 = local_unnamed_addr global i32 0
@global_var_15698.345 = constant i32 269751302
@global_var_1dd2c.346 = local_unnamed_addr global i32 0
@global_var_1dd30.347 = local_unnamed_addr global i32 0
@global_var_1dd31.348 = local_unnamed_addr global i32 0
@global_var_156cc.350 = constant i32 302527539
@global_var_1dd38.351 = local_unnamed_addr global i32 0
@global_var_1dd34.352 = local_unnamed_addr global i32 0
@global_var_1dd39.353 = local_unnamed_addr global i32 0
@global_var_156a4.355 = constant i32 68354632
@global_var_1dd40.356 = local_unnamed_addr global i32 0
@global_var_1dd3c.357 = local_unnamed_addr global i32 0
@global_var_1dd41.358 = local_unnamed_addr global i32 0
@global_var_156b8.360 = constant i32 34211337
@global_var_1dd48.361 = local_unnamed_addr global i32 0
@global_var_1dd44.362 = local_unnamed_addr global i32 0
@global_var_1dd49.363 = local_unnamed_addr global i32 0
@global_var_156e4.365 = constant i32 285344584
@global_var_1dd4c.366 = local_unnamed_addr global i32 0
@global_var_1dd50.367 = local_unnamed_addr global i32 0
@global_var_1dd51.368 = local_unnamed_addr global i32 0
@global_var_156f4.370 = constant i32 285344584
@global_var_1dd58.371 = local_unnamed_addr global i32 0
@global_var_1dd54.372 = local_unnamed_addr global i32 0
@global_var_1dd59.373 = local_unnamed_addr global i32 0
@global_var_1dd5c.374 = local_unnamed_addr global i32 0
@global_var_1dd60.375 = local_unnamed_addr global i32 0
@global_var_1dd61.376 = local_unnamed_addr global i32 0
@global_var_15708.378 = constant i32 151912456
@global_var_1dd68.379 = local_unnamed_addr global i32 0
@global_var_1dd64.380 = local_unnamed_addr global i32 0
@global_var_1dd69.381 = local_unnamed_addr global i32 0
@global_var_156c4.383 = constant i32 34801922
@global_var_1dd6c.384 = local_unnamed_addr global i32 0
@global_var_1dd70.385 = local_unnamed_addr global i32 0
@global_var_1dd71.386 = local_unnamed_addr global i32 0
@global_var_15710.388 = constant i32 100991062
@global_var_1dd79.389 = local_unnamed_addr global i32 0
@global_var_1dd74.390 = local_unnamed_addr global i32 0
@global_var_1dd78.391 = local_unnamed_addr global i32 0
@global_var_1420c.394 = constant i32 -476053504
@global_var_12fc0.398 = constant i32 -443219956
@global_var_1312c.403 = constant i32 -376111092
@global_var_1dc5c.406 = global i32 0
@global_var_132ac.408 = constant i32 -456978431
@global_var_1dd8c.410 = global i32 0
@global_var_1dc24.412 = global i32 0
@global_var_1db64.415 = global i32 256
@global_var_1da68.416 = global i32* @global_var_1db64.415
@global_var_1dc4c.419 = global i32 0
@global_var_1de0c.421 = global i32 0
@global_var_149c0.422 = constant i32 -382910416
@global_var_13230.423 = constant i32 -509595648
@global_var_138a4.430 = constant i32 -442564520
@global_var_1db70.436 = global i32 0
@global_var_12e6c.438 = constant i32 -481230848
@global_var_1dc3c.440 = global i32 0
@global_var_14610.442 = constant i32 -509587456
@global_var_15834.444 = constant i32 33554944
@global_var_1dba8.445 = global i32* @global_var_15834.444
@global_var_1db88.448 = global i32 0
@global_var_1dc40.452 = local_unnamed_addr global i32 0
@global_var_13fc4.454 = constant i32 -352321419
@global_var_1da38.458 = global i32 -1
@global_var_1dc50.461 = global i32 0
@global_var_1dc54.463 = local_unnamed_addr global i32 0
@global_var_141f8.464 = constant i32 -390234096
@global_var_15728.466 = constant [10 x i8] c"/dev/null\00"
@global_var_1dc58.468 = global i32 0
@global_var_1dc44.473 = local_unnamed_addr global i32 0
@global_var_1dc48.475 = global i32 0
@global_var_13210.477 = constant i32 -369096958
@global_var_1dba0 = external local_unnamed_addr global i32
@global_var_131c4.487 = constant i32 -442564608
@global_var_144c0.489 = constant i32 -335544664
@global_var_145dc.492 = constant i32 -275775369
@global_var_14d54.493 = constant i32 -382910352
@global_var_1dc64.495 = global i32 0
@global_var_1de24.498 = global i32 0
@global_var_1de28.500 = global i32 0
@global_var_1da3c.503 = global i32 0
@global_var_1dbac.3 = external global i8*
@global_var_1dbc8.21 = external global i8*
@global_var_1dbc9.29 = global i8 0
@global_var_1dc74.76 = external global i8*
@global_var_1dbd8.97 = external global i8*
@global_var_1dc1c.129 = external global i8*
@global_var_1dc1d.130 = local_unnamed_addr global i8 0
@global_var_1dbf0.140 = external global i8*
@global_var_1dc10.145 = local_unnamed_addr global i8 0
@global_var_1dc11.153 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8094() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @function_8130()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @function_15414(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @function_80b0() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_1dbac.3 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_1dbac.3 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1da54.6 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_1da54.6 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_1da54.6 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_1da54.6 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_1dbac.3 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_1da54.6, { 1, 0 }
  uselistorder i8** @global_var_1dbac.3, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @function_8124(i32 %arg1) local_unnamed_addr {
dec_label_pc_8124:
  %v0_8124 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8124, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_8124
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_8124, %bb
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_8130() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* inttoptr (i32 121416 to i32*), align 8
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 121416

bb2:                                              ; preds = %.thread
  ret i32 121416

; uselistorder directives
  uselistorder i32 121416, { 1, 0, 2 }
}

define i32 @function_8188() local_unnamed_addr {
dec_label_pc_8188:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @function_142ac(i32 ptrtoint (i32* @global_var_e0a0.18 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 87120, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @function_13c74()
  ret i32 %v0_81bc
}

define i32 @function_81cc(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_81cc:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_81cc = urem i32 %arg1, 256
  %v2_81d0 = icmp eq i32 %v1_81cc, 0
  %v1_81d8 = urem i32 %arg3, 256
  br i1 %v2_81d0, label %dec_label_pc_821c, label %dec_label_pc_81e4

dec_label_pc_81e4:                                ; preds = %dec_label_pc_81cc
  %v0_81e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_81e4 = add i32 %v0_81e4, 4
  %v2_81e4 = inttoptr i32 %v1_81e4 to i8*
  %v3_81e4 = load i8, i8* %v2_81e4, align 1
  %v4_81e4 = zext i8 %v3_81e4 to i32
  %v9_81e8 = icmp eq i32 %v4_81e4, %v1_81d8
  br i1 %v9_81e8, label %dec_label_pc_8224, label %dec_label_pc_820c.preheader

dec_label_pc_820c.preheader:                      ; preds = %dec_label_pc_81e4
  br label %dec_label_pc_820c

dec_label_pc_81fc:                                ; preds = %dec_label_pc_820c
  %v1_81fc = add i32 %v0_8204.in, 12
  %v2_81fc = inttoptr i32 %v1_81fc to i8*
  %v3_81fc = load i8, i8* %v2_81fc, align 1
  %v4_81fc = zext i8 %v3_81fc to i32
  %v9_8200 = icmp eq i32 %v4_81fc, %v1_81d8
  br i1 %v9_8200, label %dec_label_pc_8224, label %dec_label_pc_820c

dec_label_pc_820c:                                ; preds = %dec_label_pc_820c.preheader, %dec_label_pc_81fc
  %v0_8204.in = phi i32 [ %v0_81e4, %dec_label_pc_820c.preheader ], [ %v0_8204, %dec_label_pc_81fc ]
  %v0_820c = phi i32 [ 0, %dec_label_pc_820c.preheader ], [ %v1_820c, %dec_label_pc_81fc ]
  %v0_8204 = add i32 %v0_8204.in, 8
  %v1_820c = add i32 %v0_820c, 1
  %v9_8210 = icmp eq i32 %v1_820c, %v1_81cc
  store i32 %v0_8204, i32* %r1.global-to-local, align 4
  br i1 %v9_8210, label %dec_label_pc_821c, label %dec_label_pc_81fc

dec_label_pc_821c:                                ; preds = %dec_label_pc_820c, %dec_label_pc_81cc
  ret i32 %arg4

dec_label_pc_8224:                                ; preds = %dec_label_pc_81fc, %dec_label_pc_81e4
  %v0_8224 = phi i32 [ %v0_81e4, %dec_label_pc_81e4 ], [ %v0_8204, %dec_label_pc_81fc ]
  %v1_8224 = inttoptr i32 %v0_8224 to i32*
  %v2_8224 = load i32, i32* %v1_8224, align 4
  ret i32 %v2_8224

; uselistorder directives
  uselistorder i32 %v1_820c, { 1, 0 }
  uselistorder i32 %v0_8204, { 1, 0, 2 }
  uselistorder i32 %v0_8204.in, { 1, 0 }
  uselistorder i32 %v0_81e4, { 1, 0, 2 }
  uselistorder i32 %v1_81d8, { 1, 0 }
  uselistorder i32 %v1_81cc, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_820c, { 1, 0 }
}

define i32 @function_8230(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_8230:
  store i32 %arg1, i32* @r6, align 4
  %v1_823c = urem i32 %arg2, 256
  store i32 %v1_823c, i32* @r7, align 4
  %v0_8248 = call i32 @function_12c1c()
  %v7_824c = icmp eq i32 %v0_8248, -1
  %tmp23 = icmp slt i32 %v0_8248, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_8230
  br label %bb25

bb24:                                             ; preds = %dec_label_pc_8230
  %. = zext i1 %v7_824c to i32
  store i32 %., i32* @r5, align 4
  %v2_8264 = icmp eq i1 %v7_824c, false
  br i1 %v2_8264, label %bb26, label %bb25

bb25:                                             ; preds = %.thread2, %bb24
  ret i32 %v0_8248

bb26:                                             ; preds = %bb24
  %v0_826c = call i32 @function_12c1c()
  %v7_8270 = icmp eq i32 %v0_826c, -1
  store i32 %v0_826c, i32* @r4, align 4
  br i1 %v7_8270, label %dec_label_pc_82a0, label %dec_label_pc_827c

dec_label_pc_827c:                                ; preds = %bb26
  %v2_827c = icmp eq i32 %v0_826c, 0
  br i1 %v2_827c, label %dec_label_pc_8284, label %dec_label_pc_82a8

dec_label_pc_8284:                                ; preds = %dec_label_pc_827c
  %v0_8284 = load i32, i32* @r6, align 4
  %v1_8288 = call i32 @function_13ffc(i32 %v0_8284)
  %v0_828c = call i32 @function_12c74()
  %v2_8294 = call i32 @function_12cf0(i32 %v0_828c, i32 9)
  %v0_8298 = load i32, i32* @r4, align 4
  %v1_829c = call i32 @function_13f68(i32 %v0_8298)
  br label %dec_label_pc_82a0

dec_label_pc_82a0:                                ; preds = %bb26, %dec_label_pc_8284
  %v0_82a0 = load i32, i32* @r5, align 4
  %v1_82a4 = call i32 @function_13f68(i32 %v0_82a0)
  br label %dec_label_pc_82a8

dec_label_pc_82a8:                                ; preds = %dec_label_pc_827c, %dec_label_pc_82a0
  %v2_82ac = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_82ac = zext i8 %v2_82ac to i32
  %v2_82b0 = icmp eq i8 %v2_82ac, 0
  br i1 %v2_82b0, label %dec_label_pc_82f4, label %dec_label_pc_82b8

dec_label_pc_82b8:                                ; preds = %dec_label_pc_82a8
  %v2_82bc = load i32, i32* @global_var_1dbcc.23, align 4
  %v1_82c0 = inttoptr i32 %v2_82bc to i32*
  %v2_82c0 = load i32, i32* %v1_82c0, align 4
  store i32 %v2_82c0, i32* @ip, align 4
  %v1_82c4 = add i32 %v2_82c0, 4
  %v2_82c4 = inttoptr i32 %v1_82c4 to i8*
  %v3_82c4 = load i8, i8* %v2_82c4, align 1
  %v4_82c4 = zext i8 %v3_82c4 to i32
  %v1_82c8 = load i32, i32* @r7, align 4
  %v9_82c8 = icmp eq i32 %v4_82c4, %v1_82c8
  br i1 %v9_82c8, label %dec_label_pc_82fc, label %dec_label_pc_82e8.preheader

dec_label_pc_82e8.preheader:                      ; preds = %dec_label_pc_82b8
  %v1_82cc = load i32, i32* @r5, align 4
  br label %dec_label_pc_82e8

dec_label_pc_82d8:                                ; preds = %dec_label_pc_82e8
  %v4_82d8 = mul i32 %v1_82e8, 4
  %v5_82d8 = add i32 %v4_82d8, %v2_82bc
  %v6_82d8 = inttoptr i32 %v5_82d8 to i32*
  %v7_82d8 = load i32, i32* %v6_82d8, align 4
  store i32 %v7_82d8, i32* @ip, align 4
  %v1_82dc = add i32 %v7_82d8, 4
  %v2_82dc = inttoptr i32 %v1_82dc to i8*
  %v3_82dc = load i8, i8* %v2_82dc, align 1
  %v4_82dc = zext i8 %v3_82dc to i32
  %v9_82e0 = icmp eq i32 %v4_82dc, %v1_82c8
  br i1 %v9_82e0, label %dec_label_pc_82fc, label %dec_label_pc_82e8

dec_label_pc_82e8:                                ; preds = %dec_label_pc_82e8.preheader, %dec_label_pc_82d8
  %v0_82e8 = phi i32 [ %v1_82cc, %dec_label_pc_82e8.preheader ], [ %v1_82e8, %dec_label_pc_82d8 ]
  %v1_82e8 = add i32 %v0_82e8, 1
  %v9_82ec = icmp eq i32 %v1_82e8, %v3_82ac
  br i1 %v9_82ec, label %dec_label_pc_82f4, label %dec_label_pc_82d8

dec_label_pc_82f4:                                ; preds = %dec_label_pc_82e8, %dec_label_pc_82a8, %dec_label_pc_82fc
  %v1_82f8 = call i32 @function_13f68(i32 0)
  %v0_8310.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_82fc

dec_label_pc_82fc:                                ; preds = %dec_label_pc_82d8, %dec_label_pc_82b8, %dec_label_pc_82f4
  %v0_8310 = phi i32 [ %v2_82c0, %dec_label_pc_82b8 ], [ %v0_8310.pre, %dec_label_pc_82f4 ], [ %v7_82d8, %dec_label_pc_82d8 ]
  %v1_8310 = inttoptr i32 %v0_8310 to i32*
  %v2_8310 = load i32, i32* %v1_8310, align 4
  call void @__pseudo_branch(i32 %v2_8310)
  br label %dec_label_pc_82f4

; uselistorder directives
  uselistorder i32 %v1_82e8, { 2, 0, 1 }
  uselistorder i32 %v0_826c, { 1, 2, 0 }
  uselistorder i1 %v7_824c, { 1, 0 }
  uselistorder i32 %v0_8248, { 2, 1, 0 }
  uselistorder label %dec_label_pc_82fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82e8, { 1, 0 }
  uselistorder label %dec_label_pc_82a8, { 1, 0 }
  uselistorder label %dec_label_pc_82a0, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
}

define i32 @function_8320(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8320:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_8320 = load i32, i32* @r4, align 4
  %v6_8320 = load i32, i32* @r5, align 4
  %v9_8320 = load i32, i32* @r6, align 4
  %v12_8320 = load i32, i32* @r7, align 4
  %v15_8320 = load i32, i32* @r8, align 4
  %v18_8320 = load i32, i32* @sb, align 4
  %v21_8320 = load i32, i32* @sl, align 4
  %v27_8320 = load i32, i32* @lr, align 4
  %v7_8324 = icmp eq i32 %arg2, 3
  store i1 %v7_8324, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r5, align 4
  %v0_8330 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_8330, i32* @r4, align 4
  %tmp33 = icmp ult i32 %arg2, 4
  br i1 %tmp33, label %dec_label_pc_8344, label %dec_label_pc_8338

dec_label_pc_8338:                                ; preds = %dec_label_pc_8320
  %v7_8338 = icmp eq i32 %arg2, 4
  store i1 %v7_8338, i1* %cpsr_z.global-to-local, align 1
  %v1_833c = inttoptr i32 %v0_8330 to i32*
  %v2_833c = load i32, i32* %v1_833c, align 4
  store i32 %v2_833c, i32* @sl, align 4
  br i1 %v7_8338, label %dec_label_pc_8344, label %dec_label_pc_834c

dec_label_pc_8344:                                ; preds = %dec_label_pc_8368, %.dec_label_pc_8344_crit_edge, %dec_label_pc_8338, %dec_label_pc_835c, %dec_label_pc_834c, %dec_label_pc_8320
  %v29_8348 = phi i32 [ %v29_8348.pre, %.dec_label_pc_8344_crit_edge ], [ %v0_8330, %dec_label_pc_8368 ], [ %v0_8330, %dec_label_pc_8338 ], [ %v0_8330, %dec_label_pc_835c ], [ %v0_8330, %dec_label_pc_834c ], [ %v0_8330, %dec_label_pc_8320 ]
  store i32 %v6_8320, i32* @r5, align 4
  store i32 %v9_8320, i32* @r6, align 4
  store i32 %v12_8320, i32* @r7, align 4
  store i32 %v18_8320, i32* @sb, align 4
  store i32 %v21_8320, i32* @sl, align 4
  ret i32 %v29_8348

dec_label_pc_834c:                                ; preds = %dec_label_pc_8338
  %v7_834c = icmp eq i32 %arg2, 5
  store i1 %v7_834c, i1* %cpsr_z.global-to-local, align 1
  %v1_8350 = add i32 %v0_8330, 4
  %v2_8350 = inttoptr i32 %v1_8350 to i8*
  %v3_8350 = load i8, i8* %v2_8350, align 1
  %v4_8350 = zext i8 %v3_8350 to i32
  store i32 %v4_8350, i32* %r1.global-to-local, align 4
  br i1 %v7_834c, label %dec_label_pc_8344, label %dec_label_pc_835c

dec_label_pc_835c:                                ; preds = %dec_label_pc_834c
  %v1_835c = add i32 %v0_8330, 5
  %v2_835c = inttoptr i32 %v1_835c to i8*
  %v3_835c = load i8, i8* %v2_835c, align 1
  %v4_835c = zext i8 %v3_835c to i32
  store i32 %v4_835c, i32* @r7, align 4
  %v2_8360 = icmp eq i8 %v3_835c, 0
  store i1 %v2_8360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8360, label %dec_label_pc_8344, label %dec_label_pc_8368

dec_label_pc_8368:                                ; preds = %dec_label_pc_835c
  %v3_8368 = mul nuw nsw i32 %v4_835c, 4
  store i32 %v3_8368, i32* @sb, align 4
  %v1_836c = add i32 %arg2, -6
  store i32 %v1_836c, i32* @r6, align 4
  %v2_8370 = mul nuw nsw i32 %v4_835c, 5
  store i32 %v2_8370, i32* @r8, align 4
  %v3_8374 = icmp ult i32 %v1_836c, %v2_8370
  %v9_8374 = icmp eq i32 %v1_836c, %v2_8370
  store i1 %v9_8374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8374, label %dec_label_pc_8344, label %dec_label_pc_837c

dec_label_pc_837c:                                ; preds = %dec_label_pc_8368
  store i32 %v4_835c, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  %v2_8384 = call i32 @function_137cc(i32 %v4_835c, i32 24)
  store i32 %v2_8384, i32* %r0.global-to-local, align 4
  %v0_8388 = load i32, i32* @r7, align 4
  %v2_8388 = icmp eq i32 %v0_8388, 0
  store i1 %v2_8388, i1* %cpsr_z.global-to-local, align 1
  %v0_8390 = load i32, i32* @r4, align 4
  %v1_8390 = add i32 %v0_8390, 6
  store i32 %v1_8390, i32* %fp.global-to-local, align 4
  %tmp27 = icmp slt i32 %v0_8388, 1
  br i1 %tmp27, label %dec_label_pc_83e8thread-pre-split, label %dec_label_pc_8398

dec_label_pc_8398:                                ; preds = %dec_label_pc_837c
  store i32 %v2_8384, i32* %r1.global-to-local, align 4
  %v1_839c = load i32, i32* @r8, align 4
  %v2_839c = add i32 %v1_839c, %v0_8390
  store i32 %v2_839c, i32* %ip.global-to-local, align 4
  store i32 %v0_8390, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_83ac

dec_label_pc_83ac:                                ; preds = %dec_label_pc_83ac.dec_label_pc_83ac_crit_edge, %dec_label_pc_8398
  %v2_83bc = phi i32 [ %v1_83d0, %dec_label_pc_83ac.dec_label_pc_83ac_crit_edge ], [ %v2_8384, %dec_label_pc_8398 ]
  %v1_83b8 = phi i32 [ %v1_83b8.pre, %dec_label_pc_83ac.dec_label_pc_83ac_crit_edge ], [ %v2_839c, %dec_label_pc_8398 ]
  %v0_83b4 = phi i32 [ %v0_83ac.pre, %dec_label_pc_83ac.dec_label_pc_83ac_crit_edge ], [ %v0_8390, %dec_label_pc_8398 ]
  %v1_83ac = add i32 %v0_83b4, 10
  %v2_83ac = inttoptr i32 %v1_83ac to i8*
  %v3_83ac = load i8, i8* %v2_83ac, align 1
  %v1_83b0 = add i32 %v0_83b4, 6
  %v2_83b0 = inttoptr i32 %v1_83b0 to i32*
  %v3_83b0 = load i32, i32* %v2_83b0, align 4
  store i32 %v3_83b0, i32* %r2.global-to-local, align 4
  %v1_83b4 = add i32 %v0_83b4, 5
  store i32 %v1_83b4, i32* %r0.global-to-local, align 4
  %v9_83b8 = icmp eq i32 %v1_83b4, %v1_83b8
  store i1 %v9_83b8, i1* %cpsr_z.global-to-local, align 1
  %v3_83bc = add i32 %v2_83bc, 20
  %v4_83bc = inttoptr i32 %v3_83bc to i8*
  store i8 %v3_83ac, i8* %v4_83bc, align 1
  %v0_83c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_83c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_83c0 = add i32 %v1_83c0, 4
  %v3_83c0 = inttoptr i32 %v2_83c0 to i32*
  store i32 %v0_83c0, i32* %v3_83c0, align 4
  %v0_83c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_83c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_83c4 = add i32 %v1_83c4, 16
  %v3_83c4 = inttoptr i32 %v2_83c4 to i32*
  store i32 %v0_83c4, i32* %v3_83c4, align 4
  %v0_83c8 = load i32, i32* @r4, align 4
  %v1_83c8 = trunc i32 %v0_83c8 to i8
  %v2_83c8 = load i32, i32* %r1.global-to-local, align 4
  %v3_83c8 = inttoptr i32 %v2_83c8 to i8*
  store i8 %v1_83c8, i8* %v3_83c8, align 1
  %v0_83cc = load i32, i32* @lr, align 4
  %v1_83cc = trunc i32 %v0_83cc to i8
  %v2_83cc = load i32, i32* %r1.global-to-local, align 4
  %v3_83cc = add i32 %v2_83cc, 1
  %v4_83cc = inttoptr i32 %v3_83cc to i8*
  store i8 %v1_83cc, i8* %v4_83cc, align 1
  %v0_83d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_83d0 = add i32 %v0_83d0, 24
  store i32 %v1_83d0, i32* %r1.global-to-local, align 4
  %v0_83d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_83d4, label %dec_label_pc_83d8, label %dec_label_pc_83ac.dec_label_pc_83ac_crit_edge

dec_label_pc_83ac.dec_label_pc_83ac_crit_edge:    ; preds = %dec_label_pc_83ac
  %v0_83ac.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_83b8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_83ac

dec_label_pc_83d8:                                ; preds = %dec_label_pc_83ac
  %v0_83d8 = load i32, i32* @sb, align 4
  %v1_83d8 = load i32, i32* @r7, align 4
  %v1_83dc = load i32, i32* @r5, align 4
  %sum = add i32 %v1_83d8, %v0_83d8
  %v2_83dc = sub i32 %v1_83dc, %sum
  %v0_83e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_83e0 = add i32 %v0_83e0, 6
  store i32 %v1_83e0, i32* %fp.global-to-local, align 4
  %v1_83e4 = add i32 %v2_83dc, -6
  store i32 %v1_83e4, i32* @r6, align 4
  br label %dec_label_pc_83e8

dec_label_pc_83e8thread-pre-split:                ; preds = %dec_label_pc_837c
  %v0_83e8.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_83e8

dec_label_pc_83e8:                                ; preds = %dec_label_pc_83e8thread-pre-split, %dec_label_pc_83d8
  %v0_83f4 = phi i32 [ %v1_8390, %dec_label_pc_83e8thread-pre-split ], [ %v1_83e0, %dec_label_pc_83d8 ]
  %v1_83ec = phi i32 [ %v0_83e8.pr, %dec_label_pc_83e8thread-pre-split ], [ %v1_83e4, %dec_label_pc_83d8 ]
  %v2_83e8 = icmp eq i32 %v1_83ec, 0
  store i1 %v2_83e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_83e8, label %dec_label_pc_8520, label %dec_label_pc_83f4

dec_label_pc_83f4:                                ; preds = %dec_label_pc_83e8
  %v1_83f4 = inttoptr i32 %v0_83f4 to i8*
  %v2_83f4 = load i8, i8* %v1_83f4, align 1
  %v3_83f4 = zext i8 %v2_83f4 to i32
  store i32 %v3_83f4, i32* @sb, align 4
  %v2_83f8 = icmp eq i8 %v2_83f4, 0
  store i1 %v2_83f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_83f8, label %dec_label_pc_84d8, label %dec_label_pc_8408

dec_label_pc_8408:                                ; preds = %dec_label_pc_83f4
  store i32 %v3_83f4, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_8410 = call i32 @function_137cc(i32 %v3_83f4, i32 8)
  store i32 %v2_8410, i32* %r0.global-to-local, align 4
  %v0_8414 = load i32, i32* @sb, align 4
  %v2_8414 = icmp eq i32 %v0_8414, 0
  store i1 %v2_8414, i1* %cpsr_z.global-to-local, align 1
  %tmp28 = icmp slt i32 %v0_8414, 1
  br i1 %tmp28, label %dec_label_pc_84d8, label %dec_label_pc_8424

dec_label_pc_8424:                                ; preds = %dec_label_pc_8408
  %v0_8424 = load i32, i32* @r6, align 4
  %v1_8424 = add i32 %v0_8424, -1
  store i32 %v1_8424, i32* %r2.global-to-local, align 4
  %v7_8424 = icmp eq i32 %v0_8424, 1
  store i1 %v7_8424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8424, label %dec_label_pc_8520, label %dec_label_pc_842c

dec_label_pc_842c:                                ; preds = %dec_label_pc_8424
  %v0_842c = load i32, i32* %fp.global-to-local, align 4
  %v1_842c = add i32 %v0_842c, 1
  %v2_842c = inttoptr i32 %v1_842c to i8*
  %v3_842c = load i8, i8* %v2_842c, align 1
  %v1_8430 = add i32 %v0_8424, -2
  store i32 %v1_8430, i32* %r2.global-to-local, align 4
  %v7_8430 = icmp eq i32 %v1_8424, 1
  store i1 %v7_8430, i1* %cpsr_z.global-to-local, align 1
  %v3_8434 = add i32 %v2_8410, 4
  %v4_8434 = inttoptr i32 %v3_8434 to i8*
  store i8 %v3_842c, i8* %v4_8434, align 1
  %v0_8438 = load i32, i32* %fp.global-to-local, align 4
  %v1_8438 = add i32 %v0_8438, 1
  store i32 %v1_8438, i32* %r0.global-to-local, align 4
  %v0_843c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_843c, label %dec_label_pc_8520, label %dec_label_pc_8440

dec_label_pc_8440:                                ; preds = %dec_label_pc_842c
  %v1_8440 = add i32 %v0_8438, 2
  %v2_8440 = inttoptr i32 %v1_8440 to i8*
  %v3_8440 = load i8, i8* %v2_8440, align 1
  %v4_8440 = zext i8 %v3_8440 to i32
  store i32 %v4_8440, i32* @r4, align 4
  %v0_8444 = load i32, i32* %r2.global-to-local, align 4
  %v1_8444 = add i32 %v0_8444, -1
  store i32 %v1_8444, i32* @r8, align 4
  %v9_8448 = icmp eq i32 %v1_8444, %v4_8440
  store i1 %v9_8448, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8440, i32* %r0.global-to-local, align 4
  %v5_8450 = icmp slt i32 %v1_8444, %v4_8440
  br i1 %v5_8450, label %dec_label_pc_8520, label %dec_label_pc_8454

dec_label_pc_8454:                                ; preds = %dec_label_pc_8440
  store i32 %v2_8410, i32* @r5, align 4
  %v1_845c = add i32 %v2_8410, 8
  %v1_8460 = add i32 %v0_8438, 3
  store i32 %v1_8460, i32* @r6, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_84a4

dec_label_pc_8470:                                ; preds = %dec_label_pc_84a4
  %v0_8470 = load i32, i32* @r8, align 4
  %v1_8470 = load i32, i32* @r4, align 4
  %v2_8470 = sub i32 %v0_8470, %v1_8470
  store i32 %v2_8470, i32* %r2.global-to-local, align 4
  %v9_8470 = icmp eq i32 %v0_8470, %v1_8470
  store i1 %v9_8470, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8470, label %dec_label_pc_8520, label %dec_label_pc_8478

dec_label_pc_8478:                                ; preds = %dec_label_pc_8470
  %v1_8478 = load i32, i32* @r6, align 4
  %v2_8478 = add i32 %v1_8478, %v1_8470
  %v3_8478 = inttoptr i32 %v2_8478 to i8*
  %v4_8478 = load i8, i8* %v3_8478, align 1
  store i32 %v2_8478, i32* %r0.global-to-local, align 4
  %v1_8480 = add i32 %v2_8470, -1
  store i32 %v1_8480, i32* %r2.global-to-local, align 4
  %v7_8480 = icmp eq i32 %v2_8470, 1
  store i1 %v7_8480, i1* %cpsr_z.global-to-local, align 1
  %v3_8484 = add i32 %v2_8484, 4
  %v4_8484 = inttoptr i32 %v3_8484 to i8*
  store i8 %v4_8478, i8* %v4_8484, align 1
  %v0_8488 = load i32, i32* %r0.global-to-local, align 4
  %v0_848c = load i32, i32* %r2.global-to-local, align 4
  %v1_848c = add i32 %v0_848c, -1
  store i32 %v1_848c, i32* @r8, align 4
  %v1_8490 = add i32 %v0_8488, 2
  store i32 %v1_8490, i32* @r6, align 4
  %v0_8494 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8494, label %dec_label_pc_8520, label %dec_label_pc_8498

dec_label_pc_8498:                                ; preds = %dec_label_pc_8478
  %v1_8488 = add i32 %v0_8488, 1
  %v2_8498 = inttoptr i32 %v1_8488 to i8*
  %v3_8498 = load i8, i8* %v2_8498, align 1
  %v4_8498 = zext i8 %v3_8498 to i32
  store i32 %v4_8498, i32* @r4, align 4
  %v2_849c = sub i32 %v1_848c, %v4_8498
  %tmp30 = sub i32 0, %v2_849c
  %v6_849c = and i32 %v1_848c, %tmp30
  %v7_849c = icmp slt i32 %v6_849c, 0
  %v8_849c = icmp slt i32 %v2_849c, 0
  %v9_849c = icmp eq i32 %v1_848c, %v4_8498
  store i1 %v9_849c, i1* %cpsr_z.global-to-local, align 1
  %v2_84a0 = xor i1 %v8_849c, %v7_849c
  br i1 %v2_84a0, label %dec_label_pc_8520, label %dec_label_pc_84a4

dec_label_pc_84a4:                                ; preds = %dec_label_pc_8498, %dec_label_pc_8454
  %v0_84a8 = phi i32 [ %v4_8440, %dec_label_pc_8454 ], [ %v4_8498, %dec_label_pc_8498 ]
  %v2_8484 = phi i32 [ %v1_845c, %dec_label_pc_8454 ], [ %v1_84c8, %dec_label_pc_8498 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_84a8 = add nuw nsw i32 %v0_84a8, 1
  store i32 %v1_84a8, i32* %r0.global-to-local, align 4
  %v2_84ac = call i32 @function_137cc(i32 %v1_84a8, i32 1)
  store i32 %v2_84ac, i32* %r0.global-to-local, align 4
  %v0_84b0 = load i32, i32* @r6, align 4
  store i32 %v0_84b0, i32* %r1.global-to-local, align 4
  %v1_84b4 = load i32, i32* @r5, align 4
  %v2_84b4 = inttoptr i32 %v1_84b4 to i32*
  store i32 %v2_84ac, i32* %v2_84b4, align 4
  %v0_84b8 = load i32, i32* @r4, align 4
  store i32 %v0_84b8, i32* %r2.global-to-local, align 4
  %v3_84bc = call i32 @function_12368(i32 %v2_84ac, i32 %v0_84b0, i32 %v0_84b8)
  store i32 %v3_84bc, i32* %r0.global-to-local, align 4
  store i32 %v2_8484, i32* @r5, align 4
  %v0_84c4 = load i32, i32* %fp.global-to-local, align 4
  %v1_84c4 = add i32 %v0_84c4, 1
  store i32 %v1_84c4, i32* %fp.global-to-local, align 4
  %v1_84c8 = add i32 %v2_8484, 8
  store i32 %v1_84c8, i32* %ip.global-to-local, align 4
  %v1_84cc = load i32, i32* @sb, align 4
  %v9_84cc = icmp eq i32 %v1_84c4, %v1_84cc
  store i1 %v9_84cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_84cc, label %dec_label_pc_84d8, label %dec_label_pc_8470

dec_label_pc_84d8:                                ; preds = %dec_label_pc_84a4, %dec_label_pc_8408, %dec_label_pc_83f4
  %stack_var_-48.1 = phi i32 [ %v3_83f4, %dec_label_pc_83f4 ], [ %v0_8414, %dec_label_pc_8408 ], [ %v0_8414, %dec_label_pc_84a4 ]
  %stack_var_-52.2 = phi i32 [ %v3_83f4, %dec_label_pc_83f4 ], [ %v2_8410, %dec_label_pc_8408 ], [ %v2_8410, %dec_label_pc_84a4 ]
  %v0_84d8 = call i32 @function_131c4()
  %v0_84dc = load i32, i32* @sl, align 4
  store i32 %stack_var_-48.1, i32* %ip.global-to-local, align 4
  %v3_84e8 = mul i32 %v0_84dc, 16777216
  %v1_84dc = mul i32 %v0_84dc, 256
  %v4_84ec = and i32 %v1_84dc, 16711680
  %v5_84ec = or i32 %v4_84ec, %v3_84e8
  store i32 %v5_84ec, i32* %r1.global-to-local, align 4
  %v1_84e4 = udiv i32 %v0_84dc, 256
  %v3_84f0 = and i32 %v1_84e4, 65280
  store i32 %v3_84f0, i32* %r2.global-to-local, align 4
  %v2_84f8 = inttoptr i32 %v0_84d8 to i32*
  store i32 0, i32* %v2_84f8, align 4
  %v0_84fc = load i32, i32* %r2.global-to-local, align 4
  %v1_84fc = load i32, i32* @sl, align 4
  %v4_84fc = udiv i32 %v1_84fc, 16777216
  %v5_84fc = or i32 %v4_84fc, %v0_84fc
  %v0_8500 = load i32, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-52.2, i32* @ip, align 4
  %v1_8508 = load i32, i32* %r1.global-to-local, align 4
  %v2_8508 = or i32 %v5_84fc, %v1_8508
  store i32 %v2_8508, i32* %r0.global-to-local, align 4
  store i32 %v4_8350, i32* %r1.global-to-local, align 4
  %v0_8514 = load i32, i32* @r7, align 4
  store i32 %v0_8514, i32* %r2.global-to-local, align 4
  %v6_851c = trunc i32 %v0_8500 to i8
  %v7_851c = call i32 @function_8230(i32 %v2_8508, i32 %v4_8350, i32 %v0_8514, i32 %v2_8384, i8 %v6_851c, i32 %stack_var_-52.2)
  store i32 %v7_851c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8520

dec_label_pc_8520:                                ; preds = %dec_label_pc_8498, %dec_label_pc_8478, %dec_label_pc_8470, %dec_label_pc_8440, %dec_label_pc_842c, %dec_label_pc_8424, %dec_label_pc_83e8, %dec_label_pc_84d8
  %stack_var_-52.3 = phi i32 [ 0, %dec_label_pc_83e8 ], [ %stack_var_-52.2, %dec_label_pc_84d8 ], [ %v2_8410, %dec_label_pc_8424 ], [ %v2_8410, %dec_label_pc_842c ], [ %v2_8410, %dec_label_pc_8440 ], [ %v2_8410, %dec_label_pc_8470 ], [ %v2_8410, %dec_label_pc_8478 ], [ %v2_8410, %dec_label_pc_8498 ]
  store i32 %v2_8384, i32* %r1.global-to-local, align 4
  %v2_8524 = icmp eq i32 %v2_8384, 0
  store i1 %v2_8524, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8524, label %bb31, label %bb

bb:                                               ; preds = %dec_label_pc_8520
  store i32 %v2_8384, i32* %r0.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_8520, %bb
  %v1_852c = xor i1 %v2_8524, true
  call void @__pseudo_cond_branch(i1 %v1_852c, i32 ptrtoint (i32* @global_var_13824.25 to i32))
  %v2_8534 = icmp eq i32 %stack_var_-52.3, 0
  store i1 %v2_8534, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8534, label %.dec_label_pc_8344_crit_edge, label %dec_label_pc_853c

.dec_label_pc_8344_crit_edge:                     ; preds = %bb31
  %v29_8348.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8344

dec_label_pc_853c:                                ; preds = %bb31
  %v0_853c = load i32, i32* @sb, align 4
  %v2_853c = icmp eq i32 %v0_853c, 0
  store i1 %v2_853c, i1* %cpsr_z.global-to-local, align 1
  %tmp32 = icmp slt i32 %v0_853c, 1
  br i1 %tmp32, label %dec_label_pc_8564, label %dec_label_pc_8544

dec_label_pc_8544:                                ; preds = %dec_label_pc_853c
  br label %dec_label_pc_8548

dec_label_pc_8548:                                ; preds = %dec_label_pc_8548, %dec_label_pc_8544
  %v0_8554 = phi i32 [ %v1_8554, %dec_label_pc_8548 ], [ 0, %dec_label_pc_8544 ]
  store i32 %stack_var_-52.3, i32* %ip.global-to-local, align 4
  %v4_854c = mul i32 %v0_8554, 8
  %v5_854c = add i32 %v4_854c, %stack_var_-52.3
  %v6_854c = inttoptr i32 %v5_854c to i32*
  %v7_854c = load i32, i32* %v6_854c, align 4
  store i32 %v7_854c, i32* %r0.global-to-local, align 4
  %v2_8550 = icmp eq i32 %v7_854c, 0
  store i1 %v2_8550, i1* %cpsr_z.global-to-local, align 1
  %v1_8554 = add i32 %v0_8554, 1
  %v1_8558 = xor i1 %v2_8550, true
  call void @__pseudo_cond_branch(i1 %v1_8558, i32 ptrtoint (i32* @global_var_13824.25 to i32))
  %v0_855c = load i32, i32* @sb, align 4
  %v9_855c = icmp eq i32 %v0_855c, %v1_8554
  store i1 %v9_855c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_855c, label %dec_label_pc_8564, label %dec_label_pc_8548

dec_label_pc_8564:                                ; preds = %dec_label_pc_8548, %dec_label_pc_853c
  store i32 %stack_var_-52.3, i32* @r0, align 4
  store i32 %v3_8320, i32* @r4, align 4
  store i32 %v6_8320, i32* @r5, align 4
  store i32 %v9_8320, i32* @r6, align 4
  store i32 %v12_8320, i32* @r7, align 4
  store i32 %v15_8320, i32* @r8, align 4
  store i32 %v18_8320, i32* @sb, align 4
  store i32 %v21_8320, i32* @sl, align 4
  store i32 %v27_8320, i32* @lr, align 4
  %v0_8570 = call i32 @function_13824()
  store i32 %v0_8570, i32* %r0.global-to-local, align 4
  ret i32 %v0_8570

; uselistorder directives
  uselistorder i32 %stack_var_-52.3, { 2, 0, 1, 3 }
  uselistorder i32 %v0_84dc, { 2, 0, 1 }
  uselistorder i32 %stack_var_-52.2, { 1, 0, 2 }
  uselistorder i32 %v1_84c8, { 1, 0 }
  uselistorder i32 %v2_8484, { 2, 1, 0 }
  uselistorder i32 %v2_849c, { 1, 0 }
  uselistorder i32 %v4_8498, { 0, 2, 1, 3 }
  uselistorder i32 %v1_848c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8488, { 1, 0 }
  uselistorder i32 %v0_8424, { 0, 2, 1 }
  uselistorder i32 %v0_8414, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8410, { 0, 1, 2, 8, 7, 6, 3, 5, 9, 10, 4, 11 }
  uselistorder i32 %v3_83f4, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_83d0, { 1, 0 }
  uselistorder i32 %v0_83b4, { 0, 2, 1 }
  uselistorder i32 %v0_8390, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8384, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder i32 %v2_8370, { 2, 1, 0 }
  uselistorder i32 %v4_835c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v4_8350, { 1, 0, 2 }
  uselistorder i32 %v0_8330, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r0.global-to-local, { 20, 2, 21, 3, 22, 4, 7, 11, 8, 5, 6, 9, 10, 17, 12, 14, 13, 15, 16, 19, 18, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 4, 5, 3, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 %arg2, { 1, 2, 4, 0, 5, 3, 6 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_8520, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8344, { 1, 0, 3, 4, 2, 5 }
}

define i32 @function_8574(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8574:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_8574 = urem i32 %arg1, 256
  %v2_8578 = icmp eq i32 %v1_8574, 0
  %v3_857c = load i32, i32* @r4, align 4
  br i1 %v2_8578, label %dec_label_pc_85c4, label %dec_label_pc_8588

dec_label_pc_8588:                                ; preds = %dec_label_pc_8574
  %v0_8588 = load i32, i32* %r1.global-to-local, align 4
  %v1_8588 = add i32 %v0_8588, 4
  %v2_8588 = inttoptr i32 %v1_8588 to i8*
  %v3_8588 = load i8, i8* %v2_8588, align 1
  %v4_8588 = zext i8 %v3_8588 to i32
  %v1_858c = urem i32 %arg3, 256
  %v9_8590 = icmp eq i32 %v4_8588, %v1_858c
  br i1 %v9_8590, label %dec_label_pc_85cc, label %dec_label_pc_85b4.preheader

dec_label_pc_85b4.preheader:                      ; preds = %dec_label_pc_8588
  br label %dec_label_pc_85b4

dec_label_pc_85a4:                                ; preds = %dec_label_pc_85b4
  %v1_85a4 = add i32 %v0_85ac.in, 12
  %v2_85a4 = inttoptr i32 %v1_85a4 to i8*
  %v3_85a4 = load i8, i8* %v2_85a4, align 1
  %v4_85a4 = zext i8 %v3_85a4 to i32
  %v9_85a8 = icmp eq i32 %v1_858c, %v4_85a4
  br i1 %v9_85a8, label %dec_label_pc_85cc, label %dec_label_pc_85b4

dec_label_pc_85b4:                                ; preds = %dec_label_pc_85b4.preheader, %dec_label_pc_85a4
  %v0_85ac.in = phi i32 [ %v0_8588, %dec_label_pc_85b4.preheader ], [ %v0_85ac, %dec_label_pc_85a4 ]
  %v0_85b4 = phi i32 [ 0, %dec_label_pc_85b4.preheader ], [ %v1_85b4, %dec_label_pc_85a4 ]
  %v0_85ac = add i32 %v0_85ac.in, 8
  %v1_85b4 = add i32 %v0_85b4, 1
  %v9_85b8 = icmp eq i32 %v1_8574, %v1_85b4
  store i32 %v0_85ac, i32* %r1.global-to-local, align 4
  br i1 %v9_85b8, label %dec_label_pc_85c4, label %dec_label_pc_85a4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85b4, %dec_label_pc_85cc, %dec_label_pc_8574
  store i32 %v3_857c, i32* @r4, align 4
  ret i32 %arg4

dec_label_pc_85cc:                                ; preds = %dec_label_pc_85a4, %dec_label_pc_8588
  %v0_85cc = phi i32 [ %v0_8588, %dec_label_pc_8588 ], [ %v0_85ac, %dec_label_pc_85a4 ]
  %v1_85cc = inttoptr i32 %v0_85cc to i32*
  %v2_85cc = load i32, i32* %v1_85cc, align 4
  store i32 %v2_85cc, i32* @r0, align 4
  %v2_85d0 = icmp eq i32 %v2_85cc, 0
  br i1 %v2_85d0, label %dec_label_pc_85c4, label %dec_label_pc_85d8

dec_label_pc_85d8:                                ; preds = %dec_label_pc_85cc
  store i32 %v3_857c, i32* @r4, align 4
  %v1_85dc = call i32 @function_132ec(i32 %v2_85cc)
  ret i32 %v1_85dc

; uselistorder directives
  uselistorder i32 %v1_85b4, { 1, 0 }
  uselistorder i32 %v0_85ac, { 1, 0, 2 }
  uselistorder i32 %v0_85ac.in, { 1, 0 }
  uselistorder i32 %v1_858c, { 1, 0 }
  uselistorder i32 %v0_8588, { 1, 0, 2 }
  uselistorder i32 %v3_857c, { 1, 0 }
  uselistorder i32 %v1_8574, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_85c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_85b4, { 1, 0 }
}

define i32 @function_85e0(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_85e0:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_85e0 = urem i32 %arg1, 256
  %v2_85e4 = icmp eq i32 %v1_85e0, 0
  %v3_85e8 = load i32, i32* @r4, align 4
  %v6_85e8 = load i32, i32* @lr, align 4
  br i1 %v2_85e4, label %dec_label_pc_8630, label %dec_label_pc_85f4

dec_label_pc_85f4:                                ; preds = %dec_label_pc_85e0
  %v0_85f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_85f4 = add i32 %v0_85f4, 4
  %v2_85f4 = inttoptr i32 %v1_85f4 to i8*
  %v3_85f4 = load i8, i8* %v2_85f4, align 1
  %v4_85f4 = zext i8 %v3_85f4 to i32
  %v1_85f8 = urem i32 %arg3, 256
  %v9_85fc = icmp eq i32 %v4_85f4, %v1_85f8
  br i1 %v9_85fc, label %dec_label_pc_8638, label %dec_label_pc_8620.preheader

dec_label_pc_8620.preheader:                      ; preds = %dec_label_pc_85f4
  br label %dec_label_pc_8620

dec_label_pc_8610:                                ; preds = %dec_label_pc_8620
  %v1_8610 = add i32 %v0_8618.in, 12
  %v2_8610 = inttoptr i32 %v1_8610 to i8*
  %v3_8610 = load i8, i8* %v2_8610, align 1
  %v4_8610 = zext i8 %v3_8610 to i32
  %v9_8614 = icmp eq i32 %v1_85f8, %v4_8610
  br i1 %v9_8614, label %dec_label_pc_8638, label %dec_label_pc_8620

dec_label_pc_8620:                                ; preds = %dec_label_pc_8620.preheader, %dec_label_pc_8610
  %v0_8618.in = phi i32 [ %v0_85f4, %dec_label_pc_8620.preheader ], [ %v0_8618, %dec_label_pc_8610 ]
  %v0_8620 = phi i32 [ 0, %dec_label_pc_8620.preheader ], [ %v1_8620, %dec_label_pc_8610 ]
  %v0_8618 = add i32 %v0_8618.in, 8
  %v1_8620 = add i32 %v0_8620, 1
  store i32 %v1_8620, i32* @lr, align 4
  %v9_8624 = icmp eq i32 %v1_85e0, %v1_8620
  store i32 %v0_8618, i32* %r1.global-to-local, align 4
  br i1 %v9_8624, label %dec_label_pc_8630, label %dec_label_pc_8610

dec_label_pc_8630:                                ; preds = %dec_label_pc_8620, %dec_label_pc_8638, %dec_label_pc_85e0
  store i32 %v3_85e8, i32* @r4, align 4
  ret i32 %arg4

dec_label_pc_8638:                                ; preds = %dec_label_pc_8610, %dec_label_pc_85f4
  %v0_8638 = phi i32 [ %v0_85f4, %dec_label_pc_85f4 ], [ %v0_8618, %dec_label_pc_8610 ]
  %v1_8638 = inttoptr i32 %v0_8638 to i32*
  %v2_8638 = load i32, i32* %v1_8638, align 4
  %v2_863c = icmp eq i32 %v2_8638, 0
  br i1 %v2_863c, label %dec_label_pc_8630, label %dec_label_pc_8644

dec_label_pc_8644:                                ; preds = %dec_label_pc_8638
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v3_85e8, i32* @r4, align 4
  store i32 %v6_85e8, i32* @lr, align 4
  %v2_864c = inttoptr i32 %v2_8638 to i8*
  %v3_864c = call i32 @function_12418(i8* %v2_864c, i32 10)
  ret i32 %v3_864c

; uselistorder directives
  uselistorder i32 %v1_8620, { 1, 2, 0 }
  uselistorder i32 %v0_8618, { 1, 0, 2 }
  uselistorder i32 %v0_8618.in, { 1, 0 }
  uselistorder i32 %v1_85f8, { 1, 0 }
  uselistorder i32 %v0_85f4, { 1, 0, 2 }
  uselistorder i32 %v3_85e8, { 1, 0 }
  uselistorder i32 %v1_85e0, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8630, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8620, { 1, 0 }
}

define i32 @function_8650(i32 %arg1) local_unnamed_addr {
dec_label_pc_8650:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_8650 = load i32, i32* @r4, align 4
  store i32 %v3_8650, i32* %stack_var_-24, align 4
  %v6_8650 = load i32, i32* @r5, align 4
  %v9_8650 = load i32, i32* @r6, align 4
  %v12_8650 = load i32, i32* @r7, align 4
  %v15_8650 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_865c = call i32 @function_137cc(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_1dbc8.21 to i32), i32* @r4, align 4
  %v2_8664 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_8664 = zext i8 %v2_8664 to i32
  store i32 ptrtoint (i32* @global_var_1dbcc.23 to i32), i32* @r6, align 4
  store i32 36768, i32* %r2.global-to-local, align 4
  store i32 %v2_865c, i32* @r5, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_8678 = mul nuw nsw i32 %v3_8664, 4
  store i32 %v3_8678, i32* %r1.global-to-local, align 4
  %v2_867c = load i32, i32* @global_var_1dbcc.23, align 4
  %v2_8680 = inttoptr i32 %v2_865c to i32*
  store i32 36768, i32* %v2_8680, align 4
  %v3_8684 = load i32, i32* @r5, align 4
  %v4_8684 = add i32 %v3_8684, 4
  %v5_8684 = inttoptr i32 %v4_8684 to i8*
  store i8 0, i8* %v5_8684, align 1
  %v0_8688 = load i32, i32* %r1.global-to-local, align 4
  %v1_8688 = add i32 %v0_8688, 4
  store i32 %v1_8688, i32* %r1.global-to-local, align 4
  %v5_868c = call i32 @function_13914(i32 %v2_867c, i32 %v1_8688, i32 36768, i32 0)
  %v2_8690 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_8690 = zext i8 %v2_8690 to i32
  store i32 %v3_8690, i32* %r3.global-to-local, align 4
  store i32 %v5_868c, i32* %ip.global-to-local, align 4
  %v0_8698 = load i32, i32* @r5, align 4
  %v5_8698 = mul nuw nsw i32 %v3_8690, 4
  %v6_8698 = add i32 %v5_8698, %v5_868c
  %v7_8698 = inttoptr i32 %v6_8698 to i32*
  store i32 %v0_8698, i32* %v7_8698, align 4
  store i32 ptrtoint (i8* @global_var_1dbc9.29 to i32), i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v3_86a8 = load i32, i32* @r4, align 4
  %v4_86a8 = inttoptr i32 %v3_86a8 to i8*
  store i8 ptrtoint (i8* @global_var_1dbc9.29 to i8), i8* %v4_86a8, align 1
  %v0_86ac = load i32, i32* %ip.global-to-local, align 4
  %v1_86ac = load i32, i32* @r6, align 4
  %v2_86ac = inttoptr i32 %v1_86ac to i32*
  store i32 %v0_86ac, i32* %v2_86ac, align 4
  %v2_86b0 = call i32 @function_137cc(i32 1, i32 8)
  %v2_86b4 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_86b4 = zext i8 %v2_86b4 to i32
  store i32 ptrtoint (i32* @global_var_a4c4.31 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r8, align 4
  store i32 %v2_86b0, i32* @r5, align 4
  %v3_86c4 = mul nuw nsw i32 %v3_86b4, 4
  store i32 %v3_86c4, i32* %r1.global-to-local, align 4
  %v2_86c8 = load i32, i32* @global_var_1dbcc.23, align 4
  %v2_86cc = inttoptr i32 %v2_86b0 to i32*
  store i32 ptrtoint (i32* @global_var_a4c4.31 to i32), i32* %v2_86cc, align 4
  %v0_86d0 = load i32, i32* @r8, align 4
  %v1_86d0 = trunc i32 %v0_86d0 to i8
  %v2_86d0 = load i32, i32* @r5, align 4
  %v3_86d0 = add i32 %v2_86d0, 4
  %v4_86d0 = inttoptr i32 %v3_86d0 to i8*
  store i8 %v1_86d0, i8* %v4_86d0, align 1
  %v0_86d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_86d4 = add i32 %v0_86d4, 4
  store i32 %v1_86d4, i32* %r1.global-to-local, align 4
  %v5_86d8 = call i32 @function_13914(i32 %v2_86c8, i32 %v1_86d4, i32 sext (i8 ptrtoint (i8* @global_var_1dbc9.29 to i8) to i32), i32 ptrtoint (i32* @global_var_a4c4.31 to i32))
  %v2_86dc = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_86dc = zext i8 %v2_86dc to i32
  store i32 %v3_86dc, i32* %r3.global-to-local, align 4
  store i32 %v5_86d8, i32* %ip.global-to-local, align 4
  %v0_86e4 = load i32, i32* @r5, align 4
  %v5_86e4 = mul nuw nsw i32 %v3_86dc, 4
  %v6_86e4 = add i32 %v5_86e4, %v5_86d8
  %v7_86e4 = inttoptr i32 %v6_86e4 to i32*
  store i32 %v0_86e4, i32* %v7_86e4, align 4
  %v0_86e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_86e8 = load i32, i32* @r8, align 4
  %v2_86e8 = add i32 %v1_86e8, %v0_86e8
  store i32 %v2_86e8, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_86f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_86f4 = load i32, i32* @r6, align 4
  %v2_86f4 = inttoptr i32 %v1_86f4 to i32*
  store i32 %v0_86f4, i32* %v2_86f4, align 4
  %v0_86f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_86f8 = trunc i32 %v0_86f8 to i8
  %v2_86f8 = load i32, i32* @r4, align 4
  %v3_86f8 = inttoptr i32 %v2_86f8 to i8*
  store i8 %v1_86f8, i8* %v3_86f8, align 1
  %v2_86fc = call i32 @function_137cc(i32 %v1_86e8, i32 8)
  %v2_8700 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_8700 = zext i8 %v2_8700 to i32
  store i32 ptrtoint (i32* @global_var_a988.33 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_86fc, i32* @r5, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_8710 = mul nuw nsw i32 %v3_8700, 4
  store i32 %v3_8710, i32* %r1.global-to-local, align 4
  %v2_8714 = load i32, i32* @global_var_1dbcc.23, align 4
  %v2_8718 = inttoptr i32 %v2_86fc to i32*
  store i32 ptrtoint (i32* @global_var_a988.33 to i32), i32* %v2_8718, align 4
  %v3_871c = load i32, i32* @r5, align 4
  %v4_871c = add i32 %v3_871c, 4
  %v5_871c = inttoptr i32 %v4_871c to i8*
  store i8 2, i8* %v5_871c, align 1
  %v0_8720 = load i32, i32* %r1.global-to-local, align 4
  %v1_8720 = add i32 %v0_8720, 4
  store i32 %v1_8720, i32* %r1.global-to-local, align 4
  %v5_8724 = call i32 @function_13914(i32 %v2_8714, i32 %v1_8720, i32 ptrtoint (i32* @global_var_a988.33 to i32), i32 2)
  %v2_8728 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_8728 = zext i8 %v2_8728 to i32
  store i32 %v3_8728, i32* %r3.global-to-local, align 4
  store i32 %v5_8724, i32* %ip.global-to-local, align 4
  %v1_8730 = load i32, i32* @r8, align 4
  %v2_8730 = add i32 %v1_8730, %v3_8728
  %v3_8730 = trunc i32 %v2_8730 to i8
  store i32 %v2_8730, i32* %r2.global-to-local, align 4
  %v0_8734 = load i32, i32* @r5, align 4
  %v5_8734 = mul nuw nsw i32 %v3_8728, 4
  %v6_8734 = add i32 %v5_8734, %v5_8724
  %v7_8734 = inttoptr i32 %v6_8734 to i32*
  store i32 %v0_8734, i32* %v7_8734, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_873c = load i32, i32* @r8, align 4
  %v3_8740 = load i32, i32* @r4, align 4
  %v4_8740 = inttoptr i32 %v3_8740 to i8*
  store i8 %v3_8730, i8* %v4_8740, align 1
  %v0_8744 = load i32, i32* %ip.global-to-local, align 4
  %v1_8744 = load i32, i32* @r6, align 4
  %v2_8744 = inttoptr i32 %v1_8744 to i32*
  store i32 %v0_8744, i32* %v2_8744, align 4
  %v2_8748 = call i32 @function_137cc(i32 %v0_873c, i32 8)
  %v2_874c = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_874c = zext i8 %v2_874c to i32
  store i32 ptrtoint (i32* @global_var_89d8.35 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r7, align 4
  store i32 %v2_8748, i32* @r5, align 4
  %v3_875c = mul nuw nsw i32 %v3_874c, 4
  store i32 %v3_875c, i32* %r1.global-to-local, align 4
  %v2_8760 = load i32, i32* @global_var_1dbcc.23, align 4
  %v2_8764 = inttoptr i32 %v2_8748 to i32*
  store i32 ptrtoint (i32* @global_var_89d8.35 to i32), i32* %v2_8764, align 4
  %v0_8768 = load i32, i32* @r7, align 4
  %v1_8768 = trunc i32 %v0_8768 to i8
  %v2_8768 = load i32, i32* @r5, align 4
  %v3_8768 = add i32 %v2_8768, 4
  %v4_8768 = inttoptr i32 %v3_8768 to i8*
  store i8 %v1_8768, i8* %v4_8768, align 1
  %v0_876c = load i32, i32* %r1.global-to-local, align 4
  %v1_876c = add i32 %v0_876c, 4
  store i32 %v1_876c, i32* %r1.global-to-local, align 4
  %v5_8770 = call i32 @function_13914(i32 %v2_8760, i32 %v1_876c, i32 %v2_8730, i32 ptrtoint (i32* @global_var_89d8.35 to i32))
  %v2_8774 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_8774 = zext i8 %v2_8774 to i32
  store i32 %v3_8774, i32* %r3.global-to-local, align 4
  store i32 %v5_8770, i32* %ip.global-to-local, align 4
  %v0_877c = load i32, i32* @r5, align 4
  %v5_877c = mul nuw nsw i32 %v3_8774, 4
  %v6_877c = add i32 %v5_877c, %v5_8770
  %v7_877c = inttoptr i32 %v6_877c to i32*
  store i32 %v0_877c, i32* %v7_877c, align 4
  %v0_8780 = load i32, i32* %r3.global-to-local, align 4
  %v1_8780 = load i32, i32* @r8, align 4
  %v2_8780 = add i32 %v1_8780, %v0_8780
  store i32 %v2_8780, i32* %r2.global-to-local, align 4
  %v0_8784 = load i32, i32* @r7, align 4
  store i32 %v0_8784, i32* %r1.global-to-local, align 4
  %v0_878c = load i32, i32* %ip.global-to-local, align 4
  %v1_878c = load i32, i32* @r6, align 4
  %v2_878c = inttoptr i32 %v1_878c to i32*
  store i32 %v0_878c, i32* %v2_878c, align 4
  %v0_8790 = load i32, i32* %r2.global-to-local, align 4
  %v1_8790 = trunc i32 %v0_8790 to i8
  %v2_8790 = load i32, i32* @r4, align 4
  %v3_8790 = inttoptr i32 %v2_8790 to i8*
  store i8 %v1_8790, i8* %v3_8790, align 1
  %v2_8794 = call i32 @function_137cc(i32 %v1_8780, i32 %v0_8784)
  %v2_8798 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_8798 = zext i8 %v2_8798 to i32
  store i32 ptrtoint (i32* @global_var_c96c.37 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8794, i32* @r5, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v3_87a8 = mul nuw nsw i32 %v3_8798, 4
  store i32 %v3_87a8, i32* %r1.global-to-local, align 4
  %v2_87ac = load i32, i32* @global_var_1dbcc.23, align 4
  %v2_87b0 = inttoptr i32 %v2_8794 to i32*
  store i32 ptrtoint (i32* @global_var_c96c.37 to i32), i32* %v2_87b0, align 4
  %v3_87b4 = load i32, i32* @r5, align 4
  %v4_87b4 = add i32 %v3_87b4, 4
  %v5_87b4 = inttoptr i32 %v4_87b4 to i8*
  store i8 3, i8* %v5_87b4, align 1
  %v0_87b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_87b8 = add i32 %v0_87b8, 4
  store i32 %v1_87b8, i32* %r1.global-to-local, align 4
  %v5_87bc = call i32 @function_13914(i32 %v2_87ac, i32 %v1_87b8, i32 ptrtoint (i32* @global_var_c96c.37 to i32), i32 3)
  %v2_87c0 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_87c0 = zext i8 %v2_87c0 to i32
  store i32 %v3_87c0, i32* %r3.global-to-local, align 4
  store i32 %v5_87bc, i32* %ip.global-to-local, align 4
  %v0_87c8 = load i32, i32* @r5, align 4
  %v5_87c8 = mul nuw nsw i32 %v3_87c0, 4
  %v6_87c8 = add i32 %v5_87c8, %v5_87bc
  %v7_87c8 = inttoptr i32 %v6_87c8 to i32*
  store i32 %v0_87c8, i32* %v7_87c8, align 4
  %v0_87cc = load i32, i32* %r3.global-to-local, align 4
  %v1_87cc = load i32, i32* @r8, align 4
  %v2_87cc = add i32 %v1_87cc, %v0_87cc
  store i32 %v2_87cc, i32* %r2.global-to-local, align 4
  %v0_87d0 = load i32, i32* @r7, align 4
  store i32 %v0_87d0, i32* %r1.global-to-local, align 4
  %v0_87d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_87d8 = load i32, i32* @r6, align 4
  %v2_87d8 = inttoptr i32 %v1_87d8 to i32*
  store i32 %v0_87d8, i32* %v2_87d8, align 4
  %v0_87dc = load i32, i32* %r2.global-to-local, align 4
  %v1_87dc = trunc i32 %v0_87dc to i8
  %v2_87dc = load i32, i32* @r4, align 4
  %v3_87dc = inttoptr i32 %v2_87dc to i8*
  store i8 %v1_87dc, i8* %v3_87dc, align 1
  %v2_87e0 = call i32 @function_137cc(i32 %v1_87cc, i32 %v0_87d0)
  %v2_87e4 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_87e4 = zext i8 %v2_87e4 to i32
  store i32 ptrtoint (i32* @global_var_c1f8.39 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87e0, i32* @r5, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v3_87f4 = mul nuw nsw i32 %v3_87e4, 4
  store i32 %v3_87f4, i32* %r1.global-to-local, align 4
  %v2_87f8 = load i32, i32* @global_var_1dbcc.23, align 4
  %v2_87fc = inttoptr i32 %v2_87e0 to i32*
  store i32 ptrtoint (i32* @global_var_c1f8.39 to i32), i32* %v2_87fc, align 4
  %v3_8800 = load i32, i32* @r5, align 4
  %v4_8800 = add i32 %v3_8800, 4
  %v5_8800 = inttoptr i32 %v4_8800 to i8*
  store i8 4, i8* %v5_8800, align 1
  %v0_8804 = load i32, i32* %r1.global-to-local, align 4
  %v1_8804 = add i32 %v0_8804, 4
  store i32 %v1_8804, i32* %r1.global-to-local, align 4
  %v5_8808 = call i32 @function_13914(i32 %v2_87f8, i32 %v1_8804, i32 ptrtoint (i32* @global_var_c1f8.39 to i32), i32 4)
  %v2_880c = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_880c = zext i8 %v2_880c to i32
  store i32 %v3_880c, i32* %r3.global-to-local, align 4
  store i32 %v5_8808, i32* %ip.global-to-local, align 4
  %v0_8814 = load i32, i32* @r5, align 4
  %v5_8814 = mul nuw nsw i32 %v3_880c, 4
  %v6_8814 = add i32 %v5_8814, %v5_8808
  %v7_8814 = inttoptr i32 %v6_8814 to i32*
  store i32 %v0_8814, i32* %v7_8814, align 4
  %v0_8818 = load i32, i32* %r3.global-to-local, align 4
  %v1_8818 = load i32, i32* @r8, align 4
  %v2_8818 = add i32 %v1_8818, %v0_8818
  store i32 %v2_8818, i32* %r2.global-to-local, align 4
  %v0_881c = load i32, i32* @r7, align 4
  store i32 %v0_881c, i32* %r1.global-to-local, align 4
  %v0_8824 = load i32, i32* %ip.global-to-local, align 4
  %v1_8824 = load i32, i32* @r6, align 4
  %v2_8824 = inttoptr i32 %v1_8824 to i32*
  store i32 %v0_8824, i32* %v2_8824, align 4
  %v0_8828 = load i32, i32* %r2.global-to-local, align 4
  %v1_8828 = trunc i32 %v0_8828 to i8
  %v2_8828 = load i32, i32* @r4, align 4
  %v3_8828 = inttoptr i32 %v2_8828 to i8*
  store i8 %v1_8828, i8* %v3_8828, align 1
  %v2_882c = call i32 @function_137cc(i32 %v1_8818, i32 %v0_881c)
  %v2_8830 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_8830 = zext i8 %v2_8830 to i32
  store i32 ptrtoint (i32* @global_var_b998.41 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_882c, i32* @r5, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v3_8840 = mul nuw nsw i32 %v3_8830, 4
  store i32 %v3_8840, i32* %r1.global-to-local, align 4
  %v2_8844 = load i32, i32* @global_var_1dbcc.23, align 4
  %v2_8848 = inttoptr i32 %v2_882c to i32*
  store i32 ptrtoint (i32* @global_var_b998.41 to i32), i32* %v2_8848, align 4
  %v3_884c = load i32, i32* @r5, align 4
  %v4_884c = add i32 %v3_884c, 4
  %v5_884c = inttoptr i32 %v4_884c to i8*
  store i8 5, i8* %v5_884c, align 1
  %v0_8850 = load i32, i32* %r1.global-to-local, align 4
  %v1_8850 = add i32 %v0_8850, 4
  store i32 %v1_8850, i32* %r1.global-to-local, align 4
  %v5_8854 = call i32 @function_13914(i32 %v2_8844, i32 %v1_8850, i32 ptrtoint (i32* @global_var_b998.41 to i32), i32 5)
  %v2_8858 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_8858 = zext i8 %v2_8858 to i32
  store i32 %v3_8858, i32* %r3.global-to-local, align 4
  store i32 %v5_8854, i32* %ip.global-to-local, align 4
  %v0_8860 = load i32, i32* @r5, align 4
  %v5_8860 = mul nuw nsw i32 %v3_8858, 4
  %v6_8860 = add i32 %v5_8860, %v5_8854
  %v7_8860 = inttoptr i32 %v6_8860 to i32*
  store i32 %v0_8860, i32* %v7_8860, align 4
  %v0_8864 = load i32, i32* %r3.global-to-local, align 4
  %v1_8864 = load i32, i32* @r8, align 4
  %v2_8864 = add i32 %v1_8864, %v0_8864
  store i32 %v2_8864, i32* %r2.global-to-local, align 4
  %v0_8868 = load i32, i32* @r7, align 4
  store i32 %v0_8868, i32* %r1.global-to-local, align 4
  %v0_8870 = load i32, i32* %ip.global-to-local, align 4
  %v1_8870 = load i32, i32* @r6, align 4
  %v2_8870 = inttoptr i32 %v1_8870 to i32*
  store i32 %v0_8870, i32* %v2_8870, align 4
  %v0_8874 = load i32, i32* %r2.global-to-local, align 4
  %v1_8874 = trunc i32 %v0_8874 to i8
  %v2_8874 = load i32, i32* @r4, align 4
  %v3_8874 = inttoptr i32 %v2_8874 to i8*
  store i8 %v1_8874, i8* %v3_8874, align 1
  %v2_8878 = call i32 @function_137cc(i32 %v1_8864, i32 %v0_8868)
  %v2_887c = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_887c = zext i8 %v2_887c to i32
  store i32 45368, i32* %r2.global-to-local, align 4
  store i32 %v2_8878, i32* @r5, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v3_888c = mul nuw nsw i32 %v3_887c, 4
  store i32 %v3_888c, i32* %r1.global-to-local, align 4
  %v2_8890 = load i32, i32* @global_var_1dbcc.23, align 4
  %v2_8894 = inttoptr i32 %v2_8878 to i32*
  store i32 45368, i32* %v2_8894, align 4
  %v3_8898 = load i32, i32* @r5, align 4
  %v4_8898 = add i32 %v3_8898, 4
  %v5_8898 = inttoptr i32 %v4_8898 to i8*
  store i8 10, i8* %v5_8898, align 1
  %v0_889c = load i32, i32* %r1.global-to-local, align 4
  %v1_889c = add i32 %v0_889c, 4
  store i32 %v1_889c, i32* %r1.global-to-local, align 4
  %v5_88a0 = call i32 @function_13914(i32 %v2_8890, i32 %v1_889c, i32 45368, i32 10)
  %v2_88a4 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_88a4 = zext i8 %v2_88a4 to i32
  store i32 %v3_88a4, i32* %r3.global-to-local, align 4
  store i32 %v5_88a0, i32* %ip.global-to-local, align 4
  %v0_88ac = load i32, i32* @r5, align 4
  %v5_88ac = mul nuw nsw i32 %v3_88a4, 4
  %v6_88ac = add i32 %v5_88ac, %v5_88a0
  %v7_88ac = inttoptr i32 %v6_88ac to i32*
  store i32 %v0_88ac, i32* %v7_88ac, align 4
  %v0_88b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_88b0 = load i32, i32* @r8, align 4
  %v2_88b0 = add i32 %v1_88b0, %v0_88b0
  store i32 %v2_88b0, i32* %r2.global-to-local, align 4
  %v0_88b4 = load i32, i32* @r7, align 4
  store i32 %v0_88b4, i32* %r1.global-to-local, align 4
  %v0_88bc = load i32, i32* %ip.global-to-local, align 4
  %v1_88bc = load i32, i32* @r6, align 4
  %v2_88bc = inttoptr i32 %v1_88bc to i32*
  store i32 %v0_88bc, i32* %v2_88bc, align 4
  %v0_88c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_88c0 = trunc i32 %v0_88c0 to i8
  %v2_88c0 = load i32, i32* @r4, align 4
  %v3_88c0 = inttoptr i32 %v2_88c0 to i8*
  store i8 %v1_88c0, i8* %v3_88c0, align 1
  %v2_88c4 = call i32 @function_137cc(i32 %v1_88b0, i32 %v0_88b4)
  %v2_88c8 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_88c8 = zext i8 %v2_88c8 to i32
  store i32 ptrtoint (i32* @global_var_9da8.44 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_88c4, i32* @r5, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v3_88d8 = mul nuw nsw i32 %v3_88c8, 4
  store i32 %v3_88d8, i32* %r1.global-to-local, align 4
  %v2_88dc = load i32, i32* @global_var_1dbcc.23, align 4
  %v2_88e0 = inttoptr i32 %v2_88c4 to i32*
  store i32 ptrtoint (i32* @global_var_9da8.44 to i32), i32* %v2_88e0, align 4
  %v3_88e4 = load i32, i32* @r5, align 4
  %v4_88e4 = add i32 %v3_88e4, 4
  %v5_88e4 = inttoptr i32 %v4_88e4 to i8*
  store i8 6, i8* %v5_88e4, align 1
  %v0_88e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_88e8 = add i32 %v0_88e8, 4
  store i32 %v1_88e8, i32* %r1.global-to-local, align 4
  %v5_88ec = call i32 @function_13914(i32 %v2_88dc, i32 %v1_88e8, i32 ptrtoint (i32* @global_var_9da8.44 to i32), i32 6)
  %v2_88f0 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_88f0 = zext i8 %v2_88f0 to i32
  store i32 %v3_88f0, i32* %r3.global-to-local, align 4
  store i32 %v5_88ec, i32* %ip.global-to-local, align 4
  %v0_88f8 = load i32, i32* @r5, align 4
  %v5_88f8 = mul nuw nsw i32 %v3_88f0, 4
  %v6_88f8 = add i32 %v5_88f8, %v5_88ec
  %v7_88f8 = inttoptr i32 %v6_88f8 to i32*
  store i32 %v0_88f8, i32* %v7_88f8, align 4
  %v0_88fc = load i32, i32* %r3.global-to-local, align 4
  %v1_88fc = load i32, i32* @r8, align 4
  %v2_88fc = add i32 %v1_88fc, %v0_88fc
  store i32 %v2_88fc, i32* %r2.global-to-local, align 4
  %v0_8900 = load i32, i32* @r7, align 4
  store i32 %v0_8900, i32* %r1.global-to-local, align 4
  %v0_8908 = load i32, i32* %ip.global-to-local, align 4
  %v1_8908 = load i32, i32* @r6, align 4
  %v2_8908 = inttoptr i32 %v1_8908 to i32*
  store i32 %v0_8908, i32* %v2_8908, align 4
  %v0_890c = load i32, i32* %r2.global-to-local, align 4
  %v1_890c = trunc i32 %v0_890c to i8
  %v2_890c = load i32, i32* @r4, align 4
  %v3_890c = inttoptr i32 %v2_890c to i8*
  store i8 %v1_890c, i8* %v3_890c, align 1
  %v2_8910 = call i32 @function_137cc(i32 %v1_88fc, i32 %v0_8900)
  %v2_8914 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_8914 = zext i8 %v2_8914 to i32
  store i32 ptrtoint (i32* @global_var_962c.46 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8910, i32* @r5, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v3_8924 = mul nuw nsw i32 %v3_8914, 4
  store i32 %v3_8924, i32* %r1.global-to-local, align 4
  %v2_8928 = load i32, i32* @global_var_1dbcc.23, align 4
  %v2_892c = inttoptr i32 %v2_8910 to i32*
  store i32 ptrtoint (i32* @global_var_962c.46 to i32), i32* %v2_892c, align 4
  %v3_8930 = load i32, i32* @r5, align 4
  %v4_8930 = add i32 %v3_8930, 4
  %v5_8930 = inttoptr i32 %v4_8930 to i8*
  store i8 7, i8* %v5_8930, align 1
  %v0_8934 = load i32, i32* %r1.global-to-local, align 4
  %v1_8934 = add i32 %v0_8934, 4
  store i32 %v1_8934, i32* %r1.global-to-local, align 4
  %v5_8938 = call i32 @function_13914(i32 %v2_8928, i32 %v1_8934, i32 ptrtoint (i32* @global_var_962c.46 to i32), i32 7)
  %v2_893c = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_893c = zext i8 %v2_893c to i32
  store i32 %v3_893c, i32* %r3.global-to-local, align 4
  store i32 %v5_8938, i32* %ip.global-to-local, align 4
  %v0_8944 = load i32, i32* @r5, align 4
  %v5_8944 = mul nuw nsw i32 %v3_893c, 4
  %v6_8944 = add i32 %v5_8944, %v5_8938
  %v7_8944 = inttoptr i32 %v6_8944 to i32*
  store i32 %v0_8944, i32* %v7_8944, align 4
  %v0_8948 = load i32, i32* %r3.global-to-local, align 4
  %v1_8948 = load i32, i32* @r8, align 4
  %v2_8948 = add i32 %v1_8948, %v0_8948
  store i32 %v2_8948, i32* %r2.global-to-local, align 4
  %v0_894c = load i32, i32* @r7, align 4
  store i32 %v0_894c, i32* %r1.global-to-local, align 4
  %v1_8954 = trunc i32 %v2_8948 to i8
  %v2_8954 = load i32, i32* @r4, align 4
  %v3_8954 = inttoptr i32 %v2_8954 to i8*
  store i8 %v1_8954, i8* %v3_8954, align 1
  %v0_8958 = load i32, i32* %ip.global-to-local, align 4
  %v1_8958 = load i32, i32* @r6, align 4
  %v2_8958 = inttoptr i32 %v1_8958 to i32*
  store i32 %v0_8958, i32* %v2_8958, align 4
  %v2_895c = call i32 @function_137cc(i32 %v1_8948, i32 %v0_894c)
  %v2_8960 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_8960 = zext i8 %v2_8960 to i32
  store i32 36028, i32* %r2.global-to-local, align 4
  store i32 %v2_895c, i32* @r5, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v3_8970 = mul nuw nsw i32 %v3_8960, 4
  store i32 %v3_8970, i32* %r1.global-to-local, align 4
  %v2_8974 = load i32, i32* @global_var_1dbcc.23, align 4
  %v2_8978 = inttoptr i32 %v2_895c to i32*
  store i32 36028, i32* %v2_8978, align 4
  %v3_897c = load i32, i32* @r5, align 4
  %v4_897c = add i32 %v3_897c, 4
  %v5_897c = inttoptr i32 %v4_897c to i8*
  store i8 9, i8* %v5_897c, align 1
  %v0_8980 = load i32, i32* %r1.global-to-local, align 4
  %v1_8980 = add i32 %v0_8980, 4
  store i32 %v1_8980, i32* %r1.global-to-local, align 4
  %v5_8984 = call i32 @function_13914(i32 %v2_8974, i32 %v1_8980, i32 36028, i32 9)
  %v2_8988 = load i8, i8* bitcast (i8** @global_var_1dbc8.21 to i8*), align 4
  %v3_8988 = zext i8 %v2_8988 to i32
  store i32 %v3_8988, i32* %r3.global-to-local, align 4
  %v1_898c = load i32, i32* @r6, align 4
  %v2_898c = inttoptr i32 %v1_898c to i32*
  store i32 %v5_8984, i32* %v2_898c, align 4
  %v0_8990 = load i32, i32* @r5, align 4
  %v2_8990 = load i32, i32* %r3.global-to-local, align 4
  %v5_8990 = mul i32 %v2_8990, 4
  %v6_8990 = add i32 %v5_8990, %v5_8984
  %v7_8990 = inttoptr i32 %v6_8990 to i32*
  store i32 %v0_8990, i32* %v7_8990, align 4
  %v0_8994 = load i32, i32* %r3.global-to-local, align 4
  %v1_8994 = load i32, i32* @r8, align 4
  %v2_8994 = add i32 %v1_8994, %v0_8994
  store i32 %v2_8994, i32* %r2.global-to-local, align 4
  %v1_899c = trunc i32 %v2_8994 to i8
  %v2_899c = load i32, i32* @r4, align 4
  %v3_899c = inttoptr i32 %v2_899c to i8*
  store i8 %v1_899c, i8* %v3_899c, align 1
  %v2_89a0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_89a0, i32* @r4, align 4
  store i32 %v6_8650, i32* @r5, align 4
  store i32 %v9_8650, i32* @r6, align 4
  store i32 %v12_8650, i32* @r7, align 4
  store i32 %v15_8650, i32* @r8, align 4
  ret i32 %v1_8994

; uselistorder directives
  uselistorder i32 %v1_8994, { 1, 0 }
  uselistorder i32 %v1_8948, { 1, 0 }
  uselistorder i32 %v1_88fc, { 1, 0 }
  uselistorder i32 %v1_88b0, { 1, 0 }
  uselistorder i32 %v1_8864, { 1, 0 }
  uselistorder i32 %v1_8818, { 1, 0 }
  uselistorder i32 %v1_87cc, { 1, 0 }
  uselistorder i32 %v1_8780, { 1, 0 }
  uselistorder i32 %v2_8730, { 0, 2, 1 }
  uselistorder i32 %v3_8728, { 1, 0, 2 }
  uselistorder i32 %v1_86e8, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32* @global_var_1dbcc.23, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i8* bitcast (i8** @global_var_1dbc8.21 to i8*), { 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_89d8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_89d8:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-80 = alloca i8, align 1
  %v24_89d8 = load i32, i32* @fp, align 4
  %v1_89dc = urem i32 %arg1, 256
  store i32 %v1_89dc, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r6, align 4
  %v1_89f4 = urem i32 %arg3, 256
  store i32 %v1_89f4, i32* @r4, align 4
  %v2_89f8 = call i32 @function_137cc(i32 %v1_89dc, i32 4)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v2_89f8, i32* @sl, align 4
  %v0_8a04 = load i32, i32* @r7, align 4
  %v2_8a08 = call i32 @function_137cc(i32 %v0_8a04, i32 4)
  store i32 65535, i32* @r5, align 4
  %v0_8a14 = load i32, i32* @r6, align 4
  store i32 %v0_8a14, i32* %r1.global-to-local, align 4
  store i32 %v2_8a08, i32* @sb, align 4
  %v0_8a24 = load i32, i32* @r4, align 4
  %v4_8a28 = inttoptr i32 %v0_8a14 to i32*
  %v5_8a28 = call i32 @function_85e0(i32 %v0_8a24, i32* %v4_8a28, i32 7, i32 65535)
  %v3_8a30 = urem i32 %v5_8a28, 65536
  %v0_8a34 = load i32, i32* @r6, align 4
  store i32 %v0_8a34, i32* %r1.global-to-local, align 4
  %v0_8a3c = load i32, i32* @r5, align 4
  %v0_8a40 = load i32, i32* @r4, align 4
  %v5_8a48 = inttoptr i32 %v0_8a34 to i32*
  %v6_8a48 = call i32 @function_85e0(i32 %v0_8a40, i32* %v5_8a48, i32 6, i32 %v0_8a3c)
  %v0_8a4c = load i32, i32* @r6, align 4
  store i32 %v0_8a4c, i32* %r1.global-to-local, align 4
  %v3_8a50 = mul i32 %v6_8a48, 65536
  store i32 %v3_8a50, i32* %fp.global-to-local, align 4
  %v0_8a5c = load i32, i32* @r4, align 4
  %v4_8a60 = inttoptr i32 %v0_8a4c to i32*
  %v5_8a60 = call i32 @function_85e0(i32 %v0_8a5c, i32* %v4_8a60, i32 0, i32 512)
  %v0_8a6c = load i32, i32* @r6, align 4
  store i32 %v0_8a6c, i32* %r1.global-to-local, align 4
  %v0_8a70 = load i32, i32* @r4, align 4
  %v3_8a78 = urem i32 %v5_8a60, 65536
  store i32 %v3_8a78, i32* @r6, align 4
  %v4_8a7c = inttoptr i32 %v0_8a6c to i32*
  %v5_8a7c = call i32 @function_85e0(i32 %v0_8a70, i32* %v4_8a7c, i32 1, i32 1)
  %v0_8a80 = load i32, i32* %fp.global-to-local, align 4
  %v3_8a80 = udiv i32 %v0_8a80, 65536
  %v1_8a88 = load i32, i32* @r5, align 4
  %v9_8a88 = icmp eq i32 %v3_8a80, %v1_8a88
  store i32 0, i32* %stack_var_-52, align 4
  br i1 %v9_8a88, label %dec_label_pc_8ab0, label %bb

bb:                                               ; preds = %dec_label_pc_89d8
  %v2_8a9c = mul nuw nsw i32 %v3_8a80, 256
  %v4_8aa0 = and i32 %v2_8a9c, 65280
  %v1_8aa4 = urem i32 %v5_8a7c, 256
  store i32 %v1_8aa4, i32* @r8, align 4
  %v5_8aa8 = udiv i32 %v0_8a80, 16777216
  %v6_8aa8 = or i32 %v4_8aa0, %v5_8aa8
  br label %dec_label_pc_8abc

dec_label_pc_8ab0:                                ; preds = %dec_label_pc_89d8
  %v1_8aa47 = urem i32 %v5_8a7c, 256
  store i32 %v1_8aa47, i32* @r8, align 4
  %v0_8ab0 = call i32 @function_e7cc()
  %v3_8ab8 = urem i32 %v0_8ab0, 65536
  br label %dec_label_pc_8abc

dec_label_pc_8abc:                                ; preds = %bb, %dec_label_pc_8ab0
  %storemerge17 = phi i32 [ %v6_8aa8, %bb ], [ %v3_8ab8, %dec_label_pc_8ab0 ]
  store i32 %storemerge17, i32* %fp.global-to-local, align 4
  %v0_8abc = load i32, i32* @r7, align 4
  %tmp41 = icmp slt i32 %v0_8abc, 1
  br i1 %tmp41, label %dec_label_pc_8c64.preheader, label %dec_label_pc_8ac4

dec_label_pc_8c64.preheader:                      ; preds = %dec_label_pc_8bc0, %dec_label_pc_8abc
  %storemerge3.in12.ph = phi i32 [ %v0_8abc, %dec_label_pc_8abc ], [ %v1_8b18, %dec_label_pc_8bc0 ]
  %tmp424750 = icmp slt i32 %storemerge3.in12.ph, 1
  br i1 %tmp424750, label %dec_label_pc_8c2c, label %dec_label_pc_8c30.lr.ph

dec_label_pc_8ac4:                                ; preds = %dec_label_pc_8abc
  store i32 %v3_8a30, i32* %r1.global-to-local, align 4
  %v3_8ac8 = udiv i32 %v5_8a28, 256
  %v5_8ad4 = trunc i32 %v3_8ac8 to i8
  store i32 %arg2, i32* @r5, align 4
  %v3_8aec = udiv i32 %v5_8a28, 65536
  store i32 %v3_8aec, i32* @r4, align 4
  %v4_8afc = trunc i32 %v3_8aec to i8
  store i8 %v4_8afc, i8* %stack_var_-80, align 1
  %v3_8c0c = icmp eq i32 %v3_8a30, 65535
  %v2_8b34 = ptrtoint i32* %stack_var_-52 to i32
  %v3_8b64 = bitcast i32* %stack_var_-52 to %sockaddr*
  br label %dec_label_pc_8bf0

dec_label_pc_8b04:                                ; preds = %dec_label_pc_8bf0
  %v2_8b04 = load i8, i8* %stack_var_-80, align 1
  %v3_8b04 = sext i8 %v2_8b04 to i32
  store i32 %v3_8b04, i32* %r1.global-to-local, align 4
  store i32 %v3_8ac8, i32* @r4, align 4
  %v2_8b08 = load i32, i32* @r5, align 4
  %v3_8b08 = add i32 %v2_8b08, 2
  %v4_8b08 = inttoptr i32 %v3_8b08 to i8*
  store i8 %v5_8ad4, i8* %v4_8b08, align 1
  %v0_8b0c = load i32, i32* %r1.global-to-local, align 4
  %v1_8b0c = trunc i32 %v0_8b0c to i8
  %v2_8b0c = load i32, i32* @r5, align 4
  %v3_8b0c = add i32 %v2_8b0c, 3
  %v4_8b0c = inttoptr i32 %v3_8b0c to i8*
  store i8 %v1_8b0c, i8* %v4_8b0c, align 1
  br label %dec_label_pc_8b10

dec_label_pc_8b10:                                ; preds = %dec_label_pc_8c18, %dec_label_pc_8b04
  %v1_8b18 = add i32 %stack_var_-56.0, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_8b28 = call i32 @function_134e0(i32 2, i32 2, i32 17)
  store i32 %stack_var_-60.0, i32* @r4, align 4
  %v7_8b30 = icmp eq i32 %v3_8b28, -1
  store i32 %v2_8b34, i32* %r1.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v2_8b44 = load i32, i32* @sb, align 4
  %v3_8b44 = add i32 %v2_8b44, %stack_var_-60.0
  %v4_8b44 = inttoptr i32 %v3_8b44 to i32*
  store i32 %v3_8b28, i32* %v4_8b44, align 4
  br i1 %v7_8b30, label %dec_label_pc_8c70, label %dec_label_pc_8b4c

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8b10
  store i32 2, i32* %stack_var_-52, align 4
  %v4_8b64 = call i32 @function_13310(i32 %v3_8b28, %sockaddr* %v3_8b64, i32 16)
  %v0_8b68 = load i32, i32* @r5, align 4
  %v1_8b68 = add i32 %v0_8b68, 20
  %v2_8b68 = inttoptr i32 %v1_8b68 to i8*
  %v3_8b68 = load i8, i8* %v2_8b68, align 1
  %tmp = icmp ugt i8 %v3_8b68, 31
  br i1 %tmp, label %dec_label_pc_8bc0, label %dec_label_pc_8b74

dec_label_pc_8b74:                                ; preds = %dec_label_pc_8b4c
  %v1_8b74 = add i32 %v0_8b68, 16
  %v2_8b74 = inttoptr i32 %v1_8b74 to i32*
  %v3_8b74 = load i32, i32* %v2_8b74, align 4
  store i32 %v3_8b74, i32* @r4, align 4
  %v0_8b78 = call i32 @function_e7cc()
  %v0_8b7c = load i32, i32* @r4, align 4
  %v1_8b80 = and i32 %v0_8b7c, 65280
  %v3_8b88 = mul i32 %v0_8b7c, 16777216
  %v4_8b8c = mul nuw nsw i32 %v1_8b80, 256
  %v5_8b8c = or i32 %v4_8b8c, %v3_8b88
  store i32 %v5_8b8c, i32* %r1.global-to-local, align 4
  %v0_8b94 = load i32, i32* @r5, align 4
  %v1_8b94 = add i32 %v0_8b94, 20
  %v2_8b94 = inttoptr i32 %v1_8b94 to i8*
  %v3_8b94 = load i8, i8* %v2_8b94, align 1
  %v4_8b94 = zext i8 %v3_8b94 to i32
  %v2_8b98 = call i32 @llvm.bswap.i32(i32 %v0_8b7c)
  %v7_8b9c = lshr i32 %v0_8b78, %v4_8b94
  %v8_8b9c = add i32 %v7_8b9c, %v2_8b98
  %v3_8ba8 = mul i32 %v8_8b9c, 16777216
  %v1_8bac = and i32 %v8_8b9c, 65280
  %v4_8bb0 = mul nuw nsw i32 %v1_8bac, 256
  %v5_8bb0 = or i32 %v4_8bb0, %v3_8ba8
  store i32 %v5_8bb0, i32* %r1.global-to-local, align 4
  %v2_8bb8 = call i32 @llvm.bswap.i32(i32 %v8_8b9c)
  %v2_8bbc = add i32 %v0_8b94, 4
  %v3_8bbc = inttoptr i32 %v2_8bbc to i32*
  store i32 %v2_8bb8, i32* %v3_8bbc, align 4
  %v0_8bcc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8bc0

dec_label_pc_8bc0:                                ; preds = %dec_label_pc_8b4c, %dec_label_pc_8b74
  %v0_8bcc = phi i32 [ %v0_8b68, %dec_label_pc_8b4c ], [ %v0_8bcc.pre, %dec_label_pc_8b74 ]
  store i32 %stack_var_-60.0, i32* %r1.global-to-local, align 4
  %v1_8bc8 = load i32, i32* @sb, align 4
  %v2_8bc8 = add i32 %v1_8bc8, %stack_var_-60.0
  %v3_8bc8 = inttoptr i32 %v2_8bc8 to i32*
  %v4_8bc8 = load i32, i32* %v3_8bc8, align 4
  store i32 %v0_8bcc, i32* %r1.global-to-local, align 4
  %v3_8bd0 = inttoptr i32 %v0_8bcc to %sockaddr*
  %v4_8bd0 = call i32 @function_1333c(i32 %v4_8bc8, %sockaddr* %v3_8bd0, i32 16)
  %v1_8bdc = add i32 %stack_var_-60.0, 4
  %v1_8be0 = load i32, i32* @r7, align 4
  %v9_8be0 = icmp eq i32 %v1_8b18, %v1_8be0
  %v0_8be8 = load i32, i32* @r5, align 4
  %v1_8be8 = add i32 %v0_8be8, 24
  store i32 %v1_8be8, i32* @r5, align 4
  br i1 %v9_8be0, label %dec_label_pc_8c64.preheader, label %dec_label_pc_8bf0

dec_label_pc_8bf0:                                ; preds = %dec_label_pc_8bc0, %dec_label_pc_8ac4
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_8ac4 ], [ %v1_8bdc, %dec_label_pc_8bc0 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8ac4 ], [ %v1_8b18, %dec_label_pc_8bc0 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_8bfc = call i32 @function_137cc(i32 65535, i32 1)
  store i32 %v3_8a30, i32* %r1.global-to-local, align 4
  %v2_8c10 = load i32, i32* @sl, align 4
  %v3_8c10 = add i32 %v2_8c10, %stack_var_-60.0
  %v4_8c10 = inttoptr i32 %v3_8c10 to i32*
  store i32 %v2_8bfc, i32* %v4_8c10, align 4
  br i1 %v3_8c0c, label %dec_label_pc_8c18, label %dec_label_pc_8b04

dec_label_pc_8c18:                                ; preds = %dec_label_pc_8bf0
  %v0_8c18 = call i32 @function_e7cc()
  %v1_8c18 = trunc i32 %v0_8c18 to i8
  %v4_8c1c = sdiv i32 %v0_8c18, 256
  %v1_8c20 = trunc i32 %v4_8c1c to i8
  %v2_8c20 = load i32, i32* @r5, align 4
  %v3_8c20 = add i32 %v2_8c20, 3
  %v4_8c20 = inttoptr i32 %v3_8c20 to i8*
  store i8 %v1_8c20, i8* %v4_8c20, align 1
  %v3_8c24 = load i32, i32* @r5, align 4
  %v4_8c24 = add i32 %v3_8c24, 2
  %v5_8c24 = inttoptr i32 %v4_8c24 to i8*
  store i8 %v1_8c18, i8* %v5_8c24, align 1
  br label %dec_label_pc_8b10

dec_label_pc_8c2c:                                ; preds = %dec_label_pc_8c64.loopexit, %dec_label_pc_8c64.preheader, %dec_label_pc_8c68.loopexit, %dec_label_pc_8c2c
  br label %dec_label_pc_8c2c

dec_label_pc_8c30:                                ; preds = %dec_label_pc_8c30.lr.ph, %dec_label_pc_8c68.loopexit
  %v0_8c30 = load i32, i32* @r8, align 4
  %v2_8c30 = icmp eq i32 %v0_8c30, 0
  store i32 0, i32* @r5, align 4
  br i1 %v2_8c30, label %dec_label_pc_8c38, label %dec_label_pc_8c78

dec_label_pc_8c38:                                ; preds = %dec_label_pc_8c30
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_8c40

dec_label_pc_8c40:                                ; preds = %dec_label_pc_8c40, %dec_label_pc_8c38
  %v0_8c48 = phi i32 [ %v1_8c48, %dec_label_pc_8c40 ], [ 0, %dec_label_pc_8c38 ]
  %v0_8c40 = phi i32 [ %v1_8c5c, %dec_label_pc_8c40 ], [ 0, %dec_label_pc_8c38 ]
  %v1_8c40 = load i32, i32* @sb, align 4
  %v2_8c40 = add i32 %v1_8c40, %v0_8c40
  %v3_8c40 = inttoptr i32 %v2_8c40 to i32*
  %v4_8c40 = load i32, i32* %v3_8c40, align 4
  %v1_8c44 = load i32, i32* @sl, align 4
  %v2_8c44 = add i32 %v1_8c44, %v0_8c40
  %v3_8c44 = inttoptr i32 %v2_8c44 to i32*
  %v4_8c44 = load i32, i32* %v3_8c44, align 4
  store i32 %v4_8c44, i32* %r1.global-to-local, align 4
  %v1_8c48 = add i32 %v0_8c48, 1
  %v0_8c4c = load i32, i32* @r6, align 4
  %v4_8c54 = inttoptr i32 %v4_8c44 to i32*
  %v5_8c54 = call i32 @function_13450(i32 %v4_8c40, i32* %v4_8c54, i32 %v0_8c4c, i32 16384)
  %v1_8c58 = load i32, i32* @r7, align 4
  %v9_8c58 = icmp eq i32 %v1_8c48, %v1_8c58
  %v0_8c5c = load i32, i32* @r4, align 4
  %v1_8c5c = add i32 %v0_8c5c, 4
  store i32 %v1_8c5c, i32* @r4, align 4
  br i1 %v9_8c58, label %dec_label_pc_8c64.loopexit, label %dec_label_pc_8c40

dec_label_pc_8c64.loopexit:                       ; preds = %dec_label_pc_8c40
  %tmp4247 = icmp slt i32 %v1_8c48, 1
  br i1 %tmp4247, label %dec_label_pc_8c2c, label %dec_label_pc_8c30.lr.ph

dec_label_pc_8c30.lr.ph:                          ; preds = %dec_label_pc_8c64.preheader, %dec_label_pc_8c64.loopexit
  br label %dec_label_pc_8c30

dec_label_pc_8c68.loopexit:                       ; preds = %dec_label_pc_8c80
  %tmp42 = icmp slt i32 %v0_8ca8, 1
  br i1 %tmp42, label %dec_label_pc_8c2c, label %dec_label_pc_8c30

dec_label_pc_8c70:                                ; preds = %dec_label_pc_8b10
  store i32 %v24_89d8, i32* %fp.global-to-local, align 4
  ret i32 %v3_8b28

dec_label_pc_8c78:                                ; preds = %dec_label_pc_8c30
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_8c80

dec_label_pc_8c80:                                ; preds = %dec_label_pc_8c80, %dec_label_pc_8c78
  %v0_8c80 = phi i32 [ %v1_8cac, %dec_label_pc_8c80 ], [ 0, %dec_label_pc_8c78 ]
  %v1_8c80 = load i32, i32* @sl, align 4
  %v2_8c80 = add i32 %v1_8c80, %v0_8c80
  %v3_8c80 = inttoptr i32 %v2_8c80 to i32*
  %v4_8c80 = load i32, i32* %v3_8c80, align 4
  store i32 %v4_8c80, i32* @r4, align 4
  %v0_8c84 = load i32, i32* @r6, align 4
  store i32 %v0_8c84, i32* @r1, align 4
  %v1_8c8c = inttoptr i32 %v4_8c80 to i8*
  %v2_8c8c = call i32 @function_e94c(i8* %v1_8c8c)
  %v0_8c90 = load i32, i32* @r5, align 4
  %v1_8c90 = add i32 %v0_8c90, 1
  store i32 %v1_8c90, i32* @r5, align 4
  %v0_8c94 = load i32, i32* @fp, align 4
  %v1_8c94 = load i32, i32* @sb, align 4
  %v2_8c94 = add i32 %v1_8c94, %v0_8c94
  %v3_8c94 = inttoptr i32 %v2_8c94 to i32*
  %v4_8c94 = load i32, i32* %v3_8c94, align 4
  %v0_8c98 = load i32, i32* @r4, align 4
  store i32 %v0_8c98, i32* %r1.global-to-local, align 4
  %v0_8c9c = load i32, i32* @r6, align 4
  %v4_8ca4 = inttoptr i32 %v0_8c98 to i32*
  %v5_8ca4 = call i32 @function_13450(i32 %v4_8c94, i32* %v4_8ca4, i32 %v0_8c9c, i32 16384)
  %v0_8ca8 = load i32, i32* @r5, align 4
  %v1_8ca8 = load i32, i32* @r7, align 4
  %v9_8ca8 = icmp eq i32 %v0_8ca8, %v1_8ca8
  %v0_8cac = load i32, i32* @fp, align 4
  %v1_8cac = add i32 %v0_8cac, 4
  store i32 %v1_8cac, i32* @fp, align 4
  br i1 %v9_8ca8, label %dec_label_pc_8c68.loopexit, label %dec_label_pc_8c80

; uselistorder directives
  uselistorder i32 %v1_8cac, { 1, 0 }
  uselistorder i32 %v0_8ca8, { 1, 0 }
  uselistorder i32 %v1_8c5c, { 1, 0 }
  uselistorder i32 %v1_8c48, { 2, 0, 1 }
  uselistorder i32 %stack_var_-60.0, { 0, 5, 2, 4, 1, 3 }
  uselistorder i32 %v0_8bcc, { 1, 0 }
  uselistorder i32 %v8_8b9c, { 1, 2, 0 }
  uselistorder i32 %v0_8b7c, { 1, 0, 2 }
  uselistorder i32 %v3_8b28, { 1, 3, 2, 0 }
  uselistorder i32 %v1_8b18, { 1, 2, 0 }
  uselistorder i32 %v3_8aec, { 1, 0 }
  uselistorder i32 %v3_8ac8, { 1, 0 }
  uselistorder i32 %v3_8a30, { 0, 2, 1 }
  uselistorder i32 %v1_89dc, { 1, 0 }
  uselistorder i8* %stack_var_-80, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 3, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 16, 15, 17, 19, 18, 0 }
  uselistorder label %dec_label_pc_8c30.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8c30, { 1, 0 }
  uselistorder label %dec_label_pc_8c2c, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_8bc0, { 1, 0 }
  uselistorder label %dec_label_pc_8abc, { 1, 0 }
}

define i32 @function_8cbc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8cbc:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-80 = alloca i8, align 1
  %v24_8cbc = load i32, i32* @fp, align 4
  %v1_8cc0 = urem i32 %arg1, 256
  store i32 %v1_8cc0, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r6, align 4
  %v1_8cd8 = urem i32 %arg3, 256
  store i32 %v1_8cd8, i32* @r4, align 4
  %v2_8cdc = call i32 @function_137cc(i32 %v1_8cc0, i32 4)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v2_8cdc, i32* @sl, align 4
  %v0_8ce8 = load i32, i32* @r7, align 4
  %v2_8cec = call i32 @function_137cc(i32 %v0_8ce8, i32 4)
  store i32 65535, i32* @r5, align 4
  %v0_8cf8 = load i32, i32* @r6, align 4
  store i32 %v0_8cf8, i32* %r1.global-to-local, align 4
  store i32 %v2_8cec, i32* @sb, align 4
  %v0_8d08 = load i32, i32* @r4, align 4
  %v4_8d0c = inttoptr i32 %v0_8cf8 to i32*
  %v5_8d0c = call i32 @function_85e0(i32 %v0_8d08, i32* %v4_8d0c, i32 7, i32 65535)
  %v3_8d14 = urem i32 %v5_8d0c, 65536
  %v0_8d18 = load i32, i32* @r6, align 4
  store i32 %v0_8d18, i32* %r1.global-to-local, align 4
  %v0_8d20 = load i32, i32* @r5, align 4
  %v0_8d24 = load i32, i32* @r4, align 4
  %v5_8d2c = inttoptr i32 %v0_8d18 to i32*
  %v6_8d2c = call i32 @function_85e0(i32 %v0_8d24, i32* %v5_8d2c, i32 6, i32 %v0_8d20)
  %v0_8d30 = load i32, i32* @r6, align 4
  store i32 %v0_8d30, i32* %r1.global-to-local, align 4
  %v3_8d34 = mul i32 %v6_8d2c, 65536
  store i32 %v3_8d34, i32* %fp.global-to-local, align 4
  %v0_8d40 = load i32, i32* @r4, align 4
  %v4_8d44 = inttoptr i32 %v0_8d30 to i32*
  %v5_8d44 = call i32 @function_85e0(i32 %v0_8d40, i32* %v4_8d44, i32 0, i32 1024)
  %v0_8d50 = load i32, i32* @r6, align 4
  store i32 %v0_8d50, i32* %r1.global-to-local, align 4
  %v0_8d54 = load i32, i32* @r4, align 4
  %v3_8d5c = urem i32 %v5_8d44, 65536
  store i32 %v3_8d5c, i32* @r6, align 4
  %v4_8d60 = inttoptr i32 %v0_8d50 to i32*
  %v5_8d60 = call i32 @function_85e0(i32 %v0_8d54, i32* %v4_8d60, i32 1, i32 1)
  %v0_8d64 = load i32, i32* %fp.global-to-local, align 4
  %v3_8d64 = udiv i32 %v0_8d64, 65536
  %v1_8d6c = load i32, i32* @r5, align 4
  %v9_8d6c = icmp eq i32 %v3_8d64, %v1_8d6c
  store i32 0, i32* %stack_var_-52, align 4
  br i1 %v9_8d6c, label %dec_label_pc_8d94, label %bb

bb:                                               ; preds = %dec_label_pc_8cbc
  %v2_8d80 = mul nuw nsw i32 %v3_8d64, 256
  %v4_8d84 = and i32 %v2_8d80, 65280
  %v1_8d88 = urem i32 %v5_8d60, 256
  store i32 %v1_8d88, i32* @r8, align 4
  %v5_8d8c = udiv i32 %v0_8d64, 16777216
  %v6_8d8c = or i32 %v4_8d84, %v5_8d8c
  br label %dec_label_pc_8da0

dec_label_pc_8d94:                                ; preds = %dec_label_pc_8cbc
  %v1_8d887 = urem i32 %v5_8d60, 256
  store i32 %v1_8d887, i32* @r8, align 4
  %v0_8d94 = call i32 @function_e7cc()
  %v3_8d9c = urem i32 %v0_8d94, 65536
  br label %dec_label_pc_8da0

dec_label_pc_8da0:                                ; preds = %bb, %dec_label_pc_8d94
  %storemerge17 = phi i32 [ %v6_8d8c, %bb ], [ %v3_8d9c, %dec_label_pc_8d94 ]
  store i32 %storemerge17, i32* %fp.global-to-local, align 4
  %v0_8da0 = load i32, i32* @r7, align 4
  %tmp41 = icmp slt i32 %v0_8da0, 1
  br i1 %tmp41, label %dec_label_pc_8f48.preheader, label %dec_label_pc_8da8

dec_label_pc_8f48.preheader:                      ; preds = %dec_label_pc_8ea4, %dec_label_pc_8da0
  %storemerge3.in12.ph = phi i32 [ %v0_8da0, %dec_label_pc_8da0 ], [ %v1_8dfc, %dec_label_pc_8ea4 ]
  %tmp424750 = icmp slt i32 %storemerge3.in12.ph, 1
  br i1 %tmp424750, label %dec_label_pc_8f10, label %dec_label_pc_8f14.lr.ph

dec_label_pc_8da8:                                ; preds = %dec_label_pc_8da0
  store i32 %v3_8d14, i32* %r1.global-to-local, align 4
  %v3_8dac = udiv i32 %v5_8d0c, 256
  %v5_8db8 = trunc i32 %v3_8dac to i8
  store i32 %arg2, i32* @r5, align 4
  %v3_8dd0 = udiv i32 %v5_8d0c, 65536
  store i32 %v3_8dd0, i32* @r4, align 4
  %v4_8de0 = trunc i32 %v3_8dd0 to i8
  store i8 %v4_8de0, i8* %stack_var_-80, align 1
  %v3_8ef0 = icmp eq i32 %v3_8d14, 65535
  %v2_8e18 = ptrtoint i32* %stack_var_-52 to i32
  %v3_8e48 = bitcast i32* %stack_var_-52 to %sockaddr*
  br label %dec_label_pc_8ed4

dec_label_pc_8de8:                                ; preds = %dec_label_pc_8ed4
  %v2_8de8 = load i8, i8* %stack_var_-80, align 1
  %v3_8de8 = sext i8 %v2_8de8 to i32
  store i32 %v3_8de8, i32* %r1.global-to-local, align 4
  store i32 %v3_8dac, i32* @r4, align 4
  %v2_8dec = load i32, i32* @r5, align 4
  %v3_8dec = add i32 %v2_8dec, 2
  %v4_8dec = inttoptr i32 %v3_8dec to i8*
  store i8 %v5_8db8, i8* %v4_8dec, align 1
  %v0_8df0 = load i32, i32* %r1.global-to-local, align 4
  %v1_8df0 = trunc i32 %v0_8df0 to i8
  %v2_8df0 = load i32, i32* @r5, align 4
  %v3_8df0 = add i32 %v2_8df0, 3
  %v4_8df0 = inttoptr i32 %v3_8df0 to i8*
  store i8 %v1_8df0, i8* %v4_8df0, align 1
  br label %dec_label_pc_8df4

dec_label_pc_8df4:                                ; preds = %dec_label_pc_8efc, %dec_label_pc_8de8
  %v1_8dfc = add i32 %stack_var_-56.0, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_8e0c = call i32 @function_134e0(i32 2, i32 2, i32 0)
  store i32 %stack_var_-60.0, i32* @r4, align 4
  %v7_8e14 = icmp eq i32 %v3_8e0c, -1
  store i32 %v2_8e18, i32* %r1.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v2_8e28 = load i32, i32* @sb, align 4
  %v3_8e28 = add i32 %v2_8e28, %stack_var_-60.0
  %v4_8e28 = inttoptr i32 %v3_8e28 to i32*
  store i32 %v3_8e0c, i32* %v4_8e28, align 4
  br i1 %v7_8e14, label %dec_label_pc_8f54, label %dec_label_pc_8e30

dec_label_pc_8e30:                                ; preds = %dec_label_pc_8df4
  store i32 2, i32* %stack_var_-52, align 4
  %v4_8e48 = call i32 @function_13310(i32 %v3_8e0c, %sockaddr* %v3_8e48, i32 16)
  %v0_8e4c = load i32, i32* @r5, align 4
  %v1_8e4c = add i32 %v0_8e4c, 20
  %v2_8e4c = inttoptr i32 %v1_8e4c to i8*
  %v3_8e4c = load i8, i8* %v2_8e4c, align 1
  %tmp = icmp ugt i8 %v3_8e4c, 31
  br i1 %tmp, label %dec_label_pc_8ea4, label %dec_label_pc_8e58

dec_label_pc_8e58:                                ; preds = %dec_label_pc_8e30
  %v1_8e58 = add i32 %v0_8e4c, 16
  %v2_8e58 = inttoptr i32 %v1_8e58 to i32*
  %v3_8e58 = load i32, i32* %v2_8e58, align 4
  store i32 %v3_8e58, i32* @r4, align 4
  %v0_8e5c = call i32 @function_e7cc()
  %v0_8e60 = load i32, i32* @r4, align 4
  %v1_8e64 = and i32 %v0_8e60, 65280
  %v3_8e6c = mul i32 %v0_8e60, 16777216
  %v4_8e70 = mul nuw nsw i32 %v1_8e64, 256
  %v5_8e70 = or i32 %v4_8e70, %v3_8e6c
  store i32 %v5_8e70, i32* %r1.global-to-local, align 4
  %v0_8e78 = load i32, i32* @r5, align 4
  %v1_8e78 = add i32 %v0_8e78, 20
  %v2_8e78 = inttoptr i32 %v1_8e78 to i8*
  %v3_8e78 = load i8, i8* %v2_8e78, align 1
  %v4_8e78 = zext i8 %v3_8e78 to i32
  %v2_8e7c = call i32 @llvm.bswap.i32(i32 %v0_8e60)
  %v7_8e80 = lshr i32 %v0_8e5c, %v4_8e78
  %v8_8e80 = add i32 %v7_8e80, %v2_8e7c
  %v3_8e8c = mul i32 %v8_8e80, 16777216
  %v1_8e90 = and i32 %v8_8e80, 65280
  %v4_8e94 = mul nuw nsw i32 %v1_8e90, 256
  %v5_8e94 = or i32 %v4_8e94, %v3_8e8c
  store i32 %v5_8e94, i32* %r1.global-to-local, align 4
  %v2_8e9c = call i32 @llvm.bswap.i32(i32 %v8_8e80)
  %v2_8ea0 = add i32 %v0_8e78, 4
  %v3_8ea0 = inttoptr i32 %v2_8ea0 to i32*
  store i32 %v2_8e9c, i32* %v3_8ea0, align 4
  %v0_8eb0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8ea4

dec_label_pc_8ea4:                                ; preds = %dec_label_pc_8e30, %dec_label_pc_8e58
  %v0_8eb0 = phi i32 [ %v0_8e4c, %dec_label_pc_8e30 ], [ %v0_8eb0.pre, %dec_label_pc_8e58 ]
  store i32 %stack_var_-60.0, i32* %r1.global-to-local, align 4
  %v1_8eac = load i32, i32* @sb, align 4
  %v2_8eac = add i32 %v1_8eac, %stack_var_-60.0
  %v3_8eac = inttoptr i32 %v2_8eac to i32*
  %v4_8eac = load i32, i32* %v3_8eac, align 4
  store i32 %v0_8eb0, i32* %r1.global-to-local, align 4
  %v3_8eb4 = inttoptr i32 %v0_8eb0 to %sockaddr*
  %v4_8eb4 = call i32 @function_1333c(i32 %v4_8eac, %sockaddr* %v3_8eb4, i32 16)
  %v1_8ec0 = add i32 %stack_var_-60.0, 4
  %v1_8ec4 = load i32, i32* @r7, align 4
  %v9_8ec4 = icmp eq i32 %v1_8dfc, %v1_8ec4
  %v0_8ecc = load i32, i32* @r5, align 4
  %v1_8ecc = add i32 %v0_8ecc, 24
  store i32 %v1_8ecc, i32* @r5, align 4
  br i1 %v9_8ec4, label %dec_label_pc_8f48.preheader, label %dec_label_pc_8ed4

dec_label_pc_8ed4:                                ; preds = %dec_label_pc_8ea4, %dec_label_pc_8da8
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_8da8 ], [ %v1_8ec0, %dec_label_pc_8ea4 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8da8 ], [ %v1_8dfc, %dec_label_pc_8ea4 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_8ee0 = call i32 @function_137cc(i32 65535, i32 1)
  store i32 %v3_8d14, i32* %r1.global-to-local, align 4
  %v2_8ef4 = load i32, i32* @sl, align 4
  %v3_8ef4 = add i32 %v2_8ef4, %stack_var_-60.0
  %v4_8ef4 = inttoptr i32 %v3_8ef4 to i32*
  store i32 %v2_8ee0, i32* %v4_8ef4, align 4
  br i1 %v3_8ef0, label %dec_label_pc_8efc, label %dec_label_pc_8de8

dec_label_pc_8efc:                                ; preds = %dec_label_pc_8ed4
  %v0_8efc = call i32 @function_e7cc()
  %v1_8efc = trunc i32 %v0_8efc to i8
  %v4_8f00 = sdiv i32 %v0_8efc, 256
  %v1_8f04 = trunc i32 %v4_8f00 to i8
  %v2_8f04 = load i32, i32* @r5, align 4
  %v3_8f04 = add i32 %v2_8f04, 3
  %v4_8f04 = inttoptr i32 %v3_8f04 to i8*
  store i8 %v1_8f04, i8* %v4_8f04, align 1
  %v3_8f08 = load i32, i32* @r5, align 4
  %v4_8f08 = add i32 %v3_8f08, 2
  %v5_8f08 = inttoptr i32 %v4_8f08 to i8*
  store i8 %v1_8efc, i8* %v5_8f08, align 1
  br label %dec_label_pc_8df4

dec_label_pc_8f10:                                ; preds = %dec_label_pc_8f48.loopexit, %dec_label_pc_8f48.preheader, %dec_label_pc_8f4c.loopexit, %dec_label_pc_8f10
  br label %dec_label_pc_8f10

dec_label_pc_8f14:                                ; preds = %dec_label_pc_8f14.lr.ph, %dec_label_pc_8f4c.loopexit
  %v0_8f14 = load i32, i32* @r8, align 4
  %v2_8f14 = icmp eq i32 %v0_8f14, 0
  store i32 0, i32* @r5, align 4
  br i1 %v2_8f14, label %dec_label_pc_8f1c, label %dec_label_pc_8f5c

dec_label_pc_8f1c:                                ; preds = %dec_label_pc_8f14
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_8f24

dec_label_pc_8f24:                                ; preds = %dec_label_pc_8f24, %dec_label_pc_8f1c
  %v0_8f2c = phi i32 [ %v1_8f2c, %dec_label_pc_8f24 ], [ 0, %dec_label_pc_8f1c ]
  %v0_8f24 = phi i32 [ %v1_8f40, %dec_label_pc_8f24 ], [ 0, %dec_label_pc_8f1c ]
  %v1_8f24 = load i32, i32* @sb, align 4
  %v2_8f24 = add i32 %v1_8f24, %v0_8f24
  %v3_8f24 = inttoptr i32 %v2_8f24 to i32*
  %v4_8f24 = load i32, i32* %v3_8f24, align 4
  %v1_8f28 = load i32, i32* @sl, align 4
  %v2_8f28 = add i32 %v1_8f28, %v0_8f24
  %v3_8f28 = inttoptr i32 %v2_8f28 to i32*
  %v4_8f28 = load i32, i32* %v3_8f28, align 4
  store i32 %v4_8f28, i32* %r1.global-to-local, align 4
  %v1_8f2c = add i32 %v0_8f2c, 1
  %v0_8f30 = load i32, i32* @r6, align 4
  %v4_8f38 = inttoptr i32 %v4_8f28 to i32*
  %v5_8f38 = call i32 @function_13450(i32 %v4_8f24, i32* %v4_8f38, i32 %v0_8f30, i32 16384)
  %v1_8f3c = load i32, i32* @r7, align 4
  %v9_8f3c = icmp eq i32 %v1_8f2c, %v1_8f3c
  %v0_8f40 = load i32, i32* @r4, align 4
  %v1_8f40 = add i32 %v0_8f40, 4
  store i32 %v1_8f40, i32* @r4, align 4
  br i1 %v9_8f3c, label %dec_label_pc_8f48.loopexit, label %dec_label_pc_8f24

dec_label_pc_8f48.loopexit:                       ; preds = %dec_label_pc_8f24
  %tmp4247 = icmp slt i32 %v1_8f2c, 1
  br i1 %tmp4247, label %dec_label_pc_8f10, label %dec_label_pc_8f14.lr.ph

dec_label_pc_8f14.lr.ph:                          ; preds = %dec_label_pc_8f48.preheader, %dec_label_pc_8f48.loopexit
  br label %dec_label_pc_8f14

dec_label_pc_8f4c.loopexit:                       ; preds = %dec_label_pc_8f64
  %tmp42 = icmp slt i32 %v0_8f8c, 1
  br i1 %tmp42, label %dec_label_pc_8f10, label %dec_label_pc_8f14

dec_label_pc_8f54:                                ; preds = %dec_label_pc_8df4
  store i32 %v24_8cbc, i32* %fp.global-to-local, align 4
  ret i32 %v3_8e0c

dec_label_pc_8f5c:                                ; preds = %dec_label_pc_8f14
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_8f64

dec_label_pc_8f64:                                ; preds = %dec_label_pc_8f64, %dec_label_pc_8f5c
  %v0_8f64 = phi i32 [ %v1_8f90, %dec_label_pc_8f64 ], [ 0, %dec_label_pc_8f5c ]
  %v1_8f64 = load i32, i32* @sl, align 4
  %v2_8f64 = add i32 %v1_8f64, %v0_8f64
  %v3_8f64 = inttoptr i32 %v2_8f64 to i32*
  %v4_8f64 = load i32, i32* %v3_8f64, align 4
  store i32 %v4_8f64, i32* @r4, align 4
  %v0_8f68 = load i32, i32* @r6, align 4
  store i32 %v0_8f68, i32* @r1, align 4
  %v1_8f70 = inttoptr i32 %v4_8f64 to i8*
  %v2_8f70 = call i32 @function_e94c(i8* %v1_8f70)
  %v0_8f74 = load i32, i32* @r5, align 4
  %v1_8f74 = add i32 %v0_8f74, 1
  store i32 %v1_8f74, i32* @r5, align 4
  %v0_8f78 = load i32, i32* @fp, align 4
  %v1_8f78 = load i32, i32* @sb, align 4
  %v2_8f78 = add i32 %v1_8f78, %v0_8f78
  %v3_8f78 = inttoptr i32 %v2_8f78 to i32*
  %v4_8f78 = load i32, i32* %v3_8f78, align 4
  %v0_8f7c = load i32, i32* @r4, align 4
  store i32 %v0_8f7c, i32* %r1.global-to-local, align 4
  %v0_8f80 = load i32, i32* @r6, align 4
  %v4_8f88 = inttoptr i32 %v0_8f7c to i32*
  %v5_8f88 = call i32 @function_13450(i32 %v4_8f78, i32* %v4_8f88, i32 %v0_8f80, i32 16384)
  %v0_8f8c = load i32, i32* @r5, align 4
  %v1_8f8c = load i32, i32* @r7, align 4
  %v9_8f8c = icmp eq i32 %v0_8f8c, %v1_8f8c
  %v0_8f90 = load i32, i32* @fp, align 4
  %v1_8f90 = add i32 %v0_8f90, 4
  store i32 %v1_8f90, i32* @fp, align 4
  br i1 %v9_8f8c, label %dec_label_pc_8f4c.loopexit, label %dec_label_pc_8f64

; uselistorder directives
  uselistorder i32 %v1_8f90, { 1, 0 }
  uselistorder i32 %v0_8f8c, { 1, 0 }
  uselistorder i32 %v1_8f40, { 1, 0 }
  uselistorder i32 %v1_8f2c, { 2, 0, 1 }
  uselistorder i32 %stack_var_-60.0, { 0, 5, 2, 4, 1, 3 }
  uselistorder i32 %v0_8eb0, { 1, 0 }
  uselistorder i32 %v8_8e80, { 1, 2, 0 }
  uselistorder i32 %v0_8e60, { 1, 0, 2 }
  uselistorder i32 %v3_8e0c, { 1, 3, 2, 0 }
  uselistorder i32 %v1_8dfc, { 1, 2, 0 }
  uselistorder i32 %v3_8dd0, { 1, 0 }
  uselistorder i32 %v3_8dac, { 1, 0 }
  uselistorder i32 %v3_8d14, { 0, 2, 1 }
  uselistorder i32 %v1_8cc0, { 1, 0 }
  uselistorder i8* %stack_var_-80, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 3, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 16, 15, 17, 19, 18, 0 }
  uselistorder label %dec_label_pc_8f14.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8f14, { 1, 0 }
  uselistorder label %dec_label_pc_8f10, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_8ea4, { 1, 0 }
  uselistorder label %dec_label_pc_8da0, { 1, 0 }
}

define i32 @function_8fa0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8fa0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v18_8fa0 = load i32, i32* @sb, align 4
  %v24_8fa0 = load i32, i32* @fp, align 4
  %v1_8fa4 = urem i32 %arg1, 256
  store i32 %v1_8fa4, i32* @sl, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %v1_8fa4, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_8fbc = urem i32 %arg3, 256
  store i32 %v1_8fbc, i32* @r4, align 4
  %v2_8fc0 = call i32 @function_137cc(i32 %v1_8fa4, i32 4)
  %v0_8fc4 = load i32, i32* @r5, align 4
  store i32 %v0_8fc4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8fd4 = load i32, i32* @r4, align 4
  store i32 %v0_8fd4, i32* %r0.global-to-local, align 4
  %v5_8fd8 = inttoptr i32 %v0_8fc4 to i32*
  %v6_8fd8 = call i32 @function_85e0(i32 %v0_8fd4, i32* %v5_8fd8, i32 2, i32 0)
  %v1_8fe4 = urem i32 %v6_8fd8, 256
  store i32 %v1_8fe4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_8ff0 = load i32, i32* @r5, align 4
  store i32 %v0_8ff0, i32* %r1.global-to-local, align 4
  %v0_8ff4 = load i32, i32* @r4, align 4
  store i32 %v0_8ff4, i32* %r0.global-to-local, align 4
  %v5_8ff8 = trunc i32 %v6_8fd8 to i8
  %v6_8ffc = inttoptr i32 %v0_8ff0 to i32*
  %v7_8ffc = call i32 @function_85e0(i32 %v0_8ff4, i32* %v6_8ffc, i32 3, i32 65535)
  %v0_9000 = load i32, i32* @r5, align 4
  store i32 %v0_9000, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_8ffc, i32* %fp.global-to-local, align 4
  %v0_9010 = load i32, i32* @r4, align 4
  store i32 %v0_9010, i32* %r0.global-to-local, align 4
  %v4_9014 = inttoptr i32 %v0_9000 to i32*
  %v5_9014 = call i32 @function_85e0(i32 %v0_9010, i32* %v4_9014, i32 4, i32 64)
  %v1_901c = urem i32 %v5_9014, 256
  store i32 %v1_901c, i32* %ip.global-to-local, align 4
  %v0_9020 = load i32, i32* @r5, align 4
  store i32 %v0_9020, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_902c = load i32, i32* @r4, align 4
  store i32 %v0_902c, i32* %r0.global-to-local, align 4
  %v5_9030 = trunc i32 %v5_9014 to i8
  %v6_9034 = inttoptr i32 %v0_9020 to i32*
  %v7_9034 = call i32 @function_85e0(i32 %v0_902c, i32* %v6_9034, i32 5, i32 0)
  %v1_9040 = urem i32 %v7_9034, 256
  store i32 %v1_9040, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_904c = load i32, i32* @r5, align 4
  store i32 %v0_904c, i32* %r1.global-to-local, align 4
  %v0_9050 = load i32, i32* @r4, align 4
  store i32 %v0_9050, i32* %r0.global-to-local, align 4
  %v5_9058 = inttoptr i32 %v0_904c to i32*
  %v6_9058 = call i32 @function_85e0(i32 %v0_9050, i32* %v5_9058, i32 6, i32 65535)
  %v0_9060 = load i32, i32* @r5, align 4
  store i32 %v0_9060, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_9058, i32* @r7, align 4
  %v0_9070 = load i32, i32* @r4, align 4
  store i32 %v0_9070, i32* %r0.global-to-local, align 4
  %v4_9074 = inttoptr i32 %v0_9060 to i32*
  %v5_9074 = call i32 @function_85e0(i32 %v0_9070, i32* %v4_9074, i32 7, i32 65535)
  %v0_9078 = load i32, i32* @r5, align 4
  store i32 %v0_9078, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_9074, i32* %sb.global-to-local, align 4
  %v0_9088 = load i32, i32* @r4, align 4
  store i32 %v0_9088, i32* %r0.global-to-local, align 4
  %v4_908c = inttoptr i32 %v0_9078 to i32*
  %v5_908c = call i32 @function_85e0(i32 %v0_9088, i32* %v4_908c, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9098 = load i32, i32* @r5, align 4
  store i32 %v0_9098, i32* %r1.global-to-local, align 4
  store i32 %v5_908c, i32* @r6, align 4
  %v0_90a0 = load i32, i32* @r4, align 4
  store i32 %v0_90a0, i32* %r0.global-to-local, align 4
  %v4_90a4 = inttoptr i32 %v0_9098 to i32*
  %v5_90a4 = call i32 @function_85e0(i32 %v0_90a0, i32* %v4_90a4, i32 1, i32 1)
  %v2_90b0 = load i32, i32* @global_var_1dc68.49, align 4
  store i32 %v2_90b0, i32* %r3.global-to-local, align 4
  %v1_90b4 = urem i32 %v5_90a4, 256
  store i32 %v1_90b4, i32* %ip.global-to-local, align 4
  %v0_90b8 = load i32, i32* @r5, align 4
  store i32 %v0_90b8, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_90c0 = load i32, i32* @r4, align 4
  store i32 %v0_90c0, i32* %r0.global-to-local, align 4
  %v5_90c8 = inttoptr i32 %v0_90b8 to i32*
  %v6_90c8 = call i32 @function_85e0(i32 %v0_90c0, i32* %v5_90c8, i32 25, i32 %v2_90b0)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_90dc = call i32 @function_134e0(i32 2, i32 3, i32 17)
  store i32 %v3_90dc, i32* %r0.global-to-local, align 4
  %v7_90e0 = icmp eq i32 %v3_90dc, -1
  store i1 %v7_90e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90e0, label %dec_label_pc_9508, label %dec_label_pc_90ec

dec_label_pc_90ec:                                ; preds = %dec_label_pc_8fa0
  store i32 1, i32* %stack_var_-40, align 4
  %v6_90f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_90f4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_9108 = call i32 @function_134b0(i32 %v3_90dc, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_9108, i32* %r0.global-to-local, align 4
  %v7_910c = icmp eq i32 %v6_9108, -1
  store i1 %v7_910c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_910c, label %dec_label_pc_9500, label %dec_label_pc_9114

dec_label_pc_9114:                                ; preds = %dec_label_pc_90ec
  %v0_9114 = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_9120 = urem i32 %v0_9114, 65536
  store i32 %v3_9120, i32* %r2.global-to-local, align 4
  %v3_9124 = icmp ugt i32 %v3_9120, 1459
  %v9_9124 = icmp eq i32 %v3_9120, 1460
  store i1 %v9_9124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9124, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_9114
  store i32 1460, i32* %r2.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_9114, %bb
  %v0_912c = phi i32 [ %v3_9120, %dec_label_pc_9114 ], [ 1460, %bb ]
  %v0_9130 = load i32, i32* %fp.global-to-local, align 4
  %v3_9130 = mul i32 %v0_9130, 65536
  store i32 %v3_9130, i32* %r0.global-to-local, align 4
  %v3_9134 = urem i32 %v0_9130, 65536
  store i32 %v3_9134, i32* %r2.global-to-local, align 4
  %v0_9138 = load i32, i32* @sl, align 4
  %v2_9138 = icmp eq i32 %v0_9138, 0
  store i1 %v2_9138, i1* %cpsr_z.global-to-local, align 1
  %v0_913c = load i32, i32* %sb.global-to-local, align 4
  %v0_9140 = load i32, i32* @r7, align 4
  %tmp72 = icmp slt i32 %v0_9138, 1
  br i1 %tmp72, label %bb73, label %bb74

bb73:                                             ; preds = %bb71
  store i32 %v0_912c, i32* %r2.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %bb71, %bb73
  %v5_9168 = phi i32 [ %v3_9134, %bb71 ], [ %v0_912c, %bb73 ]
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_9150 = urem i32 %v0_9140, 65536
  store i32 %v3_9150, i32* %r3.global-to-local, align 4
  %v3_9154 = urem i32 %v0_913c, 65536
  store i32 %v3_9154, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %tmp72, label %.thread, label %dec_label_pc_9170

.thread:                                          ; preds = %bb74
  %v6_9164 = add nsw i32 %v5_9168, 28
  store i32 %v6_9164, i32* @fp, align 4
  %v6_9168 = add nsw i32 %v5_9168, 8
  store i32 %v6_9168, i32* @sb, align 4
  br label %dec_label_pc_92e4

dec_label_pc_9170:                                ; preds = %bb74
  %v1_9174 = add nuw nsw i32 %v0_912c, 28
  store i32 %v1_9174, i32* @fp, align 4
  %tmp75 = mul nuw nsw i32 %v1_9174, 256
  %v1_9180 = and i32 %tmp75, 65280
  %tmp76 = udiv i32 %v0_9130, 256
  %v3_9184 = urem i32 %tmp76, 256
  %v2_9198 = icmp eq i32 %v1_9040, 0
  store i1 %v2_9198, i1* %cpsr_z.global-to-local, align 1
  %v1_919c = urem i32 %v0_9130, 256
  %v1_91a4 = add nuw nsw i32 %v0_912c, 8
  store i32 %v1_91a4, i32* @sb, align 4
  %v1_91ac = urem i32 %v0_9140, 256
  %v1_91b0 = urem i32 %v0_913c, 256
  store i32 %v1_91b0, i32* %ip.global-to-local, align 4
  store i32 %v1_9180, i32* %r3.global-to-local, align 4
  %tmp77 = mul nuw nsw i32 %v1_91a4, 256
  %v4_91bc = mul nuw nsw i32 %v1_919c, 256
  %v5_91bc = or i32 %v4_91bc, %v3_9184
  store i32 %v5_91bc, i32* %r0.global-to-local, align 4
  %v3_91c0 = mul nuw nsw i32 %v1_91ac, 256
  store i32 %v3_91c0, i32* %r2.global-to-local, align 4
  %tmp78 = udiv i32 %v0_913c, 256
  %v3_91c4 = urem i32 %tmp78, 256
  %v1_91c8 = and i32 %tmp77, 65280
  store i32 %v1_91c8, i32* %r1.global-to-local, align 4
  %tmp79 = udiv i32 %v1_9174, 256
  %v4_91cc = urem i32 %tmp79, 256
  %v5_91cc = or i32 %v4_91cc, %v1_9180
  store i32 %v5_91cc, i32* @lr, align 4
  %tmp80 = udiv i32 %v0_9140, 256
  %v4_91d0 = urem i32 %tmp80, 256
  %v5_91d0 = or i32 %v4_91d0, %v3_91c0
  store i32 %v5_91d0, i32* @r4, align 4
  %v5_91d4 = trunc i32 %tmp79 to i8
  %v5_91d8 = trunc i32 %tmp76 to i8
  %v4_91dc = mul nuw nsw i32 %v1_91b0, 256
  %v5_91dc = or i32 %v4_91dc, %v3_91c4
  store i32 %v5_91dc, i32* @r5, align 4
  %tmp81 = udiv i32 %v1_91a4, 256
  %v4_91e0 = urem i32 %tmp81, 256
  %v5_91e0 = or i32 %v4_91e0, %v1_91c8
  store i32 %v5_91e0, i32* @r7, align 4
  br i1 %v2_9198, label %dec_label_pc_91e8, label %dec_label_pc_9510

dec_label_pc_91e8:                                ; preds = %dec_label_pc_9170
  %v3_91e836 = udiv i32 %v1_9180, 256
  store i32 %v3_91e836, i32* %ip.global-to-local, align 4
  store i32 %v1_919c, i32* %r0.global-to-local, align 4
  store i32 %v1_91ac, i32* %r1.global-to-local, align 4
  store i32 %v1_91b0, i32* %r2.global-to-local, align 4
  %v3_91f837 = udiv i32 %v1_91c8, 256
  store i32 %v3_91f837, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  %v4_925c = sext i8 %v5_8ff8 to i32
  %v4_929c = sext i8 %v5_91d8 to i32
  %sext15 = mul i32 %v0_9130, 16777216
  %v4_92a0 = sdiv i32 %sext15, 16777216
  %sext16 = mul i32 %v0_9140, 16777216
  %v4_92b8 = sdiv i32 %sext16, 16777216
  %sext17 = mul i32 %v1_91a4, 16777216
  %v4_92bc = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %v0_913c, 16777216
  %v4_92c0 = sdiv i32 %sext18, 16777216
  %v1_92a8 = trunc i32 %v1_9174 to i8
  %v1_92c8 = trunc i32 %v4_92bc to i8
  br label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_9214, %dec_label_pc_91e8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_9220 = call i32 @function_137cc(i32 1510, i32 1)
  store i32 %v2_9220, i32* %r0.global-to-local, align 4
  store i32 %v2_8fc0, i32* %ip.global-to-local, align 4
  %v3_9228 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9228, i32* %r2.global-to-local, align 4
  %v2_922c = load i32, i32* @r6, align 4
  %v5_922c = mul i32 %v2_922c, 4
  %v6_922c = add i32 %v5_922c, %v2_8fc0
  %v7_922c = inttoptr i32 %v6_922c to i32*
  store i32 %v2_9220, i32* %v7_922c, align 4
  %v0_9230 = load i32, i32* %ip.global-to-local, align 4
  %v1_9230 = load i32, i32* %r2.global-to-local, align 4
  %v4_9230 = mul i32 %v1_9230, 4
  %v5_9230 = add i32 %v4_9230, %v0_9230
  %v6_9230 = inttoptr i32 %v5_9230 to i32*
  %v7_9230 = load i32, i32* %v6_9230, align 4
  store i32 %v7_9230, i32* %r1.global-to-local, align 4
  %v1_9234 = inttoptr i32 %v7_9230 to i8*
  %v2_9234 = load i8, i8* %v1_9234, align 1
  %tmp = urem i8 %v2_9234, 16
  %v1_9238 = zext i8 %tmp to i32
  %v1_923c = or i32 %v1_9238, 64
  store i32 %v1_923c, i32* %r3.global-to-local, align 4
  %v1_9240 = trunc i32 %v1_923c to i8
  store i8 %v1_9240, i8* %v1_9234, align 1
  %v0_9244 = load i32, i32* %r1.global-to-local, align 4
  %v1_9244 = inttoptr i32 %v0_9244 to i8*
  %v2_9244 = load i8, i8* %v1_9244, align 1
  %v3_9244 = zext i8 %v2_9244 to i32
  %v1_9248 = and i32 %v3_9244, 240
  %v1_924c = or i32 %v1_9248, 5
  store i32 %v1_924c, i32* %r2.global-to-local, align 4
  %v3_9254 = add i32 %v0_9244, 9
  %v4_9254 = inttoptr i32 %v3_9254 to i8*
  store i8 17, i8* %v4_9254, align 1
  %v0_9258 = load i32, i32* %r2.global-to-local, align 4
  %v1_9258 = trunc i32 %v0_9258 to i8
  %v2_9258 = load i32, i32* %r1.global-to-local, align 4
  %v3_9258 = inttoptr i32 %v2_9258 to i8*
  store i8 %v1_9258, i8* %v3_9258, align 1
  store i32 %v4_925c, i32* %r0.global-to-local, align 4
  %v2_9260 = load i32, i32* %r1.global-to-local, align 4
  %v3_9260 = add i32 %v2_9260, 1
  %v4_9260 = inttoptr i32 %v3_9260 to i8*
  store i8 %v5_8ff8, i8* %v4_9260, align 1
  %v2_9268 = load i32, i32* %r1.global-to-local, align 4
  %v3_9268 = add i32 %v2_9268, 8
  %v4_9268 = inttoptr i32 %v3_9268 to i8*
  store i8 %v5_9030, i8* %v4_9268, align 1
  %v3_926c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_926c, i32* %r2.global-to-local, align 4
  store i32 %v6_90c8, i32* %ip.global-to-local, align 4
  %v3_9274 = mul i32 %v3_926c, 32
  store i32 %v3_9274, i32* %r3.global-to-local, align 4
  %v1_9278 = load i32, i32* %r1.global-to-local, align 4
  %v2_9278 = add i32 %v1_9278, 12
  %v3_9278 = inttoptr i32 %v2_9278 to i32*
  store i32 %v6_90c8, i32* %v3_9278, align 4
  %v0_927c = load i32, i32* %r3.global-to-local, align 4
  %v1_927c = load i32, i32* %r2.global-to-local, align 4
  %tmp83 = mul i32 %v1_927c, -8
  %v5_927c = add i32 %v0_927c, %tmp83
  %v1_9280 = load i32, i32* @r8, align 4
  %v2_9280 = add i32 %v5_927c, %v1_9280
  store i32 %v2_9280, i32* %r3.global-to-local, align 4
  %v1_9284 = add i32 %v2_9280, 16
  %v2_9284 = inttoptr i32 %v1_9284 to i32*
  %v3_9284 = load i32, i32* %v2_9284, align 4
  %v1_9288 = load i32, i32* %r1.global-to-local, align 4
  %v2_9288 = add i32 %v1_9288, 16
  %v3_9288 = inttoptr i32 %v2_9288 to i32*
  store i32 %v3_9284, i32* %v3_9288, align 4
  %v0_9290 = load i32, i32* %r2.global-to-local, align 4
  %v1_9290 = add i32 %v0_9290, 1
  store i32 %v1_9290, i32* @r6, align 4
  %v2_9294 = load i32, i32* %r1.global-to-local, align 4
  %v3_9294 = add i32 %v2_9294, 2
  %v4_9294 = inttoptr i32 %v3_9294 to i8*
  store i8 %v5_91d4, i8* %v4_9294, align 1
  store i32 %v4_929c, i32* %ip.global-to-local, align 4
  store i32 %v4_92a0, i32* %r0.global-to-local, align 4
  %v0_92a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_92a4 = add i32 %v0_92a4, 20
  store i32 %v1_92a4, i32* %r3.global-to-local, align 4
  %v3_92a8 = add i32 %v0_92a4, 3
  %v4_92a8 = inttoptr i32 %v3_92a8 to i8*
  store i8 %v1_92a8, i8* %v4_92a8, align 1
  %v0_92ac = load i32, i32* %ip.global-to-local, align 4
  %v1_92ac = trunc i32 %v0_92ac to i8
  %v2_92ac = load i32, i32* %r1.global-to-local, align 4
  %v3_92ac = add i32 %v2_92ac, 4
  %v4_92ac = inttoptr i32 %v3_92ac to i8*
  store i8 %v1_92ac, i8* %v4_92ac, align 1
  %v0_92b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_92b0 = trunc i32 %v0_92b0 to i8
  %v2_92b0 = load i32, i32* %r1.global-to-local, align 4
  %v3_92b0 = add i32 %v2_92b0, 5
  %v4_92b0 = inttoptr i32 %v3_92b0 to i8*
  store i8 %v1_92b0, i8* %v4_92b0, align 1
  %v0_92b4 = load i32, i32* @r4, align 4
  %v1_92b4 = trunc i32 %v0_92b4 to i8
  %v2_92b4 = load i32, i32* %r1.global-to-local, align 4
  %v3_92b4 = add i32 %v2_92b4, 20
  %v4_92b4 = inttoptr i32 %v3_92b4 to i8*
  store i8 %v1_92b4, i8* %v4_92b4, align 1
  store i32 %v4_92b8, i32* %r2.global-to-local, align 4
  store i32 %v4_92bc, i32* %r1.global-to-local, align 4
  store i32 %v4_92c0, i32* %ip.global-to-local, align 4
  %v0_92c4 = load i32, i32* @r6, align 4
  %v1_92c4 = load i32, i32* @sl, align 4
  %v9_92c4 = icmp eq i32 %v0_92c4, %v1_92c4
  store i1 %v9_92c4, i1* %cpsr_z.global-to-local, align 1
  %v2_92c8 = load i32, i32* %r3.global-to-local, align 4
  %v3_92c8 = add i32 %v2_92c8, 5
  %v4_92c8 = inttoptr i32 %v3_92c8 to i8*
  store i8 %v1_92c8, i8* %v4_92c8, align 1
  %v0_92cc = load i32, i32* %r2.global-to-local, align 4
  %v1_92cc = trunc i32 %v0_92cc to i8
  %v2_92cc = load i32, i32* %r3.global-to-local, align 4
  %v3_92cc = add i32 %v2_92cc, 1
  %v4_92cc = inttoptr i32 %v3_92cc to i8*
  store i8 %v1_92cc, i8* %v4_92cc, align 1
  %v0_92d0 = load i32, i32* @r5, align 4
  %v1_92d0 = trunc i32 %v0_92d0 to i8
  %v2_92d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_92d0 = add i32 %v2_92d0, 2
  %v4_92d0 = inttoptr i32 %v3_92d0 to i8*
  store i8 %v1_92d0, i8* %v4_92d0, align 1
  %v0_92d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_92d4 = trunc i32 %v0_92d4 to i8
  %v2_92d4 = load i32, i32* %r3.global-to-local, align 4
  %v3_92d4 = add i32 %v2_92d4, 3
  %v4_92d4 = inttoptr i32 %v3_92d4 to i8*
  store i8 %v1_92d4, i8* %v4_92d4, align 1
  %v0_92d8 = load i32, i32* @r7, align 4
  %v1_92d8 = trunc i32 %v0_92d8 to i8
  %v2_92d8 = load i32, i32* %r3.global-to-local, align 4
  %v3_92d8 = add i32 %v2_92d8, 4
  %v4_92d8 = inttoptr i32 %v3_92d8 to i8*
  store i8 %v1_92d8, i8* %v4_92d8, align 1
  %v0_92dc = load i32, i32* @r6, align 4
  store i32 %v0_92dc, i32* %stack_var_-40, align 4
  %v5_92e0 = icmp slt i32 %v0_92c4, %v1_92c4
  br i1 %v5_92e0, label %dec_label_pc_9214, label %dec_label_pc_92e4

dec_label_pc_92e4:                                ; preds = %dec_label_pc_9544, %dec_label_pc_9214, %.thread
  %v0_92e4 = load i32, i32* @sl, align 4
  %v2_92e4 = icmp eq i32 %v0_92e4, 0
  store i1 %v2_92e4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9490 = icmp eq i32 %v3_9134, 65535
  %v2_935c = icmp eq i32 %v1_90b4, 0
  %v2_9324 = icmp eq i32 %v6_90c8, -1
  %v7_9324 = icmp eq i32 %v6_90c8, -1
  br label %dec_label_pc_92ec.outer

dec_label_pc_92ec.outer:                          ; preds = %dec_label_pc_940c, %dec_label_pc_92e4
  %v1_92ec.ph.in = phi i32 [ %v1_9400, %dec_label_pc_940c ], [ %v0_92e4, %dec_label_pc_92e4 ]
  %v0_92ec.ph = phi i1 [ %v2_940c, %dec_label_pc_940c ], [ %v2_92e4, %dec_label_pc_92e4 ]
  %v1_92ec.ph = icmp slt i32 %v1_92ec.ph.in, 0
  %v4_92ec = or i1 %v1_92ec.ph, %v0_92ec.ph
  br label %dec_label_pc_92ec

dec_label_pc_92ec:                                ; preds = %dec_label_pc_92ec.outer, %dec_label_pc_92ec
  br i1 %v4_92ec, label %dec_label_pc_92ec, label %dec_label_pc_92f0

dec_label_pc_92f0:                                ; preds = %dec_label_pc_92ec
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_92fc

dec_label_pc_92fc:                                ; preds = %dec_label_pc_9364, %dec_label_pc_92f0
  %v1_9310 = phi i32 [ %v1_93fc, %dec_label_pc_9364 ], [ 0, %dec_label_pc_92f0 ]
  %v5_9300 = mul i32 %v1_9310, 24
  %v1_9304 = load i32, i32* @r8, align 4
  %v2_9304 = add i32 %v1_9304, %v5_9300
  store i32 %v2_9304, i32* %r3.global-to-local, align 4
  store i32 %v2_8fc0, i32* %ip.global-to-local, align 4
  %v1_930c = add i32 %v2_9304, 20
  %v2_930c = inttoptr i32 %v1_930c to i8*
  %v3_930c = load i8, i8* %v2_930c, align 1
  %v4_930c = zext i8 %v3_930c to i32
  store i32 %v4_930c, i32* %r2.global-to-local, align 4
  %v4_9310 = mul i32 %v1_9310, 4
  %v5_9310 = add i32 %v4_9310, %v2_8fc0
  %v6_9310 = inttoptr i32 %v5_9310 to i32*
  %v7_9310 = load i32, i32* %v6_9310, align 4
  store i32 %v7_9310, i32* @r5, align 4
  %v7_9314 = icmp eq i8 %v3_930c, 31
  store i1 %v7_9314, i1* %cpsr_z.global-to-local, align 1
  %v1_9318 = add i32 %v7_9310, 20
  store i32 %v1_9318, i32* @r6, align 4
  %tmp84 = icmp ult i8 %v3_930c, 32
  br i1 %tmp84, label %dec_label_pc_9418, label %dec_label_pc_9320

dec_label_pc_9320:                                ; preds = %dec_label_pc_92fc
  store i32 %v6_90c8, i32* %r0.global-to-local, align 4
  store i1 %v7_9324, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9324, label %dec_label_pc_9480, label %dec_label_pc_932c

dec_label_pc_932c:                                ; preds = %dec_label_pc_9418, %dec_label_pc_9320
  store i32 %v3_9134, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9490, label %dec_label_pc_949c, label %dec_label_pc_9340

dec_label_pc_9340:                                ; preds = %dec_label_pc_9480.dec_label_pc_9340_crit_edge, %dec_label_pc_932c
  %v1_9344 = phi i32 [ %v1_9344.pre, %dec_label_pc_9480.dec_label_pc_9340_crit_edge ], [ 65535, %dec_label_pc_932c ]
  store i32 %v3_9150, i32* %r2.global-to-local, align 4
  %v9_9344 = icmp eq i32 %v3_9150, %v1_9344
  store i1 %v9_9344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9344, label %dec_label_pc_94b8, label %dec_label_pc_934c

dec_label_pc_934c:                                ; preds = %dec_label_pc_949c.dec_label_pc_934c_crit_edge, %dec_label_pc_9340
  %v1_9350 = phi i32 [ %v1_9350.pre, %dec_label_pc_949c.dec_label_pc_934c_crit_edge ], [ %v1_9344, %dec_label_pc_9340 ]
  store i32 %v3_9154, i32* %r3.global-to-local, align 4
  %v9_9350 = icmp eq i32 %v3_9154, %v1_9350
  store i1 %v9_9350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9350, label %dec_label_pc_94d4, label %dec_label_pc_9358

dec_label_pc_9358:                                ; preds = %dec_label_pc_94b8, %dec_label_pc_934c
  store i32 %v1_90b4, i32* %ip.global-to-local, align 4
  store i1 %v2_935c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_935c, label %dec_label_pc_9364, label %dec_label_pc_94f0

dec_label_pc_9364:                                ; preds = %dec_label_pc_9358, %dec_label_pc_94d4, %dec_label_pc_94f0
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9368 = load i32, i32* @r7, align 4
  %v1_9368 = trunc i32 %v0_9368 to i8
  %v2_9368 = load i32, i32* @r5, align 4
  %v3_9368 = add i32 %v2_9368, 10
  %v4_9368 = inttoptr i32 %v3_9368 to i8*
  store i8 %v1_9368, i8* %v4_9368, align 1
  %v0_936c = load i32, i32* @r7, align 4
  %v1_936c = trunc i32 %v0_936c to i8
  %v2_936c = load i32, i32* @r5, align 4
  %v3_936c = add i32 %v2_936c, 11
  %v4_936c = inttoptr i32 %v3_936c to i8*
  store i8 %v1_936c, i8* %v4_936c, align 1
  %v0_9370 = load i32, i32* @r5, align 4
  store i32 %v0_9370, i32* @r0, align 4
  %v2_9374 = call i32 @function_d0b8(i32 %v0_9370, i32 20)
  %v3_9374 = trunc i32 %v2_9374 to i8
  store i32 %v2_9374, i32* %r0.global-to-local, align 4
  %v4_9378 = sdiv i32 %v2_9374, 256
  store i32 %v4_9378, i32* %r3.global-to-local, align 4
  %v1_937c = trunc i32 %v4_9378 to i8
  %v2_937c = load i32, i32* @r5, align 4
  %v3_937c = add i32 %v2_937c, 11
  %v4_937c = inttoptr i32 %v3_937c to i8*
  store i8 %v1_937c, i8* %v4_937c, align 1
  %v3_9380 = load i32, i32* @r5, align 4
  %v4_9380 = add i32 %v3_9380, 10
  %v5_9380 = inttoptr i32 %v4_9380 to i8*
  store i8 %v3_9374, i8* %v5_9380, align 1
  %v0_9384 = load i32, i32* @r7, align 4
  %v1_9384 = trunc i32 %v0_9384 to i8
  %v2_9384 = load i32, i32* @r6, align 4
  %v3_9384 = add i32 %v2_9384, 6
  %v4_9384 = inttoptr i32 %v3_9384 to i8*
  store i8 %v1_9384, i8* %v4_9384, align 1
  %v0_9388 = load i32, i32* @r7, align 4
  %v1_9388 = trunc i32 %v0_9388 to i8
  %v2_9388 = load i32, i32* @r6, align 4
  %v3_9388 = add i32 %v2_9388, 7
  %v4_9388 = inttoptr i32 %v3_9388 to i8*
  store i8 %v1_9388, i8* %v4_9388, align 1
  %v0_938c = load i32, i32* @r5, align 4
  %v1_938c = add i32 %v0_938c, 24
  %v2_938c = inttoptr i32 %v1_938c to i8*
  %v3_938c = load i8, i8* %v2_938c, align 1
  %v4_938c = zext i8 %v3_938c to i32
  store i32 %v4_938c, i32* %r3.global-to-local, align 4
  %v1_9390 = add i32 %v0_938c, 25
  %v2_9390 = inttoptr i32 %v1_9390 to i8*
  %v3_9390 = load i8, i8* %v2_9390, align 1
  %v4_9390 = zext i8 %v3_9390 to i32
  %v0_9394 = load i32, i32* @r6, align 4
  store i32 %v0_9394, i32* @r1, align 4
  %v4_9398 = mul nuw nsw i32 %v4_9390, 256
  %v5_9398 = or i32 %v4_9398, %v4_938c
  store i32 %v5_9398, i32* %r2.global-to-local, align 4
  store i32 %v0_938c, i32* %r0.global-to-local, align 4
  %v0_93a0 = load i32, i32* @sb, align 4
  store i32 %v0_93a0, i32* %r3.global-to-local, align 4
  %v4_93a4 = call i32 @function_d114(i32 %v0_938c, i32 %v0_9394, i32 %v5_9398, i32 %v0_93a0)
  %v5_93a4 = trunc i32 %v4_93a4 to i8
  store i32 %v4_93a4, i32* %r0.global-to-local, align 4
  %v4_93a838 = udiv i32 %v4_93a4, 256
  %v1_93ac = trunc i32 %v4_93a838 to i8
  %v2_93ac = load i32, i32* @r6, align 4
  %v3_93ac = add i32 %v2_93ac, 7
  %v4_93ac = inttoptr i32 %v3_93ac to i8*
  store i8 %v1_93ac, i8* %v4_93ac, align 1
  %v3_93b0 = load i32, i32* @r6, align 4
  %v4_93b0 = add i32 %v3_93b0, 6
  %v5_93b0 = inttoptr i32 %v4_93b0 to i8*
  store i8 %v5_93a4, i8* %v5_93b0, align 1
  %v3_93b4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_93b4, i32* %r3.global-to-local, align 4
  %v0_93b8 = load i32, i32* @r5, align 4
  %v1_93b8 = add i32 %v0_93b8, 20
  %v2_93b8 = inttoptr i32 %v1_93b8 to i32*
  %v3_93b8 = load i32, i32* %v2_93b8, align 4
  %v3_93c0 = udiv i32 %v3_93b8, 65536
  store i32 %v3_93c0, i32* %r2.global-to-local, align 4
  %v5_93c4 = mul i32 %v3_93b4, 24
  %v1_93c8 = load i32, i32* @r8, align 4
  %v2_93c8 = add i32 %v1_93c8, %v5_93c4
  store i32 %v2_93c8, i32* %ip.global-to-local, align 4
  %v3_93cc35 = udiv i32 %v3_93b8, 16777216
  %v1_93d0 = trunc i32 %v3_93cc35 to i8
  %v3_93d0 = add i32 %v2_93c8, 3
  %v4_93d0 = inttoptr i32 %v3_93d0 to i8*
  store i8 %v1_93d0, i8* %v4_93d0, align 1
  %v0_93d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_93d4 = trunc i32 %v0_93d4 to i8
  %v2_93d4 = load i32, i32* %ip.global-to-local, align 4
  %v3_93d4 = add i32 %v2_93d4, 2
  %v4_93d4 = inttoptr i32 %v3_93d4 to i8*
  store i8 %v1_93d4, i8* %v4_93d4, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_93dc = load i32, i32* @r5, align 4
  store i32 %v0_93dc, i32* %r1.global-to-local, align 4
  store i32 %v3_90dc, i32* %r0.global-to-local, align 4
  %v0_93e4 = load i32, i32* @fp, align 4
  store i32 %v0_93e4, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_93ec = load i32, i32* %ip.global-to-local, align 4
  %v6_93f4 = inttoptr i32 %v0_93dc to i32*
  %v7_93f4 = call i32 @function_1347c(i32 %v3_90dc, i32* %v6_93f4, i32 %v0_93e4, i32 16384, i32 %v0_93ec, i32 16)
  %v3_93f8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_93f8, i32* %r3.global-to-local, align 4
  %v1_93fc = add i32 %v3_93f8, 1
  store i32 %v1_93fc, i32* %r0.global-to-local, align 4
  %v1_9400 = load i32, i32* @sl, align 4
  %v9_9400 = icmp eq i32 %v1_93fc, %v1_9400
  store i1 %v9_9400, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_93fc, i32* %stack_var_-40, align 4
  %v5_9408 = icmp slt i32 %v1_93fc, %v1_9400
  br i1 %v5_9408, label %dec_label_pc_92fc, label %dec_label_pc_940c

dec_label_pc_940c:                                ; preds = %dec_label_pc_9364
  %v2_940c = icmp eq i32 %v1_9400, 0
  store i1 %v2_940c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_92ec.outer

dec_label_pc_9418:                                ; preds = %dec_label_pc_92fc
  %v1_9418 = add i32 %v2_9304, 16
  %v2_9418 = inttoptr i32 %v1_9418 to i32*
  %v3_9418 = load i32, i32* %v2_9418, align 4
  %v0_941c = call i32 @function_e7cc()
  store i32 %v0_941c, i32* %r0.global-to-local, align 4
  %v3_9420 = load i32, i32* %stack_var_-40, align 4
  %v5_9428 = mul i32 %v3_9420, 24
  %v1_9430 = load i32, i32* @r8, align 4
  %v2_9430 = add i32 %v1_9430, %v5_9428
  store i32 %v2_9430, i32* %r1.global-to-local, align 4
  %v1_9434 = and i32 %v3_9418, 65280
  store i32 %v1_9434, i32* %r3.global-to-local, align 4
  %v1_942c = udiv i32 %v3_9418, 256
  %v3_9438 = and i32 %v1_942c, 65280
  store i32 %v3_9438, i32* %r2.global-to-local, align 4
  %v3_943c = mul i32 %v3_9418, 16777216
  store i32 %v3_943c, i32* %ip.global-to-local, align 4
  %v1_9440 = add i32 %v2_9430, 20
  %v2_9440 = inttoptr i32 %v1_9440 to i8*
  %v3_9440 = load i8, i8* %v2_9440, align 1
  %v4_9440 = zext i8 %v3_9440 to i32
  %v4_9444 = mul nuw nsw i32 %v1_9434, 256
  %v5_9444 = or i32 %v4_9444, %v3_943c
  store i32 %v5_9444, i32* %ip.global-to-local, align 4
  %v2_944c = call i32 @llvm.bswap.i32(i32 %v3_9418)
  %v7_9450 = lshr i32 %v0_941c, %v4_9440
  %v8_9450 = add i32 %v7_9450, %v2_944c
  store i32 %v8_9450, i32* %r2.global-to-local, align 4
  %v3_945c = mul i32 %v8_9450, 16777216
  %v1_9454 = mul i32 %v8_9450, 256
  %v4_9460 = and i32 %v1_9454, 16711680
  %v5_9460 = or i32 %v4_9460, %v3_945c
  store i32 %v5_9460, i32* %r1.global-to-local, align 4
  store i32 %v6_90c8, i32* %r0.global-to-local, align 4
  %v2_9470 = call i32 @llvm.bswap.i32(i32 %v8_9450)
  store i32 %v2_9470, i32* %r3.global-to-local, align 4
  store i1 %v7_9324, i1* %cpsr_z.global-to-local, align 1
  %v1_9478 = load i32, i32* @r5, align 4
  %v2_9478 = add i32 %v1_9478, 16
  %v3_9478 = inttoptr i32 %v2_9478 to i32*
  store i32 %v2_9470, i32* %v3_9478, align 4
  br i1 %v2_9324, label %dec_label_pc_9480, label %dec_label_pc_932c

dec_label_pc_9480:                                ; preds = %dec_label_pc_9418, %dec_label_pc_9320
  %v0_9480 = call i32 @function_e7cc()
  store i32 %v0_9480, i32* %r0.global-to-local, align 4
  store i32 %v3_9134, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9490, i1* %cpsr_z.global-to-local, align 1
  %v1_9494 = load i32, i32* @r5, align 4
  %v2_9494 = add i32 %v1_9494, 12
  %v3_9494 = inttoptr i32 %v2_9494 to i32*
  store i32 %v0_9480, i32* %v3_9494, align 4
  br i1 %v3_9490, label %dec_label_pc_949c, label %dec_label_pc_9480.dec_label_pc_9340_crit_edge

dec_label_pc_9480.dec_label_pc_9340_crit_edge:    ; preds = %dec_label_pc_9480
  %v1_9344.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9340

dec_label_pc_949c:                                ; preds = %dec_label_pc_9480, %dec_label_pc_932c
  %v0_949c = call i32 @function_e7cc()
  %v1_949c = trunc i32 %v0_949c to i8
  store i32 %v0_949c, i32* %r0.global-to-local, align 4
  store i32 %v3_9150, i32* %r2.global-to-local, align 4
  %v4_94a4 = sdiv i32 %v0_949c, 256
  store i32 %v4_94a4, i32* %r3.global-to-local, align 4
  %v1_94a8 = load i32, i32* @r4, align 4
  %v9_94a8 = icmp eq i32 %v3_9150, %v1_94a8
  store i1 %v9_94a8, i1* %cpsr_z.global-to-local, align 1
  %v1_94ac = trunc i32 %v4_94a4 to i8
  %v2_94ac = load i32, i32* @r5, align 4
  %v3_94ac = add i32 %v2_94ac, 5
  %v4_94ac = inttoptr i32 %v3_94ac to i8*
  store i8 %v1_94ac, i8* %v4_94ac, align 1
  %v3_94b0 = load i32, i32* @r5, align 4
  %v4_94b0 = add i32 %v3_94b0, 4
  %v5_94b0 = inttoptr i32 %v4_94b0 to i8*
  store i8 %v1_949c, i8* %v5_94b0, align 1
  %v0_94b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_94b4, label %dec_label_pc_94b8, label %dec_label_pc_949c.dec_label_pc_934c_crit_edge

dec_label_pc_949c.dec_label_pc_934c_crit_edge:    ; preds = %dec_label_pc_949c
  %v1_9350.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_934c

dec_label_pc_94b8:                                ; preds = %dec_label_pc_949c, %dec_label_pc_9340
  %v0_94b8 = call i32 @function_e7cc()
  %v1_94b8 = trunc i32 %v0_94b8 to i8
  store i32 %v0_94b8, i32* %r0.global-to-local, align 4
  %v4_94bc = sdiv i32 %v0_94b8, 256
  store i32 %v4_94bc, i32* %r3.global-to-local, align 4
  %v3_94c0 = load i32, i32* @r5, align 4
  %v4_94c0 = add i32 %v3_94c0, 20
  %v5_94c0 = inttoptr i32 %v4_94c0 to i8*
  store i8 %v1_94b8, i8* %v5_94c0, align 1
  %v0_94c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_94c4 = trunc i32 %v0_94c4 to i8
  %v2_94c4 = load i32, i32* @r6, align 4
  %v3_94c4 = add i32 %v2_94c4, 1
  %v4_94c4 = inttoptr i32 %v3_94c4 to i8*
  store i8 %v1_94c4, i8* %v4_94c4, align 1
  store i32 %v3_9154, i32* %r3.global-to-local, align 4
  %v1_94cc = load i32, i32* @r4, align 4
  %v9_94cc = icmp eq i32 %v3_9154, %v1_94cc
  store i1 %v9_94cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_94cc, label %dec_label_pc_94d4, label %dec_label_pc_9358

dec_label_pc_94d4:                                ; preds = %dec_label_pc_94b8, %dec_label_pc_934c
  %v0_94d4 = call i32 @function_e7cc()
  %v1_94d4 = trunc i32 %v0_94d4 to i8
  store i32 %v0_94d4, i32* %r0.global-to-local, align 4
  store i32 %v1_90b4, i32* %ip.global-to-local, align 4
  %v4_94dc = sdiv i32 %v0_94d4, 256
  store i32 %v4_94dc, i32* %r3.global-to-local, align 4
  store i1 %v2_935c, i1* %cpsr_z.global-to-local, align 1
  %v1_94e4 = trunc i32 %v4_94dc to i8
  %v2_94e4 = load i32, i32* @r6, align 4
  %v3_94e4 = add i32 %v2_94e4, 3
  %v4_94e4 = inttoptr i32 %v3_94e4 to i8*
  store i8 %v1_94e4, i8* %v4_94e4, align 1
  %v3_94e8 = load i32, i32* @r6, align 4
  %v4_94e8 = add i32 %v3_94e8, 2
  %v5_94e8 = inttoptr i32 %v4_94e8 to i8*
  store i8 %v1_94d4, i8* %v5_94e8, align 1
  %v0_94ec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_94ec, label %dec_label_pc_9364, label %dec_label_pc_94f0

dec_label_pc_94f0:                                ; preds = %dec_label_pc_9358, %dec_label_pc_94d4
  %v0_94f0 = load i32, i32* @r5, align 4
  %v1_94f0 = add i32 %v0_94f0, 28
  store i32 %v1_94f0, i32* %r0.global-to-local, align 4
  store i32 %v0_912c, i32* @r1, align 4
  %v1_94f8 = inttoptr i32 %v1_94f0 to i8*
  %v2_94f8 = call i32 @function_e94c(i8* %v1_94f8)
  store i32 %v2_94f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9364

dec_label_pc_9500:                                ; preds = %dec_label_pc_90ec
  store i32 %v3_90dc, i32* %r0.global-to-local, align 4
  %v1_9504 = call i32 @function_12bf0(i32 %v3_90dc)
  store i32 %v1_9504, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9508

dec_label_pc_9508:                                ; preds = %dec_label_pc_8fa0, %dec_label_pc_9500
  %v29_950c = phi i32 [ %v3_90dc, %dec_label_pc_8fa0 ], [ %v1_9504, %dec_label_pc_9500 ]
  store i32 %v18_8fa0, i32* %sb.global-to-local, align 4
  store i32 %v24_8fa0, i32* %fp.global-to-local, align 4
  ret i32 %v29_950c

dec_label_pc_9510:                                ; preds = %dec_label_pc_9170
  %v3_9514 = sext i8 %v5_91d4 to i32
  %v7_9514 = sext i8 %v5_91d8 to i32
  %v3_9518 = sdiv i32 %v3_9514, 256
  store i32 %v3_9518, i32* %r0.global-to-local, align 4
  %v3_951c = sdiv i32 %v7_9514, 256
  store i32 %v3_951c, i32* %r1.global-to-local, align 4
  store i32 %v1_91ac, i32* %r2.global-to-local, align 4
  store i32 %v1_91b0, i32* %r3.global-to-local, align 4
  %v3_952834 = udiv i32 %v1_91c8, 256
  store i32 %v3_952834, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  %v4_9594 = sext i8 %v5_9030 to i32
  %sext11 = mul i32 %v1_91a4, 16777216
  %v4_95ec = sdiv i32 %sext11, 16777216
  %sext12 = mul i32 %v0_9140, 16777216
  %v4_95f0 = sdiv i32 %sext12, 16777216
  %sext13 = mul i32 %v0_913c, 16777216
  %v4_960c = sdiv i32 %sext13, 16777216
  %v1_95f8 = trunc i32 %v3_951c to i8
  %v1_9614 = trunc i32 %v4_960c to i8
  br label %dec_label_pc_9544

dec_label_pc_9544:                                ; preds = %dec_label_pc_9544, %dec_label_pc_9510
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_9550 = call i32 @function_137cc(i32 1510, i32 1)
  store i32 %v2_9550, i32* %r0.global-to-local, align 4
  store i32 %v2_8fc0, i32* %r1.global-to-local, align 4
  %v3_9558 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9558, i32* %r2.global-to-local, align 4
  %v2_955c = load i32, i32* @r6, align 4
  %v5_955c = mul i32 %v2_955c, 4
  %v6_955c = add i32 %v5_955c, %v2_8fc0
  %v7_955c = inttoptr i32 %v6_955c to i32*
  store i32 %v2_9550, i32* %v7_955c, align 4
  %v0_9560 = load i32, i32* %r1.global-to-local, align 4
  %v1_9560 = load i32, i32* %r2.global-to-local, align 4
  %v4_9560 = mul i32 %v1_9560, 4
  %v5_9560 = add i32 %v4_9560, %v0_9560
  %v6_9560 = inttoptr i32 %v5_9560 to i32*
  %v7_9560 = load i32, i32* %v6_9560, align 4
  store i32 %v7_9560, i32* %r1.global-to-local, align 4
  %v1_9564 = inttoptr i32 %v7_9560 to i8*
  %v2_9564 = load i8, i8* %v1_9564, align 1
  %tmp85 = urem i8 %v2_9564, 16
  %v1_9568 = zext i8 %tmp85 to i32
  %v1_956c = or i32 %v1_9568, 64
  store i32 %v1_956c, i32* %r3.global-to-local, align 4
  %v1_9570 = trunc i32 %v1_956c to i8
  store i8 %v1_9570, i8* %v1_9564, align 1
  %v0_9574 = load i32, i32* %r1.global-to-local, align 4
  %v1_9574 = inttoptr i32 %v0_9574 to i8*
  %v2_9574 = load i8, i8* %v1_9574, align 1
  %v3_9574 = zext i8 %v2_9574 to i32
  %v1_9578 = and i32 %v3_9574, 240
  %v1_957c = or i32 %v1_9578, 5
  store i32 %v1_957c, i32* %r2.global-to-local, align 4
  %v3_9584 = add i32 %v0_9574, 9
  %v4_9584 = inttoptr i32 %v3_9584 to i8*
  store i8 17, i8* %v4_9584, align 1
  %v0_9588 = load i32, i32* %r2.global-to-local, align 4
  %v1_9588 = trunc i32 %v0_9588 to i8
  %v2_9588 = load i32, i32* %r1.global-to-local, align 4
  %v3_9588 = inttoptr i32 %v2_9588 to i8*
  store i8 %v1_9588, i8* %v3_9588, align 1
  %v2_9590 = load i32, i32* %r1.global-to-local, align 4
  %v3_9590 = add i32 %v2_9590, 1
  %v4_9590 = inttoptr i32 %v3_9590 to i8*
  store i8 %v5_8ff8, i8* %v4_9590, align 1
  store i32 %v4_9594, i32* %r0.global-to-local, align 4
  %v2_9598 = load i32, i32* %r1.global-to-local, align 4
  %v3_9598 = add i32 %v2_9598, 8
  %v4_9598 = inttoptr i32 %v3_9598 to i8*
  store i8 %v5_9030, i8* %v4_9598, align 1
  %v3_959c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_959c, i32* %r2.global-to-local, align 4
  store i32 %v6_90c8, i32* %ip.global-to-local, align 4
  %v3_95a4 = mul i32 %v3_959c, 32
  store i32 %v3_95a4, i32* %r3.global-to-local, align 4
  %v1_95a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_95a8 = add i32 %v1_95a8, 12
  %v3_95a8 = inttoptr i32 %v2_95a8 to i32*
  store i32 %v6_90c8, i32* %v3_95a8, align 4
  %v0_95ac = load i32, i32* %r3.global-to-local, align 4
  %v1_95ac = load i32, i32* %r2.global-to-local, align 4
  %tmp86 = mul i32 %v1_95ac, -8
  %v5_95ac = add i32 %v0_95ac, %tmp86
  %v1_95b0 = load i32, i32* @r8, align 4
  %v2_95b0 = add i32 %v5_95ac, %v1_95b0
  store i32 %v2_95b0, i32* %r3.global-to-local, align 4
  %v1_95b4 = add i32 %v2_95b0, 16
  %v2_95b4 = inttoptr i32 %v1_95b4 to i32*
  %v3_95b4 = load i32, i32* %v2_95b4, align 4
  store i32 %v3_95b4, i32* %ip.global-to-local, align 4
  %v1_95b8 = add i32 %v1_95ac, 1
  store i32 %v1_95b8, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_95c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_95c4 = add i32 %v2_95c4, 6
  %v4_95c4 = inttoptr i32 %v3_95c4 to i8*
  store i8 64, i8* %v4_95c4, align 1
  %v0_95c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_95c8 = trunc i32 %v0_95c8 to i8
  %v2_95c8 = load i32, i32* %r1.global-to-local, align 4
  %v3_95c8 = add i32 %v2_95c8, 7
  %v4_95c8 = inttoptr i32 %v3_95c8 to i8*
  store i8 %v1_95c8, i8* %v4_95c8, align 1
  %v0_95cc = load i32, i32* %ip.global-to-local, align 4
  %v1_95cc = load i32, i32* %r1.global-to-local, align 4
  %v2_95cc = add i32 %v1_95cc, 16
  %v3_95cc = inttoptr i32 %v2_95cc to i32*
  store i32 %v0_95cc, i32* %v3_95cc, align 4
  store i32 %v3_9518, i32* %r3.global-to-local, align 4
  store i32 %v7_9514, i32* %ip.global-to-local, align 4
  %v2_95dc = load i32, i32* %r1.global-to-local, align 4
  %v3_95dc = add i32 %v2_95dc, 2
  %v4_95dc = inttoptr i32 %v3_95dc to i8*
  store i8 %v5_91d4, i8* %v4_95dc, align 1
  %v0_95e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_95e0 = trunc i32 %v0_95e0 to i8
  %v2_95e0 = load i32, i32* %r1.global-to-local, align 4
  %v3_95e0 = add i32 %v2_95e0, 3
  %v4_95e0 = inttoptr i32 %v3_95e0 to i8*
  store i8 %v1_95e0, i8* %v4_95e0, align 1
  %v0_95e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_95e4 = trunc i32 %v0_95e4 to i8
  %v2_95e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_95e4 = add i32 %v2_95e4, 4
  %v4_95e4 = inttoptr i32 %v3_95e4 to i8*
  store i8 %v1_95e4, i8* %v4_95e4, align 1
  store i32 %v3_951c, i32* %r2.global-to-local, align 4
  store i32 %v4_95ec, i32* %r3.global-to-local, align 4
  store i32 %v4_95f0, i32* %ip.global-to-local, align 4
  %v0_95f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_95f4 = add i32 %v0_95f4, 20
  store i32 %v1_95f4, i32* %r0.global-to-local, align 4
  %v3_95f8 = add i32 %v0_95f4, 5
  %v4_95f8 = inttoptr i32 %v3_95f8 to i8*
  store i8 %v1_95f8, i8* %v4_95f8, align 1
  %v0_95fc = load i32, i32* @r4, align 4
  %v1_95fc = trunc i32 %v0_95fc to i8
  %v2_95fc = load i32, i32* %r1.global-to-local, align 4
  %v3_95fc = add i32 %v2_95fc, 20
  %v4_95fc = inttoptr i32 %v3_95fc to i8*
  store i8 %v1_95fc, i8* %v4_95fc, align 1
  %v0_9600 = load i32, i32* %r3.global-to-local, align 4
  %v1_9600 = trunc i32 %v0_9600 to i8
  %v2_9600 = load i32, i32* %r0.global-to-local, align 4
  %v3_9600 = add i32 %v2_9600, 5
  %v4_9600 = inttoptr i32 %v3_9600 to i8*
  store i8 %v1_9600, i8* %v4_9600, align 1
  %v0_9604 = load i32, i32* %ip.global-to-local, align 4
  %v1_9604 = trunc i32 %v0_9604 to i8
  %v2_9604 = load i32, i32* %r0.global-to-local, align 4
  %v3_9604 = add i32 %v2_9604, 1
  %v4_9604 = inttoptr i32 %v3_9604 to i8*
  store i8 %v1_9604, i8* %v4_9604, align 1
  %v0_9608 = load i32, i32* @r5, align 4
  %v1_9608 = trunc i32 %v0_9608 to i8
  %v2_9608 = load i32, i32* %r0.global-to-local, align 4
  %v3_9608 = add i32 %v2_9608, 2
  %v4_9608 = inttoptr i32 %v3_9608 to i8*
  store i8 %v1_9608, i8* %v4_9608, align 1
  store i32 %v4_960c, i32* %r1.global-to-local, align 4
  %v0_9610 = load i32, i32* @r6, align 4
  %v1_9610 = load i32, i32* @sl, align 4
  %v9_9610 = icmp eq i32 %v0_9610, %v1_9610
  store i1 %v9_9610, i1* %cpsr_z.global-to-local, align 1
  %v2_9614 = load i32, i32* %r0.global-to-local, align 4
  %v3_9614 = add i32 %v2_9614, 3
  %v4_9614 = inttoptr i32 %v3_9614 to i8*
  store i8 %v1_9614, i8* %v4_9614, align 1
  %v0_9618 = load i32, i32* @r7, align 4
  %v1_9618 = trunc i32 %v0_9618 to i8
  %v2_9618 = load i32, i32* %r0.global-to-local, align 4
  %v3_9618 = add i32 %v2_9618, 4
  %v4_9618 = inttoptr i32 %v3_9618 to i8*
  store i8 %v1_9618, i8* %v4_9618, align 1
  %v0_961c = load i32, i32* @r6, align 4
  store i32 %v0_961c, i32* %stack_var_-40, align 4
  %v5_9620 = icmp slt i32 %v0_9610, %v1_9610
  br i1 %v5_9620, label %dec_label_pc_9544, label %dec_label_pc_92e4

; uselistorder directives
  uselistorder i32 %v1_95ac, { 1, 0 }
  uselistorder i32 %v3_951c, { 2, 1, 0 }
  uselistorder i32 %v3_9518, { 1, 0 }
  uselistorder i32 %v7_9514, { 1, 0 }
  uselistorder i32 %v4_94dc, { 1, 0 }
  uselistorder i32 %v0_94d4, { 0, 2, 1 }
  uselistorder i32 %v0_94b8, { 0, 2, 1 }
  uselistorder i32 %v4_94a4, { 1, 0 }
  uselistorder i32 %v0_949c, { 0, 2, 1 }
  uselistorder i32 %v2_9470, { 1, 0 }
  uselistorder i32 %v8_9450, { 2, 0, 1, 3 }
  uselistorder i32 %v3_943c, { 1, 0 }
  uselistorder i32 %v3_9418, { 1, 3, 2, 0 }
  uselistorder i1 %v2_940c, { 1, 0 }
  uselistorder i32 %v1_9400, { 1, 2, 3, 0 }
  uselistorder i32 %v1_93fc, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_93a4, { 0, 2, 1 }
  uselistorder i32 %v0_938c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_9378, { 1, 0 }
  uselistorder i32 %v2_9374, { 0, 2, 1 }
  uselistorder i1 %v7_9324, { 2, 1, 0 }
  uselistorder i1 %v3_9490, { 1, 0, 2, 3 }
  uselistorder i8 %v5_91d4, { 0, 2, 1 }
  uselistorder i32 %v3_91c0, { 1, 0 }
  uselistorder i32 %v1_91b0, { 2, 3, 0, 1 }
  uselistorder i32 %v1_91ac, { 1, 2, 0 }
  uselistorder i32 %v1_91a4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_919c, { 1, 0 }
  uselistorder i32 %v1_9174, { 2, 1, 0, 3 }
  uselistorder i32 %v3_9154, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v3_9134, { 2, 1, 4, 3, 0 }
  uselistorder i32 %v0_9130, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v0_912c, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v3_9120, { 3, 1, 2, 0 }
  uselistorder i1 %v7_910c, { 1, 0 }
  uselistorder i1 %v7_90e0, { 1, 0 }
  uselistorder i32 %v3_90dc, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v6_90c8, { 2, 1, 7, 5, 0, 6, 4, 3 }
  uselistorder i32 %v1_90b4, { 3, 1, 2, 0 }
  uselistorder i32 %v1_9040, { 1, 0 }
  uselistorder i8 %v5_9030, { 1, 0, 2 }
  uselistorder i32 %v5_9014, { 1, 0 }
  uselistorder i8 %v5_8ff8, { 0, 2, 1 }
  uselistorder i32 %v6_8fd8, { 1, 0 }
  uselistorder i32 %v2_8fc0, { 0, 3, 1, 5, 2, 4 }
  uselistorder i32 %v1_8fa4, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 14, 13 }
  uselistorder i32* %r3.global-to-local, { 44, 45, 46, 47, 48, 49, 50, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32* %r2.global-to-local, { 39, 40, 41, 42, 43, 44, 45, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 0 }
  uselistorder i32* %r1.global-to-local, { 54, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 45, 47, 46, 48, 49, 51, 50, 53, 52, 0 }
  uselistorder i32* %r0.global-to-local, { 42, 43, 44, 45, 46, 47, 48, 4, 2, 3, 6, 5, 8, 7, 9, 10, 11, 13, 12, 15, 14, 16, 18, 17, 24, 19, 20, 21, 22, 23, 29, 25, 26, 27, 28, 1, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i32* %ip.global-to-local, { 24, 25, 26, 27, 28, 29, 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i1* %cpsr_z.global-to-local, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_9508, { 1, 0 }
  uselistorder label %dec_label_pc_94f0, { 1, 0 }
  uselistorder label %dec_label_pc_9364, { 2, 1, 0 }
  uselistorder label %dec_label_pc_92ec, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
}

define i32 @function_962c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_962c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-50 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_962c = load i32, i32* @r4, align 4
  %v15_962c = load i32, i32* @r8, align 4
  %v21_962c = load i32, i32* @sl, align 4
  %v1_9630 = urem i32 %arg1, 256
  store i32 %v1_9630, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %v1_9630, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_9648 = urem i32 %arg3, 256
  store i32 %v1_9648, i32* @r4, align 4
  %v2_964c = call i32 @function_137cc(i32 %v1_9630, i32 4)
  %v0_9650 = load i32, i32* @r5, align 4
  store i32 %v0_9650, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9660 = load i32, i32* @r4, align 4
  store i32 %v0_9660, i32* %r0.global-to-local, align 4
  %v5_9664 = inttoptr i32 %v0_9650 to i32*
  %v6_9664 = call i32 @function_85e0(i32 %v0_9660, i32* %v5_9664, i32 2, i32 0)
  %v1_9670 = urem i32 %v6_9664, 256
  store i32 %v1_9670, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_967c = load i32, i32* @r5, align 4
  store i32 %v0_967c, i32* %r1.global-to-local, align 4
  %v0_9680 = load i32, i32* @r4, align 4
  store i32 %v0_9680, i32* %r0.global-to-local, align 4
  %v5_9684 = trunc i32 %v6_9664 to i8
  %v6_9688 = inttoptr i32 %v0_967c to i32*
  %v7_9688 = call i32 @function_85e0(i32 %v0_9680, i32* %v6_9688, i32 3, i32 65535)
  %v0_968c = load i32, i32* @r5, align 4
  store i32 %v0_968c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9688, i32* @r7, align 4
  %v0_969c = load i32, i32* @r4, align 4
  store i32 %v0_969c, i32* %r0.global-to-local, align 4
  %v4_96a0 = inttoptr i32 %v0_968c to i32*
  %v5_96a0 = call i32 @function_85e0(i32 %v0_969c, i32* %v4_96a0, i32 4, i32 64)
  %v1_96a8 = urem i32 %v5_96a0, 256
  store i32 %v1_96a8, i32* %ip.global-to-local, align 4
  %v0_96ac = load i32, i32* @r5, align 4
  store i32 %v0_96ac, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_96b8 = load i32, i32* @r4, align 4
  store i32 %v0_96b8, i32* %r0.global-to-local, align 4
  %v5_96bc = trunc i32 %v5_96a0 to i8
  %v6_96c0 = inttoptr i32 %v0_96ac to i32*
  %v7_96c0 = call i32 @function_85e0(i32 %v0_96b8, i32* %v6_96c0, i32 5, i32 1)
  %v1_96cc = urem i32 %v7_96c0, 256
  store i32 %v1_96cc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_96d8 = load i32, i32* @r5, align 4
  store i32 %v0_96d8, i32* %r1.global-to-local, align 4
  %v0_96dc = load i32, i32* @r4, align 4
  store i32 %v0_96dc, i32* %r0.global-to-local, align 4
  %v5_96e4 = inttoptr i32 %v0_96d8 to i32*
  %v6_96e4 = call i32 @function_85e0(i32 %v0_96dc, i32* %v5_96e4, i32 6, i32 65535)
  %v0_96ec = load i32, i32* @r5, align 4
  store i32 %v0_96ec, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_96e4, i32* @sl, align 4
  %v0_96fc = load i32, i32* @r4, align 4
  store i32 %v0_96fc, i32* %r0.global-to-local, align 4
  %v4_9700 = inttoptr i32 %v0_96ec to i32*
  %v5_9700 = call i32 @function_85e0(i32 %v0_96fc, i32* %v4_9700, i32 7, i32 65535)
  %v0_9704 = load i32, i32* @r5, align 4
  store i32 %v0_9704, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_9700, i32* @r8, align 4
  %v0_9714 = load i32, i32* @r4, align 4
  store i32 %v0_9714, i32* %r0.global-to-local, align 4
  %v4_9718 = inttoptr i32 %v0_9704 to i32*
  %v5_9718 = call i32 @function_85e0(i32 %v0_9714, i32* %v4_9718, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9728 = load i32, i32* @r5, align 4
  store i32 %v0_9728, i32* %r1.global-to-local, align 4
  %v0_972c = load i32, i32* @r4, align 4
  store i32 %v0_972c, i32* %r0.global-to-local, align 4
  %v4_9730 = inttoptr i32 %v0_9728 to i32*
  %v5_9730 = call i32 @function_85e0(i32 %v0_972c, i32* %v4_9730, i32 1, i32 1)
  %v1_9738 = urem i32 %v5_9730, 256
  store i32 %v1_9738, i32* %ip.global-to-local, align 4
  %v0_973c = load i32, i32* @r5, align 4
  store i32 %v0_973c, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9748 = load i32, i32* @r4, align 4
  store i32 %v0_9748, i32* %r0.global-to-local, align 4
  %v5_9750 = inttoptr i32 %v0_973c to i32*
  %v6_9750 = call i32 @function_85e0(i32 %v0_9748, i32* %v5_9750, i32 19, i32 0)
  %v0_9758 = load i32, i32* @r5, align 4
  store i32 %v0_9758, i32* %r1.global-to-local, align 4
  %v2_975c = load i32, i32* @global_var_1dc68.49, align 4
  store i32 %v2_975c, i32* %r3.global-to-local, align 4
  store i32 %v6_9750, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9768 = load i32, i32* @r4, align 4
  store i32 %v0_9768, i32* %r0.global-to-local, align 4
  %v4_976c = inttoptr i32 %v0_9758 to i32*
  %v5_976c = call i32 @function_85e0(i32 %v0_9768, i32* %v4_976c, i32 25, i32 %v2_975c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_9780 = call i32 @function_134e0(i32 2, i32 3, i32 6)
  store i32 %v3_9780, i32* %r0.global-to-local, align 4
  %v7_9784 = icmp eq i32 %v3_9780, -1
  store i1 %v7_9784, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9784, label %dec_label_pc_9c68, label %dec_label_pc_9790

dec_label_pc_9790:                                ; preds = %dec_label_pc_962c
  store i32 1, i32* %stack_var_-40, align 4
  %v6_9798 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_9798, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_97ac = call i32 @function_134b0(i32 %v3_9780, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_97ac, i32* %r0.global-to-local, align 4
  %v7_97b0 = icmp eq i32 %v6_97ac, -1
  store i1 %v7_97b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_97b0, label %dec_label_pc_9c60, label %dec_label_pc_97b8

dec_label_pc_97b8:                                ; preds = %dec_label_pc_9790
  %v0_97b8 = load i32, i32* @sl, align 4
  %v3_97b8 = mul i32 %v0_97b8, 65536
  store i32 %v3_97b8, i32* %sl.global-to-local, align 4
  %v0_97bc = load i32, i32* @r8, align 4
  %v3_97bc = mul i32 %v0_97bc, 65536
  store i32 %v3_97bc, i32* %r8.global-to-local, align 4
  %v0_97c4 = load i32, i32* @r7, align 4
  %v3_97c4 = mul i32 %v0_97c4, 65536
  %v0_97c8 = load i32, i32* @r6, align 4
  %v1_97c8 = urem i32 %v0_97c8, 256
  store i32 0, i32* %stack_var_-40, align 4
  %v3_97d0 = urem i32 %v0_97c4, 65536
  store i32 %v3_97d0, i32* %r2.global-to-local, align 4
  %v3_97d4 = urem i32 %v0_97b8, 65536
  store i32 %v3_97d4, i32* %r3.global-to-local, align 4
  %v3_97d8 = urem i32 %v0_97bc, 65536
  store i32 %v3_97d8, i32* %r1.global-to-local, align 4
  %v0_97dc = load i32, i32* @fp, align 4
  %v2_97dc = icmp eq i32 %v0_97dc, 0
  store i1 %v2_97dc, i1* %cpsr_z.global-to-local, align 1
  %tmp88 = icmp slt i32 %v0_97dc, 1
  br i1 %tmp88, label %dec_label_pc_9d88, label %dec_label_pc_97fc

dec_label_pc_97fc:                                ; preds = %dec_label_pc_97b8
  %v3_9800 = mul i32 %v5_9718, 65536
  %v0_97c4.not = or i32 %v0_97c4, -65536
  %v1_9808 = xor i32 %v0_97c4.not, 65535
  %v1_9810 = add i32 %v3_9800, 4325376
  %v1_9814 = urem i32 %v0_97b8, 256
  %v3_981c = udiv i32 %v1_9810, 256
  %v1_9820 = add i32 %v3_9800, 524288
  %v1_9828 = add i32 %v3_9800, 1835008
  %v1_982c = urem i32 %v0_97bc, 256
  %v1_9830 = and i32 %v3_981c, 65280
  store i32 %v1_9830, i32* %r0.global-to-local, align 4
  %v3_9838 = udiv i32 %v1_9828, 256
  %tmp89 = mul nsw i32 %v1_9808, 256
  %v1_9850 = and i32 %v3_9838, 65280
  store i32 %v1_9850, i32* %ip.global-to-local, align 4
  %v1_9854 = and i32 %tmp89, 65280
  store i32 %v1_9854, i32* @lr, align 4
  %tmp91 = udiv i32 %v1_9808, 256
  %v4_9840 = sdiv i32 %v1_9810, 16777216
  %v5_9870 = trunc i32 %tmp91 to i8
  %v3_987c = mul nuw nsw i32 %v1_9814, 256
  %v3_9884 = ashr i32 %v1_9810, 31
  %v3_9888 = mul nuw nsw i32 %v1_982c, 256
  store i32 %v3_9888, i32* @r5, align 4
  %tmp92 = udiv i32 %v0_97b8, 256
  %v4_988c = urem i32 %tmp92, 256
  %v5_988c = or i32 %v4_988c, %v3_987c
  store i32 %v5_988c, i32* @r7, align 4
  %v3_9890 = udiv i32 %v1_9820, 256
  %tmp93 = udiv i32 %v0_97bc, 256
  %v4_9894 = urem i32 %tmp93, 256
  %v5_9894 = or i32 %v4_9894, %v3_9888
  store i32 %v5_9894, i32* %sl.global-to-local, align 4
  %v5_9898 = trunc i32 %v3_9884 to i8
  %v3_98a0 = sdiv i32 %v3_97c4, 16777216
  %v7_98a0 = sdiv i32 %v1_9828, 16777216
  %v1_98a4 = and i32 %v3_9890, 65280
  store i32 %v1_98a4, i32* @r6, align 4
  %v3_98a8 = ashr i32 %v3_97c4, 31
  %v3_98ac = ashr i32 %v1_9828, 31
  %v3_98b0 = udiv i32 %v1_9808, 65536
  %v4_98b4 = udiv i32 %v1_9820, 16777216
  %v5_98b4 = or i32 %v4_98b4, %v1_98a4
  store i32 %v5_98b4, i32* %r8.global-to-local, align 4
  store i32 %v1_9814, i32* %r1.global-to-local, align 4
  store i32 %v1_982c, i32* %r2.global-to-local, align 4
  %v3_98cc37 = udiv i32 %v1_98a4, 256
  store i32 %v3_98cc37, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_992c = sext i8 %v5_96bc to i32
  %v2_9a2c = icmp eq i32 %v1_97c8, 0
  %sext16 = mul i32 %v0_97b8, 16777216
  %v4_9a40 = sdiv i32 %sext16, 16777216
  %sext17 = mul i32 %v1_9820, 256
  %v4_9a54 = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %v0_97bc, 16777216
  %v4_9a5c = sdiv i32 %sext18, 16777216
  %v1_9a64 = trunc i32 %v4_9a54 to i8
  br label %dec_label_pc_98e0

dec_label_pc_98e0:                                ; preds = %bb105, %dec_label_pc_97fc
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_98ec = call i32 @function_137cc(i32 1510, i32 4)
  store i32 %v2_98ec, i32* %r0.global-to-local, align 4
  store i32 %v2_964c, i32* %r1.global-to-local, align 4
  %v3_98f4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_98f4, i32* %r3.global-to-local, align 4
  %v2_98f8 = load i32, i32* @r4, align 4
  %v5_98f8 = mul i32 %v2_98f8, 4
  %v6_98f8 = add i32 %v5_98f8, %v2_964c
  %v7_98f8 = inttoptr i32 %v6_98f8 to i32*
  store i32 %v2_98ec, i32* %v7_98f8, align 4
  %v0_98fc = load i32, i32* %r1.global-to-local, align 4
  %v1_98fc = load i32, i32* %r3.global-to-local, align 4
  %v4_98fc = mul i32 %v1_98fc, 4
  %v5_98fc = add i32 %v4_98fc, %v0_98fc
  %v6_98fc = inttoptr i32 %v5_98fc to i32*
  %v7_98fc = load i32, i32* %v6_98fc, align 4
  store i32 %v7_98fc, i32* %r4.global-to-local, align 4
  %v1_9900 = inttoptr i32 %v7_98fc to i8*
  %v2_9900 = load i8, i8* %v1_9900, align 1
  %tmp = urem i8 %v2_9900, 16
  %v1_9904 = zext i8 %tmp to i32
  %v1_9908 = or i32 %v1_9904, 64
  store i32 %v1_9908, i32* %r2.global-to-local, align 4
  %v1_990c = trunc i32 %v1_9908 to i8
  store i8 %v1_990c, i8* %v1_9900, align 1
  %v0_9910 = load i32, i32* %r4.global-to-local, align 4
  %v1_9910 = inttoptr i32 %v0_9910 to i8*
  %v2_9910 = load i8, i8* %v1_9910, align 1
  %v1_9914 = and i8 %v2_9910, -16
  %v1_9918 = or i8 %v1_9914, 5
  store i32 %v1_96cc, i32* %r2.global-to-local, align 4
  store i8 %v1_9918, i8* %v1_9910, align 1
  %v2_9928 = load i32, i32* %r4.global-to-local, align 4
  %v3_9928 = add i32 %v2_9928, 1
  %v4_9928 = inttoptr i32 %v3_9928 to i8*
  store i8 %v5_9684, i8* %v4_9928, align 1
  store i32 %v4_992c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_9934 = load i32, i32* %r4.global-to-local, align 4
  %v3_9934 = add i32 %v2_9934, 8
  %v4_9934 = inttoptr i32 %v3_9934 to i8*
  store i8 %v5_96bc, i8* %v4_9934, align 1
  %v0_9938 = load i32, i32* %r2.global-to-local, align 4
  %v1_9938 = load i32, i32* %ip.global-to-local, align 4
  %v9_9938 = icmp eq i32 %v0_9938, %v1_9938
  store i1 %v9_9938, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9884, i32* %r3.global-to-local, align 4
  store i32 %v4_9840, i32* %r2.global-to-local, align 4
  %v2_9944 = load i32, i32* %r4.global-to-local, align 4
  %v3_9944 = add i32 %v2_9944, 3
  %v4_9944 = inttoptr i32 %v3_9944 to i8*
  store i8 %v5_9898, i8* %v4_9944, align 1
  %v0_9948 = load i32, i32* %r2.global-to-local, align 4
  %v1_9948 = trunc i32 %v0_9948 to i8
  %v2_9948 = load i32, i32* %r4.global-to-local, align 4
  %v3_9948 = add i32 %v2_9948, 2
  %v4_9948 = inttoptr i32 %v3_9948 to i8*
  store i8 %v1_9948, i8* %v4_9948, align 1
  %v0_994c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_994c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_98e0
  store i32 %v3_98a8, i32* %r2.global-to-local, align 4
  %extract.t114 = trunc i32 %v3_98a8 to i8
  br label %bb94

bb:                                               ; preds = %dec_label_pc_98e0
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v3_98a8, i32* %r2.global-to-local, align 4
  %v3_9954 = load i32, i32* %r4.global-to-local, align 4
  %v4_9954 = add i32 %v3_9954, 6
  %v5_9954 = inttoptr i32 %v4_9954 to i8*
  store i8 64, i8* %v5_9954, align 1
  %v0_995c.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t115 = trunc i32 %v0_995c.pre to i8
  br label %bb94

bb94:                                             ; preds = %.thread, %bb
  %v3_98a8.sink.off0 = phi i8 [ %extract.t114, %.thread ], [ %extract.t115, %bb ]
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_995c = load i32, i32* %r4.global-to-local, align 4
  %v3_995c = add i32 %v2_995c, 5
  %v4_995c = inttoptr i32 %v3_995c to i8*
  store i8 %v3_98a8.sink.off0, i8* %v4_995c, align 1
  store i32 %v3_98a0, i32* %r1.global-to-local, align 4
  %v0_9964 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9964, label %bb96, label %bb95

bb95:                                             ; preds = %bb94
  %v1_9964 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_9964, i32* %r2.global-to-local, align 4
  br label %bb96

bb96:                                             ; preds = %bb94, %bb95
  %v0_9968 = load i32, i32* %r3.global-to-local, align 4
  %v1_9968 = trunc i32 %v0_9968 to i8
  %v2_9968 = load i32, i32* %r4.global-to-local, align 4
  %v3_9968 = add i32 %v2_9968, 9
  %v4_9968 = inttoptr i32 %v3_9968 to i8*
  store i8 %v1_9968, i8* %v4_9968, align 1
  %v0_996c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_996c, label %bb98, label %bb97

bb97:                                             ; preds = %bb96
  %v1_996c = load i32, i32* %r2.global-to-local, align 4
  %v2_996c = trunc i32 %v1_996c to i8
  %v3_996c = load i32, i32* %r4.global-to-local, align 4
  %v4_996c = add i32 %v3_996c, 7
  %v5_996c = inttoptr i32 %v4_996c to i8*
  store i8 %v2_996c, i8* %v5_996c, align 1
  br label %bb98

bb98:                                             ; preds = %bb96, %bb97
  %v3_9970 = load i32, i32* %stack_var_-40, align 4
  %v5_9978 = mul i32 %v3_9970, 24
  store i32 %v5_9978, i32* %r3.global-to-local, align 4
  store i32 %v5_976c, i32* %r2.global-to-local, align 4
  %v1_9980 = load i32, i32* %r4.global-to-local, align 4
  %v2_9980 = add i32 %v1_9980, 12
  %v3_9980 = inttoptr i32 %v2_9980 to i32*
  store i32 %v5_976c, i32* %v3_9980, align 4
  %v0_9984 = load i32, i32* %r3.global-to-local, align 4
  %v1_9984 = load i32, i32* @sb, align 4
  %v2_9984 = add i32 %v1_9984, %v0_9984
  store i32 %v2_9984, i32* %r3.global-to-local, align 4
  %v1_9988 = add i32 %v2_9984, 16
  %v2_9988 = inttoptr i32 %v1_9988 to i32*
  %v3_9988 = load i32, i32* %v2_9988, align 4
  store i32 %v3_9988, i32* %r2.global-to-local, align 4
  %v0_998c = load i32, i32* %r1.global-to-local, align 4
  %v1_998c = trunc i32 %v0_998c to i8
  %v2_998c = load i32, i32* %r4.global-to-local, align 4
  %v3_998c = add i32 %v2_998c, 4
  %v4_998c = inttoptr i32 %v3_998c to i8*
  store i8 %v1_998c, i8* %v4_998c, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v0_9994 = load i32, i32* %r4.global-to-local, align 4
  %v1_9994 = add i32 %v0_9994, 20
  store i32 %v1_9994, i32* %r1.global-to-local, align 4
  %v3_9998 = add i32 %v0_9994, 22
  %v4_9998 = inttoptr i32 %v3_9998 to i8*
  store i8 101, i8* %v4_9998, align 1
  %v0_999c = load i32, i32* %r2.global-to-local, align 4
  %v1_999c = load i32, i32* %r4.global-to-local, align 4
  %v2_999c = add i32 %v1_999c, 16
  %v3_999c = inttoptr i32 %v2_999c to i32*
  store i32 %v0_999c, i32* %v3_999c, align 4
  %v0_99a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_99a0 = add i32 %v0_99a0, 24
  store i32 %v1_99a0, i32* %r0.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v0_99a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_99a8 = add i32 %v0_99a8, -93
  store i32 %v1_99a8, i32* %r3.global-to-local, align 4
  %v2_99ac = load i32, i32* %r1.global-to-local, align 4
  %v3_99ac = add i32 %v2_99ac, 3
  %v4_99ac = inttoptr i32 %v3_99ac to i8*
  store i8 88, i8* %v4_99ac, align 1
  %v0_99b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_99b0 = trunc i32 %v0_99b0 to i8
  %v2_99b0 = load i32, i32* %r0.global-to-local, align 4
  %v3_99b0 = add i32 %v2_99b0, 12
  %v4_99b0 = inttoptr i32 %v3_99b0 to i8*
  store i8 %v1_99b0, i8* %v4_99b0, align 1
  %v0_99b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_99b4 = trunc i32 %v0_99b4 to i8
  %v2_99b4 = load i32, i32* %r0.global-to-local, align 4
  %v3_99b4 = add i32 %v2_99b4, 13
  %v4_99b4 = inttoptr i32 %v3_99b4 to i8*
  store i8 %v1_99b4, i8* %v4_99b4, align 1
  %v0_99b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_99b8 = add i32 %v0_99b8, 38
  %v2_99b8 = inttoptr i32 %v1_99b8 to i8*
  %v3_99b8 = load i8, i8* %v2_99b8, align 1
  %tmp116 = urem i8 %v3_99b8, 16
  %v1_99bc = zext i8 %tmp116 to i32
  %v1_99c0 = or i32 %v1_99bc, 64
  store i32 %v1_99c0, i32* %r3.global-to-local, align 4
  %v1_99c4 = trunc i32 %v1_99c0 to i8
  store i8 %v1_99c4, i8* %v2_99b8, align 1
  %v0_99c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_99c8 = add i32 %v0_99c8, 38
  %v2_99c8 = inttoptr i32 %v1_99c8 to i8*
  %v3_99c8 = load i8, i8* %v2_99c8, align 1
  %v1_99cc = and i8 %v3_99c8, -16
  %v1_99d0 = or i8 %v1_99cc, 5
  store i8 %v1_99d0, i8* %v2_99c8, align 1
  %v0_99dc = load i32, i32* %r4.global-to-local, align 4
  %v1_99dc = add i32 %v0_99dc, 38
  store i32 %v1_99dc, i32* @r5, align 4
  %v3_99e0 = add i32 %v0_99dc, 39
  %v4_99e0 = inttoptr i32 %v3_99e0 to i8*
  store i8 %v5_9684, i8* %v4_99e0, align 1
  store i32 %v7_98a0, i32* %r1.global-to-local, align 4
  store i32 %tmp91, i32* %r3.global-to-local, align 4
  store i32 %v3_98ac, i32* %r2.global-to-local, align 4
  %v2_99f0 = load i32, i32* @r5, align 4
  %v3_99f0 = add i32 %v2_99f0, 4
  %v4_99f0 = inttoptr i32 %v3_99f0 to i8*
  store i8 %v5_9870, i8* %v4_99f0, align 1
  %v0_99f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_99f4 = trunc i32 %v0_99f4 to i8
  %v2_99f4 = load i32, i32* @r5, align 4
  %v3_99f4 = add i32 %v2_99f4, 2
  %v4_99f4 = inttoptr i32 %v3_99f4 to i8*
  store i8 %v1_99f4, i8* %v4_99f4, align 1
  %v0_99f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_99f8, label %bb100, label %bb99

bb99:                                             ; preds = %bb98
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb100

bb100:                                            ; preds = %bb98, %bb99
  store i32 %v3_98b0, i32* %r1.global-to-local, align 4
  %v0_9a00 = load i32, i32* %r2.global-to-local, align 4
  %v1_9a00 = trunc i32 %v0_9a00 to i8
  %v2_9a00 = load i32, i32* @r5, align 4
  %v3_9a00 = add i32 %v2_9a00, 3
  %v4_9a00 = inttoptr i32 %v3_9a00 to i8*
  store i8 %v1_9a00, i8* %v4_9a00, align 1
  store i32 %v4_992c, i32* %r2.global-to-local, align 4
  %v0_9a08 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9a08, label %bb102, label %bb101

bb101:                                            ; preds = %bb100
  %v1_9a08 = load i32, i32* %r3.global-to-local, align 4
  %v2_9a08 = trunc i32 %v1_9a08 to i8
  %v3_9a08 = load i32, i32* @r5, align 4
  %v4_9a08 = add i32 %v3_9a08, 6
  %v5_9a08 = inttoptr i32 %v4_9a08 to i8*
  store i8 %v2_9a08, i8* %v5_9a08, align 1
  br label %bb102

bb102:                                            ; preds = %bb100, %bb101
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_9a10 = load i32, i32* %r1.global-to-local, align 4
  %v1_9a10 = trunc i32 %v0_9a10 to i8
  %v2_9a10 = load i32, i32* @r5, align 4
  %v3_9a10 = add i32 %v2_9a10, 5
  %v4_9a10 = inttoptr i32 %v3_9a10 to i8*
  store i8 %v1_9a10, i8* %v4_9a10, align 1
  %v0_9a14 = load i32, i32* %r2.global-to-local, align 4
  %v1_9a14 = trunc i32 %v0_9a14 to i8
  %v2_9a14 = load i32, i32* @r5, align 4
  %v3_9a14 = add i32 %v2_9a14, 8
  %v4_9a14 = inttoptr i32 %v3_9a14 to i8*
  store i8 %v1_9a14, i8* %v4_9a14, align 1
  %v0_9a18 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9a18, label %bb104, label %bb103

bb103:                                            ; preds = %bb102
  %v1_9a18 = load i32, i32* %ip.global-to-local, align 4
  %v2_9a18 = trunc i32 %v1_9a18 to i8
  %v3_9a18 = load i32, i32* @r5, align 4
  %v4_9a18 = add i32 %v3_9a18, 7
  %v5_9a18 = inttoptr i32 %v4_9a18 to i8*
  store i8 %v2_9a18, i8* %v5_9a18, align 1
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v0_9a1c = load i32, i32* %r3.global-to-local, align 4
  %v1_9a1c = trunc i32 %v0_9a1c to i8
  %v2_9a1c = load i32, i32* @r5, align 4
  %v3_9a1c = add i32 %v2_9a1c, 9
  %v4_9a1c = inttoptr i32 %v3_9a1c to i8*
  store i8 %v1_9a1c, i8* %v4_9a1c, align 1
  %v0_9a20 = call i32 @function_e7cc()
  store i32 %v0_9a20, i32* %r0.global-to-local, align 4
  store i32 %v1_97c8, i32* %r1.global-to-local, align 4
  store i1 %v2_9a2c, i1* %cpsr_z.global-to-local, align 1
  %v1_9a30 = sub i32 1023, %v0_9a20
  store i32 %v1_9a30, i32* %r3.global-to-local, align 4
  br i1 %v2_9a2c, label %.thread21, label %.thread22

.thread21:                                        ; preds = %bb104
  %v2_9a38 = load i32, i32* @r5, align 4
  %v3_9a38 = add i32 %v2_9a38, 16
  %v4_9a38 = inttoptr i32 %v3_9a38 to i32*
  store i32 %v1_9a30, i32* %v4_9a38, align 4
  br label %bb105

.thread22:                                        ; preds = %bb104
  %v1_9a34 = load i32, i32* %r4.global-to-local, align 4
  %v2_9a34 = add i32 %v1_9a34, 16
  %v3_9a34 = inttoptr i32 %v2_9a34 to i32*
  %v4_9a34 = load i32, i32* %v3_9a34, align 4
  store i32 %v4_9a34, i32* %r3.global-to-local, align 4
  %v2_9a3c = load i32, i32* @r5, align 4
  %v3_9a3c = add i32 %v2_9a3c, 16
  %v4_9a3c = inttoptr i32 %v3_9a3c to i32*
  store i32 %v4_9a34, i32* %v4_9a3c, align 4
  br label %bb105

bb105:                                            ; preds = %.thread21, %.thread22
  store i32 %v4_9a40, i32* %r3.global-to-local, align 4
  %v0_9a44 = load i32, i32* %r4.global-to-local, align 4
  %v1_9a44 = add i32 %v0_9a44, 58
  store i32 %v1_9a44, i32* @r6, align 4
  %v1_9a48 = load i32, i32* @r5, align 4
  %v2_9a48 = add i32 %v1_9a48, 12
  %v3_9a48 = inttoptr i32 %v2_9a48 to i32*
  store i32 %v0_9a20, i32* %v3_9a48, align 4
  %v0_9a4c = load i32, i32* %r3.global-to-local, align 4
  %v1_9a4c = trunc i32 %v0_9a4c to i8
  %v2_9a4c = load i32, i32* @r6, align 4
  %v3_9a4c = add i32 %v2_9a4c, 1
  %v4_9a4c = inttoptr i32 %v3_9a4c to i8*
  store i8 %v1_9a4c, i8* %v4_9a4c, align 1
  %v3_9a50 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9a50, i32* %r3.global-to-local, align 4
  store i32 %v4_9a54, i32* %r2.global-to-local, align 4
  %v1_9a58 = add i32 %v3_9a50, 1
  store i32 %v1_9a58, i32* @r4, align 4
  store i32 %v4_9a5c, i32* %r1.global-to-local, align 4
  %v1_9a60 = load i32, i32* @fp, align 4
  %v9_9a60 = icmp eq i32 %v1_9a58, %v1_9a60
  store i1 %v9_9a60, i1* %cpsr_z.global-to-local, align 1
  %v2_9a64 = load i32, i32* @r6, align 4
  %v3_9a64 = add i32 %v2_9a64, 5
  %v4_9a64 = inttoptr i32 %v3_9a64 to i8*
  store i8 %v1_9a64, i8* %v4_9a64, align 1
  %v0_9a68 = load i32, i32* @r7, align 4
  %v1_9a68 = trunc i32 %v0_9a68 to i8
  %v2_9a68 = load i32, i32* @r6, align 4
  %v3_9a68 = inttoptr i32 %v2_9a68 to i8*
  store i8 %v1_9a68, i8* %v3_9a68, align 1
  %v0_9a6c = load i32, i32* %sl.global-to-local, align 4
  %v1_9a6c = trunc i32 %v0_9a6c to i8
  %v2_9a6c = load i32, i32* @r6, align 4
  %v3_9a6c = add i32 %v2_9a6c, 2
  %v4_9a6c = inttoptr i32 %v3_9a6c to i8*
  store i8 %v1_9a6c, i8* %v4_9a6c, align 1
  %v0_9a70 = load i32, i32* %r1.global-to-local, align 4
  %v1_9a70 = trunc i32 %v0_9a70 to i8
  %v2_9a70 = load i32, i32* @r6, align 4
  %v3_9a70 = add i32 %v2_9a70, 3
  %v4_9a70 = inttoptr i32 %v3_9a70 to i8*
  store i8 %v1_9a70, i8* %v4_9a70, align 1
  %v0_9a74 = load i32, i32* %r8.global-to-local, align 4
  %v1_9a74 = trunc i32 %v0_9a74 to i8
  %v2_9a74 = load i32, i32* @r6, align 4
  %v3_9a74 = add i32 %v2_9a74, 4
  %v4_9a74 = inttoptr i32 %v3_9a74 to i8*
  store i8 %v1_9a74, i8* %v4_9a74, align 1
  %v0_9a78 = load i32, i32* @r4, align 4
  store i32 %v0_9a78, i32* %stack_var_-40, align 4
  %v5_9a7c = icmp slt i32 %v1_9a58, %v1_9a60
  br i1 %v5_9a7c, label %dec_label_pc_98e0, label %dec_label_pc_9a80

dec_label_pc_9a80:                                ; preds = %bb105
  %v1_9a88 = add i32 %v5_9718, 8
  store i32 %v1_9a88, i32* %r2.global-to-local, align 4
  %v1_9a8c = add i32 %v5_9718, 66
  store i32 %v1_9a8c, i32* %r3.global-to-local, align 4
  %v0_9a98.pre.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_9a98.preheader

dec_label_pc_9a98.preheader:                      ; preds = %dec_label_pc_9a80, %dec_label_pc_9d88
  %v0_9a98.pre = phi i32 [ %v0_9a98.pre.pre, %dec_label_pc_9a80 ], [ %v0_97dc, %dec_label_pc_9d88 ]
  %stack_var_-160.0.ph = phi i32 [ %v1_9a8c, %dec_label_pc_9a80 ], [ %v1_9d94, %dec_label_pc_9d88 ]
  %stack_var_-156.0.ph = phi i32 [ %v1_9a88, %dec_label_pc_9a80 ], [ %v1_9d90, %dec_label_pc_9d88 ]
  %v3_9ce8 = icmp eq i32 %v3_97d0, 65535
  %v2_9d58 = icmp eq i32 %v1_97c8, 0
  %v2_9b3c = ptrtoint i32* %stack_var_-44 to i32
  %v2_9b54 = ptrtoint i32* %stack_var_-48 to i32
  %v2_9b64 = ptrtoint i32* %stack_var_-52 to i32
  %v2_9b70 = ptrtoint i32* %stack_var_-50 to i32
  %v2_9b84 = icmp eq i32 %v1_9738, 0
  %v2_9ae0 = icmp eq i32 %v5_976c, -1
  %v7_9ae0 = icmp eq i32 %v5_976c, -1
  br label %dec_label_pc_9a98

dec_label_pc_9a98:                                ; preds = %dec_label_pc_9b8c, %dec_label_pc_9a98.preheader
  %v0_9a98 = phi i32 [ %v0_9a98.pre, %dec_label_pc_9a98.preheader ], [ %v1_9c50, %dec_label_pc_9b8c ]
  %v2_9a98 = icmp eq i32 %v0_9a98, 0
  store i1 %v2_9a98, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp106 = icmp slt i32 %v0_9a98, 1
  br label %dec_label_pc_9aa0

dec_label_pc_9aa0:                                ; preds = %dec_label_pc_9aa0, %dec_label_pc_9a98
  br i1 %tmp106, label %dec_label_pc_9aa0, label %dec_label_pc_9aa4

dec_label_pc_9aa4:                                ; preds = %dec_label_pc_9aa0
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  br label %dec_label_pc_9ab0

dec_label_pc_9ab0:                                ; preds = %dec_label_pc_9b8c, %dec_label_pc_9aa4
  %v1_9ac4 = phi i32 [ %v1_9c4c, %dec_label_pc_9b8c ], [ 0, %dec_label_pc_9aa4 ]
  %v5_9ab4 = mul i32 %v1_9ac4, 24
  %v1_9ab8 = load i32, i32* @sb, align 4
  %v2_9ab8 = add i32 %v1_9ab8, %v5_9ab4
  store i32 %v2_9ab8, i32* %r3.global-to-local, align 4
  store i32 %v2_964c, i32* %r1.global-to-local, align 4
  %v1_9ac0 = add i32 %v2_9ab8, 20
  %v2_9ac0 = inttoptr i32 %v1_9ac0 to i8*
  %v3_9ac0 = load i8, i8* %v2_9ac0, align 1
  %v4_9ac0 = zext i8 %v3_9ac0 to i32
  store i32 %v4_9ac0, i32* %r2.global-to-local, align 4
  %v4_9ac4 = mul i32 %v1_9ac4, 4
  %v5_9ac4 = add i32 %v4_9ac4, %v2_964c
  %v6_9ac4 = inttoptr i32 %v5_9ac4 to i32*
  %v7_9ac4 = load i32, i32* %v6_9ac4, align 4
  store i32 %v7_9ac4, i32* @r5, align 4
  %v7_9ac8 = icmp eq i8 %v3_9ac0, 31
  store i1 %v7_9ac8, i1* %cpsr_z.global-to-local, align 1
  %v1_9acc = add i32 %v7_9ac4, 24
  store i32 %v1_9acc, i32* @r8, align 4
  %v1_9ad0 = add i32 %v7_9ac4, 38
  store i32 %v1_9ad0, i32* @r6, align 4
  %v1_9ad4 = add i32 %v7_9ac4, 58
  store i32 %v1_9ad4, i32* @r7, align 4
  %tmp117 = icmp ult i8 %v3_9ac0, 32
  br i1 %tmp117, label %dec_label_pc_9c70, label %dec_label_pc_9adc

dec_label_pc_9adc:                                ; preds = %dec_label_pc_9ab0
  store i32 %v5_976c, i32* %r2.global-to-local, align 4
  store i1 %v7_9ae0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9ae0, label %dec_label_pc_9cd8, label %dec_label_pc_9ae8

dec_label_pc_9ae8:                                ; preds = %dec_label_pc_9c70, %dec_label_pc_9adc
  store i32 %v3_97d0, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9ce8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9ce8, label %dec_label_pc_9cf4, label %dec_label_pc_9afc

dec_label_pc_9afc:                                ; preds = %dec_label_pc_9cd8.dec_label_pc_9afc_crit_edge, %dec_label_pc_9ae8
  %v1_9b00 = phi i32 [ %v1_9b00.pre, %dec_label_pc_9cd8.dec_label_pc_9afc_crit_edge ], [ 65535, %dec_label_pc_9ae8 ]
  store i32 %v3_97d4, i32* %r1.global-to-local, align 4
  %v9_9b00 = icmp eq i32 %v3_97d4, %v1_9b00
  store i1 %v9_9b00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9b00, label %dec_label_pc_9d2c, label %dec_label_pc_9b08

dec_label_pc_9b08:                                ; preds = %dec_label_pc_9cf4.dec_label_pc_9b08_crit_edge, %dec_label_pc_9afc
  %v1_9b0c = phi i32 [ %v1_9b0c.pre, %dec_label_pc_9cf4.dec_label_pc_9b08_crit_edge ], [ %v1_9b00, %dec_label_pc_9afc ]
  store i32 %v3_97d8, i32* %r2.global-to-local, align 4
  %v9_9b0c = icmp eq i32 %v3_97d8, %v1_9b0c
  store i1 %v9_9b0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9b0c, label %dec_label_pc_9d48, label %dec_label_pc_9b14

dec_label_pc_9b14:                                ; preds = %dec_label_pc_9d2c, %dec_label_pc_9b08
  store i32 %v1_97c8, i32* %r3.global-to-local, align 4
  store i1 %v2_9d58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9d58, label %dec_label_pc_9d6c, label %.thread23

.thread23:                                        ; preds = %dec_label_pc_9b14
  %v1_9b1c = load i32, i32* @r5, align 4
  %v2_9b1c = add i32 %v1_9b1c, 16
  %v3_9b1c = inttoptr i32 %v2_9b1c to i32*
  %v4_9b1c = load i32, i32* %v3_9b1c, align 4
  store i32 %v4_9b1c, i32* %r3.global-to-local, align 4
  %v2_9b20 = load i32, i32* @r6, align 4
  %v3_9b20 = add i32 %v2_9b20, 16
  %v4_9b20 = inttoptr i32 %v3_9b20 to i32*
  store i32 %v4_9b1c, i32* %v4_9b20, align 4
  br label %dec_label_pc_9b28

dec_label_pc_9b28:                                ; preds = %bb109, %.thread23, %dec_label_pc_9d6c
  %v0_9b28 = call i32 @function_e7cc()
  store i32 %v0_9b28, i32* %r0.global-to-local, align 4
  store i32 %v0_9b28, i32* %stack_var_-44, align 4
  %v0_9b30 = call i32 @function_e7cc()
  store i32 %v0_9b30, i32* %r0.global-to-local, align 4
  store i32 %v0_9b30, i32* %stack_var_-48, align 4
  %v0_9b38 = call i32 @function_e7cc()
  store i32 %v2_9b3c, i32* %r1.global-to-local, align 4
  store i32 %v0_9b38, i32* %stack_var_-52, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_9b48 = load i32, i32* @r8, align 4
  store i32 %v0_9b48, i32* %r0.global-to-local, align 4
  %v3_9b4c = call i32 @function_12368(i32 %v0_9b48, i32 %v2_9b3c, i32 4)
  %v0_9b50 = load i32, i32* @r8, align 4
  %v1_9b50 = add i32 %v0_9b50, 6
  store i32 %v1_9b50, i32* %r0.global-to-local, align 4
  store i32 %v2_9b54, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_9b5c = call i32 @function_12368(i32 %v1_9b50, i32 %v2_9b54, i32 4)
  %v0_9b60 = load i32, i32* @r8, align 4
  %v1_9b60 = add i32 %v0_9b60, 4
  store i32 %v1_9b60, i32* %r0.global-to-local, align 4
  store i32 %v2_9b64, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_9b6c = call i32 @function_12368(i32 %v1_9b60, i32 %v2_9b64, i32 2)
  store i32 %v2_9b70, i32* %r1.global-to-local, align 4
  %v0_9b74 = load i32, i32* @r8, align 4
  %v1_9b74 = add i32 %v0_9b74, 10
  store i32 %v1_9b74, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_9b7c = call i32 @function_12368(i32 %v1_9b74, i32 %v2_9b70, i32 2)
  store i32 %v3_9b7c, i32* %r0.global-to-local, align 4
  store i32 %v1_9738, i32* %r1.global-to-local, align 4
  store i1 %v2_9b84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9b84, label %dec_label_pc_9b8c, label %dec_label_pc_9d78

dec_label_pc_9b8c:                                ; preds = %dec_label_pc_9b28, %dec_label_pc_9d78
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9b90 = load i32, i32* @sl, align 4
  %v1_9b90 = trunc i32 %v0_9b90 to i8
  %v2_9b90 = load i32, i32* @r5, align 4
  %v3_9b90 = add i32 %v2_9b90, 10
  %v4_9b90 = inttoptr i32 %v3_9b90 to i8*
  store i8 %v1_9b90, i8* %v4_9b90, align 1
  %v0_9b94 = load i32, i32* @sl, align 4
  %v1_9b94 = trunc i32 %v0_9b94 to i8
  %v2_9b94 = load i32, i32* @r5, align 4
  %v3_9b94 = add i32 %v2_9b94, 11
  %v4_9b94 = inttoptr i32 %v3_9b94 to i8*
  store i8 %v1_9b94, i8* %v4_9b94, align 1
  %v0_9b98 = load i32, i32* @r5, align 4
  store i32 %v0_9b98, i32* @r0, align 4
  %v2_9b9c = call i32 @function_d0b8(i32 %v0_9b98, i32 20)
  %v3_9b9c = trunc i32 %v2_9b9c to i8
  %v4_9ba0 = sdiv i32 %v2_9b9c, 256
  store i32 %v4_9ba0, i32* %r3.global-to-local, align 4
  %v1_9ba4 = trunc i32 %v4_9ba0 to i8
  %v2_9ba4 = load i32, i32* @r5, align 4
  %v3_9ba4 = add i32 %v2_9ba4, 11
  %v4_9ba4 = inttoptr i32 %v3_9ba4 to i8*
  store i8 %v1_9ba4, i8* %v4_9ba4, align 1
  %v3_9ba8 = load i32, i32* @r5, align 4
  %v4_9ba8 = add i32 %v3_9ba8, 10
  %v5_9ba8 = inttoptr i32 %v4_9ba8 to i8*
  store i8 %v3_9b9c, i8* %v5_9ba8, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9bb0 = load i32, i32* @sl, align 4
  %v1_9bb0 = trunc i32 %v0_9bb0 to i8
  %v2_9bb0 = load i32, i32* @r6, align 4
  %v3_9bb0 = add i32 %v2_9bb0, 10
  %v4_9bb0 = inttoptr i32 %v3_9bb0 to i8*
  store i8 %v1_9bb0, i8* %v4_9bb0, align 1
  %v0_9bb4 = load i32, i32* @sl, align 4
  %v1_9bb4 = trunc i32 %v0_9bb4 to i8
  %v2_9bb4 = load i32, i32* @r6, align 4
  %v3_9bb4 = add i32 %v2_9bb4, 11
  %v4_9bb4 = inttoptr i32 %v3_9bb4 to i8*
  store i8 %v1_9bb4, i8* %v4_9bb4, align 1
  %v0_9bb8 = load i32, i32* @r6, align 4
  store i32 %v0_9bb8, i32* @r0, align 4
  %v2_9bbc = call i32 @function_d0b8(i32 %v0_9bb8, i32 20)
  %v3_9bbc = trunc i32 %v2_9bbc to i8
  store i32 %v2_9bbc, i32* %r0.global-to-local, align 4
  %v4_9bc0 = sdiv i32 %v2_9bbc, 256
  store i32 %v4_9bc0, i32* %r3.global-to-local, align 4
  %v3_9bc4 = load i32, i32* @r6, align 4
  %v4_9bc4 = add i32 %v3_9bc4, 10
  %v5_9bc4 = inttoptr i32 %v4_9bc4 to i8*
  store i8 %v3_9bbc, i8* %v5_9bc4, align 1
  %v0_9bc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_9bc8 = trunc i32 %v0_9bc8 to i8
  %v2_9bc8 = load i32, i32* @r6, align 4
  %v3_9bc8 = add i32 %v2_9bc8, 11
  %v4_9bc8 = inttoptr i32 %v3_9bc8 to i8*
  store i8 %v1_9bc8, i8* %v4_9bc8, align 1
  %v0_9bcc = load i32, i32* @r7, align 4
  %v1_9bcc = add i32 %v0_9bcc, 4
  %v2_9bcc = inttoptr i32 %v1_9bcc to i8*
  %v3_9bcc = load i8, i8* %v2_9bcc, align 1
  %v4_9bcc = zext i8 %v3_9bcc to i32
  store i32 %v4_9bcc, i32* %r3.global-to-local, align 4
  %v1_9bd0 = add i32 %v0_9bcc, 5
  %v2_9bd0 = inttoptr i32 %v1_9bd0 to i8*
  %v3_9bd0 = load i8, i8* %v2_9bd0, align 1
  %v4_9bd0 = zext i8 %v3_9bd0 to i32
  store i32 %v0_9bcc, i32* @r1, align 4
  %v4_9bd8 = mul nuw nsw i32 %v4_9bd0, 256
  %v5_9bd8 = or i32 %v4_9bd8, %v4_9bcc
  store i32 %v5_9bd8, i32* %r2.global-to-local, align 4
  %v0_9bdc = load i32, i32* @sl, align 4
  %v1_9bdc = trunc i32 %v0_9bdc to i8
  %v3_9bdc = add i32 %v0_9bcc, 6
  %v4_9bdc = inttoptr i32 %v3_9bdc to i8*
  store i8 %v1_9bdc, i8* %v4_9bdc, align 1
  store i32 %stack_var_-156.0.ph, i32* %r3.global-to-local, align 4
  %v0_9be4 = load i32, i32* @sl, align 4
  %v1_9be4 = trunc i32 %v0_9be4 to i8
  %v2_9be4 = load i32, i32* @r7, align 4
  %v3_9be4 = add i32 %v2_9be4, 7
  %v4_9be4 = inttoptr i32 %v3_9be4 to i8*
  store i8 %v1_9be4, i8* %v4_9be4, align 1
  %v0_9be8 = load i32, i32* @r6, align 4
  store i32 %v0_9be8, i32* %r0.global-to-local, align 4
  %v4_9bec = call i32 @function_d114(i32 %v0_9be8, i32 %v0_9bcc, i32 %v5_9bd8, i32 %stack_var_-156.0.ph)
  %v5_9bec = trunc i32 %v4_9bec to i8
  store i32 %v4_9bec, i32* %r0.global-to-local, align 4
  %v3_9bf0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9bf0, i32* %r3.global-to-local, align 4
  %v3_9bf4 = mul i32 %v3_9bf0, 32
  store i32 %v3_9bf4, i32* %r2.global-to-local, align 4
  %v0_9bf8 = load i32, i32* @r5, align 4
  %v1_9bf8 = add i32 %v0_9bf8, 16
  %v2_9bf8 = inttoptr i32 %v1_9bf8 to i32*
  %v3_9bf8 = load i32, i32* %v2_9bf8, align 4
  store i32 %v3_9bf8, i32* %r1.global-to-local, align 4
  %v5_9bfc = mul i32 %v3_9bf0, 24
  store i32 %v5_9bfc, i32* %r2.global-to-local, align 4
  %v4_9c0042 = udiv i32 %v4_9bec, 256
  %v1_9c04 = trunc i32 %v4_9c0042 to i8
  %v2_9c04 = load i32, i32* @r7, align 4
  %v3_9c04 = add i32 %v2_9c04, 7
  %v4_9c04 = inttoptr i32 %v3_9c04 to i8*
  store i8 %v1_9c04, i8* %v4_9c04, align 1
  %v0_9c08 = load i32, i32* %r2.global-to-local, align 4
  %v1_9c08 = load i32, i32* @sb, align 4
  %v2_9c08 = add i32 %v1_9c08, %v0_9c08
  store i32 %v2_9c08, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_9c10 = load i32, i32* @r7, align 4
  %v4_9c10 = add i32 %v3_9c10, 6
  %v5_9c10 = inttoptr i32 %v4_9c10 to i8*
  store i8 %v5_9bec, i8* %v5_9c10, align 1
  %v0_9c14 = load i32, i32* %r1.global-to-local, align 4
  %v1_9c14 = load i32, i32* %lr.global-to-local, align 4
  %v2_9c14 = add i32 %v1_9c14, 4
  %v3_9c14 = inttoptr i32 %v2_9c14 to i32*
  store i32 %v0_9c14, i32* %v3_9c14, align 4
  %v0_9c18 = load i32, i32* %r3.global-to-local, align 4
  %v1_9c18 = trunc i32 %v0_9c18 to i8
  %v2_9c18 = load i32, i32* %r2.global-to-local, align 4
  %v3_9c18 = load i32, i32* @sb, align 4
  %v4_9c18 = add i32 %v3_9c18, %v2_9c18
  %v5_9c18 = inttoptr i32 %v4_9c18 to i8*
  store i8 %v1_9c18, i8* %v5_9c18, align 1
  %v0_9c1c = load i32, i32* @sl, align 4
  %v1_9c1c = trunc i32 %v0_9c1c to i8
  %v2_9c1c = load i32, i32* %lr.global-to-local, align 4
  %v3_9c1c = add i32 %v2_9c1c, 2
  %v4_9c1c = inttoptr i32 %v3_9c1c to i8*
  store i8 %v1_9c1c, i8* %v4_9c1c, align 1
  %v0_9c20 = load i32, i32* @sl, align 4
  %v1_9c20 = trunc i32 %v0_9c20 to i8
  %v2_9c20 = load i32, i32* %lr.global-to-local, align 4
  %v3_9c20 = add i32 %v2_9c20, 1
  %v4_9c20 = inttoptr i32 %v3_9c20 to i8*
  store i8 %v1_9c20, i8* %v4_9c20, align 1
  %v0_9c24 = load i32, i32* @sl, align 4
  %v1_9c24 = trunc i32 %v0_9c24 to i8
  %v2_9c24 = load i32, i32* %lr.global-to-local, align 4
  %v3_9c24 = add i32 %v2_9c24, 3
  %v4_9c24 = inttoptr i32 %v3_9c24 to i8*
  store i8 %v1_9c24, i8* %v4_9c24, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_9c30 = load i32, i32* @r5, align 4
  store i32 %v0_9c30, i32* %r1.global-to-local, align 4
  store i32 %v3_9780, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-160.0.ph, i32* %r2.global-to-local, align 4
  %v0_9c3c = load i32, i32* %lr.global-to-local, align 4
  %v6_9c44 = inttoptr i32 %v0_9c30 to i32*
  %v7_9c44 = call i32 @function_1347c(i32 %v3_9780, i32* %v6_9c44, i32 %stack_var_-160.0.ph, i32 16384, i32 %v0_9c3c, i32 16)
  %v3_9c48 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9c48, i32* %r3.global-to-local, align 4
  %v1_9c4c = add i32 %v3_9c48, 1
  store i32 %v1_9c4c, i32* %r0.global-to-local, align 4
  %v1_9c50 = load i32, i32* @fp, align 4
  %v9_9c50 = icmp eq i32 %v1_9c4c, %v1_9c50
  store i1 %v9_9c50, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9c4c, i32* %stack_var_-40, align 4
  %v6_9c58 = icmp slt i32 %v1_9c4c, %v1_9c50
  br i1 %v6_9c58, label %dec_label_pc_9ab0, label %dec_label_pc_9a98

dec_label_pc_9c60:                                ; preds = %dec_label_pc_9790
  store i32 %v3_9780, i32* %r0.global-to-local, align 4
  %v1_9c64 = call i32 @function_12bf0(i32 %v3_9780)
  store i32 %v1_9c64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9c68

dec_label_pc_9c68:                                ; preds = %dec_label_pc_962c, %dec_label_pc_9c60
  %v29_9c6c = phi i32 [ %v3_9780, %dec_label_pc_962c ], [ %v1_9c64, %dec_label_pc_9c60 ]
  store i32 %v3_962c, i32* %r4.global-to-local, align 4
  store i32 %v15_962c, i32* %r8.global-to-local, align 4
  store i32 %v21_962c, i32* %sl.global-to-local, align 4
  ret i32 %v29_9c6c

dec_label_pc_9c70:                                ; preds = %dec_label_pc_9ab0
  %v1_9c70 = add i32 %v2_9ab8, 16
  %v2_9c70 = inttoptr i32 %v1_9c70 to i32*
  %v3_9c70 = load i32, i32* %v2_9c70, align 4
  store i32 %v3_9c70, i32* %r4.global-to-local, align 4
  %v0_9c74 = call i32 @function_e7cc()
  store i32 %v0_9c74, i32* %r0.global-to-local, align 4
  %v3_9c78 = load i32, i32* %stack_var_-40, align 4
  %v5_9c80 = mul i32 %v3_9c78, 24
  %v0_9c84 = load i32, i32* %r4.global-to-local, align 4
  %v1_9c88 = load i32, i32* @sb, align 4
  %v2_9c88 = add i32 %v1_9c88, %v5_9c80
  store i32 %v2_9c88, i32* %r1.global-to-local, align 4
  %v1_9c8c = and i32 %v0_9c84, 65280
  store i32 %v1_9c8c, i32* %r3.global-to-local, align 4
  %v1_9c84 = udiv i32 %v0_9c84, 256
  %v3_9c90 = and i32 %v1_9c84, 65280
  store i32 %v3_9c90, i32* %r2.global-to-local, align 4
  %v3_9c94 = mul i32 %v0_9c84, 16777216
  store i32 %v3_9c94, i32* %ip.global-to-local, align 4
  %v1_9c98 = add i32 %v2_9c88, 20
  %v2_9c98 = inttoptr i32 %v1_9c98 to i8*
  %v3_9c98 = load i8, i8* %v2_9c98, align 1
  %v4_9c98 = zext i8 %v3_9c98 to i32
  store i32 %v4_9c98, i32* %lr.global-to-local, align 4
  %v4_9c9c = mul nuw nsw i32 %v1_9c8c, 256
  %v5_9c9c = or i32 %v4_9c9c, %v3_9c94
  store i32 %v5_9c9c, i32* %ip.global-to-local, align 4
  %v2_9ca4 = call i32 @llvm.bswap.i32(i32 %v0_9c84)
  %v7_9ca8 = lshr i32 %v0_9c74, %v4_9c98
  %v8_9ca8 = add i32 %v7_9ca8, %v2_9ca4
  %v3_9cb4 = mul i32 %v8_9ca8, 16777216
  %v1_9cb8 = and i32 %v8_9ca8, 65280
  store i32 %v1_9cb8, i32* %r0.global-to-local, align 4
  store i32 %v5_976c, i32* %r2.global-to-local, align 4
  %v4_9cc4 = mul nuw nsw i32 %v1_9cb8, 256
  %v5_9cc4 = or i32 %v4_9cc4, %v3_9cb4
  store i32 %v5_9cc4, i32* %r1.global-to-local, align 4
  %v2_9cc8 = call i32 @llvm.bswap.i32(i32 %v8_9ca8)
  store i32 %v2_9cc8, i32* %r3.global-to-local, align 4
  store i1 %v7_9ae0, i1* %cpsr_z.global-to-local, align 1
  %v1_9cd0 = load i32, i32* @r5, align 4
  %v2_9cd0 = add i32 %v1_9cd0, 16
  %v3_9cd0 = inttoptr i32 %v2_9cd0 to i32*
  store i32 %v2_9cc8, i32* %v3_9cd0, align 4
  br i1 %v2_9ae0, label %dec_label_pc_9cd8, label %dec_label_pc_9ae8

dec_label_pc_9cd8:                                ; preds = %dec_label_pc_9c70, %dec_label_pc_9adc
  %v0_9cd8 = call i32 @function_e7cc()
  store i32 %v0_9cd8, i32* %r0.global-to-local, align 4
  store i32 %v3_97d0, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9ce8, i1* %cpsr_z.global-to-local, align 1
  %v1_9cec = load i32, i32* @r5, align 4
  %v2_9cec = add i32 %v1_9cec, 12
  %v3_9cec = inttoptr i32 %v2_9cec to i32*
  store i32 %v0_9cd8, i32* %v3_9cec, align 4
  br i1 %v3_9ce8, label %dec_label_pc_9cf4, label %dec_label_pc_9cd8.dec_label_pc_9afc_crit_edge

dec_label_pc_9cd8.dec_label_pc_9afc_crit_edge:    ; preds = %dec_label_pc_9cd8
  %v1_9b00.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9afc

dec_label_pc_9cf4:                                ; preds = %dec_label_pc_9cd8, %dec_label_pc_9ae8
  %v0_9cf4 = call i32 @function_e7cc()
  %v3_9cfc = urem i32 %v0_9cf4, 65536
  store i32 %v3_9cfc, i32* %r0.global-to-local, align 4
  %v1_9d04 = sub nsw i32 999, %v3_9cfc
  store i32 %v1_9d04, i32* %r2.global-to-local, align 4
  %v3_9d08 = sdiv i32 %v1_9d04, 256
  store i32 %v3_9d08, i32* %r1.global-to-local, align 4
  %v3_9d0c39 = udiv i32 %v3_9cfc, 256
  store i32 %v3_9d0c39, i32* %r3.global-to-local, align 4
  %v1_9d10 = trunc i32 %v3_9d0c39 to i8
  %v2_9d10 = load i32, i32* @r5, align 4
  %v3_9d10 = add i32 %v2_9d10, 5
  %v4_9d10 = inttoptr i32 %v3_9d10 to i8*
  store i8 %v1_9d10, i8* %v4_9d10, align 1
  %v0_9d14 = load i32, i32* %r0.global-to-local, align 4
  %v1_9d14 = trunc i32 %v0_9d14 to i8
  %v2_9d14 = load i32, i32* @r5, align 4
  %v3_9d14 = add i32 %v2_9d14, 4
  %v4_9d14 = inttoptr i32 %v3_9d14 to i8*
  store i8 %v1_9d14, i8* %v4_9d14, align 1
  %v0_9d18 = load i32, i32* %r1.global-to-local, align 4
  %v1_9d18 = trunc i32 %v0_9d18 to i8
  %v2_9d18 = load i32, i32* @r6, align 4
  %v3_9d18 = add i32 %v2_9d18, 5
  %v4_9d18 = inttoptr i32 %v3_9d18 to i8*
  store i8 %v1_9d18, i8* %v4_9d18, align 1
  store i32 %v3_97d4, i32* %r1.global-to-local, align 4
  %v1_9d20 = load i32, i32* @r4, align 4
  %v9_9d20 = icmp eq i32 %v3_97d4, %v1_9d20
  store i1 %v9_9d20, i1* %cpsr_z.global-to-local, align 1
  %v0_9d24 = load i32, i32* %r2.global-to-local, align 4
  %v1_9d24 = trunc i32 %v0_9d24 to i8
  %v2_9d24 = load i32, i32* @r6, align 4
  %v3_9d24 = add i32 %v2_9d24, 4
  %v4_9d24 = inttoptr i32 %v3_9d24 to i8*
  store i8 %v1_9d24, i8* %v4_9d24, align 1
  %v0_9d28 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9d28, label %dec_label_pc_9d2c, label %dec_label_pc_9cf4.dec_label_pc_9b08_crit_edge

dec_label_pc_9cf4.dec_label_pc_9b08_crit_edge:    ; preds = %dec_label_pc_9cf4
  %v1_9b0c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9b08

dec_label_pc_9d2c:                                ; preds = %dec_label_pc_9cf4, %dec_label_pc_9afc
  %v0_9d2c = call i32 @function_e7cc()
  %v1_9d2c = trunc i32 %v0_9d2c to i8
  store i32 %v0_9d2c, i32* %r0.global-to-local, align 4
  store i32 %v3_97d8, i32* %r2.global-to-local, align 4
  %v4_9d34 = sdiv i32 %v0_9d2c, 256
  store i32 %v4_9d34, i32* %r3.global-to-local, align 4
  %v1_9d38 = load i32, i32* @r4, align 4
  %v9_9d38 = icmp eq i32 %v3_97d8, %v1_9d38
  store i1 %v9_9d38, i1* %cpsr_z.global-to-local, align 1
  %v3_9d3c = load i32, i32* @r5, align 4
  %v4_9d3c = add i32 %v3_9d3c, 58
  %v5_9d3c = inttoptr i32 %v4_9d3c to i8*
  store i8 %v1_9d2c, i8* %v5_9d3c, align 1
  %v0_9d40 = load i32, i32* %r3.global-to-local, align 4
  %v1_9d40 = trunc i32 %v0_9d40 to i8
  %v2_9d40 = load i32, i32* @r7, align 4
  %v3_9d40 = add i32 %v2_9d40, 1
  %v4_9d40 = inttoptr i32 %v3_9d40 to i8*
  store i8 %v1_9d40, i8* %v4_9d40, align 1
  %v0_9d44 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9d44, label %dec_label_pc_9d48, label %dec_label_pc_9b14

dec_label_pc_9d48:                                ; preds = %dec_label_pc_9d2c, %dec_label_pc_9b08
  %v0_9d48 = call i32 @function_e7cc()
  %v1_9d48 = trunc i32 %v0_9d48 to i8
  store i32 %v0_9d48, i32* %r0.global-to-local, align 4
  %v4_9d4c43 = udiv i32 %v0_9d48, 256
  %v1_9d50 = trunc i32 %v4_9d4c43 to i8
  %v2_9d50 = load i32, i32* @r7, align 4
  %v3_9d50 = add i32 %v2_9d50, 3
  %v4_9d50 = inttoptr i32 %v3_9d50 to i8*
  store i8 %v1_9d50, i8* %v4_9d50, align 1
  store i32 %v1_97c8, i32* %r3.global-to-local, align 4
  store i1 %v2_9d58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9d58, label %bb108, label %bb107

bb107:                                            ; preds = %dec_label_pc_9d48
  %v1_9d5c = load i32, i32* @r5, align 4
  %v2_9d5c = add i32 %v1_9d5c, 16
  %v3_9d5c = inttoptr i32 %v2_9d5c to i32*
  %v4_9d5c = load i32, i32* %v3_9d5c, align 4
  store i32 %v4_9d5c, i32* %r3.global-to-local, align 4
  br label %bb108

bb108:                                            ; preds = %dec_label_pc_9d48, %bb107
  %v3_9d60 = load i32, i32* @r7, align 4
  %v4_9d60 = add i32 %v3_9d60, 2
  %v5_9d60 = inttoptr i32 %v4_9d60 to i8*
  store i8 %v1_9d48, i8* %v5_9d60, align 1
  %v0_9d64 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9d64, label %dec_label_pc_9d6c, label %bb109

bb109:                                            ; preds = %bb108
  %v1_9d64 = load i32, i32* %r3.global-to-local, align 4
  %v2_9d64 = load i32, i32* @r6, align 4
  %v3_9d64 = add i32 %v2_9d64, 16
  %v4_9d64 = inttoptr i32 %v3_9d64 to i32*
  store i32 %v1_9d64, i32* %v4_9d64, align 4
  br label %dec_label_pc_9b28

dec_label_pc_9d6c:                                ; preds = %dec_label_pc_9b14, %bb108
  %v0_9d6c = call i32 @function_e7cc()
  store i32 %v0_9d6c, i32* %r0.global-to-local, align 4
  %v1_9d70 = load i32, i32* @r6, align 4
  %v2_9d70 = add i32 %v1_9d70, 16
  %v3_9d70 = inttoptr i32 %v2_9d70 to i32*
  store i32 %v0_9d6c, i32* %v3_9d70, align 4
  br label %dec_label_pc_9b28

dec_label_pc_9d78:                                ; preds = %dec_label_pc_9b28
  %v0_9d78 = load i32, i32* @r7, align 4
  %v1_9d78 = add i32 %v0_9d78, 8
  store i32 %v1_9d78, i32* %r0.global-to-local, align 4
  store i32 %v5_9718, i32* @r1, align 4
  %v1_9d80 = inttoptr i32 %v1_9d78 to i8*
  %v2_9d80 = call i32 @function_e94c(i8* %v1_9d80)
  store i32 %v2_9d80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9b8c

dec_label_pc_9d88:                                ; preds = %dec_label_pc_97b8
  %v1_9d90 = add i32 %v5_9718, 8
  store i32 %v1_9d90, i32* %r1.global-to-local, align 4
  %v1_9d94 = add i32 %v5_9718, 66
  store i32 %v1_9d94, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9a98.preheader

; uselistorder directives
  uselistorder i32 %v1_9d94, { 1, 0 }
  uselistorder i32 %v1_9d90, { 1, 0 }
  uselistorder i32 %v0_9d48, { 0, 2, 1 }
  uselistorder i32 %v0_9d2c, { 0, 2, 1 }
  uselistorder i32 %v3_9cfc, { 0, 2, 1 }
  uselistorder i32 %v2_9cc8, { 1, 0 }
  uselistorder i32 %v8_9ca8, { 1, 2, 0 }
  uselistorder i32 %v3_9c94, { 1, 0 }
  uselistorder i32 %v0_9c84, { 2, 0, 1, 3 }
  uselistorder i32 %v1_9c50, { 1, 2, 0 }
  uselistorder i32 %v1_9c4c, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_9bf0, { 1, 0, 2 }
  uselistorder i32 %v4_9bec, { 0, 2, 1 }
  uselistorder i32 %v0_9bcc, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_9bbc, { 0, 2, 1 }
  uselistorder i32 %v4_9ba0, { 1, 0 }
  uselistorder i32 %v7_9ac4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_9a98, { 1, 0 }
  uselistorder i1 %v7_9ae0, { 2, 1, 0 }
  uselistorder i1 %v2_9d58, { 2, 3, 1, 0 }
  uselistorder i1 %v3_9ce8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_9a20, { 1, 0, 2 }
  uselistorder i32 %v3_98a8, { 1, 0, 2 }
  uselistorder i32 %v3_9888, { 1, 0 }
  uselistorder i32 %tmp91, { 1, 0 }
  uselistorder i32 %v1_982c, { 1, 0 }
  uselistorder i32 %v1_9828, { 2, 1, 0 }
  uselistorder i32 %v1_9814, { 1, 0 }
  uselistorder i32 %v1_9810, { 2, 1, 0 }
  uselistorder i32 %v1_9808, { 0, 2, 1 }
  uselistorder i32 %v3_9800, { 2, 1, 0 }
  uselistorder i32 %v0_97dc, { 1, 0, 2 }
  uselistorder i32 %v3_97d0, { 2, 1, 3, 0 }
  uselistorder i32 %v1_97c8, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v3_97c4, { 1, 0 }
  uselistorder i32 %v0_97c4, { 2, 1, 0 }
  uselistorder i32 %v0_97bc, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_97b8, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_97b0, { 1, 0 }
  uselistorder i1 %v7_9784, { 1, 0 }
  uselistorder i32 %v3_9780, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v5_976c, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_9738, { 1, 2, 0 }
  uselistorder i32 %v5_9718, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_96cc, { 1, 0 }
  uselistorder i8 %v5_96bc, { 1, 0 }
  uselistorder i32 %v5_96a0, { 1, 0 }
  uselistorder i32 %v6_9664, { 1, 0 }
  uselistorder i32 %v2_964c, { 0, 3, 1, 2 }
  uselistorder i32 %v1_9630, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %sl.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r8.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r4.global-to-local, { 20, 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 19, 21, 1, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 30, 29, 31, 32, 34, 33, 36, 35, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 6, 7, 4, 5, 9, 8, 34, 33, 35, 36, 37, 32, 38, 39, 41, 40, 42, 43, 44, 45, 46, 10, 14, 11, 12, 13, 17, 15, 16, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 22, 23, 24, 25, 26, 27, 28, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_9d6c, { 1, 0 }
  uselistorder label %bb108, { 1, 0 }
  uselistorder label %dec_label_pc_9c68, { 1, 0 }
  uselistorder label %dec_label_pc_9b8c, { 1, 0 }
  uselistorder label %dec_label_pc_9b28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9a98.preheader, { 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
}

define i32 @function_9da8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9da8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_9da8 = load i32, i32* @r4, align 4
  %v15_9da8 = load i32, i32* @r8, align 4
  %v1_9dac = urem i32 %arg1, 256
  store i32 %v1_9dac, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %v1_9dac, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_9dc4 = urem i32 %arg3, 256
  store i32 %v1_9dc4, i32* @r4, align 4
  %v2_9dc8 = call i32 @function_137cc(i32 %v1_9dac, i32 4)
  %v0_9dcc = load i32, i32* @r5, align 4
  store i32 %v0_9dcc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9ddc = load i32, i32* @r4, align 4
  store i32 %v0_9ddc, i32* %r0.global-to-local, align 4
  %v5_9de0 = inttoptr i32 %v0_9dcc to i32*
  %v6_9de0 = call i32 @function_85e0(i32 %v0_9ddc, i32* %v5_9de0, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9df8 = load i32, i32* @r5, align 4
  store i32 %v0_9df8, i32* %r1.global-to-local, align 4
  %v0_9dfc = load i32, i32* @r4, align 4
  store i32 %v0_9dfc, i32* %r0.global-to-local, align 4
  %v5_9e00 = trunc i32 %v6_9de0 to i8
  %v6_9e04 = inttoptr i32 %v0_9df8 to i32*
  %v7_9e04 = call i32 @function_85e0(i32 %v0_9dfc, i32* %v6_9e04, i32 3, i32 65535)
  %v0_9e08 = load i32, i32* @r5, align 4
  store i32 %v0_9e08, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9e04, i32* @r7, align 4
  %v0_9e18 = load i32, i32* @r4, align 4
  store i32 %v0_9e18, i32* %r0.global-to-local, align 4
  %v4_9e1c = inttoptr i32 %v0_9e08 to i32*
  %v5_9e1c = call i32 @function_85e0(i32 %v0_9e18, i32* %v4_9e1c, i32 4, i32 64)
  %v0_9e28 = load i32, i32* @r5, align 4
  store i32 %v0_9e28, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9e34 = load i32, i32* @r4, align 4
  store i32 %v0_9e34, i32* %r0.global-to-local, align 4
  %v5_9e38 = trunc i32 %v5_9e1c to i8
  %v6_9e3c = inttoptr i32 %v0_9e28 to i32*
  %v7_9e3c = call i32 @function_85e0(i32 %v0_9e34, i32* %v6_9e3c, i32 5, i32 1)
  %v1_9e48 = urem i32 %v7_9e3c, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_9e54 = load i32, i32* @r5, align 4
  store i32 %v0_9e54, i32* %r1.global-to-local, align 4
  %v0_9e58 = load i32, i32* @r4, align 4
  store i32 %v0_9e58, i32* %r0.global-to-local, align 4
  %v5_9e60 = inttoptr i32 %v0_9e54 to i32*
  %v6_9e60 = call i32 @function_85e0(i32 %v0_9e58, i32* %v5_9e60, i32 6, i32 65535)
  %v0_9e68 = load i32, i32* @r5, align 4
  store i32 %v0_9e68, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_9e60, i32* @sl, align 4
  %v0_9e78 = load i32, i32* @r4, align 4
  store i32 %v0_9e78, i32* %r0.global-to-local, align 4
  %v4_9e7c = inttoptr i32 %v0_9e68 to i32*
  %v5_9e7c = call i32 @function_85e0(i32 %v0_9e78, i32* %v4_9e7c, i32 7, i32 65535)
  %v0_9e80 = load i32, i32* @r5, align 4
  store i32 %v0_9e80, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_9e7c, i32* @r8, align 4
  %v0_9e90 = load i32, i32* @r4, align 4
  store i32 %v0_9e90, i32* %r0.global-to-local, align 4
  %v4_9e94 = inttoptr i32 %v0_9e80 to i32*
  %v5_9e94 = call i32 @function_85e0(i32 %v0_9e90, i32* %v4_9e94, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9ea4 = load i32, i32* @r5, align 4
  store i32 %v0_9ea4, i32* %r1.global-to-local, align 4
  %v0_9ea8 = load i32, i32* @r4, align 4
  store i32 %v0_9ea8, i32* %r0.global-to-local, align 4
  %v4_9eac = inttoptr i32 %v0_9ea4 to i32*
  %v5_9eac = call i32 @function_85e0(i32 %v0_9ea8, i32* %v4_9eac, i32 1, i32 1)
  %v1_9eb4 = urem i32 %v5_9eac, 256
  %v0_9eb8 = load i32, i32* @r5, align 4
  store i32 %v0_9eb8, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9ec4 = load i32, i32* @r4, align 4
  store i32 %v0_9ec4, i32* %r0.global-to-local, align 4
  %v5_9ecc = inttoptr i32 %v0_9eb8 to i32*
  %v6_9ecc = call i32 @function_85e0(i32 %v0_9ec4, i32* %v5_9ecc, i32 19, i32 0)
  %v0_9ed4 = load i32, i32* @r5, align 4
  store i32 %v0_9ed4, i32* %r1.global-to-local, align 4
  %v2_9ed8 = load i32, i32* @global_var_1dc68.49, align 4
  store i32 %v2_9ed8, i32* %r3.global-to-local, align 4
  store i32 %v6_9ecc, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9ee4 = load i32, i32* @r4, align 4
  store i32 %v0_9ee4, i32* %r0.global-to-local, align 4
  %v4_9ee8 = inttoptr i32 %v0_9ed4 to i32*
  %v5_9ee8 = call i32 @function_85e0(i32 %v0_9ee4, i32* %v4_9ee8, i32 25, i32 %v2_9ed8)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_9efc = call i32 @function_134e0(i32 2, i32 3, i32 6)
  store i32 %v3_9efc, i32* %r0.global-to-local, align 4
  %v7_9f00 = icmp eq i32 %v3_9efc, -1
  store i1 %v7_9f00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9f00, label %dec_label_pc_a380, label %dec_label_pc_9f0c

dec_label_pc_9f0c:                                ; preds = %dec_label_pc_9da8
  store i32 1, i32* %stack_var_-40, align 4
  %v6_9f14 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_9f14, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_9f28 = call i32 @function_134b0(i32 %v3_9efc, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_9f28, i32* %r0.global-to-local, align 4
  %v7_9f2c = icmp eq i32 %v6_9f28, -1
  store i1 %v7_9f2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9f2c, label %dec_label_pc_a378, label %dec_label_pc_9f34

dec_label_pc_9f34:                                ; preds = %dec_label_pc_9f0c
  %v0_9f34 = load i32, i32* @sl, align 4
  %v0_9f40 = load i32, i32* @r8, align 4
  %v3_9f40 = mul i32 %v0_9f40, 65536
  store i32 %v3_9f40, i32* %r8.global-to-local, align 4
  %v0_9f44 = load i32, i32* @r7, align 4
  %v0_9f48 = load i32, i32* @r6, align 4
  %v1_9f48 = urem i32 %v0_9f48, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_9f50 = urem i32 %v0_9f34, 65536
  store i32 %v3_9f50, i32* %r2.global-to-local, align 4
  %v3_9f54 = urem i32 %v0_9f40, 65536
  store i32 %v3_9f54, i32* %r3.global-to-local, align 4
  %v0_9f58 = load i32, i32* @fp, align 4
  %v2_9f58 = icmp eq i32 %v0_9f58, 0
  store i1 %v2_9f58, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %v3_9f68 = urem i32 %v0_9f44, 65536
  store i32 %v3_9f68, i32* @sl, align 4
  %tmp84 = icmp slt i32 %v0_9f58, 1
  br i1 %tmp84, label %dec_label_pc_a4a4, label %dec_label_pc_9f78

dec_label_pc_9f78:                                ; preds = %dec_label_pc_9f34
  %v3_9f7c = mul i32 %v5_9e94, 65536
  %v1_9f80 = add i32 %v3_9f7c, 3407872
  %v3_9f88 = udiv i32 %v1_9f80, 256
  %v0_9f44.not = or i32 %v0_9f44, -65536
  %v1_9f98 = xor i32 %v0_9f44.not, 65535
  %v1_9f9c = urem i32 %v0_9f40, 256
  %tmp85 = mul nsw i32 %v1_9f98, 256
  %v1_9fb4 = and i32 %v3_9f88, 65280
  %v1_9fb8 = add i32 %v3_9f7c, 524288
  %v4_9fbc = udiv i32 %v1_9f80, 16777216
  %v5_9fbc = or i32 %v1_9fb4, %v4_9fbc
  store i32 %v5_9fbc, i32* %r0.global-to-local, align 4
  %v1_9fc0 = add i32 %v3_9f7c, 1835008
  %v1_9fc8 = and i32 %tmp85, 65280
  store i32 %v1_9fc8, i32* @lr, align 4
  %tmp86 = udiv i32 %v1_9f98, 256
  %tmp87 = udiv i32 %v0_9f44, 256
  %v5_9fdc = trunc i32 %tmp86 to i8
  %tmp88 = udiv i32 %v0_9f34, 256
  %sext29 = mul i32 %tmp87, 16777216
  %v4_9ffc = sdiv i32 %sext29, 16777216
  %v3_a008 = mul nuw nsw i32 %v1_9f9c, 256
  store i32 %v3_a008, i32* @r5, align 4
  %v3_a00c = udiv i32 %v1_9fb8, 256
  %tmp89 = udiv i32 %v0_9f40, 256
  %v4_a014 = urem i32 %tmp89, 256
  %v5_a014 = or i32 %v4_a014, %v3_a008
  store i32 %v5_a014, i32* @r7, align 4
  %v3_a018 = ashr i32 %sext29, 31
  %v3_a024 = sdiv i32 %v1_9fc0, 16777216
  %v1_a028 = and i32 %v3_a00c, 65280
  store i32 %v1_a028, i32* @r6, align 4
  %sext30 = mul i32 %tmp88, 16777216
  %v4_a030 = sdiv i32 %sext30, 16777216
  %v3_a034 = ashr i32 %v1_9fc0, 31
  %v3_a038 = udiv i32 %v1_9f98, 65536
  %v4_a03c = udiv i32 %v1_9fb8, 16777216
  %v5_a03c = or i32 %v1_a028, %v4_a03c
  store i32 %v5_a03c, i32* %r8.global-to-local, align 4
  %v3_a048 = ashr i32 %sext30, 31
  store i32 %v3_a048, i32* %r1.global-to-local, align 4
  store i32 %v1_9f9c, i32* %r2.global-to-local, align 4
  %v3_a05041 = udiv i32 %v1_a028, 256
  store i32 %v3_a05041, i32* %r3.global-to-local, align 4
  %v5_a058 = trunc i32 %v3_a048 to i8
  store i32 0, i32* @r4, align 4
  %v4_a0b4 = sext i8 %v5_9e38 to i32
  %sext = mul i32 %v1_9f80, 256
  %v4_a0bc = sdiv i32 %sext, 16777216
  %sext16 = mul nuw i32 %v4_9fbc, 16777216
  %v4_a0cc = sdiv i32 %sext16, 16777216
  %v2_a1a0 = icmp eq i32 %v1_9f48, 0
  %sext20 = mul i32 %v1_9fb8, 256
  %v4_a1c0 = sdiv i32 %sext20, 16777216
  %sext21 = mul i32 %v0_9f40, 16777216
  %v7_a1d8 = sdiv i32 %sext21, 16777216
  %v1_a0c8 = trunc i32 %v4_a0bc to i8
  br label %dec_label_pc_a068

dec_label_pc_a068:                                ; preds = %bb96, %dec_label_pc_9f78
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_a074 = call i32 @function_137cc(i32 1510, i32 4)
  store i32 %v2_a074, i32* %r0.global-to-local, align 4
  store i32 %v2_9dc8, i32* %r1.global-to-local, align 4
  %v3_a07c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a07c, i32* %r3.global-to-local, align 4
  %v2_a080 = load i32, i32* @r4, align 4
  %v5_a080 = mul i32 %v2_a080, 4
  %v6_a080 = add i32 %v5_a080, %v2_9dc8
  %v7_a080 = inttoptr i32 %v6_a080 to i32*
  store i32 %v2_a074, i32* %v7_a080, align 4
  %v0_a084 = load i32, i32* %r1.global-to-local, align 4
  %v1_a084 = load i32, i32* %r3.global-to-local, align 4
  %v4_a084 = mul i32 %v1_a084, 4
  %v5_a084 = add i32 %v4_a084, %v0_a084
  %v6_a084 = inttoptr i32 %v5_a084 to i32*
  %v7_a084 = load i32, i32* %v6_a084, align 4
  store i32 %v7_a084, i32* %r4.global-to-local, align 4
  %v1_a088 = inttoptr i32 %v7_a084 to i8*
  %v2_a088 = load i8, i8* %v1_a088, align 1
  %tmp = urem i8 %v2_a088, 16
  %v1_a08c = zext i8 %tmp to i32
  %v1_a090 = or i32 %v1_a08c, 64
  store i32 %v1_a090, i32* %r2.global-to-local, align 4
  %v1_a094 = trunc i32 %v1_a090 to i8
  store i8 %v1_a094, i8* %v1_a088, align 1
  %v0_a098 = load i32, i32* %r4.global-to-local, align 4
  %v1_a098 = inttoptr i32 %v0_a098 to i8*
  %v2_a098 = load i8, i8* %v1_a098, align 1
  %v1_a09c = and i8 %v2_a098, -16
  %v1_a0a0 = or i8 %v1_a09c, 5
  store i32 %v1_9e48, i32* %r2.global-to-local, align 4
  store i8 %v1_a0a0, i8* %v1_a098, align 1
  %v2_a0b0 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0b0 = add i32 %v2_a0b0, 1
  %v4_a0b0 = inttoptr i32 %v3_a0b0 to i8*
  store i8 %v5_9e00, i8* %v4_a0b0, align 1
  store i32 %v4_a0b4, i32* %r1.global-to-local, align 4
  %v2_a0b8 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0b8 = add i32 %v2_a0b8, 8
  %v4_a0b8 = inttoptr i32 %v3_a0b8 to i8*
  store i8 %v5_9e38, i8* %v4_a0b8, align 1
  store i32 %v4_a0bc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_a0c4 = load i32, i32* %r2.global-to-local, align 4
  %v9_a0c4 = icmp eq i32 %v0_a0c4, 0
  store i1 %v9_a0c4, i1* %cpsr_z.global-to-local, align 1
  %v2_a0c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0c8 = add i32 %v2_a0c8, 3
  %v4_a0c8 = inttoptr i32 %v3_a0c8 to i8*
  store i8 %v1_a0c8, i8* %v4_a0c8, align 1
  store i32 %v4_a0cc, i32* %r2.global-to-local, align 4
  %v0_a0d0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a0d0, label %.thread23, label %.thread

.thread:                                          ; preds = %dec_label_pc_a068
  %v1_a0d0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_a0d0, i32* %r3.global-to-local, align 4
  %v2_a0d4 = trunc i32 %v1_a0d0 to i8
  %v3_a0d4 = load i32, i32* %r4.global-to-local, align 4
  %v4_a0d4 = add i32 %v3_a0d4, 7
  %v5_a0d4 = inttoptr i32 %v4_a0d4 to i8*
  store i8 %v2_a0d4, i8* %v5_a0d4, align 1
  %v0_a0d8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a0d8.pr.pr, label %.thread23, label %bb

bb:                                               ; preds = %.thread
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a0dc = load i32, i32* %r4.global-to-local, align 4
  %v4_a0dc = add i32 %v3_a0dc, 6
  %v5_a0dc = inttoptr i32 %v4_a0dc to i8*
  store i8 64, i8* %v5_a0dc, align 1
  br label %.thread23

.thread23:                                        ; preds = %dec_label_pc_a068, %.thread, %bb
  %v0_a0e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_a0e0 = trunc i32 %v0_a0e0 to i8
  %v2_a0e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0e0 = add i32 %v2_a0e0, 2
  %v4_a0e0 = inttoptr i32 %v3_a0e0 to i8*
  store i8 %v1_a0e0, i8* %v4_a0e0, align 1
  store i32 %v3_a018, i32* %r2.global-to-local, align 4
  store i32 %v4_9ffc, i32* %r1.global-to-local, align 4
  %v2_a0f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0f0 = add i32 %v2_a0f0, 9
  %v4_a0f0 = inttoptr i32 %v3_a0f0 to i8*
  store i8 47, i8* %v4_a0f0, align 1
  %v0_a0f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a0f4 = trunc i32 %v0_a0f4 to i8
  %v2_a0f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0f4 = add i32 %v2_a0f4, 5
  %v4_a0f4 = inttoptr i32 %v3_a0f4 to i8*
  store i8 %v1_a0f4, i8* %v4_a0f4, align 1
  %v3_a0f8 = load i32, i32* %stack_var_-40, align 4
  %v5_a100 = mul i32 %v3_a0f8, 24
  store i32 %v5_a100, i32* %r3.global-to-local, align 4
  store i32 %v5_9ee8, i32* %r2.global-to-local, align 4
  %v1_a108 = load i32, i32* %r4.global-to-local, align 4
  %v2_a108 = add i32 %v1_a108, 12
  %v3_a108 = inttoptr i32 %v2_a108 to i32*
  store i32 %v5_9ee8, i32* %v3_a108, align 4
  %v0_a10c = load i32, i32* %r3.global-to-local, align 4
  %v1_a10c = load i32, i32* @sb, align 4
  %v2_a10c = add i32 %v1_a10c, %v0_a10c
  store i32 %v2_a10c, i32* %r3.global-to-local, align 4
  %v0_a110 = load i32, i32* %r1.global-to-local, align 4
  %v1_a110 = trunc i32 %v0_a110 to i8
  %v2_a110 = load i32, i32* %r4.global-to-local, align 4
  %v3_a110 = add i32 %v2_a110, 4
  %v4_a110 = inttoptr i32 %v3_a110 to i8*
  store i8 %v1_a110, i8* %v4_a110, align 1
  %v0_a114 = load i32, i32* %r3.global-to-local, align 4
  %v1_a114 = add i32 %v0_a114, 16
  %v2_a114 = inttoptr i32 %v1_a114 to i32*
  %v3_a114 = load i32, i32* %v2_a114, align 4
  store i32 %v3_a114, i32* %r2.global-to-local, align 4
  %v0_a118 = load i32, i32* %r4.global-to-local, align 4
  %v1_a118 = add i32 %v0_a118, 20
  store i32 %v1_a118, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_a120 = load i32, i32* %r0.global-to-local, align 4
  %v1_a120 = trunc i32 %v0_a120 to i8
  %v3_a120 = add i32 %v0_a118, 23
  %v4_a120 = inttoptr i32 %v3_a120 to i8*
  store i8 %v1_a120, i8* %v4_a120, align 1
  %v0_a124 = load i32, i32* %r3.global-to-local, align 4
  %v1_a124 = trunc i32 %v0_a124 to i8
  %v2_a124 = load i32, i32* %r1.global-to-local, align 4
  %v3_a124 = add i32 %v2_a124, 2
  %v4_a124 = inttoptr i32 %v3_a124 to i8*
  store i8 %v1_a124, i8* %v4_a124, align 1
  %v0_a128 = load i32, i32* %r4.global-to-local, align 4
  %v1_a128 = add i32 %v0_a128, 24
  %v2_a128 = inttoptr i32 %v1_a128 to i8*
  %v3_a128 = load i8, i8* %v2_a128, align 1
  %tmp104 = urem i8 %v3_a128, 16
  %v1_a12c = zext i8 %tmp104 to i32
  %v1_a130 = or i32 %v1_a12c, 64
  store i32 %v1_a130, i32* %r3.global-to-local, align 4
  %v1_a134 = trunc i32 %v1_a130 to i8
  store i8 %v1_a134, i8* %v2_a128, align 1
  %v0_a138 = load i32, i32* %r2.global-to-local, align 4
  %v1_a138 = load i32, i32* %r4.global-to-local, align 4
  %v2_a138 = add i32 %v1_a138, 16
  %v3_a138 = inttoptr i32 %v2_a138 to i32*
  store i32 %v0_a138, i32* %v3_a138, align 4
  %v0_a13c = load i32, i32* %r4.global-to-local, align 4
  %v1_a13c = add i32 %v0_a13c, 24
  %v2_a13c = inttoptr i32 %v1_a13c to i8*
  %v3_a13c = load i8, i8* %v2_a13c, align 1
  %v1_a140 = and i8 %v3_a13c, -16
  %v1_a144 = or i8 %v1_a140, 5
  store i8 %v1_a144, i8* %v2_a13c, align 1
  %v0_a150 = load i32, i32* %r4.global-to-local, align 4
  %v1_a150 = add i32 %v0_a150, 24
  store i32 %v1_a150, i32* @r5, align 4
  %v3_a154 = add i32 %v0_a150, 25
  %v4_a154 = inttoptr i32 %v3_a154 to i8*
  store i8 %v5_9e00, i8* %v4_a154, align 1
  store i32 %v3_a024, i32* %r1.global-to-local, align 4
  store i32 %tmp86, i32* %r3.global-to-local, align 4
  store i32 %v3_a034, i32* %r2.global-to-local, align 4
  %v2_a164 = load i32, i32* @r5, align 4
  %v3_a164 = add i32 %v2_a164, 4
  %v4_a164 = inttoptr i32 %v3_a164 to i8*
  store i8 %v5_9fdc, i8* %v4_a164, align 1
  %v0_a168 = load i32, i32* %r1.global-to-local, align 4
  %v1_a168 = trunc i32 %v0_a168 to i8
  %v2_a168 = load i32, i32* @r5, align 4
  %v3_a168 = add i32 %v2_a168, 2
  %v4_a168 = inttoptr i32 %v3_a168 to i8*
  store i8 %v1_a168, i8* %v4_a168, align 1
  %v0_a16c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a16c, label %bb91, label %bb90

bb90:                                             ; preds = %.thread23
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb91

bb91:                                             ; preds = %.thread23, %bb90
  store i32 %v3_a038, i32* %r1.global-to-local, align 4
  %v0_a174 = load i32, i32* %r2.global-to-local, align 4
  %v1_a174 = trunc i32 %v0_a174 to i8
  %v2_a174 = load i32, i32* @r5, align 4
  %v3_a174 = add i32 %v2_a174, 3
  %v4_a174 = inttoptr i32 %v3_a174 to i8*
  store i8 %v1_a174, i8* %v4_a174, align 1
  store i32 %v4_a0b4, i32* %r2.global-to-local, align 4
  %v0_a17c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a17c, label %bb93, label %bb92

bb92:                                             ; preds = %bb91
  %v1_a17c = load i32, i32* %r3.global-to-local, align 4
  %v2_a17c = trunc i32 %v1_a17c to i8
  %v3_a17c = load i32, i32* @r5, align 4
  %v4_a17c = add i32 %v3_a17c, 6
  %v5_a17c = inttoptr i32 %v4_a17c to i8*
  store i8 %v2_a17c, i8* %v5_a17c, align 1
  br label %bb93

bb93:                                             ; preds = %bb91, %bb92
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_a184 = load i32, i32* %r1.global-to-local, align 4
  %v1_a184 = trunc i32 %v0_a184 to i8
  %v2_a184 = load i32, i32* @r5, align 4
  %v3_a184 = add i32 %v2_a184, 5
  %v4_a184 = inttoptr i32 %v3_a184 to i8*
  store i8 %v1_a184, i8* %v4_a184, align 1
  %v0_a188 = load i32, i32* %r2.global-to-local, align 4
  %v1_a188 = trunc i32 %v0_a188 to i8
  %v2_a188 = load i32, i32* @r5, align 4
  %v3_a188 = add i32 %v2_a188, 8
  %v4_a188 = inttoptr i32 %v3_a188 to i8*
  store i8 %v1_a188, i8* %v4_a188, align 1
  %v0_a18c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a18c, label %bb95, label %bb94

bb94:                                             ; preds = %bb93
  %v1_a18c = load i32, i32* %r0.global-to-local, align 4
  %v2_a18c = trunc i32 %v1_a18c to i8
  %v3_a18c = load i32, i32* @r5, align 4
  %v4_a18c = add i32 %v3_a18c, 7
  %v5_a18c = inttoptr i32 %v4_a18c to i8*
  store i8 %v2_a18c, i8* %v5_a18c, align 1
  br label %bb95

bb95:                                             ; preds = %bb93, %bb94
  %v0_a190 = load i32, i32* %r3.global-to-local, align 4
  %v1_a190 = trunc i32 %v0_a190 to i8
  %v2_a190 = load i32, i32* @r5, align 4
  %v3_a190 = add i32 %v2_a190, 9
  %v4_a190 = inttoptr i32 %v3_a190 to i8*
  store i8 %v1_a190, i8* %v4_a190, align 1
  %v0_a194 = call i32 @function_e7cc()
  store i32 %v0_a194, i32* %r0.global-to-local, align 4
  store i32 %v1_9f48, i32* %r1.global-to-local, align 4
  store i1 %v2_a1a0, i1* %cpsr_z.global-to-local, align 1
  %v1_a1a4 = sub i32 1023, %v0_a194
  store i32 %v1_a1a4, i32* %r3.global-to-local, align 4
  br i1 %v2_a1a0, label %.thread24, label %.thread25

.thread24:                                        ; preds = %bb95
  %v2_a1ac = load i32, i32* @r5, align 4
  %v3_a1ac = add i32 %v2_a1ac, 16
  %v4_a1ac = inttoptr i32 %v3_a1ac to i32*
  store i32 %v1_a1a4, i32* %v4_a1ac, align 4
  br label %bb96

.thread25:                                        ; preds = %bb95
  %v1_a1a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_a1a8 = add i32 %v1_a1a8, 16
  %v3_a1a8 = inttoptr i32 %v2_a1a8 to i32*
  %v4_a1a8 = load i32, i32* %v3_a1a8, align 4
  store i32 %v4_a1a8, i32* %r3.global-to-local, align 4
  %v2_a1b0 = load i32, i32* @r5, align 4
  %v3_a1b0 = add i32 %v2_a1b0, 16
  %v4_a1b0 = inttoptr i32 %v3_a1b0 to i32*
  store i32 %v4_a1a8, i32* %v4_a1b0, align 4
  br label %bb96

bb96:                                             ; preds = %.thread24, %.thread25
  store i32 %v4_a030, i32* %r3.global-to-local, align 4
  %v0_a1b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_a1b8 = add i32 %v0_a1b8, 44
  store i32 %v1_a1b8, i32* @r6, align 4
  %v1_a1bc = load i32, i32* @r5, align 4
  %v2_a1bc = add i32 %v1_a1bc, 12
  %v3_a1bc = inttoptr i32 %v2_a1bc to i32*
  store i32 %v0_a194, i32* %v3_a1bc, align 4
  store i32 %v4_a1c0, i32* %r2.global-to-local, align 4
  %v0_a1c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a1c4 = trunc i32 %v0_a1c4 to i8
  %v2_a1c4 = load i32, i32* @r6, align 4
  %v3_a1c4 = inttoptr i32 %v2_a1c4 to i8*
  store i8 %v1_a1c4, i8* %v3_a1c4, align 1
  %v3_a1c8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a1c8, i32* %r3.global-to-local, align 4
  %v0_a1cc = load i32, i32* %r2.global-to-local, align 4
  %v1_a1cc = trunc i32 %v0_a1cc to i8
  %v2_a1cc = load i32, i32* @r6, align 4
  %v3_a1cc = add i32 %v2_a1cc, 5
  %v4_a1cc = inttoptr i32 %v3_a1cc to i8*
  store i8 %v1_a1cc, i8* %v4_a1cc, align 1
  %v0_a1d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a1d0 = add i32 %v0_a1d0, 1
  store i32 %v1_a1d0, i32* @r4, align 4
  store i32 %v3_a048, i32* %r1.global-to-local, align 4
  store i32 %v7_a1d8, i32* %r2.global-to-local, align 4
  %v1_a1dc = load i32, i32* @fp, align 4
  %v9_a1dc = icmp eq i32 %v1_a1d0, %v1_a1dc
  store i1 %v9_a1dc, i1* %cpsr_z.global-to-local, align 1
  %v2_a1e0 = load i32, i32* @r6, align 4
  %v3_a1e0 = add i32 %v2_a1e0, 1
  %v4_a1e0 = inttoptr i32 %v3_a1e0 to i8*
  store i8 %v5_a058, i8* %v4_a1e0, align 1
  %v0_a1e4 = load i32, i32* @r7, align 4
  %v1_a1e4 = trunc i32 %v0_a1e4 to i8
  %v2_a1e4 = load i32, i32* @r6, align 4
  %v3_a1e4 = add i32 %v2_a1e4, 2
  %v4_a1e4 = inttoptr i32 %v3_a1e4 to i8*
  store i8 %v1_a1e4, i8* %v4_a1e4, align 1
  %v0_a1e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a1e8 = trunc i32 %v0_a1e8 to i8
  %v2_a1e8 = load i32, i32* @r6, align 4
  %v3_a1e8 = add i32 %v2_a1e8, 3
  %v4_a1e8 = inttoptr i32 %v3_a1e8 to i8*
  store i8 %v1_a1e8, i8* %v4_a1e8, align 1
  %v0_a1ec = load i32, i32* %r8.global-to-local, align 4
  %v1_a1ec = trunc i32 %v0_a1ec to i8
  %v2_a1ec = load i32, i32* @r6, align 4
  %v3_a1ec = add i32 %v2_a1ec, 4
  %v4_a1ec = inttoptr i32 %v3_a1ec to i8*
  store i8 %v1_a1ec, i8* %v4_a1ec, align 1
  %v0_a1f0 = load i32, i32* @r4, align 4
  store i32 %v0_a1f0, i32* %stack_var_-40, align 4
  %v5_a1f4 = icmp slt i32 %v1_a1d0, %v1_a1dc
  br i1 %v5_a1f4, label %dec_label_pc_a068, label %dec_label_pc_a1f8

dec_label_pc_a1f8:                                ; preds = %bb96
  %v1_a200 = add i32 %v5_9e94, 8
  store i32 %v1_a200, i32* %r3.global-to-local, align 4
  %v1_a204 = add i32 %v5_9e94, 52
  store i32 %v1_a204, i32* %r1.global-to-local, align 4
  %v0_a210.pre.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_a210.preheader

dec_label_pc_a210.preheader:                      ; preds = %dec_label_pc_a1f8, %dec_label_pc_a4a4
  %v0_a210.pre = phi i32 [ %v0_a210.pre.pre, %dec_label_pc_a1f8 ], [ %v0_9f58, %dec_label_pc_a4a4 ]
  %stack_var_-120.0.ph = phi i32 [ %v1_a204, %dec_label_pc_a1f8 ], [ %v1_a4b0, %dec_label_pc_a4a4 ]
  %stack_var_-152.0.ph = phi i32 [ %v1_a200, %dec_label_pc_a1f8 ], [ %v1_a4ac, %dec_label_pc_a4a4 ]
  %v2_a488 = icmp eq i32 %v1_9eb4, 0
  %v2_a288 = icmp eq i32 %v1_9f48, 0
  %v2_a254 = icmp eq i32 %v5_9ee8, -1
  %v7_a254 = icmp eq i32 %v5_9ee8, -1
  br label %dec_label_pc_a210

dec_label_pc_a210:                                ; preds = %dec_label_pc_a2a4, %dec_label_pc_a210.preheader
  %v0_a210 = phi i32 [ %v0_a210.pre, %dec_label_pc_a210.preheader ], [ %v1_a368, %dec_label_pc_a2a4 ]
  %v2_a210 = icmp eq i32 %v0_a210, 0
  store i1 %v2_a210, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp97 = icmp slt i32 %v0_a210, 1
  br label %dec_label_pc_a218

dec_label_pc_a218:                                ; preds = %dec_label_pc_a218, %dec_label_pc_a210
  br i1 %tmp97, label %dec_label_pc_a218, label %dec_label_pc_a21c

dec_label_pc_a21c:                                ; preds = %dec_label_pc_a218
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_a228

dec_label_pc_a228:                                ; preds = %dec_label_pc_a2a4, %dec_label_pc_a21c
  %v1_a23c = phi i32 [ %v1_a364, %dec_label_pc_a2a4 ], [ 0, %dec_label_pc_a21c ]
  %v5_a22c = mul i32 %v1_a23c, 24
  %v1_a230 = load i32, i32* @sb, align 4
  %v2_a230 = add i32 %v1_a230, %v5_a22c
  store i32 %v2_a230, i32* %r3.global-to-local, align 4
  store i32 %v2_9dc8, i32* %r1.global-to-local, align 4
  %v1_a238 = add i32 %v2_a230, 20
  %v2_a238 = inttoptr i32 %v1_a238 to i8*
  %v3_a238 = load i8, i8* %v2_a238, align 1
  %v4_a238 = zext i8 %v3_a238 to i32
  store i32 %v4_a238, i32* %r2.global-to-local, align 4
  %v4_a23c = mul i32 %v1_a23c, 4
  %v5_a23c = add i32 %v4_a23c, %v2_9dc8
  %v6_a23c = inttoptr i32 %v5_a23c to i32*
  %v7_a23c = load i32, i32* %v6_a23c, align 4
  store i32 %v7_a23c, i32* @r5, align 4
  %v7_a240 = icmp eq i8 %v3_a238, 31
  store i1 %v7_a240, i1* %cpsr_z.global-to-local, align 1
  %v1_a244 = add i32 %v7_a23c, 24
  store i32 %v1_a244, i32* @r6, align 4
  %v1_a248 = add i32 %v7_a23c, 44
  store i32 %v1_a248, i32* @r7, align 4
  %tmp105 = icmp ult i8 %v3_a238, 32
  br i1 %tmp105, label %dec_label_pc_a388, label %dec_label_pc_a250

dec_label_pc_a250:                                ; preds = %dec_label_pc_a228
  store i32 %v5_9ee8, i32* %r2.global-to-local, align 4
  store i1 %v7_a254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a254, label %dec_label_pc_a3f0, label %dec_label_pc_a25c

dec_label_pc_a25c:                                ; preds = %dec_label_pc_a388, %dec_label_pc_a250
  store i32 65535, i32* @r4, align 4
  %v0_a264 = load i32, i32* @sl, align 4
  %v9_a264 = icmp eq i32 %v0_a264, 65535
  store i1 %v9_a264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a264, label %dec_label_pc_a408, label %dec_label_pc_a26c

dec_label_pc_a26c:                                ; preds = %dec_label_pc_a3f0.dec_label_pc_a26c_crit_edge, %dec_label_pc_a25c
  %v1_a270 = phi i32 [ %v1_a270.pre, %dec_label_pc_a3f0.dec_label_pc_a26c_crit_edge ], [ 65535, %dec_label_pc_a25c ]
  store i32 %v3_9f50, i32* %r3.global-to-local, align 4
  %v9_a270 = icmp eq i32 %v3_9f50, %v1_a270
  store i1 %v9_a270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a270, label %dec_label_pc_a440, label %dec_label_pc_a278

dec_label_pc_a278:                                ; preds = %dec_label_pc_a408.dec_label_pc_a278_crit_edge, %dec_label_pc_a26c
  %v1_a27c = phi i32 [ %v1_a27c.pre, %dec_label_pc_a408.dec_label_pc_a278_crit_edge ], [ %v1_a270, %dec_label_pc_a26c ]
  store i32 %v3_9f54, i32* %r1.global-to-local, align 4
  %v9_a27c = icmp eq i32 %v3_9f54, %v1_a27c
  store i1 %v9_a27c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a27c, label %dec_label_pc_a45c, label %dec_label_pc_a284

dec_label_pc_a284:                                ; preds = %dec_label_pc_a440, %dec_label_pc_a278
  store i32 %v1_9f48, i32* %r2.global-to-local, align 4
  store i1 %v2_a288, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a288, label %dec_label_pc_a480, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_a284
  %v1_a28c = load i32, i32* @r5, align 4
  %v2_a28c = add i32 %v1_a28c, 16
  %v3_a28c = inttoptr i32 %v2_a28c to i32*
  %v4_a28c = load i32, i32* %v3_a28c, align 4
  store i32 %v4_a28c, i32* %r3.global-to-local, align 4
  %v2_a290 = load i32, i32* @r6, align 4
  %v3_a290 = add i32 %v2_a290, 16
  %v4_a290 = inttoptr i32 %v3_a290 to i32*
  store i32 %v4_a28c, i32* %v4_a290, align 4
  br label %dec_label_pc_a298

dec_label_pc_a298:                                ; preds = %bb102, %.thread26
  store i32 %v1_9eb4, i32* %r3.global-to-local, align 4
  store i1 %v2_a488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a488, label %dec_label_pc_a2a4, label %dec_label_pc_a494

dec_label_pc_a2a4:                                ; preds = %dec_label_pc_a298, %dec_label_pc_a480, %dec_label_pc_a494
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a2a8 = load i32, i32* @r8, align 4
  %v1_a2a8 = trunc i32 %v0_a2a8 to i8
  %v2_a2a8 = load i32, i32* @r5, align 4
  %v3_a2a8 = add i32 %v2_a2a8, 10
  %v4_a2a8 = inttoptr i32 %v3_a2a8 to i8*
  store i8 %v1_a2a8, i8* %v4_a2a8, align 1
  %v0_a2ac = load i32, i32* @r8, align 4
  %v1_a2ac = trunc i32 %v0_a2ac to i8
  %v2_a2ac = load i32, i32* @r5, align 4
  %v3_a2ac = add i32 %v2_a2ac, 11
  %v4_a2ac = inttoptr i32 %v3_a2ac to i8*
  store i8 %v1_a2ac, i8* %v4_a2ac, align 1
  %v0_a2b0 = load i32, i32* @r5, align 4
  store i32 %v0_a2b0, i32* @r0, align 4
  %v2_a2b4 = call i32 @function_d0b8(i32 %v0_a2b0, i32 20)
  %v3_a2b4 = trunc i32 %v2_a2b4 to i8
  %v4_a2b8 = sdiv i32 %v2_a2b4, 256
  store i32 %v4_a2b8, i32* %r3.global-to-local, align 4
  %v1_a2bc = trunc i32 %v4_a2b8 to i8
  %v2_a2bc = load i32, i32* @r5, align 4
  %v3_a2bc = add i32 %v2_a2bc, 11
  %v4_a2bc = inttoptr i32 %v3_a2bc to i8*
  store i8 %v1_a2bc, i8* %v4_a2bc, align 1
  %v3_a2c0 = load i32, i32* @r5, align 4
  %v4_a2c0 = add i32 %v3_a2c0, 10
  %v5_a2c0 = inttoptr i32 %v4_a2c0 to i8*
  store i8 %v3_a2b4, i8* %v5_a2c0, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a2c8 = load i32, i32* @r8, align 4
  %v1_a2c8 = trunc i32 %v0_a2c8 to i8
  %v2_a2c8 = load i32, i32* @r6, align 4
  %v3_a2c8 = add i32 %v2_a2c8, 10
  %v4_a2c8 = inttoptr i32 %v3_a2c8 to i8*
  store i8 %v1_a2c8, i8* %v4_a2c8, align 1
  %v0_a2cc = load i32, i32* @r8, align 4
  %v1_a2cc = trunc i32 %v0_a2cc to i8
  %v2_a2cc = load i32, i32* @r6, align 4
  %v3_a2cc = add i32 %v2_a2cc, 11
  %v4_a2cc = inttoptr i32 %v3_a2cc to i8*
  store i8 %v1_a2cc, i8* %v4_a2cc, align 1
  %v0_a2d0 = load i32, i32* @r6, align 4
  store i32 %v0_a2d0, i32* @r0, align 4
  %v2_a2d4 = call i32 @function_d0b8(i32 %v0_a2d0, i32 20)
  %v3_a2d4 = trunc i32 %v2_a2d4 to i8
  store i32 %v2_a2d4, i32* %r0.global-to-local, align 4
  %v4_a2d8 = sdiv i32 %v2_a2d4, 256
  store i32 %v4_a2d8, i32* %r3.global-to-local, align 4
  %v3_a2dc = load i32, i32* @r6, align 4
  %v4_a2dc = add i32 %v3_a2dc, 10
  %v5_a2dc = inttoptr i32 %v4_a2dc to i8*
  store i8 %v3_a2d4, i8* %v5_a2dc, align 1
  %v0_a2e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a2e0 = trunc i32 %v0_a2e0 to i8
  %v2_a2e0 = load i32, i32* @r6, align 4
  %v3_a2e0 = add i32 %v2_a2e0, 11
  %v4_a2e0 = inttoptr i32 %v3_a2e0 to i8*
  store i8 %v1_a2e0, i8* %v4_a2e0, align 1
  %v0_a2e4 = load i32, i32* @r7, align 4
  %v1_a2e4 = add i32 %v0_a2e4, 4
  %v2_a2e4 = inttoptr i32 %v1_a2e4 to i8*
  %v3_a2e4 = load i8, i8* %v2_a2e4, align 1
  %v4_a2e4 = zext i8 %v3_a2e4 to i32
  store i32 %v4_a2e4, i32* %r3.global-to-local, align 4
  %v1_a2e8 = add i32 %v0_a2e4, 5
  %v2_a2e8 = inttoptr i32 %v1_a2e8 to i8*
  %v3_a2e8 = load i8, i8* %v2_a2e8, align 1
  %v4_a2e8 = zext i8 %v3_a2e8 to i32
  store i32 %v0_a2e4, i32* @r1, align 4
  %v4_a2f0 = mul nuw nsw i32 %v4_a2e8, 256
  %v5_a2f0 = or i32 %v4_a2f0, %v4_a2e4
  store i32 %v5_a2f0, i32* %r2.global-to-local, align 4
  %v0_a2f4 = load i32, i32* @r8, align 4
  %v1_a2f4 = trunc i32 %v0_a2f4 to i8
  %v3_a2f4 = add i32 %v0_a2e4, 6
  %v4_a2f4 = inttoptr i32 %v3_a2f4 to i8*
  store i8 %v1_a2f4, i8* %v4_a2f4, align 1
  store i32 %stack_var_-152.0.ph, i32* %r3.global-to-local, align 4
  %v0_a2fc = load i32, i32* @r8, align 4
  %v1_a2fc = trunc i32 %v0_a2fc to i8
  %v2_a2fc = load i32, i32* @r7, align 4
  %v3_a2fc = add i32 %v2_a2fc, 7
  %v4_a2fc = inttoptr i32 %v3_a2fc to i8*
  store i8 %v1_a2fc, i8* %v4_a2fc, align 1
  %v0_a300 = load i32, i32* @r6, align 4
  store i32 %v0_a300, i32* %r0.global-to-local, align 4
  %v4_a304 = call i32 @function_d114(i32 %v0_a300, i32 %v0_a2e4, i32 %v5_a2f0, i32 %stack_var_-152.0.ph)
  %v5_a304 = trunc i32 %v4_a304 to i8
  store i32 %v4_a304, i32* %r0.global-to-local, align 4
  %v3_a308 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a308, i32* %r3.global-to-local, align 4
  %v3_a30c = mul i32 %v3_a308, 32
  store i32 %v3_a30c, i32* %r2.global-to-local, align 4
  %v0_a310 = load i32, i32* @r5, align 4
  %v1_a310 = add i32 %v0_a310, 16
  %v2_a310 = inttoptr i32 %v1_a310 to i32*
  %v3_a310 = load i32, i32* %v2_a310, align 4
  store i32 %v3_a310, i32* %r1.global-to-local, align 4
  %v5_a314 = mul i32 %v3_a308, 24
  store i32 %v5_a314, i32* %r2.global-to-local, align 4
  %v4_a31842 = udiv i32 %v4_a304, 256
  %v1_a31c = trunc i32 %v4_a31842 to i8
  %v2_a31c = load i32, i32* @r7, align 4
  %v3_a31c = add i32 %v2_a31c, 7
  %v4_a31c = inttoptr i32 %v3_a31c to i8*
  store i8 %v1_a31c, i8* %v4_a31c, align 1
  %v0_a320 = load i32, i32* %r2.global-to-local, align 4
  %v1_a320 = load i32, i32* @sb, align 4
  %v2_a320 = add i32 %v1_a320, %v0_a320
  store i32 %v2_a320, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_a328 = load i32, i32* @r7, align 4
  %v4_a328 = add i32 %v3_a328, 6
  %v5_a328 = inttoptr i32 %v4_a328 to i8*
  store i8 %v5_a304, i8* %v5_a328, align 1
  %v0_a32c = load i32, i32* %r1.global-to-local, align 4
  %v1_a32c = load i32, i32* %lr.global-to-local, align 4
  %v2_a32c = add i32 %v1_a32c, 4
  %v3_a32c = inttoptr i32 %v2_a32c to i32*
  store i32 %v0_a32c, i32* %v3_a32c, align 4
  %v0_a330 = load i32, i32* %r3.global-to-local, align 4
  %v1_a330 = trunc i32 %v0_a330 to i8
  %v2_a330 = load i32, i32* %r2.global-to-local, align 4
  %v3_a330 = load i32, i32* @sb, align 4
  %v4_a330 = add i32 %v3_a330, %v2_a330
  %v5_a330 = inttoptr i32 %v4_a330 to i8*
  store i8 %v1_a330, i8* %v5_a330, align 1
  %v0_a334 = load i32, i32* @r8, align 4
  %v1_a334 = trunc i32 %v0_a334 to i8
  %v2_a334 = load i32, i32* %lr.global-to-local, align 4
  %v3_a334 = add i32 %v2_a334, 2
  %v4_a334 = inttoptr i32 %v3_a334 to i8*
  store i8 %v1_a334, i8* %v4_a334, align 1
  %v0_a338 = load i32, i32* @r8, align 4
  %v1_a338 = trunc i32 %v0_a338 to i8
  %v2_a338 = load i32, i32* %lr.global-to-local, align 4
  %v3_a338 = add i32 %v2_a338, 1
  %v4_a338 = inttoptr i32 %v3_a338 to i8*
  store i8 %v1_a338, i8* %v4_a338, align 1
  %v0_a33c = load i32, i32* @r8, align 4
  %v1_a33c = trunc i32 %v0_a33c to i8
  %v2_a33c = load i32, i32* %lr.global-to-local, align 4
  %v3_a33c = add i32 %v2_a33c, 3
  %v4_a33c = inttoptr i32 %v3_a33c to i8*
  store i8 %v1_a33c, i8* %v4_a33c, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a348 = load i32, i32* @r5, align 4
  store i32 %v0_a348, i32* %r1.global-to-local, align 4
  store i32 %v3_9efc, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-120.0.ph, i32* %r2.global-to-local, align 4
  %v0_a354 = load i32, i32* %lr.global-to-local, align 4
  %v6_a35c = inttoptr i32 %v0_a348 to i32*
  %v7_a35c = call i32 @function_1347c(i32 %v3_9efc, i32* %v6_a35c, i32 %stack_var_-120.0.ph, i32 16384, i32 %v0_a354, i32 16)
  %v3_a360 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a360, i32* %r3.global-to-local, align 4
  %v1_a364 = add i32 %v3_a360, 1
  store i32 %v1_a364, i32* %r0.global-to-local, align 4
  %v1_a368 = load i32, i32* @fp, align 4
  %v9_a368 = icmp eq i32 %v1_a364, %v1_a368
  store i1 %v9_a368, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a364, i32* %stack_var_-40, align 4
  %v6_a370 = icmp slt i32 %v1_a364, %v1_a368
  br i1 %v6_a370, label %dec_label_pc_a228, label %dec_label_pc_a210

dec_label_pc_a378:                                ; preds = %dec_label_pc_9f0c
  store i32 %v3_9efc, i32* %r0.global-to-local, align 4
  %v1_a37c = call i32 @function_12bf0(i32 %v3_9efc)
  store i32 %v1_a37c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a380

dec_label_pc_a380:                                ; preds = %dec_label_pc_9da8, %dec_label_pc_a378
  %v29_a384 = phi i32 [ %v3_9efc, %dec_label_pc_9da8 ], [ %v1_a37c, %dec_label_pc_a378 ]
  store i32 %v3_9da8, i32* %r4.global-to-local, align 4
  store i32 %v15_9da8, i32* %r8.global-to-local, align 4
  ret i32 %v29_a384

dec_label_pc_a388:                                ; preds = %dec_label_pc_a228
  %v1_a388 = add i32 %v2_a230, 16
  %v2_a388 = inttoptr i32 %v1_a388 to i32*
  %v3_a388 = load i32, i32* %v2_a388, align 4
  store i32 %v3_a388, i32* %r4.global-to-local, align 4
  %v0_a38c = call i32 @function_e7cc()
  store i32 %v0_a38c, i32* %r0.global-to-local, align 4
  %v3_a390 = load i32, i32* %stack_var_-40, align 4
  %v5_a398 = mul i32 %v3_a390, 24
  %v0_a39c = load i32, i32* %r4.global-to-local, align 4
  %v1_a3a0 = load i32, i32* @sb, align 4
  %v2_a3a0 = add i32 %v1_a3a0, %v5_a398
  store i32 %v2_a3a0, i32* %r1.global-to-local, align 4
  %v1_a3a4 = and i32 %v0_a39c, 65280
  store i32 %v1_a3a4, i32* %r3.global-to-local, align 4
  %v1_a39c = udiv i32 %v0_a39c, 256
  %v3_a3a8 = and i32 %v1_a39c, 65280
  store i32 %v3_a3a8, i32* %r2.global-to-local, align 4
  %v1_a3b0 = add i32 %v2_a3a0, 20
  %v2_a3b0 = inttoptr i32 %v1_a3b0 to i8*
  %v3_a3b0 = load i8, i8* %v2_a3b0, align 1
  %v4_a3b0 = zext i8 %v3_a3b0 to i32
  store i32 %v4_a3b0, i32* %lr.global-to-local, align 4
  %v2_a3bc = call i32 @llvm.bswap.i32(i32 %v0_a39c)
  %v7_a3c0 = lshr i32 %v0_a38c, %v4_a3b0
  %v8_a3c0 = add i32 %v7_a3c0, %v2_a3bc
  %v3_a3cc = mul i32 %v8_a3c0, 16777216
  %v1_a3d0 = and i32 %v8_a3c0, 65280
  store i32 %v1_a3d0, i32* %r0.global-to-local, align 4
  store i32 %v5_9ee8, i32* %r2.global-to-local, align 4
  %v4_a3dc = mul nuw nsw i32 %v1_a3d0, 256
  %v5_a3dc = or i32 %v4_a3dc, %v3_a3cc
  store i32 %v5_a3dc, i32* %r1.global-to-local, align 4
  %v2_a3e0 = call i32 @llvm.bswap.i32(i32 %v8_a3c0)
  store i32 %v2_a3e0, i32* %r3.global-to-local, align 4
  store i1 %v7_a254, i1* %cpsr_z.global-to-local, align 1
  %v1_a3e8 = load i32, i32* @r5, align 4
  %v2_a3e8 = add i32 %v1_a3e8, 16
  %v3_a3e8 = inttoptr i32 %v2_a3e8 to i32*
  store i32 %v2_a3e0, i32* %v3_a3e8, align 4
  br i1 %v2_a254, label %dec_label_pc_a3f0, label %dec_label_pc_a25c

dec_label_pc_a3f0:                                ; preds = %dec_label_pc_a388, %dec_label_pc_a250
  %v0_a3f0 = call i32 @function_e7cc()
  store i32 %v0_a3f0, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  %v0_a3fc = load i32, i32* @sl, align 4
  %v9_a3fc = icmp eq i32 %v0_a3fc, 65535
  store i1 %v9_a3fc, i1* %cpsr_z.global-to-local, align 1
  %v1_a400 = load i32, i32* @r5, align 4
  %v2_a400 = add i32 %v1_a400, 12
  %v3_a400 = inttoptr i32 %v2_a400 to i32*
  store i32 %v0_a3f0, i32* %v3_a400, align 4
  br i1 %v9_a3fc, label %dec_label_pc_a408, label %dec_label_pc_a3f0.dec_label_pc_a26c_crit_edge

dec_label_pc_a3f0.dec_label_pc_a26c_crit_edge:    ; preds = %dec_label_pc_a3f0
  %v1_a270.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a26c

dec_label_pc_a408:                                ; preds = %dec_label_pc_a3f0, %dec_label_pc_a25c
  %v0_a408 = call i32 @function_e7cc()
  %v3_a410 = urem i32 %v0_a408, 65536
  store i32 %v3_a410, i32* %r0.global-to-local, align 4
  %v3_a41415 = udiv i32 %v0_a408, 256
  %v1_a418 = trunc i32 %v3_a41415 to i8
  %v2_a418 = load i32, i32* @r5, align 4
  %v3_a418 = add i32 %v2_a418, 5
  %v4_a418 = inttoptr i32 %v3_a418 to i8*
  store i8 %v1_a418, i8* %v4_a418, align 1
  %v0_a41c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v3_9f50, i32* %r3.global-to-local, align 4
  %v1_a424 = sub i32 999, %v0_a41c
  store i32 %v1_a424, i32* %r2.global-to-local, align 4
  %v3_a428 = sdiv i32 %v1_a424, 256
  store i32 %v3_a428, i32* %r1.global-to-local, align 4
  %v1_a42c = load i32, i32* @r4, align 4
  %v9_a42c = icmp eq i32 %v3_9f50, %v1_a42c
  store i1 %v9_a42c, i1* %cpsr_z.global-to-local, align 1
  %v1_a430 = trunc i32 %v0_a41c to i8
  %v2_a430 = load i32, i32* @r5, align 4
  %v3_a430 = add i32 %v2_a430, 4
  %v4_a430 = inttoptr i32 %v3_a430 to i8*
  store i8 %v1_a430, i8* %v4_a430, align 1
  %v0_a434 = load i32, i32* %r1.global-to-local, align 4
  %v1_a434 = trunc i32 %v0_a434 to i8
  %v2_a434 = load i32, i32* @r6, align 4
  %v3_a434 = add i32 %v2_a434, 5
  %v4_a434 = inttoptr i32 %v3_a434 to i8*
  store i8 %v1_a434, i8* %v4_a434, align 1
  %v0_a438 = load i32, i32* %r2.global-to-local, align 4
  %v1_a438 = trunc i32 %v0_a438 to i8
  %v2_a438 = load i32, i32* @r6, align 4
  %v3_a438 = add i32 %v2_a438, 4
  %v4_a438 = inttoptr i32 %v3_a438 to i8*
  store i8 %v1_a438, i8* %v4_a438, align 1
  %v0_a43c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a43c, label %dec_label_pc_a440, label %dec_label_pc_a408.dec_label_pc_a278_crit_edge

dec_label_pc_a408.dec_label_pc_a278_crit_edge:    ; preds = %dec_label_pc_a408
  %v1_a27c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a278

dec_label_pc_a440:                                ; preds = %dec_label_pc_a408, %dec_label_pc_a26c
  %v0_a440 = call i32 @function_e7cc()
  %v1_a440 = trunc i32 %v0_a440 to i8
  store i32 %v0_a440, i32* %r0.global-to-local, align 4
  store i32 %v3_9f54, i32* %r1.global-to-local, align 4
  %v4_a448 = sdiv i32 %v0_a440, 256
  store i32 %v4_a448, i32* %r3.global-to-local, align 4
  %v1_a44c = load i32, i32* @r4, align 4
  %v9_a44c = icmp eq i32 %v3_9f54, %v1_a44c
  store i1 %v9_a44c, i1* %cpsr_z.global-to-local, align 1
  %v3_a450 = load i32, i32* @r5, align 4
  %v4_a450 = add i32 %v3_a450, 44
  %v5_a450 = inttoptr i32 %v4_a450 to i8*
  store i8 %v1_a440, i8* %v5_a450, align 1
  %v0_a454 = load i32, i32* %r3.global-to-local, align 4
  %v1_a454 = trunc i32 %v0_a454 to i8
  %v2_a454 = load i32, i32* @r7, align 4
  %v3_a454 = add i32 %v2_a454, 1
  %v4_a454 = inttoptr i32 %v3_a454 to i8*
  store i8 %v1_a454, i8* %v4_a454, align 1
  %v0_a458 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a458, label %dec_label_pc_a45c, label %dec_label_pc_a284

dec_label_pc_a45c:                                ; preds = %dec_label_pc_a440, %dec_label_pc_a278
  %v0_a45c = call i32 @function_e7cc()
  %v1_a45c = trunc i32 %v0_a45c to i8
  store i32 %v0_a45c, i32* %r0.global-to-local, align 4
  store i32 %v1_9f48, i32* %r2.global-to-local, align 4
  %v4_a464 = sdiv i32 %v0_a45c, 256
  store i32 %v4_a464, i32* %r3.global-to-local, align 4
  store i1 %v2_a288, i1* %cpsr_z.global-to-local, align 1
  %v1_a46c = trunc i32 %v4_a464 to i8
  %v2_a46c = load i32, i32* @r7, align 4
  %v3_a46c = add i32 %v2_a46c, 3
  %v4_a46c = inttoptr i32 %v3_a46c to i8*
  store i8 %v1_a46c, i8* %v4_a46c, align 1
  %v0_a470 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a470, label %bb101, label %bb100

bb100:                                            ; preds = %dec_label_pc_a45c
  %v1_a470 = load i32, i32* @r5, align 4
  %v2_a470 = add i32 %v1_a470, 16
  %v3_a470 = inttoptr i32 %v2_a470 to i32*
  %v4_a470 = load i32, i32* %v3_a470, align 4
  store i32 %v4_a470, i32* %r3.global-to-local, align 4
  br label %bb101

bb101:                                            ; preds = %dec_label_pc_a45c, %bb100
  %v3_a474 = load i32, i32* @r7, align 4
  %v4_a474 = add i32 %v3_a474, 2
  %v5_a474 = inttoptr i32 %v4_a474 to i8*
  store i8 %v1_a45c, i8* %v5_a474, align 1
  %v0_a478 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a478, label %dec_label_pc_a480, label %bb102

bb102:                                            ; preds = %bb101
  %v1_a478 = load i32, i32* %r3.global-to-local, align 4
  %v2_a478 = load i32, i32* @r6, align 4
  %v3_a478 = add i32 %v2_a478, 16
  %v4_a478 = inttoptr i32 %v3_a478 to i32*
  store i32 %v1_a478, i32* %v4_a478, align 4
  br label %dec_label_pc_a298

dec_label_pc_a480:                                ; preds = %dec_label_pc_a284, %bb101
  %v0_a480 = call i32 @function_e7cc()
  store i32 %v0_a480, i32* %r0.global-to-local, align 4
  store i32 %v1_9eb4, i32* %r3.global-to-local, align 4
  store i1 %v2_a488, i1* %cpsr_z.global-to-local, align 1
  %v1_a48c = load i32, i32* @r6, align 4
  %v2_a48c = add i32 %v1_a48c, 16
  %v3_a48c = inttoptr i32 %v2_a48c to i32*
  store i32 %v0_a480, i32* %v3_a48c, align 4
  br i1 %v2_a488, label %dec_label_pc_a2a4, label %dec_label_pc_a494

dec_label_pc_a494:                                ; preds = %dec_label_pc_a298, %dec_label_pc_a480
  %v0_a494 = load i32, i32* @r7, align 4
  %v1_a494 = add i32 %v0_a494, 8
  store i32 %v1_a494, i32* %r0.global-to-local, align 4
  store i32 %v5_9e94, i32* @r1, align 4
  %v1_a49c = inttoptr i32 %v1_a494 to i8*
  %v2_a49c = call i32 @function_e94c(i8* %v1_a49c)
  store i32 %v2_a49c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a2a4

dec_label_pc_a4a4:                                ; preds = %dec_label_pc_9f34
  %v1_a4ac = add i32 %v5_9e94, 8
  store i32 %v1_a4ac, i32* %r2.global-to-local, align 4
  %v1_a4b0 = add i32 %v5_9e94, 52
  store i32 %v1_a4b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_a210.preheader

; uselistorder directives
  uselistorder i32 %v1_a4b0, { 1, 0 }
  uselistorder i32 %v1_a4ac, { 1, 0 }
  uselistorder i32 %v4_a464, { 1, 0 }
  uselistorder i32 %v0_a45c, { 0, 2, 1 }
  uselistorder i32 %v0_a440, { 0, 2, 1 }
  uselistorder i32 %v2_a3e0, { 1, 0 }
  uselistorder i32 %v8_a3c0, { 1, 2, 0 }
  uselistorder i32 %v0_a39c, { 1, 0, 2 }
  uselistorder i32 %v1_a368, { 1, 2, 0 }
  uselistorder i32 %v1_a364, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_a308, { 1, 0, 2 }
  uselistorder i32 %v4_a304, { 0, 2, 1 }
  uselistorder i32 %v0_a2e4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_a2d4, { 0, 2, 1 }
  uselistorder i32 %v4_a2b8, { 1, 0 }
  uselistorder i32 %v7_a23c, { 1, 0, 2 }
  uselistorder i32 %v0_a210, { 1, 0 }
  uselistorder i1 %v7_a254, { 2, 1, 0 }
  uselistorder i1 %v2_a488, { 2, 3, 1, 0 }
  uselistorder i32 %v1_a1d0, { 1, 0, 2 }
  uselistorder i32 %v0_a194, { 1, 0, 2 }
  uselistorder i32 %v3_a048, { 0, 2, 1 }
  uselistorder i32 %v3_a008, { 1, 0 }
  uselistorder i32 %tmp86, { 1, 0 }
  uselistorder i32 %v1_9fc0, { 1, 0 }
  uselistorder i32 %v1_9f9c, { 1, 0 }
  uselistorder i32 %v1_9f98, { 0, 2, 1 }
  uselistorder i32 %v3_9f7c, { 2, 1, 0 }
  uselistorder i32 %v0_9f58, { 1, 0, 2 }
  uselistorder i32 %v1_9f48, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_9f44, { 0, 2, 1 }
  uselistorder i32 %v0_9f40, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_9f2c, { 1, 0 }
  uselistorder i1 %v7_9f00, { 1, 0 }
  uselistorder i32 %v3_9efc, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v5_9ee8, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_9eb4, { 1, 0, 2 }
  uselistorder i32 %v5_9e94, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8 %v5_9e38, { 1, 0 }
  uselistorder i32 %v2_9dc8, { 0, 3, 1, 2 }
  uselistorder i32 %v1_9dac, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 20, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 36, 35, 37, 38, 40, 39, 42, 41, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 6, 7, 4, 5, 9, 8, 10, 13, 11, 12, 14, 16, 15, 17, 18, 23, 19, 20, 21, 22, 26, 24, 25, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29 }
  uselistorder label %dec_label_pc_a494, { 1, 0 }
  uselistorder label %dec_label_pc_a480, { 1, 0 }
  uselistorder label %bb101, { 1, 0 }
  uselistorder label %dec_label_pc_a380, { 1, 0 }
  uselistorder label %dec_label_pc_a2a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a210.preheader, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %bb93, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %.thread23, { 2, 1, 0 }
}

define i32 @function_a4c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a4c4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a4c4 = load i32, i32* @r4, align 4
  %v12_a4c4 = load i32, i32* @r7, align 4
  %v1_a4c8 = urem i32 %arg1, 256
  store i32 %v1_a4c8, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @sl, align 4
  %v1_a4dc = urem i32 %arg3, 256
  store i32 %v1_a4dc, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  %v2_a4e4 = call i32 @function_137cc(i32 %v1_a4c8, i32 4)
  %v0_a4e8 = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_a4f4 = load i32, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_a4fc = inttoptr i32 %v0_a4e8 to i32*
  %v6_a4fc = call i32 @function_85e0(i32 %v0_a4f4, i32* %v5_a4fc, i32 2, i32 0)
  %v1_a508 = urem i32 %v6_a4fc, 256
  store i32 %v1_a508, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a514 = load i32, i32* @r4, align 4
  %v0_a518 = load i32, i32* @r5, align 4
  %v5_a51c = trunc i32 %v6_a4fc to i8
  %v6_a520 = inttoptr i32 %v0_a518 to i32*
  %v7_a520 = call i32 @function_85e0(i32 %v0_a514, i32* %v6_a520, i32 3, i32 65535)
  %v0_a524 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a520, i32* @r7, align 4
  %v0_a534 = load i32, i32* @r4, align 4
  %v4_a538 = inttoptr i32 %v0_a524 to i32*
  %v5_a538 = call i32 @function_85e0(i32 %v0_a534, i32* %v4_a538, i32 4, i32 64)
  %v1_a540 = urem i32 %v5_a538, 256
  store i32 %v1_a540, i32* %ip.global-to-local, align 4
  %v0_a544 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a550 = load i32, i32* @r4, align 4
  %v5_a554 = trunc i32 %v5_a538 to i8
  %v6_a558 = inttoptr i32 %v0_a544 to i32*
  %v7_a558 = call i32 @function_85e0(i32 %v0_a550, i32* %v6_a558, i32 5, i32 0)
  %v1_a564 = urem i32 %v7_a558, 256
  store i32 %v1_a564, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a570 = load i32, i32* @r4, align 4
  %v0_a574 = load i32, i32* @r5, align 4
  %v5_a57c = inttoptr i32 %v0_a574 to i32*
  %v6_a57c = call i32 @function_85e0(i32 %v0_a570, i32* %v5_a57c, i32 6, i32 65535)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a58c = load i32, i32* @r5, align 4
  store i32 %v6_a57c, i32* @r6, align 4
  %v0_a594 = load i32, i32* @r4, align 4
  %v4_a598 = inttoptr i32 %v0_a58c to i32*
  %v5_a598 = call i32 @function_85e0(i32 %v0_a594, i32* %v4_a598, i32 7, i32 27015)
  store i32 %v5_a598, i32* @r4, align 4
  %v1_a5a4 = call i32 @function_11d20(i32 20)
  %v3_a5b0 = call i32 @function_11c3c(i32 20, i32* nonnull %stack_var_-44)
  store i32 %v3_a5b0, i32* %r8.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_a5c4 = call i32 @function_134e0(i32 2, i32 3, i32 17)
  %v7_a5c8 = icmp eq i32 %v3_a5c4, -1
  store i1 %v7_a5c8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a5c4, i32* %fp.global-to-local, align 4
  br i1 %v7_a5c8, label %dec_label_pc_a97c, label %dec_label_pc_a5d4

dec_label_pc_a5d4:                                ; preds = %dec_label_pc_a4c4
  store i32 1, i32* %stack_var_-40, align 4
  %v6_a5dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_a5dc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_a5f0 = call i32 @function_134b0(i32 %v3_a5c4, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @0 to i32))
  %v7_a5f4 = icmp eq i32 %v6_a5f0, -1
  store i1 %v7_a5f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a5f4, label %dec_label_pc_a974, label %dec_label_pc_a5fc

dec_label_pc_a5fc:                                ; preds = %dec_label_pc_a5d4
  %v0_a5fc = load i32, i32* @r4, align 4
  %v3_a5fc = mul i32 %v0_a5fc, 65536
  store i32 %v3_a5fc, i32* @lr, align 4
  %v0_a600 = load i32, i32* @r7, align 4
  %v0_a604 = load i32, i32* @r6, align 4
  %v3_a604 = mul i32 %v0_a604, 65536
  store i32 %v3_a604, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_a60c = urem i32 %v0_a600, 65536
  %v3_a610 = urem i32 %v0_a604, 65536
  store i32 %v3_a610, i32* %r2.global-to-local, align 4
  %v3_a614 = urem i32 %v0_a5fc, 65536
  store i32 %v3_a614, i32* %r3.global-to-local, align 4
  %v0_a618 = load i32, i32* %sb.global-to-local, align 4
  %v2_a618 = icmp eq i32 %v0_a618, 0
  store i1 %v2_a618, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %tmp50 = icmp slt i32 %v0_a618, 1
  br i1 %tmp50, label %dec_label_pc_a79c, label %dec_label_pc_a630

dec_label_pc_a630:                                ; preds = %dec_label_pc_a5fc
  %v1_a634 = urem i32 %v0_a5fc, 256
  %v1_a638 = urem i32 %v0_a604, 256
  %v1_a63c = urem i32 %v0_a600, 256
  %v3_a640 = mul nuw nsw i32 %v1_a638, 256
  %v3_a644 = mul nuw nsw i32 %v1_a634, 256
  %tmp51 = udiv i32 %v0_a600, 256
  %v3_a648 = urem i32 %tmp51, 256
  %v4_a64c = mul nuw nsw i32 %v1_a63c, 256
  %v5_a64c = or i32 %v4_a64c, %v3_a648
  store i32 %v5_a64c, i32* @r7, align 4
  %tmp52 = udiv i32 %v0_a5fc, 256
  %v4_a650 = urem i32 %tmp52, 256
  %v5_a650 = or i32 %v4_a650, %v3_a644
  store i32 %v5_a650, i32* @r5, align 4
  %tmp53 = udiv i32 %v0_a604, 256
  %v4_a654 = urem i32 %tmp53, 256
  %v5_a654 = or i32 %v4_a654, %v3_a640
  store i32 %v5_a654, i32* @r6, align 4
  store i32 %v1_a638, i32* %r2.global-to-local, align 4
  store i32 %v1_a634, i32* %r3.global-to-local, align 4
  %v2_a6d0 = icmp eq i32 %v1_a564, 0
  %v4_a6d4 = sext i8 %v5_a554 to i32
  %sext = mul i32 %v0_a600, 16777216
  %v4_a6f0 = sdiv i32 %sext, 16777216
  %sext6 = mul i32 %v0_a604, 16777216
  %v4_a74c = sdiv i32 %sext6, 16777216
  %sext7 = mul i32 %v0_a5fc, 16777216
  %v4_a76c = sdiv i32 %sext7, 16777216
  br label %dec_label_pc_a670

dec_label_pc_a670:                                ; preds = %bb57, %dec_label_pc_a630
  %v2_a678 = call i32 @function_137cc(i32 128, i32 1)
  store i32 %v2_a4e4, i32* %r2.global-to-local, align 4
  %v3_a680 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a680, i32* %r3.global-to-local, align 4
  %v2_a684 = load i32, i32* @r4, align 4
  %v5_a684 = mul i32 %v2_a684, 4
  %v6_a684 = add i32 %v5_a684, %v2_a4e4
  %v7_a684 = inttoptr i32 %v6_a684 to i32*
  store i32 %v2_a678, i32* %v7_a684, align 4
  %v0_a688 = load i32, i32* %r2.global-to-local, align 4
  %v1_a688 = load i32, i32* %r3.global-to-local, align 4
  %v4_a688 = mul i32 %v1_a688, 4
  %v5_a688 = add i32 %v4_a688, %v0_a688
  %v6_a688 = inttoptr i32 %v5_a688 to i32*
  %v7_a688 = load i32, i32* %v6_a688, align 4
  store i32 %v7_a688, i32* @lr, align 4
  %v1_a68c = inttoptr i32 %v7_a688 to i8*
  %v2_a68c = load i8, i8* %v1_a68c, align 1
  %tmp = urem i8 %v2_a68c, 16
  %v1_a690 = zext i8 %tmp to i32
  %v1_a694 = or i32 %v1_a690, 64
  store i32 %v1_a694, i32* %r3.global-to-local, align 4
  %v1_a698 = trunc i32 %v1_a694 to i8
  store i8 %v1_a698, i8* %v1_a68c, align 1
  %v0_a69c = load i32, i32* @lr, align 4
  %v1_a69c = inttoptr i32 %v0_a69c to i8*
  %v2_a69c = load i8, i8* %v1_a69c, align 1
  %v1_a6a0 = and i8 %v2_a69c, -16
  %v1_a6a4 = or i8 %v1_a6a0, 5
  store i8 %v1_a6a4, i8* %v1_a69c, align 1
  %v2_a6b0 = load i32, i32* @lr, align 4
  %v3_a6b0 = add i32 %v2_a6b0, 1
  %v4_a6b0 = inttoptr i32 %v3_a6b0 to i8*
  store i8 %v5_a51c, i8* %v4_a6b0, align 1
  %v3_a6b4 = load i32, i32* %stack_var_-44, align 4
  %v1_a6b8 = add i32 %v3_a6b4, 32
  %tmp54 = mul i32 %v1_a6b8, 256
  %v1_a6c4 = and i32 %tmp54, 65280
  %tmp55 = udiv i32 %v1_a6b8, 256
  %v4_a6c8 = urem i32 %tmp55, 256
  %v5_a6c8 = or i32 %v4_a6c8, %v1_a6c4
  store i32 %v5_a6c8, i32* %r2.global-to-local, align 4
  store i1 %v2_a6d0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_a6d4, i32* %r3.global-to-local, align 4
  %v2_a6d8 = load i32, i32* @lr, align 4
  %v3_a6d8 = add i32 %v2_a6d8, 8
  %v4_a6d8 = inttoptr i32 %v3_a6d8 to i8*
  store i8 %v5_a554, i8* %v4_a6d8, align 1
  %v0_a6dc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a6dc, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a670
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a6e0 = load i32, i32* @lr, align 4
  %v4_a6e0 = add i32 %v3_a6e0, 6
  %v5_a6e0 = inttoptr i32 %v4_a6e0 to i8*
  store i8 64, i8* %v5_a6e0, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a670, %bb
  %v0_a6e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a6e4 = trunc i32 %v0_a6e4 to i8
  %v2_a6e4 = load i32, i32* @lr, align 4
  %v3_a6e4 = add i32 %v2_a6e4, 2
  %v4_a6e4 = inttoptr i32 %v3_a6e4 to i8*
  store i8 %v1_a6e4, i8* %v4_a6e4, align 1
  %v0_a6e8 = load i32, i32* %r2.global-to-local, align 4
  %v3_a6e8 = sdiv i32 %v0_a6e8, 256
  store i32 %v3_a6e8, i32* %ip.global-to-local, align 4
  store i32 %v4_a6f0, i32* %r2.global-to-local, align 4
  %v2_a6f4 = load i32, i32* @lr, align 4
  %v3_a6f4 = add i32 %v2_a6f4, 9
  %v4_a6f4 = inttoptr i32 %v3_a6f4 to i8*
  store i8 17, i8* %v4_a6f4, align 1
  store i32 ptrtoint (i32* @global_var_1dc68.49 to i32), i32* %r3.global-to-local, align 4
  %v0_a6fc = load i32, i32* %r2.global-to-local, align 4
  %v1_a6fc = trunc i32 %v0_a6fc to i8
  %v2_a6fc = load i32, i32* @lr, align 4
  %v3_a6fc = add i32 %v2_a6fc, 5
  %v4_a6fc = inttoptr i32 %v3_a6fc to i8*
  store i8 %v1_a6fc, i8* %v4_a6fc, align 1
  %v0_a700 = load i32, i32* %ip.global-to-local, align 4
  %v1_a700 = trunc i32 %v0_a700 to i8
  %v2_a700 = load i32, i32* @lr, align 4
  %v3_a700 = add i32 %v2_a700, 3
  %v4_a700 = inttoptr i32 %v3_a700 to i8*
  store i8 %v1_a700, i8* %v4_a700, align 1
  %v0_a704 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a704, label %.thread8, label %bb56

.thread8:                                         ; preds = %.thread
  %v3_a7089 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a7089, i32* %ip.global-to-local, align 4
  br label %bb57

bb56:                                             ; preds = %.thread
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_a708 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a708, i32* %ip.global-to-local, align 4
  %v3_a70c = load i32, i32* @lr, align 4
  %v4_a70c = add i32 %v3_a70c, 7
  %v5_a70c = inttoptr i32 %v4_a70c to i8*
  store i8 0, i8* %v5_a70c, align 1
  %v0_a714.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %bb56
  %v0_a714 = phi i32 [ %v3_a7089, %.thread8 ], [ %v0_a714.pre, %bb56 ]
  %v2_a710 = load i32, i32* @global_var_1dc68.49, align 4
  store i32 %v2_a710, i32* %r2.global-to-local, align 4
  %v3_a714 = mul i32 %v0_a714, 32
  store i32 %v3_a714, i32* %r3.global-to-local, align 4
  %v1_a718 = load i32, i32* @lr, align 4
  %v2_a718 = add i32 %v1_a718, 12
  %v3_a718 = inttoptr i32 %v2_a718 to i32*
  store i32 %v2_a710, i32* %v3_a718, align 4
  %v0_a71c = load i32, i32* %r3.global-to-local, align 4
  %v1_a71c = load i32, i32* %ip.global-to-local, align 4
  %tmp60 = mul i32 %v1_a71c, -8
  %v5_a71c = add i32 %v0_a71c, %tmp60
  %v1_a720 = load i32, i32* @sl, align 4
  %v2_a720 = add i32 %v5_a71c, %v1_a720
  store i32 %v2_a720, i32* %r3.global-to-local, align 4
  %v1_a724 = add i32 %v2_a720, 16
  %v2_a724 = inttoptr i32 %v1_a724 to i32*
  %v3_a724 = load i32, i32* %v2_a724, align 4
  %v1_a728 = load i32, i32* @lr, align 4
  %v2_a728 = add i32 %v1_a728, 16
  %v3_a728 = inttoptr i32 %v2_a728 to i32*
  store i32 %v3_a724, i32* %v3_a728, align 4
  %v3_a72c = load i32, i32* %stack_var_-44, align 4
  %v1_a730 = add i32 %v3_a72c, 12
  %tmp58 = mul i32 %v1_a730, 256
  %v1_a740 = and i32 %tmp58, 65280
  %tmp59 = udiv i32 %v1_a730, 256
  %v4_a744 = urem i32 %tmp59, 256
  %v5_a744 = or i32 %v4_a744, %v1_a740
  store i32 %v5_a744, i32* %ip.global-to-local, align 4
  %v1_a748 = load i32, i32* @lr, align 4
  %v2_a748 = add i32 %v1_a748, 28
  %v3_a748 = inttoptr i32 %v2_a748 to i32*
  store i32 -1, i32* %v3_a748, align 4
  store i32 %v4_a74c, i32* %r2.global-to-local, align 4
  %v0_a750 = load i32, i32* @lr, align 4
  %v1_a750 = add i32 %v0_a750, 20
  store i32 %v1_a750, i32* %r4.global-to-local, align 4
  %v0_a754 = load i32, i32* %ip.global-to-local, align 4
  %v3_a754 = sdiv i32 %v0_a754, 256
  store i32 %v3_a754, i32* %r3.global-to-local, align 4
  %v0_a758 = load i32, i32* @r7, align 4
  %v1_a758 = trunc i32 %v0_a758 to i8
  %v3_a758 = add i32 %v0_a750, 4
  %v4_a758 = inttoptr i32 %v3_a758 to i8*
  store i8 %v1_a758, i8* %v4_a758, align 1
  %v0_a75c = load i32, i32* @r6, align 4
  %v1_a75c = trunc i32 %v0_a75c to i8
  %v2_a75c = load i32, i32* @lr, align 4
  %v3_a75c = add i32 %v2_a75c, 20
  %v4_a75c = inttoptr i32 %v3_a75c to i8*
  store i8 %v1_a75c, i8* %v4_a75c, align 1
  %v0_a760 = load i32, i32* %r3.global-to-local, align 4
  %v1_a760 = trunc i32 %v0_a760 to i8
  %v2_a760 = load i32, i32* %r4.global-to-local, align 4
  %v3_a760 = add i32 %v2_a760, 5
  %v4_a760 = inttoptr i32 %v3_a760 to i8*
  store i8 %v1_a760, i8* %v4_a760, align 1
  %v0_a764 = load i32, i32* @r5, align 4
  %v1_a764 = trunc i32 %v0_a764 to i8
  %v2_a764 = load i32, i32* %r4.global-to-local, align 4
  %v3_a764 = add i32 %v2_a764, 2
  %v4_a764 = inttoptr i32 %v3_a764 to i8*
  store i8 %v1_a764, i8* %v4_a764, align 1
  %v0_a768 = load i32, i32* %r2.global-to-local, align 4
  %v1_a768 = trunc i32 %v0_a768 to i8
  %v2_a768 = load i32, i32* %r4.global-to-local, align 4
  %v3_a768 = add i32 %v2_a768, 1
  %v4_a768 = inttoptr i32 %v3_a768 to i8*
  store i8 %v1_a768, i8* %v4_a768, align 1
  store i32 %v4_a76c, i32* %r3.global-to-local, align 4
  %v0_a770 = load i32, i32* %ip.global-to-local, align 4
  %v1_a770 = trunc i32 %v0_a770 to i8
  %v2_a770 = load i32, i32* %r4.global-to-local, align 4
  %v3_a770 = add i32 %v2_a770, 4
  %v4_a770 = inttoptr i32 %v3_a770 to i8*
  store i8 %v1_a770, i8* %v4_a770, align 1
  %v0_a774 = load i32, i32* %r3.global-to-local, align 4
  %v1_a774 = trunc i32 %v0_a774 to i8
  %v2_a774 = load i32, i32* %r4.global-to-local, align 4
  %v3_a774 = add i32 %v2_a774, 3
  %v4_a774 = inttoptr i32 %v3_a774 to i8*
  store i8 %v1_a774, i8* %v4_a774, align 1
  %v0_a778 = load i32, i32* %r8.global-to-local, align 4
  %v0_a77c = load i32, i32* @lr, align 4
  %v1_a77c = add i32 %v0_a77c, 32
  %v3_a780 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a780, i32* %r2.global-to-local, align 4
  %v3_a784 = call i32 @function_12368(i32 %v1_a77c, i32 %v0_a778, i32 %v3_a780)
  %v3_a788 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a788, i32* %r3.global-to-local, align 4
  %v1_a78c = add i32 %v3_a788, 1
  store i32 %v1_a78c, i32* @r4, align 4
  %v1_a790 = load i32, i32* %sb.global-to-local, align 4
  %v9_a790 = icmp eq i32 %v1_a78c, %v1_a790
  store i1 %v9_a790, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a78c, i32* %stack_var_-40, align 4
  %v5_a798 = icmp slt i32 %v1_a78c, %v1_a790
  br i1 %v5_a798, label %dec_label_pc_a670, label %dec_label_pc_a79c

dec_label_pc_a79c:                                ; preds = %bb57, %dec_label_pc_a5fc
  %v0_a79c = phi i32 [ %v0_a618, %dec_label_pc_a5fc ], [ %v1_a790, %bb57 ]
  %v2_a79c = icmp eq i32 %v0_a79c, 0
  store i1 %v2_a79c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a7e4 = icmp eq i32 %v3_a60c, 65535
  br label %dec_label_pc_a7a4.outer

dec_label_pc_a7a4.outer:                          ; preds = %dec_label_pc_a8b4, %dec_label_pc_a79c
  %v1_a7a4.ph.in = phi i32 [ %v1_a8a8, %dec_label_pc_a8b4 ], [ %v0_a79c, %dec_label_pc_a79c ]
  %v0_a7a4.ph = phi i1 [ %v2_a8b4, %dec_label_pc_a8b4 ], [ %v2_a79c, %dec_label_pc_a79c ]
  %v1_a7a4.ph = icmp slt i32 %v1_a7a4.ph.in, 0
  %v4_a7a4 = or i1 %v1_a7a4.ph, %v0_a7a4.ph
  br label %dec_label_pc_a7a4

dec_label_pc_a7a4:                                ; preds = %dec_label_pc_a7a4.outer, %dec_label_pc_a7a4
  br i1 %v4_a7a4, label %dec_label_pc_a7a4, label %dec_label_pc_a7a8

dec_label_pc_a7a8:                                ; preds = %dec_label_pc_a7a4
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_a7b4

dec_label_pc_a7b4:                                ; preds = %dec_label_pc_a804, %dec_label_pc_a7a8
  %v1_a7c8 = phi i32 [ %v1_a8a4, %dec_label_pc_a804 ], [ 0, %dec_label_pc_a7a8 ]
  %v5_a7b8 = mul i32 %v1_a7c8, 24
  %v1_a7bc = load i32, i32* @sl, align 4
  %v2_a7bc = add i32 %v1_a7bc, %v5_a7b8
  store i32 %v2_a7bc, i32* %r3.global-to-local, align 4
  %v1_a7c4 = add i32 %v2_a7bc, 20
  %v2_a7c4 = inttoptr i32 %v1_a7c4 to i8*
  %v3_a7c4 = load i8, i8* %v2_a7c4, align 1
  %v4_a7c4 = zext i8 %v3_a7c4 to i32
  store i32 %v4_a7c4, i32* %r2.global-to-local, align 4
  %v4_a7c8 = mul i32 %v1_a7c8, 4
  %v5_a7c8 = add i32 %v4_a7c8, %v2_a4e4
  %v6_a7c8 = inttoptr i32 %v5_a7c8 to i32*
  %v7_a7c8 = load i32, i32* %v6_a7c8, align 4
  store i32 %v7_a7c8, i32* @r5, align 4
  %v7_a7d0 = icmp eq i8 %v3_a7c4, 31
  store i1 %v7_a7d0, i1* %cpsr_z.global-to-local, align 1
  store i32 65535, i32* %r7.global-to-local, align 4
  %v1_a7d8 = add i32 %v7_a7c8, 20
  store i32 %v1_a7d8, i32* @r6, align 4
  %tmp61 = icmp ult i8 %v3_a7c4, 32
  br i1 %tmp61, label %dec_label_pc_a8c0, label %dec_label_pc_a7e0

dec_label_pc_a7e0:                                ; preds = %dec_label_pc_a7b4
  store i32 %v3_a60c, i32* %r2.global-to-local, align 4
  store i1 %v3_a7e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a7e4, label %dec_label_pc_a928, label %dec_label_pc_a7ec

dec_label_pc_a7ec:                                ; preds = %dec_label_pc_a8c0.dec_label_pc_a7ec_crit_edge, %dec_label_pc_a7e0
  %v1_a7f0 = phi i32 [ %v1_a7f0.pre, %dec_label_pc_a8c0.dec_label_pc_a7ec_crit_edge ], [ 65535, %dec_label_pc_a7e0 ]
  store i32 %v3_a610, i32* %r3.global-to-local, align 4
  %v9_a7f0 = icmp eq i32 %v3_a610, %v1_a7f0
  store i1 %v9_a7f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a7f0, label %dec_label_pc_a944, label %dec_label_pc_a7f8

dec_label_pc_a7f8:                                ; preds = %dec_label_pc_a928.dec_label_pc_a7f8_crit_edge, %dec_label_pc_a7ec
  %v1_a7fc = phi i32 [ %v1_a7fc.pre, %dec_label_pc_a928.dec_label_pc_a7f8_crit_edge ], [ %v1_a7f0, %dec_label_pc_a7ec ]
  %v9_a7fc = icmp eq i32 %v3_a614, %v1_a7fc
  store i1 %v9_a7fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a7fc, label %dec_label_pc_a960, label %dec_label_pc_a804

dec_label_pc_a804:                                ; preds = %dec_label_pc_a944, %dec_label_pc_a7f8, %dec_label_pc_a960
  %v0_a808 = load i32, i32* %r8.global-to-local, align 4
  %v1_a808 = trunc i32 %v0_a808 to i8
  %v2_a808 = load i32, i32* @r5, align 4
  %v3_a808 = add i32 %v2_a808, 10
  %v4_a808 = inttoptr i32 %v3_a808 to i8*
  store i8 %v1_a808, i8* %v4_a808, align 1
  %v0_a80c = load i32, i32* %r8.global-to-local, align 4
  %v1_a80c = trunc i32 %v0_a80c to i8
  %v2_a80c = load i32, i32* @r5, align 4
  %v3_a80c = add i32 %v2_a80c, 11
  %v4_a80c = inttoptr i32 %v3_a80c to i8*
  store i8 %v1_a80c, i8* %v4_a80c, align 1
  %v0_a810 = load i32, i32* @r5, align 4
  store i32 %v0_a810, i32* @r0, align 4
  %v2_a814 = call i32 @function_d0b8(i32 %v0_a810, i32 20)
  %v3_a814 = trunc i32 %v2_a814 to i8
  %v4_a818 = sdiv i32 %v2_a814, 256
  store i32 %v4_a818, i32* %r3.global-to-local, align 4
  %v1_a81c = trunc i32 %v4_a818 to i8
  %v2_a81c = load i32, i32* @r5, align 4
  %v3_a81c = add i32 %v2_a81c, 11
  %v4_a81c = inttoptr i32 %v3_a81c to i8*
  store i8 %v1_a81c, i8* %v4_a81c, align 1
  %v3_a820 = load i32, i32* @r5, align 4
  %v4_a820 = add i32 %v3_a820, 10
  %v5_a820 = inttoptr i32 %v4_a820 to i8*
  store i8 %v3_a814, i8* %v5_a820, align 1
  %v0_a824 = load i32, i32* %r8.global-to-local, align 4
  %v1_a824 = trunc i32 %v0_a824 to i8
  %v2_a824 = load i32, i32* @r6, align 4
  %v3_a824 = add i32 %v2_a824, 6
  %v4_a824 = inttoptr i32 %v3_a824 to i8*
  store i8 %v1_a824, i8* %v4_a824, align 1
  %v0_a828 = load i32, i32* %r8.global-to-local, align 4
  %v1_a828 = trunc i32 %v0_a828 to i8
  %v2_a828 = load i32, i32* @r6, align 4
  %v3_a828 = add i32 %v2_a828, 7
  %v4_a828 = inttoptr i32 %v3_a828 to i8*
  store i8 %v1_a828, i8* %v4_a828, align 1
  %v0_a82c = load i32, i32* @r5, align 4
  %v1_a82c = add i32 %v0_a82c, 24
  %v2_a82c = inttoptr i32 %v1_a82c to i8*
  %v3_a82c = load i8, i8* %v2_a82c, align 1
  %v4_a82c = zext i8 %v3_a82c to i32
  store i32 %v4_a82c, i32* %r3.global-to-local, align 4
  %v1_a830 = add i32 %v0_a82c, 25
  %v2_a830 = inttoptr i32 %v1_a830 to i8*
  %v3_a830 = load i8, i8* %v2_a830, align 1
  %v4_a830 = zext i8 %v3_a830 to i32
  %v4_a834 = mul nuw nsw i32 %v4_a830, 256
  %v5_a834 = or i32 %v4_a834, %v4_a82c
  store i32 %v5_a834, i32* %r2.global-to-local, align 4
  %v3_a838 = load i32, i32* %stack_var_-44, align 4
  %v0_a83c = load i32, i32* @r6, align 4
  store i32 %v0_a83c, i32* @r1, align 4
  %v1_a840 = add i32 %v3_a838, 12
  store i32 %v1_a840, i32* %r3.global-to-local, align 4
  %v4_a848 = call i32 @function_d114(i32 %v0_a82c, i32 %v0_a83c, i32 %v5_a834, i32 %v1_a840)
  %v5_a848 = trunc i32 %v4_a848 to i8
  %v4_a84c24 = udiv i32 %v4_a848, 256
  %v1_a850 = trunc i32 %v4_a84c24 to i8
  %v2_a850 = load i32, i32* @r6, align 4
  %v3_a850 = add i32 %v2_a850, 7
  %v4_a850 = inttoptr i32 %v3_a850 to i8*
  store i8 %v1_a850, i8* %v4_a850, align 1
  %v3_a854 = load i32, i32* @r6, align 4
  %v4_a854 = add i32 %v3_a854, 6
  %v5_a854 = inttoptr i32 %v4_a854 to i8*
  store i8 %v5_a848, i8* %v5_a854, align 1
  %v3_a858 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a858, i32* %r3.global-to-local, align 4
  %v0_a85c = load i32, i32* @r5, align 4
  %v1_a85c = add i32 %v0_a85c, 20
  %v2_a85c = inttoptr i32 %v1_a85c to i32*
  %v3_a85c = load i32, i32* %v2_a85c, align 4
  %v5_a864 = mul i32 %v3_a858, 24
  %v1_a868 = load i32, i32* @sl, align 4
  %v2_a868 = add i32 %v1_a868, %v5_a864
  store i32 %v2_a868, i32* %ip.global-to-local, align 4
  %v3_a86c = udiv i32 %v3_a85c, 65536
  store i32 %v3_a86c, i32* %r2.global-to-local, align 4
  %v1_a870 = trunc i32 %v3_a86c to i8
  %v3_a870 = add i32 %v2_a868, 2
  %v4_a870 = inttoptr i32 %v3_a870 to i8*
  store i8 %v1_a870, i8* %v4_a870, align 1
  %v0_a874 = load i32, i32* %r2.global-to-local, align 4
  %v3_a87425 = udiv i32 %v0_a874, 256
  %v3_a878 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a878, i32* %r2.global-to-local, align 4
  %v1_a87c = trunc i32 %v3_a87425 to i8
  %v2_a87c = load i32, i32* %ip.global-to-local, align 4
  %v3_a87c = add i32 %v2_a87c, 3
  %v4_a87c = inttoptr i32 %v3_a87c to i8*
  store i8 %v1_a87c, i8* %v4_a87c, align 1
  %v0_a880 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a888 = load i32, i32* %r2.global-to-local, align 4
  %v1_a888 = add i32 %v0_a888, 32
  store i32 %v1_a888, i32* %r2.global-to-local, align 4
  %v0_a88c = load i32, i32* %fp.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_a894 = load i32, i32* %ip.global-to-local, align 4
  %v6_a89c = inttoptr i32 %v0_a880 to i32*
  %v7_a89c = call i32 @function_1347c(i32 %v0_a88c, i32* %v6_a89c, i32 %v1_a888, i32 16384, i32 %v0_a894, i32 16)
  %v3_a8a0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a8a0, i32* %r3.global-to-local, align 4
  %v1_a8a4 = add i32 %v3_a8a0, 1
  %v1_a8a8 = load i32, i32* %sb.global-to-local, align 4
  %v9_a8a8 = icmp eq i32 %v1_a8a4, %v1_a8a8
  store i1 %v9_a8a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a8a4, i32* %stack_var_-40, align 4
  %v5_a8b0 = icmp slt i32 %v1_a8a4, %v1_a8a8
  br i1 %v5_a8b0, label %dec_label_pc_a7b4, label %dec_label_pc_a8b4

dec_label_pc_a8b4:                                ; preds = %dec_label_pc_a804
  %v2_a8b4 = icmp eq i32 %v1_a8a8, 0
  store i1 %v2_a8b4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_a7a4.outer

dec_label_pc_a8c0:                                ; preds = %dec_label_pc_a7b4
  %v1_a8c0 = add i32 %v2_a7bc, 16
  %v2_a8c0 = inttoptr i32 %v1_a8c0 to i32*
  %v3_a8c0 = load i32, i32* %v2_a8c0, align 4
  store i32 %v3_a8c0, i32* @r4, align 4
  %v0_a8c4 = call i32 @function_e7cc()
  %v3_a8c8 = load i32, i32* %stack_var_-40, align 4
  %v5_a8d0 = mul i32 %v3_a8c8, 24
  %v0_a8d4 = load i32, i32* @r4, align 4
  %v1_a8d8 = and i32 %v0_a8d4, 65280
  store i32 %v1_a8d8, i32* %r3.global-to-local, align 4
  %v1_a8d4 = udiv i32 %v0_a8d4, 256
  %v3_a8dc = and i32 %v1_a8d4, 65280
  store i32 %v3_a8dc, i32* %r2.global-to-local, align 4
  %v1_a8e0 = load i32, i32* @sl, align 4
  %v2_a8e0 = add i32 %v1_a8e0, %v5_a8d0
  store i32 %v2_a8e0, i32* %ip.global-to-local, align 4
  %v1_a8ec = add i32 %v2_a8e0, 20
  %v2_a8ec = inttoptr i32 %v1_a8ec to i8*
  %v3_a8ec = load i8, i8* %v2_a8ec, align 1
  %v4_a8ec = zext i8 %v3_a8ec to i32
  %v2_a8f4 = call i32 @llvm.bswap.i32(i32 %v0_a8d4)
  %v7_a8f8 = lshr i32 %v0_a8c4, %v4_a8ec
  %v8_a8f8 = add i32 %v7_a8f8, %v2_a8f4
  store i32 %v3_a60c, i32* %r2.global-to-local, align 4
  %v2_a918 = call i32 @llvm.bswap.i32(i32 %v8_a8f8)
  store i32 %v2_a918, i32* %r3.global-to-local, align 4
  %v1_a91c = load i32, i32* %r7.global-to-local, align 4
  %v9_a91c = icmp eq i32 %v3_a60c, %v1_a91c
  store i1 %v9_a91c, i1* %cpsr_z.global-to-local, align 1
  %v1_a920 = load i32, i32* @r5, align 4
  %v2_a920 = add i32 %v1_a920, 16
  %v3_a920 = inttoptr i32 %v2_a920 to i32*
  store i32 %v2_a918, i32* %v3_a920, align 4
  br i1 %v9_a91c, label %dec_label_pc_a928, label %dec_label_pc_a8c0.dec_label_pc_a7ec_crit_edge

dec_label_pc_a8c0.dec_label_pc_a7ec_crit_edge:    ; preds = %dec_label_pc_a8c0
  %v1_a7f0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_a7ec

dec_label_pc_a928:                                ; preds = %dec_label_pc_a8c0, %dec_label_pc_a7e0
  %v0_a928 = call i32 @function_e7cc()
  %v1_a928 = trunc i32 %v0_a928 to i8
  %v4_a92c26 = udiv i32 %v0_a928, 256
  %v1_a930 = trunc i32 %v4_a92c26 to i8
  %v2_a930 = load i32, i32* @r5, align 4
  %v3_a930 = add i32 %v2_a930, 5
  %v4_a930 = inttoptr i32 %v3_a930 to i8*
  store i8 %v1_a930, i8* %v4_a930, align 1
  store i32 %v3_a610, i32* %r3.global-to-local, align 4
  %v1_a938 = load i32, i32* %r7.global-to-local, align 4
  %v9_a938 = icmp eq i32 %v3_a610, %v1_a938
  store i1 %v9_a938, i1* %cpsr_z.global-to-local, align 1
  %v3_a93c = load i32, i32* @r5, align 4
  %v4_a93c = add i32 %v3_a93c, 4
  %v5_a93c = inttoptr i32 %v4_a93c to i8*
  store i8 %v1_a928, i8* %v5_a93c, align 1
  %v0_a940 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a940, label %dec_label_pc_a944, label %dec_label_pc_a928.dec_label_pc_a7f8_crit_edge

dec_label_pc_a928.dec_label_pc_a7f8_crit_edge:    ; preds = %dec_label_pc_a928
  %v1_a7fc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_a7f8

dec_label_pc_a944:                                ; preds = %dec_label_pc_a928, %dec_label_pc_a7ec
  %v0_a944 = call i32 @function_e7cc()
  %v1_a944 = trunc i32 %v0_a944 to i8
  %v4_a94c = sdiv i32 %v0_a944, 256
  store i32 %v4_a94c, i32* %r3.global-to-local, align 4
  %v1_a950 = load i32, i32* %r7.global-to-local, align 4
  %v9_a950 = icmp eq i32 %v3_a614, %v1_a950
  store i1 %v9_a950, i1* %cpsr_z.global-to-local, align 1
  %v3_a954 = load i32, i32* @r5, align 4
  %v4_a954 = add i32 %v3_a954, 20
  %v5_a954 = inttoptr i32 %v4_a954 to i8*
  store i8 %v1_a944, i8* %v5_a954, align 1
  %v0_a958 = load i32, i32* %r3.global-to-local, align 4
  %v1_a958 = trunc i32 %v0_a958 to i8
  %v2_a958 = load i32, i32* @r6, align 4
  %v3_a958 = add i32 %v2_a958, 1
  %v4_a958 = inttoptr i32 %v3_a958 to i8*
  store i8 %v1_a958, i8* %v4_a958, align 1
  %v0_a95c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a95c, label %dec_label_pc_a960, label %dec_label_pc_a804

dec_label_pc_a960:                                ; preds = %dec_label_pc_a944, %dec_label_pc_a7f8
  %v0_a960 = call i32 @function_e7cc()
  %v1_a960 = trunc i32 %v0_a960 to i8
  %v4_a964 = sdiv i32 %v0_a960, 256
  store i32 %v4_a964, i32* %r3.global-to-local, align 4
  %v1_a968 = trunc i32 %v4_a964 to i8
  %v2_a968 = load i32, i32* @r6, align 4
  %v3_a968 = add i32 %v2_a968, 3
  %v4_a968 = inttoptr i32 %v3_a968 to i8*
  store i8 %v1_a968, i8* %v4_a968, align 1
  %v3_a96c = load i32, i32* @r6, align 4
  %v4_a96c = add i32 %v3_a96c, 2
  %v5_a96c = inttoptr i32 %v4_a96c to i8*
  store i8 %v1_a960, i8* %v5_a96c, align 1
  br label %dec_label_pc_a804

dec_label_pc_a974:                                ; preds = %dec_label_pc_a5d4
  %v0_a974 = load i32, i32* %fp.global-to-local, align 4
  %v1_a978 = call i32 @function_12bf0(i32 %v0_a974)
  br label %dec_label_pc_a97c

dec_label_pc_a97c:                                ; preds = %dec_label_pc_a4c4, %dec_label_pc_a974
  %v29_a980 = phi i32 [ %v3_a5c4, %dec_label_pc_a4c4 ], [ %v1_a978, %dec_label_pc_a974 ]
  store i32 %v3_a4c4, i32* %r4.global-to-local, align 4
  store i32 %v12_a4c4, i32* %r7.global-to-local, align 4
  ret i32 %v29_a980

; uselistorder directives
  uselistorder i32 %v4_a964, { 1, 0 }
  uselistorder i32 %v2_a918, { 1, 0 }
  uselistorder i32 %v0_a8d4, { 1, 0, 2 }
  uselistorder i1 %v2_a8b4, { 1, 0 }
  uselistorder i32 %v1_a8a8, { 1, 2, 3, 0 }
  uselistorder i32 %v1_a8a4, { 2, 0, 3, 1 }
  uselistorder i32 %v3_a86c, { 1, 0 }
  uselistorder i32 %v4_a818, { 1, 0 }
  uselistorder i1 %v3_a7e4, { 1, 0 }
  uselistorder i32 %v1_a78c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a730, { 1, 0 }
  uselistorder i32 %v1_a6b8, { 1, 0 }
  uselistorder i32 %v1_a638, { 1, 0 }
  uselistorder i32 %v1_a634, { 1, 0 }
  uselistorder i32 %v0_a604, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_a5fc, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_a5f4, { 1, 0 }
  uselistorder i1 %v7_a5c8, { 1, 0 }
  uselistorder i32 %v3_a5c4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_a564, { 1, 0 }
  uselistorder i8 %v5_a554, { 1, 0 }
  uselistorder i32 %v5_a538, { 1, 0 }
  uselistorder i32 %v6_a4fc, { 1, 0 }
  uselistorder i32 %v1_a4c8, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %stack_var_-40, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 1, 13, 12 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_a97c, { 1, 0 }
  uselistorder label %dec_label_pc_a804, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a7a4, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_a988(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a988:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-2120 = alloca i32, align 4
  %v3_a988 = load i32, i32* @r4, align 4
  %v15_a988 = load i32, i32* @r8, align 4
  %v18_a988 = load i32, i32* @sb, align 4
  %v21_a988 = load i32, i32* @sl, align 4
  %v24_a988 = load i32, i32* @fp, align 4
  %v1_a994 = urem i32 %arg1, 256
  store i32 %v1_a994, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_a9a0 = urem i32 %arg3, 256
  store i32 %v1_a9a0, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  %v2_a9ac = call i32 @function_137cc(i32 %v1_a994, i32 4)
  %v0_a9b0 = load i32, i32* @r5, align 4
  store i32 %v0_a9b0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_a9bc = load i32, i32* @r4, align 4
  store i32 %v0_a9bc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_a9c4 = inttoptr i32 %v0_a9b0 to i32*
  %v6_a9c4 = call i32 @function_85e0(i32 %v0_a9bc, i32* %v5_a9c4, i32 2, i32 0)
  %v1_a9d0 = urem i32 %v6_a9c4, 256
  store i32 %v1_a9d0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a9dc = load i32, i32* @r4, align 4
  store i32 %v0_a9dc, i32* %r0.global-to-local, align 4
  %v0_a9e0 = load i32, i32* @r5, align 4
  store i32 %v0_a9e0, i32* %r1.global-to-local, align 4
  %v5_a9e4 = trunc i32 %v6_a9c4 to i8
  %v6_a9e8 = inttoptr i32 %v0_a9e0 to i32*
  %v7_a9e8 = call i32 @function_85e0(i32 %v0_a9dc, i32* %v6_a9e8, i32 3, i32 65535)
  %v0_a9ec = load i32, i32* @r5, align 4
  store i32 %v0_a9ec, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_a9f8 = load i32, i32* @r4, align 4
  store i32 %v0_a9f8, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_aa00 = inttoptr i32 %v0_a9ec to i32*
  %v6_aa00 = call i32 @function_85e0(i32 %v0_a9f8, i32* %v5_aa00, i32 4, i32 64)
  %v1_aa08 = urem i32 %v6_aa00, 256
  store i32 %v1_aa08, i32* %ip.global-to-local, align 4
  %v0_aa0c = load i32, i32* @r5, align 4
  store i32 %v0_aa0c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_aa18 = load i32, i32* @r4, align 4
  store i32 %v0_aa18, i32* %r0.global-to-local, align 4
  %v6_aa20 = inttoptr i32 %v0_aa0c to i32*
  %v7_aa20 = call i32 @function_85e0(i32 %v0_aa18, i32* %v6_aa20, i32 5, i32 0)
  %v1_aa2c = urem i32 %v7_aa20, 256
  store i32 %v1_aa2c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_aa38 = load i32, i32* @r4, align 4
  store i32 %v0_aa38, i32* %r0.global-to-local, align 4
  %v0_aa3c = load i32, i32* @r5, align 4
  store i32 %v0_aa3c, i32* %r1.global-to-local, align 4
  %v5_aa44 = inttoptr i32 %v0_aa3c to i32*
  %v6_aa44 = call i32 @function_85e0(i32 %v0_aa38, i32* %v5_aa44, i32 6, i32 65535)
  %v0_aa48 = load i32, i32* @r5, align 4
  store i32 %v0_aa48, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  store i32 %v6_aa44, i32* %fp.global-to-local, align 4
  %v0_aa58 = load i32, i32* @r4, align 4
  store i32 %v0_aa58, i32* %r0.global-to-local, align 4
  %v4_aa5c = inttoptr i32 %v0_aa48 to i32*
  %v5_aa5c = call i32 @function_85e0(i32 %v0_aa58, i32* %v4_aa5c, i32 7, i32 53)
  %v0_aa64 = load i32, i32* @r5, align 4
  store i32 %v0_aa64, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v5_aa5c, i32* %sb.global-to-local, align 4
  %v0_aa74 = load i32, i32* @r4, align 4
  store i32 %v0_aa74, i32* %r0.global-to-local, align 4
  %v4_aa78 = inttoptr i32 %v0_aa64 to i32*
  %v5_aa78 = call i32 @function_85e0(i32 %v0_aa74, i32* %v4_aa78, i32 9, i32 65535)
  %v0_aa7c = load i32, i32* @r5, align 4
  store i32 %v0_aa7c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 %v5_aa78, i32* @sl, align 4
  %v0_aa8c = load i32, i32* @r4, align 4
  store i32 %v0_aa8c, i32* %r0.global-to-local, align 4
  %v4_aa90 = inttoptr i32 %v0_aa7c to i32*
  %v5_aa90 = call i32 @function_85e0(i32 %v0_aa8c, i32* %v4_aa90, i32 0, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_aa9c = load i32, i32* @r5, align 4
  store i32 %v0_aa9c, i32* %r1.global-to-local, align 4
  store i32 %v5_aa90, i32* %r8.global-to-local, align 4
  %v0_aaa4 = load i32, i32* @r4, align 4
  store i32 %v0_aaa4, i32* %r0.global-to-local, align 4
  %v4_aaa8 = inttoptr i32 %v0_aa9c to i32*
  %v5_aaa8 = call i32 @function_81cc(i32 %v0_aaa4, i32* %v4_aaa8, i32 8, i32 0)
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_aab4 = call i32 @function_11d20(i32 21)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_aac0 = call i32 @function_11c3c(i32 21, i32* null)
  store i32 %v3_aac0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_aac8 = inttoptr i32 %v3_aac0 to i8*
  %v3_aac8 = call i32 @function_12d1c(i8* %v2_aac8, i32 0)
  store i32 %v3_aac8, i32* @r4, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_aad4 = call i32 @function_11c68(i32 21)
  store i32 %v1_aad4, i32* %r0.global-to-local, align 4
  %v0_aad8 = load i32, i32* @r4, align 4
  %v1_aad8 = icmp slt i32 %v0_aad8, 0
  %v2_aad8 = icmp eq i32 %v0_aad8, 0
  store i1 %v2_aad8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_aad8, label %dec_label_pc_b0a4, label %dec_label_pc_aae0

dec_label_pc_aae0:                                ; preds = %dec_label_pc_a988
  %v2_aae4 = ptrtoint i32* %stack_var_-2120 to i32
  store i32 %v2_aae4, i32* @r6, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_aae4, i32* %r1.global-to-local, align 4
  store i32 %v0_aad8, i32* %r0.global-to-local, align 4
  %v4_aaf4 = call i32 @function_12db8(i32 %v0_aad8, i32* nonnull %stack_var_-2120, i32 2048)
  store i32 %v4_aaf4, i32* @r5, align 4
  %v0_aafc = load i32, i32* @r4, align 4
  store i32 %v0_aafc, i32* %r0.global-to-local, align 4
  %v1_ab00 = call i32 @function_12bf0(i32 %v0_aafc)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_ab08 = call i32 @function_11d20(i32 22)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_ab14 = call i32 @function_11c3c(i32 22, i32* null)
  %v0_ab18 = load i32, i32* @r5, align 4
  store i32 %v0_ab18, i32* @r1, align 4
  store i32 %v3_ab14, i32* %r2.global-to-local, align 4
  store i32 %v2_aae4, i32* %r0.global-to-local, align 4
  %v3_ab24 = bitcast i32* %stack_var_-2120 to i8*
  %v4_ab24 = call i32 @function_12640(i8* %v3_ab24, i32 %v0_ab18, i32 %v3_ab14)
  store i32 %v4_ab24, i32* @r4, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_ab30 = call i32 @function_11c68(i32 22)
  store i32 %v1_ab30, i32* %r0.global-to-local, align 4
  %v0_ab34 = load i32, i32* @r4, align 4
  %v7_ab34 = icmp eq i32 %v0_ab34, -1
  store i1 %v7_ab34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ab34, label %dec_label_pc_b0a4, label %dec_label_pc_ab3c

dec_label_pc_ab3c:                                ; preds = %dec_label_pc_aae0
  %v0_ab3c = load i32, i32* @r5, align 4
  %v9_ab3c = icmp eq i32 %v0_ab3c, %v0_ab34
  store i1 %v9_ab3c, i1* %cpsr_z.global-to-local, align 1
  %v7_ab40 = icmp sgt i32 %v0_ab3c, %v0_ab34
  br i1 %v7_ab40, label %dec_label_pc_ab44, label %dec_label_pc_b0a4

dec_label_pc_ab44:                                ; preds = %dec_label_pc_ab3c
  store i32 %v0_ab3c, i32* %r3.global-to-local, align 4
  store i32 %v0_ab34, i32* %r2.global-to-local, align 4
  %v0_ab54 = load i32, i32* @r6, align 4
  %v2_ab54 = add i32 %v0_ab54, %v0_ab34
  store i32 %v2_ab54, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v2_ab5c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_ab5c, i32* @r7, align 4
  %v1_ab8c = add i32 %v0_ab3c, -1
  br label %dec_label_pc_ab84

dec_label_pc_ab68:                                ; preds = %dec_label_pc_abac, %bb138
  %v9_ab68 = icmp eq i32 %v0_ab74, %v1_ab8c
  store i1 %v9_ab68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ab68, label %dec_label_pc_abb8, label %dec_label_pc_ab70

dec_label_pc_ab70:                                ; preds = %dec_label_pc_ab9c, %dec_label_pc_ab68, %bb
  %v0_aba842 = phi i32 [ %v0_aba8, %dec_label_pc_ab9c ], [ %v0_aba843, %dec_label_pc_ab68 ], [ %v0_aba8, %bb ]
  %v0_ab8838 = phi i32 [ 0, %dec_label_pc_ab9c ], [ %v0_ab8839, %dec_label_pc_ab68 ], [ 0, %bb ]
  store i32 %v0_ab3c, i32* %r0.global-to-local, align 4
  %v1_ab74 = add i32 %v0_ab74, 1
  store i32 %v1_ab74, i32* %r2.global-to-local, align 4
  %v9_ab78 = icmp eq i32 %v0_ab3c, %v1_ab74
  store i1 %v9_ab78, i1* %cpsr_z.global-to-local, align 1
  %v1_ab7c = add i32 %v0_ab7c, 1
  store i32 %v1_ab7c, i32* @r7, align 4
  br i1 %v9_ab78, label %dec_label_pc_b0a4, label %dec_label_pc_ab84

dec_label_pc_ab84:                                ; preds = %dec_label_pc_ab70, %dec_label_pc_ab44
  %v0_ab7c = phi i32 [ %v1_ab7c, %dec_label_pc_ab70 ], [ %v2_ab5c, %dec_label_pc_ab44 ]
  %v0_ab74 = phi i32 [ %v1_ab74, %dec_label_pc_ab70 ], [ %v0_ab34, %dec_label_pc_ab44 ]
  %v0_aba8 = phi i32 [ %v0_aba842, %dec_label_pc_ab70 ], [ 0, %dec_label_pc_ab44 ]
  %v0_ab88 = phi i32 [ %v0_ab8838, %dec_label_pc_ab70 ], [ 0, %dec_label_pc_ab44 ]
  %v0_ab90 = phi i32 [ %v1_ab90, %dec_label_pc_ab70 ], [ %v2_ab54, %dec_label_pc_ab44 ]
  %v1_ab84 = inttoptr i32 %v0_ab90 to i8*
  %v2_ab84 = load i8, i8* %v1_ab84, align 1
  %v3_ab84 = zext i8 %v2_ab84 to i32
  store i32 %v3_ab84, i32* %r3.global-to-local, align 4
  %v2_ab88 = icmp eq i32 %v0_ab88, 0
  store i1 %v2_ab88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ab8c, i32* %ip.global-to-local, align 4
  %v1_ab90 = add i32 %v0_ab90, 1
  store i32 %v1_ab90, i32* %r1.global-to-local, align 4
  %v1_ab94 = add nsw i32 %v3_ab84, -48
  store i32 %v1_ab94, i32* %r0.global-to-local, align 4
  br i1 %v2_ab88, label %dec_label_pc_ab9c, label %dec_label_pc_abac

dec_label_pc_ab9c:                                ; preds = %dec_label_pc_ab84
  %v7_ab9c = icmp eq i8 %v2_ab84, 9
  store i1 %v7_ab9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ab9c, label %dec_label_pc_ab70, label %bb

bb:                                               ; preds = %dec_label_pc_ab9c
  %v8_aba0 = icmp eq i8 %v2_ab84, 32
  store i1 %v8_aba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_aba0, label %dec_label_pc_ab70, label %dec_label_pc_aba8

dec_label_pc_aba8:                                ; preds = %bb
  %v1_aba8 = add i32 %v0_aba8, 1
  store i32 %v1_aba8, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_abac

dec_label_pc_abac:                                ; preds = %dec_label_pc_ab84, %dec_label_pc_aba8
  %v0_aba843 = phi i32 [ %v0_aba8, %dec_label_pc_ab84 ], [ %v1_aba8, %dec_label_pc_aba8 ]
  %v0_ab8839 = phi i32 [ %v0_ab88, %dec_label_pc_ab84 ], [ %v1_aba8, %dec_label_pc_aba8 ]
  %v7_abac = icmp eq i8 %v2_ab84, 46
  store i1 %v7_abac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_abac, label %dec_label_pc_ab68, label %bb138

bb138:                                            ; preds = %dec_label_pc_abac
  %v8_abb0 = icmp eq i32 %v1_ab94, 9
  store i1 %v8_abb0, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_ab94, 10
  br i1 %tmp, label %dec_label_pc_ab68, label %dec_label_pc_abb8

dec_label_pc_abb8:                                ; preds = %dec_label_pc_ab68, %bb138
  %v0_ab74.lcssa = phi i32 [ %v1_ab8c, %dec_label_pc_ab68 ], [ %v0_ab74, %bb138 ]
  %v2_abbc = sub i32 %v0_ab74.lcssa, %v0_ab34
  store i32 %v2_abbc, i32* %r2.global-to-local, align 4
  store i32 %v2_ab54, i32* %r1.global-to-local, align 4
  store i32 %v2_ab5c, i32* %r0.global-to-local, align 4
  %v3_abc8 = call i32 @function_12368(i32 %v2_ab5c, i32 %v2_ab54, i32 %v2_abbc)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_ab5c, i32* @r0, align 4
  %v2_abd8 = load i32, i32* @r7, align 4
  %v3_abd8 = inttoptr i32 %v2_abd8 to i8*
  store i8 0, i8* %v3_abd8, align 1
  %v1_abdc = call i32 @function_132ec(i32 %v2_ab5c)
  store i32 %v1_abdc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_abe4

dec_label_pc_abe420:                              ; preds = %dec_label_pc_b0a4
  unreachable

dec_label_pc_abe4:                                ; preds = %dec_label_pc_b11c, %dec_label_pc_b10c, %dec_label_pc_b100, %dec_label_pc_b0ec, %dec_label_pc_abb8
  %v29_b0e874 = phi i32 [ %v1_b0a8, %dec_label_pc_b11c ], [ %v1_b0a8, %dec_label_pc_b10c ], [ %v1_b0a8, %dec_label_pc_b100 ], [ %v1_b0a8, %dec_label_pc_b0ec ], [ %v1_abdc, %dec_label_pc_abb8 ]
  %stack_var_-2176.0 = phi i32 [ 33686020, %dec_label_pc_b11c ], [ 104859200, %dec_label_pc_b10c ], [ 707416650, %dec_label_pc_b100 ], [ 134744072, %dec_label_pc_b0ec ], [ %v1_abdc, %dec_label_pc_abb8 ]
  store i32 %v5_aaa8, i32* %ip.global-to-local, align 4
  %v2_abe8 = icmp eq i32 %v5_aaa8, 0
  store i1 %v2_abe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_abe8, label %dec_label_pc_b0e0, label %dec_label_pc_abf0

dec_label_pc_abf0:                                ; preds = %dec_label_pc_abe4
  store i32 %v5_aaa8, i32* %r0.global-to-local, align 4
  %v1_abf4 = inttoptr i32 %v5_aaa8 to i8*
  %v2_abf4 = call i32 @function_122ec(i8* %v1_abf4)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_ac08 = call i32 @function_134e0(i32 2, i32 3, i32 17)
  store i32 %v3_ac08, i32* %r0.global-to-local, align 4
  %v7_ac0c = icmp eq i32 %v3_ac08, -1
  store i1 %v7_ac0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ac0c, label %dec_label_pc_b0e0, label %dec_label_pc_ac18

dec_label_pc_ac18:                                ; preds = %dec_label_pc_abf0
  store i32 1, i32* %stack_var_-40, align 4
  %v6_ac24 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_ac24, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_ac38 = call i32 @function_134b0(i32 %v3_ac08, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_ac38, i32* %r0.global-to-local, align 4
  %v7_ac3c = icmp eq i32 %v6_ac38, -1
  store i1 %v7_ac3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ac3c, label %dec_label_pc_b0d8, label %dec_label_pc_ac44

dec_label_pc_ac44:                                ; preds = %dec_label_pc_ac18
  store i32 %v1_a994, i32* %r0.global-to-local, align 4
  %v3_ac4c = mul i32 %v7_a9e8, 65536
  store i32 %v3_ac4c, i32* %lr.global-to-local, align 4
  %v0_ac50 = load i32, i32* @sl, align 4
  %v3_ac50 = mul i32 %v0_ac50, 65536
  store i32 %v3_ac50, i32* %sl.global-to-local, align 4
  %v0_ac54 = load i32, i32* %r8.global-to-local, align 4
  %v0_ac58 = load i32, i32* %fp.global-to-local, align 4
  %v0_ac5c = load i32, i32* %sb.global-to-local, align 4
  %v3_ac5c = mul i32 %v0_ac5c, 65536
  store i32 %v3_ac5c, i32* %sb.global-to-local, align 4
  %v5_ac60 = trunc i32 %v0_ac54 to i8
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_ac68 = urem i32 %v7_a9e8, 65536
  store i32 %v3_ac68, i32* %r2.global-to-local, align 4
  %v3_ac6c = urem i32 %v0_ac58, 65536
  store i32 %v3_ac6c, i32* %r3.global-to-local, align 4
  %v3_ac70 = urem i32 %v0_ac5c, 65536
  store i32 %v3_ac70, i32* %r4.global-to-local, align 4
  %v3_ac74 = urem i32 %v0_ac50, 65536
  store i32 %v3_ac74, i32* %r8.global-to-local, align 4
  %v2_ac78 = icmp eq i32 %v1_a994, 0
  store i1 %v2_ac78, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_ac78, label %dec_label_pc_b0c8, label %dec_label_pc_ac9c

dec_label_pc_ac9c:                                ; preds = %dec_label_pc_ac44
  %v4_aca0 = sext i8 %v5_ac60 to i32
  %v2_aca4 = add i32 %v4_aca0, %v2_abf4
  store i32 %v2_aca4, i32* @fp, align 4
  %v3_aca8 = mul i32 %v2_aca4, 65536
  %v1_acac = add i32 %v3_aca8, 1769472
  store i32 %v1_acac, i32* @r6, align 4
  %v1_acb0 = add i32 %v3_aca8, 3080192
  %v1_acc4 = urem i32 %v0_ac50, 256
  %v3_acd4 = udiv i32 %v1_acac, 256
  %v1_acd8 = urem i32 %v7_a9e8, 256
  %v1_acdc = and i32 %v3_acd4, 65280
  %v1_ace0 = urem i32 %v0_ac5c, 256
  %v3_ace4 = mul nuw nsw i32 %v1_acc4, 256
  %v1_acec = urem i32 %v0_ac58, 256
  %v3_acf0 = mul nuw nsw i32 %v1_ace0, 256
  %tmp139 = udiv i32 %v0_ac50, 256
  %v4_acf4 = urem i32 %tmp139, 256
  %v5_acf4 = or i32 %v4_acf4, %v3_ace4
  store i32 %v5_acf4, i32* %r8.global-to-local, align 4
  %v4_acf8 = udiv i32 %v1_acac, 16777216
  %v5_acf8 = or i32 %v1_acdc, %v4_acf8
  store i32 %v5_acf8, i32* %sl.global-to-local, align 4
  %tmp140 = udiv i32 %v0_ac58, 256
  %v3_ad04 = urem i32 %tmp140, 256
  %v4_ad08 = sdiv i32 %v1_acb0, 16777216
  %tmp141 = udiv i32 %v7_a9e8, 256
  %v4_ad10 = mul nuw nsw i32 %v1_acec, 256
  %v5_ad10 = or i32 %v4_ad10, %v3_ad04
  store i32 %v5_ad10, i32* @r5, align 4
  %tmp142 = udiv i32 %v0_ac5c, 256
  %v4_ad14 = urem i32 %tmp142, 256
  %v5_ad14 = or i32 %v4_ad14, %v3_acf0
  store i32 %v5_ad14, i32* %sb.global-to-local, align 4
  store i32 %v1_acd8, i32* %r0.global-to-local, align 4
  %v1_ad20 = add i32 %v2_abf4, 1
  store i32 %v1_ad20, i32* @r7, align 4
  %v3_ad24 = ashr i32 %v1_acb0, 31
  store i32 %v3_ad24, i32* @lr, align 4
  store i32 %v1_acec, i32* %r1.global-to-local, align 4
  store i32 %v1_ace0, i32* %r2.global-to-local, align 4
  %v3_ad3075 = udiv i32 %v1_acdc, 256
  store i32 %v3_ad3075, i32* %r3.global-to-local, align 4
  store i32 %v1_acc4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_ad94 = sext i8 %v5_a9e4 to i32
  %sext13 = mul i32 %v6_aa00, 16777216
  %v4_adac = sdiv i32 %sext13, 16777216
  %sext14 = mul i32 %tmp141, 16777216
  %v4_adc0 = sdiv i32 %sext14, 16777216
  %sext15 = mul i32 %v7_a9e8, 16777216
  %v4_adc4 = sdiv i32 %sext15, 16777216
  %sext16 = mul i32 %v1_acac, 256
  %v4_adf4 = sdiv i32 %sext16, 16777216
  %sext17 = mul i32 %v0_ac5c, 16777216
  %v4_adf8 = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %v0_ac58, 16777216
  %v4_ae1c = sdiv i32 %sext18, 16777216
  %sext19 = mul i32 %v0_ac50, 16777216
  %v4_ae28 = sdiv i32 %sext19, 16777216
  %v1_ada4 = trunc i32 %v4_ad08 to i8
  %extract.t = trunc i32 %v3_ad24 to i8
  br label %dec_label_pc_ad54

dec_label_pc_ad54:                                ; preds = %dec_label_pc_aebc, %dec_label_pc_ac9c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_ad5c = call i32 @function_137cc(i32 600, i32 1)
  store i32 %v2_ad5c, i32* %r0.global-to-local, align 4
  store i32 %v2_a9ac, i32* %lr.global-to-local, align 4
  %v3_ad64 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ad64, i32* %r3.global-to-local, align 4
  %v2_ad68 = load i32, i32* @r4, align 4
  %v5_ad68 = mul i32 %v2_ad68, 4
  %v6_ad68 = add i32 %v5_ad68, %v2_a9ac
  %v7_ad68 = inttoptr i32 %v6_ad68 to i32*
  store i32 %v2_ad5c, i32* %v7_ad68, align 4
  %v0_ad6c = load i32, i32* %lr.global-to-local, align 4
  %v1_ad6c = load i32, i32* %r3.global-to-local, align 4
  %v4_ad6c = mul i32 %v1_ad6c, 4
  %v5_ad6c = add i32 %v4_ad6c, %v0_ad6c
  %v6_ad6c = inttoptr i32 %v5_ad6c to i32*
  %v7_ad6c = load i32, i32* %v6_ad6c, align 4
  store i32 %v7_ad6c, i32* %r1.global-to-local, align 4
  %v1_ad70 = inttoptr i32 %v7_ad6c to i8*
  %v2_ad70 = load i8, i8* %v1_ad70, align 1
  %tmp154 = urem i8 %v2_ad70, 16
  %v1_ad74 = zext i8 %tmp154 to i32
  %v1_ad78 = or i32 %v1_ad74, 64
  store i32 %v1_ad78, i32* %r2.global-to-local, align 4
  %v1_ad7c = trunc i32 %v1_ad78 to i8
  store i8 %v1_ad7c, i8* %v1_ad70, align 1
  %v0_ad80 = load i32, i32* %r1.global-to-local, align 4
  %v1_ad80 = inttoptr i32 %v0_ad80 to i8*
  %v2_ad80 = load i8, i8* %v1_ad80, align 1
  %v1_ad84 = and i8 %v2_ad80, -16
  %v1_ad88 = or i8 %v1_ad84, 5
  store i32 %v1_aa2c, i32* %r0.global-to-local, align 4
  store i8 %v1_ad88, i8* %v1_ad80, align 1
  store i32 %v4_ad94, i32* %r2.global-to-local, align 4
  %v2_ad98 = load i32, i32* %r1.global-to-local, align 4
  %v3_ad98 = add i32 %v2_ad98, 1
  %v4_ad98 = inttoptr i32 %v3_ad98 to i8*
  store i8 %v5_a9e4, i8* %v4_ad98, align 1
  store i32 %v4_ad08, i32* %r3.global-to-local, align 4
  %v0_ada0 = load i32, i32* %r0.global-to-local, align 4
  %v2_ada0 = icmp eq i32 %v0_ada0, 0
  store i1 %v2_ada0, i1* %cpsr_z.global-to-local, align 1
  %v2_ada4 = load i32, i32* %r1.global-to-local, align 4
  %v3_ada4 = add i32 %v2_ada4, 2
  %v4_ada4 = inttoptr i32 %v3_ada4 to i8*
  store i8 %v1_ada4, i8* %v4_ada4, align 1
  store i32 %v3_ad24, i32* %r4.global-to-local, align 4
  store i32 %v4_adac, i32* %r0.global-to-local, align 4
  %v0_adb0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_adb0, label %.thread21, label %bb143

bb143:                                            ; preds = %dec_label_pc_ad54
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_adb4 = load i32, i32* %r1.global-to-local, align 4
  %v4_adb4 = add i32 %v3_adb4, 6
  %v5_adb4 = inttoptr i32 %v4_adb4 to i8*
  store i8 64, i8* %v5_adb4, align 1
  %v0_adbc.pre = load i32, i32* %r4.global-to-local, align 4
  %extract.t76 = trunc i32 %v0_adbc.pre to i8
  br label %.thread21

.thread21:                                        ; preds = %dec_label_pc_ad54, %bb143
  %v0_adbc.off0 = phi i8 [ %extract.t, %dec_label_pc_ad54 ], [ %extract.t76, %bb143 ]
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_adbc = load i32, i32* %r1.global-to-local, align 4
  %v3_adbc = add i32 %v2_adbc, 3
  %v4_adbc = inttoptr i32 %v3_adbc to i8*
  store i8 %v0_adbc.off0, i8* %v4_adbc, align 1
  store i32 %v4_adc0, i32* %ip.global-to-local, align 4
  store i32 %v4_adc4, i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc68.49 to i32), i32* %r4.global-to-local, align 4
  %v0_adcc = load i32, i32* %r0.global-to-local, align 4
  %v1_adcc = trunc i32 %v0_adcc to i8
  %v2_adcc = load i32, i32* %r1.global-to-local, align 4
  %v3_adcc = add i32 %v2_adcc, 8
  %v4_adcc = inttoptr i32 %v3_adcc to i8*
  store i8 %v1_adcc, i8* %v4_adcc, align 1
  %v0_add0 = load i32, i32* %r3.global-to-local, align 4
  %v1_add0 = trunc i32 %v0_add0 to i8
  %v2_add0 = load i32, i32* %r1.global-to-local, align 4
  %v3_add0 = add i32 %v2_add0, 9
  %v4_add0 = inttoptr i32 %v3_add0 to i8*
  store i8 %v1_add0, i8* %v4_add0, align 1
  %v0_add4 = load i32, i32* %lr.global-to-local, align 4
  %v1_add4 = trunc i32 %v0_add4 to i8
  %v2_add4 = load i32, i32* %r1.global-to-local, align 4
  %v3_add4 = add i32 %v2_add4, 5
  %v4_add4 = inttoptr i32 %v3_add4 to i8*
  store i8 %v1_add4, i8* %v4_add4, align 1
  %v0_add8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_add8, label %.thread22, label %bb144

.thread22:                                        ; preds = %.thread21
  %v2_addc23 = load i32, i32* @global_var_1dc68.49, align 4
  store i32 %v2_addc23, i32* %r3.global-to-local, align 4
  store i32 %v4_aca0, i32* %lr.global-to-local, align 4
  br label %bb145

bb144:                                            ; preds = %.thread21
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_addc = load i32, i32* @global_var_1dc68.49, align 4
  store i32 %v2_addc, i32* %r3.global-to-local, align 4
  store i32 %v4_aca0, i32* %lr.global-to-local, align 4
  %v3_ade4 = load i32, i32* %r1.global-to-local, align 4
  %v4_ade4 = add i32 %v3_ade4, 7
  %v5_ade4 = inttoptr i32 %v4_ade4 to i8*
  store i8 0, i8* %v5_ade4, align 1
  %v0_adec.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_adf0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb145

bb145:                                            ; preds = %.thread22, %bb144
  %v0_adf0 = phi i32 [ %v2_addc23, %.thread22 ], [ %v0_adf0.pre, %bb144 ]
  %v0_adec = phi i32 [ %v4_aca0, %.thread22 ], [ %v0_adec.pre, %bb144 ]
  %v0_ade8 = load i32, i32* %r1.global-to-local, align 4
  %v1_ade8 = add i32 %v0_adec, 41
  %v2_adec = add i32 %v1_ade8, %v0_ade8
  store i32 %v2_adec, i32* %r4.global-to-local, align 4
  %v2_adf0 = add i32 %v0_ade8, 12
  %v3_adf0 = inttoptr i32 %v2_adf0 to i32*
  store i32 %v0_adf0, i32* %v3_adf0, align 4
  store i32 %v4_adf4, i32* %r2.global-to-local, align 4
  store i32 %v4_adf8, i32* %r3.global-to-local, align 4
  %v0_adfc = load i32, i32* %r1.global-to-local, align 4
  %v1_adfc = add i32 %v0_adfc, 20
  store i32 %v1_adfc, i32* %r0.global-to-local, align 4
  %v0_ae00 = load i32, i32* %ip.global-to-local, align 4
  %v1_ae00 = trunc i32 %v0_ae00 to i8
  %v3_ae00 = add i32 %v0_adfc, 4
  %v4_ae00 = inttoptr i32 %v3_ae00 to i8*
  store i8 %v1_ae00, i8* %v4_ae00, align 1
  %v0_ae04 = load i32, i32* %r2.global-to-local, align 4
  %v1_ae04 = trunc i32 %v0_ae04 to i8
  %v2_ae04 = load i32, i32* %r0.global-to-local, align 4
  %v3_ae04 = add i32 %v2_ae04, 5
  %v4_ae04 = inttoptr i32 %v3_ae04 to i8*
  store i8 %v1_ae04, i8* %v4_ae04, align 1
  %v0_ae08 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae08 = trunc i32 %v0_ae08 to i8
  %v2_ae08 = load i32, i32* %r0.global-to-local, align 4
  %v3_ae08 = add i32 %v2_ae08, 3
  %v4_ae08 = inttoptr i32 %v3_ae08 to i8*
  store i8 %v1_ae08, i8* %v4_ae08, align 1
  %v0_ae0c = load i32, i32* %sb.global-to-local, align 4
  %v1_ae0c = trunc i32 %v0_ae0c to i8
  %v2_ae0c = load i32, i32* %r0.global-to-local, align 4
  %v3_ae0c = add i32 %v2_ae0c, 2
  %v4_ae0c = inttoptr i32 %v3_ae0c to i8*
  store i8 %v1_ae0c, i8* %v4_ae0c, align 1
  %v0_ae10 = load i32, i32* %sl.global-to-local, align 4
  %v1_ae10 = trunc i32 %v0_ae10 to i8
  %v2_ae10 = load i32, i32* %r0.global-to-local, align 4
  %v3_ae10 = add i32 %v2_ae10, 4
  %v4_ae10 = inttoptr i32 %v3_ae10 to i8*
  store i8 %v1_ae10, i8* %v4_ae10, align 1
  %v0_ae14 = load i32, i32* @r5, align 4
  %v1_ae14 = trunc i32 %v0_ae14 to i8
  %v2_ae14 = load i32, i32* %r1.global-to-local, align 4
  %v3_ae14 = add i32 %v2_ae14, 20
  %v4_ae14 = inttoptr i32 %v3_ae14 to i8*
  store i8 %v1_ae14, i8* %v4_ae14, align 1
  store i32 %v4_ae1c, i32* %r2.global-to-local, align 4
  %v1_ae20 = load i32, i32* %r1.global-to-local, align 4
  %v2_ae20 = add i32 %v1_ae20, 16
  %v3_ae20 = inttoptr i32 %v2_ae20 to i32*
  store i32 %stack_var_-2176.0, i32* %v3_ae20, align 4
  %v0_ae24 = load i32, i32* %r2.global-to-local, align 4
  %v1_ae24 = trunc i32 %v0_ae24 to i8
  %v2_ae24 = load i32, i32* %r0.global-to-local, align 4
  %v3_ae24 = add i32 %v2_ae24, 1
  %v4_ae24 = inttoptr i32 %v3_ae24 to i8*
  store i8 %v1_ae24, i8* %v4_ae24, align 1
  store i32 %v4_ae28, i32* %lr.global-to-local, align 4
  store i32 %v4_aca0, i32* %r0.global-to-local, align 4
  %v0_ae30 = load i32, i32* %r1.global-to-local, align 4
  %v1_ae30 = add i32 %v0_ae30, 28
  store i32 %v1_ae30, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ae3c = load i32, i32* %r8.global-to-local, align 4
  %v1_ae3c = trunc i32 %v0_ae3c to i8
  %v4_ae3c = inttoptr i32 %v1_ae30 to i8*
  store i8 %v1_ae3c, i8* %v4_ae3c, align 1
  %v0_ae40 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae40 = trunc i32 %v0_ae40 to i8
  %v2_ae40 = load i32, i32* %ip.global-to-local, align 4
  %v3_ae40 = add i32 %v2_ae40, 5
  %v4_ae40 = inttoptr i32 %v3_ae40 to i8*
  store i8 %v1_ae40, i8* %v4_ae40, align 1
  %v0_ae44 = load i32, i32* %lr.global-to-local, align 4
  %v1_ae44 = trunc i32 %v0_ae44 to i8
  %v2_ae44 = load i32, i32* %ip.global-to-local, align 4
  %v3_ae44 = add i32 %v2_ae44, 1
  %v4_ae44 = inttoptr i32 %v3_ae44 to i8*
  store i8 %v1_ae44, i8* %v4_ae44, align 1
  %v0_ae48 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae48 = trunc i32 %v0_ae48 to i8
  %v2_ae48 = load i32, i32* %ip.global-to-local, align 4
  %v3_ae48 = add i32 %v2_ae48, 2
  %v4_ae48 = inttoptr i32 %v3_ae48 to i8*
  store i8 %v1_ae48, i8* %v4_ae48, align 1
  %v0_ae4c = load i32, i32* @r6, align 4
  %v1_ae4c = trunc i32 %v0_ae4c to i8
  %v2_ae4c = load i32, i32* %ip.global-to-local, align 4
  %v3_ae4c = add i32 %v2_ae4c, 3
  %v4_ae4c = inttoptr i32 %v3_ae4c to i8*
  store i8 %v1_ae4c, i8* %v4_ae4c, align 1
  %v0_ae50 = load i32, i32* @r6, align 4
  %v1_ae50 = trunc i32 %v0_ae50 to i8
  %v2_ae50 = load i32, i32* %ip.global-to-local, align 4
  %v3_ae50 = add i32 %v2_ae50, 4
  %v4_ae50 = inttoptr i32 %v3_ae50 to i8*
  store i8 %v1_ae50, i8* %v4_ae50, align 1
  %v0_ae54 = load i32, i32* %r0.global-to-local, align 4
  %v1_ae54 = trunc i32 %v0_ae54 to i8
  %v2_ae54 = load i32, i32* %r1.global-to-local, align 4
  %v3_ae54 = add i32 %v2_ae54, 40
  %v4_ae54 = inttoptr i32 %v3_ae54 to i8*
  store i8 %v1_ae54, i8* %v4_ae54, align 1
  store i32 %v5_aaa8, i32* %r1.global-to-local, align 4
  %v0_ae5c = load i32, i32* @r7, align 4
  store i32 %v0_ae5c, i32* %r2.global-to-local, align 4
  %v0_ae60 = load i32, i32* %r4.global-to-local, align 4
  %v1_ae60 = add i32 %v0_ae60, 1
  store i32 %v1_ae60, i32* %r0.global-to-local, align 4
  %v3_ae64 = call i32 @function_12368(i32 %v1_ae60, i32 %v5_aaa8, i32 %v0_ae5c)
  store i32 %v3_ae64, i32* %r0.global-to-local, align 4
  store i32 %v2_abf4, i32* %r1.global-to-local, align 4
  %v1_ae6c = load i32, i32* @r6, align 4
  %v9_ae6c = icmp eq i32 %v2_abf4, %v1_ae6c
  store i1 %v9_ae6c, i1* %cpsr_z.global-to-local, align 1
  %v7_ae70 = icmp sgt i32 %v2_abf4, %v1_ae6c
  store i32 %v1_ae6c, i32* %lr.global-to-local, align 4
  %v0_ae80 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ae80, i32* %r2.global-to-local, align 4
  %extract.t78 = trunc i32 %v1_ae6c to i8
  br i1 %v7_ae70, label %dec_label_pc_ae7c, label %dec_label_pc_aebc

dec_label_pc_ae7c:                                ; preds = %bb145
  store i32 %v1_ae6c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ae88

dec_label_pc_ae88:                                ; preds = %bb148, %dec_label_pc_ae7c
  %v0_aea485151 = phi i32 [ %v0_aea485152, %bb148 ], [ %v1_ae6c, %dec_label_pc_ae7c ]
  %v1_ae9833 = phi i32 [ %v1_aea891, %bb148 ], [ %v1_ae6c, %dec_label_pc_ae7c ]
  %v1_ae94.off0 = phi i8 [ %v1_ae9456.off0, %bb148 ], [ %extract.t78, %dec_label_pc_ae7c ]
  %v0_ae9832 = phi i32 [ %v0_ae98325488, %bb148 ], [ %v0_ae80, %dec_label_pc_ae7c ]
  store i32 %v5_aaa8, i32* %ip.global-to-local, align 4
  %v2_ae8c = add i32 %v1_ae9833, %v5_aaa8
  %v3_ae8c = inttoptr i32 %v2_ae8c to i8*
  %v4_ae8c = load i8, i8* %v3_ae8c, align 1
  %v6_ae8c = zext i8 %v4_ae8c to i32
  store i32 %v6_ae8c, i32* %r3.global-to-local, align 4
  %v7_ae90 = icmp eq i8 %v4_ae8c, 46
  store i1 %v7_ae90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ae90, label %bb146, label %.thread31

.thread31:                                        ; preds = %dec_label_pc_ae88
  %v2_ae9834 = add i32 %v1_ae9833, %v0_ae9832
  store i32 %v2_ae9834, i32* %r0.global-to-local, align 4
  br label %.thread35

bb146:                                            ; preds = %dec_label_pc_ae88
  %v3_ae94 = load i32, i32* %r2.global-to-local, align 4
  %v4_ae94 = inttoptr i32 %v3_ae94 to i8*
  store i8 %v1_ae94.off0, i8* %v4_ae94, align 1
  %v0_ae9c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_ae98 = load i32, i32* %r4.global-to-local, align 4
  %v1_ae98 = load i32, i32* %r1.global-to-local, align 4
  %v2_ae98 = add i32 %v1_ae98, %v0_ae98
  store i32 %v2_ae98, i32* %r0.global-to-local, align 4
  br i1 %v0_ae9c.pr, label %bb147, label %bb146..thread35_crit_edge

bb146..thread35_crit_edge:                        ; preds = %bb146
  %v0_aea485.pre = load i32, i32* %lr.global-to-local, align 4
  br label %.thread35

bb147:                                            ; preds = %bb146
  %v2_ae9c = add i32 %v2_ae98, 1
  store i32 %v2_ae9c, i32* %r2.global-to-local, align 4
  store i32 %v2_abf4, i32* %r0.global-to-local, align 4
  %v0_aea4 = load i32, i32* %lr.global-to-local, align 4
  %v1_aea4 = add i32 %v0_aea4, 1
  store i32 %v1_aea4, i32* %ip.global-to-local, align 4
  %v1_aea8 = add i32 %v1_ae98, 1
  store i32 %v1_aea8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %bb148

.thread35:                                        ; preds = %bb146..thread35_crit_edge, %.thread31
  %v0_aea485 = phi i32 [ %v0_aea485.pre, %bb146..thread35_crit_edge ], [ %v0_aea485151, %.thread31 ]
  %v0_aea8.ph = phi i32 [ %v1_ae98, %bb146..thread35_crit_edge ], [ %v1_ae9833, %.thread31 ]
  %v0_ae983254.ph = phi i32 [ %v0_ae98, %bb146..thread35_crit_edge ], [ %v0_ae9832, %.thread31 ]
  store i32 %v2_abf4, i32* %r0.global-to-local, align 4
  %v1_aea486 = add i32 %v0_aea485, 1
  store i32 %v1_aea486, i32* %ip.global-to-local, align 4
  %v1_aea887 = add i32 %v0_aea8.ph, 1
  store i32 %v1_aea887, i32* %r1.global-to-local, align 4
  %v2_aeb0 = urem i32 %v1_aea486, 256
  store i32 %v2_aeb0, i32* %lr.global-to-local, align 4
  %extract.t81 = trunc i32 %v1_aea486 to i8
  br label %bb148

bb148:                                            ; preds = %bb147, %.thread35
  %v0_aea485152 = phi i32 [ 0, %bb147 ], [ %v2_aeb0, %.thread35 ]
  %v1_aea891 = phi i32 [ %v1_aea8, %bb147 ], [ %v1_aea887, %.thread35 ]
  %v0_ae98325488 = phi i32 [ %v0_ae98, %bb147 ], [ %v0_ae983254.ph, %.thread35 ]
  %v1_ae9456.off0 = phi i8 [ 0, %bb147 ], [ %extract.t81, %.thread35 ]
  %v9_aeb4 = icmp eq i32 %v2_abf4, %v1_aea891
  store i1 %v9_aeb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aeb4, label %dec_label_pc_aebc.loopexit, label %dec_label_pc_ae88

dec_label_pc_aebc.loopexit:                       ; preds = %bb148
  %v2_aebc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_aebc

dec_label_pc_aebc:                                ; preds = %dec_label_pc_aebc.loopexit, %bb145
  %v2_aebc = phi i32 [ %v2_aebc.pre, %dec_label_pc_aebc.loopexit ], [ %v0_ae80, %bb145 ]
  %v0_aebc.off0 = phi i8 [ %v1_ae9456.off0, %dec_label_pc_aebc.loopexit ], [ %extract.t78, %bb145 ]
  %v3_aebc = inttoptr i32 %v2_aebc to i8*
  store i8 %v0_aebc.off0, i8* %v3_aebc, align 1
  %v3_aec0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_abf4, i32* %r1.global-to-local, align 4
  %v0_aec8 = load i32, i32* %r4.global-to-local, align 4
  %v2_aec8 = add i32 %v0_aec8, %v2_abf4
  store i32 %v2_aec8, i32* %r3.global-to-local, align 4
  %v1_aecc = add i32 %v3_aec0, 1
  store i32 %v1_aecc, i32* @r4, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* @lr, align 4
  %v9_aedc = icmp eq i32 %v1_a994, %v1_aecc
  store i1 %v9_aedc, i1* %cpsr_z.global-to-local, align 1
  %v1_aee0 = add i32 %v2_aec8, 2
  store i32 %v1_aee0, i32* %r2.global-to-local, align 4
  %v4_aee4 = inttoptr i32 %v1_aee0 to i8*
  store i8 0, i8* %v4_aee4, align 1
  %v0_aee8 = load i32, i32* @lr, align 4
  %v1_aee8 = trunc i32 %v0_aee8 to i8
  %v2_aee8 = load i32, i32* %r2.global-to-local, align 4
  %v3_aee8 = add i32 %v2_aee8, 3
  %v4_aee8 = inttoptr i32 %v3_aee8 to i8*
  store i8 %v1_aee8, i8* %v4_aee8, align 1
  %v0_aeec = load i32, i32* @lr, align 4
  %v1_aeec = trunc i32 %v0_aeec to i8
  %v2_aeec = load i32, i32* %r2.global-to-local, align 4
  %v3_aeec = add i32 %v2_aeec, 1
  %v4_aeec = inttoptr i32 %v3_aeec to i8*
  store i8 %v1_aeec, i8* %v4_aeec, align 1
  %v0_aef0 = load i32, i32* %ip.global-to-local, align 4
  %v1_aef0 = trunc i32 %v0_aef0 to i8
  %v2_aef0 = load i32, i32* %r2.global-to-local, align 4
  %v3_aef0 = add i32 %v2_aef0, 2
  %v4_aef0 = inttoptr i32 %v3_aef0 to i8*
  store i8 %v1_aef0, i8* %v4_aef0, align 1
  %v0_aef4 = load i32, i32* @r4, align 4
  store i32 %v0_aef4, i32* %stack_var_-40, align 4
  %v8_aef8 = icmp sgt i32 %v1_a994, %v1_aecc
  br i1 %v8_aef8, label %dec_label_pc_ad54, label %dec_label_pc_aefc

dec_label_pc_aefc:                                ; preds = %dec_label_pc_aebc, %dec_label_pc_b0c8
  %v4_af6c.pre-phi = phi i32 [ %v4_b0cc, %dec_label_pc_b0c8 ], [ %v4_aca0, %dec_label_pc_aebc ]
  store i32 %v1_a994, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_ac78, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_af08

dec_label_pc_af08:                                ; preds = %dec_label_pc_af08, %dec_label_pc_b02c, %dec_label_pc_aefc
  br i1 %v2_ac78, label %dec_label_pc_af08, label %dec_label_pc_af0c

dec_label_pc_af0c:                                ; preds = %dec_label_pc_af08
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r6, align 4
  %v0_af1c = load i32, i32* @fp, align 4
  %v1_af1c = add i32 %v0_af1c, 27
  store i32 %v1_af1c, i32* @sb, align 4
  %v1_af20 = add i32 %v0_af1c, 47
  store i32 %v1_af20, i32* @sl, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_af28

dec_label_pc_af28:                                ; preds = %dec_label_pc_af68.dec_label_pc_af28_crit_edge, %dec_label_pc_af0c
  %v1_af48 = phi i32 [ %v1_af34.pre, %dec_label_pc_af68.dec_label_pc_af28_crit_edge ], [ 65535, %dec_label_pc_af0c ]
  %v1_af30 = phi i32 [ %v1_b018, %dec_label_pc_af68.dec_label_pc_af28_crit_edge ], [ 0, %dec_label_pc_af0c ]
  store i32 %v2_a9ac, i32* %r3.global-to-local, align 4
  store i32 %v3_ac68, i32* %r8.global-to-local, align 4
  %v4_af30 = mul i32 %v1_af30, 4
  %v5_af30 = add i32 %v4_af30, %v2_a9ac
  %v6_af30 = inttoptr i32 %v5_af30 to i32*
  %v7_af30 = load i32, i32* %v6_af30, align 4
  store i32 %v7_af30, i32* @r4, align 4
  %v9_af34 = icmp eq i32 %v3_ac68, %v1_af48
  store i1 %v9_af34, i1* %cpsr_z.global-to-local, align 1
  %v1_af38 = add i32 %v7_af30, 20
  store i32 %v1_af38, i32* @r5, align 4
  %v1_af3c = add i32 %v7_af30, 28
  store i32 %v1_af3c, i32* @r8, align 4
  br i1 %v9_af34, label %dec_label_pc_b03c, label %dec_label_pc_af44

dec_label_pc_af44:                                ; preds = %dec_label_pc_af28
  store i32 %v3_ac6c, i32* %ip.global-to-local, align 4
  %v9_af48 = icmp eq i32 %v3_ac6c, %v1_af48
  store i1 %v9_af48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af48, label %dec_label_pc_b058, label %dec_label_pc_af50

dec_label_pc_af50:                                ; preds = %dec_label_pc_b03c.dec_label_pc_af50_crit_edge, %dec_label_pc_af44
  %v1_af54 = phi i32 [ %v1_af54.pre, %dec_label_pc_b03c.dec_label_pc_af50_crit_edge ], [ %v1_af48, %dec_label_pc_af44 ]
  store i32 %v3_ac70, i32* %lr.global-to-local, align 4
  %v9_af54 = icmp eq i32 %v3_ac70, %v1_af54
  store i1 %v9_af54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af54, label %dec_label_pc_b074, label %dec_label_pc_af5c

dec_label_pc_af5c:                                ; preds = %dec_label_pc_b058.dec_label_pc_af5c_crit_edge, %dec_label_pc_af50
  %v1_af60 = phi i32 [ %v1_af60.pre, %dec_label_pc_b058.dec_label_pc_af5c_crit_edge ], [ %v1_af54, %dec_label_pc_af50 ]
  store i32 %v3_ac74, i32* %r0.global-to-local, align 4
  %v9_af60 = icmp eq i32 %v3_ac74, %v1_af60
  store i1 %v9_af60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af60, label %dec_label_pc_b090, label %dec_label_pc_af68

dec_label_pc_af68:                                ; preds = %dec_label_pc_b074, %dec_label_pc_af5c, %dec_label_pc_b090
  %v0_af68 = load i32, i32* @r4, align 4
  %v1_af68 = add i32 %v0_af68, 41
  store i32 %v1_af68, i32* %r0.global-to-local, align 4
  store i32 %v4_af6c.pre-phi, i32* %r1.global-to-local, align 4
  %v2_af70 = call i32 @function_e880(i32 %v1_af68, i32 %v4_af6c.pre-phi)
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_af78 = load i32, i32* @r7, align 4
  %v1_af78 = trunc i32 %v0_af78 to i8
  %v2_af78 = load i32, i32* @r4, align 4
  %v3_af78 = add i32 %v2_af78, 10
  %v4_af78 = inttoptr i32 %v3_af78 to i8*
  store i8 %v1_af78, i8* %v4_af78, align 1
  %v0_af7c = load i32, i32* @r7, align 4
  %v1_af7c = trunc i32 %v0_af7c to i8
  %v2_af7c = load i32, i32* @r4, align 4
  %v3_af7c = add i32 %v2_af7c, 11
  %v4_af7c = inttoptr i32 %v3_af7c to i8*
  store i8 %v1_af7c, i8* %v4_af7c, align 1
  %v0_af80 = load i32, i32* @r4, align 4
  store i32 %v0_af80, i32* @r0, align 4
  %v2_af84 = call i32 @function_d0b8(i32 %v0_af80, i32 20)
  %v3_af84 = trunc i32 %v2_af84 to i8
  store i32 %v2_af84, i32* %r0.global-to-local, align 4
  %v4_af88 = sdiv i32 %v2_af84, 256
  store i32 %v4_af88, i32* %r3.global-to-local, align 4
  %v1_af8c = trunc i32 %v4_af88 to i8
  %v2_af8c = load i32, i32* @r4, align 4
  %v3_af8c = add i32 %v2_af8c, 11
  %v4_af8c = inttoptr i32 %v3_af8c to i8*
  store i8 %v1_af8c, i8* %v4_af8c, align 1
  %v3_af90 = load i32, i32* @r4, align 4
  %v4_af90 = add i32 %v3_af90, 10
  %v5_af90 = inttoptr i32 %v4_af90 to i8*
  store i8 %v3_af84, i8* %v5_af90, align 1
  %v0_af94 = load i32, i32* @r7, align 4
  %v1_af94 = trunc i32 %v0_af94 to i8
  %v2_af94 = load i32, i32* @r5, align 4
  %v3_af94 = add i32 %v2_af94, 6
  %v4_af94 = inttoptr i32 %v3_af94 to i8*
  store i8 %v1_af94, i8* %v4_af94, align 1
  %v0_af98 = load i32, i32* @r7, align 4
  %v1_af98 = trunc i32 %v0_af98 to i8
  %v2_af98 = load i32, i32* @r5, align 4
  %v3_af98 = add i32 %v2_af98, 7
  %v4_af98 = inttoptr i32 %v3_af98 to i8*
  store i8 %v1_af98, i8* %v4_af98, align 1
  %v0_af9c = load i32, i32* @r4, align 4
  %v1_af9c = add i32 %v0_af9c, 24
  %v2_af9c = inttoptr i32 %v1_af9c to i8*
  %v3_af9c = load i8, i8* %v2_af9c, align 1
  %v4_af9c = zext i8 %v3_af9c to i32
  store i32 %v4_af9c, i32* %r3.global-to-local, align 4
  %v1_afa0 = add i32 %v0_af9c, 25
  %v2_afa0 = inttoptr i32 %v1_afa0 to i8*
  %v3_afa0 = load i8, i8* %v2_afa0, align 1
  %v4_afa0 = zext i8 %v3_afa0 to i32
  %v0_afa4 = load i32, i32* @r5, align 4
  store i32 %v0_afa4, i32* @r1, align 4
  %v4_afa8 = mul nuw nsw i32 %v4_afa0, 256
  %v5_afa8 = or i32 %v4_afa8, %v4_af9c
  store i32 %v5_afa8, i32* %r2.global-to-local, align 4
  store i32 %v0_af9c, i32* %r0.global-to-local, align 4
  %v0_afb0 = load i32, i32* @sb, align 4
  store i32 %v0_afb0, i32* %r3.global-to-local, align 4
  %v4_afb4 = call i32 @function_d114(i32 %v0_af9c, i32 %v0_afa4, i32 %v5_afa8, i32 %v0_afb0)
  %v5_afb4 = trunc i32 %v4_afb4 to i8
  store i32 %v4_afb4, i32* %r0.global-to-local, align 4
  %v3_afb8 = load i32, i32* %stack_var_-40, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-2176.0, i32* %r2.global-to-local, align 4
  %v5_afc8 = mul i32 %v3_afb8, 24
  %v2_afcc = add i32 %v5_afc8, %arg2
  store i32 %v2_afcc, i32* %lr.global-to-local, align 4
  %v4_afd0 = sdiv i32 %v4_afb4, 256
  store i32 %v4_afd0, i32* %r3.global-to-local, align 4
  %v3_afd4 = load i32, i32* @r5, align 4
  %v4_afd4 = add i32 %v3_afd4, 6
  %v5_afd4 = inttoptr i32 %v4_afd4 to i8*
  store i8 %v5_afb4, i8* %v5_afd4, align 1
  %v0_afd8 = load i32, i32* %r3.global-to-local, align 4
  %v1_afd8 = trunc i32 %v0_afd8 to i8
  %v2_afd8 = load i32, i32* @r5, align 4
  %v3_afd8 = add i32 %v2_afd8, 7
  %v4_afd8 = inttoptr i32 %v3_afd8 to i8*
  store i8 %v1_afd8, i8* %v4_afd8, align 1
  %v0_afdc = load i32, i32* %r2.global-to-local, align 4
  %v1_afdc = load i32, i32* %lr.global-to-local, align 4
  %v2_afdc = add i32 %v1_afdc, 4
  %v3_afdc = inttoptr i32 %v2_afdc to i32*
  store i32 %v0_afdc, i32* %v3_afdc, align 4
  %v0_afe0 = load i32, i32* @r4, align 4
  %v1_afe0 = add i32 %v0_afe0, 20
  %v2_afe0 = inttoptr i32 %v1_afe0 to i32*
  %v3_afe0 = load i32, i32* %v2_afe0, align 4
  %v3_afe4 = udiv i32 %v3_afe0, 65536
  store i32 %v3_afe4, i32* %r3.global-to-local, align 4
  %v3_afe812 = udiv i32 %v3_afe0, 16777216
  %v1_afec = trunc i32 %v3_afe812 to i8
  %v2_afec = load i32, i32* %lr.global-to-local, align 4
  %v3_afec = add i32 %v2_afec, 3
  %v4_afec = inttoptr i32 %v3_afec to i8*
  store i8 %v1_afec, i8* %v4_afec, align 1
  %v0_aff0 = load i32, i32* %r3.global-to-local, align 4
  %v1_aff0 = trunc i32 %v0_aff0 to i8
  %v2_aff0 = load i32, i32* %lr.global-to-local, align 4
  %v3_aff0 = add i32 %v2_aff0, 2
  %v4_aff0 = inttoptr i32 %v3_aff0 to i8*
  store i8 %v1_aff0, i8* %v4_aff0, align 1
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_affc = load i32, i32* @r4, align 4
  store i32 %v0_affc, i32* %r1.global-to-local, align 4
  store i32 %v3_ac08, i32* %r0.global-to-local, align 4
  %v0_b004 = load i32, i32* @sl, align 4
  store i32 %v0_b004, i32* %r2.global-to-local, align 4
  %v0_b008 = load i32, i32* %lr.global-to-local, align 4
  %v6_b010 = inttoptr i32 %v0_affc to i32*
  %v7_b010 = call i32 @function_1347c(i32 %v3_ac08, i32* %v6_b010, i32 %v0_b004, i32 16384, i32 %v0_b008, i32 16)
  %v3_b014 = load i32, i32* %stack_var_-40, align 4
  %v1_b018 = add i32 %v3_b014, 1
  store i32 %v1_b018, i32* %r0.global-to-local, align 4
  store i32 %v1_a994, i32* %r3.global-to-local, align 4
  %v9_b020 = icmp eq i32 %v1_a994, %v1_b018
  store i1 %v9_b020, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b018, i32* %stack_var_-40, align 4
  %v8_b028 = icmp sgt i32 %v1_a994, %v1_b018
  br i1 %v8_b028, label %dec_label_pc_af68.dec_label_pc_af28_crit_edge, label %dec_label_pc_b02c

dec_label_pc_af68.dec_label_pc_af28_crit_edge:    ; preds = %dec_label_pc_af68
  %v1_af34.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_af28

dec_label_pc_b02c:                                ; preds = %dec_label_pc_af68
  store i32 %v1_a994, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_af08

dec_label_pc_b03c:                                ; preds = %dec_label_pc_af28
  %v0_b03c = call i32 @function_e7cc()
  %v1_b03c = trunc i32 %v0_b03c to i8
  store i32 %v0_b03c, i32* %r0.global-to-local, align 4
  store i32 %v3_ac6c, i32* %ip.global-to-local, align 4
  %v4_b044 = sdiv i32 %v0_b03c, 256
  store i32 %v4_b044, i32* %r3.global-to-local, align 4
  %v1_b048 = load i32, i32* @r6, align 4
  %v9_b048 = icmp eq i32 %v3_ac6c, %v1_b048
  store i1 %v9_b048, i1* %cpsr_z.global-to-local, align 1
  %v1_b04c = trunc i32 %v4_b044 to i8
  %v2_b04c = load i32, i32* @r4, align 4
  %v3_b04c = add i32 %v2_b04c, 5
  %v4_b04c = inttoptr i32 %v3_b04c to i8*
  store i8 %v1_b04c, i8* %v4_b04c, align 1
  %v3_b050 = load i32, i32* @r4, align 4
  %v4_b050 = add i32 %v3_b050, 4
  %v5_b050 = inttoptr i32 %v4_b050 to i8*
  store i8 %v1_b03c, i8* %v5_b050, align 1
  %v0_b054 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b054, label %dec_label_pc_b058, label %dec_label_pc_b03c.dec_label_pc_af50_crit_edge

dec_label_pc_b03c.dec_label_pc_af50_crit_edge:    ; preds = %dec_label_pc_b03c
  %v1_af54.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_af50

dec_label_pc_b058:                                ; preds = %dec_label_pc_b03c, %dec_label_pc_af44
  %v0_b058 = call i32 @function_e7cc()
  %v1_b058 = trunc i32 %v0_b058 to i8
  store i32 %v0_b058, i32* %r0.global-to-local, align 4
  store i32 %v3_ac70, i32* %lr.global-to-local, align 4
  %v4_b060 = sdiv i32 %v0_b058, 256
  store i32 %v4_b060, i32* %r3.global-to-local, align 4
  %v1_b064 = load i32, i32* @r6, align 4
  %v9_b064 = icmp eq i32 %v3_ac70, %v1_b064
  store i1 %v9_b064, i1* %cpsr_z.global-to-local, align 1
  %v3_b068 = load i32, i32* @r4, align 4
  %v4_b068 = add i32 %v3_b068, 20
  %v5_b068 = inttoptr i32 %v4_b068 to i8*
  store i8 %v1_b058, i8* %v5_b068, align 1
  %v0_b06c = load i32, i32* %r3.global-to-local, align 4
  %v1_b06c = trunc i32 %v0_b06c to i8
  %v2_b06c = load i32, i32* @r5, align 4
  %v3_b06c = add i32 %v2_b06c, 1
  %v4_b06c = inttoptr i32 %v3_b06c to i8*
  store i8 %v1_b06c, i8* %v4_b06c, align 1
  %v0_b070 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b070, label %dec_label_pc_b074, label %dec_label_pc_b058.dec_label_pc_af5c_crit_edge

dec_label_pc_b058.dec_label_pc_af5c_crit_edge:    ; preds = %dec_label_pc_b058
  %v1_af60.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_af5c

dec_label_pc_b074:                                ; preds = %dec_label_pc_b058, %dec_label_pc_af50
  %v0_b074 = call i32 @function_e7cc()
  %v1_b074 = trunc i32 %v0_b074 to i8
  %v4_b078 = sdiv i32 %v0_b074, 256
  store i32 %v4_b078, i32* %r3.global-to-local, align 4
  %v3_b07c = load i32, i32* @r5, align 4
  %v4_b07c = add i32 %v3_b07c, 2
  %v5_b07c = inttoptr i32 %v4_b07c to i8*
  store i8 %v1_b074, i8* %v5_b07c, align 1
  store i32 %v3_ac74, i32* %r0.global-to-local, align 4
  %v1_b084 = load i32, i32* @r6, align 4
  %v9_b084 = icmp eq i32 %v3_ac74, %v1_b084
  store i1 %v9_b084, i1* %cpsr_z.global-to-local, align 1
  %v0_b088 = load i32, i32* %r3.global-to-local, align 4
  %v1_b088 = trunc i32 %v0_b088 to i8
  %v2_b088 = load i32, i32* @r5, align 4
  %v3_b088 = add i32 %v2_b088, 3
  %v4_b088 = inttoptr i32 %v3_b088 to i8*
  store i8 %v1_b088, i8* %v4_b088, align 1
  %v0_b08c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b08c, label %dec_label_pc_b090, label %dec_label_pc_af68

dec_label_pc_b090:                                ; preds = %dec_label_pc_b074, %dec_label_pc_af5c
  %v0_b090 = call i32 @function_e7cc()
  %v1_b090 = trunc i32 %v0_b090 to i8
  store i32 %v0_b090, i32* %r0.global-to-local, align 4
  %v4_b094 = sdiv i32 %v0_b090, 256
  store i32 %v4_b094, i32* %r3.global-to-local, align 4
  %v3_b098 = load i32, i32* @r4, align 4
  %v4_b098 = add i32 %v3_b098, 28
  %v5_b098 = inttoptr i32 %v4_b098 to i8*
  store i8 %v1_b090, i8* %v5_b098, align 1
  %v0_b09c = load i32, i32* %r3.global-to-local, align 4
  %v1_b09c = trunc i32 %v0_b09c to i8
  %v2_b09c = load i32, i32* @r8, align 4
  %v3_b09c = add i32 %v2_b09c, 1
  %v4_b09c = inttoptr i32 %v3_b09c to i8*
  store i8 %v1_b09c, i8* %v4_b09c, align 1
  br label %dec_label_pc_af68

dec_label_pc_b0a4:                                ; preds = %dec_label_pc_ab70, %dec_label_pc_ab3c, %dec_label_pc_aae0, %dec_label_pc_a988
  %v0_b0a4 = call i32 @function_e7cc()
  %v1_b0a8 = urem i32 %v0_b0a4, 4
  store i32 %v1_b0a8, i32* %r0.global-to-local, align 4
  %v2_b0ac = icmp eq i32 %v1_b0a8, 3
  store i1 %v2_b0ac, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_b0a4 to i2
  switch i2 %trunc, label %dec_label_pc_abe420 [
    i2 0, label %dec_label_pc_b0ec
    i2 1, label %dec_label_pc_b100
    i2 -2, label %dec_label_pc_b10c
    i2 -1, label %dec_label_pc_b11c
  ]

dec_label_pc_b0c8:                                ; preds = %dec_label_pc_ac44
  store i32 %v2_abf4, i32* %r0.global-to-local, align 4
  %v4_b0cc = sext i8 %v5_ac60 to i32
  store i32 %v4_b0cc, i32* %r1.global-to-local, align 4
  %v2_b0d0 = add i32 %v4_b0cc, %v2_abf4
  store i32 %v2_b0d0, i32* @fp, align 4
  br label %dec_label_pc_aefc

dec_label_pc_b0d8:                                ; preds = %dec_label_pc_ac18
  store i32 %v3_ac08, i32* %r0.global-to-local, align 4
  %v1_b0dc = call i32 @function_12bf0(i32 %v3_ac08)
  store i32 %v1_b0dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b0e0

dec_label_pc_b0e0:                                ; preds = %dec_label_pc_abf0, %dec_label_pc_abe4, %dec_label_pc_b0d8
  %v29_b0e8 = phi i32 [ %v3_ac08, %dec_label_pc_abf0 ], [ %v29_b0e874, %dec_label_pc_abe4 ], [ %v1_b0dc, %dec_label_pc_b0d8 ]
  store i32 %v3_a988, i32* %r4.global-to-local, align 4
  store i32 %v15_a988, i32* %r8.global-to-local, align 4
  store i32 %v18_a988, i32* %sb.global-to-local, align 4
  store i32 %v21_a988, i32* %sl.global-to-local, align 4
  store i32 %v24_a988, i32* %fp.global-to-local, align 4
  ret i32 %v29_b0e8

dec_label_pc_b0ec:                                ; preds = %dec_label_pc_b0a4
  store i32 134744072, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_abe4

dec_label_pc_b100:                                ; preds = %dec_label_pc_b0a4
  store i32 707416650, i32* @r4, align 4
  br label %dec_label_pc_abe4

dec_label_pc_b10c:                                ; preds = %dec_label_pc_b0a4
  store i32 104859200, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_abe4

dec_label_pc_b11c:                                ; preds = %dec_label_pc_b0a4
  store i32 33686020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_abe4

; uselistorder directives
  uselistorder i32 %v4_b0cc, { 0, 2, 1 }
  uselistorder i32 %v1_b0a8, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_b0a4, { 1, 0 }
  uselistorder i32 %v0_b090, { 0, 2, 1 }
  uselistorder i32 %v0_b058, { 0, 2, 1 }
  uselistorder i32 %v4_b044, { 1, 0 }
  uselistorder i32 %v0_b03c, { 0, 2, 1 }
  uselistorder i32 %v1_b018, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_afb4, { 0, 2, 1 }
  uselistorder i32 %v0_af9c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_af88, { 1, 0 }
  uselistorder i32 %v2_af84, { 0, 2, 1 }
  uselistorder i32 %v7_af30, { 1, 0, 2 }
  uselistorder i32 %v4_af6c.pre-phi, { 1, 0 }
  uselistorder i32 %v2_aeb0, { 1, 0 }
  uselistorder i32 %v1_aea486, { 1, 0, 2 }
  uselistorder i32 %v1_ae98, { 2, 1, 0 }
  uselistorder i32 %v0_ae98, { 1, 2, 0 }
  uselistorder i32 %v0_ae9832, { 1, 0 }
  uselistorder i32 %v1_ae9833, { 2, 0, 1 }
  uselistorder i8 %extract.t78, { 1, 0 }
  uselistorder i32 %v1_ae6c, { 2, 0, 4, 1, 3, 5, 6 }
  uselistorder i32 %v0_ade8, { 1, 0 }
  uselistorder i32 %v3_ad24, { 1, 0, 2 }
  uselistorder i32 %v1_acec, { 1, 0 }
  uselistorder i32 %v1_ace0, { 1, 0 }
  uselistorder i32 %v1_acc4, { 1, 0 }
  uselistorder i32 %v1_acb0, { 1, 0 }
  uselistorder i32 %v3_aca8, { 1, 0 }
  uselistorder i32 %v4_aca0, { 0, 4, 2, 5, 3, 1 }
  uselistorder i8 %v5_ac60, { 1, 0 }
  uselistorder i32 %v0_ac5c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_ac50, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_ac3c, { 1, 0 }
  uselistorder i1 %v7_ac0c, { 1, 0 }
  uselistorder i32 %v3_ac08, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_abf4, { 0, 11, 1, 6, 4, 3, 7, 10, 9, 8, 5, 2 }
  uselistorder i32 %stack_var_-2176.0, { 1, 0 }
  uselistorder i32 %v1_abdc, { 1, 0, 2 }
  uselistorder i1 %v7_abac, { 1, 0 }
  uselistorder i32 %v1_aba8, { 1, 0, 2 }
  uselistorder i1 %v8_aba0, { 1, 0 }
  uselistorder i1 %v7_ab9c, { 1, 0 }
  uselistorder i32 %v1_ab90, { 1, 0 }
  uselistorder i8 %v2_ab84, { 2, 0, 1, 3 }
  uselistorder i32 %v0_ab88, { 1, 0 }
  uselistorder i32 %v0_aba8, { 3, 0, 2, 1 }
  uselistorder i32 %v0_ab74, { 0, 2, 1 }
  uselistorder i32 %v1_ab8c, { 0, 2, 1 }
  uselistorder i32 %v2_ab5c, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_ab54, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ab3c, { 1, 2, 0, 3, 4, 5 }
  uselistorder i1 %v7_ab34, { 1, 0 }
  uselistorder i32 %v0_ab34, { 2, 3, 1, 4, 6, 5, 0 }
  uselistorder i32 %v0_aad8, { 1, 0, 3, 2 }
  uselistorder i32 %v5_aaa8, { 0, 3, 5, 4, 2, 1, 7, 6 }
  uselistorder i32 %v1_aa2c, { 1, 0 }
  uselistorder i32 %v7_a9e8, { 0, 1, 2, 4, 3 }
  uselistorder i8 %v5_a9e4, { 1, 0 }
  uselistorder i32 %v6_a9c4, { 1, 0 }
  uselistorder i32 %v2_a9ac, { 0, 3, 1, 2 }
  uselistorder i32 %v1_a994, { 7, 4, 5, 6, 3, 8, 9, 10, 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 13, 8, 12, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 46, 45, 47, 49, 48, 51, 50, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 3, 4, 5, 8, 7, 9, 11, 10, 12, 14, 13, 15, 16, 17, 18, 24, 19, 20, 1, 35, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 36, 37, 38, 40, 42, 41, 43, 2, 44, 46, 45, 48, 47, 49, 50, 52, 51, 53, 55, 54, 57, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 5, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 29, 26, 33, 34, 35 }
  uselistorder i32 134744072, { 1, 0 }
  uselistorder i32 707416650, { 1, 0 }
  uselistorder i32 104859200, { 1, 0 }
  uselistorder i32 33686020, { 1, 0 }
  uselistorder label %dec_label_pc_b0e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_af68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_af08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_aefc, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %dec_label_pc_abb8, { 1, 0 }
  uselistorder label %dec_label_pc_abac, { 1, 0 }
  uselistorder label %dec_label_pc_ab70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ab68, { 1, 0 }
}

define i32 @function_b138(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b138:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp30 = call i8 @__decompiler_undefined_function_1()
  %tmp31 = call i8 @__decompiler_undefined_function_1()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_b13c = urem i32 %arg1, 256
  store i32 %v1_b13c, i32* @fp, align 4
  store i32 %v1_b13c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_b154 = urem i32 %arg3, 256
  store i32 %v1_b154, i32* @r4, align 4
  %v2_b158 = call i32 @function_137cc(i32 %v1_b13c, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_b164 = load i32, i32* @fp, align 4
  store i32 %v0_b164, i32* %r0.global-to-local, align 4
  %v2_b168 = call i32 @function_137cc(i32 %v0_b164, i32 4)
  %v0_b16c = load i32, i32* @r5, align 4
  store i32 %v0_b16c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b17c = load i32, i32* @r4, align 4
  store i32 %v0_b17c, i32* %r0.global-to-local, align 4
  %v5_b180 = inttoptr i32 %v0_b16c to i32*
  %v6_b180 = call i32 @function_85e0(i32 %v0_b17c, i32* %v5_b180, i32 2, i32 0)
  %v1_b18c = urem i32 %v6_b180, 256
  store i32 %v1_b18c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b198 = load i32, i32* @r5, align 4
  store i32 %v0_b198, i32* %r1.global-to-local, align 4
  %v0_b19c = load i32, i32* @r4, align 4
  store i32 %v0_b19c, i32* %r0.global-to-local, align 4
  %v6_b1a4 = inttoptr i32 %v0_b198 to i32*
  %v7_b1a4 = call i32 @function_85e0(i32 %v0_b19c, i32* %v6_b1a4, i32 3, i32 65535)
  %v0_b1a8 = load i32, i32* @r5, align 4
  store i32 %v0_b1a8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b1a4, i32* @r6, align 4
  %v0_b1b8 = load i32, i32* @r4, align 4
  store i32 %v0_b1b8, i32* %r0.global-to-local, align 4
  %v4_b1bc = inttoptr i32 %v0_b1a8 to i32*
  %v5_b1bc = call i32 @function_85e0(i32 %v0_b1b8, i32* %v4_b1bc, i32 4, i32 64)
  %v1_b1c4 = urem i32 %v5_b1bc, 256
  store i32 %v1_b1c4, i32* %ip.global-to-local, align 4
  %v0_b1c8 = load i32, i32* @r5, align 4
  store i32 %v0_b1c8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b1d4 = load i32, i32* @r4, align 4
  store i32 %v0_b1d4, i32* %r0.global-to-local, align 4
  %v6_b1dc = inttoptr i32 %v0_b1c8 to i32*
  %v7_b1dc = call i32 @function_85e0(i32 %v0_b1d4, i32* %v6_b1dc, i32 5, i32 1)
  %v1_b1e8 = urem i32 %v7_b1dc, 256
  store i32 %v1_b1e8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b1f0 = load i32, i32* @r5, align 4
  store i32 %v0_b1f0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b1f8 = load i32, i32* @r4, align 4
  store i32 %v0_b1f8, i32* %r0.global-to-local, align 4
  %v5_b200 = inttoptr i32 %v0_b1f0 to i32*
  %v6_b200 = call i32 @function_85e0(i32 %v0_b1f8, i32* %v5_b200, i32 7, i32 65535)
  %v0_b204 = load i32, i32* @r5, align 4
  store i32 %v0_b204, i32* %r1.global-to-local, align 4
  %v3_b208 = mul i32 %v6_b200, 65536
  store i32 %v3_b208, i32* @r7, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b214 = load i32, i32* @r4, align 4
  store i32 %v0_b214, i32* %r0.global-to-local, align 4
  %v4_b218 = inttoptr i32 %v0_b204 to i32*
  %v5_b218 = call i32 @function_85e0(i32 %v0_b214, i32* %v4_b218, i32 11, i32 1)
  %v1_b220 = urem i32 %v5_b218, 256
  store i32 %v1_b220, i32* %ip.global-to-local, align 4
  %v0_b224 = load i32, i32* @r5, align 4
  store i32 %v0_b224, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b230 = load i32, i32* @r4, align 4
  store i32 %v0_b230, i32* %r0.global-to-local, align 4
  %v5_b238 = inttoptr i32 %v0_b224 to i32*
  %v6_b238 = call i32 @function_85e0(i32 %v0_b230, i32* %v5_b238, i32 12, i32 1)
  %v1_b240 = urem i32 %v6_b238, 256
  store i32 %v1_b240, i32* %ip.global-to-local, align 4
  %v0_b244 = load i32, i32* @r5, align 4
  store i32 %v0_b244, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b250 = load i32, i32* @r4, align 4
  store i32 %v0_b250, i32* %r0.global-to-local, align 4
  %v5_b258 = inttoptr i32 %v0_b244 to i32*
  %v6_b258 = call i32 @function_85e0(i32 %v0_b250, i32* %v5_b258, i32 13, i32 1)
  %v1_b260 = urem i32 %v6_b258, 256
  store i32 %v1_b260, i32* %ip.global-to-local, align 4
  %v0_b264 = load i32, i32* @r5, align 4
  store i32 %v0_b264, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b270 = load i32, i32* @r4, align 4
  store i32 %v0_b270, i32* %r0.global-to-local, align 4
  %v5_b278 = inttoptr i32 %v0_b264 to i32*
  %v6_b278 = call i32 @function_85e0(i32 %v0_b270, i32* %v5_b278, i32 14, i32 1)
  %v1_b280 = urem i32 %v6_b278, 256
  store i32 %v1_b280, i32* %ip.global-to-local, align 4
  %v0_b284 = load i32, i32* @r5, align 4
  store i32 %v0_b284, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b290 = load i32, i32* @r4, align 4
  store i32 %v0_b290, i32* %r0.global-to-local, align 4
  %v5_b298 = inttoptr i32 %v0_b284 to i32*
  %v6_b298 = call i32 @function_85e0(i32 %v0_b290, i32* %v5_b298, i32 15, i32 1)
  %v1_b2a0 = urem i32 %v6_b298, 256
  store i32 %v1_b2a0, i32* %ip.global-to-local, align 4
  %v0_b2a4 = load i32, i32* @r5, align 4
  store i32 %v0_b2a4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b2b0 = load i32, i32* @r4, align 4
  store i32 %v0_b2b0, i32* %r0.global-to-local, align 4
  %v5_b2b8 = inttoptr i32 %v0_b2a4 to i32*
  %v6_b2b8 = call i32 @function_85e0(i32 %v0_b2b0, i32* %v5_b2b8, i32 16, i32 1)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v6_b2b8, i32* %ip.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b2c8 = load i32, i32* @r5, align 4
  store i32 %v0_b2c8, i32* %r1.global-to-local, align 4
  %v0_b2cc = load i32, i32* @r4, align 4
  store i32 %v0_b2cc, i32* %r0.global-to-local, align 4
  %v1_b2d0 = urem i32 %v6_b2b8, 256
  store i32 %v1_b2d0, i32* @r8, align 4
  %v4_b2d4 = inttoptr i32 %v0_b2c8 to i32*
  %v5_b2d4 = call i32 @function_85e0(i32 %v0_b2cc, i32* %v4_b2d4, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b2e0 = load i32, i32* @r5, align 4
  store i32 %v0_b2e0, i32* %r1.global-to-local, align 4
  store i32 %v5_b2d4, i32* @sb, align 4
  %v0_b2e8 = load i32, i32* @r4, align 4
  store i32 %v0_b2e8, i32* %r0.global-to-local, align 4
  %v4_b2ec = inttoptr i32 %v0_b2e0 to i32*
  %v5_b2ec = call i32 @function_85e0(i32 %v0_b2e8, i32* %v4_b2ec, i32 1, i32 1)
  store i32 3, i32* %r1.global-to-local, align 4
  %v1_b2f8 = urem i32 %v5_b2ec, 256
  store i32 %v1_b2f8, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b308 = call i32 @function_134e0(i32 2, i32 3, i32 6)
  store i32 %v3_b308, i32* %r0.global-to-local, align 4
  %v0_b30c = load i32, i32* @r7, align 4
  %v3_b30c = udiv i32 %v0_b30c, 65536
  store i32 %v3_b30c, i32* %r1.global-to-local, align 4
  %v7_b310 = icmp eq i32 %v3_b308, -1
  store i1 %v7_b310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b310, label %dec_label_pc_b56c, label %dec_label_pc_b320

dec_label_pc_b320:                                ; preds = %dec_label_pc_b138
  store i32 1, i32* %stack_var_-40, align 4
  %v6_b328 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_b328, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_b33c = call i32 @function_134b0(i32 %v3_b308, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_b33c, i32* %r0.global-to-local, align 4
  %v7_b340 = icmp eq i32 %v6_b33c, -1
  store i1 %v7_b340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b340, label %dec_label_pc_b564, label %dec_label_pc_b348

dec_label_pc_b348:                                ; preds = %dec_label_pc_b320
  %v0_b348 = load i32, i32* @fp, align 4
  %v2_b348 = icmp eq i32 %v0_b348, 0
  store i1 %v2_b348, i1* %cpsr_z.global-to-local, align 1
  %v0_b34c = load i32, i32* @r6, align 4
  %v3_b34c = mul i32 %v0_b34c, 65536
  store i32 %v3_b34c, i32* %r0.global-to-local, align 4
  %v3_b350 = urem i32 %v0_b34c, 65536
  store i32 %v3_b350, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp72 = icmp slt i32 %v0_b348, 1
  br i1 %tmp72, label %.thread18, label %dec_label_pc_b374.preheader

.thread18:                                        ; preds = %dec_label_pc_b348
  store i32 0, i32* %stack_var_-40, align 4
  br label %dec_label_pc_b7f8

dec_label_pc_b374.preheader:                      ; preds = %dec_label_pc_b348
  %v5_b358 = load i32, i32* @r7, align 4
  %v8_b358 = udiv i32 %v5_b358, 16777216
  %tmp73 = udiv i32 %v0_b34c, 256
  %v8_b35c = urem i32 %tmp73, 256
  store i32 %v8_b35c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_b460 = icmp ugt i32 %v0_b30c, -65537
  %v2_b484 = ptrtoint i32* %stack_var_-60 to i32
  %v3_b490 = bitcast i32* %stack_var_-60 to %sockaddr*
  %v2_b4c0 = ptrtoint i32* %stack_var_-76 to i32
  %v2_b4c4 = ptrtoint i32* %stack_var_-44 to i32
  %v2_b4c8 = ptrtoint i32* %stack_var_-332 to i32
  %v4_b514 = zext i8 %tmp31 to i32
  %v4_b518 = zext i8 %tmp30 to i32
  %v4_b524 = mul nuw nsw i32 %v4_b518, 256
  %v4_b534 = zext i8 %tmp to i32
  %v1_b538 = and i32 %v4_b534, 18
  %v2_b53c = icmp eq i32 %v1_b538, 18
  %v1_b470 = mul nuw nsw i32 %v3_b30c, 256
  %v4_b474 = and i32 %v1_b470, 65280
  %v5_b474 = or i32 %v8_b358, %v4_b474
  %v3_b47893 = udiv i32 %v4_b474, 256
  %v1_b47c = trunc i32 %v3_b47893 to i8
  %v1_b640 = mul i32 %v0_b34c, 256
  %v4_b648 = and i32 %v1_b640, 65280
  %sext = mul i32 %v6_b180, 16777216
  %v4_b658 = sdiv i32 %sext, 16777216
  %sext5 = mul i32 %v5_b1bc, 16777216
  %v4_b67c = sdiv i32 %sext5, 16777216
  %v5_b524 = or i32 %v4_b514, %v4_b524
  %v1_b544 = and i32 %v4_b534, 5
  %v2_b544 = icmp eq i32 %v1_b544, 0
  %v1_b480 = trunc i32 %v8_b358 to i8
  %v5_b648 = or i32 %v8_b35c, %v4_b648
  %v1_b668 = trunc i32 %v4_b658 to i8
  %v1_b748 = urem i32 %v5_b218, 2
  %tmp94 = sub nsw i32 0, %v1_b748
  %v4_b750 = and i32 %tmp94, 32
  %v1_b760 = urem i32 %v6_b238, 2
  %tmp95 = sub nsw i32 0, %v1_b760
  %v4_b768 = and i32 %tmp95, 16
  %v1_b778 = urem i32 %v6_b258, 2
  %tmp96 = sub nsw i32 0, %v1_b778
  %v4_b780 = and i32 %tmp96, 8
  %v1_b790 = urem i32 %v6_b278, 2
  %tmp97 = sub nsw i32 0, %v1_b790
  %v4_b798 = and i32 %tmp97, 4
  %v1_b7a8 = urem i32 %v6_b298, 2
  %tmp98 = sub nsw i32 0, %v1_b7a8
  %v3_b7b0 = and i32 %tmp98, 2
  br label %dec_label_pc_b374

dec_label_pc_b374:                                ; preds = %dec_label_pc_b7e4, %dec_label_pc_b54c, %dec_label_pc_b374.preheader
  store i32 %v8_b35c, i32* %r3.global-to-local, align 4
  %v0_b380 = load i32, i32* @sb, align 4
  %v1_b380 = add i32 %v0_b380, 40
  store i32 %v1_b380, i32* @sl, align 4
  br label %dec_label_pc_b384

dec_label_pc_b384:                                ; preds = %dec_label_pc_b558, %dec_label_pc_b374
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b390 = call i32 @function_134e0(i32 2, i32 1, i32 0)
  store i32 %v3_b390, i32* %r0.global-to-local, align 4
  %v7_b394 = icmp eq i32 %v3_b390, -1
  store i1 %v7_b394, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b390, i32* @r7, align 4
  br i1 %v7_b394, label %dec_label_pc_b7e4, label %dec_label_pc_b3a0

dec_label_pc_b3a0:                                ; preds = %dec_label_pc_b384
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b3a8 = call i32 @function_12b2c(i32 %v3_b390, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b3b0 = or i32 %v2_b3a8, 2048
  store i32 %v1_b3b0, i32* @r2, align 4
  %v0_b3b4 = load i32, i32* @r7, align 4
  store i32 %v0_b3b4, i32* %r0.global-to-local, align 4
  %v2_b3b8 = call i32 @function_12b2c(i32 %v0_b3b4, i32 4)
  store i32 %v2_b3b8, i32* %r0.global-to-local, align 4
  %v3_b3bc = load i32, i32* %stack_var_-40, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_b3cc = mul i32 %v3_b3bc, 24
  store i32 %v5_b3cc, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v2_b3dc = add i32 %v5_b3cc, %arg2
  store i32 %v2_b3dc, i32* %r2.global-to-local, align 4
  %v1_b3e0 = add i32 %v2_b3dc, 20
  %v2_b3e0 = inttoptr i32 %v1_b3e0 to i8*
  %v3_b3e0 = load i8, i8* %v2_b3e0, align 1
  %v4_b3e0 = zext i8 %v3_b3e0 to i32
  store i32 %v4_b3e0, i32* %r3.global-to-local, align 4
  %v2_b3e4 = icmp ugt i8 %v3_b3e0, 30
  %v7_b3e4 = icmp eq i8 %v3_b3e0, 31
  store i1 %v7_b3e4, i1* %cpsr_z.global-to-local, align 1
  %v2_b3e8 = xor i1 %v7_b3e4, true
  %v3_b3e8 = and i1 %v2_b3e4, %v2_b3e8
  %v5_b3e8 = add i32 %v2_b3dc, 16
  %v6_b3e8 = inttoptr i32 %v5_b3e8 to i32*
  %v7_b3e8 = load i32, i32* %v6_b3e8, align 4
  br i1 %v3_b3e8, label %dec_label_pc_b454, label %dec_label_pc_b3f4

dec_label_pc_b3f4:                                ; preds = %dec_label_pc_b3a0
  store i32 %v7_b3e8, i32* @r4, align 4
  %v0_b3f8 = call i32 @function_e7cc()
  store i32 %v0_b3f8, i32* %r0.global-to-local, align 4
  %v3_b3fc = load i32, i32* %stack_var_-40, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v5_b408 = mul i32 %v3_b3fc, 24
  %v0_b40c = load i32, i32* @r4, align 4
  %v2_b410 = add i32 %v5_b408, %arg2
  store i32 %v2_b410, i32* %r1.global-to-local, align 4
  %v1_b414 = and i32 %v0_b40c, 65280
  store i32 %v1_b414, i32* %r3.global-to-local, align 4
  %v1_b40c = udiv i32 %v0_b40c, 256
  %v3_b418 = and i32 %v1_b40c, 65280
  store i32 %v3_b418, i32* %r2.global-to-local, align 4
  %v3_b41c = mul i32 %v0_b40c, 16777216
  store i32 %v3_b41c, i32* %ip.global-to-local, align 4
  %v1_b420 = add i32 %v2_b410, 20
  %v2_b420 = inttoptr i32 %v1_b420 to i8*
  %v3_b420 = load i8, i8* %v2_b420, align 1
  %v4_b420 = zext i8 %v3_b420 to i32
  store i32 %v4_b420, i32* %lr.global-to-local, align 4
  %v4_b424 = mul nuw nsw i32 %v1_b414, 256
  %v5_b424 = or i32 %v4_b424, %v3_b41c
  store i32 %v5_b424, i32* %ip.global-to-local, align 4
  %v2_b42c = call i32 @llvm.bswap.i32(i32 %v0_b40c)
  %v7_b430 = lshr i32 %v0_b3f8, %v4_b420
  %v8_b430 = add i32 %v7_b430, %v2_b42c
  store i32 %v8_b430, i32* %r2.global-to-local, align 4
  %v3_b43c = mul i32 %v8_b430, 16777216
  %v1_b440 = and i32 %v8_b430, 65280
  store i32 %v1_b440, i32* %r0.global-to-local, align 4
  %v4_b444 = mul nuw nsw i32 %v1_b440, 256
  %v5_b444 = or i32 %v4_b444, %v3_b43c
  store i32 %v5_b444, i32* %r1.global-to-local, align 4
  %v2_b44c = call i32 @llvm.bswap.i32(i32 %v8_b430)
  br label %dec_label_pc_b454

dec_label_pc_b454:                                ; preds = %dec_label_pc_b3a0, %dec_label_pc_b3f4
  %storemerge25 = phi i32 [ %v2_b44c, %dec_label_pc_b3f4 ], [ %v7_b3e8, %dec_label_pc_b3a0 ]
  store i32 %v3_b30c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_b460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b460, label %dec_label_pc_b574, label %dec_label_pc_b468

dec_label_pc_b468:                                ; preds = %dec_label_pc_b454
  store i32 %v8_b358, i32* %ip.global-to-local, align 4
  store i32 %v5_b474, i32* %r3.global-to-local, align 4
  store i32 %v3_b47893, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_b484

dec_label_pc_b484:                                ; preds = %dec_label_pc_b574, %dec_label_pc_b468
  %stack_var_-57.0 = phi i8 [ %v1_b57c, %dec_label_pc_b574 ], [ %v1_b47c, %dec_label_pc_b468 ]
  %storemerge = phi i8 [ %v1_b574, %dec_label_pc_b574 ], [ %v1_b480, %dec_label_pc_b468 ]
  store i32 %v2_b484, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b48c = load i32, i32* @r7, align 4
  store i32 %v0_b48c, i32* %r0.global-to-local, align 4
  %v4_b490 = call i32 @function_1333c(i32 %v0_b48c, %sockaddr* nonnull %v3_b490, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b498 = call i32 @function_12ec0(i32* null)
  store i32 %v2_b498, i32* %r0.global-to-local, align 4
  store i32 %v2_b498, i32* @r4, align 4
  %v9_b4f8 = icmp eq i32 %tmp32, %storemerge25
  %v4_b51c = zext i8 %storemerge to i32
  %v4_b520 = zext i8 %stack_var_-57.0 to i32
  %. = zext i1 %v9_b4f8 to i32
  %v9_b50c = icmp eq i1 %v9_b4f8, false
  %v4_b528 = mul nuw nsw i32 %v4_b520, 256
  %v5_b528 = or i32 %v4_b528, %v4_b51c
  %v9_b52c = icmp eq i32 %v5_b528, %v5_b524
  br label %dec_label_pc_b4b4

dec_label_pc_b4a4:                                ; preds = %.thread23, %dec_label_pc_b514, %dec_label_pc_b544, %bb75
  %v2_b4a4 = call i32 @function_12ec0(i32* null)
  %v0_b4a8 = load i32, i32* @r4, align 4
  %v2_b4a8 = sub i32 %v2_b4a4, %v0_b4a8
  store i32 %v2_b4a8, i32* %r0.global-to-local, align 4
  %v7_b4ac = icmp eq i32 %v2_b4a8, 10
  store i1 %v7_b4ac, i1* %cpsr_z.global-to-local, align 1
  %v8_b4b0 = icmp sgt i32 %v2_b4a8, 10
  br i1 %v8_b4b0, label %dec_label_pc_b558, label %dec_label_pc_b4b4

dec_label_pc_b4b4:                                ; preds = %dec_label_pc_b4a4, %dec_label_pc_b484
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-44, align 4
  store i32 %v2_b4c0, i32* %lr.global-to-local, align 4
  store i32 %v2_b4c4, i32* %ip.global-to-local, align 4
  store i32 %v2_b4c8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_b308, i32* %r0.global-to-local, align 4
  %v7_b4dc = call i32 @function_1341c(i32 %v3_b308, i32* nonnull %stack_var_-332, i32 256, i32 16384, i32 %v2_b4c0, i32 %v2_b4c4)
  store i32 %v7_b4dc, i32* %r2.global-to-local, align 4
  %v7_b4e4 = icmp eq i32 %v7_b4dc, -1
  store i1 %v7_b4e4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b4e4, label %dec_label_pc_b56c, label %dec_label_pc_b4f0

dec_label_pc_b4f0:                                ; preds = %dec_label_pc_b4b4
  store i32 %tmp32, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_b504 = icmp eq i32 %v7_b4dc, 40
  store i1 %v7_b504, i1* %cpsr_z.global-to-local, align 1
  %tmp99 = icmp ult i32 %v7_b4dc, 41
  br i1 %tmp99, label %.thread23, label %bb75

.thread23:                                        ; preds = %dec_label_pc_b4f0
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b4a4

bb75:                                             ; preds = %dec_label_pc_b4f0
  store i1 %v9_b50c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b50c, label %dec_label_pc_b4a4, label %dec_label_pc_b514

dec_label_pc_b514:                                ; preds = %bb75
  store i32 %v4_b518, i32* %r1.global-to-local, align 4
  store i32 %v4_b51c, i32* %ip.global-to-local, align 4
  store i32 %v4_b520, i32* %r2.global-to-local, align 4
  store i32 %v5_b524, i32* %r3.global-to-local, align 4
  store i32 %v5_b528, i32* @r5, align 4
  store i1 %v9_b52c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b52c, label %dec_label_pc_b534, label %dec_label_pc_b4a4

dec_label_pc_b534:                                ; preds = %dec_label_pc_b514
  store i32 %v4_b534, i32* %r2.global-to-local, align 4
  store i32 %v1_b538, i32* %r3.global-to-local, align 4
  store i1 %v2_b53c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b53c, label %dec_label_pc_b588, label %dec_label_pc_b544

dec_label_pc_b544:                                ; preds = %dec_label_pc_b534
  store i1 %v2_b544, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b544, label %dec_label_pc_b4a4, label %dec_label_pc_b54c

dec_label_pc_b54c:                                ; preds = %dec_label_pc_b544
  %v0_b54c = load i32, i32* @r7, align 4
  store i32 %v0_b54c, i32* %r0.global-to-local, align 4
  %v1_b550 = call i32 @function_12bf0(i32 %v0_b54c)
  store i32 %v1_b550, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b374

dec_label_pc_b558:                                ; preds = %dec_label_pc_b4a4
  %v0_b558 = load i32, i32* @r7, align 4
  store i32 %v0_b558, i32* %r0.global-to-local, align 4
  %v1_b55c = call i32 @function_12bf0(i32 %v0_b558)
  store i32 %v1_b55c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b384

dec_label_pc_b564:                                ; preds = %dec_label_pc_b320
  store i32 %v3_b308, i32* %r0.global-to-local, align 4
  %v1_b568 = call i32 @function_12bf0(i32 %v3_b308)
  store i32 %v1_b568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b56c

dec_label_pc_b56c:                                ; preds = %dec_label_pc_b4b4, %dec_label_pc_b138, %dec_label_pc_b564
  %v29_b570 = phi i32 [ %v3_b308, %dec_label_pc_b138 ], [ %v1_b568, %dec_label_pc_b564 ], [ 0, %dec_label_pc_b4b4 ]
  ret i32 %v29_b570

dec_label_pc_b574:                                ; preds = %dec_label_pc_b454
  %v0_b574 = call i32 @function_e7cc()
  %v1_b574 = trunc i32 %v0_b574 to i8
  store i32 %v0_b574, i32* %r0.global-to-local, align 4
  %v4_b578 = sdiv i32 %v0_b574, 256
  store i32 %v4_b578, i32* %r3.global-to-local, align 4
  %v1_b57c = trunc i32 %v4_b578 to i8
  br label %dec_label_pc_b484

dec_label_pc_b588:                                ; preds = %dec_label_pc_b534
  %v3_b588 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b588, i32* @r4, align 4
  store i32 %v2_b158, i32* %r2.global-to-local, align 4
  %v3_b590 = mul i32 %v3_b588, 16
  store i32 %v3_b590, i32* %ip.global-to-local, align 4
  %v3_b594 = add i32 %v3_b590, %v2_b158
  %v4_b594 = inttoptr i32 %v3_b594 to i32*
  store i32 %storemerge25, i32* %v4_b594, align 4
  %v0_b598 = load i32, i32* @r6, align 4
  %v1_b598 = add i32 %v0_b598, 4
  %v2_b598 = inttoptr i32 %v1_b598 to i32*
  %v3_b598 = load i32, i32* %v2_b598, align 4
  store i32 %v3_b598, i32* %r0.global-to-local, align 4
  %v1_b5a0 = and i32 %v3_b598, 65280
  store i32 %v1_b5a0, i32* %r1.global-to-local, align 4
  store i32 %v2_b158, i32* %lr.global-to-local, align 4
  %v3_b5a8 = mul i32 %v3_b598, 16777216
  %v4_b5b0 = mul nuw nsw i32 %v1_b5a0, 256
  %v5_b5b0 = or i32 %v4_b5b0, %v3_b5a8
  store i32 %v5_b5b0, i32* %r2.global-to-local, align 4
  %v1_b5b8 = load i32, i32* %ip.global-to-local, align 4
  %v2_b5b8 = add i32 %v1_b5b8, %v2_b158
  store i32 %v2_b5b8, i32* %ip.global-to-local, align 4
  %v2_b5bc = call i32 @llvm.bswap.i32(i32 %v3_b598)
  store i32 %v2_b5bc, i32* %r3.global-to-local, align 4
  %v2_b5c0 = add i32 %v2_b5b8, 4
  %v3_b5c0 = inttoptr i32 %v2_b5c0 to i32*
  store i32 %v2_b5bc, i32* %v3_b5c0, align 4
  %v0_b5c4 = load i32, i32* @r6, align 4
  %v1_b5c4 = add i32 %v0_b5c4, 8
  %v2_b5c4 = inttoptr i32 %v1_b5c4 to i32*
  %v3_b5c4 = load i32, i32* %v2_b5c4, align 4
  store i32 %v3_b5c4, i32* %r0.global-to-local, align 4
  %v1_b5cc = and i32 %v3_b5c4, 65280
  store i32 %v1_b5cc, i32* %r1.global-to-local, align 4
  %v3_b5d0 = mul i32 %v3_b5c4, 16777216
  %v4_b5d8 = mul nuw nsw i32 %v1_b5cc, 256
  %v5_b5d8 = or i32 %v4_b5d8, %v3_b5d0
  store i32 %v5_b5d8, i32* %r2.global-to-local, align 4
  %v2_b5e0 = call i32 @llvm.bswap.i32(i32 %v3_b5c4)
  store i32 %v2_b5e0, i32* %r3.global-to-local, align 4
  %v1_b5e4 = load i32, i32* %ip.global-to-local, align 4
  %v2_b5e4 = add i32 %v1_b5e4, 8
  %v3_b5e4 = inttoptr i32 %v2_b5e4 to i32*
  store i32 %v2_b5e0, i32* %v3_b5e4, align 4
  %v0_b5e8 = load i32, i32* @r6, align 4
  %v1_b5e8 = inttoptr i32 %v0_b5e8 to i32*
  %v2_b5e8 = load i32, i32* %v1_b5e8, align 4
  %v3_b5ec = udiv i32 %v2_b5e8, 65536
  store i32 %v3_b5ec, i32* %r2.global-to-local, align 4
  %v3_b5f03 = udiv i32 %v2_b5e8, 16777216
  store i32 %v3_b5f03, i32* %r1.global-to-local, align 4
  %v0_b5f4 = load i32, i32* @r5, align 4
  %v3_b5f4 = sdiv i32 %v0_b5f4, 256
  store i32 %v3_b5f4, i32* %r3.global-to-local, align 4
  %v1_b5f8 = trunc i32 %v3_b5f4 to i8
  %v2_b5f8 = load i32, i32* %ip.global-to-local, align 4
  %v3_b5f8 = add i32 %v2_b5f8, 15
  %v4_b5f8 = inttoptr i32 %v3_b5f8 to i8*
  store i8 %v1_b5f8, i8* %v4_b5f8, align 1
  %v0_b5fc = load i32, i32* %r1.global-to-local, align 4
  %v1_b5fc = trunc i32 %v0_b5fc to i8
  %v2_b5fc = load i32, i32* %ip.global-to-local, align 4
  %v3_b5fc = add i32 %v2_b5fc, 13
  %v4_b5fc = inttoptr i32 %v3_b5fc to i8*
  store i8 %v1_b5fc, i8* %v4_b5fc, align 1
  %v0_b600 = load i32, i32* %r2.global-to-local, align 4
  %v1_b600 = trunc i32 %v0_b600 to i8
  %v2_b600 = load i32, i32* %ip.global-to-local, align 4
  %v3_b600 = add i32 %v2_b600, 12
  %v4_b600 = inttoptr i32 %v3_b600 to i8*
  store i8 %v1_b600, i8* %v4_b600, align 1
  %v0_b604 = load i32, i32* @r5, align 4
  %v1_b604 = trunc i32 %v0_b604 to i8
  %v2_b604 = load i32, i32* %ip.global-to-local, align 4
  %v3_b604 = add i32 %v2_b604, 14
  %v4_b604 = inttoptr i32 %v3_b604 to i8*
  store i8 %v1_b604, i8* %v4_b604, align 1
  %v0_b608 = load i32, i32* @sl, align 4
  store i32 %v0_b608, i32* %r0.global-to-local, align 4
  %v1_b60c = call i32 @function_13678(i32 %v0_b608)
  store i32 %v1_b60c, i32* %r0.global-to-local, align 4
  store i32 %v2_b168, i32* %r1.global-to-local, align 4
  %v3_b614 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b614, i32* %r2.global-to-local, align 4
  %v2_b618 = load i32, i32* @r4, align 4
  %v5_b618 = mul i32 %v2_b618, 4
  %v6_b618 = add i32 %v5_b618, %v2_b168
  %v7_b618 = inttoptr i32 %v6_b618 to i32*
  store i32 %v1_b60c, i32* %v7_b618, align 4
  %v0_b61c = load i32, i32* %r1.global-to-local, align 4
  %v1_b61c = load i32, i32* %r2.global-to-local, align 4
  %v4_b61c = mul i32 %v1_b61c, 4
  %v5_b61c = add i32 %v4_b61c, %v0_b61c
  %v6_b61c = inttoptr i32 %v5_b61c to i32*
  %v7_b61c = load i32, i32* %v6_b61c, align 4
  store i32 %v7_b61c, i32* @r4, align 4
  %v1_b620 = inttoptr i32 %v7_b61c to i8*
  %v2_b620 = load i8, i8* %v1_b620, align 1
  %tmp100 = urem i8 %v2_b620, 16
  %v1_b624 = zext i8 %tmp100 to i32
  %v1_b628 = or i32 %v1_b624, 64
  store i32 %v1_b628, i32* %r3.global-to-local, align 4
  %v1_b62c = trunc i32 %v1_b628 to i8
  store i8 %v1_b62c, i8* %v1_b620, align 1
  %v0_b630 = load i32, i32* @r4, align 4
  %v1_b630 = inttoptr i32 %v0_b630 to i8*
  %v2_b630 = load i8, i8* %v1_b630, align 1
  store i32 %v3_b350, i32* %ip.global-to-local, align 4
  %v1_b63c = and i8 %v2_b630, -16
  %v1_b644 = or i8 %v1_b63c, 5
  store i32 %v5_b648, i32* %r0.global-to-local, align 4
  %v0_b64c = load i32, i32* @sl, align 4
  %v3_b64c = mul i32 %v0_b64c, 65536
  store i32 %v3_b64c, i32* %r2.global-to-local, align 4
  store i32 %v1_b1e8, i32* %lr.global-to-local, align 4
  store i8 %v1_b644, i8* %v1_b630, align 1
  store i32 %v4_b658, i32* %r1.global-to-local, align 4
  %v0_b65c = load i32, i32* %r2.global-to-local, align 4
  %v3_b65c = udiv i32 %v0_b65c, 65536
  %v1_b660 = urem i32 %v3_b65c, 256
  store i32 %v1_b660, i32* %r3.global-to-local, align 4
  %v3_b664 = udiv i32 %v0_b65c, 16777216
  store i32 %v3_b664, i32* %r2.global-to-local, align 4
  %v2_b668 = load i32, i32* @r4, align 4
  %v3_b668 = add i32 %v2_b668, 1
  %v4_b668 = inttoptr i32 %v3_b668 to i8*
  store i8 %v1_b668, i8* %v4_b668, align 1
  %v0_b66c = load i32, i32* %r2.global-to-local, align 4
  %v1_b66c = load i32, i32* %r3.global-to-local, align 4
  %v4_b66c = mul i32 %v1_b66c, 256
  %v5_b66c = or i32 %v4_b66c, %v0_b66c
  store i32 %v5_b66c, i32* %r2.global-to-local, align 4
  %v1_b670 = trunc i32 %v0_b66c to i8
  %v2_b670 = load i32, i32* @r4, align 4
  %v3_b670 = add i32 %v2_b670, 2
  %v4_b670 = inttoptr i32 %v3_b670 to i8*
  store i8 %v1_b670, i8* %v4_b670, align 1
  %v0_b674 = load i32, i32* %lr.global-to-local, align 4
  %v2_b674 = icmp eq i32 %v0_b674, 0
  store i1 %v2_b674, i1* %cpsr_z.global-to-local, align 1
  %v0_b678 = load i32, i32* %r2.global-to-local, align 4
  %v3_b678 = sdiv i32 %v0_b678, 256
  store i32 %v3_b678, i32* %r3.global-to-local, align 4
  store i32 %v4_b67c, i32* %r2.global-to-local, align 4
  %v1_b680 = trunc i32 %v3_b678 to i8
  %v2_b680 = load i32, i32* @r4, align 4
  %v3_b680 = add i32 %v2_b680, 3
  %v4_b680 = inttoptr i32 %v3_b680 to i8*
  store i8 %v1_b680, i8* %v4_b680, align 1
  %v0_b684 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b684, label %bb77, label %bb76

bb76:                                             ; preds = %dec_label_pc_b588
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb77

bb77:                                             ; preds = %dec_label_pc_b588, %bb76
  %v0_b688 = load i32, i32* %r2.global-to-local, align 4
  %v1_b688 = trunc i32 %v0_b688 to i8
  %v2_b688 = load i32, i32* @r4, align 4
  %v3_b688 = add i32 %v2_b688, 8
  %v4_b688 = inttoptr i32 %v3_b688 to i8*
  store i8 %v1_b688, i8* %v4_b688, align 1
  %v0_b68c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b68c, label %.thread6, label %bb78

bb78:                                             ; preds = %bb77
  %v1_b68c = load i32, i32* %r3.global-to-local, align 4
  %v2_b68c = trunc i32 %v1_b68c to i8
  %v3_b68c = load i32, i32* @r4, align 4
  %v4_b68c = add i32 %v3_b68c, 6
  %v5_b68c = inttoptr i32 %v4_b68c to i8*
  store i8 %v2_b68c, i8* %v5_b68c, align 1
  %v0_b690.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b690.pr, label %.thread6, label %bb79

bb79:                                             ; preds = %bb78
  store i32 0, i32* %r2.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb77, %bb78, %bb79
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_b698 = load i32, i32* @r4, align 4
  %v3_b698 = add i32 %v2_b698, 9
  %v4_b698 = inttoptr i32 %v3_b698 to i8*
  store i8 6, i8* %v4_b698, align 1
  %v0_b69c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b69c, label %bb81, label %bb80

bb80:                                             ; preds = %.thread6
  %v1_b69c = load i32, i32* %r2.global-to-local, align 4
  %v2_b69c = trunc i32 %v1_b69c to i8
  %v3_b69c = load i32, i32* @r4, align 4
  %v4_b69c = add i32 %v3_b69c, 7
  %v5_b69c = inttoptr i32 %v4_b69c to i8*
  store i8 %v2_b69c, i8* %v5_b69c, align 1
  br label %bb81

bb81:                                             ; preds = %.thread6, %bb80
  %v2_b6a4 = load i32, i32* @global_var_1dc68.49, align 4
  store i32 %v2_b6a4, i32* %r3.global-to-local, align 4
  %v0_b6a8 = load i32, i32* %r0.global-to-local, align 4
  %v3_b6a8 = sdiv i32 %v0_b6a8, 256
  store i32 %v3_b6a8, i32* %ip.global-to-local, align 4
  %v1_b6ac = load i32, i32* @r4, align 4
  %v2_b6ac = add i32 %v1_b6ac, 12
  %v3_b6ac = inttoptr i32 %v2_b6ac to i32*
  store i32 %v2_b6a4, i32* %v3_b6ac, align 4
  %v0_b6b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_b6b0 = trunc i32 %v0_b6b0 to i8
  %v2_b6b0 = load i32, i32* @r4, align 4
  %v3_b6b0 = add i32 %v2_b6b0, 5
  %v4_b6b0 = inttoptr i32 %v3_b6b0 to i8*
  store i8 %v1_b6b0, i8* %v4_b6b0, align 1
  %v3_b6b4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b6b4, i32* %r2.global-to-local, align 4
  store i32 %v2_b158, i32* %ip.global-to-local, align 4
  %v4_b6bc = mul i32 %v3_b6b4, 16
  %v5_b6bc = add i32 %v4_b6bc, %v2_b158
  %v6_b6bc = inttoptr i32 %v5_b6bc to i32*
  %v7_b6bc = load i32, i32* %v6_b6bc, align 4
  store i32 %v7_b6bc, i32* %r3.global-to-local, align 4
  %v0_b6c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_b6c0 = trunc i32 %v0_b6c0 to i8
  %v2_b6c0 = load i32, i32* @r4, align 4
  %v3_b6c0 = add i32 %v2_b6c0, 4
  %v4_b6c0 = inttoptr i32 %v3_b6c0 to i8*
  store i8 %v1_b6c0, i8* %v4_b6c0, align 1
  %v0_b6c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b6c4 = load i32, i32* @r4, align 4
  %v2_b6c4 = add i32 %v1_b6c4, 16
  %v3_b6c4 = inttoptr i32 %v2_b6c4 to i32*
  store i32 %v0_b6c4, i32* %v3_b6c4, align 4
  %v0_b6c8 = load i32, i32* %r2.global-to-local, align 4
  %v3_b6c8 = mul i32 %v0_b6c8, 16
  %v1_b6cc = load i32, i32* %ip.global-to-local, align 4
  %v2_b6cc = add i32 %v1_b6cc, %v3_b6c8
  store i32 %v2_b6cc, i32* %r2.global-to-local, align 4
  %v1_b6d0 = add i32 %v2_b6cc, 13
  %v2_b6d0 = inttoptr i32 %v1_b6d0 to i8*
  %v3_b6d0 = load i8, i8* %v2_b6d0, align 1
  %v4_b6d0 = zext i8 %v3_b6d0 to i32
  store i32 %v4_b6d0, i32* %r1.global-to-local, align 4
  %v1_b6d4 = add i32 %v2_b6cc, 12
  %v2_b6d4 = inttoptr i32 %v1_b6d4 to i8*
  %v3_b6d4 = load i8, i8* %v2_b6d4, align 1
  %v4_b6d4 = zext i8 %v3_b6d4 to i32
  %v4_b6d8 = mul nuw nsw i32 %v4_b6d0, 256
  %v5_b6d8 = or i32 %v4_b6d4, %v4_b6d8
  store i32 %v5_b6d8, i32* %r3.global-to-local, align 4
  %v2_b6dc = load i32, i32* @r4, align 4
  %v3_b6dc = add i32 %v2_b6dc, 20
  %v4_b6dc = inttoptr i32 %v3_b6dc to i8*
  store i8 %v3_b6d4, i8* %v4_b6dc, align 1
  %v0_b6e0 = load i32, i32* @r4, align 4
  %v1_b6e0 = add i32 %v0_b6e0, 20
  store i32 %v1_b6e0, i32* @r6, align 4
  %v0_b6e4 = load i32, i32* %r3.global-to-local, align 4
  %v3_b6e4 = sdiv i32 %v0_b6e4, 256
  store i32 %v3_b6e4, i32* %r3.global-to-local, align 4
  %v1_b6e8 = trunc i32 %v3_b6e4 to i8
  %v3_b6e8 = add i32 %v0_b6e0, 21
  %v4_b6e8 = inttoptr i32 %v3_b6e8 to i8*
  store i8 %v1_b6e8, i8* %v4_b6e8, align 1
  %v0_b6ec = load i32, i32* @r6, align 4
  %v1_b6ec = add i32 %v0_b6ec, 13
  %v2_b6ec = inttoptr i32 %v1_b6ec to i8*
  %v3_b6ec = load i8, i8* %v2_b6ec, align 1
  %v4_b6ec = zext i8 %v3_b6ec to i32
  store i32 %v4_b6ec, i32* %r3.global-to-local, align 4
  %v0_b6f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b6f0 = add i32 %v0_b6f0, 8
  %v2_b6f0 = inttoptr i32 %v1_b6f0 to i32*
  %v3_b6f0 = load i32, i32* %v2_b6f0, align 4
  store i32 %v3_b6f0, i32* %r1.global-to-local, align 4
  %v1_b6f4 = or i32 %v4_b6ec, 1
  store i32 %v1_b6f4, i32* %r3.global-to-local, align 4
  %v1_b6f8 = add i32 %v0_b6f0, 15
  %v2_b6f8 = inttoptr i32 %v1_b6f8 to i8*
  %v3_b6f8 = load i8, i8* %v2_b6f8, align 1
  %v4_b6f8 = zext i8 %v3_b6f8 to i32
  store i32 %v4_b6f8, i32* %ip.global-to-local, align 4
  %v1_b6fc = add i32 %v0_b6f0, 14
  %v2_b6fc = inttoptr i32 %v1_b6fc to i8*
  %v3_b6fc = load i8, i8* %v2_b6fc, align 1
  %v4_b6fc = zext i8 %v3_b6fc to i32
  store i32 %v4_b6fc, i32* %r0.global-to-local, align 4
  %v2_b700 = add i32 %v0_b6ec, 4
  %v3_b700 = inttoptr i32 %v2_b700 to i32*
  store i32 %v3_b6f0, i32* %v3_b700, align 4
  %v0_b704 = load i32, i32* %r2.global-to-local, align 4
  %v1_b704 = add i32 %v0_b704, 4
  %v2_b704 = inttoptr i32 %v1_b704 to i32*
  %v3_b704 = load i32, i32* %v2_b704, align 4
  store i32 %v3_b704, i32* %lr.global-to-local, align 4
  %v0_b708 = load i32, i32* %r3.global-to-local, align 4
  %v1_b708 = trunc i32 %v0_b708 to i8
  %v2_b708 = load i32, i32* @r6, align 4
  %v3_b708 = add i32 %v2_b708, 13
  %v4_b708 = inttoptr i32 %v3_b708 to i8*
  store i8 %v1_b708, i8* %v4_b708, align 1
  %v0_b70c = load i32, i32* @r6, align 4
  %v1_b70c = add i32 %v0_b70c, 12
  %v2_b70c = inttoptr i32 %v1_b70c to i8*
  %v3_b70c = load i8, i8* %v2_b70c, align 1
  %v4_b70c = zext i8 %v3_b70c to i32
  store i32 %v4_b70c, i32* %r2.global-to-local, align 4
  %v1_b710 = add i32 %v0_b70c, 13
  %v2_b710 = inttoptr i32 %v1_b710 to i8*
  %v3_b710 = load i8, i8* %v2_b710, align 1
  %v4_b710 = zext i8 %v3_b710 to i32
  %v0_b714 = load i32, i32* %r0.global-to-local, align 4
  %v1_b714 = load i32, i32* %ip.global-to-local, align 4
  %v4_b714 = mul i32 %v1_b714, 256
  %v5_b714 = or i32 %v4_b714, %v0_b714
  store i32 %v5_b714, i32* %r0.global-to-local, align 4
  %tmp101 = urem i8 %v3_b70c, 16
  %v1_b718 = zext i8 %tmp101 to i32
  %v3_b71c = sdiv i32 %v5_b714, 256
  store i32 %v3_b71c, i32* %r1.global-to-local, align 4
  %v1_b720 = or i32 %v1_b718, 128
  store i32 %v1_b720, i32* %r2.global-to-local, align 4
  %v1_b724 = or i32 %v4_b710, 16
  store i32 %v1_b724, i32* %r3.global-to-local, align 4
  %v1_b728 = trunc i32 %v3_b71c to i8
  %v3_b728 = add i32 %v0_b70c, 3
  %v4_b728 = inttoptr i32 %v3_b728 to i8*
  store i8 %v1_b728, i8* %v4_b728, align 1
  %v0_b72c = load i32, i32* %lr.global-to-local, align 4
  %v1_b72c = load i32, i32* @r6, align 4
  %v2_b72c = add i32 %v1_b72c, 8
  %v3_b72c = inttoptr i32 %v2_b72c to i32*
  store i32 %v0_b72c, i32* %v3_b72c, align 4
  %v0_b730 = load i32, i32* %r2.global-to-local, align 4
  %v1_b730 = trunc i32 %v0_b730 to i8
  %v2_b730 = load i32, i32* @r6, align 4
  %v3_b730 = add i32 %v2_b730, 12
  %v4_b730 = inttoptr i32 %v3_b730 to i8*
  store i8 %v1_b730, i8* %v4_b730, align 1
  %v0_b734 = load i32, i32* %r3.global-to-local, align 4
  %v1_b734 = trunc i32 %v0_b734 to i8
  %v2_b734 = load i32, i32* @r6, align 4
  %v3_b734 = add i32 %v2_b734, 13
  %v4_b734 = inttoptr i32 %v3_b734 to i8*
  store i8 %v1_b734, i8* %v4_b734, align 1
  %v0_b738 = load i32, i32* %r0.global-to-local, align 4
  %v1_b738 = trunc i32 %v0_b738 to i8
  %v2_b738 = load i32, i32* @r6, align 4
  %v3_b738 = add i32 %v2_b738, 2
  %v4_b738 = inttoptr i32 %v3_b738 to i8*
  store i8 %v1_b738, i8* %v4_b738, align 1
  %v0_b73c = call i32 @function_e7cc()
  %v1_b73c = trunc i32 %v0_b73c to i8
  store i32 %v0_b73c, i32* %r0.global-to-local, align 4
  store i32 %v1_b220, i32* %lr.global-to-local, align 4
  %v0_b744 = load i32, i32* @r6, align 4
  %v1_b744 = add i32 %v0_b744, 13
  %v2_b744 = inttoptr i32 %v1_b744 to i8*
  %v3_b744 = load i8, i8* %v2_b744, align 1
  %v4_b744 = zext i8 %v3_b744 to i32
  store i32 %v1_b748, i32* %r2.global-to-local, align 4
  %v1_b74c = and i32 %v4_b744, 223
  %v5_b750 = or i32 %v1_b74c, %v4_b750
  store i32 %v5_b750, i32* %r3.global-to-local, align 4
  %v1_b754 = trunc i32 %v5_b750 to i8
  store i8 %v1_b754, i8* %v2_b744, align 1
  store i32 %v1_b240, i32* %r1.global-to-local, align 4
  %v0_b75c = load i32, i32* @r6, align 4
  %v1_b75c = add i32 %v0_b75c, 13
  %v2_b75c = inttoptr i32 %v1_b75c to i8*
  %v3_b75c = load i8, i8* %v2_b75c, align 1
  %v4_b75c = zext i8 %v3_b75c to i32
  store i32 %v1_b760, i32* %r3.global-to-local, align 4
  %v1_b764 = and i32 %v4_b75c, 239
  %v5_b768 = or i32 %v1_b764, %v4_b768
  store i32 %v5_b768, i32* %r2.global-to-local, align 4
  %v1_b76c = trunc i32 %v5_b768 to i8
  store i8 %v1_b76c, i8* %v2_b75c, align 1
  store i32 %v1_b260, i32* %ip.global-to-local, align 4
  %v0_b774 = load i32, i32* @r6, align 4
  %v1_b774 = add i32 %v0_b774, 13
  %v2_b774 = inttoptr i32 %v1_b774 to i8*
  %v3_b774 = load i8, i8* %v2_b774, align 1
  %v4_b774 = zext i8 %v3_b774 to i32
  store i32 %v1_b778, i32* %r2.global-to-local, align 4
  %v1_b77c = and i32 %v4_b774, 247
  %v5_b780 = or i32 %v1_b77c, %v4_b780
  store i32 %v5_b780, i32* %r3.global-to-local, align 4
  %v1_b784 = trunc i32 %v5_b780 to i8
  store i8 %v1_b784, i8* %v2_b774, align 1
  %v0_b78c = load i32, i32* @r6, align 4
  %v1_b78c = add i32 %v0_b78c, 13
  %v2_b78c = inttoptr i32 %v1_b78c to i8*
  %v3_b78c = load i8, i8* %v2_b78c, align 1
  %v4_b78c = zext i8 %v3_b78c to i32
  store i32 %v1_b790, i32* %r3.global-to-local, align 4
  %v1_b794 = and i32 %v4_b78c, 251
  %v5_b798 = or i32 %v1_b794, %v4_b798
  store i32 %v5_b798, i32* %r2.global-to-local, align 4
  %v1_b79c = trunc i32 %v5_b798 to i8
  store i8 %v1_b79c, i8* %v2_b78c, align 1
  store i32 %v1_b2a0, i32* %r1.global-to-local, align 4
  %v0_b7a4 = load i32, i32* @r6, align 4
  %v1_b7a4 = add i32 %v0_b7a4, 13
  %v2_b7a4 = inttoptr i32 %v1_b7a4 to i8*
  %v3_b7a4 = load i8, i8* %v2_b7a4, align 1
  %v4_b7a4 = zext i8 %v3_b7a4 to i32
  store i32 %v1_b7a8, i32* %r2.global-to-local, align 4
  %v1_b7ac = and i32 %v4_b7a4, 253
  %v4_b7b0 = or i32 %v1_b7ac, %v3_b7b0
  store i32 %v4_b7b0, i32* %r3.global-to-local, align 4
  %v1_b7b4 = trunc i32 %v4_b7b0 to i8
  store i8 %v1_b7b4, i8* %v2_b7a4, align 1
  %v0_b7b8 = load i32, i32* @r6, align 4
  %v1_b7b8 = add i32 %v0_b7b8, 13
  %v2_b7b8 = inttoptr i32 %v1_b7b8 to i8*
  %v3_b7b8 = load i8, i8* %v2_b7b8, align 1
  %v4_b7b8 = zext i8 %v3_b7b8 to i32
  %v0_b7bc = load i32, i32* @r8, align 4
  %v1_b7bc = urem i32 %v0_b7bc, 2
  %v1_b7c0 = and i32 %v4_b7b8, 254
  store i32 %v1_b7c0, i32* %r2.global-to-local, align 4
  %v4_b7c427 = udiv i32 %v0_b73c, 256
  %v2_b7c8 = or i32 %v1_b7c0, %v1_b7bc
  store i32 %v2_b7c8, i32* %r3.global-to-local, align 4
  %v1_b7cc = trunc i32 %v4_b7c427 to i8
  %v3_b7cc = add i32 %v0_b7b8, 15
  %v4_b7cc = inttoptr i32 %v3_b7cc to i8*
  store i8 %v1_b7cc, i8* %v4_b7cc, align 1
  %v3_b7d0 = load i32, i32* @r6, align 4
  %v4_b7d0 = add i32 %v3_b7d0, 14
  %v5_b7d0 = inttoptr i32 %v4_b7d0 to i8*
  store i8 %v1_b73c, i8* %v5_b7d0, align 1
  %v0_b7d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b7d4 = trunc i32 %v0_b7d4 to i8
  %v2_b7d4 = load i32, i32* @r6, align 4
  %v3_b7d4 = add i32 %v2_b7d4, 13
  %v4_b7d4 = inttoptr i32 %v3_b7d4 to i8*
  store i8 %v1_b7d4, i8* %v4_b7d4, align 1
  %v0_b7d8 = load i32, i32* @r4, align 4
  %v1_b7d8 = add i32 %v0_b7d8, 40
  store i32 %v1_b7d8, i32* %r0.global-to-local, align 4
  %v0_b7dc = load i32, i32* @sb, align 4
  store i32 %v0_b7dc, i32* @r1, align 4
  %v1_b7e0 = inttoptr i32 %v1_b7d8 to i8*
  %v2_b7e0 = call i32 @function_e94c(i8* %v1_b7e0)
  store i32 %v2_b7e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b7e4

dec_label_pc_b7e4:                                ; preds = %dec_label_pc_b384, %bb81
  %v3_b7e4 = load i32, i32* %stack_var_-40, align 4
  %v1_b7e8 = add i32 %v3_b7e4, 1
  store i32 %v1_b7e8, i32* %r3.global-to-local, align 4
  %v1_b7ec = load i32, i32* @fp, align 4
  %v9_b7ec = icmp eq i32 %v1_b7e8, %v1_b7ec
  store i1 %v9_b7ec, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b7e8, i32* %stack_var_-40, align 4
  %v5_b7f4 = icmp slt i32 %v1_b7e8, %v1_b7ec
  br i1 %v5_b7f4, label %dec_label_pc_b374, label %dec_label_pc_b7f8

dec_label_pc_b7f8:                                ; preds = %dec_label_pc_b7e4, %.thread18
  %v0_b80012 = phi i32 [ %v0_b348, %.thread18 ], [ %v1_b7ec, %dec_label_pc_b7e4 ]
  %v0_b7f8 = load i32, i32* @sb, align 4
  %v1_b7f8 = add i32 %v0_b7f8, 40
  store i32 %v1_b7f8, i32* @sl, align 4
  %v1_b7fc = add i32 %v0_b7f8, 20
  store i32 %v1_b7fc, i32* @r7, align 4
  %v2_b84c = icmp eq i32 %v1_b2f8, 0
  %v6_b82c = inttoptr i32 %v2_b168 to i32*
  %v3_b834 = icmp eq i32 %v3_b350, 65535
  br label %dec_label_pc_b800

dec_label_pc_b800:                                ; preds = %dec_label_pc_b85c, %dec_label_pc_b7f8
  %v0_b800 = phi i32 [ %v1_b93c, %dec_label_pc_b85c ], [ %v0_b80012, %dec_label_pc_b7f8 ]
  %v2_b800 = icmp eq i32 %v0_b800, 0
  store i1 %v2_b800, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp82 = icmp slt i32 %v0_b800, 1
  br label %dec_label_pc_b808

dec_label_pc_b808:                                ; preds = %dec_label_pc_b808, %dec_label_pc_b800
  br i1 %tmp82, label %dec_label_pc_b808, label %dec_label_pc_b80c

dec_label_pc_b80c:                                ; preds = %dec_label_pc_b808
  %v0_b80c = load i32, i32* @r7, align 4
  %tmp83 = mul i32 %v0_b80c, 256
  %v1_b814 = and i32 %tmp83, 65280
  %tmp84 = udiv i32 %v0_b80c, 256
  %v4_b818 = urem i32 %tmp84, 256
  %v5_b818 = or i32 %v4_b818, %v1_b814
  store i32 %v5_b818, i32* @r8, align 4
  store i32 %v2_b168, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_b350, i32* %ip.global-to-local, align 4
  %v7_b82c = load i32, i32* %v6_b82c, align 4
  store i32 %v7_b82c, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_b834, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* @r6, align 4
  %v1_b840 = add i32 %v7_b82c, 20
  store i32 %v1_b840, i32* @r5, align 4
  br i1 %v3_b834, label %dec_label_pc_b968, label %dec_label_pc_b848

dec_label_pc_b848:                                ; preds = %dec_label_pc_b948, %dec_label_pc_b80c
  %v0_b850 = phi i32 [ %v7_b954, %dec_label_pc_b948 ], [ %v7_b82c, %dec_label_pc_b80c ]
  store i32 %v1_b2f8, i32* %lr.global-to-local, align 4
  store i1 %v2_b84c, i1* %cpsr_z.global-to-local, align 1
  %v1_b850 = add i32 %v0_b850, 40
  store i32 %v1_b850, i32* %r0.global-to-local, align 4
  %v0_b854 = load i32, i32* @sb, align 4
  store i32 %v0_b854, i32* @r1, align 4
  br i1 %v2_b84c, label %dec_label_pc_b85c, label %dec_label_pc_b98c

dec_label_pc_b85c:                                ; preds = %dec_label_pc_b848, %dec_label_pc_b968, %dec_label_pc_b98c
  %v2_b85c = phi i32 [ %v0_b850, %dec_label_pc_b848 ], [ %v0_b980, %dec_label_pc_b968 ], [ %v2_b85c.pre, %dec_label_pc_b98c ]
  %v0_b85c = load i32, i32* @r6, align 4
  %v1_b85c = trunc i32 %v0_b85c to i8
  %v3_b85c = add i32 %v2_b85c, 10
  %v4_b85c = inttoptr i32 %v3_b85c to i8*
  store i8 %v1_b85c, i8* %v4_b85c, align 1
  %v0_b860 = load i32, i32* @r6, align 4
  %v1_b860 = trunc i32 %v0_b860 to i8
  %v2_b860 = load i32, i32* @r4, align 4
  %v3_b860 = add i32 %v2_b860, 11
  %v4_b860 = inttoptr i32 %v3_b860 to i8*
  store i8 %v1_b860, i8* %v4_b860, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b868 = load i32, i32* @r4, align 4
  store i32 %v0_b868, i32* @r0, align 4
  %v2_b86c = call i32 @function_d0b8(i32 %v0_b868, i32 20)
  %v3_b86c = trunc i32 %v2_b86c to i8
  store i32 %v2_b86c, i32* %r0.global-to-local, align 4
  %v3_b870 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_b158, i32* %r2.global-to-local, align 4
  %v3_b878 = mul i32 %v3_b870, 16
  %v2_b87c = add i32 %v3_b878, %v2_b158
  store i32 %v2_b87c, i32* %r1.global-to-local, align 4
  %v1_b880 = add i32 %v2_b87c, 4
  %v2_b880 = inttoptr i32 %v1_b880 to i32*
  %v3_b880 = load i32, i32* %v2_b880, align 4
  %v3_b884 = mul i32 %v3_b880, 65536
  store i32 %v3_b884, i32* %ip.global-to-local, align 4
  %tmp85 = mul i32 %v3_b880, 256
  %v1_b88c = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v3_b880, 256
  %v4_b890 = urem i32 %tmp86, 256
  %v5_b890 = or i32 %v4_b890, %v1_b88c
  store i32 %v5_b890, i32* %r2.global-to-local, align 4
  %v1_b894 = add i32 %v3_b880, 1
  store i32 %v1_b894, i32* %r3.global-to-local, align 4
  store i32 %v1_b894, i32* %v2_b880, align 4
  %v0_b89c = load i32, i32* %r2.global-to-local, align 4
  %v1_b89c = load i32, i32* @r5, align 4
  %v2_b89c = add i32 %v1_b89c, 4
  %v3_b89c = inttoptr i32 %v2_b89c to i32*
  store i32 %v0_b89c, i32* %v3_b89c, align 4
  %v0_b8a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_b8a0 = add i32 %v0_b8a0, 8
  %v2_b8a0 = inttoptr i32 %v1_b8a0 to i32*
  %v3_b8a0 = load i32, i32* %v2_b8a0, align 4
  %tmp87 = mul i32 %v3_b8a0, 256
  %v1_b8ac = and i32 %tmp87, 65280
  %tmp88 = udiv i32 %v3_b8a0, 256
  %v4_b8b0 = urem i32 %tmp88, 256
  %v5_b8b0 = or i32 %v4_b8b0, %v1_b8ac
  store i32 %v5_b8b0, i32* %r2.global-to-local, align 4
  %v4_b8b428 = udiv i32 %v2_b86c, 256
  %v1_b8b8 = trunc i32 %v4_b8b428 to i8
  %v2_b8b8 = load i32, i32* @r4, align 4
  %v3_b8b8 = add i32 %v2_b8b8, 11
  %v4_b8b8 = inttoptr i32 %v3_b8b8 to i8*
  store i8 %v1_b8b8, i8* %v4_b8b8, align 1
  %v3_b8bc = load i32, i32* @r4, align 4
  %v4_b8bc = add i32 %v3_b8bc, 10
  %v5_b8bc = inttoptr i32 %v4_b8bc to i8*
  store i8 %v3_b86c, i8* %v5_b8bc, align 1
  %v0_b8c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b8c0 = load i32, i32* @r5, align 4
  %v2_b8c0 = add i32 %v1_b8c0, 8
  %v3_b8c0 = inttoptr i32 %v2_b8c0 to i32*
  store i32 %v0_b8c0, i32* %v3_b8c0, align 4
  %v0_b8c4 = load i32, i32* @r5, align 4
  store i32 %v0_b8c4, i32* @r1, align 4
  %v0_b8c8 = load i32, i32* @r8, align 4
  store i32 %v0_b8c8, i32* %r2.global-to-local, align 4
  %v0_b8cc = load i32, i32* @r7, align 4
  store i32 %v0_b8cc, i32* %r3.global-to-local, align 4
  %v0_b8d0 = load i32, i32* @r4, align 4
  store i32 %v0_b8d0, i32* %r0.global-to-local, align 4
  %v0_b8d4 = load i32, i32* @r6, align 4
  %v1_b8d4 = trunc i32 %v0_b8d4 to i8
  %v3_b8d4 = add i32 %v0_b8c4, 16
  %v4_b8d4 = inttoptr i32 %v3_b8d4 to i8*
  store i8 %v1_b8d4, i8* %v4_b8d4, align 1
  %v0_b8d8 = load i32, i32* @r6, align 4
  %v1_b8d8 = trunc i32 %v0_b8d8 to i8
  %v2_b8d8 = load i32, i32* @r5, align 4
  %v3_b8d8 = add i32 %v2_b8d8, 17
  %v4_b8d8 = inttoptr i32 %v3_b8d8 to i8*
  store i8 %v1_b8d8, i8* %v4_b8d8, align 1
  %v4_b8dc = call i32 @function_d114(i32 %v0_b8d0, i32 %v0_b8c4, i32 %v0_b8c8, i32 %v0_b8cc)
  %v5_b8dc = trunc i32 %v4_b8dc to i8
  store i32 %v4_b8dc, i32* %r0.global-to-local, align 4
  %v4_b8e029 = udiv i32 %v4_b8dc, 256
  %v1_b8e4 = trunc i32 %v4_b8e029 to i8
  %v2_b8e4 = load i32, i32* @r5, align 4
  %v3_b8e4 = add i32 %v2_b8e4, 17
  %v4_b8e4 = inttoptr i32 %v3_b8e4 to i8*
  store i8 %v1_b8e4, i8* %v4_b8e4, align 1
  %v3_b8e8 = load i32, i32* @r5, align 4
  %v4_b8e8 = add i32 %v3_b8e8, 16
  %v5_b8e8 = inttoptr i32 %v4_b8e8 to i8*
  store i8 %v5_b8dc, i8* %v5_b8e8, align 1
  %v3_b8ec = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b8ec, i32* %r3.global-to-local, align 4
  %v0_b8f0 = load i32, i32* @r4, align 4
  %v1_b8f0 = add i32 %v0_b8f0, 20
  %v2_b8f0 = inttoptr i32 %v1_b8f0 to i32*
  %v3_b8f0 = load i32, i32* %v2_b8f0, align 4
  %v5_b8f8 = mul i32 %v3_b8ec, 24
  %v3_b900 = udiv i32 %v3_b8f0, 65536
  store i32 %v3_b900, i32* %r2.global-to-local, align 4
  %v2_b904 = add i32 %v5_b8f8, %arg2
  store i32 %v2_b904, i32* %ip.global-to-local, align 4
  %v3_b9084 = udiv i32 %v3_b8f0, 16777216
  %v1_b90c = trunc i32 %v3_b9084 to i8
  %v3_b90c = add i32 %v2_b904, 3
  %v4_b90c = inttoptr i32 %v3_b90c to i8*
  store i8 %v1_b90c, i8* %v4_b90c, align 1
  %v0_b910 = load i32, i32* %r2.global-to-local, align 4
  %v1_b910 = trunc i32 %v0_b910 to i8
  %v2_b910 = load i32, i32* %ip.global-to-local, align 4
  %v3_b910 = add i32 %v2_b910, 2
  %v4_b910 = inttoptr i32 %v3_b910 to i8*
  store i8 %v1_b910, i8* %v4_b910, align 1
  %v0_b914 = load i32, i32* @r4, align 4
  store i32 %v0_b914, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_b308, i32* %r0.global-to-local, align 4
  %v0_b920 = load i32, i32* @sl, align 4
  store i32 %v0_b920, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_b928 = load i32, i32* %ip.global-to-local, align 4
  %v6_b930 = inttoptr i32 %v0_b914 to i32*
  %v7_b930 = call i32 @function_1347c(i32 %v3_b308, i32* %v6_b930, i32 %v0_b920, i32 16384, i32 %v0_b928, i32 16)
  %v3_b934 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b934, i32* %r3.global-to-local, align 4
  %v1_b938 = add i32 %v3_b934, 1
  store i32 %v1_b938, i32* %r0.global-to-local, align 4
  %v1_b93c = load i32, i32* @fp, align 4
  %v9_b93c = icmp eq i32 %v1_b938, %v1_b93c
  store i1 %v9_b93c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b938, i32* %stack_var_-40, align 4
  %v6_b944 = icmp slt i32 %v1_b938, %v1_b93c
  br i1 %v6_b944, label %dec_label_pc_b948, label %dec_label_pc_b800

dec_label_pc_b948:                                ; preds = %dec_label_pc_b85c
  store i32 %v2_b168, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_b350, i32* %ip.global-to-local, align 4
  %v4_b954 = mul i32 %v1_b938, 4
  %v5_b954 = add i32 %v4_b954, %v2_b168
  %v6_b954 = inttoptr i32 %v5_b954 to i32*
  %v7_b954 = load i32, i32* %v6_b954, align 4
  store i32 %v7_b954, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_b834, i1* %cpsr_z.global-to-local, align 1
  %v1_b960 = add i32 %v7_b954, 20
  store i32 %v1_b960, i32* @r5, align 4
  br i1 %v3_b834, label %dec_label_pc_b968, label %dec_label_pc_b848

dec_label_pc_b968:                                ; preds = %dec_label_pc_b948, %dec_label_pc_b80c
  %v0_b968 = call i32 @function_e7cc()
  %v1_b968 = trunc i32 %v0_b968 to i8
  store i32 %v1_b2f8, i32* %lr.global-to-local, align 4
  %v4_b970 = sdiv i32 %v0_b968, 256
  store i32 %v4_b970, i32* %r3.global-to-local, align 4
  store i1 %v2_b84c, i1* %cpsr_z.global-to-local, align 1
  %v3_b978 = load i32, i32* @r4, align 4
  %v4_b978 = add i32 %v3_b978, 4
  %v5_b978 = inttoptr i32 %v4_b978 to i8*
  store i8 %v1_b968, i8* %v5_b978, align 1
  %v0_b97c = load i32, i32* %r3.global-to-local, align 4
  %v1_b97c = trunc i32 %v0_b97c to i8
  %v2_b97c = load i32, i32* @r4, align 4
  %v3_b97c = add i32 %v2_b97c, 5
  %v4_b97c = inttoptr i32 %v3_b97c to i8*
  store i8 %v1_b97c, i8* %v4_b97c, align 1
  %v0_b980 = load i32, i32* @r4, align 4
  %v1_b980 = add i32 %v0_b980, 40
  store i32 %v1_b980, i32* %r0.global-to-local, align 4
  %v0_b984 = load i32, i32* @sb, align 4
  store i32 %v0_b984, i32* @r1, align 4
  %v0_b988 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b988, label %dec_label_pc_b85c, label %dec_label_pc_b98c

dec_label_pc_b98c:                                ; preds = %dec_label_pc_b848, %dec_label_pc_b968
  %v0_b98c = phi i32 [ %v1_b850, %dec_label_pc_b848 ], [ %v1_b980, %dec_label_pc_b968 ]
  %v1_b98c = inttoptr i32 %v0_b98c to i8*
  %v2_b98c = call i32 @function_e94c(i8* %v1_b98c)
  store i32 %v2_b98c, i32* %r0.global-to-local, align 4
  %v2_b85c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b85c

; uselistorder directives
  uselistorder i32 %v0_b980, { 1, 0 }
  uselistorder i32 %v7_b954, { 1, 2, 0 }
  uselistorder i32 %v1_b93c, { 1, 2, 0 }
  uselistorder i32 %v1_b938, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_b8dc, { 0, 2, 1 }
  uselistorder i32 %v0_b8c4, { 1, 0, 2 }
  uselistorder i32 %v3_b8a0, { 1, 0 }
  uselistorder i32 %v3_b880, { 3, 2, 0, 1 }
  uselistorder i32 %v2_b86c, { 0, 2, 1 }
  uselistorder i32 %v0_b850, { 1, 0 }
  uselistorder i32 %v0_b80c, { 1, 0 }
  uselistorder i32 %v0_b800, { 1, 0 }
  uselistorder i1 %v3_b834, { 2, 3, 1, 0 }
  uselistorder i32 %v1_b7e8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b73c, { 0, 2, 1 }
  uselistorder i32 %v3_b71c, { 1, 0 }
  uselistorder i32 %v0_b6f0, { 1, 0, 2 }
  uselistorder i32 %v3_b6e4, { 1, 0 }
  uselistorder i32 %v3_b678, { 1, 0 }
  uselistorder i32 %v0_b66c, { 1, 0 }
  uselistorder i32 %v3_b5f4, { 1, 0 }
  uselistorder i32 %v2_b5e0, { 1, 0 }
  uselistorder i32 %v3_b5c4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_b5bc, { 1, 0 }
  uselistorder i32 %v3_b598, { 1, 0, 2, 3 }
  uselistorder i32 %v3_b590, { 1, 0 }
  uselistorder i32 %v4_b578, { 1, 0 }
  uselistorder i32 %v0_b574, { 0, 2, 1 }
  uselistorder i1 %v7_b4e4, { 1, 0 }
  uselistorder i32 %v7_b4dc, { 0, 2, 1, 3 }
  uselistorder i32 %v5_b528, { 1, 0 }
  uselistorder i1 %v9_b50c, { 1, 0 }
  uselistorder i32 %v4_b520, { 1, 0 }
  uselistorder i32 %v4_b51c, { 1, 0 }
  uselistorder i32 %v8_b430, { 1, 2, 0, 3 }
  uselistorder i32 %v3_b41c, { 1, 0 }
  uselistorder i32 %v0_b40c, { 2, 0, 1, 3 }
  uselistorder i1 %v7_b394, { 1, 0 }
  uselistorder i32 %v3_b390, { 1, 2, 0, 3 }
  uselistorder i32 %v1_b7a8, { 1, 0 }
  uselistorder i32 %v1_b790, { 1, 0 }
  uselistorder i32 %v1_b778, { 1, 0 }
  uselistorder i32 %v1_b760, { 1, 0 }
  uselistorder i32 %v1_b748, { 1, 0 }
  uselistorder i32 %v5_b524, { 1, 0 }
  uselistorder i32 %v3_b47893, { 1, 0 }
  uselistorder i1 %v2_b53c, { 1, 0 }
  uselistorder i32 %v1_b538, { 1, 0 }
  uselistorder i32 %v4_b534, { 2, 0, 1 }
  uselistorder i32 %v4_b518, { 1, 0 }
  uselistorder i1 %v3_b460, { 1, 0 }
  uselistorder i32 %v8_b35c, { 2, 1, 0 }
  uselistorder i32 %v8_b358, { 1, 2, 0 }
  uselistorder i32 %v3_b350, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_b34c, { 0, 1, 3, 2 }
  uselistorder i1 %v7_b340, { 1, 0 }
  uselistorder i1 %v7_b310, { 1, 0 }
  uselistorder i32 %v3_b30c, { 2, 0, 1 }
  uselistorder i32 %v3_b308, { 5, 6, 1, 3, 4, 7, 8, 2, 0, 9 }
  uselistorder i32 %v1_b2f8, { 1, 3, 2, 0 }
  uselistorder i32 %v1_b2a0, { 1, 0 }
  uselistorder i32 %v1_b260, { 1, 0 }
  uselistorder i32 %v1_b240, { 1, 0 }
  uselistorder i32 %v1_b220, { 1, 0 }
  uselistorder i32 %v1_b1e8, { 1, 0 }
  uselistorder i32 %v2_b168, { 0, 4, 5, 2, 1, 3 }
  uselistorder i32 %v2_b158, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32 %v1_b13c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 16, 15 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 44, 43, 45, 47, 46, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 6, 5, 10, 7, 8, 11, 9, 19, 12, 13, 14, 15, 16, 17, 18, 23, 20, 21, 22, 24, 26, 25, 28, 27, 31, 29, 32, 33, 30, 34, 36, 35, 37, 38, 40, 39, 44, 41, 42, 43, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 17, 26, 18, 19, 16, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_b98c, { 1, 0 }
  uselistorder label %dec_label_pc_b85c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b7e4, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %.thread6, { 2, 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %dec_label_pc_b56c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b4a4, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_b454, { 1, 0 }
}

define i32 @function_b998(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b998:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp30 = call i8 @__decompiler_undefined_function_1()
  %tmp31 = call i8 @__decompiler_undefined_function_1()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_b99c = urem i32 %arg1, 256
  store i32 %v1_b99c, i32* @fp, align 4
  store i32 %v1_b99c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_b9b4 = urem i32 %arg3, 256
  store i32 %v1_b9b4, i32* @r4, align 4
  %v2_b9b8 = call i32 @function_137cc(i32 %v1_b99c, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_b9c4 = load i32, i32* @fp, align 4
  store i32 %v0_b9c4, i32* %r0.global-to-local, align 4
  %v2_b9c8 = call i32 @function_137cc(i32 %v0_b9c4, i32 4)
  %v0_b9cc = load i32, i32* @r5, align 4
  store i32 %v0_b9cc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b9dc = load i32, i32* @r4, align 4
  store i32 %v0_b9dc, i32* %r0.global-to-local, align 4
  %v5_b9e0 = inttoptr i32 %v0_b9cc to i32*
  %v6_b9e0 = call i32 @function_85e0(i32 %v0_b9dc, i32* %v5_b9e0, i32 2, i32 0)
  %v1_b9ec = urem i32 %v6_b9e0, 256
  store i32 %v1_b9ec, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b9f8 = load i32, i32* @r5, align 4
  store i32 %v0_b9f8, i32* %r1.global-to-local, align 4
  %v0_b9fc = load i32, i32* @r4, align 4
  store i32 %v0_b9fc, i32* %r0.global-to-local, align 4
  %v6_ba04 = inttoptr i32 %v0_b9f8 to i32*
  %v7_ba04 = call i32 @function_85e0(i32 %v0_b9fc, i32* %v6_ba04, i32 3, i32 65535)
  %v0_ba08 = load i32, i32* @r5, align 4
  store i32 %v0_ba08, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_ba04, i32* @r6, align 4
  %v0_ba18 = load i32, i32* @r4, align 4
  store i32 %v0_ba18, i32* %r0.global-to-local, align 4
  %v4_ba1c = inttoptr i32 %v0_ba08 to i32*
  %v5_ba1c = call i32 @function_85e0(i32 %v0_ba18, i32* %v4_ba1c, i32 4, i32 64)
  %v1_ba24 = urem i32 %v5_ba1c, 256
  store i32 %v1_ba24, i32* %ip.global-to-local, align 4
  %v0_ba28 = load i32, i32* @r5, align 4
  store i32 %v0_ba28, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ba34 = load i32, i32* @r4, align 4
  store i32 %v0_ba34, i32* %r0.global-to-local, align 4
  %v6_ba3c = inttoptr i32 %v0_ba28 to i32*
  %v7_ba3c = call i32 @function_85e0(i32 %v0_ba34, i32* %v6_ba3c, i32 5, i32 1)
  %v1_ba48 = urem i32 %v7_ba3c, 256
  store i32 %v1_ba48, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_ba50 = load i32, i32* @r5, align 4
  store i32 %v0_ba50, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_ba58 = load i32, i32* @r4, align 4
  store i32 %v0_ba58, i32* %r0.global-to-local, align 4
  %v5_ba60 = inttoptr i32 %v0_ba50 to i32*
  %v6_ba60 = call i32 @function_85e0(i32 %v0_ba58, i32* %v5_ba60, i32 7, i32 65535)
  %v0_ba64 = load i32, i32* @r5, align 4
  store i32 %v0_ba64, i32* %r1.global-to-local, align 4
  %v3_ba68 = mul i32 %v6_ba60, 65536
  store i32 %v3_ba68, i32* @r7, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ba74 = load i32, i32* @r4, align 4
  store i32 %v0_ba74, i32* %r0.global-to-local, align 4
  %v4_ba78 = inttoptr i32 %v0_ba64 to i32*
  %v5_ba78 = call i32 @function_85e0(i32 %v0_ba74, i32* %v4_ba78, i32 11, i32 0)
  %v1_ba80 = urem i32 %v5_ba78, 256
  store i32 %v1_ba80, i32* %ip.global-to-local, align 4
  %v0_ba84 = load i32, i32* @r5, align 4
  store i32 %v0_ba84, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ba90 = load i32, i32* @r4, align 4
  store i32 %v0_ba90, i32* %r0.global-to-local, align 4
  %v5_ba98 = inttoptr i32 %v0_ba84 to i32*
  %v6_ba98 = call i32 @function_85e0(i32 %v0_ba90, i32* %v5_ba98, i32 12, i32 1)
  %v1_baa0 = urem i32 %v6_ba98, 256
  store i32 %v1_baa0, i32* %ip.global-to-local, align 4
  %v0_baa4 = load i32, i32* @r5, align 4
  store i32 %v0_baa4, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bab0 = load i32, i32* @r4, align 4
  store i32 %v0_bab0, i32* %r0.global-to-local, align 4
  %v5_bab8 = inttoptr i32 %v0_baa4 to i32*
  %v6_bab8 = call i32 @function_85e0(i32 %v0_bab0, i32* %v5_bab8, i32 13, i32 1)
  %v1_bac0 = urem i32 %v6_bab8, 256
  store i32 %v1_bac0, i32* %ip.global-to-local, align 4
  %v0_bac4 = load i32, i32* @r5, align 4
  store i32 %v0_bac4, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bad0 = load i32, i32* @r4, align 4
  store i32 %v0_bad0, i32* %r0.global-to-local, align 4
  %v5_bad8 = inttoptr i32 %v0_bac4 to i32*
  %v6_bad8 = call i32 @function_85e0(i32 %v0_bad0, i32* %v5_bad8, i32 14, i32 0)
  %v1_bae0 = urem i32 %v6_bad8, 256
  store i32 %v1_bae0, i32* %ip.global-to-local, align 4
  %v0_bae4 = load i32, i32* @r5, align 4
  store i32 %v0_bae4, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_baf0 = load i32, i32* @r4, align 4
  store i32 %v0_baf0, i32* %r0.global-to-local, align 4
  %v5_baf8 = inttoptr i32 %v0_bae4 to i32*
  %v6_baf8 = call i32 @function_85e0(i32 %v0_baf0, i32* %v5_baf8, i32 15, i32 0)
  %v1_bb00 = urem i32 %v6_baf8, 256
  store i32 %v1_bb00, i32* %ip.global-to-local, align 4
  %v0_bb04 = load i32, i32* @r5, align 4
  store i32 %v0_bb04, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bb10 = load i32, i32* @r4, align 4
  store i32 %v0_bb10, i32* %r0.global-to-local, align 4
  %v5_bb18 = inttoptr i32 %v0_bb04 to i32*
  %v6_bb18 = call i32 @function_85e0(i32 %v0_bb10, i32* %v5_bb18, i32 16, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v6_bb18, i32* %ip.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_bb28 = load i32, i32* @r5, align 4
  store i32 %v0_bb28, i32* %r1.global-to-local, align 4
  %v0_bb2c = load i32, i32* @r4, align 4
  store i32 %v0_bb2c, i32* %r0.global-to-local, align 4
  %v1_bb30 = urem i32 %v6_bb18, 256
  store i32 %v1_bb30, i32* @r8, align 4
  %v4_bb34 = inttoptr i32 %v0_bb28 to i32*
  %v5_bb34 = call i32 @function_85e0(i32 %v0_bb2c, i32* %v4_bb34, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bb40 = load i32, i32* @r5, align 4
  store i32 %v0_bb40, i32* %r1.global-to-local, align 4
  store i32 %v5_bb34, i32* @sb, align 4
  %v0_bb48 = load i32, i32* @r4, align 4
  store i32 %v0_bb48, i32* %r0.global-to-local, align 4
  %v4_bb4c = inttoptr i32 %v0_bb40 to i32*
  %v5_bb4c = call i32 @function_85e0(i32 %v0_bb48, i32* %v4_bb4c, i32 1, i32 1)
  store i32 3, i32* %r1.global-to-local, align 4
  %v1_bb58 = urem i32 %v5_bb4c, 256
  store i32 %v1_bb58, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_bb68 = call i32 @function_134e0(i32 2, i32 3, i32 6)
  store i32 %v3_bb68, i32* %r0.global-to-local, align 4
  %v0_bb6c = load i32, i32* @r7, align 4
  %v3_bb6c = udiv i32 %v0_bb6c, 65536
  store i32 %v3_bb6c, i32* %r1.global-to-local, align 4
  %v7_bb70 = icmp eq i32 %v3_bb68, -1
  store i1 %v7_bb70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bb70, label %dec_label_pc_bdcc, label %dec_label_pc_bb80

dec_label_pc_bb80:                                ; preds = %dec_label_pc_b998
  store i32 1, i32* %stack_var_-40, align 4
  %v6_bb88 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_bb88, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_bb9c = call i32 @function_134b0(i32 %v3_bb68, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_bb9c, i32* %r0.global-to-local, align 4
  %v7_bba0 = icmp eq i32 %v6_bb9c, -1
  store i1 %v7_bba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bba0, label %dec_label_pc_bdc4, label %dec_label_pc_bba8

dec_label_pc_bba8:                                ; preds = %dec_label_pc_bb80
  %v0_bba8 = load i32, i32* @fp, align 4
  %v2_bba8 = icmp eq i32 %v0_bba8, 0
  store i1 %v2_bba8, i1* %cpsr_z.global-to-local, align 1
  %v0_bbac = load i32, i32* @r6, align 4
  %v3_bbac = mul i32 %v0_bbac, 65536
  store i32 %v3_bbac, i32* %r0.global-to-local, align 4
  %v3_bbb0 = urem i32 %v0_bbac, 65536
  store i32 %v3_bbb0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp72 = icmp slt i32 %v0_bba8, 1
  br i1 %tmp72, label %.thread18, label %dec_label_pc_bbd4.preheader

.thread18:                                        ; preds = %dec_label_pc_bba8
  store i32 0, i32* %stack_var_-40, align 4
  br label %dec_label_pc_c058

dec_label_pc_bbd4.preheader:                      ; preds = %dec_label_pc_bba8
  %v5_bbb8 = load i32, i32* @r7, align 4
  %v8_bbb8 = udiv i32 %v5_bbb8, 16777216
  %tmp73 = udiv i32 %v0_bbac, 256
  %v8_bbbc = urem i32 %tmp73, 256
  store i32 %v8_bbbc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_bcc0 = icmp ugt i32 %v0_bb6c, -65537
  %v2_bce4 = ptrtoint i32* %stack_var_-60 to i32
  %v3_bcf0 = bitcast i32* %stack_var_-60 to %sockaddr*
  %v2_bd20 = ptrtoint i32* %stack_var_-76 to i32
  %v2_bd24 = ptrtoint i32* %stack_var_-44 to i32
  %v2_bd28 = ptrtoint i32* %stack_var_-332 to i32
  %v4_bd74 = zext i8 %tmp31 to i32
  %v4_bd78 = zext i8 %tmp30 to i32
  %v4_bd84 = mul nuw nsw i32 %v4_bd78, 256
  %v4_bd94 = zext i8 %tmp to i32
  %v1_bd98 = and i32 %v4_bd94, 18
  %v2_bd9c = icmp eq i32 %v1_bd98, 18
  %v1_bcd0 = mul nuw nsw i32 %v3_bb6c, 256
  %v4_bcd4 = and i32 %v1_bcd0, 65280
  %v5_bcd4 = or i32 %v8_bbb8, %v4_bcd4
  %v3_bcd893 = udiv i32 %v4_bcd4, 256
  %v1_bcdc = trunc i32 %v3_bcd893 to i8
  %v1_bea0 = mul i32 %v0_bbac, 256
  %v4_bea8 = and i32 %v1_bea0, 65280
  %sext = mul i32 %v6_b9e0, 16777216
  %v4_beb8 = sdiv i32 %sext, 16777216
  %sext5 = mul i32 %v5_ba1c, 16777216
  %v4_bedc = sdiv i32 %sext5, 16777216
  %v5_bd84 = or i32 %v4_bd74, %v4_bd84
  %v1_bda4 = and i32 %v4_bd94, 5
  %v2_bda4 = icmp eq i32 %v1_bda4, 0
  %v1_bce0 = trunc i32 %v8_bbb8 to i8
  %v5_bea8 = or i32 %v8_bbbc, %v4_bea8
  %v1_bec8 = trunc i32 %v4_beb8 to i8
  %v1_bfa8 = urem i32 %v5_ba78, 2
  %tmp94 = sub nsw i32 0, %v1_bfa8
  %v4_bfb0 = and i32 %tmp94, 32
  %v1_bfc0 = urem i32 %v6_ba98, 2
  %tmp95 = sub nsw i32 0, %v1_bfc0
  %v4_bfc8 = and i32 %tmp95, 16
  %v1_bfd8 = urem i32 %v6_bab8, 2
  %tmp96 = sub nsw i32 0, %v1_bfd8
  %v4_bfe0 = and i32 %tmp96, 8
  %v1_bff0 = urem i32 %v6_bad8, 2
  %tmp97 = sub nsw i32 0, %v1_bff0
  %v4_bff8 = and i32 %tmp97, 4
  %v1_c008 = urem i32 %v6_baf8, 2
  %tmp98 = sub nsw i32 0, %v1_c008
  %v3_c010 = and i32 %tmp98, 2
  br label %dec_label_pc_bbd4

dec_label_pc_bbd4:                                ; preds = %dec_label_pc_c044, %dec_label_pc_bdac, %dec_label_pc_bbd4.preheader
  store i32 %v8_bbbc, i32* %r3.global-to-local, align 4
  %v0_bbe0 = load i32, i32* @sb, align 4
  %v1_bbe0 = add i32 %v0_bbe0, 40
  store i32 %v1_bbe0, i32* @sl, align 4
  br label %dec_label_pc_bbe4

dec_label_pc_bbe4:                                ; preds = %dec_label_pc_bdb8, %dec_label_pc_bbd4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_bbf0 = call i32 @function_134e0(i32 2, i32 1, i32 0)
  store i32 %v3_bbf0, i32* %r0.global-to-local, align 4
  %v7_bbf4 = icmp eq i32 %v3_bbf0, -1
  store i1 %v7_bbf4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_bbf0, i32* @r7, align 4
  br i1 %v7_bbf4, label %dec_label_pc_c044, label %dec_label_pc_bc00

dec_label_pc_bc00:                                ; preds = %dec_label_pc_bbe4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_bc08 = call i32 @function_12b2c(i32 %v3_bbf0, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_bc10 = or i32 %v2_bc08, 2048
  store i32 %v1_bc10, i32* @r2, align 4
  %v0_bc14 = load i32, i32* @r7, align 4
  store i32 %v0_bc14, i32* %r0.global-to-local, align 4
  %v2_bc18 = call i32 @function_12b2c(i32 %v0_bc14, i32 4)
  store i32 %v2_bc18, i32* %r0.global-to-local, align 4
  %v3_bc1c = load i32, i32* %stack_var_-40, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_bc2c = mul i32 %v3_bc1c, 24
  store i32 %v5_bc2c, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v2_bc3c = add i32 %v5_bc2c, %arg2
  store i32 %v2_bc3c, i32* %r2.global-to-local, align 4
  %v1_bc40 = add i32 %v2_bc3c, 20
  %v2_bc40 = inttoptr i32 %v1_bc40 to i8*
  %v3_bc40 = load i8, i8* %v2_bc40, align 1
  %v4_bc40 = zext i8 %v3_bc40 to i32
  store i32 %v4_bc40, i32* %r3.global-to-local, align 4
  %v2_bc44 = icmp ugt i8 %v3_bc40, 30
  %v7_bc44 = icmp eq i8 %v3_bc40, 31
  store i1 %v7_bc44, i1* %cpsr_z.global-to-local, align 1
  %v2_bc48 = xor i1 %v7_bc44, true
  %v3_bc48 = and i1 %v2_bc44, %v2_bc48
  %v5_bc48 = add i32 %v2_bc3c, 16
  %v6_bc48 = inttoptr i32 %v5_bc48 to i32*
  %v7_bc48 = load i32, i32* %v6_bc48, align 4
  br i1 %v3_bc48, label %dec_label_pc_bcb4, label %dec_label_pc_bc54

dec_label_pc_bc54:                                ; preds = %dec_label_pc_bc00
  store i32 %v7_bc48, i32* @r4, align 4
  %v0_bc58 = call i32 @function_e7cc()
  store i32 %v0_bc58, i32* %r0.global-to-local, align 4
  %v3_bc5c = load i32, i32* %stack_var_-40, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v5_bc68 = mul i32 %v3_bc5c, 24
  %v0_bc6c = load i32, i32* @r4, align 4
  %v2_bc70 = add i32 %v5_bc68, %arg2
  store i32 %v2_bc70, i32* %r1.global-to-local, align 4
  %v1_bc74 = and i32 %v0_bc6c, 65280
  store i32 %v1_bc74, i32* %r3.global-to-local, align 4
  %v1_bc6c = udiv i32 %v0_bc6c, 256
  %v3_bc78 = and i32 %v1_bc6c, 65280
  store i32 %v3_bc78, i32* %r2.global-to-local, align 4
  %v3_bc7c = mul i32 %v0_bc6c, 16777216
  store i32 %v3_bc7c, i32* %ip.global-to-local, align 4
  %v1_bc80 = add i32 %v2_bc70, 20
  %v2_bc80 = inttoptr i32 %v1_bc80 to i8*
  %v3_bc80 = load i8, i8* %v2_bc80, align 1
  %v4_bc80 = zext i8 %v3_bc80 to i32
  store i32 %v4_bc80, i32* %lr.global-to-local, align 4
  %v4_bc84 = mul nuw nsw i32 %v1_bc74, 256
  %v5_bc84 = or i32 %v4_bc84, %v3_bc7c
  store i32 %v5_bc84, i32* %ip.global-to-local, align 4
  %v2_bc8c = call i32 @llvm.bswap.i32(i32 %v0_bc6c)
  %v7_bc90 = lshr i32 %v0_bc58, %v4_bc80
  %v8_bc90 = add i32 %v7_bc90, %v2_bc8c
  store i32 %v8_bc90, i32* %r2.global-to-local, align 4
  %v3_bc9c = mul i32 %v8_bc90, 16777216
  %v1_bca0 = and i32 %v8_bc90, 65280
  store i32 %v1_bca0, i32* %r0.global-to-local, align 4
  %v4_bca4 = mul nuw nsw i32 %v1_bca0, 256
  %v5_bca4 = or i32 %v4_bca4, %v3_bc9c
  store i32 %v5_bca4, i32* %r1.global-to-local, align 4
  %v2_bcac = call i32 @llvm.bswap.i32(i32 %v8_bc90)
  br label %dec_label_pc_bcb4

dec_label_pc_bcb4:                                ; preds = %dec_label_pc_bc00, %dec_label_pc_bc54
  %storemerge25 = phi i32 [ %v2_bcac, %dec_label_pc_bc54 ], [ %v7_bc48, %dec_label_pc_bc00 ]
  store i32 %v3_bb6c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_bcc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_bcc0, label %dec_label_pc_bdd4, label %dec_label_pc_bcc8

dec_label_pc_bcc8:                                ; preds = %dec_label_pc_bcb4
  store i32 %v8_bbb8, i32* %ip.global-to-local, align 4
  store i32 %v5_bcd4, i32* %r3.global-to-local, align 4
  store i32 %v3_bcd893, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_bce4

dec_label_pc_bce4:                                ; preds = %dec_label_pc_bdd4, %dec_label_pc_bcc8
  %stack_var_-57.0 = phi i8 [ %v1_bddc, %dec_label_pc_bdd4 ], [ %v1_bcdc, %dec_label_pc_bcc8 ]
  %storemerge = phi i8 [ %v1_bdd4, %dec_label_pc_bdd4 ], [ %v1_bce0, %dec_label_pc_bcc8 ]
  store i32 %v2_bce4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_bcec = load i32, i32* @r7, align 4
  store i32 %v0_bcec, i32* %r0.global-to-local, align 4
  %v4_bcf0 = call i32 @function_1333c(i32 %v0_bcec, %sockaddr* nonnull %v3_bcf0, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bcf8 = call i32 @function_12ec0(i32* null)
  store i32 %v2_bcf8, i32* %r0.global-to-local, align 4
  store i32 %v2_bcf8, i32* @r4, align 4
  %v9_bd58 = icmp eq i32 %tmp32, %storemerge25
  %v4_bd7c = zext i8 %storemerge to i32
  %v4_bd80 = zext i8 %stack_var_-57.0 to i32
  %. = zext i1 %v9_bd58 to i32
  %v9_bd6c = icmp eq i1 %v9_bd58, false
  %v4_bd88 = mul nuw nsw i32 %v4_bd80, 256
  %v5_bd88 = or i32 %v4_bd88, %v4_bd7c
  %v9_bd8c = icmp eq i32 %v5_bd88, %v5_bd84
  br label %dec_label_pc_bd14

dec_label_pc_bd04:                                ; preds = %.thread23, %dec_label_pc_bd74, %dec_label_pc_bda4, %bb75
  %v2_bd04 = call i32 @function_12ec0(i32* null)
  %v0_bd08 = load i32, i32* @r4, align 4
  %v2_bd08 = sub i32 %v2_bd04, %v0_bd08
  store i32 %v2_bd08, i32* %r0.global-to-local, align 4
  %v7_bd0c = icmp eq i32 %v2_bd08, 10
  store i1 %v7_bd0c, i1* %cpsr_z.global-to-local, align 1
  %v8_bd10 = icmp sgt i32 %v2_bd08, 10
  br i1 %v8_bd10, label %dec_label_pc_bdb8, label %dec_label_pc_bd14

dec_label_pc_bd14:                                ; preds = %dec_label_pc_bd04, %dec_label_pc_bce4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-44, align 4
  store i32 %v2_bd20, i32* %lr.global-to-local, align 4
  store i32 %v2_bd24, i32* %ip.global-to-local, align 4
  store i32 %v2_bd28, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_bb68, i32* %r0.global-to-local, align 4
  %v7_bd3c = call i32 @function_1341c(i32 %v3_bb68, i32* nonnull %stack_var_-332, i32 256, i32 16384, i32 %v2_bd20, i32 %v2_bd24)
  store i32 %v7_bd3c, i32* %r2.global-to-local, align 4
  %v7_bd44 = icmp eq i32 %v7_bd3c, -1
  store i1 %v7_bd44, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_bd44, label %dec_label_pc_bdcc, label %dec_label_pc_bd50

dec_label_pc_bd50:                                ; preds = %dec_label_pc_bd14
  store i32 %tmp32, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_bd64 = icmp eq i32 %v7_bd3c, 40
  store i1 %v7_bd64, i1* %cpsr_z.global-to-local, align 1
  %tmp99 = icmp ult i32 %v7_bd3c, 41
  br i1 %tmp99, label %.thread23, label %bb75

.thread23:                                        ; preds = %dec_label_pc_bd50
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_bd04

bb75:                                             ; preds = %dec_label_pc_bd50
  store i1 %v9_bd6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bd6c, label %dec_label_pc_bd04, label %dec_label_pc_bd74

dec_label_pc_bd74:                                ; preds = %bb75
  store i32 %v4_bd78, i32* %r1.global-to-local, align 4
  store i32 %v4_bd7c, i32* %ip.global-to-local, align 4
  store i32 %v4_bd80, i32* %r2.global-to-local, align 4
  store i32 %v5_bd84, i32* %r3.global-to-local, align 4
  store i32 %v5_bd88, i32* @r5, align 4
  store i1 %v9_bd8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bd8c, label %dec_label_pc_bd94, label %dec_label_pc_bd04

dec_label_pc_bd94:                                ; preds = %dec_label_pc_bd74
  store i32 %v4_bd94, i32* %r2.global-to-local, align 4
  store i32 %v1_bd98, i32* %r3.global-to-local, align 4
  store i1 %v2_bd9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bd9c, label %dec_label_pc_bde8, label %dec_label_pc_bda4

dec_label_pc_bda4:                                ; preds = %dec_label_pc_bd94
  store i1 %v2_bda4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bda4, label %dec_label_pc_bd04, label %dec_label_pc_bdac

dec_label_pc_bdac:                                ; preds = %dec_label_pc_bda4
  %v0_bdac = load i32, i32* @r7, align 4
  store i32 %v0_bdac, i32* %r0.global-to-local, align 4
  %v1_bdb0 = call i32 @function_12bf0(i32 %v0_bdac)
  store i32 %v1_bdb0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bbd4

dec_label_pc_bdb8:                                ; preds = %dec_label_pc_bd04
  %v0_bdb8 = load i32, i32* @r7, align 4
  store i32 %v0_bdb8, i32* %r0.global-to-local, align 4
  %v1_bdbc = call i32 @function_12bf0(i32 %v0_bdb8)
  store i32 %v1_bdbc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bbe4

dec_label_pc_bdc4:                                ; preds = %dec_label_pc_bb80
  store i32 %v3_bb68, i32* %r0.global-to-local, align 4
  %v1_bdc8 = call i32 @function_12bf0(i32 %v3_bb68)
  store i32 %v1_bdc8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bdcc

dec_label_pc_bdcc:                                ; preds = %dec_label_pc_bd14, %dec_label_pc_b998, %dec_label_pc_bdc4
  %v29_bdd0 = phi i32 [ %v3_bb68, %dec_label_pc_b998 ], [ %v1_bdc8, %dec_label_pc_bdc4 ], [ 0, %dec_label_pc_bd14 ]
  ret i32 %v29_bdd0

dec_label_pc_bdd4:                                ; preds = %dec_label_pc_bcb4
  %v0_bdd4 = call i32 @function_e7cc()
  %v1_bdd4 = trunc i32 %v0_bdd4 to i8
  store i32 %v0_bdd4, i32* %r0.global-to-local, align 4
  %v4_bdd8 = sdiv i32 %v0_bdd4, 256
  store i32 %v4_bdd8, i32* %r3.global-to-local, align 4
  %v1_bddc = trunc i32 %v4_bdd8 to i8
  br label %dec_label_pc_bce4

dec_label_pc_bde8:                                ; preds = %dec_label_pc_bd94
  %v3_bde8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bde8, i32* @r4, align 4
  store i32 %v2_b9b8, i32* %r2.global-to-local, align 4
  %v3_bdf0 = mul i32 %v3_bde8, 16
  store i32 %v3_bdf0, i32* %ip.global-to-local, align 4
  %v3_bdf4 = add i32 %v3_bdf0, %v2_b9b8
  %v4_bdf4 = inttoptr i32 %v3_bdf4 to i32*
  store i32 %storemerge25, i32* %v4_bdf4, align 4
  %v0_bdf8 = load i32, i32* @r6, align 4
  %v1_bdf8 = add i32 %v0_bdf8, 4
  %v2_bdf8 = inttoptr i32 %v1_bdf8 to i32*
  %v3_bdf8 = load i32, i32* %v2_bdf8, align 4
  store i32 %v3_bdf8, i32* %r0.global-to-local, align 4
  %v1_be00 = and i32 %v3_bdf8, 65280
  store i32 %v1_be00, i32* %r1.global-to-local, align 4
  store i32 %v2_b9b8, i32* %lr.global-to-local, align 4
  %v3_be08 = mul i32 %v3_bdf8, 16777216
  %v4_be10 = mul nuw nsw i32 %v1_be00, 256
  %v5_be10 = or i32 %v4_be10, %v3_be08
  store i32 %v5_be10, i32* %r2.global-to-local, align 4
  %v1_be18 = load i32, i32* %ip.global-to-local, align 4
  %v2_be18 = add i32 %v1_be18, %v2_b9b8
  store i32 %v2_be18, i32* %ip.global-to-local, align 4
  %v2_be1c = call i32 @llvm.bswap.i32(i32 %v3_bdf8)
  store i32 %v2_be1c, i32* %r3.global-to-local, align 4
  %v2_be20 = add i32 %v2_be18, 4
  %v3_be20 = inttoptr i32 %v2_be20 to i32*
  store i32 %v2_be1c, i32* %v3_be20, align 4
  %v0_be24 = load i32, i32* @r6, align 4
  %v1_be24 = add i32 %v0_be24, 8
  %v2_be24 = inttoptr i32 %v1_be24 to i32*
  %v3_be24 = load i32, i32* %v2_be24, align 4
  store i32 %v3_be24, i32* %r0.global-to-local, align 4
  %v1_be2c = and i32 %v3_be24, 65280
  store i32 %v1_be2c, i32* %r1.global-to-local, align 4
  %v3_be30 = mul i32 %v3_be24, 16777216
  %v4_be38 = mul nuw nsw i32 %v1_be2c, 256
  %v5_be38 = or i32 %v4_be38, %v3_be30
  store i32 %v5_be38, i32* %r2.global-to-local, align 4
  %v2_be40 = call i32 @llvm.bswap.i32(i32 %v3_be24)
  store i32 %v2_be40, i32* %r3.global-to-local, align 4
  %v1_be44 = load i32, i32* %ip.global-to-local, align 4
  %v2_be44 = add i32 %v1_be44, 8
  %v3_be44 = inttoptr i32 %v2_be44 to i32*
  store i32 %v2_be40, i32* %v3_be44, align 4
  %v0_be48 = load i32, i32* @r6, align 4
  %v1_be48 = inttoptr i32 %v0_be48 to i32*
  %v2_be48 = load i32, i32* %v1_be48, align 4
  %v3_be4c = udiv i32 %v2_be48, 65536
  store i32 %v3_be4c, i32* %r2.global-to-local, align 4
  %v3_be503 = udiv i32 %v2_be48, 16777216
  store i32 %v3_be503, i32* %r1.global-to-local, align 4
  %v0_be54 = load i32, i32* @r5, align 4
  %v3_be54 = sdiv i32 %v0_be54, 256
  store i32 %v3_be54, i32* %r3.global-to-local, align 4
  %v1_be58 = trunc i32 %v3_be54 to i8
  %v2_be58 = load i32, i32* %ip.global-to-local, align 4
  %v3_be58 = add i32 %v2_be58, 15
  %v4_be58 = inttoptr i32 %v3_be58 to i8*
  store i8 %v1_be58, i8* %v4_be58, align 1
  %v0_be5c = load i32, i32* %r1.global-to-local, align 4
  %v1_be5c = trunc i32 %v0_be5c to i8
  %v2_be5c = load i32, i32* %ip.global-to-local, align 4
  %v3_be5c = add i32 %v2_be5c, 13
  %v4_be5c = inttoptr i32 %v3_be5c to i8*
  store i8 %v1_be5c, i8* %v4_be5c, align 1
  %v0_be60 = load i32, i32* %r2.global-to-local, align 4
  %v1_be60 = trunc i32 %v0_be60 to i8
  %v2_be60 = load i32, i32* %ip.global-to-local, align 4
  %v3_be60 = add i32 %v2_be60, 12
  %v4_be60 = inttoptr i32 %v3_be60 to i8*
  store i8 %v1_be60, i8* %v4_be60, align 1
  %v0_be64 = load i32, i32* @r5, align 4
  %v1_be64 = trunc i32 %v0_be64 to i8
  %v2_be64 = load i32, i32* %ip.global-to-local, align 4
  %v3_be64 = add i32 %v2_be64, 14
  %v4_be64 = inttoptr i32 %v3_be64 to i8*
  store i8 %v1_be64, i8* %v4_be64, align 1
  %v0_be68 = load i32, i32* @sl, align 4
  store i32 %v0_be68, i32* %r0.global-to-local, align 4
  %v1_be6c = call i32 @function_13678(i32 %v0_be68)
  store i32 %v1_be6c, i32* %r0.global-to-local, align 4
  store i32 %v2_b9c8, i32* %r1.global-to-local, align 4
  %v3_be74 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_be74, i32* %r2.global-to-local, align 4
  %v2_be78 = load i32, i32* @r4, align 4
  %v5_be78 = mul i32 %v2_be78, 4
  %v6_be78 = add i32 %v5_be78, %v2_b9c8
  %v7_be78 = inttoptr i32 %v6_be78 to i32*
  store i32 %v1_be6c, i32* %v7_be78, align 4
  %v0_be7c = load i32, i32* %r1.global-to-local, align 4
  %v1_be7c = load i32, i32* %r2.global-to-local, align 4
  %v4_be7c = mul i32 %v1_be7c, 4
  %v5_be7c = add i32 %v4_be7c, %v0_be7c
  %v6_be7c = inttoptr i32 %v5_be7c to i32*
  %v7_be7c = load i32, i32* %v6_be7c, align 4
  store i32 %v7_be7c, i32* @r4, align 4
  %v1_be80 = inttoptr i32 %v7_be7c to i8*
  %v2_be80 = load i8, i8* %v1_be80, align 1
  %tmp100 = urem i8 %v2_be80, 16
  %v1_be84 = zext i8 %tmp100 to i32
  %v1_be88 = or i32 %v1_be84, 64
  store i32 %v1_be88, i32* %r3.global-to-local, align 4
  %v1_be8c = trunc i32 %v1_be88 to i8
  store i8 %v1_be8c, i8* %v1_be80, align 1
  %v0_be90 = load i32, i32* @r4, align 4
  %v1_be90 = inttoptr i32 %v0_be90 to i8*
  %v2_be90 = load i8, i8* %v1_be90, align 1
  store i32 %v3_bbb0, i32* %ip.global-to-local, align 4
  %v1_be9c = and i8 %v2_be90, -16
  %v1_bea4 = or i8 %v1_be9c, 5
  store i32 %v5_bea8, i32* %r0.global-to-local, align 4
  %v0_beac = load i32, i32* @sl, align 4
  %v3_beac = mul i32 %v0_beac, 65536
  store i32 %v3_beac, i32* %r2.global-to-local, align 4
  store i32 %v1_ba48, i32* %lr.global-to-local, align 4
  store i8 %v1_bea4, i8* %v1_be90, align 1
  store i32 %v4_beb8, i32* %r1.global-to-local, align 4
  %v0_bebc = load i32, i32* %r2.global-to-local, align 4
  %v3_bebc = udiv i32 %v0_bebc, 65536
  %v1_bec0 = urem i32 %v3_bebc, 256
  store i32 %v1_bec0, i32* %r3.global-to-local, align 4
  %v3_bec4 = udiv i32 %v0_bebc, 16777216
  store i32 %v3_bec4, i32* %r2.global-to-local, align 4
  %v2_bec8 = load i32, i32* @r4, align 4
  %v3_bec8 = add i32 %v2_bec8, 1
  %v4_bec8 = inttoptr i32 %v3_bec8 to i8*
  store i8 %v1_bec8, i8* %v4_bec8, align 1
  %v0_becc = load i32, i32* %r2.global-to-local, align 4
  %v1_becc = load i32, i32* %r3.global-to-local, align 4
  %v4_becc = mul i32 %v1_becc, 256
  %v5_becc = or i32 %v4_becc, %v0_becc
  store i32 %v5_becc, i32* %r2.global-to-local, align 4
  %v1_bed0 = trunc i32 %v0_becc to i8
  %v2_bed0 = load i32, i32* @r4, align 4
  %v3_bed0 = add i32 %v2_bed0, 2
  %v4_bed0 = inttoptr i32 %v3_bed0 to i8*
  store i8 %v1_bed0, i8* %v4_bed0, align 1
  %v0_bed4 = load i32, i32* %lr.global-to-local, align 4
  %v2_bed4 = icmp eq i32 %v0_bed4, 0
  store i1 %v2_bed4, i1* %cpsr_z.global-to-local, align 1
  %v0_bed8 = load i32, i32* %r2.global-to-local, align 4
  %v3_bed8 = sdiv i32 %v0_bed8, 256
  store i32 %v3_bed8, i32* %r3.global-to-local, align 4
  store i32 %v4_bedc, i32* %r2.global-to-local, align 4
  %v1_bee0 = trunc i32 %v3_bed8 to i8
  %v2_bee0 = load i32, i32* @r4, align 4
  %v3_bee0 = add i32 %v2_bee0, 3
  %v4_bee0 = inttoptr i32 %v3_bee0 to i8*
  store i8 %v1_bee0, i8* %v4_bee0, align 1
  %v0_bee4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bee4, label %bb77, label %bb76

bb76:                                             ; preds = %dec_label_pc_bde8
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb77

bb77:                                             ; preds = %dec_label_pc_bde8, %bb76
  %v0_bee8 = load i32, i32* %r2.global-to-local, align 4
  %v1_bee8 = trunc i32 %v0_bee8 to i8
  %v2_bee8 = load i32, i32* @r4, align 4
  %v3_bee8 = add i32 %v2_bee8, 8
  %v4_bee8 = inttoptr i32 %v3_bee8 to i8*
  store i8 %v1_bee8, i8* %v4_bee8, align 1
  %v0_beec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_beec, label %.thread6, label %bb78

bb78:                                             ; preds = %bb77
  %v1_beec = load i32, i32* %r3.global-to-local, align 4
  %v2_beec = trunc i32 %v1_beec to i8
  %v3_beec = load i32, i32* @r4, align 4
  %v4_beec = add i32 %v3_beec, 6
  %v5_beec = inttoptr i32 %v4_beec to i8*
  store i8 %v2_beec, i8* %v5_beec, align 1
  %v0_bef0.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bef0.pr, label %.thread6, label %bb79

bb79:                                             ; preds = %bb78
  store i32 0, i32* %r2.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb77, %bb78, %bb79
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_bef8 = load i32, i32* @r4, align 4
  %v3_bef8 = add i32 %v2_bef8, 9
  %v4_bef8 = inttoptr i32 %v3_bef8 to i8*
  store i8 6, i8* %v4_bef8, align 1
  %v0_befc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_befc, label %bb81, label %bb80

bb80:                                             ; preds = %.thread6
  %v1_befc = load i32, i32* %r2.global-to-local, align 4
  %v2_befc = trunc i32 %v1_befc to i8
  %v3_befc = load i32, i32* @r4, align 4
  %v4_befc = add i32 %v3_befc, 7
  %v5_befc = inttoptr i32 %v4_befc to i8*
  store i8 %v2_befc, i8* %v5_befc, align 1
  br label %bb81

bb81:                                             ; preds = %.thread6, %bb80
  %v2_bf04 = load i32, i32* @global_var_1dc68.49, align 4
  store i32 %v2_bf04, i32* %r3.global-to-local, align 4
  %v0_bf08 = load i32, i32* %r0.global-to-local, align 4
  %v3_bf08 = sdiv i32 %v0_bf08, 256
  store i32 %v3_bf08, i32* %ip.global-to-local, align 4
  %v1_bf0c = load i32, i32* @r4, align 4
  %v2_bf0c = add i32 %v1_bf0c, 12
  %v3_bf0c = inttoptr i32 %v2_bf0c to i32*
  store i32 %v2_bf04, i32* %v3_bf0c, align 4
  %v0_bf10 = load i32, i32* %ip.global-to-local, align 4
  %v1_bf10 = trunc i32 %v0_bf10 to i8
  %v2_bf10 = load i32, i32* @r4, align 4
  %v3_bf10 = add i32 %v2_bf10, 5
  %v4_bf10 = inttoptr i32 %v3_bf10 to i8*
  store i8 %v1_bf10, i8* %v4_bf10, align 1
  %v3_bf14 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bf14, i32* %r2.global-to-local, align 4
  store i32 %v2_b9b8, i32* %ip.global-to-local, align 4
  %v4_bf1c = mul i32 %v3_bf14, 16
  %v5_bf1c = add i32 %v4_bf1c, %v2_b9b8
  %v6_bf1c = inttoptr i32 %v5_bf1c to i32*
  %v7_bf1c = load i32, i32* %v6_bf1c, align 4
  store i32 %v7_bf1c, i32* %r3.global-to-local, align 4
  %v0_bf20 = load i32, i32* %r0.global-to-local, align 4
  %v1_bf20 = trunc i32 %v0_bf20 to i8
  %v2_bf20 = load i32, i32* @r4, align 4
  %v3_bf20 = add i32 %v2_bf20, 4
  %v4_bf20 = inttoptr i32 %v3_bf20 to i8*
  store i8 %v1_bf20, i8* %v4_bf20, align 1
  %v0_bf24 = load i32, i32* %r3.global-to-local, align 4
  %v1_bf24 = load i32, i32* @r4, align 4
  %v2_bf24 = add i32 %v1_bf24, 16
  %v3_bf24 = inttoptr i32 %v2_bf24 to i32*
  store i32 %v0_bf24, i32* %v3_bf24, align 4
  %v0_bf28 = load i32, i32* %r2.global-to-local, align 4
  %v3_bf28 = mul i32 %v0_bf28, 16
  %v1_bf2c = load i32, i32* %ip.global-to-local, align 4
  %v2_bf2c = add i32 %v1_bf2c, %v3_bf28
  store i32 %v2_bf2c, i32* %r2.global-to-local, align 4
  %v1_bf30 = add i32 %v2_bf2c, 13
  %v2_bf30 = inttoptr i32 %v1_bf30 to i8*
  %v3_bf30 = load i8, i8* %v2_bf30, align 1
  %v4_bf30 = zext i8 %v3_bf30 to i32
  store i32 %v4_bf30, i32* %r1.global-to-local, align 4
  %v1_bf34 = add i32 %v2_bf2c, 12
  %v2_bf34 = inttoptr i32 %v1_bf34 to i8*
  %v3_bf34 = load i8, i8* %v2_bf34, align 1
  %v4_bf34 = zext i8 %v3_bf34 to i32
  %v4_bf38 = mul nuw nsw i32 %v4_bf30, 256
  %v5_bf38 = or i32 %v4_bf34, %v4_bf38
  store i32 %v5_bf38, i32* %r3.global-to-local, align 4
  %v2_bf3c = load i32, i32* @r4, align 4
  %v3_bf3c = add i32 %v2_bf3c, 20
  %v4_bf3c = inttoptr i32 %v3_bf3c to i8*
  store i8 %v3_bf34, i8* %v4_bf3c, align 1
  %v0_bf40 = load i32, i32* @r4, align 4
  %v1_bf40 = add i32 %v0_bf40, 20
  store i32 %v1_bf40, i32* @r6, align 4
  %v0_bf44 = load i32, i32* %r3.global-to-local, align 4
  %v3_bf44 = sdiv i32 %v0_bf44, 256
  store i32 %v3_bf44, i32* %r3.global-to-local, align 4
  %v1_bf48 = trunc i32 %v3_bf44 to i8
  %v3_bf48 = add i32 %v0_bf40, 21
  %v4_bf48 = inttoptr i32 %v3_bf48 to i8*
  store i8 %v1_bf48, i8* %v4_bf48, align 1
  %v0_bf4c = load i32, i32* @r6, align 4
  %v1_bf4c = add i32 %v0_bf4c, 13
  %v2_bf4c = inttoptr i32 %v1_bf4c to i8*
  %v3_bf4c = load i8, i8* %v2_bf4c, align 1
  %v4_bf4c = zext i8 %v3_bf4c to i32
  store i32 %v4_bf4c, i32* %r3.global-to-local, align 4
  %v0_bf50 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf50 = add i32 %v0_bf50, 8
  %v2_bf50 = inttoptr i32 %v1_bf50 to i32*
  %v3_bf50 = load i32, i32* %v2_bf50, align 4
  store i32 %v3_bf50, i32* %r1.global-to-local, align 4
  %v1_bf54 = or i32 %v4_bf4c, 1
  store i32 %v1_bf54, i32* %r3.global-to-local, align 4
  %v1_bf58 = add i32 %v0_bf50, 15
  %v2_bf58 = inttoptr i32 %v1_bf58 to i8*
  %v3_bf58 = load i8, i8* %v2_bf58, align 1
  %v4_bf58 = zext i8 %v3_bf58 to i32
  store i32 %v4_bf58, i32* %ip.global-to-local, align 4
  %v1_bf5c = add i32 %v0_bf50, 14
  %v2_bf5c = inttoptr i32 %v1_bf5c to i8*
  %v3_bf5c = load i8, i8* %v2_bf5c, align 1
  %v4_bf5c = zext i8 %v3_bf5c to i32
  store i32 %v4_bf5c, i32* %r0.global-to-local, align 4
  %v2_bf60 = add i32 %v0_bf4c, 4
  %v3_bf60 = inttoptr i32 %v2_bf60 to i32*
  store i32 %v3_bf50, i32* %v3_bf60, align 4
  %v0_bf64 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf64 = add i32 %v0_bf64, 4
  %v2_bf64 = inttoptr i32 %v1_bf64 to i32*
  %v3_bf64 = load i32, i32* %v2_bf64, align 4
  store i32 %v3_bf64, i32* %lr.global-to-local, align 4
  %v0_bf68 = load i32, i32* %r3.global-to-local, align 4
  %v1_bf68 = trunc i32 %v0_bf68 to i8
  %v2_bf68 = load i32, i32* @r6, align 4
  %v3_bf68 = add i32 %v2_bf68, 13
  %v4_bf68 = inttoptr i32 %v3_bf68 to i8*
  store i8 %v1_bf68, i8* %v4_bf68, align 1
  %v0_bf6c = load i32, i32* @r6, align 4
  %v1_bf6c = add i32 %v0_bf6c, 12
  %v2_bf6c = inttoptr i32 %v1_bf6c to i8*
  %v3_bf6c = load i8, i8* %v2_bf6c, align 1
  %v4_bf6c = zext i8 %v3_bf6c to i32
  store i32 %v4_bf6c, i32* %r2.global-to-local, align 4
  %v1_bf70 = add i32 %v0_bf6c, 13
  %v2_bf70 = inttoptr i32 %v1_bf70 to i8*
  %v3_bf70 = load i8, i8* %v2_bf70, align 1
  %v4_bf70 = zext i8 %v3_bf70 to i32
  %v0_bf74 = load i32, i32* %r0.global-to-local, align 4
  %v1_bf74 = load i32, i32* %ip.global-to-local, align 4
  %v4_bf74 = mul i32 %v1_bf74, 256
  %v5_bf74 = or i32 %v4_bf74, %v0_bf74
  store i32 %v5_bf74, i32* %r0.global-to-local, align 4
  %tmp101 = urem i8 %v3_bf6c, 16
  %v1_bf78 = zext i8 %tmp101 to i32
  %v3_bf7c = sdiv i32 %v5_bf74, 256
  store i32 %v3_bf7c, i32* %r1.global-to-local, align 4
  %v1_bf80 = or i32 %v1_bf78, 128
  store i32 %v1_bf80, i32* %r2.global-to-local, align 4
  %v1_bf84 = or i32 %v4_bf70, 16
  store i32 %v1_bf84, i32* %r3.global-to-local, align 4
  %v1_bf88 = trunc i32 %v3_bf7c to i8
  %v3_bf88 = add i32 %v0_bf6c, 3
  %v4_bf88 = inttoptr i32 %v3_bf88 to i8*
  store i8 %v1_bf88, i8* %v4_bf88, align 1
  %v0_bf8c = load i32, i32* %lr.global-to-local, align 4
  %v1_bf8c = load i32, i32* @r6, align 4
  %v2_bf8c = add i32 %v1_bf8c, 8
  %v3_bf8c = inttoptr i32 %v2_bf8c to i32*
  store i32 %v0_bf8c, i32* %v3_bf8c, align 4
  %v0_bf90 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf90 = trunc i32 %v0_bf90 to i8
  %v2_bf90 = load i32, i32* @r6, align 4
  %v3_bf90 = add i32 %v2_bf90, 12
  %v4_bf90 = inttoptr i32 %v3_bf90 to i8*
  store i8 %v1_bf90, i8* %v4_bf90, align 1
  %v0_bf94 = load i32, i32* %r3.global-to-local, align 4
  %v1_bf94 = trunc i32 %v0_bf94 to i8
  %v2_bf94 = load i32, i32* @r6, align 4
  %v3_bf94 = add i32 %v2_bf94, 13
  %v4_bf94 = inttoptr i32 %v3_bf94 to i8*
  store i8 %v1_bf94, i8* %v4_bf94, align 1
  %v0_bf98 = load i32, i32* %r0.global-to-local, align 4
  %v1_bf98 = trunc i32 %v0_bf98 to i8
  %v2_bf98 = load i32, i32* @r6, align 4
  %v3_bf98 = add i32 %v2_bf98, 2
  %v4_bf98 = inttoptr i32 %v3_bf98 to i8*
  store i8 %v1_bf98, i8* %v4_bf98, align 1
  %v0_bf9c = call i32 @function_e7cc()
  %v1_bf9c = trunc i32 %v0_bf9c to i8
  store i32 %v0_bf9c, i32* %r0.global-to-local, align 4
  store i32 %v1_ba80, i32* %lr.global-to-local, align 4
  %v0_bfa4 = load i32, i32* @r6, align 4
  %v1_bfa4 = add i32 %v0_bfa4, 13
  %v2_bfa4 = inttoptr i32 %v1_bfa4 to i8*
  %v3_bfa4 = load i8, i8* %v2_bfa4, align 1
  %v4_bfa4 = zext i8 %v3_bfa4 to i32
  store i32 %v1_bfa8, i32* %r2.global-to-local, align 4
  %v1_bfac = and i32 %v4_bfa4, 223
  %v5_bfb0 = or i32 %v1_bfac, %v4_bfb0
  store i32 %v5_bfb0, i32* %r3.global-to-local, align 4
  %v1_bfb4 = trunc i32 %v5_bfb0 to i8
  store i8 %v1_bfb4, i8* %v2_bfa4, align 1
  store i32 %v1_baa0, i32* %r1.global-to-local, align 4
  %v0_bfbc = load i32, i32* @r6, align 4
  %v1_bfbc = add i32 %v0_bfbc, 13
  %v2_bfbc = inttoptr i32 %v1_bfbc to i8*
  %v3_bfbc = load i8, i8* %v2_bfbc, align 1
  %v4_bfbc = zext i8 %v3_bfbc to i32
  store i32 %v1_bfc0, i32* %r3.global-to-local, align 4
  %v1_bfc4 = and i32 %v4_bfbc, 239
  %v5_bfc8 = or i32 %v1_bfc4, %v4_bfc8
  store i32 %v5_bfc8, i32* %r2.global-to-local, align 4
  %v1_bfcc = trunc i32 %v5_bfc8 to i8
  store i8 %v1_bfcc, i8* %v2_bfbc, align 1
  store i32 %v1_bac0, i32* %ip.global-to-local, align 4
  %v0_bfd4 = load i32, i32* @r6, align 4
  %v1_bfd4 = add i32 %v0_bfd4, 13
  %v2_bfd4 = inttoptr i32 %v1_bfd4 to i8*
  %v3_bfd4 = load i8, i8* %v2_bfd4, align 1
  %v4_bfd4 = zext i8 %v3_bfd4 to i32
  store i32 %v1_bfd8, i32* %r2.global-to-local, align 4
  %v1_bfdc = and i32 %v4_bfd4, 247
  %v5_bfe0 = or i32 %v1_bfdc, %v4_bfe0
  store i32 %v5_bfe0, i32* %r3.global-to-local, align 4
  %v1_bfe4 = trunc i32 %v5_bfe0 to i8
  store i8 %v1_bfe4, i8* %v2_bfd4, align 1
  %v0_bfec = load i32, i32* @r6, align 4
  %v1_bfec = add i32 %v0_bfec, 13
  %v2_bfec = inttoptr i32 %v1_bfec to i8*
  %v3_bfec = load i8, i8* %v2_bfec, align 1
  %v4_bfec = zext i8 %v3_bfec to i32
  store i32 %v1_bff0, i32* %r3.global-to-local, align 4
  %v1_bff4 = and i32 %v4_bfec, 251
  %v5_bff8 = or i32 %v1_bff4, %v4_bff8
  store i32 %v5_bff8, i32* %r2.global-to-local, align 4
  %v1_bffc = trunc i32 %v5_bff8 to i8
  store i8 %v1_bffc, i8* %v2_bfec, align 1
  store i32 %v1_bb00, i32* %r1.global-to-local, align 4
  %v0_c004 = load i32, i32* @r6, align 4
  %v1_c004 = add i32 %v0_c004, 13
  %v2_c004 = inttoptr i32 %v1_c004 to i8*
  %v3_c004 = load i8, i8* %v2_c004, align 1
  %v4_c004 = zext i8 %v3_c004 to i32
  store i32 %v1_c008, i32* %r2.global-to-local, align 4
  %v1_c00c = and i32 %v4_c004, 253
  %v4_c010 = or i32 %v1_c00c, %v3_c010
  store i32 %v4_c010, i32* %r3.global-to-local, align 4
  %v1_c014 = trunc i32 %v4_c010 to i8
  store i8 %v1_c014, i8* %v2_c004, align 1
  %v0_c018 = load i32, i32* @r6, align 4
  %v1_c018 = add i32 %v0_c018, 13
  %v2_c018 = inttoptr i32 %v1_c018 to i8*
  %v3_c018 = load i8, i8* %v2_c018, align 1
  %v4_c018 = zext i8 %v3_c018 to i32
  %v0_c01c = load i32, i32* @r8, align 4
  %v1_c01c = urem i32 %v0_c01c, 2
  %v1_c020 = and i32 %v4_c018, 254
  store i32 %v1_c020, i32* %r2.global-to-local, align 4
  %v4_c02427 = udiv i32 %v0_bf9c, 256
  %v2_c028 = or i32 %v1_c020, %v1_c01c
  store i32 %v2_c028, i32* %r3.global-to-local, align 4
  %v1_c02c = trunc i32 %v4_c02427 to i8
  %v3_c02c = add i32 %v0_c018, 15
  %v4_c02c = inttoptr i32 %v3_c02c to i8*
  store i8 %v1_c02c, i8* %v4_c02c, align 1
  %v3_c030 = load i32, i32* @r6, align 4
  %v4_c030 = add i32 %v3_c030, 14
  %v5_c030 = inttoptr i32 %v4_c030 to i8*
  store i8 %v1_bf9c, i8* %v5_c030, align 1
  %v0_c034 = load i32, i32* %r3.global-to-local, align 4
  %v1_c034 = trunc i32 %v0_c034 to i8
  %v2_c034 = load i32, i32* @r6, align 4
  %v3_c034 = add i32 %v2_c034, 13
  %v4_c034 = inttoptr i32 %v3_c034 to i8*
  store i8 %v1_c034, i8* %v4_c034, align 1
  %v0_c038 = load i32, i32* @r4, align 4
  %v1_c038 = add i32 %v0_c038, 40
  store i32 %v1_c038, i32* %r0.global-to-local, align 4
  %v0_c03c = load i32, i32* @sb, align 4
  store i32 %v0_c03c, i32* @r1, align 4
  %v1_c040 = inttoptr i32 %v1_c038 to i8*
  %v2_c040 = call i32 @function_e94c(i8* %v1_c040)
  store i32 %v2_c040, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c044

dec_label_pc_c044:                                ; preds = %dec_label_pc_bbe4, %bb81
  %v3_c044 = load i32, i32* %stack_var_-40, align 4
  %v1_c048 = add i32 %v3_c044, 1
  store i32 %v1_c048, i32* %r3.global-to-local, align 4
  %v1_c04c = load i32, i32* @fp, align 4
  %v9_c04c = icmp eq i32 %v1_c048, %v1_c04c
  store i1 %v9_c04c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c048, i32* %stack_var_-40, align 4
  %v5_c054 = icmp slt i32 %v1_c048, %v1_c04c
  br i1 %v5_c054, label %dec_label_pc_bbd4, label %dec_label_pc_c058

dec_label_pc_c058:                                ; preds = %dec_label_pc_c044, %.thread18
  %v0_c06012 = phi i32 [ %v0_bba8, %.thread18 ], [ %v1_c04c, %dec_label_pc_c044 ]
  %v0_c058 = load i32, i32* @sb, align 4
  %v1_c058 = add i32 %v0_c058, 40
  store i32 %v1_c058, i32* @sl, align 4
  %v1_c05c = add i32 %v0_c058, 20
  store i32 %v1_c05c, i32* @r7, align 4
  %v2_c0ac = icmp eq i32 %v1_bb58, 0
  %v6_c08c = inttoptr i32 %v2_b9c8 to i32*
  %v3_c094 = icmp eq i32 %v3_bbb0, 65535
  br label %dec_label_pc_c060

dec_label_pc_c060:                                ; preds = %dec_label_pc_c0bc, %dec_label_pc_c058
  %v0_c060 = phi i32 [ %v1_c19c, %dec_label_pc_c0bc ], [ %v0_c06012, %dec_label_pc_c058 ]
  %v2_c060 = icmp eq i32 %v0_c060, 0
  store i1 %v2_c060, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp82 = icmp slt i32 %v0_c060, 1
  br label %dec_label_pc_c068

dec_label_pc_c068:                                ; preds = %dec_label_pc_c068, %dec_label_pc_c060
  br i1 %tmp82, label %dec_label_pc_c068, label %dec_label_pc_c06c

dec_label_pc_c06c:                                ; preds = %dec_label_pc_c068
  %v0_c06c = load i32, i32* @r7, align 4
  %tmp83 = mul i32 %v0_c06c, 256
  %v1_c074 = and i32 %tmp83, 65280
  %tmp84 = udiv i32 %v0_c06c, 256
  %v4_c078 = urem i32 %tmp84, 256
  %v5_c078 = or i32 %v4_c078, %v1_c074
  store i32 %v5_c078, i32* @r8, align 4
  store i32 %v2_b9c8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_bbb0, i32* %ip.global-to-local, align 4
  %v7_c08c = load i32, i32* %v6_c08c, align 4
  store i32 %v7_c08c, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_c094, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* @r6, align 4
  %v1_c0a0 = add i32 %v7_c08c, 20
  store i32 %v1_c0a0, i32* @r5, align 4
  br i1 %v3_c094, label %dec_label_pc_c1c8, label %dec_label_pc_c0a8

dec_label_pc_c0a8:                                ; preds = %dec_label_pc_c1a8, %dec_label_pc_c06c
  %v0_c0b0 = phi i32 [ %v7_c1b4, %dec_label_pc_c1a8 ], [ %v7_c08c, %dec_label_pc_c06c ]
  store i32 %v1_bb58, i32* %lr.global-to-local, align 4
  store i1 %v2_c0ac, i1* %cpsr_z.global-to-local, align 1
  %v1_c0b0 = add i32 %v0_c0b0, 40
  store i32 %v1_c0b0, i32* %r0.global-to-local, align 4
  %v0_c0b4 = load i32, i32* @sb, align 4
  store i32 %v0_c0b4, i32* @r1, align 4
  br i1 %v2_c0ac, label %dec_label_pc_c0bc, label %dec_label_pc_c1ec

dec_label_pc_c0bc:                                ; preds = %dec_label_pc_c0a8, %dec_label_pc_c1c8, %dec_label_pc_c1ec
  %v2_c0bc = phi i32 [ %v0_c0b0, %dec_label_pc_c0a8 ], [ %v0_c1e0, %dec_label_pc_c1c8 ], [ %v2_c0bc.pre, %dec_label_pc_c1ec ]
  %v0_c0bc = load i32, i32* @r6, align 4
  %v1_c0bc = trunc i32 %v0_c0bc to i8
  %v3_c0bc = add i32 %v2_c0bc, 10
  %v4_c0bc = inttoptr i32 %v3_c0bc to i8*
  store i8 %v1_c0bc, i8* %v4_c0bc, align 1
  %v0_c0c0 = load i32, i32* @r6, align 4
  %v1_c0c0 = trunc i32 %v0_c0c0 to i8
  %v2_c0c0 = load i32, i32* @r4, align 4
  %v3_c0c0 = add i32 %v2_c0c0, 11
  %v4_c0c0 = inttoptr i32 %v3_c0c0 to i8*
  store i8 %v1_c0c0, i8* %v4_c0c0, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c0c8 = load i32, i32* @r4, align 4
  store i32 %v0_c0c8, i32* @r0, align 4
  %v2_c0cc = call i32 @function_d0b8(i32 %v0_c0c8, i32 20)
  %v3_c0cc = trunc i32 %v2_c0cc to i8
  store i32 %v2_c0cc, i32* %r0.global-to-local, align 4
  %v3_c0d0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_b9b8, i32* %r2.global-to-local, align 4
  %v3_c0d8 = mul i32 %v3_c0d0, 16
  %v2_c0dc = add i32 %v3_c0d8, %v2_b9b8
  store i32 %v2_c0dc, i32* %r1.global-to-local, align 4
  %v1_c0e0 = add i32 %v2_c0dc, 4
  %v2_c0e0 = inttoptr i32 %v1_c0e0 to i32*
  %v3_c0e0 = load i32, i32* %v2_c0e0, align 4
  %v3_c0e4 = mul i32 %v3_c0e0, 65536
  store i32 %v3_c0e4, i32* %ip.global-to-local, align 4
  %tmp85 = mul i32 %v3_c0e0, 256
  %v1_c0ec = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v3_c0e0, 256
  %v4_c0f0 = urem i32 %tmp86, 256
  %v5_c0f0 = or i32 %v4_c0f0, %v1_c0ec
  store i32 %v5_c0f0, i32* %r2.global-to-local, align 4
  %v1_c0f4 = add i32 %v3_c0e0, 1
  store i32 %v1_c0f4, i32* %r3.global-to-local, align 4
  store i32 %v1_c0f4, i32* %v2_c0e0, align 4
  %v0_c0fc = load i32, i32* %r2.global-to-local, align 4
  %v1_c0fc = load i32, i32* @r5, align 4
  %v2_c0fc = add i32 %v1_c0fc, 4
  %v3_c0fc = inttoptr i32 %v2_c0fc to i32*
  store i32 %v0_c0fc, i32* %v3_c0fc, align 4
  %v0_c100 = load i32, i32* %r1.global-to-local, align 4
  %v1_c100 = add i32 %v0_c100, 8
  %v2_c100 = inttoptr i32 %v1_c100 to i32*
  %v3_c100 = load i32, i32* %v2_c100, align 4
  %tmp87 = mul i32 %v3_c100, 256
  %v1_c10c = and i32 %tmp87, 65280
  %tmp88 = udiv i32 %v3_c100, 256
  %v4_c110 = urem i32 %tmp88, 256
  %v5_c110 = or i32 %v4_c110, %v1_c10c
  store i32 %v5_c110, i32* %r2.global-to-local, align 4
  %v4_c11428 = udiv i32 %v2_c0cc, 256
  %v1_c118 = trunc i32 %v4_c11428 to i8
  %v2_c118 = load i32, i32* @r4, align 4
  %v3_c118 = add i32 %v2_c118, 11
  %v4_c118 = inttoptr i32 %v3_c118 to i8*
  store i8 %v1_c118, i8* %v4_c118, align 1
  %v3_c11c = load i32, i32* @r4, align 4
  %v4_c11c = add i32 %v3_c11c, 10
  %v5_c11c = inttoptr i32 %v4_c11c to i8*
  store i8 %v3_c0cc, i8* %v5_c11c, align 1
  %v0_c120 = load i32, i32* %r2.global-to-local, align 4
  %v1_c120 = load i32, i32* @r5, align 4
  %v2_c120 = add i32 %v1_c120, 8
  %v3_c120 = inttoptr i32 %v2_c120 to i32*
  store i32 %v0_c120, i32* %v3_c120, align 4
  %v0_c124 = load i32, i32* @r5, align 4
  store i32 %v0_c124, i32* @r1, align 4
  %v0_c128 = load i32, i32* @r8, align 4
  store i32 %v0_c128, i32* %r2.global-to-local, align 4
  %v0_c12c = load i32, i32* @r7, align 4
  store i32 %v0_c12c, i32* %r3.global-to-local, align 4
  %v0_c130 = load i32, i32* @r4, align 4
  store i32 %v0_c130, i32* %r0.global-to-local, align 4
  %v0_c134 = load i32, i32* @r6, align 4
  %v1_c134 = trunc i32 %v0_c134 to i8
  %v3_c134 = add i32 %v0_c124, 16
  %v4_c134 = inttoptr i32 %v3_c134 to i8*
  store i8 %v1_c134, i8* %v4_c134, align 1
  %v0_c138 = load i32, i32* @r6, align 4
  %v1_c138 = trunc i32 %v0_c138 to i8
  %v2_c138 = load i32, i32* @r5, align 4
  %v3_c138 = add i32 %v2_c138, 17
  %v4_c138 = inttoptr i32 %v3_c138 to i8*
  store i8 %v1_c138, i8* %v4_c138, align 1
  %v4_c13c = call i32 @function_d114(i32 %v0_c130, i32 %v0_c124, i32 %v0_c128, i32 %v0_c12c)
  %v5_c13c = trunc i32 %v4_c13c to i8
  store i32 %v4_c13c, i32* %r0.global-to-local, align 4
  %v4_c14029 = udiv i32 %v4_c13c, 256
  %v1_c144 = trunc i32 %v4_c14029 to i8
  %v2_c144 = load i32, i32* @r5, align 4
  %v3_c144 = add i32 %v2_c144, 17
  %v4_c144 = inttoptr i32 %v3_c144 to i8*
  store i8 %v1_c144, i8* %v4_c144, align 1
  %v3_c148 = load i32, i32* @r5, align 4
  %v4_c148 = add i32 %v3_c148, 16
  %v5_c148 = inttoptr i32 %v4_c148 to i8*
  store i8 %v5_c13c, i8* %v5_c148, align 1
  %v3_c14c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c14c, i32* %r3.global-to-local, align 4
  %v0_c150 = load i32, i32* @r4, align 4
  %v1_c150 = add i32 %v0_c150, 20
  %v2_c150 = inttoptr i32 %v1_c150 to i32*
  %v3_c150 = load i32, i32* %v2_c150, align 4
  %v5_c158 = mul i32 %v3_c14c, 24
  %v3_c160 = udiv i32 %v3_c150, 65536
  store i32 %v3_c160, i32* %r2.global-to-local, align 4
  %v2_c164 = add i32 %v5_c158, %arg2
  store i32 %v2_c164, i32* %ip.global-to-local, align 4
  %v3_c1684 = udiv i32 %v3_c150, 16777216
  %v1_c16c = trunc i32 %v3_c1684 to i8
  %v3_c16c = add i32 %v2_c164, 3
  %v4_c16c = inttoptr i32 %v3_c16c to i8*
  store i8 %v1_c16c, i8* %v4_c16c, align 1
  %v0_c170 = load i32, i32* %r2.global-to-local, align 4
  %v1_c170 = trunc i32 %v0_c170 to i8
  %v2_c170 = load i32, i32* %ip.global-to-local, align 4
  %v3_c170 = add i32 %v2_c170, 2
  %v4_c170 = inttoptr i32 %v3_c170 to i8*
  store i8 %v1_c170, i8* %v4_c170, align 1
  %v0_c174 = load i32, i32* @r4, align 4
  store i32 %v0_c174, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_bb68, i32* %r0.global-to-local, align 4
  %v0_c180 = load i32, i32* @sl, align 4
  store i32 %v0_c180, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_c188 = load i32, i32* %ip.global-to-local, align 4
  %v6_c190 = inttoptr i32 %v0_c174 to i32*
  %v7_c190 = call i32 @function_1347c(i32 %v3_bb68, i32* %v6_c190, i32 %v0_c180, i32 16384, i32 %v0_c188, i32 16)
  %v3_c194 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c194, i32* %r3.global-to-local, align 4
  %v1_c198 = add i32 %v3_c194, 1
  store i32 %v1_c198, i32* %r0.global-to-local, align 4
  %v1_c19c = load i32, i32* @fp, align 4
  %v9_c19c = icmp eq i32 %v1_c198, %v1_c19c
  store i1 %v9_c19c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c198, i32* %stack_var_-40, align 4
  %v6_c1a4 = icmp slt i32 %v1_c198, %v1_c19c
  br i1 %v6_c1a4, label %dec_label_pc_c1a8, label %dec_label_pc_c060

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c0bc
  store i32 %v2_b9c8, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_bbb0, i32* %ip.global-to-local, align 4
  %v4_c1b4 = mul i32 %v1_c198, 4
  %v5_c1b4 = add i32 %v4_c1b4, %v2_b9c8
  %v6_c1b4 = inttoptr i32 %v5_c1b4 to i32*
  %v7_c1b4 = load i32, i32* %v6_c1b4, align 4
  store i32 %v7_c1b4, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_c094, i1* %cpsr_z.global-to-local, align 1
  %v1_c1c0 = add i32 %v7_c1b4, 20
  store i32 %v1_c1c0, i32* @r5, align 4
  br i1 %v3_c094, label %dec_label_pc_c1c8, label %dec_label_pc_c0a8

dec_label_pc_c1c8:                                ; preds = %dec_label_pc_c1a8, %dec_label_pc_c06c
  %v0_c1c8 = call i32 @function_e7cc()
  %v1_c1c8 = trunc i32 %v0_c1c8 to i8
  store i32 %v1_bb58, i32* %lr.global-to-local, align 4
  %v4_c1d0 = sdiv i32 %v0_c1c8, 256
  store i32 %v4_c1d0, i32* %r3.global-to-local, align 4
  store i1 %v2_c0ac, i1* %cpsr_z.global-to-local, align 1
  %v3_c1d8 = load i32, i32* @r4, align 4
  %v4_c1d8 = add i32 %v3_c1d8, 4
  %v5_c1d8 = inttoptr i32 %v4_c1d8 to i8*
  store i8 %v1_c1c8, i8* %v5_c1d8, align 1
  %v0_c1dc = load i32, i32* %r3.global-to-local, align 4
  %v1_c1dc = trunc i32 %v0_c1dc to i8
  %v2_c1dc = load i32, i32* @r4, align 4
  %v3_c1dc = add i32 %v2_c1dc, 5
  %v4_c1dc = inttoptr i32 %v3_c1dc to i8*
  store i8 %v1_c1dc, i8* %v4_c1dc, align 1
  %v0_c1e0 = load i32, i32* @r4, align 4
  %v1_c1e0 = add i32 %v0_c1e0, 40
  store i32 %v1_c1e0, i32* %r0.global-to-local, align 4
  %v0_c1e4 = load i32, i32* @sb, align 4
  store i32 %v0_c1e4, i32* @r1, align 4
  %v0_c1e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c1e8, label %dec_label_pc_c0bc, label %dec_label_pc_c1ec

dec_label_pc_c1ec:                                ; preds = %dec_label_pc_c0a8, %dec_label_pc_c1c8
  %v0_c1ec = phi i32 [ %v1_c0b0, %dec_label_pc_c0a8 ], [ %v1_c1e0, %dec_label_pc_c1c8 ]
  %v1_c1ec = inttoptr i32 %v0_c1ec to i8*
  %v2_c1ec = call i32 @function_e94c(i8* %v1_c1ec)
  store i32 %v2_c1ec, i32* %r0.global-to-local, align 4
  %v2_c0bc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0bc

; uselistorder directives
  uselistorder i32 %v0_c1e0, { 1, 0 }
  uselistorder i32 %v7_c1b4, { 1, 2, 0 }
  uselistorder i32 %v1_c19c, { 1, 2, 0 }
  uselistorder i32 %v1_c198, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_c13c, { 0, 2, 1 }
  uselistorder i32 %v0_c124, { 1, 0, 2 }
  uselistorder i32 %v3_c100, { 1, 0 }
  uselistorder i32 %v3_c0e0, { 3, 2, 0, 1 }
  uselistorder i32 %v2_c0cc, { 0, 2, 1 }
  uselistorder i32 %v0_c0b0, { 1, 0 }
  uselistorder i32 %v0_c06c, { 1, 0 }
  uselistorder i32 %v0_c060, { 1, 0 }
  uselistorder i1 %v3_c094, { 2, 3, 1, 0 }
  uselistorder i32 %v1_c048, { 1, 0, 2, 3 }
  uselistorder i32 %v0_bf9c, { 0, 2, 1 }
  uselistorder i32 %v3_bf7c, { 1, 0 }
  uselistorder i32 %v0_bf50, { 1, 0, 2 }
  uselistorder i32 %v3_bf44, { 1, 0 }
  uselistorder i32 %v3_bed8, { 1, 0 }
  uselistorder i32 %v0_becc, { 1, 0 }
  uselistorder i32 %v3_be54, { 1, 0 }
  uselistorder i32 %v2_be40, { 1, 0 }
  uselistorder i32 %v3_be24, { 1, 0, 2, 3 }
  uselistorder i32 %v2_be1c, { 1, 0 }
  uselistorder i32 %v3_bdf8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_bdf0, { 1, 0 }
  uselistorder i32 %v4_bdd8, { 1, 0 }
  uselistorder i32 %v0_bdd4, { 0, 2, 1 }
  uselistorder i1 %v7_bd44, { 1, 0 }
  uselistorder i32 %v7_bd3c, { 0, 2, 1, 3 }
  uselistorder i32 %v5_bd88, { 1, 0 }
  uselistorder i1 %v9_bd6c, { 1, 0 }
  uselistorder i32 %v4_bd80, { 1, 0 }
  uselistorder i32 %v4_bd7c, { 1, 0 }
  uselistorder i32 %v8_bc90, { 1, 2, 0, 3 }
  uselistorder i32 %v3_bc7c, { 1, 0 }
  uselistorder i32 %v0_bc6c, { 2, 0, 1, 3 }
  uselistorder i1 %v7_bbf4, { 1, 0 }
  uselistorder i32 %v3_bbf0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_c008, { 1, 0 }
  uselistorder i32 %v1_bff0, { 1, 0 }
  uselistorder i32 %v1_bfd8, { 1, 0 }
  uselistorder i32 %v1_bfc0, { 1, 0 }
  uselistorder i32 %v1_bfa8, { 1, 0 }
  uselistorder i32 %v5_bd84, { 1, 0 }
  uselistorder i32 %v3_bcd893, { 1, 0 }
  uselistorder i1 %v2_bd9c, { 1, 0 }
  uselistorder i32 %v1_bd98, { 1, 0 }
  uselistorder i32 %v4_bd94, { 2, 0, 1 }
  uselistorder i32 %v4_bd78, { 1, 0 }
  uselistorder i1 %v3_bcc0, { 1, 0 }
  uselistorder i32 %v8_bbbc, { 2, 1, 0 }
  uselistorder i32 %v8_bbb8, { 1, 2, 0 }
  uselistorder i32 %v3_bbb0, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_bbac, { 0, 1, 3, 2 }
  uselistorder i1 %v7_bba0, { 1, 0 }
  uselistorder i1 %v7_bb70, { 1, 0 }
  uselistorder i32 %v3_bb6c, { 2, 0, 1 }
  uselistorder i32 %v3_bb68, { 5, 6, 1, 3, 4, 7, 8, 2, 0, 9 }
  uselistorder i32 %v1_bb58, { 1, 3, 2, 0 }
  uselistorder i32 %v1_bb00, { 1, 0 }
  uselistorder i32 %v1_bac0, { 1, 0 }
  uselistorder i32 %v1_baa0, { 1, 0 }
  uselistorder i32 %v1_ba80, { 1, 0 }
  uselistorder i32 %v1_ba48, { 1, 0 }
  uselistorder i32 %v2_b9c8, { 0, 4, 5, 2, 1, 3 }
  uselistorder i32 %v2_b9b8, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32 %v1_b99c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 16, 15 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0 }
  uselistorder i32* %r2.global-to-local, { 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r1.global-to-local, { 41, 42, 43, 44, 45, 46, 47, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 18, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 37, 36, 38, 40, 39, 0 }
  uselistorder i32* %r0.global-to-local, { 53, 52, 54, 55, 57, 56, 61, 58, 59, 62, 60, 8, 1, 2, 3, 4, 5, 6, 7, 12, 9, 10, 11, 13, 15, 14, 17, 16, 20, 18, 21, 22, 19, 23, 25, 24, 26, 27, 29, 28, 33, 30, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %lr.global-to-local, { 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %ip.global-to-local, { 31, 32, 33, 34, 35, 36, 37, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i1* %cpsr_z.global-to-local, { 19, 20, 21, 22, 23, 24, 25, 26, 0, 3, 1, 2, 4, 5, 6, 7, 9, 18, 10, 11, 8, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 768, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_c1ec, { 1, 0 }
  uselistorder label %dec_label_pc_c0bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c044, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %.thread6, { 2, 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %dec_label_pc_bdcc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_bd04, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_bcb4, { 1, 0 }
}

define i32 @function_c1f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c1f8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_c1fc = urem i32 %arg1, 256
  store i32 %v1_c1fc, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_c214 = urem i32 %arg3, 256
  store i32 %v1_c214, i32* @r4, align 4
  %v2_c218 = call i32 @function_137cc(i32 %v1_c1fc, i32 4)
  %v0_c21c = load i32, i32* @r5, align 4
  store i32 %v0_c21c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c22c = load i32, i32* @r4, align 4
  %v5_c230 = inttoptr i32 %v0_c21c to i32*
  %v6_c230 = call i32 @function_85e0(i32 %v0_c22c, i32* %v5_c230, i32 2, i32 0)
  %v1_c23c = urem i32 %v6_c230, 256
  store i32 %v1_c23c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c248 = load i32, i32* @r5, align 4
  store i32 %v0_c248, i32* %r1.global-to-local, align 4
  %v0_c24c = load i32, i32* @r4, align 4
  %v5_c250 = trunc i32 %v6_c230 to i8
  %v6_c254 = inttoptr i32 %v0_c248 to i32*
  %v7_c254 = call i32 @function_85e0(i32 %v0_c24c, i32* %v6_c254, i32 3, i32 65535)
  %v0_c258 = load i32, i32* @r5, align 4
  store i32 %v0_c258, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_c254, i32* @r8, align 4
  %v0_c268 = load i32, i32* @r4, align 4
  %v4_c26c = inttoptr i32 %v0_c258 to i32*
  %v5_c26c = call i32 @function_85e0(i32 %v0_c268, i32* %v4_c26c, i32 4, i32 64)
  %v1_c274 = urem i32 %v5_c26c, 256
  store i32 %v1_c274, i32* %ip.global-to-local, align 4
  %v0_c278 = load i32, i32* @r5, align 4
  store i32 %v0_c278, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c284 = load i32, i32* @r4, align 4
  %v6_c28c = inttoptr i32 %v0_c278 to i32*
  %v7_c28c = call i32 @function_85e0(i32 %v0_c284, i32* %v6_c28c, i32 5, i32 0)
  %v1_c298 = urem i32 %v7_c28c, 256
  store i32 %v1_c298, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c2a4 = load i32, i32* @r5, align 4
  store i32 %v0_c2a4, i32* %r1.global-to-local, align 4
  %v0_c2a8 = load i32, i32* @r4, align 4
  %v5_c2b0 = inttoptr i32 %v0_c2a4 to i32*
  %v6_c2b0 = call i32 @function_85e0(i32 %v0_c2a8, i32* %v5_c2b0, i32 6, i32 65535)
  %v0_c2b8 = load i32, i32* @r5, align 4
  store i32 %v0_c2b8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_c2b0, i32* @r7, align 4
  %v0_c2c8 = load i32, i32* @r4, align 4
  %v4_c2cc = inttoptr i32 %v0_c2b8 to i32*
  %v5_c2cc = call i32 @function_85e0(i32 %v0_c2c8, i32* %v4_c2cc, i32 7, i32 65535)
  %v0_c2d4 = load i32, i32* @r5, align 4
  store i32 %v0_c2d4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_c2cc, i32* @r6, align 4
  %v0_c2e4 = load i32, i32* @r4, align 4
  %v4_c2e8 = inttoptr i32 %v0_c2d4 to i32*
  %v5_c2e8 = call i32 @function_85e0(i32 %v0_c2e4, i32* %v4_c2e8, i32 17, i32 65535)
  %v0_c2f4 = load i32, i32* @r5, align 4
  store i32 %v0_c2f4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_c300 = load i32, i32* @r4, align 4
  %v5_c304 = inttoptr i32 %v0_c2f4 to i32*
  %v6_c304 = call i32 @function_85e0(i32 %v0_c300, i32* %v5_c304, i32 18, i32 65535)
  %v0_c308 = load i32, i32* @r5, align 4
  store i32 %v0_c308, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c318 = load i32, i32* @r4, align 4
  %v5_c31c = inttoptr i32 %v0_c308 to i32*
  %v6_c31c = call i32 @function_85e0(i32 %v0_c318, i32* %v5_c31c, i32 11, i32 0)
  %v0_c320 = load i32, i32* @r5, align 4
  store i32 %v0_c320, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c330 = load i32, i32* @r4, align 4
  %v5_c334 = inttoptr i32 %v0_c320 to i32*
  %v6_c334 = call i32 @function_85e0(i32 %v0_c330, i32* %v5_c334, i32 12, i32 1)
  %v0_c338 = load i32, i32* @r5, align 4
  store i32 %v0_c338, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c348 = load i32, i32* @r4, align 4
  %v5_c34c = inttoptr i32 %v0_c338 to i32*
  %v6_c34c = call i32 @function_85e0(i32 %v0_c348, i32* %v5_c34c, i32 13, i32 0)
  %v0_c350 = load i32, i32* @r5, align 4
  store i32 %v0_c350, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c360 = load i32, i32* @r4, align 4
  %v5_c364 = inttoptr i32 %v0_c350 to i32*
  %v6_c364 = call i32 @function_85e0(i32 %v0_c360, i32* %v5_c364, i32 14, i32 0)
  %v0_c368 = load i32, i32* @r5, align 4
  store i32 %v0_c368, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c378 = load i32, i32* @r4, align 4
  %v5_c37c = inttoptr i32 %v0_c368 to i32*
  %v6_c37c = call i32 @function_85e0(i32 %v0_c378, i32* %v5_c37c, i32 15, i32 0)
  %v0_c380 = load i32, i32* @r5, align 4
  store i32 %v0_c380, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c390 = load i32, i32* @r4, align 4
  %v5_c394 = inttoptr i32 %v0_c380 to i32*
  %v6_c394 = call i32 @function_85e0(i32 %v0_c390, i32* %v5_c394, i32 16, i32 0)
  %v0_c398 = load i32, i32* @r5, align 4
  store i32 %v0_c398, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_c3a8 = load i32, i32* @r4, align 4
  %v5_c3ac = inttoptr i32 %v0_c398 to i32*
  %v6_c3ac = call i32 @function_85e0(i32 %v0_c3a8, i32* %v5_c3ac, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c3bc = load i32, i32* @r5, align 4
  store i32 %v0_c3bc, i32* %r1.global-to-local, align 4
  %v0_c3c0 = load i32, i32* @r4, align 4
  %v4_c3c4 = inttoptr i32 %v0_c3bc to i32*
  %v5_c3c4 = call i32 @function_85e0(i32 %v0_c3c0, i32* %v4_c3c4, i32 1, i32 1)
  %v2_c3d0 = load i32, i32* @global_var_1dc68.49, align 4
  store i32 %v2_c3d0, i32* %r3.global-to-local, align 4
  %v1_c3d4 = urem i32 %v5_c3c4, 256
  store i32 %v1_c3d4, i32* %ip.global-to-local, align 4
  %v0_c3d8 = load i32, i32* @r5, align 4
  store i32 %v0_c3d8, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_c3e0 = load i32, i32* @r4, align 4
  %v5_c3e8 = inttoptr i32 %v0_c3d8 to i32*
  %v6_c3e8 = call i32 @function_8574(i32 %v0_c3e0, i32* %v5_c3e8, i32 25, i32 %v2_c3d0, i32 %v1_c3d4)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_c3fc = call i32 @function_134e0(i32 2, i32 3, i32 6)
  %v7_c400 = icmp eq i32 %v3_c3fc, -1
  store i1 %v7_c400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c400, label %dec_label_pc_c838, label %dec_label_pc_c40c

dec_label_pc_c40c:                                ; preds = %dec_label_pc_c1f8
  store i32 1, i32* %stack_var_-40, align 4
  %v6_c414 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_c414, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_c428 = call i32 @function_134b0(i32 %v3_c3fc, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  %v7_c42c = icmp eq i32 %v6_c428, -1
  store i1 %v7_c42c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c42c, label %dec_label_pc_c830, label %dec_label_pc_c434

dec_label_pc_c434:                                ; preds = %dec_label_pc_c40c
  %v0_c434 = load i32, i32* @r8, align 4
  %v0_c438 = load i32, i32* @r7, align 4
  %v0_c43c = load i32, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_c444 = urem i32 %v0_c434, 65536
  store i32 %v3_c444, i32* %r2.global-to-local, align 4
  %v3_c448 = urem i32 %v0_c438, 65536
  store i32 %v3_c448, i32* %r3.global-to-local, align 4
  %v3_c44c = urem i32 %v0_c43c, 65536
  store i32 %v3_c44c, i32* %ip.global-to-local, align 4
  %v0_c450 = load i32, i32* @fp, align 4
  %v2_c450 = icmp eq i32 %v0_c450, 0
  store i1 %v2_c450, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %tmp75 = icmp slt i32 %v0_c450, 1
  br i1 %tmp75, label %dec_label_pc_c950, label %dec_label_pc_c468

dec_label_pc_c468:                                ; preds = %dec_label_pc_c434
  %v1_c470 = add i32 %v6_c3ac, 40
  %tmp76 = mul i32 %v1_c470, 256
  %v1_c484 = urem i32 %v0_c438, 256
  %v1_c488 = and i32 %tmp76, 65280
  %v3_c48c = mul nuw nsw i32 %v1_c484, 256
  %v1_c494 = urem i32 %v0_c43c, 256
  %tmp77 = udiv i32 %v0_c43c, 256
  %v3_c498 = urem i32 %tmp77, 256
  %tmp78 = udiv i32 %v1_c470, 256
  %v4_c49c = urem i32 %tmp78, 256
  %v5_c49c = or i32 %v4_c49c, %v1_c488
  store i32 %v5_c49c, i32* @lr, align 4
  %tmp79 = udiv i32 %v0_c438, 256
  %v4_c4a0 = urem i32 %tmp79, 256
  %v5_c4a0 = or i32 %v4_c4a0, %v3_c48c
  store i32 %v5_c4a0, i32* @sl, align 4
  %v4_c4a4 = mul nuw nsw i32 %v1_c494, 256
  %v5_c4a4 = or i32 %v4_c4a4, %v3_c498
  store i32 %v5_c4a4, i32* @r6, align 4
  %tmp80 = udiv i32 %v0_c434, 256
  %v3_c4b4 = urem i32 %tmp80, 256
  %v1_c4b8 = urem i32 %v0_c434, 256
  %tmp81 = mul i32 %v5_c2e8, 256
  %v1_c4c0 = and i32 %tmp81, 65280
  %v1_c4c4 = urem i32 %v6_c31c, 2
  %v1_c4c8 = urem i32 %v6_c334, 2
  %v1_c4cc = urem i32 %v6_c34c, 2
  %tmp82 = udiv i32 %v5_c2e8, 256
  %v4_c4d0 = urem i32 %tmp82, 256
  %v5_c4d0 = or i32 %v4_c4d0, %v1_c4c0
  store i32 %v5_c4d0, i32* @r8, align 4
  %v1_c4f0 = urem i32 %v6_c364, 2
  %v1_c4f4 = urem i32 %v6_c37c, 2
  %v1_c4f8 = urem i32 %v6_c394, 2
  %v1_c4fc = urem i32 %v6_c34c, 256
  %v4_c500 = mul nuw nsw i32 %v1_c4b8, 256
  %v5_c500 = or i32 %v4_c500, %v3_c4b4
  store i32 %v5_c500, i32* @r5, align 4
  %v3_c51425 = udiv i32 %v1_c488, 256
  store i32 %v3_c51425, i32* %r3.global-to-local, align 4
  store i32 %v1_c4b8, i32* %ip.global-to-local, align 4
  store i32 %v1_c484, i32* %r1.global-to-local, align 4
  store i32 %v1_c494, i32* %r2.global-to-local, align 4
  %v5_c530 = trunc i32 %v0_c438 to i8
  store i32 0, i32* @r4, align 4
  %sext8 = mul i32 %v5_c26c, 16777216
  %v4_c58c = sdiv i32 %sext8, 16777216
  %sext9 = mul i32 %v0_c434, 16777216
  %v4_c598 = sdiv i32 %sext9, 16777216
  %sext10 = mul i32 %tmp78, 16777216
  %v4_c5ac = sdiv i32 %sext10, 16777216
  %sext11 = mul i32 %v1_c470, 16777216
  %v4_c5b0 = sdiv i32 %sext11, 16777216
  %tmp = sub nsw i32 0, %v1_c4c4
  %v4_c600 = and i32 %tmp, 32
  %tmp93 = sub nsw i32 0, %v1_c4c8
  %v4_c614 = and i32 %tmp93, 16
  %tmp94 = sub nsw i32 0, %v1_c4cc
  %v4_c628 = and i32 %tmp94, 8
  %tmp95 = sub nsw i32 0, %v1_c4f0
  %v4_c63c = and i32 %tmp95, 4
  %tmp96 = sub nsw i32 0, %v1_c4f4
  %v3_c650 = and i32 %tmp96, 2
  %sext12 = mul i32 %v0_c43c, 16777216
  %v7_c680 = sdiv i32 %sext12, 16777216
  %v1_c594 = trunc i32 %v4_c58c to i8
  %extract.t = trunc i32 %v4_c598 to i8
  %v3_c680 = sext i8 %v5_c530 to i32
  %v2_c6a4 = icmp eq i32 %v1_c4fc, 0
  br label %dec_label_pc_c53c

dec_label_pc_c53c:                                ; preds = %bb89, %dec_label_pc_c468
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_c548 = call i32 @function_137cc(i32 1510, i32 1)
  store i32 %v2_c218, i32* %ip.global-to-local, align 4
  %v2_c554 = load i32, i32* @r4, align 4
  %v5_c554 = mul i32 %v2_c554, 4
  %v6_c554 = add i32 %v5_c554, %v2_c218
  %v7_c554 = inttoptr i32 %v6_c554 to i32*
  store i32 %v2_c548, i32* %v7_c554, align 4
  %v3_c558 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c558, i32* %r3.global-to-local, align 4
  %v0_c55c = load i32, i32* %ip.global-to-local, align 4
  %v4_c55c = mul i32 %v3_c558, 4
  %v5_c55c = add i32 %v0_c55c, %v4_c55c
  %v6_c55c = inttoptr i32 %v5_c55c to i32*
  %v7_c55c = load i32, i32* %v6_c55c, align 4
  store i32 %v7_c55c, i32* @r7, align 4
  %v1_c560 = inttoptr i32 %v7_c55c to i8*
  %v2_c560 = load i8, i8* %v1_c560, align 1
  %tmp97 = urem i8 %v2_c560, 16
  %v1_c564 = zext i8 %tmp97 to i32
  %v1_c568 = or i32 %v1_c564, 64
  store i32 %v1_c568, i32* %r2.global-to-local, align 4
  %v1_c56c = trunc i32 %v1_c568 to i8
  store i8 %v1_c56c, i8* %v1_c560, align 1
  %v0_c570 = load i32, i32* @r7, align 4
  %v1_c570 = inttoptr i32 %v0_c570 to i8*
  %v2_c570 = load i8, i8* %v1_c570, align 1
  %v1_c574 = and i8 %v2_c570, -16
  %v1_c578 = or i8 %v1_c574, 5
  store i32 %v1_c298, i32* %r1.global-to-local, align 4
  store i8 %v1_c578, i8* %v1_c570, align 1
  %v2_c588 = load i32, i32* @r7, align 4
  %v3_c588 = add i32 %v2_c588, 1
  %v4_c588 = inttoptr i32 %v3_c588 to i8*
  store i8 %v5_c250, i8* %v4_c588, align 1
  store i32 %v4_c58c, i32* %r3.global-to-local, align 4
  %v0_c590 = load i32, i32* %r1.global-to-local, align 4
  %v2_c590 = icmp eq i32 %v0_c590, 0
  store i1 %v2_c590, i1* %cpsr_z.global-to-local, align 1
  %v2_c594 = load i32, i32* @r7, align 4
  %v3_c594 = add i32 %v2_c594, 8
  %v4_c594 = inttoptr i32 %v3_c594 to i8*
  store i8 %v1_c594, i8* %v4_c594, align 1
  store i32 %v4_c598, i32* %r2.global-to-local, align 4
  %v0_c59c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c59c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_c53c
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_c5a0 = load i32, i32* @r7, align 4
  %v4_c5a0 = add i32 %v3_c5a0, 6
  %v5_c5a0 = inttoptr i32 %v4_c5a0 to i8*
  store i8 64, i8* %v5_c5a0, align 1
  %v0_c5a8.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t26 = trunc i32 %v0_c5a8.pre to i8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c53c, %bb
  %v0_c5a8.off0 = phi i8 [ %extract.t, %dec_label_pc_c53c ], [ %extract.t26, %bb ]
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_c5a8 = load i32, i32* @r7, align 4
  %v3_c5a8 = add i32 %v2_c5a8, 5
  %v4_c5a8 = inttoptr i32 %v3_c5a8 to i8*
  store i8 %v0_c5a8.off0, i8* %v4_c5a8, align 1
  store i32 %v4_c5ac, i32* %ip.global-to-local, align 4
  store i32 %v4_c5b0, i32* %r1.global-to-local, align 4
  %v0_c5b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c5b4, label %bb84, label %bb83

bb83:                                             ; preds = %.thread
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %.thread, %bb83
  %v0_c5b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c5b8 = trunc i32 %v0_c5b8 to i8
  %v2_c5b8 = load i32, i32* @r7, align 4
  %v3_c5b8 = add i32 %v2_c5b8, 9
  %v4_c5b8 = inttoptr i32 %v3_c5b8 to i8*
  store i8 %v1_c5b8, i8* %v4_c5b8, align 1
  %v0_c5bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c5bc, label %bb86, label %bb85

bb85:                                             ; preds = %bb84
  %v1_c5bc = load i32, i32* %r2.global-to-local, align 4
  %v2_c5bc = trunc i32 %v1_c5bc to i8
  %v3_c5bc = load i32, i32* @r7, align 4
  %v4_c5bc = add i32 %v3_c5bc, 7
  %v5_c5bc = inttoptr i32 %v4_c5bc to i8*
  store i8 %v2_c5bc, i8* %v5_c5bc, align 1
  br label %bb86

bb86:                                             ; preds = %bb84, %bb85
  %v3_c5c0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c5c0, i32* %r2.global-to-local, align 4
  %v0_c5c4 = load i32, i32* %ip.global-to-local, align 4
  %v1_c5c4 = trunc i32 %v0_c5c4 to i8
  %v2_c5c4 = load i32, i32* @r7, align 4
  %v3_c5c4 = add i32 %v2_c5c4, 2
  %v4_c5c4 = inttoptr i32 %v3_c5c4 to i8*
  store i8 %v1_c5c4, i8* %v4_c5c4, align 1
  store i32 %v6_c3e8, i32* %ip.global-to-local, align 4
  %v0_c5cc = load i32, i32* %r2.global-to-local, align 4
  %v3_c5cc = mul i32 %v0_c5cc, 32
  store i32 %v3_c5cc, i32* %r3.global-to-local, align 4
  %v1_c5d0 = load i32, i32* @r7, align 4
  %v2_c5d0 = add i32 %v1_c5d0, 12
  %v3_c5d0 = inttoptr i32 %v2_c5d0 to i32*
  store i32 %v6_c3e8, i32* %v3_c5d0, align 4
  %v0_c5d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_c5d4 = load i32, i32* %r2.global-to-local, align 4
  %tmp98 = mul i32 %v1_c5d4, -8
  %v5_c5d4 = add i32 %v0_c5d4, %tmp98
  %v1_c5d8 = load i32, i32* @sb, align 4
  %v2_c5d8 = add i32 %v1_c5d8, %v5_c5d4
  store i32 %v2_c5d8, i32* %r3.global-to-local, align 4
  %v1_c5dc = add i32 %v2_c5d8, 16
  %v2_c5dc = inttoptr i32 %v1_c5dc to i32*
  %v3_c5dc = load i32, i32* %v2_c5dc, align 4
  store i32 %v3_c5dc, i32* %r2.global-to-local, align 4
  %v0_c5e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_c5e0 = trunc i32 %v0_c5e0 to i8
  %v2_c5e0 = load i32, i32* @r7, align 4
  %v3_c5e0 = add i32 %v2_c5e0, 3
  %v4_c5e0 = inttoptr i32 %v3_c5e0 to i8*
  store i8 %v1_c5e0, i8* %v4_c5e0, align 1
  %v0_c5e4 = load i32, i32* @r5, align 4
  %v1_c5e4 = trunc i32 %v0_c5e4 to i8
  %v2_c5e4 = load i32, i32* @r7, align 4
  %v3_c5e4 = add i32 %v2_c5e4, 4
  %v4_c5e4 = inttoptr i32 %v3_c5e4 to i8*
  store i8 %v1_c5e4, i8* %v4_c5e4, align 1
  %v0_c5e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_c5e8 = load i32, i32* @r7, align 4
  %v2_c5e8 = add i32 %v1_c5e8, 16
  %v3_c5e8 = inttoptr i32 %v2_c5e8 to i32*
  store i32 %v0_c5e8, i32* %v3_c5e8, align 4
  %v0_c5ec = load i32, i32* @sl, align 4
  %v1_c5ec = trunc i32 %v0_c5ec to i8
  %v2_c5ec = load i32, i32* @r7, align 4
  %v3_c5ec = add i32 %v2_c5ec, 20
  %v4_c5ec = inttoptr i32 %v3_c5ec to i8*
  store i8 %v1_c5ec, i8* %v4_c5ec, align 1
  %v0_c5f0 = load i32, i32* @r7, align 4
  %v1_c5f0 = add i32 %v0_c5f0, 20
  store i32 %v1_c5f0, i32* @r4, align 4
  %v1_c5f4 = add i32 %v0_c5f0, 33
  %v2_c5f4 = inttoptr i32 %v1_c5f4 to i8*
  %v3_c5f4 = load i8, i8* %v2_c5f4, align 1
  %v4_c5f4 = zext i8 %v3_c5f4 to i32
  store i32 %v1_c4c4, i32* %r1.global-to-local, align 4
  %v1_c5fc = and i32 %v4_c5f4, 223
  %v5_c600 = or i32 %v1_c5fc, %v4_c600
  store i32 %v5_c600, i32* %r3.global-to-local, align 4
  %v1_c604 = trunc i32 %v5_c600 to i8
  store i8 %v1_c604, i8* %v2_c5f4, align 1
  %v0_c608 = load i32, i32* @r4, align 4
  %v1_c608 = add i32 %v0_c608, 13
  %v2_c608 = inttoptr i32 %v1_c608 to i8*
  %v3_c608 = load i8, i8* %v2_c608, align 1
  %v4_c608 = zext i8 %v3_c608 to i32
  store i32 %v1_c4c8, i32* %r3.global-to-local, align 4
  %v1_c610 = and i32 %v4_c608, 239
  %v5_c614 = or i32 %v1_c610, %v4_c614
  store i32 %v5_c614, i32* %r2.global-to-local, align 4
  %v1_c618 = trunc i32 %v5_c614 to i8
  store i8 %v1_c618, i8* %v2_c608, align 1
  %v0_c61c = load i32, i32* @r4, align 4
  %v1_c61c = add i32 %v0_c61c, 13
  %v2_c61c = inttoptr i32 %v1_c61c to i8*
  %v3_c61c = load i8, i8* %v2_c61c, align 1
  %v4_c61c = zext i8 %v3_c61c to i32
  store i32 %v1_c4cc, i32* %ip.global-to-local, align 4
  %v1_c624 = and i32 %v4_c61c, 247
  %v5_c628 = or i32 %v1_c624, %v4_c628
  store i32 %v5_c628, i32* %r3.global-to-local, align 4
  %v1_c62c = trunc i32 %v5_c628 to i8
  store i8 %v1_c62c, i8* %v2_c61c, align 1
  %v0_c630 = load i32, i32* @r4, align 4
  %v1_c630 = add i32 %v0_c630, 13
  %v2_c630 = inttoptr i32 %v1_c630 to i8*
  %v3_c630 = load i8, i8* %v2_c630, align 1
  %v4_c630 = zext i8 %v3_c630 to i32
  store i32 %v1_c4f0, i32* %r1.global-to-local, align 4
  %v1_c638 = and i32 %v4_c630, 251
  %v5_c63c = or i32 %v1_c638, %v4_c63c
  store i32 %v5_c63c, i32* %r2.global-to-local, align 4
  %v1_c640 = trunc i32 %v5_c63c to i8
  store i8 %v1_c640, i8* %v2_c630, align 1
  %v0_c644 = load i32, i32* @r4, align 4
  %v1_c644 = add i32 %v0_c644, 13
  %v2_c644 = inttoptr i32 %v1_c644 to i8*
  %v3_c644 = load i8, i8* %v2_c644, align 1
  %v4_c644 = zext i8 %v3_c644 to i32
  store i32 %v1_c4f4, i32* %r2.global-to-local, align 4
  %v1_c64c = and i32 %v4_c644, 253
  %v4_c650 = or i32 %v1_c64c, %v3_c650
  store i32 %v4_c650, i32* %r3.global-to-local, align 4
  %v1_c654 = trunc i32 %v4_c650 to i8
  store i8 %v1_c654, i8* %v2_c644, align 1
  %v0_c658 = load i32, i32* @r4, align 4
  %v1_c658 = add i32 %v0_c658, 12
  %v2_c658 = inttoptr i32 %v1_c658 to i8*
  %v3_c658 = load i8, i8* %v2_c658, align 1
  %v4_c658 = zext i8 %v3_c658 to i32
  store i32 %v4_c658, i32* %r2.global-to-local, align 4
  %v1_c65c = add i32 %v0_c658, 13
  %v2_c65c = inttoptr i32 %v1_c65c to i8*
  %v3_c65c = load i8, i8* %v2_c65c, align 1
  %v4_c65c = zext i8 %v3_c65c to i32
  store i32 %v1_c4f8, i32* %ip.global-to-local, align 4
  %tmp99 = urem i8 %v3_c658, 16
  %v1_c664 = zext i8 %tmp99 to i32
  %v1_c668 = and i32 %v4_c65c, 254
  %v2_c66c = or i32 %v1_c668, %v1_c4f8
  store i32 %v2_c66c, i32* %r3.global-to-local, align 4
  %v1_c670 = or i32 %v1_c664, 80
  store i32 %v1_c670, i32* %r2.global-to-local, align 4
  %v1_c674 = trunc i32 %v2_c66c to i8
  store i8 %v1_c674, i8* %v2_c65c, align 1
  %v0_c678 = load i32, i32* %r2.global-to-local, align 4
  %v1_c678 = trunc i32 %v0_c678 to i8
  %v2_c678 = load i32, i32* @r4, align 4
  %v3_c678 = add i32 %v2_c678, 12
  %v4_c678 = inttoptr i32 %v3_c678 to i8*
  store i8 %v1_c678, i8* %v4_c678, align 1
  store i32 %v3_c680, i32* %r1.global-to-local, align 4
  store i32 %v7_c680, i32* %r2.global-to-local, align 4
  %v2_c684 = load i32, i32* @r4, align 4
  %v3_c684 = add i32 %v2_c684, 1
  %v4_c684 = inttoptr i32 %v3_c684 to i8*
  store i8 %v5_c530, i8* %v4_c684, align 1
  %v0_c688 = load i32, i32* %r2.global-to-local, align 4
  %v1_c688 = trunc i32 %v0_c688 to i8
  %v2_c688 = load i32, i32* @r4, align 4
  %v3_c688 = add i32 %v2_c688, 3
  %v4_c688 = inttoptr i32 %v3_c688 to i8*
  store i8 %v1_c688, i8* %v4_c688, align 1
  %v0_c68c = load i32, i32* @r6, align 4
  %v1_c68c = trunc i32 %v0_c68c to i8
  %v2_c68c = load i32, i32* @r4, align 4
  %v3_c68c = add i32 %v2_c68c, 2
  %v4_c68c = inttoptr i32 %v3_c68c to i8*
  store i8 %v1_c68c, i8* %v4_c68c, align 1
  %v0_c690 = load i32, i32* @r8, align 4
  %v1_c690 = load i32, i32* @r4, align 4
  %v2_c690 = add i32 %v1_c690, 4
  %v3_c690 = inttoptr i32 %v2_c690 to i32*
  store i32 %v0_c690, i32* %v3_c690, align 4
  %v0_c694 = call i32 @function_e7cc()
  store i32 %v1_c4fc, i32* %ip.global-to-local, align 4
  %sext = mul i32 %v0_c694, 16777216
  %v1_c69c = sdiv i32 %sext, 16777216
  store i32 %v1_c69c, i32* %r2.global-to-local, align 4
  %v3_c6a0 = ashr i32 %sext, 31
  store i32 %v3_c6a0, i32* %r3.global-to-local, align 4
  store i1 %v2_c6a4, i1* %cpsr_z.global-to-local, align 1
  %v1_c6a8 = trunc i32 %v3_c6a0 to i8
  %v2_c6a8 = load i32, i32* @r4, align 4
  %v3_c6a8 = add i32 %v2_c6a8, 15
  %v4_c6a8 = inttoptr i32 %v3_c6a8 to i8*
  store i8 %v1_c6a8, i8* %v4_c6a8, align 1
  %v0_c6ac = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_c6b8.pre = load i32, i32* @r4, align 4
  br i1 %v0_c6ac, label %.thread13, label %bb87

bb87:                                             ; preds = %bb86
  %v2_c6ac = add i32 %v2_c6b8.pre, 13
  %v3_c6ac = inttoptr i32 %v2_c6ac to i8*
  %v4_c6ac = load i8, i8* %v3_c6ac, align 1
  %v5_c6ac = zext i8 %v4_c6ac to i32
  %v2_c6b0 = or i32 %v5_c6ac, 8
  store i32 %v2_c6b0, i32* %r3.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb86, %bb87
  store i32 %v6_c3ac, i32* @r1, align 4
  %v0_c6b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_c6b8 = trunc i32 %v0_c6b8 to i8
  %v3_c6b8 = add i32 %v2_c6b8.pre, 14
  %v4_c6b8 = inttoptr i32 %v3_c6b8 to i8*
  store i8 %v1_c6b8, i8* %v4_c6b8, align 1
  %v0_c6bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c6bc, label %bb89, label %bb88

bb88:                                             ; preds = %.thread13
  %v1_c6bc = load i32, i32* %r3.global-to-local, align 4
  %v2_c6bc = trunc i32 %v1_c6bc to i8
  %v3_c6bc = load i32, i32* @r4, align 4
  %v4_c6bc = add i32 %v3_c6bc, 13
  %v5_c6bc = inttoptr i32 %v4_c6bc to i8*
  store i8 %v2_c6bc, i8* %v5_c6bc, align 1
  br label %bb89

bb89:                                             ; preds = %.thread13, %bb88
  %v0_c6c0 = load i32, i32* @r7, align 4
  %v1_c6c0 = add i32 %v0_c6c0, 40
  %v1_c6c4 = inttoptr i32 %v1_c6c0 to i8*
  %v2_c6c4 = call i32 @function_e94c(i8* %v1_c6c4)
  %v3_c6c8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c6c8, i32* %r3.global-to-local, align 4
  %v1_c6cc = add i32 %v3_c6c8, 1
  store i32 %v1_c6cc, i32* @r4, align 4
  %v0_c6d0 = load i32, i32* @fp, align 4
  %v9_c6d0 = icmp eq i32 %v0_c6d0, %v1_c6cc
  store i1 %v9_c6d0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c6cc, i32* %stack_var_-40, align 4
  %v8_c6d8 = icmp sgt i32 %v0_c6d0, %v1_c6cc
  br i1 %v8_c6d8, label %dec_label_pc_c53c, label %dec_label_pc_c6dc

dec_label_pc_c6dc:                                ; preds = %bb89
  store i32 %v6_c3ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c6e4.preheader

dec_label_pc_c6e4.preheader:                      ; preds = %dec_label_pc_c6dc, %dec_label_pc_c950
  %v0_c6e417 = phi i32 [ %v0_c6d0, %dec_label_pc_c6dc ], [ %v0_c450, %dec_label_pc_c950 ]
  %stack_var_-168.0.ph = phi i32 [ %v1_c470, %dec_label_pc_c6dc ], [ %v1_c958, %dec_label_pc_c950 ]
  %storemerge = add i32 %v6_c3ac, 20
  store i32 %storemerge, i32* @r8, align 4
  %v3_c89c = icmp eq i32 %v6_c3e8, -1
  %v8_c89c = icmp eq i32 %v6_c3e8, -1
  %v3_c8b8 = icmp eq i32 %v3_c444, 65535
  %v2_c934 = icmp eq i32 %v1_c3d4, 0
  br label %dec_label_pc_c6e4

dec_label_pc_c6e4:                                ; preds = %dec_label_pc_c78c, %dec_label_pc_c6e4.preheader
  %v0_c6e4 = phi i32 [ %v0_c6e417, %dec_label_pc_c6e4.preheader ], [ %v0_c820, %dec_label_pc_c78c ]
  %v2_c6e4 = icmp eq i32 %v0_c6e4, 0
  store i1 %v2_c6e4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp90 = icmp slt i32 %v0_c6e4, 1
  br label %dec_label_pc_c6ec

dec_label_pc_c6ec:                                ; preds = %dec_label_pc_c6ec, %dec_label_pc_c6e4
  br i1 %tmp90, label %dec_label_pc_c6ec, label %dec_label_pc_c6f0

dec_label_pc_c6f0:                                ; preds = %dec_label_pc_c6ec
  %v0_c6f0 = load i32, i32* @r8, align 4
  %v3_c6f0 = mul i32 %v0_c6f0, 65536
  store i32 %v3_c6f0, i32* %r2.global-to-local, align 4
  %tmp91 = mul i32 %v0_c6f0, 256
  %v1_c6f8 = and i32 %tmp91, 65280
  store i32 %v1_c6f8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %tmp92 = udiv i32 %v0_c6f0, 256
  %v4_c704 = urem i32 %tmp92, 256
  %v5_c704 = or i32 %v4_c704, %v1_c6f8
  store i32 %v5_c704, i32* @sl, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_c70c

dec_label_pc_c70c:                                ; preds = %dec_label_pc_c78c, %dec_label_pc_c6f0
  %v1_c720 = phi i32 [ %v1_c81c, %dec_label_pc_c78c ], [ 0, %dec_label_pc_c6f0 ]
  %v5_c710 = mul i32 %v1_c720, 24
  %v1_c714 = load i32, i32* @sb, align 4
  %v2_c714 = add i32 %v1_c714, %v5_c710
  store i32 %v2_c714, i32* %r3.global-to-local, align 4
  store i32 %v2_c218, i32* %ip.global-to-local, align 4
  %v1_c71c = add i32 %v2_c714, 20
  %v2_c71c = inttoptr i32 %v1_c71c to i8*
  %v3_c71c = load i8, i8* %v2_c71c, align 1
  %v4_c71c = zext i8 %v3_c71c to i32
  store i32 %v4_c71c, i32* %r2.global-to-local, align 4
  %v4_c720 = mul i32 %v1_c720, 4
  %v5_c720 = add i32 %v4_c720, %v2_c218
  %v6_c720 = inttoptr i32 %v5_c720 to i32*
  %v7_c720 = load i32, i32* %v6_c720, align 4
  store i32 %v7_c720, i32* @r5, align 4
  %v7_c724 = icmp eq i8 %v3_c71c, 31
  store i1 %v7_c724, i1* %cpsr_z.global-to-local, align 1
  %v1_c728 = add i32 %v7_c720, 20
  store i32 %v1_c728, i32* @r6, align 4
  %tmp100 = icmp ult i8 %v3_c71c, 32
  br i1 %tmp100, label %dec_label_pc_c840, label %dec_label_pc_c730

dec_label_pc_c730:                                ; preds = %dec_label_pc_c70c
  store i32 %v6_c3e8, i32* %r1.global-to-local, align 4
  store i1 %v8_c89c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c89c, label %dec_label_pc_c8a8, label %dec_label_pc_c73c

dec_label_pc_c73c:                                ; preds = %dec_label_pc_c840, %dec_label_pc_c730
  store i32 %v3_c444, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c8b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c8b8, label %dec_label_pc_c8c4, label %dec_label_pc_c750

dec_label_pc_c750:                                ; preds = %dec_label_pc_c8a8.dec_label_pc_c750_crit_edge, %dec_label_pc_c73c
  %v1_c754 = phi i32 [ %v1_c754.pre, %dec_label_pc_c8a8.dec_label_pc_c750_crit_edge ], [ 65535, %dec_label_pc_c73c ]
  store i32 %v3_c448, i32* %r3.global-to-local, align 4
  %v9_c754 = icmp eq i32 %v3_c448, %v1_c754
  store i1 %v9_c754, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c754, label %dec_label_pc_c8e0, label %dec_label_pc_c75c

dec_label_pc_c75c:                                ; preds = %dec_label_pc_c8c4.dec_label_pc_c75c_crit_edge, %dec_label_pc_c750
  %v1_c760 = phi i32 [ %v1_c760.pre, %dec_label_pc_c8c4.dec_label_pc_c75c_crit_edge ], [ %v1_c754, %dec_label_pc_c750 ]
  store i32 %v3_c44c, i32* %ip.global-to-local, align 4
  %v9_c760 = icmp eq i32 %v3_c44c, %v1_c760
  store i1 %v9_c760, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c760, label %dec_label_pc_c8fc, label %dec_label_pc_c768

dec_label_pc_c768:                                ; preds = %dec_label_pc_c8e0.dec_label_pc_c768_crit_edge, %dec_label_pc_c75c
  %v1_c76c = phi i32 [ %v1_c76c.pre, %dec_label_pc_c8e0.dec_label_pc_c768_crit_edge ], [ %v1_c760, %dec_label_pc_c75c ]
  store i32 %v5_c2e8, i32* %r1.global-to-local, align 4
  %v9_c76c = icmp eq i32 %v5_c2e8, %v1_c76c
  store i1 %v9_c76c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c76c, label %dec_label_pc_c918, label %dec_label_pc_c774

dec_label_pc_c774:                                ; preds = %dec_label_pc_c8fc.dec_label_pc_c774_crit_edge, %dec_label_pc_c768
  %v1_c778 = phi i32 [ %v1_c778.pre, %dec_label_pc_c8fc.dec_label_pc_c774_crit_edge ], [ %v1_c76c, %dec_label_pc_c768 ]
  store i32 %v6_c304, i32* %r2.global-to-local, align 4
  %v9_c778 = icmp eq i32 %v6_c304, %v1_c778
  store i1 %v9_c778, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c778, label %dec_label_pc_c92c, label %dec_label_pc_c780

dec_label_pc_c780:                                ; preds = %dec_label_pc_c918, %dec_label_pc_c774
  store i32 %v1_c3d4, i32* %r3.global-to-local, align 4
  store i1 %v2_c934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c934, label %dec_label_pc_c78c, label %dec_label_pc_c940

dec_label_pc_c78c:                                ; preds = %dec_label_pc_c780, %dec_label_pc_c92c, %dec_label_pc_c940
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c790 = load i32, i32* @r7, align 4
  %v1_c790 = trunc i32 %v0_c790 to i8
  %v2_c790 = load i32, i32* @r5, align 4
  %v3_c790 = add i32 %v2_c790, 10
  %v4_c790 = inttoptr i32 %v3_c790 to i8*
  store i8 %v1_c790, i8* %v4_c790, align 1
  %v0_c794 = load i32, i32* @r7, align 4
  %v1_c794 = trunc i32 %v0_c794 to i8
  %v2_c794 = load i32, i32* @r5, align 4
  %v3_c794 = add i32 %v2_c794, 11
  %v4_c794 = inttoptr i32 %v3_c794 to i8*
  store i8 %v1_c794, i8* %v4_c794, align 1
  %v0_c798 = load i32, i32* @r5, align 4
  store i32 %v0_c798, i32* @r0, align 4
  %v2_c79c = call i32 @function_d0b8(i32 %v0_c798, i32 20)
  %v3_c79c = trunc i32 %v2_c79c to i8
  %v4_c7a028 = udiv i32 %v2_c79c, 256
  %v1_c7a4 = trunc i32 %v4_c7a028 to i8
  %v2_c7a4 = load i32, i32* @r5, align 4
  %v3_c7a4 = add i32 %v2_c7a4, 11
  %v4_c7a4 = inttoptr i32 %v3_c7a4 to i8*
  store i8 %v1_c7a4, i8* %v4_c7a4, align 1
  %v3_c7a8 = load i32, i32* @r5, align 4
  %v4_c7a8 = add i32 %v3_c7a8, 10
  %v5_c7a8 = inttoptr i32 %v4_c7a8 to i8*
  store i8 %v3_c79c, i8* %v5_c7a8, align 1
  %v0_c7ac = load i32, i32* @r6, align 4
  store i32 %v0_c7ac, i32* @r1, align 4
  %v0_c7b0 = load i32, i32* @sl, align 4
  store i32 %v0_c7b0, i32* %r2.global-to-local, align 4
  %v0_c7b4 = load i32, i32* @r8, align 4
  store i32 %v0_c7b4, i32* %r3.global-to-local, align 4
  %v0_c7b8 = load i32, i32* @r7, align 4
  %v1_c7b8 = trunc i32 %v0_c7b8 to i8
  %v3_c7b8 = add i32 %v0_c7ac, 16
  %v4_c7b8 = inttoptr i32 %v3_c7b8 to i8*
  store i8 %v1_c7b8, i8* %v4_c7b8, align 1
  %v0_c7bc = load i32, i32* @r7, align 4
  %v1_c7bc = trunc i32 %v0_c7bc to i8
  %v2_c7bc = load i32, i32* @r6, align 4
  %v3_c7bc = add i32 %v2_c7bc, 17
  %v4_c7bc = inttoptr i32 %v3_c7bc to i8*
  store i8 %v1_c7bc, i8* %v4_c7bc, align 1
  %v0_c7c0 = load i32, i32* @r5, align 4
  %v4_c7c4 = call i32 @function_d114(i32 %v0_c7c0, i32 %v0_c7ac, i32 %v0_c7b0, i32 %v0_c7b4)
  %v5_c7c4 = trunc i32 %v4_c7c4 to i8
  %v4_c7c829 = udiv i32 %v4_c7c4, 256
  %v1_c7cc = trunc i32 %v4_c7c829 to i8
  %v2_c7cc = load i32, i32* @r6, align 4
  %v3_c7cc = add i32 %v2_c7cc, 17
  %v4_c7cc = inttoptr i32 %v3_c7cc to i8*
  store i8 %v1_c7cc, i8* %v4_c7cc, align 1
  %v3_c7d0 = load i32, i32* @r6, align 4
  %v4_c7d0 = add i32 %v3_c7d0, 16
  %v5_c7d0 = inttoptr i32 %v4_c7d0 to i8*
  store i8 %v5_c7c4, i8* %v5_c7d0, align 1
  %v3_c7d4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c7d4, i32* %r3.global-to-local, align 4
  %v0_c7d8 = load i32, i32* @r5, align 4
  %v1_c7d8 = add i32 %v0_c7d8, 20
  %v2_c7d8 = inttoptr i32 %v1_c7d8 to i32*
  %v3_c7d8 = load i32, i32* %v2_c7d8, align 4
  %v3_c7e0 = udiv i32 %v3_c7d8, 65536
  store i32 %v3_c7e0, i32* %r2.global-to-local, align 4
  %v5_c7e4 = mul i32 %v3_c7d4, 24
  %v1_c7e8 = load i32, i32* @sb, align 4
  %v2_c7e8 = add i32 %v1_c7e8, %v5_c7e4
  store i32 %v2_c7e8, i32* %ip.global-to-local, align 4
  %v3_c7ec27 = udiv i32 %v3_c7d8, 16777216
  %v1_c7f0 = trunc i32 %v3_c7ec27 to i8
  %v3_c7f0 = add i32 %v2_c7e8, 3
  %v4_c7f0 = inttoptr i32 %v3_c7f0 to i8*
  store i8 %v1_c7f0, i8* %v4_c7f0, align 1
  %v0_c7f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c7f4 = trunc i32 %v0_c7f4 to i8
  %v2_c7f4 = load i32, i32* %ip.global-to-local, align 4
  %v3_c7f4 = add i32 %v2_c7f4, 2
  %v4_c7f4 = inttoptr i32 %v3_c7f4 to i8*
  store i8 %v1_c7f4, i8* %v4_c7f4, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c7fc = load i32, i32* @r5, align 4
  store i32 %v0_c7fc, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-168.0.ph, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_c80c = load i32, i32* %ip.global-to-local, align 4
  %v6_c814 = inttoptr i32 %v0_c7fc to i32*
  %v7_c814 = call i32 @function_1347c(i32 %v3_c3fc, i32* %v6_c814, i32 %stack_var_-168.0.ph, i32 16384, i32 %v0_c80c, i32 16)
  %v3_c818 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c818, i32* %r3.global-to-local, align 4
  %v1_c81c = add i32 %v3_c818, 1
  %v0_c820 = load i32, i32* @fp, align 4
  %v9_c820 = icmp eq i32 %v0_c820, %v1_c81c
  store i1 %v9_c820, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c81c, i32* %stack_var_-40, align 4
  %v7_c828 = icmp sgt i32 %v0_c820, %v1_c81c
  br i1 %v7_c828, label %dec_label_pc_c70c, label %dec_label_pc_c6e4

dec_label_pc_c830:                                ; preds = %dec_label_pc_c40c
  %v1_c834 = call i32 @function_12bf0(i32 %v3_c3fc)
  br label %dec_label_pc_c838

dec_label_pc_c838:                                ; preds = %dec_label_pc_c1f8, %dec_label_pc_c830
  %v29_c83c = phi i32 [ %v3_c3fc, %dec_label_pc_c1f8 ], [ %v1_c834, %dec_label_pc_c830 ]
  ret i32 %v29_c83c

dec_label_pc_c840:                                ; preds = %dec_label_pc_c70c
  %v1_c840 = add i32 %v2_c714, 16
  %v2_c840 = inttoptr i32 %v1_c840 to i32*
  %v3_c840 = load i32, i32* %v2_c840, align 4
  %v0_c844 = call i32 @function_e7cc()
  %v3_c848 = load i32, i32* %stack_var_-40, align 4
  %v5_c850 = mul i32 %v3_c848, 24
  %v1_c858 = load i32, i32* @sb, align 4
  %v2_c858 = add i32 %v1_c858, %v5_c850
  store i32 %v2_c858, i32* %r1.global-to-local, align 4
  %v1_c85c = and i32 %v3_c840, 65280
  store i32 %v1_c85c, i32* %r3.global-to-local, align 4
  %v1_c854 = udiv i32 %v3_c840, 256
  %v3_c860 = and i32 %v1_c854, 65280
  store i32 %v3_c860, i32* %r2.global-to-local, align 4
  %v3_c864 = mul i32 %v3_c840, 16777216
  store i32 %v3_c864, i32* %ip.global-to-local, align 4
  %v1_c868 = add i32 %v2_c858, 20
  %v2_c868 = inttoptr i32 %v1_c868 to i8*
  %v3_c868 = load i8, i8* %v2_c868, align 1
  %v4_c868 = zext i8 %v3_c868 to i32
  %v4_c86c = mul nuw nsw i32 %v1_c85c, 256
  %v5_c86c = or i32 %v4_c86c, %v3_c864
  store i32 %v5_c86c, i32* %ip.global-to-local, align 4
  %v2_c874 = call i32 @llvm.bswap.i32(i32 %v3_c840)
  %v7_c878 = lshr i32 %v0_c844, %v4_c868
  %v8_c878 = add i32 %v7_c878, %v2_c874
  store i32 %v8_c878, i32* %r2.global-to-local, align 4
  %v2_c894 = call i32 @llvm.bswap.i32(i32 %v8_c878)
  store i32 %v2_c894, i32* %r3.global-to-local, align 4
  store i32 %v6_c3e8, i32* %r1.global-to-local, align 4
  store i1 %v8_c89c, i1* %cpsr_z.global-to-local, align 1
  %v1_c8a0 = load i32, i32* @r5, align 4
  %v2_c8a0 = add i32 %v1_c8a0, 16
  %v3_c8a0 = inttoptr i32 %v2_c8a0 to i32*
  store i32 %v2_c894, i32* %v3_c8a0, align 4
  br i1 %v3_c89c, label %dec_label_pc_c8a8, label %dec_label_pc_c73c

dec_label_pc_c8a8:                                ; preds = %dec_label_pc_c840, %dec_label_pc_c730
  %v0_c8a8 = call i32 @function_e7cc()
  store i32 %v3_c444, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c8b8, i1* %cpsr_z.global-to-local, align 1
  %v1_c8bc = load i32, i32* @r5, align 4
  %v2_c8bc = add i32 %v1_c8bc, 12
  %v3_c8bc = inttoptr i32 %v2_c8bc to i32*
  store i32 %v0_c8a8, i32* %v3_c8bc, align 4
  br i1 %v3_c8b8, label %dec_label_pc_c8c4, label %dec_label_pc_c8a8.dec_label_pc_c750_crit_edge

dec_label_pc_c8a8.dec_label_pc_c750_crit_edge:    ; preds = %dec_label_pc_c8a8
  %v1_c754.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c750

dec_label_pc_c8c4:                                ; preds = %dec_label_pc_c8a8, %dec_label_pc_c73c
  %v0_c8c4 = call i32 @function_e7cc()
  %v1_c8c4 = trunc i32 %v0_c8c4 to i8
  %v4_c8c830 = udiv i32 %v0_c8c4, 256
  %v1_c8cc = trunc i32 %v4_c8c830 to i8
  %v2_c8cc = load i32, i32* @r5, align 4
  %v3_c8cc = add i32 %v2_c8cc, 5
  %v4_c8cc = inttoptr i32 %v3_c8cc to i8*
  store i8 %v1_c8cc, i8* %v4_c8cc, align 1
  store i32 %v3_c448, i32* %r3.global-to-local, align 4
  %v1_c8d4 = load i32, i32* @r4, align 4
  %v9_c8d4 = icmp eq i32 %v3_c448, %v1_c8d4
  store i1 %v9_c8d4, i1* %cpsr_z.global-to-local, align 1
  %v3_c8d8 = load i32, i32* @r5, align 4
  %v4_c8d8 = add i32 %v3_c8d8, 4
  %v5_c8d8 = inttoptr i32 %v4_c8d8 to i8*
  store i8 %v1_c8c4, i8* %v5_c8d8, align 1
  %v0_c8dc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c8dc, label %dec_label_pc_c8e0, label %dec_label_pc_c8c4.dec_label_pc_c75c_crit_edge

dec_label_pc_c8c4.dec_label_pc_c75c_crit_edge:    ; preds = %dec_label_pc_c8c4
  %v1_c760.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c75c

dec_label_pc_c8e0:                                ; preds = %dec_label_pc_c8c4, %dec_label_pc_c750
  %v0_c8e0 = call i32 @function_e7cc()
  %v1_c8e0 = trunc i32 %v0_c8e0 to i8
  store i32 %v3_c44c, i32* %ip.global-to-local, align 4
  %v4_c8e8 = sdiv i32 %v0_c8e0, 256
  store i32 %v4_c8e8, i32* %r3.global-to-local, align 4
  %v1_c8ec = load i32, i32* @r4, align 4
  %v9_c8ec = icmp eq i32 %v3_c44c, %v1_c8ec
  store i1 %v9_c8ec, i1* %cpsr_z.global-to-local, align 1
  %v3_c8f0 = load i32, i32* @r5, align 4
  %v4_c8f0 = add i32 %v3_c8f0, 20
  %v5_c8f0 = inttoptr i32 %v4_c8f0 to i8*
  store i8 %v1_c8e0, i8* %v5_c8f0, align 1
  %v0_c8f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_c8f4 = trunc i32 %v0_c8f4 to i8
  %v2_c8f4 = load i32, i32* @r6, align 4
  %v3_c8f4 = add i32 %v2_c8f4, 1
  %v4_c8f4 = inttoptr i32 %v3_c8f4 to i8*
  store i8 %v1_c8f4, i8* %v4_c8f4, align 1
  %v0_c8f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c8f8, label %dec_label_pc_c8fc, label %dec_label_pc_c8e0.dec_label_pc_c768_crit_edge

dec_label_pc_c8e0.dec_label_pc_c768_crit_edge:    ; preds = %dec_label_pc_c8e0
  %v1_c76c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c768

dec_label_pc_c8fc:                                ; preds = %dec_label_pc_c8e0, %dec_label_pc_c75c
  %v0_c8fc = call i32 @function_e7cc()
  %v1_c8fc = trunc i32 %v0_c8fc to i8
  store i32 %v5_c2e8, i32* %r1.global-to-local, align 4
  %v4_c904 = sdiv i32 %v0_c8fc, 256
  store i32 %v4_c904, i32* %r3.global-to-local, align 4
  %v1_c908 = load i32, i32* @r4, align 4
  %v9_c908 = icmp eq i32 %v5_c2e8, %v1_c908
  store i1 %v9_c908, i1* %cpsr_z.global-to-local, align 1
  %v1_c90c = trunc i32 %v4_c904 to i8
  %v2_c90c = load i32, i32* @r6, align 4
  %v3_c90c = add i32 %v2_c90c, 3
  %v4_c90c = inttoptr i32 %v3_c90c to i8*
  store i8 %v1_c90c, i8* %v4_c90c, align 1
  %v3_c910 = load i32, i32* @r6, align 4
  %v4_c910 = add i32 %v3_c910, 2
  %v5_c910 = inttoptr i32 %v4_c910 to i8*
  store i8 %v1_c8fc, i8* %v5_c910, align 1
  %v0_c914 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c914, label %dec_label_pc_c918, label %dec_label_pc_c8fc.dec_label_pc_c774_crit_edge

dec_label_pc_c8fc.dec_label_pc_c774_crit_edge:    ; preds = %dec_label_pc_c8fc
  %v1_c778.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c774

dec_label_pc_c918:                                ; preds = %dec_label_pc_c8fc, %dec_label_pc_c768
  %v0_c918 = call i32 @function_e7cc()
  store i32 %v6_c304, i32* %r2.global-to-local, align 4
  %v1_c920 = load i32, i32* @r4, align 4
  %v9_c920 = icmp eq i32 %v6_c304, %v1_c920
  store i1 %v9_c920, i1* %cpsr_z.global-to-local, align 1
  %v1_c924 = load i32, i32* @r6, align 4
  %v2_c924 = add i32 %v1_c924, 4
  %v3_c924 = inttoptr i32 %v2_c924 to i32*
  store i32 %v0_c918, i32* %v3_c924, align 4
  br i1 %v9_c920, label %dec_label_pc_c92c, label %dec_label_pc_c780

dec_label_pc_c92c:                                ; preds = %dec_label_pc_c918, %dec_label_pc_c774
  %v0_c92c = call i32 @function_e7cc()
  store i32 %v1_c3d4, i32* %r3.global-to-local, align 4
  store i1 %v2_c934, i1* %cpsr_z.global-to-local, align 1
  %v1_c938 = load i32, i32* @r6, align 4
  %v2_c938 = add i32 %v1_c938, 8
  %v3_c938 = inttoptr i32 %v2_c938 to i32*
  store i32 %v0_c92c, i32* %v3_c938, align 4
  br i1 %v2_c934, label %dec_label_pc_c78c, label %dec_label_pc_c940

dec_label_pc_c940:                                ; preds = %dec_label_pc_c780, %dec_label_pc_c92c
  %v0_c940 = load i32, i32* @r5, align 4
  %v1_c940 = add i32 %v0_c940, 40
  store i32 %v6_c3ac, i32* @r1, align 4
  %v1_c948 = inttoptr i32 %v1_c940 to i8*
  %v2_c948 = call i32 @function_e94c(i8* %v1_c948)
  br label %dec_label_pc_c78c

dec_label_pc_c950:                                ; preds = %dec_label_pc_c434
  store i32 %v6_c3ac, i32* %r3.global-to-local, align 4
  %v1_c958 = add i32 %v6_c3ac, 40
  store i32 %v1_c958, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c6e4.preheader

; uselistorder directives
  uselistorder i32 %v1_c958, { 1, 0 }
  uselistorder i32 %v4_c904, { 1, 0 }
  uselistorder i32 %v2_c894, { 1, 0 }
  uselistorder i32 %v3_c864, { 1, 0 }
  uselistorder i32 %v3_c840, { 1, 3, 2, 0 }
  uselistorder i32 %v0_c820, { 1, 2, 0 }
  uselistorder i32 %v1_c81c, { 2, 0, 3, 1 }
  uselistorder i32 %v0_c7ac, { 1, 0, 2 }
  uselistorder i32 %v0_c6f0, { 2, 0, 1 }
  uselistorder i32 %v0_c6e4, { 1, 0 }
  uselistorder i1 %v2_c934, { 2, 3, 1, 0 }
  uselistorder i1 %v3_c8b8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_c6cc, { 1, 0, 2, 3 }
  uselistorder i8 %v5_c530, { 1, 0 }
  uselistorder i32 %v1_c4f8, { 1, 0 }
  uselistorder i32 %v1_c4f4, { 1, 0 }
  uselistorder i32 %v1_c4f0, { 1, 0 }
  uselistorder i32 %v1_c4cc, { 1, 0 }
  uselistorder i32 %v1_c4c8, { 1, 0 }
  uselistorder i32 %v1_c4c4, { 1, 0 }
  uselistorder i32 %v1_c4b8, { 1, 0 }
  uselistorder i32 %v1_c494, { 1, 0 }
  uselistorder i32 %v1_c484, { 1, 0 }
  uselistorder i32 %v1_c470, { 3, 0, 2, 1 }
  uselistorder i32 %v0_c450, { 1, 0, 2 }
  uselistorder i32 %v3_c444, { 0, 1, 3, 2 }
  uselistorder i32 %v0_c438, { 3, 0, 1, 2 }
  uselistorder i32 %v0_c434, { 0, 2, 1, 3 }
  uselistorder i1 %v7_c42c, { 1, 0 }
  uselistorder i1 %v7_c400, { 1, 0 }
  uselistorder i32 %v3_c3fc, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v6_c3e8, { 4, 3, 0, 5, 1, 2 }
  uselistorder i32 %v1_c3d4, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_c3ac, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32 %v6_c304, { 3, 2, 1, 0 }
  uselistorder i32 %v5_c2e8, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 %v1_c298, { 1, 0 }
  uselistorder i32 %v6_c230, { 1, 0 }
  uselistorder i32 %v2_c218, { 0, 3, 1, 2 }
  uselistorder i32 %v1_c1fc, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 37, 36, 39, 38, 0 }
  uselistorder i32 (i8*)* @function_e94c, { 0, 1, 6, 7, 2, 3, 4, 5, 8, 9, 10 }
  uselistorder label %dec_label_pc_c940, { 1, 0 }
  uselistorder label %dec_label_pc_c838, { 1, 0 }
  uselistorder label %dec_label_pc_c78c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c6e4.preheader, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_c96c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c96c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_c96c = load i32, i32* @r4, align 4
  %v12_c96c = load i32, i32* @r7, align 4
  %v1_c970 = urem i32 %arg1, 256
  store i32 %v1_c970, i32* @sl, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %v1_c970, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_c988 = urem i32 %arg3, 256
  store i32 %v1_c988, i32* @r4, align 4
  %v2_c98c = call i32 @function_137cc(i32 %v1_c970, i32 4)
  %v0_c990 = load i32, i32* @r5, align 4
  store i32 %v0_c990, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c98c, i32* %fp.global-to-local, align 4
  %v0_c9a0 = load i32, i32* @r4, align 4
  store i32 %v0_c9a0, i32* %r0.global-to-local, align 4
  %v4_c9a4 = inttoptr i32 %v0_c990 to i32*
  %v5_c9a4 = call i32 @function_85e0(i32 %v0_c9a0, i32* %v4_c9a4, i32 2, i32 0)
  %v1_c9b0 = urem i32 %v5_c9a4, 256
  store i32 %v1_c9b0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c9bc = load i32, i32* @r5, align 4
  store i32 %v0_c9bc, i32* %r1.global-to-local, align 4
  %v0_c9c0 = load i32, i32* @r4, align 4
  store i32 %v0_c9c0, i32* %r0.global-to-local, align 4
  %v5_c9c4 = trunc i32 %v5_c9a4 to i8
  %v6_c9c8 = inttoptr i32 %v0_c9bc to i32*
  %v7_c9c8 = call i32 @function_85e0(i32 %v0_c9c0, i32* %v6_c9c8, i32 3, i32 65535)
  %v0_c9cc = load i32, i32* @r5, align 4
  store i32 %v0_c9cc, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c9dc = load i32, i32* @r4, align 4
  store i32 %v0_c9dc, i32* %r0.global-to-local, align 4
  %v5_c9e0 = inttoptr i32 %v0_c9cc to i32*
  %v6_c9e0 = call i32 @function_85e0(i32 %v0_c9dc, i32* %v5_c9e0, i32 4, i32 64)
  %v1_c9e8 = urem i32 %v6_c9e0, 256
  store i32 %v1_c9e8, i32* %ip.global-to-local, align 4
  %v0_c9ec = load i32, i32* @r5, align 4
  store i32 %v0_c9ec, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c9f8 = load i32, i32* @r4, align 4
  store i32 %v0_c9f8, i32* %r0.global-to-local, align 4
  %v6_ca00 = inttoptr i32 %v0_c9ec to i32*
  %v7_ca00 = call i32 @function_85e0(i32 %v0_c9f8, i32* %v6_ca00, i32 5, i32 1)
  %v1_ca0c = urem i32 %v7_ca00, 256
  store i32 %v1_ca0c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_ca18 = load i32, i32* @r5, align 4
  store i32 %v0_ca18, i32* %r1.global-to-local, align 4
  %v0_ca1c = load i32, i32* @r4, align 4
  store i32 %v0_ca1c, i32* %r0.global-to-local, align 4
  %v5_ca24 = inttoptr i32 %v0_ca18 to i32*
  %v6_ca24 = call i32 @function_85e0(i32 %v0_ca1c, i32* %v5_ca24, i32 6, i32 65535)
  %v0_ca2c = load i32, i32* @r5, align 4
  store i32 %v0_ca2c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_ca24, i32* @r7, align 4
  %v0_ca3c = load i32, i32* @r4, align 4
  store i32 %v0_ca3c, i32* %r0.global-to-local, align 4
  %v4_ca40 = inttoptr i32 %v0_ca2c to i32*
  %v5_ca40 = call i32 @function_85e0(i32 %v0_ca3c, i32* %v4_ca40, i32 7, i32 65535)
  %v0_ca48 = load i32, i32* @r5, align 4
  store i32 %v0_ca48, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_ca40, i32* @r6, align 4
  %v0_ca58 = load i32, i32* @r4, align 4
  store i32 %v0_ca58, i32* %r0.global-to-local, align 4
  %v4_ca5c = inttoptr i32 %v0_ca48 to i32*
  %v5_ca5c = call i32 @function_85e0(i32 %v0_ca58, i32* %v4_ca5c, i32 17, i32 65535)
  %v0_ca60 = load i32, i32* @r5, align 4
  store i32 %v0_ca60, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ca70 = load i32, i32* @r4, align 4
  store i32 %v0_ca70, i32* %r0.global-to-local, align 4
  %v5_ca74 = inttoptr i32 %v0_ca60 to i32*
  %v6_ca74 = call i32 @function_85e0(i32 %v0_ca70, i32* %v5_ca74, i32 18, i32 0)
  %v0_ca78 = load i32, i32* @r5, align 4
  store i32 %v0_ca78, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ca88 = load i32, i32* @r4, align 4
  store i32 %v0_ca88, i32* %r0.global-to-local, align 4
  %v5_ca8c = inttoptr i32 %v0_ca78 to i32*
  %v6_ca8c = call i32 @function_85e0(i32 %v0_ca88, i32* %v5_ca8c, i32 11, i32 0)
  %v0_ca90 = load i32, i32* @r5, align 4
  store i32 %v0_ca90, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_caa0 = load i32, i32* @r4, align 4
  store i32 %v0_caa0, i32* %r0.global-to-local, align 4
  %v5_caa4 = inttoptr i32 %v0_ca90 to i32*
  %v6_caa4 = call i32 @function_85e0(i32 %v0_caa0, i32* %v5_caa4, i32 12, i32 0)
  %v0_caa8 = load i32, i32* @r5, align 4
  store i32 %v0_caa8, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cab8 = load i32, i32* @r4, align 4
  store i32 %v0_cab8, i32* %r0.global-to-local, align 4
  %v5_cabc = inttoptr i32 %v0_caa8 to i32*
  %v6_cabc = call i32 @function_85e0(i32 %v0_cab8, i32* %v5_cabc, i32 13, i32 0)
  %v0_cac0 = load i32, i32* @r5, align 4
  store i32 %v0_cac0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cad0 = load i32, i32* @r4, align 4
  store i32 %v0_cad0, i32* %r0.global-to-local, align 4
  %v5_cad4 = inttoptr i32 %v0_cac0 to i32*
  %v6_cad4 = call i32 @function_85e0(i32 %v0_cad0, i32* %v5_cad4, i32 14, i32 0)
  %v0_cad8 = load i32, i32* @r5, align 4
  store i32 %v0_cad8, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cae8 = load i32, i32* @r4, align 4
  store i32 %v0_cae8, i32* %r0.global-to-local, align 4
  %v5_caec = inttoptr i32 %v0_cad8 to i32*
  %v6_caec = call i32 @function_85e0(i32 %v0_cae8, i32* %v5_caec, i32 15, i32 1)
  %v0_caf0 = load i32, i32* @r5, align 4
  store i32 %v0_caf0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cb00 = load i32, i32* @r4, align 4
  store i32 %v0_cb00, i32* %r0.global-to-local, align 4
  %v5_cb04 = inttoptr i32 %v0_caf0 to i32*
  %v6_cb04 = call i32 @function_85e0(i32 %v0_cb00, i32* %v5_cb04, i32 16, i32 0)
  %v2_cb10 = load i32, i32* @global_var_1dc68.49, align 4
  store i32 %v2_cb10, i32* %r3.global-to-local, align 4
  %v0_cb14 = load i32, i32* @r5, align 4
  store i32 %v0_cb14, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_cb1c = load i32, i32* @r4, align 4
  store i32 %v0_cb1c, i32* %r0.global-to-local, align 4
  %v5_cb20 = inttoptr i32 %v0_cb14 to i32*
  %v6_cb20 = call i32 @function_8574(i32 %v0_cb1c, i32* %v5_cb20, i32 25, i32 %v2_cb10, i32 %v6_cb04)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_cb34 = call i32 @function_134e0(i32 2, i32 3, i32 6)
  store i32 %v3_cb34, i32* %r0.global-to-local, align 4
  %v7_cb38 = icmp eq i32 %v3_cb34, -1
  store i1 %v7_cb38, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_cb34, i32* %sb.global-to-local, align 4
  br i1 %v7_cb38, label %dec_label_pc_d0ac, label %dec_label_pc_cb44

dec_label_pc_cb44:                                ; preds = %dec_label_pc_c96c
  store i32 1, i32* %stack_var_-40, align 4
  %v6_cb4c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_cb4c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_cb60 = call i32 @function_134b0(i32 %v3_cb34, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_cb60, i32* %r0.global-to-local, align 4
  %v7_cb64 = icmp eq i32 %v6_cb60, -1
  store i1 %v7_cb64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_cb64, label %dec_label_pc_d0a4, label %dec_label_pc_cb6c

dec_label_pc_cb6c:                                ; preds = %dec_label_pc_cb44
  %v3_cb70 = mul i32 %v7_c9c8, 65536
  store i32 %v3_cb70, i32* %r4.global-to-local, align 4
  %v3_cb74 = urem i32 %v7_c9c8, 65536
  %v0_cb84 = load i32, i32* @r7, align 4
  %v3_cb84 = mul i32 %v0_cb84, 65536
  store i32 %v3_cb84, i32* %r0.global-to-local, align 4
  %v0_cb88 = load i32, i32* @r6, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_cb90 = urem i32 %v0_cb84, 65536
  store i32 %v3_cb90, i32* %ip.global-to-local, align 4
  %v3_cb94 = urem i32 %v0_cb88, 65536
  store i32 %v3_cb94, i32* %r2.global-to-local, align 4
  %v1_cb98 = urem i32 %v6_ca8c, 256
  store i32 %v1_cb98, i32* %r3.global-to-local, align 4
  %v0_cb9c = load i32, i32* @sl, align 4
  %v2_cb9c = icmp eq i32 %v0_cb9c, 0
  store i1 %v2_cb9c, i1* %cpsr_z.global-to-local, align 1
  %tmp69 = icmp slt i32 %v0_cb9c, 1
  br i1 %tmp69, label %dec_label_pc_ce50, label %dec_label_pc_cbb0

dec_label_pc_cbb0:                                ; preds = %dec_label_pc_cb6c
  %v3_cbb8 = mul i32 %v5_ca5c, 65536
  store i32 %v3_cbb8, i32* @lr, align 4
  %v1_cbc8 = urem i32 %v0_cb88, 256
  %tmp70 = udiv i32 %v0_cb84, 256
  %v3_cbcc = urem i32 %tmp70, 256
  %v1_cbd0 = urem i32 %v0_cb84, 256
  %v4_cbd4 = mul nuw nsw i32 %v1_cbd0, 256
  %v5_cbd4 = or i32 %v4_cbd4, %v3_cbcc
  store i32 %v5_cbd4, i32* @r7, align 4
  %tmp71 = udiv i32 %v7_c9c8, 256
  %tmp72 = mul i32 %v5_ca5c, 256
  %v1_cbf0 = and i32 %tmp72, 65280
  %v1_cbf4 = urem i32 %v6_ca8c, 2
  %v3_cbf8 = mul nuw nsw i32 %v1_cbc8, 256
  store i32 %v3_cbf8, i32* %r1.global-to-local, align 4
  %v5_cbfc = trunc i32 %tmp71 to i8
  %tmp73 = udiv i32 %v0_cb88, 256
  %v4_cc00 = urem i32 %tmp73, 256
  %v5_cc00 = or i32 %v4_cc00, %v3_cbf8
  store i32 %v5_cc00, i32* @r6, align 4
  %v1_cc04 = urem i32 %v6_caa4, 2
  %v1_cc08 = urem i32 %v6_cabc, 2
  %tmp74 = udiv i32 %v5_ca5c, 256
  %v4_cc0c = urem i32 %tmp74, 256
  %v5_cc0c = or i32 %v4_cc0c, %v1_cbf0
  store i32 %v5_cc0c, i32* @r5, align 4
  %v1_cc2c = urem i32 %v6_cad4, 2
  %v1_cc30 = urem i32 %v6_caec, 2
  %v1_cc3c = urem i32 %v6_cb04, 2
  store i32 %v1_cc3c, i32* %r0.global-to-local, align 4
  %v3_cc40 = udiv i32 %v7_c9c8, 65536
  store i32 %v3_cc40, i32* %r2.global-to-local, align 4
  store i32 %v1_cbd0, i32* %r3.global-to-local, align 4
  store i32 %v1_cbc8, i32* %ip.global-to-local, align 4
  %v5_cc58 = trunc i32 %v0_cb88 to i8
  store i32 0, i32* @r4, align 4
  %sext = mul i32 %v6_c9e0, 16777216
  %v4_cca8 = sdiv i32 %sext, 16777216
  %tmp = sub nsw i32 0, %v1_cbf4
  %v4_cd1c = and i32 %tmp, 32
  %tmp78 = sub nsw i32 0, %v1_cc04
  %v4_cd30 = and i32 %tmp78, 16
  %tmp79 = sub nsw i32 0, %v1_cc08
  %v4_cd44 = and i32 %tmp79, 8
  %tmp80 = sub nsw i32 0, %v1_cc2c
  %v4_cd58 = and i32 %tmp80, 4
  %tmp81 = sub nsw i32 0, %v1_cc30
  %v3_cd6c = and i32 %tmp81, 2
  %v7_cd9c = sext i8 %v5_cc58 to i32
  %sext77 = mul i32 %v0_cb84, 16777216
  %v3_cd9c = sdiv i32 %sext77, 16777216
  br label %dec_label_pc_cc60

dec_label_pc_cc60:                                ; preds = %bb76, %dec_label_pc_cbb0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_cc68 = call i32 @function_137cc(i32 128, i32 1)
  store i32 %v2_cc68, i32* %r0.global-to-local, align 4
  %v3_cc6c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cc6c, i32* %r2.global-to-local, align 4
  %v1_cc70 = load i32, i32* %fp.global-to-local, align 4
  %v2_cc70 = load i32, i32* @r4, align 4
  %v5_cc70 = mul i32 %v2_cc70, 4
  %v6_cc70 = add i32 %v5_cc70, %v1_cc70
  %v7_cc70 = inttoptr i32 %v6_cc70 to i32*
  store i32 %v2_cc68, i32* %v7_cc70, align 4
  %v0_cc74 = load i32, i32* %fp.global-to-local, align 4
  %v1_cc74 = load i32, i32* %r2.global-to-local, align 4
  %v4_cc74 = mul i32 %v1_cc74, 4
  %v5_cc74 = add i32 %v4_cc74, %v0_cc74
  %v6_cc74 = inttoptr i32 %v5_cc74 to i32*
  %v7_cc74 = load i32, i32* %v6_cc74, align 4
  store i32 %v7_cc74, i32* %r4.global-to-local, align 4
  %v1_cc78 = inttoptr i32 %v7_cc74 to i8*
  %v2_cc78 = load i8, i8* %v1_cc78, align 1
  %tmp82 = urem i8 %v2_cc78, 16
  %v1_cc7c = zext i8 %tmp82 to i32
  %v1_cc80 = or i32 %v1_cc7c, 64
  store i32 %v1_cc80, i32* %r3.global-to-local, align 4
  %v1_cc84 = trunc i32 %v1_cc80 to i8
  store i8 %v1_cc84, i8* %v1_cc78, align 1
  %v0_cc88 = load i32, i32* %r4.global-to-local, align 4
  %v1_cc88 = inttoptr i32 %v0_cc88 to i8*
  %v2_cc88 = load i8, i8* %v1_cc88, align 1
  %v1_cc8c = and i8 %v2_cc88, -16
  %v1_cc90 = or i8 %v1_cc8c, 5
  store i32 %v1_ca0c, i32* %r0.global-to-local, align 4
  store i8 %v1_cc90, i8* %v1_cc88, align 1
  %v2_cca0 = load i32, i32* %r4.global-to-local, align 4
  %v3_cca0 = add i32 %v2_cca0, 1
  %v4_cca0 = inttoptr i32 %v3_cca0 to i8*
  store i8 %v5_c9c4, i8* %v4_cca0, align 1
  store i32 %v4_cca8, i32* %r2.global-to-local, align 4
  %v2_ccac = load i32, i32* %r4.global-to-local, align 4
  %v3_ccac = add i32 %v2_ccac, 4
  %v4_ccac = inttoptr i32 %v3_ccac to i8*
  store i8 %v5_cbfc, i8* %v4_ccac, align 1
  store i32 6, i32* %ip.global-to-local, align 4
  %v0_ccb8 = load i32, i32* %r0.global-to-local, align 4
  %v2_ccb8 = icmp eq i32 %v0_ccb8, 0
  store i1 %v2_ccb8, i1* %cpsr_z.global-to-local, align 1
  %v2_ccbc = load i32, i32* %r4.global-to-local, align 4
  %v3_ccbc = add i32 %v2_ccbc, 3
  %v4_ccbc = inttoptr i32 %v3_ccbc to i8*
  store i8 60, i8* %v4_ccbc, align 1
  store i32 %v3_cc40, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ccc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_ccc8 = trunc i32 %v0_ccc8 to i8
  %v2_ccc8 = load i32, i32* %r4.global-to-local, align 4
  %v3_ccc8 = add i32 %v2_ccc8, 8
  %v4_ccc8 = inttoptr i32 %v3_ccc8 to i8*
  store i8 %v1_ccc8, i8* %v4_ccc8, align 1
  %v0_cccc = load i32, i32* %ip.global-to-local, align 4
  %v1_cccc = trunc i32 %v0_cccc to i8
  %v2_cccc = load i32, i32* %r4.global-to-local, align 4
  %v3_cccc = add i32 %v2_cccc, 9
  %v4_cccc = inttoptr i32 %v3_cccc to i8*
  store i8 %v1_cccc, i8* %v4_cccc, align 1
  %v0_ccd0 = load i32, i32* %r3.global-to-local, align 4
  %v1_ccd0 = trunc i32 %v0_ccd0 to i8
  %v2_ccd0 = load i32, i32* %r4.global-to-local, align 4
  %v3_ccd0 = add i32 %v2_ccd0, 2
  %v4_ccd0 = inttoptr i32 %v3_ccd0 to i8*
  store i8 %v1_ccd0, i8* %v4_ccd0, align 1
  %v3_ccd4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ccd4, i32* %r2.global-to-local, align 4
  %v0_ccd8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ccd8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_cc60
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_ccdc = load i32, i32* %r4.global-to-local, align 4
  %v4_ccdc = add i32 %v3_ccdc, 6
  %v5_ccdc = inttoptr i32 %v4_ccdc to i8*
  store i8 64, i8* %v5_ccdc, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_cc60, %bb
  %v0_cce0 = load i32, i32* %r0.global-to-local, align 4
  %v1_cce0 = trunc i32 %v0_cce0 to i8
  %v2_cce0 = load i32, i32* %r4.global-to-local, align 4
  %v3_cce0 = add i32 %v2_cce0, 5
  %v4_cce0 = inttoptr i32 %v3_cce0 to i8*
  store i8 %v1_cce0, i8* %v4_cce0, align 1
  %v0_cce4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cce4, label %.thread9, label %bb75

.thread9:                                         ; preds = %.thread
  store i32 %v6_cb20, i32* %r0.global-to-local, align 4
  br label %bb76

bb75:                                             ; preds = %.thread
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v6_cb20, i32* %r0.global-to-local, align 4
  %v3_ccec = load i32, i32* %r4.global-to-local, align 4
  %v4_ccec = add i32 %v3_ccec, 7
  %v5_ccec = inttoptr i32 %v4_ccec to i8*
  store i8 0, i8* %v5_ccec, align 1
  %v0_ccf4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb76

bb76:                                             ; preds = %.thread9, %bb75
  %v0_ccf4 = phi i32 [ %v6_cb20, %.thread9 ], [ %v0_ccf4.pre, %bb75 ]
  %v0_ccf0 = load i32, i32* %r2.global-to-local, align 4
  %v3_ccf0 = mul i32 %v0_ccf0, 32
  store i32 %v3_ccf0, i32* %r3.global-to-local, align 4
  %v1_ccf4 = load i32, i32* %r4.global-to-local, align 4
  %v2_ccf4 = add i32 %v1_ccf4, 12
  %v3_ccf4 = inttoptr i32 %v2_ccf4 to i32*
  store i32 %v0_ccf4, i32* %v3_ccf4, align 4
  %v0_ccf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_ccf8 = load i32, i32* %r2.global-to-local, align 4
  %tmp83 = mul i32 %v1_ccf8, -8
  %v5_ccf8 = add i32 %v0_ccf8, %tmp83
  %v1_ccfc = load i32, i32* @r8, align 4
  %v2_ccfc = add i32 %v1_ccfc, %v5_ccf8
  store i32 %v2_ccfc, i32* %r3.global-to-local, align 4
  %v1_cd00 = add i32 %v2_ccfc, 16
  %v2_cd00 = inttoptr i32 %v1_cd00 to i32*
  %v3_cd00 = load i32, i32* %v2_cd00, align 4
  store i32 %v3_cd00, i32* %r2.global-to-local, align 4
  %v0_cd04 = load i32, i32* @r7, align 4
  %v1_cd04 = trunc i32 %v0_cd04 to i8
  %v2_cd04 = load i32, i32* %r4.global-to-local, align 4
  %v3_cd04 = add i32 %v2_cd04, 20
  %v4_cd04 = inttoptr i32 %v3_cd04 to i8*
  store i8 %v1_cd04, i8* %v4_cd04, align 1
  %v0_cd08 = load i32, i32* %r2.global-to-local, align 4
  %v1_cd08 = load i32, i32* %r4.global-to-local, align 4
  %v2_cd08 = add i32 %v1_cd08, 16
  %v3_cd08 = inttoptr i32 %v2_cd08 to i32*
  store i32 %v0_cd08, i32* %v3_cd08, align 4
  %v0_cd0c = load i32, i32* %r4.global-to-local, align 4
  %v1_cd0c = add i32 %v0_cd0c, 20
  store i32 %v1_cd0c, i32* %r1.global-to-local, align 4
  %v1_cd10 = add i32 %v0_cd0c, 33
  %v2_cd10 = inttoptr i32 %v1_cd10 to i8*
  %v3_cd10 = load i8, i8* %v2_cd10, align 1
  %v4_cd10 = zext i8 %v3_cd10 to i32
  store i32 %v1_cbf4, i32* %r2.global-to-local, align 4
  %v1_cd18 = and i32 %v4_cd10, 223
  %v5_cd1c = or i32 %v1_cd18, %v4_cd1c
  store i32 %v5_cd1c, i32* %r3.global-to-local, align 4
  %v1_cd20 = trunc i32 %v5_cd1c to i8
  store i8 %v1_cd20, i8* %v2_cd10, align 1
  %v0_cd24 = load i32, i32* %r1.global-to-local, align 4
  %v1_cd24 = add i32 %v0_cd24, 13
  %v2_cd24 = inttoptr i32 %v1_cd24 to i8*
  %v3_cd24 = load i8, i8* %v2_cd24, align 1
  %v4_cd24 = zext i8 %v3_cd24 to i32
  store i32 %v1_cc04, i32* %r3.global-to-local, align 4
  %v1_cd2c = and i32 %v4_cd24, 239
  %v5_cd30 = or i32 %v1_cd2c, %v4_cd30
  store i32 %v5_cd30, i32* %r2.global-to-local, align 4
  %v1_cd34 = trunc i32 %v5_cd30 to i8
  store i8 %v1_cd34, i8* %v2_cd24, align 1
  %v0_cd38 = load i32, i32* %r1.global-to-local, align 4
  %v1_cd38 = add i32 %v0_cd38, 13
  %v2_cd38 = inttoptr i32 %v1_cd38 to i8*
  %v3_cd38 = load i8, i8* %v2_cd38, align 1
  %v4_cd38 = zext i8 %v3_cd38 to i32
  store i32 %v1_cc08, i32* %ip.global-to-local, align 4
  %v1_cd40 = and i32 %v4_cd38, 247
  %v5_cd44 = or i32 %v1_cd40, %v4_cd44
  store i32 %v5_cd44, i32* %r3.global-to-local, align 4
  %v1_cd48 = trunc i32 %v5_cd44 to i8
  store i8 %v1_cd48, i8* %v2_cd38, align 1
  %v0_cd4c = load i32, i32* %r1.global-to-local, align 4
  %v1_cd4c = add i32 %v0_cd4c, 13
  %v2_cd4c = inttoptr i32 %v1_cd4c to i8*
  %v3_cd4c = load i8, i8* %v2_cd4c, align 1
  %v4_cd4c = zext i8 %v3_cd4c to i32
  store i32 %v1_cc2c, i32* %r0.global-to-local, align 4
  %v1_cd54 = and i32 %v4_cd4c, 251
  %v5_cd58 = or i32 %v1_cd54, %v4_cd58
  store i32 %v5_cd58, i32* %r2.global-to-local, align 4
  %v1_cd5c = trunc i32 %v5_cd58 to i8
  store i8 %v1_cd5c, i8* %v2_cd4c, align 1
  %v0_cd60 = load i32, i32* %r1.global-to-local, align 4
  %v1_cd60 = add i32 %v0_cd60, 13
  %v2_cd60 = inttoptr i32 %v1_cd60 to i8*
  %v3_cd60 = load i8, i8* %v2_cd60, align 1
  %v4_cd60 = zext i8 %v3_cd60 to i32
  store i32 %v1_cc30, i32* %r2.global-to-local, align 4
  %v1_cd68 = and i32 %v4_cd60, 253
  %v4_cd6c = or i32 %v1_cd68, %v3_cd6c
  store i32 %v4_cd6c, i32* %r3.global-to-local, align 4
  %v1_cd70 = trunc i32 %v4_cd6c to i8
  store i8 %v1_cd70, i8* %v2_cd60, align 1
  %v0_cd74 = load i32, i32* %r1.global-to-local, align 4
  %v1_cd74 = add i32 %v0_cd74, 12
  %v2_cd74 = inttoptr i32 %v1_cd74 to i8*
  %v3_cd74 = load i8, i8* %v2_cd74, align 1
  %v4_cd74 = zext i8 %v3_cd74 to i32
  store i32 %v4_cd74, i32* %r2.global-to-local, align 4
  %v1_cd78 = add i32 %v0_cd74, 13
  %v2_cd78 = inttoptr i32 %v1_cd78 to i8*
  %v3_cd78 = load i8, i8* %v2_cd78, align 1
  %v4_cd78 = zext i8 %v3_cd78 to i32
  %tmp84 = urem i8 %v3_cd74, 16
  %v1_cd80 = zext i8 %tmp84 to i32
  %v1_cd84 = and i32 %v4_cd78, 254
  %v2_cd88 = or i32 %v1_cd84, %v1_cc3c
  %v1_cd8c = or i32 %v1_cd80, 160
  store i32 %v1_cd8c, i32* %r2.global-to-local, align 4
  %v1_cd90 = trunc i32 %v2_cd88 to i8
  store i8 %v1_cd90, i8* %v2_cd78, align 1
  %v0_cd94 = load i32, i32* %r2.global-to-local, align 4
  %v1_cd94 = trunc i32 %v0_cd94 to i8
  %v2_cd94 = load i32, i32* %r1.global-to-local, align 4
  %v3_cd94 = add i32 %v2_cd94, 12
  %v4_cd94 = inttoptr i32 %v3_cd94 to i8*
  store i8 %v1_cd94, i8* %v4_cd94, align 1
  store i32 %v3_cd9c, i32* %r0.global-to-local, align 4
  store i32 %v7_cd9c, i32* %r2.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_cda8 = load i32, i32* %r1.global-to-local, align 4
  %v3_cda8 = add i32 %v2_cda8, 3
  %v4_cda8 = inttoptr i32 %v3_cda8 to i8*
  store i8 %v5_cc58, i8* %v4_cda8, align 1
  %v0_cdac = load i32, i32* %r0.global-to-local, align 4
  %v1_cdac = trunc i32 %v0_cdac to i8
  %v2_cdac = load i32, i32* %r1.global-to-local, align 4
  %v3_cdac = add i32 %v2_cdac, 1
  %v4_cdac = inttoptr i32 %v3_cdac to i8*
  store i8 %v1_cdac, i8* %v4_cdac, align 1
  %v0_cdb0 = load i32, i32* @r6, align 4
  %v1_cdb0 = trunc i32 %v0_cdb0 to i8
  %v2_cdb0 = load i32, i32* %r1.global-to-local, align 4
  %v3_cdb0 = add i32 %v2_cdb0, 2
  %v4_cdb0 = inttoptr i32 %v3_cdb0 to i8*
  store i8 %v1_cdb0, i8* %v4_cdb0, align 1
  %v0_cdb4 = load i32, i32* @r5, align 4
  %v1_cdb4 = load i32, i32* %r1.global-to-local, align 4
  %v2_cdb4 = add i32 %v1_cdb4, 4
  %v3_cdb4 = inttoptr i32 %v2_cdb4 to i32*
  store i32 %v0_cdb4, i32* %v3_cdb4, align 4
  %v0_cdb8 = load i32, i32* %ip.global-to-local, align 4
  %v1_cdb8 = trunc i32 %v0_cdb8 to i8
  %v2_cdb8 = load i32, i32* %r4.global-to-local, align 4
  %v3_cdb8 = add i32 %v2_cdb8, 41
  %v4_cdb8 = inttoptr i32 %v3_cdb8 to i8*
  store i8 %v1_cdb8, i8* %v4_cdb8, align 1
  %v0_cdbc = load i32, i32* %r3.global-to-local, align 4
  %v1_cdbc = trunc i32 %v0_cdbc to i8
  %v2_cdbc = load i32, i32* %r4.global-to-local, align 4
  %v3_cdbc = add i32 %v2_cdbc, 40
  %v4_cdbc = inttoptr i32 %v3_cdbc to i8*
  store i8 %v1_cdbc, i8* %v4_cdbc, align 1
  %v0_cdc0 = call i32 @function_e7cc()
  %v1_cdc4 = mul i32 %v0_cdc0, 256
  %v1_cdc8 = and i32 %v1_cdc4, 3840
  %v1_cdcc = or i32 %v1_cdc8, 28672
  %v3_cdd4 = add nuw nsw i32 %v1_cdcc, 2048
  %v3_cde07 = udiv i32 %v3_cdd4, 256
  store i32 %v3_cde07, i32* %r1.global-to-local, align 4
  %v0_cde4 = load i32, i32* %r4.global-to-local, align 4
  %v1_cde4 = add i32 %v0_cde4, 42
  store i32 %v1_cde4, i32* %r2.global-to-local, align 4
  %v4_cde8 = inttoptr i32 %v1_cde4 to i8*
  store i8 5, i8* %v4_cde8, align 1
  %v0_cdec = load i32, i32* %r1.global-to-local, align 4
  %v1_cdec = trunc i32 %v0_cdec to i8
  %v2_cdec = load i32, i32* %r2.global-to-local, align 4
  %v3_cdec = add i32 %v2_cdec, 1
  %v4_cdec = inttoptr i32 %v3_cdec to i8*
  store i8 %v1_cdec, i8* %v4_cdec, align 1
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_cdf8 = load i32, i32* %r4.global-to-local, align 4
  %v3_cdf8 = add i32 %v2_cdf8, 47
  %v4_cdf8 = inttoptr i32 %v3_cdf8 to i8*
  store i8 10, i8* %v4_cdf8, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ce04 = load i32, i32* %r3.global-to-local, align 4
  %v1_ce04 = trunc i32 %v0_ce04 to i8
  %v2_ce04 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce04 = add i32 %v2_ce04, 46
  %v4_ce04 = inttoptr i32 %v3_ce04 to i8*
  store i8 %v1_ce04, i8* %v4_ce04, align 1
  %v0_ce08 = load i32, i32* %r2.global-to-local, align 4
  %v1_ce08 = trunc i32 %v0_ce08 to i8
  %v2_ce08 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce08 = add i32 %v2_ce08, 45
  %v4_ce08 = inttoptr i32 %v3_ce08 to i8*
  store i8 %v1_ce08, i8* %v4_ce08, align 1
  %v0_ce0c = load i32, i32* %r0.global-to-local, align 4
  %v1_ce0c = trunc i32 %v0_ce0c to i8
  %v2_ce0c = load i32, i32* %r4.global-to-local, align 4
  %v3_ce0c = add i32 %v2_ce0c, 44
  %v4_ce0c = inttoptr i32 %v3_ce0c to i8*
  store i8 %v1_ce0c, i8* %v4_ce0c, align 1
  %v0_ce10 = call i32 @function_e7cc()
  store i32 %v0_ce10, i32* %r0.global-to-local, align 4
  %v2_ce18 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce18 = add i32 %v2_ce18, 56
  %v4_ce18 = inttoptr i32 %v3_ce18 to i8*
  store i8 1, i8* %v4_ce18, align 1
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_ce28 = load i32, i32* %r4.global-to-local, align 4
  %v2_ce28 = add i32 %v1_ce28, 48
  %v3_ce28 = inttoptr i32 %v2_ce28 to i32*
  store i32 %v0_ce10, i32* %v3_ce28, align 4
  %v0_ce2c = load i32, i32* %r2.global-to-local, align 4
  %v1_ce2c = trunc i32 %v0_ce2c to i8
  %v2_ce2c = load i32, i32* %r4.global-to-local, align 4
  %v3_ce2c = add i32 %v2_ce2c, 58
  %v4_ce2c = inttoptr i32 %v3_ce2c to i8*
  store i8 %v1_ce2c, i8* %v4_ce2c, align 1
  %v0_ce30 = load i32, i32* %r3.global-to-local, align 4
  %v1_ce30 = trunc i32 %v0_ce30 to i8
  %v2_ce30 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce30 = add i32 %v2_ce30, 59
  %v4_ce30 = inttoptr i32 %v3_ce30 to i8*
  store i8 %v1_ce30, i8* %v4_ce30, align 1
  %v0_ce34 = load i32, i32* %ip.global-to-local, align 4
  %v1_ce34 = load i32, i32* %r4.global-to-local, align 4
  %v2_ce34 = add i32 %v1_ce34, 52
  %v3_ce34 = inttoptr i32 %v2_ce34 to i32*
  store i32 %v0_ce34, i32* %v3_ce34, align 4
  %v0_ce38 = load i32, i32* %r2.global-to-local, align 4
  %v1_ce38 = trunc i32 %v0_ce38 to i8
  %v2_ce38 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce38 = add i32 %v2_ce38, 57
  %v4_ce38 = inttoptr i32 %v3_ce38 to i8*
  store i8 %v1_ce38, i8* %v4_ce38, align 1
  %v3_ce3c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ce3c, i32* %r3.global-to-local, align 4
  %v1_ce40 = add i32 %v3_ce3c, 1
  store i32 %v1_ce40, i32* @r4, align 4
  %v0_ce44 = load i32, i32* @sl, align 4
  %v9_ce44 = icmp eq i32 %v0_ce44, %v1_ce40
  store i1 %v9_ce44, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ce40, i32* %stack_var_-40, align 4
  %v8_ce4c = icmp sgt i32 %v0_ce44, %v1_ce40
  br i1 %v8_ce4c, label %dec_label_pc_cc60, label %dec_label_pc_ce50

dec_label_pc_ce50:                                ; preds = %bb76, %dec_label_pc_cb6c
  %v0_ce50 = phi i32 [ %v0_cb9c, %dec_label_pc_cb6c ], [ %v0_ce44, %bb76 ]
  %v2_ce50 = icmp eq i32 %v0_ce50, 0
  store i1 %v2_ce50, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d008 = icmp eq i32 %v3_cb74, 65535
  %v2_d084 = icmp eq i32 %v1_cb98, 0
  %v2_ce8c = icmp eq i32 %v6_cb20, -1
  %v7_ce8c = icmp eq i32 %v6_cb20, -1
  br label %dec_label_pc_ce58.outer

dec_label_pc_ce58.outer:                          ; preds = %dec_label_pc_cf84, %dec_label_pc_ce50
  %v1_ce58.ph.in = phi i32 [ %v1_cf78, %dec_label_pc_cf84 ], [ %v0_ce50, %dec_label_pc_ce50 ]
  %v0_ce58.ph = phi i1 [ %v2_cf84, %dec_label_pc_cf84 ], [ %v2_ce50, %dec_label_pc_ce50 ]
  %v1_ce58.ph = icmp slt i32 %v1_ce58.ph.in, 0
  %v4_ce58 = or i1 %v1_ce58.ph, %v0_ce58.ph
  br label %dec_label_pc_ce58

dec_label_pc_ce58:                                ; preds = %dec_label_pc_ce58.outer, %dec_label_pc_ce58
  br i1 %v4_ce58, label %dec_label_pc_ce58, label %dec_label_pc_ce5c

dec_label_pc_ce5c:                                ; preds = %dec_label_pc_ce58
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ce68

dec_label_pc_ce68:                                ; preds = %dec_label_pc_cee4, %dec_label_pc_ce5c
  %v1_ce78 = phi i32 [ %v1_cf74, %dec_label_pc_cee4 ], [ 0, %dec_label_pc_ce5c ]
  %v5_ce6c = mul i32 %v1_ce78, 24
  %v1_ce70 = load i32, i32* @r8, align 4
  %v2_ce70 = add i32 %v1_ce70, %v5_ce6c
  store i32 %v2_ce70, i32* %r3.global-to-local, align 4
  %v1_ce74 = add i32 %v2_ce70, 20
  %v2_ce74 = inttoptr i32 %v1_ce74 to i8*
  %v3_ce74 = load i8, i8* %v2_ce74, align 1
  %v4_ce74 = zext i8 %v3_ce74 to i32
  store i32 %v4_ce74, i32* %r2.global-to-local, align 4
  %v0_ce78 = load i32, i32* %fp.global-to-local, align 4
  %v4_ce78 = mul i32 %v1_ce78, 4
  %v5_ce78 = add i32 %v0_ce78, %v4_ce78
  %v6_ce78 = inttoptr i32 %v5_ce78 to i32*
  %v7_ce78 = load i32, i32* %v6_ce78, align 4
  store i32 %v7_ce78, i32* @r5, align 4
  %v7_ce7c = icmp eq i8 %v3_ce74, 31
  store i1 %v7_ce7c, i1* %cpsr_z.global-to-local, align 1
  %v1_ce80 = add i32 %v7_ce78, 20
  store i32 %v1_ce80, i32* @r6, align 4
  %tmp85 = icmp ult i8 %v3_ce74, 32
  br i1 %tmp85, label %dec_label_pc_cf90, label %dec_label_pc_ce88

dec_label_pc_ce88:                                ; preds = %dec_label_pc_ce68
  store i32 %v6_cb20, i32* %r0.global-to-local, align 4
  store i1 %v7_ce8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ce8c, label %dec_label_pc_cff8, label %dec_label_pc_ce94

dec_label_pc_ce94:                                ; preds = %dec_label_pc_cf90, %dec_label_pc_ce88
  store i32 %v3_cb74, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_d008, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d008, label %dec_label_pc_d014, label %dec_label_pc_cea8

dec_label_pc_cea8:                                ; preds = %dec_label_pc_cff8.dec_label_pc_cea8_crit_edge, %dec_label_pc_ce94
  %v1_ceac = phi i32 [ %v1_ceac.pre, %dec_label_pc_cff8.dec_label_pc_cea8_crit_edge ], [ 65535, %dec_label_pc_ce94 ]
  store i32 %v3_cb90, i32* %r3.global-to-local, align 4
  %v9_ceac = icmp eq i32 %v3_cb90, %v1_ceac
  store i1 %v9_ceac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ceac, label %dec_label_pc_d030, label %dec_label_pc_ceb4

dec_label_pc_ceb4:                                ; preds = %dec_label_pc_d014.dec_label_pc_ceb4_crit_edge, %dec_label_pc_cea8
  %v1_ceb8 = phi i32 [ %v1_ceb8.pre, %dec_label_pc_d014.dec_label_pc_ceb4_crit_edge ], [ %v1_ceac, %dec_label_pc_cea8 ]
  store i32 %v3_cb94, i32* %ip.global-to-local, align 4
  %v9_ceb8 = icmp eq i32 %v3_cb94, %v1_ceb8
  store i1 %v9_ceb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ceb8, label %dec_label_pc_d04c, label %dec_label_pc_cec0

dec_label_pc_cec0:                                ; preds = %dec_label_pc_d030.dec_label_pc_cec0_crit_edge, %dec_label_pc_ceb4
  %v1_cec4 = phi i32 [ %v1_cec4.pre, %dec_label_pc_d030.dec_label_pc_cec0_crit_edge ], [ %v1_ceb8, %dec_label_pc_ceb4 ]
  store i32 %v5_ca5c, i32* %r0.global-to-local, align 4
  %v9_cec4 = icmp eq i32 %v5_ca5c, %v1_cec4
  store i1 %v9_cec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cec4, label %dec_label_pc_d068, label %dec_label_pc_cecc

dec_label_pc_cecc:                                ; preds = %dec_label_pc_d04c.dec_label_pc_cecc_crit_edge, %dec_label_pc_cec0
  %v1_ced0 = phi i32 [ %v1_ced0.pre, %dec_label_pc_d04c.dec_label_pc_cecc_crit_edge ], [ %v1_cec4, %dec_label_pc_cec0 ]
  store i32 %v6_ca74, i32* %r2.global-to-local, align 4
  %v9_ced0 = icmp eq i32 %v6_ca74, %v1_ced0
  store i1 %v9_ced0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ced0, label %dec_label_pc_d07c, label %dec_label_pc_ced8

dec_label_pc_ced8:                                ; preds = %dec_label_pc_d068, %dec_label_pc_cecc
  store i32 %v1_cb98, i32* %r3.global-to-local, align 4
  store i1 %v2_d084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d084, label %dec_label_pc_cee4, label %dec_label_pc_d090

dec_label_pc_cee4:                                ; preds = %dec_label_pc_ced8, %dec_label_pc_d07c, %dec_label_pc_d090
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_cee8 = load i32, i32* %r7.global-to-local, align 4
  %v1_cee8 = trunc i32 %v0_cee8 to i8
  %v2_cee8 = load i32, i32* @r5, align 4
  %v3_cee8 = add i32 %v2_cee8, 10
  %v4_cee8 = inttoptr i32 %v3_cee8 to i8*
  store i8 %v1_cee8, i8* %v4_cee8, align 1
  %v0_ceec = load i32, i32* %r7.global-to-local, align 4
  %v1_ceec = trunc i32 %v0_ceec to i8
  %v2_ceec = load i32, i32* @r5, align 4
  %v3_ceec = add i32 %v2_ceec, 11
  %v4_ceec = inttoptr i32 %v3_ceec to i8*
  store i8 %v1_ceec, i8* %v4_ceec, align 1
  %v0_cef0 = load i32, i32* @r5, align 4
  store i32 %v0_cef0, i32* @r0, align 4
  %v2_cef4 = call i32 @function_d0b8(i32 %v0_cef0, i32 20)
  %v3_cef4 = trunc i32 %v2_cef4 to i8
  %v4_cef827 = udiv i32 %v2_cef4, 256
  %v1_cefc = trunc i32 %v4_cef827 to i8
  %v2_cefc = load i32, i32* @r5, align 4
  %v3_cefc = add i32 %v2_cefc, 11
  %v4_cefc = inttoptr i32 %v3_cefc to i8*
  store i8 %v1_cefc, i8* %v4_cefc, align 1
  %v3_cf00 = load i32, i32* @r5, align 4
  %v4_cf00 = add i32 %v3_cf00, 10
  %v5_cf00 = inttoptr i32 %v4_cf00 to i8*
  store i8 %v3_cef4, i8* %v5_cf00, align 1
  %v0_cf04 = load i32, i32* @r6, align 4
  store i32 %v0_cf04, i32* @r1, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v0_cf10 = load i32, i32* %r7.global-to-local, align 4
  %v1_cf10 = trunc i32 %v0_cf10 to i8
  %v3_cf10 = add i32 %v0_cf04, 16
  %v4_cf10 = inttoptr i32 %v3_cf10 to i8*
  store i8 %v1_cf10, i8* %v4_cf10, align 1
  %v0_cf14 = load i32, i32* %r7.global-to-local, align 4
  %v1_cf14 = trunc i32 %v0_cf14 to i8
  %v2_cf14 = load i32, i32* @r6, align 4
  %v3_cf14 = add i32 %v2_cf14, 17
  %v4_cf14 = inttoptr i32 %v3_cf14 to i8*
  store i8 %v1_cf14, i8* %v4_cf14, align 1
  %v0_cf18 = load i32, i32* @r5, align 4
  store i32 %v0_cf18, i32* %r0.global-to-local, align 4
  %v4_cf1c = call i32 @function_d114(i32 %v0_cf18, i32 %v0_cf04, i32 10240, i32 40)
  %v5_cf1c = trunc i32 %v4_cf1c to i8
  store i32 %v4_cf1c, i32* %r0.global-to-local, align 4
  %v4_cf2028 = udiv i32 %v4_cf1c, 256
  %v1_cf24 = trunc i32 %v4_cf2028 to i8
  %v2_cf24 = load i32, i32* @r6, align 4
  %v3_cf24 = add i32 %v2_cf24, 17
  %v4_cf24 = inttoptr i32 %v3_cf24 to i8*
  store i8 %v1_cf24, i8* %v4_cf24, align 1
  %v3_cf28 = load i32, i32* @r6, align 4
  %v4_cf28 = add i32 %v3_cf28, 16
  %v5_cf28 = inttoptr i32 %v4_cf28 to i8*
  store i8 %v5_cf1c, i8* %v5_cf28, align 1
  %v3_cf2c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cf2c, i32* %r3.global-to-local, align 4
  %v0_cf30 = load i32, i32* @r5, align 4
  %v1_cf30 = add i32 %v0_cf30, 20
  %v2_cf30 = inttoptr i32 %v1_cf30 to i32*
  %v3_cf30 = load i32, i32* %v2_cf30, align 4
  %v3_cf38 = udiv i32 %v3_cf30, 65536
  store i32 %v3_cf38, i32* %r2.global-to-local, align 4
  %v5_cf3c = mul i32 %v3_cf2c, 24
  %v1_cf40 = load i32, i32* @r8, align 4
  %v2_cf40 = add i32 %v1_cf40, %v5_cf3c
  store i32 %v2_cf40, i32* %ip.global-to-local, align 4
  %v3_cf4426 = udiv i32 %v3_cf30, 16777216
  %v1_cf48 = trunc i32 %v3_cf4426 to i8
  %v3_cf48 = add i32 %v2_cf40, 3
  %v4_cf48 = inttoptr i32 %v3_cf48 to i8*
  store i8 %v1_cf48, i8* %v4_cf48, align 1
  %v0_cf4c = load i32, i32* %r2.global-to-local, align 4
  %v1_cf4c = trunc i32 %v0_cf4c to i8
  %v2_cf4c = load i32, i32* %ip.global-to-local, align 4
  %v3_cf4c = add i32 %v2_cf4c, 2
  %v4_cf4c = inttoptr i32 %v3_cf4c to i8*
  store i8 %v1_cf4c, i8* %v4_cf4c, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_cf54 = load i32, i32* @r5, align 4
  store i32 %v0_cf54, i32* %r1.global-to-local, align 4
  %v0_cf58 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_cf58, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_cf64 = load i32, i32* %ip.global-to-local, align 4
  %v6_cf6c = inttoptr i32 %v0_cf54 to i32*
  %v7_cf6c = call i32 @function_1347c(i32 %v0_cf58, i32* %v6_cf6c, i32 60, i32 16384, i32 %v0_cf64, i32 16)
  %v3_cf70 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cf70, i32* %r3.global-to-local, align 4
  %v1_cf74 = add i32 %v3_cf70, 1
  store i32 %v1_cf74, i32* %r0.global-to-local, align 4
  %v1_cf78 = load i32, i32* @sl, align 4
  %v9_cf78 = icmp eq i32 %v1_cf74, %v1_cf78
  store i1 %v9_cf78, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_cf74, i32* %stack_var_-40, align 4
  %v5_cf80 = icmp slt i32 %v1_cf74, %v1_cf78
  br i1 %v5_cf80, label %dec_label_pc_ce68, label %dec_label_pc_cf84

dec_label_pc_cf84:                                ; preds = %dec_label_pc_cee4
  %v2_cf84 = icmp eq i32 %v1_cf78, 0
  store i1 %v2_cf84, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ce58.outer

dec_label_pc_cf90:                                ; preds = %dec_label_pc_ce68
  %v1_cf90 = add i32 %v2_ce70, 16
  %v2_cf90 = inttoptr i32 %v1_cf90 to i32*
  %v3_cf90 = load i32, i32* %v2_cf90, align 4
  store i32 %v3_cf90, i32* %r4.global-to-local, align 4
  %v0_cf94 = call i32 @function_e7cc()
  store i32 %v0_cf94, i32* %r0.global-to-local, align 4
  %v3_cf98 = load i32, i32* %stack_var_-40, align 4
  %v5_cfa0 = mul i32 %v3_cf98, 24
  %v0_cfa4 = load i32, i32* %r4.global-to-local, align 4
  %v1_cfa8 = load i32, i32* @r8, align 4
  %v2_cfa8 = add i32 %v1_cfa8, %v5_cfa0
  store i32 %v2_cfa8, i32* %r1.global-to-local, align 4
  %v1_cfac = and i32 %v0_cfa4, 65280
  store i32 %v1_cfac, i32* %r3.global-to-local, align 4
  %v1_cfa4 = udiv i32 %v0_cfa4, 256
  %v3_cfb0 = and i32 %v1_cfa4, 65280
  store i32 %v3_cfb0, i32* %r2.global-to-local, align 4
  %v3_cfb4 = mul i32 %v0_cfa4, 16777216
  store i32 %v3_cfb4, i32* %ip.global-to-local, align 4
  %v1_cfb8 = add i32 %v2_cfa8, 20
  %v2_cfb8 = inttoptr i32 %v1_cfb8 to i8*
  %v3_cfb8 = load i8, i8* %v2_cfb8, align 1
  %v4_cfb8 = zext i8 %v3_cfb8 to i32
  %v4_cfbc = mul nuw nsw i32 %v1_cfac, 256
  %v5_cfbc = or i32 %v4_cfbc, %v3_cfb4
  store i32 %v5_cfbc, i32* %ip.global-to-local, align 4
  %v2_cfc4 = call i32 @llvm.bswap.i32(i32 %v0_cfa4)
  %v7_cfc8 = lshr i32 %v0_cf94, %v4_cfb8
  %v8_cfc8 = add i32 %v7_cfc8, %v2_cfc4
  store i32 %v8_cfc8, i32* %r2.global-to-local, align 4
  %v3_cfd4 = mul i32 %v8_cfc8, 16777216
  %v1_cfcc = mul i32 %v8_cfc8, 256
  %v4_cfd8 = and i32 %v1_cfcc, 16711680
  %v5_cfd8 = or i32 %v4_cfd8, %v3_cfd4
  store i32 %v5_cfd8, i32* %r1.global-to-local, align 4
  store i32 %v6_cb20, i32* %r0.global-to-local, align 4
  %v2_cfe8 = call i32 @llvm.bswap.i32(i32 %v8_cfc8)
  store i32 %v2_cfe8, i32* %r3.global-to-local, align 4
  store i1 %v7_ce8c, i1* %cpsr_z.global-to-local, align 1
  %v1_cff0 = load i32, i32* @r5, align 4
  %v2_cff0 = add i32 %v1_cff0, 16
  %v3_cff0 = inttoptr i32 %v2_cff0 to i32*
  store i32 %v2_cfe8, i32* %v3_cff0, align 4
  br i1 %v2_ce8c, label %dec_label_pc_cff8, label %dec_label_pc_ce94

dec_label_pc_cff8:                                ; preds = %dec_label_pc_cf90, %dec_label_pc_ce88
  %v0_cff8 = call i32 @function_e7cc()
  store i32 %v0_cff8, i32* %r0.global-to-local, align 4
  store i32 %v3_cb74, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_d008, i1* %cpsr_z.global-to-local, align 1
  %v1_d00c = load i32, i32* @r5, align 4
  %v2_d00c = add i32 %v1_d00c, 12
  %v3_d00c = inttoptr i32 %v2_d00c to i32*
  store i32 %v0_cff8, i32* %v3_d00c, align 4
  br i1 %v3_d008, label %dec_label_pc_d014, label %dec_label_pc_cff8.dec_label_pc_cea8_crit_edge

dec_label_pc_cff8.dec_label_pc_cea8_crit_edge:    ; preds = %dec_label_pc_cff8
  %v1_ceac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cea8

dec_label_pc_d014:                                ; preds = %dec_label_pc_cff8, %dec_label_pc_ce94
  %v0_d014 = call i32 @function_e7cc()
  %v1_d014 = trunc i32 %v0_d014 to i8
  store i32 %v0_d014, i32* %r0.global-to-local, align 4
  %v4_d01829 = udiv i32 %v0_d014, 256
  %v1_d01c = trunc i32 %v4_d01829 to i8
  %v2_d01c = load i32, i32* @r5, align 4
  %v3_d01c = add i32 %v2_d01c, 5
  %v4_d01c = inttoptr i32 %v3_d01c to i8*
  store i8 %v1_d01c, i8* %v4_d01c, align 1
  store i32 %v3_cb90, i32* %r3.global-to-local, align 4
  %v1_d024 = load i32, i32* @r4, align 4
  %v9_d024 = icmp eq i32 %v3_cb90, %v1_d024
  store i1 %v9_d024, i1* %cpsr_z.global-to-local, align 1
  %v3_d028 = load i32, i32* @r5, align 4
  %v4_d028 = add i32 %v3_d028, 4
  %v5_d028 = inttoptr i32 %v4_d028 to i8*
  store i8 %v1_d014, i8* %v5_d028, align 1
  %v0_d02c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d02c, label %dec_label_pc_d030, label %dec_label_pc_d014.dec_label_pc_ceb4_crit_edge

dec_label_pc_d014.dec_label_pc_ceb4_crit_edge:    ; preds = %dec_label_pc_d014
  %v1_ceb8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ceb4

dec_label_pc_d030:                                ; preds = %dec_label_pc_d014, %dec_label_pc_cea8
  %v0_d030 = call i32 @function_e7cc()
  %v1_d030 = trunc i32 %v0_d030 to i8
  store i32 %v0_d030, i32* %r0.global-to-local, align 4
  store i32 %v3_cb94, i32* %ip.global-to-local, align 4
  %v4_d038 = sdiv i32 %v0_d030, 256
  store i32 %v4_d038, i32* %r3.global-to-local, align 4
  %v1_d03c = load i32, i32* @r4, align 4
  %v9_d03c = icmp eq i32 %v3_cb94, %v1_d03c
  store i1 %v9_d03c, i1* %cpsr_z.global-to-local, align 1
  %v3_d040 = load i32, i32* @r5, align 4
  %v4_d040 = add i32 %v3_d040, 20
  %v5_d040 = inttoptr i32 %v4_d040 to i8*
  store i8 %v1_d030, i8* %v5_d040, align 1
  %v0_d044 = load i32, i32* %r3.global-to-local, align 4
  %v1_d044 = trunc i32 %v0_d044 to i8
  %v2_d044 = load i32, i32* @r6, align 4
  %v3_d044 = add i32 %v2_d044, 1
  %v4_d044 = inttoptr i32 %v3_d044 to i8*
  store i8 %v1_d044, i8* %v4_d044, align 1
  %v0_d048 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d048, label %dec_label_pc_d04c, label %dec_label_pc_d030.dec_label_pc_cec0_crit_edge

dec_label_pc_d030.dec_label_pc_cec0_crit_edge:    ; preds = %dec_label_pc_d030
  %v1_cec4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cec0

dec_label_pc_d04c:                                ; preds = %dec_label_pc_d030, %dec_label_pc_ceb4
  %v0_d04c = call i32 @function_e7cc()
  %v1_d04c = trunc i32 %v0_d04c to i8
  %v4_d050 = sdiv i32 %v0_d04c, 256
  store i32 %v4_d050, i32* %r3.global-to-local, align 4
  %v3_d054 = load i32, i32* @r6, align 4
  %v4_d054 = add i32 %v3_d054, 2
  %v5_d054 = inttoptr i32 %v4_d054 to i8*
  store i8 %v1_d04c, i8* %v5_d054, align 1
  store i32 %v5_ca5c, i32* %r0.global-to-local, align 4
  %v1_d05c = load i32, i32* @r4, align 4
  %v9_d05c = icmp eq i32 %v5_ca5c, %v1_d05c
  store i1 %v9_d05c, i1* %cpsr_z.global-to-local, align 1
  %v0_d060 = load i32, i32* %r3.global-to-local, align 4
  %v1_d060 = trunc i32 %v0_d060 to i8
  %v2_d060 = load i32, i32* @r6, align 4
  %v3_d060 = add i32 %v2_d060, 3
  %v4_d060 = inttoptr i32 %v3_d060 to i8*
  store i8 %v1_d060, i8* %v4_d060, align 1
  %v0_d064 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d064, label %dec_label_pc_d068, label %dec_label_pc_d04c.dec_label_pc_cecc_crit_edge

dec_label_pc_d04c.dec_label_pc_cecc_crit_edge:    ; preds = %dec_label_pc_d04c
  %v1_ced0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cecc

dec_label_pc_d068:                                ; preds = %dec_label_pc_d04c, %dec_label_pc_cec0
  %v0_d068 = call i32 @function_e7cc()
  store i32 %v0_d068, i32* %r0.global-to-local, align 4
  store i32 %v6_ca74, i32* %r2.global-to-local, align 4
  %v1_d070 = load i32, i32* @r4, align 4
  %v9_d070 = icmp eq i32 %v6_ca74, %v1_d070
  store i1 %v9_d070, i1* %cpsr_z.global-to-local, align 1
  %v1_d074 = load i32, i32* @r6, align 4
  %v2_d074 = add i32 %v1_d074, 4
  %v3_d074 = inttoptr i32 %v2_d074 to i32*
  store i32 %v0_d068, i32* %v3_d074, align 4
  br i1 %v9_d070, label %dec_label_pc_d07c, label %dec_label_pc_ced8

dec_label_pc_d07c:                                ; preds = %dec_label_pc_d068, %dec_label_pc_cecc
  %v0_d07c = call i32 @function_e7cc()
  store i32 %v0_d07c, i32* %r0.global-to-local, align 4
  store i32 %v1_cb98, i32* %r3.global-to-local, align 4
  store i1 %v2_d084, i1* %cpsr_z.global-to-local, align 1
  %v1_d088 = load i32, i32* @r6, align 4
  %v2_d088 = add i32 %v1_d088, 8
  %v3_d088 = inttoptr i32 %v2_d088 to i32*
  store i32 %v0_d07c, i32* %v3_d088, align 4
  br i1 %v2_d084, label %dec_label_pc_cee4, label %dec_label_pc_d090

dec_label_pc_d090:                                ; preds = %dec_label_pc_ced8, %dec_label_pc_d07c
  %v0_d090 = call i32 @function_e7cc()
  %v1_d090 = trunc i32 %v0_d090 to i8
  store i32 %v0_d090, i32* %r0.global-to-local, align 4
  %v4_d094 = sdiv i32 %v0_d090, 256
  store i32 %v4_d094, i32* %r3.global-to-local, align 4
  %v1_d098 = trunc i32 %v4_d094 to i8
  %v2_d098 = load i32, i32* @r6, align 4
  %v3_d098 = add i32 %v2_d098, 19
  %v4_d098 = inttoptr i32 %v3_d098 to i8*
  store i8 %v1_d098, i8* %v4_d098, align 1
  %v3_d09c = load i32, i32* @r6, align 4
  %v4_d09c = add i32 %v3_d09c, 18
  %v5_d09c = inttoptr i32 %v4_d09c to i8*
  store i8 %v1_d090, i8* %v5_d09c, align 1
  br label %dec_label_pc_cee4

dec_label_pc_d0a4:                                ; preds = %dec_label_pc_cb44
  %v0_d0a4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_d0a4, i32* %r0.global-to-local, align 4
  %v1_d0a8 = call i32 @function_12bf0(i32 %v0_d0a4)
  store i32 %v1_d0a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d0ac

dec_label_pc_d0ac:                                ; preds = %dec_label_pc_c96c, %dec_label_pc_d0a4
  %v29_d0b0 = phi i32 [ %v3_cb34, %dec_label_pc_c96c ], [ %v1_d0a8, %dec_label_pc_d0a4 ]
  store i32 %v3_c96c, i32* %r4.global-to-local, align 4
  store i32 %v12_c96c, i32* %r7.global-to-local, align 4
  ret i32 %v29_d0b0

; uselistorder directives
  uselistorder i32 %v4_d094, { 1, 0 }
  uselistorder i32 %v0_d090, { 0, 2, 1 }
  uselistorder i32 %v0_d030, { 0, 2, 1 }
  uselistorder i32 %v0_d014, { 0, 2, 1 }
  uselistorder i32 %v2_cfe8, { 1, 0 }
  uselistorder i32 %v8_cfc8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_cfb4, { 1, 0 }
  uselistorder i32 %v0_cfa4, { 2, 0, 1, 3 }
  uselistorder i1 %v2_cf84, { 1, 0 }
  uselistorder i32 %v1_cf78, { 1, 2, 3, 0 }
  uselistorder i32 %v1_cf74, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_cf1c, { 0, 2, 1 }
  uselistorder i32 %v0_cf04, { 1, 0, 2 }
  uselistorder i1 %v7_ce8c, { 2, 1, 0 }
  uselistorder i1 %v2_d084, { 2, 3, 1, 0 }
  uselistorder i1 %v3_d008, { 3, 2, 0, 1 }
  uselistorder i32 %v1_ce40, { 1, 0, 2, 3 }
  uselistorder i8 %v5_cc58, { 1, 0 }
  uselistorder i32 %v3_cc40, { 1, 0 }
  uselistorder i32 %v1_cc3c, { 1, 0 }
  uselistorder i32 %v1_cc30, { 1, 0 }
  uselistorder i32 %v1_cc2c, { 1, 0 }
  uselistorder i32 %v1_cc08, { 1, 0 }
  uselistorder i32 %v1_cc04, { 1, 0 }
  uselistorder i32 %v3_cbf8, { 1, 0 }
  uselistorder i32 %v1_cbf4, { 1, 0 }
  uselistorder i32 %v1_cbd0, { 1, 0 }
  uselistorder i32 %v1_cbc8, { 1, 0 }
  uselistorder i32 %v1_cb98, { 2, 1, 3, 0 }
  uselistorder i32 %v3_cb90, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_cb88, { 3, 0, 1, 2 }
  uselistorder i32 %v0_cb84, { 0, 2, 1, 4, 3 }
  uselistorder i1 %v7_cb64, { 1, 0 }
  uselistorder i1 %v7_cb38, { 1, 0 }
  uselistorder i32 %v3_cb34, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_cb20, { 6, 4, 0, 5, 1, 3, 2 }
  uselistorder i32 %v6_ca74, { 3, 2, 1, 0 }
  uselistorder i32 %v5_ca5c, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %v1_ca0c, { 1, 0 }
  uselistorder i32 %v7_c9c8, { 0, 1, 3, 2 }
  uselistorder i32 %v5_c9a4, { 1, 0 }
  uselistorder i32 %v1_c970, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 29, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 35, 34, 37, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 6, 7, 5, 8, 9, 11, 10, 13, 12, 14, 16, 15, 17, 18, 19, 22, 20, 21, 23, 24, 25, 26, 27, 1, 28, 29, 30, 31, 35, 32, 33, 34, 36, 38, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_85e0, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106 }
  uselistorder label %dec_label_pc_d0ac, { 1, 0 }
  uselistorder label %dec_label_pc_d090, { 1, 0 }
  uselistorder label %dec_label_pc_cee4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ce58, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_d0b8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d0b8:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_d0e8, label %dec_label_pc_d0c4

dec_label_pc_d0c4:                                ; preds = %dec_label_pc_d0b8
  %v0_d0c8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_d0c8

dec_label_pc_d0c8:                                ; preds = %dec_label_pc_d0c8, %dec_label_pc_d0c4
  %v0_d0dc = phi i32 [ %v2_d0dc, %dec_label_pc_d0c8 ], [ 0, %dec_label_pc_d0c4 ]
  %v0_d0d0 = phi i32 [ %v1_d0d0, %dec_label_pc_d0c8 ], [ %arg1, %dec_label_pc_d0c4 ]
  %v0_d0e0 = phi i32 [ %v1_d0e0, %dec_label_pc_d0c8 ], [ %v0_d0c8.pre, %dec_label_pc_d0c4 ]
  %v1_d0c8 = inttoptr i32 %v0_d0e0 to i8*
  %v2_d0c8 = load i8, i8* %v1_d0c8, align 1
  %v3_d0c8 = zext i8 %v2_d0c8 to i32
  %v1_d0cc = add i32 %v0_d0e0, 1
  %v2_d0cc = inttoptr i32 %v1_d0cc to i8*
  %v3_d0cc = load i8, i8* %v2_d0cc, align 1
  %v4_d0cc = zext i8 %v3_d0cc to i32
  %v1_d0d0 = add i32 %v0_d0d0, -2
  %v4_d0d4 = mul nuw nsw i32 %v4_d0cc, 256
  %v5_d0d4 = or i32 %v4_d0d4, %v3_d0c8
  %v2_d0dc = add i32 %v5_d0d4, %v0_d0dc
  %v1_d0e0 = add i32 %v0_d0e0, 2
  store i32 %v1_d0e0, i32* @r0, align 4
  %v1_d0d0.cmp = icmp ugt i32 %v1_d0d0, 1
  br i1 %v1_d0d0.cmp, label %dec_label_pc_d0c8, label %dec_label_pc_d0e8

dec_label_pc_d0e8:                                ; preds = %dec_label_pc_d0c8, %dec_label_pc_d0b8
  %v1_d0f0 = phi i32 [ 0, %dec_label_pc_d0b8 ], [ %v2_d0dc, %dec_label_pc_d0c8 ]
  %v0_d0e8 = phi i32 [ %arg1, %dec_label_pc_d0b8 ], [ %v1_d0d0, %dec_label_pc_d0c8 ]
  %v7_d0e8 = icmp eq i32 %v0_d0e8, 1
  br i1 %v7_d0e8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_d0e8
  %v1_d0ec = load i32, i32* @r0, align 4
  %v2_d0ec = inttoptr i32 %v1_d0ec to i8*
  %v3_d0ec = load i8, i8* %v2_d0ec, align 1
  %v4_d0ec = zext i8 %v3_d0ec to i32
  %v3_d0f0 = add i32 %v1_d0f0, %v4_d0ec
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d0e8, %bb
  %v0_d0f4 = phi i32 [ %v1_d0f0, %dec_label_pc_d0e8 ], [ %v3_d0f0, %bb ]
  %v3_d0f8 = urem i32 %v0_d0f4, 65536
  %v4_d0fc = udiv i32 %v0_d0f4, 65536
  %v5_d0fc = add nuw nsw i32 %v4_d0fc, %v3_d0f8
  %v4_d100 = udiv i32 %v5_d0fc, 65536
  %v5_d100 = add nuw nsw i32 %v4_d100, %v5_d0fc
  %v1_d104 = urem i32 %v5_d100, 65536
  %v3_d10c = xor i32 %v1_d104, 65535
  ret i32 %v3_d10c

; uselistorder directives
  uselistorder i32 %v5_d0fc, { 1, 0 }
  uselistorder i32 %v1_d0e0, { 1, 0 }
  uselistorder i32 %v1_d0d0, { 1, 0, 2 }
  uselistorder i32 %v0_d0e0, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_d114(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d114:
  %v3_d124 = urem i32 %arg2, 65536
  %v1_d128 = add i32 %arg1, 12
  %v1_d12c = inttoptr i32 %v1_d128 to i32*
  %v2_d12c = load i32, i32* %v1_d12c, align 4
  %v3_d12c = add i32 %arg1, 16
  %v4_d12c = inttoptr i32 %v3_d12c to i32*
  %v5_d12c = load i32, i32* %v4_d12c, align 4
  %v7_d130 = icmp sgt i32 %arg3, 1
  br i1 %v7_d130, label %dec_label_pc_d13c.preheader, label %dec_label_pc_d15c

dec_label_pc_d13c.preheader:                      ; preds = %dec_label_pc_d114
  %v0_d13c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_d13c

dec_label_pc_d13c:                                ; preds = %dec_label_pc_d13c.preheader, %dec_label_pc_d13c
  %v0_d150 = phi i32 [ 0, %dec_label_pc_d13c.preheader ], [ %v2_d150, %dec_label_pc_d13c ]
  %v0_d144 = phi i32 [ %arg3, %dec_label_pc_d13c.preheader ], [ %v1_d144, %dec_label_pc_d13c ]
  %v0_d154 = phi i32 [ %v0_d13c.pre, %dec_label_pc_d13c.preheader ], [ %v1_d154, %dec_label_pc_d13c ]
  %v1_d13c = inttoptr i32 %v0_d154 to i8*
  %v2_d13c = load i8, i8* %v1_d13c, align 1
  %v3_d13c = zext i8 %v2_d13c to i32
  %v1_d140 = add i32 %v0_d154, 1
  %v2_d140 = inttoptr i32 %v1_d140 to i8*
  %v3_d140 = load i8, i8* %v2_d140, align 1
  %v4_d140 = zext i8 %v3_d140 to i32
  %v1_d144 = add nsw i32 %v0_d144, -2
  %v4_d148 = mul nuw nsw i32 %v4_d140, 256
  %v5_d148 = or i32 %v4_d148, %v3_d13c
  %v2_d150 = add i32 %v5_d148, %v0_d150
  %v1_d154 = add i32 %v0_d154, 2
  store i32 %v1_d154, i32* @r1, align 4
  %v8_d158 = icmp sgt i32 %v1_d144, 1
  br i1 %v8_d158, label %dec_label_pc_d13c, label %dec_label_pc_d15c

dec_label_pc_d15c:                                ; preds = %dec_label_pc_d13c, %dec_label_pc_d114
  %v1_d164 = phi i32 [ 0, %dec_label_pc_d114 ], [ %v2_d150, %dec_label_pc_d13c ]
  %v0_d15c = phi i32 [ %arg3, %dec_label_pc_d114 ], [ %v1_d144, %dec_label_pc_d13c ]
  %v7_d15c = icmp eq i32 %v0_d15c, 1
  br i1 %v7_d15c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_d15c
  %v1_d160 = load i32, i32* @r1, align 4
  %v2_d160 = inttoptr i32 %v1_d160 to i8*
  %v3_d160 = load i8, i8* %v2_d160, align 1
  %v4_d160 = zext i8 %v3_d160 to i32
  %v3_d164 = add i32 %v4_d160, %v1_d164
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d15c, %bb
  %v0_d188 = phi i32 [ %v1_d164, %dec_label_pc_d15c ], [ %v3_d164, %bb ]
  %v3_d16c = urem i32 %v2_d12c, 65536
  %v1_d174 = add i32 %arg1, 9
  %v2_d174 = inttoptr i32 %v1_d174 to i8*
  %v3_d174 = load i8, i8* %v2_d174, align 1
  %v4_d174 = zext i8 %v3_d174 to i32
  %v3_d178 = urem i32 %v5_d12c, 65536
  %v4_d17c = udiv i32 %v2_d12c, 65536
  %v3_d184 = mul nuw nsw i32 %v4_d174, 256
  %v4_d188 = udiv i32 %v5_d12c, 65536
  %v5_d188 = add i32 %v0_d188, %v4_d188
  %v2_d18c = add i32 %v5_d188, %v3_d184
  %v5_d17c = add nuw nsw i32 %v3_d16c, %v3_d124
  %v2_d180 = add nuw nsw i32 %v5_d17c, %v4_d17c
  %v2_d190 = add nuw nsw i32 %v2_d180, %v3_d178
  %v2_d194 = add i32 %v2_d18c, %v2_d190
  %tmp = icmp ult i32 %v2_d194, 65536
  br i1 %tmp, label %dec_label_pc_d1b4, label %dec_label_pc_d1a0

dec_label_pc_d1a0:                                ; preds = %.thread, %dec_label_pc_d1a0
  %v2_d1a81 = phi i32 [ %v2_d1a8, %dec_label_pc_d1a0 ], [ %v2_d194, %.thread ]
  %v3_d1ac2.in = phi i32 [ %v2_d1a8, %dec_label_pc_d1a0 ], [ %v2_d194, %.thread ]
  %v3_d1ac2 = udiv i32 %v3_d1ac2.in, 65536
  %v3_d1a4 = urem i32 %v2_d1a81, 65536
  %v2_d1a8 = add nuw nsw i32 %v3_d1a4, %v3_d1ac2
  %tmp14 = icmp ult i32 %v2_d1a8, 65536
  br i1 %tmp14, label %dec_label_pc_d1b4.loopexit, label %dec_label_pc_d1a0

dec_label_pc_d1b4.loopexit:                       ; preds = %dec_label_pc_d1a0
  br label %dec_label_pc_d1b4

dec_label_pc_d1b4:                                ; preds = %dec_label_pc_d1b4.loopexit, %.thread
  %v0_d1b4 = phi i32 [ %v2_d1a8, %dec_label_pc_d1b4.loopexit ], [ %v2_d194, %.thread ]
  %v1_d1b4 = urem i32 %v0_d1b4, 65536
  %v3_d1bc = xor i32 %v1_d1b4, 65535
  ret i32 %v3_d1bc

; uselistorder directives
  uselistorder i32 %v2_d1a8, { 2, 1, 3, 0 }
  uselistorder i32 %v2_d194, { 3, 0, 2, 1 }
  uselistorder i32 %v1_d164, { 1, 0 }
  uselistorder i32 %v1_d154, { 1, 0 }
  uselistorder i32 %v1_d144, { 0, 2, 1 }
  uselistorder i32 %v0_d154, { 0, 2, 1 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d1a0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_d13c, { 1, 0 }
}

define i32 @function_d1c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_d1c4:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-68 = alloca i8, align 1
  %stack_var_-581 = alloca i8, align 1
  %stack_var_-8773 = alloca i32, align 4
  %stack_var_-4677 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_d1c4 = load i32, i32* @r4, align 4
  store i32 %v3_d1c4, i32* %stack_var_-36, align 4
  %v6_d1c4 = load i32, i32* @r5, align 4
  %v9_d1c4 = load i32, i32* @r6, align 4
  %v12_d1c4 = load i32, i32* @r7, align 4
  %v15_d1c4 = load i32, i32* @r8, align 4
  %v18_d1c4 = load i32, i32* @sb, align 4
  %v21_d1c4 = load i32, i32* @sl, align 4
  %v24_d1c4 = load i32, i32* @fp, align 4
  %v2_d1d8 = ptrtoint i32* %stack_var_-4677 to i32
  store i32 %v2_d1d8, i32* @sl, align 4
  %v3_d1e0 = mul i32 %arg1, 65536
  store i32 %v3_d1e0, i32* @r5, align 4
  store i32 4096, i32* @r2, align 4
  %v2_d1ec = ptrtoint i32* %stack_var_-8773 to i32
  %v2_d1f8 = bitcast i32* %stack_var_-4677 to i8*
  %v3_d1f8 = call i32 @function_13230(i8* %v2_d1f8, i32 0)
  store i32 4096, i32* @r2, align 4
  %v2_d210 = bitcast i32* %stack_var_-8773 to i8*
  %v3_d210 = call i32 @function_13230(i8* %v2_d210, i32 0)
  %v2_d214 = ptrtoint i8* %stack_var_-581 to i32
  store i32 %v2_d214, i32* @r6, align 4
  store i32 513, i32* @r2, align 4
  %v3_d234 = call i32 @function_13230(i8* nonnull %stack_var_-581, i32 0)
  %v2_d238 = ptrtoint i8* %stack_var_-68 to i32
  %v1_d240 = load i32, i32* @r5, align 4
  %v4_d240 = udiv i32 %v1_d240, 16777216
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_d260 = trunc i32 %v4_d240 to i8
  %v4_d260 = call i32 @function_12750(i8 %v3_d260, i32 16, i32 %v2_d238)
  %v2_d268 = call i32 @function_122ec(i8* nonnull %stack_var_-68)
  %v7_d26c = icmp eq i32 %v2_d268, 2
  br i1 %v7_d26c, label %dec_label_pc_d734, label %dec_label_pc_d274

dec_label_pc_d274:                                ; preds = %dec_label_pc_d1c4, %dec_label_pc_d734
  %v1_d278 = call i32 @function_11d20(i32 13)
  %v1_d280 = call i32 @function_11d20(i32 14)
  %v1_d288 = call i32 @function_11d20(i32 15)
  %v1_d290 = call i32 @function_11d20(i32 17)
  %v0_d294 = load i32, i32* @r4, align 4
  %v2_d29c = inttoptr i32 %v0_d294 to i32*
  %v3_d29c = call i32 @function_11c3c(i32 17, i32* %v2_d29c)
  %v0_d2a0 = load i32, i32* @r4, align 4
  %v2_d2a4 = inttoptr i32 %v3_d29c to i8*
  %v3_d2a4 = call i32 @function_12d1c(i8* %v2_d2a4, i32 %v0_d2a0)
  %v7_d2a8 = icmp eq i32 %v3_d2a4, -1
  store i32 %v3_d2a4, i32* @r8, align 4
  br i1 %v7_d2a8, label %dec_label_pc_d6d0, label %dec_label_pc_d2b4.preheader

dec_label_pc_d2b4.preheader:                      ; preds = %dec_label_pc_d274
  %v4_d2c058 = call i32 @function_12544(i8* nonnull %stack_var_-581, i32 512, i32 %v3_d2a4)
  %v2_d2c460 = icmp eq i32 %v4_d2c058, 0
  br i1 %v2_d2c460, label %dec_label_pc_d454.loopexit, label %dec_label_pc_d2cc.lr.ph

dec_label_pc_d2cc.lr.ph:                          ; preds = %dec_label_pc_d2b4.preheader
  %v2_d314 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_d2cc

dec_label_pc_d2cc:                                ; preds = %dec_label_pc_d2cc.lr.ph, %dec_label_pc_d2b4.backedge
  %v3_d2d0 = load i8, i8* %stack_var_-581, align 1
  %v4_d2d0 = sext i8 %v3_d2d0 to i32
  %v2_d2d4 = icmp eq i8 %v3_d2d0, 0
  br i1 %v2_d2d4, label %bb126, label %bb

bb:                                               ; preds = %dec_label_pc_d2cc
  %v8_d2d8 = icmp eq i8 %v3_d2d0, 58
  br i1 %v8_d2d8, label %.thread6, label %dec_label_pc_d2ec

.thread6:                                         ; preds = %bb
  br label %dec_label_pc_d304

bb126:                                            ; preds = %dec_label_pc_d2cc
  br label %dec_label_pc_d304

dec_label_pc_d2ec:                                ; preds = %bb
  %v1_d2f4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_d2f0

dec_label_pc_d2f0:                                ; preds = %bb127, %dec_label_pc_d2ec
  %v0_d2f0 = phi i32 [ %v1_d2f0, %bb127 ], [ 0, %dec_label_pc_d2ec ]
  %v1_d2f0 = add i32 %v0_d2f0, 1
  %v2_d2f4 = add i32 %v1_d2f0, %v1_d2f4.pre
  %v3_d2f4 = inttoptr i32 %v2_d2f4 to i8*
  %v4_d2f4 = load i8, i8* %v3_d2f4, align 1
  %v6_d2f4 = zext i8 %v4_d2f4 to i32
  %v2_d2f8 = icmp eq i8 %v4_d2f4, 0
  br i1 %v2_d2f8, label %dec_label_pc_d304, label %bb127

bb127:                                            ; preds = %dec_label_pc_d2f0
  %v8_d2fc = icmp eq i8 %v4_d2f4, 58
  br i1 %v8_d2fc, label %dec_label_pc_d304, label %dec_label_pc_d2f0

dec_label_pc_d304:                                ; preds = %dec_label_pc_d2f0, %bb127, %bb126, %.thread6
  %v1_d330 = phi i32 [ 0, %.thread6 ], [ 0, %bb126 ], [ %v1_d2f0, %bb127 ], [ %v1_d2f0, %dec_label_pc_d2f0 ]
  %v0_d304 = phi i32 [ %v4_d2d0, %.thread6 ], [ %v4_d2d0, %bb126 ], [ %v6_d2f4, %bb127 ], [ %v6_d2f4, %dec_label_pc_d2f0 ]
  %v2_d304 = icmp eq i32 %v0_d304, 0
  br i1 %v2_d304, label %dec_label_pc_d2b4.backedge, label %dec_label_pc_d30c

dec_label_pc_d2b4.backedge:                       ; preds = %dec_label_pc_d304, %dec_label_pc_d3dc, %dec_label_pc_d428, %dec_label_pc_d350
  %v0_d2bc = load i32, i32* @r8, align 4
  %v4_d2c0 = call i32 @function_12544(i8* nonnull %stack_var_-581, i32 512, i32 %v0_d2bc)
  %v2_d2c4 = icmp eq i32 %v4_d2c0, 0
  br i1 %v2_d2c4, label %dec_label_pc_d454.loopexit, label %dec_label_pc_d2cc

dec_label_pc_d30c:                                ; preds = %dec_label_pc_d304
  %v1_d310 = add i32 %v1_d330, 2
  %v2_d318 = add i32 %v1_d310, %v2_d314
  %v1_d31c = add i32 %v2_d318, -545
  %v2_d31c = inttoptr i32 %v1_d31c to i8*
  %v3_d31c = load i8, i8* %v2_d31c, align 1
  %v2_d320 = icmp eq i8 %v3_d31c, 0
  br i1 %v2_d320, label %bb129, label %bb128

bb128:                                            ; preds = %dec_label_pc_d30c
  %v8_d324 = icmp eq i8 %v3_d31c, 32
  br i1 %v8_d324, label %.thread10, label %dec_label_pc_d330

.thread10:                                        ; preds = %bb128
  store i32 %v1_d310, i32* @r5, align 4
  br label %dec_label_pc_d350

bb129:                                            ; preds = %dec_label_pc_d30c
  store i32 %v1_d310, i32* @r5, align 4
  br label %dec_label_pc_d350

dec_label_pc_d330:                                ; preds = %bb128
  %v0_d330 = load i32, i32* @r6, align 4
  %v2_d330 = add i32 %v0_d330, %v1_d330
  br label %dec_label_pc_d334

dec_label_pc_d334:                                ; preds = %bb130, %dec_label_pc_d330
  %v0_d34013 = phi i32 [ %v1_d340, %bb130 ], [ %v2_d330, %dec_label_pc_d330 ]
  %v1_d334 = add i32 %v0_d34013, 3
  %v2_d334 = inttoptr i32 %v1_d334 to i8*
  %v3_d334 = load i8, i8* %v2_d334, align 1
  %v2_d338 = icmp eq i8 %v3_d334, 0
  br i1 %v2_d338, label %.thread12, label %bb130

.thread12:                                        ; preds = %dec_label_pc_d334
  %v1_d34014 = add i32 %v0_d34013, 1
  br label %dec_label_pc_d348

bb130:                                            ; preds = %dec_label_pc_d334
  %v8_d33c = icmp eq i8 %v3_d334, 32
  %v1_d340 = add i32 %v0_d34013, 1
  br i1 %v8_d33c, label %dec_label_pc_d348, label %dec_label_pc_d334

dec_label_pc_d348:                                ; preds = %bb130, %.thread12
  %v1_d34015 = phi i32 [ %v1_d34014, %.thread12 ], [ %v1_d340, %bb130 ]
  %v2_d348 = sub i32 %v1_d34015, %v0_d330
  %v1_d34c = add i32 %v2_d348, 2
  store i32 %v1_d34c, i32* @r5, align 4
  br label %dec_label_pc_d350

dec_label_pc_d350:                                ; preds = %bb129, %.thread10, %dec_label_pc_d348
  %v1_d35c = phi i32 [ %v1_d310, %.thread10 ], [ %v1_d310, %bb129 ], [ %v1_d34c, %dec_label_pc_d348 ]
  %v0_d350 = load i32, i32* @r6, align 4
  %v2_d350 = add i32 %v0_d350, %v1_d310
  store i32 %v2_d350, i32* @r4, align 4
  %v2_d35c = add i32 %v1_d35c, %v2_d314
  store i32 0, i32* @r7, align 4
  %v3_d368 = add i32 %v2_d35c, -545
  %v4_d368 = inttoptr i32 %v3_d368 to i8*
  store i8 0, i8* %v4_d368, align 1
  %v1_d36c = inttoptr i32 %v2_d350 to i8*
  %v2_d36c = call i32 @function_122ec(i8* %v1_d36c)
  store i32 %v2_d36c, i32* @r1, align 4
  %v0_d378 = load i32, i32* @r4, align 4
  %v3_d37c = inttoptr i32 %v0_d378 to i8*
  %v4_d37c = call i32 @function_12640(i8* %v3_d37c, i32 %v2_d36c, i32 %v2_d238)
  %v7_d380 = icmp eq i32 %v4_d37c, -1
  br i1 %v7_d380, label %dec_label_pc_d2b4.backedge, label %dec_label_pc_d39c.preheader

dec_label_pc_d39c.preheader:                      ; preds = %dec_label_pc_d350
  %v1_d384 = load i32, i32* @r7, align 4
  %v1_d388 = load i32, i32* @r6, align 4
  %v2_d388 = load i32, i32* @r5, align 4
  %v3_d388 = add i32 %v2_d388, %v1_d388
  store i32 %v1_d384, i32* @lr, align 4
  store i32 %v1_d384, i32* @r4, align 4
  %v1_d39c50 = add i32 %v3_d388, 2
  %v2_d39c51 = inttoptr i32 %v1_d39c50 to i8*
  %v3_d39c52 = load i8, i8* %v2_d39c51, align 1
  %v2_d3a054 = icmp eq i8 %v3_d39c52, 0
  %v1_d3a456 = add i32 %v2_d388, 2
  br i1 %v2_d3a054, label %dec_label_pc_d3dc, label %dec_label_pc_d3ac

dec_label_pc_d3ac:                                ; preds = %dec_label_pc_d39c.preheader, %dec_label_pc_d39c.backedge
  %v0_d3dc86 = phi i32 [ %v0_d3dc85, %dec_label_pc_d39c.backedge ], [ %v1_d384, %dec_label_pc_d39c.preheader ]
  %v0_d3c4.pr = phi i32 [ %v0_d3c4.pr71, %dec_label_pc_d39c.backedge ], [ %v1_d384, %dec_label_pc_d39c.preheader ]
  %v0_d6e0 = phi i32 [ %v0_d6e074, %dec_label_pc_d39c.backedge ], [ %v1_d384, %dec_label_pc_d39c.preheader ]
  %v0_d3a482 = phi i32 [ %v1_d3a4, %dec_label_pc_d39c.backedge ], [ %v1_d3a456, %dec_label_pc_d39c.preheader ]
  %v0_d3d4 = phi i32 [ %v0_d39c, %dec_label_pc_d39c.backedge ], [ %v3_d388, %dec_label_pc_d39c.preheader ]
  %v1_d3b0.in = phi i8 [ %v3_d39c, %dec_label_pc_d39c.backedge ], [ %v3_d39c52, %dec_label_pc_d39c.preheader ]
  %v7_d3ac = icmp eq i8 %v1_d3b0.in, 9
  br i1 %v7_d3ac, label %.thread23, label %bb131

bb131:                                            ; preds = %dec_label_pc_d3ac
  %v8_d3b0 = icmp eq i8 %v1_d3b0.in, 32
  br i1 %v8_d3b0, label %.thread23.thread35, label %dec_label_pc_d3c4

.thread23.thread35:                               ; preds = %bb131
  br label %dec_label_pc_d3d0

.thread23:                                        ; preds = %dec_label_pc_d3ac
  br label %dec_label_pc_d3d0

dec_label_pc_d3c4:                                ; preds = %bb131
  %v7_d3c4 = icmp eq i32 %v0_d3c4.pr, 1
  br i1 %v7_d3c4, label %dec_label_pc_d6e0, label %dec_label_pc_d3cc

dec_label_pc_d3cc:                                ; preds = %dec_label_pc_d6e0, %dec_label_pc_d3c4
  %v0_d3d079 = phi i32 [ %v1_d6e0, %dec_label_pc_d6e0 ], [ %v0_d6e0, %dec_label_pc_d3c4 ]
  br label %dec_label_pc_d3d0

dec_label_pc_d3d0:                                ; preds = %.thread23, %.thread23.thread35, %dec_label_pc_d3cc
  %v0_d3d0 = phi i32 [ %v0_d6e0, %.thread23.thread35 ], [ %v0_d6e0, %.thread23 ], [ %v0_d3d079, %dec_label_pc_d3cc ]
  %v0_d3c4.pr72 = phi i32 [ 1, %.thread23.thread35 ], [ 1, %.thread23 ], [ 0, %dec_label_pc_d3cc ]
  %v7_d3d8 = icmp sgt i32 %v0_d3d0, 6
  br i1 %v7_d3d8, label %dec_label_pc_d3dc, label %dec_label_pc_d39c.backedge

dec_label_pc_d3dc:                                ; preds = %dec_label_pc_d39c.backedge, %dec_label_pc_d3d0, %dec_label_pc_d39c.preheader
  %v1_d42c = phi i32 [ %v1_d3a456, %dec_label_pc_d39c.preheader ], [ %v1_d3a4, %dec_label_pc_d39c.backedge ], [ %v0_d3a482, %dec_label_pc_d3d0 ]
  %v0_d3dc = phi i32 [ %v1_d384, %dec_label_pc_d39c.preheader ], [ %v0_d3dc85, %dec_label_pc_d39c.backedge ], [ %v0_d3dc86, %dec_label_pc_d3d0 ]
  %v2_d3dc = icmp eq i32 %v0_d3dc, 0
  br i1 %v2_d3dc, label %dec_label_pc_d2b4.backedge, label %dec_label_pc_d3e8

dec_label_pc_d3e8:                                ; preds = %dec_label_pc_d3dc
  %v2_d3f0 = add i32 %v1_d42c, %v2_d314
  %v1_d3f4 = add i32 %v2_d3f0, -545
  %v2_d3f4 = inttoptr i32 %v1_d3f4 to i8*
  %v3_d3f4 = load i8, i8* %v2_d3f4, align 1
  %v2_d3f8 = icmp eq i8 %v3_d3f4, 0
  br i1 %v2_d3f8, label %dec_label_pc_d428, label %bb132

bb132:                                            ; preds = %dec_label_pc_d3e8
  %v8_d3fc = icmp eq i8 %v3_d3f4, 32
  br i1 %v8_d3fc, label %dec_label_pc_d428, label %dec_label_pc_d404

dec_label_pc_d404:                                ; preds = %bb132
  %v2_d404 = add i32 %v1_d42c, %v1_d388
  br label %dec_label_pc_d408

dec_label_pc_d408:                                ; preds = %bb133, %dec_label_pc_d404
  %v0_d41428 = phi i32 [ %v1_d414, %bb133 ], [ %v1_d42c, %dec_label_pc_d404 ]
  %v0_d408 = phi i32 [ %v1_d408, %bb133 ], [ %v2_d404, %dec_label_pc_d404 ]
  %v1_d408 = add i32 %v0_d408, 1
  %v2_d408 = inttoptr i32 %v1_d408 to i8*
  %v3_d408 = load i8, i8* %v2_d408, align 1
  %v2_d40c = icmp eq i8 %v3_d408, 0
  br i1 %v2_d40c, label %.thread27, label %bb133

.thread27:                                        ; preds = %dec_label_pc_d408
  %v1_d41429 = add i32 %v0_d41428, 1
  br label %dec_label_pc_d41c

bb133:                                            ; preds = %dec_label_pc_d408
  %v8_d410 = icmp eq i8 %v3_d408, 32
  %v1_d414 = add i32 %v0_d41428, 1
  br i1 %v8_d410, label %dec_label_pc_d41c, label %dec_label_pc_d408

dec_label_pc_d41c:                                ; preds = %bb133, %.thread27
  %v1_d424 = phi i32 [ %v1_d41429, %.thread27 ], [ %v1_d414, %bb133 ]
  %v2_d424 = add i32 %v1_d424, %v2_d314
  br label %dec_label_pc_d428

dec_label_pc_d428:                                ; preds = %dec_label_pc_d3e8, %bb132, %dec_label_pc_d41c
  %v2_d434 = phi i32 [ %v2_d3f0, %dec_label_pc_d3e8 ], [ %v2_d3f0, %bb132 ], [ %v2_d424, %dec_label_pc_d41c ]
  %v2_d42c = add i32 %v1_d42c, %v1_d388
  store i32 %v2_d42c, i32* @r4, align 4
  %v3_d434 = add i32 %v2_d434, -545
  %v4_d434 = inttoptr i32 %v3_d434 to i8*
  store i8 0, i8* %v4_d434, align 1
  %v1_d438 = inttoptr i32 %v2_d42c to i8*
  %v2_d438 = call i32 @function_122ec(i8* %v1_d438)
  %v8_d440 = icmp sgt i32 %v2_d438, 15
  br i1 %v8_d440, label %dec_label_pc_d2b4.backedge, label %dec_label_pc_d444

dec_label_pc_d444:                                ; preds = %dec_label_pc_d428
  %v0_d448 = load i32, i32* @r4, align 4
  %v2_d44c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_d44c, i32* @r0, align 4
  %v2_d450 = bitcast i32* %stack_var_-52 to i8*
  %v3_d450 = call i32 @function_12314(i8* %v2_d450, i32 %v0_d448)
  br label %dec_label_pc_d454

dec_label_pc_d454.loopexit:                       ; preds = %dec_label_pc_d2b4.backedge, %dec_label_pc_d2b4.preheader
  %.pre = ptrtoint i32* %stack_var_-52 to i32
  %.pre95 = bitcast i32* %stack_var_-52 to i8*
  br label %dec_label_pc_d454

dec_label_pc_d454:                                ; preds = %dec_label_pc_d454.loopexit, %dec_label_pc_d444
  %v1_d464.pre-phi = phi i8* [ %.pre95, %dec_label_pc_d454.loopexit ], [ %v2_d450, %dec_label_pc_d444 ]
  %v2_d460.pre-phi = phi i32 [ %.pre, %dec_label_pc_d454.loopexit ], [ %v2_d44c, %dec_label_pc_d444 ]
  %v0_d454 = load i32, i32* @r8, align 4
  %v1_d458 = call i32 @function_12bf0(i32 %v0_d454)
  %v2_d464 = call i32 @function_122ec(i8* %v1_d464.pre-phi)
  store i32 %v2_d464, i32* @r4, align 4
  %v2_d468 = icmp eq i32 %v2_d464, 0
  br i1 %v2_d468, label %dec_label_pc_d710, label %dec_label_pc_d470

dec_label_pc_d470:                                ; preds = %dec_label_pc_d454
  %v3_d478 = call i32 @function_11c3c(i32 13, i32* null)
  store i32 %v3_d478, i32* @r0, align 4
  %v1_d47c = call i32 @function_12ff8(i32 %v3_d478)
  store i32 %v1_d47c, i32* @r8, align 4
  %v2_d480 = icmp eq i32 %v1_d47c, 0
  br i1 %v2_d480, label %dec_label_pc_d6b0, label %dec_label_pc_d490.preheader

dec_label_pc_d490.preheader:                      ; preds = %dec_label_pc_d470
  store i32 0, i32* @r5, align 4
  %v1_d49445 = inttoptr i32 %v1_d47c to i32*
  %v2_d49446 = call i32 @function_130f4(i32* %v1_d49445)
  %v2_d49848 = icmp eq i32 %v2_d49446, 0
  br i1 %v2_d49848, label %dec_label_pc_d6a4, label %dec_label_pc_d4a0.preheader

dec_label_pc_d490.loopexit:                       ; preds = %dec_label_pc_d4a8, %dec_label_pc_d4bc, %dec_label_pc_d524
  %v0_d490 = load i32, i32* @r8, align 4
  %v1_d494 = inttoptr i32 %v0_d490 to i32*
  %v2_d494 = call i32 @function_130f4(i32* %v1_d494)
  %v2_d498 = icmp eq i32 %v2_d494, 0
  br i1 %v2_d498, label %dec_label_pc_d6a4, label %dec_label_pc_d4a0.preheader

dec_label_pc_d4a0.preheader:                      ; preds = %dec_label_pc_d490.preheader, %dec_label_pc_d490.loopexit
  %v0_d4a894 = phi i32 [ %v2_d494, %dec_label_pc_d490.loopexit ], [ %v2_d49446, %dec_label_pc_d490.preheader ]
  br label %dec_label_pc_d4a0

dec_label_pc_d4a0:                                ; preds = %dec_label_pc_d4a0.preheader, %dec_label_pc_d68c
  %v0_d4b4 = phi i32 [ %v0_d4a894, %dec_label_pc_d4a0.preheader ], [ %v2_d698, %dec_label_pc_d68c ]
  %v0_d4a0 = load i32, i32* @r5, align 4
  %v2_d4a0 = icmp eq i32 %v0_d4a0, 0
  br i1 %v2_d4a0, label %dec_label_pc_d4a8, label %dec_label_pc_d6a4

dec_label_pc_d4a8:                                ; preds = %dec_label_pc_d4a0
  %v1_d4a8 = add i32 %v0_d4b4, 11
  %v2_d4a8 = inttoptr i32 %v1_d4a8 to i8*
  %v3_d4a8 = load i8, i8* %v2_d4a8, align 1
  %v4_d4a8 = zext i8 %v3_d4a8 to i32
  %v1_d4ac = add nsw i32 %v4_d4a8, -48
  store i32 %v1_d4a8, i32* @r7, align 4
  %tmp = icmp ugt i32 %v1_d4ac, 9
  br i1 %tmp, label %dec_label_pc_d490.loopexit, label %dec_label_pc_d4bc

dec_label_pc_d4bc:                                ; preds = %dec_label_pc_d4a8
  %v3_d4c4 = call i32 @function_11c3c(i32 13, i32* null)
  store i32 %v2_d1d8, i32* @r0, align 4
  %v3_d4d0 = call i32 @function_12314(i8* %v2_d1f8, i32 %v3_d4c4)
  %v2_d4d8 = call i32 @function_122ec(i8* %v2_d1f8)
  %v0_d4dc = load i32, i32* @r7, align 4
  %v0_d4e0 = load i32, i32* @sl, align 4
  %v2_d4e0 = add i32 %v0_d4e0, %v2_d4d8
  store i32 %v2_d4e0, i32* @r0, align 4
  %v2_d4e4 = inttoptr i32 %v2_d4e0 to i8*
  %v3_d4e4 = call i32 @function_12314(i8* %v2_d4e4, i32 %v0_d4dc)
  %v2_d4ec = call i32 @function_122ec(i8* %v2_d1f8)
  %v0_d4f0 = load i32, i32* @r5, align 4
  store i32 %v2_d4ec, i32* @r4, align 4
  %v2_d4fc = inttoptr i32 %v0_d4f0 to i32*
  %v3_d4fc = call i32 @function_11c3c(i32 14, i32* %v2_d4fc)
  %v0_d504 = load i32, i32* @sl, align 4
  %v1_d504 = load i32, i32* @r4, align 4
  %v2_d504 = add i32 %v1_d504, %v0_d504
  store i32 %v2_d504, i32* @r0, align 4
  %v2_d508 = inttoptr i32 %v2_d504 to i8*
  %v3_d508 = call i32 @function_12314(i8* %v2_d508, i32 %v3_d4fc)
  %v4_d518 = call i32 @function_12de4(i8* %v2_d1f8, i32 %v2_d1ec, i32 4096)
  %v7_d51c = icmp eq i32 %v4_d518, -1
  br i1 %v7_d51c, label %dec_label_pc_d490.loopexit, label %dec_label_pc_d524

dec_label_pc_d524:                                ; preds = %dec_label_pc_d4bc
  %v0_d524 = load i32, i32* @r5, align 4
  %v2_d52c = inttoptr i32 %v0_d524 to i32*
  %v3_d52c = call i32 @function_11c3c(i32 13, i32* %v2_d52c)
  store i32 %v2_d1d8, i32* @r0, align 4
  %v3_d538 = call i32 @function_12314(i8* %v2_d1f8, i32 %v3_d52c)
  %v2_d540 = call i32 @function_122ec(i8* %v2_d1f8)
  %v0_d544 = load i32, i32* @r7, align 4
  %v0_d548 = load i32, i32* @sl, align 4
  %v2_d548 = add i32 %v0_d548, %v2_d540
  store i32 %v2_d548, i32* @r0, align 4
  %v2_d54c = inttoptr i32 %v2_d548 to i8*
  %v3_d54c = call i32 @function_12314(i8* %v2_d54c, i32 %v0_d544)
  %v2_d554 = call i32 @function_122ec(i8* %v2_d1f8)
  %v0_d558 = load i32, i32* @r5, align 4
  store i32 %v2_d554, i32* @r4, align 4
  %v2_d564 = inttoptr i32 %v0_d558 to i32*
  %v3_d564 = call i32 @function_11c3c(i32 15, i32* %v2_d564)
  %v0_d56c = load i32, i32* @sl, align 4
  %v1_d56c = load i32, i32* @r4, align 4
  %v2_d56c = add i32 %v1_d56c, %v0_d56c
  store i32 %v2_d56c, i32* @r0, align 4
  %v2_d570 = inttoptr i32 %v2_d56c to i8*
  %v3_d570 = call i32 @function_12314(i8* %v2_d570, i32 %v3_d564)
  store i32 %v2_d1d8, i32* @r0, align 4
  %v1_d578 = call i32 @function_12ff8(i32 %v2_d1d8)
  store i32 %v1_d578, i32* @sb, align 4
  %v2_d57c = icmp eq i32 %v1_d578, 0
  br i1 %v2_d57c, label %dec_label_pc_d490.loopexit, label %dec_label_pc_d584.preheader

dec_label_pc_d584.preheader:                      ; preds = %dec_label_pc_d524
  %v1_d58840 = inttoptr i32 %v1_d578 to i32*
  %v2_d58841 = call i32 @function_130f4(i32* %v1_d58840)
  store i32 %v2_d58841, i32* @r6, align 4
  %v2_d58c43 = icmp eq i32 %v2_d58841, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_d1ec, i32* @r0, align 4
  br i1 %v2_d58c43, label %dec_label_pc_d68c, label %dec_label_pc_d59cthread-pre-split

dec_label_pc_d584.loopexit:                       ; preds = %dec_label_pc_d5a4, %dec_label_pc_d63c
  %v0_d584 = load i32, i32* @sb, align 4
  %v1_d588 = inttoptr i32 %v0_d584 to i32*
  %v2_d588 = call i32 @function_130f4(i32* %v1_d588)
  store i32 %v2_d588, i32* @r6, align 4
  %v2_d58c = icmp eq i32 %v2_d588, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_d1ec, i32* @r0, align 4
  br i1 %v2_d58c, label %dec_label_pc_d68c, label %dec_label_pc_d59cthread-pre-split

dec_label_pc_d59cthread-pre-split:                ; preds = %dec_label_pc_d584.preheader, %dec_label_pc_d584.loopexit
  %v0_d59c.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_d59c

dec_label_pc_d59c:                                ; preds = %dec_label_pc_d59cthread-pre-split, %dec_label_pc_d664
  %v0_d59c = phi i32 [ %v0_d59c.pr, %dec_label_pc_d59cthread-pre-split ], [ 1, %dec_label_pc_d664 ]
  %v2_d59c = icmp eq i32 %v0_d59c, 0
  br i1 %v2_d59c, label %dec_label_pc_d5a4, label %dec_label_pc_d68c

dec_label_pc_d5a4:                                ; preds = %dec_label_pc_d59c
  %v0_d5a4 = call i32 @function_1238c()
  %v0_d5a8 = load i32, i32* @r5, align 4
  %v2_d5b0 = inttoptr i32 %v0_d5a8 to i32*
  %v3_d5b0 = call i32 @function_11c3c(i32 13, i32* %v2_d5b0)
  store i32 %v2_d1d8, i32* @r0, align 4
  %v3_d5bc = call i32 @function_12314(i8* %v2_d1f8, i32 %v3_d5b0)
  %v2_d5c4 = call i32 @function_122ec(i8* %v2_d1f8)
  %v0_d5c8 = load i32, i32* @r7, align 4
  %v0_d5cc = load i32, i32* @sl, align 4
  %v2_d5cc = add i32 %v0_d5cc, %v2_d5c4
  store i32 %v2_d5cc, i32* @r0, align 4
  %v2_d5d0 = inttoptr i32 %v2_d5cc to i8*
  %v3_d5d0 = call i32 @function_12314(i8* %v2_d5d0, i32 %v0_d5c8)
  %v2_d5d8 = call i32 @function_122ec(i8* %v2_d1f8)
  %v0_d5dc = load i32, i32* @r5, align 4
  store i32 %v2_d5d8, i32* @r4, align 4
  %v2_d5e8 = inttoptr i32 %v0_d5dc to i32*
  %v3_d5e8 = call i32 @function_11c3c(i32 15, i32* %v2_d5e8)
  %v0_d5f0 = load i32, i32* @sl, align 4
  %v1_d5f0 = load i32, i32* @r4, align 4
  %v2_d5f0 = add i32 %v1_d5f0, %v0_d5f0
  store i32 %v2_d5f0, i32* @r0, align 4
  %v2_d5f4 = inttoptr i32 %v2_d5f0 to i8*
  %v3_d5f4 = call i32 @function_12314(i8* %v2_d5f4, i32 %v3_d5e8)
  %v2_d5fc = call i32 @function_122ec(i8* %v2_d1f8)
  %v0_d604 = load i32, i32* @sl, align 4
  %v2_d604 = add i32 %v0_d604, %v2_d5fc
  store i32 %v2_d604, i32* @r0, align 4
  %v2_d608 = inttoptr i32 %v2_d604 to i8*
  %v3_d608 = call i32 @function_12314(i8* %v2_d608, i32 ptrtoint (i32* @global_var_15464.61 to i32))
  %v2_d610 = call i32 @function_122ec(i8* %v2_d1f8)
  %v0_d614 = load i32, i32* @r6, align 4
  %v1_d614 = add i32 %v0_d614, 11
  %v0_d618 = load i32, i32* @sl, align 4
  %v2_d618 = add i32 %v0_d618, %v2_d610
  store i32 %v2_d618, i32* @r0, align 4
  %v2_d61c = inttoptr i32 %v2_d618 to i8*
  %v3_d61c = call i32 @function_12314(i8* %v2_d61c, i32 %v1_d614)
  %v4_d62c = call i32 @function_12de4(i8* %v2_d1f8, i32 %v2_d1ec, i32 4096)
  %v7_d630 = icmp eq i32 %v4_d62c, -1
  br i1 %v7_d630, label %dec_label_pc_d584.loopexit, label %dec_label_pc_d63c

dec_label_pc_d63c:                                ; preds = %dec_label_pc_d5a4
  %v2_d63c = call i32 @function_122ec(i8* %v2_d210)
  store i32 %v2_d63c, i32* @r1, align 4
  %v4_d650 = call i32 @function_12640(i8* %v2_d210, i32 %v2_d63c, i32 %v2_d460.pre-phi)
  %v7_d654 = icmp eq i32 %v4_d650, -1
  br i1 %v7_d654, label %dec_label_pc_d584.loopexit, label %dec_label_pc_d664

dec_label_pc_d664:                                ; preds = %dec_label_pc_d63c
  %v0_d65c = load i32, i32* @r7, align 4
  %v2_d664 = inttoptr i32 %v0_d65c to i8*
  %v3_d664 = call i32 @function_12418(i8* %v2_d664, i32 10)
  %v2_d66c = call i32 @function_12cf0(i32 %v3_d664, i32 9)
  %v0_d670 = load i32, i32* @sb, align 4
  %v1_d674 = inttoptr i32 %v0_d670 to i32*
  %v2_d674 = call i32 @function_130f4(i32* %v1_d674)
  store i32 %v2_d674, i32* @r6, align 4
  %v2_d678 = icmp eq i32 %v2_d674, 0
  store i32 1, i32* @r5, align 4
  store i32 4096, i32* @r1, align 4
  store i32 %v2_d1ec, i32* @r0, align 4
  br i1 %v2_d678, label %dec_label_pc_d68c, label %dec_label_pc_d59c

dec_label_pc_d68c:                                ; preds = %dec_label_pc_d584.loopexit, %dec_label_pc_d664, %dec_label_pc_d59c, %dec_label_pc_d584.preheader
  %v0_d68c = load i32, i32* @sb, align 4
  %v1_d690 = inttoptr i32 %v0_d68c to i32*
  %v2_d690 = call i32 @function_12f44(i32* %v1_d690)
  %v0_d694 = load i32, i32* @r8, align 4
  %v1_d698 = inttoptr i32 %v0_d694 to i32*
  %v2_d698 = call i32 @function_130f4(i32* %v1_d698)
  %v2_d69c = icmp eq i32 %v2_d698, 0
  br i1 %v2_d69c, label %dec_label_pc_d6a4, label %dec_label_pc_d4a0

dec_label_pc_d6a4:                                ; preds = %dec_label_pc_d490.loopexit, %dec_label_pc_d68c, %dec_label_pc_d4a0, %dec_label_pc_d490.preheader
  %v0_d6a4 = load i32, i32* @r8, align 4
  %v1_d6a8 = inttoptr i32 %v0_d6a4 to i32*
  %v2_d6a8 = call i32 @function_12f44(i32* %v1_d6a8)
  %v0_d6ac = load i32, i32* @r5, align 4
  %v1_d6ac = urem i32 %v0_d6ac, 256
  br label %dec_label_pc_d6b0

dec_label_pc_d6b0:                                ; preds = %dec_label_pc_d470, %dec_label_pc_d6a4
  %storemerge = phi i32 [ %v1_d6ac, %dec_label_pc_d6a4 ], [ 0, %dec_label_pc_d470 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_d6b4 = call i32 @function_13ffc(i32 1)
  %v1_d6bc = call i32 @function_11c68(i32 13)
  %v1_d6c4 = call i32 @function_11c68(i32 14)
  %v1_d6cc = call i32 @function_11c68(i32 15)
  br label %dec_label_pc_d6d0

dec_label_pc_d6d0:                                ; preds = %dec_label_pc_d274, %dec_label_pc_d710, %dec_label_pc_d6b0
  %v0_d6d0 = load i32, i32* @r4, align 4
  %v2_d6dc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_d6dc, i32* @r4, align 4
  store i32 %v6_d1c4, i32* @r5, align 4
  store i32 %v9_d1c4, i32* @r6, align 4
  store i32 %v12_d1c4, i32* @r7, align 4
  store i32 %v15_d1c4, i32* @r8, align 4
  store i32 %v18_d1c4, i32* @sb, align 4
  store i32 %v21_d1c4, i32* @sl, align 4
  store i32 %v24_d1c4, i32* @fp, align 4
  ret i32 %v0_d6d0

dec_label_pc_d6e0:                                ; preds = %dec_label_pc_d3c4
  %v1_d6e0 = add i32 %v0_d6e0, 1
  store i32 %v1_d6e0, i32* @lr, align 4
  %v7_d6e4 = icmp eq i32 %v0_d6e0, 0
  br i1 %v7_d6e4, label %dec_label_pc_d6ec, label %dec_label_pc_d3cc

dec_label_pc_d6ec:                                ; preds = %dec_label_pc_d6e0
  %v1_d6ec = add i32 %v0_d3d4, 3
  %v2_d6ec = inttoptr i32 %v1_d6ec to i8*
  %v3_d6ec = load i8, i8* %v2_d6ec, align 1
  %v7_d6f0 = icmp eq i8 %v3_d6ec, 65
  br i1 %v7_d6f0, label %dec_label_pc_d700, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_d6ec
  br label %dec_label_pc_d39c.backedge

dec_label_pc_d700:                                ; preds = %dec_label_pc_d6ec
  store i32 %v1_d6e0, i32* @r4, align 4
  br label %dec_label_pc_d39c.backedge

dec_label_pc_d39c.backedge:                       ; preds = %.thread33, %dec_label_pc_d700, %dec_label_pc_d3d0
  %v0_d3dc85 = phi i32 [ %v1_d6e0, %dec_label_pc_d700 ], [ %v0_d3dc86, %dec_label_pc_d3d0 ], [ %v0_d3dc86, %.thread33 ]
  %v0_d6e074 = phi i32 [ %v1_d6e0, %dec_label_pc_d700 ], [ %v0_d3d0, %dec_label_pc_d3d0 ], [ %v1_d6e0, %.thread33 ]
  %v0_d3c4.pr71 = phi i32 [ 0, %dec_label_pc_d700 ], [ %v0_d3c4.pr72, %dec_label_pc_d3d0 ], [ 0, %.thread33 ]
  %v0_d39c = add i32 %v0_d3d4, 1
  %v1_d39c = add i32 %v0_d3d4, 3
  %v2_d39c = inttoptr i32 %v1_d39c to i8*
  %v3_d39c = load i8, i8* %v2_d39c, align 1
  %v2_d3a0 = icmp eq i8 %v3_d39c, 0
  %v1_d3a4 = add i32 %v0_d3a482, 1
  br i1 %v2_d3a0, label %dec_label_pc_d3dc, label %dec_label_pc_d3ac

dec_label_pc_d710:                                ; preds = %dec_label_pc_d454
  %v1_d714 = call i32 @function_11c68(i32 13)
  %v1_d71c = call i32 @function_11c68(i32 14)
  %v1_d724 = call i32 @function_11c68(i32 15)
  %v1_d72c = call i32 @function_11c68(i32 17)
  br label %dec_label_pc_d6d0

dec_label_pc_d734:                                ; preds = %dec_label_pc_d1c4
  store i8 48, i8* %stack_var_-68, align 1
  br label %dec_label_pc_d274

; uselistorder directives
  uselistorder i32 %v1_d3a4, { 1, 0 }
  uselistorder i8 %v3_d39c, { 1, 0 }
  uselistorder i32 %v0_d3dc85, { 1, 0 }
  uselistorder i32 %v1_d6e0, { 4, 3, 0, 2, 5, 1 }
  uselistorder i32 %v2_d698, { 1, 0 }
  uselistorder i32 %v1_d408, { 1, 0 }
  uselistorder i32 %v0_d41428, { 1, 0 }
  uselistorder i32 %v1_d42c, { 0, 3, 1, 2 }
  uselistorder i32 %v0_d3d0, { 1, 0 }
  uselistorder i32 %v0_d3a482, { 1, 0 }
  uselistorder i32 %v0_d6e0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_d3dc86, { 1, 2, 0 }
  uselistorder i32 %v1_d3a456, { 1, 0 }
  uselistorder i32 %v2_d388, { 1, 0 }
  uselistorder i32 %v1_d384, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v0_d34013, { 1, 0, 2 }
  uselistorder i32 %v0_d330, { 1, 0 }
  uselistorder i32 %v1_d310, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_d2a4, { 1, 2, 0 }
  uselistorder i32 %v2_d1ec, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_d1d8, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i8* %stack_var_-581, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-68, { 2, 0, 1 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32)* @function_12418, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_12544, { 1, 0 }
  uselistorder label %dec_label_pc_d39c.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d6d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d6b0, { 1, 0 }
  uselistorder label %dec_label_pc_d6a4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_d68c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_d59c, { 1, 0 }
  uselistorder label %dec_label_pc_d59cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_d584.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_d4a0, { 1, 0 }
  uselistorder label %dec_label_pc_d4a0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_d490.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d428, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d3d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d3ac, { 1, 0 }
  uselistorder label %dec_label_pc_d350, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d2b4.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_d304, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_d2cc, { 1, 0 }
  uselistorder label %dec_label_pc_d274, { 1, 0 }
}

define i32 @function_d760(i32 %arg1) local_unnamed_addr {
dec_label_pc_d760:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-8476 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-4380 = alloca i32, align 4
  %stack_var_-8484 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_d760 = load i32, i32* @r4, align 4
  store i32 %v3_d760, i32* %stack_var_-36, align 4
  %v6_d760 = load i32, i32* @r5, align 4
  %v9_d760 = load i32, i32* @r6, align 4
  %v12_d760 = load i32, i32* @r7, align 4
  %v15_d760 = load i32, i32* @r8, align 4
  %v18_d760 = load i32, i32* @sb, align 4
  %v21_d760 = load i32, i32* @sl, align 4
  %v24_d760 = load i32, i32* @fp, align 4
  %v28_d760 = ptrtoint i32* %stack_var_-36 to i32
  %v2_d76c = call i32 @function_12ec0(i32* null)
  store i32 %v2_d76c, i32* @r7, align 4
  %v0_d774 = call i32 @function_12c1c()
  %v7_d778 = icmp eq i32 %v0_d774, -1
  %. = zext i1 %v7_d778 to i32
  %tmp130 = icmp slt i32 %v0_d774, 1
  %storemerge86 = select i1 %tmp130, i32 %., i32 1
  store i32 %storemerge86, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1dc70.63 to i32), i32* %r3.global-to-local, align 4
  %v2_d794 = icmp eq i32 %storemerge86, 0
  store i32 %v0_d774, i32* @global_var_1dc70.63, align 4
  br i1 %v2_d794, label %dec_label_pc_d7a8, label %dec_label_pc_d7a0

dec_label_pc_d7a0:                                ; preds = %dec_label_pc_d8bc, %dec_label_pc_d7a8, %dec_label_pc_d760
  %v29_d7a4 = phi i32 [ %v3_d84c, %dec_label_pc_d7a8 ], [ %v0_d774, %dec_label_pc_d760 ], [ 0, %dec_label_pc_d8bc ]
  %v2_d7a4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_d7a4, i32* @r4, align 4
  store i32 %v6_d760, i32* @r5, align 4
  store i32 %v9_d760, i32* @r6, align 4
  store i32 %v12_d760, i32* @r7, align 4
  store i32 %v15_d760, i32* @r8, align 4
  store i32 %v18_d760, i32* @sb, align 4
  store i32 %v21_d760, i32* @sl, align 4
  store i32 %v24_d760, i32* @fp, align 4
  ret i32 %v29_d7a4

dec_label_pc_d7a8:                                ; preds = %dec_label_pc_d760
  %v1_d7ac = call i32 @function_13ffc(i32 5)
  %v1_d7b4 = call i32 @function_13678(i32 4096)
  store i32 ptrtoint (i32* @global_var_1dbd0.65 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc6c.67 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_d7b4, i32* %r2.global-to-local, align 4
  %v0_d7c4 = load i32, i32* @r5, align 4
  %v1_d7c4 = trunc i32 %v0_d7c4 to i8
  %v3_d7c4 = inttoptr i32 %v1_d7b4 to i8*
  store i8 %v1_d7c4, i8* %v3_d7c4, align 1
  %v0_d7cc = load i32, i32* @r5, align 4
  %v1_d7cc = load i32, i32* %r3.global-to-local, align 4
  %v2_d7cc = inttoptr i32 %v1_d7cc to i32*
  store i32 %v0_d7cc, i32* %v2_d7cc, align 4
  %v0_d7d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_d7d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_d7d0 = inttoptr i32 %v1_d7d0 to i32*
  store i32 %v0_d7d0, i32* %v2_d7d0, align 4
  %v1_d7d4 = call i32 @function_11d20(i32 13)
  %v1_d7dc = call i32 @function_11d20(i32 14)
  %v0_d7e0 = load i32, i32* @r5, align 4
  store i32 %v0_d7e0, i32* %r1.global-to-local, align 4
  %v2_d7e8 = inttoptr i32 %v0_d7e0 to i32*
  %v3_d7e8 = call i32 @function_11c3c(i32 13, i32* %v2_d7e8)
  %v2_d7f0 = ptrtoint i32* %stack_var_-4380 to i32
  store i32 %v2_d7f0, i32* @fp, align 4
  store i32 %v3_d7e8, i32* %r1.global-to-local, align 4
  store i32 %v2_d7f0, i32* @r0, align 4
  %v2_d7fc = bitcast i32* %stack_var_-4380 to i8*
  %v3_d7fc = call i32 @function_12314(i8* %v2_d7fc, i32 %v3_d7e8)
  %v0_d800 = load i32, i32* @fp, align 4
  %v2_d800 = add i32 %v0_d800, %v3_d7fc
  store i32 %v2_d800, i32* @r4, align 4
  %v0_d804 = call i32 @function_12c48()
  %v2_d80c = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_d80c, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_d814 = trunc i32 %v0_d804 to i8
  %v4_d814 = call i32 @function_12750(i8 %v3_d814, i32 10, i32 %v2_d80c)
  store i32 %v4_d814, i32* %r1.global-to-local, align 4
  %v0_d81c = load i32, i32* @r4, align 4
  store i32 %v0_d81c, i32* @r0, align 4
  %v2_d820 = inttoptr i32 %v0_d81c to i8*
  %v3_d820 = call i32 @function_12314(i8* %v2_d820, i32 %v4_d814)
  %v0_d824 = load i32, i32* @r5, align 4
  store i32 %v0_d824, i32* %r1.global-to-local, align 4
  %v0_d828 = load i32, i32* @r4, align 4
  %v2_d828 = add i32 %v0_d828, %v3_d820
  store i32 %v2_d828, i32* @r4, align 4
  %v2_d830 = inttoptr i32 %v0_d824 to i32*
  %v3_d830 = call i32 @function_11c3c(i32 14, i32* %v2_d830)
  store i32 %v3_d830, i32* %r1.global-to-local, align 4
  %v0_d838 = load i32, i32* @r4, align 4
  store i32 %v0_d838, i32* @r0, align 4
  %v2_d83c = inttoptr i32 %v0_d838 to i8*
  %v3_d83c = call i32 @function_12314(i8* %v2_d83c, i32 %v3_d830)
  %v0_d840 = load i32, i32* @r5, align 4
  store i32 %v0_d840, i32* %r1.global-to-local, align 4
  store i32 %v3_d83c, i32* @r6, align 4
  %v3_d84c = call i32 @function_12d1c(i8* %v2_d7fc, i32 %v0_d840)
  %v7_d850 = icmp eq i32 %v3_d84c, -1
  br i1 %v7_d850, label %dec_label_pc_d7a0, label %dec_label_pc_d858

dec_label_pc_d858:                                ; preds = %dec_label_pc_d7a8
  %v1_d858 = call i32 @function_12bf0(i32 %v3_d84c)
  %v1_d860 = call i32 @function_11c68(i32 13)
  %v1_d868 = call i32 @function_11c68(i32 14)
  store i32 ptrtoint (i32* @global_var_1dc6c.67 to i32), i32* %r3.global-to-local, align 4
  %v2_d874 = load i32, i32* @global_var_1dc6c.67, align 4
  store i32 %v2_d874, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v4_d880 = call i32 @function_12de4(i8* %v2_d7fc, i32 %v2_d874, i32 4095)
  %v7_d884 = icmp eq i32 %v4_d880, -1
  br i1 %v7_d884, label %.thread2.thread, label %bb133

.thread2.thread:                                  ; preds = %dec_label_pc_d858
  %v0_d89024 = load i32, i32* @r4, align 4
  %v1_d89025 = load i32, i32* @r6, align 4
  %v2_d89026 = add i32 %v1_d89025, %v0_d89024
  store i32 %v2_d89026, i32* %r1.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_d858
  %v3_d88c = load i32, i32* @global_var_1dc6c.67, align 4
  store i32 %v3_d88c, i32* %r3.global-to-local, align 4
  %v0_d890 = load i32, i32* @r4, align 4
  %v1_d890 = load i32, i32* @r6, align 4
  %v2_d890 = add i32 %v1_d890, %v0_d890
  store i32 %v2_d890, i32* %r1.global-to-local, align 4
  %v1_d894 = load i32, i32* @r5, align 4
  %v2_d894 = trunc i32 %v1_d894 to i8
  %v5_d894 = add i32 %v3_d88c, %v4_d880
  %v6_d894 = inttoptr i32 %v5_d894 to i8*
  store i8 %v2_d894, i8* %v6_d894, align 1
  %v1_d898.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread2.thread, %bb133
  %v1_d898 = phi i32 [ %v2_d89026, %.thread2.thread ], [ %v1_d898.pre, %bb133 ]
  %v0_d898 = load i32, i32* @fp, align 4
  %v2_d898 = sub i32 %v1_d898, %v0_d898
  store i32 %v2_d898, i32* @r1, align 4
  store i32 %v2_d7f0, i32* @r0, align 4
  %v0_d8a0 = call i32 @function_1238c()
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_d8b0 = load i32, i32* @r7, align 4
  store i32 %v0_d8b0, i32* @r5, align 4
  %v2_d8b4 = ptrtoint i32* %stack_var_-8476 to i32
  store i32 %v2_d8b4, i32* @sl, align 4
  store i32 400, i32* @r8, align 4
  %v2_d9a0 = ptrtoint i32* %stack_var_-292 to i32
  %v2_dbf0 = ptrtoint i32* %stack_var_-284 to i32
  %v2_dbf4 = bitcast i32* %stack_var_-284 to i8*
  %v2_dc40 = ptrtoint i32* %stack_var_-220 to i32
  %v2_dc44 = bitcast i32* %stack_var_-220 to i8*
  %v2_dd9c = ptrtoint i32* %stack_var_-40 to i32
  %v2_ddb0 = ptrtoint i32* %stack_var_-44 to i32
  %v2_db0c = ptrtoint i32* %stack_var_-108 to i32
  %v3_db14 = bitcast i32* %stack_var_-108 to %sockaddr*
  %v2_dad4 = ptrtoint i32* %stack_var_-92 to i32
  %v3_dadc = bitcast i32* %stack_var_-92 to %sockaddr*
  %v2_da9c = ptrtoint i32* %stack_var_-140 to i32
  %v3_daa4 = bitcast i32* %stack_var_-140 to %sockaddr*
  %v2_da64 = ptrtoint i32* %stack_var_-124 to i32
  %v3_da6c = bitcast i32* %stack_var_-124 to %sockaddr*
  %v2_da2c = ptrtoint i32* %stack_var_-76 to i32
  %v3_da34 = bitcast i32* %stack_var_-76 to %sockaddr*
  %v2_d9e4 = ptrtoint i32* %stack_var_-60 to i32
  %v3_d9ec = bitcast i32* %stack_var_-60 to %sockaddr*
  br label %dec_label_pc_d8bc

dec_label_pc_d8bc:                                ; preds = %dec_label_pc_dbb4, %bb134
  %stack_var_-8480.0 = phi i32 [ 0, %bb134 ], [ %stack_var_-8480.3, %dec_label_pc_dbb4 ]
  %v1_d8c0 = call i32 @function_11d20(i32 13)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d8cc = call i32 @function_11c3c(i32 13, i32* null)
  store i32 %v3_d8cc, i32* @r0, align 4
  %v1_d8d0 = call i32 @function_12ff8(i32 %v3_d8cc)
  store i32 %v1_d8d0, i32* @sb, align 4
  %v2_d8d4 = icmp eq i32 %v1_d8d0, 0
  br i1 %v2_d8d4, label %dec_label_pc_d7a0, label %dec_label_pc_d8dc

dec_label_pc_d8dc:                                ; preds = %dec_label_pc_d8bc
  %v1_d8e0 = call i32 @function_11c68(i32 13)
  %v1_d8ec = call i32 @function_d1c4(i32 58811)
  %v1_d8f8 = call i32 @function_d1c4(i32 50951)
  %v1_d904 = call i32 @function_d1c4(i32 14853)
  %v1_d90c = call i32 @function_d1c4(i32 20480)
  %v1_d918 = call i32 @function_d1c4(i32 47873)
  %v1_d924 = call i32 @function_d1c4(i32 57616)
  %v1_d930 = call i32 @function_d1c4(i32 2842)
  %v1_d93c = call i32 @function_d1c4(i32 10522)
  %v1_d944 = call i32 @function_d1c4(i32 5632)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d9d0 = call i32 @function_134e0(i32 2, i32 1, i32 0)
  %v7_d9d4 = icmp eq i32 %v3_d9d0, -1
  store i32 %v3_d9d0, i32* @r4, align 4
  br i1 %v7_d9d4, label %dec_label_pc_d9fc, label %dec_label_pc_d9e0

dec_label_pc_d9e0:                                ; preds = %dec_label_pc_d8dc
  store i32 %v2_d9e4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_d9ec = call i32 @function_13310(i32 %v3_d9d0, %sockaddr* %v3_d9ec, i32 16)
  %v0_d9f0 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d9f8 = call i32 @function_133c4(i32 %v0_d9f0, i32 1)
  br label %dec_label_pc_d9fc

dec_label_pc_d9fc:                                ; preds = %dec_label_pc_d8dc, %dec_label_pc_d9e0
  %v1_da00 = call i32 @function_d1c4(i32 5888)
  %v2_da04 = icmp eq i32 %v1_da00, 0
  br i1 %v2_da04, label %dec_label_pc_dec8, label %dec_label_pc_da0c

dec_label_pc_da0c:                                ; preds = %dec_label_pc_deec, %dec_label_pc_dedc, %dec_label_pc_dec8, %dec_label_pc_d9fc, %dec_label_pc_df00
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_da18 = call i32 @function_134e0(i32 2, i32 1, i32 0)
  %v7_da1c = icmp eq i32 %v3_da18, -1
  store i32 %v3_da18, i32* @r4, align 4
  br i1 %v7_da1c, label %dec_label_pc_da44, label %dec_label_pc_da28

dec_label_pc_da28:                                ; preds = %dec_label_pc_da0c
  store i32 %v2_da2c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_da34 = call i32 @function_13310(i32 %v3_da18, %sockaddr* %v3_da34, i32 16)
  %v0_da38 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_da40 = call i32 @function_133c4(i32 %v0_da38, i32 1)
  br label %dec_label_pc_da44

dec_label_pc_da44:                                ; preds = %dec_label_pc_da0c, %dec_label_pc_da28
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_da50 = call i32 @function_134e0(i32 2, i32 1, i32 0)
  %v7_da54 = icmp eq i32 %v3_da50, -1
  store i32 %v3_da50, i32* @r4, align 4
  br i1 %v7_da54, label %dec_label_pc_da7c, label %dec_label_pc_da60

dec_label_pc_da60:                                ; preds = %dec_label_pc_da44
  store i32 %v2_da64, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_da6c = call i32 @function_13310(i32 %v3_da50, %sockaddr* %v3_da6c, i32 16)
  %v0_da70 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_da78 = call i32 @function_133c4(i32 %v0_da70, i32 1)
  br label %dec_label_pc_da7c

dec_label_pc_da7c:                                ; preds = %dec_label_pc_da44, %dec_label_pc_da60
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_da88 = call i32 @function_134e0(i32 2, i32 1, i32 0)
  %v7_da8c = icmp eq i32 %v3_da88, -1
  store i32 %v3_da88, i32* @r4, align 4
  br i1 %v7_da8c, label %dec_label_pc_dab4, label %dec_label_pc_da98

dec_label_pc_da98:                                ; preds = %dec_label_pc_da7c
  store i32 %v2_da9c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_daa4 = call i32 @function_13310(i32 %v3_da88, %sockaddr* %v3_daa4, i32 16)
  %v0_daa8 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_dab0 = call i32 @function_133c4(i32 %v0_daa8, i32 1)
  br label %dec_label_pc_dab4

dec_label_pc_dab4:                                ; preds = %dec_label_pc_da7c, %dec_label_pc_da98
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_dac0 = call i32 @function_134e0(i32 2, i32 1, i32 0)
  %v7_dac4 = icmp eq i32 %v3_dac0, -1
  store i32 %v3_dac0, i32* @r4, align 4
  br i1 %v7_dac4, label %dec_label_pc_daec, label %dec_label_pc_dad0

dec_label_pc_dad0:                                ; preds = %dec_label_pc_dab4
  store i32 %v2_dad4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_dadc = call i32 @function_13310(i32 %v3_dac0, %sockaddr* %v3_dadc, i32 16)
  %v0_dae0 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_dae8 = call i32 @function_133c4(i32 %v0_dae0, i32 1)
  br label %dec_label_pc_daec

dec_label_pc_daec:                                ; preds = %dec_label_pc_dab4, %dec_label_pc_dad0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_daf8 = call i32 @function_134e0(i32 2, i32 1, i32 0)
  %v7_dafc = icmp eq i32 %v3_daf8, -1
  store i32 %v3_daf8, i32* @r4, align 4
  br i1 %v7_dafc, label %dec_label_pc_db24.preheader, label %dec_label_pc_db08

dec_label_pc_db08:                                ; preds = %dec_label_pc_daec
  store i32 %v2_db0c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_db14 = call i32 @function_13310(i32 %v3_daf8, %sockaddr* %v3_db14, i32 16)
  %v0_db18 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_db20 = call i32 @function_133c4(i32 %v0_db18, i32 1)
  br label %dec_label_pc_db24.preheader

dec_label_pc_db24.preheader:                      ; preds = %dec_label_pc_db08, %dec_label_pc_daec
  %v0_db2453 = load i32, i32* @sb, align 4
  %v1_db2854 = inttoptr i32 %v0_db2453 to i32*
  %v2_db2855 = call i32 @function_130f4(i32* %v1_db2854)
  %v2_db2c57 = icmp eq i32 %v2_db2855, 0
  br i1 %v2_db2c57, label %dec_label_pc_dbb4, label %dec_label_pc_db34.preheader

dec_label_pc_db34.preheader:                      ; preds = %dec_label_pc_db24.preheader, %dec_label_pc_db24.backedge
  %v0_db3466 = phi i32 [ %v2_db28, %dec_label_pc_db24.backedge ], [ %v2_db2855, %dec_label_pc_db24.preheader ]
  %stack_var_-8480.158 = phi i32 [ %stack_var_-8480.1.be, %dec_label_pc_db24.backedge ], [ %stack_var_-8480.0, %dec_label_pc_db24.preheader ]
  br label %dec_label_pc_db34

dec_label_pc_db34:                                ; preds = %dec_label_pc_db34.preheader, %dec_label_pc_db9c
  %v0_db44 = phi i32 [ %v2_dba8, %dec_label_pc_db9c ], [ %v0_db3466, %dec_label_pc_db34.preheader ]
  %stack_var_-8480.2 = phi i32 [ %v1_db58, %dec_label_pc_db9c ], [ %stack_var_-8480.158, %dec_label_pc_db34.preheader ]
  %v1_db34 = add i32 %v0_db44, 11
  %v2_db34 = inttoptr i32 %v1_db34 to i8*
  %v3_db34 = load i8, i8* %v2_db34, align 1
  %v4_db34 = zext i8 %v3_db34 to i32
  %v1_db38 = add nsw i32 %v4_db34, -48
  store i32 %v1_db38, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_db38, 9
  br i1 %tmp, label %dec_label_pc_db24.backedge, label %dec_label_pc_db44

dec_label_pc_db44:                                ; preds = %dec_label_pc_db34
  store i32 %v1_db34, i32* @r6, align 4
  %v2_db4c = call i32 @function_13dbc(i8* %v2_db34)
  %v0_db54 = load i32, i32* @r8, align 4
  %v1_db58 = add i32 %stack_var_-8480.2, 1
  store i32 %v2_db4c, i32* @r7, align 4
  %v5_db64 = icmp slt i32 %v0_db54, %v2_db4c
  %v2_dbc4 = call i32 @function_12ec0(i32* null)
  br i1 %v5_db64, label %dec_label_pc_dbc0, label %dec_label_pc_db68

dec_label_pc_db68:                                ; preds = %dec_label_pc_db44
  %v0_db70 = load i32, i32* @r5, align 4
  %v2_db70 = sub i32 %v2_dbc4, %v0_db70
  %v7_db78 = icmp slt i32 %v2_db70, 601
  br i1 %v7_db78, label %dec_label_pc_db80, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_db68
  store i32 400, i32* @r8, align 4
  br label %dec_label_pc_db24.backedge

dec_label_pc_db80:                                ; preds = %dec_label_pc_db68
  %v0_db80 = load i32, i32* @r7, align 4
  %v7_db84 = icmp slt i32 %v0_db80, 401
  br i1 %v7_db84, label %dec_label_pc_db24.backedge, label %dec_label_pc_db88

dec_label_pc_db88:                                ; preds = %dec_label_pc_db80
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_db90 = call i32 @function_12978(i32 %v1_db58, i32 10)
  %v2_db94 = icmp eq i32 %v2_db90, 0
  br i1 %v2_db94, label %dec_label_pc_db9c, label %dec_label_pc_db24.backedge

dec_label_pc_db9c:                                ; preds = %dec_label_pc_db88
  %v1_dba0 = call i32 @function_13ffc(i32 1)
  %v0_dba4 = load i32, i32* @sb, align 4
  %v1_dba8 = inttoptr i32 %v0_dba4 to i32*
  %v2_dba8 = call i32 @function_130f4(i32* %v1_dba8)
  %v2_dbac = icmp eq i32 %v2_dba8, 0
  br i1 %v2_dbac, label %dec_label_pc_dbb4, label %dec_label_pc_db34

dec_label_pc_dbb4:                                ; preds = %dec_label_pc_db24.backedge, %dec_label_pc_db9c, %dec_label_pc_db24.preheader
  %stack_var_-8480.3 = phi i32 [ %stack_var_-8480.0, %dec_label_pc_db24.preheader ], [ %v1_db58, %dec_label_pc_db9c ], [ %stack_var_-8480.1.be, %dec_label_pc_db24.backedge ]
  %v0_dbb4 = load i32, i32* @sb, align 4
  %v1_dbb8 = inttoptr i32 %v0_dbb4 to i32*
  %v2_dbb8 = call i32 @function_12f44(i32* %v1_dbb8)
  br label %dec_label_pc_d8bc

dec_label_pc_dbc0:                                ; preds = %dec_label_pc_db44
  store i32 %v2_dbc4, i32* %stack_var_-8484, align 4
  %v1_dbd0 = call i32 @function_11d20(i32 13)
  %v1_dbd8 = call i32 @function_11d20(i32 14)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dbe4 = call i32 @function_11c3c(i32 13, i32* null)
  store i32 %v3_dbe4, i32* %r1.global-to-local, align 4
  store i32 %v2_dbf0, i32* @r0, align 4
  %v3_dbf4 = call i32 @function_12314(i8* %v2_dbf4, i32 %v3_dbe4)
  %v2_dc00 = add i32 %v3_dbf4, %v2_dbf0
  store i32 %v2_dc00, i32* %r5.global-to-local, align 4
  store i32 %v2_dc00, i32* @r0, align 4
  %v0_dc08 = load i32, i32* @r6, align 4
  store i32 %v0_dc08, i32* %r1.global-to-local, align 4
  %v2_dc0c = inttoptr i32 %v2_dc00 to i8*
  %v3_dc0c = call i32 @function_12314(i8* %v2_dc0c, i32 %v0_dc08)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dc1c = call i32 @function_11c3c(i32 14, i32* null)
  store i32 %v3_dc1c, i32* %r1.global-to-local, align 4
  %v0_dc24 = load i32, i32* %r5.global-to-local, align 4
  %v2_dc24 = add i32 %v3_dc0c, %v0_dc24
  store i32 %v2_dc24, i32* @r0, align 4
  %v2_dc28 = inttoptr i32 %v2_dc24 to i8*
  %v3_dc28 = call i32 @function_12314(i8* %v2_dc28, i32 %v3_dc1c)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dc34 = call i32 @function_11c3c(i32 13, i32* null)
  store i32 %v3_dc34, i32* %r1.global-to-local, align 4
  store i32 %v2_dc40, i32* @r0, align 4
  %v3_dc44 = call i32 @function_12314(i8* %v2_dc44, i32 %v3_dc34)
  store i32 %v2_dc40, i32* %r2.global-to-local, align 4
  %v2_dc50 = add i32 %v3_dc44, %v2_dc40
  store i32 %v2_dc50, i32* @r5, align 4
  %v0_dc54 = load i32, i32* @r6, align 4
  store i32 %v0_dc54, i32* %r1.global-to-local, align 4
  store i32 %v2_dc50, i32* @r0, align 4
  %v2_dc5c = inttoptr i32 %v2_dc50 to i8*
  %v3_dc5c = call i32 @function_12314(i8* %v2_dc5c, i32 %v0_dc54)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_dc5c, i32* @r4, align 4
  %v3_dc6c = call i32 @function_11c3c(i32 29, i32* null)
  store i32 %v3_dc6c, i32* %r1.global-to-local, align 4
  %v0_dc74 = load i32, i32* @r5, align 4
  %v1_dc74 = load i32, i32* @r4, align 4
  %v2_dc74 = add i32 %v1_dc74, %v0_dc74
  store i32 %v2_dc74, i32* @r0, align 4
  %v2_dc78 = inttoptr i32 %v2_dc74 to i8*
  %v3_dc78 = call i32 @function_12314(i8* %v2_dc78, i32 %v3_dc6c)
  %v1_dc80 = call i32 @function_11c68(i32 13)
  %v1_dc88 = call i32 @function_11c68(i32 14)
  store i32 4095, i32* %r2.global-to-local, align 4
  store i32 %v2_d7f0, i32* %r1.global-to-local, align 4
  %v4_dca0 = call i32 @function_12de4(i8* %v2_dbf4, i32 %v2_d7f0, i32 4095)
  %v7_dca8 = icmp eq i32 %v4_dca0, -1
  store i32 %v4_dca0, i32* @r4, align 4
  store i32 -4344, i32* @r2, align 4
  br i1 %v7_dca8, label %dec_label_pc_dd6c, label %dec_label_pc_dcb8

dec_label_pc_dcb8:                                ; preds = %dec_label_pc_dbc0
  %v2_dcbc = add i32 %v4_dca0, %v28_d760
  store i32 %v2_dcbc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_dcc4 = add i32 %v2_dcbc, -4344
  %v5_dcc4 = inttoptr i32 %v4_dcc4 to i8*
  store i8 0, i8* %v5_dcc4, align 1
  %v1_dccc = call i32 @function_11d20(i32 30)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dcd8 = call i32 @function_11c3c(i32 30, i32* null)
  %v0_dcdc = load i32, i32* @r4, align 4
  %v1_dcdc = add i32 %v0_dcdc, -1
  store i32 %v1_dcdc, i32* @r1, align 4
  store i32 %v3_dcd8, i32* %r2.global-to-local, align 4
  %v4_dce8 = call i32 @function_12640(i8* %v2_d7fc, i32 %v1_dcdc, i32 %v3_dcd8)
  %v7_dcec = icmp eq i32 %v4_dce8, -1
  br i1 %v7_dcec, label %dec_label_pc_dd08, label %dec_label_pc_dcf4

dec_label_pc_dcf4:                                ; preds = %dec_label_pc_dcb8
  %v2_dcf8 = call i32 @function_12eec(i8* %v2_d7fc)
  %v0_dcfc = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_dd04 = call i32 @function_12cf0(i32 %v0_dcfc, i32 9)
  br label %dec_label_pc_dd08

dec_label_pc_dd08:                                ; preds = %dec_label_pc_dcb8, %dec_label_pc_dcf4
  %v1_dd0c = call i32 @function_11c68(i32 30)
  %v0_dd10 = call i32 @function_12c48()
  %v0_dd14 = load i32, i32* @r7, align 4
  %v9_dd14 = icmp eq i32 %v0_dd14, %v0_dd10
  br i1 %v9_dd14, label %dec_label_pc_dd40, label %dec_label_pc_dd1c

dec_label_pc_dd1c:                                ; preds = %dec_label_pc_dd08
  %v0_dd1c = call i32 @function_12c74()
  %v0_dd20 = load i32, i32* @r7, align 4
  %v9_dd20 = icmp eq i32 %v0_dd20, %v0_dd1c
  br i1 %v9_dd20, label %dec_label_pc_dd40, label %dec_label_pc_dd28

dec_label_pc_dd28:                                ; preds = %dec_label_pc_dd1c
  store i32 ptrtoint (i32* @global_var_1dc6c.67 to i32), i32* %r2.global-to-local, align 4
  %v2_dd30 = load i32, i32* @global_var_1dc6c.67, align 4
  store i32 %v2_dd30, i32* %r1.global-to-local, align 4
  %v4_dd34 = call i32 @function_126cc(i8* %v2_d7fc, i32 %v2_dd30, i32 ptrtoint (i32* @global_var_1dc6c.67 to i32))
  %v2_dd38 = icmp eq i32 %v4_dd34, 0
  br i1 %v2_dd38, label %dec_label_pc_dd4c, label %dec_label_pc_dd28.dec_label_pc_dd40_crit_edge

dec_label_pc_dd28.dec_label_pc_dd40_crit_edge:    ; preds = %dec_label_pc_dd28
  %v0_dd44.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_dd40

dec_label_pc_dd40:                                ; preds = %dec_label_pc_dd28.dec_label_pc_dd40_crit_edge, %dec_label_pc_dd1c, %dec_label_pc_dd08
  %v0_dd44 = phi i32 [ %v0_dd44.pre, %dec_label_pc_dd28.dec_label_pc_dd40_crit_edge ], [ %v0_dd1c, %dec_label_pc_dd1c ], [ %v0_dd10, %dec_label_pc_dd08 ]
  %v2_dd40 = load i32, i32* %stack_var_-8484, align 4
  store i32 %v2_dd40, i32* @r5, align 4
  store i32 %v0_dd44, i32* @r8, align 4
  br label %dec_label_pc_db24.backedge

dec_label_pc_db24.backedge:                       ; preds = %dec_label_pc_db88, %dec_label_pc_db80, %dec_label_pc_db34, %dec_label_pc_dd40, %dec_label_pc_de94, %.thread8
  %stack_var_-8480.1.be = phi i32 [ %v1_db58, %dec_label_pc_de94 ], [ %v1_db58, %dec_label_pc_dd40 ], [ %v1_db58, %.thread8 ], [ %stack_var_-8480.2, %dec_label_pc_db34 ], [ %v1_db58, %dec_label_pc_db80 ], [ %v1_db58, %dec_label_pc_db88 ]
  %v0_db24 = load i32, i32* @sb, align 4
  %v1_db28 = inttoptr i32 %v0_db24 to i32*
  %v2_db28 = call i32 @function_130f4(i32* %v1_db28)
  %v2_db2c = icmp eq i32 %v2_db28, 0
  br i1 %v2_db2c, label %dec_label_pc_dbb4, label %dec_label_pc_db34.preheader

dec_label_pc_dd4c:                                ; preds = %dec_label_pc_dd28
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dd54 = call i32 @function_12d1c(i8* %v2_d7fc, i32 0)
  %v7_dd58 = icmp eq i32 %v3_dd54, -1
  store i32 %v3_dd54, i32* @r4, align 4
  br i1 %v7_dd58, label %dec_label_pc_df2c, label %dec_label_pc_dd64

dec_label_pc_dd64:                                ; preds = %dec_label_pc_dd4c, %dec_label_pc_df2c
  %v0_dd64 = phi i32 [ %v3_dd54, %dec_label_pc_dd4c ], [ %v0_dd64.pre, %dec_label_pc_df2c ]
  %v1_dd68 = call i32 @function_12bf0(i32 %v0_dd64)
  br label %dec_label_pc_dd6c

dec_label_pc_dd6c:                                ; preds = %dec_label_pc_dbc0, %dec_label_pc_dd64
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dd78 = call i32 @function_12d1c(i8* %v2_dbf4, i32 0)
  %v7_dd7c = icmp eq i32 %v3_dd78, -1
  store i32 %v3_dd78, i32* %r8.global-to-local, align 4
  br i1 %v7_dd7c, label %dec_label_pc_de94, label %dec_label_pc_dd88

dec_label_pc_dd88:                                ; preds = %dec_label_pc_dd6c
  %v1_dd8c = call i32 @function_11d20(i32 18)
  %v1_dd94 = call i32 @function_11d20(i32 19)
  store i32 %v2_dd9c, i32* %r1.global-to-local, align 4
  %v3_dda4 = call i32 @function_11c3c(i32 18, i32* nonnull %stack_var_-40)
  store i32 %v3_dda4, i32* @r5, align 4
  store i32 %v2_ddb0, i32* %r1.global-to-local, align 4
  %v3_ddb8 = call i32 @function_11c3c(i32 19, i32* nonnull %stack_var_-44)
  store i32 %v3_ddb8, i32* @r6, align 4
  br label %dec_label_pc_ddc0

dec_label_pc_ddc0:                                ; preds = %dec_label_pc_de2c, %.thread22, %dec_label_pc_ddf4, %dec_label_pc_dd88
  %v0_ddc0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_d8b4, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v4_ddcc = call i32 @function_12db8(i32 %v0_ddc0, i32* nonnull %stack_var_-8476, i32 4096)
  %tmp135 = icmp slt i32 %v4_ddcc, 1
  br i1 %tmp135, label %dec_label_pc_df10, label %dec_label_pc_ddd8

dec_label_pc_ddd8:                                ; preds = %dec_label_pc_ddc0
  store i32 %v2_d9a0, i32* %r3.global-to-local, align 4
  %v3_dddc = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_dddc, i32* @r4, align 4
  %v5_dde4 = icmp slt i32 %v4_ddcc, %v3_dddc
  br i1 %v5_dde4, label %dec_label_pc_ddf4, label %dec_label_pc_de48.lr.ph

dec_label_pc_de48.lr.ph:                          ; preds = %dec_label_pc_ddd8
  %v1_de4036 = add i32 %v4_ddcc, -1
  store i32 %v1_de4036, i32* %r1.global-to-local, align 4
  %v0_de48.pre = load i32, i32* @r5, align 4
  %v1_de4c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_de48

dec_label_pc_ddf4:                                ; preds = %dec_label_pc_de40.backedge, %dec_label_pc_ddd8
  %v3_ddf8 = load i32, i32* %stack_var_-44, align 4
  %v5_de00 = icmp slt i32 %v4_ddcc, %v3_ddf8
  br i1 %v5_de00, label %dec_label_pc_ddc0, label %.thread22

.thread22:                                        ; preds = %dec_label_pc_ddf4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_de0c46 = icmp eq i32 %v4_ddcc, 0
  br i1 %v2_de0c46, label %dec_label_pc_ddc0, label %dec_label_pc_de14.lr.ph

dec_label_pc_de14.lr.ph:                          ; preds = %.thread22
  %v0_de14.pre = load i32, i32* @r6, align 4
  %v1_de18.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_de14

dec_label_pc_de14:                                ; preds = %dec_label_pc_de2c, %dec_label_pc_de14.lr.ph
  %v0_de0c.in = phi i32 [ %v4_ddcc, %dec_label_pc_de14.lr.ph ], [ %v0_de0c, %dec_label_pc_de2c ]
  %v0_de2c = phi i32 [ 0, %dec_label_pc_de14.lr.ph ], [ %v1_de2c, %dec_label_pc_de2c ]
  %v0_de20 = phi i32 [ 0, %dec_label_pc_de14.lr.ph ], [ %v1_de20., %dec_label_pc_de2c ]
  %v0_de0c = add i32 %v0_de0c.in, -1
  %v2_de14 = add i32 %v0_de20, %v0_de14.pre
  %v3_de14 = inttoptr i32 %v2_de14 to i8*
  %v4_de14 = load i8, i8* %v3_de14, align 1
  %v6_de14 = zext i8 %v4_de14 to i32
  store i32 %v6_de14, i32* %r2.global-to-local, align 4
  %v2_de18 = add i32 %v0_de2c, %v1_de18.pre
  %v3_de18 = inttoptr i32 %v2_de18 to i8*
  %v4_de18 = load i8, i8* %v3_de18, align 1
  %v6_de18 = zext i8 %v4_de18 to i32
  store i32 %v6_de18, i32* %r3.global-to-local, align 4
  %v9_de1c = icmp eq i8 %v4_de18, %v4_de14
  %v1_de20 = add i32 %v0_de20, 1
  %v1_de20. = select i1 %v9_de1c, i32 %v1_de20, i32 0
  store i32 %v1_de20., i32* %r1.global-to-local, align 4
  br i1 %v9_de1c, label %dec_label_pc_de68, label %dec_label_pc_de2c

dec_label_pc_de2c:                                ; preds = %dec_label_pc_de68, %dec_label_pc_de14
  %v1_de2c = add i32 %v0_de2c, 1
  %v2_de0c = icmp eq i32 %v0_de0c, 0
  br i1 %v2_de0c, label %dec_label_pc_ddc0, label %dec_label_pc_de14

dec_label_pc_de34:                                ; preds = %dec_label_pc_de48
  %v9_de34 = icmp eq i32 %v3_dddc, %v1_de54.
  br i1 %v9_de34, label %dec_label_pc_de70, label %dec_label_pc_de40.backedge

dec_label_pc_de40.backedge:                       ; preds = %dec_label_pc_de48, %dec_label_pc_de34
  %storemerge = add i32 %storemerge.in, 1
  %v1_de40 = add i32 %v0_de40, -1
  store i32 %v1_de40, i32* %r1.global-to-local, align 4
  %v2_de40 = icmp eq i32 %v0_de40, 0
  br i1 %v2_de40, label %dec_label_pc_ddf4, label %dec_label_pc_de48

dec_label_pc_de48:                                ; preds = %dec_label_pc_de40.backedge, %dec_label_pc_de48.lr.ph
  %v0_de40 = phi i32 [ %v1_de4036, %dec_label_pc_de48.lr.ph ], [ %v1_de40, %dec_label_pc_de40.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_de48.lr.ph ], [ %storemerge, %dec_label_pc_de40.backedge ]
  %v0_de54 = phi i32 [ 0, %dec_label_pc_de48.lr.ph ], [ %v1_de54., %dec_label_pc_de40.backedge ]
  %v2_de48 = add i32 %v0_de54, %v0_de48.pre
  %v3_de48 = inttoptr i32 %v2_de48 to i8*
  %v4_de48 = load i8, i8* %v3_de48, align 1
  %v6_de48 = zext i8 %v4_de48 to i32
  store i32 %v6_de48, i32* %r2.global-to-local, align 4
  %v2_de4c = add i32 %storemerge.in, %v1_de4c.pre
  %v3_de4c = inttoptr i32 %v2_de4c to i8*
  %v4_de4c = load i8, i8* %v3_de4c, align 1
  %v6_de4c = zext i8 %v4_de4c to i32
  store i32 %v6_de4c, i32* %r3.global-to-local, align 4
  %v9_de50 = icmp eq i8 %v4_de4c, %v4_de48
  %v1_de54 = add i32 %v0_de54, 1
  %v1_de54. = select i1 %v9_de50, i32 %v1_de54, i32 0
  br i1 %v9_de50, label %dec_label_pc_de34, label %dec_label_pc_de40.backedge

dec_label_pc_de68:                                ; preds = %dec_label_pc_de14
  %v9_de68 = icmp eq i32 %v3_ddf8, %v1_de20.
  br i1 %v9_de68, label %dec_label_pc_de70, label %dec_label_pc_de2c

dec_label_pc_de70:                                ; preds = %dec_label_pc_de34, %dec_label_pc_de68
  %v1_de74 = call i32 @function_11c68(i32 18)
  %v1_de7c = call i32 @function_11c68(i32 19)
  %v0_de80 = load i32, i32* %r8.global-to-local, align 4
  %v1_de84 = call i32 @function_12bf0(i32 %v0_de80)
  %v0_de88 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_de90 = call i32 @function_12cf0(i32 %v0_de88, i32 9)
  br label %dec_label_pc_de94

dec_label_pc_de94:                                ; preds = %dec_label_pc_dd6c, %dec_label_pc_df10, %dec_label_pc_de70
  store i32 64, i32* @r1, align 4
  store i32 %v2_dbf0, i32* @r0, align 4
  %v0_dea0 = call i32 @function_1238c()
  store i32 %v2_dc40, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_deb0 = call i32 @function_1238c()
  %v1_deb8 = call i32 @function_13ffc(i32 1)
  %v2_debc = load i32, i32* %stack_var_-8484, align 4
  store i32 %v2_debc, i32* @r5, align 4
  %v0_dec0 = load i32, i32* @r7, align 4
  store i32 %v0_dec0, i32* @r8, align 4
  br label %dec_label_pc_db24.backedge

dec_label_pc_dec8:                                ; preds = %dec_label_pc_d9fc
  %v1_ded0 = call i32 @function_d1c4(i32 42448)
  %v2_ded4 = icmp eq i32 %v1_ded0, 0
  br i1 %v2_ded4, label %dec_label_pc_dedc, label %dec_label_pc_da0c

dec_label_pc_dedc:                                ; preds = %dec_label_pc_dec8
  %v1_dee0 = call i32 @function_d1c4(i32 20480)
  %v2_dee4 = icmp eq i32 %v1_dee0, 0
  br i1 %v2_dee4, label %dec_label_pc_deec, label %dec_label_pc_da0c

dec_label_pc_deec:                                ; preds = %dec_label_pc_dedc
  %v1_def4 = call i32 @function_d1c4(i32 34254)
  %v2_def8 = icmp eq i32 %v1_def4, 0
  br i1 %v2_def8, label %dec_label_pc_df00, label %dec_label_pc_da0c

dec_label_pc_df00:                                ; preds = %dec_label_pc_deec
  %v1_df08 = call i32 @function_d1c4(i32 24465)
  br label %dec_label_pc_da0c

dec_label_pc_df10:                                ; preds = %dec_label_pc_ddc0
  %v1_df14 = call i32 @function_11c68(i32 18)
  %v1_df1c = call i32 @function_11c68(i32 19)
  %v0_df20 = load i32, i32* %r8.global-to-local, align 4
  %v1_df24 = call i32 @function_12bf0(i32 %v0_df20)
  br label %dec_label_pc_de94

dec_label_pc_df2c:                                ; preds = %dec_label_pc_dd4c
  %v0_df2c = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_df34 = call i32 @function_12cf0(i32 %v0_df2c, i32 9)
  %v0_dd64.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_dd64

; uselistorder directives
  uselistorder i32 %v1_de54., { 1, 0 }
  uselistorder i1 %v9_de50, { 1, 0 }
  uselistorder i32 %v0_de54, { 1, 0 }
  uselistorder i32 %v1_de20., { 1, 2, 0 }
  uselistorder i1 %v9_de1c, { 1, 0 }
  uselistorder i32 %v0_de20, { 1, 0 }
  uselistorder i32 %v0_de2c, { 1, 0 }
  uselistorder i32 %v3_dd78, { 1, 0 }
  uselistorder i32 %v3_dd54, { 1, 2, 0 }
  uselistorder i32 %v2_db28, { 1, 0 }
  uselistorder i32 %stack_var_-8480.1.be, { 1, 0 }
  uselistorder i32 %v4_dca0, { 1, 2, 0 }
  uselistorder i32 %v2_dba8, { 1, 0 }
  uselistorder i32 %v1_db58, { 0, 1, 5, 4, 3, 2, 7, 6 }
  uselistorder i32 %v3_daf8, { 1, 2, 0 }
  uselistorder i32 %v3_dac0, { 1, 2, 0 }
  uselistorder i32 %v3_da88, { 1, 2, 0 }
  uselistorder i32 %v3_da50, { 1, 2, 0 }
  uselistorder i32 %v3_da18, { 2, 1, 0 }
  uselistorder i32 %v3_d9d0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-8480.0, { 1, 0 }
  uselistorder i32 %v2_dc40, { 1, 0, 2, 3 }
  uselistorder i32 %v2_dbf0, { 1, 0, 2 }
  uselistorder i32 %v4_d880, { 1, 0 }
  uselistorder i32 %v3_d84c, { 2, 0, 1 }
  uselistorder i8* %v2_d7fc, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32 %v2_d7f0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %storemerge86, { 1, 0 }
  uselistorder i32 %v0_d774, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 26, 27, 23, 25, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 40, 39, 41, 42, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11, 24, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22 }
  uselistorder i32 (i8*, i32, i32)* @function_12640, { 3, 0, 1, 2 }
  uselistorder i32 (i32*)* @function_12f44, { 2, 0, 1 }
  uselistorder i32 (i32*)* @function_130f4, { 8, 7, 0, 3, 4, 5, 2, 6, 1 }
  uselistorder i32 (i32, i32)* @function_133c4, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32 (i32, %sockaddr*, i32)* @function_13310, { 2, 3, 4, 5, 0, 1, 6, 7 }
  uselistorder i32 (i32)* @function_d1c4, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_12ff8, { 2, 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_12de4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_de94, { 1, 2, 0 }
  uselistorder label %dec_label_pc_de70, { 1, 0 }
  uselistorder label %dec_label_pc_dd6c, { 1, 0 }
  uselistorder label %dec_label_pc_dd64, { 1, 0 }
  uselistorder label %dec_label_pc_db24.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_dd08, { 1, 0 }
  uselistorder label %dec_label_pc_db34, { 1, 0 }
  uselistorder label %dec_label_pc_db34.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_daec, { 1, 0 }
  uselistorder label %dec_label_pc_dab4, { 1, 0 }
  uselistorder label %dec_label_pc_da7c, { 1, 0 }
  uselistorder label %dec_label_pc_da44, { 1, 0 }
  uselistorder label %dec_label_pc_da0c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_d9fc, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
}

define i32 @function_df48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_df48:
  store i32 ptrtoint (i32* @global_var_df60.70 to i32), i32* @global_var_1da60.72, align 4
  ret i32 %arg1
}

define i32 @function_df60() local_unnamed_addr {
dec_label_pc_df60:
  %stack_var_-8 = alloca i32, align 4
  %v3_df60 = load i32, i32* @r4, align 4
  store i32 %v3_df60, i32* %stack_var_-8, align 4
  %v1_df68 = call i32 @function_11d20(i32 1)
  store i32 ptrtoint ([11 x i8]* @global_var_15468.74 to i32), i32* @r0, align 4
  %v2_df70 = call i32 @function_132ec(i32 ptrtoint ([11 x i8]* @global_var_15468.74 to i32))
  store i32 %v2_df70, i32* @global_var_1dc78.77, align 4
  %v3_df84 = call i32 @function_11c3c(i32 1, i32* null)
  %v4_df84 = inttoptr i32 %v3_df84 to i8*
  %v2_df88 = add i32 %v3_df84, 1
  %v3_df88 = inttoptr i32 %v2_df88 to i8*
  %v4_df88 = load i8, i8* %v3_df88, align 1
  %v3_df8c = load i8, i8* %v4_df84, align 1
  store i8 %v4_df88, i8* bitcast (i32* @global_var_1dc77.78 to i8*), align 4
  store i8 %v3_df8c, i8* bitcast (i32* @global_var_1dc76.79 to i8*), align 4
  %v2_dfa4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_dfa4, i32* @r4, align 4
  %v1_dfa8 = call i32 @function_11c68(i32 1)
  %v0_dfac = load i1, i1* @cpsr_z, align 1
  br i1 %v0_dfac, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_df60
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_df60, %bb
  ret i32 %v1_dfa8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_dfb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_dfb4:
  %stack_var_-16 = alloca i32, align 4
  %v3_dfb4 = load i32, i32* @r4, align 4
  %v6_dfb4 = load i32, i32* @r5, align 4
  %v2_dfb8 = ptrtoint i32* %stack_var_-16 to i32
  %v0_dfbc = call i32 @function_12c1c()
  %v7_dfc0 = icmp eq i32 %v0_dfbc, -1
  %. = zext i1 %v7_dfc0 to i32
  %tmp10 = icmp slt i32 %v0_dfbc, 1
  %storemerge4 = select i1 %tmp10, i32 %., i32 1
  store i32 %storemerge4, i32* @r5, align 4
  %v2_dfdc = icmp eq i32 %storemerge4, 0
  store i32 %v0_dfbc, i32* @global_var_1dbd4.81, align 4
  br i1 %v2_dfdc, label %dec_label_pc_dff0, label %dec_label_pc_dfe8

dec_label_pc_dfe8:                                ; preds = %dec_label_pc_dfb4
  store i32 %v3_dfb4, i32* @r4, align 4
  store i32 %v6_dfb4, i32* @r5, align 4
  ret i32 %v0_dfbc

dec_label_pc_dff0:                                ; preds = %dec_label_pc_dfb4
  store i32 1, i32* %stack_var_-16, align 4
  %v1_dffc = call i32 @function_11d20(i32 23)
  %v1_e004 = call i32 @function_11d20(i32 24)
  %v0_e008 = load i32, i32* @r5, align 4
  %v2_e010 = inttoptr i32 %v0_e008 to i32*
  %v3_e010 = call i32 @function_11c3c(i32 23, i32* %v2_e010)
  %v2_e018 = inttoptr i32 %v3_e010 to i8*
  %v3_e018 = call i32 @function_12d1c(i8* %v2_e018, i32 2)
  %v7_e01c = icmp eq i32 %v3_e018, -1
  store i32 %v3_e018, i32* @r4, align 4
  br i1 %v7_e01c, label %dec_label_pc_e064, label %dec_label_pc_e028

dec_label_pc_e028:                                ; preds = %dec_label_pc_e064, %dec_label_pc_dff0
  %v0_e034 = phi i32 [ %v4_e074, %dec_label_pc_e064 ], [ %v3_e018, %dec_label_pc_dff0 ]
  %v3_e03c = call i32 @function_12ca0(i32 %v0_e034, i32 -2147199228, i32 %v2_dfb8)
  br label %dec_label_pc_e040

dec_label_pc_e040:                                ; preds = %dec_label_pc_e040, %dec_label_pc_e028
  %v0_e04c = load i32, i32* @r4, align 4
  %v3_e054 = call i32 @function_12ca0(i32 %v0_e04c, i32 -2147199227, i32 0)
  %v1_e05c = call i32 @function_13ffc(i32 10)
  br label %dec_label_pc_e040

dec_label_pc_e064:                                ; preds = %dec_label_pc_dff0
  %v0_e064 = load i32, i32* @r5, align 4
  %v2_e06c = inttoptr i32 %v0_e064 to i32*
  %v3_e06c = call i32 @function_11c3c(i32 24, i32* %v2_e06c)
  %v3_e074 = inttoptr i32 %v3_e06c to i8*
  %v4_e074 = call i32 @function_12d1c(i8* %v3_e074, i32 2)
  %v3_e078 = icmp eq i32 %v4_e074, -1
  store i32 %v4_e074, i32* @r4, align 4
  br i1 %v3_e078, label %dec_label_pc_e084, label %dec_label_pc_e028

dec_label_pc_e084:                                ; preds = %dec_label_pc_e064
  %v1_e088 = call i32 @function_11c68(i32 23)
  %v1_e090 = call i32 @function_11c68(i32 24)
  %v0_e094 = load i32, i32* @r5, align 4
  %v1_e098 = call i32 @function_13f68(i32 %v0_e094)
  %v0_e09c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e09c, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_e084
  %v4_e09c = load i64, i64* inttoptr (i32 2 to i64*), align 4
  %v6_e09c = trunc i64 %v4_e09c to i32
  store i32 %v6_e09c, i32* @lr, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_e084, %bb13
  ret i32 %v1_e098

; uselistorder directives
  uselistorder i32 %v4_e074, { 1, 2, 0 }
  uselistorder i32 %v3_e018, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %v0_dfbc, { 3, 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_12ca0, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
}

define i32 @function_e0a0(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_e0a0:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-38 = alloca i8*, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-380 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-1532 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-508 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_e0a0 = load i32, i32* @r4, align 4
  store i32 %v3_e0a0, i32* %stack_var_-36, align 4
  %v9_e0a0 = load i32, i32* @r6, align 4
  %v15_e0a0 = load i32, i32* @r8, align 4
  %v2_e0ac = ptrtoint i32* %stack_var_-508 to i32
  store i32 %v2_e0ac, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_e0ac, i32* @r0, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v1_e0c4 = call i32 @function_1353c(i32 %v2_e0ac)
  store i32 %v2_e0ac, i32* @r0, align 4
  %v2_e0d0 = call i32 @function_1350c(i32 %v2_e0ac, i32 2)
  %v0_e0d4 = load i32, i32* @r5, align 4
  store i32 %v0_e0d4, i32* %r2.global-to-local, align 4
  %v3_e0e0 = bitcast i32* %stack_var_-508 to %_TYPEDEF_sigset_t*
  %v4_e0e0 = call i32 @function_12e6c(i32 %v0_e0d4, %_TYPEDEF_sigset_t* %v3_e0e0, i32 %v0_e0d4)
  %v2_e0ec = call i32 @function_13554(i32 17, i32 1)
  %v2_e0f8 = call i32 @function_13554(i32 5, i32 ptrtoint (i32* @global_var_df48.83 to i32))
  %v0_e0fc = call i32 @function_125a4()
  store i32 %v0_e0fc, i32* @global_var_1dc68.49, align 4
  store i32 902487617, i32* %r2.global-to-local, align 4
  store i8 23, i8* bitcast (i32* @global_var_1dc77.78 to i8*), align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i8 2, i8* bitcast (i8** @global_var_1dc74.76 to i8*), align 4
  store i32 902487617, i32* @global_var_1dc78.77, align 4
  %v0_e124 = load i32, i32* @r5, align 4
  %v1_e124 = trunc i32 %v0_e124 to i8
  store i8 %v1_e124, i8* bitcast (i32* @global_var_1dc76.79 to i8*), align 4
  store i8 %v1_e124, i8* bitcast (i32* @global_var_1dc75.87 to i8*), align 4
  %v6_e12c = call i32 @function_11dd8(i32 %v0_e0fc, i32 ptrtoint (i8** @global_var_1dc74.76 to i32), i32 902487617, i32 2)
  store i32 ptrtoint (i32* @global_var_df60.70 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_df60.70 to i32), i32* @global_var_1da60.72, align 4
  %v1_e13c = call i32 @function_e824(i32 %v6_e12c)
  %v2_e144 = ptrtoint i32* %stack_var_-124 to i32
  store i32 %v2_e144, i32* @r0, align 4
  store i32 32, i32* @r1, align 4
  %v0_e14c = call i32 @function_1238c()
  %v0_e150 = load i32, i32* @r6, align 4
  %v7_e150 = icmp eq i32 %v0_e150, 2
  br i1 %v7_e150, label %dec_label_pc_e278, label %dec_label_pc_e158

dec_label_pc_e158:                                ; preds = %dec_label_pc_e278, %dec_label_pc_e0a0, %dec_label_pc_e288
  %v0_e158 = call i32 @function_e7cc()
  store i32 %v0_e158, i32* %r6.global-to-local, align 4
  %v0_e160 = load i32, i32* @r8, align 4
  %v1_e160 = inttoptr i32 %v0_e160 to i32*
  %v2_e160 = load i32, i32* %v1_e160, align 4
  %v1_e164 = inttoptr i32 %v2_e160 to i8*
  %v2_e164 = call i32 @function_122ec(i8* %v1_e164)
  %v0_e16c = load i32, i32* @r8, align 4
  %v1_e16c = inttoptr i32 %v0_e16c to i32*
  %v2_e16c = load i32, i32* %v1_e16c, align 4
  %v1_e170 = inttoptr i32 %v2_e16c to i8*
  %v2_e170 = call i32 @function_122ec(i8* %v1_e170)
  %v1_e174 = sub i32 20, %v2_e164
  store i32 %v2_e170, i32* @r5, align 4
  %v0_e17c = load i32, i32* %r6.global-to-local, align 4
  %v2_e180 = call i32 @function_12978(i32 %v0_e17c, i32 %v1_e174)
  %v1_e188 = load i32, i32* @r5, align 4
  %v2_e188 = add i32 %v1_e188, %v2_e180
  store i32 %v2_e188, i32* @r4, align 4
  %v2_e18c = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_e18c, i32* @r6, align 4
  %v2_e198 = call i32 @function_e880(i32 %v2_e18c, i32 %v2_e188)
  %v2_e19c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_e19c, i32* %r2.global-to-local, align 4
  %v1_e1a0 = load i32, i32* @r4, align 4
  %v2_e1a0 = add i32 %v1_e1a0, %v2_e19c
  store i32 %v2_e1a0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  %v0_e1ac = load i32, i32* @r8, align 4
  %v1_e1ac = inttoptr i32 %v0_e1ac to i32*
  %v2_e1ac = load i32, i32* %v1_e1ac, align 4
  store i32 %v2_e1ac, i32* @r0, align 4
  %v3_e1b0 = add i32 %v2_e1a0, -56
  %v4_e1b0 = inttoptr i32 %v3_e1b0 to i8*
  store i8 0, i8* %v4_e1b0, align 1
  %v2_e1b4 = inttoptr i32 %v2_e1ac to i8*
  %v3_e1b4 = call i32 @function_12314(i8* %v2_e1b4, i32 %v2_e18c)
  store i32 32, i32* @r1, align 4
  store i32 %v2_e18c, i32* @r0, align 4
  %v0_e1c0 = call i32 @function_1238c()
  %v0_e1c4 = call i32 @function_e7cc()
  store i32 %v0_e1c4, i32* @r7, align 4
  %v0_e1cc = load i32, i32* @r8, align 4
  %v1_e1cc = inttoptr i32 %v0_e1cc to i32*
  %v2_e1cc = load i32, i32* %v1_e1cc, align 4
  %v1_e1d0 = inttoptr i32 %v2_e1cc to i8*
  %v2_e1d0 = call i32 @function_122ec(i8* %v1_e1d0)
  %v0_e1d8 = load i32, i32* @r8, align 4
  %v1_e1d8 = inttoptr i32 %v0_e1d8 to i32*
  %v2_e1d8 = load i32, i32* %v1_e1d8, align 4
  %v1_e1dc = inttoptr i32 %v2_e1d8 to i8*
  %v2_e1dc = call i32 @function_122ec(i8* %v1_e1dc)
  %v1_e1e0 = sub i32 20, %v2_e1d0
  store i32 %v2_e1dc, i32* @r5, align 4
  %v0_e1e8 = load i32, i32* @r7, align 4
  %v2_e1ec = call i32 @function_12978(i32 %v0_e1e8, i32 %v1_e1e0)
  %v1_e1f0 = load i32, i32* @r5, align 4
  %v2_e1f0 = add i32 %v1_e1f0, %v2_e1ec
  store i32 %v2_e1f0, i32* @r4, align 4
  %v2_e1fc = call i32 @function_e880(i32 %v2_e18c, i32 %v2_e1f0)
  %v1_e204 = load i32, i32* @r4, align 4
  %v2_e204 = add i32 %v1_e204, %v2_e19c
  store i32 %v2_e204, i32* @r3, align 4
  %v0_e208 = load i32, i32* @sb, align 4
  %v1_e208 = trunc i32 %v0_e208 to i8
  %v3_e208 = add i32 %v2_e204, -56
  %v4_e208 = inttoptr i32 %v3_e208 to i8*
  store i8 %v1_e208, i8* %v4_e208, align 1
  %v2_e214 = call i32 @function_12d88(i32 15, i32 %v2_e18c)
  %v1_e21c = call i32 @function_11d20(i32 3)
  %v3_e228 = call i32 @function_11c3c(i32 3, i32* nonnull %stack_var_-52)
  %v3_e22c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_e22c, i32* %r2.global-to-local, align 4
  %v3_e238 = inttoptr i32 %v3_e228 to i32*
  %v4_e238 = call i32 @function_12f18(i32 1, i32* %v3_e238, i32 %v3_e22c)
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_e248 = call i32 @function_12f18(i32 1, i32* nonnull @global_var_15474.91, i32 1)
  %v1_e250 = call i32 @function_11c68(i32 3)
  %v1_e254 = call i32 @function_8650(i32 %v1_e250)
  %v1_e258 = call i32 @function_d760(i32 %v1_e254)
  %v1_e25c = call i32 @function_dfb4(i32 %v1_e258)
  %v0_e260 = call i32 @function_12c1c()
  %v1_e264 = load i32, i32* @sb, align 4
  %v7_e268 = icmp sgt i32 %v0_e260, %v1_e264
  br i1 %v7_e268, label %dec_label_pc_e26c, label %dec_label_pc_e2b4

dec_label_pc_e26c:                                ; preds = %dec_label_pc_e158
  store i32 %v9_e0a0, i32* %r6.global-to-local, align 4
  store i32 %v15_e0a0, i32* %r8.global-to-local, align 4
  ret i32 0

dec_label_pc_e278:                                ; preds = %dec_label_pc_e0a0
  %v0_e278 = load i32, i32* @r8, align 4
  %v1_e278 = add i32 %v0_e278, 4
  %v2_e278 = inttoptr i32 %v1_e278 to i32*
  %v3_e278 = load i32, i32* %v2_e278, align 4
  %v1_e27c = inttoptr i32 %v3_e278 to i8*
  %v2_e27c = call i32 @function_122ec(i8* %v1_e27c)
  %v8_e284 = icmp sgt i32 %v2_e27c, 31
  br i1 %v8_e284, label %dec_label_pc_e158, label %dec_label_pc_e288

dec_label_pc_e288:                                ; preds = %dec_label_pc_e278
  %v0_e28c = load i32, i32* @r8, align 4
  %v1_e28c = add i32 %v0_e28c, 4
  %v2_e28c = inttoptr i32 %v1_e28c to i32*
  %v3_e28c = load i32, i32* %v2_e28c, align 4
  store i32 %v2_e144, i32* @r0, align 4
  %v2_e294 = bitcast i32* %stack_var_-124 to i8*
  %v3_e294 = call i32 @function_12314(i8* %v2_e294, i32 %v3_e28c)
  %v0_e298 = load i32, i32* @r8, align 4
  %v1_e298 = add i32 %v0_e298, 4
  %v2_e298 = inttoptr i32 %v1_e298 to i32*
  %v3_e298 = load i32, i32* %v2_e298, align 4
  %v1_e2a0 = inttoptr i32 %v3_e298 to i8*
  %v2_e2a0 = call i32 @function_122ec(i8* %v1_e2a0)
  store i32 %v2_e2a0, i32* @r1, align 4
  store i32 %v3_e298, i32* @r0, align 4
  %v0_e2ac = call i32 @function_1238c()
  br label %dec_label_pc_e158

dec_label_pc_e2b4:                                ; preds = %dec_label_pc_e158
  %v1_e2b4 = call i32 @function_12e40(i32 %v0_e260)
  %v0_e2b8 = load i32, i32* @sb, align 4
  %v1_e2bc = call i32 @function_12bf0(i32 %v0_e2b8)
  %v1_e2c4 = call i32 @function_12bf0(i32 1)
  %v1_e2cc = call i32 @function_12bf0(i32 2)
  %v1_e2d0 = call i32 @function_8650(i32 %v1_e2cc)
  %v1_e2d4 = call i32 @function_d760(i32 %v1_e2d0)
  %v1_e2d8 = call i32 @function_dfb4(i32 %v1_e2d4)
  %v1_e2dc = call i32 @function_eca8(i32 %v1_e2d8)
  %v2_e2e4 = ptrtoint i32* %stack_var_-1532 to i32
  store i32 %v2_e2e4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1da5c.95 to i32), i32* @sl, align 4
  %v2_e2fc = ptrtoint i32* %stack_var_-252 to i32
  store i32 %v2_e2fc, i32* @r6, align 4
  %v2_e300 = ptrtoint i32* %stack_var_-380 to i32
  store i32 %v2_e300, i32* @r7, align 4
  %v2_e3d0 = ptrtoint i32* %stack_var_-60 to i32
  %v4_e688 = bitcast i8** %stack_var_-38 to i32*
  %v2_e620 = ptrtoint i32* %stack_var_-44 to i32
  %v2_e624 = ptrtoint i32* %stack_var_-48 to i32
  %v1_e698 = bitcast i32* %stack_var_-124 to i8*
  br label %dec_label_pc_e304

dec_label_pc_e304:                                ; preds = %dec_label_pc_e304.backedge, %dec_label_pc_e2b4
  %v2_e30c43 = phi i32 [ %v2_e30c43.pre, %dec_label_pc_e304.backedge ], [ %v2_e2fc, %dec_label_pc_e2b4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_e30c45 = inttoptr i32 %v2_e30c43 to i32*
  store i32 0, i32* %v4_e30c45, align 4
  %v0_e31046 = load i32, i32* %r3.global-to-local, align 4
  %v1_e31047 = add i32 %v0_e31046, 4
  store i32 %v1_e31047, i32* %r3.global-to-local, align 4
  %v7_e31448 = icmp eq i32 %v1_e31047, 128
  br i1 %v7_e31448, label %dec_label_pc_e31c, label %dec_label_pc_e30c.dec_label_pc_e30c_crit_edge

dec_label_pc_e30c.dec_label_pc_e30c_crit_edge:    ; preds = %dec_label_pc_e304, %dec_label_pc_e30c.dec_label_pc_e30c_crit_edge
  %v1_e31049 = phi i32 [ %v1_e310, %dec_label_pc_e30c.dec_label_pc_e30c_crit_edge ], [ %v1_e31047, %dec_label_pc_e304 ]
  %v0_e30c.pre = load i32, i32* %r2.global-to-local, align 4
  %v2_e30c = load i32, i32* @r6, align 4
  %v3_e30c = add i32 %v2_e30c, %v1_e31049
  %v4_e30c = inttoptr i32 %v3_e30c to i32*
  store i32 %v0_e30c.pre, i32* %v4_e30c, align 4
  %v0_e310 = load i32, i32* %r3.global-to-local, align 4
  %v1_e310 = add i32 %v0_e310, 4
  store i32 %v1_e310, i32* %r3.global-to-local, align 4
  %v7_e314 = icmp eq i32 %v1_e310, 128
  br i1 %v7_e314, label %dec_label_pc_e31c, label %dec_label_pc_e30c.dec_label_pc_e30c_crit_edge

dec_label_pc_e31c:                                ; preds = %dec_label_pc_e30c.dec_label_pc_e30c_crit_edge, %dec_label_pc_e304
  %v0_e31c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_e31c, i32* %r3.global-to-local, align 4
  store i32 %v0_e31c, i32* @r4, align 4
  %v2_e32450 = load i32, i32* @r7, align 4
  %v3_e32451 = add i32 %v2_e32450, %v0_e31c
  %v4_e32452 = inttoptr i32 %v3_e32451 to i32*
  store i32 %v0_e31c, i32* %v4_e32452, align 4
  %v0_e32853 = load i32, i32* %r3.global-to-local, align 4
  %v1_e32854 = add i32 %v0_e32853, 4
  store i32 %v1_e32854, i32* %r3.global-to-local, align 4
  %v7_e32c55 = icmp eq i32 %v1_e32854, 128
  br i1 %v7_e32c55, label %dec_label_pc_e334, label %dec_label_pc_e324.dec_label_pc_e324_crit_edge

dec_label_pc_e324.dec_label_pc_e324_crit_edge:    ; preds = %dec_label_pc_e31c, %dec_label_pc_e324.dec_label_pc_e324_crit_edge
  %v1_e32856 = phi i32 [ %v1_e328, %dec_label_pc_e324.dec_label_pc_e324_crit_edge ], [ %v1_e32854, %dec_label_pc_e31c ]
  %v0_e324.pre = load i32, i32* @r4, align 4
  %v2_e324 = load i32, i32* @r7, align 4
  %v3_e324 = add i32 %v2_e324, %v1_e32856
  %v4_e324 = inttoptr i32 %v3_e324 to i32*
  store i32 %v0_e324.pre, i32* %v4_e324, align 4
  %v0_e328 = load i32, i32* %r3.global-to-local, align 4
  %v1_e328 = add i32 %v0_e328, 4
  store i32 %v1_e328, i32* %r3.global-to-local, align 4
  %v7_e32c = icmp eq i32 %v1_e328, 128
  br i1 %v7_e32c, label %dec_label_pc_e334, label %dec_label_pc_e324.dec_label_pc_e324_crit_edge

dec_label_pc_e334:                                ; preds = %dec_label_pc_e324.dec_label_pc_e324_crit_edge, %dec_label_pc_e31c
  %v2_e334 = load i32, i32* @global_var_1da58.93, align 4
  %v7_e338 = icmp eq i32 %v2_e334, -1
  br i1 %v7_e338, label %dec_label_pc_e364, label %dec_label_pc_e340

dec_label_pc_e340:                                ; preds = %dec_label_pc_e334
  %v3_e340 = udiv i32 %v2_e334, 32
  %v3_e344 = mul nuw nsw i32 %v3_e340, 4
  %v2_e34c = add i32 %v3_e344, %v2_e19c
  store i32 %v2_e34c, i32* %r3.global-to-local, align 4
  %v1_e350 = add i32 %v2_e34c, -216
  %v2_e350 = inttoptr i32 %v1_e350 to i32*
  %v3_e350 = load i32, i32* %v2_e350, align 4
  %v1_e354 = urem i32 %v2_e334, 32
  %v7_e35c = shl i32 1, %v1_e354
  %v8_e35c = or i32 %v3_e350, %v7_e35c
  store i32 %v8_e35c, i32* %r2.global-to-local, align 4
  store i32 %v8_e35c, i32* %v2_e350, align 4
  br label %dec_label_pc_e364

dec_label_pc_e364:                                ; preds = %dec_label_pc_e334, %dec_label_pc_e340
  %v2_e364 = load i32, i32* @global_var_1da5c.95, align 4
  store i32 %v2_e364, i32* %r3.global-to-local, align 4
  %v7_e368 = icmp eq i32 %v2_e364, -1
  store i32 ptrtoint (i32* @global_var_1da5c.95 to i32), i32* %r8.global-to-local, align 4
  br i1 %v7_e368, label %dec_label_pc_e5a0, label %dec_label_pc_e374

dec_label_pc_e374:                                ; preds = %dec_label_pc_e5a0, %dec_label_pc_e364, %.thread
  store i32 ptrtoint (i8** @global_var_1dbd8.97 to i32), i32* %r2.global-to-local, align 4
  %v2_e378 = load i8, i8* bitcast (i8** @global_var_1dbd8.97 to i8*), align 4
  %v2_e37c = icmp eq i8 %v2_e378, 0
  %v2_e484 = load i32, i32* @global_var_1da5c.95, align 4
  %v3_e488 = udiv i32 %v2_e484, 32
  store i32 %v3_e488, i32* %r3.global-to-local, align 4
  br i1 %v2_e37c, label %dec_label_pc_e484, label %dec_label_pc_e384

dec_label_pc_e384:                                ; preds = %dec_label_pc_e374
  %v3_e38c = mul nuw nsw i32 %v3_e488, 4
  %v2_e394 = add i32 %v3_e38c, %v2_e19c
  store i32 %v2_e394, i32* %r3.global-to-local, align 4
  %v1_e398 = add i32 %v2_e394, -344
  %v2_e398 = inttoptr i32 %v1_e398 to i32*
  %v3_e398 = load i32, i32* %v2_e398, align 4
  %v1_e39c = urem i32 %v2_e484, 32
  %v7_e3a4 = shl i32 1, %v1_e39c
  %v8_e3a4 = or i32 %v3_e398, %v7_e3a4
  store i32 %v8_e3a4, i32* %r2.global-to-local, align 4
  store i32 %v8_e3a4, i32* %v2_e398, align 4
  br label %dec_label_pc_e3ac

dec_label_pc_e3ac:                                ; preds = %dec_label_pc_e484, %dec_label_pc_e384
  %v2_e3ac = load i32, i32* @global_var_1da58.93, align 4
  %v2_e3b0 = load i32, i32* @global_var_1da5c.95, align 4
  store i32 %v2_e3b0, i32* %r3.global-to-local, align 4
  %v5_e3bc = icmp slt i32 %v2_e3ac, %v2_e3b0
  br i1 %v5_e3bc, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_e3ac
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_e3ac, %bb
  %v0_e3d4 = phi i32 [ %v2_e3ac, %dec_label_pc_e3ac ], [ %v2_e3b0, %bb ]
  store i32 0, i32* @lr, align 4
  store i32 10, i32* %stack_var_-60, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_e3d4 = add i32 %v0_e3d4, 1
  store i32 %v2_e300, i32* %r2.global-to-local, align 4
  %v5_e3e8 = call i32 @function_12e10(i32 %v1_e3d4, i32 %v2_e2fc, i32 %v2_e300, i32 0, i32 %v2_e3d0)
  %v8_e3ec = icmp eq i32 %v5_e3e8, -1
  store i32 %v5_e3e8, i32* %r3.global-to-local, align 4
  br i1 %v8_e3ec, label %dec_label_pc_e304.backedge, label %dec_label_pc_e3f8

dec_label_pc_e3f8:                                ; preds = %bb40
  %v6_e3e8 = trunc i32 %v5_e3e8 to i8
  %v3_e3f8 = icmp eq i8 %v6_e3e8, 0
  br i1 %v3_e3f8, label %dec_label_pc_e400, label %dec_label_pc_e420

dec_label_pc_e400:                                ; preds = %dec_label_pc_e3f8
  %v0_e400 = load i32, i32* @sb, align 4
  %v6_e40c = inttoptr i32 %v5_e3e8 to i8*
  store i8* %v6_e40c, i8** %stack_var_-38, align 4
  %v2_e410 = call i32 @function_12a44(i32 %v0_e400, i32 6)
  %v2_e414 = icmp eq i32 %v2_e410, 0
  %v0_e418 = load i32, i32* @sb, align 4
  %v1_e418 = add i32 %v0_e418, 1
  store i32 %v1_e418, i32* @sb, align 4
  br i1 %v2_e414, label %dec_label_pc_e670, label %dec_label_pc_e420

dec_label_pc_e420:                                ; preds = %dec_label_pc_e3f8, %dec_label_pc_e400, %dec_label_pc_e670
  store i32 ptrtoint (i8** @global_var_1dbd8.97 to i32), i32* %r2.global-to-local, align 4
  %v2_e424 = load i8, i8* bitcast (i8** @global_var_1dbd8.97 to i8*), align 4
  %v3_e424 = zext i8 %v2_e424 to i32
  store i32 %v3_e424, i32* @r4, align 4
  %v2_e428 = icmp eq i8 %v2_e424, 0
  %v2_e4b0 = load i32, i32* @global_var_1da5c.95, align 4
  br i1 %v2_e428, label %dec_label_pc_e4b0, label %dec_label_pc_e430

dec_label_pc_e430:                                ; preds = %dec_label_pc_e420
  %v3_e434 = udiv i32 %v2_e4b0, 32
  %v3_e43c = mul nuw nsw i32 %v3_e434, 4
  %v2_e440 = add i32 %v3_e43c, %v2_e19c
  store i32 %v2_e440, i32* %r3.global-to-local, align 4
  %v1_e444 = add i32 %v2_e440, -344
  %v2_e444 = inttoptr i32 %v1_e444 to i32*
  %v3_e444 = load i32, i32* %v2_e444, align 4
  %v1_e448 = urem i32 %v2_e4b0, 32
  %v6_e44c = lshr i32 %v3_e444, %v1_e448
  store i32 %v6_e44c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1dbd8.97 to i32), i32* %r3.global-to-local, align 4
  %v1_e458 = urem i32 %v6_e44c, 2
  %v2_e458 = icmp eq i32 %v1_e458, 0
  store i8 0, i8* bitcast (i8** @global_var_1dbd8.97 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1da5c.95 to i32), i32* @r4, align 4
  br i1 %v2_e458, label %dec_label_pc_e468, label %dec_label_pc_e610

dec_label_pc_e468:                                ; preds = %dec_label_pc_e430
  store i32 58480, i32* @lr, align 4
  %v1_e46c = icmp ne i32 %v2_e4b0, -1
  call void @__pseudo_cond_branch(i1 %v1_e46c, i32 ptrtoint (i32* @global_var_12bf0.98 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_e474 = load i32, i32* @r4, align 4
  %v2_e474 = inttoptr i32 %v1_e474 to i32*
  store i32 -1, i32* %v2_e474, align 4
  %v1_e47c = call i32 @function_13ffc(i32 1)
  br label %dec_label_pc_e304.backedge

dec_label_pc_e304.backedge:                       ; preds = %dec_label_pc_e468, %dec_label_pc_e57c, %dec_label_pc_e648, %dec_label_pc_e6e4, %dec_label_pc_e710, %dec_label_pc_e72c, %dec_label_pc_e794, %bb40, %dec_label_pc_e4b0, %dec_label_pc_e4c0, %dec_label_pc_e690, %bb42, %dec_label_pc_e740, %dec_label_pc_e6fc
  %v2_e30c43.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e304

dec_label_pc_e484:                                ; preds = %dec_label_pc_e374
  store i32 %v2_e19c, i32* %r2.global-to-local, align 4
  %v3_e490 = mul nuw nsw i32 %v3_e488, 4
  %v2_e494 = add i32 %v3_e490, %v2_e19c
  store i32 %v2_e494, i32* %r3.global-to-local, align 4
  %v1_e498 = add i32 %v2_e494, -216
  %v2_e498 = inttoptr i32 %v1_e498 to i32*
  %v3_e498 = load i32, i32* %v2_e498, align 4
  %v1_e49c = urem i32 %v2_e484, 32
  %v7_e4a4 = shl i32 1, %v1_e49c
  %v8_e4a4 = or i32 %v3_e498, %v7_e4a4
  store i32 %v8_e4a4, i32* %r2.global-to-local, align 4
  store i32 %v8_e4a4, i32* %v2_e498, align 4
  br label %dec_label_pc_e3ac

dec_label_pc_e4b0:                                ; preds = %dec_label_pc_e420
  %v7_e4b4 = icmp eq i32 %v2_e4b0, -1
  store i32 ptrtoint (i32* @global_var_1da5c.95 to i32), i32* @r8, align 4
  br i1 %v7_e4b4, label %dec_label_pc_e304.backedge, label %dec_label_pc_e4c0

dec_label_pc_e4c0:                                ; preds = %dec_label_pc_e4b0
  %v3_e4c0 = udiv i32 %v2_e4b0, 32
  %v3_e4c4 = mul nuw nsw i32 %v3_e4c0, 4
  %v2_e4cc = add i32 %v3_e4c4, %v2_e19c
  store i32 %v2_e4cc, i32* %r3.global-to-local, align 4
  %v1_e4d0 = add i32 %v2_e4cc, -216
  %v2_e4d0 = inttoptr i32 %v1_e4d0 to i32*
  %v3_e4d0 = load i32, i32* %v2_e4d0, align 4
  %v1_e4d4 = urem i32 %v2_e4b0, 32
  %v6_e4d8 = lshr i32 %v3_e4d0, %v1_e4d4
  store i32 %v6_e4d8, i32* %r2.global-to-local, align 4
  %v1_e4dc = urem i32 %v6_e4d8, 2
  %v2_e4dc = icmp eq i32 %v1_e4dc, 0
  br i1 %v2_e4dc, label %dec_label_pc_e304.backedge, label %dec_label_pc_e4e4

dec_label_pc_e4e4:                                ; preds = %dec_label_pc_e4c0
  %v6_e4e4 = inttoptr i32 %v3_e424 to i8*
  store i8* %v6_e4e4, i8** %stack_var_-38, align 4
  %v0_e4ec = call i32 @function_131c4()
  %v0_e4f0 = load i32, i32* @r4, align 4
  %v2_e4f0 = inttoptr i32 %v0_e4ec to i32*
  store i32 %v0_e4f0, i32* %v2_e4f0, align 4
  store i32 %v0_e4ec, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_e504 = load i32, i32* @global_var_1da5c.95, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_e510 = call i32 @function_133f0(i32 %v2_e504, i32* %v4_e688, i32 2, i32 16386)
  %v7_e514 = icmp eq i32 %v5_e510, -1
  br i1 %v7_e514, label %dec_label_pc_e6fc, label %dec_label_pc_e51c

dec_label_pc_e51c:                                ; preds = %dec_label_pc_e4e4
  %v2_e51c = icmp eq i32 %v5_e510, 0
  br i1 %v2_e51c, label %dec_label_pc_e57c, label %dec_label_pc_e524

dec_label_pc_e524:                                ; preds = %dec_label_pc_e51c
  %v3_e524 = load i8*, i8** %stack_var_-38, align 4
  %v4_e524 = ptrtoint i8* %v3_e524 to i32
  store i32 %v3_e424, i32* %r3.global-to-local, align 4
  %v4_e52c = mul nuw nsw i32 %v3_e424, 256
  %v5_e52c = or i32 %v4_e524, %v4_e52c
  store i32 %v5_e52c, i32* %r2.global-to-local, align 4
  %v7_e52c = icmp eq i32 %v5_e52c, 0
  br i1 %v7_e52c, label %dec_label_pc_e710, label %dec_label_pc_e534

dec_label_pc_e534:                                ; preds = %dec_label_pc_e524
  %v1_e534 = mul i32 %v4_e524, 256
  %v3_e538 = and i32 %v1_e534, 65280
  %v4_e53c = udiv i32 %v5_e52c, 256
  %v5_e53c = or i32 %v3_e538, %v4_e53c
  %v6_e53c = trunc i32 %v4_e53c to i8
  store i32 %v5_e53c, i32* %r2.global-to-local, align 4
  %v4_e540 = udiv i32 %v5_e52c, 65536
  store i32 %v4_e540, i32* %r3.global-to-local, align 4
  %v3_e544 = icmp slt i8 %v6_e53c, 0
  %v7_e54c = inttoptr i32 %v4_e53c to i8*
  store i8* %v7_e54c, i8** %stack_var_-38, align 4
  br i1 %v3_e544, label %dec_label_pc_e72c, label %dec_label_pc_e554

dec_label_pc_e554:                                ; preds = %dec_label_pc_e534
  %v0_e554 = load i32, i32* @r4, align 4
  %v1_e554 = load i32, i32* @r5, align 4
  %v2_e554 = inttoptr i32 %v1_e554 to i32*
  store i32 %v0_e554, i32* %v2_e554, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_e560 = load i32, i32* @global_var_1da5c.95, align 4
  %v9_e568 = call i32 @function_133f0(i32 %v2_e560, i32* nonnull %stack_var_-1532, i32 %v4_e53c, i32 16386)
  %v7_e56c = icmp eq i32 %v9_e568, -1
  br i1 %v7_e56c, label %dec_label_pc_e6fc, label %dec_label_pc_e574

dec_label_pc_e574:                                ; preds = %dec_label_pc_e554
  %v2_e574 = icmp eq i32 %v9_e568, 0
  br i1 %v2_e574, label %dec_label_pc_e57c, label %dec_label_pc_e740

dec_label_pc_e57c:                                ; preds = %bb42, %dec_label_pc_e574, %dec_label_pc_e51c
  %v2_e57c = load i32, i32* @global_var_1da5c.95, align 4
  store i32 58760, i32* @lr, align 4
  %v1_e584 = icmp ne i32 %v2_e57c, -1
  call void @__pseudo_cond_branch(i1 %v1_e584, i32 ptrtoint (i32* @global_var_12bf0.98 to i32))
  store i32 ptrtoint (i32* @global_var_1da5c.95 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_1da5c.95, align 4
  %v1_e598 = call i32 @function_13ffc(i32 1)
  br label %dec_label_pc_e304.backedge

dec_label_pc_e5a0:                                ; preds = %dec_label_pc_e364
  %v0_e5a8 = load i32, i32* @r4, align 4
  store i32 %v0_e5a8, i32* %r2.global-to-local, align 4
  %v3_e5ac = call i32 @function_134e0(i32 2, i32 1, i32 %v0_e5a8)
  %v7_e5b0 = icmp eq i32 %v3_e5ac, -1
  store i32 %v3_e5ac, i32* @r5, align 4
  %v1_e5b8 = load i32, i32* %r8.global-to-local, align 4
  %v2_e5b8 = inttoptr i32 %v1_e5b8 to i32*
  store i32 %v3_e5ac, i32* %v2_e5b8, align 4
  br i1 %v7_e5b0, label %dec_label_pc_e374, label %dec_label_pc_e5c0

dec_label_pc_e5c0:                                ; preds = %dec_label_pc_e5a0
  %v0_e5c0 = load i32, i32* @r4, align 4
  store i32 %v0_e5c0, i32* @r2, align 4
  %v2_e5c8 = call i32 @function_12b2c(i32 %v3_e5ac, i32 3)
  %v1_e5d0 = or i32 %v2_e5c8, 2048
  store i32 %v1_e5d0, i32* @r2, align 4
  %v0_e5d4 = load i32, i32* @r5, align 4
  %v2_e5d8 = call i32 @function_12b2c(i32 %v0_e5d4, i32 4)
  store i32 ptrtoint (i32* @global_var_1da60.72 to i32), i32* %r2.global-to-local, align 4
  %v2_e5e0 = load i32, i32* @global_var_1da60.72, align 4
  store i32 %v2_e5e0, i32* %r3.global-to-local, align 4
  %v2_e5e4 = icmp eq i32 %v2_e5e0, 0
  br i1 %v2_e5e4, label %.thread, label %bb41

bb41:                                             ; preds = %dec_label_pc_e5c0
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_125a4.99 to i32))
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e5c0, %bb41
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_e5f8 = load i32, i32* @global_var_1da5c.95, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_1dbd8.97 to i8*), align 4
  %v5_e608 = call i32 @function_1333c(i32 %v2_e5f8, %sockaddr* bitcast (i8** @global_var_1dc74.76 to %sockaddr*), i32 16)
  br label %dec_label_pc_e374

dec_label_pc_e610:                                ; preds = %dec_label_pc_e430
  store i32 4, i32* @r5, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v2_e620, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-48, align 4
  %v6_e638 = call i32 @function_13394(i32 %v2_e4b0, i32 1, i32 4, i32* nonnull %stack_var_-44, i32 %v2_e624)
  %v3_e63c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_e63c, i32* %r3.global-to-local, align 4
  %v2_e640 = icmp eq i32 %v3_e63c, 0
  br i1 %v2_e640, label %dec_label_pc_e690, label %dec_label_pc_e648

dec_label_pc_e648:                                ; preds = %dec_label_pc_e610
  %v2_e648 = load i32, i32* @global_var_1da5c.95, align 4
  %v1_e64c = call i32 @function_12bf0(i32 %v2_e648)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_e654 = load i32, i32* @r4, align 4
  %v2_e654 = inttoptr i32 %v1_e654 to i32*
  store i32 -1, i32* %v2_e654, align 4
  %v0_e658 = call i32 @function_e7cc()
  %v2_e660 = call i32 @function_12978(i32 %v0_e658, i32 10)
  %v1_e664 = add i32 %v2_e660, 1
  %v1_e668 = call i32 @function_13ffc(i32 %v1_e664)
  br label %dec_label_pc_e304.backedge

dec_label_pc_e670:                                ; preds = %dec_label_pc_e400
  %v2_e678 = load i32, i32* @global_var_1da5c.95, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_e688 = call i32 @function_13450(i32 %v2_e678, i32* nonnull %v4_e688, i32 2, i32 16384)
  br label %dec_label_pc_e420

dec_label_pc_e690:                                ; preds = %dec_label_pc_e610
  %v2_e698 = call i32 @function_122ec(i8* %v1_e698)
  %sext = mul i32 %v2_e698, 16777216
  %v1_e69c = sdiv i32 %sext, 16777216
  %v7_e69c = inttoptr i32 %v1_e69c to i8*
  store i8* %v7_e69c, i8** %stack_var_-38, align 4
  %v0_e6a0 = call i32 @function_125a4()
  store i32 %v0_e6a0, i32* @global_var_1dc68.49, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e6b4 = load i32, i32* @r5, align 4
  store i32 %v0_e6b4, i32* %r2.global-to-local, align 4
  %v2_e6b8 = load i32, i32* @global_var_1da5c.95, align 4
  %v5_e6bc = call i32 @function_13450(i32 %v2_e6b8, i32* nonnull @global_var_15478.101, i32 %v0_e6b4, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_e6c8 = load i32, i32* @global_var_1da5c.95, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_e6d4 = call i32 @function_13450(i32 %v2_e6c8, i32* %v4_e688, i32 1, i32 16384)
  %v3_e6d8 = load i8*, i8** %stack_var_-38, align 4
  %v4_e6d8 = ptrtoint i8* %v3_e6d8 to i32
  store i32 %v4_e6d8, i32* %r2.global-to-local, align 4
  %v3_e6dc = icmp eq i8* %v3_e6d8, null
  br i1 %v3_e6dc, label %dec_label_pc_e304.backedge, label %dec_label_pc_e6e4

dec_label_pc_e6e4:                                ; preds = %dec_label_pc_e690
  %v2_e6e8 = load i32, i32* @global_var_1da5c.95, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_e6f4 = call i32 @function_13450(i32 %v2_e6e8, i32* nonnull %stack_var_-124, i32 %v4_e6d8, i32 16384)
  br label %dec_label_pc_e304.backedge

dec_label_pc_e6fc:                                ; preds = %dec_label_pc_e554, %dec_label_pc_e4e4
  %v0_e6fc = load i32, i32* @r5, align 4
  %v1_e6fc = inttoptr i32 %v0_e6fc to i32*
  %v2_e6fc = load i32, i32* %v1_e6fc, align 4
  store i32 %v2_e6fc, i32* %r3.global-to-local, align 4
  %v7_e700 = icmp eq i32 %v2_e6fc, 4
  br i1 %v7_e700, label %dec_label_pc_e304.backedge, label %bb42

bb42:                                             ; preds = %dec_label_pc_e6fc
  %v8_e704 = icmp eq i32 %v2_e6fc, 11
  br i1 %v8_e704, label %dec_label_pc_e304.backedge, label %dec_label_pc_e57c

dec_label_pc_e710:                                ; preds = %dec_label_pc_e524
  %v2_e714 = load i32, i32* @global_var_1da5c.95, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_e724 = call i32 @function_133f0(i32 %v2_e714, i32* nonnull %v4_e688, i32 2, i32 16384)
  br label %dec_label_pc_e304.backedge

dec_label_pc_e72c:                                ; preds = %dec_label_pc_e534
  %v2_e72c = load i32, i32* @global_var_1da5c.95, align 4
  %v1_e730 = call i32 @function_12bf0(i32 %v2_e72c)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_e738 = load i32, i32* @r8, align 4
  %v2_e738 = inttoptr i32 %v1_e738 to i32*
  store i32 -1, i32* %v2_e738, align 4
  br label %dec_label_pc_e304.backedge

dec_label_pc_e740:                                ; preds = %dec_label_pc_e574
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_e750 = load i32, i32* @global_var_1da5c.95, align 4
  %v5_e754 = call i32 @function_133f0(i32 %v2_e750, i32* nonnull %v4_e688, i32 2, i32 16384)
  %v3_e758 = load i8*, i8** %stack_var_-38, align 4
  %v4_e758 = ptrtoint i8* %v3_e758 to i32
  %v4_e75c = urem i32 %v4_e540, 256
  %v4_e760 = mul i32 %v4_e758, 256
  %v5_e760 = or i32 %v4_e760, %v4_e75c
  store i32 %v5_e760, i32* %r2.global-to-local, align 4
  %v3_e768 = sdiv i32 %v4_e760, 256
  store i32 %v3_e768, i32* @lr, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_e774 = load i32, i32* @global_var_1da5c.95, align 4
  %v6_e77c = inttoptr i32 %v5_e760 to i8*
  store i8* %v6_e77c, i8** %stack_var_-38, align 4
  %v8_e780 = call i32 @function_133f0(i32 %v2_e774, i32* nonnull %stack_var_-1532, i32 %v5_e760, i32 16384)
  %v3_e784 = load i8*, i8** %stack_var_-38, align 4
  %v4_e784 = ptrtoint i8* %v3_e784 to i32
  store i32 %v4_e784, i32* %r2.global-to-local, align 4
  %v4_e788 = urem i32 %v3_e768, 256
  store i32 %v4_e788, i32* %r3.global-to-local, align 4
  %v6_e78c = mul nuw nsw i32 %v4_e788, 256
  %v7_e78c = or i32 %v4_e784, %v6_e78c
  %v9_e78c = icmp eq i32 %v7_e78c, 0
  br i1 %v9_e78c, label %dec_label_pc_e304.backedge, label %dec_label_pc_e794

dec_label_pc_e794:                                ; preds = %dec_label_pc_e740
  %v7_e798 = call i32 @function_8320(i32* nonnull %stack_var_-1532, i32 %v7_e78c, i32 %v4_e784, i32 %v4_e788)
  br label %dec_label_pc_e304.backedge

; uselistorder directives
  uselistorder i32 %v4_e788, { 2, 0, 1 }
  uselistorder i32 %v4_e784, { 1, 0, 2 }
  uselistorder i32 %v3_e768, { 1, 0 }
  uselistorder i32 %v5_e760, { 1, 0, 2 }
  uselistorder i32 %v4_e760, { 1, 0 }
  uselistorder i32 %v3_e5ac, { 3, 2, 1, 0 }
  uselistorder i32 %v9_e568, { 1, 0 }
  uselistorder i32 %v4_e53c, { 2, 3, 0, 1 }
  uselistorder i32 %v5_e510, { 1, 0 }
  uselistorder i32 %v2_e4b0, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v5_e3e8, { 2, 3, 1, 0 }
  uselistorder i32 %v2_e334, { 2, 1, 0 }
  uselistorder i32 %v1_e328, { 1, 2, 0 }
  uselistorder i32 %v1_e310, { 1, 2, 0 }
  uselistorder i32* %v4_e688, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v2_e300, { 1, 0, 2 }
  uselistorder i32 %v2_e2fc, { 1, 0, 2 }
  uselistorder i32 %v2_e19c, { 0, 1, 7, 2, 3, 4, 5, 6, 8 }
  uselistorder i32 %v2_e18c, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v2_e0ac, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-124, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i8** %stack_var_-38, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 22, 30, 31, 32, 43, 44, 36, 37, 33, 41, 42, 34, 35, 38, 39, 40 }
  uselistorder i32 16386, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @function_13ffc, { 8, 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i8* bitcast (i8** @global_var_1dbd8.97 to i8*), { 0, 1, 3, 2 }
  uselistorder i8** @global_var_1dbd8.97, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1dbd8.97 to i32), { 2, 1, 0 }
  uselistorder i32* @global_var_1da5c.95, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 16, 15, 17, 18 }
  uselistorder i32 (i32)* @function_dfb4, { 1, 0 }
  uselistorder i32 (i32)* @function_d760, { 1, 0 }
  uselistorder i32 (i32)* @function_8650, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_12314, { 0, 1, 17, 18, 19, 20, 21, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32)* @function_e880, { 2, 1, 0 }
  uselistorder i32* @global_var_1da60.72, { 2, 3, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_df60.70 to i32), { 0, 2, 1 }
  uselistorder i8** @global_var_1dc74.76, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @function_13554, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_e304.backedge, { 6, 12, 5, 4, 11, 13, 3, 10, 2, 1, 9, 8, 0, 7 }
  uselistorder label %dec_label_pc_e420, { 2, 1, 0 }
  uselistorder label %bb40, { 1, 0 }
  uselistorder label %dec_label_pc_e374, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e364, { 1, 0 }
  uselistorder label %dec_label_pc_e324.dec_label_pc_e324_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_e30c.dec_label_pc_e30c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_e158, { 2, 0, 1 }
}

define i32 @function_e7cc() local_unnamed_addr {
dec_label_pc_e7cc:
  %v2_e7d8 = load i32, i32* @global_var_1dbdc.103, align 4
  %v2_e7dc = load i32, i32* @global_var_1dbe8.105, align 4
  store i32 ptrtoint (i32* @global_var_1dbe0.107 to i32), i32* @lr, align 4
  %v4_e7e8 = mul i32 %v2_e7d8, 2048
  %v5_e7e8 = xor i32 %v4_e7e8, %v2_e7d8
  %v4_e7ec = udiv i32 %v2_e7dc, 524288
  %v5_e7ec = xor i32 %v4_e7ec, %v2_e7dc
  %v2_e7f0 = load i32, i32* @global_var_1dbe0.107, align 4
  %v2_e7f4 = load i32, i32* @global_var_1dbe4.109, align 4
  %v2_e7f8 = xor i32 %v5_e7ec, %v5_e7e8
  %v4_e7fc = udiv i32 %v5_e7e8, 256
  %v5_e7fc = xor i32 %v2_e7f8, %v4_e7fc
  store i32 %v2_e7f0, i32* @global_var_1dbdc.103, align 4
  store i32 %v2_e7f4, i32* @global_var_1dbe0.107, align 4
  store i32 %v2_e7dc, i32* @global_var_1dbe4.109, align 4
  store i32 %v5_e7fc, i32* @global_var_1dbe8.105, align 4
  ret i32 %v5_e7fc

; uselistorder directives
  uselistorder i32 %v2_e7dc, { 2, 1, 0 }
  uselistorder i32 %v2_e7d8, { 1, 0 }
}

define i32 @function_e824(i32 %arg1) local_unnamed_addr {
dec_label_pc_e824:
  %stack_var_-12 = alloca i32, align 4
  %v3_e824 = load i32, i32* @r4, align 4
  store i32 %v3_e824, i32* %stack_var_-12, align 4
  %v2_e82c = call i32 @function_12ec0(i32* null)
  store i32 %v2_e82c, i32* @global_var_1dbdc.103, align 4
  %v0_e838 = call i32 @function_12c48()
  store i32 %v0_e838, i32* @r4, align 4
  %v0_e840 = call i32 @function_12c74()
  %v0_e848 = load i32, i32* @r4, align 4
  %v2_e848 = xor i32 %v0_e848, %v0_e840
  store i32 %v2_e848, i32* @r4, align 4
  store i32 %v2_e848, i32* @global_var_1dbe0.107, align 4
  %v1_e850 = call i32 @function_131d0(i32 %v0_e840)
  %v2_e854 = load i32, i32* @global_var_1dbe0.107, align 4
  %v2_e860 = xor i32 %v2_e854, %v1_e850
  store i32 %v2_e860, i32* @global_var_1dbe8.105, align 4
  store i32 %v1_e850, i32* @global_var_1dbe4.109, align 4
  %v2_e86c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e86c, i32* @r4, align 4
  ret i32 %v1_e850

; uselistorder directives
  uselistorder i32 %v1_e850, { 1, 2, 0 }
  uselistorder i32 %v0_e840, { 1, 0 }
  uselistorder i32 ()* @function_12c74, { 2, 0, 1 }
}

define i32 @function_e880(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e880:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_e880 = load i32, i32* @r4, align 4
  store i32 %v3_e880, i32* %stack_var_-36, align 4
  %v6_e880 = load i32, i32* @r5, align 4
  %v9_e880 = load i32, i32* @r6, align 4
  %v12_e880 = load i32, i32* @r7, align 4
  %v28_e880 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_e888 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_e894 = call i32 @function_11d20(i32 28)
  %v3_e8a0 = call i32 @function_11c3c(i32 28, i32* null)
  %v2_e8ac = inttoptr i32 %v3_e8a0 to i8*
  %v3_e8ac = call i32 @function_132d0(i32 %v2_e888, i8* %v2_e8ac)
  %v2_e8b0 = icmp eq i32 %arg2, 0
  br i1 %v2_e8b0, label %dec_label_pc_e92c, label %dec_label_pc_e8b8

dec_label_pc_e8b8:                                ; preds = %dec_label_pc_e880
  store i32 ptrtoint (i32* @global_var_1dbdc.103 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dbe0.107 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dbe4.109 to i32), i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_1dbe8.105 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_e900 = bitcast i32* %stack_var_-68 to i8*
  br label %dec_label_pc_e8cc

dec_label_pc_e8cc:                                ; preds = %dec_label_pc_e8cc.dec_label_pc_e8cc_crit_edge, %dec_label_pc_e8b8
  %v1_e8f0 = phi i32 [ %v1_e8f0.pre, %dec_label_pc_e8cc.dec_label_pc_e8cc_crit_edge ], [ ptrtoint (i32* @global_var_1dbdc.103 to i32), %dec_label_pc_e8b8 ]
  %v2_e8cc = load i32, i32* @global_var_1dbe8.105, align 4
  store i32 %v2_e8cc, i32* %r2.global-to-local, align 4
  %v2_e8d0 = load i32, i32* @global_var_1dbdc.103, align 4
  %v4_e8d4 = udiv i32 %v2_e8cc, 524288
  %v5_e8d4 = xor i32 %v4_e8d4, %v2_e8cc
  %v4_e8d8 = mul i32 %v2_e8d0, 2048
  %v5_e8d8 = xor i32 %v4_e8d8, %v2_e8d0
  %v2_e8dc = xor i32 %v5_e8d4, %v5_e8d8
  %v2_e8e0 = load i32, i32* @global_var_1dbe0.107, align 4
  %v2_e8e4 = load i32, i32* @global_var_1dbe4.109, align 4
  store i32 %v2_e8e4, i32* %ip.global-to-local, align 4
  %v4_e8e8 = udiv i32 %v5_e8d8, 256
  %v5_e8e8 = xor i32 %v2_e8dc, %v4_e8e8
  store i32 %v5_e8e8, i32* @r4, align 4
  %v2_e8f0 = inttoptr i32 %v1_e8f0 to i32*
  store i32 %v2_e8e0, i32* %v2_e8f0, align 4
  %v0_e8f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_e8f4 = load i32, i32* %r8.global-to-local, align 4
  %v2_e8f4 = inttoptr i32 %v1_e8f4 to i32*
  store i32 %v0_e8f4, i32* %v2_e8f4, align 4
  %v0_e8f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_e8f8 = load i32, i32* @r7, align 4
  %v2_e8f8 = inttoptr i32 %v1_e8f8 to i32*
  store i32 %v0_e8f8, i32* %v2_e8f8, align 4
  %v0_e8fc = load i32, i32* @r4, align 4
  %v1_e8fc = load i32, i32* @r6, align 4
  %v2_e8fc = inttoptr i32 %v1_e8fc to i32*
  store i32 %v0_e8fc, i32* %v2_e8fc, align 4
  %v2_e900 = call i32 @function_122ec(i8* %v1_e900)
  %v0_e908 = load i32, i32* @r4, align 4
  %v2_e90c = call i32 @function_12978(i32 %v0_e908, i32 %v2_e900)
  %v2_e914 = add i32 %v2_e90c, %v28_e880
  %v1_e918 = add i32 %v2_e914, -32
  %v2_e918 = inttoptr i32 %v1_e918 to i8*
  %v3_e918 = load i8, i8* %v2_e918, align 1
  %v2_e91c = load i32, i32* @r5, align 4
  %v3_e91c = load i32, i32* %fp.global-to-local, align 4
  %v4_e91c = add i32 %v3_e91c, %v2_e91c
  %v5_e91c = inttoptr i32 %v4_e91c to i8*
  store i8 %v3_e918, i8* %v5_e91c, align 1
  %v0_e920 = load i32, i32* @r5, align 4
  %v1_e920 = add i32 %v0_e920, 1
  store i32 %v1_e920, i32* @r5, align 4
  %v1_e924 = load i32, i32* %sb.global-to-local, align 4
  %v9_e924 = icmp eq i32 %v1_e920, %v1_e924
  br i1 %v9_e924, label %dec_label_pc_e92c, label %dec_label_pc_e8cc.dec_label_pc_e8cc_crit_edge

dec_label_pc_e8cc.dec_label_pc_e8cc_crit_edge:    ; preds = %dec_label_pc_e8cc
  %v1_e8f0.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_e8cc

dec_label_pc_e92c:                                ; preds = %dec_label_pc_e8cc, %dec_label_pc_e880
  %v1_e930 = call i32 @function_11c68(i32 28)
  %v2_e938 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_e938, i32* @r4, align 4
  store i32 %v6_e880, i32* @r5, align 4
  store i32 %v9_e880, i32* @r6, align 4
  store i32 %v12_e880, i32* @r7, align 4
  ret i32 %v1_e930

; uselistorder directives
  uselistorder i32 %v2_e8d0, { 1, 0 }
  uselistorder i32 %v2_e8cc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
}

define i32 @function_e94c(i8* %arg1) local_unnamed_addr {
dec_label_pc_e94c:
  %fp.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_e94c = load i32, i32* @r4, align 4
  store i32 %v3_e94c, i32* %stack_var_-36, align 4
  %v9_e94c = load i32, i32* @r6, align 4
  %v12_e94c = load i32, i32* @r7, align 4
  %v15_e94c = load i32, i32* @r8, align 4
  %v18_e94c = load i32, i32* @sb, align 4
  %v21_e94c = load i32, i32* @sl, align 4
  %v24_e94c = load i32, i32* @fp, align 4
  %v0_e950 = load i32, i32* @r1, align 4
  store i32 %v0_e950, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_e950, 1
  br i1 %tmp20, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_e94c
  store i32 %v3_e94c, i32* @r4, align 4
  ret i32 %tmp

bb21:                                             ; preds = %dec_label_pc_e94c
  store i32 ptrtoint (i32* @global_var_1dbe8.105 to i32), i32* %fp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dbe4.109 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dbe0.107 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dbdc.103 to i32), i32* %r8.global-to-local, align 4
  %v2_e96c = load i32, i32* @global_var_1dbe8.105, align 4
  store i32 %v2_e96c, i32* @lr, align 4
  %v2_e970 = load i32, i32* @global_var_1dbe4.109, align 4
  store i32 %v2_e970, i32* %r7.global-to-local, align 4
  %v2_e974 = load i32, i32* @global_var_1dbe0.107, align 4
  store i32 %v2_e974, i32* %r6.global-to-local, align 4
  %v2_e978 = load i32, i32* @global_var_1dbdc.103, align 4
  br label %dec_label_pc_e9a4

dec_label_pc_e980:                                ; preds = %dec_label_pc_e9d0
  %v3_e9d8 = sdiv i32 %v5_e9bc, 256
  %v1_e980 = trunc i32 %v3_e9d8 to i8
  %v3_e980 = add i32 %v9_e9c4, 1
  %v4_e980 = inttoptr i32 %v3_e980 to i8*
  store i8 %v1_e980, i8* %v4_e980, align 1
  %v0_e984 = load i32, i32* %r3.global-to-local, align 4
  %v1_e984 = trunc i32 %v0_e984 to i8
  %v2_e984 = load i32, i32* %r5.global-to-local, align 4
  %v3_e984 = inttoptr i32 %v2_e984 to i8*
  store i8 %v1_e984, i8* %v3_e984, align 1
  %v0_e988 = load i32, i32* %r5.global-to-local, align 4
  %v1_e988 = add i32 %v0_e988, 2
  store i32 %v1_e988, i32* %r5.global-to-local, align 4
  %v0_e98c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e98c

dec_label_pc_e98c:                                ; preds = %.thread, %dec_label_pc_e980
  %v0_e98c = phi i32 [ %v9_e9c8, %.thread ], [ %v0_e98c.pre, %dec_label_pc_e980 ]
  %v2_e9807 = phi i32 [ %v12_e9c4, %.thread ], [ %v1_e988, %dec_label_pc_e980 ]
  %tmp22 = icmp slt i32 %v0_e98c, 1
  br i1 %tmp22, label %dec_label_pc_ea0c, label %dec_label_pc_e998

dec_label_pc_e998:                                ; preds = %dec_label_pc_e98c
  %v0_e990 = load i32, i32* %r6.global-to-local, align 4
  %v0_e998 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_e998, i32* %r6.global-to-local, align 4
  %v0_e99c = load i32, i32* @lr, align 4
  store i32 %v0_e99c, i32* %r7.global-to-local, align 4
  %v0_e9a0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_e9a0, i32* @lr, align 4
  br label %dec_label_pc_e9a4

dec_label_pc_e9a4:                                ; preds = %bb21, %dec_label_pc_e998
  %v0_e9f4 = phi i32 [ %v2_e974, %bb21 ], [ %v0_e998, %dec_label_pc_e998 ]
  %v9_e9c4 = phi i32 [ %tmp, %bb21 ], [ %v2_e9807, %dec_label_pc_e998 ]
  %v0_e9dc = phi i32 [ %v0_e950, %bb21 ], [ %v0_e98c, %dec_label_pc_e998 ]
  %v0_e9e8 = phi i32 [ %v2_e96c, %bb21 ], [ %v0_e9a0, %dec_label_pc_e998 ]
  %v0_e9e4 = phi i32 [ %v2_e978, %bb21 ], [ %v0_e990, %dec_label_pc_e998 ]
  %v4_e9a4 = mul i32 %v0_e9e4, 2048
  %v5_e9a4 = xor i32 %v4_e9a4, %v0_e9e4
  %v4_e9a8 = udiv i32 %v0_e9e8, 524288
  %v5_e9a8 = xor i32 %v4_e9a8, %v0_e9e8
  %v2_e9ac = xor i32 %v5_e9a8, %v5_e9a4
  %v4_e9bc = udiv i32 %v5_e9a4, 256
  %v5_e9bc = xor i32 %v4_e9bc, %v2_e9ac
  store i32 %v5_e9bc, i32* %r3.global-to-local, align 4
  %v7_e9c4 = icmp sgt i32 %v0_e9dc, 3
  br i1 %v7_e9c4, label %.thread, label %dec_label_pc_e9d0

.thread:                                          ; preds = %dec_label_pc_e9a4
  %v10_e9c4 = inttoptr i32 %v9_e9c4 to i32*
  store i32 %v5_e9bc, i32* %v10_e9c4, align 4
  %v11_e9c4 = load i32, i32* %r5.global-to-local, align 4
  %v12_e9c4 = add i32 %v11_e9c4, 4
  store i32 %v12_e9c4, i32* %r5.global-to-local, align 4
  %v8_e9c8 = load i32, i32* %r4.global-to-local, align 4
  %v9_e9c8 = add i32 %v8_e9c8, -4
  store i32 %v9_e9c8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e98c

dec_label_pc_e9d0:                                ; preds = %dec_label_pc_e9a4
  store i32 %v5_e9bc, i32* %r3.global-to-local, align 4
  %v7_e9d4 = icmp eq i32 %v0_e9dc, 1
  %v1_e9dc = add i32 %v0_e9dc, -2
  store i32 %v1_e9dc, i32* %r4.global-to-local, align 4
  br i1 %v7_e9d4, label %dec_label_pc_e9e4, label %dec_label_pc_e980

dec_label_pc_e9e4:                                ; preds = %dec_label_pc_e9d0
  store i32 %v5_e9bc, i32* %r3.global-to-local, align 4
  %v1_e9f4 = load i32, i32* %r8.global-to-local, align 4
  %v2_e9f4 = inttoptr i32 %v1_e9f4 to i32*
  store i32 %v0_e9f4, i32* %v2_e9f4, align 4
  %v0_e9f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_e9f8 = load i32, i32* %sl.global-to-local, align 4
  %v2_e9f8 = inttoptr i32 %v1_e9f8 to i32*
  store i32 %v0_e9f8, i32* %v2_e9f8, align 4
  %v0_e9fc = load i32, i32* @lr, align 4
  %v1_e9fc = load i32, i32* %sb.global-to-local, align 4
  %v2_e9fc = inttoptr i32 %v1_e9fc to i32*
  store i32 %v0_e9fc, i32* %v2_e9fc, align 4
  %v0_ea00 = load i32, i32* %r3.global-to-local, align 4
  %v1_ea00 = load i32, i32* %fp.global-to-local, align 4
  %v2_ea00 = inttoptr i32 %v1_ea00 to i32*
  store i32 %v0_ea00, i32* %v2_ea00, align 4
  %v0_ea04 = load i32, i32* %r3.global-to-local, align 4
  %v1_ea04 = trunc i32 %v0_ea04 to i8
  %v2_ea04 = load i32, i32* %r5.global-to-local, align 4
  %v3_ea04 = inttoptr i32 %v2_ea04 to i8*
  store i8 %v1_ea04, i8* %v3_ea04, align 1
  %v2_ea08 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_ea08, i32* @r4, align 4
  store i32 %v9_e94c, i32* @r6, align 4
  store i32 %v12_e94c, i32* @r7, align 4
  store i32 %v15_e94c, i32* @r8, align 4
  store i32 %v18_e94c, i32* @sb, align 4
  store i32 %v21_e94c, i32* @sl, align 4
  store i32 %v24_e94c, i32* @fp, align 4
  ret i32 %v5_e9a4

dec_label_pc_ea0c:                                ; preds = %dec_label_pc_e98c
  %v0_ea0c = load i32, i32* %r3.global-to-local, align 4
  %v1_ea0c = load i32, i32* %fp.global-to-local, align 4
  %v2_ea0c = inttoptr i32 %v1_ea0c to i32*
  store i32 %v0_ea0c, i32* %v2_ea0c, align 4
  %v0_ea10 = load i32, i32* @lr, align 4
  %v1_ea10 = load i32, i32* %sb.global-to-local, align 4
  %v2_ea10 = inttoptr i32 %v1_ea10 to i32*
  store i32 %v0_ea10, i32* %v2_ea10, align 4
  %v0_ea14 = load i32, i32* %r7.global-to-local, align 4
  %v1_ea14 = load i32, i32* %sl.global-to-local, align 4
  %v2_ea14 = inttoptr i32 %v1_ea14 to i32*
  store i32 %v0_ea14, i32* %v2_ea14, align 4
  %v0_ea18 = load i32, i32* %r6.global-to-local, align 4
  %v1_ea18 = load i32, i32* %r8.global-to-local, align 4
  %v2_ea18 = inttoptr i32 %v1_ea18 to i32*
  store i32 %v0_ea18, i32* %v2_ea18, align 4
  %v2_ea1c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_ea1c, i32* @r4, align 4
  store i32 %v9_e94c, i32* @r6, align 4
  store i32 %v12_e94c, i32* @r7, align 4
  store i32 %v15_e94c, i32* @r8, align 4
  store i32 %v18_e94c, i32* @sb, align 4
  store i32 %v21_e94c, i32* @sl, align 4
  store i32 %v24_e94c, i32* @fp, align 4
  ret i32 %v5_e9a4

; uselistorder directives
  uselistorder i32 %v9_e9c8, { 1, 0 }
  uselistorder i32 %v12_e9c4, { 1, 0 }
  uselistorder i32 %v5_e9bc, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v5_e9a4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_e9e4, { 1, 0 }
  uselistorder i32 %v0_e9e8, { 1, 0 }
  uselistorder i32 %v0_e98c, { 1, 0 }
  uselistorder i32 %v24_e94c, { 1, 0 }
  uselistorder i32 %v21_e94c, { 1, 0 }
  uselistorder i32 %v18_e94c, { 1, 0 }
  uselistorder i32 %v15_e94c, { 1, 0 }
  uselistorder i32 %v12_e94c, { 1, 0 }
  uselistorder i32 %v9_e94c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 5, 0, 3, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 5, 0, 1, 2, 4, 7, 6, 3 }
  uselistorder i32* @global_var_1dbdc.103, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1dbdc.103 to i32), { 1, 0, 2 }
  uselistorder i32* @global_var_1dbe0.107, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32* @global_var_1dbe4.109, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_1dbe8.105, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @sl, { 79, 80, 81, 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 35, 36, 37, 38, 39, 40 }
  uselistorder i32* @sb, { 71, 72, 73, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder label %dec_label_pc_e9a4, { 1, 0 }
}

define i32 @function_ea30() local_unnamed_addr {
dec_label_pc_ea30:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_ea30 = load i32, i32* @r4, align 4
  store i32 %v3_ea30, i32* %stack_var_-16, align 4
  %v0_ea34 = load i32, i32* @r0, align 4
  store i32 %v0_ea34, i32* %r5.global-to-local, align 4
  %v1_ea38 = add i32 %v0_ea34, 4
  %v2_ea38 = inttoptr i32 %v1_ea38 to i32*
  %v3_ea38 = load i32, i32* %v2_ea38, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 59996, i32* @lr, align 4
  %v1_ea58 = icmp ne i32 %v3_ea38, -1
  call void @__pseudo_cond_branch(i1 %v1_ea58, i32 ptrtoint (i32* @global_var_12bf0.98 to i32))
  %v3_ea68 = call i32 @function_134e0(i32 2, i32 1, i32 0)
  store i32 %v3_ea68, i32* %r3.global-to-local, align 4
  %v7_ea70 = icmp eq i32 %v3_ea68, -1
  store i32 256, i32* @r1, align 4
  %v0_ea78 = load i32, i32* %r5.global-to-local, align 4
  %v1_ea78 = add i32 %v0_ea78, 28
  store i32 %v1_ea78, i32* @r0, align 4
  %v2_ea7c = add i32 %v0_ea78, 4
  %v3_ea7c = inttoptr i32 %v2_ea7c to i32*
  store i32 %v3_ea68, i32* %v3_ea7c, align 4
  br i1 %v7_ea70, label %dec_label_pc_ea30.dec_label_pc_eaf8_crit_edge, label %dec_label_pc_ea84

dec_label_pc_ea30.dec_label_pc_eaf8_crit_edge:    ; preds = %dec_label_pc_ea30
  %v14_eafc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_eaf8

dec_label_pc_ea84:                                ; preds = %dec_label_pc_ea30
  %v0_ea84 = load i32, i32* %r6.global-to-local, align 4
  %v1_ea84 = load i32, i32* %r5.global-to-local, align 4
  %v2_ea84 = add i32 %v1_ea84, 24
  %v3_ea84 = inttoptr i32 %v2_ea84 to i32*
  store i32 %v0_ea84, i32* %v3_ea84, align 4
  %v0_ea88 = call i32 @function_1238c()
  %v0_ea8c = load i32, i32* %r5.global-to-local, align 4
  %v1_ea8c = add i32 %v0_ea8c, 4
  %v2_ea8c = inttoptr i32 %v1_ea8c to i32*
  %v3_ea8c = load i32, i32* %v2_ea8c, align 4
  store i32 %v3_ea8c, i32* @r4, align 4
  %v0_ea94 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_ea94, i32* @r2, align 4
  %v2_ea9c = call i32 @function_12b2c(i32 %v3_ea8c, i32 3)
  %v1_eaa4 = or i32 %v2_ea9c, 2048
  store i32 %v1_eaa4, i32* @r2, align 4
  %v0_eaa8 = load i32, i32* @r4, align 4
  %v2_eaac = call i32 @function_12b2c(i32 %v0_eaa8, i32 4)
  store i32 ptrtoint (i32* @global_var_1dc20.123 to i32), i32* %r3.global-to-local, align 4
  %v0_eab4 = load i32, i32* %r5.global-to-local, align 4
  %v1_eab4 = add i32 %v0_eab4, 20
  %v2_eab4 = inttoptr i32 %v1_eab4 to i32*
  %v3_eab4 = load i32, i32* %v2_eab4, align 4
  store i32 %v3_eab4, i32* @r4, align 4
  %v2_eab8 = load i32, i32* @global_var_1dc20.123, align 4
  %v1_eabc = add i32 %v0_eab4, 16
  %v2_eabc = inttoptr i32 %v1_eabc to i32*
  %v3_eabc = load i32, i32* %v2_eabc, align 4
  store i32 %v3_eabc, i32* @lr, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_eac4 = add i32 %v0_eab4, 8
  %v3_eac4 = inttoptr i32 %v2_eac4 to i32*
  store i32 %v2_eab8, i32* %v3_eac4, align 4
  %v0_eac8 = load i32, i32* %r3.global-to-local, align 4
  %v1_eac8 = load i32, i32* %r5.global-to-local, align 4
  %v2_eac8 = add i32 %v1_eac8, 12
  %v3_eac8 = inttoptr i32 %v2_eac8 to i32*
  store i32 %v0_eac8, i32* %v3_eac8, align 4
  %v0_ead0 = load i32, i32* %r5.global-to-local, align 4
  %v1_ead0 = add i32 %v0_ead0, 4
  %v2_ead0 = inttoptr i32 %v1_ead0 to i32*
  %v3_ead0 = load i32, i32* %v2_ead0, align 4
  %v0_ead4 = load i32, i32* %r3.global-to-local, align 4
  %v2_ead4 = mul i32 %v0_ead4, 2
  store i32 %v2_ead4, i32* %r3.global-to-local, align 4
  store i32 %v2_ead4, i32* %stack_var_-32, align 4
  %v3_eaf4 = bitcast i32* %stack_var_-32 to %sockaddr*
  %v4_eaf4 = call i32 @function_1333c(i32 %v3_ead0, %sockaddr* %v3_eaf4, i32 16)
  br label %dec_label_pc_eaf8

dec_label_pc_eaf8:                                ; preds = %dec_label_pc_ea30.dec_label_pc_eaf8_crit_edge, %dec_label_pc_ea84
  %v14_eafc = phi i32 [ %v14_eafc.pre, %dec_label_pc_ea30.dec_label_pc_eaf8_crit_edge ], [ %v4_eaf4, %dec_label_pc_ea84 ]
  %v2_eafc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_eafc, i32* @r4, align 4
  ret i32 %v14_eafc

; uselistorder directives
  uselistorder i32 %v2_ead4, { 1, 0 }
  uselistorder i32 %v3_ea68, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 ()* @function_1238c, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_eaf8, { 1, 0 }
}

define i32 @function_eb04(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_eb04:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_eb04 = load i32, i32* @r4, align 4
  %v6_eb04 = load i32, i32* @r5, align 4
  %v9_eb04 = load i32, i32* @r6, align 4
  %v12_eb04 = load i32, i32* @r7, align 4
  %v15_eb04 = load i32, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1dbec.125 to i32), i32* @r8, align 4
  %v2_eb0c = load i32, i32* @global_var_1dbec.125, align 4
  store i32 ptrtoint (i32* @global_var_1dc18.127 to i32), i32* %sb.global-to-local, align 4
  %v3_eb18 = mul i32 %v2_eb0c, 16
  store i32 %v3_eb18, i32* %r3.global-to-local, align 4
  %v3_eb20 = urem i32 %arg3, 65536
  store i32 %v3_eb20, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_eb2c = load i32, i32* @global_var_1dc18.127, align 4
  %v1_eb30 = add i32 %v3_eb18, 16
  store i32 %v1_eb30, i32* %r1.global-to-local, align 4
  store i32 %v3_eb20, i32* %stack_var_-44, align 4
  %v15_eb38 = call i32 @function_13914(i32 %v2_eb2c, i32 %v1_eb30, i32 %v3_eb20, i32 %v3_eb18)
  store i32 %v15_eb38, i32* %sl.global-to-local, align 4
  %v0_eb40 = load i32, i32* @r5, align 4
  %v1_eb44 = load i32, i32* %sb.global-to-local, align 4
  %v2_eb44 = inttoptr i32 %v1_eb44 to i32*
  store i32 %v15_eb38, i32* %v2_eb44, align 4
  %v2_eb48 = load i32, i32* @global_var_1dbec.125, align 4
  store i32 %v2_eb48, i32* %fp.global-to-local, align 4
  %v1_eb4c = inttoptr i32 %v0_eb40 to i8*
  %v2_eb4c = call i32 @function_122ec(i8* %v1_eb4c)
  %sext = mul i32 %v2_eb4c, 16777216
  %v1_eb50 = sdiv i32 %sext, 16777216
  %v2_eb50 = add nsw i32 %v1_eb50, 1
  store i32 %v2_eb50, i32* @r4, align 4
  store i32 %v1_eb50, i32* @r7, align 4
  %v1_eb5c = call i32 @function_13678(i32 %v2_eb50)
  %v0_eb60 = load i32, i32* @r5, align 4
  store i32 %v0_eb60, i32* %r1.global-to-local, align 4
  %v0_eb64 = load i32, i32* @r4, align 4
  store i32 %v0_eb64, i32* %r2.global-to-local, align 4
  store i32 %v1_eb5c, i32* @r6, align 4
  %v3_eb6c = call i32 @function_12368(i32 %v1_eb5c, i32 %v0_eb60, i32 %v0_eb64)
  %v0_eb70 = load i32, i32* @r7, align 4
  %tmp21 = icmp slt i32 %v0_eb70, 1
  %extract.t6 = trunc i32 %v0_eb70 to i8
  br i1 %tmp21, label %dec_label_pc_eb94, label %dec_label_pc_eb78

dec_label_pc_eb78:                                ; preds = %dec_label_pc_eb04
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_eb7c

dec_label_pc_eb7c:                                ; preds = %dec_label_pc_eb7c, %dec_label_pc_eb78
  %v2_eb84 = phi i32 [ %v1_eb88, %dec_label_pc_eb7c ], [ 0, %dec_label_pc_eb78 ]
  %v1_eb7c = load i32, i32* @r6, align 4
  %v2_eb7c = add i32 %v1_eb7c, %v2_eb84
  %v3_eb7c = inttoptr i32 %v2_eb7c to i8*
  %v4_eb7c = load i8, i8* %v3_eb7c, align 1
  %v6_eb7c = zext i8 %v4_eb7c to i32
  %v1_eb80 = xor i32 %v6_eb7c, 103
  store i32 %v1_eb80, i32* %r3.global-to-local, align 4
  %v1_eb84 = trunc i32 %v1_eb80 to i8
  store i8 %v1_eb84, i8* %v3_eb7c, align 1
  %v0_eb88 = load i32, i32* %r2.global-to-local, align 4
  %v1_eb88 = add i32 %v0_eb88, 1
  store i32 %v1_eb88, i32* %r2.global-to-local, align 4
  %v0_eb8c = load i32, i32* @r7, align 4
  %v9_eb8c = icmp eq i32 %v0_eb8c, %v1_eb88
  br i1 %v9_eb8c, label %dec_label_pc_eb94.loopexit, label %dec_label_pc_eb7c

dec_label_pc_eb94.loopexit:                       ; preds = %dec_label_pc_eb7c
  %extract.t = trunc i32 %v1_eb88 to i8
  br label %dec_label_pc_eb94

dec_label_pc_eb94:                                ; preds = %dec_label_pc_eb94.loopexit, %dec_label_pc_eb04
  %v0_eba4.off0 = phi i8 [ %extract.t, %dec_label_pc_eb94.loopexit ], [ %extract.t6, %dec_label_pc_eb04 ]
  %v2_eb94 = load i32, i32* @global_var_1dbec.125, align 4
  %v2_eb98 = load i32, i32* @global_var_1dc18.127, align 4
  store i32 %v2_eb98, i32* %r2.global-to-local, align 4
  %v3_eb9c = mul i32 %v2_eb94, 16
  %v2_eba0 = add i32 %v2_eb98, %v3_eb9c
  store i32 %v2_eba0, i32* %r3.global-to-local, align 4
  %v3_eba4 = add i32 %v2_eba0, 12
  %v4_eba4 = inttoptr i32 %v3_eba4 to i8*
  store i8 %v0_eba4.off0, i8* %v4_eba4, align 1
  %v0_eba8 = load i32, i32* @r6, align 4
  %v1_eba8 = load i32, i32* %sl.global-to-local, align 4
  %v2_eba8 = load i32, i32* %fp.global-to-local, align 4
  %v5_eba8 = mul i32 %v2_eba8, 16
  %v6_eba8 = add i32 %v5_eba8, %v1_eba8
  %v7_eba8 = inttoptr i32 %v6_eba8 to i32*
  store i32 %v0_eba8, i32* %v7_eba8, align 4
  %v2_ebb0 = load i32, i32* @global_var_1dbec.125, align 4
  store i32 %v2_ebb0, i32* @r7, align 4
  %v2_ebb4 = load i32, i32* @global_var_1dc18.127, align 4
  store i32 %v2_ebb4, i32* %sl.global-to-local, align 4
  %v1_ebb8 = inttoptr i32 %arg2 to i8*
  %v2_ebb8 = call i32 @function_122ec(i8* %v1_ebb8)
  %sext1 = mul i32 %v2_ebb8, 16777216
  %v1_ebbc = sdiv i32 %sext1, 16777216
  %v2_ebbc = add nsw i32 %v1_ebbc, 1
  store i32 %v2_ebbc, i32* @r4, align 4
  store i32 %v1_ebbc, i32* @r5, align 4
  %v1_ebc8 = call i32 @function_13678(i32 %v2_ebbc)
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_ebd0 = load i32, i32* @r4, align 4
  store i32 %v0_ebd0, i32* %r2.global-to-local, align 4
  store i32 %v1_ebc8, i32* %r6.global-to-local, align 4
  %v3_ebd8 = call i32 @function_12368(i32 %v1_ebc8, i32 %arg2, i32 %v0_ebd0)
  %v0_ebdc = load i32, i32* @r5, align 4
  %tmp22 = icmp slt i32 %v0_ebdc, 1
  %extract.t8 = trunc i32 %v0_ebdc to i8
  br i1 %tmp22, label %dec_label_pc_ec00, label %dec_label_pc_ebe4

dec_label_pc_ebe4:                                ; preds = %dec_label_pc_eb94
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ebe8

dec_label_pc_ebe8:                                ; preds = %dec_label_pc_ebe8, %dec_label_pc_ebe4
  %v2_ebf0 = phi i32 [ %v1_ebf4, %dec_label_pc_ebe8 ], [ 0, %dec_label_pc_ebe4 ]
  %v1_ebe8 = load i32, i32* %r6.global-to-local, align 4
  %v2_ebe8 = add i32 %v1_ebe8, %v2_ebf0
  %v3_ebe8 = inttoptr i32 %v2_ebe8 to i8*
  %v4_ebe8 = load i8, i8* %v3_ebe8, align 1
  %v6_ebe8 = zext i8 %v4_ebe8 to i32
  %v1_ebec = xor i32 %v6_ebe8, 103
  store i32 %v1_ebec, i32* %r3.global-to-local, align 4
  %v1_ebf0 = trunc i32 %v1_ebec to i8
  store i8 %v1_ebf0, i8* %v3_ebe8, align 1
  %v0_ebf4 = load i32, i32* %r2.global-to-local, align 4
  %v1_ebf4 = add i32 %v0_ebf4, 1
  store i32 %v1_ebf4, i32* %r2.global-to-local, align 4
  %v0_ebf8 = load i32, i32* @r5, align 4
  %v9_ebf8 = icmp eq i32 %v0_ebf8, %v1_ebf4
  br i1 %v9_ebf8, label %dec_label_pc_ec00.loopexit, label %dec_label_pc_ebe8

dec_label_pc_ec00.loopexit:                       ; preds = %dec_label_pc_ebe8
  %extract.t7 = trunc i32 %v1_ebf4 to i8
  br label %dec_label_pc_ec00

dec_label_pc_ec00:                                ; preds = %dec_label_pc_ec00.loopexit, %dec_label_pc_eb94
  %v0_ec10.off0 = phi i8 [ %extract.t7, %dec_label_pc_ec00.loopexit ], [ %extract.t8, %dec_label_pc_eb94 ]
  %v2_ec00 = load i32, i32* @global_var_1dbec.125, align 4
  %v2_ec04 = load i32, i32* @global_var_1dc18.127, align 4
  %v3_ec08 = mul i32 %v2_ec00, 16
  %v2_ec0c = or i32 %v3_ec08, 13
  %v3_ec10 = add i32 %v2_ec0c, %v2_ec04
  %v4_ec10 = inttoptr i32 %v3_ec10 to i8*
  store i8 %v0_ec10.off0, i8* %v4_ec10, align 1
  %v2_ec18 = load i32, i32* @global_var_1dbec.125, align 4
  store i32 %v2_ec18, i32* %lr.global-to-local, align 4
  %v4_ec1c = load i8, i8* @global_var_1dc1d.130, align 1
  %v5_ec1c = zext i8 %v4_ec1c to i32
  %v3_ec20 = load i8, i8* bitcast (i8** @global_var_1dc1c.129 to i8*), align 4
  %v4_ec20 = zext i8 %v3_ec20 to i32
  %v2_ec24 = load i32, i32* @global_var_1dc18.127, align 4
  %v4_ec28 = mul nuw nsw i32 %v5_ec1c, 256
  %v5_ec28 = or i32 %v4_ec20, %v4_ec28
  store i32 %v5_ec28, i32* %r2.global-to-local, align 4
  %v3_ec2c = mul i32 %v2_ec18, 16
  %v2_ec30 = add i32 %v2_ec24, %v3_ec2c
  store i32 %v2_ec30, i32* %r1.global-to-local, align 4
  %v3_ec38 = add i32 %v2_ec30, 9
  %v4_ec38 = inttoptr i32 %v3_ec38 to i8*
  store i8 %v4_ec1c, i8* %v4_ec38, align 1
  %v0_ec3c = load i32, i32* %r2.global-to-local, align 4
  %v1_ec3c = trunc i32 %v0_ec3c to i8
  %v2_ec3c = load i32, i32* %r1.global-to-local, align 4
  %v3_ec3c = add i32 %v2_ec3c, 8
  %v4_ec3c = inttoptr i32 %v3_ec3c to i8*
  store i8 %v1_ec3c, i8* %v4_ec3c, align 1
  %v4_ec40 = load i8, i8* @global_var_1dc1d.130, align 1
  %v5_ec40 = zext i8 %v4_ec40 to i32
  %v3_ec44 = load i8, i8* bitcast (i8** @global_var_1dc1c.129 to i8*), align 4
  %v4_ec44 = zext i8 %v3_ec44 to i32
  %v4_ec48 = mul nuw nsw i32 %v5_ec40, 256
  %v5_ec48 = or i32 %v4_ec44, %v4_ec48
  %v2_ec4c = load i32, i32* %stack_var_-44, align 4
  %v2_ec50 = add i32 %v5_ec48, %v2_ec4c
  store i32 %v2_ec50, i32* %r3.global-to-local, align 4
  %v3_ec549 = udiv i32 %v2_ec50, 256
  %v1_ec58 = trunc i32 %v3_ec549 to i8
  %v2_ec58 = load i32, i32* %r1.global-to-local, align 4
  %v3_ec58 = add i32 %v2_ec58, 11
  %v4_ec58 = inttoptr i32 %v3_ec58 to i8*
  store i8 %v1_ec58, i8* %v4_ec58, align 1
  %v0_ec5c = load i32, i32* %r3.global-to-local, align 4
  %v1_ec5c = trunc i32 %v0_ec5c to i8
  %v2_ec5c = load i32, i32* %r1.global-to-local, align 4
  %v3_ec5c = add i32 %v2_ec5c, 10
  %v4_ec5c = inttoptr i32 %v3_ec5c to i8*
  store i8 %v1_ec5c, i8* %v4_ec5c, align 1
  %v4_ec60 = load i8, i8* @global_var_1dc1d.130, align 1
  %v5_ec60 = zext i8 %v4_ec60 to i32
  %v3_ec64 = load i8, i8* bitcast (i8** @global_var_1dc1c.129 to i8*), align 4
  %v4_ec64 = zext i8 %v3_ec64 to i32
  %v4_ec68 = mul nuw nsw i32 %v5_ec60, 256
  %v5_ec68 = or i32 %v4_ec64, %v4_ec68
  %v2_ec6c = load i32, i32* %stack_var_-44, align 4
  %v2_ec70 = add i32 %v5_ec68, %v2_ec6c
  store i32 %v2_ec70, i32* %r2.global-to-local, align 4
  %v0_ec74 = load i32, i32* @r7, align 4
  %v3_ec74 = mul i32 %v0_ec74, 16
  %v1_ec78 = load i32, i32* %sl.global-to-local, align 4
  %v2_ec78 = add i32 %v1_ec78, %v3_ec74
  store i32 %v2_ec78, i32* %r3.global-to-local, align 4
  %v0_ec7c = load i32, i32* %lr.global-to-local, align 4
  %v1_ec7c = add i32 %v0_ec7c, 1
  store i32 %v1_ec7c, i32* @lr, align 4
  %v3_ec80 = sdiv i32 %v2_ec70, 256
  store i32 %v3_ec80, i32* %r1.global-to-local, align 4
  %v0_ec84 = load i32, i32* %r6.global-to-local, align 4
  %v2_ec84 = add i32 %v2_ec78, 4
  %v3_ec84 = inttoptr i32 %v2_ec84 to i32*
  store i32 %v0_ec84, i32* %v3_ec84, align 4
  %v0_ec88 = load i32, i32* @lr, align 4
  %v1_ec88 = load i32, i32* @r8, align 4
  %v2_ec88 = inttoptr i32 %v1_ec88 to i32*
  store i32 %v0_ec88, i32* %v2_ec88, align 4
  %v0_ec8c = load i32, i32* %r1.global-to-local, align 4
  %v1_ec8c = trunc i32 %v0_ec8c to i8
  store i8 %v1_ec8c, i8* @global_var_1dc1d.130, align 1
  %v0_ec90 = load i32, i32* %r2.global-to-local, align 4
  %v1_ec90 = trunc i32 %v0_ec90 to i8
  store i8 %v1_ec90, i8* bitcast (i8** @global_var_1dc1c.129 to i8*), align 4
  store i32 %v3_eb04, i32* @r4, align 4
  store i32 %v6_eb04, i32* @r5, align 4
  store i32 %v9_eb04, i32* @r6, align 4
  store i32 %v12_eb04, i32* @r7, align 4
  store i32 %v15_eb04, i32* @r8, align 4
  ret i32 ptrtoint (i8** @global_var_1dc1c.129 to i32)

; uselistorder directives
  uselistorder i32 %v1_ebf4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_ebc8, { 1, 0 }
  uselistorder i32 %v1_eb88, { 0, 2, 3, 1 }
  uselistorder i32 %v1_eb5c, { 1, 0 }
  uselistorder i32 %v3_eb20, { 1, 2, 0 }
  uselistorder i32 %v3_eb18, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 (i8*)* @function_122ec, { 0, 1, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23 }
  uselistorder i32 (i32, i32, i32, i32)* @function_13914, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
}

define i32 @function_eca8(i32 %arg1) local_unnamed_addr {
dec_label_pc_eca8:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp1302 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-38 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-41 = alloca i32, align 4
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-1862 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_eca8 = load i32, i32* @r4, align 4
  store i32 %v3_eca8, i32* %stack_var_-36, align 4
  %v6_eca8 = load i32, i32* @r5, align 4
  %v24_eca8 = load i32, i32* @fp, align 4
  %v0_ecb4 = call i32 @function_12c1c()
  store i32 %v0_ecb4, i32* %r0.global-to-local, align 4
  %v7_ecb8 = icmp eq i32 %v0_ecb4, -1
  %. = zext i1 %v7_ecb8 to i32
  %tmp1334 = icmp slt i32 %v0_ecb4, 1
  %storemerge1250 = select i1 %tmp1334, i32 %., i32 1
  store i32 %storemerge1250, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1dc8c.132 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ecd4 = icmp eq i32 %storemerge1250, 0
  store i1 %v2_ecd4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_ecb4, i32* @global_var_1dc8c.132, align 4
  br i1 %v2_ecd4, label %dec_label_pc_ed78, label %dec_label_pc_ece0

dec_label_pc_ece0:                                ; preds = %dec_label_pc_eca8
  store i32 %v3_eca8, i32* %r4.global-to-local, align 4
  store i32 %v6_eca8, i32* @r5, align 4
  store i32 %v24_eca8, i32* %fp.global-to-local, align 4
  ret i32 %v0_ecb4

dec_label_pc_ed78:                                ; preds = %dec_label_pc_eca8
  %v0_ed78 = call i32 @function_125a4()
  store i32 %v0_ed78, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc68.49 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_ed78, i32* @global_var_1dc68.49, align 4
  %v1_ed84 = call i32 @function_e824(i32 %v0_ed78)
  %v0_ed88 = load i32, i32* @r4, align 4
  store i32 %v0_ed88, i32* %r0.global-to-local, align 4
  %v1_ed8c = inttoptr i32 %v0_ed88 to i32*
  %v2_ed8c = call i32 @function_12ec0(i32* %v1_ed8c)
  store i32 ptrtoint (i32* @global_var_1dc20.123 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_ed8c, i32* @global_var_1dc20.123, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_eda0 = call i32 @function_137cc(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_1dc84.136 to i32), i32* %fp.global-to-local, align 4
  store i32 %v2_eda0, i32* @lr, align 4
  %v0_edac = load i32, i32* @r4, align 4
  store i32 %v0_edac, i32* %stack_var_-52, align 4
  store i32 %v2_eda0, i32* @global_var_1dc84.136, align 4
  store i32 %v0_edac, i32* %r3.global-to-local, align 4
  store i32 %v0_edac, i32* %r5.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 %v0_edac, i32* %ip.global-to-local, align 4
  %v1_edc4 = add i32 %v2_eda0, 4
  store i32 %v1_edc4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_edc8

dec_label_pc_edc8:                                ; preds = %dec_label_pc_edc8.dec_label_pc_edc8_crit_edge, %dec_label_pc_ed78
  %v0_ede0 = phi i32 [ %v0_ede0.pre, %dec_label_pc_edc8.dec_label_pc_edc8_crit_edge ], [ %v0_edac, %dec_label_pc_ed78 ]
  %v0_edd0 = phi i32 [ %v0_ede8, %dec_label_pc_edc8.dec_label_pc_edc8_crit_edge ], [ %v0_edac, %dec_label_pc_ed78 ]
  %v1_edd8 = phi i32 [ %v1_edd8.pre, %dec_label_pc_edc8.dec_label_pc_edc8_crit_edge ], [ %v2_eda0, %dec_label_pc_ed78 ]
  %v3_edc8 = mul i32 %v0_edd0, 256
  store i32 %v3_edc8, i32* %r2.global-to-local, align 4
  %v1_edd0 = add i32 %v0_edd0, 1
  store i32 %v1_edd0, i32* %ip.global-to-local, align 4
  %v2_edd4 = mul i32 %v0_edd0, 288
  %v2_edd8 = add i32 %v1_edd8, 12
  %v2_ede0 = add i32 %v2_edd8, %v2_edd4
  %v3_ede0 = inttoptr i32 %v2_ede0 to i32*
  store i32 %v0_ede0, i32* %v3_ede0, align 4
  %v0_ede4 = load i32, i32* %r0.global-to-local, align 4
  %v1_ede4 = load i32, i32* %r1.global-to-local, align 4
  %v2_ede4 = inttoptr i32 %v1_ede4 to i32*
  store i32 %v0_ede4, i32* %v2_ede4, align 4
  %v3_ede4 = load i32, i32* %r1.global-to-local, align 4
  %v4_ede4 = add i32 %v3_ede4, 288
  store i32 %v4_ede4, i32* %r1.global-to-local, align 4
  %v0_ede8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_ede8, i32* %r3.global-to-local, align 4
  %v7_edec = icmp sgt i32 %v1_edd0, 255
  br i1 %v7_edec, label %dec_label_pc_edf0, label %dec_label_pc_edc8.dec_label_pc_edc8_crit_edge

dec_label_pc_edc8.dec_label_pc_edc8_crit_edge:    ; preds = %dec_label_pc_edc8
  %v1_edd8.pre = load i32, i32* @lr, align 4
  %v0_ede0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_edc8

dec_label_pc_edf0:                                ; preds = %dec_label_pc_edc8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v0_ede8, i32* %stack_var_-52, align 4
  %v3_ee00 = call i32 @function_134e0(i32 2, i32 3, i32 6)
  store i32 %v3_ee00, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc88.138 to i32), i32* %ip.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 %v3_ee00, i32* @global_var_1dc88.138, align 4
  %v0_ee10 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_ee10, i32* @r2, align 4
  store i32 %v3_ee00, i32* @r4, align 4
  %v2_ee18 = call i32 @function_12b2c(i32 %v3_ee00, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_ee20 = or i32 %v2_ee18, 2048
  store i32 %v1_ee20, i32* @r2, align 4
  %v0_ee24 = load i32, i32* @r4, align 4
  store i32 %v0_ee24, i32* %r0.global-to-local, align 4
  %v2_ee28 = call i32 @function_12b2c(i32 %v0_ee24, i32 4)
  %v2_ee34 = load i32, i32* @global_var_1dc88.138, align 4
  store i32 %v2_ee34, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_ee3c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_ee3c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_ee44 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_ee44, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v6_ee54 = call i32 @function_134b0(i32 %v2_ee34, i32 %v0_ee3c, i32 3, i32* nonnull %stack_var_-52, i32 4)
  store i32 %v6_ee54, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee58 = icmp eq i32 %v6_ee54, 0
  store i1 %v2_ee58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee58, label %dec_label_pc_ee60, label %dec_label_pc_10cdc

dec_label_pc_ee60:                                ; preds = %dec_label_pc_edf0, %dec_label_pc_10cdc, %dec_label_pc_ee60
  %v0_ee60 = call i32 @function_e7cc()
  %v3_ee64 = mul i32 %v0_ee60, 65536
  store i32 %v3_ee64, i32* %r0.global-to-local, align 4
  %v3_ee68 = urem i32 %v0_ee60, 65536
  store i32 %v3_ee68, i32* %r2.global-to-local, align 4
  %v1_ee6c = mul i32 %v0_ee60, 256
  %v3_ee70 = and i32 %v1_ee6c, 65280
  %tmp1337 = udiv i32 %v0_ee60, 256
  %v4_ee74 = urem i32 %tmp1337, 256
  %v5_ee74 = or i32 %v4_ee74, %v3_ee70
  store i32 %v5_ee74, i32* %r3.global-to-local, align 4
  %v2_ee78 = icmp ugt i32 %v5_ee74, 1023
  store i1 %v2_ee78, i1* %cpsr_c.global-to-local, align 1
  %v7_ee78 = icmp eq i32 %v5_ee74, 1024
  store i1 %v7_ee78, i1* %cpsr_z.global-to-local, align 1
  %v3_ee80 = icmp ult i32 %v5_ee74, 1022
  br i1 %v3_ee80, label %dec_label_pc_ee60, label %dec_label_pc_ee84

dec_label_pc_ee84:                                ; preds = %dec_label_pc_ee60
  store i32 ptrtoint (i8** @global_var_1dbf0.140 to i32), i32* %fp.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_1dbf0.140 to i8*), align 4
  store i8 40, i8* bitcast (i32* @global_var_1dbf3.141 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1dbf2.142 to i8*), align 4
  %v0_eebc = call i32 @function_e7cc()
  %v1_eebc = trunc i32 %v0_eebc to i8
  store i32 %v0_eebc, i32* %r0.global-to-local, align 4
  %v3_eec4 = load i8, i8* @global_var_1dc10.145, align 1
  %sext694 = mul i32 %v0_ee60, 16777216
  %v4_eec8 = sdiv i32 %sext694, 16777216
  %v4_eecc1171 = udiv i32 %v0_eebc, 256
  %v1_eed0 = trunc i32 %v4_eecc1171 to i8
  store i8 %v1_eed0, i8* bitcast (i32* @global_var_1dbf5.146 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1dc04.144 to i32), i32* %r1.global-to-local, align 4
  %tmp = urem i8 %v3_eec4, 16
  %v1_eedc = zext i8 %tmp to i32
  %v1_eee0 = and i32 %v4_eec8, 128
  %v2_eee0 = icmp ne i32 %v1_eee0, 0
  store i1 %v2_eee0, i1* %cpsr_c.global-to-local, align 1
  %v3_eee0 = ashr i32 %sext694, 31
  store i32 %v3_eee0, i32* %ip.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1dbf8.147 to i8*), align 4
  %v1_eee8 = or i32 %v1_eedc, 80
  store i32 %v1_eee8, i32* %r2.global-to-local, align 4
  store i32 23, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r5, align 4
  %v1_eef4 = trunc i32 %v3_eee0 to i8
  store i8 %v1_eef4, i8* bitcast (i32* @global_var_1dc05.148 to i8*), align 4
  %v1_eef8 = trunc i32 %v1_eee8 to i8
  store i8 %v1_eef8, i8* @global_var_1dc10.145, align 1
  %v0_eefc = load i32, i32* %r4.global-to-local, align 4
  %v1_eefc = trunc i32 %v0_eefc to i8
  store i8 %v1_eefc, i8* bitcast (i32* @global_var_1dc06.149 to i8*), align 4
  %v1_ef00 = trunc i32 %v4_eec8 to i8
  store i8 %v1_ef00, i8* bitcast (i32* @global_var_1dc04.144 to i8*), align 4
  store i8 23, i8* bitcast (i32* @global_var_1dc07.150 to i8*), align 4
  store i8 %v1_eebc, i8* bitcast (i32* @global_var_1dbf4.151 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_1dbf9.152 to i8*), align 4
  %v0_ef10 = call i32 @function_e7cc()
  %v3_ef18 = load i8, i8* @global_var_1dc11.153, align 1
  %v4_ef18 = zext i8 %v3_ef18 to i32
  %sext695 = mul i32 %v0_ef10, 16777216
  %v1_ef20 = sdiv i32 %sext695, 16777216
  %v2_ef20 = and i32 %v1_ef20, 128
  %v3_ef20 = icmp ne i32 %v2_ef20, 0
  store i1 %v3_ef20, i1* %cpsr_c.global-to-local, align 1
  %v4_ef20 = ashr i32 %sext695, 31
  store i32 %v4_ef20, i32* %ip.global-to-local, align 4
  %v1_ef24 = or i32 %v4_ef18, 2
  store i32 %v1_ef24, i32* %r3.global-to-local, align 4
  store i32 %v1_ef20, i32* @r4, align 4
  %v1_ef2c = trunc i32 %v4_ef20 to i8
  store i8 %v1_ef2c, i8* bitcast (i32* @global_var_1dc13.154 to i8*), align 4
  %v1_ef30 = trunc i32 %v1_ef24 to i8
  store i8 %v1_ef30, i8* @global_var_1dc11.153, align 1
  store i32 ptrtoint (i32* @global_var_15500.156 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15514.158 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v1_ef40 = trunc i32 %v1_ef20 to i8
  store i8 %v1_ef40, i8* bitcast (i32* @global_var_1dc12.159 to i8*), align 4
  %v3_ef44 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_15500.156 to i32), i32 ptrtoint (i32* @global_var_15514.158 to i32), i32 3)
  %v0_ef48 = load i32, i32* @r5, align 4
  store i32 %v0_ef48, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15480.161 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15514.158 to i32), i32* %r1.global-to-local, align 4
  %v3_ef54 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_15480.161 to i32), i32 ptrtoint (i32* @global_var_15514.158 to i32), i32 %v0_ef48)
  store i32 ptrtoint (i32* @global_var_15488.163 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15490.165 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v3_ef64 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_15488.163 to i32), i32 ptrtoint (i32* @global_var_15490.165 to i32), i32 15)
  store i32 ptrtoint (i32* @global_var_15488.163 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1549c.167 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v3_ef74 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_15488.163 to i32), i32 ptrtoint (i32* @global_var_1549c.167 to i32), i32 15)
  store i32 ptrtoint (i32* @global_var_154a8.169 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_154a8.169 to i32), i32* %r1.global-to-local, align 4
  %v3_ef84 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154a8.169 to i32), i32 ptrtoint (i32* @global_var_154a8.169 to i32), i32 14)
  store i32 ptrtoint (i32* @global_var_154b0.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_154b8.173 to i32), i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_ef94 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154b0.171 to i32), i32 ptrtoint (i32* @global_var_154b8.173 to i32), i32 17)
  store i32 ptrtoint (i32* @global_var_15488.163 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15488.163 to i32), i32* %r1.global-to-local, align 4
  %v3_efa4 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_15488.163 to i32), i32 ptrtoint (i32* @global_var_15488.163 to i32), i32 14)
  store i32 ptrtoint (i32* @global_var_154c8.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15514.158 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v3_efb4 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154c8.175 to i32), i32 ptrtoint (i32* @global_var_15514.158 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_154cc.177 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_154d4.179 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_efc4 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154cc.177 to i32), i32 ptrtoint (i32* @global_var_154d4.179 to i32), i32 12)
  store i32 ptrtoint (i32* @global_var_154b0.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_154d4.179 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v3_efd4 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154b0.171 to i32), i32 ptrtoint (i32* @global_var_154d4.179 to i32), i32 11)
  store i32 ptrtoint (i32* @global_var_154dc.181 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_154ec.183 to i32), i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_efe4 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154dc.181 to i32), i32 ptrtoint ([9 x i8]* @global_var_154ec.183 to i32), i32 20)
  store i32 ptrtoint (i32* @global_var_154b0.171 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_154b0.171 to i32), i32* %r1.global-to-local, align 4
  %v3_eff4 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154b0.171 to i32), i32 ptrtoint (i32* @global_var_154b0.171 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_154cc.177 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_154cc.177 to i32), i32* %r1.global-to-local, align 4
  %v3_f004 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154cc.177 to i32), i32 ptrtoint (i32* @global_var_154cc.177 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_154b0.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_154f8.185 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f014 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154b0.171 to i32), i32 ptrtoint (i32* @global_var_154f8.185 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_154b0.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15514.158 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_f024 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154b0.171 to i32), i32 ptrtoint (i32* @global_var_15514.158 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_154cc.177 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15514.158 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_f034 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154cc.177 to i32), i32 ptrtoint (i32* @global_var_15514.158 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_15488.163 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15514.158 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f044 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_15488.163 to i32), i32 ptrtoint (i32* @global_var_15514.158 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_15574.187 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_15504.189 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_f054 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_15574.187 to i32), i32 ptrtoint ([6 x i8]* @global_var_15504.189 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_154cc.177 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1550c.191 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_f064 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154cc.177 to i32), i32 ptrtoint (i32* @global_var_1550c.191 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_15518.193 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15518.193 to i32), i32* %r1.global-to-local, align 4
  %v3_f074 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_15518.193 to i32), i32 ptrtoint (i32* @global_var_15518.193 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_15520.195 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15520.195 to i32), i32* %r1.global-to-local, align 4
  %v3_f084 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_15520.195 to i32), i32 ptrtoint (i32* @global_var_15520.195 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_154cc.177 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15528.197 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_f094 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154cc.177 to i32), i32 ptrtoint (i32* @global_var_15528.197 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_154cc.177 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_15534.199 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v4_f0a4 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154cc.177 to i32), i32 ptrtoint ([5 x i8]* @global_var_15534.199 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_1553c.201 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1553c.201 to i32), i32* %r1.global-to-local, align 4
  %v3_f0b4 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_1553c.201 to i32), i32 ptrtoint (i32* @global_var_1553c.201 to i32), i32 14)
  store i32 ptrtoint (i32* @global_var_154b0.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15544.203 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_f0c4 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154b0.171 to i32), i32 ptrtoint (i32* @global_var_15544.203 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_154b0.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1554c.205 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v3_f0d4 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154b0.171 to i32), i32 ptrtoint (i32* @global_var_1554c.205 to i32), i32 11)
  store i32 ptrtoint (i32* @global_var_15554.207 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_15564.209 to i32), i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_f0e4 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_15554.207 to i32), i32 ptrtoint ([9 x i8]* @global_var_15564.209 to i32), i32 20)
  store i32 ptrtoint (i32* @global_var_154dc.181 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1557c.211 to i32), i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v3_f0f4 = call i32 @function_eb04(i32 ptrtoint (i32* @global_var_154dc.181 to i32), i32 ptrtoint (i32* @global_var_1557c.211 to i32), i32 25)
  store i32 %v3_f0f4, i32* %r0.global-to-local, align 4
  %v2_f0fc = ptrtoint i32* %stack_var_-1862 to i32
  store i32 %v2_f0fc, i32* %ip.global-to-local, align 4
  %v1_10b5c = add i32 %v2_f0fc, 20
  %v1_10bb4 = add i32 %v2_f0fc, 16
  %v2_10bb4 = inttoptr i32 %v1_10bb4 to i32*
  %v2_10e00 = ptrtoint i32* %stack_var_-36 to i32
  %v2_10e84 = ptrtoint i32* %stack_var_-64 to i32
  %v2_10e88 = ptrtoint i32* %stack_var_-220 to i32
  %v2_10e8c = ptrtoint i32* %stack_var_-348 to i32
  %v2_11840 = ptrtoint i32* %stack_var_-41 to i32
  %v2_11848 = ptrtoint i32* %stack_var_-76 to i32
  %v2_11850 = ptrtoint i32* %stack_var_-73 to i32
  %v2_11020 = ptrtoint i8* %stack_var_-56 to i32
  %v2_11028 = bitcast i8* %stack_var_-56 to i32*
  %v2_114f0 = ptrtoint i32* %stack_var_-48 to i32
  %v2_11b00 = ptrtoint i32* %stack_var_-92 to i32
  %v3_11b08 = bitcast i32* %stack_var_-92 to %sockaddr*
  %v2_11b54 = ptrtoint i32* %stack_var_-38 to i32
  %v1_10bc4 = add i32 %v2_f0fc, 9
  %v2_10bc4 = inttoptr i32 %v1_10bc4 to i8*
  %v1_10c60 = add i32 %v2_f0fc, 12
  %v2_10c60 = inttoptr i32 %v1_10c60 to i32*
  br label %dec_label_pc_f104

dec_label_pc_f104:                                ; preds = %dec_label_pc_10ee4, %dec_label_pc_ee84
  %stack_var_-2036.0 = phi i32 [ %tmp1302, %dec_label_pc_ee84 ], [ %stack_var_-2036.1, %dec_label_pc_10ee4 ]
  store i32 %stack_var_-2036.0, i32* %r0.global-to-local, align 4
  %v2_f10c = load i32, i32* @global_var_1dc20.123, align 4
  %v3_f110 = icmp uge i32 %stack_var_-2036.0, %v2_f10c
  store i1 %v3_f110, i1* %cpsr_c.global-to-local, align 1
  %v9_f110 = icmp eq i32 %stack_var_-2036.0, %v2_f10c
  store i1 %v9_f110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f110, label %dec_label_pc_10b50, label %dec_label_pc_f11c

dec_label_pc_f11c:                                ; preds = %dec_label_pc_f104
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  br label %dec_label_pc_f124

dec_label_pc_f124:                                ; preds = %dec_label_pc_10a4c, %dec_label_pc_f11c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v0_f138 = call i32 @function_e7cc()
  %v1_f138 = trunc i32 %v0_f138 to i8
  store i32 %v0_f138, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc68.49 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1dbf0.140 to i32), i32* %r4.global-to-local, align 4
  %v2_f144 = load i32, i32* @global_var_1dc68.49, align 4
  store i32 %v2_f144, i32* %r2.global-to-local, align 4
  %v2_f148 = and i32 %v0_f138, 128
  %v3_f148 = icmp ne i32 %v2_f148, 0
  store i1 %v3_f148, i1* %cpsr_c.global-to-local, align 1
  %v4_f148 = sdiv i32 %v0_f138, 256
  store i32 %v4_f148, i32* %r3.global-to-local, align 4
  %v1_f14c = trunc i32 %v4_f148 to i8
  store i8 %v1_f14c, i8* bitcast (i32* @global_var_1dbf5.146 to i8*), align 4
  store i32 %v2_f144, i32* @global_var_1dbfc.212, align 4
  store i8 %v1_f138, i8* bitcast (i32* @global_var_1dbf4.151 to i8*), align 4
  br label %dec_label_pc_f158

dec_label_pc_f158:                                ; preds = %.thread649.thread, %dec_label_pc_f1ec, %dec_label_pc_f1e0, %dec_label_pc_f1d4, %dec_label_pc_f1c8, %dec_label_pc_f1bc, %dec_label_pc_f1b0, %dec_label_pc_f1a4, %dec_label_pc_f198, %dec_label_pc_f18c, %dec_label_pc_f180, %bb1889, %dec_label_pc_10a20, %dec_label_pc_109ec, %dec_label_pc_109a8, %bb1861, %dec_label_pc_108a4, %.thread597, %dec_label_pc_10830, %dec_label_pc_107f4, %bb1829, %bb1822, %bb1817, %bb1812, %bb1806, %bb1801, %bb1795, %bb1790, %bb1785, %bb1780, %bb1775, %bb1770, %bb1765, %bb1760, %bb1755, %.thread469, %dec_label_pc_10420, %.thread463, %dec_label_pc_103dc, %.thread457, %dec_label_pc_103b0, %.thread453, %dec_label_pc_10388, %dec_label_pc_10378, %.thread448, %.thread444, %.thread440, %.thread436, %bb1743, %bb1736, %bb1731, %bb1723, %bb1717, %bb1710, %bb1705, %bb1700, %bb1695, %bb1690, %bb1685, %.thread363, %bb1677, %bb1673, %bb1670, %bb1664, %bb1656, %bb1653, %bb1649, %bb1641, %bb1634, %bb1629, %bb1626, %bb1622, %bb1618, %bb1610, %bb1603, %bb1598, %bb1593, %bb1591, %bb1587, %bb1580, %dec_label_pc_fcf8, %dec_label_pc_fce8, %.thread243, %dec_label_pc_fca8, %.thread237, %.thread233, %dec_label_pc_fc50, %dec_label_pc_fc34, %.thread226, %.thread222, %.thread218, %dec_label_pc_f924, %dec_label_pc_f6f4, %dec_label_pc_f634, %.thread114, %dec_label_pc_f550, %dec_label_pc_f52c, %.thread91, %dec_label_pc_f4ac, %dec_label_pc_f488, %.thread75, %.thread71, %dec_label_pc_f40c, %dec_label_pc_f3c8, %.thread60, %dec_label_pc_f37c, %dec_label_pc_f364, %dec_label_pc_f330, %.thread48, %.thread44, %.thread40, %dec_label_pc_f2e0, %.thread35, %.thread31, %dec_label_pc_f258, %dec_label_pc_f244, %dec_label_pc_f230, %dec_label_pc_10a44, %dec_label_pc_10a18, %bb1883, %bb1882, %dec_label_pc_109cc, %dec_label_pc_10984, %dec_label_pc_10960, %dec_label_pc_10940, %dec_label_pc_1091c, %bb1856, %dec_label_pc_10874, %dec_label_pc_10858, %dec_label_pc_10814, %dec_label_pc_107d8, %dec_label_pc_107b8, %dec_label_pc_10794, %bb1823, %bb1796, %bb1771, %bb1751, %bb1750, %bb1745, %bb1744, %bb1711, %bb1680, %bb1604, %bb1566, %dec_label_pc_fbcc, %dec_label_pc_fba8, %dec_label_pc_fb88, %dec_label_pc_fb68, %dec_label_pc_fb38, %dec_label_pc_fb18, %dec_label_pc_faf8, %dec_label_pc_fae0, %dec_label_pc_fab8, %dec_label_pc_faa0, %dec_label_pc_fa80, %dec_label_pc_fa5c, %dec_label_pc_fa34, %dec_label_pc_fa18, %dec_label_pc_f9f8, %dec_label_pc_f9d8, %dec_label_pc_f9b8, %dec_label_pc_f998, %dec_label_pc_f984, %dec_label_pc_f960, %dec_label_pc_f940, %dec_label_pc_f908, %dec_label_pc_f8ec, %dec_label_pc_f8d0, %dec_label_pc_f8b0, %dec_label_pc_f89c, %dec_label_pc_f880, %dec_label_pc_f85c, %dec_label_pc_f830, %dec_label_pc_f804, %dec_label_pc_f7d8, %dec_label_pc_f7a8, %dec_label_pc_f784, %dec_label_pc_f75c, %dec_label_pc_f740, %dec_label_pc_f718, %dec_label_pc_f6d0, %dec_label_pc_f6a4, %dec_label_pc_f684, %dec_label_pc_f62c, %dec_label_pc_f5fc, %bb1428, %bb1425, %bb1422, %bb1413, %bb1410, %bb1407, %bb1398, %bb1395, %bb1394, %bb1391, %bb1384, %bb1377, %bb1370, %bb1367, %bb1364, %bb1355, %bb1352, %dec_label_pc_f1f8, %bb1349, %bb1348, %bb1347, %bb1346, %bb1345, %bb1344, %bb1343, %bb1342, %bb1341, %bb1340, %bb1339, %dec_label_pc_f124
  %v0_f158 = call i32 @function_e7cc()
  store i32 %v0_f158, i32* %r0.global-to-local, align 4
  %v1_f15c = urem i32 %v0_f158, 256
  store i32 %v1_f15c, i32* %r1.global-to-local, align 4
  %v3_f160 = udiv i32 %v0_f158, 256
  store i32 %v3_f160, i32* %r3.global-to-local, align 4
  %v3_f164 = udiv i32 %v0_f158, 65536
  store i32 %v3_f164, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f168 = icmp eq i32 %v1_f15c, 0
  store i1 %v2_f168, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f168, label %bb1339, label %bb1338

bb1338:                                           ; preds = %dec_label_pc_f158
  %v3_f16c = icmp ugt i32 %v1_f15c, 126
  store i1 %v3_f16c, i1* %cpsr_c.global-to-local, align 1
  %v8_f16c = icmp eq i32 %v1_f15c, 127
  store i1 %v8_f16c, i1* %cpsr_z.global-to-local, align 1
  br label %bb1339

bb1339:                                           ; preds = %dec_label_pc_f158, %bb1338
  %v0_f17c = phi i1 [ true, %dec_label_pc_f158 ], [ %v8_f16c, %bb1338 ]
  %v1_f170 = urem i32 %v3_f160, 256
  store i32 %v1_f170, i32* %ip.global-to-local, align 4
  %v1_f174 = urem i32 %v3_f164, 256
  store i32 %v1_f174, i32* %r2.global-to-local, align 4
  %v1_f178 = and i32 %v0_f158, 8388608
  %v2_f178 = icmp ne i32 %v1_f178, 0
  store i1 %v2_f178, i1* %cpsr_c.global-to-local, align 1
  %v3_f178 = udiv i32 %v0_f158, 16777216
  store i32 %v3_f178, i32* %r0.global-to-local, align 4
  br i1 %v0_f17c, label %dec_label_pc_f158, label %dec_label_pc_f180

dec_label_pc_f180:                                ; preds = %bb1339
  %v2_f180 = icmp ugt i32 %v1_f15c, 14
  store i1 %v2_f180, i1* %cpsr_c.global-to-local, align 1
  %v7_f180 = icmp eq i32 %v1_f15c, 15
  store i1 %v7_f180, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f180, label %dec_label_pc_f158, label %bb1340

bb1340:                                           ; preds = %dec_label_pc_f180
  %v3_f184 = icmp ugt i32 %v1_f15c, 2
  store i1 %v3_f184, i1* %cpsr_c.global-to-local, align 1
  %v8_f184 = icmp eq i32 %v1_f15c, 3
  store i1 %v8_f184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f184, label %dec_label_pc_f158, label %dec_label_pc_f18c

dec_label_pc_f18c:                                ; preds = %bb1340
  %v2_f18c = icmp ugt i32 %v1_f15c, 9
  store i1 %v2_f18c, i1* %cpsr_c.global-to-local, align 1
  %v7_f18c = icmp eq i32 %v1_f15c, 10
  store i1 %v7_f18c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f18c, label %dec_label_pc_f158, label %bb1341

bb1341:                                           ; preds = %dec_label_pc_f18c
  %v3_f190 = icmp ugt i32 %v1_f15c, 55
  store i1 %v3_f190, i1* %cpsr_c.global-to-local, align 1
  %v8_f190 = icmp eq i32 %v1_f15c, 56
  store i1 %v8_f190, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f190, label %dec_label_pc_f158, label %dec_label_pc_f198

dec_label_pc_f198:                                ; preds = %bb1341
  %v2_f198 = icmp ugt i32 %v1_f15c, 48
  store i1 %v2_f198, i1* %cpsr_c.global-to-local, align 1
  %v7_f198 = icmp eq i32 %v1_f15c, 49
  store i1 %v7_f198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f198, label %dec_label_pc_f158, label %bb1342

bb1342:                                           ; preds = %dec_label_pc_f198
  %v3_f19c = icmp ugt i32 %v1_f15c, 24
  store i1 %v3_f19c, i1* %cpsr_c.global-to-local, align 1
  %v8_f19c = icmp eq i32 %v1_f15c, 25
  store i1 %v8_f19c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f19c, label %dec_label_pc_f158, label %dec_label_pc_f1a4

dec_label_pc_f1a4:                                ; preds = %bb1342
  %v2_f1a4 = icmp ugt i32 %v1_f15c, 136
  store i1 %v2_f1a4, i1* %cpsr_c.global-to-local, align 1
  %v7_f1a4 = icmp eq i32 %v1_f15c, 137
  store i1 %v7_f1a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1a4, label %dec_label_pc_f158, label %bb1343

bb1343:                                           ; preds = %dec_label_pc_f1a4
  %v3_f1a8 = icmp ugt i32 %v1_f15c, 49
  store i1 %v3_f1a8, i1* %cpsr_c.global-to-local, align 1
  %v8_f1a8 = icmp eq i32 %v1_f15c, 50
  store i1 %v8_f1a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1a8, label %dec_label_pc_f158, label %dec_label_pc_f1b0

dec_label_pc_f1b0:                                ; preds = %bb1343
  %v2_f1b0 = icmp ugt i32 %v1_f15c, 6
  store i1 %v2_f1b0, i1* %cpsr_c.global-to-local, align 1
  %v7_f1b0 = icmp eq i32 %v1_f15c, 7
  store i1 %v7_f1b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1b0, label %dec_label_pc_f158, label %bb1344

bb1344:                                           ; preds = %dec_label_pc_f1b0
  %v3_f1b4 = icmp ugt i32 %v1_f15c, 5
  store i1 %v3_f1b4, i1* %cpsr_c.global-to-local, align 1
  %v8_f1b4 = icmp eq i32 %v1_f15c, 6
  store i1 %v8_f1b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1b4, label %dec_label_pc_f158, label %dec_label_pc_f1bc

dec_label_pc_f1bc:                                ; preds = %bb1344
  %v2_f1bc = icmp ugt i32 %v1_f15c, 20
  store i1 %v2_f1bc, i1* %cpsr_c.global-to-local, align 1
  %v7_f1bc = icmp eq i32 %v1_f15c, 21
  store i1 %v7_f1bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1bc, label %dec_label_pc_f158, label %bb1345

bb1345:                                           ; preds = %dec_label_pc_f1bc
  %v3_f1c0 = icmp ugt i32 %v1_f15c, 10
  store i1 %v3_f1c0, i1* %cpsr_c.global-to-local, align 1
  %v8_f1c0 = icmp eq i32 %v1_f15c, 11
  store i1 %v8_f1c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1c0, label %dec_label_pc_f158, label %dec_label_pc_f1c8

dec_label_pc_f1c8:                                ; preds = %bb1345
  %v2_f1c8 = icmp ugt i32 %v1_f15c, 25
  store i1 %v2_f1c8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1c8 = icmp eq i32 %v1_f15c, 26
  store i1 %v7_f1c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1c8, label %dec_label_pc_f158, label %bb1346

bb1346:                                           ; preds = %dec_label_pc_f1c8
  %v3_f1cc = icmp ugt i32 %v1_f15c, 21
  store i1 %v3_f1cc, i1* %cpsr_c.global-to-local, align 1
  %v8_f1cc = icmp eq i32 %v1_f15c, 22
  store i1 %v8_f1cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1cc, label %dec_label_pc_f158, label %dec_label_pc_f1d4

dec_label_pc_f1d4:                                ; preds = %bb1346
  %v2_f1d4 = icmp ugt i32 %v1_f15c, 28
  store i1 %v2_f1d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f1d4 = icmp eq i32 %v1_f15c, 29
  store i1 %v7_f1d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1d4, label %dec_label_pc_f158, label %bb1347

bb1347:                                           ; preds = %dec_label_pc_f1d4
  %v3_f1d8 = icmp ugt i32 %v1_f15c, 27
  store i1 %v3_f1d8, i1* %cpsr_c.global-to-local, align 1
  %v8_f1d8 = icmp eq i32 %v1_f15c, 28
  store i1 %v8_f1d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1d8, label %dec_label_pc_f158, label %dec_label_pc_f1e0

dec_label_pc_f1e0:                                ; preds = %bb1347
  %v2_f1e0 = icmp ugt i32 %v1_f15c, 32
  store i1 %v2_f1e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f1e0 = icmp eq i32 %v1_f15c, 33
  store i1 %v7_f1e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1e0, label %dec_label_pc_f158, label %bb1348

bb1348:                                           ; preds = %dec_label_pc_f1e0
  %v3_f1e4 = icmp ugt i32 %v1_f15c, 29
  store i1 %v3_f1e4, i1* %cpsr_c.global-to-local, align 1
  %v8_f1e4 = icmp eq i32 %v1_f15c, 30
  store i1 %v8_f1e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1e4, label %dec_label_pc_f158, label %dec_label_pc_f1ec

dec_label_pc_f1ec:                                ; preds = %bb1348
  %v2_f1ec = icmp ugt i32 %v1_f15c, 213
  store i1 %v2_f1ec, i1* %cpsr_c.global-to-local, align 1
  %v7_f1ec = icmp eq i32 %v1_f15c, 214
  store i1 %v7_f1ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1ec, label %dec_label_pc_f158, label %bb1349

bb1349:                                           ; preds = %dec_label_pc_f1ec
  %v3_f1f0 = icmp ugt i32 %v1_f15c, 54
  store i1 %v3_f1f0, i1* %cpsr_c.global-to-local, align 1
  %v8_f1f0 = icmp eq i32 %v1_f15c, 55
  store i1 %v8_f1f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1f0, label %dec_label_pc_f158, label %dec_label_pc_f1f8

dec_label_pc_f1f8:                                ; preds = %bb1349
  %v2_f1f8 = icmp ugt i32 %v1_f15c, 214
  store i1 %v2_f1f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1f8 = icmp eq i32 %v1_f15c, 215
  store i1 %v7_f1f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1f8, label %dec_label_pc_f158, label %dec_label_pc_f200

dec_label_pc_f200:                                ; preds = %dec_label_pc_f1f8
  %v7_f200 = icmp eq i32 %v1_f15c, 192
  %.1945 = zext i1 %v7_f200 to i32
  store i32 %.1945, i32* %r5.global-to-local, align 4
  %v2_f20c = icmp ugt i32 %v1_f170, 167
  store i1 %v2_f20c, i1* %cpsr_c.global-to-local, align 1
  %v7_f20c = icmp eq i32 %v1_f170, 168
  store i1 %v7_f20c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f20c, label %bb1352, label %dec_label_pc_f218

bb1352:                                           ; preds = %dec_label_pc_f200
  %v2_f200 = icmp ugt i32 %v1_f15c, 191
  store i1 %v2_f200, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f200, label %dec_label_pc_f158, label %dec_label_pc_f218

dec_label_pc_f218:                                ; preds = %dec_label_pc_f200, %bb1352
  %v7_f218 = icmp eq i32 %v1_f15c, 146
  %.1946 = zext i1 %v7_f218 to i32
  %v2_f224 = icmp ugt i32 %v1_f170, 16
  store i1 %v2_f224, i1* %cpsr_c.global-to-local, align 1
  %v7_f224 = icmp eq i32 %v1_f170, 17
  store i1 %v7_f224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f224, label %bb1355, label %dec_label_pc_f230

bb1355:                                           ; preds = %dec_label_pc_f218
  %v2_f218 = icmp ugt i32 %v1_f15c, 145
  store i1 %v2_f218, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f218, label %dec_label_pc_f158, label %dec_label_pc_f230

dec_label_pc_f230:                                ; preds = %dec_label_pc_f218, %bb1355
  %v2_f230 = icmp ugt i32 %v1_f170, 79
  store i1 %v2_f230, i1* %cpsr_c.global-to-local, align 1
  %v7_f230 = icmp eq i32 %v1_f170, 80
  %.1947 = zext i1 %v7_f230 to i32
  %v2_f23c = and i32 %.1947, %.1946
  %v4_f23c = icmp eq i32 %v2_f23c, 0
  store i1 %v4_f23c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f23c, label %dec_label_pc_f244, label %dec_label_pc_f158

dec_label_pc_f244:                                ; preds = %dec_label_pc_f230
  %v2_f244 = icmp ugt i32 %v1_f170, 97
  store i1 %v2_f244, i1* %cpsr_c.global-to-local, align 1
  %v7_f244 = icmp eq i32 %v1_f170, 98
  %.1948 = zext i1 %v7_f244 to i32
  store i32 %.1948, i32* %r8.global-to-local, align 4
  %v2_f250 = and i32 %.1948, %.1946
  %v4_f250 = icmp eq i32 %v2_f250, 0
  store i1 %v4_f250, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f250, label %dec_label_pc_f258, label %dec_label_pc_f158

dec_label_pc_f258:                                ; preds = %dec_label_pc_f244
  %v2_f258 = icmp ugt i32 %v1_f170, 153
  store i1 %v2_f258, i1* %cpsr_c.global-to-local, align 1
  %v7_f258 = icmp eq i32 %v1_f170, 154
  %.1949 = zext i1 %v7_f258 to i32
  store i32 %.1949, i32* %sl.global-to-local, align 4
  %v2_f264 = and i32 %.1949, %.1946
  %v4_f264 = icmp eq i32 %v2_f264, 0
  store i1 %v4_f264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f264, label %dec_label_pc_f26c, label %dec_label_pc_f158

dec_label_pc_f26c:                                ; preds = %dec_label_pc_f258
  %v7_f26c = icmp eq i32 %v1_f15c, 147
  %.1950 = zext i1 %v7_f26c to i32
  store i32 %.1950, i32* %sb.global-to-local, align 4
  %v2_f278 = icmp ugt i32 %v1_f170, 158
  store i1 %v2_f278, i1* %cpsr_c.global-to-local, align 1
  %v7_f278 = icmp eq i32 %v1_f170, 159
  store i1 %v7_f278, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f278, label %bb1364, label %dec_label_pc_f284

bb1364:                                           ; preds = %dec_label_pc_f26c
  %v2_f26c = icmp ugt i32 %v1_f15c, 146
  store i1 %v2_f26c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f26c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f26c, label %dec_label_pc_f158, label %dec_label_pc_f284

dec_label_pc_f284:                                ; preds = %dec_label_pc_f26c, %bb1364
  %v2_f284 = icmp ugt i32 %v1_f170, 113
  %v7_f284 = icmp eq i32 %v1_f170, 114
  %.1951 = zext i1 %v7_f284 to i32
  store i32 %.1951, i32* %fp.global-to-local, align 4
  %v2_f290 = icmp ugt i32 %v1_f15c, 147
  store i1 %v2_f290, i1* %cpsr_c.global-to-local, align 1
  %v7_f290 = icmp eq i32 %v1_f15c, 148
  store i1 %v7_f290, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f290, label %bb1367, label %dec_label_pc_f2a0

bb1367:                                           ; preds = %dec_label_pc_f284
  store i1 %v2_f284, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f284, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f284, label %dec_label_pc_f158, label %dec_label_pc_f2a0

dec_label_pc_f2a0:                                ; preds = %dec_label_pc_f284, %bb1367
  %v7_f2a0 = icmp eq i32 %v1_f15c, 150
  %.1952 = zext i1 %v7_f2a0 to i32
  store i32 %.1952, i32* %r4.global-to-local, align 4
  %v2_f2ac = icmp ugt i32 %v1_f170, 124
  store i1 %v2_f2ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f2ac = icmp eq i32 %v1_f170, 125
  store i1 %v7_f2ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2ac, label %bb1370, label %dec_label_pc_f2b8

bb1370:                                           ; preds = %dec_label_pc_f2a0
  %v2_f2a0 = icmp ugt i32 %v1_f15c, 149
  store i1 %v2_f2a0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f2a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2a0, label %dec_label_pc_f158, label %dec_label_pc_f2b8

dec_label_pc_f2b8:                                ; preds = %dec_label_pc_f2a0, %bb1370
  %v2_f2b8 = icmp ugt i32 %v1_f170, 132
  store i1 %v2_f2b8, i1* %cpsr_c.global-to-local, align 1
  %v7_f2b8 = icmp eq i32 %v1_f170, 133
  store i1 %v7_f2b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2b8, label %.thread31, label %.thread32

.thread32:                                        ; preds = %dec_label_pc_f2b8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f2cc

.thread31:                                        ; preds = %dec_label_pc_f2b8
  store i32 %.1952, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f2c4 = icmp eq i1 %v7_f2a0, false
  store i1 %v2_f2c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2c4, label %dec_label_pc_f2cc, label %dec_label_pc_f158

dec_label_pc_f2cc:                                ; preds = %.thread32, %.thread31
  %v2_f2cc = icmp ugt i32 %v1_f170, 143
  store i1 %v2_f2cc, i1* %cpsr_c.global-to-local, align 1
  %v7_f2cc = icmp eq i32 %v1_f170, 144
  store i1 %v7_f2cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2cc, label %.thread35, label %.thread36

.thread36:                                        ; preds = %dec_label_pc_f2cc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f2e0

.thread35:                                        ; preds = %dec_label_pc_f2cc
  store i32 %.1952, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f2d8 = icmp eq i1 %v7_f2a0, false
  store i1 %v2_f2d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2d8, label %dec_label_pc_f2e0, label %dec_label_pc_f158

dec_label_pc_f2e0:                                ; preds = %.thread36, %.thread35
  %v2_f2e0 = icmp ugt i32 %v1_f170, 148
  store i1 %v2_f2e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f2e0 = icmp eq i32 %v1_f170, 149
  %.1953 = zext i1 %v7_f2e0 to i32
  %v2_f2ec = and i32 %.1953, %.1952
  %v4_f2ec = icmp eq i32 %v2_f2ec, 0
  store i1 %v4_f2ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f2ec, label %dec_label_pc_f2f4, label %dec_label_pc_f158

dec_label_pc_f2f4:                                ; preds = %dec_label_pc_f2e0
  %v2_f2f4 = icmp ugt i32 %v1_f170, 156
  store i1 %v2_f2f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f2f4 = icmp eq i32 %v1_f170, 157
  store i1 %v7_f2f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2f4, label %.thread40, label %.thread41

.thread41:                                        ; preds = %dec_label_pc_f2f4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f308

.thread40:                                        ; preds = %dec_label_pc_f2f4
  store i32 %.1952, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f300 = icmp eq i1 %v7_f2a0, false
  store i1 %v2_f300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f300, label %dec_label_pc_f308, label %dec_label_pc_f158

dec_label_pc_f308:                                ; preds = %.thread41, %.thread40
  %v2_f308 = icmp ugt i32 %v1_f170, 183
  store i1 %v2_f308, i1* %cpsr_c.global-to-local, align 1
  %v7_f308 = icmp eq i32 %v1_f170, 184
  store i1 %v7_f308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f308, label %.thread44, label %.thread45

.thread45:                                        ; preds = %dec_label_pc_f308
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f31c

.thread44:                                        ; preds = %dec_label_pc_f308
  store i32 %.1952, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f314 = icmp eq i1 %v7_f2a0, false
  store i1 %v2_f314, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f314, label %dec_label_pc_f31c, label %dec_label_pc_f158

dec_label_pc_f31c:                                ; preds = %.thread45, %.thread44
  %v2_f31c = icmp ugt i32 %v1_f170, 189
  store i1 %v2_f31c, i1* %cpsr_c.global-to-local, align 1
  %v7_f31c = icmp eq i32 %v1_f170, 190
  store i1 %v7_f31c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f31c, label %.thread48, label %.thread49

.thread49:                                        ; preds = %dec_label_pc_f31c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f330

.thread48:                                        ; preds = %dec_label_pc_f31c
  store i32 %.1952, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f328 = icmp eq i1 %v7_f2a0, false
  store i1 %v2_f328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f328, label %dec_label_pc_f330, label %dec_label_pc_f158

dec_label_pc_f330:                                ; preds = %.thread49, %.thread48
  %v2_f330 = icmp ugt i32 %v1_f170, 195
  store i1 %v2_f330, i1* %cpsr_c.global-to-local, align 1
  %v7_f330 = icmp eq i32 %v1_f170, 196
  %.1954 = zext i1 %v7_f330 to i32
  store i32 %.1954, i32* %r3.global-to-local, align 4
  %v2_f33c = and i32 %.1954, %.1952
  %v4_f33c = icmp eq i32 %v2_f33c, 0
  store i1 %v4_f33c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f33c, label %dec_label_pc_f348, label %dec_label_pc_f158

dec_label_pc_f348:                                ; preds = %dec_label_pc_f330
  %v7_f348 = icmp eq i32 %v1_f15c, 152
  %.1955 = zext i1 %v7_f348 to i32
  store i32 %.1955, i32* %fp.global-to-local, align 4
  %v2_f354 = icmp ugt i32 %v1_f170, 81
  store i1 %v2_f354, i1* %cpsr_c.global-to-local, align 1
  %v7_f354 = icmp eq i32 %v1_f170, 82
  store i1 %v7_f354, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f354, label %bb1377, label %dec_label_pc_f364

bb1377:                                           ; preds = %dec_label_pc_f348
  %v2_f348 = icmp ugt i32 %v1_f15c, 151
  store i1 %v2_f348, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f348, label %dec_label_pc_f158, label %dec_label_pc_f364

dec_label_pc_f364:                                ; preds = %dec_label_pc_f348, %bb1377
  %v2_f364 = icmp ugt i32 %v1_f170, 228
  store i1 %v2_f364, i1* %cpsr_c.global-to-local, align 1
  %v7_f364 = icmp eq i32 %v1_f170, 229
  %.1956 = zext i1 %v7_f364 to i32
  store i32 %.1956, i32* %r3.global-to-local, align 4
  %v2_f370 = and i32 %.1956, %.1955
  %v4_f370 = icmp eq i32 %v2_f370, 0
  store i1 %v4_f370, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f370, label %dec_label_pc_f37c, label %dec_label_pc_f158

dec_label_pc_f37c:                                ; preds = %dec_label_pc_f364
  %v7_f37c = icmp eq i32 %v1_f15c, 157
  %.1957 = zext i1 %v7_f37c to i32
  store i32 %.1957, i32* %fp.global-to-local, align 4
  %v2_f388 = icmp ugt i32 %v1_f170, 201
  store i1 %v2_f388, i1* %cpsr_c.global-to-local, align 1
  %v7_f388 = icmp eq i32 %v1_f170, 202
  %storemerge1185 = zext i1 %v7_f388 to i32
  store i32 %storemerge1185, i32* %r3.global-to-local, align 4
  %v2_f394 = and i32 %storemerge1185, %.1957
  %v4_f394 = icmp eq i32 %v2_f394, 0
  store i1 %v4_f394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f394, label %dec_label_pc_f3a4, label %dec_label_pc_f158

dec_label_pc_f3a4:                                ; preds = %dec_label_pc_f37c
  store i32 %.1957, i32* %r3.global-to-local, align 4
  %v2_f3a8 = icmp ugt i32 %v1_f170, 216
  store i1 %v2_f3a8, i1* %cpsr_c.global-to-local, align 1
  %v7_f3a8 = icmp eq i32 %v1_f170, 217
  store i1 %v7_f3a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3a8, label %.thread60, label %.thread61

.thread61:                                        ; preds = %dec_label_pc_f3a4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f3bc

.thread60:                                        ; preds = %dec_label_pc_f3a4
  store i32 %.1957, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f3b4 = icmp eq i1 %v7_f37c, false
  store i1 %v2_f3b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f3b4, label %dec_label_pc_f3bc, label %dec_label_pc_f158

dec_label_pc_f3bc:                                ; preds = %.thread61, %.thread60
  %v2_f3bc = icmp ugt i32 %v1_f15c, 160
  store i1 %v2_f3bc, i1* %cpsr_c.global-to-local, align 1
  %v7_f3bc = icmp eq i32 %v1_f15c, 161
  store i1 %v7_f3bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3bc, label %bb1384, label %dec_label_pc_f3c8

bb1384:                                           ; preds = %dec_label_pc_f3bc
  %v3_f3c0 = icmp ugt i32 %v1_f170, 123
  store i1 %v3_f3c0, i1* %cpsr_c.global-to-local, align 1
  %v8_f3c0 = icmp eq i32 %v1_f170, 124
  store i1 %v8_f3c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f3c0, label %dec_label_pc_f158, label %dec_label_pc_f3c8

dec_label_pc_f3c8:                                ; preds = %dec_label_pc_f3bc, %bb1384
  %v7_f3c8 = icmp eq i32 %v1_f15c, 162
  %.1958 = zext i1 %v7_f3c8 to i32
  store i32 %.1958, i32* %fp.global-to-local, align 4
  %v2_f3d4 = icmp ugt i32 %v1_f170, 31
  store i1 %v2_f3d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f3d4 = icmp eq i32 %v1_f170, 32
  %storemerge1187 = zext i1 %v7_f3d4 to i32
  store i32 %storemerge1187, i32* %r3.global-to-local, align 4
  %v2_f3e0 = and i32 %storemerge1187, %.1958
  %v4_f3e0 = icmp eq i32 %v2_f3e0, 0
  store i1 %v4_f3e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f3e0, label %dec_label_pc_f3f0, label %dec_label_pc_f158

dec_label_pc_f3f0:                                ; preds = %dec_label_pc_f3c8
  %v7_f3f0 = icmp eq i32 %v1_f15c, 155
  %.1959 = zext i1 %v7_f3f0 to i32
  store i32 %.1959, i32* %fp.global-to-local, align 4
  %v2_f3fc = icmp ugt i32 %v1_f170, 95
  store i1 %v2_f3fc, i1* %cpsr_c.global-to-local, align 1
  %v7_f3fc = icmp eq i32 %v1_f170, 96
  store i1 %v7_f3fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3fc, label %bb1391, label %dec_label_pc_f40c

bb1391:                                           ; preds = %dec_label_pc_f3f0
  %v2_f3f0 = icmp ugt i32 %v1_f15c, 154
  store i1 %v2_f3f0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f3f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3f0, label %dec_label_pc_f158, label %dec_label_pc_f40c

dec_label_pc_f40c:                                ; preds = %dec_label_pc_f3f0, %bb1391
  %v2_f40c = and i32 %.1953, %.1959
  %v4_f40c = icmp eq i32 %v2_f40c, 0
  store i1 %v4_f40c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f40c, label %dec_label_pc_f414, label %dec_label_pc_f158

dec_label_pc_f414:                                ; preds = %dec_label_pc_f40c
  store i32 %.1959, i32* %r3.global-to-local, align 4
  %v2_f418 = icmp ugt i32 %v1_f170, 154
  store i1 %v2_f418, i1* %cpsr_c.global-to-local, align 1
  %v7_f418 = icmp eq i32 %v1_f170, 155
  store i1 %v7_f418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f418, label %.thread71, label %.thread72

.thread72:                                        ; preds = %dec_label_pc_f414
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f42c

.thread71:                                        ; preds = %dec_label_pc_f414
  store i32 %.1959, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f424 = icmp eq i1 %v7_f3f0, false
  store i1 %v2_f424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f424, label %dec_label_pc_f42c, label %dec_label_pc_f158

dec_label_pc_f42c:                                ; preds = %.thread72, %.thread71
  store i32 %.1959, i32* %r3.global-to-local, align 4
  %v2_f430 = icmp ugt i32 %v1_f170, 177
  store i1 %v2_f430, i1* %cpsr_c.global-to-local, align 1
  %v7_f430 = icmp eq i32 %v1_f170, 178
  store i1 %v7_f430, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f430, label %.thread75, label %.thread76

.thread76:                                        ; preds = %dec_label_pc_f42c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f444

.thread75:                                        ; preds = %dec_label_pc_f42c
  store i32 %.1959, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f43c = icmp eq i1 %v7_f3f0, false
  store i1 %v2_f43c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f43c, label %dec_label_pc_f444, label %dec_label_pc_f158

dec_label_pc_f444:                                ; preds = %.thread76, %.thread75
  %v7_f444 = icmp eq i32 %v1_f15c, 164
  %.1960 = zext i1 %v7_f444 to i32
  %v2_f450 = icmp ugt i32 %v1_f170, 157
  store i1 %v2_f450, i1* %cpsr_c.global-to-local, align 1
  %v7_f450 = icmp eq i32 %v1_f170, 158
  store i1 %v7_f450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f450, label %bb1394, label %dec_label_pc_f460

bb1394:                                           ; preds = %dec_label_pc_f444
  %v2_f444 = icmp ugt i32 %v1_f15c, 163
  store i1 %v2_f444, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f444, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f444, label %dec_label_pc_f158, label %dec_label_pc_f460

dec_label_pc_f460:                                ; preds = %dec_label_pc_f444, %bb1394
  %v2_f460 = icmp ugt i32 %v1_f15c, 155
  store i1 %v2_f460, i1* %cpsr_c.global-to-local, align 1
  %v7_f460 = icmp eq i32 %v1_f15c, 156
  store i1 %v7_f460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f460, label %bb1395, label %dec_label_pc_f46c

bb1395:                                           ; preds = %dec_label_pc_f460
  %v3_f464 = icmp ugt i32 %v1_f170, 8
  store i1 %v3_f464, i1* %cpsr_c.global-to-local, align 1
  %v8_f464 = icmp eq i32 %v1_f170, 9
  store i1 %v8_f464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f464, label %dec_label_pc_f158, label %dec_label_pc_f46c

dec_label_pc_f46c:                                ; preds = %dec_label_pc_f460, %bb1395
  %v7_f46c = icmp eq i32 %v1_f15c, 167
  %.1961 = zext i1 %v7_f46c to i32
  store i32 %.1961, i32* %r3.global-to-local, align 4
  %v2_f478 = icmp ugt i32 %v1_f170, 43
  store i1 %v2_f478, i1* %cpsr_c.global-to-local, align 1
  %v7_f478 = icmp eq i32 %v1_f170, 44
  store i1 %v7_f478, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f478, label %bb1398, label %dec_label_pc_f488

bb1398:                                           ; preds = %dec_label_pc_f46c
  %v2_f46c = icmp ugt i32 %v1_f15c, 166
  store i1 %v2_f46c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f46c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f46c, label %dec_label_pc_f158, label %dec_label_pc_f488

dec_label_pc_f488:                                ; preds = %dec_label_pc_f46c, %bb1398
  %v2_f488 = icmp ugt i32 %v1_f170, 67
  %v7_f488 = icmp eq i32 %v1_f170, 68
  %.1962 = zext i1 %v7_f488 to i32
  store i32 %.1962, i32* %fp.global-to-local, align 4
  %v2_f494 = icmp ugt i32 %v1_f15c, 167
  store i1 %v2_f494, i1* %cpsr_c.global-to-local, align 1
  %v7_f494 = icmp eq i32 %v1_f15c, 168
  %storemerge1192 = zext i1 %v7_f494 to i32
  store i32 %storemerge1192, i32* %r3.global-to-local, align 4
  %v2_f4a0 = and i32 %.1962, %storemerge1192
  %v4_f4a0 = icmp eq i32 %v2_f4a0, 0
  store i1 %v4_f4a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f4a0, label %dec_label_pc_f4ac, label %dec_label_pc_f158

dec_label_pc_f4ac:                                ; preds = %dec_label_pc_f488
  %v2_f4ac = icmp ugt i32 %v1_f170, 84
  store i1 %v2_f4ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f4ac = icmp eq i32 %v1_f170, 85
  %.1963 = zext i1 %v7_f4ac to i32
  %v2_f4b8 = and i32 %.1963, %storemerge1192
  %v4_f4b8 = icmp eq i32 %v2_f4b8, 0
  store i1 %v4_f4b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f4b8, label %dec_label_pc_f4c4, label %dec_label_pc_f158

dec_label_pc_f4c4:                                ; preds = %dec_label_pc_f4ac
  %v2_f4c4 = icmp ugt i32 %v1_f170, 101
  store i1 %v2_f4c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f4c4 = icmp eq i32 %v1_f170, 102
  store i1 %v7_f4c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f4c4, label %.thread91, label %.thread92

.thread92:                                        ; preds = %dec_label_pc_f4c4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f4d8

.thread91:                                        ; preds = %dec_label_pc_f4c4
  store i32 %storemerge1192, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4d0 = icmp eq i1 %v7_f494, false
  store i1 %v2_f4d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f4d0, label %dec_label_pc_f4d8, label %dec_label_pc_f158

dec_label_pc_f4d8:                                ; preds = %.thread92, %.thread91
  %v2_f4d8 = icmp ugt i32 %v1_f170, 58
  %v7_f4d8 = icmp eq i32 %v1_f170, 59
  %.1964 = zext i1 %v7_f4d8 to i32
  store i32 %.1964, i32* %r3.global-to-local, align 4
  %v2_f4e4 = icmp ugt i32 %v1_f15c, 202
  store i1 %v2_f4e4, i1* %cpsr_c.global-to-local, align 1
  %v7_f4e4 = icmp eq i32 %v1_f15c, 203
  store i1 %v7_f4e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f4e4, label %bb1407, label %dec_label_pc_f4f4

bb1407:                                           ; preds = %dec_label_pc_f4d8
  store i1 %v2_f4d8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f4d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f4d8, label %dec_label_pc_f158, label %dec_label_pc_f4f4

dec_label_pc_f4f4:                                ; preds = %dec_label_pc_f4d8, %bb1407
  %v2_f4f4 = icmp ugt i32 %v1_f170, 33
  %v7_f4f4 = icmp eq i32 %v1_f170, 34
  %.1965 = zext i1 %v7_f4f4 to i32
  store i32 %.1965, i32* %fp.global-to-local, align 4
  %v2_f500 = icmp ugt i32 %v1_f15c, 203
  store i1 %v2_f500, i1* %cpsr_c.global-to-local, align 1
  %v7_f500 = icmp eq i32 %v1_f15c, 204
  store i1 %v7_f500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f500, label %bb1410, label %dec_label_pc_f510

bb1410:                                           ; preds = %dec_label_pc_f4f4
  store i1 %v2_f4f4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f4f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f4f4, label %dec_label_pc_f158, label %dec_label_pc_f510

dec_label_pc_f510:                                ; preds = %dec_label_pc_f4f4, %bb1410
  %v7_f510 = icmp eq i32 %v1_f15c, 207
  %.1966 = zext i1 %v7_f510 to i32
  %v2_f51c = icmp ugt i32 %v1_f170, 29
  store i1 %v2_f51c, i1* %cpsr_c.global-to-local, align 1
  %v7_f51c = icmp eq i32 %v1_f170, 30
  store i1 %v7_f51c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f51c, label %bb1413, label %dec_label_pc_f52c

bb1413:                                           ; preds = %dec_label_pc_f510
  %v2_f510 = icmp ugt i32 %v1_f15c, 206
  store i1 %v2_f510, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f510, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f510, label %dec_label_pc_f158, label %dec_label_pc_f52c

dec_label_pc_f52c:                                ; preds = %dec_label_pc_f510, %bb1413
  %v7_f52c = icmp eq i32 %v1_f170, 55
  %.1967 = zext i1 %v7_f52c to i32
  store i32 %.1967, i32* %fp.global-to-local, align 4
  %v2_f538 = icmp ugt i32 %v1_f15c, 116
  store i1 %v2_f538, i1* %cpsr_c.global-to-local, align 1
  %v7_f538 = icmp eq i32 %v1_f15c, 117
  %storemerge1198 = zext i1 %v7_f538 to i32
  store i32 %storemerge1198, i32* %r3.global-to-local, align 4
  %v2_f544 = and i32 %.1967, %storemerge1198
  %v4_f544 = icmp eq i32 %v2_f544, 0
  store i1 %v4_f544, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f544, label %dec_label_pc_f550, label %dec_label_pc_f158

dec_label_pc_f550:                                ; preds = %dec_label_pc_f52c
  %v2_f550 = icmp ugt i32 %v1_f170, 55
  store i1 %v2_f550, i1* %cpsr_c.global-to-local, align 1
  %v7_f550 = icmp eq i32 %v1_f170, 56
  %.1968 = zext i1 %v7_f550 to i32
  %v2_f55c = and i32 %.1968, %storemerge1198
  %v4_f55c = icmp eq i32 %v2_f55c, 0
  store i1 %v4_f55c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f55c, label %dec_label_pc_f568, label %dec_label_pc_f158

dec_label_pc_f568:                                ; preds = %dec_label_pc_f550
  %v7_f568 = icmp eq i32 %v1_f15c, 80
  %.1969 = zext i1 %v7_f568 to i32
  store i32 %.1969, i32* %r3.global-to-local, align 4
  %v2_f574 = icmp ugt i32 %v1_f170, 234
  store i1 %v2_f574, i1* %cpsr_c.global-to-local, align 1
  %v7_f574 = icmp eq i32 %v1_f170, 235
  store i1 %v7_f574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f574, label %bb1422, label %dec_label_pc_f584

bb1422:                                           ; preds = %dec_label_pc_f568
  %v2_f568 = icmp ugt i32 %v1_f15c, 79
  store i1 %v2_f568, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f568, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f568, label %dec_label_pc_f158, label %dec_label_pc_f584

dec_label_pc_f584:                                ; preds = %dec_label_pc_f568, %bb1422
  store i32 %.1966, i32* %r3.global-to-local, align 4
  %v2_f588 = icmp ugt i32 %v1_f170, 119
  store i1 %v2_f588, i1* %cpsr_c.global-to-local, align 1
  %v7_f588 = icmp eq i32 %v1_f170, 120
  store i1 %v7_f588, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f588, label %.thread114, label %.thread115

.thread115:                                       ; preds = %dec_label_pc_f584
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f59c

.thread114:                                       ; preds = %dec_label_pc_f584
  store i32 %.1966, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f594 = icmp eq i1 %v7_f510, false
  store i1 %v2_f594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f594, label %dec_label_pc_f59c, label %dec_label_pc_f158

dec_label_pc_f59c:                                ; preds = %.thread115, %.thread114
  %v7_f59c = icmp eq i32 %v1_f15c, 209
  %.1970 = zext i1 %v7_f59c to i32
  store i32 %.1970, i32* %fp.global-to-local, align 4
  %v2_f5a8 = icmp ugt i32 %v1_f170, 34
  store i1 %v2_f5a8, i1* %cpsr_c.global-to-local, align 1
  %v7_f5a8 = icmp eq i32 %v1_f170, 35
  store i1 %v7_f5a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5a8, label %bb1425, label %dec_label_pc_f5b8

bb1425:                                           ; preds = %dec_label_pc_f59c
  %v2_f59c = icmp ugt i32 %v1_f15c, 208
  store i1 %v2_f59c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f59c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f59c, label %dec_label_pc_f158, label %dec_label_pc_f5b8

dec_label_pc_f5b8:                                ; preds = %dec_label_pc_f59c, %bb1425
  %v7_f5b8 = icmp eq i32 %v1_f15c, 64
  %.1971 = zext i1 %v7_f5b8 to i32
  %v2_f5c4 = icmp ugt i32 %v1_f170, 69
  store i1 %v2_f5c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f5c4 = icmp eq i32 %v1_f170, 70
  store i1 %v7_f5c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5c4, label %bb1428, label %dec_label_pc_f5d4

bb1428:                                           ; preds = %dec_label_pc_f5b8
  %v2_f5b8 = icmp ugt i32 %v1_f15c, 63
  store i1 %v2_f5b8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f5b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5b8, label %dec_label_pc_f158, label %dec_label_pc_f5d4

dec_label_pc_f5d4:                                ; preds = %dec_label_pc_f5b8, %bb1428
  %v7_f5d4 = icmp eq i32 %v1_f15c, 172
  %.1972 = zext i1 %v7_f5d4 to i32
  store i32 %.1972, i32* %r3.global-to-local, align 4
  %v2_f5e0 = icmp ugt i32 %v1_f170, 14
  store i1 %v2_f5e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f5e0 = icmp eq i32 %v1_f170, 15
  store i1 %v7_f5e0, i1* %cpsr_z.global-to-local, align 1
  %v2_f5e4 = xor i1 %v2_f5e0, true
  %v3_f5e4 = or i1 %v7_f5e0, %v2_f5e4
  br i1 %v3_f5e4, label %bb1431, label %bb1432

bb1431:                                           ; preds = %dec_label_pc_f5d4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %bb1432

bb1432:                                           ; preds = %dec_label_pc_f5d4, %bb1431
  %v1_f5ec768 = phi i32 [ %.1970, %dec_label_pc_f5d4 ], [ 0, %bb1431 ]
  %v2_f5e8 = xor i1 %v7_f5e0, true
  %v3_f5e8 = and i1 %v2_f5e0, %v2_f5e8
  br i1 %v3_f5e8, label %bb1433, label %bb1434

bb1433:                                           ; preds = %bb1432
  store i32 1, i32* %fp.global-to-local, align 4
  br label %bb1434

bb1434:                                           ; preds = %bb1432, %bb1433
  %v0_fbc0 = phi i32 [ %v1_f5ec768, %bb1432 ], [ 1, %bb1433 ]
  %v2_f5ec = and i32 %v0_fbc0, %.1972
  %v4_f5ec = icmp eq i32 %v2_f5ec, 0
  store i1 %v4_f5ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f5ec, label %dec_label_pc_f604, label %dec_label_pc_f5fc

dec_label_pc_f5fc:                                ; preds = %bb1434
  %v2_f5fc = icmp ugt i32 %v1_f170, 30
  store i1 %v2_f5fc, i1* %cpsr_c.global-to-local, align 1
  %v7_f5fc = icmp eq i32 %v1_f170, 31
  store i1 %v7_f5fc, i1* %cpsr_z.global-to-local, align 1
  %v2_f600 = xor i1 %v2_f5fc, true
  %v3_f600 = or i1 %v7_f5fc, %v2_f600
  br i1 %v3_f600, label %dec_label_pc_f158, label %dec_label_pc_f604

dec_label_pc_f604:                                ; preds = %dec_label_pc_f5fc, %bb1434
  %v2_f604 = icmp ugt i32 %v1_f170, 62
  store i1 %v2_f604, i1* %cpsr_c.global-to-local, align 1
  %v7_f604 = icmp eq i32 %v1_f170, 63
  store i1 %v7_f604, i1* %cpsr_z.global-to-local, align 1
  %v2_f608 = xor i1 %v2_f604, true
  %v3_f608 = or i1 %v7_f604, %v2_f608
  br i1 %v3_f608, label %bb1435, label %bb1436

bb1435:                                           ; preds = %dec_label_pc_f604
  br label %bb1436

bb1436:                                           ; preds = %dec_label_pc_f604, %bb1435
  %v0_f610770 = phi i32 [ %.1971, %dec_label_pc_f604 ], [ 0, %bb1435 ]
  %v2_f60c = xor i1 %v7_f604, true
  %v3_f60c = and i1 %v2_f604, %v2_f60c
  br i1 %v3_f60c, label %bb1437, label %bb1438

bb1437:                                           ; preds = %bb1436
  br label %bb1438

bb1438:                                           ; preds = %bb1436, %bb1437
  %v0_1080c = phi i32 [ %v0_f610770, %bb1436 ], [ 1, %bb1437 ]
  store i32 %v0_1080c, i32* %r3.global-to-local, align 4
  %v2_f614 = icmp ugt i32 %v1_f15c, 99
  store i1 %v2_f614, i1* %cpsr_c.global-to-local, align 1
  %v7_f614 = icmp eq i32 %v1_f15c, 100
  store i1 %v7_f614, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f614, label %bb1439, label %.thread1121

.thread1121:                                      ; preds = %bb1438
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f634

bb1439:                                           ; preds = %bb1438
  %v2_f61c = urem i32 %v0_1080c, 2
  store i32 %v2_f61c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f620 = icmp eq i32 %v2_f61c, 0
  store i1 %v2_f620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f620, label %dec_label_pc_f634, label %dec_label_pc_f62c

dec_label_pc_f62c:                                ; preds = %bb1439
  %v2_f62c = icmp ugt i32 %v1_f170, 125
  store i1 %v2_f62c, i1* %cpsr_c.global-to-local, align 1
  %v7_f62c = icmp eq i32 %v1_f170, 126
  store i1 %v7_f62c, i1* %cpsr_z.global-to-local, align 1
  %v2_f630 = xor i1 %v2_f62c, true
  %v3_f630 = or i1 %v7_f62c, %v2_f630
  br i1 %v3_f630, label %dec_label_pc_f158, label %dec_label_pc_f634

dec_label_pc_f634:                                ; preds = %.thread1121, %dec_label_pc_f62c, %bb1439
  %v7_f634 = icmp eq i32 %v1_f15c, 169
  %.1973 = zext i1 %v7_f634 to i32
  store i32 %.1973, i32* %r3.global-to-local, align 4
  %v2_f640 = icmp ugt i32 %v1_f170, 253
  store i1 %v2_f640, i1* %cpsr_c.global-to-local, align 1
  %v7_f640 = icmp eq i32 %v1_f170, 254
  %storemerge1205 = zext i1 %v7_f640 to i32
  store i32 %storemerge1205, i32* %fp.global-to-local, align 4
  %v2_f64c = and i32 %storemerge1205, %.1973
  %v4_f64c = icmp eq i32 %v2_f64c, 0
  store i1 %v4_f64c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f64c, label %dec_label_pc_f65c, label %dec_label_pc_f158

dec_label_pc_f65c:                                ; preds = %dec_label_pc_f634
  %v7_f65c = icmp eq i32 %v1_f15c, 198
  %.1974 = zext i1 %v7_f65c to i32
  store i32 %.1974, i32* %r3.global-to-local, align 4
  store i1 %v2_f224, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f224, i1* %cpsr_z.global-to-local, align 1
  %v2_f670 = xor i1 %v2_f224, true
  %v3_f670 = or i1 %v7_f224, %v2_f670
  br i1 %v3_f670, label %bb1446, label %bb1447

bb1446:                                           ; preds = %dec_label_pc_f65c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1447

bb1447:                                           ; preds = %dec_label_pc_f65c, %bb1446
  %v4_f674 = phi i32 [ %.1974, %dec_label_pc_f65c ], [ 0, %bb1446 ]
  %v2_f674 = xor i1 %v7_f224, true
  %v3_f674 = and i1 %v2_f224, %v2_f674
  br i1 %v3_f674, label %bb1448, label %thread-pre-split131

bb1448:                                           ; preds = %bb1447
  store i32 %v4_f674, i32* %r3.global-to-local, align 4
  br label %thread-pre-split131

thread-pre-split131:                              ; preds = %bb1447, %bb1448
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f678 = icmp eq i32 %v4_f674, 0
  store i1 %v2_f678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f678, label %dec_label_pc_f68c, label %dec_label_pc_f684

dec_label_pc_f684:                                ; preds = %thread-pre-split131
  %v2_f684 = icmp ugt i32 %v1_f170, 18
  store i1 %v2_f684, i1* %cpsr_c.global-to-local, align 1
  %v7_f684 = icmp eq i32 %v1_f170, 19
  store i1 %v7_f684, i1* %cpsr_z.global-to-local, align 1
  %v2_f688 = xor i1 %v2_f684, true
  %v3_f688 = or i1 %v7_f684, %v2_f688
  br i1 %v3_f688, label %dec_label_pc_f158, label %dec_label_pc_f68c

dec_label_pc_f68c:                                ; preds = %dec_label_pc_f684, %thread-pre-split131
  store i32 %.1971, i32* %r3.global-to-local, align 4
  store i1 %v2_f488, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f488, i1* %cpsr_z.global-to-local, align 1
  %v2_f694 = xor i1 %v2_f488, true
  %v3_f694 = or i1 %v7_f488, %v2_f694
  br i1 %v3_f694, label %bb1449, label %bb1450

bb1449:                                           ; preds = %dec_label_pc_f68c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1450

bb1450:                                           ; preds = %dec_label_pc_f68c, %bb1449
  %v4_f698 = phi i32 [ %.1971, %dec_label_pc_f68c ], [ 0, %bb1449 ]
  %v2_f698 = xor i1 %v7_f488, true
  %v3_f698 = and i1 %v2_f488, %v2_f698
  br i1 %v3_f698, label %bb1451, label %thread-pre-split132

bb1451:                                           ; preds = %bb1450
  store i32 %v4_f698, i32* %r3.global-to-local, align 4
  br label %thread-pre-split132

thread-pre-split132:                              ; preds = %bb1450, %bb1451
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f69c = icmp eq i32 %v4_f698, 0
  store i1 %v2_f69c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f69c, label %dec_label_pc_f6ac, label %dec_label_pc_f6a4

dec_label_pc_f6a4:                                ; preds = %thread-pre-split132
  %v2_f6a4 = icmp ugt i32 %v1_f170, 225
  store i1 %v2_f6a4, i1* %cpsr_c.global-to-local, align 1
  %v7_f6a4 = icmp eq i32 %v1_f170, 226
  store i1 %v7_f6a4, i1* %cpsr_z.global-to-local, align 1
  %v2_f6a8 = xor i1 %v2_f6a4, true
  %v3_f6a8 = or i1 %v7_f6a4, %v2_f6a8
  br i1 %v3_f6a8, label %dec_label_pc_f158, label %dec_label_pc_f6ac

dec_label_pc_f6ac:                                ; preds = %dec_label_pc_f6a4, %thread-pre-split132
  store i1 %v2_f4f4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f4f4, i1* %cpsr_z.global-to-local, align 1
  %v2_f6b0 = xor i1 %v2_f4f4, true
  %v3_f6b0 = or i1 %v7_f4f4, %v2_f6b0
  br i1 %v3_f6b0, label %bb1452, label %bb1453

bb1452:                                           ; preds = %dec_label_pc_f6ac
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1453

bb1453:                                           ; preds = %dec_label_pc_f6ac, %bb1452
  %v0_f6b8778 = phi i32 [ %v4_f698, %dec_label_pc_f6ac ], [ 0, %bb1452 ]
  %v2_f6b4 = xor i1 %v7_f4f4, true
  %v3_f6b4 = and i1 %v2_f4f4, %v2_f6b4
  br i1 %v3_f6b4, label %bb1454, label %bb1455

bb1454:                                           ; preds = %bb1453
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1455

bb1455:                                           ; preds = %bb1453, %bb1454
  %v0_f6b8 = phi i32 [ %v0_f6b8778, %bb1453 ], [ 1, %bb1454 ]
  %v2_f6bc = icmp ugt i32 %v1_f15c, 127
  store i1 %v2_f6bc, i1* %cpsr_c.global-to-local, align 1
  %v7_f6bc = icmp eq i32 %v1_f15c, 128
  store i1 %v7_f6bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f6bc, label %.thread133, label %.thread134

.thread134:                                       ; preds = %bb1455
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f6d8

.thread133:                                       ; preds = %bb1455
  %v2_f6c4 = urem i32 %v0_f6b8, 2
  store i32 %v2_f6c4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6c8 = icmp eq i32 %v2_f6c4, 0
  store i1 %v2_f6c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6c8, label %dec_label_pc_f6d8, label %dec_label_pc_f6d0

dec_label_pc_f6d0:                                ; preds = %.thread133
  %v2_f6d0 = icmp ugt i32 %v1_f170, 235
  store i1 %v2_f6d0, i1* %cpsr_c.global-to-local, align 1
  %v7_f6d0 = icmp eq i32 %v1_f170, 236
  store i1 %v7_f6d0, i1* %cpsr_z.global-to-local, align 1
  %v2_f6d4 = xor i1 %v2_f6d0, true
  %v3_f6d4 = or i1 %v7_f6d0, %v2_f6d4
  br i1 %v3_f6d4, label %dec_label_pc_f158, label %dec_label_pc_f6d8

dec_label_pc_f6d8:                                ; preds = %.thread134, %dec_label_pc_f6d0, %.thread133
  %v7_f6d8 = icmp eq i32 %v1_f15c, 129
  %.1975 = zext i1 %v7_f6d8 to i32
  store i32 %.1975, i32* %r3.global-to-local, align 4
  %v2_f6e4 = icmp ugt i32 %v1_f170, 20
  store i1 %v2_f6e4, i1* %cpsr_c.global-to-local, align 1
  %v7_f6e4 = icmp eq i32 %v1_f170, 21
  store i1 %v7_f6e4, i1* %cpsr_z.global-to-local, align 1
  %v2_f6e8 = xor i1 %v2_f6e4, true
  %v3_f6e8 = or i1 %v7_f6e4, %v2_f6e8
  br i1 %v3_f6e8, label %.thread139, label %bb1458

.thread139:                                       ; preds = %dec_label_pc_f6d8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f6fc

bb1458:                                           ; preds = %dec_label_pc_f6d8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6ec = icmp eq i1 %v7_f6d8, false
  store i1 %v2_f6ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6ec, label %dec_label_pc_f6fc, label %dec_label_pc_f6f4

dec_label_pc_f6f4:                                ; preds = %bb1458
  %v2_f6f4 = icmp eq i32 %v1_f170, 255
  store i1 %v2_f6f4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f6f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6f4, label %dec_label_pc_f6fc, label %dec_label_pc_f158

dec_label_pc_f6fc:                                ; preds = %.thread139, %dec_label_pc_f6f4, %bb1458
  %v7_f6fc = icmp eq i32 %v1_f15c, 130
  %.1976 = zext i1 %v7_f6fc to i32
  store i32 %.1976, i32* %r3.global-to-local, align 4
  %v2_f708 = icmp ugt i32 %v1_f170, 38
  store i1 %v2_f708, i1* %cpsr_c.global-to-local, align 1
  %v7_f708 = icmp eq i32 %v1_f170, 39
  store i1 %v7_f708, i1* %cpsr_z.global-to-local, align 1
  %v2_f70c = xor i1 %v2_f708, true
  %v3_f70c = or i1 %v7_f708, %v2_f70c
  br i1 %v3_f70c, label %.thread144, label %bb1461

.thread144:                                       ; preds = %dec_label_pc_f6fc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f720

bb1461:                                           ; preds = %dec_label_pc_f6fc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f710 = icmp eq i1 %v7_f6fc, false
  store i1 %v2_f710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f710, label %dec_label_pc_f720, label %dec_label_pc_f718

dec_label_pc_f718:                                ; preds = %bb1461
  %v2_f718 = icmp ugt i32 %v1_f170, 166
  store i1 %v2_f718, i1* %cpsr_c.global-to-local, align 1
  %v7_f718 = icmp eq i32 %v1_f170, 167
  store i1 %v7_f718, i1* %cpsr_z.global-to-local, align 1
  %v2_f71c = xor i1 %v2_f718, true
  %v3_f71c = or i1 %v7_f718, %v2_f71c
  br i1 %v3_f71c, label %dec_label_pc_f158, label %dec_label_pc_f720

dec_label_pc_f720:                                ; preds = %.thread144, %dec_label_pc_f718, %bb1461
  %v2_f720 = icmp ugt i32 %v1_f170, 1
  store i1 %v2_f720, i1* %cpsr_c.global-to-local, align 1
  %v7_f720 = icmp eq i32 %v1_f170, 2
  store i1 %v7_f720, i1* %cpsr_z.global-to-local, align 1
  %v2_f724 = xor i1 %v2_f720, true
  %v3_f724 = or i1 %v7_f720, %v2_f724
  br i1 %v3_f724, label %bb1462, label %bb1463

bb1462:                                           ; preds = %dec_label_pc_f720
  br label %bb1463

bb1463:                                           ; preds = %dec_label_pc_f720, %bb1462
  %v1_f734783 = phi i32 [ %.1974, %dec_label_pc_f720 ], [ 0, %bb1462 ]
  %v2_f728 = xor i1 %v7_f720, true
  %v3_f728 = and i1 %v2_f720, %v2_f728
  br i1 %v3_f728, label %bb1464, label %bb1465

bb1464:                                           ; preds = %bb1463
  br label %bb1465

bb1465:                                           ; preds = %bb1463, %bb1464
  %v1_f750 = phi i32 [ %v1_f734783, %bb1463 ], [ 1, %bb1464 ]
  %v2_f72c = icmp ugt i32 %v1_f15c, 130
  store i1 %v2_f72c, i1* %cpsr_c.global-to-local, align 1
  %v7_f72c = icmp eq i32 %v1_f15c, 131
  store i1 %v7_f72c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f72c, label %.thread147, label %.thread148

.thread148:                                       ; preds = %bb1465
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f748

.thread147:                                       ; preds = %bb1465
  %v2_f734 = urem i32 %v1_f750, 2
  store i32 %v2_f734, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f738 = icmp eq i32 %v2_f734, 0
  store i1 %v2_f738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f738, label %dec_label_pc_f748, label %dec_label_pc_f740

dec_label_pc_f740:                                ; preds = %.thread147
  %v2_f740 = icmp ugt i32 %v1_f170, 249
  store i1 %v2_f740, i1* %cpsr_c.global-to-local, align 1
  %v7_f740 = icmp eq i32 %v1_f170, 250
  store i1 %v7_f740, i1* %cpsr_z.global-to-local, align 1
  %v2_f744 = xor i1 %v2_f740, true
  %v3_f744 = or i1 %v7_f740, %v2_f744
  br i1 %v3_f744, label %dec_label_pc_f158, label %dec_label_pc_f748

dec_label_pc_f748:                                ; preds = %.thread148, %dec_label_pc_f740, %.thread147
  %v2_f748 = icmp ugt i32 %v1_f15c, 131
  store i1 %v2_f748, i1* %cpsr_c.global-to-local, align 1
  %v7_f748 = icmp eq i32 %v1_f15c, 132
  store i1 %v7_f748, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f748, label %.thread151, label %.thread152

.thread152:                                       ; preds = %dec_label_pc_f748
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f764

.thread151:                                       ; preds = %dec_label_pc_f748
  %v2_f750 = urem i32 %v1_f750, 2
  store i32 %v2_f750, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f754 = icmp eq i32 %v2_f750, 0
  store i1 %v2_f754, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f754, label %dec_label_pc_f764, label %dec_label_pc_f75c

dec_label_pc_f75c:                                ; preds = %.thread151
  %v2_f75c = icmp ugt i32 %v1_f170, 249
  store i1 %v2_f75c, i1* %cpsr_c.global-to-local, align 1
  %v7_f75c = icmp eq i32 %v1_f170, 250
  store i1 %v7_f75c, i1* %cpsr_z.global-to-local, align 1
  %v2_f760 = xor i1 %v2_f75c, true
  %v3_f760 = or i1 %v7_f75c, %v2_f760
  br i1 %v3_f760, label %dec_label_pc_f158, label %dec_label_pc_f764

dec_label_pc_f764:                                ; preds = %.thread152, %dec_label_pc_f75c, %.thread151
  %v2_f764 = icmp ugt i32 %v1_f170, 3
  store i1 %v2_f764, i1* %cpsr_c.global-to-local, align 1
  %v7_f764 = icmp eq i32 %v1_f170, 4
  store i1 %v7_f764, i1* %cpsr_z.global-to-local, align 1
  %v2_f768 = xor i1 %v2_f764, true
  %v3_f768 = or i1 %v7_f764, %v2_f768
  br i1 %v3_f768, label %bb1466, label %bb1467

bb1466:                                           ; preds = %dec_label_pc_f764
  br label %bb1467

bb1467:                                           ; preds = %dec_label_pc_f764, %bb1466
  %v1_f778785 = phi i32 [ %v1_f750, %dec_label_pc_f764 ], [ 0, %bb1466 ]
  %v2_f76c = xor i1 %v7_f764, true
  %v3_f76c = and i1 %v2_f764, %v2_f76c
  br i1 %v3_f76c, label %bb1468, label %bb1469

bb1468:                                           ; preds = %bb1467
  br label %bb1469

bb1469:                                           ; preds = %bb1467, %bb1468
  %v1_f990 = phi i32 [ %v1_f778785, %bb1467 ], [ 1, %bb1468 ]
  %v2_f770 = icmp ugt i32 %v1_f15c, 133
  store i1 %v2_f770, i1* %cpsr_c.global-to-local, align 1
  %v7_f770 = icmp eq i32 %v1_f15c, 134
  store i1 %v7_f770, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f770, label %.thread155, label %.thread156

.thread156:                                       ; preds = %bb1469
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f78c

.thread155:                                       ; preds = %bb1469
  %v2_f778 = urem i32 %v1_f990, 2
  store i32 %v2_f778, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f77c = icmp eq i32 %v2_f778, 0
  store i1 %v2_f77c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f77c, label %dec_label_pc_f78c, label %dec_label_pc_f784

dec_label_pc_f784:                                ; preds = %.thread155
  %v2_f784 = icmp ugt i32 %v1_f170, 233
  store i1 %v2_f784, i1* %cpsr_c.global-to-local, align 1
  %v7_f784 = icmp eq i32 %v1_f170, 234
  store i1 %v7_f784, i1* %cpsr_z.global-to-local, align 1
  %v2_f788 = xor i1 %v2_f784, true
  %v3_f788 = or i1 %v7_f784, %v2_f788
  br i1 %v3_f788, label %dec_label_pc_f158, label %dec_label_pc_f78c

dec_label_pc_f78c:                                ; preds = %.thread156, %dec_label_pc_f784, %.thread155
  %v7_f78c = icmp eq i32 %v1_f15c, 136
  %.1977 = zext i1 %v7_f78c to i32
  store i32 %.1977, i32* %r3.global-to-local, align 4
  %v2_f798 = icmp ugt i32 %v1_f170, 175
  store i1 %v2_f798, i1* %cpsr_c.global-to-local, align 1
  %v7_f798 = icmp eq i32 %v1_f170, 176
  store i1 %v7_f798, i1* %cpsr_z.global-to-local, align 1
  %v2_f79c = xor i1 %v2_f798, true
  %v3_f79c = or i1 %v7_f798, %v2_f79c
  br i1 %v3_f79c, label %.thread161, label %bb1472

.thread161:                                       ; preds = %dec_label_pc_f78c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f7b0

bb1472:                                           ; preds = %dec_label_pc_f78c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f7a0 = icmp eq i1 %v7_f78c, false
  store i1 %v2_f7a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f7a0, label %dec_label_pc_f7b0, label %dec_label_pc_f7a8

dec_label_pc_f7a8:                                ; preds = %bb1472
  %v2_f7a8 = icmp ugt i32 %v1_f170, 221
  store i1 %v2_f7a8, i1* %cpsr_c.global-to-local, align 1
  %v7_f7a8 = icmp eq i32 %v1_f170, 222
  store i1 %v7_f7a8, i1* %cpsr_z.global-to-local, align 1
  %v2_f7ac = xor i1 %v2_f7a8, true
  %v3_f7ac = or i1 %v7_f7a8, %v2_f7ac
  br i1 %v3_f7ac, label %dec_label_pc_f158, label %dec_label_pc_f7b0

dec_label_pc_f7b0:                                ; preds = %.thread161, %dec_label_pc_f7a8, %bb1472
  %v7_f7b0 = icmp eq i32 %v1_f15c, 138
  %.1978 = zext i1 %v7_f7b0 to i32
  store i32 %.1978, i32* %fp.global-to-local, align 4
  store i32 %.1978, i32* %r3.global-to-local, align 4
  %v2_f7c0 = icmp ugt i32 %v1_f170, 11
  store i1 %v2_f7c0, i1* %cpsr_c.global-to-local, align 1
  %v7_f7c0 = icmp eq i32 %v1_f170, 12
  store i1 %v7_f7c0, i1* %cpsr_z.global-to-local, align 1
  %v2_f7c4 = xor i1 %v2_f7c0, true
  %v3_f7c4 = or i1 %v7_f7c0, %v2_f7c4
  br i1 %v3_f7c4, label %bb1475, label %bb1476

bb1475:                                           ; preds = %dec_label_pc_f7b0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1476

bb1476:                                           ; preds = %dec_label_pc_f7b0, %bb1475
  %v4_f7c8 = phi i32 [ %.1978, %dec_label_pc_f7b0 ], [ 0, %bb1475 ]
  %v2_f7c8 = xor i1 %v7_f7c0, true
  %v3_f7c8 = and i1 %v2_f7c0, %v2_f7c8
  br i1 %v3_f7c8, label %bb1477, label %thread-pre-split165

bb1477:                                           ; preds = %bb1476
  store i32 %v4_f7c8, i32* %r3.global-to-local, align 4
  br label %thread-pre-split165

thread-pre-split165:                              ; preds = %bb1476, %bb1477
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f7cc = icmp eq i32 %v4_f7c8, 0
  store i1 %v2_f7cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f7cc, label %dec_label_pc_f7e0, label %dec_label_pc_f7d8

dec_label_pc_f7d8:                                ; preds = %thread-pre-split165
  %v2_f7d8 = icmp ugt i32 %v1_f170, 192
  store i1 %v2_f7d8, i1* %cpsr_c.global-to-local, align 1
  %v7_f7d8 = icmp eq i32 %v1_f170, 193
  store i1 %v7_f7d8, i1* %cpsr_z.global-to-local, align 1
  %v2_f7dc = xor i1 %v2_f7d8, true
  %v3_f7dc = or i1 %v7_f7d8, %v2_f7dc
  br i1 %v3_f7dc, label %dec_label_pc_f158, label %dec_label_pc_f7e0

dec_label_pc_f7e0:                                ; preds = %dec_label_pc_f7d8, %thread-pre-split165
  %v7_f7e0 = icmp eq i32 %v1_f15c, 139
  %.1979 = zext i1 %v7_f7e0 to i32
  store i32 %.1979, i32* %r3.global-to-local, align 4
  store i1 %v2_f51c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f51c, i1* %cpsr_z.global-to-local, align 1
  %v2_f7f4 = xor i1 %v2_f51c, true
  %v3_f7f4 = or i1 %v7_f51c, %v2_f7f4
  br i1 %v3_f7f4, label %bb1480, label %bb1481

bb1480:                                           ; preds = %dec_label_pc_f7e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1481

bb1481:                                           ; preds = %dec_label_pc_f7e0, %bb1480
  %v4_f7f8 = phi i32 [ %.1979, %dec_label_pc_f7e0 ], [ 0, %bb1480 ]
  %v2_f7f8 = xor i1 %v7_f51c, true
  %v3_f7f8 = and i1 %v2_f51c, %v2_f7f8
  br i1 %v3_f7f8, label %bb1482, label %thread-pre-split167

bb1482:                                           ; preds = %bb1481
  store i32 %v4_f7f8, i32* %r3.global-to-local, align 4
  br label %thread-pre-split167

thread-pre-split167:                              ; preds = %bb1481, %bb1482
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f7fc = icmp eq i32 %v4_f7f8, 0
  store i1 %v2_f7fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f7fc, label %dec_label_pc_f80c, label %dec_label_pc_f804

dec_label_pc_f804:                                ; preds = %thread-pre-split167
  %v2_f804 = icmp ugt i32 %v1_f170, 141
  store i1 %v2_f804, i1* %cpsr_c.global-to-local, align 1
  %v7_f804 = icmp eq i32 %v1_f170, 142
  store i1 %v7_f804, i1* %cpsr_z.global-to-local, align 1
  %v2_f808 = xor i1 %v2_f804, true
  %v3_f808 = or i1 %v7_f804, %v2_f808
  br i1 %v3_f808, label %dec_label_pc_f158, label %dec_label_pc_f80c

dec_label_pc_f80c:                                ; preds = %dec_label_pc_f804, %thread-pre-split167
  store i32 %v1_f170, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f80c = icmp eq i32 %v1_f170, 0
  store i1 %v2_f80c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f80c, label %bb1484, label %bb1483

bb1483:                                           ; preds = %dec_label_pc_f80c
  store i32 1, i32* %fp.global-to-local, align 4
  br label %bb1484

bb1484:                                           ; preds = %dec_label_pc_f80c, %bb1483
  %v0_107d0 = phi i32 [ 0, %dec_label_pc_f80c ], [ 1, %bb1483 ]
  store i32 %v0_107d0, i32* %r3.global-to-local, align 4
  %v2_f818 = icmp ugt i32 %v1_f15c, 139
  store i1 %v2_f818, i1* %cpsr_c.global-to-local, align 1
  %v7_f818 = icmp eq i32 %v1_f15c, 140
  store i1 %v7_f818, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f818, label %bb1485, label %.thread1123

.thread1123:                                      ; preds = %bb1484
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f838

bb1485:                                           ; preds = %bb1484
  store i32 %v0_107d0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f824 = icmp eq i32 %v0_107d0, 0
  store i1 %v2_f824, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f824, label %dec_label_pc_f838, label %dec_label_pc_f830

dec_label_pc_f830:                                ; preds = %bb1485
  store i1 %v2_f388, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f388, i1* %cpsr_z.global-to-local, align 1
  %v2_f834 = xor i1 %v2_f388, true
  %v3_f834 = or i1 %v7_f388, %v2_f834
  br i1 %v3_f834, label %dec_label_pc_f158, label %dec_label_pc_f838

dec_label_pc_f838:                                ; preds = %.thread1123, %dec_label_pc_f830, %bb1485
  %v0_f8241125 = phi i32 [ 0, %.thread1123 ], [ 1, %dec_label_pc_f830 ], [ 0, %bb1485 ]
  store i1 %v2_f478, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f478, i1* %cpsr_z.global-to-local, align 1
  %v2_f83c = xor i1 %v2_f478, true
  %v3_f83c = or i1 %v7_f478, %v2_f83c
  br i1 %v3_f83c, label %bb1486, label %bb1487

bb1486:                                           ; preds = %dec_label_pc_f838
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1487

bb1487:                                           ; preds = %dec_label_pc_f838, %bb1486
  %v0_f844794 = phi i32 [ %v0_f8241125, %dec_label_pc_f838 ], [ 0, %bb1486 ]
  %v2_f840 = xor i1 %v7_f478, true
  %v3_f840 = and i1 %v2_f478, %v2_f840
  br i1 %v3_f840, label %bb1488, label %bb1489

bb1488:                                           ; preds = %bb1487
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1489

bb1489:                                           ; preds = %bb1487, %bb1488
  %v0_f844 = phi i32 [ %v0_f844794, %bb1487 ], [ 1, %bb1488 ]
  %v2_f848 = icmp ugt i32 %v1_f15c, 142
  store i1 %v2_f848, i1* %cpsr_c.global-to-local, align 1
  %v7_f848 = icmp eq i32 %v1_f15c, 143
  store i1 %v7_f848, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f848, label %.thread169, label %.thread170

.thread170:                                       ; preds = %bb1489
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f864

.thread169:                                       ; preds = %bb1489
  %v2_f850 = urem i32 %v0_f844, 2
  store i32 %v2_f850, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f854 = icmp eq i32 %v2_f850, 0
  store i1 %v2_f854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f854, label %dec_label_pc_f864, label %dec_label_pc_f85c

dec_label_pc_f85c:                                ; preds = %.thread169
  %v2_f85c = icmp ugt i32 %v1_f170, 231
  store i1 %v2_f85c, i1* %cpsr_c.global-to-local, align 1
  %v7_f85c = icmp eq i32 %v1_f170, 232
  store i1 %v7_f85c, i1* %cpsr_z.global-to-local, align 1
  %v2_f860 = xor i1 %v2_f85c, true
  %v3_f860 = or i1 %v7_f85c, %v2_f860
  br i1 %v3_f860, label %dec_label_pc_f158, label %dec_label_pc_f864

dec_label_pc_f864:                                ; preds = %.thread170, %dec_label_pc_f85c, %.thread169
  %v7_f864 = icmp eq i32 %v1_f15c, 144
  %.1980 = zext i1 %v7_f864 to i32
  store i32 %.1980, i32* %r3.global-to-local, align 4
  store i1 %v2_f244, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f244, i1* %cpsr_z.global-to-local, align 1
  %v2_f874 = xor i1 %v2_f244, true
  %v3_f874 = or i1 %v7_f244, %v2_f874
  br i1 %v3_f874, label %.thread175, label %bb1492

.thread175:                                       ; preds = %dec_label_pc_f864
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f888

bb1492:                                           ; preds = %dec_label_pc_f864
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f878 = icmp eq i1 %v7_f864, false
  store i1 %v2_f878, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f878, label %dec_label_pc_f888, label %dec_label_pc_f880

dec_label_pc_f880:                                ; preds = %bb1492
  %v2_f880 = icmp ugt i32 %v1_f170, 251
  store i1 %v2_f880, i1* %cpsr_c.global-to-local, align 1
  %v7_f880 = icmp eq i32 %v1_f170, 252
  store i1 %v7_f880, i1* %cpsr_z.global-to-local, align 1
  %v2_f884 = xor i1 %v2_f880, true
  %v3_f884 = or i1 %v7_f880, %v2_f884
  br i1 %v3_f884, label %dec_label_pc_f158, label %dec_label_pc_f888

dec_label_pc_f888:                                ; preds = %.thread175, %dec_label_pc_f880, %bb1492
  %v0_f894.pr798 = phi i32 [ 0, %.thread175 ], [ 1, %dec_label_pc_f880 ], [ 0, %bb1492 ]
  %v2_f888 = icmp ugt i32 %v1_f170, 163
  store i1 %v2_f888, i1* %cpsr_c.global-to-local, align 1
  %v7_f888 = icmp eq i32 %v1_f170, 164
  store i1 %v7_f888, i1* %cpsr_z.global-to-local, align 1
  %v2_f88c = xor i1 %v2_f888, true
  %v3_f88c = or i1 %v7_f888, %v2_f88c
  br i1 %v3_f88c, label %bb1493, label %bb1494

bb1493:                                           ; preds = %dec_label_pc_f888
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1494

bb1494:                                           ; preds = %dec_label_pc_f888, %bb1493
  %v0_f894.pr = phi i32 [ %v0_f894.pr798, %dec_label_pc_f888 ], [ 0, %bb1493 ]
  %v2_f890 = xor i1 %v7_f888, true
  %v3_f890 = and i1 %v2_f888, %v2_f890
  br i1 %v3_f890, label %bb1495, label %thread-pre-split178

bb1495:                                           ; preds = %bb1494
  store i32 %.1946, i32* %r3.global-to-local, align 4
  br label %thread-pre-split178

thread-pre-split178:                              ; preds = %bb1494, %bb1495
  %v0_f894 = phi i32 [ %.1946, %bb1495 ], [ %v0_f894.pr, %bb1494 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f894 = icmp eq i32 %v0_f894, 0
  store i1 %v2_f894, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f894, label %dec_label_pc_f8a4, label %dec_label_pc_f89c

dec_label_pc_f89c:                                ; preds = %thread-pre-split178
  %v2_f89c = icmp ugt i32 %v1_f170, 164
  store i1 %v2_f89c, i1* %cpsr_c.global-to-local, align 1
  %v7_f89c = icmp eq i32 %v1_f170, 165
  store i1 %v7_f89c, i1* %cpsr_z.global-to-local, align 1
  %v2_f8a0 = xor i1 %v2_f89c, true
  %v3_f8a0 = or i1 %v7_f89c, %v2_f8a0
  br i1 %v3_f8a0, label %dec_label_pc_f158, label %dec_label_pc_f8a4

dec_label_pc_f8a4:                                ; preds = %dec_label_pc_f89c, %thread-pre-split178
  store i32 %v0_f6b8, i32* %fp.global-to-local, align 4
  %v2_f8a8 = and i32 %v0_f6b8, %.1950
  %v4_f8a8 = icmp eq i32 %v2_f8a8, 0
  store i1 %v4_f8a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f8a8, label %dec_label_pc_f8b8, label %dec_label_pc_f8b0

dec_label_pc_f8b0:                                ; preds = %dec_label_pc_f8a4
  %v2_f8b0 = icmp ugt i32 %v1_f170, 41
  store i1 %v2_f8b0, i1* %cpsr_c.global-to-local, align 1
  %v7_f8b0 = icmp eq i32 %v1_f170, 42
  store i1 %v7_f8b0, i1* %cpsr_z.global-to-local, align 1
  %v2_f8b4 = xor i1 %v2_f8b0, true
  %v3_f8b4 = or i1 %v7_f8b0, %v2_f8b4
  br i1 %v3_f8b4, label %dec_label_pc_f158, label %dec_label_pc_f8b8

dec_label_pc_f8b8:                                ; preds = %dec_label_pc_f8b0, %dec_label_pc_f8a4
  store i1 %v2_f4c4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f4c4, i1* %cpsr_z.global-to-local, align 1
  %v2_f8bc = xor i1 %v2_f4c4, true
  %v3_f8bc = or i1 %v7_f4c4, %v2_f8bc
  br i1 %v3_f8bc, label %bb1496, label %bb1497

bb1496:                                           ; preds = %dec_label_pc_f8b8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1497

bb1497:                                           ; preds = %dec_label_pc_f8b8, %bb1496
  %v1_f8c4801 = phi i32 [ %v0_f894, %dec_label_pc_f8b8 ], [ 0, %bb1496 ]
  %v2_f8c0 = xor i1 %v7_f4c4, true
  %v3_f8c0 = and i1 %v2_f4c4, %v2_f8c0
  br i1 %v3_f8c0, label %bb1498, label %bb1499

bb1498:                                           ; preds = %bb1497
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1499

bb1499:                                           ; preds = %bb1497, %bb1498
  %v1_f8c4 = phi i32 [ %v1_f8c4801, %bb1497 ], [ 1, %bb1498 ]
  %v2_f8c4 = and i32 %v1_f8c4, %.1950
  %v4_f8c4 = icmp eq i32 %v2_f8c4, 0
  store i1 %v4_f8c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f8c4, label %dec_label_pc_f8d8, label %dec_label_pc_f8d0

dec_label_pc_f8d0:                                ; preds = %bb1499
  %v2_f8d0 = icmp ugt i32 %v1_f170, 103
  store i1 %v2_f8d0, i1* %cpsr_c.global-to-local, align 1
  %v7_f8d0 = icmp eq i32 %v1_f170, 104
  store i1 %v7_f8d0, i1* %cpsr_z.global-to-local, align 1
  %v2_f8d4 = xor i1 %v2_f8d0, true
  %v3_f8d4 = or i1 %v7_f8d0, %v2_f8d4
  br i1 %v3_f8d4, label %dec_label_pc_f158, label %dec_label_pc_f8d8

dec_label_pc_f8d8:                                ; preds = %dec_label_pc_f8d0, %bb1499
  %v2_f8d8 = icmp ugt i32 %v1_f170, 166
  store i1 %v2_f8d8, i1* %cpsr_c.global-to-local, align 1
  %v7_f8d8 = icmp eq i32 %v1_f170, 167
  store i1 %v7_f8d8, i1* %cpsr_z.global-to-local, align 1
  %v2_f8dc = xor i1 %v2_f8d8, true
  %v3_f8dc = or i1 %v7_f8d8, %v2_f8dc
  br i1 %v3_f8dc, label %bb1500, label %bb1501

bb1500:                                           ; preds = %dec_label_pc_f8d8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1501

bb1501:                                           ; preds = %dec_label_pc_f8d8, %bb1500
  %v0_f8e4.pr = phi i32 [ %v1_f8c4, %dec_label_pc_f8d8 ], [ 0, %bb1500 ]
  %v2_f8e0 = xor i1 %v7_f8d8, true
  %v3_f8e0 = and i1 %v2_f8d8, %v2_f8e0
  br i1 %v3_f8e0, label %bb1502, label %thread-pre-split179

bb1502:                                           ; preds = %bb1501
  store i32 %.1950, i32* %r3.global-to-local, align 4
  br label %thread-pre-split179

thread-pre-split179:                              ; preds = %bb1501, %bb1502
  %v0_f8e4 = phi i32 [ %.1950, %bb1502 ], [ %v0_f8e4.pr, %bb1501 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8e4 = icmp eq i32 %v0_f8e4, 0
  store i1 %v2_f8e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8e4, label %dec_label_pc_f8f4, label %dec_label_pc_f8ec

dec_label_pc_f8ec:                                ; preds = %thread-pre-split179
  %v2_f8ec = icmp ugt i32 %v1_f170, 168
  store i1 %v2_f8ec, i1* %cpsr_c.global-to-local, align 1
  %v7_f8ec = icmp eq i32 %v1_f170, 169
  store i1 %v7_f8ec, i1* %cpsr_z.global-to-local, align 1
  %v2_f8f0 = xor i1 %v2_f8ec, true
  %v3_f8f0 = or i1 %v7_f8ec, %v2_f8f0
  br i1 %v3_f8f0, label %dec_label_pc_f158, label %dec_label_pc_f8f4

dec_label_pc_f8f4:                                ; preds = %dec_label_pc_f8ec, %thread-pre-split179
  %v2_f8f4 = icmp ugt i32 %v1_f170, 196
  store i1 %v2_f8f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f8f4 = icmp eq i32 %v1_f170, 197
  store i1 %v7_f8f4, i1* %cpsr_z.global-to-local, align 1
  %v2_f8f8 = xor i1 %v2_f8f4, true
  %v3_f8f8 = or i1 %v7_f8f4, %v2_f8f8
  br i1 %v3_f8f8, label %bb1503, label %bb1504

bb1503:                                           ; preds = %dec_label_pc_f8f4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1504

bb1504:                                           ; preds = %dec_label_pc_f8f4, %bb1503
  %v0_f900.pr = phi i32 [ %v0_f8e4, %dec_label_pc_f8f4 ], [ 0, %bb1503 ]
  %v2_f8fc = xor i1 %v7_f8f4, true
  %v3_f8fc = and i1 %v2_f8f4, %v2_f8fc
  br i1 %v3_f8fc, label %bb1505, label %thread-pre-split180

bb1505:                                           ; preds = %bb1504
  store i32 %.1950, i32* %r3.global-to-local, align 4
  br label %thread-pre-split180

thread-pre-split180:                              ; preds = %bb1504, %bb1505
  %v0_f900 = phi i32 [ %.1950, %bb1505 ], [ %v0_f900.pr, %bb1504 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f900 = icmp eq i32 %v0_f900, 0
  store i1 %v2_f900, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f900, label %dec_label_pc_f910, label %dec_label_pc_f908

dec_label_pc_f908:                                ; preds = %thread-pre-split180
  %v2_f908 = icmp ugt i32 %v1_f170, 198
  store i1 %v2_f908, i1* %cpsr_c.global-to-local, align 1
  %v7_f908 = icmp eq i32 %v1_f170, 199
  store i1 %v7_f908, i1* %cpsr_z.global-to-local, align 1
  %v2_f90c = xor i1 %v2_f908, true
  %v3_f90c = or i1 %v7_f908, %v2_f90c
  br i1 %v3_f90c, label %dec_label_pc_f158, label %dec_label_pc_f910

dec_label_pc_f910:                                ; preds = %dec_label_pc_f908, %thread-pre-split180
  %v2_f910 = icmp ugt i32 %v1_f170, 236
  store i1 %v2_f910, i1* %cpsr_c.global-to-local, align 1
  %v7_f910 = icmp eq i32 %v1_f170, 237
  store i1 %v7_f910, i1* %cpsr_z.global-to-local, align 1
  %v2_f914 = xor i1 %v2_f910, true
  %v3_f914 = or i1 %v7_f910, %v2_f914
  br i1 %v3_f914, label %bb1506, label %bb1507

bb1506:                                           ; preds = %dec_label_pc_f910
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1507

bb1507:                                           ; preds = %dec_label_pc_f910, %bb1506
  %v0_f91c.pr = phi i32 [ %v0_f900, %dec_label_pc_f910 ], [ 0, %bb1506 ]
  %v2_f918 = xor i1 %v7_f910, true
  %v3_f918 = and i1 %v2_f910, %v2_f918
  br i1 %v3_f918, label %bb1508, label %thread-pre-split181

bb1508:                                           ; preds = %bb1507
  store i32 %.1950, i32* %r3.global-to-local, align 4
  br label %thread-pre-split181

thread-pre-split181:                              ; preds = %bb1507, %bb1508
  %v0_f91c = phi i32 [ %.1950, %bb1508 ], [ %v0_f91c.pr, %bb1507 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f91c = icmp eq i32 %v0_f91c, 0
  store i1 %v2_f91c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f91c, label %dec_label_pc_f92c, label %dec_label_pc_f924

dec_label_pc_f924:                                ; preds = %thread-pre-split181
  %v2_f924 = icmp eq i32 %v1_f170, 255
  store i1 %v2_f924, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f924, label %dec_label_pc_f92c, label %dec_label_pc_f158

dec_label_pc_f92c:                                ; preds = %dec_label_pc_f924, %thread-pre-split181
  %v2_f92c = icmp ugt i32 %v1_f170, 111
  store i1 %v2_f92c, i1* %cpsr_c.global-to-local, align 1
  %v7_f92c = icmp eq i32 %v1_f170, 112
  store i1 %v7_f92c, i1* %cpsr_z.global-to-local, align 1
  %v2_f930 = xor i1 %v2_f92c, true
  %v3_f930 = or i1 %v7_f92c, %v2_f930
  br i1 %v3_f930, label %bb1509, label %bb1510

bb1509:                                           ; preds = %dec_label_pc_f92c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1510

bb1510:                                           ; preds = %dec_label_pc_f92c, %bb1509
  %v0_f938.pr = phi i32 [ %v0_f91c, %dec_label_pc_f92c ], [ 0, %bb1509 ]
  %v2_f934 = xor i1 %v7_f92c, true
  %v3_f934 = and i1 %v2_f92c, %v2_f934
  br i1 %v3_f934, label %bb1511, label %thread-pre-split182

bb1511:                                           ; preds = %bb1510
  store i32 %.1952, i32* %r3.global-to-local, align 4
  br label %thread-pre-split182

thread-pre-split182:                              ; preds = %bb1510, %bb1511
  %v0_f938 = phi i32 [ %.1952, %bb1511 ], [ %v0_f938.pr, %bb1510 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f938 = icmp eq i32 %v0_f938, 0
  store i1 %v2_f938, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f938, label %dec_label_pc_f948, label %dec_label_pc_f940

dec_label_pc_f940:                                ; preds = %thread-pre-split182
  store i1 %v2_f284, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f284, i1* %cpsr_z.global-to-local, align 1
  %v2_f944 = xor i1 %v2_f284, true
  %v3_f944 = or i1 %v7_f284, %v2_f944
  br i1 %v3_f944, label %dec_label_pc_f158, label %dec_label_pc_f948

dec_label_pc_f948:                                ; preds = %dec_label_pc_f940, %thread-pre-split182
  store i32 %.1955, i32* %r3.global-to-local, align 4
  %v2_f94c = icmp ugt i32 %v1_f170, 149
  store i1 %v2_f94c, i1* %cpsr_c.global-to-local, align 1
  %v7_f94c = icmp eq i32 %v1_f170, 150
  store i1 %v7_f94c, i1* %cpsr_z.global-to-local, align 1
  %v2_f950 = xor i1 %v2_f94c, true
  %v3_f950 = or i1 %v7_f94c, %v2_f950
  br i1 %v3_f950, label %bb1512, label %bb1513

bb1512:                                           ; preds = %dec_label_pc_f948
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1513

bb1513:                                           ; preds = %dec_label_pc_f948, %bb1512
  %v4_f954 = phi i32 [ %.1955, %dec_label_pc_f948 ], [ 0, %bb1512 ]
  %v2_f954 = xor i1 %v7_f94c, true
  %v3_f954 = and i1 %v2_f94c, %v2_f954
  br i1 %v3_f954, label %bb1514, label %thread-pre-split183

bb1514:                                           ; preds = %bb1513
  store i32 %v4_f954, i32* %r3.global-to-local, align 4
  br label %thread-pre-split183

thread-pre-split183:                              ; preds = %bb1513, %bb1514
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f958 = icmp eq i32 %v4_f954, 0
  store i1 %v2_f958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f958, label %dec_label_pc_f968, label %dec_label_pc_f960

dec_label_pc_f960:                                ; preds = %thread-pre-split183
  store i1 %v2_f258, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f258, i1* %cpsr_z.global-to-local, align 1
  %v2_f964 = xor i1 %v2_f258, true
  %v3_f964 = or i1 %v7_f258, %v2_f964
  br i1 %v3_f964, label %dec_label_pc_f158, label %dec_label_pc_f968

dec_label_pc_f968:                                ; preds = %dec_label_pc_f960, %thread-pre-split183
  %v7_f968 = icmp eq i32 %v1_f15c, 153
  %.1981 = zext i1 %v7_f968 to i32
  store i32 %.1981, i32* %r3.global-to-local, align 4
  %v2_f974 = icmp ugt i32 %v1_f170, 19
  store i1 %v2_f974, i1* %cpsr_c.global-to-local, align 1
  %v7_f974 = icmp eq i32 %v1_f170, 20
  store i1 %v7_f974, i1* %cpsr_z.global-to-local, align 1
  %v2_f978 = xor i1 %v2_f974, true
  %v3_f978 = or i1 %v7_f974, %v2_f978
  br i1 %v3_f978, label %.thread186, label %bb1517

.thread186:                                       ; preds = %dec_label_pc_f968
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f98c

bb1517:                                           ; preds = %dec_label_pc_f968
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f97c = icmp eq i1 %v7_f968, false
  store i1 %v2_f97c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f97c, label %dec_label_pc_f98c, label %dec_label_pc_f984

dec_label_pc_f984:                                ; preds = %bb1517
  %v2_f984 = icmp ugt i32 %v1_f170, 30
  store i1 %v2_f984, i1* %cpsr_c.global-to-local, align 1
  %v7_f984 = icmp eq i32 %v1_f170, 31
  store i1 %v7_f984, i1* %cpsr_z.global-to-local, align 1
  %v2_f988 = xor i1 %v2_f984, true
  %v3_f988 = or i1 %v7_f984, %v2_f988
  br i1 %v3_f988, label %dec_label_pc_f158, label %dec_label_pc_f98c

dec_label_pc_f98c:                                ; preds = %.thread186, %dec_label_pc_f984, %bb1517
  store i32 %.1959, i32* %r4.global-to-local, align 4
  %v2_f990 = and i32 %v1_f990, %.1959
  %v4_f990 = icmp eq i32 %v2_f990, 0
  store i1 %v4_f990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f990, label %dec_label_pc_f9a0, label %dec_label_pc_f998

dec_label_pc_f998:                                ; preds = %dec_label_pc_f98c
  %v2_f998 = icmp ugt i32 %v1_f170, 8
  store i1 %v2_f998, i1* %cpsr_c.global-to-local, align 1
  %v7_f998 = icmp eq i32 %v1_f170, 9
  store i1 %v7_f998, i1* %cpsr_z.global-to-local, align 1
  %v2_f99c = xor i1 %v2_f998, true
  %v3_f99c = or i1 %v7_f998, %v2_f99c
  br i1 %v3_f99c, label %dec_label_pc_f158, label %dec_label_pc_f9a0

dec_label_pc_f9a0:                                ; preds = %dec_label_pc_f998, %dec_label_pc_f98c
  store i32 %.1959, i32* %r3.global-to-local, align 4
  %v2_f9a4 = icmp ugt i32 %v1_f170, 72
  store i1 %v2_f9a4, i1* %cpsr_c.global-to-local, align 1
  %v7_f9a4 = icmp eq i32 %v1_f170, 73
  store i1 %v7_f9a4, i1* %cpsr_z.global-to-local, align 1
  %v2_f9a8 = xor i1 %v2_f9a4, true
  %v3_f9a8 = or i1 %v7_f9a4, %v2_f9a8
  br i1 %v3_f9a8, label %bb1518, label %bb1519

bb1518:                                           ; preds = %dec_label_pc_f9a0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1519

bb1519:                                           ; preds = %dec_label_pc_f9a0, %bb1518
  %v4_f9ac = phi i32 [ %.1959, %dec_label_pc_f9a0 ], [ 0, %bb1518 ]
  %v2_f9ac = xor i1 %v7_f9a4, true
  %v3_f9ac = and i1 %v2_f9a4, %v2_f9ac
  br i1 %v3_f9ac, label %bb1520, label %thread-pre-split189

bb1520:                                           ; preds = %bb1519
  store i32 %v4_f9ac, i32* %r3.global-to-local, align 4
  br label %thread-pre-split189

thread-pre-split189:                              ; preds = %bb1519, %bb1520
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9b0 = icmp eq i32 %v4_f9ac, 0
  store i1 %v2_f9b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9b0, label %dec_label_pc_f9c0, label %dec_label_pc_f9b8

dec_label_pc_f9b8:                                ; preds = %thread-pre-split189
  %v2_f9b8 = icmp ugt i32 %v1_f170, 87
  store i1 %v2_f9b8, i1* %cpsr_c.global-to-local, align 1
  %v7_f9b8 = icmp eq i32 %v1_f170, 88
  store i1 %v7_f9b8, i1* %cpsr_z.global-to-local, align 1
  %v2_f9bc = xor i1 %v2_f9b8, true
  %v3_f9bc = or i1 %v7_f9b8, %v2_f9bc
  br i1 %v3_f9bc, label %dec_label_pc_f158, label %dec_label_pc_f9c0

dec_label_pc_f9c0:                                ; preds = %dec_label_pc_f9b8, %thread-pre-split189
  store i32 %.1959, i32* %r3.global-to-local, align 4
  %v2_f9c4 = icmp ugt i32 %v1_f170, 211
  store i1 %v2_f9c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f9c4 = icmp eq i32 %v1_f170, 212
  store i1 %v7_f9c4, i1* %cpsr_z.global-to-local, align 1
  %v2_f9c8 = xor i1 %v2_f9c4, true
  %v3_f9c8 = or i1 %v7_f9c4, %v2_f9c8
  br i1 %v3_f9c8, label %bb1521, label %bb1522

bb1521:                                           ; preds = %dec_label_pc_f9c0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1522

bb1522:                                           ; preds = %dec_label_pc_f9c0, %bb1521
  %v4_f9cc = phi i32 [ %.1959, %dec_label_pc_f9c0 ], [ 0, %bb1521 ]
  %v2_f9cc = xor i1 %v7_f9c4, true
  %v3_f9cc = and i1 %v2_f9c4, %v2_f9cc
  br i1 %v3_f9cc, label %bb1523, label %thread-pre-split190

bb1523:                                           ; preds = %bb1522
  store i32 %v4_f9cc, i32* %r3.global-to-local, align 4
  br label %thread-pre-split190

thread-pre-split190:                              ; preds = %bb1522, %bb1523
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9d0 = icmp eq i32 %v4_f9cc, 0
  store i1 %v2_f9d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9d0, label %dec_label_pc_f9e0, label %dec_label_pc_f9d8

dec_label_pc_f9d8:                                ; preds = %thread-pre-split190
  %v2_f9d8 = icmp ugt i32 %v1_f170, 220
  store i1 %v2_f9d8, i1* %cpsr_c.global-to-local, align 1
  %v7_f9d8 = icmp eq i32 %v1_f170, 221
  store i1 %v7_f9d8, i1* %cpsr_z.global-to-local, align 1
  %v2_f9dc = xor i1 %v2_f9d8, true
  %v3_f9dc = or i1 %v7_f9d8, %v2_f9dc
  br i1 %v3_f9dc, label %dec_label_pc_f158, label %dec_label_pc_f9e0

dec_label_pc_f9e0:                                ; preds = %dec_label_pc_f9d8, %thread-pre-split190
  store i32 %.1957, i32* %r3.global-to-local, align 4
  store i1 %v2_f2e0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f2e0, i1* %cpsr_z.global-to-local, align 1
  %v2_f9e8 = xor i1 %v2_f2e0, true
  %v3_f9e8 = or i1 %v7_f2e0, %v2_f9e8
  br i1 %v3_f9e8, label %bb1524, label %bb1525

bb1524:                                           ; preds = %dec_label_pc_f9e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1525

bb1525:                                           ; preds = %dec_label_pc_f9e0, %bb1524
  %v4_f9ec = phi i32 [ %.1957, %dec_label_pc_f9e0 ], [ 0, %bb1524 ]
  %v2_f9ec = xor i1 %v7_f2e0, true
  %v3_f9ec = and i1 %v2_f2e0, %v2_f9ec
  br i1 %v3_f9ec, label %bb1526, label %thread-pre-split191

bb1526:                                           ; preds = %bb1525
  store i32 %v4_f9ec, i32* %r3.global-to-local, align 4
  br label %thread-pre-split191

thread-pre-split191:                              ; preds = %bb1525, %bb1526
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9f0 = icmp eq i32 %v4_f9ec, 0
  store i1 %v2_f9f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9f0, label %dec_label_pc_fa00, label %dec_label_pc_f9f8

dec_label_pc_f9f8:                                ; preds = %thread-pre-split191
  %v2_f9f8 = icmp ugt i32 %v1_f170, 152
  store i1 %v2_f9f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f9f8 = icmp eq i32 %v1_f170, 153
  store i1 %v7_f9f8, i1* %cpsr_z.global-to-local, align 1
  %v2_f9fc = xor i1 %v2_f9f8, true
  %v3_f9fc = or i1 %v7_f9f8, %v2_f9fc
  br i1 %v3_f9fc, label %dec_label_pc_f158, label %dec_label_pc_fa00

dec_label_pc_fa00:                                ; preds = %dec_label_pc_f9f8, %thread-pre-split191
  store i32 %v0_107d0, i32* %fp.global-to-local, align 4
  %v2_fa04 = icmp ugt i32 %v1_f15c, 157
  store i1 %v2_fa04, i1* %cpsr_c.global-to-local, align 1
  %v7_fa04 = icmp eq i32 %v1_f15c, 158
  %.1982 = zext i1 %v7_fa04 to i32
  store i32 %.1982, i32* %r3.global-to-local, align 4
  %v2_fa10 = and i32 %v0_107d0, %.1982
  %v4_fa10 = icmp eq i32 %v2_fa10, 0
  store i1 %v4_fa10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fa10, label %dec_label_pc_fa20, label %dec_label_pc_fa18

dec_label_pc_fa18:                                ; preds = %dec_label_pc_fa00
  store i1 %v2_f974, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f974, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f978, label %dec_label_pc_f158, label %dec_label_pc_fa20

dec_label_pc_fa20:                                ; preds = %dec_label_pc_fa18, %dec_label_pc_fa00
  %v2_fa20 = icmp ugt i32 %v1_f170, 233
  store i1 %v2_fa20, i1* %cpsr_c.global-to-local, align 1
  %v7_fa20 = icmp eq i32 %v1_f170, 234
  store i1 %v7_fa20, i1* %cpsr_z.global-to-local, align 1
  %v2_fa24 = xor i1 %v2_fa20, true
  %v3_fa24 = or i1 %v7_fa20, %v2_fa24
  br i1 %v3_fa24, label %bb1529, label %bb1530

bb1529:                                           ; preds = %dec_label_pc_fa20
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1530

bb1530:                                           ; preds = %dec_label_pc_fa20, %bb1529
  %v4_fa28 = phi i32 [ %.1982, %dec_label_pc_fa20 ], [ 0, %bb1529 ]
  %v2_fa28 = xor i1 %v7_fa20, true
  %v3_fa28 = and i1 %v2_fa20, %v2_fa28
  br i1 %v3_fa28, label %bb1531, label %thread-pre-split193

bb1531:                                           ; preds = %bb1530
  store i32 %v4_fa28, i32* %r3.global-to-local, align 4
  br label %thread-pre-split193

thread-pre-split193:                              ; preds = %bb1530, %bb1531
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa2c = icmp eq i32 %v4_fa28, 0
  store i1 %v2_fa2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa2c, label %dec_label_pc_fa3c, label %dec_label_pc_fa34

dec_label_pc_fa34:                                ; preds = %thread-pre-split193
  %v2_fa34 = icmp ugt i32 %v1_f170, 245
  store i1 %v2_fa34, i1* %cpsr_c.global-to-local, align 1
  %v7_fa34 = icmp eq i32 %v1_f170, 246
  store i1 %v7_fa34, i1* %cpsr_z.global-to-local, align 1
  %v2_fa38 = xor i1 %v2_fa34, true
  %v3_fa38 = or i1 %v7_fa34, %v2_fa38
  br i1 %v3_fa38, label %dec_label_pc_f158, label %dec_label_pc_fa3c

dec_label_pc_fa3c:                                ; preds = %dec_label_pc_fa34, %thread-pre-split193
  %v7_fa3c = icmp eq i32 %v1_f15c, 159
  %.1983 = zext i1 %v7_fa3c to i32
  %v2_fa48 = icmp ugt i32 %v1_f170, 118
  store i1 %v2_fa48, i1* %cpsr_c.global-to-local, align 1
  %v7_fa48 = icmp eq i32 %v1_f170, 119
  store i1 %v7_fa48, i1* %cpsr_z.global-to-local, align 1
  %v2_fa4c = xor i1 %v2_fa48, true
  %v3_fa4c = or i1 %v7_fa48, %v2_fa4c
  br i1 %v3_fa4c, label %bb1534, label %bb1535

bb1534:                                           ; preds = %dec_label_pc_fa3c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1535

bb1535:                                           ; preds = %dec_label_pc_fa3c, %bb1534
  %v0_fa54.pr = phi i32 [ %v4_fa28, %dec_label_pc_fa3c ], [ 0, %bb1534 ]
  %v2_fa50 = xor i1 %v7_fa48, true
  %v3_fa50 = and i1 %v2_fa48, %v2_fa50
  br i1 %v3_fa50, label %bb1536, label %thread-pre-split195

bb1536:                                           ; preds = %bb1535
  store i32 %.1983, i32* %r3.global-to-local, align 4
  br label %thread-pre-split195

thread-pre-split195:                              ; preds = %bb1535, %bb1536
  %v0_fa54 = phi i32 [ %.1983, %bb1536 ], [ %v0_fa54.pr, %bb1535 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa54 = icmp eq i32 %v0_fa54, 0
  store i1 %v2_fa54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa54, label %dec_label_pc_fa64, label %dec_label_pc_fa5c

dec_label_pc_fa5c:                                ; preds = %thread-pre-split195
  store i1 %v2_f588, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f588, i1* %cpsr_z.global-to-local, align 1
  %v2_fa60 = xor i1 %v2_f588, true
  %v3_fa60 = or i1 %v7_f588, %v2_fa60
  br i1 %v3_fa60, label %dec_label_pc_f158, label %dec_label_pc_fa64

dec_label_pc_fa64:                                ; preds = %dec_label_pc_fa5c, %thread-pre-split195
  %v7_fa64 = icmp eq i32 %v1_f15c, 160
  %.1984 = zext i1 %v7_fa64 to i32
  store i32 %.1984, i32* %r3.global-to-local, align 4
  %v2_fa70 = icmp ugt i32 %v1_f170, 130
  store i1 %v2_fa70, i1* %cpsr_c.global-to-local, align 1
  %v7_fa70 = icmp eq i32 %v1_f170, 131
  store i1 %v7_fa70, i1* %cpsr_z.global-to-local, align 1
  %v2_fa74 = xor i1 %v2_fa70, true
  %v3_fa74 = or i1 %v7_fa70, %v2_fa74
  br i1 %v3_fa74, label %.thread198, label %bb1539

.thread198:                                       ; preds = %dec_label_pc_fa64
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa88

bb1539:                                           ; preds = %dec_label_pc_fa64
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa78 = icmp eq i1 %v7_fa64, false
  store i1 %v2_fa78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa78, label %dec_label_pc_fa88, label %dec_label_pc_fa80

dec_label_pc_fa80:                                ; preds = %bb1539
  store i1 %v2_f94c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f94c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f950, label %dec_label_pc_f158, label %dec_label_pc_fa88

dec_label_pc_fa88:                                ; preds = %.thread198, %dec_label_pc_fa80, %bb1539
  store i32 %.1971, i32* %r3.global-to-local, align 4
  %v2_fa8c = icmp ugt i32 %v1_f170, 222
  store i1 %v2_fa8c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa8c = icmp eq i32 %v1_f170, 223
  store i1 %v7_fa8c, i1* %cpsr_z.global-to-local, align 1
  %v2_fa90 = xor i1 %v2_fa8c, true
  %v3_fa90 = or i1 %v7_fa8c, %v2_fa90
  br i1 %v3_fa90, label %bb1540, label %bb1541

bb1540:                                           ; preds = %dec_label_pc_fa88
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1541

bb1541:                                           ; preds = %dec_label_pc_fa88, %bb1540
  %v4_fa94 = phi i32 [ %.1971, %dec_label_pc_fa88 ], [ 0, %bb1540 ]
  %v2_fa94 = xor i1 %v7_fa8c, true
  %v3_fa94 = and i1 %v2_fa8c, %v2_fa94
  br i1 %v3_fa94, label %bb1542, label %thread-pre-split201

bb1542:                                           ; preds = %bb1541
  store i32 %v4_fa94, i32* %r3.global-to-local, align 4
  br label %thread-pre-split201

thread-pre-split201:                              ; preds = %bb1541, %bb1542
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa98 = icmp eq i32 %v4_fa94, 0
  store i1 %v2_fa98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa98, label %dec_label_pc_faa8, label %dec_label_pc_faa0

dec_label_pc_faa0:                                ; preds = %thread-pre-split201
  %v2_faa0 = icmp ugt i32 %v1_f170, 225
  store i1 %v2_faa0, i1* %cpsr_c.global-to-local, align 1
  %v7_faa0 = icmp eq i32 %v1_f170, 226
  store i1 %v7_faa0, i1* %cpsr_z.global-to-local, align 1
  %v2_faa4 = xor i1 %v2_faa0, true
  %v3_faa4 = or i1 %v7_faa0, %v2_faa4
  br i1 %v3_faa4, label %dec_label_pc_f158, label %dec_label_pc_faa8

dec_label_pc_faa8:                                ; preds = %dec_label_pc_faa0, %thread-pre-split201
  store i32 %.1958, i32* %r3.global-to-local, align 4
  store i32 %v0_f844, i32* %r4.global-to-local, align 4
  %v2_fab0 = and i32 %v0_f844, %.1958
  %v4_fab0 = icmp eq i32 %v2_fab0, 0
  store i1 %v4_fab0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fab0, label %dec_label_pc_fac0, label %dec_label_pc_fab8

dec_label_pc_fab8:                                ; preds = %dec_label_pc_faa8
  %v2_fab8 = icmp ugt i32 %v1_f170, 45
  store i1 %v2_fab8, i1* %cpsr_c.global-to-local, align 1
  %v7_fab8 = icmp eq i32 %v1_f170, 46
  store i1 %v7_fab8, i1* %cpsr_z.global-to-local, align 1
  %v2_fabc = xor i1 %v2_fab8, true
  %v3_fabc = or i1 %v7_fab8, %v2_fabc
  br i1 %v3_fabc, label %dec_label_pc_f158, label %dec_label_pc_fac0

dec_label_pc_fac0:                                ; preds = %dec_label_pc_fab8, %dec_label_pc_faa8
  %v7_fac0 = icmp eq i32 %v1_f15c, 163
  %.1985 = zext i1 %v7_fac0 to i32
  store i32 %.1985, i32* %sb.global-to-local, align 4
  %v2_facc = icmp ugt i32 %v1_f170, 203
  store i1 %v2_facc, i1* %cpsr_c.global-to-local, align 1
  %v7_facc = icmp eq i32 %v1_f170, 204
  store i1 %v7_facc, i1* %cpsr_z.global-to-local, align 1
  %v2_fad0 = xor i1 %v2_facc, true
  %v3_fad0 = or i1 %v7_facc, %v2_fad0
  br i1 %v3_fad0, label %bb1545, label %bb1546

bb1545:                                           ; preds = %dec_label_pc_fac0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1546

bb1546:                                           ; preds = %dec_label_pc_fac0, %bb1545
  %v0_fad8.pr = phi i32 [ %.1958, %dec_label_pc_fac0 ], [ 0, %bb1545 ]
  %v2_fad4 = xor i1 %v7_facc, true
  %v3_fad4 = and i1 %v2_facc, %v2_fad4
  br i1 %v3_fad4, label %bb1547, label %thread-pre-split203

bb1547:                                           ; preds = %bb1546
  store i32 %.1985, i32* %r3.global-to-local, align 4
  br label %thread-pre-split203

thread-pre-split203:                              ; preds = %bb1546, %bb1547
  %v0_fad8 = phi i32 [ %.1985, %bb1547 ], [ %v0_fad8.pr, %bb1546 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fad8 = icmp eq i32 %v0_fad8, 0
  store i1 %v2_fad8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fad8, label %dec_label_pc_fae8, label %dec_label_pc_fae0

dec_label_pc_fae0:                                ; preds = %thread-pre-split203
  %v2_fae0 = icmp ugt i32 %v1_f170, 205
  store i1 %v2_fae0, i1* %cpsr_c.global-to-local, align 1
  %v7_fae0 = icmp eq i32 %v1_f170, 206
  store i1 %v7_fae0, i1* %cpsr_z.global-to-local, align 1
  %v2_fae4 = xor i1 %v2_fae0, true
  %v3_fae4 = or i1 %v7_fae0, %v2_fae4
  br i1 %v3_fae4, label %dec_label_pc_f158, label %dec_label_pc_fae8

dec_label_pc_fae8:                                ; preds = %dec_label_pc_fae0, %thread-pre-split203
  store i32 %.1960, i32* %fp.global-to-local, align 4
  store i32 %v0_f844, i32* %r3.global-to-local, align 4
  %v2_faf0 = and i32 %v0_f844, %.1960
  %v4_faf0 = icmp eq i32 %v2_faf0, 0
  store i1 %v4_faf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_faf0, label %dec_label_pc_fb00, label %dec_label_pc_faf8

dec_label_pc_faf8:                                ; preds = %dec_label_pc_fae8
  %v2_faf8 = icmp ugt i32 %v1_f170, 48
  store i1 %v2_faf8, i1* %cpsr_c.global-to-local, align 1
  %v7_faf8 = icmp eq i32 %v1_f170, 49
  store i1 %v7_faf8, i1* %cpsr_z.global-to-local, align 1
  %v2_fafc = xor i1 %v2_faf8, true
  %v3_fafc = or i1 %v7_faf8, %v2_fafc
  br i1 %v3_fafc, label %dec_label_pc_f158, label %dec_label_pc_fb00

dec_label_pc_fb00:                                ; preds = %dec_label_pc_faf8, %dec_label_pc_fae8
  store i32 %.1960, i32* %r3.global-to-local, align 4
  %v2_fb04 = icmp ugt i32 %v1_f170, 215
  store i1 %v2_fb04, i1* %cpsr_c.global-to-local, align 1
  %v7_fb04 = icmp eq i32 %v1_f170, 216
  store i1 %v7_fb04, i1* %cpsr_z.global-to-local, align 1
  %v2_fb08 = xor i1 %v2_fb04, true
  %v3_fb08 = or i1 %v7_fb04, %v2_fb08
  br i1 %v3_fb08, label %bb1548, label %bb1549

bb1548:                                           ; preds = %dec_label_pc_fb00
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1549

bb1549:                                           ; preds = %dec_label_pc_fb00, %bb1548
  %v4_fb0c = phi i32 [ %.1960, %dec_label_pc_fb00 ], [ 0, %bb1548 ]
  %v2_fb0c = xor i1 %v7_fb04, true
  %v3_fb0c = and i1 %v2_fb04, %v2_fb0c
  br i1 %v3_fb0c, label %bb1550, label %thread-pre-split204

bb1550:                                           ; preds = %bb1549
  store i32 %v4_fb0c, i32* %r3.global-to-local, align 4
  br label %thread-pre-split204

thread-pre-split204:                              ; preds = %bb1549, %bb1550
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb10 = icmp eq i32 %v4_fb0c, 0
  store i1 %v2_fb10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb10, label %dec_label_pc_fb20, label %dec_label_pc_fb18

dec_label_pc_fb18:                                ; preds = %thread-pre-split204
  %v2_fb18 = icmp ugt i32 %v1_f170, 231
  store i1 %v2_fb18, i1* %cpsr_c.global-to-local, align 1
  %v7_fb18 = icmp eq i32 %v1_f170, 232
  store i1 %v7_fb18, i1* %cpsr_z.global-to-local, align 1
  %v2_fb1c = xor i1 %v2_fb18, true
  %v3_fb1c = or i1 %v7_fb18, %v2_fb1c
  br i1 %v3_fb1c, label %dec_label_pc_f158, label %dec_label_pc_fb20

dec_label_pc_fb20:                                ; preds = %dec_label_pc_fb18, %thread-pre-split204
  store i32 %.1973, i32* %r3.global-to-local, align 4
  %v2_fb24 = icmp ugt i32 %v1_f170, 250
  store i1 %v2_fb24, i1* %cpsr_c.global-to-local, align 1
  %v7_fb24 = icmp eq i32 %v1_f170, 251
  store i1 %v7_fb24, i1* %cpsr_z.global-to-local, align 1
  %v2_fb28 = xor i1 %v2_fb24, true
  %v3_fb28 = or i1 %v7_fb24, %v2_fb28
  br i1 %v3_fb28, label %bb1551, label %bb1552

bb1551:                                           ; preds = %dec_label_pc_fb20
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1552

bb1552:                                           ; preds = %dec_label_pc_fb20, %bb1551
  %v4_fb2c = phi i32 [ %.1973, %dec_label_pc_fb20 ], [ 0, %bb1551 ]
  %v2_fb2c = xor i1 %v7_fb24, true
  %v3_fb2c = and i1 %v2_fb24, %v2_fb2c
  br i1 %v3_fb2c, label %bb1553, label %thread-pre-split205

bb1553:                                           ; preds = %bb1552
  store i32 %v4_fb2c, i32* %r3.global-to-local, align 4
  br label %thread-pre-split205

thread-pre-split205:                              ; preds = %bb1552, %bb1553
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb30 = icmp eq i32 %v4_fb2c, 0
  store i1 %v2_fb30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb30, label %dec_label_pc_fb40, label %dec_label_pc_fb38

dec_label_pc_fb38:                                ; preds = %thread-pre-split205
  %v2_fb38 = icmp ugt i32 %v1_f170, 252
  store i1 %v2_fb38, i1* %cpsr_c.global-to-local, align 1
  %v7_fb38 = icmp eq i32 %v1_f170, 253
  store i1 %v7_fb38, i1* %cpsr_z.global-to-local, align 1
  %v2_fb3c = xor i1 %v2_fb38, true
  %v3_fb3c = or i1 %v7_fb38, %v2_fb3c
  br i1 %v3_fb3c, label %dec_label_pc_f158, label %dec_label_pc_fb40

dec_label_pc_fb40:                                ; preds = %dec_label_pc_fb38, %thread-pre-split205
  %v7_fb40 = icmp eq i32 %v1_f15c, 199
  %.1986 = zext i1 %v7_fb40 to i32
  store i32 %.1986, i32* %r4.global-to-local, align 4
  store i32 %.1986, i32* %r3.global-to-local, align 4
  store i1 %v2_f588, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f588, i1* %cpsr_z.global-to-local, align 1
  %v2_fb54 = xor i1 %v2_f588, true
  %v3_fb54 = or i1 %v7_f588, %v2_fb54
  br i1 %v3_fb54, label %bb1556, label %bb1557

bb1556:                                           ; preds = %dec_label_pc_fb40
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1557

bb1557:                                           ; preds = %dec_label_pc_fb40, %bb1556
  %v4_fb58 = phi i32 [ %.1986, %dec_label_pc_fb40 ], [ 0, %bb1556 ]
  %v2_fb58 = xor i1 %v7_f588, true
  %v3_fb58 = and i1 %v2_f588, %v2_fb58
  br i1 %v3_fb58, label %bb1558, label %thread-pre-split207

bb1558:                                           ; preds = %bb1557
  store i32 %v4_fb58, i32* %r3.global-to-local, align 4
  br label %thread-pre-split207

thread-pre-split207:                              ; preds = %bb1557, %bb1558
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb5c = icmp eq i32 %v4_fb58, 0
  store i1 %v2_fb5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb5c, label %dec_label_pc_fb70, label %dec_label_pc_fb68

dec_label_pc_fb68:                                ; preds = %thread-pre-split207
  %v2_fb68 = icmp ugt i32 %v1_f170, 252
  store i1 %v2_fb68, i1* %cpsr_c.global-to-local, align 1
  %v7_fb68 = icmp eq i32 %v1_f170, 253
  store i1 %v7_fb68, i1* %cpsr_z.global-to-local, align 1
  %v2_fb6c = xor i1 %v2_fb68, true
  %v3_fb6c = or i1 %v7_fb68, %v2_fb6c
  br i1 %v3_fb6c, label %dec_label_pc_f158, label %dec_label_pc_fb70

dec_label_pc_fb70:                                ; preds = %dec_label_pc_fb68, %thread-pre-split207
  store i32 %v0_107d0, i32* %r3.global-to-local, align 4
  %v2_fb74 = icmp ugt i32 %v1_f15c, 204
  store i1 %v2_fb74, i1* %cpsr_c.global-to-local, align 1
  %v7_fb74 = icmp eq i32 %v1_f15c, 205
  store i1 %v7_fb74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb74, label %.thread208, label %.thread209

.thread209:                                       ; preds = %dec_label_pc_fb70
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fb90

.thread208:                                       ; preds = %dec_label_pc_fb70
  store i32 %v0_107d0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb80 = icmp eq i32 %v0_107d0, 0
  store i1 %v2_fb80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb80, label %dec_label_pc_fb90, label %dec_label_pc_fb88

dec_label_pc_fb88:                                ; preds = %.thread208
  %v2_fb88 = icmp ugt i32 %v1_f170, 116
  store i1 %v2_fb88, i1* %cpsr_c.global-to-local, align 1
  %v7_fb88 = icmp eq i32 %v1_f170, 117
  store i1 %v7_fb88, i1* %cpsr_z.global-to-local, align 1
  %v2_fb8c = xor i1 %v2_fb88, true
  %v3_fb8c = or i1 %v7_fb88, %v2_fb8c
  br i1 %v3_fb8c, label %dec_label_pc_f158, label %dec_label_pc_fb90

dec_label_pc_fb90:                                ; preds = %.thread209, %dec_label_pc_fb88, %.thread208
  store i32 %.1966, i32* %r3.global-to-local, align 4
  store i1 %v2_f4d8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f4d8, i1* %cpsr_z.global-to-local, align 1
  %v2_fb98 = xor i1 %v2_f4d8, true
  %v3_fb98 = or i1 %v7_f4d8, %v2_fb98
  br i1 %v3_fb98, label %bb1559, label %bb1560

bb1559:                                           ; preds = %dec_label_pc_fb90
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1560

bb1560:                                           ; preds = %dec_label_pc_fb90, %bb1559
  %v4_fb9c = phi i32 [ %.1966, %dec_label_pc_fb90 ], [ 0, %bb1559 ]
  %v2_fb9c = xor i1 %v7_f4d8, true
  %v3_fb9c = and i1 %v2_f4d8, %v2_fb9c
  br i1 %v3_fb9c, label %bb1561, label %thread-pre-split212

bb1561:                                           ; preds = %bb1560
  store i32 %v4_fb9c, i32* %r3.global-to-local, align 4
  br label %thread-pre-split212

thread-pre-split212:                              ; preds = %bb1560, %bb1561
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fba0 = icmp eq i32 %v4_fb9c, 0
  store i1 %v2_fba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fba0, label %dec_label_pc_fbb0, label %dec_label_pc_fba8

dec_label_pc_fba8:                                ; preds = %thread-pre-split212
  %v2_fba8 = icmp ugt i32 %v1_f170, 60
  store i1 %v2_fba8, i1* %cpsr_c.global-to-local, align 1
  %v7_fba8 = icmp eq i32 %v1_f170, 61
  store i1 %v7_fba8, i1* %cpsr_z.global-to-local, align 1
  %v2_fbac = xor i1 %v2_fba8, true
  %v3_fbac = or i1 %v7_fba8, %v2_fbac
  br i1 %v3_fbac, label %dec_label_pc_f158, label %dec_label_pc_fbb0

dec_label_pc_fbb0:                                ; preds = %dec_label_pc_fba8, %thread-pre-split212
  store i32 %v0_fbc0, i32* %r3.global-to-local, align 4
  %v2_fbb4 = icmp ugt i32 %v1_f15c, 103
  store i1 %v2_fbb4, i1* %cpsr_c.global-to-local, align 1
  %v7_fbb4 = icmp eq i32 %v1_f15c, 104
  %.1987 = zext i1 %v7_fbb4 to i32
  store i32 %.1987, i32* %fp.global-to-local, align 4
  %v2_fbc0 = and i32 %v0_fbc0, %.1987
  %v4_fbc0 = icmp eq i32 %v2_fbc0, 0
  store i1 %v4_fbc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fbc0, label %dec_label_pc_fbd4, label %dec_label_pc_fbcc

dec_label_pc_fbcc:                                ; preds = %dec_label_pc_fbb0
  store i1 %v2_f51c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f51c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f7f4, label %dec_label_pc_f158, label %dec_label_pc_fbd4

dec_label_pc_fbd4:                                ; preds = %dec_label_pc_fbcc, %dec_label_pc_fbb0
  %v7_fbd4 = icmp eq i32 %v1_f15c, 188
  %.1988 = zext i1 %v7_fbd4 to i32
  store i32 %.1988, i32* %r4.global-to-local, align 4
  %v2_fbe0 = icmp ugt i32 %v1_f170, 165
  store i1 %v2_fbe0, i1* %cpsr_c.global-to-local, align 1
  %v7_fbe0 = icmp eq i32 %v1_f170, 166
  store i1 %v7_fbe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbe0, label %bb1566, label %dec_label_pc_fbf0

bb1566:                                           ; preds = %dec_label_pc_fbd4
  %v2_fbd4 = icmp ugt i32 %v1_f15c, 187
  store i1 %v2_fbd4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fbd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbd4, label %dec_label_pc_f158, label %dec_label_pc_fbf0

dec_label_pc_fbf0:                                ; preds = %dec_label_pc_fbd4, %bb1566
  store i32 %.1988, i32* %r3.global-to-local, align 4
  %v2_fbf4 = icmp ugt i32 %v1_f170, 225
  store i1 %v2_fbf4, i1* %cpsr_c.global-to-local, align 1
  %v7_fbf4 = icmp eq i32 %v1_f170, 226
  store i1 %v7_fbf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbf4, label %.thread218, label %.thread219

.thread219:                                       ; preds = %dec_label_pc_fbf0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc08

.thread218:                                       ; preds = %dec_label_pc_fbf0
  store i32 %.1988, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc00 = icmp eq i1 %v7_fbd4, false
  store i1 %v2_fc00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc00, label %dec_label_pc_fc08, label %dec_label_pc_f158

dec_label_pc_fc08:                                ; preds = %.thread219, %.thread218
  %v2_fc08 = icmp ugt i32 %v1_f170, 202
  store i1 %v2_fc08, i1* %cpsr_c.global-to-local, align 1
  %v7_fc08 = icmp eq i32 %v1_f170, 203
  store i1 %v7_fc08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc08, label %.thread222, label %.thread223

.thread223:                                       ; preds = %dec_label_pc_fc08
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc1c

.thread222:                                       ; preds = %dec_label_pc_fc08
  store i32 %.1983, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc14 = icmp eq i1 %v7_fa3c, false
  store i1 %v2_fc14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc14, label %dec_label_pc_fc1c, label %dec_label_pc_f158

dec_label_pc_fc1c:                                ; preds = %.thread223, %.thread222
  store i32 %.1958, i32* %r3.global-to-local, align 4
  %v2_fc20 = icmp ugt i32 %v1_f170, 242
  store i1 %v2_fc20, i1* %cpsr_c.global-to-local, align 1
  %v7_fc20 = icmp eq i32 %v1_f170, 243
  store i1 %v7_fc20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc20, label %.thread226, label %.thread227

.thread227:                                       ; preds = %dec_label_pc_fc1c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc34

.thread226:                                       ; preds = %dec_label_pc_fc1c
  store i32 %.1958, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc2c = icmp eq i1 %v7_f3c8, false
  store i1 %v2_fc2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc2c, label %dec_label_pc_fc34, label %dec_label_pc_f158

dec_label_pc_fc34:                                ; preds = %.thread227, %.thread226
  %v2_fc38 = icmp ugt i32 %v1_f15c, 44
  store i1 %v2_fc38, i1* %cpsr_c.global-to-local, align 1
  %v7_fc38 = icmp eq i32 %v1_f15c, 45
  %.1989 = zext i1 %v7_fc38 to i32
  store i32 %.1989, i32* %fp.global-to-local, align 4
  %v2_fc44 = and i32 %.1967, %.1989
  %v4_fc44 = icmp eq i32 %v2_fc44, 0
  store i1 %v4_fc44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fc44, label %dec_label_pc_fc50, label %dec_label_pc_f158

dec_label_pc_fc50:                                ; preds = %dec_label_pc_fc34
  %v7_fc50 = icmp eq i32 %v1_f15c, 178
  %.1990 = zext i1 %v7_fc50 to i32
  store i32 %.1990, i32* %r3.global-to-local, align 4
  %v2_fc5c = icmp ugt i32 %v1_f170, 61
  store i1 %v2_fc5c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc5c = icmp eq i32 %v1_f170, 62
  %storemerge1223 = zext i1 %v7_fc5c to i32
  store i32 %storemerge1223, i32* %r4.global-to-local, align 4
  %v2_fc68 = and i32 %storemerge1223, %.1990
  %v4_fc68 = icmp eq i32 %v2_fc68, 0
  store i1 %v4_fc68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fc68, label %dec_label_pc_fc78, label %dec_label_pc_f158

dec_label_pc_fc78:                                ; preds = %dec_label_pc_fc50
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 %v2_fa70, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fa70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa70, label %.thread233, label %.thread234

.thread234:                                       ; preds = %dec_label_pc_fc78
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc90

.thread233:                                       ; preds = %dec_label_pc_fc78
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc88 = icmp eq i1 %v7_fbb4, false
  store i1 %v2_fc88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc88, label %dec_label_pc_fc90, label %dec_label_pc_f158

dec_label_pc_fc90:                                ; preds = %.thread234, %.thread233
  store i32 %.1987, i32* %r3.global-to-local, align 4
  %v2_fc94 = icmp ugt i32 %v1_f170, 235
  store i1 %v2_fc94, i1* %cpsr_c.global-to-local, align 1
  %v7_fc94 = icmp eq i32 %v1_f170, 236
  store i1 %v7_fc94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc94, label %.thread237, label %.thread238

.thread238:                                       ; preds = %dec_label_pc_fc90
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fca8

.thread237:                                       ; preds = %dec_label_pc_fc90
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fca0 = icmp eq i1 %v7_fbb4, false
  store i1 %v2_fca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fca0, label %dec_label_pc_fca8, label %dec_label_pc_f158

dec_label_pc_fca8:                                ; preds = %.thread238, %.thread237
  %v7_fca8 = icmp eq i32 %v1_f15c, 107
  %.1991 = zext i1 %v7_fca8 to i32
  store i32 %.1991, i32* %fp.global-to-local, align 4
  %v2_fcb4 = icmp ugt i32 %v1_f170, 169
  store i1 %v2_fcb4, i1* %cpsr_c.global-to-local, align 1
  %v7_fcb4 = icmp eq i32 %v1_f170, 170
  %storemerge1225 = zext i1 %v7_fcb4 to i32
  %v2_fcc0 = and i32 %storemerge1225, %.1991
  %v4_fcc0 = icmp eq i32 %v2_fcc0, 0
  store i1 %v4_fcc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fcc0, label %dec_label_pc_fcd0, label %dec_label_pc_f158

dec_label_pc_fcd0:                                ; preds = %dec_label_pc_fca8
  store i32 %.1978, i32* %r3.global-to-local, align 4
  store i1 %v2_f8f4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f8f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f8f4, label %.thread243, label %.thread244

.thread244:                                       ; preds = %dec_label_pc_fcd0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fce8

.thread243:                                       ; preds = %dec_label_pc_fcd0
  store i32 %.1978, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fce0 = icmp eq i1 %v7_f7b0, false
  store i1 %v2_fce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fce0, label %dec_label_pc_fce8, label %dec_label_pc_f158

dec_label_pc_fce8:                                ; preds = %.thread244, %.thread243
  store i32 %.1962, i32* %r3.global-to-local, align 4
  store i32 %.1978, i32* %r4.global-to-local, align 4
  %v2_fcf0 = and i32 %.1962, %.1978
  %v4_fcf0 = icmp eq i32 %v2_fcf0, 0
  store i1 %v4_fcf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fcf0, label %dec_label_pc_fcf8, label %dec_label_pc_f158

dec_label_pc_fcf8:                                ; preds = %dec_label_pc_fce8
  store i32 %.1964, i32* %fp.global-to-local, align 4
  %v2_fd00 = and i32 %.1964, %.1979
  %v4_fd00 = icmp eq i32 %v2_fd00, 0
  store i1 %v4_fd00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fd00, label %dec_label_pc_fd08, label %dec_label_pc_f158

dec_label_pc_fd08:                                ; preds = %dec_label_pc_fcf8
  %v2_fd08 = icmp ugt i32 %v1_f170, 184
  store i1 %v2_fd08, i1* %cpsr_c.global-to-local, align 1
  %v7_fd08 = icmp eq i32 %v1_f170, 185
  store i1 %v7_fd08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd08, label %.thread247, label %.thread248

.thread248:                                       ; preds = %dec_label_pc_fd08
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd30

.thread247:                                       ; preds = %dec_label_pc_fd08
  store i32 %.1946, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd14 = icmp eq i1 %v7_f218, false
  store i1 %v2_fd14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd14, label %dec_label_pc_fd30, label %dec_label_pc_fd1c

dec_label_pc_fd1c:                                ; preds = %.thread247
  %v2_fd1c = icmp ugt i32 %v1_f174, 189
  store i1 %v2_fd1c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd1c = icmp eq i32 %v1_f174, 190
  store i1 %v7_fd1c, i1* %cpsr_z.global-to-local, align 1
  %v2_fd20 = xor i1 %v7_fd1c, true
  %v3_fd20 = and i1 %v2_fd1c, %v2_fd20
  br i1 %v3_fd20, label %bb1577, label %bb1578

bb1577:                                           ; preds = %dec_label_pc_fd1c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1578

bb1578:                                           ; preds = %dec_label_pc_fd1c, %bb1577
  %v0_fd28838 = phi i32 [ %.1946, %dec_label_pc_fd1c ], [ 0, %bb1577 ]
  %v2_fd24 = xor i1 %v2_fd1c, true
  %v3_fd24 = or i1 %v7_fd1c, %v2_fd24
  br i1 %v3_fd24, label %bb1579, label %bb1580

bb1579:                                           ; preds = %bb1578
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1580

bb1580:                                           ; preds = %bb1578, %bb1579
  %v0_fd28 = phi i32 [ %v0_fd28838, %bb1578 ], [ 1, %bb1579 ]
  %v2_fd28 = and i32 %v3_f164, 64
  %v3_fd28 = icmp ne i32 %v2_fd28, 0
  store i1 %v3_fd28, i1* %cpsr_c.global-to-local, align 1
  %v4_fd28 = udiv i32 %v1_f174, 128
  %v5_fd28 = and i32 %v0_fd28, %v4_fd28
  store i32 %v5_fd28, i32* %r3.global-to-local, align 4
  %v6_fd28 = icmp eq i32 %v5_fd28, 0
  store i1 %v6_fd28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fd28, label %dec_label_pc_fd30, label %dec_label_pc_f158

dec_label_pc_fd30:                                ; preds = %.thread248, %bb1580, %.thread247
  %v2_fd30 = icmp ugt i32 %v1_f170, 46
  store i1 %v2_fd30, i1* %cpsr_c.global-to-local, align 1
  %v7_fd30 = icmp eq i32 %v1_f170, 47
  %.1992 = zext i1 %v7_fd30 to i32
  %v2_fd3c = and i32 %.1992, %.1985
  %v4_fd3c = icmp eq i32 %v2_fd3c, 0
  store i1 %v4_fd3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fd3c, label %dec_label_pc_fd60, label %dec_label_pc_fd44

dec_label_pc_fd44:                                ; preds = %dec_label_pc_fd30
  %v2_fd44 = icmp ugt i32 %v1_f174, 8
  store i1 %v2_fd44, i1* %cpsr_c.global-to-local, align 1
  %v7_fd44 = icmp eq i32 %v1_f174, 9
  store i1 %v7_fd44, i1* %cpsr_z.global-to-local, align 1
  %v2_fd48 = xor i1 %v2_fd44, true
  %v3_fd48 = or i1 %v7_fd44, %v2_fd48
  br i1 %v3_fd48, label %bb1583, label %bb1584

bb1583:                                           ; preds = %dec_label_pc_fd44
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1584

bb1584:                                           ; preds = %dec_label_pc_fd44, %bb1583
  %v2_fd4c = xor i1 %v7_fd44, true
  %v3_fd4c = and i1 %v2_fd44, %v2_fd4c
  br i1 %v3_fd4c, label %bb1585, label %bb1586

bb1585:                                           ; preds = %bb1584
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1586

bb1586:                                           ; preds = %bb1584, %bb1585
  %v0_fd58.pr = phi i32 [ 0, %bb1584 ], [ 1, %bb1585 ]
  %v2_fd50 = icmp ugt i32 %v1_f174, 9
  store i1 %v2_fd50, i1* %cpsr_c.global-to-local, align 1
  %v7_fd50 = icmp eq i32 %v1_f174, 10
  store i1 %v7_fd50, i1* %cpsr_z.global-to-local, align 1
  %v2_fd54 = xor i1 %v7_fd50, true
  %v3_fd54 = and i1 %v2_fd50, %v2_fd54
  br i1 %v3_fd54, label %.thread253, label %bb1587

.thread253:                                       ; preds = %bb1586
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd60

bb1587:                                           ; preds = %bb1586
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd58 = icmp eq i32 %v0_fd58.pr, 0
  store i1 %v2_fd58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd58, label %dec_label_pc_fd60, label %dec_label_pc_f158

dec_label_pc_fd60:                                ; preds = %.thread253, %bb1587, %dec_label_pc_fd30
  %v2_fd60 = icmp ugt i32 %v1_f15c, 173
  store i1 %v2_fd60, i1* %cpsr_c.global-to-local, align 1
  %v7_fd60 = icmp eq i32 %v1_f15c, 174
  store i1 %v7_fd60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd60, label %bb1588, label %dec_label_pc_fd84

bb1588:                                           ; preds = %dec_label_pc_fd60
  %v3_fd64 = icmp ugt i32 %v1_f170, 137
  store i1 %v3_fd64, i1* %cpsr_c.global-to-local, align 1
  %v8_fd64 = icmp eq i32 %v1_f170, 138
  store i1 %v8_fd64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fd64, label %dec_label_pc_fd6c, label %dec_label_pc_fd84

dec_label_pc_fd6c:                                ; preds = %bb1588
  store i32 %v1_f174, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd6c = icmp eq i32 %v1_f174, 0
  store i1 %v2_fd6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd6c, label %bb1590, label %bb1589

bb1589:                                           ; preds = %dec_label_pc_fd6c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1590

bb1590:                                           ; preds = %dec_label_pc_fd6c, %bb1589
  %v0_fd7c.pr = phi i32 [ 0, %dec_label_pc_fd6c ], [ 1, %bb1589 ]
  %v2_fd74 = icmp ugt i32 %v1_f174, 125
  store i1 %v2_fd74, i1* %cpsr_c.global-to-local, align 1
  %v7_fd74 = icmp eq i32 %v1_f174, 126
  store i1 %v7_fd74, i1* %cpsr_z.global-to-local, align 1
  %v2_fd78 = xor i1 %v7_fd74, true
  %v3_fd78 = and i1 %v2_fd74, %v2_fd78
  br i1 %v3_fd78, label %.thread258, label %bb1591

.thread258:                                       ; preds = %bb1590
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd84

bb1591:                                           ; preds = %bb1590
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd7c = icmp eq i32 %v0_fd7c.pr, 0
  store i1 %v2_fd7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd7c, label %dec_label_pc_fd84, label %dec_label_pc_f158

dec_label_pc_fd84:                                ; preds = %dec_label_pc_fd60, %.thread258, %bb1591, %bb1588
  %v2_fd84 = icmp ugt i32 %v1_f170, 240
  store i1 %v2_fd84, i1* %cpsr_c.global-to-local, align 1
  %v7_fd84 = icmp eq i32 %v1_f170, 241
  store i1 %v7_fd84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd84, label %.thread261, label %.thread262

.thread262:                                       ; preds = %dec_label_pc_fd84
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fda8

.thread261:                                       ; preds = %dec_label_pc_fd84
  store i32 %.1945, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd90 = icmp eq i1 %v7_f200, false
  store i1 %v2_fd90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd90, label %dec_label_pc_fda8, label %dec_label_pc_fd98

dec_label_pc_fd98:                                ; preds = %.thread261
  %v1_fd98 = add nsw i32 %v1_f174, -255
  store i32 %v1_fd98, i32* %r3.global-to-local, align 4
  %v2_fd98 = icmp eq i32 %v1_f174, 255
  store i1 %v2_fd98, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fd98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd98, label %bb1593, label %bb1592

bb1592:                                           ; preds = %dec_label_pc_fd98
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1593

bb1593:                                           ; preds = %dec_label_pc_fd98, %bb1592
  %v0_fda0 = phi i32 [ %v1_fd98, %dec_label_pc_fd98 ], [ 1, %bb1592 ]
  %v2_fda0 = and i32 %v3_f164, 64
  %v3_fda0 = icmp ne i32 %v2_fda0, 0
  store i1 %v3_fda0, i1* %cpsr_c.global-to-local, align 1
  %v4_fda0 = udiv i32 %v1_f174, 128
  %v5_fda0 = and i32 %v0_fda0, %v4_fda0
  store i32 %v5_fda0, i32* %r3.global-to-local, align 4
  %v6_fda0 = icmp eq i32 %v5_fda0, 0
  store i1 %v6_fda0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fda0, label %dec_label_pc_fda8, label %dec_label_pc_f158

dec_label_pc_fda8:                                ; preds = %.thread262, %bb1593, %.thread261
  store i32 %.1974, i32* %r3.global-to-local, align 4
  %v2_fdac = icmp ugt i32 %v1_f170, 198
  store i1 %v2_fdac, i1* %cpsr_c.global-to-local, align 1
  %v7_fdac = icmp eq i32 %v1_f170, 199
  store i1 %v7_fdac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdac, label %.thread265, label %.thread266

.thread266:                                       ; preds = %dec_label_pc_fda8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fddc

.thread265:                                       ; preds = %dec_label_pc_fda8
  store i32 %.1974, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fdb8 = icmp eq i1 %v7_f65c, false
  store i1 %v2_fdb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdb8, label %dec_label_pc_fddc, label %dec_label_pc_fdc0

dec_label_pc_fdc0:                                ; preds = %.thread265
  %v2_fdc0 = icmp ugt i32 %v1_f174, 62
  store i1 %v2_fdc0, i1* %cpsr_c.global-to-local, align 1
  %v7_fdc0 = icmp eq i32 %v1_f174, 63
  store i1 %v7_fdc0, i1* %cpsr_z.global-to-local, align 1
  %v2_fdc4 = xor i1 %v2_fdc0, true
  %v3_fdc4 = or i1 %v7_fdc0, %v2_fdc4
  br i1 %v3_fdc4, label %bb1594, label %bb1595

bb1594:                                           ; preds = %dec_label_pc_fdc0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1595

bb1595:                                           ; preds = %dec_label_pc_fdc0, %bb1594
  %v0_fdd4.pr848 = phi i32 [ %.1974, %dec_label_pc_fdc0 ], [ 0, %bb1594 ]
  %v2_fdc8 = xor i1 %v7_fdc0, true
  %v3_fdc8 = and i1 %v2_fdc0, %v2_fdc8
  br i1 %v3_fdc8, label %bb1596, label %bb1597

bb1596:                                           ; preds = %bb1595
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1597

bb1597:                                           ; preds = %bb1595, %bb1596
  %v0_fdd4.pr = phi i32 [ %v0_fdd4.pr848, %bb1595 ], [ 1, %bb1596 ]
  %v2_fdcc = icmp ugt i32 %v1_f174, 125
  store i1 %v2_fdcc, i1* %cpsr_c.global-to-local, align 1
  %v7_fdcc = icmp eq i32 %v1_f174, 126
  store i1 %v7_fdcc, i1* %cpsr_z.global-to-local, align 1
  %v2_fdd0 = xor i1 %v7_fdcc, true
  %v3_fdd0 = and i1 %v2_fdcc, %v2_fdd0
  br i1 %v3_fdd0, label %.thread270, label %bb1598

.thread270:                                       ; preds = %bb1597
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fddc

bb1598:                                           ; preds = %bb1597
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fdd4 = icmp eq i32 %v0_fdd4.pr, 0
  store i1 %v2_fdd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdd4, label %dec_label_pc_fddc, label %dec_label_pc_f158

dec_label_pc_fddc:                                ; preds = %.thread270, %.thread266, %bb1598, %.thread265
  store i32 %.1974, i32* %r3.global-to-local, align 4
  %v2_fde0 = icmp ugt i32 %v1_f170, 210
  store i1 %v2_fde0, i1* %cpsr_c.global-to-local, align 1
  %v7_fde0 = icmp eq i32 %v1_f170, 211
  store i1 %v7_fde0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fde0, label %.thread273, label %.thread274

.thread274:                                       ; preds = %dec_label_pc_fddc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe10

.thread273:                                       ; preds = %dec_label_pc_fddc
  store i32 %.1974, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fdec = icmp eq i1 %v7_f65c, false
  store i1 %v2_fdec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdec, label %dec_label_pc_fe10, label %dec_label_pc_fdf4

dec_label_pc_fdf4:                                ; preds = %.thread273
  %v2_fdf4 = icmp ugt i32 %v1_f174, 94
  store i1 %v2_fdf4, i1* %cpsr_c.global-to-local, align 1
  %v7_fdf4 = icmp eq i32 %v1_f174, 95
  store i1 %v7_fdf4, i1* %cpsr_z.global-to-local, align 1
  %v2_fdf8 = xor i1 %v2_fdf4, true
  %v3_fdf8 = or i1 %v7_fdf4, %v2_fdf8
  br i1 %v3_fdf8, label %bb1599, label %bb1600

bb1599:                                           ; preds = %dec_label_pc_fdf4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1600

bb1600:                                           ; preds = %dec_label_pc_fdf4, %bb1599
  %v0_fe08.pr851 = phi i32 [ %.1974, %dec_label_pc_fdf4 ], [ 0, %bb1599 ]
  %v2_fdfc = xor i1 %v7_fdf4, true
  %v3_fdfc = and i1 %v2_fdf4, %v2_fdfc
  br i1 %v3_fdfc, label %bb1601, label %bb1602

bb1601:                                           ; preds = %bb1600
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1602

bb1602:                                           ; preds = %bb1600, %bb1601
  %v0_fe08.pr = phi i32 [ %v0_fe08.pr851, %bb1600 ], [ 1, %bb1601 ]
  %v2_fe00 = icmp ugt i32 %v1_f174, 125
  store i1 %v2_fe00, i1* %cpsr_c.global-to-local, align 1
  %v7_fe00 = icmp eq i32 %v1_f174, 126
  store i1 %v7_fe00, i1* %cpsr_z.global-to-local, align 1
  %v2_fe04 = xor i1 %v7_fe00, true
  %v3_fe04 = and i1 %v2_fe00, %v2_fe04
  br i1 %v3_fe04, label %.thread278, label %bb1603

.thread278:                                       ; preds = %bb1602
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe10

bb1603:                                           ; preds = %bb1602
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe08 = icmp eq i32 %v0_fe08.pr, 0
  store i1 %v2_fe08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe08, label %dec_label_pc_fe10, label %dec_label_pc_f158

dec_label_pc_fe10:                                ; preds = %.thread278, %.thread274, %bb1603, %.thread273
  store i32 %.1966, i32* %r3.global-to-local, align 4
  %v2_fe14 = and i32 %.1949, %.1966
  %v4_fe14 = icmp eq i32 %v2_fe14, 0
  store i1 %v4_fe14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fe14, label %dec_label_pc_fe28, label %dec_label_pc_fe1c

dec_label_pc_fe1c:                                ; preds = %dec_label_pc_fe10
  %v2_fe1c = icmp eq i32 %v1_f174, 255
  store i1 %v2_fe1c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fe1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe1c, label %dec_label_pc_fe28, label %bb1604

bb1604:                                           ; preds = %dec_label_pc_fe1c
  %v3_fe20 = icmp ugt i32 %v1_f174, 190
  store i1 %v3_fe20, i1* %cpsr_c.global-to-local, align 1
  %v8_fe20 = icmp eq i32 %v1_f174, 191
  store i1 %v8_fe20, i1* %cpsr_z.global-to-local, align 1
  %v2_fe24 = xor i1 %v8_fe20, true
  %v3_fe24 = and i1 %v3_fe20, %v2_fe24
  br i1 %v3_fe24, label %dec_label_pc_f158, label %dec_label_pc_fe28

dec_label_pc_fe28:                                ; preds = %dec_label_pc_fe1c, %bb1604, %dec_label_pc_fe10
  %v7_fe28 = icmp eq i32 %v1_f15c, 37
  %.1993 = zext i1 %v7_fe28 to i32
  store i32 %.1993, i32* %sl.global-to-local, align 4
  %v2_fe34 = icmp ugt i32 %v1_f170, 138
  store i1 %v2_fe34, i1* %cpsr_c.global-to-local, align 1
  %v7_fe34 = icmp eq i32 %v1_f170, 139
  store i1 %v7_fe34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe34, label %bb1607, label %dec_label_pc_fe58

bb1607:                                           ; preds = %dec_label_pc_fe28
  %v2_fe28 = icmp ugt i32 %v1_f15c, 36
  store i1 %v2_fe28, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fe28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe28, label %dec_label_pc_fe40, label %dec_label_pc_fe58

dec_label_pc_fe40:                                ; preds = %bb1607
  store i32 %v1_f174, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe40 = icmp eq i32 %v1_f174, 0
  store i1 %v2_fe40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe40, label %bb1609, label %bb1608

bb1608:                                           ; preds = %dec_label_pc_fe40
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1609

bb1609:                                           ; preds = %dec_label_pc_fe40, %bb1608
  %v0_fe50.pr = phi i32 [ 0, %dec_label_pc_fe40 ], [ 1, %bb1608 ]
  %v2_fe48 = icmp ugt i32 %v1_f174, 29
  store i1 %v2_fe48, i1* %cpsr_c.global-to-local, align 1
  %v7_fe48 = icmp eq i32 %v1_f174, 30
  store i1 %v7_fe48, i1* %cpsr_z.global-to-local, align 1
  %v2_fe4c = xor i1 %v7_fe48, true
  %v3_fe4c = and i1 %v2_fe48, %v2_fe4c
  br i1 %v3_fe4c, label %.thread284, label %bb1610

.thread284:                                       ; preds = %bb1609
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe58

bb1610:                                           ; preds = %bb1609
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe50 = icmp eq i32 %v0_fe50.pr, 0
  store i1 %v2_fe50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe50, label %dec_label_pc_fe58, label %dec_label_pc_f158

dec_label_pc_fe58:                                ; preds = %dec_label_pc_fe28, %.thread284, %bb1610, %bb1607
  %v0_fe84.pr857 = phi i32 [ %.1966, %dec_label_pc_fe28 ], [ 0, %.thread284 ], [ 0, %bb1610 ], [ %.1966, %bb1607 ]
  %v7_fe58 = icmp eq i32 %v1_f15c, 67
  %.1994 = zext i1 %v7_fe58 to i32
  %v2_fe64 = icmp ugt i32 %v1_f170, 206
  store i1 %v2_fe64, i1* %cpsr_c.global-to-local, align 1
  %v7_fe64 = icmp eq i32 %v1_f170, 207
  store i1 %v7_fe64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe64, label %bb1613, label %dec_label_pc_fe8c

bb1613:                                           ; preds = %dec_label_pc_fe58
  %v2_fe58 = icmp ugt i32 %v1_f15c, 66
  store i1 %v2_fe58, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fe58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe58, label %dec_label_pc_fe70, label %dec_label_pc_fe8c

dec_label_pc_fe70:                                ; preds = %bb1613
  %v2_fe70 = icmp ugt i32 %v1_f174, 62
  store i1 %v2_fe70, i1* %cpsr_c.global-to-local, align 1
  %v7_fe70 = icmp eq i32 %v1_f174, 63
  store i1 %v7_fe70, i1* %cpsr_z.global-to-local, align 1
  %v2_fe74 = xor i1 %v2_fe70, true
  %v3_fe74 = or i1 %v7_fe70, %v2_fe74
  br i1 %v3_fe74, label %bb1614, label %bb1615

bb1614:                                           ; preds = %dec_label_pc_fe70
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1615

bb1615:                                           ; preds = %dec_label_pc_fe70, %bb1614
  %v0_fe84.pr856 = phi i32 [ %v0_fe84.pr857, %dec_label_pc_fe70 ], [ 0, %bb1614 ]
  %v2_fe78 = xor i1 %v7_fe70, true
  %v3_fe78 = and i1 %v2_fe70, %v2_fe78
  br i1 %v3_fe78, label %bb1616, label %bb1617

bb1616:                                           ; preds = %bb1615
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1617

bb1617:                                           ; preds = %bb1615, %bb1616
  %v0_fe84.pr = phi i32 [ %v0_fe84.pr856, %bb1615 ], [ 1, %bb1616 ]
  %v2_fe7c = icmp ugt i32 %v1_f174, 93
  store i1 %v2_fe7c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe7c = icmp eq i32 %v1_f174, 94
  store i1 %v7_fe7c, i1* %cpsr_z.global-to-local, align 1
  %v2_fe80 = xor i1 %v7_fe7c, true
  %v3_fe80 = and i1 %v2_fe7c, %v2_fe80
  br i1 %v3_fe80, label %.thread290, label %bb1618

.thread290:                                       ; preds = %bb1617
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe8c

bb1618:                                           ; preds = %bb1617
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe84 = icmp eq i32 %v0_fe84.pr, 0
  store i1 %v2_fe84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe84, label %dec_label_pc_fe8c, label %dec_label_pc_f158

dec_label_pc_fe8c:                                ; preds = %dec_label_pc_fe58, %.thread290, %bb1618, %bb1613
  %v2_fe8c = icmp ugt i32 %v1_f170, 204
  store i1 %v2_fe8c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe8c = icmp eq i32 %v1_f170, 205
  store i1 %v7_fe8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe8c, label %.thread293, label %.thread294

.thread294:                                       ; preds = %dec_label_pc_fe8c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_feb4

.thread293:                                       ; preds = %dec_label_pc_fe8c
  store i32 %.1994, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe98 = icmp eq i1 %v7_fe58, false
  store i1 %v2_fe98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe98, label %dec_label_pc_feb4, label %dec_label_pc_fea0

dec_label_pc_fea0:                                ; preds = %.thread293
  %v2_fea0 = icmp ugt i32 %v1_f174, 189
  store i1 %v2_fea0, i1* %cpsr_c.global-to-local, align 1
  %v7_fea0 = icmp eq i32 %v1_f174, 190
  store i1 %v7_fea0, i1* %cpsr_z.global-to-local, align 1
  %v2_fea4 = xor i1 %v7_fea0, true
  %v3_fea4 = and i1 %v2_fea0, %v2_fea4
  br i1 %v3_fea4, label %bb1619, label %bb1620

bb1619:                                           ; preds = %dec_label_pc_fea0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1620

bb1620:                                           ; preds = %dec_label_pc_fea0, %bb1619
  %v0_feac860 = phi i32 [ %.1994, %dec_label_pc_fea0 ], [ 0, %bb1619 ]
  %v2_fea8 = xor i1 %v2_fea0, true
  %v3_fea8 = or i1 %v7_fea0, %v2_fea8
  br i1 %v3_fea8, label %bb1621, label %bb1622

bb1621:                                           ; preds = %bb1620
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1622

bb1622:                                           ; preds = %bb1620, %bb1621
  %v0_feac = phi i32 [ %v0_feac860, %bb1620 ], [ 1, %bb1621 ]
  %v2_feac = and i32 %v3_f164, 64
  %v3_feac = icmp ne i32 %v2_feac, 0
  store i1 %v3_feac, i1* %cpsr_c.global-to-local, align 1
  %v4_feac = udiv i32 %v1_f174, 128
  %v5_feac = and i32 %v0_feac, %v4_feac
  store i32 %v5_feac, i32* %r3.global-to-local, align 4
  %v6_feac = icmp eq i32 %v5_feac, 0
  store i1 %v6_feac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_feac, label %dec_label_pc_feb4, label %dec_label_pc_f158

dec_label_pc_feb4:                                ; preds = %.thread294, %bb1622, %.thread293
  store i32 %.1969, i32* %r3.global-to-local, align 4
  %v2_feb8 = icmp ugt i32 %v1_f170, 239
  store i1 %v2_feb8, i1* %cpsr_c.global-to-local, align 1
  %v7_feb8 = icmp eq i32 %v1_f170, 240
  store i1 %v7_feb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_feb8, label %.thread297, label %.thread298

.thread298:                                       ; preds = %dec_label_pc_feb4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fee0

.thread297:                                       ; preds = %dec_label_pc_feb4
  store i32 %.1969, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fec4 = icmp eq i1 %v7_f568, false
  store i1 %v2_fec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fec4, label %dec_label_pc_fee0, label %dec_label_pc_fecc

dec_label_pc_fecc:                                ; preds = %.thread297
  %v2_fecc = icmp ugt i32 %v1_f174, 141
  store i1 %v2_fecc, i1* %cpsr_c.global-to-local, align 1
  %v7_fecc = icmp eq i32 %v1_f174, 142
  store i1 %v7_fecc, i1* %cpsr_z.global-to-local, align 1
  %v2_fed0 = xor i1 %v7_fecc, true
  %v3_fed0 = and i1 %v2_fecc, %v2_fed0
  br i1 %v3_fed0, label %bb1623, label %bb1624

bb1623:                                           ; preds = %dec_label_pc_fecc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1624

bb1624:                                           ; preds = %dec_label_pc_fecc, %bb1623
  %v0_fed8863 = phi i32 [ %.1969, %dec_label_pc_fecc ], [ 0, %bb1623 ]
  %v2_fed4 = xor i1 %v2_fecc, true
  %v3_fed4 = or i1 %v7_fecc, %v2_fed4
  br i1 %v3_fed4, label %bb1625, label %bb1626

bb1625:                                           ; preds = %bb1624
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1626

bb1626:                                           ; preds = %bb1624, %bb1625
  %v0_fed8 = phi i32 [ %v0_fed8863, %bb1624 ], [ 1, %bb1625 ]
  %v2_fed8 = and i32 %v3_f164, 64
  %v3_fed8 = icmp ne i32 %v2_fed8, 0
  store i1 %v3_fed8, i1* %cpsr_c.global-to-local, align 1
  %v4_fed8 = udiv i32 %v1_f174, 128
  %v5_fed8 = and i32 %v0_fed8, %v4_fed8
  store i32 %v5_fed8, i32* %r3.global-to-local, align 4
  %v6_fed8 = icmp eq i32 %v5_fed8, 0
  store i1 %v6_fed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fed8, label %dec_label_pc_fee0, label %dec_label_pc_f158

dec_label_pc_fee0:                                ; preds = %.thread298, %bb1626, %.thread297
  store i32 %.1954, i32* %r3.global-to-local, align 4
  %v2_fee4 = icmp ugt i32 %v1_f15c, 81
  store i1 %v2_fee4, i1* %cpsr_c.global-to-local, align 1
  %v7_fee4 = icmp eq i32 %v1_f15c, 82
  store i1 %v7_fee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fee4, label %.thread301, label %.thread302

.thread302:                                       ; preds = %dec_label_pc_fee0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff10

.thread301:                                       ; preds = %dec_label_pc_fee0
  store i32 %.1954, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fef0 = icmp eq i1 %v7_f330, false
  store i1 %v2_fef0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fef0, label %dec_label_pc_ff10, label %dec_label_pc_fef8

dec_label_pc_fef8:                                ; preds = %.thread301
  store i32 %v1_f174, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fef8 = icmp eq i32 %v1_f174, 0
  store i1 %v2_fef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fef8, label %bb1628, label %bb1627

bb1627:                                           ; preds = %dec_label_pc_fef8
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1628

bb1628:                                           ; preds = %dec_label_pc_fef8, %bb1627
  %v0_ff08.pr = phi i32 [ 0, %dec_label_pc_fef8 ], [ 1, %bb1627 ]
  %v2_ff00 = icmp ugt i32 %v1_f174, 13
  store i1 %v2_ff00, i1* %cpsr_c.global-to-local, align 1
  %v7_ff00 = icmp eq i32 %v1_f174, 14
  store i1 %v7_ff00, i1* %cpsr_z.global-to-local, align 1
  %v2_ff04 = xor i1 %v7_ff00, true
  %v3_ff04 = and i1 %v2_ff00, %v2_ff04
  br i1 %v3_ff04, label %.thread306, label %bb1629

.thread306:                                       ; preds = %bb1628
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff10

bb1629:                                           ; preds = %bb1628
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff08 = icmp eq i32 %v0_ff08.pr, 0
  store i1 %v2_ff08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff08, label %dec_label_pc_ff10, label %dec_label_pc_f158

dec_label_pc_ff10:                                ; preds = %.thread306, %.thread302, %bb1629, %.thread301
  store i32 %.1963, i32* %r3.global-to-local, align 4
  %v2_ff14 = icmp ugt i32 %v1_f15c, 94
  store i1 %v2_ff14, i1* %cpsr_c.global-to-local, align 1
  %v7_ff14 = icmp eq i32 %v1_f15c, 95
  store i1 %v7_ff14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff14, label %.thread309, label %.thread310

.thread310:                                       ; preds = %dec_label_pc_ff10
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff44

.thread309:                                       ; preds = %dec_label_pc_ff10
  store i32 %.1963, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff20 = icmp eq i1 %v7_f4ac, false
  store i1 %v2_ff20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff20, label %dec_label_pc_ff44, label %dec_label_pc_ff28

dec_label_pc_ff28:                                ; preds = %.thread309
  %v2_ff28 = icmp ugt i32 %v1_f174, 6
  store i1 %v2_ff28, i1* %cpsr_c.global-to-local, align 1
  %v7_ff28 = icmp eq i32 %v1_f174, 7
  store i1 %v7_ff28, i1* %cpsr_z.global-to-local, align 1
  %v2_ff2c = xor i1 %v2_ff28, true
  %v3_ff2c = or i1 %v7_ff28, %v2_ff2c
  br i1 %v3_ff2c, label %bb1630, label %bb1631

bb1630:                                           ; preds = %dec_label_pc_ff28
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1631

bb1631:                                           ; preds = %dec_label_pc_ff28, %bb1630
  %v0_ff3c.pr868 = phi i32 [ %.1963, %dec_label_pc_ff28 ], [ 0, %bb1630 ]
  %v2_ff30 = xor i1 %v7_ff28, true
  %v3_ff30 = and i1 %v2_ff28, %v2_ff30
  br i1 %v3_ff30, label %bb1632, label %bb1633

bb1632:                                           ; preds = %bb1631
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1633

bb1633:                                           ; preds = %bb1631, %bb1632
  %v0_ff3c.pr = phi i32 [ %v0_ff3c.pr868, %bb1631 ], [ 1, %bb1632 ]
  %v2_ff34 = icmp ugt i32 %v1_f174, 61
  store i1 %v2_ff34, i1* %cpsr_c.global-to-local, align 1
  %v7_ff34 = icmp eq i32 %v1_f174, 62
  store i1 %v7_ff34, i1* %cpsr_z.global-to-local, align 1
  %v2_ff38 = xor i1 %v7_ff34, true
  %v3_ff38 = and i1 %v2_ff34, %v2_ff38
  br i1 %v3_ff38, label %.thread314, label %bb1634

.thread314:                                       ; preds = %bb1633
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff44

bb1634:                                           ; preds = %bb1633
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff3c = icmp eq i32 %v0_ff3c.pr, 0
  store i1 %v2_ff3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff3c, label %dec_label_pc_ff44, label %dec_label_pc_f158

dec_label_pc_ff44:                                ; preds = %.thread314, %.thread310, %bb1634, %.thread309
  store i32 %.1971, i32* %fp.global-to-local, align 4
  store i1 %v2_f910, i1* %cpsr_c.global-to-local, align 1
  %.1995 = zext i1 %v7_f910 to i32
  store i32 %.1995, i32* %r4.global-to-local, align 4
  %v2_ff54 = and i32 %.1995, %.1971
  %v4_ff54 = icmp eq i32 %v2_ff54, 0
  store i1 %v4_ff54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ff54, label %dec_label_pc_ff78, label %dec_label_pc_ff5c

dec_label_pc_ff5c:                                ; preds = %dec_label_pc_ff44
  %v2_ff5c = icmp ugt i32 %v1_f174, 30
  store i1 %v2_ff5c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff5c = icmp eq i32 %v1_f174, 31
  store i1 %v7_ff5c, i1* %cpsr_z.global-to-local, align 1
  %v2_ff60 = xor i1 %v2_ff5c, true
  %v3_ff60 = or i1 %v7_ff5c, %v2_ff60
  br i1 %v3_ff60, label %bb1637, label %bb1638

bb1637:                                           ; preds = %dec_label_pc_ff5c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1638

bb1638:                                           ; preds = %dec_label_pc_ff5c, %bb1637
  %v2_ff64 = xor i1 %v7_ff5c, true
  %v3_ff64 = and i1 %v2_ff5c, %v2_ff64
  br i1 %v3_ff64, label %bb1639, label %bb1640

bb1639:                                           ; preds = %bb1638
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1640

bb1640:                                           ; preds = %bb1638, %bb1639
  %v0_ff70.pr = phi i32 [ 0, %bb1638 ], [ 1, %bb1639 ]
  %v2_ff68 = icmp ugt i32 %v1_f174, 41
  store i1 %v2_ff68, i1* %cpsr_c.global-to-local, align 1
  %v7_ff68 = icmp eq i32 %v1_f174, 42
  store i1 %v7_ff68, i1* %cpsr_z.global-to-local, align 1
  %v2_ff6c = xor i1 %v7_ff68, true
  %v3_ff6c = and i1 %v2_ff68, %v2_ff6c
  br i1 %v3_ff6c, label %.thread319, label %bb1641

.thread319:                                       ; preds = %bb1640
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff78

bb1641:                                           ; preds = %bb1640
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff70 = icmp eq i32 %v0_ff70.pr, 0
  store i1 %v2_ff70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff70, label %dec_label_pc_ff78, label %dec_label_pc_f158

dec_label_pc_ff78:                                ; preds = %.thread319, %bb1641, %dec_label_pc_ff44
  %v7_ff78 = icmp eq i32 %v1_f15c, 185
  %.1996 = zext i1 %v7_ff78 to i32
  %v2_ff84 = icmp ugt i32 %v1_f170, 91
  store i1 %v2_ff84, i1* %cpsr_c.global-to-local, align 1
  %v7_ff84 = icmp eq i32 %v1_f170, 92
  store i1 %v7_ff84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff84, label %bb1644, label %dec_label_pc_ffac

bb1644:                                           ; preds = %dec_label_pc_ff78
  %v2_ff78 = icmp ugt i32 %v1_f15c, 184
  store i1 %v2_ff78, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ff78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff78, label %dec_label_pc_ff90, label %dec_label_pc_ffac

dec_label_pc_ff90:                                ; preds = %bb1644
  %v2_ff90 = icmp ugt i32 %v1_f174, 218
  store i1 %v2_ff90, i1* %cpsr_c.global-to-local, align 1
  %v7_ff90 = icmp eq i32 %v1_f174, 219
  store i1 %v7_ff90, i1* %cpsr_z.global-to-local, align 1
  %v2_ff94 = xor i1 %v2_ff90, true
  %v3_ff94 = or i1 %v7_ff90, %v2_ff94
  br i1 %v3_ff94, label %bb1645, label %bb1646

bb1645:                                           ; preds = %dec_label_pc_ff90
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1646

bb1646:                                           ; preds = %dec_label_pc_ff90, %bb1645
  %v2_ff98 = xor i1 %v7_ff90, true
  %v3_ff98 = and i1 %v2_ff90, %v2_ff98
  br i1 %v3_ff98, label %bb1647, label %bb1648

bb1647:                                           ; preds = %bb1646
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1648

bb1648:                                           ; preds = %bb1646, %bb1647
  %v0_ffa4.pr = phi i32 [ 0, %bb1646 ], [ 1, %bb1647 ]
  %v2_ff9c = icmp ugt i32 %v1_f174, 221
  store i1 %v2_ff9c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff9c = icmp eq i32 %v1_f174, 222
  store i1 %v7_ff9c, i1* %cpsr_z.global-to-local, align 1
  %v2_ffa0 = xor i1 %v7_ff9c, true
  %v3_ffa0 = and i1 %v2_ff9c, %v2_ffa0
  br i1 %v3_ffa0, label %.thread325, label %bb1649

.thread325:                                       ; preds = %bb1648
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ffac

bb1649:                                           ; preds = %bb1648
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffa4 = icmp eq i32 %v0_ffa4.pr, 0
  store i1 %v2_ffa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffa4, label %dec_label_pc_ffac, label %dec_label_pc_f158

dec_label_pc_ffac:                                ; preds = %dec_label_pc_ff78, %.thread325, %bb1649, %bb1644
  store i32 %.1987, i32* %r3.global-to-local, align 4
  %v2_ffb0 = icmp ugt i32 %v1_f170, 237
  store i1 %v2_ffb0, i1* %cpsr_c.global-to-local, align 1
  %v7_ffb0 = icmp eq i32 %v1_f170, 238
  store i1 %v7_ffb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffb0, label %.thread328, label %.thread329

.thread329:                                       ; preds = %dec_label_pc_ffac
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ffd8

.thread328:                                       ; preds = %dec_label_pc_ffac
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffbc = icmp eq i1 %v7_fbb4, false
  store i1 %v2_ffbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffbc, label %dec_label_pc_ffd8, label %dec_label_pc_ffc4

dec_label_pc_ffc4:                                ; preds = %.thread328
  %v2_ffc4 = icmp ugt i32 %v1_f174, 189
  store i1 %v2_ffc4, i1* %cpsr_c.global-to-local, align 1
  %v7_ffc4 = icmp eq i32 %v1_f174, 190
  store i1 %v7_ffc4, i1* %cpsr_z.global-to-local, align 1
  %v2_ffc8 = xor i1 %v7_ffc4, true
  %v3_ffc8 = and i1 %v2_ffc4, %v2_ffc8
  br i1 %v3_ffc8, label %bb1650, label %bb1651

bb1650:                                           ; preds = %dec_label_pc_ffc4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1651

bb1651:                                           ; preds = %dec_label_pc_ffc4, %bb1650
  %v0_ffd0878 = phi i32 [ %.1987, %dec_label_pc_ffc4 ], [ 0, %bb1650 ]
  %v2_ffcc = xor i1 %v2_ffc4, true
  %v3_ffcc = or i1 %v7_ffc4, %v2_ffcc
  br i1 %v3_ffcc, label %bb1652, label %bb1653

bb1652:                                           ; preds = %bb1651
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1653

bb1653:                                           ; preds = %bb1651, %bb1652
  %v0_ffd0 = phi i32 [ %v0_ffd0878, %bb1651 ], [ 1, %bb1652 ]
  %v2_ffd0 = and i32 %v3_f164, 64
  %v3_ffd0 = icmp ne i32 %v2_ffd0, 0
  store i1 %v3_ffd0, i1* %cpsr_c.global-to-local, align 1
  %v4_ffd0 = udiv i32 %v1_f174, 128
  %v5_ffd0 = and i32 %v0_ffd0, %v4_ffd0
  store i32 %v5_ffd0, i32* %r3.global-to-local, align 4
  %v6_ffd0 = icmp eq i32 %v5_ffd0, 0
  store i1 %v6_ffd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_ffd0, label %dec_label_pc_ffd8, label %dec_label_pc_f158

dec_label_pc_ffd8:                                ; preds = %.thread329, %bb1653, %.thread328
  store i32 %.1970, i32* %r3.global-to-local, align 4
  %v2_ffdc = icmp ugt i32 %v1_f170, 221
  store i1 %v2_ffdc, i1* %cpsr_c.global-to-local, align 1
  %v7_ffdc = icmp eq i32 %v1_f170, 222
  store i1 %v7_ffdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffdc, label %.thread332, label %.thread333

.thread333:                                       ; preds = %dec_label_pc_ffd8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10008

.thread332:                                       ; preds = %dec_label_pc_ffd8
  store i32 %.1970, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffe8 = icmp eq i1 %v7_f59c, false
  store i1 %v2_ffe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffe8, label %dec_label_pc_10008, label %dec_label_pc_fff0

dec_label_pc_fff0:                                ; preds = %.thread332
  store i32 %v1_f174, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fff0 = icmp eq i32 %v1_f174, 0
  store i1 %v2_fff0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fff0, label %bb1655, label %bb1654

bb1654:                                           ; preds = %dec_label_pc_fff0
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1655

bb1655:                                           ; preds = %dec_label_pc_fff0, %bb1654
  %v0_10000.pr = phi i32 [ 0, %dec_label_pc_fff0 ], [ 1, %bb1654 ]
  %v2_fff8 = icmp ugt i32 %v1_f174, 29
  store i1 %v2_fff8, i1* %cpsr_c.global-to-local, align 1
  %v7_fff8 = icmp eq i32 %v1_f174, 30
  store i1 %v7_fff8, i1* %cpsr_z.global-to-local, align 1
  %v2_fffc = xor i1 %v7_fff8, true
  %v3_fffc = and i1 %v2_fff8, %v2_fffc
  br i1 %v3_fffc, label %.thread337, label %bb1656

.thread337:                                       ; preds = %bb1655
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10008

bb1656:                                           ; preds = %bb1655
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10000 = icmp eq i32 %v0_10000.pr, 0
  store i1 %v2_10000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10000, label %dec_label_pc_10008, label %dec_label_pc_f158

dec_label_pc_10008:                               ; preds = %.thread337, %.thread333, %bb1656, %.thread332
  %v7_10008 = icmp eq i32 %v1_f15c, 208
  %.1997 = zext i1 %v7_10008 to i32
  store i32 %.1997, i32* %r3.global-to-local, align 4
  store i1 %v2_f8d8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f8d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f8d8, label %bb1659, label %dec_label_pc_10040

bb1659:                                           ; preds = %dec_label_pc_10008
  %v2_10008 = icmp ugt i32 %v1_f15c, 207
  store i1 %v2_10008, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10008, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10008, label %dec_label_pc_10024, label %dec_label_pc_10040

dec_label_pc_10024:                               ; preds = %bb1659
  %v2_10024 = icmp ugt i32 %v1_f174, 230
  store i1 %v2_10024, i1* %cpsr_c.global-to-local, align 1
  %v7_10024 = icmp eq i32 %v1_f174, 231
  store i1 %v7_10024, i1* %cpsr_z.global-to-local, align 1
  %v2_10028 = xor i1 %v2_10024, true
  %v3_10028 = or i1 %v7_10024, %v2_10028
  br i1 %v3_10028, label %bb1660, label %bb1661

bb1660:                                           ; preds = %dec_label_pc_10024
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1661

bb1661:                                           ; preds = %dec_label_pc_10024, %bb1660
  %v0_10038.pr883 = phi i32 [ %.1997, %dec_label_pc_10024 ], [ 0, %bb1660 ]
  %v2_1002c = xor i1 %v7_10024, true
  %v3_1002c = and i1 %v2_10024, %v2_1002c
  br i1 %v3_1002c, label %bb1662, label %bb1663

bb1662:                                           ; preds = %bb1661
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1663

bb1663:                                           ; preds = %bb1661, %bb1662
  %v0_10038.pr = phi i32 [ %v0_10038.pr883, %bb1661 ], [ 1, %bb1662 ]
  %v2_10030 = icmp ugt i32 %v1_f174, 250
  store i1 %v2_10030, i1* %cpsr_c.global-to-local, align 1
  %v7_10030 = icmp eq i32 %v1_f174, 251
  store i1 %v7_10030, i1* %cpsr_z.global-to-local, align 1
  %v2_10034 = xor i1 %v7_10030, true
  %v3_10034 = and i1 %v2_10030, %v2_10034
  br i1 %v3_10034, label %.thread345, label %bb1664

.thread345:                                       ; preds = %bb1663
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10040

bb1664:                                           ; preds = %bb1663
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10038 = icmp eq i32 %v0_10038.pr, 0
  store i1 %v2_10038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10038, label %dec_label_pc_10040, label %dec_label_pc_f158

dec_label_pc_10040:                               ; preds = %dec_label_pc_10008, %.thread345, %bb1664, %bb1659
  store i32 %.1967, i32* %r3.global-to-local, align 4
  %v2_10044 = icmp ugt i32 %v1_f15c, 65
  store i1 %v2_10044, i1* %cpsr_c.global-to-local, align 1
  %v7_10044 = icmp eq i32 %v1_f15c, 66
  %.1998 = zext i1 %v7_10044 to i32
  store i32 %.1998, i32* %fp.global-to-local, align 4
  %v2_10050 = and i32 %.1967, %.1998
  %v4_10050 = icmp eq i32 %v2_10050, 0
  store i1 %v4_10050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10050, label %dec_label_pc_10070, label %dec_label_pc_1005c

dec_label_pc_1005c:                               ; preds = %dec_label_pc_10040
  %v2_1005c = icmp ugt i32 %v1_f174, 157
  store i1 %v2_1005c, i1* %cpsr_c.global-to-local, align 1
  %v7_1005c = icmp eq i32 %v1_f174, 158
  store i1 %v7_1005c, i1* %cpsr_z.global-to-local, align 1
  %v2_10060 = xor i1 %v7_1005c, true
  %v3_10060 = and i1 %v2_1005c, %v2_10060
  br i1 %v3_10060, label %bb1667, label %bb1668

bb1667:                                           ; preds = %dec_label_pc_1005c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1668

bb1668:                                           ; preds = %dec_label_pc_1005c, %bb1667
  %v0_10068886 = phi i32 [ %.1967, %dec_label_pc_1005c ], [ 0, %bb1667 ]
  %v2_10064 = xor i1 %v2_1005c, true
  %v3_10064 = or i1 %v7_1005c, %v2_10064
  br i1 %v3_10064, label %bb1669, label %bb1670

bb1669:                                           ; preds = %bb1668
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1670

bb1670:                                           ; preds = %bb1668, %bb1669
  %v0_10068 = phi i32 [ %v0_10068886, %bb1668 ], [ 1, %bb1669 ]
  %v2_10068 = and i32 %v3_f164, 64
  %v3_10068 = icmp ne i32 %v2_10068, 0
  store i1 %v3_10068, i1* %cpsr_c.global-to-local, align 1
  %v4_10068 = udiv i32 %v1_f174, 128
  %v5_10068 = and i32 %v0_10068, %v4_10068
  store i32 %v5_10068, i32* %r3.global-to-local, align 4
  %v6_10068 = icmp eq i32 %v5_10068, 0
  store i1 %v6_10068, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10068, label %dec_label_pc_10070, label %dec_label_pc_f158

dec_label_pc_10070:                               ; preds = %bb1670, %dec_label_pc_10040
  store i32 %.1989, i32* %r3.global-to-local, align 4
  store i1 %v2_f604, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f604, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f604, label %.thread349, label %.thread350

.thread350:                                       ; preds = %dec_label_pc_10070
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_100a0

.thread349:                                       ; preds = %dec_label_pc_10070
  store i32 %.1989, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10080 = icmp eq i1 %v7_fc38, false
  store i1 %v2_10080, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10080, label %dec_label_pc_100a0, label %dec_label_pc_10088

dec_label_pc_10088:                               ; preds = %.thread349
  store i32 %v1_f174, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10088 = icmp eq i32 %v1_f174, 0
  store i1 %v2_10088, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10088, label %bb1672, label %bb1671

bb1671:                                           ; preds = %dec_label_pc_10088
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1672

bb1672:                                           ; preds = %dec_label_pc_10088, %bb1671
  %v0_10098.pr = phi i32 [ 0, %dec_label_pc_10088 ], [ 1, %bb1671 ]
  %v2_10090 = icmp ugt i32 %v1_f174, 125
  store i1 %v2_10090, i1* %cpsr_c.global-to-local, align 1
  %v7_10090 = icmp eq i32 %v1_f174, 126
  store i1 %v7_10090, i1* %cpsr_z.global-to-local, align 1
  %v2_10094 = xor i1 %v7_10090, true
  %v3_10094 = and i1 %v2_10090, %v2_10094
  br i1 %v3_10094, label %.thread354, label %bb1673

.thread354:                                       ; preds = %bb1672
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_100a0

bb1673:                                           ; preds = %bb1672
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10098 = icmp eq i32 %v0_10098.pr, 0
  store i1 %v2_10098, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10098, label %dec_label_pc_100a0, label %dec_label_pc_f158

dec_label_pc_100a0:                               ; preds = %.thread354, %.thread350, %bb1673, %.thread349
  %v2_100a0 = icmp ugt i32 %v1_f15c, 215
  store i1 %v2_100a0, i1* %cpsr_c.global-to-local, align 1
  %v7_100a0 = icmp eq i32 %v1_f15c, 216
  store i1 %v7_100a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100a0, label %.thread357, label %.thread358

.thread358:                                       ; preds = %dec_label_pc_100a0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_100c8

.thread357:                                       ; preds = %dec_label_pc_100a0
  store i32 %.1995, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100ac = icmp eq i1 %v7_f910, false
  store i1 %v2_100ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100ac, label %dec_label_pc_100c8, label %dec_label_pc_100b4

dec_label_pc_100b4:                               ; preds = %.thread357
  %v2_100b4 = icmp ugt i32 %v1_f174, 157
  store i1 %v2_100b4, i1* %cpsr_c.global-to-local, align 1
  %v7_100b4 = icmp eq i32 %v1_f174, 158
  store i1 %v7_100b4, i1* %cpsr_z.global-to-local, align 1
  %v2_100b8 = xor i1 %v7_100b4, true
  %v3_100b8 = and i1 %v2_100b4, %v2_100b8
  br i1 %v3_100b8, label %bb1674, label %bb1675

bb1674:                                           ; preds = %dec_label_pc_100b4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1675

bb1675:                                           ; preds = %dec_label_pc_100b4, %bb1674
  %v0_100c0890 = phi i32 [ %.1995, %dec_label_pc_100b4 ], [ 0, %bb1674 ]
  %v2_100bc = xor i1 %v2_100b4, true
  %v3_100bc = or i1 %v7_100b4, %v2_100bc
  br i1 %v3_100bc, label %bb1676, label %bb1677

bb1676:                                           ; preds = %bb1675
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1677

bb1677:                                           ; preds = %bb1675, %bb1676
  %v0_100c0 = phi i32 [ %v0_100c0890, %bb1675 ], [ 1, %bb1676 ]
  %v2_100c0 = and i32 %v3_f164, 64
  %v3_100c0 = icmp ne i32 %v2_100c0, 0
  store i1 %v3_100c0, i1* %cpsr_c.global-to-local, align 1
  %v4_100c0 = udiv i32 %v1_f174, 128
  %v5_100c0 = and i32 %v0_100c0, %v4_100c0
  store i32 %v5_100c0, i32* %r3.global-to-local, align 4
  %v6_100c0 = icmp eq i32 %v5_100c0, 0
  store i1 %v6_100c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_100c0, label %dec_label_pc_100c8, label %dec_label_pc_f158

dec_label_pc_100c8:                               ; preds = %.thread358, %bb1677, %.thread357
  %v2_100c8 = icmp ugt i32 %v1_f170, 60
  %v7_100c8 = icmp eq i32 %v1_f170, 61
  %.1999 = zext i1 %v7_100c8 to i32
  store i32 %.1999, i32* %r4.global-to-local, align 4
  %v2_100d4 = icmp ugt i32 %v1_f15c, 107
  store i1 %v2_100d4, i1* %cpsr_c.global-to-local, align 1
  %v7_100d4 = icmp eq i32 %v1_f15c, 108
  store i1 %v7_100d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100d4, label %bb1680, label %dec_label_pc_100e0

bb1680:                                           ; preds = %dec_label_pc_100c8
  store i1 %v2_100c8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_100c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100c8, label %dec_label_pc_f158, label %dec_label_pc_100e0

dec_label_pc_100e0:                               ; preds = %dec_label_pc_100c8, %bb1680
  store i32 %.1989, i32* %r3.global-to-local, align 4
  %v2_100e4 = icmp ugt i32 %v1_f170, 75
  store i1 %v2_100e4, i1* %cpsr_c.global-to-local, align 1
  %v7_100e4 = icmp eq i32 %v1_f170, 76
  store i1 %v7_100e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100e4, label %.thread363, label %.thread364

.thread364:                                       ; preds = %dec_label_pc_100e0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_100f8

.thread363:                                       ; preds = %dec_label_pc_100e0
  store i32 %.1989, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100f0 = icmp eq i1 %v7_fc38, false
  store i1 %v2_100f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100f0, label %dec_label_pc_100f8, label %dec_label_pc_f158

dec_label_pc_100f8:                               ; preds = %.thread364, %.thread363
  %v2_100f8 = icmp ugt i32 %v1_f170, 10
  store i1 %v2_100f8, i1* %cpsr_c.global-to-local, align 1
  %v7_100f8 = icmp eq i32 %v1_f170, 11
  store i1 %v7_100f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100f8, label %.thread367, label %.thread368

.thread368:                                       ; preds = %dec_label_pc_100f8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10128

.thread367:                                       ; preds = %dec_label_pc_100f8
  store i32 %.1996, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10104 = icmp eq i1 %v7_ff78, false
  store i1 %v2_10104, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10104, label %dec_label_pc_10128, label %dec_label_pc_1010c

dec_label_pc_1010c:                               ; preds = %.thread367
  %v2_1010c = icmp ugt i32 %v1_f174, 142
  store i1 %v2_1010c, i1* %cpsr_c.global-to-local, align 1
  %v7_1010c = icmp eq i32 %v1_f174, 143
  store i1 %v7_1010c, i1* %cpsr_z.global-to-local, align 1
  %v2_10110 = xor i1 %v2_1010c, true
  %v3_10110 = or i1 %v7_1010c, %v2_10110
  br i1 %v3_10110, label %bb1681, label %bb1682

bb1681:                                           ; preds = %dec_label_pc_1010c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1682

bb1682:                                           ; preds = %dec_label_pc_1010c, %bb1681
  %v0_10120.pr894 = phi i32 [ %.1996, %dec_label_pc_1010c ], [ 0, %bb1681 ]
  %v2_10114 = xor i1 %v7_1010c, true
  %v3_10114 = and i1 %v2_1010c, %v2_10114
  br i1 %v3_10114, label %bb1683, label %bb1684

bb1683:                                           ; preds = %bb1682
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1684

bb1684:                                           ; preds = %bb1682, %bb1683
  %v0_10120.pr = phi i32 [ %v0_10120.pr894, %bb1682 ], [ 1, %bb1683 ]
  %v2_10118 = icmp ugt i32 %v1_f174, 146
  store i1 %v2_10118, i1* %cpsr_c.global-to-local, align 1
  %v7_10118 = icmp eq i32 %v1_f174, 147
  store i1 %v7_10118, i1* %cpsr_z.global-to-local, align 1
  %v2_1011c = xor i1 %v7_10118, true
  %v3_1011c = and i1 %v2_10118, %v2_1011c
  br i1 %v3_1011c, label %.thread372, label %bb1685

.thread372:                                       ; preds = %bb1684
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10128

bb1685:                                           ; preds = %bb1684
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10120 = icmp eq i32 %v0_10120.pr, 0
  store i1 %v2_10120, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10120, label %dec_label_pc_10128, label %dec_label_pc_f158

dec_label_pc_10128:                               ; preds = %.thread372, %.thread368, %bb1685, %.thread367
  store i32 %.1968, i32* %fp.global-to-local, align 4
  %v2_1012c = and i32 %.1968, %.1996
  %v4_1012c = icmp eq i32 %v2_1012c, 0
  store i1 %v4_1012c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1012c, label %dec_label_pc_10150, label %dec_label_pc_10134

dec_label_pc_10134:                               ; preds = %dec_label_pc_10128
  %v2_10134 = icmp ugt i32 %v1_f174, 19
  store i1 %v2_10134, i1* %cpsr_c.global-to-local, align 1
  %v7_10134 = icmp eq i32 %v1_f174, 20
  store i1 %v7_10134, i1* %cpsr_z.global-to-local, align 1
  %v2_10138 = xor i1 %v2_10134, true
  %v3_10138 = or i1 %v7_10134, %v2_10138
  br i1 %v3_10138, label %bb1686, label %bb1687

bb1686:                                           ; preds = %dec_label_pc_10134
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1687

bb1687:                                           ; preds = %dec_label_pc_10134, %bb1686
  %v2_1013c = xor i1 %v7_10134, true
  %v3_1013c = and i1 %v2_10134, %v2_1013c
  br i1 %v3_1013c, label %bb1688, label %bb1689

bb1688:                                           ; preds = %bb1687
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1689

bb1689:                                           ; preds = %bb1687, %bb1688
  %v0_10148.pr = phi i32 [ 0, %bb1687 ], [ 1, %bb1688 ]
  %v2_10140 = icmp ugt i32 %v1_f174, 21
  store i1 %v2_10140, i1* %cpsr_c.global-to-local, align 1
  %v7_10140 = icmp eq i32 %v1_f174, 22
  store i1 %v7_10140, i1* %cpsr_z.global-to-local, align 1
  %v2_10144 = xor i1 %v7_10140, true
  %v3_10144 = and i1 %v2_10140, %v2_10144
  br i1 %v3_10144, label %.thread376, label %bb1690

.thread376:                                       ; preds = %bb1689
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10150

bb1690:                                           ; preds = %bb1689
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10148 = icmp eq i32 %v0_10148.pr, 0
  store i1 %v2_10148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10148, label %dec_label_pc_10150, label %dec_label_pc_f158

dec_label_pc_10150:                               ; preds = %.thread376, %bb1690, %dec_label_pc_10128
  %v2_10150 = and i32 %.1999, %.1996
  %v4_10150 = icmp eq i32 %v2_10150, 0
  store i1 %v4_10150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10150, label %dec_label_pc_10174, label %dec_label_pc_10158

dec_label_pc_10158:                               ; preds = %dec_label_pc_10150
  %v2_10158 = icmp ugt i32 %v1_f174, 134
  store i1 %v2_10158, i1* %cpsr_c.global-to-local, align 1
  %v7_10158 = icmp eq i32 %v1_f174, 135
  store i1 %v7_10158, i1* %cpsr_z.global-to-local, align 1
  %v2_1015c = xor i1 %v2_10158, true
  %v3_1015c = or i1 %v7_10158, %v2_1015c
  br i1 %v3_1015c, label %bb1691, label %bb1692

bb1691:                                           ; preds = %dec_label_pc_10158
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1692

bb1692:                                           ; preds = %dec_label_pc_10158, %bb1691
  %v2_10160 = xor i1 %v7_10158, true
  %v3_10160 = and i1 %v2_10158, %v2_10160
  br i1 %v3_10160, label %bb1693, label %bb1694

bb1693:                                           ; preds = %bb1692
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1694

bb1694:                                           ; preds = %bb1692, %bb1693
  %v0_1016c.pr = phi i32 [ 0, %bb1692 ], [ 1, %bb1693 ]
  %v2_10164 = icmp ugt i32 %v1_f174, 137
  store i1 %v2_10164, i1* %cpsr_c.global-to-local, align 1
  %v7_10164 = icmp eq i32 %v1_f174, 138
  store i1 %v7_10164, i1* %cpsr_z.global-to-local, align 1
  %v2_10168 = xor i1 %v7_10164, true
  %v3_10168 = and i1 %v2_10164, %v2_10168
  br i1 %v3_10168, label %.thread380, label %bb1695

.thread380:                                       ; preds = %bb1694
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10174

bb1695:                                           ; preds = %bb1694
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1016c = icmp eq i32 %v0_1016c.pr, 0
  store i1 %v2_1016c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1016c, label %dec_label_pc_10174, label %dec_label_pc_f158

dec_label_pc_10174:                               ; preds = %.thread380, %bb1695, %dec_label_pc_10150
  store i32 %storemerge1223, i32* %r3.global-to-local, align 4
  %v2_10178 = and i32 %storemerge1223, %.1996
  %v4_10178 = icmp eq i32 %v2_10178, 0
  store i1 %v4_10178, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10178, label %dec_label_pc_1019c, label %dec_label_pc_10180

dec_label_pc_10180:                               ; preds = %dec_label_pc_10174
  %v2_10180 = icmp ugt i32 %v1_f174, 185
  store i1 %v2_10180, i1* %cpsr_c.global-to-local, align 1
  %v7_10180 = icmp eq i32 %v1_f174, 186
  store i1 %v7_10180, i1* %cpsr_z.global-to-local, align 1
  %v2_10184 = xor i1 %v2_10180, true
  %v3_10184 = or i1 %v7_10180, %v2_10184
  br i1 %v3_10184, label %bb1696, label %bb1697

bb1696:                                           ; preds = %dec_label_pc_10180
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1697

bb1697:                                           ; preds = %dec_label_pc_10180, %bb1696
  %v0_10194.pr903 = phi i32 [ %storemerge1223, %dec_label_pc_10180 ], [ 0, %bb1696 ]
  %v2_10188 = xor i1 %v7_10180, true
  %v3_10188 = and i1 %v2_10180, %v2_10188
  br i1 %v3_10188, label %bb1698, label %bb1699

bb1698:                                           ; preds = %bb1697
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1699

bb1699:                                           ; preds = %bb1697, %bb1698
  %v0_10194.pr = phi i32 [ %v0_10194.pr903, %bb1697 ], [ 1, %bb1698 ]
  %v2_1018c = icmp ugt i32 %v1_f174, 189
  store i1 %v2_1018c, i1* %cpsr_c.global-to-local, align 1
  %v7_1018c = icmp eq i32 %v1_f174, 190
  store i1 %v7_1018c, i1* %cpsr_z.global-to-local, align 1
  %v2_10190 = xor i1 %v7_1018c, true
  %v3_10190 = and i1 %v2_1018c, %v2_10190
  br i1 %v3_10190, label %.thread384, label %bb1700

.thread384:                                       ; preds = %bb1699
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1019c

bb1700:                                           ; preds = %bb1699
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10194 = icmp eq i32 %v0_10194.pr, 0
  store i1 %v2_10194, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10194, label %dec_label_pc_1019c, label %dec_label_pc_f158

dec_label_pc_1019c:                               ; preds = %.thread384, %bb1700, %dec_label_pc_10174
  store i32 %.1998, i32* %r3.global-to-local, align 4
  store i1 %v2_f94c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f94c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f94c, label %.thread387, label %.thread388

.thread388:                                       ; preds = %dec_label_pc_1019c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_101d0

.thread387:                                       ; preds = %dec_label_pc_1019c
  store i32 %.1998, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101ac = icmp eq i1 %v7_10044, false
  store i1 %v2_101ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_101ac, label %dec_label_pc_101d0, label %dec_label_pc_101b4

dec_label_pc_101b4:                               ; preds = %.thread387
  %v2_101b4 = icmp ugt i32 %v1_f174, 118
  store i1 %v2_101b4, i1* %cpsr_c.global-to-local, align 1
  %v7_101b4 = icmp eq i32 %v1_f174, 119
  store i1 %v7_101b4, i1* %cpsr_z.global-to-local, align 1
  %v2_101b8 = xor i1 %v2_101b4, true
  %v3_101b8 = or i1 %v7_101b4, %v2_101b8
  br i1 %v3_101b8, label %bb1701, label %bb1702

bb1701:                                           ; preds = %dec_label_pc_101b4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1702

bb1702:                                           ; preds = %dec_label_pc_101b4, %bb1701
  %v0_101c8.pr906 = phi i32 [ %.1998, %dec_label_pc_101b4 ], [ 0, %bb1701 ]
  %v2_101bc = xor i1 %v7_101b4, true
  %v3_101bc = and i1 %v2_101b4, %v2_101bc
  br i1 %v3_101bc, label %bb1703, label %bb1704

bb1703:                                           ; preds = %bb1702
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1704

bb1704:                                           ; preds = %bb1702, %bb1703
  %v0_101c8.pr = phi i32 [ %v0_101c8.pr906, %bb1702 ], [ 1, %bb1703 ]
  %v2_101c0 = icmp ugt i32 %v1_f174, 213
  store i1 %v2_101c0, i1* %cpsr_c.global-to-local, align 1
  %v7_101c0 = icmp eq i32 %v1_f174, 214
  store i1 %v7_101c0, i1* %cpsr_z.global-to-local, align 1
  %v2_101c4 = xor i1 %v7_101c0, true
  %v3_101c4 = and i1 %v2_101c0, %v2_101c4
  br i1 %v3_101c4, label %.thread392, label %bb1705

.thread392:                                       ; preds = %bb1704
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_101d0

bb1705:                                           ; preds = %bb1704
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101c8 = icmp eq i32 %v0_101c8.pr, 0
  store i1 %v2_101c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_101c8, label %dec_label_pc_101d0, label %dec_label_pc_f158

dec_label_pc_101d0:                               ; preds = %.thread392, %.thread388, %bb1705, %.thread387
  store i32 %.1998, i32* %r3.global-to-local, align 4
  %v2_101d4 = icmp ugt i32 %v1_f170, 150
  store i1 %v2_101d4, i1* %cpsr_c.global-to-local, align 1
  %v7_101d4 = icmp eq i32 %v1_f170, 151
  store i1 %v7_101d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101d4, label %.thread395, label %.thread396

.thread396:                                       ; preds = %dec_label_pc_101d0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10204

.thread395:                                       ; preds = %dec_label_pc_101d0
  store i32 %.1998, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101e0 = icmp eq i1 %v7_10044, false
  store i1 %v2_101e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_101e0, label %dec_label_pc_10204, label %dec_label_pc_101e8

dec_label_pc_101e8:                               ; preds = %.thread395
  %v2_101e8 = icmp ugt i32 %v1_f174, 135
  store i1 %v2_101e8, i1* %cpsr_c.global-to-local, align 1
  %v7_101e8 = icmp eq i32 %v1_f174, 136
  store i1 %v7_101e8, i1* %cpsr_z.global-to-local, align 1
  %v2_101ec = xor i1 %v2_101e8, true
  %v3_101ec = or i1 %v7_101e8, %v2_101ec
  br i1 %v3_101ec, label %bb1706, label %bb1707

bb1706:                                           ; preds = %dec_label_pc_101e8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1707

bb1707:                                           ; preds = %dec_label_pc_101e8, %bb1706
  %v0_101fc.pr909 = phi i32 [ %.1998, %dec_label_pc_101e8 ], [ 0, %bb1706 ]
  %v2_101f0 = xor i1 %v7_101e8, true
  %v3_101f0 = and i1 %v2_101e8, %v2_101f0
  br i1 %v3_101f0, label %bb1708, label %bb1709

bb1708:                                           ; preds = %bb1707
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1709

bb1709:                                           ; preds = %bb1707, %bb1708
  %v0_101fc.pr = phi i32 [ %v0_101fc.pr909, %bb1707 ], [ 1, %bb1708 ]
  %v2_101f4 = icmp ugt i32 %v1_f174, 137
  store i1 %v2_101f4, i1* %cpsr_c.global-to-local, align 1
  %v7_101f4 = icmp eq i32 %v1_f174, 138
  store i1 %v7_101f4, i1* %cpsr_z.global-to-local, align 1
  %v2_101f8 = xor i1 %v7_101f4, true
  %v3_101f8 = and i1 %v2_101f4, %v2_101f8
  br i1 %v3_101f8, label %.thread400, label %bb1710

.thread400:                                       ; preds = %bb1709
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10204

bb1710:                                           ; preds = %bb1709
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101fc = icmp eq i32 %v0_101fc.pr, 0
  store i1 %v2_101fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_101fc, label %dec_label_pc_10204, label %dec_label_pc_f158

dec_label_pc_10204:                               ; preds = %.thread400, %.thread396, %bb1710, %.thread395
  store i32 %.1971, i32* %r3.global-to-local, align 4
  %v2_10208 = icmp ugt i32 %v1_f170, 93
  store i1 %v2_10208, i1* %cpsr_c.global-to-local, align 1
  %v7_10208 = icmp eq i32 %v1_f170, 94
  store i1 %v7_10208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10208, label %.thread403, label %.thread404

.thread404:                                       ; preds = %dec_label_pc_10204
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10228

.thread403:                                       ; preds = %dec_label_pc_10204
  store i32 %.1971, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10214 = icmp eq i1 %v7_f5b8, false
  store i1 %v2_10214, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10214, label %dec_label_pc_10228, label %dec_label_pc_1021c

dec_label_pc_1021c:                               ; preds = %.thread403
  %v2_1021c = icmp eq i32 %v1_f174, 255
  store i1 %v2_1021c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_1021c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1021c, label %dec_label_pc_10228, label %bb1711

bb1711:                                           ; preds = %dec_label_pc_1021c
  %v3_10220 = icmp ugt i32 %v1_f174, 235
  store i1 %v3_10220, i1* %cpsr_c.global-to-local, align 1
  %v8_10220 = icmp eq i32 %v1_f174, 236
  store i1 %v8_10220, i1* %cpsr_z.global-to-local, align 1
  %v2_10224 = xor i1 %v8_10220, true
  %v3_10224 = and i1 %v3_10220, %v2_10224
  br i1 %v3_10224, label %dec_label_pc_f158, label %dec_label_pc_10228

dec_label_pc_10228:                               ; preds = %dec_label_pc_1021c, %.thread404, %bb1711, %.thread403
  %v0_10248.pr915 = phi i32 [ 0, %.thread404 ], [ %.1971, %bb1711 ], [ 0, %.thread403 ], [ %.1971, %dec_label_pc_1021c ]
  %v2_10228 = icmp ugt i32 %v1_f15c, 62
  store i1 %v2_10228, i1* %cpsr_c.global-to-local, align 1
  %v7_10228 = icmp eq i32 %v1_f15c, 63
  store i1 %v7_10228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10228, label %bb1712, label %dec_label_pc_10250

bb1712:                                           ; preds = %dec_label_pc_10228
  store i1 %v2_fb24, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fb24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb24, label %dec_label_pc_10234, label %dec_label_pc_10250

dec_label_pc_10234:                               ; preds = %bb1712
  %v2_10234 = icmp ugt i32 %v1_f174, 17
  store i1 %v2_10234, i1* %cpsr_c.global-to-local, align 1
  %v7_10234 = icmp eq i32 %v1_f174, 18
  store i1 %v7_10234, i1* %cpsr_z.global-to-local, align 1
  %v2_10238 = xor i1 %v2_10234, true
  %v3_10238 = or i1 %v7_10234, %v2_10238
  br i1 %v3_10238, label %bb1713, label %bb1714

bb1713:                                           ; preds = %dec_label_pc_10234
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1714

bb1714:                                           ; preds = %dec_label_pc_10234, %bb1713
  %v0_10248.pr914 = phi i32 [ %v0_10248.pr915, %dec_label_pc_10234 ], [ 0, %bb1713 ]
  %v2_1023c = xor i1 %v7_10234, true
  %v3_1023c = and i1 %v2_10234, %v2_1023c
  br i1 %v3_1023c, label %bb1715, label %bb1716

bb1715:                                           ; preds = %bb1714
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1716

bb1716:                                           ; preds = %bb1714, %bb1715
  %v0_10248.pr = phi i32 [ %v0_10248.pr914, %bb1714 ], [ 1, %bb1715 ]
  %v2_10240 = icmp ugt i32 %v1_f174, 19
  store i1 %v2_10240, i1* %cpsr_c.global-to-local, align 1
  %v7_10240 = icmp eq i32 %v1_f174, 20
  store i1 %v7_10240, i1* %cpsr_z.global-to-local, align 1
  %v2_10244 = xor i1 %v7_10240, true
  %v3_10244 = and i1 %v2_10240, %v2_10244
  br i1 %v3_10244, label %.thread409, label %bb1717

.thread409:                                       ; preds = %bb1716
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10250

bb1717:                                           ; preds = %bb1716
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10248 = icmp eq i32 %v0_10248.pr, 0
  store i1 %v2_10248, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10248, label %dec_label_pc_10250, label %dec_label_pc_f158

dec_label_pc_10250:                               ; preds = %dec_label_pc_10228, %.thread409, %bb1717, %bb1712
  %v0_10270.pr918 = phi i32 [ %v0_10248.pr915, %dec_label_pc_10228 ], [ 0, %.thread409 ], [ 0, %bb1717 ], [ %v0_10248.pr915, %bb1712 ]
  %v2_10250 = icmp ugt i32 %v1_f15c, 69
  store i1 %v2_10250, i1* %cpsr_c.global-to-local, align 1
  %v7_10250 = icmp eq i32 %v1_f15c, 70
  store i1 %v7_10250, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10250, label %bb1718, label %dec_label_pc_10278

bb1718:                                           ; preds = %dec_label_pc_10250
  %v3_10254 = icmp ugt i32 %v1_f170, 41
  store i1 %v3_10254, i1* %cpsr_c.global-to-local, align 1
  %v8_10254 = icmp eq i32 %v1_f170, 42
  store i1 %v8_10254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10254, label %dec_label_pc_1025c, label %dec_label_pc_10278

dec_label_pc_1025c:                               ; preds = %bb1718
  %v2_1025c = icmp ugt i32 %v1_f174, 71
  store i1 %v2_1025c, i1* %cpsr_c.global-to-local, align 1
  %v7_1025c = icmp eq i32 %v1_f174, 72
  store i1 %v7_1025c, i1* %cpsr_z.global-to-local, align 1
  %v2_10260 = xor i1 %v2_1025c, true
  %v3_10260 = or i1 %v7_1025c, %v2_10260
  br i1 %v3_10260, label %bb1719, label %bb1720

bb1719:                                           ; preds = %dec_label_pc_1025c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1720

bb1720:                                           ; preds = %dec_label_pc_1025c, %bb1719
  %v0_10270.pr917 = phi i32 [ %v0_10270.pr918, %dec_label_pc_1025c ], [ 0, %bb1719 ]
  %v2_10264 = xor i1 %v7_1025c, true
  %v3_10264 = and i1 %v2_1025c, %v2_10264
  br i1 %v3_10264, label %bb1721, label %bb1722

bb1721:                                           ; preds = %bb1720
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1722

bb1722:                                           ; preds = %bb1720, %bb1721
  %v0_10270.pr = phi i32 [ %v0_10270.pr917, %bb1720 ], [ 1, %bb1721 ]
  %v2_10268 = icmp ugt i32 %v1_f174, 73
  store i1 %v2_10268, i1* %cpsr_c.global-to-local, align 1
  %v7_10268 = icmp eq i32 %v1_f174, 74
  store i1 %v7_10268, i1* %cpsr_z.global-to-local, align 1
  %v2_1026c = xor i1 %v7_10268, true
  %v3_1026c = and i1 %v2_10268, %v2_1026c
  br i1 %v3_1026c, label %.thread414, label %bb1723

.thread414:                                       ; preds = %bb1722
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10278

bb1723:                                           ; preds = %bb1722
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10270 = icmp eq i32 %v0_10270.pr, 0
  store i1 %v2_10270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10270, label %dec_label_pc_10278, label %dec_label_pc_f158

dec_label_pc_10278:                               ; preds = %dec_label_pc_10250, %.thread414, %bb1723, %bb1718
  %v0_102a4.pr921 = phi i32 [ %v0_10270.pr918, %dec_label_pc_10250 ], [ 0, %.thread414 ], [ 0, %bb1723 ], [ %v0_10270.pr918, %bb1718 ]
  %v7_10278 = icmp eq i32 %v1_f15c, 74
  %.2000 = zext i1 %v7_10278 to i32
  %v2_10284 = icmp ugt i32 %v1_f170, 90
  store i1 %v2_10284, i1* %cpsr_c.global-to-local, align 1
  %v7_10284 = icmp eq i32 %v1_f170, 91
  store i1 %v7_10284, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10284, label %bb1726, label %dec_label_pc_102ac

bb1726:                                           ; preds = %dec_label_pc_10278
  %v2_10278 = icmp ugt i32 %v1_f15c, 73
  store i1 %v2_10278, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10278, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10278, label %dec_label_pc_10290, label %dec_label_pc_102ac

dec_label_pc_10290:                               ; preds = %bb1726
  %v2_10290 = icmp ugt i32 %v1_f174, 111
  store i1 %v2_10290, i1* %cpsr_c.global-to-local, align 1
  %v7_10290 = icmp eq i32 %v1_f174, 112
  store i1 %v7_10290, i1* %cpsr_z.global-to-local, align 1
  %v2_10294 = xor i1 %v2_10290, true
  %v3_10294 = or i1 %v7_10290, %v2_10294
  br i1 %v3_10294, label %bb1727, label %bb1728

bb1727:                                           ; preds = %dec_label_pc_10290
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1728

bb1728:                                           ; preds = %dec_label_pc_10290, %bb1727
  %v0_102a4.pr920 = phi i32 [ %v0_102a4.pr921, %dec_label_pc_10290 ], [ 0, %bb1727 ]
  %v2_10298 = xor i1 %v7_10290, true
  %v3_10298 = and i1 %v2_10290, %v2_10298
  br i1 %v3_10298, label %bb1729, label %bb1730

bb1729:                                           ; preds = %bb1728
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1730

bb1730:                                           ; preds = %bb1728, %bb1729
  %v0_102a4.pr = phi i32 [ %v0_102a4.pr920, %bb1728 ], [ 1, %bb1729 ]
  %v2_1029c = icmp ugt i32 %v1_f174, 113
  store i1 %v2_1029c, i1* %cpsr_c.global-to-local, align 1
  %v7_1029c = icmp eq i32 %v1_f174, 114
  store i1 %v7_1029c, i1* %cpsr_z.global-to-local, align 1
  %v2_102a0 = xor i1 %v7_1029c, true
  %v3_102a0 = and i1 %v2_1029c, %v2_102a0
  br i1 %v3_102a0, label %.thread420, label %bb1731

.thread420:                                       ; preds = %bb1730
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_102ac

bb1731:                                           ; preds = %bb1730
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_102a4 = icmp eq i32 %v0_102a4.pr, 0
  store i1 %v2_102a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_102a4, label %dec_label_pc_102ac, label %dec_label_pc_f158

dec_label_pc_102ac:                               ; preds = %dec_label_pc_10278, %.thread420, %bb1731, %bb1726
  %v2_102ac = icmp ugt i32 %v1_f170, 200
  store i1 %v2_102ac, i1* %cpsr_c.global-to-local, align 1
  %v7_102ac = icmp eq i32 %v1_f170, 201
  store i1 %v7_102ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102ac, label %.thread423, label %.thread424

.thread424:                                       ; preds = %dec_label_pc_102ac
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_102dc

.thread423:                                       ; preds = %dec_label_pc_102ac
  store i32 %.2000, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_102b8 = icmp eq i1 %v7_10278, false
  store i1 %v2_102b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_102b8, label %dec_label_pc_102dc, label %dec_label_pc_102c0

dec_label_pc_102c0:                               ; preds = %.thread423
  %v2_102c0 = icmp ugt i32 %v1_f174, 54
  store i1 %v2_102c0, i1* %cpsr_c.global-to-local, align 1
  %v7_102c0 = icmp eq i32 %v1_f174, 55
  store i1 %v7_102c0, i1* %cpsr_z.global-to-local, align 1
  %v2_102c4 = xor i1 %v2_102c0, true
  %v3_102c4 = or i1 %v7_102c0, %v2_102c4
  br i1 %v3_102c4, label %bb1732, label %bb1733

bb1732:                                           ; preds = %dec_label_pc_102c0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1733

bb1733:                                           ; preds = %dec_label_pc_102c0, %bb1732
  %v0_102d4.pr924 = phi i32 [ %.2000, %dec_label_pc_102c0 ], [ 0, %bb1732 ]
  %v2_102c8 = xor i1 %v7_102c0, true
  %v3_102c8 = and i1 %v2_102c0, %v2_102c8
  br i1 %v3_102c8, label %bb1734, label %bb1735

bb1734:                                           ; preds = %bb1733
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1735

bb1735:                                           ; preds = %bb1733, %bb1734
  %v0_102d4.pr = phi i32 [ %v0_102d4.pr924, %bb1733 ], [ 1, %bb1734 ]
  %v2_102cc = icmp ugt i32 %v1_f174, 56
  store i1 %v2_102cc, i1* %cpsr_c.global-to-local, align 1
  %v7_102cc = icmp eq i32 %v1_f174, 57
  store i1 %v7_102cc, i1* %cpsr_z.global-to-local, align 1
  %v2_102d0 = xor i1 %v7_102cc, true
  %v3_102d0 = and i1 %v2_102cc, %v2_102d0
  br i1 %v3_102d0, label %.thread428, label %bb1736

.thread428:                                       ; preds = %bb1735
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_102dc

bb1736:                                           ; preds = %bb1735
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_102d4 = icmp eq i32 %v0_102d4.pr, 0
  store i1 %v2_102d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_102d4, label %dec_label_pc_102dc, label %dec_label_pc_f158

dec_label_pc_102dc:                               ; preds = %.thread428, %.thread424, %bb1736, %.thread423
  store i32 %.1988, i32* %fp.global-to-local, align 4
  %v2_102e0 = icmp ugt i32 %v1_f170, 208
  store i1 %v2_102e0, i1* %cpsr_c.global-to-local, align 1
  %v7_102e0 = icmp eq i32 %v1_f170, 209
  %.2001 = zext i1 %v7_102e0 to i32
  store i32 %.2001, i32* %r4.global-to-local, align 4
  %v2_102ec = and i32 %.2001, %.1988
  %v4_102ec = icmp eq i32 %v2_102ec, 0
  store i1 %v4_102ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_102ec, label %dec_label_pc_10310, label %dec_label_pc_102f4

dec_label_pc_102f4:                               ; preds = %dec_label_pc_102dc
  %v2_102f4 = icmp ugt i32 %v1_f174, 46
  store i1 %v2_102f4, i1* %cpsr_c.global-to-local, align 1
  %v7_102f4 = icmp eq i32 %v1_f174, 47
  store i1 %v7_102f4, i1* %cpsr_z.global-to-local, align 1
  %v2_102f8 = xor i1 %v2_102f4, true
  %v3_102f8 = or i1 %v7_102f4, %v2_102f8
  br i1 %v3_102f8, label %bb1739, label %bb1740

bb1739:                                           ; preds = %dec_label_pc_102f4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1740

bb1740:                                           ; preds = %dec_label_pc_102f4, %bb1739
  %v2_102fc = xor i1 %v7_102f4, true
  %v3_102fc = and i1 %v2_102f4, %v2_102fc
  br i1 %v3_102fc, label %bb1741, label %bb1742

bb1741:                                           ; preds = %bb1740
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1742

bb1742:                                           ; preds = %bb1740, %bb1741
  %v0_10308.pr = phi i32 [ 0, %bb1740 ], [ 1, %bb1741 ]
  %v2_10300 = icmp ugt i32 %v1_f174, 51
  store i1 %v2_10300, i1* %cpsr_c.global-to-local, align 1
  %v7_10300 = icmp eq i32 %v1_f174, 52
  store i1 %v7_10300, i1* %cpsr_z.global-to-local, align 1
  %v2_10304 = xor i1 %v7_10300, true
  %v3_10304 = and i1 %v2_10300, %v2_10304
  br i1 %v3_10304, label %.thread433, label %bb1743

.thread433:                                       ; preds = %bb1742
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10310

bb1743:                                           ; preds = %bb1742
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10308 = icmp eq i32 %v0_10308.pr, 0
  store i1 %v2_10308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10308, label %dec_label_pc_10310, label %dec_label_pc_f158

dec_label_pc_10310:                               ; preds = %.thread433, %bb1743, %dec_label_pc_102dc
  store i32 %.1988, i32* %r3.global-to-local, align 4
  %v2_10314 = icmp ugt i32 %v1_f170, 164
  store i1 %v2_10314, i1* %cpsr_c.global-to-local, align 1
  %v7_10314 = icmp eq i32 %v1_f170, 165
  store i1 %v7_10314, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10314, label %.thread436, label %.thread437

.thread437:                                       ; preds = %dec_label_pc_10310
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10328

.thread436:                                       ; preds = %dec_label_pc_10310
  store i32 %.1988, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10320 = icmp eq i1 %v7_fbd4, false
  store i1 %v2_10320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10320, label %dec_label_pc_10328, label %dec_label_pc_f158

dec_label_pc_10328:                               ; preds = %.thread437, %.thread436
  store i32 %storemerge1185, i32* %r3.global-to-local, align 4
  %v2_1032c = icmp ugt i32 %v1_f15c, 148
  store i1 %v2_1032c, i1* %cpsr_c.global-to-local, align 1
  %v7_1032c = icmp eq i32 %v1_f15c, 149
  store i1 %v7_1032c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1032c, label %.thread440, label %.thread441

.thread441:                                       ; preds = %dec_label_pc_10328
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10340

.thread440:                                       ; preds = %dec_label_pc_10328
  store i32 %storemerge1185, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10338 = icmp eq i1 %v7_f388, false
  store i1 %v2_10338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10338, label %dec_label_pc_10340, label %dec_label_pc_f158

dec_label_pc_10340:                               ; preds = %.thread441, %.thread440
  %v2_10340 = icmp ugt i32 %v1_f15c, 150
  store i1 %v2_10340, i1* %cpsr_c.global-to-local, align 1
  %v7_10340 = icmp eq i32 %v1_f15c, 151
  store i1 %v7_10340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10340, label %.thread444, label %.thread445

.thread445:                                       ; preds = %dec_label_pc_10340
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10354

.thread444:                                       ; preds = %dec_label_pc_10340
  store i32 %.1947, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1034c = icmp eq i1 %v7_f230, false
  store i1 %v2_1034c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1034c, label %dec_label_pc_10354, label %dec_label_pc_f158

dec_label_pc_10354:                               ; preds = %.thread445, %.thread444
  store i32 %.1960, i32* %r3.global-to-local, align 4
  %v2_10358 = icmp ugt i32 %v1_f170, 131
  store i1 %v2_10358, i1* %cpsr_c.global-to-local, align 1
  %v7_10358 = icmp eq i32 %v1_f170, 132
  store i1 %v7_10358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10358, label %.thread448, label %.thread449

.thread449:                                       ; preds = %dec_label_pc_10354
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1036c

.thread448:                                       ; preds = %dec_label_pc_10354
  store i32 %.1960, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10364 = icmp eq i1 %v7_f444, false
  store i1 %v2_10364, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10364, label %dec_label_pc_1036c, label %dec_label_pc_f158

dec_label_pc_1036c:                               ; preds = %.thread449, %.thread448
  %v2_1036c = icmp ugt i32 %v1_f15c, 175
  store i1 %v2_1036c, i1* %cpsr_c.global-to-local, align 1
  %v7_1036c = icmp eq i32 %v1_f15c, 176
  store i1 %v7_1036c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1036c, label %bb1744, label %dec_label_pc_10378

bb1744:                                           ; preds = %dec_label_pc_1036c
  %v3_10370 = icmp ugt i32 %v1_f170, 30
  store i1 %v3_10370, i1* %cpsr_c.global-to-local, align 1
  %v8_10370 = icmp eq i32 %v1_f170, 31
  store i1 %v8_10370, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10370, label %dec_label_pc_f158, label %dec_label_pc_10378

dec_label_pc_10378:                               ; preds = %dec_label_pc_1036c, %bb1744
  store i32 %.1961, i32* %r3.global-to-local, align 4
  %v2_10380 = and i32 %.1951, %.1961
  %v4_10380 = icmp eq i32 %v2_10380, 0
  store i1 %v4_10380, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10380, label %dec_label_pc_10388, label %dec_label_pc_f158

dec_label_pc_10388:                               ; preds = %dec_label_pc_10378
  store i32 %storemerge1187, i32* %fp.global-to-local, align 4
  %v2_10390 = and i32 %storemerge1187, %.1990
  %v4_10390 = icmp eq i32 %v2_10390, 0
  store i1 %v4_10390, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10390, label %dec_label_pc_10398, label %dec_label_pc_f158

dec_label_pc_10398:                               ; preds = %dec_label_pc_10388
  store i32 %.1990, i32* %r3.global-to-local, align 4
  %v2_1039c = icmp ugt i32 %v1_f170, 32
  store i1 %v2_1039c, i1* %cpsr_c.global-to-local, align 1
  %v7_1039c = icmp eq i32 %v1_f170, 33
  store i1 %v7_1039c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1039c, label %.thread453, label %.thread454

.thread454:                                       ; preds = %dec_label_pc_10398
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_103b0

.thread453:                                       ; preds = %dec_label_pc_10398
  store i32 %.1990, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_103a8 = icmp eq i1 %v7_fc50, false
  store i1 %v2_103a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103a8, label %dec_label_pc_103b0, label %dec_label_pc_f158

dec_label_pc_103b0:                               ; preds = %.thread454, %.thread453
  store i32 %.1964, i32* %r3.global-to-local, align 4
  %v2_103b4 = and i32 %.1964, %.1993
  %v4_103b4 = icmp eq i32 %v2_103b4, 0
  store i1 %v4_103b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_103b4, label %dec_label_pc_103bc, label %dec_label_pc_f158

dec_label_pc_103bc:                               ; preds = %dec_label_pc_103b0
  %v2_103bc = icmp ugt i32 %v1_f170, 186
  store i1 %v2_103bc, i1* %cpsr_c.global-to-local, align 1
  %v7_103bc = icmp eq i32 %v1_f170, 187
  store i1 %v7_103bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103bc, label %.thread457, label %.thread458

.thread458:                                       ; preds = %dec_label_pc_103bc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_103d0

.thread457:                                       ; preds = %dec_label_pc_103bc
  store i32 %.1993, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_103c8 = icmp eq i1 %v7_fe28, false
  store i1 %v2_103c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103c8, label %dec_label_pc_103d0, label %dec_label_pc_f158

dec_label_pc_103d0:                               ; preds = %.thread458, %.thread457
  %v2_103d0 = icmp ugt i32 %v1_f15c, 45
  store i1 %v2_103d0, i1* %cpsr_c.global-to-local, align 1
  %v7_103d0 = icmp eq i32 %v1_f15c, 46
  store i1 %v7_103d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103d0, label %bb1745, label %dec_label_pc_103dc

bb1745:                                           ; preds = %dec_label_pc_103d0
  %v3_103d4 = icmp ugt i32 %v1_f170, 104
  store i1 %v3_103d4, i1* %cpsr_c.global-to-local, align 1
  %v8_103d4 = icmp eq i32 %v1_f170, 105
  store i1 %v8_103d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_103d4, label %dec_label_pc_f158, label %dec_label_pc_103dc

dec_label_pc_103dc:                               ; preds = %dec_label_pc_103d0, %bb1745
  store i32 %storemerge1205, i32* %fp.global-to-local, align 4
  %v2_103e0 = icmp ugt i32 %v1_f15c, 50
  store i1 %v2_103e0, i1* %cpsr_c.global-to-local, align 1
  %v7_103e0 = icmp eq i32 %v1_f15c, 51
  %.2002 = zext i1 %v7_103e0 to i32
  %v2_103ec = and i32 %storemerge1205, %.2002
  %v4_103ec = icmp eq i32 %v2_103ec, 0
  store i1 %v4_103ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_103ec, label %dec_label_pc_103f4, label %dec_label_pc_f158

dec_label_pc_103f4:                               ; preds = %dec_label_pc_103dc
  %v2_103f4 = icmp eq i32 %v1_f170, 255
  store i1 %v2_103f4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_103f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103f4, label %.thread463, label %.thread464

.thread464:                                       ; preds = %dec_label_pc_103f4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10408

.thread463:                                       ; preds = %dec_label_pc_103f4
  store i32 %.2002, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10400 = icmp eq i1 %v7_103e0, false
  store i1 %v2_10400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10400, label %dec_label_pc_10408, label %dec_label_pc_f158

dec_label_pc_10408:                               ; preds = %.thread464, %.thread463
  %v7_10408 = icmp eq i32 %v1_f15c, 5
  %.2003 = zext i1 %v7_10408 to i32
  store i32 %.2003, i32* %r3.global-to-local, align 4
  %v2_10414 = icmp ugt i32 %v1_f170, 134
  store i1 %v2_10414, i1* %cpsr_c.global-to-local, align 1
  %v7_10414 = icmp eq i32 %v1_f170, 135
  store i1 %v7_10414, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10414, label %bb1750, label %dec_label_pc_10420

bb1750:                                           ; preds = %dec_label_pc_10408
  %v2_10408 = icmp ugt i32 %v1_f15c, 4
  store i1 %v2_10408, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10408, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10408, label %dec_label_pc_f158, label %dec_label_pc_10420

dec_label_pc_10420:                               ; preds = %dec_label_pc_10408, %bb1750
  %v2_10424 = and i32 %.1954, %.2003
  %v4_10424 = icmp eq i32 %v2_10424, 0
  store i1 %v4_10424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10424, label %dec_label_pc_1042c, label %dec_label_pc_f158

dec_label_pc_1042c:                               ; preds = %dec_label_pc_10420
  store i1 %v2_f708, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f708, label %.thread469, label %.thread470

.thread470:                                       ; preds = %dec_label_pc_1042c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10440

.thread469:                                       ; preds = %dec_label_pc_1042c
  store i32 %.2003, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10438 = icmp eq i1 %v7_10408, false
  store i1 %v2_10438, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10438, label %dec_label_pc_10440, label %dec_label_pc_f158

dec_label_pc_10440:                               ; preds = %.thread470, %.thread469
  %v2_10440 = icmp ugt i32 %v1_f15c, 90
  store i1 %v2_10440, i1* %cpsr_c.global-to-local, align 1
  %v7_10440 = icmp eq i32 %v1_f15c, 91
  store i1 %v7_10440, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10440, label %bb1751, label %dec_label_pc_1044c

bb1751:                                           ; preds = %dec_label_pc_10440
  %v3_10444 = icmp ugt i32 %v1_f170, 133
  store i1 %v3_10444, i1* %cpsr_c.global-to-local, align 1
  %v8_10444 = icmp eq i32 %v1_f170, 134
  store i1 %v8_10444, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10444, label %dec_label_pc_f158, label %dec_label_pc_1044c

dec_label_pc_1044c:                               ; preds = %dec_label_pc_10440, %bb1751
  store i32 %.1987, i32* %r3.global-to-local, align 4
  %v2_10450 = icmp ugt i32 %v1_f170, 199
  store i1 %v2_10450, i1* %cpsr_c.global-to-local, align 1
  %v7_10450 = icmp eq i32 %v1_f170, 200
  store i1 %v7_10450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10450, label %.thread474, label %.thread475

.thread475:                                       ; preds = %dec_label_pc_1044c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10478

.thread474:                                       ; preds = %dec_label_pc_1044c
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1045c = icmp eq i1 %v7_fbb4, false
  store i1 %v2_1045c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1045c, label %dec_label_pc_10478, label %dec_label_pc_10464

dec_label_pc_10464:                               ; preds = %.thread474
  %v2_10464 = icmp ugt i32 %v1_f174, 157
  store i1 %v2_10464, i1* %cpsr_c.global-to-local, align 1
  %v7_10464 = icmp eq i32 %v1_f174, 158
  store i1 %v7_10464, i1* %cpsr_z.global-to-local, align 1
  %v2_10468 = xor i1 %v7_10464, true
  %v3_10468 = and i1 %v2_10464, %v2_10468
  br i1 %v3_10468, label %bb1752, label %bb1753

bb1752:                                           ; preds = %dec_label_pc_10464
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1753

bb1753:                                           ; preds = %dec_label_pc_10464, %bb1752
  %v0_10470939 = phi i32 [ %.1987, %dec_label_pc_10464 ], [ 0, %bb1752 ]
  %v2_1046c = xor i1 %v2_10464, true
  %v3_1046c = or i1 %v7_10464, %v2_1046c
  br i1 %v3_1046c, label %bb1754, label %bb1755

bb1754:                                           ; preds = %bb1753
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1755

bb1755:                                           ; preds = %bb1753, %bb1754
  %v0_10470 = phi i32 [ %v0_10470939, %bb1753 ], [ 1, %bb1754 ]
  %v2_10470 = and i32 %v3_f164, 64
  %v3_10470 = icmp ne i32 %v2_10470, 0
  store i1 %v3_10470, i1* %cpsr_c.global-to-local, align 1
  %v4_10470 = udiv i32 %v1_f174, 128
  %v5_10470 = and i32 %v0_10470, %v4_10470
  store i32 %v5_10470, i32* %r3.global-to-local, align 4
  %v6_10470 = icmp eq i32 %v5_10470, 0
  store i1 %v6_10470, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10470, label %dec_label_pc_10478, label %dec_label_pc_f158

dec_label_pc_10478:                               ; preds = %.thread475, %bb1755, %.thread474
  store i32 %.1991, i32* %r3.global-to-local, align 4
  %v2_1047c = icmp ugt i32 %v1_f170, 151
  store i1 %v2_1047c, i1* %cpsr_c.global-to-local, align 1
  %v7_1047c = icmp eq i32 %v1_f170, 152
  store i1 %v7_1047c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1047c, label %.thread478, label %.thread479

.thread479:                                       ; preds = %dec_label_pc_10478
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_104ac

.thread478:                                       ; preds = %dec_label_pc_10478
  store i32 %.1991, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10488 = icmp eq i1 %v7_fca8, false
  store i1 %v2_10488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10488, label %dec_label_pc_104ac, label %dec_label_pc_10490

dec_label_pc_10490:                               ; preds = %.thread478
  %v2_10490 = icmp ugt i32 %v1_f174, 94
  store i1 %v2_10490, i1* %cpsr_c.global-to-local, align 1
  %v7_10490 = icmp eq i32 %v1_f174, 95
  store i1 %v7_10490, i1* %cpsr_z.global-to-local, align 1
  %v2_10494 = xor i1 %v2_10490, true
  %v3_10494 = or i1 %v7_10490, %v2_10494
  br i1 %v3_10494, label %bb1756, label %bb1757

bb1756:                                           ; preds = %dec_label_pc_10490
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1757

bb1757:                                           ; preds = %dec_label_pc_10490, %bb1756
  %v0_104a4.pr942 = phi i32 [ %.1991, %dec_label_pc_10490 ], [ 0, %bb1756 ]
  %v2_10498 = xor i1 %v7_10490, true
  %v3_10498 = and i1 %v2_10490, %v2_10498
  br i1 %v3_10498, label %bb1758, label %bb1759

bb1758:                                           ; preds = %bb1757
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1759

bb1759:                                           ; preds = %bb1757, %bb1758
  %v0_104a4.pr = phi i32 [ %v0_104a4.pr942, %bb1757 ], [ 1, %bb1758 ]
  %v2_1049c = icmp ugt i32 %v1_f174, 109
  store i1 %v2_1049c, i1* %cpsr_c.global-to-local, align 1
  %v7_1049c = icmp eq i32 %v1_f174, 110
  store i1 %v7_1049c, i1* %cpsr_z.global-to-local, align 1
  %v2_104a0 = xor i1 %v7_1049c, true
  %v3_104a0 = and i1 %v2_1049c, %v2_104a0
  br i1 %v3_104a0, label %.thread483, label %bb1760

.thread483:                                       ; preds = %bb1759
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_104ac

bb1760:                                           ; preds = %bb1759
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_104a4 = icmp eq i32 %v0_104a4.pr, 0
  store i1 %v2_104a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_104a4, label %dec_label_pc_104ac, label %dec_label_pc_f158

dec_label_pc_104ac:                               ; preds = %.thread483, %.thread479, %bb1760, %.thread478
  store i32 %.1991, i32* %r3.global-to-local, align 4
  %v2_104b0 = icmp ugt i32 %v1_f170, 180
  store i1 %v2_104b0, i1* %cpsr_c.global-to-local, align 1
  %v7_104b0 = icmp eq i32 %v1_f170, 181
  store i1 %v7_104b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104b0, label %.thread486, label %.thread487

.thread487:                                       ; preds = %dec_label_pc_104ac
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_104e0

.thread486:                                       ; preds = %dec_label_pc_104ac
  store i32 %.1991, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_104bc = icmp eq i1 %v7_fca8, false
  store i1 %v2_104bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_104bc, label %dec_label_pc_104e0, label %dec_label_pc_104c4

dec_label_pc_104c4:                               ; preds = %.thread486
  %v2_104c4 = icmp ugt i32 %v1_f174, 158
  store i1 %v2_104c4, i1* %cpsr_c.global-to-local, align 1
  %v7_104c4 = icmp eq i32 %v1_f174, 159
  store i1 %v7_104c4, i1* %cpsr_z.global-to-local, align 1
  %v2_104c8 = xor i1 %v2_104c4, true
  %v3_104c8 = or i1 %v7_104c4, %v2_104c8
  br i1 %v3_104c8, label %bb1761, label %bb1762

bb1761:                                           ; preds = %dec_label_pc_104c4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1762

bb1762:                                           ; preds = %dec_label_pc_104c4, %bb1761
  %v0_104d8.pr945 = phi i32 [ %.1991, %dec_label_pc_104c4 ], [ 0, %bb1761 ]
  %v2_104cc = xor i1 %v7_104c4, true
  %v3_104cc = and i1 %v2_104c4, %v2_104cc
  br i1 %v3_104cc, label %bb1763, label %bb1764

bb1763:                                           ; preds = %bb1762
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1764

bb1764:                                           ; preds = %bb1762, %bb1763
  %v0_104d8.pr = phi i32 [ %v0_104d8.pr945, %bb1762 ], [ 1, %bb1763 ]
  %v2_104d0 = icmp ugt i32 %v1_f174, 187
  store i1 %v2_104d0, i1* %cpsr_c.global-to-local, align 1
  %v7_104d0 = icmp eq i32 %v1_f174, 188
  store i1 %v7_104d0, i1* %cpsr_z.global-to-local, align 1
  %v2_104d4 = xor i1 %v7_104d0, true
  %v3_104d4 = and i1 %v2_104d0, %v2_104d4
  br i1 %v3_104d4, label %.thread491, label %bb1765

.thread491:                                       ; preds = %bb1764
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_104e0

bb1765:                                           ; preds = %bb1764
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_104d8 = icmp eq i32 %v0_104d8.pr, 0
  store i1 %v2_104d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_104d8, label %dec_label_pc_104e0, label %dec_label_pc_f158

dec_label_pc_104e0:                               ; preds = %.thread491, %.thread487, %bb1765, %.thread486
  store i32 %.1972, i32* %r3.global-to-local, align 4
  %v2_104e4 = and i32 %.1948, %.1972
  %v4_104e4 = icmp eq i32 %v2_104e4, 0
  store i1 %v4_104e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_104e4, label %dec_label_pc_10508, label %dec_label_pc_104ec

dec_label_pc_104ec:                               ; preds = %dec_label_pc_104e0
  %v2_104ec = icmp ugt i32 %v1_f174, 62
  store i1 %v2_104ec, i1* %cpsr_c.global-to-local, align 1
  %v7_104ec = icmp eq i32 %v1_f174, 63
  store i1 %v7_104ec, i1* %cpsr_z.global-to-local, align 1
  %v2_104f0 = xor i1 %v2_104ec, true
  %v3_104f0 = or i1 %v7_104ec, %v2_104f0
  br i1 %v3_104f0, label %bb1766, label %bb1767

bb1766:                                           ; preds = %dec_label_pc_104ec
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1767

bb1767:                                           ; preds = %dec_label_pc_104ec, %bb1766
  %v0_10500.pr947 = phi i32 [ %.1972, %dec_label_pc_104ec ], [ 0, %bb1766 ]
  %v2_104f4 = xor i1 %v7_104ec, true
  %v3_104f4 = and i1 %v2_104ec, %v2_104f4
  br i1 %v3_104f4, label %bb1768, label %bb1769

bb1768:                                           ; preds = %bb1767
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1769

bb1769:                                           ; preds = %bb1767, %bb1768
  %v0_10500.pr = phi i32 [ %v0_10500.pr947, %bb1767 ], [ 1, %bb1768 ]
  %v2_104f8 = icmp ugt i32 %v1_f174, 93
  store i1 %v2_104f8, i1* %cpsr_c.global-to-local, align 1
  %v7_104f8 = icmp eq i32 %v1_f174, 94
  store i1 %v7_104f8, i1* %cpsr_z.global-to-local, align 1
  %v2_104fc = xor i1 %v7_104f8, true
  %v3_104fc = and i1 %v2_104f8, %v2_104fc
  br i1 %v3_104fc, label %.thread495, label %bb1770

.thread495:                                       ; preds = %bb1769
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10508

bb1770:                                           ; preds = %bb1769
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10500 = icmp eq i32 %v0_10500.pr, 0
  store i1 %v2_10500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10500, label %dec_label_pc_10508, label %dec_label_pc_f158

dec_label_pc_10508:                               ; preds = %.thread495, %bb1770, %dec_label_pc_104e0
  store i32 %storemerge1225, i32* %r3.global-to-local, align 4
  %v2_1050c = icmp ugt i32 %v1_f15c, 183
  store i1 %v2_1050c, i1* %cpsr_c.global-to-local, align 1
  %v7_1050c = icmp eq i32 %v1_f15c, 184
  store i1 %v7_1050c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1050c, label %.thread498, label %.thread499

.thread499:                                       ; preds = %dec_label_pc_10508
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1052c

.thread498:                                       ; preds = %dec_label_pc_10508
  store i32 %storemerge1225, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10518 = icmp eq i1 %v7_fcb4, false
  store i1 %v2_10518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10518, label %dec_label_pc_1052c, label %dec_label_pc_10520

dec_label_pc_10520:                               ; preds = %.thread498
  %v2_10520 = icmp eq i32 %v1_f174, 255
  store i1 %v2_10520, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10520, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10520, label %dec_label_pc_1052c, label %bb1771

bb1771:                                           ; preds = %dec_label_pc_10520
  %v3_10524 = icmp ugt i32 %v1_f174, 238
  store i1 %v3_10524, i1* %cpsr_c.global-to-local, align 1
  %v8_10524 = icmp eq i32 %v1_f174, 239
  store i1 %v8_10524, i1* %cpsr_z.global-to-local, align 1
  %v2_10528 = xor i1 %v8_10524, true
  %v3_10528 = and i1 %v3_10524, %v2_10528
  br i1 %v3_10528, label %dec_label_pc_f158, label %dec_label_pc_1052c

dec_label_pc_1052c:                               ; preds = %dec_label_pc_10520, %.thread499, %bb1771, %.thread498
  %v2_1052c = icmp ugt i32 %v1_f170, 110
  store i1 %v2_1052c, i1* %cpsr_c.global-to-local, align 1
  %v7_1052c = icmp eq i32 %v1_f170, 111
  store i1 %v7_1052c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1052c, label %.thread502, label %.thread503

.thread503:                                       ; preds = %dec_label_pc_1052c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10554

.thread502:                                       ; preds = %dec_label_pc_1052c
  store i32 %.1945, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10538 = icmp eq i1 %v7_f200, false
  store i1 %v2_10538, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10538, label %dec_label_pc_10554, label %dec_label_pc_10540

dec_label_pc_10540:                               ; preds = %.thread502
  %v2_10540 = icmp ugt i32 %v1_f174, 141
  store i1 %v2_10540, i1* %cpsr_c.global-to-local, align 1
  %v7_10540 = icmp eq i32 %v1_f174, 142
  store i1 %v7_10540, i1* %cpsr_z.global-to-local, align 1
  %v2_10544 = xor i1 %v7_10540, true
  %v3_10544 = and i1 %v2_10540, %v2_10544
  br i1 %v3_10544, label %bb1772, label %bb1773

bb1772:                                           ; preds = %dec_label_pc_10540
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1773

bb1773:                                           ; preds = %dec_label_pc_10540, %bb1772
  %v0_1054c952 = phi i32 [ %.1945, %dec_label_pc_10540 ], [ 0, %bb1772 ]
  %v2_10548 = xor i1 %v2_10540, true
  %v3_10548 = or i1 %v7_10540, %v2_10548
  br i1 %v3_10548, label %bb1774, label %bb1775

bb1774:                                           ; preds = %bb1773
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1775

bb1775:                                           ; preds = %bb1773, %bb1774
  %v0_1054c = phi i32 [ %v0_1054c952, %bb1773 ], [ 1, %bb1774 ]
  %v2_1054c = and i32 %v3_f164, 64
  %v3_1054c = icmp ne i32 %v2_1054c, 0
  store i1 %v3_1054c, i1* %cpsr_c.global-to-local, align 1
  %v4_1054c = udiv i32 %v1_f174, 128
  %v5_1054c = and i32 %v0_1054c, %v4_1054c
  store i32 %v5_1054c, i32* %r3.global-to-local, align 4
  %v6_1054c = icmp eq i32 %v5_1054c, 0
  store i1 %v6_1054c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_1054c, label %dec_label_pc_10554, label %dec_label_pc_f158

dec_label_pc_10554:                               ; preds = %.thread503, %bb1775, %.thread502
  %v2_10554 = icmp ugt i32 %v1_f170, 251
  store i1 %v2_10554, i1* %cpsr_c.global-to-local, align 1
  %v7_10554 = icmp eq i32 %v1_f170, 252
  store i1 %v7_10554, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10554, label %.thread506, label %.thread507

.thread507:                                       ; preds = %dec_label_pc_10554
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10584

.thread506:                                       ; preds = %dec_label_pc_10554
  store i32 %.1945, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10560 = icmp eq i1 %v7_f200, false
  store i1 %v2_10560, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10560, label %dec_label_pc_10584, label %dec_label_pc_10568

dec_label_pc_10568:                               ; preds = %.thread506
  %v2_10568 = icmp ugt i32 %v1_f174, 206
  store i1 %v2_10568, i1* %cpsr_c.global-to-local, align 1
  %v7_10568 = icmp eq i32 %v1_f174, 207
  store i1 %v7_10568, i1* %cpsr_z.global-to-local, align 1
  %v2_1056c = xor i1 %v2_10568, true
  %v3_1056c = or i1 %v7_10568, %v2_1056c
  br i1 %v3_1056c, label %bb1776, label %bb1777

bb1776:                                           ; preds = %dec_label_pc_10568
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1777

bb1777:                                           ; preds = %dec_label_pc_10568, %bb1776
  %v0_1057c.pr954 = phi i32 [ %.1945, %dec_label_pc_10568 ], [ 0, %bb1776 ]
  %v2_10570 = xor i1 %v7_10568, true
  %v3_10570 = and i1 %v2_10568, %v2_10570
  br i1 %v3_10570, label %bb1778, label %bb1779

bb1778:                                           ; preds = %bb1777
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1779

bb1779:                                           ; preds = %bb1777, %bb1778
  %v0_1057c.pr = phi i32 [ %v0_1057c.pr954, %bb1777 ], [ 1, %bb1778 ]
  %v2_10574 = icmp ugt i32 %v1_f174, 221
  store i1 %v2_10574, i1* %cpsr_c.global-to-local, align 1
  %v7_10574 = icmp eq i32 %v1_f174, 222
  store i1 %v7_10574, i1* %cpsr_z.global-to-local, align 1
  %v2_10578 = xor i1 %v7_10574, true
  %v3_10578 = and i1 %v2_10574, %v2_10578
  br i1 %v3_10578, label %.thread511, label %bb1780

.thread511:                                       ; preds = %bb1779
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10584

bb1780:                                           ; preds = %bb1779
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1057c = icmp eq i32 %v0_1057c.pr, 0
  store i1 %v2_1057c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1057c, label %dec_label_pc_10584, label %dec_label_pc_f158

dec_label_pc_10584:                               ; preds = %.thread511, %.thread507, %bb1780, %.thread506
  %v2_10584 = icmp ugt i32 %v1_f170, 39
  store i1 %v2_10584, i1* %cpsr_c.global-to-local, align 1
  %v7_10584 = icmp eq i32 %v1_f170, 40
  store i1 %v7_10584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10584, label %.thread514, label %.thread515

.thread515:                                       ; preds = %dec_label_pc_10584
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_105b4

.thread514:                                       ; preds = %dec_label_pc_10584
  store i32 %.1945, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10590 = icmp eq i1 %v7_f200, false
  store i1 %v2_10590, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10590, label %dec_label_pc_105b4, label %dec_label_pc_10598

dec_label_pc_10598:                               ; preds = %.thread514
  %v2_10598 = icmp ugt i32 %v1_f174, 54
  store i1 %v2_10598, i1* %cpsr_c.global-to-local, align 1
  %v7_10598 = icmp eq i32 %v1_f174, 55
  store i1 %v7_10598, i1* %cpsr_z.global-to-local, align 1
  %v2_1059c = xor i1 %v2_10598, true
  %v3_1059c = or i1 %v7_10598, %v2_1059c
  br i1 %v3_1059c, label %bb1781, label %bb1782

bb1781:                                           ; preds = %dec_label_pc_10598
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1782

bb1782:                                           ; preds = %dec_label_pc_10598, %bb1781
  %v0_105ac.pr956 = phi i32 [ %.1945, %dec_label_pc_10598 ], [ 0, %bb1781 ]
  %v2_105a0 = xor i1 %v7_10598, true
  %v3_105a0 = and i1 %v2_10598, %v2_105a0
  br i1 %v3_105a0, label %bb1783, label %bb1784

bb1783:                                           ; preds = %bb1782
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1784

bb1784:                                           ; preds = %bb1782, %bb1783
  %v0_105ac.pr = phi i32 [ %v0_105ac.pr956, %bb1782 ], [ 1, %bb1783 ]
  %v2_105a4 = icmp ugt i32 %v1_f174, 57
  store i1 %v2_105a4, i1* %cpsr_c.global-to-local, align 1
  %v7_105a4 = icmp eq i32 %v1_f174, 58
  store i1 %v7_105a4, i1* %cpsr_z.global-to-local, align 1
  %v2_105a8 = xor i1 %v7_105a4, true
  %v3_105a8 = and i1 %v2_105a4, %v2_105a8
  br i1 %v3_105a8, label %.thread519, label %bb1785

.thread519:                                       ; preds = %bb1784
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_105b4

bb1785:                                           ; preds = %bb1784
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105ac = icmp eq i32 %v0_105ac.pr, 0
  store i1 %v2_105ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105ac, label %dec_label_pc_105b4, label %dec_label_pc_f158

dec_label_pc_105b4:                               ; preds = %.thread519, %.thread515, %bb1785, %.thread514
  store i32 %.1974, i32* %r3.global-to-local, align 4
  %v2_105b8 = icmp ugt i32 %v1_f170, 7
  store i1 %v2_105b8, i1* %cpsr_c.global-to-local, align 1
  %v7_105b8 = icmp eq i32 %v1_f170, 8
  store i1 %v7_105b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_105b8, label %.thread522, label %.thread523

.thread523:                                       ; preds = %dec_label_pc_105b4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_105e8

.thread522:                                       ; preds = %dec_label_pc_105b4
  store i32 %.1974, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105c4 = icmp eq i1 %v7_f65c, false
  store i1 %v2_105c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105c4, label %dec_label_pc_105e8, label %dec_label_pc_105cc

dec_label_pc_105cc:                               ; preds = %.thread522
  %v2_105cc = icmp ugt i32 %v1_f174, 79
  store i1 %v2_105cc, i1* %cpsr_c.global-to-local, align 1
  %v7_105cc = icmp eq i32 %v1_f174, 80
  store i1 %v7_105cc, i1* %cpsr_z.global-to-local, align 1
  %v2_105d0 = xor i1 %v2_105cc, true
  %v3_105d0 = or i1 %v7_105cc, %v2_105d0
  br i1 %v3_105d0, label %bb1786, label %bb1787

bb1786:                                           ; preds = %dec_label_pc_105cc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1787

bb1787:                                           ; preds = %dec_label_pc_105cc, %bb1786
  %v0_105e0.pr959 = phi i32 [ %.1974, %dec_label_pc_105cc ], [ 0, %bb1786 ]
  %v2_105d4 = xor i1 %v7_105cc, true
  %v3_105d4 = and i1 %v2_105cc, %v2_105d4
  br i1 %v3_105d4, label %bb1788, label %bb1789

bb1788:                                           ; preds = %bb1787
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1789

bb1789:                                           ; preds = %bb1787, %bb1788
  %v0_105e0.pr = phi i32 [ %v0_105e0.pr959, %bb1787 ], [ 1, %bb1788 ]
  %v2_105d8 = icmp ugt i32 %v1_f174, 93
  store i1 %v2_105d8, i1* %cpsr_c.global-to-local, align 1
  %v7_105d8 = icmp eq i32 %v1_f174, 94
  store i1 %v7_105d8, i1* %cpsr_z.global-to-local, align 1
  %v2_105dc = xor i1 %v7_105d8, true
  %v3_105dc = and i1 %v2_105d8, %v2_105dc
  br i1 %v3_105dc, label %.thread527, label %bb1790

.thread527:                                       ; preds = %bb1789
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_105e8

bb1790:                                           ; preds = %bb1789
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105e0 = icmp eq i32 %v0_105e0.pr, 0
  store i1 %v2_105e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105e0, label %dec_label_pc_105e8, label %dec_label_pc_f158

dec_label_pc_105e8:                               ; preds = %.thread527, %.thread523, %bb1790, %.thread522
  store i32 %.1986, i32* %r3.global-to-local, align 4
  %v2_105ec = icmp ugt i32 %v1_f170, 115
  store i1 %v2_105ec, i1* %cpsr_c.global-to-local, align 1
  %v7_105ec = icmp eq i32 %v1_f170, 116
  store i1 %v7_105ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_105ec, label %.thread530, label %.thread531

.thread531:                                       ; preds = %dec_label_pc_105e8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1061c

.thread530:                                       ; preds = %dec_label_pc_105e8
  store i32 %.1986, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105f8 = icmp eq i1 %v7_fb40, false
  store i1 %v2_105f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105f8, label %dec_label_pc_1061c, label %dec_label_pc_10600

dec_label_pc_10600:                               ; preds = %.thread530
  %v2_10600 = icmp ugt i32 %v1_f174, 110
  store i1 %v2_10600, i1* %cpsr_c.global-to-local, align 1
  %v7_10600 = icmp eq i32 %v1_f174, 111
  store i1 %v7_10600, i1* %cpsr_z.global-to-local, align 1
  %v2_10604 = xor i1 %v2_10600, true
  %v3_10604 = or i1 %v7_10600, %v2_10604
  br i1 %v3_10604, label %bb1791, label %bb1792

bb1791:                                           ; preds = %dec_label_pc_10600
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1792

bb1792:                                           ; preds = %dec_label_pc_10600, %bb1791
  %v0_10614.pr962 = phi i32 [ %.1986, %dec_label_pc_10600 ], [ 0, %bb1791 ]
  %v2_10608 = xor i1 %v7_10600, true
  %v3_10608 = and i1 %v2_10600, %v2_10608
  br i1 %v3_10608, label %bb1793, label %bb1794

bb1793:                                           ; preds = %bb1792
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1794

bb1794:                                           ; preds = %bb1792, %bb1793
  %v0_10614.pr = phi i32 [ %v0_10614.pr962, %bb1792 ], [ 1, %bb1793 ]
  %v2_1060c = icmp ugt i32 %v1_f174, 117
  store i1 %v2_1060c, i1* %cpsr_c.global-to-local, align 1
  %v7_1060c = icmp eq i32 %v1_f174, 118
  store i1 %v7_1060c, i1* %cpsr_z.global-to-local, align 1
  %v2_10610 = xor i1 %v7_1060c, true
  %v3_10610 = and i1 %v2_1060c, %v2_10610
  br i1 %v3_10610, label %.thread535, label %bb1795

.thread535:                                       ; preds = %bb1794
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1061c

bb1795:                                           ; preds = %bb1794
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10614 = icmp eq i32 %v0_10614.pr, 0
  store i1 %v2_10614, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10614, label %dec_label_pc_1061c, label %dec_label_pc_f158

dec_label_pc_1061c:                               ; preds = %.thread535, %.thread531, %bb1795, %.thread530
  store i32 %.1956, i32* %fp.global-to-local, align 4
  %v2_10624 = and i32 %.1956, %.1986
  %v4_10624 = icmp eq i32 %v2_10624, 0
  store i1 %v4_10624, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10624, label %dec_label_pc_10638, label %dec_label_pc_1062c

dec_label_pc_1062c:                               ; preds = %dec_label_pc_1061c
  %v2_1062c = icmp eq i32 %v1_f174, 255
  store i1 %v2_1062c, i1* %cpsr_c.global-to-local, align 1
  %v7_1062c = icmp eq i32 %v1_f174, 255
  store i1 %v7_1062c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1062c, label %dec_label_pc_10638, label %bb1796

bb1796:                                           ; preds = %dec_label_pc_1062c
  %v3_10630 = icmp ugt i32 %v1_f174, 246
  store i1 %v3_10630, i1* %cpsr_c.global-to-local, align 1
  %v8_10630 = icmp eq i32 %v1_f174, 247
  store i1 %v8_10630, i1* %cpsr_z.global-to-local, align 1
  %v2_10634 = xor i1 %v8_10630, true
  %v3_10634 = and i1 %v3_10630, %v2_10634
  br i1 %v3_10634, label %dec_label_pc_f158, label %dec_label_pc_10638

dec_label_pc_10638:                               ; preds = %dec_label_pc_1062c, %bb1796, %dec_label_pc_1061c
  store i32 %.1986, i32* %r3.global-to-local, align 4
  %v2_1063c = icmp ugt i32 %v1_f170, 35
  store i1 %v2_1063c, i1* %cpsr_c.global-to-local, align 1
  %v7_1063c = icmp eq i32 %v1_f170, 36
  store i1 %v7_1063c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1063c, label %.thread538, label %.thread539

.thread539:                                       ; preds = %dec_label_pc_10638
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1066c

.thread538:                                       ; preds = %dec_label_pc_10638
  store i32 %.1986, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10648 = icmp eq i1 %v7_fb40, false
  store i1 %v2_10648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10648, label %dec_label_pc_1066c, label %dec_label_pc_10650

dec_label_pc_10650:                               ; preds = %.thread538
  %v2_10650 = icmp ugt i32 %v1_f174, 218
  store i1 %v2_10650, i1* %cpsr_c.global-to-local, align 1
  %v7_10650 = icmp eq i32 %v1_f174, 219
  store i1 %v7_10650, i1* %cpsr_z.global-to-local, align 1
  %v2_10654 = xor i1 %v2_10650, true
  %v3_10654 = or i1 %v7_10650, %v2_10654
  br i1 %v3_10654, label %bb1797, label %bb1798

bb1797:                                           ; preds = %dec_label_pc_10650
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1798

bb1798:                                           ; preds = %dec_label_pc_10650, %bb1797
  %v0_10664.pr967 = phi i32 [ %.1986, %dec_label_pc_10650 ], [ 0, %bb1797 ]
  %v2_10658 = xor i1 %v7_10650, true
  %v3_10658 = and i1 %v2_10650, %v2_10658
  br i1 %v3_10658, label %bb1799, label %bb1800

bb1799:                                           ; preds = %bb1798
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1800

bb1800:                                           ; preds = %bb1798, %bb1799
  %v0_10664.pr = phi i32 [ %v0_10664.pr967, %bb1798 ], [ 1, %bb1799 ]
  %v2_1065c = icmp ugt i32 %v1_f174, 221
  store i1 %v2_1065c, i1* %cpsr_c.global-to-local, align 1
  %v7_1065c = icmp eq i32 %v1_f174, 222
  store i1 %v7_1065c, i1* %cpsr_z.global-to-local, align 1
  %v2_10660 = xor i1 %v7_1065c, true
  %v3_10660 = and i1 %v2_1065c, %v2_10660
  br i1 %v3_10660, label %.thread543, label %bb1801

.thread543:                                       ; preds = %bb1800
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1066c

bb1801:                                           ; preds = %bb1800
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10664 = icmp eq i32 %v0_10664.pr, 0
  store i1 %v2_10664, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10664, label %dec_label_pc_1066c, label %dec_label_pc_f158

dec_label_pc_1066c:                               ; preds = %.thread543, %.thread539, %bb1801, %.thread538
  store i32 %.1986, i32* %r3.global-to-local, align 4
  %v2_10670 = icmp ugt i32 %v1_f170, 57
  store i1 %v2_10670, i1* %cpsr_c.global-to-local, align 1
  %v7_10670 = icmp eq i32 %v1_f170, 58
  store i1 %v7_10670, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10670, label %.thread546, label %.thread547

.thread547:                                       ; preds = %dec_label_pc_1066c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106a0

.thread546:                                       ; preds = %dec_label_pc_1066c
  store i32 %.1986, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1067c = icmp eq i1 %v7_fb40, false
  store i1 %v2_1067c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1067c, label %dec_label_pc_106a0, label %dec_label_pc_10684

dec_label_pc_10684:                               ; preds = %.thread546
  %v2_10684 = icmp ugt i32 %v1_f174, 182
  store i1 %v2_10684, i1* %cpsr_c.global-to-local, align 1
  %v7_10684 = icmp eq i32 %v1_f174, 183
  store i1 %v7_10684, i1* %cpsr_z.global-to-local, align 1
  %v2_10688 = xor i1 %v2_10684, true
  %v3_10688 = or i1 %v7_10684, %v2_10688
  br i1 %v3_10688, label %bb1802, label %bb1803

bb1802:                                           ; preds = %dec_label_pc_10684
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1803

bb1803:                                           ; preds = %dec_label_pc_10684, %bb1802
  %v0_10698.pr970 = phi i32 [ %.1986, %dec_label_pc_10684 ], [ 0, %bb1802 ]
  %v2_1068c = xor i1 %v7_10684, true
  %v3_1068c = and i1 %v2_10684, %v2_1068c
  br i1 %v3_1068c, label %bb1804, label %bb1805

bb1804:                                           ; preds = %bb1803
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1805

bb1805:                                           ; preds = %bb1803, %bb1804
  %v0_10698.pr = phi i32 [ %v0_10698.pr970, %bb1803 ], [ 1, %bb1804 ]
  %v2_10690 = icmp ugt i32 %v1_f174, 185
  store i1 %v2_10690, i1* %cpsr_c.global-to-local, align 1
  %v7_10690 = icmp eq i32 %v1_f174, 186
  store i1 %v7_10690, i1* %cpsr_z.global-to-local, align 1
  %v2_10694 = xor i1 %v7_10690, true
  %v3_10694 = and i1 %v2_10690, %v2_10694
  br i1 %v3_10694, label %.thread551, label %bb1806

.thread551:                                       ; preds = %bb1805
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106a0

bb1806:                                           ; preds = %bb1805
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10698 = icmp eq i32 %v0_10698.pr, 0
  store i1 %v2_10698, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10698, label %dec_label_pc_106a0, label %dec_label_pc_f158

dec_label_pc_106a0:                               ; preds = %.thread551, %.thread547, %bb1806, %.thread546
  %v2_106a0 = icmp ugt i32 %v1_f15c, 205
  store i1 %v2_106a0, i1* %cpsr_c.global-to-local, align 1
  %v7_106a0 = icmp eq i32 %v1_f15c, 206
  store i1 %v7_106a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106a0, label %bb1807, label %dec_label_pc_106c8

bb1807:                                           ; preds = %dec_label_pc_106a0
  %v3_106a4 = icmp ugt i32 %v1_f170, 219
  store i1 %v3_106a4, i1* %cpsr_c.global-to-local, align 1
  %v8_106a4 = icmp eq i32 %v1_f170, 220
  store i1 %v8_106a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_106a4, label %dec_label_pc_106ac, label %dec_label_pc_106c8

dec_label_pc_106ac:                               ; preds = %bb1807
  %v2_106ac = icmp ugt i32 %v1_f174, 170
  store i1 %v2_106ac, i1* %cpsr_c.global-to-local, align 1
  %v7_106ac = icmp eq i32 %v1_f174, 171
  store i1 %v7_106ac, i1* %cpsr_z.global-to-local, align 1
  %v2_106b0 = xor i1 %v2_106ac, true
  %v3_106b0 = or i1 %v7_106ac, %v2_106b0
  br i1 %v3_106b0, label %bb1808, label %bb1809

bb1808:                                           ; preds = %dec_label_pc_106ac
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1809

bb1809:                                           ; preds = %dec_label_pc_106ac, %bb1808
  %v2_106b4 = xor i1 %v7_106ac, true
  %v3_106b4 = and i1 %v2_106ac, %v2_106b4
  br i1 %v3_106b4, label %bb1810, label %bb1811

bb1810:                                           ; preds = %bb1809
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1811

bb1811:                                           ; preds = %bb1809, %bb1810
  %v0_106c0.pr = phi i32 [ 0, %bb1809 ], [ 1, %bb1810 ]
  %v2_106b8 = icmp ugt i32 %v1_f174, 173
  store i1 %v2_106b8, i1* %cpsr_c.global-to-local, align 1
  %v7_106b8 = icmp eq i32 %v1_f174, 174
  store i1 %v7_106b8, i1* %cpsr_z.global-to-local, align 1
  %v2_106bc = xor i1 %v7_106b8, true
  %v3_106bc = and i1 %v2_106b8, %v2_106bc
  br i1 %v3_106bc, label %.thread556, label %bb1812

.thread556:                                       ; preds = %bb1811
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106c8

bb1812:                                           ; preds = %bb1811
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106c0 = icmp eq i32 %v0_106c0.pr, 0
  store i1 %v2_106c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106c0, label %dec_label_pc_106c8, label %dec_label_pc_f158

dec_label_pc_106c8:                               ; preds = %dec_label_pc_106a0, %.thread556, %bb1812, %bb1807
  store i32 %.1997, i32* %r3.global-to-local, align 4
  %v2_106cc = icmp ugt i32 %v1_f170, 77
  store i1 %v2_106cc, i1* %cpsr_c.global-to-local, align 1
  %v7_106cc = icmp eq i32 %v1_f170, 78
  store i1 %v7_106cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106cc, label %.thread559, label %.thread560

.thread560:                                       ; preds = %dec_label_pc_106c8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106fc

.thread559:                                       ; preds = %dec_label_pc_106c8
  store i32 %.1997, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106d8 = icmp eq i1 %v7_10008, false
  store i1 %v2_106d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106d8, label %dec_label_pc_106fc, label %dec_label_pc_106e0

dec_label_pc_106e0:                               ; preds = %.thread559
  %v2_106e0 = icmp ugt i32 %v1_f174, 38
  store i1 %v2_106e0, i1* %cpsr_c.global-to-local, align 1
  %v7_106e0 = icmp eq i32 %v1_f174, 39
  store i1 %v7_106e0, i1* %cpsr_z.global-to-local, align 1
  %v2_106e4 = xor i1 %v2_106e0, true
  %v3_106e4 = or i1 %v7_106e0, %v2_106e4
  br i1 %v3_106e4, label %bb1813, label %bb1814

bb1813:                                           ; preds = %dec_label_pc_106e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1814

bb1814:                                           ; preds = %dec_label_pc_106e0, %bb1813
  %v0_106f4.pr976 = phi i32 [ %.1997, %dec_label_pc_106e0 ], [ 0, %bb1813 ]
  %v2_106e8 = xor i1 %v7_106e0, true
  %v3_106e8 = and i1 %v2_106e0, %v2_106e8
  br i1 %v3_106e8, label %bb1815, label %bb1816

bb1815:                                           ; preds = %bb1814
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1816

bb1816:                                           ; preds = %bb1814, %bb1815
  %v0_106f4.pr = phi i32 [ %v0_106f4.pr976, %bb1814 ], [ 1, %bb1815 ]
  %v2_106ec = icmp ugt i32 %v1_f174, 41
  store i1 %v2_106ec, i1* %cpsr_c.global-to-local, align 1
  %v7_106ec = icmp eq i32 %v1_f174, 42
  store i1 %v7_106ec, i1* %cpsr_z.global-to-local, align 1
  %v2_106f0 = xor i1 %v7_106ec, true
  %v3_106f0 = and i1 %v2_106ec, %v2_106f0
  br i1 %v3_106f0, label %.thread564, label %bb1817

.thread564:                                       ; preds = %bb1816
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106fc

bb1817:                                           ; preds = %bb1816
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106f4 = icmp eq i32 %v0_106f4.pr, 0
  store i1 %v2_106f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106f4, label %dec_label_pc_106fc, label %dec_label_pc_f158

dec_label_pc_106fc:                               ; preds = %.thread564, %.thread560, %bb1817, %.thread559
  store i32 %.1997, i32* %r3.global-to-local, align 4
  %v2_10700 = icmp ugt i32 %v1_f170, 92
  store i1 %v2_10700, i1* %cpsr_c.global-to-local, align 1
  %v7_10700 = icmp eq i32 %v1_f170, 93
  store i1 %v7_10700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10700, label %.thread567, label %.thread568

.thread568:                                       ; preds = %dec_label_pc_106fc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10730

.thread567:                                       ; preds = %dec_label_pc_106fc
  store i32 %.1997, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1070c = icmp eq i1 %v7_10008, false
  store i1 %v2_1070c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1070c, label %dec_label_pc_10730, label %dec_label_pc_10714

dec_label_pc_10714:                               ; preds = %.thread567
  %v2_10714 = icmp ugt i32 %v1_f174, 190
  store i1 %v2_10714, i1* %cpsr_c.global-to-local, align 1
  %v7_10714 = icmp eq i32 %v1_f174, 191
  store i1 %v7_10714, i1* %cpsr_z.global-to-local, align 1
  %v2_10718 = xor i1 %v2_10714, true
  %v3_10718 = or i1 %v7_10714, %v2_10718
  br i1 %v3_10718, label %bb1818, label %bb1819

bb1818:                                           ; preds = %dec_label_pc_10714
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1819

bb1819:                                           ; preds = %dec_label_pc_10714, %bb1818
  %v0_10728.pr979 = phi i32 [ %.1997, %dec_label_pc_10714 ], [ 0, %bb1818 ]
  %v2_1071c = xor i1 %v7_10714, true
  %v3_1071c = and i1 %v2_10714, %v2_1071c
  br i1 %v3_1071c, label %bb1820, label %bb1821

bb1820:                                           ; preds = %bb1819
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1821

bb1821:                                           ; preds = %bb1819, %bb1820
  %v0_10728.pr = phi i32 [ %v0_10728.pr979, %bb1819 ], [ 1, %bb1820 ]
  %v2_10720 = icmp ugt i32 %v1_f174, 191
  store i1 %v2_10720, i1* %cpsr_c.global-to-local, align 1
  %v7_10720 = icmp eq i32 %v1_f174, 192
  store i1 %v7_10720, i1* %cpsr_z.global-to-local, align 1
  %v2_10724 = xor i1 %v7_10720, true
  %v3_10724 = and i1 %v2_10720, %v2_10724
  br i1 %v3_10724, label %.thread572, label %bb1822

.thread572:                                       ; preds = %bb1821
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10730

bb1822:                                           ; preds = %bb1821
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10728 = icmp eq i32 %v0_10728.pr, 0
  store i1 %v2_10728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10728, label %dec_label_pc_10730, label %dec_label_pc_f158

dec_label_pc_10730:                               ; preds = %.thread572, %.thread568, %bb1822, %.thread567
  store i32 %.1998, i32* %r3.global-to-local, align 4
  %v2_10734 = icmp ugt i32 %v1_f170, 70
  store i1 %v2_10734, i1* %cpsr_c.global-to-local, align 1
  %v7_10734 = icmp eq i32 %v1_f170, 71
  store i1 %v7_10734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10734, label %.thread575, label %.thread576

.thread576:                                       ; preds = %dec_label_pc_10730
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10754

.thread575:                                       ; preds = %dec_label_pc_10730
  store i32 %.1998, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10740 = icmp eq i1 %v7_10044, false
  store i1 %v2_10740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10740, label %dec_label_pc_10754, label %dec_label_pc_10748

dec_label_pc_10748:                               ; preds = %.thread575
  %v2_10748 = icmp eq i32 %v1_f174, 255
  store i1 %v2_10748, i1* %cpsr_c.global-to-local, align 1
  %v7_10748 = icmp eq i32 %v1_f174, 255
  store i1 %v7_10748, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10748, label %dec_label_pc_10754, label %bb1823

bb1823:                                           ; preds = %dec_label_pc_10748
  %v3_1074c = icmp ugt i32 %v1_f174, 238
  store i1 %v3_1074c, i1* %cpsr_c.global-to-local, align 1
  %v8_1074c = icmp eq i32 %v1_f174, 239
  store i1 %v8_1074c, i1* %cpsr_z.global-to-local, align 1
  %v2_10750 = xor i1 %v8_1074c, true
  %v3_10750 = and i1 %v3_1074c, %v2_10750
  br i1 %v3_10750, label %dec_label_pc_f158, label %dec_label_pc_10754

dec_label_pc_10754:                               ; preds = %dec_label_pc_10748, %.thread576, %bb1823, %.thread575
  %v0_10774.pr985 = phi i32 [ 0, %.thread576 ], [ %.1998, %bb1823 ], [ 0, %.thread575 ], [ %.1998, %dec_label_pc_10748 ]
  %v2_10754 = icmp ugt i32 %v1_f15c, 97
  store i1 %v2_10754, i1* %cpsr_c.global-to-local, align 1
  %v7_10754 = icmp eq i32 %v1_f15c, 98
  store i1 %v7_10754, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10754, label %bb1824, label %dec_label_pc_1077c

bb1824:                                           ; preds = %dec_label_pc_10754
  %v3_10758 = icmp ugt i32 %v1_f170, 141
  store i1 %v3_10758, i1* %cpsr_c.global-to-local, align 1
  %v8_10758 = icmp eq i32 %v1_f170, 142
  store i1 %v8_10758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10758, label %dec_label_pc_10760, label %dec_label_pc_1077c

dec_label_pc_10760:                               ; preds = %bb1824
  %v2_10760 = icmp ugt i32 %v1_f174, 206
  store i1 %v2_10760, i1* %cpsr_c.global-to-local, align 1
  %v7_10760 = icmp eq i32 %v1_f174, 207
  store i1 %v7_10760, i1* %cpsr_z.global-to-local, align 1
  %v2_10764 = xor i1 %v2_10760, true
  %v3_10764 = or i1 %v7_10760, %v2_10764
  br i1 %v3_10764, label %bb1825, label %bb1826

bb1825:                                           ; preds = %dec_label_pc_10760
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1826

bb1826:                                           ; preds = %dec_label_pc_10760, %bb1825
  %v0_10774.pr984 = phi i32 [ %v0_10774.pr985, %dec_label_pc_10760 ], [ 0, %bb1825 ]
  %v2_10768 = xor i1 %v7_10760, true
  %v3_10768 = and i1 %v2_10760, %v2_10768
  br i1 %v3_10768, label %bb1827, label %bb1828

bb1827:                                           ; preds = %bb1826
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1828

bb1828:                                           ; preds = %bb1826, %bb1827
  %v0_10774.pr = phi i32 [ %v0_10774.pr984, %bb1826 ], [ 1, %bb1827 ]
  %v2_1076c = icmp ugt i32 %v1_f174, 221
  store i1 %v2_1076c, i1* %cpsr_c.global-to-local, align 1
  %v7_1076c = icmp eq i32 %v1_f174, 222
  store i1 %v7_1076c, i1* %cpsr_z.global-to-local, align 1
  %v2_10770 = xor i1 %v7_1076c, true
  %v3_10770 = and i1 %v2_1076c, %v2_10770
  br i1 %v3_10770, label %.thread581, label %bb1829

.thread581:                                       ; preds = %bb1828
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1077c

bb1829:                                           ; preds = %bb1828
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10774 = icmp eq i32 %v0_10774.pr, 0
  store i1 %v2_10774, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10774, label %dec_label_pc_1077c, label %dec_label_pc_f158

dec_label_pc_1077c:                               ; preds = %dec_label_pc_10754, %.thread581, %bb1829, %bb1824
  store i32 %.1991, i32* %r3.global-to-local, align 4
  %v2_10780 = icmp ugt i32 %v1_f170, 18
  store i1 %v2_10780, i1* %cpsr_c.global-to-local, align 1
  %v7_10780 = icmp eq i32 %v1_f170, 19
  store i1 %v7_10780, i1* %cpsr_z.global-to-local, align 1
  %v2_10784 = xor i1 %v2_10780, true
  %v3_10784 = or i1 %v7_10780, %v2_10784
  br i1 %v3_10784, label %bb1830, label %bb1831

bb1830:                                           ; preds = %dec_label_pc_1077c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1831

bb1831:                                           ; preds = %dec_label_pc_1077c, %bb1830
  %v4_10788 = phi i32 [ %.1991, %dec_label_pc_1077c ], [ 0, %bb1830 ]
  %v2_10788 = xor i1 %v7_10780, true
  %v3_10788 = and i1 %v2_10780, %v2_10788
  br i1 %v3_10788, label %bb1832, label %thread-pre-split584

bb1832:                                           ; preds = %bb1831
  store i32 %v4_10788, i32* %r3.global-to-local, align 4
  br label %thread-pre-split584

thread-pre-split584:                              ; preds = %bb1831, %bb1832
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1078c = icmp eq i32 %v4_10788, 0
  store i1 %v2_1078c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1078c, label %dec_label_pc_1079c, label %dec_label_pc_10794

dec_label_pc_10794:                               ; preds = %thread-pre-split584
  %v2_10794 = icmp ugt i32 %v1_f170, 22
  store i1 %v2_10794, i1* %cpsr_c.global-to-local, align 1
  %v7_10794 = icmp eq i32 %v1_f170, 23
  store i1 %v7_10794, i1* %cpsr_z.global-to-local, align 1
  %v2_10798 = xor i1 %v2_10794, true
  %v3_10798 = or i1 %v7_10794, %v2_10798
  br i1 %v3_10798, label %dec_label_pc_f158, label %dec_label_pc_1079c

dec_label_pc_1079c:                               ; preds = %dec_label_pc_10794, %thread-pre-split584
  %v7_1079c = icmp eq i32 %v1_f15c, 35
  %.2004 = zext i1 %v7_1079c to i32
  store i32 %.2004, i32* %r3.global-to-local, align 4
  store i1 %v2_f450, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f450, i1* %cpsr_z.global-to-local, align 1
  %v2_107ac = xor i1 %v2_f450, true
  %v3_107ac = or i1 %v7_f450, %v2_107ac
  br i1 %v3_107ac, label %.thread587, label %bb1835

.thread587:                                       ; preds = %dec_label_pc_1079c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_107c0

bb1835:                                           ; preds = %dec_label_pc_1079c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_107b0 = icmp eq i1 %v7_1079c, false
  store i1 %v2_107b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_107b0, label %dec_label_pc_107c0, label %dec_label_pc_107b8

dec_label_pc_107b8:                               ; preds = %bb1835
  %v2_107b8 = icmp ugt i32 %v1_f170, 181
  store i1 %v2_107b8, i1* %cpsr_c.global-to-local, align 1
  %v7_107b8 = icmp eq i32 %v1_f170, 182
  store i1 %v7_107b8, i1* %cpsr_z.global-to-local, align 1
  %v2_107bc = xor i1 %v2_107b8, true
  %v3_107bc = or i1 %v7_107b8, %v2_107bc
  br i1 %v3_107bc, label %dec_label_pc_f158, label %dec_label_pc_107c0

dec_label_pc_107c0:                               ; preds = %.thread587, %dec_label_pc_107b8, %bb1835
  store i32 %v0_107d0, i32* %fp.global-to-local, align 4
  %v2_107c4 = icmp ugt i32 %v1_f15c, 51
  store i1 %v2_107c4, i1* %cpsr_c.global-to-local, align 1
  %v7_107c4 = icmp eq i32 %v1_f15c, 52
  %.2005 = zext i1 %v7_107c4 to i32
  store i32 %.2005, i32* %r3.global-to-local, align 4
  %v2_107d0 = and i32 %.2005, %v0_107d0
  %v4_107d0 = icmp eq i32 %v2_107d0, 0
  store i1 %v4_107d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_107d0, label %dec_label_pc_107e0, label %dec_label_pc_107d8

dec_label_pc_107d8:                               ; preds = %dec_label_pc_107c0
  store i1 %v2_10208, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10208, i1* %cpsr_z.global-to-local, align 1
  %v2_107dc = xor i1 %v2_10208, true
  %v3_107dc = or i1 %v7_10208, %v2_107dc
  br i1 %v3_107dc, label %dec_label_pc_f158, label %dec_label_pc_107e0.thread

dec_label_pc_107e0.thread:                        ; preds = %dec_label_pc_107d8
  store i1 %v2_10208, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10208, i1* %cpsr_z.global-to-local, align 1
  br label %bb1839

dec_label_pc_107e0:                               ; preds = %dec_label_pc_107c0
  %.pre2094 = xor i1 %v2_10208, true
  %.pre2095 = or i1 %v7_10208, %.pre2094
  store i1 %v2_10208, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10208, i1* %cpsr_z.global-to-local, align 1
  br i1 %.pre2095, label %bb1838, label %bb1839

bb1838:                                           ; preds = %dec_label_pc_107e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1839

bb1839:                                           ; preds = %dec_label_pc_107e0.thread, %dec_label_pc_107e0, %bb1838
  %v4_107e8 = phi i32 [ %.2005, %dec_label_pc_107e0 ], [ 0, %bb1838 ], [ %.2005, %dec_label_pc_107e0.thread ]
  %v3_107e4.pre-phi2097 = phi i1 [ false, %dec_label_pc_107e0 ], [ true, %bb1838 ], [ false, %dec_label_pc_107e0.thread ]
  %v2_107e8 = xor i1 %v7_10208, true
  %v3_107e8 = and i1 %v2_10208, %v2_107e8
  br i1 %v3_107e8, label %bb1840, label %thread-pre-split591

bb1840:                                           ; preds = %bb1839
  store i32 %v4_107e8, i32* %r3.global-to-local, align 4
  br label %thread-pre-split591

thread-pre-split591:                              ; preds = %bb1839, %bb1840
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_107ec = icmp eq i32 %v4_107e8, 0
  store i1 %v2_107ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_107ec, label %dec_label_pc_107fc, label %dec_label_pc_107f4

dec_label_pc_107f4:                               ; preds = %thread-pre-split591
  %v2_107f4 = icmp eq i32 %v1_f170, 255
  store i1 %v2_107f4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_103f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103f4, label %dec_label_pc_107fc, label %dec_label_pc_f158

dec_label_pc_107fc:                               ; preds = %dec_label_pc_107f4, %thread-pre-split591
  %v2_10800 = icmp ugt i32 %v1_f15c, 53
  store i1 %v2_10800, i1* %cpsr_c.global-to-local, align 1
  %v7_10800 = icmp eq i32 %v1_f15c, 54
  %.2006 = zext i1 %v7_10800 to i32
  store i32 %.2006, i32* %r3.global-to-local, align 4
  %v2_1080c = and i32 %.2006, %v0_1080c
  %v4_1080c = icmp eq i32 %v2_1080c, 0
  store i1 %v4_1080c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1080c, label %dec_label_pc_1081c, label %dec_label_pc_10814

dec_label_pc_10814:                               ; preds = %dec_label_pc_107fc
  store i1 %v2_10208, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_107e4.pre-phi2097, label %dec_label_pc_f158, label %dec_label_pc_1081c

dec_label_pc_1081c:                               ; preds = %dec_label_pc_10814, %dec_label_pc_107fc
  %v2_1081c = icmp ugt i32 %v1_f170, 142
  store i1 %v2_1081c, i1* %cpsr_c.global-to-local, align 1
  %v7_1081c = icmp eq i32 %v1_f170, 143
  store i1 %v7_1081c, i1* %cpsr_z.global-to-local, align 1
  %v2_10820 = xor i1 %v2_1081c, true
  %v3_10820 = or i1 %v7_1081c, %v2_10820
  br i1 %v3_10820, label %bb1843, label %bb1844

bb1843:                                           ; preds = %dec_label_pc_1081c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1844

bb1844:                                           ; preds = %dec_label_pc_1081c, %bb1843
  %v4_10824 = phi i32 [ %.2006, %dec_label_pc_1081c ], [ 0, %bb1843 ]
  %v2_10824 = xor i1 %v7_1081c, true
  %v3_10824 = and i1 %v2_1081c, %v2_10824
  br i1 %v3_10824, label %bb1845, label %thread-pre-split593

bb1845:                                           ; preds = %bb1844
  store i32 %v4_10824, i32* %r3.global-to-local, align 4
  br label %thread-pre-split593

thread-pre-split593:                              ; preds = %bb1844, %bb1845
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10828 = icmp eq i32 %v4_10824, 0
  store i1 %v2_10828, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10828, label %dec_label_pc_10838, label %dec_label_pc_10830

dec_label_pc_10830:                               ; preds = %thread-pre-split593
  %v2_10830 = icmp eq i32 %v1_f170, 255
  store i1 %v2_10830, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_103f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103f4, label %dec_label_pc_10838, label %dec_label_pc_f158

dec_label_pc_10838:                               ; preds = %dec_label_pc_10830, %thread-pre-split593
  %v7_10838 = icmp eq i32 %v1_f15c, 13
  %.2007 = zext i1 %v7_10838 to i32
  %v2_10844 = icmp ugt i32 %v1_f170, 50
  store i1 %v2_10844, i1* %cpsr_c.global-to-local, align 1
  %v7_10844 = icmp eq i32 %v1_f170, 51
  store i1 %v7_10844, i1* %cpsr_z.global-to-local, align 1
  %v2_10848 = xor i1 %v2_10844, true
  %v3_10848 = or i1 %v7_10844, %v2_10848
  br i1 %v3_10848, label %bb1848, label %bb1849

bb1848:                                           ; preds = %dec_label_pc_10838
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1849

bb1849:                                           ; preds = %dec_label_pc_10838, %bb1848
  %v0_10850.pr = phi i32 [ %v4_10824, %dec_label_pc_10838 ], [ 0, %bb1848 ]
  %v2_1084c = xor i1 %v7_10844, true
  %v3_1084c = and i1 %v2_10844, %v2_1084c
  br i1 %v3_1084c, label %bb1850, label %thread-pre-split595

bb1850:                                           ; preds = %bb1849
  store i32 %.2007, i32* %r3.global-to-local, align 4
  br label %thread-pre-split595

thread-pre-split595:                              ; preds = %bb1849, %bb1850
  %v0_10850 = phi i32 [ %.2007, %bb1850 ], [ %v0_10850.pr, %bb1849 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10850 = icmp eq i32 %v0_10850, 0
  store i1 %v2_10850, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10850, label %dec_label_pc_10860, label %dec_label_pc_10858

dec_label_pc_10858:                               ; preds = %thread-pre-split595
  store i1 %v2_f4d8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f4d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_fb98, label %dec_label_pc_f158, label %dec_label_pc_10860

dec_label_pc_10860:                               ; preds = %dec_label_pc_10858, %thread-pre-split595
  store i1 %v2_1052c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_1052c, i1* %cpsr_z.global-to-local, align 1
  %v2_10864 = xor i1 %v2_1052c, true
  %v3_10864 = or i1 %v7_1052c, %v2_10864
  br i1 %v3_10864, label %bb1851, label %bb1852

bb1851:                                           ; preds = %dec_label_pc_10860
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1852

bb1852:                                           ; preds = %dec_label_pc_10860, %bb1851
  %v0_1086c.pr = phi i32 [ %v0_10850, %dec_label_pc_10860 ], [ 0, %bb1851 ]
  %v2_10868 = xor i1 %v7_1052c, true
  %v3_10868 = and i1 %v2_1052c, %v2_10868
  br i1 %v3_10868, label %bb1853, label %thread-pre-split596

bb1853:                                           ; preds = %bb1852
  store i32 %.2007, i32* %r3.global-to-local, align 4
  br label %thread-pre-split596

thread-pre-split596:                              ; preds = %bb1852, %bb1853
  %v0_1086c = phi i32 [ %.2007, %bb1853 ], [ %v0_1086c.pr, %bb1852 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1086c = icmp eq i32 %v0_1086c, 0
  store i1 %v2_1086c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1086c, label %dec_label_pc_1087c, label %dec_label_pc_10874

dec_label_pc_10874:                               ; preds = %thread-pre-split596
  store i1 %v2_f284, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f284, i1* %cpsr_z.global-to-local, align 1
  %v2_10878 = xor i1 %v2_f284, true
  %v3_10878 = or i1 %v7_f284, %v2_10878
  br i1 %v3_10878, label %dec_label_pc_f158, label %dec_label_pc_1087c

dec_label_pc_1087c:                               ; preds = %dec_label_pc_10874, %thread-pre-split596
  %v2_1087c = icmp ugt i32 %v1_f170, 171
  store i1 %v2_1087c, i1* %cpsr_c.global-to-local, align 1
  %v7_1087c = icmp eq i32 %v1_f170, 172
  store i1 %v7_1087c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1087c, label %.thread597, label %.thread598

.thread598:                                       ; preds = %dec_label_pc_1087c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10890

.thread597:                                       ; preds = %dec_label_pc_1087c
  store i32 %.1985, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10888 = icmp eq i1 %v7_fac0, false
  store i1 %v2_10888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10888, label %dec_label_pc_10890, label %dec_label_pc_f158

dec_label_pc_10890:                               ; preds = %.thread598, %.thread597
  %v2_10890 = icmp ugt i32 %v1_f170, 13
  store i1 %v2_10890, i1* %cpsr_c.global-to-local, align 1
  %v7_10890 = icmp eq i32 %v1_f170, 14
  store i1 %v7_10890, i1* %cpsr_z.global-to-local, align 1
  %v2_10894 = xor i1 %v2_10890, true
  %v3_10894 = or i1 %v7_10890, %v2_10894
  br i1 %v3_10894, label %bb1854, label %bb1855

bb1854:                                           ; preds = %dec_label_pc_10890
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1855

bb1855:                                           ; preds = %dec_label_pc_10890, %bb1854
  %v2_10898 = xor i1 %v7_10890, true
  %v3_10898 = and i1 %v2_10890, %v2_10898
  br i1 %v3_10898, label %thread-pre-split601, label %thread-pre-split601.thread

thread-pre-split601.thread:                       ; preds = %bb1855
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10cec

thread-pre-split601:                              ; preds = %bb1855
  store i32 %.2002, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1089c = icmp eq i1 %v7_103e0, false
  store i1 %v2_1089c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1089c, label %dec_label_pc_10cec, label %dec_label_pc_108a4

dec_label_pc_108a4:                               ; preds = %thread-pre-split601
  %v2_108a4 = icmp eq i32 %v1_f170, 255
  store i1 %v2_108a4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_103f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103f4, label %dec_label_pc_108ac, label %dec_label_pc_f158

dec_label_pc_108ac:                               ; preds = %dec_label_pc_10cec, %bb1889, %bb1887, %dec_label_pc_108a4
  %v2_108ac = icmp ugt i32 %v1_f15c, 211
  store i1 %v2_108ac, i1* %cpsr_c.global-to-local, align 1
  %v7_108ac = icmp eq i32 %v1_f15c, 212
  store i1 %v7_108ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108ac, label %.thread602, label %.thread603

.thread603:                                       ; preds = %dec_label_pc_108ac
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_108cc

.thread602:                                       ; preds = %dec_label_pc_108ac
  store i32 %.1992, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108b8 = icmp eq i1 %v7_fd30, false
  store i1 %v2_108b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_108b8, label %dec_label_pc_108cc, label %dec_label_pc_108c0

dec_label_pc_108c0:                               ; preds = %.thread602
  %v2_108c0 = icmp eq i32 %v1_f174, 255
  store i1 %v2_108c0, i1* %cpsr_c.global-to-local, align 1
  %v7_108c0 = icmp eq i32 %v1_f174, 255
  store i1 %v7_108c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108c0, label %dec_label_pc_108cc, label %bb1856

bb1856:                                           ; preds = %dec_label_pc_108c0
  %v3_108c4 = icmp ugt i32 %v1_f174, 222
  store i1 %v3_108c4, i1* %cpsr_c.global-to-local, align 1
  %v8_108c4 = icmp eq i32 %v1_f174, 223
  store i1 %v8_108c4, i1* %cpsr_z.global-to-local, align 1
  %v2_108c8 = xor i1 %v8_108c4, true
  %v3_108c8 = and i1 %v3_108c4, %v2_108c8
  br i1 %v3_108c8, label %dec_label_pc_f158, label %dec_label_pc_108cc

dec_label_pc_108cc:                               ; preds = %dec_label_pc_108c0, %.thread603, %bb1856, %.thread602
  store i32 %.1965, i32* %r3.global-to-local, align 4
  %v2_108d0 = icmp ugt i32 %v1_f15c, 88
  store i1 %v2_108d0, i1* %cpsr_c.global-to-local, align 1
  %v7_108d0 = icmp eq i32 %v1_f15c, 89
  store i1 %v7_108d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108d0, label %.thread606, label %.thread607

.thread607:                                       ; preds = %dec_label_pc_108cc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10900

.thread606:                                       ; preds = %dec_label_pc_108cc
  store i32 %.1965, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108dc = icmp eq i1 %v7_f4f4, false
  store i1 %v2_108dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_108dc, label %dec_label_pc_10900, label %dec_label_pc_108e4

dec_label_pc_108e4:                               ; preds = %.thread606
  %v2_108e4 = icmp ugt i32 %v1_f174, 94
  store i1 %v2_108e4, i1* %cpsr_c.global-to-local, align 1
  %v7_108e4 = icmp eq i32 %v1_f174, 95
  store i1 %v7_108e4, i1* %cpsr_z.global-to-local, align 1
  %v2_108e8 = xor i1 %v2_108e4, true
  %v3_108e8 = or i1 %v7_108e4, %v2_108e8
  br i1 %v3_108e8, label %bb1857, label %bb1858

bb1857:                                           ; preds = %dec_label_pc_108e4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1858

bb1858:                                           ; preds = %dec_label_pc_108e4, %bb1857
  %v0_108f8.pr1002 = phi i32 [ %.1965, %dec_label_pc_108e4 ], [ 0, %bb1857 ]
  %v2_108ec = xor i1 %v7_108e4, true
  %v3_108ec = and i1 %v2_108e4, %v2_108ec
  br i1 %v3_108ec, label %bb1859, label %bb1860

bb1859:                                           ; preds = %bb1858
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1860

bb1860:                                           ; preds = %bb1858, %bb1859
  %v0_108f8.pr = phi i32 [ %v0_108f8.pr1002, %bb1858 ], [ 1, %bb1859 ]
  %v2_108f0 = icmp ugt i32 %v1_f174, 95
  store i1 %v2_108f0, i1* %cpsr_c.global-to-local, align 1
  %v7_108f0 = icmp eq i32 %v1_f174, 96
  store i1 %v7_108f0, i1* %cpsr_z.global-to-local, align 1
  %v2_108f4 = xor i1 %v7_108f0, true
  %v3_108f4 = and i1 %v2_108f0, %v2_108f4
  br i1 %v3_108f4, label %.thread611, label %bb1861

.thread611:                                       ; preds = %bb1860
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10900

bb1861:                                           ; preds = %bb1860
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108f8 = icmp eq i32 %v0_108f8.pr, 0
  store i1 %v2_108f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_108f8, label %dec_label_pc_10900, label %dec_label_pc_f158

dec_label_pc_10900:                               ; preds = %.thread611, %.thread607, %bb1861, %.thread606
  %v7_10900 = icmp eq i32 %v1_f15c, 219
  %.2008 = zext i1 %v7_10900 to i32
  store i32 %.2008, i32* %r3.global-to-local, align 4
  %v2_1090c = icmp ugt i32 %v1_f170, 214
  store i1 %v2_1090c, i1* %cpsr_c.global-to-local, align 1
  %v7_1090c = icmp eq i32 %v1_f170, 215
  store i1 %v7_1090c, i1* %cpsr_z.global-to-local, align 1
  %v2_10910 = xor i1 %v2_1090c, true
  %v3_10910 = or i1 %v7_1090c, %v2_10910
  br i1 %v3_10910, label %.thread616, label %bb1864

.thread616:                                       ; preds = %dec_label_pc_10900
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10924

bb1864:                                           ; preds = %dec_label_pc_10900
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10914 = icmp eq i1 %v7_10900, false
  store i1 %v2_10914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10914, label %dec_label_pc_10924, label %dec_label_pc_1091c

dec_label_pc_1091c:                               ; preds = %bb1864
  %v2_1091c = icmp ugt i32 %v1_f170, 229
  store i1 %v2_1091c, i1* %cpsr_c.global-to-local, align 1
  %v7_1091c = icmp eq i32 %v1_f170, 230
  store i1 %v7_1091c, i1* %cpsr_z.global-to-local, align 1
  %v2_10920 = xor i1 %v2_1091c, true
  %v3_10920 = or i1 %v7_1091c, %v2_10920
  br i1 %v3_10920, label %dec_label_pc_f158, label %dec_label_pc_10924

dec_label_pc_10924:                               ; preds = %.thread616, %dec_label_pc_1091c, %bb1864
  %v7_10924 = icmp eq i32 %v1_f15c, 23
  %.2009 = zext i1 %v7_10924 to i32
  store i32 %.2009, i32* %r3.global-to-local, align 4
  store i1 %v2_10700, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10700, i1* %cpsr_z.global-to-local, align 1
  %v2_10934 = xor i1 %v2_10700, true
  %v3_10934 = or i1 %v7_10700, %v2_10934
  br i1 %v3_10934, label %.thread621, label %bb1867

.thread621:                                       ; preds = %dec_label_pc_10924
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10948

bb1867:                                           ; preds = %dec_label_pc_10924
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10938 = icmp eq i1 %v7_10924, false
  store i1 %v2_10938, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10938, label %dec_label_pc_10948, label %dec_label_pc_10940

dec_label_pc_10940:                               ; preds = %bb1867
  %v2_10940 = icmp ugt i32 %v1_f170, 107
  store i1 %v2_10940, i1* %cpsr_c.global-to-local, align 1
  %v7_10940 = icmp eq i32 %v1_f170, 108
  store i1 %v7_10940, i1* %cpsr_z.global-to-local, align 1
  %v2_10944 = xor i1 %v2_10940, true
  %v3_10944 = or i1 %v7_10940, %v2_10944
  br i1 %v3_10944, label %dec_label_pc_f158, label %dec_label_pc_10948

dec_label_pc_10948:                               ; preds = %.thread621, %dec_label_pc_10940, %bb1867
  store i32 %.1990, i32* %r3.global-to-local, align 4
  store i1 %v2_100c8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_100c8, i1* %cpsr_z.global-to-local, align 1
  %v2_10950 = xor i1 %v2_100c8, true
  %v3_10950 = or i1 %v7_100c8, %v2_10950
  br i1 %v3_10950, label %bb1868, label %bb1869

bb1868:                                           ; preds = %dec_label_pc_10948
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1869

bb1869:                                           ; preds = %dec_label_pc_10948, %bb1868
  %v4_10954 = phi i32 [ %.1990, %dec_label_pc_10948 ], [ 0, %bb1868 ]
  %v2_10954 = xor i1 %v7_100c8, true
  %v3_10954 = and i1 %v2_100c8, %v2_10954
  br i1 %v3_10954, label %bb1870, label %thread-pre-split624

bb1870:                                           ; preds = %bb1869
  store i32 %v4_10954, i32* %r3.global-to-local, align 4
  br label %thread-pre-split624

thread-pre-split624:                              ; preds = %bb1869, %bb1870
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10958 = icmp eq i32 %v4_10954, 0
  store i1 %v2_10958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10958, label %dec_label_pc_10968, label %dec_label_pc_10960

dec_label_pc_10960:                               ; preds = %thread-pre-split624
  store i1 %v2_fc5c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fc5c, i1* %cpsr_z.global-to-local, align 1
  %v2_10964 = xor i1 %v2_fc5c, true
  %v3_10964 = or i1 %v7_fc5c, %v2_10964
  br i1 %v3_10964, label %dec_label_pc_f158, label %dec_label_pc_10968

dec_label_pc_10968:                               ; preds = %dec_label_pc_10960, %thread-pre-split624
  %v7_10968 = icmp eq i32 %v1_f15c, 106
  %.2010 = zext i1 %v7_10968 to i32
  store i32 %.2010, i32* %r3.global-to-local, align 4
  store i1 %v2_104b0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_104b0, i1* %cpsr_z.global-to-local, align 1
  %v2_10978 = xor i1 %v2_104b0, true
  %v3_10978 = or i1 %v7_104b0, %v2_10978
  br i1 %v3_10978, label %.thread627, label %bb1873

.thread627:                                       ; preds = %dec_label_pc_10968
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1098c

bb1873:                                           ; preds = %dec_label_pc_10968
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1097c = icmp eq i1 %v7_10968, false
  store i1 %v2_1097c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1097c, label %dec_label_pc_1098c, label %dec_label_pc_10984

dec_label_pc_10984:                               ; preds = %bb1873
  %v2_10984 = icmp ugt i32 %v1_f170, 187
  store i1 %v2_10984, i1* %cpsr_c.global-to-local, align 1
  %v7_10984 = icmp eq i32 %v1_f170, 188
  store i1 %v7_10984, i1* %cpsr_z.global-to-local, align 1
  %v2_10988 = xor i1 %v2_10984, true
  %v3_10988 = or i1 %v7_10984, %v2_10988
  br i1 %v3_10988, label %dec_label_pc_f158, label %dec_label_pc_1098c

dec_label_pc_1098c:                               ; preds = %.thread627, %dec_label_pc_10984, %bb1873
  %v7_1098c = icmp eq i32 %v1_f15c, 34
  %.2011 = zext i1 %v7_1098c to i32
  store i32 %.2011, i32* %r3.global-to-local, align 4
  %v2_10998 = icmp ugt i32 %v1_f170, 243
  store i1 %v2_10998, i1* %cpsr_c.global-to-local, align 1
  %v7_10998 = icmp eq i32 %v1_f170, 244
  store i1 %v7_10998, i1* %cpsr_z.global-to-local, align 1
  %v2_1099c = xor i1 %v2_10998, true
  %v3_1099c = or i1 %v7_10998, %v2_1099c
  br i1 %v3_1099c, label %.thread632, label %bb1876

.thread632:                                       ; preds = %dec_label_pc_1098c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_109b0

bb1876:                                           ; preds = %dec_label_pc_1098c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_109a0 = icmp eq i1 %v7_1098c, false
  store i1 %v2_109a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109a0, label %dec_label_pc_109b0, label %dec_label_pc_109a8

dec_label_pc_109a8:                               ; preds = %bb1876
  %v2_109a8 = icmp eq i32 %v1_f170, 255
  store i1 %v2_109a8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_103f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103f4, label %dec_label_pc_109b0, label %dec_label_pc_f158

dec_label_pc_109b0:                               ; preds = %.thread632, %dec_label_pc_109a8, %bb1876
  %v7_109b0 = icmp eq i32 %v1_f15c, 87
  %.2012 = zext i1 %v7_109b0 to i32
  store i32 %.2012, i32* %r3.global-to-local, align 4
  store i1 %v2_f3fc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f3fc, i1* %cpsr_z.global-to-local, align 1
  %v2_109c0 = xor i1 %v2_f3fc, true
  %v3_109c0 = or i1 %v7_f3fc, %v2_109c0
  br i1 %v3_109c0, label %.thread637, label %bb1879

.thread637:                                       ; preds = %dec_label_pc_109b0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_109d4

bb1879:                                           ; preds = %dec_label_pc_109b0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_109c4 = icmp eq i1 %v7_109b0, false
  store i1 %v2_109c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109c4, label %dec_label_pc_109d4, label %dec_label_pc_109cc

dec_label_pc_109cc:                               ; preds = %bb1879
  store i1 %v2_f244, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f244, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f874, label %dec_label_pc_f158, label %dec_label_pc_109d4

dec_label_pc_109d4:                               ; preds = %.thread637, %dec_label_pc_109cc, %bb1879
  %v7_109d4 = icmp eq i32 %v1_f15c, 86
  %.2013 = zext i1 %v7_109d4 to i32
  store i32 %.2013, i32* %r3.global-to-local, align 4
  %v2_109e0 = icmp ugt i32 %v1_f170, 207
  store i1 %v2_109e0, i1* %cpsr_c.global-to-local, align 1
  %v7_109e0 = icmp eq i32 %v1_f170, 208
  store i1 %v7_109e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109e0, label %bb1882, label %dec_label_pc_109ec

bb1882:                                           ; preds = %dec_label_pc_109d4
  %v2_109d4 = icmp ugt i32 %v1_f15c, 85
  store i1 %v2_109d4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_109d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109d4, label %dec_label_pc_f158, label %dec_label_pc_109ec

dec_label_pc_109ec:                               ; preds = %dec_label_pc_109d4, %bb1882
  %v2_109ec = and i32 %.2013, %.2001
  %v4_109ec = icmp eq i32 %v2_109ec, 0
  store i1 %v4_109ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_109ec, label %dec_label_pc_109f4, label %dec_label_pc_f158

dec_label_pc_109f4:                               ; preds = %dec_label_pc_109ec
  %v2_109f4 = icmp ugt i32 %v1_f15c, 192
  store i1 %v2_109f4, i1* %cpsr_c.global-to-local, align 1
  %v7_109f4 = icmp eq i32 %v1_f15c, 193
  store i1 %v7_109f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109f4, label %bb1883, label %dec_label_pc_10a00

bb1883:                                           ; preds = %dec_label_pc_109f4
  store i1 %v2_f888, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f888, label %dec_label_pc_f158, label %dec_label_pc_10a00

dec_label_pc_10a00:                               ; preds = %dec_label_pc_109f4, %bb1883
  store i32 %v1_f8c4, i32* %r3.global-to-local, align 4
  %v2_10a04 = icmp ugt i32 %v1_f15c, 119
  store i1 %v2_10a04, i1* %cpsr_c.global-to-local, align 1
  %v7_10a04 = icmp eq i32 %v1_f15c, 120
  store i1 %v7_10a04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a04, label %.thread643, label %.thread644

.thread644:                                       ; preds = %dec_label_pc_10a00
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10a20

.thread643:                                       ; preds = %dec_label_pc_10a00
  %v2_10a0c = urem i32 %v1_f8c4, 2
  store i32 %v2_10a0c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a10 = icmp eq i32 %v2_10a0c, 0
  store i1 %v2_10a10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a10, label %dec_label_pc_10a20, label %dec_label_pc_10a18

dec_label_pc_10a18:                               ; preds = %.thread643
  %v2_10a18 = icmp ugt i32 %v1_f170, 106
  store i1 %v2_10a18, i1* %cpsr_c.global-to-local, align 1
  %v7_10a18 = icmp eq i32 %v1_f170, 107
  store i1 %v7_10a18, i1* %cpsr_z.global-to-local, align 1
  %v2_10a1c = xor i1 %v2_10a18, true
  %v3_10a1c = or i1 %v7_10a18, %v2_10a1c
  br i1 %v3_10a1c, label %dec_label_pc_f158, label %dec_label_pc_10a20

dec_label_pc_10a20:                               ; preds = %.thread644, %dec_label_pc_10a18, %.thread643
  store i32 %.1962, i32* %r3.global-to-local, align 4
  store i32 %.1988, i32* %r4.global-to-local, align 4
  %v2_10a28 = and i32 %.1962, %.1988
  %v4_10a28 = icmp eq i32 %v2_10a28, 0
  store i1 %v4_10a28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10a28, label %dec_label_pc_10a30, label %dec_label_pc_f158

dec_label_pc_10a30:                               ; preds = %dec_label_pc_10a20
  %v2_10a30 = icmp ugt i32 %v1_f15c, 77
  store i1 %v2_10a30, i1* %cpsr_c.global-to-local, align 1
  %v7_10a30 = icmp eq i32 %v1_f15c, 78
  store i1 %v7_10a30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a30, label %bb1884, label %dec_label_pc_10a44

bb1884:                                           ; preds = %dec_label_pc_10a30
  %v3_10a34 = icmp ugt i32 %v1_f170, 45
  store i1 %v3_10a34, i1* %cpsr_c.global-to-local, align 1
  %v8_10a34 = icmp eq i32 %v1_f170, 46
  store i1 %v8_10a34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10a34, label %.thread649.thread, label %dec_label_pc_10a44

.thread649.thread:                                ; preds = %bb1884
  store i32 1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_f158

dec_label_pc_10a44:                               ; preds = %bb1884, %dec_label_pc_10a30
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_10a44 = icmp ugt i32 %v1_f15c, 223
  store i1 %v2_10a44, i1* %cpsr_c.global-to-local, align 1
  %v7_10a44 = icmp eq i32 %v1_f15c, 224
  store i1 %v7_10a44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a44, label %dec_label_pc_f158, label %dec_label_pc_10a4c

dec_label_pc_10a4c:                               ; preds = %dec_label_pc_10a44
  %v5_10a58 = call i32 @llvm.bswap.i32(i32 %v0_f158)
  store i32 %v5_10a58, i32* %r3.global-to-local, align 4
  %v3_10a64 = mul nuw i32 %v3_f178, 16777216
  %v1_10a5c = udiv i32 %v5_10a58, 256
  %v3_10a68 = and i32 %v1_10a5c, 65280
  %v1_10a60 = mul i32 %v5_10a58, 256
  %v4_10a6c = and i32 %v1_10a60, 16711680
  %tmp2103 = and i32 %v0_f158, 32768
  %v3_10a70 = icmp ne i32 %tmp2103, 0
  store i1 %v3_10a70, i1* %cpsr_c.global-to-local, align 1
  %v4_10a70 = udiv i32 %v5_10a58, 16777216
  store i32 ptrtoint (i8** @global_var_1dbf0.140 to i32), i32* @r0, align 4
  %v5_10a70 = or i32 %v4_10a70, %v3_10a64
  %v5_10a6c = or i32 %v5_10a70, %v4_10a6c
  %v2_10a78 = or i32 %v5_10a6c, %v3_10a68
  store i32 %v2_10a78, i32* %r2.global-to-local, align 4
  store i32 %v2_10a78, i32* @global_var_1dc00.214, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i8 0, i8* bitcast (i32* @global_var_1dbfa.215 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1dbfb.216 to i8*), align 4
  %v3_10a8c = call i32 @function_d0b8(i32 ptrtoint (i8** @global_var_1dbf0.140 to i32), i32 20)
  %sext = mul i32 %v3_10a8c, 16777216
  %v1_10a90 = sdiv i32 %sext, 16777216
  store i32 ptrtoint (i8** @global_var_1dbf0.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc04.144 to i32), i32* %fp.global-to-local, align 4
  %v4_10a9c = load i32, i32* @global_var_1dc00.214, align 4
  %v1_10aa0 = and i32 %v1_10a90, 128
  %v2_10aa0 = icmp ne i32 %v1_10aa0, 0
  store i1 %v2_10aa0, i1* %cpsr_c.global-to-local, align 1
  %v3_10aa0 = ashr i32 %sext, 31
  store i32 23, i32* %ip.global-to-local, align 4
  %v1_10aa8 = trunc i32 %v3_10aa0 to i8
  store i8 %v1_10aa8, i8* bitcast (i32* @global_var_1dbfb.216 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1dc04.144 to i32), i32* @r1, align 4
  store i8 23, i8* bitcast (i32* @global_var_1dc07.150 to i8*), align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  %v1_10ab8 = trunc i32 %v1_10a90 to i8
  store i8 %v1_10ab8, i8* bitcast (i32* @global_var_1dbfa.215 to i8*), align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 %v4_10a9c, i32* @global_var_1dc08.218, align 4
  %v0_10ac4 = load i32, i32* %r8.global-to-local, align 4
  %v1_10ac4 = trunc i32 %v0_10ac4 to i8
  store i8 %v1_10ac4, i8* bitcast (i32* @global_var_1dc06.149 to i8*), align 4
  store i8 %v1_10ac4, i8* bitcast (i32* @global_var_1dc14.219 to i8*), align 4
  store i8 %v1_10ac4, i8* bitcast (i32* @global_var_1dc15.220 to i8*), align 4
  %v5_10ad0 = call i32 @function_d114(i32 ptrtoint (i8** @global_var_1dbf0.140 to i32), i32 ptrtoint (i32* @global_var_1dc04.144 to i32), i32 5120, i32 20)
  %v2_10ad4 = load i32, i32* @global_var_1dc04.144, align 4
  %sext3 = mul i32 %v5_10ad0, 16777216
  %v1_10adc = sdiv i32 %sext3, 16777216
  store i32 ptrtoint (i8** @global_var_1dbf0.140 to i32), i32* %r1.global-to-local, align 4
  %v2_10ae4 = load i32, i32* @global_var_1dc88.138, align 4
  store i32 %v2_10ae4, i32* %r0.global-to-local, align 4
  %v3_10ae8 = udiv i32 %v2_10ad4, 65536
  %v3_10aec = ashr i32 %sext3, 31
  %v1_10af4 = trunc i32 %v3_10aec to i8
  store i8 %v1_10af4, i8* bitcast (i32* @global_var_1dc15.220 to i8*), align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v1_10b00 = and i32 %v3_10ae8, 128
  %v2_10b00 = icmp ne i32 %v1_10b00, 0
  store i1 %v2_10b00, i1* %cpsr_c.global-to-local, align 1
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v1_10b1c = trunc i32 %v1_10adc to i8
  store i8 %v1_10b1c, i8* bitcast (i32* @global_var_1dc14.219 to i8*), align 4
  store i32 %v2_11b00, i32* @r4, align 4
  %v8_10b30 = call i32 @function_1347c(i32 %v2_10ae4, i32* bitcast (i8** @global_var_1dbf0.140 to i32*), i32 40, i32 16384, i32 %v2_11b00, i32 16)
  store i32 %v8_10b30, i32* %r0.global-to-local, align 4
  %v3_10b34 = load i32, i32* %stack_var_-52, align 4
  %v1_10b38 = add i32 %v3_10b34, 1
  store i32 %v1_10b38, i32* %r3.global-to-local, align 4
  %v3_10b3c = icmp ugt i32 %v1_10b38, 383
  store i1 %v3_10b3c, i1* %cpsr_c.global-to-local, align 1
  %v8_10b3c = icmp eq i32 %v1_10b38, 384
  store i1 %v8_10b3c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10b38, i32* %stack_var_-52, align 4
  %v5_10b44 = icmp slt i32 %v1_10b38, 384
  br i1 %v5_10b44, label %dec_label_pc_f124, label %dec_label_pc_10b48

dec_label_pc_10b48:                               ; preds = %dec_label_pc_10a4c
  store i32 %v2_f10c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_10b50

dec_label_pc_10b50:                               ; preds = %dec_label_pc_f104, %dec_label_pc_10b48
  %stack_var_-2036.1 = phi i32 [ %stack_var_-2036.0, %dec_label_pc_f104 ], [ %v2_f10c, %dec_label_pc_10b48 ]
  %v0_10b50 = call i32 @function_131c4()
  store i32 %v0_10b50, i32* %r0.global-to-local, align 4
  store i32 %v2_f0fc, i32* %ip.global-to-local, align 4
  store i32 %v0_10b50, i32* %fp.global-to-local, align 4
  store i32 %v1_10b5c, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10b64

dec_label_pc_10b64:                               ; preds = %dec_label_pc_10c20, %dec_label_pc_10c18, %dec_label_pc_10c10, %dec_label_pc_10be4, %dec_label_pc_10bd0, %dec_label_pc_10bc4, %dec_label_pc_10bac, %dec_label_pc_10c08, %dec_label_pc_10bfc, %dec_label_pc_10ba4, %dec_label_pc_10cc0, %dec_label_pc_10b50
  %v1_10b68 = phi i32 [ %v0_10b50, %dec_label_pc_10b50 ], [ %v1_10b68.pre.pre, %dec_label_pc_10cc0 ], [ %v0_10b98, %dec_label_pc_10ba4 ], [ %v0_10b98, %dec_label_pc_10bfc ], [ %v0_10b98, %dec_label_pc_10c08 ], [ %v0_10b98, %dec_label_pc_10bac ], [ %v0_10b98, %dec_label_pc_10bc4 ], [ %v0_10b98, %dec_label_pc_10bd0 ], [ %v0_10b98, %dec_label_pc_10be4 ], [ %v0_10b98, %dec_label_pc_10c10 ], [ %v0_10b98, %dec_label_pc_10c18 ], [ %v0_10b98, %dec_label_pc_10c20 ]
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_10b68 = inttoptr i32 %v1_10b68 to i32*
  store i32 0, i32* %v2_10b68, align 4
  %v2_10b74 = load i32, i32* @global_var_1dc88.138, align 4
  store i32 %v2_10b74, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v2_f0fc, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10b84 = load i32, i32* %ip.global-to-local, align 4
  %v7_10b8c = call i32 @function_1341c(i32 %v2_10b74, i32* nonnull %stack_var_-1862, i32 1514, i32 16384, i32 %v0_10b84, i32 %v0_10b84)
  store i32 %v7_10b8c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b90 = icmp eq i32 %v7_10b8c, 0
  store i1 %v2_10b90, i1* %cpsr_z.global-to-local, align 1
  %tmp1886 = icmp slt i32 %v7_10b8c, 1
  br i1 %tmp1886, label %dec_label_pc_10d0c, label %dec_label_pc_10b98

dec_label_pc_10b98:                               ; preds = %dec_label_pc_10b64
  %v0_10b98 = load i32, i32* %fp.global-to-local, align 4
  %v1_10b98 = inttoptr i32 %v0_10b98 to i32*
  %v2_10b98 = load i32, i32* %v1_10b98, align 4
  store i32 %v2_10b98, i32* %r3.global-to-local, align 4
  %v2_10b9c = icmp ugt i32 %v2_10b98, 10
  store i1 %v2_10b9c, i1* %cpsr_c.global-to-local, align 1
  %v7_10b9c = icmp eq i32 %v2_10b98, 11
  store i1 %v7_10b9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b9c, label %dec_label_pc_10d0c, label %dec_label_pc_10ba4

dec_label_pc_10ba4:                               ; preds = %dec_label_pc_10b98
  %v2_10ba4 = icmp ugt i32 %v7_10b8c, 38
  store i1 %v2_10ba4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ba4 = icmp eq i32 %v7_10b8c, 39
  store i1 %v7_10ba4, i1* %cpsr_z.global-to-local, align 1
  %v2_10ba8 = xor i1 %v2_10ba4, true
  %v3_10ba8 = or i1 %v7_10ba4, %v2_10ba8
  br i1 %v3_10ba8, label %dec_label_pc_10b64, label %dec_label_pc_10bac

dec_label_pc_10bac:                               ; preds = %dec_label_pc_10ba4
  store i32 %v2_f0fc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc68.49 to i32), i32* %r1.global-to-local, align 4
  %v3_10bb4 = load i32, i32* %v2_10bb4, align 4
  store i32 %v3_10bb4, i32* %r2.global-to-local, align 4
  %v2_10bb8 = load i32, i32* @global_var_1dc68.49, align 4
  store i32 %v2_10bb8, i32* %r3.global-to-local, align 4
  %v3_10bbc = icmp uge i32 %v3_10bb4, %v2_10bb8
  store i1 %v3_10bbc, i1* %cpsr_c.global-to-local, align 1
  %v9_10bbc = icmp eq i32 %v3_10bb4, %v2_10bb8
  store i1 %v9_10bbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10bbc, label %dec_label_pc_10bc4, label %dec_label_pc_10b64

dec_label_pc_10bc4:                               ; preds = %dec_label_pc_10bac
  %v3_10bc4 = load i8, i8* %v2_10bc4, align 1
  %v4_10bc4 = zext i8 %v3_10bc4 to i32
  store i32 %v4_10bc4, i32* %r3.global-to-local, align 4
  %v2_10bc8 = icmp ugt i8 %v3_10bc4, 5
  store i1 %v2_10bc8, i1* %cpsr_c.global-to-local, align 1
  %v7_10bc8 = icmp eq i8 %v3_10bc4, 6
  store i1 %v7_10bc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10bc8, label %dec_label_pc_10bd0, label %dec_label_pc_10b64

dec_label_pc_10bd0:                               ; preds = %dec_label_pc_10bc4
  %v0_10bd0 = load i32, i32* @r5, align 4
  %v1_10bd0 = inttoptr i32 %v0_10bd0 to i8*
  %v2_10bd0 = load i8, i8* %v1_10bd0, align 1
  %v3_10bd0 = zext i8 %v2_10bd0 to i32
  store i32 %v3_10bd0, i32* %r3.global-to-local, align 4
  %v1_10bd4 = add i32 %v0_10bd0, 1
  %v2_10bd4 = inttoptr i32 %v1_10bd4 to i8*
  %v3_10bd4 = load i8, i8* %v2_10bd4, align 1
  %v4_10bd4 = zext i8 %v3_10bd4 to i32
  store i32 %v4_10bd4, i32* %r2.global-to-local, align 4
  %v4_10bd8 = mul nuw nsw i32 %v4_10bd4, 256
  %v5_10bd8 = or i32 %v4_10bd8, %v3_10bd0
  store i32 %v5_10bd8, i32* %r3.global-to-local, align 4
  %v2_10bdc = icmp ugt i32 %v5_10bd8, 5887
  store i1 %v2_10bdc, i1* %cpsr_c.global-to-local, align 1
  %v7_10bdc = icmp eq i32 %v5_10bd8, 5888
  store i1 %v7_10bdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10bdc, label %dec_label_pc_10be4, label %dec_label_pc_10b64

dec_label_pc_10be4:                               ; preds = %dec_label_pc_10bd0
  %v1_10be4 = add i32 %v0_10bd0, 3
  %v2_10be4 = inttoptr i32 %v1_10be4 to i8*
  %v3_10be4 = load i8, i8* %v2_10be4, align 1
  %v4_10be4 = zext i8 %v3_10be4 to i32
  store i32 %v4_10be4, i32* %r2.global-to-local, align 4
  %v1_10be8 = add i32 %v0_10bd0, 2
  %v2_10be8 = inttoptr i32 %v1_10be8 to i8*
  %v3_10be8 = load i8, i8* %v2_10be8, align 1
  %v4_10be8 = zext i8 %v3_10be8 to i32
  %v4_10bec = mul nuw nsw i32 %v4_10be4, 256
  %v5_10bec = or i32 %v4_10be8, %v4_10bec
  store i32 %v5_10bec, i32* %r3.global-to-local, align 4
  store i32 %v4_eec8, i32* %r2.global-to-local, align 4
  %v3_10bf4 = icmp uge i32 %v5_10bec, %v4_eec8
  store i1 %v3_10bf4, i1* %cpsr_c.global-to-local, align 1
  %v9_10bf4 = icmp eq i32 %v5_10bec, %v4_eec8
  store i1 %v9_10bf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10bf4, label %dec_label_pc_10bfc, label %dec_label_pc_10b64

dec_label_pc_10bfc:                               ; preds = %dec_label_pc_10be4
  %v1_10bfc = add i32 %v0_10bd0, 13
  %v2_10bfc = inttoptr i32 %v1_10bfc to i8*
  %v3_10bfc = load i8, i8* %v2_10bfc, align 1
  %v4_10bfc = zext i8 %v3_10bfc to i32
  store i32 %v4_10bfc, i32* %r3.global-to-local, align 4
  %v1_10c00 = and i32 %v4_10bfc, 2
  %v2_10c00 = icmp eq i32 %v1_10c00, 0
  store i1 %v2_10c00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c00, label %dec_label_pc_10b64, label %dec_label_pc_10c08

dec_label_pc_10c08:                               ; preds = %dec_label_pc_10bfc
  %v1_10c08 = and i32 %v4_10bfc, 16
  %v2_10c08 = icmp eq i32 %v1_10c08, 0
  store i1 %v2_10c08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c08, label %dec_label_pc_10b64, label %dec_label_pc_10c10

dec_label_pc_10c10:                               ; preds = %dec_label_pc_10c08
  %v1_10c10 = and i32 %v4_10bfc, 4
  %v2_10c10 = icmp eq i32 %v1_10c10, 0
  store i1 %v2_10c10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c10, label %dec_label_pc_10c18, label %dec_label_pc_10b64

dec_label_pc_10c18:                               ; preds = %dec_label_pc_10c10
  %tmp2104 = urem i8 %v3_10bfc, 2
  %v2_10c18 = icmp eq i8 %tmp2104, 0
  store i1 %v2_10c18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c18, label %dec_label_pc_10c20, label %dec_label_pc_10b64

dec_label_pc_10c20:                               ; preds = %dec_label_pc_10c18
  %v1_10c20 = add i32 %v0_10bd0, 8
  %v2_10c20 = inttoptr i32 %v1_10c20 to i32*
  %v3_10c20 = load i32, i32* %v2_10c20, align 4
  %v2_10c3c = call i32 @llvm.bswap.i32(i32 %v3_10c20)
  %v1_10c40 = add i32 %v2_10c3c, -1
  %v1_10c44 = udiv i32 %v1_10c40, 256
  %v3_10c48 = and i32 %v1_10c44, 65280
  %v1_10c4c = and i32 %v1_10c40, 65280
  store i32 %v1_10c4c, i32* %r2.global-to-local, align 4
  %v3_10c50 = mul i32 %v1_10c40, 16777216
  %v4_10c54 = udiv i32 %v1_10c40, 16777216
  %v5_10c54 = or i32 %v3_10c48, %v4_10c54
  store i32 %v5_10c54, i32* %r1.global-to-local, align 4
  store i32 %v2_f0fc, i32* %r3.global-to-local, align 4
  %v4_10c5c = mul nuw nsw i32 %v1_10c4c, 256
  %v5_10c5c = or i32 %v4_10c5c, %v3_10c50
  store i32 %v5_10c5c, i32* %r0.global-to-local, align 4
  %v3_10c60 = load i32, i32* %v2_10c60, align 4
  store i32 %v3_10c60, i32* %r2.global-to-local, align 4
  %v2_10c64 = call i32 @llvm.bswap.i32(i32 %v1_10c40)
  store i32 %v2_10c64, i32* %ip.global-to-local, align 4
  %v3_10c68 = icmp uge i32 %v2_10c64, %v3_10c60
  store i1 %v3_10c68, i1* %cpsr_c.global-to-local, align 1
  %v9_10c68 = icmp eq i32 %v2_10c64, %v3_10c60
  store i1 %v9_10c68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10c68, label %dec_label_pc_10c70, label %dec_label_pc_10b64

dec_label_pc_10c70:                               ; preds = %dec_label_pc_10c20
  %v0_10c70 = load i32, i32* @r4, align 4
  %v2_10c70 = icmp ugt i32 %v0_10c70, 254
  store i1 %v2_10c70, i1* %cpsr_c.global-to-local, align 1
  %v7_10c70 = icmp eq i32 %v0_10c70, 255
  store i1 %v7_10c70, i1* %cpsr_z.global-to-local, align 1
  %v8_10c74 = icmp sgt i32 %v0_10c70, 255
  br i1 %v8_10c74, label %dec_label_pc_10d0c, label %dec_label_pc_10c78

dec_label_pc_10c78:                               ; preds = %dec_label_pc_10c70
  %v3_10c7c = mul i32 %v0_10c70, 256
  store i32 %v3_10c7c, i32* %r2.global-to-local, align 4
  %v2_10c80 = load i32, i32* @global_var_1dc84.136, align 4
  store i32 %v2_10c80, i32* %r1.global-to-local, align 4
  %v2_10c88 = mul i32 %v0_10c70, 288
  store i32 %v2_10c88, i32* %r3.global-to-local, align 4
  %v2_10c8c = add i32 %v2_10c80, %v2_10c88
  store i32 %v2_10c8c, i32* @r0, align 4
  %v1_10c90 = add i32 %v2_10c8c, 12
  %v2_10c90 = inttoptr i32 %v1_10c90 to i32*
  %v3_10c90 = load i32, i32* %v2_10c90, align 4
  store i32 %v3_10c90, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c94 = icmp eq i32 %v3_10c90, 0
  store i1 %v2_10c94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c94, label %dec_label_pc_10cc0, label %dec_label_pc_10ca0.preheader

dec_label_pc_10ca0.preheader:                     ; preds = %dec_label_pc_10c78
  %v2_10c98 = add i32 %v2_10c8c, 288
  store i32 %v2_10c98, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10ca0

dec_label_pc_10ca0:                               ; preds = %dec_label_pc_10ca0.preheader, %dec_label_pc_10cb4
  %v0_10cb4 = phi i32 [ %v2_10c98, %dec_label_pc_10ca0.preheader ], [ %v1_10cac, %dec_label_pc_10cb4 ]
  %v0_10ca0 = phi i32 [ %v0_10c70, %dec_label_pc_10ca0.preheader ], [ %v1_10ca0, %dec_label_pc_10cb4 ]
  %v1_10ca0 = add i32 %v0_10ca0, 1
  store i32 %v1_10ca0, i32* @r4, align 4
  %v7_10ca4 = icmp eq i32 %v1_10ca0, 256
  store i32 %v0_10cb4, i32* @r0, align 4
  %v1_10cac = add i32 %v0_10cb4, 288
  store i32 %v1_10cac, i32* %r2.global-to-local, align 4
  br i1 %v7_10ca4, label %dec_label_pc_10d0c.loopexit, label %dec_label_pc_10cb4

dec_label_pc_10cb4:                               ; preds = %dec_label_pc_10ca0
  %v1_10cb4 = add i32 %v0_10cb4, 12
  %v2_10cb4 = inttoptr i32 %v1_10cb4 to i32*
  %v3_10cb4 = load i32, i32* %v2_10cb4, align 4
  store i32 %v3_10cb4, i32* %r3.global-to-local, align 4
  %v2_10cb8 = icmp eq i32 %v3_10cb4, 0
  br i1 %v2_10cb8, label %dec_label_pc_10cc0.loopexit, label %dec_label_pc_10ca0

dec_label_pc_10cc0.loopexit:                      ; preds = %dec_label_pc_10cb4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10cc0

dec_label_pc_10cc0:                               ; preds = %dec_label_pc_10cc0.loopexit, %dec_label_pc_10c78
  %v1_10cc0 = phi i32 [ %v0_10cb4, %dec_label_pc_10cc0.loopexit ], [ %v2_10c8c, %dec_label_pc_10c78 ]
  %v2_10cc0 = add i32 %v1_10cc0, 16
  %v3_10cc0 = inttoptr i32 %v2_10cc0 to i32*
  store i32 %v3_10c60, i32* %v3_10cc0, align 4
  %v0_10cc4 = load i32, i32* @r5, align 4
  %v1_10cc4 = inttoptr i32 %v0_10cc4 to i32*
  %v2_10cc4 = load i32, i32* %v1_10cc4, align 4
  store i32 %v2_10cc4, i32* %r2.global-to-local, align 4
  %v1_10cc8 = and i32 %v2_10cc4, 128
  %v2_10cc8 = icmp ne i32 %v1_10cc8, 0
  store i1 %v2_10cc8, i1* %cpsr_c.global-to-local, align 1
  %v3_10cc8 = sdiv i32 %v2_10cc4, 256
  store i32 %v3_10cc8, i32* %r3.global-to-local, align 4
  %v1_10ccc = trunc i32 %v3_10cc8 to i8
  %v2_10ccc = load i32, i32* @r0, align 4
  %v3_10ccc = add i32 %v2_10ccc, 21
  %v4_10ccc = inttoptr i32 %v3_10ccc to i8*
  store i8 %v1_10ccc, i8* %v4_10ccc, align 1
  %v0_10cd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_10cd0 = trunc i32 %v0_10cd0 to i8
  %v2_10cd0 = load i32, i32* @r0, align 4
  %v3_10cd0 = add i32 %v2_10cd0, 20
  %v4_10cd0 = inttoptr i32 %v3_10cd0 to i8*
  store i8 %v1_10cd0, i8* %v4_10cd0, align 1
  %v0_10cd4 = call i32 @function_ea30()
  store i32 %v0_10cd4, i32* %r0.global-to-local, align 4
  %v1_10b68.pre.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_10b64

dec_label_pc_10cdc:                               ; preds = %dec_label_pc_edf0
  store i32 ptrtoint (i32* @global_var_1dc88.138 to i32), i32* %r1.global-to-local, align 4
  %v2_10ce0 = load i32, i32* @global_var_1dc88.138, align 4
  store i32 %v2_10ce0, i32* %r0.global-to-local, align 4
  %v1_10ce4 = call i32 @function_12bf0(i32 %v2_10ce0)
  store i32 %v1_10ce4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ee60

dec_label_pc_10cec:                               ; preds = %thread-pre-split601.thread, %thread-pre-split601
  %v2_10cec = icmp ugt i32 %v1_f15c, 78
  store i1 %v2_10cec, i1* %cpsr_c.global-to-local, align 1
  %v7_10cec = icmp eq i32 %v1_f15c, 79
  store i1 %v7_10cec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10cec, label %bb1887, label %dec_label_pc_108ac

bb1887:                                           ; preds = %dec_label_pc_10cec
  %v3_10cf0 = icmp ugt i32 %v1_f170, 120
  store i1 %v3_10cf0, i1* %cpsr_c.global-to-local, align 1
  %v8_10cf0 = icmp eq i32 %v1_f170, 121
  store i1 %v8_10cf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10cf0, label %dec_label_pc_10cf8, label %dec_label_pc_108ac

dec_label_pc_10cf8:                               ; preds = %bb1887
  %v1_10cf8 = add nsw i32 %v1_f174, -255
  store i32 %v1_10cf8, i32* %r3.global-to-local, align 4
  %v2_10cf8 = icmp eq i32 %v1_f174, 255
  store i1 %v2_10cf8, i1* %cpsr_c.global-to-local, align 1
  %v7_10cf8 = icmp eq i32 %v1_f174, 255
  store i1 %v7_10cf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10cf8, label %bb1889, label %bb1888

bb1888:                                           ; preds = %dec_label_pc_10cf8
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1889

bb1889:                                           ; preds = %dec_label_pc_10cf8, %bb1888
  %v0_10d00 = phi i32 [ %v1_10cf8, %dec_label_pc_10cf8 ], [ 1, %bb1888 ]
  %v2_10d00 = and i32 %v3_f164, 64
  %v3_10d00 = icmp ne i32 %v2_10d00, 0
  store i1 %v3_10d00, i1* %cpsr_c.global-to-local, align 1
  %v4_10d00 = udiv i32 %v1_f174, 128
  %v5_10d00 = and i32 %v0_10d00, %v4_10d00
  store i32 %v5_10d00, i32* %r3.global-to-local, align 4
  %v6_10d00 = icmp eq i32 %v5_10d00, 0
  store i1 %v6_10d00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10d00, label %dec_label_pc_108ac, label %dec_label_pc_f158

dec_label_pc_10d0c.loopexit:                      ; preds = %dec_label_pc_10ca0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10d0c

dec_label_pc_10d0c:                               ; preds = %dec_label_pc_10c70, %dec_label_pc_10b98, %dec_label_pc_10b64, %dec_label_pc_10d0c.loopexit
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1840, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v2_10d202054 = load i32, i32* @sp, align 4
  %v3_10d202055 = add i32 %v2_10d202054, 1840
  %v4_10d202056 = inttoptr i32 %v3_10d202055 to i32*
  store i32 0, i32* %v4_10d202056, align 4
  br label %dec_label_pc_10d14.dec_label_pc_10d14_crit_edge

dec_label_pc_10d14.dec_label_pc_10d14_crit_edge:  ; preds = %dec_label_pc_10d0c, %dec_label_pc_10d14.dec_label_pc_10d14_crit_edge
  %v0_10d14.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10d20.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10d14 = add i32 %v0_10d14.pre, 1840
  store i32 %v1_10d14, i32* %r0.global-to-local, align 4
  %v1_10d18 = add i32 %v0_10d14.pre, 4
  store i32 %v1_10d18, i32* %r3.global-to-local, align 4
  %v7_10d1c = icmp eq i32 %v1_10d18, 128
  %v2_10d20 = load i32, i32* @sp, align 4
  %v3_10d20 = add i32 %v2_10d20, %v1_10d14
  %v4_10d20 = inttoptr i32 %v3_10d20 to i32*
  store i32 %v0_10d20.pre, i32* %v4_10d20, align 4
  br i1 %v7_10d1c, label %dec_label_pc_10d28, label %dec_label_pc_10d14.dec_label_pc_10d14_crit_edge

dec_label_pc_10d28:                               ; preds = %dec_label_pc_10d14.dec_label_pc_10d14_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10d28 = load i32, i32* %r2.global-to-local, align 4
  %v1_10d2c2057 = add i32 %v0_10d28, 1712
  store i32 %v1_10d2c2057, i32* %r1.global-to-local, align 4
  %v1_10d302058 = add i32 %v0_10d28, 4
  store i32 %v1_10d302058, i32* %r3.global-to-local, align 4
  %v7_10d342059 = icmp eq i32 %v1_10d302058, 128
  %v2_10d382060 = load i32, i32* @sp, align 4
  %v3_10d382061 = add i32 %v2_10d382060, %v1_10d2c2057
  %v4_10d382062 = inttoptr i32 %v3_10d382061 to i32*
  store i32 %v0_10d28, i32* %v4_10d382062, align 4
  br i1 %v7_10d342059, label %dec_label_pc_10d40, label %dec_label_pc_10d2c.dec_label_pc_10d2c_crit_edge

dec_label_pc_10d2c.dec_label_pc_10d2c_crit_edge:  ; preds = %dec_label_pc_10d28, %dec_label_pc_10d2c.dec_label_pc_10d2c_crit_edge
  %v0_10d2c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10d38.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10d2c = add i32 %v0_10d2c.pre, 1712
  store i32 %v1_10d2c, i32* %r1.global-to-local, align 4
  %v1_10d30 = add i32 %v0_10d2c.pre, 4
  store i32 %v1_10d30, i32* %r3.global-to-local, align 4
  %v7_10d34 = icmp eq i32 %v1_10d30, 128
  %v2_10d38 = load i32, i32* @sp, align 4
  %v3_10d38 = add i32 %v2_10d38, %v1_10d2c
  %v4_10d38 = inttoptr i32 %v3_10d38 to i32*
  store i32 %v0_10d38.pre, i32* %v4_10d38, align 4
  br i1 %v7_10d34, label %dec_label_pc_10d40, label %dec_label_pc_10d2c.dec_label_pc_10d2c_crit_edge

dec_label_pc_10d40:                               ; preds = %dec_label_pc_10d2c.dec_label_pc_10d2c_crit_edge, %dec_label_pc_10d28
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10d40 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10d40, i32* @r6, align 4
  store i32 %v0_10d40, i32* @r5, align 4
  store i32 %v0_10d40, i32* @r7, align 4
  store i32 %v0_10d40, i32* %stack_var_-52, align 4
  br label %dec_label_pc_10dbc

dec_label_pc_10d54:                               ; preds = %dec_label_pc_10de4, %dec_label_pc_10dbc
  %storemerge1248 = phi i32 [ 30, %dec_label_pc_10dbc ], [ 5, %dec_label_pc_10de4 ]
  store i32 %storemerge1248, i32* %r1.global-to-local, align 4
  %v1_10d58 = add i32 %v2_10dd0, 8
  %v2_10d58 = inttoptr i32 %v1_10d58 to i32*
  %v3_10d58 = load i32, i32* %v2_10d58, align 4
  store i32 %v3_10d58, i32* %r2.global-to-local, align 4
  %v2_10d5c = load i32, i32* @global_var_1dc20.123, align 4
  %v2_10d60 = sub i32 %v2_10d5c, %v3_10d58
  store i32 %v2_10d60, i32* %r3.global-to-local, align 4
  %v3_10d64 = icmp uge i32 %v2_10d60, %storemerge1248
  store i1 %v3_10d64, i1* %cpsr_c.global-to-local, align 1
  %v9_10d64 = icmp eq i32 %v2_10d60, %storemerge1248
  store i1 %v9_10d64, i1* %cpsr_z.global-to-local, align 1
  %v2_10d68 = xor i1 %v9_10d64, true
  %v3_10d68 = and i1 %v3_10d64, %v2_10d68
  br i1 %v3_10d68, label %dec_label_pc_10e28, label %dec_label_pc_10d6c

dec_label_pc_10d6c:                               ; preds = %dec_label_pc_10d54
  store i1 %v2_10dd8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10dd8, i1* %cpsr_z.global-to-local, align 1
  %v1_10df4 = add i32 %v2_10dd0, 4
  %v2_10df4 = inttoptr i32 %v1_10df4 to i32*
  %v3_10df4 = load i32, i32* %v2_10df4, align 4
  br i1 %v7_10dd8, label %dec_label_pc_10df4, label %dec_label_pc_10d74

dec_label_pc_10d74:                               ; preds = %dec_label_pc_10d6c
  store i32 %v3_10df4, i32* %ip.global-to-local, align 4
  %v3_10d7c = udiv i32 %v3_10df4, 32
  store i32 %v2_10e00, i32* %r2.global-to-local, align 4
  %v3_10d84 = mul nuw nsw i32 %v3_10d7c, 4
  %v2_10d88 = add i32 %v3_10d84, %v2_10e00
  store i32 %v2_10d88, i32* %r3.global-to-local, align 4
  %v1_10d8c = add i32 %v2_10d88, -184
  %v2_10d8c = inttoptr i32 %v1_10d8c to i32*
  %v3_10d8c = load i32, i32* %v2_10d8c, align 4
  %v1_10d90 = urem i32 %v3_10df4, 32
  store i32 %v1_10d90, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_10d98 = shl i32 1, %v1_10d90
  %v8_10d98 = or i32 %v3_10d8c, %v7_10d98
  store i32 %v8_10d98, i32* %r2.global-to-local, align 4
  store i32 %v8_10d98, i32* %v2_10d8c, align 4
  %v0_10da0 = load i32, i32* @r6, align 4
  %v1_10da0 = load i32, i32* %ip.global-to-local, align 4
  %v3_10da0 = icmp uge i32 %v0_10da0, %v1_10da0
  store i1 %v3_10da0, i1* %cpsr_c.global-to-local, align 1
  %v9_10da0 = icmp eq i32 %v0_10da0, %v1_10da0
  store i1 %v9_10da0, i1* %cpsr_z.global-to-local, align 1
  %v5_10da4 = icmp slt i32 %v0_10da0, %v1_10da0
  br i1 %v5_10da4, label %bb1891, label %bb1892

bb1891:                                           ; preds = %dec_label_pc_10d74
  store i32 %v1_10da0, i32* @r6, align 4
  br label %bb1892

bb1892:                                           ; preds = %dec_label_pc_10de4, %dec_label_pc_11c24, %dec_label_pc_10e5c, %bb1894, %dec_label_pc_10d74, %bb1891
  %v3_10da8 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10da8, i32* %r3.global-to-local, align 4
  %v1_10dac = add i32 %v3_10da8, 1
  store i32 %v1_10dac, i32* %r2.global-to-local, align 4
  %v2_10db0 = icmp ugt i32 %v1_10dac, 254
  store i1 %v2_10db0, i1* %cpsr_c.global-to-local, align 1
  %v7_10db0 = icmp eq i32 %v1_10dac, 255
  store i1 %v7_10db0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10dac, i32* %stack_var_-52, align 4
  %v8_10db8 = icmp sgt i32 %v1_10dac, 255
  br i1 %v8_10db8, label %dec_label_pc_10e68, label %dec_label_pc_10dbc

dec_label_pc_10dbc:                               ; preds = %bb1892, %dec_label_pc_10d40
  %v0_10dc8 = phi i32 [ %v1_10dac, %bb1892 ], [ %v0_10d40, %dec_label_pc_10d40 ]
  %v3_10dc0 = mul i32 %v0_10dc8, 256
  store i32 %v3_10dc0, i32* %r3.global-to-local, align 4
  %v2_10dc4 = load i32, i32* @global_var_1dc84.136, align 4
  store i32 %v2_10dc4, i32* %r1.global-to-local, align 4
  %v2_10dcc = mul i32 %v0_10dc8, 288
  store i32 %v2_10dcc, i32* %r2.global-to-local, align 4
  %v2_10dd0 = add i32 %v2_10dc4, %v2_10dcc
  store i32 %v2_10dd0, i32* @r4, align 4
  %v1_10dd4 = add i32 %v2_10dd0, 12
  %v2_10dd4 = inttoptr i32 %v1_10dd4 to i32*
  %v3_10dd4 = load i32, i32* %v2_10dd4, align 4
  store i32 %v3_10dd4, i32* %ip.global-to-local, align 4
  %v2_10dd8 = icmp ne i32 %v3_10dd4, 0
  store i1 %v2_10dd8, i1* %cpsr_c.global-to-local, align 1
  %v7_10dd8 = icmp eq i32 %v3_10dd4, 1
  store i1 %v7_10dd8, i1* %cpsr_z.global-to-local, align 1
  %v2_10ddc = xor i1 %v7_10dd8, true
  %v3_10ddc = and i1 %v2_10dd8, %v2_10ddc
  br i1 %v3_10ddc, label %dec_label_pc_10d54, label %dec_label_pc_10de4

dec_label_pc_10de4:                               ; preds = %dec_label_pc_10dbc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10de4 = icmp eq i32 %v3_10dd4, 0
  store i1 %v2_10de4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10de4, label %bb1892, label %dec_label_pc_10d54

dec_label_pc_10df4:                               ; preds = %dec_label_pc_10d6c
  store i32 %v3_10df4, i32* %r0.global-to-local, align 4
  %v3_10dfc = udiv i32 %v3_10df4, 32
  store i32 %v2_10e00, i32* %r1.global-to-local, align 4
  %v3_10e04 = mul nuw nsw i32 %v3_10dfc, 4
  %v2_10e08 = add i32 %v3_10e04, %v2_10e00
  store i32 %v2_10e08, i32* %r3.global-to-local, align 4
  %v1_10e0c = add i32 %v2_10e08, -312
  %v2_10e0c = inttoptr i32 %v1_10e0c to i32*
  %v3_10e0c = load i32, i32* %v2_10e0c, align 4
  %v1_10e10 = urem i32 %v3_10df4, 32
  store i32 %v1_10e10, i32* %r1.global-to-local, align 4
  %v7_10e14 = shl i32 1, %v1_10e10
  %v8_10e14 = or i32 %v3_10e0c, %v7_10e14
  store i32 %v8_10e14, i32* %r2.global-to-local, align 4
  %v0_10e18 = load i32, i32* @r5, align 4
  %v3_10e18 = icmp uge i32 %v0_10e18, %v3_10df4
  store i1 %v3_10e18, i1* %cpsr_c.global-to-local, align 1
  %v9_10e18 = icmp eq i32 %v0_10e18, %v3_10df4
  store i1 %v9_10e18, i1* %cpsr_z.global-to-local, align 1
  %v5_10e1c = icmp slt i32 %v0_10e18, %v3_10df4
  br i1 %v5_10e1c, label %bb1893, label %bb1894

bb1893:                                           ; preds = %dec_label_pc_10df4
  store i32 %v3_10df4, i32* @r5, align 4
  br label %bb1894

bb1894:                                           ; preds = %dec_label_pc_10df4, %bb1893
  store i32 %v8_10e14, i32* %v2_10e0c, align 4
  br label %bb1892

dec_label_pc_10e28:                               ; preds = %dec_label_pc_10d54
  %v1_10e28 = add i32 %v2_10dd0, 4
  %v2_10e28 = inttoptr i32 %v1_10e28 to i32*
  %v3_10e28 = load i32, i32* %v2_10e28, align 4
  store i32 %v3_10e28, i32* %r0.global-to-local, align 4
  %v1_10e2c = call i32 @function_12bf0(i32 %v3_10e28)
  store i32 %v1_10e2c, i32* %r0.global-to-local, align 4
  %v0_10e30 = load i32, i32* @r4, align 4
  %v1_10e30 = add i32 %v0_10e30, 12
  %v2_10e30 = inttoptr i32 %v1_10e30 to i32*
  %v3_10e30 = load i32, i32* %v2_10e30, align 4
  store i32 %v3_10e30, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10e38 = icmp ugt i32 %v3_10e30, 1
  store i1 %v2_10e38, i1* %cpsr_c.global-to-local, align 1
  %v7_10e38 = icmp eq i32 %v3_10e30, 2
  store i1 %v7_10e38, i1* %cpsr_z.global-to-local, align 1
  %v2_10e3c = add i32 %v0_10e30, 4
  %v3_10e3c = inttoptr i32 %v2_10e3c to i32*
  store i32 -1, i32* %v3_10e3c, align 4
  %v2_10e40 = xor i1 %v2_10e38, true
  %v3_10e40 = or i1 %v7_10e38, %v2_10e40
  br i1 %v3_10e40, label %dec_label_pc_11c24, label %dec_label_pc_10e44

dec_label_pc_10e44:                               ; preds = %dec_label_pc_10e28
  %v0_10e44 = load i32, i32* @r4, align 4
  %v1_10e44 = add i32 %v0_10e44, 284
  %v2_10e44 = inttoptr i32 %v1_10e44 to i8*
  %v3_10e44 = load i8, i8* %v2_10e44, align 1
  %v4_10e44 = zext i8 %v3_10e44 to i32
  %v1_10e48 = add nuw nsw i32 %v4_10e44, 1
  %v1_10e4c = urem i32 %v1_10e48, 256
  store i32 %v1_10e4c, i32* %r3.global-to-local, align 4
  %v2_10e50 = icmp ugt i32 %v1_10e4c, 9
  store i1 %v2_10e50, i1* %cpsr_c.global-to-local, align 1
  %v7_10e50 = icmp eq i32 %v1_10e4c, 10
  store i1 %v7_10e50, i1* %cpsr_z.global-to-local, align 1
  %v1_10e54 = trunc i32 %v1_10e48 to i8
  store i8 %v1_10e54, i8* %v2_10e44, align 1
  %v0_10e58 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10e58, label %dec_label_pc_11c24, label %dec_label_pc_10e5c

dec_label_pc_10e5c:                               ; preds = %dec_label_pc_10e44
  %v0_10e5c = load i32, i32* @r4, align 4
  store i32 %v0_10e5c, i32* @r0, align 4
  %v0_10e60 = call i32 @function_ea30()
  store i32 %v0_10e60, i32* %r0.global-to-local, align 4
  br label %bb1892

dec_label_pc_10e68:                               ; preds = %bb1892
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-64, align 4
  %v0_10e74 = load i32, i32* @r6, align 4
  %v1_10e74 = load i32, i32* @r5, align 4
  %v3_10e74 = icmp uge i32 %v0_10e74, %v1_10e74
  store i1 %v3_10e74, i1* %cpsr_c.global-to-local, align 1
  %v9_10e74 = icmp eq i32 %v0_10e74, %v1_10e74
  store i1 %v9_10e74, i1* %cpsr_z.global-to-local, align 1
  %v5_10e78 = icmp slt i32 %v0_10e74, %v1_10e74
  %storemerge696 = select i1 %v5_10e78, i32 %v1_10e74, i32 %v0_10e74
  store i32 %v2_10e84, i32* %ip.global-to-local, align 4
  store i32 %v2_10e88, i32* %r1.global-to-local, align 4
  store i32 %v2_10e8c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10e94 = add i32 %storemerge696, 1
  store i32 %v1_10e94, i32* %r0.global-to-local, align 4
  %v5_10ea0 = call i32 @function_12e10(i32 %v1_10e94, i32 %v2_10e88, i32 %v2_10e8c, i32 0, i32 %v2_10e84)
  %v0_10ea4 = load i32, i32* @r4, align 4
  store i32 %v0_10ea4, i32* %r0.global-to-local, align 4
  %v1_10ea8 = inttoptr i32 %v0_10ea4 to i32*
  %v2_10ea8 = call i32 @function_12ec0(i32* %v1_10ea8)
  store i32 %v2_10ea8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc20.123 to i32), i32* @lr, align 4
  %v0_10eb0 = load i32, i32* @r4, align 4
  store i32 %v0_10eb0, i32* %stack_var_-52, align 4
  store i32 %v2_10ea8, i32* @global_var_1dc20.123, align 4
  br label %dec_label_pc_10ef8

dec_label_pc_10ebc:                               ; preds = %dec_label_pc_10f1c, %dec_label_pc_11bc0
  %v0_10ed4 = phi i32 [ %v3_10f10, %dec_label_pc_10f1c ], [ %v0_10ebc.pre, %dec_label_pc_11bc0 ]
  %v3_10ebc = udiv i32 %v0_10ed4, 32
  %v3_10ec4 = mul nuw nsw i32 %v3_10ebc, 4
  store i32 %v2_10e00, i32* %ip.global-to-local, align 4
  %v2_10ecc = add i32 %v3_10ec4, %v2_10e00
  store i32 %v2_10ecc, i32* %r3.global-to-local, align 4
  %v1_10ed0 = add i32 %v2_10ecc, -184
  %v2_10ed0 = inttoptr i32 %v1_10ed0 to i32*
  %v3_10ed0 = load i32, i32* %v2_10ed0, align 4
  %v1_10ed4 = urem i32 %v0_10ed4, 32
  store i32 %v1_10ed4, i32* %r1.global-to-local, align 4
  %v2_10ed8 = add nsw i32 %v1_10ed4, -1
  %v3_10ed8 = shl i32 1, %v2_10ed8
  %v4_10ed8 = and i32 %v3_10ed8, %v3_10ed0
  %v5_10ed8 = icmp ne i32 %v4_10ed8, 0
  store i1 %v5_10ed8, i1* %cpsr_c.global-to-local, align 1
  %v6_10ed8 = lshr i32 %v3_10ed0, %v1_10ed4
  store i32 %v6_10ed8, i32* %r2.global-to-local, align 4
  %v1_10edc = urem i32 %v6_10ed8, 2
  %v2_10edc = icmp eq i32 %v1_10edc, 0
  store i1 %v2_10edc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10edc, label %dec_label_pc_10ee4, label %dec_label_pc_110ac.preheader

dec_label_pc_110ac.preheader:                     ; preds = %dec_label_pc_10ebc
  %v0_110ac718 = load i32, i32* @r6, align 4
  %v1_110ac719 = add i32 %v0_110ac718, 12
  %v2_110ac720 = inttoptr i32 %v1_110ac719 to i32*
  %v3_110ac721 = load i32, i32* %v2_110ac720, align 4
  store i32 %v3_110ac721, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110b0717723 = icmp eq i32 %v3_110ac721, 0
  store i1 %v2_110b0717723, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110b0717723, label %dec_label_pc_10ee4, label %dec_label_pc_110b8.lr.ph

dec_label_pc_10ee4:                               ; preds = %dec_label_pc_110ac.loopexit, %dec_label_pc_110b0.backedge, %dec_label_pc_110ac.preheader, %dec_label_pc_10ebc, %bb1939, %dec_label_pc_118f8, %dec_label_pc_10ef8, %dec_label_pc_11bd4, %dec_label_pc_1193c
  %v3_10ee4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10ee4, i32* %r3.global-to-local, align 4
  %v1_10ee8 = add i32 %v3_10ee4, 1
  store i32 %v1_10ee8, i32* %r4.global-to-local, align 4
  %v2_10eec = icmp ugt i32 %v1_10ee8, 254
  store i1 %v2_10eec, i1* %cpsr_c.global-to-local, align 1
  %v7_10eec = icmp eq i32 %v1_10ee8, 255
  store i1 %v7_10eec, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10ee8, i32* %stack_var_-52, align 4
  %v8_10ef4 = icmp sgt i32 %v1_10ee8, 255
  br i1 %v8_10ef4, label %dec_label_pc_f104, label %dec_label_pc_10ef8

dec_label_pc_10ef8:                               ; preds = %dec_label_pc_10ee4, %dec_label_pc_10e68
  %v0_10efc = phi i32 [ %v1_10ee8, %dec_label_pc_10ee4 ], [ %v0_10eb0, %dec_label_pc_10e68 ]
  store i32 ptrtoint (i32* @global_var_1dc84.136 to i32), i32* %r0.global-to-local, align 4
  %v3_10efc = mul i32 %v0_10efc, 256
  store i32 %v3_10efc, i32* %r3.global-to-local, align 4
  %v2_10f04 = load i32, i32* @global_var_1dc84.136, align 4
  store i32 %v2_10f04, i32* %r1.global-to-local, align 4
  %v2_10f08 = mul i32 %v0_10efc, 288
  store i32 %v2_10f08, i32* %r2.global-to-local, align 4
  %v2_10f0c = add i32 %v2_10f04, %v2_10f08
  store i32 %v2_10f0c, i32* @r6, align 4
  %v1_10f10 = add i32 %v2_10f0c, 4
  %v2_10f10 = inttoptr i32 %v1_10f10 to i32*
  %v3_10f10 = load i32, i32* %v2_10f10, align 4
  store i32 %v3_10f10, i32* @r4, align 4
  %v2_10f14 = icmp eq i32 %v3_10f10, -1
  store i1 %v2_10f14, i1* %cpsr_c.global-to-local, align 1
  %v7_10f14 = icmp eq i32 %v3_10f10, -1
  store i1 %v7_10f14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f14, label %dec_label_pc_10ee4, label %dec_label_pc_10f1c

dec_label_pc_10f1c:                               ; preds = %dec_label_pc_10ef8
  %v3_10f1c = udiv i32 %v3_10f10, 32
  store i32 %v2_10e00, i32* %r1.global-to-local, align 4
  %v3_10f28 = mul nuw nsw i32 %v3_10f1c, 4
  %v2_10f2c = add i32 %v3_10f28, %v2_10e00
  store i32 %v2_10f2c, i32* %r3.global-to-local, align 4
  %v1_10f30 = add i32 %v2_10f2c, -312
  %v2_10f30 = inttoptr i32 %v1_10f30 to i32*
  %v3_10f30 = load i32, i32* %v2_10f30, align 4
  %v1_10f34 = urem i32 %v3_10f10, 32
  store i32 %v1_10f34, i32* %r1.global-to-local, align 4
  %v2_10f38 = add nsw i32 %v1_10f34, -1
  %v3_10f38 = shl i32 1, %v2_10f38
  %v4_10f38 = and i32 %v3_10f30, %v3_10f38
  %v5_10f38 = icmp ne i32 %v4_10f38, 0
  store i1 %v5_10f38, i1* %cpsr_c.global-to-local, align 1
  %v6_10f38 = lshr i32 %v3_10f30, %v1_10f34
  store i32 %v6_10f38, i32* %r2.global-to-local, align 4
  %v1_10f3c = urem i32 %v6_10f38, 2
  %v2_10f3c = icmp eq i32 %v1_10f3c, 0
  store i1 %v2_10f3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10f3c, label %dec_label_pc_10ebc, label %dec_label_pc_10f44

dec_label_pc_10f44:                               ; preds = %dec_label_pc_10f1c
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v3_10f10, i32* %r0.global-to-local, align 4
  store i32 %v2_114f0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_11020, i32* @r4, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i8 4, i8* %stack_var_-56, align 1
  %v6_10f74 = call i32 @function_13394(i32 %v3_10f10, i32 1, i32 4, i32* nonnull %stack_var_-48, i32 %v2_11020)
  %v3_10f78 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_10f78, i32* %r3.global-to-local, align 4
  %v2_10f7c = or i32 %v3_10f78, %v6_10f74
  store i32 %v2_10f7c, i32* %r0.global-to-local, align 4
  %v4_10f7c = icmp eq i32 %v2_10f7c, 0
  store i1 %v4_10f7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10f7c, label %dec_label_pc_10f84, label %dec_label_pc_11bd4

dec_label_pc_10f84:                               ; preds = %dec_label_pc_10f44
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_10f88 = load i32, i32* @r6, align 4
  %v2_10f88 = add i32 %v1_10f88, 12
  %v3_10f88 = inttoptr i32 %v2_10f88 to i32*
  store i32 2, i32* %v3_10f88, align 4
  %v0_10f8c = call i32 @function_e7cc()
  store i32 %v0_10f8c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1dc1c.129 to i32), i32* %ip.global-to-local, align 4
  %v2_10f94 = load i8, i8* bitcast (i8** @global_var_1dc1c.129 to i8*), align 4
  %v3_10f94 = zext i8 %v2_10f94 to i32
  %v3_10f98 = load i8, i8* @global_var_1dc1d.130, align 1
  %v4_10f98 = zext i8 %v3_10f98 to i32
  store i32 %v4_10f98, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_10f9c = mul nuw nsw i32 %v4_10f98, 256
  %v5_10f9c = or i32 %v4_10f9c, %v3_10f94
  store i32 %v5_10f9c, i32* %r1.global-to-local, align 4
  %v2_10fa0 = call i32 @function_12978(i32 %v0_10f8c, i32 %v5_10f9c)
  store i32 ptrtoint (i32* @global_var_1dbec.125 to i32), i32* %r1.global-to-local, align 4
  %v2_10fa8 = load i32, i32* @global_var_1dbec.125, align 4
  store i32 %v2_10fa8, i32* @lr, align 4
  %v1_10fb0 = load i32, i32* @r5, align 4
  %v9_10fb0 = icmp eq i32 %v2_10fa8, %v1_10fb0
  store i1 %v9_10fb0, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_10fb4 = urem i32 %v2_10fa0, 65536
  store i32 %v3_10fb4, i32* %r0.global-to-local, align 4
  %v7_10fb8 = icmp sgt i32 %v2_10fa8, %v1_10fb0
  br i1 %v7_10fb8, label %dec_label_pc_10fbc, label %dec_label_pc_11bbc

dec_label_pc_10fbc:                               ; preds = %dec_label_pc_10f84
  store i32 ptrtoint (i32* @global_var_1dc18.127 to i32), i32* %r2.global-to-local, align 4
  %v2_10fc0 = load i32, i32* @global_var_1dc18.127, align 4
  store i32 %v2_10fc0, i32* %r4.global-to-local, align 4
  store i32 %v1_10fb0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10fd4

dec_label_pc_10fcc:                               ; preds = %dec_label_pc_10ff4, %dec_label_pc_10fd4
  %v3_10fcc = icmp uge i32 %v2_10fa8, %v1_10fe8
  store i1 %v3_10fcc, i1* %cpsr_c.global-to-local, align 1
  %v9_10fcc = icmp eq i32 %v2_10fa8, %v1_10fe8
  store i1 %v9_10fcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10fcc, label %dec_label_pc_11bbc, label %dec_label_pc_10fd4

dec_label_pc_10fd4:                               ; preds = %dec_label_pc_10fcc, %dec_label_pc_10fbc
  %v0_10fe8 = phi i32 [ %v1_10fe8, %dec_label_pc_10fcc ], [ %v1_10fb0, %dec_label_pc_10fbc ]
  %v0_10ff4 = phi i32 [ %v1_10fec, %dec_label_pc_10fcc ], [ %v2_10fc0, %dec_label_pc_10fbc ]
  store i32 %v0_10ff4, i32* %r1.global-to-local, align 4
  %v1_10fd8 = add i32 %v0_10ff4, 8
  %v2_10fd8 = inttoptr i32 %v1_10fd8 to i8*
  %v3_10fd8 = load i8, i8* %v2_10fd8, align 1
  %v4_10fd8 = zext i8 %v3_10fd8 to i32
  store i32 %v4_10fd8, i32* %r3.global-to-local, align 4
  %v1_10fdc = add i32 %v0_10ff4, 9
  %v2_10fdc = inttoptr i32 %v1_10fdc to i8*
  %v3_10fdc = load i8, i8* %v2_10fdc, align 1
  %v4_10fdc = zext i8 %v3_10fdc to i32
  store i32 %v4_10fdc, i32* %r2.global-to-local, align 4
  %v4_10fe0 = mul nuw nsw i32 %v4_10fdc, 256
  %v5_10fe0 = or i32 %v4_10fe0, %v4_10fd8
  store i32 %v5_10fe0, i32* %r3.global-to-local, align 4
  %v3_10fe4 = icmp uge i32 %v5_10fe0, %v3_10fb4
  store i1 %v3_10fe4, i1* %cpsr_c.global-to-local, align 1
  %v9_10fe4 = icmp eq i32 %v5_10fe0, %v3_10fb4
  store i1 %v9_10fe4, i1* %cpsr_z.global-to-local, align 1
  %v1_10fe8 = add i32 %v0_10fe8, 1
  store i32 %v1_10fe8, i32* %ip.global-to-local, align 4
  %v1_10fec = add i32 %v0_10ff4, 16
  store i32 %v1_10fec, i32* %r4.global-to-local, align 4
  %v2_10ff0 = xor i1 %v9_10fe4, true
  %v3_10ff0 = and i1 %v3_10fe4, %v2_10ff0
  br i1 %v3_10ff0, label %dec_label_pc_10fcc, label %dec_label_pc_10ff4

dec_label_pc_10ff4:                               ; preds = %dec_label_pc_10fd4
  %v1_10ff4 = add i32 %v0_10ff4, 10
  %v2_10ff4 = inttoptr i32 %v1_10ff4 to i8*
  %v3_10ff4 = load i8, i8* %v2_10ff4, align 1
  %v4_10ff4 = zext i8 %v3_10ff4 to i32
  store i32 %v4_10ff4, i32* %r3.global-to-local, align 4
  %v1_10ff8 = add i32 %v0_10ff4, 11
  %v2_10ff8 = inttoptr i32 %v1_10ff8 to i8*
  %v3_10ff8 = load i8, i8* %v2_10ff8, align 1
  %v4_10ff8 = zext i8 %v3_10ff8 to i32
  store i32 %v4_10ff8, i32* %r2.global-to-local, align 4
  %v4_10ffc = mul nuw nsw i32 %v4_10ff8, 256
  %v5_10ffc = or i32 %v4_10ffc, %v4_10ff4
  store i32 %v5_10ffc, i32* %r3.global-to-local, align 4
  %v3_11000 = icmp uge i32 %v5_10ffc, %v3_10fb4
  store i1 %v3_11000, i1* %cpsr_c.global-to-local, align 1
  %v9_11000 = icmp eq i32 %v5_10ffc, %v3_10fb4
  store i1 %v9_11000, i1* %cpsr_z.global-to-local, align 1
  %v2_11004 = xor i1 %v3_11000, true
  %v3_11004 = or i1 %v9_11000, %v2_11004
  br i1 %v3_11004, label %dec_label_pc_10fcc, label %dec_label_pc_11bc0

dec_label_pc_1100c:                               ; preds = %dec_label_pc_1127c, %dec_label_pc_112a0, %dec_label_pc_11244
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_11010 = call i32 @function_11d20(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_11018 = call i32 @function_11d20(i32 27)
  store i32 %v2_11020, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_11028 = call i32 @function_11c3c(i32 26, i32* %v2_11028)
  store i32 %v3_11028, i32* @r4, align 4
  store i32 %v2_11020, i32* %r1.global-to-local, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v3_1103c = call i32 @function_11c3c(i32 27, i32* %v2_11028)
  %v3_11040 = load i8, i8* %stack_var_-56, align 1
  %v4_11040 = sext i8 %v3_11040 to i32
  %sext4 = mul i32 %v3_1103c, 16777216
  %v1_11044 = sdiv i32 %sext4, 16777216
  store i32 %v1_11044, i32* @r5, align 4
  %v0_11048 = load i32, i32* @r4, align 4
  store i32 %v0_11048, i32* %r2.global-to-local, align 4
  %v1_1104c = add nsw i32 %v4_11040, -1
  store i32 %v1_1104c, i32* %r3.global-to-local, align 4
  %v0_11050 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11050, i32* %r0.global-to-local, align 4
  %v0_11054 = load i32, i32* @r6, align 4
  %v1_11054 = add i32 %v0_11054, 24
  %v2_11054 = inttoptr i32 %v1_11054 to i32*
  %v3_11054 = load i32, i32* %v2_11054, align 4
  store i32 %v3_11054, i32* %r1.global-to-local, align 4
  %v4_11058 = call i32 @function_123b0(i32 %v0_11050, i32 %v3_11054, i32 %v0_11048, i32 %v1_1104c)
  store i32 %v4_11058, i32* %r0.global-to-local, align 4
  %v2_1105c = icmp eq i32 %v4_11058, -1
  store i1 %v2_1105c, i1* %cpsr_c.global-to-local, align 1
  %v7_1105c = icmp eq i32 %v4_11058, -1
  store i1 %v7_1105c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1105c, label %dec_label_pc_1106c, label %dec_label_pc_11094

dec_label_pc_1106c:                               ; preds = %dec_label_pc_1100c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_1106c = load i8, i8* %stack_var_-56, align 1
  %v4_1106c = sext i8 %v3_1106c to i32
  %v0_11070 = load i32, i32* @r5, align 4
  store i32 %v0_11070, i32* %r2.global-to-local, align 4
  %v1_11074 = add nsw i32 %v4_1106c, -1
  store i32 %v1_11074, i32* %r3.global-to-local, align 4
  %v0_11078 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11078, i32* %r0.global-to-local, align 4
  %v0_1107c = load i32, i32* @r6, align 4
  %v1_1107c = add i32 %v0_1107c, 24
  %v2_1107c = inttoptr i32 %v1_1107c to i32*
  %v3_1107c = load i32, i32* %v2_1107c, align 4
  store i32 %v3_1107c, i32* %r1.global-to-local, align 4
  %v4_11080 = call i32 @function_123b0(i32 %v0_11078, i32 %v3_1107c, i32 %v0_11070, i32 %v1_11074)
  store i32 %v4_11080, i32* %r0.global-to-local, align 4
  %v2_11084 = icmp eq i32 %v4_11080, -1
  store i1 %v2_11084, i1* %cpsr_c.global-to-local, align 1
  %v7_11084 = icmp eq i32 %v4_11080, -1
  store i1 %v7_11084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11084, label %dec_label_pc_11bfc, label %dec_label_pc_11094

dec_label_pc_11094:                               ; preds = %dec_label_pc_1106c, %dec_label_pc_1100c
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_11098 = call i32 @function_11c68(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_110a0 = call i32 @function_11c68(i32 27)
  store i32 %v1_110a0, i32* %r0.global-to-local, align 4
  %v0_110a4 = load i32, i32* @r7, align 4
  %v3_110a4 = icmp eq i32 %v0_110a4, -1
  store i1 %v3_110a4, i1* %cpsr_c.global-to-local, align 1
  %v8_110a4 = icmp eq i32 %v0_110a4, -1
  store i1 %v8_110a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_110a4, label %dec_label_pc_110ac.loopexit, label %dec_label_pc_112bc

dec_label_pc_110ac.loopexit:                      ; preds = %dec_label_pc_11234, %dec_label_pc_119e0, %dec_label_pc_1112c, %dec_label_pc_11094, %dec_label_pc_118d8
  %v0_110ac = load i32, i32* @r6, align 4
  %v1_110ac = add i32 %v0_110ac, 12
  %v2_110ac = inttoptr i32 %v1_110ac to i32*
  %v3_110ac = load i32, i32* %v2_110ac, align 4
  store i32 %v3_110ac, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110b0717 = icmp eq i32 %v3_110ac, 0
  store i1 %v2_110b0717, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110b0717, label %dec_label_pc_10ee4, label %dec_label_pc_110b8.lr.ph

dec_label_pc_110b8.lr.ph:                         ; preds = %dec_label_pc_110ac.preheader, %dec_label_pc_110ac.loopexit
  %v0_110b81053 = phi i32 [ %v0_110ac, %dec_label_pc_110ac.loopexit ], [ %v0_110ac718, %dec_label_pc_110ac.preheader ]
  br label %dec_label_pc_110b8

dec_label_pc_110b8:                               ; preds = %dec_label_pc_110b0.backedge.thread, %dec_label_pc_110b0.backedge, %dec_label_pc_110b0.backedge.thread2099, %dec_label_pc_110b8.lr.ph
  %v0_11988 = phi i32 [ %v0_110b81053, %dec_label_pc_110b8.lr.ph ], [ %v0_110b81035, %dec_label_pc_110b0.backedge ], [ %v0_1112c, %dec_label_pc_110b0.backedge.thread ], [ %v0_1112c, %dec_label_pc_110b0.backedge.thread2099 ]
  %v1_110b8 = add i32 %v0_11988, 24
  %v2_110b8 = inttoptr i32 %v1_110b8 to i32*
  %v3_110b8 = load i32, i32* %v2_110b8, align 4
  store i32 %v3_110b8, i32* %r3.global-to-local, align 4
  %v2_110bc = icmp ugt i32 %v3_110b8, 255
  store i1 %v2_110bc, i1* %cpsr_c.global-to-local, align 1
  %v7_110bc = icmp eq i32 %v3_110b8, 256
  store i1 %v7_110bc, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_11988, 28
  store i32 %.pre, i32* %r8.global-to-local, align 4
  br i1 %v7_110bc, label %dec_label_pc_11988, label %dec_label_pc_110c8

dec_label_pc_110c8:                               ; preds = %dec_label_pc_110b8, %dec_label_pc_11988
  store i32 0, i32* @r5, align 4
  %v1_110cc = load i32, i32* %fp.global-to-local, align 4
  %v2_110cc = inttoptr i32 %v1_110cc to i32*
  store i32 0, i32* %v2_110cc, align 4
  %v0_110d0 = load i32, i32* @r6, align 4
  %v1_110d0 = add i32 %v0_110d0, 24
  %v2_110d0 = inttoptr i32 %v1_110d0 to i32*
  %v3_110d0 = load i32, i32* %v2_110d0, align 4
  store i32 %v3_110d0, i32* %r2.global-to-local, align 4
  %v0_110d4 = load i32, i32* %r8.global-to-local, align 4
  %v2_110d4 = add i32 %v0_110d4, %v3_110d0
  store i32 %v2_110d4, i32* @r4, align 4
  %v1_110d8 = add i32 %v0_110d0, 4
  %v2_110d8 = inttoptr i32 %v1_110d8 to i32*
  %v3_110d8 = load i32, i32* %v2_110d8, align 4
  store i32 %v3_110d8, i32* %r0.global-to-local, align 4
  %v1_110dc = sub i32 256, %v3_110d0
  store i32 %v1_110dc, i32* %r2.global-to-local, align 4
  store i32 %v2_110d4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_110e8 = inttoptr i32 %v2_110d4 to i32*
  %v5_110e8 = call i32 @function_133f0(i32 %v3_110d8, i32* %v4_110e8, i32 %v1_110dc, i32 16384)
  store i32 %v5_110e8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110ec = icmp eq i32 %v5_110e8, 0
  store i1 %v2_110ec, i1* %cpsr_z.global-to-local, align 1
  %tmp1895 = icmp slt i32 %v5_110e8, 1
  br i1 %tmp1895, label %dec_label_pc_118ec, label %dec_label_pc_110f4

dec_label_pc_110f4:                               ; preds = %dec_label_pc_110c8
  %v0_110f4 = load i32, i32* @r5, align 4
  store i32 %v0_110f4, i32* %r2.global-to-local, align 4
  store i32 65, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_110fc

dec_label_pc_110fc:                               ; preds = %bb1897, %dec_label_pc_110f4
  %v3_11104 = phi i32 [ %v1_11108, %bb1897 ], [ %v0_110f4, %dec_label_pc_110f4 ]
  %v1_110fc = load i32, i32* @r4, align 4
  %v2_110fc = add i32 %v1_110fc, %v3_11104
  %v3_110fc = inttoptr i32 %v2_110fc to i8*
  %v4_110fc = load i8, i8* %v3_110fc, align 1
  %v6_110fc = zext i8 %v4_110fc to i32
  store i32 %v6_110fc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11100 = icmp eq i8 %v4_110fc, 0
  store i1 %v2_11100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11100, label %bb1896, label %bb1897

bb1896:                                           ; preds = %dec_label_pc_110fc
  %v1_11104 = load i32, i32* %r1.global-to-local, align 4
  %v2_11104 = trunc i32 %v1_11104 to i8
  store i8 %v2_11104, i8* %v3_110fc, align 1
  %v0_11108.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb1897

bb1897:                                           ; preds = %dec_label_pc_110fc, %bb1896
  %v0_11108 = phi i32 [ %v3_11104, %dec_label_pc_110fc ], [ %v0_11108.pre, %bb1896 ]
  %v1_11108 = add i32 %v0_11108, 1
  store i32 %v1_11108, i32* %r2.global-to-local, align 4
  %v3_1110c = icmp uge i32 %v5_110e8, %v1_11108
  store i1 %v3_1110c, i1* %cpsr_c.global-to-local, align 1
  %v9_1110c = icmp eq i32 %v5_110e8, %v1_11108
  store i1 %v9_1110c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1110c, label %dec_label_pc_11114, label %dec_label_pc_110fc

dec_label_pc_11114:                               ; preds = %bb1897, %dec_label_pc_118f0
  store i32 ptrtoint (i32* @global_var_1dc20.123 to i32), i32* @lr, align 4
  %v0_11118 = load i32, i32* @r6, align 4
  %v1_11118 = add i32 %v0_11118, 24
  %v2_11118 = inttoptr i32 %v1_11118 to i32*
  %v3_11118 = load i32, i32* %v2_11118, align 4
  %v2_1111c = load i32, i32* @global_var_1dc20.123, align 4
  store i32 %v2_1111c, i32* %r3.global-to-local, align 4
  %v2_11120 = add i32 %v3_11118, %v5_110e8
  store i32 %v2_11120, i32* %ip.global-to-local, align 4
  store i32 %v2_11120, i32* %v2_11118, align 4
  %v0_11128 = load i32, i32* %r3.global-to-local, align 4
  %v1_11128 = load i32, i32* @r6, align 4
  %v2_11128 = add i32 %v1_11128, 8
  %v3_11128 = inttoptr i32 %v2_11128 to i32*
  store i32 %v0_11128, i32* %v3_11128, align 4
  br label %dec_label_pc_1112c

dec_label_pc_1112c:                               ; preds = %dec_label_pc_11748, %dec_label_pc_11114
  %v0_1112c = load i32, i32* @r6, align 4
  %v1_1112c = add i32 %v0_1112c, 12
  %v2_1112c = inttoptr i32 %v1_1112c to i32*
  %v3_1112c = load i32, i32* %v2_1112c, align 4
  store i32 %v3_1112c, i32* %r2.global-to-local, align 4
  %v1_11130 = add i32 %v3_1112c, -2
  store i32 %v1_11130, i32* %r3.global-to-local, align 4
  %v7_11134 = icmp eq i32 %v1_11130, 8
  store i1 %v7_11134, i1* %cpsr_z.global-to-local, align 1
  %v5_11138 = and i32 %v1_11130, 1073741824
  %v6_11138 = icmp ne i32 %v5_11138, 0
  store i1 %v6_11138, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_1112c, label %dec_label_pc_110ac.loopexit [
    i32 2, label %dec_label_pc_11164
    i32 3, label %dec_label_pc_11244
    i32 4, label %dec_label_pc_11300
    i32 5, label %dec_label_pc_113ac
    i32 6, label %dec_label_pc_11474
    i32 7, label %dec_label_pc_11604
    i32 8, label %dec_label_pc_1153c
    i32 9, label %dec_label_pc_1176c
    i32 10, label %dec_label_pc_116cc
  ]

dec_label_pc_11164:                               ; preds = %dec_label_pc_1112c
  %v1_11164 = add i32 %v0_1112c, 24
  %v2_11164 = inttoptr i32 %v1_11164 to i32*
  %v3_11164 = load i32, i32* %v2_11164, align 4
  store i32 %v3_11164, i32* %ip.global-to-local, align 4
  %v0_11168 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11168, i32* @r5, align 4
  store i32 0, i32* @r7, align 4
  store i32 -3, i32* %sb.global-to-local, align 4
  store i32 -4, i32* %sl.global-to-local, align 4
  %v1_11178 = add i32 %v0_1112c, 29
  store i32 %v1_11178, i32* @r4, align 4
  %v3_1117c708 = icmp eq i32 %v3_11164, 0
  store i1 %v3_1117c708, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_1117c708, i1* %cpsr_z.global-to-local, align 1
  %v6_11180715 = icmp sgt i32 %v3_11164, 0
  br i1 %v6_11180715, label %dec_label_pc_11184.preheader, label %dec_label_pc_11224

dec_label_pc_1117c.loopexit:                      ; preds = %dec_label_pc_1119c
  %v2_111a4 = add i32 %v1_111a4, 2
  store i32 %v2_111a4, i32* @r5, align 4
  %v2_111a8 = add i32 %v1_111a8, 2
  store i32 %v2_111a8, i32* @r4, align 4
  %v2_111ac = add i32 %v1_111ac, 2
  store i32 %v2_111ac, i32* @r7, align 4
  %v3_1117c = icmp uge i32 %v2_111ac, %v1_1117c
  store i1 %v3_1117c, i1* %cpsr_c.global-to-local, align 1
  %v9_1117c = icmp eq i32 %v2_111ac, %v1_1117c
  store i1 %v9_1117c, i1* %cpsr_z.global-to-local, align 1
  %v6_11180 = icmp slt i32 %v2_111ac, %v1_1117c
  br i1 %v6_11180, label %dec_label_pc_11184.preheader, label %dec_label_pc_11224

dec_label_pc_11184.preheader:                     ; preds = %dec_label_pc_11164, %dec_label_pc_1117c.loopexit
  %v6_1122c1108 = phi i32 [ %v6_1122c1109, %dec_label_pc_1117c.loopexit ], [ %v0_1112c, %dec_label_pc_11164 ]
  %v1_111ac1097 = phi i32 [ %v2_111ac, %dec_label_pc_1117c.loopexit ], [ 0, %dec_label_pc_11164 ]
  %v1_111a41095 = phi i32 [ %v2_111a4, %dec_label_pc_1117c.loopexit ], [ %v0_11168, %dec_label_pc_11164 ]
  %v1_111901093 = phi i32 [ %v1_1117c, %dec_label_pc_1117c.loopexit ], [ %v3_11164, %dec_label_pc_11164 ]
  %v0_111841091 = phi i32 [ %v2_111a8, %dec_label_pc_1117c.loopexit ], [ %v1_11178, %dec_label_pc_11164 ]
  br label %dec_label_pc_11184

dec_label_pc_11184:                               ; preds = %dec_label_pc_11184.preheader, %dec_label_pc_11204
  %v6_1122c1109 = phi i32 [ %v6_1122c1108, %dec_label_pc_11184.preheader ], [ %v0_1120c, %dec_label_pc_11204 ]
  %v1_111ac = phi i32 [ %v1_111ac1097, %dec_label_pc_11184.preheader ], [ %v1_11210, %dec_label_pc_11204 ]
  %v1_111a4 = phi i32 [ %v1_111a41095, %dec_label_pc_11184.preheader ], [ %v1_11218, %dec_label_pc_11204 ]
  %v1_1117c = phi i32 [ %v1_111901093, %dec_label_pc_11184.preheader ], [ %v3_1120c, %dec_label_pc_11204 ]
  %v1_111a8 = phi i32 [ %v0_111841091, %dec_label_pc_11184.preheader ], [ %v1_1121c, %dec_label_pc_11204 ]
  %v1_11184 = add i32 %v1_111a8, -1
  %v2_11184 = inttoptr i32 %v1_11184 to i8*
  %v3_11184 = load i8, i8* %v2_11184, align 1
  %v4_11184 = zext i8 %v3_11184 to i32
  store i32 %v4_11184, i32* %r3.global-to-local, align 4
  %v2_11188 = icmp eq i8 %v3_11184, -1
  store i1 %v2_11188, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_11188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11188, label %dec_label_pc_11190, label %dec_label_pc_11224

dec_label_pc_11190:                               ; preds = %dec_label_pc_11184
  %v0_11190 = load i32, i32* %r8.global-to-local, align 4
  %v2_11190 = add i32 %v0_11190, %v1_1117c
  store i32 %v2_11190, i32* %r2.global-to-local, align 4
  %v3_11194 = icmp uge i32 %v2_11190, %v1_111a8
  store i1 %v3_11194, i1* %cpsr_c.global-to-local, align 1
  %v9_11194 = icmp eq i32 %v2_11190, %v1_111a8
  store i1 %v9_11194, i1* %cpsr_z.global-to-local, align 1
  %v2_11198 = xor i1 %v3_11194, true
  %v3_11198 = or i1 %v9_11194, %v2_11198
  br i1 %v3_11198, label %dec_label_pc_11224, label %dec_label_pc_1119c

dec_label_pc_1119c:                               ; preds = %dec_label_pc_11190
  %v1_1119c = inttoptr i32 %v1_111a8 to i8*
  %v2_1119c = load i8, i8* %v1_1119c, align 1
  %v3_1119c = zext i8 %v2_1119c to i32
  store i32 %v3_1119c, i32* %r3.global-to-local, align 4
  %v2_111a0 = icmp eq i8 %v2_1119c, -1
  store i1 %v2_111a0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_111a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_111a0, label %dec_label_pc_1117c.loopexit, label %dec_label_pc_111b4

dec_label_pc_111b4:                               ; preds = %dec_label_pc_1119c
  %v2_111b4 = icmp ugt i8 %v2_1119c, -4
  store i1 %v2_111b4, i1* %cpsr_c.global-to-local, align 1
  %v7_111b4 = icmp eq i8 %v2_1119c, -3
  store i1 %v7_111b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111b4, label %dec_label_pc_11834, label %dec_label_pc_111bc

dec_label_pc_111bc:                               ; preds = %dec_label_pc_111b4
  %v1_111bc = add i32 %v1_111a4, 2
  store i32 %v1_111bc, i32* %r3.global-to-local, align 4
  %v3_111c0 = icmp uge i32 %v2_11190, %v1_111bc
  store i1 %v3_111c0, i1* %cpsr_c.global-to-local, align 1
  %v9_111c0 = icmp eq i32 %v2_11190, %v1_111bc
  store i1 %v9_111c0, i1* %cpsr_z.global-to-local, align 1
  %v2_111c4 = xor i1 %v3_111c0, true
  %v3_111c4 = or i1 %v9_111c0, %v2_111c4
  br i1 %v3_111c4, label %dec_label_pc_11224, label %dec_label_pc_111c8

dec_label_pc_111c8:                               ; preds = %bb1936, %dec_label_pc_1188c, %bb1935, %dec_label_pc_111bc
  %v0_111c8 = load i32, i32* @r4, align 4
  %v1_111c8 = inttoptr i32 %v0_111c8 to i8*
  %v2_111c8 = load i8, i8* %v1_111c8, align 1
  %v3_111c8 = zext i8 %v2_111c8 to i32
  store i32 %v3_111c8, i32* %r3.global-to-local, align 4
  %v2_111cc = icmp ugt i8 %v2_111c8, -4
  store i1 %v2_111cc, i1* %cpsr_c.global-to-local, align 1
  %v7_111cc = icmp eq i8 %v2_111c8, -3
  store i1 %v7_111cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111cc, label %bb1898, label %dec_label_pc_111d8

bb1898:                                           ; preds = %dec_label_pc_111c8
  %v1_111d0 = load i32, i32* %sl.global-to-local, align 4
  %v2_111d0 = trunc i32 %v1_111d0 to i8
  store i8 %v2_111d0, i8* %v1_111c8, align 1
  %v0_111d4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_111d4.pr, label %bb1900, label %.dec_label_pc_111d8_crit_edge

.dec_label_pc_111d8_crit_edge:                    ; preds = %bb1898
  %v0_111d8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_111d8

dec_label_pc_111d8:                               ; preds = %.dec_label_pc_111d8_crit_edge, %dec_label_pc_111c8
  %v0_111d8 = phi i32 [ %v0_111d8.pre, %.dec_label_pc_111d8_crit_edge ], [ %v3_111c8, %dec_label_pc_111c8 ]
  %v2_111d8 = icmp ugt i32 %v0_111d8, 250
  store i1 %v2_111d8, i1* %cpsr_c.global-to-local, align 1
  %v7_111d8 = icmp eq i32 %v0_111d8, 251
  store i1 %v7_111d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111d8, label %bb1899, label %bb1900

bb1899:                                           ; preds = %dec_label_pc_111d8
  %v1_111dc = load i32, i32* %sb.global-to-local, align 4
  %v2_111dc = trunc i32 %v1_111dc to i8
  %v3_111dc = load i32, i32* @r4, align 4
  %v4_111dc = inttoptr i32 %v3_111dc to i8*
  store i8 %v2_111dc, i8* %v4_111dc, align 1
  br label %bb1900

bb1900:                                           ; preds = %bb1898, %dec_label_pc_111d8, %bb1899
  %v0_111e0 = load i32, i32* @r4, align 4
  %v1_111e0 = add i32 %v0_111e0, 1
  %v2_111e0 = inttoptr i32 %v1_111e0 to i8*
  %v3_111e0 = load i8, i8* %v2_111e0, align 1
  %v4_111e0 = zext i8 %v3_111e0 to i32
  store i32 %v4_111e0, i32* %r3.global-to-local, align 4
  %v2_111e4 = icmp ugt i8 %v3_111e0, -4
  store i1 %v2_111e4, i1* %cpsr_c.global-to-local, align 1
  %v7_111e4 = icmp eq i8 %v3_111e0, -3
  store i1 %v7_111e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111e4, label %bb1901, label %dec_label_pc_111f0

bb1901:                                           ; preds = %bb1900
  %v1_111e8 = load i32, i32* %sl.global-to-local, align 4
  %v2_111e8 = trunc i32 %v1_111e8 to i8
  store i8 %v2_111e8, i8* %v2_111e0, align 1
  %v0_111ec.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_111ec.pr, label %bb1903, label %.dec_label_pc_111f0_crit_edge

.dec_label_pc_111f0_crit_edge:                    ; preds = %bb1901
  %v0_111f0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_111f0

dec_label_pc_111f0:                               ; preds = %.dec_label_pc_111f0_crit_edge, %bb1900
  %v0_111f0 = phi i32 [ %v0_111f0.pre, %.dec_label_pc_111f0_crit_edge ], [ %v4_111e0, %bb1900 ]
  %v2_111f0 = icmp ugt i32 %v0_111f0, 250
  store i1 %v2_111f0, i1* %cpsr_c.global-to-local, align 1
  %v7_111f0 = icmp eq i32 %v0_111f0, 251
  store i1 %v7_111f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111f0, label %bb1902, label %bb1903

bb1902:                                           ; preds = %dec_label_pc_111f0
  %v1_111f4 = load i32, i32* %sb.global-to-local, align 4
  %v2_111f4 = trunc i32 %v1_111f4 to i8
  %v3_111f4 = load i32, i32* @r4, align 4
  %v4_111f4 = add i32 %v3_111f4, 1
  %v5_111f4 = inttoptr i32 %v4_111f4 to i8*
  store i8 %v2_111f4, i8* %v5_111f4, align 1
  br label %bb1903

bb1903:                                           ; preds = %bb1901, %dec_label_pc_111f0, %bb1902
  %v0_111f8 = load i32, i32* @r6, align 4
  %v1_111f8 = add i32 %v0_111f8, 4
  %v2_111f8 = inttoptr i32 %v1_111f8 to i32*
  %v3_111f8 = load i32, i32* %v2_111f8, align 4
  store i32 %v3_111f8, i32* %r0.global-to-local, align 4
  %v0_111fc = load i32, i32* @r5, align 4
  br label %dec_label_pc_11204

dec_label_pc_11204:                               ; preds = %dec_label_pc_11948, %bb1903
  %v0_11208 = phi i32 [ %v3_11964, %dec_label_pc_11948 ], [ %v3_111f8, %bb1903 ]
  %storemerge5 = phi i32 [ %v2_11850, %dec_label_pc_11948 ], [ %v0_111fc, %bb1903 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_11948 ], [ 3, %bb1903 ]
  store i32 %storemerge5, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11208 = inttoptr i32 %storemerge5 to i32*
  %v5_11208 = call i32 @function_13450(i32 %v0_11208, i32* %v4_11208, i32 %storemerge, i32 16384)
  store i32 %v5_11208, i32* %r0.global-to-local, align 4
  %v0_1120c = load i32, i32* @r6, align 4
  %v1_1120c = add i32 %v0_1120c, 24
  %v2_1120c = inttoptr i32 %v1_1120c to i32*
  %v3_1120c = load i32, i32* %v2_1120c, align 4
  store i32 %v3_1120c, i32* %ip.global-to-local, align 4
  %v0_11210 = load i32, i32* @r7, align 4
  %v1_11210 = add i32 %v0_11210, 3
  store i32 %v1_11210, i32* @r7, align 4
  %v3_11214 = icmp uge i32 %v1_11210, %v3_1120c
  store i1 %v3_11214, i1* %cpsr_c.global-to-local, align 1
  %v9_11214 = icmp eq i32 %v1_11210, %v3_1120c
  store i1 %v9_11214, i1* %cpsr_z.global-to-local, align 1
  %v0_11218 = load i32, i32* @r5, align 4
  %v1_11218 = add i32 %v0_11218, 3
  store i32 %v1_11218, i32* @r5, align 4
  %v0_1121c = load i32, i32* @r4, align 4
  %v1_1121c = add i32 %v0_1121c, 3
  store i32 %v1_1121c, i32* @r4, align 4
  %v5_11220 = icmp slt i32 %v1_11210, %v3_1120c
  br i1 %v5_11220, label %dec_label_pc_11184, label %dec_label_pc_11224

dec_label_pc_11224:                               ; preds = %dec_label_pc_1117c.loopexit, %dec_label_pc_11184, %dec_label_pc_11204, %dec_label_pc_111bc, %dec_label_pc_11190, %dec_label_pc_11164, %dec_label_pc_11834.dec_label_pc_11224.loopexit_crit_edge
  %v6_1122c = phi i32 [ %v0_1185c, %dec_label_pc_11834.dec_label_pc_11224.loopexit_crit_edge ], [ %v0_1112c, %dec_label_pc_11164 ], [ %v6_1122c1109, %dec_label_pc_11184 ], [ %v0_1120c, %dec_label_pc_11204 ], [ %v6_1122c1109, %dec_label_pc_111bc ], [ %v6_1122c1109, %dec_label_pc_11190 ], [ %v6_1122c1109, %dec_label_pc_1117c.loopexit ]
  %v0_11234.pre = phi i32 [ %v0_11224.pre.pre, %dec_label_pc_11834.dec_label_pc_11224.loopexit_crit_edge ], [ 0, %dec_label_pc_11164 ], [ %v1_111ac, %dec_label_pc_11184 ], [ %v1_11210, %dec_label_pc_11204 ], [ %v1_111ac, %dec_label_pc_111bc ], [ %v1_111ac, %dec_label_pc_11190 ], [ %v2_111ac, %dec_label_pc_1117c.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11224 = icmp eq i32 %v0_11234.pre, 0
  store i1 %v2_11224, i1* %cpsr_z.global-to-local, align 1
  %tmp1904 = icmp slt i32 %v0_11234.pre, 1
  br i1 %tmp1904, label %dec_label_pc_11234, label %.thread1149

.thread1149:                                      ; preds = %dec_label_pc_11224
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_1122c = add i32 %v6_1122c, 12
  %v8_1122c = inttoptr i32 %v7_1122c to i32*
  store i32 3, i32* %v8_1122c, align 4
  br label %dec_label_pc_11748

dec_label_pc_11234:                               ; preds = %dec_label_pc_11224, %dec_label_pc_117d4, %dec_label_pc_11a2c, %dec_label_pc_1166c, %dec_label_pc_115a4, %dec_label_pc_114dc, %dec_label_pc_11414, %dec_label_pc_11368, %dec_label_pc_112bc
  %v0_11234 = phi i32 [ %v1_117c8, %dec_label_pc_117d4 ], [ %v0_11a24, %dec_label_pc_11a2c ], [ %v1_11660, %dec_label_pc_1166c ], [ %v1_11598, %dec_label_pc_115a4 ], [ %v1_114d0, %dec_label_pc_114dc ], [ %v1_11408, %dec_label_pc_11414 ], [ %v0_11368, %dec_label_pc_11368 ], [ %v0_112bc, %dec_label_pc_112bc ], [ %v0_11234.pre, %dec_label_pc_11224 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11234 = icmp eq i32 %v0_11234, 0
  store i1 %v2_11234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11234, label %dec_label_pc_110ac.loopexit, label %dec_label_pc_1123c

dec_label_pc_1123c:                               ; preds = %dec_label_pc_11234
  %v0_1123c = load i32, i32* @r6, align 4
  %v1_1123c = add i32 %v0_1123c, 24
  %v2_1123c = inttoptr i32 %v1_1123c to i32*
  %v3_1123c = load i32, i32* %v2_1123c, align 4
  store i32 %v3_1123c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11748

dec_label_pc_11244:                               ; preds = %dec_label_pc_1112c
  %v1_11244 = add i32 %v0_1112c, 24
  %v2_11244 = inttoptr i32 %v1_11244 to i32*
  %v3_11244 = load i32, i32* %v2_11244, align 4
  store i32 %v3_11244, i32* %r3.global-to-local, align 4
  %v1_11248 = add i32 %v3_11244, -1
  store i32 %v1_11248, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1124c = icmp eq i32 %v1_11248, 0
  store i1 %v2_1124c, i1* %cpsr_z.global-to-local, align 1
  %tmp1905 = icmp slt i32 %v1_11248, 1
  br i1 %tmp1905, label %dec_label_pc_1100c, label %dec_label_pc_11254

dec_label_pc_11254:                               ; preds = %dec_label_pc_11244
  %v2_11254 = add i32 %v1_11248, %v0_1112c
  store i32 %v2_11254, i32* %r3.global-to-local, align 4
  %v1_11258 = add i32 %v2_11254, 28
  %v2_11258 = inttoptr i32 %v1_11258 to i8*
  %v3_11258 = load i8, i8* %v2_11258, align 1
  %v4_11258 = zext i8 %v3_11258 to i32
  store i32 %v4_11258, i32* %r3.global-to-local, align 4
  %v2_1125c = icmp ugt i8 %v3_11258, 61
  store i1 %v2_1125c, i1* %cpsr_c.global-to-local, align 1
  %v7_1125c = icmp eq i8 %v3_11258, 62
  store i1 %v7_1125c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1125c, label %dec_label_pc_112a0, label %bb1906

bb1906:                                           ; preds = %dec_label_pc_11254
  %v3_11260 = icmp ugt i8 %v3_11258, 57
  store i1 %v3_11260, i1* %cpsr_c.global-to-local, align 1
  %v8_11260 = icmp eq i8 %v3_11258, 58
  store i1 %v8_11260, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11260, label %dec_label_pc_112a0, label %dec_label_pc_11298

dec_label_pc_1126c:                               ; preds = %dec_label_pc_11298
  %v2_1126c = icmp ugt i32 %v0_11274, 34
  store i1 %v2_1126c, i1* %cpsr_c.global-to-local, align 1
  %v7_1126c = icmp eq i32 %v0_11274, 35
  store i1 %v7_1126c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1126c, label %dec_label_pc_112a0, label %dec_label_pc_11274

dec_label_pc_11274:                               ; preds = %dec_label_pc_1126c
  %v2_11274 = icmp ugt i32 %v0_11274, 36
  store i1 %v2_11274, i1* %cpsr_c.global-to-local, align 1
  %v7_11274 = icmp eq i32 %v0_11274, 37
  store i1 %v7_11274, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11274, label %dec_label_pc_112a0, label %dec_label_pc_1127c

dec_label_pc_1127c:                               ; preds = %dec_label_pc_11274
  %v1_1127c = add i32 %v0_1127c, -1
  store i32 %v1_1127c, i32* %r0.global-to-local, align 4
  %v2_1127c = icmp ne i32 %v0_1127c, 0
  store i1 %v2_1127c, i1* %cpsr_c.global-to-local, align 1
  %v7_1127c = icmp eq i32 %v0_1127c, 1
  store i1 %v7_1127c, i1* %cpsr_z.global-to-local, align 1
  %v2_11280 = add i32 %v1_1127c, %v0_1112c
  store i32 %v2_11280, i32* %r3.global-to-local, align 4
  br i1 %v7_1127c, label %dec_label_pc_1100c, label %dec_label_pc_11288

dec_label_pc_11288:                               ; preds = %dec_label_pc_1127c
  %v1_11288 = add i32 %v2_11280, 28
  %v2_11288 = inttoptr i32 %v1_11288 to i8*
  %v3_11288 = load i8, i8* %v2_11288, align 1
  %v4_11288 = zext i8 %v3_11288 to i32
  store i32 %v4_11288, i32* %r3.global-to-local, align 4
  %v2_1128c = icmp ugt i8 %v3_11288, 61
  store i1 %v2_1128c, i1* %cpsr_c.global-to-local, align 1
  %v7_1128c = icmp eq i8 %v3_11288, 62
  store i1 %v7_1128c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1128c, label %dec_label_pc_112a0, label %bb1907

bb1907:                                           ; preds = %dec_label_pc_11288
  %v3_11290 = icmp ugt i8 %v3_11288, 57
  store i1 %v3_11290, i1* %cpsr_c.global-to-local, align 1
  %v8_11290 = icmp eq i8 %v3_11288, 58
  store i1 %v8_11290, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11290, label %dec_label_pc_112a0, label %dec_label_pc_11298

dec_label_pc_11298:                               ; preds = %bb1906, %bb1907
  %v0_1127c = phi i32 [ %v1_1127c, %bb1907 ], [ %v1_11248, %bb1906 ]
  %v0_11274 = phi i32 [ %v4_11288, %bb1907 ], [ %v4_11258, %bb1906 ]
  %v2_11298 = icmp ugt i32 %v0_11274, 35
  store i1 %v2_11298, i1* %cpsr_c.global-to-local, align 1
  %v7_11298 = icmp eq i32 %v0_11274, 36
  store i1 %v7_11298, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11298, label %dec_label_pc_112a0, label %dec_label_pc_1126c

dec_label_pc_112a0:                               ; preds = %dec_label_pc_11288, %dec_label_pc_11298, %bb1907, %dec_label_pc_11274, %dec_label_pc_1126c, %dec_label_pc_11254, %bb1906
  %v0_112a0 = phi i32 [ %v1_11248, %dec_label_pc_11254 ], [ %v1_11248, %bb1906 ], [ %v1_1127c, %dec_label_pc_11288 ], [ %v0_1127c, %dec_label_pc_11298 ], [ %v1_1127c, %bb1907 ], [ %v0_1127c, %dec_label_pc_11274 ], [ %v0_1127c, %dec_label_pc_1126c ]
  %v1_112a0 = add i32 %v0_112a0, 1
  store i32 %v1_112a0, i32* @r7, align 4
  %v2_112a4 = icmp eq i32 %v1_112a0, -1
  store i1 %v2_112a4, i1* %cpsr_c.global-to-local, align 1
  %v7_112a4 = icmp eq i32 %v0_112a0, -2
  store i1 %v7_112a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112a4, label %dec_label_pc_1100c, label %dec_label_pc_112ac

dec_label_pc_112ac:                               ; preds = %dec_label_pc_112a0
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_112b0 = call i32 @function_11c68(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_112b8 = call i32 @function_11c68(i32 27)
  store i32 %v1_112b8, i32* %r0.global-to-local, align 4
  %v0_112bc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_112bc

dec_label_pc_112bc:                               ; preds = %dec_label_pc_11094, %dec_label_pc_112ac
  %v0_112bc = phi i32 [ %v0_110a4, %dec_label_pc_11094 ], [ %v0_112bc.pre, %dec_label_pc_112ac ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_112bc = icmp eq i32 %v0_112bc, 0
  store i1 %v2_112bc, i1* %cpsr_z.global-to-local, align 1
  %tmp1908 = icmp slt i32 %v0_112bc, 1
  br i1 %tmp1908, label %dec_label_pc_11234, label %dec_label_pc_112c4

dec_label_pc_112c4:                               ; preds = %dec_label_pc_112bc
  %v0_112c4 = load i32, i32* @r6, align 4
  %v1_112c4 = inttoptr i32 %v0_112c4 to i32*
  %v2_112c4 = load i32, i32* %v1_112c4, align 4
  store i32 %v2_112c4, i32* %r3.global-to-local, align 4
  %v1_112c8 = add i32 %v0_112c4, 4
  %v2_112c8 = inttoptr i32 %v1_112c8 to i32*
  %v3_112c8 = load i32, i32* %v2_112c8, align 4
  store i32 %v3_112c8, i32* %r0.global-to-local, align 4
  %v1_112cc = add i32 %v2_112c4, 12
  %v2_112cc = inttoptr i32 %v1_112cc to i8*
  %v3_112cc = load i8, i8* %v2_112cc, align 1
  %v4_112cc = zext i8 %v3_112cc to i32
  store i32 %v4_112cc, i32* %r2.global-to-local, align 4
  %v1_112d0 = inttoptr i32 %v2_112c4 to i32*
  %v2_112d0 = load i32, i32* %v1_112d0, align 4
  store i32 %v2_112d0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_112d8 = inttoptr i32 %v2_112d0 to i32*
  %v5_112d8 = call i32 @function_13450(i32 %v3_112c8, i32* %v4_112d8, i32 %v4_112cc, i32 16384)
  store i32 %v5_112d8, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_112e0 = load i32, i32* @r6, align 4
  %v1_112e0 = add i32 %v0_112e0, 4
  %v2_112e0 = inttoptr i32 %v1_112e0 to i32*
  %v3_112e0 = load i32, i32* %v2_112e0, align 4
  store i32 %v3_112e0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15570.230 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_112ec = call i32 @function_13450(i32 %v3_112e0, i32* bitcast ([3 x i8]* @global_var_15570.230 to i32*), i32 2, i32 16384)
  store i32 %v5_112ec, i32* %r0.global-to-local, align 4
  %v0_112f0 = load i32, i32* @r6, align 4
  %v1_112f0 = add i32 %v0_112f0, 24
  %v2_112f0 = inttoptr i32 %v1_112f0 to i32*
  %v3_112f0 = load i32, i32* %v2_112f0, align 4
  store i32 %v3_112f0, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_112f8 = add i32 %v0_112f0, 12
  %v3_112f8 = inttoptr i32 %v2_112f8 to i32*
  store i32 4, i32* %v3_112f8, align 4
  br label %dec_label_pc_11748

dec_label_pc_11300:                               ; preds = %dec_label_pc_1112c
  %v1_11300 = add i32 %v0_1112c, 24
  %v2_11300 = inttoptr i32 %v1_11300 to i32*
  %v3_11300 = load i32, i32* %v2_11300, align 4
  store i32 %v3_11300, i32* %r3.global-to-local, align 4
  %v1_11304 = add i32 %v3_11300, -1
  store i32 %v1_11304, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11308 = icmp eq i32 %v1_11304, 0
  store i1 %v2_11308, i1* %cpsr_z.global-to-local, align 1
  %tmp1909 = icmp slt i32 %v1_11304, 1
  br i1 %tmp1909, label %dec_label_pc_11898, label %dec_label_pc_11310

dec_label_pc_11310:                               ; preds = %dec_label_pc_11300
  %v2_11310 = add i32 %v1_11304, %v0_1112c
  store i32 %v2_11310, i32* %r3.global-to-local, align 4
  %v1_11314 = add i32 %v2_11310, 28
  %v2_11314 = inttoptr i32 %v1_11314 to i8*
  %v3_11314 = load i8, i8* %v2_11314, align 1
  %v4_11314 = zext i8 %v3_11314 to i32
  store i32 %v4_11314, i32* %r3.global-to-local, align 4
  %v2_11318 = icmp ugt i8 %v3_11314, 61
  store i1 %v2_11318, i1* %cpsr_c.global-to-local, align 1
  %v7_11318 = icmp eq i8 %v3_11314, 62
  store i1 %v7_11318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11318, label %dec_label_pc_11354, label %bb1910

bb1910:                                           ; preds = %dec_label_pc_11310
  %v3_1131c = icmp ugt i8 %v3_11314, 57
  store i1 %v3_1131c, i1* %cpsr_c.global-to-local, align 1
  %v8_1131c = icmp eq i8 %v3_11314, 58
  store i1 %v8_1131c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1131c, label %dec_label_pc_11354, label %dec_label_pc_1134c

dec_label_pc_11328:                               ; preds = %dec_label_pc_1134c
  %v2_11328 = icmp ugt i32 %v0_11328, 34
  store i1 %v2_11328, i1* %cpsr_c.global-to-local, align 1
  %v7_11328 = icmp eq i32 %v0_11328, 35
  store i1 %v7_11328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11328, label %dec_label_pc_11354, label %dec_label_pc_11330

dec_label_pc_11330:                               ; preds = %dec_label_pc_11328
  %v1_11330 = add i32 %v0_11330, -1
  store i32 %v1_11330, i32* %r0.global-to-local, align 4
  %v2_11330 = icmp ne i32 %v0_11330, 0
  store i1 %v2_11330, i1* %cpsr_c.global-to-local, align 1
  %v7_11330 = icmp eq i32 %v0_11330, 1
  store i1 %v7_11330, i1* %cpsr_z.global-to-local, align 1
  %v2_11334 = add i32 %v1_11330, %v0_1112c
  store i32 %v2_11334, i32* %r3.global-to-local, align 4
  br i1 %v7_11330, label %dec_label_pc_11898, label %dec_label_pc_1133c

dec_label_pc_1133c:                               ; preds = %dec_label_pc_11330
  %v1_1133c = add i32 %v2_11334, 28
  %v2_1133c = inttoptr i32 %v1_1133c to i8*
  %v3_1133c = load i8, i8* %v2_1133c, align 1
  %v4_1133c = zext i8 %v3_1133c to i32
  store i32 %v4_1133c, i32* %r3.global-to-local, align 4
  %v2_11340 = icmp ugt i8 %v3_1133c, 61
  store i1 %v2_11340, i1* %cpsr_c.global-to-local, align 1
  %v7_11340 = icmp eq i8 %v3_1133c, 62
  store i1 %v7_11340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11340, label %dec_label_pc_11354, label %bb1911

bb1911:                                           ; preds = %dec_label_pc_1133c
  %v3_11344 = icmp ugt i8 %v3_1133c, 57
  store i1 %v3_11344, i1* %cpsr_c.global-to-local, align 1
  %v8_11344 = icmp eq i8 %v3_1133c, 58
  store i1 %v8_11344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11344, label %dec_label_pc_11354, label %dec_label_pc_1134c

dec_label_pc_1134c:                               ; preds = %bb1910, %bb1911
  %v0_11330 = phi i32 [ %v1_11330, %bb1911 ], [ %v1_11304, %bb1910 ]
  %v0_11328 = phi i32 [ %v4_1133c, %bb1911 ], [ %v4_11314, %bb1910 ]
  %v2_1134c = icmp ugt i32 %v0_11328, 35
  store i1 %v2_1134c, i1* %cpsr_c.global-to-local, align 1
  %v7_1134c = icmp eq i32 %v0_11328, 36
  store i1 %v7_1134c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1134c, label %dec_label_pc_11354, label %dec_label_pc_11328

dec_label_pc_11354:                               ; preds = %dec_label_pc_1133c, %dec_label_pc_1134c, %bb1911, %dec_label_pc_11328, %dec_label_pc_11310, %bb1910
  %v0_11354 = phi i32 [ %v1_11304, %dec_label_pc_11310 ], [ %v1_11304, %bb1910 ], [ %v1_11330, %dec_label_pc_1133c ], [ %v0_11330, %dec_label_pc_1134c ], [ %v1_11330, %bb1911 ], [ %v0_11330, %dec_label_pc_11328 ]
  %v1_11354 = add i32 %v0_11354, 1
  store i32 %v1_11354, i32* @r7, align 4
  %v2_11358 = icmp eq i32 %v1_11354, -1
  store i1 %v2_11358, i1* %cpsr_c.global-to-local, align 1
  %v7_11358 = icmp eq i32 %v0_11354, -2
  store i1 %v7_11358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11358, label %dec_label_pc_11898, label %dec_label_pc_11360

dec_label_pc_11360:                               ; preds = %dec_label_pc_11354
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_11364 = call i32 @function_11c68(i32 25)
  store i32 %v1_11364, i32* %r0.global-to-local, align 4
  %v0_11368.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11368

dec_label_pc_11368:                               ; preds = %dec_label_pc_118d8, %dec_label_pc_11360
  %v0_11368 = phi i32 [ %v0_118e0, %dec_label_pc_118d8 ], [ %v0_11368.pre, %dec_label_pc_11360 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11368 = icmp eq i32 %v0_11368, 0
  store i1 %v2_11368, i1* %cpsr_z.global-to-local, align 1
  %tmp1912 = icmp slt i32 %v0_11368, 1
  br i1 %tmp1912, label %dec_label_pc_11234, label %dec_label_pc_11370

dec_label_pc_11370:                               ; preds = %dec_label_pc_11368
  %v0_11370 = load i32, i32* @r6, align 4
  %v1_11370 = inttoptr i32 %v0_11370 to i32*
  %v2_11370 = load i32, i32* %v1_11370, align 4
  store i32 %v2_11370, i32* %r3.global-to-local, align 4
  %v1_11374 = add i32 %v0_11370, 4
  %v2_11374 = inttoptr i32 %v1_11374 to i32*
  %v3_11374 = load i32, i32* %v2_11374, align 4
  store i32 %v3_11374, i32* %r0.global-to-local, align 4
  %v1_11378 = add i32 %v2_11370, 13
  %v2_11378 = inttoptr i32 %v1_11378 to i8*
  %v3_11378 = load i8, i8* %v2_11378, align 1
  %v4_11378 = zext i8 %v3_11378 to i32
  store i32 %v4_11378, i32* %r2.global-to-local, align 4
  %v1_1137c = add i32 %v2_11370, 4
  %v2_1137c = inttoptr i32 %v1_1137c to i32*
  %v3_1137c = load i32, i32* %v2_1137c, align 4
  store i32 %v3_1137c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11384 = inttoptr i32 %v3_1137c to i32*
  %v5_11384 = call i32 @function_13450(i32 %v3_11374, i32* %v4_11384, i32 %v4_11378, i32 16384)
  store i32 %v5_11384, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_1138c = load i32, i32* @r6, align 4
  %v1_1138c = add i32 %v0_1138c, 4
  %v2_1138c = inttoptr i32 %v1_1138c to i32*
  %v3_1138c = load i32, i32* %v2_1138c, align 4
  store i32 %v3_1138c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15570.230 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_11398 = call i32 @function_13450(i32 %v3_1138c, i32* bitcast ([3 x i8]* @global_var_15570.230 to i32*), i32 2, i32 16384)
  store i32 %v5_11398, i32* %r0.global-to-local, align 4
  %v0_1139c = load i32, i32* @r6, align 4
  %v1_1139c = add i32 %v0_1139c, 24
  %v2_1139c = inttoptr i32 %v1_1139c to i32*
  %v3_1139c = load i32, i32* %v2_1139c, align 4
  store i32 %v3_1139c, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_113a4 = add i32 %v0_1139c, 12
  %v3_113a4 = inttoptr i32 %v2_113a4 to i32*
  store i32 5, i32* %v3_113a4, align 4
  br label %dec_label_pc_11748

dec_label_pc_113ac:                               ; preds = %dec_label_pc_1112c
  %v1_113ac = add i32 %v0_1112c, 24
  %v2_113ac = inttoptr i32 %v1_113ac to i32*
  %v3_113ac = load i32, i32* %v2_113ac, align 4
  store i32 %v3_113ac, i32* %ip.global-to-local, align 4
  %v1_113b0 = add i32 %v3_113ac, -1
  store i32 %v1_113b0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113b4 = icmp eq i32 %v1_113b0, 0
  store i1 %v2_113b4, i1* %cpsr_z.global-to-local, align 1
  %tmp1913 = icmp slt i32 %v1_113b0, 1
  br i1 %tmp1913, label %dec_label_pc_110b0.backedge.thread, label %dec_label_pc_113bc

dec_label_pc_113bc:                               ; preds = %dec_label_pc_113ac
  %v2_113bc = add i32 %v1_113b0, %v0_1112c
  store i32 %v2_113bc, i32* %r3.global-to-local, align 4
  %v1_113c0 = add i32 %v2_113bc, 28
  %v2_113c0 = inttoptr i32 %v1_113c0 to i8*
  %v3_113c0 = load i8, i8* %v2_113c0, align 1
  %v4_113c0 = zext i8 %v3_113c0 to i32
  store i32 %v4_113c0, i32* %r3.global-to-local, align 4
  %v2_113c4 = icmp ugt i8 %v3_113c0, 57
  store i1 %v2_113c4, i1* %cpsr_c.global-to-local, align 1
  %v7_113c4 = icmp eq i8 %v3_113c0, 58
  store i1 %v7_113c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113c4, label %dec_label_pc_11408, label %bb1914

bb1914:                                           ; preds = %dec_label_pc_113bc
  %v3_113c8 = icmp ugt i8 %v3_113c0, 61
  store i1 %v3_113c8, i1* %cpsr_c.global-to-local, align 1
  %v8_113c8 = icmp eq i8 %v3_113c0, 62
  store i1 %v8_113c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_113c8, label %dec_label_pc_11408, label %dec_label_pc_11400

dec_label_pc_113d4:                               ; preds = %dec_label_pc_11400
  %v2_113d4 = icmp ugt i32 %v0_113dc, 34
  store i1 %v2_113d4, i1* %cpsr_c.global-to-local, align 1
  %v7_113d4 = icmp eq i32 %v0_113dc, 35
  store i1 %v7_113d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113d4, label %dec_label_pc_11408, label %dec_label_pc_113dc

dec_label_pc_113dc:                               ; preds = %dec_label_pc_113d4
  %v2_113dc = icmp ugt i32 %v0_113dc, 36
  store i1 %v2_113dc, i1* %cpsr_c.global-to-local, align 1
  %v7_113dc = icmp eq i32 %v0_113dc, 37
  store i1 %v7_113dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113dc, label %dec_label_pc_11408, label %dec_label_pc_113e4

dec_label_pc_113e4:                               ; preds = %dec_label_pc_113dc
  %v1_113e4 = add i32 %v0_113e4, -1
  store i32 %v1_113e4, i32* %r0.global-to-local, align 4
  %v2_113e4 = icmp ne i32 %v0_113e4, 0
  store i1 %v2_113e4, i1* %cpsr_c.global-to-local, align 1
  %v7_113e4 = icmp eq i32 %v0_113e4, 1
  store i1 %v7_113e4, i1* %cpsr_z.global-to-local, align 1
  %v2_113e8 = add i32 %v1_113e4, %v0_1112c
  store i32 %v2_113e8, i32* %r3.global-to-local, align 4
  br i1 %v7_113e4, label %dec_label_pc_110b0.backedge.thread2099, label %dec_label_pc_113f0

dec_label_pc_113f0:                               ; preds = %dec_label_pc_113e4
  %v1_113f0 = add i32 %v2_113e8, 28
  %v2_113f0 = inttoptr i32 %v1_113f0 to i8*
  %v3_113f0 = load i8, i8* %v2_113f0, align 1
  %v4_113f0 = zext i8 %v3_113f0 to i32
  store i32 %v4_113f0, i32* %r3.global-to-local, align 4
  %v2_113f4 = icmp ugt i8 %v3_113f0, 61
  store i1 %v2_113f4, i1* %cpsr_c.global-to-local, align 1
  %v7_113f4 = icmp eq i8 %v3_113f0, 62
  store i1 %v7_113f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113f4, label %dec_label_pc_11408, label %bb1915

bb1915:                                           ; preds = %dec_label_pc_113f0
  %v3_113f8 = icmp ugt i8 %v3_113f0, 57
  store i1 %v3_113f8, i1* %cpsr_c.global-to-local, align 1
  %v8_113f8 = icmp eq i8 %v3_113f0, 58
  store i1 %v8_113f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_113f8, label %dec_label_pc_11408, label %dec_label_pc_11400

dec_label_pc_11400:                               ; preds = %bb1914, %bb1915
  %v0_113e4 = phi i32 [ %v1_113e4, %bb1915 ], [ %v1_113b0, %bb1914 ]
  %v0_113dc = phi i32 [ %v4_113f0, %bb1915 ], [ %v4_113c0, %bb1914 ]
  %v2_11400 = icmp ugt i32 %v0_113dc, 35
  store i1 %v2_11400, i1* %cpsr_c.global-to-local, align 1
  %v7_11400 = icmp eq i32 %v0_113dc, 36
  store i1 %v7_11400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11400, label %dec_label_pc_11408, label %dec_label_pc_113d4

dec_label_pc_11408:                               ; preds = %dec_label_pc_113f0, %dec_label_pc_11400, %bb1915, %dec_label_pc_113dc, %dec_label_pc_113d4, %dec_label_pc_113bc, %bb1914
  %v0_11408 = phi i32 [ %v1_113b0, %dec_label_pc_113bc ], [ %v1_113b0, %bb1914 ], [ %v1_113e4, %dec_label_pc_113f0 ], [ %v0_113e4, %dec_label_pc_11400 ], [ %v1_113e4, %bb1915 ], [ %v0_113e4, %dec_label_pc_113dc ], [ %v0_113e4, %dec_label_pc_113d4 ]
  %v1_11408 = add i32 %v0_11408, 1
  store i32 %v1_11408, i32* @r7, align 4
  %v2_1140c = icmp eq i32 %v1_11408, -1
  store i1 %v2_1140c, i1* %cpsr_c.global-to-local, align 1
  %v7_1140c = icmp eq i32 %v0_11408, -2
  store i1 %v7_1140c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1140c, label %dec_label_pc_110b0.backedge.thread2099, label %dec_label_pc_11414

dec_label_pc_11414:                               ; preds = %dec_label_pc_11408
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11414 = icmp eq i32 %v1_11408, 0
  store i1 %v2_11414, i1* %cpsr_z.global-to-local, align 1
  %tmp1916 = icmp slt i32 %v1_11408, 1
  br i1 %tmp1916, label %dec_label_pc_11234, label %dec_label_pc_1141c

dec_label_pc_1141c:                               ; preds = %dec_label_pc_11414
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_11420 = call i32 @function_11d20(i32 5)
  store i32 %v2_11020, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_11430 = call i32 @function_11c3c(i32 5, i32* %v2_11028)
  store i32 %v3_11430, i32* %r0.global-to-local, align 4
  %v3_11434 = load i8, i8* %stack_var_-56, align 1
  %v4_11434 = sext i8 %v3_11434 to i32
  store i32 %v4_11434, i32* %r2.global-to-local, align 4
  store i32 %v3_11430, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11440 = load i32, i32* @r6, align 4
  %v1_11440 = add i32 %v0_11440, 4
  %v2_11440 = inttoptr i32 %v1_11440 to i32*
  %v3_11440 = load i32, i32* %v2_11440, align 4
  store i32 %v3_11440, i32* %r0.global-to-local, align 4
  %v4_11444 = inttoptr i32 %v3_11430 to i32*
  %v5_11444 = call i32 @function_13450(i32 %v3_11440, i32* %v4_11444, i32 %v4_11434, i32 16384)
  store i32 %v5_11444, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15570.230 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11454 = load i32, i32* @r6, align 4
  %v1_11454 = add i32 %v0_11454, 4
  %v2_11454 = inttoptr i32 %v1_11454 to i32*
  %v3_11454 = load i32, i32* %v2_11454, align 4
  store i32 %v3_11454, i32* %r0.global-to-local, align 4
  %v5_11458 = call i32 @function_13450(i32 %v3_11454, i32* bitcast ([3 x i8]* @global_var_15570.230 to i32*), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_11460 = call i32 @function_11c68(i32 5)
  store i32 %v1_11460, i32* %r0.global-to-local, align 4
  %v0_11464 = load i32, i32* @r6, align 4
  %v1_11464 = add i32 %v0_11464, 24
  %v2_11464 = inttoptr i32 %v1_11464 to i32*
  %v3_11464 = load i32, i32* %v2_11464, align 4
  store i32 %v3_11464, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_1146c = add i32 %v0_11464, 12
  %v3_1146c = inttoptr i32 %v2_1146c to i32*
  store i32 6, i32* %v3_1146c, align 4
  br label %dec_label_pc_11748

dec_label_pc_11474:                               ; preds = %dec_label_pc_1112c
  %v1_11474 = add i32 %v0_1112c, 24
  %v2_11474 = inttoptr i32 %v1_11474 to i32*
  %v3_11474 = load i32, i32* %v2_11474, align 4
  store i32 %v3_11474, i32* %ip.global-to-local, align 4
  %v1_11478 = add i32 %v3_11474, -1
  store i32 %v1_11478, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1147c = icmp eq i32 %v1_11478, 0
  store i1 %v2_1147c, i1* %cpsr_z.global-to-local, align 1
  %tmp1917 = icmp slt i32 %v1_11478, 1
  br i1 %tmp1917, label %dec_label_pc_110b0.backedge.thread, label %dec_label_pc_11484

dec_label_pc_11484:                               ; preds = %dec_label_pc_11474
  %v2_11484 = add i32 %v1_11478, %v0_1112c
  store i32 %v2_11484, i32* %r3.global-to-local, align 4
  %v1_11488 = add i32 %v2_11484, 28
  %v2_11488 = inttoptr i32 %v1_11488 to i8*
  %v3_11488 = load i8, i8* %v2_11488, align 1
  %v4_11488 = zext i8 %v3_11488 to i32
  store i32 %v4_11488, i32* %r3.global-to-local, align 4
  %v2_1148c = icmp ugt i8 %v3_11488, 57
  store i1 %v2_1148c, i1* %cpsr_c.global-to-local, align 1
  %v7_1148c = icmp eq i8 %v3_11488, 58
  store i1 %v7_1148c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1148c, label %dec_label_pc_114d0, label %bb1918

bb1918:                                           ; preds = %dec_label_pc_11484
  %v3_11490 = icmp ugt i8 %v3_11488, 61
  store i1 %v3_11490, i1* %cpsr_c.global-to-local, align 1
  %v8_11490 = icmp eq i8 %v3_11488, 62
  store i1 %v8_11490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11490, label %dec_label_pc_114d0, label %dec_label_pc_114c8

dec_label_pc_1149c:                               ; preds = %dec_label_pc_114c8
  %v2_1149c = icmp ugt i32 %v0_114a4, 34
  store i1 %v2_1149c, i1* %cpsr_c.global-to-local, align 1
  %v7_1149c = icmp eq i32 %v0_114a4, 35
  store i1 %v7_1149c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1149c, label %dec_label_pc_114d0, label %dec_label_pc_114a4

dec_label_pc_114a4:                               ; preds = %dec_label_pc_1149c
  %v2_114a4 = icmp ugt i32 %v0_114a4, 36
  store i1 %v2_114a4, i1* %cpsr_c.global-to-local, align 1
  %v7_114a4 = icmp eq i32 %v0_114a4, 37
  store i1 %v7_114a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114a4, label %dec_label_pc_114d0, label %dec_label_pc_114ac

dec_label_pc_114ac:                               ; preds = %dec_label_pc_114a4
  %v1_114ac = add i32 %v0_114ac, -1
  store i32 %v1_114ac, i32* %r0.global-to-local, align 4
  %v2_114ac = icmp ne i32 %v0_114ac, 0
  store i1 %v2_114ac, i1* %cpsr_c.global-to-local, align 1
  %v7_114ac = icmp eq i32 %v0_114ac, 1
  store i1 %v7_114ac, i1* %cpsr_z.global-to-local, align 1
  %v2_114b0 = add i32 %v1_114ac, %v0_1112c
  store i32 %v2_114b0, i32* %r3.global-to-local, align 4
  br i1 %v7_114ac, label %dec_label_pc_110b0.backedge.thread2099, label %dec_label_pc_114b8

dec_label_pc_114b8:                               ; preds = %dec_label_pc_114ac
  %v1_114b8 = add i32 %v2_114b0, 28
  %v2_114b8 = inttoptr i32 %v1_114b8 to i8*
  %v3_114b8 = load i8, i8* %v2_114b8, align 1
  %v4_114b8 = zext i8 %v3_114b8 to i32
  store i32 %v4_114b8, i32* %r3.global-to-local, align 4
  %v2_114bc = icmp ugt i8 %v3_114b8, 61
  store i1 %v2_114bc, i1* %cpsr_c.global-to-local, align 1
  %v7_114bc = icmp eq i8 %v3_114b8, 62
  store i1 %v7_114bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114bc, label %dec_label_pc_114d0, label %bb1919

bb1919:                                           ; preds = %dec_label_pc_114b8
  %v3_114c0 = icmp ugt i8 %v3_114b8, 57
  store i1 %v3_114c0, i1* %cpsr_c.global-to-local, align 1
  %v8_114c0 = icmp eq i8 %v3_114b8, 58
  store i1 %v8_114c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_114c0, label %dec_label_pc_114d0, label %dec_label_pc_114c8

dec_label_pc_114c8:                               ; preds = %bb1918, %bb1919
  %v0_114ac = phi i32 [ %v1_114ac, %bb1919 ], [ %v1_11478, %bb1918 ]
  %v0_114a4 = phi i32 [ %v4_114b8, %bb1919 ], [ %v4_11488, %bb1918 ]
  %v2_114c8 = icmp ugt i32 %v0_114a4, 35
  store i1 %v2_114c8, i1* %cpsr_c.global-to-local, align 1
  %v7_114c8 = icmp eq i32 %v0_114a4, 36
  store i1 %v7_114c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114c8, label %dec_label_pc_114d0, label %dec_label_pc_1149c

dec_label_pc_114d0:                               ; preds = %dec_label_pc_114b8, %dec_label_pc_114c8, %bb1919, %dec_label_pc_114a4, %dec_label_pc_1149c, %dec_label_pc_11484, %bb1918
  %v0_114d0 = phi i32 [ %v1_11478, %dec_label_pc_11484 ], [ %v1_11478, %bb1918 ], [ %v1_114ac, %dec_label_pc_114b8 ], [ %v0_114ac, %dec_label_pc_114c8 ], [ %v1_114ac, %bb1919 ], [ %v0_114ac, %dec_label_pc_114a4 ], [ %v0_114ac, %dec_label_pc_1149c ]
  %v1_114d0 = add i32 %v0_114d0, 1
  store i32 %v1_114d0, i32* @r7, align 4
  %v2_114d4 = icmp eq i32 %v1_114d0, -1
  store i1 %v2_114d4, i1* %cpsr_c.global-to-local, align 1
  %v7_114d4 = icmp eq i32 %v0_114d0, -2
  store i1 %v7_114d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114d4, label %dec_label_pc_110b0.backedge.thread2099, label %dec_label_pc_114dc

dec_label_pc_114dc:                               ; preds = %dec_label_pc_114d0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_114dc = icmp eq i32 %v1_114d0, 0
  store i1 %v2_114dc, i1* %cpsr_z.global-to-local, align 1
  %tmp1920 = icmp slt i32 %v1_114d0, 1
  br i1 %tmp1920, label %dec_label_pc_11234, label %dec_label_pc_114e4

dec_label_pc_114e4:                               ; preds = %dec_label_pc_114dc
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_114e8 = call i32 @function_11d20(i32 6)
  store i32 %v2_114f0, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_114f8 = call i32 @function_11c3c(i32 6, i32* nonnull %stack_var_-48)
  store i32 %v3_114f8, i32* %r0.global-to-local, align 4
  %v3_114fc = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_114fc, i32* %r2.global-to-local, align 4
  store i32 %v3_114f8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11508 = load i32, i32* @r6, align 4
  %v1_11508 = add i32 %v0_11508, 4
  %v2_11508 = inttoptr i32 %v1_11508 to i32*
  %v3_11508 = load i32, i32* %v2_11508, align 4
  store i32 %v3_11508, i32* %r0.global-to-local, align 4
  %v4_1150c = inttoptr i32 %v3_114f8 to i32*
  %v5_1150c = call i32 @function_13450(i32 %v3_11508, i32* %v4_1150c, i32 %v3_114fc, i32 16384)
  store i32 %v5_1150c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15570.230 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1151c = load i32, i32* @r6, align 4
  %v1_1151c = add i32 %v0_1151c, 4
  %v2_1151c = inttoptr i32 %v1_1151c to i32*
  %v3_1151c = load i32, i32* %v2_1151c, align 4
  store i32 %v3_1151c, i32* %r0.global-to-local, align 4
  %v5_11520 = call i32 @function_13450(i32 %v3_1151c, i32* bitcast ([3 x i8]* @global_var_15570.230 to i32*), i32 2, i32 16384)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_11528 = call i32 @function_11c68(i32 6)
  store i32 %v1_11528, i32* %r0.global-to-local, align 4
  %v0_1152c = load i32, i32* @r6, align 4
  %v1_1152c = add i32 %v0_1152c, 24
  %v2_1152c = inttoptr i32 %v1_1152c to i32*
  %v3_1152c = load i32, i32* %v2_1152c, align 4
  store i32 %v3_1152c, i32* %ip.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v2_11534 = add i32 %v0_1152c, 12
  %v3_11534 = inttoptr i32 %v2_11534 to i32*
  store i32 7, i32* %v3_11534, align 4
  br label %dec_label_pc_11748

dec_label_pc_1153c:                               ; preds = %dec_label_pc_1112c
  %v1_1153c = add i32 %v0_1112c, 24
  %v2_1153c = inttoptr i32 %v1_1153c to i32*
  %v3_1153c = load i32, i32* %v2_1153c, align 4
  store i32 %v3_1153c, i32* %ip.global-to-local, align 4
  %v1_11540 = add i32 %v3_1153c, -1
  store i32 %v1_11540, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11544 = icmp eq i32 %v1_11540, 0
  store i1 %v2_11544, i1* %cpsr_z.global-to-local, align 1
  %tmp1921 = icmp slt i32 %v1_11540, 1
  br i1 %tmp1921, label %dec_label_pc_110b0.backedge.thread, label %dec_label_pc_1154c

dec_label_pc_1154c:                               ; preds = %dec_label_pc_1153c
  %v2_1154c = add i32 %v1_11540, %v0_1112c
  store i32 %v2_1154c, i32* %r3.global-to-local, align 4
  %v1_11550 = add i32 %v2_1154c, 28
  %v2_11550 = inttoptr i32 %v1_11550 to i8*
  %v3_11550 = load i8, i8* %v2_11550, align 1
  %v4_11550 = zext i8 %v3_11550 to i32
  store i32 %v4_11550, i32* %r3.global-to-local, align 4
  %v2_11554 = icmp ugt i8 %v3_11550, 61
  store i1 %v2_11554, i1* %cpsr_c.global-to-local, align 1
  %v7_11554 = icmp eq i8 %v3_11550, 62
  store i1 %v7_11554, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11554, label %dec_label_pc_11598, label %bb1922

bb1922:                                           ; preds = %dec_label_pc_1154c
  %v3_11558 = icmp ugt i8 %v3_11550, 57
  store i1 %v3_11558, i1* %cpsr_c.global-to-local, align 1
  %v8_11558 = icmp eq i8 %v3_11550, 58
  store i1 %v8_11558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11558, label %dec_label_pc_11598, label %dec_label_pc_11590

dec_label_pc_11564:                               ; preds = %dec_label_pc_11590
  %v2_11564 = icmp ugt i32 %v0_1156c, 34
  store i1 %v2_11564, i1* %cpsr_c.global-to-local, align 1
  %v7_11564 = icmp eq i32 %v0_1156c, 35
  store i1 %v7_11564, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11564, label %dec_label_pc_11598, label %dec_label_pc_1156c

dec_label_pc_1156c:                               ; preds = %dec_label_pc_11564
  %v2_1156c = icmp ugt i32 %v0_1156c, 36
  store i1 %v2_1156c, i1* %cpsr_c.global-to-local, align 1
  %v7_1156c = icmp eq i32 %v0_1156c, 37
  store i1 %v7_1156c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1156c, label %dec_label_pc_11598, label %dec_label_pc_11574

dec_label_pc_11574:                               ; preds = %dec_label_pc_1156c
  %v1_11574 = add i32 %v0_11574, -1
  store i32 %v1_11574, i32* %r0.global-to-local, align 4
  %v2_11574 = icmp ne i32 %v0_11574, 0
  store i1 %v2_11574, i1* %cpsr_c.global-to-local, align 1
  %v7_11574 = icmp eq i32 %v0_11574, 1
  store i1 %v7_11574, i1* %cpsr_z.global-to-local, align 1
  %v2_11578 = add i32 %v1_11574, %v0_1112c
  store i32 %v2_11578, i32* %r3.global-to-local, align 4
  br i1 %v7_11574, label %dec_label_pc_110b0.backedge.thread2099, label %dec_label_pc_11580

dec_label_pc_11580:                               ; preds = %dec_label_pc_11574
  %v1_11580 = add i32 %v2_11578, 28
  %v2_11580 = inttoptr i32 %v1_11580 to i8*
  %v3_11580 = load i8, i8* %v2_11580, align 1
  %v4_11580 = zext i8 %v3_11580 to i32
  store i32 %v4_11580, i32* %r3.global-to-local, align 4
  %v2_11584 = icmp ugt i8 %v3_11580, 61
  store i1 %v2_11584, i1* %cpsr_c.global-to-local, align 1
  %v7_11584 = icmp eq i8 %v3_11580, 62
  store i1 %v7_11584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11584, label %dec_label_pc_11598, label %bb1923

bb1923:                                           ; preds = %dec_label_pc_11580
  %v3_11588 = icmp ugt i8 %v3_11580, 57
  store i1 %v3_11588, i1* %cpsr_c.global-to-local, align 1
  %v8_11588 = icmp eq i8 %v3_11580, 58
  store i1 %v8_11588, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11588, label %dec_label_pc_11598, label %dec_label_pc_11590

dec_label_pc_11590:                               ; preds = %bb1922, %bb1923
  %v0_11574 = phi i32 [ %v1_11574, %bb1923 ], [ %v1_11540, %bb1922 ]
  %v0_1156c = phi i32 [ %v4_11580, %bb1923 ], [ %v4_11550, %bb1922 ]
  %v2_11590 = icmp ugt i32 %v0_1156c, 35
  store i1 %v2_11590, i1* %cpsr_c.global-to-local, align 1
  %v7_11590 = icmp eq i32 %v0_1156c, 36
  store i1 %v7_11590, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11590, label %dec_label_pc_11598, label %dec_label_pc_11564

dec_label_pc_11598:                               ; preds = %dec_label_pc_11580, %dec_label_pc_11590, %bb1923, %dec_label_pc_1156c, %dec_label_pc_11564, %dec_label_pc_1154c, %bb1922
  %v0_11598 = phi i32 [ %v1_11540, %dec_label_pc_1154c ], [ %v1_11540, %bb1922 ], [ %v1_11574, %dec_label_pc_11580 ], [ %v0_11574, %dec_label_pc_11590 ], [ %v1_11574, %bb1923 ], [ %v0_11574, %dec_label_pc_1156c ], [ %v0_11574, %dec_label_pc_11564 ]
  %v1_11598 = add i32 %v0_11598, 1
  store i32 %v1_11598, i32* @r7, align 4
  %v2_1159c = icmp eq i32 %v1_11598, -1
  store i1 %v2_1159c, i1* %cpsr_c.global-to-local, align 1
  %v7_1159c = icmp eq i32 %v0_11598, -2
  store i1 %v7_1159c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1159c, label %dec_label_pc_110b0.backedge.thread2099, label %dec_label_pc_115a4

dec_label_pc_115a4:                               ; preds = %dec_label_pc_11598
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_115a4 = icmp eq i32 %v1_11598, 0
  store i1 %v2_115a4, i1* %cpsr_z.global-to-local, align 1
  %tmp1924 = icmp slt i32 %v1_11598, 1
  br i1 %tmp1924, label %dec_label_pc_11234, label %dec_label_pc_115ac

dec_label_pc_115ac:                               ; preds = %dec_label_pc_115a4
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_115b0 = call i32 @function_11d20(i32 7)
  store i32 %v2_11020, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_115c0 = call i32 @function_11c3c(i32 7, i32* %v2_11028)
  store i32 %v3_115c0, i32* %r0.global-to-local, align 4
  %v3_115c4 = load i8, i8* %stack_var_-56, align 1
  %v4_115c4 = sext i8 %v3_115c4 to i32
  store i32 %v4_115c4, i32* %r2.global-to-local, align 4
  store i32 %v3_115c0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_115d0 = load i32, i32* @r6, align 4
  %v1_115d0 = add i32 %v0_115d0, 4
  %v2_115d0 = inttoptr i32 %v1_115d0 to i32*
  %v3_115d0 = load i32, i32* %v2_115d0, align 4
  store i32 %v3_115d0, i32* %r0.global-to-local, align 4
  %v4_115d4 = inttoptr i32 %v3_115c0 to i32*
  %v5_115d4 = call i32 @function_13450(i32 %v3_115d0, i32* %v4_115d4, i32 %v4_115c4, i32 16384)
  store i32 %v5_115d4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15570.230 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_115e4 = load i32, i32* @r6, align 4
  %v1_115e4 = add i32 %v0_115e4, 4
  %v2_115e4 = inttoptr i32 %v1_115e4 to i32*
  %v3_115e4 = load i32, i32* %v2_115e4, align 4
  store i32 %v3_115e4, i32* %r0.global-to-local, align 4
  %v5_115e8 = call i32 @function_13450(i32 %v3_115e4, i32* bitcast ([3 x i8]* @global_var_15570.230 to i32*), i32 2, i32 16384)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_115f0 = call i32 @function_11c68(i32 7)
  store i32 %v1_115f0, i32* %r0.global-to-local, align 4
  %v0_115f4 = load i32, i32* @r6, align 4
  %v1_115f4 = add i32 %v0_115f4, 24
  %v2_115f4 = inttoptr i32 %v1_115f4 to i32*
  %v3_115f4 = load i32, i32* %v2_115f4, align 4
  store i32 %v3_115f4, i32* %ip.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_115fc = add i32 %v0_115f4, 12
  %v3_115fc = inttoptr i32 %v2_115fc to i32*
  store i32 9, i32* %v3_115fc, align 4
  br label %dec_label_pc_11748

dec_label_pc_11604:                               ; preds = %dec_label_pc_1112c
  %v1_11604 = add i32 %v0_1112c, 24
  %v2_11604 = inttoptr i32 %v1_11604 to i32*
  %v3_11604 = load i32, i32* %v2_11604, align 4
  store i32 %v3_11604, i32* %ip.global-to-local, align 4
  %v1_11608 = add i32 %v3_11604, -1
  store i32 %v1_11608, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1160c = icmp eq i32 %v1_11608, 0
  store i1 %v2_1160c, i1* %cpsr_z.global-to-local, align 1
  %tmp1925 = icmp slt i32 %v1_11608, 1
  br i1 %tmp1925, label %dec_label_pc_110b0.backedge.thread, label %dec_label_pc_11614

dec_label_pc_11614:                               ; preds = %dec_label_pc_11604
  %v2_11614 = add i32 %v1_11608, %v0_1112c
  store i32 %v2_11614, i32* %r3.global-to-local, align 4
  %v1_11618 = add i32 %v2_11614, 28
  %v2_11618 = inttoptr i32 %v1_11618 to i8*
  %v3_11618 = load i8, i8* %v2_11618, align 1
  %v4_11618 = zext i8 %v3_11618 to i32
  store i32 %v4_11618, i32* %r3.global-to-local, align 4
  %v2_1161c = icmp ugt i8 %v3_11618, 57
  store i1 %v2_1161c, i1* %cpsr_c.global-to-local, align 1
  %v7_1161c = icmp eq i8 %v3_11618, 58
  store i1 %v7_1161c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1161c, label %dec_label_pc_11660, label %bb1926

bb1926:                                           ; preds = %dec_label_pc_11614
  %v3_11620 = icmp ugt i8 %v3_11618, 61
  store i1 %v3_11620, i1* %cpsr_c.global-to-local, align 1
  %v8_11620 = icmp eq i8 %v3_11618, 62
  store i1 %v8_11620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11620, label %dec_label_pc_11660, label %dec_label_pc_11658

dec_label_pc_1162c:                               ; preds = %dec_label_pc_11658
  %v2_1162c = icmp ugt i32 %v0_11634, 34
  store i1 %v2_1162c, i1* %cpsr_c.global-to-local, align 1
  %v7_1162c = icmp eq i32 %v0_11634, 35
  store i1 %v7_1162c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1162c, label %dec_label_pc_11660, label %dec_label_pc_11634

dec_label_pc_11634:                               ; preds = %dec_label_pc_1162c
  %v2_11634 = icmp ugt i32 %v0_11634, 36
  store i1 %v2_11634, i1* %cpsr_c.global-to-local, align 1
  %v7_11634 = icmp eq i32 %v0_11634, 37
  store i1 %v7_11634, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11634, label %dec_label_pc_11660, label %dec_label_pc_1163c

dec_label_pc_1163c:                               ; preds = %dec_label_pc_11634
  %v1_1163c = add i32 %v0_1163c, -1
  store i32 %v1_1163c, i32* %r0.global-to-local, align 4
  %v2_1163c = icmp ne i32 %v0_1163c, 0
  store i1 %v2_1163c, i1* %cpsr_c.global-to-local, align 1
  %v7_1163c = icmp eq i32 %v0_1163c, 1
  store i1 %v7_1163c, i1* %cpsr_z.global-to-local, align 1
  %v2_11640 = add i32 %v1_1163c, %v0_1112c
  store i32 %v2_11640, i32* %r3.global-to-local, align 4
  br i1 %v7_1163c, label %dec_label_pc_110b0.backedge.thread2099, label %dec_label_pc_11648

dec_label_pc_11648:                               ; preds = %dec_label_pc_1163c
  %v1_11648 = add i32 %v2_11640, 28
  %v2_11648 = inttoptr i32 %v1_11648 to i8*
  %v3_11648 = load i8, i8* %v2_11648, align 1
  %v4_11648 = zext i8 %v3_11648 to i32
  store i32 %v4_11648, i32* %r3.global-to-local, align 4
  %v2_1164c = icmp ugt i8 %v3_11648, 61
  store i1 %v2_1164c, i1* %cpsr_c.global-to-local, align 1
  %v7_1164c = icmp eq i8 %v3_11648, 62
  store i1 %v7_1164c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1164c, label %dec_label_pc_11660, label %bb1927

bb1927:                                           ; preds = %dec_label_pc_11648
  %v3_11650 = icmp ugt i8 %v3_11648, 57
  store i1 %v3_11650, i1* %cpsr_c.global-to-local, align 1
  %v8_11650 = icmp eq i8 %v3_11648, 58
  store i1 %v8_11650, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11650, label %dec_label_pc_11660, label %dec_label_pc_11658

dec_label_pc_11658:                               ; preds = %bb1926, %bb1927
  %v0_1163c = phi i32 [ %v1_1163c, %bb1927 ], [ %v1_11608, %bb1926 ]
  %v0_11634 = phi i32 [ %v4_11648, %bb1927 ], [ %v4_11618, %bb1926 ]
  %v2_11658 = icmp ugt i32 %v0_11634, 35
  store i1 %v2_11658, i1* %cpsr_c.global-to-local, align 1
  %v7_11658 = icmp eq i32 %v0_11634, 36
  store i1 %v7_11658, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11658, label %dec_label_pc_11660, label %dec_label_pc_1162c

dec_label_pc_11660:                               ; preds = %dec_label_pc_11648, %dec_label_pc_11658, %bb1927, %dec_label_pc_11634, %dec_label_pc_1162c, %dec_label_pc_11614, %bb1926
  %v0_11660 = phi i32 [ %v1_11608, %dec_label_pc_11614 ], [ %v1_11608, %bb1926 ], [ %v1_1163c, %dec_label_pc_11648 ], [ %v0_1163c, %dec_label_pc_11658 ], [ %v1_1163c, %bb1927 ], [ %v0_1163c, %dec_label_pc_11634 ], [ %v0_1163c, %dec_label_pc_1162c ]
  %v1_11660 = add i32 %v0_11660, 1
  store i32 %v1_11660, i32* @r7, align 4
  %v2_11664 = icmp eq i32 %v1_11660, -1
  store i1 %v2_11664, i1* %cpsr_c.global-to-local, align 1
  %v7_11664 = icmp eq i32 %v0_11660, -2
  store i1 %v7_11664, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11664, label %dec_label_pc_110b0.backedge.thread2099, label %dec_label_pc_1166c

dec_label_pc_1166c:                               ; preds = %dec_label_pc_11660
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1166c = icmp eq i32 %v1_11660, 0
  store i1 %v2_1166c, i1* %cpsr_z.global-to-local, align 1
  %tmp1928 = icmp slt i32 %v1_11660, 1
  br i1 %tmp1928, label %dec_label_pc_11234, label %dec_label_pc_11674

dec_label_pc_11674:                               ; preds = %dec_label_pc_1166c
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_11678 = call i32 @function_11d20(i32 4)
  store i32 %v2_114f0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_11688 = call i32 @function_11c3c(i32 4, i32* nonnull %stack_var_-48)
  store i32 %v3_11688, i32* %r0.global-to-local, align 4
  %v3_1168c = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1168c, i32* %r2.global-to-local, align 4
  store i32 %v3_11688, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11698 = load i32, i32* @r6, align 4
  %v1_11698 = add i32 %v0_11698, 4
  %v2_11698 = inttoptr i32 %v1_11698 to i32*
  %v3_11698 = load i32, i32* %v2_11698, align 4
  store i32 %v3_11698, i32* %r0.global-to-local, align 4
  %v4_1169c = inttoptr i32 %v3_11688 to i32*
  %v5_1169c = call i32 @function_13450(i32 %v3_11698, i32* %v4_1169c, i32 %v3_1168c, i32 16384)
  store i32 %v5_1169c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15570.230 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_116ac = load i32, i32* @r6, align 4
  %v1_116ac = add i32 %v0_116ac, 4
  %v2_116ac = inttoptr i32 %v1_116ac to i32*
  %v3_116ac = load i32, i32* %v2_116ac, align 4
  store i32 %v3_116ac, i32* %r0.global-to-local, align 4
  %v5_116b0 = call i32 @function_13450(i32 %v3_116ac, i32* bitcast ([3 x i8]* @global_var_15570.230 to i32*), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_116b8 = call i32 @function_11c68(i32 4)
  store i32 %v1_116b8, i32* %r0.global-to-local, align 4
  %v0_116bc = load i32, i32* @r6, align 4
  %v1_116bc = add i32 %v0_116bc, 24
  %v2_116bc = inttoptr i32 %v1_116bc to i32*
  %v3_116bc = load i32, i32* %v2_116bc, align 4
  store i32 %v3_116bc, i32* %ip.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_116c4 = add i32 %v0_116bc, 12
  %v3_116c4 = inttoptr i32 %v2_116c4 to i32*
  store i32 8, i32* %v3_116c4, align 4
  br label %dec_label_pc_11748

dec_label_pc_116cc:                               ; preds = %dec_label_pc_1112c
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_116d0 = call i32 @function_11d20(i32 10)
  store i32 %v2_11020, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_116e0 = call i32 @function_11c3c(i32 10, i32* %v2_11028)
  %v3_116e4 = load i8, i8* %stack_var_-56, align 1
  %v4_116e4 = sext i8 %v3_116e4 to i32
  store i32 %v3_116e0, i32* %r2.global-to-local, align 4
  %v1_116ec = add nsw i32 %v4_116e4, -1
  store i32 %v1_116ec, i32* %r3.global-to-local, align 4
  %v0_116f0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_116f0, i32* %r0.global-to-local, align 4
  %v0_116f4 = load i32, i32* @r6, align 4
  %v1_116f4 = add i32 %v0_116f4, 24
  %v2_116f4 = inttoptr i32 %v1_116f4 to i32*
  %v3_116f4 = load i32, i32* %v2_116f4, align 4
  store i32 %v3_116f4, i32* %r1.global-to-local, align 4
  %v4_116f8 = call i32 @function_123b0(i32 %v0_116f0, i32 %v3_116f4, i32 %v3_116e0, i32 %v1_116ec)
  %v2_116fc = icmp eq i32 %v4_116f8, -1
  store i1 %v2_116fc, i1* %cpsr_c.global-to-local, align 1
  %v7_116fc = icmp eq i32 %v4_116f8, -1
  store i1 %v7_116fc, i1* %cpsr_z.global-to-local, align 1
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_119e4 = call i32 @function_11c68(i32 10)
  br i1 %v7_116fc, label %dec_label_pc_119e0, label %dec_label_pc_11704

dec_label_pc_11704:                               ; preds = %dec_label_pc_116cc
  store i32 %v1_119e4, i32* %r0.global-to-local, align 4
  %v0_1170c = load i32, i32* @r6, align 4
  %v1_1170c = add i32 %v0_1170c, 4
  %v2_1170c = inttoptr i32 %v1_1170c to i32*
  %v3_1170c = load i32, i32* %v2_1170c, align 4
  store i32 %v3_1170c, i32* %r0.global-to-local, align 4
  %v1_11710 = call i32 @function_12bf0(i32 %v3_1170c)
  store i32 %v1_11710, i32* %r0.global-to-local, align 4
  %v0_11714 = load i32, i32* @r6, align 4
  %v1_11714 = add i32 %v0_11714, 284
  %v2_11714 = inttoptr i32 %v1_11714 to i8*
  %v3_11714 = load i8, i8* %v2_11714, align 1
  %v4_11714 = zext i8 %v3_11714 to i32
  %v1_11718 = add nuw nsw i32 %v4_11714, 1
  %v1_1171c = urem i32 %v1_11718, 256
  store i32 %v1_1171c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r4, align 4
  %v2_11724 = icmp ugt i32 %v1_1171c, 9
  store i1 %v2_11724, i1* %cpsr_c.global-to-local, align 1
  %v7_11724 = icmp eq i32 %v1_1171c, 10
  store i1 %v7_11724, i1* %cpsr_z.global-to-local, align 1
  %v2_11728 = add i32 %v0_11714, 4
  %v3_11728 = inttoptr i32 %v2_11728 to i32*
  store i32 -1, i32* %v3_11728, align 4
  %v0_1172c = load i32, i32* %r3.global-to-local, align 4
  %v1_1172c = trunc i32 %v0_1172c to i8
  %v2_1172c = load i32, i32* @r6, align 4
  %v3_1172c = add i32 %v2_1172c, 284
  %v4_1172c = inttoptr i32 %v3_1172c to i8*
  store i8 %v1_1172c, i8* %v4_1172c, align 1
  %v0_11730 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11730, label %dec_label_pc_11734, label %dec_label_pc_11974

dec_label_pc_11734:                               ; preds = %dec_label_pc_11704
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11738 = load i32, i32* @r6, align 4
  %v1_11738 = add i32 %v0_11738, 24
  %v2_11738 = inttoptr i32 %v1_11738 to i32*
  %v3_11738 = load i32, i32* %v2_11738, align 4
  store i32 %v3_11738, i32* %ip.global-to-local, align 4
  %v2_1173c = add i32 %v0_11738, 12
  %v3_1173c = inttoptr i32 %v2_1173c to i32*
  store i32 0, i32* %v3_1173c, align 4
  %v0_11740 = load i32, i32* %r3.global-to-local, align 4
  %v1_11740 = trunc i32 %v0_11740 to i8
  %v2_11740 = load i32, i32* @r6, align 4
  %v3_11740 = add i32 %v2_11740, 284
  %v4_11740 = inttoptr i32 %v3_11740 to i8*
  store i8 %v1_11740, i8* %v4_11740, align 1
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_11748

dec_label_pc_11748:                               ; preds = %.thread1149, %dec_label_pc_117dc, %dec_label_pc_11a7c, %dec_label_pc_11974, %dec_label_pc_11674, %dec_label_pc_115ac, %dec_label_pc_114e4, %dec_label_pc_1141c, %dec_label_pc_11370, %dec_label_pc_112c4, %dec_label_pc_1123c, %dec_label_pc_11734
  %v0_11748 = load i32, i32* @r7, align 4
  %v1_11748 = load i32, i32* %ip.global-to-local, align 4
  %v2_11748 = sub i32 %v0_11748, %v1_11748
  %v3_11748 = icmp uge i32 %v0_11748, %v1_11748
  store i1 %v3_11748, i1* %cpsr_c.global-to-local, align 1
  %v4_11748 = xor i32 %v1_11748, %v0_11748
  %v5_11748 = xor i32 %v2_11748, %v0_11748
  %v6_11748 = and i32 %v5_11748, %v4_11748
  %v7_11748 = icmp slt i32 %v6_11748, 0
  %v8_11748 = icmp slt i32 %v2_11748, 0
  %v9_11748 = icmp eq i32 %v0_11748, %v1_11748
  store i1 %v9_11748, i1* %cpsr_z.global-to-local, align 1
  %v2_1174c = xor i1 %v8_11748, %v7_11748
  %v0_11748.v1_11748 = select i1 %v2_1174c, i32 %v0_11748, i32 %v1_11748
  store i32 %v0_11748.v1_11748, i32* %r1.global-to-local, align 4
  %v2_11754 = sub i32 %v1_11748, %v0_11748.v1_11748
  store i32 %v2_11754, i32* @r2, align 4
  %v1_11758 = load i32, i32* @r6, align 4
  %v2_11758 = add i32 %v1_11758, 24
  %v3_11758 = inttoptr i32 %v2_11758 to i32*
  store i32 %v2_11754, i32* %v3_11758, align 4
  %v0_1175c = load i32, i32* %r8.global-to-local, align 4
  %v1_1175c = load i32, i32* %r1.global-to-local, align 4
  %v2_1175c = add i32 %v1_1175c, %v0_1175c
  store i32 %v2_1175c, i32* @r1, align 4
  store i32 %v0_1175c, i32* @r0, align 4
  %v3_11764 = call i32 @function_13220(i32 %v0_1175c, i32 %v2_1175c, i32 %v2_11754)
  store i32 %v3_11764, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1112c

dec_label_pc_1176c:                               ; preds = %dec_label_pc_1112c
  %v1_1176c = add i32 %v0_1112c, 24
  %v2_1176c = inttoptr i32 %v1_1176c to i32*
  %v3_1176c = load i32, i32* %v2_1176c, align 4
  store i32 %v3_1176c, i32* %ip.global-to-local, align 4
  %v1_11770 = add i32 %v3_1176c, -1
  store i32 %v1_11770, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11774 = icmp eq i32 %v1_11770, 0
  store i1 %v2_11774, i1* %cpsr_z.global-to-local, align 1
  %tmp1931 = icmp slt i32 %v1_11770, 1
  br i1 %tmp1931, label %dec_label_pc_110b0.backedge.thread, label %dec_label_pc_1177c

dec_label_pc_1177c:                               ; preds = %dec_label_pc_1176c
  %v2_1177c = add i32 %v1_11770, %v0_1112c
  store i32 %v2_1177c, i32* %r3.global-to-local, align 4
  %v1_11780 = add i32 %v2_1177c, 28
  %v2_11780 = inttoptr i32 %v1_11780 to i8*
  %v3_11780 = load i8, i8* %v2_11780, align 1
  %v4_11780 = zext i8 %v3_11780 to i32
  store i32 %v4_11780, i32* %r3.global-to-local, align 4
  %v2_11784 = icmp ugt i8 %v3_11780, 61
  store i1 %v2_11784, i1* %cpsr_c.global-to-local, align 1
  %v7_11784 = icmp eq i8 %v3_11780, 62
  store i1 %v7_11784, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11784, label %dec_label_pc_117c8, label %bb1932

bb1932:                                           ; preds = %dec_label_pc_1177c
  %v3_11788 = icmp ugt i8 %v3_11780, 57
  store i1 %v3_11788, i1* %cpsr_c.global-to-local, align 1
  %v8_11788 = icmp eq i8 %v3_11780, 58
  store i1 %v8_11788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11788, label %dec_label_pc_117c8, label %dec_label_pc_117c0

dec_label_pc_11794:                               ; preds = %dec_label_pc_117c0
  %v2_11794 = icmp ugt i32 %v0_1179c, 34
  store i1 %v2_11794, i1* %cpsr_c.global-to-local, align 1
  %v7_11794 = icmp eq i32 %v0_1179c, 35
  store i1 %v7_11794, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11794, label %dec_label_pc_117c8, label %dec_label_pc_1179c

dec_label_pc_1179c:                               ; preds = %dec_label_pc_11794
  %v2_1179c = icmp ugt i32 %v0_1179c, 36
  store i1 %v2_1179c, i1* %cpsr_c.global-to-local, align 1
  %v7_1179c = icmp eq i32 %v0_1179c, 37
  store i1 %v7_1179c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1179c, label %dec_label_pc_117c8, label %dec_label_pc_117a4

dec_label_pc_117a4:                               ; preds = %dec_label_pc_1179c
  %v1_117a4 = add i32 %v0_117a4, -1
  store i32 %v1_117a4, i32* %r0.global-to-local, align 4
  %v2_117a4 = icmp ne i32 %v0_117a4, 0
  store i1 %v2_117a4, i1* %cpsr_c.global-to-local, align 1
  %v7_117a4 = icmp eq i32 %v0_117a4, 1
  store i1 %v7_117a4, i1* %cpsr_z.global-to-local, align 1
  %v2_117a8 = add i32 %v1_117a4, %v0_1112c
  store i32 %v2_117a8, i32* %r3.global-to-local, align 4
  br i1 %v7_117a4, label %dec_label_pc_110b0.backedge.thread2099, label %dec_label_pc_117b0

dec_label_pc_117b0:                               ; preds = %dec_label_pc_117a4
  %v1_117b0 = add i32 %v2_117a8, 28
  %v2_117b0 = inttoptr i32 %v1_117b0 to i8*
  %v3_117b0 = load i8, i8* %v2_117b0, align 1
  %v4_117b0 = zext i8 %v3_117b0 to i32
  store i32 %v4_117b0, i32* %r3.global-to-local, align 4
  %v2_117b4 = icmp ugt i8 %v3_117b0, 61
  store i1 %v2_117b4, i1* %cpsr_c.global-to-local, align 1
  %v7_117b4 = icmp eq i8 %v3_117b0, 62
  store i1 %v7_117b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117b4, label %dec_label_pc_117c8, label %bb1933

bb1933:                                           ; preds = %dec_label_pc_117b0
  %v3_117b8 = icmp ugt i8 %v3_117b0, 57
  store i1 %v3_117b8, i1* %cpsr_c.global-to-local, align 1
  %v8_117b8 = icmp eq i8 %v3_117b0, 58
  store i1 %v8_117b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_117b8, label %dec_label_pc_117c8, label %dec_label_pc_117c0

dec_label_pc_117c0:                               ; preds = %bb1932, %bb1933
  %v0_117a4 = phi i32 [ %v1_117a4, %bb1933 ], [ %v1_11770, %bb1932 ]
  %v0_1179c = phi i32 [ %v4_117b0, %bb1933 ], [ %v4_11780, %bb1932 ]
  %v2_117c0 = icmp ugt i32 %v0_1179c, 35
  store i1 %v2_117c0, i1* %cpsr_c.global-to-local, align 1
  %v7_117c0 = icmp eq i32 %v0_1179c, 36
  store i1 %v7_117c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117c0, label %dec_label_pc_117c8, label %dec_label_pc_11794

dec_label_pc_117c8:                               ; preds = %dec_label_pc_117b0, %dec_label_pc_117c0, %bb1933, %dec_label_pc_1179c, %dec_label_pc_11794, %dec_label_pc_1177c, %bb1932
  %v0_117c8 = phi i32 [ %v1_11770, %dec_label_pc_1177c ], [ %v1_11770, %bb1932 ], [ %v1_117a4, %dec_label_pc_117b0 ], [ %v0_117a4, %dec_label_pc_117c0 ], [ %v1_117a4, %bb1933 ], [ %v0_117a4, %dec_label_pc_1179c ], [ %v0_117a4, %dec_label_pc_11794 ]
  %v1_117c8 = add i32 %v0_117c8, 1
  store i32 %v1_117c8, i32* @r7, align 4
  %v2_117cc = icmp eq i32 %v1_117c8, -1
  store i1 %v2_117cc, i1* %cpsr_c.global-to-local, align 1
  %v7_117cc = icmp eq i32 %v0_117c8, -2
  store i1 %v7_117cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117cc, label %dec_label_pc_110b0.backedge.thread2099, label %dec_label_pc_117d4

dec_label_pc_117d4:                               ; preds = %dec_label_pc_117c8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_117d4 = icmp eq i32 %v1_117c8, 0
  store i1 %v2_117d4, i1* %cpsr_z.global-to-local, align 1
  %tmp1934 = icmp slt i32 %v1_117c8, 1
  br i1 %tmp1934, label %dec_label_pc_11234, label %dec_label_pc_117dc

dec_label_pc_117dc:                               ; preds = %dec_label_pc_117d4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_117e0 = call i32 @function_11d20(i32 8)
  store i32 %v2_11020, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_117f0 = call i32 @function_11c3c(i32 8, i32* %v2_11028)
  store i32 %v3_117f0, i32* %r0.global-to-local, align 4
  %v3_117f4 = load i8, i8* %stack_var_-56, align 1
  %v4_117f4 = sext i8 %v3_117f4 to i32
  store i32 %v4_117f4, i32* %r2.global-to-local, align 4
  store i32 %v3_117f0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11800 = load i32, i32* @r6, align 4
  %v1_11800 = add i32 %v0_11800, 4
  %v2_11800 = inttoptr i32 %v1_11800 to i32*
  %v3_11800 = load i32, i32* %v2_11800, align 4
  store i32 %v3_11800, i32* %r0.global-to-local, align 4
  %v4_11804 = inttoptr i32 %v3_117f0 to i32*
  %v5_11804 = call i32 @function_13450(i32 %v3_11800, i32* %v4_11804, i32 %v4_117f4, i32 16384)
  store i32 %v5_11804, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15570.230 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11814 = load i32, i32* @r6, align 4
  %v1_11814 = add i32 %v0_11814, 4
  %v2_11814 = inttoptr i32 %v1_11814 to i32*
  %v3_11814 = load i32, i32* %v2_11814, align 4
  store i32 %v3_11814, i32* %r0.global-to-local, align 4
  %v5_11818 = call i32 @function_13450(i32 %v3_11814, i32* bitcast ([3 x i8]* @global_var_15570.230 to i32*), i32 2, i32 16384)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_11820 = call i32 @function_11c68(i32 8)
  store i32 %v1_11820, i32* %r0.global-to-local, align 4
  %v0_11824 = load i32, i32* @r6, align 4
  %v1_11824 = add i32 %v0_11824, 24
  %v2_11824 = inttoptr i32 %v1_11824 to i32*
  %v3_11824 = load i32, i32* %v2_11824, align 4
  store i32 %v3_11824, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v2_1182c = add i32 %v0_11824, 12
  %v3_1182c = inttoptr i32 %v2_1182c to i32*
  store i32 10, i32* %v3_1182c, align 4
  br label %dec_label_pc_11748

dec_label_pc_11834:                               ; preds = %dec_label_pc_111b4
  store i32 ptrtoint (i32* @global_var_15595.232 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_11840, i32* @r0, align 4
  %v3_11844 = call i32 @function_13210(i32 %v2_11840, i32 ptrtoint (i32* @global_var_15595.232 to i32), i32 3)
  store i32 9, i32* @r2, align 4
  store i32 %v2_11850, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1558c.234 to i32), i32* @r1, align 4
  %v3_11858 = call i32 @function_13210(i32 %v2_11850, i32 ptrtoint (i32* @global_var_1558c.234 to i32), i32 9)
  store i32 %v3_11858, i32* %r0.global-to-local, align 4
  %v0_1185c = load i32, i32* @r6, align 4
  %v1_1185c = add i32 %v0_1185c, 24
  %v2_1185c = inttoptr i32 %v1_1185c to i32*
  %v3_1185c = load i32, i32* %v2_1185c, align 4
  store i32 %v3_1185c, i32* %ip.global-to-local, align 4
  %v0_11860 = load i32, i32* @r5, align 4
  %v1_11860 = add i32 %v0_11860, 2
  store i32 %v1_11860, i32* %r2.global-to-local, align 4
  %v0_11864 = load i32, i32* %r8.global-to-local, align 4
  %v2_11864 = add i32 %v0_11864, %v3_1185c
  store i32 %v2_11864, i32* %r3.global-to-local, align 4
  %v3_11868 = icmp uge i32 %v2_11864, %v1_11860
  store i1 %v3_11868, i1* %cpsr_c.global-to-local, align 1
  %v9_11868 = icmp eq i32 %v2_11864, %v1_11860
  store i1 %v9_11868, i1* %cpsr_z.global-to-local, align 1
  %v2_1186c = xor i1 %v3_11868, true
  %v3_1186c = or i1 %v9_11868, %v2_1186c
  br i1 %v3_1186c, label %dec_label_pc_11834.dec_label_pc_11224.loopexit_crit_edge, label %dec_label_pc_11870

dec_label_pc_11834.dec_label_pc_11224.loopexit_crit_edge: ; preds = %dec_label_pc_11834
  %v0_11224.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11224

dec_label_pc_11870:                               ; preds = %dec_label_pc_11834
  %v0_11870 = load i32, i32* @r4, align 4
  %v1_11870 = add i32 %v0_11870, 1
  %v2_11870 = inttoptr i32 %v1_11870 to i8*
  %v3_11870 = load i8, i8* %v2_11870, align 1
  %v4_11870 = zext i8 %v3_11870 to i32
  store i32 %v4_11870, i32* %r3.global-to-local, align 4
  %v2_11874 = icmp ugt i8 %v3_11870, 30
  store i1 %v2_11874, i1* %cpsr_c.global-to-local, align 1
  %v7_11874 = icmp eq i8 %v3_11870, 31
  store i1 %v7_11874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11874, label %dec_label_pc_11948, label %dec_label_pc_1187c

dec_label_pc_1187c:                               ; preds = %dec_label_pc_11870
  %v1_1187c = add i32 %v0_11870, -1
  %v2_1187c = inttoptr i32 %v1_1187c to i8*
  %v3_1187c = load i8, i8* %v2_1187c, align 1
  %v4_1187c = zext i8 %v3_1187c to i32
  store i32 %v4_1187c, i32* %r3.global-to-local, align 4
  %v2_11880 = icmp ugt i8 %v3_1187c, -4
  store i1 %v2_11880, i1* %cpsr_c.global-to-local, align 1
  %v7_11880 = icmp eq i8 %v3_1187c, -3
  store i1 %v7_11880, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11880, label %bb1935, label %dec_label_pc_1188c

bb1935:                                           ; preds = %dec_label_pc_1187c
  %v1_11884 = load i32, i32* %sl.global-to-local, align 4
  %v2_11884 = trunc i32 %v1_11884 to i8
  store i8 %v2_11884, i8* %v2_1187c, align 1
  %v0_11888.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11888.pr, label %dec_label_pc_111c8, label %.dec_label_pc_1188c_crit_edge

.dec_label_pc_1188c_crit_edge:                    ; preds = %bb1935
  %v0_1188c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1188c

dec_label_pc_1188c:                               ; preds = %.dec_label_pc_1188c_crit_edge, %dec_label_pc_1187c
  %v0_1188c = phi i32 [ %v0_1188c.pre, %.dec_label_pc_1188c_crit_edge ], [ %v4_1187c, %dec_label_pc_1187c ]
  %v2_1188c = icmp ugt i32 %v0_1188c, 250
  store i1 %v2_1188c, i1* %cpsr_c.global-to-local, align 1
  %v7_1188c = icmp eq i32 %v0_1188c, 251
  store i1 %v7_1188c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1188c, label %bb1936, label %dec_label_pc_111c8

bb1936:                                           ; preds = %dec_label_pc_1188c
  %v1_11890 = load i32, i32* %sb.global-to-local, align 4
  %v2_11890 = trunc i32 %v1_11890 to i8
  %v3_11890 = load i32, i32* @r4, align 4
  %v4_11890 = add i32 %v3_11890, -1
  %v5_11890 = inttoptr i32 %v4_11890 to i8*
  store i8 %v2_11890, i8* %v5_11890, align 1
  br label %dec_label_pc_111c8

dec_label_pc_11898:                               ; preds = %dec_label_pc_11330, %dec_label_pc_11354, %dec_label_pc_11300
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_1189c = call i32 @function_11d20(i32 25)
  store i32 %v2_11020, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_118ac = call i32 @function_11c3c(i32 25, i32* %v2_11028)
  %v3_118b0 = load i8, i8* %stack_var_-56, align 1
  %v4_118b0 = sext i8 %v3_118b0 to i32
  store i32 %v3_118ac, i32* %r2.global-to-local, align 4
  %v1_118b8 = add nsw i32 %v4_118b0, -1
  store i32 %v1_118b8, i32* %r3.global-to-local, align 4
  %v0_118bc = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_118bc, i32* %r0.global-to-local, align 4
  %v0_118c0 = load i32, i32* @r6, align 4
  %v1_118c0 = add i32 %v0_118c0, 24
  %v2_118c0 = inttoptr i32 %v1_118c0 to i32*
  %v3_118c0 = load i32, i32* %v2_118c0, align 4
  store i32 %v3_118c0, i32* %r1.global-to-local, align 4
  %v4_118c4 = call i32 @function_123b0(i32 %v0_118bc, i32 %v3_118c0, i32 %v3_118ac, i32 %v1_118b8)
  store i32 %v4_118c4, i32* %r0.global-to-local, align 4
  %v1_118c8 = add i32 %v4_118c4, 1
  store i32 %v1_118c8, i32* @r7, align 4
  %v2_118c8 = icmp eq i32 %v4_118c4, -1
  store i1 %v2_118c8, i1* %cpsr_c.global-to-local, align 1
  %v7_118c8 = icmp eq i32 %v1_118c8, 0
  store i1 %v7_118c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_118c8, label %thread-pre-split688, label %bb1937

bb1937:                                           ; preds = %dec_label_pc_11898
  store i32 1, i32* @r7, align 4
  br label %thread-pre-split688

thread-pre-split688:                              ; preds = %dec_label_pc_11898, %bb1937
  %v0_118d0 = phi i1 [ false, %bb1937 ], [ true, %dec_label_pc_11898 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v0_118d0, i1* %cpsr_z.global-to-local, align 1
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_11c18 = call i32 @function_11c68(i32 25)
  store i32 %v1_11c18, i32* %r0.global-to-local, align 4
  br i1 %v0_118d0, label %dec_label_pc_11c14, label %dec_label_pc_118d8

dec_label_pc_118d8:                               ; preds = %thread-pre-split688
  %v0_118e0 = load i32, i32* @r7, align 4
  %v3_118e0 = icmp eq i32 %v0_118e0, -1
  store i1 %v3_118e0, i1* %cpsr_c.global-to-local, align 1
  %v8_118e0 = icmp eq i32 %v0_118e0, -1
  store i1 %v8_118e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_118e0, label %dec_label_pc_110ac.loopexit, label %dec_label_pc_11368

dec_label_pc_118ec:                               ; preds = %dec_label_pc_110c8
  br i1 %v2_110ec, label %dec_label_pc_11c30, label %dec_label_pc_118f0

dec_label_pc_118f0:                               ; preds = %dec_label_pc_118ec
  %v3_118f0 = icmp eq i32 %v5_110e8, -1
  store i1 %v3_118f0, i1* %cpsr_c.global-to-local, align 1
  %v8_118f0 = icmp eq i32 %v5_110e8, -1
  store i1 %v8_118f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_118f0, label %dec_label_pc_118f8, label %dec_label_pc_11114

dec_label_pc_118f8:                               ; preds = %dec_label_pc_118f0
  %v0_118f8 = load i32, i32* %fp.global-to-local, align 4
  %v1_118f8 = inttoptr i32 %v0_118f8 to i32*
  %v2_118f8 = load i32, i32* %v1_118f8, align 4
  store i32 %v2_118f8, i32* %r3.global-to-local, align 4
  %v2_118fc = icmp ugt i32 %v2_118f8, 10
  store i1 %v2_118fc, i1* %cpsr_c.global-to-local, align 1
  %v7_118fc = icmp eq i32 %v2_118f8, 11
  store i1 %v7_118fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_118fc, label %dec_label_pc_10ee4, label %dec_label_pc_11904

dec_label_pc_11904:                               ; preds = %dec_label_pc_118f8, %dec_label_pc_11c30
  %v0_11904 = load i32, i32* @r6, align 4
  %v1_11904 = add i32 %v0_11904, 4
  %v2_11904 = inttoptr i32 %v1_11904 to i32*
  %v3_11904 = load i32, i32* %v2_11904, align 4
  store i32 %v3_11904, i32* %r0.global-to-local, align 4
  %v1_11908 = call i32 @function_12bf0(i32 %v3_11904)
  store i32 %v1_11908, i32* %r0.global-to-local, align 4
  %v0_1190c = load i32, i32* @r6, align 4
  %v1_1190c = add i32 %v0_1190c, 284
  %v2_1190c = inttoptr i32 %v1_1190c to i8*
  %v3_1190c = load i8, i8* %v2_1190c, align 1
  %v4_1190c = zext i8 %v3_1190c to i32
  %v1_11910 = add nuw nsw i32 %v4_1190c, 1
  %v1_11914 = urem i32 %v1_11910, 256
  store i32 %v1_11914, i32* %r3.global-to-local, align 4
  %v2_11918 = icmp ugt i32 %v1_11914, 8
  store i1 %v2_11918, i1* %cpsr_c.global-to-local, align 1
  %v7_11918 = icmp eq i32 %v1_11914, 9
  store i1 %v7_11918, i1* %cpsr_z.global-to-local, align 1
  %v1_1191c = trunc i32 %v1_11910 to i8
  store i8 %v1_1191c, i8* %v2_1190c, align 1
  %v0_11920 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_11920 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_11920 = xor i1 %v1_11920, true
  %v3_11920 = and i1 %v0_11920, %v2_11920
  br i1 %v3_11920, label %bb1938, label %.thread1163

.thread1163:                                      ; preds = %dec_label_pc_11904
  store i32 -1, i32* @r4, align 4
  %v1_1192c11591164 = load i32, i32* @r6, align 4
  %v2_1192c11601165 = add i32 %v1_1192c11591164, 4
  %v3_1192c11611166 = inttoptr i32 %v2_1192c11601165 to i32*
  store i32 -1, i32* %v3_1192c11611166, align 4
  br label %bb1939

bb1938:                                           ; preds = %dec_label_pc_11904
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1192c1155 = load i32, i32* @r6, align 4
  %v2_1192c1156 = add i32 %v1_1192c1155, 4
  %v3_1192c1157 = inttoptr i32 %v2_1192c1156 to i32*
  store i32 -1, i32* %v3_1192c1157, align 4
  %v4_11930 = load i32, i32* %r2.global-to-local, align 4
  %v5_11930 = load i32, i32* @r6, align 4
  %v6_11930 = add i32 %v5_11930, 12
  %v7_11930 = inttoptr i32 %v6_11930 to i32*
  store i32 %v4_11930, i32* %v7_11930, align 4
  %v4_11934 = load i32, i32* %r3.global-to-local, align 4
  %v5_11934 = trunc i32 %v4_11934 to i8
  %v6_11934 = load i32, i32* @r6, align 4
  %v7_11934 = add i32 %v6_11934, 284
  %v8_11934 = inttoptr i32 %v7_11934 to i8*
  store i8 %v5_11934, i8* %v8_11934, align 1
  %v0_11938.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_11938.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb1939

bb1939:                                           ; preds = %.thread1163, %bb1938
  %v1_11938 = phi i1 [ %v1_11938.pre, %bb1938 ], [ %v1_11920, %.thread1163 ]
  %v0_11938 = phi i1 [ %v0_11938.pre, %bb1938 ], [ %v0_11920, %.thread1163 ]
  %v2_11938 = xor i1 %v1_11938, true
  %v3_11938 = and i1 %v0_11938, %v2_11938
  br i1 %v3_11938, label %dec_label_pc_10ee4, label %dec_label_pc_1193c

dec_label_pc_1193c:                               ; preds = %bb1939
  %v0_1193c = load i32, i32* @r6, align 4
  store i32 %v0_1193c, i32* @r0, align 4
  %v0_11940 = call i32 @function_ea30()
  store i32 %v0_11940, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10ee4

dec_label_pc_11948:                               ; preds = %dec_label_pc_11870
  store i32 %v2_11840, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_11958 = add i32 %v0_1185c, 4
  %v2_11958 = inttoptr i32 %v1_11958 to i32*
  %v3_11958 = load i32, i32* %v2_11958, align 4
  store i32 %v3_11958, i32* %r0.global-to-local, align 4
  %v5_1195c = call i32 @function_13450(i32 %v3_11958, i32* nonnull %stack_var_-41, i32 3, i32 16384)
  store i32 %v5_1195c, i32* %r0.global-to-local, align 4
  store i32 %v2_11848, i32* %r1.global-to-local, align 4
  %v0_11964 = load i32, i32* @r6, align 4
  %v1_11964 = add i32 %v0_11964, 4
  %v2_11964 = inttoptr i32 %v1_11964 to i32*
  %v3_11964 = load i32, i32* %v2_11964, align 4
  store i32 %v3_11964, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11204

dec_label_pc_11974:                               ; preds = %dec_label_pc_11704
  %v0_11974 = load i32, i32* @r6, align 4
  store i32 %v0_11974, i32* @r0, align 4
  %v0_11978 = call i32 @function_ea30()
  store i32 %v0_11978, i32* %r0.global-to-local, align 4
  %v0_1197c = load i32, i32* @r6, align 4
  %v1_1197c = add i32 %v0_1197c, 24
  %v2_1197c = inttoptr i32 %v1_1197c to i32*
  %v3_1197c = load i32, i32* %v2_1197c, align 4
  store i32 %v3_1197c, i32* %ip.global-to-local, align 4
  %v0_11980 = load i32, i32* @r4, align 4
  store i32 %v0_11980, i32* @r7, align 4
  br label %dec_label_pc_11748

dec_label_pc_11988:                               ; preds = %dec_label_pc_110b8
  store i32 %.pre, i32* @r0, align 4
  %v1_11990 = add i32 %v0_11988, 92
  store i32 %v1_11990, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_11998 = call i32 @function_13220(i32 %.pre, i32 %v1_11990, i32 192)
  store i32 %v3_11998, i32* %r0.global-to-local, align 4
  %v0_1199c = load i32, i32* @r6, align 4
  %v1_1199c = add i32 %v0_1199c, 24
  %v2_1199c = inttoptr i32 %v1_1199c to i32*
  %v3_1199c = load i32, i32* %v2_1199c, align 4
  store i32 %v3_1199c, i32* %r3.global-to-local, align 4
  %v1_119a0 = add i32 %v3_1199c, -64
  store i32 %v1_119a0, i32* %ip.global-to-local, align 4
  store i32 %v1_119a0, i32* %v2_1199c, align 4
  br label %dec_label_pc_110c8

dec_label_pc_119e0:                               ; preds = %dec_label_pc_116cc
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_119ec = call i32 @function_11d20(i32 9)
  store i32 %v2_11020, i32* %r1.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_119fc = call i32 @function_11c3c(i32 9, i32* nonnull %v2_11028)
  store i32 %v3_119fc, i32* %r0.global-to-local, align 4
  %v3_11a00 = load i8, i8* %stack_var_-56, align 1
  %v4_11a00 = sext i8 %v3_11a00 to i32
  store i32 %v3_119fc, i32* %r2.global-to-local, align 4
  %v1_11a08 = add nsw i32 %v4_11a00, -1
  store i32 %v1_11a08, i32* %r3.global-to-local, align 4
  %v0_11a0c = load i32, i32* @r6, align 4
  %v1_11a0c = add i32 %v0_11a0c, 24
  %v2_11a0c = inttoptr i32 %v1_11a0c to i32*
  %v3_11a0c = load i32, i32* %v2_11a0c, align 4
  store i32 %v3_11a0c, i32* %r1.global-to-local, align 4
  %v0_11a10 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11a10, i32* %r0.global-to-local, align 4
  %v4_11a14 = call i32 @function_123b0(i32 %v0_11a10, i32 %v3_11a0c, i32 %v3_119fc, i32 %v1_11a08)
  store i32 %v4_11a14, i32* @r7, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_11a20 = call i32 @function_11c68(i32 9)
  store i32 %v1_11a20, i32* %r0.global-to-local, align 4
  %v0_11a24 = load i32, i32* @r7, align 4
  %v2_11a24 = icmp eq i32 %v0_11a24, -1
  store i1 %v2_11a24, i1* %cpsr_c.global-to-local, align 1
  %v7_11a24 = icmp eq i32 %v0_11a24, -1
  store i1 %v7_11a24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a24, label %dec_label_pc_110ac.loopexit, label %dec_label_pc_11a2c

dec_label_pc_11a2c:                               ; preds = %dec_label_pc_119e0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11a2c = icmp eq i32 %v0_11a24, 0
  store i1 %v2_11a2c, i1* %cpsr_z.global-to-local, align 1
  %tmp1940 = icmp slt i32 %v0_11a24, 1
  br i1 %tmp1940, label %dec_label_pc_11234, label %dec_label_pc_11a34

dec_label_pc_11a34:                               ; preds = %dec_label_pc_11a2c
  %v0_11a34 = load i32, i32* @r6, align 4
  %v1_11a34 = add i32 %v0_11a34, 21
  %v2_11a34 = inttoptr i32 %v1_11a34 to i8*
  %v3_11a34 = load i8, i8* %v2_11a34, align 1
  %v4_11a34 = zext i8 %v3_11a34 to i32
  store i32 %v4_11a34, i32* %r3.global-to-local, align 4
  %v1_11a38 = add i32 %v0_11a34, 20
  %v2_11a38 = inttoptr i32 %v1_11a38 to i8*
  %v3_11a38 = load i8, i8* %v2_11a38, align 1
  %v4_11a38 = zext i8 %v3_11a38 to i32
  store i32 %v4_11a38, i32* %r2.global-to-local, align 4
  %v1_11a3c = add i32 %v0_11a34, 16
  %v2_11a3c = inttoptr i32 %v1_11a3c to i32*
  %v3_11a3c = load i32, i32* %v2_11a3c, align 4
  store i32 %v3_11a3c, i32* %r1.global-to-local, align 4
  %v4_11a40 = mul nuw nsw i32 %v4_11a34, 256
  %v5_11a40 = or i32 %v4_11a38, %v4_11a40
  store i32 %v5_11a40, i32* %r2.global-to-local, align 4
  %v1_11a44 = and i32 %v4_11a38, 128
  %v2_11a44 = icmp ne i32 %v1_11a44, 0
  store i1 %v2_11a44, i1* %cpsr_c.global-to-local, align 1
  store i32 %v4_11a34, i32* %r3.global-to-local, align 4
  store i32 %v3_11a3c, i32* %stack_var_-48, align 4
  store i32 %v5_11a40, i32* %stack_var_-38, align 4
  %v1_11a54 = inttoptr i32 %v0_11a34 to i32*
  %v2_11a54 = load i32, i32* %v1_11a54, align 4
  store i32 %v2_11a54, i32* %sl.global-to-local, align 4
  %v0_11a58 = call i32 @function_12c1c()
  store i32 %v0_11a58, i32* %r0.global-to-local, align 4
  %v7_11a5c = icmp eq i32 %v0_11a58, -1
  %.2014 = zext i1 %v7_11a5c to i32
  store i32 %.2014, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11a68 = icmp eq i32 %v0_11a58, 0
  store i1 %v2_11a68, i1* %cpsr_z.global-to-local, align 1
  %tmp1943 = icmp slt i32 %v0_11a58, 1
  br i1 %tmp1943, label %bb1944, label %.thread691

.thread691:                                       ; preds = %dec_label_pc_11a34
  store i32 1, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11a7c

bb1944:                                           ; preds = %dec_label_pc_11a34
  store i32 %.2014, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11a74 = icmp eq i1 %v7_11a5c, false
  store i1 %v2_11a74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11a74, label %dec_label_pc_11a9c, label %dec_label_pc_11a7c

dec_label_pc_11a7c:                               ; preds = %.thread691, %bb1944, %dec_label_pc_11b14
  %v0_11a7c = load i32, i32* @r6, align 4
  %v1_11a7c = add i32 %v0_11a7c, 4
  %v2_11a7c = inttoptr i32 %v1_11a7c to i32*
  %v3_11a7c = load i32, i32* %v2_11a7c, align 4
  store i32 %v3_11a7c, i32* %r0.global-to-local, align 4
  %v1_11a80 = call i32 @function_12bf0(i32 %v3_11a7c)
  store i32 %v1_11a80, i32* %r0.global-to-local, align 4
  %v0_11a84 = load i32, i32* @r6, align 4
  %v1_11a84 = add i32 %v0_11a84, 24
  %v2_11a84 = inttoptr i32 %v1_11a84 to i32*
  %v3_11a84 = load i32, i32* %v2_11a84, align 4
  store i32 %v3_11a84, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_11a90 = add i32 %v0_11a84, 4
  %v3_11a90 = inttoptr i32 %v2_11a90 to i32*
  store i32 -1, i32* %v3_11a90, align 4
  %v0_11a94 = load i32, i32* %r2.global-to-local, align 4
  %v1_11a94 = load i32, i32* @r6, align 4
  %v2_11a94 = add i32 %v1_11a94, 12
  %v3_11a94 = inttoptr i32 %v2_11a94 to i32*
  store i32 %v0_11a94, i32* %v3_11a94, align 4
  br label %dec_label_pc_11748

dec_label_pc_11a9c:                               ; preds = %bb1944
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_11aa8 = call i32 @function_134e0(i32 2, i32 1, i32 0)
  store i32 %v3_11aa8, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_11ab4 = call i32 @function_11d20(i32 2)
  store i32 2, i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_15468.74 to i32), i32* @r0, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v2_11ac8 = call i32 @function_132ec(i32 ptrtoint ([11 x i8]* @global_var_15468.74 to i32))
  %v0_11acc = load i32, i32* @r5, align 4
  store i32 %v0_11acc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_11ad8 = inttoptr i32 %v0_11acc to i32*
  %v3_11ad8 = call i32 @function_11c3c(i32 2, i32* %v2_11ad8)
  %v4_11ad8 = inttoptr i32 %v3_11ad8 to i8*
  store i32 %v3_11ad8, i32* %r0.global-to-local, align 4
  %v2_11adc = add i32 %v3_11ad8, 1
  %v3_11adc = inttoptr i32 %v2_11adc to i8*
  %v4_11adc = load i8, i8* %v3_11adc, align 1
  %v5_11adc = zext i8 %v4_11adc to i32
  store i32 %v5_11adc, i32* %r2.global-to-local, align 4
  %v3_11ae0 = load i8, i8* %v4_11ad8, align 1
  %v4_11ae0 = zext i8 %v3_11ae0 to i32
  %v4_11ae4 = mul nuw nsw i32 %v5_11adc, 256
  %v5_11ae4 = or i32 %v4_11ae0, %v4_11ae4
  store i32 %v5_11ae4, i32* %r3.global-to-local, align 4
  %v1_11ae8 = and i32 %v4_11ae0, 128
  %v2_11ae8 = icmp ne i32 %v1_11ae8, 0
  store i1 %v2_11ae8, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_11adc, i32* %r1.global-to-local, align 4
  %v0_11aec = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_11aec, i32* %r0.global-to-local, align 4
  %v1_11af8 = call i32 @function_11c68(i32 %v0_11aec)
  %v0_11afc = load i32, i32* @r4, align 4
  store i32 %v0_11afc, i32* %r0.global-to-local, align 4
  store i32 %v2_11b00, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_11b08 = call i32 @function_1333c(i32 %v0_11afc, %sockaddr* %v3_11b08, i32 16)
  store i32 %v4_11b08, i32* %r0.global-to-local, align 4
  %v2_11b0c = icmp eq i32 %v4_11b08, -1
  store i1 %v2_11b0c, i1* %cpsr_c.global-to-local, align 1
  %v7_11b0c = icmp eq i32 %v4_11b08, -1
  store i1 %v7_11b0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11b0c, label %dec_label_pc_11bf0, label %dec_label_pc_11b14

dec_label_pc_11b14:                               ; preds = %dec_label_pc_11a9c, %dec_label_pc_11bf0
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11b20 = load i32, i32* @r4, align 4
  store i32 %v0_11b20, i32* %r0.global-to-local, align 4
  store i32 %v2_11020, i32* %r1.global-to-local, align 4
  %v0_11b28 = load i32, i32* @r5, align 4
  %v6_11b28 = trunc i32 %v0_11b28 to i8
  store i8 %v6_11b28, i8* %stack_var_-56, align 1
  %v7_11b2c = call i32 @function_13450(i32 %v0_11b20, i32* %v2_11028, i32 1, i32 16384)
  %v0_11b34 = load i32, i32* @r4, align 4
  store i32 %v0_11b34, i32* %r0.global-to-local, align 4
  store i32 %v2_114f0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_11b44 = call i32 @function_13450(i32 %v0_11b34, i32* nonnull %stack_var_-48, i32 4, i32 16384)
  %v0_11b4c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_11b4c, i32* %r2.global-to-local, align 4
  %v0_11b50 = load i32, i32* @r4, align 4
  store i32 %v0_11b50, i32* %r0.global-to-local, align 4
  store i32 %v2_11b54, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_11b5c = call i32 @function_13450(i32 %v0_11b50, i32* nonnull %stack_var_-38, i32 %v0_11b4c, i32 16384)
  %v0_11b60 = load i32, i32* %sl.global-to-local, align 4
  %v1_11b60 = add i32 %v0_11b60, 12
  store i32 %v1_11b60, i32* %r1.global-to-local, align 4
  %v0_11b64 = load i32, i32* @r4, align 4
  store i32 %v0_11b64, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11b70 = inttoptr i32 %v1_11b60 to i32*
  %v5_11b70 = call i32 @function_13450(i32 %v0_11b64, i32* %v4_11b70, i32 1, i32 16384)
  store i32 %v5_11b70, i32* %r0.global-to-local, align 4
  %v0_11b74 = load i32, i32* %sl.global-to-local, align 4
  %v1_11b74 = inttoptr i32 %v0_11b74 to i32*
  %v2_11b74 = load i32, i32* %v1_11b74, align 4
  store i32 %v2_11b74, i32* %r1.global-to-local, align 4
  %v1_11b78 = add i32 %v0_11b74, 12
  %v2_11b78 = inttoptr i32 %v1_11b78 to i8*
  %v3_11b78 = load i8, i8* %v2_11b78, align 1
  %v4_11b78 = zext i8 %v3_11b78 to i32
  store i32 %v4_11b78, i32* %r2.global-to-local, align 4
  %v0_11b7c = load i32, i32* @r4, align 4
  store i32 %v0_11b7c, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11b84 = inttoptr i32 %v2_11b74 to i32*
  %v5_11b84 = call i32 @function_13450(i32 %v0_11b7c, i32* %v4_11b84, i32 %v4_11b78, i32 16384)
  %v0_11b88 = load i32, i32* %sl.global-to-local, align 4
  %v1_11b88 = add i32 %v0_11b88, 13
  store i32 %v1_11b88, i32* %r1.global-to-local, align 4
  %v0_11b8c = load i32, i32* @r4, align 4
  store i32 %v0_11b8c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11b98 = inttoptr i32 %v1_11b88 to i32*
  %v5_11b98 = call i32 @function_13450(i32 %v0_11b8c, i32* %v4_11b98, i32 1, i32 16384)
  %v0_11b9c = load i32, i32* @r4, align 4
  store i32 %v0_11b9c, i32* %r0.global-to-local, align 4
  %v0_11ba0 = load i32, i32* %sl.global-to-local, align 4
  %v1_11ba0 = add i32 %v0_11ba0, 13
  %v2_11ba0 = inttoptr i32 %v1_11ba0 to i8*
  %v3_11ba0 = load i8, i8* %v2_11ba0, align 1
  %v4_11ba0 = zext i8 %v3_11ba0 to i32
  store i32 %v4_11ba0, i32* %r2.global-to-local, align 4
  %v1_11ba4 = add i32 %v0_11ba0, 4
  %v2_11ba4 = inttoptr i32 %v1_11ba4 to i32*
  %v3_11ba4 = load i32, i32* %v2_11ba4, align 4
  store i32 %v3_11ba4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11bac = inttoptr i32 %v3_11ba4 to i32*
  %v5_11bac = call i32 @function_13450(i32 %v0_11b9c, i32* %v4_11bac, i32 %v4_11ba0, i32 16384)
  %v0_11bb0 = load i32, i32* @r4, align 4
  store i32 %v0_11bb0, i32* %r0.global-to-local, align 4
  %v1_11bb4 = call i32 @function_12bf0(i32 %v0_11bb0)
  store i32 %v1_11bb4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11a7c

dec_label_pc_11bbc:                               ; preds = %dec_label_pc_10fcc, %dec_label_pc_10f84
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11bc0

dec_label_pc_11bc0:                               ; preds = %dec_label_pc_10ff4, %dec_label_pc_11bbc
  %v0_11bc8 = phi i32 [ 0, %dec_label_pc_11bbc ], [ %v0_10ff4, %dec_label_pc_10ff4 ]
  %v0_11bc0 = load i32, i32* @r6, align 4
  %v1_11bc0 = add i32 %v0_11bc0, 4
  %v2_11bc0 = inttoptr i32 %v1_11bc0 to i32*
  %v3_11bc0 = load i32, i32* %v2_11bc0, align 4
  store i32 %v3_11bc0, i32* @r4, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_11bc8 = inttoptr i32 %v0_11bc0 to i32*
  store i32 %v0_11bc8, i32* %v2_11bc8, align 4
  %v0_11bcc = load i32, i32* %ip.global-to-local, align 4
  %v1_11bcc = load i32, i32* @r6, align 4
  %v2_11bcc = add i32 %v1_11bcc, 24
  %v3_11bcc = inttoptr i32 %v2_11bcc to i32*
  store i32 %v0_11bcc, i32* %v3_11bcc, align 4
  %v0_10ebc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10ebc

dec_label_pc_11bd4:                               ; preds = %dec_label_pc_10f44
  %v0_11bd4 = load i32, i32* @r6, align 4
  %v1_11bd4 = add i32 %v0_11bd4, 4
  %v2_11bd4 = inttoptr i32 %v1_11bd4 to i32*
  %v3_11bd4 = load i32, i32* %v2_11bd4, align 4
  store i32 %v3_11bd4, i32* %r0.global-to-local, align 4
  %v1_11bd8 = call i32 @function_12bf0(i32 %v3_11bd4)
  store i32 %v1_11bd8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v0_11be0 = load i32, i32* @r5, align 4
  %v1_11be0 = load i32, i32* @r6, align 4
  %v2_11be0 = add i32 %v1_11be0, 12
  %v3_11be0 = inttoptr i32 %v2_11be0 to i32*
  store i32 %v0_11be0, i32* %v3_11be0, align 4
  %v0_11be4 = load i32, i32* %r4.global-to-local, align 4
  %v1_11be4 = load i32, i32* @r6, align 4
  %v2_11be4 = add i32 %v1_11be4, 4
  %v3_11be4 = inttoptr i32 %v2_11be4 to i32*
  store i32 %v0_11be4, i32* %v3_11be4, align 4
  %v0_11be8 = load i32, i32* @r5, align 4
  %v1_11be8 = trunc i32 %v0_11be8 to i8
  %v2_11be8 = load i32, i32* @r6, align 4
  %v3_11be8 = add i32 %v2_11be8, 284
  %v4_11be8 = inttoptr i32 %v3_11be8 to i8*
  store i8 %v1_11be8, i8* %v4_11be8, align 1
  br label %dec_label_pc_10ee4

dec_label_pc_11bf0:                               ; preds = %dec_label_pc_11a9c
  %v0_11bf0 = load i32, i32* @r4, align 4
  store i32 %v0_11bf0, i32* %r0.global-to-local, align 4
  %v1_11bf4 = call i32 @function_12bf0(i32 %v0_11bf0)
  store i32 %v1_11bf4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11b14

dec_label_pc_11bfc:                               ; preds = %dec_label_pc_1106c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_11c00 = call i32 @function_11c68(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_11c08 = call i32 @function_11c68(i32 27)
  store i32 %v1_11c08, i32* %r0.global-to-local, align 4
  %v0_11c0c = load i32, i32* @r6, align 4
  %v1_11c0c = add i32 %v0_11c0c, 12
  %v2_11c0c = inttoptr i32 %v1_11c0c to i32*
  %v3_11c0c = load i32, i32* %v2_11c0c, align 4
  br label %dec_label_pc_110b0.backedge

dec_label_pc_110b0.backedge.thread:               ; preds = %dec_label_pc_113ac, %dec_label_pc_11474, %dec_label_pc_1153c, %dec_label_pc_11604, %dec_label_pc_1176c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_110b8

dec_label_pc_110b0.backedge.thread2099:           ; preds = %dec_label_pc_113e4, %dec_label_pc_114ac, %dec_label_pc_1163c, %dec_label_pc_11574, %dec_label_pc_117a4, %dec_label_pc_11408, %dec_label_pc_114d0, %dec_label_pc_11598, %dec_label_pc_11660, %dec_label_pc_117c8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_110b8

dec_label_pc_110b0.backedge:                      ; preds = %dec_label_pc_11bfc, %dec_label_pc_11c14
  %storemerge2102 = phi i32 [ %v3_11c1c, %dec_label_pc_11c14 ], [ %v3_11c0c, %dec_label_pc_11bfc ]
  %v0_110b0.be = phi i32 [ %v3_11c1c, %dec_label_pc_11c14 ], [ %v3_11c0c, %dec_label_pc_11bfc ]
  %v0_110b81035 = phi i32 [ %v0_11c1c, %dec_label_pc_11c14 ], [ %v0_11c0c, %dec_label_pc_11bfc ]
  store i32 %storemerge2102, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110b0 = icmp eq i32 %v0_110b0.be, 0
  store i1 %v2_110b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110b0, label %dec_label_pc_10ee4, label %dec_label_pc_110b8

dec_label_pc_11c14:                               ; preds = %thread-pre-split688
  %v0_11c1c = load i32, i32* @r6, align 4
  %v1_11c1c = add i32 %v0_11c1c, 12
  %v2_11c1c = inttoptr i32 %v1_11c1c to i32*
  %v3_11c1c = load i32, i32* %v2_11c1c, align 4
  br label %dec_label_pc_110b0.backedge

dec_label_pc_11c24:                               ; preds = %dec_label_pc_10e44, %dec_label_pc_10e28
  %v0_11c24 = load i32, i32* @r7, align 4
  %v1_11c24 = load i32, i32* @r4, align 4
  %v2_11c24 = add i32 %v1_11c24, 12
  %v3_11c24 = inttoptr i32 %v2_11c24 to i32*
  store i32 %v0_11c24, i32* %v3_11c24, align 4
  %v0_11c28 = load i32, i32* @r7, align 4
  %v1_11c28 = trunc i32 %v0_11c28 to i8
  %v2_11c28 = load i32, i32* @r4, align 4
  %v3_11c28 = add i32 %v2_11c28, 284
  %v4_11c28 = inttoptr i32 %v3_11c28 to i8*
  store i8 %v1_11c28, i8* %v4_11c28, align 1
  br label %bb1892

dec_label_pc_11c30:                               ; preds = %dec_label_pc_118ec
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_11c34 = load i32, i32* %fp.global-to-local, align 4
  %v2_11c34 = inttoptr i32 %v1_11c34 to i32*
  store i32 104, i32* %v2_11c34, align 4
  br label %dec_label_pc_11904

; uselistorder directives
  uselistorder i32 %v0_11c1c, { 1, 0 }
  uselistorder i32 %v3_11c0c, { 1, 0 }
  uselistorder i1 %v7_11b0c, { 1, 0 }
  uselistorder i32 %v4_11ae0, { 1, 0 }
  uselistorder i32 %v5_11adc, { 1, 0, 2 }
  uselistorder i1 %v2_11a74, { 1, 0 }
  uselistorder i32 %.2014, { 1, 0 }
  uselistorder i1 %v7_11a5c, { 1, 0 }
  uselistorder i32 %v0_11a58, { 2, 1, 0, 3 }
  uselistorder i32 %v4_11a38, { 1, 0, 2 }
  uselistorder i32 %v4_11a34, { 1, 0, 2 }
  uselistorder i1 %v7_11a24, { 1, 0 }
  uselistorder i32 %v0_11a24, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v3_11964, { 1, 0 }
  uselistorder i1 %v1_11920, { 1, 0 }
  uselistorder i32 %v1_11914, { 2, 1, 0 }
  uselistorder i32 %v1_11910, { 1, 0 }
  uselistorder i32 %v0_118e0, { 0, 2, 1 }
  uselistorder i1 %v0_118d0, { 1, 0 }
  uselistorder i32 %v4_118c4, { 1, 0, 2 }
  uselistorder i32 %v0_1185c, { 1, 2, 0 }
  uselistorder i1 %v7_117cc, { 1, 0 }
  uselistorder i32 %v1_117c8, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_1179c, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_117a4, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_117b8, { 1, 0 }
  uselistorder i32 %v1_117a4, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_11788, { 1, 0 }
  uselistorder i32 %v1_11770, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_1175c, { 1, 2, 0 }
  uselistorder i32 %v2_11748, { 1, 0 }
  uselistorder i32 %v1_11748, { 2, 1, 4, 0, 3, 5 }
  uselistorder i32 %v0_11748, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v1_1171c, { 2, 1, 0 }
  uselistorder i1 %v7_116fc, { 1, 0 }
  uselistorder i1 %v7_11664, { 1, 0 }
  uselistorder i32 %v1_11660, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_11634, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_1163c, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_11650, { 1, 0 }
  uselistorder i32 %v1_1163c, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_11620, { 1, 0 }
  uselistorder i32 %v1_11608, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i1 %v7_1159c, { 1, 0 }
  uselistorder i32 %v1_11598, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_1156c, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_11574, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_11588, { 1, 0 }
  uselistorder i32 %v1_11574, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_11558, { 1, 0 }
  uselistorder i32 %v1_11540, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i1 %v7_114d4, { 1, 0 }
  uselistorder i32 %v1_114d0, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_114a4, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_114ac, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_114c0, { 1, 0 }
  uselistorder i32 %v1_114ac, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_11490, { 1, 0 }
  uselistorder i32 %v1_11478, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i1 %v7_1140c, { 1, 0 }
  uselistorder i32 %v1_11408, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_113dc, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_113e4, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_113f8, { 1, 0 }
  uselistorder i32 %v1_113e4, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_113c8, { 1, 0 }
  uselistorder i32 %v1_113b0, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_11368, { 2, 1, 0 }
  uselistorder i1 %v7_11358, { 1, 0 }
  uselistorder i32 %v0_11328, { 2, 3, 1, 0 }
  uselistorder i32 %v0_11330, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v8_11344, { 1, 0 }
  uselistorder i32 %v1_11330, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_1131c, { 1, 0 }
  uselistorder i32 %v1_11304, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_112bc, { 2, 1, 0 }
  uselistorder i1 %v7_112a4, { 1, 0 }
  uselistorder i32 %v0_11274, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_1127c, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_11290, { 1, 0 }
  uselistorder i32 %v1_1127c, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_11260, { 1, 0 }
  uselistorder i32 %v1_11248, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_11234.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1121c, { 1, 0 }
  uselistorder i32 %v1_11218, { 1, 0 }
  uselistorder i32 %v1_11210, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_1120c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_1120c, { 0, 2, 1 }
  uselistorder i1 %v7_111b4, { 1, 0 }
  uselistorder i1 %v2_111a0, { 1, 0, 2 }
  uselistorder i1 %v2_11188, { 1, 0, 2 }
  uselistorder i32 %v1_111a8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_1117c, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v1_111a4, { 1, 0 }
  uselistorder i32 %v2_111ac, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v3_11164, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1112c, { 4, 5, 26, 6, 7, 24, 8, 9, 25, 10, 11, 23, 12, 13, 22, 14, 15, 21, 16, 17, 20, 3, 2, 18, 19, 27, 1, 0 }
  uselistorder i32 %v1_11108, { 1, 2, 3, 0 }
  uselistorder i32 %v3_11104, { 1, 0 }
  uselistorder i32 %v5_110e8, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v2_110d4, { 1, 0, 2 }
  uselistorder i32 %v3_110d0, { 1, 0, 2 }
  uselistorder i32 %v0_11988, { 1, 0, 2 }
  uselistorder i32 %v0_110a4, { 1, 0, 2 }
  uselistorder i1 %v7_11084, { 1, 0 }
  uselistorder i1 %v7_1105c, { 1, 0 }
  uselistorder i32 %v1_10fec, { 1, 0 }
  uselistorder i32 %v1_10fe8, { 3, 1, 0, 2 }
  uselistorder i32 %v0_10ff4, { 0, 2, 1, 3, 6, 5, 4 }
  uselistorder i32 %v3_10fb4, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_10fa8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10f34, { 2, 1, 0 }
  uselistorder i32 %v3_10f30, { 1, 0 }
  uselistorder i1 %v7_10f14, { 1, 0 }
  uselistorder i32 %v3_10f10, { 5, 4, 2, 1, 0, 6, 7, 3 }
  uselistorder i32 %v0_10efc, { 1, 0 }
  uselistorder i32 %v1_10ee8, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_10ed4, { 2, 1, 0 }
  uselistorder i32 %v3_10ed0, { 1, 0 }
  uselistorder i32 %v0_10ed4, { 1, 0 }
  uselistorder i32 %v1_10e74, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10e74, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10e4c, { 2, 1, 0 }
  uselistorder i32 %v1_10e48, { 1, 0 }
  uselistorder i32 %v0_10e18, { 0, 2, 1 }
  uselistorder i32 %v1_10e10, { 1, 0 }
  uselistorder i1 %v7_10dd8, { 0, 3, 1, 2 }
  uselistorder i1 %v2_10dd8, { 1, 2, 0 }
  uselistorder i32 %v2_10dd0, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v0_10dc8, { 1, 0 }
  uselistorder i32 %v1_10dac, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_10da0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10da0, { 0, 2, 1 }
  uselistorder i32 %v1_10d90, { 1, 0 }
  uselistorder i32 %v3_10df4, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %storemerge1248, { 1, 0, 2 }
  uselistorder i32 %v3_10cc8, { 1, 0 }
  uselistorder i32 %v1_10cac, { 1, 0 }
  uselistorder i32 %v1_10ca0, { 1, 2, 0 }
  uselistorder i32 %v0_10cb4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10c70, { 2, 1, 0, 3, 5, 4 }
  uselistorder i32 %v2_10c64, { 2, 1, 0 }
  uselistorder i32 %v1_10c40, { 3, 1, 0, 4, 2 }
  uselistorder i1 %v2_10c18, { 1, 0 }
  uselistorder i32 %v0_10bd0, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v0_10b98, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10b38, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10a90, { 1, 0 }
  uselistorder i32 %v5_10a58, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10a0c, { 1, 0 }
  uselistorder i1 %v7_109d4, { 2, 1, 0 }
  uselistorder i1 %v2_109c4, { 1, 0 }
  uselistorder i1 %v2_109a0, { 1, 0 }
  uselistorder i1 %v2_1097c, { 1, 0 }
  uselistorder i1 %v2_10938, { 1, 0 }
  uselistorder i1 %v2_10914, { 1, 0 }
  uselistorder i1 %v2_108e4, { 1, 0, 2 }
  uselistorder i1 %v2_108dc, { 1, 0 }
  uselistorder i1 %v2_108b8, { 1, 0 }
  uselistorder i1 %v2_1089c, { 1, 0 }
  uselistorder i1 %v2_10890, { 1, 0, 2 }
  uselistorder i1 %v2_10888, { 1, 0 }
  uselistorder i1 %v2_10844, { 1, 0, 2 }
  uselistorder i32 %.2007, { 0, 3, 1, 2 }
  uselistorder i32 %v4_10824, { 1, 0, 2 }
  uselistorder i1 %v2_1081c, { 1, 0, 2 }
  uselistorder i32 %.2006, { 2, 0, 1 }
  uselistorder i1 %v2_107b0, { 1, 0 }
  uselistorder i1 %v2_10780, { 1, 0, 2 }
  uselistorder i1 %v2_10760, { 1, 0, 2 }
  uselistorder i1 %v2_10740, { 1, 0 }
  uselistorder i1 %v2_10714, { 1, 0, 2 }
  uselistorder i1 %v2_1070c, { 1, 0 }
  uselistorder i1 %v7_10700, { 1, 0, 2, 3 }
  uselistorder i1 %v2_106e0, { 1, 0, 2 }
  uselistorder i1 %v2_106d8, { 1, 0 }
  uselistorder i1 %v2_106ac, { 1, 0, 2 }
  uselistorder i1 %v2_10684, { 1, 0, 2 }
  uselistorder i1 %v2_1067c, { 1, 0 }
  uselistorder i1 %v2_10650, { 1, 0, 2 }
  uselistorder i1 %v2_10648, { 1, 0 }
  uselistorder i1 %v2_10600, { 1, 0, 2 }
  uselistorder i1 %v2_105f8, { 1, 0 }
  uselistorder i1 %v2_105cc, { 1, 0, 2 }
  uselistorder i1 %v2_105c4, { 1, 0 }
  uselistorder i1 %v2_10598, { 1, 0, 2 }
  uselistorder i1 %v2_10590, { 1, 0 }
  uselistorder i1 %v2_10568, { 1, 0, 2 }
  uselistorder i1 %v2_10560, { 1, 0 }
  uselistorder i1 %v7_10540, { 1, 0, 2 }
  uselistorder i1 %v2_10538, { 1, 0 }
  uselistorder i1 %v7_1052c, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_1052c, { 2, 0, 1, 3 }
  uselistorder i1 %v2_10520, { 1, 0, 2 }
  uselistorder i1 %v2_10518, { 1, 0 }
  uselistorder i1 %v2_104ec, { 1, 0, 2 }
  uselistorder i1 %v2_104c4, { 1, 0, 2 }
  uselistorder i1 %v2_104bc, { 1, 0 }
  uselistorder i1 %v7_104b0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_10490, { 1, 0, 2 }
  uselistorder i1 %v2_10488, { 1, 0 }
  uselistorder i1 %v7_10464, { 1, 0, 2 }
  uselistorder i1 %v2_1045c, { 1, 0 }
  uselistorder i1 %v2_10438, { 1, 0 }
  uselistorder i32 %.2003, { 2, 0, 1 }
  uselistorder i1 %v7_10408, { 0, 3, 2, 1 }
  uselistorder i1 %v2_10400, { 1, 0 }
  uselistorder i1 %v2_103f4, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10 }
  uselistorder i32 %.2002, { 2, 1, 0 }
  uselistorder i1 %v7_103e0, { 1, 0, 2 }
  uselistorder i1 %v2_103c8, { 1, 0 }
  uselistorder i1 %v2_103a8, { 1, 0 }
  uselistorder i1 %v2_10364, { 1, 0 }
  uselistorder i1 %v2_1034c, { 1, 0 }
  uselistorder i1 %v2_10338, { 1, 0 }
  uselistorder i1 %v2_10320, { 1, 0 }
  uselistorder i1 %v2_102f4, { 1, 0, 2 }
  uselistorder i1 %v2_102c0, { 1, 0, 2 }
  uselistorder i1 %v2_102b8, { 1, 0 }
  uselistorder i1 %v2_10290, { 1, 0, 2 }
  uselistorder i32 %.2000, { 1, 0 }
  uselistorder i1 %v7_10278, { 0, 3, 2, 1 }
  uselistorder i1 %v2_1025c, { 1, 0, 2 }
  uselistorder i1 %v2_10234, { 1, 0, 2 }
  uselistorder i1 %v2_1021c, { 1, 0, 2 }
  uselistorder i1 %v2_10214, { 1, 0 }
  uselistorder i1 %v7_10208, { 4, 0, 3, 2, 1, 6, 5, 7, 8 }
  uselistorder i1 %v2_10208, { 5, 4, 3, 0, 2, 1, 6, 7 }
  uselistorder i1 %v2_101e8, { 1, 0, 2 }
  uselistorder i1 %v2_101e0, { 1, 0 }
  uselistorder i1 %v2_101b4, { 1, 0, 2 }
  uselistorder i1 %v2_101ac, { 1, 0 }
  uselistorder i1 %v2_10180, { 1, 0, 2 }
  uselistorder i1 %v2_10158, { 1, 0, 2 }
  uselistorder i1 %v2_10134, { 1, 0, 2 }
  uselistorder i1 %v2_1010c, { 1, 0, 2 }
  uselistorder i1 %v2_10104, { 1, 0 }
  uselistorder i1 %v2_100f0, { 1, 0 }
  uselistorder i1 %v7_100c8, { 0, 2, 1, 5, 4, 3 }
  uselistorder i1 %v2_100c8, { 2, 0, 1, 3 }
  uselistorder i1 %v7_100b4, { 1, 0, 2 }
  uselistorder i1 %v2_100ac, { 1, 0 }
  uselistorder i1 %v2_10080, { 1, 0 }
  uselistorder i1 %v7_1005c, { 1, 0, 2 }
  uselistorder i32 %.1998, { 2, 3, 8, 11, 7, 6, 10, 5, 4, 9, 0, 1 }
  uselistorder i1 %v7_10044, { 2, 1, 0, 3 }
  uselistorder i1 %v2_10024, { 1, 0, 2 }
  uselistorder i32 %.1997, { 4, 3, 6, 2, 1, 5, 7, 0 }
  uselistorder i1 %v7_10008, { 1, 0, 4, 3, 2 }
  uselistorder i1 %v2_ffe8, { 1, 0 }
  uselistorder i1 %v7_ffc4, { 1, 0, 2 }
  uselistorder i1 %v2_ffbc, { 1, 0 }
  uselistorder i1 %v2_ff90, { 1, 0, 2 }
  uselistorder i32 %.1996, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_ff78, { 0, 3, 2, 1 }
  uselistorder i1 %v2_ff5c, { 1, 0, 2 }
  uselistorder i32 %.1995, { 3, 2, 0, 1 }
  uselistorder i1 %v2_ff28, { 1, 0, 2 }
  uselistorder i1 %v2_ff20, { 1, 0 }
  uselistorder i1 %v2_fef0, { 1, 0 }
  uselistorder i1 %v7_fecc, { 1, 0, 2 }
  uselistorder i1 %v2_fec4, { 1, 0 }
  uselistorder i1 %v7_fea0, { 1, 0, 2 }
  uselistorder i1 %v2_fe98, { 1, 0 }
  uselistorder i1 %v2_fe70, { 1, 0, 2 }
  uselistorder i32 %.1994, { 1, 0 }
  uselistorder i1 %v7_fe58, { 0, 3, 2, 1 }
  uselistorder i32 %.1993, { 2, 0, 1 }
  uselistorder i1 %v7_fe28, { 0, 3, 2, 1 }
  uselistorder i1 %v2_fe1c, { 1, 0, 2 }
  uselistorder i1 %v2_fdf4, { 1, 0, 2 }
  uselistorder i1 %v2_fdec, { 1, 0 }
  uselistorder i1 %v2_fdc0, { 1, 0, 2 }
  uselistorder i1 %v2_fdb8, { 1, 0 }
  uselistorder i1 %v2_fd98, { 1, 0, 2 }
  uselistorder i1 %v2_fd90, { 1, 0 }
  uselistorder i1 %v2_fd44, { 1, 0, 2 }
  uselistorder i32 %.1992, { 1, 0 }
  uselistorder i1 %v7_fd1c, { 1, 0, 2 }
  uselistorder i1 %v2_fd14, { 1, 0 }
  uselistorder i1 %v2_fce0, { 1, 0 }
  uselistorder i32 %storemerge1225, { 2, 1, 0 }
  uselistorder i32 %.1991, { 6, 9, 5, 4, 8, 3, 2, 7, 0, 1 }
  uselistorder i1 %v7_fca8, { 1, 0, 2 }
  uselistorder i1 %v2_fca0, { 1, 0 }
  uselistorder i1 %v2_fc88, { 1, 0 }
  uselistorder i32 %storemerge1223, { 3, 0, 2, 1, 4 }
  uselistorder i1 %v7_fc5c, { 1, 0, 2 }
  uselistorder i32 %.1990, { 4, 6, 3, 5, 0, 1, 2 }
  uselistorder i32 %.1989, { 3, 5, 2, 4, 0, 1 }
  uselistorder i1 %v7_fc38, { 1, 0, 2 }
  uselistorder i1 %v2_fc2c, { 1, 0 }
  uselistorder i1 %v2_fc14, { 1, 0 }
  uselistorder i1 %v2_fc00, { 1, 0 }
  uselistorder i32 %.1988, { 0, 6, 4, 7, 1, 8, 3, 5, 2 }
  uselistorder i1 %v7_fbd4, { 1, 0, 4, 3, 2 }
  uselistorder i32 %.1987, { 7, 6, 11, 5, 4, 10, 3, 9, 2, 8, 0, 1 }
  uselistorder i1 %v7_fbb4, { 3, 2, 1, 0, 4 }
  uselistorder i32 %.1986, { 7, 6, 10, 5, 4, 9, 0, 3, 2, 8, 11, 12, 1 }
  uselistorder i1 %v7_fb40, { 2, 1, 0, 3 }
  uselistorder i1 %v7_fb24, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_fb24, { 1, 2, 0, 3 }
  uselistorder i1 %v2_fb04, { 1, 0, 2 }
  uselistorder i1 %v2_facc, { 1, 0, 2 }
  uselistorder i32 %.1985, { 4, 0, 2, 3, 1 }
  uselistorder i1 %v2_fa8c, { 1, 0, 2 }
  uselistorder i1 %v2_fa78, { 1, 0 }
  uselistorder i1 %v7_fa70, { 1, 0, 2, 3 }
  uselistorder i1 %v2_fa70, { 1, 0, 2 }
  uselistorder i1 %v2_fa48, { 1, 0, 2 }
  uselistorder i32 %.1983, { 2, 0, 1 }
  uselistorder i32 %v4_fa28, { 1, 0, 2 }
  uselistorder i1 %v2_fa20, { 1, 0, 2 }
  uselistorder i32 %.1982, { 2, 0, 1 }
  uselistorder i1 %v2_f9c4, { 1, 0, 2 }
  uselistorder i1 %v2_f9a4, { 1, 0, 2 }
  uselistorder i1 %v2_f97c, { 1, 0 }
  uselistorder i1 %v2_f974, { 1, 0, 2 }
  uselistorder i1 %v7_f94c, { 2, 1, 3, 0, 4, 5 }
  uselistorder i1 %v2_f94c, { 1, 2, 3, 0, 4 }
  uselistorder i1 %v2_f92c, { 1, 0, 2 }
  uselistorder i1 %v2_f924, { 1, 0, 2 }
  uselistorder i1 %v7_f910, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v2_f910, { 1, 2, 0, 3 }
  uselistorder i1 %v7_f8f4, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f8f4, { 1, 2, 0, 3 }
  uselistorder i1 %v7_f8d8, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f8d8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_f8c4, { 0, 3, 2, 1 }
  uselistorder i1 %v7_f888, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f888, { 1, 2, 0, 3 }
  uselistorder i1 %v2_f878, { 1, 0 }
  uselistorder i32 %v2_f850, { 1, 0 }
  uselistorder i32 %v0_f844, { 1, 4, 2, 3, 0 }
  uselistorder i32 %v0_107d0, { 0, 8, 5, 4, 7, 1, 6, 2, 3, 9 }
  uselistorder i32 %.1979, { 0, 2, 1 }
  uselistorder i1 %v2_f7c0, { 1, 0, 2 }
  uselistorder i32 %.1978, { 0, 4, 2, 3, 5, 6, 1 }
  uselistorder i1 %v2_f7a0, { 1, 0 }
  uselistorder i32 %v2_f778, { 1, 0 }
  uselistorder i32 %v1_f990, { 1, 0 }
  uselistorder i1 %v2_f764, { 1, 0, 2 }
  uselistorder i32 %v2_f750, { 1, 0 }
  uselistorder i32 %v2_f734, { 1, 0 }
  uselistorder i32 %v1_f750, { 2, 0, 1 }
  uselistorder i1 %v2_f720, { 1, 0, 2 }
  uselistorder i1 %v2_f710, { 1, 0 }
  uselistorder i1 %v7_f708, { 1, 0, 2, 3 }
  uselistorder i1 %v2_f708, { 1, 0, 2 }
  uselistorder i1 %v2_f6f4, { 1, 0, 2 }
  uselistorder i1 %v2_f6ec, { 1, 0 }
  uselistorder i32 %v2_f6c4, { 1, 0 }
  uselistorder i32 %v0_f6b8, { 1, 2, 0 }
  uselistorder i32 %v4_f698, { 1, 0, 2 }
  uselistorder i32 %.1974, { 5, 4, 9, 3, 2, 8, 1, 0, 7, 6, 10, 11 }
  uselistorder i1 %v7_f65c, { 2, 1, 0, 3 }
  uselistorder i32 %storemerge1205, { 0, 2, 1, 3 }
  uselistorder i32 %.1973, { 2, 3, 0, 1 }
  uselistorder i32 %v2_f61c, { 1, 0 }
  uselistorder i32 %v0_1080c, { 1, 0, 2 }
  uselistorder i1 %v7_f604, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f604, { 1, 2, 0, 3 }
  uselistorder i32 %v0_fbc0, { 0, 2, 1 }
  uselistorder i1 %v2_f5e0, { 1, 0, 2 }
  uselistorder i32 %.1972, { 3, 0, 4, 1, 2 }
  uselistorder i32 %.1971, { 1, 2, 3, 7, 0, 8, 4, 9, 5, 10, 6 }
  uselistorder i1 %v7_f5b8, { 0, 3, 2, 1 }
  uselistorder i32 %.1970, { 1, 3, 2, 0 }
  uselistorder i1 %v7_f59c, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f594, { 1, 0 }
  uselistorder i1 %v7_f588, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i1 %v2_f588, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32 %.1969, { 2, 1, 3, 0 }
  uselistorder i1 %v7_f568, { 0, 3, 2, 1 }
  uselistorder i32 %.1968, { 0, 2, 1 }
  uselistorder i32 %.1967, { 4, 0, 5, 1, 2, 3 }
  uselistorder i1 %v7_f51c, { 1, 0, 3, 2, 4, 5 }
  uselistorder i1 %v2_f51c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %.1966, { 2, 3, 0, 5, 4, 6, 1, 7 }
  uselistorder i1 %v7_f510, { 0, 3, 2, 1 }
  uselistorder i32 %.1965, { 2, 1, 3, 0 }
  uselistorder i1 %v7_f4f4, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_f4f4, { 1, 0, 2, 3 }
  uselistorder i32 %.1964, { 0, 3, 1, 4, 2 }
  uselistorder i1 %v7_f4d8, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_f4d8, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v2_f4d0, { 1, 0 }
  uselistorder i1 %v7_f4c4, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_f4c4, { 1, 0, 2, 3 }
  uselistorder i32 %.1963, { 2, 1, 3, 0 }
  uselistorder i32 %storemerge1192, { 2, 0, 1, 3 }
  uselistorder i32 %.1962, { 0, 5, 1, 4, 2, 3 }
  uselistorder i1 %v7_f488, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f488, { 1, 0, 2 }
  uselistorder i1 %v7_f478, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_f478, { 1, 0, 2, 3 }
  uselistorder i32 %.1961, { 0, 2, 1 }
  uselistorder i1 %v7_f46c, { 2, 1, 0 }
  uselistorder i1 %v7_f450, { 1, 0, 2, 3 }
  uselistorder i32 %.1960, { 1, 3, 2, 4, 0, 5 }
  uselistorder i1 %v7_f444, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f43c, { 1, 0 }
  uselistorder i1 %v2_f424, { 1, 0 }
  uselistorder i1 %v7_f3fc, { 1, 0, 2, 3 }
  uselistorder i32 %.1959, { 5, 9, 6, 10, 0, 11, 4, 7, 3, 8, 1, 2 }
  uselistorder i1 %v7_f3f0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %storemerge1187, { 0, 2, 1, 3 }
  uselistorder i32 %.1958, { 3, 6, 4, 0, 5, 1, 2 }
  uselistorder i1 %v2_f3b4, { 1, 0 }
  uselistorder i32 %storemerge1185, { 2, 1, 0, 3 }
  uselistorder i1 %v7_f388, { 0, 3, 2, 1 }
  uselistorder i32 %.1957, { 3, 4, 2, 5, 0, 1 }
  uselistorder i32 %.1956, { 0, 3, 1, 2 }
  uselistorder i32 %.1955, { 2, 3, 0, 1 }
  uselistorder i1 %v7_f348, { 2, 1, 0 }
  uselistorder i32 %.1954, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_f328, { 1, 0 }
  uselistorder i1 %v2_f314, { 1, 0 }
  uselistorder i1 %v2_f300, { 1, 0 }
  uselistorder i1 %v7_f2e0, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f2e0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_f2d8, { 1, 0 }
  uselistorder i1 %v2_f2c4, { 1, 0 }
  uselistorder i32 %.1952, { 3, 9, 0, 8, 7, 6, 1, 5, 4, 2 }
  uselistorder i1 %v7_f2a0, { 4, 3, 2, 1, 0, 7, 6, 5 }
  uselistorder i1 %v7_f284, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_f284, { 0, 2, 1, 3, 4 }
  uselistorder i32 %.1950, { 3, 8, 4, 7, 5, 6, 0, 1, 2 }
  uselistorder i1 %v7_f26c, { 2, 1, 0 }
  uselistorder i1 %v7_f258, { 2, 1, 0 }
  uselistorder i1 %v7_f244, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f244, { 1, 0, 2, 3 }
  uselistorder i32 %.1947, { 1, 0 }
  uselistorder i1 %v7_f224, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_f224, { 1, 0, 2, 3 }
  uselistorder i32 %.1946, { 6, 5, 3, 4, 0, 1, 2 }
  uselistorder i1 %v7_f218, { 0, 3, 2, 1 }
  uselistorder i32 %.1945, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v7_f200, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 %v1_f174, { 0, 193, 203, 192, 197, 198, 200, 199, 194, 195, 196, 202, 188, 189, 191, 190, 185, 186, 187, 204, 181, 182, 184, 183, 177, 178, 180, 179, 173, 174, 176, 175, 169, 170, 172, 171, 165, 166, 168, 167, 162, 163, 164, 201, 158, 159, 161, 160, 154, 155, 157, 156, 149, 148, 147, 146, 145, 144, 143, 142, 1, 141, 140, 139, 138, 151, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 2, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 152, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 3, 77, 76, 75, 74, 73, 72, 4, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 5, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 6, 43, 42, 7, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 150, 29, 28, 27, 26, 25, 24, 23, 22, 8, 153, 21, 20, 19, 18, 17, 16, 15, 14, 13, 9, 12, 11, 10 }
  uselistorder i32 %v1_f170, { 305, 306, 289, 290, 291, 292, 293, 294, 339, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 340, 307, 308, 309, 310, 311, 312, 338, 313, 314, 337, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 335, 285, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 269, 268, 288, 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 287, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 286, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v3_f164, { 11, 3, 4, 5, 2, 6, 7, 8, 9, 10, 0, 1 }
  uselistorder i32 %v1_f15c, { 187, 188, 168, 169, 170, 171, 172, 173, 174, 175, 177, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 197, 167, 166, 165, 164, 162, 163, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 150, 151, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 138, 139, 136, 137, 135, 134, 133, 132, 130, 131, 128, 129, 127, 126, 125, 124, 123, 122, 120, 121, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 84, 85, 82, 83, 80, 81, 79, 78, 76, 77, 75, 74, 73, 72, 71, 70, 68, 69, 67, 66, 64, 65, 62, 63, 61, 60, 59, 58, 56, 57, 54, 55, 53, 52, 50, 51, 48, 49, 46, 47, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_f158, { 4, 5, 0, 6, 1, 2, 3, 7 }
  uselistorder i32 %v4_f148, { 1, 0 }
  uselistorder i32 %v0_f138, { 0, 1, 3, 2 }
  uselistorder i32 %v2_f10c, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-2036.0, { 0, 3, 2, 1 }
  uselistorder i32 %v2_11b00, { 2, 1, 0 }
  uselistorder i32 %v2_114f0, { 1, 2, 3, 0 }
  uselistorder i32* %v2_11028, { 2, 1, 6, 3, 0, 4, 5, 7, 8 }
  uselistorder i32 %v2_11020, { 4, 3, 8, 5, 2, 6, 7, 9, 10, 1, 0 }
  uselistorder i32 %v2_11850, { 1, 2, 0 }
  uselistorder i32 %v2_10e00, { 0, 4, 1, 5, 2, 7, 3, 6 }
  uselistorder i32 %v2_f0fc, { 2, 3, 5, 6, 0, 1, 4, 7, 8 }
  uselistorder i32 %v4_ef20, { 1, 0 }
  uselistorder i32 %v1_ef20, { 2, 0, 1 }
  uselistorder i32 %v3_eee0, { 1, 0 }
  uselistorder i32 %v4_eec8, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_eebc, { 0, 2, 1 }
  uselistorder i32 %v0_ee60, { 0, 3, 1, 4, 2 }
  uselistorder i32 %v3_ee00, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ede8, { 0, 2, 1 }
  uselistorder i32 %v0_edd0, { 2, 1, 0 }
  uselistorder i32 %v0_edac, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %storemerge1250, { 1, 0 }
  uselistorder i32 %v0_ecb4, { 1, 2, 3, 0, 4 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-92, { 1, 2, 3, 0, 4 }
  uselistorder i32* %stack_var_-48, { 1, 4, 5, 3, 6, 2, 7, 0, 8, 9 }
  uselistorder i8* %stack_var_-56, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 9, 10, 5, 6 }
  uselistorder i32* %sb.global-to-local, { 0, 1, 2, 5, 6, 7, 8, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 3, 4, 7, 1, 6, 5, 2, 10, 8, 9, 11, 12, 14, 13 }
  uselistorder i32* %r5.global-to-local, { 4, 1, 2, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 67, 15, 16, 17, 38, 578, 39, 40, 41, 42, 564, 579, 580, 581, 582, 0, 1, 2, 3, 4, 5, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 591, 592, 593, 573, 574, 575, 576, 577, 583, 584, 585, 586, 587, 588, 589, 590, 43, 44, 45, 46, 47, 48, 594, 595, 49, 50, 51, 52, 53, 54, 55, 57, 59, 58, 56, 60, 61, 62, 63, 68, 64, 65, 66, 69, 550, 551, 70, 552, 553, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 94, 97, 96, 99, 98, 104, 100, 101, 102, 103, 106, 105, 123, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 126, 127, 130, 129, 221, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 326, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 431, 432, 434, 435, 446, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 463, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 473, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 474, 475, 476, 478, 486, 479, 480, 481, 482, 483, 484, 485, 488, 487, 499, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 503, 500, 501, 502, 504, 505, 506, 507, 508, 509, 512, 510, 511, 513, 514, 515, 516, 519, 517, 518, 520, 521, 522, 523, 525, 524, 526, 533, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549 }
  uselistorder i32* %r2.global-to-local, { 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 15, 16, 18, 120, 29, 30, 116, 121, 0, 1, 2, 19, 20, 22, 21, 23, 25, 24, 26, 28, 27, 113, 115, 114, 117, 119, 118, 125, 127, 126, 122, 123, 124, 31, 32, 33, 34, 35, 36, 37, 128, 129, 38, 39, 40, 41, 42, 44, 45, 130, 43, 46, 47, 48, 53, 49, 50, 51, 52, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112 }
  uselistorder i32* %r1.global-to-local, { 28, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 106, 107, 102, 103, 0, 1, 2, 44, 45, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 99, 100, 101, 104, 105, 108, 109, 56, 29, 30, 31, 110, 111, 112, 113, 32, 33, 34, 35, 37, 38, 39, 36, 40, 41, 42, 46, 43, 55, 47, 98, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 89, 95, 91, 92, 93, 94, 96, 97 }
  uselistorder i32* %r0.global-to-local, { 196, 195, 197, 12, 11, 76, 75, 14, 13, 15, 16, 17, 19, 18, 20, 21, 22, 23, 25, 24, 27, 26, 28, 29, 31, 30, 32, 34, 33, 35, 37, 36, 38, 77, 40, 189, 191, 190, 78, 80, 79, 171, 170, 173, 172, 174, 175, 192, 1, 0, 2, 4, 3, 6, 5, 7, 8, 10, 108, 42, 41, 43, 39, 44, 45, 46, 47, 49, 48, 51, 50, 53, 52, 54, 55, 56, 57, 59, 58, 61, 60, 63, 62, 64, 65, 66, 67, 69, 68, 71, 70, 73, 72, 74, 158, 159, 160, 162, 161, 164, 163, 166, 165, 167, 168, 169, 177, 176, 179, 178, 183, 180, 181, 182, 199, 198, 201, 200, 185, 184, 186, 187, 188, 194, 193, 83, 81, 203, 202, 204, 206, 205, 109, 207, 208, 209, 91, 156, 82, 85, 84, 86, 87, 88, 90, 89, 92, 97, 93, 94, 95, 96, 157, 99, 98, 9, 100, 101, 103, 102, 104, 106, 105, 107, 110, 111, 113, 112, 115, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 143, 146, 145, 147, 151, 148, 149, 150, 152, 153, 154, 155 }
  uselistorder i32* %ip.global-to-local, { 10, 11, 2, 12, 3, 42, 0, 1, 46, 4, 5, 7, 6, 9, 8, 39, 38, 40, 41, 45, 47, 43, 44, 13, 14, 15, 16, 18, 17, 19, 22, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_z.global-to-local, { 56, 764, 855, 843, 11, 12, 777, 14, 15, 16, 47, 46, 48, 49, 50, 797, 798, 799, 820, 821, 822, 823, 824, 0, 1, 7, 2, 3, 4, 5, 6, 8, 9, 10, 839, 17, 18, 19, 20, 21, 27, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 38, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 782, 44, 778, 779, 780, 781, 783, 784, 785, 786, 787, 793, 788, 789, 790, 791, 792, 794, 795, 796, 800, 801, 806, 802, 803, 804, 805, 807, 808, 809, 841, 810, 816, 811, 812, 813, 814, 815, 817, 818, 819, 840, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 856, 51, 52, 53, 54, 55, 857, 842, 13, 844, 845, 846, 57, 59, 58, 60, 61, 63, 65, 64, 858, 62, 66, 67, 68, 69, 70, 71, 76, 72, 73, 74, 75, 851, 850, 848, 77, 78, 79, 80, 849, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 776, 102, 103, 104, 105, 106, 107, 108, 109, 775, 110, 111, 112, 774, 113, 114, 115, 773, 116, 117, 118, 119, 120, 121, 772, 122, 123, 124, 771, 125, 126, 770, 127, 128, 129, 769, 130, 131, 132, 133, 768, 134, 135, 136, 854, 137, 138, 767, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 45, 154, 155, 156, 157, 766, 158, 159, 160, 161, 162, 765, 163, 164, 165, 166, 167, 168, 169, 763, 170, 171, 762, 172, 173, 174, 761, 175, 176, 760, 177, 178, 179, 759, 180, 181, 758, 182, 183, 184, 185, 186, 757, 187, 188, 189, 756, 190, 191, 755, 192, 193, 194, 754, 195, 196, 197, 198, 199, 753, 200, 201, 202, 752, 203, 204, 751, 205, 206, 207, 750, 208, 209, 749, 210, 211, 212, 748, 213, 214, 747, 215, 216, 217, 746, 218, 219, 220, 221, 745, 222, 223, 224, 225, 744, 226, 227, 743, 228, 229, 230, 231, 742, 232, 233, 234, 741, 235, 236, 740, 237, 238, 239, 739, 240, 241, 242, 243, 738, 244, 245, 246, 247, 737, 248, 249, 250, 251, 252, 736, 253, 254, 255, 256, 257, 735, 258, 259, 260, 734, 261, 262, 263, 264, 265, 266, 733, 267, 268, 732, 269, 270, 731, 271, 272, 730, 273, 274, 729, 275, 276, 277, 278, 728, 279, 280, 281, 727, 282, 283, 726, 284, 285, 286, 287, 288, 725, 289, 290, 291, 292, 293, 724, 294, 295, 296, 297, 298, 299, 300, 723, 301, 302, 722, 303, 304, 305, 721, 306, 307, 720, 308, 309, 310, 719, 311, 312, 718, 313, 314, 315, 316, 717, 317, 318, 319, 320, 716, 321, 322, 323, 324, 715, 325, 326, 327, 714, 328, 329, 713, 330, 331, 332, 333, 334, 335, 712, 336, 337, 711, 338, 339, 340, 710, 341, 342, 343, 344, 345, 709, 346, 347, 348, 349, 350, 708, 351, 352, 353, 707, 354, 355, 356, 357, 706, 358, 359, 705, 360, 361, 362, 363, 364, 704, 365, 366, 367, 368, 703, 369, 370, 371, 702, 372, 373, 701, 374, 375, 376, 700, 377, 378, 379, 380, 699, 381, 382, 383, 384, 698, 385, 386, 697, 387, 388, 389, 390, 391, 696, 392, 393, 394, 395, 396, 397, 398, 399, 695, 400, 401, 402, 694, 403, 404, 693, 405, 406, 407, 692, 408, 409, 410, 411, 691, 412, 413, 867, 414, 415, 416, 417, 418, 866, 419, 420, 421, 422, 423, 424, 865, 425, 426, 427, 428, 864, 429, 430, 431, 863, 432, 433, 862, 434, 435, 436, 437, 861, 438, 439, 860, 440, 441, 859, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 690, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 689, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 688, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 687, 522, 523, 524, 686, 525, 526, 527, 528, 853, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 685, 539, 540, 541, 684, 542, 543, 544, 545, 683, 546, 547, 548, 682, 549, 550, 551, 552, 681, 553, 554, 555, 680, 556, 557, 558, 679, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 852, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 678, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 677, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 676, 602, 603, 675, 604, 605, 606, 607, 608, 609, 610, 611, 674, 612, 613, 614, 615, 616, 617, 618, 673, 619, 620, 672, 621, 622, 671, 623, 624, 625, 670, 626, 627, 669, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 847, 668 }
  uselistorder i1* %cpsr_c.global-to-local, {}
  uselistorder i32 (i32)* @function_132ec, { 2, 1, 0, 3 }
  uselistorder i32 ptrtoint ([11 x i8]* @global_var_15468.74 to i32), { 0, 2, 1, 3 }
  uselistorder i8 31, { 8, 2, 3, 9, 10, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_15570.230 to i32*), { 4, 2, 3, 1, 0, 6, 5 }
  uselistorder [3 x i8]* @global_var_15570.230, { 1, 0 }
  uselistorder i8 58, { 9, 10, 6, 15, 7, 8, 5, 14, 4, 13, 2, 3, 0, 1, 11, 12 }
  uselistorder i8 57, { 9, 10, 6, 13, 7, 8, 5, 12, 4, 11, 2, 3, 0, 1 }
  uselistorder i8 62, { 12, 13, 9, 2, 10, 11, 8, 1, 7, 0, 5, 6, 3, 4 }
  uselistorder i8 61, { 12, 13, 9, 2, 10, 11, 8, 1, 7, 0, 5, 6, 3, 4 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_13450, { 2, 3, 4, 5, 6, 7, 8, 23, 0, 1, 9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 25, 26, 24, 15, 16, 17, 18, 27, 28, 29, 30 }
  uselistorder i8 -3, { 1, 2, 3, 0 }
  uselistorder i8 -4, { 1, 2, 3, 0 }
  uselistorder i32 (i32)* @function_11c68, { 9, 8, 37, 36, 13, 38, 35, 34, 33, 32, 14, 12, 11, 10, 7, 6, 5, 31, 30, 29, 39, 28, 27, 26, 25, 2, 1, 0, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 4, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @function_123b0, { 4, 2, 3, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_11c3c, { 1, 2, 23, 0, 3, 4, 5, 6, 22, 24, 25, 26, 7, 8, 9, 10, 30, 31, 32, 33, 34, 35, 36, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 29 }
  uselistorder i32 (i32)* @function_11d20, { 29, 28, 11, 30, 27, 26, 25, 24, 12, 9, 10, 8, 23, 22, 21, 20, 4, 3, 2, 1, 0, 19, 18, 17, 16, 15, 14, 13, 7, 6, 5 }
  uselistorder i8* @global_var_1dc1d.130, { 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_1dc1c.129 to i8*), { 4, 0, 3, 2, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_1dc1c.129 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_12e10, { 1, 0 }
  uselistorder i32 284, { 3, 4, 5, 6, 0, 1, 2, 7 }
  uselistorder i32 1712, { 1, 0 }
  uselistorder i32 1840, { 2, 0, 1 }
  uselistorder i32 ()* @function_ea30, { 3, 2, 1, 0 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 5888, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32, i32, i32)* @function_1347c, { 0, 1, 2, 7, 3, 4, 5, 6, 9, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @function_d114, { 9, 8, 7, 2, 6, 5, 4, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @function_d0b8, { 11, 10, 9, 3, 8, 7, 6, 5, 4, 1, 0, 2 }
  uselistorder i32 182, { 1, 0 }
  uselistorder i32 247, { 4, 0, 1, 2, 3 }
  uselistorder i32 200, { 1, 0 }
  uselistorder i32 186, { 1, 0, 2 }
  uselistorder i32 135, { 1, 0, 2 }
  uselistorder i32 230, { 1, 0 }
  uselistorder i32 238, { 1, 0, 2 }
  uselistorder i32 219, { 1, 0, 2, 3 }
  uselistorder i32 239, { 5, 6, 4, 0, 1, 2, 3 }
  uselistorder i32 240, { 3, 2, 1, 0 }
  uselistorder i32 107, { 2, 0, 1, 3 }
  uselistorder i32 187, { 0, 1, 3, 2 }
  uselistorder i32 205, { 0, 2, 3, 1 }
  uselistorder i32 223, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 118, { 2, 0, 1 }
  uselistorder i32 220, { 1, 0 }
  uselistorder i32 211, { 0, 2, 1 }
  uselistorder i32 111, { 2, 3, 0, 1 }
  uselistorder i32 104, { 0, 2, 1, 3, 4 }
  uselistorder i32 41, { 3, 2, 4, 5, 6, 0, 1, 7, 8 }
  uselistorder i32 165, { 1, 0, 2 }
  uselistorder i32 252, { 2, 0, 1, 3 }
  uselistorder i32 251, { 6, 7, 8, 4, 9, 10, 5, 0, 1, 2, 3 }
  uselistorder i32 231, { 2, 0, 1 }
  uselistorder i32 142, { 0, 3, 4, 1, 5, 2, 6 }
  uselistorder i32 139, { 1, 0, 2 }
  uselistorder i32 138, { 1, 2, 0, 3, 4 }
  uselistorder i32 222, { 0, 2, 3, 4, 5, 6, 1, 7 }
  uselistorder i32 221, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 134, { 2, 0, 1, 3 }
  uselistorder i32 131, { 0, 2, 1, 3 }
  uselistorder i32 236, { 1, 2, 0, 3 }
  uselistorder i32 254, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 253, { 5, 6, 4, 0, 1, 2, 3 }
  uselistorder i32 208, { 2, 0, 3, 1 }
  uselistorder i32 119, { 0, 2, 3, 1 }
  uselistorder i32 234, { 1, 2, 0 }
  uselistorder i32 116, { 2, 0, 1 }
  uselistorder i32 206, { 0, 4, 1, 2, 5, 3 }
  uselistorder i32 207, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 203, { 2, 0, 1, 3 }
  uselistorder i32 166, { 3, 0, 1, 2 }
  uselistorder i32 163, { 2, 0, 1 }
  uselistorder i32 160, { 1, 0, 2 }
  uselistorder i32 216, { 1, 2, 0 }
  uselistorder i32 201, { 1, 0 }
  uselistorder i32 151, { 0, 2, 3, 1 }
  uselistorder i32 152, { 1, 0, 2 }
  uselistorder i32 190, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 184, { 2, 0, 1, 3 }
  uselistorder i32 183, { 2, 0, 1 }
  uselistorder i32 156, { 1, 0 }
  uselistorder i32 143, { 1, 2, 3, 0 }
  uselistorder i32 149, { 2, 0, 3, 1 }
  uselistorder i32 158, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 147, { 1, 0, 2 }
  uselistorder i32 153, { 1, 2, 0 }
  uselistorder i32 191, { 0, 2, 3, 1 }
  uselistorder i32 167, { 2, 3, 0, 4, 1 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 215, { 2, 0, 1, 3 }
  uselistorder i32 214, { 0, 2, 1, 3 }
  uselistorder i32 137, { 1, 2, 0, 3 }
  uselistorder i32 126, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_154dc.181 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_154d4.179 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_154cc.177 to i32), { 0, 8, 1, 9, 2, 10, 3, 11, 4, 5, 6, 12, 7, 13 }
  uselistorder i32 ptrtoint (i32* @global_var_154b0.171 to i32), { 0, 9, 1, 10, 2, 11, 3, 12, 4, 5, 6, 13, 7, 14, 8, 15 }
  uselistorder i32 ptrtoint (i32* @global_var_15488.163 to i32), { 0, 6, 1, 2, 3, 7, 4, 8, 5, 9 }
  uselistorder i32 (i32, i32, i32)* @function_eb04, { 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_15514.158 to i32), { 1, 6, 2, 7, 3, 8, 4, 9, 5, 10, 0, 11 }
  uselistorder i8* @global_var_1dc11.153, { 1, 0 }
  uselistorder i8* @global_var_1dc10.145, { 1, 0 }
  uselistorder i8** @global_var_1dbf0.140, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_1dbf0.140 to i32), { 6, 0, 5, 1, 4, 3, 2 }
  uselistorder i32 1024, { 1, 0 }
  uselistorder i32 1023, { 2, 0, 1 }
  uselistorder i32 65280, { 35, 0, 1, 2, 3, 4, 36, 19, 5, 37, 25, 20, 21, 26, 27, 28, 38, 39, 40, 6, 41, 7, 8, 29, 30, 31, 42, 43, 44, 9, 45, 10, 11, 46, 12, 47, 32, 33, 48, 13, 49, 50, 22, 51, 52, 14, 53, 54, 23, 55, 56, 15, 57, 24, 34, 58, 59, 16, 60, 61, 17, 18 }
  uselistorder i32 ()* @function_e7cc, { 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 16, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 6, 5, 4, 3, 15, 14, 13, 12, 11, 10, 9, 8, 7, 2, 1, 0 }
  uselistorder i32 2048, { 6, 5, 0, 1, 2, 7, 3, 8, 9, 4, 10 }
  uselistorder i32* @global_var_1dc88.138, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_1dc84.136, { 1, 2, 3, 0, 4 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4, 8 }
  uselistorder i32* @global_var_1dc20.123, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32 (i32*)* @function_12ec0, { 0, 1, 2, 8, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @function_e824, { 1, 0 }
  uselistorder i32* @global_var_1dc68.49, { 4, 5, 1, 2, 3, 6, 7, 8, 9, 10, 0, 11, 15, 12, 13, 14 }
  uselistorder i32 ()* @function_125a4, { 2, 1, 0 }
  uselistorder i32 ()* @function_12c1c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @fp, { 2, 45, 46, 47, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0, 29, 30, 31, 32, 1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52 }
  uselistorder label %dec_label_pc_110b0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_110b0.backedge.thread2099, { 9, 4, 8, 2, 7, 3, 6, 1, 5, 0 }
  uselistorder label %dec_label_pc_110b0.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11bc0, { 1, 0 }
  uselistorder label %dec_label_pc_11b14, { 1, 0 }
  uselistorder label %dec_label_pc_11a7c, { 2, 1, 0 }
  uselistorder label %bb1939, { 1, 0 }
  uselistorder label %dec_label_pc_11904, { 1, 0 }
  uselistorder label %thread-pre-split688, { 1, 0 }
  uselistorder label %dec_label_pc_11898, { 1, 0, 2 }
  uselistorder label %dec_label_pc_117c8, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_117c0, { 1, 0 }
  uselistorder label %dec_label_pc_11748, { 2, 3, 1, 11, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder label %dec_label_pc_11660, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_11658, { 1, 0 }
  uselistorder label %dec_label_pc_11598, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_11590, { 1, 0 }
  uselistorder label %dec_label_pc_114d0, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_114c8, { 1, 0 }
  uselistorder label %dec_label_pc_11408, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_11400, { 1, 0 }
  uselistorder label %dec_label_pc_11354, { 1, 2, 0, 3, 5, 4 }
  uselistorder label %dec_label_pc_1134c, { 1, 0 }
  uselistorder label %dec_label_pc_112bc, { 1, 0 }
  uselistorder label %dec_label_pc_112a0, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_11298, { 1, 0 }
  uselistorder label %dec_label_pc_11234, { 2, 1, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_11224, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %bb1903, { 2, 1, 0 }
  uselistorder label %bb1900, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11184, { 1, 0 }
  uselistorder label %dec_label_pc_11184.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_11114, { 1, 0 }
  uselistorder label %bb1897, { 1, 0 }
  uselistorder label %dec_label_pc_110c8, { 1, 0 }
  uselistorder label %dec_label_pc_110b8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_110b8.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_110ac.loopexit, { 1, 4, 0, 2, 3 }
  uselistorder label %dec_label_pc_1100c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10ee4, { 1, 7, 8, 4, 5, 0, 6, 2, 3 }
  uselistorder label %dec_label_pc_10ebc, { 1, 0 }
  uselistorder label %bb1894, { 1, 0 }
  uselistorder label %bb1892, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_10d2c.dec_label_pc_10d2c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10d14.dec_label_pc_10d14_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10d0c, { 3, 0, 1, 2 }
  uselistorder label %bb1889, { 1, 0 }
  uselistorder label %dec_label_pc_10cec, { 1, 0 }
  uselistorder label %dec_label_pc_10ca0, { 1, 0 }
  uselistorder label %dec_label_pc_10b64, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10b50, { 1, 0 }
  uselistorder label %dec_label_pc_10a20, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10a00, { 1, 0 }
  uselistorder label %dec_label_pc_109ec, { 1, 0 }
  uselistorder label %dec_label_pc_109d4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_109b0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1098c, { 1, 2, 0 }
  uselistorder label %thread-pre-split624, { 1, 0 }
  uselistorder label %bb1869, { 1, 0 }
  uselistorder label %dec_label_pc_10948, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10924, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10900, { 2, 0, 3, 1 }
  uselistorder label %bb1860, { 1, 0 }
  uselistorder label %bb1858, { 1, 0 }
  uselistorder label %dec_label_pc_108cc, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_108ac, { 1, 2, 0, 3 }
  uselistorder label %bb1855, { 1, 0 }
  uselistorder label %dec_label_pc_10890, { 1, 0 }
  uselistorder label %thread-pre-split596, { 1, 0 }
  uselistorder label %bb1852, { 1, 0 }
  uselistorder label %thread-pre-split595, { 1, 0 }
  uselistorder label %bb1849, { 1, 0 }
  uselistorder label %thread-pre-split593, { 1, 0 }
  uselistorder label %bb1844, { 1, 0 }
  uselistorder label %thread-pre-split591, { 1, 0 }
  uselistorder label %bb1839, { 2, 1, 0 }
  uselistorder label %dec_label_pc_107c0, { 1, 2, 0 }
  uselistorder label %thread-pre-split584, { 1, 0 }
  uselistorder label %bb1831, { 1, 0 }
  uselistorder label %dec_label_pc_1077c, { 2, 1, 3, 0 }
  uselistorder label %bb1828, { 1, 0 }
  uselistorder label %bb1826, { 1, 0 }
  uselistorder label %dec_label_pc_10754, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_10730, { 2, 0, 3, 1 }
  uselistorder label %bb1821, { 1, 0 }
  uselistorder label %bb1819, { 1, 0 }
  uselistorder label %dec_label_pc_106fc, { 2, 0, 3, 1 }
  uselistorder label %bb1816, { 1, 0 }
  uselistorder label %bb1814, { 1, 0 }
  uselistorder label %dec_label_pc_106c8, { 2, 1, 3, 0 }
  uselistorder label %bb1811, { 1, 0 }
  uselistorder label %bb1809, { 1, 0 }
  uselistorder label %dec_label_pc_106a0, { 2, 0, 3, 1 }
  uselistorder label %bb1805, { 1, 0 }
  uselistorder label %bb1803, { 1, 0 }
  uselistorder label %dec_label_pc_1066c, { 2, 0, 3, 1 }
  uselistorder label %bb1800, { 1, 0 }
  uselistorder label %bb1798, { 1, 0 }
  uselistorder label %dec_label_pc_10638, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1061c, { 2, 0, 3, 1 }
  uselistorder label %bb1794, { 1, 0 }
  uselistorder label %bb1792, { 1, 0 }
  uselistorder label %dec_label_pc_105e8, { 2, 0, 3, 1 }
  uselistorder label %bb1789, { 1, 0 }
  uselistorder label %bb1787, { 1, 0 }
  uselistorder label %dec_label_pc_105b4, { 2, 0, 3, 1 }
  uselistorder label %bb1784, { 1, 0 }
  uselistorder label %bb1782, { 1, 0 }
  uselistorder label %dec_label_pc_10584, { 2, 0, 3, 1 }
  uselistorder label %bb1779, { 1, 0 }
  uselistorder label %bb1777, { 1, 0 }
  uselistorder label %dec_label_pc_10554, { 1, 2, 0 }
  uselistorder label %bb1775, { 1, 0 }
  uselistorder label %bb1773, { 1, 0 }
  uselistorder label %dec_label_pc_1052c, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_10508, { 1, 0, 2 }
  uselistorder label %bb1769, { 1, 0 }
  uselistorder label %bb1767, { 1, 0 }
  uselistorder label %dec_label_pc_104e0, { 2, 0, 3, 1 }
  uselistorder label %bb1764, { 1, 0 }
  uselistorder label %bb1762, { 1, 0 }
  uselistorder label %dec_label_pc_104ac, { 2, 0, 3, 1 }
  uselistorder label %bb1759, { 1, 0 }
  uselistorder label %bb1757, { 1, 0 }
  uselistorder label %dec_label_pc_10478, { 1, 2, 0 }
  uselistorder label %bb1755, { 1, 0 }
  uselistorder label %bb1753, { 1, 0 }
  uselistorder label %dec_label_pc_1044c, { 1, 0 }
  uselistorder label %dec_label_pc_10440, { 1, 0 }
  uselistorder label %dec_label_pc_10420, { 1, 0 }
  uselistorder label %dec_label_pc_10408, { 1, 0 }
  uselistorder label %dec_label_pc_103dc, { 1, 0 }
  uselistorder label %dec_label_pc_103d0, { 1, 0 }
  uselistorder label %dec_label_pc_103b0, { 1, 0 }
  uselistorder label %dec_label_pc_10378, { 1, 0 }
  uselistorder label %dec_label_pc_1036c, { 1, 0 }
  uselistorder label %dec_label_pc_10354, { 1, 0 }
  uselistorder label %dec_label_pc_10340, { 1, 0 }
  uselistorder label %dec_label_pc_10328, { 1, 0 }
  uselistorder label %dec_label_pc_10310, { 1, 0, 2 }
  uselistorder label %bb1742, { 1, 0 }
  uselistorder label %bb1740, { 1, 0 }
  uselistorder label %dec_label_pc_102dc, { 2, 0, 3, 1 }
  uselistorder label %bb1735, { 1, 0 }
  uselistorder label %bb1733, { 1, 0 }
  uselistorder label %dec_label_pc_102ac, { 2, 1, 3, 0 }
  uselistorder label %bb1730, { 1, 0 }
  uselistorder label %bb1728, { 1, 0 }
  uselistorder label %dec_label_pc_10278, { 2, 1, 3, 0 }
  uselistorder label %bb1722, { 1, 0 }
  uselistorder label %bb1720, { 1, 0 }
  uselistorder label %dec_label_pc_10250, { 2, 1, 3, 0 }
  uselistorder label %bb1716, { 1, 0 }
  uselistorder label %bb1714, { 1, 0 }
  uselistorder label %dec_label_pc_10228, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_10204, { 2, 0, 3, 1 }
  uselistorder label %bb1709, { 1, 0 }
  uselistorder label %bb1707, { 1, 0 }
  uselistorder label %dec_label_pc_101d0, { 2, 0, 3, 1 }
  uselistorder label %bb1704, { 1, 0 }
  uselistorder label %bb1702, { 1, 0 }
  uselistorder label %dec_label_pc_1019c, { 1, 0, 2 }
  uselistorder label %bb1699, { 1, 0 }
  uselistorder label %bb1697, { 1, 0 }
  uselistorder label %dec_label_pc_10174, { 1, 0, 2 }
  uselistorder label %bb1694, { 1, 0 }
  uselistorder label %bb1692, { 1, 0 }
  uselistorder label %dec_label_pc_10150, { 1, 0, 2 }
  uselistorder label %bb1689, { 1, 0 }
  uselistorder label %bb1687, { 1, 0 }
  uselistorder label %dec_label_pc_10128, { 2, 0, 3, 1 }
  uselistorder label %bb1684, { 1, 0 }
  uselistorder label %bb1682, { 1, 0 }
  uselistorder label %dec_label_pc_100f8, { 1, 0 }
  uselistorder label %dec_label_pc_100e0, { 1, 0 }
  uselistorder label %dec_label_pc_100c8, { 1, 2, 0 }
  uselistorder label %bb1677, { 1, 0 }
  uselistorder label %bb1675, { 1, 0 }
  uselistorder label %dec_label_pc_100a0, { 2, 0, 3, 1 }
  uselistorder label %bb1672, { 1, 0 }
  uselistorder label %bb1670, { 1, 0 }
  uselistorder label %bb1668, { 1, 0 }
  uselistorder label %dec_label_pc_10040, { 2, 1, 3, 0 }
  uselistorder label %bb1663, { 1, 0 }
  uselistorder label %bb1661, { 1, 0 }
  uselistorder label %dec_label_pc_10008, { 2, 0, 3, 1 }
  uselistorder label %bb1655, { 1, 0 }
  uselistorder label %dec_label_pc_ffd8, { 1, 2, 0 }
  uselistorder label %bb1653, { 1, 0 }
  uselistorder label %bb1651, { 1, 0 }
  uselistorder label %dec_label_pc_ffac, { 2, 1, 3, 0 }
  uselistorder label %bb1648, { 1, 0 }
  uselistorder label %bb1646, { 1, 0 }
  uselistorder label %dec_label_pc_ff78, { 1, 0, 2 }
  uselistorder label %bb1640, { 1, 0 }
  uselistorder label %bb1638, { 1, 0 }
  uselistorder label %dec_label_pc_ff44, { 2, 0, 3, 1 }
  uselistorder label %bb1633, { 1, 0 }
  uselistorder label %bb1631, { 1, 0 }
  uselistorder label %dec_label_pc_ff10, { 2, 0, 3, 1 }
  uselistorder label %bb1628, { 1, 0 }
  uselistorder label %dec_label_pc_fee0, { 1, 2, 0 }
  uselistorder label %bb1626, { 1, 0 }
  uselistorder label %bb1624, { 1, 0 }
  uselistorder label %dec_label_pc_feb4, { 1, 2, 0 }
  uselistorder label %bb1622, { 1, 0 }
  uselistorder label %bb1620, { 1, 0 }
  uselistorder label %dec_label_pc_fe8c, { 2, 1, 3, 0 }
  uselistorder label %bb1617, { 1, 0 }
  uselistorder label %bb1615, { 1, 0 }
  uselistorder label %dec_label_pc_fe58, { 2, 1, 3, 0 }
  uselistorder label %bb1609, { 1, 0 }
  uselistorder label %dec_label_pc_fe28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fe10, { 2, 0, 3, 1 }
  uselistorder label %bb1602, { 1, 0 }
  uselistorder label %bb1600, { 1, 0 }
  uselistorder label %dec_label_pc_fddc, { 2, 0, 3, 1 }
  uselistorder label %bb1597, { 1, 0 }
  uselistorder label %bb1595, { 1, 0 }
  uselistorder label %dec_label_pc_fda8, { 1, 2, 0 }
  uselistorder label %bb1593, { 1, 0 }
  uselistorder label %dec_label_pc_fd84, { 2, 1, 3, 0 }
  uselistorder label %bb1590, { 1, 0 }
  uselistorder label %dec_label_pc_fd60, { 1, 0, 2 }
  uselistorder label %bb1586, { 1, 0 }
  uselistorder label %bb1584, { 1, 0 }
  uselistorder label %dec_label_pc_fd30, { 1, 2, 0 }
  uselistorder label %bb1580, { 1, 0 }
  uselistorder label %bb1578, { 1, 0 }
  uselistorder label %dec_label_pc_fce8, { 1, 0 }
  uselistorder label %dec_label_pc_fca8, { 1, 0 }
  uselistorder label %dec_label_pc_fc90, { 1, 0 }
  uselistorder label %dec_label_pc_fc34, { 1, 0 }
  uselistorder label %dec_label_pc_fc1c, { 1, 0 }
  uselistorder label %dec_label_pc_fc08, { 1, 0 }
  uselistorder label %dec_label_pc_fbf0, { 1, 0 }
  uselistorder label %thread-pre-split212, { 1, 0 }
  uselistorder label %bb1560, { 1, 0 }
  uselistorder label %dec_label_pc_fb90, { 1, 2, 0 }
  uselistorder label %thread-pre-split207, { 1, 0 }
  uselistorder label %bb1557, { 1, 0 }
  uselistorder label %thread-pre-split205, { 1, 0 }
  uselistorder label %bb1552, { 1, 0 }
  uselistorder label %thread-pre-split204, { 1, 0 }
  uselistorder label %bb1549, { 1, 0 }
  uselistorder label %thread-pre-split203, { 1, 0 }
  uselistorder label %bb1546, { 1, 0 }
  uselistorder label %thread-pre-split201, { 1, 0 }
  uselistorder label %bb1541, { 1, 0 }
  uselistorder label %dec_label_pc_fa88, { 1, 2, 0 }
  uselistorder label %thread-pre-split195, { 1, 0 }
  uselistorder label %bb1535, { 1, 0 }
  uselistorder label %thread-pre-split193, { 1, 0 }
  uselistorder label %bb1530, { 1, 0 }
  uselistorder label %thread-pre-split191, { 1, 0 }
  uselistorder label %bb1525, { 1, 0 }
  uselistorder label %thread-pre-split190, { 1, 0 }
  uselistorder label %bb1522, { 1, 0 }
  uselistorder label %thread-pre-split189, { 1, 0 }
  uselistorder label %bb1519, { 1, 0 }
  uselistorder label %dec_label_pc_f98c, { 1, 2, 0 }
  uselistorder label %thread-pre-split183, { 1, 0 }
  uselistorder label %bb1513, { 1, 0 }
  uselistorder label %thread-pre-split182, { 1, 0 }
  uselistorder label %bb1510, { 1, 0 }
  uselistorder label %thread-pre-split181, { 1, 0 }
  uselistorder label %bb1507, { 1, 0 }
  uselistorder label %thread-pre-split180, { 1, 0 }
  uselistorder label %bb1504, { 1, 0 }
  uselistorder label %thread-pre-split179, { 1, 0 }
  uselistorder label %bb1501, { 1, 0 }
  uselistorder label %bb1499, { 1, 0 }
  uselistorder label %bb1497, { 1, 0 }
  uselistorder label %thread-pre-split178, { 1, 0 }
  uselistorder label %bb1494, { 1, 0 }
  uselistorder label %dec_label_pc_f888, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f864, { 1, 2, 0 }
  uselistorder label %bb1489, { 1, 0 }
  uselistorder label %bb1487, { 1, 0 }
  uselistorder label %dec_label_pc_f838, { 1, 2, 0 }
  uselistorder label %bb1484, { 1, 0 }
  uselistorder label %thread-pre-split167, { 1, 0 }
  uselistorder label %bb1481, { 1, 0 }
  uselistorder label %thread-pre-split165, { 1, 0 }
  uselistorder label %bb1476, { 1, 0 }
  uselistorder label %dec_label_pc_f7b0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f78c, { 1, 2, 0 }
  uselistorder label %bb1469, { 1, 0 }
  uselistorder label %bb1467, { 1, 0 }
  uselistorder label %dec_label_pc_f764, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f748, { 1, 2, 0 }
  uselistorder label %bb1465, { 1, 0 }
  uselistorder label %bb1463, { 1, 0 }
  uselistorder label %dec_label_pc_f720, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f6fc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f6d8, { 1, 2, 0 }
  uselistorder label %bb1455, { 1, 0 }
  uselistorder label %bb1453, { 1, 0 }
  uselistorder label %thread-pre-split132, { 1, 0 }
  uselistorder label %bb1450, { 1, 0 }
  uselistorder label %thread-pre-split131, { 1, 0 }
  uselistorder label %bb1447, { 1, 0 }
  uselistorder label %dec_label_pc_f634, { 1, 2, 0 }
  uselistorder label %bb1438, { 1, 0 }
  uselistorder label %bb1436, { 1, 0 }
  uselistorder label %bb1434, { 1, 0 }
  uselistorder label %bb1432, { 1, 0 }
  uselistorder label %dec_label_pc_f5d4, { 1, 0 }
  uselistorder label %dec_label_pc_f5b8, { 1, 0 }
  uselistorder label %dec_label_pc_f59c, { 1, 0 }
  uselistorder label %dec_label_pc_f584, { 1, 0 }
  uselistorder label %dec_label_pc_f52c, { 1, 0 }
  uselistorder label %dec_label_pc_f510, { 1, 0 }
  uselistorder label %dec_label_pc_f4f4, { 1, 0 }
  uselistorder label %dec_label_pc_f4d8, { 1, 0 }
  uselistorder label %dec_label_pc_f488, { 1, 0 }
  uselistorder label %dec_label_pc_f46c, { 1, 0 }
  uselistorder label %dec_label_pc_f460, { 1, 0 }
  uselistorder label %dec_label_pc_f444, { 1, 0 }
  uselistorder label %dec_label_pc_f42c, { 1, 0 }
  uselistorder label %dec_label_pc_f40c, { 1, 0 }
  uselistorder label %dec_label_pc_f3c8, { 1, 0 }
  uselistorder label %dec_label_pc_f3bc, { 1, 0 }
  uselistorder label %dec_label_pc_f364, { 1, 0 }
  uselistorder label %dec_label_pc_f330, { 1, 0 }
  uselistorder label %dec_label_pc_f31c, { 1, 0 }
  uselistorder label %dec_label_pc_f308, { 1, 0 }
  uselistorder label %dec_label_pc_f2e0, { 1, 0 }
  uselistorder label %dec_label_pc_f2cc, { 1, 0 }
  uselistorder label %dec_label_pc_f2b8, { 1, 0 }
  uselistorder label %dec_label_pc_f2a0, { 1, 0 }
  uselistorder label %dec_label_pc_f284, { 1, 0 }
  uselistorder label %dec_label_pc_f230, { 1, 0 }
  uselistorder label %dec_label_pc_f218, { 1, 0 }
  uselistorder label %bb1339, { 1, 0 }
  uselistorder label %dec_label_pc_f158, { 11, 117, 0, 12, 118, 119, 13, 120, 121, 14, 122, 123, 124, 125, 15, 126, 16, 17, 127, 128, 18, 129, 19, 130, 131, 132, 20, 133, 21, 22, 23, 24, 25, 134, 26, 27, 28, 29, 30, 135, 31, 32, 33, 34, 136, 35, 36, 137, 37, 38, 138, 39, 40, 41, 42, 43, 139, 44, 45, 46, 47, 48, 49, 50, 51, 52, 140, 53, 54, 55, 56, 57, 58, 59, 141, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 142, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 91, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 92, 180, 181, 182, 93, 183, 184, 185, 186, 94, 187, 95, 96, 188, 189, 190, 97, 98, 99, 191, 192, 193, 100, 101, 102, 194, 103, 195, 104, 105, 106, 196, 107, 108, 109, 110, 111, 112, 113, 197, 198, 199, 114, 115, 116, 200, 201, 202, 203, 1, 204, 2, 205, 3, 206, 4, 207, 5, 208, 6, 209, 7, 210, 8, 211, 9, 212, 10, 213, 214 }
  uselistorder label %dec_label_pc_ee60, { 1, 2, 0 }
}

define i32 @function_11c3c(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_11c3c:
  store i32 ptrtoint (i32* @global_var_1dc94.237 to i32), i32* @ip, align 4
  %v3_11c40 = mul i32 %arg1, 8
  %v2_11c44 = add i32 %v3_11c40, ptrtoint (i32* @global_var_1dc94.237 to i32)
  %v2_11c48 = icmp eq i32* %arg2, null
  br i1 %v2_11c48, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11c3c
  %v3_11c5411 = inttoptr i32 %v2_11c44 to i32*
  %v4_11c5412 = load i32, i32* %v3_11c5411, align 4
  br label %bb15

bb:                                               ; preds = %dec_label_pc_11c3c
  %v2_11c4c = add i32 %v3_11c40, add (i32 ptrtoint (i32* @global_var_1dc94.237 to i32), i32 5)
  %v3_11c4c = inttoptr i32 %v2_11c4c to i8*
  %v4_11c4c = load i8, i8* %v3_11c4c, align 1
  %v5_11c4c = zext i8 %v4_11c4c to i32
  store i32 %v5_11c4c, i32* @r2, align 4
  %v2_11c50 = add i32 %v3_11c40, add (i32 ptrtoint (i32* @global_var_1dc94.237 to i32), i32 4)
  %v3_11c50 = inttoptr i32 %v2_11c50 to i8*
  %v4_11c50 = load i8, i8* %v3_11c50, align 4
  %v5_11c50 = zext i8 %v4_11c50 to i32
  %v3_11c54 = inttoptr i32 %v2_11c44 to i32*
  %v4_11c54 = load i32, i32* %v3_11c54, align 4
  %v5_11c58 = mul nuw nsw i32 %v5_11c4c, 256
  %v6_11c58 = or i32 %v5_11c50, %v5_11c58
  store i32 %v6_11c58, i32* %arg2, align 4
  br label %bb15

bb15:                                             ; preds = %.thread, %bb
  %v4_11c54714 = phi i32 [ %v4_11c5412, %.thread ], [ %v4_11c54, %bb ]
  ret i32 %v4_11c54714

; uselistorder directives
  uselistorder i32 %v2_11c44, { 1, 0 }
  uselistorder i32 %v3_11c40, { 2, 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_11c68(i32 %arg1) local_unnamed_addr {
dec_label_pc_11c68:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_11c68 = mul i32 %arg1, 8
  %v3_11c6c = load i32, i32* @r4, align 4
  store i32 %v3_11c6c, i32* %stack_var_-20, align 4
  %v3_11c7c = and i32 %v3_11c68, 2040
  %v2_11c80 = add i32 %v3_11c7c, ptrtoint (i32* @global_var_1dc94.237 to i32)
  store i32 %v2_11c80, i32* @lr, align 4
  %v1_11c88 = add i32 %v3_11c7c, add (i32 ptrtoint (i32* @global_var_1dc94.237 to i32), i32 4)
  store i32 %v1_11c88, i32* %r7.global-to-local, align 4
  %v2_11c8c = load i32, i32* @global_var_1da64.240, align 4
  store i32 %v2_11c8c, i32* @r2, align 4
  %v2_11c90 = inttoptr i32 %v1_11c88 to i8*
  %v3_11c90 = load i8, i8* %v2_11c90, align 4
  %v4_11c90 = zext i8 %v3_11c90 to i32
  store i32 %v4_11c90, i32* @r1, align 4
  %v1_11c94 = add i32 %v3_11c7c, add (i32 ptrtoint (i32* @global_var_1dc94.237 to i32), i32 5)
  %v2_11c94 = inttoptr i32 %v1_11c94 to i8*
  %v3_11c94 = load i8, i8* %v2_11c94, align 1
  %v4_11c94 = zext i8 %v3_11c94 to i32
  %v3_11c98 = udiv i32 %v2_11c8c, 256
  %v4_11c9c = mul nuw nsw i32 %v4_11c94, 256
  %v5_11c9c = or i32 %v4_11c9c, %v4_11c90
  %v7_11c9c = icmp eq i32 %v5_11c9c, 0
  store i1 %v7_11c9c, i1* @cpsr_z, align 1
  %v3_11ca0 = udiv i32 %v2_11c8c, 65536
  %v1_11ca4 = urem i32 %v3_11c98, 256
  store i32 %v1_11ca4, i32* %r6.global-to-local, align 4
  %v1_11ca8 = urem i32 %v3_11ca0, 256
  store i32 %v1_11ca8, i32* %r5.global-to-local, align 4
  %v3_11cac = udiv i32 %v2_11c8c, 16777216
  store i32 %v3_11cac, i32* %r4.global-to-local, align 4
  %v1_11cb0 = urem i32 %v2_11c8c, 256
  br i1 %v7_11c9c, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_11c68
  store i32 %v3_11c6c, i32* @r4, align 4
  ret i32 %v1_11cb0

bb8:                                              ; preds = %dec_label_pc_11c68
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_11cbc

dec_label_pc_11cbc:                               ; preds = %dec_label_pc_11cbc, %bb8
  %v2_11cc8 = phi i32 [ %v1_11d04, %dec_label_pc_11cbc ], [ 0, %bb8 ]
  %v0_11cbc = phi i32 [ %v0_11cfc, %dec_label_pc_11cbc ], [ %v2_11c80, %bb8 ]
  %v1_11cbc = inttoptr i32 %v0_11cbc to i32*
  %v2_11cbc = load i32, i32* %v1_11cbc, align 4
  %v2_11cc0 = add i32 %v2_11cbc, %v2_11cc8
  %v3_11cc0 = inttoptr i32 %v2_11cc0 to i8*
  %v4_11cc0 = load i8, i8* %v3_11cc0, align 1
  %v6_11cc0 = zext i8 %v4_11cc0 to i32
  %v2_11cc4 = xor i32 %v6_11cc0, %v1_11cb0
  %v1_11cc8 = trunc i32 %v2_11cc4 to i8
  store i8 %v1_11cc8, i8* %v3_11cc0, align 1
  %v0_11ccc = load i32, i32* @lr, align 4
  %v1_11ccc = inttoptr i32 %v0_11ccc to i32*
  %v2_11ccc = load i32, i32* %v1_11ccc, align 4
  %v0_11cd0 = load i32, i32* @ip, align 4
  %v2_11cd0 = add i32 %v0_11cd0, %v2_11ccc
  %v3_11cd0 = inttoptr i32 %v2_11cd0 to i8*
  %v4_11cd0 = load i8, i8* %v3_11cd0, align 1
  %v6_11cd0 = zext i8 %v4_11cd0 to i32
  %v0_11cd4 = load i32, i32* %r6.global-to-local, align 4
  %v2_11cd4 = xor i32 %v0_11cd4, %v6_11cd0
  %v1_11cd8 = trunc i32 %v2_11cd4 to i8
  store i8 %v1_11cd8, i8* %v3_11cd0, align 1
  %v0_11cdc = load i32, i32* @lr, align 4
  %v1_11cdc = inttoptr i32 %v0_11cdc to i32*
  %v2_11cdc = load i32, i32* %v1_11cdc, align 4
  %v0_11ce0 = load i32, i32* @ip, align 4
  %v2_11ce0 = add i32 %v0_11ce0, %v2_11cdc
  %v3_11ce0 = inttoptr i32 %v2_11ce0 to i8*
  %v4_11ce0 = load i8, i8* %v3_11ce0, align 1
  %v6_11ce0 = zext i8 %v4_11ce0 to i32
  %v0_11ce4 = load i32, i32* %r5.global-to-local, align 4
  %v2_11ce4 = xor i32 %v0_11ce4, %v6_11ce0
  %v1_11ce8 = trunc i32 %v2_11ce4 to i8
  store i8 %v1_11ce8, i8* %v3_11ce0, align 1
  %v0_11cec = load i32, i32* @lr, align 4
  %v1_11cec = inttoptr i32 %v0_11cec to i32*
  %v2_11cec = load i32, i32* %v1_11cec, align 4
  store i32 %v2_11cec, i32* @r1, align 4
  %v0_11cf0 = load i32, i32* @ip, align 4
  %v2_11cf0 = add i32 %v0_11cf0, %v2_11cec
  %v3_11cf0 = inttoptr i32 %v2_11cf0 to i8*
  %v4_11cf0 = load i8, i8* %v3_11cf0, align 1
  %v6_11cf0 = zext i8 %v4_11cf0 to i32
  %v0_11cf4 = load i32, i32* %r4.global-to-local, align 4
  %v2_11cf4 = xor i32 %v0_11cf4, %v6_11cf0
  %v1_11cf8 = trunc i32 %v2_11cf4 to i8
  store i8 %v1_11cf8, i8* %v3_11cf0, align 1
  %v0_11cfc = load i32, i32* @lr, align 4
  %v1_11cfc = add i32 %v0_11cfc, 4
  %v2_11cfc = inttoptr i32 %v1_11cfc to i8*
  %v3_11cfc = load i8, i8* %v2_11cfc, align 1
  %v4_11cfc = zext i8 %v3_11cfc to i32
  %v0_11d00 = load i32, i32* %r7.global-to-local, align 4
  %v1_11d00 = add i32 %v0_11d00, 1
  %v2_11d00 = inttoptr i32 %v1_11d00 to i8*
  %v3_11d00 = load i8, i8* %v2_11d00, align 1
  %v4_11d00 = zext i8 %v3_11d00 to i32
  %v0_11d04 = load i32, i32* @ip, align 4
  %v1_11d04 = add i32 %v0_11d04, 1
  store i32 %v1_11d04, i32* @ip, align 4
  %v4_11d08 = mul nuw nsw i32 %v4_11d00, 256
  %v5_11d08 = or i32 %v4_11d08, %v4_11cfc
  store i32 %v5_11d08, i32* @r2, align 4
  %v9_11d0c = icmp eq i32 %v5_11d08, %v1_11d04
  store i1 %v9_11d0c, i1* @cpsr_z, align 1
  %v8_11d10 = icmp sgt i32 %v5_11d08, %v1_11d04
  br i1 %v8_11d10, label %dec_label_pc_11cbc, label %dec_label_pc_11d14

dec_label_pc_11d14:                               ; preds = %dec_label_pc_11cbc
  %v2_11d14 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11d14, i32* @r4, align 4
  ret i32 %v1_11cb0

; uselistorder directives
  uselistorder i32 %v1_11d04, { 1, 2, 3, 0 }
  uselistorder i32 %v0_11cfc, { 1, 0 }
  uselistorder i32 %v1_11cb0, { 1, 2, 0 }
  uselistorder i32 %v2_11c8c, { 3, 0, 1, 2, 4 }
}

define i32 @function_11d20(i32 %arg1) local_unnamed_addr {
dec_label_pc_11d20:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_11d20 = mul i32 %arg1, 8
  %v3_11d24 = load i32, i32* @r4, align 4
  store i32 %v3_11d24, i32* %stack_var_-20, align 4
  %v3_11d34 = and i32 %v3_11d20, 2040
  %v2_11d38 = add i32 %v3_11d34, ptrtoint (i32* @global_var_1dc94.237 to i32)
  store i32 %v2_11d38, i32* @lr, align 4
  %v1_11d40 = add i32 %v3_11d34, add (i32 ptrtoint (i32* @global_var_1dc94.237 to i32), i32 4)
  store i32 %v1_11d40, i32* %r7.global-to-local, align 4
  %v2_11d44 = load i32, i32* @global_var_1da64.240, align 4
  store i32 %v2_11d44, i32* @r2, align 4
  %v2_11d48 = inttoptr i32 %v1_11d40 to i8*
  %v3_11d48 = load i8, i8* %v2_11d48, align 4
  %v4_11d48 = zext i8 %v3_11d48 to i32
  %v1_11d4c = add i32 %v3_11d34, add (i32 ptrtoint (i32* @global_var_1dc94.237 to i32), i32 5)
  %v2_11d4c = inttoptr i32 %v1_11d4c to i8*
  %v3_11d4c = load i8, i8* %v2_11d4c, align 1
  %v4_11d4c = zext i8 %v3_11d4c to i32
  %v3_11d50 = udiv i32 %v2_11d44, 256
  %v4_11d54 = mul nuw nsw i32 %v4_11d4c, 256
  %v5_11d54 = or i32 %v4_11d54, %v4_11d48
  %v7_11d54 = icmp eq i32 %v5_11d54, 0
  %v3_11d58 = udiv i32 %v2_11d44, 65536
  %v1_11d5c = urem i32 %v3_11d50, 256
  store i32 %v1_11d5c, i32* %r6.global-to-local, align 4
  %v1_11d60 = urem i32 %v3_11d58, 256
  store i32 %v1_11d60, i32* %r5.global-to-local, align 4
  %v3_11d64 = udiv i32 %v2_11d44, 16777216
  store i32 %v3_11d64, i32* %r4.global-to-local, align 4
  %v1_11d68 = urem i32 %v2_11d44, 256
  br i1 %v7_11d54, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_11d20
  store i32 %v3_11d24, i32* @r4, align 4
  ret i32 %v1_11d68

bb8:                                              ; preds = %dec_label_pc_11d20
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11d74

dec_label_pc_11d74:                               ; preds = %dec_label_pc_11d74, %bb8
  %v2_11d80 = phi i32 [ %v1_11dbc, %dec_label_pc_11d74 ], [ 0, %bb8 ]
  %v0_11d74 = phi i32 [ %v0_11db4, %dec_label_pc_11d74 ], [ %v2_11d38, %bb8 ]
  %v1_11d74 = inttoptr i32 %v0_11d74 to i32*
  %v2_11d74 = load i32, i32* %v1_11d74, align 4
  %v2_11d78 = add i32 %v2_11d74, %v2_11d80
  %v3_11d78 = inttoptr i32 %v2_11d78 to i8*
  %v4_11d78 = load i8, i8* %v3_11d78, align 1
  %v6_11d78 = zext i8 %v4_11d78 to i32
  %v2_11d7c = xor i32 %v6_11d78, %v1_11d68
  %v1_11d80 = trunc i32 %v2_11d7c to i8
  store i8 %v1_11d80, i8* %v3_11d78, align 1
  %v0_11d84 = load i32, i32* @lr, align 4
  %v1_11d84 = inttoptr i32 %v0_11d84 to i32*
  %v2_11d84 = load i32, i32* %v1_11d84, align 4
  %v0_11d88 = load i32, i32* %ip.global-to-local, align 4
  %v2_11d88 = add i32 %v0_11d88, %v2_11d84
  %v3_11d88 = inttoptr i32 %v2_11d88 to i8*
  %v4_11d88 = load i8, i8* %v3_11d88, align 1
  %v6_11d88 = zext i8 %v4_11d88 to i32
  %v0_11d8c = load i32, i32* %r6.global-to-local, align 4
  %v2_11d8c = xor i32 %v0_11d8c, %v6_11d88
  %v1_11d90 = trunc i32 %v2_11d8c to i8
  store i8 %v1_11d90, i8* %v3_11d88, align 1
  %v0_11d94 = load i32, i32* @lr, align 4
  %v1_11d94 = inttoptr i32 %v0_11d94 to i32*
  %v2_11d94 = load i32, i32* %v1_11d94, align 4
  %v0_11d98 = load i32, i32* %ip.global-to-local, align 4
  %v2_11d98 = add i32 %v0_11d98, %v2_11d94
  %v3_11d98 = inttoptr i32 %v2_11d98 to i8*
  %v4_11d98 = load i8, i8* %v3_11d98, align 1
  %v6_11d98 = zext i8 %v4_11d98 to i32
  %v0_11d9c = load i32, i32* %r5.global-to-local, align 4
  %v2_11d9c = xor i32 %v0_11d9c, %v6_11d98
  %v1_11da0 = trunc i32 %v2_11d9c to i8
  store i8 %v1_11da0, i8* %v3_11d98, align 1
  %v0_11da4 = load i32, i32* @lr, align 4
  %v1_11da4 = inttoptr i32 %v0_11da4 to i32*
  %v2_11da4 = load i32, i32* %v1_11da4, align 4
  %v0_11da8 = load i32, i32* %ip.global-to-local, align 4
  %v2_11da8 = add i32 %v0_11da8, %v2_11da4
  %v3_11da8 = inttoptr i32 %v2_11da8 to i8*
  %v4_11da8 = load i8, i8* %v3_11da8, align 1
  %v6_11da8 = zext i8 %v4_11da8 to i32
  %v0_11dac = load i32, i32* %r4.global-to-local, align 4
  %v2_11dac = xor i32 %v0_11dac, %v6_11da8
  %v1_11db0 = trunc i32 %v2_11dac to i8
  store i8 %v1_11db0, i8* %v3_11da8, align 1
  %v0_11db4 = load i32, i32* @lr, align 4
  %v1_11db4 = add i32 %v0_11db4, 4
  %v2_11db4 = inttoptr i32 %v1_11db4 to i8*
  %v3_11db4 = load i8, i8* %v2_11db4, align 1
  %v4_11db4 = zext i8 %v3_11db4 to i32
  %v0_11db8 = load i32, i32* %r7.global-to-local, align 4
  %v1_11db8 = add i32 %v0_11db8, 1
  %v2_11db8 = inttoptr i32 %v1_11db8 to i8*
  %v3_11db8 = load i8, i8* %v2_11db8, align 1
  %v4_11db8 = zext i8 %v3_11db8 to i32
  %v0_11dbc = load i32, i32* %ip.global-to-local, align 4
  %v1_11dbc = add i32 %v0_11dbc, 1
  store i32 %v1_11dbc, i32* %ip.global-to-local, align 4
  %v4_11dc0 = mul nuw nsw i32 %v4_11db8, 256
  %v5_11dc0 = or i32 %v4_11dc0, %v4_11db4
  store i32 %v5_11dc0, i32* @r2, align 4
  %v8_11dc8 = icmp sgt i32 %v5_11dc0, %v1_11dbc
  br i1 %v8_11dc8, label %dec_label_pc_11d74, label %dec_label_pc_11dcc

dec_label_pc_11dcc:                               ; preds = %dec_label_pc_11d74
  %v2_11dcc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11dcc, i32* @r4, align 4
  ret i32 %v1_11d68

; uselistorder directives
  uselistorder i32 %v1_11dbc, { 1, 2, 0 }
  uselistorder i32 %v0_11db4, { 1, 0 }
  uselistorder i32 %v1_11d68, { 1, 2, 0 }
  uselistorder i32 %v2_11d44, { 3, 0, 1, 2, 4 }
}

define i32 @function_11dd8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11dd8:
  %fp.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11dd8 = load i32, i32* @r4, align 4
  store i32 %v3_11dd8, i32* %stack_var_-36, align 4
  %v9_11dd8 = load i32, i32* @r6, align 4
  %v12_11dd8 = load i32, i32* @r7, align 4
  %v1_11de0 = call i32 @function_13678(i32 2)
  store i32 2, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1dc94.237 to i32), i32* @r4, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v1_11de0, i32* @r7, align 4
  %v4_11dfc = call i32 @function_12368(i32 %v1_11de0, i32 ptrtoint ([3 x i8]* @global_var_15598.245 to i32), i32 2)
  %v0_11e00 = load i32, i32* @r5, align 4
  %v0_11e04 = load i32, i32* @r7, align 4
  store i32 %v0_11e04, i32* @global_var_1dc9c.246, align 4
  %v1_11e08 = trunc i32 %v0_11e00 to i8
  store i8 %v1_11e08, i8* bitcast (i32* @global_var_1dca0.247 to i8*), align 4
  %v0_11e0c = load i32, i32* @r6, align 4
  %v1_11e0c = trunc i32 %v0_11e0c to i8
  store i8 %v1_11e0c, i8* bitcast (i32* @global_var_1dca1.248 to i8*), align 4
  %v1_11e10 = call i32 @function_13678(i32 %v0_11e00)
  %v0_11e14 = load i32, i32* @r5, align 4
  store i32 %v1_11e10, i32* @r7, align 4
  %v3_11e20 = call i32 @function_12368(i32 %v1_11e10, i32 ptrtoint (i32* @global_var_1559c.250 to i32), i32 %v0_11e14)
  %v0_11e28 = load i32, i32* @r7, align 4
  store i32 %v0_11e28, i32* @global_var_1dca4.251, align 4
  %v0_11e2c = load i32, i32* @r5, align 4
  %v1_11e2c = trunc i32 %v0_11e2c to i8
  store i8 %v1_11e2c, i8* bitcast (i32* @global_var_1dca8.252 to i8*), align 4
  %v0_11e30 = load i32, i32* @r6, align 4
  %v1_11e30 = trunc i32 %v0_11e30 to i8
  store i8 %v1_11e30, i8* bitcast (i32* @global_var_1dca9.253 to i8*), align 4
  %v1_11e34 = call i32 @function_13678(i32 20)
  store i32 %v1_11e34, i32* @r5, align 4
  %v3_11e44 = call i32 @function_12368(i32 %v1_11e34, i32 ptrtoint (i32* @global_var_155a0.255 to i32), i32 20)
  store i8 20, i8* bitcast (i32* @global_var_1dcb0.256 to i8*), align 4
  %v0_11e54 = load i32, i32* @r5, align 4
  store i32 %v0_11e54, i32* @global_var_1dcac.257, align 4
  %v0_11e58 = load i32, i32* @r6, align 4
  %v1_11e58 = trunc i32 %v0_11e58 to i8
  store i8 %v1_11e58, i8* bitcast (i32* @global_var_1dcb1.258 to i8*), align 4
  %v1_11e5c = call i32 @function_13678(i32 6)
  store i32 6, i32* %fp.global-to-local, align 4
  store i32 %v1_11e5c, i32* @r5, align 4
  %v3_11e70 = call i32 @function_12368(i32 %v1_11e5c, i32 ptrtoint (i32* @global_var_155b8.260 to i32), i32 6)
  %v0_11e78 = load i32, i32* @r5, align 4
  store i32 %v0_11e78, i32* @global_var_1dcb4.261, align 4
  store i8 6, i8* bitcast (i32* @global_var_1dcb8.262 to i8*), align 4
  %v0_11e80 = load i32, i32* @r6, align 4
  %v1_11e80 = trunc i32 %v0_11e80 to i8
  store i8 %v1_11e80, i8* bitcast (i32* @global_var_1dcb9.263 to i8*), align 4
  %v1_11e84 = call i32 @function_13678(i32 7)
  store i32 7, i32* %r8.global-to-local, align 4
  store i32 %v1_11e84, i32* @r5, align 4
  %v3_11e98 = call i32 @function_12368(i32 %v1_11e84, i32 ptrtoint (i32* @global_var_155c0.265 to i32), i32 7)
  %v0_11ea0 = load i32, i32* @r5, align 4
  store i32 %v0_11ea0, i32* @global_var_1dcbc.266, align 4
  store i8 7, i8* bitcast (i32* @global_var_1dcc0.267 to i8*), align 4
  %v0_11ea8 = load i32, i32* @r6, align 4
  %v1_11ea8 = trunc i32 %v0_11ea8 to i8
  store i8 %v1_11ea8, i8* bitcast (i32* @global_var_1dcc1.268 to i8*), align 4
  %v1_11eac = call i32 @function_13678(i32 7)
  %v0_11eb0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_11eac, i32* @r5, align 4
  %v3_11ebc = call i32 @function_12368(i32 %v1_11eac, i32 ptrtoint (i32* @global_var_155c8.270 to i32), i32 %v0_11eb0)
  %v0_11ec4 = load i32, i32* @r5, align 4
  store i32 %v0_11ec4, i32* @global_var_1dcc4.271, align 4
  %v1_11ec8 = trunc i32 %v0_11eb0 to i8
  store i8 %v1_11ec8, i8* bitcast (i32* @global_var_1dcc8.272 to i8*), align 4
  %v0_11ecc = load i32, i32* @r6, align 4
  %v1_11ecc = trunc i32 %v0_11ecc to i8
  store i8 %v1_11ecc, i8* bitcast (i32* @global_var_1dcc9.273 to i8*), align 4
  %v1_11ed0 = call i32 @function_13678(i32 3)
  store i32 %v1_11ed0, i32* @r5, align 4
  %v3_11ee0 = call i32 @function_12368(i32 %v1_11ed0, i32 ptrtoint (i32* @global_var_155d0.275 to i32), i32 3)
  store i8 3, i8* bitcast (i32* @global_var_1dcd0.276 to i8*), align 4
  %v0_11ef0 = load i32, i32* @r5, align 4
  store i32 %v0_11ef0, i32* @global_var_1dccc.277, align 4
  %v0_11ef4 = load i32, i32* @r6, align 4
  %v1_11ef4 = trunc i32 %v0_11ef4 to i8
  store i8 %v1_11ef4, i8* bitcast (i32* @global_var_1dcd1.278 to i8*), align 4
  %v1_11ef8 = call i32 @function_13678(i32 21)
  store i32 %v1_11ef8, i32* @r5, align 4
  %v3_11f08 = call i32 @function_12368(i32 %v1_11ef8, i32 ptrtoint (i32* @global_var_155d4.280 to i32), i32 21)
  store i8 21, i8* bitcast (i32* @global_var_1dcd8.281 to i8*), align 4
  %v0_11f18 = load i32, i32* @r5, align 4
  store i32 %v0_11f18, i32* @global_var_1dcd4.282, align 4
  %v0_11f1c = load i32, i32* @r6, align 4
  %v1_11f1c = trunc i32 %v0_11f1c to i8
  store i8 %v1_11f1c, i8* bitcast (i32* @global_var_1dcd9.283 to i8*), align 4
  %v1_11f20 = call i32 @function_13678(i32 26)
  store i32 %v1_11f20, i32* @r5, align 4
  %v3_11f30 = call i32 @function_12368(i32 %v1_11f20, i32 ptrtoint (i32* @global_var_155ec.285 to i32), i32 26)
  store i8 26, i8* bitcast (i32* @global_var_1dce0.286 to i8*), align 4
  %v0_11f40 = load i32, i32* @r5, align 4
  store i32 %v0_11f40, i32* @global_var_1dcdc.287, align 4
  %v0_11f44 = load i32, i32* @r6, align 4
  %v1_11f44 = trunc i32 %v0_11f44 to i8
  store i8 %v1_11f44, i8* bitcast (i32* @global_var_1dce1.288 to i8*), align 4
  %v1_11f48 = call i32 @function_13678(i32 9)
  store i32 %v1_11f48, i32* @r5, align 4
  %v3_11f58 = call i32 @function_12368(i32 %v1_11f48, i32 ptrtoint (i32* @global_var_15608.290 to i32), i32 9)
  store i8 9, i8* bitcast (i32* @global_var_1dce8.291 to i8*), align 4
  %v0_11f68 = load i32, i32* @r5, align 4
  store i32 %v0_11f68, i32* @global_var_1dce4.292, align 4
  %v0_11f6c = load i32, i32* @r6, align 4
  %v1_11f6c = trunc i32 %v0_11f6c to i8
  store i8 %v1_11f6c, i8* bitcast (i32* @global_var_1dce9.293 to i8*), align 4
  %v1_11f70 = call i32 @function_13678(i32 16)
  store i32 %v1_11f70, i32* @r5, align 4
  store i32 16, i32* %sb.global-to-local, align 4
  %v3_11f84 = call i32 @function_12368(i32 %v1_11f70, i32 ptrtoint (i32* @global_var_15614.295 to i32), i32 16)
  %v0_11f8c = load i32, i32* @r5, align 4
  store i32 %v0_11f8c, i32* @global_var_1dcec.296, align 4
  store i8 16, i8* bitcast (i32* @global_var_1dcf0.297 to i8*), align 4
  %v0_11f94 = load i32, i32* @r6, align 4
  %v1_11f94 = trunc i32 %v0_11f94 to i8
  store i8 %v1_11f94, i8* bitcast (i32* @global_var_1dcf1.298 to i8*), align 4
  %v1_11f98 = call i32 @function_13678(i32 22)
  store i32 %v1_11f98, i32* @r5, align 4
  %v3_11fa8 = call i32 @function_12368(i32 %v1_11f98, i32 ptrtoint (i32* @global_var_15628.300 to i32), i32 22)
  %v0_11fb0 = load i32, i32* %r8.global-to-local, align 4
  store i8 22, i8* bitcast (i32* @global_var_1dcf8.301 to i8*), align 4
  %v0_11fb8 = load i32, i32* @r5, align 4
  store i32 %v0_11fb8, i32* @global_var_1dcf4.302, align 4
  %v0_11fbc = load i32, i32* @r6, align 4
  %v1_11fbc = trunc i32 %v0_11fbc to i8
  store i8 %v1_11fbc, i8* bitcast (i32* @global_var_1dcf9.303 to i8*), align 4
  %v1_11fc0 = call i32 @function_13678(i32 %v0_11fb0)
  %v0_11fc4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_11fc0, i32* @r5, align 4
  %v3_11fd0 = call i32 @function_12368(i32 %v1_11fc0, i32 ptrtoint (i32* @global_var_15640.305 to i32), i32 %v0_11fc4)
  %v0_11fd8 = load i32, i32* @r5, align 4
  store i32 %v0_11fd8, i32* @global_var_1dcfc.306, align 4
  %v1_11fdc = trunc i32 %v0_11fc4 to i8
  store i8 %v1_11fdc, i8* bitcast (i32* @global_var_1dd00.307 to i8*), align 4
  %v0_11fe0 = load i32, i32* @r6, align 4
  %v1_11fe0 = trunc i32 %v0_11fe0 to i8
  store i8 %v1_11fe0, i8* bitcast (i32* @global_var_1dd01.308 to i8*), align 4
  %v1_11fe4 = call i32 @function_13678(i32 5)
  store i32 %v1_11fe4, i32* @r5, align 4
  %v3_11ff4 = call i32 @function_12368(i32 %v1_11fe4, i32 ptrtoint (i32* @global_var_15648.310 to i32), i32 5)
  store i8 5, i8* bitcast (i32* @global_var_1dd08.311 to i8*), align 4
  %v0_12004 = load i32, i32* @r5, align 4
  store i32 %v0_12004, i32* @global_var_1dd04.312, align 4
  %v0_12008 = load i32, i32* @r6, align 4
  %v1_12008 = trunc i32 %v0_12008 to i8
  store i8 %v1_12008, i8* bitcast (i32* @global_var_1dd09.313 to i8*), align 4
  %v1_1200c = call i32 @function_13678(i32 4)
  store i32 %v1_1200c, i32* @r5, align 4
  %v3_1201c = call i32 @function_12368(i32 %v1_1200c, i32 ptrtoint (i32* @global_var_15650.315 to i32), i32 4)
  %v0_12024 = load i32, i32* %fp.global-to-local, align 4
  store i8 4, i8* bitcast (i32* @global_var_1dd10.316 to i8*), align 4
  %v0_1202c = load i32, i32* @r5, align 4
  store i32 %v0_1202c, i32* @global_var_1dd0c.317, align 4
  %v0_12030 = load i32, i32* @r6, align 4
  %v1_12030 = trunc i32 %v0_12030 to i8
  store i8 %v1_12030, i8* bitcast (i32* @global_var_1dd11.318 to i8*), align 4
  %v1_12034 = call i32 @function_13678(i32 %v0_12024)
  %v0_1203c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_12034, i32* @r5, align 4
  %v3_12044 = call i32 @function_12368(i32 %v1_12034, i32 ptrtoint (i32* @global_var_15658.320 to i32), i32 %v0_1203c)
  %v0_1204c = load i32, i32* @r5, align 4
  store i32 %v0_1204c, i32* @global_var_1dd14.321, align 4
  %v1_12050 = trunc i32 %v0_1203c to i8
  store i8 %v1_12050, i8* bitcast (i32* @global_var_1dd18.322 to i8*), align 4
  %v0_12054 = load i32, i32* @r6, align 4
  %v1_12054 = trunc i32 %v0_12054 to i8
  store i8 %v1_12054, i8* bitcast (i32* @global_var_1dd19.323 to i8*), align 4
  %v1_12058 = call i32 @function_13678(i32 14)
  store i32 %v1_12058, i32* @r5, align 4
  store i32 14, i32* %sl.global-to-local, align 4
  %v3_1206c = call i32 @function_12368(i32 %v1_12058, i32 ptrtoint (i32* @global_var_15660.325 to i32), i32 14)
  %v0_12074 = load i32, i32* @r5, align 4
  store i32 %v0_12074, i32* @global_var_1dd1c.326, align 4
  store i8 14, i8* bitcast (i32* @global_var_1dd20.327 to i8*), align 4
  %v0_1207c = load i32, i32* @r6, align 4
  %v1_1207c = trunc i32 %v0_1207c to i8
  store i8 %v1_1207c, i8* bitcast (i32* @global_var_1dd21.328 to i8*), align 4
  %v1_12080 = call i32 @function_13678(i32 8)
  store i32 8, i32* @r7, align 4
  store i32 %v1_12080, i32* @r5, align 4
  %v3_12094 = call i32 @function_12368(i32 %v1_12080, i32 ptrtoint (i32* @global_var_15670.330 to i32), i32 8)
  %v0_12098 = load i32, i32* %r8.global-to-local, align 4
  %v0_1209c = load i32, i32* @r5, align 4
  store i32 %v0_1209c, i32* @global_var_1dd7c.331, align 4
  %v0_120a0 = load i32, i32* @r7, align 4
  %v1_120a0 = trunc i32 %v0_120a0 to i8
  store i8 %v1_120a0, i8* bitcast (i32* @global_var_1dd80.332 to i8*), align 4
  %v0_120a4 = load i32, i32* @r6, align 4
  %v1_120a4 = trunc i32 %v0_120a4 to i8
  store i8 %v1_120a4, i8* bitcast (i32* @global_var_1dd81.333 to i8*), align 4
  %v1_120a8 = call i32 @function_13678(i32 %v0_12098)
  %v0_120ac = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_120a8, i32* @r5, align 4
  %v3_120b8 = call i32 @function_12368(i32 %v1_120a8, i32 ptrtoint (i32* @global_var_1567c.335 to i32), i32 %v0_120ac)
  %v0_120bc = load i32, i32* %sb.global-to-local, align 4
  %v0_120c0 = load i32, i32* @r5, align 4
  store i32 %v0_120c0, i32* @global_var_1dd84.336, align 4
  %v1_120c4 = trunc i32 %v0_120ac to i8
  store i8 %v1_120c4, i8* bitcast (i32* @global_var_1dd88.337 to i8*), align 4
  %v0_120c8 = load i32, i32* @r6, align 4
  %v1_120c8 = trunc i32 %v0_120c8 to i8
  store i8 %v1_120c8, i8* bitcast (i32* @global_var_1dd89.338 to i8*), align 4
  %v1_120cc = call i32 @function_13678(i32 %v0_120bc)
  %v0_120d4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v1_120cc, i32* @r5, align 4
  %v3_120dc = call i32 @function_12368(i32 %v1_120cc, i32 ptrtoint (i32* @global_var_15684.340 to i32), i32 %v0_120d4)
  %v0_120e0 = load i32, i32* @r7, align 4
  %v0_120e4 = load i32, i32* @r5, align 4
  store i32 %v0_120e4, i32* @global_var_1dd24.341, align 4
  %v1_120e8 = trunc i32 %v0_120d4 to i8
  store i8 %v1_120e8, i8* bitcast (i32* @global_var_1dd28.342 to i8*), align 4
  %v0_120ec = load i32, i32* @r6, align 4
  %v1_120ec = trunc i32 %v0_120ec to i8
  store i8 %v1_120ec, i8* bitcast (i32* @global_var_1dd29.343 to i8*), align 4
  %v1_120f0 = call i32 @function_13678(i32 %v0_120e0)
  store i32 ptrtoint (i32* @global_var_15698.345 to i32), i32* %r8.global-to-local, align 4
  %v0_120f8 = load i32, i32* @r7, align 4
  store i32 %v1_120f0, i32* @r5, align 4
  %v3_12104 = call i32 @function_12368(i32 %v1_120f0, i32 ptrtoint (i32* @global_var_15698.345 to i32), i32 %v0_120f8)
  %v0_1210c = load i32, i32* @r5, align 4
  store i32 %v0_1210c, i32* @global_var_1dd2c.346, align 4
  %v0_12110 = load i32, i32* @r7, align 4
  %v1_12110 = trunc i32 %v0_12110 to i8
  store i8 %v1_12110, i8* bitcast (i32* @global_var_1dd30.347 to i8*), align 4
  %v0_12114 = load i32, i32* @r6, align 4
  %v1_12114 = trunc i32 %v0_12114 to i8
  store i8 %v1_12114, i8* bitcast (i32* @global_var_1dd31.348 to i8*), align 4
  %v1_12118 = call i32 @function_13678(i32 21)
  store i32 %v1_12118, i32* @r5, align 4
  %v3_12128 = call i32 @function_12368(i32 %v1_12118, i32 ptrtoint (i32* @global_var_156cc.350 to i32), i32 21)
  store i8 21, i8* bitcast (i32* @global_var_1dd38.351 to i8*), align 4
  %v0_12138 = load i32, i32* @r5, align 4
  store i32 %v0_12138, i32* @global_var_1dd34.352, align 4
  %v0_1213c = load i32, i32* @r6, align 4
  %v1_1213c = trunc i32 %v0_1213c to i8
  store i8 %v1_1213c, i8* bitcast (i32* @global_var_1dd39.353 to i8*), align 4
  %v1_12140 = call i32 @function_13678(i32 17)
  store i32 %v1_12140, i32* @r5, align 4
  %v3_12150 = call i32 @function_12368(i32 %v1_12140, i32 ptrtoint (i32* @global_var_156a4.355 to i32), i32 17)
  store i8 17, i8* bitcast (i32* @global_var_1dd40.356 to i8*), align 4
  %v0_12160 = load i32, i32* @r5, align 4
  store i32 %v0_12160, i32* @global_var_1dd3c.357, align 4
  %v0_12164 = load i32, i32* @r6, align 4
  %v1_12164 = trunc i32 %v0_12164 to i8
  store i8 %v1_12164, i8* bitcast (i32* @global_var_1dd41.358 to i8*), align 4
  %v1_12168 = call i32 @function_13678(i32 11)
  store i32 %v1_12168, i32* @r5, align 4
  %v3_12178 = call i32 @function_12368(i32 %v1_12168, i32 ptrtoint (i32* @global_var_156b8.360 to i32), i32 11)
  %v0_12180 = load i32, i32* %sl.global-to-local, align 4
  store i8 11, i8* bitcast (i32* @global_var_1dd48.361 to i8*), align 4
  %v0_12188 = load i32, i32* @r5, align 4
  store i32 %v0_12188, i32* @global_var_1dd44.362, align 4
  %v0_1218c = load i32, i32* @r6, align 4
  %v1_1218c = trunc i32 %v0_1218c to i8
  store i8 %v1_1218c, i8* bitcast (i32* @global_var_1dd49.363 to i8*), align 4
  %v1_12190 = call i32 @function_13678(i32 %v0_12180)
  %v0_12198 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_12190, i32* @r5, align 4
  %v3_121a0 = call i32 @function_12368(i32 %v1_12190, i32 ptrtoint (i32* @global_var_156e4.365 to i32), i32 %v0_12198)
  %v0_121a8 = load i32, i32* @r5, align 4
  store i32 %v0_121a8, i32* @global_var_1dd4c.366, align 4
  %v1_121ac = trunc i32 %v0_12198 to i8
  store i8 %v1_121ac, i8* bitcast (i32* @global_var_1dd50.367 to i8*), align 4
  %v0_121b0 = load i32, i32* @r6, align 4
  %v1_121b0 = trunc i32 %v0_121b0 to i8
  store i8 %v1_121b0, i8* bitcast (i32* @global_var_1dd51.368 to i8*), align 4
  %v1_121b4 = call i32 @function_13678(i32 19)
  store i32 %v1_121b4, i32* @r5, align 4
  %v3_121c4 = call i32 @function_12368(i32 %v1_121b4, i32 ptrtoint (i32* @global_var_156f4.370 to i32), i32 19)
  %v0_121cc = load i32, i32* @r7, align 4
  store i8 19, i8* bitcast (i32* @global_var_1dd58.371 to i8*), align 4
  %v0_121d4 = load i32, i32* @r5, align 4
  store i32 %v0_121d4, i32* @global_var_1dd54.372, align 4
  %v0_121d8 = load i32, i32* @r6, align 4
  %v1_121d8 = trunc i32 %v0_121d8 to i8
  store i8 %v1_121d8, i8* bitcast (i32* @global_var_1dd59.373 to i8*), align 4
  %v1_121dc = call i32 @function_13678(i32 %v0_121cc)
  %v0_121e0 = load i32, i32* %r8.global-to-local, align 4
  %v0_121e4 = load i32, i32* @r7, align 4
  store i32 %v1_121dc, i32* @r5, align 4
  %v3_121ec = call i32 @function_12368(i32 %v1_121dc, i32 %v0_121e0, i32 %v0_121e4)
  %v0_121f4 = load i32, i32* @r5, align 4
  store i32 %v0_121f4, i32* @global_var_1dd5c.374, align 4
  %v0_121f8 = load i32, i32* @r7, align 4
  %v1_121f8 = trunc i32 %v0_121f8 to i8
  store i8 %v1_121f8, i8* bitcast (i32* @global_var_1dd60.375 to i8*), align 4
  %v0_121fc = load i32, i32* @r6, align 4
  %v1_121fc = trunc i32 %v0_121fc to i8
  store i8 %v1_121fc, i8* bitcast (i32* @global_var_1dd61.376 to i8*), align 4
  %v1_12200 = call i32 @function_13678(i32 5)
  store i32 %v1_12200, i32* @r5, align 4
  %v3_12210 = call i32 @function_12368(i32 %v1_12200, i32 ptrtoint (i32* @global_var_15708.378 to i32), i32 5)
  %v0_12218 = load i32, i32* %fp.global-to-local, align 4
  store i8 5, i8* bitcast (i32* @global_var_1dd68.379 to i8*), align 4
  %v0_12220 = load i32, i32* @r5, align 4
  store i32 %v0_12220, i32* @global_var_1dd64.380, align 4
  %v0_12224 = load i32, i32* @r6, align 4
  %v1_12224 = trunc i32 %v0_12224 to i8
  store i8 %v1_12224, i8* bitcast (i32* @global_var_1dd69.381 to i8*), align 4
  %v1_12228 = call i32 @function_13678(i32 %v0_12218)
  %v0_12230 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_12228, i32* @r5, align 4
  %v3_12238 = call i32 @function_12368(i32 %v1_12228, i32 ptrtoint (i32* @global_var_156c4.383 to i32), i32 %v0_12230)
  %v0_12240 = load i32, i32* @r5, align 4
  store i32 %v0_12240, i32* @global_var_1dd6c.384, align 4
  %v1_12244 = trunc i32 %v0_12230 to i8
  store i8 %v1_12244, i8* bitcast (i32* @global_var_1dd70.385 to i8*), align 4
  %v0_12248 = load i32, i32* @r6, align 4
  %v1_12248 = trunc i32 %v0_12248 to i8
  store i8 %v1_12248, i8* bitcast (i32* @global_var_1dd71.386 to i8*), align 4
  %v1_1224c = call i32 @function_13678(i32 23)
  %v3_1225c = call i32 @function_12368(i32 %v1_1224c, i32 ptrtoint (i32* @global_var_15710.388 to i32), i32 23)
  %v0_12264 = load i32, i32* @r6, align 4
  %v1_12264 = trunc i32 %v0_12264 to i8
  store i8 %v1_12264, i8* bitcast (i32* @global_var_1dd79.389 to i8*), align 4
  store i32 %v1_1224c, i32* @global_var_1dd74.390, align 4
  store i8 23, i8* bitcast (i32* @global_var_1dd78.391 to i8*), align 4
  %v2_12270 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_12270, i32* @r4, align 4
  store i32 %v9_11dd8, i32* @r6, align 4
  store i32 %v12_11dd8, i32* @r7, align 4
  ret i32 %v3_1225c

; uselistorder directives
  uselistorder i32 %v1_12228, { 1, 0 }
  uselistorder i32 %v1_121dc, { 1, 0 }
  uselistorder i32 %v1_12190, { 1, 0 }
  uselistorder i32 %v1_120f0, { 1, 0 }
  uselistorder i32 %v1_120cc, { 1, 0 }
  uselistorder i32 %v1_120a8, { 1, 0 }
  uselistorder i32 %v1_12080, { 1, 0 }
  uselistorder i32 %v1_12034, { 1, 0 }
  uselistorder i32 %v1_11fc0, { 1, 0 }
  uselistorder i32 %v1_11eac, { 1, 0 }
  uselistorder i32 %v1_11e84, { 1, 0 }
  uselistorder i32 %v1_11e5c, { 1, 0 }
  uselistorder i32 %v1_11e10, { 1, 0 }
  uselistorder i32 %v1_11de0, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i8 23, { 1, 2, 0, 3 }
  uselistorder i8 4, { 2, 0, 1 }
  uselistorder i8 5, { 12, 13, 14, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder i8 16, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i8 6, { 0, 3, 1, 4, 5, 2 }
  uselistorder i32 (i32, i32, i32)* @function_12368, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 6, 5, 4, 3, 2, 1, 0, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1dc94.237 to i32), { 5, 0, 1, 2, 3, 4, 6 }
}

define i32 @function_122ec(i8* %arg1) local_unnamed_addr {
dec_label_pc_122ec:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r2, align 4
  %v3_122f0 = load i8, i8* %arg1, align 1
  %v4_122f0 = zext i8 %v3_122f0 to i32
  %v2_122f4 = icmp eq i8 %v3_122f0, 0
  br i1 %v2_122f4, label %dec_label_pc_12310, label %bb

dec_label_pc_12310:                               ; preds = %dec_label_pc_12300, %dec_label_pc_122ec
  %merge = phi i32 [ %v4_122f0, %dec_label_pc_122ec ], [ %v1_12300, %dec_label_pc_12300 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_122ec
  br label %dec_label_pc_12300

dec_label_pc_12300:                               ; preds = %dec_label_pc_12300, %bb
  %v0_12300 = phi i32 [ %v1_12300, %dec_label_pc_12300 ], [ 0, %bb ]
  %v1_12300 = add i32 %v0_12300, 1
  %v2_12304 = add i32 %v1_12300, %tmp
  %v3_12304 = inttoptr i32 %v2_12304 to i8*
  %v4_12304 = load i8, i8* %v3_12304, align 1
  %v2_12308 = icmp eq i8 %v4_12304, 0
  br i1 %v2_12308, label %dec_label_pc_12310, label %dec_label_pc_12300

; uselistorder directives
  uselistorder i32 %v1_12300, { 1, 0, 2 }
}

define i32 @function_12314(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12314:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_12314 = load i8, i8* %arg1, align 1
  %v3_12314 = zext i8 %v2_12314 to i32
  %v2_12318 = icmp eq i8 %v2_12314, 0
  br i1 %v2_12318, label %dec_label_pc_1235c, label %dec_label_pc_12320

dec_label_pc_12320:                               ; preds = %dec_label_pc_12314
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12324

dec_label_pc_12324:                               ; preds = %dec_label_pc_12324, %dec_label_pc_12320
  %v0_12324 = phi i32 [ %v1_12324, %dec_label_pc_12324 ], [ 0, %dec_label_pc_12320 ]
  %v1_12324 = add i32 %v0_12324, 1
  store i32 %v1_12324, i32* %ip.global-to-local, align 4
  %v2_12328 = add i32 %v1_12324, %tmp
  %v3_12328 = inttoptr i32 %v2_12328 to i8*
  %v4_12328 = load i8, i8* %v3_12328, align 1
  %v2_1232c = icmp eq i8 %v4_12328, 0
  br i1 %v2_1232c, label %dec_label_pc_12334, label %dec_label_pc_12324

dec_label_pc_12334:                               ; preds = %dec_label_pc_12324
  %v7_12334 = icmp eq i32 %v0_12324, -2
  br i1 %v7_12334, label %dec_label_pc_12354, label %dec_label_pc_12340.preheader

dec_label_pc_12340.preheader:                     ; preds = %dec_label_pc_12334, %dec_label_pc_1235c
  %storemerge = phi i32 [ %v3_12314, %dec_label_pc_1235c ], [ %v1_12324, %dec_label_pc_12334 ]
  %v2_1234c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_12340

dec_label_pc_12340:                               ; preds = %dec_label_pc_12340.dec_label_pc_12340_crit_edge, %dec_label_pc_12340.preheader
  %v2_1234c = phi i32 [ %v5_1234c, %dec_label_pc_12340.dec_label_pc_12340_crit_edge ], [ %v2_1234c.pre, %dec_label_pc_12340.preheader ]
  %v0_12344 = phi i32 [ %v0_12344.pre, %dec_label_pc_12340.dec_label_pc_12340_crit_edge ], [ %tmp, %dec_label_pc_12340.preheader ]
  %v0_12340 = phi i32 [ %v0_12340.pre, %dec_label_pc_12340.dec_label_pc_12340_crit_edge ], [ %storemerge, %dec_label_pc_12340.preheader ]
  %v1_12340 = add i32 %v0_12340, -1
  store i32 %v1_12340, i32* @r2, align 4
  %v1_12344 = inttoptr i32 %v0_12344 to i8*
  %v2_12344 = load i8, i8* %v1_12344, align 1
  %v5_12344 = add i32 %v0_12344, 1
  store i32 %v5_12344, i32* %r1.global-to-local, align 4
  %v3_12348 = icmp eq i32 %v0_12340, 0
  %v3_1234c = inttoptr i32 %v2_1234c to i8*
  store i8 %v2_12344, i8* %v3_1234c, align 1
  %v4_1234c = load i32, i32* @r0, align 4
  %v5_1234c = add i32 %v4_1234c, 1
  store i32 %v5_1234c, i32* @r0, align 4
  br i1 %v3_12348, label %dec_label_pc_12354.loopexit, label %dec_label_pc_12340.dec_label_pc_12340_crit_edge

dec_label_pc_12340.dec_label_pc_12340_crit_edge:  ; preds = %dec_label_pc_12340
  %v0_12340.pre = load i32, i32* @r2, align 4
  %v0_12344.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12340

dec_label_pc_12354.loopexit:                      ; preds = %dec_label_pc_12340
  %v0_12354.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12354

dec_label_pc_12354:                               ; preds = %dec_label_pc_12354.loopexit, %dec_label_pc_12334
  %v0_12354 = phi i32 [ %v0_12354.pre, %dec_label_pc_12354.loopexit ], [ %v1_12324, %dec_label_pc_12334 ]
  ret i32 %v0_12354

dec_label_pc_1235c:                               ; preds = %dec_label_pc_12314
  store i32 %v3_12314, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12340.preheader

; uselistorder directives
  uselistorder i32 %v5_1234c, { 1, 0 }
  uselistorder i32 %v0_12344, { 1, 0 }
  uselistorder i32 %v1_12324, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v3_12314, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12340.preheader, { 1, 0 }
}

define i32 @function_12368(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12368:
  %ip.global-to-local = alloca i32, align 4
  %v2_12368 = icmp eq i32 %arg3, 0
  br i1 %v2_12368, label %.loopexit, label %bb

.loopexit:                                        ; preds = %dec_label_pc_12374, %dec_label_pc_12368
  ret i32 %arg1

bb:                                               ; preds = %dec_label_pc_12368
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12374

dec_label_pc_12374:                               ; preds = %dec_label_pc_12374, %bb
  %v0_12374 = phi i32 [ %v1_1237c, %dec_label_pc_12374 ], [ 0, %bb ]
  %v2_12374 = add i32 %v0_12374, %arg2
  %v3_12374 = inttoptr i32 %v2_12374 to i8*
  %v4_12374 = load i8, i8* %v3_12374, align 1
  %v4_12378 = add i32 %v0_12374, %arg1
  %v5_12378 = inttoptr i32 %v4_12378 to i8*
  store i8 %v4_12374, i8* %v5_12378, align 1
  %v0_1237c = load i32, i32* %ip.global-to-local, align 4
  %v1_1237c = add i32 %v0_1237c, 1
  store i32 %v1_1237c, i32* %ip.global-to-local, align 4
  %v9_12380 = icmp eq i32 %v1_1237c, %arg3
  br i1 %v9_12380, label %.loopexit, label %dec_label_pc_12374

; uselistorder directives
  uselistorder i32 %v1_1237c, { 1, 2, 0 }
}

define i32 @function_1238c() local_unnamed_addr {
dec_label_pc_1238c:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v0_1238c = load i32, i32* @r1, align 4
  %v2_1238c = icmp eq i32 %v0_1238c, 0
  br i1 %v2_1238c, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_1238c
  %v2_12390 = load i32, i32* @r0, align 4
  ret i32 %v2_12390

bb3:                                              ; preds = %dec_label_pc_1238c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1239c

dec_label_pc_1239c:                               ; preds = %dec_label_pc_1239c.dec_label_pc_1239c_crit_edge, %bb3
  %v2_1239c = phi i32 [ %v1_123a0, %dec_label_pc_1239c.dec_label_pc_1239c_crit_edge ], [ 0, %bb3 ]
  %v0_1239c.off0 = phi i8 [ %extract.t, %dec_label_pc_1239c.dec_label_pc_1239c_crit_edge ], [ 0, %bb3 ]
  %v3_1239c = load i32, i32* @r0, align 4
  %v4_1239c = add i32 %v3_1239c, %v2_1239c
  %v5_1239c = inttoptr i32 %v4_1239c to i8*
  store i8 %v0_1239c.off0, i8* %v5_1239c, align 1
  %v0_123a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_123a0 = add i32 %v0_123a0, 1
  store i32 %v1_123a0, i32* %r3.global-to-local, align 4
  %v1_123a4 = load i32, i32* @r1, align 4
  %v9_123a4 = icmp eq i32 %v1_123a0, %v1_123a4
  br i1 %v9_123a4, label %dec_label_pc_123ac, label %dec_label_pc_1239c.dec_label_pc_1239c_crit_edge

dec_label_pc_1239c.dec_label_pc_1239c_crit_edge:  ; preds = %dec_label_pc_1239c
  %v0_1239c.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_1239c.pre to i8
  br label %dec_label_pc_1239c

dec_label_pc_123ac:                               ; preds = %dec_label_pc_1239c
  %v1_123ac = load i32, i32* @r0, align 4
  ret i32 %v1_123ac

; uselistorder directives
  uselistorder i32 %v1_123a0, { 1, 2, 0 }
}

define i32 @function_123b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_123b0:
  %v7_123c4 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_123c4, label %dec_label_pc_123c8, label %dec_label_pc_123d0

dec_label_pc_123c8:                               ; preds = %dec_label_pc_123e4, %dec_label_pc_123b0, %dec_label_pc_123d0
  ret i32 -1

dec_label_pc_123d0:                               ; preds = %dec_label_pc_123b0
  %tmp10 = icmp slt i32 %arg2, 1
  br i1 %tmp10, label %dec_label_pc_123c8, label %dec_label_pc_123d8

dec_label_pc_123d8:                               ; preds = %dec_label_pc_123d0
  br label %dec_label_pc_123f0

dec_label_pc_123e4:                               ; preds = %dec_label_pc_12408, %dec_label_pc_123f0
  %v1_123e4 = add i32 %v0_12410, 1
  %v9_123e8 = icmp eq i32 %v1_123e4, %arg2
  br i1 %v9_123e8, label %dec_label_pc_123c8, label %dec_label_pc_123f0

dec_label_pc_123f0:                               ; preds = %dec_label_pc_123e4, %dec_label_pc_123d8
  %v0_12410 = phi i32 [ %v1_123e4, %dec_label_pc_123e4 ], [ 0, %dec_label_pc_123d8 ]
  %v0_123fc = phi i32 [ %v1_123fc., %dec_label_pc_123e4 ], [ 0, %dec_label_pc_123d8 ]
  %v2_123f0 = add i32 %v0_123fc, %arg3
  %v3_123f0 = inttoptr i32 %v2_123f0 to i8*
  %v4_123f0 = load i8, i8* %v3_123f0, align 1
  %v2_123f4 = add i32 %v0_12410, %arg1
  %v3_123f4 = inttoptr i32 %v2_123f4 to i8*
  %v4_123f4 = load i8, i8* %v3_123f4, align 1
  %v9_123f8 = icmp eq i8 %v4_123f4, %v4_123f0
  %v1_123fc = add i32 %v0_123fc, 1
  %v1_123fc. = select i1 %v9_123f8, i32 %v1_123fc, i32 0
  br i1 %v9_123f8, label %dec_label_pc_12408, label %dec_label_pc_123e4

dec_label_pc_12408:                               ; preds = %dec_label_pc_123f0
  %v9_12408 = icmp eq i32 %v1_123fc., %arg4
  br i1 %v9_12408, label %dec_label_pc_12410, label %dec_label_pc_123e4

dec_label_pc_12410:                               ; preds = %dec_label_pc_12408
  %v1_12410 = add i32 %v0_12410, 1
  ret i32 %v1_12410

; uselistorder directives
  uselistorder i1 %v9_123f8, { 1, 0 }
  uselistorder i32 %v0_123fc, { 1, 0 }
  uselistorder label %dec_label_pc_123c8, { 0, 2, 1 }
}

define i32 @function_12418(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12418:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v3_12418 = load i32, i32* @r4, align 4
  store i32 %v3_12418, i32* %stack_var_-28, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12424

dec_label_pc_12424:                               ; preds = %.thread, %dec_label_pc_1243c, %bb, %dec_label_pc_12418
  %v0_12424 = phi i32 [ %tmp, %dec_label_pc_12418 ], [ %v5_12424, %bb ], [ %v5_12424, %dec_label_pc_1243c ], [ %v5_12424, %.thread ]
  %v1_12424 = inttoptr i32 %v0_12424 to i8*
  %v2_12424 = load i8, i8* %v1_12424, align 1
  %v3_12424 = zext i8 %v2_12424 to i32
  %v5_12424 = add i32 %v0_12424, 1
  store i32 %v5_12424, i32* %r5.global-to-local, align 4
  %v7_1242c = icmp eq i8 %v2_12424, 9
  br i1 %v7_1242c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_12424
  store i32 %v3_12424, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12424

bb:                                               ; preds = %dec_label_pc_12424
  %v8_12430 = icmp eq i8 %v2_12424, 32
  store i32 %v3_12424, i32* %r4.global-to-local, align 4
  br i1 %v8_12430, label %dec_label_pc_12424, label %dec_label_pc_1243c

dec_label_pc_1243c:                               ; preds = %bb
  %v7_1243c = icmp eq i8 %v2_12424, 10
  br i1 %v7_1243c, label %dec_label_pc_12424, label %dec_label_pc_12444

dec_label_pc_12444:                               ; preds = %dec_label_pc_1243c
  %v7_12444 = icmp eq i8 %v2_12424, 45
  br i1 %v7_12444, label %dec_label_pc_12524, label %dec_label_pc_1244c

dec_label_pc_1244c:                               ; preds = %dec_label_pc_12444
  %v7_1244c = icmp eq i8 %v2_12424, 43
  br i1 %v7_1244c, label %bb48, label %dec_label_pc_1245c

bb48:                                             ; preds = %dec_label_pc_1244c
  %v2_12450 = inttoptr i32 %v5_12424 to i8*
  %v3_12450 = load i8, i8* %v2_12450, align 1
  %v4_12450 = zext i8 %v3_12450 to i32
  store i32 %v4_12450, i32* %r4.global-to-local, align 4
  %v6_12450 = add i32 %v0_12424, 2
  store i32 %v6_12450, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1245c

dec_label_pc_1245c:                               ; preds = %bb48, %dec_label_pc_1244c, %dec_label_pc_12524
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_12524 ], [ 2147483647, %dec_label_pc_1244c ], [ 2147483647, %bb48 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_12524 ], [ 0, %dec_label_pc_1244c ], [ 0, %bb48 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_12464 = call i32 @function_12978(i32 %storemerge1, i32 %arg2)
  %v0_12468 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12468, i32* @r1, align 4
  store i32 %v2_12464, i32* %r8.global-to-local, align 4
  store i32 %storemerge1, i32* @r0, align 4
  %v0_12474 = call i32 @function_12868()
  store i32 %v0_12474, i32* @lr, align 4
  %v0_12484.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12484

dec_label_pc_12484:                               ; preds = %.thread8, %dec_label_pc_1245c
  %v2_1250011 = phi i32 [ %v1_1251c26, %.thread8 ], [ 0, %dec_label_pc_1245c ]
  %v1_124dc = phi i32 [ %v0_1251024, %.thread8 ], [ 0, %dec_label_pc_1245c ]
  %v1_124c4 = phi i32 [ %v3_12508, %.thread8 ], [ %v0_12484.pre, %dec_label_pc_1245c ]
  %v1_12484 = urem i32 %v1_124c4, 256
  %v1_12488 = add nsw i32 %v1_12484, -48
  %v1_12490 = add nsw i32 %v1_12484, -97
  %v1_12494 = add i32 %v1_124c4, -48
  %v1_12498 = add nsw i32 %v1_12484, -65
  %tmp71 = icmp ult i32 %v1_12488, 10
  br i1 %tmp71, label %dec_label_pc_124c8, label %dec_label_pc_124a0

dec_label_pc_124a0:                               ; preds = %dec_label_pc_12484
  %v2_124a0 = icmp ugt i32 %v1_12498, 24
  %v7_124a0 = icmp eq i32 %v1_12498, 25
  %v2_124a4 = xor i1 %v7_124a0, true
  %v3_124a4 = and i1 %v2_124a0, %v2_124a4
  br i1 %v3_124a4, label %bb49, label %bb50

bb49:                                             ; preds = %dec_label_pc_124a0
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_124a0, %bb49
  %v0_124b820 = phi i32 [ %v1_12494, %dec_label_pc_124a0 ], [ 0, %bb49 ]
  %v2_124a8 = xor i1 %v2_124a0, true
  %v3_124a8 = or i1 %v7_124a0, %v2_124a8
  br i1 %v3_124a8, label %bb51, label %bb52

bb51:                                             ; preds = %bb50
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v0_124b8 = phi i32 [ %v0_124b820, %bb50 ], [ 1, %bb51 ]
  br i1 %v3_124a4, label %bb53, label %bb54

bb53:                                             ; preds = %bb52
  %v6_124b0 = icmp ugt i32 %v1_12490, 24
  %v11_124b0 = icmp eq i32 %v1_12490, 25
  br label %bb54

bb54:                                             ; preds = %bb52, %bb53
  %v1_124b4 = phi i1 [ %v7_124a0, %bb52 ], [ %v11_124b0, %bb53 ]
  %v0_124b4 = phi i1 [ %v2_124a0, %bb52 ], [ %v6_124b0, %bb53 ]
  %v2_124b4 = xor i1 %v1_124b4, true
  %v3_124b4 = and i1 %v0_124b4, %v2_124b4
  br i1 %v3_124b4, label %dec_label_pc_12510, label %dec_label_pc_124b8

dec_label_pc_124b8:                               ; preds = %bb54
  %v2_124b8 = icmp eq i32 %v0_124b8, 0
  %. = select i1 %v2_124b8, i32 87, i32 55
  %v2_124c4 = sub i32 %v1_124c4, %.
  br label %dec_label_pc_124c8

dec_label_pc_124c8:                               ; preds = %dec_label_pc_12484, %dec_label_pc_124b8
  %v0_124dc34 = phi i32 [ %v1_12498, %dec_label_pc_12484 ], [ %., %dec_label_pc_124b8 ]
  %v3_1250012 = phi i32 [ %v1_12494, %dec_label_pc_12484 ], [ %v2_124c4, %dec_label_pc_124b8 ]
  %v1_124c8 = load i32, i32* %r6.global-to-local, align 4
  %v6_124cc = icmp slt i32 %v3_1250012, %v1_124c8
  br i1 %v6_124cc, label %dec_label_pc_124d0, label %dec_label_pc_12510

dec_label_pc_124d0:                               ; preds = %dec_label_pc_124c8
  %v3_124d0 = icmp uge i32 %v2_1250011, %v0_12474
  %v9_124d0 = icmp eq i32 %v2_1250011, %v0_12474
  %v2_124d4 = xor i1 %v3_124d0, true
  %v3_124d4 = or i1 %v9_124d0, %v2_124d4
  br i1 %v3_124d4, label %bb57, label %bb58

bb57:                                             ; preds = %dec_label_pc_124d0
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_124d0, %bb57
  %v0_124dc33 = phi i32 [ %v0_124dc34, %dec_label_pc_124d0 ], [ 0, %bb57 ]
  %v2_124d8 = xor i1 %v9_124d0, true
  %v3_124d8 = and i1 %v3_124d0, %v2_124d8
  br i1 %v3_124d8, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v0_124dc = phi i32 [ %v0_124dc33, %bb58 ], [ 1, %bb59 ]
  %tmp72 = icmp slt i32 %v1_124dc, 0
  %v4_124dc = zext i1 %tmp72 to i32
  %v5_124dc = or i32 %v0_124dc, %v4_124dc
  %v7_124dc = icmp eq i32 %v5_124dc, 0
  br i1 %v7_124dc, label %dec_label_pc_124e8, label %.thread8

dec_label_pc_124e8:                               ; preds = %bb60
  %v1_124f4 = load i32, i32* %r8.global-to-local, align 4
  %v7_124f8 = icmp sgt i32 %v3_1250012, %v1_124f4
  br i1 %v7_124f8, label %bb63, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_124e8
  br label %bb64

bb63:                                             ; preds = %dec_label_pc_124e8
  %v2_124fc = icmp eq i1 %v9_124d0, false
  br i1 %v2_124fc, label %bb64, label %.thread8

bb64:                                             ; preds = %bb63, %.thread5
  %v4_1250013 = mul i32 %v1_124c8, %v2_1250011
  %v5_1250014 = add i32 %v4_1250013, %v3_1250012
  br label %.thread8

.thread8:                                         ; preds = %bb63, %bb60, %bb64
  %v1_1251c26 = phi i32 [ %v2_1250011, %bb63 ], [ %v2_1250011, %bb60 ], [ %v5_1250014, %bb64 ]
  %v0_1251024 = phi i32 [ -1, %bb63 ], [ -1, %bb60 ], [ 1, %bb64 ]
  %v0_12508 = load i32, i32* %r5.global-to-local, align 4
  %v1_12508 = inttoptr i32 %v0_12508 to i8*
  %v2_12508 = load i8, i8* %v1_12508, align 1
  %v3_12508 = zext i8 %v2_12508 to i32
  store i32 %v3_12508, i32* %r4.global-to-local, align 4
  %v5_12508 = add i32 %v0_12508, 1
  store i32 %v5_12508, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12484

dec_label_pc_12510:                               ; preds = %dec_label_pc_124c8, %bb54
  %v1_12510 = icmp slt i32 %v1_124dc, 0
  %v0_12534 = load i32, i32* %sl.global-to-local, align 4
  %v2_12534 = icmp eq i32 %v0_12534, 0
  br i1 %v1_12510, label %dec_label_pc_12534, label %dec_label_pc_12518

dec_label_pc_12518:                               ; preds = %dec_label_pc_12510
  br i1 %v2_12534, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_12518
  %v2_1251c = sub i32 0, %v2_1250011
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_12518, %bb65
  %v23_12520 = phi i32 [ %v2_1250011, %dec_label_pc_12518 ], [ %v2_1251c, %bb65 ]
  %v2_12520 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_12520, i32* @r4, align 4
  ret i32 %v23_12520

dec_label_pc_12524:                               ; preds = %dec_label_pc_12444
  %v1_12524 = inttoptr i32 %v5_12424 to i8*
  %v2_12524 = load i8, i8* %v1_12524, align 1
  %v3_12524 = zext i8 %v2_12524 to i32
  store i32 %v3_12524, i32* %r4.global-to-local, align 4
  %v5_12524 = add i32 %v0_12424, 2
  store i32 %v5_12524, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1245c

dec_label_pc_12534:                               ; preds = %dec_label_pc_12510
  %.70 = select i1 %v2_12534, i32 2147483647, i32 -2147483648
  %v2_12540 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_12540, i32* @r4, align 4
  ret i32 %.70

; uselistorder directives
  uselistorder i32 %v3_12508, { 1, 0 }
  uselistorder i1 %v9_124d0, { 1, 0, 2 }
  uselistorder i1 %v3_124d0, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_124a0, { 1, 2, 0 }
  uselistorder i1 %v2_124a0, { 1, 0, 2 }
  uselistorder i32 %v1_12484, { 1, 2, 0 }
  uselistorder i32 %v1_124c4, { 1, 2, 0 }
  uselistorder i32 %v1_124dc, { 1, 0 }
  uselistorder i32 %v2_1250011, { 0, 1, 6, 3, 2, 4, 5 }
  uselistorder i32 %v0_12474, { 1, 0, 2 }
  uselistorder i32 %v5_12424, { 3, 4, 5, 2, 1, 0 }
  uselistorder i32 %v3_12424, { 1, 0 }
  uselistorder i32 %v0_12424, { 0, 1, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder i8 9, { 3, 4, 0, 1, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %dec_label_pc_124c8, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_1245c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12424, { 1, 2, 0, 3 }
}

define i32 @function_12544(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12544:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_12544 = load i32, i32* @r4, align 4
  store i32 %v3_12544, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1255c

dec_label_pc_1255c:                               ; preds = %dec_label_pc_12588.dec_label_pc_1255c_crit_edge, %dec_label_pc_12544
  %v0_12560 = phi i32 [ %v0_12560.pre, %dec_label_pc_12588.dec_label_pc_1255c_crit_edge ], [ %arg3, %dec_label_pc_12544 ]
  %v0_1255c = phi i32 [ %v1_12574, %dec_label_pc_12588.dec_label_pc_1255c_crit_edge ], [ %tmp, %dec_label_pc_12544 ]
  %tmp12 = inttoptr i32 %v0_1255c to i32*
  %v5_12568 = call i32 @function_12db8(i32 %v0_12560, i32* %tmp12, i32 1)
  %v7_1256c = icmp eq i32 %v5_12568, 1
  %v0_12570 = load i32, i32* @r4, align 4
  %v1_12574 = add i32 %v0_12570, 1
  store i32 %v1_12574, i32* @r4, align 4
  %v0_1257c = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_1256c, label %dec_label_pc_1257c, label %dec_label_pc_12594

dec_label_pc_1257c:                               ; preds = %dec_label_pc_1255c
  %v1_1257c = add i32 %v0_1257c, 1
  store i32 %v1_1257c, i32* %r5.global-to-local, align 4
  %v0_12580 = load i32, i32* %r7.global-to-local, align 4
  %v7_12584 = icmp sgt i32 %v0_12580, %v1_1257c
  br i1 %v7_12584, label %dec_label_pc_12588, label %dec_label_pc_12594

dec_label_pc_12588:                               ; preds = %dec_label_pc_1257c
  %v1_12588 = inttoptr i32 %v0_12570 to i8*
  %v2_12588 = load i8, i8* %v1_12588, align 1
  %v7_1258c = icmp eq i8 %v2_12588, 10
  br i1 %v7_1258c, label %dec_label_pc_12594, label %dec_label_pc_12588.dec_label_pc_1255c_crit_edge

dec_label_pc_12588.dec_label_pc_1255c_crit_edge:  ; preds = %dec_label_pc_12588
  %v0_12560.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1255c

dec_label_pc_12594:                               ; preds = %dec_label_pc_1255c, %dec_label_pc_12588, %dec_label_pc_1257c
  %v0_12594 = phi i32 [ %v1_1257c, %dec_label_pc_12588 ], [ %v1_1257c, %dec_label_pc_1257c ], [ %v0_1257c, %dec_label_pc_1255c ]
  %v2_12594 = icmp eq i32 %v0_12594, 0
  %v1_12598 = load i32, i32* %r8.global-to-local, align 4
  %storemerge = select i1 %v2_12594, i32 0, i32 %v1_12598
  %v2_125a0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_125a0, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_12574, { 1, 0 }
  uselistorder i8 10, { 2, 0, 3, 1 }
  uselistorder i32 (i32, i32*, i32)* @function_12db8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12594, { 1, 2, 0 }
}

define i32 @function_125a4() local_unnamed_addr {
dec_label_pc_125a4:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_125a4 = load i32, i32* @r4, align 4
  store i32 16, i32* @r4, align 4
  store i32 16, i32* %stack_var_-24, align 4
  %v0_125b4 = call i32 @function_131c4()
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_125bc = inttoptr i32 %v0_125b4 to i32*
  store i32 0, i32* %v2_125bc, align 4
  %v0_125c8 = load i32, i32* %r6.global-to-local, align 4
  %v3_125cc = call i32 @function_134e0(i32 2, i32 2, i32 %v0_125c8)
  %v7_125d8 = icmp eq i32 %v3_125cc, -1
  store i32 %v3_125cc, i32* %r5.global-to-local, align 4
  %v2_125e4 = load i32, i32* @r4, align 4
  br i1 %v7_125d8, label %dec_label_pc_12634, label %dec_label_pc_125f8

dec_label_pc_125f8:                               ; preds = %dec_label_pc_125a4
  %v7_125e4 = shl i32 2056, %v2_125e4
  %v8_125e4 = or i32 %v7_125e4, 2056
  store i32 2, i32* %stack_var_-40, align 4
  %v3_12614 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_12614 = call i32 @function_1333c(i32 %v3_125cc, %sockaddr* %v3_12614, i32 %v2_125e4)
  %v2_1261c = ptrtoint i32* %stack_var_-24 to i32
  %v0_12620 = load i32, i32* %r5.global-to-local, align 4
  %v4_12624 = call i32 @function_13368(i32 %v0_12620, %sockaddr* %v3_12614, i32 %v2_1261c)
  %v1_1262c = call i32 @function_12bf0(i32 %v0_12620)
  br label %dec_label_pc_12634

dec_label_pc_12634:                               ; preds = %dec_label_pc_125a4, %dec_label_pc_125f8
  %v0_12634 = phi i32 [ %v0_125c8, %dec_label_pc_125a4 ], [ %v8_125e4, %dec_label_pc_125f8 ]
  store i32 %v3_125a4, i32* @r4, align 4
  ret i32 %v0_12634

; uselistorder directives
  uselistorder i32 %v3_125cc, { 1, 2, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, %sockaddr*, i32)* @function_1333c, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 2056, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_134e0, { 22, 23, 20, 21, 19, 6, 5, 4, 3, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 2, 1, 0 }
  uselistorder label %dec_label_pc_12634, { 1, 0 }
}

define i32 @function_12640(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12640:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp20 = ptrtoint i8* %arg1 to i32
  %v3_12644 = load i8, i8* %tmp, align 1
  %v2_12648 = icmp eq i8 %v3_12644, 0
  br i1 %v2_12648, label %bb, label %dec_label_pc_1265c

bb:                                               ; preds = %dec_label_pc_12640
  %v4_12644 = zext i8 %v3_12644 to i32
  br label %dec_label_pc_12670

dec_label_pc_1265c:                               ; preds = %dec_label_pc_12640
  br label %dec_label_pc_12660

dec_label_pc_12660:                               ; preds = %dec_label_pc_12660, %dec_label_pc_1265c
  %v0_12660 = phi i32 [ %v1_12660, %dec_label_pc_12660 ], [ 0, %dec_label_pc_1265c ]
  %v1_12660 = add i32 %v0_12660, 1
  %v2_12664 = add i32 %v1_12660, %arg2
  %v3_12664 = inttoptr i32 %v2_12664 to i8*
  %v4_12664 = load i8, i8* %v3_12664, align 1
  %v2_12668 = icmp eq i8 %v4_12664, 0
  br i1 %v2_12668, label %dec_label_pc_12670, label %dec_label_pc_12660

dec_label_pc_12670:                               ; preds = %dec_label_pc_12660, %bb
  %v0_126b418 = phi i32 [ %v4_12644, %bb ], [ %v1_12660, %dec_label_pc_12660 ]
  %v0_126781 = load i32, i32* @r1, align 4
  %tmp27 = icmp slt i32 %v0_126781, 1
  br i1 %tmp27, label %dec_label_pc_126c4, label %dec_label_pc_12684

dec_label_pc_12684:                               ; preds = %dec_label_pc_12670, %dec_label_pc_12678.backedge
  %v0_1267c.in = phi i32 [ %v0_1267c, %dec_label_pc_12678.backedge ], [ %v0_126781, %dec_label_pc_12670 ]
  %v0_126a8 = phi i32 [ %v1_126a8., %dec_label_pc_12678.backedge ], [ 0, %dec_label_pc_12670 ]
  %v0_12684 = phi i32 [ %v5_12684, %dec_label_pc_12678.backedge ], [ %tmp20, %dec_label_pc_12670 ]
  %v0_1267c = add i32 %v0_1267c.in, -1
  %v1_12684 = inttoptr i32 %v0_12684 to i8*
  %v2_12684 = load i8, i8* %v1_12684, align 1
  %v3_12684 = zext i8 %v2_12684 to i32
  store i32 %v3_12684, i32* @lr, align 4
  %v5_12684 = add i32 %v0_12684, 1
  %v2_12688 = add i32 %v0_126a8, %arg2
  %v3_12688 = inttoptr i32 %v2_12688 to i8*
  %v4_12688 = load i8, i8* %v3_12688, align 1
  %v6_12688 = zext i8 %v4_12688 to i32
  %v1_1268c = add nsw i32 %v3_12684, -65
  %v1_12690 = add nsw i32 %v6_12688, -65
  %tmp35 = icmp ult i32 %v1_1268c, 26
  br i1 %tmp35, label %bb28, label %bb29

bb28:                                             ; preds = %dec_label_pc_12684
  %v5_12698 = or i32 %v3_12684, 96
  store i32 %v5_12698, i32* @lr, align 4
  br label %bb29

bb29:                                             ; preds = %dec_label_pc_12684, %bb28
  %v0_126a4 = phi i32 [ %v3_12684, %dec_label_pc_12684 ], [ %v5_12698, %bb28 ]
  %tmp36 = icmp ult i32 %v1_12690, 26
  br i1 %tmp36, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  %v5_126a0 = or i32 %v6_12688, 96
  br label %bb31

bb31:                                             ; preds = %bb29, %bb30
  %v1_126a4 = phi i32 [ %v6_12688, %bb29 ], [ %v5_126a0, %bb30 ]
  %v9_126a4 = icmp eq i32 %v0_126a4, %v1_126a4
  %v1_126a8 = add i32 %v0_126a8, 1
  %v1_126a8. = select i1 %v9_126a4, i32 %v1_126a8, i32 0
  br i1 %v9_126a4, label %dec_label_pc_126b4, label %dec_label_pc_12678.backedge

dec_label_pc_12678.backedge:                      ; preds = %bb31, %dec_label_pc_126b4
  %tmp32 = icmp slt i32 %v0_1267c, 1
  br i1 %tmp32, label %dec_label_pc_126c4, label %dec_label_pc_12684

dec_label_pc_126b4:                               ; preds = %bb31
  %v9_126b4 = icmp eq i32 %v0_126b418, %v1_126a8.
  br i1 %v9_126b4, label %dec_label_pc_126bc, label %dec_label_pc_12678.backedge

dec_label_pc_126bc:                               ; preds = %dec_label_pc_126b4
  %v2_126bc = sub i32 %v5_12684, %tmp20
  ret i32 %v2_126bc

dec_label_pc_126c4:                               ; preds = %dec_label_pc_12678.backedge, %dec_label_pc_12670
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_126a8., { 1, 0 }
  uselistorder i32 %v0_12684, { 1, 0 }
  uselistorder i32 %v0_126a8, { 1, 0 }
  uselistorder i8 %v3_12644, { 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder label %dec_label_pc_12678.backedge, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %dec_label_pc_12684, { 1, 0 }
}

define i32 @function_126cc(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_126cc:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_126cc = load i8, i8* %arg1, align 1
  %v2_126d0 = icmp eq i8 %v2_126cc, 0
  br i1 %v2_126d0, label %bb, label %dec_label_pc_126dc

bb:                                               ; preds = %dec_label_pc_126cc
  %v3_126cc = zext i8 %v2_126cc to i32
  br label %dec_label_pc_126f0

dec_label_pc_126dc:                               ; preds = %dec_label_pc_126cc
  br label %dec_label_pc_126e0

dec_label_pc_126e0:                               ; preds = %dec_label_pc_126e0, %dec_label_pc_126dc
  %v0_126e0 = phi i32 [ %v1_126e0, %dec_label_pc_126e0 ], [ 0, %dec_label_pc_126dc ]
  %v1_126e0 = add i32 %v0_126e0, 1
  %v2_126e4 = add i32 %v1_126e0, %tmp
  %v3_126e4 = inttoptr i32 %v2_126e4 to i8*
  %v4_126e4 = load i8, i8* %v3_126e4, align 1
  %v2_126e8 = icmp eq i8 %v4_126e4, 0
  br i1 %v2_126e8, label %dec_label_pc_126f0, label %dec_label_pc_126e0

dec_label_pc_126f0:                               ; preds = %dec_label_pc_126e0, %bb
  %v0_12714 = phi i32 [ %v3_126cc, %bb ], [ %v1_126e0, %dec_label_pc_126e0 ]
  %v1_126f0 = inttoptr i32 %arg2 to i8*
  %v2_126f0 = load i8, i8* %v1_126f0, align 1
  %v3_126f0 = zext i8 %v2_126f0 to i32
  %v2_126f4 = icmp eq i8 %v2_126f0, 0
  br i1 %v2_126f4, label %bb22, label %dec_label_pc_12700

bb22:                                             ; preds = %dec_label_pc_126f0
  store i32 %v3_126f0, i32* @r2, align 4
  br label %dec_label_pc_12714

dec_label_pc_12700:                               ; preds = %dec_label_pc_126f0
  br label %dec_label_pc_12704

dec_label_pc_12704:                               ; preds = %dec_label_pc_12704, %dec_label_pc_12700
  %v0_12704 = phi i32 [ %v1_12704, %dec_label_pc_12704 ], [ 0, %dec_label_pc_12700 ]
  %v1_12704 = add i32 %v0_12704, 1
  store i32 %v1_12704, i32* @r2, align 4
  %v2_12708 = add i32 %v1_12704, %arg2
  %v3_12708 = inttoptr i32 %v2_12708 to i8*
  %v4_12708 = load i8, i8* %v3_12708, align 1
  %v2_1270c = icmp eq i8 %v4_12708, 0
  br i1 %v2_1270c, label %dec_label_pc_12714, label %dec_label_pc_12704

dec_label_pc_12714:                               ; preds = %dec_label_pc_12704, %bb22
  %v0_127404 = phi i32 [ %v3_126f0, %bb22 ], [ %v1_12704, %dec_label_pc_12704 ]
  %v9_12714 = icmp eq i32 %v0_12714, %v0_127404
  br i1 %v9_12714, label %dec_label_pc_12740.preheader, label %dec_label_pc_12720

dec_label_pc_12740.preheader:                     ; preds = %dec_label_pc_12714
  %v2_127406 = icmp eq i32 %v0_12714, 0
  br i1 %v2_127406, label %dec_label_pc_12748, label %dec_label_pc_12728

dec_label_pc_12720:                               ; preds = %dec_label_pc_12728, %dec_label_pc_12714
  ret i32 0

dec_label_pc_12728:                               ; preds = %dec_label_pc_12738, %dec_label_pc_12740.preheader
  %v0_12740.in = phi i32 [ %v0_12740, %dec_label_pc_12738 ], [ %v0_12714, %dec_label_pc_12740.preheader ]
  %v0_1273c = phi i32 [ %v1_1273c, %dec_label_pc_12738 ], [ %arg2, %dec_label_pc_12740.preheader ]
  %v0_12738 = phi i32 [ %v1_12738, %dec_label_pc_12738 ], [ %tmp, %dec_label_pc_12740.preheader ]
  %v0_12740 = add i32 %v0_12740.in, -1
  %v1_12728 = inttoptr i32 %v0_12738 to i8*
  %v2_12728 = load i8, i8* %v1_12728, align 1
  %v3_12728 = zext i8 %v2_12728 to i32
  store i32 %v3_12728, i32* @r2, align 4
  %v1_1272c = inttoptr i32 %v0_1273c to i8*
  %v2_1272c = load i8, i8* %v1_1272c, align 1
  %v9_12730 = icmp eq i8 %v2_12728, %v2_1272c
  br i1 %v9_12730, label %dec_label_pc_12738, label %dec_label_pc_12720

dec_label_pc_12738:                               ; preds = %dec_label_pc_12728
  %v1_12738 = add i32 %v0_12738, 1
  %v1_1273c = add i32 %v0_1273c, 1
  %v2_12740 = icmp eq i32 %v0_12740, 0
  br i1 %v2_12740, label %dec_label_pc_12748, label %dec_label_pc_12728

dec_label_pc_12748:                               ; preds = %dec_label_pc_12738, %dec_label_pc_12740.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_12704, { 0, 1, 3, 2 }
  uselistorder i8 %v2_126cc, { 1, 0 }
}

define i32 @function_12750(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12750:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-62 = alloca i32, align 4
  %stack_var_-30 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_12750 = load i32, i32* @r4, align 4
  store i32 %v3_12750, i32* %stack_var_-28, align 4
  %v22_12750 = ptrtoint i32* %stack_var_-28 to i32
  %v0_12754 = load i32, i32* @r2, align 4
  store i32 %v0_12754, i32* %r8.global-to-local, align 4
  %v2_12754 = icmp eq i32 %v0_12754, 0
  store i1 %v2_12754, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v2_12754, label %dec_label_pc_12844, label %dec_label_pc_12764

dec_label_pc_12764:                               ; preds = %dec_label_pc_12750
  %v3_12764 = icmp eq i8 %arg1, 0
  store i1 %v3_12764, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12764, label %.thread, label %dec_label_pc_12778

.thread:                                          ; preds = %dec_label_pc_12764
  %v4_1276c = inttoptr i32 %v0_12754 to i8*
  store i8 48, i8* %v4_1276c, align 1
  %v0_12770.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12770.pr.pr, label %.thread1, label %dec_label_pc_12778

.thread1:                                         ; preds = %.thread
  %v4_12770 = load i32, i32* %r8.global-to-local, align 4
  %v5_12770 = add i32 %v4_12770, 1
  %v6_12770 = inttoptr i32 %v5_12770 to i8*
  store i8 0, i8* %v6_12770, align 1
  %v0_12774.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12774.pr.pr, label %dec_label_pc_12844, label %dec_label_pc_12778

dec_label_pc_12778:                               ; preds = %dec_label_pc_12764, %.thread, %.thread1
  %v7_1277c = icmp eq i32 %arg2, 10
  store i1 %v7_1277c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1277c, label %bb, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_12778
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_12778
  %tmp39 = icmp slt i8 %arg1, 0
  %phitmp = icmp eq i1 %tmp39, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  br i1 %phitmp, label %.thread4, label %dec_label_pc_127a0

.thread4:                                         ; preds = %bb, %.thread21
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_127b0

dec_label_pc_127a0:                               ; preds = %bb
  %v2_127a0 = sub nsw i32 0, %tmp
  store i32 %v2_127a0, i32* %r4.global-to-local, align 4
  store i1 %v3_12764, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12764, label %dec_label_pc_12850, label %dec_label_pc_127b0

dec_label_pc_127b0:                               ; preds = %dec_label_pc_127a0, %.thread4
  %v0_127b810 = phi i32 [ %tmp, %.thread4 ], [ %v2_127a0, %dec_label_pc_127a0 ]
  %storemerge = phi i32 [ 0, %.thread4 ], [ 1, %dec_label_pc_127a0 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r6.global-to-local, align 4
  %v2_127b4 = ptrtoint i32* %stack_var_-30 to i32
  store i32 %v2_127b4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_127b8

dec_label_pc_127b8:                               ; preds = %bb37, %dec_label_pc_127b0
  %v0_127b8 = phi i32 [ %v0_127dc, %bb37 ], [ %v0_127b810, %dec_label_pc_127b0 ]
  store i32 %v0_127b8, i32* %r0.global-to-local, align 4
  %v0_127bc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_127bc, i32* %r1.global-to-local, align 4
  %sext = mul i32 %v0_127b8, 16777216
  %v1_127c0 = sdiv i32 %sext, 16777216
  %v3_127c0 = call i32 @function_12978(i32 %v1_127c0, i32 %v0_127bc)
  store i32 %v3_127c0, i32* %r0.global-to-local, align 4
  %v7_127c4 = icmp eq i32 %v3_127c0, 9
  store i1 %v7_127c4, i1* %cpsr_z.global-to-local, align 1
  %v1_127c8 = add i32 %v3_127c0, 48
  %v0_127cc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_127cc, i32* @r1, align 4
  %v7_127d0 = icmp sgt i32 %v3_127c0, 9
  %extract.t = trunc i32 %v1_127c8 to i8
  br i1 %v7_127d0, label %bb36, label %bb37

bb36:                                             ; preds = %dec_label_pc_127b8
  %v9_127d0 = add i32 %v3_127c0, 55
  %extract.t20 = trunc i32 %v9_127d0 to i8
  br label %bb37

bb37:                                             ; preds = %dec_label_pc_127b8, %bb36
  %v0_127d8.off0 = phi i8 [ %extract.t, %dec_label_pc_127b8 ], [ %extract.t20, %bb36 ]
  %v0_127d4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_127d4, i32* @r0, align 4
  %v2_127d8 = load i32, i32* %r7.global-to-local, align 4
  %v3_127d8 = inttoptr i32 %v2_127d8 to i8*
  store i8 %v0_127d8.off0, i8* %v3_127d8, align 1
  %v4_127d8 = load i32, i32* %r7.global-to-local, align 4
  %v5_127d8 = add i32 %v4_127d8, -1
  store i32 %v5_127d8, i32* %r7.global-to-local, align 4
  %v0_127dc = call i32 @function_12868()
  store i32 %v0_127dc, i32* %r0.global-to-local, align 4
  store i32 %v0_127dc, i32* %r4.global-to-local, align 4
  %v2_127e0 = icmp eq i32 %v0_127dc, 0
  store i1 %v2_127e0, i1* %cpsr_z.global-to-local, align 1
  %v0_127e4 = load i32, i32* %r6.global-to-local, align 4
  %v1_127e4 = add i32 %v0_127e4, -1
  store i32 %v1_127e4, i32* %r6.global-to-local, align 4
  br i1 %v2_127e0, label %dec_label_pc_127ec, label %dec_label_pc_127b8

dec_label_pc_127ec:                               ; preds = %bb37
  %v0_127ec = load i32, i32* %sl.global-to-local, align 4
  %v2_127ec = icmp eq i32 %v0_127ec, 0
  store i1 %v2_127ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_127ec, label %bb38, label %dec_label_pc_12854

bb38:                                             ; preds = %dec_label_pc_127ec
  store i32 %v0_127e4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_127f8

dec_label_pc_127f8:                               ; preds = %bb38, %dec_label_pc_12854
  %v1_12804 = phi i32 [ %v0_127e4, %bb38 ], [ %v1_127fc.pre, %dec_label_pc_12854 ]
  %v2_127f8 = ptrtoint i32* %stack_var_-62 to i32
  %v2_127fc = add i32 %v1_12804, %v2_127f8
  %v3_127fc = inttoptr i32 %v2_127fc to i8*
  %v4_127fc = load i8, i8* %v3_127fc, align 1
  %v6_127fc = zext i8 %v4_127fc to i32
  %v2_12800 = icmp eq i8 %v4_127fc, 0
  store i1 %v2_12800, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_127fc, i32* %r1.global-to-local, align 4
  br i1 %v2_12800, label %dec_label_pc_12828, label %dec_label_pc_1280c

dec_label_pc_1280c:                               ; preds = %dec_label_pc_127f8
  br label %dec_label_pc_12810

dec_label_pc_12810:                               ; preds = %dec_label_pc_12810, %dec_label_pc_1280c
  %v0_12810 = phi i32 [ %v1_12810, %dec_label_pc_12810 ], [ 0, %dec_label_pc_1280c ]
  %v1_12810 = add i32 %v0_12810, 1
  store i32 %v1_12810, i32* @r2, align 4
  %v2_12814 = add i32 %v1_12810, %v2_127fc
  %v3_12814 = inttoptr i32 %v2_12814 to i8*
  %v4_12814 = load i8, i8* %v3_12814, align 1
  %v2_12818 = icmp eq i8 %v4_12814, 0
  store i1 %v2_12818, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12818, label %dec_label_pc_12820, label %dec_label_pc_12810

dec_label_pc_12820:                               ; preds = %dec_label_pc_12810
  %v7_12820 = icmp eq i32 %v0_12810, -2
  store i1 %v7_12820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12820, label %dec_label_pc_12844, label %dec_label_pc_12828

dec_label_pc_12828:                               ; preds = %dec_label_pc_12820, %dec_label_pc_127f8
  %v0_1283017 = phi i32 [ %v1_12810, %dec_label_pc_12820 ], [ %v6_127fc, %dec_label_pc_127f8 ]
  store i32 %v2_127fc, i32* %r0.global-to-local, align 4
  %v0_1282c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1282c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12830

dec_label_pc_12830:                               ; preds = %dec_label_pc_12830.dec_label_pc_12830_crit_edge, %dec_label_pc_12828
  %v2_1283c = phi i32 [ %v5_1283c, %dec_label_pc_12830.dec_label_pc_12830_crit_edge ], [ %v0_1282c, %dec_label_pc_12828 ]
  %v0_12834 = phi i32 [ %v0_12834.pre, %dec_label_pc_12830.dec_label_pc_12830_crit_edge ], [ %v2_127fc, %dec_label_pc_12828 ]
  %v0_12830 = phi i32 [ %v0_12830.pre, %dec_label_pc_12830.dec_label_pc_12830_crit_edge ], [ %v0_1283017, %dec_label_pc_12828 ]
  %v1_12830 = add i32 %v0_12830, -1
  store i32 %v1_12830, i32* @r2, align 4
  %v1_12834 = inttoptr i32 %v0_12834 to i8*
  %v2_12834 = load i8, i8* %v1_12834, align 1
  %v5_12834 = add i32 %v0_12834, 1
  store i32 %v5_12834, i32* %r0.global-to-local, align 4
  %v3_12838 = icmp eq i32 %v0_12830, 0
  store i1 %v3_12838, i1* %cpsr_z.global-to-local, align 1
  %v3_1283c = inttoptr i32 %v2_1283c to i8*
  store i8 %v2_12834, i8* %v3_1283c, align 1
  %v4_1283c = load i32, i32* %r1.global-to-local, align 4
  %v5_1283c = add i32 %v4_1283c, 1
  store i32 %v5_1283c, i32* %r1.global-to-local, align 4
  br i1 %v3_12838, label %dec_label_pc_12844, label %dec_label_pc_12830.dec_label_pc_12830_crit_edge

dec_label_pc_12830.dec_label_pc_12830_crit_edge:  ; preds = %dec_label_pc_12830
  %v0_12830.pre = load i32, i32* @r2, align 4
  %v0_12834.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12830

dec_label_pc_12844:                               ; preds = %dec_label_pc_12830, %dec_label_pc_12820, %.thread1, %dec_label_pc_12750
  %v0_12844 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12844, i32* %r0.global-to-local, align 4
  %v2_1284c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1284c, i32* @r4, align 4
  ret i32 %v0_12844

dec_label_pc_12850:                               ; preds = %dec_label_pc_127a0
  store i32 32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12854

dec_label_pc_12854:                               ; preds = %dec_label_pc_127ec, %dec_label_pc_12850
  %v1_12858 = phi i32 [ %v1_127e4, %dec_label_pc_127ec ], [ 32, %dec_label_pc_12850 ]
  %v2_12858 = add i32 %v1_12858, %v22_12750
  %v3_12860 = add i32 %v2_12858, -34
  %v4_12860 = inttoptr i32 %v3_12860 to i8*
  store i8 45, i8* %v4_12860, align 1
  %v1_127fc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_127f8

; uselistorder directives
  uselistorder i32 %v5_1283c, { 1, 0 }
  uselistorder i1 %v3_12838, { 1, 0 }
  uselistorder i32 %v0_12834, { 1, 0 }
  uselistorder i1 %v7_12820, { 1, 0 }
  uselistorder i32 %v1_12810, { 0, 1, 3, 2 }
  uselistorder i32 %v2_127fc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_127dc, { 1, 2, 3, 0 }
  uselistorder i32 %v3_127c0, { 1, 0, 2, 3, 4 }
  uselistorder i1 %phitmp, { 1, 0 }
  uselistorder i1 %v3_12764, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12754, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 9, 10, 11, 12, 13 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12854, { 1, 0 }
  uselistorder label %dec_label_pc_127f8, { 1, 0 }
  uselistorder label %bb37, { 1, 0 }
  uselistorder label %dec_label_pc_12778, { 2, 1, 0 }
}

define i32 @function_12868() local_unnamed_addr {
dec_label_pc_12868:
  %v0_12868 = load i32, i32* @r1, align 4
  %v1_12868 = add i32 %v0_12868, -1
  %v7_12868 = icmp eq i32 %v0_12868, 1
  br i1 %v7_12868, label %bb, label %bb82

bb:                                               ; preds = %dec_label_pc_12868
  %v2_1286c = load i32, i32* @r0, align 4
  ret i32 %v2_1286c

bb82:                                             ; preds = %dec_label_pc_12868
  %v2_12868 = icmp eq i32 %v0_12868, 0
  br i1 %v2_12868, label %dec_label_pc_12950, label %dec_label_pc_12874

dec_label_pc_12874:                               ; preds = %bb82
  %v0_12874 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_12874, %v0_12868
  br i1 %tmp, label %dec_label_pc_1287c, label %dec_label_pc_12908

dec_label_pc_1287c:                               ; preds = %dec_label_pc_12874
  %v2_1287c = and i32 %v1_12868, %v0_12868
  %v4_1287c = icmp eq i32 %v2_1287c, 0
  br i1 %v4_1287c, label %dec_label_pc_12914, label %dec_label_pc_12884

dec_label_pc_12884:                               ; preds = %dec_label_pc_1287c
  %v3_12884 = icmp ult i32 %v0_12868, 536870912
  br i1 %v3_12884, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_12884
  %v4_12888 = mul i32 %v0_12868, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_12884, %.thread
  %v0_128a8.pr36.ph = phi i32 [ %v4_12888, %.thread ], [ %v0_12868, %dec_label_pc_12884 ]
  %storemerge137 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_12884 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb85
  %v0_128a8.pr36 = phi i32 [ %v4_1289c, %bb85 ], [ %v0_128a8.pr36.ph, %.preheader.preheader ]
  %v1_128a0 = phi i32 [ %v4_128a0, %bb85 ], [ %storemerge137, %.preheader.preheader ]
  %v2_12894 = icmp ugt i32 %v0_128a8.pr36, 268435455
  br i1 %v2_12894, label %.thread2, label %bb83

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_128a8thread-pre-split.loopexit

bb83:                                             ; preds = %.preheader
  %v4_12898 = icmp ult i32 %v0_128a8.pr36, %v0_12874
  br i1 %v4_12898, label %bb84, label %dec_label_pc_128a8thread-pre-split.loopexit.loopexit

bb84:                                             ; preds = %bb83
  %v2_1289c = and i32 %v0_128a8.pr36, 268435456
  %v3_1289c = icmp eq i32 %v2_1289c, 0
  %v4_1289c = mul i32 %v0_128a8.pr36, 16
  br i1 %v3_1289c, label %bb85, label %dec_label_pc_128a8.loopexit

bb85:                                             ; preds = %bb84
  %v2_128a0 = and i32 %v1_128a0, 268435456
  %v3_128a0 = icmp eq i32 %v2_128a0, 0
  %v4_128a0 = mul i32 %v1_128a0, 16
  br i1 %v3_128a0, label %.preheader, label %dec_label_pc_128a8thread-pre-split.loopexit.loopexit

dec_label_pc_128a8thread-pre-split.loopexit.loopexit: ; preds = %bb85, %bb83
  %v1_128b448.ph = phi i32 [ %v1_128a0, %bb83 ], [ %v4_128a0, %bb85 ]
  %v0_128a8.pr38.ph = phi i32 [ %v0_128a8.pr36, %bb83 ], [ %v4_1289c, %bb85 ]
  br label %dec_label_pc_128a8thread-pre-split.loopexit

dec_label_pc_128a8thread-pre-split.loopexit:      ; preds = %dec_label_pc_128a8thread-pre-split.loopexit.loopexit, %.thread2
  %v1_128b448 = phi i32 [ %v1_128a0, %.thread2 ], [ %v1_128b448.ph, %dec_label_pc_128a8thread-pre-split.loopexit.loopexit ]
  %v0_128a8.pr38 = phi i32 [ %v0_128a8.pr36, %.thread2 ], [ %v0_128a8.pr38.ph, %dec_label_pc_128a8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_128a8thread-pre-split

dec_label_pc_128a8thread-pre-split:               ; preds = %dec_label_pc_128a8thread-pre-split.loopexit, %bb87
  %v1_128b446 = phi i32 [ %v1_128b448, %dec_label_pc_128a8thread-pre-split.loopexit ], [ %v3_128b4, %bb87 ]
  %v0_128a8.pr = phi i32 [ %v0_128a8.pr38, %dec_label_pc_128a8thread-pre-split.loopexit ], [ %v3_128b0, %bb87 ]
  br label %dec_label_pc_128a8

dec_label_pc_128a8.loopexit:                      ; preds = %bb84
  br label %dec_label_pc_128a8

dec_label_pc_128a8:                               ; preds = %dec_label_pc_128a8.loopexit, %dec_label_pc_128a8thread-pre-split
  %v1_128b4 = phi i32 [ %v1_128b446, %dec_label_pc_128a8thread-pre-split ], [ %v1_128a0, %dec_label_pc_128a8.loopexit ]
  %v1_128b0 = phi i32 [ %v0_128a8.pr, %dec_label_pc_128a8thread-pre-split ], [ %v4_1289c, %dec_label_pc_128a8.loopexit ]
  %v2_128a8 = icmp slt i32 %v1_128b0, 0
  br i1 %v2_128a8, label %dec_label_pc_128bc, label %bb86

bb86:                                             ; preds = %dec_label_pc_128a8
  %v4_128ac = icmp ult i32 %v1_128b0, %v0_12874
  br i1 %v4_128ac, label %bb87, label %dec_label_pc_128bc

bb87:                                             ; preds = %bb86
  %v3_128b0 = mul i32 %v1_128b0, 2
  %v2_128b4 = icmp slt i32 %v1_128b4, 0
  %v3_128b4 = mul i32 %v1_128b4, 2
  br i1 %v2_128b4, label %dec_label_pc_128bc, label %dec_label_pc_128a8thread-pre-split

dec_label_pc_128bc:                               ; preds = %bb86, %dec_label_pc_128a8, %bb87
  %v2_128c859 = phi i32 [ %v3_128b4, %bb87 ], [ %v1_128b4, %bb86 ], [ %v1_128b4, %dec_label_pc_128a8 ]
  %v1_128c051 = phi i32 [ %v3_128b0, %bb87 ], [ %v1_128b0, %bb86 ], [ %v1_128b0, %dec_label_pc_128a8 ]
  br label %dec_label_pc_128c0

dec_label_pc_128c0:                               ; preds = %.thread11, %dec_label_pc_128bc
  %v1_128f4 = phi i32 [ %v4_128f4, %.thread11 ], [ %v2_128c859, %dec_label_pc_128bc ]
  %v1_128c8 = phi i32 [ %v0_12900, %.thread11 ], [ 0, %dec_label_pc_128bc ]
  %v1_128f8 = phi i32 [ %v4_128f8, %.thread11 ], [ %v1_128c051, %dec_label_pc_128bc ]
  %v1_128c4 = phi i32 [ %v0_128f0, %.thread11 ], [ %v0_12874, %dec_label_pc_128bc ]
  %v3_128c0 = icmp ult i32 %v1_128c4, %v1_128f8
  br i1 %v3_128c0, label %.thread7, label %bb88

bb88:                                             ; preds = %dec_label_pc_128c0
  %v3_128c4 = sub i32 %v1_128c4, %v1_128f8
  %v3_128c8 = or i32 %v1_128c8, %v1_128f4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_128c0, %bb88
  %v1_128d0 = phi i32 [ %v1_128c4, %dec_label_pc_128c0 ], [ %v3_128c4, %bb88 ]
  %v1_128d4 = phi i32 [ %v1_128c8, %dec_label_pc_128c0 ], [ %v3_128c8, %bb88 ]
  %v4_128cc = udiv i32 %v1_128f8, 2
  %v6_128cc = icmp ult i32 %v1_128d0, %v4_128cc
  br i1 %v6_128cc, label %.thread8, label %bb89

bb89:                                             ; preds = %.thread7
  %v3_128d0 = urem i32 %v1_128f8, 2
  %v4_128d0 = icmp eq i32 %v3_128d0, 0
  %v6_128d0 = sub i32 %v1_128d0, %v4_128cc
  br i1 %v4_128d0, label %.thread8, label %bb90

bb90:                                             ; preds = %bb89
  %v5_128d4 = udiv i32 %v1_128f4, 2
  %v6_128d4 = or i32 %v1_128d4, %v5_128d4
  br label %.thread8

.thread8:                                         ; preds = %bb89, %.thread7, %bb90
  %v1_128dc = phi i32 [ %v6_128d0, %bb89 ], [ %v1_128d0, %.thread7 ], [ %v6_128d0, %bb90 ]
  %v1_128e0 = phi i32 [ %v1_128d4, %bb89 ], [ %v1_128d4, %.thread7 ], [ %v6_128d4, %bb90 ]
  %v4_128d8 = udiv i32 %v1_128f8, 4
  %v6_128d8 = icmp ult i32 %v1_128dc, %v4_128d8
  br i1 %v6_128d8, label %.thread9, label %bb91

bb91:                                             ; preds = %.thread8
  %v3_128dc = and i32 %v1_128f8, 2
  %v4_128dc = icmp eq i32 %v3_128dc, 0
  %v6_128dc = sub i32 %v1_128dc, %v4_128d8
  br i1 %v4_128dc, label %.thread9, label %bb92

bb92:                                             ; preds = %bb91
  %v5_128e0 = udiv i32 %v1_128f4, 4
  %v6_128e0 = or i32 %v1_128e0, %v5_128e0
  br label %.thread9

.thread9:                                         ; preds = %bb91, %.thread8, %bb92
  %v1_128e8 = phi i32 [ %v6_128dc, %bb91 ], [ %v1_128dc, %.thread8 ], [ %v6_128dc, %bb92 ]
  %v1_128ec = phi i32 [ %v1_128e0, %bb91 ], [ %v1_128e0, %.thread8 ], [ %v6_128e0, %bb92 ]
  %v4_128e4 = udiv i32 %v1_128f8, 8
  %v6_128e4 = icmp ult i32 %v1_128e8, %v4_128e4
  br i1 %v6_128e4, label %thread-pre-split, label %bb93

bb93:                                             ; preds = %.thread9
  %v3_128e8 = and i32 %v1_128f8, 4
  %v4_128e8 = icmp eq i32 %v3_128e8, 0
  %v6_128e8 = sub i32 %v1_128e8, %v4_128e4
  br i1 %v4_128e8, label %thread-pre-split, label %bb94

bb94:                                             ; preds = %bb93
  %v5_128ec = udiv i32 %v1_128f4, 8
  %v6_128ec = or i32 %v1_128ec, %v5_128ec
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb94, %.thread9, %bb93
  %v0_12900 = phi i32 [ %v1_128ec, %bb93 ], [ %v1_128ec, %.thread9 ], [ %v6_128ec, %bb94 ]
  %v0_128f0 = phi i32 [ %v6_128e8, %bb93 ], [ %v1_128e8, %.thread9 ], [ %v6_128e8, %bb94 ]
  %v2_128f0 = icmp eq i32 %v0_128f0, 0
  br i1 %v2_128f0, label %dec_label_pc_12900, label %bb95

bb95:                                             ; preds = %thread-pre-split
  %tmp142 = icmp ult i32 %v1_128f4, 16
  br i1 %tmp142, label %dec_label_pc_12900, label %.thread11

.thread11:                                        ; preds = %bb95
  %v4_128f4 = udiv i32 %v1_128f4, 16
  %v4_128f8 = udiv i32 %v1_128f8, 16
  br label %dec_label_pc_128c0

dec_label_pc_12900:                               ; preds = %thread-pre-split, %bb95
  ret i32 %v0_12900

dec_label_pc_12908:                               ; preds = %dec_label_pc_12874
  %v9_12874 = icmp eq i32 %v0_12874, %v0_12868
  %. = zext i1 %v9_12874 to i32
  ret i32 %.

dec_label_pc_12914:                               ; preds = %dec_label_pc_1287c
  %v2_12914 = icmp ugt i32 %v0_12868, 65535
  br i1 %v2_12914, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_12914
  %v2_12918 = and i32 %v0_12868, 32768
  %v3_12918 = icmp eq i32 %v2_12918, 0
  %v4_12918 = udiv i32 %v0_12868, 65536
  br i1 %v3_12918, label %.thread16, label %bb100

.thread16:                                        ; preds = %bb99, %dec_label_pc_12914
  %v0_1292465 = phi i32 [ %v0_12868, %dec_label_pc_12914 ], [ %v4_12918, %bb99 ]
  br label %bb100

bb100:                                            ; preds = %bb99, %.thread16
  %v1_12928 = phi i32 [ %v0_1292465, %.thread16 ], [ %v4_12918, %bb99 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb99 ]
  %v2_12924 = icmp ugt i32 %v1_12928, 255
  br i1 %v2_12924, label %bb101, label %.thread17

bb101:                                            ; preds = %bb100
  %v2_12928 = and i32 %v1_12928, 128
  %v3_12928 = icmp eq i32 %v2_12928, 0
  %v4_12928 = udiv i32 %v1_12928, 256
  br i1 %v3_12928, label %.thread17, label %bb102

bb102:                                            ; preds = %bb101
  %v2_1292c = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb101, %bb100, %bb102
  %v1_12938 = phi i32 [ %storemerge, %bb100 ], [ %storemerge, %bb101 ], [ %v2_1292c, %bb102 ]
  %v1_12934 = phi i32 [ %v1_12928, %bb100 ], [ %v4_12928, %bb101 ], [ %v4_12928, %bb102 ]
  %v2_12930 = icmp ugt i32 %v1_12934, 15
  br i1 %v2_12930, label %bb103, label %.thread18

bb103:                                            ; preds = %.thread17
  %v2_12934 = and i32 %v1_12934, 8
  %v3_12934 = icmp eq i32 %v2_12934, 0
  %v4_12934 = udiv i32 %v1_12934, 16
  br i1 %v3_12934, label %.thread18, label %bb104

bb104:                                            ; preds = %bb103
  %v2_12938 = add nsw i32 %v1_12938, 4
  br label %.thread18

.thread18:                                        ; preds = %bb103, %.thread17, %bb104
  %v4_12940 = phi i32 [ %v1_12938, %.thread17 ], [ %v1_12938, %bb103 ], [ %v2_12938, %bb104 ]
  %v5_12944 = phi i32 [ %v1_12934, %.thread17 ], [ %v4_12934, %bb103 ], [ %v4_12934, %bb104 ]
  %v2_1293c = icmp ugt i32 %v5_12944, 3
  %v7_1293c = icmp eq i32 %v5_12944, 4
  %v2_12940 = xor i1 %v7_1293c, true
  %v3_12940 = and i1 %v2_1293c, %v2_12940
  br i1 %v3_12940, label %bb105, label %bb106

bb105:                                            ; preds = %.thread18
  %v5_12940 = add nsw i32 %v4_12940, 3
  br label %bb106

bb106:                                            ; preds = %.thread18, %bb105
  %v4_12944 = phi i32 [ %v4_12940, %.thread18 ], [ %v5_12940, %bb105 ]
  %v2_12944 = xor i1 %v2_1293c, true
  %v3_12944 = or i1 %v7_1293c, %v2_12944
  br i1 %v3_12944, label %bb107, label %bb108

bb107:                                            ; preds = %bb106
  %v8_12944 = udiv i32 %v5_12944, 2
  %v9_12944 = add i32 %v4_12944, %v8_12944
  br label %bb108

bb108:                                            ; preds = %bb106, %bb107
  %v1_12948 = phi i32 [ %v4_12944, %bb106 ], [ %v9_12944, %bb107 ]
  %v6_12948 = lshr i32 %v0_12874, %v1_12948
  ret i32 %v6_12948

dec_label_pc_12950:                               ; preds = %bb82
  %v0_12950 = load i32, i32* @lr, align 4
  %v0_12954 = call i32 @function_12b28()
  store i32 0, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_12950)
  %v9_12960 = load i32, i32* @lr, align 4
  %v0_12964 = call i32 @function_12868()
  store i32 %v9_12960, i32* @lr, align 4
  ret i32 %v0_12964

; uselistorder directives
  uselistorder i32 %v4_12944, { 1, 0 }
  uselistorder i1 %v7_1293c, { 1, 0 }
  uselistorder i32 %v4_12934, { 1, 0 }
  uselistorder i32 %v1_12934, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12928, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_12928, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12918, { 1, 0 }
  uselistorder i32 %v0_128f0, { 1, 0 }
  uselistorder i32 %v4_128e4, { 1, 0 }
  uselistorder i32 %v1_128ec, { 1, 2, 0 }
  uselistorder i32 %v4_128d8, { 1, 0 }
  uselistorder i32 %v1_128e0, { 1, 2, 0 }
  uselistorder i32 %v4_128cc, { 1, 0 }
  uselistorder i32 %v1_128d4, { 1, 2, 0 }
  uselistorder i32 %v1_128f8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_128c8, { 1, 0 }
  uselistorder i32 %v1_128f4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_128b4, { 1, 0 }
  uselistorder i32 %v3_128b0, { 1, 0 }
  uselistorder i32 %v1_128b0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_128b4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_128a0, { 1, 0 }
  uselistorder i32 %v4_1289c, { 2, 1, 0 }
  uselistorder i32 %v1_128a0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_128a8.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_12874, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_12868, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1, 10, 12, 11 }
  uselistorder i32 65535, { 100, 0, 1, 53, 12, 54, 24, 28, 55, 25, 56, 26, 57, 27, 58, 59, 13, 60, 2, 61, 62, 32, 63, 31, 64, 29, 65, 30, 66, 14, 15, 3, 67, 33, 68, 34, 69, 16, 17, 4, 70, 35, 71, 36, 72, 18, 73, 39, 74, 38, 75, 37, 76, 19, 20, 5, 41, 77, 40, 78, 79, 80, 21, 81, 82, 6, 44, 83, 42, 84, 43, 85, 86, 22, 87, 7, 8, 47, 88, 45, 89, 46, 90, 91, 23, 92, 9, 48, 93, 49, 94, 50, 95, 96, 10, 51, 97, 98, 11, 52, 99 }
  uselistorder label %bb108, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %dec_label_pc_12900, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_128bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_128a8thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_12978(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12978:
  store i32 %arg1, i32* @r0, align 4
  %v1_12978 = add i32 %arg2, -1
  %v2_12978 = icmp eq i32 %arg2, 0
  br i1 %v2_12978, label %dec_label_pc_12a34, label %dec_label_pc_12980

dec_label_pc_12980:                               ; preds = %dec_label_pc_12978
  %v7_12978 = icmp eq i32 %arg2, 1
  br i1 %v7_12978, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_12980
  %v1_12980 = load i32, i32* @r0, align 4
  %v10_12980 = icmp eq i32 %v1_12980, %arg2
  br i1 %v10_12980, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_12980, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_12980 = icmp ult i32 %v1_12980, %arg2
  br i1 %v4_12980, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_12988 = and i32 %v1_12978, %arg2
  %v8_12988 = icmp eq i32 %v6_12988, 0
  br i1 %v8_12988, label %.thread67, label %dec_label_pc_12998.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_1298c = phi i32 [ %v1_12980, %bb75 ], [ 0, %.thread65 ]
  %v3_1298c = and i32 %v1_1298c, %v1_12978
  br label %bb76

dec_label_pc_12998.preheader:                     ; preds = %bb75
  %v2_1299899 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_1299899, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_12a28, %bb74, %bb89, %bb84, %dec_label_pc_129f8, %.thread67
  %v5_12990 = phi i32 [ %v1_12980, %bb74 ], [ %v3_1298c, %.thread67 ], [ %v1_129d4.v6_129d4.v6_129dc.v6_129e4, %dec_label_pc_129f8 ], [ 0, %bb84 ], [ %v1_12a2c, %dec_label_pc_12a28 ], [ %v2_12a28, %bb89 ]
  ret i32 %v5_12990

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_12998.preheader
  %v0_129ac.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_12998.preheader ], [ %v4_129a0, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_12998.preheader ], [ %v2_129a411, %.thread1.thread9 ]
  br label %dec_label_pc_129acthread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_12998.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_129a411, %.thread1.thread9 ], [ 0, %dec_label_pc_12998.preheader ]
  %v0_129ac.pr33100 = phi i32 [ %v4_129a0, %.thread1.thread9 ], [ %arg2, %dec_label_pc_12998.preheader ]
  %v4_1299c = icmp ult i32 %v0_129ac.pr33100, %v1_12980
  br i1 %v4_1299c, label %bb78, label %dec_label_pc_129acthread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_129a0 = and i32 %v0_129ac.pr33100, 268435456
  %v3_129a0 = icmp eq i32 %v2_129a0, 0
  %v4_129a0 = mul i32 %v0_129ac.pr33100, 16
  br i1 %v3_129a0, label %.thread1.thread9, label %dec_label_pc_129ac.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_129a411 = add i32 %storemerge101, 4
  %v2_12998 = icmp ugt i32 %v4_129a0, 268435455
  br i1 %v2_12998, label %.thread, label %bb77

dec_label_pc_129acthread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_129acthread-pre-split.loopexit

dec_label_pc_129acthread-pre-split.loopexit:      ; preds = %dec_label_pc_129acthread-pre-split.loopexit.loopexit, %.thread
  %v0_129ac.pr3398 = phi i32 [ %v0_129ac.pr33.lcssa, %.thread ], [ %v0_129ac.pr33100, %dec_label_pc_129acthread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_129acthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_129acthread-pre-split

dec_label_pc_129acthread-pre-split:               ; preds = %.thread4, %dec_label_pc_129acthread-pre-split.loopexit
  %v1_129b839 = phi i32 [ %storemerge95, %dec_label_pc_129acthread-pre-split.loopexit ], [ %v2_129b8, %.thread4 ]
  %v0_129ac.pr = phi i32 [ %v0_129ac.pr3398, %dec_label_pc_129acthread-pre-split.loopexit ], [ %v3_129b4, %.thread4 ]
  br label %dec_label_pc_129ac

dec_label_pc_129ac.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_129ac

dec_label_pc_129ac:                               ; preds = %dec_label_pc_129ac.loopexit, %dec_label_pc_129acthread-pre-split
  %v0_129c0.pr = phi i32 [ %v1_129b839, %dec_label_pc_129acthread-pre-split ], [ %storemerge101, %dec_label_pc_129ac.loopexit ]
  %v1_129b4 = phi i32 [ %v0_129ac.pr, %dec_label_pc_129acthread-pre-split ], [ %v4_129a0, %dec_label_pc_129ac.loopexit ]
  %v2_129ac = icmp slt i32 %v1_129b4, 0
  br i1 %v2_129ac, label %dec_label_pc_129c0, label %bb79

bb79:                                             ; preds = %dec_label_pc_129ac
  %v4_129b0 = icmp ult i32 %v1_129b4, %v1_12980
  br i1 %v4_129b0, label %.thread4, label %dec_label_pc_129c0

.thread4:                                         ; preds = %bb79
  %v3_129b4 = mul i32 %v1_129b4, 2
  %v2_129b8 = add i32 %v0_129c0.pr, 1
  br label %dec_label_pc_129acthread-pre-split

dec_label_pc_129c0:                               ; preds = %bb79, %dec_label_pc_129ac
  %v2_129c0 = add i32 %v0_129c0.pr, -3
  %v5_129c4 = icmp slt i32 %v0_129c0.pr, 3
  br i1 %v5_129c4, label %dec_label_pc_12a04, label %dec_label_pc_129c8

dec_label_pc_129c8:                               ; preds = %dec_label_pc_129c0, %bb83
  %v6_129f0 = phi i32 [ %v0_129f8, %bb83 ], [ %v2_129c0, %dec_label_pc_129c0 ]
  %v1_129cc = phi i32 [ %v1_129d4.v6_129d4.v6_129dc.v6_129e4, %bb83 ], [ %v1_12980, %dec_label_pc_129c0 ]
  %v3_129ec12 = phi i32 [ %v3_129ec, %bb83 ], [ %v1_129b4, %dec_label_pc_129c0 ]
  %v3_129c8 = icmp ult i32 %v1_129cc, %v3_129ec12
  %v3_129cc = select i1 %v3_129c8, i32 0, i32 %v3_129ec12
  %v1_129d4 = sub i32 %v1_129cc, %v3_129cc
  %v4_129d0 = udiv i32 %v3_129ec12, 2
  %v6_129d0 = icmp ult i32 %v1_129d4, %v4_129d0
  %v6_129d4 = select i1 %v6_129d0, i32 0, i32 %v4_129d0
  %v1_129d4.v6_129d4 = sub i32 %v1_129d4, %v6_129d4
  %.demorgan = and i1 %v3_129c8, %v6_129d0
  %v4_129d8 = udiv i32 %v3_129ec12, 4
  %v6_129d8 = icmp ult i32 %v1_129d4.v6_129d4, %v4_129d8
  %v6_129dc = select i1 %v6_129d8, i32 0, i32 %v4_129d8
  %v1_129d4.v6_129d4.v6_129dc = sub i32 %v1_129d4.v6_129d4, %v6_129dc
  %.demorgan71 = and i1 %.demorgan, %v6_129d8
  %v4_129e0 = udiv i32 %v3_129ec12, 8
  %v6_129e0 = icmp ult i32 %v1_129d4.v6_129d4.v6_129dc, %v4_129e0
  %v6_129e4 = select i1 %v6_129e0, i32 0, i32 %v4_129e0
  %v1_129d4.v6_129d4.v6_129dc.v6_129e4 = sub i32 %v1_129d4.v6_129d4.v6_129dc, %v6_129e4
  %.demorgan72 = and i1 %.demorgan71, %v6_129e0
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_129c8
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_129c8, %bb80
  %v2_129e8 = add i32 %v1_129d4.v6_129d4.v6_129dc.v6_129e4, -1
  %v4_129e8 = sub i32 0, %v1_129d4.v6_129d4.v6_129dc.v6_129e4
  %v5_129e8 = and i32 %v1_129d4.v6_129d4.v6_129dc.v6_129e4, %v4_129e8
  %v3_129ec = udiv i32 %v3_129ec12, 16
  %v5_129f0 = icmp slt i32 %v1_129d4.v6_129d4.v6_129dc.v6_129e4, 1
  br i1 %v5_129f0, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_129f0 = add i32 %v6_129f0, -4
  %v9_129f0 = sub i32 3, %v6_129f0
  %v10_129f0 = and i32 %v9_129f0, %v6_129f0
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_129f8 = phi i32 [ %v6_129f0, %bb81 ], [ %v7_129f0, %bb82 ]
  %v0_129f415.in = phi i32 [ %v2_129e8, %bb81 ], [ %v7_129f0, %bb82 ]
  %v1_129f414.in = phi i32 [ %v5_129e8, %bb81 ], [ %v10_129f0, %bb82 ]
  %v1_129f414 = icmp slt i32 %v1_129f414.in, 0
  %v0_129f415 = icmp slt i32 %v0_129f415.in, 0
  %v2_129f4 = xor i1 %v0_129f415, %v1_129f414
  br i1 %v2_129f4, label %dec_label_pc_129f8, label %dec_label_pc_129c8

dec_label_pc_129f8:                               ; preds = %bb83
  %v1_129f8 = urem i32 %v0_129f8, 4
  %v2_129f8 = icmp eq i32 %v1_129f8, 0
  br i1 %v2_129f8, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_129f8
  %v3_129fc = icmp eq i32 %v1_129d4.v6_129d4.v6_129dc.v6_129e4, 0
  br i1 %v3_129fc, label %bb76, label %dec_label_pc_12a04

dec_label_pc_12a04:                               ; preds = %bb84, %dec_label_pc_129c0
  %v0_12a18 = phi i32 [ %v3_129ec, %bb84 ], [ %v1_129b4, %dec_label_pc_129c0 ]
  %v1_12a14 = phi i32 [ %v1_129d4.v6_129d4.v6_129dc.v6_129e4, %bb84 ], [ %v1_12980, %dec_label_pc_129c0 ]
  %v0_12a04 = phi i32 [ %v0_129f8, %bb84 ], [ %v2_129c0, %dec_label_pc_129c0 ]
  %v5_12a08 = icmp slt i32 %v0_12a04, -2
  br i1 %v5_12a08, label %dec_label_pc_12a28, label %dec_label_pc_12a0c

dec_label_pc_12a0c:                               ; preds = %dec_label_pc_12a04
  %v8_12a04 = icmp eq i32 %v0_12a04, -2
  br i1 %v8_12a04, label %dec_label_pc_12a1c, label %dec_label_pc_12a10

dec_label_pc_12a10:                               ; preds = %dec_label_pc_12a0c
  %v3_12a10 = icmp ult i32 %v1_12a14, %v0_12a18
  br i1 %v3_12a10, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_12a10
  %v2_12a10 = sub i32 %v1_12a14, %v0_12a18
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_12a10, %bb85
  %v0_12a1c52 = phi i32 [ %v1_12a14, %dec_label_pc_12a10 ], [ %v2_12a10, %bb85 ]
  %v3_12a18 = udiv i32 %v0_12a18, 2
  br label %dec_label_pc_12a1c

dec_label_pc_12a1c:                               ; preds = %dec_label_pc_12a0c, %bb86
  %v0_12a24 = phi i32 [ %v0_12a18, %dec_label_pc_12a0c ], [ %v3_12a18, %bb86 ]
  %v1_12a20 = phi i32 [ %v1_12a14, %dec_label_pc_12a0c ], [ %v0_12a1c52, %bb86 ]
  %v3_12a1c = icmp ult i32 %v1_12a20, %v0_12a24
  br i1 %v3_12a1c, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_12a1c
  %v2_12a1c = sub i32 %v1_12a20, %v0_12a24
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_12a1c, %bb87
  %v0_12a2855 = phi i32 [ %v1_12a20, %dec_label_pc_12a1c ], [ %v2_12a1c, %bb87 ]
  %v3_12a24 = udiv i32 %v0_12a24, 2
  br label %dec_label_pc_12a28

dec_label_pc_12a28:                               ; preds = %dec_label_pc_12a04, %bb88
  %v2_12a2c = phi i32 [ %v0_12a18, %dec_label_pc_12a04 ], [ %v3_12a24, %bb88 ]
  %v1_12a2c = phi i32 [ %v1_12a14, %dec_label_pc_12a04 ], [ %v0_12a2855, %bb88 ]
  %v3_12a28 = icmp ult i32 %v1_12a2c, %v2_12a2c
  br i1 %v3_12a28, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_12a28
  %v2_12a28 = sub i32 %v1_12a2c, %v2_12a2c
  br label %bb76

dec_label_pc_12a34:                               ; preds = %dec_label_pc_12978
  %v0_12a34 = load i32, i32* @lr, align 4
  %v0_12a38 = call i32 @function_12b28()
  call void @__pseudo_branch(i32 %v0_12a34)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12a2c, { 1, 2, 0 }
  uselistorder i32 %v0_12a18, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_129f8, { 1, 0, 2 }
  uselistorder i32 %v7_129f0, { 1, 0 }
  uselistorder i32 %v3_129ec, { 1, 0 }
  uselistorder i32 %v1_129d4.v6_129d4.v6_129dc.v6_129e4, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_129e0, { 1, 0 }
  uselistorder i32 %v4_129d8, { 1, 0 }
  uselistorder i32 %v4_129d0, { 1, 0 }
  uselistorder i32 %v6_129f0, { 3, 0, 2, 1 }
  uselistorder i32 %v2_129c0, { 1, 0 }
  uselistorder i32 %v1_129b4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_129a0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_129ac.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12980, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_12a28, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_12a1c, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_129c8, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @function_12a44(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12a44:
  store i32 %arg1, i32* @r0, align 4
  %v2_12a44 = icmp eq i32 %arg2, 0
  br i1 %v2_12a44, label %dec_label_pc_12b18, label %dec_label_pc_12a4c

dec_label_pc_12a4c:                               ; preds = %dec_label_pc_12a44
  %v1_12a44 = icmp slt i32 %arg2, 0
  br i1 %v1_12a44, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_12a4c
  %v2_12a4c = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_12a4c, %bb
  %v4_12a64 = phi i32 [ %arg2, %dec_label_pc_12a4c ], [ %v2_12a4c, %bb ]
  %v0_12a50 = load i32, i32* @r0, align 4
  %v1_12a50 = icmp slt i32 %v0_12a50, 0
  br i1 %v1_12a50, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_12a54 = sub i32 0, %v0_12a50
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_12a5c = phi i32 [ %v0_12a50, %bb79 ], [ %v2_12a54, %bb80 ]
  %v1_12a58 = add i32 %v4_12a64, -1
  %v7_12a58 = icmp eq i32 %v4_12a64, 1
  br i1 %v7_12a58, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_12a5c = icmp eq i32 %v1_12a5c, %v4_12a64
  br i1 %v10_12a5c, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_12a5c = icmp ult i32 %v1_12a5c, %v4_12a64
  br i1 %v4_12a5c, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_12a64 = and i32 %v1_12a58, %v4_12a64
  %v8_12a64 = icmp eq i32 %v6_12a64, 0
  br i1 %v8_12a64, label %.thread72, label %dec_label_pc_12a74.preheader

dec_label_pc_12a74.preheader:                     ; preds = %bb84
  %v2_12a74109 = icmp ugt i32 %v4_12a64, 268435455
  br i1 %v2_12a74109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_12a6864 = phi i32 [ %v1_12a5c, %bb84 ], [ 0, %.thread70 ]
  %v3_12a68 = and i32 %v1_12a6864, %v1_12a58
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_12a74.preheader
  %v0_12a88.pr35.lcssa = phi i32 [ %v4_12a64, %dec_label_pc_12a74.preheader ], [ %v4_12a7c, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_12a74.preheader ], [ %v2_12a809, %.thread2.thread7 ]
  br label %dec_label_pc_12a88thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_12a74.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_12a809, %.thread2.thread7 ], [ 0, %dec_label_pc_12a74.preheader ]
  %v0_12a88.pr35110 = phi i32 [ %v4_12a7c, %.thread2.thread7 ], [ %v4_12a64, %dec_label_pc_12a74.preheader ]
  %v4_12a78 = icmp ult i32 %v0_12a88.pr35110, %v1_12a5c
  br i1 %v4_12a78, label %bb86, label %dec_label_pc_12a88thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_12a7c = and i32 %v0_12a88.pr35110, 268435456
  %v3_12a7c = icmp eq i32 %v2_12a7c, 0
  %v4_12a7c = mul i32 %v0_12a88.pr35110, 16
  br i1 %v3_12a7c, label %.thread2.thread7, label %dec_label_pc_12a88.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_12a809 = add i32 %storemerge111, 4
  %v2_12a74 = icmp ugt i32 %v4_12a7c, 268435455
  br i1 %v2_12a74, label %.thread1, label %bb85

dec_label_pc_12a88thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_12a88thread-pre-split.loopexit

dec_label_pc_12a88thread-pre-split.loopexit:      ; preds = %dec_label_pc_12a88thread-pre-split.loopexit.loopexit, %.thread1
  %v0_12a88.pr35108 = phi i32 [ %v0_12a88.pr35.lcssa, %.thread1 ], [ %v0_12a88.pr35110, %dec_label_pc_12a88thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_12a88thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12a88thread-pre-split

dec_label_pc_12a88thread-pre-split:               ; preds = %.thread4, %dec_label_pc_12a88thread-pre-split.loopexit
  %v1_12a9441 = phi i32 [ %storemerge105, %dec_label_pc_12a88thread-pre-split.loopexit ], [ %v2_12a94, %.thread4 ]
  %v2_12a8c36 = phi i32 [ %v1_12a5c, %dec_label_pc_12a88thread-pre-split.loopexit ], [ %v2_12a8c, %.thread4 ]
  %v0_12a88.pr = phi i32 [ %v0_12a88.pr35108, %dec_label_pc_12a88thread-pre-split.loopexit ], [ %v3_12a90, %.thread4 ]
  br label %dec_label_pc_12a88

dec_label_pc_12a88.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_12a88

dec_label_pc_12a88:                               ; preds = %dec_label_pc_12a88.loopexit, %dec_label_pc_12a88thread-pre-split
  %v0_12a9c.pr = phi i32 [ %v1_12a9441, %dec_label_pc_12a88thread-pre-split ], [ %storemerge111, %dec_label_pc_12a88.loopexit ]
  %v2_12a8c = phi i32 [ %v2_12a8c36, %dec_label_pc_12a88thread-pre-split ], [ %v1_12a5c, %dec_label_pc_12a88.loopexit ]
  %v1_12a90 = phi i32 [ %v0_12a88.pr, %dec_label_pc_12a88thread-pre-split ], [ %v4_12a7c, %dec_label_pc_12a88.loopexit ]
  %v2_12a88 = icmp slt i32 %v1_12a90, 0
  br i1 %v2_12a88, label %dec_label_pc_12a9c, label %bb87

bb87:                                             ; preds = %dec_label_pc_12a88
  %v4_12a8c = icmp ult i32 %v1_12a90, %v2_12a8c
  br i1 %v4_12a8c, label %.thread4, label %dec_label_pc_12a9c

.thread4:                                         ; preds = %bb87
  %v3_12a90 = mul i32 %v1_12a90, 2
  %v2_12a94 = add i32 %v0_12a9c.pr, 1
  br label %dec_label_pc_12a88thread-pre-split

dec_label_pc_12a9c:                               ; preds = %bb87, %dec_label_pc_12a88
  %v2_12a9c = add i32 %v0_12a9c.pr, -3
  %v5_12aa0 = icmp slt i32 %v0_12a9c.pr, 3
  br i1 %v5_12aa0, label %dec_label_pc_12ae0, label %dec_label_pc_12aa4

dec_label_pc_12aa4:                               ; preds = %dec_label_pc_12a9c, %bb91
  %v6_12acc = phi i32 [ %v0_12ad4, %bb91 ], [ %v2_12a9c, %dec_label_pc_12a9c ]
  %v1_12aa8 = phi i32 [ %v1_12ab0.v6_12ab0.v6_12ab8.v6_12ac0, %bb91 ], [ %v2_12a8c, %dec_label_pc_12a9c ]
  %v3_12ac810 = phi i32 [ %v3_12ac8, %bb91 ], [ %v1_12a90, %dec_label_pc_12a9c ]
  %v3_12aa4 = icmp ult i32 %v1_12aa8, %v3_12ac810
  %v3_12aa8 = select i1 %v3_12aa4, i32 0, i32 %v3_12ac810
  %v1_12ab0 = sub i32 %v1_12aa8, %v3_12aa8
  %v4_12aac = udiv i32 %v3_12ac810, 2
  %v6_12aac = icmp ult i32 %v1_12ab0, %v4_12aac
  %v6_12ab0 = select i1 %v6_12aac, i32 0, i32 %v4_12aac
  %v1_12ab0.v6_12ab0 = sub i32 %v1_12ab0, %v6_12ab0
  %.demorgan = and i1 %v3_12aa4, %v6_12aac
  %v4_12ab4 = udiv i32 %v3_12ac810, 4
  %v6_12ab4 = icmp ult i32 %v1_12ab0.v6_12ab0, %v4_12ab4
  %v6_12ab8 = select i1 %v6_12ab4, i32 0, i32 %v4_12ab4
  %v1_12ab0.v6_12ab0.v6_12ab8 = sub i32 %v1_12ab0.v6_12ab0, %v6_12ab8
  %.demorgan76 = and i1 %.demorgan, %v6_12ab4
  %v4_12abc = udiv i32 %v3_12ac810, 8
  %v6_12abc = icmp ult i32 %v1_12ab0.v6_12ab0.v6_12ab8, %v4_12abc
  %v6_12ac0 = select i1 %v6_12abc, i32 0, i32 %v4_12abc
  %v1_12ab0.v6_12ab0.v6_12ab8.v6_12ac0 = sub i32 %v1_12ab0.v6_12ab0.v6_12ab8, %v6_12ac0
  %.demorgan77 = and i1 %.demorgan76, %v6_12abc
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_12aa4
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_12aa4, %bb88
  %v2_12ac4 = add i32 %v1_12ab0.v6_12ab0.v6_12ab8.v6_12ac0, -1
  %v4_12ac4 = sub i32 0, %v1_12ab0.v6_12ab0.v6_12ab8.v6_12ac0
  %v5_12ac4 = and i32 %v1_12ab0.v6_12ab0.v6_12ab8.v6_12ac0, %v4_12ac4
  %v3_12ac8 = udiv i32 %v3_12ac810, 16
  %v5_12acc = icmp slt i32 %v1_12ab0.v6_12ab0.v6_12ab8.v6_12ac0, 1
  br i1 %v5_12acc, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_12acc = add i32 %v6_12acc, -4
  %v9_12acc = sub i32 3, %v6_12acc
  %v10_12acc = and i32 %v9_12acc, %v6_12acc
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_12ad4 = phi i32 [ %v6_12acc, %bb89 ], [ %v7_12acc, %bb90 ]
  %v0_12ad013.in = phi i32 [ %v2_12ac4, %bb89 ], [ %v7_12acc, %bb90 ]
  %v1_12ad012.in = phi i32 [ %v5_12ac4, %bb89 ], [ %v10_12acc, %bb90 ]
  %v1_12ad012 = icmp slt i32 %v1_12ad012.in, 0
  %v0_12ad013 = icmp slt i32 %v0_12ad013.in, 0
  %v2_12ad0 = xor i1 %v0_12ad013, %v1_12ad012
  br i1 %v2_12ad0, label %dec_label_pc_12ad4, label %dec_label_pc_12aa4

dec_label_pc_12ad4:                               ; preds = %bb91
  %v1_12ad4 = urem i32 %v0_12ad4, 4
  %v2_12ad4 = icmp eq i32 %v1_12ad4, 0
  br i1 %v2_12ad4, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_12ad4
  %v3_12ad8 = icmp eq i32 %v1_12ab0.v6_12ab0.v6_12ab8.v6_12ac0, 0
  br i1 %v3_12ad8, label %.thread6, label %dec_label_pc_12ae0

dec_label_pc_12ae0:                               ; preds = %bb92, %dec_label_pc_12a9c
  %v0_12af4 = phi i32 [ %v3_12ac8, %bb92 ], [ %v1_12a90, %dec_label_pc_12a9c ]
  %v1_12af0 = phi i32 [ %v1_12ab0.v6_12ab0.v6_12ab8.v6_12ac0, %bb92 ], [ %v2_12a8c, %dec_label_pc_12a9c ]
  %v0_12ae0 = phi i32 [ %v0_12ad4, %bb92 ], [ %v2_12a9c, %dec_label_pc_12a9c ]
  %v5_12ae4 = icmp slt i32 %v0_12ae0, -2
  br i1 %v5_12ae4, label %dec_label_pc_12b04, label %dec_label_pc_12ae8

dec_label_pc_12ae8:                               ; preds = %dec_label_pc_12ae0
  %v8_12ae0 = icmp eq i32 %v0_12ae0, -2
  br i1 %v8_12ae0, label %dec_label_pc_12af8, label %dec_label_pc_12aec

dec_label_pc_12aec:                               ; preds = %dec_label_pc_12ae8
  %v3_12aec = icmp ult i32 %v1_12af0, %v0_12af4
  br i1 %v3_12aec, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_12aec
  %v2_12aec = sub i32 %v1_12af0, %v0_12af4
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_12aec, %bb93
  %v0_12af854 = phi i32 [ %v1_12af0, %dec_label_pc_12aec ], [ %v2_12aec, %bb93 ]
  %v3_12af4 = udiv i32 %v0_12af4, 2
  br label %dec_label_pc_12af8

dec_label_pc_12af8:                               ; preds = %dec_label_pc_12ae8, %bb94
  %v0_12b00 = phi i32 [ %v0_12af4, %dec_label_pc_12ae8 ], [ %v3_12af4, %bb94 ]
  %v1_12afc = phi i32 [ %v1_12af0, %dec_label_pc_12ae8 ], [ %v0_12af854, %bb94 ]
  %v3_12af8 = icmp ult i32 %v1_12afc, %v0_12b00
  br i1 %v3_12af8, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_12af8
  %v2_12af8 = sub i32 %v1_12afc, %v0_12b00
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_12af8, %bb95
  %v0_12b0457 = phi i32 [ %v1_12afc, %dec_label_pc_12af8 ], [ %v2_12af8, %bb95 ]
  %v3_12b00 = udiv i32 %v0_12b00, 2
  br label %dec_label_pc_12b04

dec_label_pc_12b04:                               ; preds = %dec_label_pc_12ae0, %bb96
  %v2_12b08 = phi i32 [ %v0_12af4, %dec_label_pc_12ae0 ], [ %v3_12b00, %bb96 ]
  %v1_12b08 = phi i32 [ %v1_12af0, %dec_label_pc_12ae0 ], [ %v0_12b0457, %bb96 ]
  %v3_12b04 = icmp ult i32 %v1_12b08, %v2_12b08
  br i1 %v3_12b04, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_12b04
  %v2_12b04 = sub i32 %v1_12b08, %v2_12b08
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_12b04, %bb83, %.thread72, %dec_label_pc_12ad4, %bb92, %bb97
  %v1_12b10 = phi i32 [ %v1_12ab0.v6_12ab0.v6_12ab8.v6_12ac0, %dec_label_pc_12ad4 ], [ 0, %bb92 ], [ %v1_12b08, %dec_label_pc_12b04 ], [ %v2_12b04, %bb97 ], [ %v3_12a68, %.thread72 ], [ %v1_12a5c, %bb83 ]
  br i1 %v1_12a50, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_12b10 = sub i32 0, %v1_12b10
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_12b14 = phi i32 [ %v1_12b10, %.thread6 ], [ %v2_12b10, %bb98 ]
  ret i32 %v1_12b14

dec_label_pc_12b18:                               ; preds = %dec_label_pc_12a44
  %v0_12b18 = load i32, i32* @lr, align 4
  %v0_12b1c = call i32 @function_12b28()
  call void @__pseudo_branch(i32 %v0_12b18)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_12af4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12ad4, { 1, 0, 2 }
  uselistorder i32 %v7_12acc, { 1, 0 }
  uselistorder i32 %v3_12ac8, { 1, 0 }
  uselistorder i32 %v1_12ab0.v6_12ab0.v6_12ab8.v6_12ac0, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_12abc, { 1, 0 }
  uselistorder i32 %v4_12ab4, { 1, 0 }
  uselistorder i32 %v4_12aac, { 1, 0 }
  uselistorder i32 %v6_12acc, { 3, 0, 2, 1 }
  uselistorder i32 %v2_12a9c, { 1, 0 }
  uselistorder i32 %v1_12a90, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_12a8c, { 1, 0, 3, 2 }
  uselistorder i32 %v4_12a7c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_12a88.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12a5c, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_12a64, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 ()* @function_12b28, { 2, 1, 0 }
  uselistorder i32 268435455, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_12b04, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_12af8, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_12aa4, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @function_12b28() local_unnamed_addr {
dec_label_pc_12b28:
  %v1_12b28 = load i32, i32* @r0, align 4
  ret i32 %v1_12b28
}

define i32 @function_12b2c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12b2c:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_12b2c = load i32, i32* @r2, align 4
  %v1_12b3c = add i32 %arg2, -12
  store i32 %v6_12b2c, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_12b3c, 2
  br i1 %tmp, label %dec_label_pc_12b64, label %dec_label_pc_12b5c

dec_label_pc_12b5c:                               ; preds = %dec_label_pc_12b2c
  %v0_12b5c = call i32 @function_12ba0()
  br label %dec_label_pc_12b90

dec_label_pc_12b64:                               ; preds = %dec_label_pc_12b2c
  %v2_12b6c = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_12b6c, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_12b6c, -4095
  br i1 %tmp8, label %dec_label_pc_12b90, label %dec_label_pc_12b7c

dec_label_pc_12b7c:                               ; preds = %dec_label_pc_12b64
  %v0_12b7c = call i32 @function_131c4()
  %v0_12b80 = load i32, i32* %r4.global-to-local, align 4
  %v1_12b80 = sub i32 0, %v0_12b80
  %v2_12b84 = inttoptr i32 %v0_12b7c to i32*
  store i32 %v1_12b80, i32* %v2_12b84, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12b90

dec_label_pc_12b90:                               ; preds = %dec_label_pc_12b7c, %dec_label_pc_12b64, %dec_label_pc_12b5c
  %storemerge = phi i32 [ %v0_12b5c, %dec_label_pc_12b5c ], [ %v2_12b6c, %dec_label_pc_12b64 ], [ -1, %dec_label_pc_12b7c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_12b6c, { 1, 0, 2 }
}

define i32 @function_12ba0() local_unnamed_addr {
dec_label_pc_12ba0:
  %r4.global-to-local = alloca i32, align 4
  %v0_12bc0 = load i32, i32* @r0, align 4
  store i32 %v0_12bc0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12bc0, -4095
  br i1 %tmp, label %dec_label_pc_12bdc, label %dec_label_pc_12bcc

dec_label_pc_12bcc:                               ; preds = %dec_label_pc_12ba0
  %v0_12bcc = call i32 @function_131c4()
  %v0_12bd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_12bd0 = sub i32 0, %v0_12bd0
  %v2_12bd4 = inttoptr i32 %v0_12bcc to i32*
  store i32 %v1_12bd0, i32* %v2_12bd4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12bdc

dec_label_pc_12bdc:                               ; preds = %dec_label_pc_12ba0, %dec_label_pc_12bcc
  %v0_12bdc = phi i32 [ %v0_12bc0, %dec_label_pc_12ba0 ], [ -1, %dec_label_pc_12bcc ]
  ret i32 %v0_12bdc

; uselistorder directives
  uselistorder i32 %v0_12bc0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12bdc, { 1, 0 }
}

define i32 @function_12bf0(i32 %arg1) local_unnamed_addr {
dec_label_pc_12bf0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12bf0 = load i32, i32* @r4, align 4
  store i32 %v3_12bf0, i32* %stack_var_-8, align 4
  %v1_12bf4 = call i32 @close(i32 %arg1)
  store i32 %v1_12bf4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_12bf4, -4095
  br i1 %tmp, label %dec_label_pc_12c14, label %dec_label_pc_12c04

dec_label_pc_12c04:                               ; preds = %dec_label_pc_12bf0
  %v0_12c04 = call i32 @function_131c4()
  %v0_12c08 = load i32, i32* %r4.global-to-local, align 4
  %v1_12c08 = sub i32 0, %v0_12c08
  %v2_12c0c = inttoptr i32 %v0_12c04 to i32*
  store i32 %v1_12c08, i32* %v2_12c0c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c14

dec_label_pc_12c14:                               ; preds = %dec_label_pc_12bf0, %dec_label_pc_12c04
  %v0_12c14 = phi i32 [ %v1_12bf4, %dec_label_pc_12bf0 ], [ -1, %dec_label_pc_12c04 ]
  %v2_12c18 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12c18, i32* @r4, align 4
  ret i32 %v0_12c14

; uselistorder directives
  uselistorder i32 %v1_12bf4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c14, { 1, 0 }
}

define i32 @function_12c1c() local_unnamed_addr {
dec_label_pc_12c1c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c1c = load i32, i32* @r4, align 4
  store i32 %v3_12c1c, i32* %stack_var_-8, align 4
  %v0_12c20 = call i32 @fork()
  store i32 %v0_12c20, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12c20, -4095
  br i1 %tmp, label %dec_label_pc_12c40, label %dec_label_pc_12c30

dec_label_pc_12c30:                               ; preds = %dec_label_pc_12c1c
  %v0_12c30 = call i32 @function_131c4()
  %v0_12c34 = load i32, i32* %r4.global-to-local, align 4
  %v1_12c34 = sub i32 0, %v0_12c34
  %v2_12c38 = inttoptr i32 %v0_12c30 to i32*
  store i32 %v1_12c34, i32* %v2_12c38, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c40

dec_label_pc_12c40:                               ; preds = %dec_label_pc_12c1c, %dec_label_pc_12c30
  %v0_12c40 = phi i32 [ %v0_12c20, %dec_label_pc_12c1c ], [ -1, %dec_label_pc_12c30 ]
  %v2_12c44 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12c44, i32* @r4, align 4
  ret i32 %v0_12c40

; uselistorder directives
  uselistorder i32 %v0_12c20, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c40, { 1, 0 }
}

define i32 @function_12c48() local_unnamed_addr {
dec_label_pc_12c48:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c48 = load i32, i32* @r4, align 4
  store i32 %v3_12c48, i32* %stack_var_-8, align 4
  %v0_12c4c = call i32 @getpid()
  store i32 %v0_12c4c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12c4c, -4095
  br i1 %tmp, label %dec_label_pc_12c6c, label %dec_label_pc_12c5c

dec_label_pc_12c5c:                               ; preds = %dec_label_pc_12c48
  %v0_12c5c = call i32 @function_131c4()
  %v0_12c60 = load i32, i32* %r4.global-to-local, align 4
  %v1_12c60 = sub i32 0, %v0_12c60
  %v2_12c64 = inttoptr i32 %v0_12c5c to i32*
  store i32 %v1_12c60, i32* %v2_12c64, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c6c

dec_label_pc_12c6c:                               ; preds = %dec_label_pc_12c48, %dec_label_pc_12c5c
  %v0_12c6c = phi i32 [ %v0_12c4c, %dec_label_pc_12c48 ], [ -1, %dec_label_pc_12c5c ]
  %v2_12c70 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12c70, i32* @r4, align 4
  ret i32 %v0_12c6c

; uselistorder directives
  uselistorder i32 %v0_12c4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c6c, { 1, 0 }
}

define i32 @function_12c74() local_unnamed_addr {
dec_label_pc_12c74:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c74 = load i32, i32* @r4, align 4
  store i32 %v3_12c74, i32* %stack_var_-8, align 4
  %v0_12c78 = call i32 @getppid()
  store i32 %v0_12c78, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12c78, -4095
  br i1 %tmp, label %dec_label_pc_12c98, label %dec_label_pc_12c88

dec_label_pc_12c88:                               ; preds = %dec_label_pc_12c74
  %v0_12c88 = call i32 @function_131c4()
  %v0_12c8c = load i32, i32* %r4.global-to-local, align 4
  %v1_12c8c = sub i32 0, %v0_12c8c
  %v2_12c90 = inttoptr i32 %v0_12c88 to i32*
  store i32 %v1_12c8c, i32* %v2_12c90, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c98

dec_label_pc_12c98:                               ; preds = %dec_label_pc_12c74, %dec_label_pc_12c88
  %v0_12c98 = phi i32 [ %v0_12c78, %dec_label_pc_12c74 ], [ -1, %dec_label_pc_12c88 ]
  %v2_12c9c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12c9c, i32* @r4, align 4
  ret i32 %v0_12c98

; uselistorder directives
  uselistorder i32 %v0_12c78, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c98, { 1, 0 }
}

define i32 @function_12ca0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12ca0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_12ca0 = load i32, i32* @r3, align 4
  store i32 %v9_12ca0, i32* %stack_var_-4, align 4
  %v2_12cac = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12cac, i32* @r3, align 4
  %v2_12cbc = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_12cbc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_12cbc, -4095
  br i1 %tmp, label %dec_label_pc_12cdc, label %dec_label_pc_12ccc

dec_label_pc_12ccc:                               ; preds = %dec_label_pc_12ca0
  %v0_12ccc = call i32 @function_131c4()
  %v0_12cd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_12cd0 = sub i32 0, %v0_12cd0
  store i32 %v1_12cd0, i32* @r3, align 4
  %v2_12cd4 = inttoptr i32 %v0_12ccc to i32*
  store i32 %v1_12cd0, i32* %v2_12cd4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12cdc

dec_label_pc_12cdc:                               ; preds = %dec_label_pc_12ca0, %dec_label_pc_12ccc
  %v0_12cdc = phi i32 [ %v2_12cbc, %dec_label_pc_12ca0 ], [ -1, %dec_label_pc_12ccc ]
  ret i32 %v0_12cdc

; uselistorder directives
  uselistorder i32 %v2_12cbc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_12cdc, { 1, 0 }
}

define i32 @function_12cf0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12cf0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12cf0 = load i32, i32* @r4, align 4
  store i32 %v3_12cf0, i32* %stack_var_-8, align 4
  %v2_12cf4 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_12cf4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_12cf4, -4095
  br i1 %tmp, label %dec_label_pc_12d14, label %dec_label_pc_12d04

dec_label_pc_12d04:                               ; preds = %dec_label_pc_12cf0
  %v0_12d04 = call i32 @function_131c4()
  %v0_12d08 = load i32, i32* %r4.global-to-local, align 4
  %v1_12d08 = sub i32 0, %v0_12d08
  %v2_12d0c = inttoptr i32 %v0_12d04 to i32*
  store i32 %v1_12d08, i32* %v2_12d0c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12d14

dec_label_pc_12d14:                               ; preds = %dec_label_pc_12cf0, %dec_label_pc_12d04
  %v0_12d14 = phi i32 [ %v2_12cf4, %dec_label_pc_12cf0 ], [ -1, %dec_label_pc_12d04 ]
  %v2_12d18 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12d18, i32* @r4, align 4
  ret i32 %v0_12d14

; uselistorder directives
  uselistorder i32 %v2_12cf4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12d14, { 1, 0 }
}

define i32 @function_12d1c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12d1c:
  %r4.global-to-local = alloca i32, align 4
  %v6_12d1c = load i32, i32* @r2, align 4
  %v1_12d2c = and i32 %arg2, 64
  store i32 %v1_12d2c, i32* @r3, align 4
  %v2_12d2c = icmp eq i32 %v1_12d2c, 0
  br i1 %v2_12d2c, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_12d1c
  store i32 %v6_12d1c, i32* @r3, align 4
  %phitmp = urem i32 %v6_12d1c, 65536
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12d1c, %bb
  %v0_12d3c = phi i32 [ 0, %dec_label_pc_12d1c ], [ %phitmp, %bb ]
  store i32 %v0_12d3c, i32* @r2, align 4
  %v4_12d44 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_12d48 = icmp eq i32 %v4_12d44, -4096
  store i1 %v7_12d48, i1* @cpsr_z, align 1
  store i32 %v4_12d44, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12d44, -4095
  br i1 %tmp, label %dec_label_pc_12d64, label %dec_label_pc_12d54

dec_label_pc_12d54:                               ; preds = %.thread1
  %v0_12d54 = call i32 @function_131c4()
  %v0_12d58 = load i32, i32* %r4.global-to-local, align 4
  %v1_12d58 = sub i32 0, %v0_12d58
  store i32 %v1_12d58, i32* @r3, align 4
  %v2_12d5c = inttoptr i32 %v0_12d54 to i32*
  store i32 %v1_12d58, i32* %v2_12d5c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12d64

dec_label_pc_12d64:                               ; preds = %.thread1, %dec_label_pc_12d54
  %v0_12d64 = phi i32 [ %v4_12d44, %.thread1 ], [ -1, %dec_label_pc_12d54 ]
  ret i32 %v0_12d64

; uselistorder directives
  uselistorder i32 %v4_12d44, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_12d64, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_12d78(i32 %arg1) local_unnamed_addr {
dec_label_pc_12d78:
  store i32 %arg1, i32* @r2, align 4
  %v0_12d80 = load i32, i32* @r0, align 4
  %v2_12d80 = inttoptr i32 %v0_12d80 to i8*
  %v3_12d80 = call i32 @function_12d1c(i8* %v2_12d80, i32 577)
  %v0_12d84 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12d84, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_12d78
  %v6_12d84 = and i32 %v3_12d80, 36
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_12d78, %bb
  %v7_12d84 = phi i32 [ %v3_12d80, %dec_label_pc_12d78 ], [ %v6_12d84, %bb ]
  ret i32 %v7_12d84

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_12d88(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12d88:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12d88 = load i32, i32* @r4, align 4
  store i32 %v3_12d88, i32* %stack_var_-8, align 4
  %v2_12d90 = load i32, i32* @r2, align 4
  %v3_12d90 = load i32, i32* @r3, align 4
  %v4_12d90 = call i32 @prctl(i32 %arg1, i32 %arg2, i32 %v2_12d90, i32 %v3_12d90, i32 0)
  store i32 %v4_12d90, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12d90, -4095
  br i1 %tmp, label %dec_label_pc_12db0, label %dec_label_pc_12da0

dec_label_pc_12da0:                               ; preds = %dec_label_pc_12d88
  %v0_12da0 = call i32 @function_131c4()
  %v0_12da4 = load i32, i32* %r4.global-to-local, align 4
  %v1_12da4 = sub i32 0, %v0_12da4
  %v2_12da8 = inttoptr i32 %v0_12da0 to i32*
  store i32 %v1_12da4, i32* %v2_12da8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12db0

dec_label_pc_12db0:                               ; preds = %dec_label_pc_12d88, %dec_label_pc_12da0
  %v0_12db0 = phi i32 [ %v4_12d90, %dec_label_pc_12d88 ], [ -1, %dec_label_pc_12da0 ]
  %v2_12db4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12db4, i32* @r4, align 4
  ret i32 %v0_12db0

; uselistorder directives
  uselistorder i32 %v4_12d90, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12db0, { 1, 0 }
}

define i32 @function_12db8(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12db8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12db8 = load i32, i32* @r4, align 4
  store i32 %v3_12db8, i32* %stack_var_-8, align 4
  %v4_12dbc = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_12dbc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12dbc, -4095
  br i1 %tmp, label %dec_label_pc_12ddc, label %dec_label_pc_12dcc

dec_label_pc_12dcc:                               ; preds = %dec_label_pc_12db8
  %v0_12dcc = call i32 @function_131c4()
  %v0_12dd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_12dd0 = sub i32 0, %v0_12dd0
  %v2_12dd4 = inttoptr i32 %v0_12dcc to i32*
  store i32 %v1_12dd0, i32* %v2_12dd4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ddc

dec_label_pc_12ddc:                               ; preds = %dec_label_pc_12db8, %dec_label_pc_12dcc
  %v0_12ddc = phi i32 [ %v4_12dbc, %dec_label_pc_12db8 ], [ -1, %dec_label_pc_12dcc ]
  %v2_12de0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12de0, i32* @r4, align 4
  ret i32 %v0_12ddc

; uselistorder directives
  uselistorder i32 %v4_12dbc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ddc, { 1, 0 }
}

define i32 @function_12de4(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12de4:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v3_12de4 = load i32, i32* @r4, align 4
  store i32 %v3_12de4, i32* %stack_var_-8, align 4
  %v7_12de8 = call i32 @readlink(i8* %arg1, i8* %tmp, i32 %arg3)
  store i32 %v7_12de8, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v7_12de8, -4095
  br i1 %tmp6, label %dec_label_pc_12e08, label %dec_label_pc_12df8

dec_label_pc_12df8:                               ; preds = %dec_label_pc_12de4
  %v0_12df8 = call i32 @function_131c4()
  %v0_12dfc = load i32, i32* %r4.global-to-local, align 4
  %v1_12dfc = sub i32 0, %v0_12dfc
  %v2_12e00 = inttoptr i32 %v0_12df8 to i32*
  store i32 %v1_12dfc, i32* %v2_12e00, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12e08

dec_label_pc_12e08:                               ; preds = %dec_label_pc_12de4, %dec_label_pc_12df8
  %v0_12e08 = phi i32 [ %v7_12de8, %dec_label_pc_12de4 ], [ -1, %dec_label_pc_12df8 ]
  %v2_12e0c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12e0c, i32* @r4, align 4
  ret i32 %v0_12e08

; uselistorder directives
  uselistorder i32 %v7_12de8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e08, { 1, 0 }
}

define i32 @function_12e10(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12e10:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e10 = load i32, i32* @r4, align 4
  store i32 %v3_12e10, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12e38, label %dec_label_pc_12e28

dec_label_pc_12e28:                               ; preds = %dec_label_pc_12e10
  %v0_12e28 = call i32 @function_131c4()
  %v0_12e2c = load i32, i32* %r4.global-to-local, align 4
  %v1_12e2c = sub i32 0, %v0_12e2c
  %v2_12e30 = inttoptr i32 %v0_12e28 to i32*
  store i32 %v1_12e2c, i32* %v2_12e30, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_12e3c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12e38

dec_label_pc_12e38:                               ; preds = %dec_label_pc_12e10, %dec_label_pc_12e28
  %v2_12e3c = phi i32 [ %v3_12e10, %dec_label_pc_12e10 ], [ %v2_12e3c.pre, %dec_label_pc_12e28 ]
  %v0_12e38 = phi i32 [ %arg1, %dec_label_pc_12e10 ], [ -1, %dec_label_pc_12e28 ]
  store i32 %v2_12e3c, i32* @r4, align 4
  ret i32 %v0_12e38

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e38, { 1, 0 }
}

define i32 @function_12e40(i32 %arg1) local_unnamed_addr {
dec_label_pc_12e40:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e40 = load i32, i32* @r4, align 4
  store i32 %v3_12e40, i32* %stack_var_-8, align 4
  %v0_12e44 = call i32 @setsid()
  store i32 %v0_12e44, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12e44, -4095
  br i1 %tmp, label %dec_label_pc_12e64, label %dec_label_pc_12e54

dec_label_pc_12e54:                               ; preds = %dec_label_pc_12e40
  %v0_12e54 = call i32 @function_131c4()
  %v0_12e58 = load i32, i32* %r4.global-to-local, align 4
  %v1_12e58 = sub i32 0, %v0_12e58
  %v2_12e5c = inttoptr i32 %v0_12e54 to i32*
  store i32 %v1_12e58, i32* %v2_12e5c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12e64

dec_label_pc_12e64:                               ; preds = %dec_label_pc_12e40, %dec_label_pc_12e54
  %v0_12e64 = phi i32 [ %v0_12e44, %dec_label_pc_12e40 ], [ -1, %dec_label_pc_12e54 ]
  %v2_12e68 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12e68, i32* @r4, align 4
  ret i32 %v0_12e64

; uselistorder directives
  uselistorder i32 %v0_12e44, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e64, { 1, 0 }
}

define i32 @function_12e6c(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12e6c:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e6c = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_12e6c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_12e6c
  %v3_12e745 = load i32, i32* @r4, align 4
  store i32 %v3_12e745, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12e94

bb:                                               ; preds = %dec_label_pc_12e6c
  %v3_12e74 = load i32, i32* @r4, align 4
  store i32 %v3_12e74, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_12e94, label %dec_label_pc_12e80

dec_label_pc_12e80:                               ; preds = %bb
  %v0_12e80 = call i32 @function_131c4()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_12e8c = inttoptr i32 %v0_12e80 to i32*
  store i32 22, i32* %v2_12e8c, align 4
  %v0_12eb8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12eb8

dec_label_pc_12e94:                               ; preds = %.thread, %bb
  %v7_12e94 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_12e94, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_12e94, -4095
  br i1 %tmp13, label %dec_label_pc_12eb4, label %dec_label_pc_12ea4

dec_label_pc_12ea4:                               ; preds = %dec_label_pc_12e94
  %v0_12ea4 = call i32 @function_131c4()
  %v0_12ea8 = load i32, i32* %r4.global-to-local, align 4
  %v1_12ea8 = sub i32 0, %v0_12ea8
  %v2_12eac = inttoptr i32 %v0_12ea4 to i32*
  store i32 %v1_12ea8, i32* %v2_12eac, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12eb4

dec_label_pc_12eb4:                               ; preds = %dec_label_pc_12e94, %dec_label_pc_12ea4
  %v0_12eb4 = phi i32 [ %v7_12e94, %dec_label_pc_12e94 ], [ -1, %dec_label_pc_12ea4 ]
  store i32 %v0_12eb4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12eb8

dec_label_pc_12eb8:                               ; preds = %dec_label_pc_12e80, %dec_label_pc_12eb4
  %v0_12eb8 = phi i32 [ %v0_12eb8.pre, %dec_label_pc_12e80 ], [ %v0_12eb4, %dec_label_pc_12eb4 ]
  %v2_12ebc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12ebc, i32* @r4, align 4
  ret i32 %v0_12eb8

; uselistorder directives
  uselistorder i32 %v7_12e94, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_12eb8, { 1, 0 }
  uselistorder label %dec_label_pc_12eb4, { 1, 0 }
  uselistorder label %dec_label_pc_12e94, { 1, 0 }
}

define i32 @function_12ec0(i32* %arg1) local_unnamed_addr {
dec_label_pc_12ec0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ec0 = load i32, i32* @r4, align 4
  store i32 %v3_12ec0, i32* %stack_var_-8, align 4
  %v2_12ec4 = call i32 @time(i32* %arg1)
  store i32 %v2_12ec4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_12ec4, -4095
  br i1 %tmp, label %dec_label_pc_12ee4, label %dec_label_pc_12ed4

dec_label_pc_12ed4:                               ; preds = %dec_label_pc_12ec0
  %v0_12ed4 = call i32 @function_131c4()
  %v0_12ed8 = load i32, i32* %r4.global-to-local, align 4
  %v1_12ed8 = sub i32 0, %v0_12ed8
  %v2_12edc = inttoptr i32 %v0_12ed4 to i32*
  store i32 %v1_12ed8, i32* %v2_12edc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ee4

dec_label_pc_12ee4:                               ; preds = %dec_label_pc_12ec0, %dec_label_pc_12ed4
  %v0_12ee4 = phi i32 [ %v2_12ec4, %dec_label_pc_12ec0 ], [ -1, %dec_label_pc_12ed4 ]
  %v2_12ee8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12ee8, i32* @r4, align 4
  ret i32 %v0_12ee4

; uselistorder directives
  uselistorder i32 %v2_12ec4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ee4, { 1, 0 }
}

define i32 @function_12eec(i8* %arg1) local_unnamed_addr {
dec_label_pc_12eec:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12eec = load i32, i32* @r4, align 4
  store i32 %v3_12eec, i32* %stack_var_-8, align 4
  %v3_12ef0 = call i32 @unlink(i8* %arg1)
  store i32 %v3_12ef0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_12ef0, -4095
  br i1 %tmp, label %dec_label_pc_12f10, label %dec_label_pc_12f00

dec_label_pc_12f00:                               ; preds = %dec_label_pc_12eec
  %v0_12f00 = call i32 @function_131c4()
  %v0_12f04 = load i32, i32* %r4.global-to-local, align 4
  %v1_12f04 = sub i32 0, %v0_12f04
  %v2_12f08 = inttoptr i32 %v0_12f00 to i32*
  store i32 %v1_12f04, i32* %v2_12f08, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12f10

dec_label_pc_12f10:                               ; preds = %dec_label_pc_12eec, %dec_label_pc_12f00
  %v0_12f10 = phi i32 [ %v3_12ef0, %dec_label_pc_12eec ], [ -1, %dec_label_pc_12f00 ]
  %v2_12f14 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12f14, i32* @r4, align 4
  ret i32 %v0_12f10

; uselistorder directives
  uselistorder i32 %v3_12ef0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f10, { 1, 0 }
}

define i32 @function_12f18(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12f18:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f18 = load i32, i32* @r4, align 4
  store i32 %v3_12f18, i32* %stack_var_-8, align 4
  %v4_12f1c = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_12f1c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12f1c, -4095
  br i1 %tmp, label %dec_label_pc_12f3c, label %dec_label_pc_12f2c

dec_label_pc_12f2c:                               ; preds = %dec_label_pc_12f18
  %v0_12f2c = call i32 @function_131c4()
  %v0_12f30 = load i32, i32* %r4.global-to-local, align 4
  %v1_12f30 = sub i32 0, %v0_12f30
  %v2_12f34 = inttoptr i32 %v0_12f2c to i32*
  store i32 %v1_12f30, i32* %v2_12f34, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12f3c

dec_label_pc_12f3c:                               ; preds = %dec_label_pc_12f18, %dec_label_pc_12f2c
  %v0_12f3c = phi i32 [ %v4_12f1c, %dec_label_pc_12f18 ], [ -1, %dec_label_pc_12f2c ]
  %v2_12f40 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12f40, i32* @r4, align 4
  ret i32 %v0_12f3c

; uselistorder directives
  uselistorder i32 %v4_12f1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f3c, { 1, 0 }
}

define i32 @function_12f44(i32* %arg1) local_unnamed_addr {
dec_label_pc_12f44:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12f44 = load i32, i32* @r4, align 4
  store i32 %v3_12f44, i32* %stack_var_-20, align 4
  %v6_12f44 = load i32, i32* @r5, align 4
  %v9_12f44 = load i32, i32* @r6, align 4
  %v12_12f44 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_12f4c = load i32, i32* %arg1, align 4
  store i32 %v2_12f4c, i32* %r4.global-to-local, align 4
  %v2_12f50 = ptrtoint i32* %stack_var_-36 to i32
  %v1_12f54 = add i32 %tmp, 24
  store i32 %v1_12f54, i32* @r6, align 4
  %v3_12f58 = icmp eq i32 %v2_12f4c, -1
  store i32 %v2_12f50, i32* @r7, align 4
  store i32 %v1_12f54, i32* %r2.global-to-local, align 4
  store i32 %v2_12f50, i32* @r0, align 4
  br i1 %v3_12f58, label %dec_label_pc_12f70, label %dec_label_pc_12f84

dec_label_pc_12f70:                               ; preds = %dec_label_pc_12f44
  %v0_12f70 = call i32 @function_131c4()
  %v0_12f78 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12f78, i32* %r2.global-to-local, align 4
  %v2_12f7c = inttoptr i32 %v0_12f70 to i32*
  store i32 9, i32* %v2_12f7c, align 4
  %v0_12fdc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12fdc

dec_label_pc_12f84:                               ; preds = %dec_label_pc_12f44
  %v8_12f8c = call i32 @function_14214(i32 %v2_12f50, i32 ptrtoint (i32* @global_var_1420c.394 to i32), i32 %v1_12f54, i32 82452, i32 %v3_12f44, i32 %v6_12f44, i32 %v9_12f44)
  %v1_12f9c = call i32 @function_1420c()
  %v0_12fa8 = load i32, i32* @r5, align 4
  %v1_12fa8 = inttoptr i32 %v0_12fa8 to i32*
  %v2_12fa8 = load i32, i32* %v1_12fa8, align 4
  store i32 %v2_12fa8, i32* @r4, align 4
  store i32 %v2_12f50, i32* @r0, align 4
  store i32 -1, i32* %v1_12fa8, align 4
  store i32 ptrtoint (i32* @global_var_12fc0.398 to i32), i32* @lr, align 4
  %v8_12fbc = call i32 @function_14214(i32 %v2_12f50, i32 1, i32 %v1_12f54, i32 82452, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_12fc0 = load i32, i32* @r5, align 4
  %v1_12fc0 = add i32 %v0_12fc0, 12
  %v2_12fc0 = inttoptr i32 %v1_12fc0 to i32*
  %v3_12fc0 = load i32, i32* %v2_12fc0, align 4
  store i32 %v3_12fc0, i32* @r0, align 4
  %v0_12fc4 = call i32 @function_13824()
  %v0_12fc8 = load i32, i32* @r5, align 4
  store i32 %v0_12fc8, i32* @r0, align 4
  %v0_12fcc = call i32 @function_13824()
  %v0_12fd0 = load i32, i32* @r4, align 4
  %v1_12fd4 = call i32 @function_12bf0(i32 %v0_12fd0)
  store i32 %v1_12fd4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12fdc

dec_label_pc_12fdc:                               ; preds = %dec_label_pc_12f70, %dec_label_pc_12f84
  %v0_12fdc = phi i32 [ %v0_12fdc.pre, %dec_label_pc_12f70 ], [ %v1_12fd4, %dec_label_pc_12f84 ]
  %v2_12fe4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12fe4, i32* @r4, align 4
  store i32 %v6_12f44, i32* @r5, align 4
  store i32 %v9_12f44, i32* @r6, align 4
  store i32 %v12_12f44, i32* @r7, align 4
  ret i32 %v0_12fdc

; uselistorder directives
  uselistorder i32 %v1_12f54, { 2, 1, 0, 3 }
  uselistorder i32 %v2_12f50, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_12f44, { 1, 0 }
  uselistorder i32 %v6_12f44, { 1, 0 }
  uselistorder label %dec_label_pc_12fdc, { 1, 0 }
}

define i32 @function_12ff8(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ff8:
  %r5.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-108 = alloca i32, align 4
  %v3_12ff8 = load i32, i32* @r4, align 4
  %v9_12ff8 = load i32, i32* @r6, align 4
  %v12_12ff8 = load i32, i32* @r7, align 4
  %v0_13004 = load i32, i32* @r0, align 4
  %v2_13004 = inttoptr i32 %v0_13004 to i8*
  %v3_13004 = call i32 @function_12d1c(i8* %v2_13004, i32 18432)
  store i32 %v3_13004, i32* @r0, align 4
  store i32 %v3_13004, i32* @r7, align 4
  %v1_13008 = icmp slt i32 %v3_13004, 0
  br i1 %v1_13008, label %.thread1, label %dec_label_pc_13014

.thread1:                                         ; preds = %dec_label_pc_12ff8
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_130e4

dec_label_pc_13014:                               ; preds = %dec_label_pc_12ff8
  %v2_13000 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_13000, i32* @r1, align 4
  %v0_13018 = call i32 @function_14638()
  %v1_1301c = icmp slt i32 %v0_13018, 0
  br i1 %v1_1301c, label %dec_label_pc_1303c, label %dec_label_pc_13024

dec_label_pc_13024:                               ; preds = %dec_label_pc_13014
  %v0_13024 = load i32, i32* @r7, align 4
  store i32 1, i32* @r2, align 4
  %v2_13030 = call i32 @function_12b2c(i32 %v0_13024, i32 2)
  %v1_13034 = icmp slt i32 %v2_13030, 0
  br i1 %v1_13034, label %dec_label_pc_1303c, label %dec_label_pc_1305c

dec_label_pc_1303c:                               ; preds = %dec_label_pc_13024, %dec_label_pc_13014
  %v0_1303c = call i32 @function_131c4()
  store i32 %v0_1303c, i32* %r5.global-to-local, align 4
  %v0_13044 = load i32, i32* @r7, align 4
  %v1_13048 = inttoptr i32 %v0_1303c to i32*
  %v2_13048 = load i32, i32* %v1_13048, align 4
  store i32 %v2_13048, i32* @r4, align 4
  %v1_1304c = call i32 @function_12bf0(i32 %v0_13044)
  store i32 0, i32* @r6, align 4
  %v0_13054 = load i32, i32* @r4, align 4
  %v1_13054 = load i32, i32* %r5.global-to-local, align 4
  %v2_13054 = inttoptr i32 %v1_13054 to i32*
  store i32 %v0_13054, i32* %v2_13054, align 4
  br label %dec_label_pc_130e4

dec_label_pc_1305c:                               ; preds = %dec_label_pc_13024
  %v1_13060 = call i32 @function_13678(i32 48)
  store i32 %v1_13060, i32* @r6, align 4
  %v2_13064 = icmp eq i32 %v1_13060, 0
  br i1 %v2_13064, label %dec_label_pc_130b4, label %dec_label_pc_1306c

dec_label_pc_1306c:                               ; preds = %dec_label_pc_1305c
  store i32 0, i32* @r4, align 4
  %v2_13070 = add i32 %v1_13060, 16
  %v3_13070 = inttoptr i32 %v2_13070 to i32*
  store i32 0, i32* %v3_13070, align 4
  %v2_13078 = icmp ugt i32 %tmp, 511
  %v1_1307c = load i32, i32* @r6, align 4
  %v2_1307c = add i32 %v1_1307c, 20
  %v3_1307c = inttoptr i32 %v2_1307c to i32*
  store i32 %tmp, i32* %v3_1307c, align 4
  br i1 %v2_13078, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_1306c
  %v2_13084 = load i32, i32* @r6, align 4
  %v3_13084 = add i32 %v2_13084, 20
  %v4_13084 = inttoptr i32 %v3_13084 to i32*
  store i32 512, i32* %v4_13084, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1306c, %bb
  %v0_13088 = load i32, i32* @r7, align 4
  %v1_13088 = load i32, i32* @r6, align 4
  %v2_13088 = inttoptr i32 %v1_13088 to i32*
  store i32 %v0_13088, i32* %v2_13088, align 4
  %v0_1308c = load i32, i32* @r4, align 4
  %v1_1308c = load i32, i32* @r6, align 4
  %v2_1308c = add i32 %v1_1308c, 8
  %v3_1308c = inttoptr i32 %v2_1308c to i32*
  store i32 %v0_1308c, i32* %v3_1308c, align 4
  %v0_13090 = load i32, i32* @r4, align 4
  %v1_13090 = load i32, i32* @r6, align 4
  %v2_13090 = add i32 %v1_13090, 4
  %v3_13090 = inttoptr i32 %v2_13090 to i32*
  store i32 %v0_13090, i32* %v3_13090, align 4
  %v0_13098 = load i32, i32* @r6, align 4
  %v1_13098 = add i32 %v0_13098, 20
  %v2_13098 = inttoptr i32 %v1_13098 to i32*
  %v3_13098 = load i32, i32* %v2_13098, align 4
  %v2_1309c = call i32 @function_137cc(i32 1, i32 %v3_13098)
  %v2_130a0 = icmp eq i32 %v2_1309c, 0
  %v1_130a4 = load i32, i32* @r6, align 4
  %v2_130a4 = add i32 %v1_130a4, 12
  %v3_130a4 = inttoptr i32 %v2_130a4 to i32*
  store i32 %v2_1309c, i32* %v3_130a4, align 4
  br i1 %v2_130a0, label %dec_label_pc_130ac, label %dec_label_pc_130d0

dec_label_pc_130ac:                               ; preds = %.thread
  %v0_130ac = load i32, i32* @r6, align 4
  store i32 %v0_130ac, i32* @r0, align 4
  %v0_130b0 = call i32 @function_13824()
  br label %dec_label_pc_130b4

dec_label_pc_130b4:                               ; preds = %dec_label_pc_1305c, %dec_label_pc_130ac
  %v0_130b4 = load i32, i32* @r7, align 4
  %v1_130b8 = call i32 @function_12bf0(i32 %v0_130b4)
  %v0_130bc = call i32 @function_131c4()
  store i32 0, i32* @r6, align 4
  %v2_130c8 = inttoptr i32 %v0_130bc to i32*
  store i32 12, i32* %v2_130c8, align 4
  br label %dec_label_pc_130e4

dec_label_pc_130d0:                               ; preds = %.thread
  store i32 78052, i32* @lr, align 4
  %v1_130e0 = call i32 @function_1420c()
  br label %dec_label_pc_130e4

dec_label_pc_130e4:                               ; preds = %.thread1, %dec_label_pc_130b4, %dec_label_pc_1303c, %dec_label_pc_130d0
  %v0_130e4 = load i32, i32* @r6, align 4
  store i32 %v3_12ff8, i32* @r4, align 4
  store i32 %v9_12ff8, i32* @r6, align 4
  store i32 %v12_12ff8, i32* @r7, align 4
  ret i32 %v0_130e4

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_137cc, { 39, 40, 38, 37, 36, 22, 35, 34, 33, 32, 28, 27, 26, 25, 24, 23, 21, 20, 19, 18, 17, 16, 15, 14, 2, 1, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 31, 30, 29 }
  uselistorder i32 512, { 0, 5, 1, 6, 8, 2, 9, 3, 10, 4, 11, 7 }
  uselistorder i32 (i32)* @function_12bf0, { 18, 17, 16, 31, 35, 30, 34, 33, 29, 32, 28, 27, 26, 25, 24, 23, 22, 21, 20, 2, 19, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_130e4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_130b4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_130f4(i32* %arg1) local_unnamed_addr {
dec_label_pc_130f4:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_130f4 = load i32, i32* @r4, align 4
  %v6_130f4 = load i32, i32* @r5, align 4
  %v9_130f4 = load i32, i32* @lr, align 4
  %v1_130f8 = add i32 %tmp, 24
  store i32 %v1_130f8, i32* @r4, align 4
  %v2_130fc = ptrtoint i32* %stack_var_-28 to i32
  store i32 82452, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v2_130fc, i32* @r0, align 4
  store i32 %v1_130f8, i32* %r2.global-to-local, align 4
  %v8_13118 = call i32 @function_14214(i32 %v2_130fc, i32 ptrtoint (i32* @global_var_1420c.394 to i32), i32 %v1_130f8, i32 82452, i32 %v3_130f4, i32 %v6_130f4, i32 %v9_130f4)
  %v0_1311c = load i32, i32* @r4, align 4
  store i32 %v0_1311c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1420c.394 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1312c.403 to i32), i32* @lr, align 4
  %v1_13128 = call i32 @function_1420c()
  store i32 %v1_13128, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1312c

dec_label_pc_1312c:                               ; preds = %dec_label_pc_13160, %dec_label_pc_130f4
  %v0_1312c = load i32, i32* @r5, align 4
  %v1_1312c = add i32 %v0_1312c, 4
  %v2_1312c = inttoptr i32 %v1_1312c to i32*
  %v3_1312c = load i32, i32* %v2_1312c, align 4
  store i32 %v3_1312c, i32* %r2.global-to-local, align 4
  %v4_1312c = add i32 %v0_1312c, 8
  %v5_1312c = inttoptr i32 %v4_1312c to i32*
  %v6_1312c = load i32, i32* %v5_1312c, align 4
  store i32 %v6_1312c, i32* %r3.global-to-local, align 4
  %tmp8 = icmp ugt i32 %v6_1312c, %v3_1312c
  br i1 %tmp8, label %dec_label_pc_13160, label %dec_label_pc_13138

dec_label_pc_13138:                               ; preds = %dec_label_pc_1312c
  %v1_13138 = inttoptr i32 %v0_1312c to i32*
  %v2_13138 = load i32, i32* %v1_13138, align 4
  store i32 %v2_13138, i32* @r0, align 4
  %v1_1313c = add i32 %v0_1312c, 12
  %v2_1313c = inttoptr i32 %v1_1313c to i32*
  %v3_1313c = load i32, i32* %v2_1313c, align 4
  %v1_13140 = add i32 %v0_1312c, 20
  %v2_13140 = inttoptr i32 %v1_13140 to i32*
  %v3_13140 = load i32, i32* %v2_13140, align 4
  store i32 %v3_13140, i32* @r2, align 4
  %v4_13144 = call i32 @function_14688(i32 %v2_13138, i32 %v3_1313c, i32 %v3_13140, i32 %v6_1312c)
  store i32 %v4_13144, i32* %r0.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_13144, 1
  br i1 %tmp7, label %.thread, label %dec_label_pc_13154

.thread:                                          ; preds = %dec_label_pc_13138
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_13194

dec_label_pc_13154:                               ; preds = %dec_label_pc_13138
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13158 = load i32, i32* @r5, align 4
  %v2_13158 = add i32 %v1_13158, 4
  %v3_13158 = inttoptr i32 %v2_13158 to i32*
  store i32 0, i32* %v3_13158, align 4
  %v1_1315c = load i32, i32* @r5, align 4
  %v2_1315c = add i32 %v1_1315c, 8
  %v3_1315c = inttoptr i32 %v2_1315c to i32*
  store i32 %v4_13144, i32* %v3_1315c, align 4
  %v0_13160.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13160

dec_label_pc_13160:                               ; preds = %dec_label_pc_1312c, %dec_label_pc_13154
  %v1_13178 = phi i32 [ %v0_1312c, %dec_label_pc_1312c ], [ %v0_13160.pre, %dec_label_pc_13154 ]
  %v1_13160 = add i32 %v1_13178, 4
  %v2_13160 = inttoptr i32 %v1_13160 to i32*
  %v3_13160 = load i32, i32* %v2_13160, align 4
  store i32 %v3_13160, i32* %r2.global-to-local, align 4
  %v1_13164 = add i32 %v1_13178, 12
  %v2_13164 = inttoptr i32 %v1_13164 to i32*
  %v3_13164 = load i32, i32* %v2_13164, align 4
  store i32 %v3_13164, i32* %ip.global-to-local, align 4
  %v2_13168 = add i32 %v3_13164, %v3_13160
  store i32 %v2_13168, i32* @r4, align 4
  %v1_1316c = add i32 %v2_13168, 4
  %v2_1316c = inttoptr i32 %v1_1316c to i32*
  %v3_1316c = load i32, i32* %v2_1316c, align 4
  %v1_13170 = add i32 %v2_13168, 8
  %v2_13170 = inttoptr i32 %v1_13170 to i8*
  %v3_13170 = load i8, i8* %v2_13170, align 1
  %v4_13170 = zext i8 %v3_13170 to i32
  store i32 %v4_13170, i32* %r3.global-to-local, align 4
  %v1_13174 = add i32 %v2_13168, 9
  %v2_13174 = inttoptr i32 %v1_13174 to i8*
  %v3_13174 = load i8, i8* %v2_13174, align 1
  %v4_13174 = zext i8 %v3_13174 to i32
  store i32 %v4_13174, i32* %r0.global-to-local, align 4
  %v2_13178 = add i32 %v1_13178, 16
  %v3_13178 = inttoptr i32 %v2_13178 to i32*
  store i32 %v3_1316c, i32* %v3_13178, align 4
  %v0_1317c = load i32, i32* %r2.global-to-local, align 4
  %v1_1317c = load i32, i32* %ip.global-to-local, align 4
  %v2_1317c = add i32 %v1_1317c, %v0_1317c
  %v3_1317c = inttoptr i32 %v2_1317c to i32*
  %v4_1317c = load i32, i32* %v3_1317c, align 4
  %v0_13180 = load i32, i32* %r3.global-to-local, align 4
  %v1_13180 = load i32, i32* %r0.global-to-local, align 4
  %v4_13180 = mul i32 %v1_13180, 256
  %v5_13180 = or i32 %v4_13180, %v0_13180
  store i32 %v5_13180, i32* %r3.global-to-local, align 4
  %v2_13184 = add i32 %v5_13180, %v0_1317c
  store i32 %v2_13184, i32* @r2, align 4
  %v2_13188 = icmp eq i32 %v4_1317c, 0
  %v1_1318c = load i32, i32* @r5, align 4
  %v2_1318c = add i32 %v1_1318c, 4
  %v3_1318c = inttoptr i32 %v2_1318c to i32*
  store i32 %v2_13184, i32* %v3_1318c, align 4
  br i1 %v2_13188, label %dec_label_pc_1312c, label %dec_label_pc_13194

dec_label_pc_13194:                               ; preds = %dec_label_pc_13160, %.thread
  store i32 %v2_130fc, i32* @r0, align 4
  store i32 82452, i32* %r3.global-to-local, align 4
  store i32 78248, i32* @lr, align 4
  %v3_131a4 = load i32, i32* @r2, align 4
  %v8_131a4 = call i32 @function_14214(i32 %v2_130fc, i32 1, i32 %v3_131a4, i32 82452, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_131a8 = load i32, i32* @r4, align 4
  store i32 %v0_131a8, i32* %r0.global-to-local, align 4
  store i32 %v3_130f4, i32* @r4, align 4
  store i32 %v6_130f4, i32* @r5, align 4
  ret i32 %v0_131a8

; uselistorder directives
  uselistorder i32 %v1_13178, { 0, 2, 1 }
  uselistorder i32 %v6_1312c, { 1, 0, 2 }
  uselistorder i32 %v0_1312c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_130fc, { 1, 0, 3, 2 }
  uselistorder i32 %v1_130f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 2, 1, 6, 0 }
  uselistorder label %dec_label_pc_13160, { 1, 0 }
}

define i32 @function_131c4() local_unnamed_addr {
dec_label_pc_131c4:
  ret i32 ptrtoint (i32* @global_var_1dc5c.406 to i32)
}

define i32 @function_131d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_131d0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %v1_131dc = bitcast i32* %stack_var_-20 to %tms*
  %v2_131dc = call i32 @function_14a18(%tms* %v1_131dc)
  %v2_131e4 = load i32, i32* %stack_var_-20, align 4
  %v2_131e8 = add i32 %v2_131e4, %tmp
  %v2_131f0 = mul i32 %v2_131e8, 10000
  %v1_131f4 = and i32 %v2_131f0, 2147483632
  ret i32 %v1_131f4

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @function_13210(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13210:
  %v0_13210 = call i32 @function_14e20()
  ret i32 %v0_13210
}

define i32 @function_13220(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13220:
  %v0_13220 = call i32 @function_14e20()
  ret i32 %v0_13220

; uselistorder directives
  uselistorder i32 ()* @function_14e20, { 1, 0 }
}

define i32 @function_13230(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13230:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_13234 = load i32, i32* @r2, align 4
  %v8_13234 = icmp eq i32 %v0_13234, 8
  store i1 %v8_13234, i1* %cpsr_z.global-to-local, align 1
  %v5_13238 = icmp slt i32 %v0_13234, 8
  br i1 %v5_13238, label %dec_label_pc_13298, label %dec_label_pc_1323c

dec_label_pc_1323c:                               ; preds = %dec_label_pc_13230
  %v4_1323c = mul i32 %arg2, 256
  %v5_1323c = or i32 %v4_1323c, %arg2
  %v4_13240 = mul i32 %v5_1323c, 65536
  %v5_13240 = or i32 %v4_13240, %v5_1323c
  store i32 %v5_13240, i32* %r1.global-to-local, align 4
  %v1_1324457 = urem i32 %tmp, 4
  %v2_1324458 = icmp eq i32 %v1_1324457, 0
  store i1 %v2_1324458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1324458, label %dec_label_pc_13254, label %bb

bb:                                               ; preds = %dec_label_pc_1323c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1323c ]
  %v3_1324859 = phi i32 [ %v6_13248, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1323c ]
  %v4_13248 = inttoptr i32 %v3_1324859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_13248, align 1
  %v5_13248 = load i32, i32* %r3.global-to-local, align 4
  %v6_13248 = add i32 %v5_13248, 1
  store i32 %v6_13248, i32* %r3.global-to-local, align 4
  %v0_1324c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_13258.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1324c.pr, label %dec_label_pc_13254, label %.thread

.thread:                                          ; preds = %bb
  %v2_1324c = add i32 %v0_13258.pr.pre, -1
  store i32 %v2_1324c, i32* @r2, align 4
  %v1_13244 = urem i32 %v6_13248, 4
  %v2_13244 = icmp eq i32 %v1_13244, 0
  store i1 %v2_13244, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13244, label %dec_label_pc_13254, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_13248.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_13248.pre to i8
  br label %bb

dec_label_pc_13254:                               ; preds = %.thread, %bb, %dec_label_pc_1323c
  %v0_1326028 = phi i32 [ %tmp, %dec_label_pc_1323c ], [ %v6_13248, %bb ], [ %v6_13248, %.thread ]
  %v0_13258.pr = phi i32 [ %v0_13234, %dec_label_pc_1323c ], [ %v0_13258.pr.pre, %bb ], [ %v2_1324c, %.thread ]
  %v0_13254 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13254, i32* %ip.global-to-local, align 4
  %v8_1325810 = icmp eq i32 %v0_13258.pr, 8
  store i1 %v8_1325810, i1* %cpsr_z.global-to-local, align 1
  %v5_1325c11 = icmp slt i32 %v0_13258.pr, 8
  br i1 %v5_1325c11, label %dec_label_pc_13298, label %dec_label_pc_13260.preheader

dec_label_pc_13260.preheader:                     ; preds = %dec_label_pc_13254
  %v1_1326046 = inttoptr i32 %v0_1326028 to i32*
  store i32 %v0_13254, i32* %v1_1326046, align 4
  %v3_1326047 = add i32 %v0_1326028, 4
  %v4_1326048 = inttoptr i32 %v3_1326047 to i32*
  %v5_1326049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_1326049, i32* %v4_1326048, align 4
  %v6_1326050 = add i32 %v0_1326028, 8
  store i32 %v6_1326050, i32* %r3.global-to-local, align 4
  %v0_1326451 = load i32, i32* @r2, align 4
  %v1_1326452 = add i32 %v0_1326451, -8
  store i32 %v1_1326452, i32* %r2.global-to-local, align 4
  %v5_1326c53 = icmp slt i32 %v1_1326452, 8
  br i1 %v5_1326c53, label %dec_label_pc_13260.dec_label_pc_13298.loopexit_crit_edge, label %dec_label_pc_13270

dec_label_pc_13270:                               ; preds = %dec_label_pc_13260.preheader, %dec_label_pc_13258.dec_label_pc_13260_crit_edge
  %v6_1326055 = phi i32 [ %v6_13260, %dec_label_pc_13258.dec_label_pc_13260_crit_edge ], [ %v6_1326050, %dec_label_pc_13260.preheader ]
  %v0_1326054 = phi i32 [ %v12_1328c, %dec_label_pc_13258.dec_label_pc_13260_crit_edge ], [ %v0_1326028, %dec_label_pc_13260.preheader ]
  %v1_13270 = inttoptr i32 %v6_1326055 to i32*
  %v2_13270 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13270, i32* %v1_13270, align 4
  %v3_13270 = add i32 %v0_1326054, 12
  %v4_13270 = inttoptr i32 %v3_13270 to i32*
  %v5_13270 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_13270, i32* %v4_13270, align 4
  %v6_13270 = add i32 %v0_1326054, 16
  store i32 %v6_13270, i32* %r3.global-to-local, align 4
  %v0_13274 = load i32, i32* %r2.global-to-local, align 4
  %v1_13274 = add i32 %v0_13274, -8
  store i32 %v1_13274, i32* %r2.global-to-local, align 4
  %v5_1327c = icmp slt i32 %v1_13274, 8
  br i1 %v5_1327c, label %dec_label_pc_13270.dec_label_pc_13298.loopexit_crit_edge, label %dec_label_pc_13280

dec_label_pc_13280:                               ; preds = %dec_label_pc_13270
  %v1_13280 = inttoptr i32 %v6_13270 to i32*
  %v2_13280 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13280, i32* %v1_13280, align 4
  %v3_13280 = add i32 %v0_1326054, 20
  %v4_13280 = inttoptr i32 %v3_13280 to i32*
  %v5_13280 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_13280, i32* %v4_13280, align 4
  %v6_13280 = add i32 %v0_1326054, 24
  store i32 %v6_13280, i32* %r3.global-to-local, align 4
  %v0_13284 = load i32, i32* %r2.global-to-local, align 4
  %v1_13284 = add i32 %v0_13284, -8
  store i32 %v1_13284, i32* %r2.global-to-local, align 4
  %v5_1328c = icmp slt i32 %v1_13284, 8
  br i1 %v5_1328c, label %dec_label_pc_13280.dec_label_pc_13298.loopexit_crit_edge, label %dec_label_pc_13258

dec_label_pc_13258:                               ; preds = %dec_label_pc_13280
  %v7_1328c = inttoptr i32 %v6_13280 to i32*
  %v8_1328c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_1328c, i32* %v7_1328c, align 4
  %v9_1328c = add i32 %v0_1326054, 28
  %v10_1328c = inttoptr i32 %v9_1328c to i32*
  %v11_1328c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_1328c, i32* %v10_1328c, align 4
  %v12_1328c = add i32 %v0_1326054, 32
  store i32 %v12_1328c, i32* %r3.global-to-local, align 4
  %v6_13290 = load i32, i32* %r2.global-to-local, align 4
  %v7_13290 = add i32 %v6_13290, -8
  store i32 %v7_13290, i32* %r2.global-to-local, align 4
  %v5_1325c = icmp slt i32 %v7_13290, 8
  br i1 %v5_1325c, label %dec_label_pc_13258.dec_label_pc_13298.loopexit_crit_edge, label %dec_label_pc_13258.dec_label_pc_13260_crit_edge

dec_label_pc_13258.dec_label_pc_13260_crit_edge:  ; preds = %dec_label_pc_13258
  %v2_13260.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13260 = inttoptr i32 %v12_1328c to i32*
  store i32 %v2_13260.pre, i32* %v1_13260, align 4
  %v3_13260 = add i32 %v0_1326054, 36
  %v4_13260 = inttoptr i32 %v3_13260 to i32*
  %v5_13260 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_13260, i32* %v4_13260, align 4
  %v6_13260 = add i32 %v0_1326054, 40
  store i32 %v6_13260, i32* %r3.global-to-local, align 4
  %v0_13264 = load i32, i32* %r2.global-to-local, align 4
  %v1_13264 = add i32 %v0_13264, -8
  store i32 %v1_13264, i32* %r2.global-to-local, align 4
  %v5_1326c = icmp slt i32 %v1_13264, 8
  br i1 %v5_1326c, label %dec_label_pc_13260.dec_label_pc_13298.loopexit_crit_edge, label %dec_label_pc_13270

dec_label_pc_13260.dec_label_pc_13298.loopexit_crit_edge: ; preds = %dec_label_pc_13258.dec_label_pc_13260_crit_edge, %dec_label_pc_13260.preheader
  %v1_13264.lcssa = phi i32 [ %v1_1326452, %dec_label_pc_13260.preheader ], [ %v1_13264, %dec_label_pc_13258.dec_label_pc_13260_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13298

dec_label_pc_13258.dec_label_pc_13298.loopexit_crit_edge: ; preds = %dec_label_pc_13258
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13298

dec_label_pc_13270.dec_label_pc_13298.loopexit_crit_edge: ; preds = %dec_label_pc_13270
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13298

dec_label_pc_13280.dec_label_pc_13298.loopexit_crit_edge: ; preds = %dec_label_pc_13280
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13298

dec_label_pc_13298:                               ; preds = %dec_label_pc_13254, %dec_label_pc_13260.dec_label_pc_13298.loopexit_crit_edge, %dec_label_pc_13258.dec_label_pc_13298.loopexit_crit_edge, %dec_label_pc_13270.dec_label_pc_13298.loopexit_crit_edge, %dec_label_pc_13280.dec_label_pc_13298.loopexit_crit_edge, %dec_label_pc_13230
  %v0_132a0 = phi i32 [ %v0_13234, %dec_label_pc_13230 ], [ %v1_13284, %dec_label_pc_13280.dec_label_pc_13298.loopexit_crit_edge ], [ %v1_13274, %dec_label_pc_13270.dec_label_pc_13298.loopexit_crit_edge ], [ %v7_13290, %dec_label_pc_13258.dec_label_pc_13298.loopexit_crit_edge ], [ %v1_13264.lcssa, %dec_label_pc_13260.dec_label_pc_13298.loopexit_crit_edge ], [ %v0_13258.pr, %dec_label_pc_13254 ]
  %v2_13298 = icmp eq i32 %v0_132a0, 0
  store i1 %v2_13298, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13298, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_13298
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_13298
  %v1_132a0 = sub i32 7, %v0_132a0
  store i32 %v1_132a0, i32* %r2.global-to-local, align 4
  %v3_132a4 = mul i32 %v1_132a0, 4
  %v4_132a4 = add i32 %v3_132a4, ptrtoint (i32* @global_var_132ac.408 to i32)
  call void @__pseudo_branch(i32 %v4_132a4)
  %v0_132ac = load i32, i32* %r1.global-to-local, align 4
  %v1_132ac = trunc i32 %v0_132ac to i8
  %v2_132ac = load i32, i32* %r3.global-to-local, align 4
  %v3_132ac = inttoptr i32 %v2_132ac to i8*
  store i8 %v1_132ac, i8* %v3_132ac, align 1
  %v4_132ac = load i32, i32* %r3.global-to-local, align 4
  %v5_132ac = add i32 %v4_132ac, 1
  store i32 %v5_132ac, i32* %r3.global-to-local, align 4
  %v0_132b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_132b0 = trunc i32 %v0_132b0 to i8
  %v3_132b0 = inttoptr i32 %v5_132ac to i8*
  store i8 %v1_132b0, i8* %v3_132b0, align 1
  %v4_132b0 = load i32, i32* %r3.global-to-local, align 4
  %v5_132b0 = add i32 %v4_132b0, 1
  store i32 %v5_132b0, i32* %r3.global-to-local, align 4
  %v0_132b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_132b4 = trunc i32 %v0_132b4 to i8
  %v3_132b4 = inttoptr i32 %v5_132b0 to i8*
  store i8 %v1_132b4, i8* %v3_132b4, align 1
  %v4_132b4 = load i32, i32* %r3.global-to-local, align 4
  %v5_132b4 = add i32 %v4_132b4, 1
  store i32 %v5_132b4, i32* %r3.global-to-local, align 4
  %v0_132b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_132b8 = trunc i32 %v0_132b8 to i8
  %v3_132b8 = inttoptr i32 %v5_132b4 to i8*
  store i8 %v1_132b8, i8* %v3_132b8, align 1
  %v4_132b8 = load i32, i32* %r3.global-to-local, align 4
  %v5_132b8 = add i32 %v4_132b8, 1
  store i32 %v5_132b8, i32* %r3.global-to-local, align 4
  %v0_132bc = load i32, i32* %r1.global-to-local, align 4
  %v1_132bc = trunc i32 %v0_132bc to i8
  %v3_132bc = inttoptr i32 %v5_132b8 to i8*
  store i8 %v1_132bc, i8* %v3_132bc, align 1
  %v4_132bc = load i32, i32* %r3.global-to-local, align 4
  %v5_132bc = add i32 %v4_132bc, 1
  store i32 %v5_132bc, i32* %r3.global-to-local, align 4
  %v0_132c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_132c0 = trunc i32 %v0_132c0 to i8
  %v3_132c0 = inttoptr i32 %v5_132bc to i8*
  store i8 %v1_132c0, i8* %v3_132c0, align 1
  %v4_132c0 = load i32, i32* %r3.global-to-local, align 4
  %v5_132c0 = add i32 %v4_132c0, 1
  store i32 %v5_132c0, i32* %r3.global-to-local, align 4
  %v0_132c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_132c4 = trunc i32 %v0_132c4 to i8
  %v3_132c4 = inttoptr i32 %v5_132c0 to i8*
  store i8 %v1_132c4, i8* %v3_132c4, align 1
  %v4_132c4 = load i32, i32* %r3.global-to-local, align 4
  %v5_132c4 = add i32 %v4_132c4, 1
  store i32 %v5_132c4, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_13260, { 1, 0 }
  uselistorder i32 %v12_1328c, { 1, 2, 0 }
  uselistorder i32 %v0_1326054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_13258.pr, { 0, 2, 1 }
  uselistorder i32 %v6_13248, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1323c, { 1, 0 }
  uselistorder i32 %v0_13234, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 9, 14, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 2, 1, 3, 0, 4, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13298, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_13270, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_132d0(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_132d0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_132d0 = sub i32 %arg1, %tmp
  %v1_132d4 = add i32 %v2_132d0, -1
  store i32 %v1_132d4, i32* %r2.global-to-local, align 4
  %v2_132d84 = load i8, i8* %arg2, align 1
  %v5_132d86 = add i32 %tmp, 1
  store i32 %v5_132d86, i32* %r1.global-to-local, align 4
  %v2_132dc7 = icmp eq i8 %v2_132d84, 0
  store i1 %v2_132dc7, i1* %cpsr_z.global-to-local, align 1
  %v5_132e08 = inttoptr i32 %arg1 to i8*
  store i8 %v2_132d84, i8* %v5_132e08, align 1
  %v0_132e49 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_132e49, label %dec_label_pc_132e8, label %dec_label_pc_132d8.dec_label_pc_132d8_crit_edge

dec_label_pc_132d8.dec_label_pc_132d8_crit_edge:  ; preds = %dec_label_pc_132d0, %dec_label_pc_132d8.dec_label_pc_132d8_crit_edge
  %v0_132d8.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_132e0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_132d8 = inttoptr i32 %v0_132d8.pre to i8*
  %v2_132d8 = load i8, i8* %v1_132d8, align 1
  %v5_132d8 = add i32 %v0_132d8.pre, 1
  store i32 %v5_132d8, i32* %r1.global-to-local, align 4
  %v2_132dc = icmp eq i8 %v2_132d8, 0
  store i1 %v2_132dc, i1* %cpsr_z.global-to-local, align 1
  %v4_132e0 = add i32 %v5_132d8, %v3_132e0.pre
  %v5_132e0 = inttoptr i32 %v4_132e0 to i8*
  store i8 %v2_132d8, i8* %v5_132e0, align 1
  %v0_132e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_132e4, label %dec_label_pc_132e8, label %dec_label_pc_132d8.dec_label_pc_132d8_crit_edge

dec_label_pc_132e8:                               ; preds = %dec_label_pc_132d8.dec_label_pc_132d8_crit_edge, %dec_label_pc_132d0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_132d8.dec_label_pc_132d8_crit_edge, { 1, 0 }
}

define i32 @function_132ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_132ec:
  %stack_var_-8 = alloca i32, align 4
  %v2_132f0 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_132f0, i32* @r1, align 4
  %v0_132f8 = call i32 @function_152b0()
  %v2_132fc = icmp eq i32 %v0_132f8, 0
  br i1 %v2_132fc, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_132ec
  %v3_13304 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_132ec, %bb
  %v5_1330c = phi i32 [ -1, %dec_label_pc_132ec ], [ %v3_13304, %bb ]
  ret i32 %v5_1330c

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_13310(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13310:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13310 = load i32, i32* @r4, align 4
  store i32 %v3_13310, i32* %stack_var_-8, align 4
  %v5_13314 = call i32 @bind(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_13314, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13314, -4095
  br i1 %tmp, label %dec_label_pc_13334, label %dec_label_pc_13324

dec_label_pc_13324:                               ; preds = %dec_label_pc_13310
  %v0_13324 = call i32 @function_131c4()
  %v0_13328 = load i32, i32* %r4.global-to-local, align 4
  %v1_13328 = sub i32 0, %v0_13328
  %v2_1332c = inttoptr i32 %v0_13324 to i32*
  store i32 %v1_13328, i32* %v2_1332c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13334

dec_label_pc_13334:                               ; preds = %dec_label_pc_13310, %dec_label_pc_13324
  %v0_13334 = phi i32 [ %v5_13314, %dec_label_pc_13310 ], [ -1, %dec_label_pc_13324 ]
  %v2_13338 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13338, i32* @r4, align 4
  ret i32 %v0_13334

; uselistorder directives
  uselistorder i32 %v5_13314, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13334, { 1, 0 }
}

define i32 @function_1333c(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1333c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1333c = load i32, i32* @r4, align 4
  store i32 %v3_1333c, i32* %stack_var_-8, align 4
  %v5_13340 = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_13340, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13340, -4095
  br i1 %tmp, label %dec_label_pc_13360, label %dec_label_pc_13350

dec_label_pc_13350:                               ; preds = %dec_label_pc_1333c
  %v0_13350 = call i32 @function_131c4()
  %v0_13354 = load i32, i32* %r4.global-to-local, align 4
  %v1_13354 = sub i32 0, %v0_13354
  %v2_13358 = inttoptr i32 %v0_13350 to i32*
  store i32 %v1_13354, i32* %v2_13358, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13360

dec_label_pc_13360:                               ; preds = %dec_label_pc_1333c, %dec_label_pc_13350
  %v0_13360 = phi i32 [ %v5_13340, %dec_label_pc_1333c ], [ -1, %dec_label_pc_13350 ]
  %v2_13364 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13364, i32* @r4, align 4
  ret i32 %v0_13360

; uselistorder directives
  uselistorder i32 %v5_13340, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13360, { 1, 0 }
}

define i32 @function_13368(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13368:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13368 = load i32, i32* @r4, align 4
  store i32 %v3_13368, i32* %stack_var_-8, align 4
  %v5_1336c = inttoptr i32 %arg3 to i32*
  %v6_1336c = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_1336c)
  store i32 %v6_1336c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_1336c, -4095
  br i1 %tmp, label %dec_label_pc_1338c, label %dec_label_pc_1337c

dec_label_pc_1337c:                               ; preds = %dec_label_pc_13368
  %v0_1337c = call i32 @function_131c4()
  %v0_13380 = load i32, i32* %r4.global-to-local, align 4
  %v1_13380 = sub i32 0, %v0_13380
  %v2_13384 = inttoptr i32 %v0_1337c to i32*
  store i32 %v1_13380, i32* %v2_13384, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1338c

dec_label_pc_1338c:                               ; preds = %dec_label_pc_13368, %dec_label_pc_1337c
  %v0_1338c = phi i32 [ %v6_1336c, %dec_label_pc_13368 ], [ -1, %dec_label_pc_1337c ]
  %v2_13390 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13390, i32* @r4, align 4
  ret i32 %v0_1338c

; uselistorder directives
  uselistorder i32 %v6_1336c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1338c, { 1, 0 }
}

define i32 @function_13394(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_13394:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13394 = load i32, i32* @r4, align 4
  store i32 %v3_13394, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_1339c = call i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32* null)
  store i32 %v5_1339c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_1339c, -4095
  br i1 %tmp, label %dec_label_pc_133bc, label %dec_label_pc_133ac

dec_label_pc_133ac:                               ; preds = %dec_label_pc_13394
  %v0_133ac = call i32 @function_131c4()
  %v0_133b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_133b0 = sub i32 0, %v0_133b0
  %v2_133b4 = inttoptr i32 %v0_133ac to i32*
  store i32 %v1_133b0, i32* %v2_133b4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_133bc

dec_label_pc_133bc:                               ; preds = %dec_label_pc_13394, %dec_label_pc_133ac
  %v0_133bc = phi i32 [ %v5_1339c, %dec_label_pc_13394 ], [ -1, %dec_label_pc_133ac ]
  %v2_133c0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_133c0, i32* @r4, align 4
  ret i32 %v0_133bc

; uselistorder directives
  uselistorder i32 %v5_1339c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_133bc, { 1, 0 }
}

define i32 @function_133c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_133c4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_133c4 = load i32, i32* @r4, align 4
  store i32 %v3_133c4, i32* %stack_var_-8, align 4
  %v2_133c8 = call i32 @listen(i32 %arg1, i32 %arg2)
  store i32 %v2_133c8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_133c8, -4095
  br i1 %tmp, label %dec_label_pc_133e8, label %dec_label_pc_133d8

dec_label_pc_133d8:                               ; preds = %dec_label_pc_133c4
  %v0_133d8 = call i32 @function_131c4()
  %v0_133dc = load i32, i32* %r4.global-to-local, align 4
  %v1_133dc = sub i32 0, %v0_133dc
  %v2_133e0 = inttoptr i32 %v0_133d8 to i32*
  store i32 %v1_133dc, i32* %v2_133e0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_133e8

dec_label_pc_133e8:                               ; preds = %dec_label_pc_133c4, %dec_label_pc_133d8
  %v0_133e8 = phi i32 [ %v2_133c8, %dec_label_pc_133c4 ], [ -1, %dec_label_pc_133d8 ]
  %v2_133ec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_133ec, i32* @r4, align 4
  ret i32 %v0_133e8

; uselistorder directives
  uselistorder i32 %v2_133c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_133e8, { 1, 0 }
}

define i32 @function_133f0(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_133f0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_133f0 = load i32, i32* @r4, align 4
  store i32 %v3_133f0, i32* %stack_var_-8, align 4
  %v5_133f4 = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_133f4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_133f4, -4095
  br i1 %tmp, label %dec_label_pc_13414, label %dec_label_pc_13404

dec_label_pc_13404:                               ; preds = %dec_label_pc_133f0
  %v0_13404 = call i32 @function_131c4()
  %v0_13408 = load i32, i32* %r4.global-to-local, align 4
  %v1_13408 = sub i32 0, %v0_13408
  %v2_1340c = inttoptr i32 %v0_13404 to i32*
  store i32 %v1_13408, i32* %v2_1340c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13414

dec_label_pc_13414:                               ; preds = %dec_label_pc_133f0, %dec_label_pc_13404
  %v0_13414 = phi i32 [ %v5_133f4, %dec_label_pc_133f0 ], [ -1, %dec_label_pc_13404 ]
  %v2_13418 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13418, i32* @r4, align 4
  ret i32 %v0_13414

; uselistorder directives
  uselistorder i32 %v5_133f4, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13414, { 1, 0 }
}

define i32 @function_1341c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1341c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1341c = load i32, i32* @r4, align 4
  store i32 %v3_1341c, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_13428 = call i32 @recvfrom(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32* null)
  store i32 %v5_13428, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13428, -4095
  br i1 %tmp, label %dec_label_pc_13448, label %dec_label_pc_13438

dec_label_pc_13438:                               ; preds = %dec_label_pc_1341c
  %v0_13438 = call i32 @function_131c4()
  %v0_1343c = load i32, i32* %r4.global-to-local, align 4
  %v1_1343c = sub i32 0, %v0_1343c
  %v2_13440 = inttoptr i32 %v0_13438 to i32*
  store i32 %v1_1343c, i32* %v2_13440, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13448

dec_label_pc_13448:                               ; preds = %dec_label_pc_1341c, %dec_label_pc_13438
  %v0_13448 = phi i32 [ %v5_13428, %dec_label_pc_1341c ], [ -1, %dec_label_pc_13438 ]
  %v2_1344c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1344c, i32* @r4, align 4
  ret i32 %v0_13448

; uselistorder directives
  uselistorder i32 %v5_13428, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13448, { 1, 0 }
}

define i32 @function_13450(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13450:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13450 = load i32, i32* @r4, align 4
  store i32 %v3_13450, i32* %stack_var_-8, align 4
  %v5_13454 = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_13454, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13454, -4095
  br i1 %tmp, label %dec_label_pc_13474, label %dec_label_pc_13464

dec_label_pc_13464:                               ; preds = %dec_label_pc_13450
  %v0_13464 = call i32 @function_131c4()
  %v0_13468 = load i32, i32* %r4.global-to-local, align 4
  %v1_13468 = sub i32 0, %v0_13468
  %v2_1346c = inttoptr i32 %v0_13464 to i32*
  store i32 %v1_13468, i32* %v2_1346c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13474

dec_label_pc_13474:                               ; preds = %dec_label_pc_13450, %dec_label_pc_13464
  %v0_13474 = phi i32 [ %v5_13454, %dec_label_pc_13450 ], [ -1, %dec_label_pc_13464 ]
  %v2_13478 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13478, i32* @r4, align 4
  ret i32 %v0_13474

; uselistorder directives
  uselistorder i32 %v5_13454, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13474, { 1, 0 }
}

define i32 @function_1347c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1347c:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_13488 = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_13488, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13488, -4095
  br i1 %tmp, label %dec_label_pc_134a8, label %dec_label_pc_13498

dec_label_pc_13498:                               ; preds = %dec_label_pc_1347c
  %v0_13498 = call i32 @function_131c4()
  %v0_1349c = load i32, i32* %r4.global-to-local, align 4
  %v1_1349c = sub i32 0, %v0_1349c
  %v2_134a0 = inttoptr i32 %v0_13498 to i32*
  store i32 %v1_1349c, i32* %v2_134a0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_134a8

dec_label_pc_134a8:                               ; preds = %dec_label_pc_1347c, %dec_label_pc_13498
  %v0_134a8 = phi i32 [ %v5_13488, %dec_label_pc_1347c ], [ -1, %dec_label_pc_13498 ]
  ret i32 %v0_134a8

; uselistorder directives
  uselistorder i32 %v5_13488, { 1, 0, 2 }
  uselistorder label %dec_label_pc_134a8, { 1, 0 }
}

define i32 @function_134b0(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_134b0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_134b0 = load i32, i32* @r4, align 4
  store i32 %v3_134b0, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_134b8 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_134b8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_134b8, -4095
  br i1 %tmp, label %dec_label_pc_134d8, label %dec_label_pc_134c8

dec_label_pc_134c8:                               ; preds = %dec_label_pc_134b0
  %v0_134c8 = call i32 @function_131c4()
  %v0_134cc = load i32, i32* %r4.global-to-local, align 4
  %v1_134cc = sub i32 0, %v0_134cc
  %v2_134d0 = inttoptr i32 %v0_134c8 to i32*
  store i32 %v1_134cc, i32* %v2_134d0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_134d8

dec_label_pc_134d8:                               ; preds = %dec_label_pc_134b0, %dec_label_pc_134c8
  %v0_134d8 = phi i32 [ %v5_134b8, %dec_label_pc_134b0 ], [ -1, %dec_label_pc_134c8 ]
  %v2_134dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_134dc, i32* @r4, align 4
  ret i32 %v0_134d8

; uselistorder directives
  uselistorder i32 %v5_134b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_134d8, { 1, 0 }
}

define i32 @function_134e0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_134e0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_134e0 = load i32, i32* @r4, align 4
  store i32 %v3_134e0, i32* %stack_var_-8, align 4
  %v3_134e4 = call i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_134e4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_134e4, -4095
  br i1 %tmp, label %dec_label_pc_13504, label %dec_label_pc_134f4

dec_label_pc_134f4:                               ; preds = %dec_label_pc_134e0
  %v0_134f4 = call i32 @function_131c4()
  %v0_134f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_134f8 = sub i32 0, %v0_134f8
  %v2_134fc = inttoptr i32 %v0_134f4 to i32*
  store i32 %v1_134f8, i32* %v2_134fc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13504

dec_label_pc_13504:                               ; preds = %dec_label_pc_134e0, %dec_label_pc_134f4
  %v0_13504 = phi i32 [ %v3_134e4, %dec_label_pc_134e0 ], [ -1, %dec_label_pc_134f4 ]
  %v2_13508 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13508, i32* @r4, align 4
  ret i32 %v0_13504

; uselistorder directives
  uselistorder i32 %v3_134e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13504, { 1, 0 }
}

define i32 @function_1350c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1350c:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_13528, label %dec_label_pc_13518

dec_label_pc_13518:                               ; preds = %dec_label_pc_1350c
  %v8_1351c = icmp sgt i32 %arg1, 64
  br i1 %v8_1351c, label %dec_label_pc_13528, label %dec_label_pc_13520

dec_label_pc_13520:                               ; preds = %dec_label_pc_13518
  %v0_13524 = call i32 @function_13630()
  br label %dec_label_pc_13528

dec_label_pc_13528:                               ; preds = %dec_label_pc_13518, %dec_label_pc_1350c, %dec_label_pc_13520
  %v0_13528 = call i32 @function_131c4()
  %v2_13530 = inttoptr i32 %v0_13528 to i32*
  store i32 22, i32* %v2_13530, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13528, { 2, 0, 1 }
}

define i32 @function_1353c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1353c:
  store i32 128, i32* @r2, align 4
  %v0_13548 = load i32, i32* @r0, align 4
  %v2_13548 = inttoptr i32 %v0_13548 to i8*
  %v3_13548 = call i32 @function_13230(i8* %v2_13548, i32 0)
  ret i32 0
}

define i32 @function_13554(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13554:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13554 = load i32, i32* @r4, align 4
  store i32 %v3_13554, i32* %stack_var_-12, align 4
  %v6_13554 = load i32, i32* @r5, align 4
  %v10_13554 = ptrtoint i32* %stack_var_-12 to i32
  %v7_13558 = icmp eq i32 %arg2, -1
  %v0_13564.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_13558, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_13554
  br label %dec_label_pc_1357c

bb:                                               ; preds = %dec_label_pc_13554
  %v2_13560 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_13564.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_13564.pre, 1
  br i1 %tmp19, label %dec_label_pc_1357c, label %dec_label_pc_1356c

dec_label_pc_1356c:                               ; preds = %bb
  %v7_13570 = icmp sgt i32 %v0_13564.pre, 64
  br i1 %v7_13570, label %dec_label_pc_1357c, label %bb20

bb20:                                             ; preds = %dec_label_pc_1356c
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_135a024 = add i32 %v10_13554, 124
  store i32 %v5_135a024, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13590

dec_label_pc_1357c:                               ; preds = %.thread, %dec_label_pc_1356c, %bb
  %v0_1357c = call i32 @function_131c4()
  store i32 %v0_1357c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_13588 = inttoptr i32 %v0_1357c to i32*
  store i32 22, i32* %v2_13588, align 4
  %v0_135fc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_135fc

dec_label_pc_13590:                               ; preds = %bb20, %dec_label_pc_13590
  %v5_135a025 = phi i32 [ %v5_135a024, %bb20 ], [ %v5_135a0, %dec_label_pc_13590 ]
  %v2_13594 = add i32 %v5_135a025, -136
  %v3_13594 = inttoptr i32 %v2_13594 to i32*
  store i32 0, i32* %v3_13594, align 4
  %v0_13598.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_13598 = add i32 %v0_13598.pre, -1
  store i32 %v1_13598, i32* %r0.global-to-local, align 4
  %v6_13598 = icmp slt i32 %v1_13598, 0
  %v4_135a0 = mul i32 %v1_13598, 4
  %v5_135a0 = add i32 %v4_135a0, %v10_13554
  store i32 %v5_135a0, i32* %r2.global-to-local, align 4
  br i1 %v6_13598, label %dec_label_pc_135a8, label %dec_label_pc_13590

dec_label_pc_135a8:                               ; preds = %dec_label_pc_13590
  %v2_135a8 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_135a8, i32* @r5, align 4
  %v2_135ac = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_135ac, i32* @r0, align 4
  %v0_135b0 = load i32, i32* @r4, align 4
  store i32 %v0_135b0, i32* @r1, align 4
  %v0_135b4 = call i32 @function_13630()
  store i32 %v0_135b4, i32* %r0.global-to-local, align 4
  %v1_135b8 = icmp slt i32 %v0_135b4, 0
  br i1 %v1_135b8, label %dec_label_pc_135f8, label %dec_label_pc_135c0

dec_label_pc_135c0:                               ; preds = %dec_label_pc_135a8
  %v0_135c0 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1dd8c.410 to i32), i32* %r0.global-to-local, align 4
  %v2_135c8 = call i32 @function_1360c(i32 ptrtoint (i32* @global_var_1dd8c.410 to i32), i32 %v0_135c0)
  store i32 %v2_13560, i32* %r2.global-to-local, align 4
  %v0_135e0 = load i32, i32* @r4, align 4
  store i32 %v0_135e0, i32* %r0.global-to-local, align 4
  %v4_135e8 = call i32 @function_144f8(i32 %v0_135e0, i32* nonnull %stack_var_-152, i32 %v2_13560)
  store i32 %v4_135e8, i32* %r0.global-to-local, align 4
  %v1_135ec = icmp slt i32 %v4_135e8, 0
  br i1 %v1_135ec, label %dec_label_pc_135f8, label %bb23

bb23:                                             ; preds = %dec_label_pc_135c0
  %v5_135f0 = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_135f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_135fc

dec_label_pc_135f8:                               ; preds = %dec_label_pc_135c0, %dec_label_pc_135a8
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_135fc

dec_label_pc_135fc:                               ; preds = %bb23, %dec_label_pc_1357c, %dec_label_pc_135f8
  %v0_135fc = phi i32 [ %v5_135f0, %bb23 ], [ %v0_135fc.pre, %dec_label_pc_1357c ], [ -1, %dec_label_pc_135f8 ]
  store i32 %v0_135fc, i32* %r0.global-to-local, align 4
  %v2_13604 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13604, i32* @r4, align 4
  store i32 %v6_13554, i32* @r5, align 4
  ret i32 %v0_135fc

; uselistorder directives
  uselistorder i32 %v0_135fc, { 1, 0 }
  uselistorder i32 %v5_135a0, { 1, 0 }
  uselistorder i32 %v1_13598, { 0, 2, 1 }
  uselistorder i32 %v2_13560, { 1, 0 }
  uselistorder i32 %v0_13564.pre, { 1, 0, 2 }
  uselistorder i32 %v10_13554, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 6, 9, 8, 7, 10, 4, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_135fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13590, { 1, 0 }
  uselistorder label %dec_label_pc_1357c, { 1, 2, 0 }
}

define i32 @function_1360c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1360c:
  %v1_1360c = add i32 %arg2, -1
  %v3_13610 = udiv i32 %v1_1360c, 32
  %v4_13614 = mul nuw nsw i32 %v3_13610, 4
  %v5_13614 = add i32 %v4_13614, %arg1
  %v6_13614 = inttoptr i32 %v5_13614 to i32*
  %v7_13614 = load i32, i32* %v6_13614, align 4
  %v1_13618 = urem i32 %v1_1360c, 32
  %v7_13620 = shl i32 1, %v1_13618
  %v8_13620 = and i32 %v7_13614, %v7_13620
  %v10_13620 = icmp ne i32 %v8_13620, 0
  %. = zext i1 %v10_13620 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_1360c, { 1, 0 }
}

define i32 @function_13630() local_unnamed_addr {
dec_label_pc_13630:
  %v0_13630 = load i32, i32* @r1, align 4
  %v1_13630 = add i32 %v0_13630, -1
  %v3_13634 = udiv i32 %v1_13630, 32
  store i32 %v3_13634, i32* @ip, align 4
  %v0_13638 = load i32, i32* @r0, align 4
  %v4_13638 = mul nuw nsw i32 %v3_13634, 4
  %v5_13638 = add i32 %v0_13638, %v4_13638
  %v6_13638 = inttoptr i32 %v5_13638 to i32*
  %v7_13638 = load i32, i32* %v6_13638, align 4
  %v1_1363c = urem i32 %v1_13630, 32
  %v7_13644 = shl i32 1, %v1_1363c
  %v8_13644 = or i32 %v7_13638, %v7_13644
  store i32 %v8_13644, i32* %v6_13638, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_13634, { 1, 0 }
  uselistorder i32 %v1_13630, { 1, 0 }
}

define i32 @function_13654(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13654:
  %v1_13654 = add i32 %arg2, -1
  %v3_13658 = udiv i32 %v1_13654, 32
  %v4_1365c = mul nuw nsw i32 %v3_13658, 4
  %v5_1365c = add i32 %v4_1365c, %arg1
  %v6_1365c = inttoptr i32 %v5_1365c to i32*
  %v7_1365c = load i32, i32* %v6_1365c, align 4
  %v1_13660 = urem i32 %v1_13654, 32
  %tmp = shl i32 -1, %v1_13660
  %v8_13668 = add i32 %tmp, -1
  %v9_13668 = and i32 %v7_1365c, %v8_13668
  store i32 %v9_13668, i32* %v6_1365c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13654, { 1, 0 }
}

define i32 @function_13678(i32 %arg1) local_unnamed_addr {
dec_label_pc_13678:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13678 = load i32, i32* @r4, align 4
  %v6_13678 = load i32, i32* @r5, align 4
  %v9_13678 = load i32, i32* @r6, align 4
  %v0_1367c = load i32, i32* %r0.global-to-local, align 4
  %v2_1367c = icmp eq i32 %v0_1367c, 0
  %v2_13680 = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_1367c, label %bb, label %dec_label_pc_1368c

bb:                                               ; preds = %dec_label_pc_13678
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13694

dec_label_pc_1368c:                               ; preds = %dec_label_pc_13678
  %tmp = icmp ugt i32 %v0_1367c, -8
  br i1 %tmp, label %dec_label_pc_13798, label %dec_label_pc_13694

dec_label_pc_13694:                               ; preds = %bb, %dec_label_pc_1368c
  %v0_13694 = phi i32 [ %v0_1367c, %dec_label_pc_1368c ], [ 1, %bb ]
  %v1_13694 = add i32 %v0_13694, 4
  store i32 %v1_13694, i32* %stack_var_-20, align 4
  store i32 %v2_13680, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1dc24.412 to i32), i32* %r0.global-to-local, align 4
  %v1_136ac = call i32 @function_1420c()
  store i32 ptrtoint (i32** @global_var_1da68.416 to i32), i32* %r0.global-to-local, align 4
  %v3_136b8 = call i32 @function_13a2c(i32* bitcast (i32** @global_var_1da68.416 to i32*), i32 %v2_13680)
  store i32 %v3_136b8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc24.412 to i32), i32* %r0.global-to-local, align 4
  store i32 79568, i32* @lr, align 4
  %v1_136cc = call i32 @function_1420c()
  store i32 %v1_136cc, i32* %r0.global-to-local, align 4
  %v2_136d0 = icmp eq i32 %v3_136b8, 0
  br i1 %v2_136d0, label %dec_label_pc_136d8, label %dec_label_pc_13788

dec_label_pc_136d8:                               ; preds = %dec_label_pc_13694
  %v2_136dc = load i32, i32* @global_var_1dc4c.419, align 4
  store i32 %v2_136dc, i32* @r4, align 4
  %v2_136e0 = load i32, i32* %stack_var_-20, align 4
  %v3_136e4 = icmp ult i32 %v2_136e0, %v2_136dc
  br i1 %v3_136e4, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_136d8
  %v3_136e8 = add i32 %v2_136dc, -1
  %v2_136ec = add i32 %v3_136e8, %v2_136e0
  %v2_136f0 = sub i32 0, %v2_136dc
  %v3_136f4 = and i32 %v2_136ec, %v2_136f0
  store i32 %v3_136f4, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_136d8, %bb14
  store i32 ptrtoint (i32* @global_var_1de0c.421 to i32), i32* %r0.global-to-local, align 4
  %v1_13700 = call i32 @function_1420c()
  %v0_13704 = load i32, i32* @r4, align 4
  store i32 %v0_13704, i32* %r0.global-to-local, align 4
  %v1_13708 = call i32 @function_149c0(i32 %v0_13704)
  store i32 %v1_13708, i32* %r0.global-to-local, align 4
  %v7_1370c = icmp eq i32 %v1_13708, -1
  br i1 %v7_1370c, label %bb15, label %dec_label_pc_13718

bb15:                                             ; preds = %.thread3
  store i32 %v1_13708, i32* @r5, align 4
  br label %dec_label_pc_1372c

dec_label_pc_13718:                               ; preds = %.thread3
  %v1_13718 = add i32 %v1_13708, 3
  %v1_1371c = and i32 %v1_13718, -4
  store i32 %v1_1371c, i32* @r5, align 4
  %v9_13720 = icmp eq i32 %v1_1371c, %v1_13708
  br i1 %v9_13720, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_13718
  %v3_13724 = sub i32 %v1_1371c, %v1_13708
  store i32 %v3_13724, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_13718, %bb16
  %v1_13728 = xor i1 %v9_13720, true
  call void @__pseudo_cond_branch(i1 %v1_13728, i32 ptrtoint (i32* @global_var_149c0.422 to i32))
  br label %dec_label_pc_1372c

dec_label_pc_1372c:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_1de0c.421 to i32), i32* %r0.global-to-local, align 4
  store i32 79676, i32* @lr, align 4
  %v1_13738 = call i32 @function_1420c()
  store i32 %v1_13738, i32* %r0.global-to-local, align 4
  %v0_1373c = load i32, i32* @r5, align 4
  %v7_1373c = icmp eq i32 %v0_1373c, -1
  br i1 %v7_1373c, label %dec_label_pc_13798, label %dec_label_pc_13744

dec_label_pc_13744:                               ; preds = %dec_label_pc_1372c
  store i32 ptrtoint (i32* @global_var_1dc24.412 to i32), i32* %r0.global-to-local, align 4
  %v1_13750 = call i32 @function_1420c()
  %v0_13754 = load i32, i32* @r4, align 4
  %v0_13758 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_1da68.416 to i32), i32* %r0.global-to-local, align 4
  %v4_13760 = call i32 @function_13b80(i32* bitcast (i32** @global_var_1da68.416 to i32*), i32 %v0_13758, i32 %v0_13754)
  store i32 ptrtoint (i32** @global_var_1da68.416 to i32), i32* %r0.global-to-local, align 4
  %v3_1376c = call i32 @function_13a2c(i32* bitcast (i32** @global_var_1da68.416 to i32*), i32 %v2_13680)
  store i32 %v3_1376c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc24.412 to i32), i32* %r0.global-to-local, align 4
  store i32 79744, i32* @lr, align 4
  %v1_1377c = call i32 @function_1420c()
  store i32 %v1_1377c, i32* %r0.global-to-local, align 4
  %v2_13780 = icmp eq i32 %v3_1376c, 0
  br i1 %v2_13780, label %dec_label_pc_13798, label %dec_label_pc_13788

dec_label_pc_13788:                               ; preds = %dec_label_pc_13694, %dec_label_pc_13744
  %v1_1378c = phi i32 [ %v3_136b8, %dec_label_pc_13694 ], [ %v3_1376c, %dec_label_pc_13744 ]
  %v2_13788 = load i32, i32* %stack_var_-20, align 4
  %v2_1378c = inttoptr i32 %v1_1378c to i32*
  store i32 %v2_13788, i32* %v2_1378c, align 4
  %v3_1378c = load i32, i32* %r4.global-to-local, align 4
  %v4_1378c = add i32 %v3_1378c, 4
  store i32 %v4_1378c, i32* %r4.global-to-local, align 4
  %v2_13790 = icmp eq i32 %v4_1378c, 0
  br i1 %v2_13790, label %dec_label_pc_13798, label %dec_label_pc_137a8

dec_label_pc_13798:                               ; preds = %dec_label_pc_13788, %dec_label_pc_13744, %dec_label_pc_1372c, %dec_label_pc_1368c
  %v0_13798 = call i32 @function_131c4()
  store i32 %v0_13798, i32* %r0.global-to-local, align 4
  %v2_137a0 = inttoptr i32 %v0_13798 to i32*
  store i32 12, i32* %v2_137a0, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_137a8

dec_label_pc_137a8:                               ; preds = %dec_label_pc_13788, %dec_label_pc_13798
  %v0_137a8 = phi i32 [ %v4_1378c, %dec_label_pc_13788 ], [ 0, %dec_label_pc_13798 ]
  store i32 %v0_137a8, i32* %r0.global-to-local, align 4
  store i32 %v3_13678, i32* @r4, align 4
  store i32 %v6_13678, i32* @r5, align 4
  store i32 %v9_13678, i32* @r6, align 4
  ret i32 %v0_137a8

; uselistorder directives
  uselistorder i32 %v0_137a8, { 1, 0 }
  uselistorder i32 %v3_1376c, { 1, 0, 2 }
  uselistorder i32 %v1_1371c, { 1, 0, 2 }
  uselistorder i32 %v1_13708, { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 %v3_136b8, { 1, 0, 2 }
  uselistorder i32 %v0_1367c, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 4, 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 18, 19, 0, 6, 7, 8, 9, 2, 11, 10, 5, 13, 12, 1, 14, 15, 16, 17, 3, 4 }
  uselistorder label %dec_label_pc_137a8, { 1, 0 }
  uselistorder label %dec_label_pc_13788, { 1, 0 }
  uselistorder label %dec_label_pc_1372c, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_13694, { 1, 0 }
}

define i32 @function_137cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_137cc:
  %stack_var_-12 = alloca i32, align 4
  %v3_137cc = load i32, i32* @r4, align 4
  store i32 %v3_137cc, i32* %stack_var_-12, align 4
  %v6_137cc = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_137d4 = mul i32 %arg2, %arg1
  store i32 %v2_137d4, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_137d8 = icmp eq i32 %arg1, 0
  store i32 %v2_137d4, i32* @r0, align 4
  br i1 %v2_137d8, label %dec_label_pc_13804, label %dec_label_pc_137e4

dec_label_pc_137e4:                               ; preds = %dec_label_pc_137cc
  %v0_137e4 = call i32 @function_12868()
  %v0_137e8 = load i32, i32* @r5, align 4
  %v9_137e8 = icmp eq i32 %v0_137e8, %v0_137e4
  store i32 0, i32* @r5, align 4
  br i1 %v9_137e8, label %dec_label_pc_137e4.dec_label_pc_13804_crit_edge, label %dec_label_pc_137f4

dec_label_pc_137e4.dec_label_pc_13804_crit_edge:  ; preds = %dec_label_pc_137e4
  %v0_13804.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13804

dec_label_pc_137f4:                               ; preds = %dec_label_pc_137e4
  %v0_137f4 = call i32 @function_131c4()
  %v2_137fc = inttoptr i32 %v0_137f4 to i32*
  store i32 12, i32* %v2_137fc, align 4
  br label %dec_label_pc_1381c

dec_label_pc_13804:                               ; preds = %dec_label_pc_137e4.dec_label_pc_13804_crit_edge, %dec_label_pc_137cc
  %v0_13804 = phi i32 [ %v0_13804.pre, %dec_label_pc_137e4.dec_label_pc_13804_crit_edge ], [ %v2_137d4, %dec_label_pc_137cc ]
  %v1_13808 = call i32 @function_13678(i32 %v0_13804)
  store i32 %v1_13808, i32* @r5, align 4
  store i32 79900, i32* @lr, align 4
  %v1_13818 = icmp ne i32 %v1_13808, 0
  call void @__pseudo_cond_branch(i1 %v1_13818, i32 ptrtoint (i32* @global_var_13230.423 to i32))
  br label %dec_label_pc_1381c

dec_label_pc_1381c:                               ; preds = %dec_label_pc_137f4, %dec_label_pc_13804
  %v0_1381c = load i32, i32* @r5, align 4
  %v2_13820 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13820, i32* @r4, align 4
  store i32 %v6_137cc, i32* @r5, align 4
  ret i32 %v0_1381c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1381c, { 1, 0 }
}

define i32 @function_13824() local_unnamed_addr {
dec_label_pc_13824:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_13824 = load i32, i32* @r0, align 4
  %v2_13824 = icmp eq i32 %v0_13824, 0
  %v3_13828 = load i32, i32* @r4, align 4
  store i32 %v3_13828, i32* %stack_var_-24, align 4
  %v6_13828 = load i32, i32* @r5, align 4
  %v9_13828 = load i32, i32* @r6, align 4
  %v15_13828 = load i32, i32* @r8, align 4
  br i1 %v2_13824, label %bb, label %bb11

bb:                                               ; preds = %dec_label_pc_13824
  ret i32 0

bb11:                                             ; preds = %dec_label_pc_13824
  %v1_13830 = add i32 %v0_13824, -4
  %v2_13830 = inttoptr i32 %v1_13830 to i32*
  %v3_13830 = load i32, i32* %v2_13830, align 4
  store i32 %v3_13830, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_1da68.416 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_13830, i32* @r4, align 4
  %v1_13848 = call i32 @function_1420c()
  %v0_1384c = load i32, i32* @r4, align 4
  %v0_13850 = load i32, i32* @r5, align 4
  %v4_13858 = call i32 @function_13b80(i32* bitcast (i32** @global_var_1da68.416 to i32*), i32 %v0_1384c, i32 %v0_13850)
  %v1_13860 = inttoptr i32 %v4_13858 to i32*
  %v2_13860 = load i32, i32* %v1_13860, align 4
  store i32 %v2_13860, i32* %r6.global-to-local, align 4
  %v2_13864 = load i32, i32* @global_var_1dc4c.419, align 4
  %v4_13868 = mul i32 %v2_13864, 8
  %v6_13868 = icmp ult i32 %v2_13860, %v4_13868
  store i32 %v4_13858, i32* @r4, align 4
  br i1 %v6_13868, label %dec_label_pc_138a8, label %dec_label_pc_13874

dec_label_pc_13874:                               ; preds = %bb11
  %v1_1387c = call i32 @function_1420c()
  %v1_13884 = call i32 @function_149c0(i32 0)
  %v0_13888 = load i32, i32* @r4, align 4
  %v1_13888 = add i32 %v0_13888, 12
  store i32 %v1_13888, i32* @r5, align 4
  %v9_1388c = icmp eq i32 %v1_13888, %v1_13884
  br i1 %v9_1388c, label %dec_label_pc_138b0, label %dec_label_pc_13894

dec_label_pc_13894:                               ; preds = %dec_label_pc_13874
  %v1_138a0 = call i32 @function_1420c()
  br label %dec_label_pc_138a8

dec_label_pc_138a8:                               ; preds = %bb11, %dec_label_pc_13894, %bb14
  %v2_138a8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_138a8, i32* @r4, align 4
  store i32 %v6_13828, i32* @r5, align 4
  store i32 %v9_13828, i32* %r6.global-to-local, align 4
  store i32 %v15_13828, i32* %r8.global-to-local, align 4
  %v0_138ac = call i32 @function_1420c()
  %v0_138b0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_138b0

dec_label_pc_138b0:                               ; preds = %dec_label_pc_13874, %dec_label_pc_138a8
  %v1_138b8 = phi i32 [ %v0_13888, %dec_label_pc_13874 ], [ %v0_138b0.pre, %dec_label_pc_138a8 ]
  %v1_138b0 = add i32 %v1_138b8, 4
  %v2_138b0 = inttoptr i32 %v1_138b0 to i32*
  %v3_138b0 = load i32, i32* %v2_138b0, align 4
  %v2_138b4 = icmp eq i32 %v3_138b0, 0
  br i1 %v2_138b4, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_138b0
  %v2_138b8 = add i32 %v1_138b8, 8
  %v3_138b8 = inttoptr i32 %v2_138b8 to i32*
  %v4_138b8 = load i32, i32* %v3_138b8, align 4
  %v3_138bc = add i32 %v3_138b0, 8
  %v4_138bc = inttoptr i32 %v3_138bc to i32*
  store i32 %v4_138b8, i32* %v4_138bc, align 4
  %v0_138c0.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_138b0, %bb12
  %v0_138c0 = phi i32 [ %v1_138b8, %dec_label_pc_138b0 ], [ %v0_138c0.pre, %bb12 ]
  %v1_138c0 = add i32 %v0_138c0, 8
  %v2_138c0 = inttoptr i32 %v1_138c0 to i32*
  %v3_138c0 = load i32, i32* %v2_138c0, align 4
  %v1_138c4 = add i32 %v0_138c0, 4
  %v2_138c4 = inttoptr i32 %v1_138c4 to i32*
  %v3_138c4 = load i32, i32* %v2_138c4, align 4
  %v2_138c8 = icmp eq i32 %v3_138c0, 0
  br i1 %v2_138c8, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_138cc = add i32 %v3_138c0, 4
  %v4_138cc = inttoptr i32 %v3_138cc to i32*
  store i32 %v3_138c4, i32* %v4_138cc, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_138d0 = load i32, i32* %r8.global-to-local, align 4
  %v3_138d0 = inttoptr i32 %v2_138d0 to i32*
  store i32 %v3_138c4, i32* %v3_138d0, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_138e0 = call i32 @function_1420c()
  %v0_138e4 = load i32, i32* %r6.global-to-local, align 4
  %v1_138e4 = load i32, i32* @r4, align 4
  %v0_138ec = load i32, i32* @r5, align 4
  %v2_138e4 = sub i32 12, %v0_138e4
  %v1_138e8 = add i32 %v2_138e4, %v1_138e4
  %v2_138ec = sub i32 %v1_138e8, %v0_138ec
  %v1_138f0 = call i32 @function_149c0(i32 %v2_138ec)
  br label %dec_label_pc_138a8

; uselistorder directives
  uselistorder i32 %v0_138c0, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_149c0, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_138b0, { 1, 0 }
  uselistorder label %dec_label_pc_138a8, { 2, 1, 0 }
}

define i32 @function_13914(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13914:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13914 = load i32, i32* @r4, align 4
  store i32 %v3_13914, i32* %stack_var_-24, align 4
  %v6_13914 = load i32, i32* @r5, align 4
  %v9_13914 = load i32, i32* @r6, align 4
  %v12_13914 = load i32, i32* @r7, align 4
  %v15_13914 = load i32, i32* @r8, align 4
  %v18_13914 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_13918 = icmp eq i32 %arg2, 0
  %v0_1391c = load i32, i32* @r0, align 4
  store i32 %v0_1391c, i32* @r7, align 4
  br i1 %v2_13918, label %dec_label_pc_13924, label %dec_label_pc_1392c

dec_label_pc_13924:                               ; preds = %dec_label_pc_13914
  %v0_13924 = call i32 @function_13824()
  %v0_13934.pre = load i32, i32* @r4, align 4
  %v2_13938.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_13934

dec_label_pc_1392c:                               ; preds = %dec_label_pc_13914
  %v2_1392c = icmp eq i32 %v0_1391c, 0
  br i1 %v2_1392c, label %dec_label_pc_13934, label %dec_label_pc_13940

dec_label_pc_13934:                               ; preds = %dec_label_pc_1392c, %dec_label_pc_13924
  %v2_13938 = phi i32 [ %v3_13914, %dec_label_pc_1392c ], [ %v2_13938.pre, %dec_label_pc_13924 ]
  %v0_13934 = phi i32 [ %arg2, %dec_label_pc_1392c ], [ %v0_13934.pre, %dec_label_pc_13924 ]
  store i32 %v2_13938, i32* @r4, align 4
  store i32 %v6_13914, i32* @r5, align 4
  store i32 %v9_13914, i32* @r6, align 4
  store i32 %v12_13914, i32* @r7, align 4
  store i32 %v18_13914, i32* @lr, align 4
  %v1_1393c = call i32 @function_13678(i32 %v0_13934)
  %v0_13940.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13940

dec_label_pc_13940:                               ; preds = %dec_label_pc_1392c, %dec_label_pc_13934
  %v0_13958 = phi i32 [ %v0_1391c, %dec_label_pc_1392c ], [ %v1_1393c, %dec_label_pc_13934 ]
  %v0_13940 = phi i32 [ %arg2, %dec_label_pc_1392c ], [ %v0_13940.pre, %dec_label_pc_13934 ]
  %v1_13940 = add i32 %v0_13940, 7
  %v1_13944 = and i32 %v1_13940, -4
  store i32 %v1_13944, i32* @r5, align 4
  %v2_13948 = icmp ugt i32 %v1_13944, 10
  %v1_1394c = add i32 %v0_13958, -4
  %v2_1394c = inttoptr i32 %v1_1394c to i32*
  %v3_1394c = load i32, i32* %v2_1394c, align 4
  store i32 %v3_1394c, i32* @r6, align 4
  br i1 %v2_13948, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_13940
  store i32 12, i32* @r5, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_13940, %bb
  %v0_139d4 = phi i32 [ %v1_13944, %dec_label_pc_13940 ], [ 12, %bb ]
  store i32 %v1_1394c, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_139d4, %v3_1394c
  br i1 %tmp, label %dec_label_pc_13960, label %dec_label_pc_139d4

dec_label_pc_13960:                               ; preds = %bb14
  %v2_13954 = sub i32 %v0_139d4, %v3_1394c
  %v1_13970 = call i32 @function_1420c()
  %v0_13978 = load i32, i32* @r8, align 4
  %v1_13978 = load i32, i32* @r6, align 4
  %v2_13978 = add i32 %v1_13978, %v0_13978
  %v4_13980 = call i32 @function_13ac0(i32* bitcast (i32** @global_var_1da68.416 to i32*), i32 %v2_13978, i32 %v2_13954)
  store i32 %v4_13980, i32* @r4, align 4
  store i32 80280, i32* @lr, align 4
  %v1_13994 = call i32 @function_1420c()
  %v0_13998 = load i32, i32* @r4, align 4
  %v2_13998 = icmp eq i32 %v0_13998, 0
  br i1 %v2_13998, label %dec_label_pc_139a8, label %.thread

.thread:                                          ; preds = %dec_label_pc_13960
  %v1_1399c = load i32, i32* @r6, align 4
  %v3_1399c = add i32 %v1_1399c, %v0_13998
  %v2_139a0 = load i32, i32* @r7, align 4
  %v3_139a0 = add i32 %v2_139a0, -4
  %v4_139a0 = inttoptr i32 %v3_139a0 to i32*
  store i32 %v3_1399c, i32* %v4_139a0, align 4
  br label %dec_label_pc_13a14

dec_label_pc_139a8:                               ; preds = %dec_label_pc_13960
  %v0_139a8 = load i32, i32* @r5, align 4
  %v1_139a8 = add i32 %v0_139a8, -4
  %v1_139ac = call i32 @function_13678(i32 %v1_139a8)
  store i32 %v1_139ac, i32* @r0, align 4
  store i32 %v1_139ac, i32* @r4, align 4
  %v2_139b0 = icmp eq i32 %v1_139ac, 0
  br i1 %v2_139b0, label %dec_label_pc_139cc, label %dec_label_pc_139b8

dec_label_pc_139b8:                               ; preds = %dec_label_pc_139a8
  %v0_139b8 = load i32, i32* @r6, align 4
  %v1_139b8 = add i32 %v0_139b8, -4
  store i32 %v1_139b8, i32* @r2, align 4
  %v0_139bc = load i32, i32* @r7, align 4
  store i32 %v0_139bc, i32* @r1, align 4
  %v3_139c0 = call i32 @function_13210(i32 %v1_139ac, i32 %v0_139bc, i32 %v1_139b8)
  %v0_139c4 = load i32, i32* @r7, align 4
  store i32 %v0_139c4, i32* @r0, align 4
  %v0_139c8 = call i32 @function_13824()
  %v0_139cc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_139cc

dec_label_pc_139cc:                               ; preds = %dec_label_pc_139a8, %dec_label_pc_139b8
  %v0_139cc = phi i32 [ 0, %dec_label_pc_139a8 ], [ %v0_139cc.pre, %dec_label_pc_139b8 ]
  store i32 %v0_139cc, i32* @r7, align 4
  br label %dec_label_pc_13a14

dec_label_pc_139d4:                               ; preds = %bb14
  %v1_139d4 = add i32 %v0_139d4, 28
  %tmp15 = icmp ugt i32 %v1_139d4, %v3_1394c
  br i1 %tmp15, label %dec_label_pc_13a14, label %dec_label_pc_139e0

dec_label_pc_139e0:                               ; preds = %dec_label_pc_139d4
  %v1_139ec = call i32 @function_1420c()
  %v0_139f0 = load i32, i32* @r8, align 4
  %v1_139f0 = load i32, i32* @r5, align 4
  %v2_139f0 = add i32 %v1_139f0, %v0_139f0
  %v1_139f4 = load i32, i32* @r6, align 4
  %v2_139f4 = sub i32 %v1_139f4, %v1_139f0
  %v4_139fc = call i32 @function_13b80(i32* bitcast (i32** @global_var_1da68.416 to i32*), i32 %v2_139f0, i32 %v2_139f4)
  store i32 80400, i32* @lr, align 4
  %v1_13a0c = call i32 @function_1420c()
  %v0_13a10 = load i32, i32* @r5, align 4
  %v1_13a10 = load i32, i32* @r7, align 4
  %v2_13a10 = add i32 %v1_13a10, -4
  %v3_13a10 = inttoptr i32 %v2_13a10 to i32*
  store i32 %v0_13a10, i32* %v3_13a10, align 4
  br label %dec_label_pc_13a14

dec_label_pc_13a14:                               ; preds = %.thread, %dec_label_pc_139d4, %dec_label_pc_139cc, %dec_label_pc_139e0
  %v0_13a14 = load i32, i32* @r7, align 4
  %v2_13a18 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13a18, i32* @r4, align 4
  store i32 %v6_13914, i32* @r5, align 4
  store i32 %v9_13914, i32* @r6, align 4
  store i32 %v12_13914, i32* @r7, align 4
  store i32 %v15_13914, i32* @r8, align 4
  ret i32 %v0_13a14

; uselistorder directives
  uselistorder i32 %v1_139f0, { 1, 0 }
  uselistorder i32 %v0_139d4, { 1, 2, 0 }
  uselistorder i32 %v3_1394c, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32** @global_var_1da68.416, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_1da68.416 to i32*), { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i32)* @function_13678, { 1, 38, 0, 4, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2 }
  uselistorder i32 ()* @function_13824, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32* @r7, { 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 7, 8, 9, 15, 16, 17, 2, 6, 24, 10, 11, 12, 13, 14, 4, 18, 3, 19, 20, 21, 22, 23, 25, 1, 42, 43, 44, 45, 46, 47, 48, 49, 226, 227, 228, 144, 145, 146, 147, 50, 0, 51, 52, 53, 54, 55, 56, 5, 57, 58, 59, 60, 61, 62, 63, 64, 65, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 229, 230, 231, 232, 233, 234, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 135, 136, 137, 138, 139, 140, 141, 142, 143 }
  uselistorder label %dec_label_pc_13a14, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_139cc, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_13940, { 1, 0 }
}

define i32 @function_13a2c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13a2c:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_13a2c = inttoptr i32 %arg2 to i32*
  %v2_13a2c = load i32, i32* %v1_13a2c, align 4
  %v3_13a30 = load i32, i32* @r4, align 4
  store i32 %v3_13a30, i32* %stack_var_-8, align 4
  %v1_13a34 = add i32 %v2_13a2c, 3
  %v1_13a38 = and i32 %v1_13a34, -4
  store i32 %v1_13a38, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_13a40 = icmp ugt i32 %v1_13a38, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_13a48 = load i32, i32* %arg1, align 4
  store i32 %v2_13a48, i32* %r0.global-to-local, align 4
  br i1 %v2_13a40, label %dec_label_pc_13ab4.preheader, label %bb

bb:                                               ; preds = %dec_label_pc_13a2c
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13ab4.preheader

dec_label_pc_13ab4.preheader:                     ; preds = %dec_label_pc_13a2c, %bb
  %v1_13a68 = phi i32 [ %v1_13a38, %dec_label_pc_13a2c ], [ 12, %bb ]
  %v2_13ab49 = icmp eq i32 %v2_13a48, 0
  br i1 %v2_13ab49, label %dec_label_pc_13abc, label %dec_label_pc_13a54

dec_label_pc_13a54:                               ; preds = %dec_label_pc_13ab4.preheader, %dec_label_pc_13ab0
  %v2_13a6c = phi i32 [ %v3_13ab0, %dec_label_pc_13ab0 ], [ %v2_13a48, %dec_label_pc_13ab4.preheader ]
  %v1_13a54 = inttoptr i32 %v2_13a6c to i32*
  %v2_13a54 = load i32, i32* %v1_13a54, align 4
  store i32 %v2_13a54, i32* %ip.global-to-local, align 4
  %v3_13a58 = icmp ult i32 %v2_13a54, %v1_13a68
  br i1 %v3_13a58, label %dec_label_pc_13ab0, label %dec_label_pc_13a60

dec_label_pc_13a60:                               ; preds = %dec_label_pc_13a54
  %v1_13a60 = add i32 %v1_13a68, 44
  %v3_13a64 = icmp ult i32 %v2_13a54, %v1_13a60
  br i1 %v3_13a64, label %dec_label_pc_13a74, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_13a60
  %v2_13a58.le = sub i32 %v2_13a54, %v1_13a68
  store i32 %v2_13a58.le, i32* %v1_13a54, align 4
  %v0_13aa0.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_13aa8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_13a74:                               ; preds = %dec_label_pc_13a60
  %v1_13a74 = add i32 %v2_13a6c, 4
  %v2_13a74 = inttoptr i32 %v1_13a74 to i32*
  %v3_13a74 = load i32, i32* %v2_13a74, align 4
  store i32 %v3_13a74, i32* %r2.global-to-local, align 4
  %v2_13a78 = icmp eq i32 %v3_13a74, 0
  br i1 %v2_13a78, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_13a74
  %v2_13a7c = add i32 %v2_13a6c, 8
  %v3_13a7c = inttoptr i32 %v2_13a7c to i32*
  %v4_13a7c = load i32, i32* %v3_13a7c, align 4
  %v3_13a80 = add i32 %v3_13a74, 8
  %v4_13a80 = inttoptr i32 %v3_13a80 to i32*
  store i32 %v4_13a7c, i32* %v4_13a80, align 4
  %v0_13a84.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13a74, %bb27
  %v0_13a84 = phi i32 [ %v2_13a6c, %dec_label_pc_13a74 ], [ %v0_13a84.pre, %bb27 ]
  %v1_13a84 = add i32 %v0_13a84, 8
  %v2_13a84 = inttoptr i32 %v1_13a84 to i32*
  %v3_13a84 = load i32, i32* %v2_13a84, align 4
  %v1_13a88 = add i32 %v0_13a84, 4
  %v2_13a88 = inttoptr i32 %v1_13a88 to i32*
  %v3_13a88 = load i32, i32* %v2_13a88, align 4
  %v2_13a8c = icmp eq i32 %v3_13a84, 0
  br i1 %v2_13a8c, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_13a90 = add i32 %v3_13a84, 4
  %v4_13a90 = inttoptr i32 %v3_13a90 to i32*
  store i32 %v3_13a88, i32* %v4_13a90, align 4
  %v1_13a98 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_13a98, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_13a94 = load i32, i32* %r1.global-to-local, align 4
  %v3_13a94 = inttoptr i32 %v2_13a94 to i32*
  store i32 %v3_13a88, i32* %v3_13a94, align 4
  %v1_13a9c.pre = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_13a9c.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_13aa8 = phi i32 [ %v0_13aa8.pre, %.thread._crit_edge ], [ %v1_13a98, %bb28 ], [ %v1_13a9c.pre, %.thread5 ]
  %v0_13aa0 = phi i32 [ %v0_13aa0.pre, %.thread._crit_edge ], [ %v1_13a98, %bb28 ], [ %v1_13a9c.pre, %.thread5 ]
  %v1_13aa0 = load i32, i32* %r0.global-to-local, align 4
  %v2_13aa0 = sub i32 %v1_13aa0, %v0_13aa0
  %v1_13aa4 = add i32 %v2_13aa0, 12
  store i32 %v1_13aa4, i32* %r0.global-to-local, align 4
  %v1_13aa8 = load i32, i32* %r4.global-to-local, align 4
  %v2_13aa8 = inttoptr i32 %v1_13aa8 to i32*
  store i32 %v0_13aa8, i32* %v2_13aa8, align 4
  %v2_13aac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13aac, i32* %r4.global-to-local, align 4
  ret i32 %v1_13aa4

dec_label_pc_13ab0:                               ; preds = %dec_label_pc_13a54
  %v1_13ab0 = add i32 %v2_13a6c, 4
  %v2_13ab0 = inttoptr i32 %v1_13ab0 to i32*
  %v3_13ab0 = load i32, i32* %v2_13ab0, align 4
  store i32 %v3_13ab0, i32* %r0.global-to-local, align 4
  %v2_13ab4 = icmp eq i32 %v3_13ab0, 0
  br i1 %v2_13ab4, label %dec_label_pc_13ab4.dec_label_pc_13abc_crit_edge, label %dec_label_pc_13a54

dec_label_pc_13ab4.dec_label_pc_13abc_crit_edge:  ; preds = %dec_label_pc_13ab0
  br label %dec_label_pc_13abc

dec_label_pc_13abc:                               ; preds = %dec_label_pc_13ab4.dec_label_pc_13abc_crit_edge, %dec_label_pc_13ab4.preheader
  store i32 %v3_13a30, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_13ab0, { 1, 2, 0 }
  uselistorder i32 %v0_13a84, { 1, 0 }
  uselistorder i32 %v2_13a54, { 1, 0, 2, 3 }
  uselistorder i32 %v2_13a6c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_13a68, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_13a54, { 1, 0 }
  uselistorder label %dec_label_pc_13ab4.preheader, { 1, 0 }
}

define i32 @function_13ac0(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13ac0:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_13ac4 = load i32, i32* %arg1, align 4
  store i32 %v2_13ac4, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  %v2_13b3c6 = icmp eq i32 %v2_13ac4, 0
  br i1 %v2_13b3c6, label %dec_label_pc_13b44, label %dec_label_pc_13ad0

dec_label_pc_13ad0:                               ; preds = %dec_label_pc_13ac0, %dec_label_pc_13b38
  %v0_13b10 = phi i32 [ %v3_13b38, %dec_label_pc_13b38 ], [ %v2_13ac4, %dec_label_pc_13ac0 ]
  %v1_13ad0 = inttoptr i32 %v0_13b10 to i32*
  %v2_13ad0 = load i32, i32* %v1_13ad0, align 4
  store i32 %v2_13ad0, i32* %r0.global-to-local, align 4
  %v2_13ad4 = sub i32 %v0_13b10, %v2_13ad0
  %v1_13ad8 = add i32 %v2_13ad4, 12
  %v3_13adc = icmp uge i32 %v1_13ad8, %arg2
  %v9_13adc = icmp eq i32 %v1_13ad8, %arg2
  %v2_13ae0 = xor i1 %v9_13adc, true
  %v3_13ae0 = and i1 %v3_13adc, %v2_13ae0
  br i1 %v3_13ae0, label %dec_label_pc_13b38, label %dec_label_pc_13ae4

dec_label_pc_13ae4:                               ; preds = %dec_label_pc_13ad0
  br i1 %v9_13adc, label %dec_label_pc_13ae8, label %dec_label_pc_13b44

dec_label_pc_13ae8:                               ; preds = %dec_label_pc_13ae4
  %v1_13ae8 = add i32 %arg3, 3
  %v1_13aec = and i32 %v1_13ae8, -4
  store i32 %v1_13aec, i32* %r2.global-to-local, align 4
  %v2_13af0 = sub i32 %v2_13ad0, %v1_13aec
  %v3_13af0 = icmp ult i32 %v2_13ad0, %v1_13aec
  br i1 %v3_13af0, label %dec_label_pc_13b44, label %dec_label_pc_13af8

dec_label_pc_13af8:                               ; preds = %dec_label_pc_13ae8
  %v1_13af8 = add i32 %v1_13aec, 44
  %v3_13afc = icmp ult i32 %v2_13ad0, %v1_13af8
  br i1 %v3_13afc, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_13af8
  store i32 %v2_13af0, i32* %v1_13ad0, align 4
  %v1_13b08 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_13b08, i32* %r0.global-to-local, align 4
  ret i32 %v1_13b08

.thread2:                                         ; preds = %dec_label_pc_13af8
  %v1_13b10 = add i32 %v0_13b10, 4
  %v2_13b10 = inttoptr i32 %v1_13b10 to i32*
  %v3_13b10 = load i32, i32* %v2_13b10, align 4
  store i32 %v3_13b10, i32* %r2.global-to-local, align 4
  %v2_13b14 = icmp eq i32 %v3_13b10, 0
  br i1 %v2_13b14, label %.thread3, label %bb17

bb17:                                             ; preds = %.thread2
  %v2_13b18 = add i32 %v0_13b10, 8
  %v3_13b18 = inttoptr i32 %v2_13b18 to i32*
  %v4_13b18 = load i32, i32* %v3_13b18, align 4
  %v3_13b1c = add i32 %v3_13b10, 8
  %v4_13b1c = inttoptr i32 %v3_13b1c to i32*
  store i32 %v4_13b18, i32* %v4_13b1c, align 4
  %v0_13b20.pre = load i32, i32* %ip.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread2, %bb17
  %v0_13b20 = phi i32 [ %v0_13b10, %.thread2 ], [ %v0_13b20.pre, %bb17 ]
  %v1_13b20 = add i32 %v0_13b20, 8
  %v2_13b20 = inttoptr i32 %v1_13b20 to i32*
  %v3_13b20 = load i32, i32* %v2_13b20, align 4
  store i32 %v3_13b20, i32* %r2.global-to-local, align 4
  %v1_13b24 = add i32 %v0_13b20, 4
  %v2_13b24 = inttoptr i32 %v1_13b24 to i32*
  %v3_13b24 = load i32, i32* %v2_13b24, align 4
  %v2_13b28 = icmp eq i32 %v3_13b20, 0
  br i1 %v2_13b28, label %.thread4, label %bb18

bb18:                                             ; preds = %.thread3
  %v3_13b2c = add i32 %v3_13b20, 4
  %v4_13b2c = inttoptr i32 %v3_13b2c to i32*
  store i32 %v3_13b24, i32* %v4_13b2c, align 4
  br label %bb19

.thread4:                                         ; preds = %.thread3
  %v2_13b30 = load i32, i32* %lr.global-to-local, align 4
  %v3_13b30 = inttoptr i32 %v2_13b30 to i32*
  store i32 %v3_13b24, i32* %v3_13b30, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %.thread4
  %v5_13b34 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v5_13b34

dec_label_pc_13b38:                               ; preds = %dec_label_pc_13ad0
  %v1_13b38 = add i32 %v0_13b10, 4
  %v2_13b38 = inttoptr i32 %v1_13b38 to i32*
  %v3_13b38 = load i32, i32* %v2_13b38, align 4
  store i32 %v3_13b38, i32* %ip.global-to-local, align 4
  %v2_13b3c = icmp eq i32 %v3_13b38, 0
  br i1 %v2_13b3c, label %dec_label_pc_13b3c.dec_label_pc_13b44.loopexit_crit_edge, label %dec_label_pc_13ad0

dec_label_pc_13b3c.dec_label_pc_13b44.loopexit_crit_edge: ; preds = %dec_label_pc_13b38
  br label %dec_label_pc_13b44

dec_label_pc_13b44:                               ; preds = %dec_label_pc_13ae8, %dec_label_pc_13ac0, %dec_label_pc_13b3c.dec_label_pc_13b44.loopexit_crit_edge, %dec_label_pc_13ae4
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_13b38, { 1, 2, 0 }
  uselistorder i32 %v0_13b20, { 1, 0 }
  uselistorder i32 %v1_13aec, { 0, 2, 1, 3 }
  uselistorder i1 %v9_13adc, { 1, 0 }
  uselistorder i32 %v2_13ad0, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_13b10, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_13b44, { 2, 0, 3, 1 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_13ad0, { 1, 0 }
}

define i32 @function_13b4c() local_unnamed_addr {
dec_label_pc_13b4c:
  %v0_13b4c = load i32, i32* @r2, align 4
  %v2_13b4c = icmp eq i32 %v0_13b4c, 0
  %v0_13b50 = load i32, i32* @r3, align 4
  %v1_13b50 = load i32, i32* @r1, align 4
  %v2_13b50 = add i32 %v1_13b50, 4
  %v3_13b50 = inttoptr i32 %v2_13b50 to i32*
  store i32 %v0_13b50, i32* %v3_13b50, align 4
  %v0_13b54 = load i32, i32* @r2, align 4
  %v1_13b54 = load i32, i32* @r1, align 4
  %v2_13b54 = add i32 %v1_13b54, 8
  %v3_13b54 = inttoptr i32 %v2_13b54 to i32*
  store i32 %v0_13b54, i32* %v3_13b54, align 4
  %v1_13b5c = load i32, i32* @r1, align 4
  br i1 %v2_13b4c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_13b4c
  %v2_13b58 = load i32, i32* @r2, align 4
  %v3_13b58 = add i32 %v2_13b58, 4
  %v4_13b58 = inttoptr i32 %v3_13b58 to i32*
  store i32 %v1_13b5c, i32* %v4_13b58, align 4
  br label %bb1

.thread:                                          ; preds = %dec_label_pc_13b4c
  %v2_13b5c = load i32, i32* @r0, align 4
  %v3_13b5c = inttoptr i32 %v2_13b5c to i32*
  store i32 %v1_13b5c, i32* %v3_13b5c, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_13b60 = load i32, i32* @r3, align 4
  %v2_13b60 = icmp eq i32 %v0_13b60, 0
  br i1 %v2_13b60, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_13b64 = load i32, i32* @r1, align 4
  %v3_13b64 = add i32 %v0_13b60, 8
  %v4_13b64 = inttoptr i32 %v3_13b64 to i32*
  store i32 %v1_13b64, i32* %v4_13b64, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_13b68 = load i32, i32* @r0, align 4
  ret i32 %v1_13b68

; uselistorder directives
  uselistorder i32 %v1_13b5c, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_13b6c() local_unnamed_addr {
dec_label_pc_13b6c:
  %v0_13b6c = load i32, i32* @r2, align 4
  %v2_13b6c = icmp eq i32 %v0_13b6c, 0
  %v1_13b70 = load i32, i32* @r1, align 4
  br i1 %v2_13b6c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13b6c
  %v2_13b70 = load i32, i32* @r0, align 4
  %v3_13b70 = inttoptr i32 %v2_13b70 to i32*
  store i32 %v1_13b70, i32* %v3_13b70, align 4
  br label %bb2

.thread:                                          ; preds = %dec_label_pc_13b6c
  %v3_13b74 = add i32 %v0_13b6c, 4
  %v4_13b74 = inttoptr i32 %v3_13b74 to i32*
  store i32 %v1_13b70, i32* %v4_13b74, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_13b78 = load i32, i32* @r2, align 4
  %v1_13b78 = load i32, i32* @r1, align 4
  %v2_13b78 = add i32 %v1_13b78, 8
  %v3_13b78 = inttoptr i32 %v2_13b78 to i32*
  store i32 %v0_13b78, i32* %v3_13b78, align 4
  %v1_13b7c = load i32, i32* @r0, align 4
  ret i32 %v1_13b7c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_13b80(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13b80:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13b80 = load i32, i32* @r4, align 4
  store i32 %v3_13b80, i32* %stack_var_-20, align 4
  %v2_13b84 = load i32, i32* %arg1, align 4
  store i32 %v2_13b84, i32* %r4.global-to-local, align 4
  %v2_13b88 = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_13ba42 = icmp eq i32 %v2_13b84, 0
  br i1 %v2_13ba42, label %dec_label_pc_13c54, label %dec_label_pc_13b94

dec_label_pc_13b94:                               ; preds = %dec_label_pc_13b80, %dec_label_pc_13b9c
  %v0_13be4 = phi i32 [ %v0_13bec, %dec_label_pc_13b9c ], [ 0, %dec_label_pc_13b80 ]
  %v0_13bec = phi i32 [ %v3_13ba0, %dec_label_pc_13b9c ], [ %v2_13b84, %dec_label_pc_13b80 ]
  %v1_13ba85.in = phi i32 [ %v3_13ba0, %dec_label_pc_13b9c ], [ %v2_13b84, %dec_label_pc_13b80 ]
  %v1_13ba85 = add i32 %v1_13ba85.in, 12
  %v3_13b94 = icmp ult i32 %v1_13ba85, %arg2
  br i1 %v3_13b94, label %dec_label_pc_13b9c, label %dec_label_pc_13bb4

dec_label_pc_13b9c:                               ; preds = %dec_label_pc_13b94
  store i32 %v0_13bec, i32* %r6.global-to-local, align 4
  %v1_13ba0 = add i32 %v0_13bec, 4
  %v2_13ba0 = inttoptr i32 %v1_13ba0 to i32*
  %v3_13ba0 = load i32, i32* %v2_13ba0, align 4
  store i32 %v3_13ba0, i32* %r4.global-to-local, align 4
  %v2_13ba4 = icmp eq i32 %v3_13ba0, 0
  br i1 %v2_13ba4, label %dec_label_pc_13ba4.dec_label_pc_13c54.loopexit_crit_edge, label %dec_label_pc_13b94

dec_label_pc_13bb4:                               ; preds = %dec_label_pc_13b94
  %v1_13bb4 = inttoptr i32 %v0_13bec to i32*
  %v2_13bb4 = load i32, i32* %v1_13bb4, align 4
  %v2_13bb8 = sub i32 %v0_13bec, %v2_13bb4
  %v1_13bbc = add i32 %v2_13bb8, 12
  %v3_13bc0 = icmp uge i32 %v1_13bbc, %v2_13b88
  %v9_13bc0 = icmp eq i32 %v1_13bbc, %v2_13b88
  %v2_13bc4 = xor i1 %v9_13bc0, true
  %v3_13bc4 = and i1 %v3_13bc0, %v2_13bc4
  br i1 %v3_13bc4, label %dec_label_pc_13c54, label %dec_label_pc_13bc8

dec_label_pc_13bc8:                               ; preds = %dec_label_pc_13bb4
  %v2_13bc8 = add i32 %v2_13bb4, %arg3
  store i32 %v2_13bc8, i32* %r7.global-to-local, align 4
  br i1 %v9_13bc0, label %dec_label_pc_13bd0, label %dec_label_pc_13bfc

dec_label_pc_13bd0:                               ; preds = %dec_label_pc_13bc8
  %v2_13bd0 = icmp eq i32 %v0_13be4, 0
  br i1 %v2_13bd0, label %dec_label_pc_13c48, label %dec_label_pc_13bd8

dec_label_pc_13bd8:                               ; preds = %dec_label_pc_13bd0
  %v1_13bd8 = add i32 %v0_13be4, 12
  %v9_13bdc = icmp eq i32 %v1_13bd8, %arg2
  br i1 %v9_13bdc, label %dec_label_pc_13be4, label %dec_label_pc_13c48

dec_label_pc_13be4:                               ; preds = %dec_label_pc_13bd8
  %v1_13be4 = inttoptr i32 %v0_13be4 to i32*
  %v2_13be4 = load i32, i32* %v1_13be4, align 4
  %v1_13be8 = add i32 %v0_13be4, 8
  %v2_13be8 = inttoptr i32 %v1_13be8 to i32*
  %v3_13be8 = load i32, i32* %v2_13be8, align 4
  store i32 %v3_13be8, i32* @r2, align 4
  store i32 %v0_13bec, i32* @r1, align 4
  %v2_13bf0 = add i32 %v2_13be4, %v2_13bc8
  store i32 %v2_13bf0, i32* %r7.global-to-local, align 4
  %v0_13bf4 = call i32 @function_13b6c()
  br label %dec_label_pc_13c48

dec_label_pc_13bfc:                               ; preds = %dec_label_pc_13bc8
  %v1_13bfc = add i32 %v0_13bec, 4
  %v2_13bfc = inttoptr i32 %v1_13bfc to i32*
  %v3_13bfc = load i32, i32* %v2_13bfc, align 4
  store i32 %v3_13bfc, i32* %r5.global-to-local, align 4
  %v2_13c00 = icmp eq i32 %v3_13bfc, 0
  br i1 %v2_13c00, label %dec_label_pc_13c34, label %dec_label_pc_13c08

dec_label_pc_13c08:                               ; preds = %dec_label_pc_13bfc
  %v1_13c08 = inttoptr i32 %v3_13bfc to i32*
  %v2_13c08 = load i32, i32* %v1_13c08, align 4
  %v2_13c0c = sub i32 %v3_13bfc, %v2_13c08
  %v1_13c10 = add i32 %v2_13c0c, 12
  %v9_13c14 = icmp eq i32 %v2_13b88, %v1_13c10
  br i1 %v9_13c14, label %dec_label_pc_13c1c, label %dec_label_pc_13c34

dec_label_pc_13c1c:                               ; preds = %dec_label_pc_13c08
  store i32 %v0_13be4, i32* @r2, align 4
  store i32 %v3_13bfc, i32* @r1, align 4
  %v2_13c24 = add i32 %v2_13c08, %v2_13bc8
  store i32 %v2_13c24, i32* %r7.global-to-local, align 4
  %v0_13c28 = call i32 @function_13b6c()
  %v0_13c2c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13c2c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c48

dec_label_pc_13c34:                               ; preds = %dec_label_pc_13c08, %dec_label_pc_13bfc
  %v2_13c34 = add i32 %v0_13bec, %arg3
  store i32 %v2_13c34, i32* %r4.global-to-local, align 4
  store i32 %v3_13bfc, i32* @r3, align 4
  store i32 %v0_13be4, i32* @r2, align 4
  store i32 %v2_13c34, i32* @r1, align 4
  %v0_13c44 = call i32 @function_13b4c()
  br label %dec_label_pc_13c48

dec_label_pc_13c48:                               ; preds = %dec_label_pc_13bd8, %dec_label_pc_13bd0, %dec_label_pc_13c1c, %dec_label_pc_13be4, %dec_label_pc_13c34
  %v0_13c48 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13c48, i32* %r5.global-to-local, align 4
  %v0_13c4c = load i32, i32* %r7.global-to-local, align 4
  %v2_13c4c = inttoptr i32 %v0_13c48 to i32*
  store i32 %v0_13c4c, i32* %v2_13c4c, align 4
  br label %dec_label_pc_13c6c

dec_label_pc_13ba4.dec_label_pc_13c54.loopexit_crit_edge: ; preds = %dec_label_pc_13b9c
  br label %dec_label_pc_13c54

dec_label_pc_13c54:                               ; preds = %dec_label_pc_13b80, %dec_label_pc_13ba4.dec_label_pc_13c54.loopexit_crit_edge, %dec_label_pc_13bb4
  %v1_13c54 = add i32 %v2_13b88, -12
  store i32 %v1_13c54, i32* %r5.global-to-local, align 4
  %v3_13c58 = inttoptr i32 %v1_13c54 to i32*
  store i32 %arg3, i32* %v3_13c58, align 4
  %v0_13c5c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13c5c, i32* @r3, align 4
  %v0_13c60 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13c60, i32* @r2, align 4
  %v0_13c64 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13c64, i32* @r1, align 4
  %v0_13c68 = call i32 @function_13b4c()
  br label %dec_label_pc_13c6c

dec_label_pc_13c6c:                               ; preds = %dec_label_pc_13c48, %dec_label_pc_13c54
  %v0_13c6c = load i32, i32* %r5.global-to-local, align 4
  %v2_13c70 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13c70, i32* @r4, align 4
  ret i32 %v0_13c6c

; uselistorder directives
  uselistorder i32 %v3_13bfc, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_13bc0, { 1, 0 }
  uselistorder i32 %v3_13ba0, { 2, 3, 1, 0 }
  uselistorder i32 %v0_13bec, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_13be4, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @function_13b4c, { 1, 0 }
  uselistorder i32* @r3, { 5, 8, 6, 7, 0, 9, 10, 11, 1, 2, 3, 12, 4 }
  uselistorder i32 ()* @function_13b6c, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13c6c, { 1, 0 }
  uselistorder label %dec_label_pc_13c54, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13c48, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_13b94, { 1, 0 }
}

define i32 @function_13c74() local_unnamed_addr {
dec_label_pc_13c90.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_13c74 = ptrtoint i32* %stack_var_-268 to i32
  %v1_13c84 = call i32 @function_1420c()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_13c90 = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_13c90

dec_label_pc_13c90:                               ; preds = %dec_label_pc_13c90.lr.ph, %dec_label_pc_13c90
  %v1_13c94 = phi i32 [ 31, %dec_label_pc_13c90.lr.ph ], [ %v1_13ca0, %dec_label_pc_13c90 ]
  %v4_13c94 = mul i32 %v1_13c94, 4
  %v5_13c94 = add i32 %v4_13c94, %v2_13c90
  %v2_13c9c = add i32 %v5_13c94, -128
  %v3_13c9c = inttoptr i32 %v2_13c9c to i32*
  store i32 0, i32* %v3_13c9c, align 4
  %v0_13ca0 = load i32, i32* %r1.global-to-local, align 4
  %v1_13ca0 = add i32 %v0_13ca0, -1
  store i32 %v1_13ca0, i32* %r1.global-to-local, align 4
  %v6_13ca0 = icmp slt i32 %v1_13ca0, 0
  br i1 %v6_13ca0, label %dec_label_pc_13ca8, label %dec_label_pc_13c90

dec_label_pc_13ca8:                               ; preds = %dec_label_pc_13c90
  %v2_13ca8 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_13ca8, i32* @r4, align 4
  store i32 %v2_13ca8, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_13cb4 = call i32 @function_13630()
  %v2_13cb8 = icmp eq i32 %v0_13cb4, 0
  br i1 %v2_13cb8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13ca8
  store i32 %v2_13ca8, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13ca8, %bb
  store i32 81100, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_13cb8, i32 ptrtoint (i32* @global_var_12e6c.438 to i32))
  %v2_13cd0 = load i32, i32* @global_var_1dc3c.440, align 4
  %v2_13cd4 = icmp eq i32 %v2_13cd0, 0
  br i1 %v2_13cd4, label %dec_label_pc_13cdc, label %dec_label_pc_13d0c

dec_label_pc_13cdc:                               ; preds = %.thread1
  store i32 1, i32* @global_var_1dc3c.440, align 4
  br label %dec_label_pc_13ce4

dec_label_pc_13ce4:                               ; preds = %dec_label_pc_13d5c, %dec_label_pc_13cdc
  %v1_13cf0 = call i32 @function_1420c()
  %v1_13cf8 = call i32 @function_1539c(i32 6)
  store i32 81164, i32* @lr, align 4
  %v1_13d08 = call i32 @function_1420c()
  %v2_13d10.pre = load i32, i32* @global_var_1dc3c.440, align 4
  br label %dec_label_pc_13d0c

dec_label_pc_13d0c:                               ; preds = %.thread1, %dec_label_pc_13ce4
  %v0_13d80 = phi i32 [ %v2_13cd0, %.thread1 ], [ %v2_13d10.pre, %dec_label_pc_13ce4 ]
  store i32 ptrtoint (i32* @global_var_1dc3c.440 to i32), i32* %ip.global-to-local, align 4
  %v7_13d14 = icmp eq i32 %v0_13d80, 1
  br i1 %v7_13d14, label %dec_label_pc_13d44.lr.ph, label %dec_label_pc_13d78

dec_label_pc_13d44.lr.ph:                         ; preds = %dec_label_pc_13d0c
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_1dc3c.440, align 4
  %v2_13d30 = bitcast i32* %stack_var_-268 to i8*
  %v3_13d30 = call i32 @function_13230(i8* %v2_13d30, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13d44

dec_label_pc_13d44:                               ; preds = %dec_label_pc_13d44.lr.ph, %dec_label_pc_13d44
  %v1_13d48 = phi i32 [ 31, %dec_label_pc_13d44.lr.ph ], [ %v1_13d54, %dec_label_pc_13d44 ]
  %v4_13d48 = mul i32 %v1_13d48, 4
  %v5_13d48 = add i32 %v4_13d48, %v2_13c90
  %v2_13d50 = add i32 %v5_13d48, -264
  %v3_13d50 = inttoptr i32 %v2_13d50 to i32*
  store i32 -1, i32* %v3_13d50, align 4
  %v0_13d54 = load i32, i32* %r1.global-to-local, align 4
  %v1_13d54 = add i32 %v0_13d54, -1
  store i32 %v1_13d54, i32* %r1.global-to-local, align 4
  %v6_13d54 = icmp slt i32 %v1_13d54, 0
  br i1 %v6_13d54, label %dec_label_pc_13d5c, label %dec_label_pc_13d44

dec_label_pc_13d5c:                               ; preds = %dec_label_pc_13d44
  store i32 %v2_13c74, i32* %r1.global-to-local, align 4
  %v4_13d70 = call i32 @function_144f8(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_13ce4

dec_label_pc_13d78:                               ; preds = %dec_label_pc_13d0c
  %v7_13d78 = icmp eq i32 %v0_13d80, 2
  br i1 %v7_13d78, label %dec_label_pc_13d80, label %dec_label_pc_13d8c

dec_label_pc_13d80:                               ; preds = %dec_label_pc_13d78
  store i32 3, i32* @global_var_1dc3c.440, align 4
  %v0_13d88 = call i32 @function_13c74()
  %v2_13d8c.pre = load i32, i32* @global_var_1dc3c.440, align 4
  br label %dec_label_pc_13d8c

dec_label_pc_13d8c:                               ; preds = %dec_label_pc_13d78, %dec_label_pc_13d80
  %v1_13d94 = phi i32 [ %v0_13d80, %dec_label_pc_13d78 ], [ %v2_13d8c.pre, %dec_label_pc_13d80 ]
  %v7_13d90 = icmp eq i32 %v1_13d94, 3
  br i1 %v7_13d90, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_13d8c
  %v2_13d9c = load i32, i32* %ip.global-to-local, align 4
  %v3_13d9c = inttoptr i32 %v2_13d9c to i32*
  store i32 4, i32* %v3_13d9c, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13d8c, %bb27
  call void @__pseudo_cond_branch(i1 %v7_13d90, i32 ptrtoint (i32* @global_var_14610.442 to i32))
  br label %dec_label_pc_13da4

dec_label_pc_13da4:                               ; preds = %dec_label_pc_13da4, %.thread3
  %v0_13da4 = call i32 @function_13c74()
  br label %dec_label_pc_13da4

; uselistorder directives
  uselistorder i32 %v1_13d54, { 2, 1, 0 }
  uselistorder i32 %v1_13ca0, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 5, 6, 8, 7, 2 }
  uselistorder i32 140, { 1, 0 }
  uselistorder i32* @global_var_1dc3c.440, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_13d8c, { 1, 0 }
  uselistorder label %dec_label_pc_13d44, { 1, 0 }
  uselistorder label %dec_label_pc_13d0c, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_13c90, { 1, 0 }
}

define i32 @function_13dbc(i8* %arg1) local_unnamed_addr {
dec_label_pc_13dbc:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_13dd0 = load i32, i32* @r4, align 4
  store i32 %v3_13dd0, i32* %stack_var_-36, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v2_13df4.pre = load i32, i32* bitcast (i32** @global_var_1dba8.445 to i32*), align 4
  br label %dec_label_pc_13dec

dec_label_pc_13dec:                               ; preds = %dec_label_pc_13dec, %dec_label_pc_13dbc
  %v0_13e24 = phi i32 [ %tmp, %dec_label_pc_13dbc ], [ %v1_13de8, %dec_label_pc_13dec ]
  store i32 %v0_13e24, i32* %r4.global-to-local, align 4
  %v1_13df0 = inttoptr i32 %v0_13e24 to i8*
  %v2_13df0 = load i8, i8* %v1_13df0, align 1
  %v3_13df0 = zext i8 %v2_13df0 to i32
  %v3_13df8 = mul nuw nsw i32 %v3_13df0, 2
  %v4_13df8 = add i32 %v3_13df8, %v2_13df4.pre
  %v5_13df8 = inttoptr i32 %v4_13df8 to i8*
  %v6_13df8 = load i8, i8* %v5_13df8, align 1
  %v1_13dfc = and i8 %v6_13df8, 32
  %v2_13dfc = icmp eq i8 %v1_13dfc, 0
  %v1_13de8 = add i32 %v0_13e24, 1
  br i1 %v2_13dfc, label %dec_label_pc_13e04, label %dec_label_pc_13dec

dec_label_pc_13e04:                               ; preds = %dec_label_pc_13dec
  %v7_13e04 = icmp eq i8 %v2_13df0, 43
  br i1 %v7_13e04, label %dec_label_pc_13e24, label %dec_label_pc_13e0c

dec_label_pc_13e0c:                               ; preds = %dec_label_pc_13e04
  %v7_13e0c = icmp eq i8 %v2_13df0, 45
  br i1 %v7_13e0c, label %dec_label_pc_13e24, label %bb

bb:                                               ; preds = %dec_label_pc_13e0c
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13e80

dec_label_pc_13e24:                               ; preds = %dec_label_pc_13e04, %dec_label_pc_13e0c
  %storemerge30 = phi i32 [ 1, %dec_label_pc_13e0c ], [ 0, %dec_label_pc_13e04 ]
  store i32 %storemerge30, i32* %r7.global-to-local, align 4
  store i32 %v1_13de8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13e80

dec_label_pc_13e80:                               ; preds = %bb, %dec_label_pc_13e24
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %v2_13e88 = call i32 @function_12978(i32 -1, i32 10)
  %v0_13e8c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13e8c, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v1_13e98 = urem i32 %v2_13e88, 256
  store i32 %v1_13e98, i32* %sl.global-to-local, align 4
  %v0_13e9c = call i32 @function_12868()
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_13e9c, i32* %r8.global-to-local, align 4
  %v0_13eb0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13eb0

dec_label_pc_13eac:                               ; preds = %bb48, %dec_label_pc_13f0c
  %v0_13eac = phi i32 [ %v1_13edc, %bb48 ], [ %v0_13eac.pre, %dec_label_pc_13f0c ]
  store i32 %v0_13eac, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13eb0

dec_label_pc_13eb0:                               ; preds = %dec_label_pc_13e80, %dec_label_pc_13eac
  %v0_13edc = phi i32 [ %v0_13eb0.pre, %dec_label_pc_13e80 ], [ %v0_13eac, %dec_label_pc_13eac ]
  %v1_13eb0 = inttoptr i32 %v0_13edc to i8*
  %v2_13eb0 = load i8, i8* %v1_13eb0, align 1
  %v3_13eb0 = zext i8 %v2_13eb0 to i32
  %v1_13eb4 = add nsw i32 %v3_13eb0, -48
  %v1_13eb8 = urem i32 %v1_13eb4, 256
  %v1_13ec0 = or i32 %v3_13eb0, 32
  %tmp56 = icmp ult i32 %v1_13eb8, 10
  br i1 %tmp56, label %bb43, label %dec_label_pc_13ec8

dec_label_pc_13ec8:                               ; preds = %dec_label_pc_13eb0
  %tmp57 = icmp ugt i32 %v1_13ec0, 96
  br i1 %tmp57, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_13ec8
  %v1_13ecc = add nsw i32 %v1_13ec0, -87
  %v5_13ed4 = urem i32 %v1_13ecc, 256
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_13eb0, %dec_label_pc_13ec8, %bb42
  %v3_13f04 = phi i32 [ %v1_13eb8, %dec_label_pc_13eb0 ], [ 40, %dec_label_pc_13ec8 ], [ %v5_13ed4, %bb42 ]
  %v1_13ed8 = load i32, i32* %r5.global-to-local, align 4
  %v1_13edc = add i32 %v0_13edc, 1
  store i32 %v1_13edc, i32* %r4.global-to-local, align 4
  %v6_13ee0 = icmp slt i32 %v3_13f04, %v1_13ed8
  br i1 %v6_13ee0, label %dec_label_pc_13ee4, label %dec_label_pc_13f24

dec_label_pc_13ee4:                               ; preds = %bb43
  %v0_13ee4 = load i32, i32* %ip.global-to-local, align 4
  %v1_13ee4 = load i32, i32* %r8.global-to-local, align 4
  %v9_13ee4 = icmp eq i32 %v0_13ee4, %v1_13ee4
  br i1 %v9_13ee4, label %.thread, label %bb44

.thread:                                          ; preds = %dec_label_pc_13ee4
  br label %dec_label_pc_13ef4

bb44:                                             ; preds = %dec_label_pc_13ee4
  %v3_13ee4 = icmp ult i32 %v0_13ee4, %v1_13ee4
  br i1 %v3_13ee4, label %dec_label_pc_13ef4, label %dec_label_pc_13f0c

dec_label_pc_13ef4:                               ; preds = %bb44, %.thread
  %v4_13efc1727 = phi i32 [ 1, %.thread ], [ 0, %bb44 ]
  %v1_13ef4 = load i32, i32* %sl.global-to-local, align 4
  %v3_13ef4 = icmp uge i32 %v3_13f04, %v1_13ef4
  %v9_13ef4 = icmp eq i32 %v3_13f04, %v1_13ef4
  %v2_13ef8 = xor i1 %v3_13ef4, true
  %v3_13ef8 = or i1 %v9_13ef4, %v2_13ef8
  br i1 %v3_13ef8, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_13ef4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_13ef4, %bb45
  %v4_13efc = phi i32 [ %v4_13efc1727, %dec_label_pc_13ef4 ], [ 0, %bb45 ]
  %v2_13efc = xor i1 %v9_13ef4, true
  %v3_13efc = and i1 %v3_13ef4, %v2_13efc
  br i1 %v3_13efc, label %bb47, label %thread-pre-split

bb47:                                             ; preds = %bb46
  %v5_13efc = urem i32 %v4_13efc, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb46, %bb47
  %v0_13f00 = phi i32 [ %v5_13efc, %bb47 ], [ %v4_13efc, %bb46 ]
  %v2_13f00 = icmp eq i32 %v0_13f00, 0
  br i1 %v2_13f00, label %bb48, label %dec_label_pc_13f0c

bb48:                                             ; preds = %thread-pre-split
  %v4_13f04 = mul i32 %v0_13ee4, %v1_13ed8
  %v5_13f04 = add i32 %v4_13f04, %v3_13f04
  store i32 %v5_13f04, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13eac

dec_label_pc_13f0c:                               ; preds = %bb44, %thread-pre-split
  %v0_13f0c = call i32 @function_131c4()
  %v0_13f10 = load i32, i32* %r7.global-to-local, align 4
  %v1_13f10 = load i32, i32* %fp.global-to-local, align 4
  %v2_13f10 = and i32 %v1_13f10, %v0_13f10
  store i32 %v2_13f10, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  %v2_13f1c = inttoptr i32 %v0_13f0c to i32*
  store i32 34, i32* %v2_13f1c, align 4
  %v0_13eac.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13eac

dec_label_pc_13f24:                               ; preds = %bb43
  %v0_13f24.pre = load i32, i32* %sb.global-to-local, align 4
  %v2_13f24 = icmp eq i32 %v0_13f24.pre, 0
  br i1 %v2_13f24, label %bb50, label %bb49

bb49:                                             ; preds = %dec_label_pc_13f24
  %v1_13f28 = load i32, i32* %r6.global-to-local, align 4
  %v3_13f28 = inttoptr i32 %v0_13f24.pre to i32*
  store i32 %v1_13f28, i32* %v3_13f28, align 4
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_13f24, %bb49
  %v0_13f2c = load i32, i32* %r7.global-to-local, align 4
  %v2_13f2c = icmp eq i32 %v0_13f2c, 0
  %. = select i1 %v2_13f2c, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_13f38 = load i32, i32* %fp.global-to-local, align 4
  %v2_13f38 = icmp eq i32 %v0_13f38, 0
  %v0_13f5c.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_13f38, label %dec_label_pc_13f54, label %bb53

bb53:                                             ; preds = %bb50
  %tmp58 = icmp ugt i32 %v0_13f5c.pre.pre, %.
  br i1 %tmp58, label %dec_label_pc_13f44, label %dec_label_pc_13f54

dec_label_pc_13f44:                               ; preds = %bb53
  %v0_13f44 = call i32 @function_131c4()
  %v2_13f4c = inttoptr i32 %v0_13f44 to i32*
  store i32 34, i32* %v2_13f4c, align 4
  %v0_13f50 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13f50, i32* %ip.global-to-local, align 4
  %v0_13f54.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13f54

dec_label_pc_13f54:                               ; preds = %bb53, %bb50, %dec_label_pc_13f44
  %v0_13f5c.pre = phi i32 [ %v0_13f5c.pre.pre, %bb53 ], [ %v0_13f50, %dec_label_pc_13f44 ], [ %v0_13f5c.pre.pre, %bb50 ]
  %v0_13f54 = phi i32 [ %v0_13f2c, %bb53 ], [ %v0_13f54.pre, %dec_label_pc_13f44 ], [ %v0_13f2c, %bb50 ]
  %v2_13f54 = icmp eq i32 %v0_13f54, 0
  br i1 %v2_13f54, label %dec_label_pc_13f54._crit_edge, label %bb54

bb54:                                             ; preds = %dec_label_pc_13f54
  %v2_13f58 = sub i32 0, %v0_13f5c.pre
  store i32 %v2_13f58, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13f54._crit_edge

dec_label_pc_13f54._crit_edge:                    ; preds = %dec_label_pc_13f54, %bb54
  %v0_13f5c = phi i32 [ %v2_13f58, %bb54 ], [ %v0_13f5c.pre, %dec_label_pc_13f54 ]
  %v2_13f60 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13f60, i32* @r4, align 4
  ret i32 %v0_13f5c

; uselistorder directives
  uselistorder i32 %v0_13f5c.pre, { 1, 0 }
  uselistorder i32 %v0_13f5c.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v0_13f24.pre, { 1, 0 }
  uselistorder i32 %v4_13efc, { 1, 0 }
  uselistorder i1 %v3_13ef4, { 1, 0 }
  uselistorder i32 %v1_13ef4, { 1, 0 }
  uselistorder i32 %v1_13edc, { 1, 0 }
  uselistorder i32 %v1_13ec0, { 1, 0 }
  uselistorder i32 %v1_13eb8, { 1, 0 }
  uselistorder i32 %v0_13eac, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 5, 6, 0, 1, 3, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32 ()* @function_12868, { 3, 1, 4, 2, 0 }
  uselistorder i32 (i32, i32)* @function_12978, { 4, 3, 0, 8, 2, 7, 6, 5, 1 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder i8 32, { 0, 8, 9, 10, 1, 11, 12, 2, 3, 13, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_13f54._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_13f54, { 2, 0, 1 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_13f0c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb43, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13eb0, { 1, 0 }
  uselistorder label %dec_label_pc_13eac, { 1, 0 }
  uselistorder label %dec_label_pc_13e80, { 1, 0 }
  uselistorder label %dec_label_pc_13e24, { 1, 0 }
}

define i32 @function_13f68(i32 %arg1) local_unnamed_addr {
dec_label_pc_13f68:
  %stack_var_-16 = alloca i32, align 4
  %v2_13f68 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_13f68, i32* @r0, align 4
  %v8_13f84 = call i32 @function_14214(i32 %v2_13f68, i32 ptrtoint (i32* @global_var_1420c.394 to i32), i32 ptrtoint (i32* @global_var_1db88.448 to i32), i32 82452, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_13f94 = call i32 @function_1420c()
  %v2_13f9c = load i32, i32* @global_var_1dc40.452, align 4
  %v2_13fa0 = icmp eq i32 %v2_13f9c, 0
  br i1 %v2_13fa0, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_13f68
  call void @__pseudo_branch(i32 %v2_13f9c)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13f68, %bb
  store i32 %v2_13f68, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_13fc4.454 to i32), i32* @lr, align 4
  %v8_13fc0 = call i32 @function_14214(i32 %v2_13f68, i32 1, i32 ptrtoint (i32* @global_var_1db88.448 to i32), i32 82452, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v8_13fc0, i32* @r0, align 4
  %v1_13fc4 = call i32 @function_141a0(i32 %v8_13fc0)
  store i1 true, i1* @cpsr_z, align 1
  %v0_13fd8 = load i32, i32* @r4, align 4
  %v1_13fdc = call i32 @function_14610(i32 %v0_13fd8)
  unreachable

; uselistorder directives
  uselistorder i32 %v2_13f68, { 1, 0, 3, 2 }
  uselistorder i32 ()* @function_1420c, { 4, 3, 2, 1, 18, 17, 16, 15, 14, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 21, 20, 19 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_14214, { 1, 0, 5, 4, 3, 2 }
  uselistorder i32 82452, { 1, 0, 3, 4, 2, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1420c.394 to i32), { 0, 3, 1, 2 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_13ffc(i32 %arg1) local_unnamed_addr {
dec_label_pc_13ffc:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13ffc = load i32, i32* @r4, align 4
  store i32 %v3_13ffc, i32* %stack_var_-20, align 4
  %v6_13ffc = load i32, i32* @r5, align 4
  %v9_13ffc = load i32, i32* @r6, align 4
  %v16_13ffc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @ip, align 4
  %v2_14000 = icmp eq i32 %arg1, 0
  %v2_14004 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_14000, label %dec_label_pc_14188, label %dec_label_pc_1401c.preheader

dec_label_pc_1401c.preheader:                     ; preds = %dec_label_pc_13ffc
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_1402417 = add i32 %v16_13ffc, 124
  br label %dec_label_pc_14014

dec_label_pc_14014:                               ; preds = %dec_label_pc_1401c.preheader, %dec_label_pc_14014
  %v5_1402418 = phi i32 [ %v5_1402417, %dec_label_pc_1401c.preheader ], [ %v5_14024, %dec_label_pc_14014 ]
  %v2_14018 = add i32 %v5_1402418, -136
  %v3_14018 = inttoptr i32 %v2_14018 to i32*
  store i32 0, i32* %v3_14018, align 4
  %v0_1401c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1401c = add i32 %v0_1401c.pre, -1
  store i32 %v1_1401c, i32* %r1.global-to-local, align 4
  %v6_1401c = icmp slt i32 %v1_1401c, 0
  %v4_14024 = mul i32 %v1_1401c, 4
  %v5_14024 = add i32 %v4_14024, %v16_13ffc
  br i1 %v6_1401c, label %dec_label_pc_1402c, label %dec_label_pc_14014

dec_label_pc_1402c:                               ; preds = %dec_label_pc_14014
  %v2_1402c = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_1402c, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_1403c = load i32, i32* @ip, align 4
  store i32 %v0_1403c, i32* %stack_var_-28, align 4
  %v0_14044 = call i32 @function_13630()
  store i32 %v0_14044, i32* %r0.global-to-local, align 4
  %v1_14048 = load i32, i32* @r5, align 4
  %v5_1404c = icmp slt i32 %v0_14044, %v1_14048
  br i1 %v5_1404c, label %dec_label_pc_14190, label %dec_label_pc_14050

dec_label_pc_14050:                               ; preds = %dec_label_pc_1402c
  %v2_14050 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_14050, i32* @r4, align 4
  store i32 %v1_14048, i32* %r0.global-to-local, align 4
  store i32 %v2_1402c, i32* %r1.global-to-local, align 4
  %v3_14060 = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_14060 = call i32 @function_12e6c(i32 %v1_14048, %_TYPEDEF_sigset_t* %v3_14060, i32 %v2_14050)
  store i32 %v4_14060, i32* %r0.global-to-local, align 4
  %v1_14064 = load i32, i32* @r5, align 4
  %v9_14064 = icmp eq i32 %v4_14060, %v1_14064
  br i1 %v9_14064, label %dec_label_pc_1406c, label %dec_label_pc_14190

dec_label_pc_1406c:                               ; preds = %dec_label_pc_14050
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_14050, i32* %r0.global-to-local, align 4
  %v2_14074 = call i32 @function_1360c(i32 %v2_14050, i32 17)
  store i32 %v2_14074, i32* %r0.global-to-local, align 4
  %v1_14078 = load i32, i32* @r5, align 4
  %v9_14078 = icmp eq i32 %v2_14074, %v1_14078
  br i1 %v9_14078, label %dec_label_pc_14090.preheader, label %dec_label_pc_1406c.dec_label_pc_14158_crit_edge

dec_label_pc_1406c.dec_label_pc_14158_crit_edge:  ; preds = %dec_label_pc_1406c
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_14158

dec_label_pc_14090.preheader:                     ; preds = %dec_label_pc_1406c
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14088

dec_label_pc_14088:                               ; preds = %dec_label_pc_14090.preheader, %dec_label_pc_14088
  %v5_1409816 = phi i32 [ %v5_1402417, %dec_label_pc_14090.preheader ], [ %v5_14098, %dec_label_pc_14088 ]
  %v2_1408c = add i32 %v5_1409816, -136
  %v3_1408c = inttoptr i32 %v2_1408c to i32*
  store i32 0, i32* %v3_1408c, align 4
  %v0_14090.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_14090 = add i32 %v0_14090.pre, -1
  store i32 %v1_14090, i32* %r1.global-to-local, align 4
  %v6_14090 = icmp slt i32 %v1_14090, 0
  %v4_14098 = mul i32 %v1_14090, 4
  %v5_14098 = add i32 %v4_14098, %v16_13ffc
  br i1 %v6_14090, label %dec_label_pc_140a0, label %dec_label_pc_14088

dec_label_pc_140a0:                               ; preds = %dec_label_pc_14088
  store i32 %v2_1402c, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_140a8 = call i32 @function_13630()
  store i32 %v0_140a8, i32* %r0.global-to-local, align 4
  %v1_140ac = icmp slt i32 %v0_140a8, 0
  br i1 %v1_140ac, label %dec_label_pc_14190, label %dec_label_pc_140b4

dec_label_pc_140b4:                               ; preds = %dec_label_pc_140a0
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_140c0 = call i32 @function_144f8(i32 17, i32* null, i32 %v2_14004)
  store i32 %v4_140c0, i32* %r0.global-to-local, align 4
  %v1_140c4 = icmp slt i32 %v4_140c0, 0
  br i1 %v1_140c4, label %dec_label_pc_140cc, label %dec_label_pc_140f4

dec_label_pc_140cc:                               ; preds = %dec_label_pc_140b4
  %v0_140cc = call i32 @function_131c4()
  store i32 %v2_14050, i32* %r1.global-to-local, align 4
  store i32 %v0_140cc, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_140e0 = inttoptr i32 %v0_140cc to i32*
  %v2_140e0 = load i32, i32* %v1_140e0, align 4
  store i32 %v2_140e0, i32* @r4, align 4
  %v3_140e4 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_140e4 = call i32 @function_12e6c(i32 2, %_TYPEDEF_sigset_t* %v3_140e4, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_140ec = load i32, i32* @r4, align 4
  %v1_140ec = load i32, i32* %r5.global-to-local, align 4
  %v2_140ec = inttoptr i32 %v1_140ec to i32*
  store i32 %v0_140ec, i32* %v2_140ec, align 4
  %v17_14198.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14194

dec_label_pc_140f4:                               ; preds = %dec_label_pc_140b4
  %v2_140f4 = load i32, i32* %stack_var_-424, align 4
  %v7_140f8 = icmp eq i32 %v2_140f4, 1
  %v2_14100 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_14100, i32* @r4, align 4
  br i1 %v7_140f8, label %dec_label_pc_14108, label %dec_label_pc_1413c

dec_label_pc_14108:                               ; preds = %dec_label_pc_140f4
  store i32 %v2_14100, i32* %r1.global-to-local, align 4
  store i32 %v2_14100, i32* %r0.global-to-local, align 4
  %v2_14110 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_14110 = call i32 @function_14994(%timespec* %v2_14110, i32 %v2_14100)
  store i32 %v3_14110, i32* %r0.global-to-local, align 4
  store i32 %v3_14110, i32* %r6.global-to-local, align 4
  %v0_14118 = call i32 @function_131c4()
  store i32 %v2_14050, i32* %r1.global-to-local, align 4
  store i32 %v0_14118, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_1412c = inttoptr i32 %v0_14118 to i32*
  %v2_1412c = load i32, i32* %v1_1412c, align 4
  store i32 %v2_1412c, i32* @r4, align 4
  %v3_14130 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_14130 = call i32 @function_12e6c(i32 2, %_TYPEDEF_sigset_t* %v3_14130, i32 0)
  store i32 %v4_14130, i32* %r0.global-to-local, align 4
  %v0_14134 = load i32, i32* @r4, align 4
  %v1_14134 = load i32, i32* %r5.global-to-local, align 4
  %v2_14134 = inttoptr i32 %v1_14134 to i32*
  store i32 %v0_14134, i32* %v2_14134, align 4
  %v0_14164.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14164

dec_label_pc_1413c:                               ; preds = %dec_label_pc_140f4
  store i32 %v2_14050, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_14148 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_14148 = call i32 @function_12e6c(i32 2, %_TYPEDEF_sigset_t* %v3_14148, i32 0)
  store i32 %v4_14148, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14158

dec_label_pc_14158:                               ; preds = %dec_label_pc_1406c.dec_label_pc_14158_crit_edge, %dec_label_pc_1413c
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_1406c.dec_label_pc_14158_crit_edge ], [ %v2_14100, %dec_label_pc_1413c ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_1415c = bitcast i32* %stack_var_-28 to %timespec*
  %v3_1415c = call i32 @function_14994(%timespec* %v2_1415c, i32 %storemerge.pre-phi)
  store i32 %v3_1415c, i32* %r0.global-to-local, align 4
  store i32 %v3_1415c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14164

dec_label_pc_14164:                               ; preds = %dec_label_pc_14108, %dec_label_pc_14158
  %v0_14164 = phi i32 [ %v0_14164.pr, %dec_label_pc_14108 ], [ %v3_1415c, %dec_label_pc_14158 ]
  %v2_14164 = icmp eq i32 %v0_14164, 0
  br i1 %v2_14164, label %dec_label_pc_14188, label %dec_label_pc_1416c

dec_label_pc_1416c:                               ; preds = %dec_label_pc_14164
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_14174 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_14174, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14194

dec_label_pc_14188:                               ; preds = %dec_label_pc_13ffc, %dec_label_pc_14164
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14194

dec_label_pc_14190:                               ; preds = %dec_label_pc_14050, %dec_label_pc_140a0, %dec_label_pc_1402c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14194

dec_label_pc_14194:                               ; preds = %dec_label_pc_1416c, %dec_label_pc_14188, %dec_label_pc_140cc, %dec_label_pc_14190
  %v17_14198 = phi i32 [ %v3_14174, %dec_label_pc_1416c ], [ 0, %dec_label_pc_14188 ], [ %v17_14198.pre, %dec_label_pc_140cc ], [ -1, %dec_label_pc_14190 ]
  %v2_14198 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_14198, i32* @r4, align 4
  store i32 %v6_13ffc, i32* @r5, align 4
  store i32 %v9_13ffc, i32* @r6, align 4
  ret i32 %v17_14198

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_14100, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_14090, { 0, 2, 1 }
  uselistorder i32 %v2_14050, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_14048, { 1, 0, 2 }
  uselistorder i32 %v1_1401c, { 0, 2, 1 }
  uselistorder i32 %v16_13ffc, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 8, 9, 10, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 6, 7, 1, 9, 8, 11, 10, 22, 12, 14, 15, 13, 17, 16, 18, 2, 19, 3, 20, 21, 0 }
  uselistorder i32 (i32, i32*, i32)* @function_144f8, { 1, 2, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @function_12e6c, { 1, 2, 3, 4, 0 }
  uselistorder i32 ()* @function_13630, { 2, 1, 0, 3, 4 }
  uselistorder i32 -136, { 1, 2, 0 }
  uselistorder i32 124, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_14194, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_14190, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14188, { 1, 0 }
  uselistorder label %dec_label_pc_14164, { 1, 0 }
  uselistorder label %dec_label_pc_14158, { 1, 0 }
  uselistorder label %dec_label_pc_14088, { 1, 0 }
  uselistorder label %dec_label_pc_14014, { 1, 0 }
}

define i32 @function_141a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_141cc:
  %stack_var_-8 = alloca i32, align 4
  %v3_141a0 = load i32, i32* @r4, align 4
  store i32 %v3_141a0, i32* %stack_var_-8, align 4
  %v2_141d0 = load i32, i32* @global_var_1dc50.461, align 4
  %v2_141d4 = icmp eq i32 %v2_141d0, 0
  br i1 %v2_141d4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_141cc
  store i32 82400, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_141d0)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_141cc, %bb
  %v2_141e4 = load i32, i32* @global_var_1dc54.463, align 4
  %v2_141e8 = icmp eq i32 %v2_141e4, 0
  br i1 %v2_141e8, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_141ec = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_141ec, i32* @r4, align 4
  %v9_141ec = load i32, i32* @r0, align 4
  ret i32 %v9_141ec

bb13:                                             ; preds = %.thread
  store i32 ptrtoint (i32* @global_var_141f8.464 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_141e4)
  %v2_141f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_141f8, i32* @r4, align 4
  %v8_141f8 = load i32, i32* @r0, align 4
  ret i32 %v8_141f8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1420c() local_unnamed_addr {
dec_label_pc_1420c:
  ret i32 0
}

define i32 @function_14214(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_14214:
  %v1_14214 = load i32, i32* @r0, align 4
  ret i32 %v1_14214
}

define i32 @function_14218(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14218:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14218 = load i32, i32* @r4, align 4
  store i32 %v3_14218, i32* %stack_var_-12, align 4
  %v6_14218 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_14228 = call i32 @function_12b2c(i32 %arg1, i32 1)
  %v7_1422c = icmp eq i32 %v2_14228, -1
  br i1 %v7_1422c, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_14218
  %v3_14230 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_14230, i32* @r4, align 4
  store i32 %v6_14218, i32* @r5, align 4
  ret i32 %v2_14228

bb4:                                              ; preds = %dec_label_pc_14218
  %v0_14234 = load i32, i32* @r4, align 4
  %v4_1423c = call i32 @function_12d1c(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_15728.466, i32 0, i32 0), i32 %v0_14234)
  %v1_14240 = load i32, i32* %r5.global-to-local, align 4
  %v9_14240 = icmp eq i32 %v4_1423c, %v1_14240
  br i1 %v9_14240, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_14244 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_14244, i32* @r4, align 4
  store i32 %v6_14218, i32* @r5, align 4
  ret i32 %v4_1423c

bb6:                                              ; preds = %bb4
  %v0_14248 = call i32 @function_13c74()
  %v0_1424c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1424c, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %v2_1424c = load i32, i32* @r8, align 4
  %v5_1424c = udiv i32 %v2_1424c, 16384
  %v6_1424c = and i32 %v5_1424c, %v0_14234
  store i32 %v6_1424c, i32* @r5, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_14248

; uselistorder directives
  uselistorder i32 %v2_14228, { 1, 0 }
  uselistorder i32 %v6_14218, { 1, 0 }
  uselistorder i32 16384, { 0, 33, 51, 34, 52, 35, 53, 36, 54, 37, 55, 38, 56, 14, 57, 13, 68, 12, 49, 11, 50, 10, 58, 9, 59, 8, 60, 7, 61, 6, 62, 5, 63, 4, 64, 3, 65, 31, 66, 32, 67, 29, 70, 30, 71, 28, 69, 39, 72, 1, 73, 2, 74, 16, 75, 42, 76, 41, 77, 43, 78, 44, 79, 15, 80, 40, 81, 17, 82, 18, 83, 20, 84, 19, 85, 22, 86, 21, 87, 23, 88, 24, 89, 25, 90, 26, 91, 27, 92, 45, 46, 47, 48 }
  uselistorder i32* @r8, { 119, 93, 94, 95, 96, 98, 97, 3, 4, 5, 6, 114, 115, 116, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 1, 92, 117, 2, 118, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i1* @cpsr_z, { 7, 6, 0, 8, 3, 4, 1, 2, 5 }
  uselistorder i32 ()* @function_13c74, { 0, 2, 1, 3 }
  uselistorder i32 (i8*, i32)* @function_12d1c, { 9, 4, 0, 1, 2, 7, 8, 3, 5, 6 }
  uselistorder i32 (i32, i32)* @function_12b2c, { 0, 5, 9, 8, 11, 10, 7, 6, 4, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_14250(i32 %arg1) local_unnamed_addr {
dec_label_pc_14250:
  %v2_14254 = load i32, i32* @global_var_1dc58.468, align 4
  %v2_14258 = icmp eq i32 %v2_14254, 0
  br i1 %v2_14258, label %bb2, label %bb

bb:                                               ; preds = %dec_label_pc_14250
  %v6_14264 = load i32, i32* @r0, align 4
  ret i32 %v6_14264

bb2:                                              ; preds = %dec_label_pc_14250
  store i32 1, i32* @global_var_1dc58.468, align 4
  store i32 4096, i32* @global_var_1dc4c.419, align 4
  ret i32 undef
}

define i32 @function_142ac(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_142ac:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %v4_142b0 = mul i32 %arg2, 4
  %v5_142b0 = add i32 %tmp, %v4_142b0
  %v2_142b4 = load i32, i32* %arg3, align 4
  %v2_142b8 = ptrtoint i32* %stack_var_-120 to i32
  %v1_142bc = add i32 %v5_142b0, 4
  %v9_142c0 = icmp eq i32 %v1_142bc, %v2_142b4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %arg7, i32* @global_var_1dc44.473, align 4
  store i32 %v1_142bc, i32* @global_var_1dc48.475, align 4
  store i32 %arg6, i32* @global_var_1dc54.463, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_142c0, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_142ac
  store i32 %v5_142b0, i32* @global_var_1dc48.475, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_142ac, %bb
  %v2_14300 = bitcast i32* %stack_var_-120 to i8*
  %v3_14300 = call i32 @function_13230(i8* %v2_14300, i32 0)
  %storemerge.pre = load i32, i32* @global_var_1dc48.475, align 4
  br label %dec_label_pc_14310

dec_label_pc_14310:                               ; preds = %dec_label_pc_14310, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_14310, %dec_label_pc_14310 ]
  %v1_14310 = inttoptr i32 %storemerge to i32*
  %v2_14310 = load i32, i32* %v1_14310, align 4
  %v4_14310 = add i32 %storemerge, 4
  %v2_14314 = icmp eq i32 %v2_14310, 0
  br i1 %v2_14314, label %dec_label_pc_14320, label %dec_label_pc_14310

dec_label_pc_14320:                               ; preds = %dec_label_pc_14310
  store i32 %v4_14310, i32* @r4, align 4
  %v1_1434022 = inttoptr i32 %v4_14310 to i32*
  %v2_1434023 = load i32, i32* %v1_1434022, align 4
  %v2_1434425 = icmp eq i32 %v2_1434023, 0
  br i1 %v2_1434425, label %dec_label_pc_1434c, label %dec_label_pc_14328

dec_label_pc_14328:                               ; preds = %dec_label_pc_14320, %dec_label_pc_14340
  %v5_1432c = phi i32 [ %v2_14340, %dec_label_pc_14340 ], [ %v2_1434023, %dec_label_pc_14320 ]
  %v2_14328 = icmp ugt i32 %v5_1432c, 13
  %v7_14328 = icmp eq i32 %v5_1432c, 14
  %v2_1432c = xor i1 %v2_14328, true
  %v3_1432c = or i1 %v7_14328, %v2_1432c
  br i1 %v3_1432c, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_14328
  %v6_1432c = and i32 %v5_1432c, 536870912
  %v7_1432c = icmp ne i32 %v6_1432c, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_14328, %bb42
  %v1_14338 = phi i1 [ %v2_14328, %dec_label_pc_14328 ], [ %v7_1432c, %bb42 ]
  %v2_14330 = xor i1 %v1_14338, true
  %v3_14330 = or i1 %v7_14328, %v2_14330
  br i1 %v3_14330, label %bb44, label %dec_label_pc_14340

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_14340

dec_label_pc_14340:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_14330, i32 ptrtoint (i32* @global_var_13210.477 to i32))
  %v0_1433c = load i32, i32* @r4, align 4
  %v1_1433c = add i32 %v0_1433c, 8
  store i32 %v1_1433c, i32* @r4, align 4
  %v1_14340 = inttoptr i32 %v1_1433c to i32*
  %v2_14340 = load i32, i32* %v1_14340, align 4
  %v2_14344 = icmp eq i32 %v2_14340, 0
  br i1 %v2_14344, label %dec_label_pc_1434c, label %dec_label_pc_14328

dec_label_pc_1434c:                               ; preds = %dec_label_pc_14340, %dec_label_pc_14320
  %v1_14350 = call i32 @function_153b4(i32 %v2_142b8)
  store i32 %v1_14350, i32* @r0, align 4
  %v1_14354 = call i32 @function_14250(i32 %v1_14350)
  store i32 %v1_14354, i32* @r0, align 4
  %v2_14360 = icmp eq i32 %tmp37, 0
  br i1 %v2_14360, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_1434c
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_1434c, %bb45
  %v0_14370 = phi i32 [ %tmp37, %dec_label_pc_1434c ], [ 4096, %bb45 ]
  %v3_14368 = icmp eq i32 %tmp36, -1
  %v8_14368 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_1dc4c.419 to i32), i32* @r2, align 4
  store i32 %v0_14370, i32* @global_var_1dc4c.419, align 4
  br i1 %v3_14368, label %dec_label_pc_14378, label %dec_label_pc_143a0

dec_label_pc_14378:                               ; preds = %bb46
  %v0_14378 = call i32 @function_14904()
  store i32 %v0_14378, i32* @r0, align 4
  store i32 %v0_14378, i32* @r4, align 4
  %v0_14380 = call i32 @function_148ac()
  %v0_14384 = load i32, i32* @r4, align 4
  %v9_14384 = icmp eq i32 %v0_14384, %v0_14380
  br i1 %v9_14384, label %dec_label_pc_1438c, label %dec_label_pc_143c8

dec_label_pc_1438c:                               ; preds = %dec_label_pc_14378
  %v1_1438c = call i32 @function_148d8(i32 %v0_14380)
  store i32 %v1_1438c, i32* @r0, align 4
  store i32 %v1_1438c, i32* @r4, align 4
  %v0_14394 = call i32 @function_14880()
  %v0_14398 = load i32, i32* @r4, align 4
  %v9_14398 = icmp eq i32 %v0_14398, %v0_14394
  br i1 %v9_14398, label %dec_label_pc_143a0, label %dec_label_pc_143c8

dec_label_pc_143a0:                               ; preds = %dec_label_pc_1438c, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_14368, label %dec_label_pc_14434, label %dec_label_pc_143ac

dec_label_pc_143ac:                               ; preds = %dec_label_pc_143a0
  %v9_143b0 = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_143b0, label %dec_label_pc_143b8, label %dec_label_pc_143c8

dec_label_pc_143b8:                               ; preds = %dec_label_pc_143ac
  br label %dec_label_pc_143c8

dec_label_pc_143c8:                               ; preds = %dec_label_pc_143b8, %dec_label_pc_143ac, %dec_label_pc_1438c, %dec_label_pc_14378
  %v2_143d0 = call i32 @function_14218(i32 0, i32 32768)
  %v2_143dc = call i32 @function_14218(i32 1, i32 32770)
  %v2_143e8 = call i32 @function_14218(i32 2, i32 32770)
  br label %dec_label_pc_14434

dec_label_pc_14434:                               ; preds = %dec_label_pc_143c8, %dec_label_pc_143a0
  %v0_143f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_143f8 = inttoptr i32 %v0_143f8 to i32*
  %v2_143f8 = load i32, i32* %v1_143f8, align 4
  store i32 %v2_143f8, i32* @global_var_1dba0, align 4
  store i32 %arg5, i32* @global_var_1dc50.461, align 4
  %v2_14434 = icmp eq i32 %arg4, 0
  br i1 %v2_14434, label %dec_label_pc_14470, label %bb47

bb47:                                             ; preds = %dec_label_pc_14434
  br label %dec_label_pc_14470

dec_label_pc_14470:                               ; preds = %dec_label_pc_14434, %bb47
  call void @__pseudo_branch(i32 %arg4)
  %v1_14480 = call i32 @function_131c4()
  %v2_14488 = inttoptr i32 %v1_14480 to i32*
  store i32 0, i32* %v2_14488, align 4
  %v0_144b4 = load i32, i32* %r8.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_144c0 = call i32 @function_13f68(i32 %v0_144b4)
  ret i32 %v1_144c0

; uselistorder directives
  uselistorder i32 %v2_14340, { 1, 0 }
  uselistorder i32 %v1_1433c, { 1, 0 }
  uselistorder i1 %v2_14328, { 1, 0 }
  uselistorder i32 %v4_14310, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @function_13f68, { 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_14218, { 2, 1, 0 }
  uselistorder i32 32768, { 1, 2, 0 }
  uselistorder i32* @global_var_1dc4c.419, { 1, 4, 0, 2, 3 }
  uselistorder i32 4096, { 0, 1, 3, 7, 4, 8, 5, 9, 2, 6, 10, 11 }
  uselistorder i32 536870912, { 1, 0 }
  uselistorder i1 true, { 0, 1, 545, 2, 3, 4, 5, 6, 7, 8, 287, 9, 10, 11, 12, 13, 568, 285, 288, 299, 569, 546, 312, 547, 548, 128, 129, 549, 289, 130, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 131, 132, 566, 567, 311, 286, 300, 570, 126, 127, 310, 125, 571, 134, 133, 301, 305, 302, 306, 303, 307, 304, 309, 572, 135, 573, 124, 574, 313, 314, 575, 315, 316, 136, 576, 317, 318, 137, 138, 577, 319, 320, 139, 140, 578, 141, 142, 143, 579, 321, 322, 144, 145, 580, 323, 324, 146, 581, 325, 326, 121, 122, 123, 582, 327, 328, 120, 583, 329, 330, 584, 290, 291, 147, 148, 585, 331, 332, 149, 586, 150, 151, 587, 152, 153, 588, 154, 155, 589, 156, 284, 119, 157, 158, 590, 333, 334, 159, 160, 591, 161, 162, 592, 335, 336, 116, 117, 118, 115, 593, 337, 338, 594, 339, 340, 112, 113, 114, 595, 341, 342, 596, 343, 344, 109, 110, 111, 597, 345, 346, 598, 347, 348, 106, 107, 108, 599, 349, 350, 103, 104, 105, 600, 351, 352, 601, 353, 354, 100, 101, 102, 602, 355, 356, 163, 603, 357, 358, 97, 98, 99, 604, 359, 360, 605, 361, 362, 94, 95, 96, 606, 363, 364, 607, 365, 366, 91, 92, 93, 608, 367, 368, 609, 369, 370, 88, 89, 90, 610, 371, 372, 86, 87, 611, 373, 374, 85, 612, 375, 376, 613, 377, 378, 164, 165, 166, 614, 379, 380, 82, 83, 84, 615, 381, 382, 616, 383, 384, 79, 80, 81, 617, 385, 386, 77, 78, 618, 387, 388, 619, 389, 390, 620, 391, 392, 621, 393, 394, 622, 395, 396, 623, 397, 398, 624, 399, 400, 625, 401, 402, 626, 403, 404, 627, 405, 406, 167, 168, 169, 628, 407, 408, 74, 75, 76, 629, 409, 410, 630, 411, 412, 71, 72, 73, 631, 413, 414, 68, 69, 70, 632, 415, 416, 65, 66, 67, 64, 633, 417, 418, 634, 419, 420, 61, 62, 63, 635, 421, 422, 636, 423, 424, 58, 59, 60, 637, 425, 426, 638, 427, 428, 170, 171, 172, 639, 429, 430, 173, 174, 175, 640, 431, 432, 176, 177, 178, 641, 433, 434, 55, 56, 57, 642, 435, 436, 643, 437, 438, 53, 54, 644, 439, 440, 645, 441, 442, 52, 646, 647, 443, 444, 179, 180, 648, 445, 446, 49, 50, 51, 649, 447, 448, 48, 650, 651, 449, 450, 46, 47, 652, 451, 452, 653, 453, 454, 43, 44, 45, 654, 455, 456, 181, 182, 183, 655, 457, 458, 40, 41, 42, 656, 459, 460, 657, 461, 462, 39, 658, 659, 463, 464, 37, 38, 660, 465, 466, 35, 36, 661, 467, 468, 662, 469, 470, 32, 33, 34, 663, 471, 472, 31, 664, 184, 665, 473, 474, 28, 29, 30, 666, 475, 476, 667, 477, 478, 25, 26, 27, 668, 479, 480, 669, 481, 482, 670, 483, 484, 24, 671, 672, 485, 486, 185, 186, 187, 22, 23, 673, 487, 488, 674, 489, 490, 675, 491, 492, 676, 493, 494, 677, 495, 496, 678, 497, 498, 679, 499, 500, 188, 680, 189, 190, 21, 681, 501, 502, 191, 682, 192, 193, 194, 683, 195, 196, 197, 684, 198, 199, 200, 201, 685, 202, 203, 204, 205, 686, 206, 207, 687, 503, 504, 208, 209, 688, 210, 211, 212, 689, 213, 214, 215, 690, 216, 217, 218, 691, 219, 220, 221, 692, 222, 223, 224, 225, 693, 505, 506, 226, 227, 694, 228, 229, 230, 695, 231, 232, 696, 233, 234, 235, 697, 236, 237, 238, 698, 239, 240, 241, 242, 243, 244, 245, 699, 246, 247, 248, 700, 507, 508, 249, 20, 701, 509, 510, 250, 251, 19, 702, 292, 293, 703, 252, 704, 253, 254, 255, 705, 256, 257, 258, 706, 511, 512, 259, 18, 707, 513, 514, 260, 261, 17, 708, 515, 516, 16, 709, 517, 518, 262, 263, 264, 710, 519, 520, 265, 711, 521, 522, 266, 15, 712, 523, 524, 267, 268, 269, 713, 270, 271, 272, 714, 273, 274, 14, 715, 294, 295, 275, 276, 277, 278, 279, 716, 525, 526, 717, 527, 528, 718, 529, 530, 719, 531, 532, 720, 533, 534, 721, 535, 536, 722, 537, 538, 723, 539, 540, 724, 541, 542, 725, 543, 544, 298, 726, 727, 308, 728, 296, 280, 297, 281, 282, 283 }
  uselistorder i32 120, { 3, 0, 1, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_14470, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_14340, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_14328, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @function_144f8(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_144f8:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_144f8 = load i32, i32* @r4, align 4
  %v6_144f8 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_144fc = icmp eq i32* %arg2, null
  %v2_14500 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_144fc, label %dec_label_pc_1456c, label %dec_label_pc_14510

dec_label_pc_14510:                               ; preds = %dec_label_pc_144f8
  %v2_14514 = load i32, i32* %arg2, align 4
  %v4_14514 = add i32 %tmp, 4
  store i32 %v4_14514, i32* @r1, align 4
  %v2_14518 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_14518, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_14514, i32* %stack_var_-156, align 4
  %v3_14524 = call i32 @function_13210(i32 %v2_14518, i32 %v4_14514, i32 128)
  store i32 %v3_14524, i32* %r0.global-to-local, align 4
  %v0_14528 = load i32, i32* @r4, align 4
  %v1_14528 = add i32 %v0_14528, 132
  %v2_14528 = inttoptr i32 %v1_14528 to i32*
  %v3_14528 = load i32, i32* %v2_14528, align 4
  %v1_1452c = and i32 %v3_14528, 67108864
  %v2_1452c = icmp eq i32 %v1_1452c, 0
  br i1 %v2_1452c, label %dec_label_pc_14540, label %bb

bb:                                               ; preds = %dec_label_pc_14510
  br label %dec_label_pc_1455c

dec_label_pc_14540:                               ; preds = %dec_label_pc_14510
  %v1_14548 = and i32 %v3_14528, 4
  %v2_14548 = icmp eq i32 %v1_14548, 0
  br i1 %v2_14548, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_14540
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_14540, %bb20
  br label %dec_label_pc_1455c

dec_label_pc_1455c:                               ; preds = %bb, %bb21
  %v2_1455c = icmp eq i32 %v0_14528, 0
  %v3_14560 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_14560 = select i1 %v2_1455c, i32 0, i32 %v3_14560
  %v0_1456c.pre = load i32, i32* @r5, align 4
  %v0_1457c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1456c

dec_label_pc_1456c:                               ; preds = %dec_label_pc_1455c, %dec_label_pc_144f8
  %v0_1457c = phi i32 [ %arg1, %dec_label_pc_144f8 ], [ %v0_1457c.pre, %dec_label_pc_1455c ]
  %v0_1456c = phi i32 [ %arg3, %dec_label_pc_144f8 ], [ %v0_1456c.pre, %dec_label_pc_1455c ]
  %storemerge = phi i32 [ 0, %dec_label_pc_144f8 ], [ %.v3_14560, %dec_label_pc_1455c ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_1456c = icmp eq i32 %v0_1456c, 0
  %.v2_14500 = select i1 %v2_1456c, i32 0, i32 %v2_14500
  store i32 %.v2_14500, i32* @r2, align 4
  store i32 %v0_1457c, i32* %r0.global-to-local, align 4
  %v1_14580 = call i32 @function_145e4(i32 %v0_1457c)
  store i32 %v1_14580, i32* %r0.global-to-local, align 4
  %v0_14584 = load i32, i32* @r5, align 4
  %v2_14584 = icmp eq i32 %v0_14584, 0
  br i1 %v2_14584, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_1456c
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_1456c, %bb25
  %v0_14594.pr = phi i32 [ 0, %dec_label_pc_1456c ], [ 1, %bb25 ]
  %v1_1458c = icmp slt i32 %v1_14580, 0
  br i1 %v1_1458c, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_145c8

thread-pre-split:                                 ; preds = %bb26
  %v2_14594 = icmp eq i32 %v0_14594.pr, 0
  store i32 %v1_14580, i32* @r4, align 4
  br i1 %v2_14594, label %dec_label_pc_145c8, label %dec_label_pc_145a0

dec_label_pc_145a0:                               ; preds = %thread-pre-split
  %v2_145a0 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_14584, i32* %r0.global-to-local, align 4
  %v2_145a8 = inttoptr i32 %v0_14584 to i32*
  store i32 %v2_145a0, i32* %v2_145a8, align 4
  %v3_145a8 = load i32, i32* %r0.global-to-local, align 4
  %v4_145a8 = add i32 %v3_145a8, 4
  store i32 %v4_145a8, i32* @r0, align 4
  %v2_145ac = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_145ac, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v3_145b4 = call i32 @function_13210(i32 %v4_145a8, i32 %v2_145ac, i32 128)
  store i32 %v3_145b4, i32* %r0.global-to-local, align 4
  %v1_145bc = load i32, i32* @r5, align 4
  %v2_145bc = add i32 %v1_145bc, 136
  %v3_145bc = inttoptr i32 %v2_145bc to i32*
  %v1_145c4 = load i32, i32* @r5, align 4
  %v2_145c4 = add i32 %v1_145c4, 132
  %v3_145c4 = inttoptr i32 %v2_145c4 to i32*
  %v0_145c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_145c8

dec_label_pc_145c8:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_145a0
  %v0_145c8 = phi i32 [ %v1_14580, %thread-pre-split ], [ %v0_145c8.pre, %dec_label_pc_145a0 ], [ %v1_14580, %thread-pre-split.thread ]
  store i32 %v0_145c8, i32* %r0.global-to-local, align 4
  store i32 %v3_144f8, i32* @r4, align 4
  store i32 %v6_144f8, i32* @r5, align 4
  ret i32 %v0_145c8

; uselistorder directives
  uselistorder i32 %v0_145c8, { 1, 0 }
  uselistorder i32 %v0_14584, { 1, 0, 2 }
  uselistorder i32 %v0_1457c, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 6, 4, 5, 2, 7, 1, 0 }
  uselistorder i32 136, { 3, 1, 2, 0 }
  uselistorder i32 132, { 3, 4, 1, 2, 0 }
  uselistorder label %dec_label_pc_145c8, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_1455c, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_145e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_145e4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_145e4 = load i32, i32* @r4, align 4
  store i32 %v3_145e4, i32* %stack_var_-8, align 4
  %v1_145e8 = load i32, i32* @r1, align 4
  %v2_145e8 = inttoptr i32 %v1_145e8 to %sigaction*
  %v3_145e8 = load i32, i32* @r2, align 4
  %v4_145e8 = inttoptr i32 %v3_145e8 to %sigaction*
  %v5_145e8 = call i32 @sigaction(i32 %arg1, %sigaction* %v2_145e8, %sigaction* %v4_145e8)
  store i32 %v5_145e8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_145e8, -4095
  br i1 %tmp, label %dec_label_pc_14608, label %dec_label_pc_145f8

dec_label_pc_145f8:                               ; preds = %dec_label_pc_145e4
  %v0_145f8 = call i32 @function_131c4()
  %v0_145fc = load i32, i32* %r4.global-to-local, align 4
  %v1_145fc = sub i32 0, %v0_145fc
  %v2_14600 = inttoptr i32 %v0_145f8 to i32*
  store i32 %v1_145fc, i32* %v2_14600, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14608

dec_label_pc_14608:                               ; preds = %dec_label_pc_145e4, %dec_label_pc_145f8
  %v0_14608 = phi i32 [ %v5_145e8, %dec_label_pc_145e4 ], [ -1, %dec_label_pc_145f8 ]
  %v2_1460c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1460c, i32* %r4.global-to-local, align 4
  ret i32 %v0_14608

; uselistorder directives
  uselistorder i32 %v5_145e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14608, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_14610(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_14610:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_14638() local_unnamed_addr {
dec_label_pc_14638:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %tmp4 = bitcast i32* %stack_var_-72 to %stat*
  %v0_14648 = load i32, i32* @r0, align 4
  %v4_14648 = call i32 @fstat(i32 %v0_14648, %stat* %tmp4)
  store i32 %v4_14648, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_14648, -4095
  br i1 %tmp, label %dec_label_pc_1466c, label %dec_label_pc_14658

dec_label_pc_14658:                               ; preds = %dec_label_pc_14638
  %v0_14658 = call i32 @function_131c4()
  %v0_1465c = load i32, i32* %r4.global-to-local, align 4
  %v1_1465c = sub i32 0, %v0_1465c
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14664 = inttoptr i32 %v0_14658 to i32*
  store i32 %v1_1465c, i32* %v2_14664, align 4
  br label %dec_label_pc_1467c

dec_label_pc_1466c:                               ; preds = %dec_label_pc_14638
  %v2_1466c = icmp eq i32 %v4_14648, 0
  store i32 83580, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1466c, i32 ptrtoint (i32* @global_var_14d54.493 to i32))
  br label %dec_label_pc_1467c

dec_label_pc_1467c:                               ; preds = %dec_label_pc_14658, %dec_label_pc_1466c
  %v0_1467c = load i32, i32* %r4.global-to-local, align 4
  ret i32 %v0_1467c

; uselistorder directives
  uselistorder i32 %v4_14648, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 3, 10, 8, 9, 6, 7, 0, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_1467c, { 1, 0 }
}

define i32 @function_14688(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14688:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %v6_14688 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_14690 = call i32 @function_1471c()
  store i32 %v0_14690, i32* %r6.global-to-local, align 4
  %tmp8 = icmp slt i32 %v0_14690, 1
  br i1 %tmp8, label %dec_label_pc_14714, label %dec_label_pc_14700.preheader

dec_label_pc_14700.preheader:                     ; preds = %dec_label_pc_14688
  %v5_14698 = load i32, i32* @r4, align 4
  %v7_14698 = add i32 %v5_14698, %v0_14690
  store i32 %v7_14698, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14700

dec_label_pc_146a4:                               ; preds = %dec_label_pc_14700
  %v1_146a4 = add i32 %v2_146b4, 16
  %v2_146a4 = inttoptr i32 %v1_146a4 to i32*
  %v3_146a4 = load i32, i32* %v2_146a4, align 4
  store i32 %v3_146a4, i32* @lr, align 4
  %v2_146a8 = inttoptr i32 %v1_14704 to i32*
  %v3_146a8 = load i32, i32* %v2_146a8, align 4
  store i32 %v3_146a8, i32* %r2.global-to-local, align 4
  %v1_146ac = add i32 %v2_146b4, 18
  %v2_146ac = inttoptr i32 %v1_146ac to i8*
  %v3_146ac = load i8, i8* %v2_146ac, align 1
  %v4_146ac = zext i8 %v3_146ac to i32
  store i32 %v4_146ac, i32* %ip.global-to-local, align 4
  %v3_146b0 = sdiv i32 %v3_146a4, 256
  store i32 %v3_146b0, i32* %r3.global-to-local, align 4
  %v1_146b4 = trunc i32 %v3_146a4 to i8
  %v4_146b4 = inttoptr i32 %v1_14704 to i8*
  store i8 %v1_146b4, i8* %v4_146b4, align 1
  %v0_146b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_146b8 = load i32, i32* @r4, align 4
  %v2_146b8 = add i32 %v1_146b8, 4
  %v3_146b8 = inttoptr i32 %v2_146b8 to i32*
  store i32 %v0_146b8, i32* %v3_146b8, align 4
  %v0_146bc = load i32, i32* %ip.global-to-local, align 4
  %v1_146bc = trunc i32 %v0_146bc to i8
  %v2_146bc = load i32, i32* @r4, align 4
  %v3_146bc = add i32 %v2_146bc, 10
  %v4_146bc = inttoptr i32 %v3_146bc to i8*
  store i8 %v1_146bc, i8* %v4_146bc, align 1
  %v0_146c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_146c0 = trunc i32 %v0_146c0 to i8
  %v2_146c0 = load i32, i32* @r4, align 4
  %v3_146c0 = add i32 %v2_146c0, 9
  %v4_146c0 = inttoptr i32 %v3_146c0 to i8*
  store i8 %v1_146c0, i8* %v4_146c0, align 1
  %v0_146c4 = load i32, i32* @r4, align 4
  %v1_146c4 = add i32 %v0_146c4, 8
  %v2_146c4 = inttoptr i32 %v1_146c4 to i8*
  %v3_146c4 = load i8, i8* %v2_146c4, align 1
  %v4_146c4 = zext i8 %v3_146c4 to i32
  store i32 %v4_146c4, i32* %r2.global-to-local, align 4
  %v0_146c8 = load i32, i32* @r5, align 4
  %v1_146c8 = add i32 %v0_146c8, 1
  %v2_146c8 = inttoptr i32 %v1_146c8 to i8*
  %v3_146c8 = load i8, i8* %v2_146c8, align 1
  %v4_146c8 = zext i8 %v3_146c8 to i32
  store i32 %v4_146c8, i32* %r3.global-to-local, align 4
  %v4_146cc = mul nuw nsw i32 %v4_146c8, 256
  %v5_146cc = or i32 %v4_146cc, %v4_146c4
  %v1_146d0 = add nsw i32 %v5_146cc, -19
  store i32 %v1_146d0, i32* @r2, align 4
  %v3_146d4 = call i32 @function_13220(i32 %v1_1470c, i32 %v1_14708, i32 %v1_146d0)
  %v0_146d8 = load i32, i32* @r4, align 4
  %v1_146d8 = add i32 %v0_146d8, 8
  %v2_146d8 = inttoptr i32 %v1_146d8 to i8*
  %v3_146d8 = load i8, i8* %v2_146d8, align 1
  %v4_146d8 = zext i8 %v3_146d8 to i32
  store i32 %v4_146d8, i32* %r3.global-to-local, align 4
  %v0_146dc = load i32, i32* @r5, align 4
  %v1_146dc = add i32 %v0_146dc, 1
  %v2_146dc = inttoptr i32 %v1_146dc to i8*
  %v3_146dc = load i8, i8* %v2_146dc, align 1
  %v4_146dc = zext i8 %v3_146dc to i32
  store i32 %v0_146d8, i32* @r0, align 4
  %v4_146e4 = mul nuw nsw i32 %v4_146dc, 256
  %v5_146e4 = or i32 %v4_146e4, %v4_146d8
  store i32 %v5_146e4, i32* @r2, align 4
  store i32 %v0_146d8, i32* @r1, align 4
  %v3_146ec = call i32 @function_13220(i32 %v0_146d8, i32 %v0_146d8, i32 %v5_146e4)
  %v0_146f0 = load i32, i32* @r4, align 4
  %v1_146f0 = add i32 %v0_146f0, 8
  %v2_146f0 = inttoptr i32 %v1_146f0 to i8*
  %v3_146f0 = load i8, i8* %v2_146f0, align 1
  %v4_146f0 = zext i8 %v3_146f0 to i32
  store i32 %v4_146f0, i32* %r3.global-to-local, align 4
  %v0_146f4 = load i32, i32* @r5, align 4
  %v1_146f4 = add i32 %v0_146f4, 1
  %v2_146f4 = inttoptr i32 %v1_146f4 to i8*
  %v3_146f4 = load i8, i8* %v2_146f4, align 1
  %v4_146f4 = zext i8 %v3_146f4 to i32
  store i32 %v4_146f4, i32* @r2, align 4
  %v4_146f8 = mul nuw nsw i32 %v4_146f4, 256
  %v5_146f8 = or i32 %v4_146f8, %v4_146f0
  store i32 %v5_146f8, i32* %r3.global-to-local, align 4
  %v2_146fc = add i32 %v5_146f8, %v0_146f0
  store i32 %v2_146fc, i32* @r4, align 4
  %v1_14700.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14700

dec_label_pc_14700:                               ; preds = %dec_label_pc_14700.preheader, %dec_label_pc_146a4
  %v1_14700 = phi i32 [ %v7_14698, %dec_label_pc_14700.preheader ], [ %v1_14700.pre, %dec_label_pc_146a4 ]
  %v2_146b4 = phi i32 [ %v5_14698, %dec_label_pc_14700.preheader ], [ %v2_146fc, %dec_label_pc_146a4 ]
  %v3_14700 = icmp ult i32 %v2_146b4, %v1_14700
  %v1_14704 = add i32 %v2_146b4, 8
  store i32 %v1_14704, i32* @r5, align 4
  %v1_14708 = add i32 %v2_146b4, 19
  store i32 %v1_14708, i32* @r1, align 4
  %v1_1470c = add i32 %v2_146b4, 11
  store i32 %v1_1470c, i32* @r0, align 4
  br i1 %v3_14700, label %dec_label_pc_146a4, label %dec_label_pc_14714.loopexit

dec_label_pc_14714.loopexit:                      ; preds = %dec_label_pc_14700
  %v0_14714.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14714

dec_label_pc_14714:                               ; preds = %dec_label_pc_14688, %dec_label_pc_14714.loopexit
  %v0_14714 = phi i32 [ %v0_14714.pre, %dec_label_pc_14714.loopexit ], [ %v0_14690, %dec_label_pc_14688 ]
  store i32 %v6_14688, i32* @r5, align 4
  ret i32 %v0_14714

; uselistorder directives
  uselistorder i32 %v1_1470c, { 1, 0 }
  uselistorder i32 %v1_14708, { 1, 0 }
  uselistorder i32 %v1_14704, { 2, 1, 0 }
  uselistorder i32 %v2_146b4, { 4, 3, 2, 5, 1, 0 }
  uselistorder i32 %v0_146d8, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v3_146a4, { 1, 0, 2 }
  uselistorder i32 %v5_14698, { 1, 0 }
  uselistorder i32 %v0_14690, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @function_13220, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_14714, { 1, 0 }
  uselistorder label %dec_label_pc_14700, { 1, 0 }
}

define i32 @function_1471c() local_unnamed_addr {
dec_label_pc_1471c:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_14720 = load i32, i32* @r4, align 4
  %v9_14720 = load i32, i32* @r6, align 4
  %v0_14724 = load i32, i32* @r2, align 4
  %v1_14724 = add i32 %v0_14724, 6
  %v2_1472c = ptrtoint i32* %stack_var_-60 to i32
  %v1_14730 = and i32 %v1_14724, -4
  store i32 %v1_14730, i32* %r3.global-to-local, align 4
  %v2_14734 = sub i32 %v2_1472c, %v1_14730
  %v0_14738 = load i32, i32* @r1, align 4
  store i32 %v0_14738, i32* %r8.global-to-local, align 4
  store i32 %v0_14724, i32* %stack_var_-60, align 4
  store i32 %v2_14734, i32* %sl.global-to-local, align 4
  %v0_14744 = load i32, i32* @r0, align 4
  %v1_14748 = inttoptr i32 %v2_14734 to %linux_dirent64*
  store i32 %v2_14734, i32* %r1.global-to-local, align 4
  %v5_1474c = call i32 @getdents64(i32 %v0_14744, %linux_dirent64* %v1_14748, i32 %v0_14724)
  store i32 %v5_1474c, i32* @r6, align 4
  %tmp = icmp ult i32 %v5_1474c, -4095
  br i1 %tmp, label %dec_label_pc_14770, label %dec_label_pc_1475c

dec_label_pc_1475c:                               ; preds = %dec_label_pc_1471c
  %v0_1475c = call i32 @function_131c4()
  %v0_14760 = load i32, i32* @r6, align 4
  %v1_14760 = sub i32 0, %v0_14760
  store i32 %v1_14760, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  %v2_14768 = inttoptr i32 %v0_1475c to i32*
  store i32 %v1_14760, i32* %v2_14768, align 4
  %v0_14778.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14778

dec_label_pc_14770:                               ; preds = %dec_label_pc_1471c
  br i1 false, label %dec_label_pc_14778, label %dec_label_pc_14780

dec_label_pc_14778:                               ; preds = %dec_label_pc_14770, %dec_label_pc_1475c
  %v0_14778 = phi i32 [ -1, %dec_label_pc_14770 ], [ %v0_14778.pre, %dec_label_pc_1475c ]
  store i32 %v0_14778, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14874

dec_label_pc_14780:                               ; preds = %dec_label_pc_14770
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_14788 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_14788, i32* @r5, align 4
  %v0_1478c = load i32, i32* @sp, align 4
  store i32 %v0_1478c, i32* @r4, align 4
  br label %dec_label_pc_14850

dec_label_pc_1479c:                               ; preds = %dec_label_pc_14850
  %v2_14868 = add i32 %v3_14854, %v0_14868
  %v1_1479c = add i32 %v0_147a0, 17
  %v2_1479c = inttoptr i32 %v1_1479c to i8*
  %v3_1479c = load i8, i8* %v2_1479c, align 1
  %v4_1479c = zext i8 %v3_1479c to i32
  %v2_147a0 = inttoptr i32 %v1_1485c to i8*
  %v3_147a0 = load i8, i8* %v2_147a0, align 1
  %v4_147a0 = zext i8 %v3_147a0 to i32
  %v4_147a4 = mul nuw nsw i32 %v4_1479c, 256
  %v5_147a4 = or i32 %v4_147a0, %v4_147a4
  %v1_147a8 = add nuw nsw i32 %v5_147a4, 3
  %v1_147ac = and i32 %v1_147a8, 131068
  store i32 %v1_147ac, i32* %r3.global-to-local, align 4
  %v2_147b0 = add i32 %v1_147ac, %v2_147f0
  store i32 %v2_147b0, i32* %sb.global-to-local, align 4
  %v9_147b4 = icmp eq i32 %v2_147b0, %v2_14868
  %v1_147b8 = and i32 %v1_147a8, 128
  %v2_147bc = icmp eq i32 %v1_147b8, 0
  %v3_147bc = or i1 %v9_147b4, %v2_147bc
  br i1 %v3_147bc, label %dec_label_pc_147f0, label %dec_label_pc_147c0

dec_label_pc_147c0:                               ; preds = %dec_label_pc_1479c
  store i32 %stack_var_-52.0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_147d0 = call i32 @function_14930(i32 %v0_14744, i32 %stack_var_-52.0, i32 %stack_var_-48.0, i32 0)
  %v0_147d4 = load i32, i32* @r5, align 4
  %v1_147d4 = load i32, i32* %r8.global-to-local, align 4
  %v9_147d4 = icmp eq i32 %v0_147d4, %v1_147d4
  br i1 %v9_147d4, label %dec_label_pc_147dc, label %dec_label_pc_14870

dec_label_pc_147dc:                               ; preds = %dec_label_pc_147c0
  %v0_147dc = call i32 @function_131c4()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_147e8 = inttoptr i32 %v0_147dc to i32*
  store i32 22, i32* %v2_147e8, align 4
  %v0_14874.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14874

dec_label_pc_147f0:                               ; preds = %dec_label_pc_1479c
  %v3_147b811 = udiv i32 %v1_147a8, 256
  %v1_147f0 = trunc i32 %v3_147b811 to i8
  %v3_147f0 = add i32 %v2_147f0, 17
  %v4_147f0 = inttoptr i32 %v3_147f0 to i8*
  store i8 %v1_147f0, i8* %v4_147f0, align 1
  %v0_147f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_147f4 = trunc i32 %v0_147f4 to i8
  %v2_147f4 = load i32, i32* @r5, align 4
  %v3_147f4 = add i32 %v2_147f4, 16
  %v4_147f4 = inttoptr i32 %v3_147f4 to i8*
  store i8 %v1_147f4, i8* %v4_147f4, align 1
  %v0_147f8 = load i32, i32* @r4, align 4
  %v1_147f8 = add i32 %v0_147f8, 8
  %v1_147fc = inttoptr i32 %v1_147f8 to i32*
  %v2_147fc = load i32, i32* %v1_147fc, align 4
  %v3_147fc = add i32 %v0_147f8, 12
  %v4_147fc = inttoptr i32 %v3_147fc to i32*
  %v5_147fc = load i32, i32* %v4_147fc, align 4
  store i32 %v5_147fc, i32* %r3.global-to-local, align 4
  %v1_14808 = inttoptr i32 %v0_147f8 to i32*
  %v2_14808 = load i32, i32* %v1_14808, align 4
  %v3_14808 = add i32 %v0_147f8, 4
  %v4_14808 = inttoptr i32 %v3_14808 to i32*
  %v5_14808 = load i32, i32* %v4_14808, align 4
  store i32 %v5_14808, i32* %r3.global-to-local, align 4
  %v0_1480c = load i32, i32* @r5, align 4
  %v1_1480c = inttoptr i32 %v0_1480c to i32*
  store i32 %v2_14808, i32* %v1_1480c, align 4
  %v3_1480c = add i32 %v0_1480c, 4
  %v4_1480c = inttoptr i32 %v3_1480c to i32*
  %v5_1480c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_1480c, i32* %v4_1480c, align 4
  %v0_14810 = load i32, i32* @r4, align 4
  %v1_14810 = add i32 %v0_14810, 8
  %v1_14814 = inttoptr i32 %v1_14810 to i32*
  %v2_14814 = load i32, i32* %v1_14814, align 4
  %v3_14814 = add i32 %v0_14810, 12
  %v4_14814 = inttoptr i32 %v3_14814 to i32*
  %v5_14814 = load i32, i32* %v4_14814, align 4
  store i32 %v5_14814, i32* %r3.global-to-local, align 4
  %v1_14818 = load i32, i32* @r5, align 4
  %v2_14818 = add i32 %v1_14818, 8
  %v3_14818 = inttoptr i32 %v2_14818 to i32*
  store i32 %v2_14814, i32* %v3_14818, align 4
  %v0_1481c = load i32, i32* %r3.global-to-local, align 4
  %v1_1481c = load i32, i32* @r5, align 4
  %v2_1481c = add i32 %v1_1481c, 12
  %v3_1481c = inttoptr i32 %v2_1481c to i32*
  store i32 %v0_1481c, i32* %v3_1481c, align 4
  %v0_14820 = load i32, i32* @r4, align 4
  %v1_14820 = add i32 %v0_14820, 18
  %v2_14820 = inttoptr i32 %v1_14820 to i8*
  %v3_14820 = load i8, i8* %v2_14820, align 1
  %v4_14820 = zext i8 %v3_14820 to i32
  store i32 %v4_14820, i32* %r3.global-to-local, align 4
  %v2_14824 = load i32, i32* @r5, align 4
  %v3_14824 = add i32 %v2_14824, 18
  %v4_14824 = inttoptr i32 %v3_14824 to i8*
  store i8 %v3_14820, i8* %v4_14824, align 1
  %v0_14828 = load i32, i32* @r4, align 4
  %v1_14828 = add i32 %v0_14828, 16
  %v2_14828 = inttoptr i32 %v1_14828 to i8*
  %v3_14828 = load i8, i8* %v2_14828, align 1
  %v4_14828 = zext i8 %v3_14828 to i32
  %v0_1482c = load i32, i32* %r7.global-to-local, align 4
  %v1_1482c = add i32 %v0_1482c, 1
  %v2_1482c = inttoptr i32 %v1_1482c to i8*
  %v3_1482c = load i8, i8* %v2_1482c, align 1
  %v4_1482c = zext i8 %v3_1482c to i32
  store i32 %v4_1482c, i32* %r3.global-to-local, align 4
  %v4_14830 = mul nuw nsw i32 %v4_1482c, 256
  %v5_14830 = or i32 %v4_14830, %v4_14828
  %v1_14834 = add nsw i32 %v5_14830, -19
  store i32 %v1_14834, i32* @r2, align 4
  %v3_14838 = call i32 @function_13210(i32 %v1_14860, i32 %v1_14864, i32 %v1_14834)
  %v0_1483c = load i32, i32* @r4, align 4
  %v1_1483c = add i32 %v0_1483c, 16
  %v2_1483c = inttoptr i32 %v1_1483c to i8*
  %v3_1483c = load i8, i8* %v2_1483c, align 1
  %v4_1483c = zext i8 %v3_1483c to i32
  store i32 %v4_1483c, i32* %r3.global-to-local, align 4
  %v0_14840 = load i32, i32* %r7.global-to-local, align 4
  %v1_14840 = add i32 %v0_14840, 1
  %v2_14840 = inttoptr i32 %v1_14840 to i8*
  %v3_14840 = load i8, i8* %v2_14840, align 1
  %v4_14840 = zext i8 %v3_14840 to i32
  %v4_14844 = mul nuw nsw i32 %v4_14840, 256
  %v5_14844 = or i32 %v4_14844, %v4_1483c
  store i32 %v5_14844, i32* %r3.global-to-local, align 4
  %v2_14848 = add i32 %v5_14844, %v0_1483c
  store i32 %v2_14848, i32* @r4, align 4
  %v0_1484c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1484c, i32* @r5, align 4
  %v1_14850.pre = load i32, i32* @r6, align 4
  %v0_14868.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14850

dec_label_pc_14850:                               ; preds = %dec_label_pc_14780, %dec_label_pc_147f0
  %stack_var_-52.0 = phi i32 [ -1, %dec_label_pc_14780 ], [ %v2_147fc, %dec_label_pc_147f0 ]
  %v0_14868 = phi i32 [ %v0_14788, %dec_label_pc_14780 ], [ %v0_14868.pre, %dec_label_pc_147f0 ]
  %v2_147f0 = phi i32 [ %v0_14788, %dec_label_pc_14780 ], [ %v0_1484c, %dec_label_pc_147f0 ]
  %v0_147a0 = phi i32 [ %v0_1478c, %dec_label_pc_14780 ], [ %v2_14848, %dec_label_pc_147f0 ]
  %v1_14850 = phi i32 [ %v5_1474c, %dec_label_pc_14780 ], [ %v1_14850.pre, %dec_label_pc_147f0 ]
  %stack_var_-48.0 = phi i32 [ -1, %dec_label_pc_14780 ], [ %v5_147fc, %dec_label_pc_147f0 ]
  %v0_14850 = load i32, i32* %sl.global-to-local, align 4
  %v2_14850 = add i32 %v0_14850, %v1_14850
  store i32 %v2_14850, i32* %r3.global-to-local, align 4
  %v3_14854 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_14854, i32* @r2, align 4
  %v3_14858 = icmp ult i32 %v0_147a0, %v2_14850
  %v1_1485c = add i32 %v0_147a0, 16
  store i32 %v1_1485c, i32* %r7.global-to-local, align 4
  %v1_14860 = add i32 %v2_147f0, 19
  store i32 %v1_14860, i32* @r0, align 4
  %v1_14864 = add i32 %v0_147a0, 19
  store i32 %v1_14864, i32* @r1, align 4
  br i1 %v3_14858, label %dec_label_pc_1479c, label %dec_label_pc_14870

dec_label_pc_14870:                               ; preds = %dec_label_pc_14850, %dec_label_pc_147c0
  %v1_14870 = phi i32 [ %v0_147d4, %dec_label_pc_147c0 ], [ %v2_147f0, %dec_label_pc_14850 ]
  %v0_14870 = phi i32 [ %v1_147d4, %dec_label_pc_147c0 ], [ %v0_14868, %dec_label_pc_14850 ]
  %v2_14870 = sub i32 %v1_14870, %v0_14870
  store i32 %v2_14870, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14874

dec_label_pc_14874:                               ; preds = %dec_label_pc_147dc, %dec_label_pc_14778, %dec_label_pc_14870
  %v0_14874 = phi i32 [ %v0_14874.pre, %dec_label_pc_147dc ], [ %v0_14778, %dec_label_pc_14778 ], [ %v2_14870, %dec_label_pc_14870 ]
  store i32 %v3_14720, i32* @r4, align 4
  store i32 %v9_14720, i32* %r6.global-to-local, align 4
  ret i32 %v0_14874

; uselistorder directives
  uselistorder i32 %v1_14864, { 1, 0 }
  uselistorder i32 %v1_14860, { 1, 0 }
  uselistorder i32 %v1_1485c, { 1, 0 }
  uselistorder i32 %v3_14854, { 1, 0 }
  uselistorder i32 %v0_147a0, { 2, 1, 3, 0 }
  uselistorder i32 %v2_147f0, { 0, 3, 1, 2 }
  uselistorder i32 %v0_147f8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14788, { 1, 0, 2 }
  uselistorder i32 %v5_1474c, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 14, 15, 16 }
  uselistorder i32 (i32, i32, i32)* @function_13210, { 5, 1, 0, 2, 4, 3 }
  uselistorder i32 128, { 13, 14, 36, 15, 37, 27, 18, 19, 20, 28, 10, 29, 0, 21, 22, 23, 1, 2, 3, 4, 5, 6, 7, 8, 9, 30, 24, 25, 26, 31, 11, 32, 12, 16, 33, 34, 35, 17 }
  uselistorder i32* @sp, { 4, 2, 0, 3, 1 }
  uselistorder i32* @r6, { 3, 133, 134, 135, 255, 256, 361, 362, 363, 364, 365, 366, 367, 369, 368, 384, 385, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 41, 50, 91, 92, 93, 94, 95, 96, 16, 17, 18, 19, 20, 97, 21, 22, 46, 98, 99, 100, 2, 1, 101, 102, 42, 47, 13, 14, 15, 51, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 52, 53, 54, 55, 48, 49, 103, 104, 105, 106, 107, 56, 57, 108, 109, 9, 110, 111, 112, 113, 114, 115, 116, 117, 118, 386, 387, 388, 259, 260, 261, 262, 0, 119, 120, 121, 122, 123, 124, 4, 125, 126, 127, 128, 129, 11, 130, 131, 132, 154, 155, 156, 157, 10, 158, 159, 160, 5, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 263, 6, 264, 7, 265, 8, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 389, 390, 391, 392, 393, 394, 395, 396, 397, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 245, 248, 246, 247, 249, 250, 12, 251, 252, 253, 254, 257, 258 }
  uselistorder label %dec_label_pc_14874, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14850, { 1, 0 }
}

define i32 @function_14880() local_unnamed_addr {
dec_label_pc_14880:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14880 = load i32, i32* @r4, align 4
  store i32 %v3_14880, i32* %stack_var_-8, align 4
  %v0_14888 = load i32, i32* @r0, align 4
  store i32 %v0_14888, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14888, -4095
  br i1 %tmp, label %dec_label_pc_148a4, label %dec_label_pc_14894

dec_label_pc_14894:                               ; preds = %dec_label_pc_14880
  %v0_14894 = call i32 @function_131c4()
  %v0_14898 = load i32, i32* %r4.global-to-local, align 4
  %v1_14898 = sub i32 0, %v0_14898
  %v2_1489c = inttoptr i32 %v0_14894 to i32*
  store i32 %v1_14898, i32* %v2_1489c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_148a8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_148a4

dec_label_pc_148a4:                               ; preds = %dec_label_pc_14880, %dec_label_pc_14894
  %v2_148a8 = phi i32 [ %v3_14880, %dec_label_pc_14880 ], [ %v2_148a8.pre, %dec_label_pc_14894 ]
  %v0_148a4 = phi i32 [ %v0_14888, %dec_label_pc_14880 ], [ -1, %dec_label_pc_14894 ]
  store i32 %v2_148a8, i32* @r4, align 4
  ret i32 %v0_148a4

; uselistorder directives
  uselistorder i32 %v0_14888, { 1, 0, 2 }
  uselistorder label %dec_label_pc_148a4, { 1, 0 }
}

define i32 @function_148ac() local_unnamed_addr {
dec_label_pc_148ac:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_148ac = load i32, i32* @r4, align 4
  store i32 %v3_148ac, i32* %stack_var_-8, align 4
  %v0_148b4 = load i32, i32* @r0, align 4
  store i32 %v0_148b4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_148b4, -4095
  br i1 %tmp, label %dec_label_pc_148d0, label %dec_label_pc_148c0

dec_label_pc_148c0:                               ; preds = %dec_label_pc_148ac
  %v0_148c0 = call i32 @function_131c4()
  %v0_148c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_148c4 = sub i32 0, %v0_148c4
  %v2_148c8 = inttoptr i32 %v0_148c0 to i32*
  store i32 %v1_148c4, i32* %v2_148c8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_148d4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_148d0

dec_label_pc_148d0:                               ; preds = %dec_label_pc_148ac, %dec_label_pc_148c0
  %v2_148d4 = phi i32 [ %v3_148ac, %dec_label_pc_148ac ], [ %v2_148d4.pre, %dec_label_pc_148c0 ]
  %v0_148d0 = phi i32 [ %v0_148b4, %dec_label_pc_148ac ], [ -1, %dec_label_pc_148c0 ]
  store i32 %v2_148d4, i32* @r4, align 4
  ret i32 %v0_148d0

; uselistorder directives
  uselistorder i32 %v0_148b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_148d0, { 1, 0 }
}

define i32 @function_148d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_148d8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_148d8 = load i32, i32* @r4, align 4
  store i32 %v3_148d8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_148fc, label %dec_label_pc_148ec

dec_label_pc_148ec:                               ; preds = %dec_label_pc_148d8
  %v0_148ec = call i32 @function_131c4()
  %v0_148f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_148f0 = sub i32 0, %v0_148f0
  %v2_148f4 = inttoptr i32 %v0_148ec to i32*
  store i32 %v1_148f0, i32* %v2_148f4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14900.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_148fc

dec_label_pc_148fc:                               ; preds = %dec_label_pc_148d8, %dec_label_pc_148ec
  %v2_14900 = phi i32 [ %v3_148d8, %dec_label_pc_148d8 ], [ %v2_14900.pre, %dec_label_pc_148ec ]
  %v0_148fc = phi i32 [ %arg1, %dec_label_pc_148d8 ], [ -1, %dec_label_pc_148ec ]
  store i32 %v2_14900, i32* %r4.global-to-local, align 4
  ret i32 %v0_148fc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_148fc, { 1, 0 }
}

define i32 @function_14904() local_unnamed_addr {
dec_label_pc_14904:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14904 = load i32, i32* @r4, align 4
  store i32 %v3_14904, i32* %stack_var_-8, align 4
  %v0_1490c = load i32, i32* @r0, align 4
  store i32 %v0_1490c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1490c, -4095
  br i1 %tmp, label %dec_label_pc_14928, label %dec_label_pc_14918

dec_label_pc_14918:                               ; preds = %dec_label_pc_14904
  %v0_14918 = call i32 @function_131c4()
  %v0_1491c = load i32, i32* %r4.global-to-local, align 4
  %v1_1491c = sub i32 0, %v0_1491c
  %v2_14920 = inttoptr i32 %v0_14918 to i32*
  store i32 %v1_1491c, i32* %v2_14920, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1492c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14928

dec_label_pc_14928:                               ; preds = %dec_label_pc_14904, %dec_label_pc_14918
  %v2_1492c = phi i32 [ %v3_14904, %dec_label_pc_14904 ], [ %v2_1492c.pre, %dec_label_pc_14918 ]
  %v0_14928 = phi i32 [ %v0_1490c, %dec_label_pc_14904 ], [ -1, %dec_label_pc_14918 ]
  store i32 %v2_1492c, i32* %r4.global-to-local, align 4
  ret i32 %v0_14928

; uselistorder directives
  uselistorder i32 %v0_1490c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14928, { 1, 0 }
}

define i32 @function_14930(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14930:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14974, label %dec_label_pc_14960

dec_label_pc_14960:                               ; preds = %dec_label_pc_14930
  %v0_14960 = call i32 @function_131c4()
  %v0_14964 = load i32, i32* %r4.global-to-local, align 4
  %v1_14964 = sub i32 0, %v0_14964
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1496c = inttoptr i32 %v0_14960 to i32*
  store i32 %v1_14964, i32* %v2_1496c, align 4
  %v0_1497c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1497c

dec_label_pc_14974:                               ; preds = %dec_label_pc_14930
  %v2_14974 = icmp eq i32 %arg1, 0
  br i1 %v2_14974, label %dec_label_pc_14988, label %dec_label_pc_1497c

dec_label_pc_1497c:                               ; preds = %dec_label_pc_14974, %dec_label_pc_14960
  %v0_1497c = phi i32 [ %arg1, %dec_label_pc_14974 ], [ %v0_1497c.pre, %dec_label_pc_14960 ]
  br label %dec_label_pc_1498c

dec_label_pc_14988:                               ; preds = %dec_label_pc_14974
  br label %dec_label_pc_1498c

dec_label_pc_1498c:                               ; preds = %dec_label_pc_1497c, %dec_label_pc_14988
  %v14_14990 = phi i32 [ %v0_1497c, %dec_label_pc_1497c ], [ %tmp9, %dec_label_pc_14988 ]
  ret i32 %v14_14990

; uselistorder directives
  uselistorder i32 %arg1, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_1498c, { 1, 0 }
}

define i32 @function_14994(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14994:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_14994 = load i32, i32* @r4, align 4
  store i32 %v3_14994, i32* %stack_var_-8, align 4
  %v6_14998 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_14998, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_14998, -4095
  br i1 %tmp6, label %dec_label_pc_149b8, label %dec_label_pc_149a8

dec_label_pc_149a8:                               ; preds = %dec_label_pc_14994
  %v0_149a8 = call i32 @function_131c4()
  %v0_149ac = load i32, i32* %r4.global-to-local, align 4
  %v1_149ac = sub i32 0, %v0_149ac
  %v2_149b0 = inttoptr i32 %v0_149a8 to i32*
  store i32 %v1_149ac, i32* %v2_149b0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_149b8

dec_label_pc_149b8:                               ; preds = %dec_label_pc_14994, %dec_label_pc_149a8
  %v0_149b8 = phi i32 [ %v6_14998, %dec_label_pc_14994 ], [ -1, %dec_label_pc_149a8 ]
  %v2_149bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_149bc, i32* %r4.global-to-local, align 4
  ret i32 %v0_149b8

; uselistorder directives
  uselistorder i32 %v6_14998, { 1, 0, 2 }
  uselistorder label %dec_label_pc_149b8, { 1, 0 }
}

define i32 @function_149c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_149c0:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_149c0 = load i32, i32* @r4, align 4
  store i32 %v3_149c0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_1dc64.495 to i32), i32* %r4.global-to-local, align 4
  %v2_149c8 = load i32, i32* @global_var_1dc64.495, align 4
  %v2_149cc = icmp eq i32 %v2_149c8, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_149cc, label %dec_label_pc_149dc, label %dec_label_pc_149e8

dec_label_pc_149dc:                               ; preds = %dec_label_pc_149c0
  %v2_149dc = call i32 @function_153d8(i32* null)
  %v1_149e0 = icmp slt i32 %v2_149dc, 0
  br i1 %v1_149e0, label %dec_label_pc_14a08, label %dec_label_pc_149e8thread-pre-split

dec_label_pc_149e8thread-pre-split:               ; preds = %dec_label_pc_149dc
  %v0_149ec.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_149e8.pre = load i32, i32* @global_var_1dc64.495, align 4
  br label %dec_label_pc_149e8

dec_label_pc_149e8:                               ; preds = %dec_label_pc_149e8thread-pre-split, %dec_label_pc_149c0
  %v2_149e8 = phi i32 [ %v2_149e8.pre, %dec_label_pc_149e8thread-pre-split ], [ %v2_149c8, %dec_label_pc_149c0 ]
  %v1_149f4 = phi i32 [ %v0_149ec.pr, %dec_label_pc_149e8thread-pre-split ], [ %arg1, %dec_label_pc_149c0 ]
  %v2_149ec = icmp eq i32 %v1_149f4, 0
  store i32 %v2_149e8, i32* %r4.global-to-local, align 4
  br i1 %v2_149ec, label %dec_label_pc_14a0c, label %dec_label_pc_149fc

dec_label_pc_149fc:                               ; preds = %dec_label_pc_149e8
  %v2_149f4 = add i32 %v1_149f4, %v2_149e8
  %v1_149fc = inttoptr i32 %v2_149f4 to i32*
  %v2_149fc = call i32 @function_153d8(i32* %v1_149fc)
  %v1_14a00 = icmp slt i32 %v2_149fc, 0
  br i1 %v1_14a00, label %dec_label_pc_14a08, label %dec_label_pc_149fc.dec_label_pc_14a0c_crit_edge

dec_label_pc_149fc.dec_label_pc_14a0c_crit_edge:  ; preds = %dec_label_pc_149fc
  %v0_14a0c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14a0c

dec_label_pc_14a08:                               ; preds = %dec_label_pc_149fc, %dec_label_pc_149dc
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14a0c

dec_label_pc_14a0c:                               ; preds = %dec_label_pc_149fc.dec_label_pc_14a0c_crit_edge, %dec_label_pc_149e8, %dec_label_pc_14a08
  %v0_14a0c = phi i32 [ %v0_14a0c.pre, %dec_label_pc_149fc.dec_label_pc_14a0c_crit_edge ], [ %v2_149e8, %dec_label_pc_149e8 ], [ -1, %dec_label_pc_14a08 ]
  %v2_14a10 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14a10, i32* @r4, align 4
  ret i32 %v0_14a0c

; uselistorder directives
  uselistorder i32 %v2_149e8, { 1, 0, 2 }
  uselistorder i32* null, { 0, 4, 6, 23, 24, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 18, 2, 19, 3, 20, 21, 22 }
  uselistorder label %dec_label_pc_14a0c, { 2, 0, 1 }
}

define i32 @function_14a18(%tms* %arg1) local_unnamed_addr {
dec_label_pc_14a18:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14a18 = load i32, i32* @r4, align 4
  store i32 %v3_14a18, i32* %stack_var_-8, align 4
  %v3_14a1c = call i32 @times(%tms* %arg1)
  store i32 %v3_14a1c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_14a1c, -4095
  br i1 %tmp, label %dec_label_pc_14a3c, label %dec_label_pc_14a2c

dec_label_pc_14a2c:                               ; preds = %dec_label_pc_14a18
  %v0_14a2c = call i32 @function_131c4()
  %v0_14a30 = load i32, i32* %r4.global-to-local, align 4
  %v1_14a30 = sub i32 0, %v0_14a30
  %v2_14a34 = inttoptr i32 %v0_14a2c to i32*
  store i32 %v1_14a30, i32* %v2_14a34, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14a3c

dec_label_pc_14a3c:                               ; preds = %dec_label_pc_14a18, %dec_label_pc_14a2c
  %v0_14a3c = phi i32 [ %v3_14a1c, %dec_label_pc_14a18 ], [ -1, %dec_label_pc_14a2c ]
  %v2_14a40 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14a40, i32* %r4.global-to-local, align 4
  ret i32 %v0_14a3c

; uselistorder directives
  uselistorder i32 %v3_14a1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14a3c, { 1, 0 }
}

define i32 @function_14a44(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14a44:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 96, i32* @r2, align 4
  %v2_14a60 = inttoptr i32 %arg2 to i8*
  %v3_14a60 = call i32 @function_13230(i8* %v2_14a60, i32 0)
  %v1_14a64 = add i32 %tmp, 1
  %v2_14a64 = inttoptr i32 %v1_14a64 to i8*
  %v3_14a64 = load i8, i8* %v2_14a64, align 1
  %v4_14a64 = zext i8 %v3_14a64 to i32
  %v1_14a68 = add i32 %tmp, 5
  %v2_14a68 = inttoptr i32 %v1_14a68 to i8*
  %v3_14a68 = load i8, i8* %v2_14a68, align 1
  %v4_14a68 = zext i8 %v3_14a68 to i32
  %v2_14a6c = load i8, i8* %arg1, align 1
  %v3_14a6c = zext i8 %v2_14a6c to i32
  %v1_14a70 = add i32 %tmp, 4
  %v2_14a70 = inttoptr i32 %v1_14a70 to i8*
  %v3_14a70 = load i8, i8* %v2_14a70, align 1
  %v4_14a70 = zext i8 %v3_14a70 to i32
  %v1_14a74 = add i32 %tmp, 2
  %v2_14a74 = inttoptr i32 %v1_14a74 to i8*
  %v3_14a74 = load i8, i8* %v2_14a74, align 1
  %v4_14a74 = zext i8 %v3_14a74 to i32
  %v1_14a78 = add i32 %tmp, 6
  %v2_14a78 = inttoptr i32 %v1_14a78 to i8*
  %v3_14a78 = load i8, i8* %v2_14a78, align 1
  %v4_14a78 = zext i8 %v3_14a78 to i32
  %v1_14a7c = add i32 %tmp, 3
  %v2_14a7c = inttoptr i32 %v1_14a7c to i8*
  %v3_14a7c = load i8, i8* %v2_14a7c, align 1
  %v4_14a7c = zext i8 %v3_14a7c to i32
  %v4_14a80 = mul nuw nsw i32 %v4_14a64, 256
  %v5_14a80 = or i32 %v3_14a6c, %v4_14a80
  %v4_14a84 = mul nuw nsw i32 %v4_14a68, 256
  %v5_14a84 = or i32 %v4_14a70, %v4_14a84
  %v1_14a88 = add i32 %tmp, 7
  %v2_14a88 = inttoptr i32 %v1_14a88 to i8*
  %v3_14a88 = load i8, i8* %v2_14a88, align 1
  %v4_14a88 = zext i8 %v3_14a88 to i32
  %v4_14a8c = mul nuw nsw i32 %v4_14a74, 65536
  %v5_14a8c = or i32 %v4_14a8c, %v5_14a80
  %v4_14a90 = mul nuw nsw i32 %v4_14a78, 65536
  %v5_14a90 = or i32 %v4_14a90, %v5_14a84
  %v4_14a94 = mul nuw i32 %v4_14a7c, 16777216
  %v5_14a94 = or i32 %v4_14a94, %v5_14a8c
  %v4_14a98 = mul nuw i32 %v4_14a88, 16777216
  %v5_14a98 = or i32 %v4_14a98, %v5_14a90
  store i32 %v5_14a98, i32* %r3.global-to-local, align 4
  %v0_14a9c = load i32, i32* %r7.global-to-local, align 4
  %v1_14a9c = inttoptr i32 %v0_14a9c to i32*
  store i32 %v5_14a94, i32* %v1_14a9c, align 4
  %v3_14a9c = add i32 %v0_14a9c, 4
  %v4_14a9c = inttoptr i32 %v3_14a9c to i32*
  %v5_14a9c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_14a9c, i32* %v4_14a9c, align 4
  %v0_14aa0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14aa0 = add i32 %v0_14aa0, 89
  %v2_14aa0 = inttoptr i32 %v1_14aa0 to i8*
  %v3_14aa0 = load i8, i8* %v2_14aa0, align 1
  %v4_14aa0 = zext i8 %v3_14aa0 to i32
  %v1_14aa4 = add i32 %v0_14aa0, 93
  %v2_14aa4 = inttoptr i32 %v1_14aa4 to i8*
  %v3_14aa4 = load i8, i8* %v2_14aa4, align 1
  %v4_14aa4 = zext i8 %v3_14aa4 to i32
  %v1_14aa8 = add i32 %v0_14aa0, 88
  %v2_14aa8 = inttoptr i32 %v1_14aa8 to i8*
  %v3_14aa8 = load i8, i8* %v2_14aa8, align 1
  %v4_14aa8 = zext i8 %v3_14aa8 to i32
  %v1_14aac = add i32 %v0_14aa0, 92
  %v2_14aac = inttoptr i32 %v1_14aac to i8*
  %v3_14aac = load i8, i8* %v2_14aac, align 1
  %v4_14aac = zext i8 %v3_14aac to i32
  store i32 %v4_14aac, i32* %r3.global-to-local, align 4
  %v1_14ab0 = add i32 %v0_14aa0, 94
  %v2_14ab0 = inttoptr i32 %v1_14ab0 to i8*
  %v3_14ab0 = load i8, i8* %v2_14ab0, align 1
  %v4_14ab0 = zext i8 %v3_14ab0 to i32
  %v1_14ab4 = add i32 %v0_14aa0, 90
  %v2_14ab4 = inttoptr i32 %v1_14ab4 to i8*
  %v3_14ab4 = load i8, i8* %v2_14ab4, align 1
  %v4_14ab4 = zext i8 %v3_14ab4 to i32
  %v1_14ab8 = add i32 %v0_14aa0, 91
  %v2_14ab8 = inttoptr i32 %v1_14ab8 to i8*
  %v3_14ab8 = load i8, i8* %v2_14ab8, align 1
  %v4_14ab8 = zext i8 %v3_14ab8 to i32
  %v4_14abc = mul nuw nsw i32 %v4_14aa0, 256
  %v5_14abc = or i32 %v4_14aa8, %v4_14abc
  %v4_14ac0 = mul nuw nsw i32 %v4_14aa4, 256
  %v5_14ac0 = or i32 %v4_14aac, %v4_14ac0
  store i32 %v5_14ac0, i32* %r3.global-to-local, align 4
  %v1_14ac4 = add i32 %v0_14aa0, 95
  %v2_14ac4 = inttoptr i32 %v1_14ac4 to i8*
  %v3_14ac4 = load i8, i8* %v2_14ac4, align 1
  %v4_14ac4 = zext i8 %v3_14ac4 to i32
  %v4_14ac8 = mul nuw nsw i32 %v4_14ab0, 65536
  %v5_14ac8 = or i32 %v4_14ac8, %v5_14ac0
  store i32 %v5_14ac8, i32* %r3.global-to-local, align 4
  %v4_14acc = mul nuw nsw i32 %v4_14ab4, 65536
  %v5_14acc = or i32 %v4_14acc, %v5_14abc
  %v4_14ad0 = mul nuw i32 %v4_14ab8, 16777216
  %v5_14ad0 = or i32 %v4_14ad0, %v5_14acc
  %v4_14ad4 = mul nuw i32 %v4_14ac4, 16777216
  %v5_14ad4 = or i32 %v4_14ad4, %v5_14ac8
  store i32 %v5_14ad4, i32* %r6.global-to-local, align 4
  %v1_14ad8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14ad8 = add i32 %v1_14ad8, 88
  %v3_14ad8 = inttoptr i32 %v2_14ad8 to i32*
  store i32 %v5_14ad0, i32* %v3_14ad8, align 4
  %v0_14adc = load i32, i32* %r6.global-to-local, align 4
  %v1_14adc = load i32, i32* %r7.global-to-local, align 4
  %v2_14adc = add i32 %v1_14adc, 92
  %v3_14adc = inttoptr i32 %v2_14adc to i32*
  store i32 %v0_14adc, i32* %v3_14adc, align 4
  %v0_14ae0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ae0 = add i32 %v0_14ae0, 13
  %v2_14ae0 = inttoptr i32 %v1_14ae0 to i8*
  %v3_14ae0 = load i8, i8* %v2_14ae0, align 1
  %v4_14ae0 = zext i8 %v3_14ae0 to i32
  %v1_14ae4 = add i32 %v0_14ae0, 12
  %v2_14ae4 = inttoptr i32 %v1_14ae4 to i8*
  %v3_14ae4 = load i8, i8* %v2_14ae4, align 1
  %v4_14ae4 = zext i8 %v3_14ae4 to i32
  store i32 %v4_14ae4, i32* %r3.global-to-local, align 4
  %v1_14ae8 = add i32 %v0_14ae0, 14
  %v2_14ae8 = inttoptr i32 %v1_14ae8 to i8*
  %v3_14ae8 = load i8, i8* %v2_14ae8, align 1
  %v4_14ae8 = zext i8 %v3_14ae8 to i32
  %v4_14aec = mul nuw nsw i32 %v4_14ae0, 256
  %v5_14aec = or i32 %v4_14ae4, %v4_14aec
  store i32 %v5_14aec, i32* %r3.global-to-local, align 4
  %v1_14af0 = add i32 %v0_14ae0, 15
  %v2_14af0 = inttoptr i32 %v1_14af0 to i8*
  %v3_14af0 = load i8, i8* %v2_14af0, align 1
  %v4_14af0 = zext i8 %v3_14af0 to i32
  %v4_14af4 = mul nuw nsw i32 %v4_14ae8, 65536
  %v5_14af4 = or i32 %v4_14af4, %v5_14aec
  %v4_14af8 = mul nuw i32 %v4_14af0, 16777216
  %v5_14af8 = or i32 %v5_14af4, %v4_14af8
  store i32 %v5_14af8, i32* %r3.global-to-local, align 4
  %v1_14afc = load i32, i32* %r7.global-to-local, align 4
  %v2_14afc = add i32 %v1_14afc, 12
  %v3_14afc = inttoptr i32 %v2_14afc to i32*
  store i32 %v5_14af8, i32* %v3_14afc, align 4
  %v0_14b00 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b00 = add i32 %v0_14b00, 17
  %v2_14b00 = inttoptr i32 %v1_14b00 to i8*
  %v3_14b00 = load i8, i8* %v2_14b00, align 1
  %v4_14b00 = zext i8 %v3_14b00 to i32
  %v1_14b04 = add i32 %v0_14b00, 16
  %v2_14b04 = inttoptr i32 %v1_14b04 to i8*
  %v3_14b04 = load i8, i8* %v2_14b04, align 1
  %v4_14b04 = zext i8 %v3_14b04 to i32
  store i32 %v4_14b04, i32* %r3.global-to-local, align 4
  %v1_14b08 = add i32 %v0_14b00, 18
  %v2_14b08 = inttoptr i32 %v1_14b08 to i8*
  %v3_14b08 = load i8, i8* %v2_14b08, align 1
  %v4_14b08 = zext i8 %v3_14b08 to i32
  %v4_14b0c = mul nuw nsw i32 %v4_14b00, 256
  %v5_14b0c = or i32 %v4_14b04, %v4_14b0c
  store i32 %v5_14b0c, i32* %r3.global-to-local, align 4
  %v1_14b10 = add i32 %v0_14b00, 19
  %v2_14b10 = inttoptr i32 %v1_14b10 to i8*
  %v3_14b10 = load i8, i8* %v2_14b10, align 1
  %v4_14b10 = zext i8 %v3_14b10 to i32
  %v4_14b14 = mul nuw nsw i32 %v4_14b08, 65536
  %v5_14b14 = or i32 %v4_14b14, %v5_14b0c
  %v4_14b18 = mul nuw i32 %v4_14b10, 16777216
  %v5_14b18 = or i32 %v5_14b14, %v4_14b18
  store i32 %v5_14b18, i32* %r3.global-to-local, align 4
  %v1_14b1c = load i32, i32* %r7.global-to-local, align 4
  %v2_14b1c = add i32 %v1_14b1c, 16
  %v3_14b1c = inttoptr i32 %v2_14b1c to i32*
  store i32 %v5_14b18, i32* %v3_14b1c, align 4
  %v0_14b20 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b20 = add i32 %v0_14b20, 21
  %v2_14b20 = inttoptr i32 %v1_14b20 to i8*
  %v3_14b20 = load i8, i8* %v2_14b20, align 1
  %v4_14b20 = zext i8 %v3_14b20 to i32
  %v1_14b24 = add i32 %v0_14b20, 20
  %v2_14b24 = inttoptr i32 %v1_14b24 to i8*
  %v3_14b24 = load i8, i8* %v2_14b24, align 1
  %v4_14b24 = zext i8 %v3_14b24 to i32
  store i32 %v4_14b24, i32* %r3.global-to-local, align 4
  %v1_14b28 = add i32 %v0_14b20, 22
  %v2_14b28 = inttoptr i32 %v1_14b28 to i8*
  %v3_14b28 = load i8, i8* %v2_14b28, align 1
  %v4_14b28 = zext i8 %v3_14b28 to i32
  %v4_14b2c = mul nuw nsw i32 %v4_14b20, 256
  %v5_14b2c = or i32 %v4_14b24, %v4_14b2c
  store i32 %v5_14b2c, i32* %r3.global-to-local, align 4
  %v1_14b30 = add i32 %v0_14b20, 23
  %v2_14b30 = inttoptr i32 %v1_14b30 to i8*
  %v3_14b30 = load i8, i8* %v2_14b30, align 1
  %v4_14b30 = zext i8 %v3_14b30 to i32
  %v4_14b34 = mul nuw nsw i32 %v4_14b28, 65536
  %v5_14b34 = or i32 %v4_14b34, %v5_14b2c
  %v4_14b38 = mul nuw i32 %v4_14b30, 16777216
  %v5_14b38 = or i32 %v5_14b34, %v4_14b38
  store i32 %v5_14b38, i32* %r3.global-to-local, align 4
  %v1_14b3c = load i32, i32* %r7.global-to-local, align 4
  %v2_14b3c = add i32 %v1_14b3c, 20
  %v3_14b3c = inttoptr i32 %v2_14b3c to i32*
  store i32 %v5_14b38, i32* %v3_14b3c, align 4
  %v0_14b40 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b40 = add i32 %v0_14b40, 25
  %v2_14b40 = inttoptr i32 %v1_14b40 to i8*
  %v3_14b40 = load i8, i8* %v2_14b40, align 1
  %v4_14b40 = zext i8 %v3_14b40 to i32
  %v1_14b44 = add i32 %v0_14b40, 24
  %v2_14b44 = inttoptr i32 %v1_14b44 to i8*
  %v3_14b44 = load i8, i8* %v2_14b44, align 1
  %v4_14b44 = zext i8 %v3_14b44 to i32
  store i32 %v4_14b44, i32* %r3.global-to-local, align 4
  %v1_14b48 = add i32 %v0_14b40, 26
  %v2_14b48 = inttoptr i32 %v1_14b48 to i8*
  %v3_14b48 = load i8, i8* %v2_14b48, align 1
  %v4_14b48 = zext i8 %v3_14b48 to i32
  %v4_14b4c = mul nuw nsw i32 %v4_14b40, 256
  %v5_14b4c = or i32 %v4_14b44, %v4_14b4c
  store i32 %v5_14b4c, i32* %r3.global-to-local, align 4
  %v1_14b50 = add i32 %v0_14b40, 27
  %v2_14b50 = inttoptr i32 %v1_14b50 to i8*
  %v3_14b50 = load i8, i8* %v2_14b50, align 1
  %v4_14b50 = zext i8 %v3_14b50 to i32
  %v4_14b54 = mul nuw nsw i32 %v4_14b48, 65536
  %v5_14b54 = or i32 %v4_14b54, %v5_14b4c
  %v4_14b58 = mul nuw i32 %v4_14b50, 16777216
  %v5_14b58 = or i32 %v5_14b54, %v4_14b58
  store i32 %v5_14b58, i32* %r3.global-to-local, align 4
  %v1_14b5c = load i32, i32* %r7.global-to-local, align 4
  %v2_14b5c = add i32 %v1_14b5c, 24
  %v3_14b5c = inttoptr i32 %v2_14b5c to i32*
  store i32 %v5_14b58, i32* %v3_14b5c, align 4
  %v0_14b60 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b60 = add i32 %v0_14b60, 29
  %v2_14b60 = inttoptr i32 %v1_14b60 to i8*
  %v3_14b60 = load i8, i8* %v2_14b60, align 1
  %v4_14b60 = zext i8 %v3_14b60 to i32
  %v1_14b64 = add i32 %v0_14b60, 28
  %v2_14b64 = inttoptr i32 %v1_14b64 to i8*
  %v3_14b64 = load i8, i8* %v2_14b64, align 1
  %v4_14b64 = zext i8 %v3_14b64 to i32
  store i32 %v4_14b64, i32* %r3.global-to-local, align 4
  %v1_14b68 = add i32 %v0_14b60, 30
  %v2_14b68 = inttoptr i32 %v1_14b68 to i8*
  %v3_14b68 = load i8, i8* %v2_14b68, align 1
  %v4_14b68 = zext i8 %v3_14b68 to i32
  %v4_14b6c = mul nuw nsw i32 %v4_14b60, 256
  %v5_14b6c = or i32 %v4_14b64, %v4_14b6c
  store i32 %v5_14b6c, i32* %r3.global-to-local, align 4
  %v1_14b70 = add i32 %v0_14b60, 31
  %v2_14b70 = inttoptr i32 %v1_14b70 to i8*
  %v3_14b70 = load i8, i8* %v2_14b70, align 1
  %v4_14b70 = zext i8 %v3_14b70 to i32
  %v4_14b74 = mul nuw nsw i32 %v4_14b68, 65536
  %v5_14b74 = or i32 %v4_14b74, %v5_14b6c
  %v4_14b78 = mul nuw i32 %v4_14b70, 16777216
  %v5_14b78 = or i32 %v5_14b74, %v4_14b78
  store i32 %v5_14b78, i32* %r3.global-to-local, align 4
  %v1_14b7c = load i32, i32* %r7.global-to-local, align 4
  %v2_14b7c = add i32 %v1_14b7c, 28
  %v3_14b7c = inttoptr i32 %v2_14b7c to i32*
  store i32 %v5_14b78, i32* %v3_14b7c, align 4
  %v0_14b80 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b80 = add i32 %v0_14b80, 33
  %v2_14b80 = inttoptr i32 %v1_14b80 to i8*
  %v3_14b80 = load i8, i8* %v2_14b80, align 1
  %v4_14b80 = zext i8 %v3_14b80 to i32
  %v1_14b84 = add i32 %v0_14b80, 37
  %v2_14b84 = inttoptr i32 %v1_14b84 to i8*
  %v3_14b84 = load i8, i8* %v2_14b84, align 1
  %v4_14b84 = zext i8 %v3_14b84 to i32
  %v1_14b88 = add i32 %v0_14b80, 32
  %v2_14b88 = inttoptr i32 %v1_14b88 to i8*
  %v3_14b88 = load i8, i8* %v2_14b88, align 1
  %v4_14b88 = zext i8 %v3_14b88 to i32
  %v1_14b8c = add i32 %v0_14b80, 36
  %v2_14b8c = inttoptr i32 %v1_14b8c to i8*
  %v3_14b8c = load i8, i8* %v2_14b8c, align 1
  %v4_14b8c = zext i8 %v3_14b8c to i32
  store i32 %v4_14b8c, i32* %r3.global-to-local, align 4
  %v1_14b90 = add i32 %v0_14b80, 34
  %v2_14b90 = inttoptr i32 %v1_14b90 to i8*
  %v3_14b90 = load i8, i8* %v2_14b90, align 1
  %v4_14b90 = zext i8 %v3_14b90 to i32
  %v1_14b94 = add i32 %v0_14b80, 38
  %v2_14b94 = inttoptr i32 %v1_14b94 to i8*
  %v3_14b94 = load i8, i8* %v2_14b94, align 1
  %v4_14b94 = zext i8 %v3_14b94 to i32
  %v1_14b98 = add i32 %v0_14b80, 35
  %v2_14b98 = inttoptr i32 %v1_14b98 to i8*
  %v3_14b98 = load i8, i8* %v2_14b98, align 1
  %v4_14b98 = zext i8 %v3_14b98 to i32
  %v4_14b9c = mul nuw nsw i32 %v4_14b80, 256
  %v5_14b9c = or i32 %v4_14b88, %v4_14b9c
  %v4_14ba0 = mul nuw nsw i32 %v4_14b84, 256
  %v5_14ba0 = or i32 %v4_14b8c, %v4_14ba0
  store i32 %v5_14ba0, i32* %r3.global-to-local, align 4
  %v1_14ba4 = add i32 %v0_14b80, 39
  %v2_14ba4 = inttoptr i32 %v1_14ba4 to i8*
  %v3_14ba4 = load i8, i8* %v2_14ba4, align 1
  %v4_14ba4 = zext i8 %v3_14ba4 to i32
  %v4_14ba8 = mul nuw nsw i32 %v4_14b90, 65536
  %v5_14ba8 = or i32 %v4_14ba8, %v5_14b9c
  %v4_14bac = mul nuw nsw i32 %v4_14b94, 65536
  %v5_14bac = or i32 %v4_14bac, %v5_14ba0
  %v4_14bb0 = mul nuw i32 %v4_14b98, 16777216
  %v5_14bb0 = or i32 %v5_14ba8, %v4_14bb0
  %v4_14bb4 = mul nuw i32 %v4_14ba4, 16777216
  %v5_14bb4 = or i32 %v5_14bac, %v4_14bb4
  store i32 %v5_14bb4, i32* %r3.global-to-local, align 4
  %v1_14bc8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14bc8 = add i32 %v1_14bc8, 32
  %v3_14bc8 = inttoptr i32 %v2_14bc8 to i32*
  store i32 %v5_14bb0, i32* %v3_14bc8, align 4
  %v0_14bcc = load i32, i32* %r3.global-to-local, align 4
  %v1_14bcc = load i32, i32* %r7.global-to-local, align 4
  %v2_14bcc = add i32 %v1_14bcc, 36
  %v3_14bcc = inttoptr i32 %v2_14bcc to i32*
  store i32 %v0_14bcc, i32* %v3_14bcc, align 4
  %v0_14bd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14bd0 = add i32 %v0_14bd0, 45
  %v2_14bd0 = inttoptr i32 %v1_14bd0 to i8*
  %v3_14bd0 = load i8, i8* %v2_14bd0, align 1
  %v4_14bd0 = zext i8 %v3_14bd0 to i32
  %v1_14bd4 = add i32 %v0_14bd0, 49
  %v2_14bd4 = inttoptr i32 %v1_14bd4 to i8*
  %v3_14bd4 = load i8, i8* %v2_14bd4, align 1
  %v4_14bd4 = zext i8 %v3_14bd4 to i32
  %v1_14bd8 = add i32 %v0_14bd0, 44
  %v2_14bd8 = inttoptr i32 %v1_14bd8 to i8*
  %v3_14bd8 = load i8, i8* %v2_14bd8, align 1
  %v4_14bd8 = zext i8 %v3_14bd8 to i32
  %v1_14bdc = add i32 %v0_14bd0, 48
  %v2_14bdc = inttoptr i32 %v1_14bdc to i8*
  %v3_14bdc = load i8, i8* %v2_14bdc, align 1
  %v4_14bdc = zext i8 %v3_14bdc to i32
  store i32 %v4_14bdc, i32* %r3.global-to-local, align 4
  %v1_14be0 = add i32 %v0_14bd0, 46
  %v2_14be0 = inttoptr i32 %v1_14be0 to i8*
  %v3_14be0 = load i8, i8* %v2_14be0, align 1
  %v4_14be0 = zext i8 %v3_14be0 to i32
  %v1_14be4 = add i32 %v0_14bd0, 50
  %v2_14be4 = inttoptr i32 %v1_14be4 to i8*
  %v3_14be4 = load i8, i8* %v2_14be4, align 1
  %v4_14be4 = zext i8 %v3_14be4 to i32
  %v1_14be8 = add i32 %v0_14bd0, 47
  %v2_14be8 = inttoptr i32 %v1_14be8 to i8*
  %v3_14be8 = load i8, i8* %v2_14be8, align 1
  %v4_14be8 = zext i8 %v3_14be8 to i32
  %v4_14bec = mul nuw nsw i32 %v4_14bd0, 256
  %v5_14bec = or i32 %v4_14bd8, %v4_14bec
  %v4_14bf0 = mul nuw nsw i32 %v4_14bd4, 256
  %v5_14bf0 = or i32 %v4_14bdc, %v4_14bf0
  store i32 %v5_14bf0, i32* %r3.global-to-local, align 4
  %v1_14bf4 = add i32 %v0_14bd0, 51
  %v2_14bf4 = inttoptr i32 %v1_14bf4 to i8*
  %v3_14bf4 = load i8, i8* %v2_14bf4, align 1
  %v4_14bf4 = zext i8 %v3_14bf4 to i32
  %v4_14bf8 = mul nuw nsw i32 %v4_14be0, 65536
  %v5_14bf8 = or i32 %v4_14bf8, %v5_14bec
  %v4_14bfc = mul nuw nsw i32 %v4_14be4, 65536
  %v5_14bfc = or i32 %v4_14bfc, %v5_14bf0
  %v4_14c00 = mul nuw i32 %v4_14be8, 16777216
  %v5_14c00 = or i32 %v5_14bf8, %v4_14c00
  %v4_14c04 = mul nuw i32 %v4_14bf4, 16777216
  %v5_14c04 = or i32 %v5_14bfc, %v4_14c04
  store i32 %v5_14c04, i32* %r3.global-to-local, align 4
  %v1_14c18 = load i32, i32* %r7.global-to-local, align 4
  %v2_14c18 = add i32 %v1_14c18, 44
  %v3_14c18 = inttoptr i32 %v2_14c18 to i32*
  store i32 %v5_14c00, i32* %v3_14c18, align 4
  %v0_14c1c = load i32, i32* %r3.global-to-local, align 4
  %v1_14c1c = load i32, i32* %r7.global-to-local, align 4
  %v2_14c1c = add i32 %v1_14c1c, 48
  %v3_14c1c = inttoptr i32 %v2_14c1c to i32*
  store i32 %v0_14c1c, i32* %v3_14c1c, align 4
  %v0_14c20 = load i32, i32* %r4.global-to-local, align 4
  %v1_14c20 = add i32 %v0_14c20, 53
  %v2_14c20 = inttoptr i32 %v1_14c20 to i8*
  %v3_14c20 = load i8, i8* %v2_14c20, align 1
  %v4_14c20 = zext i8 %v3_14c20 to i32
  %v1_14c24 = add i32 %v0_14c20, 52
  %v2_14c24 = inttoptr i32 %v1_14c24 to i8*
  %v3_14c24 = load i8, i8* %v2_14c24, align 1
  %v4_14c24 = zext i8 %v3_14c24 to i32
  store i32 %v4_14c24, i32* %r3.global-to-local, align 4
  %v1_14c28 = add i32 %v0_14c20, 54
  %v2_14c28 = inttoptr i32 %v1_14c28 to i8*
  %v3_14c28 = load i8, i8* %v2_14c28, align 1
  %v4_14c28 = zext i8 %v3_14c28 to i32
  %v4_14c2c = mul nuw nsw i32 %v4_14c20, 256
  %v5_14c2c = or i32 %v4_14c24, %v4_14c2c
  store i32 %v5_14c2c, i32* %r3.global-to-local, align 4
  %v1_14c30 = add i32 %v0_14c20, 55
  %v2_14c30 = inttoptr i32 %v1_14c30 to i8*
  %v3_14c30 = load i8, i8* %v2_14c30, align 1
  %v4_14c30 = zext i8 %v3_14c30 to i32
  %v4_14c34 = mul nuw nsw i32 %v4_14c28, 65536
  %v5_14c34 = or i32 %v4_14c34, %v5_14c2c
  %v4_14c38 = mul nuw i32 %v4_14c30, 16777216
  %v5_14c38 = or i32 %v5_14c34, %v4_14c38
  store i32 %v5_14c38, i32* %r3.global-to-local, align 4
  %v1_14c3c = load i32, i32* %r7.global-to-local, align 4
  %v2_14c3c = add i32 %v1_14c3c, 52
  %v3_14c3c = inttoptr i32 %v2_14c3c to i32*
  store i32 %v5_14c38, i32* %v3_14c3c, align 4
  %v0_14c40 = load i32, i32* %r4.global-to-local, align 4
  %v1_14c40 = add i32 %v0_14c40, 57
  %v2_14c40 = inttoptr i32 %v1_14c40 to i8*
  %v3_14c40 = load i8, i8* %v2_14c40, align 1
  %v4_14c40 = zext i8 %v3_14c40 to i32
  %v1_14c44 = add i32 %v0_14c40, 56
  %v2_14c44 = inttoptr i32 %v1_14c44 to i8*
  %v3_14c44 = load i8, i8* %v2_14c44, align 1
  %v4_14c44 = zext i8 %v3_14c44 to i32
  %v1_14c48 = add i32 %v0_14c40, 60
  %v2_14c48 = inttoptr i32 %v1_14c48 to i8*
  %v3_14c48 = load i8, i8* %v2_14c48, align 1
  %v4_14c48 = zext i8 %v3_14c48 to i32
  store i32 %v4_14c48, i32* %r3.global-to-local, align 4
  %v1_14c4c = add i32 %v0_14c40, 61
  %v2_14c4c = inttoptr i32 %v1_14c4c to i8*
  %v3_14c4c = load i8, i8* %v2_14c4c, align 1
  %v4_14c4c = zext i8 %v3_14c4c to i32
  %v1_14c50 = add i32 %v0_14c40, 58
  %v2_14c50 = inttoptr i32 %v1_14c50 to i8*
  %v3_14c50 = load i8, i8* %v2_14c50, align 1
  %v4_14c50 = zext i8 %v3_14c50 to i32
  %v1_14c54 = add i32 %v0_14c40, 62
  %v2_14c54 = inttoptr i32 %v1_14c54 to i8*
  %v3_14c54 = load i8, i8* %v2_14c54, align 1
  %v4_14c54 = zext i8 %v3_14c54 to i32
  %v1_14c58 = add i32 %v0_14c40, 59
  %v2_14c58 = inttoptr i32 %v1_14c58 to i8*
  %v3_14c58 = load i8, i8* %v2_14c58, align 1
  %v4_14c58 = zext i8 %v3_14c58 to i32
  %v4_14c5c = mul nuw nsw i32 %v4_14c40, 256
  %v5_14c5c = or i32 %v4_14c44, %v4_14c5c
  %v4_14c60 = mul nuw nsw i32 %v4_14c4c, 256
  %v5_14c60 = or i32 %v4_14c60, %v4_14c48
  store i32 %v5_14c60, i32* %r3.global-to-local, align 4
  %v1_14c64 = add i32 %v0_14c40, 63
  %v2_14c64 = inttoptr i32 %v1_14c64 to i8*
  %v3_14c64 = load i8, i8* %v2_14c64, align 1
  %v4_14c64 = zext i8 %v3_14c64 to i32
  %v4_14c68 = mul nuw nsw i32 %v4_14c50, 65536
  %v5_14c68 = or i32 %v4_14c68, %v5_14c5c
  %v4_14c6c = mul nuw nsw i32 %v4_14c54, 65536
  %v5_14c6c = or i32 %v4_14c6c, %v5_14c60
  %v4_14c70 = mul nuw i32 %v4_14c64, 16777216
  %v5_14c70 = or i32 %v5_14c6c, %v4_14c70
  %v4_14c74 = mul nuw i32 %v4_14c58, 16777216
  %v5_14c74 = or i32 %v5_14c68, %v4_14c74
  store i32 %v5_14c70, i32* %r3.global-to-local, align 4
  %v1_14c84 = load i32, i32* %r7.global-to-local, align 4
  %v2_14c84 = add i32 %v1_14c84, 56
  %v3_14c84 = inttoptr i32 %v2_14c84 to i32*
  store i32 %v5_14c74, i32* %v3_14c84, align 4
  %v0_14c88 = load i32, i32* %r3.global-to-local, align 4
  %v1_14c88 = load i32, i32* %r7.global-to-local, align 4
  %v2_14c88 = add i32 %v1_14c88, 60
  %v3_14c88 = inttoptr i32 %v2_14c88 to i32*
  store i32 %v0_14c88, i32* %v3_14c88, align 4
  %v0_14c8c = load i32, i32* %r4.global-to-local, align 4
  %v1_14c8c = add i32 %v0_14c8c, 65
  %v2_14c8c = inttoptr i32 %v1_14c8c to i8*
  %v3_14c8c = load i8, i8* %v2_14c8c, align 1
  %v4_14c8c = zext i8 %v3_14c8c to i32
  %v1_14c90 = add i32 %v0_14c8c, 64
  %v2_14c90 = inttoptr i32 %v1_14c90 to i8*
  %v3_14c90 = load i8, i8* %v2_14c90, align 1
  %v4_14c90 = zext i8 %v3_14c90 to i32
  store i32 %v4_14c90, i32* %r3.global-to-local, align 4
  %v1_14c94 = add i32 %v0_14c8c, 66
  %v2_14c94 = inttoptr i32 %v1_14c94 to i8*
  %v3_14c94 = load i8, i8* %v2_14c94, align 1
  %v4_14c94 = zext i8 %v3_14c94 to i32
  %v4_14c98 = mul nuw nsw i32 %v4_14c8c, 256
  %v5_14c98 = or i32 %v4_14c90, %v4_14c98
  store i32 %v5_14c98, i32* %r3.global-to-local, align 4
  %v1_14c9c = add i32 %v0_14c8c, 67
  %v2_14c9c = inttoptr i32 %v1_14c9c to i8*
  %v3_14c9c = load i8, i8* %v2_14c9c, align 1
  %v4_14c9c = zext i8 %v3_14c9c to i32
  %v4_14ca0 = mul nuw nsw i32 %v4_14c94, 65536
  %v5_14ca0 = or i32 %v4_14ca0, %v5_14c98
  %v4_14ca4 = mul nuw i32 %v4_14c9c, 16777216
  %v5_14ca4 = or i32 %v5_14ca0, %v4_14ca4
  store i32 %v5_14ca4, i32* %r3.global-to-local, align 4
  %v1_14ca8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14ca8 = add i32 %v1_14ca8, 64
  %v3_14ca8 = inttoptr i32 %v2_14ca8 to i32*
  store i32 %v5_14ca4, i32* %v3_14ca8, align 4
  %v0_14cac = load i32, i32* %r4.global-to-local, align 4
  %v1_14cac = add i32 %v0_14cac, 73
  %v2_14cac = inttoptr i32 %v1_14cac to i8*
  %v3_14cac = load i8, i8* %v2_14cac, align 1
  %v4_14cac = zext i8 %v3_14cac to i32
  %v1_14cb0 = add i32 %v0_14cac, 72
  %v2_14cb0 = inttoptr i32 %v1_14cb0 to i8*
  %v3_14cb0 = load i8, i8* %v2_14cb0, align 1
  %v4_14cb0 = zext i8 %v3_14cb0 to i32
  store i32 %v4_14cb0, i32* %r3.global-to-local, align 4
  %v1_14cb4 = add i32 %v0_14cac, 74
  %v2_14cb4 = inttoptr i32 %v1_14cb4 to i8*
  %v3_14cb4 = load i8, i8* %v2_14cb4, align 1
  %v4_14cb4 = zext i8 %v3_14cb4 to i32
  %v4_14cb8 = mul nuw nsw i32 %v4_14cac, 256
  %v5_14cb8 = or i32 %v4_14cb0, %v4_14cb8
  store i32 %v5_14cb8, i32* %r3.global-to-local, align 4
  %v1_14cbc = add i32 %v0_14cac, 75
  %v2_14cbc = inttoptr i32 %v1_14cbc to i8*
  %v3_14cbc = load i8, i8* %v2_14cbc, align 1
  %v4_14cbc = zext i8 %v3_14cbc to i32
  %v4_14cc0 = mul nuw nsw i32 %v4_14cb4, 65536
  %v5_14cc0 = or i32 %v4_14cc0, %v5_14cb8
  %v4_14cc4 = mul nuw i32 %v4_14cbc, 16777216
  %v5_14cc4 = or i32 %v5_14cc0, %v4_14cc4
  store i32 %v5_14cc4, i32* %r3.global-to-local, align 4
  %v1_14cc8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14cc8 = add i32 %v1_14cc8, 72
  %v3_14cc8 = inttoptr i32 %v2_14cc8 to i32*
  store i32 %v5_14cc4, i32* %v3_14cc8, align 4
  %v0_14ccc = load i32, i32* %r4.global-to-local, align 4
  %v1_14ccc = add i32 %v0_14ccc, 81
  %v2_14ccc = inttoptr i32 %v1_14ccc to i8*
  %v3_14ccc = load i8, i8* %v2_14ccc, align 1
  %v4_14ccc = zext i8 %v3_14ccc to i32
  %v1_14cd0 = add i32 %v0_14ccc, 80
  %v2_14cd0 = inttoptr i32 %v1_14cd0 to i8*
  %v3_14cd0 = load i8, i8* %v2_14cd0, align 1
  %v4_14cd0 = zext i8 %v3_14cd0 to i32
  store i32 %v4_14cd0, i32* %r3.global-to-local, align 4
  %v1_14cd4 = add i32 %v0_14ccc, 82
  %v2_14cd4 = inttoptr i32 %v1_14cd4 to i8*
  %v3_14cd4 = load i8, i8* %v2_14cd4, align 1
  %v4_14cd4 = zext i8 %v3_14cd4 to i32
  %v4_14cd8 = mul nuw nsw i32 %v4_14ccc, 256
  %v5_14cd8 = or i32 %v4_14cd0, %v4_14cd8
  store i32 %v5_14cd8, i32* %r3.global-to-local, align 4
  %v1_14cdc = add i32 %v0_14ccc, 83
  %v2_14cdc = inttoptr i32 %v1_14cdc to i8*
  %v3_14cdc = load i8, i8* %v2_14cdc, align 1
  %v4_14cdc = zext i8 %v3_14cdc to i32
  %v4_14ce0 = mul nuw nsw i32 %v4_14cd4, 65536
  %v5_14ce0 = or i32 %v4_14ce0, %v5_14cd8
  %v4_14ce4 = mul nuw i32 %v4_14cdc, 16777216
  %v5_14ce4 = or i32 %v5_14ce0, %v4_14ce4
  store i32 %v5_14ce4, i32* %r3.global-to-local, align 4
  %v1_14ce8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14ce8 = add i32 %v1_14ce8, 80
  %v3_14ce8 = inttoptr i32 %v2_14ce8 to i32*
  store i32 %v5_14ce4, i32* %v3_14ce8, align 4
  %v0_14cec = load i32, i32* %r4.global-to-local, align 4
  %v1_14cec = add i32 %v0_14cec, 69
  %v2_14cec = inttoptr i32 %v1_14cec to i8*
  %v3_14cec = load i8, i8* %v2_14cec, align 1
  %v4_14cec = zext i8 %v3_14cec to i32
  %v1_14cf0 = add i32 %v0_14cec, 68
  %v2_14cf0 = inttoptr i32 %v1_14cf0 to i8*
  %v3_14cf0 = load i8, i8* %v2_14cf0, align 1
  %v4_14cf0 = zext i8 %v3_14cf0 to i32
  store i32 %v4_14cf0, i32* %r3.global-to-local, align 4
  %v1_14cf4 = add i32 %v0_14cec, 70
  %v2_14cf4 = inttoptr i32 %v1_14cf4 to i8*
  %v3_14cf4 = load i8, i8* %v2_14cf4, align 1
  %v4_14cf4 = zext i8 %v3_14cf4 to i32
  %v4_14cf8 = mul nuw nsw i32 %v4_14cec, 256
  %v5_14cf8 = or i32 %v4_14cf0, %v4_14cf8
  store i32 %v5_14cf8, i32* %r3.global-to-local, align 4
  %v1_14cfc = add i32 %v0_14cec, 71
  %v2_14cfc = inttoptr i32 %v1_14cfc to i8*
  %v3_14cfc = load i8, i8* %v2_14cfc, align 1
  %v4_14cfc = zext i8 %v3_14cfc to i32
  %v4_14d00 = mul nuw nsw i32 %v4_14cf4, 65536
  %v5_14d00 = or i32 %v4_14d00, %v5_14cf8
  %v4_14d04 = mul nuw i32 %v4_14cfc, 16777216
  %v5_14d04 = or i32 %v5_14d00, %v4_14d04
  store i32 %v5_14d04, i32* %r3.global-to-local, align 4
  %v1_14d08 = load i32, i32* %r7.global-to-local, align 4
  %v2_14d08 = add i32 %v1_14d08, 68
  %v3_14d08 = inttoptr i32 %v2_14d08 to i32*
  store i32 %v5_14d04, i32* %v3_14d08, align 4
  %v0_14d0c = load i32, i32* %r4.global-to-local, align 4
  %v1_14d0c = add i32 %v0_14d0c, 77
  %v2_14d0c = inttoptr i32 %v1_14d0c to i8*
  %v3_14d0c = load i8, i8* %v2_14d0c, align 1
  %v4_14d0c = zext i8 %v3_14d0c to i32
  %v1_14d10 = add i32 %v0_14d0c, 76
  %v2_14d10 = inttoptr i32 %v1_14d10 to i8*
  %v3_14d10 = load i8, i8* %v2_14d10, align 1
  %v4_14d10 = zext i8 %v3_14d10 to i32
  store i32 %v4_14d10, i32* %r3.global-to-local, align 4
  %v1_14d14 = add i32 %v0_14d0c, 78
  %v2_14d14 = inttoptr i32 %v1_14d14 to i8*
  %v3_14d14 = load i8, i8* %v2_14d14, align 1
  %v4_14d14 = zext i8 %v3_14d14 to i32
  %v4_14d18 = mul nuw nsw i32 %v4_14d0c, 256
  %v5_14d18 = or i32 %v4_14d10, %v4_14d18
  store i32 %v5_14d18, i32* %r3.global-to-local, align 4
  %v1_14d1c = add i32 %v0_14d0c, 79
  %v2_14d1c = inttoptr i32 %v1_14d1c to i8*
  %v3_14d1c = load i8, i8* %v2_14d1c, align 1
  %v4_14d1c = zext i8 %v3_14d1c to i32
  %v4_14d20 = mul nuw nsw i32 %v4_14d14, 65536
  %v5_14d20 = or i32 %v4_14d20, %v5_14d18
  %v4_14d24 = mul nuw i32 %v4_14d1c, 16777216
  %v5_14d24 = or i32 %v5_14d20, %v4_14d24
  store i32 %v5_14d24, i32* %r3.global-to-local, align 4
  %v1_14d28 = load i32, i32* %r7.global-to-local, align 4
  %v2_14d28 = add i32 %v1_14d28, 76
  %v3_14d28 = inttoptr i32 %v2_14d28 to i32*
  store i32 %v5_14d24, i32* %v3_14d28, align 4
  %v0_14d2c = load i32, i32* %r4.global-to-local, align 4
  %v1_14d2c = add i32 %v0_14d2c, 85
  %v2_14d2c = inttoptr i32 %v1_14d2c to i8*
  %v3_14d2c = load i8, i8* %v2_14d2c, align 1
  %v4_14d2c = zext i8 %v3_14d2c to i32
  %v1_14d30 = add i32 %v0_14d2c, 84
  %v2_14d30 = inttoptr i32 %v1_14d30 to i8*
  %v3_14d30 = load i8, i8* %v2_14d30, align 1
  %v4_14d30 = zext i8 %v3_14d30 to i32
  store i32 %v4_14d30, i32* %r3.global-to-local, align 4
  %v1_14d34 = add i32 %v0_14d2c, 86
  %v2_14d34 = inttoptr i32 %v1_14d34 to i8*
  %v3_14d34 = load i8, i8* %v2_14d34, align 1
  %v4_14d34 = zext i8 %v3_14d34 to i32
  %v4_14d38 = mul nuw nsw i32 %v4_14d2c, 256
  %v5_14d38 = or i32 %v4_14d30, %v4_14d38
  store i32 %v5_14d38, i32* %r3.global-to-local, align 4
  %v1_14d3c = add i32 %v0_14d2c, 87
  %v2_14d3c = inttoptr i32 %v1_14d3c to i8*
  %v3_14d3c = load i8, i8* %v2_14d3c, align 1
  %v4_14d3c = zext i8 %v3_14d3c to i32
  %v4_14d40 = mul nuw nsw i32 %v4_14d34, 65536
  %v5_14d40 = or i32 %v4_14d40, %v5_14d38
  %v4_14d44 = mul nuw i32 %v4_14d3c, 16777216
  %v5_14d44 = or i32 %v5_14d40, %v4_14d44
  store i32 %v5_14d44, i32* %r3.global-to-local, align 4
  %v1_14d48 = load i32, i32* %r7.global-to-local, align 4
  %v2_14d48 = add i32 %v1_14d48, 84
  %v3_14d48 = inttoptr i32 %v2_14d48 to i32*
  store i32 %v5_14d44, i32* %v3_14d48, align 4
  ret i32 %v4_14c4c

; uselistorder directives
  uselistorder i32 %v4_14c4c, { 1, 0 }
  uselistorder i32 %v0_14c40, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_14bd0, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_14b80, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_14aa0, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %tmp, { 6, 5, 3, 4, 2, 1, 0, 7 }
  uselistorder i32 87, { 2, 0, 3, 1 }
  uselistorder i32 84, { 1, 2, 0 }
  uselistorder i32 85, { 1, 0, 2 }
  uselistorder i32 79, { 3, 4, 0, 1, 2 }
  uselistorder i32 78, { 1, 0, 2, 3 }
  uselistorder i32 77, { 2, 0, 1 }
  uselistorder i32 71, { 1, 2, 0 }
  uselistorder i32 70, { 1, 0, 2, 3 }
  uselistorder i32 69, { 3, 1, 2, 0 }
  uselistorder i32 81, { 2, 0, 1 }
  uselistorder i32 75, { 1, 0 }
  uselistorder i32 73, { 2, 0, 1, 3 }
  uselistorder i32 67, { 1, 2, 0 }
  uselistorder i32 66, { 1, 2, 0, 3, 4 }
  uselistorder i32 65, { 1, 2, 0 }
  uselistorder i32 63, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 62, { 5, 0, 1, 6, 2, 3, 7, 4 }
  uselistorder i32 58, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 61, { 2, 3, 0, 1, 4 }
  uselistorder i32 57, { 2, 0, 1, 3, 4 }
  uselistorder i32 55, { 3, 8, 0, 4, 5, 2, 6, 7, 1 }
  uselistorder i32 54, { 3, 4, 1, 2, 0 }
  uselistorder i32 53, { 2, 1, 0, 3 }
  uselistorder i32 51, { 2, 3, 0, 4, 1 }
  uselistorder i32 47, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 50, { 2, 0, 1, 3 }
  uselistorder i32 46, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 49, { 1, 2, 0, 3 }
  uselistorder i32 45, { 3, 0, 1, 4, 2, 5 }
  uselistorder i32 39, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32 35, { 8, 0, 9, 1, 10, 2, 11, 3, 12, 4, 13, 5, 14, 6, 15, 16, 7, 17 }
  uselistorder i32 38, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 34, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 12 }
  uselistorder i32 33, { 3, 4, 2, 5, 0, 1 }
  uselistorder i32 30, { 8, 0, 4, 9, 5, 10, 6, 7, 11, 12, 1, 2, 3 }
  uselistorder i32 29, { 5, 6, 2, 3, 4, 1, 7, 0 }
  uselistorder i32 26, { 9, 0, 1, 3, 2, 4, 11, 8, 10, 5, 12, 6, 13, 7, 14, 15 }
  uselistorder i32 25, { 12, 27, 28, 2, 13, 3, 14, 4, 15, 5, 16, 11, 17, 6, 18, 7, 19, 0, 20, 21, 22, 8, 9, 23, 10, 24, 25, 1, 26 }
  uselistorder i32 23, { 7, 2, 1, 8, 9, 10, 0, 3, 4, 5, 6 }
  uselistorder i32 22, { 11, 1, 14, 2, 3, 4, 5, 0, 10, 12, 13, 6, 15, 7, 16, 8, 17, 9 }
  uselistorder i32 21, { 11, 4, 2, 5, 3, 12, 13, 10, 14, 9, 15, 0, 1, 6, 16, 7, 17, 8, 18 }
  uselistorder i32 19, { 11, 14, 15, 16, 3, 0, 12, 8, 9, 10, 13, 4, 5, 6, 7, 17, 1, 18, 2, 19 }
  uselistorder i32 18, { 10, 12, 13, 14, 8, 11, 9, 0, 1, 2, 3, 15, 4, 16, 5, 17, 6, 18, 7, 19 }
  uselistorder i32 17, { 17, 20, 0, 4, 31, 32, 5, 33, 34, 6, 1, 16, 18, 7, 19, 8, 9, 10, 11, 21, 22, 2, 23, 24, 25, 3, 26, 27, 28, 29, 30, 35, 12, 36, 13, 37, 38, 39, 14, 40, 15 }
  uselistorder i32 95, { 2, 0, 3, 4, 5, 6, 1 }
  uselistorder i32 91, { 1, 2, 3, 0 }
  uselistorder i32 90, { 2, 0, 1 }
  uselistorder i32 94, { 4, 0, 5, 6, 1, 7, 2, 8, 3 }
  uselistorder i32 92, { 1, 2, 3, 0, 4 }
  uselistorder i32 93, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 6, { 30, 39, 14, 15, 84, 16, 35, 2, 18, 31, 19, 32, 20, 33, 17, 34, 0, 28, 36, 29, 37, 21, 38, 3, 4, 40, 41, 42, 22, 43, 5, 44, 45, 46, 23, 47, 6, 48, 49, 50, 24, 51, 52, 53, 25, 54, 58, 59, 60, 7, 61, 62, 63, 64, 8, 65, 66, 67, 68, 69, 26, 70, 9, 71, 72, 73, 74, 75, 76, 27, 77, 10, 78, 79, 80, 81, 11, 82, 12, 13, 1, 83, 55, 56, 57 }
  uselistorder i32 96, { 1, 0, 4, 5, 2, 3 }
}

define i32 @function_14d54(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14d54:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14d54 = load i32, i32* @r4, align 4
  store i32 %v3_14d54, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_14d6c = inttoptr i32 %arg2 to i8*
  %v3_14d6c = call i32 @function_13230(i8* %v2_14d6c, i32 0)
  store i32 %v3_14d6c, i32* %r0.global-to-local, align 4
  %v0_14d70 = load i32, i32* %r5.global-to-local, align 4
  %v1_14d70 = inttoptr i32 %v0_14d70 to i32*
  %v2_14d70 = load i32, i32* %v1_14d70, align 4
  store i32 %v2_14d70, i32* %r3.global-to-local, align 4
  %v1_14d74 = add i32 %v0_14d70, 4
  %v2_14d74 = inttoptr i32 %v1_14d74 to i32*
  %v3_14d74 = load i32, i32* %v2_14d74, align 4
  store i32 %v3_14d74, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_14d7c = load i32, i32* %r6.global-to-local, align 4
  %v1_14d7c = inttoptr i32 %v0_14d7c to i32*
  store i32 %v2_14d70, i32* %v1_14d7c, align 4
  %v3_14d7c = add i32 %v0_14d7c, 4
  %v4_14d7c = inttoptr i32 %v3_14d7c to i32*
  %v5_14d7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14d7c, i32* %v4_14d7c, align 4
  %v0_14d80 = load i32, i32* %r2.global-to-local, align 4
  %v1_14d80 = load i32, i32* %r6.global-to-local, align 4
  %v2_14d80 = add i32 %v1_14d80, 12
  %v3_14d80 = inttoptr i32 %v2_14d80 to i32*
  store i32 %v0_14d80, i32* %v3_14d80, align 4
  %v0_14d84 = load i32, i32* %r5.global-to-local, align 4
  %v1_14d84 = add i32 %v0_14d84, 9
  %v2_14d84 = inttoptr i32 %v1_14d84 to i8*
  %v3_14d84 = load i8, i8* %v2_14d84, align 1
  %v4_14d84 = zext i8 %v3_14d84 to i32
  store i32 %v4_14d84, i32* %r2.global-to-local, align 4
  %v1_14d88 = add i32 %v0_14d84, 8
  %v2_14d88 = inttoptr i32 %v1_14d88 to i8*
  %v3_14d88 = load i8, i8* %v2_14d88, align 1
  %v4_14d88 = zext i8 %v3_14d88 to i32
  %v4_14d8c = mul nuw nsw i32 %v4_14d84, 256
  %v5_14d8c = or i32 %v4_14d88, %v4_14d8c
  store i32 %v5_14d8c, i32* %r3.global-to-local, align 4
  %v1_14d90 = load i32, i32* %r6.global-to-local, align 4
  %v2_14d90 = add i32 %v1_14d90, 16
  %v3_14d90 = inttoptr i32 %v2_14d90 to i32*
  store i32 %v5_14d8c, i32* %v3_14d90, align 4
  %v0_14d94 = load i32, i32* %r5.global-to-local, align 4
  %v1_14d94 = add i32 %v0_14d94, 11
  %v2_14d94 = inttoptr i32 %v1_14d94 to i8*
  %v3_14d94 = load i8, i8* %v2_14d94, align 1
  %v4_14d94 = zext i8 %v3_14d94 to i32
  store i32 %v4_14d94, i32* %r2.global-to-local, align 4
  %v1_14d98 = add i32 %v0_14d94, 10
  %v2_14d98 = inttoptr i32 %v1_14d98 to i8*
  %v3_14d98 = load i8, i8* %v2_14d98, align 1
  %v4_14d98 = zext i8 %v3_14d98 to i32
  %v4_14d9c = mul nuw nsw i32 %v4_14d94, 256
  %v5_14d9c = or i32 %v4_14d98, %v4_14d9c
  store i32 %v5_14d9c, i32* %r3.global-to-local, align 4
  %v1_14da0 = load i32, i32* %r6.global-to-local, align 4
  %v2_14da0 = add i32 %v1_14da0, 20
  %v3_14da0 = inttoptr i32 %v2_14da0 to i32*
  store i32 %v5_14d9c, i32* %v3_14da0, align 4
  %v0_14da4 = load i32, i32* %r5.global-to-local, align 4
  %v1_14da4 = add i32 %v0_14da4, 13
  %v2_14da4 = inttoptr i32 %v1_14da4 to i8*
  %v3_14da4 = load i8, i8* %v2_14da4, align 1
  %v4_14da4 = zext i8 %v3_14da4 to i32
  store i32 %v4_14da4, i32* %r2.global-to-local, align 4
  %v1_14da8 = add i32 %v0_14da4, 12
  %v2_14da8 = inttoptr i32 %v1_14da8 to i8*
  %v3_14da8 = load i8, i8* %v2_14da8, align 1
  %v4_14da8 = zext i8 %v3_14da8 to i32
  %v4_14dac = mul nuw nsw i32 %v4_14da4, 256
  %v5_14dac = or i32 %v4_14da8, %v4_14dac
  store i32 %v5_14dac, i32* %r3.global-to-local, align 4
  %v1_14db0 = load i32, i32* %r6.global-to-local, align 4
  %v2_14db0 = add i32 %v1_14db0, 24
  %v3_14db0 = inttoptr i32 %v2_14db0 to i32*
  store i32 %v5_14dac, i32* %v3_14db0, align 4
  %v0_14db4 = load i32, i32* %r5.global-to-local, align 4
  %v1_14db4 = add i32 %v0_14db4, 20
  %v2_14db4 = inttoptr i32 %v1_14db4 to i32*
  %v3_14db4 = load i32, i32* %v2_14db4, align 4
  store i32 %v3_14db4, i32* %r3.global-to-local, align 4
  %v1_14db8 = add i32 %v0_14db4, 14
  %v2_14db8 = inttoptr i32 %v1_14db8 to i8*
  %v3_14db8 = load i8, i8* %v2_14db8, align 1
  %v4_14db8 = zext i8 %v3_14db8 to i32
  store i32 %v4_14db8, i32* %r0.global-to-local, align 4
  %v1_14dbc = add i32 %v0_14db4, 15
  %v2_14dbc = inttoptr i32 %v1_14dbc to i8*
  %v3_14dbc = load i8, i8* %v2_14dbc, align 1
  %v4_14dbc = zext i8 %v3_14dbc to i32
  store i32 %v4_14dbc, i32* %ip.global-to-local, align 4
  %v1_14dc0 = add i32 %v0_14db4, 16
  %v2_14dc0 = inttoptr i32 %v1_14dc0 to i32*
  %v3_14dc0 = load i32, i32* %v2_14dc0, align 4
  store i32 %v3_14dc0, i32* %r1.global-to-local, align 4
  %v1_14dc4 = load i32, i32* %r6.global-to-local, align 4
  %v2_14dc4 = add i32 %v1_14dc4, 44
  %v3_14dc4 = inttoptr i32 %v2_14dc4 to i32*
  store i32 %v3_14db4, i32* %v3_14dc4, align 4
  %v0_14dc8 = load i32, i32* %r5.global-to-local, align 4
  %v1_14dc8 = add i32 %v0_14dc8, 24
  %v2_14dc8 = inttoptr i32 %v1_14dc8 to i32*
  %v3_14dc8 = load i32, i32* %v2_14dc8, align 4
  store i32 %v3_14dc8, i32* %r3.global-to-local, align 4
  %v1_14dcc = load i32, i32* %r6.global-to-local, align 4
  %v2_14dcc = add i32 %v1_14dcc, 48
  %v3_14dcc = inttoptr i32 %v2_14dcc to i32*
  store i32 %v3_14dc8, i32* %v3_14dcc, align 4
  %v0_14dd0 = load i32, i32* %r5.global-to-local, align 4
  %v1_14dd0 = add i32 %v0_14dd0, 28
  %v2_14dd0 = inttoptr i32 %v1_14dd0 to i32*
  %v3_14dd0 = load i32, i32* %v2_14dd0, align 4
  store i32 %v3_14dd0, i32* %r3.global-to-local, align 4
  %v1_14dd4 = load i32, i32* %r6.global-to-local, align 4
  %v2_14dd4 = add i32 %v1_14dd4, 52
  %v3_14dd4 = inttoptr i32 %v2_14dd4 to i32*
  store i32 %v3_14dd0, i32* %v3_14dd4, align 4
  %v0_14dd8 = load i32, i32* %r5.global-to-local, align 4
  %v1_14dd8 = add i32 %v0_14dd8, 32
  %v2_14dd8 = inttoptr i32 %v1_14dd8 to i32*
  %v3_14dd8 = load i32, i32* %v2_14dd8, align 4
  store i32 %v3_14dd8, i32* %r3.global-to-local, align 4
  %v1_14ddc = load i32, i32* %r6.global-to-local, align 4
  %v2_14ddc = add i32 %v1_14ddc, 56
  %v3_14ddc = inttoptr i32 %v2_14ddc to i32*
  store i32 %v3_14dd8, i32* %v3_14ddc, align 4
  %v0_14de0 = load i32, i32* %r5.global-to-local, align 4
  %v1_14de0 = add i32 %v0_14de0, 40
  %v2_14de0 = inttoptr i32 %v1_14de0 to i32*
  %v3_14de0 = load i32, i32* %v2_14de0, align 4
  store i32 %v3_14de0, i32* %r3.global-to-local, align 4
  %v1_14de4 = load i32, i32* %r6.global-to-local, align 4
  %v2_14de4 = add i32 %v1_14de4, 64
  %v3_14de4 = inttoptr i32 %v2_14de4 to i32*
  store i32 %v3_14de0, i32* %v3_14de4, align 4
  %v0_14de8 = load i32, i32* %r5.global-to-local, align 4
  %v1_14de8 = add i32 %v0_14de8, 48
  %v2_14de8 = inttoptr i32 %v1_14de8 to i32*
  %v3_14de8 = load i32, i32* %v2_14de8, align 4
  store i32 %v3_14de8, i32* %r3.global-to-local, align 4
  %v1_14dec = load i32, i32* %r6.global-to-local, align 4
  %v2_14dec = add i32 %v1_14dec, 72
  %v3_14dec = inttoptr i32 %v2_14dec to i32*
  store i32 %v3_14de8, i32* %v3_14dec, align 4
  %v0_14df0 = load i32, i32* %r5.global-to-local, align 4
  %v1_14df0 = add i32 %v0_14df0, 36
  %v2_14df0 = inttoptr i32 %v1_14df0 to i32*
  %v3_14df0 = load i32, i32* %v2_14df0, align 4
  store i32 %v3_14df0, i32* %r3.global-to-local, align 4
  %v1_14df4 = load i32, i32* %r6.global-to-local, align 4
  %v2_14df4 = add i32 %v1_14df4, 60
  %v3_14df4 = inttoptr i32 %v2_14df4 to i32*
  store i32 %v3_14df0, i32* %v3_14df4, align 4
  %v0_14df8 = load i32, i32* %r5.global-to-local, align 4
  %v1_14df8 = add i32 %v0_14df8, 44
  %v2_14df8 = inttoptr i32 %v1_14df8 to i32*
  %v3_14df8 = load i32, i32* %v2_14df8, align 4
  store i32 %v3_14df8, i32* %r3.global-to-local, align 4
  %v0_14dfc = load i32, i32* %r0.global-to-local, align 4
  %v1_14dfc = load i32, i32* %ip.global-to-local, align 4
  %v4_14dfc = mul i32 %v1_14dfc, 256
  %v5_14dfc = or i32 %v4_14dfc, %v0_14dfc
  store i32 %v5_14dfc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_14e04 = load i32, i32* %r6.global-to-local, align 4
  %v2_14e04 = add i32 %v1_14e04, 28
  %v3_14e04 = inttoptr i32 %v2_14e04 to i32*
  store i32 %v5_14dfc, i32* %v3_14e04, align 4
  %v0_14e08 = load i32, i32* %r1.global-to-local, align 4
  %v1_14e08 = load i32, i32* %r6.global-to-local, align 4
  %v2_14e08 = add i32 %v1_14e08, 32
  %v3_14e08 = inttoptr i32 %v2_14e08 to i32*
  store i32 %v0_14e08, i32* %v3_14e08, align 4
  %v0_14e0c = load i32, i32* %r2.global-to-local, align 4
  %v1_14e0c = load i32, i32* %r6.global-to-local, align 4
  %v2_14e0c = add i32 %v1_14e0c, 36
  %v3_14e0c = inttoptr i32 %v2_14e0c to i32*
  store i32 %v0_14e0c, i32* %v3_14e0c, align 4
  %v0_14e10 = load i32, i32* %r3.global-to-local, align 4
  %v1_14e10 = load i32, i32* %r6.global-to-local, align 4
  %v2_14e10 = add i32 %v1_14e10, 68
  %v3_14e10 = inttoptr i32 %v2_14e10 to i32*
  store i32 %v0_14e10, i32* %v3_14e10, align 4
  %v0_14e14 = load i32, i32* %r5.global-to-local, align 4
  %v1_14e14 = add i32 %v0_14e14, 52
  %v2_14e14 = inttoptr i32 %v1_14e14 to i32*
  %v3_14e14 = load i32, i32* %v2_14e14, align 4
  store i32 %v3_14e14, i32* %r3.global-to-local, align 4
  %v1_14e18 = load i32, i32* %r6.global-to-local, align 4
  %v2_14e18 = add i32 %v1_14e18, 76
  %v3_14e18 = inttoptr i32 %v2_14e18 to i32*
  store i32 %v3_14e14, i32* %v3_14e18, align 4
  %v2_14e1c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14e1c, i32* %r4.global-to-local, align 4
  ret i32 %v5_14dfc

; uselistorder directives
  uselistorder i32 %v0_14db4, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32 76, { 3, 0, 1, 2 }
  uselistorder i32 68, { 3, 0, 1, 2 }
  uselistorder i32 60, { 5, 3, 4, 1, 2, 0, 6 }
  uselistorder i32 72, { 4, 1, 2, 3, 0 }
  uselistorder i32 64, { 26, 21, 22, 10, 18, 58, 0, 8, 7, 6, 9, 5, 4, 3, 2, 1, 23, 24, 25, 27, 28, 19, 29, 30, 31, 11, 32, 33, 34, 12, 35, 36, 37, 13, 38, 39, 40, 20, 41, 42, 43, 14, 44, 45, 46, 47, 48, 15, 49, 50, 51, 52, 53, 16, 54, 55, 56, 17, 57 }
  uselistorder i32 56, { 5, 1, 2, 0, 3, 4, 6 }
  uselistorder i32 52, { 4, 5, 0, 1, 2, 3, 6, 7, 8 }
  uselistorder i32 15, { 19, 14, 13, 15, 16, 2, 17, 3, 18, 4, 5, 6, 7, 8, 9, 10, 11, 20, 21, 12, 22, 23, 24, 25, 0, 26, 27, 28, 29, 1, 30 }
  uselistorder i32 14, { 28, 21, 40, 3, 22, 0, 23, 24, 19, 20, 4, 25, 5, 26, 6, 27, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 29, 30, 18, 31, 32, 33, 34, 1, 35, 36, 37, 38, 2, 39 }
  uselistorder i32 13, { 35, 27, 24, 28, 29, 30, 31, 25, 32, 26, 4, 33, 5, 34, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 15, 16, 17, 18, 19, 20, 21, 36, 37, 38, 39, 40, 22, 41, 42, 43, 44, 45, 46, 47, 48, 23, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 2, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 3, 77, 78 }
  uselistorder i32 9, { 43, 44, 45, 7, 4, 46, 8, 5, 12, 26, 13, 27, 14, 28, 31, 10, 30, 22, 11, 29, 9, 2, 32, 23, 24, 34, 35, 36, 25, 33, 15, 37, 16, 38, 39, 17, 40, 18, 41, 19, 42, 0, 20, 1, 59, 47, 48, 49, 50, 51, 52, 6, 53, 54, 55, 56, 57, 58, 60, 61, 3, 62, 21 }
  uselistorder i32 (i8*, i32)* @function_13230, { 1, 0, 7, 6, 5, 2, 3, 4 }
  uselistorder i32 88, { 4, 1, 2, 0, 3, 5 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
}

define i32 @function_14e20() local_unnamed_addr {
dec_label_pc_14e20:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_14e20 = load i32, i32* @r1, align 4
  %v1_14e20 = load i32, i32* @r0, align 4
  %v2_14e20 = sub i32 %v0_14e20, %v1_14e20
  %v3_14e20 = icmp ult i32 %v0_14e20, %v1_14e20
  %v4_14e20 = xor i32 %v1_14e20, %v0_14e20
  %v5_14e20 = xor i32 %v2_14e20, %v0_14e20
  %v6_14e20 = and i32 %v5_14e20, %v4_14e20
  %v7_14e20 = icmp slt i32 %v6_14e20, 0
  store i1 %v7_14e20, i1* %cpsr_v.global-to-local, align 1
  %v8_14e20 = icmp slt i32 %v2_14e20, 0
  store i1 %v8_14e20, i1* %cpsr_n.global-to-local, align 1
  %v9_14e20 = icmp eq i32 %v0_14e20, %v1_14e20
  store i1 %v9_14e20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14e20, label %dec_label_pc_1506c, label %dec_label_pc_14e28

dec_label_pc_14e28:                               ; preds = %dec_label_pc_14e20
  br i1 %v9_14e20, label %.thread122, label %bb

.thread122:                                       ; preds = %bb144, %.thread121, %bb141, %dec_label_pc_14e28
  %merge = phi i32 [ %v0_14e20, %dec_label_pc_14e28 ], [ %v2_15100, %bb141 ], [ %v11_1511c, %bb144 ], [ %v7_1511c, %.thread121 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_14e28
  store i32 %v1_14e20, i32* %stack_var_-8, align 4
  %v0_14e30 = load i32, i32* @r2, align 4
  %v2_14e30 = add i32 %v0_14e30, -4
  store i32 %v2_14e30, i32* %r2.global-to-local, align 4
  %v4_14e30 = sub i32 3, %v0_14e30
  %v5_14e30 = and i32 %v4_14e30, %v0_14e30
  %v6_14e30 = icmp slt i32 %v5_14e30, 0
  store i1 %v6_14e30, i1* %cpsr_v.global-to-local, align 1
  %v7_14e30 = icmp slt i32 %v2_14e30, 0
  store i1 %v7_14e30, i1* %cpsr_n.global-to-local, align 1
  %v8_14e30 = icmp eq i32 %v0_14e30, 4
  store i1 %v8_14e30, i1* %cpsr_z.global-to-local, align 1
  %v5_14e34 = icmp slt i32 %v0_14e30, 4
  br i1 %v5_14e34, label %bb131, label %dec_label_pc_14e38

dec_label_pc_14e38:                               ; preds = %bb
  %v1_14e38 = urem i32 %v1_14e20, 4
  store i32 %v1_14e38, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14e38 = icmp eq i32 %v1_14e38, 0
  store i1 %v2_14e38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14e38, label %dec_label_pc_14e40, label %dec_label_pc_14ee4

dec_label_pc_14e40:                               ; preds = %dec_label_pc_14e38
  %v1_14e40 = urem i32 %v0_14e20, 4
  store i32 %v1_14e40, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14e40 = icmp eq i32 %v1_14e40, 0
  store i1 %v2_14e40, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_14e20 to i2
  br i1 %v2_14e40, label %dec_label_pc_14e48, label %dec_label_pc_14f14

dec_label_pc_14e48:                               ; preds = %dec_label_pc_14e40, %dec_label_pc_14f0c
  %v0_14e6092 = phi i32 [ %v1_14e20, %dec_label_pc_14e40 ], [ %v0_14f5c75, %dec_label_pc_14f0c ]
  %v0_14e5c91 = phi i32 [ %v0_14e20, %dec_label_pc_14e40 ], [ %v0_14f0c, %dec_label_pc_14f0c ]
  %v0_14e48 = phi i32 [ %v2_14e30, %dec_label_pc_14e40 ], [ %v2_14f04, %dec_label_pc_14f0c ]
  %v2_14e48 = add i32 %v0_14e48, -8
  store i32 %v2_14e48, i32* %r2.global-to-local, align 4
  %v4_14e48 = sub i32 7, %v0_14e48
  %v5_14e48 = and i32 %v4_14e48, %v0_14e48
  %v6_14e48 = icmp slt i32 %v5_14e48, 0
  store i1 %v6_14e48, i1* %cpsr_v.global-to-local, align 1
  %v7_14e48 = icmp slt i32 %v2_14e48, 0
  store i1 %v7_14e48, i1* %cpsr_n.global-to-local, align 1
  %v8_14e48 = icmp eq i32 %v0_14e48, 8
  store i1 %v8_14e48, i1* %cpsr_z.global-to-local, align 1
  %v5_14e4c = icmp slt i32 %v0_14e48, 8
  br i1 %v5_14e4c, label %dec_label_pc_14e9c, label %dec_label_pc_14e50

dec_label_pc_14e50:                               ; preds = %dec_label_pc_14e48
  %v2_14e50 = add i32 %v0_14e48, -28
  store i32 %v2_14e50, i32* %r2.global-to-local, align 4
  %v4_14e50 = sub i32 27, %v0_14e48
  %v5_14e50 = and i32 %v4_14e50, %v2_14e48
  %v6_14e50 = icmp slt i32 %v5_14e50, 0
  store i1 %v6_14e50, i1* %cpsr_v.global-to-local, align 1
  %v7_14e50 = icmp slt i32 %v2_14e50, 0
  store i1 %v7_14e50, i1* %cpsr_n.global-to-local, align 1
  %v8_14e50 = icmp eq i32 %v2_14e48, 20
  store i1 %v8_14e50, i1* %cpsr_z.global-to-local, align 1
  %v5_14e54 = icmp slt i32 %v2_14e48, 20
  br i1 %v5_14e54, label %dec_label_pc_14e88, label %dec_label_pc_14e58

dec_label_pc_14e58:                               ; preds = %dec_label_pc_14e50
  %v0_14e58 = load i32, i32* @r4, align 4
  store i32 %v0_14e58, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14e5c

dec_label_pc_14e5c:                               ; preds = %dec_label_pc_14e5c.dec_label_pc_14e5c_crit_edge, %dec_label_pc_14e58
  %v0_14e60 = phi i32 [ %v12_14e68, %dec_label_pc_14e5c.dec_label_pc_14e5c_crit_edge ], [ %v0_14e6092, %dec_label_pc_14e58 ]
  %v0_14e5c = phi i32 [ %v0_14e5c.pre, %dec_label_pc_14e5c.dec_label_pc_14e5c_crit_edge ], [ %v0_14e5c91, %dec_label_pc_14e58 ]
  %v1_14e5c = inttoptr i32 %v0_14e5c to i32*
  %v2_14e5c = load i32, i32* %v1_14e5c, align 4
  store i32 %v2_14e5c, i32* %r3.global-to-local, align 4
  %v3_14e5c = add i32 %v0_14e5c, 4
  %v4_14e5c = inttoptr i32 %v3_14e5c to i32*
  %v5_14e5c = load i32, i32* %v4_14e5c, align 4
  store i32 %v5_14e5c, i32* %r4.global-to-local, align 4
  %v6_14e5c = add i32 %v0_14e5c, 8
  %v7_14e5c = inttoptr i32 %v6_14e5c to i32*
  %v8_14e5c = load i32, i32* %v7_14e5c, align 4
  store i32 %v8_14e5c, i32* %ip.global-to-local, align 4
  %v9_14e5c = add i32 %v0_14e5c, 12
  %v10_14e5c = inttoptr i32 %v9_14e5c to i32*
  %v11_14e5c = load i32, i32* %v10_14e5c, align 4
  store i32 %v11_14e5c, i32* %lr.global-to-local, align 4
  %v12_14e5c = add i32 %v0_14e5c, 16
  store i32 %v12_14e5c, i32* %r1.global-to-local, align 4
  %v1_14e60 = inttoptr i32 %v0_14e60 to i32*
  store i32 %v2_14e5c, i32* %v1_14e60, align 4
  %v3_14e60 = add i32 %v0_14e60, 4
  %v4_14e60 = inttoptr i32 %v3_14e60 to i32*
  %v5_14e60 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14e60, i32* %v4_14e60, align 4
  %v6_14e60 = add i32 %v0_14e60, 8
  %v7_14e60 = inttoptr i32 %v6_14e60 to i32*
  %v8_14e60 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_14e60, i32* %v7_14e60, align 4
  %v9_14e60 = add i32 %v0_14e60, 12
  %v10_14e60 = inttoptr i32 %v9_14e60 to i32*
  %v11_14e60 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_14e60, i32* %v10_14e60, align 4
  %v12_14e60 = add i32 %v0_14e60, 16
  store i32 %v12_14e60, i32* %r0.global-to-local, align 4
  %v0_14e64 = load i32, i32* %r1.global-to-local, align 4
  %v1_14e64 = inttoptr i32 %v0_14e64 to i32*
  %v2_14e64 = load i32, i32* %v1_14e64, align 4
  store i32 %v2_14e64, i32* %r3.global-to-local, align 4
  %v3_14e64 = add i32 %v0_14e64, 4
  %v4_14e64 = inttoptr i32 %v3_14e64 to i32*
  %v5_14e64 = load i32, i32* %v4_14e64, align 4
  store i32 %v5_14e64, i32* %r4.global-to-local, align 4
  %v6_14e64 = add i32 %v0_14e64, 8
  %v7_14e64 = inttoptr i32 %v6_14e64 to i32*
  %v8_14e64 = load i32, i32* %v7_14e64, align 4
  store i32 %v8_14e64, i32* @ip, align 4
  %v9_14e64 = add i32 %v0_14e64, 12
  %v10_14e64 = inttoptr i32 %v9_14e64 to i32*
  %v11_14e64 = load i32, i32* %v10_14e64, align 4
  store i32 %v11_14e64, i32* @lr, align 4
  %v12_14e64 = add i32 %v0_14e64, 16
  store i32 %v12_14e64, i32* @r1, align 4
  %v1_14e68 = inttoptr i32 %v12_14e60 to i32*
  store i32 %v2_14e64, i32* %v1_14e68, align 4
  %v3_14e68 = add i32 %v0_14e60, 20
  %v4_14e68 = inttoptr i32 %v3_14e68 to i32*
  %v5_14e68 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14e68, i32* %v4_14e68, align 4
  %v6_14e68 = add i32 %v0_14e60, 24
  %v7_14e68 = inttoptr i32 %v6_14e68 to i32*
  %v8_14e68 = load i32, i32* @ip, align 4
  store i32 %v8_14e68, i32* %v7_14e68, align 4
  %v9_14e68 = add i32 %v0_14e60, 28
  %v10_14e68 = inttoptr i32 %v9_14e68 to i32*
  %v11_14e68 = load i32, i32* @lr, align 4
  store i32 %v11_14e68, i32* %v10_14e68, align 4
  %v12_14e68 = add i32 %v0_14e60, 32
  store i32 %v12_14e68, i32* @r0, align 4
  %v0_14e6c = load i32, i32* %r2.global-to-local, align 4
  %v2_14e6c = add i32 %v0_14e6c, -32
  store i32 %v2_14e6c, i32* %r2.global-to-local, align 4
  %v6_14e70 = icmp slt i32 %v0_14e6c, 32
  br i1 %v6_14e70, label %dec_label_pc_14e74, label %dec_label_pc_14e5c.dec_label_pc_14e5c_crit_edge

dec_label_pc_14e5c.dec_label_pc_14e5c_crit_edge:  ; preds = %dec_label_pc_14e5c
  %v0_14e5c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14e5c

dec_label_pc_14e74:                               ; preds = %dec_label_pc_14e5c
  %v4_14e74 = add i32 %v0_14e6c, -16
  %v6_14e74 = add i32 %v0_14e6c, 2147483616
  %v7_14e74 = and i32 %v4_14e74, %v6_14e74
  %v8_14e74 = icmp slt i32 %v7_14e74, 0
  store i1 %v8_14e74, i1* %cpsr_v.global-to-local, align 1
  %v9_14e74 = icmp slt i32 %v4_14e74, 0
  store i1 %v9_14e74, i1* %cpsr_n.global-to-local, align 1
  %v10_14e74 = icmp eq i32 %v4_14e74, 0
  store i1 %v10_14e74, i1* %cpsr_z.global-to-local, align 1
  %v5_14e78 = icmp slt i32 %v2_14e6c, -16
  br i1 %v5_14e78, label %.thread1, label %bb128

bb128:                                            ; preds = %dec_label_pc_14e74
  %v6_14e78 = load i32, i32* @r1, align 4
  %v7_14e78 = inttoptr i32 %v6_14e78 to i32*
  %v8_14e78 = load i32, i32* %v7_14e78, align 4
  store i32 %v8_14e78, i32* %r3.global-to-local, align 4
  %v9_14e78 = add i32 %v6_14e78, 4
  %v10_14e78 = inttoptr i32 %v9_14e78 to i32*
  %v11_14e78 = load i32, i32* %v10_14e78, align 4
  store i32 %v11_14e78, i32* %r4.global-to-local, align 4
  %v12_14e78 = add i32 %v6_14e78, 8
  %v13_14e78 = inttoptr i32 %v12_14e78 to i32*
  %v14_14e78 = load i32, i32* %v13_14e78, align 4
  store i32 %v14_14e78, i32* @ip, align 4
  %v15_14e78 = add i32 %v6_14e78, 12
  %v16_14e78 = inttoptr i32 %v15_14e78 to i32*
  %v17_14e78 = load i32, i32* %v16_14e78, align 4
  store i32 %v17_14e78, i32* @lr, align 4
  %v18_14e78 = add i32 %v6_14e78, 16
  store i32 %v18_14e78, i32* @r1, align 4
  %v7_14e7c = inttoptr i32 %v12_14e68 to i32*
  store i32 %v8_14e78, i32* %v7_14e7c, align 4
  %v9_14e7c = add i32 %v0_14e60, 36
  %v10_14e7c = inttoptr i32 %v9_14e7c to i32*
  %v11_14e7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_14e7c, i32* %v10_14e7c, align 4
  %v12_14e7c = add i32 %v0_14e60, 40
  %v13_14e7c = inttoptr i32 %v12_14e7c to i32*
  %v14_14e7c = load i32, i32* @ip, align 4
  store i32 %v14_14e7c, i32* %v13_14e7c, align 4
  %v15_14e7c = add i32 %v0_14e60, 44
  %v16_14e7c = inttoptr i32 %v15_14e7c to i32*
  %v17_14e7c = load i32, i32* @lr, align 4
  store i32 %v17_14e7c, i32* %v16_14e7c, align 4
  %v18_14e7c = add i32 %v0_14e60, 48
  store i32 %v18_14e7c, i32* @r0, align 4
  %v6_14e80 = load i32, i32* %r2.global-to-local, align 4
  %v7_14e80 = add i32 %v6_14e80, -16
  store i32 %v7_14e80, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14e74, %bb128
  %v3_14e90101 = phi i32 [ %v12_14e68, %dec_label_pc_14e74 ], [ %v18_14e7c, %bb128 ]
  %v0_14e8895 = phi i32 [ %v2_14e6c, %dec_label_pc_14e74 ], [ %v7_14e80, %bb128 ]
  %v2_14e84 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14e84, i32* @r4, align 4
  br label %dec_label_pc_14e88

dec_label_pc_14e88:                               ; preds = %dec_label_pc_14e50, %.thread1
  %v3_14e90100 = phi i32 [ %v0_14e6092, %dec_label_pc_14e50 ], [ %v3_14e90101, %.thread1 ]
  %v0_14e88 = phi i32 [ %v2_14e50, %dec_label_pc_14e50 ], [ %v0_14e8895, %.thread1 ]
  %v1_14e88 = add i32 %v0_14e88, 20
  store i32 %v1_14e88, i32* %r2.global-to-local, align 4
  %v3_14e88 = sub i32 0, %v0_14e88
  %v4_14e88 = and i32 %v1_14e88, %v3_14e88
  %v5_14e88 = icmp slt i32 %v4_14e88, 0
  store i1 %v5_14e88, i1* %cpsr_v.global-to-local, align 1
  %v6_14e88 = icmp slt i32 %v1_14e88, 0
  store i1 %v6_14e88, i1* %cpsr_n.global-to-local, align 1
  %v7_14e88 = icmp eq i32 %v1_14e88, 0
  store i1 %v7_14e88, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14e8c

dec_label_pc_14e8c:                               ; preds = %.thread117, %dec_label_pc_14e88
  %v0_14e9c.pre147 = phi i32 [ %v0_14e9c.pre, %.thread117 ], [ %v1_14e88, %dec_label_pc_14e88 ]
  %v3_14e90 = phi i32 [ %v3_14e9098118, %.thread117 ], [ %v3_14e90100, %dec_label_pc_14e88 ]
  %v1_14e94 = phi i1 [ %v1_14e98, %.thread117 ], [ %v5_14e88, %dec_label_pc_14e88 ]
  %v0_14e94 = phi i1 [ %v0_14e98, %.thread117 ], [ %v6_14e88, %dec_label_pc_14e88 ]
  %v2_14e8c = xor i1 %v1_14e94, %v0_14e94
  br i1 %v2_14e8c, label %.thread117, label %bb129

bb129:                                            ; preds = %dec_label_pc_14e8c
  %v3_14e8c = load i32, i32* @r1, align 4
  %v4_14e8c = inttoptr i32 %v3_14e8c to i32*
  %v5_14e8c = load i32, i32* %v4_14e8c, align 4
  store i32 %v5_14e8c, i32* %r3.global-to-local, align 4
  %v6_14e8c = add i32 %v3_14e8c, 4
  %v7_14e8c = inttoptr i32 %v6_14e8c to i32*
  %v8_14e8c = load i32, i32* %v7_14e8c, align 4
  store i32 %v8_14e8c, i32* @ip, align 4
  %v9_14e8c = add i32 %v3_14e8c, 8
  %v10_14e8c = inttoptr i32 %v9_14e8c to i32*
  %v11_14e8c = load i32, i32* %v10_14e8c, align 4
  store i32 %v11_14e8c, i32* @lr, align 4
  %v12_14e8c = add i32 %v3_14e8c, 12
  store i32 %v12_14e8c, i32* @r1, align 4
  %v4_14e90 = inttoptr i32 %v3_14e90 to i32*
  store i32 %v5_14e8c, i32* %v4_14e90, align 4
  %v6_14e90 = add i32 %v3_14e90, 4
  %v7_14e90 = inttoptr i32 %v6_14e90 to i32*
  %v8_14e90 = load i32, i32* @ip, align 4
  store i32 %v8_14e90, i32* %v7_14e90, align 4
  %v9_14e90 = add i32 %v3_14e90, 8
  %v10_14e90 = inttoptr i32 %v9_14e90 to i32*
  %v11_14e90 = load i32, i32* @lr, align 4
  store i32 %v11_14e90, i32* %v10_14e90, align 4
  %v12_14e90 = add i32 %v3_14e90, 12
  store i32 %v12_14e90, i32* @r0, align 4
  %v3_14e94 = load i32, i32* %r2.global-to-local, align 4
  %v4_14e94 = add i32 %v3_14e94, -12
  store i32 %v4_14e94, i32* %r2.global-to-local, align 4
  %v6_14e94 = sub i32 11, %v3_14e94
  %v7_14e94 = and i32 %v6_14e94, %v3_14e94
  %v8_14e94 = icmp slt i32 %v7_14e94, 0
  store i1 %v8_14e94, i1* %cpsr_v.global-to-local, align 1
  %v9_14e94 = icmp slt i32 %v4_14e94, 0
  store i1 %v9_14e94, i1* %cpsr_n.global-to-local, align 1
  %v10_14e94 = icmp eq i32 %v3_14e94, 12
  store i1 %v10_14e94, i1* %cpsr_z.global-to-local, align 1
  br label %.thread117

.thread117:                                       ; preds = %dec_label_pc_14e8c, %bb129
  %v0_14e9c.pre = phi i32 [ %v4_14e94, %bb129 ], [ %v0_14e9c.pre147, %dec_label_pc_14e8c ]
  %v3_14e9098118 = phi i32 [ %v12_14e90, %bb129 ], [ %v3_14e90, %dec_label_pc_14e8c ]
  %v1_14e98 = phi i1 [ %v8_14e94, %bb129 ], [ %v1_14e94, %dec_label_pc_14e8c ]
  %v0_14e98 = phi i1 [ %v9_14e94, %bb129 ], [ %v0_14e94, %dec_label_pc_14e8c ]
  %v2_14e98 = xor i1 %v1_14e98, %v0_14e98
  br i1 %v2_14e98, label %dec_label_pc_14e9c, label %dec_label_pc_14e8c

dec_label_pc_14e9c:                               ; preds = %.thread117, %dec_label_pc_14e48
  %v7_14eac = phi i32 [ %v0_14e6092, %dec_label_pc_14e48 ], [ %v3_14e9098118, %.thread117 ]
  %v0_14e9c = phi i32 [ %v2_14e48, %dec_label_pc_14e48 ], [ %v0_14e9c.pre, %.thread117 ]
  %v2_14e9c = add i32 %v0_14e9c, 8
  store i32 %v2_14e9c, i32* %r2.global-to-local, align 4
  %v4_14e9c = sub i32 0, %v0_14e9c
  %v5_14e9c = and i32 %v2_14e9c, %v4_14e9c
  %v6_14e9c = icmp slt i32 %v5_14e9c, 0
  store i1 %v6_14e9c, i1* %cpsr_v.global-to-local, align 1
  %v7_14e9c = icmp slt i32 %v2_14e9c, 0
  store i1 %v7_14e9c, i1* %cpsr_n.global-to-local, align 1
  %v8_14e9c = icmp eq i32 %v2_14e9c, 0
  store i1 %v8_14e9c, i1* %cpsr_z.global-to-local, align 1
  %v5_14ea0 = icmp slt i32 %v0_14e9c, -8
  br i1 %v5_14ea0, label %bb131, label %dec_label_pc_14ea4

dec_label_pc_14ea4:                               ; preds = %dec_label_pc_14e9c
  %v6_14ea4 = add i32 %v0_14e9c, 4
  store i32 %v6_14ea4, i32* %r2.global-to-local, align 4
  %v8_14ea4 = sub i32 -5, %v0_14e9c
  %v9_14ea4 = and i32 %v8_14ea4, %v2_14e9c
  %v10_14ea4 = icmp slt i32 %v9_14ea4, 0
  store i1 %v10_14ea4, i1* %cpsr_v.global-to-local, align 1
  %v11_14ea4 = icmp slt i32 %v6_14ea4, 0
  store i1 %v11_14ea4, i1* %cpsr_n.global-to-local, align 1
  %v12_14ea4 = icmp eq i32 %v2_14e9c, 4
  store i1 %v12_14ea4, i1* %cpsr_z.global-to-local, align 1
  %v5_14ea8 = icmp slt i32 %v2_14e9c, 4
  %v6_14ea8 = load i32, i32* @r1, align 4
  %v7_14ea8 = inttoptr i32 %v6_14ea8 to i32*
  %v8_14ea8 = load i32, i32* %v7_14ea8, align 4
  store i32 %v8_14ea8, i32* %r3.global-to-local, align 4
  %v10_14ea8 = add i32 %v6_14ea8, 4
  br i1 %v5_14ea8, label %.thread5, label %bb130

.thread5:                                         ; preds = %dec_label_pc_14ea4
  store i32 %v10_14ea8, i32* @r1, align 4
  %v8_14eac = inttoptr i32 %v7_14eac to i32*
  store i32 %v8_14ea8, i32* %v8_14eac, align 4
  %v9_14eac = load i32, i32* @r0, align 4
  %v10_14eac = add i32 %v9_14eac, 4
  store i32 %v10_14eac, i32* @r0, align 4
  %v0_14ebc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb131

bb130:                                            ; preds = %dec_label_pc_14ea4
  %v10_14eb0 = inttoptr i32 %v10_14ea8 to i32*
  %v11_14eb0 = load i32, i32* %v10_14eb0, align 4
  store i32 %v11_14eb0, i32* @ip, align 4
  %v12_14eb0 = add i32 %v6_14ea8, 8
  store i32 %v12_14eb0, i32* @r1, align 4
  %v7_14eb4 = inttoptr i32 %v7_14eac to i32*
  store i32 %v8_14ea8, i32* %v7_14eb4, align 4
  %v9_14eb4 = add i32 %v7_14eac, 4
  %v10_14eb4 = inttoptr i32 %v9_14eb4 to i32*
  %v11_14eb4 = load i32, i32* @ip, align 4
  store i32 %v11_14eb4, i32* %v10_14eb4, align 4
  %v12_14eb4 = add i32 %v7_14eac, 8
  store i32 %v12_14eb4, i32* @r0, align 4
  %v6_14eb8 = load i32, i32* %r2.global-to-local, align 4
  %v7_14eb8 = add i32 %v6_14eb8, -4
  store i32 %v7_14eb8, i32* %r2.global-to-local, align 4
  br label %bb131

bb131:                                            ; preds = %.thread5, %.thread11, %dec_label_pc_14e9c, %bb, %dec_label_pc_15064, %dec_label_pc_14ff8, %dec_label_pc_14f8c, %bb130
  %v2_14ecc = phi i32 [ %v10_14eac, %.thread5 ], [ %v0_14f5c75, %.thread11 ], [ %v7_14eac, %dec_label_pc_14e9c ], [ %v1_14e20, %bb ], [ %v2_14ecc113, %dec_label_pc_15064 ], [ %v2_14ecc112, %dec_label_pc_14ff8 ], [ %v2_14ecc111, %dec_label_pc_14f8c ], [ %v12_14eb4, %bb130 ]
  %v0_14ebc = phi i32 [ %v0_14ebc.pre, %.thread5 ], [ %v2_14f04, %.thread11 ], [ %v2_14e9c, %dec_label_pc_14e9c ], [ %v2_14e30, %bb ], [ %v0_14ebc109, %dec_label_pc_15064 ], [ %v0_14ebc108, %dec_label_pc_14ff8 ], [ %v0_14ebc107, %dec_label_pc_14f8c ], [ %v7_14eb8, %bb130 ]
  %v1_14ebc = add i32 %v0_14ebc, 4
  store i32 %v1_14ebc, i32* %r2.global-to-local, align 4
  %v3_14ebc = sub i32 0, %v0_14ebc
  %v4_14ebc = and i32 %v1_14ebc, %v3_14ebc
  %v5_14ebc = icmp slt i32 %v4_14ebc, 0
  store i1 %v5_14ebc, i1* %cpsr_v.global-to-local, align 1
  %v6_14ebc = icmp slt i32 %v1_14ebc, 0
  store i1 %v6_14ebc, i1* %cpsr_n.global-to-local, align 1
  %v7_14ebc = icmp eq i32 %v1_14ebc, 0
  store i1 %v7_14ebc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14ebc, label %bb132, label %bb133

bb132:                                            ; preds = %bb131
  %v3_14ec0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_14ec0, i32* %r0.global-to-local, align 4
  ret i32 %v3_14ec0

bb133:                                            ; preds = %bb131
  %v1_14ec4 = add i32 %v0_14ebc, 2
  %v3_14ec4 = sub i32 -3, %v0_14ebc
  %v4_14ec4 = and i32 %v3_14ec4, %v1_14ebc
  %v5_14ec4 = icmp slt i32 %v4_14ec4, 0
  store i1 %v5_14ec4, i1* %cpsr_v.global-to-local, align 1
  %v6_14ec4 = icmp slt i32 %v1_14ec4, 0
  store i1 %v6_14ec4, i1* %cpsr_n.global-to-local, align 1
  %v7_14ec4 = icmp eq i32 %v1_14ebc, 2
  store i1 %v7_14ec4, i1* %cpsr_z.global-to-local, align 1
  %v0_14ec8 = load i32, i32* @r1, align 4
  %v1_14ec8 = inttoptr i32 %v0_14ec8 to i8*
  %v2_14ec8 = load i8, i8* %v1_14ec8, align 1
  %v3_14ec8 = zext i8 %v2_14ec8 to i32
  store i32 %v3_14ec8, i32* %r3.global-to-local, align 4
  %v5_14ec8 = add i32 %v0_14ec8, 1
  store i32 %v5_14ec8, i32* %r1.global-to-local, align 4
  %v3_14ecc = inttoptr i32 %v2_14ecc to i8*
  store i8 %v2_14ec8, i8* %v3_14ecc, align 1
  %v4_14ecc = load i32, i32* @r0, align 4
  %v5_14ecc = add i32 %v4_14ecc, 1
  store i32 %v5_14ecc, i32* %r0.global-to-local, align 4
  %v0_14ed0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14ed0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_14ed0 = xor i1 %v0_14ed0, %v1_14ed0
  br i1 %v2_14ed0, label %.thread119, label %bb134

bb134:                                            ; preds = %bb133
  %v3_14ed0 = load i32, i32* %r1.global-to-local, align 4
  %v4_14ed0 = inttoptr i32 %v3_14ed0 to i8*
  %v5_14ed0 = load i8, i8* %v4_14ed0, align 1
  %v6_14ed0 = zext i8 %v5_14ed0 to i32
  store i32 %v6_14ed0, i32* %r3.global-to-local, align 4
  %v8_14ed0 = add i32 %v3_14ed0, 1
  store i32 %v8_14ed0, i32* %r1.global-to-local, align 4
  %v6_14ed4 = inttoptr i32 %v5_14ecc to i8*
  store i8 %v5_14ed0, i8* %v6_14ed4, align 1
  %v7_14ed4 = load i32, i32* %r0.global-to-local, align 4
  %v8_14ed4 = add i32 %v7_14ed4, 1
  store i32 %v8_14ed4, i32* %r0.global-to-local, align 4
  %v1_14ed8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14ed8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread119

.thread119:                                       ; preds = %bb133, %bb134
  %v7_14edc = phi i32 [ %v8_14ed4, %bb134 ], [ %v5_14ecc, %bb133 ]
  %v2_14edc = phi i1 [ %v2_14ed8.pre, %bb134 ], [ %v1_14ed0, %bb133 ]
  %v1_14edc = phi i1 [ %v1_14ed8.pre, %bb134 ], [ %v0_14ed0, %bb133 ]
  %v0_14ed8 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_14ed8 = xor i1 %v2_14edc, %v1_14edc
  %v4_14ed8 = or i1 %v0_14ed8, %v3_14ed8
  br i1 %v4_14ed8, label %.thread120, label %bb135

bb135:                                            ; preds = %.thread119
  %v5_14ed8 = load i32, i32* %r1.global-to-local, align 4
  %v6_14ed8 = inttoptr i32 %v5_14ed8 to i8*
  %v7_14ed8 = load i8, i8* %v6_14ed8, align 1
  %v8_14ed8 = zext i8 %v7_14ed8 to i32
  store i32 %v8_14ed8, i32* %r3.global-to-local, align 4
  %v10_14ed8 = add i32 %v5_14ed8, 1
  store i32 %v10_14ed8, i32* %r1.global-to-local, align 4
  %v8_14edc = inttoptr i32 %v7_14edc to i8*
  store i8 %v7_14ed8, i8* %v8_14edc, align 1
  %v9_14edc = load i32, i32* %r0.global-to-local, align 4
  %v10_14edc = add i32 %v9_14edc, 1
  store i32 %v10_14edc, i32* %r0.global-to-local, align 4
  br label %.thread120

.thread120:                                       ; preds = %.thread119, %bb135
  %v2_14ee0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14ee0, i32* %r0.global-to-local, align 4
  ret i32 %v2_14ee0

dec_label_pc_14ee4:                               ; preds = %dec_label_pc_14e38
  %v1_14ee4 = sub nsw i32 4, %v1_14e38
  store i32 %v1_14ee4, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_14ee8 = icmp ult i32 %v1_14ee4, 2
  store i1 %v8_14ee8, i1* %cpsr_n.global-to-local, align 1
  %v9_14ee8 = icmp eq i32 %v1_14ee4, 2
  store i1 %v9_14ee8, i1* %cpsr_z.global-to-local, align 1
  %v1_14eec = inttoptr i32 %v0_14e20 to i8*
  %v2_14eec = load i8, i8* %v1_14eec, align 1
  %v3_14eec = zext i8 %v2_14eec to i32
  store i32 %v3_14eec, i32* %r3.global-to-local, align 4
  %v5_14eec = add i32 %v0_14e20, 1
  store i32 %v5_14eec, i32* @r1, align 4
  %v3_14ef0 = inttoptr i32 %v1_14e20 to i8*
  store i8 %v2_14eec, i8* %v3_14ef0, align 1
  %v4_14ef0 = load i32, i32* @r0, align 4
  %v5_14ef0 = add i32 %v4_14ef0, 1
  store i32 %v5_14ef0, i32* @r0, align 4
  br i1 %v8_14ee8, label %.thread11, label %bb136

bb136:                                            ; preds = %dec_label_pc_14ee4
  %v6_14ef4 = load i32, i32* @r1, align 4
  %v7_14ef4 = inttoptr i32 %v6_14ef4 to i8*
  %v8_14ef4 = load i8, i8* %v7_14ef4, align 1
  %v9_14ef4 = zext i8 %v8_14ef4 to i32
  store i32 %v9_14ef4, i32* %r3.global-to-local, align 4
  %v11_14ef4 = add i32 %v6_14ef4, 1
  store i32 %v11_14ef4, i32* @r1, align 4
  %v9_14ef8 = inttoptr i32 %v5_14ef0 to i8*
  store i8 %v8_14ef4, i8* %v9_14ef8, align 1
  %v10_14ef8 = load i32, i32* @r0, align 4
  %v11_14ef8 = add i32 %v10_14ef8, 1
  store i32 %v11_14ef8, i32* @r0, align 4
  br i1 %v9_14ee8, label %.thread11, label %bb137

bb137:                                            ; preds = %bb136
  %v8_14efc = load i32, i32* @r1, align 4
  %v9_14efc = inttoptr i32 %v8_14efc to i8*
  %v10_14efc = load i8, i8* %v9_14efc, align 1
  %v11_14efc = zext i8 %v10_14efc to i32
  store i32 %v11_14efc, i32* %r3.global-to-local, align 4
  %v13_14efc = add i32 %v8_14efc, 1
  store i32 %v13_14efc, i32* @r1, align 4
  %v11_14f00 = inttoptr i32 %v11_14ef8 to i8*
  store i8 %v10_14efc, i8* %v11_14f00, align 1
  %v12_14f00 = load i32, i32* @r0, align 4
  %v13_14f00 = add i32 %v12_14f00, 1
  store i32 %v13_14f00, i32* @r0, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb136, %dec_label_pc_14ee4, %bb137
  %v0_14f5c75 = phi i32 [ %v11_14ef8, %bb136 ], [ %v5_14ef0, %dec_label_pc_14ee4 ], [ %v13_14f00, %bb137 ]
  %v0_14f04 = load i32, i32* %r2.global-to-local, align 4
  %v1_14f04 = load i32, i32* @ip, align 4
  %v2_14f04 = sub i32 %v0_14f04, %v1_14f04
  store i32 %v2_14f04, i32* %r2.global-to-local, align 4
  %v4_14f04 = xor i32 %v1_14f04, %v0_14f04
  %v5_14f04 = xor i32 %v2_14f04, %v0_14f04
  %v6_14f04 = and i32 %v5_14f04, %v4_14f04
  %v7_14f04 = icmp slt i32 %v6_14f04, 0
  store i1 %v7_14f04, i1* %cpsr_v.global-to-local, align 1
  %v8_14f04 = icmp slt i32 %v2_14f04, 0
  store i1 %v8_14f04, i1* %cpsr_n.global-to-local, align 1
  %v9_14f04 = icmp eq i32 %v0_14f04, %v1_14f04
  store i1 %v9_14f04, i1* %cpsr_z.global-to-local, align 1
  %v5_14f08 = icmp slt i32 %v0_14f04, %v1_14f04
  br i1 %v5_14f08, label %bb131, label %dec_label_pc_14f0c

dec_label_pc_14f0c:                               ; preds = %.thread11
  %v0_14f0c = load i32, i32* @r1, align 4
  %v1_14f0c = urem i32 %v0_14f0c, 4
  store i32 %v1_14f0c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14f0c = icmp eq i32 %v1_14f0c, 0
  store i1 %v2_14f0c, i1* %cpsr_z.global-to-local, align 1
  %extract.t123 = trunc i32 %v0_14f0c to i2
  br i1 %v2_14f0c, label %dec_label_pc_14e48, label %dec_label_pc_14f14

dec_label_pc_14f14:                               ; preds = %dec_label_pc_14e40, %dec_label_pc_14f0c
  %v0_14f5c74 = phi i32 [ %v1_14e20, %dec_label_pc_14e40 ], [ %v0_14f5c75, %dec_label_pc_14f0c ]
  %v0_15008 = phi i32 [ %v2_14e30, %dec_label_pc_14e40 ], [ %v2_14f04, %dec_label_pc_14f0c ]
  %v0_14f1c.off0 = phi i2 [ %extract.t, %dec_label_pc_14e40 ], [ %extract.t123, %dec_label_pc_14f0c ]
  %v0_14f14 = phi i32 [ %v0_14e20, %dec_label_pc_14e40 ], [ %v0_14f0c, %dec_label_pc_14f0c ]
  %v1_14f14 = and i32 %v0_14f14, -4
  store i32 %v1_14f14, i32* %r1.global-to-local, align 4
  %v1_14f18 = inttoptr i32 %v1_14f14 to i32*
  %v2_14f18 = load i32, i32* %v1_14f18, align 4
  store i32 %v2_14f18, i32* @lr, align 4
  %v4_14f18 = add i32 %v1_14f14, 4
  store i32 %v4_14f18, i32* %r1.global-to-local, align 4
  %v2_15000 = add i32 %v0_15008, -12
  %v4_15000 = sub i32 11, %v0_15008
  %v5_15000 = and i32 %v4_15000, %v0_15008
  %v6_15000 = icmp slt i32 %v5_15000, 0
  store i1 %v6_15000, i1* %cpsr_v.global-to-local, align 1
  %v7_15000 = icmp slt i32 %v2_15000, 0
  store i1 %v7_15000, i1* %cpsr_n.global-to-local, align 1
  %v8_15000 = icmp eq i32 %v0_15008, 12
  store i1 %v8_15000, i1* %cpsr_z.global-to-local, align 1
  %v5_15004 = icmp slt i32 %v0_15008, 12
  switch i2 %v0_14f1c.off0, label %dec_label_pc_14f28 [
    i2 -1, label %dec_label_pc_15000
    i2 -2, label %dec_label_pc_14f94
  ]

dec_label_pc_14f28:                               ; preds = %dec_label_pc_14f14
  br i1 %v5_15004, label %dec_label_pc_14f74, label %dec_label_pc_14f30

dec_label_pc_14f30:                               ; preds = %dec_label_pc_14f28
  store i32 %v2_15000, i32* %r2.global-to-local, align 4
  %v3_14f34 = load i32, i32* @r4, align 4
  store i32 %v3_14f34, i32* %stack_var_-16, align 4
  %v6_14f34 = load i32, i32* @r5, align 4
  store i32 %v6_14f34, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14f38

dec_label_pc_14f38:                               ; preds = %dec_label_pc_14f38.dec_label_pc_14f38_crit_edge, %dec_label_pc_14f30
  %v0_14f5c = phi i32 [ %v12_14f5c, %dec_label_pc_14f38.dec_label_pc_14f38_crit_edge ], [ %v0_14f5c74, %dec_label_pc_14f30 ]
  %v0_14f3c = phi i32 [ %v0_14f3c.pre, %dec_label_pc_14f38.dec_label_pc_14f38_crit_edge ], [ %v4_14f18, %dec_label_pc_14f30 ]
  %v0_14f38 = phi i32 [ %v0_14f38.pre, %dec_label_pc_14f38.dec_label_pc_14f38_crit_edge ], [ %v2_14f18, %dec_label_pc_14f30 ]
  %v3_14f38 = udiv i32 %v0_14f38, 256
  store i32 %v3_14f38, i32* %r3.global-to-local, align 4
  %v1_14f3c = inttoptr i32 %v0_14f3c to i32*
  %v2_14f3c = load i32, i32* %v1_14f3c, align 4
  store i32 %v2_14f3c, i32* %r4.global-to-local, align 4
  %v3_14f3c = add i32 %v0_14f3c, 4
  %v4_14f3c = inttoptr i32 %v3_14f3c to i32*
  %v5_14f3c = load i32, i32* %v4_14f3c, align 4
  store i32 %v5_14f3c, i32* %r5.global-to-local, align 4
  %v6_14f3c = add i32 %v0_14f3c, 8
  %v7_14f3c = inttoptr i32 %v6_14f3c to i32*
  %v8_14f3c = load i32, i32* %v7_14f3c, align 4
  store i32 %v8_14f3c, i32* %ip.global-to-local, align 4
  %v9_14f3c = add i32 %v0_14f3c, 12
  %v10_14f3c = inttoptr i32 %v9_14f3c to i32*
  %v11_14f3c = load i32, i32* %v10_14f3c, align 4
  store i32 %v11_14f3c, i32* @lr, align 4
  %v12_14f3c = add i32 %v0_14f3c, 16
  store i32 %v12_14f3c, i32* %r1.global-to-local, align 4
  %v4_14f40 = mul i32 %v2_14f3c, 16777216
  %v5_14f40 = or i32 %v4_14f40, %v3_14f38
  store i32 %v5_14f40, i32* %r3.global-to-local, align 4
  %v3_14f44 = udiv i32 %v2_14f3c, 256
  %v4_14f48 = mul i32 %v5_14f3c, 16777216
  %v5_14f48 = or i32 %v4_14f48, %v3_14f44
  store i32 %v5_14f48, i32* %r4.global-to-local, align 4
  %v3_14f4c = udiv i32 %v5_14f3c, 256
  %v4_14f50 = mul i32 %v8_14f3c, 16777216
  %v5_14f50 = or i32 %v4_14f50, %v3_14f4c
  store i32 %v5_14f50, i32* %r5.global-to-local, align 4
  %v3_14f54 = udiv i32 %v8_14f3c, 256
  %v4_14f58 = mul i32 %v11_14f3c, 16777216
  %v5_14f58 = or i32 %v4_14f58, %v3_14f54
  store i32 %v5_14f58, i32* @ip, align 4
  %v1_14f5c = inttoptr i32 %v0_14f5c to i32*
  store i32 %v5_14f40, i32* %v1_14f5c, align 4
  %v3_14f5c = add i32 %v0_14f5c, 4
  %v4_14f5c = inttoptr i32 %v3_14f5c to i32*
  %v5_14f5c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14f5c, i32* %v4_14f5c, align 4
  %v6_14f5c = add i32 %v0_14f5c, 8
  %v7_14f5c = inttoptr i32 %v6_14f5c to i32*
  %v8_14f5c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14f5c, i32* %v7_14f5c, align 4
  %v9_14f5c = add i32 %v0_14f5c, 12
  %v10_14f5c = inttoptr i32 %v9_14f5c to i32*
  %v11_14f5c = load i32, i32* @ip, align 4
  store i32 %v11_14f5c, i32* %v10_14f5c, align 4
  %v12_14f5c = add i32 %v0_14f5c, 16
  store i32 %v12_14f5c, i32* @r0, align 4
  %v0_14f60 = load i32, i32* %r2.global-to-local, align 4
  %v2_14f60 = add i32 %v0_14f60, -16
  store i32 %v2_14f60, i32* %r2.global-to-local, align 4
  %v6_14f64 = icmp slt i32 %v0_14f60, 16
  br i1 %v6_14f64, label %dec_label_pc_14f68, label %dec_label_pc_14f38.dec_label_pc_14f38_crit_edge

dec_label_pc_14f38.dec_label_pc_14f38_crit_edge:  ; preds = %dec_label_pc_14f38
  %v0_14f38.pre = load i32, i32* @lr, align 4
  %v0_14f3c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14f38

dec_label_pc_14f68:                               ; preds = %dec_label_pc_14f38
  %v2_14f68 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14f68, i32* @r4, align 4
  %v5_14f68 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14f68, i32* @r5, align 4
  %v2_14f6c = add i32 %v0_14f60, -4
  store i32 %v2_14f6c, i32* %r2.global-to-local, align 4
  %v4_14f6c = add i32 %v0_14f60, 2147483632
  %v5_14f6c = and i32 %v2_14f6c, %v4_14f6c
  %v6_14f6c = icmp slt i32 %v5_14f6c, 0
  store i1 %v6_14f6c, i1* %cpsr_v.global-to-local, align 1
  %v7_14f6c = icmp slt i32 %v2_14f6c, 0
  store i1 %v7_14f6c, i1* %cpsr_n.global-to-local, align 1
  %v8_14f6c = icmp eq i32 %v2_14f6c, 0
  store i1 %v8_14f6c, i1* %cpsr_z.global-to-local, align 1
  %v5_14f70 = icmp slt i32 %v2_14f60, -12
  br i1 %v5_14f70, label %dec_label_pc_14f8c, label %dec_label_pc_14f74

dec_label_pc_14f74:                               ; preds = %dec_label_pc_14f68, %dec_label_pc_14f28, %dec_label_pc_14f74
  %v1_14f80 = phi i32 [ %v4_14f80, %dec_label_pc_14f74 ], [ %v12_14f5c, %dec_label_pc_14f68 ], [ %v0_14f5c74, %dec_label_pc_14f28 ]
  %v0_14f74 = load i32, i32* @lr, align 4
  %v3_14f74 = udiv i32 %v0_14f74, 256
  store i32 %v3_14f74, i32* %ip.global-to-local, align 4
  %v0_14f78 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f78 = inttoptr i32 %v0_14f78 to i32*
  %v2_14f78 = load i32, i32* %v1_14f78, align 4
  store i32 %v2_14f78, i32* @lr, align 4
  %v4_14f78 = add i32 %v0_14f78, 4
  store i32 %v4_14f78, i32* %r1.global-to-local, align 4
  %v4_14f7c = mul i32 %v2_14f78, 16777216
  %v5_14f7c = or i32 %v4_14f7c, %v3_14f74
  store i32 %v5_14f7c, i32* @ip, align 4
  %v2_14f80 = inttoptr i32 %v1_14f80 to i32*
  store i32 %v5_14f7c, i32* %v2_14f80, align 4
  %v3_14f80 = load i32, i32* @r0, align 4
  %v4_14f80 = add i32 %v3_14f80, 4
  store i32 %v4_14f80, i32* @r0, align 4
  %v0_14f84 = load i32, i32* %r2.global-to-local, align 4
  %v2_14f84 = add i32 %v0_14f84, -4
  store i32 %v2_14f84, i32* %r2.global-to-local, align 4
  %v6_14f88 = icmp slt i32 %v0_14f84, 4
  br i1 %v6_14f88, label %dec_label_pc_14f8c.loopexit, label %dec_label_pc_14f74

dec_label_pc_14f8c.loopexit:                      ; preds = %dec_label_pc_14f74
  %v4_14f84 = sub i32 3, %v0_14f84
  %v5_14f84 = and i32 %v4_14f84, %v0_14f84
  %v6_14f84 = icmp slt i32 %v5_14f84, 0
  %v7_14f84 = icmp slt i32 %v2_14f84, 0
  store i1 %v6_14f84, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14f84, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14f8c

dec_label_pc_14f8c:                               ; preds = %dec_label_pc_14f8c.loopexit, %dec_label_pc_14f68
  %v2_14ecc111 = phi i32 [ %v4_14f80, %dec_label_pc_14f8c.loopexit ], [ %v12_14f5c, %dec_label_pc_14f68 ]
  %v0_14ebc107 = phi i32 [ %v2_14f84, %dec_label_pc_14f8c.loopexit ], [ %v2_14f6c, %dec_label_pc_14f68 ]
  %v0_14f8c = load i32, i32* %r1.global-to-local, align 4
  %v1_14f8c = add i32 %v0_14f8c, -3
  store i32 %v1_14f8c, i32* @r1, align 4
  br label %bb131

dec_label_pc_14f94:                               ; preds = %dec_label_pc_14f14
  br i1 %v5_15004, label %dec_label_pc_14fe0, label %dec_label_pc_14f9c

dec_label_pc_14f9c:                               ; preds = %dec_label_pc_14f94
  store i32 %v2_15000, i32* %r2.global-to-local, align 4
  %v3_14fa0 = load i32, i32* @r4, align 4
  store i32 %v3_14fa0, i32* %stack_var_-16, align 4
  %v6_14fa0 = load i32, i32* @r5, align 4
  store i32 %v6_14fa0, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14fa4

dec_label_pc_14fa4:                               ; preds = %dec_label_pc_14fa4.dec_label_pc_14fa4_crit_edge, %dec_label_pc_14f9c
  %v0_14fc8 = phi i32 [ %v12_14fc8, %dec_label_pc_14fa4.dec_label_pc_14fa4_crit_edge ], [ %v0_14f5c74, %dec_label_pc_14f9c ]
  %v0_14fa8 = phi i32 [ %v0_14fa8.pre, %dec_label_pc_14fa4.dec_label_pc_14fa4_crit_edge ], [ %v4_14f18, %dec_label_pc_14f9c ]
  %v0_14fa4 = phi i32 [ %v0_14fa4.pre, %dec_label_pc_14fa4.dec_label_pc_14fa4_crit_edge ], [ %v2_14f18, %dec_label_pc_14f9c ]
  %v3_14fa4 = udiv i32 %v0_14fa4, 65536
  store i32 %v3_14fa4, i32* %r3.global-to-local, align 4
  %v1_14fa8 = inttoptr i32 %v0_14fa8 to i32*
  %v2_14fa8 = load i32, i32* %v1_14fa8, align 4
  store i32 %v2_14fa8, i32* %r4.global-to-local, align 4
  %v3_14fa8 = add i32 %v0_14fa8, 4
  %v4_14fa8 = inttoptr i32 %v3_14fa8 to i32*
  %v5_14fa8 = load i32, i32* %v4_14fa8, align 4
  store i32 %v5_14fa8, i32* %r5.global-to-local, align 4
  %v6_14fa8 = add i32 %v0_14fa8, 8
  %v7_14fa8 = inttoptr i32 %v6_14fa8 to i32*
  %v8_14fa8 = load i32, i32* %v7_14fa8, align 4
  store i32 %v8_14fa8, i32* %ip.global-to-local, align 4
  %v9_14fa8 = add i32 %v0_14fa8, 12
  %v10_14fa8 = inttoptr i32 %v9_14fa8 to i32*
  %v11_14fa8 = load i32, i32* %v10_14fa8, align 4
  store i32 %v11_14fa8, i32* @lr, align 4
  %v12_14fa8 = add i32 %v0_14fa8, 16
  store i32 %v12_14fa8, i32* %r1.global-to-local, align 4
  %v4_14fac = mul i32 %v2_14fa8, 65536
  %v5_14fac = or i32 %v4_14fac, %v3_14fa4
  store i32 %v5_14fac, i32* %r3.global-to-local, align 4
  %v3_14fb0 = udiv i32 %v2_14fa8, 65536
  %v4_14fb4 = mul i32 %v5_14fa8, 65536
  %v5_14fb4 = or i32 %v4_14fb4, %v3_14fb0
  store i32 %v5_14fb4, i32* %r4.global-to-local, align 4
  %v3_14fb8 = udiv i32 %v5_14fa8, 65536
  %v4_14fbc = mul i32 %v8_14fa8, 65536
  %v5_14fbc = or i32 %v4_14fbc, %v3_14fb8
  store i32 %v5_14fbc, i32* %r5.global-to-local, align 4
  %v3_14fc0 = udiv i32 %v8_14fa8, 65536
  %v4_14fc4 = mul i32 %v11_14fa8, 65536
  %v5_14fc4 = or i32 %v4_14fc4, %v3_14fc0
  store i32 %v5_14fc4, i32* @ip, align 4
  %v1_14fc8 = inttoptr i32 %v0_14fc8 to i32*
  store i32 %v5_14fac, i32* %v1_14fc8, align 4
  %v3_14fc8 = add i32 %v0_14fc8, 4
  %v4_14fc8 = inttoptr i32 %v3_14fc8 to i32*
  %v5_14fc8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14fc8, i32* %v4_14fc8, align 4
  %v6_14fc8 = add i32 %v0_14fc8, 8
  %v7_14fc8 = inttoptr i32 %v6_14fc8 to i32*
  %v8_14fc8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14fc8, i32* %v7_14fc8, align 4
  %v9_14fc8 = add i32 %v0_14fc8, 12
  %v10_14fc8 = inttoptr i32 %v9_14fc8 to i32*
  %v11_14fc8 = load i32, i32* @ip, align 4
  store i32 %v11_14fc8, i32* %v10_14fc8, align 4
  %v12_14fc8 = add i32 %v0_14fc8, 16
  store i32 %v12_14fc8, i32* @r0, align 4
  %v0_14fcc = load i32, i32* %r2.global-to-local, align 4
  %v2_14fcc = add i32 %v0_14fcc, -16
  store i32 %v2_14fcc, i32* %r2.global-to-local, align 4
  %v6_14fd0 = icmp slt i32 %v0_14fcc, 16
  br i1 %v6_14fd0, label %dec_label_pc_14fd4, label %dec_label_pc_14fa4.dec_label_pc_14fa4_crit_edge

dec_label_pc_14fa4.dec_label_pc_14fa4_crit_edge:  ; preds = %dec_label_pc_14fa4
  %v0_14fa4.pre = load i32, i32* @lr, align 4
  %v0_14fa8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14fa4

dec_label_pc_14fd4:                               ; preds = %dec_label_pc_14fa4
  %v2_14fd4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14fd4, i32* @r4, align 4
  %v5_14fd4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14fd4, i32* @r5, align 4
  %v2_14fd8 = add i32 %v0_14fcc, -4
  store i32 %v2_14fd8, i32* %r2.global-to-local, align 4
  %v4_14fd8 = add i32 %v0_14fcc, 2147483632
  %v5_14fd8 = and i32 %v2_14fd8, %v4_14fd8
  %v6_14fd8 = icmp slt i32 %v5_14fd8, 0
  store i1 %v6_14fd8, i1* %cpsr_v.global-to-local, align 1
  %v7_14fd8 = icmp slt i32 %v2_14fd8, 0
  store i1 %v7_14fd8, i1* %cpsr_n.global-to-local, align 1
  %v8_14fd8 = icmp eq i32 %v2_14fd8, 0
  store i1 %v8_14fd8, i1* %cpsr_z.global-to-local, align 1
  %v5_14fdc = icmp slt i32 %v2_14fcc, -12
  br i1 %v5_14fdc, label %dec_label_pc_14ff8, label %dec_label_pc_14fe0

dec_label_pc_14fe0:                               ; preds = %dec_label_pc_14fd4, %dec_label_pc_14f94, %dec_label_pc_14fe0
  %v1_14fec = phi i32 [ %v4_14fec, %dec_label_pc_14fe0 ], [ %v12_14fc8, %dec_label_pc_14fd4 ], [ %v0_14f5c74, %dec_label_pc_14f94 ]
  %v0_14fe0 = load i32, i32* @lr, align 4
  %v3_14fe0 = udiv i32 %v0_14fe0, 65536
  store i32 %v3_14fe0, i32* %ip.global-to-local, align 4
  %v0_14fe4 = load i32, i32* %r1.global-to-local, align 4
  %v1_14fe4 = inttoptr i32 %v0_14fe4 to i32*
  %v2_14fe4 = load i32, i32* %v1_14fe4, align 4
  store i32 %v2_14fe4, i32* @lr, align 4
  %v4_14fe4 = add i32 %v0_14fe4, 4
  store i32 %v4_14fe4, i32* %r1.global-to-local, align 4
  %v4_14fe8 = mul i32 %v2_14fe4, 65536
  %v5_14fe8 = or i32 %v4_14fe8, %v3_14fe0
  store i32 %v5_14fe8, i32* @ip, align 4
  %v2_14fec = inttoptr i32 %v1_14fec to i32*
  store i32 %v5_14fe8, i32* %v2_14fec, align 4
  %v3_14fec = load i32, i32* @r0, align 4
  %v4_14fec = add i32 %v3_14fec, 4
  store i32 %v4_14fec, i32* @r0, align 4
  %v0_14ff0 = load i32, i32* %r2.global-to-local, align 4
  %v2_14ff0 = add i32 %v0_14ff0, -4
  store i32 %v2_14ff0, i32* %r2.global-to-local, align 4
  %v6_14ff4 = icmp slt i32 %v0_14ff0, 4
  br i1 %v6_14ff4, label %dec_label_pc_14ff8.loopexit, label %dec_label_pc_14fe0

dec_label_pc_14ff8.loopexit:                      ; preds = %dec_label_pc_14fe0
  %v4_14ff0 = sub i32 3, %v0_14ff0
  %v5_14ff0 = and i32 %v4_14ff0, %v0_14ff0
  %v6_14ff0 = icmp slt i32 %v5_14ff0, 0
  %v7_14ff0 = icmp slt i32 %v2_14ff0, 0
  store i1 %v6_14ff0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14ff0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14ff8

dec_label_pc_14ff8:                               ; preds = %dec_label_pc_14ff8.loopexit, %dec_label_pc_14fd4
  %v2_14ecc112 = phi i32 [ %v4_14fec, %dec_label_pc_14ff8.loopexit ], [ %v12_14fc8, %dec_label_pc_14fd4 ]
  %v0_14ebc108 = phi i32 [ %v2_14ff0, %dec_label_pc_14ff8.loopexit ], [ %v2_14fd8, %dec_label_pc_14fd4 ]
  %v0_14ff8 = load i32, i32* %r1.global-to-local, align 4
  %v1_14ff8 = add i32 %v0_14ff8, -2
  store i32 %v1_14ff8, i32* @r1, align 4
  br label %bb131

dec_label_pc_15000:                               ; preds = %dec_label_pc_14f14
  br i1 %v5_15004, label %dec_label_pc_1504c, label %dec_label_pc_15008

dec_label_pc_15008:                               ; preds = %dec_label_pc_15000
  store i32 %v2_15000, i32* %r2.global-to-local, align 4
  %v3_1500c = load i32, i32* @r4, align 4
  store i32 %v3_1500c, i32* %stack_var_-16, align 4
  %v6_1500c = load i32, i32* @r5, align 4
  store i32 %v6_1500c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15010

dec_label_pc_15010:                               ; preds = %dec_label_pc_15010.dec_label_pc_15010_crit_edge, %dec_label_pc_15008
  %v0_15034 = phi i32 [ %v12_15034, %dec_label_pc_15010.dec_label_pc_15010_crit_edge ], [ %v0_14f5c74, %dec_label_pc_15008 ]
  %v0_15014 = phi i32 [ %v0_15014.pre, %dec_label_pc_15010.dec_label_pc_15010_crit_edge ], [ %v4_14f18, %dec_label_pc_15008 ]
  %v0_15010 = phi i32 [ %v0_15010.pre, %dec_label_pc_15010.dec_label_pc_15010_crit_edge ], [ %v2_14f18, %dec_label_pc_15008 ]
  %v3_15010 = udiv i32 %v0_15010, 16777216
  store i32 %v3_15010, i32* %r3.global-to-local, align 4
  %v1_15014 = inttoptr i32 %v0_15014 to i32*
  %v2_15014 = load i32, i32* %v1_15014, align 4
  store i32 %v2_15014, i32* %r4.global-to-local, align 4
  %v3_15014 = add i32 %v0_15014, 4
  %v4_15014 = inttoptr i32 %v3_15014 to i32*
  %v5_15014 = load i32, i32* %v4_15014, align 4
  store i32 %v5_15014, i32* %r5.global-to-local, align 4
  %v6_15014 = add i32 %v0_15014, 8
  %v7_15014 = inttoptr i32 %v6_15014 to i32*
  %v8_15014 = load i32, i32* %v7_15014, align 4
  store i32 %v8_15014, i32* %ip.global-to-local, align 4
  %v9_15014 = add i32 %v0_15014, 12
  %v10_15014 = inttoptr i32 %v9_15014 to i32*
  %v11_15014 = load i32, i32* %v10_15014, align 4
  store i32 %v11_15014, i32* @lr, align 4
  %v12_15014 = add i32 %v0_15014, 16
  store i32 %v12_15014, i32* %r1.global-to-local, align 4
  %v4_15018 = mul i32 %v2_15014, 256
  %v5_15018 = or i32 %v4_15018, %v3_15010
  store i32 %v5_15018, i32* %r3.global-to-local, align 4
  %v3_1501c = udiv i32 %v2_15014, 16777216
  %v4_15020 = mul i32 %v5_15014, 256
  %v5_15020 = or i32 %v4_15020, %v3_1501c
  store i32 %v5_15020, i32* %r4.global-to-local, align 4
  %v3_15024 = udiv i32 %v5_15014, 16777216
  %v4_15028 = mul i32 %v8_15014, 256
  %v5_15028 = or i32 %v4_15028, %v3_15024
  store i32 %v5_15028, i32* %r5.global-to-local, align 4
  %v3_1502c = udiv i32 %v8_15014, 16777216
  %v4_15030 = mul i32 %v11_15014, 256
  %v5_15030 = or i32 %v4_15030, %v3_1502c
  store i32 %v5_15030, i32* @ip, align 4
  %v1_15034 = inttoptr i32 %v0_15034 to i32*
  store i32 %v5_15018, i32* %v1_15034, align 4
  %v3_15034 = add i32 %v0_15034, 4
  %v4_15034 = inttoptr i32 %v3_15034 to i32*
  %v5_15034 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15034, i32* %v4_15034, align 4
  %v6_15034 = add i32 %v0_15034, 8
  %v7_15034 = inttoptr i32 %v6_15034 to i32*
  %v8_15034 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15034, i32* %v7_15034, align 4
  %v9_15034 = add i32 %v0_15034, 12
  %v10_15034 = inttoptr i32 %v9_15034 to i32*
  %v11_15034 = load i32, i32* @ip, align 4
  store i32 %v11_15034, i32* %v10_15034, align 4
  %v12_15034 = add i32 %v0_15034, 16
  store i32 %v12_15034, i32* @r0, align 4
  %v0_15038 = load i32, i32* %r2.global-to-local, align 4
  %v2_15038 = add i32 %v0_15038, -16
  store i32 %v2_15038, i32* %r2.global-to-local, align 4
  %v6_1503c = icmp slt i32 %v0_15038, 16
  br i1 %v6_1503c, label %dec_label_pc_15040, label %dec_label_pc_15010.dec_label_pc_15010_crit_edge

dec_label_pc_15010.dec_label_pc_15010_crit_edge:  ; preds = %dec_label_pc_15010
  %v0_15010.pre = load i32, i32* @lr, align 4
  %v0_15014.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15010

dec_label_pc_15040:                               ; preds = %dec_label_pc_15010
  %v2_15040 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15040, i32* @r4, align 4
  %v5_15040 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_15040, i32* @r5, align 4
  %v2_15044 = add i32 %v0_15038, -4
  store i32 %v2_15044, i32* %r2.global-to-local, align 4
  %v4_15044 = add i32 %v0_15038, 2147483632
  %v5_15044 = and i32 %v2_15044, %v4_15044
  %v6_15044 = icmp slt i32 %v5_15044, 0
  store i1 %v6_15044, i1* %cpsr_v.global-to-local, align 1
  %v7_15044 = icmp slt i32 %v2_15044, 0
  store i1 %v7_15044, i1* %cpsr_n.global-to-local, align 1
  %v8_15044 = icmp eq i32 %v2_15044, 0
  store i1 %v8_15044, i1* %cpsr_z.global-to-local, align 1
  %v5_15048 = icmp slt i32 %v2_15038, -12
  br i1 %v5_15048, label %dec_label_pc_15064, label %dec_label_pc_1504c

dec_label_pc_1504c:                               ; preds = %dec_label_pc_15040, %dec_label_pc_15000, %dec_label_pc_1504c
  %v1_15058 = phi i32 [ %v4_15058, %dec_label_pc_1504c ], [ %v12_15034, %dec_label_pc_15040 ], [ %v0_14f5c74, %dec_label_pc_15000 ]
  %v0_1504c = load i32, i32* @lr, align 4
  %v3_1504c = udiv i32 %v0_1504c, 16777216
  store i32 %v3_1504c, i32* %ip.global-to-local, align 4
  %v0_15050 = load i32, i32* %r1.global-to-local, align 4
  %v1_15050 = inttoptr i32 %v0_15050 to i32*
  %v2_15050 = load i32, i32* %v1_15050, align 4
  store i32 %v2_15050, i32* @lr, align 4
  %v4_15050 = add i32 %v0_15050, 4
  store i32 %v4_15050, i32* %r1.global-to-local, align 4
  %v4_15054 = mul i32 %v2_15050, 256
  %v5_15054 = or i32 %v4_15054, %v3_1504c
  store i32 %v5_15054, i32* @ip, align 4
  %v2_15058 = inttoptr i32 %v1_15058 to i32*
  store i32 %v5_15054, i32* %v2_15058, align 4
  %v3_15058 = load i32, i32* @r0, align 4
  %v4_15058 = add i32 %v3_15058, 4
  store i32 %v4_15058, i32* @r0, align 4
  %v0_1505c = load i32, i32* %r2.global-to-local, align 4
  %v2_1505c = add i32 %v0_1505c, -4
  store i32 %v2_1505c, i32* %r2.global-to-local, align 4
  %v6_15060 = icmp slt i32 %v0_1505c, 4
  br i1 %v6_15060, label %dec_label_pc_15064.loopexit, label %dec_label_pc_1504c

dec_label_pc_15064.loopexit:                      ; preds = %dec_label_pc_1504c
  %v4_1505c = sub i32 3, %v0_1505c
  %v5_1505c = and i32 %v4_1505c, %v0_1505c
  %v6_1505c = icmp slt i32 %v5_1505c, 0
  %v7_1505c = icmp slt i32 %v2_1505c, 0
  store i1 %v6_1505c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1505c, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15064

dec_label_pc_15064:                               ; preds = %dec_label_pc_15064.loopexit, %dec_label_pc_15040
  %v2_14ecc113 = phi i32 [ %v4_15058, %dec_label_pc_15064.loopexit ], [ %v12_15034, %dec_label_pc_15040 ]
  %v0_14ebc109 = phi i32 [ %v2_1505c, %dec_label_pc_15064.loopexit ], [ %v2_15044, %dec_label_pc_15040 ]
  %v0_15064 = load i32, i32* %r1.global-to-local, align 4
  %v1_15064 = add i32 %v0_15064, -1
  store i32 %v1_15064, i32* @r1, align 4
  br label %bb131

dec_label_pc_1506c:                               ; preds = %dec_label_pc_14e20
  %v1_1506c = load i32, i32* @r2, align 4
  %v2_1506c = add i32 %v1_1506c, %v0_14e20
  store i32 %v2_1506c, i32* %r1.global-to-local, align 4
  %v2_15070 = add i32 %v1_1506c, %v1_14e20
  store i32 %v2_15070, i32* %r0.global-to-local, align 4
  %v2_15074 = add i32 %v1_1506c, -4
  store i32 %v2_15074, i32* %r2.global-to-local, align 4
  %v4_15074 = sub i32 3, %v1_1506c
  %v5_15074 = and i32 %v4_15074, %v1_1506c
  %v6_15074 = icmp slt i32 %v5_15074, 0
  store i1 %v6_15074, i1* %cpsr_v.global-to-local, align 1
  %v7_15074 = icmp slt i32 %v2_15074, 0
  store i1 %v7_15074, i1* %cpsr_n.global-to-local, align 1
  %v8_15074 = icmp eq i32 %v1_1506c, 4
  store i1 %v8_15074, i1* %cpsr_z.global-to-local, align 1
  %v5_15078 = icmp slt i32 %v1_1506c, 4
  br i1 %v5_15078, label %bb141, label %dec_label_pc_1507c

dec_label_pc_1507c:                               ; preds = %dec_label_pc_1506c
  %v1_1507c = urem i32 %v2_15070, 4
  store i32 %v1_1507c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1507c = icmp eq i32 %v1_1507c, 0
  store i1 %v2_1507c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1507c, label %dec_label_pc_15084, label %dec_label_pc_15124

dec_label_pc_15084:                               ; preds = %dec_label_pc_1507c
  %v1_15084 = urem i32 %v2_1506c, 4
  store i32 %v1_15084, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15084 = icmp eq i32 %v1_15084, 0
  store i1 %v2_15084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15084, label %dec_label_pc_1508c, label %dec_label_pc_15150

dec_label_pc_1508c:                               ; preds = %dec_label_pc_15084, %dec_label_pc_15148
  %v0_150a448 = phi i32 [ %v2_15070, %dec_label_pc_15084 ], [ %v0_1519831, %dec_label_pc_15148 ]
  %v0_150a047 = phi i32 [ %v2_1506c, %dec_label_pc_15084 ], [ %v0_15148, %dec_label_pc_15148 ]
  %v0_1508c = phi i32 [ %v2_15074, %dec_label_pc_15084 ], [ %v2_15140, %dec_label_pc_15148 ]
  %v2_1508c = add i32 %v0_1508c, -8
  store i32 %v2_1508c, i32* %r2.global-to-local, align 4
  %v4_1508c = sub i32 7, %v0_1508c
  %v5_1508c = and i32 %v4_1508c, %v0_1508c
  %v6_1508c = icmp slt i32 %v5_1508c, 0
  store i1 %v6_1508c, i1* %cpsr_v.global-to-local, align 1
  %v7_1508c = icmp slt i32 %v2_1508c, 0
  store i1 %v7_1508c, i1* %cpsr_n.global-to-local, align 1
  %v8_1508c = icmp eq i32 %v0_1508c, 8
  store i1 %v8_1508c, i1* %cpsr_z.global-to-local, align 1
  %v5_15090 = icmp slt i32 %v0_1508c, 8
  br i1 %v5_15090, label %dec_label_pc_150dc, label %dec_label_pc_15094

dec_label_pc_15094:                               ; preds = %dec_label_pc_1508c
  %v3_15094 = load i32, i32* @r4, align 4
  store i32 %v3_15094, i32* %stack_var_-8, align 4
  %v6_15094 = load i32, i32* @lr, align 4
  %v2_15098 = add i32 %v0_1508c, -28
  store i32 %v2_15098, i32* %r2.global-to-local, align 4
  %v4_15098 = sub i32 27, %v0_1508c
  %v5_15098 = and i32 %v4_15098, %v2_1508c
  %v6_15098 = icmp slt i32 %v5_15098, 0
  store i1 %v6_15098, i1* %cpsr_v.global-to-local, align 1
  %v7_15098 = icmp slt i32 %v2_15098, 0
  store i1 %v7_15098, i1* %cpsr_n.global-to-local, align 1
  %v8_15098 = icmp eq i32 %v2_1508c, 20
  store i1 %v8_15098, i1* %cpsr_z.global-to-local, align 1
  %v5_1509c = icmp slt i32 %v2_1508c, 20
  br i1 %v5_1509c, label %dec_label_pc_150b8, label %dec_label_pc_150a0

dec_label_pc_150a0:                               ; preds = %dec_label_pc_15094, %dec_label_pc_150a0.dec_label_pc_150a0_crit_edge
  %v0_150a4 = phi i32 [ %v1_150ac, %dec_label_pc_150a0.dec_label_pc_150a0_crit_edge ], [ %v0_150a448, %dec_label_pc_15094 ]
  %v0_150a0 = phi i32 [ %v0_150a0.pre, %dec_label_pc_150a0.dec_label_pc_150a0_crit_edge ], [ %v0_150a047, %dec_label_pc_15094 ]
  %v1_150a0 = add i32 %v0_150a0, -4
  %v2_150a0 = inttoptr i32 %v1_150a0 to i32*
  %v3_150a0 = load i32, i32* %v2_150a0, align 4
  store i32 %v3_150a0, i32* %r3.global-to-local, align 4
  %v4_150a0 = add i32 %v0_150a0, -8
  %v5_150a0 = inttoptr i32 %v4_150a0 to i32*
  %v6_150a0 = load i32, i32* %v5_150a0, align 4
  store i32 %v6_150a0, i32* %r4.global-to-local, align 4
  %v7_150a0 = add i32 %v0_150a0, -12
  %v8_150a0 = inttoptr i32 %v7_150a0 to i32*
  %v9_150a0 = load i32, i32* %v8_150a0, align 4
  store i32 %v9_150a0, i32* %ip.global-to-local, align 4
  %v10_150a0 = add i32 %v0_150a0, -16
  %v11_150a0 = inttoptr i32 %v10_150a0 to i32*
  %v12_150a0 = load i32, i32* %v11_150a0, align 4
  store i32 %v12_150a0, i32* %lr.global-to-local, align 4
  store i32 %v10_150a0, i32* %r1.global-to-local, align 4
  %v1_150a4 = add i32 %v0_150a4, -16
  %v2_150a4 = inttoptr i32 %v1_150a4 to i32*
  store i32 %v3_150a0, i32* %v2_150a4, align 4
  %v4_150a4 = add i32 %v0_150a4, -12
  %v5_150a4 = inttoptr i32 %v4_150a4 to i32*
  %v6_150a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_150a4, i32* %v5_150a4, align 4
  %v7_150a4 = add i32 %v0_150a4, -8
  %v8_150a4 = inttoptr i32 %v7_150a4 to i32*
  %v9_150a4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_150a4, i32* %v8_150a4, align 4
  %v10_150a4 = add i32 %v0_150a4, -4
  %v11_150a4 = inttoptr i32 %v10_150a4 to i32*
  %v12_150a4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_150a4, i32* %v11_150a4, align 4
  store i32 %v1_150a4, i32* %r0.global-to-local, align 4
  %v0_150a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_150a8 = add i32 %v0_150a8, -4
  %v2_150a8 = inttoptr i32 %v1_150a8 to i32*
  %v3_150a8 = load i32, i32* %v2_150a8, align 4
  store i32 %v3_150a8, i32* %r3.global-to-local, align 4
  %v4_150a8 = add i32 %v0_150a8, -8
  %v5_150a8 = inttoptr i32 %v4_150a8 to i32*
  %v6_150a8 = load i32, i32* %v5_150a8, align 4
  store i32 %v6_150a8, i32* %r4.global-to-local, align 4
  %v7_150a8 = add i32 %v0_150a8, -12
  %v8_150a8 = inttoptr i32 %v7_150a8 to i32*
  %v9_150a8 = load i32, i32* %v8_150a8, align 4
  store i32 %v9_150a8, i32* @ip, align 4
  %v10_150a8 = add i32 %v0_150a8, -16
  %v11_150a8 = inttoptr i32 %v10_150a8 to i32*
  %v12_150a8 = load i32, i32* %v11_150a8, align 4
  store i32 %v12_150a8, i32* %lr.global-to-local, align 4
  store i32 %v10_150a8, i32* %r1.global-to-local, align 4
  %v1_150ac = add i32 %v0_150a4, -32
  %v2_150ac = inttoptr i32 %v1_150ac to i32*
  store i32 %v3_150a8, i32* %v2_150ac, align 4
  %v4_150ac = add i32 %v0_150a4, -28
  %v5_150ac = inttoptr i32 %v4_150ac to i32*
  %v6_150ac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_150ac, i32* %v5_150ac, align 4
  %v7_150ac = add i32 %v0_150a4, -24
  %v8_150ac = inttoptr i32 %v7_150ac to i32*
  %v9_150ac = load i32, i32* @ip, align 4
  store i32 %v9_150ac, i32* %v8_150ac, align 4
  %v10_150ac = add i32 %v0_150a4, -20
  %v11_150ac = inttoptr i32 %v10_150ac to i32*
  %v12_150ac = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_150ac, i32* %v11_150ac, align 4
  store i32 %v1_150ac, i32* %r0.global-to-local, align 4
  %v0_150b0 = load i32, i32* %r2.global-to-local, align 4
  %v2_150b0 = add i32 %v0_150b0, -32
  store i32 %v2_150b0, i32* %r2.global-to-local, align 4
  %v6_150b4 = icmp slt i32 %v0_150b0, 32
  br i1 %v6_150b4, label %dec_label_pc_150b8.loopexit, label %dec_label_pc_150a0.dec_label_pc_150a0_crit_edge

dec_label_pc_150a0.dec_label_pc_150a0_crit_edge:  ; preds = %dec_label_pc_150a0
  %v0_150a0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_150a0

dec_label_pc_150b8.loopexit:                      ; preds = %dec_label_pc_150a0
  %v4_150b0 = sub i32 31, %v0_150b0
  %v5_150b0 = and i32 %v4_150b0, %v0_150b0
  %v6_150b0 = icmp slt i32 %v5_150b0, 0
  %v7_150b0 = icmp slt i32 %v2_150b0, 0
  store i1 %v6_150b0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_150b0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_150b8

dec_label_pc_150b8:                               ; preds = %dec_label_pc_150b8.loopexit, %dec_label_pc_15094
  %v6_150c0 = phi i32 [ %v1_150ac, %dec_label_pc_150b8.loopexit ], [ %v0_150a448, %dec_label_pc_15094 ]
  %v0_150c8.pr = phi i32 [ %v2_150b0, %dec_label_pc_150b8.loopexit ], [ %v2_15098, %dec_label_pc_15094 ]
  %v4_150b8 = add i32 %v0_150c8.pr, 16
  %v6_150b8 = sub i32 0, %v0_150c8.pr
  %v7_150b8 = and i32 %v4_150b8, %v6_150b8
  %v8_150b8 = icmp slt i32 %v7_150b8, 0
  store i1 %v8_150b8, i1* %cpsr_v.global-to-local, align 1
  %v9_150b8 = icmp slt i32 %v4_150b8, 0
  store i1 %v9_150b8, i1* %cpsr_n.global-to-local, align 1
  %v10_150b8 = icmp eq i32 %v4_150b8, 0
  store i1 %v10_150b8, i1* %cpsr_z.global-to-local, align 1
  %v5_150bc = icmp slt i32 %v0_150c8.pr, -16
  br i1 %v5_150bc, label %.thread13, label %bb138

bb138:                                            ; preds = %dec_label_pc_150b8
  %v6_150bc = load i32, i32* %r1.global-to-local, align 4
  %v7_150bc = add i32 %v6_150bc, -4
  %v8_150bc = inttoptr i32 %v7_150bc to i32*
  %v9_150bc = load i32, i32* %v8_150bc, align 4
  store i32 %v9_150bc, i32* %r3.global-to-local, align 4
  %v10_150bc = add i32 %v6_150bc, -8
  %v11_150bc = inttoptr i32 %v10_150bc to i32*
  %v12_150bc = load i32, i32* %v11_150bc, align 4
  store i32 %v12_150bc, i32* %r4.global-to-local, align 4
  %v13_150bc = add i32 %v6_150bc, -12
  %v14_150bc = inttoptr i32 %v13_150bc to i32*
  %v15_150bc = load i32, i32* %v14_150bc, align 4
  store i32 %v15_150bc, i32* @ip, align 4
  %v16_150bc = add i32 %v6_150bc, -16
  %v17_150bc = inttoptr i32 %v16_150bc to i32*
  %v18_150bc = load i32, i32* %v17_150bc, align 4
  store i32 %v18_150bc, i32* %lr.global-to-local, align 4
  store i32 %v16_150bc, i32* %r1.global-to-local, align 4
  %v7_150c0 = add i32 %v6_150c0, -16
  %v8_150c0 = inttoptr i32 %v7_150c0 to i32*
  store i32 %v9_150bc, i32* %v8_150c0, align 4
  %v10_150c0 = add i32 %v6_150c0, -12
  %v11_150c0 = inttoptr i32 %v10_150c0 to i32*
  %v12_150c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_150c0, i32* %v11_150c0, align 4
  %v13_150c0 = add i32 %v6_150c0, -8
  %v14_150c0 = inttoptr i32 %v13_150c0 to i32*
  %v15_150c0 = load i32, i32* @ip, align 4
  store i32 %v15_150c0, i32* %v14_150c0, align 4
  %v16_150c0 = add i32 %v6_150c0, -4
  %v17_150c0 = inttoptr i32 %v16_150c0 to i32*
  %v18_150c0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_150c0, i32* %v17_150c0, align 4
  store i32 %v7_150c0, i32* %r0.global-to-local, align 4
  %v6_150c4 = load i32, i32* %r2.global-to-local, align 4
  %v7_150c4 = add i32 %v6_150c4, -16
  store i32 %v7_150c4, i32* %r2.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_150b8, %bb138
  %v6_150d0 = phi i32 [ %v7_150c0, %bb138 ], [ %v6_150c0, %dec_label_pc_150b8 ]
  %v0_150c8 = phi i32 [ %v7_150c4, %bb138 ], [ %v0_150c8.pr, %dec_label_pc_150b8 ]
  %v4_150c8 = add i32 %v0_150c8, 20
  store i32 %v4_150c8, i32* %r2.global-to-local, align 4
  %v6_150c8 = sub i32 0, %v0_150c8
  %v7_150c8 = and i32 %v4_150c8, %v6_150c8
  %v8_150c8 = icmp slt i32 %v7_150c8, 0
  store i1 %v8_150c8, i1* %cpsr_v.global-to-local, align 1
  %v9_150c8 = icmp slt i32 %v4_150c8, 0
  store i1 %v9_150c8, i1* %cpsr_n.global-to-local, align 1
  %v10_150c8 = icmp eq i32 %v4_150c8, 0
  store i1 %v10_150c8, i1* %cpsr_z.global-to-local, align 1
  %v5_150cc = icmp slt i32 %v0_150c8, -20
  br i1 %v5_150cc, label %.thread15, label %bb139

bb139:                                            ; preds = %.thread13
  %v6_150cc = load i32, i32* %r1.global-to-local, align 4
  %v7_150cc = add i32 %v6_150cc, -4
  %v8_150cc = inttoptr i32 %v7_150cc to i32*
  %v9_150cc = load i32, i32* %v8_150cc, align 4
  store i32 %v9_150cc, i32* %r3.global-to-local, align 4
  %v10_150cc = add i32 %v6_150cc, -8
  %v11_150cc = inttoptr i32 %v10_150cc to i32*
  %v12_150cc = load i32, i32* %v11_150cc, align 4
  store i32 %v12_150cc, i32* @ip, align 4
  %v13_150cc = add i32 %v6_150cc, -12
  %v14_150cc = inttoptr i32 %v13_150cc to i32*
  %v15_150cc = load i32, i32* %v14_150cc, align 4
  store i32 %v15_150cc, i32* %lr.global-to-local, align 4
  store i32 %v13_150cc, i32* %r1.global-to-local, align 4
  %v7_150d0 = add i32 %v6_150d0, -12
  %v8_150d0 = inttoptr i32 %v7_150d0 to i32*
  store i32 %v9_150cc, i32* %v8_150d0, align 4
  %v10_150d0 = add i32 %v6_150d0, -8
  %v11_150d0 = inttoptr i32 %v10_150d0 to i32*
  %v12_150d0 = load i32, i32* @ip, align 4
  store i32 %v12_150d0, i32* %v11_150d0, align 4
  %v13_150d0 = add i32 %v6_150d0, -4
  %v14_150d0 = inttoptr i32 %v13_150d0 to i32*
  %v15_150d0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_150d0, i32* %v14_150d0, align 4
  store i32 %v7_150d0, i32* %r0.global-to-local, align 4
  %v6_150d4 = load i32, i32* %r2.global-to-local, align 4
  %v7_150d4 = add i32 %v6_150d4, -12
  store i32 %v7_150d4, i32* %r2.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %.thread13, %bb139
  %v6_150f456 = phi i32 [ %v6_150d0, %.thread13 ], [ %v7_150d0, %bb139 ]
  %v0_150dc54 = phi i32 [ %v4_150c8, %.thread13 ], [ %v7_150d4, %bb139 ]
  %v2_150d8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_150d8, i32* @r4, align 4
  store i32 %v6_15094, i32* @lr, align 4
  br label %dec_label_pc_150dc

dec_label_pc_150dc:                               ; preds = %dec_label_pc_1508c, %.thread15
  %v7_150ec = phi i32 [ %v0_150a448, %dec_label_pc_1508c ], [ %v6_150f456, %.thread15 ]
  %v0_150dc = phi i32 [ %v2_1508c, %dec_label_pc_1508c ], [ %v0_150dc54, %.thread15 ]
  %v2_150dc = add i32 %v0_150dc, 8
  store i32 %v2_150dc, i32* %r2.global-to-local, align 4
  %v4_150dc = sub i32 0, %v0_150dc
  %v5_150dc = and i32 %v2_150dc, %v4_150dc
  %v6_150dc = icmp slt i32 %v5_150dc, 0
  store i1 %v6_150dc, i1* %cpsr_v.global-to-local, align 1
  %v7_150dc = icmp slt i32 %v2_150dc, 0
  store i1 %v7_150dc, i1* %cpsr_n.global-to-local, align 1
  %v8_150dc = icmp eq i32 %v2_150dc, 0
  store i1 %v8_150dc, i1* %cpsr_z.global-to-local, align 1
  %v5_150e0 = icmp slt i32 %v0_150dc, -8
  br i1 %v5_150e0, label %bb141, label %dec_label_pc_150e4

dec_label_pc_150e4:                               ; preds = %dec_label_pc_150dc
  %v6_150e4 = add i32 %v0_150dc, 4
  store i32 %v6_150e4, i32* %r2.global-to-local, align 4
  %v8_150e4 = sub i32 -5, %v0_150dc
  %v9_150e4 = and i32 %v8_150e4, %v2_150dc
  %v10_150e4 = icmp slt i32 %v9_150e4, 0
  store i1 %v10_150e4, i1* %cpsr_v.global-to-local, align 1
  %v11_150e4 = icmp slt i32 %v6_150e4, 0
  store i1 %v11_150e4, i1* %cpsr_n.global-to-local, align 1
  %v12_150e4 = icmp eq i32 %v2_150dc, 4
  store i1 %v12_150e4, i1* %cpsr_z.global-to-local, align 1
  %v5_150e8 = icmp slt i32 %v2_150dc, 4
  %v6_150e8 = load i32, i32* %r1.global-to-local, align 4
  %v7_150e8 = add i32 %v6_150e8, -4
  %v8_150e8 = inttoptr i32 %v7_150e8 to i32*
  %v9_150e8 = load i32, i32* %v8_150e8, align 4
  store i32 %v9_150e8, i32* %r3.global-to-local, align 4
  br i1 %v5_150e8, label %.thread19, label %bb140

.thread19:                                        ; preds = %dec_label_pc_150e4
  store i32 %v7_150e8, i32* %r1.global-to-local, align 4
  %v8_150ec = add i32 %v7_150ec, -4
  %v9_150ec = inttoptr i32 %v8_150ec to i32*
  store i32 %v9_150e8, i32* %v9_150ec, align 4
  %v10_150ec = load i32, i32* %r0.global-to-local, align 4
  %v11_150ec = add i32 %v10_150ec, -4
  store i32 %v11_150ec, i32* %r0.global-to-local, align 4
  %v0_150fc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb141

bb140:                                            ; preds = %dec_label_pc_150e4
  %v10_150f0 = add i32 %v6_150e8, -8
  %v11_150f0 = inttoptr i32 %v10_150f0 to i32*
  %v12_150f0 = load i32, i32* %v11_150f0, align 4
  store i32 %v12_150f0, i32* @ip, align 4
  store i32 %v10_150f0, i32* %r1.global-to-local, align 4
  %v7_150f4 = add i32 %v7_150ec, -8
  %v8_150f4 = inttoptr i32 %v7_150f4 to i32*
  store i32 %v9_150e8, i32* %v8_150f4, align 4
  %v10_150f4 = add i32 %v7_150ec, -4
  %v11_150f4 = inttoptr i32 %v10_150f4 to i32*
  %v12_150f4 = load i32, i32* @ip, align 4
  store i32 %v12_150f4, i32* %v11_150f4, align 4
  store i32 %v7_150f4, i32* %r0.global-to-local, align 4
  %v6_150f8 = load i32, i32* %r2.global-to-local, align 4
  %v7_150f8 = add i32 %v6_150f8, -4
  store i32 %v7_150f8, i32* %r2.global-to-local, align 4
  br label %bb141

bb141:                                            ; preds = %.thread19, %.thread25, %dec_label_pc_150dc, %dec_label_pc_1506c, %dec_label_pc_152a0, %dec_label_pc_15234, %dec_label_pc_151c8, %bb140
  %v2_15100 = phi i32 [ %v11_150ec, %.thread19 ], [ %v0_1519831, %.thread25 ], [ %v7_150ec, %dec_label_pc_150dc ], [ %v2_15070, %dec_label_pc_1506c ], [ %v2_1510c64, %dec_label_pc_152a0 ], [ %v2_1510c63, %dec_label_pc_15234 ], [ %v2_1510c62, %dec_label_pc_151c8 ], [ %v7_150f4, %bb140 ]
  %v0_150fc = phi i32 [ %v0_150fc.pre, %.thread19 ], [ %v2_15140, %.thread25 ], [ %v2_150dc, %dec_label_pc_150dc ], [ %v2_15074, %dec_label_pc_1506c ], [ %v0_150fc60, %dec_label_pc_152a0 ], [ %v0_150fc59, %dec_label_pc_15234 ], [ %v0_150fc58, %dec_label_pc_151c8 ], [ %v7_150f8, %bb140 ]
  %v1_150fc = add i32 %v0_150fc, 4
  store i32 %v1_150fc, i32* %r2.global-to-local, align 4
  %v3_150fc = sub i32 0, %v0_150fc
  %v4_150fc = and i32 %v1_150fc, %v3_150fc
  %v5_150fc = icmp slt i32 %v4_150fc, 0
  store i1 %v5_150fc, i1* %cpsr_v.global-to-local, align 1
  %v6_150fc = icmp slt i32 %v1_150fc, 0
  store i1 %v6_150fc, i1* %cpsr_n.global-to-local, align 1
  %v7_150fc = icmp eq i32 %v1_150fc, 0
  store i1 %v7_150fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_150fc, label %.thread122, label %bb142

bb142:                                            ; preds = %bb141
  %v1_15104 = add i32 %v0_150fc, 2
  %v3_15104 = sub i32 -3, %v0_150fc
  %v4_15104 = and i32 %v3_15104, %v1_150fc
  %v5_15104 = icmp slt i32 %v4_15104, 0
  store i1 %v5_15104, i1* %cpsr_v.global-to-local, align 1
  %v6_15104 = icmp slt i32 %v1_15104, 0
  store i1 %v6_15104, i1* %cpsr_n.global-to-local, align 1
  %v7_15104 = icmp eq i32 %v1_150fc, 2
  store i1 %v7_15104, i1* %cpsr_z.global-to-local, align 1
  %v0_15108 = load i32, i32* %r1.global-to-local, align 4
  %v1_15108 = add i32 %v0_15108, -1
  %v2_15108 = inttoptr i32 %v1_15108 to i8*
  %v3_15108 = load i8, i8* %v2_15108, align 1
  %v4_15108 = zext i8 %v3_15108 to i32
  store i32 %v4_15108, i32* %r3.global-to-local, align 4
  store i32 %v1_15108, i32* %r1.global-to-local, align 4
  %v3_1510c = add i32 %v2_15100, -1
  %v4_1510c = inttoptr i32 %v3_1510c to i8*
  store i8 %v3_15108, i8* %v4_1510c, align 1
  %v5_1510c = load i32, i32* %r0.global-to-local, align 4
  %v6_1510c = add i32 %v5_1510c, -1
  store i32 %v6_1510c, i32* %r0.global-to-local, align 4
  %v0_15110 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_15110 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_15110 = xor i1 %v0_15110, %v1_15110
  br i1 %v2_15110, label %.thread121, label %bb143

bb143:                                            ; preds = %bb142
  %v3_15110 = load i32, i32* %r1.global-to-local, align 4
  %v4_15110 = add i32 %v3_15110, -1
  %v5_15110 = inttoptr i32 %v4_15110 to i8*
  %v6_15110 = load i8, i8* %v5_15110, align 1
  %v7_15110 = zext i8 %v6_15110 to i32
  store i32 %v7_15110, i32* %r3.global-to-local, align 4
  store i32 %v4_15110, i32* %r1.global-to-local, align 4
  %v6_15114 = add i32 %v5_1510c, -2
  %v7_15114 = inttoptr i32 %v6_15114 to i8*
  store i8 %v6_15110, i8* %v7_15114, align 1
  %v8_15114 = load i32, i32* %r0.global-to-local, align 4
  %v9_15114 = add i32 %v8_15114, -1
  store i32 %v9_15114, i32* %r0.global-to-local, align 4
  %v1_15118.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_15118.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread121

.thread121:                                       ; preds = %bb142, %bb143
  %v7_1511c = phi i32 [ %v9_15114, %bb143 ], [ %v6_1510c, %bb142 ]
  %v2_1511c = phi i1 [ %v2_15118.pre, %bb143 ], [ %v1_15110, %bb142 ]
  %v1_1511c = phi i1 [ %v1_15118.pre, %bb143 ], [ %v0_15110, %bb142 ]
  %v0_15118 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_15118 = xor i1 %v2_1511c, %v1_1511c
  %v4_15118 = or i1 %v0_15118, %v3_15118
  br i1 %v4_15118, label %.thread122, label %bb144

bb144:                                            ; preds = %.thread121
  %v5_15118 = load i32, i32* %r1.global-to-local, align 4
  %v6_15118 = add i32 %v5_15118, -1
  %v7_15118 = inttoptr i32 %v6_15118 to i8*
  %v8_15118 = load i8, i8* %v7_15118, align 1
  %v9_15118 = zext i8 %v8_15118 to i32
  store i32 %v9_15118, i32* %r3.global-to-local, align 4
  store i32 %v6_15118, i32* %r1.global-to-local, align 4
  %v8_1511c = add i32 %v7_1511c, -1
  %v9_1511c = inttoptr i32 %v8_1511c to i8*
  store i8 %v8_15118, i8* %v9_1511c, align 1
  %v10_1511c = load i32, i32* %r0.global-to-local, align 4
  %v11_1511c = add i32 %v10_1511c, -1
  store i32 %v11_1511c, i32* %r0.global-to-local, align 4
  br label %.thread122

dec_label_pc_15124:                               ; preds = %dec_label_pc_1507c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_15124 = icmp eq i32 %v1_1507c, 1
  store i1 %v8_15124, i1* %cpsr_n.global-to-local, align 1
  %v9_15124 = icmp eq i32 %v1_1507c, 2
  store i1 %v9_15124, i1* %cpsr_z.global-to-local, align 1
  %v1_15128 = add i32 %v2_1506c, -1
  %v2_15128 = inttoptr i32 %v1_15128 to i8*
  %v3_15128 = load i8, i8* %v2_15128, align 1
  %v4_15128 = zext i8 %v3_15128 to i32
  store i32 %v4_15128, i32* %r3.global-to-local, align 4
  store i32 %v1_15128, i32* %r1.global-to-local, align 4
  %v3_1512c = add i32 %v2_15070, -1
  %v4_1512c = inttoptr i32 %v3_1512c to i8*
  store i8 %v3_15128, i8* %v4_1512c, align 1
  %v5_1512c = load i32, i32* %r0.global-to-local, align 4
  %v6_1512c = add i32 %v5_1512c, -1
  store i32 %v6_1512c, i32* %r0.global-to-local, align 4
  br i1 %v8_15124, label %.thread25, label %bb145

bb145:                                            ; preds = %dec_label_pc_15124
  %v6_15130 = load i32, i32* %r1.global-to-local, align 4
  %v7_15130 = add i32 %v6_15130, -1
  %v8_15130 = inttoptr i32 %v7_15130 to i8*
  %v9_15130 = load i8, i8* %v8_15130, align 1
  %v10_15130 = zext i8 %v9_15130 to i32
  store i32 %v10_15130, i32* %r3.global-to-local, align 4
  store i32 %v7_15130, i32* %r1.global-to-local, align 4
  %v9_15134 = add i32 %v5_1512c, -2
  %v10_15134 = inttoptr i32 %v9_15134 to i8*
  store i8 %v9_15130, i8* %v10_15134, align 1
  %v11_15134 = load i32, i32* %r0.global-to-local, align 4
  %v12_15134 = add i32 %v11_15134, -1
  store i32 %v12_15134, i32* %r0.global-to-local, align 4
  br i1 %v9_15124, label %.thread25, label %bb146

bb146:                                            ; preds = %bb145
  %v8_15138 = load i32, i32* %r1.global-to-local, align 4
  %v9_15138 = add i32 %v8_15138, -1
  %v10_15138 = inttoptr i32 %v9_15138 to i8*
  %v11_15138 = load i8, i8* %v10_15138, align 1
  %v12_15138 = zext i8 %v11_15138 to i32
  store i32 %v12_15138, i32* %r3.global-to-local, align 4
  store i32 %v9_15138, i32* %r1.global-to-local, align 4
  %v11_1513c = add i32 %v11_15134, -2
  %v12_1513c = inttoptr i32 %v11_1513c to i8*
  store i8 %v11_15138, i8* %v12_1513c, align 1
  %v13_1513c = load i32, i32* %r0.global-to-local, align 4
  %v14_1513c = add i32 %v13_1513c, -1
  store i32 %v14_1513c, i32* %r0.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb145, %dec_label_pc_15124, %bb146
  %v0_1519831 = phi i32 [ %v12_15134, %bb145 ], [ %v6_1512c, %dec_label_pc_15124 ], [ %v14_1513c, %bb146 ]
  %v0_15140 = load i32, i32* %r2.global-to-local, align 4
  %v1_15140 = load i32, i32* @ip, align 4
  %v2_15140 = sub i32 %v0_15140, %v1_15140
  store i32 %v2_15140, i32* %r2.global-to-local, align 4
  %v4_15140 = xor i32 %v1_15140, %v0_15140
  %v5_15140 = xor i32 %v2_15140, %v0_15140
  %v6_15140 = and i32 %v5_15140, %v4_15140
  %v7_15140 = icmp slt i32 %v6_15140, 0
  store i1 %v7_15140, i1* %cpsr_v.global-to-local, align 1
  %v8_15140 = icmp slt i32 %v2_15140, 0
  store i1 %v8_15140, i1* %cpsr_n.global-to-local, align 1
  %v9_15140 = icmp eq i32 %v0_15140, %v1_15140
  store i1 %v9_15140, i1* %cpsr_z.global-to-local, align 1
  %v5_15144 = icmp slt i32 %v0_15140, %v1_15140
  br i1 %v5_15144, label %bb141, label %dec_label_pc_15148

dec_label_pc_15148:                               ; preds = %.thread25
  %v0_15148 = load i32, i32* %r1.global-to-local, align 4
  %v1_15148 = urem i32 %v0_15148, 4
  store i32 %v1_15148, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15148 = icmp eq i32 %v1_15148, 0
  store i1 %v2_15148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15148, label %dec_label_pc_1508c, label %dec_label_pc_15150

dec_label_pc_15150:                               ; preds = %dec_label_pc_15084, %dec_label_pc_15148
  %v0_1519830 = phi i32 [ %v2_15070, %dec_label_pc_15084 ], [ %v0_1519831, %dec_label_pc_15148 ]
  %v0_15244 = phi i32 [ %v2_15074, %dec_label_pc_15084 ], [ %v2_15140, %dec_label_pc_15148 ]
  %v0_15150 = phi i32 [ %v2_1506c, %dec_label_pc_15084 ], [ %v0_15148, %dec_label_pc_15148 ]
  %v0_15158 = phi i32 [ %v1_15084, %dec_label_pc_15084 ], [ %v1_15148, %dec_label_pc_15148 ]
  %v1_15150 = and i32 %v0_15150, -4
  store i32 %v1_15150, i32* %r1.global-to-local, align 4
  %v1_15154 = inttoptr i32 %v1_15150 to i32*
  %v2_15154 = load i32, i32* %v1_15154, align 4
  store i32 %v2_15154, i32* %r3.global-to-local, align 4
  %v7_15158 = icmp ult i32 %v0_15158, 2
  %v2_1523c = add i32 %v0_15244, -12
  %v4_1523c = sub i32 11, %v0_15244
  %v5_1523c = and i32 %v4_1523c, %v0_15244
  %v6_1523c = icmp slt i32 %v5_1523c, 0
  store i1 %v6_1523c, i1* %cpsr_v.global-to-local, align 1
  %v7_1523c = icmp slt i32 %v2_1523c, 0
  store i1 %v7_1523c, i1* %cpsr_n.global-to-local, align 1
  %v8_1523c = icmp eq i32 %v0_15244, 12
  store i1 %v8_1523c, i1* %cpsr_z.global-to-local, align 1
  %v5_15240 = icmp slt i32 %v0_15244, 12
  br i1 %v7_15158, label %dec_label_pc_1523c, label %dec_label_pc_15160

dec_label_pc_15160:                               ; preds = %dec_label_pc_15150
  %v8_15158 = icmp eq i32 %v0_15158, 2
  br i1 %v8_15158, label %dec_label_pc_151d0, label %dec_label_pc_15164

dec_label_pc_15164:                               ; preds = %dec_label_pc_15160
  br i1 %v5_15240, label %dec_label_pc_151b0, label %dec_label_pc_1516c

dec_label_pc_1516c:                               ; preds = %dec_label_pc_15164
  store i32 %v2_1523c, i32* %r2.global-to-local, align 4
  %v3_15170 = load i32, i32* @r4, align 4
  store i32 %v3_15170, i32* %stack_var_-12, align 4
  %v6_15170 = load i32, i32* @r5, align 4
  store i32 %v6_15170, i32* %stack_var_-8, align 4
  %v9_15170 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15174

dec_label_pc_15174:                               ; preds = %dec_label_pc_15174.dec_label_pc_15174_crit_edge, %dec_label_pc_1516c
  %v0_15198 = phi i32 [ %v1_15198, %dec_label_pc_15174.dec_label_pc_15174_crit_edge ], [ %v0_1519830, %dec_label_pc_1516c ]
  %v0_15178 = phi i32 [ %v0_15178.pre, %dec_label_pc_15174.dec_label_pc_15174_crit_edge ], [ %v1_15150, %dec_label_pc_1516c ]
  %v0_15174 = phi i32 [ %v0_15174.pre, %dec_label_pc_15174.dec_label_pc_15174_crit_edge ], [ %v2_15154, %dec_label_pc_1516c ]
  %v3_15174 = mul i32 %v0_15174, 256
  store i32 %v3_15174, i32* %lr.global-to-local, align 4
  %v1_15178 = add i32 %v0_15178, -4
  %v2_15178 = inttoptr i32 %v1_15178 to i32*
  %v3_15178 = load i32, i32* %v2_15178, align 4
  store i32 %v3_15178, i32* %r3.global-to-local, align 4
  %v4_15178 = add i32 %v0_15178, -8
  %v5_15178 = inttoptr i32 %v4_15178 to i32*
  %v6_15178 = load i32, i32* %v5_15178, align 4
  store i32 %v6_15178, i32* %r4.global-to-local, align 4
  %v7_15178 = add i32 %v0_15178, -12
  %v8_15178 = inttoptr i32 %v7_15178 to i32*
  %v9_15178 = load i32, i32* %v8_15178, align 4
  store i32 %v9_15178, i32* %r5.global-to-local, align 4
  %v10_15178 = add i32 %v0_15178, -16
  %v11_15178 = inttoptr i32 %v10_15178 to i32*
  %v12_15178 = load i32, i32* %v11_15178, align 4
  store i32 %v10_15178, i32* %r1.global-to-local, align 4
  %v4_1517c = udiv i32 %v12_15178, 16777216
  %v5_1517c = or i32 %v4_1517c, %v3_15174
  store i32 %v5_1517c, i32* %lr.global-to-local, align 4
  %v3_15180 = mul i32 %v12_15178, 256
  %v4_15184 = udiv i32 %v9_15178, 16777216
  %v5_15184 = or i32 %v3_15180, %v4_15184
  store i32 %v5_15184, i32* @ip, align 4
  %v3_15188 = mul i32 %v9_15178, 256
  %v4_1518c = udiv i32 %v6_15178, 16777216
  %v5_1518c = or i32 %v3_15188, %v4_1518c
  store i32 %v5_1518c, i32* %r5.global-to-local, align 4
  %v3_15190 = mul i32 %v6_15178, 256
  %v4_15194 = udiv i32 %v3_15178, 16777216
  %v5_15194 = or i32 %v3_15190, %v4_15194
  store i32 %v5_15194, i32* %r4.global-to-local, align 4
  %v1_15198 = add i32 %v0_15198, -16
  %v2_15198 = inttoptr i32 %v1_15198 to i32*
  store i32 %v5_15194, i32* %v2_15198, align 4
  %v4_15198 = add i32 %v0_15198, -12
  %v5_15198 = inttoptr i32 %v4_15198 to i32*
  %v6_15198 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15198, i32* %v5_15198, align 4
  %v7_15198 = add i32 %v0_15198, -8
  %v8_15198 = inttoptr i32 %v7_15198 to i32*
  %v9_15198 = load i32, i32* @ip, align 4
  store i32 %v9_15198, i32* %v8_15198, align 4
  %v10_15198 = add i32 %v0_15198, -4
  %v11_15198 = inttoptr i32 %v10_15198 to i32*
  %v12_15198 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15198, i32* %v11_15198, align 4
  store i32 %v1_15198, i32* %r0.global-to-local, align 4
  %v0_1519c = load i32, i32* %r2.global-to-local, align 4
  %v2_1519c = add i32 %v0_1519c, -16
  store i32 %v2_1519c, i32* %r2.global-to-local, align 4
  %v6_151a0 = icmp slt i32 %v0_1519c, 16
  br i1 %v6_151a0, label %dec_label_pc_151a4, label %dec_label_pc_15174.dec_label_pc_15174_crit_edge

dec_label_pc_15174.dec_label_pc_15174_crit_edge:  ; preds = %dec_label_pc_15174
  %v0_15174.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_15178.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15174

dec_label_pc_151a4:                               ; preds = %dec_label_pc_15174
  %v2_151a4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_151a4, i32* @r4, align 4
  %v5_151a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_151a4, i32* @r5, align 4
  store i32 %v9_15170, i32* @lr, align 4
  %v2_151a8 = add i32 %v0_1519c, -4
  store i32 %v2_151a8, i32* %r2.global-to-local, align 4
  %v4_151a8 = add i32 %v0_1519c, 2147483632
  %v5_151a8 = and i32 %v2_151a8, %v4_151a8
  %v6_151a8 = icmp slt i32 %v5_151a8, 0
  store i1 %v6_151a8, i1* %cpsr_v.global-to-local, align 1
  %v7_151a8 = icmp slt i32 %v2_151a8, 0
  store i1 %v7_151a8, i1* %cpsr_n.global-to-local, align 1
  %v8_151a8 = icmp eq i32 %v2_151a8, 0
  store i1 %v8_151a8, i1* %cpsr_z.global-to-local, align 1
  %v5_151ac = icmp slt i32 %v2_1519c, -12
  br i1 %v5_151ac, label %dec_label_pc_151c8, label %dec_label_pc_151b0

dec_label_pc_151b0:                               ; preds = %dec_label_pc_151a4, %dec_label_pc_15164, %dec_label_pc_151b0
  %v1_151bc = phi i32 [ %v5_151bc, %dec_label_pc_151b0 ], [ %v1_15198, %dec_label_pc_151a4 ], [ %v0_1519830, %dec_label_pc_15164 ]
  %v0_151b0 = load i32, i32* %r3.global-to-local, align 4
  %v3_151b0 = mul i32 %v0_151b0, 256
  store i32 %v3_151b0, i32* %ip.global-to-local, align 4
  %v0_151b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_151b4 = add i32 %v0_151b4, -4
  %v2_151b4 = inttoptr i32 %v1_151b4 to i32*
  %v3_151b4 = load i32, i32* %v2_151b4, align 4
  store i32 %v3_151b4, i32* %r3.global-to-local, align 4
  store i32 %v1_151b4, i32* %r1.global-to-local, align 4
  %v4_151b8 = udiv i32 %v3_151b4, 16777216
  %v5_151b8 = or i32 %v4_151b8, %v3_151b0
  store i32 %v5_151b8, i32* @ip, align 4
  %v2_151bc = add i32 %v1_151bc, -4
  %v3_151bc = inttoptr i32 %v2_151bc to i32*
  store i32 %v5_151b8, i32* %v3_151bc, align 4
  %v4_151bc = load i32, i32* %r0.global-to-local, align 4
  %v5_151bc = add i32 %v4_151bc, -4
  store i32 %v5_151bc, i32* %r0.global-to-local, align 4
  %v0_151c0 = load i32, i32* %r2.global-to-local, align 4
  %v2_151c0 = add i32 %v0_151c0, -4
  store i32 %v2_151c0, i32* %r2.global-to-local, align 4
  %v6_151c4 = icmp slt i32 %v0_151c0, 4
  br i1 %v6_151c4, label %dec_label_pc_151c8.loopexit, label %dec_label_pc_151b0

dec_label_pc_151c8.loopexit:                      ; preds = %dec_label_pc_151b0
  %v4_151c0 = sub i32 3, %v0_151c0
  %v5_151c0 = and i32 %v4_151c0, %v0_151c0
  %v6_151c0 = icmp slt i32 %v5_151c0, 0
  %v7_151c0 = icmp slt i32 %v2_151c0, 0
  store i1 %v6_151c0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_151c0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_151c8

dec_label_pc_151c8:                               ; preds = %dec_label_pc_151c8.loopexit, %dec_label_pc_151a4
  %v2_1510c62 = phi i32 [ %v5_151bc, %dec_label_pc_151c8.loopexit ], [ %v1_15198, %dec_label_pc_151a4 ]
  %v0_150fc58 = phi i32 [ %v2_151c0, %dec_label_pc_151c8.loopexit ], [ %v2_151a8, %dec_label_pc_151a4 ]
  %v0_151c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_151c8 = add i32 %v0_151c8, 3
  store i32 %v1_151c8, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_151d0:                               ; preds = %dec_label_pc_15160
  br i1 %v5_15240, label %dec_label_pc_1521c, label %dec_label_pc_151d8

dec_label_pc_151d8:                               ; preds = %dec_label_pc_151d0
  store i32 %v2_1523c, i32* %r2.global-to-local, align 4
  %v3_151dc = load i32, i32* @r4, align 4
  store i32 %v3_151dc, i32* %stack_var_-12, align 4
  %v6_151dc = load i32, i32* @r5, align 4
  store i32 %v6_151dc, i32* %stack_var_-8, align 4
  %v9_151dc = load i32, i32* @lr, align 4
  br label %dec_label_pc_151e0

dec_label_pc_151e0:                               ; preds = %dec_label_pc_151e0.dec_label_pc_151e0_crit_edge, %dec_label_pc_151d8
  %v0_15204 = phi i32 [ %v1_15204, %dec_label_pc_151e0.dec_label_pc_151e0_crit_edge ], [ %v0_1519830, %dec_label_pc_151d8 ]
  %v0_151e4 = phi i32 [ %v0_151e4.pre, %dec_label_pc_151e0.dec_label_pc_151e0_crit_edge ], [ %v1_15150, %dec_label_pc_151d8 ]
  %v0_151e0 = phi i32 [ %v0_151e0.pre, %dec_label_pc_151e0.dec_label_pc_151e0_crit_edge ], [ %v2_15154, %dec_label_pc_151d8 ]
  %v3_151e0 = mul i32 %v0_151e0, 65536
  store i32 %v3_151e0, i32* %lr.global-to-local, align 4
  %v1_151e4 = add i32 %v0_151e4, -4
  %v2_151e4 = inttoptr i32 %v1_151e4 to i32*
  %v3_151e4 = load i32, i32* %v2_151e4, align 4
  store i32 %v3_151e4, i32* %r3.global-to-local, align 4
  %v4_151e4 = add i32 %v0_151e4, -8
  %v5_151e4 = inttoptr i32 %v4_151e4 to i32*
  %v6_151e4 = load i32, i32* %v5_151e4, align 4
  store i32 %v6_151e4, i32* %r4.global-to-local, align 4
  %v7_151e4 = add i32 %v0_151e4, -12
  %v8_151e4 = inttoptr i32 %v7_151e4 to i32*
  %v9_151e4 = load i32, i32* %v8_151e4, align 4
  store i32 %v9_151e4, i32* %r5.global-to-local, align 4
  %v10_151e4 = add i32 %v0_151e4, -16
  %v11_151e4 = inttoptr i32 %v10_151e4 to i32*
  %v12_151e4 = load i32, i32* %v11_151e4, align 4
  store i32 %v10_151e4, i32* %r1.global-to-local, align 4
  %v4_151e8 = udiv i32 %v12_151e4, 65536
  %v5_151e8 = or i32 %v4_151e8, %v3_151e0
  store i32 %v5_151e8, i32* %lr.global-to-local, align 4
  %v3_151ec = mul i32 %v12_151e4, 65536
  %v4_151f0 = udiv i32 %v9_151e4, 65536
  %v5_151f0 = or i32 %v3_151ec, %v4_151f0
  store i32 %v5_151f0, i32* @ip, align 4
  %v3_151f4 = mul i32 %v9_151e4, 65536
  %v4_151f8 = udiv i32 %v6_151e4, 65536
  %v5_151f8 = or i32 %v3_151f4, %v4_151f8
  store i32 %v5_151f8, i32* %r5.global-to-local, align 4
  %v3_151fc = mul i32 %v6_151e4, 65536
  %v4_15200 = udiv i32 %v3_151e4, 65536
  %v5_15200 = or i32 %v3_151fc, %v4_15200
  store i32 %v5_15200, i32* %r4.global-to-local, align 4
  %v1_15204 = add i32 %v0_15204, -16
  %v2_15204 = inttoptr i32 %v1_15204 to i32*
  store i32 %v5_15200, i32* %v2_15204, align 4
  %v4_15204 = add i32 %v0_15204, -12
  %v5_15204 = inttoptr i32 %v4_15204 to i32*
  %v6_15204 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15204, i32* %v5_15204, align 4
  %v7_15204 = add i32 %v0_15204, -8
  %v8_15204 = inttoptr i32 %v7_15204 to i32*
  %v9_15204 = load i32, i32* @ip, align 4
  store i32 %v9_15204, i32* %v8_15204, align 4
  %v10_15204 = add i32 %v0_15204, -4
  %v11_15204 = inttoptr i32 %v10_15204 to i32*
  %v12_15204 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15204, i32* %v11_15204, align 4
  store i32 %v1_15204, i32* %r0.global-to-local, align 4
  %v0_15208 = load i32, i32* %r2.global-to-local, align 4
  %v2_15208 = add i32 %v0_15208, -16
  store i32 %v2_15208, i32* %r2.global-to-local, align 4
  %v6_1520c = icmp slt i32 %v0_15208, 16
  br i1 %v6_1520c, label %dec_label_pc_15210, label %dec_label_pc_151e0.dec_label_pc_151e0_crit_edge

dec_label_pc_151e0.dec_label_pc_151e0_crit_edge:  ; preds = %dec_label_pc_151e0
  %v0_151e0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_151e4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_151e0

dec_label_pc_15210:                               ; preds = %dec_label_pc_151e0
  %v2_15210 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15210, i32* @r4, align 4
  %v5_15210 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_15210, i32* @r5, align 4
  store i32 %v9_151dc, i32* @lr, align 4
  %v2_15214 = add i32 %v0_15208, -4
  store i32 %v2_15214, i32* %r2.global-to-local, align 4
  %v4_15214 = add i32 %v0_15208, 2147483632
  %v5_15214 = and i32 %v2_15214, %v4_15214
  %v6_15214 = icmp slt i32 %v5_15214, 0
  store i1 %v6_15214, i1* %cpsr_v.global-to-local, align 1
  %v7_15214 = icmp slt i32 %v2_15214, 0
  store i1 %v7_15214, i1* %cpsr_n.global-to-local, align 1
  %v8_15214 = icmp eq i32 %v2_15214, 0
  store i1 %v8_15214, i1* %cpsr_z.global-to-local, align 1
  %v5_15218 = icmp slt i32 %v2_15208, -12
  br i1 %v5_15218, label %dec_label_pc_15234, label %dec_label_pc_1521c

dec_label_pc_1521c:                               ; preds = %dec_label_pc_15210, %dec_label_pc_151d0, %dec_label_pc_1521c
  %v1_15228 = phi i32 [ %v5_15228, %dec_label_pc_1521c ], [ %v1_15204, %dec_label_pc_15210 ], [ %v0_1519830, %dec_label_pc_151d0 ]
  %v0_1521c = load i32, i32* %r3.global-to-local, align 4
  %v3_1521c = mul i32 %v0_1521c, 65536
  store i32 %v3_1521c, i32* %ip.global-to-local, align 4
  %v0_15220 = load i32, i32* %r1.global-to-local, align 4
  %v1_15220 = add i32 %v0_15220, -4
  %v2_15220 = inttoptr i32 %v1_15220 to i32*
  %v3_15220 = load i32, i32* %v2_15220, align 4
  store i32 %v3_15220, i32* %r3.global-to-local, align 4
  store i32 %v1_15220, i32* %r1.global-to-local, align 4
  %v4_15224 = udiv i32 %v3_15220, 65536
  %v5_15224 = or i32 %v4_15224, %v3_1521c
  store i32 %v5_15224, i32* @ip, align 4
  %v2_15228 = add i32 %v1_15228, -4
  %v3_15228 = inttoptr i32 %v2_15228 to i32*
  store i32 %v5_15224, i32* %v3_15228, align 4
  %v4_15228 = load i32, i32* %r0.global-to-local, align 4
  %v5_15228 = add i32 %v4_15228, -4
  store i32 %v5_15228, i32* %r0.global-to-local, align 4
  %v0_1522c = load i32, i32* %r2.global-to-local, align 4
  %v2_1522c = add i32 %v0_1522c, -4
  store i32 %v2_1522c, i32* %r2.global-to-local, align 4
  %v6_15230 = icmp slt i32 %v0_1522c, 4
  br i1 %v6_15230, label %dec_label_pc_15234.loopexit, label %dec_label_pc_1521c

dec_label_pc_15234.loopexit:                      ; preds = %dec_label_pc_1521c
  %v4_1522c = sub i32 3, %v0_1522c
  %v5_1522c = and i32 %v4_1522c, %v0_1522c
  %v6_1522c = icmp slt i32 %v5_1522c, 0
  %v7_1522c = icmp slt i32 %v2_1522c, 0
  store i1 %v6_1522c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1522c, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15234

dec_label_pc_15234:                               ; preds = %dec_label_pc_15234.loopexit, %dec_label_pc_15210
  %v2_1510c63 = phi i32 [ %v5_15228, %dec_label_pc_15234.loopexit ], [ %v1_15204, %dec_label_pc_15210 ]
  %v0_150fc59 = phi i32 [ %v2_1522c, %dec_label_pc_15234.loopexit ], [ %v2_15214, %dec_label_pc_15210 ]
  %v0_15234 = load i32, i32* %r1.global-to-local, align 4
  %v1_15234 = add i32 %v0_15234, 2
  store i32 %v1_15234, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_1523c:                               ; preds = %dec_label_pc_15150
  br i1 %v5_15240, label %dec_label_pc_15288, label %dec_label_pc_15244

dec_label_pc_15244:                               ; preds = %dec_label_pc_1523c
  store i32 %v2_1523c, i32* %r2.global-to-local, align 4
  %v3_15248 = load i32, i32* @r4, align 4
  store i32 %v3_15248, i32* %stack_var_-12, align 4
  %v6_15248 = load i32, i32* @r5, align 4
  store i32 %v6_15248, i32* %stack_var_-8, align 4
  %v9_15248 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1524c

dec_label_pc_1524c:                               ; preds = %dec_label_pc_1524c.dec_label_pc_1524c_crit_edge, %dec_label_pc_15244
  %v0_15270 = phi i32 [ %v1_15270, %dec_label_pc_1524c.dec_label_pc_1524c_crit_edge ], [ %v0_1519830, %dec_label_pc_15244 ]
  %v0_15250 = phi i32 [ %v0_15250.pre, %dec_label_pc_1524c.dec_label_pc_1524c_crit_edge ], [ %v1_15150, %dec_label_pc_15244 ]
  %v0_1524c = phi i32 [ %v0_1524c.pre, %dec_label_pc_1524c.dec_label_pc_1524c_crit_edge ], [ %v2_15154, %dec_label_pc_15244 ]
  %v3_1524c = mul i32 %v0_1524c, 16777216
  store i32 %v3_1524c, i32* %lr.global-to-local, align 4
  %v1_15250 = add i32 %v0_15250, -4
  %v2_15250 = inttoptr i32 %v1_15250 to i32*
  %v3_15250 = load i32, i32* %v2_15250, align 4
  store i32 %v3_15250, i32* %r3.global-to-local, align 4
  %v4_15250 = add i32 %v0_15250, -8
  %v5_15250 = inttoptr i32 %v4_15250 to i32*
  %v6_15250 = load i32, i32* %v5_15250, align 4
  store i32 %v6_15250, i32* %r4.global-to-local, align 4
  %v7_15250 = add i32 %v0_15250, -12
  %v8_15250 = inttoptr i32 %v7_15250 to i32*
  %v9_15250 = load i32, i32* %v8_15250, align 4
  store i32 %v9_15250, i32* %r5.global-to-local, align 4
  %v10_15250 = add i32 %v0_15250, -16
  %v11_15250 = inttoptr i32 %v10_15250 to i32*
  %v12_15250 = load i32, i32* %v11_15250, align 4
  store i32 %v10_15250, i32* %r1.global-to-local, align 4
  %v4_15254 = udiv i32 %v12_15250, 256
  %v5_15254 = or i32 %v4_15254, %v3_1524c
  store i32 %v5_15254, i32* %lr.global-to-local, align 4
  %v3_15258 = mul i32 %v12_15250, 16777216
  %v4_1525c = udiv i32 %v9_15250, 256
  %v5_1525c = or i32 %v3_15258, %v4_1525c
  store i32 %v5_1525c, i32* @ip, align 4
  %v3_15260 = mul i32 %v9_15250, 16777216
  %v4_15264 = udiv i32 %v6_15250, 256
  %v5_15264 = or i32 %v3_15260, %v4_15264
  store i32 %v5_15264, i32* %r5.global-to-local, align 4
  %v3_15268 = mul i32 %v6_15250, 16777216
  %v4_1526c = udiv i32 %v3_15250, 256
  %v5_1526c = or i32 %v3_15268, %v4_1526c
  store i32 %v5_1526c, i32* %r4.global-to-local, align 4
  %v1_15270 = add i32 %v0_15270, -16
  %v2_15270 = inttoptr i32 %v1_15270 to i32*
  store i32 %v5_1526c, i32* %v2_15270, align 4
  %v4_15270 = add i32 %v0_15270, -12
  %v5_15270 = inttoptr i32 %v4_15270 to i32*
  %v6_15270 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15270, i32* %v5_15270, align 4
  %v7_15270 = add i32 %v0_15270, -8
  %v8_15270 = inttoptr i32 %v7_15270 to i32*
  %v9_15270 = load i32, i32* @ip, align 4
  store i32 %v9_15270, i32* %v8_15270, align 4
  %v10_15270 = add i32 %v0_15270, -4
  %v11_15270 = inttoptr i32 %v10_15270 to i32*
  %v12_15270 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15270, i32* %v11_15270, align 4
  store i32 %v1_15270, i32* %r0.global-to-local, align 4
  %v0_15274 = load i32, i32* %r2.global-to-local, align 4
  %v2_15274 = add i32 %v0_15274, -16
  store i32 %v2_15274, i32* %r2.global-to-local, align 4
  %v6_15278 = icmp slt i32 %v0_15274, 16
  br i1 %v6_15278, label %dec_label_pc_1527c, label %dec_label_pc_1524c.dec_label_pc_1524c_crit_edge

dec_label_pc_1524c.dec_label_pc_1524c_crit_edge:  ; preds = %dec_label_pc_1524c
  %v0_1524c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_15250.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1524c

dec_label_pc_1527c:                               ; preds = %dec_label_pc_1524c
  %v2_1527c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1527c, i32* @r4, align 4
  %v5_1527c = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_1527c, i32* @r5, align 4
  store i32 %v9_15248, i32* @lr, align 4
  %v2_15280 = add i32 %v0_15274, -4
  store i32 %v2_15280, i32* %r2.global-to-local, align 4
  %v4_15280 = add i32 %v0_15274, 2147483632
  %v5_15280 = and i32 %v2_15280, %v4_15280
  %v6_15280 = icmp slt i32 %v5_15280, 0
  store i1 %v6_15280, i1* %cpsr_v.global-to-local, align 1
  %v7_15280 = icmp slt i32 %v2_15280, 0
  store i1 %v7_15280, i1* %cpsr_n.global-to-local, align 1
  %v8_15280 = icmp eq i32 %v2_15280, 0
  store i1 %v8_15280, i1* %cpsr_z.global-to-local, align 1
  %v5_15284 = icmp slt i32 %v2_15274, -12
  br i1 %v5_15284, label %dec_label_pc_152a0, label %dec_label_pc_15288

dec_label_pc_15288:                               ; preds = %dec_label_pc_1527c, %dec_label_pc_1523c, %dec_label_pc_15288
  %v1_15294 = phi i32 [ %v5_15294, %dec_label_pc_15288 ], [ %v1_15270, %dec_label_pc_1527c ], [ %v0_1519830, %dec_label_pc_1523c ]
  %v0_15288 = load i32, i32* %r3.global-to-local, align 4
  %v3_15288 = mul i32 %v0_15288, 16777216
  store i32 %v3_15288, i32* %ip.global-to-local, align 4
  %v0_1528c = load i32, i32* %r1.global-to-local, align 4
  %v1_1528c = add i32 %v0_1528c, -4
  %v2_1528c = inttoptr i32 %v1_1528c to i32*
  %v3_1528c = load i32, i32* %v2_1528c, align 4
  store i32 %v3_1528c, i32* %r3.global-to-local, align 4
  store i32 %v1_1528c, i32* %r1.global-to-local, align 4
  %v4_15290 = udiv i32 %v3_1528c, 256
  %v5_15290 = or i32 %v4_15290, %v3_15288
  store i32 %v5_15290, i32* @ip, align 4
  %v2_15294 = add i32 %v1_15294, -4
  %v3_15294 = inttoptr i32 %v2_15294 to i32*
  store i32 %v5_15290, i32* %v3_15294, align 4
  %v4_15294 = load i32, i32* %r0.global-to-local, align 4
  %v5_15294 = add i32 %v4_15294, -4
  store i32 %v5_15294, i32* %r0.global-to-local, align 4
  %v0_15298 = load i32, i32* %r2.global-to-local, align 4
  %v2_15298 = add i32 %v0_15298, -4
  store i32 %v2_15298, i32* %r2.global-to-local, align 4
  %v6_1529c = icmp slt i32 %v0_15298, 4
  br i1 %v6_1529c, label %dec_label_pc_152a0.loopexit, label %dec_label_pc_15288

dec_label_pc_152a0.loopexit:                      ; preds = %dec_label_pc_15288
  %v4_15298 = sub i32 3, %v0_15298
  %v5_15298 = and i32 %v4_15298, %v0_15298
  %v6_15298 = icmp slt i32 %v5_15298, 0
  %v7_15298 = icmp slt i32 %v2_15298, 0
  store i1 %v6_15298, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15298, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_152a0

dec_label_pc_152a0:                               ; preds = %dec_label_pc_152a0.loopexit, %dec_label_pc_1527c
  %v2_1510c64 = phi i32 [ %v5_15294, %dec_label_pc_152a0.loopexit ], [ %v1_15270, %dec_label_pc_1527c ]
  %v0_150fc60 = phi i32 [ %v2_15298, %dec_label_pc_152a0.loopexit ], [ %v2_15280, %dec_label_pc_1527c ]
  %v0_152a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_152a0 = add i32 %v0_152a0, 1
  store i32 %v1_152a0, i32* %r1.global-to-local, align 4
  br label %bb141

; uselistorder directives
  uselistorder i32 %v5_15294, { 0, 2, 1 }
  uselistorder i32 %v3_15288, { 1, 0 }
  uselistorder i32 %v2_15280, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15270, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15250, { 1, 0 }
  uselistorder i32 %v3_1524c, { 1, 0 }
  uselistorder i32 %v0_15250, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15270, { 3, 2, 1, 0 }
  uselistorder i32 %v5_15228, { 0, 2, 1 }
  uselistorder i32 %v3_1521c, { 1, 0 }
  uselistorder i32 %v2_15214, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15204, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_151e4, { 1, 0 }
  uselistorder i32 %v3_151e0, { 1, 0 }
  uselistorder i32 %v0_151e4, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15204, { 3, 2, 1, 0 }
  uselistorder i32 %v5_151bc, { 0, 2, 1 }
  uselistorder i32 %v3_151b0, { 1, 0 }
  uselistorder i32 %v2_151a8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15198, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15178, { 1, 0 }
  uselistorder i32 %v3_15174, { 1, 0 }
  uselistorder i32 %v0_15178, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15198, { 3, 2, 1, 0 }
  uselistorder i1 %v5_15240, { 2, 0, 1 }
  uselistorder i32 %v0_15158, { 1, 0 }
  uselistorder i32 %v0_15244, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_1519830, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_15148, { 2, 1, 0 }
  uselistorder i32 %v0_15148, { 2, 0, 1 }
  uselistorder i32 %v2_15140, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_15140, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15140, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1519831, { 2, 1, 0 }
  uselistorder i32 %v11_1511c, { 1, 0 }
  uselistorder i32 %v7_1511c, { 1, 0 }
  uselistorder i32 %v1_150fc, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_150fc, { 1, 2, 0, 3 }
  uselistorder i32 %v2_15100, { 1, 0 }
  uselistorder i32 %v7_150f4, { 0, 2, 1 }
  uselistorder i32 %v10_150f0, { 1, 0 }
  uselistorder i32 %v9_150e8, { 1, 0, 2 }
  uselistorder i32 %v6_150e4, { 1, 0 }
  uselistorder i32 %v2_150dc, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_150dc, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_150ec, { 0, 3, 2, 1 }
  uselistorder i32 %v7_150d0, { 0, 2, 1 }
  uselistorder i32 %v13_150cc, { 1, 0 }
  uselistorder i32 %v4_150c8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_150c8, { 2, 0, 1 }
  uselistorder i32 %v6_150d0, { 0, 3, 2, 1 }
  uselistorder i32 %v7_150c0, { 0, 2, 1 }
  uselistorder i32 %v16_150bc, { 1, 0 }
  uselistorder i32 %v4_150b8, { 1, 2, 0 }
  uselistorder i32 %v0_150c8.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_150c0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_150ac, { 0, 3, 2, 1 }
  uselistorder i32 %v10_150a8, { 1, 0 }
  uselistorder i32 %v1_150a4, { 1, 0 }
  uselistorder i32 %v10_150a0, { 1, 0 }
  uselistorder i32 %v0_150a0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_150a4, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_15098, { 0, 2, 1 }
  uselistorder i32 %v2_1508c, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_1508c, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_150a448, { 1, 2, 0 }
  uselistorder i32 %v1_15084, { 2, 1, 0 }
  uselistorder i32 %v1_1507c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_15074, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_15070, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_1506c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_1506c, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v4_15058, { 0, 2, 1 }
  uselistorder i32 %v3_1504c, { 1, 0 }
  uselistorder i32 %v2_15044, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v12_15034, { 1, 0, 3, 2 }
  uselistorder i32 %v8_15014, { 1, 0, 2 }
  uselistorder i32 %v5_15014, { 1, 0, 2 }
  uselistorder i32 %v2_15014, { 1, 0, 2 }
  uselistorder i32 %v3_15010, { 1, 0 }
  uselistorder i32 %v0_15014, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15034, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_14fec, { 0, 2, 1 }
  uselistorder i32 %v3_14fe0, { 1, 0 }
  uselistorder i32 %v2_14fd8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v12_14fc8, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14fa8, { 1, 0, 2 }
  uselistorder i32 %v5_14fa8, { 1, 0, 2 }
  uselistorder i32 %v2_14fa8, { 1, 0, 2 }
  uselistorder i32 %v3_14fa4, { 1, 0 }
  uselistorder i32 %v0_14fa8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14fc8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_14f80, { 0, 2, 1 }
  uselistorder i32 %v3_14f74, { 1, 0 }
  uselistorder i32 %v2_14f6c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v12_14f5c, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14f3c, { 1, 0, 2 }
  uselistorder i32 %v5_14f3c, { 1, 0, 2 }
  uselistorder i32 %v2_14f3c, { 1, 0, 2 }
  uselistorder i32 %v3_14f38, { 1, 0 }
  uselistorder i32 %v0_14f3c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14f5c, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_15004, { 2, 0, 1 }
  uselistorder i32 %v0_15008, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_14f5c74, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_14f0c, { 1, 0 }
  uselistorder i32 %v0_14f0c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_14f04, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_14f04, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14f04, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_14f5c75, { 2, 1, 0 }
  uselistorder i32 %v1_14ee4, { 1, 0, 2 }
  uselistorder i32 %v1_14ebc, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_14ebc, { 1, 2, 0, 3 }
  uselistorder i32 %v8_14ea8, { 1, 0, 2 }
  uselistorder i32 %v6_14ea4, { 1, 0 }
  uselistorder i32 %v2_14e9c, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_14e9c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_14eac, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_14e94, { 0, 2, 1 }
  uselistorder i32 %v3_14e94, { 3, 0, 1, 2 }
  uselistorder i1 %v0_14e94, { 1, 0 }
  uselistorder i1 %v1_14e94, { 1, 0 }
  uselistorder i32 %v3_14e90, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_14e88, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v4_14e74, { 1, 2, 0 }
  uselistorder i32 %v12_14e68, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14e5c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14e60, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_14e50, { 0, 2, 1 }
  uselistorder i32 %v2_14e48, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_14e48, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v1_14e40, { 1, 0 }
  uselistorder i32 %v1_14e38, { 2, 1, 0 }
  uselistorder i32 %v2_14e30, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_14e30, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v2_14e20, { 1, 0 }
  uselistorder i32 %v1_14e20, { 1, 5, 6, 3, 4, 0, 7, 9, 2, 8, 10 }
  uselistorder i32 %v0_14e20, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 25, 26, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r3.global-to-local, { 0, 37, 1, 2, 3, 38, 4, 5, 6, 39, 35, 36, 40, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32* %r2.global-to-local, { 0, 27, 1, 2, 3, 4, 5, 28, 6, 7, 8, 9, 10, 67, 68, 69, 70, 71, 11, 29, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 30, 31, 62, 32, 33, 34, 35, 36, 63, 37, 38, 39, 40, 41, 64, 42, 43, 44, 45, 46, 65, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 0, 12, 2, 4, 6, 8, 5, 13, 7, 9, 11, 65, 10, 64, 63, 66, 14, 19, 15, 16, 17, 18, 20, 21, 23, 22, 24, 25, 34, 26, 27, 35, 28, 36, 29, 37, 30, 31, 32, 33, 38, 41, 39, 51, 40, 42, 45, 43, 52, 44, 46, 49, 47, 53, 48, 50, 54, 55, 56, 58, 57, 59, 60, 61, 62 }
  uselistorder i32* %r0.global-to-local, { 0, 21, 1, 2, 22, 3, 4, 34, 36, 5, 6, 7, 8, 9, 23, 10, 12, 11, 13, 14, 35, 15, 16, 24, 17, 18, 19, 20, 25, 26, 27, 29, 28, 30, 31, 32, 33 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 16, 17, 18, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 45, 8, 46, 10, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23, 0, 24, 1, 26, 2, 27, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 42, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 0, 23, 1, 25, 2, 26, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 47, 8, 48, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 0, 25, 1, 27, 2, 28, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 31, { 20, 22, 1, 0, 12, 14, 13, 15, 2, 6, 17, 23, 24, 25, 26, 21, 16, 7, 18, 19, 8, 9, 3, 10, 4, 5, 11 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 -2, { 12, 13, 11, 17, 0, 15, 1, 16, 2, 3, 10, 8, 9, 7, 6, 5, 4, 18, 19, 20, 21, 14 }
  uselistorder i32 65536, { 10, 9, 15, 11, 16, 12, 17, 13, 18, 14, 19, 20, 21, 25, 22, 26, 23, 27, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 59, 61, 1, 62, 63, 2, 64, 0, 3, 65, 66, 67, 68, 69, 72, 70, 71, 73, 74, 4, 75, 78, 79, 76, 80, 77, 81, 82, 83, 84, 85, 149, 87, 86, 150, 89, 88, 90, 92, 91, 94, 93, 151, 96, 95, 152, 98, 97, 99, 101, 100, 103, 102, 104, 105, 109, 110, 111, 112, 106, 107, 108, 113, 116, 117, 118, 114, 115, 119, 5, 120, 122, 123, 124, 121, 125, 6, 126, 130, 131, 132, 127, 128, 129, 133, 134, 135, 137, 136, 138, 7, 139, 141, 142, 140, 143, 8, 144, 146, 147, 145, 148 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2, 6 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 47, 46, 49, 48, 54, 50, 55, 51, 53, 52, 56, 59, 57, 60, 58, 62, 61, 64, 63, 66, 65, 67, 68, 69, 70, 73, 71, 74, 72, 75, 76, 78, 77, 84, 79, 85, 80, 86, 81, 87, 82, 88, 83, 89, 92, 93, 90, 91, 94, 95, 99, 96, 100, 97, 98, 101, 104, 105, 102, 103, 106, 107, 111, 108, 112, 109, 110, 113, 121, 114, 122, 115, 123, 116, 124, 125, 117, 126, 118, 127, 119, 128, 120, 132, 129, 133, 130, 134, 131, 135, 142, 136, 143, 144, 137, 145, 140, 146, 138, 147, 148, 139, 141, 149, 150, 154, 151, 155, 156, 152, 153, 157, 158, 159, 163, 160, 164, 161, 165, 162, 166, 167, 168, 173, 169, 174, 170, 175, 171, 176, 172, 177, 178, 179, 180, 181, 182, 184, 183, 185 }
  uselistorder i32* @r5, { 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 150, 151, 152, 154, 582, 583, 584, 585, 586, 0, 587, 588, 589, 590, 591, 592, 309, 310, 311, 312, 313, 314, 492, 493, 494, 495, 496, 497, 498, 505, 499, 500, 501, 502, 503, 504, 541, 542, 543, 550, 551, 552, 553, 544, 545, 546, 547, 548, 549, 21, 22, 23, 155, 156, 3, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 84, 85, 19, 20, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 104, 105, 106, 96, 97, 98, 99, 100, 101, 102, 103, 318, 319, 320, 321, 322, 323, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 1, 125, 126, 4, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 2, 140, 168, 169, 170, 171, 172, 7, 173, 174, 175, 176, 177, 178, 179, 180, 8, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 5, 484, 485, 486, 487, 488, 489, 490, 491, 554, 555, 556, 557, 558, 559, 560, 561, 6, 562, 563, 564, 565, 566, 567, 568, 569, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 301, 302, 303, 304, 305, 306, 307, 308, 315, 316, 317 }
  uselistorder i32 -3, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 -5, { 1, 0 }
  uselistorder i32 11, { 8, 9, 10, 22, 23, 1, 0, 12, 13, 14, 15, 11, 16, 2, 17, 3, 18, 19, 20, 21, 24, 25, 26, 27, 4, 28, 29, 30, 5, 31, 32, 33, 6, 34, 35, 36, 7, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 }
  uselistorder i32 -12, { 0, 12, 13, 1, 15, 16, 2, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 3, 4, 5, 22, 6, 23, 24 }
  uselistorder i32 48, { 0, 6, 7, 4, 5, 1, 8, 2, 3, 9 }
  uselistorder i32 40, { 1, 8, 2, 0, 3, 5, 6, 7, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 36, { 1, 20, 21, 10, 11, 0, 2, 12, 3, 13, 4, 14, 5, 15, 6, 16, 7, 17, 18, 8, 19, 9 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 2, 0 }
  uselistorder i32 -32, { 1, 0, 2, 3 }
  uselistorder i32 24, { 0, 71, 72, 36, 37, 1, 73, 74, 34, 35, 65, 40, 41, 66, 42, 53, 57, 38, 39, 60, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 61, 56, 62, 58, 59, 67, 68, 69, 63, 64, 33, 70, 15, 16, 17, 18, 2, 19, 20, 3, 21, 4, 5, 6, 7, 8, 9, 10, 77, 22, 11, 78, 23, 24, 12, 79, 25, 80, 81, 82, 26, 27, 13, 83, 28, 84, 29, 30, 14, 85, 31, 86, 87, 75, 32, 76 }
  uselistorder i32* @lr, { 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 103, 104, 105, 1, 106, 107, 108, 2, 109, 110, 111, 112, 113, 114, 115, 116, 20, 21, 117, 118, 119, 120, 121, 72, 73, 74, 75, 76, 77, 78, 79, 22, 23, 24, 25, 26, 6, 80, 4, 5, 81, 35, 36, 82, 46, 47, 48, 49, 50, 37, 38, 39, 40, 41, 7, 8, 9, 3, 14, 12, 13, 10, 11, 83, 84, 85, 86, 87, 88, 15, 16, 17, 18, 19, 27, 28, 29, 30, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 89, 90, 91, 92, 31, 32, 33, 34 }
  uselistorder i32 16, { 32, 33, 34, 182, 35, 183, 184, 36, 185, 186, 37, 187, 188, 189, 190, 191, 192, 95, 96, 76, 77, 100, 97, 98, 99, 101, 26, 102, 103, 5, 6, 7, 8, 9, 25, 10, 11, 0, 12, 13, 48, 80, 49, 81, 38, 50, 78, 79, 82, 84, 85, 28, 27, 75, 86, 14, 15, 24, 72, 16, 87, 17, 51, 83, 39, 88, 52, 89, 53, 90, 54, 91, 55, 92, 56, 93, 57, 94, 58, 59, 104, 105, 61, 106, 107, 108, 109, 110, 1, 60, 111, 112, 113, 63, 114, 115, 116, 117, 118, 2, 62, 119, 64, 120, 121, 122, 18, 123, 19, 124, 73, 20, 65, 66, 125, 126, 3, 41, 127, 40, 128, 67, 129, 130, 131, 21, 132, 22, 133, 74, 23, 68, 69, 134, 135, 4, 43, 136, 42, 137, 29, 139, 140, 141, 142, 70, 143, 144, 145, 146, 147, 148, 149, 150, 30, 151, 152, 153, 154, 156, 155, 157, 158, 159, 160, 161, 162, 163, 31, 164, 165, 166, 167, 168, 170, 169, 171, 172, 173, 174, 175, 176, 71, 177, 178, 179, 45, 180, 44, 47, 181, 46, 138 }
  uselistorder i32 20, { 119, 3, 120, 121, 0, 4, 122, 41, 42, 26, 27, 1, 43, 44, 45, 46, 17, 5, 28, 30, 6, 32, 7, 33, 34, 35, 36, 24, 25, 31, 18, 37, 19, 38, 29, 39, 40, 47, 48, 49, 8, 50, 51, 52, 53, 54, 55, 56, 57, 9, 58, 59, 60, 2, 61, 62, 63, 64, 20, 65, 66, 67, 68, 69, 70, 71, 72, 73, 21, 74, 75, 76, 77, 78, 79, 80, 82, 83, 10, 84, 85, 86, 87, 88, 89, 90, 11, 91, 92, 93, 94, 22, 23, 95, 13, 96, 12, 97, 98, 99, 100, 15, 101, 14, 102, 103, 104, 105, 106, 107, 108, 109, 16, 110, 111, 112, 113, 114, 115, 116, 117, 118, 81 }
  uselistorder i32 27, { 1, 0, 8, 2, 10, 6, 9, 3, 11, 4, 12, 5, 13, 7, 14 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 7, { 21, 22, 24, 63, 65, 0, 15, 29, 3, 17, 25, 18, 26, 19, 27, 16, 28, 1, 23, 30, 31, 20, 32, 33, 4, 34, 35, 5, 36, 37, 6, 38, 39, 7, 40, 41, 42, 43, 8, 44, 45, 46, 47, 9, 48, 49, 50, 51, 52, 10, 53, 54, 55, 56, 57, 11, 58, 59, 60, 61, 12, 62, 13, 14, 2, 64 }
  uselistorder i32 -8, { 16, 17, 18, 19, 20, 21, 15, 14, 7, 13, 12, 11, 10, 22, 23, 24, 25, 8, 26, 0, 29, 9, 27, 28, 6, 1, 2, 3, 5, 4 }
  uselistorder i32* @ip, { 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 2, 3, 55, 6, 7, 8, 9, 10, 11, 12, 1, 0, 4, 5 }
  uselistorder i1 false, { 93, 94, 95, 103, 87, 92, 104, 105, 89, 90, 91, 106, 86, 107, 108, 0, 98, 97, 99, 96, 1, 5, 4, 84, 66, 101, 85, 83, 88, 102, 67, 68, 69, 70, 71, 65, 64, 63, 62, 2, 3, 72, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 73, 74, 75, 76, 77, 78, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 100, 79, 80, 82, 81, 109 }
  uselistorder i32 4, { 70, 61, 62, 5, 396, 63, 397, 49, 6, 7, 64, 398, 65, 399, 400, 401, 402, 66, 403, 404, 405, 406, 67, 407, 408, 409, 410, 411, 8, 412, 413, 414, 415, 416, 68, 417, 48, 418, 419, 420, 421, 422, 423, 9, 10, 69, 424, 232, 233, 172, 173, 234, 235, 236, 425, 426, 427, 428, 429, 118, 119, 120, 50, 121, 122, 377, 379, 378, 375, 376, 345, 346, 347, 348, 380, 381, 382, 383, 349, 350, 351, 384, 385, 123, 124, 125, 126, 127, 41, 11, 12, 237, 238, 239, 240, 241, 242, 13, 14, 57, 15, 16, 58, 386, 387, 169, 17, 18, 88, 71, 301, 291, 51, 202, 203, 204, 176, 93, 177, 178, 179, 196, 197, 47, 46, 205, 174, 175, 180, 181, 90, 182, 183, 184, 91, 185, 92, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 89, 199, 200, 201, 198, 59, 206, 56, 55, 207, 19, 208, 20, 209, 210, 21, 22, 211, 212, 42, 213, 43, 218, 170, 219, 94, 220, 95, 222, 96, 223, 224, 221, 214, 97, 215, 216, 217, 388, 225, 54, 53, 52, 226, 98, 23, 24, 25, 26, 27, 227, 44, 228, 45, 229, 230, 231, 243, 244, 128, 245, 246, 247, 248, 129, 130, 1, 249, 99, 250, 72, 251, 252, 253, 131, 254, 255, 132, 133, 2, 100, 256, 73, 257, 74, 258, 259, 134, 260, 261, 262, 263, 264, 135, 136, 265, 266, 102, 267, 3, 101, 268, 75, 269, 103, 270, 271, 137, 272, 273, 274, 275, 276, 138, 139, 277, 278, 105, 279, 4, 104, 280, 76, 281, 106, 282, 28, 292, 293, 140, 294, 295, 296, 141, 142, 108, 297, 107, 299, 77, 300, 302, 143, 303, 304, 144, 145, 305, 78, 306, 79, 307, 308, 309, 310, 146, 311, 312, 313, 147, 148, 110, 314, 109, 80, 315, 81, 316, 317, 318, 319, 320, 321, 112, 322, 113, 323, 149, 324, 325, 326, 150, 151, 114, 327, 111, 328, 82, 329, 83, 330, 331, 332, 152, 153, 333, 154, 334, 335, 155, 156, 115, 336, 84, 337, 85, 338, 339, 340, 341, 342, 116, 343, 86, 344, 389, 390, 391, 392, 117, 394, 87, 395, 157, 352, 353, 29, 158, 354, 355, 30, 159, 356, 357, 31, 160, 358, 359, 32, 161, 360, 361, 33, 162, 60, 362, 363, 34, 364, 163, 365, 366, 35, 164, 367, 368, 36, 165, 369, 370, 37, 166, 371, 372, 38, 167, 373, 374, 39, 393, 283, 284, 285, 286, 40, 287, 288, 0, 289, 168, 290, 298, 171 }
  uselistorder i32* @r2, { 64, 65, 26, 9, 27, 29, 28, 30, 31, 32, 33, 7, 66, 1, 67, 72, 73, 76, 68, 55, 59, 60, 63, 61, 62, 56, 57, 58, 54, 14, 0, 74, 2, 75, 5, 34, 35, 36, 8, 10, 69, 70, 71, 3, 37, 38, 39, 6, 22, 23, 24, 4, 40, 48, 51, 52, 49, 50, 53, 15, 11, 12, 13, 18, 19, 16, 17, 20, 21, 25, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder label %dec_label_pc_15288, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1521c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_151b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15150, { 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb141, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_150dc, { 1, 0 }
  uselistorder label %.thread15, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %dec_label_pc_150a0, { 1, 0 }
  uselistorder label %dec_label_pc_1508c, { 1, 0 }
  uselistorder label %dec_label_pc_1504c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14fe0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14f74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14f14, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %.thread119, { 1, 0 }
  uselistorder label %bb131, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread117, { 1, 0 }
  uselistorder label %dec_label_pc_14e88, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_14e48, { 1, 0 }
}

define i32 @function_152a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_152a8:
  ret i32 %arg1
}

define i32 @function_152b0() local_unnamed_addr {
dec_label_pc_152b0:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_152b0 = load i32, i32* @r0, align 4
  %v2_152b0 = icmp eq i32 %v0_152b0, 0
  %v3_152b4 = load i32, i32* @r4, align 4
  store i32 %v3_152b4, i32* %stack_var_-20, align 4
  %v0_152b8 = load i32, i32* @r1, align 4
  br i1 %v2_152b0, label %dec_label_pc_15390, label %dec_label_pc_152cc.lr.ph

dec_label_pc_152cc:                               ; preds = %dec_label_pc_152cc.lr.ph, %dec_label_pc_15350
  %v1_15350 = phi i32 [ 0, %dec_label_pc_152cc.lr.ph ], [ %v5_15350, %dec_label_pc_15350 ]
  %v0_15354 = phi i32 [ 1, %dec_label_pc_152cc.lr.ph ], [ %v1_15354, %dec_label_pc_15350 ]
  %v0_152d4 = phi i32 [ %v0_152b0, %dec_label_pc_152cc.lr.ph ], [ %v0_152d425, %dec_label_pc_15350 ]
  %v1_152d4 = inttoptr i32 %v0_152d4 to i8*
  %v2_152d4 = load i8, i8* %v1_152d4, align 1
  %v3_152d4 = zext i8 %v2_152d4 to i32
  %v3_152d8 = mul nuw nsw i32 %v3_152d4, 2
  %v4_152d8 = add i32 %v3_152d8, %v2_152d0.pre
  %v5_152d8 = inttoptr i32 %v4_152d8 to i8*
  %v6_152d8 = load i8, i8* %v5_152d8, align 1
  %v1_152dc = and i8 %v6_152d8, 8
  %v2_152dc = icmp eq i8 %v1_152dc, 0
  br i1 %v2_152dc, label %dec_label_pc_15390, label %dec_label_pc_152e4

dec_label_pc_152e4:                               ; preds = %dec_label_pc_152cc
  br label %dec_label_pc_15304

dec_label_pc_152ec:                               ; preds = %dec_label_pc_15304
  %v3_152f0 = mul i32 %v0_15350, 10
  %v4_152f0 = add i32 %v3_15304, %v3_152f0
  %v1_152f4 = add i32 %v4_152f0, -48
  %v8_152fc = icmp sgt i32 %v1_152f4, 255
  br i1 %v8_152fc, label %dec_label_pc_15390, label %dec_label_pc_15300

dec_label_pc_15300:                               ; preds = %dec_label_pc_152ec
  %v1_15300 = add i32 %v0_15340, 1
  store i32 %v1_15300, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15304

dec_label_pc_15304:                               ; preds = %dec_label_pc_152e4, %dec_label_pc_15300
  %v0_15350 = phi i32 [ 0, %dec_label_pc_152e4 ], [ %v1_152f4, %dec_label_pc_15300 ]
  %v0_15340 = phi i32 [ %v0_152d4, %dec_label_pc_152e4 ], [ %v1_15300, %dec_label_pc_15300 ]
  %v1_15304 = inttoptr i32 %v0_15340 to i8*
  %v2_15304 = load i8, i8* %v1_15304, align 1
  %v3_15304 = zext i8 %v2_15304 to i32
  %v2_15308 = mul nuw nsw i32 %v3_15304, 2
  %v2_1530c = add i32 %v2_15308, %v2_152d0.pre
  %v3_15310 = inttoptr i32 %v2_1530c to i8*
  %v4_15310 = load i8, i8* %v3_15310, align 1
  %v6_15310 = zext i8 %v4_15310 to i32
  %v1_1531c = and i32 %v6_15310, 8
  %v2_1531c = icmp eq i32 %v1_1531c, 0
  br i1 %v2_1531c, label %dec_label_pc_15324, label %dec_label_pc_152ec

dec_label_pc_15324:                               ; preds = %dec_label_pc_15304
  %v8_15328 = icmp sgt i32 %v0_15354, 3
  br i1 %v8_15328, label %dec_label_pc_1533c, label %dec_label_pc_1532c

dec_label_pc_1532c:                               ; preds = %dec_label_pc_15324
  %v7_1532c = icmp eq i8 %v2_15304, 46
  br i1 %v7_1532c, label %dec_label_pc_15334, label %dec_label_pc_15390

dec_label_pc_15334:                               ; preds = %dec_label_pc_1532c
  %v1_15334 = add i32 %v0_15340, 1
  store i32 %v1_15334, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15350

dec_label_pc_1533c:                               ; preds = %dec_label_pc_15324
  %v2_1533c = icmp eq i8 %v2_15304, 0
  %v1_15340 = add i32 %v0_15340, 1
  store i32 %v1_15340, i32* %r0.global-to-local, align 4
  br i1 %v2_1533c, label %dec_label_pc_15350, label %dec_label_pc_15348

dec_label_pc_15348:                               ; preds = %dec_label_pc_1533c
  %v1_15348 = and i32 %v6_15310, 32
  %v2_15348 = icmp eq i32 %v1_15348, 0
  br i1 %v2_15348, label %dec_label_pc_15390, label %dec_label_pc_15350

dec_label_pc_15350:                               ; preds = %dec_label_pc_15348, %dec_label_pc_1533c, %dec_label_pc_15334
  %v0_152d425 = phi i32 [ %v1_15340, %dec_label_pc_15348 ], [ %v1_15340, %dec_label_pc_1533c ], [ %v1_15334, %dec_label_pc_15334 ]
  %v4_15350 = mul i32 %v1_15350, 256
  %v5_15350 = or i32 %v0_15350, %v4_15350
  %v1_15354 = add nuw nsw i32 %v0_15354, 1
  %v7_1535c = icmp slt i32 %v1_15354, 5
  br i1 %v7_1535c, label %dec_label_pc_152cc, label %dec_label_pc_15360

dec_label_pc_152cc.lr.ph:                         ; preds = %dec_label_pc_152b0
  %v2_152d0.pre = load i32, i32* bitcast (i32** @global_var_1dba8.445 to i32*), align 4
  br label %dec_label_pc_152cc

dec_label_pc_15360:                               ; preds = %dec_label_pc_15350
  %v2_15360 = icmp eq i32 %v0_152b8, 0
  br i1 %v2_15360, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_15360
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb40:                                             ; preds = %dec_label_pc_15360
  %v3_1537c = call i32 @llvm.bswap.i32(i32 %v5_15350)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_15388 = inttoptr i32 %v0_152b8 to i32*
  store i32 %v3_1537c, i32* %v3_15388, align 4
  %v2_1538c.pre = load i32, i32* %stack_var_-20, align 4
  %v17_1538c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb40
  %v17_1538c = phi i32 [ 1, %bb ], [ %v17_1538c.pre, %bb40 ]
  %v2_1538c = phi i32 [ %v3_152b4, %bb ], [ %v2_1538c.pre, %bb40 ]
  store i32 %v2_1538c, i32* @r4, align 4
  ret i32 %v17_1538c

dec_label_pc_15390:                               ; preds = %dec_label_pc_1532c, %dec_label_pc_15348, %dec_label_pc_152cc, %dec_label_pc_152ec, %dec_label_pc_152b0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_152b4, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_152d0.pre, { 1, 0 }
  uselistorder i32 %v1_15354, { 1, 0 }
  uselistorder i32 %v0_15340, { 0, 1, 3, 2 }
  uselistorder i32 %v3_152b4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 5, { 16, 27, 17, 5, 18, 6, 2, 20, 28, 21, 29, 22, 30, 19, 31, 3, 0, 32, 26, 23, 33, 24, 25, 34, 35, 7, 36, 37, 38, 8, 39, 40, 41, 42, 9, 43, 44, 45, 46, 10, 47, 51, 52, 53, 54, 11, 55, 56, 57, 58, 12, 59, 60, 61, 62, 63, 64, 65, 13, 66, 67, 68, 69, 70, 71, 72, 14, 73, 74, 75, 76, 77, 78, 79, 80, 15, 81, 4, 82, 48, 1, 49, 50 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 63, 64, 68, 71, 72, 73, 69, 70, 74, 75, 76, 77, 78, 476, 477, 79, 80, 81, 82, 83, 84, 85, 479, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 100, 99, 102, 474, 480, 107, 103, 106, 104, 105, 478, 109, 108, 110, 111, 112, 115, 114, 113, 116, 118, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 133, 142, 138, 143, 139, 135, 136, 140, 137, 144, 145, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 161, 160, 168, 163, 174, 175, 169, 164, 176, 177, 170, 165, 178, 171, 179, 172, 180, 173, 181, 166, 182, 167, 183, 184, 185, 186, 187, 188, 189, 192, 193, 196, 194, 190, 197, 195, 191, 200, 199, 198, 203, 204, 201, 205, 202, 206, 210, 207, 212, 211, 208, 209, 213, 472, 481, 214, 215, 216, 217, 218, 221, 219, 220, 223, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 243, 241, 237, 244, 242, 238, 247, 246, 245, 250, 251, 248, 252, 249, 253, 257, 254, 259, 258, 255, 256, 260, 473, 482, 261, 262, 263, 264, 265, 268, 266, 267, 270, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 287, 289, 290, 291, 295, 301, 296, 292, 297, 302, 298, 303, 299, 293, 304, 294, 305, 306, 300, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 317, 320, 323, 324, 322, 321, 325, 328, 327, 326, 335, 332, 336, 333, 329, 337, 334, 330, 331, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 348, 350, 351, 353, 352, 354, 355, 356, 357, 360, 367, 361, 362, 358, 363, 364, 365, 359, 368, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 381, 383, 384, 385, 389, 396, 390, 391, 397, 392, 386, 387, 393, 388, 394, 398, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 416, 418, 419, 420, 431, 426, 421, 432, 427, 433, 428, 434, 429, 422, 423, 424, 435, 436, 437, 438, 430, 425, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 450, 452, 453, 454, 455, 456, 457, 458, 460, 459, 461, 462, 463, 464, 465, 466, 468, 467, 469, 470, 471, 475 }
  uselistorder i32 32, { 51, 37, 38, 35, 47, 48, 41, 42, 46, 5, 4, 7, 6, 9, 8, 36, 34, 49, 50, 11, 10, 13, 12, 15, 14, 17, 16, 39, 43, 40, 19, 18, 20, 22, 21, 23, 24, 26, 25, 44, 45, 27, 0, 28, 1, 2, 3, 52, 53, 29, 54, 30, 31, 32, 33 }
  uselistorder i8 46, { 0, 2, 1 }
  uselistorder i32 3, { 42, 64, 65, 165, 66, 67, 68, 69, 70, 71, 76, 90, 166, 4, 158, 160, 161, 0, 72, 23, 73, 24, 162, 74, 43, 25, 29, 77, 46, 78, 2, 79, 80, 81, 82, 44, 5, 83, 75, 84, 47, 85, 26, 86, 27, 87, 28, 88, 45, 89, 48, 30, 49, 50, 51, 52, 1, 91, 92, 93, 94, 95, 96, 97, 7, 6, 53, 98, 31, 99, 100, 101, 102, 103, 9, 8, 54, 104, 32, 105, 106, 107, 108, 55, 109, 11, 10, 34, 110, 33, 111, 112, 113, 114, 56, 115, 13, 12, 36, 116, 35, 117, 57, 119, 120, 121, 122, 123, 124, 58, 125, 59, 126, 37, 127, 128, 129, 130, 131, 15, 14, 60, 38, 132, 133, 134, 135, 136, 137, 17, 16, 61, 138, 39, 139, 140, 141, 142, 143, 144, 145, 19, 18, 62, 146, 40, 147, 148, 149, 150, 151, 152, 153, 21, 20, 63, 154, 41, 155, 156, 157, 163, 164, 22, 159, 3, 118 }
  uselistorder i32 8, { 102, 139, 23, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 24, 156, 67, 68, 69, 70, 74, 71, 72, 73, 157, 135, 134, 132, 133, 121, 122, 123, 136, 137, 138, 124, 125, 126, 7, 27, 28, 25, 26, 17, 18, 20, 21, 29, 158, 75, 76, 77, 78, 8, 9, 47, 19, 10, 11, 16, 12, 35, 55, 30, 13, 14, 15, 48, 37, 51, 38, 52, 39, 53, 36, 54, 22, 56, 57, 58, 59, 61, 62, 49, 50, 46, 40, 63, 41, 64, 42, 65, 66, 60, 79, 80, 81, 3, 82, 83, 84, 4, 85, 86, 87, 88, 89, 90, 91, 5, 92, 93, 94, 95, 96, 97, 98, 6, 103, 31, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 127, 32, 128, 33, 129, 34, 130, 43, 131, 0, 1, 45, 99, 100, 44, 101, 2 }
  uselistorder i32 255, { 16, 20, 21, 17, 22, 18, 23, 24, 2, 19, 25, 4, 26, 3, 1, 5, 6, 27, 0, 28, 7, 10, 11, 9, 12, 8, 13, 14, 15 }
  uselistorder i32 10, { 10, 46, 47, 0, 3, 4, 26, 27, 48, 1, 28, 11, 31, 33, 12, 32, 13, 34, 14, 35, 6, 36, 37, 29, 30, 38, 25, 39, 15, 40, 16, 41, 17, 42, 43, 18, 5, 19, 20, 44, 21, 45, 8, 49, 50, 51, 52, 53, 54, 22, 55, 56, 57, 23, 58, 60, 61, 2, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 7, 75, 9, 76, 59, 24 }
  uselistorder i8 0, { 7, 0, 1, 20, 4, 21, 22, 2, 10, 23, 24, 25, 26, 27, 28, 29, 8, 30, 31, 32, 33, 34, 3, 5, 6, 11, 35, 36, 37, 38, 39, 17, 40, 43, 18, 41, 42, 16, 44, 45, 46, 47, 48, 12, 13, 9, 14, 49, 15, 19, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32 2, { 7, 146, 262, 263, 69, 264, 265, 61, 266, 60, 267, 59, 150, 84, 85, 210, 86, 211, 87, 212, 8, 147, 268, 65, 88, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 149, 18, 19, 20, 21, 22, 90, 91, 89, 62, 63, 92, 166, 93, 2, 1, 94, 152, 95, 153, 96, 154, 160, 80, 151, 79, 155, 78, 156, 77, 157, 76, 158, 75, 159, 74, 165, 161, 162, 163, 164, 70, 97, 167, 23, 24, 168, 169, 170, 98, 25, 26, 27, 28, 29, 171, 30, 31, 148, 172, 99, 173, 32, 100, 259, 102, 174, 104, 175, 103, 176, 101, 105, 177, 33, 34, 106, 178, 71, 107, 108, 111, 109, 110, 112, 113, 114, 115, 116, 117, 64, 68, 179, 180, 181, 246, 247, 182, 183, 184, 185, 186, 187, 3, 35, 36, 37, 38, 39, 40, 118, 188, 81, 189, 190, 191, 192, 193, 4, 41, 42, 43, 44, 45, 46, 120, 119, 194, 195, 47, 196, 197, 66, 198, 122, 199, 5, 48, 49, 50, 51, 52, 123, 200, 121, 201, 202, 53, 203, 204, 67, 205, 125, 206, 6, 54, 55, 56, 57, 58, 126, 207, 124, 208, 213, 214, 215, 216, 217, 218, 219, 128, 220, 127, 221, 222, 223, 224, 225, 130, 129, 226, 227, 228, 229, 230, 231, 232, 233, 132, 234, 131, 235, 236, 237, 238, 134, 239, 135, 240, 241, 242, 243, 136, 244, 133, 245, 248, 249, 250, 251, 252, 253, 138, 254, 137, 255, 256, 139, 140, 82, 141, 257, 260, 142, 143, 83, 144, 261, 72, 258, 145, 73, 209 }
  uselistorder i32* @r1, { 49, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 1, 98, 99, 23, 24, 26, 25, 6, 7, 100, 0, 101, 47, 48, 18, 103, 66, 71, 72, 75, 73, 74, 67, 68, 69, 70, 65, 76, 102, 11, 5, 50, 27, 77, 28, 3, 78, 29, 30, 51, 52, 12, 8, 9, 10, 14, 13, 79, 15, 16, 17, 19, 20, 21, 22, 31, 32, 33, 4, 34, 60, 61, 2, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 80 }
  uselistorder label %dec_label_pc_15390, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_15304, { 1, 0 }
}

define i32 @function_1539c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1539c:
  %v3_1539c = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_153a4 = call i32 @function_12c48()
  %v0_153a8 = load i32, i32* @r4, align 4
  store i32 %v3_1539c, i32* @r4, align 4
  %v2_153b0 = call i32 @function_12cf0(i32 %v0_153a4, i32 %v0_153a8)
  ret i32 %v2_153b0

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_12cf0, { 5, 4, 3, 0, 2, 1 }
  uselistorder i32 ()* @function_12c48, { 0, 3, 1, 2 }
}

define i32 @function_153b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_153b4:
  %v1_153b4 = add i32 %arg1, 28
  %v2_153b4 = inttoptr i32 %v1_153b4 to i32*
  %v3_153b4 = load i32, i32* %v2_153b4, align 4
  %v1_153bc = add i32 %arg1, 44
  %v2_153bc = inttoptr i32 %v1_153bc to i32*
  %v3_153bc = load i32, i32* %v2_153bc, align 4
  store i32 %v3_153b4, i32* @global_var_1de24.498, align 4
  store i32 %v3_153bc, i32* @global_var_1de28.500, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 13, 0, 5, 6, 2, 3, 11, 12, 1, 4, 7, 8, 9, 10 }
  uselistorder i32 28, { 35, 0, 25, 26, 7, 8, 34, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 2, 24, 6, 23, 3, 4, 5, 27, 28, 29, 30, 31, 32, 33 }
}

define i32 @function_153d8(i32* %arg1) local_unnamed_addr {
dec_label_pc_153d8:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_153e0 = call i32 @brk(i32* %arg1)
  %v3_153e4 = icmp ult i32 %v2_153e0, %tmp
  store i32 %v2_153e0, i32* @global_var_1dc64.495, align 4
  br i1 %v3_153e4, label %dec_label_pc_153f8, label %dec_label_pc_15408

dec_label_pc_153f8:                               ; preds = %dec_label_pc_153d8
  %v0_153f8 = call i32 @function_131c4()
  %v2_15400 = inttoptr i32 %v0_153f8 to i32*
  store i32 12, i32* %v2_15400, align 4
  br label %dec_label_pc_15408

dec_label_pc_15408:                               ; preds = %dec_label_pc_153d8, %dec_label_pc_153f8
  %v0_15408 = phi i32 [ 0, %dec_label_pc_153d8 ], [ -1, %dec_label_pc_153f8 ]
  ret i32 %v0_15408

; uselistorder directives
  uselistorder i32 12, { 15, 10, 109, 110, 111, 113, 114, 115, 116, 11, 112, 117, 118, 119, 120, 121, 122, 123, 56, 57, 24, 25, 58, 16, 17, 104, 105, 106, 0, 101, 107, 7, 108, 8, 102, 4, 103, 18, 19, 6, 59, 60, 20, 61, 62, 41, 35, 38, 42, 27, 28, 29, 43, 26, 30, 31, 32, 33, 34, 36, 39, 40, 37, 44, 45, 46, 9, 47, 48, 50, 51, 53, 52, 21, 54, 5, 55, 49, 97, 63, 64, 65, 66, 22, 67, 68, 69, 70, 71, 23, 72, 73, 74, 75, 76, 77, 12, 78, 79, 80, 81, 82, 83, 13, 84, 85, 14, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 1, 2, 3 }
  uselistorder i32 ()* @function_131c4, { 19, 33, 27, 41, 10, 9, 8, 7, 40, 39, 38, 6, 57, 26, 25, 45, 44, 18, 11, 32, 31, 17, 21, 20, 16, 30, 56, 43, 55, 54, 15, 14, 37, 36, 35, 53, 42, 29, 5, 4, 52, 51, 34, 22, 50, 3, 13, 49, 24, 12, 23, 0, 2, 1, 48, 47, 46, 28 }
  uselistorder i32* @global_var_1dc64.495, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_15408, { 1, 0 }
}

define i32 @function_15414(i32 %arg1) local_unnamed_addr {
dec_label_pc_15414:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15418 = load i32, i32* @global_var_1da38.458, align 4
  %v7_1541c = icmp eq i32 %v3_15418, -1
  %v3_15420 = load i32, i32* @r4, align 4
  store i32 %v3_15420, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_1da38.458 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_1541c, label %bb, label %.preheader

bb:                                               ; preds = %dec_label_pc_15414
  store i32 %v3_15420, i32* %r4.global-to-local, align 4
  %v9_15428 = load i32, i32* @r0, align 4
  ret i32 %v9_15428

.preheader:                                       ; preds = %dec_label_pc_15414, %.preheader
  %v0_15430 = phi i32 [ %v3_15434, %.preheader ], [ %v3_15418, %dec_label_pc_15414 ]
  call void @__pseudo_branch(i32 %v0_15430)
  %v0_15434 = load i32, i32* %r4.global-to-local, align 4
  %v1_15434 = add i32 %v0_15434, -4
  %v2_15434 = inttoptr i32 %v1_15434 to i32*
  %v3_15434 = load i32, i32* %v2_15434, align 4
  store i32 %v1_15434, i32* %r4.global-to-local, align 4
  %v3_15438 = icmp eq i32 %v3_15434, -1
  br i1 %v3_15438, label %dec_label_pc_15440, label %.preheader

dec_label_pc_15440:                               ; preds = %.preheader
  %v2_15440 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15440, i32* %r4.global-to-local, align 4
  %v8_15440 = load i32, i32* @r0, align 4
  ret i32 %v8_15440

; uselistorder directives
  uselistorder i32 %v3_15434, { 1, 0 }
  uselistorder i32 %v3_15418, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 45, 16, 46, 47, 48, 3, 17, 18, 19, 49, 50, 51, 4, 20, 21, 22, 52, 53, 54, 5, 23, 24, 55, 15, 14, 56, 57, 58, 13, 12, 11, 10, 25, 26, 27, 28, 29, 0, 30, 1, 31, 2, 59, 9, 32, 36, 37, 43, 38, 33, 34, 39, 40, 41, 42, 44, 8, 7, 35, 6 }
  uselistorder i32 -1, { 156, 0, 97, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 157, 98, 236, 99, 275, 100, 266, 258, 101, 297, 102, 298, 103, 299, 104, 300, 144, 91, 259, 260, 105, 261, 262, 106, 301, 1, 158, 2, 107, 267, 268, 159, 160, 254, 255, 145, 161, 146, 162, 3, 4, 90, 82, 83, 163, 164, 165, 89, 237, 166, 238, 5, 6, 108, 276, 109, 272, 110, 273, 111, 277, 112, 264, 113, 239, 114, 256, 115, 240, 116, 241, 117, 278, 118, 279, 119, 167, 155, 120, 168, 121, 242, 122, 257, 123, 265, 124, 302, 303, 125, 243, 126, 244, 127, 263, 128, 271, 129, 245, 130, 304, 131, 280, 132, 246, 133, 269, 134, 281, 135, 270, 136, 274, 137, 305, 92, 306, 169, 170, 171, 172, 173, 174, 175, 176, 7, 8, 9, 10, 138, 139, 11, 177, 247, 17, 178, 147, 230, 84, 18, 179, 180, 95, 96, 93, 94, 12, 181, 16, 182, 183, 184, 233, 234, 185, 186, 187, 231, 140, 232, 19, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 235, 14, 208, 13, 209, 210, 15, 211, 212, 213, 20, 214, 215, 141, 248, 216, 249, 85, 21, 22, 148, 250, 150, 251, 23, 149, 252, 24, 25, 26, 27, 151, 253, 28, 29, 30, 31, 217, 32, 86, 218, 33, 143, 34, 35, 36, 219, 37, 38, 39, 40, 41, 42, 43, 44, 45, 87, 46, 47, 48, 49, 50, 51, 220, 52, 53, 54, 221, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 222, 67, 142, 68, 69, 70, 223, 71, 72, 73, 224, 74, 75, 76, 225, 77, 78, 79, 80, 226, 227, 228, 229, 81, 88, 152, 153, 154 }
  uselistorder i32* @global_var_1da38.458, { 1, 0 }
  uselistorder i32 1, { 589, 120, 375, 432, 978, 979, 980, 981, 982, 397, 590, 333, 1069, 382, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 593, 592, 591, 346, 347, 350, 349, 345, 344, 348, 342, 351, 343, 352, 594, 304, 303, 299, 301, 300, 302, 305, 298, 756, 92, 89, 91, 90, 595, 93, 596, 98, 99, 597, 53, 117, 598, 340, 599, 119, 600, 327, 601, 341, 898, 899, 602, 319, 315, 320, 316, 317, 321, 318, 900, 901, 902, 479, 277, 278, 274, 276, 275, 603, 328, 604, 97, 0, 608, 607, 606, 605, 201, 200, 480, 609, 167, 168, 398, 481, 610, 306, 611, 976, 616, 615, 614, 613, 612, 294, 295, 296, 297, 482, 617, 376, 876, 366, 877, 399, 618, 174, 180, 173, 177, 176, 179, 181, 175, 178, 1082, 400, 621, 620, 619, 326, 325, 622, 139, 140, 138, 141, 356, 357, 358, 359, 623, 136, 137, 135, 134, 133, 624, 625, 332, 331, 626, 401, 1056, 627, 290, 291, 483, 484, 371, 631, 630, 629, 628, 165, 164, 383, 632, 203, 633, 202, 170, 634, 171, 635, 169, 636, 292, 637, 121, 638, 293, 639, 116, 640, 132, 641, 54, 642, 983, 361, 88, 87, 86, 757, 758, 759, 760, 761, 762, 763, 1083, 84, 85, 81, 82, 83, 643, 485, 486, 644, 230, 229, 231, 228, 438, 903, 645, 273, 439, 647, 646, 240, 239, 648, 115, 649, 80, 650, 94, 651, 59, 60, 652, 204, 653, 142, 654, 104, 655, 118, 656, 155, 182, 657, 238, 658, 96, 659, 330, 660, 322, 661, 329, 662, 172, 336, 105, 440, 792, 793, 441, 1057, 1058, 360, 1059, 904, 905, 906, 367, 907, 665, 664, 663, 114, 111, 107, 108, 110, 109, 106, 112, 113, 1, 878, 879, 880, 881, 384, 984, 985, 385, 986, 667, 666, 324, 323, 908, 909, 910, 487, 668, 79, 78, 77, 76, 1060, 402, 403, 2, 478, 1061, 669, 73, 71, 74, 75, 72, 789, 791, 790, 488, 911, 335, 334, 1027, 166, 912, 913, 914, 162, 163, 987, 670, 158, 159, 160, 161, 1012, 1013, 671, 218, 217, 216, 215, 219, 988, 989, 672, 103, 102, 101, 100, 504, 766, 505, 767, 443, 768, 769, 506, 770, 405, 507, 508, 794, 780, 781, 786, 502, 764, 765, 503, 771, 498, 772, 773, 499, 500, 774, 775, 501, 496, 776, 777, 497, 494, 778, 779, 495, 492, 782, 783, 493, 490, 784, 785, 491, 489, 787, 788, 795, 509, 372, 796, 442, 797, 799, 800, 798, 801, 510, 802, 754, 404, 805, 803, 511, 804, 406, 806, 808, 809, 512, 810, 377, 33, 811, 32, 812, 31, 813, 30, 814, 29, 815, 28, 816, 27, 817, 26, 818, 25, 819, 24, 820, 23, 821, 407, 822, 34, 823, 22, 824, 21, 825, 408, 826, 35, 827, 20, 828, 19, 829, 18, 830, 17, 831, 16, 832, 15, 833, 36, 834, 37, 835, 38, 836, 14, 837, 409, 838, 13, 839, 410, 840, 12, 841, 11, 842, 411, 843, 10, 844, 39, 845, 9, 846, 8, 847, 412, 848, 413, 849, 7, 850, 6, 851, 5, 852, 4, 853, 414, 854, 3, 855, 40, 856, 415, 857, 416, 858, 373, 417, 859, 374, 418, 860, 419, 420, 755, 421, 861, 422, 423, 862, 424, 868, 869, 368, 513, 684, 683, 682, 681, 680, 679, 678, 677, 676, 583, 675, 674, 673, 250, 251, 256, 257, 249, 253, 258, 255, 254, 252, 248, 259, 260, 863, 864, 514, 865, 866, 515, 867, 685, 314, 313, 308, 312, 311, 310, 307, 309, 807, 516, 687, 686, 338, 339, 337, 1063, 386, 1062, 433, 688, 66, 67, 65, 64, 63, 69, 70, 62, 68, 990, 690, 689, 234, 235, 237, 233, 232, 236, 691, 445, 870, 871, 444, 872, 517, 519, 518, 520, 873, 874, 521, 522, 523, 524, 525, 526, 527, 528, 702, 701, 700, 699, 698, 697, 696, 695, 694, 588, 693, 692, 55, 56, 58, 57, 529, 369, 530, 703, 446, 875, 531, 532, 704, 533, 882, 426, 883, 884, 534, 425, 885, 535, 886, 536, 887, 537, 888, 538, 889, 539, 890, 540, 891, 541, 892, 542, 893, 543, 894, 544, 895, 545, 896, 546, 897, 370, 547, 720, 719, 718, 717, 716, 715, 714, 713, 712, 711, 710, 709, 708, 707, 706, 705, 188, 189, 190, 192, 191, 920, 42, 915, 548, 916, 41, 917, 434, 918, 378, 379, 919, 921, 435, 922, 724, 723, 722, 584, 585, 721, 1036, 447, 1037, 448, 1038, 43, 1039, 44, 45, 923, 924, 925, 926, 927, 928, 549, 929, 387, 550, 551, 930, 449, 931, 725, 124, 122, 123, 128, 129, 131, 130, 126, 127, 125, 932, 933, 427, 934, 935, 936, 552, 937, 388, 553, 451, 450, 554, 938, 555, 939, 726, 185, 186, 187, 184, 183, 940, 941, 428, 942, 943, 944, 556, 945, 389, 557, 456, 455, 558, 946, 452, 947, 453, 948, 454, 949, 731, 730, 729, 728, 727, 197, 196, 198, 199, 193, 195, 194, 950, 951, 429, 952, 953, 954, 559, 955, 390, 560, 464, 463, 561, 956, 462, 957, 457, 958, 458, 959, 459, 960, 460, 961, 562, 962, 461, 963, 736, 735, 734, 733, 732, 243, 244, 246, 245, 241, 242, 247, 991, 992, 993, 994, 995, 996, 380, 381, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 563, 1005, 1006, 564, 1007, 1010, 1008, 1009, 739, 738, 737, 262, 266, 265, 261, 269, 270, 272, 271, 263, 268, 267, 264, 1014, 1015, 1016, 1017, 1018, 565, 391, 566, 741, 740, 287, 283, 279, 280, 285, 286, 284, 281, 282, 1019, 1020, 1021, 430, 1022, 1023, 1024, 392, 567, 467, 466, 568, 1025, 465, 1026, 742, 222, 221, 224, 225, 227, 226, 220, 223, 1028, 1029, 1030, 431, 1031, 1032, 1033, 393, 569, 470, 469, 570, 1034, 468, 1035, 747, 746, 745, 744, 743, 205, 206, 207, 211, 213, 210, 214, 209, 208, 212, 1040, 1041, 1042, 571, 1043, 1044, 1045, 1046, 1047, 1048, 572, 1049, 394, 573, 472, 471, 574, 1050, 748, 147, 151, 154, 150, 153, 152, 148, 149, 1051, 436, 363, 1052, 575, 1054, 1053, 362, 576, 474, 473, 586, 749, 289, 288, 1064, 437, 365, 1065, 577, 1067, 1066, 364, 578, 476, 475, 587, 750, 157, 156, 1055, 477, 579, 751, 144, 145, 146, 143, 1068, 95, 964, 46, 965, 580, 968, 581, 969, 970, 966, 967, 971, 972, 973, 974, 395, 975, 396, 47, 50, 52, 48, 49, 51, 977, 582, 1011, 61, 752, 753, 355, 354, 353 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_15448() local_unnamed_addr {
dec_label_pc_15448:
  %v5_1544c = load i32, i32* @r0, align 4
  ret i32 %v5_1544c

; uselistorder directives
  uselistorder i32* @r0, { 5, 12, 13, 117, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 78, 79, 81, 80, 29, 164, 165, 36, 37, 38, 39, 18, 4, 9, 10, 115, 116, 30, 166, 167, 65, 169, 6, 25, 132, 14, 131, 128, 34, 130, 21, 129, 133, 168, 45, 26, 82, 83, 84, 85, 32, 19, 86, 87, 88, 89, 20, 170, 15, 17, 46, 11, 134, 16, 135, 136, 22, 90, 137, 23, 91, 24, 92, 93, 0, 40, 47, 41, 48, 42, 43, 44, 49, 52, 53, 54, 55, 56, 1, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 31, 74, 75, 76, 77, 94, 95, 96, 97, 98, 99, 100, 3, 101, 102, 103, 104, 105, 106, 107, 33, 108, 125, 126, 2, 109, 110, 111, 112, 118, 119, 120, 121, 122, 123, 124, 127, 113, 114, 8, 7, 27, 28, 35 }
}

define i32 @function_15450() local_unnamed_addr {
entry:
  %v3_15454 = load i32, i32* @r4, align 4
  %v0_1545c = call i32 @function_80b0()
  call void @__pseudo_branch(i32 %v3_15454)
  ret i32 %v0_1545c

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 0, 7, 12, 13, 9, 10, 11, 14, 2, 5, 6, 3, 4, 1, 8 }
  uselistorder i32 0, { 119, 0, 1241, 1242, 1243, 1244, 121, 120, 1245, 1397, 1398, 1399, 1400, 1401, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1402, 1403, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 38, 1422, 1423, 1424, 1425, 1426, 39, 1427, 1428, 1429, 40, 1430, 1431, 1432, 41, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1448, 1449, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 42, 1468, 1469, 1470, 1471, 1472, 43, 1473, 1474, 1475, 1476, 1477, 44, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1093, 1094, 366, 1095, 367, 646, 1347, 1348, 1349, 1350, 1227, 1096, 1097, 1491, 1492, 1493, 1494, 368, 1098, 1, 1099, 1100, 1101, 1495, 1496, 1497, 122, 1498, 69, 1499, 67, 68, 1500, 1501, 1502, 369, 1506, 370, 1517, 1519, 594, 311, 1520, 371, 1518, 372, 373, 2, 1503, 1504, 123, 1228, 326, 1229, 376, 328, 327, 1230, 1231, 1232, 1233, 375, 1235, 1236, 374, 1237, 1505, 1058, 1059, 1060, 1061, 1062, 1063, 125, 87, 1064, 70, 124, 126, 378, 1507, 379, 329, 1508, 1509, 1511, 1512, 377, 1353, 1355, 1356, 48, 312, 1357, 1354, 1351, 1352, 3, 1335, 1338, 1336, 1337, 313, 4, 1360, 1358, 1359, 314, 127, 1339, 1340, 1341, 1345, 1342, 1343, 380, 5, 1344, 6, 1367, 1368, 128, 1361, 1362, 1363, 1364, 1365, 1366, 7, 8, 1234, 647, 648, 649, 381, 9, 382, 1369, 1316, 590, 1317, 591, 1370, 1196, 650, 1065, 651, 652, 1371, 1372, 1246, 1521, 1522, 63, 1102, 383, 1103, 1104, 1105, 1106, 384, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 653, 1066, 1197, 1510, 654, 655, 1114, 1247, 656, 592, 1513, 73, 1514, 1395, 657, 1238, 1396, 1239, 1318, 1515, 1516, 10, 658, 88, 659, 660, 306, 305, 595, 74, 75, 76, 77, 602, 596, 50, 49, 89, 661, 662, 663, 664, 666, 665, 11, 1373, 1374, 308, 307, 597, 78, 79, 80, 81, 603, 598, 52, 51, 47, 60, 1375, 604, 1376, 1377, 1378, 82, 1379, 1380, 1381, 1382, 1383, 129, 599, 605, 600, 601, 1384, 606, 102, 130, 1115, 1116, 83, 1117, 1118, 607, 12, 315, 131, 132, 360, 53, 133, 385, 667, 71, 1119, 1120, 1386, 1385, 1387, 1388, 45, 134, 1389, 137, 136, 135, 361, 362, 363, 139, 138, 140, 386, 1121, 1122, 141, 1302, 1303, 103, 142, 1123, 143, 668, 144, 1277, 1278, 145, 1248, 1249, 674, 669, 90, 670, 622, 146, 147, 623, 624, 625, 626, 84, 671, 636, 620, 608, 621, 642, 643, 387, 627, 628, 609, 629, 630, 610, 631, 632, 611, 633, 634, 612, 635, 637, 613, 638, 645, 614, 639, 644, 640, 66, 54, 309, 310, 641, 593, 672, 388, 673, 317, 675, 389, 676, 679, 680, 316, 677, 678, 166, 165, 681, 682, 615, 64, 390, 683, 684, 686, 687, 688, 689, 690, 691, 692, 391, 693, 694, 695, 696, 59, 85, 697, 698, 699, 700, 701, 702, 703, 704, 167, 705, 706, 707, 708, 709, 168, 710, 711, 712, 713, 714, 715, 169, 716, 717, 170, 718, 719, 171, 720, 721, 722, 55, 723, 724, 725, 726, 172, 727, 728, 729, 173, 730, 91, 92, 731, 732, 733, 174, 734, 735, 736, 737, 175, 738, 739, 740, 741, 148, 742, 743, 744, 176, 745, 746, 747, 748, 177, 749, 750, 751, 752, 753, 178, 754, 755, 756, 757, 179, 758, 759, 760, 761, 180, 762, 763, 764, 765, 181, 766, 767, 768, 769, 182, 770, 771, 772, 773, 774, 183, 775, 776, 777, 778, 184, 779, 780, 781, 782, 185, 783, 784, 785, 786, 186, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 149, 804, 805, 806, 807, 187, 808, 809, 810, 811, 188, 812, 150, 189, 813, 814, 190, 815, 151, 191, 816, 817, 192, 818, 93, 94, 819, 820, 821, 193, 822, 823, 824, 825, 194, 826, 827, 828, 829, 195, 830, 831, 832, 833, 152, 834, 835, 836, 837, 153, 838, 839, 840, 841, 196, 842, 843, 844, 845, 846, 197, 847, 848, 849, 850, 154, 851, 852, 853, 854, 198, 855, 856, 857, 858, 199, 859, 860, 861, 155, 862, 863, 864, 865, 200, 866, 867, 868, 869, 156, 870, 871, 872, 157, 873, 874, 875, 876, 201, 877, 878, 879, 880, 158, 881, 882, 883, 884, 202, 885, 886, 887, 888, 203, 889, 890, 891, 892, 204, 893, 159, 205, 894, 895, 160, 896, 897, 898, 899, 206, 900, 901, 902, 903, 207, 904, 905, 906, 907, 908, 909, 910, 161, 911, 912, 913, 162, 914, 915, 916, 917, 208, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 209, 933, 934, 935, 936, 210, 937, 938, 211, 939, 940, 212, 941, 942, 943, 213, 944, 945, 946, 214, 947, 948, 949, 215, 950, 951, 216, 952, 953, 954, 217, 955, 956, 218, 957, 958, 219, 959, 960, 961, 962, 220, 963, 964, 221, 965, 966, 222, 967, 968, 223, 969, 970, 224, 971, 972, 225, 973, 974, 975, 226, 976, 163, 227, 977, 978, 979, 228, 980, 86, 95, 981, 982, 164, 983, 984, 229, 985, 986, 230, 987, 988, 989, 990, 231, 991, 992, 993, 994, 232, 995, 996, 997, 998, 233, 999, 1000, 234, 1001, 1002, 235, 1003, 1004, 1005, 1006, 236, 1007, 237, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 392, 1035, 393, 1036, 1039, 1040, 1041, 1042, 1043, 238, 1037, 239, 1038, 13, 240, 685, 1250, 1251, 1044, 1045, 241, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 330, 394, 1053, 65, 395, 1054, 14, 1055, 324, 1056, 396, 1057, 1067, 1068, 1069, 364, 245, 244, 616, 617, 365, 243, 242, 319, 323, 397, 1070, 246, 247, 1080, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 318, 398, 1081, 399, 1082, 400, 1083, 401, 1084, 402, 1085, 1086, 403, 1087, 1088, 1089, 1090, 331, 1091, 56, 1092, 248, 249, 404, 72, 1124, 1125, 1126, 1127, 322, 1128, 1129, 1130, 321, 1131, 1132, 1133, 1134, 98, 1135, 1137, 1136, 96, 97, 250, 320, 405, 1138, 334, 332, 333, 99, 251, 61, 252, 1140, 1141, 107, 104, 105, 106, 15, 1139, 1142, 1143, 1144, 1145, 1146, 1147, 18, 19, 20, 21, 22, 1148, 1149, 253, 336, 1150, 406, 1151, 407, 1152, 408, 1153, 409, 1154, 410, 1155, 411, 1156, 335, 1157, 254, 255, 256, 1159, 1160, 1158, 1162, 1163, 1161, 23, 24, 25, 26, 27, 1164, 257, 1165, 1166, 338, 1167, 412, 1168, 413, 1169, 414, 1170, 415, 1171, 416, 1172, 417, 1173, 337, 1174, 418, 1175, 259, 258, 260, 1177, 1178, 1176, 1179, 1180, 57, 1182, 1183, 1184, 1185, 419, 1186, 28, 29, 30, 31, 32, 1181, 261, 100, 1187, 1188, 343, 1189, 342, 1190, 341, 1191, 339, 1192, 340, 1193, 420, 1194, 421, 1195, 263, 262, 264, 1199, 1200, 1198, 1201, 1202, 58, 1204, 1205, 1206, 1207, 422, 1208, 33, 34, 35, 36, 37, 1203, 265, 101, 1209, 1210, 345, 1211, 344, 1212, 423, 1213, 1252, 111, 110, 108, 109, 1253, 1254, 62, 1255, 1256, 1257, 1258, 1259, 266, 1260, 1261, 424, 1262, 1263, 1264, 1265, 270, 267, 268, 269, 1266, 1267, 1268, 1269, 425, 1270, 1271, 348, 1273, 347, 1274, 346, 1275, 426, 1276, 1279, 1280, 114, 112, 113, 16, 1281, 1282, 1283, 1284, 271, 1285, 1286, 350, 349, 1287, 427, 1288, 272, 275, 274, 273, 1291, 1292, 1290, 1289, 428, 1294, 1293, 1295, 276, 1296, 1297, 353, 1298, 352, 1299, 351, 1300, 429, 1301, 277, 280, 279, 278, 1306, 1307, 1305, 1304, 1309, 1308, 1310, 1311, 281, 356, 1312, 355, 1313, 354, 1314, 430, 1315, 1319, 1320, 1321, 1322, 118, 115, 116, 117, 17, 1323, 1324, 1325, 282, 1326, 283, 1327, 1328, 359, 1329, 358, 1330, 357, 1331, 431, 1332, 288, 433, 286, 287, 284, 285, 1333, 290, 289, 1334, 434, 291, 432, 296, 436, 294, 295, 292, 293, 1390, 298, 297, 1391, 299, 435, 325, 1346, 1392, 300, 1393, 1214, 301, 1215, 1216, 302, 1217, 1218, 1219, 303, 437, 1220, 1221, 46, 1222, 1223, 1224, 1225, 1226, 438, 1240, 304, 1272, 1394, 618, 619, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537 }
  uselistorder i32* @r4, { 36, 668, 672, 673, 676, 677, 449, 450, 451, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 185, 62, 620, 621, 434, 694, 695, 696, 697, 698, 699, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 700, 701, 5, 702, 703, 704, 705, 719, 720, 721, 722, 34, 723, 32, 714, 715, 716, 717, 718, 706, 707, 708, 435, 436, 437, 438, 439, 440, 441, 442, 709, 710, 153, 154, 713, 622, 623, 624, 592, 6, 593, 594, 595, 7, 596, 8, 604, 605, 597, 9, 10, 598, 599, 600, 601, 602, 603, 625, 11, 633, 634, 626, 627, 628, 629, 630, 631, 632, 63, 64, 65, 66, 67, 68, 635, 636, 555, 556, 637, 638, 367, 368, 69, 70, 155, 156, 71, 72, 73, 74, 639, 640, 641, 642, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 75, 76, 157, 158, 369, 370, 711, 712, 2, 77, 78, 79, 80, 222, 223, 452, 453, 81, 82, 670, 671, 443, 444, 674, 675, 445, 446, 557, 558, 224, 225, 83, 84, 85, 86, 226, 227, 228, 229, 230, 643, 644, 645, 87, 88, 89, 496, 497, 498, 454, 455, 456, 90, 91, 37, 12, 92, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 4, 3, 50, 51, 49, 52, 53, 54, 55, 56, 57, 58, 59, 93, 94, 60, 61, 95, 96, 97, 98, 99, 100, 101, 102, 103, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 0, 125, 113, 114, 115, 116, 117, 118, 104, 105, 106, 107, 108, 646, 647, 648, 649, 457, 458, 459, 460, 461, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 13, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 14, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 33, 178, 179, 180, 181, 182, 183, 184, 231, 232, 233, 1, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 15, 251, 16, 252, 17, 253, 18, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 19, 278, 20, 279, 21, 280, 22, 281, 282, 283, 284, 285, 23, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 24, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 25, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 26, 516, 27, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 28, 536, 29, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 559, 560, 30, 561, 31, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 666, 667, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 663, 664, 665, 421, 422, 423, 424, 427, 425, 426, 428, 429, 430, 431, 432, 433, 447, 448, 35, 669 }
}

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @getppid() local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @unlink(i8*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @bind(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @getsockopt(i32, i32, i32, i32*, i32*) local_unnamed_addr

declare i32 @listen(i32, i32) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @recvfrom(i32, i32*, i32, i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @socket(i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @fstat(i32, %stat*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @times(%tms*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
